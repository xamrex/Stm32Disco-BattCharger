
STM32F429I-DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00022d44  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00002ae8  08022ef4  08022ef4  00032ef4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 00001552  080259dc  080259dc  000359dc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 0000004c  08026f30  08026f30  00036f30  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 00000190  08026f7c  08026f7c  00036f7c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 ExtFlashSection 000833f8  0802710c  0802710c  0003710c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  080aa504  080aa504  000c0168  2**0
                  CONTENTS
  8 .ARM          00000008  080aa504  080aa504  000ba504  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  080aa50c  080aa50c  000c0168  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000014  080aa50c  080aa50c  000ba50c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   00000008  080aa520  080aa520  000ba520  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         00000168  20000000  080aa528  000c0000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss          00017a90  20000168  080aa690  000c0168  2**2
                  ALLOC
 14 ._user_heap_stack 00001400  20017bf8  080aa690  000c7bf8  2**0
                  ALLOC
 15 .ARM.attributes 00000030  00000000  00000000  000c0168  2**0
                  CONTENTS, READONLY
 16 TouchGFX_Framebuffer 0004b000  d0000000  d0000000  000d0000  2**2
                  ALLOC
 17 .debug_line   000513a3  00000000  00000000  000c0198  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_info   000e9fec  00000000  00000000  0011153b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_abbrev 00014e56  00000000  00000000  001fb527  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_aranges 00002fc8  00000000  00000000  00210380  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_str    0011848b  00000000  00000000  00213348  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_ranges 000089e8  00000000  00000000  0032b7d8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_loc    0003935c  00000000  00000000  003341c0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_macro  00030538  00000000  00000000  0036d51c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .comment      000000cf  00000000  00000000  0039da54  2**0
                  CONTENTS, READONLY
 26 .debug_frame  00008c48  00000000  00000000  0039db24  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000168 	.word	0x20000168
 80001cc:	00000000 	.word	0x00000000
 80001d0:	08022edc 	.word	0x08022edc

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	2000016c 	.word	0x2000016c
 80001ec:	08022edc 	.word	0x08022edc

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <__aeabi_uldivmod>:
 8000290:	b953      	cbnz	r3, 80002a8 <__aeabi_uldivmod+0x18>
 8000292:	b94a      	cbnz	r2, 80002a8 <__aeabi_uldivmod+0x18>
 8000294:	2900      	cmp	r1, #0
 8000296:	bf08      	it	eq
 8000298:	2800      	cmpeq	r0, #0
 800029a:	bf1c      	itt	ne
 800029c:	f04f 31ff 	movne.w	r1, #4294967295
 80002a0:	f04f 30ff 	movne.w	r0, #4294967295
 80002a4:	f000 b974 	b.w	8000590 <__aeabi_idiv0>
 80002a8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002ac:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002b0:	f000 f806 	bl	80002c0 <__udivmoddi4>
 80002b4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002b8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002bc:	b004      	add	sp, #16
 80002be:	4770      	bx	lr

080002c0 <__udivmoddi4>:
 80002c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002c4:	9d08      	ldr	r5, [sp, #32]
 80002c6:	4604      	mov	r4, r0
 80002c8:	468e      	mov	lr, r1
 80002ca:	2b00      	cmp	r3, #0
 80002cc:	d14d      	bne.n	800036a <__udivmoddi4+0xaa>
 80002ce:	428a      	cmp	r2, r1
 80002d0:	4694      	mov	ip, r2
 80002d2:	d969      	bls.n	80003a8 <__udivmoddi4+0xe8>
 80002d4:	fab2 f282 	clz	r2, r2
 80002d8:	b152      	cbz	r2, 80002f0 <__udivmoddi4+0x30>
 80002da:	fa01 f302 	lsl.w	r3, r1, r2
 80002de:	f1c2 0120 	rsb	r1, r2, #32
 80002e2:	fa20 f101 	lsr.w	r1, r0, r1
 80002e6:	fa0c fc02 	lsl.w	ip, ip, r2
 80002ea:	ea41 0e03 	orr.w	lr, r1, r3
 80002ee:	4094      	lsls	r4, r2
 80002f0:	ea4f 481c 	mov.w	r8, ip, lsr #16
 80002f4:	0c21      	lsrs	r1, r4, #16
 80002f6:	fbbe f6f8 	udiv	r6, lr, r8
 80002fa:	fa1f f78c 	uxth.w	r7, ip
 80002fe:	fb08 e316 	mls	r3, r8, r6, lr
 8000302:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8000306:	fb06 f107 	mul.w	r1, r6, r7
 800030a:	4299      	cmp	r1, r3
 800030c:	d90a      	bls.n	8000324 <__udivmoddi4+0x64>
 800030e:	eb1c 0303 	adds.w	r3, ip, r3
 8000312:	f106 30ff 	add.w	r0, r6, #4294967295
 8000316:	f080 811f 	bcs.w	8000558 <__udivmoddi4+0x298>
 800031a:	4299      	cmp	r1, r3
 800031c:	f240 811c 	bls.w	8000558 <__udivmoddi4+0x298>
 8000320:	3e02      	subs	r6, #2
 8000322:	4463      	add	r3, ip
 8000324:	1a5b      	subs	r3, r3, r1
 8000326:	b2a4      	uxth	r4, r4
 8000328:	fbb3 f0f8 	udiv	r0, r3, r8
 800032c:	fb08 3310 	mls	r3, r8, r0, r3
 8000330:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000334:	fb00 f707 	mul.w	r7, r0, r7
 8000338:	42a7      	cmp	r7, r4
 800033a:	d90a      	bls.n	8000352 <__udivmoddi4+0x92>
 800033c:	eb1c 0404 	adds.w	r4, ip, r4
 8000340:	f100 33ff 	add.w	r3, r0, #4294967295
 8000344:	f080 810a 	bcs.w	800055c <__udivmoddi4+0x29c>
 8000348:	42a7      	cmp	r7, r4
 800034a:	f240 8107 	bls.w	800055c <__udivmoddi4+0x29c>
 800034e:	4464      	add	r4, ip
 8000350:	3802      	subs	r0, #2
 8000352:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000356:	1be4      	subs	r4, r4, r7
 8000358:	2600      	movs	r6, #0
 800035a:	b11d      	cbz	r5, 8000364 <__udivmoddi4+0xa4>
 800035c:	40d4      	lsrs	r4, r2
 800035e:	2300      	movs	r3, #0
 8000360:	e9c5 4300 	strd	r4, r3, [r5]
 8000364:	4631      	mov	r1, r6
 8000366:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800036a:	428b      	cmp	r3, r1
 800036c:	d909      	bls.n	8000382 <__udivmoddi4+0xc2>
 800036e:	2d00      	cmp	r5, #0
 8000370:	f000 80ef 	beq.w	8000552 <__udivmoddi4+0x292>
 8000374:	2600      	movs	r6, #0
 8000376:	e9c5 0100 	strd	r0, r1, [r5]
 800037a:	4630      	mov	r0, r6
 800037c:	4631      	mov	r1, r6
 800037e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000382:	fab3 f683 	clz	r6, r3
 8000386:	2e00      	cmp	r6, #0
 8000388:	d14a      	bne.n	8000420 <__udivmoddi4+0x160>
 800038a:	428b      	cmp	r3, r1
 800038c:	d302      	bcc.n	8000394 <__udivmoddi4+0xd4>
 800038e:	4282      	cmp	r2, r0
 8000390:	f200 80f9 	bhi.w	8000586 <__udivmoddi4+0x2c6>
 8000394:	1a84      	subs	r4, r0, r2
 8000396:	eb61 0303 	sbc.w	r3, r1, r3
 800039a:	2001      	movs	r0, #1
 800039c:	469e      	mov	lr, r3
 800039e:	2d00      	cmp	r5, #0
 80003a0:	d0e0      	beq.n	8000364 <__udivmoddi4+0xa4>
 80003a2:	e9c5 4e00 	strd	r4, lr, [r5]
 80003a6:	e7dd      	b.n	8000364 <__udivmoddi4+0xa4>
 80003a8:	b902      	cbnz	r2, 80003ac <__udivmoddi4+0xec>
 80003aa:	deff      	udf	#255	; 0xff
 80003ac:	fab2 f282 	clz	r2, r2
 80003b0:	2a00      	cmp	r2, #0
 80003b2:	f040 8092 	bne.w	80004da <__udivmoddi4+0x21a>
 80003b6:	eba1 010c 	sub.w	r1, r1, ip
 80003ba:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80003be:	fa1f fe8c 	uxth.w	lr, ip
 80003c2:	2601      	movs	r6, #1
 80003c4:	0c20      	lsrs	r0, r4, #16
 80003c6:	fbb1 f3f7 	udiv	r3, r1, r7
 80003ca:	fb07 1113 	mls	r1, r7, r3, r1
 80003ce:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 80003d2:	fb0e f003 	mul.w	r0, lr, r3
 80003d6:	4288      	cmp	r0, r1
 80003d8:	d908      	bls.n	80003ec <__udivmoddi4+0x12c>
 80003da:	eb1c 0101 	adds.w	r1, ip, r1
 80003de:	f103 38ff 	add.w	r8, r3, #4294967295
 80003e2:	d202      	bcs.n	80003ea <__udivmoddi4+0x12a>
 80003e4:	4288      	cmp	r0, r1
 80003e6:	f200 80cb 	bhi.w	8000580 <__udivmoddi4+0x2c0>
 80003ea:	4643      	mov	r3, r8
 80003ec:	1a09      	subs	r1, r1, r0
 80003ee:	b2a4      	uxth	r4, r4
 80003f0:	fbb1 f0f7 	udiv	r0, r1, r7
 80003f4:	fb07 1110 	mls	r1, r7, r0, r1
 80003f8:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 80003fc:	fb0e fe00 	mul.w	lr, lr, r0
 8000400:	45a6      	cmp	lr, r4
 8000402:	d908      	bls.n	8000416 <__udivmoddi4+0x156>
 8000404:	eb1c 0404 	adds.w	r4, ip, r4
 8000408:	f100 31ff 	add.w	r1, r0, #4294967295
 800040c:	d202      	bcs.n	8000414 <__udivmoddi4+0x154>
 800040e:	45a6      	cmp	lr, r4
 8000410:	f200 80bb 	bhi.w	800058a <__udivmoddi4+0x2ca>
 8000414:	4608      	mov	r0, r1
 8000416:	eba4 040e 	sub.w	r4, r4, lr
 800041a:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 800041e:	e79c      	b.n	800035a <__udivmoddi4+0x9a>
 8000420:	f1c6 0720 	rsb	r7, r6, #32
 8000424:	40b3      	lsls	r3, r6
 8000426:	fa22 fc07 	lsr.w	ip, r2, r7
 800042a:	ea4c 0c03 	orr.w	ip, ip, r3
 800042e:	fa20 f407 	lsr.w	r4, r0, r7
 8000432:	fa01 f306 	lsl.w	r3, r1, r6
 8000436:	431c      	orrs	r4, r3
 8000438:	40f9      	lsrs	r1, r7
 800043a:	ea4f 491c 	mov.w	r9, ip, lsr #16
 800043e:	fa00 f306 	lsl.w	r3, r0, r6
 8000442:	fbb1 f8f9 	udiv	r8, r1, r9
 8000446:	0c20      	lsrs	r0, r4, #16
 8000448:	fa1f fe8c 	uxth.w	lr, ip
 800044c:	fb09 1118 	mls	r1, r9, r8, r1
 8000450:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000454:	fb08 f00e 	mul.w	r0, r8, lr
 8000458:	4288      	cmp	r0, r1
 800045a:	fa02 f206 	lsl.w	r2, r2, r6
 800045e:	d90b      	bls.n	8000478 <__udivmoddi4+0x1b8>
 8000460:	eb1c 0101 	adds.w	r1, ip, r1
 8000464:	f108 3aff 	add.w	sl, r8, #4294967295
 8000468:	f080 8088 	bcs.w	800057c <__udivmoddi4+0x2bc>
 800046c:	4288      	cmp	r0, r1
 800046e:	f240 8085 	bls.w	800057c <__udivmoddi4+0x2bc>
 8000472:	f1a8 0802 	sub.w	r8, r8, #2
 8000476:	4461      	add	r1, ip
 8000478:	1a09      	subs	r1, r1, r0
 800047a:	b2a4      	uxth	r4, r4
 800047c:	fbb1 f0f9 	udiv	r0, r1, r9
 8000480:	fb09 1110 	mls	r1, r9, r0, r1
 8000484:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
 8000488:	fb00 fe0e 	mul.w	lr, r0, lr
 800048c:	458e      	cmp	lr, r1
 800048e:	d908      	bls.n	80004a2 <__udivmoddi4+0x1e2>
 8000490:	eb1c 0101 	adds.w	r1, ip, r1
 8000494:	f100 34ff 	add.w	r4, r0, #4294967295
 8000498:	d26c      	bcs.n	8000574 <__udivmoddi4+0x2b4>
 800049a:	458e      	cmp	lr, r1
 800049c:	d96a      	bls.n	8000574 <__udivmoddi4+0x2b4>
 800049e:	3802      	subs	r0, #2
 80004a0:	4461      	add	r1, ip
 80004a2:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 80004a6:	fba0 9402 	umull	r9, r4, r0, r2
 80004aa:	eba1 010e 	sub.w	r1, r1, lr
 80004ae:	42a1      	cmp	r1, r4
 80004b0:	46c8      	mov	r8, r9
 80004b2:	46a6      	mov	lr, r4
 80004b4:	d356      	bcc.n	8000564 <__udivmoddi4+0x2a4>
 80004b6:	d053      	beq.n	8000560 <__udivmoddi4+0x2a0>
 80004b8:	b15d      	cbz	r5, 80004d2 <__udivmoddi4+0x212>
 80004ba:	ebb3 0208 	subs.w	r2, r3, r8
 80004be:	eb61 010e 	sbc.w	r1, r1, lr
 80004c2:	fa01 f707 	lsl.w	r7, r1, r7
 80004c6:	fa22 f306 	lsr.w	r3, r2, r6
 80004ca:	40f1      	lsrs	r1, r6
 80004cc:	431f      	orrs	r7, r3
 80004ce:	e9c5 7100 	strd	r7, r1, [r5]
 80004d2:	2600      	movs	r6, #0
 80004d4:	4631      	mov	r1, r6
 80004d6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80004da:	f1c2 0320 	rsb	r3, r2, #32
 80004de:	40d8      	lsrs	r0, r3
 80004e0:	fa0c fc02 	lsl.w	ip, ip, r2
 80004e4:	fa21 f303 	lsr.w	r3, r1, r3
 80004e8:	4091      	lsls	r1, r2
 80004ea:	4301      	orrs	r1, r0
 80004ec:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80004f0:	fa1f fe8c 	uxth.w	lr, ip
 80004f4:	fbb3 f0f7 	udiv	r0, r3, r7
 80004f8:	fb07 3610 	mls	r6, r7, r0, r3
 80004fc:	0c0b      	lsrs	r3, r1, #16
 80004fe:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
 8000502:	fb00 f60e 	mul.w	r6, r0, lr
 8000506:	429e      	cmp	r6, r3
 8000508:	fa04 f402 	lsl.w	r4, r4, r2
 800050c:	d908      	bls.n	8000520 <__udivmoddi4+0x260>
 800050e:	eb1c 0303 	adds.w	r3, ip, r3
 8000512:	f100 38ff 	add.w	r8, r0, #4294967295
 8000516:	d22f      	bcs.n	8000578 <__udivmoddi4+0x2b8>
 8000518:	429e      	cmp	r6, r3
 800051a:	d92d      	bls.n	8000578 <__udivmoddi4+0x2b8>
 800051c:	3802      	subs	r0, #2
 800051e:	4463      	add	r3, ip
 8000520:	1b9b      	subs	r3, r3, r6
 8000522:	b289      	uxth	r1, r1
 8000524:	fbb3 f6f7 	udiv	r6, r3, r7
 8000528:	fb07 3316 	mls	r3, r7, r6, r3
 800052c:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000530:	fb06 f30e 	mul.w	r3, r6, lr
 8000534:	428b      	cmp	r3, r1
 8000536:	d908      	bls.n	800054a <__udivmoddi4+0x28a>
 8000538:	eb1c 0101 	adds.w	r1, ip, r1
 800053c:	f106 38ff 	add.w	r8, r6, #4294967295
 8000540:	d216      	bcs.n	8000570 <__udivmoddi4+0x2b0>
 8000542:	428b      	cmp	r3, r1
 8000544:	d914      	bls.n	8000570 <__udivmoddi4+0x2b0>
 8000546:	3e02      	subs	r6, #2
 8000548:	4461      	add	r1, ip
 800054a:	1ac9      	subs	r1, r1, r3
 800054c:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
 8000550:	e738      	b.n	80003c4 <__udivmoddi4+0x104>
 8000552:	462e      	mov	r6, r5
 8000554:	4628      	mov	r0, r5
 8000556:	e705      	b.n	8000364 <__udivmoddi4+0xa4>
 8000558:	4606      	mov	r6, r0
 800055a:	e6e3      	b.n	8000324 <__udivmoddi4+0x64>
 800055c:	4618      	mov	r0, r3
 800055e:	e6f8      	b.n	8000352 <__udivmoddi4+0x92>
 8000560:	454b      	cmp	r3, r9
 8000562:	d2a9      	bcs.n	80004b8 <__udivmoddi4+0x1f8>
 8000564:	ebb9 0802 	subs.w	r8, r9, r2
 8000568:	eb64 0e0c 	sbc.w	lr, r4, ip
 800056c:	3801      	subs	r0, #1
 800056e:	e7a3      	b.n	80004b8 <__udivmoddi4+0x1f8>
 8000570:	4646      	mov	r6, r8
 8000572:	e7ea      	b.n	800054a <__udivmoddi4+0x28a>
 8000574:	4620      	mov	r0, r4
 8000576:	e794      	b.n	80004a2 <__udivmoddi4+0x1e2>
 8000578:	4640      	mov	r0, r8
 800057a:	e7d1      	b.n	8000520 <__udivmoddi4+0x260>
 800057c:	46d0      	mov	r8, sl
 800057e:	e77b      	b.n	8000478 <__udivmoddi4+0x1b8>
 8000580:	3b02      	subs	r3, #2
 8000582:	4461      	add	r1, ip
 8000584:	e732      	b.n	80003ec <__udivmoddi4+0x12c>
 8000586:	4630      	mov	r0, r6
 8000588:	e709      	b.n	800039e <__udivmoddi4+0xde>
 800058a:	4464      	add	r4, ip
 800058c:	3802      	subs	r0, #2
 800058e:	e742      	b.n	8000416 <__udivmoddi4+0x156>

08000590 <__aeabi_idiv0>:
 8000590:	4770      	bx	lr
 8000592:	bf00      	nop

08000594 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 8000594:	f8df d034 	ldr.w	sp, [pc, #52]	; 80005cc <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8000598:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 800059a:	e003      	b.n	80005a4 <LoopCopyDataInit>

0800059c <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 800059c:	4b0c      	ldr	r3, [pc, #48]	; (80005d0 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 800059e:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 80005a0:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 80005a2:	3104      	adds	r1, #4

080005a4 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 80005a4:	480b      	ldr	r0, [pc, #44]	; (80005d4 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 80005a6:	4b0c      	ldr	r3, [pc, #48]	; (80005d8 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 80005a8:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 80005aa:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 80005ac:	d3f6      	bcc.n	800059c <CopyDataInit>
  ldr  r2, =_sbss
 80005ae:	4a0b      	ldr	r2, [pc, #44]	; (80005dc <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 80005b0:	e002      	b.n	80005b8 <LoopFillZerobss>

080005b2 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 80005b2:	2300      	movs	r3, #0
  str  r3, [r2], #4
 80005b4:	f842 3b04 	str.w	r3, [r2], #4

080005b8 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 80005b8:	4b09      	ldr	r3, [pc, #36]	; (80005e0 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 80005ba:	429a      	cmp	r2, r3
  bcc  FillZerobss
 80005bc:	d3f9      	bcc.n	80005b2 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 80005be:	f007 f905 	bl	80077cc <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80005c2:	f021 fcaf 	bl	8021f24 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80005c6:	f000 fef5 	bl	80013b4 <main>
  bx  lr    
 80005ca:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 80005cc:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 80005d0:	080aa528 	.word	0x080aa528
  ldr  r0, =_sdata
 80005d4:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 80005d8:	20000168 	.word	0x20000168
  ldr  r2, =_sbss
 80005dc:	20000168 	.word	0x20000168
  ldr  r3, = _ebss
 80005e0:	20017bf8 	.word	0x20017bf8

080005e4 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80005e4:	e7fe      	b.n	80005e4 <ADC_IRQHandler>

080005e6 <MX_TouchGFX_Init>:
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_init();
 80005e6:	f000 bc39 	b.w	8000e5c <touchgfx_init>

080005ea <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 80005ea:	f000 bca9 	b.w	8000f40 <touchgfx_taskEntry>

080005ee <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 80005ee:	4770      	bx	lr

080005f0 <_ZN20STM32TouchControllerD0Ev>:
 80005f0:	b510      	push	{r4, lr}
 80005f2:	2104      	movs	r1, #4
 80005f4:	4604      	mov	r4, r0
 80005f6:	f021 fb27 	bl	8021c48 <_ZdlPvj>
 80005fa:	4620      	mov	r0, r4
 80005fc:	bd10      	pop	{r4, pc}
	...

08000600 <_Z11BSP_TS_Inittt>:
  * @param  XSize: The maximum X size of the TS area on LCD
  * @param  YSize: The maximum Y size of the TS area on LCD
  * @retval TS_OK: if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize)
{
 8000600:	b538      	push	{r3, r4, r5, lr}
    uint8_t ret = TS_ERROR;

    /* Initialize x and y positions boundaries */
    TsXBoundary = XSize;
 8000602:	4b0c      	ldr	r3, [pc, #48]	; (8000634 <_Z11BSP_TS_Inittt+0x34>)
    TsYBoundary = YSize;

    /* Read ID and verify if the IO expander is ready */
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8000604:	4c0c      	ldr	r4, [pc, #48]	; (8000638 <_Z11BSP_TS_Inittt+0x38>)
    TsXBoundary = XSize;
 8000606:	8018      	strh	r0, [r3, #0]
    TsYBoundary = YSize;
 8000608:	4b0c      	ldr	r3, [pc, #48]	; (800063c <_Z11BSP_TS_Inittt+0x3c>)
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 800060a:	2082      	movs	r0, #130	; 0x82
    TsYBoundary = YSize;
 800060c:	8019      	strh	r1, [r3, #0]
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 800060e:	6863      	ldr	r3, [r4, #4]
 8000610:	4798      	blx	r3
 8000612:	f640 0311 	movw	r3, #2065	; 0x811
 8000616:	4298      	cmp	r0, r3
 8000618:	d10a      	bne.n	8000630 <_Z11BSP_TS_Inittt+0x30>
    {
        /* Initialize the TS driver structure */
        TsDrv = &stmpe811_ts_drv;
 800061a:	4d09      	ldr	r5, [pc, #36]	; (8000640 <_Z11BSP_TS_Inittt+0x40>)
    }

    if (ret == TS_OK)
    {
        /* Initialize the LL TS Driver */
        TsDrv->Init(TS_I2C_ADDRESS);
 800061c:	6823      	ldr	r3, [r4, #0]
        TsDrv = &stmpe811_ts_drv;
 800061e:	602c      	str	r4, [r5, #0]
        TsDrv->Init(TS_I2C_ADDRESS);
 8000620:	2082      	movs	r0, #130	; 0x82
 8000622:	4798      	blx	r3
        TsDrv->Start(TS_I2C_ADDRESS);
 8000624:	682b      	ldr	r3, [r5, #0]
 8000626:	2082      	movs	r0, #130	; 0x82
 8000628:	68db      	ldr	r3, [r3, #12]
 800062a:	4798      	blx	r3
 800062c:	2000      	movs	r0, #0
    }

    return ret;
}
 800062e:	bd38      	pop	{r3, r4, r5, pc}
    uint8_t ret = TS_ERROR;
 8000630:	2001      	movs	r0, #1
 8000632:	e7fc      	b.n	800062e <_Z11BSP_TS_Inittt+0x2e>
 8000634:	20000184 	.word	0x20000184
 8000638:	20000050 	.word	0x20000050
 800063c:	20000186 	.word	0x20000186
 8000640:	20000188 	.word	0x20000188

08000644 <_ZN20STM32TouchController4initEv>:
    BSP_TS_Init(240, 320);
 8000644:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8000648:	20f0      	movs	r0, #240	; 0xf0
 800064a:	f7ff bfd9 	b.w	8000600 <_Z11BSP_TS_Inittt>
	...

08000650 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>:
/**
  * @brief  Returns status and positions of the touch screen.
  * @param  TsState: Pointer to touch screen current state structure
  */
void BSP_TS_GetState(TS_StateTypeDef* TsState)
{
 8000650:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    static uint32_t _x = 0, _y = 0;
    uint16_t xDiff, yDiff, x, y, xr, yr;

    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8000652:	4d2d      	ldr	r5, [pc, #180]	; (8000708 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb8>)
 8000654:	682b      	ldr	r3, [r5, #0]
{
 8000656:	4604      	mov	r4, r0
    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8000658:	691b      	ldr	r3, [r3, #16]
 800065a:	2082      	movs	r0, #130	; 0x82
 800065c:	4798      	blx	r3
 800065e:	b280      	uxth	r0, r0
 8000660:	8020      	strh	r0, [r4, #0]

    if (TsState->TouchDetected)
 8000662:	2800      	cmp	r0, #0
 8000664:	d043      	beq.n	80006ee <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x9e>
    {
        TsDrv->GetXY(TS_I2C_ADDRESS, &x, &y);
 8000666:	682b      	ldr	r3, [r5, #0]
 8000668:	f10d 0206 	add.w	r2, sp, #6
 800066c:	695b      	ldr	r3, [r3, #20]
 800066e:	a901      	add	r1, sp, #4
 8000670:	2082      	movs	r0, #130	; 0x82
 8000672:	4798      	blx	r3

        /* Y value first correction */
        y -= 360;
 8000674:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8000678:	f5a2 72b4 	sub.w	r2, r2, #360	; 0x168
 800067c:	b292      	uxth	r2, r2

        /* Y value second correction */
        yr = y / 11;

        /* Return y position value */
        if (yr <= 0)
 800067e:	2a0a      	cmp	r2, #10
 8000680:	d937      	bls.n	80006f2 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xa2>
        yr = y / 11;
 8000682:	230b      	movs	r3, #11
 8000684:	fbb2 f2f3 	udiv	r2, r2, r3
        {
            yr = 0;
        }
        else if (yr > TsYBoundary)
 8000688:	4b20      	ldr	r3, [pc, #128]	; (800070c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xbc>)
 800068a:	881b      	ldrh	r3, [r3, #0]
 800068c:	429a      	cmp	r2, r3
 800068e:	d901      	bls.n	8000694 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x44>
        {
            yr = TsYBoundary - 1;
 8000690:	3b01      	subs	r3, #1
 8000692:	b29a      	uxth	r2, r3
        else
        {}
        y = yr;

        /* X value first correction */
        if (x <= 3000)
 8000694:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8000698:	f640 31b8 	movw	r1, #3000	; 0xbb8
 800069c:	428b      	cmp	r3, r1
 800069e:	d82a      	bhi.n	80006f6 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xa6>
        {
            x = 3870 - x;
 80006a0:	f5c3 6371 	rsb	r3, r3, #3856	; 0xf10
 80006a4:	330e      	adds	r3, #14
 80006a6:	b29b      	uxth	r3, r3
        {
            x = 3800 - x;
        }

        /* X value second correction */
        xr = x / 15;
 80006a8:	210f      	movs	r1, #15
 80006aa:	fbb3 f3f1 	udiv	r3, r3, r1
        /* Return X position value */
        if (xr <= 0)
        {
            xr = 0;
        }
        else if (xr > TsXBoundary)
 80006ae:	4918      	ldr	r1, [pc, #96]	; (8000710 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc0>)
 80006b0:	8809      	ldrh	r1, [r1, #0]
 80006b2:	428b      	cmp	r3, r1
 80006b4:	d901      	bls.n	80006ba <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x6a>
        {
            xr = TsXBoundary - 1;
 80006b6:	1e4b      	subs	r3, r1, #1
 80006b8:	b29b      	uxth	r3, r3
        }
        else
        {}

        x = xr;
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006ba:	4e16      	ldr	r6, [pc, #88]	; (8000714 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc4>)
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006bc:	4d16      	ldr	r5, [pc, #88]	; (8000718 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc8>)
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006be:	6830      	ldr	r0, [r6, #0]
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006c0:	682f      	ldr	r7, [r5, #0]
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006c2:	4283      	cmp	r3, r0
 80006c4:	b281      	uxth	r1, r0
 80006c6:	bf8c      	ite	hi
 80006c8:	1a59      	subhi	r1, r3, r1
 80006ca:	1ac9      	subls	r1, r1, r3
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006cc:	b2b8      	uxth	r0, r7
 80006ce:	42ba      	cmp	r2, r7
 80006d0:	bf8c      	ite	hi
 80006d2:	1a10      	subhi	r0, r2, r0
 80006d4:	1a80      	subls	r0, r0, r2
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006d6:	b289      	uxth	r1, r1
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006d8:	b280      	uxth	r0, r0

        if (xDiff + yDiff > 5)
 80006da:	4401      	add	r1, r0
 80006dc:	2905      	cmp	r1, #5
        {
            _x = x;
 80006de:	bfc8      	it	gt
 80006e0:	6033      	strgt	r3, [r6, #0]
            _y = y;
        }

        /* Update the X position */
        TsState->X = _x;
 80006e2:	6833      	ldr	r3, [r6, #0]
            _y = y;
 80006e4:	bfc8      	it	gt
 80006e6:	602a      	strgt	r2, [r5, #0]
        TsState->X = _x;
 80006e8:	8063      	strh	r3, [r4, #2]

        /* Update the Y position */
        TsState->Y = _y;
 80006ea:	682b      	ldr	r3, [r5, #0]
 80006ec:	80a3      	strh	r3, [r4, #4]
    }
}
 80006ee:	b003      	add	sp, #12
 80006f0:	bdf0      	pop	{r4, r5, r6, r7, pc}
            yr = 0;
 80006f2:	2200      	movs	r2, #0
 80006f4:	e7ce      	b.n	8000694 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x44>
            x = 3800 - x;
 80006f6:	f5c3 636d 	rsb	r3, r3, #3792	; 0xed0
 80006fa:	3308      	adds	r3, #8
 80006fc:	b29b      	uxth	r3, r3
        if (xr <= 0)
 80006fe:	2b0e      	cmp	r3, #14
 8000700:	d8d2      	bhi.n	80006a8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x58>
            xr = 0;
 8000702:	2300      	movs	r3, #0
 8000704:	e7d9      	b.n	80006ba <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x6a>
 8000706:	bf00      	nop
 8000708:	20000188 	.word	0x20000188
 800070c:	20000186 	.word	0x20000186
 8000710:	20000184 	.word	0x20000184
 8000714:	2000018c 	.word	0x2000018c
 8000718:	20000190 	.word	0x20000190

0800071c <_ZN20STM32TouchController11sampleTouchERlS0_>:
{
 800071c:	b537      	push	{r0, r1, r2, r4, r5, lr}
    BSP_TS_GetState(&state);
 800071e:	4668      	mov	r0, sp
{
 8000720:	460d      	mov	r5, r1
 8000722:	4614      	mov	r4, r2
    BSP_TS_GetState(&state);
 8000724:	f7ff ff94 	bl	8000650 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>
    if (state.TouchDetected)
 8000728:	f8bd 0000 	ldrh.w	r0, [sp]
 800072c:	b130      	cbz	r0, 800073c <_ZN20STM32TouchController11sampleTouchERlS0_+0x20>
        x = state.X;
 800072e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8000732:	602b      	str	r3, [r5, #0]
        y = state.Y;
 8000734:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8000738:	6023      	str	r3, [r4, #0]
        return true;
 800073a:	2001      	movs	r0, #1
}
 800073c:	b003      	add	sp, #12
 800073e:	bd30      	pop	{r4, r5, pc}

08000740 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{

}
 8000740:	4770      	bx	lr

08000742 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
 8000742:	4770      	bx	lr

08000744 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
 8000744:	4770      	bx	lr

08000746 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 8000746:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 8000748:	f880 1074 	strb.w	r1, [r0, #116]	; 0x74
        displayOrientationChangeRequested = true;
 800074c:	f880 3075 	strb.w	r3, [r0, #117]	; 0x75
    }
 8000750:	4770      	bx	lr

08000752 <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 8000752:	2000      	movs	r0, #0
 8000754:	4770      	bx	lr
	...

08000758 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8000758:	4b03      	ldr	r3, [pc, #12]	; (8000768 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 800075a:	6441      	str	r1, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 800075c:	3900      	subs	r1, #0
 800075e:	bf18      	it	ne
 8000760:	2101      	movne	r1, #1
 8000762:	7019      	strb	r1, [r3, #0]
    }
 8000764:	4770      	bx	lr
 8000766:	bf00      	nop
 8000768:	2001794b 	.word	0x2001794b

0800076c <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 800076c:	2000      	movs	r0, #0
 800076e:	4770      	bx	lr

08000770 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 8000770:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8000772:	b10b      	cbz	r3, 8000778 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 8000774:	4608      	mov	r0, r1
 8000776:	4718      	bx	r3
        }
    }
 8000778:	4770      	bx	lr

0800077a <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 800077a:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800077e:	4770      	bx	lr

08000780 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 8000780:	6840      	ldr	r0, [r0, #4]
 8000782:	6803      	ldr	r3, [r0, #0]
 8000784:	699b      	ldr	r3, [r3, #24]
 8000786:	4718      	bx	r3

08000788 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 8000788:	4770      	bx	lr

0800078a <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 800078a:	4770      	bx	lr

0800078c <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 800078c:	4770      	bx	lr

0800078e <_ZN11TouchGFXHAL10initializeEv>:
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 800078e:	f000 bc77 	b.w	8001080 <_ZN20TouchGFXGeneratedHAL10initializeEv>

08000792 <_ZN11TouchGFXHAL9taskEntryEv>:
}

void TouchGFXHAL::taskEntry()
{
 8000792:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 8000794:	6803      	ldr	r3, [r0, #0]
{
 8000796:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 8000798:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800079c:	4798      	blx	r3
    enableInterrupts();
 800079e:	6823      	ldr	r3, [r4, #0]
 80007a0:	4620      	mov	r0, r4
 80007a2:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 80007a4:	4798      	blx	r3

    OSWrappers::waitForVSync();
 80007a6:	f000 f8eb 	bl	8000980 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 80007aa:	6823      	ldr	r3, [r4, #0]
 80007ac:	4620      	mov	r0, r4
 80007ae:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80007b0:	4798      	blx	r3

    LCD_IO_WriteReg(0x29);
 80007b2:	2029      	movs	r0, #41	; 0x29
 80007b4:	f001 f89e 	bl	80018f4 <LCD_IO_WriteReg>

    for (;;)
    {
        OSWrappers::waitForVSync();
 80007b8:	f000 f8e2 	bl	8000980 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 80007bc:	6823      	ldr	r3, [r4, #0]
 80007be:	4620      	mov	r0, r4
 80007c0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80007c2:	4798      	blx	r3
    for (;;)
 80007c4:	e7f8      	b.n	80007b8 <_ZN11TouchGFXHAL9taskEntryEv+0x26>

080007c6 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 80007c6:	b510      	push	{r4, lr}
 80007c8:	4604      	mov	r4, r0
        swapFrameBuffers();
 80007ca:	f00c fe33 	bl	800d434 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 80007ce:	6823      	ldr	r3, [r4, #0]
 80007d0:	4620      	mov	r0, r4
 80007d2:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    }
 80007d6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 80007da:	4718      	bx	r3

080007dc <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 80007dc:	f000 bc42 	b.w	8001064 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

080007e0 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 80007e0:	f000 bc46 	b.w	8001070 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

080007e4 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 80007e4:	f000 bc72 	b.w	80010cc <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

080007e8 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 80007e8:	f000 bc18 	b.w	800101c <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

080007ec <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 80007ec:	f000 bc72 	b.w	80010d4 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

080007f0 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 80007f0:	f000 bc7a 	b.w	80010e8 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

080007f4 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 80007f4:	f000 bc1c 	b.w	8001030 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

080007f8 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 80007f8:	f00c b890 	b.w	800c91c <_ZN8touchgfx3HAL16flushFrameBufferEv>

080007fc <_ZN11TouchGFXHALD0Ev>:
 80007fc:	b510      	push	{r4, lr}
 80007fe:	217c      	movs	r1, #124	; 0x7c
 8000800:	4604      	mov	r4, r0
 8000802:	f021 fa21 	bl	8021c48 <_ZdlPvj>
 8000806:	4620      	mov	r0, r4
 8000808:	bd10      	pop	{r4, pc}

0800080a <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 800080a:	f890 3077 	ldrb.w	r3, [r0, #119]	; 0x77
 800080e:	b11b      	cbz	r3, 8000818 <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 8000810:	6840      	ldr	r0, [r0, #4]
 8000812:	6803      	ldr	r3, [r0, #0]
 8000814:	681b      	ldr	r3, [r3, #0]
 8000816:	4718      	bx	r3
    }
 8000818:	4618      	mov	r0, r3
 800081a:	4770      	bx	lr

0800081c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 800081c:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 800081e:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 8000822:	f890 4074 	ldrb.w	r4, [r0, #116]	; 0x74
            if (DISPLAY_ROTATION == rotate0)
 8000826:	4b0c      	ldr	r3, [pc, #48]	; (8000858 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 8000828:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 800082a:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 800082c:	d009      	beq.n	8000842 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 800082e:	b93a      	cbnz	r2, 8000840 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000830:	4a0a      	ldr	r2, [pc, #40]	; (800085c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 8000832:	490b      	ldr	r1, [pc, #44]	; (8000860 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000834:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 8000836:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 8000838:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800083a:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 800083c:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 800083e:	701a      	strb	r2, [r3, #0]
    }
 8000840:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 8000842:	2a00      	cmp	r2, #0
 8000844:	d0fc      	beq.n	8000840 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000846:	4a05      	ldr	r2, [pc, #20]	; (800085c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 8000848:	4905      	ldr	r1, [pc, #20]	; (8000860 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800084a:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 800084c:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 800084e:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000850:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 8000852:	2200      	movs	r2, #0
 8000854:	e7f3      	b.n	800083e <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 8000856:	bf00      	nop
 8000858:	20017944 	.word	0x20017944
 800085c:	20017940 	.word	0x20017940
 8000860:	20017942 	.word	0x20017942

08000864 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 8000864:	b570      	push	{r4, r5, r6, lr}
 8000866:	460d      	mov	r5, r1
 8000868:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 800086a:	b935      	cbnz	r5, 800087a <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 800086c:	4b09      	ldr	r3, [pc, #36]	; (8000894 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 800086e:	4a0a      	ldr	r2, [pc, #40]	; (8000898 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 8000870:	480a      	ldr	r0, [pc, #40]	; (800089c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 8000872:	f240 21d2 	movw	r1, #722	; 0x2d2
 8000876:	f021 fa15 	bl	8021ca4 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 800087a:	e9c0 520f 	strd	r5, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 800087e:	4b08      	ldr	r3, [pc, #32]	; (80008a0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 8000880:	3a00      	subs	r2, #0
 8000882:	bf18      	it	ne
 8000884:	2201      	movne	r2, #1
 8000886:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 8000888:	6803      	ldr	r3, [r0, #0]
    }
 800088a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setAnimationStorage(animationStorage);
 800088e:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8000892:	4718      	bx	r3
 8000894:	08022f4c 	.word	0x08022f4c
 8000898:	08022f84 	.word	0x08022f84
 800089c:	08022fd2 	.word	0x08022fd2
 80008a0:	2001794a 	.word	0x2001794a

080008a4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 80008a4:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 80008a6:	4b09      	ldr	r3, [pc, #36]	; (80008cc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 80008a8:	881b      	ldrh	r3, [r3, #0]
 80008aa:	428b      	cmp	r3, r1
 80008ac:	d803      	bhi.n	80008b6 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 80008ae:	4b08      	ldr	r3, [pc, #32]	; (80008d0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 80008b0:	881b      	ldrh	r3, [r3, #0]
 80008b2:	4293      	cmp	r3, r2
 80008b4:	d905      	bls.n	80008c2 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 80008b6:	4b07      	ldr	r3, [pc, #28]	; (80008d4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 80008b8:	4a07      	ldr	r2, [pc, #28]	; (80008d8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 80008ba:	4808      	ldr	r0, [pc, #32]	; (80008dc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 80008bc:	219e      	movs	r1, #158	; 0x9e
 80008be:	f021 f9f1 	bl	8021ca4 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 80008c2:	4b07      	ldr	r3, [pc, #28]	; (80008e0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 80008c4:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 80008c6:	4b07      	ldr	r3, [pc, #28]	; (80008e4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 80008c8:	801a      	strh	r2, [r3, #0]
    }
 80008ca:	bd08      	pop	{r3, pc}
 80008cc:	20017940 	.word	0x20017940
 80008d0:	20017942 	.word	0x20017942
 80008d4:	08023017 	.word	0x08023017
 80008d8:	0802307a 	.word	0x0802307a
 80008dc:	08022fd2 	.word	0x08022fd2
 80008e0:	20017946 	.word	0x20017946
 80008e4:	20017948 	.word	0x20017948

080008e8 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 80008e8:	2101      	movs	r1, #1
{
 80008ea:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 80008ec:	2200      	movs	r2, #0
 80008ee:	4608      	mov	r0, r1
 80008f0:	f009 fc6c 	bl	800a1cc <osSemaphoreNew>
 80008f4:	4b0a      	ldr	r3, [pc, #40]	; (8000920 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 80008f6:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 80008f8:	b928      	cbnz	r0, 8000906 <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 80008fa:	4b0a      	ldr	r3, [pc, #40]	; (8000924 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 80008fc:	4a0a      	ldr	r2, [pc, #40]	; (8000928 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 80008fe:	2129      	movs	r1, #41	; 0x29

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000900:	480a      	ldr	r0, [pc, #40]	; (800092c <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8000902:	f021 f9cf 	bl	8021ca4 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8000906:	2200      	movs	r2, #0
 8000908:	2104      	movs	r1, #4
 800090a:	2001      	movs	r0, #1
 800090c:	f009 fd24 	bl	800a358 <osMessageQueueNew>
 8000910:	4b07      	ldr	r3, [pc, #28]	; (8000930 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8000912:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000914:	b918      	cbnz	r0, 800091e <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8000916:	4b07      	ldr	r3, [pc, #28]	; (8000934 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8000918:	4a03      	ldr	r2, [pc, #12]	; (8000928 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 800091a:	212d      	movs	r1, #45	; 0x2d
 800091c:	e7f0      	b.n	8000900 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 800091e:	bd08      	pop	{r3, pc}
 8000920:	20000198 	.word	0x20000198
 8000924:	08023198 	.word	0x08023198
 8000928:	080231e1 	.word	0x080231e1
 800092c:	08023210 	.word	0x08023210
 8000930:	20000194 	.word	0x20000194
 8000934:	0802325e 	.word	0x0802325e

08000938 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8000938:	4b02      	ldr	r3, [pc, #8]	; (8000944 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 800093a:	f04f 31ff 	mov.w	r1, #4294967295
 800093e:	6818      	ldr	r0, [r3, #0]
 8000940:	f009 bc9a 	b.w	800a278 <osSemaphoreAcquire>
 8000944:	20000198 	.word	0x20000198

08000948 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8000948:	4b01      	ldr	r3, [pc, #4]	; (8000950 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 800094a:	6818      	ldr	r0, [r3, #0]
 800094c:	f009 bcce 	b.w	800a2ec <osSemaphoreRelease>
 8000950:	20000198 	.word	0x20000198

08000954 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8000954:	4b02      	ldr	r3, [pc, #8]	; (8000960 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8000956:	2100      	movs	r1, #0
 8000958:	6818      	ldr	r0, [r3, #0]
 800095a:	f009 bc8d 	b.w	800a278 <osSemaphoreAcquire>
 800095e:	bf00      	nop
 8000960:	20000198 	.word	0x20000198

08000964 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 8000964:	f7ff bff0 	b.w	8000948 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08000968 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8000968:	4803      	ldr	r0, [pc, #12]	; (8000978 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 800096a:	4904      	ldr	r1, [pc, #16]	; (800097c <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 800096c:	6800      	ldr	r0, [r0, #0]
 800096e:	2300      	movs	r3, #0
 8000970:	461a      	mov	r2, r3
 8000972:	f009 bd37 	b.w	800a3e4 <osMessageQueuePut>
 8000976:	bf00      	nop
 8000978:	20000194 	.word	0x20000194
 800097c:	20000004 	.word	0x20000004

08000980 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8000980:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8000982:	4c08      	ldr	r4, [pc, #32]	; (80009a4 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8000984:	2300      	movs	r3, #0
 8000986:	461a      	mov	r2, r3
 8000988:	a901      	add	r1, sp, #4
 800098a:	6820      	ldr	r0, [r4, #0]
 800098c:	f009 fd6c 	bl	800a468 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8000990:	6820      	ldr	r0, [r4, #0]
 8000992:	f04f 33ff 	mov.w	r3, #4294967295
 8000996:	2200      	movs	r2, #0
 8000998:	a901      	add	r1, sp, #4
 800099a:	f009 fd65 	bl	800a468 <osMessageQueueGet>
}
 800099e:	b002      	add	sp, #8
 80009a0:	bd10      	pop	{r4, pc}
 80009a2:	bf00      	nop
 80009a4:	20000194 	.word	0x20000194

080009a8 <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 80009a8:	6803      	ldr	r3, [r0, #0]
 80009aa:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80009ac:	4718      	bx	r3

080009ae <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
 80009ae:	2001      	movs	r0, #1
 80009b0:	4770      	bx	lr

080009b2 <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 80009b2:	6803      	ldr	r3, [r0, #0]
 80009b4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80009b6:	4718      	bx	r3

080009b8 <_ZN8STM32DMA10initializeEv>:
    /* Disable DMA2D global Interrupt */
    NVIC_DisableIRQ(DMA2D_IRQn);
}

void STM32DMA::initialize()
{
 80009b8:	b082      	sub	sp, #8
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 80009ba:	2300      	movs	r3, #0
 80009bc:	9301      	str	r3, [sp, #4]
 80009be:	4b0d      	ldr	r3, [pc, #52]	; (80009f4 <_ZN8STM32DMA10initializeEv+0x3c>)
 80009c0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80009c2:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 80009c6:	631a      	str	r2, [r3, #48]	; 0x30
 80009c8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80009ca:	f402 0200 	and.w	r2, r2, #8388608	; 0x800000
 80009ce:	9201      	str	r2, [sp, #4]
 80009d0:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
 80009d2:	691a      	ldr	r2, [r3, #16]
 80009d4:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 80009d8:	611a      	str	r2, [r3, #16]
    __HAL_RCC_DMA2D_RELEASE_RESET();
 80009da:	691a      	ldr	r2, [r3, #16]
 80009dc:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 80009e0:	611a      	str	r2, [r3, #16]

    /* Add transfer complete callback function */
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 80009e2:	4b05      	ldr	r3, [pc, #20]	; (80009f8 <_ZN8STM32DMA10initializeEv+0x40>)
 80009e4:	4a05      	ldr	r2, [pc, #20]	; (80009fc <_ZN8STM32DMA10initializeEv+0x44>)
 80009e6:	611a      	str	r2, [r3, #16]
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80009e8:	4b05      	ldr	r3, [pc, #20]	; (8000a00 <_ZN8STM32DMA10initializeEv+0x48>)
 80009ea:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80009ee:	609a      	str	r2, [r3, #8]

    /* Enable DMA2D global Interrupt */
    NVIC_EnableIRQ(DMA2D_IRQn);
}
 80009f0:	b002      	add	sp, #8
 80009f2:	4770      	bx	lr
 80009f4:	40023800 	.word	0x40023800
 80009f8:	20002edc 	.word	0x20002edc
 80009fc:	08000a45 	.word	0x08000a45
 8000a00:	e000e100 	.word	0xe000e100

08000a04 <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 8000a04:	f240 30ef 	movw	r0, #1007	; 0x3ef
 8000a08:	4770      	bx	lr
	...

08000a0c <_ZN8STM32DMAD1Ev>:
STM32DMA::~STM32DMA()
 8000a0c:	4b05      	ldr	r3, [pc, #20]	; (8000a24 <_ZN8STM32DMAD1Ev+0x18>)
 8000a0e:	6003      	str	r3, [r0, #0]
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000a10:	4b05      	ldr	r3, [pc, #20]	; (8000a28 <_ZN8STM32DMAD1Ev+0x1c>)
 8000a12:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8000a16:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8000a1a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8000a1e:	f3bf 8f6f 	isb	sy
}
 8000a22:	4770      	bx	lr
 8000a24:	080233fc 	.word	0x080233fc
 8000a28:	e000e100 	.word	0xe000e100

08000a2c <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
 8000a2c:	b510      	push	{r4, lr}
 8000a2e:	4604      	mov	r4, r0
}
 8000a30:	f44f 615a 	mov.w	r1, #3488	; 0xda0
 8000a34:	f7ff ffea 	bl	8000a0c <_ZN8STM32DMAD1Ev>
 8000a38:	4620      	mov	r0, r4
 8000a3a:	f021 f905 	bl	8021c48 <_ZdlPvj>
 8000a3e:	4620      	mov	r0, r4
 8000a40:	bd10      	pop	{r4, pc}
	...

08000a44 <DMA2D_XferCpltCallback>:
        return instance;
 8000a44:	4b02      	ldr	r3, [pc, #8]	; (8000a50 <DMA2D_XferCpltCallback+0xc>)
 8000a46:	681b      	ldr	r3, [r3, #0]
 8000a48:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 8000a4a:	6803      	ldr	r3, [r0, #0]
 8000a4c:	695b      	ldr	r3, [r3, #20]
 8000a4e:	4718      	bx	r3
 8000a50:	2001794c 	.word	0x2001794c

08000a54 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8000a54:	b570      	push	{r4, r5, r6, lr}
 8000a56:	4604      	mov	r4, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 8000a58:	4625      	mov	r5, r4
 8000a5a:	4b0a      	ldr	r3, [pc, #40]	; (8000a84 <_ZN8STM32DMAC1Ev+0x30>)
 8000a5c:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8000a5e:	2600      	movs	r6, #0
 8000a60:	6060      	str	r0, [r4, #4]
 8000a62:	7226      	strb	r6, [r4, #8]
 8000a64:	7266      	strb	r6, [r4, #9]
 8000a66:	f845 3b20 	str.w	r3, [r5], #32
 8000a6a:	2260      	movs	r2, #96	; 0x60
 8000a6c:	4629      	mov	r1, r5
 8000a6e:	f00c fe37 	bl	800d6e0 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 8000a72:	f504 635a 	add.w	r3, r4, #3488	; 0xda0
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 8000a76:	60ee      	str	r6, [r5, #12]
 8000a78:	3524      	adds	r5, #36	; 0x24
 8000a7a:	42ab      	cmp	r3, r5
 8000a7c:	d1fb      	bne.n	8000a76 <_ZN8STM32DMAC1Ev+0x22>
}
 8000a7e:	4620      	mov	r0, r4
 8000a80:	bd70      	pop	{r4, r5, r6, pc}
 8000a82:	bf00      	nop
 8000a84:	080233fc 	.word	0x080233fc

08000a88 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 8000a88:	b508      	push	{r3, lr}
    switch (format)
 8000a8a:	290b      	cmp	r1, #11
 8000a8c:	d80b      	bhi.n	8000aa6 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1e>
 8000a8e:	e8df f001 	tbb	[pc, r1]
 8000a92:	0612      	.short	0x0612
 8000a94:	0a0a0a10 	.word	0x0a0a0a10
 8000a98:	0808080a 	.word	0x0808080a
 8000a9c:	0808      	.short	0x0808
 8000a9e:	2001      	movs	r0, #1
}
 8000aa0:	bd08      	pop	{r3, pc}
        dma2dColorMode = DMA2D_INPUT_L8;
 8000aa2:	2005      	movs	r0, #5
        break;
 8000aa4:	e7fc      	b.n	8000aa0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        assert(0 && "Unsupported Format!");
 8000aa6:	4b05      	ldr	r3, [pc, #20]	; (8000abc <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 8000aa8:	4a05      	ldr	r2, [pc, #20]	; (8000ac0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 8000aaa:	4806      	ldr	r0, [pc, #24]	; (8000ac4 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x3c>)
 8000aac:	2167      	movs	r1, #103	; 0x67
 8000aae:	f021 f8f9 	bl	8021ca4 <__assert_func>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 8000ab2:	2000      	movs	r0, #0
 8000ab4:	e7f4      	b.n	8000aa0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_INPUT_RGB565;
 8000ab6:	2002      	movs	r0, #2
    return dma2dColorMode;
 8000ab8:	e7f2      	b.n	8000aa0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 8000aba:	bf00      	nop
 8000abc:	080232a0 	.word	0x080232a0
 8000ac0:	080232bb 	.word	0x080232bb
 8000ac4:	08023305 	.word	0x08023305

08000ac8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 8000ac8:	b508      	push	{r3, lr}
    switch (format)
 8000aca:	290a      	cmp	r1, #10
 8000acc:	d809      	bhi.n	8000ae2 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1a>
 8000ace:	e8df f001 	tbb	[pc, r1]
 8000ad2:	0610      	.short	0x0610
 8000ad4:	0808080e 	.word	0x0808080e
 8000ad8:	06060608 	.word	0x06060608
 8000adc:	06          	.byte	0x06
 8000add:	00          	.byte	0x00
 8000ade:	2001      	movs	r0, #1
}
 8000ae0:	bd08      	pop	{r3, pc}
        assert(0 && "Unsupported Format!");
 8000ae2:	4b05      	ldr	r3, [pc, #20]	; (8000af8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x30>)
 8000ae4:	4a05      	ldr	r2, [pc, #20]	; (8000afc <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 8000ae6:	4806      	ldr	r0, [pc, #24]	; (8000b00 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 8000ae8:	2188      	movs	r1, #136	; 0x88
 8000aea:	f021 f8db 	bl	8021ca4 <__assert_func>
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 8000aee:	2000      	movs	r0, #0
 8000af0:	e7f6      	b.n	8000ae0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 8000af2:	2002      	movs	r0, #2
    return dma2dColorMode;
 8000af4:	e7f4      	b.n	8000ae0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 8000af6:	bf00      	nop
 8000af8:	080232a0 	.word	0x080232a0
 8000afc:	08023351 	.word	0x08023351
 8000b00:	08023305 	.word	0x08023305

08000b04 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
 * BLIT_OP_COPY_ARGB8888_WITH_ALPHA
 * BLIT_OP_COPY_A4
 * BLIT_OP_COPY_A8
 */
void STM32DMA::setupDataCopy(const BlitOp& blitOp)
{
 8000b04:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000b08:	7f4f      	ldrb	r7, [r1, #29]
{
 8000b0a:	460c      	mov	r4, r1
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000b0c:	4639      	mov	r1, r7
{
 8000b0e:	4681      	mov	r9, r0
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000b10:	f7ff ffba 	bl	8000a88 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000b14:	f894 801e 	ldrb.w	r8, [r4, #30]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000b18:	4605      	mov	r5, r0
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000b1a:	4641      	mov	r1, r8
 8000b1c:	4648      	mov	r0, r9
 8000b1e:	f7ff ffb3 	bl	8000a88 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000b22:	4641      	mov	r1, r8
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000b24:	4606      	mov	r6, r0
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000b26:	4648      	mov	r0, r9
 8000b28:	f7ff ffce 	bl	8000ac8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000b2c:	8aa1      	ldrh	r1, [r4, #20]
 8000b2e:	8b62      	ldrh	r2, [r4, #26]
 8000b30:	4b42      	ldr	r3, [pc, #264]	; (8000c3c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000b32:	1a52      	subs	r2, r2, r1
 8000b34:	641a      	str	r2, [r3, #64]	; 0x40

    /* DMA2D BGOR register configuration */
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000b36:	619a      	str	r2, [r3, #24]

    /* DMA2D FGOR register configuration */
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 8000b38:	8b22      	ldrh	r2, [r4, #24]
 8000b3a:	1a52      	subs	r2, r2, r1
 8000b3c:	611a      	str	r2, [r3, #16]

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000b3e:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000b40:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000b42:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000b46:	645a      	str	r2, [r3, #68]	; 0x44

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000b48:	6920      	ldr	r0, [r4, #16]

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000b4a:	6862      	ldr	r2, [r4, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000b4c:	63d8      	str	r0, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000b4e:	60da      	str	r2, [r3, #12]

    switch (blitOp.operation)
 8000b50:	6821      	ldr	r1, [r4, #0]
    {
    case BLIT_OP_COPY_A4:
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b52:	f894 c01c 	ldrb.w	ip, [r4, #28]
    switch (blitOp.operation)
 8000b56:	2980      	cmp	r1, #128	; 0x80
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b58:	ea4f 620c 	mov.w	r2, ip, lsl #24
    switch (blitOp.operation)
 8000b5c:	d026      	beq.n	8000bac <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa8>
 8000b5e:	d810      	bhi.n	8000b82 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x7e>
 8000b60:	2920      	cmp	r1, #32
 8000b62:	ea45 0402 	orr.w	r4, r5, r2
 8000b66:	d061      	beq.n	8000c2c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
 8000b68:	2940      	cmp	r1, #64	; 0x40
 8000b6a:	d05f      	beq.n	8000c2c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
 8000b6c:	2904      	cmp	r1, #4
 8000b6e:	d05d      	beq.n	8000c2c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
        break;
    default: /* BLIT_OP_COPY */
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b70:	4b32      	ldr	r3, [pc, #200]	; (8000c3c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000b72:	432a      	orrs	r2, r5
 8000b74:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000

        /* Perform pixel-format-conversion (PFC) If Bitmap format is not same format as framebuffer format */
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000b78:	4547      	cmp	r7, r8
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b7a:	61da      	str	r2, [r3, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000b7c:	d05a      	beq.n	8000c34 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x130>
        {
            /* Start DMA2D : PFC Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
 8000b7e:	4a30      	ldr	r2, [pc, #192]	; (8000c40 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 8000b80:	e040      	b.n	8000c04 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
    switch (blitOp.operation)
 8000b82:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
 8000b86:	d007      	beq.n	8000b98 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x94>
 8000b88:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 8000b8c:	d1f0      	bne.n	8000b70 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x6c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b8e:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8000b92:	f042 0209 	orr.w	r2, r2, #9
 8000b96:	e003      	b.n	8000ba0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b98:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8000b9c:	f042 020a 	orr.w	r2, r2, #10
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000ba0:	61da      	str	r2, [r3, #28]
     *
     * @return The result of the operation.
     */
    operator uint32_t() const
    {
        return color;
 8000ba2:	68e2      	ldr	r2, [r4, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8000ba4:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000ba6:	625e      	str	r6, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000ba8:	6158      	str	r0, [r3, #20]
 8000baa:	e02a      	b.n	8000c02 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfe>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 8000bac:	68a4      	ldr	r4, [r4, #8]
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000bae:	432a      	orrs	r2, r5
 8000bb0:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 8000bb4:	1d21      	adds	r1, r4, #4
 8000bb6:	62d9      	str	r1, [r3, #44]	; 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000bb8:	61da      	str	r2, [r3, #28]
            switch ((Bitmap::ClutFormat)palette->format)
 8000bba:	7822      	ldrb	r2, [r4, #0]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000bbc:	625e      	str	r6, [r3, #36]	; 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000bbe:	6158      	str	r0, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
 8000bc0:	b142      	cbz	r2, 8000bd4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd0>
 8000bc2:	2a01      	cmp	r2, #1
 8000bc4:	d021      	beq.n	8000c0a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x106>
                assert(0 && "Unsupported format");
 8000bc6:	4b1f      	ldr	r3, [pc, #124]	; (8000c44 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x140>)
 8000bc8:	4a1f      	ldr	r2, [pc, #124]	; (8000c48 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x144>)
 8000bca:	4820      	ldr	r0, [pc, #128]	; (8000c4c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x148>)
 8000bcc:	f44f 7189 	mov.w	r1, #274	; 0x112
 8000bd0:	f021 f868 	bl	8021ca4 <__assert_func>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000bd4:	69da      	ldr	r2, [r3, #28]
 8000bd6:	8861      	ldrh	r1, [r4, #2]
 8000bd8:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 8000bdc:	3901      	subs	r1, #1
 8000bde:	f022 0210 	bic.w	r2, r2, #16
 8000be2:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8000be6:	61da      	str	r2, [r3, #28]
            bool blend = true;
 8000be8:	2001      	movs	r0, #1
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 8000bea:	4b14      	ldr	r3, [pc, #80]	; (8000c3c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000bec:	69da      	ldr	r2, [r3, #28]
 8000bee:	f042 0220 	orr.w	r2, r2, #32
 8000bf2:	61da      	str	r2, [r3, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 8000bf4:	69da      	ldr	r2, [r3, #28]
 8000bf6:	0692      	lsls	r2, r2, #26
 8000bf8:	d4fc      	bmi.n	8000bf4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf0>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 8000bfa:	2210      	movs	r2, #16
 8000bfc:	609a      	str	r2, [r3, #8]
            if(blend)
 8000bfe:	2800      	cmp	r0, #0
 8000c00:	d0bd      	beq.n	8000b7e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x7a>
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 8000c02:	4a13      	ldr	r2, [pc, #76]	; (8000c50 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14c>)
        }
        else
        {
            /* Start DMA2D : M2M Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8000c04:	601a      	str	r2, [r3, #0]
        }
        break;
    }
}
 8000c06:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000c0a:	8862      	ldrh	r2, [r4, #2]
 8000c0c:	69d9      	ldr	r1, [r3, #28]
 8000c0e:	1e54      	subs	r4, r2, #1
 8000c10:	f421 427f 	bic.w	r2, r1, #65280	; 0xff00
 8000c14:	f022 0210 	bic.w	r2, r2, #16
 8000c18:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
                if(blitOp.alpha == 255)
 8000c1c:	f1bc 00ff 	subs.w	r0, ip, #255	; 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000c20:	f042 0210 	orr.w	r2, r2, #16
                if(blitOp.alpha == 255)
 8000c24:	bf18      	it	ne
 8000c26:	2001      	movne	r0, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000c28:	61da      	str	r2, [r3, #28]
                break;
 8000c2a:	e7de      	b.n	8000bea <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe6>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000c2c:	f444 3400 	orr.w	r4, r4, #131072	; 0x20000
 8000c30:	61dc      	str	r4, [r3, #28]
 8000c32:	e7b8      	b.n	8000ba6 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa2>
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8000c34:	f240 2201 	movw	r2, #513	; 0x201
 8000c38:	e7e4      	b.n	8000c04 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
 8000c3a:	bf00      	nop
 8000c3c:	4002b000 	.word	0x4002b000
 8000c40:	00010201 	.word	0x00010201
 8000c44:	0802339c 	.word	0x0802339c
 8000c48:	080233b6 	.word	0x080233b6
 8000c4c:	08023305 	.word	0x08023305
 8000c50:	00020201 	.word	0x00020201

08000c54 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
 8000c54:	b570      	push	{r4, r5, r6, lr}
 8000c56:	460c      	mov	r4, r1
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000c58:	7f89      	ldrb	r1, [r1, #30]
 8000c5a:	f7ff ff35 	bl	8000ac8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000c5e:	8aa6      	ldrh	r6, [r4, #20]
 8000c60:	8ae1      	ldrh	r1, [r4, #22]

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c62:	8b62      	ldrh	r2, [r4, #26]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000c64:	4b15      	ldr	r3, [pc, #84]	; (8000cbc <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x68>)
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c66:	6925      	ldr	r5, [r4, #16]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000c68:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000c6a:	ea41 4106 	orr.w	r1, r1, r6, lsl #16
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c6e:	1b92      	subs	r2, r2, r6
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000c70:	6459      	str	r1, [r3, #68]	; 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c72:	63dd      	str	r5, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c74:	641a      	str	r2, [r3, #64]	; 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 8000c76:	6826      	ldr	r6, [r4, #0]
 8000c78:	68e1      	ldr	r1, [r4, #12]
 8000c7a:	2e08      	cmp	r6, #8
 8000c7c:	d10d      	bne.n	8000c9a <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x46>
    {
        /* DMA2D BGOR register configuration */
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c7e:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c80:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000c82:	6258      	str	r0, [r3, #36]	; 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8000c84:	7f20      	ldrb	r0, [r4, #28]
 8000c86:	4a0e      	ldr	r2, [pc, #56]	; (8000cc0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x6c>)
 8000c88:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 8000c8c:	61da      	str	r2, [r3, #28]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
 8000c8e:	4a0d      	ldr	r2, [pc, #52]	; (8000cc4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x70>)
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8000c90:	6219      	str	r1, [r3, #32]
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c92:	615d      	str	r5, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c94:	60dd      	str	r5, [r3, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8000c96:	601a      	str	r2, [r3, #0]
    }
}
 8000c98:	bd70      	pop	{r4, r5, r6, pc}
        WRITE_REG(DMA2D->FGOR, 0);
 8000c9a:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8000c9c:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 8000c9e:	611a      	str	r2, [r3, #16]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
 8000ca0:	0948      	lsrs	r0, r1, #5
 8000ca2:	0a0a      	lsrs	r2, r1, #8
 8000ca4:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8000ca8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8000cac:	4302      	orrs	r2, r0
 8000cae:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8000cb2:	430a      	orrs	r2, r1
 8000cb4:	639a      	str	r2, [r3, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8000cb6:	4a04      	ldr	r2, [pc, #16]	; (8000cc8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x74>)
 8000cb8:	e7ed      	b.n	8000c96 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x42>
 8000cba:	bf00      	nop
 8000cbc:	4002b000 	.word	0x4002b000
 8000cc0:	00010009 	.word	0x00010009
 8000cc4:	00020201 	.word	0x00020201
 8000cc8:	00030201 	.word	0x00030201

08000ccc <_ZN8touchgfx5paint6rgb5658tearDownEv>:
    * @brief Waits until previous DMA drawing operation has finished
    */
    void tearDown()
    {
        /* Wait for DMA2D to finish last run */
        while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8000ccc:	4b03      	ldr	r3, [pc, #12]	; (8000cdc <_ZN8touchgfx5paint6rgb5658tearDownEv+0x10>)
 8000cce:	681a      	ldr	r2, [r3, #0]
 8000cd0:	07d2      	lsls	r2, r2, #31
 8000cd2:	d4fc      	bmi.n	8000cce <_ZN8touchgfx5paint6rgb5658tearDownEv+0x2>

        /* Clear transfer flags */
        WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC|DMA2D_FLAG_CE|DMA2D_FLAG_TE);
 8000cd4:	2223      	movs	r2, #35	; 0x23
 8000cd6:	609a      	str	r2, [r3, #8]
    }
 8000cd8:	4770      	bx	lr
 8000cda:	bf00      	nop
 8000cdc:	4002b000 	.word	0x4002b000

08000ce0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
    *
    * @brief Renders Canvas Widget chunks using DMA.
    * This functions will not generate an interrupt, and will not affect the DMA queue.
    */
    void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
    {
 8000ce0:	b530      	push	{r4, r5, lr}
        /* Wait for DMA2D to finish last run */
        while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8000ce2:	4c0f      	ldr	r4, [pc, #60]	; (8000d20 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x40>)
 8000ce4:	6825      	ldr	r5, [r4, #0]
 8000ce6:	07ed      	lsls	r5, r5, #31
 8000ce8:	d4fc      	bmi.n	8000ce4 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4>

        /* Clear transfer flags */
        WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC|DMA2D_FLAG_CE|DMA2D_FLAG_TE);
 8000cea:	2523      	movs	r5, #35	; 0x23

        /* DMA2D OPFCCR register configuration */
        WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

        /* Configure DMA2D data size */
        WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000cec:	0409      	lsls	r1, r1, #16
        WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC|DMA2D_FLAG_CE|DMA2D_FLAG_TE);
 8000cee:	60a5      	str	r5, [r4, #8]
        WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000cf0:	f041 0101 	orr.w	r1, r1, #1
        WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8000cf4:	2502      	movs	r5, #2

        /* Configure DMA2D destination address */
        WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

        if (alpha < 0xFF)
 8000cf6:	2bff      	cmp	r3, #255	; 0xff
        WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8000cf8:	6365      	str	r5, [r4, #52]	; 0x34
        WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000cfa:	6461      	str	r1, [r4, #68]	; 0x44
        WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 8000cfc:	63e0      	str	r0, [r4, #60]	; 0x3c
        if (alpha < 0xFF)
 8000cfe:	d00a      	beq.n	8000d16 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x36>
        {
            /* Write DMA2D BGPFCCR register */
            WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));

            /* Write DMA2D FGPFCCR register */
            WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8000d00:	4908      	ldr	r1, [pc, #32]	; (8000d24 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x44>)
            WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000d02:	6265      	str	r5, [r4, #36]	; 0x24
            WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8000d04:	ea41 6303 	orr.w	r3, r1, r3, lsl #24
 8000d08:	61e3      	str	r3, [r4, #28]

            /* Configure DMA2D source address */
            WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);

            /* Enable the Peripheral and Enable the transfer complete interrupt */
            WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
 8000d0a:	4b07      	ldr	r3, [pc, #28]	; (8000d28 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x48>)
            WRITE_REG(DMA2D->FGCOLR, color);
 8000d0c:	6222      	str	r2, [r4, #32]
            WRITE_REG(DMA2D->BGMAR, (uint32_t)ptr);
 8000d0e:	6160      	str	r0, [r4, #20]
            WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);
 8000d10:	60e0      	str	r0, [r4, #12]

            /* Set color */
            WRITE_REG(DMA2D->OCOLR, color565);

            /* Enable the Peripheral and Enable the transfer complete interrupt */
            WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 8000d12:	6023      	str	r3, [r4, #0]
        }
    }
 8000d14:	bd30      	pop	{r4, r5, pc}
            WRITE_REG(DMA2D->FGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8000d16:	61e5      	str	r5, [r4, #28]
            WRITE_REG(DMA2D->OCOLR, color565);
 8000d18:	9b03      	ldr	r3, [sp, #12]
 8000d1a:	63a3      	str	r3, [r4, #56]	; 0x38
            WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 8000d1c:	4b03      	ldr	r3, [pc, #12]	; (8000d2c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4c>)
 8000d1e:	e7f8      	b.n	8000d12 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x32>
 8000d20:	4002b000 	.word	0x4002b000
 8000d24:	00010009 	.word	0x00010009
 8000d28:	00020001 	.word	0x00020001
 8000d2c:	00030001 	.word	0x00030001

08000d30 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8000d30:	2001      	movs	r0, #1
 8000d32:	4770      	bx	lr

08000d34 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8000d34:	2038      	movs	r0, #56	; 0x38
 8000d36:	4770      	bx	lr

08000d38 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 8000d38:	2338      	movs	r3, #56	; 0x38
 8000d3a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000d3e:	3008      	adds	r0, #8
 8000d40:	4770      	bx	lr

08000d42 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 8000d42:	2338      	movs	r3, #56	; 0x38
 8000d44:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000d48:	3008      	adds	r0, #8
 8000d4a:	4770      	bx	lr

08000d4c <_ZNK8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8000d4c:	2001      	movs	r0, #1
 8000d4e:	4770      	bx	lr

08000d50 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8000d50:	f641 4058 	movw	r0, #7256	; 0x1c58
 8000d54:	4770      	bx	lr

08000d56 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000d56:	f641 4358 	movw	r3, #7256	; 0x1c58
 8000d5a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000d5e:	3008      	adds	r0, #8
 8000d60:	4770      	bx	lr

08000d62 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000d62:	f641 4358 	movw	r3, #7256	; 0x1c58
 8000d66:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000d6a:	3008      	adds	r0, #8
 8000d6c:	4770      	bx	lr

08000d6e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8000d6e:	2001      	movs	r0, #1
 8000d70:	4770      	bx	lr

08000d72 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8000d72:	2010      	movs	r0, #16
 8000d74:	4770      	bx	lr

08000d76 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000d76:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8000d7a:	3008      	adds	r0, #8
 8000d7c:	4770      	bx	lr

08000d7e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000d7e:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8000d82:	3008      	adds	r0, #8
 8000d84:	4770      	bx	lr

08000d86 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoScreen1ScreenNoTransition();
 8000d86:	4608      	mov	r0, r1
 8000d88:	f001 bbd0 	b.w	800252c <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>

08000d8c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8000d8c:	b510      	push	{r4, lr}
 8000d8e:	4b03      	ldr	r3, [pc, #12]	; (8000d9c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
 8000d90:	6003      	str	r3, [r0, #0]
 8000d92:	4604      	mov	r4, r0
 8000d94:	f00b fb0f 	bl	800c3b6 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000d98:	4620      	mov	r0, r4
 8000d9a:	bd10      	pop	{r4, pc}
 8000d9c:	080234b4 	.word	0x080234b4

08000da0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
 8000da0:	b510      	push	{r4, lr}
 8000da2:	4604      	mov	r4, r0
 8000da4:	f7ff fff2 	bl	8000d8c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8000da8:	4620      	mov	r0, r4
 8000daa:	2140      	movs	r1, #64	; 0x40
 8000dac:	f020 ff4c 	bl	8021c48 <_ZdlPvj>
 8000db0:	4620      	mov	r0, r4
 8000db2:	bd10      	pop	{r4, pc}

08000db4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8000db4:	b510      	push	{r4, lr}
 8000db6:	4b03      	ldr	r3, [pc, #12]	; (8000dc4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000db8:	6003      	str	r3, [r0, #0]
 8000dba:	4604      	mov	r4, r0
 8000dbc:	f00b fafb 	bl	800c3b6 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000dc0:	4620      	mov	r0, r4
 8000dc2:	bd10      	pop	{r4, pc}
 8000dc4:	08023480 	.word	0x08023480

08000dc8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000dc8:	b510      	push	{r4, lr}
 8000dca:	4604      	mov	r4, r0
 8000dcc:	f7ff fff2 	bl	8000db4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000dd0:	4620      	mov	r0, r4
 8000dd2:	f44f 51e3 	mov.w	r1, #7264	; 0x1c60
 8000dd6:	f020 ff37 	bl	8021c48 <_ZdlPvj>
 8000dda:	4620      	mov	r0, r4
 8000ddc:	bd10      	pop	{r4, pc}
	...

08000de0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8000de0:	b510      	push	{r4, lr}
 8000de2:	4b03      	ldr	r3, [pc, #12]	; (8000df0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000de4:	6003      	str	r3, [r0, #0]
 8000de6:	4604      	mov	r4, r0
 8000de8:	f00b fae5 	bl	800c3b6 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000dec:	4620      	mov	r0, r4
 8000dee:	bd10      	pop	{r4, pc}
 8000df0:	0802344c 	.word	0x0802344c

08000df4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000df4:	b510      	push	{r4, lr}
 8000df6:	4604      	mov	r4, r0
 8000df8:	f7ff fff2 	bl	8000de0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000dfc:	4620      	mov	r0, r4
 8000dfe:	2118      	movs	r1, #24
 8000e00:	f020 ff22 	bl	8021c48 <_ZdlPvj>
 8000e04:	4620      	mov	r0, r4
 8000e06:	bd10      	pop	{r4, pc}

08000e08 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8000e08:	b510      	push	{r4, lr}
 8000e0a:	4b09      	ldr	r3, [pc, #36]	; (8000e30 <_ZN12FrontendHeapD1Ev+0x28>)
 8000e0c:	6003      	str	r3, [r0, #0]
 8000e0e:	4604      	mov	r4, r0
 8000e10:	f500 50e4 	add.w	r0, r0, #7296	; 0x1c80
 8000e14:	300c      	adds	r0, #12
 8000e16:	f7ff ffb9 	bl	8000d8c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8000e1a:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 8000e1e:	f7ff ffc9 	bl	8000db4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000e22:	f104 0014 	add.w	r0, r4, #20
 8000e26:	f7ff ffdb 	bl	8000de0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000e2a:	4620      	mov	r0, r4
 8000e2c:	bd10      	pop	{r4, pc}
 8000e2e:	bf00      	nop
 8000e30:	080234e8 	.word	0x080234e8

08000e34 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8000e34:	b508      	push	{r3, lr}
 8000e36:	4802      	ldr	r0, [pc, #8]	; (8000e40 <__tcf_0+0xc>)
 8000e38:	f7ff ffe6 	bl	8000e08 <_ZN12FrontendHeapD1Ev>
 8000e3c:	bd08      	pop	{r3, pc}
 8000e3e:	bf00      	nop
 8000e40:	200001a0 	.word	0x200001a0

08000e44 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 8000e44:	b510      	push	{r4, lr}
 8000e46:	4604      	mov	r4, r0
 8000e48:	f7ff ffde 	bl	8000e08 <_ZN12FrontendHeapD1Ev>
 8000e4c:	4620      	mov	r0, r4
 8000e4e:	f641 6128 	movw	r1, #7720	; 0x1e28
 8000e52:	f020 fef9 	bl	8021c48 <_ZdlPvj>
 8000e56:	4620      	mov	r0, r4
 8000e58:	bd10      	pop	{r4, pc}
	...

08000e5c <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 8000e5c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8000e60:	f001 f91e 	bl	80020a0 <_ZN14BitmapDatabase11getInstanceEv>
 8000e64:	4605      	mov	r5, r0
 8000e66:	f001 f91f 	bl	80020a8 <_ZN14BitmapDatabase15getInstanceSizeEv>
 8000e6a:	2400      	movs	r4, #0
 8000e6c:	4601      	mov	r1, r0
 8000e6e:	4623      	mov	r3, r4
 8000e70:	4628      	mov	r0, r5
 8000e72:	4622      	mov	r2, r4
 8000e74:	9400      	str	r4, [sp, #0]
 8000e76:	f014 fde7 	bl	8015a48 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 8000e7a:	4b26      	ldr	r3, [pc, #152]	; (8000f14 <touchgfx_init+0xb8>)
 8000e7c:	4a26      	ldr	r2, [pc, #152]	; (8000f18 <touchgfx_init+0xbc>)
        static FrontendHeap instance;
 8000e7e:	4d27      	ldr	r5, [pc, #156]	; (8000f1c <touchgfx_init+0xc0>)
 8000e80:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 8000e82:	4620      	mov	r0, r4
 8000e84:	f005 ff56 	bl	8006d34 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 8000e88:	4825      	ldr	r0, [pc, #148]	; (8000f20 <touchgfx_init+0xc4>)
 8000e8a:	f014 fd45 	bl	8015918 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8000e8e:	782b      	ldrb	r3, [r5, #0]
 8000e90:	f3bf 8f5b 	dmb	ish
 8000e94:	07db      	lsls	r3, r3, #31
 8000e96:	d437      	bmi.n	8000f08 <touchgfx_init+0xac>
 8000e98:	4628      	mov	r0, r5
 8000e9a:	f020 fed7 	bl	8021c4c <__cxa_guard_acquire>
 8000e9e:	b398      	cbz	r0, 8000f08 <touchgfx_init+0xac>
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 8000ea0:	4c20      	ldr	r4, [pc, #128]	; (8000f24 <touchgfx_init+0xc8>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 8000ea2:	4b21      	ldr	r3, [pc, #132]	; (8000f28 <touchgfx_init+0xcc>)
 8000ea4:	6023      	str	r3, [r4, #0]
 8000ea6:	f104 082c 	add.w	r8, r4, #44	; 0x2c
 8000eaa:	f508 57e3 	add.w	r7, r8, #7264	; 0x1c60
 8000eae:	f107 0644 	add.w	r6, r7, #68	; 0x44
 8000eb2:	f104 0014 	add.w	r0, r4, #20
 8000eb6:	6060      	str	r0, [r4, #4]
 8000eb8:	f8c4 8008 	str.w	r8, [r4, #8]
 8000ebc:	60e7      	str	r7, [r4, #12]
 8000ebe:	6126      	str	r6, [r4, #16]
 8000ec0:	f00b fa7a 	bl	800c3b8 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000ec4:	4b19      	ldr	r3, [pc, #100]	; (8000f2c <touchgfx_init+0xd0>)
 8000ec6:	6163      	str	r3, [r4, #20]
 8000ec8:	4640      	mov	r0, r8
 8000eca:	f00b fa75 	bl	800c3b8 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000ece:	4b18      	ldr	r3, [pc, #96]	; (8000f30 <touchgfx_init+0xd4>)
 8000ed0:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000ed2:	4638      	mov	r0, r7
 8000ed4:	f00b fa70 	bl	800c3b8 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000ed8:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8000edc:	4a15      	ldr	r2, [pc, #84]	; (8000f34 <touchgfx_init+0xd8>)
 8000ede:	f8c3 2c8c 	str.w	r2, [r3, #3212]	; 0xc8c
 8000ee2:	f603 40cc 	addw	r0, r3, #3276	; 0xccc
 8000ee6:	f005 ffa1 	bl	8006e2c <_ZN5ModelC1Ev>
 8000eea:	4622      	mov	r2, r4
 8000eec:	f508 51e5 	add.w	r1, r8, #7328	; 0x1ca0
 8000ef0:	4630      	mov	r0, r6
 8000ef2:	f005 ff91 	bl	8006e18 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 8000ef6:	4630      	mov	r0, r6
 8000ef8:	f001 fb18 	bl	800252c <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
        static FrontendHeap instance;
 8000efc:	480e      	ldr	r0, [pc, #56]	; (8000f38 <touchgfx_init+0xdc>)
 8000efe:	f020 feef 	bl	8021ce0 <atexit>
 8000f02:	4628      	mov	r0, r5
 8000f04:	f020 feae 	bl	8021c64 <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 8000f08:	480c      	ldr	r0, [pc, #48]	; (8000f3c <touchgfx_init+0xe0>)
}
 8000f0a:	b002      	add	sp, #8
 8000f0c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8000f10:	f7ff bc3d 	b.w	800078e <_ZN11TouchGFXHAL10initializeEv>
 8000f14:	200179b0 	.word	0x200179b0
 8000f18:	20002de8 	.word	0x20002de8
 8000f1c:	2000019c 	.word	0x2000019c
 8000f20:	20000008 	.word	0x20000008
 8000f24:	200001a0 	.word	0x200001a0
 8000f28:	080234e8 	.word	0x080234e8
 8000f2c:	0802344c 	.word	0x0802344c
 8000f30:	08023480 	.word	0x08023480
 8000f34:	080234b4 	.word	0x080234b4
 8000f38:	08000e35 	.word	0x08000e35
 8000f3c:	20002d6c 	.word	0x20002d6c

08000f40 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 8000f40:	4801      	ldr	r0, [pc, #4]	; (8000f48 <touchgfx_taskEntry+0x8>)
 8000f42:	f7ff bc26 	b.w	8000792 <_ZN11TouchGFXHAL9taskEntryEv>
 8000f46:	bf00      	nop
 8000f48:	20002d6c 	.word	0x20002d6c

08000f4c <_GLOBAL__sub_I_touchgfx_init>:
}
 8000f4c:	b570      	push	{r4, r5, r6, lr}
{
public:

    STM32TouchController() {}
 8000f4e:	4c23      	ldr	r4, [pc, #140]	; (8000fdc <_GLOBAL__sub_I_touchgfx_init+0x90>)
static STM32DMA dma;
 8000f50:	4e23      	ldr	r6, [pc, #140]	; (8000fe0 <_GLOBAL__sub_I_touchgfx_init+0x94>)
 8000f52:	4b24      	ldr	r3, [pc, #144]	; (8000fe4 <_GLOBAL__sub_I_touchgfx_init+0x98>)
static LCD16bpp display;
 8000f54:	4d24      	ldr	r5, [pc, #144]	; (8000fe8 <_GLOBAL__sub_I_touchgfx_init+0x9c>)
 8000f56:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 8000f58:	4630      	mov	r0, r6
 8000f5a:	f7ff fd7b 	bl	8000a54 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 8000f5e:	4628      	mov	r0, r5
 8000f60:	f017 fe7c 	bl	8018c5c <_ZN8touchgfx8LCD16bppC1Ev>
          lastRenderMethod(HARDWARE)
 8000f64:	4b21      	ldr	r3, [pc, #132]	; (8000fec <_GLOBAL__sub_I_touchgfx_init+0xa0>)
        instance = this;
 8000f66:	4822      	ldr	r0, [pc, #136]	; (8000ff0 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
          lastRenderMethod(HARDWARE)
 8000f68:	60dc      	str	r4, [r3, #12]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000f6a:	4c22      	ldr	r4, [pc, #136]	; (8000ff4 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
        instance = this;
 8000f6c:	6003      	str	r3, [r0, #0]
          lastRenderMethod(HARDWARE)
 8000f6e:	2200      	movs	r2, #0
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000f70:	20f0      	movs	r0, #240	; 0xf0
          lastRenderMethod(HARDWARE)
 8000f72:	f44f 7180 	mov.w	r1, #256	; 0x100
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000f76:	8020      	strh	r0, [r4, #0]
          lastRenderMethod(HARDWARE)
 8000f78:	e9c3 1212 	strd	r1, r2, [r3, #72]	; 0x48
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000f7c:	4c1e      	ldr	r4, [pc, #120]	; (8000ff8 <_GLOBAL__sub_I_touchgfx_init+0xac>)
          lastRenderMethod(HARDWARE)
 8000f7e:	491f      	ldr	r1, [pc, #124]	; (8000ffc <_GLOBAL__sub_I_touchgfx_init+0xb0>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000f80:	8020      	strh	r0, [r4, #0]
          lastRenderMethod(HARDWARE)
 8000f82:	e9c3 1219 	strd	r1, r2, [r3, #100]	; 0x64
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000f86:	4c1e      	ldr	r4, [pc, #120]	; (8001000 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 8000f88:	861a      	strh	r2, [r3, #48]	; 0x30
          lastRenderMethod(HARDWARE)
 8000f8a:	f04f 7180 	mov.w	r1, #16777216	; 0x1000000
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000f8e:	f44f 70a0 	mov.w	r0, #320	; 0x140
          lastRenderMethod(HARDWARE)
 8000f92:	6759      	str	r1, [r3, #116]	; 0x74
 8000f94:	2101      	movs	r1, #1
 8000f96:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8000f9a:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8000f9e:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8000fa2:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
 8000fa6:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
 8000faa:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 8000fae:	e9c3 2214 	strd	r2, r2, [r3, #80]	; 0x50
 8000fb2:	e9c3 2216 	strd	r2, r2, [r3, #88]	; 0x58
 8000fb6:	661a      	str	r2, [r3, #96]	; 0x60
 8000fb8:	f883 206c 	strb.w	r2, [r3, #108]	; 0x6c
 8000fbc:	671a      	str	r2, [r3, #112]	; 0x70
 8000fbe:	e9c3 6501 	strd	r6, r5, [r3, #4]
 8000fc2:	f883 1078 	strb.w	r1, [r3, #120]	; 0x78
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000fc6:	8020      	strh	r0, [r4, #0]
 8000fc8:	4c0e      	ldr	r4, [pc, #56]	; (8001004 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8000fca:	f883 1034 	strb.w	r1, [r3, #52]	; 0x34
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000fce:	8020      	strh	r0, [r4, #0]
        DISPLAY_ROTATION = rotate0;
 8000fd0:	480d      	ldr	r0, [pc, #52]	; (8001008 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
 8000fd2:	7002      	strb	r2, [r0, #0]
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 8000fd4:	4a0d      	ldr	r2, [pc, #52]	; (800100c <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 8000fd6:	601a      	str	r2, [r3, #0]
}
 8000fd8:	bd70      	pop	{r4, r5, r6, pc}
 8000fda:	bf00      	nop
 8000fdc:	20001fc8 	.word	0x20001fc8
 8000fe0:	20001fcc 	.word	0x20001fcc
 8000fe4:	08022f3c 	.word	0x08022f3c
 8000fe8:	20002dec 	.word	0x20002dec
 8000fec:	20002d6c 	.word	0x20002d6c
 8000ff0:	2001794c 	.word	0x2001794c
 8000ff4:	20017940 	.word	0x20017940
 8000ff8:	20017946 	.word	0x20017946
 8000ffc:	01000001 	.word	0x01000001
 8001000:	20017942 	.word	0x20017942
 8001004:	20017948 	.word	0x20017948
 8001008:	20017944 	.word	0x20017944
 800100c:	080230c8 	.word	0x080230c8

08001010 <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
 8001010:	4801      	ldr	r0, [pc, #4]	; (8001018 <_GLOBAL__sub_D_touchgfx_init+0x8>)
 8001012:	f7ff bcfb 	b.w	8000a0c <_ZN8STM32DMAD1Ev>
 8001016:	bf00      	nop
 8001018:	20001fcc 	.word	0x20001fcc

0800101c <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800101c:	4b03      	ldr	r3, [pc, #12]	; (800102c <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
 800101e:	2290      	movs	r2, #144	; 0x90
 8001020:	f883 235a 	strb.w	r2, [r3, #858]	; 0x35a
 8001024:	f883 2358 	strb.w	r2, [r3, #856]	; 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 8001028:	4770      	bx	lr
 800102a:	bf00      	nop
 800102c:	e000e100 	.word	0xe000e100

08001030 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8001030:	4a09      	ldr	r2, [pc, #36]	; (8001058 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 8001032:	490a      	ldr	r1, [pc, #40]	; (800105c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 8001034:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 8001036:	480a      	ldr	r0, [pc, #40]	; (8001060 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8001038:	f3c3 030a 	ubfx	r3, r3, #0, #11
 800103c:	3b01      	subs	r3, #1
 800103e:	b29b      	uxth	r3, r3
 8001040:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 8001042:	6911      	ldr	r1, [r2, #16]
 8001044:	f3c1 010a 	ubfx	r1, r1, #0, #11
 8001048:	3901      	subs	r1, #1
 800104a:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 800104c:	6413      	str	r3, [r2, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 800104e:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8001050:	f043 0301 	orr.w	r3, r3, #1
 8001054:	6353      	str	r3, [r2, #52]	; 0x34
}
 8001056:	4770      	bx	lr
 8001058:	40016800 	.word	0x40016800
 800105c:	20002e68 	.word	0x20002e68
 8001060:	20002e66 	.word	0x20002e66

08001064 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 8001064:	4b01      	ldr	r3, [pc, #4]	; (800106c <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 8001066:	f8d3 00ac 	ldr.w	r0, [r3, #172]	; 0xac
}
 800106a:	4770      	bx	lr
 800106c:	40016800 	.word	0x40016800

08001070 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001070:	4b02      	ldr	r3, [pc, #8]	; (800107c <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8001072:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001074:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8001078:	625a      	str	r2, [r3, #36]	; 0x24
}
 800107a:	4770      	bx	lr
 800107c:	40016800 	.word	0x40016800

08001080 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 8001080:	b570      	push	{r4, r5, r6, lr}
 8001082:	4604      	mov	r4, r0
    HAL::initialize();
 8001084:	f00b fc9f 	bl	800c9c6 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 8001088:	6823      	ldr	r3, [r4, #0]
 800108a:	6e5d      	ldr	r5, [r3, #100]	; 0x64
 800108c:	f011 fac0 	bl	8012610 <_ZN8touchgfx11Application11getInstanceEv>
 8001090:	4601      	mov	r1, r0
 8001092:	4620      	mov	r0, r4
 8001094:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 8001096:	6823      	ldr	r3, [r4, #0]
 8001098:	4a05      	ldr	r2, [pc, #20]	; (80010b0 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 800109a:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 800109e:	4620      	mov	r0, r4
 80010a0:	46ac      	mov	ip, r5
 80010a2:	2300      	movs	r3, #0
}
 80010a4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 80010a8:	f5a2 3116 	sub.w	r1, r2, #153600	; 0x25800
 80010ac:	4760      	bx	ip
 80010ae:	bf00      	nop
 80010b0:	d0025800 	.word	0xd0025800

080010b4 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 80010b4:	f00b bc6e 	b.w	800c994 <_ZN8touchgfx3HAL10beginFrameEv>

080010b8 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    if (frameBufferUpdatedThisFrame)
 80010b8:	f890 304b 	ldrb.w	r3, [r0, #75]	; 0x4b
 80010bc:	b113      	cbz	r3, 80010c4 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0xc>
        refreshRequested = true;
 80010be:	4b02      	ldr	r3, [pc, #8]	; (80010c8 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x10>)
 80010c0:	2201      	movs	r2, #1
 80010c2:	701a      	strb	r2, [r3, #0]
    HAL::endFrame();
 80010c4:	f00b bc72 	b.w	800c9ac <_ZN8touchgfx3HAL8endFrameEv>
 80010c8:	20002e64 	.word	0x20002e64

080010cc <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 80010cc:	f00b bc2c 	b.w	800c928 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

080010d0 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 80010d0:	f00b bd85 	b.w	800cbde <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

080010d4 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80010d4:	4b03      	ldr	r3, [pc, #12]	; (80010e4 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
 80010d6:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80010da:	609a      	str	r2, [r3, #8]
 80010dc:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 80010e0:	609a      	str	r2, [r3, #8]
}
 80010e2:	4770      	bx	lr
 80010e4:	e000e100 	.word	0xe000e100

080010e8 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80010e8:	4b08      	ldr	r3, [pc, #32]	; (800110c <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
 80010ea:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80010ee:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 80010f2:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80010f6:	f3bf 8f6f 	isb	sy
 80010fa:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 80010fe:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 8001102:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001106:	f3bf 8f6f 	isb	sy
}
 800110a:	4770      	bx	lr
 800110c:	e000e100 	.word	0xe000e100

08001110 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 8001110:	b510      	push	{r4, lr}
        return instance;
 8001112:	4c14      	ldr	r4, [pc, #80]	; (8001164 <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
 8001114:	6823      	ldr	r3, [r4, #0]
 8001116:	b323      	cbz	r3, 8001162 <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 8001118:	4b13      	ldr	r3, [pc, #76]	; (8001168 <HAL_LTDC_LineEventCallback+0x58>)
 800111a:	4a14      	ldr	r2, [pc, #80]	; (800116c <HAL_LTDC_LineEventCallback+0x5c>)
 800111c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800111e:	8811      	ldrh	r1, [r2, #0]
 8001120:	428b      	cmp	r3, r1
 8001122:	d113      	bne.n	800114c <HAL_LTDC_LineEventCallback+0x3c>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 8001124:	4b12      	ldr	r3, [pc, #72]	; (8001170 <HAL_LTDC_LineEventCallback+0x60>)
 8001126:	8819      	ldrh	r1, [r3, #0]
 8001128:	f007 fe3e 	bl	8008da8 <HAL_LTDC_ProgramLineEvent>
 800112c:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 800112e:	f892 3066 	ldrb.w	r3, [r2, #102]	; 0x66
 8001132:	3301      	adds	r3, #1
 8001134:	f882 3066 	strb.w	r3, [r2, #102]	; 0x66
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 8001138:	f7ff fc16 	bl	8000968 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 800113c:	6820      	ldr	r0, [r4, #0]
 800113e:	f00c f979 	bl	800d434 <_ZN8touchgfx3HAL16swapFrameBuffersEv>

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 8001142:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 8001146:	2000      	movs	r0, #0
 8001148:	f7ff bafa 	b.w	8000740 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 800114c:	f007 fe2c 	bl	8008da8 <HAL_LTDC_ProgramLineEvent>
        return instance;
 8001150:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
 8001152:	6803      	ldr	r3, [r0, #0]
 8001154:	6a1b      	ldr	r3, [r3, #32]
 8001156:	4798      	blx	r3
    }
 8001158:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 800115c:	2000      	movs	r0, #0
 800115e:	f7ff baf0 	b.w	8000742 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 8001162:	bd10      	pop	{r4, pc}
 8001164:	2001794c 	.word	0x2001794c
 8001168:	40016800 	.word	0x40016800
 800116c:	20002e68 	.word	0x20002e68
 8001170:	20002e66 	.word	0x20002e66

08001174 <SPI5_Write>:
/**
  * @brief  Writes a byte to device.
  * @param  Value: value to be written
  */
static void SPI5_Write(uint16_t Value)
{
 8001174:	b507      	push	{r0, r1, r2, lr}
  HAL_StatusTypeDef status = HAL_OK;
  
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001176:	4b06      	ldr	r3, [pc, #24]	; (8001190 <SPI5_Write+0x1c>)
{
 8001178:	f8ad 0006 	strh.w	r0, [sp, #6]
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 800117c:	681b      	ldr	r3, [r3, #0]
 800117e:	4805      	ldr	r0, [pc, #20]	; (8001194 <SPI5_Write+0x20>)
 8001180:	2201      	movs	r2, #1
 8001182:	f10d 0106 	add.w	r1, sp, #6
 8001186:	f008 fb20 	bl	80097ca <HAL_SPI_Transmit>
  if(status != HAL_OK)
  {
    /* Re-Initialize the BUS */
    SPI5_Error();
  }
}
 800118a:	b003      	add	sp, #12
 800118c:	f85d fb04 	ldr.w	pc, [sp], #4
 8001190:	20000010 	.word	0x20000010
 8001194:	2000304c 	.word	0x2000304c

08001198 <CountAvgFrom60sec>:
			result+=ladowarka.PomiaryCoSec[i];
 8001198:	490c      	ldr	r1, [pc, #48]	; (80011cc <CountAvgFrom60sec+0x34>)
float CountAvgFrom60sec(){
 800119a:	b082      	sub	sp, #8
 800119c:	2300      	movs	r3, #0
			result+=ladowarka.PomiaryCoSec[i];
 800119e:	f603 6214 	addw	r2, r3, #3604	; 0xe14
 80011a2:	eb01 0282 	add.w	r2, r1, r2, lsl #2
 80011a6:	ed92 7a01 	vldr	s14, [r2, #4]
 80011aa:	eddd 7a01 	vldr	s15, [sp, #4]
		for (uint8_t i=0;i<60;i++)
 80011ae:	3301      	adds	r3, #1
			result+=ladowarka.PomiaryCoSec[i];
 80011b0:	ee77 7a87 	vadd.f32	s15, s15, s14
		for (uint8_t i=0;i<60;i++)
 80011b4:	2b3c      	cmp	r3, #60	; 0x3c
			result+=ladowarka.PomiaryCoSec[i];
 80011b6:	edcd 7a01 	vstr	s15, [sp, #4]
		for (uint8_t i=0;i<60;i++)
 80011ba:	d1f0      	bne.n	800119e <CountAvgFrom60sec+0x6>
	return result/60;
 80011bc:	ed9d 0a01 	vldr	s0, [sp, #4]
}
 80011c0:	eddf 7a03 	vldr	s15, [pc, #12]	; 80011d0 <CountAvgFrom60sec+0x38>
 80011c4:	ee80 0a27 	vdiv.f32	s0, s0, s15
 80011c8:	b002      	add	sp, #8
 80011ca:	4770      	bx	lr
 80011cc:	200030e4 	.word	0x200030e4
 80011d0:	42700000 	.word	0x42700000

080011d4 <ZadanieDwa>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_ZadanieDwa */
__weak void ZadanieDwa(void *argument)
{
 80011d4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	  static int liczbaPomiarow=0; // number of adc measurements. if 10 then clear
	  static volatile uint32_t value=0; //actual value of adc measurement

	  static int sec0to59=0;

		if(ladowarka.Minelo100ms){ //jesli zostalo wykryte przerwanie z liniczka7
 80011d8:	4c40      	ldr	r4, [pc, #256]	; (80012dc <ZadanieDwa+0x108>)
 80011da:	f504 5540 	add.w	r5, r4, #12288	; 0x3000
 80011de:	f8d5 3948 	ldr.w	r3, [r5, #2376]	; 0x948
 80011e2:	2b00      	cmp	r3, #0
 80011e4:	d069      	beq.n	80012ba <ZadanieDwa+0xe6>
			ladowarka.Minelo100ms=0; //kasuj flage
 80011e6:	2300      	movs	r3, #0

					//pomiar napiecia
					HAL_ADC_Start(&hadc1);
 80011e8:	483d      	ldr	r0, [pc, #244]	; (80012e0 <ZadanieDwa+0x10c>)
			ladowarka.Minelo100ms=0; //kasuj flage
 80011ea:	f8c5 3948 	str.w	r3, [r5, #2376]	; 0x948
					HAL_ADC_PollForConversion(&hadc1, HAL_MAX_DELAY);
					value += HAL_ADC_GetValue(&hadc1);
					liczbaPomiarow++;
 80011ee:	4f3d      	ldr	r7, [pc, #244]	; (80012e4 <ZadanieDwa+0x110>)
					value += HAL_ADC_GetValue(&hadc1);
 80011f0:	4e3d      	ldr	r6, [pc, #244]	; (80012e8 <ZadanieDwa+0x114>)
					HAL_ADC_Start(&hadc1);
 80011f2:	f006 fbdf 	bl	80079b4 <HAL_ADC_Start>
					HAL_ADC_PollForConversion(&hadc1, HAL_MAX_DELAY);
 80011f6:	f04f 31ff 	mov.w	r1, #4294967295
 80011fa:	4839      	ldr	r0, [pc, #228]	; (80012e0 <ZadanieDwa+0x10c>)
 80011fc:	f006 fc4e 	bl	8007a9c <HAL_ADC_PollForConversion>
					value += HAL_ADC_GetValue(&hadc1);
 8001200:	4837      	ldr	r0, [pc, #220]	; (80012e0 <ZadanieDwa+0x10c>)
 8001202:	f006 fc9a 	bl	8007b3a <HAL_ADC_GetValue>
					liczbaPomiarow++;
 8001206:	683a      	ldr	r2, [r7, #0]
					value += HAL_ADC_GetValue(&hadc1);
 8001208:	6833      	ldr	r3, [r6, #0]
					liczbaPomiarow++;
 800120a:	3201      	adds	r2, #1
 800120c:	210a      	movs	r1, #10
					value += HAL_ADC_GetValue(&hadc1);
 800120e:	4418      	add	r0, r3
					liczbaPomiarow++;
 8001210:	603a      	str	r2, [r7, #0]
 8001212:	fb92 f3f1 	sdiv	r3, r2, r1
 8001216:	fb01 2213 	mls	r2, r1, r3, r2
					value += HAL_ADC_GetValue(&hadc1);
 800121a:	6030      	str	r0, [r6, #0]

					/****** jesli minela sekunda ->10tickow co 100ms********/
					if(liczbaPomiarow%10==0){ //jesli minela sekunda
 800121c:	2a00      	cmp	r2, #0
 800121e:	d14c      	bne.n	80012ba <ZadanieDwa+0xe6>
						ladowarka.BatteryVoltage=(value/10) * 3.3f / 4096.0f;
 8001220:	6833      	ldr	r3, [r6, #0]
 8001222:	fbb3 f3f1 	udiv	r3, r3, r1
 8001226:	ee07 3a90 	vmov	s15, r3
 800122a:	ed9f 7a30 	vldr	s14, [pc, #192]	; 80012ec <ZadanieDwa+0x118>
 800122e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001232:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001236:	ed9f 7a2e 	vldr	s14, [pc, #184]	; 80012f0 <ZadanieDwa+0x11c>
 800123a:	ee67 7a87 	vmul.f32	s15, s15, s14
 800123e:	edc4 7a00 	vstr	s15, [r4]

						if (ladowarka.ChargeStarted){ //jesli zaczeto ladwowac
 8001242:	68e3      	ldr	r3, [r4, #12]
 8001244:	b3b3      	cbz	r3, 80012b4 <ZadanieDwa+0xe0>
							if (ladowarka.CzsasLadowaniaWSec<2) ladowarka.NapiecieBaterii[0]=ladowarka.BatteryVoltage; //dla 0 pomiaru dodaj od razy do tablicy
 8001246:	f8d5 3950 	ldr.w	r3, [r5, #2384]	; 0x950
							if (ladowarka.BatteryVoltage>ladowarka.MaxBatteryVoltage) ladowarka.MaxBatteryVoltage=ladowarka.BatteryVoltage; //uaktualnij max wartosc.
							ladowarka.CzsasLadowaniaWSec++; //jesli zaczal sie proces ladowana ziwekszja wartosc czas ladowania w sec
							ladowarka.narysujPunktNaWykresie=1; //zezwol na narysowanie danej na wykresie

							/********* dodawanie co 1 sek wartosc pomiaru do tabeli********/
							ladowarka.PomiaryCoSec[sec0to59++]=ladowarka.BatteryVoltage;
 800124a:	f8df 80ac 	ldr.w	r8, [pc, #172]	; 80012f8 <ZadanieDwa+0x124>
							if (ladowarka.CzsasLadowaniaWSec<2) ladowarka.NapiecieBaterii[0]=ladowarka.BatteryVoltage; //dla 0 pomiaru dodaj od razy do tablicy
 800124e:	2b01      	cmp	r3, #1
 8001250:	bfdc      	itt	le
 8001252:	6823      	ldrle	r3, [r4, #0]
 8001254:	6163      	strle	r3, [r4, #20]
							if (ladowarka.BatteryVoltage>ladowarka.MaxBatteryVoltage) ladowarka.MaxBatteryVoltage=ladowarka.BatteryVoltage; //uaktualnij max wartosc.
 8001256:	ed94 7a00 	vldr	s14, [r4]
 800125a:	edd4 7a01 	vldr	s15, [r4, #4]
 800125e:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8001262:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001266:	bfc4      	itt	gt
 8001268:	6823      	ldrgt	r3, [r4, #0]
 800126a:	6063      	strgt	r3, [r4, #4]
							ladowarka.CzsasLadowaniaWSec++; //jesli zaczal sie proces ladowana ziwekszja wartosc czas ladowania w sec
 800126c:	f8d5 3950 	ldr.w	r3, [r5, #2384]	; 0x950
 8001270:	3301      	adds	r3, #1
 8001272:	f8c5 3950 	str.w	r3, [r5, #2384]	; 0x950
							ladowarka.narysujPunktNaWykresie=1; //zezwol na narysowanie danej na wykresie
 8001276:	2301      	movs	r3, #1
 8001278:	f8c5 394c 	str.w	r3, [r5, #2380]	; 0x94c
							ladowarka.PomiaryCoSec[sec0to59++]=ladowarka.BatteryVoltage;
 800127c:	f8d8 3000 	ldr.w	r3, [r8]
 8001280:	6821      	ldr	r1, [r4, #0]
 8001282:	1c5a      	adds	r2, r3, #1
 8001284:	f603 6314 	addw	r3, r3, #3604	; 0xe14
 8001288:	eb04 0383 	add.w	r3, r4, r3, lsl #2
							if (sec0to59>59) {	//jesli mamy 10 elementow w tabeli (minelo 10sec) usrednij i dodaj wartosc do NapiecieBaterii
 800128c:	2a3b      	cmp	r2, #59	; 0x3b
							ladowarka.PomiaryCoSec[sec0to59++]=ladowarka.BatteryVoltage;
 800128e:	f8c8 2000 	str.w	r2, [r8]
 8001292:	6059      	str	r1, [r3, #4]
							if (sec0to59>59) {	//jesli mamy 10 elementow w tabeli (minelo 10sec) usrednij i dodaj wartosc do NapiecieBaterii
 8001294:	dd0e      	ble.n	80012b4 <ZadanieDwa+0xe0>
								ladowarka.NapiecieBaterii[ladowarka.CzsasLadowaniaWSec/60]=CountAvgFrom60sec(); // TO DO srednia z 10 pomiarow
 8001296:	233c      	movs	r3, #60	; 0x3c
 8001298:	f8d5 0950 	ldr.w	r0, [r5, #2384]	; 0x950
 800129c:	fb90 f0f3 	sdiv	r0, r0, r3
 80012a0:	f7ff ff7a 	bl	8001198 <CountAvgFrom60sec>
 80012a4:	3004      	adds	r0, #4
 80012a6:	eb04 0080 	add.w	r0, r4, r0, lsl #2
								sec0to59=0;
 80012aa:	2300      	movs	r3, #0
								ladowarka.NapiecieBaterii[ladowarka.CzsasLadowaniaWSec/60]=CountAvgFrom60sec(); // TO DO srednia z 10 pomiarow
 80012ac:	ed80 0a01 	vstr	s0, [r0, #4]
								sec0to59=0;
 80012b0:	f8c8 3000 	str.w	r3, [r8]
							}

						}
						liczbaPomiarow=0; //po 1 sek ustaw to na 0
 80012b4:	2300      	movs	r3, #0
 80012b6:	603b      	str	r3, [r7, #0]
						value=0;
 80012b8:	6033      	str	r3, [r6, #0]


					}

					/*************** generowanie napiecia ***************************/
					if(ladowarka.ChargeStarted==1 && ladowarka.UstawioneNapiecieNaopAmpie==0 ) { //jesli kliknieto przycik na GUI START   i nie ustawiono jeszce napiecia na op ampie
 80012ba:	68e6      	ldr	r6, [r4, #12]
 80012bc:	2e01      	cmp	r6, #1
 80012be:	d108      	bne.n	80012d2 <ZadanieDwa+0xfe>
 80012c0:	6922      	ldr	r2, [r4, #16]
 80012c2:	b932      	cbnz	r2, 80012d2 <ZadanieDwa+0xfe>
							HAL_DAC_SetValue(&hdac, DAC_CHANNEL_2, DAC_ALIGN_12B_R, 1365);  //ustaw poprawne napiece tutaj (3V)
 80012c4:	480b      	ldr	r0, [pc, #44]	; (80012f4 <ZadanieDwa+0x120>)
 80012c6:	f240 5355 	movw	r3, #1365	; 0x555
 80012ca:	2110      	movs	r1, #16
 80012cc:	f006 fd97 	bl	8007dfe <HAL_DAC_SetValue>
							ladowarka.UstawioneNapiecieNaopAmpie=1;
 80012d0:	6126      	str	r6, [r4, #16]
					}



    osDelay(1); //to chyba ma zostac?
 80012d2:	2001      	movs	r0, #1
 80012d4:	f008 ff60 	bl	800a198 <osDelay>
  {
 80012d8:	e781      	b.n	80011de <ZadanieDwa+0xa>
 80012da:	bf00      	nop
 80012dc:	200030e4 	.word	0x200030e4
 80012e0:	20002e78 	.word	0x20002e78
 80012e4:	20006a38 	.word	0x20006a38
 80012e8:	20006a40 	.word	0x20006a40
 80012ec:	40533333 	.word	0x40533333
 80012f0:	39800000 	.word	0x39800000
 80012f4:	20002ec8 	.word	0x20002ec8
 80012f8:	20006a3c 	.word	0x20006a3c

080012fc <SystemClock_Config>:
{
 80012fc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80012fe:	b0a1      	sub	sp, #132	; 0x84
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001300:	2210      	movs	r2, #16
 8001302:	2100      	movs	r1, #0
 8001304:	a80a      	add	r0, sp, #40	; 0x28
 8001306:	f020 fe53 	bl	8021fb0 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 800130a:	2214      	movs	r2, #20
 800130c:	2100      	movs	r1, #0
 800130e:	a803      	add	r0, sp, #12
 8001310:	f020 fe4e 	bl	8021fb0 <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001314:	2100      	movs	r1, #0
 8001316:	2230      	movs	r2, #48	; 0x30
 8001318:	a814      	add	r0, sp, #80	; 0x50
 800131a:	f020 fe49 	bl	8021fb0 <memset>
  __HAL_RCC_PWR_CLK_ENABLE();
 800131e:	2400      	movs	r4, #0
 8001320:	4b22      	ldr	r3, [pc, #136]	; (80013ac <SystemClock_Config+0xb0>)
 8001322:	9401      	str	r4, [sp, #4]
 8001324:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001326:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800132a:	641a      	str	r2, [r3, #64]	; 0x40
 800132c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800132e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001332:	9301      	str	r3, [sp, #4]
 8001334:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001336:	4b1e      	ldr	r3, [pc, #120]	; (80013b0 <SystemClock_Config+0xb4>)
 8001338:	9402      	str	r4, [sp, #8]
 800133a:	681a      	ldr	r2, [r3, #0]
 800133c:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 8001340:	601a      	str	r2, [r3, #0]
 8001342:	681b      	ldr	r3, [r3, #0]
 8001344:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8001348:	9302      	str	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 800134a:	2201      	movs	r2, #1
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 800134c:	9b02      	ldr	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 800134e:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8001352:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001356:	2502      	movs	r5, #2
 8001358:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 800135c:	e9cd 530e 	strd	r5, r3, [sp, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLN = 336;
 8001360:	2708      	movs	r7, #8
 8001362:	f44f 73a8 	mov.w	r3, #336	; 0x150
  RCC_OscInitStruct.PLL.PLLQ = 4;
 8001366:	2604      	movs	r6, #4
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001368:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLN = 336;
 800136a:	e9cd 7310 	strd	r7, r3, [sp, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 800136e:	9512      	str	r5, [sp, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLQ = 4;
 8001370:	9613      	str	r6, [sp, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001372:	f007 fd37 	bl	8008de4 <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001376:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001378:	e9cd 3503 	strd	r3, r5, [sp, #12]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 800137c:	f44f 51a0 	mov.w	r1, #5120	; 0x1400
 8001380:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8001384:	e9cd 1306 	strd	r1, r3, [sp, #24]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001388:	a803      	add	r0, sp, #12
 800138a:	2105      	movs	r1, #5
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 800138c:	9405      	str	r4, [sp, #20]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 800138e:	f007 ff01 	bl	8009194 <HAL_RCC_ClockConfig>
  PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 8001392:	23c0      	movs	r3, #192	; 0xc0
 8001394:	9318      	str	r3, [sp, #96]	; 0x60
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001396:	a814      	add	r0, sp, #80	; 0x50
  PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8001398:	f44f 3300 	mov.w	r3, #131072	; 0x20000
  PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 800139c:	9714      	str	r7, [sp, #80]	; 0x50
  PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 800139e:	961a      	str	r6, [sp, #104]	; 0x68
  PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 80013a0:	931d      	str	r3, [sp, #116]	; 0x74
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80013a2:	f007 ffd1 	bl	8009348 <HAL_RCCEx_PeriphCLKConfig>
}
 80013a6:	b021      	add	sp, #132	; 0x84
 80013a8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80013aa:	bf00      	nop
 80013ac:	40023800 	.word	0x40023800
 80013b0:	40007000 	.word	0x40007000

080013b4 <main>:
{
 80013b4:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
 80013b8:	b09b      	sub	sp, #108	; 0x6c
  HAL_Init();
 80013ba:	f006 fa15 	bl	80077e8 <HAL_Init>
  SystemClock_Config();
 80013be:	f7ff ff9d 	bl	80012fc <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80013c2:	2214      	movs	r2, #20
 80013c4:	2100      	movs	r1, #0
 80013c6:	a80d      	add	r0, sp, #52	; 0x34
  __HAL_RCC_GPIOF_CLK_ENABLE();
 80013c8:	2400      	movs	r4, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80013ca:	f020 fdf1 	bl	8021fb0 <memset>
  __HAL_RCC_GPIOF_CLK_ENABLE();
 80013ce:	4bc4      	ldr	r3, [pc, #784]	; (80016e0 <main+0x32c>)
 80013d0:	9400      	str	r4, [sp, #0]
 80013d2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80013d4:	48c3      	ldr	r0, [pc, #780]	; (80016e4 <main+0x330>)
  hi2c3.Instance = I2C3;
 80013d6:	4dc4      	ldr	r5, [pc, #784]	; (80016e8 <main+0x334>)
  __HAL_RCC_GPIOF_CLK_ENABLE();
 80013d8:	f042 0220 	orr.w	r2, r2, #32
 80013dc:	631a      	str	r2, [r3, #48]	; 0x30
 80013de:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80013e0:	f002 0220 	and.w	r2, r2, #32
 80013e4:	9200      	str	r2, [sp, #0]
 80013e6:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 80013e8:	9401      	str	r4, [sp, #4]
 80013ea:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80013ec:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 80013f0:	631a      	str	r2, [r3, #48]	; 0x30
 80013f2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80013f4:	f002 0280 	and.w	r2, r2, #128	; 0x80
 80013f8:	9201      	str	r2, [sp, #4]
 80013fa:	9a01      	ldr	r2, [sp, #4]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 80013fc:	9402      	str	r4, [sp, #8]
 80013fe:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001400:	f042 0204 	orr.w	r2, r2, #4
 8001404:	631a      	str	r2, [r3, #48]	; 0x30
 8001406:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001408:	f002 0204 	and.w	r2, r2, #4
 800140c:	9202      	str	r2, [sp, #8]
 800140e:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8001410:	9403      	str	r4, [sp, #12]
 8001412:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001414:	f042 0201 	orr.w	r2, r2, #1
 8001418:	631a      	str	r2, [r3, #48]	; 0x30
 800141a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800141c:	f002 0201 	and.w	r2, r2, #1
 8001420:	9203      	str	r2, [sp, #12]
 8001422:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001424:	9404      	str	r4, [sp, #16]
 8001426:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001428:	f042 0202 	orr.w	r2, r2, #2
 800142c:	631a      	str	r2, [r3, #48]	; 0x30
 800142e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001430:	f002 0202 	and.w	r2, r2, #2
 8001434:	9204      	str	r2, [sp, #16]
 8001436:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8001438:	9405      	str	r4, [sp, #20]
 800143a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800143c:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8001440:	631a      	str	r2, [r3, #48]	; 0x30
 8001442:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001444:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8001448:	9205      	str	r2, [sp, #20]
 800144a:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOE_CLK_ENABLE();
 800144c:	9406      	str	r4, [sp, #24]
 800144e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001450:	f042 0210 	orr.w	r2, r2, #16
 8001454:	631a      	str	r2, [r3, #48]	; 0x30
 8001456:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001458:	f002 0210 	and.w	r2, r2, #16
 800145c:	9206      	str	r2, [sp, #24]
 800145e:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001460:	9407      	str	r4, [sp, #28]
 8001462:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001464:	f042 0208 	orr.w	r2, r2, #8
 8001468:	631a      	str	r2, [r3, #48]	; 0x30
 800146a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800146c:	f003 0308 	and.w	r3, r3, #8
 8001470:	9307      	str	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001472:	4622      	mov	r2, r4
 8001474:	2104      	movs	r1, #4
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001476:	9b07      	ldr	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001478:	f006 feb8 	bl	80081ec <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_12, GPIO_PIN_RESET);
 800147c:	489b      	ldr	r0, [pc, #620]	; (80016ec <main+0x338>)
 800147e:	4622      	mov	r2, r4
 8001480:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8001484:	f006 feb2 	bl	80081ec <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 8001488:	4622      	mov	r2, r4
 800148a:	4899      	ldr	r0, [pc, #612]	; (80016f0 <main+0x33c>)
 800148c:	f44f 5140 	mov.w	r1, #12288	; 0x3000
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001490:	2601      	movs	r6, #1
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 8001492:	f006 feab 	bl	80081ec <HAL_GPIO_WritePin>
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001496:	2702      	movs	r7, #2
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001498:	f04f 0b04 	mov.w	fp, #4
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800149c:	4891      	ldr	r0, [pc, #580]	; (80016e4 <main+0x330>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800149e:	940f      	str	r4, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80014a0:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80014a2:	e9cd b60d 	strd	fp, r6, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80014a6:	9710      	str	r7, [sp, #64]	; 0x40
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80014a8:	f006 fdb8 	bl	800801c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12;
 80014ac:	f44f 5280 	mov.w	r2, #4096	; 0x1000
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80014b0:	488e      	ldr	r0, [pc, #568]	; (80016ec <main+0x338>)
 80014b2:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80014b4:	e9cd 260d 	strd	r2, r6, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80014b8:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80014bc:	f006 fdae 	bl	800801c <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80014c0:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 80014c2:	f44f 5240 	mov.w	r2, #12288	; 0x3000
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80014c6:	488a      	ldr	r0, [pc, #552]	; (80016f0 <main+0x33c>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80014c8:	e9cd 260d 	strd	r2, r6, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80014cc:	e9cd 470f 	strd	r4, r7, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80014d0:	f006 fda4 	bl	800801c <HAL_GPIO_Init>
  hcrc.Instance = CRC;
 80014d4:	4887      	ldr	r0, [pc, #540]	; (80016f4 <main+0x340>)
 80014d6:	4a88      	ldr	r2, [pc, #544]	; (80016f8 <main+0x344>)
 80014d8:	6002      	str	r2, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 80014da:	f006 fc1f 	bl	8007d1c <HAL_CRC_Init>
  hi2c3.Init.ClockSpeed = 100000;
 80014de:	4b87      	ldr	r3, [pc, #540]	; (80016fc <main+0x348>)
 80014e0:	4a87      	ldr	r2, [pc, #540]	; (8001700 <main+0x34c>)
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 80014e2:	622c      	str	r4, [r5, #32]
  hi2c3.Init.ClockSpeed = 100000;
 80014e4:	e9c5 3200 	strd	r3, r2, [r5]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 80014e8:	4628      	mov	r0, r5
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 80014ea:	f44f 4280 	mov.w	r2, #16384	; 0x4000
  hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 80014ee:	e9c5 2404 	strd	r2, r4, [r5, #16]
  hi2c3.Init.OwnAddress1 = 0;
 80014f2:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 80014f6:	e9c5 4406 	strd	r4, r4, [r5, #24]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 80014fa:	f007 f859 	bl	80085b0 <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_DISABLE) != HAL_OK)
 80014fe:	2110      	movs	r1, #16
 8001500:	4628      	mov	r0, r5
 8001502:	f007 fa95 	bl	8008a30 <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 8001506:	4621      	mov	r1, r4
 8001508:	4628      	mov	r0, r5
 800150a:	f007 fab0 	bl	8008a6e <HAL_I2CEx_ConfigDigitalFilter>
  hspi5.Instance = SPI5;
 800150e:	487d      	ldr	r0, [pc, #500]	; (8001704 <main+0x350>)
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001510:	497d      	ldr	r1, [pc, #500]	; (8001708 <main+0x354>)
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8001512:	6284      	str	r4, [r0, #40]	; 0x28
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001514:	f44f 7282 	mov.w	r2, #260	; 0x104
 8001518:	e9c0 1200 	strd	r1, r2, [r0]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 800151c:	f44f 7500 	mov.w	r5, #512	; 0x200
 8001520:	2218      	movs	r2, #24
 8001522:	e9c0 5206 	strd	r5, r2, [r0, #24]
  hspi5.Init.CRCPolynomial = 10;
 8001526:	220a      	movs	r2, #10
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8001528:	4d78      	ldr	r5, [pc, #480]	; (800170c <main+0x358>)
  hspi5.Init.CRCPolynomial = 10;
 800152a:	62c2      	str	r2, [r0, #44]	; 0x2c
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 800152c:	e9c0 4402 	strd	r4, r4, [r0, #8]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 8001530:	e9c0 4404 	strd	r4, r4, [r0, #16]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 8001534:	e9c0 4408 	strd	r4, r4, [r0, #32]
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 8001538:	f008 f90a 	bl	8009750 <HAL_SPI_Init>
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 800153c:	4a74      	ldr	r2, [pc, #464]	; (8001710 <main+0x35c>)
  SdramTiming.LoadToActiveDelay = 2;
 800153e:	970d      	str	r7, [sp, #52]	; 0x34
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8001540:	f04f 0810 	mov.w	r8, #16
  hsdram1.Init.SDBank = FMC_SDRAM_BANK2;
 8001544:	e9c5 2600 	strd	r2, r6, [r5]
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8001548:	2240      	movs	r2, #64	; 0x40
 800154a:	e9c5 8204 	strd	r8, r2, [r5, #16]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 800154e:	f44f 72c0 	mov.w	r2, #384	; 0x180
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 8001552:	e9c5 2406 	strd	r2, r4, [r5, #24]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 8001556:	f44f 6200 	mov.w	r2, #2048	; 0x800
  SdramTiming.WriteRecoveryTime = 3;
 800155a:	2303      	movs	r3, #3
  SdramTiming.ExitSelfRefreshDelay = 7;
 800155c:	f04f 0907 	mov.w	r9, #7
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 8001560:	e9c5 2408 	strd	r2, r4, [r5, #32]
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001564:	a90d      	add	r1, sp, #52	; 0x34
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8001566:	f44f 5200 	mov.w	r2, #8192	; 0x2000
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 800156a:	4628      	mov	r0, r5
  SdramTiming.RPDelay = 2;
 800156c:	e9cd 3711 	strd	r3, r7, [sp, #68]	; 0x44
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001570:	f04f 0a08 	mov.w	sl, #8
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 8001574:	e9c5 4b02 	strd	r4, fp, [r5, #8]
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8001578:	62aa      	str	r2, [r5, #40]	; 0x28
  SdramTiming.SelfRefreshTime = 4;
 800157a:	e9cd 9b0e 	strd	r9, fp, [sp, #56]	; 0x38
  SdramTiming.RowCycleDelay = 7;
 800157e:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
  SdramTiming.RCDDelay = 2;
 8001582:	9713      	str	r7, [sp, #76]	; 0x4c
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001584:	f008 f80a 	bl	800959c <HAL_SDRAM_Init>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001588:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800158c:	a909      	add	r1, sp, #36	; 0x24
 800158e:	4628      	mov	r0, r5
  Command->AutoRefreshNumber       = 1;
 8001590:	e9cd a60a 	strd	sl, r6, [sp, #40]	; 0x28
  Command->CommandMode             = FMC_SDRAM_CMD_CLK_ENABLE;
 8001594:	9609      	str	r6, [sp, #36]	; 0x24
 __IO uint32_t tmpmrd =0;
 8001596:	9408      	str	r4, [sp, #32]
  Command->ModeRegisterDefinition  = 0;
 8001598:	940c      	str	r4, [sp, #48]	; 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 800159a:	f008 f81f 	bl	80095dc <HAL_SDRAM_SendCommand>
  HAL_Delay(1);
 800159e:	4630      	mov	r0, r6
 80015a0:	f006 f94e 	bl	8007840 <HAL_Delay>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);  
 80015a4:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80015a8:	a909      	add	r1, sp, #36	; 0x24
 80015aa:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80015ac:	e9cd 7a09 	strd	r7, sl, [sp, #36]	; 0x24
  Command->ModeRegisterDefinition  = 0;
 80015b0:	e9cd 640b 	strd	r6, r4, [sp, #44]	; 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);  
 80015b4:	f008 f812 	bl	80095dc <HAL_SDRAM_SendCommand>
  Command->CommandMode             = FMC_SDRAM_CMD_AUTOREFRESH_MODE;
 80015b8:	2303      	movs	r3, #3
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80015ba:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80015be:	a909      	add	r1, sp, #36	; 0x24
 80015c0:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80015c2:	e9cd 3a09 	strd	r3, sl, [sp, #36]	; 0x24
  Command->ModeRegisterDefinition  = 0;
 80015c6:	e9cd b40b 	strd	fp, r4, [sp, #44]	; 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80015ca:	f008 f807 	bl	80095dc <HAL_SDRAM_SendCommand>
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |
 80015ce:	f44f 720c 	mov.w	r2, #560	; 0x230
 80015d2:	9208      	str	r2, [sp, #32]
  Command->ModeRegisterDefinition  = tmpmrd;
 80015d4:	9b08      	ldr	r3, [sp, #32]
 80015d6:	930c      	str	r3, [sp, #48]	; 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80015d8:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80015dc:	a909      	add	r1, sp, #36	; 0x24
 80015de:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80015e0:	e9cd ba09 	strd	fp, sl, [sp, #36]	; 0x24
  Command->AutoRefreshNumber       = 1;
 80015e4:	960b      	str	r6, [sp, #44]	; 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80015e6:	f007 fff9 	bl	80095dc <HAL_SDRAM_SendCommand>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT); 
 80015ea:	f240 516a 	movw	r1, #1386	; 0x56a
 80015ee:	4628      	mov	r0, r5
 80015f0:	f008 f80b 	bl	800960a <HAL_SDRAM_ProgramRefreshRate>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 80015f4:	2234      	movs	r2, #52	; 0x34
 80015f6:	4621      	mov	r1, r4
 80015f8:	eb0d 0002 	add.w	r0, sp, r2
 80015fc:	f020 fcd8 	bl	8021fb0 <memset>
  hltdc.Instance = LTDC;
 8001600:	4d44      	ldr	r5, [pc, #272]	; (8001714 <main+0x360>)
 8001602:	4b45      	ldr	r3, [pc, #276]	; (8001718 <main+0x364>)
  hltdc.Init.Backcolor.Blue = 0;
 8001604:	86ac      	strh	r4, [r5, #52]	; 0x34
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 8001606:	e9c5 3400 	strd	r3, r4, [r5]
  hltdc.Init.HorizontalSync = 9;
 800160a:	2309      	movs	r3, #9
  hltdc.Init.AccumulatedVBP = 3;
 800160c:	f04f 0c1d 	mov.w	ip, #29
  hltdc.Init.VerticalSync = 1;
 8001610:	e9c5 3605 	strd	r3, r6, [r5, #20]
  hltdc.Init.AccumulatedVBP = 3;
 8001614:	2303      	movs	r3, #3
 8001616:	e9c5 c307 	strd	ip, r3, [r5, #28]
  hltdc.Init.AccumulatedActiveH = 323;
 800161a:	f240 1e0d 	movw	lr, #269	; 0x10d
 800161e:	f240 1343 	movw	r3, #323	; 0x143
 8001622:	e9c5 e309 	strd	lr, r3, [r5, #36]	; 0x24
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001626:	4628      	mov	r0, r5
  hltdc.Init.TotalHeigh = 327;
 8001628:	f240 1347 	movw	r3, #327	; 0x147
 800162c:	f240 1a17 	movw	sl, #279	; 0x117
 8001630:	e9c5 a30b 	strd	sl, r3, [r5, #44]	; 0x2c
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 8001634:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 8001638:	612c      	str	r4, [r5, #16]
  hltdc.Init.Backcolor.Red = 0;
 800163a:	f885 4036 	strb.w	r4, [r5, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 800163e:	f007 fabb 	bl	8008bb8 <HAL_LTDC_Init>
  pLayerCfg.Alpha = 255;
 8001642:	21ff      	movs	r1, #255	; 0xff
  pLayerCfg.WindowX1 = 240;
 8001644:	22f0      	movs	r2, #240	; 0xf0
  pLayerCfg.Alpha0 = 0;
 8001646:	e9cd 1412 	strd	r1, r4, [sp, #72]	; 0x48
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 800164a:	f44f 6b80 	mov.w	fp, #1024	; 0x400
 800164e:	2105      	movs	r1, #5
  pLayerCfg.WindowY1 = 320;
 8001650:	f44f 73a0 	mov.w	r3, #320	; 0x140
  pLayerCfg.WindowY0 = 0;
 8001654:	e9cd 240e 	strd	r2, r4, [sp, #56]	; 0x38
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8001658:	e9cd b114 	strd	fp, r1, [sp, #80]	; 0x50
  pLayerCfg.ImageWidth = 240;
 800165c:	e9cd 4216 	strd	r4, r2, [sp, #88]	; 0x58
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001660:	a90d      	add	r1, sp, #52	; 0x34
 8001662:	4622      	mov	r2, r4
 8001664:	4628      	mov	r0, r5
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 8001666:	e9cd 3710 	strd	r3, r7, [sp, #64]	; 0x40
  LcdDrv = &ili9341_drv;
 800166a:	4d2c      	ldr	r5, [pc, #176]	; (800171c <main+0x368>)
  pLayerCfg.ImageHeight = 320;
 800166c:	9318      	str	r3, [sp, #96]	; 0x60
  pLayerCfg.WindowX0 = 0;
 800166e:	940d      	str	r4, [sp, #52]	; 0x34
  pLayerCfg.Backcolor.Blue = 0;
 8001670:	f8ad 4064 	strh.w	r4, [sp, #100]	; 0x64
  pLayerCfg.Backcolor.Red = 0;
 8001674:	f88d 4066 	strb.w	r4, [sp, #102]	; 0x66
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001678:	f007 fb69 	bl	8008d4e <HAL_LTDC_ConfigLayer>
  LcdDrv = &ili9341_drv;
 800167c:	4b28      	ldr	r3, [pc, #160]	; (8001720 <main+0x36c>)
 800167e:	602b      	str	r3, [r5, #0]
  LcdDrv->Init();
 8001680:	681b      	ldr	r3, [r3, #0]
 8001682:	4798      	blx	r3
  LcdDrv->DisplayOff();
 8001684:	682b      	ldr	r3, [r5, #0]
  hdma2d.Instance = DMA2D;
 8001686:	4d27      	ldr	r5, [pc, #156]	; (8001724 <main+0x370>)
  LcdDrv->DisplayOff();
 8001688:	68db      	ldr	r3, [r3, #12]
 800168a:	4798      	blx	r3
  hdma2d.Instance = DMA2D;
 800168c:	4b26      	ldr	r3, [pc, #152]	; (8001728 <main+0x374>)
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
 800168e:	e9c5 470a 	strd	r4, r7, [r5, #40]	; 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 8001692:	e9c5 440c 	strd	r4, r4, [r5, #48]	; 0x30
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8001696:	4628      	mov	r0, r5
  hdma2d.Init.Mode = DMA2D_M2M;
 8001698:	e9c5 3400 	strd	r3, r4, [r5]
  hdma2d.Init.OutputOffset = 0;
 800169c:	e9c5 7402 	strd	r7, r4, [r5, #8]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 80016a0:	f006 fbbf 	bl	8007e22 <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 80016a4:	4631      	mov	r1, r6
 80016a6:	4628      	mov	r0, r5
 80016a8:	f006 fc74 	bl	8007f94 <HAL_DMA2D_ConfigLayer>
  ADC_ChannelConfTypeDef sConfig = {0};
 80016ac:	4621      	mov	r1, r4
 80016ae:	4642      	mov	r2, r8
 80016b0:	a80d      	add	r0, sp, #52	; 0x34
 80016b2:	f020 fc7d 	bl	8021fb0 <memset>
  hadc1.Instance = ADC1;
 80016b6:	4d1d      	ldr	r5, [pc, #116]	; (800172c <main+0x378>)
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 80016b8:	4a1d      	ldr	r2, [pc, #116]	; (8001730 <main+0x37c>)
  hadc1.Init.NbrOfConversion = 1;
 80016ba:	61ee      	str	r6, [r5, #28]
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 80016bc:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 80016c0:	e9c5 2300 	strd	r2, r3, [r5]
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 80016c4:	4628      	mov	r0, r5
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 80016c6:	4b1b      	ldr	r3, [pc, #108]	; (8001734 <main+0x380>)
 80016c8:	62ab      	str	r3, [r5, #40]	; 0x28
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 80016ca:	616e      	str	r6, [r5, #20]
  hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 80016cc:	60ac      	str	r4, [r5, #8]
  hadc1.Init.ScanConvMode = DISABLE;
 80016ce:	612c      	str	r4, [r5, #16]
  hadc1.Init.ContinuousConvMode = DISABLE;
 80016d0:	762c      	strb	r4, [r5, #24]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 80016d2:	f885 4020 	strb.w	r4, [r5, #32]
  hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 80016d6:	62ec      	str	r4, [r5, #44]	; 0x2c
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 80016d8:	60ec      	str	r4, [r5, #12]
  hadc1.Init.DMAContinuousRequests = DISABLE;
 80016da:	f885 4030 	strb.w	r4, [r5, #48]	; 0x30
 80016de:	e02b      	b.n	8001738 <main+0x384>
 80016e0:	40023800 	.word	0x40023800
 80016e4:	40020800 	.word	0x40020800
 80016e8:	20002f1c 	.word	0x20002f1c
 80016ec:	40020400 	.word	0x40020400
 80016f0:	40020c00 	.word	0x40020c00
 80016f4:	20002ec0 	.word	0x20002ec0
 80016f8:	40023000 	.word	0x40023000
 80016fc:	40005c00 	.word	0x40005c00
 8001700:	000186a0 	.word	0x000186a0
 8001704:	2000304c 	.word	0x2000304c
 8001708:	40015000 	.word	0x40015000
 800170c:	20003018 	.word	0x20003018
 8001710:	a0000140 	.word	0xa0000140
 8001714:	20002f70 	.word	0x20002f70
 8001718:	40016800 	.word	0x40016800
 800171c:	20002e70 	.word	0x20002e70
 8001720:	20000018 	.word	0x20000018
 8001724:	20002edc 	.word	0x20002edc
 8001728:	4002b000 	.word	0x4002b000
 800172c:	20002e78 	.word	0x20002e78
 8001730:	40012000 	.word	0x40012000
 8001734:	0f000001 	.word	0x0f000001
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 8001738:	f006 f896 	bl	8007868 <HAL_ADC_Init>
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 800173c:	a90d      	add	r1, sp, #52	; 0x34
 800173e:	4628      	mov	r0, r5
  sConfig.Rank = 1;
 8001740:	e9cd 960d 	strd	r9, r6, [sp, #52]	; 0x34
  htim7.Instance = TIM7;
 8001744:	4d25      	ldr	r5, [pc, #148]	; (80017dc <main+0x428>)
  sConfig.SamplingTime = ADC_SAMPLETIME_480CYCLES;
 8001746:	f8cd 903c 	str.w	r9, [sp, #60]	; 0x3c
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 800174a:	f006 f9f9 	bl	8007b40 <HAL_ADC_ConfigChannel>
  htim7.Init.Prescaler = 8400-1;
 800174e:	4924      	ldr	r1, [pc, #144]	; (80017e0 <main+0x42c>)
  hdac.Instance = DAC;
 8001750:	4e24      	ldr	r6, [pc, #144]	; (80017e4 <main+0x430>)
  htim7.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001752:	60ac      	str	r4, [r5, #8]
  htim7.Init.Prescaler = 8400-1;
 8001754:	f242 03cf 	movw	r3, #8399	; 0x20cf
 8001758:	e9c5 1300 	strd	r1, r3, [r5]
  if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
 800175c:	4628      	mov	r0, r5
  htim7.Init.Period = 1000-1;
 800175e:	f240 33e7 	movw	r3, #999	; 0x3e7
 8001762:	60eb      	str	r3, [r5, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001764:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  htim7.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001768:	61ac      	str	r4, [r5, #24]
  if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
 800176a:	f008 fb8b 	bl	8009e84 <HAL_TIM_Base_Init>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
 800176e:	a90d      	add	r1, sp, #52	; 0x34
 8001770:	4628      	mov	r0, r5
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001772:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
 8001776:	f008 fb9f 	bl	8009eb8 <HAL_TIMEx_MasterConfigSynchronization>
  hdac.Instance = DAC;
 800177a:	4b1b      	ldr	r3, [pc, #108]	; (80017e8 <main+0x434>)
 800177c:	6033      	str	r3, [r6, #0]
  if (HAL_DAC_Init(&hdac) != HAL_OK)
 800177e:	4630      	mov	r0, r6
  DAC_ChannelConfTypeDef sConfig = {0};
 8001780:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  if (HAL_DAC_Init(&hdac) != HAL_OK)
 8001784:	f006 fada 	bl	8007d3c <HAL_DAC_Init>
  if (HAL_DAC_ConfigChannel(&hdac, &sConfig, DAC_CHANNEL_2) != HAL_OK)
 8001788:	4642      	mov	r2, r8
 800178a:	a90d      	add	r1, sp, #52	; 0x34
 800178c:	4630      	mov	r0, r6
  sConfig.DAC_OutputBuffer = DAC_OUTPUTBUFFER_ENABLE;
 800178e:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  if (HAL_DAC_ConfigChannel(&hdac, &sConfig, DAC_CHANNEL_2) != HAL_OK)
 8001792:	f006 fb13 	bl	8007dbc <HAL_DAC_ConfigChannel>
  MX_TouchGFX_Init();
 8001796:	f7fe ff26 	bl	80005e6 <MX_TouchGFX_Init>
HAL_TIM_Base_Start_IT(&htim7); //uruchomienie timera 7 (przerwanie co 1 sek)
 800179a:	4628      	mov	r0, r5
 800179c:	f008 fa55 	bl	8009c4a <HAL_TIM_Base_Start_IT>
HAL_DAC_Start(&hdac, DAC_CHANNEL_2);
 80017a0:	4641      	mov	r1, r8
 80017a2:	4630      	mov	r0, r6
 80017a4:	f006 fadd 	bl	8007d62 <HAL_DAC_Start>
HAL_DAC_SetValue(&hdac, DAC_CHANNEL_2, DAC_ALIGN_12B_R, 1365); //ustaw max napiecie na ADC, zeby nie plynal zaden prad !ZMIENIC
 80017a8:	f240 5355 	movw	r3, #1365	; 0x555
 80017ac:	4622      	mov	r2, r4
 80017ae:	4641      	mov	r1, r8
 80017b0:	4630      	mov	r0, r6
 80017b2:	f006 fb24 	bl	8007dfe <HAL_DAC_SetValue>
  osKernelInitialize();
 80017b6:	f008 fc5f 	bl	800a078 <osKernelInitialize>
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 80017ba:	4a0c      	ldr	r2, [pc, #48]	; (80017ec <main+0x438>)
 80017bc:	480c      	ldr	r0, [pc, #48]	; (80017f0 <main+0x43c>)
 80017be:	4621      	mov	r1, r4
 80017c0:	f008 fc94 	bl	800a0ec <osThreadNew>
 80017c4:	4b0b      	ldr	r3, [pc, #44]	; (80017f4 <main+0x440>)
  TaskDwaHandle = osThreadNew(ZadanieDwa, NULL, &TaskDwa_attributes);
 80017c6:	4a0c      	ldr	r2, [pc, #48]	; (80017f8 <main+0x444>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 80017c8:	6018      	str	r0, [r3, #0]
  TaskDwaHandle = osThreadNew(ZadanieDwa, NULL, &TaskDwa_attributes);
 80017ca:	4621      	mov	r1, r4
 80017cc:	480b      	ldr	r0, [pc, #44]	; (80017fc <main+0x448>)
 80017ce:	f008 fc8d 	bl	800a0ec <osThreadNew>
 80017d2:	4b0b      	ldr	r3, [pc, #44]	; (8001800 <main+0x44c>)
 80017d4:	6018      	str	r0, [r3, #0]
  osKernelStart();
 80017d6:	f008 fc69 	bl	800a0ac <osKernelStart>
  while (1)
 80017da:	e7fe      	b.n	80017da <main+0x426>
 80017dc:	200030a4 	.word	0x200030a4
 80017e0:	40001400 	.word	0x40001400
 80017e4:	20002ec8 	.word	0x20002ec8
 80017e8:	40007400 	.word	0x40007400
 80017ec:	08023508 	.word	0x08023508
 80017f0:	080005eb 	.word	0x080005eb
 80017f4:	20002e6c 	.word	0x20002e6c
 80017f8:	0802352c 	.word	0x0802352c
 80017fc:	080011d5 	.word	0x080011d5
 8001800:	20002e74 	.word	0x20002e74

08001804 <IOE_Init>:
 8001804:	4770      	bx	lr

08001806 <IOE_ITConfig>:
 8001806:	4770      	bx	lr

08001808 <IOE_Write>:
{
 8001808:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout); 
 800180a:	4b09      	ldr	r3, [pc, #36]	; (8001830 <IOE_Write+0x28>)
 800180c:	f88d 2017 	strb.w	r2, [sp, #23]
 8001810:	681b      	ldr	r3, [r3, #0]
 8001812:	9302      	str	r3, [sp, #8]
 8001814:	f10d 0217 	add.w	r2, sp, #23
 8001818:	2301      	movs	r3, #1
 800181a:	9200      	str	r2, [sp, #0]
 800181c:	9301      	str	r3, [sp, #4]
 800181e:	460a      	mov	r2, r1
 8001820:	4601      	mov	r1, r0
 8001822:	4804      	ldr	r0, [pc, #16]	; (8001834 <IOE_Write+0x2c>)
 8001824:	f006 ff6c 	bl	8008700 <HAL_I2C_Mem_Write>
}
 8001828:	b007      	add	sp, #28
 800182a:	f85d fb04 	ldr.w	pc, [sp], #4
 800182e:	bf00      	nop
 8001830:	2000000c 	.word	0x2000000c
 8001834:	20002f1c 	.word	0x20002f1c

08001838 <IOE_Read>:
{
 8001838:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  uint8_t value = 0;
 800183a:	2300      	movs	r3, #0
 800183c:	f88d 3017 	strb.w	r3, [sp, #23]
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001840:	4b08      	ldr	r3, [pc, #32]	; (8001864 <IOE_Read+0x2c>)
 8001842:	681b      	ldr	r3, [r3, #0]
 8001844:	9302      	str	r3, [sp, #8]
{
 8001846:	460a      	mov	r2, r1
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001848:	2301      	movs	r3, #1
 800184a:	f10d 0117 	add.w	r1, sp, #23
 800184e:	9100      	str	r1, [sp, #0]
 8001850:	9301      	str	r3, [sp, #4]
 8001852:	4601      	mov	r1, r0
 8001854:	4804      	ldr	r0, [pc, #16]	; (8001868 <IOE_Read+0x30>)
 8001856:	f006 ffe3 	bl	8008820 <HAL_I2C_Mem_Read>
}
 800185a:	f89d 0017 	ldrb.w	r0, [sp, #23]
 800185e:	b007      	add	sp, #28
 8001860:	f85d fb04 	ldr.w	pc, [sp], #4
 8001864:	2000000c 	.word	0x2000000c
 8001868:	20002f1c 	.word	0x20002f1c

0800186c <IOE_ReadMultiple>:
{
 800186c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 800186e:	4c08      	ldr	r4, [pc, #32]	; (8001890 <IOE_ReadMultiple+0x24>)
 8001870:	6824      	ldr	r4, [r4, #0]
 8001872:	9200      	str	r2, [sp, #0]
 8001874:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8001878:	460a      	mov	r2, r1
 800187a:	2301      	movs	r3, #1
 800187c:	4601      	mov	r1, r0
 800187e:	4805      	ldr	r0, [pc, #20]	; (8001894 <IOE_ReadMultiple+0x28>)
 8001880:	f006 ffce 	bl	8008820 <HAL_I2C_Mem_Read>
}
 8001884:	3800      	subs	r0, #0
 8001886:	bf18      	it	ne
 8001888:	2001      	movne	r0, #1
 800188a:	b004      	add	sp, #16
 800188c:	bd10      	pop	{r4, pc}
 800188e:	bf00      	nop
 8001890:	2000000c 	.word	0x2000000c
 8001894:	20002f1c 	.word	0x20002f1c

08001898 <IOE_Delay>:
 8001898:	f005 bfd2 	b.w	8007840 <HAL_Delay>

0800189c <LCD_IO_Init>:
{
 800189c:	b508      	push	{r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800189e:	4806      	ldr	r0, [pc, #24]	; (80018b8 <LCD_IO_Init+0x1c>)
 80018a0:	2200      	movs	r2, #0
 80018a2:	2104      	movs	r1, #4
 80018a4:	f006 fca2 	bl	80081ec <HAL_GPIO_WritePin>
}
 80018a8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80018ac:	4802      	ldr	r0, [pc, #8]	; (80018b8 <LCD_IO_Init+0x1c>)
 80018ae:	2201      	movs	r2, #1
 80018b0:	2104      	movs	r1, #4
 80018b2:	f006 bc9b 	b.w	80081ec <HAL_GPIO_WritePin>
 80018b6:	bf00      	nop
 80018b8:	40020800 	.word	0x40020800

080018bc <LCD_IO_WriteData>:
{
 80018bc:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80018be:	4d0b      	ldr	r5, [pc, #44]	; (80018ec <LCD_IO_WriteData+0x30>)
{
 80018c0:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 80018c2:	2201      	movs	r2, #1
 80018c4:	480a      	ldr	r0, [pc, #40]	; (80018f0 <LCD_IO_WriteData+0x34>)
 80018c6:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80018ca:	f006 fc8f 	bl	80081ec <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80018ce:	2200      	movs	r2, #0
 80018d0:	2104      	movs	r1, #4
 80018d2:	4628      	mov	r0, r5
 80018d4:	f006 fc8a 	bl	80081ec <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 80018d8:	4620      	mov	r0, r4
 80018da:	f7ff fc4b 	bl	8001174 <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80018de:	4628      	mov	r0, r5
 80018e0:	2201      	movs	r2, #1
}
 80018e2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80018e6:	2104      	movs	r1, #4
 80018e8:	f006 bc80 	b.w	80081ec <HAL_GPIO_WritePin>
 80018ec:	40020800 	.word	0x40020800
 80018f0:	40020c00 	.word	0x40020c00

080018f4 <LCD_IO_WriteReg>:
{
 80018f4:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80018f6:	4d0b      	ldr	r5, [pc, #44]	; (8001924 <LCD_IO_WriteReg+0x30>)
{
 80018f8:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 80018fa:	2200      	movs	r2, #0
 80018fc:	480a      	ldr	r0, [pc, #40]	; (8001928 <LCD_IO_WriteReg+0x34>)
 80018fe:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001902:	f006 fc73 	bl	80081ec <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001906:	2200      	movs	r2, #0
 8001908:	2104      	movs	r1, #4
 800190a:	4628      	mov	r0, r5
 800190c:	f006 fc6e 	bl	80081ec <HAL_GPIO_WritePin>
  SPI5_Write(Reg);
 8001910:	4620      	mov	r0, r4
 8001912:	f7ff fc2f 	bl	8001174 <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001916:	4628      	mov	r0, r5
 8001918:	2201      	movs	r2, #1
}
 800191a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800191e:	2104      	movs	r1, #4
 8001920:	f006 bc64 	b.w	80081ec <HAL_GPIO_WritePin>
 8001924:	40020800 	.word	0x40020800
 8001928:	40020c00 	.word	0x40020c00

0800192c <LCD_IO_ReadData>:
{
 800192c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800192e:	4e14      	ldr	r6, [pc, #80]	; (8001980 <LCD_IO_ReadData+0x54>)
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001930:	4f14      	ldr	r7, [pc, #80]	; (8001984 <LCD_IO_ReadData+0x58>)
{
 8001932:	4605      	mov	r5, r0
 8001934:	460c      	mov	r4, r1
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001936:	4630      	mov	r0, r6
 8001938:	2200      	movs	r2, #0
 800193a:	2104      	movs	r1, #4
 800193c:	f006 fc56 	bl	80081ec <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001940:	2200      	movs	r2, #0
 8001942:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001946:	4638      	mov	r0, r7
 8001948:	f006 fc50 	bl	80081ec <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 800194c:	4628      	mov	r0, r5
 800194e:	f7ff fc11 	bl	8001174 <SPI5_Write>
  status = HAL_SPI_Receive(&hspi5, (uint8_t*) &readvalue, ReadSize, Spi5Timeout);
 8001952:	4b0d      	ldr	r3, [pc, #52]	; (8001988 <LCD_IO_ReadData+0x5c>)
 8001954:	480d      	ldr	r0, [pc, #52]	; (800198c <LCD_IO_ReadData+0x60>)
 8001956:	681b      	ldr	r3, [r3, #0]
 8001958:	4622      	mov	r2, r4
 800195a:	a901      	add	r1, sp, #4
 800195c:	f008 f8d3 	bl	8009b06 <HAL_SPI_Receive>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001960:	4638      	mov	r0, r7
 8001962:	2201      	movs	r2, #1
 8001964:	f44f 5100 	mov.w	r1, #8192	; 0x2000
  return readvalue;
 8001968:	9c01      	ldr	r4, [sp, #4]
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 800196a:	f006 fc3f 	bl	80081ec <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800196e:	4630      	mov	r0, r6
 8001970:	2201      	movs	r2, #1
 8001972:	2104      	movs	r1, #4
 8001974:	f006 fc3a 	bl	80081ec <HAL_GPIO_WritePin>
}
 8001978:	4620      	mov	r0, r4
 800197a:	b003      	add	sp, #12
 800197c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800197e:	bf00      	nop
 8001980:	40020800 	.word	0x40020800
 8001984:	40020c00 	.word	0x40020c00
 8001988:	20000010 	.word	0x20000010
 800198c:	2000304c 	.word	0x2000304c

08001990 <LCD_Delay>:
  HAL_Delay(Delay);
 8001990:	f005 bf56 	b.w	8007840 <HAL_Delay>

08001994 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM8) {
 8001994:	6802      	ldr	r2, [r0, #0]
 8001996:	4b08      	ldr	r3, [pc, #32]	; (80019b8 <HAL_TIM_PeriodElapsedCallback+0x24>)
 8001998:	429a      	cmp	r2, r3
{
 800199a:	b510      	push	{r4, lr}
 800199c:	4604      	mov	r4, r0
  if (htim->Instance == TIM8) {
 800199e:	d101      	bne.n	80019a4 <HAL_TIM_PeriodElapsedCallback+0x10>
    HAL_IncTick();
 80019a0:	f005 ff3c 	bl	800781c <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */
  if (htim->Instance == TIM7){ //timer co 100ms
 80019a4:	6822      	ldr	r2, [r4, #0]
 80019a6:	4b05      	ldr	r3, [pc, #20]	; (80019bc <HAL_TIM_PeriodElapsedCallback+0x28>)
 80019a8:	429a      	cmp	r2, r3
	  ladowarka.Minelo100ms=1;
 80019aa:	bf02      	ittt	eq
 80019ac:	4b04      	ldreq	r3, [pc, #16]	; (80019c0 <HAL_TIM_PeriodElapsedCallback+0x2c>)
 80019ae:	2201      	moveq	r2, #1
 80019b0:	f8c3 2948 	streq.w	r2, [r3, #2376]	; 0x948
  }

  /* USER CODE END Callback 1 */
}
 80019b4:	bd10      	pop	{r4, pc}
 80019b6:	bf00      	nop
 80019b8:	40010400 	.word	0x40010400
 80019bc:	40001400 	.word	0x40001400
 80019c0:	200060e4 	.word	0x200060e4

080019c4 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 80019c4:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80019c6:	4b0e      	ldr	r3, [pc, #56]	; (8001a00 <HAL_MspInit+0x3c>)
 80019c8:	2200      	movs	r2, #0
 80019ca:	9200      	str	r2, [sp, #0]
 80019cc:	6c59      	ldr	r1, [r3, #68]	; 0x44
 80019ce:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 80019d2:	6459      	str	r1, [r3, #68]	; 0x44
 80019d4:	6c59      	ldr	r1, [r3, #68]	; 0x44
 80019d6:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 80019da:	9100      	str	r1, [sp, #0]
 80019dc:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 80019de:	9201      	str	r2, [sp, #4]
 80019e0:	6c19      	ldr	r1, [r3, #64]	; 0x40
 80019e2:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 80019e6:	6419      	str	r1, [r3, #64]	; 0x40
 80019e8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80019ea:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80019ee:	9301      	str	r3, [sp, #4]
 80019f0:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 80019f2:	210f      	movs	r1, #15
 80019f4:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80019f8:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 80019fa:	f006 b94f 	b.w	8007c9c <HAL_NVIC_SetPriority>
 80019fe:	bf00      	nop
 8001a00:	40023800 	.word	0x40023800

08001a04 <HAL_ADC_MspInit>:
* This function configures the hardware resources used in this example
* @param hadc: ADC handle pointer
* @retval None
*/
void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
{
 8001a04:	b510      	push	{r4, lr}
 8001a06:	4604      	mov	r4, r0
 8001a08:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001a0a:	2214      	movs	r2, #20
 8001a0c:	2100      	movs	r1, #0
 8001a0e:	a803      	add	r0, sp, #12
 8001a10:	f020 face 	bl	8021fb0 <memset>
  if(hadc->Instance==ADC1)
 8001a14:	6822      	ldr	r2, [r4, #0]
 8001a16:	4b12      	ldr	r3, [pc, #72]	; (8001a60 <HAL_ADC_MspInit+0x5c>)
 8001a18:	429a      	cmp	r2, r3
 8001a1a:	d11e      	bne.n	8001a5a <HAL_ADC_MspInit+0x56>
  {
  /* USER CODE BEGIN ADC1_MspInit 0 */

  /* USER CODE END ADC1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_ADC1_CLK_ENABLE();
 8001a1c:	f503 338c 	add.w	r3, r3, #71680	; 0x11800
 8001a20:	2100      	movs	r1, #0
 8001a22:	9101      	str	r1, [sp, #4]
 8001a24:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    PA7     ------> ADC1_IN7
    */
    GPIO_InitStruct.Pin = GPIO_PIN_7;
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001a26:	480f      	ldr	r0, [pc, #60]	; (8001a64 <HAL_ADC_MspInit+0x60>)
    __HAL_RCC_ADC1_CLK_ENABLE();
 8001a28:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8001a2c:	645a      	str	r2, [r3, #68]	; 0x44
 8001a2e:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001a30:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8001a34:	9201      	str	r2, [sp, #4]
 8001a36:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001a38:	9102      	str	r1, [sp, #8]
 8001a3a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001a3c:	f042 0201 	orr.w	r2, r2, #1
 8001a40:	631a      	str	r2, [r3, #48]	; 0x30
 8001a42:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001a44:	f003 0301 	and.w	r3, r3, #1
 8001a48:	9302      	str	r3, [sp, #8]
 8001a4a:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8001a4c:	2280      	movs	r2, #128	; 0x80
 8001a4e:	2303      	movs	r3, #3
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001a50:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8001a52:	e9cd 2303 	strd	r2, r3, [sp, #12]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001a56:	f006 fae1 	bl	800801c <HAL_GPIO_Init>
  /* USER CODE BEGIN ADC1_MspInit 1 */

  /* USER CODE END ADC1_MspInit 1 */
  }

}
 8001a5a:	b008      	add	sp, #32
 8001a5c:	bd10      	pop	{r4, pc}
 8001a5e:	bf00      	nop
 8001a60:	40012000 	.word	0x40012000
 8001a64:	40020000 	.word	0x40020000

08001a68 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8001a68:	6802      	ldr	r2, [r0, #0]
 8001a6a:	4b09      	ldr	r3, [pc, #36]	; (8001a90 <HAL_CRC_MspInit+0x28>)
 8001a6c:	429a      	cmp	r2, r3
{
 8001a6e:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 8001a70:	d10b      	bne.n	8001a8a <HAL_CRC_MspInit+0x22>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8001a72:	2300      	movs	r3, #0
 8001a74:	9301      	str	r3, [sp, #4]
 8001a76:	4b07      	ldr	r3, [pc, #28]	; (8001a94 <HAL_CRC_MspInit+0x2c>)
 8001a78:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001a7a:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8001a7e:	631a      	str	r2, [r3, #48]	; 0x30
 8001a80:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001a82:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8001a86:	9301      	str	r3, [sp, #4]
 8001a88:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8001a8a:	b002      	add	sp, #8
 8001a8c:	4770      	bx	lr
 8001a8e:	bf00      	nop
 8001a90:	40023000 	.word	0x40023000
 8001a94:	40023800 	.word	0x40023800

08001a98 <HAL_DAC_MspInit>:
* This function configures the hardware resources used in this example
* @param hdac: DAC handle pointer
* @retval None
*/
void HAL_DAC_MspInit(DAC_HandleTypeDef* hdac)
{
 8001a98:	b510      	push	{r4, lr}
 8001a9a:	4604      	mov	r4, r0
 8001a9c:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001a9e:	2214      	movs	r2, #20
 8001aa0:	2100      	movs	r1, #0
 8001aa2:	a803      	add	r0, sp, #12
 8001aa4:	f020 fa84 	bl	8021fb0 <memset>
  if(hdac->Instance==DAC)
 8001aa8:	6822      	ldr	r2, [r4, #0]
 8001aaa:	4b12      	ldr	r3, [pc, #72]	; (8001af4 <HAL_DAC_MspInit+0x5c>)
 8001aac:	429a      	cmp	r2, r3
 8001aae:	d11e      	bne.n	8001aee <HAL_DAC_MspInit+0x56>
  {
  /* USER CODE BEGIN DAC_MspInit 0 */

  /* USER CODE END DAC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DAC_CLK_ENABLE();
 8001ab0:	f503 33e2 	add.w	r3, r3, #115712	; 0x1c400
 8001ab4:	2100      	movs	r1, #0
 8001ab6:	9101      	str	r1, [sp, #4]
 8001ab8:	6c1a      	ldr	r2, [r3, #64]	; 0x40
    PA5     ------> DAC_OUT2
    */
    GPIO_InitStruct.Pin = GPIO_PIN_5;
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001aba:	480f      	ldr	r0, [pc, #60]	; (8001af8 <HAL_DAC_MspInit+0x60>)
    __HAL_RCC_DAC_CLK_ENABLE();
 8001abc:	f042 5200 	orr.w	r2, r2, #536870912	; 0x20000000
 8001ac0:	641a      	str	r2, [r3, #64]	; 0x40
 8001ac2:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001ac4:	f002 5200 	and.w	r2, r2, #536870912	; 0x20000000
 8001ac8:	9201      	str	r2, [sp, #4]
 8001aca:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001acc:	9102      	str	r1, [sp, #8]
 8001ace:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001ad0:	f042 0201 	orr.w	r2, r2, #1
 8001ad4:	631a      	str	r2, [r3, #48]	; 0x30
 8001ad6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001ad8:	f003 0301 	and.w	r3, r3, #1
 8001adc:	9302      	str	r3, [sp, #8]
 8001ade:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8001ae0:	2220      	movs	r2, #32
 8001ae2:	2303      	movs	r3, #3
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001ae4:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8001ae6:	e9cd 2303 	strd	r2, r3, [sp, #12]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001aea:	f006 fa97 	bl	800801c <HAL_GPIO_Init>
  /* USER CODE BEGIN DAC_MspInit 1 */

  /* USER CODE END DAC_MspInit 1 */
  }

}
 8001aee:	b008      	add	sp, #32
 8001af0:	bd10      	pop	{r4, pc}
 8001af2:	bf00      	nop
 8001af4:	40007400 	.word	0x40007400
 8001af8:	40020000 	.word	0x40020000

08001afc <HAL_DMA2D_MspInit>:
* This function configures the hardware resources used in this example
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
 8001afc:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 8001afe:	4b0f      	ldr	r3, [pc, #60]	; (8001b3c <HAL_DMA2D_MspInit+0x40>)
 8001b00:	6802      	ldr	r2, [r0, #0]
 8001b02:	429a      	cmp	r2, r3
 8001b04:	d116      	bne.n	8001b34 <HAL_DMA2D_MspInit+0x38>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001b06:	2200      	movs	r2, #0
 8001b08:	f5a3 43f0 	sub.w	r3, r3, #30720	; 0x7800
 8001b0c:	9201      	str	r2, [sp, #4]
 8001b0e:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001b10:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8001b14:	6319      	str	r1, [r3, #48]	; 0x30
 8001b16:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001b18:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8001b1c:	9301      	str	r3, [sp, #4]
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001b1e:	2105      	movs	r1, #5
 8001b20:	205a      	movs	r0, #90	; 0x5a
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001b22:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001b24:	f006 f8ba 	bl	8007c9c <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001b28:	205a      	movs	r0, #90	; 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 8001b2a:	b003      	add	sp, #12
 8001b2c:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001b30:	f006 b8e6 	b.w	8007d00 <HAL_NVIC_EnableIRQ>
}
 8001b34:	b003      	add	sp, #12
 8001b36:	f85d fb04 	ldr.w	pc, [sp], #4
 8001b3a:	bf00      	nop
 8001b3c:	4002b000 	.word	0x4002b000

08001b40 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8001b40:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001b44:	4604      	mov	r4, r0
 8001b46:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001b48:	2214      	movs	r2, #20
 8001b4a:	2100      	movs	r1, #0
 8001b4c:	a803      	add	r0, sp, #12
 8001b4e:	f020 fa2f 	bl	8021fb0 <memset>
  if(hi2c->Instance==I2C3)
 8001b52:	6822      	ldr	r2, [r4, #0]
 8001b54:	4b24      	ldr	r3, [pc, #144]	; (8001be8 <HAL_I2C_MspInit+0xa8>)
 8001b56:	429a      	cmp	r2, r3
 8001b58:	d143      	bne.n	8001be2 <HAL_I2C_MspInit+0xa2>
  {
  /* USER CODE BEGIN I2C3_MspInit 0 */

  /* USER CODE END I2C3_MspInit 0 */

    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001b5a:	4c24      	ldr	r4, [pc, #144]	; (8001bec <HAL_I2C_MspInit+0xac>)
    GPIO_InitStruct.Pin = GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001b5c:	4824      	ldr	r0, [pc, #144]	; (8001bf0 <HAL_I2C_MspInit+0xb0>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001b5e:	2500      	movs	r5, #0
 8001b60:	9500      	str	r5, [sp, #0]
 8001b62:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001b64:	f043 0304 	orr.w	r3, r3, #4
 8001b68:	6323      	str	r3, [r4, #48]	; 0x30
 8001b6a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001b6c:	f003 0304 	and.w	r3, r3, #4
 8001b70:	9300      	str	r3, [sp, #0]
 8001b72:	9b00      	ldr	r3, [sp, #0]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001b74:	9501      	str	r5, [sp, #4]
 8001b76:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001b78:	f043 0301 	orr.w	r3, r3, #1
 8001b7c:	6323      	str	r3, [r4, #48]	; 0x30
 8001b7e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001b80:	f003 0301 	and.w	r3, r3, #1
 8001b84:	9301      	str	r3, [sp, #4]
 8001b86:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001b88:	f04f 0912 	mov.w	r9, #18
 8001b8c:	f44f 7300 	mov.w	r3, #512	; 0x200
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001b90:	f04f 0801 	mov.w	r8, #1
 8001b94:	2703      	movs	r7, #3
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001b96:	2604      	movs	r6, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001b98:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001b9a:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001b9e:	e9cd 8705 	strd	r8, r7, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001ba2:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001ba4:	f006 fa3a 	bl	800801c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8001ba8:	f44f 7380 	mov.w	r3, #256	; 0x100
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001bac:	4811      	ldr	r0, [pc, #68]	; (8001bf4 <HAL_I2C_MspInit+0xb4>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001bae:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001bb0:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001bb2:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001bb6:	e9cd 8705 	strd	r8, r7, [sp, #20]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001bba:	f006 fa2f 	bl	800801c <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001bbe:	9502      	str	r5, [sp, #8]
 8001bc0:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001bc2:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001bc6:	6423      	str	r3, [r4, #64]	; 0x40
 8001bc8:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001bca:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8001bce:	9302      	str	r3, [sp, #8]
 8001bd0:	9b02      	ldr	r3, [sp, #8]
  /* USER CODE BEGIN I2C3_MspInit 1 */
  /* Force the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_FORCE_RESET();
 8001bd2:	6a23      	ldr	r3, [r4, #32]
 8001bd4:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001bd8:	6223      	str	r3, [r4, #32]
      
    /* Release the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_RELEASE_RESET(); 
 8001bda:	6a23      	ldr	r3, [r4, #32]
 8001bdc:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8001be0:	6223      	str	r3, [r4, #32]
  /* USER CODE END I2C3_MspInit 1 */
  }

}
 8001be2:	b009      	add	sp, #36	; 0x24
 8001be4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001be8:	40005c00 	.word	0x40005c00
 8001bec:	40023800 	.word	0x40023800
 8001bf0:	40020800 	.word	0x40020800
 8001bf4:	40020000 	.word	0x40020000

08001bf8 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8001bf8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001bfa:	4604      	mov	r4, r0
 8001bfc:	b08d      	sub	sp, #52	; 0x34
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001bfe:	2214      	movs	r2, #20
 8001c00:	2100      	movs	r1, #0
 8001c02:	a807      	add	r0, sp, #28
 8001c04:	f020 f9d4 	bl	8021fb0 <memset>
  if(hltdc->Instance==LTDC)
 8001c08:	6822      	ldr	r2, [r4, #0]
 8001c0a:	4b57      	ldr	r3, [pc, #348]	; (8001d68 <HAL_LTDC_MspInit+0x170>)
 8001c0c:	429a      	cmp	r2, r3
 8001c0e:	f040 80a8 	bne.w	8001d62 <HAL_LTDC_MspInit+0x16a>
  {
  /* USER CODE BEGIN LTDC_MspInit 0 */

  /* USER CODE END LTDC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001c12:	f503 4350 	add.w	r3, r3, #53248	; 0xd000
 8001c16:	2500      	movs	r5, #0
 8001c18:	9500      	str	r5, [sp, #0]
 8001c1a:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_10;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001c1c:	4853      	ldr	r0, [pc, #332]	; (8001d6c <HAL_LTDC_MspInit+0x174>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001c1e:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8001c22:	645a      	str	r2, [r3, #68]	; 0x44
 8001c24:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001c26:	f002 6280 	and.w	r2, r2, #67108864	; 0x4000000
 8001c2a:	9200      	str	r2, [sp, #0]
 8001c2c:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001c2e:	9501      	str	r5, [sp, #4]
 8001c30:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c32:	f042 0220 	orr.w	r2, r2, #32
 8001c36:	631a      	str	r2, [r3, #48]	; 0x30
 8001c38:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c3a:	f002 0220 	and.w	r2, r2, #32
 8001c3e:	9201      	str	r2, [sp, #4]
 8001c40:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001c42:	9502      	str	r5, [sp, #8]
 8001c44:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c46:	f042 0201 	orr.w	r2, r2, #1
 8001c4a:	631a      	str	r2, [r3, #48]	; 0x30
 8001c4c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c4e:	f002 0201 	and.w	r2, r2, #1
 8001c52:	9202      	str	r2, [sp, #8]
 8001c54:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001c56:	9503      	str	r5, [sp, #12]
 8001c58:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c5a:	f042 0202 	orr.w	r2, r2, #2
 8001c5e:	631a      	str	r2, [r3, #48]	; 0x30
 8001c60:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c62:	f002 0202 	and.w	r2, r2, #2
 8001c66:	9203      	str	r2, [sp, #12]
 8001c68:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8001c6a:	9504      	str	r5, [sp, #16]
 8001c6c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c6e:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8001c72:	631a      	str	r2, [r3, #48]	; 0x30
 8001c74:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c76:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8001c7a:	9204      	str	r2, [sp, #16]
 8001c7c:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001c7e:	9505      	str	r5, [sp, #20]
 8001c80:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c82:	f042 0204 	orr.w	r2, r2, #4
 8001c86:	631a      	str	r2, [r3, #48]	; 0x30
 8001c88:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c8a:	f002 0204 	and.w	r2, r2, #4
 8001c8e:	9205      	str	r2, [sp, #20]
 8001c90:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001c92:	9506      	str	r5, [sp, #24]
 8001c94:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c96:	f042 0208 	orr.w	r2, r2, #8
 8001c9a:	631a      	str	r2, [r3, #48]	; 0x30
 8001c9c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001c9e:	f003 0308 	and.w	r3, r3, #8
 8001ca2:	9306      	str	r3, [sp, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001ca4:	2402      	movs	r4, #2
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001ca6:	260e      	movs	r6, #14
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001ca8:	9b06      	ldr	r3, [sp, #24]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001caa:	940a      	str	r4, [sp, #40]	; 0x28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001cac:	f44f 6380 	mov.w	r3, #1024	; 0x400
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001cb0:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001cb2:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001cb6:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001cb8:	f006 f9b0 	bl	800801c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8001cbc:	f641 0358 	movw	r3, #6232	; 0x1858
                          |GPIO_PIN_12;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001cc0:	482b      	ldr	r0, [pc, #172]	; (8001d70 <HAL_LTDC_MspInit+0x178>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001cc2:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001cc4:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001cc6:	e9cd 3407 	strd	r3, r4, [sp, #28]

    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001cca:	2709      	movs	r7, #9
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001ccc:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001cd0:	f006 f9a4 	bl	800801c <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8001cd4:	2303      	movs	r3, #3
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001cd6:	4827      	ldr	r0, [pc, #156]	; (8001d74 <HAL_LTDC_MspInit+0x17c>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001cd8:	970b      	str	r7, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001cda:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001cdc:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001ce0:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001ce4:	f006 f99a 	bl	800801c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 8001ce8:	f44f 6370 	mov.w	r3, #3840	; 0xf00
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001cec:	4821      	ldr	r0, [pc, #132]	; (8001d74 <HAL_LTDC_MspInit+0x17c>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001cee:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001cf0:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001cf2:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001cf6:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001cfa:	f006 f98f 	bl	800801c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 8001cfe:	f44f 630c 	mov.w	r3, #2240	; 0x8c0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001d02:	481d      	ldr	r0, [pc, #116]	; (8001d78 <HAL_LTDC_MspInit+0x180>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001d04:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001d06:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d08:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001d0c:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001d10:	f006 f984 	bl	800801c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8001d14:	23c0      	movs	r3, #192	; 0xc0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001d16:	4819      	ldr	r0, [pc, #100]	; (8001d7c <HAL_LTDC_MspInit+0x184>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001d18:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001d1a:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d1c:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001d20:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001d24:	f006 f97a 	bl	800801c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8001d28:	2308      	movs	r3, #8
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001d2a:	4815      	ldr	r0, [pc, #84]	; (8001d80 <HAL_LTDC_MspInit+0x188>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001d2c:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001d2e:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d30:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001d34:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001d38:	f006 f970 	bl	800801c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8001d3c:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001d40:	480d      	ldr	r0, [pc, #52]	; (8001d78 <HAL_LTDC_MspInit+0x180>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001d42:	970b      	str	r7, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001d44:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d46:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001d4a:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001d4e:	f006 f965 	bl	800801c <HAL_GPIO_Init>

    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8001d52:	2058      	movs	r0, #88	; 0x58
 8001d54:	462a      	mov	r2, r5
 8001d56:	2105      	movs	r1, #5
 8001d58:	f005 ffa0 	bl	8007c9c <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8001d5c:	2058      	movs	r0, #88	; 0x58
 8001d5e:	f005 ffcf 	bl	8007d00 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8001d62:	b00d      	add	sp, #52	; 0x34
 8001d64:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001d66:	bf00      	nop
 8001d68:	40016800 	.word	0x40016800
 8001d6c:	40021400 	.word	0x40021400
 8001d70:	40020000 	.word	0x40020000
 8001d74:	40020400 	.word	0x40020400
 8001d78:	40021800 	.word	0x40021800
 8001d7c:	40020800 	.word	0x40020800
 8001d80:	40020c00 	.word	0x40020c00

08001d84 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8001d84:	b510      	push	{r4, lr}
 8001d86:	4604      	mov	r4, r0
 8001d88:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001d8a:	2214      	movs	r2, #20
 8001d8c:	2100      	movs	r1, #0
 8001d8e:	a803      	add	r0, sp, #12
 8001d90:	f020 f90e 	bl	8021fb0 <memset>
  if(hspi->Instance==SPI5)
 8001d94:	6822      	ldr	r2, [r4, #0]
 8001d96:	4b14      	ldr	r3, [pc, #80]	; (8001de8 <HAL_SPI_MspInit+0x64>)
 8001d98:	429a      	cmp	r2, r3
 8001d9a:	d123      	bne.n	8001de4 <HAL_SPI_MspInit+0x60>
  {
  /* USER CODE BEGIN SPI5_MspInit 0 */

  /* USER CODE END SPI5_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI5_CLK_ENABLE();
 8001d9c:	f503 4368 	add.w	r3, r3, #59392	; 0xe800
 8001da0:	2100      	movs	r1, #0
 8001da2:	9101      	str	r1, [sp, #4]
 8001da4:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001da6:	4811      	ldr	r0, [pc, #68]	; (8001dec <HAL_SPI_MspInit+0x68>)
    __HAL_RCC_SPI5_CLK_ENABLE();
 8001da8:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 8001dac:	645a      	str	r2, [r3, #68]	; 0x44
 8001dae:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001db0:	f402 1280 	and.w	r2, r2, #1048576	; 0x100000
 8001db4:	9201      	str	r2, [sp, #4]
 8001db6:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001db8:	9102      	str	r1, [sp, #8]
 8001dba:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001dbc:	f042 0220 	orr.w	r2, r2, #32
 8001dc0:	631a      	str	r2, [r3, #48]	; 0x30
 8001dc2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001dc4:	f003 0320 	and.w	r3, r3, #32
 8001dc8:	9302      	str	r3, [sp, #8]
 8001dca:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001dcc:	f44f 7260 	mov.w	r2, #896	; 0x380
 8001dd0:	2302      	movs	r3, #2
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8001dd2:	2103      	movs	r1, #3
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001dd4:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8001dd8:	2305      	movs	r3, #5
 8001dda:	e9cd 1306 	strd	r1, r3, [sp, #24]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001dde:	a903      	add	r1, sp, #12
 8001de0:	f006 f91c 	bl	800801c <HAL_GPIO_Init>
  /* USER CODE BEGIN SPI5_MspInit 1 */

  /* USER CODE END SPI5_MspInit 1 */
  }

}
 8001de4:	b008      	add	sp, #32
 8001de6:	bd10      	pop	{r4, pc}
 8001de8:	40015000 	.word	0x40015000
 8001dec:	40021400 	.word	0x40021400

08001df0 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8001df0:	b507      	push	{r0, r1, r2, lr}
  if(htim_base->Instance==TIM7)
 8001df2:	4b0f      	ldr	r3, [pc, #60]	; (8001e30 <HAL_TIM_Base_MspInit+0x40>)
 8001df4:	6802      	ldr	r2, [r0, #0]
 8001df6:	429a      	cmp	r2, r3
 8001df8:	d116      	bne.n	8001e28 <HAL_TIM_Base_MspInit+0x38>
  {
  /* USER CODE BEGIN TIM7_MspInit 0 */

  /* USER CODE END TIM7_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM7_CLK_ENABLE();
 8001dfa:	2200      	movs	r2, #0
 8001dfc:	f503 3309 	add.w	r3, r3, #140288	; 0x22400
 8001e00:	9201      	str	r2, [sp, #4]
 8001e02:	6c19      	ldr	r1, [r3, #64]	; 0x40
 8001e04:	f041 0120 	orr.w	r1, r1, #32
 8001e08:	6419      	str	r1, [r3, #64]	; 0x40
 8001e0a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001e0c:	f003 0320 	and.w	r3, r3, #32
 8001e10:	9301      	str	r3, [sp, #4]
    /* TIM7 interrupt Init */
    HAL_NVIC_SetPriority(TIM7_IRQn, 5, 0);
 8001e12:	2105      	movs	r1, #5
 8001e14:	2037      	movs	r0, #55	; 0x37
    __HAL_RCC_TIM7_CLK_ENABLE();
 8001e16:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(TIM7_IRQn, 5, 0);
 8001e18:	f005 ff40 	bl	8007c9c <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM7_IRQn);
 8001e1c:	2037      	movs	r0, #55	; 0x37
  /* USER CODE BEGIN TIM7_MspInit 1 */

  /* USER CODE END TIM7_MspInit 1 */
  }

}
 8001e1e:	b003      	add	sp, #12
 8001e20:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(TIM7_IRQn);
 8001e24:	f005 bf6c 	b.w	8007d00 <HAL_NVIC_EnableIRQ>
}
 8001e28:	b003      	add	sp, #12
 8001e2a:	f85d fb04 	ldr.w	pc, [sp], #4
 8001e2e:	bf00      	nop
 8001e30:	40001400 	.word	0x40001400

08001e34 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001e34:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001e38:	b086      	sub	sp, #24
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 8001e3a:	2300      	movs	r3, #0
 8001e3c:	9303      	str	r3, [sp, #12]
  if (FMC_Initialized) {
 8001e3e:	4b2b      	ldr	r3, [pc, #172]	; (8001eec <HAL_SDRAM_MspInit+0xb8>)
 8001e40:	681c      	ldr	r4, [r3, #0]
 8001e42:	2c00      	cmp	r4, #0
 8001e44:	d14f      	bne.n	8001ee6 <HAL_SDRAM_MspInit+0xb2>
  FMC_Initialized = 1;
 8001e46:	f04f 0801 	mov.w	r8, #1
 8001e4a:	f8c3 8000 	str.w	r8, [r3]
  __HAL_RCC_FMC_CLK_ENABLE();
 8001e4e:	4b28      	ldr	r3, [pc, #160]	; (8001ef0 <HAL_SDRAM_MspInit+0xbc>)
 8001e50:	9400      	str	r4, [sp, #0]
 8001e52:	6b9a      	ldr	r2, [r3, #56]	; 0x38
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001e54:	4827      	ldr	r0, [pc, #156]	; (8001ef4 <HAL_SDRAM_MspInit+0xc0>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8001e56:	ea42 0208 	orr.w	r2, r2, r8
 8001e5a:	639a      	str	r2, [r3, #56]	; 0x38
 8001e5c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8001e5e:	ea03 0308 	and.w	r3, r3, r8
 8001e62:	9300      	str	r3, [sp, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e64:	2702      	movs	r7, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001e66:	2603      	movs	r6, #3
 8001e68:	250c      	movs	r5, #12
  __HAL_RCC_FMC_CLK_ENABLE();
 8001e6a:	9b00      	ldr	r3, [sp, #0]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001e6c:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e6e:	f64f 033f 	movw	r3, #63551	; 0xf83f
 8001e72:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001e76:	e9cd 6504 	strd	r6, r5, [sp, #16]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001e7a:	f006 f8cf 	bl	800801c <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001e7e:	481e      	ldr	r0, [pc, #120]	; (8001ef8 <HAL_SDRAM_MspInit+0xc4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001e80:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001e82:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e84:	e9cd 8701 	strd	r8, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001e88:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001e8c:	f006 f8c6 	bl	800801c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 8001e90:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001e94:	4819      	ldr	r0, [pc, #100]	; (8001efc <HAL_SDRAM_MspInit+0xc8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001e96:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001e98:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e9a:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001e9e:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001ea2:	f006 f8bb 	bl	800801c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 8001ea6:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001eaa:	4815      	ldr	r0, [pc, #84]	; (8001f00 <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001eac:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001eae:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001eb0:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001eb4:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001eb8:	f006 f8b0 	bl	800801c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 8001ebc:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001ec0:	4810      	ldr	r0, [pc, #64]	; (8001f04 <HAL_SDRAM_MspInit+0xd0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001ec2:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001ec4:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001ec6:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001eca:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001ece:	f006 f8a5 	bl	800801c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8001ed2:	2360      	movs	r3, #96	; 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001ed4:	480c      	ldr	r0, [pc, #48]	; (8001f08 <HAL_SDRAM_MspInit+0xd4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001ed6:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001ed8:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001eda:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001ede:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001ee2:	f006 f89b 	bl	800801c <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 8001ee6:	b006      	add	sp, #24
 8001ee8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001eec:	20006a44 	.word	0x20006a44
 8001ef0:	40023800 	.word	0x40023800
 8001ef4:	40021400 	.word	0x40021400
 8001ef8:	40020800 	.word	0x40020800
 8001efc:	40021800 	.word	0x40021800
 8001f00:	40021000 	.word	0x40021000
 8001f04:	40020c00 	.word	0x40020c00
 8001f08:	40020400 	.word	0x40020400

08001f0c <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8001f0c:	b530      	push	{r4, r5, lr}
 8001f0e:	4601      	mov	r1, r0
 8001f10:	b089      	sub	sp, #36	; 0x24
  uint32_t              uwTimclock = 0;
  uint32_t              uwPrescalerValue = 0;
  uint32_t              pFLatency;

  /*Configure the TIM8 IRQ priority */
  HAL_NVIC_SetPriority(TIM8_UP_TIM13_IRQn, TickPriority ,0);
 8001f12:	2200      	movs	r2, #0
 8001f14:	202c      	movs	r0, #44	; 0x2c
 8001f16:	f005 fec1 	bl	8007c9c <HAL_NVIC_SetPriority>

  /* Enable the TIM8 global Interrupt */
  HAL_NVIC_EnableIRQ(TIM8_UP_TIM13_IRQn);
 8001f1a:	202c      	movs	r0, #44	; 0x2c
 8001f1c:	f005 fef0 	bl	8007d00 <HAL_NVIC_EnableIRQ>

  /* Enable TIM8 clock */
  __HAL_RCC_TIM8_CLK_ENABLE();
 8001f20:	2500      	movs	r5, #0
 8001f22:	4b15      	ldr	r3, [pc, #84]	; (8001f78 <HAL_InitTick+0x6c>)
 8001f24:	9502      	str	r5, [sp, #8]
 8001f26:	6c5a      	ldr	r2, [r3, #68]	; 0x44

  /* Compute the prescaler value to have TIM8 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000) - 1);

  /* Initialize TIM8 */
  htim8.Instance = TIM8;
 8001f28:	4c14      	ldr	r4, [pc, #80]	; (8001f7c <HAL_InitTick+0x70>)
  __HAL_RCC_TIM8_CLK_ENABLE();
 8001f2a:	f042 0202 	orr.w	r2, r2, #2
 8001f2e:	645a      	str	r2, [r3, #68]	; 0x44
 8001f30:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001f32:	f003 0302 	and.w	r3, r3, #2
 8001f36:	9302      	str	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001f38:	a901      	add	r1, sp, #4
 8001f3a:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM8_CLK_ENABLE();
 8001f3c:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001f3e:	f007 f9e5 	bl	800930c <HAL_RCC_GetClockConfig>
  uwTimclock = 2*HAL_RCC_GetPCLK2Freq();
 8001f42:	f007 f9d3 	bl	80092ec <HAL_RCC_GetPCLK2Freq>
  htim8.Instance = TIM8;
 8001f46:	4b0e      	ldr	r3, [pc, #56]	; (8001f80 <HAL_InitTick+0x74>)
 8001f48:	6023      	str	r3, [r4, #0]
  + Period = [(TIM8CLK/1000) - 1]. to have a (1/1000) s time base.
  + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim8.Init.Period = (1000000 / 1000) - 1;
 8001f4a:	f240 33e7 	movw	r3, #999	; 0x3e7
 8001f4e:	60e3      	str	r3, [r4, #12]
  uwTimclock = 2*HAL_RCC_GetPCLK2Freq();
 8001f50:	0040      	lsls	r0, r0, #1
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000) - 1);
 8001f52:	4b0c      	ldr	r3, [pc, #48]	; (8001f84 <HAL_InitTick+0x78>)
 8001f54:	fbb0 f0f3 	udiv	r0, r0, r3
 8001f58:	3801      	subs	r0, #1
  htim8.Init.Prescaler = uwPrescalerValue;
 8001f5a:	6060      	str	r0, [r4, #4]
  htim8.Init.ClockDivision = 0;
  htim8.Init.CounterMode = TIM_COUNTERMODE_UP;
  if(HAL_TIM_Base_Init(&htim8) == HAL_OK)
 8001f5c:	4620      	mov	r0, r4
  htim8.Init.ClockDivision = 0;
 8001f5e:	6125      	str	r5, [r4, #16]
  htim8.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001f60:	60a5      	str	r5, [r4, #8]
  if(HAL_TIM_Base_Init(&htim8) == HAL_OK)
 8001f62:	f007 ff8f 	bl	8009e84 <HAL_TIM_Base_Init>
 8001f66:	b920      	cbnz	r0, 8001f72 <HAL_InitTick+0x66>
  {
    /* Start the TIM time Base generation in interrupt mode */
    return HAL_TIM_Base_Start_IT(&htim8);
 8001f68:	4620      	mov	r0, r4
 8001f6a:	f007 fe6e 	bl	8009c4a <HAL_TIM_Base_Start_IT>
  }

  /* Return function status */
  return HAL_ERROR;
}
 8001f6e:	b009      	add	sp, #36	; 0x24
 8001f70:	bd30      	pop	{r4, r5, pc}
  return HAL_ERROR;
 8001f72:	2001      	movs	r0, #1
 8001f74:	e7fb      	b.n	8001f6e <HAL_InitTick+0x62>
 8001f76:	bf00      	nop
 8001f78:	40023800 	.word	0x40023800
 8001f7c:	20006a48 	.word	0x20006a48
 8001f80:	40010400 	.word	0x40010400
 8001f84:	000f4240 	.word	0x000f4240

08001f88 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8001f88:	4770      	bx	lr

08001f8a <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001f8a:	e7fe      	b.n	8001f8a <HardFault_Handler>

08001f8c <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001f8c:	e7fe      	b.n	8001f8c <MemManage_Handler>

08001f8e <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001f8e:	e7fe      	b.n	8001f8e <BusFault_Handler>

08001f90 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001f90:	e7fe      	b.n	8001f90 <UsageFault_Handler>

08001f92 <DebugMon_Handler>:
 8001f92:	4770      	bx	lr

08001f94 <TIM8_UP_TIM13_IRQHandler>:
void TIM8_UP_TIM13_IRQHandler(void)
{
  /* USER CODE BEGIN TIM8_UP_TIM13_IRQn 0 */

  /* USER CODE END TIM8_UP_TIM13_IRQn 0 */
  HAL_TIM_IRQHandler(&htim8);
 8001f94:	4801      	ldr	r0, [pc, #4]	; (8001f9c <TIM8_UP_TIM13_IRQHandler+0x8>)
 8001f96:	f007 be6c 	b.w	8009c72 <HAL_TIM_IRQHandler>
 8001f9a:	bf00      	nop
 8001f9c:	20006a48 	.word	0x20006a48

08001fa0 <TIM7_IRQHandler>:
void TIM7_IRQHandler(void)
{
  /* USER CODE BEGIN TIM7_IRQn 0 */

  /* USER CODE END TIM7_IRQn 0 */
  HAL_TIM_IRQHandler(&htim7);
 8001fa0:	4801      	ldr	r0, [pc, #4]	; (8001fa8 <TIM7_IRQHandler+0x8>)
 8001fa2:	f007 be66 	b.w	8009c72 <HAL_TIM_IRQHandler>
 8001fa6:	bf00      	nop
 8001fa8:	200030a4 	.word	0x200030a4

08001fac <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8001fac:	4801      	ldr	r0, [pc, #4]	; (8001fb4 <LTDC_IRQHandler+0x8>)
 8001fae:	f006 be71 	b.w	8008c94 <HAL_LTDC_IRQHandler>
 8001fb2:	bf00      	nop
 8001fb4:	20002f70 	.word	0x20002f70

08001fb8 <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 8001fb8:	4801      	ldr	r0, [pc, #4]	; (8001fc0 <DMA2D_IRQHandler+0x8>)
 8001fba:	f005 bf60 	b.w	8007e7e <HAL_DMA2D_IRQHandler>
 8001fbe:	bf00      	nop
 8001fc0:	20002edc 	.word	0x20002edc

08001fc4 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8001fc4:	2001      	movs	r0, #1
 8001fc6:	4770      	bx	lr

08001fc8 <_kill>:

int _kill(int pid, int sig)
{
 8001fc8:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001fca:	f01f fe9d 	bl	8021d08 <__errno>
 8001fce:	2316      	movs	r3, #22
 8001fd0:	6003      	str	r3, [r0, #0]
	return -1;
}
 8001fd2:	f04f 30ff 	mov.w	r0, #4294967295
 8001fd6:	bd08      	pop	{r3, pc}

08001fd8 <_exit>:

void _exit (int status)
{
 8001fd8:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001fda:	f01f fe95 	bl	8021d08 <__errno>
 8001fde:	2316      	movs	r3, #22
 8001fe0:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 8001fe2:	e7fe      	b.n	8001fe2 <_exit+0xa>

08001fe4 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8001fe4:	b570      	push	{r4, r5, r6, lr}
 8001fe6:	460d      	mov	r5, r1
 8001fe8:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001fea:	460e      	mov	r6, r1
 8001fec:	1b73      	subs	r3, r6, r5
 8001fee:	429c      	cmp	r4, r3
 8001ff0:	dc01      	bgt.n	8001ff6 <_read+0x12>
	{
		*ptr++ = __io_getchar();
	}

return len;
}
 8001ff2:	4620      	mov	r0, r4
 8001ff4:	bd70      	pop	{r4, r5, r6, pc}
		*ptr++ = __io_getchar();
 8001ff6:	f3af 8000 	nop.w
 8001ffa:	f806 0b01 	strb.w	r0, [r6], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001ffe:	e7f5      	b.n	8001fec <_read+0x8>

08002000 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8002000:	b570      	push	{r4, r5, r6, lr}
 8002002:	460d      	mov	r5, r1
 8002004:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002006:	460e      	mov	r6, r1
 8002008:	1b73      	subs	r3, r6, r5
 800200a:	429c      	cmp	r4, r3
 800200c:	dc01      	bgt.n	8002012 <_write+0x12>
	{
		__io_putchar(*ptr++);
	}
	return len;
}
 800200e:	4620      	mov	r0, r4
 8002010:	bd70      	pop	{r4, r5, r6, pc}
		__io_putchar(*ptr++);
 8002012:	f816 0b01 	ldrb.w	r0, [r6], #1
 8002016:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800201a:	e7f5      	b.n	8002008 <_write+0x8>

0800201c <_close>:

int _close(int file)
{
	return -1;
}
 800201c:	f04f 30ff 	mov.w	r0, #4294967295
 8002020:	4770      	bx	lr

08002022 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 8002022:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8002026:	604b      	str	r3, [r1, #4]
	return 0;
}
 8002028:	2000      	movs	r0, #0
 800202a:	4770      	bx	lr

0800202c <_isatty>:

int _isatty(int file)
{
	return 1;
}
 800202c:	2001      	movs	r0, #1
 800202e:	4770      	bx	lr

08002030 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 8002030:	2000      	movs	r0, #0
 8002032:	4770      	bx	lr

08002034 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8002034:	4a0a      	ldr	r2, [pc, #40]	; (8002060 <_sbrk+0x2c>)
 8002036:	6811      	ldr	r1, [r2, #0]
{
 8002038:	b508      	push	{r3, lr}
 800203a:	4603      	mov	r3, r0
	if (heap_end == 0)
 800203c:	b909      	cbnz	r1, 8002042 <_sbrk+0xe>
		heap_end = &end;
 800203e:	4909      	ldr	r1, [pc, #36]	; (8002064 <_sbrk+0x30>)
 8002040:	6011      	str	r1, [r2, #0]

	prev_heap_end = heap_end;
 8002042:	6810      	ldr	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 8002044:	4669      	mov	r1, sp
 8002046:	4403      	add	r3, r0
 8002048:	428b      	cmp	r3, r1
 800204a:	d906      	bls.n	800205a <_sbrk+0x26>
	{
		errno = ENOMEM;
 800204c:	f01f fe5c 	bl	8021d08 <__errno>
 8002050:	230c      	movs	r3, #12
 8002052:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 8002054:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap_end += incr;

	return (caddr_t) prev_heap_end;
}
 8002058:	bd08      	pop	{r3, pc}
	heap_end += incr;
 800205a:	6013      	str	r3, [r2, #0]
	return (caddr_t) prev_heap_end;
 800205c:	e7fc      	b.n	8002058 <_sbrk+0x24>
 800205e:	bf00      	nop
 8002060:	20006a88 	.word	0x20006a88
 8002064:	20017bf8 	.word	0x20017bf8

08002068 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // verdana_40_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 8002068:	4770      	bx	lr

0800206a <_ZN23ApplicationFontProviderD0Ev>:
 800206a:	b510      	push	{r4, lr}
 800206c:	2104      	movs	r1, #4
 800206e:	4604      	mov	r4, r0
 8002070:	f01f fdea 	bl	8021c48 <_ZdlPvj>
 8002074:	4620      	mov	r0, r4
 8002076:	bd10      	pop	{r4, pc}

08002078 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
    switch (typography)
 8002078:	2901      	cmp	r1, #1
{
 800207a:	b508      	push	{r3, lr}
    switch (typography)
 800207c:	d006      	beq.n	800208c <_ZN23ApplicationFontProvider7getFontEt+0x14>
 800207e:	2902      	cmp	r1, #2
 8002080:	d008      	beq.n	8002094 <_ZN23ApplicationFontProvider7getFontEt+0x1c>
 8002082:	b959      	cbnz	r1, 800209c <_ZN23ApplicationFontProvider7getFontEt+0x24>
    {
    case Typography::DEFAULT:
        // verdana_15_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 8002084:	f004 fea2 	bl	8006dcc <_ZN17TypedTextDatabase8getFontsEv>
 8002088:	6800      	ldr	r0, [r0, #0]
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
    default:
        return 0;
    }
}
 800208a:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 800208c:	f004 fe9e 	bl	8006dcc <_ZN17TypedTextDatabase8getFontsEv>
 8002090:	6840      	ldr	r0, [r0, #4]
 8002092:	e7fa      	b.n	800208a <_ZN23ApplicationFontProvider7getFontEt+0x12>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 8002094:	f004 fe9a 	bl	8006dcc <_ZN17TypedTextDatabase8getFontsEv>
 8002098:	6880      	ldr	r0, [r0, #8]
 800209a:	e7f6      	b.n	800208a <_ZN23ApplicationFontProvider7getFontEt+0x12>
    switch (typography)
 800209c:	2000      	movs	r0, #0
 800209e:	e7f4      	b.n	800208a <_ZN23ApplicationFontProvider7getFontEt+0x12>

080020a0 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 80020a0:	4800      	ldr	r0, [pc, #0]	; (80020a4 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 80020a2:	4770      	bx	lr
 80020a4:	08023564 	.word	0x08023564

080020a8 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 80020a8:	2009      	movs	r0, #9
 80020aa:	4770      	bx	lr

080020ac <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 80020ac:	b513      	push	{r0, r1, r4, lr}
 80020ae:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 80020b0:	b151      	cbz	r1, 80020c8 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 80020b2:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 80020b4:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 80020b6:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 80020ba:	aa01      	add	r2, sp, #4
 80020bc:	689c      	ldr	r4, [r3, #8]
 80020be:	f10d 0303 	add.w	r3, sp, #3
 80020c2:	47a0      	blx	r4
        return glyph;
    }
 80020c4:	b002      	add	sp, #8
 80020c6:	bd10      	pop	{r4, pc}
            return 0;
 80020c8:	4608      	mov	r0, r1
 80020ca:	e7fb      	b.n	80020c4 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

080020cc <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 80020cc:	8940      	ldrh	r0, [r0, #10]
 80020ce:	4770      	bx	lr

080020d0 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 80020d0:	8980      	ldrh	r0, [r0, #12]
 80020d2:	4770      	bx	lr

080020d4 <_ZNK8touchgfx4Font13getFontHeightEv>:
     *       getMinimumTextHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getFontHeight() const
    {
        return fontHeight;
    }
 80020d4:	8880      	ldrh	r0, [r0, #4]
 80020d6:	4770      	bx	lr

080020d8 <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
     *
     * @return The minimum height needed for a text field that uses this font.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getMinimumTextHeight() const
    {
        return fontHeight + pixelsBelowBaseline;
 80020d8:	7983      	ldrb	r3, [r0, #6]
 80020da:	8880      	ldrh	r0, [r0, #4]
 80020dc:	4418      	add	r0, r3
    }
 80020de:	b280      	uxth	r0, r0
 80020e0:	4770      	bx	lr

080020e2 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 80020e2:	79c0      	ldrb	r0, [r0, #7]
    }
 80020e4:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 80020e8:	4770      	bx	lr

080020ea <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 80020ea:	79c0      	ldrb	r0, [r0, #7]
    }
 80020ec:	09c0      	lsrs	r0, r0, #7
 80020ee:	4770      	bx	lr

080020f0 <_ZN8touchgfx9TypedTextD1Ev>:
    }
 80020f0:	4770      	bx	lr

080020f2 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 80020f2:	b510      	push	{r4, lr}
    }
 80020f4:	2108      	movs	r1, #8
    virtual ~TypedText()
 80020f6:	4604      	mov	r4, r0
    }
 80020f8:	f01f fda6 	bl	8021c48 <_ZdlPvj>
 80020fc:	4620      	mov	r0, r4
 80020fe:	bd10      	pop	{r4, pc}

08002100 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 8002100:	4770      	bx	lr

08002102 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 8002102:	4770      	bx	lr

08002104 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 8002104:	f500 7396 	add.w	r3, r0, #300	; 0x12c
 8002108:	6808      	ldr	r0, [r1, #0]
 800210a:	6849      	ldr	r1, [r1, #4]
 800210c:	c303      	stmia	r3!, {r0, r1}
    }
 800210e:	4770      	bx	lr

08002110 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 8002110:	2000      	movs	r0, #0
 8002112:	4770      	bx	lr

08002114 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 8002114:	8081      	strh	r1, [r0, #4]
    }
 8002116:	4770      	bx	lr

08002118 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 8002118:	80c1      	strh	r1, [r0, #6]
    }
 800211a:	4770      	bx	lr

0800211c <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 800211c:	8101      	strh	r1, [r0, #8]
    }
 800211e:	4770      	bx	lr

08002120 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 8002120:	8141      	strh	r1, [r0, #10]
    }
 8002122:	4770      	bx	lr

08002124 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 8002124:	4770      	bx	lr

08002126 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 8002126:	4770      	bx	lr

08002128 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 8002128:	4770      	bx	lr

0800212a <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 800212a:	4770      	bx	lr

0800212c <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 800212c:	4770      	bx	lr

0800212e <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 800212e:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 8002130:	88c4      	ldrh	r4, [r0, #6]
 8002132:	6803      	ldr	r3, [r0, #0]
 8002134:	1b12      	subs	r2, r2, r4
 8002136:	8884      	ldrh	r4, [r0, #4]
 8002138:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800213a:	1b09      	subs	r1, r1, r4
 800213c:	b212      	sxth	r2, r2
    }
 800213e:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 8002142:	b209      	sxth	r1, r1
 8002144:	4718      	bx	r3

08002146 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 8002146:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800214a:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 800214c:	f04f 33ff 	mov.w	r3, #4294967295
 8002150:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 8002152:	6813      	ldr	r3, [r2, #0]
 8002154:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 8002156:	6010      	str	r0, [r2, #0]
    }
 8002158:	4770      	bx	lr

0800215a <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 800215a:	4770      	bx	lr

0800215c <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 800215c:	4770      	bx	lr

0800215e <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 800215e:	6041      	str	r1, [r0, #4]
    }
 8002160:	4770      	bx	lr

08002162 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 8002162:	4770      	bx	lr

08002164 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002164:	4b06      	ldr	r3, [pc, #24]	; (8002180 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 8002166:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 800216a:	2300      	movs	r3, #0
 800216c:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
// Screen1

void FrontendApplicationBase::gotoScreen1ScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoScreen1ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8002170:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8002174:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8002178:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c

    virtual void changeToStartScreen()
    {
        gotoScreen1ScreenNoTransition();
    }
 800217c:	4770      	bx	lr
 800217e:	bf00      	nop
 8002180:	08002295 	.word	0x08002295

08002184 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 8002184:	2301      	movs	r3, #1
 8002186:	7203      	strb	r3, [r0, #8]
    }
 8002188:	4770      	bx	lr

0800218a <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 800218a:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800218e:	b11a      	cbz	r2, 8002198 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 8002190:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 8002194:	b102      	cbz	r2, 8002198 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 8002196:	6018      	str	r0, [r3, #0]
        }
    }
 8002198:	4770      	bx	lr

0800219a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRectD1Ev>:
{
public:
    /**
     * A Widget that reports solid and but does not draw anything.
     */
    class FullSolidRect : public Widget
 800219a:	4770      	bx	lr

0800219c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED1Ev>:
class WipeTransition : public Transition
 800219c:	4770      	bx	lr

0800219e <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 800219e:	4770      	bx	lr

080021a0 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 80021a0:	4770      	bx	lr

080021a2 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE8tearDownEv>:
            // Copy rect from tft to client framebuffer
            HAL::getInstance()->lcd().blitCopy((const uint16_t*)tftFb, source, rect, 255, false);
        }
    }

    virtual void tearDown()
 80021a2:	4601      	mov	r1, r0
    {
        screenContainer->remove(solid);
 80021a4:	6840      	ldr	r0, [r0, #4]
 80021a6:	6803      	ldr	r3, [r0, #0]
 80021a8:	3110      	adds	r1, #16
 80021aa:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80021ac:	4718      	bx	r3

080021ae <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE4initEv>:
    }

    virtual void init()
 80021ae:	4601      	mov	r1, r0
    {
        Transition::init();
        // Add the solid (and not-drawing-anything) widget on top to cover the other widgets
        screenContainer->add(solid);
 80021b0:	6840      	ldr	r0, [r0, #4]
 80021b2:	6803      	ldr	r3, [r0, #0]
 80021b4:	3110      	adds	r1, #16
 80021b6:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80021b8:	4718      	bx	r3

080021ba <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE10invalidateEv>:
     * Wipe transition does not require an invalidation. Invalidation
     * is handled by the class. Do no invalidation initially.
     */
    virtual void invalidate()
    {
    }
 80021ba:	4770      	bx	lr

080021bc <_ZNK8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRect4drawERKNS_4RectE>:
        }
 80021bc:	4770      	bx	lr

080021be <_ZNK8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRect12getSolidRectEv>:
        virtual Rect getSolidRect() const
 80021be:	b510      	push	{r4, lr}
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80021c0:	2200      	movs	r2, #0
            return Rect(0U, 0U, rect.width, rect.height);
 80021c2:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 80021c6:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 80021ca:	8002      	strh	r2, [r0, #0]
 80021cc:	8042      	strh	r2, [r0, #2]
 80021ce:	8084      	strh	r4, [r0, #4]
 80021d0:	80c1      	strh	r1, [r0, #6]
        }
 80021d2:	bd10      	pop	{r4, pc}

080021d4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 80021d4:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 80021d6:	68c2      	ldr	r2, [r0, #12]
 80021d8:	6841      	ldr	r1, [r0, #4]
 80021da:	1054      	asrs	r4, r2, #1
    virtual void execute()
 80021dc:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
 80021de:	eb01 0062 	add.w	r0, r1, r2, asr #1
 80021e2:	07d2      	lsls	r2, r2, #31
 80021e4:	bf48      	it	mi
 80021e6:	590a      	ldrmi	r2, [r1, r4]
 80021e8:	689b      	ldr	r3, [r3, #8]
    }
 80021ea:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 80021ee:	bf48      	it	mi
 80021f0:	58d3      	ldrmi	r3, [r2, r3]
 80021f2:	4718      	bx	r3

080021f4 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 80021f4:	6843      	ldr	r3, [r0, #4]
 80021f6:	b12b      	cbz	r3, 8002204 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 80021f8:	6883      	ldr	r3, [r0, #8]
 80021fa:	b92b      	cbnz	r3, 8002208 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 80021fc:	68c0      	ldr	r0, [r0, #12]
 80021fe:	f000 0001 	and.w	r0, r0, #1
 8002202:	4770      	bx	lr
 8002204:	4618      	mov	r0, r3
 8002206:	4770      	bx	lr
 8002208:	2001      	movs	r0, #1
    }
 800220a:	4770      	bx	lr

0800220c <_ZN8touchgfx12NoTransitionD0Ev>:
 800220c:	b510      	push	{r4, lr}
 800220e:	210c      	movs	r1, #12
 8002210:	4604      	mov	r4, r0
 8002212:	f01f fd19 	bl	8021c48 <_ZdlPvj>
 8002216:	4620      	mov	r0, r4
 8002218:	bd10      	pop	{r4, pc}

0800221a <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 800221a:	b510      	push	{r4, lr}
 800221c:	2110      	movs	r1, #16
 800221e:	4604      	mov	r4, r0
 8002220:	f01f fd12 	bl	8021c48 <_ZdlPvj>
 8002224:	4620      	mov	r0, r4
 8002226:	bd10      	pop	{r4, pc}

08002228 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 8002228:	b510      	push	{r4, lr}
 800222a:	f44f 71ac 	mov.w	r1, #344	; 0x158
 800222e:	4604      	mov	r4, r0
 8002230:	f01f fd0a 	bl	8021c48 <_ZdlPvj>
 8002234:	4620      	mov	r0, r4
 8002236:	bd10      	pop	{r4, pc}

08002238 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED0Ev>:
class WipeTransition : public Transition
 8002238:	b510      	push	{r4, lr}
 800223a:	2138      	movs	r1, #56	; 0x38
 800223c:	4604      	mov	r4, r0
 800223e:	f01f fd03 	bl	8021c48 <_ZdlPvj>
 8002242:	4620      	mov	r0, r4
 8002244:	bd10      	pop	{r4, pc}

08002246 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRectD0Ev>:
    class FullSolidRect : public Widget
 8002246:	b510      	push	{r4, lr}
 8002248:	2128      	movs	r1, #40	; 0x28
 800224a:	4604      	mov	r4, r0
 800224c:	f01f fcfc 	bl	8021c48 <_ZdlPvj>
 8002250:	4620      	mov	r0, r4
 8002252:	bd10      	pop	{r4, pc}

08002254 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 8002254:	b508      	push	{r3, lr}
        Application::getInstance()->invalidate();
 8002256:	f010 f9db 	bl	8012610 <_ZN8touchgfx11Application11getInstanceEv>
    }
 800225a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        Application::getInstance()->invalidate();
 800225e:	f010 bd7b 	b.w	8012d58 <_ZN8touchgfx11Application10invalidateEv>

08002262 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 8002262:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8002266:	b112      	cbz	r2, 800226e <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 8002268:	6803      	ldr	r3, [r0, #0]
 800226a:	695b      	ldr	r3, [r3, #20]
 800226c:	4718      	bx	r3
    }
 800226e:	4770      	bx	lr

08002270 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 8002270:	b510      	push	{r4, lr}
 8002272:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 8002274:	f8d0 013c 	ldr.w	r0, [r0, #316]	; 0x13c
 8002278:	b158      	cbz	r0, 8002292 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 800227a:	6803      	ldr	r3, [r0, #0]
 800227c:	68db      	ldr	r3, [r3, #12]
 800227e:	4798      	blx	r3
 8002280:	b138      	cbz	r0, 8002292 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 8002282:	f8d4 013c 	ldr.w	r0, [r4, #316]	; 0x13c
 8002286:	6803      	ldr	r3, [r0, #0]
 8002288:	689b      	ldr	r3, [r3, #8]
 800228a:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 800228c:	2300      	movs	r3, #0
 800228e:	f8c4 313c 	str.w	r3, [r4, #316]	; 0x13c
    }
 8002292:	bd10      	pop	{r4, pc}

08002294 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv>:
}

void FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl()
{
 8002294:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Screen1View, Screen1Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8002298:	e9d0 5a54 	ldrd	r5, sl, [r0, #336]	; 0x150
{
 800229c:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800229e:	68a8      	ldr	r0, [r5, #8]
 80022a0:	6803      	ldr	r3, [r0, #0]
 80022a2:	6a1b      	ldr	r3, [r3, #32]
 80022a4:	4798      	blx	r3
 80022a6:	f5b0 7f7e 	cmp.w	r0, #1016	; 0x3f8
 80022aa:	d205      	bcs.n	80022b8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x24>
 80022ac:	4b45      	ldr	r3, [pc, #276]	; (80023c4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x130>)
 80022ae:	4a46      	ldr	r2, [pc, #280]	; (80023c8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
 80022b0:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80022b2:	4846      	ldr	r0, [pc, #280]	; (80023cc <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x138>)
 80022b4:	f01f fcf6 	bl	8021ca4 <__assert_func>
 80022b8:	6868      	ldr	r0, [r5, #4]
 80022ba:	6803      	ldr	r3, [r0, #0]
 80022bc:	6a1b      	ldr	r3, [r3, #32]
 80022be:	4798      	blx	r3
 80022c0:	280f      	cmp	r0, #15
 80022c2:	d803      	bhi.n	80022cc <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x38>
 80022c4:	4b42      	ldr	r3, [pc, #264]	; (80023d0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x13c>)
 80022c6:	4a40      	ldr	r2, [pc, #256]	; (80023c8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
 80022c8:	21a4      	movs	r1, #164	; 0xa4
 80022ca:	e7f2      	b.n	80022b2 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80022cc:	68e8      	ldr	r0, [r5, #12]
 80022ce:	6803      	ldr	r3, [r0, #0]
 80022d0:	6a1b      	ldr	r3, [r3, #32]
 80022d2:	4798      	blx	r3
 80022d4:	280b      	cmp	r0, #11
 80022d6:	d803      	bhi.n	80022e0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x4c>
 80022d8:	4b3e      	ldr	r3, [pc, #248]	; (80023d4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x140>)
 80022da:	4a3b      	ldr	r2, [pc, #236]	; (80023c8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
 80022dc:	21a5      	movs	r1, #165	; 0xa5
 80022de:	e7e8      	b.n	80022b2 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x1e>
    if (*currentTrans)
 80022e0:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 80023dc <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x148>
    Application::getInstance()->clearAllTimerWidgets();
 80022e4:	f010 f994 	bl	8012610 <_ZN8touchgfx11Application11getInstanceEv>
 80022e8:	f010 f998 	bl	801261c <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 80022ec:	f8d9 0000 	ldr.w	r0, [r9]
 80022f0:	b110      	cbz	r0, 80022f8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x64>
        (*currentTrans)->tearDown();
 80022f2:	6803      	ldr	r3, [r0, #0]
 80022f4:	68db      	ldr	r3, [r3, #12]
 80022f6:	4798      	blx	r3
    if (*currentTrans)
 80022f8:	f8d9 0000 	ldr.w	r0, [r9]
 80022fc:	b110      	cbz	r0, 8002304 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x70>
        (*currentTrans)->~Transition();
 80022fe:	6803      	ldr	r3, [r0, #0]
 8002300:	681b      	ldr	r3, [r3, #0]
 8002302:	4798      	blx	r3
    if (*currentScreen)
 8002304:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 80023e0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x14c>
 8002308:	f8d8 0000 	ldr.w	r0, [r8]
 800230c:	b110      	cbz	r0, 8002314 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 800230e:	6803      	ldr	r3, [r0, #0]
 8002310:	695b      	ldr	r3, [r3, #20]
 8002312:	4798      	blx	r3
    if (*currentPresenter)
 8002314:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8002318:	b110      	cbz	r0, 8002320 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x8c>
        (*currentPresenter)->deactivate();
 800231a:	6803      	ldr	r3, [r0, #0]
 800231c:	685b      	ldr	r3, [r3, #4]
 800231e:	4798      	blx	r3
    if (*currentScreen)
 8002320:	f8d8 0000 	ldr.w	r0, [r8]
 8002324:	b110      	cbz	r0, 800232c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x98>
        (*currentScreen)->~Screen();
 8002326:	6803      	ldr	r3, [r0, #0]
 8002328:	681b      	ldr	r3, [r3, #0]
 800232a:	4798      	blx	r3
    if (*currentPresenter)
 800232c:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8002330:	b110      	cbz	r0, 8002338 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 8002332:	6803      	ldr	r3, [r0, #0]
 8002334:	689b      	ldr	r3, [r3, #8]
 8002336:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002338:	68e8      	ldr	r0, [r5, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 800233a:	6803      	ldr	r3, [r0, #0]
 800233c:	2100      	movs	r1, #0
 800233e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002340:	4798      	blx	r3
        : screenContainer(0), done(false)
 8002342:	f04f 0b00 	mov.w	fp, #0
 8002346:	4b24      	ldr	r3, [pc, #144]	; (80023d8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x144>)
 8002348:	6003      	str	r3, [r0, #0]
 800234a:	4604      	mov	r4, r0
 800234c:	f8c0 b004 	str.w	fp, [r0, #4]
 8002350:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8002354:	68a8      	ldr	r0, [r5, #8]
 8002356:	6803      	ldr	r3, [r0, #0]
 8002358:	4659      	mov	r1, fp
 800235a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800235c:	4798      	blx	r3
 800235e:	4606      	mov	r6, r0
 8002360:	f004 fe14 	bl	8006f8c <_ZN11Screen1ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8002364:	6868      	ldr	r0, [r5, #4]
 8002366:	6803      	ldr	r3, [r0, #0]
 8002368:	4659      	mov	r1, fp
 800236a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800236c:	4798      	blx	r3
 800236e:	4631      	mov	r1, r6
 8002370:	4605      	mov	r5, r0
 8002372:	f004 fd97 	bl	8006ea4 <_ZN16Screen1PresenterC1ER11Screen1View>
    *currentTrans = newTransition;
 8002376:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 800237a:	f8c7 5138 	str.w	r5, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 800237e:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8002382:	b1e5      	cbz	r5, 80023be <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x12a>
 8002384:	1d2b      	adds	r3, r5, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 8002386:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800238a:	6833      	ldr	r3, [r6, #0]
    virtual void DisplayLastAndMaxVlt() {} ;
    virtual void DisplayRunningTime() {} ;

    void bind(Model* m)
    {
        model = m;
 800238c:	f8c5 a008 	str.w	sl, [r5, #8]
 8002390:	4630      	mov	r0, r6
 8002392:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 8002394:	63f5      	str	r5, [r6, #60]	; 0x3c
 8002396:	4798      	blx	r3
    newPresenter->activate();
 8002398:	682b      	ldr	r3, [r5, #0]
 800239a:	4628      	mov	r0, r5
 800239c:	681b      	ldr	r3, [r3, #0]
 800239e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80023a0:	4621      	mov	r1, r4
 80023a2:	4630      	mov	r0, r6
 80023a4:	f011 fde2 	bl	8013f6c <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80023a8:	6823      	ldr	r3, [r4, #0]
 80023aa:	4620      	mov	r0, r4
 80023ac:	691b      	ldr	r3, [r3, #16]
 80023ae:	4798      	blx	r3
    newTransition->invalidate();
 80023b0:	6823      	ldr	r3, [r4, #0]
 80023b2:	695b      	ldr	r3, [r3, #20]
 80023b4:	4620      	mov	r0, r4
}
 80023b6:	b001      	add	sp, #4
 80023b8:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80023bc:	4718      	bx	r3
    model->bind(newPresenter);
 80023be:	462b      	mov	r3, r5
 80023c0:	e7e1      	b.n	8002386 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0xf2>
 80023c2:	bf00      	nop
 80023c4:	08023628 	.word	0x08023628
 80023c8:	080236b6 	.word	0x080236b6
 80023cc:	080237ba 	.word	0x080237ba
 80023d0:	08023801 	.word	0x08023801
 80023d4:	080238a4 	.word	0x080238a4
 80023d8:	08023be8 	.word	0x08023be8
 80023dc:	20017994 	.word	0x20017994
 80023e0:	20017990 	.word	0x20017990

080023e4 <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 80023e4:	4b04      	ldr	r3, [pc, #16]	; (80023f8 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 80023e6:	681b      	ldr	r3, [r3, #0]
 80023e8:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 80023ec:	b10a      	cbz	r2, 80023f2 <_ZN8touchgfx3HAL3lcdEv+0xe>
 80023ee:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80023f0:	b900      	cbnz	r0, 80023f4 <_ZN8touchgfx3HAL3lcdEv+0x10>
        return instance->lcdRef;
 80023f2:	6898      	ldr	r0, [r3, #8]
    }
 80023f4:	4770      	bx	lr
 80023f6:	bf00      	nop
 80023f8:	2001794c 	.word	0x2001794c

080023fc <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
 80023fc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80023fe:	4604      	mov	r4, r0
        animationCounter++;
 8002400:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter <= (animationSteps))
 8002402:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 8002404:	3001      	adds	r0, #1
 8002406:	b2c0      	uxtb	r0, r0
        if (animationCounter <= (animationSteps))
 8002408:	4298      	cmp	r0, r3
    virtual void handleTickEvent()
 800240a:	b089      	sub	sp, #36	; 0x24
        animationCounter++;
 800240c:	72a0      	strb	r0, [r4, #10]
        if (animationCounter <= (animationSteps))
 800240e:	d850      	bhi.n	80024b2 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xb6>
            calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8002410:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8002414:	2100      	movs	r1, #0
 8002416:	f011 fdaf 	bl	8013f78 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
            if (calculatedValue % 2)
 800241a:	f010 0201 	ands.w	r2, r0, #1
 800241e:	b283      	uxth	r3, r0
 8002420:	d04d      	beq.n	80024be <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xc2>
                calculatedValue += (calculatedValue > 0 ? 1 : -1);
 8002422:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8002426:	2800      	cmp	r0, #0
 8002428:	bfd8      	it	le
 800242a:	460a      	movle	r2, r1
 800242c:	4413      	add	r3, r2
 800242e:	81e3      	strh	r3, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8002430:	4e24      	ldr	r6, [pc, #144]	; (80024c4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xc8>)
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 8002432:	4f25      	ldr	r7, [pc, #148]	; (80024c8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xcc>)
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8002434:	8831      	ldrh	r1, [r6, #0]
                const uint16_t prevSolidWidth = solid.getWidth();
 8002436:	f8b4 c018 	ldrh.w	ip, [r4, #24]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 800243a:	89e3      	ldrh	r3, [r4, #14]
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 800243c:	f9b7 0000 	ldrsh.w	r0, [r7]
 8002440:	f8ad 001e 	strh.w	r0, [sp, #30]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8002444:	1aca      	subs	r2, r1, r3
                screenContainer->invalidateRect(r);
 8002446:	6860      	ldr	r0, [r4, #4]
                const uint16_t delta = prevSolidWidth - solid.getWidth();
 8002448:	4463      	add	r3, ip
 800244a:	1a5b      	subs	r3, r3, r1
 800244c:	f8ad 301c 	strh.w	r3, [sp, #28]
                screenContainer->invalidateRect(r);
 8002450:	6803      	ldr	r3, [r0, #0]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8002452:	b212      	sxth	r2, r2
 8002454:	2500      	movs	r5, #0
                screenContainer->invalidateRect(r);
 8002456:	691b      	ldr	r3, [r3, #16]
        rect.width = width;
 8002458:	8322      	strh	r2, [r4, #24]
 800245a:	f8ad 2018 	strh.w	r2, [sp, #24]
 800245e:	f8ad 501a 	strh.w	r5, [sp, #26]
 8002462:	a906      	add	r1, sp, #24
 8002464:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 8002466:	7aa3      	ldrb	r3, [r4, #10]
 8002468:	2b01      	cmp	r3, #1
 800246a:	d126      	bne.n	80024ba <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xbe>
 800246c:	4b17      	ldr	r3, [pc, #92]	; (80024cc <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xd0>)
 800246e:	781b      	ldrb	r3, [r3, #0]
 8002470:	b31b      	cbz	r3, 80024ba <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xbe>
            Rect rect = solid.getRect(); // Part to copy between buffers
 8002472:	69a1      	ldr	r1, [r4, #24]
 8002474:	6960      	ldr	r0, [r4, #20]
 8002476:	ab04      	add	r3, sp, #16
 8002478:	c303      	stmia	r3!, {r0, r1}
        return instance;
 800247a:	4b15      	ldr	r3, [pc, #84]	; (80024d0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xd4>)
 800247c:	6818      	ldr	r0, [r3, #0]
            uint16_t* tftFb = HAL::getInstance()->getTFTFrameBuffer();
 800247e:	6803      	ldr	r3, [r0, #0]
 8002480:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002482:	4798      	blx	r3
            source.width = HAL::DISPLAY_WIDTH;
 8002484:	8833      	ldrh	r3, [r6, #0]
 8002486:	f8ad 301c 	strh.w	r3, [sp, #28]
            source.height = HAL::DISPLAY_HEIGHT;
 800248a:	883b      	ldrh	r3, [r7, #0]
 800248c:	f8ad 301e 	strh.w	r3, [sp, #30]
            uint16_t* tftFb = HAL::getInstance()->getTFTFrameBuffer();
 8002490:	9003      	str	r0, [sp, #12]
        : x(0), y(0), width(0), height(0)
 8002492:	f8ad 5018 	strh.w	r5, [sp, #24]
 8002496:	f8ad 501a 	strh.w	r5, [sp, #26]
            HAL::getInstance()->lcd().blitCopy((const uint16_t*)tftFb, source, rect, 255, false);
 800249a:	f7ff ffa3 	bl	80023e4 <_ZN8touchgfx3HAL3lcdEv>
 800249e:	22ff      	movs	r2, #255	; 0xff
 80024a0:	6803      	ldr	r3, [r0, #0]
 80024a2:	9200      	str	r2, [sp, #0]
 80024a4:	9501      	str	r5, [sp, #4]
 80024a6:	68dc      	ldr	r4, [r3, #12]
 80024a8:	9903      	ldr	r1, [sp, #12]
 80024aa:	ab04      	add	r3, sp, #16
 80024ac:	aa06      	add	r2, sp, #24
 80024ae:	47a0      	blx	r4
 80024b0:	e003      	b.n	80024ba <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xbe>
            done = true;
 80024b2:	2301      	movs	r3, #1
 80024b4:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 80024b6:	2300      	movs	r3, #0
 80024b8:	72a3      	strb	r3, [r4, #10]
    }
 80024ba:	b009      	add	sp, #36	; 0x24
 80024bc:	bdf0      	pop	{r4, r5, r6, r7, pc}
            calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 80024be:	81e0      	strh	r0, [r4, #14]
 80024c0:	e7b6      	b.n	8002430 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x34>
 80024c2:	bf00      	nop
 80024c4:	20017940 	.word	0x20017940
 80024c8:	20017942 	.word	0x20017942
 80024cc:	2001794a 	.word	0x2001794a
 80024d0:	2001794c 	.word	0x2001794c

080024d4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 80024d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80024d6:	4604      	mov	r4, r0
 80024d8:	4617      	mov	r7, r2
 80024da:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 80024dc:	f010 f8b8 	bl	8012650 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 80024e0:	4b0e      	ldr	r3, [pc, #56]	; (800251c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x48>)
 80024e2:	601c      	str	r4, [r3, #0]
      model(m)
 80024e4:	4b0e      	ldr	r3, [pc, #56]	; (8002520 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x4c>)
 80024e6:	6023      	str	r3, [r4, #0]
        : pobject(0), pmemfun(0)
 80024e8:	4b0e      	ldr	r3, [pc, #56]	; (8002524 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
          pendingScreenTransitionCallback(0)
 80024ea:	2500      	movs	r5, #0
 80024ec:	e9c4 3550 	strd	r3, r5, [r4, #320]	; 0x140
 80024f0:	4b0d      	ldr	r3, [pc, #52]	; (8002528 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
 80024f2:	e9c4 5552 	strd	r5, r5, [r4, #328]	; 0x148
 80024f6:	6818      	ldr	r0, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 80024f8:	6803      	ldr	r3, [r0, #0]
 80024fa:	4629      	mov	r1, r5
 80024fc:	689b      	ldr	r3, [r3, #8]
 80024fe:	e9c4 554e 	strd	r5, r5, [r4, #312]	; 0x138
      model(m)
 8002502:	e9c4 7654 	strd	r7, r6, [r4, #336]	; 0x150
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 8002506:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 8002508:	4628      	mov	r0, r5
 800250a:	f004 fc13 	bl	8006d34 <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 800250e:	f7ff ff69 	bl	80023e4 <_ZN8touchgfx3HAL3lcdEv>
 8002512:	f018 f98a 	bl	801a82a <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
}
 8002516:	4620      	mov	r0, r4
 8002518:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800251a:	bf00      	nop
 800251c:	200179a0 	.word	0x200179a0
 8002520:	08023b9c 	.word	0x08023b9c
 8002524:	08023b84 	.word	0x08023b84
 8002528:	2001794c 	.word	0x2001794c

0800252c <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 800252c:	4b06      	ldr	r3, [pc, #24]	; (8002548 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv+0x1c>)
 800252e:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8002532:	2300      	movs	r3, #0
 8002534:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
    pendingScreenTransitionCallback = &transitionCallback;
 8002538:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 800253c:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8002540:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8002544:	4770      	bx	lr
 8002546:	bf00      	nop
 8002548:	08002295 	.word	0x08002295

0800254c <_ZN23FrontendApplicationBase35gotoScreen1ScreenWipeTransitionEastEv>:
 800254c:	4b06      	ldr	r3, [pc, #24]	; (8002568 <_ZN23FrontendApplicationBase35gotoScreen1ScreenWipeTransitionEastEv+0x1c>)
 800254e:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8002552:	2300      	movs	r3, #0
 8002554:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c

void FrontendApplicationBase::gotoScreen1ScreenWipeTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoScreen1ScreenWipeTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8002558:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 800255c:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8002560:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8002564:	4770      	bx	lr
 8002566:	bf00      	nop
 8002568:	08002731 	.word	0x08002731

0800256c <_ZN23FrontendApplicationBase39gotoScreenGraphScreenWipeTransitionEastEv>:
 800256c:	4b06      	ldr	r3, [pc, #24]	; (8002588 <_ZN23FrontendApplicationBase39gotoScreenGraphScreenWipeTransitionEastEv+0x1c>)
 800256e:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8002572:	2300      	movs	r3, #0
 8002574:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
// ScreenGraph

void FrontendApplicationBase::gotoScreenGraphScreenWipeTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoScreenGraphScreenWipeTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8002578:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 800257c:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8002580:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8002584:	4770      	bx	lr
 8002586:	bf00      	nop
 8002588:	080025f1 	.word	0x080025f1

0800258c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>:
    WipeTransition(const uint8_t transitionSteps = 20)
 800258c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800258e:	4604      	mov	r4, r0
 8002590:	2300      	movs	r3, #0
          solid()
 8002592:	4a13      	ldr	r2, [pc, #76]	; (80025e0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x54>)
 8002594:	6002      	str	r2, [r0, #0]
 8002596:	6043      	str	r3, [r0, #4]
 8002598:	7203      	strb	r3, [r0, #8]
 800259a:	7241      	strb	r1, [r0, #9]
 800259c:	7283      	strb	r3, [r0, #10]
 800259e:	e9c4 3305 	strd	r3, r3, [r4, #20]
 80025a2:	e9c4 3307 	strd	r3, r3, [r4, #28]
 80025a6:	e9c4 3309 	strd	r3, r3, [r4, #36]	; 0x24
 80025aa:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 80025ae:	81e3      	strh	r3, [r4, #14]
 80025b0:	f44f 7380 	mov.w	r3, #256	; 0x100
 80025b4:	6363      	str	r3, [r4, #52]	; 0x34
    class FullSolidRect : public Widget
 80025b6:	4b0b      	ldr	r3, [pc, #44]	; (80025e4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x58>)
 80025b8:	6123      	str	r3, [r4, #16]
            targetValue = HAL::DISPLAY_WIDTH;
 80025ba:	4b0b      	ldr	r3, [pc, #44]	; (80025e8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x5c>)
 80025bc:	f9b3 1000 	ldrsh.w	r1, [r3]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 80025c0:	4b0a      	ldr	r3, [pc, #40]	; (80025ec <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x60>)
            targetValue = HAL::DISPLAY_WIDTH;
 80025c2:	81a1      	strh	r1, [r4, #12]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 80025c4:	f9b3 5000 	ldrsh.w	r5, [r3]
          solid()
 80025c8:	3010      	adds	r0, #16
        setWidth(width);
 80025ca:	9001      	str	r0, [sp, #4]
 80025cc:	f7ff fda6 	bl	800211c <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 80025d0:	9801      	ldr	r0, [sp, #4]
 80025d2:	4629      	mov	r1, r5
 80025d4:	f7ff fda4 	bl	8002120 <_ZN8touchgfx8Drawable9setHeightEs>
    }
 80025d8:	4620      	mov	r0, r4
 80025da:	b003      	add	sp, #12
 80025dc:	bd30      	pop	{r4, r5, pc}
 80025de:	bf00      	nop
 80025e0:	08023c74 	.word	0x08023c74
 80025e4:	08023c0c 	.word	0x08023c0c
 80025e8:	20017940 	.word	0x20017940
 80025ec:	20017942 	.word	0x20017942

080025f0 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv>:

void FrontendApplicationBase::gotoScreenGraphScreenWipeTransitionEastImpl()
{
 80025f0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<ScreenGraphView, ScreenGraphPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80025f4:	e9d0 4a54 	ldrd	r4, sl, [r0, #336]	; 0x150
{
 80025f8:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80025fa:	68a0      	ldr	r0, [r4, #8]
 80025fc:	6803      	ldr	r3, [r0, #0]
 80025fe:	6a1b      	ldr	r3, [r3, #32]
 8002600:	4798      	blx	r3
 8002602:	f641 4357 	movw	r3, #7255	; 0x1c57
 8002606:	4298      	cmp	r0, r3
 8002608:	d805      	bhi.n	8002616 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x26>
 800260a:	4b42      	ldr	r3, [pc, #264]	; (8002714 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x124>)
 800260c:	4a42      	ldr	r2, [pc, #264]	; (8002718 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x128>)
 800260e:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002610:	4842      	ldr	r0, [pc, #264]	; (800271c <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x12c>)
 8002612:	f01f fb47 	bl	8021ca4 <__assert_func>
 8002616:	6860      	ldr	r0, [r4, #4]
 8002618:	6803      	ldr	r3, [r0, #0]
 800261a:	6a1b      	ldr	r3, [r3, #32]
 800261c:	4798      	blx	r3
 800261e:	280f      	cmp	r0, #15
 8002620:	d803      	bhi.n	800262a <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x3a>
 8002622:	4b3f      	ldr	r3, [pc, #252]	; (8002720 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x130>)
 8002624:	4a3c      	ldr	r2, [pc, #240]	; (8002718 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x128>)
 8002626:	21a4      	movs	r1, #164	; 0xa4
 8002628:	e7f2      	b.n	8002610 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800262a:	68e0      	ldr	r0, [r4, #12]
 800262c:	6803      	ldr	r3, [r0, #0]
 800262e:	6a1b      	ldr	r3, [r3, #32]
 8002630:	4798      	blx	r3
 8002632:	2837      	cmp	r0, #55	; 0x37
 8002634:	d803      	bhi.n	800263e <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x4e>
 8002636:	4b3b      	ldr	r3, [pc, #236]	; (8002724 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x134>)
 8002638:	4a37      	ldr	r2, [pc, #220]	; (8002718 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x128>)
 800263a:	21a5      	movs	r1, #165	; 0xa5
 800263c:	e7e8      	b.n	8002610 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x20>
    if (*currentTrans)
 800263e:	f8df 90e8 	ldr.w	r9, [pc, #232]	; 8002728 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x138>
    Application::getInstance()->clearAllTimerWidgets();
 8002642:	f00f ffe5 	bl	8012610 <_ZN8touchgfx11Application11getInstanceEv>
 8002646:	f00f ffe9 	bl	801261c <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 800264a:	f8d9 0000 	ldr.w	r0, [r9]
 800264e:	b110      	cbz	r0, 8002656 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8002650:	6803      	ldr	r3, [r0, #0]
 8002652:	68db      	ldr	r3, [r3, #12]
 8002654:	4798      	blx	r3
    if (*currentTrans)
 8002656:	f8d9 0000 	ldr.w	r0, [r9]
 800265a:	b110      	cbz	r0, 8002662 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 800265c:	6803      	ldr	r3, [r0, #0]
 800265e:	681b      	ldr	r3, [r3, #0]
 8002660:	4798      	blx	r3
    if (*currentScreen)
 8002662:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 800272c <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x13c>
 8002666:	f8d8 0000 	ldr.w	r0, [r8]
 800266a:	b110      	cbz	r0, 8002672 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 800266c:	6803      	ldr	r3, [r0, #0]
 800266e:	695b      	ldr	r3, [r3, #20]
 8002670:	4798      	blx	r3
    if (*currentPresenter)
 8002672:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8002676:	b110      	cbz	r0, 800267e <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8002678:	6803      	ldr	r3, [r0, #0]
 800267a:	685b      	ldr	r3, [r3, #4]
 800267c:	4798      	blx	r3
    if (*currentScreen)
 800267e:	f8d8 0000 	ldr.w	r0, [r8]
 8002682:	b110      	cbz	r0, 800268a <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8002684:	6803      	ldr	r3, [r0, #0]
 8002686:	681b      	ldr	r3, [r3, #0]
 8002688:	4798      	blx	r3
    if (*currentPresenter)
 800268a:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 800268e:	b110      	cbz	r0, 8002696 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8002690:	6803      	ldr	r3, [r0, #0]
 8002692:	689b      	ldr	r3, [r3, #8]
 8002694:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002696:	68e0      	ldr	r0, [r4, #12]
 8002698:	6803      	ldr	r3, [r0, #0]
 800269a:	2100      	movs	r1, #0
 800269c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800269e:	4798      	blx	r3
 80026a0:	2114      	movs	r1, #20
 80026a2:	4605      	mov	r5, r0
 80026a4:	f7ff ff72 	bl	800258c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80026a8:	68a0      	ldr	r0, [r4, #8]
 80026aa:	6803      	ldr	r3, [r0, #0]
 80026ac:	2100      	movs	r1, #0
 80026ae:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80026b0:	4798      	blx	r3
 80026b2:	4606      	mov	r6, r0
 80026b4:	f004 fde0 	bl	8007278 <_ZN15ScreenGraphViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80026b8:	6860      	ldr	r0, [r4, #4]
 80026ba:	6803      	ldr	r3, [r0, #0]
 80026bc:	2100      	movs	r1, #0
 80026be:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80026c0:	4798      	blx	r3
 80026c2:	4631      	mov	r1, r6
 80026c4:	4604      	mov	r4, r0
 80026c6:	f004 fca3 	bl	8007010 <_ZN20ScreenGraphPresenterC1ER15ScreenGraphView>
    *currentTrans = newTransition;
 80026ca:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80026ce:	f8c7 4138 	str.w	r4, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 80026d2:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80026d6:	b1dc      	cbz	r4, 8002710 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x120>
 80026d8:	1d23      	adds	r3, r4, #4
 80026da:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80026de:	6833      	ldr	r3, [r6, #0]
 80026e0:	f8c4 a008 	str.w	sl, [r4, #8]
 80026e4:	4630      	mov	r0, r6
 80026e6:	68db      	ldr	r3, [r3, #12]
 80026e8:	63f4      	str	r4, [r6, #60]	; 0x3c
 80026ea:	4798      	blx	r3
    newPresenter->activate();
 80026ec:	6823      	ldr	r3, [r4, #0]
 80026ee:	4620      	mov	r0, r4
 80026f0:	681b      	ldr	r3, [r3, #0]
 80026f2:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80026f4:	4629      	mov	r1, r5
 80026f6:	4630      	mov	r0, r6
 80026f8:	f011 fc38 	bl	8013f6c <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80026fc:	682b      	ldr	r3, [r5, #0]
 80026fe:	4628      	mov	r0, r5
 8002700:	691b      	ldr	r3, [r3, #16]
 8002702:	4798      	blx	r3
    newTransition->invalidate();
 8002704:	682b      	ldr	r3, [r5, #0]
 8002706:	4628      	mov	r0, r5
 8002708:	695b      	ldr	r3, [r3, #20]
}
 800270a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800270e:	4718      	bx	r3
    model->bind(newPresenter);
 8002710:	4623      	mov	r3, r4
 8002712:	e7e2      	b.n	80026da <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0xea>
 8002714:	08023628 	.word	0x08023628
 8002718:	08023947 	.word	0x08023947
 800271c:	080237ba 	.word	0x080237ba
 8002720:	08023801 	.word	0x08023801
 8002724:	080238a4 	.word	0x080238a4
 8002728:	20017994 	.word	0x20017994
 800272c:	20017990 	.word	0x20017990

08002730 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv>:
{
 8002730:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Screen1View, Screen1Presenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8002734:	e9d0 4a54 	ldrd	r4, sl, [r0, #336]	; 0x150
{
 8002738:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800273a:	68a0      	ldr	r0, [r4, #8]
 800273c:	6803      	ldr	r3, [r0, #0]
 800273e:	6a1b      	ldr	r3, [r3, #32]
 8002740:	4798      	blx	r3
 8002742:	f5b0 7f7e 	cmp.w	r0, #1016	; 0x3f8
 8002746:	d205      	bcs.n	8002754 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x24>
 8002748:	4b42      	ldr	r3, [pc, #264]	; (8002854 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x124>)
 800274a:	4a43      	ldr	r2, [pc, #268]	; (8002858 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x128>)
 800274c:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800274e:	4843      	ldr	r0, [pc, #268]	; (800285c <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x12c>)
 8002750:	f01f faa8 	bl	8021ca4 <__assert_func>
 8002754:	6860      	ldr	r0, [r4, #4]
 8002756:	6803      	ldr	r3, [r0, #0]
 8002758:	6a1b      	ldr	r3, [r3, #32]
 800275a:	4798      	blx	r3
 800275c:	280f      	cmp	r0, #15
 800275e:	d803      	bhi.n	8002768 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x38>
 8002760:	4b3f      	ldr	r3, [pc, #252]	; (8002860 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x130>)
 8002762:	4a3d      	ldr	r2, [pc, #244]	; (8002858 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x128>)
 8002764:	21a4      	movs	r1, #164	; 0xa4
 8002766:	e7f2      	b.n	800274e <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8002768:	68e0      	ldr	r0, [r4, #12]
 800276a:	6803      	ldr	r3, [r0, #0]
 800276c:	6a1b      	ldr	r3, [r3, #32]
 800276e:	4798      	blx	r3
 8002770:	2837      	cmp	r0, #55	; 0x37
 8002772:	d803      	bhi.n	800277c <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x4c>
 8002774:	4b3b      	ldr	r3, [pc, #236]	; (8002864 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x134>)
 8002776:	4a38      	ldr	r2, [pc, #224]	; (8002858 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x128>)
 8002778:	21a5      	movs	r1, #165	; 0xa5
 800277a:	e7e8      	b.n	800274e <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x1e>
    if (*currentTrans)
 800277c:	f8df 90e8 	ldr.w	r9, [pc, #232]	; 8002868 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x138>
    Application::getInstance()->clearAllTimerWidgets();
 8002780:	f00f ff46 	bl	8012610 <_ZN8touchgfx11Application11getInstanceEv>
 8002784:	f00f ff4a 	bl	801261c <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8002788:	f8d9 0000 	ldr.w	r0, [r9]
 800278c:	b110      	cbz	r0, 8002794 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x64>
        (*currentTrans)->tearDown();
 800278e:	6803      	ldr	r3, [r0, #0]
 8002790:	68db      	ldr	r3, [r3, #12]
 8002792:	4798      	blx	r3
    if (*currentTrans)
 8002794:	f8d9 0000 	ldr.w	r0, [r9]
 8002798:	b110      	cbz	r0, 80027a0 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x70>
        (*currentTrans)->~Transition();
 800279a:	6803      	ldr	r3, [r0, #0]
 800279c:	681b      	ldr	r3, [r3, #0]
 800279e:	4798      	blx	r3
    if (*currentScreen)
 80027a0:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 800286c <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x13c>
 80027a4:	f8d8 0000 	ldr.w	r0, [r8]
 80027a8:	b110      	cbz	r0, 80027b0 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 80027aa:	6803      	ldr	r3, [r0, #0]
 80027ac:	695b      	ldr	r3, [r3, #20]
 80027ae:	4798      	blx	r3
    if (*currentPresenter)
 80027b0:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 80027b4:	b110      	cbz	r0, 80027bc <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x8c>
        (*currentPresenter)->deactivate();
 80027b6:	6803      	ldr	r3, [r0, #0]
 80027b8:	685b      	ldr	r3, [r3, #4]
 80027ba:	4798      	blx	r3
    if (*currentScreen)
 80027bc:	f8d8 0000 	ldr.w	r0, [r8]
 80027c0:	b110      	cbz	r0, 80027c8 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x98>
        (*currentScreen)->~Screen();
 80027c2:	6803      	ldr	r3, [r0, #0]
 80027c4:	681b      	ldr	r3, [r3, #0]
 80027c6:	4798      	blx	r3
    if (*currentPresenter)
 80027c8:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 80027cc:	b110      	cbz	r0, 80027d4 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 80027ce:	6803      	ldr	r3, [r0, #0]
 80027d0:	689b      	ldr	r3, [r3, #8]
 80027d2:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80027d4:	68e0      	ldr	r0, [r4, #12]
 80027d6:	6803      	ldr	r3, [r0, #0]
 80027d8:	2100      	movs	r1, #0
 80027da:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80027dc:	4798      	blx	r3
 80027de:	2114      	movs	r1, #20
 80027e0:	4605      	mov	r5, r0
 80027e2:	f7ff fed3 	bl	800258c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80027e6:	68a0      	ldr	r0, [r4, #8]
 80027e8:	6803      	ldr	r3, [r0, #0]
 80027ea:	2100      	movs	r1, #0
 80027ec:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80027ee:	4798      	blx	r3
 80027f0:	4606      	mov	r6, r0
 80027f2:	f004 fbcb 	bl	8006f8c <_ZN11Screen1ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80027f6:	6860      	ldr	r0, [r4, #4]
 80027f8:	6803      	ldr	r3, [r0, #0]
 80027fa:	2100      	movs	r1, #0
 80027fc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80027fe:	4798      	blx	r3
 8002800:	4631      	mov	r1, r6
 8002802:	4604      	mov	r4, r0
 8002804:	f004 fb4e 	bl	8006ea4 <_ZN16Screen1PresenterC1ER11Screen1View>
    *currentTrans = newTransition;
 8002808:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800280c:	f8c7 4138 	str.w	r4, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 8002810:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8002814:	b1dc      	cbz	r4, 800284e <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x11e>
 8002816:	1d23      	adds	r3, r4, #4
 8002818:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800281c:	6833      	ldr	r3, [r6, #0]
 800281e:	f8c4 a008 	str.w	sl, [r4, #8]
 8002822:	4630      	mov	r0, r6
 8002824:	68db      	ldr	r3, [r3, #12]
 8002826:	63f4      	str	r4, [r6, #60]	; 0x3c
 8002828:	4798      	blx	r3
    newPresenter->activate();
 800282a:	6823      	ldr	r3, [r4, #0]
 800282c:	4620      	mov	r0, r4
 800282e:	681b      	ldr	r3, [r3, #0]
 8002830:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8002832:	4629      	mov	r1, r5
 8002834:	4630      	mov	r0, r6
 8002836:	f011 fb99 	bl	8013f6c <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800283a:	682b      	ldr	r3, [r5, #0]
 800283c:	4628      	mov	r0, r5
 800283e:	691b      	ldr	r3, [r3, #16]
 8002840:	4798      	blx	r3
    newTransition->invalidate();
 8002842:	682b      	ldr	r3, [r5, #0]
 8002844:	4628      	mov	r0, r5
 8002846:	695b      	ldr	r3, [r3, #20]
}
 8002848:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800284c:	4718      	bx	r3
    model->bind(newPresenter);
 800284e:	4623      	mov	r3, r4
 8002850:	e7e2      	b.n	8002818 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0xe8>
 8002852:	bf00      	nop
 8002854:	08023628 	.word	0x08023628
 8002858:	08023a65 	.word	0x08023a65
 800285c:	080237ba 	.word	0x080237ba
 8002860:	08023801 	.word	0x08023801
 8002864:	080238a4 	.word	0x080238a4
 8002868:	20017994 	.word	0x20017994
 800286c:	20017990 	.word	0x20017990

08002870 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 8002870:	6a00      	ldr	r0, [r0, #32]
 8002872:	4770      	bx	lr

08002874 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 8002874:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8002876:	4770      	bx	lr

08002878 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 8002878:	4770      	bx	lr

0800287a <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 800287a:	888b      	ldrh	r3, [r1, #4]
 800287c:	6980      	ldr	r0, [r0, #24]
 800287e:	680a      	ldr	r2, [r1, #0]
 8002880:	0adb      	lsrs	r3, r3, #11
 8002882:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 8002886:	4410      	add	r0, r2
 8002888:	4770      	bx	lr

0800288a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 800288a:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 800288c:	b1c2      	cbz	r2, 80028c0 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 800288e:	7b13      	ldrb	r3, [r2, #12]
 8002890:	b1b3      	cbz	r3, 80028c0 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 8002892:	7b54      	ldrb	r4, [r2, #13]
 8002894:	7ad2      	ldrb	r2, [r2, #11]
 8002896:	0224      	lsls	r4, r4, #8
 8002898:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 800289c:	4314      	orrs	r4, r2
 800289e:	69c2      	ldr	r2, [r0, #28]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 80028a0:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 80028a2:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 80028a6:	8813      	ldrh	r3, [r2, #0]
 80028a8:	428b      	cmp	r3, r1
 80028aa:	d102      	bne.n	80028b2 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 80028ac:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 80028b0:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 80028b2:	d805      	bhi.n	80028c0 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 80028b4:	3801      	subs	r0, #1
 80028b6:	b280      	uxth	r0, r0
 80028b8:	3204      	adds	r2, #4
 80028ba:	2800      	cmp	r0, #0
 80028bc:	d1f3      	bne.n	80028a6 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 80028be:	e7f7      	b.n	80028b0 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 80028c0:	2000      	movs	r0, #0
 80028c2:	e7f5      	b.n	80028b0 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

080028c4 <_ZN8touchgfx13GeneratedFontD0Ev>:
 80028c4:	b510      	push	{r4, lr}
 80028c6:	2128      	movs	r1, #40	; 0x28
 80028c8:	4604      	mov	r4, r0
 80028ca:	f01f f9bd 	bl	8021c48 <_ZdlPvj>
 80028ce:	4620      	mov	r0, r4
 80028d0:	bd10      	pop	{r4, pc}
	...

080028d4 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* list, uint16_t size, uint16_t height, uint8_t pixBelowBase, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 80028d4:	b530      	push	{r4, r5, lr}
 80028d6:	b089      	sub	sp, #36	; 0x24
 80028d8:	4604      	mov	r4, r0
      arabicTable(formsTable)
 80028da:	f8bd 5050 	ldrh.w	r5, [sp, #80]	; 0x50
 80028de:	9506      	str	r5, [sp, #24]
 80028e0:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 80028e4:	9505      	str	r5, [sp, #20]
 80028e6:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 80028ea:	9504      	str	r5, [sp, #16]
 80028ec:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 80028f0:	9503      	str	r5, [sp, #12]
 80028f2:	f89d 5038 	ldrb.w	r5, [sp, #56]	; 0x38
 80028f6:	9502      	str	r5, [sp, #8]
 80028f8:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 80028fc:	9501      	str	r5, [sp, #4]
 80028fe:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 8002902:	9500      	str	r5, [sp, #0]
 8002904:	f010 fec8 	bl	8013698 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>
 8002908:	4b06      	ldr	r3, [pc, #24]	; (8002924 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x50>)
 800290a:	6023      	str	r3, [r4, #0]
 800290c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800290e:	61a3      	str	r3, [r4, #24]
 8002910:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8002912:	61e3      	str	r3, [r4, #28]
 8002914:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8002916:	6223      	str	r3, [r4, #32]
 8002918:	9b16      	ldr	r3, [sp, #88]	; 0x58
 800291a:	6263      	str	r3, [r4, #36]	; 0x24
}
 800291c:	4620      	mov	r0, r4
 800291e:	b009      	add	sp, #36	; 0x24
 8002920:	bd30      	pop	{r4, r5, pc}
 8002922:	bf00      	nop
 8002924:	08023c98 	.word	0x08023c98

08002928 <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
 8002928:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800292a:	4770      	bx	lr

0800292c <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 800292c:	4770      	bx	lr

0800292e <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 800292e:	4770      	bx	lr

08002930 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 8002930:	4770      	bx	lr

08002932 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 8002932:	4770      	bx	lr

08002934 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 8002934:	4770      	bx	lr

08002936 <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
 8002936:	b530      	push	{r4, r5, lr}
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
 8002938:	6803      	ldr	r3, [r0, #0]
        rect.width = width;
 800293a:	8101      	strh	r1, [r0, #8]
    virtual void setWidth(int16_t width)
 800293c:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 800293e:	466d      	mov	r5, sp
 8002940:	4601      	mov	r1, r0
 8002942:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setWidth(int16_t width)
 8002946:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 8002948:	4628      	mov	r0, r5
 800294a:	4798      	blx	r3
 800294c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002950:	343c      	adds	r4, #60	; 0x3c
 8002952:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 8002956:	b005      	add	sp, #20
 8002958:	bd30      	pop	{r4, r5, pc}

0800295a <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
 800295a:	b530      	push	{r4, r5, lr}
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
 800295c:	6803      	ldr	r3, [r0, #0]
        rect.height = height;
 800295e:	8141      	strh	r1, [r0, #10]
    virtual void setHeight(int16_t height)
 8002960:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 8002962:	466d      	mov	r5, sp
 8002964:	4601      	mov	r1, r0
 8002966:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setHeight(int16_t height)
 800296a:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 800296c:	4628      	mov	r0, r5
 800296e:	4798      	blx	r3
 8002970:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002974:	343c      	adds	r4, #60	; 0x3c
 8002976:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 800297a:	b005      	add	sp, #20
 800297c:	bd30      	pop	{r4, r5, pc}

0800297e <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 800297e:	2200      	movs	r2, #0
 8002980:	8002      	strh	r2, [r0, #0]
 8002982:	8042      	strh	r2, [r0, #2]
 8002984:	8082      	strh	r2, [r0, #4]
 8002986:	80c2      	strh	r2, [r0, #6]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8002988:	4770      	bx	lr

0800298a <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 800298a:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
    }
 800298e:	4770      	bx	lr

08002990 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
     * @param  x         The x coordinate of the TextArea.
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002990:	b570      	push	{r4, r5, r6, lr}
    {
        setX(x);
 8002992:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002994:	4604      	mov	r4, r0
        setX(x);
 8002996:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002998:	4615      	mov	r5, r2
        setX(x);
 800299a:	4798      	blx	r3
        setBaselineY(baselineY);
 800299c:	6823      	ldr	r3, [r4, #0]
 800299e:	4629      	mov	r1, r5
 80029a0:	4620      	mov	r0, r4
 80029a2:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    }
 80029a4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
 80029a8:	4718      	bx	r3

080029aa <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
 80029aa:	2000      	movs	r0, #0
 80029ac:	4770      	bx	lr

080029ae <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
 80029ae:	6c80      	ldr	r0, [r0, #72]	; 0x48
 80029b0:	4770      	bx	lr

080029b2 <_ZN15Screen1ViewBaseD1Ev>:

class Screen1ViewBase : public touchgfx::View<Screen1Presenter>
{
public:
    Screen1ViewBase();
    virtual ~Screen1ViewBase() {}
 80029b2:	4770      	bx	lr

080029b4 <_ZN15Screen1ViewBase17ButtonDownClickedEv>:
     * Virtual Action Handlers
     */
    virtual void ButtonDownClicked()
    {
        // Override and implement this function in Screen1
    }
 80029b4:	4770      	bx	lr

080029b6 <_ZN15Screen1ViewBase15ButtonUpClickedEv>:

    virtual void ButtonUpClicked()
    {
        // Override and implement this function in Screen1
    }
 80029b6:	4770      	bx	lr

080029b8 <_ZN15Screen1ViewBase18ButtonStartClickedEv>:

    virtual void ButtonStartClicked()
    {
        // Override and implement this function in Screen1
    }
 80029b8:	4770      	bx	lr

080029ba <_ZN15Screen1ViewBase11setupScreenEv>:
}

void Screen1ViewBase::setupScreen()
{

}
 80029ba:	4770      	bx	lr

080029bc <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>:
 * @tparam T Generic type parameter. Typically a AbstractButtonContainer subclass.
 *
 * @see AbstractButtonContainer, BoxWithBorder
 */
template <class T>
class BoxWithBorderButtonStyle : public T
 80029bc:	4770      	bx	lr

080029be <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>:
     *
     * @see setPressed
     */
    bool getPressed()
    {
        return pressed;
 80029be:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
    colortype borderDown;    ///< The border down

    /** @copydoc AbstractButtonContainer::handlePressedUpdated() */
    virtual void handlePressedUpdated()
    {
        borderBox.setColor(T::getPressed() ? down : up);
 80029c2:	b14b      	cbz	r3, 80029d8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x1a>
 80029c4:	f100 026c 	add.w	r2, r0, #108	; 0x6c
 80029c8:	6812      	ldr	r2, [r2, #0]
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 80029ca:	65c2      	str	r2, [r0, #92]	; 0x5c
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
 80029cc:	b13b      	cbz	r3, 80029de <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x20>
 80029ce:	f100 0374 	add.w	r3, r0, #116	; 0x74
 80029d2:	681b      	ldr	r3, [r3, #0]
     *
     * @see setColor, getBorderColor, Color::getColorFromRGB
     */
    void setBorderColor(colortype colorBorder)
    {
        borderColor = colorBorder;
 80029d4:	6603      	str	r3, [r0, #96]	; 0x60
        T::handlePressedUpdated();
    }
 80029d6:	4770      	bx	lr
        borderBox.setColor(T::getPressed() ? down : up);
 80029d8:	f100 0268 	add.w	r2, r0, #104	; 0x68
 80029dc:	e7f4      	b.n	80029c8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0xa>
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
 80029de:	f100 0370 	add.w	r3, r0, #112	; 0x70
 80029e2:	e7f6      	b.n	80029d2 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x14>

080029e4 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80029e4:	4770      	bx	lr

080029e6 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
 80029e6:	4770      	bx	lr

080029e8 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEED1Ev>:
 * The position of the icon can be adjusted with setIconXY.
 *
 * @see AbstractButtonContainer
 */
template <class T>
class IconButtonStyle : public T
 80029e8:	4770      	bx	lr

080029ea <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 80029ea:	4770      	bx	lr

080029ec <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80029ec:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80029ee:	68c2      	ldr	r2, [r0, #12]
 80029f0:	6844      	ldr	r4, [r0, #4]
 80029f2:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80029f4:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80029f6:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80029fa:	07d2      	lsls	r2, r2, #31
 80029fc:	bf48      	it	mi
 80029fe:	5962      	ldrmi	r2, [r4, r5]
 8002a00:	689b      	ldr	r3, [r3, #8]
    }
 8002a02:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002a04:	bf48      	it	mi
 8002a06:	58d3      	ldrmi	r3, [r2, r3]
 8002a08:	4718      	bx	r3

08002a0a <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8002a0a:	6843      	ldr	r3, [r0, #4]
 8002a0c:	b12b      	cbz	r3, 8002a1a <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x10>
 8002a0e:	6883      	ldr	r3, [r0, #8]
 8002a10:	b92b      	cbnz	r3, 8002a1e <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
 8002a12:	68c0      	ldr	r0, [r0, #12]
 8002a14:	f000 0001 	and.w	r0, r0, #1
 8002a18:	4770      	bx	lr
 8002a1a:	4618      	mov	r0, r3
 8002a1c:	4770      	bx	lr
 8002a1e:	2001      	movs	r0, #1
    }
 8002a20:	4770      	bx	lr

08002a22 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8002a22:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002a24:	68c2      	ldr	r2, [r0, #12]
 8002a26:	6844      	ldr	r4, [r0, #4]
 8002a28:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002a2a:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8002a2c:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002a30:	07d2      	lsls	r2, r2, #31
 8002a32:	bf48      	it	mi
 8002a34:	5962      	ldrmi	r2, [r4, r5]
 8002a36:	689b      	ldr	r3, [r3, #8]
    }
 8002a38:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002a3a:	bf48      	it	mi
 8002a3c:	58d3      	ldrmi	r3, [r2, r3]
 8002a3e:	4718      	bx	r3

08002a40 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8002a40:	6843      	ldr	r3, [r0, #4]
 8002a42:	b12b      	cbz	r3, 8002a50 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8002a44:	6883      	ldr	r3, [r0, #8]
 8002a46:	b92b      	cbnz	r3, 8002a54 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8002a48:	68c0      	ldr	r0, [r0, #12]
 8002a4a:	f000 0001 	and.w	r0, r0, #1
 8002a4e:	4770      	bx	lr
 8002a50:	4618      	mov	r0, r3
 8002a52:	4770      	bx	lr
 8002a54:	2001      	movs	r0, #1
    }
 8002a56:	4770      	bx	lr

08002a58 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE18handleAlphaUpdatedEv>:
    }

    /** @copydoc Image::getAlpha() */
    uint8_t getAlpha() const
    {
        return alpha;
 8002a58:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
     *
     * @note The user code must call invalidate() in order to update the display.
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8002a5c:	f880 30a4 	strb.w	r3, [r0, #164]	; 0xa4
    /**
     * @copydoc Image::setAlpha
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8002a60:	f880 305a 	strb.w	r3, [r0, #90]	; 0x5a
    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        iconImage.setAlpha(T::getAlpha());
        T::handleAlphaUpdated();
    }
 8002a64:	4770      	bx	lr

08002a66 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE18handleAlphaUpdatedEv>:
 8002a66:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
 8002a6a:	f880 305a 	strb.w	r3, [r0, #90]	; 0x5a
    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        borderBox.setAlpha(T::getAlpha());
        T::handleAlphaUpdated();
    }
 8002a6e:	4770      	bx	lr

08002a70 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>:
    virtual void handlePressedUpdated()
 8002a70:	b510      	push	{r4, lr}
 8002a72:	4604      	mov	r4, r0
        iconImage.setBitmap(T::getPressed() ? iconPressed : iconReleased);
 8002a74:	307c      	adds	r0, #124	; 0x7c
 8002a76:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 8002a7a:	b13b      	cbz	r3, 8002a8c <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv+0x1c>
 8002a7c:	f104 017a 	add.w	r1, r4, #122	; 0x7a
 8002a80:	f00d f918 	bl	800fcb4 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        T::handlePressedUpdated();
 8002a84:	4620      	mov	r0, r4
 8002a86:	f7ff ff9a 	bl	80029be <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
    }
 8002a8a:	bd10      	pop	{r4, pc}
        iconImage.setBitmap(T::getPressed() ? iconPressed : iconReleased);
 8002a8c:	f104 0178 	add.w	r1, r4, #120	; 0x78
 8002a90:	e7f6      	b.n	8002a80 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv+0x10>

08002a92 <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 8002a92:	b510      	push	{r4, lr}
 8002a94:	214c      	movs	r1, #76	; 0x4c
 8002a96:	4604      	mov	r4, r0
 8002a98:	f01f f8d6 	bl	8021c48 <_ZdlPvj>
 8002a9c:	4620      	mov	r0, r4
 8002a9e:	bd10      	pop	{r4, pc}

08002aa0 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED0Ev>:
class BoxWithBorderButtonStyle : public T
 8002aa0:	b510      	push	{r4, lr}
 8002aa2:	2178      	movs	r1, #120	; 0x78
 8002aa4:	4604      	mov	r4, r0
 8002aa6:	f01f f8cf 	bl	8021c48 <_ZdlPvj>
 8002aaa:	4620      	mov	r0, r4
 8002aac:	bd10      	pop	{r4, pc}

08002aae <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEED0Ev>:
class IconButtonStyle : public T
 8002aae:	b510      	push	{r4, lr}
 8002ab0:	21a8      	movs	r1, #168	; 0xa8
 8002ab2:	4604      	mov	r4, r0
 8002ab4:	f01f f8c8 	bl	8021c48 <_ZdlPvj>
 8002ab8:	4620      	mov	r0, r4
 8002aba:	bd10      	pop	{r4, pc}

08002abc <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002abc:	b510      	push	{r4, lr}
 8002abe:	2110      	movs	r1, #16
 8002ac0:	4604      	mov	r4, r0
 8002ac2:	f01f f8c1 	bl	8021c48 <_ZdlPvj>
 8002ac6:	4620      	mov	r0, r4
 8002ac8:	bd10      	pop	{r4, pc}

08002aca <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
 8002aca:	b510      	push	{r4, lr}
 8002acc:	2110      	movs	r1, #16
 8002ace:	4604      	mov	r4, r0
 8002ad0:	f01f f8ba 	bl	8021c48 <_ZdlPvj>
 8002ad4:	4620      	mov	r0, r4
 8002ad6:	bd10      	pop	{r4, pc}

08002ad8 <_ZN15Screen1ViewBaseD0Ev>:
    virtual ~Screen1ViewBase() {}
 8002ad8:	b510      	push	{r4, lr}
 8002ada:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
 8002ade:	4604      	mov	r4, r0
 8002ae0:	f01f f8b2 	bl	8021c48 <_ZdlPvj>
 8002ae4:	4620      	mov	r0, r4
 8002ae6:	bd10      	pop	{r4, pc}

08002ae8 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv>:
    /**
     * Executes the previously set action.
     *
     * @see setAction
     */
    virtual void executeAction()
 8002ae8:	b510      	push	{r4, lr}
 8002aea:	4604      	mov	r4, r0
    {
        if (action && action->isValid())
 8002aec:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8002aee:	b150      	cbz	r0, 8002b06 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x1e>
 8002af0:	6803      	ldr	r3, [r0, #0]
 8002af2:	68db      	ldr	r3, [r3, #12]
 8002af4:	4798      	blx	r3
 8002af6:	b130      	cbz	r0, 8002b06 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x1e>
        {
            action->execute(*this);
 8002af8:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8002afa:	6803      	ldr	r3, [r0, #0]
 8002afc:	4621      	mov	r1, r4
 8002afe:	689b      	ldr	r3, [r3, #8]
        }
    }
 8002b00:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            action->execute(*this);
 8002b04:	4718      	bx	r3
    }
 8002b06:	bd10      	pop	{r4, pc}

08002b08 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:
    }
}

void Screen1ViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &ButtonDown)
 8002b08:	f100 02c4 	add.w	r2, r0, #196	; 0xc4
 8002b0c:	4291      	cmp	r1, r2
 8002b0e:	d102      	bne.n	8002b16 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xe>
    {
        //ButtonUpInteraction
        //When ButtonDown clicked call virtual function
        //Call ButtonDownClicked
        ButtonDownClicked();
 8002b10:	6803      	ldr	r3, [r0, #0]
 8002b12:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    else if (&src == &ButtonUp)
    {
        //ButtownDownInteraction
        //When ButtonUp clicked call virtual function
        //Call ButtonUpClicked
        ButtonUpClicked();
 8002b14:	4718      	bx	r3
    else if (&src == &ButtonUp)
 8002b16:	f500 72b6 	add.w	r2, r0, #364	; 0x16c
 8002b1a:	4291      	cmp	r1, r2
 8002b1c:	d102      	bne.n	8002b24 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x1c>
        ButtonUpClicked();
 8002b1e:	6803      	ldr	r3, [r0, #0]
 8002b20:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002b22:	e7f7      	b.n	8002b14 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xc>
    }
}
 8002b24:	4770      	bx	lr

08002b26 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE>:
     *
     * @return The click type of this event.
     */
    ClickEventType getType() const
    {
        return clickEventType;
 8002b26:	790b      	ldrb	r3, [r1, #4]
     *
     * @param  event The click event.
     *
     * @see setAction, setPressed, getPressed
     */
    virtual void handleClickEvent(const ClickEvent& event)
 8002b28:	b570      	push	{r4, r5, r6, lr}
        return pressed;
 8002b2a:	f890 602c 	ldrb.w	r6, [r0, #44]	; 0x2c
 8002b2e:	4604      	mov	r4, r0
 8002b30:	460d      	mov	r5, r1
    {
        bool wasPressed = getPressed();
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 8002b32:	b99b      	cbnz	r3, 8002b5c <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x36>
 8002b34:	b98e      	cbnz	r6, 8002b5a <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x34>
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
 8002b36:	fab3 f383 	clz	r3, r3
 8002b3a:	095b      	lsrs	r3, r3, #5
 8002b3c:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
        handlePressedUpdated();
 8002b40:	6823      	ldr	r3, [r4, #0]
 8002b42:	4620      	mov	r0, r4
 8002b44:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8002b48:	4798      	blx	r3
        {
            setPressed(newPressedValue);
            invalidate();
 8002b4a:	6823      	ldr	r3, [r4, #0]
 8002b4c:	4620      	mov	r0, r4
 8002b4e:	695b      	ldr	r3, [r3, #20]
 8002b50:	4798      	blx	r3
        }
        if (wasPressed && (event.getType() == ClickEvent::RELEASED))
 8002b52:	b116      	cbz	r6, 8002b5a <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x34>
 8002b54:	792b      	ldrb	r3, [r5, #4]
 8002b56:	2b01      	cmp	r3, #1
 8002b58:	d003      	beq.n	8002b62 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x3c>
        {
            executeAction();
        }
    }
 8002b5a:	bd70      	pop	{r4, r5, r6, pc}
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 8002b5c:	2e00      	cmp	r6, #0
 8002b5e:	d0fc      	beq.n	8002b5a <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x34>
 8002b60:	e7e9      	b.n	8002b36 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x10>
            executeAction();
 8002b62:	6823      	ldr	r3, [r4, #0]
 8002b64:	4620      	mov	r0, r4
 8002b66:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
    }
 8002b6a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            executeAction();
 8002b6e:	4718      	bx	r3

08002b70 <_ZN8touchgfx8TextArea12setBaselineYEs>:
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 8002b70:	6803      	ldr	r3, [r0, #0]
    virtual void setBaselineY(int16_t baselineY)
 8002b72:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 8002b74:	6b5e      	ldr	r6, [r3, #52]	; 0x34
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002b76:	4b12      	ldr	r3, [pc, #72]	; (8002bc0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 8002b78:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
 8002b7a:	4604      	mov	r4, r0
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 8002b7c:	b28d      	uxth	r5, r1
 8002b7e:	b92b      	cbnz	r3, 8002b8c <_ZN8touchgfx8TextArea12setBaselineYEs+0x1c>
 8002b80:	4b10      	ldr	r3, [pc, #64]	; (8002bc4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 8002b82:	4a11      	ldr	r2, [pc, #68]	; (8002bc8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8002b84:	216c      	movs	r1, #108	; 0x6c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002b86:	4811      	ldr	r0, [pc, #68]	; (8002bcc <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 8002b88:	f01f f88c 	bl	8021ca4 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8002b8c:	4910      	ldr	r1, [pc, #64]	; (8002bd0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 8002b8e:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002b90:	8809      	ldrh	r1, [r1, #0]
 8002b92:	4291      	cmp	r1, r2
 8002b94:	d803      	bhi.n	8002b9e <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 8002b96:	4b0f      	ldr	r3, [pc, #60]	; (8002bd4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 8002b98:	4a0b      	ldr	r2, [pc, #44]	; (8002bc8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8002b9a:	216d      	movs	r1, #109	; 0x6d
 8002b9c:	e7f3      	b.n	8002b86 <_ZN8touchgfx8TextArea12setBaselineYEs+0x16>
        return fonts[typedTexts[typedTextId].fontIdx];
 8002b9e:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 8002ba2:	4b0d      	ldr	r3, [pc, #52]	; (8002bd8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 8002ba4:	681b      	ldr	r3, [r3, #0]
 8002ba6:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8002baa:	6803      	ldr	r3, [r0, #0]
 8002bac:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002bae:	4798      	blx	r3
 8002bb0:	1a28      	subs	r0, r5, r0
 8002bb2:	b201      	sxth	r1, r0
 8002bb4:	4633      	mov	r3, r6
 8002bb6:	4620      	mov	r0, r4
    }
 8002bb8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 8002bbc:	4718      	bx	r3
 8002bbe:	bf00      	nop
 8002bc0:	200179a4 	.word	0x200179a4
 8002bc4:	08023ce8 	.word	0x08023ce8
 8002bc8:	08023d2a 	.word	0x08023d2a
 8002bcc:	08023d65 	.word	0x08023d65
 8002bd0:	200179a8 	.word	0x200179a8
 8002bd4:	08023dac 	.word	0x08023dac
 8002bd8:	200179ac 	.word	0x200179ac

08002bdc <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
    if (&src == &buttonStart)
 8002bdc:	f500 732a 	add.w	r3, r0, #680	; 0x2a8
 8002be0:	428b      	cmp	r3, r1
{
 8002be2:	b510      	push	{r4, lr}
 8002be4:	4604      	mov	r4, r0
    if (&src == &buttonStart)
 8002be6:	d109      	bne.n	8002bfc <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x20>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8002be8:	f00f fd12 	bl	8012610 <_ZN8touchgfx11Application11getInstanceEv>
        application().gotoScreenGraphScreenWipeTransitionEast();
 8002bec:	f7ff fcbe 	bl	800256c <_ZN23FrontendApplicationBase39gotoScreenGraphScreenWipeTransitionEastEv>
        ButtonStartClicked();
 8002bf0:	6823      	ldr	r3, [r4, #0]
 8002bf2:	4620      	mov	r0, r4
 8002bf4:	6b5b      	ldr	r3, [r3, #52]	; 0x34
}
 8002bf6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        ButtonStartClicked();
 8002bfa:	4718      	bx	r3
}
 8002bfc:	bd10      	pop	{r4, pc}

08002bfe <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:

        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 8002bfe:	2200      	movs	r2, #0
 8002c00:	f04f 31ff 	mov.w	r1, #4294967295
 8002c04:	e9c0 2100 	strd	r2, r1, [r0]
              text(0)
 8002c08:	6082      	str	r2, [r0, #8]
    }
 8002c0a:	4770      	bx	lr

08002c0c <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 8002c0c:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 8002c0e:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 8002c10:	4604      	mov	r4, r0
        setX(x);
 8002c12:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    void setXY(int16_t x, int16_t y)
 8002c14:	4615      	mov	r5, r2
        setX(x);
 8002c16:	4798      	blx	r3
        setY(y);
 8002c18:	6823      	ldr	r3, [r4, #0]
 8002c1a:	4629      	mov	r1, r5
 8002c1c:	4620      	mov	r0, r4
 8002c1e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    }
 8002c20:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 8002c24:	4718      	bx	r3

08002c26 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>:
        iconReleased = newIconReleased;
 8002c26:	880b      	ldrh	r3, [r1, #0]
    virtual void setIconBitmaps(const Bitmap& newIconReleased, const Bitmap& newIconPressed)
 8002c28:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
        iconReleased = newIconReleased;
 8002c2c:	f8a0 3078 	strh.w	r3, [r0, #120]	; 0x78
        iconPressed = newIconPressed;
 8002c30:	8813      	ldrh	r3, [r2, #0]
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
 8002c32:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
        iconPressed = newIconPressed;
 8002c36:	f8a0 307a 	strh.w	r3, [r0, #122]	; 0x7a
    virtual void setIconBitmaps(const Bitmap& newIconReleased, const Bitmap& newIconPressed)
 8002c3a:	4604      	mov	r4, r0
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
 8002c3c:	4610      	mov	r0, r2
    virtual void setIconBitmaps(const Bitmap& newIconReleased, const Bitmap& newIconPressed)
 8002c3e:	4690      	mov	r8, r2
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
 8002c40:	f012 ff16 	bl	8015a70 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8002c44:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8002c48:	4607      	mov	r7, r0
 8002c4a:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8002c4e:	4640      	mov	r0, r8
 8002c50:	f3c3 064f 	ubfx	r6, r3, #1, #16
 8002c54:	f012 ff40 	bl	8015ad8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8002c58:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8002c5c:	f3c5 054f 	ubfx	r5, r5, #1, #16
 8002c60:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8002c64:	eb07 77d7 	add.w	r7, r7, r7, lsr #31
 8002c68:	eba6 0260 	sub.w	r2, r6, r0, asr #1
 8002c6c:	eba5 0767 	sub.w	r7, r5, r7, asr #1
 8002c70:	f104 007c 	add.w	r0, r4, #124	; 0x7c
 8002c74:	b239      	sxth	r1, r7
 8002c76:	b212      	sxth	r2, r2
 8002c78:	f7ff ffc8 	bl	8002c0c <_ZN8touchgfx8Drawable5setXYEss>
        handlePressedUpdated();
 8002c7c:	6823      	ldr	r3, [r4, #0]
 8002c7e:	4620      	mov	r0, r4
 8002c80:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
    }
 8002c84:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
        handlePressedUpdated();
 8002c88:	4718      	bx	r3

08002c8a <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8002c8a:	b570      	push	{r4, r5, r6, lr}
 8002c8c:	4604      	mov	r4, r0
 8002c8e:	461d      	mov	r5, r3
 8002c90:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
        setXY(x, y);
 8002c94:	f7ff ffba 	bl	8002c0c <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8002c98:	6823      	ldr	r3, [r4, #0]
 8002c9a:	4629      	mov	r1, r5
 8002c9c:	4620      	mov	r0, r4
 8002c9e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002ca0:	4798      	blx	r3
        setHeight(height);
 8002ca2:	6823      	ldr	r3, [r4, #0]
 8002ca4:	4631      	mov	r1, r6
 8002ca6:	4620      	mov	r0, r4
 8002ca8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    }
 8002caa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 8002cae:	4718      	bx	r3

08002cb0 <_ZN8touchgfx6WidgetC1Ev>:
 8002cb0:	2200      	movs	r2, #0
 8002cb2:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8002cb6:	e9c0 2203 	strd	r2, r2, [r0, #12]
          visible(true)
 8002cba:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8002cbe:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8002cc2:	f44f 7280 	mov.w	r2, #256	; 0x100
 8002cc6:	8482      	strh	r2, [r0, #36]	; 0x24
class Widget : public Drawable
 8002cc8:	4a01      	ldr	r2, [pc, #4]	; (8002cd0 <_ZN8touchgfx6WidgetC1Ev+0x20>)
 8002cca:	6002      	str	r2, [r0, #0]
 8002ccc:	4770      	bx	lr
 8002cce:	bf00      	nop
 8002cd0:	08023df4 	.word	0x08023df4

08002cd4 <_ZN8touchgfx3BoxC1Ev>:
    Box()
 8002cd4:	b510      	push	{r4, lr}
        : Widget(), alpha(255), color(0)
 8002cd6:	2226      	movs	r2, #38	; 0x26
    Box()
 8002cd8:	4604      	mov	r4, r0
        : Widget(), alpha(255), color(0)
 8002cda:	2100      	movs	r1, #0
 8002cdc:	f01f f968 	bl	8021fb0 <memset>
 8002ce0:	4620      	mov	r0, r4
 8002ce2:	f7ff ffe5 	bl	8002cb0 <_ZN8touchgfx6WidgetC1Ev>
 8002ce6:	4b04      	ldr	r3, [pc, #16]	; (8002cf8 <_ZN8touchgfx3BoxC1Ev+0x24>)
 8002ce8:	6023      	str	r3, [r4, #0]
 8002cea:	23ff      	movs	r3, #255	; 0xff
 8002cec:	f884 3026 	strb.w	r3, [r4, #38]	; 0x26
        : color(col)
 8002cf0:	2300      	movs	r3, #0
 8002cf2:	62a3      	str	r3, [r4, #40]	; 0x28
    }
 8002cf4:	4620      	mov	r0, r4
 8002cf6:	bd10      	pop	{r4, pc}
 8002cf8:	0802533c 	.word	0x0802533c

08002cfc <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>:
    Image(const Bitmap& bmp = Bitmap())
 8002cfc:	b538      	push	{r3, r4, r5, lr}
        : Widget(), bitmap(bmp), alpha(255)
 8002cfe:	2226      	movs	r2, #38	; 0x26
    Image(const Bitmap& bmp = Bitmap())
 8002d00:	4604      	mov	r4, r0
 8002d02:	460d      	mov	r5, r1
        : Widget(), bitmap(bmp), alpha(255)
 8002d04:	2100      	movs	r1, #0
 8002d06:	f01f f953 	bl	8021fb0 <memset>
 8002d0a:	4620      	mov	r0, r4
 8002d0c:	f7ff ffd0 	bl	8002cb0 <_ZN8touchgfx6WidgetC1Ev>
 8002d10:	4b06      	ldr	r3, [pc, #24]	; (8002d2c <_ZN8touchgfx5ImageC1ERKNS_6BitmapE+0x30>)
 8002d12:	6023      	str	r3, [r4, #0]
 8002d14:	882b      	ldrh	r3, [r5, #0]
 8002d16:	84e3      	strh	r3, [r4, #38]	; 0x26
 8002d18:	23ff      	movs	r3, #255	; 0xff
        Image::setBitmap(bmp);
 8002d1a:	4620      	mov	r0, r4
        : Widget(), bitmap(bmp), alpha(255)
 8002d1c:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
        Image::setBitmap(bmp);
 8002d20:	4629      	mov	r1, r5
 8002d22:	f00c ffc7 	bl	800fcb4 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    }
 8002d26:	4620      	mov	r0, r4
 8002d28:	bd38      	pop	{r3, r4, r5, pc}
 8002d2a:	bf00      	nop
 8002d2c:	08025480 	.word	0x08025480

08002d30 <_ZN8touchgfx8TextAreaC1Ev>:
    TextArea()
 8002d30:	b510      	push	{r4, lr}
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002d32:	2226      	movs	r2, #38	; 0x26
    TextArea()
 8002d34:	4604      	mov	r4, r0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002d36:	2100      	movs	r1, #0
 8002d38:	f01f f93a 	bl	8021fb0 <memset>
 8002d3c:	4620      	mov	r0, r4
 8002d3e:	f7ff ffb7 	bl	8002cb0 <_ZN8touchgfx6WidgetC1Ev>
 8002d42:	4b0a      	ldr	r3, [pc, #40]	; (8002d6c <_ZN8touchgfx8TextAreaC1Ev+0x3c>)
 8002d44:	6023      	str	r3, [r4, #0]
        : typedTextId(id)
 8002d46:	4b0a      	ldr	r3, [pc, #40]	; (8002d70 <_ZN8touchgfx8TextAreaC1Ev+0x40>)
 8002d48:	62a3      	str	r3, [r4, #40]	; 0x28
 8002d4a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002d4e:	85a3      	strh	r3, [r4, #44]	; 0x2c
 8002d50:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 8002d54:	2300      	movs	r3, #0
 8002d56:	e9c4 320c 	strd	r3, r2, [r4, #48]	; 0x30
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8002d5a:	f04f 32ff 	mov.w	r2, #4294967295
              text(0)
 8002d5e:	e9c4 2310 	strd	r2, r3, [r4, #64]	; 0x40
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002d62:	8723      	strh	r3, [r4, #56]	; 0x38
 8002d64:	63e3      	str	r3, [r4, #60]	; 0x3c
    }
 8002d66:	4620      	mov	r0, r4
 8002d68:	bd10      	pop	{r4, pc}
 8002d6a:	bf00      	nop
 8002d6c:	080252ac 	.word	0x080252ac
 8002d70:	08023620 	.word	0x08023620

08002d74 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>:
        return typedTextId < numberOfTypedTexts;
 8002d74:	4b1b      	ldr	r3, [pc, #108]	; (8002de4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x70>)
     * change you may need to reposition the label text by calling this function to keep the
     * text horizontally centered.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
 8002d76:	b573      	push	{r0, r1, r4, r5, r6, lr}
    {
        if (typedText.hasValidId())
 8002d78:	881b      	ldrh	r3, [r3, #0]
 8002d7a:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 8002d7c:	428b      	cmp	r3, r1
    void updateTextPosition()
 8002d7e:	4606      	mov	r6, r0
        if (typedText.hasValidId())
 8002d80:	d92b      	bls.n	8002dda <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x66>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002d82:	4b19      	ldr	r3, [pc, #100]	; (8002de8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x74>)
 8002d84:	681b      	ldr	r3, [r3, #0]
 8002d86:	b92b      	cbnz	r3, 8002d94 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x20>
 8002d88:	4b18      	ldr	r3, [pc, #96]	; (8002dec <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x78>)
 8002d8a:	4a19      	ldr	r2, [pc, #100]	; (8002df0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x7c>)
 8002d8c:	4819      	ldr	r0, [pc, #100]	; (8002df4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x80>)
 8002d8e:	216c      	movs	r1, #108	; 0x6c
 8002d90:	f01e ff88 	bl	8021ca4 <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 8002d94:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8002d98:	4b17      	ldr	r3, [pc, #92]	; (8002df8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x84>)
 8002d9a:	681b      	ldr	r3, [r3, #0]
 8002d9c:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
 8002da0:	4b16      	ldr	r3, [pc, #88]	; (8002dfc <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x88>)
 8002da2:	6818      	ldr	r0, [r3, #0]
 8002da4:	f004 f802 	bl	8006dac <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getMaxTextHeight(s) * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8002da8:	682b      	ldr	r3, [r5, #0]
 8002daa:	9001      	str	r0, [sp, #4]
 8002dac:	4601      	mov	r1, r0
 8002dae:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002db0:	4628      	mov	r0, r5
 8002db2:	4798      	blx	r3
 8002db4:	682b      	ldr	r3, [r5, #0]
 8002db6:	9901      	ldr	r1, [sp, #4]
 8002db8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002dba:	4604      	mov	r4, r0
 8002dbc:	4628      	mov	r0, r5
 8002dbe:	4798      	blx	r3
 8002dc0:	682b      	ldr	r3, [r5, #0]
 8002dc2:	9901      	ldr	r1, [sp, #4]
 8002dc4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002dc6:	fb14 f400 	smulbb	r4, r4, r0
 8002dca:	4628      	mov	r0, r5
 8002dcc:	4798      	blx	r3
 8002dce:	b2e4      	uxtb	r4, r4
 8002dd0:	4404      	add	r4, r0
 8002dd2:	f886 4045 	strb.w	r4, [r6, #69]	; 0x45
        }
        else
        {
            textHeightIncludingSpacing = 0;
        }
    }
 8002dd6:	b002      	add	sp, #8
 8002dd8:	bd70      	pop	{r4, r5, r6, pc}
            textHeightIncludingSpacing = 0;
 8002dda:	2300      	movs	r3, #0
 8002ddc:	f880 3045 	strb.w	r3, [r0, #69]	; 0x45
    }
 8002de0:	e7f9      	b.n	8002dd6 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x62>
 8002de2:	bf00      	nop
 8002de4:	200179a8 	.word	0x200179a8
 8002de8:	200179a4 	.word	0x200179a4
 8002dec:	08023ce8 	.word	0x08023ce8
 8002df0:	08023d2a 	.word	0x08023d2a
 8002df4:	08023d65 	.word	0x08023d65
 8002df8:	200179ac 	.word	0x200179ac
 8002dfc:	200179b0 	.word	0x200179b0

08002e00 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>:
        : pressed(false), alpha(255), action(0)
 8002e00:	f44f 437f 	mov.w	r3, #65280	; 0xff00
    IconButtonStyle()
 8002e04:	b573      	push	{r0, r1, r4, r5, r6, lr}
        : T(), up(), down()
 8002e06:	4606      	mov	r6, r0
 8002e08:	8583      	strh	r3, [r0, #44]	; 0x2c
        touchable = touch;
 8002e0a:	f240 1301 	movw	r3, #257	; 0x101
          firstChild(0)
 8002e0e:	2500      	movs	r5, #0
 8002e10:	8483      	strh	r3, [r0, #36]	; 0x24
 8002e12:	4b1d      	ldr	r3, [pc, #116]	; (8002e88 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0x88>)
 8002e14:	6285      	str	r5, [r0, #40]	; 0x28
        : x(0), y(0), width(0), height(0)
 8002e16:	e9c0 5501 	strd	r5, r5, [r0, #4]
 8002e1a:	e9c0 5503 	strd	r5, r5, [r0, #12]
          visible(true)
 8002e1e:	e9c0 5505 	strd	r5, r5, [r0, #20]
 8002e22:	e9c0 5507 	strd	r5, r5, [r0, #28]
 8002e26:	6305      	str	r5, [r0, #48]	; 0x30
 8002e28:	f846 3b34 	str.w	r3, [r6], #52
 8002e2c:	4604      	mov	r4, r0
        : Box(), borderColor(0), borderSize(0)
 8002e2e:	4630      	mov	r0, r6
 8002e30:	f7ff ff50 	bl	8002cd4 <_ZN8touchgfx3BoxC1Ev>
 8002e34:	4b15      	ldr	r3, [pc, #84]	; (8002e8c <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0x8c>)
 8002e36:	6363      	str	r3, [r4, #52]	; 0x34
        borderBox.setXY(0, 0);
 8002e38:	462a      	mov	r2, r5
        : color(0)
 8002e3a:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 8002e3e:	e9c4 551c 	strd	r5, r5, [r4, #112]	; 0x70
        : color(col)
 8002e42:	6625      	str	r5, [r4, #96]	; 0x60
 8002e44:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 8002e48:	4629      	mov	r1, r5
 8002e4a:	4630      	mov	r0, r6
 8002e4c:	f7ff fede 	bl	8002c0c <_ZN8touchgfx8Drawable5setXYEss>
        T::add(borderBox);
 8002e50:	4631      	mov	r1, r6
 8002e52:	4620      	mov	r0, r4
 8002e54:	f009 fac2 	bl	800c3dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
        : T()
 8002e58:	4b0d      	ldr	r3, [pc, #52]	; (8002e90 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0x90>)
 8002e5a:	6023      	str	r3, [r4, #0]
 8002e5c:	f104 057c 	add.w	r5, r4, #124	; 0x7c
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 8002e60:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002e64:	f8a4 3078 	strh.w	r3, [r4, #120]	; 0x78
 8002e68:	f8a4 307a 	strh.w	r3, [r4, #122]	; 0x7a
 8002e6c:	a901      	add	r1, sp, #4
 8002e6e:	4628      	mov	r0, r5
 8002e70:	f8ad 3004 	strh.w	r3, [sp, #4]
 8002e74:	f7ff ff42 	bl	8002cfc <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
        T::add(iconImage);
 8002e78:	4620      	mov	r0, r4
 8002e7a:	4629      	mov	r1, r5
 8002e7c:	f009 faae 	bl	800c3dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 8002e80:	4620      	mov	r0, r4
 8002e82:	b002      	add	sp, #8
 8002e84:	bd70      	pop	{r4, r5, r6, pc}
 8002e86:	bf00      	nop
 8002e88:	08023eec 	.word	0x08023eec
 8002e8c:	08025418 	.word	0x08025418
 8002e90:	08023f88 	.word	0x08023f88

08002e94 <_ZN15Screen1ViewBaseC1Ev>:
Screen1ViewBase::Screen1ViewBase() :
 8002e94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002e98:	ed2d 8b08 	vpush	{d8-d11}
 8002e9c:	4604      	mov	r4, r0
 8002e9e:	b08d      	sub	sp, #52	; 0x34
        : presenter(0)
 8002ea0:	f010 feb8 	bl	8013c14 <_ZN8touchgfx6ScreenC1Ev>
    flexButtonCallback(this, &Screen1ViewBase::flexButtonCallbackHandler)
 8002ea4:	4622      	mov	r2, r4
 8002ea6:	2500      	movs	r5, #0
 8002ea8:	4be4      	ldr	r3, [pc, #912]	; (800323c <_ZN15Screen1ViewBaseC1Ev+0x3a8>)
 8002eaa:	63e5      	str	r5, [r4, #60]	; 0x3c
 8002eac:	f842 3b40 	str.w	r3, [r2], #64
 8002eb0:	4610      	mov	r0, r2
 8002eb2:	ee08 2a10 	vmov	s16, r2
 8002eb6:	f7ff ff0d 	bl	8002cd4 <_ZN8touchgfx3BoxC1Ev>
 8002eba:	f104 036c 	add.w	r3, r4, #108	; 0x6c
 8002ebe:	f64f 76ff 	movw	r6, #65535	; 0xffff
 8002ec2:	a90a      	add	r1, sp, #40	; 0x28
 8002ec4:	4618      	mov	r0, r3
 8002ec6:	ee0a 3a10 	vmov	s20, r3
 8002eca:	f8ad 6028 	strh.w	r6, [sp, #40]	; 0x28
 8002ece:	f7ff ff15 	bl	8002cfc <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8002ed2:	f104 0398 	add.w	r3, r4, #152	; 0x98
 8002ed6:	a90a      	add	r1, sp, #40	; 0x28
 8002ed8:	4618      	mov	r0, r3
 8002eda:	ee0a 3a90 	vmov	s21, r3
 8002ede:	f8ad 6028 	strh.w	r6, [sp, #40]	; 0x28
 8002ee2:	f7ff ff0b 	bl	8002cfc <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8002ee6:	f104 03c4 	add.w	r3, r4, #196	; 0xc4
 8002eea:	4618      	mov	r0, r3
 8002eec:	ee08 3a90 	vmov	s17, r3
 8002ef0:	f7ff ff86 	bl	8002e00 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 8002ef4:	f504 73b6 	add.w	r3, r4, #364	; 0x16c
 8002ef8:	4618      	mov	r0, r3
 8002efa:	ee09 3a10 	vmov	s18, r3
 8002efe:	f7ff ff7f 	bl	8002e00 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 8002f02:	f504 7305 	add.w	r3, r4, #532	; 0x214
 8002f06:	f504 7917 	add.w	r9, r4, #604	; 0x25c
 8002f0a:	4618      	mov	r0, r3
 8002f0c:	ee09 3a90 	vmov	s19, r3
 8002f10:	f504 782a 	add.w	r8, r4, #680	; 0x2a8
 8002f14:	f7ff ff0c 	bl	8002d30 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8002f18:	4fc9      	ldr	r7, [pc, #804]	; (8003240 <_ZN15Screen1ViewBaseC1Ev+0x3ac>)
        : TextArea()
 8002f1a:	4648      	mov	r0, r9
 8002f1c:	f7ff ff08 	bl	8002d30 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8002f20:	f8c4 725c 	str.w	r7, [r4, #604]	; 0x25c
 8002f24:	f8c4 52a4 	str.w	r5, [r4, #676]	; 0x2a4
 8002f28:	4640      	mov	r0, r8
 8002f2a:	f00c fff5 	bl	800ff18 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8002f2e:	f504 733c 	add.w	r3, r4, #752	; 0x2f0
 8002f32:	f504 7b47 	add.w	fp, r4, #796	; 0x31c
 8002f36:	a90a      	add	r1, sp, #40	; 0x28
 8002f38:	4618      	mov	r0, r3
 8002f3a:	ee0b 3a10 	vmov	s22, r3
 8002f3e:	f504 7a59 	add.w	sl, r4, #868	; 0x364
 8002f42:	f8ad 6028 	strh.w	r6, [sp, #40]	; 0x28
 8002f46:	f7ff fed9 	bl	8002cfc <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8002f4a:	4658      	mov	r0, fp
 8002f4c:	f7ff fef0 	bl	8002d30 <_ZN8touchgfx8TextAreaC1Ev>
        : TextArea()
 8002f50:	4650      	mov	r0, sl
 8002f52:	f7ff feed 	bl	8002d30 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8002f56:	4bbb      	ldr	r3, [pc, #748]	; (8003244 <_ZN15Screen1ViewBaseC1Ev+0x3b0>)
        : TextAreaWithWildcardBase(), wc1(0)
 8002f58:	f8c4 7364 	str.w	r7, [r4, #868]	; 0x364
 8002f5c:	e9c4 34f6 	strd	r3, r4, [r4, #984]	; 0x3d8
 8002f60:	4bb9      	ldr	r3, [pc, #740]	; (8003248 <_ZN15Screen1ViewBaseC1Ev+0x3b4>)
 8002f62:	f8c4 53ac 	str.w	r5, [r4, #940]	; 0x3ac
 8002f66:	e9c4 35f8 	strd	r3, r5, [r4, #992]	; 0x3e0
 8002f6a:	4bb8      	ldr	r3, [pc, #736]	; (800324c <_ZN15Screen1ViewBaseC1Ev+0x3b8>)
 8002f6c:	e9c4 34fa 	strd	r3, r4, [r4, #1000]	; 0x3e8
 8002f70:	4bb7      	ldr	r3, [pc, #732]	; (8003250 <_ZN15Screen1ViewBaseC1Ev+0x3bc>)
 8002f72:	e9c4 35fc 	strd	r3, r5, [r4, #1008]	; 0x3f0
    __background.setPosition(0, 0, 320, 240);
 8002f76:	23f0      	movs	r3, #240	; 0xf0
 8002f78:	ee18 0a10 	vmov	r0, s16
 8002f7c:	9300      	str	r3, [sp, #0]
 8002f7e:	462a      	mov	r2, r5
 8002f80:	4629      	mov	r1, r5
 8002f82:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8002f86:	f7ff fe80 	bl	8002c8a <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8002f8a:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8002f8e:	66a3      	str	r3, [r4, #104]	; 0x68
    image2.setXY(0, 0);
 8002f90:	462a      	mov	r2, r5
 8002f92:	ee1a 0a10 	vmov	r0, s20
 8002f96:	4629      	mov	r1, r5
 8002f98:	f7ff fe38 	bl	8002c0c <_ZN8touchgfx8Drawable5setXYEss>
    image2.setBitmap(touchgfx::Bitmap(BITMAP_BG_ID));
 8002f9c:	ee1a 0a10 	vmov	r0, s20
 8002fa0:	a90a      	add	r1, sp, #40	; 0x28
 8002fa2:	f8ad 5028 	strh.w	r5, [sp, #40]	; 0x28
 8002fa6:	f00c fe85 	bl	800fcb4 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    image3.setXY(118, 25);
 8002faa:	ee1a 0a90 	vmov	r0, s21
 8002fae:	2219      	movs	r2, #25
 8002fb0:	2176      	movs	r1, #118	; 0x76
 8002fb2:	f7ff fe2b 	bl	8002c0c <_ZN8touchgfx8Drawable5setXYEss>
        borderBox.setPosition(x, y, width, height);
 8002fb6:	2717      	movs	r7, #23
    image3.setBitmap(touchgfx::Bitmap(BITMAP_COUNTER_BOX_ID));
 8002fb8:	ee1a 0a90 	vmov	r0, s21
 8002fbc:	f04f 0303 	mov.w	r3, #3
 8002fc0:	a90a      	add	r1, sp, #40	; 0x28
 8002fc2:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8002fc6:	f00c fe75 	bl	800fcb4 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8002fca:	9700      	str	r7, [sp, #0]
 8002fcc:	462a      	mov	r2, r5
 8002fce:	4629      	mov	r1, r5
 8002fd0:	f104 00f8 	add.w	r0, r4, #248	; 0xf8
 8002fd4:	232b      	movs	r3, #43	; 0x2b
 8002fd6:	f7ff fe58 	bl	8002c8a <_ZN8touchgfx8Drawable11setPositionEssss>
        down = colorPressed;
 8002fda:	4a9e      	ldr	r2, [pc, #632]	; (8003254 <_ZN15Screen1ViewBaseC1Ev+0x3c0>)
 8002fdc:	4b9e      	ldr	r3, [pc, #632]	; (8003258 <_ZN15Screen1ViewBaseC1Ev+0x3c4>)
        borderDown = borderColorPressed;
 8002fde:	499f      	ldr	r1, [pc, #636]	; (800325c <_ZN15Screen1ViewBaseC1Ev+0x3c8>)
 8002fe0:	489f      	ldr	r0, [pc, #636]	; (8003260 <_ZN15Screen1ViewBaseC1Ev+0x3cc>)
        down = colorPressed;
 8002fe2:	e9c4 324b 	strd	r3, r2, [r4, #300]	; 0x12c
        handlePressedUpdated();
 8002fe6:	f8d4 30c4 	ldr.w	r3, [r4, #196]	; 0xc4
     *
     * @see getBorderSize
     */
    void setBorderSize(uint16_t size)
    {
        borderSize = size;
 8002fea:	2605      	movs	r6, #5
        borderDown = borderColorPressed;
 8002fec:	e9c4 104d 	strd	r1, r0, [r4, #308]	; 0x134
        handlePressedUpdated();
 8002ff0:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8002ff4:	f8a4 6128 	strh.w	r6, [r4, #296]	; 0x128
 8002ff8:	ee18 0a90 	vmov	r0, s17
 8002ffc:	4798      	blx	r3
    ButtonDown.setIconBitmaps(Bitmap(BITMAP_DARK_ICONS_DOWN_ARROW_32_ID), Bitmap(BITMAP_DARK_ICONS_DOWN_ARROW_32_ID));
 8002ffe:	f10d 0c28 	add.w	ip, sp, #40	; 0x28
 8003002:	4662      	mov	r2, ip
 8003004:	f10d 0c24 	add.w	ip, sp, #36	; 0x24
 8003008:	4661      	mov	r1, ip
 800300a:	ee18 0a90 	vmov	r0, s17
 800300e:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 8003012:	f8ad 6028 	strh.w	r6, [sp, #40]	; 0x28
 8003016:	f7ff fe06 	bl	8002c26 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>
    ButtonDown.setPosition(273, 49, 43, 23);
 800301a:	ee18 0a90 	vmov	r0, s17
        rect.x = x;
 800301e:	f8c4 6144 	str.w	r6, [r4, #324]	; 0x144
 8003022:	9700      	str	r7, [sp, #0]
 8003024:	232b      	movs	r3, #43	; 0x2b
 8003026:	2231      	movs	r2, #49	; 0x31
 8003028:	f240 1111 	movw	r1, #273	; 0x111
 800302c:	f7ff fe2d 	bl	8002c8a <_ZN8touchgfx8Drawable11setPositionEssss>
    ButtonDown.setAction(flexButtonCallback);
 8003030:	f504 7c7a 	add.w	ip, r4, #1000	; 0x3e8
        action = &callback;
 8003034:	f8c4 c0f4 	str.w	ip, [r4, #244]	; 0xf4
        borderBox.setPosition(x, y, width, height);
 8003038:	9700      	str	r7, [sp, #0]
 800303a:	462a      	mov	r2, r5
 800303c:	4629      	mov	r1, r5
 800303e:	f504 70d0 	add.w	r0, r4, #416	; 0x1a0
 8003042:	232b      	movs	r3, #43	; 0x2b
 8003044:	f8cd c00c 	str.w	ip, [sp, #12]
 8003048:	f7ff fe1f 	bl	8002c8a <_ZN8touchgfx8Drawable11setPositionEssss>
        down = colorPressed;
 800304c:	4a81      	ldr	r2, [pc, #516]	; (8003254 <_ZN15Screen1ViewBaseC1Ev+0x3c0>)
 800304e:	4b82      	ldr	r3, [pc, #520]	; (8003258 <_ZN15Screen1ViewBaseC1Ev+0x3c4>)
        borderDown = borderColorPressed;
 8003050:	4982      	ldr	r1, [pc, #520]	; (800325c <_ZN15Screen1ViewBaseC1Ev+0x3c8>)
 8003052:	4883      	ldr	r0, [pc, #524]	; (8003260 <_ZN15Screen1ViewBaseC1Ev+0x3cc>)
 8003054:	f8a4 61d0 	strh.w	r6, [r4, #464]	; 0x1d0
        down = colorPressed;
 8003058:	e9c4 3275 	strd	r3, r2, [r4, #468]	; 0x1d4
        handlePressedUpdated();
 800305c:	f8d4 316c 	ldr.w	r3, [r4, #364]	; 0x16c
        borderDown = borderColorPressed;
 8003060:	e9c4 1077 	strd	r1, r0, [r4, #476]	; 0x1dc
        handlePressedUpdated();
 8003064:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8003068:	ee19 0a10 	vmov	r0, s18
 800306c:	4798      	blx	r3
 800306e:	2606      	movs	r6, #6
    ButtonUp.setIconBitmaps(Bitmap(BITMAP_DARK_ICONS_UP_ARROW_32_ID), Bitmap(BITMAP_DARK_ICONS_UP_ARROW_32_ID));
 8003070:	ee19 0a10 	vmov	r0, s18
 8003074:	aa0a      	add	r2, sp, #40	; 0x28
 8003076:	a909      	add	r1, sp, #36	; 0x24
 8003078:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 800307c:	f8ad 6028 	strh.w	r6, [sp, #40]	; 0x28
 8003080:	f7ff fdd1 	bl	8002c26 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>
    ButtonUp.setPosition(273, 25, 43, 23);
 8003084:	ee19 0a10 	vmov	r0, s18
 8003088:	f8c4 61ec 	str.w	r6, [r4, #492]	; 0x1ec
 800308c:	9700      	str	r7, [sp, #0]
 800308e:	232b      	movs	r3, #43	; 0x2b
 8003090:	2219      	movs	r2, #25
 8003092:	f240 1111 	movw	r1, #273	; 0x111
 8003096:	f7ff fdf8 	bl	8002c8a <_ZN8touchgfx8Drawable11setPositionEssss>
 800309a:	9b03      	ldr	r3, [sp, #12]
 800309c:	f8c4 319c 	str.w	r3, [r4, #412]	; 0x19c
        boundingArea = calculateBoundingArea();
 80030a0:	ae04      	add	r6, sp, #16
        color = newColor;
 80030a2:	f04f 37ff 	mov.w	r7, #4294967295
    LabelPradLadowania.setXY(25, 28);
 80030a6:	ee19 0a90 	vmov	r0, s19
 80030aa:	221c      	movs	r2, #28
 80030ac:	2119      	movs	r1, #25
 80030ae:	f7ff fdad 	bl	8002c0c <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80030b2:	ee19 1a90 	vmov	r1, s19
        linespace = space;
 80030b6:	f8a4 5248 	strh.w	r5, [r4, #584]	; 0x248
        boundingArea = calculateBoundingArea();
 80030ba:	4630      	mov	r0, r6
        color = newColor;
 80030bc:	f8c4 7244 	str.w	r7, [r4, #580]	; 0x244
        boundingArea = calculateBoundingArea();
 80030c0:	f00c f8ea 	bl	800f298 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80030c4:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 80030c8:	f504 7314 	add.w	r3, r4, #592	; 0x250
 80030cc:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 80030d0:	4b64      	ldr	r3, [pc, #400]	; (8003264 <_ZN15Screen1ViewBaseC1Ev+0x3d0>)
 80030d2:	930a      	str	r3, [sp, #40]	; 0x28
    LabelPradLadowania.setTypedText(touchgfx::TypedText(T___SINGLEUSE_OQ6C));
 80030d4:	ee19 0a90 	vmov	r0, s19
 80030d8:	230c      	movs	r3, #12
 80030da:	a90a      	add	r1, sp, #40	; 0x28
 80030dc:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80030e0:	f00c fb6a 	bl	800f7b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    txtPradLadowania.setPosition(143, 36, 124, 24);
 80030e4:	2218      	movs	r2, #24
 80030e6:	9200      	str	r2, [sp, #0]
 80030e8:	4648      	mov	r0, r9
 80030ea:	2224      	movs	r2, #36	; 0x24
 80030ec:	237c      	movs	r3, #124	; 0x7c
 80030ee:	218f      	movs	r1, #143	; 0x8f
 80030f0:	f7ff fdcb 	bl	8002c8a <_ZN8touchgfx8Drawable11setPositionEssss>
 80030f4:	f8d4 325c 	ldr.w	r3, [r4, #604]	; 0x25c
        linespace = space;
 80030f8:	f8a4 5290 	strh.w	r5, [r4, #656]	; 0x290
        boundingArea = calculateBoundingArea();
 80030fc:	4649      	mov	r1, r9
 80030fe:	4630      	mov	r0, r6
 8003100:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8003104:	f8c4 728c 	str.w	r7, [r4, #652]	; 0x28c
        boundingArea = calculateBoundingArea();
 8003108:	4798      	blx	r3
 800310a:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 800310e:	f504 7326 	add.w	r3, r4, #664	; 0x298
 8003112:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    txtPradLadowania.setWildcard(txtPradLadowaniaBuffer);
 8003116:	f504 736c 	add.w	r3, r4, #944	; 0x3b0
        wc1 = value;
 800311a:	f8c4 32a4 	str.w	r3, [r4, #676]	; 0x2a4
 800311e:	4b51      	ldr	r3, [pc, #324]	; (8003264 <_ZN15Screen1ViewBaseC1Ev+0x3d0>)
    txtPradLadowaniaBuffer[0] = 0;
 8003120:	f8a4 53b0 	strh.w	r5, [r4, #944]	; 0x3b0
 8003124:	930a      	str	r3, [sp, #40]	; 0x28
    txtPradLadowania.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9VFQ));
 8003126:	a90a      	add	r1, sp, #40	; 0x28
 8003128:	230b      	movs	r3, #11
 800312a:	4648      	mov	r0, r9
 800312c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003130:	f00c fb42 	bl	800f7b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    buttonStart.setXY(78, 180);
 8003134:	4640      	mov	r0, r8
 8003136:	22b4      	movs	r2, #180	; 0xb4
 8003138:	214e      	movs	r1, #78	; 0x4e
 800313a:	f7ff fd67 	bl	8002c0c <_ZN8touchgfx8Drawable5setXYEss>
 800313e:	2301      	movs	r3, #1
    buttonStart.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
 8003140:	aa0a      	add	r2, sp, #40	; 0x28
 8003142:	a909      	add	r1, sp, #36	; 0x24
 8003144:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8003148:	4640      	mov	r0, r8
 800314a:	2302      	movs	r3, #2
 800314c:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8003150:	f00c fb8d 	bl	800f86e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8003154:	230a      	movs	r3, #10
 8003156:	f8a4 32e0 	strh.w	r3, [r4, #736]	; 0x2e0
        updateTextPosition();
 800315a:	4640      	mov	r0, r8
 800315c:	f7ff fe0a 	bl	8002d74 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonStart.setAction(buttonCallback);
 8003160:	f504 7376 	add.w	r3, r4, #984	; 0x3d8
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 8003164:	f8c4 32d0 	str.w	r3, [r4, #720]	; 0x2d0
    image3_1.setXY(118, 79);
 8003168:	ee1b 0a10 	vmov	r0, s22
        colorPressed = col;
 800316c:	e9c4 77b9 	strd	r7, r7, [r4, #740]	; 0x2e4
 8003170:	224f      	movs	r2, #79	; 0x4f
 8003172:	2176      	movs	r1, #118	; 0x76
 8003174:	f7ff fd4a 	bl	8002c0c <_ZN8touchgfx8Drawable5setXYEss>
    image3_1.setBitmap(touchgfx::Bitmap(BITMAP_COUNTER_BOX_ID));
 8003178:	ee1b 0a10 	vmov	r0, s22
 800317c:	f04f 0203 	mov.w	r2, #3
 8003180:	a90a      	add	r1, sp, #40	; 0x28
 8003182:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8003186:	f00c fd95 	bl	800fcb4 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    LabelNapiecieBaterii.setXY(41, 82);
 800318a:	2252      	movs	r2, #82	; 0x52
 800318c:	4658      	mov	r0, fp
 800318e:	2129      	movs	r1, #41	; 0x29
 8003190:	f7ff fd3c 	bl	8002c0c <_ZN8touchgfx8Drawable5setXYEss>
        linespace = space;
 8003194:	f8a4 5350 	strh.w	r5, [r4, #848]	; 0x350
        boundingArea = calculateBoundingArea();
 8003198:	4659      	mov	r1, fp
 800319a:	4630      	mov	r0, r6
        color = newColor;
 800319c:	f8c4 734c 	str.w	r7, [r4, #844]	; 0x34c
        boundingArea = calculateBoundingArea();
 80031a0:	f00c f87a 	bl	800f298 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80031a4:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 80031a8:	f504 7356 	add.w	r3, r4, #856	; 0x358
 80031ac:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 80031b0:	4b2c      	ldr	r3, [pc, #176]	; (8003264 <_ZN15Screen1ViewBaseC1Ev+0x3d0>)
 80031b2:	930a      	str	r3, [sp, #40]	; 0x28
    LabelNapiecieBaterii.setTypedText(touchgfx::TypedText(T___SINGLEUSE_O6MQ));
 80031b4:	a90a      	add	r1, sp, #40	; 0x28
 80031b6:	2309      	movs	r3, #9
 80031b8:	4658      	mov	r0, fp
 80031ba:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80031be:	f00c fafb 	bl	800f7b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    txtNapiecieBaterii.setPosition(143, 88, 124, 24);
 80031c2:	2218      	movs	r2, #24
 80031c4:	9200      	str	r2, [sp, #0]
 80031c6:	4650      	mov	r0, sl
 80031c8:	2258      	movs	r2, #88	; 0x58
 80031ca:	237c      	movs	r3, #124	; 0x7c
 80031cc:	218f      	movs	r1, #143	; 0x8f
 80031ce:	f7ff fd5c 	bl	8002c8a <_ZN8touchgfx8Drawable11setPositionEssss>
 80031d2:	f8d4 3364 	ldr.w	r3, [r4, #868]	; 0x364
        linespace = space;
 80031d6:	f8a4 5398 	strh.w	r5, [r4, #920]	; 0x398
        boundingArea = calculateBoundingArea();
 80031da:	4651      	mov	r1, sl
 80031dc:	4630      	mov	r0, r6
 80031de:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 80031e2:	f8c4 7394 	str.w	r7, [r4, #916]	; 0x394
        boundingArea = calculateBoundingArea();
 80031e6:	4798      	blx	r3
 80031e8:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 80031ec:	f504 7368 	add.w	r3, r4, #928	; 0x3a0
 80031f0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    txtNapiecieBaterii.setWildcard(txtNapiecieBateriiBuffer);
 80031f4:	f504 7371 	add.w	r3, r4, #964	; 0x3c4
 80031f8:	f8c4 33ac 	str.w	r3, [r4, #940]	; 0x3ac
 80031fc:	4b19      	ldr	r3, [pc, #100]	; (8003264 <_ZN15Screen1ViewBaseC1Ev+0x3d0>)
    txtNapiecieBateriiBuffer[0] = 0;
 80031fe:	f8a4 53c4 	strh.w	r5, [r4, #964]	; 0x3c4
 8003202:	930a      	str	r3, [sp, #40]	; 0x28
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 8003204:	1d25      	adds	r5, r4, #4
 8003206:	2308      	movs	r3, #8
    txtNapiecieBaterii.setTypedText(touchgfx::TypedText(T___SINGLEUSE_JY89));
 8003208:	a90a      	add	r1, sp, #40	; 0x28
 800320a:	4650      	mov	r0, sl
 800320c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003210:	f00c fad2 	bl	800f7b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003214:	ee18 1a10 	vmov	r1, s16
 8003218:	4628      	mov	r0, r5
 800321a:	f009 f8df 	bl	800c3dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800321e:	ee1a 1a10 	vmov	r1, s20
 8003222:	4628      	mov	r0, r5
 8003224:	f009 f8da 	bl	800c3dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003228:	ee1a 1a90 	vmov	r1, s21
 800322c:	4628      	mov	r0, r5
 800322e:	f009 f8d5 	bl	800c3dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003232:	ee18 1a90 	vmov	r1, s17
 8003236:	4628      	mov	r0, r5
 8003238:	e016      	b.n	8003268 <_ZN15Screen1ViewBaseC1Ev+0x3d4>
 800323a:	bf00      	nop
 800323c:	08024058 	.word	0x08024058
 8003240:	08023e5c 	.word	0x08023e5c
 8003244:	08024028 	.word	0x08024028
 8003248:	08002bdd 	.word	0x08002bdd
 800324c:	08024040 	.word	0x08024040
 8003250:	08002b09 	.word	0x08002b09
 8003254:	ff0099cc 	.word	0xff0099cc
 8003258:	ff006699 	.word	0xff006699
 800325c:	ff003366 	.word	0xff003366
 8003260:	ff336699 	.word	0xff336699
 8003264:	08023620 	.word	0x08023620
 8003268:	f009 f8b8 	bl	800c3dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800326c:	ee19 1a10 	vmov	r1, s18
 8003270:	4628      	mov	r0, r5
 8003272:	f009 f8b3 	bl	800c3dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003276:	ee19 1a90 	vmov	r1, s19
 800327a:	4628      	mov	r0, r5
 800327c:	f009 f8ae 	bl	800c3dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003280:	4649      	mov	r1, r9
 8003282:	4628      	mov	r0, r5
 8003284:	f009 f8aa 	bl	800c3dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003288:	4641      	mov	r1, r8
 800328a:	4628      	mov	r0, r5
 800328c:	f009 f8a6 	bl	800c3dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003290:	ee1b 1a10 	vmov	r1, s22
 8003294:	4628      	mov	r0, r5
 8003296:	f009 f8a1 	bl	800c3dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800329a:	4659      	mov	r1, fp
 800329c:	4628      	mov	r0, r5
 800329e:	f009 f89d 	bl	800c3dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80032a2:	4628      	mov	r0, r5
 80032a4:	4651      	mov	r1, sl
 80032a6:	f009 f899 	bl	800c3dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80032aa:	4620      	mov	r0, r4
 80032ac:	b00d      	add	sp, #52	; 0x34
 80032ae:	ecbd 8b08 	vpop	{d8-d11}
 80032b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80032b6:	bf00      	nop

080032b8 <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
 80032b8:	2000      	movs	r0, #0
 80032ba:	4770      	bx	lr

080032bc <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
    {
        widgetWidth = widgetRect.width;
 80032bc:	888b      	ldrh	r3, [r1, #4]
 80032be:	8083      	strh	r3, [r0, #4]
        return true;
    }
 80032c0:	2001      	movs	r0, #1
 80032c2:	4770      	bx	lr

080032c4 <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
 80032c4:	4770      	bx	lr

080032c6 <_ZN8touchgfx17AbstractDataGraph8setAlphaEh>:
     *
     * @note All graph elements have to take this alpha into consideration.
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 80032c6:	f880 102c 	strb.w	r1, [r0, #44]	; 0x2c
    }
 80032ca:	4770      	bx	lr

080032cc <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>:
     * @param  min The minimum x value.
     * @param  max The maximum x value.
     *
     * @note The graph as well as the area above and below are automatically redrawn (invalidated).
     */
    virtual void setGraphRangeX(int min, int max)
 80032cc:	b410      	push	{r4}
    {
        setGraphRangeXScaled(int2scaledX(min), int2scaledX(max));
 80032ce:	6803      	ldr	r3, [r0, #0]
     *
     * @note For internal use.
     */
    FORCE_INLINE_FUNCTION int int2scaledX(int i) const
    {
        return int2scaled(i, xScale);
 80032d0:	6b04      	ldr	r4, [r0, #48]	; 0x30
        setGraphRangeXScaled(int2scaledX(min), int2scaledX(max));
 80032d2:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 80032d6:	4362      	muls	r2, r4
 80032d8:	4361      	muls	r1, r4
    }
 80032da:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeXScaled(int2scaledX(min), int2scaledX(max));
 80032de:	4718      	bx	r3

080032e0 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff>:
     *
     * @return The product of the two numbers, rounded to nearest integer value.
     */
    FORCE_INLINE_FUNCTION static int float2scaled(float f, int scale)
    {
        const float fs = f * (float)scale;
 80032e0:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
        setGraphRangeXScaled(float2scaledX(min), float2scaledX(max));
 80032e4:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 80032e6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setGraphRangeXScaled(float2scaledX(min), float2scaledX(max));
 80032ea:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
        const float fs = f * (float)scale;
 80032ee:	ee20 0a27 	vmul.f32	s0, s0, s15
        if (fs >= 0)
 80032f2:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80032f6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80032fa:	db17      	blt.n	800332c <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff+0x4c>
        {
            return (int)(fs + 0.5f);
 80032fc:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8003300:	ee30 0a07 	vadd.f32	s0, s0, s14
 8003304:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 8003308:	ee17 1a10 	vmov	r1, s14
        const float fs = f * (float)scale;
 800330c:	ee60 0aa7 	vmul.f32	s1, s1, s15
        if (fs >= 0)
 8003310:	eef5 0ac0 	vcmpe.f32	s1, #0.0
 8003314:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003318:	db1c      	blt.n	8003354 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff+0x74>
            return (int)(fs + 0.5f);
 800331a:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 800331e:	ee70 0aa7 	vadd.f32	s1, s1, s15
 8003322:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 8003326:	ee17 2a90 	vmov	r2, s15
        setGraphRangeXScaled(float2scaledX(min), float2scaledX(max));
 800332a:	4718      	bx	r3
        }
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 800332c:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 8003330:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8003334:	ee17 2a10 	vmov	r2, s14
 8003338:	ee30 0a66 	vsub.f32	s0, s0, s13
 800333c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8003340:	ee30 0a26 	vadd.f32	s0, s0, s13
 8003344:	1e51      	subs	r1, r2, #1
 8003346:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 800334a:	ee10 2a10 	vmov	r2, s0
 800334e:	440a      	add	r2, r1
 8003350:	4611      	mov	r1, r2
 8003352:	e7db      	b.n	800330c <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff+0x2c>
 8003354:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 8003358:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800335c:	ee17 2a90 	vmov	r2, s15
 8003360:	ee70 0ac7 	vsub.f32	s1, s1, s14
 8003364:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 8003368:	ee70 0a87 	vadd.f32	s1, s1, s14
 800336c:	3a01      	subs	r2, #1
 800336e:	eefd 0ae0 	vcvt.s32.f32	s1, s1
 8003372:	ee10 ca90 	vmov	ip, s1
 8003376:	4494      	add	ip, r2
 8003378:	4662      	mov	r2, ip
 800337a:	e7d6      	b.n	800332a <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff+0x4a>

0800337c <_ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbi>:
    virtual void setGraphRangeXAuto(bool showYaxis = true, int margin = 0)
 800337c:	b410      	push	{r4}
        setGraphRangeXAutoScaled(showYaxis, int2scaledX(margin));
 800337e:	6803      	ldr	r3, [r0, #0]
        return i * scale;
 8003380:	6b04      	ldr	r4, [r0, #48]	; 0x30
        setGraphRangeXAutoScaled(showYaxis, int2scaledX(margin));
 8003382:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8003386:	4362      	muls	r2, r4
    }
 8003388:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeXAutoScaled(showYaxis, int2scaledX(margin));
 800338c:	4718      	bx	r3

0800338e <_ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbf>:
        const float fs = f * (float)scale;
 800338e:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
        setGraphRangeXAutoScaled(showYaxis, float2scaledX(margin));
 8003392:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 8003394:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setGraphRangeXAutoScaled(showYaxis, float2scaledX(margin));
 8003398:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
        const float fs = f * (float)scale;
 800339c:	ee27 0a80 	vmul.f32	s0, s15, s0
        if (fs >= 0)
 80033a0:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80033a4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80033a8:	db08      	blt.n	80033bc <_ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbf+0x2e>
            return (int)(fs + 0.5f);
 80033aa:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 80033ae:	ee30 0a27 	vadd.f32	s0, s0, s15
 80033b2:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 80033b6:	ee17 2a90 	vmov	r2, s15
        setGraphRangeXAutoScaled(showYaxis, float2scaledX(margin));
 80033ba:	4718      	bx	r3
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 80033bc:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 80033c0:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80033c4:	ee17 2a90 	vmov	r2, s15
 80033c8:	ee30 0a47 	vsub.f32	s0, s0, s14
 80033cc:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 80033d0:	ee30 0a07 	vadd.f32	s0, s0, s14
 80033d4:	3a01      	subs	r2, #1
 80033d6:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 80033da:	ee10 ca10 	vmov	ip, s0
 80033de:	4494      	add	ip, r2
 80033e0:	4662      	mov	r2, ip
 80033e2:	e7ea      	b.n	80033ba <_ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbf+0x2c>

080033e4 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEii>:
    virtual void setGraphRangeY(int min, int max)
 80033e4:	b410      	push	{r4}
        setGraphRangeYScaled(int2scaledY(min), int2scaledY(max));
 80033e6:	6803      	ldr	r3, [r0, #0]
        return int2scaled(i, yScale);
 80033e8:	6b44      	ldr	r4, [r0, #52]	; 0x34
        setGraphRangeYScaled(int2scaledY(min), int2scaledY(max));
 80033ea:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 80033ee:	4362      	muls	r2, r4
 80033f0:	4361      	muls	r1, r4
    }
 80033f2:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeYScaled(int2scaledY(min), int2scaledY(max));
 80033f6:	4718      	bx	r3

080033f8 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff>:
        const float fs = f * (float)scale;
 80033f8:	edd0 7a0d 	vldr	s15, [r0, #52]	; 0x34
        setGraphRangeYScaled(float2scaledY(min), float2scaledY(max));
 80033fc:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 80033fe:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setGraphRangeYScaled(float2scaledY(min), float2scaledY(max));
 8003402:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
        const float fs = f * (float)scale;
 8003406:	ee20 0a27 	vmul.f32	s0, s0, s15
        if (fs >= 0)
 800340a:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 800340e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003412:	db17      	blt.n	8003444 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff+0x4c>
            return (int)(fs + 0.5f);
 8003414:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8003418:	ee30 0a07 	vadd.f32	s0, s0, s14
 800341c:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 8003420:	ee17 1a10 	vmov	r1, s14
        const float fs = f * (float)scale;
 8003424:	ee60 0aa7 	vmul.f32	s1, s1, s15
        if (fs >= 0)
 8003428:	eef5 0ac0 	vcmpe.f32	s1, #0.0
 800342c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003430:	db1c      	blt.n	800346c <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff+0x74>
            return (int)(fs + 0.5f);
 8003432:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8003436:	ee70 0aa7 	vadd.f32	s1, s1, s15
 800343a:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 800343e:	ee17 2a90 	vmov	r2, s15
        setGraphRangeYScaled(float2scaledY(min), float2scaledY(max));
 8003442:	4718      	bx	r3
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8003444:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 8003448:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800344c:	ee17 2a10 	vmov	r2, s14
 8003450:	ee30 0a66 	vsub.f32	s0, s0, s13
 8003454:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8003458:	ee30 0a26 	vadd.f32	s0, s0, s13
 800345c:	1e51      	subs	r1, r2, #1
 800345e:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8003462:	ee10 2a10 	vmov	r2, s0
 8003466:	440a      	add	r2, r1
 8003468:	4611      	mov	r1, r2
 800346a:	e7db      	b.n	8003424 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff+0x2c>
 800346c:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 8003470:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8003474:	ee17 2a90 	vmov	r2, s15
 8003478:	ee70 0ac7 	vsub.f32	s1, s1, s14
 800347c:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 8003480:	ee70 0a87 	vadd.f32	s1, s1, s14
 8003484:	3a01      	subs	r2, #1
 8003486:	eefd 0ae0 	vcvt.s32.f32	s1, s1
 800348a:	ee10 ca90 	vmov	ip, s1
 800348e:	4494      	add	ip, r2
 8003490:	4662      	mov	r2, ip
 8003492:	e7d6      	b.n	8003442 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff+0x4a>

08003494 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbi>:
    virtual void setGraphRangeYAuto(bool showXaxis = true, int margin = 0)
 8003494:	b410      	push	{r4}
        setGraphRangeYAutoScaled(showXaxis, int2scaledY(margin));
 8003496:	6803      	ldr	r3, [r0, #0]
        return i * scale;
 8003498:	6b44      	ldr	r4, [r0, #52]	; 0x34
        setGraphRangeYAutoScaled(showXaxis, int2scaledY(margin));
 800349a:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 800349e:	4362      	muls	r2, r4
    }
 80034a0:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeYAutoScaled(showXaxis, int2scaledY(margin));
 80034a4:	4718      	bx	r3

080034a6 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbf>:
        const float fs = f * (float)scale;
 80034a6:	edd0 7a0d 	vldr	s15, [r0, #52]	; 0x34
        setGraphRangeYAutoScaled(showXaxis, float2scaledY(margin));
 80034aa:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 80034ac:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setGraphRangeYAutoScaled(showXaxis, float2scaledY(margin));
 80034b0:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
        const float fs = f * (float)scale;
 80034b4:	ee27 0a80 	vmul.f32	s0, s15, s0
        if (fs >= 0)
 80034b8:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80034bc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80034c0:	db08      	blt.n	80034d4 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbf+0x2e>
            return (int)(fs + 0.5f);
 80034c2:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 80034c6:	ee30 0a27 	vadd.f32	s0, s0, s15
 80034ca:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 80034ce:	ee17 2a90 	vmov	r2, s15
        setGraphRangeYAutoScaled(showXaxis, float2scaledY(margin));
 80034d2:	4718      	bx	r3
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 80034d4:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 80034d8:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80034dc:	ee17 2a90 	vmov	r2, s15
 80034e0:	ee30 0a47 	vsub.f32	s0, s0, s14
 80034e4:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 80034e8:	ee30 0a07 	vadd.f32	s0, s0, s14
 80034ec:	3a01      	subs	r2, #1
 80034ee:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 80034f2:	ee10 ca10 	vmov	ip, s0
 80034f6:	4494      	add	ip, r2
 80034f8:	4662      	mov	r2, ip
 80034fa:	e7ea      	b.n	80034d2 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbf+0x2c>

080034fc <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMinAsIntEv>:
        return scaled2intX(graphRangeMinX);
 80034fc:	f8d0 312c 	ldr.w	r3, [r0, #300]	; 0x12c
     *
     * @note For internal use.
     */
    FORCE_INLINE_FUNCTION int scaled2intX(int i) const
    {
        return scaled2int(i, xScale);
 8003500:	6b02      	ldr	r2, [r0, #48]	; 0x30
        if (i >= 0)
 8003502:	2b00      	cmp	r3, #0
 8003504:	db07      	blt.n	8003516 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMinAsIntEv+0x1a>
            return ((i * 2 + scale) / scale) / 2;
 8003506:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 800350a:	fb93 f0f2 	sdiv	r0, r3, r2
 800350e:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003512:	1040      	asrs	r0, r0, #1
 8003514:	4770      	bx	lr
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8003516:	f06f 0001 	mvn.w	r0, #1
 800351a:	fb00 2003 	mla	r0, r0, r3, r2
 800351e:	3801      	subs	r0, #1
 8003520:	fb90 f0f2 	sdiv	r0, r0, r2
 8003524:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003528:	1040      	asrs	r0, r0, #1
 800352a:	4240      	negs	r0, r0
    }
 800352c:	4770      	bx	lr

0800352e <_ZNK8touchgfx17AbstractDataGraph24getGraphRangeXMinAsFloatEv>:
     *
     * @return The number divided by the scale.
     */
    FORCE_INLINE_FUNCTION static float scaled2float(int i, int scale)
    {
        return (float)i / (float)scale;
 800352e:	edd0 7a4b 	vldr	s15, [r0, #300]	; 0x12c
 8003532:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8003536:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
 800353a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 800353e:	ee80 0a27 	vdiv.f32	s0, s0, s15
 8003542:	4770      	bx	lr

08003544 <_ZNK8touchgfx17AbstractDataGraph23getGraphRangeXMinScaledEv>:
    }
 8003544:	f8d0 012c 	ldr.w	r0, [r0, #300]	; 0x12c
 8003548:	4770      	bx	lr

0800354a <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMaxAsIntEv>:
        return scaled2intX(graphRangeMaxX);
 800354a:	f8d0 3130 	ldr.w	r3, [r0, #304]	; 0x130
        return scaled2int(i, xScale);
 800354e:	6b02      	ldr	r2, [r0, #48]	; 0x30
        if (i >= 0)
 8003550:	2b00      	cmp	r3, #0
 8003552:	db07      	blt.n	8003564 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMaxAsIntEv+0x1a>
            return ((i * 2 + scale) / scale) / 2;
 8003554:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8003558:	fb93 f0f2 	sdiv	r0, r3, r2
 800355c:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003560:	1040      	asrs	r0, r0, #1
 8003562:	4770      	bx	lr
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8003564:	f06f 0001 	mvn.w	r0, #1
 8003568:	fb00 2003 	mla	r0, r0, r3, r2
 800356c:	3801      	subs	r0, #1
 800356e:	fb90 f0f2 	sdiv	r0, r0, r2
 8003572:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003576:	1040      	asrs	r0, r0, #1
 8003578:	4240      	negs	r0, r0
    }
 800357a:	4770      	bx	lr

0800357c <_ZNK8touchgfx17AbstractDataGraph24getGraphRangeXMaxAsFloatEv>:
        return (float)i / (float)scale;
 800357c:	edd0 7a4c 	vldr	s15, [r0, #304]	; 0x130
 8003580:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8003584:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
 8003588:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 800358c:	ee80 0a27 	vdiv.f32	s0, s0, s15
 8003590:	4770      	bx	lr

08003592 <_ZNK8touchgfx17AbstractDataGraph23getGraphRangeXMaxScaledEv>:
    }
 8003592:	f8d0 0130 	ldr.w	r0, [r0, #304]	; 0x130
 8003596:	4770      	bx	lr

08003598 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMinAsIntEv>:
        return scaled2intY(graphRangeMinY);
 8003598:	f8d0 3134 	ldr.w	r3, [r0, #308]	; 0x134
        return scaled2int(i, yScale);
 800359c:	6b42      	ldr	r2, [r0, #52]	; 0x34
        if (i >= 0)
 800359e:	2b00      	cmp	r3, #0
 80035a0:	db07      	blt.n	80035b2 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMinAsIntEv+0x1a>
            return ((i * 2 + scale) / scale) / 2;
 80035a2:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80035a6:	fb93 f0f2 	sdiv	r0, r3, r2
 80035aa:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 80035ae:	1040      	asrs	r0, r0, #1
 80035b0:	4770      	bx	lr
        return -(((-i * 2 + scale - 1) / scale) / 2);
 80035b2:	f06f 0001 	mvn.w	r0, #1
 80035b6:	fb00 2003 	mla	r0, r0, r3, r2
 80035ba:	3801      	subs	r0, #1
 80035bc:	fb90 f0f2 	sdiv	r0, r0, r2
 80035c0:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 80035c4:	1040      	asrs	r0, r0, #1
 80035c6:	4240      	negs	r0, r0
    }
 80035c8:	4770      	bx	lr

080035ca <_ZNK8touchgfx17AbstractDataGraph24getGraphRangeYMinAsFloatEv>:
        return (float)i / (float)scale;
 80035ca:	edd0 7a4d 	vldr	s15, [r0, #308]	; 0x134
 80035ce:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 80035d2:	edd0 7a0d 	vldr	s15, [r0, #52]	; 0x34
 80035d6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 80035da:	ee80 0a27 	vdiv.f32	s0, s0, s15
 80035de:	4770      	bx	lr

080035e0 <_ZNK8touchgfx17AbstractDataGraph23getGraphRangeYMinScaledEv>:
    }
 80035e0:	f8d0 0134 	ldr.w	r0, [r0, #308]	; 0x134
 80035e4:	4770      	bx	lr

080035e6 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMaxAsIntEv>:
        return scaled2intY(graphRangeMaxY);
 80035e6:	f8d0 3138 	ldr.w	r3, [r0, #312]	; 0x138
        return scaled2int(i, yScale);
 80035ea:	6b42      	ldr	r2, [r0, #52]	; 0x34
        if (i >= 0)
 80035ec:	2b00      	cmp	r3, #0
 80035ee:	db07      	blt.n	8003600 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMaxAsIntEv+0x1a>
            return ((i * 2 + scale) / scale) / 2;
 80035f0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80035f4:	fb93 f0f2 	sdiv	r0, r3, r2
 80035f8:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 80035fc:	1040      	asrs	r0, r0, #1
 80035fe:	4770      	bx	lr
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8003600:	f06f 0001 	mvn.w	r0, #1
 8003604:	fb00 2003 	mla	r0, r0, r3, r2
 8003608:	3801      	subs	r0, #1
 800360a:	fb90 f0f2 	sdiv	r0, r0, r2
 800360e:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003612:	1040      	asrs	r0, r0, #1
 8003614:	4240      	negs	r0, r0
    }
 8003616:	4770      	bx	lr

08003618 <_ZNK8touchgfx17AbstractDataGraph24getGraphRangeYMaxAsFloatEv>:
        return (float)i / (float)scale;
 8003618:	edd0 7a4e 	vldr	s15, [r0, #312]	; 0x138
 800361c:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8003620:	edd0 7a0d 	vldr	s15, [r0, #52]	; 0x34
 8003624:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 8003628:	ee80 0a27 	vdiv.f32	s0, s0, s15
 800362c:	4770      	bx	lr

0800362e <_ZNK8touchgfx17AbstractDataGraph23getGraphRangeYMaxScaledEv>:
    }
 800362e:	f8d0 0138 	ldr.w	r0, [r0, #312]	; 0x138
 8003632:	4770      	bx	lr

08003634 <_ZN8touchgfx16DynamicDataGraph8setScaleEib>:
     * @see getScale
     *
     * @note The current xAxisFactor, xAxisOffet and xGraphRange values are updated to reflect the
     *       new scale being set.
     */
    virtual void setScale(int scale, bool updateData = false)
 8003634:	b570      	push	{r4, r5, r6, lr}
    {
        setScaleX(scale, updateData);
 8003636:	6803      	ldr	r3, [r0, #0]
    virtual void setScale(int scale, bool updateData = false)
 8003638:	4604      	mov	r4, r0
        setScaleX(scale, updateData);
 800363a:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
    virtual void setScale(int scale, bool updateData = false)
 800363e:	460d      	mov	r5, r1
 8003640:	4616      	mov	r6, r2
        setScaleX(scale, updateData);
 8003642:	4798      	blx	r3
        setScaleY(scale, updateData);
 8003644:	6823      	ldr	r3, [r4, #0]
 8003646:	4632      	mov	r2, r6
 8003648:	4629      	mov	r1, r5
 800364a:	4620      	mov	r0, r4
 800364c:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
    }
 8003650:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setScaleY(scale, updateData);
 8003654:	4718      	bx	r3

08003656 <_ZNK8touchgfx16DynamicDataGraph8getScaleEv>:
     *
     * @see setScale
     */
    virtual int getScale() const
    {
        return getScaleY();
 8003656:	6803      	ldr	r3, [r0, #0]
 8003658:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 800365c:	4718      	bx	r3

0800365e <_ZNK8touchgfx16DynamicDataGraph17getGraphRangeXMinEv>:
     *
     * @return The minimum x coordinate .
     */
    virtual int getGraphRangeXMin() const
    {
        return getGraphRangeXMinScaled();
 800365e:	6803      	ldr	r3, [r0, #0]
 8003660:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
 8003664:	4718      	bx	r3

08003666 <_ZNK8touchgfx16DynamicDataGraph17getGraphRangeXMaxEv>:
     *
     * @return The maximum x coordinate .
     */
    virtual int getGraphRangeXMax() const
    {
        return getGraphRangeXMaxScaled();
 8003666:	6803      	ldr	r3, [r0, #0]
 8003668:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 800366c:	4718      	bx	r3

0800366e <_ZN8touchgfx16DynamicDataGraph24setGraphRangeXAutoScaledEbi>:

    virtual void setGraphRangeYAutoScaled(bool showXaxis, int margin);

    virtual void setGraphRangeXAutoScaled(bool /*showYaxis*/, int margin)
    {
        setGraphRangeXScaled(-scaled2intX(margin), (usedCapacity - 1) + scaled2intX(margin));
 800366e:	6803      	ldr	r3, [r0, #0]
        if (i >= 0)
 8003670:	2a00      	cmp	r2, #0
    virtual void setGraphRangeXAutoScaled(bool /*showYaxis*/, int margin)
 8003672:	b410      	push	{r4}
        setGraphRangeXScaled(-scaled2intX(margin), (usedCapacity - 1) + scaled2intX(margin));
 8003674:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
        return scaled2int(i, xScale);
 8003678:	6b04      	ldr	r4, [r0, #48]	; 0x30
        if (i >= 0)
 800367a:	db0e      	blt.n	800369a <_ZN8touchgfx16DynamicDataGraph24setGraphRangeXAutoScaledEbi+0x2c>
            return ((i * 2 + scale) / scale) / 2;
 800367c:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8003680:	fb92 f1f4 	sdiv	r1, r2, r4
 8003684:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8003688:	1049      	asrs	r1, r1, #1
        setGraphRangeXScaled(-scaled2intX(margin), (usedCapacity - 1) + scaled2intX(margin));
 800368a:	f9b0 211e 	ldrsh.w	r2, [r0, #286]	; 0x11e
    }
 800368e:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeXScaled(-scaled2intX(margin), (usedCapacity - 1) + scaled2intX(margin));
 8003692:	3a01      	subs	r2, #1
 8003694:	440a      	add	r2, r1
 8003696:	4249      	negs	r1, r1
 8003698:	4718      	bx	r3
        return -(((-i * 2 + scale - 1) / scale) / 2);
 800369a:	f06f 0101 	mvn.w	r1, #1
 800369e:	fb01 4102 	mla	r1, r1, r2, r4
 80036a2:	3901      	subs	r1, #1
 80036a4:	fb91 f1f4 	sdiv	r1, r1, r4
 80036a8:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 80036ac:	1049      	asrs	r1, r1, #1
 80036ae:	4249      	negs	r1, r1
 80036b0:	e7eb      	b.n	800368a <_ZN8touchgfx16DynamicDataGraph24setGraphRangeXAutoScaledEbi+0x1c>

080036b2 <_ZN8touchgfx16DynamicDataGraph13setXAxisScaleEi>:

    /// @cond
    TOUCHGFX_DEPRECATED("Please use setXAxisFactor()", virtual void setXAxisScale(int scale))
    {
        setXAxisFactor(scale);
 80036b2:	6803      	ldr	r3, [r0, #0]
 80036b4:	f8d3 313c 	ldr.w	r3, [r3, #316]	; 0x13c
 80036b8:	4718      	bx	r3

080036ba <_ZN8touchgfx16DynamicDataGraph14setXAxisFactorEi>:
        return i * scale;
 80036ba:	6b02      	ldr	r2, [r0, #48]	; 0x30
     *
     * @param  factor The x axis factor.
     */
    virtual void setXAxisFactor(int factor)
    {
        setXAxisFactorScaled(int2scaledX(factor));
 80036bc:	6803      	ldr	r3, [r0, #0]
 80036be:	4351      	muls	r1, r2
 80036c0:	f8d3 3148 	ldr.w	r3, [r3, #328]	; 0x148
 80036c4:	4718      	bx	r3

080036c6 <_ZN8touchgfx16DynamicDataGraph13setXAxisScaleEf>:
    }

    /// @cond
    TOUCHGFX_DEPRECATED("Please use setXAxisFactor()", virtual void setXAxisScale(float scale))
    {
        setXAxisFactor(scale);
 80036c6:	6803      	ldr	r3, [r0, #0]
 80036c8:	f8d3 3144 	ldr.w	r3, [r3, #324]	; 0x144
 80036cc:	4718      	bx	r3

080036ce <_ZN8touchgfx16DynamicDataGraph14setXAxisFactorEf>:
        const float fs = f * (float)scale;
 80036ce:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
    /// @endcond

    /** @copydoc setXAxisFactor(int) */
    virtual void setXAxisFactor(float factor)
    {
        setXAxisFactorScaled(float2scaledX(factor));
 80036d2:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 80036d4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setXAxisFactorScaled(float2scaledX(factor));
 80036d8:	f8d3 3148 	ldr.w	r3, [r3, #328]	; 0x148
        const float fs = f * (float)scale;
 80036dc:	ee27 0a80 	vmul.f32	s0, s15, s0
        if (fs >= 0)
 80036e0:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80036e4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80036e8:	db08      	blt.n	80036fc <_ZN8touchgfx16DynamicDataGraph14setXAxisFactorEf+0x2e>
            return (int)(fs + 0.5f);
 80036ea:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 80036ee:	ee30 0a27 	vadd.f32	s0, s0, s15
 80036f2:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 80036f6:	ee17 1a90 	vmov	r1, s15
        setXAxisFactorScaled(float2scaledX(factor));
 80036fa:	4718      	bx	r3
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 80036fc:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8003700:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8003704:	ee17 2a90 	vmov	r2, s15
 8003708:	ee30 0a47 	vsub.f32	s0, s0, s14
 800370c:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 8003710:	ee30 0a07 	vadd.f32	s0, s0, s14
 8003714:	1e51      	subs	r1, r2, #1
 8003716:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 800371a:	ee10 2a10 	vmov	r2, s0
 800371e:	440a      	add	r2, r1
 8003720:	4611      	mov	r1, r2
 8003722:	e7ea      	b.n	80036fa <_ZN8touchgfx16DynamicDataGraph14setXAxisFactorEf+0x2c>

08003724 <_ZN8touchgfx16DynamicDataGraph20setXAxisFactorScaledEi>:
     *
     * @see setXAxisFactorScaled,setXAxisFactor
     */
    virtual void setXAxisFactorScaled(int factor)
    {
        xAxisFactor = factor;
 8003724:	f8c0 113c 	str.w	r1, [r0, #316]	; 0x13c
    }
 8003728:	4770      	bx	lr

0800372a <_ZNK8touchgfx16DynamicDataGraph18getXAxisScaleAsIntEv>:

    /// @cond
    TOUCHGFX_DEPRECATED("Please use getXAxisFactorAsInt()", virtual int getXAxisScaleAsInt() const)
    {
        return getXAxisFactorAsInt();
 800372a:	6803      	ldr	r3, [r0, #0]
 800372c:	f8d3 3150 	ldr.w	r3, [r3, #336]	; 0x150
 8003730:	4718      	bx	r3

08003732 <_ZNK8touchgfx16DynamicDataGraph19getXAxisFactorAsIntEv>:
     *
     * @return The x axis factor.
     */
    virtual int getXAxisFactorAsInt() const
    {
        return scaled2intX(getXAxisFactorScaled());
 8003732:	6803      	ldr	r3, [r0, #0]
    virtual int getXAxisFactorAsInt() const
 8003734:	b510      	push	{r4, lr}
        return scaled2intX(getXAxisFactorScaled());
 8003736:	f8d3 315c 	ldr.w	r3, [r3, #348]	; 0x15c
    virtual int getXAxisFactorAsInt() const
 800373a:	4604      	mov	r4, r0
        return scaled2intX(getXAxisFactorScaled());
 800373c:	4798      	blx	r3
        if (i >= 0)
 800373e:	2800      	cmp	r0, #0
        return scaled2int(i, xScale);
 8003740:	6b23      	ldr	r3, [r4, #48]	; 0x30
        if (i >= 0)
 8003742:	db07      	blt.n	8003754 <_ZNK8touchgfx16DynamicDataGraph19getXAxisFactorAsIntEv+0x22>
            return ((i * 2 + scale) / scale) / 2;
 8003744:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8003748:	fb90 f0f3 	sdiv	r0, r0, r3
 800374c:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003750:	1040      	asrs	r0, r0, #1
    }
 8003752:	bd10      	pop	{r4, pc}
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8003754:	f06f 0201 	mvn.w	r2, #1
 8003758:	fb02 3000 	mla	r0, r2, r0, r3
 800375c:	3801      	subs	r0, #1
 800375e:	fb90 f0f3 	sdiv	r0, r0, r3
 8003762:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003766:	1040      	asrs	r0, r0, #1
 8003768:	4240      	negs	r0, r0
        return scaled2intX(getXAxisFactorScaled());
 800376a:	e7f2      	b.n	8003752 <_ZNK8touchgfx16DynamicDataGraph19getXAxisFactorAsIntEv+0x20>

0800376c <_ZNK8touchgfx16DynamicDataGraph20getXAxisScaleAsFloatEv>:

    /// @cond
    TOUCHGFX_DEPRECATED("Please use getXAxisFactorAsFloat()", virtual float getXAxisScaleAsFloat() const)
    {
        return getXAxisFactorAsFloat();
 800376c:	6803      	ldr	r3, [r0, #0]
 800376e:	f8d3 3158 	ldr.w	r3, [r3, #344]	; 0x158
 8003772:	4718      	bx	r3

08003774 <_ZNK8touchgfx16DynamicDataGraph21getXAxisFactorAsFloatEv>:
    /// @endcond

    /** @copydoc getXAxisFactorAsInt() */
    virtual float getXAxisFactorAsFloat() const
    {
        return scaled2floatX(getXAxisFactorScaled());
 8003774:	6803      	ldr	r3, [r0, #0]
    virtual float getXAxisFactorAsFloat() const
 8003776:	b510      	push	{r4, lr}
        return scaled2floatX(getXAxisFactorScaled());
 8003778:	f8d3 315c 	ldr.w	r3, [r3, #348]	; 0x15c
    virtual float getXAxisFactorAsFloat() const
 800377c:	4604      	mov	r4, r0
        return scaled2floatX(getXAxisFactorScaled());
 800377e:	4798      	blx	r3
        return (float)i / (float)scale;
 8003780:	ee07 0a90 	vmov	s15, r0
 8003784:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8003788:	edd4 7a0c 	vldr	s15, [r4, #48]	; 0x30
 800378c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 8003790:	ee80 0a27 	vdiv.f32	s0, s0, s15
 8003794:	bd10      	pop	{r4, pc}

08003796 <_ZNK8touchgfx16DynamicDataGraph20getXAxisFactorScaledEv>:
     * @see getXAxisFactorAsInt, getXAxisFactorAsFloat, setXAxisFactor
     */
    virtual int getXAxisFactorScaled() const
    {
        return xAxisFactor;
    }
 8003796:	f8d0 013c 	ldr.w	r0, [r0, #316]	; 0x13c
 800379a:	4770      	bx	lr

0800379c <_ZN8touchgfx16DynamicDataGraph14setXAxisOffsetEi>:
        return i * scale;
 800379c:	6b02      	ldr	r2, [r0, #48]	; 0x30
     *
     * @param  offset The x axis offset.
     */
    virtual void setXAxisOffset(int offset)
    {
        setXAxisOffsetScaled(int2scaledX(offset));
 800379e:	6803      	ldr	r3, [r0, #0]
 80037a0:	4351      	muls	r1, r2
 80037a2:	f8d3 3168 	ldr.w	r3, [r3, #360]	; 0x168
 80037a6:	4718      	bx	r3

080037a8 <_ZN8touchgfx16DynamicDataGraph14setXAxisOffsetEf>:
        const float fs = f * (float)scale;
 80037a8:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
    }

    /** @copydoc setXAxisOffset(int) */
    virtual void setXAxisOffset(float offset)
    {
        setXAxisOffsetScaled(float2scaledX(offset));
 80037ac:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 80037ae:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setXAxisOffsetScaled(float2scaledX(offset));
 80037b2:	f8d3 3168 	ldr.w	r3, [r3, #360]	; 0x168
        const float fs = f * (float)scale;
 80037b6:	ee27 0a80 	vmul.f32	s0, s15, s0
        if (fs >= 0)
 80037ba:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80037be:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80037c2:	db08      	blt.n	80037d6 <_ZN8touchgfx16DynamicDataGraph14setXAxisOffsetEf+0x2e>
            return (int)(fs + 0.5f);
 80037c4:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 80037c8:	ee30 0a27 	vadd.f32	s0, s0, s15
 80037cc:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 80037d0:	ee17 1a90 	vmov	r1, s15
        setXAxisOffsetScaled(float2scaledX(offset));
 80037d4:	4718      	bx	r3
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 80037d6:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 80037da:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80037de:	ee17 2a90 	vmov	r2, s15
 80037e2:	ee30 0a47 	vsub.f32	s0, s0, s14
 80037e6:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 80037ea:	ee30 0a07 	vadd.f32	s0, s0, s14
 80037ee:	1e51      	subs	r1, r2, #1
 80037f0:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 80037f4:	ee10 2a10 	vmov	r2, s0
 80037f8:	440a      	add	r2, r1
 80037fa:	4611      	mov	r1, r2
 80037fc:	e7ea      	b.n	80037d4 <_ZN8touchgfx16DynamicDataGraph14setXAxisOffsetEf+0x2c>

080037fe <_ZN8touchgfx16DynamicDataGraph20setXAxisOffsetScaledEi>:
     *
     * @see setXAxisOffset, getXAxisOffsetScaled
     */
    virtual void setXAxisOffsetScaled(int offset)
    {
        xAxisOffset = offset;
 80037fe:	f8c0 1140 	str.w	r1, [r0, #320]	; 0x140
    }
 8003802:	4770      	bx	lr

08003804 <_ZNK8touchgfx16DynamicDataGraph19getXAxisOffsetAsIntEv>:
     *
     * @return The x axis offset.
     */
    virtual int getXAxisOffsetAsInt() const
    {
        return scaled2intX(getXAxisOffsetScaled());
 8003804:	6803      	ldr	r3, [r0, #0]
    virtual int getXAxisOffsetAsInt() const
 8003806:	b510      	push	{r4, lr}
        return scaled2intX(getXAxisOffsetScaled());
 8003808:	f8d3 3174 	ldr.w	r3, [r3, #372]	; 0x174
    virtual int getXAxisOffsetAsInt() const
 800380c:	4604      	mov	r4, r0
        return scaled2intX(getXAxisOffsetScaled());
 800380e:	4798      	blx	r3
        if (i >= 0)
 8003810:	2800      	cmp	r0, #0
        return scaled2int(i, xScale);
 8003812:	6b23      	ldr	r3, [r4, #48]	; 0x30
        if (i >= 0)
 8003814:	db07      	blt.n	8003826 <_ZNK8touchgfx16DynamicDataGraph19getXAxisOffsetAsIntEv+0x22>
            return ((i * 2 + scale) / scale) / 2;
 8003816:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 800381a:	fb90 f0f3 	sdiv	r0, r0, r3
 800381e:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003822:	1040      	asrs	r0, r0, #1
    }
 8003824:	bd10      	pop	{r4, pc}
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8003826:	f06f 0201 	mvn.w	r2, #1
 800382a:	fb02 3000 	mla	r0, r2, r0, r3
 800382e:	3801      	subs	r0, #1
 8003830:	fb90 f0f3 	sdiv	r0, r0, r3
 8003834:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003838:	1040      	asrs	r0, r0, #1
 800383a:	4240      	negs	r0, r0
        return scaled2intX(getXAxisOffsetScaled());
 800383c:	e7f2      	b.n	8003824 <_ZNK8touchgfx16DynamicDataGraph19getXAxisOffsetAsIntEv+0x20>

0800383e <_ZNK8touchgfx16DynamicDataGraph21getXAxisOffsetAsFloatEv>:

    /** @copydoc getXAxisOffsetAsInt() */
    virtual float getXAxisOffsetAsFloat() const
    {
        return scaled2floatX(getXAxisOffsetScaled());
 800383e:	6803      	ldr	r3, [r0, #0]
    virtual float getXAxisOffsetAsFloat() const
 8003840:	b510      	push	{r4, lr}
        return scaled2floatX(getXAxisOffsetScaled());
 8003842:	f8d3 3174 	ldr.w	r3, [r3, #372]	; 0x174
    virtual float getXAxisOffsetAsFloat() const
 8003846:	4604      	mov	r4, r0
        return scaled2floatX(getXAxisOffsetScaled());
 8003848:	4798      	blx	r3
        return (float)i / (float)scale;
 800384a:	ee07 0a90 	vmov	s15, r0
 800384e:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8003852:	edd4 7a0c 	vldr	s15, [r4, #48]	; 0x30
 8003856:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 800385a:	ee80 0a27 	vdiv.f32	s0, s0, s15
 800385e:	bd10      	pop	{r4, pc}

08003860 <_ZNK8touchgfx16DynamicDataGraph20getXAxisOffsetScaledEv>:
     * @see getXAxisOffsetAsInt, getXAxisOffsetAsFloat, setXAxisOffsetScaled, setXAxisOffset
     */
    virtual int getXAxisOffsetScaled() const
    {
        return xAxisOffset;
    }
 8003860:	f8d0 0140 	ldr.w	r0, [r0, #320]	; 0x140
 8003864:	4770      	bx	lr

08003866 <_ZNK8touchgfx16DynamicDataGraph9dataIndexEs>:
     * @return The index in the yValues array.
     */
    virtual int16_t dataIndex(int16_t screenIndex) const
    {
        return screenIndex;
    }
 8003866:	4608      	mov	r0, r1
 8003868:	4770      	bx	lr

0800386a <_ZNK8touchgfx16DynamicDataGraph12indexToXAxisEii>:
    }

    virtual int indexToXAxis(const int valueScaled, const int /*labelScaled*/) const
    {
        // Value is also index for these types of graphs.
        return (indexToGlobalIndex(scaled2intX(valueScaled)) * xAxisFactor) + xAxisOffset;
 800386a:	6803      	ldr	r3, [r0, #0]
        return scaled2int(i, xScale);
 800386c:	6b02      	ldr	r2, [r0, #48]	; 0x30
        return (indexToGlobalIndex(scaled2intX(valueScaled)) * xAxisFactor) + xAxisOffset;
 800386e:	f8d3 3184 	ldr.w	r3, [r3, #388]	; 0x184
        if (i >= 0)
 8003872:	2900      	cmp	r1, #0
    virtual int indexToXAxis(const int valueScaled, const int /*labelScaled*/) const
 8003874:	b510      	push	{r4, lr}
 8003876:	4604      	mov	r4, r0
        if (i >= 0)
 8003878:	db0e      	blt.n	8003898 <_ZNK8touchgfx16DynamicDataGraph12indexToXAxisEii+0x2e>
            return ((i * 2 + scale) / scale) / 2;
 800387a:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 800387e:	fb91 f1f2 	sdiv	r1, r1, r2
 8003882:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8003886:	1049      	asrs	r1, r1, #1
        return (indexToGlobalIndex(scaled2intX(valueScaled)) * xAxisFactor) + xAxisOffset;
 8003888:	b209      	sxth	r1, r1
 800388a:	4620      	mov	r0, r4
 800388c:	4798      	blx	r3
 800388e:	e9d4 234f 	ldrd	r2, r3, [r4, #316]	; 0x13c
    }
 8003892:	fb02 3000 	mla	r0, r2, r0, r3
 8003896:	bd10      	pop	{r4, pc}
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8003898:	f06f 0001 	mvn.w	r0, #1
 800389c:	fb00 2101 	mla	r1, r0, r1, r2
 80038a0:	3901      	subs	r1, #1
 80038a2:	fb91 f1f2 	sdiv	r1, r1, r2
 80038a6:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 80038aa:	1049      	asrs	r1, r1, #1
 80038ac:	4249      	negs	r1, r1
 80038ae:	e7eb      	b.n	8003888 <_ZNK8touchgfx16DynamicDataGraph12indexToXAxisEii+0x1e>

080038b0 <_ZNK8touchgfx16DynamicDataGraph9getScaleXEv>:
    virtual void setScaleX(int scale, bool updateData = false);

    virtual int getScaleX() const
    {
        return AbstractDataGraph::getScaleX();
    }
 80038b0:	6b00      	ldr	r0, [r0, #48]	; 0x30
 80038b2:	4770      	bx	lr

080038b4 <_ZNK8touchgfx16DynamicDataGraph9getScaleYEv>:
    virtual void setScaleY(int scale, bool updateData = false);

    virtual int getScaleY() const
    {
        return AbstractDataGraph::getScaleY();
    }
 80038b4:	6b40      	ldr	r0, [r0, #52]	; 0x34
 80038b6:	4770      	bx	lr

080038b8 <_ZN8touchgfx16DynamicDataGraph19setXAxisScaleScaledEi>:

    /// @cond
    TOUCHGFX_DEPRECATED("Please use setXAxisFactorScaled()", virtual void setXAxisScaleScaled(int scale))
    {
        setXAxisFactorScaled(scale);
 80038b8:	6803      	ldr	r3, [r0, #0]
 80038ba:	f8d3 3148 	ldr.w	r3, [r3, #328]	; 0x148
 80038be:	4718      	bx	r3

080038c0 <_ZNK8touchgfx16DynamicDataGraph19getXAxisScaleScaledEv>:
    /// @endcond

    /// @cond
    TOUCHGFX_DEPRECATED("Please use getXAxisFactorScaled()", virtual int getXAxisScaleScaled() const)
    {
        return getXAxisFactorScaled();
 80038c0:	6803      	ldr	r3, [r0, #0]
 80038c2:	f8d3 315c 	ldr.w	r3, [r3, #348]	; 0x15c
 80038c6:	4718      	bx	r3

080038c8 <_ZNK8touchgfx16DynamicDataGraph16indexToScreenXQ5Es>:
        return i * scale;
 80038c8:	6b02      	ldr	r2, [r0, #48]	; 0x30
    }
    /// @endcond

    virtual CWRUtil::Q5 indexToScreenXQ5(int16_t index) const
    {
        return valueToScreenXQ5(int2scaledX(index));
 80038ca:	6803      	ldr	r3, [r0, #0]
 80038cc:	4351      	muls	r1, r2
 80038ce:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 80038d2:	4718      	bx	r3

080038d4 <_ZNK8touchgfx16DynamicDataGraph16indexToScreenYQ5Es>:
    }

    virtual CWRUtil::Q5 indexToScreenYQ5(int16_t index) const
    {
        return valueToScreenYQ5(yValues[dataIndex(index)]);
 80038d4:	6803      	ldr	r3, [r0, #0]
    virtual CWRUtil::Q5 indexToScreenYQ5(int16_t index) const
 80038d6:	b570      	push	{r4, r5, r6, lr}
        return valueToScreenYQ5(yValues[dataIndex(index)]);
 80038d8:	f8d3 5118 	ldr.w	r5, [r3, #280]	; 0x118
 80038dc:	f8d3 3180 	ldr.w	r3, [r3, #384]	; 0x180
 80038e0:	f8d0 6144 	ldr.w	r6, [r0, #324]	; 0x144
    virtual CWRUtil::Q5 indexToScreenYQ5(int16_t index) const
 80038e4:	4604      	mov	r4, r0
        return valueToScreenYQ5(yValues[dataIndex(index)]);
 80038e6:	4798      	blx	r3
 80038e8:	462b      	mov	r3, r5
 80038ea:	f856 1020 	ldr.w	r1, [r6, r0, lsl #2]
 80038ee:	4620      	mov	r0, r4
    }
 80038f0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        return valueToScreenYQ5(yValues[dataIndex(index)]);
 80038f4:	4718      	bx	r3

080038f6 <_ZNK8touchgfx21GraphWrapAndClearData18indexToGlobalIndexEs>:

    virtual void clear();

    virtual int32_t indexToGlobalIndex(int16_t index) const
    {
        return (this->dataCounter - this->usedCapacity) + index;
 80038f6:	f8d0 3148 	ldr.w	r3, [r0, #328]	; 0x148
 80038fa:	f9b0 011e 	ldrsh.w	r0, [r0, #286]	; 0x11e
 80038fe:	4419      	add	r1, r3
    }
 8003900:	1a08      	subs	r0, r1, r0
 8003902:	4770      	bx	lr

08003904 <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8003904:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
    }
 8003908:	4770      	bx	lr

0800390a <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
 800390a:	f890 0026 	ldrb.w	r0, [r0, #38]	; 0x26
 800390e:	4770      	bx	lr

08003910 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
     * overwritten in subclasses and return the minimal rectangle containing the shape. See
     * classes such as Circle for example implementations.
     *
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
 8003910:	b510      	push	{r4, lr}
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8003912:	2200      	movs	r2, #0
        return rect.width;
 8003914:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
        return rect.height;
 8003918:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 800391c:	8002      	strh	r2, [r0, #0]
 800391e:	8042      	strh	r2, [r0, #2]
 8003920:	8084      	strh	r4, [r0, #4]
 8003922:	80c1      	strh	r1, [r0, #6]
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
 8003924:	bd10      	pop	{r4, pc}

08003926 <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
 8003926:	2200      	movs	r2, #0
 8003928:	8002      	strh	r2, [r0, #0]
 800392a:	8042      	strh	r2, [r0, #2]
 800392c:	8082      	strh	r2, [r0, #4]
 800392e:	80c2      	strh	r2, [r0, #6]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8003930:	4770      	bx	lr

08003932 <_ZN8touchgfx25AbstractGraphElementNoCWR8setColorENS_9colortypeE>:
     *
     * @see getColor
     */
    virtual void setColor(colortype newColor)
    {
        color = newColor;
 8003932:	62c1      	str	r1, [r0, #44]	; 0x2c
    }
 8003934:	4770      	bx	lr

08003936 <_ZNK8touchgfx25AbstractGraphElementNoCWR8getColorEv>:
     * @see setColor
     */
    virtual colortype getColor() const
    {
        return color;
    }
 8003936:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 8003938:	4770      	bx	lr

0800393a <_ZNK8touchgfx25AbstractGraphElementNoCWR16drawCanvasWidgetERKNS_4RectE>:

    virtual bool drawCanvasWidget(const Rect&) const
    {
        return true;
    }
 800393a:	2001      	movs	r0, #1
 800393c:	4770      	bx	lr

0800393e <_ZN8touchgfx25AbstractGraphElementNoCWR10setPainterERNS_15AbstractPainterE>:
    void normalizeRect(Rect& r) const;

private:
    virtual void setPainter(AbstractPainter& /*painter*/)
    {
    }
 800393e:	4770      	bx	lr

08003940 <_ZN8touchgfx20GraphElementGridBase22invalidateGraphPointAtEs>:
        return lineWidth;
    }

    virtual void invalidateGraphPointAt(int16_t)
    {
    }
 8003940:	4770      	bx	lr

08003942 <_ZNK8touchgfx20GraphElementGridBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE>:
     *
     * @return The correctly scaled major interval.
     */
    virtual int getCorrectlyScaledMajorInterval(const AbstractDataGraph* graph) const
    {
        return majorGrid == 0 ? 0 : majorGrid->getCorrectlyScaledGridInterval(graph);
 8003942:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8003944:	b118      	cbz	r0, 800394e <_ZNK8touchgfx20GraphElementGridBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE+0xc>
 8003946:	6803      	ldr	r3, [r0, #0]
 8003948:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800394c:	4718      	bx	r3
    }
 800394e:	4770      	bx	lr

08003950 <_ZNK8touchgfx17GraphElementGridX13enclosingAreaEPKNS_17AbstractDataGraphE>:
    {
        return convertToGraphScaleX(graph, gridInterval, dataScale);
    }

protected:
    virtual Rect enclosingArea(const AbstractDataGraph* graph) const
 8003950:	b530      	push	{r4, r5, lr}
        return graphArea.getHeight() - (topPadding + bottomPadding);
 8003952:	f8b2 111a 	ldrh.w	r1, [r2, #282]	; 0x11a
        return topPadding;
 8003956:	f9b2 4114 	ldrsh.w	r4, [r2, #276]	; 0x114
        return rect.width;
 800395a:	f9b2 5040 	ldrsh.w	r5, [r2, #64]	; 0x40
        return graphArea.getHeight() - (topPadding + bottomPadding);
 800395e:	f8b2 2042 	ldrh.w	r2, [r2, #66]	; 0x42
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8003962:	8044      	strh	r4, [r0, #2]
 8003964:	4421      	add	r1, r4
 8003966:	1a52      	subs	r2, r2, r1
 8003968:	2100      	movs	r1, #0
 800396a:	8001      	strh	r1, [r0, #0]
 800396c:	8085      	strh	r5, [r0, #4]
 800396e:	80c2      	strh	r2, [r0, #6]
    {
        return Rect(0, graph->getGraphAreaPaddingTop(), graph->getGraphAreaWidthIncludingPadding(), graph->getGraphAreaHeight());
    }
 8003970:	bd30      	pop	{r4, r5, pc}

08003972 <_ZNK8touchgfx17GraphElementGridX8lineRectEssss>:

    virtual Rect lineRect(int16_t start, int16_t length, int16_t pos, int16_t width) const
 8003972:	b510      	push	{r4, lr}
 8003974:	8042      	strh	r2, [r0, #2]
 8003976:	f9bd 4008 	ldrsh.w	r4, [sp, #8]
 800397a:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 800397e:	8004      	strh	r4, [r0, #0]
 8003980:	8082      	strh	r2, [r0, #4]
 8003982:	80c3      	strh	r3, [r0, #6]
    {
        return Rect(pos, start, width, length);
    }
 8003984:	bd10      	pop	{r4, pc}

08003986 <_ZNK8touchgfx17GraphElementGridX22getGraphRangeMinScaledEPKNS_17AbstractDataGraphE>:

    virtual int getGraphRangeMinScaled(const AbstractDataGraph* graph) const
    {
        return graph->getGraphRangeXMinScaled();
 8003986:	680b      	ldr	r3, [r1, #0]
    virtual int getGraphRangeMinScaled(const AbstractDataGraph* graph) const
 8003988:	4608      	mov	r0, r1
        return graph->getGraphRangeXMinScaled();
 800398a:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
 800398e:	4718      	bx	r3

08003990 <_ZNK8touchgfx17GraphElementGridX22getGraphRangeMaxScaledEPKNS_17AbstractDataGraphE>:
    }

    virtual int getGraphRangeMaxScaled(const AbstractDataGraph* graph) const
    {
        return graph->getGraphRangeXMaxScaled();
 8003990:	680b      	ldr	r3, [r1, #0]
    virtual int getGraphRangeMaxScaled(const AbstractDataGraph* graph) const
 8003992:	4608      	mov	r0, r1
        return graph->getGraphRangeXMaxScaled();
 8003994:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8003998:	4718      	bx	r3

0800399a <_ZNK8touchgfx17GraphElementGridX17getGraphAreaStartEPKNS_17AbstractDataGraphE>:
    }

    virtual int getGraphAreaStart(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaPaddingTop();
    }
 800399a:	f9b1 0114 	ldrsh.w	r0, [r1, #276]	; 0x114
 800399e:	4770      	bx	lr

080039a0 <_ZNK8touchgfx17GraphElementGridX18getGraphAreaLengthEPKNS_17AbstractDataGraphE>:
 80039a0:	f8b1 0114 	ldrh.w	r0, [r1, #276]	; 0x114
 80039a4:	f8b1 311a 	ldrh.w	r3, [r1, #282]	; 0x11a
 80039a8:	4403      	add	r3, r0
 80039aa:	f8b1 0042 	ldrh.w	r0, [r1, #66]	; 0x42
 80039ae:	1ac0      	subs	r0, r0, r3

    virtual int getGraphAreaLength(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaHeight();
    }
 80039b0:	b200      	sxth	r0, r0
 80039b2:	4770      	bx	lr

080039b4 <_ZNK8touchgfx17GraphElementGridX20getGraphAreaStartPosEPKNS_17AbstractDataGraphE>:

    virtual int getGraphAreaStartPos(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaPaddingLeft();
    }
 80039b4:	f9b1 0116 	ldrsh.w	r0, [r1, #278]	; 0x116
 80039b8:	4770      	bx	lr

080039ba <_ZNK8touchgfx17GraphElementGridX18getGraphAreaEndPosEPKNS_17AbstractDataGraphE>:
        return graphArea.getWidth() - (leftPadding + rightPadding);
 80039ba:	f8b1 0116 	ldrh.w	r0, [r1, #278]	; 0x116
 80039be:	f8b1 3118 	ldrh.w	r3, [r1, #280]	; 0x118
 80039c2:	4403      	add	r3, r0
 80039c4:	f8b1 0040 	ldrh.w	r0, [r1, #64]	; 0x40
 80039c8:	1ac0      	subs	r0, r0, r3

    virtual int getGraphAreaEndPos(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaWidth();
    }
 80039ca:	b200      	sxth	r0, r0
 80039cc:	4770      	bx	lr

080039ce <_ZNK8touchgfx17GraphElementGridX15valueToScreenQ5EPKNS_17AbstractDataGraphEi>:
        return graph->valueToScreenXQ5(x);
 80039ce:	680b      	ldr	r3, [r1, #0]

    virtual CWRUtil::Q5 valueToScreenQ5(const AbstractDataGraph* graph, int value) const
 80039d0:	4608      	mov	r0, r1
        return graph->valueToScreenXQ5(x);
 80039d2:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 80039d6:	4611      	mov	r1, r2
 80039d8:	4718      	bx	r3

080039da <_ZNK8touchgfx17GraphElementGridY13enclosingAreaEPKNS_17AbstractDataGraphE>:
 80039da:	f8b2 1118 	ldrh.w	r1, [r2, #280]	; 0x118
    {
        return convertToGraphScaleY(graph, gridInterval, dataScale);
    }

protected:
    virtual Rect enclosingArea(const AbstractDataGraph* graph) const
 80039de:	b530      	push	{r4, r5, lr}
        return leftPadding;
 80039e0:	f9b2 5116 	ldrsh.w	r5, [r2, #278]	; 0x116
 80039e4:	8005      	strh	r5, [r0, #0]
        return graphArea.getWidth() - (leftPadding + rightPadding);
 80039e6:	186c      	adds	r4, r5, r1
 80039e8:	f8b2 1040 	ldrh.w	r1, [r2, #64]	; 0x40
        return rect.height;
 80039ec:	f9b2 2042 	ldrsh.w	r2, [r2, #66]	; 0x42
 80039f0:	80c2      	strh	r2, [r0, #6]
 80039f2:	1b09      	subs	r1, r1, r4
 80039f4:	2400      	movs	r4, #0
 80039f6:	8044      	strh	r4, [r0, #2]
 80039f8:	8081      	strh	r1, [r0, #4]
    {
        return Rect(graph->getGraphAreaPaddingLeft(), 0, graph->getGraphAreaWidth(), graph->getGraphAreaHeightIncludingPadding());
    }
 80039fa:	bd30      	pop	{r4, r5, pc}

080039fc <_ZNK8touchgfx17GraphElementGridY8lineRectEssss>:
 80039fc:	8002      	strh	r2, [r0, #0]
 80039fe:	8083      	strh	r3, [r0, #4]
 8003a00:	f9bd 2000 	ldrsh.w	r2, [sp]
 8003a04:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8003a08:	8042      	strh	r2, [r0, #2]
 8003a0a:	80c3      	strh	r3, [r0, #6]

    virtual Rect lineRect(int16_t start, int16_t length, int16_t pos, int16_t width) const
    {
        return Rect(start, pos, length, width);
    }
 8003a0c:	4770      	bx	lr

08003a0e <_ZNK8touchgfx17GraphElementGridY22getGraphRangeMinScaledEPKNS_17AbstractDataGraphE>:

    virtual int getGraphRangeMinScaled(const AbstractDataGraph* graph) const
    {
        return graph->getGraphRangeYMinScaled();
 8003a0e:	680b      	ldr	r3, [r1, #0]
    virtual int getGraphRangeMinScaled(const AbstractDataGraph* graph) const
 8003a10:	4608      	mov	r0, r1
        return graph->getGraphRangeYMinScaled();
 8003a12:	f8d3 30ec 	ldr.w	r3, [r3, #236]	; 0xec
 8003a16:	4718      	bx	r3

08003a18 <_ZNK8touchgfx17GraphElementGridY22getGraphRangeMaxScaledEPKNS_17AbstractDataGraphE>:
    }

    virtual int getGraphRangeMaxScaled(const AbstractDataGraph* graph) const
    {
        return graph->getGraphRangeYMaxScaled();
 8003a18:	680b      	ldr	r3, [r1, #0]
    virtual int getGraphRangeMaxScaled(const AbstractDataGraph* graph) const
 8003a1a:	4608      	mov	r0, r1
        return graph->getGraphRangeYMaxScaled();
 8003a1c:	f8d3 30f8 	ldr.w	r3, [r3, #248]	; 0xf8
 8003a20:	4718      	bx	r3

08003a22 <_ZNK8touchgfx17GraphElementGridY17getGraphAreaStartEPKNS_17AbstractDataGraphE>:
    }

    virtual int getGraphAreaStart(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaPaddingLeft();
    }
 8003a22:	f9b1 0116 	ldrsh.w	r0, [r1, #278]	; 0x116
 8003a26:	4770      	bx	lr

08003a28 <_ZNK8touchgfx17GraphElementGridY18getGraphAreaLengthEPKNS_17AbstractDataGraphE>:
 8003a28:	f8b1 0116 	ldrh.w	r0, [r1, #278]	; 0x116
 8003a2c:	f8b1 3118 	ldrh.w	r3, [r1, #280]	; 0x118
 8003a30:	4403      	add	r3, r0
 8003a32:	f8b1 0040 	ldrh.w	r0, [r1, #64]	; 0x40
 8003a36:	1ac0      	subs	r0, r0, r3

    virtual int getGraphAreaLength(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaWidth();
    }
 8003a38:	b200      	sxth	r0, r0
 8003a3a:	4770      	bx	lr

08003a3c <_ZNK8touchgfx17GraphElementGridY20getGraphAreaStartPosEPKNS_17AbstractDataGraphE>:

    virtual int getGraphAreaStartPos(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaPaddingTop();
    }
 8003a3c:	f9b1 0114 	ldrsh.w	r0, [r1, #276]	; 0x114
 8003a40:	4770      	bx	lr

08003a42 <_ZNK8touchgfx17GraphElementGridY18getGraphAreaEndPosEPKNS_17AbstractDataGraphE>:
        return graphArea.getHeight() - (topPadding + bottomPadding);
 8003a42:	f8b1 0114 	ldrh.w	r0, [r1, #276]	; 0x114
 8003a46:	f8b1 311a 	ldrh.w	r3, [r1, #282]	; 0x11a
 8003a4a:	4403      	add	r3, r0
 8003a4c:	f8b1 0042 	ldrh.w	r0, [r1, #66]	; 0x42
 8003a50:	1ac0      	subs	r0, r0, r3

    virtual int getGraphAreaEndPos(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaHeight();
    }
 8003a52:	b200      	sxth	r0, r0
 8003a54:	4770      	bx	lr

08003a56 <_ZNK8touchgfx17GraphElementGridY15valueToScreenQ5EPKNS_17AbstractDataGraphEi>:
        return graph->valueToScreenYQ5(y);
 8003a56:	680b      	ldr	r3, [r1, #0]

    virtual CWRUtil::Q5 valueToScreenQ5(const AbstractDataGraph* graph, int value) const
 8003a58:	4608      	mov	r0, r1
        return graph->valueToScreenYQ5(y);
 8003a5a:	f8d3 3118 	ldr.w	r3, [r3, #280]	; 0x118
 8003a5e:	4611      	mov	r1, r2
 8003a60:	4718      	bx	r3

08003a62 <_ZNK8touchgfx15GraphScrollData9dataIndexEs>:

    virtual int16_t addValue(int value);

    virtual int16_t dataIndex(int16_t screenIndex) const
    {
        return usedCapacity < maxCapacity ? screenIndex : (screenIndex + current) % maxCapacity;
 8003a62:	f9b0 211c 	ldrsh.w	r2, [r0, #284]	; 0x11c
 8003a66:	f9b0 311e 	ldrsh.w	r3, [r0, #286]	; 0x11e
 8003a6a:	4293      	cmp	r3, r2
 8003a6c:	db07      	blt.n	8003a7e <_ZNK8touchgfx15GraphScrollData9dataIndexEs+0x1c>
 8003a6e:	f9b0 314c 	ldrsh.w	r3, [r0, #332]	; 0x14c
 8003a72:	4419      	add	r1, r3
 8003a74:	fb91 f0f2 	sdiv	r0, r1, r2
 8003a78:	fb02 1110 	mls	r1, r2, r0, r1
 8003a7c:	b209      	sxth	r1, r1
    }
 8003a7e:	4608      	mov	r0, r1
 8003a80:	4770      	bx	lr

08003a82 <_ZNK8touchgfx15GraphScrollData10indexToXQ5Es>:

private:
    virtual CWRUtil::Q5 indexToXQ5(int16_t index) const
    {
        return CWRUtil::toQ5(index);
    }
 8003a82:	0148      	lsls	r0, r1, #5
 8003a84:	4770      	bx	lr

08003a86 <_ZN19ScreenGraphViewBaseD1Ev>:

class ScreenGraphViewBase : public touchgfx::View<ScreenGraphPresenter>
{
public:
    ScreenGraphViewBase();
    virtual ~ScreenGraphViewBase() {}
 8003a86:	4770      	bx	lr

08003a88 <_ZN19ScreenGraphViewBase11setupScreenEv>:
}

void ScreenGraphViewBase::setupScreen()
{

}
 8003a88:	4770      	bx	lr

08003a8a <_ZN8touchgfx8CallbackI19ScreenGraphViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003a8a:	4770      	bx	lr

08003a8c <_ZN8touchgfx11GraphScrollILs60EED1Ev>:
 * the new values added to the graph.
 *
 * @tparam CAPACITY The maximum number of data points on the graph.
 */
template <int16_t CAPACITY>
class GraphScroll : public GraphScrollData
 8003a8c:	4770      	bx	lr

08003a8e <_ZN8touchgfx17GraphWrapAndClearILs100EED1Ev>:
 * be created as new values are added.
 *
 * @tparam CAPACITY The maximum number of data points on the graph.
 */
template <int16_t CAPACITY>
class GraphWrapAndClear : public GraphWrapAndClearData
 8003a8e:	4770      	bx	lr

08003a90 <_ZN8touchgfx17GraphElementGridYD1Ev>:
class GraphElementGridY : public GraphElementGridBase
 8003a90:	4770      	bx	lr

08003a92 <_ZN8touchgfx17GraphElementGridXD1Ev>:
class GraphElementGridX : public GraphElementGridBase
 8003a92:	4770      	bx	lr

08003a94 <_ZN8touchgfx8CallbackI19ScreenGraphViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8003a94:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003a96:	68c2      	ldr	r2, [r0, #12]
 8003a98:	6844      	ldr	r4, [r0, #4]
 8003a9a:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8003a9c:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8003a9e:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8003aa2:	07d2      	lsls	r2, r2, #31
 8003aa4:	bf48      	it	mi
 8003aa6:	5962      	ldrmi	r2, [r4, r5]
 8003aa8:	689b      	ldr	r3, [r3, #8]
    }
 8003aaa:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003aac:	bf48      	it	mi
 8003aae:	58d3      	ldrmi	r3, [r2, r3]
 8003ab0:	4718      	bx	r3

08003ab2 <_ZNK8touchgfx8CallbackI19ScreenGraphViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8003ab2:	6843      	ldr	r3, [r0, #4]
 8003ab4:	b12b      	cbz	r3, 8003ac2 <_ZNK8touchgfx8CallbackI19ScreenGraphViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8003ab6:	6883      	ldr	r3, [r0, #8]
 8003ab8:	b92b      	cbnz	r3, 8003ac6 <_ZNK8touchgfx8CallbackI19ScreenGraphViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8003aba:	68c0      	ldr	r0, [r0, #12]
 8003abc:	f000 0001 	and.w	r0, r0, #1
 8003ac0:	4770      	bx	lr
 8003ac2:	4618      	mov	r0, r3
 8003ac4:	4770      	bx	lr
 8003ac6:	2001      	movs	r0, #1
    }
 8003ac8:	4770      	bx	lr

08003aca <_ZN8touchgfx17GraphElementGridXD0Ev>:
 8003aca:	b510      	push	{r4, lr}
 8003acc:	2140      	movs	r1, #64	; 0x40
 8003ace:	4604      	mov	r4, r0
 8003ad0:	f01e f8ba 	bl	8021c48 <_ZdlPvj>
 8003ad4:	4620      	mov	r0, r4
 8003ad6:	bd10      	pop	{r4, pc}

08003ad8 <_ZN8touchgfx17GraphElementGridYD0Ev>:
class GraphElementGridY : public GraphElementGridBase
 8003ad8:	b510      	push	{r4, lr}
 8003ada:	2140      	movs	r1, #64	; 0x40
 8003adc:	4604      	mov	r4, r0
 8003ade:	f01e f8b3 	bl	8021c48 <_ZdlPvj>
 8003ae2:	4620      	mov	r0, r4
 8003ae4:	bd10      	pop	{r4, pc}

08003ae6 <_ZN8touchgfx17GraphWrapAndClearILs100EED0Ev>:
 8003ae6:	b510      	push	{r4, lr}
 8003ae8:	f44f 7137 	mov.w	r1, #732	; 0x2dc
 8003aec:	4604      	mov	r4, r0
 8003aee:	f01e f8ab 	bl	8021c48 <_ZdlPvj>
 8003af2:	4620      	mov	r0, r4
 8003af4:	bd10      	pop	{r4, pc}

08003af6 <_ZN8touchgfx11GraphScrollILs60EED0Ev>:
 8003af6:	b510      	push	{r4, lr}
 8003af8:	f44f 7110 	mov.w	r1, #576	; 0x240
 8003afc:	4604      	mov	r4, r0
 8003afe:	f01e f8a3 	bl	8021c48 <_ZdlPvj>
 8003b02:	4620      	mov	r0, r4
 8003b04:	bd10      	pop	{r4, pc}

08003b06 <_ZN8touchgfx8CallbackI19ScreenGraphViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003b06:	b510      	push	{r4, lr}
 8003b08:	2110      	movs	r1, #16
 8003b0a:	4604      	mov	r4, r0
 8003b0c:	f01e f89c 	bl	8021c48 <_ZdlPvj>
 8003b10:	4620      	mov	r0, r4
 8003b12:	bd10      	pop	{r4, pc}

08003b14 <_ZN19ScreenGraphViewBaseD0Ev>:
 8003b14:	b510      	push	{r4, lr}
 8003b16:	f641 4158 	movw	r1, #7256	; 0x1c58
 8003b1a:	4604      	mov	r4, r0
 8003b1c:	f01e f894 	bl	8021c48 <_ZdlPvj>
 8003b20:	4620      	mov	r0, r4
 8003b22:	bd10      	pop	{r4, pc}

08003b24 <_ZNK8touchgfx17AbstractDataGraph17invalidateContentEv>:
        if (alpha > 0)
 8003b24:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8003b28:	b10b      	cbz	r3, 8003b2e <_ZNK8touchgfx17AbstractDataGraph17invalidateContentEv+0xa>
            Container::invalidateContent();
 8003b2a:	f008 bc90 	b.w	800c44e <_ZNK8touchgfx9Container17invalidateContentEv>
    }
 8003b2e:	4770      	bx	lr

08003b30 <_ZNK8touchgfx17GraphElementGridX30getCorrectlyScaledGridIntervalEPKNS_17AbstractDataGraphE>:
    virtual int getCorrectlyScaledGridInterval(const AbstractDataGraph* graph) const
 8003b30:	b513      	push	{r0, r1, r4, lr}
 8003b32:	4603      	mov	r3, r0
 8003b34:	4608      	mov	r0, r1
        return convertToGraphScaleX(graph, gridInterval, dataScale);
 8003b36:	e9d3 140c 	ldrd	r1, r4, [r3, #48]	; 0x30
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleX());
 8003b3a:	6803      	ldr	r3, [r0, #0]
        return convertToGraphScaleX(graph, gridInterval, dataScale);
 8003b3c:	9101      	str	r1, [sp, #4]
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleX());
 8003b3e:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8003b42:	4798      	blx	r3
 8003b44:	9901      	ldr	r1, [sp, #4]
 8003b46:	4602      	mov	r2, r0
 8003b48:	4620      	mov	r0, r4
    }
 8003b4a:	b002      	add	sp, #8
 8003b4c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleX());
 8003b50:	f00a bab2 	b.w	800e0b8 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>

08003b54 <_ZNK8touchgfx17GraphElementGridY30getCorrectlyScaledGridIntervalEPKNS_17AbstractDataGraphE>:
    virtual int getCorrectlyScaledGridInterval(const AbstractDataGraph* graph) const
 8003b54:	b513      	push	{r0, r1, r4, lr}
 8003b56:	4603      	mov	r3, r0
 8003b58:	4608      	mov	r0, r1
        return convertToGraphScaleY(graph, gridInterval, dataScale);
 8003b5a:	e9d3 140c 	ldrd	r1, r4, [r3, #48]	; 0x30
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleY());
 8003b5e:	6803      	ldr	r3, [r0, #0]
        return convertToGraphScaleY(graph, gridInterval, dataScale);
 8003b60:	9101      	str	r1, [sp, #4]
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleY());
 8003b62:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8003b66:	4798      	blx	r3
 8003b68:	9901      	ldr	r1, [sp, #4]
 8003b6a:	4602      	mov	r2, r0
 8003b6c:	4620      	mov	r0, r4
    }
 8003b6e:	b002      	add	sp, #8
 8003b70:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleY());
 8003b74:	f00a baa0 	b.w	800e0b8 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>

08003b78 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs>:
        assert(index >= 0 && index < usedCapacity);
 8003b78:	1e0a      	subs	r2, r1, #0
    virtual int indexToDataPointYScaled(int16_t index) const
 8003b7a:	b510      	push	{r4, lr}
        assert(index >= 0 && index < usedCapacity);
 8003b7c:	db03      	blt.n	8003b86 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0xe>
 8003b7e:	f9b0 411e 	ldrsh.w	r4, [r0, #286]	; 0x11e
 8003b82:	4294      	cmp	r4, r2
 8003b84:	dc06      	bgt.n	8003b94 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0x1c>
 8003b86:	4b08      	ldr	r3, [pc, #32]	; (8003ba8 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0x30>)
 8003b88:	4a08      	ldr	r2, [pc, #32]	; (8003bac <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0x34>)
 8003b8a:	4809      	ldr	r0, [pc, #36]	; (8003bb0 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0x38>)
 8003b8c:	f240 6133 	movw	r1, #1587	; 0x633
 8003b90:	f01e f888 	bl	8021ca4 <__assert_func>
        return yValues[dataIndex(index)];
 8003b94:	6803      	ldr	r3, [r0, #0]
 8003b96:	f8d0 4144 	ldr.w	r4, [r0, #324]	; 0x144
 8003b9a:	f8d3 3180 	ldr.w	r3, [r3, #384]	; 0x180
 8003b9e:	4798      	blx	r3
    }
 8003ba0:	f854 0020 	ldr.w	r0, [r4, r0, lsl #2]
 8003ba4:	bd10      	pop	{r4, pc}
 8003ba6:	bf00      	nop
 8003ba8:	08024090 	.word	0x08024090
 8003bac:	080240b3 	.word	0x080240b3
 8003bb0:	08024102 	.word	0x08024102

08003bb4 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs>:
        assert(index >= 0 && index < usedCapacity);
 8003bb4:	1e0b      	subs	r3, r1, #0
    virtual int indexToDataPointXScaled(int16_t index) const
 8003bb6:	b510      	push	{r4, lr}
 8003bb8:	4604      	mov	r4, r0
        assert(index >= 0 && index < usedCapacity);
 8003bba:	db03      	blt.n	8003bc4 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x10>
 8003bbc:	f9b0 211e 	ldrsh.w	r2, [r0, #286]	; 0x11e
 8003bc0:	429a      	cmp	r2, r3
 8003bc2:	dc06      	bgt.n	8003bd2 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x1e>
 8003bc4:	4b07      	ldr	r3, [pc, #28]	; (8003be4 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x30>)
 8003bc6:	4a08      	ldr	r2, [pc, #32]	; (8003be8 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x34>)
 8003bc8:	4808      	ldr	r0, [pc, #32]	; (8003bec <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x38>)
 8003bca:	f240 612d 	movw	r1, #1581	; 0x62d
 8003bce:	f01e f869 	bl	8021ca4 <__assert_func>
        return (indexToGlobalIndex(index) * xAxisFactor) + xAxisOffset;
 8003bd2:	6803      	ldr	r3, [r0, #0]
 8003bd4:	f8d3 3184 	ldr.w	r3, [r3, #388]	; 0x184
 8003bd8:	4798      	blx	r3
 8003bda:	e9d4 234f 	ldrd	r2, r3, [r4, #316]	; 0x13c
    }
 8003bde:	fb02 3000 	mla	r0, r2, r0, r3
 8003be2:	bd10      	pop	{r4, pc}
 8003be4:	08024090 	.word	0x08024090
 8003be8:	0802415f 	.word	0x0802415f
 8003bec:	08024102 	.word	0x08024102

08003bf0 <_ZN19ScreenGraphViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

}

void ScreenGraphViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &button1)
 8003bf0:	f100 03cc 	add.w	r3, r0, #204	; 0xcc
 8003bf4:	4299      	cmp	r1, r3
{
 8003bf6:	b510      	push	{r4, lr}
 8003bf8:	4604      	mov	r4, r0
    if (&src == &button1)
 8003bfa:	d105      	bne.n	8003c08 <_ZN19ScreenGraphViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x18>
     */
    virtual void action1();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8003bfc:	f00e fd08 	bl	8012610 <_ZN8touchgfx11Application11getInstanceEv>
        dynamicGraph1.setVisible(!dynamicGraph1.isVisible());
        dynamicGraph2.setVisible(!dynamicGraph2.isVisible());
        dynamicGraph1.invalidate();
        dynamicGraph2.invalidate();
    }
}
 8003c00:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        application().gotoScreen1ScreenWipeTransitionEast();
 8003c04:	f7fe bca2 	b.w	800254c <_ZN23FrontendApplicationBase35gotoScreen1ScreenWipeTransitionEastEv>
    else if (&src == &toggleButton1)
 8003c08:	f500 63fe 	add.w	r3, r0, #2032	; 0x7f0
 8003c0c:	4299      	cmp	r1, r3
 8003c0e:	d115      	bne.n	8003c3c <_ZN19ScreenGraphViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x4c>
        dynamicGraph1.setVisible(!dynamicGraph1.isVisible());
 8003c10:	f890 3445 	ldrb.w	r3, [r0, #1093]	; 0x445
 8003c14:	f083 0301 	eor.w	r3, r3, #1
        visible = vis;
 8003c18:	f880 3445 	strb.w	r3, [r0, #1093]	; 0x445
        dynamicGraph2.setVisible(!dynamicGraph2.isVisible());
 8003c1c:	f890 3125 	ldrb.w	r3, [r0, #293]	; 0x125
 8003c20:	f083 0301 	eor.w	r3, r3, #1
 8003c24:	f880 3125 	strb.w	r3, [r0, #293]	; 0x125
        dynamicGraph1.invalidate();
 8003c28:	f500 6084 	add.w	r0, r0, #1056	; 0x420
 8003c2c:	f00f fc87 	bl	801353e <_ZNK8touchgfx8Drawable10invalidateEv>
        dynamicGraph2.invalidate();
 8003c30:	f504 7080 	add.w	r0, r4, #256	; 0x100
}
 8003c34:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        dynamicGraph2.invalidate();
 8003c38:	f00f bc81 	b.w	801353e <_ZNK8touchgfx8Drawable10invalidateEv>
}
 8003c3c:	bd10      	pop	{r4, pc}
	...

08003c40 <_ZN8touchgfx14AbstractButtonC1Ev>:
    AbstractButton()
 8003c40:	b510      	push	{r4, lr}
        : Widget(), action(), pressed(false)
 8003c42:	2226      	movs	r2, #38	; 0x26
    AbstractButton()
 8003c44:	4604      	mov	r4, r0
        : Widget(), action(), pressed(false)
 8003c46:	2100      	movs	r1, #0
 8003c48:	f01e f9b2 	bl	8021fb0 <memset>
 8003c4c:	4620      	mov	r0, r4
 8003c4e:	f7ff f82f 	bl	8002cb0 <_ZN8touchgfx6WidgetC1Ev>
 8003c52:	4b05      	ldr	r3, [pc, #20]	; (8003c68 <_ZN8touchgfx14AbstractButtonC1Ev+0x28>)
 8003c54:	6023      	str	r3, [r4, #0]
 8003c56:	2300      	movs	r3, #0
 8003c58:	62a3      	str	r3, [r4, #40]	; 0x28
 8003c5a:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
        touchable = touch;
 8003c5e:	2301      	movs	r3, #1
 8003c60:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
    }
 8003c64:	4620      	mov	r0, r4
 8003c66:	bd10      	pop	{r4, pc}
 8003c68:	080251c8 	.word	0x080251c8

08003c6c <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll>:
     * @param  factor2 The second factor.
     * @param  divisor The divisor.
     *
     * @return factor1 * factor2 / divisor as a Q5
     */
    static Q5 muldiv_toQ5(int32_t factor1, int32_t factor2, int32_t divisor)
 8003c6c:	b537      	push	{r0, r1, r2, r4, r5, lr}
    {
        int32_t remainder;
        int32_t result = muldiv(factor1, factor2, divisor, remainder);
 8003c6e:	ab01      	add	r3, sp, #4
    static Q5 muldiv_toQ5(int32_t factor1, int32_t factor2, int32_t divisor)
 8003c70:	4615      	mov	r5, r2
        int32_t result = muldiv(factor1, factor2, divisor, remainder);
 8003c72:	f00f fe06 	bl	8013882 <_ZN8touchgfx6muldivElllRl>
        if (result >= 0)
 8003c76:	2800      	cmp	r0, #0
 8003c78:	ea4f 1440 	mov.w	r4, r0, lsl #5
        return Q5(muldiv((int)factor1, (int)factor2, (int)divisor));
 8003c7c:	9901      	ldr	r1, [sp, #4]
 8003c7e:	462a      	mov	r2, r5
 8003c80:	f04f 0020 	mov.w	r0, #32
        if (result >= 0)
 8003c84:	db04      	blt.n	8003c90 <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll+0x24>
        return Q5(muldiv((int)factor1, (int)factor2, (int)divisor));
 8003c86:	f00f fe1b 	bl	80138c0 <_ZN8touchgfx6muldivElll>
            return Q5(v + q5.v);
 8003c8a:	4420      	add	r0, r4
        {
            return toQ5(result) + muldivQ5(Q5(Rasterizer::POLY_BASE_SIZE), Q5(remainder), Q5(divisor));
        }
        return toQ5(result) - muldivQ5(Q5(Rasterizer::POLY_BASE_SIZE), Q5(remainder), Q5(divisor));
    }
 8003c8c:	b003      	add	sp, #12
 8003c8e:	bd30      	pop	{r4, r5, pc}
        return Q5(muldiv((int)factor1, (int)factor2, (int)divisor));
 8003c90:	f00f fe16 	bl	80138c0 <_ZN8touchgfx6muldivElll>
            return Q5(v - q5.v);
 8003c94:	1a20      	subs	r0, r4, r0
 8003c96:	e7f9      	b.n	8003c8c <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll+0x20>

08003c98 <_ZNK8touchgfx17AbstractDataGraph16valueToScreenYQ5Ei>:
    virtual CWRUtil::Q5 valueToScreenYQ5(int y) const
 8003c98:	b570      	push	{r4, r5, r6, lr}
        return graphArea.getHeight() - (topPadding + bottomPadding);
 8003c9a:	f9b0 4114 	ldrsh.w	r4, [r0, #276]	; 0x114
 8003c9e:	f8b0 511a 	ldrh.w	r5, [r0, #282]	; 0x11a
 8003ca2:	1963      	adds	r3, r4, r5
 8003ca4:	f8b0 5042 	ldrh.w	r5, [r0, #66]	; 0x42
 8003ca8:	1aed      	subs	r5, r5, r3
        return CWRUtil::toQ5(graphAreaHeight + topPadding - 1) - CWRUtil::muldiv_toQ5(y - graphRangeMinY, graphAreaHeight - 1, graphRangeMaxY - graphRangeMinY);
 8003caa:	e9d0 324d 	ldrd	r3, r2, [r0, #308]	; 0x134
    virtual CWRUtil::Q5 valueToScreenYQ5(int y) const
 8003cae:	460e      	mov	r6, r1
        return CWRUtil::toQ5(graphAreaHeight + topPadding - 1) - CWRUtil::muldiv_toQ5(y - graphRangeMinY, graphAreaHeight - 1, graphRangeMaxY - graphRangeMinY);
 8003cb0:	b22d      	sxth	r5, r5
 8003cb2:	1ad2      	subs	r2, r2, r3
 8003cb4:	1e69      	subs	r1, r5, #1
 8003cb6:	1af0      	subs	r0, r6, r3
 8003cb8:	f7ff ffd8 	bl	8003c6c <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll>
 8003cbc:	442c      	add	r4, r5
 8003cbe:	3c01      	subs	r4, #1
    }
 8003cc0:	ebc0 1044 	rsb	r0, r0, r4, lsl #5
 8003cc4:	bd70      	pop	{r4, r5, r6, pc}

08003cc6 <_ZNK8touchgfx17AbstractDataGraph16valueToScreenXQ5Ei>:
    virtual CWRUtil::Q5 valueToScreenXQ5(int x) const
 8003cc6:	b538      	push	{r3, r4, r5, lr}
 8003cc8:	4604      	mov	r4, r0
 8003cca:	4608      	mov	r0, r1
        return graphArea.getWidth() - (leftPadding + rightPadding);
 8003ccc:	f8b4 3118 	ldrh.w	r3, [r4, #280]	; 0x118
 8003cd0:	f8b4 1116 	ldrh.w	r1, [r4, #278]	; 0x116
 8003cd4:	440b      	add	r3, r1
 8003cd6:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
        return CWRUtil::muldiv_toQ5(x - graphRangeMinX, getGraphAreaWidth() - 1, graphRangeMaxX - graphRangeMinX) + CWRUtil::toQ5(leftPadding);
 8003cda:	e9d4 524b 	ldrd	r5, r2, [r4, #300]	; 0x12c
        return graphArea.getWidth() - (leftPadding + rightPadding);
 8003cde:	1ac9      	subs	r1, r1, r3
        return CWRUtil::muldiv_toQ5(x - graphRangeMinX, getGraphAreaWidth() - 1, graphRangeMaxX - graphRangeMinX) + CWRUtil::toQ5(leftPadding);
 8003ce0:	b209      	sxth	r1, r1
 8003ce2:	1b52      	subs	r2, r2, r5
 8003ce4:	3901      	subs	r1, #1
 8003ce6:	1b40      	subs	r0, r0, r5
 8003ce8:	f7ff ffc0 	bl	8003c6c <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll>
            return Q5(v + q5.v);
 8003cec:	f9b4 3116 	ldrsh.w	r3, [r4, #278]	; 0x116
    }
 8003cf0:	eb00 1043 	add.w	r0, r0, r3, lsl #5
 8003cf4:	bd38      	pop	{r3, r4, r5, pc}
	...

08003cf8 <_ZN8touchgfx20GraphElementGridBaseC1Ev>:
    GraphElementGridBase()
 8003cf8:	b510      	push	{r4, lr}
 8003cfa:	4604      	mov	r4, r0
        : CanvasWidget()
 8003cfc:	f009 fdd8 	bl	800d8b0 <_ZN8touchgfx12CanvasWidgetC1Ev>
        : dataScale(1), gridInterval(10), lineWidth(1), majorGrid(0)
 8003d00:	4a06      	ldr	r2, [pc, #24]	; (8003d1c <_ZN8touchgfx20GraphElementGridBaseC1Ev+0x24>)
 8003d02:	6022      	str	r2, [r4, #0]
        : color(col)
 8003d04:	2300      	movs	r3, #0
 8003d06:	2201      	movs	r2, #1
 8003d08:	210a      	movs	r1, #10
 8003d0a:	e9c4 210c 	strd	r2, r1, [r4, #48]	; 0x30
 8003d0e:	62e3      	str	r3, [r4, #44]	; 0x2c
 8003d10:	f884 2038 	strb.w	r2, [r4, #56]	; 0x38
 8003d14:	63e3      	str	r3, [r4, #60]	; 0x3c
    }
 8003d16:	4620      	mov	r0, r4
 8003d18:	bd10      	pop	{r4, pc}
 8003d1a:	bf00      	nop
 8003d1c:	08025070 	.word	0x08025070

08003d20 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>:
public:
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
 8003d20:	b570      	push	{r4, r5, r6, lr}
        : widgetWidth(0)
 8003d22:	2300      	movs	r3, #0
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8003d24:	4e12      	ldr	r6, [pc, #72]	; (8003d70 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x50>)
 8003d26:	8083      	strh	r3, [r0, #4]
        : AbstractPainter()
 8003d28:	4b12      	ldr	r3, [pc, #72]	; (8003d74 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x54>)
 8003d2a:	6003      	str	r3, [r0, #0]
 8003d2c:	6833      	ldr	r3, [r6, #0]
 8003d2e:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
    AbstractPainterRGB565()
 8003d32:	4605      	mov	r5, r0
 8003d34:	b10a      	cbz	r2, 8003d3a <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1a>
 8003d36:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8003d38:	b900      	cbnz	r0, 8003d3c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1c>
        return instance->lcdRef;
 8003d3a:	6898      	ldr	r0, [r3, #8]
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
 8003d3c:	6803      	ldr	r3, [r0, #0]
 8003d3e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003d40:	4798      	blx	r3
        return auxiliaryLCD;
 8003d42:	6833      	ldr	r3, [r6, #0]
 8003d44:	fab0 f480 	clz	r4, r0
 8003d48:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8003d4a:	0964      	lsrs	r4, r4, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
 8003d4c:	b130      	cbz	r0, 8003d5c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x3c>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
 8003d4e:	6803      	ldr	r3, [r0, #0]
 8003d50:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003d52:	4798      	blx	r3
 8003d54:	2800      	cmp	r0, #0
 8003d56:	bf08      	it	eq
 8003d58:	f044 0401 	orreq.w	r4, r4, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
 8003d5c:	b92c      	cbnz	r4, 8003d6a <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x4a>
 8003d5e:	4b06      	ldr	r3, [pc, #24]	; (8003d78 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x58>)
 8003d60:	4a06      	ldr	r2, [pc, #24]	; (8003d7c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x5c>)
 8003d62:	4807      	ldr	r0, [pc, #28]	; (8003d80 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x60>)
 8003d64:	212c      	movs	r1, #44	; 0x2c
 8003d66:	f01d ff9d 	bl	8021ca4 <__assert_func>
    }
 8003d6a:	4628      	mov	r0, r5
 8003d6c:	bd70      	pop	{r4, r5, r6, pc}
 8003d6e:	bf00      	nop
 8003d70:	2001794c 	.word	0x2001794c
 8003d74:	0802445c 	.word	0x0802445c
 8003d78:	080241ae 	.word	0x080241ae
 8003d7c:	0802420c 	.word	0x0802420c
 8003d80:	08024245 	.word	0x08024245

08003d84 <_ZN19ScreenGraphViewBaseC1Ev>:
ScreenGraphViewBase::ScreenGraphViewBase() :
 8003d84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003d88:	ed2d 8b10 	vpush	{d8-d15}
 8003d8c:	4604      	mov	r4, r0
 8003d8e:	b08f      	sub	sp, #60	; 0x3c
 8003d90:	f00f ff40 	bl	8013c14 <_ZN8touchgfx6ScreenC1Ev>
    buttonCallback(this, &ScreenGraphViewBase::buttonCallbackHandler)
 8003d94:	4622      	mov	r2, r4
 8003d96:	2600      	movs	r6, #0
 8003d98:	4be9      	ldr	r3, [pc, #932]	; (8004140 <_ZN19ScreenGraphViewBaseC1Ev+0x3bc>)
 8003d9a:	63e6      	str	r6, [r4, #60]	; 0x3c
 8003d9c:	f842 3b40 	str.w	r3, [r2], #64
 8003da0:	4610      	mov	r0, r2
 8003da2:	ee09 2a10 	vmov	s18, r2
 8003da6:	f7fe ff95 	bl	8002cd4 <_ZN8touchgfx3BoxC1Ev>
 8003daa:	f104 036c 	add.w	r3, r4, #108	; 0x6c
 8003dae:	ee08 3a10 	vmov	s16, r3
 8003db2:	f64f 77ff 	movw	r7, #65535	; 0xffff
        : Widget(), bitmap(bmp), alpha(255)
 8003db6:	2226      	movs	r2, #38	; 0x26
 8003db8:	4631      	mov	r1, r6
 8003dba:	4618      	mov	r0, r3
 8003dbc:	f8ad 7030 	strh.w	r7, [sp, #48]	; 0x30
 8003dc0:	f01e f8f6 	bl	8021fb0 <memset>
 8003dc4:	ee18 0a10 	vmov	r0, s16
 8003dc8:	f7fe ff72 	bl	8002cb0 <_ZN8touchgfx6WidgetC1Ev>
 8003dcc:	4bdd      	ldr	r3, [pc, #884]	; (8004144 <_ZN19ScreenGraphViewBaseC1Ev+0x3c0>)
 8003dce:	66e3      	str	r3, [r4, #108]	; 0x6c
 8003dd0:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 8003dd4:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8003dd8:	a90c      	add	r1, sp, #48	; 0x30
 8003dda:	ee18 0a10 	vmov	r0, s16
        : Widget(), bitmap(bmp), alpha(255)
 8003dde:	f884 7094 	strb.w	r7, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8003de2:	f00b ff67 	bl	800fcb4 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003de6:	f104 0398 	add.w	r3, r4, #152	; 0x98
        : Box(), borderColor(0), borderSize(0)
 8003dea:	4618      	mov	r0, r3
 8003dec:	ee0c 3a10 	vmov	s24, r3
 8003df0:	f7fe ff70 	bl	8002cd4 <_ZN8touchgfx3BoxC1Ev>
 8003df4:	4bd4      	ldr	r3, [pc, #848]	; (8004148 <_ZN19ScreenGraphViewBaseC1Ev+0x3c4>)
 8003df6:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8003dfa:	f104 03cc 	add.w	r3, r4, #204	; 0xcc
 */
class Button : public AbstractButton
{
public:
    Button()
        : AbstractButton(), up(), down(), alpha(255)
 8003dfe:	4618      	mov	r0, r3
 8003e00:	f8c4 60c4 	str.w	r6, [r4, #196]	; 0xc4
 8003e04:	f8a4 60c8 	strh.w	r6, [r4, #200]	; 0xc8
 8003e08:	f504 7580 	add.w	r5, r4, #256	; 0x100
 8003e0c:	ee0b 3a10 	vmov	s22, r3
 8003e10:	f7ff ff16 	bl	8003c40 <_ZN8touchgfx14AbstractButtonC1Ev>
 8003e14:	4bcd      	ldr	r3, [pc, #820]	; (800414c <_ZN19ScreenGraphViewBaseC1Ev+0x3c8>)
 8003e16:	f8c4 30cc 	str.w	r3, [r4, #204]	; 0xcc
 8003e1a:	f8a4 70fa 	strh.w	r7, [r4, #250]	; 0xfa
 8003e1e:	f8a4 70fc 	strh.w	r7, [r4, #252]	; 0xfc
 8003e22:	f884 70fe 	strb.w	r7, [r4, #254]	; 0xfe
        : AbstractDataGraph(capacity), xAxisFactor(1), xAxisOffset(0), yValues(values), dataCounter(0)
 8003e26:	2164      	movs	r1, #100	; 0x64
 8003e28:	4628      	mov	r0, r5
 8003e2a:	f00a f8e1 	bl	800dff0 <_ZN8touchgfx17AbstractDataGraphC1Es>
 8003e2e:	f04f 0801 	mov.w	r8, #1
 8003e32:	4bc7      	ldr	r3, [pc, #796]	; (8004150 <_ZN19ScreenGraphViewBaseC1Ev+0x3cc>)
 8003e34:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
{
public:
    GraphWrapAndClear()
        : GraphWrapAndClearData(CAPACITY, y)
 8003e38:	f504 7213 	add.w	r2, r4, #588	; 0x24c
        DynamicDataGraph::setGraphRangeX(0, capacity - 1);
 8003e3c:	4631      	mov	r1, r6
        : AbstractDataGraph(capacity), xAxisFactor(1), xAxisOffset(0), yValues(values), dataCounter(0)
 8003e3e:	e9c4 2691 	strd	r2, r6, [r4, #580]	; 0x244
        DynamicDataGraph::setGraphRangeX(0, capacity - 1);
 8003e42:	4628      	mov	r0, r5
 8003e44:	2263      	movs	r2, #99	; 0x63
        : AbstractDataGraph(capacity), xAxisFactor(1), xAxisOffset(0), yValues(values), dataCounter(0)
 8003e46:	e9c4 868f 	strd	r8, r6, [r4, #572]	; 0x23c
        DynamicDataGraph::setGraphRangeX(0, capacity - 1);
 8003e4a:	f7ff fa3f 	bl	80032cc <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>
 8003e4e:	f504 7377 	add.w	r3, r4, #988	; 0x3dc
 8003e52:	4ac0      	ldr	r2, [pc, #768]	; (8004154 <_ZN19ScreenGraphViewBaseC1Ev+0x3d0>)
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8003e54:	f8df 9328 	ldr.w	r9, [pc, #808]	; 8004180 <_ZN19ScreenGraphViewBaseC1Ev+0x3fc>
 8003e58:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
        : CanvasWidget()
 8003e5c:	4618      	mov	r0, r3
 8003e5e:	ee0d 3a10 	vmov	s26, r3
 8003e62:	f009 fd25 	bl	800d8b0 <_ZN8touchgfx12CanvasWidgetC1Ev>
 */
class GraphElementLine : public AbstractGraphElement
{
public:
    GraphElementLine()
        : lineWidth(2)
 8003e66:	4bbc      	ldr	r3, [pc, #752]	; (8004158 <_ZN19ScreenGraphViewBaseC1Ev+0x3d4>)
 8003e68:	f8c4 33dc 	str.w	r3, [r4, #988]	; 0x3dc
 8003e6c:	f04f 0202 	mov.w	r2, #2
 8003e70:	f204 410c 	addw	r1, r4, #1036	; 0x40c
 8003e74:	f109 0b24 	add.w	fp, r9, #36	; 0x24
 8003e78:	f884 2408 	strb.w	r2, [r4, #1032]	; 0x408
 8003e7c:	4608      	mov	r0, r1
 8003e7e:	f504 6a84 	add.w	sl, r4, #1056	; 0x420
 8003e82:	9103      	str	r1, [sp, #12]
 8003e84:	f7ff ff4c 	bl	8003d20 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8003e88:	f8c4 940c 	str.w	r9, [r4, #1036]	; 0x40c
 8003e8c:	f8c4 b414 	str.w	fp, [r4, #1044]	; 0x414
        : AbstractDataGraph(capacity), xAxisFactor(1), xAxisOffset(0), yValues(values), dataCounter(0)
 8003e90:	213c      	movs	r1, #60	; 0x3c
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
 8003e92:	f8c4 6418 	str.w	r6, [r4, #1048]	; 0x418
 8003e96:	4650      	mov	r0, sl
 8003e98:	f00a f8aa 	bl	800dff0 <_ZN8touchgfx17AbstractDataGraphC1Es>
 8003e9c:	4bac      	ldr	r3, [pc, #688]	; (8004150 <_ZN19ScreenGraphViewBaseC1Ev+0x3cc>)
 8003e9e:	f8c4 3420 	str.w	r3, [r4, #1056]	; 0x420
{
public:
    GraphScroll()
        : GraphScrollData(CAPACITY, y)
 8003ea2:	f504 63ae 	add.w	r3, r4, #1392	; 0x570
        DynamicDataGraph::setGraphRangeX(0, capacity - 1);
 8003ea6:	223b      	movs	r2, #59	; 0x3b
        : AbstractDataGraph(capacity), xAxisFactor(1), xAxisOffset(0), yValues(values), dataCounter(0)
 8003ea8:	f8c4 3564 	str.w	r3, [r4, #1380]	; 0x564
        DynamicDataGraph::setGraphRangeX(0, capacity - 1);
 8003eac:	4631      	mov	r1, r6
 8003eae:	4650      	mov	r0, sl
        : AbstractDataGraph(capacity), xAxisFactor(1), xAxisOffset(0), yValues(values), dataCounter(0)
 8003eb0:	f8c4 855c 	str.w	r8, [r4, #1372]	; 0x55c
 8003eb4:	f8c4 6560 	str.w	r6, [r4, #1376]	; 0x560
 8003eb8:	f8c4 6568 	str.w	r6, [r4, #1384]	; 0x568
        DynamicDataGraph::setGraphRangeX(0, capacity - 1);
 8003ebc:	f7ff fa06 	bl	80032cc <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>
 8003ec0:	f504 61cc 	add.w	r1, r4, #1632	; 0x660
 8003ec4:	4ba5      	ldr	r3, [pc, #660]	; (800415c <_ZN19ScreenGraphViewBaseC1Ev+0x3d8>)
 8003ec6:	f8c4 3420 	str.w	r3, [r4, #1056]	; 0x420
        : CanvasWidget()
 8003eca:	4608      	mov	r0, r1
        : DynamicDataGraph(capacity, values), current(0)
 8003ecc:	f8a4 656c 	strh.w	r6, [r4, #1388]	; 0x56c
 8003ed0:	ee0d 1a90 	vmov	s27, r1
 8003ed4:	f009 fcec 	bl	800d8b0 <_ZN8touchgfx12CanvasWidgetC1Ev>
        : lineWidth(2)
 8003ed8:	4b9f      	ldr	r3, [pc, #636]	; (8004158 <_ZN19ScreenGraphViewBaseC1Ev+0x3d4>)
 8003eda:	f8c4 3660 	str.w	r3, [r4, #1632]	; 0x660
 8003ede:	f04f 0202 	mov.w	r2, #2
 8003ee2:	f504 63d2 	add.w	r3, r4, #1680	; 0x690
 8003ee6:	f884 268c 	strb.w	r2, [r4, #1676]	; 0x68c
 8003eea:	4618      	mov	r0, r3
 8003eec:	9304      	str	r3, [sp, #16]
 8003eee:	f7ff ff17 	bl	8003d20 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8003ef2:	f204 63a4 	addw	r3, r4, #1700	; 0x6a4
 8003ef6:	f8c4 9690 	str.w	r9, [r4, #1680]	; 0x690
 8003efa:	f8c4 b698 	str.w	fp, [r4, #1688]	; 0x698
class GraphElementGridX : public GraphElementGridBase
 8003efe:	4618      	mov	r0, r3
 8003f00:	f8c4 669c 	str.w	r6, [r4, #1692]	; 0x69c
 8003f04:	f8df b27c 	ldr.w	fp, [pc, #636]	; 8004184 <_ZN19ScreenGraphViewBaseC1Ev+0x400>
class GraphElementGridY : public GraphElementGridBase
 8003f08:	f8df 927c 	ldr.w	r9, [pc, #636]	; 8004188 <_ZN19ScreenGraphViewBaseC1Ev+0x404>
 8003f0c:	ee0e 3a10 	vmov	s28, r3
class GraphElementGridX : public GraphElementGridBase
 8003f10:	f7ff fef2 	bl	8003cf8 <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 8003f14:	f204 63e4 	addw	r3, r4, #1764	; 0x6e4
 8003f18:	f8c4 b6a4 	str.w	fp, [r4, #1700]	; 0x6a4
class GraphElementGridY : public GraphElementGridBase
 8003f1c:	4618      	mov	r0, r3
 8003f1e:	ee0e 3a90 	vmov	s29, r3
 8003f22:	f7ff fee9 	bl	8003cf8 <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 8003f26:	f204 7324 	addw	r3, r4, #1828	; 0x724
class GraphElementGridX : public GraphElementGridBase
 8003f2a:	4618      	mov	r0, r3
class GraphElementGridY : public GraphElementGridBase
 8003f2c:	f8c4 96e4 	str.w	r9, [r4, #1764]	; 0x6e4
 8003f30:	ee0c 3a90 	vmov	s25, r3
class GraphElementGridX : public GraphElementGridBase
 8003f34:	f7ff fee0 	bl	8003cf8 <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 8003f38:	f8c4 b724 	str.w	fp, [r4, #1828]	; 0x724
 8003f3c:	f204 7b64 	addw	fp, r4, #1892	; 0x764
class GraphElementGridY : public GraphElementGridBase
 8003f40:	4658      	mov	r0, fp
 8003f42:	f7ff fed9 	bl	8003cf8 <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 8003f46:	f204 73a4 	addw	r3, r4, #1956	; 0x7a4
 8003f4a:	f8c4 9764 	str.w	r9, [r4, #1892]	; 0x764
        : CanvasWidget()
 8003f4e:	4618      	mov	r0, r3
 8003f50:	ee0f 3a10 	vmov	s30, r3
 8003f54:	f009 fcac 	bl	800d8b0 <_ZN8touchgfx12CanvasWidgetC1Ev>
 8003f58:	4b81      	ldr	r3, [pc, #516]	; (8004160 <_ZN19ScreenGraphViewBaseC1Ev+0x3dc>)
 8003f5a:	f8c4 37dc 	str.w	r3, [r4, #2012]	; 0x7dc
class GraphLabelsBase : public AbstractGraphDecoration
{
public:
    GraphLabelsBase()
        : AbstractGraphDecoration(),
          dataScale(1), labelInterval(0), labelTypedText(TYPED_TEXT_INVALID), labelRotation(TEXT_ROTATE_0), labelDecimals(0), labelDecimalPoint('.'), majorLabel(0)
 8003f5e:	232e      	movs	r3, #46	; 0x2e
 8003f60:	f8a4 37e8 	strh.w	r3, [r4, #2024]	; 0x7e8

/**
 * GraphLabelsY will draw labels along the Y axis at given intervals. By combining two
 * GraphLabelsY it is possible to have different appearance for major and minor y offsets.
 */
class GraphLabelsY : public GraphLabelsBase
 8003f64:	4b7f      	ldr	r3, [pc, #508]	; (8004164 <_ZN19ScreenGraphViewBaseC1Ev+0x3e0>)
 8003f66:	f8c4 37a4 	str.w	r3, [r4, #1956]	; 0x7a4
 8003f6a:	f504 63fe 	add.w	r3, r4, #2032	; 0x7f0
 8003f6e:	f8a4 77e0 	strh.w	r7, [r4, #2016]	; 0x7e0
 8003f72:	4618      	mov	r0, r3
 8003f74:	f8c4 67d0 	str.w	r6, [r4, #2000]	; 0x7d0
          dataScale(1), labelInterval(0), labelTypedText(TYPED_TEXT_INVALID), labelRotation(TEXT_ROTATE_0), labelDecimals(0), labelDecimalPoint('.'), majorLabel(0)
 8003f78:	f8c4 87d4 	str.w	r8, [r4, #2004]	; 0x7d4
 8003f7c:	f8c4 67d8 	str.w	r6, [r4, #2008]	; 0x7d8
 8003f80:	f884 67e4 	strb.w	r6, [r4, #2020]	; 0x7e4
 8003f84:	f8a4 67e6 	strh.w	r6, [r4, #2022]	; 0x7e6
 8003f88:	f8c4 67ec 	str.w	r6, [r4, #2028]	; 0x7ec
 8003f8c:	ee0b 3a90 	vmov	s23, r3
 8003f90:	f7ff fe56 	bl	8003c40 <_ZN8touchgfx14AbstractButtonC1Ev>
 * A ToggleButton is a Button specialization that swaps the two bitmaps when clicked, such that
 * the previous "pressed" bitmap, now becomes the one displayed when button is not
 * pressed. This can by used to give the effect of a button that can be pressed in and
 * when it is subsequently pressed, it will pop back out.
 */
class ToggleButton : public Button
 8003f94:	4b74      	ldr	r3, [pc, #464]	; (8004168 <_ZN19ScreenGraphViewBaseC1Ev+0x3e4>)
 8003f96:	f8c4 37f0 	str.w	r3, [r4, #2032]	; 0x7f0
 8003f9a:	f604 0328 	addw	r3, r4, #2088	; 0x828
 8003f9e:	f8a4 781e 	strh.w	r7, [r4, #2078]	; 0x81e
 8003fa2:	f8a4 7820 	strh.w	r7, [r4, #2080]	; 0x820
 8003fa6:	f884 7822 	strb.w	r7, [r4, #2082]	; 0x822
 8003faa:	f8a4 7824 	strh.w	r7, [r4, #2084]	; 0x824
 8003fae:	4618      	mov	r0, r3
 8003fb0:	ee08 3a90 	vmov	s17, r3
 8003fb4:	f7fe febc 	bl	8002d30 <_ZN8touchgfx8TextAreaC1Ev>
 8003fb8:	f504 6307 	add.w	r3, r4, #2160	; 0x870
        : TextArea()
 8003fbc:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8003fbe:	4f6b      	ldr	r7, [pc, #428]	; (800416c <_ZN19ScreenGraphViewBaseC1Ev+0x3e8>)
 8003fc0:	ee09 3a90 	vmov	s19, r3
        : TextArea()
 8003fc4:	f7fe feb4 	bl	8002d30 <_ZN8touchgfx8TextAreaC1Ev>
 8003fc8:	f604 03bc 	addw	r3, r4, #2236	; 0x8bc
        : TextAreaWithWildcardBase(), wc1(0)
 8003fcc:	f8c4 7870 	str.w	r7, [r4, #2160]	; 0x870
        : TextArea()
 8003fd0:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8003fd2:	f8c4 68b8 	str.w	r6, [r4, #2232]	; 0x8b8
 8003fd6:	ee0a 3a10 	vmov	s20, r3
        : TextArea()
 8003fda:	f7fe fea9 	bl	8002d30 <_ZN8touchgfx8TextAreaC1Ev>
 8003fde:	f604 1308 	addw	r3, r4, #2312	; 0x908
        : TextAreaWithWildcardBase(), wc1(0)
 8003fe2:	f8c4 78bc 	str.w	r7, [r4, #2236]	; 0x8bc
        : TextArea()
 8003fe6:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8003fe8:	f8c4 6904 	str.w	r6, [r4, #2308]	; 0x904
 8003fec:	ee0a 3a90 	vmov	s21, r3
        : TextArea()
 8003ff0:	f7fe fe9e 	bl	8002d30 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8003ff4:	4b5e      	ldr	r3, [pc, #376]	; (8004170 <_ZN19ScreenGraphViewBaseC1Ev+0x3ec>)
 8003ff6:	f8c4 3988 	str.w	r3, [r4, #2440]	; 0x988
 8003ffa:	4b5e      	ldr	r3, [pc, #376]	; (8004174 <_ZN19ScreenGraphViewBaseC1Ev+0x3f0>)
        : TextAreaWithWildcardBase(), wc1(0)
 8003ffc:	f8c4 7908 	str.w	r7, [r4, #2312]	; 0x908
 8004000:	f8c4 3990 	str.w	r3, [r4, #2448]	; 0x990
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8004004:	f44f 5196 	mov.w	r1, #4800	; 0x12c0
 8004008:	f604 1098 	addw	r0, r4, #2456	; 0x998
 800400c:	f8c4 6950 	str.w	r6, [r4, #2384]	; 0x950
 8004010:	f8c4 498c 	str.w	r4, [r4, #2444]	; 0x98c
 8004014:	f8c4 6994 	str.w	r6, [r4, #2452]	; 0x994
 8004018:	f00c fe3a 	bl	8010c90 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 320, 240);
 800401c:	23f0      	movs	r3, #240	; 0xf0
 800401e:	ee19 0a10 	vmov	r0, s18
 8004022:	9300      	str	r3, [sp, #0]
 8004024:	4632      	mov	r2, r6
 8004026:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800402a:	4631      	mov	r1, r6
 800402c:	f04f 497f 	mov.w	r9, #4278190080	; 0xff000000
 8004030:	f7fe fe2b 	bl	8002c8a <_ZN8touchgfx8Drawable11setPositionEssss>
    Background.setXY(-109, -23);
 8004034:	f06f 0216 	mvn.w	r2, #22
 8004038:	ee18 0a10 	vmov	r0, s16
 800403c:	f06f 016c 	mvn.w	r1, #108	; 0x6c
 8004040:	f8c4 9068 	str.w	r9, [r4, #104]	; 0x68
 8004044:	f7fe fde2 	bl	8002c0c <_ZN8touchgfx8Drawable5setXYEss>
    boxWithBorder1.setPosition(0, 0, 320, 166);
 8004048:	27a6      	movs	r7, #166	; 0xa6
 800404a:	2304      	movs	r3, #4
    Background.setBitmap(touchgfx::Bitmap(BITMAP_DARK_BACKGROUNDS_MAIN_BG_TEXTURE_480X272PX_ID));
 800404c:	ee18 0a10 	vmov	r0, s16
 8004050:	a90c      	add	r1, sp, #48	; 0x30
 8004052:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8004056:	f00b fe2d 	bl	800fcb4 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    boxWithBorder1.setPosition(0, 0, 320, 166);
 800405a:	ee1c 0a10 	vmov	r0, s24
 800405e:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8004062:	4632      	mov	r2, r6
 8004064:	4631      	mov	r1, r6
 8004066:	9700      	str	r7, [sp, #0]
 8004068:	f7fe fe0f 	bl	8002c8a <_ZN8touchgfx8Drawable11setPositionEssss>
 800406c:	f04f 33ff 	mov.w	r3, #4294967295
        borderColor = colorBorder;
 8004070:	e9c4 3930 	strd	r3, r9, [r4, #192]	; 0xc0
    button1.setXY(187, 189);
 8004074:	ee1b 0a10 	vmov	r0, s22
 8004078:	22bd      	movs	r2, #189	; 0xbd
 800407a:	21bb      	movs	r1, #187	; 0xbb
        borderSize = size;
 800407c:	f8a4 80c8 	strh.w	r8, [r4, #200]	; 0xc8
 8004080:	f7fe fdc4 	bl	8002c0c <_ZN8touchgfx8Drawable5setXYEss>
 8004084:	f04f 0302 	mov.w	r3, #2
    button1.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
 8004088:	ee1b 0a10 	vmov	r0, s22
 800408c:	aa0c      	add	r2, sp, #48	; 0x30
 800408e:	a90b      	add	r1, sp, #44	; 0x2c
 8004090:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8004094:	f8ad 802c 	strh.w	r8, [sp, #44]	; 0x2c
 8004098:	f00b fbe9 	bl	800f86e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
    button1.setAction(buttonCallback);
 800409c:	f604 1388 	addw	r3, r4, #2440	; 0x988
        action = &callback;
 80040a0:	f8c4 30f4 	str.w	r3, [r4, #244]	; 0xf4
    dynamicGraph2.setScale(1);
 80040a4:	4632      	mov	r2, r6
 80040a6:	4641      	mov	r1, r8
 80040a8:	4628      	mov	r0, r5
    button1.setAction(buttonCallback);
 80040aa:	9305      	str	r3, [sp, #20]
    dynamicGraph2.setScale(1);
 80040ac:	f7ff fac2 	bl	8003634 <_ZN8touchgfx16DynamicDataGraph8setScaleEib>
    dynamicGraph2.setPosition(0, 0, 320, 166);
 80040b0:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80040b4:	4632      	mov	r2, r6
 80040b6:	4631      	mov	r1, r6
 80040b8:	4628      	mov	r0, r5
 80040ba:	9700      	str	r7, [sp, #0]
 80040bc:	f7fe fde5 	bl	8002c8a <_ZN8touchgfx8Drawable11setPositionEssss>
    dynamicGraph2.setGraphAreaMargin(6, 20, 0, 15);
 80040c0:	230f      	movs	r3, #15
 80040c2:	9300      	str	r3, [sp, #0]
 80040c4:	2214      	movs	r2, #20
 80040c6:	4633      	mov	r3, r6
 80040c8:	2106      	movs	r1, #6
 80040ca:	4628      	mov	r0, r5
 80040cc:	f009 ff42 	bl	800df54 <_ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss>
    dynamicGraph2.setGraphAreaPadding(0, 0, 0, 0);
 80040d0:	4633      	mov	r3, r6
 80040d2:	4632      	mov	r2, r6
 80040d4:	4631      	mov	r1, r6
 80040d6:	4628      	mov	r0, r5
 80040d8:	9600      	str	r6, [sp, #0]
 80040da:	f009 fe50 	bl	800dd7e <_ZN8touchgfx17AbstractDataGraph19setGraphAreaPaddingEssss>
    dynamicGraph2.setGraphRangeY(0, 100);
 80040de:	2264      	movs	r2, #100	; 0x64
 80040e0:	4631      	mov	r1, r6
 80040e2:	4628      	mov	r0, r5
 80040e4:	f7ff f97e 	bl	80033e4 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEii>
 80040e8:	4b23      	ldr	r3, [pc, #140]	; (8004178 <_ZN19ScreenGraphViewBaseC1Ev+0x3f4>)
 80040ea:	f8c4 3418 	str.w	r3, [r4, #1048]	; 0x418
    }

    virtual void setColor(colortype color)
    {
        AbstractPainterColor::setColor(color);
        color565 = LCD16bpp::getNativeColor(painterColor);
 80040ee:	f241 43b8 	movw	r3, #5304	; 0x14b8
 80040f2:	f8a4 341c 	strh.w	r3, [r4, #1052]	; 0x41c
        canvasPainter = &painter;
 80040f6:	9b03      	ldr	r3, [sp, #12]
 80040f8:	f8c4 3404 	str.w	r3, [r4, #1028]	; 0x404
     *
     * @see getLineWidth
     */
    FORCE_INLINE_FUNCTION void setLineWidth(uint8_t width)
    {
        lineWidth = width;
 80040fc:	f04f 0302 	mov.w	r3, #2
    dynamicGraph2.addGraphElement(dynamicGraph2Line1);
 8004100:	ee1d 1a10 	vmov	r1, s26
        visible = vis;
 8004104:	f884 6125 	strb.w	r6, [r4, #293]	; 0x125
 8004108:	f884 3408 	strb.w	r3, [r4, #1032]	; 0x408
 800410c:	4628      	mov	r0, r5
 800410e:	f009 fe41 	bl	800dd94 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        const float fs = f * (float)scale;
 8004112:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8004116:	ed9f 7a19 	vldr	s14, [pc, #100]	; 800417c <_ZN19ScreenGraphViewBaseC1Ev+0x3f8>
 800411a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800411e:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004122:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004126:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800412a:	f2c1 83b6 	blt.w	800589a <_ZN19ScreenGraphViewBaseC1Ev+0x1b16>
            return (int)(fs + 0.5f);
 800412e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004132:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004136:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800413a:	ee17 1a90 	vmov	r1, s15
 800413e:	e04d      	b.n	80041dc <_ZN19ScreenGraphViewBaseC1Ev+0x458>
 8004140:	080247c8 	.word	0x080247c8
 8004144:	08025480 	.word	0x08025480
 8004148:	08025418 	.word	0x08025418
 800414c:	080253a4 	.word	0x080253a4
 8004150:	08024d1c 	.word	0x08024d1c
 8004154:	0802447c 	.word	0x0802447c
 8004158:	08024ff4 	.word	0x08024ff4
 800415c:	08024614 	.word	0x08024614
 8004160:	08023620 	.word	0x08023620
 8004164:	08025128 	.word	0x08025128
 8004168:	08025238 	.word	0x08025238
 800416c:	08023e5c 	.word	0x08023e5c
 8004170:	080247b0 	.word	0x080247b0
 8004174:	08003bf1 	.word	0x08003bf1
 8004178:	ff1497c5 	.word	0xff1497c5
 800417c:	4270d9c6 	.word	0x4270d9c6
 8004180:	08024c6c 	.word	0x08024c6c
 8004184:	080242ec 	.word	0x080242ec
 8004188:	080243a4 	.word	0x080243a4
 800418c:	42891ee1 	.word	0x42891ee1
 8004190:	4295f1da 	.word	0x4295f1da
 8004194:	4299e6c7 	.word	0x4299e6c7
 8004198:	4292081a 	.word	0x4292081a
 800419c:	427c6f13 	.word	0x427c6f13
 80041a0:	424294c4 	.word	0x424294c4
 80041a4:	4200d904 	.word	0x4200d904
 80041a8:	4187beea 	.word	0x4187beea
 80041ac:	40bd15ca 	.word	0x40bd15ca
 80041b0:	3f94764b 	.word	0x3f94764b
 80041b4:	405ec472 	.word	0x405ec472
 80041b8:	414185b2 	.word	0x414185b2
 80041bc:	41c71c7d 	.word	0x41c71c7d
 80041c0:	421bb64d 	.word	0x421bb64d
 80041c4:	424cad16 	.word	0x424cad16
 80041c8:	426cc0f4 	.word	0x426cc0f4
 80041cc:	42770351 	.word	0x42770351
 80041d0:	426c5ff6 	.word	0x426c5ff6
 80041d4:	42534044 	.word	0x42534044
 80041d8:	4235d27e 	.word	0x4235d27e
        return addDataPointScaled(float2scaledY(y));
 80041dc:	4628      	mov	r0, r5
 80041de:	f009 ffc5 	bl	800e16c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80041e2:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80041e6:	ed1f 7a17 	vldr	s14, [pc, #-92]	; 800418c <_ZN19ScreenGraphViewBaseC1Ev+0x408>
 80041ea:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80041ee:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80041f2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80041f6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80041fa:	f2c1 8363 	blt.w	80058c4 <_ZN19ScreenGraphViewBaseC1Ev+0x1b40>
            return (int)(fs + 0.5f);
 80041fe:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004202:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004206:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800420a:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800420e:	4628      	mov	r0, r5
 8004210:	f009 ffac 	bl	800e16c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004214:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8004218:	ed1f 7a23 	vldr	s14, [pc, #-140]	; 8004190 <_ZN19ScreenGraphViewBaseC1Ev+0x40c>
 800421c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004220:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004224:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004228:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800422c:	f2c1 835f 	blt.w	80058ee <_ZN19ScreenGraphViewBaseC1Ev+0x1b6a>
            return (int)(fs + 0.5f);
 8004230:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004234:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004238:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800423c:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004240:	4628      	mov	r0, r5
 8004242:	f009 ff93 	bl	800e16c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004246:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800424a:	ed1f 7a2e 	vldr	s14, [pc, #-184]	; 8004194 <_ZN19ScreenGraphViewBaseC1Ev+0x410>
 800424e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004252:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004256:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800425a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800425e:	f2c1 835b 	blt.w	8005918 <_ZN19ScreenGraphViewBaseC1Ev+0x1b94>
            return (int)(fs + 0.5f);
 8004262:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004266:	ee77 7a87 	vadd.f32	s15, s15, s14
 800426a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800426e:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004272:	4628      	mov	r0, r5
 8004274:	f009 ff7a 	bl	800e16c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004278:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800427c:	ed1f 7a3a 	vldr	s14, [pc, #-232]	; 8004198 <_ZN19ScreenGraphViewBaseC1Ev+0x414>
 8004280:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004284:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004288:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800428c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004290:	f2c1 8357 	blt.w	8005942 <_ZN19ScreenGraphViewBaseC1Ev+0x1bbe>
            return (int)(fs + 0.5f);
 8004294:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004298:	ee77 7a87 	vadd.f32	s15, s15, s14
 800429c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80042a0:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80042a4:	4628      	mov	r0, r5
 80042a6:	f009 ff61 	bl	800e16c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80042aa:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80042ae:	ed1f 7a45 	vldr	s14, [pc, #-276]	; 800419c <_ZN19ScreenGraphViewBaseC1Ev+0x418>
 80042b2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80042b6:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80042ba:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80042be:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80042c2:	f2c1 8353 	blt.w	800596c <_ZN19ScreenGraphViewBaseC1Ev+0x1be8>
            return (int)(fs + 0.5f);
 80042c6:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80042ca:	ee77 7a87 	vadd.f32	s15, s15, s14
 80042ce:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80042d2:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80042d6:	4628      	mov	r0, r5
 80042d8:	f009 ff48 	bl	800e16c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80042dc:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80042e0:	ed1f 7a51 	vldr	s14, [pc, #-324]	; 80041a0 <_ZN19ScreenGraphViewBaseC1Ev+0x41c>
 80042e4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80042e8:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80042ec:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80042f0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80042f4:	f2c1 834f 	blt.w	8005996 <_ZN19ScreenGraphViewBaseC1Ev+0x1c12>
            return (int)(fs + 0.5f);
 80042f8:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80042fc:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004300:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004304:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004308:	4628      	mov	r0, r5
 800430a:	f009 ff2f 	bl	800e16c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800430e:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8004312:	ed1f 7a5c 	vldr	s14, [pc, #-368]	; 80041a4 <_ZN19ScreenGraphViewBaseC1Ev+0x420>
 8004316:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800431a:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800431e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004322:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004326:	f2c1 834b 	blt.w	80059c0 <_ZN19ScreenGraphViewBaseC1Ev+0x1c3c>
            return (int)(fs + 0.5f);
 800432a:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800432e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004332:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004336:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800433a:	4628      	mov	r0, r5
 800433c:	f009 ff16 	bl	800e16c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004340:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8004344:	ed1f 7a68 	vldr	s14, [pc, #-416]	; 80041a8 <_ZN19ScreenGraphViewBaseC1Ev+0x424>
 8004348:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800434c:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004350:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004354:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004358:	f2c1 8347 	blt.w	80059ea <_ZN19ScreenGraphViewBaseC1Ev+0x1c66>
            return (int)(fs + 0.5f);
 800435c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004360:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004364:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004368:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800436c:	4628      	mov	r0, r5
 800436e:	f009 fefd 	bl	800e16c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004372:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8004376:	ed1f 7a73 	vldr	s14, [pc, #-460]	; 80041ac <_ZN19ScreenGraphViewBaseC1Ev+0x428>
 800437a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800437e:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004382:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004386:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800438a:	f2c1 8351 	blt.w	8005a30 <_ZN19ScreenGraphViewBaseC1Ev+0x1cac>
            return (int)(fs + 0.5f);
 800438e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004392:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004396:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800439a:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800439e:	4628      	mov	r0, r5
 80043a0:	f009 fee4 	bl	800e16c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80043a4:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80043a8:	ed1f 7a7f 	vldr	s14, [pc, #-508]	; 80041b0 <_ZN19ScreenGraphViewBaseC1Ev+0x42c>
 80043ac:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80043b0:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80043b4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80043b8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80043bc:	f2c1 834d 	blt.w	8005a5a <_ZN19ScreenGraphViewBaseC1Ev+0x1cd6>
            return (int)(fs + 0.5f);
 80043c0:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80043c4:	ee77 7a87 	vadd.f32	s15, s15, s14
 80043c8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80043cc:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80043d0:	4628      	mov	r0, r5
 80043d2:	f009 fecb 	bl	800e16c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80043d6:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80043da:	ed1f 7a8a 	vldr	s14, [pc, #-552]	; 80041b4 <_ZN19ScreenGraphViewBaseC1Ev+0x430>
 80043de:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80043e2:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80043e6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80043ea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80043ee:	f2c1 8349 	blt.w	8005a84 <_ZN19ScreenGraphViewBaseC1Ev+0x1d00>
            return (int)(fs + 0.5f);
 80043f2:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80043f6:	ee77 7a87 	vadd.f32	s15, s15, s14
 80043fa:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80043fe:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004402:	4628      	mov	r0, r5
 8004404:	f009 feb2 	bl	800e16c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004408:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800440c:	ed1f 7a96 	vldr	s14, [pc, #-600]	; 80041b8 <_ZN19ScreenGraphViewBaseC1Ev+0x434>
 8004410:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004414:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004418:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800441c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004420:	f2c1 8345 	blt.w	8005aae <_ZN19ScreenGraphViewBaseC1Ev+0x1d2a>
            return (int)(fs + 0.5f);
 8004424:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004428:	ee77 7a87 	vadd.f32	s15, s15, s14
 800442c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004430:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004434:	4628      	mov	r0, r5
 8004436:	f009 fe99 	bl	800e16c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800443a:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800443e:	ed1f 7aa1 	vldr	s14, [pc, #-644]	; 80041bc <_ZN19ScreenGraphViewBaseC1Ev+0x438>
 8004442:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004446:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800444a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800444e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004452:	f2c1 8341 	blt.w	8005ad8 <_ZN19ScreenGraphViewBaseC1Ev+0x1d54>
            return (int)(fs + 0.5f);
 8004456:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800445a:	ee77 7a87 	vadd.f32	s15, s15, s14
 800445e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004462:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004466:	4628      	mov	r0, r5
 8004468:	f009 fe80 	bl	800e16c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800446c:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8004470:	ed1f 7aad 	vldr	s14, [pc, #-692]	; 80041c0 <_ZN19ScreenGraphViewBaseC1Ev+0x43c>
 8004474:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004478:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800447c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004480:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004484:	f2c1 833d 	blt.w	8005b02 <_ZN19ScreenGraphViewBaseC1Ev+0x1d7e>
            return (int)(fs + 0.5f);
 8004488:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800448c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004490:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004494:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004498:	4628      	mov	r0, r5
 800449a:	f009 fe67 	bl	800e16c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800449e:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80044a2:	ed1f 7ab8 	vldr	s14, [pc, #-736]	; 80041c4 <_ZN19ScreenGraphViewBaseC1Ev+0x440>
 80044a6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80044aa:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80044ae:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80044b2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80044b6:	f2c1 8339 	blt.w	8005b2c <_ZN19ScreenGraphViewBaseC1Ev+0x1da8>
            return (int)(fs + 0.5f);
 80044ba:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80044be:	ee77 7a87 	vadd.f32	s15, s15, s14
 80044c2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80044c6:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80044ca:	4628      	mov	r0, r5
 80044cc:	f009 fe4e 	bl	800e16c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80044d0:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80044d4:	ed1f 7ac4 	vldr	s14, [pc, #-784]	; 80041c8 <_ZN19ScreenGraphViewBaseC1Ev+0x444>
 80044d8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80044dc:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80044e0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80044e4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80044e8:	f2c1 8335 	blt.w	8005b56 <_ZN19ScreenGraphViewBaseC1Ev+0x1dd2>
            return (int)(fs + 0.5f);
 80044ec:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80044f0:	ee77 7a87 	vadd.f32	s15, s15, s14
 80044f4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80044f8:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80044fc:	4628      	mov	r0, r5
 80044fe:	f009 fe35 	bl	800e16c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004502:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8004506:	ed1f 7acf 	vldr	s14, [pc, #-828]	; 80041cc <_ZN19ScreenGraphViewBaseC1Ev+0x448>
 800450a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800450e:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004512:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004516:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800451a:	f2c1 8331 	blt.w	8005b80 <_ZN19ScreenGraphViewBaseC1Ev+0x1dfc>
            return (int)(fs + 0.5f);
 800451e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004522:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004526:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800452a:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800452e:	4628      	mov	r0, r5
 8004530:	f009 fe1c 	bl	800e16c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004534:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8004538:	ed1f 7adb 	vldr	s14, [pc, #-876]	; 80041d0 <_ZN19ScreenGraphViewBaseC1Ev+0x44c>
 800453c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004540:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004544:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004548:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800454c:	f2c1 832d 	blt.w	8005baa <_ZN19ScreenGraphViewBaseC1Ev+0x1e26>
            return (int)(fs + 0.5f);
 8004550:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004554:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004558:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800455c:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004560:	4628      	mov	r0, r5
 8004562:	f009 fe03 	bl	800e16c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004566:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800456a:	ed1f 7ae6 	vldr	s14, [pc, #-920]	; 80041d4 <_ZN19ScreenGraphViewBaseC1Ev+0x450>
 800456e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004572:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004576:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800457a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800457e:	f2c1 8329 	blt.w	8005bd4 <_ZN19ScreenGraphViewBaseC1Ev+0x1e50>
            return (int)(fs + 0.5f);
 8004582:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004586:	ee77 7a87 	vadd.f32	s15, s15, s14
 800458a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800458e:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004592:	4628      	mov	r0, r5
 8004594:	f009 fdea 	bl	800e16c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004598:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800459c:	ed1f 7af2 	vldr	s14, [pc, #-968]	; 80041d8 <_ZN19ScreenGraphViewBaseC1Ev+0x454>
 80045a0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80045a4:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80045a8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80045ac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80045b0:	f2c1 8325 	blt.w	8005bfe <_ZN19ScreenGraphViewBaseC1Ev+0x1e7a>
            return (int)(fs + 0.5f);
 80045b4:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80045b8:	ee77 7a87 	vadd.f32	s15, s15, s14
 80045bc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80045c0:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80045c4:	4628      	mov	r0, r5
 80045c6:	f009 fdd1 	bl	800e16c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80045ca:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80045ce:	ed9f 7af4 	vldr	s14, [pc, #976]	; 80049a0 <_ZN19ScreenGraphViewBaseC1Ev+0xc1c>
 80045d2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80045d6:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80045da:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80045de:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80045e2:	f2c1 8321 	blt.w	8005c28 <_ZN19ScreenGraphViewBaseC1Ev+0x1ea4>
            return (int)(fs + 0.5f);
 80045e6:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80045ea:	ee77 7a87 	vadd.f32	s15, s15, s14
 80045ee:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80045f2:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80045f6:	4628      	mov	r0, r5
 80045f8:	f009 fdb8 	bl	800e16c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80045fc:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8004600:	ed9f 7ae8 	vldr	s14, [pc, #928]	; 80049a4 <_ZN19ScreenGraphViewBaseC1Ev+0xc20>
 8004604:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004608:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800460c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004610:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004614:	f2c1 831d 	blt.w	8005c52 <_ZN19ScreenGraphViewBaseC1Ev+0x1ece>
            return (int)(fs + 0.5f);
 8004618:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800461c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004620:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004624:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004628:	4628      	mov	r0, r5
 800462a:	f009 fd9f 	bl	800e16c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800462e:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8004632:	ed9f 7add 	vldr	s14, [pc, #884]	; 80049a8 <_ZN19ScreenGraphViewBaseC1Ev+0xc24>
 8004636:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800463a:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800463e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004642:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004646:	f2c1 8319 	blt.w	8005c7c <_ZN19ScreenGraphViewBaseC1Ev+0x1ef8>
            return (int)(fs + 0.5f);
 800464a:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800464e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004652:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004656:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800465a:	4628      	mov	r0, r5
 800465c:	f009 fd86 	bl	800e16c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004660:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8004664:	ed9f 7ad1 	vldr	s14, [pc, #836]	; 80049ac <_ZN19ScreenGraphViewBaseC1Ev+0xc28>
 8004668:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800466c:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004670:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004674:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004678:	f2c1 8315 	blt.w	8005ca6 <_ZN19ScreenGraphViewBaseC1Ev+0x1f22>
            return (int)(fs + 0.5f);
 800467c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004680:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004684:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004688:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800468c:	4628      	mov	r0, r5
 800468e:	f009 fd6d 	bl	800e16c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004692:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8004696:	ed9f 7ac6 	vldr	s14, [pc, #792]	; 80049b0 <_ZN19ScreenGraphViewBaseC1Ev+0xc2c>
 800469a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800469e:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80046a2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80046a6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80046aa:	f2c1 8311 	blt.w	8005cd0 <_ZN19ScreenGraphViewBaseC1Ev+0x1f4c>
            return (int)(fs + 0.5f);
 80046ae:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80046b2:	ee77 7a87 	vadd.f32	s15, s15, s14
 80046b6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80046ba:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80046be:	4628      	mov	r0, r5
 80046c0:	f009 fd54 	bl	800e16c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80046c4:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80046c8:	ed9f 7aba 	vldr	s14, [pc, #744]	; 80049b4 <_ZN19ScreenGraphViewBaseC1Ev+0xc30>
 80046cc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80046d0:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80046d4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80046d8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80046dc:	f2c1 830d 	blt.w	8005cfa <_ZN19ScreenGraphViewBaseC1Ev+0x1f76>
            return (int)(fs + 0.5f);
 80046e0:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80046e4:	ee77 7a87 	vadd.f32	s15, s15, s14
 80046e8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80046ec:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80046f0:	4628      	mov	r0, r5
 80046f2:	f009 fd3b 	bl	800e16c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80046f6:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80046fa:	ed9f 7aaf 	vldr	s14, [pc, #700]	; 80049b8 <_ZN19ScreenGraphViewBaseC1Ev+0xc34>
 80046fe:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004702:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004706:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800470a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800470e:	f2c1 8309 	blt.w	8005d24 <_ZN19ScreenGraphViewBaseC1Ev+0x1fa0>
            return (int)(fs + 0.5f);
 8004712:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004716:	ee77 7a87 	vadd.f32	s15, s15, s14
 800471a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800471e:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004722:	4628      	mov	r0, r5
 8004724:	f009 fd22 	bl	800e16c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004728:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800472c:	ed9f 7aa3 	vldr	s14, [pc, #652]	; 80049bc <_ZN19ScreenGraphViewBaseC1Ev+0xc38>
 8004730:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004734:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004738:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800473c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004740:	f2c1 8305 	blt.w	8005d4e <_ZN19ScreenGraphViewBaseC1Ev+0x1fca>
            return (int)(fs + 0.5f);
 8004744:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004748:	ee77 7a87 	vadd.f32	s15, s15, s14
 800474c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004750:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004754:	4628      	mov	r0, r5
 8004756:	f009 fd09 	bl	800e16c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800475a:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800475e:	ed9f 7a98 	vldr	s14, [pc, #608]	; 80049c0 <_ZN19ScreenGraphViewBaseC1Ev+0xc3c>
 8004762:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004766:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800476a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800476e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004772:	f2c1 8301 	blt.w	8005d78 <_ZN19ScreenGraphViewBaseC1Ev+0x1ff4>
            return (int)(fs + 0.5f);
 8004776:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800477a:	ee77 7a87 	vadd.f32	s15, s15, s14
 800477e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004782:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004786:	4628      	mov	r0, r5
 8004788:	f009 fcf0 	bl	800e16c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800478c:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8004790:	ed9f 7a8c 	vldr	s14, [pc, #560]	; 80049c4 <_ZN19ScreenGraphViewBaseC1Ev+0xc40>
 8004794:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004798:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800479c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80047a0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80047a4:	f2c1 82fd 	blt.w	8005da2 <_ZN19ScreenGraphViewBaseC1Ev+0x201e>
            return (int)(fs + 0.5f);
 80047a8:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80047ac:	ee77 7a87 	vadd.f32	s15, s15, s14
 80047b0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80047b4:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80047b8:	4628      	mov	r0, r5
 80047ba:	f009 fcd7 	bl	800e16c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80047be:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80047c2:	ed9f 7a81 	vldr	s14, [pc, #516]	; 80049c8 <_ZN19ScreenGraphViewBaseC1Ev+0xc44>
 80047c6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80047ca:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80047ce:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80047d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80047d6:	f2c1 82f9 	blt.w	8005dcc <_ZN19ScreenGraphViewBaseC1Ev+0x2048>
            return (int)(fs + 0.5f);
 80047da:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80047de:	ee77 7a87 	vadd.f32	s15, s15, s14
 80047e2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80047e6:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80047ea:	4628      	mov	r0, r5
 80047ec:	f009 fcbe 	bl	800e16c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80047f0:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80047f4:	ed9f 7a75 	vldr	s14, [pc, #468]	; 80049cc <_ZN19ScreenGraphViewBaseC1Ev+0xc48>
 80047f8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80047fc:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004800:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004804:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004808:	f2c1 82f5 	blt.w	8005df6 <_ZN19ScreenGraphViewBaseC1Ev+0x2072>
            return (int)(fs + 0.5f);
 800480c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004810:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004814:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004818:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800481c:	4628      	mov	r0, r5
 800481e:	f009 fca5 	bl	800e16c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004822:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8004826:	ed9f 7a6a 	vldr	s14, [pc, #424]	; 80049d0 <_ZN19ScreenGraphViewBaseC1Ev+0xc4c>
 800482a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800482e:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004832:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004836:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800483a:	f2c1 82f1 	blt.w	8005e20 <_ZN19ScreenGraphViewBaseC1Ev+0x209c>
            return (int)(fs + 0.5f);
 800483e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004842:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004846:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800484a:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800484e:	4628      	mov	r0, r5
 8004850:	f009 fc8c 	bl	800e16c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004854:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8004858:	ed9f 7a5e 	vldr	s14, [pc, #376]	; 80049d4 <_ZN19ScreenGraphViewBaseC1Ev+0xc50>
 800485c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004860:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004864:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004868:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800486c:	f2c1 82ed 	blt.w	8005e4a <_ZN19ScreenGraphViewBaseC1Ev+0x20c6>
            return (int)(fs + 0.5f);
 8004870:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004874:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004878:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800487c:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004880:	4628      	mov	r0, r5
 8004882:	f009 fc73 	bl	800e16c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004886:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800488a:	ed9f 7a53 	vldr	s14, [pc, #332]	; 80049d8 <_ZN19ScreenGraphViewBaseC1Ev+0xc54>
 800488e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004892:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004896:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800489a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800489e:	f2c1 82e9 	blt.w	8005e74 <_ZN19ScreenGraphViewBaseC1Ev+0x20f0>
            return (int)(fs + 0.5f);
 80048a2:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80048a6:	ee77 7a87 	vadd.f32	s15, s15, s14
 80048aa:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80048ae:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80048b2:	4628      	mov	r0, r5
 80048b4:	f009 fc5a 	bl	800e16c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80048b8:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80048bc:	ed9f 7a47 	vldr	s14, [pc, #284]	; 80049dc <_ZN19ScreenGraphViewBaseC1Ev+0xc58>
 80048c0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80048c4:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80048c8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80048cc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80048d0:	f2c1 82e5 	blt.w	8005e9e <_ZN19ScreenGraphViewBaseC1Ev+0x211a>
            return (int)(fs + 0.5f);
 80048d4:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80048d8:	ee77 7a87 	vadd.f32	s15, s15, s14
 80048dc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80048e0:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80048e4:	4628      	mov	r0, r5
 80048e6:	f009 fc41 	bl	800e16c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80048ea:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80048ee:	ed9f 7a3c 	vldr	s14, [pc, #240]	; 80049e0 <_ZN19ScreenGraphViewBaseC1Ev+0xc5c>
 80048f2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80048f6:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80048fa:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80048fe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004902:	f2c1 82e1 	blt.w	8005ec8 <_ZN19ScreenGraphViewBaseC1Ev+0x2144>
            return (int)(fs + 0.5f);
 8004906:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800490a:	ee77 7a87 	vadd.f32	s15, s15, s14
 800490e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004912:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004916:	4628      	mov	r0, r5
 8004918:	f009 fc28 	bl	800e16c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800491c:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8004920:	ed9f 7a30 	vldr	s14, [pc, #192]	; 80049e4 <_ZN19ScreenGraphViewBaseC1Ev+0xc60>
 8004924:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004928:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800492c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004930:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004934:	f2c1 82dd 	blt.w	8005ef2 <_ZN19ScreenGraphViewBaseC1Ev+0x216e>
            return (int)(fs + 0.5f);
 8004938:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800493c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004940:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004944:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004948:	4628      	mov	r0, r5
 800494a:	f009 fc0f 	bl	800e16c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800494e:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8004952:	ed9f 7a25 	vldr	s14, [pc, #148]	; 80049e8 <_ZN19ScreenGraphViewBaseC1Ev+0xc64>
 8004956:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800495a:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800495e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004962:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004966:	f2c1 82d9 	blt.w	8005f1c <_ZN19ScreenGraphViewBaseC1Ev+0x2198>
            return (int)(fs + 0.5f);
 800496a:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800496e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004972:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004976:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800497a:	4628      	mov	r0, r5
 800497c:	f009 fbf6 	bl	800e16c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004980:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8004984:	ed9f 7a19 	vldr	s14, [pc, #100]	; 80049ec <_ZN19ScreenGraphViewBaseC1Ev+0xc68>
 8004988:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800498c:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004990:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004994:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004998:	f2c1 82d5 	blt.w	8005f46 <_ZN19ScreenGraphViewBaseC1Ev+0x21c2>
 800499c:	e04e      	b.n	8004a3c <_ZN19ScreenGraphViewBaseC1Ev+0xcb8>
 800499e:	bf00      	nop
 80049a0:	421f628d 	.word	0x421f628d
 80049a4:	42196c35 	.word	0x42196c35
 80049a8:	42291ff0 	.word	0x42291ff0
 80049ac:	424df7ad 	.word	0x424df7ad
 80049b0:	4280dad2 	.word	0x4280dad2
 80049b4:	429ce7a0 	.word	0x429ce7a0
 80049b8:	42b4f60d 	.word	0x42b4f60d
 80049bc:	42c36ec5 	.word	0x42c36ec5
 80049c0:	42c4aabb 	.word	0x42c4aabb
 80049c4:	42b7d933 	.word	0x42b7d933
 80049c8:	429f381d 	.word	0x429f381d
 80049cc:	427f2165 	.word	0x427f2165
 80049d0:	423e3060 	.word	0x423e3060
 80049d4:	4207f4f6 	.word	0x4207f4f6
 80049d8:	41cba5c9 	.word	0x41cba5c9
 80049dc:	41b82a2b 	.word	0x41b82a2b
 80049e0:	41d213fd 	.word	0x41d213fd
 80049e4:	42059769 	.word	0x42059769
 80049e8:	42271fc4 	.word	0x42271fc4
 80049ec:	4242406e 	.word	0x4242406e
 80049f0:	424dbbbd 	.word	0x424dbbbd
 80049f4:	4244d6c3 	.word	0x4244d6c3
 80049f8:	42289547 	.word	0x42289547
 80049fc:	41ff0c3f 	.word	0x41ff0c3f
 8004a00:	41a85793 	.word	0x41a85793
 8004a04:	4149941d 	.word	0x4149941d
 8004a08:	4111e04c 	.word	0x4111e04c
 8004a0c:	4141e8b2 	.word	0x4141e8b2
 8004a10:	41ad6e1a 	.word	0x41ad6e1a
 8004a14:	42117d59 	.word	0x42117d59
 8004a18:	42565dfc 	.word	0x42565dfc
 8004a1c:	428c48dd 	.word	0x428c48dd
 8004a20:	42a5f83d 	.word	0x42a5f83d
 8004a24:	42b3e0e4 	.word	0x42b3e0e4
 8004a28:	42b45c10 	.word	0x42b45c10
 8004a2c:	42a8ce0b 	.word	0x42a8ce0b
 8004a30:	42953f8e 	.word	0x42953f8e
 8004a34:	427ea92d 	.word	0x427ea92d
 8004a38:	4259c455 	.word	0x4259c455
            return (int)(fs + 0.5f);
 8004a3c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004a40:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004a44:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004a48:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004a4c:	4628      	mov	r0, r5
 8004a4e:	f009 fb8d 	bl	800e16c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004a52:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8004a56:	ed1f 7a1a 	vldr	s14, [pc, #-104]	; 80049f0 <_ZN19ScreenGraphViewBaseC1Ev+0xc6c>
 8004a5a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004a5e:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004a62:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004a66:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004a6a:	f2c1 8281 	blt.w	8005f70 <_ZN19ScreenGraphViewBaseC1Ev+0x21ec>
            return (int)(fs + 0.5f);
 8004a6e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004a72:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004a76:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004a7a:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004a7e:	4628      	mov	r0, r5
 8004a80:	f009 fb74 	bl	800e16c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004a84:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8004a88:	ed1f 7a26 	vldr	s14, [pc, #-152]	; 80049f4 <_ZN19ScreenGraphViewBaseC1Ev+0xc70>
 8004a8c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004a90:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004a94:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004a98:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004a9c:	f2c1 827d 	blt.w	8005f9a <_ZN19ScreenGraphViewBaseC1Ev+0x2216>
            return (int)(fs + 0.5f);
 8004aa0:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004aa4:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004aa8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004aac:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004ab0:	4628      	mov	r0, r5
 8004ab2:	f009 fb5b 	bl	800e16c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004ab6:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8004aba:	ed1f 7a31 	vldr	s14, [pc, #-196]	; 80049f8 <_ZN19ScreenGraphViewBaseC1Ev+0xc74>
 8004abe:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004ac2:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004ac6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004aca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004ace:	f2c1 8279 	blt.w	8005fc4 <_ZN19ScreenGraphViewBaseC1Ev+0x2240>
            return (int)(fs + 0.5f);
 8004ad2:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004ad6:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004ada:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004ade:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004ae2:	4628      	mov	r0, r5
 8004ae4:	f009 fb42 	bl	800e16c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004ae8:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8004aec:	ed1f 7a3d 	vldr	s14, [pc, #-244]	; 80049fc <_ZN19ScreenGraphViewBaseC1Ev+0xc78>
 8004af0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004af4:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004af8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004afc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004b00:	f2c1 8275 	blt.w	8005fee <_ZN19ScreenGraphViewBaseC1Ev+0x226a>
            return (int)(fs + 0.5f);
 8004b04:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004b08:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004b0c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004b10:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004b14:	4628      	mov	r0, r5
 8004b16:	f009 fb29 	bl	800e16c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004b1a:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8004b1e:	ed1f 7a48 	vldr	s14, [pc, #-288]	; 8004a00 <_ZN19ScreenGraphViewBaseC1Ev+0xc7c>
 8004b22:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004b26:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004b2a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004b2e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004b32:	f2c1 8271 	blt.w	8006018 <_ZN19ScreenGraphViewBaseC1Ev+0x2294>
            return (int)(fs + 0.5f);
 8004b36:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004b3a:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004b3e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004b42:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004b46:	4628      	mov	r0, r5
 8004b48:	f009 fb10 	bl	800e16c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004b4c:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8004b50:	ed1f 7a54 	vldr	s14, [pc, #-336]	; 8004a04 <_ZN19ScreenGraphViewBaseC1Ev+0xc80>
 8004b54:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004b58:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004b5c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004b60:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004b64:	f2c1 826d 	blt.w	8006042 <_ZN19ScreenGraphViewBaseC1Ev+0x22be>
            return (int)(fs + 0.5f);
 8004b68:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004b6c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004b70:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004b74:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004b78:	4628      	mov	r0, r5
 8004b7a:	f009 faf7 	bl	800e16c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004b7e:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8004b82:	ed1f 7a5f 	vldr	s14, [pc, #-380]	; 8004a08 <_ZN19ScreenGraphViewBaseC1Ev+0xc84>
 8004b86:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004b8a:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004b8e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004b92:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004b96:	f2c1 8269 	blt.w	800606c <_ZN19ScreenGraphViewBaseC1Ev+0x22e8>
            return (int)(fs + 0.5f);
 8004b9a:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004b9e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004ba2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004ba6:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004baa:	4628      	mov	r0, r5
 8004bac:	f009 fade 	bl	800e16c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004bb0:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8004bb4:	ed1f 7a6b 	vldr	s14, [pc, #-428]	; 8004a0c <_ZN19ScreenGraphViewBaseC1Ev+0xc88>
 8004bb8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004bbc:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004bc0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004bc4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004bc8:	f2c1 8265 	blt.w	8006096 <_ZN19ScreenGraphViewBaseC1Ev+0x2312>
            return (int)(fs + 0.5f);
 8004bcc:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004bd0:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004bd4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004bd8:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004bdc:	4628      	mov	r0, r5
 8004bde:	f009 fac5 	bl	800e16c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004be2:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8004be6:	ed1f 7a76 	vldr	s14, [pc, #-472]	; 8004a10 <_ZN19ScreenGraphViewBaseC1Ev+0xc8c>
 8004bea:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004bee:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004bf2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004bf6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004bfa:	f2c1 8261 	blt.w	80060c0 <_ZN19ScreenGraphViewBaseC1Ev+0x233c>
            return (int)(fs + 0.5f);
 8004bfe:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004c02:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004c06:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004c0a:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004c0e:	4628      	mov	r0, r5
 8004c10:	f009 faac 	bl	800e16c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004c14:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8004c18:	ed1f 7a82 	vldr	s14, [pc, #-520]	; 8004a14 <_ZN19ScreenGraphViewBaseC1Ev+0xc90>
 8004c1c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004c20:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004c24:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004c28:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004c2c:	f2c1 825d 	blt.w	80060ea <_ZN19ScreenGraphViewBaseC1Ev+0x2366>
            return (int)(fs + 0.5f);
 8004c30:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004c34:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004c38:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004c3c:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004c40:	4628      	mov	r0, r5
 8004c42:	f009 fa93 	bl	800e16c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004c46:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8004c4a:	ed1f 7a8d 	vldr	s14, [pc, #-564]	; 8004a18 <_ZN19ScreenGraphViewBaseC1Ev+0xc94>
 8004c4e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004c52:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004c56:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004c5a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004c5e:	f2c1 8259 	blt.w	8006114 <_ZN19ScreenGraphViewBaseC1Ev+0x2390>
            return (int)(fs + 0.5f);
 8004c62:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004c66:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004c6a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004c6e:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004c72:	4628      	mov	r0, r5
 8004c74:	f009 fa7a 	bl	800e16c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004c78:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8004c7c:	ed1f 7a99 	vldr	s14, [pc, #-612]	; 8004a1c <_ZN19ScreenGraphViewBaseC1Ev+0xc98>
 8004c80:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004c84:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004c88:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004c8c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004c90:	f2c1 8255 	blt.w	800613e <_ZN19ScreenGraphViewBaseC1Ev+0x23ba>
            return (int)(fs + 0.5f);
 8004c94:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004c98:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004c9c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004ca0:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004ca4:	4628      	mov	r0, r5
 8004ca6:	f009 fa61 	bl	800e16c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004caa:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8004cae:	ed1f 7aa4 	vldr	s14, [pc, #-656]	; 8004a20 <_ZN19ScreenGraphViewBaseC1Ev+0xc9c>
 8004cb2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004cb6:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004cba:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004cbe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004cc2:	f2c1 8251 	blt.w	8006168 <_ZN19ScreenGraphViewBaseC1Ev+0x23e4>
            return (int)(fs + 0.5f);
 8004cc6:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004cca:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004cce:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004cd2:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004cd6:	4628      	mov	r0, r5
 8004cd8:	f009 fa48 	bl	800e16c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004cdc:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8004ce0:	ed1f 7ab0 	vldr	s14, [pc, #-704]	; 8004a24 <_ZN19ScreenGraphViewBaseC1Ev+0xca0>
 8004ce4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004ce8:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004cec:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004cf0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004cf4:	f2c1 824d 	blt.w	8006192 <_ZN19ScreenGraphViewBaseC1Ev+0x240e>
            return (int)(fs + 0.5f);
 8004cf8:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004cfc:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004d00:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004d04:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004d08:	4628      	mov	r0, r5
 8004d0a:	f009 fa2f 	bl	800e16c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004d0e:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8004d12:	ed1f 7abb 	vldr	s14, [pc, #-748]	; 8004a28 <_ZN19ScreenGraphViewBaseC1Ev+0xca4>
 8004d16:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004d1a:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004d1e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004d22:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004d26:	f2c1 8249 	blt.w	80061bc <_ZN19ScreenGraphViewBaseC1Ev+0x2438>
            return (int)(fs + 0.5f);
 8004d2a:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004d2e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004d32:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004d36:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004d3a:	4628      	mov	r0, r5
 8004d3c:	f009 fa16 	bl	800e16c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004d40:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8004d44:	ed1f 7ac7 	vldr	s14, [pc, #-796]	; 8004a2c <_ZN19ScreenGraphViewBaseC1Ev+0xca8>
 8004d48:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004d4c:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004d50:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004d54:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004d58:	f2c1 8245 	blt.w	80061e6 <_ZN19ScreenGraphViewBaseC1Ev+0x2462>
            return (int)(fs + 0.5f);
 8004d5c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004d60:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004d64:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004d68:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004d6c:	4628      	mov	r0, r5
 8004d6e:	f009 f9fd 	bl	800e16c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004d72:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8004d76:	ed1f 7ad2 	vldr	s14, [pc, #-840]	; 8004a30 <_ZN19ScreenGraphViewBaseC1Ev+0xcac>
 8004d7a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004d7e:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004d82:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004d86:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004d8a:	f2c1 8241 	blt.w	8006210 <_ZN19ScreenGraphViewBaseC1Ev+0x248c>
            return (int)(fs + 0.5f);
 8004d8e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004d92:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004d96:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004d9a:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004d9e:	4628      	mov	r0, r5
 8004da0:	f009 f9e4 	bl	800e16c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004da4:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8004da8:	ed1f 7ade 	vldr	s14, [pc, #-888]	; 8004a34 <_ZN19ScreenGraphViewBaseC1Ev+0xcb0>
 8004dac:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004db0:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004db4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004db8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004dbc:	f2c1 823d 	blt.w	800623a <_ZN19ScreenGraphViewBaseC1Ev+0x24b6>
            return (int)(fs + 0.5f);
 8004dc0:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004dc4:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004dc8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004dcc:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004dd0:	4628      	mov	r0, r5
 8004dd2:	f009 f9cb 	bl	800e16c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004dd6:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8004dda:	ed1f 7ae9 	vldr	s14, [pc, #-932]	; 8004a38 <_ZN19ScreenGraphViewBaseC1Ev+0xcb4>
 8004dde:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004de2:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004de6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004dea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004dee:	f2c1 8239 	blt.w	8006264 <_ZN19ScreenGraphViewBaseC1Ev+0x24e0>
            return (int)(fs + 0.5f);
 8004df2:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004df6:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004dfa:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004dfe:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004e02:	4628      	mov	r0, r5
 8004e04:	f009 f9b2 	bl	800e16c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004e08:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8004e0c:	ed9f 7af3 	vldr	s14, [pc, #972]	; 80051dc <_ZN19ScreenGraphViewBaseC1Ev+0x1458>
 8004e10:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004e14:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004e18:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004e1c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004e20:	f2c1 8235 	blt.w	800628e <_ZN19ScreenGraphViewBaseC1Ev+0x250a>
            return (int)(fs + 0.5f);
 8004e24:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004e28:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004e2c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004e30:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004e34:	4628      	mov	r0, r5
 8004e36:	f009 f999 	bl	800e16c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004e3a:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8004e3e:	ed9f 7ae8 	vldr	s14, [pc, #928]	; 80051e0 <_ZN19ScreenGraphViewBaseC1Ev+0x145c>
 8004e42:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004e46:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004e4a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004e4e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004e52:	f2c1 8231 	blt.w	80062b8 <_ZN19ScreenGraphViewBaseC1Ev+0x2534>
            return (int)(fs + 0.5f);
 8004e56:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004e5a:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004e5e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004e62:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004e66:	4628      	mov	r0, r5
 8004e68:	f009 f980 	bl	800e16c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004e6c:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8004e70:	ed9f 7adc 	vldr	s14, [pc, #880]	; 80051e4 <_ZN19ScreenGraphViewBaseC1Ev+0x1460>
 8004e74:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004e78:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004e7c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004e80:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004e84:	f2c1 822d 	blt.w	80062e2 <_ZN19ScreenGraphViewBaseC1Ev+0x255e>
            return (int)(fs + 0.5f);
 8004e88:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004e8c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004e90:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004e94:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004e98:	4628      	mov	r0, r5
 8004e9a:	f009 f967 	bl	800e16c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004e9e:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8004ea2:	ed9f 7ad1 	vldr	s14, [pc, #836]	; 80051e8 <_ZN19ScreenGraphViewBaseC1Ev+0x1464>
 8004ea6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004eaa:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004eae:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004eb2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004eb6:	f2c1 8229 	blt.w	800630c <_ZN19ScreenGraphViewBaseC1Ev+0x2588>
            return (int)(fs + 0.5f);
 8004eba:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004ebe:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004ec2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004ec6:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004eca:	4628      	mov	r0, r5
 8004ecc:	f009 f94e 	bl	800e16c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004ed0:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8004ed4:	ed9f 7ac5 	vldr	s14, [pc, #788]	; 80051ec <_ZN19ScreenGraphViewBaseC1Ev+0x1468>
 8004ed8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004edc:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004ee0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004ee4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004ee8:	f2c1 8225 	blt.w	8006336 <_ZN19ScreenGraphViewBaseC1Ev+0x25b2>
            return (int)(fs + 0.5f);
 8004eec:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004ef0:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004ef4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004ef8:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004efc:	4628      	mov	r0, r5
 8004efe:	f009 f935 	bl	800e16c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004f02:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8004f06:	ed9f 7aba 	vldr	s14, [pc, #744]	; 80051f0 <_ZN19ScreenGraphViewBaseC1Ev+0x146c>
 8004f0a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004f0e:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004f12:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004f16:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004f1a:	f2c1 8221 	blt.w	8006360 <_ZN19ScreenGraphViewBaseC1Ev+0x25dc>
            return (int)(fs + 0.5f);
 8004f1e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004f22:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004f26:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004f2a:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004f2e:	4628      	mov	r0, r5
 8004f30:	f009 f91c 	bl	800e16c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004f34:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8004f38:	ed9f 7aae 	vldr	s14, [pc, #696]	; 80051f4 <_ZN19ScreenGraphViewBaseC1Ev+0x1470>
 8004f3c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004f40:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004f44:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004f48:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004f4c:	f2c1 821d 	blt.w	800638a <_ZN19ScreenGraphViewBaseC1Ev+0x2606>
            return (int)(fs + 0.5f);
 8004f50:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004f54:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004f58:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004f5c:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004f60:	4628      	mov	r0, r5
 8004f62:	f009 f903 	bl	800e16c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004f66:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8004f6a:	ed9f 7aa3 	vldr	s14, [pc, #652]	; 80051f8 <_ZN19ScreenGraphViewBaseC1Ev+0x1474>
 8004f6e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004f72:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004f76:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004f7a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004f7e:	f2c1 8219 	blt.w	80063b4 <_ZN19ScreenGraphViewBaseC1Ev+0x2630>
            return (int)(fs + 0.5f);
 8004f82:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004f86:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004f8a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004f8e:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004f92:	4628      	mov	r0, r5
 8004f94:	f009 f8ea 	bl	800e16c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004f98:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8004f9c:	ed9f 7a97 	vldr	s14, [pc, #604]	; 80051fc <_ZN19ScreenGraphViewBaseC1Ev+0x1478>
 8004fa0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004fa4:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004fa8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004fac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004fb0:	f2c1 8215 	blt.w	80063de <_ZN19ScreenGraphViewBaseC1Ev+0x265a>
            return (int)(fs + 0.5f);
 8004fb4:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004fb8:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004fbc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004fc0:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004fc4:	4628      	mov	r0, r5
 8004fc6:	f009 f8d1 	bl	800e16c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004fca:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8004fce:	ed9f 7a8c 	vldr	s14, [pc, #560]	; 8005200 <_ZN19ScreenGraphViewBaseC1Ev+0x147c>
 8004fd2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004fd6:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004fda:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004fde:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004fe2:	f2c1 8211 	blt.w	8006408 <_ZN19ScreenGraphViewBaseC1Ev+0x2684>
            return (int)(fs + 0.5f);
 8004fe6:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004fea:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004fee:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004ff2:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004ff6:	4628      	mov	r0, r5
 8004ff8:	f009 f8b8 	bl	800e16c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004ffc:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8005000:	ed9f 7a80 	vldr	s14, [pc, #512]	; 8005204 <_ZN19ScreenGraphViewBaseC1Ev+0x1480>
 8005004:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005008:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800500c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005010:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005014:	f2c1 820d 	blt.w	8006432 <_ZN19ScreenGraphViewBaseC1Ev+0x26ae>
            return (int)(fs + 0.5f);
 8005018:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800501c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005020:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005024:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005028:	4628      	mov	r0, r5
 800502a:	f009 f89f 	bl	800e16c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800502e:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8005032:	ed9f 7a75 	vldr	s14, [pc, #468]	; 8005208 <_ZN19ScreenGraphViewBaseC1Ev+0x1484>
 8005036:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800503a:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800503e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005042:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005046:	f2c1 8209 	blt.w	800645c <_ZN19ScreenGraphViewBaseC1Ev+0x26d8>
            return (int)(fs + 0.5f);
 800504a:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800504e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005052:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005056:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800505a:	4628      	mov	r0, r5
 800505c:	f009 f886 	bl	800e16c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8005060:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8005064:	ed9f 7a69 	vldr	s14, [pc, #420]	; 800520c <_ZN19ScreenGraphViewBaseC1Ev+0x1488>
 8005068:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800506c:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8005070:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005074:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005078:	f2c1 8205 	blt.w	8006486 <_ZN19ScreenGraphViewBaseC1Ev+0x2702>
            return (int)(fs + 0.5f);
 800507c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005080:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005084:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005088:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800508c:	4628      	mov	r0, r5
 800508e:	f009 f86d 	bl	800e16c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8005092:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8005096:	ed9f 7a5e 	vldr	s14, [pc, #376]	; 8005210 <_ZN19ScreenGraphViewBaseC1Ev+0x148c>
 800509a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800509e:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80050a2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80050a6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80050aa:	f2c1 8201 	blt.w	80064b0 <_ZN19ScreenGraphViewBaseC1Ev+0x272c>
            return (int)(fs + 0.5f);
 80050ae:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80050b2:	ee77 7a87 	vadd.f32	s15, s15, s14
 80050b6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80050ba:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80050be:	4628      	mov	r0, r5
 80050c0:	f009 f854 	bl	800e16c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80050c4:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80050c8:	ed9f 7a52 	vldr	s14, [pc, #328]	; 8005214 <_ZN19ScreenGraphViewBaseC1Ev+0x1490>
 80050cc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80050d0:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80050d4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80050d8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80050dc:	f2c1 81fd 	blt.w	80064da <_ZN19ScreenGraphViewBaseC1Ev+0x2756>
            return (int)(fs + 0.5f);
 80050e0:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80050e4:	ee77 7a87 	vadd.f32	s15, s15, s14
 80050e8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80050ec:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80050f0:	4628      	mov	r0, r5
 80050f2:	f009 f83b 	bl	800e16c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80050f6:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80050fa:	ed9f 7a47 	vldr	s14, [pc, #284]	; 8005218 <_ZN19ScreenGraphViewBaseC1Ev+0x1494>
 80050fe:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005102:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8005106:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800510a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800510e:	f2c1 81f9 	blt.w	8006504 <_ZN19ScreenGraphViewBaseC1Ev+0x2780>
            return (int)(fs + 0.5f);
 8005112:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005116:	ee77 7a87 	vadd.f32	s15, s15, s14
 800511a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800511e:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005122:	4628      	mov	r0, r5
 8005124:	f009 f822 	bl	800e16c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8005128:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800512c:	ed9f 7a3b 	vldr	s14, [pc, #236]	; 800521c <_ZN19ScreenGraphViewBaseC1Ev+0x1498>
 8005130:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005134:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8005138:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800513c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005140:	f2c1 81f5 	blt.w	800652e <_ZN19ScreenGraphViewBaseC1Ev+0x27aa>
            return (int)(fs + 0.5f);
 8005144:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005148:	ee77 7a87 	vadd.f32	s15, s15, s14
 800514c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005150:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005154:	4628      	mov	r0, r5
 8005156:	f009 f809 	bl	800e16c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800515a:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800515e:	ed9f 7a30 	vldr	s14, [pc, #192]	; 8005220 <_ZN19ScreenGraphViewBaseC1Ev+0x149c>
 8005162:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005166:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800516a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800516e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005172:	f2c1 81f1 	blt.w	8006558 <_ZN19ScreenGraphViewBaseC1Ev+0x27d4>
            return (int)(fs + 0.5f);
 8005176:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800517a:	ee77 7a87 	vadd.f32	s15, s15, s14
 800517e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005182:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005186:	4628      	mov	r0, r5
 8005188:	f008 fff0 	bl	800e16c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800518c:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8005190:	ed9f 7a24 	vldr	s14, [pc, #144]	; 8005224 <_ZN19ScreenGraphViewBaseC1Ev+0x14a0>
 8005194:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005198:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800519c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80051a0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80051a4:	f2c1 81ed 	blt.w	8006582 <_ZN19ScreenGraphViewBaseC1Ev+0x27fe>
            return (int)(fs + 0.5f);
 80051a8:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80051ac:	ee77 7a87 	vadd.f32	s15, s15, s14
 80051b0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80051b4:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80051b8:	4628      	mov	r0, r5
 80051ba:	f008 ffd7 	bl	800e16c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80051be:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80051c2:	ed9f 7a19 	vldr	s14, [pc, #100]	; 8005228 <_ZN19ScreenGraphViewBaseC1Ev+0x14a4>
 80051c6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80051ca:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80051ce:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80051d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80051d6:	f2c1 81e9 	blt.w	80065ac <_ZN19ScreenGraphViewBaseC1Ev+0x2828>
 80051da:	e04d      	b.n	8005278 <_ZN19ScreenGraphViewBaseC1Ev+0x14f4>
 80051dc:	4244f81d 	.word	0x4244f81d
 80051e0:	4244aa84 	.word	0x4244aa84
 80051e4:	42577360 	.word	0x42577360
 80051e8:	427683aa 	.word	0x427683aa
 80051ec:	428bb36a 	.word	0x428bb36a
 80051f0:	42975795 	.word	0x42975795
 80051f4:	4299724b 	.word	0x4299724b
 80051f8:	428f7e4d 	.word	0x428f7e4d
 80051fc:	4273bf2e 	.word	0x4273bf2e
 8005200:	4237bf9f 	.word	0x4237bf9f
 8005204:	41ebd293 	.word	0x41ebd293
 8005208:	416be6e4 	.word	0x416be6e4
 800520c:	409424b3 	.word	0x409424b3
 8005210:	3f8765aa 	.word	0x3f8765aa
 8005214:	409106a3 	.word	0x409106a3
 8005218:	41606fc8 	.word	0x41606fc8
 800521c:	41d9fc0c 	.word	0x41d9fc0c
 8005220:	4224c207 	.word	0x4224c207
 8005224:	42537439 	.word	0x42537439
 8005228:	42700df0 	.word	0x42700df0
 800522c:	427692ca 	.word	0x427692ca
 8005230:	4268ebaa 	.word	0x4268ebaa
 8005234:	424e4b49 	.word	0x424e4b49
 8005238:	423143a8 	.word	0x423143a8
 800523c:	421d063c 	.word	0x421d063c
 8005240:	421a7ca9 	.word	0x421a7ca9
 8005244:	422df1b4 	.word	0x422df1b4
 8005248:	4255ded8 	.word	0x4255ded8
 800524c:	42859564 	.word	0x42859564
 8005250:	42a1658d 	.word	0x42a1658d
 8005254:	42b831e0 	.word	0x42b831e0
 8005258:	42c4a06e 	.word	0x42c4a06e
 800525c:	42c37870 	.word	0x42c37870
 8005260:	42b46e05 	.word	0x42b46e05
 8005264:	429a3aae 	.word	0x429a3aae
 8005268:	4273f8ae 	.word	0x4273f8ae
 800526c:	423403a8 	.word	0x423403a8
 8005270:	42009f78 	.word	0x42009f78
 8005274:	41c4e6ca 	.word	0x41c4e6ca
            return (int)(fs + 0.5f);
 8005278:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800527c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005280:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005284:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005288:	4628      	mov	r0, r5
 800528a:	f008 ff6f 	bl	800e16c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800528e:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8005292:	ed1f 7a1a 	vldr	s14, [pc, #-104]	; 800522c <_ZN19ScreenGraphViewBaseC1Ev+0x14a8>
 8005296:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800529a:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800529e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80052a2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80052a6:	f2c1 8196 	blt.w	80065d6 <_ZN19ScreenGraphViewBaseC1Ev+0x2852>
            return (int)(fs + 0.5f);
 80052aa:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80052ae:	ee77 7a87 	vadd.f32	s15, s15, s14
 80052b2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80052b6:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80052ba:	4628      	mov	r0, r5
 80052bc:	f008 ff56 	bl	800e16c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80052c0:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80052c4:	ed1f 7a26 	vldr	s14, [pc, #-152]	; 8005230 <_ZN19ScreenGraphViewBaseC1Ev+0x14ac>
 80052c8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80052cc:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80052d0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80052d4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80052d8:	f2c1 8192 	blt.w	8006600 <_ZN19ScreenGraphViewBaseC1Ev+0x287c>
            return (int)(fs + 0.5f);
 80052dc:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80052e0:	ee77 7a87 	vadd.f32	s15, s15, s14
 80052e4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80052e8:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80052ec:	4628      	mov	r0, r5
 80052ee:	f008 ff3d 	bl	800e16c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80052f2:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80052f6:	ed1f 7a31 	vldr	s14, [pc, #-196]	; 8005234 <_ZN19ScreenGraphViewBaseC1Ev+0x14b0>
 80052fa:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80052fe:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8005302:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005306:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800530a:	f2c1 818e 	blt.w	800662a <_ZN19ScreenGraphViewBaseC1Ev+0x28a6>
            return (int)(fs + 0.5f);
 800530e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005312:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005316:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800531a:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800531e:	4628      	mov	r0, r5
 8005320:	f008 ff24 	bl	800e16c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8005324:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8005328:	ed1f 7a3d 	vldr	s14, [pc, #-244]	; 8005238 <_ZN19ScreenGraphViewBaseC1Ev+0x14b4>
 800532c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005330:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8005334:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005338:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800533c:	f2c1 818a 	blt.w	8006654 <_ZN19ScreenGraphViewBaseC1Ev+0x28d0>
            return (int)(fs + 0.5f);
 8005340:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005344:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005348:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800534c:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005350:	4628      	mov	r0, r5
 8005352:	f008 ff0b 	bl	800e16c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8005356:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800535a:	ed1f 7a48 	vldr	s14, [pc, #-288]	; 800523c <_ZN19ScreenGraphViewBaseC1Ev+0x14b8>
 800535e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005362:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8005366:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800536a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800536e:	f2c1 8186 	blt.w	800667e <_ZN19ScreenGraphViewBaseC1Ev+0x28fa>
            return (int)(fs + 0.5f);
 8005372:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005376:	ee77 7a87 	vadd.f32	s15, s15, s14
 800537a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800537e:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005382:	4628      	mov	r0, r5
 8005384:	f008 fef2 	bl	800e16c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8005388:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800538c:	ed1f 7a54 	vldr	s14, [pc, #-336]	; 8005240 <_ZN19ScreenGraphViewBaseC1Ev+0x14bc>
 8005390:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005394:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8005398:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800539c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80053a0:	f2c1 8182 	blt.w	80066a8 <_ZN19ScreenGraphViewBaseC1Ev+0x2924>
            return (int)(fs + 0.5f);
 80053a4:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80053a8:	ee77 7a87 	vadd.f32	s15, s15, s14
 80053ac:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80053b0:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80053b4:	4628      	mov	r0, r5
 80053b6:	f008 fed9 	bl	800e16c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80053ba:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80053be:	ed1f 7a5f 	vldr	s14, [pc, #-380]	; 8005244 <_ZN19ScreenGraphViewBaseC1Ev+0x14c0>
 80053c2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80053c6:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80053ca:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80053ce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80053d2:	f2c1 817e 	blt.w	80066d2 <_ZN19ScreenGraphViewBaseC1Ev+0x294e>
            return (int)(fs + 0.5f);
 80053d6:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80053da:	ee77 7a87 	vadd.f32	s15, s15, s14
 80053de:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80053e2:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80053e6:	4628      	mov	r0, r5
 80053e8:	f008 fec0 	bl	800e16c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80053ec:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80053f0:	ed1f 7a6b 	vldr	s14, [pc, #-428]	; 8005248 <_ZN19ScreenGraphViewBaseC1Ev+0x14c4>
 80053f4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80053f8:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80053fc:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005400:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005404:	f2c1 817a 	blt.w	80066fc <_ZN19ScreenGraphViewBaseC1Ev+0x2978>
            return (int)(fs + 0.5f);
 8005408:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800540c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005410:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005414:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005418:	4628      	mov	r0, r5
 800541a:	f008 fea7 	bl	800e16c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800541e:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8005422:	ed1f 7a76 	vldr	s14, [pc, #-472]	; 800524c <_ZN19ScreenGraphViewBaseC1Ev+0x14c8>
 8005426:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800542a:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800542e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005432:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005436:	f2c1 8176 	blt.w	8006726 <_ZN19ScreenGraphViewBaseC1Ev+0x29a2>
            return (int)(fs + 0.5f);
 800543a:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800543e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005442:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005446:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800544a:	4628      	mov	r0, r5
 800544c:	f008 fe8e 	bl	800e16c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8005450:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8005454:	ed1f 7a82 	vldr	s14, [pc, #-520]	; 8005250 <_ZN19ScreenGraphViewBaseC1Ev+0x14cc>
 8005458:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800545c:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8005460:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005464:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005468:	f2c1 8172 	blt.w	8006750 <_ZN19ScreenGraphViewBaseC1Ev+0x29cc>
            return (int)(fs + 0.5f);
 800546c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005470:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005474:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005478:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800547c:	4628      	mov	r0, r5
 800547e:	f008 fe75 	bl	800e16c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8005482:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8005486:	ed1f 7a8d 	vldr	s14, [pc, #-564]	; 8005254 <_ZN19ScreenGraphViewBaseC1Ev+0x14d0>
 800548a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800548e:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8005492:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005496:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800549a:	f2c1 816e 	blt.w	800677a <_ZN19ScreenGraphViewBaseC1Ev+0x29f6>
            return (int)(fs + 0.5f);
 800549e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80054a2:	ee77 7a87 	vadd.f32	s15, s15, s14
 80054a6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80054aa:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80054ae:	4628      	mov	r0, r5
 80054b0:	f008 fe5c 	bl	800e16c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80054b4:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80054b8:	ed1f 7a99 	vldr	s14, [pc, #-612]	; 8005258 <_ZN19ScreenGraphViewBaseC1Ev+0x14d4>
 80054bc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80054c0:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80054c4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80054c8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80054cc:	f2c1 816a 	blt.w	80067a4 <_ZN19ScreenGraphViewBaseC1Ev+0x2a20>
            return (int)(fs + 0.5f);
 80054d0:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80054d4:	ee77 7a87 	vadd.f32	s15, s15, s14
 80054d8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80054dc:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80054e0:	4628      	mov	r0, r5
 80054e2:	f008 fe43 	bl	800e16c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80054e6:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80054ea:	ed1f 7aa4 	vldr	s14, [pc, #-656]	; 800525c <_ZN19ScreenGraphViewBaseC1Ev+0x14d8>
 80054ee:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80054f2:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80054f6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80054fa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80054fe:	f2c1 8166 	blt.w	80067ce <_ZN19ScreenGraphViewBaseC1Ev+0x2a4a>
            return (int)(fs + 0.5f);
 8005502:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005506:	ee77 7a87 	vadd.f32	s15, s15, s14
 800550a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800550e:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005512:	4628      	mov	r0, r5
 8005514:	f008 fe2a 	bl	800e16c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8005518:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800551c:	ed1f 7ab0 	vldr	s14, [pc, #-704]	; 8005260 <_ZN19ScreenGraphViewBaseC1Ev+0x14dc>
 8005520:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005524:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8005528:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800552c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005530:	f2c1 8162 	blt.w	80067f8 <_ZN19ScreenGraphViewBaseC1Ev+0x2a74>
            return (int)(fs + 0.5f);
 8005534:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005538:	ee77 7a87 	vadd.f32	s15, s15, s14
 800553c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005540:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005544:	4628      	mov	r0, r5
 8005546:	f008 fe11 	bl	800e16c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800554a:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800554e:	ed1f 7abb 	vldr	s14, [pc, #-748]	; 8005264 <_ZN19ScreenGraphViewBaseC1Ev+0x14e0>
 8005552:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005556:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800555a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800555e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005562:	f2c1 815e 	blt.w	8006822 <_ZN19ScreenGraphViewBaseC1Ev+0x2a9e>
            return (int)(fs + 0.5f);
 8005566:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800556a:	ee77 7a87 	vadd.f32	s15, s15, s14
 800556e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005572:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005576:	4628      	mov	r0, r5
 8005578:	f008 fdf8 	bl	800e16c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800557c:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8005580:	ed1f 7ac7 	vldr	s14, [pc, #-796]	; 8005268 <_ZN19ScreenGraphViewBaseC1Ev+0x14e4>
 8005584:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005588:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800558c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005590:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005594:	f2c1 815a 	blt.w	800684c <_ZN19ScreenGraphViewBaseC1Ev+0x2ac8>
            return (int)(fs + 0.5f);
 8005598:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800559c:	ee77 7a87 	vadd.f32	s15, s15, s14
 80055a0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80055a4:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80055a8:	4628      	mov	r0, r5
 80055aa:	f008 fddf 	bl	800e16c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80055ae:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80055b2:	ed1f 7ad2 	vldr	s14, [pc, #-840]	; 800526c <_ZN19ScreenGraphViewBaseC1Ev+0x14e8>
 80055b6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80055ba:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80055be:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80055c2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80055c6:	f2c1 8156 	blt.w	8006876 <_ZN19ScreenGraphViewBaseC1Ev+0x2af2>
            return (int)(fs + 0.5f);
 80055ca:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80055ce:	ee77 7a87 	vadd.f32	s15, s15, s14
 80055d2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80055d6:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80055da:	4628      	mov	r0, r5
 80055dc:	f008 fdc6 	bl	800e16c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80055e0:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80055e4:	ed1f 7ade 	vldr	s14, [pc, #-888]	; 8005270 <_ZN19ScreenGraphViewBaseC1Ev+0x14ec>
 80055e8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80055ec:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80055f0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80055f4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80055f8:	f2c1 8152 	blt.w	80068a0 <_ZN19ScreenGraphViewBaseC1Ev+0x2b1c>
            return (int)(fs + 0.5f);
 80055fc:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005600:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005604:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005608:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800560c:	4628      	mov	r0, r5
 800560e:	f008 fdad 	bl	800e16c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8005612:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8005616:	ed1f 7ae9 	vldr	s14, [pc, #-932]	; 8005274 <_ZN19ScreenGraphViewBaseC1Ev+0x14f0>
 800561a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800561e:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8005622:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005626:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800562a:	f2c1 814e 	blt.w	80068ca <_ZN19ScreenGraphViewBaseC1Ev+0x2b46>
            return (int)(fs + 0.5f);
 800562e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005632:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005636:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800563a:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800563e:	4628      	mov	r0, r5
 8005640:	f008 fd94 	bl	800e16c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8005644:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8005648:	ed9f 7af2 	vldr	s14, [pc, #968]	; 8005a14 <_ZN19ScreenGraphViewBaseC1Ev+0x1c90>
 800564c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005650:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8005654:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005658:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800565c:	f2c1 814a 	blt.w	80068f4 <_ZN19ScreenGraphViewBaseC1Ev+0x2b70>
            return (int)(fs + 0.5f);
 8005660:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005664:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005668:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800566c:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005670:	4628      	mov	r0, r5
 8005672:	f008 fd7b 	bl	800e16c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
    dynamicGraph1.setScale(1000);
 8005676:	2200      	movs	r2, #0
 8005678:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 800567c:	4650      	mov	r0, sl
 800567e:	f7fd ffd9 	bl	8003634 <_ZN8touchgfx16DynamicDataGraph8setScaleEib>
    dynamicGraph1.setPosition(0, 0, 320, 166);
 8005682:	2200      	movs	r2, #0
 8005684:	23a6      	movs	r3, #166	; 0xa6
 8005686:	4611      	mov	r1, r2
 8005688:	9300      	str	r3, [sp, #0]
 800568a:	4650      	mov	r0, sl
 800568c:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8005690:	f7fd fafb 	bl	8002c8a <_ZN8touchgfx8Drawable11setPositionEssss>
    dynamicGraph1.setGraphAreaMargin(6, 20, 0, 15);
 8005694:	230f      	movs	r3, #15
    dynamicGraph1.setGraphAreaPadding(0, 0, 0, 0);
 8005696:	2600      	movs	r6, #0
    dynamicGraph1.setGraphAreaMargin(6, 20, 0, 15);
 8005698:	9300      	str	r3, [sp, #0]
 800569a:	2214      	movs	r2, #20
 800569c:	2300      	movs	r3, #0
 800569e:	2106      	movs	r1, #6
 80056a0:	4650      	mov	r0, sl
 80056a2:	f008 fc57 	bl	800df54 <_ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss>
    dynamicGraph1.setGraphAreaPadding(0, 0, 0, 0);
 80056a6:	4633      	mov	r3, r6
 80056a8:	4632      	mov	r2, r6
 80056aa:	4631      	mov	r1, r6
 80056ac:	4650      	mov	r0, sl
 80056ae:	9600      	str	r6, [sp, #0]
 80056b0:	f008 fb65 	bl	800dd7e <_ZN8touchgfx17AbstractDataGraph19setGraphAreaPaddingEssss>
    dynamicGraph1.setGraphRangeY(1.0f, 1.5f);
 80056b4:	eef7 0a08 	vmov.f32	s1, #120	; 0x3fc00000  1.5
 80056b8:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 80056bc:	4650      	mov	r0, sl
 80056be:	f7fd fe9b 	bl	80033f8 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 80056c2:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 80056c6:	f8d4 16d4 	ldr.w	r1, [r4, #1748]	; 0x6d4
 80056ca:	f8d4 06d8 	ldr.w	r0, [r4, #1752]	; 0x6d8
        color = newColor;
 80056ce:	f8df 9358 	ldr.w	r9, [pc, #856]	; 8005a28 <_ZN19ScreenGraphViewBaseC1Ev+0x1ca4>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 80056d2:	f008 fcf1 	bl	800e0b8 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        gridInterval = abs(interval);
 80056d6:	f241 3388 	movw	r3, #5000	; 0x1388
 80056da:	f8c4 36d8 	str.w	r3, [r4, #1752]	; 0x6d8
        majorGrid = &major;
 80056de:	ee1c 3a90 	vmov	r3, s25
        dataScale = scale;
 80056e2:	f44f 787a 	mov.w	r8, #1000	; 0x3e8
        lineWidth = width;
 80056e6:	f04f 0701 	mov.w	r7, #1
        majorGrid = &major;
 80056ea:	f8c4 36e0 	str.w	r3, [r4, #1760]	; 0x6e0
    dynamicGraph1.addGraphElement(dynamicGraph1MinorXAxisGrid);
 80056ee:	ee1e 1a10 	vmov	r1, s28
        dataScale = scale;
 80056f2:	f8c4 86d4 	str.w	r8, [r4, #1748]	; 0x6d4
        color = newColor;
 80056f6:	f8c4 96d0 	str.w	r9, [r4, #1744]	; 0x6d0
        lineWidth = width;
 80056fa:	f884 76dc 	strb.w	r7, [r4, #1756]	; 0x6dc
 80056fe:	4650      	mov	r0, sl
 8005700:	f008 fb48 	bl	800dd94 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 8005704:	4642      	mov	r2, r8
 8005706:	f8d4 1714 	ldr.w	r1, [r4, #1812]	; 0x714
 800570a:	f8d4 0718 	ldr.w	r0, [r4, #1816]	; 0x718
 800570e:	f008 fcd3 	bl	800e0b8 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        gridInterval = abs(interval);
 8005712:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
 8005716:	f8c4 3718 	str.w	r3, [r4, #1816]	; 0x718
    dynamicGraph1.addGraphElement(dynamicGraph1MinorYAxisGrid);
 800571a:	ee1e 1a90 	vmov	r1, s29
        dataScale = scale;
 800571e:	f8c4 8714 	str.w	r8, [r4, #1812]	; 0x714
        color = newColor;
 8005722:	f8c4 9710 	str.w	r9, [r4, #1808]	; 0x710
        lineWidth = width;
 8005726:	f884 771c 	strb.w	r7, [r4, #1820]	; 0x71c
        majorGrid = &major;
 800572a:	f8c4 b720 	str.w	fp, [r4, #1824]	; 0x720
 800572e:	4650      	mov	r0, sl
 8005730:	f008 fb30 	bl	800dd94 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 8005734:	4642      	mov	r2, r8
 8005736:	f8d4 1754 	ldr.w	r1, [r4, #1876]	; 0x754
 800573a:	f8d4 0758 	ldr.w	r0, [r4, #1880]	; 0x758
 800573e:	f008 fcbb 	bl	800e0b8 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        lineWidth = width;
 8005742:	2702      	movs	r7, #2
        gridInterval = abs(interval);
 8005744:	f242 7310 	movw	r3, #10000	; 0x2710
 8005748:	f8c4 3758 	str.w	r3, [r4, #1880]	; 0x758
    dynamicGraph1.addGraphElement(dynamicGraph1MajorXAxisGrid);
 800574c:	ee1c 1a90 	vmov	r1, s25
        dataScale = scale;
 8005750:	f8c4 8754 	str.w	r8, [r4, #1876]	; 0x754
        color = newColor;
 8005754:	f8c4 9750 	str.w	r9, [r4, #1872]	; 0x750
 8005758:	4650      	mov	r0, sl
        lineWidth = width;
 800575a:	f884 775c 	strb.w	r7, [r4, #1884]	; 0x75c
 800575e:	f008 fb19 	bl	800dd94 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 8005762:	4642      	mov	r2, r8
 8005764:	f8d4 1794 	ldr.w	r1, [r4, #1940]	; 0x794
 8005768:	f8d4 0798 	ldr.w	r0, [r4, #1944]	; 0x798
 800576c:	f008 fca4 	bl	800e0b8 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
    dynamicGraph1.addGraphElement(dynamicGraph1MajorYAxisGrid);
 8005770:	4659      	mov	r1, fp
        dataScale = scale;
 8005772:	f8c4 8794 	str.w	r8, [r4, #1940]	; 0x794
        color = newColor;
 8005776:	f8c4 9790 	str.w	r9, [r4, #1936]	; 0x790
        gridInterval = abs(interval);
 800577a:	f8c4 8798 	str.w	r8, [r4, #1944]	; 0x798
 800577e:	4650      	mov	r0, sl
        lineWidth = width;
 8005780:	f884 779c 	strb.w	r7, [r4, #1948]	; 0x79c
 8005784:	f008 fb06 	bl	800dd94 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        labelInterval = AbstractDataGraph::convertToNewScale(labelInterval, dataScale, scale);
 8005788:	4642      	mov	r2, r8
 800578a:	f8d4 17d4 	ldr.w	r1, [r4, #2004]	; 0x7d4
 800578e:	f8d4 07d8 	ldr.w	r0, [r4, #2008]	; 0x7d8
 8005792:	f008 fc91 	bl	800e0b8 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        labelInterval = abs(interval);
 8005796:	2396      	movs	r3, #150	; 0x96
        dataScale = scale;
 8005798:	f8c4 87d4 	str.w	r8, [r4, #2004]	; 0x7d4
        labelInterval = abs(interval);
 800579c:	f8c4 37d8 	str.w	r3, [r4, #2008]	; 0x7d8
class TypedText
 80057a0:	f04f 0807 	mov.w	r8, #7
        labelDecimals = decimals;
 80057a4:	f04f 0301 	mov.w	r3, #1
    dynamicGraph1.addLeftElement(dynamicGraph1MajorYAxisLabel);
 80057a8:	ee1f 1a10 	vmov	r1, s30
 80057ac:	f8a4 87e0 	strh.w	r8, [r4, #2016]	; 0x7e0
 80057b0:	f8a4 37e6 	strh.w	r3, [r4, #2022]	; 0x7e6
        color = newColor;
 80057b4:	f8c4 97d0 	str.w	r9, [r4, #2000]	; 0x7d0
 80057b8:	4650      	mov	r0, sl
 80057ba:	f008 fafd 	bl	800ddb8 <_ZN8touchgfx17AbstractDataGraph14addLeftElementERNS_23AbstractGraphDecorationE>
 80057be:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80057c2:	f8c4 369c 	str.w	r3, [r4, #1692]	; 0x69c
 80057c6:	9b04      	ldr	r3, [sp, #16]
 80057c8:	f8c4 3688 	str.w	r3, [r4, #1672]	; 0x688
    dynamicGraph1.addGraphElement(dynamicGraph1Line1);
 80057cc:	ee1d 1a90 	vmov	r1, s27
 80057d0:	4650      	mov	r0, sl
 80057d2:	f8a4 66a0 	strh.w	r6, [r4, #1696]	; 0x6a0
        lineWidth = width;
 80057d6:	f884 768c 	strb.w	r7, [r4, #1676]	; 0x68c
 80057da:	f008 fadb 	bl	800dd94 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
    toggleButton1.setXY(85, 211);
 80057de:	ee1b 0a90 	vmov	r0, s23
 80057e2:	22d3      	movs	r2, #211	; 0xd3
 80057e4:	2155      	movs	r1, #85	; 0x55
 80057e6:	f7fd fa11 	bl	8002c0c <_ZN8touchgfx8Drawable5setXYEss>
 80057ea:	f8ad 802c 	strh.w	r8, [sp, #44]	; 0x2c
 80057ee:	f04f 0808 	mov.w	r8, #8
{
public:
    virtual void setBitmaps(const Bitmap& bitmapReleased, const Bitmap& bitmapPressed)
    {
        originalPressed = bitmapPressed;
        Button::setBitmaps(bitmapReleased, bitmapPressed);
 80057f2:	ee1b 0a90 	vmov	r0, s23
 80057f6:	aa0c      	add	r2, sp, #48	; 0x30
 80057f8:	a90b      	add	r1, sp, #44	; 0x2c
        originalPressed = bitmapPressed;
 80057fa:	f8a4 8824 	strh.w	r8, [r4, #2084]	; 0x824
 80057fe:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
        Button::setBitmaps(bitmapReleased, bitmapPressed);
 8005802:	f00a f834 	bl	800f86e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8005806:	9b05      	ldr	r3, [sp, #20]
 8005808:	f8c4 3818 	str.w	r3, [r4, #2072]	; 0x818
    txtShowWholeGraph.setXY(2, 218);
 800580c:	22da      	movs	r2, #218	; 0xda
 800580e:	ee18 0a90 	vmov	r0, s17
 8005812:	4639      	mov	r1, r7
 8005814:	f7fd f9fa 	bl	8002c0c <_ZN8touchgfx8Drawable5setXYEss>
 8005818:	f10d 0918 	add.w	r9, sp, #24
        color = newColor;
 800581c:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
        boundingArea = calculateBoundingArea();
 8005820:	4648      	mov	r0, r9
 8005822:	ee18 1a90 	vmov	r1, s17
        color = newColor;
 8005826:	f8c4 3858 	str.w	r3, [r4, #2136]	; 0x858
        linespace = space;
 800582a:	f8a4 685c 	strh.w	r6, [r4, #2140]	; 0x85c
        boundingArea = calculateBoundingArea();
 800582e:	f009 fd33 	bl	800f298 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005832:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 8005836:	ee18 3a90 	vmov	r3, s17
 800583a:	333c      	adds	r3, #60	; 0x3c
 800583c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8005840:	4b75      	ldr	r3, [pc, #468]	; (8005a18 <_ZN19ScreenGraphViewBaseC1Ev+0x1c94>)
 8005842:	930c      	str	r3, [sp, #48]	; 0x30
    txtShowWholeGraph.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DO01));
 8005844:	ee18 0a90 	vmov	r0, s17
 8005848:	2306      	movs	r3, #6
 800584a:	a90c      	add	r1, sp, #48	; 0x30
 800584c:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8005850:	f009 ffb2 	bl	800f7b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    txtLastValue.setXY(2, 168);
 8005854:	ee19 0a90 	vmov	r0, s19
 8005858:	22a8      	movs	r2, #168	; 0xa8
 800585a:	4639      	mov	r1, r7
 800585c:	f7fd f9d6 	bl	8002c0c <_ZN8touchgfx8Drawable5setXYEss>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005860:	f8df 91c8 	ldr.w	r9, [pc, #456]	; 8005a2c <_ZN19ScreenGraphViewBaseC1Ev+0x1ca8>
        linespace = space;
 8005864:	f8a4 68a4 	strh.w	r6, [r4, #2212]	; 0x8a4
        color = newColor;
 8005868:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800586c:	f8c4 38a0 	str.w	r3, [r4, #2208]	; 0x8a0
        boundingArea = calculateBoundingArea();
 8005870:	f04f 33ff 	mov.w	r3, #4294967295
 8005874:	f8c4 38b0 	str.w	r3, [r4, #2224]	; 0x8b0
 8005878:	f8d9 3000 	ldr.w	r3, [r9]
 800587c:	f8c4 68ac 	str.w	r6, [r4, #2220]	; 0x8ac
 8005880:	f8c4 68b4 	str.w	r6, [r4, #2228]	; 0x8b4
    Unicode::snprintf(txtLastValueBuffer, TXTLASTVALUE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_SQ4H).getText());
 8005884:	f604 1b54 	addw	fp, r4, #2388	; 0x954
 8005888:	2b00      	cmp	r3, #0
 800588a:	f041 8048 	bne.w	800691e <_ZN19ScreenGraphViewBaseC1Ev+0x2b9a>
 800588e:	4b63      	ldr	r3, [pc, #396]	; (8005a1c <_ZN19ScreenGraphViewBaseC1Ev+0x1c98>)
 8005890:	4a63      	ldr	r2, [pc, #396]	; (8005a20 <_ZN19ScreenGraphViewBaseC1Ev+0x1c9c>)
 8005892:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005894:	4863      	ldr	r0, [pc, #396]	; (8005a24 <_ZN19ScreenGraphViewBaseC1Ev+0x1ca0>)
 8005896:	f01c fa05 	bl	8021ca4 <__assert_func>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 800589a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800589e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80058a2:	ee17 3a10 	vmov	r3, s14
 80058a6:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80058aa:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80058ae:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80058b2:	1e59      	subs	r1, r3, #1
 80058b4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80058b8:	ee17 3a90 	vmov	r3, s15
 80058bc:	440b      	add	r3, r1
 80058be:	4619      	mov	r1, r3
 80058c0:	f7fe bc8c 	b.w	80041dc <_ZN19ScreenGraphViewBaseC1Ev+0x458>
 80058c4:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80058c8:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80058cc:	ee17 3a10 	vmov	r3, s14
 80058d0:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80058d4:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80058d8:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80058dc:	1e59      	subs	r1, r3, #1
 80058de:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80058e2:	ee17 3a90 	vmov	r3, s15
 80058e6:	440b      	add	r3, r1
 80058e8:	4619      	mov	r1, r3
 80058ea:	f7fe bc90 	b.w	800420e <_ZN19ScreenGraphViewBaseC1Ev+0x48a>
 80058ee:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80058f2:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80058f6:	ee17 3a10 	vmov	r3, s14
 80058fa:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80058fe:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8005902:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8005906:	1e59      	subs	r1, r3, #1
 8005908:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800590c:	ee17 3a90 	vmov	r3, s15
 8005910:	440b      	add	r3, r1
 8005912:	4619      	mov	r1, r3
 8005914:	f7fe bc94 	b.w	8004240 <_ZN19ScreenGraphViewBaseC1Ev+0x4bc>
 8005918:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800591c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8005920:	ee17 3a10 	vmov	r3, s14
 8005924:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8005928:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800592c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8005930:	1e59      	subs	r1, r3, #1
 8005932:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005936:	ee17 3a90 	vmov	r3, s15
 800593a:	440b      	add	r3, r1
 800593c:	4619      	mov	r1, r3
 800593e:	f7fe bc98 	b.w	8004272 <_ZN19ScreenGraphViewBaseC1Ev+0x4ee>
 8005942:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8005946:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800594a:	ee17 3a10 	vmov	r3, s14
 800594e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8005952:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8005956:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800595a:	1e59      	subs	r1, r3, #1
 800595c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005960:	ee17 3a90 	vmov	r3, s15
 8005964:	440b      	add	r3, r1
 8005966:	4619      	mov	r1, r3
 8005968:	f7fe bc9c 	b.w	80042a4 <_ZN19ScreenGraphViewBaseC1Ev+0x520>
 800596c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8005970:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8005974:	ee17 3a10 	vmov	r3, s14
 8005978:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800597c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8005980:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8005984:	1e59      	subs	r1, r3, #1
 8005986:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800598a:	ee17 3a90 	vmov	r3, s15
 800598e:	440b      	add	r3, r1
 8005990:	4619      	mov	r1, r3
 8005992:	f7fe bca0 	b.w	80042d6 <_ZN19ScreenGraphViewBaseC1Ev+0x552>
 8005996:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800599a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800599e:	ee17 3a10 	vmov	r3, s14
 80059a2:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80059a6:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80059aa:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80059ae:	1e59      	subs	r1, r3, #1
 80059b0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80059b4:	ee17 3a90 	vmov	r3, s15
 80059b8:	440b      	add	r3, r1
 80059ba:	4619      	mov	r1, r3
 80059bc:	f7fe bca4 	b.w	8004308 <_ZN19ScreenGraphViewBaseC1Ev+0x584>
 80059c0:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80059c4:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80059c8:	ee17 3a10 	vmov	r3, s14
 80059cc:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80059d0:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80059d4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80059d8:	1e59      	subs	r1, r3, #1
 80059da:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80059de:	ee17 3a90 	vmov	r3, s15
 80059e2:	440b      	add	r3, r1
 80059e4:	4619      	mov	r1, r3
 80059e6:	f7fe bca8 	b.w	800433a <_ZN19ScreenGraphViewBaseC1Ev+0x5b6>
 80059ea:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80059ee:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80059f2:	ee17 3a10 	vmov	r3, s14
 80059f6:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80059fa:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80059fe:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8005a02:	1e59      	subs	r1, r3, #1
 8005a04:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005a08:	ee17 3a90 	vmov	r3, s15
 8005a0c:	440b      	add	r3, r1
 8005a0e:	4619      	mov	r1, r3
 8005a10:	f7fe bcac 	b.w	800436c <_ZN19ScreenGraphViewBaseC1Ev+0x5e8>
 8005a14:	41b99d15 	.word	0x41b99d15
 8005a18:	08023620 	.word	0x08023620
 8005a1c:	08023ce8 	.word	0x08023ce8
 8005a20:	080242a7 	.word	0x080242a7
 8005a24:	08023d65 	.word	0x08023d65
 8005a28:	ff1497c5 	.word	0xff1497c5
 8005a2c:	200179a4 	.word	0x200179a4
 8005a30:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8005a34:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8005a38:	ee17 3a10 	vmov	r3, s14
 8005a3c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8005a40:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8005a44:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8005a48:	1e59      	subs	r1, r3, #1
 8005a4a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005a4e:	ee17 3a90 	vmov	r3, s15
 8005a52:	440b      	add	r3, r1
 8005a54:	4619      	mov	r1, r3
 8005a56:	f7fe bca2 	b.w	800439e <_ZN19ScreenGraphViewBaseC1Ev+0x61a>
 8005a5a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8005a5e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8005a62:	ee17 3a10 	vmov	r3, s14
 8005a66:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8005a6a:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8005a6e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8005a72:	1e59      	subs	r1, r3, #1
 8005a74:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005a78:	ee17 3a90 	vmov	r3, s15
 8005a7c:	440b      	add	r3, r1
 8005a7e:	4619      	mov	r1, r3
 8005a80:	f7fe bca6 	b.w	80043d0 <_ZN19ScreenGraphViewBaseC1Ev+0x64c>
 8005a84:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8005a88:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8005a8c:	ee17 3a10 	vmov	r3, s14
 8005a90:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8005a94:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8005a98:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8005a9c:	1e59      	subs	r1, r3, #1
 8005a9e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005aa2:	ee17 3a90 	vmov	r3, s15
 8005aa6:	440b      	add	r3, r1
 8005aa8:	4619      	mov	r1, r3
 8005aaa:	f7fe bcaa 	b.w	8004402 <_ZN19ScreenGraphViewBaseC1Ev+0x67e>
 8005aae:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8005ab2:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8005ab6:	ee17 3a10 	vmov	r3, s14
 8005aba:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8005abe:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8005ac2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8005ac6:	1e59      	subs	r1, r3, #1
 8005ac8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005acc:	ee17 3a90 	vmov	r3, s15
 8005ad0:	440b      	add	r3, r1
 8005ad2:	4619      	mov	r1, r3
 8005ad4:	f7fe bcae 	b.w	8004434 <_ZN19ScreenGraphViewBaseC1Ev+0x6b0>
 8005ad8:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8005adc:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8005ae0:	ee17 3a10 	vmov	r3, s14
 8005ae4:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8005ae8:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8005aec:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8005af0:	1e59      	subs	r1, r3, #1
 8005af2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005af6:	ee17 3a90 	vmov	r3, s15
 8005afa:	440b      	add	r3, r1
 8005afc:	4619      	mov	r1, r3
 8005afe:	f7fe bcb2 	b.w	8004466 <_ZN19ScreenGraphViewBaseC1Ev+0x6e2>
 8005b02:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8005b06:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8005b0a:	ee17 3a10 	vmov	r3, s14
 8005b0e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8005b12:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8005b16:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8005b1a:	1e59      	subs	r1, r3, #1
 8005b1c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005b20:	ee17 3a90 	vmov	r3, s15
 8005b24:	440b      	add	r3, r1
 8005b26:	4619      	mov	r1, r3
 8005b28:	f7fe bcb6 	b.w	8004498 <_ZN19ScreenGraphViewBaseC1Ev+0x714>
 8005b2c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8005b30:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8005b34:	ee17 3a10 	vmov	r3, s14
 8005b38:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8005b3c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8005b40:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8005b44:	1e59      	subs	r1, r3, #1
 8005b46:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005b4a:	ee17 3a90 	vmov	r3, s15
 8005b4e:	440b      	add	r3, r1
 8005b50:	4619      	mov	r1, r3
 8005b52:	f7fe bcba 	b.w	80044ca <_ZN19ScreenGraphViewBaseC1Ev+0x746>
 8005b56:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8005b5a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8005b5e:	ee17 3a10 	vmov	r3, s14
 8005b62:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8005b66:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8005b6a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8005b6e:	1e59      	subs	r1, r3, #1
 8005b70:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005b74:	ee17 3a90 	vmov	r3, s15
 8005b78:	440b      	add	r3, r1
 8005b7a:	4619      	mov	r1, r3
 8005b7c:	f7fe bcbe 	b.w	80044fc <_ZN19ScreenGraphViewBaseC1Ev+0x778>
 8005b80:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8005b84:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8005b88:	ee17 3a10 	vmov	r3, s14
 8005b8c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8005b90:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8005b94:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8005b98:	1e59      	subs	r1, r3, #1
 8005b9a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005b9e:	ee17 3a90 	vmov	r3, s15
 8005ba2:	440b      	add	r3, r1
 8005ba4:	4619      	mov	r1, r3
 8005ba6:	f7fe bcc2 	b.w	800452e <_ZN19ScreenGraphViewBaseC1Ev+0x7aa>
 8005baa:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8005bae:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8005bb2:	ee17 3a10 	vmov	r3, s14
 8005bb6:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8005bba:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8005bbe:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8005bc2:	1e59      	subs	r1, r3, #1
 8005bc4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005bc8:	ee17 3a90 	vmov	r3, s15
 8005bcc:	440b      	add	r3, r1
 8005bce:	4619      	mov	r1, r3
 8005bd0:	f7fe bcc6 	b.w	8004560 <_ZN19ScreenGraphViewBaseC1Ev+0x7dc>
 8005bd4:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8005bd8:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8005bdc:	ee17 3a10 	vmov	r3, s14
 8005be0:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8005be4:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8005be8:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8005bec:	1e59      	subs	r1, r3, #1
 8005bee:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005bf2:	ee17 3a90 	vmov	r3, s15
 8005bf6:	440b      	add	r3, r1
 8005bf8:	4619      	mov	r1, r3
 8005bfa:	f7fe bcca 	b.w	8004592 <_ZN19ScreenGraphViewBaseC1Ev+0x80e>
 8005bfe:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8005c02:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8005c06:	ee17 3a10 	vmov	r3, s14
 8005c0a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8005c0e:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8005c12:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8005c16:	1e59      	subs	r1, r3, #1
 8005c18:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005c1c:	ee17 3a90 	vmov	r3, s15
 8005c20:	440b      	add	r3, r1
 8005c22:	4619      	mov	r1, r3
 8005c24:	f7fe bcce 	b.w	80045c4 <_ZN19ScreenGraphViewBaseC1Ev+0x840>
 8005c28:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8005c2c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8005c30:	ee17 3a10 	vmov	r3, s14
 8005c34:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8005c38:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8005c3c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8005c40:	1e59      	subs	r1, r3, #1
 8005c42:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005c46:	ee17 3a90 	vmov	r3, s15
 8005c4a:	440b      	add	r3, r1
 8005c4c:	4619      	mov	r1, r3
 8005c4e:	f7fe bcd2 	b.w	80045f6 <_ZN19ScreenGraphViewBaseC1Ev+0x872>
 8005c52:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8005c56:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8005c5a:	ee17 3a10 	vmov	r3, s14
 8005c5e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8005c62:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8005c66:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8005c6a:	1e59      	subs	r1, r3, #1
 8005c6c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005c70:	ee17 3a90 	vmov	r3, s15
 8005c74:	440b      	add	r3, r1
 8005c76:	4619      	mov	r1, r3
 8005c78:	f7fe bcd6 	b.w	8004628 <_ZN19ScreenGraphViewBaseC1Ev+0x8a4>
 8005c7c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8005c80:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8005c84:	ee17 3a10 	vmov	r3, s14
 8005c88:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8005c8c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8005c90:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8005c94:	1e59      	subs	r1, r3, #1
 8005c96:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005c9a:	ee17 3a90 	vmov	r3, s15
 8005c9e:	440b      	add	r3, r1
 8005ca0:	4619      	mov	r1, r3
 8005ca2:	f7fe bcda 	b.w	800465a <_ZN19ScreenGraphViewBaseC1Ev+0x8d6>
 8005ca6:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8005caa:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8005cae:	ee17 3a10 	vmov	r3, s14
 8005cb2:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8005cb6:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8005cba:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8005cbe:	1e59      	subs	r1, r3, #1
 8005cc0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005cc4:	ee17 3a90 	vmov	r3, s15
 8005cc8:	440b      	add	r3, r1
 8005cca:	4619      	mov	r1, r3
 8005ccc:	f7fe bcde 	b.w	800468c <_ZN19ScreenGraphViewBaseC1Ev+0x908>
 8005cd0:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8005cd4:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8005cd8:	ee17 3a10 	vmov	r3, s14
 8005cdc:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8005ce0:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8005ce4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8005ce8:	1e59      	subs	r1, r3, #1
 8005cea:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005cee:	ee17 3a90 	vmov	r3, s15
 8005cf2:	440b      	add	r3, r1
 8005cf4:	4619      	mov	r1, r3
 8005cf6:	f7fe bce2 	b.w	80046be <_ZN19ScreenGraphViewBaseC1Ev+0x93a>
 8005cfa:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8005cfe:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8005d02:	ee17 3a10 	vmov	r3, s14
 8005d06:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8005d0a:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8005d0e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8005d12:	1e59      	subs	r1, r3, #1
 8005d14:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005d18:	ee17 3a90 	vmov	r3, s15
 8005d1c:	440b      	add	r3, r1
 8005d1e:	4619      	mov	r1, r3
 8005d20:	f7fe bce6 	b.w	80046f0 <_ZN19ScreenGraphViewBaseC1Ev+0x96c>
 8005d24:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8005d28:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8005d2c:	ee17 3a10 	vmov	r3, s14
 8005d30:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8005d34:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8005d38:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8005d3c:	1e59      	subs	r1, r3, #1
 8005d3e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005d42:	ee17 3a90 	vmov	r3, s15
 8005d46:	440b      	add	r3, r1
 8005d48:	4619      	mov	r1, r3
 8005d4a:	f7fe bcea 	b.w	8004722 <_ZN19ScreenGraphViewBaseC1Ev+0x99e>
 8005d4e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8005d52:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8005d56:	ee17 3a10 	vmov	r3, s14
 8005d5a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8005d5e:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8005d62:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8005d66:	1e59      	subs	r1, r3, #1
 8005d68:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005d6c:	ee17 3a90 	vmov	r3, s15
 8005d70:	440b      	add	r3, r1
 8005d72:	4619      	mov	r1, r3
 8005d74:	f7fe bcee 	b.w	8004754 <_ZN19ScreenGraphViewBaseC1Ev+0x9d0>
 8005d78:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8005d7c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8005d80:	ee17 3a10 	vmov	r3, s14
 8005d84:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8005d88:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8005d8c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8005d90:	1e59      	subs	r1, r3, #1
 8005d92:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005d96:	ee17 3a90 	vmov	r3, s15
 8005d9a:	440b      	add	r3, r1
 8005d9c:	4619      	mov	r1, r3
 8005d9e:	f7fe bcf2 	b.w	8004786 <_ZN19ScreenGraphViewBaseC1Ev+0xa02>
 8005da2:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8005da6:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8005daa:	ee17 3a10 	vmov	r3, s14
 8005dae:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8005db2:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8005db6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8005dba:	1e59      	subs	r1, r3, #1
 8005dbc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005dc0:	ee17 3a90 	vmov	r3, s15
 8005dc4:	440b      	add	r3, r1
 8005dc6:	4619      	mov	r1, r3
 8005dc8:	f7fe bcf6 	b.w	80047b8 <_ZN19ScreenGraphViewBaseC1Ev+0xa34>
 8005dcc:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8005dd0:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8005dd4:	ee17 3a10 	vmov	r3, s14
 8005dd8:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8005ddc:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8005de0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8005de4:	1e59      	subs	r1, r3, #1
 8005de6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005dea:	ee17 3a90 	vmov	r3, s15
 8005dee:	440b      	add	r3, r1
 8005df0:	4619      	mov	r1, r3
 8005df2:	f7fe bcfa 	b.w	80047ea <_ZN19ScreenGraphViewBaseC1Ev+0xa66>
 8005df6:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8005dfa:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8005dfe:	ee17 3a10 	vmov	r3, s14
 8005e02:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8005e06:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8005e0a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8005e0e:	1e59      	subs	r1, r3, #1
 8005e10:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005e14:	ee17 3a90 	vmov	r3, s15
 8005e18:	440b      	add	r3, r1
 8005e1a:	4619      	mov	r1, r3
 8005e1c:	f7fe bcfe 	b.w	800481c <_ZN19ScreenGraphViewBaseC1Ev+0xa98>
 8005e20:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8005e24:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8005e28:	ee17 3a10 	vmov	r3, s14
 8005e2c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8005e30:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8005e34:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8005e38:	1e59      	subs	r1, r3, #1
 8005e3a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005e3e:	ee17 3a90 	vmov	r3, s15
 8005e42:	440b      	add	r3, r1
 8005e44:	4619      	mov	r1, r3
 8005e46:	f7fe bd02 	b.w	800484e <_ZN19ScreenGraphViewBaseC1Ev+0xaca>
 8005e4a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8005e4e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8005e52:	ee17 3a10 	vmov	r3, s14
 8005e56:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8005e5a:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8005e5e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8005e62:	1e59      	subs	r1, r3, #1
 8005e64:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005e68:	ee17 3a90 	vmov	r3, s15
 8005e6c:	440b      	add	r3, r1
 8005e6e:	4619      	mov	r1, r3
 8005e70:	f7fe bd06 	b.w	8004880 <_ZN19ScreenGraphViewBaseC1Ev+0xafc>
 8005e74:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8005e78:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8005e7c:	ee17 3a10 	vmov	r3, s14
 8005e80:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8005e84:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8005e88:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8005e8c:	1e59      	subs	r1, r3, #1
 8005e8e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005e92:	ee17 3a90 	vmov	r3, s15
 8005e96:	440b      	add	r3, r1
 8005e98:	4619      	mov	r1, r3
 8005e9a:	f7fe bd0a 	b.w	80048b2 <_ZN19ScreenGraphViewBaseC1Ev+0xb2e>
 8005e9e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8005ea2:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8005ea6:	ee17 3a10 	vmov	r3, s14
 8005eaa:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8005eae:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8005eb2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8005eb6:	1e59      	subs	r1, r3, #1
 8005eb8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005ebc:	ee17 3a90 	vmov	r3, s15
 8005ec0:	440b      	add	r3, r1
 8005ec2:	4619      	mov	r1, r3
 8005ec4:	f7fe bd0e 	b.w	80048e4 <_ZN19ScreenGraphViewBaseC1Ev+0xb60>
 8005ec8:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8005ecc:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8005ed0:	ee17 3a10 	vmov	r3, s14
 8005ed4:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8005ed8:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8005edc:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8005ee0:	1e59      	subs	r1, r3, #1
 8005ee2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005ee6:	ee17 3a90 	vmov	r3, s15
 8005eea:	440b      	add	r3, r1
 8005eec:	4619      	mov	r1, r3
 8005eee:	f7fe bd12 	b.w	8004916 <_ZN19ScreenGraphViewBaseC1Ev+0xb92>
 8005ef2:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8005ef6:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8005efa:	ee17 3a10 	vmov	r3, s14
 8005efe:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8005f02:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8005f06:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8005f0a:	1e59      	subs	r1, r3, #1
 8005f0c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005f10:	ee17 3a90 	vmov	r3, s15
 8005f14:	440b      	add	r3, r1
 8005f16:	4619      	mov	r1, r3
 8005f18:	f7fe bd16 	b.w	8004948 <_ZN19ScreenGraphViewBaseC1Ev+0xbc4>
 8005f1c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8005f20:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8005f24:	ee17 3a10 	vmov	r3, s14
 8005f28:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8005f2c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8005f30:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8005f34:	1e59      	subs	r1, r3, #1
 8005f36:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005f3a:	ee17 3a90 	vmov	r3, s15
 8005f3e:	440b      	add	r3, r1
 8005f40:	4619      	mov	r1, r3
 8005f42:	f7fe bd1a 	b.w	800497a <_ZN19ScreenGraphViewBaseC1Ev+0xbf6>
 8005f46:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8005f4a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8005f4e:	ee17 3a10 	vmov	r3, s14
 8005f52:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8005f56:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8005f5a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8005f5e:	1e59      	subs	r1, r3, #1
 8005f60:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005f64:	ee17 3a90 	vmov	r3, s15
 8005f68:	440b      	add	r3, r1
 8005f6a:	4619      	mov	r1, r3
 8005f6c:	f7fe bd6e 	b.w	8004a4c <_ZN19ScreenGraphViewBaseC1Ev+0xcc8>
 8005f70:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8005f74:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8005f78:	ee17 3a10 	vmov	r3, s14
 8005f7c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8005f80:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8005f84:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8005f88:	1e59      	subs	r1, r3, #1
 8005f8a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005f8e:	ee17 3a90 	vmov	r3, s15
 8005f92:	440b      	add	r3, r1
 8005f94:	4619      	mov	r1, r3
 8005f96:	f7fe bd72 	b.w	8004a7e <_ZN19ScreenGraphViewBaseC1Ev+0xcfa>
 8005f9a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8005f9e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8005fa2:	ee17 3a10 	vmov	r3, s14
 8005fa6:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8005faa:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8005fae:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8005fb2:	1e59      	subs	r1, r3, #1
 8005fb4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005fb8:	ee17 3a90 	vmov	r3, s15
 8005fbc:	440b      	add	r3, r1
 8005fbe:	4619      	mov	r1, r3
 8005fc0:	f7fe bd76 	b.w	8004ab0 <_ZN19ScreenGraphViewBaseC1Ev+0xd2c>
 8005fc4:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8005fc8:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8005fcc:	ee17 3a10 	vmov	r3, s14
 8005fd0:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8005fd4:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8005fd8:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8005fdc:	1e59      	subs	r1, r3, #1
 8005fde:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005fe2:	ee17 3a90 	vmov	r3, s15
 8005fe6:	440b      	add	r3, r1
 8005fe8:	4619      	mov	r1, r3
 8005fea:	f7fe bd7a 	b.w	8004ae2 <_ZN19ScreenGraphViewBaseC1Ev+0xd5e>
 8005fee:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8005ff2:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8005ff6:	ee17 3a10 	vmov	r3, s14
 8005ffa:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8005ffe:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8006002:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8006006:	1e59      	subs	r1, r3, #1
 8006008:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800600c:	ee17 3a90 	vmov	r3, s15
 8006010:	440b      	add	r3, r1
 8006012:	4619      	mov	r1, r3
 8006014:	f7fe bd7e 	b.w	8004b14 <_ZN19ScreenGraphViewBaseC1Ev+0xd90>
 8006018:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800601c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8006020:	ee17 3a10 	vmov	r3, s14
 8006024:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8006028:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800602c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8006030:	1e59      	subs	r1, r3, #1
 8006032:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006036:	ee17 3a90 	vmov	r3, s15
 800603a:	440b      	add	r3, r1
 800603c:	4619      	mov	r1, r3
 800603e:	f7fe bd82 	b.w	8004b46 <_ZN19ScreenGraphViewBaseC1Ev+0xdc2>
 8006042:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8006046:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800604a:	ee17 3a10 	vmov	r3, s14
 800604e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8006052:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8006056:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800605a:	1e59      	subs	r1, r3, #1
 800605c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006060:	ee17 3a90 	vmov	r3, s15
 8006064:	440b      	add	r3, r1
 8006066:	4619      	mov	r1, r3
 8006068:	f7fe bd86 	b.w	8004b78 <_ZN19ScreenGraphViewBaseC1Ev+0xdf4>
 800606c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8006070:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8006074:	ee17 3a10 	vmov	r3, s14
 8006078:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800607c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8006080:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8006084:	1e59      	subs	r1, r3, #1
 8006086:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800608a:	ee17 3a90 	vmov	r3, s15
 800608e:	440b      	add	r3, r1
 8006090:	4619      	mov	r1, r3
 8006092:	f7fe bd8a 	b.w	8004baa <_ZN19ScreenGraphViewBaseC1Ev+0xe26>
 8006096:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800609a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800609e:	ee17 3a10 	vmov	r3, s14
 80060a2:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80060a6:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80060aa:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80060ae:	1e59      	subs	r1, r3, #1
 80060b0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80060b4:	ee17 3a90 	vmov	r3, s15
 80060b8:	440b      	add	r3, r1
 80060ba:	4619      	mov	r1, r3
 80060bc:	f7fe bd8e 	b.w	8004bdc <_ZN19ScreenGraphViewBaseC1Ev+0xe58>
 80060c0:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80060c4:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80060c8:	ee17 3a10 	vmov	r3, s14
 80060cc:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80060d0:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80060d4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80060d8:	1e59      	subs	r1, r3, #1
 80060da:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80060de:	ee17 3a90 	vmov	r3, s15
 80060e2:	440b      	add	r3, r1
 80060e4:	4619      	mov	r1, r3
 80060e6:	f7fe bd92 	b.w	8004c0e <_ZN19ScreenGraphViewBaseC1Ev+0xe8a>
 80060ea:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80060ee:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80060f2:	ee17 3a10 	vmov	r3, s14
 80060f6:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80060fa:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80060fe:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8006102:	1e59      	subs	r1, r3, #1
 8006104:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006108:	ee17 3a90 	vmov	r3, s15
 800610c:	440b      	add	r3, r1
 800610e:	4619      	mov	r1, r3
 8006110:	f7fe bd96 	b.w	8004c40 <_ZN19ScreenGraphViewBaseC1Ev+0xebc>
 8006114:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8006118:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800611c:	ee17 3a10 	vmov	r3, s14
 8006120:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8006124:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8006128:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800612c:	1e59      	subs	r1, r3, #1
 800612e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006132:	ee17 3a90 	vmov	r3, s15
 8006136:	440b      	add	r3, r1
 8006138:	4619      	mov	r1, r3
 800613a:	f7fe bd9a 	b.w	8004c72 <_ZN19ScreenGraphViewBaseC1Ev+0xeee>
 800613e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8006142:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8006146:	ee17 3a10 	vmov	r3, s14
 800614a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800614e:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8006152:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8006156:	1e59      	subs	r1, r3, #1
 8006158:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800615c:	ee17 3a90 	vmov	r3, s15
 8006160:	440b      	add	r3, r1
 8006162:	4619      	mov	r1, r3
 8006164:	f7fe bd9e 	b.w	8004ca4 <_ZN19ScreenGraphViewBaseC1Ev+0xf20>
 8006168:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800616c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8006170:	ee17 3a10 	vmov	r3, s14
 8006174:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8006178:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800617c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8006180:	1e59      	subs	r1, r3, #1
 8006182:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006186:	ee17 3a90 	vmov	r3, s15
 800618a:	440b      	add	r3, r1
 800618c:	4619      	mov	r1, r3
 800618e:	f7fe bda2 	b.w	8004cd6 <_ZN19ScreenGraphViewBaseC1Ev+0xf52>
 8006192:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8006196:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800619a:	ee17 3a10 	vmov	r3, s14
 800619e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80061a2:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80061a6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80061aa:	1e59      	subs	r1, r3, #1
 80061ac:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80061b0:	ee17 3a90 	vmov	r3, s15
 80061b4:	440b      	add	r3, r1
 80061b6:	4619      	mov	r1, r3
 80061b8:	f7fe bda6 	b.w	8004d08 <_ZN19ScreenGraphViewBaseC1Ev+0xf84>
 80061bc:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80061c0:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80061c4:	ee17 3a10 	vmov	r3, s14
 80061c8:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80061cc:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80061d0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80061d4:	1e59      	subs	r1, r3, #1
 80061d6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80061da:	ee17 3a90 	vmov	r3, s15
 80061de:	440b      	add	r3, r1
 80061e0:	4619      	mov	r1, r3
 80061e2:	f7fe bdaa 	b.w	8004d3a <_ZN19ScreenGraphViewBaseC1Ev+0xfb6>
 80061e6:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80061ea:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80061ee:	ee17 3a10 	vmov	r3, s14
 80061f2:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80061f6:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80061fa:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80061fe:	1e59      	subs	r1, r3, #1
 8006200:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006204:	ee17 3a90 	vmov	r3, s15
 8006208:	440b      	add	r3, r1
 800620a:	4619      	mov	r1, r3
 800620c:	f7fe bdae 	b.w	8004d6c <_ZN19ScreenGraphViewBaseC1Ev+0xfe8>
 8006210:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8006214:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8006218:	ee17 3a10 	vmov	r3, s14
 800621c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8006220:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8006224:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8006228:	1e59      	subs	r1, r3, #1
 800622a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800622e:	ee17 3a90 	vmov	r3, s15
 8006232:	440b      	add	r3, r1
 8006234:	4619      	mov	r1, r3
 8006236:	f7fe bdb2 	b.w	8004d9e <_ZN19ScreenGraphViewBaseC1Ev+0x101a>
 800623a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800623e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8006242:	ee17 3a10 	vmov	r3, s14
 8006246:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800624a:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800624e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8006252:	1e59      	subs	r1, r3, #1
 8006254:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006258:	ee17 3a90 	vmov	r3, s15
 800625c:	440b      	add	r3, r1
 800625e:	4619      	mov	r1, r3
 8006260:	f7fe bdb6 	b.w	8004dd0 <_ZN19ScreenGraphViewBaseC1Ev+0x104c>
 8006264:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8006268:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800626c:	ee17 3a10 	vmov	r3, s14
 8006270:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8006274:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8006278:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800627c:	1e59      	subs	r1, r3, #1
 800627e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006282:	ee17 3a90 	vmov	r3, s15
 8006286:	440b      	add	r3, r1
 8006288:	4619      	mov	r1, r3
 800628a:	f7fe bdba 	b.w	8004e02 <_ZN19ScreenGraphViewBaseC1Ev+0x107e>
 800628e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8006292:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8006296:	ee17 3a10 	vmov	r3, s14
 800629a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800629e:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80062a2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80062a6:	1e59      	subs	r1, r3, #1
 80062a8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80062ac:	ee17 3a90 	vmov	r3, s15
 80062b0:	440b      	add	r3, r1
 80062b2:	4619      	mov	r1, r3
 80062b4:	f7fe bdbe 	b.w	8004e34 <_ZN19ScreenGraphViewBaseC1Ev+0x10b0>
 80062b8:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80062bc:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80062c0:	ee17 3a10 	vmov	r3, s14
 80062c4:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80062c8:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80062cc:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80062d0:	1e59      	subs	r1, r3, #1
 80062d2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80062d6:	ee17 3a90 	vmov	r3, s15
 80062da:	440b      	add	r3, r1
 80062dc:	4619      	mov	r1, r3
 80062de:	f7fe bdc2 	b.w	8004e66 <_ZN19ScreenGraphViewBaseC1Ev+0x10e2>
 80062e2:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80062e6:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80062ea:	ee17 3a10 	vmov	r3, s14
 80062ee:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80062f2:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80062f6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80062fa:	1e59      	subs	r1, r3, #1
 80062fc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006300:	ee17 3a90 	vmov	r3, s15
 8006304:	440b      	add	r3, r1
 8006306:	4619      	mov	r1, r3
 8006308:	f7fe bdc6 	b.w	8004e98 <_ZN19ScreenGraphViewBaseC1Ev+0x1114>
 800630c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8006310:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8006314:	ee17 3a10 	vmov	r3, s14
 8006318:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800631c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8006320:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8006324:	1e59      	subs	r1, r3, #1
 8006326:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800632a:	ee17 3a90 	vmov	r3, s15
 800632e:	440b      	add	r3, r1
 8006330:	4619      	mov	r1, r3
 8006332:	f7fe bdca 	b.w	8004eca <_ZN19ScreenGraphViewBaseC1Ev+0x1146>
 8006336:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800633a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800633e:	ee17 3a10 	vmov	r3, s14
 8006342:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8006346:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800634a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800634e:	1e59      	subs	r1, r3, #1
 8006350:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006354:	ee17 3a90 	vmov	r3, s15
 8006358:	440b      	add	r3, r1
 800635a:	4619      	mov	r1, r3
 800635c:	f7fe bdce 	b.w	8004efc <_ZN19ScreenGraphViewBaseC1Ev+0x1178>
 8006360:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8006364:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8006368:	ee17 3a10 	vmov	r3, s14
 800636c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8006370:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8006374:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8006378:	1e59      	subs	r1, r3, #1
 800637a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800637e:	ee17 3a90 	vmov	r3, s15
 8006382:	440b      	add	r3, r1
 8006384:	4619      	mov	r1, r3
 8006386:	f7fe bdd2 	b.w	8004f2e <_ZN19ScreenGraphViewBaseC1Ev+0x11aa>
 800638a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800638e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8006392:	ee17 3a10 	vmov	r3, s14
 8006396:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800639a:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800639e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80063a2:	1e59      	subs	r1, r3, #1
 80063a4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80063a8:	ee17 3a90 	vmov	r3, s15
 80063ac:	440b      	add	r3, r1
 80063ae:	4619      	mov	r1, r3
 80063b0:	f7fe bdd6 	b.w	8004f60 <_ZN19ScreenGraphViewBaseC1Ev+0x11dc>
 80063b4:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80063b8:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80063bc:	ee17 3a10 	vmov	r3, s14
 80063c0:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80063c4:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80063c8:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80063cc:	1e59      	subs	r1, r3, #1
 80063ce:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80063d2:	ee17 3a90 	vmov	r3, s15
 80063d6:	440b      	add	r3, r1
 80063d8:	4619      	mov	r1, r3
 80063da:	f7fe bdda 	b.w	8004f92 <_ZN19ScreenGraphViewBaseC1Ev+0x120e>
 80063de:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80063e2:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80063e6:	ee17 3a10 	vmov	r3, s14
 80063ea:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80063ee:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80063f2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80063f6:	1e59      	subs	r1, r3, #1
 80063f8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80063fc:	ee17 3a90 	vmov	r3, s15
 8006400:	440b      	add	r3, r1
 8006402:	4619      	mov	r1, r3
 8006404:	f7fe bdde 	b.w	8004fc4 <_ZN19ScreenGraphViewBaseC1Ev+0x1240>
 8006408:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800640c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8006410:	ee17 3a10 	vmov	r3, s14
 8006414:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8006418:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800641c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8006420:	1e59      	subs	r1, r3, #1
 8006422:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006426:	ee17 3a90 	vmov	r3, s15
 800642a:	440b      	add	r3, r1
 800642c:	4619      	mov	r1, r3
 800642e:	f7fe bde2 	b.w	8004ff6 <_ZN19ScreenGraphViewBaseC1Ev+0x1272>
 8006432:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8006436:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800643a:	ee17 3a10 	vmov	r3, s14
 800643e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8006442:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8006446:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800644a:	1e59      	subs	r1, r3, #1
 800644c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006450:	ee17 3a90 	vmov	r3, s15
 8006454:	440b      	add	r3, r1
 8006456:	4619      	mov	r1, r3
 8006458:	f7fe bde6 	b.w	8005028 <_ZN19ScreenGraphViewBaseC1Ev+0x12a4>
 800645c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8006460:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8006464:	ee17 3a10 	vmov	r3, s14
 8006468:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800646c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8006470:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8006474:	1e59      	subs	r1, r3, #1
 8006476:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800647a:	ee17 3a90 	vmov	r3, s15
 800647e:	440b      	add	r3, r1
 8006480:	4619      	mov	r1, r3
 8006482:	f7fe bdea 	b.w	800505a <_ZN19ScreenGraphViewBaseC1Ev+0x12d6>
 8006486:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800648a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800648e:	ee17 3a10 	vmov	r3, s14
 8006492:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8006496:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800649a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800649e:	1e59      	subs	r1, r3, #1
 80064a0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80064a4:	ee17 3a90 	vmov	r3, s15
 80064a8:	440b      	add	r3, r1
 80064aa:	4619      	mov	r1, r3
 80064ac:	f7fe bdee 	b.w	800508c <_ZN19ScreenGraphViewBaseC1Ev+0x1308>
 80064b0:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80064b4:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80064b8:	ee17 3a10 	vmov	r3, s14
 80064bc:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80064c0:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80064c4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80064c8:	1e59      	subs	r1, r3, #1
 80064ca:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80064ce:	ee17 3a90 	vmov	r3, s15
 80064d2:	440b      	add	r3, r1
 80064d4:	4619      	mov	r1, r3
 80064d6:	f7fe bdf2 	b.w	80050be <_ZN19ScreenGraphViewBaseC1Ev+0x133a>
 80064da:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80064de:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80064e2:	ee17 3a10 	vmov	r3, s14
 80064e6:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80064ea:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80064ee:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80064f2:	1e59      	subs	r1, r3, #1
 80064f4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80064f8:	ee17 3a90 	vmov	r3, s15
 80064fc:	440b      	add	r3, r1
 80064fe:	4619      	mov	r1, r3
 8006500:	f7fe bdf6 	b.w	80050f0 <_ZN19ScreenGraphViewBaseC1Ev+0x136c>
 8006504:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8006508:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800650c:	ee17 3a10 	vmov	r3, s14
 8006510:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8006514:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8006518:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800651c:	1e59      	subs	r1, r3, #1
 800651e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006522:	ee17 3a90 	vmov	r3, s15
 8006526:	440b      	add	r3, r1
 8006528:	4619      	mov	r1, r3
 800652a:	f7fe bdfa 	b.w	8005122 <_ZN19ScreenGraphViewBaseC1Ev+0x139e>
 800652e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8006532:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8006536:	ee17 3a10 	vmov	r3, s14
 800653a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800653e:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8006542:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8006546:	1e59      	subs	r1, r3, #1
 8006548:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800654c:	ee17 3a90 	vmov	r3, s15
 8006550:	440b      	add	r3, r1
 8006552:	4619      	mov	r1, r3
 8006554:	f7fe bdfe 	b.w	8005154 <_ZN19ScreenGraphViewBaseC1Ev+0x13d0>
 8006558:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800655c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8006560:	ee17 3a10 	vmov	r3, s14
 8006564:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8006568:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800656c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8006570:	1e59      	subs	r1, r3, #1
 8006572:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006576:	ee17 3a90 	vmov	r3, s15
 800657a:	440b      	add	r3, r1
 800657c:	4619      	mov	r1, r3
 800657e:	f7fe be02 	b.w	8005186 <_ZN19ScreenGraphViewBaseC1Ev+0x1402>
 8006582:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8006586:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800658a:	ee17 3a10 	vmov	r3, s14
 800658e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8006592:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8006596:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800659a:	1e59      	subs	r1, r3, #1
 800659c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80065a0:	ee17 3a90 	vmov	r3, s15
 80065a4:	440b      	add	r3, r1
 80065a6:	4619      	mov	r1, r3
 80065a8:	f7fe be06 	b.w	80051b8 <_ZN19ScreenGraphViewBaseC1Ev+0x1434>
 80065ac:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80065b0:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80065b4:	ee17 3a10 	vmov	r3, s14
 80065b8:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80065bc:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80065c0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80065c4:	1e59      	subs	r1, r3, #1
 80065c6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80065ca:	ee17 3a90 	vmov	r3, s15
 80065ce:	440b      	add	r3, r1
 80065d0:	4619      	mov	r1, r3
 80065d2:	f7fe be59 	b.w	8005288 <_ZN19ScreenGraphViewBaseC1Ev+0x1504>
 80065d6:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80065da:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80065de:	ee17 3a10 	vmov	r3, s14
 80065e2:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80065e6:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80065ea:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80065ee:	1e59      	subs	r1, r3, #1
 80065f0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80065f4:	ee17 3a90 	vmov	r3, s15
 80065f8:	440b      	add	r3, r1
 80065fa:	4619      	mov	r1, r3
 80065fc:	f7fe be5d 	b.w	80052ba <_ZN19ScreenGraphViewBaseC1Ev+0x1536>
 8006600:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8006604:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8006608:	ee17 3a10 	vmov	r3, s14
 800660c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8006610:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8006614:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8006618:	1e59      	subs	r1, r3, #1
 800661a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800661e:	ee17 3a90 	vmov	r3, s15
 8006622:	440b      	add	r3, r1
 8006624:	4619      	mov	r1, r3
 8006626:	f7fe be61 	b.w	80052ec <_ZN19ScreenGraphViewBaseC1Ev+0x1568>
 800662a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800662e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8006632:	ee17 3a10 	vmov	r3, s14
 8006636:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800663a:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800663e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8006642:	1e59      	subs	r1, r3, #1
 8006644:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006648:	ee17 3a90 	vmov	r3, s15
 800664c:	440b      	add	r3, r1
 800664e:	4619      	mov	r1, r3
 8006650:	f7fe be65 	b.w	800531e <_ZN19ScreenGraphViewBaseC1Ev+0x159a>
 8006654:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8006658:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800665c:	ee17 3a10 	vmov	r3, s14
 8006660:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8006664:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8006668:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800666c:	1e59      	subs	r1, r3, #1
 800666e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006672:	ee17 3a90 	vmov	r3, s15
 8006676:	440b      	add	r3, r1
 8006678:	4619      	mov	r1, r3
 800667a:	f7fe be69 	b.w	8005350 <_ZN19ScreenGraphViewBaseC1Ev+0x15cc>
 800667e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8006682:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8006686:	ee17 3a10 	vmov	r3, s14
 800668a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800668e:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8006692:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8006696:	1e59      	subs	r1, r3, #1
 8006698:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800669c:	ee17 3a90 	vmov	r3, s15
 80066a0:	440b      	add	r3, r1
 80066a2:	4619      	mov	r1, r3
 80066a4:	f7fe be6d 	b.w	8005382 <_ZN19ScreenGraphViewBaseC1Ev+0x15fe>
 80066a8:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80066ac:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80066b0:	ee17 3a10 	vmov	r3, s14
 80066b4:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80066b8:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80066bc:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80066c0:	1e59      	subs	r1, r3, #1
 80066c2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80066c6:	ee17 3a90 	vmov	r3, s15
 80066ca:	440b      	add	r3, r1
 80066cc:	4619      	mov	r1, r3
 80066ce:	f7fe be71 	b.w	80053b4 <_ZN19ScreenGraphViewBaseC1Ev+0x1630>
 80066d2:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80066d6:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80066da:	ee17 3a10 	vmov	r3, s14
 80066de:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80066e2:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80066e6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80066ea:	1e59      	subs	r1, r3, #1
 80066ec:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80066f0:	ee17 3a90 	vmov	r3, s15
 80066f4:	440b      	add	r3, r1
 80066f6:	4619      	mov	r1, r3
 80066f8:	f7fe be75 	b.w	80053e6 <_ZN19ScreenGraphViewBaseC1Ev+0x1662>
 80066fc:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8006700:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8006704:	ee17 3a10 	vmov	r3, s14
 8006708:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800670c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8006710:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8006714:	1e59      	subs	r1, r3, #1
 8006716:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800671a:	ee17 3a90 	vmov	r3, s15
 800671e:	440b      	add	r3, r1
 8006720:	4619      	mov	r1, r3
 8006722:	f7fe be79 	b.w	8005418 <_ZN19ScreenGraphViewBaseC1Ev+0x1694>
 8006726:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800672a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800672e:	ee17 3a10 	vmov	r3, s14
 8006732:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8006736:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800673a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800673e:	1e59      	subs	r1, r3, #1
 8006740:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006744:	ee17 3a90 	vmov	r3, s15
 8006748:	440b      	add	r3, r1
 800674a:	4619      	mov	r1, r3
 800674c:	f7fe be7d 	b.w	800544a <_ZN19ScreenGraphViewBaseC1Ev+0x16c6>
 8006750:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8006754:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8006758:	ee17 3a10 	vmov	r3, s14
 800675c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8006760:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8006764:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8006768:	1e59      	subs	r1, r3, #1
 800676a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800676e:	ee17 3a90 	vmov	r3, s15
 8006772:	440b      	add	r3, r1
 8006774:	4619      	mov	r1, r3
 8006776:	f7fe be81 	b.w	800547c <_ZN19ScreenGraphViewBaseC1Ev+0x16f8>
 800677a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800677e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8006782:	ee17 3a10 	vmov	r3, s14
 8006786:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800678a:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800678e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8006792:	1e59      	subs	r1, r3, #1
 8006794:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006798:	ee17 3a90 	vmov	r3, s15
 800679c:	440b      	add	r3, r1
 800679e:	4619      	mov	r1, r3
 80067a0:	f7fe be85 	b.w	80054ae <_ZN19ScreenGraphViewBaseC1Ev+0x172a>
 80067a4:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80067a8:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80067ac:	ee17 3a10 	vmov	r3, s14
 80067b0:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80067b4:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80067b8:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80067bc:	1e59      	subs	r1, r3, #1
 80067be:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80067c2:	ee17 3a90 	vmov	r3, s15
 80067c6:	440b      	add	r3, r1
 80067c8:	4619      	mov	r1, r3
 80067ca:	f7fe be89 	b.w	80054e0 <_ZN19ScreenGraphViewBaseC1Ev+0x175c>
 80067ce:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80067d2:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80067d6:	ee17 3a10 	vmov	r3, s14
 80067da:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80067de:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80067e2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80067e6:	1e59      	subs	r1, r3, #1
 80067e8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80067ec:	ee17 3a90 	vmov	r3, s15
 80067f0:	440b      	add	r3, r1
 80067f2:	4619      	mov	r1, r3
 80067f4:	f7fe be8d 	b.w	8005512 <_ZN19ScreenGraphViewBaseC1Ev+0x178e>
 80067f8:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80067fc:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8006800:	ee17 3a10 	vmov	r3, s14
 8006804:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8006808:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800680c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8006810:	1e59      	subs	r1, r3, #1
 8006812:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006816:	ee17 3a90 	vmov	r3, s15
 800681a:	440b      	add	r3, r1
 800681c:	4619      	mov	r1, r3
 800681e:	f7fe be91 	b.w	8005544 <_ZN19ScreenGraphViewBaseC1Ev+0x17c0>
 8006822:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8006826:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800682a:	ee17 3a10 	vmov	r3, s14
 800682e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8006832:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8006836:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800683a:	1e59      	subs	r1, r3, #1
 800683c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006840:	ee17 3a90 	vmov	r3, s15
 8006844:	440b      	add	r3, r1
 8006846:	4619      	mov	r1, r3
 8006848:	f7fe be95 	b.w	8005576 <_ZN19ScreenGraphViewBaseC1Ev+0x17f2>
 800684c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8006850:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8006854:	ee17 3a10 	vmov	r3, s14
 8006858:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800685c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8006860:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8006864:	1e59      	subs	r1, r3, #1
 8006866:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800686a:	ee17 3a90 	vmov	r3, s15
 800686e:	440b      	add	r3, r1
 8006870:	4619      	mov	r1, r3
 8006872:	f7fe be99 	b.w	80055a8 <_ZN19ScreenGraphViewBaseC1Ev+0x1824>
 8006876:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800687a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800687e:	ee17 3a10 	vmov	r3, s14
 8006882:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8006886:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800688a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800688e:	1e59      	subs	r1, r3, #1
 8006890:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006894:	ee17 3a90 	vmov	r3, s15
 8006898:	440b      	add	r3, r1
 800689a:	4619      	mov	r1, r3
 800689c:	f7fe be9d 	b.w	80055da <_ZN19ScreenGraphViewBaseC1Ev+0x1856>
 80068a0:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80068a4:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80068a8:	ee17 3a10 	vmov	r3, s14
 80068ac:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80068b0:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80068b4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80068b8:	1e59      	subs	r1, r3, #1
 80068ba:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80068be:	ee17 3a90 	vmov	r3, s15
 80068c2:	440b      	add	r3, r1
 80068c4:	4619      	mov	r1, r3
 80068c6:	f7fe bea1 	b.w	800560c <_ZN19ScreenGraphViewBaseC1Ev+0x1888>
 80068ca:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80068ce:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80068d2:	ee17 3a10 	vmov	r3, s14
 80068d6:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80068da:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80068de:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80068e2:	1e59      	subs	r1, r3, #1
 80068e4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80068e8:	ee17 3a90 	vmov	r3, s15
 80068ec:	440b      	add	r3, r1
 80068ee:	4619      	mov	r1, r3
 80068f0:	f7fe bea5 	b.w	800563e <_ZN19ScreenGraphViewBaseC1Ev+0x18ba>
 80068f4:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80068f8:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80068fc:	ee17 3a10 	vmov	r3, s14
 8006900:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8006904:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8006908:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800690c:	1e59      	subs	r1, r3, #1
 800690e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006912:	ee17 3a90 	vmov	r3, s15
 8006916:	440b      	add	r3, r1
 8006918:	4619      	mov	r1, r3
 800691a:	f7fe bea9 	b.w	8005670 <_ZN19ScreenGraphViewBaseC1Ev+0x18ec>
 800691e:	4b6b      	ldr	r3, [pc, #428]	; (8006acc <_ZN19ScreenGraphViewBaseC1Ev+0x2d48>)
 8006920:	881b      	ldrh	r3, [r3, #0]
 8006922:	2b03      	cmp	r3, #3
 8006924:	d804      	bhi.n	8006930 <_ZN19ScreenGraphViewBaseC1Ev+0x2bac>
 8006926:	4b6a      	ldr	r3, [pc, #424]	; (8006ad0 <_ZN19ScreenGraphViewBaseC1Ev+0x2d4c>)
 8006928:	4a6a      	ldr	r2, [pc, #424]	; (8006ad4 <_ZN19ScreenGraphViewBaseC1Ev+0x2d50>)
 800692a:	2161      	movs	r1, #97	; 0x61
 800692c:	f7fe bfb2 	b.w	8005894 <_ZN19ScreenGraphViewBaseC1Ev+0x1b10>
        return texts->getText(typedTextId);
 8006930:	4b69      	ldr	r3, [pc, #420]	; (8006ad8 <_ZN19ScreenGraphViewBaseC1Ev+0x2d54>)
 8006932:	2103      	movs	r1, #3
 8006934:	6818      	ldr	r0, [r3, #0]
 8006936:	f000 fa39 	bl	8006dac <_ZNK8touchgfx5Texts7getTextEt>
 800693a:	4a68      	ldr	r2, [pc, #416]	; (8006adc <_ZN19ScreenGraphViewBaseC1Ev+0x2d58>)
 800693c:	4603      	mov	r3, r0
 800693e:	4641      	mov	r1, r8
 8006940:	4658      	mov	r0, fp
 8006942:	f00e fe23 	bl	801558c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    txtLastValue.resizeToCurrentText();
 8006946:	ee19 0a90 	vmov	r0, s19
        wc1 = value;
 800694a:	f8c4 b8b8 	str.w	fp, [r4, #2232]	; 0x8b8
 800694e:	f008 ff13 	bl	800f778 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8006952:	2305      	movs	r3, #5
 8006954:	4a62      	ldr	r2, [pc, #392]	; (8006ae0 <_ZN19ScreenGraphViewBaseC1Ev+0x2d5c>)
 8006956:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
    txtLastValue.setTypedText(touchgfx::TypedText(T___SINGLEUSE_POMN));
 800695a:	ee19 0a90 	vmov	r0, s19
 800695e:	a90c      	add	r1, sp, #48	; 0x30
 8006960:	920c      	str	r2, [sp, #48]	; 0x30
 8006962:	f008 ff29 	bl	800f7b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    txtMaxValue.setXY(2, 183);
 8006966:	4639      	mov	r1, r7
 8006968:	ee1a 0a10 	vmov	r0, s20
 800696c:	22b7      	movs	r2, #183	; 0xb7
 800696e:	f7fc f94d 	bl	8002c0c <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8006972:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006976:	f8d9 3000 	ldr.w	r3, [r9]
 800697a:	f8c4 18ec 	str.w	r1, [r4, #2284]	; 0x8ec
        boundingArea = calculateBoundingArea();
 800697e:	f04f 31ff 	mov.w	r1, #4294967295
        linespace = space;
 8006982:	f8a4 68f0 	strh.w	r6, [r4, #2288]	; 0x8f0
        boundingArea = calculateBoundingArea();
 8006986:	f8c4 68f8 	str.w	r6, [r4, #2296]	; 0x8f8
 800698a:	f8c4 18fc 	str.w	r1, [r4, #2300]	; 0x8fc
 800698e:	f8c4 6900 	str.w	r6, [r4, #2304]	; 0x900
    Unicode::snprintf(txtMaxValueBuffer, TXTMAXVALUE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_JAK9).getText());
 8006992:	f604 1b64 	addw	fp, r4, #2404	; 0x964
 8006996:	2b00      	cmp	r3, #0
 8006998:	f43e af79 	beq.w	800588e <_ZN19ScreenGraphViewBaseC1Ev+0x1b0a>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800699c:	494b      	ldr	r1, [pc, #300]	; (8006acc <_ZN19ScreenGraphViewBaseC1Ev+0x2d48>)
 800699e:	880b      	ldrh	r3, [r1, #0]
 80069a0:	2b02      	cmp	r3, #2
 80069a2:	d9c0      	bls.n	8006926 <_ZN19ScreenGraphViewBaseC1Ev+0x2ba2>
        return texts->getText(typedTextId);
 80069a4:	4b4c      	ldr	r3, [pc, #304]	; (8006ad8 <_ZN19ScreenGraphViewBaseC1Ev+0x2d54>)
 80069a6:	4639      	mov	r1, r7
 80069a8:	6818      	ldr	r0, [r3, #0]
 80069aa:	f000 f9ff 	bl	8006dac <_ZNK8touchgfx5Texts7getTextEt>
 80069ae:	4a4b      	ldr	r2, [pc, #300]	; (8006adc <_ZN19ScreenGraphViewBaseC1Ev+0x2d58>)
 80069b0:	4603      	mov	r3, r0
 80069b2:	4641      	mov	r1, r8
 80069b4:	4658      	mov	r0, fp
 80069b6:	f00e fde9 	bl	801558c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    txtMaxValue.resizeToCurrentText();
 80069ba:	ee1a 0a10 	vmov	r0, s20
 80069be:	f8c4 b904 	str.w	fp, [r4, #2308]	; 0x904
 80069c2:	f008 fed9 	bl	800f778 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
    txtMaxValue.setTypedText(touchgfx::TypedText(T___SINGLEUSE_5RGF));
 80069c6:	a80c      	add	r0, sp, #48	; 0x30
        : typedTextId(id)
 80069c8:	2304      	movs	r3, #4
 80069ca:	4a45      	ldr	r2, [pc, #276]	; (8006ae0 <_ZN19ScreenGraphViewBaseC1Ev+0x2d5c>)
 80069cc:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 80069d0:	4601      	mov	r1, r0
 80069d2:	ee1a 0a10 	vmov	r0, s20
 80069d6:	920c      	str	r2, [sp, #48]	; 0x30
 80069d8:	f008 feee 	bl	800f7b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textChargingTme.setXY(2, 198);
 80069dc:	ee1a 0a90 	vmov	r0, s21
 80069e0:	4639      	mov	r1, r7
 80069e2:	22c6      	movs	r2, #198	; 0xc6
 80069e4:	f7fc f912 	bl	8002c0c <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80069e8:	f04f 407f 	mov.w	r0, #4278190080	; 0xff000000
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80069ec:	f8d9 3000 	ldr.w	r3, [r9]
 80069f0:	f8c4 0938 	str.w	r0, [r4, #2360]	; 0x938
        boundingArea = calculateBoundingArea();
 80069f4:	f04f 30ff 	mov.w	r0, #4294967295
        linespace = space;
 80069f8:	f8a4 693c 	strh.w	r6, [r4, #2364]	; 0x93c
        boundingArea = calculateBoundingArea();
 80069fc:	f8c4 6944 	str.w	r6, [r4, #2372]	; 0x944
 8006a00:	f8c4 0948 	str.w	r0, [r4, #2376]	; 0x948
 8006a04:	f8c4 694c 	str.w	r6, [r4, #2380]	; 0x94c
    Unicode::snprintf(textChargingTmeBuffer, TEXTCHARGINGTME_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_E1C6).getText());
 8006a08:	f604 1774 	addw	r7, r4, #2420	; 0x974
 8006a0c:	2b00      	cmp	r3, #0
 8006a0e:	f43e af3e 	beq.w	800588e <_ZN19ScreenGraphViewBaseC1Ev+0x1b0a>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006a12:	492e      	ldr	r1, [pc, #184]	; (8006acc <_ZN19ScreenGraphViewBaseC1Ev+0x2d48>)
 8006a14:	880b      	ldrh	r3, [r1, #0]
 8006a16:	2b00      	cmp	r3, #0
 8006a18:	d085      	beq.n	8006926 <_ZN19ScreenGraphViewBaseC1Ev+0x2ba2>
        return texts->getText(typedTextId);
 8006a1a:	4b2f      	ldr	r3, [pc, #188]	; (8006ad8 <_ZN19ScreenGraphViewBaseC1Ev+0x2d54>)
 8006a1c:	4631      	mov	r1, r6
 8006a1e:	6818      	ldr	r0, [r3, #0]
 8006a20:	f000 f9c4 	bl	8006dac <_ZNK8touchgfx5Texts7getTextEt>
 8006a24:	4a2d      	ldr	r2, [pc, #180]	; (8006adc <_ZN19ScreenGraphViewBaseC1Ev+0x2d58>)
 8006a26:	4603      	mov	r3, r0
 8006a28:	210a      	movs	r1, #10
 8006a2a:	4638      	mov	r0, r7
 8006a2c:	f00e fdae 	bl	801558c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textChargingTme.resizeToCurrentText();
 8006a30:	ee1a 0a90 	vmov	r0, s21
 8006a34:	f8c4 7950 	str.w	r7, [r4, #2384]	; 0x950
 8006a38:	1d26      	adds	r6, r4, #4
 8006a3a:	f008 fe9d 	bl	800f778 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8006a3e:	4a28      	ldr	r2, [pc, #160]	; (8006ae0 <_ZN19ScreenGraphViewBaseC1Ev+0x2d5c>)
 8006a40:	920c      	str	r2, [sp, #48]	; 0x30
 8006a42:	f04f 0301 	mov.w	r3, #1
    textChargingTme.setTypedText(touchgfx::TypedText(T___SINGLEUSE_U9Q3));
 8006a46:	ee1a 0a90 	vmov	r0, s21
 8006a4a:	a90c      	add	r1, sp, #48	; 0x30
 8006a4c:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8006a50:	f008 feb2 	bl	800f7b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006a54:	ee19 1a10 	vmov	r1, s18
 8006a58:	4630      	mov	r0, r6
 8006a5a:	f005 fcbf 	bl	800c3dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006a5e:	ee18 1a10 	vmov	r1, s16
 8006a62:	4630      	mov	r0, r6
 8006a64:	f005 fcba 	bl	800c3dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006a68:	ee1c 1a10 	vmov	r1, s24
 8006a6c:	4630      	mov	r0, r6
 8006a6e:	f005 fcb5 	bl	800c3dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006a72:	ee1b 1a10 	vmov	r1, s22
 8006a76:	4630      	mov	r0, r6
 8006a78:	f005 fcb0 	bl	800c3dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006a7c:	4629      	mov	r1, r5
 8006a7e:	4630      	mov	r0, r6
 8006a80:	f005 fcac 	bl	800c3dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006a84:	4651      	mov	r1, sl
 8006a86:	4630      	mov	r0, r6
 8006a88:	f005 fca8 	bl	800c3dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006a8c:	ee1b 1a90 	vmov	r1, s23
 8006a90:	4630      	mov	r0, r6
 8006a92:	f005 fca3 	bl	800c3dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006a96:	ee18 1a90 	vmov	r1, s17
 8006a9a:	4630      	mov	r0, r6
 8006a9c:	f005 fc9e 	bl	800c3dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006aa0:	ee19 1a90 	vmov	r1, s19
 8006aa4:	4630      	mov	r0, r6
 8006aa6:	f005 fc99 	bl	800c3dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006aaa:	ee1a 1a10 	vmov	r1, s20
 8006aae:	4630      	mov	r0, r6
 8006ab0:	f005 fc94 	bl	800c3dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006ab4:	4630      	mov	r0, r6
 8006ab6:	ee1a 1a90 	vmov	r1, s21
 8006aba:	f005 fc8f 	bl	800c3dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006abe:	4620      	mov	r0, r4
 8006ac0:	b00f      	add	sp, #60	; 0x3c
 8006ac2:	ecbd 8b10 	vpop	{d8-d15}
 8006ac6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006aca:	bf00      	nop
 8006acc:	200179a8 	.word	0x200179a8
 8006ad0:	08023dac 	.word	0x08023dac
 8006ad4:	080242a7 	.word	0x080242a7
 8006ad8:	200179b0 	.word	0x200179b0
 8006adc:	080242df 	.word	0x080242df
 8006ae0:	08023620 	.word	0x08023620

08006ae4 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 40, 10, 2, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8006ae4:	4770      	bx	lr
	...

08006ae8 <_Z23getFont_verdana_10_4bppv>:
{
 8006ae8:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 40, 10, 2, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8006aea:	4d16      	ldr	r5, [pc, #88]	; (8006b44 <_Z23getFont_verdana_10_4bppv+0x5c>)
 8006aec:	782c      	ldrb	r4, [r5, #0]
 8006aee:	f3bf 8f5b 	dmb	ish
 8006af2:	f014 0401 	ands.w	r4, r4, #1
{
 8006af6:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 40, 10, 2, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8006af8:	d120      	bne.n	8006b3c <_Z23getFont_verdana_10_4bppv+0x54>
 8006afa:	4628      	mov	r0, r5
 8006afc:	f01b f8a6 	bl	8021c4c <__cxa_guard_acquire>
 8006b00:	b1e0      	cbz	r0, 8006b3c <_Z23getFont_verdana_10_4bppv+0x54>
 8006b02:	233f      	movs	r3, #63	; 0x3f
 8006b04:	9307      	str	r3, [sp, #28]
 8006b06:	4b10      	ldr	r3, [pc, #64]	; (8006b48 <_Z23getFont_verdana_10_4bppv+0x60>)
 8006b08:	9306      	str	r3, [sp, #24]
 8006b0a:	4b10      	ldr	r3, [pc, #64]	; (8006b4c <_Z23getFont_verdana_10_4bppv+0x64>)
 8006b0c:	9305      	str	r3, [sp, #20]
 8006b0e:	2301      	movs	r3, #1
 8006b10:	e9cd 3303 	strd	r3, r3, [sp, #12]
 8006b14:	9302      	str	r3, [sp, #8]
 8006b16:	2204      	movs	r2, #4
 8006b18:	2302      	movs	r3, #2
 8006b1a:	e9cd 3200 	strd	r3, r2, [sp]
 8006b1e:	490c      	ldr	r1, [pc, #48]	; (8006b50 <_Z23getFont_verdana_10_4bppv+0x68>)
 8006b20:	480c      	ldr	r0, [pc, #48]	; (8006b54 <_Z23getFont_verdana_10_4bppv+0x6c>)
 8006b22:	9408      	str	r4, [sp, #32]
 8006b24:	230a      	movs	r3, #10
 8006b26:	2228      	movs	r2, #40	; 0x28
 8006b28:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 8006b2c:	f7fb fed2 	bl	80028d4 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8006b30:	4809      	ldr	r0, [pc, #36]	; (8006b58 <_Z23getFont_verdana_10_4bppv+0x70>)
 8006b32:	f01b f8d5 	bl	8021ce0 <atexit>
 8006b36:	4628      	mov	r0, r5
 8006b38:	f01b f894 	bl	8021c64 <__cxa_guard_release>
    return verdana_10_4bpp;
}
 8006b3c:	4805      	ldr	r0, [pc, #20]	; (8006b54 <_Z23getFont_verdana_10_4bppv+0x6c>)
 8006b3e:	b00d      	add	sp, #52	; 0x34
 8006b40:	bd30      	pop	{r4, r5, pc}
 8006b42:	bf00      	nop
 8006b44:	20006a8c 	.word	0x20006a8c
 8006b48:	08026f30 	.word	0x08026f30
 8006b4c:	08026f70 	.word	0x08026f70
 8006b50:	08026ab0 	.word	0x08026ab0
 8006b54:	20006a90 	.word	0x20006a90
 8006b58:	08006ae5 	.word	0x08006ae5

08006b5c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_15_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_15_4bpp();

touchgfx::GeneratedFont& getFont_verdana_15_4bpp()
{
    static touchgfx::GeneratedFont verdana_15_4bpp(glyphs_verdana_15_4bpp, 37, 15, 3, 4, 1, 0, 1, unicodes_verdana_15_4bpp, kerning_verdana_15_4bpp, 63, 0, 0, 0);
 8006b5c:	4770      	bx	lr
	...

08006b60 <_Z23getFont_verdana_15_4bppv>:
{
 8006b60:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_15_4bpp(glyphs_verdana_15_4bpp, 37, 15, 3, 4, 1, 0, 1, unicodes_verdana_15_4bpp, kerning_verdana_15_4bpp, 63, 0, 0, 0);
 8006b62:	4d16      	ldr	r5, [pc, #88]	; (8006bbc <_Z23getFont_verdana_15_4bppv+0x5c>)
 8006b64:	782c      	ldrb	r4, [r5, #0]
 8006b66:	f3bf 8f5b 	dmb	ish
 8006b6a:	f014 0401 	ands.w	r4, r4, #1
{
 8006b6e:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_15_4bpp(glyphs_verdana_15_4bpp, 37, 15, 3, 4, 1, 0, 1, unicodes_verdana_15_4bpp, kerning_verdana_15_4bpp, 63, 0, 0, 0);
 8006b70:	d120      	bne.n	8006bb4 <_Z23getFont_verdana_15_4bppv+0x54>
 8006b72:	4628      	mov	r0, r5
 8006b74:	f01b f86a 	bl	8021c4c <__cxa_guard_acquire>
 8006b78:	b1e0      	cbz	r0, 8006bb4 <_Z23getFont_verdana_15_4bppv+0x54>
 8006b7a:	233f      	movs	r3, #63	; 0x3f
 8006b7c:	9307      	str	r3, [sp, #28]
 8006b7e:	4b10      	ldr	r3, [pc, #64]	; (8006bc0 <_Z23getFont_verdana_15_4bppv+0x60>)
 8006b80:	9306      	str	r3, [sp, #24]
 8006b82:	4b10      	ldr	r3, [pc, #64]	; (8006bc4 <_Z23getFont_verdana_15_4bppv+0x64>)
 8006b84:	9305      	str	r3, [sp, #20]
 8006b86:	2301      	movs	r3, #1
 8006b88:	e9cd 4303 	strd	r4, r3, [sp, #12]
 8006b8c:	9302      	str	r3, [sp, #8]
 8006b8e:	2204      	movs	r2, #4
 8006b90:	2303      	movs	r3, #3
 8006b92:	e9cd 3200 	strd	r3, r2, [sp]
 8006b96:	490c      	ldr	r1, [pc, #48]	; (8006bc8 <_Z23getFont_verdana_15_4bppv+0x68>)
 8006b98:	480c      	ldr	r0, [pc, #48]	; (8006bcc <_Z23getFont_verdana_15_4bppv+0x6c>)
 8006b9a:	9408      	str	r4, [sp, #32]
 8006b9c:	230f      	movs	r3, #15
 8006b9e:	2225      	movs	r2, #37	; 0x25
 8006ba0:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 8006ba4:	f7fb fe96 	bl	80028d4 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8006ba8:	4809      	ldr	r0, [pc, #36]	; (8006bd0 <_Z23getFont_verdana_15_4bppv+0x70>)
 8006baa:	f01b f899 	bl	8021ce0 <atexit>
 8006bae:	4628      	mov	r0, r5
 8006bb0:	f01b f858 	bl	8021c64 <__cxa_guard_release>
    return verdana_15_4bpp;
}
 8006bb4:	4805      	ldr	r0, [pc, #20]	; (8006bcc <_Z23getFont_verdana_15_4bppv+0x6c>)
 8006bb6:	b00d      	add	sp, #52	; 0x34
 8006bb8:	bd30      	pop	{r4, r5, pc}
 8006bba:	bf00      	nop
 8006bbc:	20006ab8 	.word	0x20006ab8
 8006bc0:	08026f48 	.word	0x08026f48
 8006bc4:	08026f74 	.word	0x08026f74
 8006bc8:	08026ce0 	.word	0x08026ce0
 8006bcc:	20006abc 	.word	0x20006abc
 8006bd0:	08006b5d 	.word	0x08006b5d

08006bd4 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 5, 40, 1, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8006bd4:	4770      	bx	lr
	...

08006bd8 <_Z23getFont_verdana_40_4bppv>:
{
 8006bd8:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 5, 40, 1, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8006bda:	4d15      	ldr	r5, [pc, #84]	; (8006c30 <_Z23getFont_verdana_40_4bppv+0x58>)
 8006bdc:	782c      	ldrb	r4, [r5, #0]
 8006bde:	f3bf 8f5b 	dmb	ish
 8006be2:	f014 0401 	ands.w	r4, r4, #1
{
 8006be6:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 5, 40, 1, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8006be8:	d11f      	bne.n	8006c2a <_Z23getFont_verdana_40_4bppv+0x52>
 8006bea:	4628      	mov	r0, r5
 8006bec:	f01b f82e 	bl	8021c4c <__cxa_guard_acquire>
 8006bf0:	b1d8      	cbz	r0, 8006c2a <_Z23getFont_verdana_40_4bppv+0x52>
 8006bf2:	233f      	movs	r3, #63	; 0x3f
 8006bf4:	9307      	str	r3, [sp, #28]
 8006bf6:	4b0f      	ldr	r3, [pc, #60]	; (8006c34 <_Z23getFont_verdana_40_4bppv+0x5c>)
 8006bf8:	9306      	str	r3, [sp, #24]
 8006bfa:	4b0f      	ldr	r3, [pc, #60]	; (8006c38 <_Z23getFont_verdana_40_4bppv+0x60>)
 8006bfc:	490f      	ldr	r1, [pc, #60]	; (8006c3c <_Z23getFont_verdana_40_4bppv+0x64>)
 8006bfe:	4810      	ldr	r0, [pc, #64]	; (8006c40 <_Z23getFont_verdana_40_4bppv+0x68>)
 8006c00:	9408      	str	r4, [sp, #32]
 8006c02:	e9cd 4304 	strd	r4, r3, [sp, #16]
 8006c06:	2204      	movs	r2, #4
 8006c08:	2301      	movs	r3, #1
 8006c0a:	e9cd 2301 	strd	r2, r3, [sp, #4]
 8006c0e:	9300      	str	r3, [sp, #0]
 8006c10:	2205      	movs	r2, #5
 8006c12:	2328      	movs	r3, #40	; 0x28
 8006c14:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 8006c18:	9403      	str	r4, [sp, #12]
 8006c1a:	f7fb fe5b 	bl	80028d4 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8006c1e:	4809      	ldr	r0, [pc, #36]	; (8006c44 <_Z23getFont_verdana_40_4bppv+0x6c>)
 8006c20:	f01b f85e 	bl	8021ce0 <atexit>
 8006c24:	4628      	mov	r0, r5
 8006c26:	f01b f81d 	bl	8021c64 <__cxa_guard_release>
    return verdana_40_4bpp;
}
 8006c2a:	4805      	ldr	r0, [pc, #20]	; (8006c40 <_Z23getFont_verdana_40_4bppv+0x68>)
 8006c2c:	b00d      	add	sp, #52	; 0x34
 8006c2e:	bd30      	pop	{r4, r5, pc}
 8006c30:	20006ae4 	.word	0x20006ae4
 8006c34:	08026f5c 	.word	0x08026f5c
 8006c38:	08026f78 	.word	0x08026f78
 8006c3c:	08026ee8 	.word	0x08026ee8
 8006c40:	20006ae8 	.word	0x20006ae8
 8006c44:	08006bd5 	.word	0x08006bd5

08006c48 <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 8006c48:	2000      	movs	r0, #0
 8006c4a:	4770      	bx	lr

08006c4c <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
 8006c4c:	2000      	movs	r0, #0
 8006c4e:	4770      	bx	lr

08006c50 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8006c50:	b40e      	push	{r1, r2, r3}
 8006c52:	b503      	push	{r0, r1, lr}
 8006c54:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8006c56:	2100      	movs	r1, #0
{
 8006c58:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 8006c5c:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8006c5e:	f00c fb4d 	bl	80132fc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8006c62:	b002      	add	sp, #8
 8006c64:	f85d eb04 	ldr.w	lr, [sp], #4
 8006c68:	b003      	add	sp, #12
 8006c6a:	4770      	bx	lr

08006c6c <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8006c6c:	b40c      	push	{r2, r3}
 8006c6e:	b507      	push	{r0, r1, r2, lr}
 8006c70:	ab04      	add	r3, sp, #16
 8006c72:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 8006c76:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 8006c78:	f00c fb40 	bl	80132fc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8006c7c:	b003      	add	sp, #12
 8006c7e:	f85d eb04 	ldr.w	lr, [sp], #4
 8006c82:	b002      	add	sp, #8
 8006c84:	4770      	bx	lr
	...

08006c88 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 8006c88:	6c43      	ldr	r3, [r0, #68]	; 0x44
{
 8006c8a:	b510      	push	{r4, lr}
 8006c8c:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 8006c8e:	b373      	cbz	r3, 8006cee <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        {
            return used == size;
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 8006c90:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 8006c92:	b92b      	cbnz	r3, 8006ca0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 8006c94:	4b18      	ldr	r3, [pc, #96]	; (8006cf8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 8006c96:	4a19      	ldr	r2, [pc, #100]	; (8006cfc <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 8006c98:	21c0      	movs	r1, #192	; 0xc0
            return buffer[pos];
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 8006c9a:	4819      	ldr	r0, [pc, #100]	; (8006d00 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 8006c9c:	f01b f802 	bl	8021ca4 <__assert_func>
            return buffer[pos];
 8006ca0:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8006ca2:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8006ca6:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
 8006ca8:	b30b      	cbz	r3, 8006cee <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 8006caa:	f00d fec0 	bl	8014a2e <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 8006cae:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8006cb0:	2b01      	cmp	r3, #1
 8006cb2:	d803      	bhi.n	8006cbc <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 8006cb4:	4b13      	ldr	r3, [pc, #76]	; (8006d04 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 8006cb6:	4a14      	ldr	r2, [pc, #80]	; (8006d08 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 8006cb8:	21c5      	movs	r1, #197	; 0xc5
 8006cba:	e7ee      	b.n	8006c9a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 8006cbc:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8006cbe:	1c53      	adds	r3, r2, #1
 8006cc0:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 8006cc2:	2b09      	cmp	r3, #9
 8006cc4:	4619      	mov	r1, r3
 8006cc6:	bf88      	it	hi
 8006cc8:	f1a3 010a 	subhi.w	r1, r3, #10
 8006ccc:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 8006cd0:	f640 103f 	movw	r0, #2367	; 0x93f
 8006cd4:	8c49      	ldrh	r1, [r1, #34]	; 0x22
 8006cd6:	4281      	cmp	r1, r0
 8006cd8:	d109      	bne.n	8006cee <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 8006cda:	2b0a      	cmp	r3, #10
 8006cdc:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8006ce0:	bf28      	it	cs
 8006ce2:	2300      	movcs	r3, #0
        }
        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 8006ce4:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 8006ce8:	8c50      	ldrh	r0, [r2, #34]	; 0x22
            buffer[index < size ? index : 0] = newChar;
 8006cea:	8458      	strh	r0, [r3, #34]	; 0x22
            buffer[pos] = newChar;
 8006cec:	8451      	strh	r1, [r2, #34]	; 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 8006cee:	4620      	mov	r0, r4
}
 8006cf0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 8006cf4:	f00d bd9e 	b.w	8014834 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8006cf8:	080247f8 	.word	0x080247f8
 8006cfc:	08024801 	.word	0x08024801
 8006d00:	080248ac 	.word	0x080248ac
 8006d04:	080248f6 	.word	0x080248f6
 8006d08:	08024904 	.word	0x08024904

08006d0c <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 8006d0c:	f00d bd59 	b.w	80147c2 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08006d10 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 8006d10:	b510      	push	{r4, lr}
 8006d12:	b086      	sub	sp, #24
 8006d14:	ac02      	add	r4, sp, #8
 8006d16:	e884 0006 	stmia.w	r4, {r1, r2}
 8006d1a:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 8006d1c:	ab0a      	add	r3, sp, #40	; 0x28
 8006d1e:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 8006d20:	9301      	str	r3, [sp, #4]
 8006d22:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006d24:	9300      	str	r3, [sp, #0]
 8006d26:	4621      	mov	r1, r4
 8006d28:	9b08      	ldr	r3, [sp, #32]
 8006d2a:	f00a ffec 	bl	8011d06 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 8006d2e:	b006      	add	sp, #24
 8006d30:	bd10      	pop	{r4, pc}
	...

08006d34 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8006d34:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 8006d36:	bb18      	cbnz	r0, 8006d80 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 8006d38:	4b12      	ldr	r3, [pc, #72]	; (8006d84 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 8006d3a:	4813      	ldr	r0, [pc, #76]	; (8006d88 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 8006d3c:	681b      	ldr	r3, [r3, #0]
 8006d3e:	4913      	ldr	r1, [pc, #76]	; (8006d8c <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 8006d40:	b1b3      	cbz	r3, 8006d70 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8006d42:	681a      	ldr	r2, [r3, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8006d44:	689c      	ldr	r4, [r3, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8006d46:	441a      	add	r2, r3
 8006d48:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 8006d4a:	685a      	ldr	r2, [r3, #4]
 8006d4c:	441a      	add	r2, r3
 8006d4e:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8006d50:	441c      	add	r4, r3
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 8006d52:	4b0f      	ldr	r3, [pc, #60]	; (8006d90 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 8006d54:	2200      	movs	r2, #0
 8006d56:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 8006d58:	f000 f838 	bl	8006dcc <_ZN17TypedTextDatabase8getFontsEv>
 8006d5c:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 8006d5e:	f000 f833 	bl	8006dc8 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 8006d62:	4b0c      	ldr	r3, [pc, #48]	; (8006d94 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 8006d64:	601c      	str	r4, [r3, #0]
        fonts = f;
 8006d66:	4b0c      	ldr	r3, [pc, #48]	; (8006d98 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 8006d68:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 8006d6a:	4b0c      	ldr	r3, [pc, #48]	; (8006d9c <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 8006d6c:	8018      	strh	r0, [r3, #0]
    }
}
 8006d6e:	e007      	b.n	8006d80 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 8006d70:	4b0b      	ldr	r3, [pc, #44]	; (8006da0 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 8006d72:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8006d74:	4b0b      	ldr	r3, [pc, #44]	; (8006da4 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 8006d76:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8006d78:	4b0b      	ldr	r3, [pc, #44]	; (8006da8 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 8006d7a:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 8006d7c:	2c00      	cmp	r4, #0
 8006d7e:	d1e8      	bne.n	8006d52 <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 8006d80:	bd38      	pop	{r3, r4, r5, pc}
 8006d82:	bf00      	nop
 8006d84:	20006b10 	.word	0x20006b10
 8006d88:	20006b14 	.word	0x20006b14
 8006d8c:	20006b18 	.word	0x20006b18
 8006d90:	20006b1c 	.word	0x20006b1c
 8006d94:	200179a4 	.word	0x200179a4
 8006d98:	200179ac 	.word	0x200179ac
 8006d9c:	200179a8 	.word	0x200179a8
 8006da0:	08026fb0 	.word	0x08026fb0
 8006da4:	08026f7c 	.word	0x08026f7c
 8006da8:	08027108 	.word	0x08027108

08006dac <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 8006dac:	4b04      	ldr	r3, [pc, #16]	; (8006dc0 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 8006dae:	681b      	ldr	r3, [r3, #0]
 8006db0:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8006db4:	4b03      	ldr	r3, [pc, #12]	; (8006dc4 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 8006db6:	681b      	ldr	r3, [r3, #0]
}
 8006db8:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8006dbc:	4770      	bx	lr
 8006dbe:	bf00      	nop
 8006dc0:	20006b18 	.word	0x20006b18
 8006dc4:	20006b14 	.word	0x20006b14

08006dc8 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 8006dc8:	200d      	movs	r0, #13
 8006dca:	4770      	bx	lr

08006dcc <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 8006dcc:	4800      	ldr	r0, [pc, #0]	; (8006dd0 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 8006dce:	4770      	bx	lr
 8006dd0:	20006b20 	.word	0x20006b20

08006dd4 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 8006dd4:	b510      	push	{r4, lr}
    &(getFont_verdana_15_4bpp()),
 8006dd6:	f7ff fec3 	bl	8006b60 <_Z23getFont_verdana_15_4bppv>
};
 8006dda:	4c04      	ldr	r4, [pc, #16]	; (8006dec <_GLOBAL__sub_I_touchgfx_fonts+0x18>)
 8006ddc:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 8006dde:	f7ff fefb 	bl	8006bd8 <_Z23getFont_verdana_40_4bppv>
};
 8006de2:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp())
 8006de4:	f7ff fe80 	bl	8006ae8 <_Z23getFont_verdana_10_4bppv>
};
 8006de8:	60a0      	str	r0, [r4, #8]
} // namespace TypedTextDatabase
 8006dea:	bd10      	pop	{r4, pc}
 8006dec:	20006b20 	.word	0x20006b20

08006df0 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 8006df0:	4770      	bx	lr

08006df2 <_ZN19FrontendApplicationD0Ev>:
 8006df2:	b510      	push	{r4, lr}
 8006df4:	f44f 71ac 	mov.w	r1, #344	; 0x158
 8006df8:	4604      	mov	r4, r0
 8006dfa:	f01a ff25 	bl	8021c48 <_ZdlPvj>
 8006dfe:	4620      	mov	r0, r4
 8006e00:	bd10      	pop	{r4, pc}

08006e02 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 8006e02:	b510      	push	{r4, lr}
 8006e04:	4604      	mov	r4, r0
    {
        model.tick();
 8006e06:	f8d0 0154 	ldr.w	r0, [r0, #340]	; 0x154
 8006e0a:	f000 f813 	bl	8006e34 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 8006e0e:	4620      	mov	r0, r4
    }
 8006e10:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 8006e14:	f00b baf0 	b.w	80123f8 <_ZN8touchgfx11Application15handleTickEventEv>

08006e18 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 8006e18:	b510      	push	{r4, lr}
 8006e1a:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 8006e1c:	f7fb fb5a 	bl	80024d4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 8006e20:	4b01      	ldr	r3, [pc, #4]	; (8006e28 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 8006e22:	6023      	str	r3, [r4, #0]
{

}
 8006e24:	4620      	mov	r0, r4
 8006e26:	bd10      	pop	{r4, pc}
 8006e28:	080249e0 	.word	0x080249e0

08006e2c <_ZN5ModelC1Ev>:
#include "Charger.h"
extern LadowarkaStruct ladowarka;
#endif
int PradLadowania=400; //ustawienie na sztywno pradu ladowania
int licznik;
Model::Model() : modelListener(0)
 8006e2c:	2200      	movs	r2, #0
 8006e2e:	6002      	str	r2, [r0, #0]
{

}
 8006e30:	4770      	bx	lr
	...

08006e34 <_ZN5Model4tickEv>:

void Model::tick()
{
 8006e34:	b570      	push	{r4, r5, r6, lr}
 8006e36:	4604      	mov	r4, r0
//	if (licznik>1000 )licznik =0;
//
//	if (licznik%100) modelListener->UpdateBatteryVoltage();

/************* UPDATE BATT VOLTAGE ON GRAPH *********************/
modelListener->UpdateBatteryVoltage();
 8006e38:	6800      	ldr	r0, [r0, #0]
#ifndef SIMULATOR
if(ladowarka.narysujPunktNaWykresie){
 8006e3a:	4d0c      	ldr	r5, [pc, #48]	; (8006e6c <_ZN5Model4tickEv+0x38>)
modelListener->UpdateBatteryVoltage();
 8006e3c:	6803      	ldr	r3, [r0, #0]
 8006e3e:	689b      	ldr	r3, [r3, #8]
 8006e40:	4798      	blx	r3
if(ladowarka.narysujPunktNaWykresie){
 8006e42:	f8d5 394c 	ldr.w	r3, [r5, #2380]	; 0x94c
 8006e46:	b133      	cbz	r3, 8006e56 <_ZN5Model4tickEv+0x22>
	modelListener->DrawPoint();
 8006e48:	6820      	ldr	r0, [r4, #0]
 8006e4a:	6803      	ldr	r3, [r0, #0]
 8006e4c:	68db      	ldr	r3, [r3, #12]
 8006e4e:	4798      	blx	r3
	ladowarka.narysujPunktNaWykresie=0;
 8006e50:	2300      	movs	r3, #0
 8006e52:	f8c5 394c 	str.w	r3, [r5, #2380]	; 0x94c
#endif



/*************** Update min/max value **************************/
modelListener->DisplayLastAndMaxVlt();
 8006e56:	6820      	ldr	r0, [r4, #0]
 8006e58:	6803      	ldr	r3, [r0, #0]
 8006e5a:	691b      	ldr	r3, [r3, #16]
 8006e5c:	4798      	blx	r3
/*************** Update Runningn Time value **************************/
modelListener->DisplayRunningTime();
 8006e5e:	6820      	ldr	r0, [r4, #0]
 8006e60:	6803      	ldr	r3, [r0, #0]
}
 8006e62:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
modelListener->DisplayRunningTime();
 8006e66:	695b      	ldr	r3, [r3, #20]
 8006e68:	4718      	bx	r3
 8006e6a:	bf00      	nop
 8006e6c:	200060e4 	.word	0x200060e4

08006e70 <_ZN13ModelListener9DrawPointEv>:
    virtual void DrawPoint () {};
 8006e70:	4770      	bx	lr

08006e72 <_ZN13ModelListener20DisplayLastAndMaxVltEv>:
    virtual void DisplayLastAndMaxVlt() {} ;
 8006e72:	4770      	bx	lr

08006e74 <_ZN13ModelListener18DisplayRunningTimeEv>:
    virtual void DisplayRunningTime() {} ;
 8006e74:	4770      	bx	lr

08006e76 <_ZN16Screen1PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen1Presenter() {};
 8006e76:	4770      	bx	lr

08006e78 <_ZThn4_N16Screen1PresenterD1Ev>:
 8006e78:	3804      	subs	r0, #4
 8006e7a:	4770      	bx	lr

08006e7c <_ZN16Screen1Presenter10deactivateEv>:
}

void Screen1Presenter::activate()
{

}
 8006e7c:	4770      	bx	lr

08006e7e <_ZN16Screen1Presenter20UpdateBatteryVoltageEv>:
{

}

void Screen1Presenter:: UpdateBatteryVoltage(){
view.DisplayBatteryVoltage();
 8006e7e:	68c0      	ldr	r0, [r0, #12]
 8006e80:	6803      	ldr	r3, [r0, #0]
 8006e82:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006e84:	4718      	bx	r3

08006e86 <_ZThn4_N16Screen1Presenter20UpdateBatteryVoltageEv>:
    virtual void UpdateBatteryVoltage();
 8006e86:	f1a0 0004 	sub.w	r0, r0, #4
 8006e8a:	f7ff bff8 	b.w	8006e7e <_ZN16Screen1Presenter20UpdateBatteryVoltageEv>

08006e8e <_ZN16Screen1PresenterD0Ev>:
    virtual ~Screen1Presenter() {};
 8006e8e:	b510      	push	{r4, lr}
 8006e90:	2110      	movs	r1, #16
 8006e92:	4604      	mov	r4, r0
 8006e94:	f01a fed8 	bl	8021c48 <_ZdlPvj>
 8006e98:	4620      	mov	r0, r4
 8006e9a:	bd10      	pop	{r4, pc}

08006e9c <_ZThn4_N16Screen1PresenterD0Ev>:
 8006e9c:	f1a0 0004 	sub.w	r0, r0, #4
 8006ea0:	e7f5      	b.n	8006e8e <_ZN16Screen1PresenterD0Ev>
	...

08006ea4 <_ZN16Screen1PresenterC1ER11Screen1View>:
Screen1Presenter::Screen1Presenter(Screen1View& v)
 8006ea4:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 8006ea6:	2200      	movs	r2, #0
 8006ea8:	6082      	str	r2, [r0, #8]
    : view(v)
 8006eaa:	4a04      	ldr	r2, [pc, #16]	; (8006ebc <_ZN16Screen1PresenterC1ER11Screen1View+0x18>)
 8006eac:	60c1      	str	r1, [r0, #12]
 8006eae:	f102 0408 	add.w	r4, r2, #8
 8006eb2:	3224      	adds	r2, #36	; 0x24
 8006eb4:	6004      	str	r4, [r0, #0]
 8006eb6:	6042      	str	r2, [r0, #4]
}
 8006eb8:	bd10      	pop	{r4, pc}
 8006eba:	bf00      	nop
 8006ebc:	08024a24 	.word	0x08024a24

08006ec0 <_ZN11Screen1ViewD1Ev>:
#include <gui/screen1_screen/Screen1Presenter.hpp>
class Screen1View : public Screen1ViewBase
{
public:
    Screen1View();
    virtual ~Screen1View() {}
 8006ec0:	4770      	bx	lr

08006ec2 <_ZN11Screen1View14tearDownScreenEv>:
}

void Screen1View::tearDownScreen()
{
    Screen1ViewBase::tearDownScreen();
}
 8006ec2:	4770      	bx	lr

08006ec4 <_ZN11Screen1View18ButtonStartClickedEv>:
}

void Screen1View::ButtonStartClicked()
{
#ifndef SIMULATOR
 ladowarka.LoadingCurrent=PradLadowania;
 8006ec4:	4b03      	ldr	r3, [pc, #12]	; (8006ed4 <_ZN11Screen1View18ButtonStartClickedEv+0x10>)
 8006ec6:	681a      	ldr	r2, [r3, #0]
 8006ec8:	4b03      	ldr	r3, [pc, #12]	; (8006ed8 <_ZN11Screen1View18ButtonStartClickedEv+0x14>)
 8006eca:	609a      	str	r2, [r3, #8]
 ladowarka.ChargeStarted=1;
 8006ecc:	2201      	movs	r2, #1
 8006ece:	60da      	str	r2, [r3, #12]
#endif
}
 8006ed0:	4770      	bx	lr
 8006ed2:	bf00      	nop
 8006ed4:	20000014 	.word	0x20000014
 8006ed8:	200030e4 	.word	0x200030e4

08006edc <_ZN11Screen1View15ButtonUpClickedEv>:
	PradLadowania=PradLadowania+10;
 8006edc:	4b0b      	ldr	r3, [pc, #44]	; (8006f0c <_ZN11Screen1View15ButtonUpClickedEv+0x30>)
 8006ede:	681a      	ldr	r2, [r3, #0]
{
 8006ee0:	b510      	push	{r4, lr}
	PradLadowania=PradLadowania+10;
 8006ee2:	320a      	adds	r2, #10
	if (PradLadowania >400){
 8006ee4:	f5b2 7fc8 	cmp.w	r2, #400	; 0x190
	PradLadowania=400;}
 8006ee8:	bfc8      	it	gt
 8006eea:	f44f 72c8 	movgt.w	r2, #400	; 0x190
 8006eee:	601a      	str	r2, [r3, #0]
{
 8006ef0:	4604      	mov	r4, r0
	Unicode::snprintf(txtPradLadowaniaBuffer,TXTPRADLADOWANIA_SIZE,"%d",PradLadowania);
 8006ef2:	681b      	ldr	r3, [r3, #0]
 8006ef4:	4a06      	ldr	r2, [pc, #24]	; (8006f10 <_ZN11Screen1View15ButtonUpClickedEv+0x34>)
 8006ef6:	210a      	movs	r1, #10
 8006ef8:	f500 706c 	add.w	r0, r0, #944	; 0x3b0
 8006efc:	f00e fb46 	bl	801558c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	txtPradLadowania.invalidate();
 8006f00:	f504 7017 	add.w	r0, r4, #604	; 0x25c
}
 8006f04:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	txtPradLadowania.invalidate();
 8006f08:	f00c bb19 	b.w	801353e <_ZNK8touchgfx8Drawable10invalidateEv>
 8006f0c:	20000014 	.word	0x20000014
 8006f10:	08024a60 	.word	0x08024a60

08006f14 <_ZN11Screen1View17ButtonDownClickedEv>:
	PradLadowania=PradLadowania-10;
 8006f14:	4b0a      	ldr	r3, [pc, #40]	; (8006f40 <_ZN11Screen1View17ButtonDownClickedEv+0x2c>)
 8006f16:	681a      	ldr	r2, [r3, #0]
{
 8006f18:	b510      	push	{r4, lr}
	PradLadowania=PradLadowania-10;
 8006f1a:	3a0a      	subs	r2, #10
    if (PradLadowania <10){
 8006f1c:	2a09      	cmp	r2, #9
	PradLadowania=10;}
 8006f1e:	bfd8      	it	le
 8006f20:	220a      	movle	r2, #10
 8006f22:	601a      	str	r2, [r3, #0]
{
 8006f24:	4604      	mov	r4, r0
	Unicode::snprintf(txtPradLadowaniaBuffer,TXTPRADLADOWANIA_SIZE,"%d",PradLadowania);
 8006f26:	681b      	ldr	r3, [r3, #0]
 8006f28:	4a06      	ldr	r2, [pc, #24]	; (8006f44 <_ZN11Screen1View17ButtonDownClickedEv+0x30>)
 8006f2a:	210a      	movs	r1, #10
 8006f2c:	f500 706c 	add.w	r0, r0, #944	; 0x3b0
 8006f30:	f00e fb2c 	bl	801558c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	txtPradLadowania.invalidate();
 8006f34:	f504 7017 	add.w	r0, r4, #604	; 0x25c
}
 8006f38:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	txtPradLadowania.invalidate();
 8006f3c:	f00c baff 	b.w	801353e <_ZNK8touchgfx8Drawable10invalidateEv>
 8006f40:	20000014 	.word	0x20000014
 8006f44:	08024a60 	.word	0x08024a60

08006f48 <_ZN11Screen1View11setupScreenEv>:
    Screen1ViewBase::setupScreen();
 8006f48:	f7fb bd37 	b.w	80029ba <_ZN15Screen1ViewBase11setupScreenEv>

08006f4c <_ZN11Screen1View21DisplayBatteryVoltageEv>:
void Screen1View::DisplayBatteryVoltage(){
 8006f4c:	b513      	push	{r0, r1, r4, lr}
	Unicode::snprintfFloat(txtNapiecieBateriiBuffer,TXTNAPIECIEBATERII_SIZE,"%.3f",ladowarka.BatteryVoltage);
 8006f4e:	4b09      	ldr	r3, [pc, #36]	; (8006f74 <_ZN11Screen1View21DisplayBatteryVoltageEv+0x28>)
     *
     * @see snprintf, snprintfFloats
     */
    static UnicodeChar* snprintfFloat(UnicodeChar* dst, uint16_t dstSize, const char* format, const float value)
    {
        return snprintfFloats(dst, dstSize, format, &value);
 8006f50:	4a09      	ldr	r2, [pc, #36]	; (8006f78 <_ZN11Screen1View21DisplayBatteryVoltageEv+0x2c>)
 8006f52:	681b      	ldr	r3, [r3, #0]
 8006f54:	9301      	str	r3, [sp, #4]
void Screen1View::DisplayBatteryVoltage(){
 8006f56:	4604      	mov	r4, r0
 8006f58:	ab01      	add	r3, sp, #4
 8006f5a:	210a      	movs	r1, #10
 8006f5c:	f500 7071 	add.w	r0, r0, #964	; 0x3c4
 8006f60:	f00e fcd0 	bl	8015904 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	txtNapiecieBaterii.invalidate();
 8006f64:	f504 7059 	add.w	r0, r4, #868	; 0x364
}
 8006f68:	b002      	add	sp, #8
 8006f6a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	txtNapiecieBaterii.invalidate();
 8006f6e:	f00c bae6 	b.w	801353e <_ZNK8touchgfx8Drawable10invalidateEv>
 8006f72:	bf00      	nop
 8006f74:	200030e4 	.word	0x200030e4
 8006f78:	08024a63 	.word	0x08024a63

08006f7c <_ZN11Screen1ViewD0Ev>:
 8006f7c:	b510      	push	{r4, lr}
 8006f7e:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
 8006f82:	4604      	mov	r4, r0
 8006f84:	f01a fe60 	bl	8021c48 <_ZdlPvj>
 8006f88:	4620      	mov	r0, r4
 8006f8a:	bd10      	pop	{r4, pc}

08006f8c <_ZN11Screen1ViewC1Ev>:
Screen1View::Screen1View()
 8006f8c:	b510      	push	{r4, lr}
 8006f8e:	4604      	mov	r4, r0
 8006f90:	f7fb ff80 	bl	8002e94 <_ZN15Screen1ViewBaseC1Ev>
 8006f94:	4b07      	ldr	r3, [pc, #28]	; (8006fb4 <_ZN11Screen1ViewC1Ev+0x28>)
 8006f96:	6023      	str	r3, [r4, #0]
Unicode::snprintf(txtPradLadowaniaBuffer,TXTPRADLADOWANIA_SIZE,"%d",PradLadowania);
 8006f98:	4b07      	ldr	r3, [pc, #28]	; (8006fb8 <_ZN11Screen1ViewC1Ev+0x2c>)
 8006f9a:	4a08      	ldr	r2, [pc, #32]	; (8006fbc <_ZN11Screen1ViewC1Ev+0x30>)
 8006f9c:	681b      	ldr	r3, [r3, #0]
 8006f9e:	210a      	movs	r1, #10
 8006fa0:	f504 706c 	add.w	r0, r4, #944	; 0x3b0
 8006fa4:	f00e faf2 	bl	801558c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	txtPradLadowania.invalidate();
 8006fa8:	f504 7017 	add.w	r0, r4, #604	; 0x25c
 8006fac:	f00c fac7 	bl	801353e <_ZNK8touchgfx8Drawable10invalidateEv>
}
 8006fb0:	4620      	mov	r0, r4
 8006fb2:	bd10      	pop	{r4, pc}
 8006fb4:	08024a70 	.word	0x08024a70
 8006fb8:	20000014 	.word	0x20000014
 8006fbc:	08024a60 	.word	0x08024a60

08006fc0 <_ZN13ModelListener20UpdateBatteryVoltageEv>:
    virtual void UpdateBatteryVoltage () {};
 8006fc0:	4770      	bx	lr

08006fc2 <_ZN20ScreenGraphPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~ScreenGraphPresenter() {};
 8006fc2:	4770      	bx	lr

08006fc4 <_ZThn4_N20ScreenGraphPresenterD1Ev>:
 8006fc4:	3804      	subs	r0, #4
 8006fc6:	4770      	bx	lr

08006fc8 <_ZN20ScreenGraphPresenter10deactivateEv>:
}

void ScreenGraphPresenter::activate()
{

}
 8006fc8:	4770      	bx	lr

08006fca <_ZN20ScreenGraphPresenter9DrawPointEv>:
{

}
void ScreenGraphPresenter::DrawPoint()
{
	view.DrawPoint2();
 8006fca:	68c0      	ldr	r0, [r0, #12]
 8006fcc:	6803      	ldr	r3, [r0, #0]
 8006fce:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006fd0:	4718      	bx	r3

08006fd2 <_ZThn4_N20ScreenGraphPresenter9DrawPointEv>:
    virtual void DrawPoint();
 8006fd2:	f1a0 0004 	sub.w	r0, r0, #4
 8006fd6:	f7ff bff8 	b.w	8006fca <_ZN20ScreenGraphPresenter9DrawPointEv>

08006fda <_ZN20ScreenGraphPresenter20DisplayLastAndMaxVltEv>:
}
void ScreenGraphPresenter::DisplayLastAndMaxVlt()
{
	view.DisplayLastAndMaxVlt2();
 8006fda:	68c0      	ldr	r0, [r0, #12]
 8006fdc:	6803      	ldr	r3, [r0, #0]
 8006fde:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8006fe0:	4718      	bx	r3

08006fe2 <_ZThn4_N20ScreenGraphPresenter20DisplayLastAndMaxVltEv>:
    virtual void DisplayLastAndMaxVlt();
 8006fe2:	f1a0 0004 	sub.w	r0, r0, #4
 8006fe6:	f7ff bff8 	b.w	8006fda <_ZN20ScreenGraphPresenter20DisplayLastAndMaxVltEv>

08006fea <_ZN20ScreenGraphPresenter18DisplayRunningTimeEv>:
}
void ScreenGraphPresenter::DisplayRunningTime()
{
	view.DisplayRunningTime2();
 8006fea:	68c0      	ldr	r0, [r0, #12]
 8006fec:	6803      	ldr	r3, [r0, #0]
 8006fee:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006ff0:	4718      	bx	r3

08006ff2 <_ZThn4_N20ScreenGraphPresenter18DisplayRunningTimeEv>:
    virtual void DisplayRunningTime();
 8006ff2:	f1a0 0004 	sub.w	r0, r0, #4
 8006ff6:	f7ff bff8 	b.w	8006fea <_ZN20ScreenGraphPresenter18DisplayRunningTimeEv>

08006ffa <_ZN20ScreenGraphPresenterD0Ev>:
    virtual ~ScreenGraphPresenter() {};
 8006ffa:	b510      	push	{r4, lr}
 8006ffc:	2110      	movs	r1, #16
 8006ffe:	4604      	mov	r4, r0
 8007000:	f01a fe22 	bl	8021c48 <_ZdlPvj>
 8007004:	4620      	mov	r0, r4
 8007006:	bd10      	pop	{r4, pc}

08007008 <_ZThn4_N20ScreenGraphPresenterD0Ev>:
 8007008:	f1a0 0004 	sub.w	r0, r0, #4
 800700c:	e7f5      	b.n	8006ffa <_ZN20ScreenGraphPresenterD0Ev>
	...

08007010 <_ZN20ScreenGraphPresenterC1ER15ScreenGraphView>:
ScreenGraphPresenter::ScreenGraphPresenter(ScreenGraphView& v)
 8007010:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 8007012:	2200      	movs	r2, #0
 8007014:	6082      	str	r2, [r0, #8]
    : view(v)
 8007016:	4a04      	ldr	r2, [pc, #16]	; (8007028 <_ZN20ScreenGraphPresenterC1ER15ScreenGraphView+0x18>)
 8007018:	60c1      	str	r1, [r0, #12]
 800701a:	f102 0408 	add.w	r4, r2, #8
 800701e:	322c      	adds	r2, #44	; 0x2c
 8007020:	6004      	str	r4, [r0, #0]
 8007022:	6042      	str	r2, [r0, #4]
}
 8007024:	bd10      	pop	{r4, pc}
 8007026:	bf00      	nop
 8007028:	08024aac 	.word	0x08024aac

0800702c <_ZN15ScreenGraphViewD1Ev>:

class ScreenGraphView : public ScreenGraphViewBase
{
public:
    ScreenGraphView();
    virtual ~ScreenGraphView() {}
 800702c:	4770      	bx	lr

0800702e <_ZN15ScreenGraphView14tearDownScreenEv>:
}

void ScreenGraphView::tearDownScreen()
{
    ScreenGraphViewBase::tearDownScreen();
}
 800702e:	4770      	bx	lr

08007030 <_ZN15ScreenGraphView10DrawPoint2Ev>:

void ScreenGraphView::DrawPoint2(){
 8007030:	4603      	mov	r3, r0
        const float fs = f * (float)scale;
 8007032:	f203 4354 	addw	r3, r3, #1108	; 0x454
#ifndef SIMULATOR
	dynamicGraph1.addDataPoint(ladowarka.BatteryVoltage);
 8007036:	4a17      	ldr	r2, [pc, #92]	; (8007094 <_ZN15ScreenGraphView10DrawPoint2Ev+0x64>)
 8007038:	edd3 7a00 	vldr	s15, [r3]
 800703c:	ed92 7a00 	vldr	s14, [r2]
 8007040:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007044:	f500 6084 	add.w	r0, r0, #1056	; 0x420
 8007048:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800704c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007050:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007054:	db09      	blt.n	800706a <_ZN15ScreenGraphView10DrawPoint2Ev+0x3a>
            return (int)(fs + 0.5f);
 8007056:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800705a:	ee77 7a87 	vadd.f32	s15, s15, s14
 800705e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007062:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8007066:	f007 b881 	b.w	800e16c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 800706a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800706e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8007072:	ee17 3a10 	vmov	r3, s14
 8007076:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800707a:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800707e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8007082:	1e59      	subs	r1, r3, #1
 8007084:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007088:	ee17 3a90 	vmov	r3, s15
 800708c:	440b      	add	r3, r1
 800708e:	4619      	mov	r1, r3
 8007090:	e7e9      	b.n	8007066 <_ZN15ScreenGraphView10DrawPoint2Ev+0x36>
 8007092:	bf00      	nop
 8007094:	200030e4 	.word	0x200030e4

08007098 <_ZN15ScreenGraphView19DisplayRunningTime2Ev>:
}

void ScreenGraphView::DisplayRunningTime2(){
#ifndef SIMULATOR
	int sec, h, m, s;
	sec=ladowarka.CzsasLadowaniaWSec;
 8007098:	4b10      	ldr	r3, [pc, #64]	; (80070dc <_ZN15ScreenGraphView19DisplayRunningTime2Ev+0x44>)
void ScreenGraphView::DisplayRunningTime2(){
 800709a:	b513      	push	{r0, r1, r4, lr}
	sec=ladowarka.CzsasLadowaniaWSec;
 800709c:	f8d3 2950 	ldr.w	r2, [r3, #2384]	; 0x950
	h = (sec/3600);
	m = (sec -(3600*h))/60;
 80070a0:	490f      	ldr	r1, [pc, #60]	; (80070e0 <_ZN15ScreenGraphView19DisplayRunningTime2Ev+0x48>)
void ScreenGraphView::DisplayRunningTime2(){
 80070a2:	4604      	mov	r4, r0
	h = (sec/3600);
 80070a4:	f44f 6361 	mov.w	r3, #3600	; 0xe10
	s = (sec -(3600*h)-(m*60));
 80070a8:	f06f 003b 	mvn.w	r0, #59	; 0x3b
	h = (sec/3600);
 80070ac:	fb92 f3f3 	sdiv	r3, r2, r3
	m = (sec -(3600*h))/60;
 80070b0:	fb01 2203 	mla	r2, r1, r3, r2
 80070b4:	213c      	movs	r1, #60	; 0x3c
 80070b6:	fb92 f1f1 	sdiv	r1, r2, r1
	s = (sec -(3600*h)-(m*60));
 80070ba:	fb00 2201 	mla	r2, r0, r1, r2

	Unicode::snprintf(textChargingTmeBuffer,TEXTCHARGINGTME_SIZE,"%02d:%02d:%02d\n",h,m,s);
 80070be:	e9cd 1200 	strd	r1, r2, [sp]
 80070c2:	f604 1074 	addw	r0, r4, #2420	; 0x974
 80070c6:	4a07      	ldr	r2, [pc, #28]	; (80070e4 <_ZN15ScreenGraphView19DisplayRunningTime2Ev+0x4c>)
 80070c8:	210a      	movs	r1, #10
 80070ca:	f00e fa5f 	bl	801558c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textChargingTme.invalidate();
 80070ce:	f604 1008 	addw	r0, r4, #2312	; 0x908
#endif
}
 80070d2:	b002      	add	sp, #8
 80070d4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	textChargingTme.invalidate();
 80070d8:	f00c ba31 	b.w	801353e <_ZNK8touchgfx8Drawable10invalidateEv>
 80070dc:	200060e4 	.word	0x200060e4
 80070e0:	fffff1f0 	.word	0xfffff1f0
 80070e4:	08024af0 	.word	0x08024af0

080070e8 <_ZN15ScreenGraphViewD0Ev>:
 80070e8:	b510      	push	{r4, lr}
 80070ea:	f641 4158 	movw	r1, #7256	; 0x1c58
 80070ee:	4604      	mov	r4, r0
 80070f0:	f01a fdaa 	bl	8021c48 <_ZdlPvj>
 80070f4:	4620      	mov	r0, r4
 80070f6:	bd10      	pop	{r4, pc}

080070f8 <_ZN15ScreenGraphView11setupScreenEv>:
{
 80070f8:	b510      	push	{r4, lr}
 80070fa:	4604      	mov	r4, r0
    ScreenGraphViewBase::setupScreen();
 80070fc:	f7fc fcc4 	bl	8003a88 <_ZN19ScreenGraphViewBase11setupScreenEv>
        const float fs = f * (float)scale;
 8007100:	f8d4 37d4 	ldr.w	r3, [r4, #2004]	; 0x7d4
 8007104:	ed9f 6a48 	vldr	s12, [pc, #288]	; 8007228 <_ZN15ScreenGraphView11setupScreenEv+0x130>
 8007108:	ee07 3a90 	vmov	s15, r3
 800710c:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8007110:	ee27 7a06 	vmul.f32	s14, s14, s12
        if (fs >= 0)
 8007114:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8007118:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800711c:	db48      	blt.n	80071b0 <_ZN15ScreenGraphView11setupScreenEv+0xb8>
            return (int)(fs + 0.5f);
 800711e:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8007122:	ee37 7a27 	vadd.f32	s14, s14, s15
 8007126:	eefd 7ac7 	vcvt.s32.f32	s15, s14
 800712a:	ee17 3a90 	vmov	r3, s15
 * @return The absolute (non-negative) value of d.
 */
template <typename T>
T abs(T d)
{
    return (d < 0) ? -d : d;
 800712e:	2b00      	cmp	r3, #0
 8007130:	bfb8      	it	lt
 8007132:	425b      	neglt	r3, r3
        labelInterval = abs(interval);
 8007134:	f8c4 37d8 	str.w	r3, [r4, #2008]	; 0x7d8
        const float fs = f * (float)scale;
 8007138:	f8d4 3794 	ldr.w	r3, [r4, #1940]	; 0x794
 800713c:	ee07 3a90 	vmov	s15, r3
 8007140:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007144:	ee67 7a86 	vmul.f32	s15, s15, s12
        if (fs >= 0)
 8007148:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800714c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007150:	db42      	blt.n	80071d8 <_ZN15ScreenGraphView11setupScreenEv+0xe0>
            return (int)(fs + 0.5f);
 8007152:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007156:	ee77 7a87 	vadd.f32	s15, s15, s14
 800715a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800715e:	ee17 3a90 	vmov	r3, s15
 8007162:	2b00      	cmp	r3, #0
 8007164:	bfb8      	it	lt
 8007166:	425b      	neglt	r3, r3
        gridInterval = abs(interval);
 8007168:	f8c4 3798 	str.w	r3, [r4, #1944]	; 0x798
        const float fs = f * (float)scale;
 800716c:	f8d4 3714 	ldr.w	r3, [r4, #1812]	; 0x714
 8007170:	ed9f 7a2e 	vldr	s14, [pc, #184]	; 800722c <_ZN15ScreenGraphView11setupScreenEv+0x134>
 8007174:	ee07 3a90 	vmov	s15, r3
 8007178:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800717c:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007180:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007184:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007188:	db3a      	blt.n	8007200 <_ZN15ScreenGraphView11setupScreenEv+0x108>
            return (int)(fs + 0.5f);
 800718a:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800718e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007192:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007196:	ee17 3a90 	vmov	r3, s15
 800719a:	2b00      	cmp	r3, #0
 800719c:	bfb8      	it	lt
 800719e:	425b      	neglt	r3, r3
 80071a0:	f8c4 3718 	str.w	r3, [r4, #1816]	; 0x718
     dynamicGraph1.invalidate();
 80071a4:	f504 6084 	add.w	r0, r4, #1056	; 0x420
}
 80071a8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
     dynamicGraph1.invalidate();
 80071ac:	f00c b9c7 	b.w	801353e <_ZNK8touchgfx8Drawable10invalidateEv>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 80071b0:	eefd 6ac7 	vcvt.s32.f32	s13, s14
 80071b4:	eef8 7ae6 	vcvt.f32.s32	s15, s13
 80071b8:	ee16 3a90 	vmov	r3, s13
 80071bc:	ee37 7a67 	vsub.f32	s14, s14, s15
 80071c0:	eef7 7a08 	vmov.f32	s15, #120	; 0x3fc00000  1.5
 80071c4:	ee37 7a27 	vadd.f32	s14, s14, s15
 80071c8:	3b01      	subs	r3, #1
 80071ca:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 80071ce:	ee17 2a10 	vmov	r2, s14
 80071d2:	441a      	add	r2, r3
 80071d4:	4613      	mov	r3, r2
 80071d6:	e7aa      	b.n	800712e <_ZN15ScreenGraphView11setupScreenEv+0x36>
 80071d8:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80071dc:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80071e0:	ee17 3a10 	vmov	r3, s14
 80071e4:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80071e8:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80071ec:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80071f0:	3b01      	subs	r3, #1
 80071f2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80071f6:	ee17 2a90 	vmov	r2, s15
 80071fa:	441a      	add	r2, r3
 80071fc:	4613      	mov	r3, r2
 80071fe:	e7b0      	b.n	8007162 <_ZN15ScreenGraphView11setupScreenEv+0x6a>
 8007200:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8007204:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8007208:	ee17 3a10 	vmov	r3, s14
 800720c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8007210:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8007214:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8007218:	3b01      	subs	r3, #1
 800721a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800721e:	ee17 2a90 	vmov	r2, s15
 8007222:	441a      	add	r2, r3
 8007224:	4613      	mov	r3, r2
 8007226:	e7b8      	b.n	800719a <_ZN15ScreenGraphView11setupScreenEv+0xa2>
 8007228:	3dcccccd 	.word	0x3dcccccd
 800722c:	3d4ccccd 	.word	0x3d4ccccd

08007230 <_ZN15ScreenGraphView21DisplayLastAndMaxVlt2Ev>:
void ScreenGraphView::DisplayLastAndMaxVlt2(){
 8007230:	b537      	push	{r0, r1, r2, r4, r5, lr}
	Unicode::snprintfFloat(txtLastValueBuffer,TXTLASTVALUE_SIZE,"%.3f",ladowarka.BatteryVoltage);
 8007232:	4d0f      	ldr	r5, [pc, #60]	; (8007270 <_ZN15ScreenGraphView21DisplayLastAndMaxVlt2Ev+0x40>)
 8007234:	4a0f      	ldr	r2, [pc, #60]	; (8007274 <_ZN15ScreenGraphView21DisplayLastAndMaxVlt2Ev+0x44>)
 8007236:	682b      	ldr	r3, [r5, #0]
 8007238:	9301      	str	r3, [sp, #4]
void ScreenGraphView::DisplayLastAndMaxVlt2(){
 800723a:	4604      	mov	r4, r0
 800723c:	ab01      	add	r3, sp, #4
 800723e:	2108      	movs	r1, #8
 8007240:	f600 1054 	addw	r0, r0, #2388	; 0x954
 8007244:	f00e fb5e 	bl	8015904 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	Unicode::snprintfFloat(txtMaxValueBuffer,TXTMAXVALUE_SIZE,"%.3f",ladowarka.MaxBatteryVoltage);
 8007248:	686b      	ldr	r3, [r5, #4]
 800724a:	4a0a      	ldr	r2, [pc, #40]	; (8007274 <_ZN15ScreenGraphView21DisplayLastAndMaxVlt2Ev+0x44>)
 800724c:	9301      	str	r3, [sp, #4]
 800724e:	2108      	movs	r1, #8
 8007250:	ab01      	add	r3, sp, #4
 8007252:	f604 1064 	addw	r0, r4, #2404	; 0x964
 8007256:	f00e fb55 	bl	8015904 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	txtMaxValue.invalidate();
 800725a:	f604 00bc 	addw	r0, r4, #2236	; 0x8bc
 800725e:	f00c f96e 	bl	801353e <_ZNK8touchgfx8Drawable10invalidateEv>
	txtLastValue.invalidate();
 8007262:	f504 6007 	add.w	r0, r4, #2160	; 0x870
}
 8007266:	b003      	add	sp, #12
 8007268:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
	txtLastValue.invalidate();
 800726c:	f00c b967 	b.w	801353e <_ZNK8touchgfx8Drawable10invalidateEv>
 8007270:	200030e4 	.word	0x200030e4
 8007274:	08024a63 	.word	0x08024a63

08007278 <_ZN15ScreenGraphViewC1Ev>:
ScreenGraphView::ScreenGraphView()
 8007278:	b510      	push	{r4, lr}
 800727a:	4604      	mov	r4, r0
 800727c:	f7fc fd82 	bl	8003d84 <_ZN19ScreenGraphViewBaseC1Ev>
 8007280:	4b01      	ldr	r3, [pc, #4]	; (8007288 <_ZN15ScreenGraphViewC1Ev+0x10>)
 8007282:	6023      	str	r3, [r4, #0]
}
 8007284:	4620      	mov	r0, r4
 8007286:	bd10      	pop	{r4, pc}
 8007288:	08024b08 	.word	0x08024b08

0800728c <ili9341_GetLcdPixelWidth>:
  */
uint16_t ili9341_GetLcdPixelWidth(void)
{
  /* Return LCD PIXEL WIDTH */
  return ILI9341_LCD_PIXEL_WIDTH;
}
 800728c:	20f0      	movs	r0, #240	; 0xf0
 800728e:	4770      	bx	lr

08007290 <ili9341_GetLcdPixelHeight>:
  */
uint16_t ili9341_GetLcdPixelHeight(void)
{
  /* Return LCD PIXEL HEIGHT */
  return ILI9341_LCD_PIXEL_HEIGHT;
}
 8007290:	f44f 70a0 	mov.w	r0, #320	; 0x140
 8007294:	4770      	bx	lr

08007296 <ili9341_DisplayOn>:
  LCD_IO_WriteReg(LCD_Reg);
 8007296:	2029      	movs	r0, #41	; 0x29
 8007298:	f7fa bb2c 	b.w	80018f4 <LCD_IO_WriteReg>

0800729c <ili9341_DisplayOff>:
 800729c:	2028      	movs	r0, #40	; 0x28
 800729e:	f7fa bb29 	b.w	80018f4 <LCD_IO_WriteReg>

080072a2 <ili9341_Init>:
{
 80072a2:	b508      	push	{r3, lr}
  LCD_IO_Init();
 80072a4:	f7fa fafa 	bl	800189c <LCD_IO_Init>
  LCD_IO_WriteReg(LCD_Reg);
 80072a8:	20ca      	movs	r0, #202	; 0xca
 80072aa:	f7fa fb23 	bl	80018f4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80072ae:	20c3      	movs	r0, #195	; 0xc3
 80072b0:	f7fa fb04 	bl	80018bc <LCD_IO_WriteData>
 80072b4:	2008      	movs	r0, #8
 80072b6:	f7fa fb01 	bl	80018bc <LCD_IO_WriteData>
 80072ba:	2050      	movs	r0, #80	; 0x50
 80072bc:	f7fa fafe 	bl	80018bc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80072c0:	20cf      	movs	r0, #207	; 0xcf
 80072c2:	f7fa fb17 	bl	80018f4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80072c6:	2000      	movs	r0, #0
 80072c8:	f7fa faf8 	bl	80018bc <LCD_IO_WriteData>
 80072cc:	20c1      	movs	r0, #193	; 0xc1
 80072ce:	f7fa faf5 	bl	80018bc <LCD_IO_WriteData>
 80072d2:	2030      	movs	r0, #48	; 0x30
 80072d4:	f7fa faf2 	bl	80018bc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80072d8:	20ed      	movs	r0, #237	; 0xed
 80072da:	f7fa fb0b 	bl	80018f4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80072de:	2064      	movs	r0, #100	; 0x64
 80072e0:	f7fa faec 	bl	80018bc <LCD_IO_WriteData>
 80072e4:	2003      	movs	r0, #3
 80072e6:	f7fa fae9 	bl	80018bc <LCD_IO_WriteData>
 80072ea:	2012      	movs	r0, #18
 80072ec:	f7fa fae6 	bl	80018bc <LCD_IO_WriteData>
 80072f0:	2081      	movs	r0, #129	; 0x81
 80072f2:	f7fa fae3 	bl	80018bc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80072f6:	20e8      	movs	r0, #232	; 0xe8
 80072f8:	f7fa fafc 	bl	80018f4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80072fc:	2085      	movs	r0, #133	; 0x85
 80072fe:	f7fa fadd 	bl	80018bc <LCD_IO_WriteData>
 8007302:	2000      	movs	r0, #0
 8007304:	f7fa fada 	bl	80018bc <LCD_IO_WriteData>
 8007308:	2078      	movs	r0, #120	; 0x78
 800730a:	f7fa fad7 	bl	80018bc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800730e:	20cb      	movs	r0, #203	; 0xcb
 8007310:	f7fa faf0 	bl	80018f4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8007314:	2039      	movs	r0, #57	; 0x39
 8007316:	f7fa fad1 	bl	80018bc <LCD_IO_WriteData>
 800731a:	202c      	movs	r0, #44	; 0x2c
 800731c:	f7fa face 	bl	80018bc <LCD_IO_WriteData>
 8007320:	2000      	movs	r0, #0
 8007322:	f7fa facb 	bl	80018bc <LCD_IO_WriteData>
 8007326:	2034      	movs	r0, #52	; 0x34
 8007328:	f7fa fac8 	bl	80018bc <LCD_IO_WriteData>
 800732c:	2002      	movs	r0, #2
 800732e:	f7fa fac5 	bl	80018bc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8007332:	20f7      	movs	r0, #247	; 0xf7
 8007334:	f7fa fade 	bl	80018f4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8007338:	2020      	movs	r0, #32
 800733a:	f7fa fabf 	bl	80018bc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800733e:	20ea      	movs	r0, #234	; 0xea
 8007340:	f7fa fad8 	bl	80018f4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8007344:	2000      	movs	r0, #0
 8007346:	f7fa fab9 	bl	80018bc <LCD_IO_WriteData>
 800734a:	2000      	movs	r0, #0
 800734c:	f7fa fab6 	bl	80018bc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8007350:	20b1      	movs	r0, #177	; 0xb1
 8007352:	f7fa facf 	bl	80018f4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8007356:	2000      	movs	r0, #0
 8007358:	f7fa fab0 	bl	80018bc <LCD_IO_WriteData>
 800735c:	201b      	movs	r0, #27
 800735e:	f7fa faad 	bl	80018bc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8007362:	20b6      	movs	r0, #182	; 0xb6
 8007364:	f7fa fac6 	bl	80018f4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8007368:	200a      	movs	r0, #10
 800736a:	f7fa faa7 	bl	80018bc <LCD_IO_WriteData>
 800736e:	20a2      	movs	r0, #162	; 0xa2
 8007370:	f7fa faa4 	bl	80018bc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8007374:	20c0      	movs	r0, #192	; 0xc0
 8007376:	f7fa fabd 	bl	80018f4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800737a:	2010      	movs	r0, #16
 800737c:	f7fa fa9e 	bl	80018bc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8007380:	20c1      	movs	r0, #193	; 0xc1
 8007382:	f7fa fab7 	bl	80018f4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8007386:	2010      	movs	r0, #16
 8007388:	f7fa fa98 	bl	80018bc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800738c:	20c5      	movs	r0, #197	; 0xc5
 800738e:	f7fa fab1 	bl	80018f4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8007392:	2045      	movs	r0, #69	; 0x45
 8007394:	f7fa fa92 	bl	80018bc <LCD_IO_WriteData>
 8007398:	2015      	movs	r0, #21
 800739a:	f7fa fa8f 	bl	80018bc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800739e:	20c7      	movs	r0, #199	; 0xc7
 80073a0:	f7fa faa8 	bl	80018f4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80073a4:	2090      	movs	r0, #144	; 0x90
 80073a6:	f7fa fa89 	bl	80018bc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80073aa:	2036      	movs	r0, #54	; 0x36
 80073ac:	f7fa faa2 	bl	80018f4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80073b0:	20c8      	movs	r0, #200	; 0xc8
 80073b2:	f7fa fa83 	bl	80018bc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80073b6:	20f2      	movs	r0, #242	; 0xf2
 80073b8:	f7fa fa9c 	bl	80018f4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80073bc:	2000      	movs	r0, #0
 80073be:	f7fa fa7d 	bl	80018bc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80073c2:	20b0      	movs	r0, #176	; 0xb0
 80073c4:	f7fa fa96 	bl	80018f4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80073c8:	20c2      	movs	r0, #194	; 0xc2
 80073ca:	f7fa fa77 	bl	80018bc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80073ce:	20b6      	movs	r0, #182	; 0xb6
 80073d0:	f7fa fa90 	bl	80018f4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80073d4:	200a      	movs	r0, #10
 80073d6:	f7fa fa71 	bl	80018bc <LCD_IO_WriteData>
 80073da:	20a7      	movs	r0, #167	; 0xa7
 80073dc:	f7fa fa6e 	bl	80018bc <LCD_IO_WriteData>
 80073e0:	2027      	movs	r0, #39	; 0x27
 80073e2:	f7fa fa6b 	bl	80018bc <LCD_IO_WriteData>
 80073e6:	2004      	movs	r0, #4
 80073e8:	f7fa fa68 	bl	80018bc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80073ec:	202a      	movs	r0, #42	; 0x2a
 80073ee:	f7fa fa81 	bl	80018f4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80073f2:	2000      	movs	r0, #0
 80073f4:	f7fa fa62 	bl	80018bc <LCD_IO_WriteData>
 80073f8:	2000      	movs	r0, #0
 80073fa:	f7fa fa5f 	bl	80018bc <LCD_IO_WriteData>
 80073fe:	2000      	movs	r0, #0
 8007400:	f7fa fa5c 	bl	80018bc <LCD_IO_WriteData>
 8007404:	20ef      	movs	r0, #239	; 0xef
 8007406:	f7fa fa59 	bl	80018bc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800740a:	202b      	movs	r0, #43	; 0x2b
 800740c:	f7fa fa72 	bl	80018f4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8007410:	2000      	movs	r0, #0
 8007412:	f7fa fa53 	bl	80018bc <LCD_IO_WriteData>
 8007416:	2000      	movs	r0, #0
 8007418:	f7fa fa50 	bl	80018bc <LCD_IO_WriteData>
 800741c:	2001      	movs	r0, #1
 800741e:	f7fa fa4d 	bl	80018bc <LCD_IO_WriteData>
 8007422:	203f      	movs	r0, #63	; 0x3f
 8007424:	f7fa fa4a 	bl	80018bc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8007428:	20f6      	movs	r0, #246	; 0xf6
 800742a:	f7fa fa63 	bl	80018f4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800742e:	2001      	movs	r0, #1
 8007430:	f7fa fa44 	bl	80018bc <LCD_IO_WriteData>
 8007434:	2000      	movs	r0, #0
 8007436:	f7fa fa41 	bl	80018bc <LCD_IO_WriteData>
 800743a:	2006      	movs	r0, #6
 800743c:	f7fa fa3e 	bl	80018bc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8007440:	202c      	movs	r0, #44	; 0x2c
 8007442:	f7fa fa57 	bl	80018f4 <LCD_IO_WriteReg>
  LCD_Delay(200);
 8007446:	20c8      	movs	r0, #200	; 0xc8
 8007448:	f7fa faa2 	bl	8001990 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 800744c:	2026      	movs	r0, #38	; 0x26
 800744e:	f7fa fa51 	bl	80018f4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8007452:	2001      	movs	r0, #1
 8007454:	f7fa fa32 	bl	80018bc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8007458:	20e0      	movs	r0, #224	; 0xe0
 800745a:	f7fa fa4b 	bl	80018f4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800745e:	200f      	movs	r0, #15
 8007460:	f7fa fa2c 	bl	80018bc <LCD_IO_WriteData>
 8007464:	2029      	movs	r0, #41	; 0x29
 8007466:	f7fa fa29 	bl	80018bc <LCD_IO_WriteData>
 800746a:	2024      	movs	r0, #36	; 0x24
 800746c:	f7fa fa26 	bl	80018bc <LCD_IO_WriteData>
 8007470:	200c      	movs	r0, #12
 8007472:	f7fa fa23 	bl	80018bc <LCD_IO_WriteData>
 8007476:	200e      	movs	r0, #14
 8007478:	f7fa fa20 	bl	80018bc <LCD_IO_WriteData>
 800747c:	2009      	movs	r0, #9
 800747e:	f7fa fa1d 	bl	80018bc <LCD_IO_WriteData>
 8007482:	204e      	movs	r0, #78	; 0x4e
 8007484:	f7fa fa1a 	bl	80018bc <LCD_IO_WriteData>
 8007488:	2078      	movs	r0, #120	; 0x78
 800748a:	f7fa fa17 	bl	80018bc <LCD_IO_WriteData>
 800748e:	203c      	movs	r0, #60	; 0x3c
 8007490:	f7fa fa14 	bl	80018bc <LCD_IO_WriteData>
 8007494:	2009      	movs	r0, #9
 8007496:	f7fa fa11 	bl	80018bc <LCD_IO_WriteData>
 800749a:	2013      	movs	r0, #19
 800749c:	f7fa fa0e 	bl	80018bc <LCD_IO_WriteData>
 80074a0:	2005      	movs	r0, #5
 80074a2:	f7fa fa0b 	bl	80018bc <LCD_IO_WriteData>
 80074a6:	2017      	movs	r0, #23
 80074a8:	f7fa fa08 	bl	80018bc <LCD_IO_WriteData>
 80074ac:	2011      	movs	r0, #17
 80074ae:	f7fa fa05 	bl	80018bc <LCD_IO_WriteData>
 80074b2:	2000      	movs	r0, #0
 80074b4:	f7fa fa02 	bl	80018bc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80074b8:	20e1      	movs	r0, #225	; 0xe1
 80074ba:	f7fa fa1b 	bl	80018f4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80074be:	2000      	movs	r0, #0
 80074c0:	f7fa f9fc 	bl	80018bc <LCD_IO_WriteData>
 80074c4:	2016      	movs	r0, #22
 80074c6:	f7fa f9f9 	bl	80018bc <LCD_IO_WriteData>
 80074ca:	201b      	movs	r0, #27
 80074cc:	f7fa f9f6 	bl	80018bc <LCD_IO_WriteData>
 80074d0:	2004      	movs	r0, #4
 80074d2:	f7fa f9f3 	bl	80018bc <LCD_IO_WriteData>
 80074d6:	2011      	movs	r0, #17
 80074d8:	f7fa f9f0 	bl	80018bc <LCD_IO_WriteData>
 80074dc:	2007      	movs	r0, #7
 80074de:	f7fa f9ed 	bl	80018bc <LCD_IO_WriteData>
 80074e2:	2031      	movs	r0, #49	; 0x31
 80074e4:	f7fa f9ea 	bl	80018bc <LCD_IO_WriteData>
 80074e8:	2033      	movs	r0, #51	; 0x33
 80074ea:	f7fa f9e7 	bl	80018bc <LCD_IO_WriteData>
 80074ee:	2042      	movs	r0, #66	; 0x42
 80074f0:	f7fa f9e4 	bl	80018bc <LCD_IO_WriteData>
 80074f4:	2005      	movs	r0, #5
 80074f6:	f7fa f9e1 	bl	80018bc <LCD_IO_WriteData>
 80074fa:	200c      	movs	r0, #12
 80074fc:	f7fa f9de 	bl	80018bc <LCD_IO_WriteData>
 8007500:	200a      	movs	r0, #10
 8007502:	f7fa f9db 	bl	80018bc <LCD_IO_WriteData>
 8007506:	2028      	movs	r0, #40	; 0x28
 8007508:	f7fa f9d8 	bl	80018bc <LCD_IO_WriteData>
 800750c:	202f      	movs	r0, #47	; 0x2f
 800750e:	f7fa f9d5 	bl	80018bc <LCD_IO_WriteData>
 8007512:	200f      	movs	r0, #15
 8007514:	f7fa f9d2 	bl	80018bc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8007518:	2011      	movs	r0, #17
 800751a:	f7fa f9eb 	bl	80018f4 <LCD_IO_WriteReg>
  LCD_Delay(200);
 800751e:	20c8      	movs	r0, #200	; 0xc8
 8007520:	f7fa fa36 	bl	8001990 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8007524:	2029      	movs	r0, #41	; 0x29
 8007526:	f7fa f9e5 	bl	80018f4 <LCD_IO_WriteReg>
}
 800752a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LCD_IO_WriteReg(LCD_Reg);
 800752e:	202c      	movs	r0, #44	; 0x2c
 8007530:	f7fa b9e0 	b.w	80018f4 <LCD_IO_WriteReg>

08007534 <ili9341_ReadID>:
{
 8007534:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8007536:	f7fa f9b1 	bl	800189c <LCD_IO_Init>
  return (LCD_IO_ReadData(RegValue, ReadSize));
 800753a:	2103      	movs	r1, #3
 800753c:	20d3      	movs	r0, #211	; 0xd3
 800753e:	f7fa f9f5 	bl	800192c <LCD_IO_ReadData>
}
 8007542:	b280      	uxth	r0, r0
 8007544:	bd08      	pop	{r3, pc}

08007546 <stmpe811_Reset>:
  * @brief  Reset the stmpe811 by Software.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval None
  */
void stmpe811_Reset(uint16_t DeviceAddr)
{
 8007546:	b510      	push	{r4, lr}
  /* Power Down the stmpe811 */  
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 8007548:	b2c4      	uxtb	r4, r0
 800754a:	2202      	movs	r2, #2
 800754c:	2103      	movs	r1, #3
 800754e:	4620      	mov	r0, r4
 8007550:	f7fa f95a 	bl	8001808 <IOE_Write>

  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(10); 
 8007554:	200a      	movs	r0, #10
 8007556:	f7fa f99f 	bl	8001898 <IOE_Delay>
  
  /* Power On the Codec after the power off => all registers are reinitialized */
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 800755a:	4620      	mov	r0, r4
 800755c:	2200      	movs	r2, #0
 800755e:	2103      	movs	r1, #3
 8007560:	f7fa f952 	bl	8001808 <IOE_Write>
  
  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(2); 
}
 8007564:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 8007568:	2002      	movs	r0, #2
 800756a:	f7fa b995 	b.w	8001898 <IOE_Delay>

0800756e <stmpe811_ReadID>:
  * @brief  Read the stmpe811 IO Expander device ID.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval The Device ID (two bytes).
  */
uint16_t stmpe811_ReadID(uint16_t DeviceAddr)
{
 800756e:	b538      	push	{r3, r4, r5, lr}
 8007570:	4604      	mov	r4, r0
  /* Initialize IO BUS layer */
  IOE_Init(); 
  
  /* Return the device ID value */
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8007572:	b2e4      	uxtb	r4, r4
  IOE_Init(); 
 8007574:	f7fa f946 	bl	8001804 <IOE_Init>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8007578:	2100      	movs	r1, #0
 800757a:	4620      	mov	r0, r4
 800757c:	f7fa f95c 	bl	8001838 <IOE_Read>
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8007580:	2101      	movs	r1, #1
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8007582:	4605      	mov	r5, r0
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8007584:	4620      	mov	r0, r4
 8007586:	f7fa f957 	bl	8001838 <IOE_Read>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 800758a:	ea40 2005 	orr.w	r0, r0, r5, lsl #8
}
 800758e:	b280      	uxth	r0, r0
 8007590:	bd38      	pop	{r3, r4, r5, pc}

08007592 <stmpe811_TS_DetectTouch>:
  * @brief  Return if there is touch detected or not.
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Touch detected state.
  */
uint8_t stmpe811_TS_DetectTouch(uint16_t DeviceAddr)
{
 8007592:	b510      	push	{r4, lr}
  uint8_t state;
  uint8_t ret = 0;
  
  state = ((IOE_Read(DeviceAddr, STMPE811_REG_TSC_CTRL) & (uint8_t)STMPE811_TS_CTRL_STATUS) == (uint8_t)0x80);
 8007594:	b2c4      	uxtb	r4, r0
 8007596:	2140      	movs	r1, #64	; 0x40
 8007598:	4620      	mov	r0, r4
 800759a:	f7fa f94d 	bl	8001838 <IOE_Read>
  
  if(state > 0)
 800759e:	0603      	lsls	r3, r0, #24
 80075a0:	d507      	bpl.n	80075b2 <stmpe811_TS_DetectTouch+0x20>
  {
    if(IOE_Read(DeviceAddr, STMPE811_REG_FIFO_SIZE) > 0)
 80075a2:	214c      	movs	r1, #76	; 0x4c
 80075a4:	4620      	mov	r0, r4
 80075a6:	f7fa f947 	bl	8001838 <IOE_Read>
    {
      ret = 1;
 80075aa:	3800      	subs	r0, #0
 80075ac:	bf18      	it	ne
 80075ae:	2001      	movne	r0, #1
    /* Enable the FIFO again */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
  }
  
  return ret;
}
 80075b0:	bd10      	pop	{r4, pc}
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 80075b2:	2201      	movs	r2, #1
 80075b4:	214b      	movs	r1, #75	; 0x4b
 80075b6:	4620      	mov	r0, r4
 80075b8:	f7fa f926 	bl	8001808 <IOE_Write>
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 80075bc:	4620      	mov	r0, r4
 80075be:	2200      	movs	r2, #0
 80075c0:	214b      	movs	r1, #75	; 0x4b
 80075c2:	f7fa f921 	bl	8001808 <IOE_Write>
  uint8_t ret = 0;
 80075c6:	2000      	movs	r0, #0
 80075c8:	e7f2      	b.n	80075b0 <stmpe811_TS_DetectTouch+0x1e>

080075ca <stmpe811_TS_GetXY>:
  * @param  X: Pointer to X position value
  * @param  Y: Pointer to Y position value   
  * @retval None.
  */
void stmpe811_TS_GetXY(uint16_t DeviceAddr, uint16_t *X, uint16_t *Y)
{
 80075ca:	b573      	push	{r0, r1, r4, r5, r6, lr}
  uint8_t  dataXYZ[4];
  uint32_t uldataXYZ;
  
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 80075cc:	2304      	movs	r3, #4
 80075ce:	b2c4      	uxtb	r4, r0
{
 80075d0:	460e      	mov	r6, r1
 80075d2:	4615      	mov	r5, r2
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 80075d4:	21d7      	movs	r1, #215	; 0xd7
 80075d6:	eb0d 0203 	add.w	r2, sp, r3
 80075da:	4620      	mov	r0, r4
 80075dc:	f7fa f946 	bl	800186c <IOE_ReadMultiple>
  
  /* Calculate positions values */
  uldataXYZ = (dataXYZ[0] << 24)|(dataXYZ[1] << 16)|(dataXYZ[2] << 8)|(dataXYZ[3] << 0);     
 80075e0:	9b01      	ldr	r3, [sp, #4]
 80075e2:	ba1b      	rev	r3, r3
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 80075e4:	0d1a      	lsrs	r2, r3, #20
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 80075e6:	f3c3 230b 	ubfx	r3, r3, #8, #12
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 80075ea:	8032      	strh	r2, [r6, #0]
  
  /* Reset FIFO */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 80075ec:	4620      	mov	r0, r4
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 80075ee:	802b      	strh	r3, [r5, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 80075f0:	2201      	movs	r2, #1
 80075f2:	214b      	movs	r1, #75	; 0x4b
 80075f4:	f7fa f908 	bl	8001808 <IOE_Write>
  /* Enable the FIFO again */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 80075f8:	2200      	movs	r2, #0
 80075fa:	214b      	movs	r1, #75	; 0x4b
 80075fc:	4620      	mov	r0, r4
 80075fe:	f7fa f903 	bl	8001808 <IOE_Write>
}
 8007602:	b002      	add	sp, #8
 8007604:	bd70      	pop	{r4, r5, r6, pc}
	...

08007608 <stmpe811_Init>:
{
 8007608:	b510      	push	{r4, lr}
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
  {
    if(stmpe811[idx] == DeviceAddr)
 800760a:	4b0a      	ldr	r3, [pc, #40]	; (8007634 <stmpe811_Init+0x2c>)
 800760c:	781a      	ldrb	r2, [r3, #0]
 800760e:	4290      	cmp	r0, r2
{
 8007610:	4604      	mov	r4, r0
    if(stmpe811[idx] == DeviceAddr)
 8007612:	d00d      	beq.n	8007630 <stmpe811_Init+0x28>
 8007614:	7859      	ldrb	r1, [r3, #1]
 8007616:	4288      	cmp	r0, r1
 8007618:	d00a      	beq.n	8007630 <stmpe811_Init+0x28>
 800761a:	b10a      	cbz	r2, 8007620 <stmpe811_Init+0x18>
 800761c:	b941      	cbnz	r1, 8007630 <stmpe811_Init+0x28>
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
 800761e:	2201      	movs	r2, #1
      stmpe811[empty] = DeviceAddr;
 8007620:	549c      	strb	r4, [r3, r2]
      IOE_Init(); 
 8007622:	f7fa f8ef 	bl	8001804 <IOE_Init>
      stmpe811_Reset(DeviceAddr);
 8007626:	4620      	mov	r0, r4
}
 8007628:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      stmpe811_Reset(DeviceAddr);
 800762c:	f7ff bf8b 	b.w	8007546 <stmpe811_Reset>
}
 8007630:	bd10      	pop	{r4, pc}
 8007632:	bf00      	nop
 8007634:	20006b2c 	.word	0x20006b2c

08007638 <stmpe811_EnableGlobalIT>:
{
 8007638:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 800763a:	b2c4      	uxtb	r4, r0
 800763c:	2109      	movs	r1, #9
 800763e:	4620      	mov	r0, r4
 8007640:	f7fa f8fa 	bl	8001838 <IOE_Read>
  tmp |= (uint8_t)STMPE811_GIT_EN;
 8007644:	f040 0001 	orr.w	r0, r0, #1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8007648:	b2c2      	uxtb	r2, r0
 800764a:	2109      	movs	r1, #9
 800764c:	4620      	mov	r0, r4
}
 800764e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8007652:	f7fa b8d9 	b.w	8001808 <IOE_Write>

08007656 <stmpe811_DisableGlobalIT>:
{
 8007656:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8007658:	b2c4      	uxtb	r4, r0
 800765a:	2109      	movs	r1, #9
 800765c:	4620      	mov	r0, r4
 800765e:	f7fa f8eb 	bl	8001838 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 8007662:	2109      	movs	r1, #9
 8007664:	f000 02fe 	and.w	r2, r0, #254	; 0xfe
 8007668:	4620      	mov	r0, r4
}
 800766a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 800766e:	f7fa b8cb 	b.w	8001808 <IOE_Write>

08007672 <stmpe811_EnableITSource>:
{
 8007672:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8007674:	b2c4      	uxtb	r4, r0
{
 8007676:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8007678:	4620      	mov	r0, r4
 800767a:	210a      	movs	r1, #10
 800767c:	f7fa f8dc 	bl	8001838 <IOE_Read>
  tmp |= Source; 
 8007680:	4328      	orrs	r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8007682:	b2c2      	uxtb	r2, r0
 8007684:	210a      	movs	r1, #10
 8007686:	4620      	mov	r0, r4
}
 8007688:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 800768c:	f7fa b8bc 	b.w	8001808 <IOE_Write>

08007690 <stmpe811_TS_EnableIT>:
{
 8007690:	b507      	push	{r0, r1, r2, lr}
 8007692:	9001      	str	r0, [sp, #4]
  IOE_ITConfig();
 8007694:	f7fa f8b7 	bl	8001806 <IOE_ITConfig>
  stmpe811_EnableITSource(DeviceAddr, STMPE811_TS_IT); 
 8007698:	9801      	ldr	r0, [sp, #4]
 800769a:	211f      	movs	r1, #31
 800769c:	f7ff ffe9 	bl	8007672 <stmpe811_EnableITSource>
  stmpe811_EnableGlobalIT(DeviceAddr);
 80076a0:	9801      	ldr	r0, [sp, #4]
}
 80076a2:	b003      	add	sp, #12
 80076a4:	f85d eb04 	ldr.w	lr, [sp], #4
  stmpe811_EnableGlobalIT(DeviceAddr);
 80076a8:	f7ff bfc6 	b.w	8007638 <stmpe811_EnableGlobalIT>

080076ac <stmpe811_DisableITSource>:
{
 80076ac:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 80076ae:	b2c4      	uxtb	r4, r0
{
 80076b0:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 80076b2:	4620      	mov	r0, r4
 80076b4:	210a      	movs	r1, #10
 80076b6:	f7fa f8bf 	bl	8001838 <IOE_Read>
  tmp &= ~Source; 
 80076ba:	ea20 0005 	bic.w	r0, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 80076be:	b2c2      	uxtb	r2, r0
 80076c0:	210a      	movs	r1, #10
 80076c2:	4620      	mov	r0, r4
}
 80076c4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 80076c8:	f7fa b89e 	b.w	8001808 <IOE_Write>

080076cc <stmpe811_TS_DisableIT>:
{
 80076cc:	b510      	push	{r4, lr}
 80076ce:	4604      	mov	r4, r0
  stmpe811_DisableGlobalIT(DeviceAddr);
 80076d0:	f7ff ffc1 	bl	8007656 <stmpe811_DisableGlobalIT>
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 80076d4:	4620      	mov	r0, r4
 80076d6:	211f      	movs	r1, #31
}
 80076d8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 80076dc:	f7ff bfe6 	b.w	80076ac <stmpe811_DisableITSource>

080076e0 <stmpe811_ReadGITStatus>:
{
 80076e0:	b510      	push	{r4, lr}
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 80076e2:	b2c0      	uxtb	r0, r0
{
 80076e4:	460c      	mov	r4, r1
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 80076e6:	210b      	movs	r1, #11
 80076e8:	f7fa f8a6 	bl	8001838 <IOE_Read>
}
 80076ec:	4020      	ands	r0, r4
 80076ee:	bd10      	pop	{r4, pc}

080076f0 <stmpe811_TS_ITStatus>:
  return(stmpe811_ReadGITStatus(DeviceAddr, STMPE811_TS_IT));
 80076f0:	211f      	movs	r1, #31
 80076f2:	f7ff bff5 	b.w	80076e0 <stmpe811_ReadGITStatus>

080076f6 <stmpe811_ClearGlobalIT>:
{
 80076f6:	460a      	mov	r2, r1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, Source);
 80076f8:	b2c0      	uxtb	r0, r0
 80076fa:	210b      	movs	r1, #11
 80076fc:	f7fa b884 	b.w	8001808 <IOE_Write>

08007700 <stmpe811_TS_ClearIT>:
  stmpe811_ClearGlobalIT(DeviceAddr, STMPE811_TS_IT);
 8007700:	211f      	movs	r1, #31
 8007702:	f7ff bff8 	b.w	80076f6 <stmpe811_ClearGlobalIT>

08007706 <stmpe811_IO_EnableAF>:
{
 8007706:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8007708:	b2c4      	uxtb	r4, r0
{
 800770a:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 800770c:	4620      	mov	r0, r4
 800770e:	2117      	movs	r1, #23
 8007710:	f7fa f892 	bl	8001838 <IOE_Read>
  tmp &= ~(uint8_t)IO_Pin;   
 8007714:	ea20 0005 	bic.w	r0, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 8007718:	b2c2      	uxtb	r2, r0
 800771a:	2117      	movs	r1, #23
 800771c:	4620      	mov	r0, r4
}
 800771e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 8007722:	f7fa b871 	b.w	8001808 <IOE_Write>

08007726 <stmpe811_TS_Start>:
{
 8007726:	b570      	push	{r4, r5, r6, lr}
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8007728:	b2c4      	uxtb	r4, r0
{
 800772a:	4606      	mov	r6, r0
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 800772c:	2104      	movs	r1, #4
 800772e:	4620      	mov	r0, r4
 8007730:	f7fa f882 	bl	8001838 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8007734:	2104      	movs	r1, #4
 8007736:	f000 02fb 	and.w	r2, r0, #251	; 0xfb
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 800773a:	4605      	mov	r5, r0
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 800773c:	4620      	mov	r0, r4
 800773e:	f7fa f863 	bl	8001808 <IOE_Write>
  stmpe811_IO_EnableAF(DeviceAddr, STMPE811_TOUCH_IO_ALL);
 8007742:	4630      	mov	r0, r6
 8007744:	21f0      	movs	r1, #240	; 0xf0
 8007746:	f7ff ffde 	bl	8007706 <stmpe811_IO_EnableAF>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 800774a:	f005 02f8 	and.w	r2, r5, #248	; 0xf8
 800774e:	4620      	mov	r0, r4
 8007750:	2104      	movs	r1, #4
 8007752:	f7fa f859 	bl	8001808 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL1, 0x49);
 8007756:	2249      	movs	r2, #73	; 0x49
 8007758:	2120      	movs	r1, #32
 800775a:	4620      	mov	r0, r4
 800775c:	f7fa f854 	bl	8001808 <IOE_Write>
  IOE_Delay(2); 
 8007760:	2002      	movs	r0, #2
 8007762:	f7fa f899 	bl	8001898 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL2, 0x01);
 8007766:	4620      	mov	r0, r4
 8007768:	2201      	movs	r2, #1
 800776a:	2121      	movs	r1, #33	; 0x21
 800776c:	f7fa f84c 	bl	8001808 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CFG, 0x9A); 
 8007770:	4620      	mov	r0, r4
 8007772:	229a      	movs	r2, #154	; 0x9a
 8007774:	2141      	movs	r1, #65	; 0x41
 8007776:	f7fa f847 	bl	8001808 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_TH, 0x01);
 800777a:	4620      	mov	r0, r4
 800777c:	2201      	movs	r2, #1
 800777e:	214a      	movs	r1, #74	; 0x4a
 8007780:	f7fa f842 	bl	8001808 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8007784:	4620      	mov	r0, r4
 8007786:	2201      	movs	r2, #1
 8007788:	214b      	movs	r1, #75	; 0x4b
 800778a:	f7fa f83d 	bl	8001808 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 800778e:	4620      	mov	r0, r4
 8007790:	2200      	movs	r2, #0
 8007792:	214b      	movs	r1, #75	; 0x4b
 8007794:	f7fa f838 	bl	8001808 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_FRACT_XYZ, 0x01);
 8007798:	4620      	mov	r0, r4
 800779a:	2201      	movs	r2, #1
 800779c:	2156      	movs	r1, #86	; 0x56
 800779e:	f7fa f833 	bl	8001808 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_I_DRIVE, 0x01);
 80077a2:	4620      	mov	r0, r4
 80077a4:	2201      	movs	r2, #1
 80077a6:	2158      	movs	r1, #88	; 0x58
 80077a8:	f7fa f82e 	bl	8001808 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CTRL, 0x01);
 80077ac:	4620      	mov	r0, r4
 80077ae:	2201      	movs	r2, #1
 80077b0:	2140      	movs	r1, #64	; 0x40
 80077b2:	f7fa f829 	bl	8001808 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, 0xFF);
 80077b6:	4620      	mov	r0, r4
 80077b8:	22ff      	movs	r2, #255	; 0xff
 80077ba:	210b      	movs	r1, #11
 80077bc:	f7fa f824 	bl	8001808 <IOE_Write>
}
 80077c0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  IOE_Delay(2); 
 80077c4:	2002      	movs	r0, #2
 80077c6:	f7fa b867 	b.w	8001898 <IOE_Delay>
	...

080077cc <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 80077cc:	4b05      	ldr	r3, [pc, #20]	; (80077e4 <SystemInit+0x18>)
 80077ce:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
 80077d2:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 80077d6:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 80077da:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 80077de:	609a      	str	r2, [r3, #8]
#endif
}
 80077e0:	4770      	bx	lr
 80077e2:	bf00      	nop
 80077e4:	e000ed00 	.word	0xe000ed00

080077e8 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 80077e8:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 80077ea:	4b0b      	ldr	r3, [pc, #44]	; (8007818 <HAL_Init+0x30>)
 80077ec:	681a      	ldr	r2, [r3, #0]
 80077ee:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80077f2:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 80077f4:	681a      	ldr	r2, [r3, #0]
 80077f6:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 80077fa:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 80077fc:	681a      	ldr	r2, [r3, #0]
 80077fe:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8007802:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8007804:	2003      	movs	r0, #3
 8007806:	f000 fa37 	bl	8007c78 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 800780a:	2000      	movs	r0, #0
 800780c:	f7fa fb7e 	bl	8001f0c <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8007810:	f7fa f8d8 	bl	80019c4 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 8007814:	2000      	movs	r0, #0
 8007816:	bd08      	pop	{r3, pc}
 8007818:	40023c00 	.word	0x40023c00

0800781c <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 800781c:	4a03      	ldr	r2, [pc, #12]	; (800782c <HAL_IncTick+0x10>)
 800781e:	4b04      	ldr	r3, [pc, #16]	; (8007830 <HAL_IncTick+0x14>)
 8007820:	6811      	ldr	r1, [r2, #0]
 8007822:	781b      	ldrb	r3, [r3, #0]
 8007824:	440b      	add	r3, r1
 8007826:	6013      	str	r3, [r2, #0]
}
 8007828:	4770      	bx	lr
 800782a:	bf00      	nop
 800782c:	20006b30 	.word	0x20006b30
 8007830:	2000007c 	.word	0x2000007c

08007834 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8007834:	4b01      	ldr	r3, [pc, #4]	; (800783c <HAL_GetTick+0x8>)
 8007836:	6818      	ldr	r0, [r3, #0]
}
 8007838:	4770      	bx	lr
 800783a:	bf00      	nop
 800783c:	20006b30 	.word	0x20006b30

08007840 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8007840:	b538      	push	{r3, r4, r5, lr}
 8007842:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8007844:	f7ff fff6 	bl	8007834 <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8007848:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 800784a:	bf1c      	itt	ne
 800784c:	4b05      	ldrne	r3, [pc, #20]	; (8007864 <HAL_Delay+0x24>)
 800784e:	781b      	ldrbne	r3, [r3, #0]
  uint32_t tickstart = HAL_GetTick();
 8007850:	4605      	mov	r5, r0
    wait += (uint32_t)(uwTickFreq);
 8007852:	bf18      	it	ne
 8007854:	18e4      	addne	r4, r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 8007856:	f7ff ffed 	bl	8007834 <HAL_GetTick>
 800785a:	1b43      	subs	r3, r0, r5
 800785c:	42a3      	cmp	r3, r4
 800785e:	d3fa      	bcc.n	8007856 <HAL_Delay+0x16>
  {
  }
}
 8007860:	bd38      	pop	{r3, r4, r5, pc}
 8007862:	bf00      	nop
 8007864:	2000007c 	.word	0x2000007c

08007868 <HAL_ADC_Init>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.  
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_Init(ADC_HandleTypeDef* hadc)
{
 8007868:	b538      	push	{r3, r4, r5, lr}
  HAL_StatusTypeDef tmp_hal_status = HAL_OK;
  
  /* Check ADC handle */
  if(hadc == NULL)
 800786a:	4604      	mov	r4, r0
 800786c:	2800      	cmp	r0, #0
 800786e:	f000 809b 	beq.w	80079a8 <HAL_ADC_Init+0x140>
  if(hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
  {
    assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
  }
  
  if(hadc->State == HAL_ADC_STATE_RESET)
 8007872:	6c05      	ldr	r5, [r0, #64]	; 0x40
 8007874:	b925      	cbnz	r5, 8007880 <HAL_ADC_Init+0x18>

    /* Init the low level hardware */
    hadc->MspInitCallback(hadc);
#else
    /* Init the low level hardware */
    HAL_ADC_MspInit(hadc);
 8007876:	f7fa f8c5 	bl	8001a04 <HAL_ADC_MspInit>
#endif /* USE_HAL_ADC_REGISTER_CALLBACKS */

    /* Initialize ADC error code */
    ADC_CLEAR_ERRORCODE(hadc);
 800787a:	6465      	str	r5, [r4, #68]	; 0x44
    
    /* Allocate lock resource and initialize it */
    hadc->Lock = HAL_UNLOCKED;
 800787c:	f884 503c 	strb.w	r5, [r4, #60]	; 0x3c
  }
  
  /* Configuration of ADC parameters if previous preliminary actions are      */ 
  /* correctly completed.                                                     */
  if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
 8007880:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8007882:	06db      	lsls	r3, r3, #27
 8007884:	f100 808e 	bmi.w	80079a4 <HAL_ADC_Init+0x13c>
  {
    /* Set ADC state */
    ADC_STATE_CLR_SET(hadc->State,
 8007888:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800788a:	f423 5388 	bic.w	r3, r3, #4352	; 0x1100
 800788e:	f023 0302 	bic.w	r3, r3, #2
 8007892:	f043 0302 	orr.w	r3, r3, #2
 8007896:	6423      	str	r3, [r4, #64]	; 0x40
  /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
  /* control register)                                                    */
  tmpADC_Common = ADC_COMMON_REGISTER(hadc);
  
  /* Set the ADC clock prescaler */
  tmpADC_Common->CCR &= ~(ADC_CCR_ADCPRE);
 8007898:	4b44      	ldr	r3, [pc, #272]	; (80079ac <HAL_ADC_Init+0x144>)
 800789a:	685a      	ldr	r2, [r3, #4]
 800789c:	f422 3240 	bic.w	r2, r2, #196608	; 0x30000
 80078a0:	605a      	str	r2, [r3, #4]
  tmpADC_Common->CCR |=  hadc->Init.ClockPrescaler;
 80078a2:	685a      	ldr	r2, [r3, #4]
 80078a4:	6861      	ldr	r1, [r4, #4]
 80078a6:	430a      	orrs	r2, r1
 80078a8:	605a      	str	r2, [r3, #4]
  
  /* Set ADC scan mode */
  hadc->Instance->CR1 &= ~(ADC_CR1_SCAN);
 80078aa:	6823      	ldr	r3, [r4, #0]
  hadc->Instance->CR1 |=  ADC_CR1_SCANCONV(hadc->Init.ScanConvMode);
 80078ac:	6921      	ldr	r1, [r4, #16]
  hadc->Instance->CR1 &= ~(ADC_CR1_SCAN);
 80078ae:	685a      	ldr	r2, [r3, #4]
 80078b0:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 80078b4:	605a      	str	r2, [r3, #4]
  hadc->Instance->CR1 |=  ADC_CR1_SCANCONV(hadc->Init.ScanConvMode);
 80078b6:	685a      	ldr	r2, [r3, #4]
 80078b8:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 80078bc:	605a      	str	r2, [r3, #4]
  
  /* Set ADC resolution */
  hadc->Instance->CR1 &= ~(ADC_CR1_RES);
 80078be:	685a      	ldr	r2, [r3, #4]
  hadc->Instance->CR1 |=  hadc->Init.Resolution;
 80078c0:	68a1      	ldr	r1, [r4, #8]
  hadc->Instance->CR1 &= ~(ADC_CR1_RES);
 80078c2:	f022 7240 	bic.w	r2, r2, #50331648	; 0x3000000
 80078c6:	605a      	str	r2, [r3, #4]
  hadc->Instance->CR1 |=  hadc->Init.Resolution;
 80078c8:	685a      	ldr	r2, [r3, #4]
 80078ca:	430a      	orrs	r2, r1
 80078cc:	605a      	str	r2, [r3, #4]
  
  /* Set ADC data alignment */
  hadc->Instance->CR2 &= ~(ADC_CR2_ALIGN);
 80078ce:	689a      	ldr	r2, [r3, #8]
  hadc->Instance->CR2 |= hadc->Init.DataAlign;
 80078d0:	68e1      	ldr	r1, [r4, #12]
  hadc->Instance->CR2 &= ~(ADC_CR2_ALIGN);
 80078d2:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 80078d6:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= hadc->Init.DataAlign;
 80078d8:	689a      	ldr	r2, [r3, #8]
 80078da:	430a      	orrs	r2, r1
 80078dc:	609a      	str	r2, [r3, #8]
  /* Enable external trigger if trigger selection is different of software  */
  /* start.                                                                 */
  /* Note: This configuration keeps the hardware feature of parameter       */
  /*       ExternalTrigConvEdge "trigger edge none" equivalent to           */
  /*       software start.                                                  */
  if(hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 80078de:	4934      	ldr	r1, [pc, #208]	; (80079b0 <HAL_ADC_Init+0x148>)
 80078e0:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 80078e2:	428a      	cmp	r2, r1
 80078e4:	d052      	beq.n	800798c <HAL_ADC_Init+0x124>
  {
    /* Select external trigger to start conversion */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 80078e6:	6899      	ldr	r1, [r3, #8]
 80078e8:	f021 6170 	bic.w	r1, r1, #251658240	; 0xf000000
 80078ec:	6099      	str	r1, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConv;
 80078ee:	6899      	ldr	r1, [r3, #8]
 80078f0:	430a      	orrs	r2, r1
 80078f2:	609a      	str	r2, [r3, #8]
    
    /* Select external trigger polarity */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 80078f4:	689a      	ldr	r2, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConvEdge;
 80078f6:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 80078f8:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 80078fc:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConvEdge;
 80078fe:	689a      	ldr	r2, [r3, #8]
 8007900:	430a      	orrs	r2, r1
  }
  else
  {
    /* Reset the external trigger */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 8007902:	609a      	str	r2, [r3, #8]
  }
  
  /* Enable or disable ADC continuous conversion mode */
  hadc->Instance->CR2 &= ~(ADC_CR2_CONT);
 8007904:	689a      	ldr	r2, [r3, #8]
 8007906:	f022 0202 	bic.w	r2, r2, #2
 800790a:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode);
 800790c:	689a      	ldr	r2, [r3, #8]
 800790e:	7e21      	ldrb	r1, [r4, #24]
 8007910:	ea42 0241 	orr.w	r2, r2, r1, lsl #1
 8007914:	609a      	str	r2, [r3, #8]
  
  if(hadc->Init.DiscontinuousConvMode != DISABLE)
 8007916:	f894 2020 	ldrb.w	r2, [r4, #32]
 800791a:	2a00      	cmp	r2, #0
 800791c:	d03e      	beq.n	800799c <HAL_ADC_Init+0x134>
  {
    assert_param(IS_ADC_REGULAR_DISC_NUMBER(hadc->Init.NbrOfDiscConversion));
  
    /* Enable the selected ADC regular discontinuous mode */
    hadc->Instance->CR1 |= (uint32_t)ADC_CR1_DISCEN;
 800791e:	685a      	ldr	r2, [r3, #4]
    
    /* Set the number of channels to be converted in discontinuous mode */
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCNUM);
    hadc->Instance->CR1 |=  ADC_CR1_DISCONTINUOUS(hadc->Init.NbrOfDiscConversion);
 8007920:	6a61      	ldr	r1, [r4, #36]	; 0x24
    hadc->Instance->CR1 |= (uint32_t)ADC_CR1_DISCEN;
 8007922:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8007926:	605a      	str	r2, [r3, #4]
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCNUM);
 8007928:	685a      	ldr	r2, [r3, #4]
 800792a:	f422 4260 	bic.w	r2, r2, #57344	; 0xe000
 800792e:	605a      	str	r2, [r3, #4]
    hadc->Instance->CR1 |=  ADC_CR1_DISCONTINUOUS(hadc->Init.NbrOfDiscConversion);
 8007930:	685a      	ldr	r2, [r3, #4]
 8007932:	3901      	subs	r1, #1
 8007934:	ea42 3241 	orr.w	r2, r2, r1, lsl #13
  }
  else
  {
    /* Disable the selected ADC regular discontinuous mode */
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCEN);
 8007938:	605a      	str	r2, [r3, #4]
  }
  
  /* Set ADC number of conversion */
  hadc->Instance->SQR1 &= ~(ADC_SQR1_L);
 800793a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
  hadc->Instance->SQR1 |=  ADC_SQR1(hadc->Init.NbrOfConversion);
 800793c:	69e1      	ldr	r1, [r4, #28]
  hadc->Instance->SQR1 &= ~(ADC_SQR1_L);
 800793e:	f422 0270 	bic.w	r2, r2, #15728640	; 0xf00000
 8007942:	62da      	str	r2, [r3, #44]	; 0x2c
  hadc->Instance->SQR1 |=  ADC_SQR1(hadc->Init.NbrOfConversion);
 8007944:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8007946:	3901      	subs	r1, #1
 8007948:	ea42 5201 	orr.w	r2, r2, r1, lsl #20
 800794c:	62da      	str	r2, [r3, #44]	; 0x2c
  
  /* Enable or disable ADC DMA continuous request */
  hadc->Instance->CR2 &= ~(ADC_CR2_DDS);
 800794e:	689a      	ldr	r2, [r3, #8]
 8007950:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8007954:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_DMAContReq((uint32_t)hadc->Init.DMAContinuousRequests);
 8007956:	689a      	ldr	r2, [r3, #8]
 8007958:	f894 1030 	ldrb.w	r1, [r4, #48]	; 0x30
 800795c:	ea42 2241 	orr.w	r2, r2, r1, lsl #9
 8007960:	609a      	str	r2, [r3, #8]
  
  /* Enable or disable ADC end of conversion selection */
  hadc->Instance->CR2 &= ~(ADC_CR2_EOCS);
 8007962:	689a      	ldr	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 8007964:	6961      	ldr	r1, [r4, #20]
  hadc->Instance->CR2 &= ~(ADC_CR2_EOCS);
 8007966:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800796a:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 800796c:	689a      	ldr	r2, [r3, #8]
    ADC_CLEAR_ERRORCODE(hadc);
 800796e:	2000      	movs	r0, #0
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 8007970:	ea42 2281 	orr.w	r2, r2, r1, lsl #10
 8007974:	609a      	str	r2, [r3, #8]
    ADC_CLEAR_ERRORCODE(hadc);
 8007976:	6460      	str	r0, [r4, #68]	; 0x44
    ADC_STATE_CLR_SET(hadc->State,
 8007978:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800797a:	f023 0303 	bic.w	r3, r3, #3
 800797e:	f043 0301 	orr.w	r3, r3, #1
 8007982:	6423      	str	r3, [r4, #64]	; 0x40
  __HAL_UNLOCK(hadc);
 8007984:	2300      	movs	r3, #0
 8007986:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
}
 800798a:	bd38      	pop	{r3, r4, r5, pc}
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 800798c:	689a      	ldr	r2, [r3, #8]
 800798e:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 8007992:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 8007994:	689a      	ldr	r2, [r3, #8]
 8007996:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 800799a:	e7b2      	b.n	8007902 <HAL_ADC_Init+0x9a>
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCEN);
 800799c:	685a      	ldr	r2, [r3, #4]
 800799e:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 80079a2:	e7c9      	b.n	8007938 <HAL_ADC_Init+0xd0>
    tmp_hal_status = HAL_ERROR;
 80079a4:	2001      	movs	r0, #1
 80079a6:	e7ed      	b.n	8007984 <HAL_ADC_Init+0x11c>
    return HAL_ERROR;
 80079a8:	2001      	movs	r0, #1
 80079aa:	e7ee      	b.n	800798a <HAL_ADC_Init+0x122>
 80079ac:	40012300 	.word	0x40012300
 80079b0:	0f000001 	.word	0x0f000001

080079b4 <HAL_ADC_Start>:
{
 80079b4:	b082      	sub	sp, #8
  __IO uint32_t counter = 0U;
 80079b6:	2300      	movs	r3, #0
 80079b8:	9301      	str	r3, [sp, #4]
  __HAL_LOCK(hadc);
 80079ba:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 80079be:	2b01      	cmp	r3, #1
 80079c0:	d060      	beq.n	8007a84 <HAL_ADC_Start+0xd0>
 80079c2:	2301      	movs	r3, #1
 80079c4:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  if((hadc->Instance->CR2 & ADC_CR2_ADON) != ADC_CR2_ADON)
 80079c8:	6803      	ldr	r3, [r0, #0]
 80079ca:	689a      	ldr	r2, [r3, #8]
 80079cc:	07d2      	lsls	r2, r2, #31
 80079ce:	d505      	bpl.n	80079dc <HAL_ADC_Start+0x28>
  if(HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_ADON))
 80079d0:	689a      	ldr	r2, [r3, #8]
 80079d2:	07d1      	lsls	r1, r2, #31
 80079d4:	d414      	bmi.n	8007a00 <HAL_ADC_Start+0x4c>
  return HAL_OK;
 80079d6:	2000      	movs	r0, #0
}
 80079d8:	b002      	add	sp, #8
 80079da:	4770      	bx	lr
    __HAL_ADC_ENABLE(hadc);
 80079dc:	689a      	ldr	r2, [r3, #8]
    counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 80079de:	492a      	ldr	r1, [pc, #168]	; (8007a88 <HAL_ADC_Start+0xd4>)
    __HAL_ADC_ENABLE(hadc);
 80079e0:	f042 0201 	orr.w	r2, r2, #1
 80079e4:	609a      	str	r2, [r3, #8]
    counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 80079e6:	4a29      	ldr	r2, [pc, #164]	; (8007a8c <HAL_ADC_Start+0xd8>)
 80079e8:	6812      	ldr	r2, [r2, #0]
 80079ea:	fbb2 f2f1 	udiv	r2, r2, r1
 80079ee:	eb02 0242 	add.w	r2, r2, r2, lsl #1
      counter--;
 80079f2:	9201      	str	r2, [sp, #4]
    while(counter != 0U)
 80079f4:	9a01      	ldr	r2, [sp, #4]
 80079f6:	2a00      	cmp	r2, #0
 80079f8:	d0ea      	beq.n	80079d0 <HAL_ADC_Start+0x1c>
      counter--;
 80079fa:	9a01      	ldr	r2, [sp, #4]
 80079fc:	3a01      	subs	r2, #1
 80079fe:	e7f8      	b.n	80079f2 <HAL_ADC_Start+0x3e>
    ADC_STATE_CLR_SET(hadc->State,
 8007a00:	6c02      	ldr	r2, [r0, #64]	; 0x40
 8007a02:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 8007a06:	f022 0201 	bic.w	r2, r2, #1
 8007a0a:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8007a0e:	6402      	str	r2, [r0, #64]	; 0x40
    if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
 8007a10:	685a      	ldr	r2, [r3, #4]
 8007a12:	0552      	lsls	r2, r2, #21
      ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);  
 8007a14:	bf41      	itttt	mi
 8007a16:	6c02      	ldrmi	r2, [r0, #64]	; 0x40
 8007a18:	f422 5240 	bicmi.w	r2, r2, #12288	; 0x3000
 8007a1c:	f442 5280 	orrmi.w	r2, r2, #4096	; 0x1000
 8007a20:	6402      	strmi	r2, [r0, #64]	; 0x40
    if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 8007a22:	6c02      	ldr	r2, [r0, #64]	; 0x40
 8007a24:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
      CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));         
 8007a28:	bf1c      	itt	ne
 8007a2a:	6c42      	ldrne	r2, [r0, #68]	; 0x44
 8007a2c:	f022 0206 	bicne.w	r2, r2, #6
      ADC_CLEAR_ERRORCODE(hadc);
 8007a30:	6442      	str	r2, [r0, #68]	; 0x44
    __HAL_UNLOCK(hadc);
 8007a32:	2200      	movs	r2, #0
 8007a34:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC | ADC_FLAG_OVR);
 8007a38:	f06f 0222 	mvn.w	r2, #34	; 0x22
 8007a3c:	601a      	str	r2, [r3, #0]
    if(HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_MULTI))
 8007a3e:	4a14      	ldr	r2, [pc, #80]	; (8007a90 <HAL_ADC_Start+0xdc>)
 8007a40:	6851      	ldr	r1, [r2, #4]
 8007a42:	f011 0f1f 	tst.w	r1, #31
 8007a46:	4913      	ldr	r1, [pc, #76]	; (8007a94 <HAL_ADC_Start+0xe0>)
 8007a48:	d119      	bne.n	8007a7e <HAL_ADC_Start+0xca>
      if((hadc->Instance == ADC1) || ((hadc->Instance == ADC2) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_0)) \
 8007a4a:	428b      	cmp	r3, r1
 8007a4c:	d007      	beq.n	8007a5e <HAL_ADC_Start+0xaa>
 8007a4e:	f501 7180 	add.w	r1, r1, #256	; 0x100
 8007a52:	428b      	cmp	r3, r1
 8007a54:	d10c      	bne.n	8007a70 <HAL_ADC_Start+0xbc>
 8007a56:	6852      	ldr	r2, [r2, #4]
 8007a58:	f012 0f1f 	tst.w	r2, #31
                                  || ((hadc->Instance == ADC3) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_4)))
 8007a5c:	d1bb      	bne.n	80079d6 <HAL_ADC_Start+0x22>
      if((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 8007a5e:	6898      	ldr	r0, [r3, #8]
 8007a60:	f010 5040 	ands.w	r0, r0, #805306368	; 0x30000000
 8007a64:	d1b7      	bne.n	80079d6 <HAL_ADC_Start+0x22>
          hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 8007a66:	689a      	ldr	r2, [r3, #8]
 8007a68:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 8007a6c:	609a      	str	r2, [r3, #8]
 8007a6e:	e7b3      	b.n	80079d8 <HAL_ADC_Start+0x24>
                                  || ((hadc->Instance == ADC3) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_4)))
 8007a70:	4909      	ldr	r1, [pc, #36]	; (8007a98 <HAL_ADC_Start+0xe4>)
 8007a72:	428b      	cmp	r3, r1
 8007a74:	d1af      	bne.n	80079d6 <HAL_ADC_Start+0x22>
 8007a76:	6852      	ldr	r2, [r2, #4]
 8007a78:	f012 0f10 	tst.w	r2, #16
 8007a7c:	e7ee      	b.n	8007a5c <HAL_ADC_Start+0xa8>
      if((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 8007a7e:	428b      	cmp	r3, r1
 8007a80:	d1a9      	bne.n	80079d6 <HAL_ADC_Start+0x22>
 8007a82:	e7ec      	b.n	8007a5e <HAL_ADC_Start+0xaa>
  __HAL_LOCK(hadc);
 8007a84:	2002      	movs	r0, #2
 8007a86:	e7a7      	b.n	80079d8 <HAL_ADC_Start+0x24>
 8007a88:	000f4240 	.word	0x000f4240
 8007a8c:	20000078 	.word	0x20000078
 8007a90:	40012300 	.word	0x40012300
 8007a94:	40012000 	.word	0x40012000
 8007a98:	40012200 	.word	0x40012200

08007a9c <HAL_ADC_PollForConversion>:
  if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_EOCS) &&
 8007a9c:	6803      	ldr	r3, [r0, #0]
 8007a9e:	689a      	ldr	r2, [r3, #8]
 8007aa0:	0552      	lsls	r2, r2, #21
{
 8007aa2:	b570      	push	{r4, r5, r6, lr}
 8007aa4:	4604      	mov	r4, r0
 8007aa6:	460d      	mov	r5, r1
  if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_EOCS) &&
 8007aa8:	d50b      	bpl.n	8007ac2 <HAL_ADC_PollForConversion+0x26>
      HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_DMA)    )
 8007aaa:	689b      	ldr	r3, [r3, #8]
  if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_EOCS) &&
 8007aac:	05de      	lsls	r6, r3, #23
 8007aae:	d508      	bpl.n	8007ac2 <HAL_ADC_PollForConversion+0x26>
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 8007ab0:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8007ab2:	f043 0320 	orr.w	r3, r3, #32
 8007ab6:	6403      	str	r3, [r0, #64]	; 0x40
    __HAL_UNLOCK(hadc);
 8007ab8:	2300      	movs	r3, #0
 8007aba:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
    return HAL_ERROR;
 8007abe:	2001      	movs	r0, #1
}
 8007ac0:	bd70      	pop	{r4, r5, r6, pc}
  tickstart = HAL_GetTick();
 8007ac2:	f7ff feb7 	bl	8007834 <HAL_GetTick>
 8007ac6:	4606      	mov	r6, r0
  while(!(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOC)))
 8007ac8:	6823      	ldr	r3, [r4, #0]
 8007aca:	681a      	ldr	r2, [r3, #0]
 8007acc:	0791      	lsls	r1, r2, #30
 8007ace:	d50c      	bpl.n	8007aea <HAL_ADC_PollForConversion+0x4e>
  __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_STRT | ADC_FLAG_EOC);
 8007ad0:	f06f 0212 	mvn.w	r2, #18
 8007ad4:	601a      	str	r2, [r3, #0]
  SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
 8007ad6:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8007ad8:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8007adc:	6422      	str	r2, [r4, #64]	; 0x40
  if(ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 8007ade:	689a      	ldr	r2, [r3, #8]
 8007ae0:	f012 5f40 	tst.w	r2, #805306368	; 0x30000000
 8007ae4:	d013      	beq.n	8007b0e <HAL_ADC_PollForConversion+0x72>
  return HAL_OK;
 8007ae6:	2000      	movs	r0, #0
 8007ae8:	e7ea      	b.n	8007ac0 <HAL_ADC_PollForConversion+0x24>
    if(Timeout != HAL_MAX_DELAY)
 8007aea:	1c68      	adds	r0, r5, #1
 8007aec:	d0ed      	beq.n	8007aca <HAL_ADC_PollForConversion+0x2e>
      if((Timeout == 0U) || ((HAL_GetTick() - tickstart ) > Timeout))
 8007aee:	b945      	cbnz	r5, 8007b02 <HAL_ADC_PollForConversion+0x66>
        SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 8007af0:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8007af2:	f043 0304 	orr.w	r3, r3, #4
 8007af6:	6423      	str	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hadc);
 8007af8:	2300      	movs	r3, #0
 8007afa:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        return HAL_TIMEOUT;
 8007afe:	2003      	movs	r0, #3
 8007b00:	e7de      	b.n	8007ac0 <HAL_ADC_PollForConversion+0x24>
      if((Timeout == 0U) || ((HAL_GetTick() - tickstart ) > Timeout))
 8007b02:	f7ff fe97 	bl	8007834 <HAL_GetTick>
 8007b06:	1b80      	subs	r0, r0, r6
 8007b08:	42a8      	cmp	r0, r5
 8007b0a:	d9dd      	bls.n	8007ac8 <HAL_ADC_PollForConversion+0x2c>
 8007b0c:	e7f0      	b.n	8007af0 <HAL_ADC_PollForConversion+0x54>
     (hadc->Init.ContinuousConvMode == DISABLE)            &&
 8007b0e:	7e20      	ldrb	r0, [r4, #24]
  if(ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 8007b10:	2800      	cmp	r0, #0
 8007b12:	d1e8      	bne.n	8007ae6 <HAL_ADC_PollForConversion+0x4a>
     (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) ||
 8007b14:	6ada      	ldr	r2, [r3, #44]	; 0x2c
     (hadc->Init.ContinuousConvMode == DISABLE)            &&
 8007b16:	f412 0f70 	tst.w	r2, #15728640	; 0xf00000
 8007b1a:	d002      	beq.n	8007b22 <HAL_ADC_PollForConversion+0x86>
      HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)  )   )
 8007b1c:	689b      	ldr	r3, [r3, #8]
     (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) ||
 8007b1e:	055a      	lsls	r2, r3, #21
 8007b20:	d4e1      	bmi.n	8007ae6 <HAL_ADC_PollForConversion+0x4a>
    CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);   
 8007b22:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8007b24:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8007b28:	6423      	str	r3, [r4, #64]	; 0x40
    if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 8007b2a:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8007b2c:	04db      	lsls	r3, r3, #19
 8007b2e:	d4da      	bmi.n	8007ae6 <HAL_ADC_PollForConversion+0x4a>
      SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 8007b30:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8007b32:	f043 0301 	orr.w	r3, r3, #1
 8007b36:	6423      	str	r3, [r4, #64]	; 0x40
 8007b38:	e7c2      	b.n	8007ac0 <HAL_ADC_PollForConversion+0x24>

08007b3a <HAL_ADC_GetValue>:
  return hadc->Instance->DR;
 8007b3a:	6803      	ldr	r3, [r0, #0]
 8007b3c:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
}
 8007b3e:	4770      	bx	lr

08007b40 <HAL_ADC_ConfigChannel>:
{
 8007b40:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  __IO uint32_t counter = 0U;
 8007b42:	2300      	movs	r3, #0
 8007b44:	9301      	str	r3, [sp, #4]
  __HAL_LOCK(hadc);
 8007b46:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 8007b4a:	2b01      	cmp	r3, #1
 8007b4c:	d069      	beq.n	8007c22 <HAL_ADC_ConfigChannel+0xe2>
 8007b4e:	2301      	movs	r3, #1
 8007b50:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  if (sConfig->Channel > ADC_CHANNEL_9)
 8007b54:	680d      	ldr	r5, [r1, #0]
    hadc->Instance->SMPR1 &= ~ADC_SMPR1(ADC_SMPR1_SMP10, sConfig->Channel);
 8007b56:	6803      	ldr	r3, [r0, #0]
    hadc->Instance->SMPR1 |= ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel);
 8007b58:	688e      	ldr	r6, [r1, #8]
  if (sConfig->Channel > ADC_CHANNEL_9)
 8007b5a:	2d09      	cmp	r5, #9
 8007b5c:	b2ac      	uxth	r4, r5
 8007b5e:	d934      	bls.n	8007bca <HAL_ADC_ConfigChannel+0x8a>
    hadc->Instance->SMPR1 &= ~ADC_SMPR1(ADC_SMPR1_SMP10, sConfig->Channel);
 8007b60:	eb04 0244 	add.w	r2, r4, r4, lsl #1
 8007b64:	68df      	ldr	r7, [r3, #12]
 8007b66:	3a1e      	subs	r2, #30
 8007b68:	f04f 0c07 	mov.w	ip, #7
 8007b6c:	fa0c fc02 	lsl.w	ip, ip, r2
 8007b70:	ea27 070c 	bic.w	r7, r7, ip
 8007b74:	60df      	str	r7, [r3, #12]
    hadc->Instance->SMPR1 |= ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel);
 8007b76:	68df      	ldr	r7, [r3, #12]
 8007b78:	fa06 f202 	lsl.w	r2, r6, r2
 8007b7c:	433a      	orrs	r2, r7
 8007b7e:	60da      	str	r2, [r3, #12]
  if (sConfig->Rank < 7U)
 8007b80:	6849      	ldr	r1, [r1, #4]
 8007b82:	2906      	cmp	r1, #6
    hadc->Instance->SQR3 &= ~ADC_SQR3_RK(ADC_SQR3_SQ1, sConfig->Rank);
 8007b84:	eb01 0281 	add.w	r2, r1, r1, lsl #2
  if (sConfig->Rank < 7U)
 8007b88:	d82f      	bhi.n	8007bea <HAL_ADC_ConfigChannel+0xaa>
    hadc->Instance->SQR3 &= ~ADC_SQR3_RK(ADC_SQR3_SQ1, sConfig->Rank);
 8007b8a:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8007b8c:	3a05      	subs	r2, #5
 8007b8e:	261f      	movs	r6, #31
 8007b90:	4096      	lsls	r6, r2
 8007b92:	ea21 0106 	bic.w	r1, r1, r6
 8007b96:	6359      	str	r1, [r3, #52]	; 0x34
    hadc->Instance->SQR3 |= ADC_SQR3_RK(sConfig->Channel, sConfig->Rank);
 8007b98:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8007b9a:	fa04 f202 	lsl.w	r2, r4, r2
 8007b9e:	430a      	orrs	r2, r1
 8007ba0:	635a      	str	r2, [r3, #52]	; 0x34
  if ((hadc->Instance == ADC1) && (sConfig->Channel == ADC_CHANNEL_VBAT))
 8007ba2:	4a30      	ldr	r2, [pc, #192]	; (8007c64 <HAL_ADC_ConfigChannel+0x124>)
 8007ba4:	4293      	cmp	r3, r2
 8007ba6:	d10a      	bne.n	8007bbe <HAL_ADC_ConfigChannel+0x7e>
 8007ba8:	2d12      	cmp	r5, #18
 8007baa:	d13c      	bne.n	8007c26 <HAL_ADC_ConfigChannel+0xe6>
      tmpADC_Common->CCR &= ~ADC_CCR_TSVREFE;
 8007bac:	4b2e      	ldr	r3, [pc, #184]	; (8007c68 <HAL_ADC_ConfigChannel+0x128>)
 8007bae:	685a      	ldr	r2, [r3, #4]
 8007bb0:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 8007bb4:	605a      	str	r2, [r3, #4]
    tmpADC_Common->CCR |= ADC_CCR_VBATE;
 8007bb6:	685a      	ldr	r2, [r3, #4]
 8007bb8:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 8007bbc:	605a      	str	r2, [r3, #4]
  __HAL_UNLOCK(hadc);
 8007bbe:	2300      	movs	r3, #0
 8007bc0:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  return HAL_OK;
 8007bc4:	4618      	mov	r0, r3
}
 8007bc6:	b003      	add	sp, #12
 8007bc8:	bdf0      	pop	{r4, r5, r6, r7, pc}
    hadc->Instance->SMPR2 &= ~ADC_SMPR2(ADC_SMPR2_SMP0, sConfig->Channel);
 8007bca:	691f      	ldr	r7, [r3, #16]
 8007bcc:	eb05 0245 	add.w	r2, r5, r5, lsl #1
 8007bd0:	f04f 0c07 	mov.w	ip, #7
 8007bd4:	fa0c fc02 	lsl.w	ip, ip, r2
 8007bd8:	ea27 070c 	bic.w	r7, r7, ip
 8007bdc:	611f      	str	r7, [r3, #16]
    hadc->Instance->SMPR2 |= ADC_SMPR2(sConfig->SamplingTime, sConfig->Channel);
 8007bde:	691f      	ldr	r7, [r3, #16]
 8007be0:	fa06 f202 	lsl.w	r2, r6, r2
 8007be4:	433a      	orrs	r2, r7
 8007be6:	611a      	str	r2, [r3, #16]
 8007be8:	e7ca      	b.n	8007b80 <HAL_ADC_ConfigChannel+0x40>
  else if (sConfig->Rank < 13U)
 8007bea:	290c      	cmp	r1, #12
 8007bec:	f04f 011f 	mov.w	r1, #31
 8007bf0:	d80b      	bhi.n	8007c0a <HAL_ADC_ConfigChannel+0xca>
    hadc->Instance->SQR2 &= ~ADC_SQR2_RK(ADC_SQR2_SQ7, sConfig->Rank);
 8007bf2:	6b1e      	ldr	r6, [r3, #48]	; 0x30
 8007bf4:	3a23      	subs	r2, #35	; 0x23
 8007bf6:	4091      	lsls	r1, r2
 8007bf8:	ea26 0101 	bic.w	r1, r6, r1
 8007bfc:	6319      	str	r1, [r3, #48]	; 0x30
    hadc->Instance->SQR2 |= ADC_SQR2_RK(sConfig->Channel, sConfig->Rank);
 8007bfe:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8007c00:	fa04 f202 	lsl.w	r2, r4, r2
 8007c04:	430a      	orrs	r2, r1
 8007c06:	631a      	str	r2, [r3, #48]	; 0x30
 8007c08:	e7cb      	b.n	8007ba2 <HAL_ADC_ConfigChannel+0x62>
    hadc->Instance->SQR1 &= ~ADC_SQR1_RK(ADC_SQR1_SQ13, sConfig->Rank);
 8007c0a:	6ade      	ldr	r6, [r3, #44]	; 0x2c
 8007c0c:	3a41      	subs	r2, #65	; 0x41
 8007c0e:	4091      	lsls	r1, r2
 8007c10:	ea26 0101 	bic.w	r1, r6, r1
 8007c14:	62d9      	str	r1, [r3, #44]	; 0x2c
    hadc->Instance->SQR1 |= ADC_SQR1_RK(sConfig->Channel, sConfig->Rank);
 8007c16:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8007c18:	fa04 f202 	lsl.w	r2, r4, r2
 8007c1c:	430a      	orrs	r2, r1
 8007c1e:	62da      	str	r2, [r3, #44]	; 0x2c
 8007c20:	e7bf      	b.n	8007ba2 <HAL_ADC_ConfigChannel+0x62>
  __HAL_LOCK(hadc);
 8007c22:	2002      	movs	r0, #2
 8007c24:	e7cf      	b.n	8007bc6 <HAL_ADC_ConfigChannel+0x86>
  if ((hadc->Instance == ADC1) && ((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR) || (sConfig->Channel == ADC_CHANNEL_VREFINT)))
 8007c26:	4b11      	ldr	r3, [pc, #68]	; (8007c6c <HAL_ADC_ConfigChannel+0x12c>)
 8007c28:	429d      	cmp	r5, r3
 8007c2a:	d001      	beq.n	8007c30 <HAL_ADC_ConfigChannel+0xf0>
 8007c2c:	2d11      	cmp	r5, #17
 8007c2e:	d1c6      	bne.n	8007bbe <HAL_ADC_ConfigChannel+0x7e>
      tmpADC_Common->CCR &= ~ADC_CCR_VBATE;
 8007c30:	4b0d      	ldr	r3, [pc, #52]	; (8007c68 <HAL_ADC_ConfigChannel+0x128>)
 8007c32:	685a      	ldr	r2, [r3, #4]
 8007c34:	f422 0280 	bic.w	r2, r2, #4194304	; 0x400000
 8007c38:	605a      	str	r2, [r3, #4]
    tmpADC_Common->CCR |= ADC_CCR_TSVREFE;
 8007c3a:	685a      	ldr	r2, [r3, #4]
 8007c3c:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 8007c40:	605a      	str	r2, [r3, #4]
    if((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR))
 8007c42:	4b0a      	ldr	r3, [pc, #40]	; (8007c6c <HAL_ADC_ConfigChannel+0x12c>)
 8007c44:	429d      	cmp	r5, r3
 8007c46:	d1ba      	bne.n	8007bbe <HAL_ADC_ConfigChannel+0x7e>
      counter = (ADC_TEMPSENSOR_DELAY_US * (SystemCoreClock / 1000000U));
 8007c48:	4b09      	ldr	r3, [pc, #36]	; (8007c70 <HAL_ADC_ConfigChannel+0x130>)
 8007c4a:	4a0a      	ldr	r2, [pc, #40]	; (8007c74 <HAL_ADC_ConfigChannel+0x134>)
 8007c4c:	681b      	ldr	r3, [r3, #0]
 8007c4e:	fbb3 f3f2 	udiv	r3, r3, r2
 8007c52:	220a      	movs	r2, #10
 8007c54:	4353      	muls	r3, r2
        counter--;
 8007c56:	9301      	str	r3, [sp, #4]
      while(counter != 0U)
 8007c58:	9b01      	ldr	r3, [sp, #4]
 8007c5a:	2b00      	cmp	r3, #0
 8007c5c:	d0af      	beq.n	8007bbe <HAL_ADC_ConfigChannel+0x7e>
        counter--;
 8007c5e:	9b01      	ldr	r3, [sp, #4]
 8007c60:	3b01      	subs	r3, #1
 8007c62:	e7f8      	b.n	8007c56 <HAL_ADC_ConfigChannel+0x116>
 8007c64:	40012000 	.word	0x40012000
 8007c68:	40012300 	.word	0x40012300
 8007c6c:	10000012 	.word	0x10000012
 8007c70:	20000078 	.word	0x20000078
 8007c74:	000f4240 	.word	0x000f4240

08007c78 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8007c78:	4907      	ldr	r1, [pc, #28]	; (8007c98 <HAL_NVIC_SetPriorityGrouping+0x20>)
 8007c7a:	68ca      	ldr	r2, [r1, #12]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8007c7c:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8007c80:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8007c82:	0412      	lsls	r2, r2, #16
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8007c84:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8007c88:	0c12      	lsrs	r2, r2, #16
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8007c8a:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8007c8c:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8007c90:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 8007c94:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 8007c96:	4770      	bx	lr
 8007c98:	e000ed00 	.word	0xe000ed00

08007c9c <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8007c9c:	4b16      	ldr	r3, [pc, #88]	; (8007cf8 <HAL_NVIC_SetPriority+0x5c>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8007c9e:	b530      	push	{r4, r5, lr}
 8007ca0:	68dc      	ldr	r4, [r3, #12]
 8007ca2:	f3c4 2402 	ubfx	r4, r4, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8007ca6:	f1c4 0507 	rsb	r5, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8007caa:	1d23      	adds	r3, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8007cac:	2d04      	cmp	r5, #4
 8007cae:	bf28      	it	cs
 8007cb0:	2504      	movcs	r5, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8007cb2:	2b06      	cmp	r3, #6

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8007cb4:	f04f 33ff 	mov.w	r3, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8007cb8:	bf8c      	ite	hi
 8007cba:	3c03      	subhi	r4, #3
 8007cbc:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8007cbe:	fa03 f505 	lsl.w	r5, r3, r5
 8007cc2:	ea21 0105 	bic.w	r1, r1, r5
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8007cc6:	40a3      	lsls	r3, r4
 8007cc8:	ea22 0203 	bic.w	r2, r2, r3
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8007ccc:	40a1      	lsls	r1, r4
  if ((int32_t)(IRQn) >= 0)
 8007cce:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8007cd0:	ea41 0302 	orr.w	r3, r1, r2
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8007cd4:	bfac      	ite	ge
 8007cd6:	f100 4060 	addge.w	r0, r0, #3758096384	; 0xe0000000
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8007cda:	4a08      	ldrlt	r2, [pc, #32]	; (8007cfc <HAL_NVIC_SetPriority+0x60>)
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8007cdc:	ea4f 1303 	mov.w	r3, r3, lsl #4
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8007ce0:	bfb8      	it	lt
 8007ce2:	f000 000f 	andlt.w	r0, r0, #15
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8007ce6:	b2db      	uxtb	r3, r3
 8007ce8:	bfaa      	itet	ge
 8007cea:	f500 4061 	addge.w	r0, r0, #57600	; 0xe100
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8007cee:	5413      	strblt	r3, [r2, r0]
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8007cf0:	f880 3300 	strbge.w	r3, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 8007cf4:	bd30      	pop	{r4, r5, pc}
 8007cf6:	bf00      	nop
 8007cf8:	e000ed00 	.word	0xe000ed00
 8007cfc:	e000ed14 	.word	0xe000ed14

08007d00 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8007d00:	2800      	cmp	r0, #0
 8007d02:	db08      	blt.n	8007d16 <HAL_NVIC_EnableIRQ+0x16>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8007d04:	0942      	lsrs	r2, r0, #5
 8007d06:	2301      	movs	r3, #1
 8007d08:	f000 001f 	and.w	r0, r0, #31
 8007d0c:	fa03 f000 	lsl.w	r0, r3, r0
 8007d10:	4b01      	ldr	r3, [pc, #4]	; (8007d18 <HAL_NVIC_EnableIRQ+0x18>)
 8007d12:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 8007d16:	4770      	bx	lr
 8007d18:	e000e100 	.word	0xe000e100

08007d1c <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8007d1c:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8007d1e:	4604      	mov	r4, r0
 8007d20:	b150      	cbz	r0, 8007d38 <HAL_CRC_Init+0x1c>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 8007d22:	7943      	ldrb	r3, [r0, #5]
 8007d24:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8007d28:	b913      	cbnz	r3, 8007d30 <HAL_CRC_Init+0x14>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 8007d2a:	7102      	strb	r2, [r0, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 8007d2c:	f7f9 fe9c 	bl	8001a68 <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 8007d30:	2301      	movs	r3, #1
 8007d32:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 8007d34:	2000      	movs	r0, #0
}
 8007d36:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8007d38:	2001      	movs	r0, #1
 8007d3a:	e7fc      	b.n	8007d36 <HAL_CRC_Init+0x1a>

08007d3c <HAL_DAC_Init>:
  * @param  hdac pointer to a DAC_HandleTypeDef structure that contains
  *         the configuration information for the specified DAC.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DAC_Init(DAC_HandleTypeDef* hdac)
{ 
 8007d3c:	b510      	push	{r4, lr}
  /* Check DAC handle */
  if(hdac == NULL)
 8007d3e:	4604      	mov	r4, r0
 8007d40:	b168      	cbz	r0, 8007d5e <HAL_DAC_Init+0x22>
     return HAL_ERROR;
  }
  /* Check the parameters */
  assert_param(IS_DAC_ALL_INSTANCE(hdac->Instance));
  
  if(hdac->State == HAL_DAC_STATE_RESET)
 8007d42:	7903      	ldrb	r3, [r0, #4]
 8007d44:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8007d48:	b913      	cbnz	r3, 8007d50 <HAL_DAC_Init+0x14>
    {
      hdac->MspInitCallback               = HAL_DAC_MspInit;
    }
#endif /* USE_HAL_DAC_REGISTER_CALLBACKS */
    /* Allocate lock resource and initialize it */
    hdac->Lock = HAL_UNLOCKED;
 8007d4a:	7142      	strb	r2, [r0, #5]
#if (USE_HAL_DAC_REGISTER_CALLBACKS == 1)
    /* Init the low level hardware */
    hdac->MspInitCallback(hdac);
#else
    /* Init the low level hardware */
    HAL_DAC_MspInit(hdac);
 8007d4c:	f7f9 fea4 	bl	8001a98 <HAL_DAC_MspInit>
#endif /* USE_HAL_DAC_REGISTER_CALLBACKS */
  }
  
  /* Initialize the DAC state*/
  hdac->State = HAL_DAC_STATE_BUSY;
 8007d50:	2302      	movs	r3, #2
 8007d52:	7123      	strb	r3, [r4, #4]
  
  /* Set DAC error code to none */
  hdac->ErrorCode = HAL_DAC_ERROR_NONE;
 8007d54:	2000      	movs	r0, #0
  
  /* Initialize the DAC state*/
  hdac->State = HAL_DAC_STATE_READY;
 8007d56:	2301      	movs	r3, #1
  hdac->ErrorCode = HAL_DAC_ERROR_NONE;
 8007d58:	6120      	str	r0, [r4, #16]
  hdac->State = HAL_DAC_STATE_READY;
 8007d5a:	7123      	strb	r3, [r4, #4]
  
  /* Return function status */
  return HAL_OK;
}
 8007d5c:	bd10      	pop	{r4, pc}
     return HAL_ERROR;
 8007d5e:	2001      	movs	r0, #1
 8007d60:	e7fc      	b.n	8007d5c <HAL_DAC_Init+0x20>

08007d62 <HAL_DAC_Start>:
  *            @arg DAC_CHANNEL_1: DAC Channel1 selected
  *            @arg DAC_CHANNEL_2: DAC Channel2 selected
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DAC_Start(DAC_HandleTypeDef* hdac, uint32_t Channel)
{
 8007d62:	b510      	push	{r4, lr}
  
  /* Check the parameters */
  assert_param(IS_DAC_CHANNEL(Channel));
  
  /* Process locked */
  __HAL_LOCK(hdac);
 8007d64:	7943      	ldrb	r3, [r0, #5]
 8007d66:	2b01      	cmp	r3, #1
 8007d68:	f04f 0302 	mov.w	r3, #2
 8007d6c:	d017      	beq.n	8007d9e <HAL_DAC_Start+0x3c>
  
  /* Change DAC state */
  hdac->State = HAL_DAC_STATE_BUSY;
 8007d6e:	7103      	strb	r3, [r0, #4]
  
  /* Enable the Peripheral */
  __HAL_DAC_ENABLE(hdac, Channel);
 8007d70:	6803      	ldr	r3, [r0, #0]
 8007d72:	2201      	movs	r2, #1
 8007d74:	681c      	ldr	r4, [r3, #0]
 8007d76:	408a      	lsls	r2, r1
 8007d78:	4322      	orrs	r2, r4
 8007d7a:	601a      	str	r2, [r3, #0]
  
  if(Channel == DAC_CHANNEL_1)
 8007d7c:	b989      	cbnz	r1, 8007da2 <HAL_DAC_Start+0x40>
  {
    tmp1 = hdac->Instance->CR & DAC_CR_TEN1;
 8007d7e:	6819      	ldr	r1, [r3, #0]
    tmp2 = hdac->Instance->CR & DAC_CR_TSEL1;
 8007d80:	681a      	ldr	r2, [r3, #0]
    /* Check if software trigger enabled */
    if((tmp1 ==  DAC_CR_TEN1) && (tmp2 ==  DAC_CR_TSEL1))
 8007d82:	074c      	lsls	r4, r1, #29
 8007d84:	d507      	bpl.n	8007d96 <HAL_DAC_Start+0x34>
    tmp2 = hdac->Instance->CR & DAC_CR_TSEL1;
 8007d86:	f002 0238 	and.w	r2, r2, #56	; 0x38
    if((tmp1 ==  DAC_CR_TEN1) && (tmp2 ==  DAC_CR_TSEL1))
 8007d8a:	2a38      	cmp	r2, #56	; 0x38
 8007d8c:	d103      	bne.n	8007d96 <HAL_DAC_Start+0x34>
    {
      /* Enable the selected DAC software conversion */
      hdac->Instance->SWTRIGR |= (uint32_t)DAC_SWTRIGR_SWTRIG1;
 8007d8e:	685a      	ldr	r2, [r3, #4]
 8007d90:	f042 0201 	orr.w	r2, r2, #1
    tmp2 = hdac->Instance->CR & DAC_CR_TSEL2;    
    /* Check if software trigger enabled */
    if((tmp1 == DAC_CR_TEN2) && (tmp2 == DAC_CR_TSEL2))
    {
      /* Enable the selected DAC software conversion*/
      hdac->Instance->SWTRIGR |= (uint32_t)DAC_SWTRIGR_SWTRIG2;
 8007d94:	605a      	str	r2, [r3, #4]
    }
  }
  
  /* Change DAC state */
  hdac->State = HAL_DAC_STATE_READY;
 8007d96:	2301      	movs	r3, #1
 8007d98:	7103      	strb	r3, [r0, #4]
  
  /* Process unlocked */
  __HAL_UNLOCK(hdac);
 8007d9a:	2300      	movs	r3, #0
 8007d9c:	7143      	strb	r3, [r0, #5]
  __HAL_LOCK(hdac);
 8007d9e:	4618      	mov	r0, r3
    
  /* Return function status */
  return HAL_OK;
}
 8007da0:	bd10      	pop	{r4, pc}
    tmp1 = hdac->Instance->CR & DAC_CR_TEN2;
 8007da2:	6819      	ldr	r1, [r3, #0]
    tmp2 = hdac->Instance->CR & DAC_CR_TSEL2;    
 8007da4:	681a      	ldr	r2, [r3, #0]
    if((tmp1 == DAC_CR_TEN2) && (tmp2 == DAC_CR_TSEL2))
 8007da6:	0349      	lsls	r1, r1, #13
 8007da8:	d5f5      	bpl.n	8007d96 <HAL_DAC_Start+0x34>
    tmp2 = hdac->Instance->CR & DAC_CR_TSEL2;    
 8007daa:	f402 1260 	and.w	r2, r2, #3670016	; 0x380000
    if((tmp1 == DAC_CR_TEN2) && (tmp2 == DAC_CR_TSEL2))
 8007dae:	f5b2 1f60 	cmp.w	r2, #3670016	; 0x380000
 8007db2:	d1f0      	bne.n	8007d96 <HAL_DAC_Start+0x34>
      hdac->Instance->SWTRIGR |= (uint32_t)DAC_SWTRIGR_SWTRIG2;
 8007db4:	685a      	ldr	r2, [r3, #4]
 8007db6:	f042 0202 	orr.w	r2, r2, #2
 8007dba:	e7eb      	b.n	8007d94 <HAL_DAC_Start+0x32>

08007dbc <HAL_DAC_ConfigChannel>:
  *            @arg DAC_CHANNEL_1: DAC Channel1 selected
  *            @arg DAC_CHANNEL_2: DAC Channel2 selected
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DAC_ConfigChannel(DAC_HandleTypeDef* hdac, DAC_ChannelConfTypeDef* sConfig, uint32_t Channel)
{
 8007dbc:	b530      	push	{r4, r5, lr}
  assert_param(IS_DAC_TRIGGER(sConfig->DAC_Trigger));
  assert_param(IS_DAC_OUTPUT_BUFFER_STATE(sConfig->DAC_OutputBuffer));
  assert_param(IS_DAC_CHANNEL(Channel));
  
  /* Process locked */
  __HAL_LOCK(hdac);
 8007dbe:	7943      	ldrb	r3, [r0, #5]
 8007dc0:	2b01      	cmp	r3, #1
 8007dc2:	f04f 0302 	mov.w	r3, #2
 8007dc6:	d018      	beq.n	8007dfa <HAL_DAC_ConfigChannel+0x3e>
  
  /* Change DAC state */
  hdac->State = HAL_DAC_STATE_BUSY;
  
  /* Get the DAC CR value */
  tmpreg1 = hdac->Instance->CR;
 8007dc8:	6804      	ldr	r4, [r0, #0]
  hdac->State = HAL_DAC_STATE_BUSY;
 8007dca:	7103      	strb	r3, [r0, #4]
  tmpreg1 = hdac->Instance->CR;
 8007dcc:	6823      	ldr	r3, [r4, #0]
  /* Clear BOFFx, TENx, TSELx, WAVEx and MAMPx bits */
  tmpreg1 &= ~(((uint32_t)(DAC_CR_MAMP1 | DAC_CR_WAVE1 | DAC_CR_TSEL1 | DAC_CR_TEN1 | DAC_CR_BOFF1)) << Channel);
 8007dce:	f640 75fe 	movw	r5, #4094	; 0xffe
 8007dd2:	4095      	lsls	r5, r2
 8007dd4:	ea23 0505 	bic.w	r5, r3, r5
  /* Configure for the selected DAC channel: buffer output, trigger */
  /* Set TSELx and TENx bits according to DAC_Trigger value */
  /* Set BOFFx bit according to DAC_OutputBuffer value */   
  tmpreg2 = (sConfig->DAC_Trigger | sConfig->DAC_OutputBuffer);
 8007dd8:	e9d1 3100 	ldrd	r3, r1, [r1]
 8007ddc:	430b      	orrs	r3, r1
  /* Calculate CR register value depending on DAC_Channel */
  tmpreg1 |= tmpreg2 << Channel;
 8007dde:	4093      	lsls	r3, r2
 8007de0:	432b      	orrs	r3, r5
  /* Write to DAC CR */
  hdac->Instance->CR = tmpreg1;
 8007de2:	6023      	str	r3, [r4, #0]
  /* Disable wave generation */
  hdac->Instance->CR &= ~(DAC_CR_WAVE1 << Channel);
 8007de4:	6823      	ldr	r3, [r4, #0]
 8007de6:	21c0      	movs	r1, #192	; 0xc0
 8007de8:	fa01 f202 	lsl.w	r2, r1, r2
 8007dec:	ea23 0202 	bic.w	r2, r3, r2
  
  /* Change DAC state */
  hdac->State = HAL_DAC_STATE_READY;
 8007df0:	2301      	movs	r3, #1
  hdac->Instance->CR &= ~(DAC_CR_WAVE1 << Channel);
 8007df2:	6022      	str	r2, [r4, #0]
  hdac->State = HAL_DAC_STATE_READY;
 8007df4:	7103      	strb	r3, [r0, #4]
  
  /* Process unlocked */
  __HAL_UNLOCK(hdac);
 8007df6:	2300      	movs	r3, #0
 8007df8:	7143      	strb	r3, [r0, #5]
  __HAL_LOCK(hdac);
 8007dfa:	4618      	mov	r0, r3
  
  /* Return function status */
  return HAL_OK;
}
 8007dfc:	bd30      	pop	{r4, r5, pc}

08007dfe <HAL_DAC_SetValue>:
  *            @arg DAC_ALIGN_12B_R: 12bit right data alignment selected
  * @param  Data Data to be loaded in the selected data holding register.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DAC_SetValue(DAC_HandleTypeDef* hdac, uint32_t Channel, uint32_t Alignment, uint32_t Data)
{  
 8007dfe:	b513      	push	{r0, r1, r4, lr}
  /* Check the parameters */
  assert_param(IS_DAC_CHANNEL(Channel));
  assert_param(IS_DAC_ALIGN(Alignment));
  assert_param(IS_DAC_DATA(Data));
  
  tmp = (uint32_t)hdac->Instance; 
 8007e00:	6800      	ldr	r0, [r0, #0]
  __IO uint32_t tmp = 0U;
 8007e02:	2400      	movs	r4, #0
 8007e04:	9401      	str	r4, [sp, #4]
  tmp = (uint32_t)hdac->Instance; 
 8007e06:	9001      	str	r0, [sp, #4]
  if(Channel == DAC_CHANNEL_1)
 8007e08:	b941      	cbnz	r1, 8007e1c <HAL_DAC_SetValue+0x1e>
  {
    tmp += DAC_DHR12R1_ALIGNMENT(Alignment);
 8007e0a:	9901      	ldr	r1, [sp, #4]
 8007e0c:	3108      	adds	r1, #8
  }
  else
  {
    tmp += DAC_DHR12R2_ALIGNMENT(Alignment);
 8007e0e:	440a      	add	r2, r1
 8007e10:	9201      	str	r2, [sp, #4]
  }

  /* Set the DAC channel1 selected data holding register */
  *(__IO uint32_t *) tmp = Data;
 8007e12:	9a01      	ldr	r2, [sp, #4]
  
  /* Return function status */
  return HAL_OK;
}
 8007e14:	2000      	movs	r0, #0
  *(__IO uint32_t *) tmp = Data;
 8007e16:	6013      	str	r3, [r2, #0]
}
 8007e18:	b002      	add	sp, #8
 8007e1a:	bd10      	pop	{r4, pc}
    tmp += DAC_DHR12R2_ALIGNMENT(Alignment);
 8007e1c:	9901      	ldr	r1, [sp, #4]
 8007e1e:	3114      	adds	r1, #20
 8007e20:	e7f5      	b.n	8007e0e <HAL_DAC_SetValue+0x10>

08007e22 <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 8007e22:	b510      	push	{r4, lr}
  /* Check the DMA2D peripheral state */
  if(hdma2d == NULL)
 8007e24:	4604      	mov	r4, r0
 8007e26:	b330      	cbz	r0, 8007e76 <HAL_DMA2D_Init+0x54>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if(hdma2d->State == HAL_DMA2D_STATE_RESET)
 8007e28:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 8007e2c:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8007e30:	b91b      	cbnz	r3, 8007e3a <HAL_DMA2D_Init+0x18>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 8007e32:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 8007e36:	f7f9 fe61 	bl	8001afc <HAL_DMA2D_MspInit>

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8007e3a:	6822      	ldr	r2, [r4, #0]
 8007e3c:	6861      	ldr	r1, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8007e3e:	2302      	movs	r3, #2
 8007e40:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8007e44:	6813      	ldr	r3, [r2, #0]
 8007e46:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8007e4a:	430b      	orrs	r3, r1
 8007e4c:	6013      	str	r3, [r2, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 8007e4e:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8007e50:	68a1      	ldr	r1, [r4, #8]
 8007e52:	f023 0307 	bic.w	r3, r3, #7
 8007e56:	430b      	orrs	r3, r1
 8007e58:	6353      	str	r3, [r2, #52]	; 0x34

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 8007e5a:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8007e5c:	68e1      	ldr	r1, [r4, #12]
 8007e5e:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 8007e62:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8007e66:	430b      	orrs	r3, r1
 8007e68:	6413      	str	r3, [r2, #64]	; 0x40


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8007e6a:	2000      	movs	r0, #0

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8007e6c:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8007e6e:	63e0      	str	r0, [r4, #60]	; 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8007e70:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

  return HAL_OK;
}
 8007e74:	bd10      	pop	{r4, pc}
     return HAL_ERROR;
 8007e76:	2001      	movs	r0, #1
 8007e78:	e7fc      	b.n	8007e74 <HAL_DMA2D_Init+0x52>

08007e7a <HAL_DMA2D_LineEventCallback>:
 8007e7a:	4770      	bx	lr

08007e7c <HAL_DMA2D_CLUTLoadingCpltCallback>:
 8007e7c:	4770      	bx	lr

08007e7e <HAL_DMA2D_IRQHandler>:
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
void HAL_DMA2D_IRQHandler(DMA2D_HandleTypeDef *hdma2d)
{
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8007e7e:	6803      	ldr	r3, [r0, #0]
{
 8007e80:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8007e82:	685e      	ldr	r6, [r3, #4]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 8007e84:	681d      	ldr	r5, [r3, #0]

  /* Transfer Error Interrupt management ***************************************/
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8007e86:	07f2      	lsls	r2, r6, #31
{
 8007e88:	4604      	mov	r4, r0
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8007e8a:	d514      	bpl.n	8007eb6 <HAL_DMA2D_IRQHandler+0x38>
  {
    if ((crflags & DMA2D_IT_TE) != 0U)
 8007e8c:	05e9      	lsls	r1, r5, #23
 8007e8e:	d512      	bpl.n	8007eb6 <HAL_DMA2D_IRQHandler+0x38>
    {
      /* Disable the transfer Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 8007e90:	681a      	ldr	r2, [r3, #0]
 8007e92:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8007e96:	601a      	str	r2, [r3, #0]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 8007e98:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 8007e9a:	f042 0201 	orr.w	r2, r2, #1
 8007e9e:	63c2      	str	r2, [r0, #60]	; 0x3c

      /* Clear the transfer error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 8007ea0:	2201      	movs	r2, #1
 8007ea2:	609a      	str	r2, [r3, #8]

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8007ea4:	2304      	movs	r3, #4
 8007ea6:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8007eaa:	2300      	movs	r3, #0
 8007eac:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38

      if(hdma2d->XferErrorCallback != NULL)
 8007eb0:	6943      	ldr	r3, [r0, #20]
 8007eb2:	b103      	cbz	r3, 8007eb6 <HAL_DMA2D_IRQHandler+0x38>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8007eb4:	4798      	blx	r3
      }
    }
  }
  /* Configuration Error Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 8007eb6:	06b2      	lsls	r2, r6, #26
 8007eb8:	d516      	bpl.n	8007ee8 <HAL_DMA2D_IRQHandler+0x6a>
  {
    if ((crflags & DMA2D_IT_CE) != 0U)
 8007eba:	04ab      	lsls	r3, r5, #18
 8007ebc:	d514      	bpl.n	8007ee8 <HAL_DMA2D_IRQHandler+0x6a>
    {
      /* Disable the Configuration Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 8007ebe:	6823      	ldr	r3, [r4, #0]
 8007ec0:	681a      	ldr	r2, [r3, #0]
 8007ec2:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8007ec6:	601a      	str	r2, [r3, #0]

      /* Clear the Configuration error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 8007ec8:	2220      	movs	r2, #32
 8007eca:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 8007ecc:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8007ece:	f043 0302 	orr.w	r3, r3, #2
 8007ed2:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8007ed4:	2304      	movs	r3, #4
 8007ed6:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8007eda:	2300      	movs	r3, #0
 8007edc:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if(hdma2d->XferErrorCallback != NULL)
 8007ee0:	6963      	ldr	r3, [r4, #20]
 8007ee2:	b10b      	cbz	r3, 8007ee8 <HAL_DMA2D_IRQHandler+0x6a>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8007ee4:	4620      	mov	r0, r4
 8007ee6:	4798      	blx	r3
      }
    }
  }
  /* CLUT access Error Interrupt management ***********************************/
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 8007ee8:	0730      	lsls	r0, r6, #28
 8007eea:	d516      	bpl.n	8007f1a <HAL_DMA2D_IRQHandler+0x9c>
  {
    if ((crflags & DMA2D_IT_CAE) != 0U)
 8007eec:	0529      	lsls	r1, r5, #20
 8007eee:	d514      	bpl.n	8007f1a <HAL_DMA2D_IRQHandler+0x9c>
    {
      /* Disable the CLUT access error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 8007ef0:	6823      	ldr	r3, [r4, #0]
 8007ef2:	681a      	ldr	r2, [r3, #0]
 8007ef4:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8007ef8:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT access error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 8007efa:	2208      	movs	r2, #8
 8007efc:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 8007efe:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8007f00:	f043 0304 	orr.w	r3, r3, #4
 8007f04:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8007f06:	2304      	movs	r3, #4
 8007f08:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8007f0c:	2300      	movs	r3, #0
 8007f0e:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if(hdma2d->XferErrorCallback != NULL)
 8007f12:	6963      	ldr	r3, [r4, #20]
 8007f14:	b10b      	cbz	r3, 8007f1a <HAL_DMA2D_IRQHandler+0x9c>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8007f16:	4620      	mov	r0, r4
 8007f18:	4798      	blx	r3
      }
    }
  }
  /* Transfer watermark Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 8007f1a:	0772      	lsls	r2, r6, #29
 8007f1c:	d50b      	bpl.n	8007f36 <HAL_DMA2D_IRQHandler+0xb8>
  {
    if ((crflags & DMA2D_IT_TW) != 0U)
 8007f1e:	056b      	lsls	r3, r5, #21
 8007f20:	d509      	bpl.n	8007f36 <HAL_DMA2D_IRQHandler+0xb8>
    {
      /* Disable the transfer watermark interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 8007f22:	6823      	ldr	r3, [r4, #0]
 8007f24:	681a      	ldr	r2, [r3, #0]
 8007f26:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8007f2a:	601a      	str	r2, [r3, #0]

      /* Clear the transfer watermark flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 8007f2c:	2204      	movs	r2, #4
 8007f2e:	609a      	str	r2, [r3, #8]

      /* Transfer watermark Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->LineEventCallback(hdma2d);
#else
      HAL_DMA2D_LineEventCallback(hdma2d);
 8007f30:	4620      	mov	r0, r4
 8007f32:	f7ff ffa2 	bl	8007e7a <HAL_DMA2D_LineEventCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */

    }
  }
  /* Transfer Complete Interrupt management ************************************/
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 8007f36:	07b0      	lsls	r0, r6, #30
 8007f38:	d514      	bpl.n	8007f64 <HAL_DMA2D_IRQHandler+0xe6>
  {
    if ((crflags & DMA2D_IT_TC) != 0U)
 8007f3a:	05a9      	lsls	r1, r5, #22
 8007f3c:	d512      	bpl.n	8007f64 <HAL_DMA2D_IRQHandler+0xe6>
    {
      /* Disable the transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 8007f3e:	6823      	ldr	r3, [r4, #0]
 8007f40:	681a      	ldr	r2, [r3, #0]
 8007f42:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8007f46:	601a      	str	r2, [r3, #0]

      /* Clear the transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 8007f48:	2202      	movs	r2, #2
 8007f4a:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8007f4c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8007f4e:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8007f50:	2301      	movs	r3, #1
 8007f52:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8007f56:	2300      	movs	r3, #0
 8007f58:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if(hdma2d->XferCpltCallback != NULL)
 8007f5c:	6923      	ldr	r3, [r4, #16]
 8007f5e:	b10b      	cbz	r3, 8007f64 <HAL_DMA2D_IRQHandler+0xe6>
      {
        /* Transfer complete Callback */
        hdma2d->XferCpltCallback(hdma2d);
 8007f60:	4620      	mov	r0, r4
 8007f62:	4798      	blx	r3
      }
    }
  }
  /* CLUT Transfer Complete Interrupt management ******************************/
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 8007f64:	06f2      	lsls	r2, r6, #27
 8007f66:	d513      	bpl.n	8007f90 <HAL_DMA2D_IRQHandler+0x112>
  {
    if ((crflags & DMA2D_IT_CTC) != 0U)
 8007f68:	04eb      	lsls	r3, r5, #19
 8007f6a:	d511      	bpl.n	8007f90 <HAL_DMA2D_IRQHandler+0x112>
    {
      /* Disable the CLUT transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 8007f6c:	6823      	ldr	r3, [r4, #0]
 8007f6e:	681a      	ldr	r2, [r3, #0]
 8007f70:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8007f74:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 8007f76:	2210      	movs	r2, #16
 8007f78:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8007f7a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8007f7c:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8007f7e:	2301      	movs	r3, #1
 8007f80:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8007f84:	2300      	movs	r3, #0
 8007f86:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      /* CLUT Transfer complete Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->CLUTLoadingCpltCallback(hdma2d);
#else
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 8007f8a:	4620      	mov	r0, r4
 8007f8c:	f7ff ff76 	bl	8007e7c <HAL_DMA2D_CLUTLoadingCpltCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
    }
  }

}
 8007f90:	bd70      	pop	{r4, r5, r6, pc}
	...

08007f94 <HAL_DMA2D_ConfigLayer>:
  *                   This parameter can be one of the following values:
  *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_ConfigLayer(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
{
 8007f94:	b5f0      	push	{r4, r5, r6, r7, lr}
      assert_param(IS_DMA2D_ALPHA_MODE(hdma2d->LayerCfg[LayerIdx].AlphaMode));
    }
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
 8007f96:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 8007f9a:	2b01      	cmp	r3, #1
 8007f9c:	f04f 0302 	mov.w	r3, #2
 8007fa0:	d02b      	beq.n	8007ffa <HAL_DMA2D_ConfigLayer+0x66>
 8007fa2:	2201      	movs	r2, #1

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8007fa4:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
  __HAL_LOCK(hdma2d);
 8007fa8:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8007fac:	eb00 1301 	add.w	r3, r0, r1, lsl #4
 8007fb0:	e9d3 4207 	ldrd	r4, r2, [r3, #28]
 8007fb4:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 8007fb6:	4f18      	ldr	r7, [pc, #96]	; (8008018 <HAL_DMA2D_ConfigLayer+0x84>)
 8007fb8:	ea44 4202 	orr.w	r2, r4, r2, lsl #16
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8007fbc:	3c09      	subs	r4, #9
 8007fbe:	2c01      	cmp	r4, #1
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 8007fc0:	bf9c      	itt	ls
 8007fc2:	f005 437f 	andls.w	r3, r5, #4278190080	; 0xff000000
 8007fc6:	431a      	orrls	r2, r3
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8007fc8:	ea4f 1601 	mov.w	r6, r1, lsl #4

  /* Configure the background DMA2D layer */
  if(LayerIdx == DMA2D_BACKGROUND_LAYER)
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8007fcc:	6803      	ldr	r3, [r0, #0]
    regValue |=  (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 8007fce:	bf88      	it	hi
 8007fd0:	ea42 6205 	orrhi.w	r2, r2, r5, lsl #24
  if(LayerIdx == DMA2D_BACKGROUND_LAYER)
 8007fd4:	b999      	cbnz	r1, 8007ffe <HAL_DMA2D_ConfigLayer+0x6a>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8007fd6:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8007fd8:	4039      	ands	r1, r7
 8007fda:	430a      	orrs	r2, r1
 8007fdc:	625a      	str	r2, [r3, #36]	; 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);

    /* DMA2D BGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8007fde:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 8007fe0:	6982      	ldr	r2, [r0, #24]
 8007fe2:	619a      	str	r2, [r3, #24]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8007fe4:	d803      	bhi.n	8007fee <HAL_DMA2D_ConfigLayer+0x5a>
    {
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE|DMA2D_BGCOLR_GREEN|DMA2D_BGCOLR_RED));
 8007fe6:	6a42      	ldr	r2, [r0, #36]	; 0x24
 8007fe8:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
 8007fec:	629a      	str	r2, [r3, #40]	; 0x28
    {
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE|DMA2D_FGCOLR_GREEN|DMA2D_FGCOLR_RED));
    }
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8007fee:	2301      	movs	r3, #1
 8007ff0:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 8007ff4:	2300      	movs	r3, #0
 8007ff6:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
  __HAL_LOCK(hdma2d);
 8007ffa:	4618      	mov	r0, r3

  return HAL_OK;
}
 8007ffc:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8007ffe:	69d9      	ldr	r1, [r3, #28]
 8008000:	4039      	ands	r1, r7
 8008002:	430a      	orrs	r2, r1
 8008004:	61da      	str	r2, [r3, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8008006:	1982      	adds	r2, r0, r6
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8008008:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 800800a:	6992      	ldr	r2, [r2, #24]
 800800c:	611a      	str	r2, [r3, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE|DMA2D_FGCOLR_GREEN|DMA2D_FGCOLR_RED));
 800800e:	bf9c      	itt	ls
 8008010:	f025 457f 	bicls.w	r5, r5, #4278190080	; 0xff000000
 8008014:	621d      	strls	r5, [r3, #32]
 8008016:	e7ea      	b.n	8007fee <HAL_DMA2D_ConfigLayer+0x5a>
 8008018:	00fcfff0 	.word	0x00fcfff0

0800801c <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 800801c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8008020:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 80081e4 <HAL_GPIO_Init+0x1c8>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8008024:	4a6d      	ldr	r2, [pc, #436]	; (80081dc <HAL_GPIO_Init+0x1c0>)
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8008026:	f8df 91c0 	ldr.w	r9, [pc, #448]	; 80081e8 <HAL_GPIO_Init+0x1cc>
  for(position = 0U; position < GPIO_NUMBER; position++)
 800802a:	2300      	movs	r3, #0
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800802c:	680d      	ldr	r5, [r1, #0]
    ioposition = 0x01U << position;
 800802e:	2401      	movs	r4, #1
 8008030:	409c      	lsls	r4, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8008032:	ea04 0605 	and.w	r6, r4, r5
    if(iocurrent == ioposition)
 8008036:	43ac      	bics	r4, r5
 8008038:	f040 80b7 	bne.w	80081aa <HAL_GPIO_Init+0x18e>
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 800803c:	684c      	ldr	r4, [r1, #4]
 800803e:	f024 0c10 	bic.w	ip, r4, #16
 8008042:	ea4f 0e43 	mov.w	lr, r3, lsl #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8008046:	2503      	movs	r5, #3
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8008048:	f10c 37ff 	add.w	r7, ip, #4294967295
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800804c:	fa05 f50e 	lsl.w	r5, r5, lr
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8008050:	2f01      	cmp	r7, #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8008052:	ea6f 0505 	mvn.w	r5, r5
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8008056:	d811      	bhi.n	800807c <HAL_GPIO_Init+0x60>
        temp = GPIOx->OSPEEDR; 
 8008058:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800805a:	ea07 0a05 	and.w	sl, r7, r5
        temp |= (GPIO_Init->Speed << (position * 2U));
 800805e:	68cf      	ldr	r7, [r1, #12]
 8008060:	fa07 f70e 	lsl.w	r7, r7, lr
 8008064:	ea47 070a 	orr.w	r7, r7, sl
        GPIOx->OSPEEDR = temp;
 8008068:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 800806a:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 800806c:	ea27 0a06 	bic.w	sl, r7, r6
        temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4U) << position);
 8008070:	f3c4 1700 	ubfx	r7, r4, #4, #1
 8008074:	409f      	lsls	r7, r3
 8008076:	ea47 070a 	orr.w	r7, r7, sl
        GPIOx->OTYPER = temp;
 800807a:	6047      	str	r7, [r0, #4]
      temp = GPIOx->PUPDR;
 800807c:	68c7      	ldr	r7, [r0, #12]
      temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 800807e:	ea07 0a05 	and.w	sl, r7, r5
      temp |= ((GPIO_Init->Pull) << (position * 2U));
 8008082:	688f      	ldr	r7, [r1, #8]
 8008084:	fa07 f70e 	lsl.w	r7, r7, lr
 8008088:	ea47 070a 	orr.w	r7, r7, sl
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 800808c:	f1bc 0f02 	cmp.w	ip, #2
      GPIOx->PUPDR = temp;
 8008090:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 8008092:	d116      	bne.n	80080c2 <HAL_GPIO_Init+0xa6>
        temp = GPIOx->AFR[position >> 3U];
 8008094:	ea4f 0ad3 	mov.w	sl, r3, lsr #3
 8008098:	eb00 0a8a 	add.w	sl, r0, sl, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800809c:	f003 0b07 	and.w	fp, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 80080a0:	f8da 7020 	ldr.w	r7, [sl, #32]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 80080a4:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
 80080a8:	f04f 0c0f 	mov.w	ip, #15
 80080ac:	fa0c fc0b 	lsl.w	ip, ip, fp
 80080b0:	ea27 0c0c 	bic.w	ip, r7, ip
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 80080b4:	690f      	ldr	r7, [r1, #16]
 80080b6:	fa07 f70b 	lsl.w	r7, r7, fp
 80080ba:	ea47 070c 	orr.w	r7, r7, ip
        GPIOx->AFR[position >> 3U] = temp;
 80080be:	f8ca 7020 	str.w	r7, [sl, #32]
      temp = GPIOx->MODER;
 80080c2:	6807      	ldr	r7, [r0, #0]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 80080c4:	403d      	ands	r5, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 80080c6:	f004 0703 	and.w	r7, r4, #3
 80080ca:	fa07 f70e 	lsl.w	r7, r7, lr
 80080ce:	433d      	orrs	r5, r7
      GPIOx->MODER = temp;
 80080d0:	6005      	str	r5, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 80080d2:	00e5      	lsls	r5, r4, #3
 80080d4:	d569      	bpl.n	80081aa <HAL_GPIO_Init+0x18e>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80080d6:	f04f 0b00 	mov.w	fp, #0
 80080da:	f8cd b004 	str.w	fp, [sp, #4]
 80080de:	f8d8 7044 	ldr.w	r7, [r8, #68]	; 0x44
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 80080e2:	4d3f      	ldr	r5, [pc, #252]	; (80081e0 <HAL_GPIO_Init+0x1c4>)
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80080e4:	f447 4780 	orr.w	r7, r7, #16384	; 0x4000
 80080e8:	f8c8 7044 	str.w	r7, [r8, #68]	; 0x44
 80080ec:	f8d8 7044 	ldr.w	r7, [r8, #68]	; 0x44
 80080f0:	f407 4780 	and.w	r7, r7, #16384	; 0x4000
 80080f4:	9701      	str	r7, [sp, #4]
 80080f6:	9f01      	ldr	r7, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2U];
 80080f8:	f023 0703 	bic.w	r7, r3, #3
 80080fc:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 8008100:	f507 379c 	add.w	r7, r7, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8008104:	f003 0e03 	and.w	lr, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 8008108:	f8d7 a008 	ldr.w	sl, [r7, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800810c:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 8008110:	f04f 0c0f 	mov.w	ip, #15
 8008114:	fa0c fc0e 	lsl.w	ip, ip, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8008118:	42a8      	cmp	r0, r5
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800811a:	ea2a 0c0c 	bic.w	ip, sl, ip
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800811e:	d04b      	beq.n	80081b8 <HAL_GPIO_Init+0x19c>
 8008120:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8008124:	42a8      	cmp	r0, r5
 8008126:	d049      	beq.n	80081bc <HAL_GPIO_Init+0x1a0>
 8008128:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800812c:	42a8      	cmp	r0, r5
 800812e:	d047      	beq.n	80081c0 <HAL_GPIO_Init+0x1a4>
 8008130:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8008134:	42a8      	cmp	r0, r5
 8008136:	d045      	beq.n	80081c4 <HAL_GPIO_Init+0x1a8>
 8008138:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800813c:	42a8      	cmp	r0, r5
 800813e:	d043      	beq.n	80081c8 <HAL_GPIO_Init+0x1ac>
 8008140:	4548      	cmp	r0, r9
 8008142:	d043      	beq.n	80081cc <HAL_GPIO_Init+0x1b0>
 8008144:	f505 6500 	add.w	r5, r5, #2048	; 0x800
 8008148:	42a8      	cmp	r0, r5
 800814a:	d041      	beq.n	80081d0 <HAL_GPIO_Init+0x1b4>
 800814c:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8008150:	42a8      	cmp	r0, r5
 8008152:	d03f      	beq.n	80081d4 <HAL_GPIO_Init+0x1b8>
 8008154:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8008158:	42a8      	cmp	r0, r5
 800815a:	d03d      	beq.n	80081d8 <HAL_GPIO_Init+0x1bc>
 800815c:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8008160:	42a8      	cmp	r0, r5
 8008162:	bf0c      	ite	eq
 8008164:	2509      	moveq	r5, #9
 8008166:	250a      	movne	r5, #10
 8008168:	fa05 f50e 	lsl.w	r5, r5, lr
 800816c:	ea45 050c 	orr.w	r5, r5, ip
        SYSCFG->EXTICR[position >> 2U] = temp;
 8008170:	60bd      	str	r5, [r7, #8]
        temp = EXTI->IMR;
 8008172:	6815      	ldr	r5, [r2, #0]
        temp &= ~((uint32_t)iocurrent);
 8008174:	43f7      	mvns	r7, r6
        if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 8008176:	f414 3f80 	tst.w	r4, #65536	; 0x10000
        temp &= ~((uint32_t)iocurrent);
 800817a:	bf0c      	ite	eq
 800817c:	403d      	andeq	r5, r7
        {
          temp |= iocurrent;
 800817e:	4335      	orrne	r5, r6
        }
        EXTI->IMR = temp;
 8008180:	6015      	str	r5, [r2, #0]

        temp = EXTI->EMR;
 8008182:	6855      	ldr	r5, [r2, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 8008184:	f414 3f00 	tst.w	r4, #131072	; 0x20000
        temp &= ~((uint32_t)iocurrent);
 8008188:	bf0c      	ite	eq
 800818a:	403d      	andeq	r5, r7
        {
          temp |= iocurrent;
 800818c:	4335      	orrne	r5, r6
        }
        EXTI->EMR = temp;
 800818e:	6055      	str	r5, [r2, #4]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8008190:	6895      	ldr	r5, [r2, #8]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 8008192:	f414 1f80 	tst.w	r4, #1048576	; 0x100000
        temp &= ~((uint32_t)iocurrent);
 8008196:	bf0c      	ite	eq
 8008198:	403d      	andeq	r5, r7
        {
          temp |= iocurrent;
 800819a:	4335      	orrne	r5, r6
        }
        EXTI->RTSR = temp;
 800819c:	6095      	str	r5, [r2, #8]

        temp = EXTI->FTSR;
 800819e:	68d5      	ldr	r5, [r2, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 80081a0:	02a4      	lsls	r4, r4, #10
        temp &= ~((uint32_t)iocurrent);
 80081a2:	bf54      	ite	pl
 80081a4:	403d      	andpl	r5, r7
        {
          temp |= iocurrent;
 80081a6:	4335      	orrmi	r5, r6
        }
        EXTI->FTSR = temp;
 80081a8:	60d5      	str	r5, [r2, #12]
  for(position = 0U; position < GPIO_NUMBER; position++)
 80081aa:	3301      	adds	r3, #1
 80081ac:	2b10      	cmp	r3, #16
 80081ae:	f47f af3d 	bne.w	800802c <HAL_GPIO_Init+0x10>
      }
    }
  }
}
 80081b2:	b003      	add	sp, #12
 80081b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 80081b8:	465d      	mov	r5, fp
 80081ba:	e7d5      	b.n	8008168 <HAL_GPIO_Init+0x14c>
 80081bc:	2501      	movs	r5, #1
 80081be:	e7d3      	b.n	8008168 <HAL_GPIO_Init+0x14c>
 80081c0:	2502      	movs	r5, #2
 80081c2:	e7d1      	b.n	8008168 <HAL_GPIO_Init+0x14c>
 80081c4:	2503      	movs	r5, #3
 80081c6:	e7cf      	b.n	8008168 <HAL_GPIO_Init+0x14c>
 80081c8:	2504      	movs	r5, #4
 80081ca:	e7cd      	b.n	8008168 <HAL_GPIO_Init+0x14c>
 80081cc:	2505      	movs	r5, #5
 80081ce:	e7cb      	b.n	8008168 <HAL_GPIO_Init+0x14c>
 80081d0:	2506      	movs	r5, #6
 80081d2:	e7c9      	b.n	8008168 <HAL_GPIO_Init+0x14c>
 80081d4:	2507      	movs	r5, #7
 80081d6:	e7c7      	b.n	8008168 <HAL_GPIO_Init+0x14c>
 80081d8:	2508      	movs	r5, #8
 80081da:	e7c5      	b.n	8008168 <HAL_GPIO_Init+0x14c>
 80081dc:	40013c00 	.word	0x40013c00
 80081e0:	40020000 	.word	0x40020000
 80081e4:	40023800 	.word	0x40023800
 80081e8:	40021400 	.word	0x40021400

080081ec <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 80081ec:	b10a      	cbz	r2, 80081f2 <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 80081ee:	6181      	str	r1, [r0, #24]
  }
}
 80081f0:	4770      	bx	lr
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 80081f2:	0409      	lsls	r1, r1, #16
 80081f4:	e7fb      	b.n	80081ee <HAL_GPIO_WritePin+0x2>

080081f6 <I2C_IsAcknowledgeFailed>:
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80081f6:	6801      	ldr	r1, [r0, #0]
 80081f8:	694b      	ldr	r3, [r1, #20]
 80081fa:	f413 6380 	ands.w	r3, r3, #1024	; 0x400
 80081fe:	f04f 0200 	mov.w	r2, #0
 8008202:	d010      	beq.n	8008226 <I2C_IsAcknowledgeFailed+0x30>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8008204:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 8008208:	614b      	str	r3, [r1, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
    hi2c->State               = HAL_I2C_STATE_READY;
 800820a:	2320      	movs	r3, #32
    hi2c->PreviousState       = I2C_STATE_NONE;
 800820c:	6302      	str	r2, [r0, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800820e:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 8008212:	f880 203e 	strb.w	r2, [r0, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8008216:	6c03      	ldr	r3, [r0, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8008218:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800821c:	f043 0304 	orr.w	r3, r3, #4
 8008220:	6403      	str	r3, [r0, #64]	; 0x40

    return HAL_ERROR;
 8008222:	2001      	movs	r0, #1
 8008224:	4770      	bx	lr
  }
  return HAL_OK;
 8008226:	4618      	mov	r0, r3
}
 8008228:	4770      	bx	lr

0800822a <I2C_WaitOnFlagUntilTimeout>:
{
 800822a:	e92d 46f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r9, sl, lr}
 800822e:	4606      	mov	r6, r0
 8008230:	460f      	mov	r7, r1
 8008232:	4691      	mov	r9, r2
 8008234:	461d      	mov	r5, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8008236:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 800823a:	6833      	ldr	r3, [r6, #0]
 800823c:	f1ba 0f01 	cmp.w	sl, #1
 8008240:	bf0c      	ite	eq
 8008242:	695c      	ldreq	r4, [r3, #20]
 8008244:	699c      	ldrne	r4, [r3, #24]
 8008246:	ea27 0404 	bic.w	r4, r7, r4
 800824a:	b2a4      	uxth	r4, r4
 800824c:	fab4 f484 	clz	r4, r4
 8008250:	0964      	lsrs	r4, r4, #5
 8008252:	45a1      	cmp	r9, r4
 8008254:	d001      	beq.n	800825a <I2C_WaitOnFlagUntilTimeout+0x30>
  return HAL_OK;
 8008256:	2000      	movs	r0, #0
 8008258:	e017      	b.n	800828a <I2C_WaitOnFlagUntilTimeout+0x60>
    if (Timeout != HAL_MAX_DELAY)
 800825a:	1c6a      	adds	r2, r5, #1
 800825c:	d0ee      	beq.n	800823c <I2C_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800825e:	f7ff fae9 	bl	8007834 <HAL_GetTick>
 8008262:	9b08      	ldr	r3, [sp, #32]
 8008264:	1ac0      	subs	r0, r0, r3
 8008266:	42a8      	cmp	r0, r5
 8008268:	d801      	bhi.n	800826e <I2C_WaitOnFlagUntilTimeout+0x44>
 800826a:	2d00      	cmp	r5, #0
 800826c:	d1e5      	bne.n	800823a <I2C_WaitOnFlagUntilTimeout+0x10>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800826e:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8008270:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8008272:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8008274:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8008278:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800827c:	6c32      	ldr	r2, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800827e:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8008282:	f042 0220 	orr.w	r2, r2, #32
 8008286:	6432      	str	r2, [r6, #64]	; 0x40
        return HAL_ERROR;
 8008288:	2001      	movs	r0, #1
}
 800828a:	e8bd 86f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r9, sl, pc}

0800828e <I2C_WaitOnMasterAddressFlagUntilTimeout>:
{
 800828e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008292:	4604      	mov	r4, r0
 8008294:	460f      	mov	r7, r1
 8008296:	4616      	mov	r6, r2
 8008298:	4698      	mov	r8, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800829a:	6825      	ldr	r5, [r4, #0]
 800829c:	6968      	ldr	r0, [r5, #20]
 800829e:	ea27 0000 	bic.w	r0, r7, r0
 80082a2:	b280      	uxth	r0, r0
 80082a4:	b1b8      	cbz	r0, 80082d6 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x48>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80082a6:	696b      	ldr	r3, [r5, #20]
 80082a8:	055a      	lsls	r2, r3, #21
 80082aa:	d516      	bpl.n	80082da <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4c>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80082ac:	682b      	ldr	r3, [r5, #0]
 80082ae:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80082b2:	602b      	str	r3, [r5, #0]
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80082b4:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 80082b8:	616b      	str	r3, [r5, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 80082ba:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 80082bc:	2300      	movs	r3, #0
 80082be:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 80082c0:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 80082c4:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80082c8:	6c22      	ldr	r2, [r4, #64]	; 0x40
 80082ca:	f042 0204 	orr.w	r2, r2, #4
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80082ce:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 80082d0:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        return HAL_ERROR;
 80082d4:	2001      	movs	r0, #1
}
 80082d6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (Timeout != HAL_MAX_DELAY)
 80082da:	1c73      	adds	r3, r6, #1
 80082dc:	d0de      	beq.n	800829c <I2C_WaitOnMasterAddressFlagUntilTimeout+0xe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80082de:	f7ff faa9 	bl	8007834 <HAL_GetTick>
 80082e2:	eba0 0008 	sub.w	r0, r0, r8
 80082e6:	42b0      	cmp	r0, r6
 80082e8:	d801      	bhi.n	80082ee <I2C_WaitOnMasterAddressFlagUntilTimeout+0x60>
 80082ea:	2e00      	cmp	r6, #0
 80082ec:	d1d5      	bne.n	800829a <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
        hi2c->PreviousState       = I2C_STATE_NONE;
 80082ee:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 80082f0:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 80082f2:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 80082f4:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 80082f8:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80082fc:	6c22      	ldr	r2, [r4, #64]	; 0x40
 80082fe:	f042 0220 	orr.w	r2, r2, #32
 8008302:	e7e4      	b.n	80082ce <I2C_WaitOnMasterAddressFlagUntilTimeout+0x40>

08008304 <I2C_WaitOnRXNEFlagUntilTimeout>:
{
 8008304:	b570      	push	{r4, r5, r6, lr}
 8008306:	4604      	mov	r4, r0
 8008308:	460d      	mov	r5, r1
 800830a:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800830c:	6821      	ldr	r1, [r4, #0]
 800830e:	694b      	ldr	r3, [r1, #20]
 8008310:	f013 0340 	ands.w	r3, r3, #64	; 0x40
 8008314:	d001      	beq.n	800831a <I2C_WaitOnRXNEFlagUntilTimeout+0x16>
  return HAL_OK;
 8008316:	2000      	movs	r0, #0
 8008318:	e010      	b.n	800833c <I2C_WaitOnRXNEFlagUntilTimeout+0x38>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800831a:	694a      	ldr	r2, [r1, #20]
 800831c:	06d2      	lsls	r2, r2, #27
 800831e:	d50e      	bpl.n	800833e <I2C_WaitOnRXNEFlagUntilTimeout+0x3a>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8008320:	f06f 0210 	mvn.w	r2, #16
 8008324:	614a      	str	r2, [r1, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 8008326:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8008328:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800832a:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800832e:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 8008332:	6c22      	ldr	r2, [r4, #64]	; 0x40
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8008334:	6422      	str	r2, [r4, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 8008336:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
      return HAL_ERROR;
 800833a:	2001      	movs	r0, #1
}
 800833c:	bd70      	pop	{r4, r5, r6, pc}
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800833e:	f7ff fa79 	bl	8007834 <HAL_GetTick>
 8008342:	1b80      	subs	r0, r0, r6
 8008344:	42a8      	cmp	r0, r5
 8008346:	d801      	bhi.n	800834c <I2C_WaitOnRXNEFlagUntilTimeout+0x48>
 8008348:	2d00      	cmp	r5, #0
 800834a:	d1df      	bne.n	800830c <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
      hi2c->PreviousState       = I2C_STATE_NONE;
 800834c:	2300      	movs	r3, #0
      hi2c->State               = HAL_I2C_STATE_READY;
 800834e:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8008350:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8008352:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8008356:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800835a:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800835c:	f042 0220 	orr.w	r2, r2, #32
 8008360:	e7e8      	b.n	8008334 <I2C_WaitOnRXNEFlagUntilTimeout+0x30>

08008362 <I2C_WaitOnBTFFlagUntilTimeout>:
{
 8008362:	b570      	push	{r4, r5, r6, lr}
 8008364:	4604      	mov	r4, r0
 8008366:	460d      	mov	r5, r1
 8008368:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800836a:	6823      	ldr	r3, [r4, #0]
 800836c:	695b      	ldr	r3, [r3, #20]
 800836e:	075b      	lsls	r3, r3, #29
 8008370:	d501      	bpl.n	8008376 <I2C_WaitOnBTFFlagUntilTimeout+0x14>
  return HAL_OK;
 8008372:	2000      	movs	r0, #0
}
 8008374:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8008376:	4620      	mov	r0, r4
 8008378:	f7ff ff3d 	bl	80081f6 <I2C_IsAcknowledgeFailed>
 800837c:	b9a8      	cbnz	r0, 80083aa <I2C_WaitOnBTFFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 800837e:	1c6a      	adds	r2, r5, #1
 8008380:	d0f3      	beq.n	800836a <I2C_WaitOnBTFFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8008382:	f7ff fa57 	bl	8007834 <HAL_GetTick>
 8008386:	1b80      	subs	r0, r0, r6
 8008388:	42a8      	cmp	r0, r5
 800838a:	d801      	bhi.n	8008390 <I2C_WaitOnBTFFlagUntilTimeout+0x2e>
 800838c:	2d00      	cmp	r5, #0
 800838e:	d1ec      	bne.n	800836a <I2C_WaitOnBTFFlagUntilTimeout+0x8>
        hi2c->PreviousState       = I2C_STATE_NONE;
 8008390:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 8008392:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8008394:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8008396:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 800839a:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800839e:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 80083a0:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80083a4:	f042 0220 	orr.w	r2, r2, #32
 80083a8:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 80083aa:	2001      	movs	r0, #1
 80083ac:	e7e2      	b.n	8008374 <I2C_WaitOnBTFFlagUntilTimeout+0x12>

080083ae <I2C_WaitOnTXEFlagUntilTimeout>:
{
 80083ae:	b570      	push	{r4, r5, r6, lr}
 80083b0:	4604      	mov	r4, r0
 80083b2:	460d      	mov	r5, r1
 80083b4:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80083b6:	6823      	ldr	r3, [r4, #0]
 80083b8:	695b      	ldr	r3, [r3, #20]
 80083ba:	061b      	lsls	r3, r3, #24
 80083bc:	d501      	bpl.n	80083c2 <I2C_WaitOnTXEFlagUntilTimeout+0x14>
  return HAL_OK;
 80083be:	2000      	movs	r0, #0
}
 80083c0:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 80083c2:	4620      	mov	r0, r4
 80083c4:	f7ff ff17 	bl	80081f6 <I2C_IsAcknowledgeFailed>
 80083c8:	b9a8      	cbnz	r0, 80083f6 <I2C_WaitOnTXEFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 80083ca:	1c6a      	adds	r2, r5, #1
 80083cc:	d0f3      	beq.n	80083b6 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80083ce:	f7ff fa31 	bl	8007834 <HAL_GetTick>
 80083d2:	1b80      	subs	r0, r0, r6
 80083d4:	42a8      	cmp	r0, r5
 80083d6:	d801      	bhi.n	80083dc <I2C_WaitOnTXEFlagUntilTimeout+0x2e>
 80083d8:	2d00      	cmp	r5, #0
 80083da:	d1ec      	bne.n	80083b6 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
        hi2c->PreviousState       = I2C_STATE_NONE;
 80083dc:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 80083de:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 80083e0:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 80083e2:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 80083e6:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80083ea:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 80083ec:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80083f0:	f042 0220 	orr.w	r2, r2, #32
 80083f4:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 80083f6:	2001      	movs	r0, #1
 80083f8:	e7e2      	b.n	80083c0 <I2C_WaitOnTXEFlagUntilTimeout+0x12>
	...

080083fc <I2C_RequestMemoryWrite>:
{
 80083fc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8008400:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8008402:	6802      	ldr	r2, [r0, #0]
{
 8008404:	b085      	sub	sp, #20
 8008406:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
 800840a:	4699      	mov	r9, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800840c:	6813      	ldr	r3, [r2, #0]
 800840e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8008412:	6013      	str	r3, [r2, #0]
{
 8008414:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8008416:	463b      	mov	r3, r7
 8008418:	f8cd 8000 	str.w	r8, [sp]
 800841c:	2200      	movs	r2, #0
 800841e:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 8008422:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8008424:	f7ff ff01 	bl	800822a <I2C_WaitOnFlagUntilTimeout>
 8008428:	6823      	ldr	r3, [r4, #0]
 800842a:	b138      	cbz	r0, 800843c <I2C_RequestMemoryWrite+0x40>
    if (hi2c->Instance->CR1 & I2C_CR1_START)
 800842c:	681b      	ldr	r3, [r3, #0]
 800842e:	05db      	lsls	r3, r3, #23
 8008430:	d502      	bpl.n	8008438 <I2C_RequestMemoryWrite+0x3c>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8008432:	f44f 7300 	mov.w	r3, #512	; 0x200
 8008436:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 8008438:	2003      	movs	r0, #3
 800843a:	e00a      	b.n	8008452 <I2C_RequestMemoryWrite+0x56>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 800843c:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 8008440:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8008442:	4919      	ldr	r1, [pc, #100]	; (80084a8 <I2C_RequestMemoryWrite+0xac>)
 8008444:	4643      	mov	r3, r8
 8008446:	463a      	mov	r2, r7
 8008448:	4620      	mov	r0, r4
 800844a:	f7ff ff20 	bl	800828e <I2C_WaitOnMasterAddressFlagUntilTimeout>
 800844e:	b118      	cbz	r0, 8008458 <I2C_RequestMemoryWrite+0x5c>
      return HAL_ERROR;
 8008450:	2001      	movs	r0, #1
}
 8008452:	b005      	add	sp, #20
 8008454:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8008458:	6823      	ldr	r3, [r4, #0]
 800845a:	9003      	str	r0, [sp, #12]
 800845c:	695a      	ldr	r2, [r3, #20]
 800845e:	9203      	str	r2, [sp, #12]
 8008460:	699b      	ldr	r3, [r3, #24]
 8008462:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8008464:	4642      	mov	r2, r8
 8008466:	4639      	mov	r1, r7
 8008468:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800846a:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800846c:	f7ff ff9f 	bl	80083ae <I2C_WaitOnTXEFlagUntilTimeout>
 8008470:	b140      	cbz	r0, 8008484 <I2C_RequestMemoryWrite+0x88>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8008472:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8008474:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8008476:	bf01      	itttt	eq
 8008478:	6822      	ldreq	r2, [r4, #0]
 800847a:	6813      	ldreq	r3, [r2, #0]
 800847c:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 8008480:	6013      	streq	r3, [r2, #0]
 8008482:	e7e5      	b.n	8008450 <I2C_RequestMemoryWrite+0x54>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8008484:	f1b9 0f01 	cmp.w	r9, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8008488:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800848a:	d102      	bne.n	8008492 <I2C_RequestMemoryWrite+0x96>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800848c:	b2ed      	uxtb	r5, r5
 800848e:	611d      	str	r5, [r3, #16]
 8008490:	e7df      	b.n	8008452 <I2C_RequestMemoryWrite+0x56>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8008492:	0a2a      	lsrs	r2, r5, #8
 8008494:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8008496:	4639      	mov	r1, r7
 8008498:	4642      	mov	r2, r8
 800849a:	4620      	mov	r0, r4
 800849c:	f7ff ff87 	bl	80083ae <I2C_WaitOnTXEFlagUntilTimeout>
 80084a0:	2800      	cmp	r0, #0
 80084a2:	d1e6      	bne.n	8008472 <I2C_RequestMemoryWrite+0x76>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80084a4:	6823      	ldr	r3, [r4, #0]
 80084a6:	e7f1      	b.n	800848c <I2C_RequestMemoryWrite+0x90>
 80084a8:	00010002 	.word	0x00010002

080084ac <I2C_RequestMemoryRead>:
{
 80084ac:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80084b0:	469a      	mov	sl, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80084b2:	6803      	ldr	r3, [r0, #0]
{
 80084b4:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80084b6:	681a      	ldr	r2, [r3, #0]
 80084b8:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 80084bc:	601a      	str	r2, [r3, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80084be:	681a      	ldr	r2, [r3, #0]
{
 80084c0:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80084c4:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80084c8:	601a      	str	r2, [r3, #0]
{
 80084ca:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 80084cc:	463b      	mov	r3, r7
 80084ce:	f8cd 8000 	str.w	r8, [sp]
 80084d2:	2200      	movs	r2, #0
 80084d4:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 80084d8:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 80084da:	f7ff fea6 	bl	800822a <I2C_WaitOnFlagUntilTimeout>
 80084de:	6823      	ldr	r3, [r4, #0]
 80084e0:	b148      	cbz	r0, 80084f6 <I2C_RequestMemoryRead+0x4a>
    if (hi2c->Instance->CR1 & I2C_CR1_START)
 80084e2:	681b      	ldr	r3, [r3, #0]
    if (hi2c->Instance->CR1 & I2C_CR1_START)
 80084e4:	05db      	lsls	r3, r3, #23
 80084e6:	d502      	bpl.n	80084ee <I2C_RequestMemoryRead+0x42>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 80084e8:	f44f 7300 	mov.w	r3, #512	; 0x200
 80084ec:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 80084ee:	2003      	movs	r0, #3
}
 80084f0:	b004      	add	sp, #16
 80084f2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 80084f6:	fa5f f986 	uxtb.w	r9, r6
 80084fa:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 80084fe:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8008500:	492a      	ldr	r1, [pc, #168]	; (80085ac <I2C_RequestMemoryRead+0x100>)
 8008502:	4643      	mov	r3, r8
 8008504:	463a      	mov	r2, r7
 8008506:	4620      	mov	r0, r4
 8008508:	f7ff fec1 	bl	800828e <I2C_WaitOnMasterAddressFlagUntilTimeout>
 800850c:	b108      	cbz	r0, 8008512 <I2C_RequestMemoryRead+0x66>
    return HAL_ERROR;
 800850e:	2001      	movs	r0, #1
 8008510:	e7ee      	b.n	80084f0 <I2C_RequestMemoryRead+0x44>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8008512:	6823      	ldr	r3, [r4, #0]
 8008514:	9003      	str	r0, [sp, #12]
 8008516:	695a      	ldr	r2, [r3, #20]
 8008518:	9203      	str	r2, [sp, #12]
 800851a:	699b      	ldr	r3, [r3, #24]
 800851c:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800851e:	4642      	mov	r2, r8
 8008520:	4639      	mov	r1, r7
 8008522:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8008524:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8008526:	f7ff ff42 	bl	80083ae <I2C_WaitOnTXEFlagUntilTimeout>
 800852a:	b140      	cbz	r0, 800853e <I2C_RequestMemoryRead+0x92>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800852c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800852e:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8008530:	bf01      	itttt	eq
 8008532:	6822      	ldreq	r2, [r4, #0]
 8008534:	6813      	ldreq	r3, [r2, #0]
 8008536:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 800853a:	6013      	streq	r3, [r2, #0]
 800853c:	e7e7      	b.n	800850e <I2C_RequestMemoryRead+0x62>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800853e:	f1ba 0f01 	cmp.w	sl, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8008542:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8008544:	d11a      	bne.n	800857c <I2C_RequestMemoryRead+0xd0>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8008546:	b2ed      	uxtb	r5, r5
 8008548:	611d      	str	r5, [r3, #16]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800854a:	4642      	mov	r2, r8
 800854c:	4639      	mov	r1, r7
 800854e:	4620      	mov	r0, r4
 8008550:	f7ff ff2d 	bl	80083ae <I2C_WaitOnTXEFlagUntilTimeout>
 8008554:	2800      	cmp	r0, #0
 8008556:	d1e9      	bne.n	800852c <I2C_RequestMemoryRead+0x80>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8008558:	6822      	ldr	r2, [r4, #0]
 800855a:	6813      	ldr	r3, [r2, #0]
 800855c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8008560:	6013      	str	r3, [r2, #0]
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8008562:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8008566:	4602      	mov	r2, r0
 8008568:	f8cd 8000 	str.w	r8, [sp]
 800856c:	463b      	mov	r3, r7
 800856e:	4620      	mov	r0, r4
 8008570:	f7ff fe5b 	bl	800822a <I2C_WaitOnFlagUntilTimeout>
 8008574:	6822      	ldr	r2, [r4, #0]
 8008576:	b160      	cbz	r0, 8008592 <I2C_RequestMemoryRead+0xe6>
    if (hi2c->Instance->CR1 & I2C_CR1_START)
 8008578:	6813      	ldr	r3, [r2, #0]
 800857a:	e7b3      	b.n	80084e4 <I2C_RequestMemoryRead+0x38>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 800857c:	0a2a      	lsrs	r2, r5, #8
 800857e:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8008580:	4639      	mov	r1, r7
 8008582:	4642      	mov	r2, r8
 8008584:	4620      	mov	r0, r4
 8008586:	f7ff ff12 	bl	80083ae <I2C_WaitOnTXEFlagUntilTimeout>
 800858a:	2800      	cmp	r0, #0
 800858c:	d1ce      	bne.n	800852c <I2C_RequestMemoryRead+0x80>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800858e:	6823      	ldr	r3, [r4, #0]
 8008590:	e7d9      	b.n	8008546 <I2C_RequestMemoryRead+0x9a>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 8008592:	f049 0301 	orr.w	r3, r9, #1
 8008596:	6113      	str	r3, [r2, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8008598:	4904      	ldr	r1, [pc, #16]	; (80085ac <I2C_RequestMemoryRead+0x100>)
 800859a:	4643      	mov	r3, r8
 800859c:	463a      	mov	r2, r7
 800859e:	4620      	mov	r0, r4
 80085a0:	f7ff fe75 	bl	800828e <I2C_WaitOnMasterAddressFlagUntilTimeout>
    return HAL_TIMEOUT;
 80085a4:	3800      	subs	r0, #0
 80085a6:	bf18      	it	ne
 80085a8:	2001      	movne	r0, #1
 80085aa:	e7a1      	b.n	80084f0 <I2C_RequestMemoryRead+0x44>
 80085ac:	00010002 	.word	0x00010002

080085b0 <HAL_I2C_Init>:
{
 80085b0:	b570      	push	{r4, r5, r6, lr}
  if (hi2c == NULL)
 80085b2:	4604      	mov	r4, r0
 80085b4:	b908      	cbnz	r0, 80085ba <HAL_I2C_Init+0xa>
    return HAL_ERROR;
 80085b6:	2001      	movs	r0, #1
}
 80085b8:	bd70      	pop	{r4, r5, r6, pc}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 80085ba:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 80085be:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80085c2:	b91b      	cbnz	r3, 80085cc <HAL_I2C_Init+0x1c>
    hi2c->Lock = HAL_UNLOCKED;
 80085c4:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 80085c8:	f7f9 faba 	bl	8001b40 <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 80085cc:	2324      	movs	r3, #36	; 0x24
 80085ce:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 80085d2:	6823      	ldr	r3, [r4, #0]
 80085d4:	681a      	ldr	r2, [r3, #0]
 80085d6:	f022 0201 	bic.w	r2, r2, #1
 80085da:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 80085dc:	681a      	ldr	r2, [r3, #0]
 80085de:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 80085e2:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 80085e4:	681a      	ldr	r2, [r3, #0]
 80085e6:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 80085ea:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 80085ec:	f000 fe6e 	bl	80092cc <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 80085f0:	4b3f      	ldr	r3, [pc, #252]	; (80086f0 <HAL_I2C_Init+0x140>)
 80085f2:	6865      	ldr	r5, [r4, #4]
 80085f4:	429d      	cmp	r5, r3
 80085f6:	bf94      	ite	ls
 80085f8:	4b3e      	ldrls	r3, [pc, #248]	; (80086f4 <HAL_I2C_Init+0x144>)
 80085fa:	4b3f      	ldrhi	r3, [pc, #252]	; (80086f8 <HAL_I2C_Init+0x148>)
 80085fc:	4298      	cmp	r0, r3
 80085fe:	bf8c      	ite	hi
 8008600:	2300      	movhi	r3, #0
 8008602:	2301      	movls	r3, #1
 8008604:	2b00      	cmp	r3, #0
 8008606:	d1d6      	bne.n	80085b6 <HAL_I2C_Init+0x6>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8008608:	6822      	ldr	r2, [r4, #0]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800860a:	4e39      	ldr	r6, [pc, #228]	; (80086f0 <HAL_I2C_Init+0x140>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800860c:	6853      	ldr	r3, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 800860e:	493b      	ldr	r1, [pc, #236]	; (80086fc <HAL_I2C_Init+0x14c>)
 8008610:	fbb0 f1f1 	udiv	r1, r0, r1
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8008614:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8008618:	430b      	orrs	r3, r1
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800861a:	42b5      	cmp	r5, r6
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800861c:	6053      	str	r3, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800861e:	bf88      	it	hi
 8008620:	f44f 7696 	movhi.w	r6, #300	; 0x12c
 8008624:	6a13      	ldr	r3, [r2, #32]
 8008626:	bf88      	it	hi
 8008628:	4371      	mulhi	r1, r6
 800862a:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 800862e:	bf84      	itt	hi
 8008630:	f44f 767a 	movhi.w	r6, #1000	; 0x3e8
 8008634:	fbb1 f1f6 	udivhi	r1, r1, r6
 8008638:	3101      	adds	r1, #1
 800863a:	4319      	orrs	r1, r3
 800863c:	6211      	str	r1, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800863e:	69d1      	ldr	r1, [r2, #28]
 8008640:	1e43      	subs	r3, r0, #1
 8008642:	482b      	ldr	r0, [pc, #172]	; (80086f0 <HAL_I2C_Init+0x140>)
 8008644:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 8008648:	4285      	cmp	r5, r0
 800864a:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800864e:	d832      	bhi.n	80086b6 <HAL_I2C_Init+0x106>
 8008650:	006d      	lsls	r5, r5, #1
 8008652:	f640 70fc 	movw	r0, #4092	; 0xffc
 8008656:	fbb3 f3f5 	udiv	r3, r3, r5
 800865a:	3301      	adds	r3, #1
 800865c:	4203      	tst	r3, r0
 800865e:	d042      	beq.n	80086e6 <HAL_I2C_Init+0x136>
 8008660:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8008664:	430b      	orrs	r3, r1
 8008666:	61d3      	str	r3, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 8008668:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 800866c:	6811      	ldr	r1, [r2, #0]
 800866e:	4303      	orrs	r3, r0
 8008670:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 8008674:	430b      	orrs	r3, r1
 8008676:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 8008678:	6891      	ldr	r1, [r2, #8]
 800867a:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 800867e:	f421 4103 	bic.w	r1, r1, #33536	; 0x8300
 8008682:	4303      	orrs	r3, r0
 8008684:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8008688:	430b      	orrs	r3, r1
 800868a:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 800868c:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 8008690:	68d1      	ldr	r1, [r2, #12]
 8008692:	4303      	orrs	r3, r0
 8008694:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8008698:	430b      	orrs	r3, r1
 800869a:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 800869c:	6813      	ldr	r3, [r2, #0]
 800869e:	f043 0301 	orr.w	r3, r3, #1
 80086a2:	6013      	str	r3, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80086a4:	2000      	movs	r0, #0
  hi2c->State = HAL_I2C_STATE_READY;
 80086a6:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80086a8:	6420      	str	r0, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 80086aa:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 80086ae:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 80086b0:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
  return HAL_OK;
 80086b4:	e780      	b.n	80085b8 <HAL_I2C_Init+0x8>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 80086b6:	68a0      	ldr	r0, [r4, #8]
 80086b8:	b950      	cbnz	r0, 80086d0 <HAL_I2C_Init+0x120>
 80086ba:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80086be:	fbb3 f3f5 	udiv	r3, r3, r5
 80086c2:	3301      	adds	r3, #1
 80086c4:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80086c8:	b17b      	cbz	r3, 80086ea <HAL_I2C_Init+0x13a>
 80086ca:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80086ce:	e7c9      	b.n	8008664 <HAL_I2C_Init+0xb4>
 80086d0:	2019      	movs	r0, #25
 80086d2:	4345      	muls	r5, r0
 80086d4:	fbb3 f3f5 	udiv	r3, r3, r5
 80086d8:	3301      	adds	r3, #1
 80086da:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80086de:	b123      	cbz	r3, 80086ea <HAL_I2C_Init+0x13a>
 80086e0:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 80086e4:	e7be      	b.n	8008664 <HAL_I2C_Init+0xb4>
 80086e6:	2304      	movs	r3, #4
 80086e8:	e7bc      	b.n	8008664 <HAL_I2C_Init+0xb4>
 80086ea:	2301      	movs	r3, #1
 80086ec:	e7ba      	b.n	8008664 <HAL_I2C_Init+0xb4>
 80086ee:	bf00      	nop
 80086f0:	000186a0 	.word	0x000186a0
 80086f4:	001e847f 	.word	0x001e847f
 80086f8:	003d08ff 	.word	0x003d08ff
 80086fc:	000f4240 	.word	0x000f4240

08008700 <HAL_I2C_Mem_Write>:
{
 8008700:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8008704:	4604      	mov	r4, r0
 8008706:	4699      	mov	r9, r3
 8008708:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 800870a:	460f      	mov	r7, r1
 800870c:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 800870e:	f7ff f891 	bl	8007834 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8008712:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8008716:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 8008718:	4605      	mov	r5, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 800871a:	d003      	beq.n	8008724 <HAL_I2C_Mem_Write+0x24>
    return HAL_BUSY;
 800871c:	2002      	movs	r0, #2
}
 800871e:	b003      	add	sp, #12
 8008720:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8008724:	9000      	str	r0, [sp, #0]
 8008726:	493c      	ldr	r1, [pc, #240]	; (8008818 <HAL_I2C_Mem_Write+0x118>)
 8008728:	2319      	movs	r3, #25
 800872a:	2201      	movs	r2, #1
 800872c:	4620      	mov	r0, r4
 800872e:	f7ff fd7c 	bl	800822a <I2C_WaitOnFlagUntilTimeout>
 8008732:	2800      	cmp	r0, #0
 8008734:	d1f2      	bne.n	800871c <HAL_I2C_Mem_Write+0x1c>
    __HAL_LOCK(hi2c);
 8008736:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 800873a:	2b01      	cmp	r3, #1
 800873c:	d0ee      	beq.n	800871c <HAL_I2C_Mem_Write+0x1c>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800873e:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 8008740:	2301      	movs	r3, #1
 8008742:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8008746:	6803      	ldr	r3, [r0, #0]
 8008748:	07d9      	lsls	r1, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 800874a:	bf5e      	ittt	pl
 800874c:	6803      	ldrpl	r3, [r0, #0]
 800874e:	f043 0301 	orrpl.w	r3, r3, #1
 8008752:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8008754:	6803      	ldr	r3, [r0, #0]
 8008756:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800875a:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 800875c:	2321      	movs	r3, #33	; 0x21
 800875e:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8008762:	2340      	movs	r3, #64	; 0x40
 8008764:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8008768:	2300      	movs	r3, #0
 800876a:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 800876c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800876e:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 8008770:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8008774:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8008776:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8008778:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800877a:	4b28      	ldr	r3, [pc, #160]	; (800881c <HAL_I2C_Mem_Write+0x11c>)
 800877c:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800877e:	e9cd 6500 	strd	r6, r5, [sp]
 8008782:	464b      	mov	r3, r9
 8008784:	4642      	mov	r2, r8
 8008786:	4639      	mov	r1, r7
 8008788:	4620      	mov	r0, r4
 800878a:	f7ff fe37 	bl	80083fc <I2C_RequestMemoryWrite>
 800878e:	2800      	cmp	r0, #0
 8008790:	d02a      	beq.n	80087e8 <HAL_I2C_Mem_Write+0xe8>
      return HAL_ERROR;
 8008792:	2001      	movs	r0, #1
 8008794:	e7c3      	b.n	800871e <HAL_I2C_Mem_Write+0x1e>
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8008796:	f7ff fe0a 	bl	80083ae <I2C_WaitOnTXEFlagUntilTimeout>
 800879a:	b140      	cbz	r0, 80087ae <HAL_I2C_Mem_Write+0xae>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800879c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800879e:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80087a0:	bf01      	itttt	eq
 80087a2:	6822      	ldreq	r2, [r4, #0]
 80087a4:	6813      	ldreq	r3, [r2, #0]
 80087a6:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 80087aa:	6013      	streq	r3, [r2, #0]
 80087ac:	e7f1      	b.n	8008792 <HAL_I2C_Mem_Write+0x92>
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 80087ae:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80087b0:	6827      	ldr	r7, [r4, #0]
 80087b2:	461a      	mov	r2, r3
 80087b4:	f812 1b01 	ldrb.w	r1, [r2], #1
 80087b8:	6139      	str	r1, [r7, #16]
      hi2c->pBuffPtr++;
 80087ba:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 80087bc:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 80087be:	8d21      	ldrh	r1, [r4, #40]	; 0x28
      hi2c->XferCount--;
 80087c0:	3a01      	subs	r2, #1
 80087c2:	b292      	uxth	r2, r2
 80087c4:	8562      	strh	r2, [r4, #42]	; 0x2a
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 80087c6:	697a      	ldr	r2, [r7, #20]
      hi2c->XferSize--;
 80087c8:	1e48      	subs	r0, r1, #1
 80087ca:	b280      	uxth	r0, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 80087cc:	0752      	lsls	r2, r2, #29
      hi2c->XferSize--;
 80087ce:	8520      	strh	r0, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 80087d0:	d50a      	bpl.n	80087e8 <HAL_I2C_Mem_Write+0xe8>
 80087d2:	b148      	cbz	r0, 80087e8 <HAL_I2C_Mem_Write+0xe8>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 80087d4:	785a      	ldrb	r2, [r3, #1]
 80087d6:	613a      	str	r2, [r7, #16]
        hi2c->pBuffPtr++;
 80087d8:	3302      	adds	r3, #2
 80087da:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferCount--;
 80087dc:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80087de:	3b01      	subs	r3, #1
        hi2c->XferSize--;
 80087e0:	3902      	subs	r1, #2
        hi2c->XferCount--;
 80087e2:	b29b      	uxth	r3, r3
        hi2c->XferSize--;
 80087e4:	8521      	strh	r1, [r4, #40]	; 0x28
        hi2c->XferCount--;
 80087e6:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 80087e8:	8d23      	ldrh	r3, [r4, #40]	; 0x28
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80087ea:	462a      	mov	r2, r5
 80087ec:	4631      	mov	r1, r6
 80087ee:	4620      	mov	r0, r4
    while (hi2c->XferSize > 0U)
 80087f0:	2b00      	cmp	r3, #0
 80087f2:	d1d0      	bne.n	8008796 <HAL_I2C_Mem_Write+0x96>
    if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80087f4:	f7ff fdb5 	bl	8008362 <I2C_WaitOnBTFFlagUntilTimeout>
 80087f8:	2800      	cmp	r0, #0
 80087fa:	d1cf      	bne.n	800879c <HAL_I2C_Mem_Write+0x9c>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80087fc:	6822      	ldr	r2, [r4, #0]
 80087fe:	6813      	ldr	r3, [r2, #0]
 8008800:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8008804:	6013      	str	r3, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 8008806:	2320      	movs	r3, #32
 8008808:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 800880c:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8008810:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    return HAL_OK;
 8008814:	e783      	b.n	800871e <HAL_I2C_Mem_Write+0x1e>
 8008816:	bf00      	nop
 8008818:	00100002 	.word	0x00100002
 800881c:	ffff0000 	.word	0xffff0000

08008820 <HAL_I2C_Mem_Read>:
{
 8008820:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8008824:	4604      	mov	r4, r0
 8008826:	b087      	sub	sp, #28
 8008828:	4699      	mov	r9, r3
 800882a:	9f10      	ldr	r7, [sp, #64]	; 0x40
 800882c:	460d      	mov	r5, r1
 800882e:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8008830:	f7ff f800 	bl	8007834 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8008834:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8008838:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 800883a:	4606      	mov	r6, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 800883c:	d004      	beq.n	8008848 <HAL_I2C_Mem_Read+0x28>
    return HAL_BUSY;
 800883e:	2502      	movs	r5, #2
}
 8008840:	4628      	mov	r0, r5
 8008842:	b007      	add	sp, #28
 8008844:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8008848:	9000      	str	r0, [sp, #0]
 800884a:	4976      	ldr	r1, [pc, #472]	; (8008a24 <HAL_I2C_Mem_Read+0x204>)
 800884c:	2319      	movs	r3, #25
 800884e:	2201      	movs	r2, #1
 8008850:	4620      	mov	r0, r4
 8008852:	f7ff fcea 	bl	800822a <I2C_WaitOnFlagUntilTimeout>
 8008856:	2800      	cmp	r0, #0
 8008858:	d1f1      	bne.n	800883e <HAL_I2C_Mem_Read+0x1e>
    __HAL_LOCK(hi2c);
 800885a:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 800885e:	2b01      	cmp	r3, #1
 8008860:	d0ed      	beq.n	800883e <HAL_I2C_Mem_Read+0x1e>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8008862:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 8008864:	2301      	movs	r3, #1
 8008866:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800886a:	6803      	ldr	r3, [r0, #0]
 800886c:	07db      	lsls	r3, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 800886e:	bf5e      	ittt	pl
 8008870:	6803      	ldrpl	r3, [r0, #0]
 8008872:	f043 0301 	orrpl.w	r3, r3, #1
 8008876:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8008878:	6803      	ldr	r3, [r0, #0]
 800887a:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800887e:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8008880:	2322      	movs	r3, #34	; 0x22
 8008882:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8008886:	2340      	movs	r3, #64	; 0x40
 8008888:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800888c:	2300      	movs	r3, #0
 800888e:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 8008890:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8008892:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 8008894:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8008898:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800889a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800889c:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800889e:	4b62      	ldr	r3, [pc, #392]	; (8008a28 <HAL_I2C_Mem_Read+0x208>)
 80088a0:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 80088a2:	4629      	mov	r1, r5
 80088a4:	e9cd 7600 	strd	r7, r6, [sp]
 80088a8:	464b      	mov	r3, r9
 80088aa:	4642      	mov	r2, r8
 80088ac:	4620      	mov	r0, r4
 80088ae:	f7ff fdfd 	bl	80084ac <I2C_RequestMemoryRead>
 80088b2:	4605      	mov	r5, r0
 80088b4:	b108      	cbz	r0, 80088ba <HAL_I2C_Mem_Read+0x9a>
      return HAL_ERROR;
 80088b6:	2501      	movs	r5, #1
 80088b8:	e7c2      	b.n	8008840 <HAL_I2C_Mem_Read+0x20>
    if (hi2c->XferSize == 0U)
 80088ba:	8d22      	ldrh	r2, [r4, #40]	; 0x28
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80088bc:	6823      	ldr	r3, [r4, #0]
    if (hi2c->XferSize == 0U)
 80088be:	b9b2      	cbnz	r2, 80088ee <HAL_I2C_Mem_Read+0xce>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80088c0:	9002      	str	r0, [sp, #8]
 80088c2:	695a      	ldr	r2, [r3, #20]
 80088c4:	9202      	str	r2, [sp, #8]
 80088c6:	699a      	ldr	r2, [r3, #24]
 80088c8:	9202      	str	r2, [sp, #8]
 80088ca:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80088cc:	681a      	ldr	r2, [r3, #0]
 80088ce:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80088d2:	601a      	str	r2, [r3, #0]
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 80088d4:	f8df 8154 	ldr.w	r8, [pc, #340]	; 8008a2c <HAL_I2C_Mem_Read+0x20c>
    while (hi2c->XferSize > 0U)
 80088d8:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 80088da:	2b00      	cmp	r3, #0
 80088dc:	d12c      	bne.n	8008938 <HAL_I2C_Mem_Read+0x118>
    hi2c->State = HAL_I2C_STATE_READY;
 80088de:	2220      	movs	r2, #32
 80088e0:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 80088e4:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 80088e8:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    return HAL_OK;
 80088ec:	e7a8      	b.n	8008840 <HAL_I2C_Mem_Read+0x20>
    else if (hi2c->XferSize == 1U)
 80088ee:	2a01      	cmp	r2, #1
 80088f0:	d10a      	bne.n	8008908 <HAL_I2C_Mem_Read+0xe8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80088f2:	681a      	ldr	r2, [r3, #0]
 80088f4:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80088f8:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80088fa:	9003      	str	r0, [sp, #12]
 80088fc:	695a      	ldr	r2, [r3, #20]
 80088fe:	9203      	str	r2, [sp, #12]
 8008900:	699a      	ldr	r2, [r3, #24]
 8008902:	9203      	str	r2, [sp, #12]
 8008904:	9a03      	ldr	r2, [sp, #12]
 8008906:	e7e1      	b.n	80088cc <HAL_I2C_Mem_Read+0xac>
    else if (hi2c->XferSize == 2U)
 8008908:	2a02      	cmp	r2, #2
 800890a:	d10e      	bne.n	800892a <HAL_I2C_Mem_Read+0x10a>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800890c:	681a      	ldr	r2, [r3, #0]
 800890e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8008912:	601a      	str	r2, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8008914:	681a      	ldr	r2, [r3, #0]
 8008916:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800891a:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800891c:	9004      	str	r0, [sp, #16]
 800891e:	695a      	ldr	r2, [r3, #20]
 8008920:	9204      	str	r2, [sp, #16]
 8008922:	699b      	ldr	r3, [r3, #24]
 8008924:	9304      	str	r3, [sp, #16]
 8008926:	9b04      	ldr	r3, [sp, #16]
 8008928:	e7d4      	b.n	80088d4 <HAL_I2C_Mem_Read+0xb4>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800892a:	9005      	str	r0, [sp, #20]
 800892c:	695a      	ldr	r2, [r3, #20]
 800892e:	9205      	str	r2, [sp, #20]
 8008930:	699b      	ldr	r3, [r3, #24]
 8008932:	9305      	str	r3, [sp, #20]
 8008934:	9b05      	ldr	r3, [sp, #20]
 8008936:	e7cd      	b.n	80088d4 <HAL_I2C_Mem_Read+0xb4>
      if (hi2c->XferSize <= 3U)
 8008938:	2b03      	cmp	r3, #3
 800893a:	d856      	bhi.n	80089ea <HAL_I2C_Mem_Read+0x1ca>
        if (hi2c->XferSize == 1U)
 800893c:	2b01      	cmp	r3, #1
 800893e:	d115      	bne.n	800896c <HAL_I2C_Mem_Read+0x14c>
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8008940:	4632      	mov	r2, r6
 8008942:	4639      	mov	r1, r7
 8008944:	4620      	mov	r0, r4
 8008946:	f7ff fcdd 	bl	8008304 <I2C_WaitOnRXNEFlagUntilTimeout>
 800894a:	2800      	cmp	r0, #0
 800894c:	d1b3      	bne.n	80088b6 <HAL_I2C_Mem_Read+0x96>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800894e:	6823      	ldr	r3, [r4, #0]
 8008950:	691a      	ldr	r2, [r3, #16]
 8008952:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8008954:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8008956:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8008958:	3301      	adds	r3, #1
 800895a:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800895c:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800895e:	3b01      	subs	r3, #1
 8008960:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8008962:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8008964:	3b01      	subs	r3, #1
 8008966:	b29b      	uxth	r3, r3
 8008968:	8563      	strh	r3, [r4, #42]	; 0x2a
 800896a:	e7b5      	b.n	80088d8 <HAL_I2C_Mem_Read+0xb8>
        else if (hi2c->XferSize == 2U)
 800896c:	2b02      	cmp	r3, #2
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800896e:	9600      	str	r6, [sp, #0]
 8008970:	463b      	mov	r3, r7
 8008972:	f04f 0200 	mov.w	r2, #0
 8008976:	4641      	mov	r1, r8
 8008978:	4620      	mov	r0, r4
        else if (hi2c->XferSize == 2U)
 800897a:	d119      	bne.n	80089b0 <HAL_I2C_Mem_Read+0x190>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800897c:	f7ff fc55 	bl	800822a <I2C_WaitOnFlagUntilTimeout>
 8008980:	2800      	cmp	r0, #0
 8008982:	d198      	bne.n	80088b6 <HAL_I2C_Mem_Read+0x96>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8008984:	6823      	ldr	r3, [r4, #0]
 8008986:	681a      	ldr	r2, [r3, #0]
 8008988:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800898c:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800898e:	691a      	ldr	r2, [r3, #16]
 8008990:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8008992:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8008994:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8008996:	1c53      	adds	r3, r2, #1
 8008998:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800899a:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800899c:	3b01      	subs	r3, #1
 800899e:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 80089a0:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80089a2:	3b01      	subs	r3, #1
 80089a4:	b29b      	uxth	r3, r3
 80089a6:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80089a8:	6823      	ldr	r3, [r4, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80089aa:	691b      	ldr	r3, [r3, #16]
 80089ac:	7053      	strb	r3, [r2, #1]
 80089ae:	e7d2      	b.n	8008956 <HAL_I2C_Mem_Read+0x136>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 80089b0:	f7ff fc3b 	bl	800822a <I2C_WaitOnFlagUntilTimeout>
 80089b4:	2800      	cmp	r0, #0
 80089b6:	f47f af7e 	bne.w	80088b6 <HAL_I2C_Mem_Read+0x96>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80089ba:	6823      	ldr	r3, [r4, #0]
 80089bc:	681a      	ldr	r2, [r3, #0]
 80089be:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80089c2:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80089c4:	691a      	ldr	r2, [r3, #16]
 80089c6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80089c8:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 80089ca:	6a63      	ldr	r3, [r4, #36]	; 0x24
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 80089cc:	9600      	str	r6, [sp, #0]
          hi2c->pBuffPtr++;
 80089ce:	3301      	adds	r3, #1
 80089d0:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 80089d2:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 80089d4:	3b01      	subs	r3, #1
 80089d6:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 80089d8:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80089da:	3b01      	subs	r3, #1
 80089dc:	b29b      	uxth	r3, r3
 80089de:	8563      	strh	r3, [r4, #42]	; 0x2a
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 80089e0:	4602      	mov	r2, r0
 80089e2:	463b      	mov	r3, r7
 80089e4:	4641      	mov	r1, r8
 80089e6:	4620      	mov	r0, r4
 80089e8:	e7c8      	b.n	800897c <HAL_I2C_Mem_Read+0x15c>
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80089ea:	4632      	mov	r2, r6
 80089ec:	4639      	mov	r1, r7
 80089ee:	4620      	mov	r0, r4
 80089f0:	f7ff fc88 	bl	8008304 <I2C_WaitOnRXNEFlagUntilTimeout>
 80089f4:	2800      	cmp	r0, #0
 80089f6:	f47f af5e 	bne.w	80088b6 <HAL_I2C_Mem_Read+0x96>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80089fa:	6823      	ldr	r3, [r4, #0]
 80089fc:	691a      	ldr	r2, [r3, #16]
 80089fe:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8008a00:	701a      	strb	r2, [r3, #0]
        hi2c->pBuffPtr++;
 8008a02:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8008a04:	1c53      	adds	r3, r2, #1
 8008a06:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferSize--;
 8008a08:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8008a0a:	3b01      	subs	r3, #1
 8008a0c:	8523      	strh	r3, [r4, #40]	; 0x28
        hi2c->XferCount--;
 8008a0e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8008a10:	3b01      	subs	r3, #1
 8008a12:	b29b      	uxth	r3, r3
 8008a14:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8008a16:	6823      	ldr	r3, [r4, #0]
 8008a18:	6959      	ldr	r1, [r3, #20]
 8008a1a:	0749      	lsls	r1, r1, #29
 8008a1c:	f57f af5c 	bpl.w	80088d8 <HAL_I2C_Mem_Read+0xb8>
 8008a20:	e7c3      	b.n	80089aa <HAL_I2C_Mem_Read+0x18a>
 8008a22:	bf00      	nop
 8008a24:	00100002 	.word	0x00100002
 8008a28:	ffff0000 	.word	0xffff0000
 8008a2c:	00010004 	.word	0x00010004

08008a30 <HAL_I2CEx_ConfigAnalogFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  AnalogFilter new state of the Analog filter.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigAnalogFilter(I2C_HandleTypeDef *hi2c, uint32_t AnalogFilter)
{
 8008a30:	b510      	push	{r4, lr}
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8008a32:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8008a36:	2b20      	cmp	r3, #32
 8008a38:	b2dc      	uxtb	r4, r3
 8008a3a:	d116      	bne.n	8008a6a <HAL_I2CEx_ConfigAnalogFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;
 8008a3c:	2324      	movs	r3, #36	; 0x24
 8008a3e:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8008a42:	6803      	ldr	r3, [r0, #0]
 8008a44:	681a      	ldr	r2, [r3, #0]
 8008a46:	f022 0201 	bic.w	r2, r2, #1
 8008a4a:	601a      	str	r2, [r3, #0]

    /* Reset I2Cx ANOFF bit */
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 8008a4c:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8008a4e:	f022 0210 	bic.w	r2, r2, #16
 8008a52:	625a      	str	r2, [r3, #36]	; 0x24

    /* Disable the analog filter */
    hi2c->Instance->FLTR |= AnalogFilter;
 8008a54:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8008a56:	4311      	orrs	r1, r2
 8008a58:	6259      	str	r1, [r3, #36]	; 0x24

    __HAL_I2C_ENABLE(hi2c);
 8008a5a:	681a      	ldr	r2, [r3, #0]
 8008a5c:	f042 0201 	orr.w	r2, r2, #1
 8008a60:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 8008a62:	f880 403d 	strb.w	r4, [r0, #61]	; 0x3d

    return HAL_OK;
 8008a66:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 8008a68:	bd10      	pop	{r4, pc}
    return HAL_BUSY;
 8008a6a:	2002      	movs	r0, #2
 8008a6c:	e7fc      	b.n	8008a68 <HAL_I2CEx_ConfigAnalogFilter+0x38>

08008a6e <HAL_I2CEx_ConfigDigitalFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  DigitalFilter Coefficient of digital noise filter between 0x00 and 0x0F.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigDigitalFilter(I2C_HandleTypeDef *hi2c, uint32_t DigitalFilter)
{
 8008a6e:	b530      	push	{r4, r5, lr}

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8008a70:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8008a74:	2b20      	cmp	r3, #32
 8008a76:	b2dc      	uxtb	r4, r3
 8008a78:	d116      	bne.n	8008aa8 <HAL_I2CEx_ConfigDigitalFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8008a7a:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 8008a7c:	2324      	movs	r3, #36	; 0x24
 8008a7e:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 8008a82:	6813      	ldr	r3, [r2, #0]
 8008a84:	f023 0301 	bic.w	r3, r3, #1
 8008a88:	6013      	str	r3, [r2, #0]

    /* Get the old register value */
    tmpreg = hi2c->Instance->FLTR;
 8008a8a:	6a55      	ldr	r5, [r2, #36]	; 0x24

    /* Reset I2Cx DNF bit [3:0] */
    tmpreg &= ~(I2C_FLTR_DNF);
 8008a8c:	f64f 73f0 	movw	r3, #65520	; 0xfff0
 8008a90:	402b      	ands	r3, r5

    /* Set I2Cx DNF coefficient */
    tmpreg |= DigitalFilter;
 8008a92:	430b      	orrs	r3, r1

    /* Store the new register value */
    hi2c->Instance->FLTR = tmpreg;
 8008a94:	b29b      	uxth	r3, r3
 8008a96:	6253      	str	r3, [r2, #36]	; 0x24

    __HAL_I2C_ENABLE(hi2c);
 8008a98:	6813      	ldr	r3, [r2, #0]
 8008a9a:	f043 0301 	orr.w	r3, r3, #1
 8008a9e:	6013      	str	r3, [r2, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 8008aa0:	f880 403d 	strb.w	r4, [r0, #61]	; 0x3d

    return HAL_OK;
 8008aa4:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 8008aa6:	bd30      	pop	{r4, r5, pc}
    return HAL_BUSY;
 8008aa8:	2002      	movs	r0, #2
 8008aaa:	e7fc      	b.n	8008aa6 <HAL_I2CEx_ConfigDigitalFilter+0x38>

08008aac <LTDC_SetConfig>:
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8008aac:	6800      	ldr	r0, [r0, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8008aae:	f8d1 c000 	ldr.w	ip, [r1]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8008ab2:	01d2      	lsls	r2, r2, #7
 8008ab4:	3284      	adds	r2, #132	; 0x84
 8008ab6:	1883      	adds	r3, r0, r2
{
 8008ab8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8008abc:	68c6      	ldr	r6, [r0, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8008abe:	685d      	ldr	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8008ac0:	684c      	ldr	r4, [r1, #4]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 8008ac2:	f8d1 9018 	ldr.w	r9, [r1, #24]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8008ac6:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
 8008aca:	605d      	str	r5, [r3, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8008acc:	68c5      	ldr	r5, [r0, #12]
 8008ace:	f10c 0701 	add.w	r7, ip, #1
 8008ad2:	f3c5 450b 	ubfx	r5, r5, #16, #12
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8008ad6:	f3c6 460b 	ubfx	r6, r6, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8008ada:	443d      	add	r5, r7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8008adc:	4426      	add	r6, r4
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8008ade:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
 8008ae2:	605d      	str	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 8008ae4:	68c5      	ldr	r5, [r0, #12]
 8008ae6:	68ce      	ldr	r6, [r1, #12]
 8008ae8:	f3c5 050a 	ubfx	r5, r5, #0, #11
 8008aec:	442e      	add	r6, r5
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 8008aee:	689d      	ldr	r5, [r3, #8]
 8008af0:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
 8008af4:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 8008af6:	68c7      	ldr	r7, [r0, #12]
 8008af8:	688d      	ldr	r5, [r1, #8]
 8008afa:	f3c7 070a 	ubfx	r7, r7, #0, #11
 8008afe:	3501      	adds	r5, #1
 8008b00:	443d      	add	r5, r7
 8008b02:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
 8008b06:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8008b08:	691d      	ldr	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8008b0a:	690e      	ldr	r6, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8008b0c:	f025 0507 	bic.w	r5, r5, #7
 8008b10:	611d      	str	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 8008b12:	f04f 0e00 	mov.w	lr, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8008b16:	611e      	str	r6, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 8008b18:	699d      	ldr	r5, [r3, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 8008b1a:	f891 7032 	ldrb.w	r7, [r1, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 8008b1e:	f891 8031 	ldrb.w	r8, [r1, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 8008b22:	f8c3 e018 	str.w	lr, [r3, #24]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 8008b26:	f891 5030 	ldrb.w	r5, [r1, #48]	; 0x30
 8008b2a:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
 8008b2e:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
 8008b32:	ea45 4507 	orr.w	r5, r5, r7, lsl #16
 8008b36:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 8008b38:	695d      	ldr	r5, [r3, #20]
 8008b3a:	f025 05ff 	bic.w	r5, r5, #255	; 0xff
 8008b3e:	615d      	str	r5, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 8008b40:	694d      	ldr	r5, [r1, #20]
 8008b42:	615d      	str	r5, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 8008b44:	69dd      	ldr	r5, [r3, #28]
 8008b46:	f425 65e0 	bic.w	r5, r5, #1792	; 0x700
 8008b4a:	f025 0507 	bic.w	r5, r5, #7
 8008b4e:	61dd      	str	r5, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 8008b50:	e9d1 5707 	ldrd	r5, r7, [r1, #28]
 8008b54:	433d      	orrs	r5, r7
 8008b56:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8008b58:	6a9d      	ldr	r5, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8008b5a:	6a4d      	ldr	r5, [r1, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8008b5c:	f8c3 e028 	str.w	lr, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8008b60:	629d      	str	r5, [r3, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 8008b62:	b31e      	cbz	r6, 8008bac <LTDC_SetConfig+0x100>
  {
    tmp = 4U;
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 8008b64:	2e01      	cmp	r6, #1
 8008b66:	d023      	beq.n	8008bb0 <LTDC_SetConfig+0x104>
  {
    tmp = 3U;
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 8008b68:	1eb5      	subs	r5, r6, #2
 8008b6a:	2d02      	cmp	r5, #2
 8008b6c:	d922      	bls.n	8008bb4 <LTDC_SetConfig+0x108>
  {
    tmp = 2U;
  }
  else
  {
    tmp = 1U;
 8008b6e:	2e07      	cmp	r6, #7
 8008b70:	bf0c      	ite	eq
 8008b72:	2502      	moveq	r5, #2
 8008b74:	2501      	movne	r5, #1
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 8008b76:	6ade      	ldr	r6, [r3, #44]	; 0x2c
 8008b78:	f006 26e0 	and.w	r6, r6, #3758153728	; 0xe000e000
 8008b7c:	62de      	str	r6, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8008b7e:	eba4 040c 	sub.w	r4, r4, ip
 8008b82:	6a8e      	ldr	r6, [r1, #40]	; 0x28
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8008b84:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8008b86:	436c      	muls	r4, r5
 8008b88:	436e      	muls	r6, r5
 8008b8a:	3403      	adds	r4, #3
 8008b8c:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
 8008b90:	62dc      	str	r4, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 8008b92:	6b1c      	ldr	r4, [r3, #48]	; 0x30
 8008b94:	f424 64ff 	bic.w	r4, r4, #2040	; 0x7f8
 8008b98:	f024 0407 	bic.w	r4, r4, #7
 8008b9c:	631c      	str	r4, [r3, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8008b9e:	6319      	str	r1, [r3, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 8008ba0:	5883      	ldr	r3, [r0, r2]
 8008ba2:	f043 0301 	orr.w	r3, r3, #1
 8008ba6:	5083      	str	r3, [r0, r2]
}
 8008ba8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    tmp = 4U;
 8008bac:	2504      	movs	r5, #4
 8008bae:	e7e2      	b.n	8008b76 <LTDC_SetConfig+0xca>
    tmp = 3U;
 8008bb0:	2503      	movs	r5, #3
 8008bb2:	e7e0      	b.n	8008b76 <LTDC_SetConfig+0xca>
    tmp = 2U;
 8008bb4:	2502      	movs	r5, #2
 8008bb6:	e7de      	b.n	8008b76 <LTDC_SetConfig+0xca>

08008bb8 <HAL_LTDC_Init>:
{
 8008bb8:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 8008bba:	4604      	mov	r4, r0
 8008bbc:	2800      	cmp	r0, #0
 8008bbe:	d063      	beq.n	8008c88 <HAL_LTDC_Init+0xd0>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 8008bc0:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 8008bc4:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8008bc8:	b91b      	cbnz	r3, 8008bd2 <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 8008bca:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 8008bce:	f7f9 f813 	bl	8001bf8 <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8008bd2:	2302      	movs	r3, #2
 8008bd4:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 8008bd8:	6823      	ldr	r3, [r4, #0]
 8008bda:	699a      	ldr	r2, [r3, #24]
 8008bdc:	f022 4270 	bic.w	r2, r2, #4026531840	; 0xf0000000
 8008be0:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8008be2:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 8008be6:	4302      	orrs	r2, r0
 8008be8:	68e0      	ldr	r0, [r4, #12]
 8008bea:	6999      	ldr	r1, [r3, #24]
 8008bec:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 8008bee:	6920      	ldr	r0, [r4, #16]
 8008bf0:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8008bf2:	430a      	orrs	r2, r1
 8008bf4:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8008bf6:	689a      	ldr	r2, [r3, #8]
 8008bf8:	4924      	ldr	r1, [pc, #144]	; (8008c8c <HAL_LTDC_Init+0xd4>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 8008bfa:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8008bfc:	400a      	ands	r2, r1
 8008bfe:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 8008c00:	689a      	ldr	r2, [r3, #8]
 8008c02:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8008c06:	69a0      	ldr	r0, [r4, #24]
 8008c08:	4302      	orrs	r2, r0
 8008c0a:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8008c0c:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 8008c0e:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8008c10:	400a      	ands	r2, r1
 8008c12:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 8008c14:	68da      	ldr	r2, [r3, #12]
 8008c16:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8008c1a:	6a20      	ldr	r0, [r4, #32]
 8008c1c:	4302      	orrs	r2, r0
 8008c1e:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8008c20:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 8008c22:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8008c24:	400a      	ands	r2, r1
 8008c26:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 8008c28:	691a      	ldr	r2, [r3, #16]
 8008c2a:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8008c2e:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8008c30:	4302      	orrs	r2, r0
 8008c32:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 8008c34:	695a      	ldr	r2, [r3, #20]
 8008c36:	4011      	ands	r1, r2
 8008c38:	6159      	str	r1, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 8008c3a:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 8008c3c:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 8008c3e:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8008c42:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8008c44:	430a      	orrs	r2, r1
 8008c46:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8008c48:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 8008c4a:	f894 0036 	ldrb.w	r0, [r4, #54]	; 0x36
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 8008c4e:	f894 5035 	ldrb.w	r5, [r4, #53]	; 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8008c52:	f001 417f 	and.w	r1, r1, #4278190080	; 0xff000000
 8008c56:	62d9      	str	r1, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 8008c58:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8008c5a:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 8008c5e:	430a      	orrs	r2, r1
 8008c60:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 8008c64:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8008c68:	62da      	str	r2, [r3, #44]	; 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 8008c6a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8008c6c:	f042 0206 	orr.w	r2, r2, #6
 8008c70:	635a      	str	r2, [r3, #52]	; 0x34
  __HAL_LTDC_ENABLE(hltdc);
 8008c72:	699a      	ldr	r2, [r3, #24]
 8008c74:	f042 0201 	orr.w	r2, r2, #1
 8008c78:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8008c7a:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 8008c7c:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8008c7e:	f8c4 00a4 	str.w	r0, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 8008c82:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
}
 8008c86:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8008c88:	2001      	movs	r0, #1
 8008c8a:	e7fc      	b.n	8008c86 <HAL_LTDC_Init+0xce>
 8008c8c:	f000f800 	.word	0xf000f800

08008c90 <HAL_LTDC_ErrorCallback>:
 8008c90:	4770      	bx	lr

08008c92 <HAL_LTDC_ReloadEventCallback>:
 8008c92:	4770      	bx	lr

08008c94 <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8008c94:	6803      	ldr	r3, [r0, #0]
{
 8008c96:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8008c98:	6b9e      	ldr	r6, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 8008c9a:	6b5d      	ldr	r5, [r3, #52]	; 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 8008c9c:	0772      	lsls	r2, r6, #29
{
 8008c9e:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 8008ca0:	d514      	bpl.n	8008ccc <HAL_LTDC_IRQHandler+0x38>
 8008ca2:	0769      	lsls	r1, r5, #29
 8008ca4:	d512      	bpl.n	8008ccc <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 8008ca6:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8008ca8:	f022 0204 	bic.w	r2, r2, #4
 8008cac:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 8008cae:	2204      	movs	r2, #4
 8008cb0:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 8008cb2:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 8008cb6:	f043 0301 	orr.w	r3, r3, #1
 8008cba:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 8008cbe:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8008cc0:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8008cc4:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8008cc8:	f7ff ffe2 	bl	8008c90 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 8008ccc:	07b2      	lsls	r2, r6, #30
 8008cce:	d516      	bpl.n	8008cfe <HAL_LTDC_IRQHandler+0x6a>
 8008cd0:	07ab      	lsls	r3, r5, #30
 8008cd2:	d514      	bpl.n	8008cfe <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 8008cd4:	6823      	ldr	r3, [r4, #0]
 8008cd6:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8008cd8:	f022 0202 	bic.w	r2, r2, #2
 8008cdc:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 8008cde:	2202      	movs	r2, #2
 8008ce0:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 8008ce2:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 8008ce6:	4313      	orrs	r3, r2
 8008ce8:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8008cec:	2304      	movs	r3, #4
 8008cee:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8008cf2:	2300      	movs	r3, #0
 8008cf4:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8008cf8:	4620      	mov	r0, r4
 8008cfa:	f7ff ffc9 	bl	8008c90 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 8008cfe:	07f0      	lsls	r0, r6, #31
 8008d00:	d510      	bpl.n	8008d24 <HAL_LTDC_IRQHandler+0x90>
 8008d02:	07e9      	lsls	r1, r5, #31
 8008d04:	d50e      	bpl.n	8008d24 <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8008d06:	6823      	ldr	r3, [r4, #0]
 8008d08:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8008d0a:	f022 0201 	bic.w	r2, r2, #1
 8008d0e:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 8008d10:	2201      	movs	r2, #1
 8008d12:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 8008d14:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 8008d16:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8008d1a:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 8008d1e:	4620      	mov	r0, r4
 8008d20:	f7f8 f9f6 	bl	8001110 <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 8008d24:	0732      	lsls	r2, r6, #28
 8008d26:	d511      	bpl.n	8008d4c <HAL_LTDC_IRQHandler+0xb8>
 8008d28:	072b      	lsls	r3, r5, #28
 8008d2a:	d50f      	bpl.n	8008d4c <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 8008d2c:	6823      	ldr	r3, [r4, #0]
 8008d2e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8008d30:	f022 0208 	bic.w	r2, r2, #8
 8008d34:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 8008d36:	2208      	movs	r2, #8
 8008d38:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 8008d3a:	2301      	movs	r3, #1
 8008d3c:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8008d40:	2300      	movs	r3, #0
 8008d42:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 8008d46:	4620      	mov	r0, r4
 8008d48:	f7ff ffa3 	bl	8008c92 <HAL_LTDC_ReloadEventCallback>
}
 8008d4c:	bd70      	pop	{r4, r5, r6, pc}

08008d4e <HAL_LTDC_ConfigLayer>:
{
 8008d4e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __HAL_LOCK(hltdc);
 8008d52:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 8008d56:	2b01      	cmp	r3, #1
{
 8008d58:	4606      	mov	r6, r0
 8008d5a:	460f      	mov	r7, r1
 8008d5c:	4694      	mov	ip, r2
 8008d5e:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 8008d62:	d01f      	beq.n	8008da4 <HAL_LTDC_ConfigLayer+0x56>
 8008d64:	f04f 0801 	mov.w	r8, #1
 8008d68:	f886 80a0 	strb.w	r8, [r6, #160]	; 0xa0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8008d6c:	f886 00a1 	strb.w	r0, [r6, #161]	; 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8008d70:	2434      	movs	r4, #52	; 0x34
 8008d72:	460d      	mov	r5, r1
 8008d74:	fb04 6402 	mla	r4, r4, r2, r6
 8008d78:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8008d7a:	3438      	adds	r4, #56	; 0x38
 8008d7c:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8008d7e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8008d80:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8008d82:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8008d84:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8008d86:	682b      	ldr	r3, [r5, #0]
 8008d88:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 8008d8a:	4630      	mov	r0, r6
 8008d8c:	4662      	mov	r2, ip
 8008d8e:	4639      	mov	r1, r7
 8008d90:	f7ff fe8c 	bl	8008aac <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8008d94:	6833      	ldr	r3, [r6, #0]
  __HAL_UNLOCK(hltdc);
 8008d96:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8008d98:	f8c3 8024 	str.w	r8, [r3, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 8008d9c:	f886 80a1 	strb.w	r8, [r6, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 8008da0:	f886 00a0 	strb.w	r0, [r6, #160]	; 0xa0
}
 8008da4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08008da8 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 8008da8:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 8008dac:	2b01      	cmp	r3, #1
 8008dae:	f04f 0302 	mov.w	r3, #2
 8008db2:	d012      	beq.n	8008dda <HAL_LTDC_ProgramLineEvent+0x32>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8008db4:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8008db8:	6803      	ldr	r3, [r0, #0]
 8008dba:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8008dbc:	f022 0201 	bic.w	r2, r2, #1
 8008dc0:	635a      	str	r2, [r3, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 8008dc2:	4a07      	ldr	r2, [pc, #28]	; (8008de0 <HAL_LTDC_ProgramLineEvent+0x38>)
 8008dc4:	6411      	str	r1, [r2, #64]	; 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 8008dc6:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8008dc8:	f042 0201 	orr.w	r2, r2, #1
 8008dcc:	635a      	str	r2, [r3, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
 8008dce:	2301      	movs	r3, #1
 8008dd0:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 8008dd4:	2300      	movs	r3, #0
 8008dd6:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
  __HAL_LOCK(hltdc);
 8008dda:	4618      	mov	r0, r3
}
 8008ddc:	4770      	bx	lr
 8008dde:	bf00      	nop
 8008de0:	40016800 	.word	0x40016800

08008de4 <HAL_RCC_OscConfig>:
  *         supported by this API. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8008de4:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 8008de8:	4604      	mov	r4, r0
 8008dea:	b340      	cbz	r0, 8008e3e <HAL_RCC_OscConfig+0x5a>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8008dec:	6803      	ldr	r3, [r0, #0]
 8008dee:	07dd      	lsls	r5, r3, #31
 8008df0:	d410      	bmi.n	8008e14 <HAL_RCC_OscConfig+0x30>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8008df2:	6823      	ldr	r3, [r4, #0]
 8008df4:	0798      	lsls	r0, r3, #30
 8008df6:	d45e      	bmi.n	8008eb6 <HAL_RCC_OscConfig+0xd2>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8008df8:	6823      	ldr	r3, [r4, #0]
 8008dfa:	071a      	lsls	r2, r3, #28
 8008dfc:	f100 80a0 	bmi.w	8008f40 <HAL_RCC_OscConfig+0x15c>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8008e00:	6823      	ldr	r3, [r4, #0]
 8008e02:	075b      	lsls	r3, r3, #29
 8008e04:	f100 80c0 	bmi.w	8008f88 <HAL_RCC_OscConfig+0x1a4>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8008e08:	69a0      	ldr	r0, [r4, #24]
 8008e0a:	2800      	cmp	r0, #0
 8008e0c:	f040 8128 	bne.w	8009060 <HAL_RCC_OscConfig+0x27c>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 8008e10:	2000      	movs	r0, #0
 8008e12:	e02b      	b.n	8008e6c <HAL_RCC_OscConfig+0x88>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 8008e14:	4b8f      	ldr	r3, [pc, #572]	; (8009054 <HAL_RCC_OscConfig+0x270>)
 8008e16:	689a      	ldr	r2, [r3, #8]
 8008e18:	f002 020c 	and.w	r2, r2, #12
 8008e1c:	2a04      	cmp	r2, #4
 8008e1e:	d007      	beq.n	8008e30 <HAL_RCC_OscConfig+0x4c>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8008e20:	689a      	ldr	r2, [r3, #8]
 8008e22:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 8008e26:	2a08      	cmp	r2, #8
 8008e28:	d10b      	bne.n	8008e42 <HAL_RCC_OscConfig+0x5e>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8008e2a:	685a      	ldr	r2, [r3, #4]
 8008e2c:	0251      	lsls	r1, r2, #9
 8008e2e:	d508      	bpl.n	8008e42 <HAL_RCC_OscConfig+0x5e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8008e30:	4b88      	ldr	r3, [pc, #544]	; (8009054 <HAL_RCC_OscConfig+0x270>)
 8008e32:	681b      	ldr	r3, [r3, #0]
 8008e34:	039a      	lsls	r2, r3, #14
 8008e36:	d5dc      	bpl.n	8008df2 <HAL_RCC_OscConfig+0xe>
 8008e38:	6863      	ldr	r3, [r4, #4]
 8008e3a:	2b00      	cmp	r3, #0
 8008e3c:	d1d9      	bne.n	8008df2 <HAL_RCC_OscConfig+0xe>
          return HAL_ERROR;
 8008e3e:	2001      	movs	r0, #1
 8008e40:	e014      	b.n	8008e6c <HAL_RCC_OscConfig+0x88>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8008e42:	6862      	ldr	r2, [r4, #4]
 8008e44:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
 8008e48:	d113      	bne.n	8008e72 <HAL_RCC_OscConfig+0x8e>
 8008e4a:	681a      	ldr	r2, [r3, #0]
 8008e4c:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8008e50:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8008e52:	f7fe fcef 	bl	8007834 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8008e56:	4e7f      	ldr	r6, [pc, #508]	; (8009054 <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 8008e58:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8008e5a:	6833      	ldr	r3, [r6, #0]
 8008e5c:	039b      	lsls	r3, r3, #14
 8008e5e:	d4c8      	bmi.n	8008df2 <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8008e60:	f7fe fce8 	bl	8007834 <HAL_GetTick>
 8008e64:	1b40      	subs	r0, r0, r5
 8008e66:	2864      	cmp	r0, #100	; 0x64
 8008e68:	d9f7      	bls.n	8008e5a <HAL_RCC_OscConfig+0x76>
            return HAL_TIMEOUT;
 8008e6a:	2003      	movs	r0, #3
}
 8008e6c:	b002      	add	sp, #8
 8008e6e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8008e72:	4d78      	ldr	r5, [pc, #480]	; (8009054 <HAL_RCC_OscConfig+0x270>)
 8008e74:	f5b2 2fa0 	cmp.w	r2, #327680	; 0x50000
 8008e78:	682b      	ldr	r3, [r5, #0]
 8008e7a:	d107      	bne.n	8008e8c <HAL_RCC_OscConfig+0xa8>
 8008e7c:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8008e80:	602b      	str	r3, [r5, #0]
 8008e82:	682b      	ldr	r3, [r5, #0]
 8008e84:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8008e88:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 8008e8a:	e7e2      	b.n	8008e52 <HAL_RCC_OscConfig+0x6e>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8008e8c:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8008e90:	602b      	str	r3, [r5, #0]
 8008e92:	682b      	ldr	r3, [r5, #0]
 8008e94:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8008e98:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 8008e9a:	2a00      	cmp	r2, #0
 8008e9c:	d1d9      	bne.n	8008e52 <HAL_RCC_OscConfig+0x6e>
        tickstart = HAL_GetTick();
 8008e9e:	f7fe fcc9 	bl	8007834 <HAL_GetTick>
 8008ea2:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8008ea4:	682b      	ldr	r3, [r5, #0]
 8008ea6:	039f      	lsls	r7, r3, #14
 8008ea8:	d5a3      	bpl.n	8008df2 <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8008eaa:	f7fe fcc3 	bl	8007834 <HAL_GetTick>
 8008eae:	1b80      	subs	r0, r0, r6
 8008eb0:	2864      	cmp	r0, #100	; 0x64
 8008eb2:	d9f7      	bls.n	8008ea4 <HAL_RCC_OscConfig+0xc0>
 8008eb4:	e7d9      	b.n	8008e6a <HAL_RCC_OscConfig+0x86>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 8008eb6:	4b67      	ldr	r3, [pc, #412]	; (8009054 <HAL_RCC_OscConfig+0x270>)
 8008eb8:	689a      	ldr	r2, [r3, #8]
 8008eba:	f012 0f0c 	tst.w	r2, #12
 8008ebe:	d007      	beq.n	8008ed0 <HAL_RCC_OscConfig+0xec>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8008ec0:	689a      	ldr	r2, [r3, #8]
 8008ec2:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 8008ec6:	2a08      	cmp	r2, #8
 8008ec8:	d111      	bne.n	8008eee <HAL_RCC_OscConfig+0x10a>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8008eca:	685b      	ldr	r3, [r3, #4]
 8008ecc:	025e      	lsls	r6, r3, #9
 8008ece:	d40e      	bmi.n	8008eee <HAL_RCC_OscConfig+0x10a>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8008ed0:	4a60      	ldr	r2, [pc, #384]	; (8009054 <HAL_RCC_OscConfig+0x270>)
 8008ed2:	6813      	ldr	r3, [r2, #0]
 8008ed4:	079d      	lsls	r5, r3, #30
 8008ed6:	d502      	bpl.n	8008ede <HAL_RCC_OscConfig+0xfa>
 8008ed8:	68e3      	ldr	r3, [r4, #12]
 8008eda:	2b01      	cmp	r3, #1
 8008edc:	d1af      	bne.n	8008e3e <HAL_RCC_OscConfig+0x5a>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8008ede:	6813      	ldr	r3, [r2, #0]
 8008ee0:	6921      	ldr	r1, [r4, #16]
 8008ee2:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 8008ee6:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8008eea:	6013      	str	r3, [r2, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8008eec:	e784      	b.n	8008df8 <HAL_RCC_OscConfig+0x14>
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 8008eee:	68e2      	ldr	r2, [r4, #12]
 8008ef0:	4b59      	ldr	r3, [pc, #356]	; (8009058 <HAL_RCC_OscConfig+0x274>)
 8008ef2:	b1b2      	cbz	r2, 8008f22 <HAL_RCC_OscConfig+0x13e>
        __HAL_RCC_HSI_ENABLE();
 8008ef4:	2201      	movs	r2, #1
 8008ef6:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8008ef8:	f7fe fc9c 	bl	8007834 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8008efc:	4d55      	ldr	r5, [pc, #340]	; (8009054 <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 8008efe:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8008f00:	682b      	ldr	r3, [r5, #0]
 8008f02:	0798      	lsls	r0, r3, #30
 8008f04:	d507      	bpl.n	8008f16 <HAL_RCC_OscConfig+0x132>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8008f06:	682b      	ldr	r3, [r5, #0]
 8008f08:	6922      	ldr	r2, [r4, #16]
 8008f0a:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 8008f0e:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8008f12:	602b      	str	r3, [r5, #0]
 8008f14:	e770      	b.n	8008df8 <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8008f16:	f7fe fc8d 	bl	8007834 <HAL_GetTick>
 8008f1a:	1b80      	subs	r0, r0, r6
 8008f1c:	2802      	cmp	r0, #2
 8008f1e:	d9ef      	bls.n	8008f00 <HAL_RCC_OscConfig+0x11c>
 8008f20:	e7a3      	b.n	8008e6a <HAL_RCC_OscConfig+0x86>
        __HAL_RCC_HSI_DISABLE();
 8008f22:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8008f24:	f7fe fc86 	bl	8007834 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8008f28:	4e4a      	ldr	r6, [pc, #296]	; (8009054 <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 8008f2a:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8008f2c:	6833      	ldr	r3, [r6, #0]
 8008f2e:	0799      	lsls	r1, r3, #30
 8008f30:	f57f af62 	bpl.w	8008df8 <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8008f34:	f7fe fc7e 	bl	8007834 <HAL_GetTick>
 8008f38:	1b40      	subs	r0, r0, r5
 8008f3a:	2802      	cmp	r0, #2
 8008f3c:	d9f6      	bls.n	8008f2c <HAL_RCC_OscConfig+0x148>
 8008f3e:	e794      	b.n	8008e6a <HAL_RCC_OscConfig+0x86>
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 8008f40:	6962      	ldr	r2, [r4, #20]
 8008f42:	4b45      	ldr	r3, [pc, #276]	; (8009058 <HAL_RCC_OscConfig+0x274>)
 8008f44:	b182      	cbz	r2, 8008f68 <HAL_RCC_OscConfig+0x184>
      __HAL_RCC_LSI_ENABLE();
 8008f46:	2201      	movs	r2, #1
 8008f48:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 8008f4c:	f7fe fc72 	bl	8007834 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8008f50:	4e40      	ldr	r6, [pc, #256]	; (8009054 <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 8008f52:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8008f54:	6f73      	ldr	r3, [r6, #116]	; 0x74
 8008f56:	079f      	lsls	r7, r3, #30
 8008f58:	f53f af52 	bmi.w	8008e00 <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8008f5c:	f7fe fc6a 	bl	8007834 <HAL_GetTick>
 8008f60:	1b40      	subs	r0, r0, r5
 8008f62:	2802      	cmp	r0, #2
 8008f64:	d9f6      	bls.n	8008f54 <HAL_RCC_OscConfig+0x170>
 8008f66:	e780      	b.n	8008e6a <HAL_RCC_OscConfig+0x86>
      __HAL_RCC_LSI_DISABLE();
 8008f68:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 8008f6c:	f7fe fc62 	bl	8007834 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8008f70:	4e38      	ldr	r6, [pc, #224]	; (8009054 <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 8008f72:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8008f74:	6f73      	ldr	r3, [r6, #116]	; 0x74
 8008f76:	0798      	lsls	r0, r3, #30
 8008f78:	f57f af42 	bpl.w	8008e00 <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8008f7c:	f7fe fc5a 	bl	8007834 <HAL_GetTick>
 8008f80:	1b40      	subs	r0, r0, r5
 8008f82:	2802      	cmp	r0, #2
 8008f84:	d9f6      	bls.n	8008f74 <HAL_RCC_OscConfig+0x190>
 8008f86:	e770      	b.n	8008e6a <HAL_RCC_OscConfig+0x86>
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8008f88:	4b32      	ldr	r3, [pc, #200]	; (8009054 <HAL_RCC_OscConfig+0x270>)
 8008f8a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8008f8c:	f012 5280 	ands.w	r2, r2, #268435456	; 0x10000000
 8008f90:	d128      	bne.n	8008fe4 <HAL_RCC_OscConfig+0x200>
      __HAL_RCC_PWR_CLK_ENABLE();
 8008f92:	9201      	str	r2, [sp, #4]
 8008f94:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8008f96:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8008f9a:	641a      	str	r2, [r3, #64]	; 0x40
 8008f9c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8008f9e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8008fa2:	9301      	str	r3, [sp, #4]
 8008fa4:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 8008fa6:	2701      	movs	r7, #1
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8008fa8:	4d2c      	ldr	r5, [pc, #176]	; (800905c <HAL_RCC_OscConfig+0x278>)
 8008faa:	682b      	ldr	r3, [r5, #0]
 8008fac:	05d9      	lsls	r1, r3, #23
 8008fae:	d51b      	bpl.n	8008fe8 <HAL_RCC_OscConfig+0x204>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8008fb0:	68a3      	ldr	r3, [r4, #8]
 8008fb2:	4d28      	ldr	r5, [pc, #160]	; (8009054 <HAL_RCC_OscConfig+0x270>)
 8008fb4:	2b01      	cmp	r3, #1
 8008fb6:	d127      	bne.n	8009008 <HAL_RCC_OscConfig+0x224>
 8008fb8:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8008fba:	f043 0301 	orr.w	r3, r3, #1
 8008fbe:	672b      	str	r3, [r5, #112]	; 0x70
      tickstart = HAL_GetTick();
 8008fc0:	f7fe fc38 	bl	8007834 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8008fc4:	4e23      	ldr	r6, [pc, #140]	; (8009054 <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 8008fc6:	4605      	mov	r5, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8008fc8:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8008fcc:	6f33      	ldr	r3, [r6, #112]	; 0x70
 8008fce:	079b      	lsls	r3, r3, #30
 8008fd0:	d539      	bpl.n	8009046 <HAL_RCC_OscConfig+0x262>
    if(pwrclkchanged == SET)
 8008fd2:	2f00      	cmp	r7, #0
 8008fd4:	f43f af18 	beq.w	8008e08 <HAL_RCC_OscConfig+0x24>
      __HAL_RCC_PWR_CLK_DISABLE();
 8008fd8:	4a1e      	ldr	r2, [pc, #120]	; (8009054 <HAL_RCC_OscConfig+0x270>)
 8008fda:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8008fdc:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8008fe0:	6413      	str	r3, [r2, #64]	; 0x40
 8008fe2:	e711      	b.n	8008e08 <HAL_RCC_OscConfig+0x24>
    FlagStatus       pwrclkchanged = RESET;
 8008fe4:	2700      	movs	r7, #0
 8008fe6:	e7df      	b.n	8008fa8 <HAL_RCC_OscConfig+0x1c4>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8008fe8:	682b      	ldr	r3, [r5, #0]
 8008fea:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8008fee:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 8008ff0:	f7fe fc20 	bl	8007834 <HAL_GetTick>
 8008ff4:	4606      	mov	r6, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8008ff6:	682b      	ldr	r3, [r5, #0]
 8008ff8:	05da      	lsls	r2, r3, #23
 8008ffa:	d4d9      	bmi.n	8008fb0 <HAL_RCC_OscConfig+0x1cc>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8008ffc:	f7fe fc1a 	bl	8007834 <HAL_GetTick>
 8009000:	1b80      	subs	r0, r0, r6
 8009002:	2802      	cmp	r0, #2
 8009004:	d9f7      	bls.n	8008ff6 <HAL_RCC_OscConfig+0x212>
 8009006:	e730      	b.n	8008e6a <HAL_RCC_OscConfig+0x86>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8009008:	2b05      	cmp	r3, #5
 800900a:	d104      	bne.n	8009016 <HAL_RCC_OscConfig+0x232>
 800900c:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800900e:	f043 0304 	orr.w	r3, r3, #4
 8009012:	672b      	str	r3, [r5, #112]	; 0x70
 8009014:	e7d0      	b.n	8008fb8 <HAL_RCC_OscConfig+0x1d4>
 8009016:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 8009018:	f022 0201 	bic.w	r2, r2, #1
 800901c:	672a      	str	r2, [r5, #112]	; 0x70
 800901e:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 8009020:	f022 0204 	bic.w	r2, r2, #4
 8009024:	672a      	str	r2, [r5, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 8009026:	2b00      	cmp	r3, #0
 8009028:	d1ca      	bne.n	8008fc0 <HAL_RCC_OscConfig+0x1dc>
      tickstart = HAL_GetTick();
 800902a:	f7fe fc03 	bl	8007834 <HAL_GetTick>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800902e:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 8009032:	4606      	mov	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8009034:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8009036:	0798      	lsls	r0, r3, #30
 8009038:	d5cb      	bpl.n	8008fd2 <HAL_RCC_OscConfig+0x1ee>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800903a:	f7fe fbfb 	bl	8007834 <HAL_GetTick>
 800903e:	1b80      	subs	r0, r0, r6
 8009040:	4540      	cmp	r0, r8
 8009042:	d9f7      	bls.n	8009034 <HAL_RCC_OscConfig+0x250>
 8009044:	e711      	b.n	8008e6a <HAL_RCC_OscConfig+0x86>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8009046:	f7fe fbf5 	bl	8007834 <HAL_GetTick>
 800904a:	1b40      	subs	r0, r0, r5
 800904c:	4540      	cmp	r0, r8
 800904e:	d9bd      	bls.n	8008fcc <HAL_RCC_OscConfig+0x1e8>
 8009050:	e70b      	b.n	8008e6a <HAL_RCC_OscConfig+0x86>
 8009052:	bf00      	nop
 8009054:	40023800 	.word	0x40023800
 8009058:	42470000 	.word	0x42470000
 800905c:	40007000 	.word	0x40007000
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 8009060:	4d33      	ldr	r5, [pc, #204]	; (8009130 <HAL_RCC_OscConfig+0x34c>)
 8009062:	68ab      	ldr	r3, [r5, #8]
 8009064:	f003 030c 	and.w	r3, r3, #12
 8009068:	2b08      	cmp	r3, #8
 800906a:	d03d      	beq.n	80090e8 <HAL_RCC_OscConfig+0x304>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800906c:	4b31      	ldr	r3, [pc, #196]	; (8009134 <HAL_RCC_OscConfig+0x350>)
 800906e:	2200      	movs	r2, #0
 8009070:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 8009072:	661a      	str	r2, [r3, #96]	; 0x60
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8009074:	d12b      	bne.n	80090ce <HAL_RCC_OscConfig+0x2ea>
        tickstart = HAL_GetTick();
 8009076:	f7fe fbdd 	bl	8007834 <HAL_GetTick>
 800907a:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800907c:	682b      	ldr	r3, [r5, #0]
 800907e:	0199      	lsls	r1, r3, #6
 8009080:	d41f      	bmi.n	80090c2 <HAL_RCC_OscConfig+0x2de>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 8009082:	e9d4 3207 	ldrd	r3, r2, [r4, #28]
 8009086:	4313      	orrs	r3, r2
 8009088:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800908a:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800908e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8009090:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8009094:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8009096:	0852      	lsrs	r2, r2, #1
 8009098:	3a01      	subs	r2, #1
 800909a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800909e:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 80090a0:	4b24      	ldr	r3, [pc, #144]	; (8009134 <HAL_RCC_OscConfig+0x350>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80090a2:	4d23      	ldr	r5, [pc, #140]	; (8009130 <HAL_RCC_OscConfig+0x34c>)
        __HAL_RCC_PLL_ENABLE();
 80090a4:	2201      	movs	r2, #1
 80090a6:	661a      	str	r2, [r3, #96]	; 0x60
        tickstart = HAL_GetTick();
 80090a8:	f7fe fbc4 	bl	8007834 <HAL_GetTick>
 80090ac:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80090ae:	682b      	ldr	r3, [r5, #0]
 80090b0:	019a      	lsls	r2, r3, #6
 80090b2:	f53f aead 	bmi.w	8008e10 <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 80090b6:	f7fe fbbd 	bl	8007834 <HAL_GetTick>
 80090ba:	1b00      	subs	r0, r0, r4
 80090bc:	2802      	cmp	r0, #2
 80090be:	d9f6      	bls.n	80090ae <HAL_RCC_OscConfig+0x2ca>
 80090c0:	e6d3      	b.n	8008e6a <HAL_RCC_OscConfig+0x86>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 80090c2:	f7fe fbb7 	bl	8007834 <HAL_GetTick>
 80090c6:	1b80      	subs	r0, r0, r6
 80090c8:	2802      	cmp	r0, #2
 80090ca:	d9d7      	bls.n	800907c <HAL_RCC_OscConfig+0x298>
 80090cc:	e6cd      	b.n	8008e6a <HAL_RCC_OscConfig+0x86>
        tickstart = HAL_GetTick();
 80090ce:	f7fe fbb1 	bl	8007834 <HAL_GetTick>
 80090d2:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 80090d4:	682b      	ldr	r3, [r5, #0]
 80090d6:	019b      	lsls	r3, r3, #6
 80090d8:	f57f ae9a 	bpl.w	8008e10 <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 80090dc:	f7fe fbaa 	bl	8007834 <HAL_GetTick>
 80090e0:	1b00      	subs	r0, r0, r4
 80090e2:	2802      	cmp	r0, #2
 80090e4:	d9f6      	bls.n	80090d4 <HAL_RCC_OscConfig+0x2f0>
 80090e6:	e6c0      	b.n	8008e6a <HAL_RCC_OscConfig+0x86>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 80090e8:	2801      	cmp	r0, #1
 80090ea:	f43f aebf 	beq.w	8008e6c <HAL_RCC_OscConfig+0x88>
        pll_config = RCC->PLLCFGR;
 80090ee:	686b      	ldr	r3, [r5, #4]
        if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 80090f0:	69e2      	ldr	r2, [r4, #28]
 80090f2:	f403 0180 	and.w	r1, r3, #4194304	; 0x400000
 80090f6:	4291      	cmp	r1, r2
 80090f8:	f47f aea1 	bne.w	8008e3e <HAL_RCC_OscConfig+0x5a>
 80090fc:	6a21      	ldr	r1, [r4, #32]
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 80090fe:	f003 023f 	and.w	r2, r3, #63	; 0x3f
        if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8009102:	428a      	cmp	r2, r1
 8009104:	f47f ae9b 	bne.w	8008e3e <HAL_RCC_OscConfig+0x5a>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 8009108:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800910a:	f647 72c0 	movw	r2, #32704	; 0x7fc0
 800910e:	401a      	ands	r2, r3
 8009110:	428a      	cmp	r2, r1
 8009112:	f47f ae94 	bne.w	8008e3e <HAL_RCC_OscConfig+0x5a>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != RCC_OscInitStruct->PLL.PLLN) ||
 8009116:	6aa1      	ldr	r1, [r4, #40]	; 0x28
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 8009118:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != RCC_OscInitStruct->PLL.PLLN) ||
 800911c:	428a      	cmp	r2, r1
 800911e:	f47f ae8e 	bne.w	8008e3e <HAL_RCC_OscConfig+0x5a>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 8009122:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != RCC_OscInitStruct->PLL.PLLQ))
 8009124:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 8009128:	4293      	cmp	r3, r2
 800912a:	f43f ae71 	beq.w	8008e10 <HAL_RCC_OscConfig+0x2c>
 800912e:	e686      	b.n	8008e3e <HAL_RCC_OscConfig+0x5a>
 8009130:	40023800 	.word	0x40023800
 8009134:	42470000 	.word	0x42470000

08009138 <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8009138:	4913      	ldr	r1, [pc, #76]	; (8009188 <HAL_RCC_GetSysClockFreq+0x50>)
{
 800913a:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800913c:	688b      	ldr	r3, [r1, #8]
 800913e:	f003 030c 	and.w	r3, r3, #12
 8009142:	2b04      	cmp	r3, #4
 8009144:	d01c      	beq.n	8009180 <HAL_RCC_GetSysClockFreq+0x48>
 8009146:	2b08      	cmp	r3, #8
 8009148:	d11c      	bne.n	8009184 <HAL_RCC_GetSysClockFreq+0x4c>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800914a:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800914c:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800914e:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8009150:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8009154:	bf14      	ite	ne
 8009156:	480d      	ldrne	r0, [pc, #52]	; (800918c <HAL_RCC_GetSysClockFreq+0x54>)
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8009158:	480d      	ldreq	r0, [pc, #52]	; (8009190 <HAL_RCC_GetSysClockFreq+0x58>)
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800915a:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800915e:	bf18      	it	ne
 8009160:	2300      	movne	r3, #0
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8009162:	f002 023f 	and.w	r2, r2, #63	; 0x3f
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8009166:	fba1 0100 	umull	r0, r1, r1, r0
 800916a:	f7f7 f891 	bl	8000290 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 800916e:	4b06      	ldr	r3, [pc, #24]	; (8009188 <HAL_RCC_GetSysClockFreq+0x50>)
 8009170:	685b      	ldr	r3, [r3, #4]
 8009172:	f3c3 4301 	ubfx	r3, r3, #16, #2
 8009176:	3301      	adds	r3, #1
 8009178:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 800917a:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 800917e:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8009180:	4802      	ldr	r0, [pc, #8]	; (800918c <HAL_RCC_GetSysClockFreq+0x54>)
 8009182:	e7fc      	b.n	800917e <HAL_RCC_GetSysClockFreq+0x46>
      sysclockfreq = HSI_VALUE;
 8009184:	4802      	ldr	r0, [pc, #8]	; (8009190 <HAL_RCC_GetSysClockFreq+0x58>)
  return sysclockfreq;
 8009186:	e7fa      	b.n	800917e <HAL_RCC_GetSysClockFreq+0x46>
 8009188:	40023800 	.word	0x40023800
 800918c:	007a1200 	.word	0x007a1200
 8009190:	00f42400 	.word	0x00f42400

08009194 <HAL_RCC_ClockConfig>:
{
 8009194:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009198:	460d      	mov	r5, r1
  if(RCC_ClkInitStruct == NULL)
 800919a:	4604      	mov	r4, r0
 800919c:	b910      	cbnz	r0, 80091a4 <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 800919e:	2001      	movs	r0, #1
}
 80091a0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 80091a4:	4b44      	ldr	r3, [pc, #272]	; (80092b8 <HAL_RCC_ClockConfig+0x124>)
 80091a6:	681a      	ldr	r2, [r3, #0]
 80091a8:	f002 020f 	and.w	r2, r2, #15
 80091ac:	428a      	cmp	r2, r1
 80091ae:	d328      	bcc.n	8009202 <HAL_RCC_ClockConfig+0x6e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 80091b0:	6822      	ldr	r2, [r4, #0]
 80091b2:	0797      	lsls	r7, r2, #30
 80091b4:	d42d      	bmi.n	8009212 <HAL_RCC_ClockConfig+0x7e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 80091b6:	07d0      	lsls	r0, r2, #31
 80091b8:	d441      	bmi.n	800923e <HAL_RCC_ClockConfig+0xaa>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 80091ba:	4b3f      	ldr	r3, [pc, #252]	; (80092b8 <HAL_RCC_ClockConfig+0x124>)
 80091bc:	681a      	ldr	r2, [r3, #0]
 80091be:	f002 020f 	and.w	r2, r2, #15
 80091c2:	42aa      	cmp	r2, r5
 80091c4:	d866      	bhi.n	8009294 <HAL_RCC_ClockConfig+0x100>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 80091c6:	6822      	ldr	r2, [r4, #0]
 80091c8:	0751      	lsls	r1, r2, #29
 80091ca:	d46c      	bmi.n	80092a6 <HAL_RCC_ClockConfig+0x112>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 80091cc:	0713      	lsls	r3, r2, #28
 80091ce:	d507      	bpl.n	80091e0 <HAL_RCC_ClockConfig+0x4c>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 80091d0:	4a3a      	ldr	r2, [pc, #232]	; (80092bc <HAL_RCC_ClockConfig+0x128>)
 80091d2:	6921      	ldr	r1, [r4, #16]
 80091d4:	6893      	ldr	r3, [r2, #8]
 80091d6:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 80091da:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 80091de:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 80091e0:	f7ff ffaa 	bl	8009138 <HAL_RCC_GetSysClockFreq>
 80091e4:	4b35      	ldr	r3, [pc, #212]	; (80092bc <HAL_RCC_ClockConfig+0x128>)
 80091e6:	4a36      	ldr	r2, [pc, #216]	; (80092c0 <HAL_RCC_ClockConfig+0x12c>)
 80091e8:	689b      	ldr	r3, [r3, #8]
 80091ea:	f3c3 1303 	ubfx	r3, r3, #4, #4
 80091ee:	5cd3      	ldrb	r3, [r2, r3]
 80091f0:	40d8      	lsrs	r0, r3
 80091f2:	4b34      	ldr	r3, [pc, #208]	; (80092c4 <HAL_RCC_ClockConfig+0x130>)
 80091f4:	6018      	str	r0, [r3, #0]
  HAL_InitTick (uwTickPrio);
 80091f6:	4b34      	ldr	r3, [pc, #208]	; (80092c8 <HAL_RCC_ClockConfig+0x134>)
 80091f8:	6818      	ldr	r0, [r3, #0]
 80091fa:	f7f8 fe87 	bl	8001f0c <HAL_InitTick>
  return HAL_OK;
 80091fe:	2000      	movs	r0, #0
 8009200:	e7ce      	b.n	80091a0 <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8009202:	b2ca      	uxtb	r2, r1
 8009204:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8009206:	681b      	ldr	r3, [r3, #0]
 8009208:	f003 030f 	and.w	r3, r3, #15
 800920c:	428b      	cmp	r3, r1
 800920e:	d1c6      	bne.n	800919e <HAL_RCC_ClockConfig+0xa>
 8009210:	e7ce      	b.n	80091b0 <HAL_RCC_ClockConfig+0x1c>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8009212:	4b2a      	ldr	r3, [pc, #168]	; (80092bc <HAL_RCC_ClockConfig+0x128>)
 8009214:	f012 0f04 	tst.w	r2, #4
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 8009218:	bf1e      	ittt	ne
 800921a:	6899      	ldrne	r1, [r3, #8]
 800921c:	f441 51e0 	orrne.w	r1, r1, #7168	; 0x1c00
 8009220:	6099      	strne	r1, [r3, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8009222:	0716      	lsls	r6, r2, #28
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 8009224:	bf42      	ittt	mi
 8009226:	6899      	ldrmi	r1, [r3, #8]
 8009228:	f441 4160 	orrmi.w	r1, r1, #57344	; 0xe000
 800922c:	6099      	strmi	r1, [r3, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 800922e:	4923      	ldr	r1, [pc, #140]	; (80092bc <HAL_RCC_ClockConfig+0x128>)
 8009230:	68a0      	ldr	r0, [r4, #8]
 8009232:	688b      	ldr	r3, [r1, #8]
 8009234:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8009238:	4303      	orrs	r3, r0
 800923a:	608b      	str	r3, [r1, #8]
 800923c:	e7bb      	b.n	80091b6 <HAL_RCC_ClockConfig+0x22>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800923e:	6862      	ldr	r2, [r4, #4]
 8009240:	4b1e      	ldr	r3, [pc, #120]	; (80092bc <HAL_RCC_ClockConfig+0x128>)
 8009242:	2a01      	cmp	r2, #1
 8009244:	d11c      	bne.n	8009280 <HAL_RCC_ClockConfig+0xec>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8009246:	681b      	ldr	r3, [r3, #0]
 8009248:	f413 3f00 	tst.w	r3, #131072	; 0x20000
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800924c:	d0a7      	beq.n	800919e <HAL_RCC_ClockConfig+0xa>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 800924e:	4e1b      	ldr	r6, [pc, #108]	; (80092bc <HAL_RCC_ClockConfig+0x128>)
 8009250:	68b3      	ldr	r3, [r6, #8]
 8009252:	f023 0303 	bic.w	r3, r3, #3
 8009256:	4313      	orrs	r3, r2
 8009258:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 800925a:	f7fe faeb 	bl	8007834 <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800925e:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 8009262:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8009264:	68b3      	ldr	r3, [r6, #8]
 8009266:	6862      	ldr	r2, [r4, #4]
 8009268:	f003 030c 	and.w	r3, r3, #12
 800926c:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 8009270:	d0a3      	beq.n	80091ba <HAL_RCC_ClockConfig+0x26>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8009272:	f7fe fadf 	bl	8007834 <HAL_GetTick>
 8009276:	1bc0      	subs	r0, r0, r7
 8009278:	4540      	cmp	r0, r8
 800927a:	d9f3      	bls.n	8009264 <HAL_RCC_ClockConfig+0xd0>
        return HAL_TIMEOUT;
 800927c:	2003      	movs	r0, #3
 800927e:	e78f      	b.n	80091a0 <HAL_RCC_ClockConfig+0xc>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8009280:	1e91      	subs	r1, r2, #2
 8009282:	2901      	cmp	r1, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8009284:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8009286:	d802      	bhi.n	800928e <HAL_RCC_ClockConfig+0xfa>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8009288:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 800928c:	e7de      	b.n	800924c <HAL_RCC_ClockConfig+0xb8>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800928e:	f013 0f02 	tst.w	r3, #2
 8009292:	e7db      	b.n	800924c <HAL_RCC_ClockConfig+0xb8>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8009294:	b2ea      	uxtb	r2, r5
 8009296:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8009298:	681b      	ldr	r3, [r3, #0]
 800929a:	f003 030f 	and.w	r3, r3, #15
 800929e:	42ab      	cmp	r3, r5
 80092a0:	f47f af7d 	bne.w	800919e <HAL_RCC_ClockConfig+0xa>
 80092a4:	e78f      	b.n	80091c6 <HAL_RCC_ClockConfig+0x32>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 80092a6:	4905      	ldr	r1, [pc, #20]	; (80092bc <HAL_RCC_ClockConfig+0x128>)
 80092a8:	68e0      	ldr	r0, [r4, #12]
 80092aa:	688b      	ldr	r3, [r1, #8]
 80092ac:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 80092b0:	4303      	orrs	r3, r0
 80092b2:	608b      	str	r3, [r1, #8]
 80092b4:	e78a      	b.n	80091cc <HAL_RCC_ClockConfig+0x38>
 80092b6:	bf00      	nop
 80092b8:	40023c00 	.word	0x40023c00
 80092bc:	40023800 	.word	0x40023800
 80092c0:	08024b44 	.word	0x08024b44
 80092c4:	20000078 	.word	0x20000078
 80092c8:	20000080 	.word	0x20000080

080092cc <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 80092cc:	4b04      	ldr	r3, [pc, #16]	; (80092e0 <HAL_RCC_GetPCLK1Freq+0x14>)
 80092ce:	4a05      	ldr	r2, [pc, #20]	; (80092e4 <HAL_RCC_GetPCLK1Freq+0x18>)
 80092d0:	689b      	ldr	r3, [r3, #8]
 80092d2:	f3c3 2382 	ubfx	r3, r3, #10, #3
 80092d6:	5cd3      	ldrb	r3, [r2, r3]
 80092d8:	4a03      	ldr	r2, [pc, #12]	; (80092e8 <HAL_RCC_GetPCLK1Freq+0x1c>)
 80092da:	6810      	ldr	r0, [r2, #0]
}
 80092dc:	40d8      	lsrs	r0, r3
 80092de:	4770      	bx	lr
 80092e0:	40023800 	.word	0x40023800
 80092e4:	08024b54 	.word	0x08024b54
 80092e8:	20000078 	.word	0x20000078

080092ec <HAL_RCC_GetPCLK2Freq>:
  * @retval PCLK2 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
  /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq()>> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2)>> RCC_CFGR_PPRE2_Pos]);
 80092ec:	4b04      	ldr	r3, [pc, #16]	; (8009300 <HAL_RCC_GetPCLK2Freq+0x14>)
 80092ee:	4a05      	ldr	r2, [pc, #20]	; (8009304 <HAL_RCC_GetPCLK2Freq+0x18>)
 80092f0:	689b      	ldr	r3, [r3, #8]
 80092f2:	f3c3 3342 	ubfx	r3, r3, #13, #3
 80092f6:	5cd3      	ldrb	r3, [r2, r3]
 80092f8:	4a03      	ldr	r2, [pc, #12]	; (8009308 <HAL_RCC_GetPCLK2Freq+0x1c>)
 80092fa:	6810      	ldr	r0, [r2, #0]
}
 80092fc:	40d8      	lsrs	r0, r3
 80092fe:	4770      	bx	lr
 8009300:	40023800 	.word	0x40023800
 8009304:	08024b54 	.word	0x08024b54
 8009308:	20000078 	.word	0x20000078

0800930c <HAL_RCC_GetClockConfig>:
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 800930c:	230f      	movs	r3, #15
 800930e:	6003      	str	r3, [r0, #0]

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 8009310:	4b0b      	ldr	r3, [pc, #44]	; (8009340 <HAL_RCC_GetClockConfig+0x34>)
 8009312:	689a      	ldr	r2, [r3, #8]
 8009314:	f002 0203 	and.w	r2, r2, #3
 8009318:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 800931a:	689a      	ldr	r2, [r3, #8]
 800931c:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 8009320:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 8009322:	689a      	ldr	r2, [r3, #8]
 8009324:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 8009328:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800932a:	689b      	ldr	r3, [r3, #8]
 800932c:	08db      	lsrs	r3, r3, #3
 800932e:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 8009332:	6103      	str	r3, [r0, #16]

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 8009334:	4b03      	ldr	r3, [pc, #12]	; (8009344 <HAL_RCC_GetClockConfig+0x38>)
 8009336:	681b      	ldr	r3, [r3, #0]
 8009338:	f003 030f 	and.w	r3, r3, #15
 800933c:	600b      	str	r3, [r1, #0]
}
 800933e:	4770      	bx	lr
 8009340:	40023800 	.word	0x40023800
 8009344:	40023c00 	.word	0x40023c00

08009348 <HAL_RCCEx_PeriphCLKConfig>:
  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 8009348:	6803      	ldr	r3, [r0, #0]
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800934a:	f013 0f43 	tst.w	r3, #67	; 0x43
{
 800934e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8009350:	4604      	mov	r4, r0
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 8009352:	f040 808c 	bne.w	800946e <HAL_RCCEx_PeriphCLKConfig+0x126>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 8009356:	6823      	ldr	r3, [r4, #0]
 8009358:	f013 0f0c 	tst.w	r3, #12
 800935c:	d045      	beq.n	80093ea <HAL_RCCEx_PeriphCLKConfig+0xa2>
  {
    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 800935e:	4b8b      	ldr	r3, [pc, #556]	; (800958c <HAL_RCCEx_PeriphCLKConfig+0x244>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is disabled */
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8009360:	4d8b      	ldr	r5, [pc, #556]	; (8009590 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLSAI_DISABLE();
 8009362:	2200      	movs	r2, #0
 8009364:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 8009366:	f7fe fa65 	bl	8007834 <HAL_GetTick>
 800936a:	4606      	mov	r6, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800936c:	682b      	ldr	r3, [r5, #0]
 800936e:	009f      	lsls	r7, r3, #2
 8009370:	f100 80cf 	bmi.w	8009512 <HAL_RCCEx_PeriphCLKConfig+0x1ca>
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLSAI, PLLSAIQ and PLLSAI_DIVQ must
       be added only for SAI configuration */
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 8009374:	6821      	ldr	r1, [r4, #0]
 8009376:	074e      	lsls	r6, r1, #29
 8009378:	d515      	bpl.n	80093a6 <HAL_RCCEx_PeriphCLKConfig+0x5e>
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800937a:	e9d4 0304 	ldrd	r0, r3, [r4, #16]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 800937e:	f8d5 2088 	ldr.w	r2, [r5, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 8009382:	061b      	lsls	r3, r3, #24
 8009384:	f002 42e0 	and.w	r2, r2, #1879048192	; 0x70000000
 8009388:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800938c:	4313      	orrs	r3, r2
 800938e:	f8c5 3088 	str.w	r3, [r5, #136]	; 0x88
      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 8009392:	f8d5 308c 	ldr.w	r3, [r5, #140]	; 0x8c
 8009396:	6a22      	ldr	r2, [r4, #32]
 8009398:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 800939c:	3a01      	subs	r2, #1
 800939e:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 80093a2:	f8c5 308c 	str.w	r3, [r5, #140]	; 0x8c
    }

    /*---------------------------- LTDC configuration ------------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 80093a6:	070d      	lsls	r5, r1, #28
 80093a8:	d514      	bpl.n	80093d4 <HAL_RCCEx_PeriphCLKConfig+0x8c>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 80093aa:	4a79      	ldr	r2, [pc, #484]	; (8009590 <HAL_RCCEx_PeriphCLKConfig+0x248>)
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 80093ac:	69a3      	ldr	r3, [r4, #24]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 80093ae:	f8d2 1088 	ldr.w	r1, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 80093b2:	6920      	ldr	r0, [r4, #16]
 80093b4:	071b      	lsls	r3, r3, #28
 80093b6:	f001 6170 	and.w	r1, r1, #251658240	; 0xf000000
 80093ba:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 80093be:	430b      	orrs	r3, r1
 80093c0:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 80093c4:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 80093c8:	6a61      	ldr	r1, [r4, #36]	; 0x24
 80093ca:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 80093ce:	430b      	orrs	r3, r1
 80093d0:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    }
    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 80093d4:	4b6d      	ldr	r3, [pc, #436]	; (800958c <HAL_RCCEx_PeriphCLKConfig+0x244>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is ready */
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 80093d6:	4e6e      	ldr	r6, [pc, #440]	; (8009590 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLSAI_ENABLE();
 80093d8:	2201      	movs	r2, #1
 80093da:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 80093dc:	f7fe fa2a 	bl	8007834 <HAL_GetTick>
 80093e0:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 80093e2:	6833      	ldr	r3, [r6, #0]
 80093e4:	0098      	lsls	r0, r3, #2
 80093e6:	f140 809b 	bpl.w	8009520 <HAL_RCCEx_PeriphCLKConfig+0x1d8>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 80093ea:	6823      	ldr	r3, [r4, #0]
 80093ec:	069b      	lsls	r3, r3, #26
 80093ee:	d533      	bpl.n	8009458 <HAL_RCCEx_PeriphCLKConfig+0x110>
  {
    /* Check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable Power Clock*/
    __HAL_RCC_PWR_CLK_ENABLE();
 80093f0:	2300      	movs	r3, #0
 80093f2:	9301      	str	r3, [sp, #4]
 80093f4:	4b66      	ldr	r3, [pc, #408]	; (8009590 <HAL_RCCEx_PeriphCLKConfig+0x248>)

    /* Enable write access to Backup domain */
    PWR->CR |= PWR_CR_DBP;
 80093f6:	4d67      	ldr	r5, [pc, #412]	; (8009594 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PWR_CLK_ENABLE();
 80093f8:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80093fa:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 80093fe:	641a      	str	r2, [r3, #64]	; 0x40
 8009400:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8009402:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8009406:	9301      	str	r3, [sp, #4]
 8009408:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 800940a:	682b      	ldr	r3, [r5, #0]
 800940c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8009410:	602b      	str	r3, [r5, #0]

    /* Get tick */
    tickstart = HAL_GetTick();
 8009412:	f7fe fa0f 	bl	8007834 <HAL_GetTick>
 8009416:	4606      	mov	r6, r0

    while((PWR->CR & PWR_CR_DBP) == RESET)
 8009418:	682b      	ldr	r3, [r5, #0]
 800941a:	05d9      	lsls	r1, r3, #23
 800941c:	f140 8087 	bpl.w	800952e <HAL_RCCEx_PeriphCLKConfig+0x1e6>
      {
        return HAL_TIMEOUT;
      }
    }
    /* Reset the Backup domain only if the RTC Clock source selection is modified from reset value */
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 8009420:	4d5b      	ldr	r5, [pc, #364]	; (8009590 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 8009422:	6f2b      	ldr	r3, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8009424:	f413 7340 	ands.w	r3, r3, #768	; 0x300
 8009428:	f040 8088 	bne.w	800953c <HAL_RCCEx_PeriphCLKConfig+0x1f4>
            return HAL_TIMEOUT;
          }
        }
      }
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800942c:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800942e:	f403 7240 	and.w	r2, r3, #768	; 0x300
 8009432:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 8009436:	4a56      	ldr	r2, [pc, #344]	; (8009590 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 8009438:	f040 80a4 	bne.w	8009584 <HAL_RCCEx_PeriphCLKConfig+0x23c>
 800943c:	6891      	ldr	r1, [r2, #8]
 800943e:	f023 4070 	bic.w	r0, r3, #4026531840	; 0xf0000000
 8009442:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 8009446:	f420 7040 	bic.w	r0, r0, #768	; 0x300
 800944a:	4301      	orrs	r1, r0
 800944c:	6091      	str	r1, [r2, #8]
 800944e:	6f11      	ldr	r1, [r2, #112]	; 0x70
 8009450:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8009454:	430b      	orrs	r3, r1
 8009456:	6713      	str	r3, [r2, #112]	; 0x70
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 8009458:	6820      	ldr	r0, [r4, #0]
 800945a:	f010 0010 	ands.w	r0, r0, #16
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 800945e:	bf1f      	itttt	ne
 8009460:	4b4d      	ldrne	r3, [pc, #308]	; (8009598 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 8009462:	f894 202c 	ldrbne.w	r2, [r4, #44]	; 0x2c
 8009466:	f8c3 21e0 	strne.w	r2, [r3, #480]	; 0x1e0
  }
  return HAL_OK;
 800946a:	2000      	movne	r0, #0
 800946c:	e04f      	b.n	800950e <HAL_RCCEx_PeriphCLKConfig+0x1c6>
    __HAL_RCC_PLLI2S_DISABLE();
 800946e:	4b47      	ldr	r3, [pc, #284]	; (800958c <HAL_RCCEx_PeriphCLKConfig+0x244>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8009470:	4e47      	ldr	r6, [pc, #284]	; (8009590 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLI2S_DISABLE();
 8009472:	2200      	movs	r2, #0
 8009474:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 8009476:	f7fe f9dd 	bl	8007834 <HAL_GetTick>
 800947a:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800947c:	6833      	ldr	r3, [r6, #0]
 800947e:	011f      	lsls	r7, r3, #4
 8009480:	d43f      	bmi.n	8009502 <HAL_RCCEx_PeriphCLKConfig+0x1ba>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 8009482:	6821      	ldr	r1, [r4, #0]
 8009484:	07cd      	lsls	r5, r1, #31
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 8009486:	bf41      	itttt	mi
 8009488:	e9d4 2301 	ldrdmi	r2, r3, [r4, #4]
 800948c:	071b      	lslmi	r3, r3, #28
 800948e:	ea43 1382 	orrmi.w	r3, r3, r2, lsl #6
 8009492:	f8c6 3084 	strmi.w	r3, [r6, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 8009496:	0788      	lsls	r0, r1, #30
 8009498:	d515      	bpl.n	80094c6 <HAL_RCCEx_PeriphCLKConfig+0x17e>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800949a:	4a3d      	ldr	r2, [pc, #244]	; (8009590 <HAL_RCCEx_PeriphCLKConfig+0x248>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800949c:	68e3      	ldr	r3, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800949e:	f8d2 0084 	ldr.w	r0, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 80094a2:	6865      	ldr	r5, [r4, #4]
 80094a4:	061b      	lsls	r3, r3, #24
 80094a6:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 80094aa:	ea43 1385 	orr.w	r3, r3, r5, lsl #6
 80094ae:	4303      	orrs	r3, r0
 80094b0:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 80094b4:	f8d2 008c 	ldr.w	r0, [r2, #140]	; 0x8c
 80094b8:	69e3      	ldr	r3, [r4, #28]
 80094ba:	f020 001f 	bic.w	r0, r0, #31
 80094be:	3b01      	subs	r3, #1
 80094c0:	4303      	orrs	r3, r0
 80094c2:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 80094c6:	0649      	lsls	r1, r1, #25
 80094c8:	d50a      	bpl.n	80094e0 <HAL_RCCEx_PeriphCLKConfig+0x198>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 80094ca:	68e3      	ldr	r3, [r4, #12]
 80094cc:	6862      	ldr	r2, [r4, #4]
 80094ce:	061b      	lsls	r3, r3, #24
 80094d0:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 80094d4:	68a2      	ldr	r2, [r4, #8]
 80094d6:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 80094da:	4a2d      	ldr	r2, [pc, #180]	; (8009590 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 80094dc:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 80094e0:	4b2a      	ldr	r3, [pc, #168]	; (800958c <HAL_RCCEx_PeriphCLKConfig+0x244>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 80094e2:	4e2b      	ldr	r6, [pc, #172]	; (8009590 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLI2S_ENABLE();
 80094e4:	2201      	movs	r2, #1
 80094e6:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 80094e8:	f7fe f9a4 	bl	8007834 <HAL_GetTick>
 80094ec:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 80094ee:	6833      	ldr	r3, [r6, #0]
 80094f0:	011a      	lsls	r2, r3, #4
 80094f2:	f53f af30 	bmi.w	8009356 <HAL_RCCEx_PeriphCLKConfig+0xe>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 80094f6:	f7fe f99d 	bl	8007834 <HAL_GetTick>
 80094fa:	1b40      	subs	r0, r0, r5
 80094fc:	2802      	cmp	r0, #2
 80094fe:	d9f6      	bls.n	80094ee <HAL_RCCEx_PeriphCLKConfig+0x1a6>
 8009500:	e004      	b.n	800950c <HAL_RCCEx_PeriphCLKConfig+0x1c4>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 8009502:	f7fe f997 	bl	8007834 <HAL_GetTick>
 8009506:	1b40      	subs	r0, r0, r5
 8009508:	2802      	cmp	r0, #2
 800950a:	d9b7      	bls.n	800947c <HAL_RCCEx_PeriphCLKConfig+0x134>
        return HAL_TIMEOUT;
 800950c:	2003      	movs	r0, #3
}
 800950e:	b003      	add	sp, #12
 8009510:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 8009512:	f7fe f98f 	bl	8007834 <HAL_GetTick>
 8009516:	1b80      	subs	r0, r0, r6
 8009518:	2802      	cmp	r0, #2
 800951a:	f67f af27 	bls.w	800936c <HAL_RCCEx_PeriphCLKConfig+0x24>
 800951e:	e7f5      	b.n	800950c <HAL_RCCEx_PeriphCLKConfig+0x1c4>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 8009520:	f7fe f988 	bl	8007834 <HAL_GetTick>
 8009524:	1b40      	subs	r0, r0, r5
 8009526:	2802      	cmp	r0, #2
 8009528:	f67f af5b 	bls.w	80093e2 <HAL_RCCEx_PeriphCLKConfig+0x9a>
 800952c:	e7ee      	b.n	800950c <HAL_RCCEx_PeriphCLKConfig+0x1c4>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 800952e:	f7fe f981 	bl	8007834 <HAL_GetTick>
 8009532:	1b80      	subs	r0, r0, r6
 8009534:	2802      	cmp	r0, #2
 8009536:	f67f af6f 	bls.w	8009418 <HAL_RCCEx_PeriphCLKConfig+0xd0>
 800953a:	e7e7      	b.n	800950c <HAL_RCCEx_PeriphCLKConfig+0x1c4>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800953c:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800953e:	f402 7240 	and.w	r2, r2, #768	; 0x300
 8009542:	4293      	cmp	r3, r2
 8009544:	f43f af72 	beq.w	800942c <HAL_RCCEx_PeriphCLKConfig+0xe4>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8009548:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 800954a:	4a10      	ldr	r2, [pc, #64]	; (800958c <HAL_RCCEx_PeriphCLKConfig+0x244>)
 800954c:	2101      	movs	r1, #1
 800954e:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8009552:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 8009556:	2100      	movs	r1, #0
 8009558:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      RCC->BDCR = tmpreg1;
 800955c:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 800955e:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8009560:	07da      	lsls	r2, r3, #31
 8009562:	f57f af63 	bpl.w	800942c <HAL_RCCEx_PeriphCLKConfig+0xe4>
        tickstart = HAL_GetTick();
 8009566:	f7fe f965 	bl	8007834 <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800956a:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 800956e:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8009570:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8009572:	079b      	lsls	r3, r3, #30
 8009574:	f53f af5a 	bmi.w	800942c <HAL_RCCEx_PeriphCLKConfig+0xe4>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8009578:	f7fe f95c 	bl	8007834 <HAL_GetTick>
 800957c:	1b80      	subs	r0, r0, r6
 800957e:	42b8      	cmp	r0, r7
 8009580:	d9f6      	bls.n	8009570 <HAL_RCCEx_PeriphCLKConfig+0x228>
 8009582:	e7c3      	b.n	800950c <HAL_RCCEx_PeriphCLKConfig+0x1c4>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8009584:	6891      	ldr	r1, [r2, #8]
 8009586:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 800958a:	e75f      	b.n	800944c <HAL_RCCEx_PeriphCLKConfig+0x104>
 800958c:	42470000 	.word	0x42470000
 8009590:	40023800 	.word	0x40023800
 8009594:	40007000 	.word	0x40007000
 8009598:	42471000 	.word	0x42471000

0800959c <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure 
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{   
 800959c:	b538      	push	{r3, r4, r5, lr}
 800959e:	460d      	mov	r5, r1
  /* Check the SDRAM handle parameter */
  if(hsdram == NULL)
 80095a0:	4604      	mov	r4, r0
 80095a2:	b1c8      	cbz	r0, 80095d8 <HAL_SDRAM_Init+0x3c>
  {
    return HAL_ERROR;
  }
  
  if(hsdram->State == HAL_SDRAM_STATE_RESET)
 80095a4:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 80095a8:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80095ac:	b91b      	cbnz	r3, 80095b6 <HAL_SDRAM_Init+0x1a>
  {  
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 80095ae:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 80095b2:	f7f8 fc3f 	bl	8001e34 <HAL_SDRAM_MspInit>
#endif
  }
  
  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 80095b6:	2302      	movs	r3, #2
 80095b8:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Initialize SDRAM control Interface */
  FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 80095bc:	1d21      	adds	r1, r4, #4
 80095be:	6820      	ldr	r0, [r4, #0]
 80095c0:	f000 fcba 	bl	8009f38 <FMC_SDRAM_Init>
  
  /* Initialize SDRAM timing Interface */
  FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank); 
 80095c4:	6862      	ldr	r2, [r4, #4]
 80095c6:	6820      	ldr	r0, [r4, #0]
 80095c8:	4629      	mov	r1, r5
 80095ca:	f000 fceb 	bl	8009fa4 <FMC_SDRAM_Timing_Init>
  
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 80095ce:	2301      	movs	r3, #1
 80095d0:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  return HAL_OK;
 80095d4:	2000      	movs	r0, #0
}
 80095d6:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 80095d8:	2001      	movs	r0, #1
 80095da:	e7fc      	b.n	80095d6 <HAL_SDRAM_Init+0x3a>

080095dc <HAL_SDRAM_SendCommand>:
  * @param  Command SDRAM command structure
  * @param  Timeout Timeout duration
  * @retval HAL status
  */  
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 80095dc:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 80095de:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 80095e2:	2b02      	cmp	r3, #2
{
 80095e4:	4604      	mov	r4, r0
 80095e6:	460d      	mov	r5, r1
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 80095e8:	b2d8      	uxtb	r0, r3
 80095ea:	d00d      	beq.n	8009608 <HAL_SDRAM_SendCommand+0x2c>
  {
    return HAL_BUSY;
  }
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 80095ec:	2302      	movs	r3, #2
 80095ee:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Send SDRAM command */
  FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 80095f2:	6820      	ldr	r0, [r4, #0]
 80095f4:	f000 fd12 	bl	800a01c <FMC_SDRAM_SendCommand>
  
  /* Update the SDRAM controller state */
  if(Command->CommandMode == FMC_SDRAM_CMD_PALL)
 80095f8:	682b      	ldr	r3, [r5, #0]
 80095fa:	2b02      	cmp	r3, #2
  {
    hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 80095fc:	bf0c      	ite	eq
 80095fe:	2305      	moveq	r3, #5
  }
  else
  {
    hsdram->State = HAL_SDRAM_STATE_READY;
 8009600:	2301      	movne	r3, #1
 8009602:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  }
  
  return HAL_OK;  
 8009606:	2000      	movs	r0, #0
}
 8009608:	bd38      	pop	{r3, r4, r5, pc}

0800960a <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.  
  * @param  RefreshRate The SDRAM refresh rate value       
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 800960a:	b510      	push	{r4, lr}
  /* Check the SDRAM controller state */
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 800960c:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8009610:	2b02      	cmp	r3, #2
{
 8009612:	4604      	mov	r4, r0
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 8009614:	b2d8      	uxtb	r0, r3
 8009616:	d009      	beq.n	800962c <HAL_SDRAM_ProgramRefreshRate+0x22>
  {
    return HAL_BUSY;
  } 
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8009618:	2302      	movs	r3, #2
 800961a:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Program the refresh rate */
  FMC_SDRAM_ProgramRefreshRate(hsdram->Instance ,RefreshRate);
 800961e:	6820      	ldr	r0, [r4, #0]
 8009620:	f000 fd23 	bl	800a06a <FMC_SDRAM_ProgramRefreshRate>
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 8009624:	2301      	movs	r3, #1
 8009626:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  return HAL_OK;   
 800962a:	2000      	movs	r0, #0
}
 800962c:	bd10      	pop	{r4, pc}

0800962e <SPI_WaitFlagStateUntilTimeout.constprop.0>:
  * @param  State flag state to check
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
 800962e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8009630:	4604      	mov	r4, r0
 8009632:	460e      	mov	r6, r1
 8009634:	4615      	mov	r5, r2
 8009636:	461f      	mov	r7, r3
                                                       uint32_t Timeout, uint32_t Tickstart)
{
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 8009638:	6822      	ldr	r2, [r4, #0]
 800963a:	6893      	ldr	r3, [r2, #8]
 800963c:	ea36 0303 	bics.w	r3, r6, r3
 8009640:	d001      	beq.n	8009646 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x18>
        return HAL_TIMEOUT;
      }
    }
  }

  return HAL_OK;
 8009642:	2000      	movs	r0, #0
 8009644:	e02d      	b.n	80096a2 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x74>
    if (Timeout != HAL_MAX_DELAY)
 8009646:	1c6b      	adds	r3, r5, #1
 8009648:	d0f7      	beq.n	800963a <SPI_WaitFlagStateUntilTimeout.constprop.0+0xc>
      if (((HAL_GetTick() - Tickstart) >= Timeout) || (Timeout == 0U))
 800964a:	f7fe f8f3 	bl	8007834 <HAL_GetTick>
 800964e:	1bc0      	subs	r0, r0, r7
 8009650:	4285      	cmp	r5, r0
 8009652:	d8f1      	bhi.n	8009638 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xa>
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 8009654:	6823      	ldr	r3, [r4, #0]
 8009656:	685a      	ldr	r2, [r3, #4]
 8009658:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 800965c:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800965e:	6862      	ldr	r2, [r4, #4]
 8009660:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 8009664:	d10a      	bne.n	800967c <SPI_WaitFlagStateUntilTimeout.constprop.0+0x4e>
 8009666:	68a2      	ldr	r2, [r4, #8]
 8009668:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 800966c:	d002      	beq.n	8009674 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x46>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800966e:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 8009672:	d103      	bne.n	800967c <SPI_WaitFlagStateUntilTimeout.constprop.0+0x4e>
          __HAL_SPI_DISABLE(hspi);
 8009674:	681a      	ldr	r2, [r3, #0]
 8009676:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800967a:	601a      	str	r2, [r3, #0]
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 800967c:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800967e:	f5b2 5f00 	cmp.w	r2, #8192	; 0x2000
 8009682:	d107      	bne.n	8009694 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x66>
          SPI_RESET_CRC(hspi);
 8009684:	681a      	ldr	r2, [r3, #0]
 8009686:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800968a:	601a      	str	r2, [r3, #0]
 800968c:	681a      	ldr	r2, [r3, #0]
 800968e:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8009692:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 8009694:	2301      	movs	r3, #1
 8009696:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
        __HAL_UNLOCK(hspi);
 800969a:	2300      	movs	r3, #0
 800969c:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
 80096a0:	2003      	movs	r0, #3
}
 80096a2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080096a4 <SPI_EndRxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t Tickstart)
{
 80096a4:	b538      	push	{r3, r4, r5, lr}
 80096a6:	4613      	mov	r3, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80096a8:	6842      	ldr	r2, [r0, #4]
 80096aa:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 80096ae:	4604      	mov	r4, r0
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80096b0:	d11f      	bne.n	80096f2 <SPI_EndRxTransaction+0x4e>
 80096b2:	6882      	ldr	r2, [r0, #8]
 80096b4:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 80096b8:	d002      	beq.n	80096c0 <SPI_EndRxTransaction+0x1c>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 80096ba:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 80096be:	d107      	bne.n	80096d0 <SPI_EndRxTransaction+0x2c>
  {
    /* Disable SPI peripheral */
    __HAL_SPI_DISABLE(hspi);
 80096c0:	6825      	ldr	r5, [r4, #0]
 80096c2:	6828      	ldr	r0, [r5, #0]
  }

  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
  {
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 80096c4:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
    __HAL_SPI_DISABLE(hspi);
 80096c8:	f020 0040 	bic.w	r0, r0, #64	; 0x40
 80096cc:	6028      	str	r0, [r5, #0]
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 80096ce:	d007      	beq.n	80096e0 <SPI_EndRxTransaction+0x3c>
    {
      /* Control the BSY flag */
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 80096d0:	460a      	mov	r2, r1
 80096d2:	2180      	movs	r1, #128	; 0x80
 80096d4:	4620      	mov	r0, r4
 80096d6:	f7ff ffaa 	bl	800962e <SPI_WaitFlagStateUntilTimeout.constprop.0>
 80096da:	b920      	cbnz	r0, 80096e6 <SPI_EndRxTransaction+0x42>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
      return HAL_TIMEOUT;
    }
  }
  return HAL_OK;
 80096dc:	2000      	movs	r0, #0
}
 80096de:	bd38      	pop	{r3, r4, r5, pc}
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 80096e0:	460a      	mov	r2, r1
 80096e2:	2101      	movs	r1, #1
 80096e4:	e7f6      	b.n	80096d4 <SPI_EndRxTransaction+0x30>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 80096e6:	6d63      	ldr	r3, [r4, #84]	; 0x54
 80096e8:	f043 0320 	orr.w	r3, r3, #32
 80096ec:	6563      	str	r3, [r4, #84]	; 0x54
      return HAL_TIMEOUT;
 80096ee:	2003      	movs	r0, #3
 80096f0:	e7f5      	b.n	80096de <SPI_EndRxTransaction+0x3a>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 80096f2:	460a      	mov	r2, r1
 80096f4:	2101      	movs	r1, #1
 80096f6:	e7ee      	b.n	80096d6 <SPI_EndRxTransaction+0x32>

080096f8 <SPI_EndRxTxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
 80096f8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80096fa:	4613      	mov	r3, r2
  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 80096fc:	4a12      	ldr	r2, [pc, #72]	; (8009748 <SPI_EndRxTxTransaction+0x50>)
 80096fe:	6815      	ldr	r5, [r2, #0]
 8009700:	4a12      	ldr	r2, [pc, #72]	; (800974c <SPI_EndRxTxTransaction+0x54>)
 8009702:	fbb5 f5f2 	udiv	r5, r5, r2
 8009706:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800970a:	4355      	muls	r5, r2
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800970c:	6842      	ldr	r2, [r0, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800970e:	9501      	str	r5, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8009710:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 8009714:	4604      	mov	r4, r0
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8009716:	d10b      	bne.n	8009730 <SPI_EndRxTxTransaction+0x38>
  {
    /* Control the BSY flag */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8009718:	460a      	mov	r2, r1
 800971a:	2180      	movs	r1, #128	; 0x80
 800971c:	f7ff ff87 	bl	800962e <SPI_WaitFlagStateUntilTimeout.constprop.0>
 8009720:	b178      	cbz	r0, 8009742 <SPI_EndRxTxTransaction+0x4a>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8009722:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8009724:	f043 0320 	orr.w	r3, r3, #32
 8009728:	6563      	str	r3, [r4, #84]	; 0x54
      return HAL_TIMEOUT;
 800972a:	2003      	movs	r0, #3
      count--;
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
  }

  return HAL_OK;
}
 800972c:	b003      	add	sp, #12
 800972e:	bd30      	pop	{r4, r5, pc}
      if (count == 0U)
 8009730:	9b01      	ldr	r3, [sp, #4]
 8009732:	b133      	cbz	r3, 8009742 <SPI_EndRxTxTransaction+0x4a>
      count--;
 8009734:	9b01      	ldr	r3, [sp, #4]
 8009736:	3b01      	subs	r3, #1
 8009738:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800973a:	6823      	ldr	r3, [r4, #0]
 800973c:	689b      	ldr	r3, [r3, #8]
 800973e:	061b      	lsls	r3, r3, #24
 8009740:	d4f6      	bmi.n	8009730 <SPI_EndRxTxTransaction+0x38>
  return HAL_OK;
 8009742:	2000      	movs	r0, #0
 8009744:	e7f2      	b.n	800972c <SPI_EndRxTxTransaction+0x34>
 8009746:	bf00      	nop
 8009748:	20000078 	.word	0x20000078
 800974c:	016e3600 	.word	0x016e3600

08009750 <HAL_SPI_Init>:
{
 8009750:	b510      	push	{r4, lr}
  if (hspi == NULL)
 8009752:	4604      	mov	r4, r0
 8009754:	2800      	cmp	r0, #0
 8009756:	d036      	beq.n	80097c6 <HAL_SPI_Init+0x76>
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8009758:	2300      	movs	r3, #0
 800975a:	6283      	str	r3, [r0, #40]	; 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 800975c:	f890 3051 	ldrb.w	r3, [r0, #81]	; 0x51
 8009760:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8009764:	b91b      	cbnz	r3, 800976e <HAL_SPI_Init+0x1e>
    hspi->Lock = HAL_UNLOCKED;
 8009766:	f880 2050 	strb.w	r2, [r0, #80]	; 0x50
    HAL_SPI_MspInit(hspi);
 800976a:	f7f8 fb0b 	bl	8001d84 <HAL_SPI_MspInit>
  __HAL_SPI_DISABLE(hspi);
 800976e:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, (hspi->Init.Mode | hspi->Init.Direction | hspi->Init.DataSize |
 8009770:	69a2      	ldr	r2, [r4, #24]
  hspi->State = HAL_SPI_STATE_BUSY;
 8009772:	2302      	movs	r3, #2
 8009774:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_SPI_DISABLE(hspi);
 8009778:	680b      	ldr	r3, [r1, #0]
 800977a:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800977e:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, (hspi->Init.Mode | hspi->Init.Direction | hspi->Init.DataSize |
 8009780:	e9d4 3001 	ldrd	r3, r0, [r4, #4]
 8009784:	4303      	orrs	r3, r0
 8009786:	68e0      	ldr	r0, [r4, #12]
 8009788:	4303      	orrs	r3, r0
 800978a:	6920      	ldr	r0, [r4, #16]
 800978c:	4303      	orrs	r3, r0
 800978e:	6960      	ldr	r0, [r4, #20]
 8009790:	4303      	orrs	r3, r0
 8009792:	69e0      	ldr	r0, [r4, #28]
 8009794:	4303      	orrs	r3, r0
 8009796:	6a20      	ldr	r0, [r4, #32]
 8009798:	4303      	orrs	r3, r0
 800979a:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800979c:	4303      	orrs	r3, r0
 800979e:	f402 7000 	and.w	r0, r2, #512	; 0x200
 80097a2:	4303      	orrs	r3, r0
 80097a4:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | hspi->Init.TIMode));
 80097a6:	0c12      	lsrs	r2, r2, #16
 80097a8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80097aa:	f002 0204 	and.w	r2, r2, #4
 80097ae:	431a      	orrs	r2, r3
 80097b0:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 80097b2:	69cb      	ldr	r3, [r1, #28]
 80097b4:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80097b8:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 80097ba:	2000      	movs	r0, #0
  hspi->State     = HAL_SPI_STATE_READY;
 80097bc:	2301      	movs	r3, #1
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 80097be:	6560      	str	r0, [r4, #84]	; 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 80097c0:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
}
 80097c4:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 80097c6:	2001      	movs	r0, #1
 80097c8:	e7fc      	b.n	80097c4 <HAL_SPI_Init+0x74>

080097ca <HAL_SPI_Transmit>:
{
 80097ca:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80097ce:	461e      	mov	r6, r3
  __HAL_LOCK(hspi);
 80097d0:	f890 3050 	ldrb.w	r3, [r0, #80]	; 0x50
 80097d4:	2b01      	cmp	r3, #1
{
 80097d6:	4604      	mov	r4, r0
 80097d8:	460d      	mov	r5, r1
 80097da:	4617      	mov	r7, r2
  __HAL_LOCK(hspi);
 80097dc:	f000 809d 	beq.w	800991a <HAL_SPI_Transmit+0x150>
 80097e0:	2301      	movs	r3, #1
 80097e2:	f880 3050 	strb.w	r3, [r0, #80]	; 0x50
  tickstart = HAL_GetTick();
 80097e6:	f7fe f825 	bl	8007834 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 80097ea:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 80097ee:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 80097f0:	4680      	mov	r8, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 80097f2:	b2d8      	uxtb	r0, r3
 80097f4:	f040 808f 	bne.w	8009916 <HAL_SPI_Transmit+0x14c>
  if ((pData == NULL) || (Size == 0U))
 80097f8:	2d00      	cmp	r5, #0
 80097fa:	d05a      	beq.n	80098b2 <HAL_SPI_Transmit+0xe8>
 80097fc:	2f00      	cmp	r7, #0
 80097fe:	d058      	beq.n	80098b2 <HAL_SPI_Transmit+0xe8>
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 8009800:	2303      	movs	r3, #3
 8009802:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8009806:	68a2      	ldr	r2, [r4, #8]
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 8009808:	6325      	str	r5, [r4, #48]	; 0x30
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800980a:	2300      	movs	r3, #0
 800980c:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->RxISR       = NULL;
 800980e:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->TxXferCount = Size;
 8009812:	86e7      	strh	r7, [r4, #54]	; 0x36
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 8009814:	63a3      	str	r3, [r4, #56]	; 0x38
  hspi->RxXferCount = 0U;
 8009816:	87e3      	strh	r3, [r4, #62]	; 0x3e
  hspi->RxXferSize  = 0U;
 8009818:	87a3      	strh	r3, [r4, #60]	; 0x3c
    SPI_1LINE_TX(hspi);
 800981a:	6823      	ldr	r3, [r4, #0]
  hspi->TxXferSize  = Size;
 800981c:	86a7      	strh	r7, [r4, #52]	; 0x34
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800981e:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
    SPI_1LINE_TX(hspi);
 8009822:	bf08      	it	eq
 8009824:	681a      	ldreq	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8009826:	68e1      	ldr	r1, [r4, #12]
    SPI_1LINE_TX(hspi);
 8009828:	bf04      	itt	eq
 800982a:	f442 4280 	orreq.w	r2, r2, #16384	; 0x4000
 800982e:	601a      	streq	r2, [r3, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8009830:	681a      	ldr	r2, [r3, #0]
 8009832:	0652      	lsls	r2, r2, #25
    __HAL_SPI_ENABLE(hspi);
 8009834:	bf5e      	ittt	pl
 8009836:	681a      	ldrpl	r2, [r3, #0]
 8009838:	f042 0240 	orrpl.w	r2, r2, #64	; 0x40
 800983c:	601a      	strpl	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800983e:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8009842:	6862      	ldr	r2, [r4, #4]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8009844:	d141      	bne.n	80098ca <HAL_SPI_Transmit+0x100>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8009846:	b10a      	cbz	r2, 800984c <HAL_SPI_Transmit+0x82>
 8009848:	2f01      	cmp	r7, #1
 800984a:	d107      	bne.n	800985c <HAL_SPI_Transmit+0x92>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800984c:	f835 2b02 	ldrh.w	r2, [r5], #2
 8009850:	60da      	str	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8009852:	6325      	str	r5, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8009854:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8009856:	3b01      	subs	r3, #1
 8009858:	b29b      	uxth	r3, r3
 800985a:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800985c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800985e:	b29b      	uxth	r3, r3
 8009860:	b9a3      	cbnz	r3, 800988c <HAL_SPI_Transmit+0xc2>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8009862:	4642      	mov	r2, r8
 8009864:	4631      	mov	r1, r6
 8009866:	4620      	mov	r0, r4
 8009868:	f7ff ff46 	bl	80096f8 <SPI_EndRxTxTransaction>
 800986c:	2800      	cmp	r0, #0
 800986e:	d14f      	bne.n	8009910 <HAL_SPI_Transmit+0x146>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 8009870:	68a3      	ldr	r3, [r4, #8]
 8009872:	b933      	cbnz	r3, 8009882 <HAL_SPI_Transmit+0xb8>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8009874:	9301      	str	r3, [sp, #4]
 8009876:	6823      	ldr	r3, [r4, #0]
 8009878:	68da      	ldr	r2, [r3, #12]
 800987a:	9201      	str	r2, [sp, #4]
 800987c:	689b      	ldr	r3, [r3, #8]
 800987e:	9301      	str	r3, [sp, #4]
 8009880:	9b01      	ldr	r3, [sp, #4]
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8009882:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 8009884:	3800      	subs	r0, #0
 8009886:	bf18      	it	ne
 8009888:	2001      	movne	r0, #1
error:
 800988a:	e012      	b.n	80098b2 <HAL_SPI_Transmit+0xe8>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800988c:	6822      	ldr	r2, [r4, #0]
 800988e:	6893      	ldr	r3, [r2, #8]
 8009890:	0798      	lsls	r0, r3, #30
 8009892:	d505      	bpl.n	80098a0 <HAL_SPI_Transmit+0xd6>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8009894:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8009896:	f833 1b02 	ldrh.w	r1, [r3], #2
 800989a:	60d1      	str	r1, [r2, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800989c:	6323      	str	r3, [r4, #48]	; 0x30
 800989e:	e7d9      	b.n	8009854 <HAL_SPI_Transmit+0x8a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 80098a0:	f7fd ffc8 	bl	8007834 <HAL_GetTick>
 80098a4:	eba0 0008 	sub.w	r0, r0, r8
 80098a8:	42b0      	cmp	r0, r6
 80098aa:	d30b      	bcc.n	80098c4 <HAL_SPI_Transmit+0xfa>
 80098ac:	1c71      	adds	r1, r6, #1
 80098ae:	d0d5      	beq.n	800985c <HAL_SPI_Transmit+0x92>
          errorcode = HAL_TIMEOUT;
 80098b0:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 80098b2:	2301      	movs	r3, #1
 80098b4:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 80098b8:	2300      	movs	r3, #0
 80098ba:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 80098be:	b002      	add	sp, #8
 80098c0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 80098c4:	2e00      	cmp	r6, #0
 80098c6:	d1c9      	bne.n	800985c <HAL_SPI_Transmit+0x92>
 80098c8:	e7f2      	b.n	80098b0 <HAL_SPI_Transmit+0xe6>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 80098ca:	b10a      	cbz	r2, 80098d0 <HAL_SPI_Transmit+0x106>
 80098cc:	2f01      	cmp	r7, #1
 80098ce:	d108      	bne.n	80098e2 <HAL_SPI_Transmit+0x118>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 80098d0:	782a      	ldrb	r2, [r5, #0]
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 80098d2:	731a      	strb	r2, [r3, #12]
        hspi->pTxBuffPtr += sizeof(uint8_t);
 80098d4:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80098d6:	3301      	adds	r3, #1
 80098d8:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 80098da:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80098dc:	3b01      	subs	r3, #1
 80098de:	b29b      	uxth	r3, r3
 80098e0:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 80098e2:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80098e4:	b29b      	uxth	r3, r3
 80098e6:	2b00      	cmp	r3, #0
 80098e8:	d0bb      	beq.n	8009862 <HAL_SPI_Transmit+0x98>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 80098ea:	6823      	ldr	r3, [r4, #0]
 80098ec:	689a      	ldr	r2, [r3, #8]
 80098ee:	0792      	lsls	r2, r2, #30
 80098f0:	d502      	bpl.n	80098f8 <HAL_SPI_Transmit+0x12e>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 80098f2:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80098f4:	7812      	ldrb	r2, [r2, #0]
 80098f6:	e7ec      	b.n	80098d2 <HAL_SPI_Transmit+0x108>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 80098f8:	f7fd ff9c 	bl	8007834 <HAL_GetTick>
 80098fc:	eba0 0008 	sub.w	r0, r0, r8
 8009900:	42b0      	cmp	r0, r6
 8009902:	d302      	bcc.n	800990a <HAL_SPI_Transmit+0x140>
 8009904:	1c73      	adds	r3, r6, #1
 8009906:	d0ec      	beq.n	80098e2 <HAL_SPI_Transmit+0x118>
 8009908:	e7d2      	b.n	80098b0 <HAL_SPI_Transmit+0xe6>
 800990a:	2e00      	cmp	r6, #0
 800990c:	d1e9      	bne.n	80098e2 <HAL_SPI_Transmit+0x118>
 800990e:	e7cf      	b.n	80098b0 <HAL_SPI_Transmit+0xe6>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8009910:	2320      	movs	r3, #32
 8009912:	6563      	str	r3, [r4, #84]	; 0x54
 8009914:	e7ac      	b.n	8009870 <HAL_SPI_Transmit+0xa6>
    errorcode = HAL_BUSY;
 8009916:	2002      	movs	r0, #2
 8009918:	e7cb      	b.n	80098b2 <HAL_SPI_Transmit+0xe8>
  __HAL_LOCK(hspi);
 800991a:	2002      	movs	r0, #2
 800991c:	e7cf      	b.n	80098be <HAL_SPI_Transmit+0xf4>

0800991e <HAL_SPI_TransmitReceive>:
{
 800991e:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8009922:	461e      	mov	r6, r3
  __HAL_LOCK(hspi);
 8009924:	f890 3050 	ldrb.w	r3, [r0, #80]	; 0x50
{
 8009928:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  __HAL_LOCK(hspi);
 800992a:	2b01      	cmp	r3, #1
{
 800992c:	4604      	mov	r4, r0
 800992e:	460d      	mov	r5, r1
 8009930:	4691      	mov	r9, r2
  __HAL_LOCK(hspi);
 8009932:	f000 80e6 	beq.w	8009b02 <HAL_SPI_TransmitReceive+0x1e4>
 8009936:	2301      	movs	r3, #1
 8009938:	f880 3050 	strb.w	r3, [r0, #80]	; 0x50
  tickstart = HAL_GetTick();
 800993c:	f7fd ff7a 	bl	8007834 <HAL_GetTick>
  tmp_state           = hspi->State;
 8009940:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  tmp_mode            = hspi->Init.Mode;
 8009944:	6862      	ldr	r2, [r4, #4]
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 8009946:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 8009948:	4680      	mov	r8, r0
  tmp_state           = hspi->State;
 800994a:	b2d9      	uxtb	r1, r3
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800994c:	d00a      	beq.n	8009964 <HAL_SPI_TransmitReceive+0x46>
 800994e:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 8009952:	f040 80d4 	bne.w	8009afe <HAL_SPI_TransmitReceive+0x1e0>
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 8009956:	68a3      	ldr	r3, [r4, #8]
 8009958:	2b00      	cmp	r3, #0
 800995a:	f040 80d0 	bne.w	8009afe <HAL_SPI_TransmitReceive+0x1e0>
 800995e:	2904      	cmp	r1, #4
 8009960:	f040 80cd 	bne.w	8009afe <HAL_SPI_TransmitReceive+0x1e0>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 8009964:	2d00      	cmp	r5, #0
 8009966:	d040      	beq.n	80099ea <HAL_SPI_TransmitReceive+0xcc>
 8009968:	f1b9 0f00 	cmp.w	r9, #0
 800996c:	d03d      	beq.n	80099ea <HAL_SPI_TransmitReceive+0xcc>
 800996e:	2e00      	cmp	r6, #0
 8009970:	d03b      	beq.n	80099ea <HAL_SPI_TransmitReceive+0xcc>
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 8009972:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 8009976:	f8c4 9038 	str.w	r9, [r4, #56]	; 0x38
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800997a:	2b04      	cmp	r3, #4
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 800997c:	bf1c      	itt	ne
 800997e:	2305      	movne	r3, #5
 8009980:	f884 3051 	strbne.w	r3, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8009984:	2300      	movs	r3, #0
 8009986:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->TxISR       = NULL;
 8009988:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800998c:	6823      	ldr	r3, [r4, #0]
  hspi->RxXferCount = Size;
 800998e:	87e6      	strh	r6, [r4, #62]	; 0x3e
  hspi->TxXferCount = Size;
 8009990:	86e6      	strh	r6, [r4, #54]	; 0x36
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8009992:	6819      	ldr	r1, [r3, #0]
  hspi->RxXferSize  = Size;
 8009994:	87a6      	strh	r6, [r4, #60]	; 0x3c
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8009996:	0649      	lsls	r1, r1, #25
    __HAL_SPI_ENABLE(hspi);
 8009998:	bf58      	it	pl
 800999a:	6819      	ldrpl	r1, [r3, #0]
  hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 800999c:	6325      	str	r5, [r4, #48]	; 0x30
    __HAL_SPI_ENABLE(hspi);
 800999e:	bf58      	it	pl
 80099a0:	f041 0140 	orrpl.w	r1, r1, #64	; 0x40
  hspi->TxXferSize  = Size;
 80099a4:	86a6      	strh	r6, [r4, #52]	; 0x34
    __HAL_SPI_ENABLE(hspi);
 80099a6:	bf58      	it	pl
 80099a8:	6019      	strpl	r1, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 80099aa:	68e1      	ldr	r1, [r4, #12]
 80099ac:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
 80099b0:	d152      	bne.n	8009a58 <HAL_SPI_TransmitReceive+0x13a>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 80099b2:	b10a      	cbz	r2, 80099b8 <HAL_SPI_TransmitReceive+0x9a>
 80099b4:	2e01      	cmp	r6, #1
 80099b6:	d107      	bne.n	80099c8 <HAL_SPI_TransmitReceive+0xaa>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 80099b8:	f835 2b02 	ldrh.w	r2, [r5], #2
 80099bc:	60da      	str	r2, [r3, #12]
      hspi->TxXferCount--;
 80099be:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 80099c0:	6325      	str	r5, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 80099c2:	3b01      	subs	r3, #1
 80099c4:	b29b      	uxth	r3, r3
 80099c6:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 1U;
 80099c8:	2501      	movs	r5, #1
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 80099ca:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80099cc:	b29b      	uxth	r3, r3
 80099ce:	b973      	cbnz	r3, 80099ee <HAL_SPI_TransmitReceive+0xd0>
 80099d0:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 80099d2:	b29b      	uxth	r3, r3
 80099d4:	b95b      	cbnz	r3, 80099ee <HAL_SPI_TransmitReceive+0xd0>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 80099d6:	4642      	mov	r2, r8
 80099d8:	4639      	mov	r1, r7
 80099da:	4620      	mov	r0, r4
 80099dc:	f7ff fe8c 	bl	80096f8 <SPI_EndRxTxTransaction>
 80099e0:	2800      	cmp	r0, #0
 80099e2:	f000 8081 	beq.w	8009ae8 <HAL_SPI_TransmitReceive+0x1ca>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 80099e6:	2320      	movs	r3, #32
 80099e8:	6563      	str	r3, [r4, #84]	; 0x54
    errorcode = HAL_ERROR;
 80099ea:	2001      	movs	r0, #1
 80099ec:	e02b      	b.n	8009a46 <HAL_SPI_TransmitReceive+0x128>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 80099ee:	6821      	ldr	r1, [r4, #0]
 80099f0:	688b      	ldr	r3, [r1, #8]
 80099f2:	079e      	lsls	r6, r3, #30
 80099f4:	d50d      	bpl.n	8009a12 <HAL_SPI_TransmitReceive+0xf4>
 80099f6:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80099f8:	b29b      	uxth	r3, r3
 80099fa:	b153      	cbz	r3, 8009a12 <HAL_SPI_TransmitReceive+0xf4>
 80099fc:	b14d      	cbz	r5, 8009a12 <HAL_SPI_TransmitReceive+0xf4>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 80099fe:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8009a00:	f833 2b02 	ldrh.w	r2, [r3], #2
 8009a04:	60ca      	str	r2, [r1, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 8009a06:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8009a08:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8009a0a:	3b01      	subs	r3, #1
 8009a0c:	b29b      	uxth	r3, r3
 8009a0e:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 8009a10:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 8009a12:	688a      	ldr	r2, [r1, #8]
 8009a14:	f012 0201 	ands.w	r2, r2, #1
 8009a18:	d00c      	beq.n	8009a34 <HAL_SPI_TransmitReceive+0x116>
 8009a1a:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8009a1c:	b29b      	uxth	r3, r3
 8009a1e:	b14b      	cbz	r3, 8009a34 <HAL_SPI_TransmitReceive+0x116>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 8009a20:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8009a22:	68c9      	ldr	r1, [r1, #12]
 8009a24:	f823 1b02 	strh.w	r1, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 8009a28:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 8009a2a:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8009a2c:	3b01      	subs	r3, #1
 8009a2e:	b29b      	uxth	r3, r3
 8009a30:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 8009a32:	4615      	mov	r5, r2
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 8009a34:	f7fd fefe 	bl	8007834 <HAL_GetTick>
 8009a38:	eba0 0008 	sub.w	r0, r0, r8
 8009a3c:	42b8      	cmp	r0, r7
 8009a3e:	d3c4      	bcc.n	80099ca <HAL_SPI_TransmitReceive+0xac>
 8009a40:	1c78      	adds	r0, r7, #1
 8009a42:	d0c2      	beq.n	80099ca <HAL_SPI_TransmitReceive+0xac>
        errorcode = HAL_TIMEOUT;
 8009a44:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 8009a46:	2301      	movs	r3, #1
 8009a48:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 8009a4c:	2300      	movs	r3, #0
 8009a4e:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 8009a52:	b003      	add	sp, #12
 8009a54:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8009a58:	b10a      	cbz	r2, 8009a5e <HAL_SPI_TransmitReceive+0x140>
 8009a5a:	2e01      	cmp	r6, #1
 8009a5c:	d108      	bne.n	8009a70 <HAL_SPI_TransmitReceive+0x152>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8009a5e:	782a      	ldrb	r2, [r5, #0]
 8009a60:	731a      	strb	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint8_t);
 8009a62:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8009a64:	3301      	adds	r3, #1
 8009a66:	6323      	str	r3, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 8009a68:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8009a6a:	3b01      	subs	r3, #1
 8009a6c:	b29b      	uxth	r3, r3
 8009a6e:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 1U;
 8009a70:	2501      	movs	r5, #1
 8009a72:	e02d      	b.n	8009ad0 <HAL_SPI_TransmitReceive+0x1b2>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 8009a74:	6822      	ldr	r2, [r4, #0]
 8009a76:	6893      	ldr	r3, [r2, #8]
 8009a78:	0799      	lsls	r1, r3, #30
 8009a7a:	d50e      	bpl.n	8009a9a <HAL_SPI_TransmitReceive+0x17c>
 8009a7c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8009a7e:	b29b      	uxth	r3, r3
 8009a80:	b15b      	cbz	r3, 8009a9a <HAL_SPI_TransmitReceive+0x17c>
 8009a82:	b155      	cbz	r5, 8009a9a <HAL_SPI_TransmitReceive+0x17c>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 8009a84:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8009a86:	781b      	ldrb	r3, [r3, #0]
 8009a88:	7313      	strb	r3, [r2, #12]
        hspi->pTxBuffPtr++;
 8009a8a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8009a8c:	3301      	adds	r3, #1
 8009a8e:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8009a90:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8009a92:	3b01      	subs	r3, #1
 8009a94:	b29b      	uxth	r3, r3
 8009a96:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 8009a98:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 8009a9a:	6822      	ldr	r2, [r4, #0]
 8009a9c:	6891      	ldr	r1, [r2, #8]
 8009a9e:	f011 0101 	ands.w	r1, r1, #1
 8009aa2:	d00d      	beq.n	8009ac0 <HAL_SPI_TransmitReceive+0x1a2>
 8009aa4:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8009aa6:	b29b      	uxth	r3, r3
 8009aa8:	b153      	cbz	r3, 8009ac0 <HAL_SPI_TransmitReceive+0x1a2>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 8009aaa:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8009aac:	68d2      	ldr	r2, [r2, #12]
 8009aae:	701a      	strb	r2, [r3, #0]
        hspi->pRxBuffPtr++;
 8009ab0:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8009ab2:	3301      	adds	r3, #1
 8009ab4:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 8009ab6:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8009ab8:	3b01      	subs	r3, #1
 8009aba:	b29b      	uxth	r3, r3
 8009abc:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 8009abe:	460d      	mov	r5, r1
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 8009ac0:	f7fd feb8 	bl	8007834 <HAL_GetTick>
 8009ac4:	eba0 0008 	sub.w	r0, r0, r8
 8009ac8:	42b8      	cmp	r0, r7
 8009aca:	d30a      	bcc.n	8009ae2 <HAL_SPI_TransmitReceive+0x1c4>
 8009acc:	1c7b      	adds	r3, r7, #1
 8009ace:	d1b9      	bne.n	8009a44 <HAL_SPI_TransmitReceive+0x126>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8009ad0:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8009ad2:	b29b      	uxth	r3, r3
 8009ad4:	2b00      	cmp	r3, #0
 8009ad6:	d1cd      	bne.n	8009a74 <HAL_SPI_TransmitReceive+0x156>
 8009ad8:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8009ada:	b29b      	uxth	r3, r3
 8009adc:	2b00      	cmp	r3, #0
 8009ade:	d1c9      	bne.n	8009a74 <HAL_SPI_TransmitReceive+0x156>
 8009ae0:	e779      	b.n	80099d6 <HAL_SPI_TransmitReceive+0xb8>
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 8009ae2:	2f00      	cmp	r7, #0
 8009ae4:	d1f4      	bne.n	8009ad0 <HAL_SPI_TransmitReceive+0x1b2>
 8009ae6:	e7ad      	b.n	8009a44 <HAL_SPI_TransmitReceive+0x126>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 8009ae8:	68a3      	ldr	r3, [r4, #8]
 8009aea:	2b00      	cmp	r3, #0
 8009aec:	d1ab      	bne.n	8009a46 <HAL_SPI_TransmitReceive+0x128>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8009aee:	6823      	ldr	r3, [r4, #0]
 8009af0:	9001      	str	r0, [sp, #4]
 8009af2:	68da      	ldr	r2, [r3, #12]
 8009af4:	9201      	str	r2, [sp, #4]
 8009af6:	689b      	ldr	r3, [r3, #8]
 8009af8:	9301      	str	r3, [sp, #4]
 8009afa:	9b01      	ldr	r3, [sp, #4]
 8009afc:	e7a3      	b.n	8009a46 <HAL_SPI_TransmitReceive+0x128>
    errorcode = HAL_BUSY;
 8009afe:	2002      	movs	r0, #2
 8009b00:	e7a1      	b.n	8009a46 <HAL_SPI_TransmitReceive+0x128>
  __HAL_LOCK(hspi);
 8009b02:	2002      	movs	r0, #2
 8009b04:	e7a5      	b.n	8009a52 <HAL_SPI_TransmitReceive+0x134>

08009b06 <HAL_SPI_Receive>:
{
 8009b06:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8009b0a:	461d      	mov	r5, r3
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 8009b0c:	6843      	ldr	r3, [r0, #4]
 8009b0e:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
{
 8009b12:	4604      	mov	r4, r0
 8009b14:	4689      	mov	r9, r1
 8009b16:	4617      	mov	r7, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 8009b18:	d10c      	bne.n	8009b34 <HAL_SPI_Receive+0x2e>
 8009b1a:	6883      	ldr	r3, [r0, #8]
 8009b1c:	b953      	cbnz	r3, 8009b34 <HAL_SPI_Receive+0x2e>
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 8009b1e:	2304      	movs	r3, #4
 8009b20:	f880 3051 	strb.w	r3, [r0, #81]	; 0x51
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 8009b24:	4613      	mov	r3, r2
 8009b26:	9500      	str	r5, [sp, #0]
 8009b28:	460a      	mov	r2, r1
 8009b2a:	f7ff fef8 	bl	800991e <HAL_SPI_TransmitReceive>
}
 8009b2e:	b003      	add	sp, #12
 8009b30:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  __HAL_LOCK(hspi);
 8009b34:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 8009b38:	2b01      	cmp	r3, #1
 8009b3a:	f000 8084 	beq.w	8009c46 <HAL_SPI_Receive+0x140>
 8009b3e:	2301      	movs	r3, #1
 8009b40:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 8009b44:	f7fd fe76 	bl	8007834 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 8009b48:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 8009b4c:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 8009b4e:	4680      	mov	r8, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 8009b50:	b2d8      	uxtb	r0, r3
 8009b52:	d176      	bne.n	8009c42 <HAL_SPI_Receive+0x13c>
  if ((pData == NULL) || (Size == 0U))
 8009b54:	f1b9 0f00 	cmp.w	r9, #0
 8009b58:	d05a      	beq.n	8009c10 <HAL_SPI_Receive+0x10a>
 8009b5a:	2f00      	cmp	r7, #0
 8009b5c:	d058      	beq.n	8009c10 <HAL_SPI_Receive+0x10a>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8009b5e:	68a2      	ldr	r2, [r4, #8]
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 8009b60:	f8c4 9038 	str.w	r9, [r4, #56]	; 0x38
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 8009b64:	2304      	movs	r3, #4
 8009b66:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8009b6a:	2600      	movs	r6, #0
    SPI_1LINE_RX(hspi);
 8009b6c:	6823      	ldr	r3, [r4, #0]
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8009b6e:	6566      	str	r6, [r4, #84]	; 0x54
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8009b70:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
  hspi->RxXferCount = Size;
 8009b74:	87e7      	strh	r7, [r4, #62]	; 0x3e
  hspi->TxXferCount = 0U;
 8009b76:	86e6      	strh	r6, [r4, #54]	; 0x36
    SPI_1LINE_RX(hspi);
 8009b78:	bf08      	it	eq
 8009b7a:	681a      	ldreq	r2, [r3, #0]
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 8009b7c:	6326      	str	r6, [r4, #48]	; 0x30
    SPI_1LINE_RX(hspi);
 8009b7e:	bf08      	it	eq
 8009b80:	f422 4280 	biceq.w	r2, r2, #16384	; 0x4000
  hspi->TxISR       = NULL;
 8009b84:	e9c4 6610 	strd	r6, r6, [r4, #64]	; 0x40
  hspi->TxXferSize  = 0U;
 8009b88:	86a6      	strh	r6, [r4, #52]	; 0x34
  hspi->RxXferSize  = Size;
 8009b8a:	87a7      	strh	r7, [r4, #60]	; 0x3c
    SPI_1LINE_RX(hspi);
 8009b8c:	bf08      	it	eq
 8009b8e:	601a      	streq	r2, [r3, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8009b90:	681a      	ldr	r2, [r3, #0]
 8009b92:	0656      	lsls	r6, r2, #25
    __HAL_SPI_ENABLE(hspi);
 8009b94:	bf5e      	ittt	pl
 8009b96:	681a      	ldrpl	r2, [r3, #0]
 8009b98:	f042 0240 	orrpl.w	r2, r2, #64	; 0x40
 8009b9c:	601a      	strpl	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 8009b9e:	68e3      	ldr	r3, [r4, #12]
 8009ba0:	b1f3      	cbz	r3, 8009be0 <HAL_SPI_Receive+0xda>
    while (hspi->RxXferCount > 0U)
 8009ba2:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8009ba4:	b29b      	uxth	r3, r3
 8009ba6:	b1fb      	cbz	r3, 8009be8 <HAL_SPI_Receive+0xe2>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 8009ba8:	6823      	ldr	r3, [r4, #0]
 8009baa:	689a      	ldr	r2, [r3, #8]
 8009bac:	07d2      	lsls	r2, r2, #31
 8009bae:	d539      	bpl.n	8009c24 <HAL_SPI_Receive+0x11e>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 8009bb0:	68da      	ldr	r2, [r3, #12]
 8009bb2:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8009bb4:	f823 2b02 	strh.w	r2, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 8009bb8:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 8009bba:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8009bbc:	3b01      	subs	r3, #1
 8009bbe:	b29b      	uxth	r3, r3
 8009bc0:	87e3      	strh	r3, [r4, #62]	; 0x3e
 8009bc2:	e7ee      	b.n	8009ba2 <HAL_SPI_Receive+0x9c>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 8009bc4:	6823      	ldr	r3, [r4, #0]
 8009bc6:	689a      	ldr	r2, [r3, #8]
 8009bc8:	07d0      	lsls	r0, r2, #31
 8009bca:	d518      	bpl.n	8009bfe <HAL_SPI_Receive+0xf8>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 8009bcc:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8009bce:	7b1b      	ldrb	r3, [r3, #12]
 8009bd0:	7013      	strb	r3, [r2, #0]
        hspi->pRxBuffPtr += sizeof(uint8_t);
 8009bd2:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8009bd4:	3301      	adds	r3, #1
 8009bd6:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 8009bd8:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8009bda:	3b01      	subs	r3, #1
 8009bdc:	b29b      	uxth	r3, r3
 8009bde:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 8009be0:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8009be2:	b29b      	uxth	r3, r3
 8009be4:	2b00      	cmp	r3, #0
 8009be6:	d1ed      	bne.n	8009bc4 <HAL_SPI_Receive+0xbe>
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8009be8:	4642      	mov	r2, r8
 8009bea:	4629      	mov	r1, r5
 8009bec:	4620      	mov	r0, r4
 8009bee:	f7ff fd59 	bl	80096a4 <SPI_EndRxTransaction>
 8009bf2:	bb18      	cbnz	r0, 8009c3c <HAL_SPI_Receive+0x136>
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8009bf4:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 8009bf6:	3800      	subs	r0, #0
 8009bf8:	bf18      	it	ne
 8009bfa:	2001      	movne	r0, #1
error :
 8009bfc:	e008      	b.n	8009c10 <HAL_SPI_Receive+0x10a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8009bfe:	f7fd fe19 	bl	8007834 <HAL_GetTick>
 8009c02:	eba0 0008 	sub.w	r0, r0, r8
 8009c06:	42a8      	cmp	r0, r5
 8009c08:	d309      	bcc.n	8009c1e <HAL_SPI_Receive+0x118>
 8009c0a:	1c69      	adds	r1, r5, #1
 8009c0c:	d0e8      	beq.n	8009be0 <HAL_SPI_Receive+0xda>
          errorcode = HAL_TIMEOUT;
 8009c0e:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 8009c10:	2301      	movs	r3, #1
 8009c12:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 8009c16:	2300      	movs	r3, #0
 8009c18:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  return errorcode;
 8009c1c:	e787      	b.n	8009b2e <HAL_SPI_Receive+0x28>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8009c1e:	2d00      	cmp	r5, #0
 8009c20:	d1de      	bne.n	8009be0 <HAL_SPI_Receive+0xda>
 8009c22:	e7f4      	b.n	8009c0e <HAL_SPI_Receive+0x108>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8009c24:	f7fd fe06 	bl	8007834 <HAL_GetTick>
 8009c28:	eba0 0008 	sub.w	r0, r0, r8
 8009c2c:	42a8      	cmp	r0, r5
 8009c2e:	d302      	bcc.n	8009c36 <HAL_SPI_Receive+0x130>
 8009c30:	1c6b      	adds	r3, r5, #1
 8009c32:	d0b6      	beq.n	8009ba2 <HAL_SPI_Receive+0x9c>
 8009c34:	e7eb      	b.n	8009c0e <HAL_SPI_Receive+0x108>
 8009c36:	2d00      	cmp	r5, #0
 8009c38:	d1b3      	bne.n	8009ba2 <HAL_SPI_Receive+0x9c>
 8009c3a:	e7e8      	b.n	8009c0e <HAL_SPI_Receive+0x108>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8009c3c:	2320      	movs	r3, #32
 8009c3e:	6563      	str	r3, [r4, #84]	; 0x54
 8009c40:	e7d8      	b.n	8009bf4 <HAL_SPI_Receive+0xee>
    errorcode = HAL_BUSY;
 8009c42:	2002      	movs	r0, #2
 8009c44:	e7e4      	b.n	8009c10 <HAL_SPI_Receive+0x10a>
  __HAL_LOCK(hspi);
 8009c46:	2002      	movs	r0, #2
 8009c48:	e771      	b.n	8009b2e <HAL_SPI_Receive+0x28>

08009c4a <HAL_TIM_Base_Start_IT>:

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 8009c4a:	6803      	ldr	r3, [r0, #0]
 8009c4c:	68da      	ldr	r2, [r3, #12]
 8009c4e:	f042 0201 	orr.w	r2, r2, #1
 8009c52:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8009c54:	689a      	ldr	r2, [r3, #8]
 8009c56:	f002 0207 	and.w	r2, r2, #7
  if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8009c5a:	2a06      	cmp	r2, #6
  {
    __HAL_TIM_ENABLE(htim);
 8009c5c:	bf1e      	ittt	ne
 8009c5e:	681a      	ldrne	r2, [r3, #0]
 8009c60:	f042 0201 	orrne.w	r2, r2, #1
 8009c64:	601a      	strne	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
}
 8009c66:	2000      	movs	r0, #0
 8009c68:	4770      	bx	lr

08009c6a <HAL_TIM_OC_DelayElapsedCallback>:
 8009c6a:	4770      	bx	lr

08009c6c <HAL_TIM_IC_CaptureCallback>:
 8009c6c:	4770      	bx	lr

08009c6e <HAL_TIM_PWM_PulseFinishedCallback>:
 8009c6e:	4770      	bx	lr

08009c70 <HAL_TIM_TriggerCallback>:
 8009c70:	4770      	bx	lr

08009c72 <HAL_TIM_IRQHandler>:
  * @retval None
  */
void HAL_TIM_IRQHandler(TIM_HandleTypeDef *htim)
{
  /* Capture compare 1 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 8009c72:	6803      	ldr	r3, [r0, #0]
 8009c74:	691a      	ldr	r2, [r3, #16]
 8009c76:	0791      	lsls	r1, r2, #30
{
 8009c78:	b510      	push	{r4, lr}
 8009c7a:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 8009c7c:	d50e      	bpl.n	8009c9c <HAL_TIM_IRQHandler+0x2a>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 8009c7e:	68da      	ldr	r2, [r3, #12]
 8009c80:	0792      	lsls	r2, r2, #30
 8009c82:	d50b      	bpl.n	8009c9c <HAL_TIM_IRQHandler+0x2a>
    {
      {
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 8009c84:	f06f 0202 	mvn.w	r2, #2
 8009c88:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 8009c8a:	2201      	movs	r2, #1
 8009c8c:	7702      	strb	r2, [r0, #28]

        /* Input capture event */
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 8009c8e:	699b      	ldr	r3, [r3, #24]
 8009c90:	079b      	lsls	r3, r3, #30
 8009c92:	d077      	beq.n	8009d84 <HAL_TIM_IRQHandler+0x112>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->IC_CaptureCallback(htim);
#else
          HAL_TIM_IC_CaptureCallback(htim);
 8009c94:	f7ff ffea 	bl	8009c6c <HAL_TIM_IC_CaptureCallback>
#else
          HAL_TIM_OC_DelayElapsedCallback(htim);
          HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
        }
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8009c98:	2300      	movs	r3, #0
 8009c9a:	7723      	strb	r3, [r4, #28]
      }
    }
  }
  /* Capture compare 2 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 8009c9c:	6823      	ldr	r3, [r4, #0]
 8009c9e:	691a      	ldr	r2, [r3, #16]
 8009ca0:	0750      	lsls	r0, r2, #29
 8009ca2:	d510      	bpl.n	8009cc6 <HAL_TIM_IRQHandler+0x54>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 8009ca4:	68da      	ldr	r2, [r3, #12]
 8009ca6:	0751      	lsls	r1, r2, #29
 8009ca8:	d50d      	bpl.n	8009cc6 <HAL_TIM_IRQHandler+0x54>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 8009caa:	f06f 0204 	mvn.w	r2, #4
 8009cae:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 8009cb0:	2202      	movs	r2, #2
 8009cb2:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 8009cb4:	699b      	ldr	r3, [r3, #24]
 8009cb6:	f413 7f40 	tst.w	r3, #768	; 0x300
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8009cba:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 8009cbc:	d068      	beq.n	8009d90 <HAL_TIM_IRQHandler+0x11e>
        HAL_TIM_IC_CaptureCallback(htim);
 8009cbe:	f7ff ffd5 	bl	8009c6c <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8009cc2:	2300      	movs	r3, #0
 8009cc4:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 3 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 8009cc6:	6823      	ldr	r3, [r4, #0]
 8009cc8:	691a      	ldr	r2, [r3, #16]
 8009cca:	0712      	lsls	r2, r2, #28
 8009ccc:	d50f      	bpl.n	8009cee <HAL_TIM_IRQHandler+0x7c>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 8009cce:	68da      	ldr	r2, [r3, #12]
 8009cd0:	0710      	lsls	r0, r2, #28
 8009cd2:	d50c      	bpl.n	8009cee <HAL_TIM_IRQHandler+0x7c>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 8009cd4:	f06f 0208 	mvn.w	r2, #8
 8009cd8:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 8009cda:	2204      	movs	r2, #4
 8009cdc:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8009cde:	69db      	ldr	r3, [r3, #28]
 8009ce0:	0799      	lsls	r1, r3, #30
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8009ce2:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8009ce4:	d05a      	beq.n	8009d9c <HAL_TIM_IRQHandler+0x12a>
        HAL_TIM_IC_CaptureCallback(htim);
 8009ce6:	f7ff ffc1 	bl	8009c6c <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8009cea:	2300      	movs	r3, #0
 8009cec:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 4 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 8009cee:	6823      	ldr	r3, [r4, #0]
 8009cf0:	691a      	ldr	r2, [r3, #16]
 8009cf2:	06d2      	lsls	r2, r2, #27
 8009cf4:	d510      	bpl.n	8009d18 <HAL_TIM_IRQHandler+0xa6>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 8009cf6:	68da      	ldr	r2, [r3, #12]
 8009cf8:	06d0      	lsls	r0, r2, #27
 8009cfa:	d50d      	bpl.n	8009d18 <HAL_TIM_IRQHandler+0xa6>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 8009cfc:	f06f 0210 	mvn.w	r2, #16
 8009d00:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 8009d02:	2208      	movs	r2, #8
 8009d04:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8009d06:	69db      	ldr	r3, [r3, #28]
 8009d08:	f413 7f40 	tst.w	r3, #768	; 0x300
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8009d0c:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8009d0e:	d04b      	beq.n	8009da8 <HAL_TIM_IRQHandler+0x136>
        HAL_TIM_IC_CaptureCallback(htim);
 8009d10:	f7ff ffac 	bl	8009c6c <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8009d14:	2300      	movs	r3, #0
 8009d16:	7723      	strb	r3, [r4, #28]
    }
  }
  /* TIM Update event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 8009d18:	6823      	ldr	r3, [r4, #0]
 8009d1a:	691a      	ldr	r2, [r3, #16]
 8009d1c:	07d1      	lsls	r1, r2, #31
 8009d1e:	d508      	bpl.n	8009d32 <HAL_TIM_IRQHandler+0xc0>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 8009d20:	68da      	ldr	r2, [r3, #12]
 8009d22:	07d2      	lsls	r2, r2, #31
 8009d24:	d505      	bpl.n	8009d32 <HAL_TIM_IRQHandler+0xc0>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 8009d26:	f06f 0201 	mvn.w	r2, #1
 8009d2a:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->PeriodElapsedCallback(htim);
#else
      HAL_TIM_PeriodElapsedCallback(htim);
 8009d2c:	4620      	mov	r0, r4
 8009d2e:	f7f7 fe31 	bl	8001994 <HAL_TIM_PeriodElapsedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break input event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 8009d32:	6823      	ldr	r3, [r4, #0]
 8009d34:	691a      	ldr	r2, [r3, #16]
 8009d36:	0610      	lsls	r0, r2, #24
 8009d38:	d508      	bpl.n	8009d4c <HAL_TIM_IRQHandler+0xda>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 8009d3a:	68da      	ldr	r2, [r3, #12]
 8009d3c:	0611      	lsls	r1, r2, #24
 8009d3e:	d505      	bpl.n	8009d4c <HAL_TIM_IRQHandler+0xda>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 8009d40:	f06f 0280 	mvn.w	r2, #128	; 0x80
 8009d44:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->BreakCallback(htim);
#else
      HAL_TIMEx_BreakCallback(htim);
 8009d46:	4620      	mov	r0, r4
 8009d48:	f000 f8f5 	bl	8009f36 <HAL_TIMEx_BreakCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Trigger detection event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 8009d4c:	6823      	ldr	r3, [r4, #0]
 8009d4e:	691a      	ldr	r2, [r3, #16]
 8009d50:	0652      	lsls	r2, r2, #25
 8009d52:	d508      	bpl.n	8009d66 <HAL_TIM_IRQHandler+0xf4>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 8009d54:	68da      	ldr	r2, [r3, #12]
 8009d56:	0650      	lsls	r0, r2, #25
 8009d58:	d505      	bpl.n	8009d66 <HAL_TIM_IRQHandler+0xf4>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 8009d5a:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8009d5e:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->TriggerCallback(htim);
#else
      HAL_TIM_TriggerCallback(htim);
 8009d60:	4620      	mov	r0, r4
 8009d62:	f7ff ff85 	bl	8009c70 <HAL_TIM_TriggerCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM commutation event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 8009d66:	6823      	ldr	r3, [r4, #0]
 8009d68:	691a      	ldr	r2, [r3, #16]
 8009d6a:	0691      	lsls	r1, r2, #26
 8009d6c:	d522      	bpl.n	8009db4 <HAL_TIM_IRQHandler+0x142>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 8009d6e:	68da      	ldr	r2, [r3, #12]
 8009d70:	0692      	lsls	r2, r2, #26
 8009d72:	d51f      	bpl.n	8009db4 <HAL_TIM_IRQHandler+0x142>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 8009d74:	f06f 0220 	mvn.w	r2, #32
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->CommutationCallback(htim);
#else
      HAL_TIMEx_CommutCallback(htim);
 8009d78:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 8009d7a:	611a      	str	r2, [r3, #16]
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
}
 8009d7c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 8009d80:	f000 b8d8 	b.w	8009f34 <HAL_TIMEx_CommutCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 8009d84:	f7ff ff71 	bl	8009c6a <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 8009d88:	4620      	mov	r0, r4
 8009d8a:	f7ff ff70 	bl	8009c6e <HAL_TIM_PWM_PulseFinishedCallback>
 8009d8e:	e783      	b.n	8009c98 <HAL_TIM_IRQHandler+0x26>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8009d90:	f7ff ff6b 	bl	8009c6a <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8009d94:	4620      	mov	r0, r4
 8009d96:	f7ff ff6a 	bl	8009c6e <HAL_TIM_PWM_PulseFinishedCallback>
 8009d9a:	e792      	b.n	8009cc2 <HAL_TIM_IRQHandler+0x50>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8009d9c:	f7ff ff65 	bl	8009c6a <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8009da0:	4620      	mov	r0, r4
 8009da2:	f7ff ff64 	bl	8009c6e <HAL_TIM_PWM_PulseFinishedCallback>
 8009da6:	e7a0      	b.n	8009cea <HAL_TIM_IRQHandler+0x78>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8009da8:	f7ff ff5f 	bl	8009c6a <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8009dac:	4620      	mov	r0, r4
 8009dae:	f7ff ff5e 	bl	8009c6e <HAL_TIM_PWM_PulseFinishedCallback>
 8009db2:	e7af      	b.n	8009d14 <HAL_TIM_IRQHandler+0xa2>
}
 8009db4:	bd10      	pop	{r4, pc}
	...

08009db8 <TIM_Base_SetConfig>:
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8009db8:	4a30      	ldr	r2, [pc, #192]	; (8009e7c <TIM_Base_SetConfig+0xc4>)
  tmpcr1 = TIMx->CR1;
 8009dba:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8009dbc:	4290      	cmp	r0, r2
 8009dbe:	d012      	beq.n	8009de6 <TIM_Base_SetConfig+0x2e>
 8009dc0:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8009dc4:	d00f      	beq.n	8009de6 <TIM_Base_SetConfig+0x2e>
 8009dc6:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 8009dca:	4290      	cmp	r0, r2
 8009dcc:	d00b      	beq.n	8009de6 <TIM_Base_SetConfig+0x2e>
 8009dce:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8009dd2:	4290      	cmp	r0, r2
 8009dd4:	d007      	beq.n	8009de6 <TIM_Base_SetConfig+0x2e>
 8009dd6:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8009dda:	4290      	cmp	r0, r2
 8009ddc:	d003      	beq.n	8009de6 <TIM_Base_SetConfig+0x2e>
 8009dde:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 8009de2:	4290      	cmp	r0, r2
 8009de4:	d119      	bne.n	8009e1a <TIM_Base_SetConfig+0x62>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
 8009de6:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 8009de8:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 8009dec:	4313      	orrs	r3, r2
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 8009dee:	4a23      	ldr	r2, [pc, #140]	; (8009e7c <TIM_Base_SetConfig+0xc4>)
 8009df0:	4290      	cmp	r0, r2
 8009df2:	d029      	beq.n	8009e48 <TIM_Base_SetConfig+0x90>
 8009df4:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8009df8:	d026      	beq.n	8009e48 <TIM_Base_SetConfig+0x90>
 8009dfa:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 8009dfe:	4290      	cmp	r0, r2
 8009e00:	d022      	beq.n	8009e48 <TIM_Base_SetConfig+0x90>
 8009e02:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8009e06:	4290      	cmp	r0, r2
 8009e08:	d01e      	beq.n	8009e48 <TIM_Base_SetConfig+0x90>
 8009e0a:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8009e0e:	4290      	cmp	r0, r2
 8009e10:	d01a      	beq.n	8009e48 <TIM_Base_SetConfig+0x90>
 8009e12:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 8009e16:	4290      	cmp	r0, r2
 8009e18:	d016      	beq.n	8009e48 <TIM_Base_SetConfig+0x90>
 8009e1a:	4a19      	ldr	r2, [pc, #100]	; (8009e80 <TIM_Base_SetConfig+0xc8>)
 8009e1c:	4290      	cmp	r0, r2
 8009e1e:	d013      	beq.n	8009e48 <TIM_Base_SetConfig+0x90>
 8009e20:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8009e24:	4290      	cmp	r0, r2
 8009e26:	d00f      	beq.n	8009e48 <TIM_Base_SetConfig+0x90>
 8009e28:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8009e2c:	4290      	cmp	r0, r2
 8009e2e:	d00b      	beq.n	8009e48 <TIM_Base_SetConfig+0x90>
 8009e30:	f5a2 3298 	sub.w	r2, r2, #77824	; 0x13000
 8009e34:	4290      	cmp	r0, r2
 8009e36:	d007      	beq.n	8009e48 <TIM_Base_SetConfig+0x90>
 8009e38:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8009e3c:	4290      	cmp	r0, r2
 8009e3e:	d003      	beq.n	8009e48 <TIM_Base_SetConfig+0x90>
 8009e40:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8009e44:	4290      	cmp	r0, r2
 8009e46:	d103      	bne.n	8009e50 <TIM_Base_SetConfig+0x98>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8009e48:	68ca      	ldr	r2, [r1, #12]
    tmpcr1 &= ~TIM_CR1_CKD;
 8009e4a:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8009e4e:	4313      	orrs	r3, r2
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 8009e50:	694a      	ldr	r2, [r1, #20]
 8009e52:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8009e56:	4313      	orrs	r3, r2

  TIMx->CR1 = tmpcr1;
 8009e58:	6003      	str	r3, [r0, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 8009e5a:	688b      	ldr	r3, [r1, #8]
 8009e5c:	62c3      	str	r3, [r0, #44]	; 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 8009e5e:	680b      	ldr	r3, [r1, #0]
 8009e60:	6283      	str	r3, [r0, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 8009e62:	4b06      	ldr	r3, [pc, #24]	; (8009e7c <TIM_Base_SetConfig+0xc4>)
 8009e64:	4298      	cmp	r0, r3
 8009e66:	d003      	beq.n	8009e70 <TIM_Base_SetConfig+0xb8>
 8009e68:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8009e6c:	4298      	cmp	r0, r3
 8009e6e:	d101      	bne.n	8009e74 <TIM_Base_SetConfig+0xbc>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 8009e70:	690b      	ldr	r3, [r1, #16]
 8009e72:	6303      	str	r3, [r0, #48]	; 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 8009e74:	2301      	movs	r3, #1
 8009e76:	6143      	str	r3, [r0, #20]
}
 8009e78:	4770      	bx	lr
 8009e7a:	bf00      	nop
 8009e7c:	40010000 	.word	0x40010000
 8009e80:	40014000 	.word	0x40014000

08009e84 <HAL_TIM_Base_Init>:
{
 8009e84:	b510      	push	{r4, lr}
  if (htim == NULL)
 8009e86:	4604      	mov	r4, r0
 8009e88:	b1a0      	cbz	r0, 8009eb4 <HAL_TIM_Base_Init+0x30>
  if (htim->State == HAL_TIM_STATE_RESET)
 8009e8a:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8009e8e:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8009e92:	b91b      	cbnz	r3, 8009e9c <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 8009e94:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 8009e98:	f7f7 ffaa 	bl	8001df0 <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 8009e9c:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8009e9e:	6820      	ldr	r0, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 8009ea0:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8009ea4:	1d21      	adds	r1, r4, #4
 8009ea6:	f7ff ff87 	bl	8009db8 <TIM_Base_SetConfig>
  htim->State = HAL_TIM_STATE_READY;
 8009eaa:	2301      	movs	r3, #1
 8009eac:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 8009eb0:	2000      	movs	r0, #0
}
 8009eb2:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8009eb4:	2001      	movs	r0, #1
 8009eb6:	e7fc      	b.n	8009eb2 <HAL_TIM_Base_Init+0x2e>

08009eb8 <HAL_TIMEx_MasterConfigSynchronization>:
  *         mode.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIMEx_MasterConfigSynchronization(TIM_HandleTypeDef *htim,
                                                        TIM_MasterConfigTypeDef *sMasterConfig)
{
 8009eb8:	b530      	push	{r4, r5, lr}
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 8009eba:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 8009ebe:	2b01      	cmp	r3, #1
 8009ec0:	f04f 0302 	mov.w	r3, #2
 8009ec4:	d032      	beq.n	8009f2c <HAL_TIMEx_MasterConfigSynchronization+0x74>

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;
 8009ec6:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 8009eca:	6803      	ldr	r3, [r0, #0]
  tmpsmcr = htim->Instance->SMCR;

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 8009ecc:	680d      	ldr	r5, [r1, #0]
  tmpcr2 = htim->Instance->CR2;
 8009ece:	685c      	ldr	r4, [r3, #4]
  tmpsmcr = htim->Instance->SMCR;
 8009ed0:	689a      	ldr	r2, [r3, #8]
  tmpcr2 &= ~TIM_CR2_MMS;
 8009ed2:	f024 0470 	bic.w	r4, r4, #112	; 0x70
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 8009ed6:	432c      	orrs	r4, r5

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 8009ed8:	605c      	str	r4, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8009eda:	4c15      	ldr	r4, [pc, #84]	; (8009f30 <HAL_TIMEx_MasterConfigSynchronization+0x78>)
 8009edc:	42a3      	cmp	r3, r4
 8009ede:	d01a      	beq.n	8009f16 <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 8009ee0:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8009ee4:	d017      	beq.n	8009f16 <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 8009ee6:	f5a4 447c 	sub.w	r4, r4, #64512	; 0xfc00
 8009eea:	42a3      	cmp	r3, r4
 8009eec:	d013      	beq.n	8009f16 <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 8009eee:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8009ef2:	42a3      	cmp	r3, r4
 8009ef4:	d00f      	beq.n	8009f16 <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 8009ef6:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8009efa:	42a3      	cmp	r3, r4
 8009efc:	d00b      	beq.n	8009f16 <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 8009efe:	f504 4478 	add.w	r4, r4, #63488	; 0xf800
 8009f02:	42a3      	cmp	r3, r4
 8009f04:	d007      	beq.n	8009f16 <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 8009f06:	f504 5470 	add.w	r4, r4, #15360	; 0x3c00
 8009f0a:	42a3      	cmp	r3, r4
 8009f0c:	d003      	beq.n	8009f16 <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 8009f0e:	f5a4 3494 	sub.w	r4, r4, #75776	; 0x12800
 8009f12:	42a3      	cmp	r3, r4
 8009f14:	d104      	bne.n	8009f20 <HAL_TIMEx_MasterConfigSynchronization+0x68>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 8009f16:	6849      	ldr	r1, [r1, #4]
    tmpsmcr &= ~TIM_SMCR_MSM;
 8009f18:	f022 0280 	bic.w	r2, r2, #128	; 0x80
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 8009f1c:	430a      	orrs	r2, r1

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 8009f1e:	609a      	str	r2, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;
 8009f20:	2301      	movs	r3, #1
 8009f22:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

  __HAL_UNLOCK(htim);
 8009f26:	2300      	movs	r3, #0
 8009f28:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  __HAL_LOCK(htim);
 8009f2c:	4618      	mov	r0, r3

  return HAL_OK;
}
 8009f2e:	bd30      	pop	{r4, r5, pc}
 8009f30:	40010000 	.word	0x40010000

08009f34 <HAL_TIMEx_CommutCallback>:
 8009f34:	4770      	bx	lr

08009f36 <HAL_TIMEx_BreakCallback>:
 8009f36:	4770      	bx	lr

08009f38 <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure   
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 8009f38:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
                                               Init->InternalBankNumber |\
                                               Init->CASLatency         |\
                                               Init->WriteProtection    |\
                                               Init->SDClockPeriod      |\
                                               Init->ReadBurst          |\
                                               Init->ReadPipeDelay
 8009f3c:	6a4a      	ldr	r2, [r1, #36]	; 0x24
                                               Init->ReadBurst          |\
 8009f3e:	e9d1 4307 	ldrd	r4, r3, [r1, #28]
                                               Init->RowBitsNumber      |\
 8009f42:	e9d1 5801 	ldrd	r5, r8, [r1, #4]
                                               Init->InternalBankNumber |\
 8009f46:	e9d1 ec03 	ldrd	lr, ip, [r1, #12]
                                               Init->WriteProtection    |\
 8009f4a:	e9d1 7605 	ldrd	r7, r6, [r1, #20]
  if (Init->SDBank != FMC_SDRAM_BANK2) 
 8009f4e:	6809      	ldr	r1, [r1, #0]
 8009f50:	2901      	cmp	r1, #1
 8009f52:	ea43 0304 	orr.w	r3, r3, r4
 8009f56:	4912      	ldr	r1, [pc, #72]	; (8009fa0 <FMC_SDRAM_Init+0x68>)
    tmpr1 = Device->SDCR[FMC_SDRAM_BANK1];
 8009f58:	6804      	ldr	r4, [r0, #0]
  if (Init->SDBank != FMC_SDRAM_BANK2) 
 8009f5a:	d00f      	beq.n	8009f7c <FMC_SDRAM_Init+0x44>
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8009f5c:	431a      	orrs	r2, r3
 8009f5e:	432a      	orrs	r2, r5
 8009f60:	ea42 0308 	orr.w	r3, r2, r8
 8009f64:	ea43 030e 	orr.w	r3, r3, lr
 8009f68:	ea43 030c 	orr.w	r3, r3, ip
 8009f6c:	433b      	orrs	r3, r7
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 8009f6e:	4021      	ands	r1, r4
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8009f70:	4333      	orrs	r3, r6
 8009f72:	430b      	orrs	r3, r1
                                               );
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 8009f74:	6003      	str	r3, [r0, #0]
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
    Device->SDCR[FMC_SDRAM_BANK2] = tmpr2;
  }  
  
  return HAL_OK;
}
 8009f76:	2000      	movs	r0, #0
 8009f78:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 8009f7c:	4313      	orrs	r3, r2
    tmpr2 = Device->SDCR[FMC_SDRAM_BANK2];
 8009f7e:	6842      	ldr	r2, [r0, #4]
    tmpr2 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 8009f80:	4011      	ands	r1, r2
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8009f82:	ea45 0208 	orr.w	r2, r5, r8
 8009f86:	ea42 020e 	orr.w	r2, r2, lr
 8009f8a:	ea42 020c 	orr.w	r2, r2, ip
 8009f8e:	433a      	orrs	r2, r7
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_SDCLK | FMC_SDCR1_RBURST | FMC_SDCR1_RPIPE));
 8009f90:	f424 44f8 	bic.w	r4, r4, #31744	; 0x7c00
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8009f94:	4332      	orrs	r2, r6
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 8009f96:	4323      	orrs	r3, r4
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8009f98:	430a      	orrs	r2, r1
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 8009f9a:	6003      	str	r3, [r0, #0]
    Device->SDCR[FMC_SDRAM_BANK2] = tmpr2;
 8009f9c:	6042      	str	r2, [r0, #4]
 8009f9e:	e7ea      	b.n	8009f76 <FMC_SDRAM_Init+0x3e>
 8009fa0:	ffff8000 	.word	0xffff8000

08009fa4 <FMC_SDRAM_Timing_Init>:
                          FMC_SDTR1_TRCD));
    
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
                       (((Timing->RowCycleDelay)-1U) << 12U)       |\
 8009fa4:	68cb      	ldr	r3, [r1, #12]
{
 8009fa6:	b5f0      	push	{r4, r5, r6, r7, lr}
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 8009fa8:	680c      	ldr	r4, [r1, #0]
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
 8009faa:	688e      	ldr	r6, [r1, #8]
                       (((Timing->WriteRecoveryTime)-1U) <<16U)    |\
 8009fac:	690d      	ldr	r5, [r1, #16]
                       (((Timing->RowCycleDelay)-1U) << 12U)       |\
 8009fae:	1e5f      	subs	r7, r3, #1
                       (((Timing->RPDelay)-1U) << 20U)             |\
 8009fb0:	694b      	ldr	r3, [r1, #20]
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 8009fb2:	f104 3cff 	add.w	ip, r4, #4294967295
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
 8009fb6:	684c      	ldr	r4, [r1, #4]
                       (((Timing->RCDDelay)-1U) << 24U));
 8009fb8:	6989      	ldr	r1, [r1, #24]
                       (((Timing->RPDelay)-1U) << 20U)             |\
 8009fba:	3b01      	subs	r3, #1
 8009fbc:	051b      	lsls	r3, r3, #20
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
 8009fbe:	3c01      	subs	r4, #1
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
 8009fc0:	3e01      	subs	r6, #1
                       (((Timing->WriteRecoveryTime)-1U) <<16U)    |\
 8009fc2:	3d01      	subs	r5, #1
                       (((Timing->RCDDelay)-1U) << 24U));
 8009fc4:	3901      	subs	r1, #1
  if (Bank != FMC_SDRAM_BANK2) 
 8009fc6:	2a01      	cmp	r2, #1
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
 8009fc8:	ea4f 1404 	mov.w	r4, r4, lsl #4
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
 8009fcc:	ea4f 2606 	mov.w	r6, r6, lsl #8
                       (((Timing->WriteRecoveryTime)-1U) <<16U)    |\
 8009fd0:	ea4f 4505 	mov.w	r5, r5, lsl #16
                       (((Timing->RCDDelay)-1U) << 24U));
 8009fd4:	ea4f 6101 	mov.w	r1, r1, lsl #24
 8009fd8:	ea43 3307 	orr.w	r3, r3, r7, lsl #12
  if (Bank != FMC_SDRAM_BANK2) 
 8009fdc:	d00c      	beq.n	8009ff8 <FMC_SDRAM_Timing_Init+0x54>
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 8009fde:	ea43 030c 	orr.w	r3, r3, ip
 8009fe2:	4323      	orrs	r3, r4
    tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 8009fe4:	6882      	ldr	r2, [r0, #8]
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 8009fe6:	4333      	orrs	r3, r6
 8009fe8:	432b      	orrs	r3, r5
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 8009fea:	f002 4270 	and.w	r2, r2, #4026531840	; 0xf0000000
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 8009fee:	430b      	orrs	r3, r1
 8009ff0:	4313      	orrs	r3, r2
    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 8009ff2:	6083      	str	r3, [r0, #8]

    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
    Device->SDTR[FMC_SDRAM_BANK2] = tmpr2;
  }
  return HAL_OK;
}
 8009ff4:	2000      	movs	r0, #0
 8009ff6:	bdf0      	pop	{r4, r5, r6, r7, pc}
    tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 8009ff8:	6887      	ldr	r7, [r0, #8]
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TRC | FMC_SDTR1_TRP));
 8009ffa:	f427 0770 	bic.w	r7, r7, #15728640	; 0xf00000
 8009ffe:	f427 4770 	bic.w	r7, r7, #61440	; 0xf000
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 800a002:	4334      	orrs	r4, r6
    tmpr1 |= (uint32_t)((((Timing->RowCycleDelay)-1U) << 12U)       |\
 800a004:	433b      	orrs	r3, r7
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 800a006:	ea44 020c 	orr.w	r2, r4, ip
    tmpr2 = Device->SDTR[FMC_SDRAM_BANK2];
 800a00a:	68c7      	ldr	r7, [r0, #12]
    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 800a00c:	6083      	str	r3, [r0, #8]
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 800a00e:	432a      	orrs	r2, r5
    tmpr2 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 800a010:	f007 4770 	and.w	r7, r7, #4026531840	; 0xf0000000
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 800a014:	430a      	orrs	r2, r1
 800a016:	433a      	orrs	r2, r7
    Device->SDTR[FMC_SDRAM_BANK2] = tmpr2;
 800a018:	60c2      	str	r2, [r0, #12]
 800a01a:	e7eb      	b.n	8009ff4 <FMC_SDRAM_Timing_Init+0x50>

0800a01c <FMC_SDRAM_SendCommand>:
  * @param  Timing Pointer to SDRAM Timing structure
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */  
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 800a01c:	b573      	push	{r0, r1, r4, r5, r6, lr}
  __IO uint32_t tmpr = 0U;
 800a01e:	2300      	movs	r3, #0
 800a020:	9301      	str	r3, [sp, #4]
{
 800a022:	4615      	mov	r5, r2
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));  

  /* Set command register */
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 800a024:	e9d1 3200 	ldrd	r3, r2, [r1]
 800a028:	4313      	orrs	r3, r2
                    (Command->CommandTarget)                |\
                    (((Command->AutoRefreshNumber)-1U) << 5U) |\
                    ((Command->ModeRegisterDefinition) << 9U)
 800a02a:	68ca      	ldr	r2, [r1, #12]
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 800a02c:	ea43 2342 	orr.w	r3, r3, r2, lsl #9
                    (((Command->AutoRefreshNumber)-1U) << 5U) |\
 800a030:	688a      	ldr	r2, [r1, #8]
 800a032:	3a01      	subs	r2, #1
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 800a034:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 800a038:	9301      	str	r3, [sp, #4]
                    );
    
  Device->SDCMR = tmpr;
 800a03a:	9b01      	ldr	r3, [sp, #4]
 800a03c:	6103      	str	r3, [r0, #16]
{
 800a03e:	4604      	mov	r4, r0

  /* Get tick */ 
  tickstart = HAL_GetTick();
 800a040:	f7fd fbf8 	bl	8007834 <HAL_GetTick>
 800a044:	4606      	mov	r6, r0

  /* Wait until command is send */
  while(HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800a046:	69a3      	ldr	r3, [r4, #24]
 800a048:	f013 0320 	ands.w	r3, r3, #32
 800a04c:	d101      	bne.n	800a052 <FMC_SDRAM_SendCommand+0x36>
        return HAL_TIMEOUT;
      }
    }
  }

  return HAL_OK;
 800a04e:	4618      	mov	r0, r3
 800a050:	e003      	b.n	800a05a <FMC_SDRAM_SendCommand+0x3e>
    if(Timeout != HAL_MAX_DELAY)
 800a052:	1c6b      	adds	r3, r5, #1
 800a054:	d0f7      	beq.n	800a046 <FMC_SDRAM_SendCommand+0x2a>
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 800a056:	b915      	cbnz	r5, 800a05e <FMC_SDRAM_SendCommand+0x42>
        return HAL_TIMEOUT;
 800a058:	2003      	movs	r0, #3
}
 800a05a:	b002      	add	sp, #8
 800a05c:	bd70      	pop	{r4, r5, r6, pc}
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 800a05e:	f7fd fbe9 	bl	8007834 <HAL_GetTick>
 800a062:	1b80      	subs	r0, r0, r6
 800a064:	42a8      	cmp	r0, r5
 800a066:	d9ee      	bls.n	800a046 <FMC_SDRAM_SendCommand+0x2a>
 800a068:	e7f6      	b.n	800a058 <FMC_SDRAM_SendCommand+0x3c>

0800a06a <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));
  
  /* Set the refresh rate in command register */
  Device->SDRTR |= (RefreshRate<<1U);
 800a06a:	6943      	ldr	r3, [r0, #20]
 800a06c:	ea43 0141 	orr.w	r1, r3, r1, lsl #1
 800a070:	6141      	str	r1, [r0, #20]
  
  return HAL_OK;   
}
 800a072:	2000      	movs	r0, #0
 800a074:	4770      	bx	lr
	...

0800a078 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800a078:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 800a07c:	b113      	cbz	r3, 800a084 <osKernelInitialize+0xc>
    stat = osErrorISR;
 800a07e:	f06f 0005 	mvn.w	r0, #5
 800a082:	4770      	bx	lr
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800a084:	f3ef 8210 	mrs	r2, PRIMASK
  return(result);
 800a088:	4b07      	ldr	r3, [pc, #28]	; (800a0a8 <osKernelInitialize+0x30>)
  if (IS_IRQ()) {
 800a08a:	b912      	cbnz	r2, 800a092 <osKernelInitialize+0x1a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 800a08c:	f3ef 8211 	mrs	r2, BASEPRI
 800a090:	b112      	cbz	r2, 800a098 <osKernelInitialize+0x20>
 800a092:	681a      	ldr	r2, [r3, #0]
 800a094:	2a02      	cmp	r2, #2
 800a096:	d0f2      	beq.n	800a07e <osKernelInitialize+0x6>
  }
  else {
    if (KernelState == osKernelInactive) {
 800a098:	6818      	ldr	r0, [r3, #0]
 800a09a:	b910      	cbnz	r0, 800a0a2 <osKernelInitialize+0x2a>
      #if defined(USE_FREERTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 800a09c:	2201      	movs	r2, #1
 800a09e:	601a      	str	r2, [r3, #0]
      stat = osOK;
 800a0a0:	4770      	bx	lr
    } else {
      stat = osError;
 800a0a2:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 800a0a6:	4770      	bx	lr
 800a0a8:	20006df4 	.word	0x20006df4

0800a0ac <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 800a0ac:	b508      	push	{r3, lr}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800a0ae:	f3ef 8305 	mrs	r3, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800a0b2:	b113      	cbz	r3, 800a0ba <osKernelStart+0xe>
    stat = osErrorISR;
 800a0b4:	f06f 0005 	mvn.w	r0, #5
      stat = osError;
    }
  }

  return (stat);
}
 800a0b8:	bd08      	pop	{r3, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800a0ba:	f3ef 8210 	mrs	r2, PRIMASK
  return(result);
 800a0be:	4b0a      	ldr	r3, [pc, #40]	; (800a0e8 <osKernelStart+0x3c>)
  if (IS_IRQ()) {
 800a0c0:	b912      	cbnz	r2, 800a0c8 <osKernelStart+0x1c>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 800a0c2:	f3ef 8211 	mrs	r2, BASEPRI
 800a0c6:	b112      	cbz	r2, 800a0ce <osKernelStart+0x22>
 800a0c8:	681a      	ldr	r2, [r3, #0]
 800a0ca:	2a02      	cmp	r2, #2
 800a0cc:	d0f2      	beq.n	800a0b4 <osKernelStart+0x8>
    if (KernelState == osKernelReady) {
 800a0ce:	681a      	ldr	r2, [r3, #0]
 800a0d0:	2a01      	cmp	r2, #1
 800a0d2:	d105      	bne.n	800a0e0 <osKernelStart+0x34>
      KernelState = osKernelRunning;
 800a0d4:	2202      	movs	r2, #2
 800a0d6:	601a      	str	r2, [r3, #0]
      vTaskStartScheduler();
 800a0d8:	f001 fbd4 	bl	800b884 <vTaskStartScheduler>
      stat = osOK;
 800a0dc:	2000      	movs	r0, #0
 800a0de:	e7eb      	b.n	800a0b8 <osKernelStart+0xc>
      stat = osError;
 800a0e0:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 800a0e4:	e7e8      	b.n	800a0b8 <osKernelStart+0xc>
 800a0e6:	bf00      	nop
 800a0e8:	20006df4 	.word	0x20006df4

0800a0ec <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800a0ec:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a0ee:	b087      	sub	sp, #28
 800a0f0:	4614      	mov	r4, r2
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 800a0f2:	2200      	movs	r2, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800a0f4:	460b      	mov	r3, r1
  hTask = NULL;
 800a0f6:	9205      	str	r2, [sp, #20]
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800a0f8:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 800a0fc:	bb22      	cbnz	r2, 800a148 <osThreadNew+0x5c>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800a0fe:	f3ef 8210 	mrs	r2, PRIMASK
 800a102:	b912      	cbnz	r2, 800a10a <osThreadNew+0x1e>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 800a104:	f3ef 8211 	mrs	r2, BASEPRI
 800a108:	b11a      	cbz	r2, 800a112 <osThreadNew+0x26>
 800a10a:	4a22      	ldr	r2, [pc, #136]	; (800a194 <osThreadNew+0xa8>)
 800a10c:	6812      	ldr	r2, [r2, #0]
 800a10e:	2a02      	cmp	r2, #2
 800a110:	d01a      	beq.n	800a148 <osThreadNew+0x5c>
 800a112:	b1c8      	cbz	r0, 800a148 <osThreadNew+0x5c>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 800a114:	2c00      	cmp	r4, #0
 800a116:	d02f      	beq.n	800a178 <osThreadNew+0x8c>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 800a118:	69a5      	ldr	r5, [r4, #24]
 800a11a:	2d00      	cmp	r5, #0
 800a11c:	bf08      	it	eq
 800a11e:	2518      	moveq	r5, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800a120:	1e6a      	subs	r2, r5, #1
 800a122:	2a37      	cmp	r2, #55	; 0x37
 800a124:	46ac      	mov	ip, r5
 800a126:	d82b      	bhi.n	800a180 <osThreadNew+0x94>
 800a128:	6862      	ldr	r2, [r4, #4]
 800a12a:	07d2      	lsls	r2, r2, #31
 800a12c:	d428      	bmi.n	800a180 <osThreadNew+0x94>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 800a12e:	6966      	ldr	r6, [r4, #20]
 800a130:	b16e      	cbz	r6, 800a14e <osThreadNew+0x62>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 800a132:	08b2      	lsrs	r2, r6, #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800a134:	e9d4 7e02 	ldrd	r7, lr, [r4, #8]
      if (attr->name != NULL) {
 800a138:	6821      	ldr	r1, [r4, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800a13a:	b157      	cbz	r7, 800a152 <osThreadNew+0x66>
 800a13c:	f1be 0fbf 	cmp.w	lr, #191	; 0xbf
 800a140:	d902      	bls.n	800a148 <osThreadNew+0x5c>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800a142:	6924      	ldr	r4, [r4, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800a144:	b104      	cbz	r4, 800a148 <osThreadNew+0x5c>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800a146:	b9ee      	cbnz	r6, 800a184 <osThreadNew+0x98>
        }
      }
    }
  }

  return ((osThreadId_t)hTask);
 800a148:	9805      	ldr	r0, [sp, #20]
}
 800a14a:	b007      	add	sp, #28
 800a14c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 800a14e:	2280      	movs	r2, #128	; 0x80
 800a150:	e7f0      	b.n	800a134 <osThreadNew+0x48>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 800a152:	f1be 0f00 	cmp.w	lr, #0
 800a156:	d1f7      	bne.n	800a148 <osThreadNew+0x5c>
      if (mem == 0) {
 800a158:	6924      	ldr	r4, [r4, #16]
 800a15a:	2c00      	cmp	r4, #0
 800a15c:	d1f4      	bne.n	800a148 <osThreadNew+0x5c>
 800a15e:	460c      	mov	r4, r1
        if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800a160:	a905      	add	r1, sp, #20
 800a162:	e9cd c100 	strd	ip, r1, [sp]
 800a166:	b292      	uxth	r2, r2
 800a168:	4621      	mov	r1, r4
 800a16a:	f001 fb5d 	bl	800b828 <xTaskCreate>
 800a16e:	2801      	cmp	r0, #1
          hTask = NULL;
 800a170:	bf1c      	itt	ne
 800a172:	2300      	movne	r3, #0
 800a174:	9305      	strne	r3, [sp, #20]
 800a176:	e7e7      	b.n	800a148 <osThreadNew+0x5c>
    prio  = (UBaseType_t)osPriorityNormal;
 800a178:	f04f 0c18 	mov.w	ip, #24
    stack = configMINIMAL_STACK_SIZE;
 800a17c:	2280      	movs	r2, #128	; 0x80
 800a17e:	e7ef      	b.n	800a160 <osThreadNew+0x74>
        return (NULL);
 800a180:	2000      	movs	r0, #0
 800a182:	e7e2      	b.n	800a14a <osThreadNew+0x5e>
      hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 800a184:	e9cd 4701 	strd	r4, r7, [sp, #4]
 800a188:	9500      	str	r5, [sp, #0]
 800a18a:	f001 fb15 	bl	800b7b8 <xTaskCreateStatic>
 800a18e:	9005      	str	r0, [sp, #20]
 800a190:	e7da      	b.n	800a148 <osThreadNew+0x5c>
 800a192:	bf00      	nop
 800a194:	20006df4 	.word	0x20006df4

0800a198 <osDelay>:

  /* Return flags before clearing */
  return (rflags);
}

osStatus_t osDelay (uint32_t ticks) {
 800a198:	b508      	push	{r3, lr}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800a19a:	f3ef 8305 	mrs	r3, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800a19e:	b113      	cbz	r3, 800a1a6 <osDelay+0xe>
    stat = osErrorISR;
 800a1a0:	f06f 0005 	mvn.w	r0, #5
      vTaskDelay(ticks);
    }
  }

  return (stat);
}
 800a1a4:	bd08      	pop	{r3, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800a1a6:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 800a1aa:	b913      	cbnz	r3, 800a1b2 <osDelay+0x1a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 800a1ac:	f3ef 8311 	mrs	r3, BASEPRI
 800a1b0:	b11b      	cbz	r3, 800a1ba <osDelay+0x22>
 800a1b2:	4b05      	ldr	r3, [pc, #20]	; (800a1c8 <osDelay+0x30>)
 800a1b4:	681b      	ldr	r3, [r3, #0]
 800a1b6:	2b02      	cmp	r3, #2
 800a1b8:	d0f2      	beq.n	800a1a0 <osDelay+0x8>
    if (ticks != 0U) {
 800a1ba:	2800      	cmp	r0, #0
 800a1bc:	d0f2      	beq.n	800a1a4 <osDelay+0xc>
      vTaskDelay(ticks);
 800a1be:	f001 fcc9 	bl	800bb54 <vTaskDelay>
    stat = osOK;
 800a1c2:	2000      	movs	r0, #0
 800a1c4:	e7ee      	b.n	800a1a4 <osDelay+0xc>
 800a1c6:	bf00      	nop
 800a1c8:	20006df4 	.word	0x20006df4

0800a1cc <osSemaphoreNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 800a1cc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800a1ce:	460e      	mov	r6, r1
 800a1d0:	4615      	mov	r5, r2
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800a1d2:	f3ef 8305 	mrs	r3, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 800a1d6:	b11b      	cbz	r3, 800a1e0 <osSemaphoreNew+0x14>
        }

        if ((hSemaphore != NULL) && (initial_count != 0U)) {
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
            vSemaphoreDelete (hSemaphore);
            hSemaphore = NULL;
 800a1d8:	2400      	movs	r4, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 800a1da:	4620      	mov	r0, r4
 800a1dc:	b002      	add	sp, #8
 800a1de:	bd70      	pop	{r4, r5, r6, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800a1e0:	f3ef 8310 	mrs	r3, PRIMASK
  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 800a1e4:	b913      	cbnz	r3, 800a1ec <osSemaphoreNew+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 800a1e6:	f3ef 8311 	mrs	r3, BASEPRI
 800a1ea:	b11b      	cbz	r3, 800a1f4 <osSemaphoreNew+0x28>
 800a1ec:	4b21      	ldr	r3, [pc, #132]	; (800a274 <osSemaphoreNew+0xa8>)
 800a1ee:	681b      	ldr	r3, [r3, #0]
 800a1f0:	2b02      	cmp	r3, #2
 800a1f2:	d0f1      	beq.n	800a1d8 <osSemaphoreNew+0xc>
 800a1f4:	2800      	cmp	r0, #0
 800a1f6:	d0ef      	beq.n	800a1d8 <osSemaphoreNew+0xc>
 800a1f8:	42b0      	cmp	r0, r6
 800a1fa:	d3ed      	bcc.n	800a1d8 <osSemaphoreNew+0xc>
    if (attr != NULL) {
 800a1fc:	b1ed      	cbz	r5, 800a23a <osSemaphoreNew+0x6e>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 800a1fe:	e9d5 3202 	ldrd	r3, r2, [r5, #8]
 800a202:	b1c3      	cbz	r3, 800a236 <osSemaphoreNew+0x6a>
 800a204:	2a4f      	cmp	r2, #79	; 0x4f
 800a206:	d9e7      	bls.n	800a1d8 <osSemaphoreNew+0xc>
      if (max_count == 1U) {
 800a208:	2801      	cmp	r0, #1
 800a20a:	d129      	bne.n	800a260 <osSemaphoreNew+0x94>
          hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 800a20c:	2203      	movs	r2, #3
 800a20e:	9200      	str	r2, [sp, #0]
 800a210:	2200      	movs	r2, #0
 800a212:	4611      	mov	r1, r2
 800a214:	f000 fd27 	bl	800ac66 <xQueueGenericCreateStatic>
          hSemaphore = xSemaphoreCreateBinary();
 800a218:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 800a21a:	2800      	cmp	r0, #0
 800a21c:	d0dc      	beq.n	800a1d8 <osSemaphoreNew+0xc>
 800a21e:	b1ce      	cbz	r6, 800a254 <osSemaphoreNew+0x88>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800a220:	2300      	movs	r3, #0
 800a222:	461a      	mov	r2, r3
 800a224:	4619      	mov	r1, r3
 800a226:	f000 fdd3 	bl	800add0 <xQueueGenericSend>
 800a22a:	2801      	cmp	r0, #1
 800a22c:	d012      	beq.n	800a254 <osSemaphoreNew+0x88>
            vSemaphoreDelete (hSemaphore);
 800a22e:	4620      	mov	r0, r4
 800a230:	f001 f90e 	bl	800b450 <vQueueDelete>
 800a234:	e7d0      	b.n	800a1d8 <osSemaphoreNew+0xc>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 800a236:	2a00      	cmp	r2, #0
 800a238:	d1ce      	bne.n	800a1d8 <osSemaphoreNew+0xc>
      if (max_count == 1U) {
 800a23a:	2801      	cmp	r0, #1
 800a23c:	d104      	bne.n	800a248 <osSemaphoreNew+0x7c>
          hSemaphore = xSemaphoreCreateBinary();
 800a23e:	2203      	movs	r2, #3
 800a240:	2100      	movs	r1, #0
 800a242:	f000 fd5e 	bl	800ad02 <xQueueGenericCreate>
 800a246:	e7e7      	b.n	800a218 <osSemaphoreNew+0x4c>
          hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800a248:	4631      	mov	r1, r6
 800a24a:	f000 fda3 	bl	800ad94 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800a24e:	4604      	mov	r4, r0
 800a250:	2800      	cmp	r0, #0
 800a252:	d0c1      	beq.n	800a1d8 <osSemaphoreNew+0xc>
        if (attr != NULL) {
 800a254:	b95d      	cbnz	r5, 800a26e <osSemaphoreNew+0xa2>
        vQueueAddToRegistry (hSemaphore, name);
 800a256:	4629      	mov	r1, r5
 800a258:	4620      	mov	r0, r4
 800a25a:	f001 f8d3 	bl	800b404 <vQueueAddToRegistry>
  return ((osSemaphoreId_t)hSemaphore);
 800a25e:	e7bc      	b.n	800a1da <osSemaphoreNew+0xe>
          hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 800a260:	461a      	mov	r2, r3
 800a262:	4631      	mov	r1, r6
 800a264:	f000 fd74 	bl	800ad50 <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 800a268:	4604      	mov	r4, r0
 800a26a:	2800      	cmp	r0, #0
 800a26c:	d0b4      	beq.n	800a1d8 <osSemaphoreNew+0xc>
          name = attr->name;
 800a26e:	682d      	ldr	r5, [r5, #0]
 800a270:	e7f1      	b.n	800a256 <osSemaphoreNew+0x8a>
 800a272:	bf00      	nop
 800a274:	20006df4 	.word	0x20006df4

0800a278 <osSemaphoreAcquire>:

osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 800a278:	b513      	push	{r0, r1, r4, lr}
 800a27a:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800a27c:	b918      	cbnz	r0, 800a286 <osSemaphoreAcquire+0xe>
    stat = osErrorParameter;
 800a27e:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 800a282:	b002      	add	sp, #8
 800a284:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800a286:	f3ef 8305 	mrs	r3, IPSR
  else if (IS_IRQ()) {
 800a28a:	b163      	cbz	r3, 800a2a6 <osSemaphoreAcquire+0x2e>
    if (timeout != 0U) {
 800a28c:	2c00      	cmp	r4, #0
 800a28e:	d1f6      	bne.n	800a27e <osSemaphoreAcquire+0x6>
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800a290:	aa01      	add	r2, sp, #4
 800a292:	4621      	mov	r1, r4
      yield = pdFALSE;
 800a294:	9401      	str	r4, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800a296:	f001 f865 	bl	800b364 <xQueueReceiveFromISR>
 800a29a:	2801      	cmp	r0, #1
 800a29c:	d113      	bne.n	800a2c6 <osSemaphoreAcquire+0x4e>
        portYIELD_FROM_ISR (yield);
 800a29e:	9b01      	ldr	r3, [sp, #4]
 800a2a0:	b9a3      	cbnz	r3, 800a2cc <osSemaphoreAcquire+0x54>
  stat = osOK;
 800a2a2:	2000      	movs	r0, #0
 800a2a4:	e7ed      	b.n	800a282 <osSemaphoreAcquire+0xa>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800a2a6:	f3ef 8310 	mrs	r3, PRIMASK
  else if (IS_IRQ()) {
 800a2aa:	b913      	cbnz	r3, 800a2b2 <osSemaphoreAcquire+0x3a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 800a2ac:	f3ef 8311 	mrs	r3, BASEPRI
 800a2b0:	b11b      	cbz	r3, 800a2ba <osSemaphoreAcquire+0x42>
 800a2b2:	4b0d      	ldr	r3, [pc, #52]	; (800a2e8 <osSemaphoreAcquire+0x70>)
 800a2b4:	681b      	ldr	r3, [r3, #0]
 800a2b6:	2b02      	cmp	r3, #2
 800a2b8:	d0e8      	beq.n	800a28c <osSemaphoreAcquire+0x14>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 800a2ba:	4621      	mov	r1, r4
 800a2bc:	f000 ff8f 	bl	800b1de <xQueueSemaphoreTake>
 800a2c0:	2801      	cmp	r0, #1
 800a2c2:	d0ee      	beq.n	800a2a2 <osSemaphoreAcquire+0x2a>
      if (timeout != 0U) {
 800a2c4:	b96c      	cbnz	r4, 800a2e2 <osSemaphoreAcquire+0x6a>
        stat = osErrorResource;
 800a2c6:	f06f 0002 	mvn.w	r0, #2
 800a2ca:	e7da      	b.n	800a282 <osSemaphoreAcquire+0xa>
        portYIELD_FROM_ISR (yield);
 800a2cc:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800a2d0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800a2d4:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800a2d8:	f3bf 8f4f 	dsb	sy
 800a2dc:	f3bf 8f6f 	isb	sy
 800a2e0:	e7df      	b.n	800a2a2 <osSemaphoreAcquire+0x2a>
        stat = osErrorTimeout;
 800a2e2:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 800a2e6:	e7cc      	b.n	800a282 <osSemaphoreAcquire+0xa>
 800a2e8:	20006df4 	.word	0x20006df4

0800a2ec <osSemaphoreRelease>:

osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 800a2ec:	b513      	push	{r0, r1, r4, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800a2ee:	b370      	cbz	r0, 800a34e <osSemaphoreRelease+0x62>
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800a2f0:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800a2f4:	b14b      	cbz	r3, 800a30a <osSemaphoreRelease+0x1e>
    yield = pdFALSE;
 800a2f6:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800a2f8:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 800a2fa:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800a2fc:	f000 fe7c 	bl	800aff8 <xQueueGiveFromISR>
 800a300:	2801      	cmp	r0, #1
 800a302:	d014      	beq.n	800a32e <osSemaphoreRelease+0x42>
      portYIELD_FROM_ISR (yield);
    }
  }
  else {
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
      stat = osErrorResource;
 800a304:	f06f 0002 	mvn.w	r0, #2
 800a308:	e014      	b.n	800a334 <osSemaphoreRelease+0x48>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800a30a:	f3ef 8310 	mrs	r3, PRIMASK
  else if (IS_IRQ()) {
 800a30e:	b913      	cbnz	r3, 800a316 <osSemaphoreRelease+0x2a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 800a310:	f3ef 8311 	mrs	r3, BASEPRI
 800a314:	b11b      	cbz	r3, 800a31e <osSemaphoreRelease+0x32>
 800a316:	4b0f      	ldr	r3, [pc, #60]	; (800a354 <osSemaphoreRelease+0x68>)
 800a318:	681b      	ldr	r3, [r3, #0]
 800a31a:	2b02      	cmp	r3, #2
 800a31c:	d0eb      	beq.n	800a2f6 <osSemaphoreRelease+0xa>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800a31e:	2300      	movs	r3, #0
 800a320:	461a      	mov	r2, r3
 800a322:	4619      	mov	r1, r3
 800a324:	f000 fd54 	bl	800add0 <xQueueGenericSend>
 800a328:	2801      	cmp	r0, #1
 800a32a:	d002      	beq.n	800a332 <osSemaphoreRelease+0x46>
 800a32c:	e7ea      	b.n	800a304 <osSemaphoreRelease+0x18>
      portYIELD_FROM_ISR (yield);
 800a32e:	9b01      	ldr	r3, [sp, #4]
 800a330:	b913      	cbnz	r3, 800a338 <osSemaphoreRelease+0x4c>
  stat = osOK;
 800a332:	2000      	movs	r0, #0
    }
  }

  return (stat);
}
 800a334:	b002      	add	sp, #8
 800a336:	bd10      	pop	{r4, pc}
      portYIELD_FROM_ISR (yield);
 800a338:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800a33c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800a340:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800a344:	f3bf 8f4f 	dsb	sy
 800a348:	f3bf 8f6f 	isb	sy
 800a34c:	e7f1      	b.n	800a332 <osSemaphoreRelease+0x46>
    stat = osErrorParameter;
 800a34e:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 800a352:	e7ef      	b.n	800a334 <osSemaphoreRelease+0x48>
 800a354:	20006df4 	.word	0x20006df4

0800a358 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 800a358:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800a35a:	4614      	mov	r4, r2
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800a35c:	f3ef 8305 	mrs	r3, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 800a360:	b11b      	cbz	r3, 800a36a <osMessageQueueNew+0x12>
  hQueue = NULL;
 800a362:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 800a364:	4628      	mov	r0, r5
 800a366:	b002      	add	sp, #8
 800a368:	bd70      	pop	{r4, r5, r6, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800a36a:	f3ef 8310 	mrs	r3, PRIMASK
  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 800a36e:	b913      	cbnz	r3, 800a376 <osMessageQueueNew+0x1e>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 800a370:	f3ef 8311 	mrs	r3, BASEPRI
 800a374:	b11b      	cbz	r3, 800a37e <osMessageQueueNew+0x26>
 800a376:	4b1a      	ldr	r3, [pc, #104]	; (800a3e0 <osMessageQueueNew+0x88>)
 800a378:	681b      	ldr	r3, [r3, #0]
 800a37a:	2b02      	cmp	r3, #2
 800a37c:	d0f1      	beq.n	800a362 <osMessageQueueNew+0xa>
 800a37e:	2800      	cmp	r0, #0
 800a380:	d0ef      	beq.n	800a362 <osMessageQueueNew+0xa>
 800a382:	2900      	cmp	r1, #0
 800a384:	d0ed      	beq.n	800a362 <osMessageQueueNew+0xa>
    if (attr != NULL) {
 800a386:	b1ec      	cbz	r4, 800a3c4 <osMessageQueueNew+0x6c>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800a388:	e9d4 3202 	ldrd	r3, r2, [r4, #8]
 800a38c:	b193      	cbz	r3, 800a3b4 <osMessageQueueNew+0x5c>
 800a38e:	2a4f      	cmp	r2, #79	; 0x4f
 800a390:	d9e7      	bls.n	800a362 <osMessageQueueNew+0xa>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800a392:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800a394:	2a00      	cmp	r2, #0
 800a396:	d0e4      	beq.n	800a362 <osMessageQueueNew+0xa>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800a398:	6966      	ldr	r6, [r4, #20]
 800a39a:	fb01 f500 	mul.w	r5, r1, r0
 800a39e:	42ae      	cmp	r6, r5
 800a3a0:	d3df      	bcc.n	800a362 <osMessageQueueNew+0xa>
      hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 800a3a2:	2500      	movs	r5, #0
 800a3a4:	9500      	str	r5, [sp, #0]
 800a3a6:	f000 fc5e 	bl	800ac66 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 800a3aa:	4605      	mov	r5, r0
 800a3ac:	2800      	cmp	r0, #0
 800a3ae:	d0d8      	beq.n	800a362 <osMessageQueueNew+0xa>
        name = attr->name;
 800a3b0:	6824      	ldr	r4, [r4, #0]
 800a3b2:	e00f      	b.n	800a3d4 <osMessageQueueNew+0x7c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 800a3b4:	2a00      	cmp	r2, #0
 800a3b6:	d1d4      	bne.n	800a362 <osMessageQueueNew+0xa>
 800a3b8:	6923      	ldr	r3, [r4, #16]
 800a3ba:	2b00      	cmp	r3, #0
 800a3bc:	d1d1      	bne.n	800a362 <osMessageQueueNew+0xa>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 800a3be:	6963      	ldr	r3, [r4, #20]
 800a3c0:	2b00      	cmp	r3, #0
 800a3c2:	d1ce      	bne.n	800a362 <osMessageQueueNew+0xa>
        hQueue = xQueueCreate (msg_count, msg_size);
 800a3c4:	2200      	movs	r2, #0
 800a3c6:	f000 fc9c 	bl	800ad02 <xQueueGenericCreate>
    if (hQueue != NULL) {
 800a3ca:	4605      	mov	r5, r0
 800a3cc:	2800      	cmp	r0, #0
 800a3ce:	d0c8      	beq.n	800a362 <osMessageQueueNew+0xa>
      if (attr != NULL) {
 800a3d0:	2c00      	cmp	r4, #0
 800a3d2:	d1ed      	bne.n	800a3b0 <osMessageQueueNew+0x58>
      vQueueAddToRegistry (hQueue, name);
 800a3d4:	4621      	mov	r1, r4
 800a3d6:	4628      	mov	r0, r5
 800a3d8:	f001 f814 	bl	800b404 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 800a3dc:	e7c2      	b.n	800a364 <osMessageQueueNew+0xc>
 800a3de:	bf00      	nop
 800a3e0:	20006df4 	.word	0x20006df4

0800a3e4 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 800a3e4:	b513      	push	{r0, r1, r4, lr}
 800a3e6:	461c      	mov	r4, r3
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800a3e8:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800a3ec:	b123      	cbz	r3, 800a3f8 <osMessageQueuePut+0x14>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800a3ee:	b9d8      	cbnz	r0, 800a428 <osMessageQueuePut+0x44>
      stat = osErrorParameter;
 800a3f0:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 800a3f4:	b002      	add	sp, #8
 800a3f6:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800a3f8:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 800a3fc:	b913      	cbnz	r3, 800a404 <osMessageQueuePut+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 800a3fe:	f3ef 8311 	mrs	r3, BASEPRI
 800a402:	b11b      	cbz	r3, 800a40c <osMessageQueuePut+0x28>
 800a404:	4b17      	ldr	r3, [pc, #92]	; (800a464 <osMessageQueuePut+0x80>)
 800a406:	681b      	ldr	r3, [r3, #0]
 800a408:	2b02      	cmp	r3, #2
 800a40a:	d0f0      	beq.n	800a3ee <osMessageQueuePut+0xa>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800a40c:	2800      	cmp	r0, #0
 800a40e:	d0ef      	beq.n	800a3f0 <osMessageQueuePut+0xc>
 800a410:	2900      	cmp	r1, #0
 800a412:	d0ed      	beq.n	800a3f0 <osMessageQueuePut+0xc>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800a414:	2300      	movs	r3, #0
 800a416:	4622      	mov	r2, r4
 800a418:	f000 fcda 	bl	800add0 <xQueueGenericSend>
 800a41c:	2801      	cmp	r0, #1
 800a41e:	d010      	beq.n	800a442 <osMessageQueuePut+0x5e>
        if (timeout != 0U) {
 800a420:	b9e4      	cbnz	r4, 800a45c <osMessageQueuePut+0x78>
          stat = osErrorResource;
 800a422:	f06f 0002 	mvn.w	r0, #2
 800a426:	e7e5      	b.n	800a3f4 <osMessageQueuePut+0x10>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800a428:	2900      	cmp	r1, #0
 800a42a:	d0e1      	beq.n	800a3f0 <osMessageQueuePut+0xc>
 800a42c:	2c00      	cmp	r4, #0
 800a42e:	d1df      	bne.n	800a3f0 <osMessageQueuePut+0xc>
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800a430:	4623      	mov	r3, r4
 800a432:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800a434:	9401      	str	r4, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800a436:	f000 fd7e 	bl	800af36 <xQueueGenericSendFromISR>
 800a43a:	2801      	cmp	r0, #1
 800a43c:	d1f1      	bne.n	800a422 <osMessageQueuePut+0x3e>
        portYIELD_FROM_ISR (yield);
 800a43e:	9b01      	ldr	r3, [sp, #4]
 800a440:	b90b      	cbnz	r3, 800a446 <osMessageQueuePut+0x62>
  stat = osOK;
 800a442:	2000      	movs	r0, #0
 800a444:	e7d6      	b.n	800a3f4 <osMessageQueuePut+0x10>
        portYIELD_FROM_ISR (yield);
 800a446:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800a44a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800a44e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800a452:	f3bf 8f4f 	dsb	sy
 800a456:	f3bf 8f6f 	isb	sy
 800a45a:	e7f2      	b.n	800a442 <osMessageQueuePut+0x5e>
          stat = osErrorTimeout;
 800a45c:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 800a460:	e7c8      	b.n	800a3f4 <osMessageQueuePut+0x10>
 800a462:	bf00      	nop
 800a464:	20006df4 	.word	0x20006df4

0800a468 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 800a468:	b513      	push	{r0, r1, r4, lr}
 800a46a:	461c      	mov	r4, r3
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800a46c:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800a470:	b123      	cbz	r3, 800a47c <osMessageQueueGet+0x14>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800a472:	b9d0      	cbnz	r0, 800a4aa <osMessageQueueGet+0x42>
      stat = osErrorParameter;
 800a474:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 800a478:	b002      	add	sp, #8
 800a47a:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800a47c:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 800a480:	b913      	cbnz	r3, 800a488 <osMessageQueueGet+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 800a482:	f3ef 8311 	mrs	r3, BASEPRI
 800a486:	b11b      	cbz	r3, 800a490 <osMessageQueueGet+0x28>
 800a488:	4b16      	ldr	r3, [pc, #88]	; (800a4e4 <osMessageQueueGet+0x7c>)
 800a48a:	681b      	ldr	r3, [r3, #0]
 800a48c:	2b02      	cmp	r3, #2
 800a48e:	d0f0      	beq.n	800a472 <osMessageQueueGet+0xa>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800a490:	2800      	cmp	r0, #0
 800a492:	d0ef      	beq.n	800a474 <osMessageQueueGet+0xc>
 800a494:	2900      	cmp	r1, #0
 800a496:	d0ed      	beq.n	800a474 <osMessageQueueGet+0xc>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800a498:	4622      	mov	r2, r4
 800a49a:	f000 fe01 	bl	800b0a0 <xQueueReceive>
 800a49e:	2801      	cmp	r0, #1
 800a4a0:	d00f      	beq.n	800a4c2 <osMessageQueueGet+0x5a>
        if (timeout != 0U) {
 800a4a2:	b9dc      	cbnz	r4, 800a4dc <osMessageQueueGet+0x74>
          stat = osErrorResource;
 800a4a4:	f06f 0002 	mvn.w	r0, #2
 800a4a8:	e7e6      	b.n	800a478 <osMessageQueueGet+0x10>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800a4aa:	2900      	cmp	r1, #0
 800a4ac:	d0e2      	beq.n	800a474 <osMessageQueueGet+0xc>
 800a4ae:	2c00      	cmp	r4, #0
 800a4b0:	d1e0      	bne.n	800a474 <osMessageQueueGet+0xc>
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800a4b2:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800a4b4:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800a4b6:	f000 ff55 	bl	800b364 <xQueueReceiveFromISR>
 800a4ba:	2801      	cmp	r0, #1
 800a4bc:	d1f2      	bne.n	800a4a4 <osMessageQueueGet+0x3c>
        portYIELD_FROM_ISR (yield);
 800a4be:	9b01      	ldr	r3, [sp, #4]
 800a4c0:	b90b      	cbnz	r3, 800a4c6 <osMessageQueueGet+0x5e>
  stat = osOK;
 800a4c2:	2000      	movs	r0, #0
 800a4c4:	e7d8      	b.n	800a478 <osMessageQueueGet+0x10>
        portYIELD_FROM_ISR (yield);
 800a4c6:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800a4ca:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800a4ce:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800a4d2:	f3bf 8f4f 	dsb	sy
 800a4d6:	f3bf 8f6f 	isb	sy
 800a4da:	e7f2      	b.n	800a4c2 <osMessageQueueGet+0x5a>
          stat = osErrorTimeout;
 800a4dc:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 800a4e0:	e7ca      	b.n	800a478 <osMessageQueueGet+0x10>
 800a4e2:	bf00      	nop
 800a4e4:	20006df4 	.word	0x20006df4

0800a4e8 <vApplicationGetIdleTaskMemory>:
/*
  vApplicationGetIdleTaskMemory gets called when configSUPPORT_STATIC_ALLOCATION
  equals to 1 and is required for static memory allocation support.
*/
void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 800a4e8:	4b03      	ldr	r3, [pc, #12]	; (800a4f8 <vApplicationGetIdleTaskMemory+0x10>)
 800a4ea:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 800a4ec:	4b03      	ldr	r3, [pc, #12]	; (800a4fc <vApplicationGetIdleTaskMemory+0x14>)
 800a4ee:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800a4f0:	2380      	movs	r3, #128	; 0x80
 800a4f2:	6013      	str	r3, [r2, #0]
}
 800a4f4:	4770      	bx	lr
 800a4f6:	bf00      	nop
 800a4f8:	20006d34 	.word	0x20006d34
 800a4fc:	20006b34 	.word	0x20006b34

0800a500 <vApplicationGetTimerTaskMemory>:
/*
  vApplicationGetTimerTaskMemory gets called when configSUPPORT_STATIC_ALLOCATION
  equals to 1 and is required for static memory allocation support.
*/
void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 800a500:	4b03      	ldr	r3, [pc, #12]	; (800a510 <vApplicationGetTimerTaskMemory+0x10>)
 800a502:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 800a504:	4b03      	ldr	r3, [pc, #12]	; (800a514 <vApplicationGetTimerTaskMemory+0x14>)
 800a506:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800a508:	f44f 7380 	mov.w	r3, #256	; 0x100
 800a50c:	6013      	str	r3, [r2, #0]
}
 800a50e:	4770      	bx	lr
 800a510:	200071f8 	.word	0x200071f8
 800a514:	20006df8 	.word	0x20006df8

0800a518 <prvInsertBlockIntoFreeList>:
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
}
/*-----------------------------------------------------------*/

static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert )
{
 800a518:	b510      	push	{r4, lr}
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800a51a:	4b0f      	ldr	r3, [pc, #60]	; (800a558 <prvInsertBlockIntoFreeList+0x40>)
 800a51c:	461a      	mov	r2, r3
 800a51e:	681b      	ldr	r3, [r3, #0]
 800a520:	4283      	cmp	r3, r0
 800a522:	d3fb      	bcc.n	800a51c <prvInsertBlockIntoFreeList+0x4>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800a524:	6854      	ldr	r4, [r2, #4]
 800a526:	1911      	adds	r1, r2, r4
 800a528:	4288      	cmp	r0, r1
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800a52a:	bf01      	itttt	eq
 800a52c:	6841      	ldreq	r1, [r0, #4]
 800a52e:	4610      	moveq	r0, r2
 800a530:	1909      	addeq	r1, r1, r4
 800a532:	6051      	streq	r1, [r2, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800a534:	6844      	ldr	r4, [r0, #4]
 800a536:	1901      	adds	r1, r0, r4
 800a538:	428b      	cmp	r3, r1
 800a53a:	d107      	bne.n	800a54c <prvInsertBlockIntoFreeList+0x34>
	{
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800a53c:	4907      	ldr	r1, [pc, #28]	; (800a55c <prvInsertBlockIntoFreeList+0x44>)
 800a53e:	6809      	ldr	r1, [r1, #0]
 800a540:	428b      	cmp	r3, r1
		{
			/* Form one big block from the two blocks. */
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800a542:	bf1f      	itttt	ne
 800a544:	6859      	ldrne	r1, [r3, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800a546:	681b      	ldrne	r3, [r3, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800a548:	1909      	addne	r1, r1, r4
 800a54a:	6041      	strne	r1, [r0, #4]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 800a54c:	4290      	cmp	r0, r2
		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
 800a54e:	6003      	str	r3, [r0, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800a550:	bf18      	it	ne
 800a552:	6010      	strne	r0, [r2, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 800a554:	bd10      	pop	{r4, pc}
 800a556:	bf00      	nop
 800a558:	200172c8 	.word	0x200172c8
 800a55c:	200072b8 	.word	0x200072b8

0800a560 <pvPortMalloc>:
{
 800a560:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a564:	4604      	mov	r4, r0
	vTaskSuspendAll();
 800a566:	f001 f9dd 	bl	800b924 <vTaskSuspendAll>
		if( pxEnd == NULL )
 800a56a:	4840      	ldr	r0, [pc, #256]	; (800a66c <pvPortMalloc+0x10c>)
 800a56c:	4d40      	ldr	r5, [pc, #256]	; (800a670 <pvPortMalloc+0x110>)
 800a56e:	6803      	ldr	r3, [r0, #0]
 800a570:	bb0b      	cbnz	r3, 800a5b6 <pvPortMalloc+0x56>
	uxAddress = ( size_t ) ucHeap;
 800a572:	4940      	ldr	r1, [pc, #256]	; (800a674 <pvPortMalloc+0x114>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 800a574:	074e      	lsls	r6, r1, #29
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 800a576:	bf1f      	itttt	ne
 800a578:	1dcb      	addne	r3, r1, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800a57a:	f023 0307 	bicne.w	r3, r3, #7
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 800a57e:	f501 3280 	addne.w	r2, r1, #65536	; 0x10000
 800a582:	1ad2      	subne	r2, r2, r3
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800a584:	bf14      	ite	ne
 800a586:	4619      	movne	r1, r3
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
 800a588:	f44f 3280 	moveq.w	r2, #65536	; 0x10000
	uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
 800a58c:	440a      	add	r2, r1
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800a58e:	4e3a      	ldr	r6, [pc, #232]	; (800a678 <pvPortMalloc+0x118>)
	uxAddress -= xHeapStructSize;
 800a590:	3a08      	subs	r2, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800a592:	f022 0207 	bic.w	r2, r2, #7
	xStart.xBlockSize = ( size_t ) 0;
 800a596:	2300      	movs	r3, #0
 800a598:	6073      	str	r3, [r6, #4]
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800a59a:	6031      	str	r1, [r6, #0]
	pxEnd->pxNextFreeBlock = NULL;
 800a59c:	e9c2 3300 	strd	r3, r3, [r2]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 800a5a0:	1a53      	subs	r3, r2, r1
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 800a5a2:	e9c1 2300 	strd	r2, r3, [r1]
	pxEnd = ( void * ) uxAddress;
 800a5a6:	6002      	str	r2, [r0, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800a5a8:	4a34      	ldr	r2, [pc, #208]	; (800a67c <pvPortMalloc+0x11c>)
 800a5aa:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800a5ac:	4a34      	ldr	r2, [pc, #208]	; (800a680 <pvPortMalloc+0x120>)
 800a5ae:	6013      	str	r3, [r2, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800a5b0:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 800a5b4:	602b      	str	r3, [r5, #0]
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 800a5b6:	682f      	ldr	r7, [r5, #0]
 800a5b8:	4227      	tst	r7, r4
 800a5ba:	d151      	bne.n	800a660 <pvPortMalloc+0x100>
			if( xWantedSize > 0 )
 800a5bc:	2c00      	cmp	r4, #0
 800a5be:	d042      	beq.n	800a646 <pvPortMalloc+0xe6>
				xWantedSize += xHeapStructSize;
 800a5c0:	f104 0308 	add.w	r3, r4, #8
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 800a5c4:	0761      	lsls	r1, r4, #29
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 800a5c6:	bf1c      	itt	ne
 800a5c8:	f023 0307 	bicne.w	r3, r3, #7
 800a5cc:	3308      	addne	r3, #8
			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 800a5ce:	2b00      	cmp	r3, #0
 800a5d0:	d046      	beq.n	800a660 <pvPortMalloc+0x100>
 800a5d2:	4c2b      	ldr	r4, [pc, #172]	; (800a680 <pvPortMalloc+0x120>)
 800a5d4:	6826      	ldr	r6, [r4, #0]
 800a5d6:	429e      	cmp	r6, r3
 800a5d8:	d342      	bcc.n	800a660 <pvPortMalloc+0x100>
				pxBlock = xStart.pxNextFreeBlock;
 800a5da:	4a27      	ldr	r2, [pc, #156]	; (800a678 <pvPortMalloc+0x118>)
 800a5dc:	6815      	ldr	r5, [r2, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 800a5de:	6869      	ldr	r1, [r5, #4]
 800a5e0:	4299      	cmp	r1, r3
 800a5e2:	d204      	bcs.n	800a5ee <pvPortMalloc+0x8e>
 800a5e4:	f8d5 c000 	ldr.w	ip, [r5]
 800a5e8:	f1bc 0f00 	cmp.w	ip, #0
 800a5ec:	d115      	bne.n	800a61a <pvPortMalloc+0xba>
				if( pxBlock != pxEnd )
 800a5ee:	6800      	ldr	r0, [r0, #0]
 800a5f0:	42a8      	cmp	r0, r5
 800a5f2:	d035      	beq.n	800a660 <pvPortMalloc+0x100>
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800a5f4:	1ac9      	subs	r1, r1, r3
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800a5f6:	6828      	ldr	r0, [r5, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800a5f8:	f8d2 8000 	ldr.w	r8, [r2]
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800a5fc:	6010      	str	r0, [r2, #0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800a5fe:	2910      	cmp	r1, #16
 800a600:	d912      	bls.n	800a628 <pvPortMalloc+0xc8>
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 800a602:	18e8      	adds	r0, r5, r3
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 800a604:	0742      	lsls	r2, r0, #29
 800a606:	d00b      	beq.n	800a620 <pvPortMalloc+0xc0>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 800a608:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a60c:	f383 8811 	msr	BASEPRI, r3
 800a610:	f3bf 8f6f 	isb	sy
 800a614:	f3bf 8f4f 	dsb	sy
 800a618:	e7fe      	b.n	800a618 <pvPortMalloc+0xb8>
 800a61a:	462a      	mov	r2, r5
 800a61c:	4665      	mov	r5, ip
 800a61e:	e7de      	b.n	800a5de <pvPortMalloc+0x7e>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 800a620:	6041      	str	r1, [r0, #4]
						pxBlock->xBlockSize = xWantedSize;
 800a622:	606b      	str	r3, [r5, #4]
						prvInsertBlockIntoFreeList( pxNewBlockLink );
 800a624:	f7ff ff78 	bl	800a518 <prvInsertBlockIntoFreeList>
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800a628:	4914      	ldr	r1, [pc, #80]	; (800a67c <pvPortMalloc+0x11c>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800a62a:	686b      	ldr	r3, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800a62c:	6808      	ldr	r0, [r1, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800a62e:	1af6      	subs	r6, r6, r3
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 800a630:	431f      	orrs	r7, r3
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800a632:	4286      	cmp	r6, r0
					pxBlock->pxNextFreeBlock = NULL;
 800a634:	f04f 0300 	mov.w	r3, #0
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800a638:	6026      	str	r6, [r4, #0]
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 800a63a:	bf38      	it	cc
 800a63c:	600e      	strcc	r6, [r1, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800a63e:	f108 0408 	add.w	r4, r8, #8
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 800a642:	606f      	str	r7, [r5, #4]
					pxBlock->pxNextFreeBlock = NULL;
 800a644:	602b      	str	r3, [r5, #0]
	( void ) xTaskResumeAll();
 800a646:	f001 fa11 	bl	800ba6c <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 800a64a:	0763      	lsls	r3, r4, #29
 800a64c:	d00a      	beq.n	800a664 <pvPortMalloc+0x104>
 800a64e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a652:	f383 8811 	msr	BASEPRI, r3
 800a656:	f3bf 8f6f 	isb	sy
 800a65a:	f3bf 8f4f 	dsb	sy
 800a65e:	e7fe      	b.n	800a65e <pvPortMalloc+0xfe>
void *pvReturn = NULL;
 800a660:	2400      	movs	r4, #0
 800a662:	e7f0      	b.n	800a646 <pvPortMalloc+0xe6>
}
 800a664:	4620      	mov	r0, r4
 800a666:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a66a:	bf00      	nop
 800a66c:	200072b8 	.word	0x200072b8
 800a670:	200172bc 	.word	0x200172bc
 800a674:	200072bc 	.word	0x200072bc
 800a678:	200172c8 	.word	0x200172c8
 800a67c:	200172c4 	.word	0x200172c4
 800a680:	200172c0 	.word	0x200172c0

0800a684 <vPortFree>:
{
 800a684:	b510      	push	{r4, lr}
	if( pv != NULL )
 800a686:	4604      	mov	r4, r0
 800a688:	b370      	cbz	r0, 800a6e8 <vPortFree+0x64>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800a68a:	4a18      	ldr	r2, [pc, #96]	; (800a6ec <vPortFree+0x68>)
 800a68c:	f850 3c04 	ldr.w	r3, [r0, #-4]
 800a690:	6812      	ldr	r2, [r2, #0]
 800a692:	4213      	tst	r3, r2
 800a694:	d108      	bne.n	800a6a8 <vPortFree+0x24>
 800a696:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a69a:	f383 8811 	msr	BASEPRI, r3
 800a69e:	f3bf 8f6f 	isb	sy
 800a6a2:	f3bf 8f4f 	dsb	sy
 800a6a6:	e7fe      	b.n	800a6a6 <vPortFree+0x22>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 800a6a8:	f850 1c08 	ldr.w	r1, [r0, #-8]
 800a6ac:	b141      	cbz	r1, 800a6c0 <vPortFree+0x3c>
 800a6ae:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a6b2:	f383 8811 	msr	BASEPRI, r3
 800a6b6:	f3bf 8f6f 	isb	sy
 800a6ba:	f3bf 8f4f 	dsb	sy
 800a6be:	e7fe      	b.n	800a6be <vPortFree+0x3a>
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800a6c0:	ea23 0302 	bic.w	r3, r3, r2
 800a6c4:	f840 3c04 	str.w	r3, [r0, #-4]
				vTaskSuspendAll();
 800a6c8:	f001 f92c 	bl	800b924 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 800a6cc:	4a08      	ldr	r2, [pc, #32]	; (800a6f0 <vPortFree+0x6c>)
 800a6ce:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800a6d2:	6811      	ldr	r1, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 800a6d4:	f1a4 0008 	sub.w	r0, r4, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 800a6d8:	440b      	add	r3, r1
 800a6da:	6013      	str	r3, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 800a6dc:	f7ff ff1c 	bl	800a518 <prvInsertBlockIntoFreeList>
}
 800a6e0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				( void ) xTaskResumeAll();
 800a6e4:	f001 b9c2 	b.w	800ba6c <xTaskResumeAll>
}
 800a6e8:	bd10      	pop	{r4, pc}
 800a6ea:	bf00      	nop
 800a6ec:	200172bc 	.word	0x200172bc
 800a6f0:	200172c0 	.word	0x200172c0

0800a6f4 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800a6f4:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800a6f8:	f04f 32ff 	mov.w	r2, #4294967295

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800a6fc:	e9c0 2302 	strd	r2, r3, [r0, #8]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800a700:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800a702:	6103      	str	r3, [r0, #16]

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800a704:	2300      	movs	r3, #0
 800a706:	6003      	str	r3, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 800a708:	4770      	bx	lr

0800a70a <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 800a70a:	2300      	movs	r3, #0
 800a70c:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 800a70e:	4770      	bx	lr

0800a710 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 800a710:	6843      	ldr	r3, [r0, #4]
	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
 800a712:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 800a714:	689a      	ldr	r2, [r3, #8]
 800a716:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800a718:	689a      	ldr	r2, [r3, #8]
 800a71a:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious = pxNewListItem;
 800a71c:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800a71e:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 800a720:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 800a722:	3301      	adds	r3, #1
 800a724:	6003      	str	r3, [r0, #0]
}
 800a726:	4770      	bx	lr

0800a728 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 800a728:	b530      	push	{r4, r5, lr}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 800a72a:	680c      	ldr	r4, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 800a72c:	1c63      	adds	r3, r4, #1
 800a72e:	d10a      	bne.n	800a746 <vListInsert+0x1e>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
 800a730:	6903      	ldr	r3, [r0, #16]
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
 800a732:	685a      	ldr	r2, [r3, #4]
 800a734:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 800a736:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
 800a738:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 800a73a:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800a73c:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 800a73e:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 800a740:	3301      	adds	r3, #1
 800a742:	6003      	str	r3, [r0, #0]
}
 800a744:	bd30      	pop	{r4, r5, pc}
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 800a746:	f100 0208 	add.w	r2, r0, #8
 800a74a:	4613      	mov	r3, r2
 800a74c:	6852      	ldr	r2, [r2, #4]
 800a74e:	6815      	ldr	r5, [r2, #0]
 800a750:	42a5      	cmp	r5, r4
 800a752:	d9fa      	bls.n	800a74a <vListInsert+0x22>
 800a754:	e7ed      	b.n	800a732 <vListInsert+0xa>

0800a756 <uxListRemove>:
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800a756:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
List_t * const pxList = pxItemToRemove->pxContainer;
 800a75a:	6903      	ldr	r3, [r0, #16]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800a75c:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 800a75e:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 800a760:	6859      	ldr	r1, [r3, #4]
 800a762:	4281      	cmp	r1, r0
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 800a764:	bf08      	it	eq
 800a766:	605a      	streq	r2, [r3, #4]
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
 800a768:	2200      	movs	r2, #0
 800a76a:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
 800a76c:	681a      	ldr	r2, [r3, #0]
 800a76e:	3a01      	subs	r2, #1
 800a770:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
 800a772:	6818      	ldr	r0, [r3, #0]
}
 800a774:	4770      	bx	lr
	...

0800a778 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 800a778:	4808      	ldr	r0, [pc, #32]	; (800a79c <prvPortStartFirstTask+0x24>)
 800a77a:	6800      	ldr	r0, [r0, #0]
 800a77c:	6800      	ldr	r0, [r0, #0]
 800a77e:	f380 8808 	msr	MSP, r0
 800a782:	f04f 0000 	mov.w	r0, #0
 800a786:	f380 8814 	msr	CONTROL, r0
 800a78a:	b662      	cpsie	i
 800a78c:	b661      	cpsie	f
 800a78e:	f3bf 8f4f 	dsb	sy
 800a792:	f3bf 8f6f 	isb	sy
 800a796:	df00      	svc	0
 800a798:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 800a79a:	0000      	.short	0x0000
 800a79c:	e000ed08 	.word	0xe000ed08

0800a7a0 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 800a7a0:	f8df 000c 	ldr.w	r0, [pc, #12]	; 800a7b0 <vPortEnableVFP+0x10>
 800a7a4:	6801      	ldr	r1, [r0, #0]
 800a7a6:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800a7aa:	6001      	str	r1, [r0, #0]
 800a7ac:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 800a7ae:	0000      	.short	0x0000
 800a7b0:	e000ed88 	.word	0xe000ed88

0800a7b4 <prvTaskExitError>:
{
 800a7b4:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 800a7b6:	2300      	movs	r3, #0
 800a7b8:	9301      	str	r3, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 800a7ba:	4b0d      	ldr	r3, [pc, #52]	; (800a7f0 <prvTaskExitError+0x3c>)
 800a7bc:	681b      	ldr	r3, [r3, #0]
 800a7be:	3301      	adds	r3, #1
 800a7c0:	d008      	beq.n	800a7d4 <prvTaskExitError+0x20>
 800a7c2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a7c6:	f383 8811 	msr	BASEPRI, r3
 800a7ca:	f3bf 8f6f 	isb	sy
 800a7ce:	f3bf 8f4f 	dsb	sy
 800a7d2:	e7fe      	b.n	800a7d2 <prvTaskExitError+0x1e>
 800a7d4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a7d8:	f383 8811 	msr	BASEPRI, r3
 800a7dc:	f3bf 8f6f 	isb	sy
 800a7e0:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 800a7e4:	9b01      	ldr	r3, [sp, #4]
 800a7e6:	2b00      	cmp	r3, #0
 800a7e8:	d0fc      	beq.n	800a7e4 <prvTaskExitError+0x30>
}
 800a7ea:	b002      	add	sp, #8
 800a7ec:	4770      	bx	lr
 800a7ee:	bf00      	nop
 800a7f0:	20000084 	.word	0x20000084

0800a7f4 <pxPortInitialiseStack>:
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800a7f4:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 800a7f8:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800a7fc:	4b07      	ldr	r3, [pc, #28]	; (800a81c <pxPortInitialiseStack+0x28>)
 800a7fe:	f840 3c0c 	str.w	r3, [r0, #-12]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 800a802:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800a806:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 800a80a:	f840 1c08 	str.w	r1, [r0, #-8]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 800a80e:	f840 2c20 	str.w	r2, [r0, #-32]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800a812:	f840 3c24 	str.w	r3, [r0, #-36]
}
 800a816:	3844      	subs	r0, #68	; 0x44
 800a818:	4770      	bx	lr
 800a81a:	bf00      	nop
 800a81c:	0800a7b5 	.word	0x0800a7b5

0800a820 <SVC_Handler>:
	__asm volatile (
 800a820:	4b07      	ldr	r3, [pc, #28]	; (800a840 <pxCurrentTCBConst2>)
 800a822:	6819      	ldr	r1, [r3, #0]
 800a824:	6808      	ldr	r0, [r1, #0]
 800a826:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a82a:	f380 8809 	msr	PSP, r0
 800a82e:	f3bf 8f6f 	isb	sy
 800a832:	f04f 0000 	mov.w	r0, #0
 800a836:	f380 8811 	msr	BASEPRI, r0
 800a83a:	4770      	bx	lr
 800a83c:	f3af 8000 	nop.w

0800a840 <pxCurrentTCBConst2>:
 800a840:	20017318 	.word	0x20017318

0800a844 <vPortEnterCritical>:
 800a844:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a848:	f383 8811 	msr	BASEPRI, r3
 800a84c:	f3bf 8f6f 	isb	sy
 800a850:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 800a854:	4a0a      	ldr	r2, [pc, #40]	; (800a880 <vPortEnterCritical+0x3c>)
 800a856:	6813      	ldr	r3, [r2, #0]
 800a858:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 800a85a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 800a85c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 800a85e:	d10e      	bne.n	800a87e <vPortEnterCritical+0x3a>
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 800a860:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800a864:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	; 0xd04
 800a868:	b2db      	uxtb	r3, r3
 800a86a:	b143      	cbz	r3, 800a87e <vPortEnterCritical+0x3a>
 800a86c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a870:	f383 8811 	msr	BASEPRI, r3
 800a874:	f3bf 8f6f 	isb	sy
 800a878:	f3bf 8f4f 	dsb	sy
 800a87c:	e7fe      	b.n	800a87c <vPortEnterCritical+0x38>
}
 800a87e:	4770      	bx	lr
 800a880:	20000084 	.word	0x20000084

0800a884 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 800a884:	4a08      	ldr	r2, [pc, #32]	; (800a8a8 <vPortExitCritical+0x24>)
 800a886:	6813      	ldr	r3, [r2, #0]
 800a888:	b943      	cbnz	r3, 800a89c <vPortExitCritical+0x18>
 800a88a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a88e:	f383 8811 	msr	BASEPRI, r3
 800a892:	f3bf 8f6f 	isb	sy
 800a896:	f3bf 8f4f 	dsb	sy
 800a89a:	e7fe      	b.n	800a89a <vPortExitCritical+0x16>
	uxCriticalNesting--;
 800a89c:	3b01      	subs	r3, #1
 800a89e:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 800a8a0:	b90b      	cbnz	r3, 800a8a6 <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 800a8a2:	f383 8811 	msr	BASEPRI, r3
}
 800a8a6:	4770      	bx	lr
 800a8a8:	20000084 	.word	0x20000084
 800a8ac:	00000000 	.word	0x00000000

0800a8b0 <PendSV_Handler>:
	__asm volatile
 800a8b0:	f3ef 8009 	mrs	r0, PSP
 800a8b4:	f3bf 8f6f 	isb	sy
 800a8b8:	4b15      	ldr	r3, [pc, #84]	; (800a910 <pxCurrentTCBConst>)
 800a8ba:	681a      	ldr	r2, [r3, #0]
 800a8bc:	f01e 0f10 	tst.w	lr, #16
 800a8c0:	bf08      	it	eq
 800a8c2:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 800a8c6:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a8ca:	6010      	str	r0, [r2, #0]
 800a8cc:	e92d 0009 	stmdb	sp!, {r0, r3}
 800a8d0:	f04f 0050 	mov.w	r0, #80	; 0x50
 800a8d4:	f380 8811 	msr	BASEPRI, r0
 800a8d8:	f3bf 8f4f 	dsb	sy
 800a8dc:	f3bf 8f6f 	isb	sy
 800a8e0:	f001 f95c 	bl	800bb9c <vTaskSwitchContext>
 800a8e4:	f04f 0000 	mov.w	r0, #0
 800a8e8:	f380 8811 	msr	BASEPRI, r0
 800a8ec:	bc09      	pop	{r0, r3}
 800a8ee:	6819      	ldr	r1, [r3, #0]
 800a8f0:	6808      	ldr	r0, [r1, #0]
 800a8f2:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a8f6:	f01e 0f10 	tst.w	lr, #16
 800a8fa:	bf08      	it	eq
 800a8fc:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 800a900:	f380 8809 	msr	PSP, r0
 800a904:	f3bf 8f6f 	isb	sy
 800a908:	4770      	bx	lr
 800a90a:	bf00      	nop
 800a90c:	f3af 8000 	nop.w

0800a910 <pxCurrentTCBConst>:
 800a910:	20017318 	.word	0x20017318

0800a914 <SysTick_Handler>:
{
 800a914:	b508      	push	{r3, lr}
	__asm volatile
 800a916:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a91a:	f383 8811 	msr	BASEPRI, r3
 800a91e:	f3bf 8f6f 	isb	sy
 800a922:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 800a926:	f001 f80b 	bl	800b940 <xTaskIncrementTick>
 800a92a:	b128      	cbz	r0, 800a938 <SysTick_Handler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 800a92c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800a930:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800a934:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
	__asm volatile
 800a938:	2300      	movs	r3, #0
 800a93a:	f383 8811 	msr	BASEPRI, r3
}
 800a93e:	bd08      	pop	{r3, pc}

0800a940 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 800a940:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 800a944:	2300      	movs	r3, #0
 800a946:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 800a948:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800a94a:	4b05      	ldr	r3, [pc, #20]	; (800a960 <vPortSetupTimerInterrupt+0x20>)
 800a94c:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 800a950:	681b      	ldr	r3, [r3, #0]
 800a952:	fbb3 f3f1 	udiv	r3, r3, r1
 800a956:	3b01      	subs	r3, #1
 800a958:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800a95a:	2307      	movs	r3, #7
 800a95c:	6113      	str	r3, [r2, #16]
}
 800a95e:	4770      	bx	lr
 800a960:	20000078 	.word	0x20000078

0800a964 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800a964:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
{
 800a968:	b537      	push	{r0, r1, r2, r4, r5, lr}
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800a96a:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	; 0xd00
 800a96e:	4a3a      	ldr	r2, [pc, #232]	; (800aa58 <xPortStartScheduler+0xf4>)
 800a970:	4291      	cmp	r1, r2
 800a972:	d108      	bne.n	800a986 <xPortStartScheduler+0x22>
	__asm volatile
 800a974:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a978:	f383 8811 	msr	BASEPRI, r3
 800a97c:	f3bf 8f6f 	isb	sy
 800a980:	f3bf 8f4f 	dsb	sy
 800a984:	e7fe      	b.n	800a984 <xPortStartScheduler+0x20>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 800a986:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	; 0xd00
 800a98a:	4b34      	ldr	r3, [pc, #208]	; (800aa5c <xPortStartScheduler+0xf8>)
 800a98c:	429a      	cmp	r2, r3
 800a98e:	d108      	bne.n	800a9a2 <xPortStartScheduler+0x3e>
 800a990:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a994:	f383 8811 	msr	BASEPRI, r3
 800a998:	f3bf 8f6f 	isb	sy
 800a99c:	f3bf 8f4f 	dsb	sy
 800a9a0:	e7fe      	b.n	800a9a0 <xPortStartScheduler+0x3c>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800a9a2:	4b2f      	ldr	r3, [pc, #188]	; (800aa60 <xPortStartScheduler+0xfc>)
 800a9a4:	781a      	ldrb	r2, [r3, #0]
 800a9a6:	b2d2      	uxtb	r2, r2
 800a9a8:	9201      	str	r2, [sp, #4]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800a9aa:	22ff      	movs	r2, #255	; 0xff
 800a9ac:	701a      	strb	r2, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 800a9ae:	781b      	ldrb	r3, [r3, #0]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800a9b0:	4a2c      	ldr	r2, [pc, #176]	; (800aa64 <xPortStartScheduler+0x100>)
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 800a9b2:	b2db      	uxtb	r3, r3
 800a9b4:	f88d 3003 	strb.w	r3, [sp, #3]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800a9b8:	f89d 3003 	ldrb.w	r3, [sp, #3]
 800a9bc:	f003 0350 	and.w	r3, r3, #80	; 0x50
 800a9c0:	7013      	strb	r3, [r2, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800a9c2:	4a29      	ldr	r2, [pc, #164]	; (800aa68 <xPortStartScheduler+0x104>)
 800a9c4:	2307      	movs	r3, #7
 800a9c6:	6013      	str	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800a9c8:	2100      	movs	r1, #0
 800a9ca:	f89d 0003 	ldrb.w	r0, [sp, #3]
 800a9ce:	0600      	lsls	r0, r0, #24
 800a9d0:	f103 34ff 	add.w	r4, r3, #4294967295
 800a9d4:	d40c      	bmi.n	800a9f0 <xPortStartScheduler+0x8c>
 800a9d6:	b111      	cbz	r1, 800a9de <xPortStartScheduler+0x7a>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 800a9d8:	2b03      	cmp	r3, #3
 800a9da:	6013      	str	r3, [r2, #0]
 800a9dc:	d011      	beq.n	800aa02 <xPortStartScheduler+0x9e>
 800a9de:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a9e2:	f383 8811 	msr	BASEPRI, r3
 800a9e6:	f3bf 8f6f 	isb	sy
 800a9ea:	f3bf 8f4f 	dsb	sy
 800a9ee:	e7fe      	b.n	800a9ee <xPortStartScheduler+0x8a>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 800a9f0:	f89d 3003 	ldrb.w	r3, [sp, #3]
 800a9f4:	005b      	lsls	r3, r3, #1
 800a9f6:	b2db      	uxtb	r3, r3
 800a9f8:	f88d 3003 	strb.w	r3, [sp, #3]
 800a9fc:	2101      	movs	r1, #1
 800a9fe:	4623      	mov	r3, r4
 800aa00:	e7e3      	b.n	800a9ca <xPortStartScheduler+0x66>
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 800aa02:	f44f 7340 	mov.w	r3, #768	; 0x300
 800aa06:	6013      	str	r3, [r2, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800aa08:	9b01      	ldr	r3, [sp, #4]
 800aa0a:	4a15      	ldr	r2, [pc, #84]	; (800aa60 <xPortStartScheduler+0xfc>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800aa0c:	f04f 24e0 	mov.w	r4, #3758153728	; 0xe000e000
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800aa10:	b2db      	uxtb	r3, r3
 800aa12:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800aa14:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	; 0xd20
 800aa18:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800aa1c:	f8c4 3d20 	str.w	r3, [r4, #3360]	; 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 800aa20:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	; 0xd20
 800aa24:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 800aa28:	f8c4 3d20 	str.w	r3, [r4, #3360]	; 0xd20
	vPortSetupTimerInterrupt();
 800aa2c:	f7ff ff88 	bl	800a940 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 800aa30:	4b0e      	ldr	r3, [pc, #56]	; (800aa6c <xPortStartScheduler+0x108>)
 800aa32:	2500      	movs	r5, #0
 800aa34:	601d      	str	r5, [r3, #0]
	vPortEnableVFP();
 800aa36:	f7ff feb3 	bl	800a7a0 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 800aa3a:	f8d4 3f34 	ldr.w	r3, [r4, #3892]	; 0xf34
 800aa3e:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 800aa42:	f8c4 3f34 	str.w	r3, [r4, #3892]	; 0xf34
	prvPortStartFirstTask();
 800aa46:	f7ff fe97 	bl	800a778 <prvPortStartFirstTask>
	vTaskSwitchContext();
 800aa4a:	f001 f8a7 	bl	800bb9c <vTaskSwitchContext>
	prvTaskExitError();
 800aa4e:	f7ff feb1 	bl	800a7b4 <prvTaskExitError>
}
 800aa52:	4628      	mov	r0, r5
 800aa54:	b003      	add	sp, #12
 800aa56:	bd30      	pop	{r4, r5, pc}
 800aa58:	410fc271 	.word	0x410fc271
 800aa5c:	410fc270 	.word	0x410fc270
 800aa60:	e000e400 	.word	0xe000e400
 800aa64:	200172d0 	.word	0x200172d0
 800aa68:	200172d4 	.word	0x200172d4
 800aa6c:	20000084 	.word	0x20000084

0800aa70 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 800aa70:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 800aa74:	2b0f      	cmp	r3, #15
 800aa76:	d90e      	bls.n	800aa96 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 800aa78:	4a11      	ldr	r2, [pc, #68]	; (800aac0 <vPortValidateInterruptPriority+0x50>)
 800aa7a:	5c9b      	ldrb	r3, [r3, r2]
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800aa7c:	4a11      	ldr	r2, [pc, #68]	; (800aac4 <vPortValidateInterruptPriority+0x54>)
 800aa7e:	7812      	ldrb	r2, [r2, #0]
 800aa80:	429a      	cmp	r2, r3
 800aa82:	d908      	bls.n	800aa96 <vPortValidateInterruptPriority+0x26>
 800aa84:	f04f 0350 	mov.w	r3, #80	; 0x50
 800aa88:	f383 8811 	msr	BASEPRI, r3
 800aa8c:	f3bf 8f6f 	isb	sy
 800aa90:	f3bf 8f4f 	dsb	sy
 800aa94:	e7fe      	b.n	800aa94 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 800aa96:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800aa9a:	4a0b      	ldr	r2, [pc, #44]	; (800aac8 <vPortValidateInterruptPriority+0x58>)
 800aa9c:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	; 0xd0c
 800aaa0:	6812      	ldr	r2, [r2, #0]
 800aaa2:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 800aaa6:	4293      	cmp	r3, r2
 800aaa8:	d908      	bls.n	800aabc <vPortValidateInterruptPriority+0x4c>
 800aaaa:	f04f 0350 	mov.w	r3, #80	; 0x50
 800aaae:	f383 8811 	msr	BASEPRI, r3
 800aab2:	f3bf 8f6f 	isb	sy
 800aab6:	f3bf 8f4f 	dsb	sy
 800aaba:	e7fe      	b.n	800aaba <vPortValidateInterruptPriority+0x4a>
	}
 800aabc:	4770      	bx	lr
 800aabe:	bf00      	nop
 800aac0:	e000e3f0 	.word	0xe000e3f0
 800aac4:	200172d0 	.word	0x200172d0
 800aac8:	200172d4 	.word	0x200172d4

0800aacc <prvIsQueueEmpty>:
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
 800aacc:	b510      	push	{r4, lr}
 800aace:	4604      	mov	r4, r0
BaseType_t xReturn;

	taskENTER_CRITICAL();
 800aad0:	f7ff feb8 	bl	800a844 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800aad4:	6ba4      	ldr	r4, [r4, #56]	; 0x38
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 800aad6:	f7ff fed5 	bl	800a884 <vPortExitCritical>

	return xReturn;
}
 800aada:	fab4 f084 	clz	r0, r4
 800aade:	0940      	lsrs	r0, r0, #5
 800aae0:	bd10      	pop	{r4, pc}

0800aae2 <prvCopyDataToQueue>:
{
 800aae2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800aae4:	4615      	mov	r5, r2
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800aae6:	6c02      	ldr	r2, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800aae8:	6b86      	ldr	r6, [r0, #56]	; 0x38
{
 800aaea:	4604      	mov	r4, r0
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800aaec:	b952      	cbnz	r2, 800ab04 <prvCopyDataToQueue+0x22>
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800aaee:	6807      	ldr	r7, [r0, #0]
 800aaf0:	bb47      	cbnz	r7, 800ab44 <prvCopyDataToQueue+0x62>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 800aaf2:	6880      	ldr	r0, [r0, #8]
 800aaf4:	f001 f9ae 	bl	800be54 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 800aaf8:	60a7      	str	r7, [r4, #8]
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 800aafa:	4605      	mov	r5, r0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800aafc:	3601      	adds	r6, #1
 800aafe:	63a6      	str	r6, [r4, #56]	; 0x38
}
 800ab00:	4628      	mov	r0, r5
 800ab02:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	else if( xPosition == queueSEND_TO_BACK )
 800ab04:	b965      	cbnz	r5, 800ab20 <prvCopyDataToQueue+0x3e>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800ab06:	6840      	ldr	r0, [r0, #4]
 800ab08:	f017 fa44 	bl	8021f94 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800ab0c:	6863      	ldr	r3, [r4, #4]
 800ab0e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800ab10:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800ab12:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800ab14:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800ab16:	4293      	cmp	r3, r2
 800ab18:	d3f0      	bcc.n	800aafc <prvCopyDataToQueue+0x1a>
			pxQueue->pcWriteTo = pxQueue->pcHead;
 800ab1a:	6823      	ldr	r3, [r4, #0]
 800ab1c:	6063      	str	r3, [r4, #4]
 800ab1e:	e7ed      	b.n	800aafc <prvCopyDataToQueue+0x1a>
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 800ab20:	68c0      	ldr	r0, [r0, #12]
 800ab22:	f017 fa37 	bl	8021f94 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800ab26:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800ab28:	68e3      	ldr	r3, [r4, #12]
 800ab2a:	4251      	negs	r1, r2
 800ab2c:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800ab2e:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800ab30:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800ab32:	4293      	cmp	r3, r2
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 800ab34:	bf3e      	ittt	cc
 800ab36:	68a3      	ldrcc	r3, [r4, #8]
 800ab38:	185b      	addcc	r3, r3, r1
 800ab3a:	60e3      	strcc	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 800ab3c:	2d02      	cmp	r5, #2
 800ab3e:	d101      	bne.n	800ab44 <prvCopyDataToQueue+0x62>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800ab40:	b116      	cbz	r6, 800ab48 <prvCopyDataToQueue+0x66>
				--uxMessagesWaiting;
 800ab42:	3e01      	subs	r6, #1
BaseType_t xReturn = pdFALSE;
 800ab44:	2500      	movs	r5, #0
 800ab46:	e7d9      	b.n	800aafc <prvCopyDataToQueue+0x1a>
 800ab48:	4635      	mov	r5, r6
 800ab4a:	e7d7      	b.n	800aafc <prvCopyDataToQueue+0x1a>

0800ab4c <prvCopyDataFromQueue>:
{
 800ab4c:	4603      	mov	r3, r0
 800ab4e:	b410      	push	{r4}
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800ab50:	6c1a      	ldr	r2, [r3, #64]	; 0x40
{
 800ab52:	4608      	mov	r0, r1
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800ab54:	b16a      	cbz	r2, 800ab72 <prvCopyDataFromQueue+0x26>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800ab56:	68dc      	ldr	r4, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800ab58:	6899      	ldr	r1, [r3, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800ab5a:	4414      	add	r4, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800ab5c:	428c      	cmp	r4, r1
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800ab5e:	bf28      	it	cs
 800ab60:	6819      	ldrcs	r1, [r3, #0]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800ab62:	60dc      	str	r4, [r3, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800ab64:	bf28      	it	cs
 800ab66:	60d9      	strcs	r1, [r3, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800ab68:	68d9      	ldr	r1, [r3, #12]
}
 800ab6a:	f85d 4b04 	ldr.w	r4, [sp], #4
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800ab6e:	f017 ba11 	b.w	8021f94 <memcpy>
}
 800ab72:	f85d 4b04 	ldr.w	r4, [sp], #4
 800ab76:	4770      	bx	lr

0800ab78 <prvUnlockQueue>:
{
 800ab78:	b570      	push	{r4, r5, r6, lr}
 800ab7a:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 800ab7c:	f7ff fe62 	bl	800a844 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800ab80:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ab84:	f104 0624 	add.w	r6, r4, #36	; 0x24
		int8_t cTxLock = pxQueue->cTxLock;
 800ab88:	b26d      	sxtb	r5, r5
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ab8a:	2d00      	cmp	r5, #0
 800ab8c:	dc14      	bgt.n	800abb8 <prvUnlockQueue+0x40>
		pxQueue->cTxLock = queueUNLOCKED;
 800ab8e:	23ff      	movs	r3, #255	; 0xff
 800ab90:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800ab94:	f7ff fe76 	bl	800a884 <vPortExitCritical>
	taskENTER_CRITICAL();
 800ab98:	f7ff fe54 	bl	800a844 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800ab9c:	f894 5044 	ldrb.w	r5, [r4, #68]	; 0x44
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800aba0:	f104 0610 	add.w	r6, r4, #16
		int8_t cRxLock = pxQueue->cRxLock;
 800aba4:	b26d      	sxtb	r5, r5
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800aba6:	2d00      	cmp	r5, #0
 800aba8:	dc12      	bgt.n	800abd0 <prvUnlockQueue+0x58>
		pxQueue->cRxLock = queueUNLOCKED;
 800abaa:	23ff      	movs	r3, #255	; 0xff
 800abac:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
}
 800abb0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 800abb4:	f7ff be66 	b.w	800a884 <vPortExitCritical>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800abb8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800abba:	2b00      	cmp	r3, #0
 800abbc:	d0e7      	beq.n	800ab8e <prvUnlockQueue+0x16>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800abbe:	4630      	mov	r0, r6
 800abc0:	f001 f864 	bl	800bc8c <xTaskRemoveFromEventList>
 800abc4:	b108      	cbz	r0, 800abca <prvUnlockQueue+0x52>
						vTaskMissedYield();
 800abc6:	f001 f8ed 	bl	800bda4 <vTaskMissedYield>
			--cTxLock;
 800abca:	3d01      	subs	r5, #1
 800abcc:	b26d      	sxtb	r5, r5
 800abce:	e7dc      	b.n	800ab8a <prvUnlockQueue+0x12>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800abd0:	6923      	ldr	r3, [r4, #16]
 800abd2:	2b00      	cmp	r3, #0
 800abd4:	d0e9      	beq.n	800abaa <prvUnlockQueue+0x32>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800abd6:	4630      	mov	r0, r6
 800abd8:	f001 f858 	bl	800bc8c <xTaskRemoveFromEventList>
 800abdc:	b108      	cbz	r0, 800abe2 <prvUnlockQueue+0x6a>
					vTaskMissedYield();
 800abde:	f001 f8e1 	bl	800bda4 <vTaskMissedYield>
				--cRxLock;
 800abe2:	3d01      	subs	r5, #1
 800abe4:	b26d      	sxtb	r5, r5
 800abe6:	e7de      	b.n	800aba6 <prvUnlockQueue+0x2e>

0800abe8 <xQueueGenericReset>:
{
 800abe8:	b538      	push	{r3, r4, r5, lr}
 800abea:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 800abec:	4604      	mov	r4, r0
 800abee:	b940      	cbnz	r0, 800ac02 <xQueueGenericReset+0x1a>
 800abf0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800abf4:	f383 8811 	msr	BASEPRI, r3
 800abf8:	f3bf 8f6f 	isb	sy
 800abfc:	f3bf 8f4f 	dsb	sy
 800ac00:	e7fe      	b.n	800ac00 <xQueueGenericReset+0x18>
	taskENTER_CRITICAL();
 800ac02:	f7ff fe1f 	bl	800a844 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800ac06:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	; 0x3c
 800ac0a:	6822      	ldr	r2, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800ac0c:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800ac0e:	434b      	muls	r3, r1
 800ac10:	18d0      	adds	r0, r2, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800ac12:	1a5b      	subs	r3, r3, r1
 800ac14:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800ac16:	60a0      	str	r0, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800ac18:	60e3      	str	r3, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800ac1a:	2000      	movs	r0, #0
		pxQueue->cRxLock = queueUNLOCKED;
 800ac1c:	23ff      	movs	r3, #255	; 0xff
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800ac1e:	63a0      	str	r0, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 800ac20:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
 800ac24:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
		if( xNewQueue == pdFALSE )
 800ac28:	b9a5      	cbnz	r5, 800ac54 <xQueueGenericReset+0x6c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ac2a:	6923      	ldr	r3, [r4, #16]
 800ac2c:	b173      	cbz	r3, 800ac4c <xQueueGenericReset+0x64>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ac2e:	f104 0010 	add.w	r0, r4, #16
 800ac32:	f001 f82b 	bl	800bc8c <xTaskRemoveFromEventList>
 800ac36:	b148      	cbz	r0, 800ac4c <xQueueGenericReset+0x64>
					queueYIELD_IF_USING_PREEMPTION();
 800ac38:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800ac3c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800ac40:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800ac44:	f3bf 8f4f 	dsb	sy
 800ac48:	f3bf 8f6f 	isb	sy
	taskEXIT_CRITICAL();
 800ac4c:	f7ff fe1a 	bl	800a884 <vPortExitCritical>
}
 800ac50:	2001      	movs	r0, #1
 800ac52:	bd38      	pop	{r3, r4, r5, pc}
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800ac54:	f104 0010 	add.w	r0, r4, #16
 800ac58:	f7ff fd4c 	bl	800a6f4 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800ac5c:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800ac60:	f7ff fd48 	bl	800a6f4 <vListInitialise>
 800ac64:	e7f2      	b.n	800ac4c <xQueueGenericReset+0x64>

0800ac66 <xQueueGenericCreateStatic>:
	{
 800ac66:	b513      	push	{r0, r1, r4, lr}
 800ac68:	461c      	mov	r4, r3
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800ac6a:	b940      	cbnz	r0, 800ac7e <xQueueGenericCreateStatic+0x18>
 800ac6c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ac70:	f383 8811 	msr	BASEPRI, r3
 800ac74:	f3bf 8f6f 	isb	sy
 800ac78:	f3bf 8f4f 	dsb	sy
 800ac7c:	e7fe      	b.n	800ac7c <xQueueGenericCreateStatic+0x16>
		configASSERT( pxStaticQueue != NULL );
 800ac7e:	b943      	cbnz	r3, 800ac92 <xQueueGenericCreateStatic+0x2c>
 800ac80:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ac84:	f383 8811 	msr	BASEPRI, r3
 800ac88:	f3bf 8f6f 	isb	sy
 800ac8c:	f3bf 8f4f 	dsb	sy
 800ac90:	e7fe      	b.n	800ac90 <xQueueGenericCreateStatic+0x2a>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 800ac92:	b14a      	cbz	r2, 800aca8 <xQueueGenericCreateStatic+0x42>
 800ac94:	b991      	cbnz	r1, 800acbc <xQueueGenericCreateStatic+0x56>
 800ac96:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ac9a:	f383 8811 	msr	BASEPRI, r3
 800ac9e:	f3bf 8f6f 	isb	sy
 800aca2:	f3bf 8f4f 	dsb	sy
 800aca6:	e7fe      	b.n	800aca6 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 800aca8:	b141      	cbz	r1, 800acbc <xQueueGenericCreateStatic+0x56>
 800acaa:	f04f 0350 	mov.w	r3, #80	; 0x50
 800acae:	f383 8811 	msr	BASEPRI, r3
 800acb2:	f3bf 8f6f 	isb	sy
 800acb6:	f3bf 8f4f 	dsb	sy
 800acba:	e7fe      	b.n	800acba <xQueueGenericCreateStatic+0x54>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800acbc:	2350      	movs	r3, #80	; 0x50
 800acbe:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 800acc0:	9b01      	ldr	r3, [sp, #4]
 800acc2:	2b50      	cmp	r3, #80	; 0x50
 800acc4:	d008      	beq.n	800acd8 <xQueueGenericCreateStatic+0x72>
 800acc6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800acca:	f383 8811 	msr	BASEPRI, r3
 800acce:	f3bf 8f6f 	isb	sy
 800acd2:	f3bf 8f4f 	dsb	sy
 800acd6:	e7fe      	b.n	800acd6 <xQueueGenericCreateStatic+0x70>
	if( uxItemSize == ( UBaseType_t ) 0 )
 800acd8:	2900      	cmp	r1, #0
 800acda:	bf08      	it	eq
 800acdc:	4622      	moveq	r2, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800acde:	9b01      	ldr	r3, [sp, #4]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800ace0:	6022      	str	r2, [r4, #0]
 800ace2:	2301      	movs	r3, #1
	pxNewQueue->uxItemSize = uxItemSize;
 800ace4:	e9c4 010f 	strd	r0, r1, [r4, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800ace8:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800acec:	4619      	mov	r1, r3
 800acee:	4620      	mov	r0, r4
 800acf0:	f7ff ff7a 	bl	800abe8 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 800acf4:	f89d 3010 	ldrb.w	r3, [sp, #16]
 800acf8:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
	}
 800acfc:	4620      	mov	r0, r4
 800acfe:	b002      	add	sp, #8
 800ad00:	bd10      	pop	{r4, pc}

0800ad02 <xQueueGenericCreate>:
	{
 800ad02:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ad04:	460d      	mov	r5, r1
 800ad06:	4617      	mov	r7, r2
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800ad08:	4606      	mov	r6, r0
 800ad0a:	b940      	cbnz	r0, 800ad1e <xQueueGenericCreate+0x1c>
 800ad0c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ad10:	f383 8811 	msr	BASEPRI, r3
 800ad14:	f3bf 8f6f 	isb	sy
 800ad18:	f3bf 8f4f 	dsb	sy
 800ad1c:	e7fe      	b.n	800ad1c <xQueueGenericCreate+0x1a>
			xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800ad1e:	4348      	muls	r0, r1
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800ad20:	3050      	adds	r0, #80	; 0x50
 800ad22:	f7ff fc1d 	bl	800a560 <pvPortMalloc>
		if( pxNewQueue != NULL )
 800ad26:	4604      	mov	r4, r0
 800ad28:	b170      	cbz	r0, 800ad48 <xQueueGenericCreate+0x46>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800ad2a:	2300      	movs	r3, #0
 800ad2c:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 800ad30:	b165      	cbz	r5, 800ad4c <xQueueGenericCreate+0x4a>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800ad32:	f100 0350 	add.w	r3, r0, #80	; 0x50
	pxNewQueue->uxItemSize = uxItemSize;
 800ad36:	e9c4 650f 	strd	r6, r5, [r4, #60]	; 0x3c
 800ad3a:	6023      	str	r3, [r4, #0]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800ad3c:	2101      	movs	r1, #1
 800ad3e:	4620      	mov	r0, r4
 800ad40:	f7ff ff52 	bl	800abe8 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 800ad44:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 800ad48:	4620      	mov	r0, r4
 800ad4a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800ad4c:	4603      	mov	r3, r0
 800ad4e:	e7f2      	b.n	800ad36 <xQueueGenericCreate+0x34>

0800ad50 <xQueueCreateCountingSemaphoreStatic>:
	{
 800ad50:	b513      	push	{r0, r1, r4, lr}
 800ad52:	4613      	mov	r3, r2
 800ad54:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 800ad56:	b940      	cbnz	r0, 800ad6a <xQueueCreateCountingSemaphoreStatic+0x1a>
 800ad58:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ad5c:	f383 8811 	msr	BASEPRI, r3
 800ad60:	f3bf 8f6f 	isb	sy
 800ad64:	f3bf 8f4f 	dsb	sy
 800ad68:	e7fe      	b.n	800ad68 <xQueueCreateCountingSemaphoreStatic+0x18>
		configASSERT( uxInitialCount <= uxMaxCount );
 800ad6a:	4288      	cmp	r0, r1
 800ad6c:	d208      	bcs.n	800ad80 <xQueueCreateCountingSemaphoreStatic+0x30>
 800ad6e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ad72:	f383 8811 	msr	BASEPRI, r3
 800ad76:	f3bf 8f6f 	isb	sy
 800ad7a:	f3bf 8f4f 	dsb	sy
 800ad7e:	e7fe      	b.n	800ad7e <xQueueCreateCountingSemaphoreStatic+0x2e>
		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 800ad80:	2202      	movs	r2, #2
 800ad82:	9200      	str	r2, [sp, #0]
 800ad84:	2200      	movs	r2, #0
 800ad86:	4611      	mov	r1, r2
 800ad88:	f7ff ff6d 	bl	800ac66 <xQueueGenericCreateStatic>
		if( xHandle != NULL )
 800ad8c:	b100      	cbz	r0, 800ad90 <xQueueCreateCountingSemaphoreStatic+0x40>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800ad8e:	6384      	str	r4, [r0, #56]	; 0x38
	}
 800ad90:	b002      	add	sp, #8
 800ad92:	bd10      	pop	{r4, pc}

0800ad94 <xQueueCreateCountingSemaphore>:
	{
 800ad94:	b510      	push	{r4, lr}
 800ad96:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 800ad98:	b940      	cbnz	r0, 800adac <xQueueCreateCountingSemaphore+0x18>
 800ad9a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ad9e:	f383 8811 	msr	BASEPRI, r3
 800ada2:	f3bf 8f6f 	isb	sy
 800ada6:	f3bf 8f4f 	dsb	sy
 800adaa:	e7fe      	b.n	800adaa <xQueueCreateCountingSemaphore+0x16>
		configASSERT( uxInitialCount <= uxMaxCount );
 800adac:	4288      	cmp	r0, r1
 800adae:	d208      	bcs.n	800adc2 <xQueueCreateCountingSemaphore+0x2e>
 800adb0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800adb4:	f383 8811 	msr	BASEPRI, r3
 800adb8:	f3bf 8f6f 	isb	sy
 800adbc:	f3bf 8f4f 	dsb	sy
 800adc0:	e7fe      	b.n	800adc0 <xQueueCreateCountingSemaphore+0x2c>
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 800adc2:	2202      	movs	r2, #2
 800adc4:	2100      	movs	r1, #0
 800adc6:	f7ff ff9c 	bl	800ad02 <xQueueGenericCreate>
		if( xHandle != NULL )
 800adca:	b100      	cbz	r0, 800adce <xQueueCreateCountingSemaphore+0x3a>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800adcc:	6384      	str	r4, [r0, #56]	; 0x38
	}
 800adce:	bd10      	pop	{r4, pc}

0800add0 <xQueueGenericSend>:
{
 800add0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800add4:	b085      	sub	sp, #20
 800add6:	4688      	mov	r8, r1
 800add8:	9201      	str	r2, [sp, #4]
 800adda:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 800addc:	4604      	mov	r4, r0
 800adde:	b940      	cbnz	r0, 800adf2 <xQueueGenericSend+0x22>
 800ade0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ade4:	f383 8811 	msr	BASEPRI, r3
 800ade8:	f3bf 8f6f 	isb	sy
 800adec:	f3bf 8f4f 	dsb	sy
 800adf0:	e7fe      	b.n	800adf0 <xQueueGenericSend+0x20>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800adf2:	b951      	cbnz	r1, 800ae0a <xQueueGenericSend+0x3a>
 800adf4:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800adf6:	b143      	cbz	r3, 800ae0a <xQueueGenericSend+0x3a>
 800adf8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800adfc:	f383 8811 	msr	BASEPRI, r3
 800ae00:	f3bf 8f6f 	isb	sy
 800ae04:	f3bf 8f4f 	dsb	sy
 800ae08:	e7fe      	b.n	800ae08 <xQueueGenericSend+0x38>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800ae0a:	2f02      	cmp	r7, #2
 800ae0c:	d10b      	bne.n	800ae26 <xQueueGenericSend+0x56>
 800ae0e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800ae10:	2b01      	cmp	r3, #1
 800ae12:	d008      	beq.n	800ae26 <xQueueGenericSend+0x56>
 800ae14:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ae18:	f383 8811 	msr	BASEPRI, r3
 800ae1c:	f3bf 8f6f 	isb	sy
 800ae20:	f3bf 8f4f 	dsb	sy
 800ae24:	e7fe      	b.n	800ae24 <xQueueGenericSend+0x54>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800ae26:	f000 ffc3 	bl	800bdb0 <xTaskGetSchedulerState>
 800ae2a:	4606      	mov	r6, r0
 800ae2c:	b950      	cbnz	r0, 800ae44 <xQueueGenericSend+0x74>
 800ae2e:	9b01      	ldr	r3, [sp, #4]
 800ae30:	b14b      	cbz	r3, 800ae46 <xQueueGenericSend+0x76>
 800ae32:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ae36:	f383 8811 	msr	BASEPRI, r3
 800ae3a:	f3bf 8f6f 	isb	sy
 800ae3e:	f3bf 8f4f 	dsb	sy
 800ae42:	e7fe      	b.n	800ae42 <xQueueGenericSend+0x72>
 800ae44:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 800ae46:	f04f 0900 	mov.w	r9, #0
 800ae4a:	e037      	b.n	800aebc <xQueueGenericSend+0xec>
				if( xTicksToWait == ( TickType_t ) 0 )
 800ae4c:	9d01      	ldr	r5, [sp, #4]
 800ae4e:	b91d      	cbnz	r5, 800ae58 <xQueueGenericSend+0x88>
					taskEXIT_CRITICAL();
 800ae50:	f7ff fd18 	bl	800a884 <vPortExitCritical>
			return errQUEUE_FULL;
 800ae54:	2000      	movs	r0, #0
 800ae56:	e052      	b.n	800aefe <xQueueGenericSend+0x12e>
				else if( xEntryTimeSet == pdFALSE )
 800ae58:	b916      	cbnz	r6, 800ae60 <xQueueGenericSend+0x90>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800ae5a:	a802      	add	r0, sp, #8
 800ae5c:	f000 ff5a 	bl	800bd14 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 800ae60:	f7ff fd10 	bl	800a884 <vPortExitCritical>
		vTaskSuspendAll();
 800ae64:	f000 fd5e 	bl	800b924 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800ae68:	f7ff fcec 	bl	800a844 <vPortEnterCritical>
 800ae6c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800ae70:	2bff      	cmp	r3, #255	; 0xff
 800ae72:	bf08      	it	eq
 800ae74:	f884 9044 	strbeq.w	r9, [r4, #68]	; 0x44
 800ae78:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800ae7c:	2bff      	cmp	r3, #255	; 0xff
 800ae7e:	bf08      	it	eq
 800ae80:	f884 9045 	strbeq.w	r9, [r4, #69]	; 0x45
 800ae84:	f7ff fcfe 	bl	800a884 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800ae88:	a901      	add	r1, sp, #4
 800ae8a:	a802      	add	r0, sp, #8
 800ae8c:	f000 ff4e 	bl	800bd2c <xTaskCheckForTimeOut>
 800ae90:	2800      	cmp	r0, #0
 800ae92:	d14a      	bne.n	800af2a <xQueueGenericSend+0x15a>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 800ae94:	f7ff fcd6 	bl	800a844 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 800ae98:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800ae9a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800ae9c:	429a      	cmp	r2, r3
 800ae9e:	d131      	bne.n	800af04 <xQueueGenericSend+0x134>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 800aea0:	f7ff fcf0 	bl	800a884 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 800aea4:	9901      	ldr	r1, [sp, #4]
 800aea6:	f104 0010 	add.w	r0, r4, #16
 800aeaa:	f000 feb7 	bl	800bc1c <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800aeae:	4620      	mov	r0, r4
 800aeb0:	f7ff fe62 	bl	800ab78 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 800aeb4:	f000 fdda 	bl	800ba6c <xTaskResumeAll>
 800aeb8:	b360      	cbz	r0, 800af14 <xQueueGenericSend+0x144>
 800aeba:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 800aebc:	f7ff fcc2 	bl	800a844 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800aec0:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800aec2:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800aec4:	429a      	cmp	r2, r3
 800aec6:	d301      	bcc.n	800aecc <xQueueGenericSend+0xfc>
 800aec8:	2f02      	cmp	r7, #2
 800aeca:	d1bf      	bne.n	800ae4c <xQueueGenericSend+0x7c>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800aecc:	463a      	mov	r2, r7
 800aece:	4641      	mov	r1, r8
 800aed0:	4620      	mov	r0, r4
 800aed2:	f7ff fe06 	bl	800aae2 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800aed6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800aed8:	b11b      	cbz	r3, 800aee2 <xQueueGenericSend+0x112>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800aeda:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800aede:	f000 fed5 	bl	800bc8c <xTaskRemoveFromEventList>
					else if( xYieldRequired != pdFALSE )
 800aee2:	b148      	cbz	r0, 800aef8 <xQueueGenericSend+0x128>
						queueYIELD_IF_USING_PREEMPTION();
 800aee4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800aee8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800aeec:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800aef0:	f3bf 8f4f 	dsb	sy
 800aef4:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800aef8:	f7ff fcc4 	bl	800a884 <vPortExitCritical>
				return pdPASS;
 800aefc:	2001      	movs	r0, #1
}
 800aefe:	b005      	add	sp, #20
 800af00:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
 800af04:	f7ff fcbe 	bl	800a884 <vPortExitCritical>
				prvUnlockQueue( pxQueue );
 800af08:	4620      	mov	r0, r4
 800af0a:	f7ff fe35 	bl	800ab78 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800af0e:	f000 fdad 	bl	800ba6c <xTaskResumeAll>
 800af12:	e7d2      	b.n	800aeba <xQueueGenericSend+0xea>
					portYIELD_WITHIN_API();
 800af14:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800af18:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800af1c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800af20:	f3bf 8f4f 	dsb	sy
 800af24:	f3bf 8f6f 	isb	sy
 800af28:	e7c7      	b.n	800aeba <xQueueGenericSend+0xea>
			prvUnlockQueue( pxQueue );
 800af2a:	4620      	mov	r0, r4
 800af2c:	f7ff fe24 	bl	800ab78 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 800af30:	f000 fd9c 	bl	800ba6c <xTaskResumeAll>
 800af34:	e78e      	b.n	800ae54 <xQueueGenericSend+0x84>

0800af36 <xQueueGenericSendFromISR>:
{
 800af36:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800af3a:	4689      	mov	r9, r1
 800af3c:	4690      	mov	r8, r2
 800af3e:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 800af40:	4604      	mov	r4, r0
 800af42:	b940      	cbnz	r0, 800af56 <xQueueGenericSendFromISR+0x20>
 800af44:	f04f 0350 	mov.w	r3, #80	; 0x50
 800af48:	f383 8811 	msr	BASEPRI, r3
 800af4c:	f3bf 8f6f 	isb	sy
 800af50:	f3bf 8f4f 	dsb	sy
 800af54:	e7fe      	b.n	800af54 <xQueueGenericSendFromISR+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800af56:	b951      	cbnz	r1, 800af6e <xQueueGenericSendFromISR+0x38>
 800af58:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800af5a:	b143      	cbz	r3, 800af6e <xQueueGenericSendFromISR+0x38>
 800af5c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800af60:	f383 8811 	msr	BASEPRI, r3
 800af64:	f3bf 8f6f 	isb	sy
 800af68:	f3bf 8f4f 	dsb	sy
 800af6c:	e7fe      	b.n	800af6c <xQueueGenericSendFromISR+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800af6e:	2f02      	cmp	r7, #2
 800af70:	d10b      	bne.n	800af8a <xQueueGenericSendFromISR+0x54>
 800af72:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800af74:	2b01      	cmp	r3, #1
 800af76:	d008      	beq.n	800af8a <xQueueGenericSendFromISR+0x54>
 800af78:	f04f 0350 	mov.w	r3, #80	; 0x50
 800af7c:	f383 8811 	msr	BASEPRI, r3
 800af80:	f3bf 8f6f 	isb	sy
 800af84:	f3bf 8f4f 	dsb	sy
 800af88:	e7fe      	b.n	800af88 <xQueueGenericSendFromISR+0x52>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800af8a:	f7ff fd71 	bl	800aa70 <vPortValidateInterruptPriority>
	__asm volatile
 800af8e:	f3ef 8611 	mrs	r6, BASEPRI
 800af92:	f04f 0350 	mov.w	r3, #80	; 0x50
 800af96:	f383 8811 	msr	BASEPRI, r3
 800af9a:	f3bf 8f6f 	isb	sy
 800af9e:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800afa2:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800afa4:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800afa6:	429a      	cmp	r2, r3
 800afa8:	d301      	bcc.n	800afae <xQueueGenericSendFromISR+0x78>
 800afaa:	2f02      	cmp	r7, #2
 800afac:	d122      	bne.n	800aff4 <xQueueGenericSendFromISR+0xbe>
			const int8_t cTxLock = pxQueue->cTxLock;
 800afae:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800afb2:	463a      	mov	r2, r7
			const int8_t cTxLock = pxQueue->cTxLock;
 800afb4:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800afb6:	4649      	mov	r1, r9
 800afb8:	4620      	mov	r0, r4
 800afba:	f7ff fd92 	bl	800aae2 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 800afbe:	1c6b      	adds	r3, r5, #1
 800afc0:	d113      	bne.n	800afea <xQueueGenericSendFromISR+0xb4>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800afc2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800afc4:	b90b      	cbnz	r3, 800afca <xQueueGenericSendFromISR+0x94>
			xReturn = pdPASS;
 800afc6:	2001      	movs	r0, #1
 800afc8:	e00b      	b.n	800afe2 <xQueueGenericSendFromISR+0xac>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800afca:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800afce:	f000 fe5d 	bl	800bc8c <xTaskRemoveFromEventList>
 800afd2:	2800      	cmp	r0, #0
 800afd4:	d0f7      	beq.n	800afc6 <xQueueGenericSendFromISR+0x90>
							if( pxHigherPriorityTaskWoken != NULL )
 800afd6:	f1b8 0f00 	cmp.w	r8, #0
 800afda:	d0f4      	beq.n	800afc6 <xQueueGenericSendFromISR+0x90>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800afdc:	2001      	movs	r0, #1
 800afde:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 800afe2:	f386 8811 	msr	BASEPRI, r6
}
 800afe6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800afea:	3501      	adds	r5, #1
 800afec:	b26d      	sxtb	r5, r5
 800afee:	f884 5045 	strb.w	r5, [r4, #69]	; 0x45
 800aff2:	e7e8      	b.n	800afc6 <xQueueGenericSendFromISR+0x90>
			xReturn = errQUEUE_FULL;
 800aff4:	2000      	movs	r0, #0
 800aff6:	e7f4      	b.n	800afe2 <xQueueGenericSendFromISR+0xac>

0800aff8 <xQueueGiveFromISR>:
{
 800aff8:	b570      	push	{r4, r5, r6, lr}
 800affa:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 800affc:	4604      	mov	r4, r0
 800affe:	b940      	cbnz	r0, 800b012 <xQueueGiveFromISR+0x1a>
	__asm volatile
 800b000:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b004:	f383 8811 	msr	BASEPRI, r3
 800b008:	f3bf 8f6f 	isb	sy
 800b00c:	f3bf 8f4f 	dsb	sy
 800b010:	e7fe      	b.n	800b010 <xQueueGiveFromISR+0x18>
	configASSERT( pxQueue->uxItemSize == 0 );
 800b012:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800b014:	b143      	cbz	r3, 800b028 <xQueueGiveFromISR+0x30>
 800b016:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b01a:	f383 8811 	msr	BASEPRI, r3
 800b01e:	f3bf 8f6f 	isb	sy
 800b022:	f3bf 8f4f 	dsb	sy
 800b026:	e7fe      	b.n	800b026 <xQueueGiveFromISR+0x2e>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800b028:	6803      	ldr	r3, [r0, #0]
 800b02a:	b953      	cbnz	r3, 800b042 <xQueueGiveFromISR+0x4a>
 800b02c:	6883      	ldr	r3, [r0, #8]
 800b02e:	b143      	cbz	r3, 800b042 <xQueueGiveFromISR+0x4a>
 800b030:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b034:	f383 8811 	msr	BASEPRI, r3
 800b038:	f3bf 8f6f 	isb	sy
 800b03c:	f3bf 8f4f 	dsb	sy
 800b040:	e7fe      	b.n	800b040 <xQueueGiveFromISR+0x48>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800b042:	f7ff fd15 	bl	800aa70 <vPortValidateInterruptPriority>
	__asm volatile
 800b046:	f3ef 8611 	mrs	r6, BASEPRI
 800b04a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b04e:	f383 8811 	msr	BASEPRI, r3
 800b052:	f3bf 8f6f 	isb	sy
 800b056:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800b05a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 800b05c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800b05e:	4293      	cmp	r3, r2
 800b060:	d91c      	bls.n	800b09c <xQueueGiveFromISR+0xa4>
			const int8_t cTxLock = pxQueue->cTxLock;
 800b062:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800b066:	3201      	adds	r2, #1
			if( cTxLock == queueUNLOCKED )
 800b068:	29ff      	cmp	r1, #255	; 0xff
			const int8_t cTxLock = pxQueue->cTxLock;
 800b06a:	b24b      	sxtb	r3, r1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800b06c:	63a2      	str	r2, [r4, #56]	; 0x38
			if( cTxLock == queueUNLOCKED )
 800b06e:	d110      	bne.n	800b092 <xQueueGiveFromISR+0x9a>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800b070:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800b072:	b90b      	cbnz	r3, 800b078 <xQueueGiveFromISR+0x80>
			xReturn = pdPASS;
 800b074:	2001      	movs	r0, #1
 800b076:	e009      	b.n	800b08c <xQueueGiveFromISR+0x94>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800b078:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800b07c:	f000 fe06 	bl	800bc8c <xTaskRemoveFromEventList>
 800b080:	2800      	cmp	r0, #0
 800b082:	d0f7      	beq.n	800b074 <xQueueGiveFromISR+0x7c>
							if( pxHigherPriorityTaskWoken != NULL )
 800b084:	2d00      	cmp	r5, #0
 800b086:	d0f5      	beq.n	800b074 <xQueueGiveFromISR+0x7c>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800b088:	2001      	movs	r0, #1
 800b08a:	6028      	str	r0, [r5, #0]
	__asm volatile
 800b08c:	f386 8811 	msr	BASEPRI, r6
}
 800b090:	bd70      	pop	{r4, r5, r6, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800b092:	3301      	adds	r3, #1
 800b094:	b25b      	sxtb	r3, r3
 800b096:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 800b09a:	e7eb      	b.n	800b074 <xQueueGiveFromISR+0x7c>
			xReturn = errQUEUE_FULL;
 800b09c:	2000      	movs	r0, #0
 800b09e:	e7f5      	b.n	800b08c <xQueueGiveFromISR+0x94>

0800b0a0 <xQueueReceive>:
{
 800b0a0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800b0a4:	460f      	mov	r7, r1
 800b0a6:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 800b0a8:	4604      	mov	r4, r0
 800b0aa:	b940      	cbnz	r0, 800b0be <xQueueReceive+0x1e>
	__asm volatile
 800b0ac:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b0b0:	f383 8811 	msr	BASEPRI, r3
 800b0b4:	f3bf 8f6f 	isb	sy
 800b0b8:	f3bf 8f4f 	dsb	sy
 800b0bc:	e7fe      	b.n	800b0bc <xQueueReceive+0x1c>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800b0be:	b951      	cbnz	r1, 800b0d6 <xQueueReceive+0x36>
 800b0c0:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800b0c2:	b143      	cbz	r3, 800b0d6 <xQueueReceive+0x36>
 800b0c4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b0c8:	f383 8811 	msr	BASEPRI, r3
 800b0cc:	f3bf 8f6f 	isb	sy
 800b0d0:	f3bf 8f4f 	dsb	sy
 800b0d4:	e7fe      	b.n	800b0d4 <xQueueReceive+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800b0d6:	f000 fe6b 	bl	800bdb0 <xTaskGetSchedulerState>
 800b0da:	4606      	mov	r6, r0
 800b0dc:	b950      	cbnz	r0, 800b0f4 <xQueueReceive+0x54>
 800b0de:	9b01      	ldr	r3, [sp, #4]
 800b0e0:	b14b      	cbz	r3, 800b0f6 <xQueueReceive+0x56>
 800b0e2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b0e6:	f383 8811 	msr	BASEPRI, r3
 800b0ea:	f3bf 8f6f 	isb	sy
 800b0ee:	f3bf 8f4f 	dsb	sy
 800b0f2:	e7fe      	b.n	800b0f2 <xQueueReceive+0x52>
 800b0f4:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 800b0f6:	f04f 0800 	mov.w	r8, #0
 800b0fa:	e03d      	b.n	800b178 <xQueueReceive+0xd8>
				if( xTicksToWait == ( TickType_t ) 0 )
 800b0fc:	9d01      	ldr	r5, [sp, #4]
 800b0fe:	b91d      	cbnz	r5, 800b108 <xQueueReceive+0x68>
					taskEXIT_CRITICAL();
 800b100:	f7ff fbc0 	bl	800a884 <vPortExitCritical>
				return errQUEUE_EMPTY;
 800b104:	2000      	movs	r0, #0
 800b106:	e056      	b.n	800b1b6 <xQueueReceive+0x116>
				else if( xEntryTimeSet == pdFALSE )
 800b108:	b916      	cbnz	r6, 800b110 <xQueueReceive+0x70>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800b10a:	a802      	add	r0, sp, #8
 800b10c:	f000 fe02 	bl	800bd14 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 800b110:	f7ff fbb8 	bl	800a884 <vPortExitCritical>
		vTaskSuspendAll();
 800b114:	f000 fc06 	bl	800b924 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800b118:	f7ff fb94 	bl	800a844 <vPortEnterCritical>
 800b11c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800b120:	2bff      	cmp	r3, #255	; 0xff
 800b122:	bf08      	it	eq
 800b124:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 800b128:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800b12c:	2bff      	cmp	r3, #255	; 0xff
 800b12e:	bf08      	it	eq
 800b130:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 800b134:	f7ff fba6 	bl	800a884 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800b138:	a901      	add	r1, sp, #4
 800b13a:	a802      	add	r0, sp, #8
 800b13c:	f000 fdf6 	bl	800bd2c <xTaskCheckForTimeOut>
 800b140:	2800      	cmp	r0, #0
 800b142:	d141      	bne.n	800b1c8 <xQueueReceive+0x128>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800b144:	4620      	mov	r0, r4
 800b146:	f7ff fcc1 	bl	800aacc <prvIsQueueEmpty>
 800b14a:	b3b8      	cbz	r0, 800b1bc <xQueueReceive+0x11c>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800b14c:	9901      	ldr	r1, [sp, #4]
 800b14e:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800b152:	f000 fd63 	bl	800bc1c <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800b156:	4620      	mov	r0, r4
 800b158:	f7ff fd0e 	bl	800ab78 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 800b15c:	f000 fc86 	bl	800ba6c <xTaskResumeAll>
 800b160:	b948      	cbnz	r0, 800b176 <xQueueReceive+0xd6>
					portYIELD_WITHIN_API();
 800b162:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800b166:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800b16a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800b16e:	f3bf 8f4f 	dsb	sy
 800b172:	f3bf 8f6f 	isb	sy
 800b176:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 800b178:	f7ff fb64 	bl	800a844 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800b17c:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800b17e:	2d00      	cmp	r5, #0
 800b180:	d0bc      	beq.n	800b0fc <xQueueReceive+0x5c>
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 800b182:	4639      	mov	r1, r7
 800b184:	4620      	mov	r0, r4
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800b186:	3d01      	subs	r5, #1
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 800b188:	f7ff fce0 	bl	800ab4c <prvCopyDataFromQueue>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800b18c:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800b18e:	6923      	ldr	r3, [r4, #16]
 800b190:	b173      	cbz	r3, 800b1b0 <xQueueReceive+0x110>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800b192:	f104 0010 	add.w	r0, r4, #16
 800b196:	f000 fd79 	bl	800bc8c <xTaskRemoveFromEventList>
 800b19a:	b148      	cbz	r0, 800b1b0 <xQueueReceive+0x110>
						queueYIELD_IF_USING_PREEMPTION();
 800b19c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800b1a0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800b1a4:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800b1a8:	f3bf 8f4f 	dsb	sy
 800b1ac:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800b1b0:	f7ff fb68 	bl	800a884 <vPortExitCritical>
				return pdPASS;
 800b1b4:	2001      	movs	r0, #1
}
 800b1b6:	b004      	add	sp, #16
 800b1b8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
				prvUnlockQueue( pxQueue );
 800b1bc:	4620      	mov	r0, r4
 800b1be:	f7ff fcdb 	bl	800ab78 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800b1c2:	f000 fc53 	bl	800ba6c <xTaskResumeAll>
 800b1c6:	e7d6      	b.n	800b176 <xQueueReceive+0xd6>
			prvUnlockQueue( pxQueue );
 800b1c8:	4620      	mov	r0, r4
 800b1ca:	f7ff fcd5 	bl	800ab78 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 800b1ce:	f000 fc4d 	bl	800ba6c <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800b1d2:	4620      	mov	r0, r4
 800b1d4:	f7ff fc7a 	bl	800aacc <prvIsQueueEmpty>
 800b1d8:	2800      	cmp	r0, #0
 800b1da:	d0cc      	beq.n	800b176 <xQueueReceive+0xd6>
 800b1dc:	e792      	b.n	800b104 <xQueueReceive+0x64>

0800b1de <xQueueSemaphoreTake>:
{
 800b1de:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b1e0:	b085      	sub	sp, #20
	configASSERT( ( pxQueue ) );
 800b1e2:	4604      	mov	r4, r0
{
 800b1e4:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 800b1e6:	b940      	cbnz	r0, 800b1fa <xQueueSemaphoreTake+0x1c>
 800b1e8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b1ec:	f383 8811 	msr	BASEPRI, r3
 800b1f0:	f3bf 8f6f 	isb	sy
 800b1f4:	f3bf 8f4f 	dsb	sy
 800b1f8:	e7fe      	b.n	800b1f8 <xQueueSemaphoreTake+0x1a>
	configASSERT( pxQueue->uxItemSize == 0 );
 800b1fa:	6c05      	ldr	r5, [r0, #64]	; 0x40
 800b1fc:	b145      	cbz	r5, 800b210 <xQueueSemaphoreTake+0x32>
 800b1fe:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b202:	f383 8811 	msr	BASEPRI, r3
 800b206:	f3bf 8f6f 	isb	sy
 800b20a:	f3bf 8f4f 	dsb	sy
 800b20e:	e7fe      	b.n	800b20e <xQueueSemaphoreTake+0x30>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800b210:	f000 fdce 	bl	800bdb0 <xTaskGetSchedulerState>
 800b214:	4606      	mov	r6, r0
 800b216:	b950      	cbnz	r0, 800b22e <xQueueSemaphoreTake+0x50>
 800b218:	9b01      	ldr	r3, [sp, #4]
 800b21a:	b15b      	cbz	r3, 800b234 <xQueueSemaphoreTake+0x56>
 800b21c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b220:	f383 8811 	msr	BASEPRI, r3
 800b224:	f3bf 8f6f 	isb	sy
 800b228:	f3bf 8f4f 	dsb	sy
 800b22c:	e7fe      	b.n	800b22c <xQueueSemaphoreTake+0x4e>
 800b22e:	462e      	mov	r6, r5
		prvLockQueue( pxQueue );
 800b230:	2700      	movs	r7, #0
 800b232:	e053      	b.n	800b2dc <xQueueSemaphoreTake+0xfe>
 800b234:	4605      	mov	r5, r0
 800b236:	e7fb      	b.n	800b230 <xQueueSemaphoreTake+0x52>
				if( xTicksToWait == ( TickType_t ) 0 )
 800b238:	9b01      	ldr	r3, [sp, #4]
 800b23a:	b963      	cbnz	r3, 800b256 <xQueueSemaphoreTake+0x78>
						configASSERT( xInheritanceOccurred == pdFALSE );
 800b23c:	b145      	cbz	r5, 800b250 <xQueueSemaphoreTake+0x72>
 800b23e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b242:	f383 8811 	msr	BASEPRI, r3
 800b246:	f3bf 8f6f 	isb	sy
 800b24a:	f3bf 8f4f 	dsb	sy
 800b24e:	e7fe      	b.n	800b24e <xQueueSemaphoreTake+0x70>
					taskEXIT_CRITICAL();
 800b250:	f7ff fb18 	bl	800a884 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800b254:	e062      	b.n	800b31c <xQueueSemaphoreTake+0x13e>
				else if( xEntryTimeSet == pdFALSE )
 800b256:	b916      	cbnz	r6, 800b25e <xQueueSemaphoreTake+0x80>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800b258:	a802      	add	r0, sp, #8
 800b25a:	f000 fd5b 	bl	800bd14 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 800b25e:	f7ff fb11 	bl	800a884 <vPortExitCritical>
		vTaskSuspendAll();
 800b262:	f000 fb5f 	bl	800b924 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800b266:	f7ff faed 	bl	800a844 <vPortEnterCritical>
 800b26a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800b26e:	2bff      	cmp	r3, #255	; 0xff
 800b270:	bf08      	it	eq
 800b272:	f884 7044 	strbeq.w	r7, [r4, #68]	; 0x44
 800b276:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800b27a:	2bff      	cmp	r3, #255	; 0xff
 800b27c:	bf08      	it	eq
 800b27e:	f884 7045 	strbeq.w	r7, [r4, #69]	; 0x45
 800b282:	f7ff faff 	bl	800a884 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800b286:	a901      	add	r1, sp, #4
 800b288:	a802      	add	r0, sp, #8
 800b28a:	f000 fd4f 	bl	800bd2c <xTaskCheckForTimeOut>
 800b28e:	2800      	cmp	r0, #0
 800b290:	d14d      	bne.n	800b32e <xQueueSemaphoreTake+0x150>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800b292:	4620      	mov	r0, r4
 800b294:	f7ff fc1a 	bl	800aacc <prvIsQueueEmpty>
 800b298:	2800      	cmp	r0, #0
 800b29a:	d042      	beq.n	800b322 <xQueueSemaphoreTake+0x144>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800b29c:	6823      	ldr	r3, [r4, #0]
 800b29e:	b93b      	cbnz	r3, 800b2b0 <xQueueSemaphoreTake+0xd2>
						taskENTER_CRITICAL();
 800b2a0:	f7ff fad0 	bl	800a844 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 800b2a4:	68a0      	ldr	r0, [r4, #8]
 800b2a6:	f000 fd93 	bl	800bdd0 <xTaskPriorityInherit>
 800b2aa:	4605      	mov	r5, r0
						taskEXIT_CRITICAL();
 800b2ac:	f7ff faea 	bl	800a884 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800b2b0:	9901      	ldr	r1, [sp, #4]
 800b2b2:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800b2b6:	f000 fcb1 	bl	800bc1c <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800b2ba:	4620      	mov	r0, r4
 800b2bc:	f7ff fc5c 	bl	800ab78 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 800b2c0:	f000 fbd4 	bl	800ba6c <xTaskResumeAll>
 800b2c4:	b948      	cbnz	r0, 800b2da <xQueueSemaphoreTake+0xfc>
					portYIELD_WITHIN_API();
 800b2c6:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800b2ca:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800b2ce:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800b2d2:	f3bf 8f4f 	dsb	sy
 800b2d6:	f3bf 8f6f 	isb	sy
 800b2da:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 800b2dc:	f7ff fab2 	bl	800a844 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 800b2e0:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 800b2e2:	2b00      	cmp	r3, #0
 800b2e4:	d0a8      	beq.n	800b238 <xQueueSemaphoreTake+0x5a>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 800b2e6:	3b01      	subs	r3, #1
 800b2e8:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800b2ea:	6823      	ldr	r3, [r4, #0]
 800b2ec:	b913      	cbnz	r3, 800b2f4 <xQueueSemaphoreTake+0x116>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 800b2ee:	f000 fe47 	bl	800bf80 <pvTaskIncrementMutexHeldCount>
 800b2f2:	60a0      	str	r0, [r4, #8]
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800b2f4:	6923      	ldr	r3, [r4, #16]
 800b2f6:	b173      	cbz	r3, 800b316 <xQueueSemaphoreTake+0x138>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800b2f8:	f104 0010 	add.w	r0, r4, #16
 800b2fc:	f000 fcc6 	bl	800bc8c <xTaskRemoveFromEventList>
 800b300:	b148      	cbz	r0, 800b316 <xQueueSemaphoreTake+0x138>
						queueYIELD_IF_USING_PREEMPTION();
 800b302:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800b306:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800b30a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800b30e:	f3bf 8f4f 	dsb	sy
 800b312:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800b316:	f7ff fab5 	bl	800a884 <vPortExitCritical>
				return pdPASS;
 800b31a:	2501      	movs	r5, #1
}
 800b31c:	4628      	mov	r0, r5
 800b31e:	b005      	add	sp, #20
 800b320:	bdf0      	pop	{r4, r5, r6, r7, pc}
				prvUnlockQueue( pxQueue );
 800b322:	4620      	mov	r0, r4
 800b324:	f7ff fc28 	bl	800ab78 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800b328:	f000 fba0 	bl	800ba6c <xTaskResumeAll>
 800b32c:	e7d5      	b.n	800b2da <xQueueSemaphoreTake+0xfc>
			prvUnlockQueue( pxQueue );
 800b32e:	4620      	mov	r0, r4
 800b330:	f7ff fc22 	bl	800ab78 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 800b334:	f000 fb9a 	bl	800ba6c <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800b338:	4620      	mov	r0, r4
 800b33a:	f7ff fbc7 	bl	800aacc <prvIsQueueEmpty>
 800b33e:	2800      	cmp	r0, #0
 800b340:	d0cb      	beq.n	800b2da <xQueueSemaphoreTake+0xfc>
					if( xInheritanceOccurred != pdFALSE )
 800b342:	2d00      	cmp	r5, #0
 800b344:	d0ea      	beq.n	800b31c <xQueueSemaphoreTake+0x13e>
						taskENTER_CRITICAL();
 800b346:	f7ff fa7d 	bl	800a844 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 800b34a:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800b34c:	b119      	cbz	r1, 800b356 <xQueueSemaphoreTake+0x178>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 800b34e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800b350:	6819      	ldr	r1, [r3, #0]
 800b352:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 800b356:	68a0      	ldr	r0, [r4, #8]
 800b358:	f000 fdc0 	bl	800bedc <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 800b35c:	2500      	movs	r5, #0
						taskEXIT_CRITICAL();
 800b35e:	f7ff fa91 	bl	800a884 <vPortExitCritical>
 800b362:	e7db      	b.n	800b31c <xQueueSemaphoreTake+0x13e>

0800b364 <xQueueReceiveFromISR>:
{
 800b364:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800b368:	4689      	mov	r9, r1
 800b36a:	4690      	mov	r8, r2
	configASSERT( pxQueue );
 800b36c:	4605      	mov	r5, r0
 800b36e:	b940      	cbnz	r0, 800b382 <xQueueReceiveFromISR+0x1e>
 800b370:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b374:	f383 8811 	msr	BASEPRI, r3
 800b378:	f3bf 8f6f 	isb	sy
 800b37c:	f3bf 8f4f 	dsb	sy
 800b380:	e7fe      	b.n	800b380 <xQueueReceiveFromISR+0x1c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800b382:	b951      	cbnz	r1, 800b39a <xQueueReceiveFromISR+0x36>
 800b384:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800b386:	b143      	cbz	r3, 800b39a <xQueueReceiveFromISR+0x36>
 800b388:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b38c:	f383 8811 	msr	BASEPRI, r3
 800b390:	f3bf 8f6f 	isb	sy
 800b394:	f3bf 8f4f 	dsb	sy
 800b398:	e7fe      	b.n	800b398 <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800b39a:	f7ff fb69 	bl	800aa70 <vPortValidateInterruptPriority>
	__asm volatile
 800b39e:	f3ef 8711 	mrs	r7, BASEPRI
 800b3a2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b3a6:	f383 8811 	msr	BASEPRI, r3
 800b3aa:	f3bf 8f6f 	isb	sy
 800b3ae:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800b3b2:	6bac      	ldr	r4, [r5, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800b3b4:	b31c      	cbz	r4, 800b3fe <xQueueReceiveFromISR+0x9a>
			const int8_t cRxLock = pxQueue->cRxLock;
 800b3b6:	f895 6044 	ldrb.w	r6, [r5, #68]	; 0x44
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 800b3ba:	4649      	mov	r1, r9
			const int8_t cRxLock = pxQueue->cRxLock;
 800b3bc:	b276      	sxtb	r6, r6
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 800b3be:	4628      	mov	r0, r5
 800b3c0:	f7ff fbc4 	bl	800ab4c <prvCopyDataFromQueue>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800b3c4:	3c01      	subs	r4, #1
			if( cRxLock == queueUNLOCKED )
 800b3c6:	1c73      	adds	r3, r6, #1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800b3c8:	63ac      	str	r4, [r5, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 800b3ca:	d113      	bne.n	800b3f4 <xQueueReceiveFromISR+0x90>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800b3cc:	692b      	ldr	r3, [r5, #16]
 800b3ce:	b90b      	cbnz	r3, 800b3d4 <xQueueReceiveFromISR+0x70>
			xReturn = pdPASS;
 800b3d0:	2001      	movs	r0, #1
 800b3d2:	e00b      	b.n	800b3ec <xQueueReceiveFromISR+0x88>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800b3d4:	f105 0010 	add.w	r0, r5, #16
 800b3d8:	f000 fc58 	bl	800bc8c <xTaskRemoveFromEventList>
 800b3dc:	2800      	cmp	r0, #0
 800b3de:	d0f7      	beq.n	800b3d0 <xQueueReceiveFromISR+0x6c>
						if( pxHigherPriorityTaskWoken != NULL )
 800b3e0:	f1b8 0f00 	cmp.w	r8, #0
 800b3e4:	d0f4      	beq.n	800b3d0 <xQueueReceiveFromISR+0x6c>
							*pxHigherPriorityTaskWoken = pdTRUE;
 800b3e6:	2001      	movs	r0, #1
 800b3e8:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 800b3ec:	f387 8811 	msr	BASEPRI, r7
}
 800b3f0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 800b3f4:	3601      	adds	r6, #1
 800b3f6:	b276      	sxtb	r6, r6
 800b3f8:	f885 6044 	strb.w	r6, [r5, #68]	; 0x44
 800b3fc:	e7e8      	b.n	800b3d0 <xQueueReceiveFromISR+0x6c>
			xReturn = pdFAIL;
 800b3fe:	4620      	mov	r0, r4
 800b400:	e7f4      	b.n	800b3ec <xQueueReceiveFromISR+0x88>
	...

0800b404 <vQueueAddToRegistry>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified char types are allowed for strings and single characters only. */
	{
 800b404:	b510      	push	{r4, lr}

		/* See if there is an empty space in the registry.  A NULL name denotes
		a free slot. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800b406:	4a07      	ldr	r2, [pc, #28]	; (800b424 <vQueueAddToRegistry+0x20>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800b408:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800b40a:	f852 4033 	ldr.w	r4, [r2, r3, lsl #3]
 800b40e:	b92c      	cbnz	r4, 800b41c <vQueueAddToRegistry+0x18>
			{
				/* Store the information on this queue. */
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 800b410:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 800b414:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 800b418:	6058      	str	r0, [r3, #4]
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	}
 800b41a:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800b41c:	3301      	adds	r3, #1
 800b41e:	2b08      	cmp	r3, #8
 800b420:	d1f3      	bne.n	800b40a <vQueueAddToRegistry+0x6>
 800b422:	e7fa      	b.n	800b41a <vQueueAddToRegistry+0x16>
 800b424:	200172d8 	.word	0x200172d8

0800b428 <vQueueUnregisterQueue>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueUnregisterQueue( QueueHandle_t xQueue )
	{
 800b428:	b510      	push	{r4, lr}

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800b42a:	4a08      	ldr	r2, [pc, #32]	; (800b44c <vQueueUnregisterQueue+0x24>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800b42c:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800b42e:	eb02 01c3 	add.w	r1, r2, r3, lsl #3
 800b432:	684c      	ldr	r4, [r1, #4]
 800b434:	4284      	cmp	r4, r0
 800b436:	d104      	bne.n	800b442 <vQueueUnregisterQueue+0x1a>
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 800b438:	2000      	movs	r0, #0
 800b43a:	f842 0033 	str.w	r0, [r2, r3, lsl #3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 800b43e:	6048      	str	r0, [r1, #4]
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 800b440:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800b442:	3301      	adds	r3, #1
 800b444:	2b08      	cmp	r3, #8
 800b446:	d1f2      	bne.n	800b42e <vQueueUnregisterQueue+0x6>
 800b448:	e7fa      	b.n	800b440 <vQueueUnregisterQueue+0x18>
 800b44a:	bf00      	nop
 800b44c:	200172d8 	.word	0x200172d8

0800b450 <vQueueDelete>:
{
 800b450:	b510      	push	{r4, lr}
	configASSERT( pxQueue );
 800b452:	4604      	mov	r4, r0
 800b454:	b940      	cbnz	r0, 800b468 <vQueueDelete+0x18>
	__asm volatile
 800b456:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b45a:	f383 8811 	msr	BASEPRI, r3
 800b45e:	f3bf 8f6f 	isb	sy
 800b462:	f3bf 8f4f 	dsb	sy
 800b466:	e7fe      	b.n	800b466 <vQueueDelete+0x16>
		vQueueUnregisterQueue( pxQueue );
 800b468:	f7ff ffde 	bl	800b428 <vQueueUnregisterQueue>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 800b46c:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
 800b470:	b923      	cbnz	r3, 800b47c <vQueueDelete+0x2c>
			vPortFree( pxQueue );
 800b472:	4620      	mov	r0, r4
}
 800b474:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
			vPortFree( pxQueue );
 800b478:	f7ff b904 	b.w	800a684 <vPortFree>
}
 800b47c:	bd10      	pop	{r4, pc}

0800b47e <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 800b47e:	b570      	push	{r4, r5, r6, lr}
 800b480:	4604      	mov	r4, r0
 800b482:	460d      	mov	r5, r1
 800b484:	4616      	mov	r6, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 800b486:	f7ff f9dd 	bl	800a844 <vPortEnterCritical>
 800b48a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800b48e:	2bff      	cmp	r3, #255	; 0xff
 800b490:	bf04      	itt	eq
 800b492:	2300      	moveq	r3, #0
 800b494:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 800b498:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800b49c:	2bff      	cmp	r3, #255	; 0xff
 800b49e:	bf04      	itt	eq
 800b4a0:	2300      	moveq	r3, #0
 800b4a2:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 800b4a6:	f7ff f9ed 	bl	800a884 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 800b4aa:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800b4ac:	b92b      	cbnz	r3, 800b4ba <vQueueWaitForMessageRestricted+0x3c>
		{
			/* There is nothing in the queue, block for the specified period. */
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 800b4ae:	4632      	mov	r2, r6
 800b4b0:	4629      	mov	r1, r5
 800b4b2:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800b4b6:	f000 fbcb 	bl	800bc50 <vTaskPlaceOnEventListRestricted>
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
 800b4ba:	4620      	mov	r0, r4
	}
 800b4bc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		prvUnlockQueue( pxQueue );
 800b4c0:	f7ff bb5a 	b.w	800ab78 <prvUnlockQueue>

0800b4c4 <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 800b4c4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b4c8:	4604      	mov	r4, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 800b4ca:	f7ff f9bb 	bl	800a844 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 800b4ce:	4b30      	ldr	r3, [pc, #192]	; (800b590 <prvAddNewTaskToReadyList+0xcc>)
		if( pxCurrentTCB == NULL )
 800b4d0:	4e30      	ldr	r6, [pc, #192]	; (800b594 <prvAddNewTaskToReadyList+0xd0>)
		uxCurrentNumberOfTasks++;
 800b4d2:	681a      	ldr	r2, [r3, #0]
 800b4d4:	4f30      	ldr	r7, [pc, #192]	; (800b598 <prvAddNewTaskToReadyList+0xd4>)
 800b4d6:	3201      	adds	r2, #1
 800b4d8:	601a      	str	r2, [r3, #0]
		if( pxCurrentTCB == NULL )
 800b4da:	6835      	ldr	r5, [r6, #0]
 800b4dc:	2d00      	cmp	r5, #0
 800b4de:	d14b      	bne.n	800b578 <prvAddNewTaskToReadyList+0xb4>
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
 800b4e0:	6034      	str	r4, [r6, #0]

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 800b4e2:	681b      	ldr	r3, [r3, #0]
 800b4e4:	2b01      	cmp	r3, #1
 800b4e6:	d11f      	bne.n	800b528 <prvAddNewTaskToReadyList+0x64>
 800b4e8:	46b8      	mov	r8, r7
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800b4ea:	4640      	mov	r0, r8
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800b4ec:	3501      	adds	r5, #1
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800b4ee:	f7ff f901 	bl	800a6f4 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800b4f2:	2d38      	cmp	r5, #56	; 0x38
 800b4f4:	f108 0814 	add.w	r8, r8, #20
 800b4f8:	d1f7      	bne.n	800b4ea <prvAddNewTaskToReadyList+0x26>
	}

	vListInitialise( &xDelayedTaskList1 );
 800b4fa:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 800b5c0 <prvAddNewTaskToReadyList+0xfc>
	vListInitialise( &xDelayedTaskList2 );
 800b4fe:	4d27      	ldr	r5, [pc, #156]	; (800b59c <prvAddNewTaskToReadyList+0xd8>)
	vListInitialise( &xDelayedTaskList1 );
 800b500:	4640      	mov	r0, r8
 800b502:	f7ff f8f7 	bl	800a6f4 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 800b506:	4628      	mov	r0, r5
 800b508:	f7ff f8f4 	bl	800a6f4 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 800b50c:	4824      	ldr	r0, [pc, #144]	; (800b5a0 <prvAddNewTaskToReadyList+0xdc>)
 800b50e:	f7ff f8f1 	bl	800a6f4 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 800b512:	4824      	ldr	r0, [pc, #144]	; (800b5a4 <prvAddNewTaskToReadyList+0xe0>)
 800b514:	f7ff f8ee 	bl	800a6f4 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 800b518:	4823      	ldr	r0, [pc, #140]	; (800b5a8 <prvAddNewTaskToReadyList+0xe4>)
 800b51a:	f7ff f8eb 	bl	800a6f4 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 800b51e:	4b23      	ldr	r3, [pc, #140]	; (800b5ac <prvAddNewTaskToReadyList+0xe8>)
 800b520:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 800b524:	4b22      	ldr	r3, [pc, #136]	; (800b5b0 <prvAddNewTaskToReadyList+0xec>)
 800b526:	601d      	str	r5, [r3, #0]
		uxTaskNumber++;
 800b528:	4a22      	ldr	r2, [pc, #136]	; (800b5b4 <prvAddNewTaskToReadyList+0xf0>)
 800b52a:	6813      	ldr	r3, [r2, #0]
 800b52c:	3301      	adds	r3, #1
 800b52e:	6013      	str	r3, [r2, #0]
		prvAddTaskToReadyList( pxNewTCB );
 800b530:	4a21      	ldr	r2, [pc, #132]	; (800b5b8 <prvAddNewTaskToReadyList+0xf4>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 800b532:	6463      	str	r3, [r4, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 800b534:	6811      	ldr	r1, [r2, #0]
 800b536:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800b538:	2014      	movs	r0, #20
 800b53a:	428b      	cmp	r3, r1
 800b53c:	fb00 7003 	mla	r0, r0, r3, r7
 800b540:	f104 0104 	add.w	r1, r4, #4
 800b544:	bf88      	it	hi
 800b546:	6013      	strhi	r3, [r2, #0]
 800b548:	f7ff f8e2 	bl	800a710 <vListInsertEnd>
	taskEXIT_CRITICAL();
 800b54c:	f7ff f99a 	bl	800a884 <vPortExitCritical>
	if( xSchedulerRunning != pdFALSE )
 800b550:	4b1a      	ldr	r3, [pc, #104]	; (800b5bc <prvAddNewTaskToReadyList+0xf8>)
 800b552:	681b      	ldr	r3, [r3, #0]
 800b554:	b173      	cbz	r3, 800b574 <prvAddNewTaskToReadyList+0xb0>
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 800b556:	6833      	ldr	r3, [r6, #0]
 800b558:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800b55a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800b55c:	429a      	cmp	r2, r3
 800b55e:	d209      	bcs.n	800b574 <prvAddNewTaskToReadyList+0xb0>
			taskYIELD_IF_USING_PREEMPTION();
 800b560:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800b564:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800b568:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800b56c:	f3bf 8f4f 	dsb	sy
 800b570:	f3bf 8f6f 	isb	sy
}
 800b574:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( xSchedulerRunning == pdFALSE )
 800b578:	4b10      	ldr	r3, [pc, #64]	; (800b5bc <prvAddNewTaskToReadyList+0xf8>)
 800b57a:	681b      	ldr	r3, [r3, #0]
 800b57c:	2b00      	cmp	r3, #0
 800b57e:	d1d3      	bne.n	800b528 <prvAddNewTaskToReadyList+0x64>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800b580:	6833      	ldr	r3, [r6, #0]
 800b582:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800b584:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800b586:	429a      	cmp	r2, r3
					pxCurrentTCB = pxNewTCB;
 800b588:	bf98      	it	ls
 800b58a:	6034      	strls	r4, [r6, #0]
 800b58c:	e7cc      	b.n	800b528 <prvAddNewTaskToReadyList+0x64>
 800b58e:	bf00      	nop
 800b590:	20017784 	.word	0x20017784
 800b594:	20017318 	.word	0x20017318
 800b598:	20017324 	.word	0x20017324
 800b59c:	200177b0 	.word	0x200177b0
 800b5a0:	200177cc 	.word	0x200177cc
 800b5a4:	200177f8 	.word	0x200177f8
 800b5a8:	200177e4 	.word	0x200177e4
 800b5ac:	2001731c 	.word	0x2001731c
 800b5b0:	20017320 	.word	0x20017320
 800b5b4:	20017794 	.word	0x20017794
 800b5b8:	20017798 	.word	0x20017798
 800b5bc:	200177e0 	.word	0x200177e0
 800b5c0:	2001779c 	.word	0x2001779c

0800b5c4 <prvAddCurrentTaskToDelayedList>:
	}
#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
 800b5c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 800b5c6:	4b15      	ldr	r3, [pc, #84]	; (800b61c <prvAddCurrentTaskToDelayedList+0x58>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800b5c8:	4e15      	ldr	r6, [pc, #84]	; (800b620 <prvAddCurrentTaskToDelayedList+0x5c>)
const TickType_t xConstTickCount = xTickCount;
 800b5ca:	681d      	ldr	r5, [r3, #0]
{
 800b5cc:	4604      	mov	r4, r0
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800b5ce:	6830      	ldr	r0, [r6, #0]
 800b5d0:	3004      	adds	r0, #4
{
 800b5d2:	460f      	mov	r7, r1
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800b5d4:	f7ff f8bf 	bl	800a756 <uxListRemove>
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 800b5d8:	1c63      	adds	r3, r4, #1
 800b5da:	d107      	bne.n	800b5ec <prvAddCurrentTaskToDelayedList+0x28>
 800b5dc:	b137      	cbz	r7, 800b5ec <prvAddCurrentTaskToDelayedList+0x28>
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800b5de:	6831      	ldr	r1, [r6, #0]
 800b5e0:	4810      	ldr	r0, [pc, #64]	; (800b624 <prvAddCurrentTaskToDelayedList+0x60>)

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
 800b5e2:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800b5e6:	3104      	adds	r1, #4
 800b5e8:	f7ff b892 	b.w	800a710 <vListInsertEnd>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800b5ec:	6833      	ldr	r3, [r6, #0]
 800b5ee:	192c      	adds	r4, r5, r4
 800b5f0:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 800b5f2:	d307      	bcc.n	800b604 <prvAddCurrentTaskToDelayedList+0x40>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800b5f4:	4b0c      	ldr	r3, [pc, #48]	; (800b628 <prvAddCurrentTaskToDelayedList+0x64>)
 800b5f6:	6818      	ldr	r0, [r3, #0]
 800b5f8:	6831      	ldr	r1, [r6, #0]
}
 800b5fa:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800b5fe:	3104      	adds	r1, #4
 800b600:	f7ff b892 	b.w	800a728 <vListInsert>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800b604:	4b09      	ldr	r3, [pc, #36]	; (800b62c <prvAddCurrentTaskToDelayedList+0x68>)
 800b606:	6818      	ldr	r0, [r3, #0]
 800b608:	6831      	ldr	r1, [r6, #0]
 800b60a:	3104      	adds	r1, #4
 800b60c:	f7ff f88c 	bl	800a728 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800b610:	4b07      	ldr	r3, [pc, #28]	; (800b630 <prvAddCurrentTaskToDelayedList+0x6c>)
 800b612:	681a      	ldr	r2, [r3, #0]
 800b614:	42a2      	cmp	r2, r4
					xNextTaskUnblockTime = xTimeToWake;
 800b616:	bf88      	it	hi
 800b618:	601c      	strhi	r4, [r3, #0]
}
 800b61a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800b61c:	2001780c 	.word	0x2001780c
 800b620:	20017318 	.word	0x20017318
 800b624:	200177e4 	.word	0x200177e4
 800b628:	20017320 	.word	0x20017320
 800b62c:	2001731c 	.word	0x2001731c
 800b630:	200177c4 	.word	0x200177c4

0800b634 <prvResetNextTaskUnblockTime>:
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800b634:	4a06      	ldr	r2, [pc, #24]	; (800b650 <prvResetNextTaskUnblockTime+0x1c>)
 800b636:	6813      	ldr	r3, [r2, #0]
 800b638:	6819      	ldr	r1, [r3, #0]
 800b63a:	4b06      	ldr	r3, [pc, #24]	; (800b654 <prvResetNextTaskUnblockTime+0x20>)
 800b63c:	b919      	cbnz	r1, 800b646 <prvResetNextTaskUnblockTime+0x12>
		xNextTaskUnblockTime = portMAX_DELAY;
 800b63e:	f04f 32ff 	mov.w	r2, #4294967295
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800b642:	601a      	str	r2, [r3, #0]
}
 800b644:	4770      	bx	lr
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800b646:	6812      	ldr	r2, [r2, #0]
 800b648:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800b64a:	68d2      	ldr	r2, [r2, #12]
 800b64c:	6852      	ldr	r2, [r2, #4]
 800b64e:	e7f8      	b.n	800b642 <prvResetNextTaskUnblockTime+0xe>
 800b650:	2001731c 	.word	0x2001731c
 800b654:	200177c4 	.word	0x200177c4

0800b658 <prvDeleteTCB>:
	{
 800b658:	b510      	push	{r4, lr}
 800b65a:	4604      	mov	r4, r0
			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
 800b65c:	3058      	adds	r0, #88	; 0x58
 800b65e:	f017 f88b 	bl	8022778 <_reclaim_reent>
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 800b662:	f894 30bd 	ldrb.w	r3, [r4, #189]	; 0xbd
 800b666:	b93b      	cbnz	r3, 800b678 <prvDeleteTCB+0x20>
				vPortFree( pxTCB->pxStack );
 800b668:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800b66a:	f7ff f80b 	bl	800a684 <vPortFree>
				vPortFree( pxTCB );
 800b66e:	4620      	mov	r0, r4
	}
 800b670:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				vPortFree( pxTCB );
 800b674:	f7ff b806 	b.w	800a684 <vPortFree>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 800b678:	2b01      	cmp	r3, #1
 800b67a:	d0f8      	beq.n	800b66e <prvDeleteTCB+0x16>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 800b67c:	2b02      	cmp	r3, #2
 800b67e:	d008      	beq.n	800b692 <prvDeleteTCB+0x3a>
 800b680:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b684:	f383 8811 	msr	BASEPRI, r3
 800b688:	f3bf 8f6f 	isb	sy
 800b68c:	f3bf 8f4f 	dsb	sy
 800b690:	e7fe      	b.n	800b690 <prvDeleteTCB+0x38>
	}
 800b692:	bd10      	pop	{r4, pc}

0800b694 <prvIdleTask>:
{
 800b694:	b580      	push	{r7, lr}
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800b696:	4c13      	ldr	r4, [pc, #76]	; (800b6e4 <prvIdleTask+0x50>)
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800b698:	4f13      	ldr	r7, [pc, #76]	; (800b6e8 <prvIdleTask+0x54>)
				--uxCurrentNumberOfTasks;
 800b69a:	4d14      	ldr	r5, [pc, #80]	; (800b6ec <prvIdleTask+0x58>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800b69c:	6823      	ldr	r3, [r4, #0]
 800b69e:	b973      	cbnz	r3, 800b6be <prvIdleTask+0x2a>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 800b6a0:	4b13      	ldr	r3, [pc, #76]	; (800b6f0 <prvIdleTask+0x5c>)
 800b6a2:	681b      	ldr	r3, [r3, #0]
 800b6a4:	2b01      	cmp	r3, #1
 800b6a6:	d9f8      	bls.n	800b69a <prvIdleTask+0x6>
				taskYIELD();
 800b6a8:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800b6ac:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800b6b0:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800b6b4:	f3bf 8f4f 	dsb	sy
 800b6b8:	f3bf 8f6f 	isb	sy
 800b6bc:	e7ed      	b.n	800b69a <prvIdleTask+0x6>
			taskENTER_CRITICAL();
 800b6be:	f7ff f8c1 	bl	800a844 <vPortEnterCritical>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800b6c2:	68fb      	ldr	r3, [r7, #12]
 800b6c4:	68de      	ldr	r6, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800b6c6:	1d30      	adds	r0, r6, #4
 800b6c8:	f7ff f845 	bl	800a756 <uxListRemove>
				--uxCurrentNumberOfTasks;
 800b6cc:	682b      	ldr	r3, [r5, #0]
 800b6ce:	3b01      	subs	r3, #1
 800b6d0:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
 800b6d2:	6823      	ldr	r3, [r4, #0]
 800b6d4:	3b01      	subs	r3, #1
 800b6d6:	6023      	str	r3, [r4, #0]
			taskEXIT_CRITICAL();
 800b6d8:	f7ff f8d4 	bl	800a884 <vPortExitCritical>
			prvDeleteTCB( pxTCB );
 800b6dc:	4630      	mov	r0, r6
 800b6de:	f7ff ffbb 	bl	800b658 <prvDeleteTCB>
 800b6e2:	e7db      	b.n	800b69c <prvIdleTask+0x8>
 800b6e4:	20017788 	.word	0x20017788
 800b6e8:	200177f8 	.word	0x200177f8
 800b6ec:	20017784 	.word	0x20017784
 800b6f0:	20017324 	.word	0x20017324

0800b6f4 <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800b6f4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800b6f8:	e9dd 8409 	ldrd	r8, r4, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800b6fc:	ea4f 0982 	mov.w	r9, r2, lsl #2
 800b700:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800b702:	4606      	mov	r6, r0
 800b704:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800b706:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800b708:	21a5      	movs	r1, #165	; 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800b70a:	461f      	mov	r7, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800b70c:	f016 fc50 	bl	8021fb0 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 800b710:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800b712:	f1a9 0904 	sub.w	r9, r9, #4
 800b716:	4491      	add	r9, r2
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 800b718:	f029 0907 	bic.w	r9, r9, #7
	if( pcName != NULL )
 800b71c:	2d00      	cmp	r5, #0
 800b71e:	d042      	beq.n	800b7a6 <prvInitialiseNewTask.constprop.0+0xb2>
 800b720:	1e6b      	subs	r3, r5, #1
 800b722:	f104 0234 	add.w	r2, r4, #52	; 0x34
 800b726:	350f      	adds	r5, #15
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800b728:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 800b72c:	f802 0b01 	strb.w	r0, [r2], #1
			if( pcName[ x ] == ( char ) 0x00 )
 800b730:	b108      	cbz	r0, 800b736 <prvInitialiseNewTask.constprop.0+0x42>
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 800b732:	42ab      	cmp	r3, r5
 800b734:	d1f8      	bne.n	800b728 <prvInitialiseNewTask.constprop.0+0x34>
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 800b736:	2300      	movs	r3, #0
 800b738:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 800b73c:	9d08      	ldr	r5, [sp, #32]
 800b73e:	2d37      	cmp	r5, #55	; 0x37
 800b740:	bf28      	it	cs
 800b742:	2537      	movcs	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 800b744:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 800b748:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 800b74a:	64e5      	str	r5, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800b74c:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 800b74e:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800b752:	f7fe ffda 	bl	800a70a <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800b756:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 800b75a:	f104 0018 	add.w	r0, r4, #24
 800b75e:	f7fe ffd4 	bl	800a70a <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
 800b762:	f8c4 a0b8 	str.w	sl, [r4, #184]	; 0xb8
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800b766:	2260      	movs	r2, #96	; 0x60
 800b768:	4651      	mov	r1, sl
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 800b76a:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800b76c:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 800b76e:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 800b770:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 800b774:	f884 a0bc 	strb.w	sl, [r4, #188]	; 0xbc
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800b778:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800b77c:	f016 fc18 	bl	8021fb0 <memset>
 800b780:	4b0a      	ldr	r3, [pc, #40]	; (800b7ac <prvInitialiseNewTask.constprop.0+0xb8>)
 800b782:	65e3      	str	r3, [r4, #92]	; 0x5c
 800b784:	4b0a      	ldr	r3, [pc, #40]	; (800b7b0 <prvInitialiseNewTask.constprop.0+0xbc>)
 800b786:	6623      	str	r3, [r4, #96]	; 0x60
 800b788:	4b0a      	ldr	r3, [pc, #40]	; (800b7b4 <prvInitialiseNewTask.constprop.0+0xc0>)
 800b78a:	6663      	str	r3, [r4, #100]	; 0x64
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800b78c:	463a      	mov	r2, r7
 800b78e:	4631      	mov	r1, r6
 800b790:	4648      	mov	r0, r9
 800b792:	f7ff f82f 	bl	800a7f4 <pxPortInitialiseStack>
 800b796:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 800b798:	f1b8 0f00 	cmp.w	r8, #0
 800b79c:	d001      	beq.n	800b7a2 <prvInitialiseNewTask.constprop.0+0xae>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 800b79e:	f8c8 4000 	str.w	r4, [r8]
}
 800b7a2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 800b7a6:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 800b7aa:	e7c7      	b.n	800b73c <prvInitialiseNewTask.constprop.0+0x48>
 800b7ac:	08025960 	.word	0x08025960
 800b7b0:	08025980 	.word	0x08025980
 800b7b4:	08025940 	.word	0x08025940

0800b7b8 <xTaskCreateStatic>:
	{
 800b7b8:	b570      	push	{r4, r5, r6, lr}
 800b7ba:	b086      	sub	sp, #24
 800b7bc:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 800b7c0:	b945      	cbnz	r5, 800b7d4 <xTaskCreateStatic+0x1c>
 800b7c2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b7c6:	f383 8811 	msr	BASEPRI, r3
 800b7ca:	f3bf 8f6f 	isb	sy
 800b7ce:	f3bf 8f4f 	dsb	sy
 800b7d2:	e7fe      	b.n	800b7d2 <xTaskCreateStatic+0x1a>
		configASSERT( pxTaskBuffer != NULL );
 800b7d4:	b944      	cbnz	r4, 800b7e8 <xTaskCreateStatic+0x30>
 800b7d6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b7da:	f383 8811 	msr	BASEPRI, r3
 800b7de:	f3bf 8f6f 	isb	sy
 800b7e2:	f3bf 8f4f 	dsb	sy
 800b7e6:	e7fe      	b.n	800b7e6 <xTaskCreateStatic+0x2e>
			volatile size_t xSize = sizeof( StaticTask_t );
 800b7e8:	26c0      	movs	r6, #192	; 0xc0
 800b7ea:	9605      	str	r6, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 800b7ec:	9e05      	ldr	r6, [sp, #20]
 800b7ee:	2ec0      	cmp	r6, #192	; 0xc0
 800b7f0:	d008      	beq.n	800b804 <xTaskCreateStatic+0x4c>
 800b7f2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b7f6:	f383 8811 	msr	BASEPRI, r3
 800b7fa:	f3bf 8f6f 	isb	sy
 800b7fe:	f3bf 8f4f 	dsb	sy
 800b802:	e7fe      	b.n	800b802 <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800b804:	6325      	str	r5, [r4, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800b806:	2502      	movs	r5, #2
 800b808:	f884 50bd 	strb.w	r5, [r4, #189]	; 0xbd
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800b80c:	ad04      	add	r5, sp, #16
 800b80e:	9501      	str	r5, [sp, #4]
 800b810:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 800b812:	9402      	str	r4, [sp, #8]
 800b814:	9500      	str	r5, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800b816:	9e05      	ldr	r6, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800b818:	f7ff ff6c 	bl	800b6f4 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800b81c:	4620      	mov	r0, r4
 800b81e:	f7ff fe51 	bl	800b4c4 <prvAddNewTaskToReadyList>
	}
 800b822:	9804      	ldr	r0, [sp, #16]
 800b824:	b006      	add	sp, #24
 800b826:	bd70      	pop	{r4, r5, r6, pc}

0800b828 <xTaskCreate>:
	{
 800b828:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b82c:	4607      	mov	r7, r0
 800b82e:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800b830:	0090      	lsls	r0, r2, #2
	{
 800b832:	4688      	mov	r8, r1
 800b834:	4616      	mov	r6, r2
 800b836:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800b838:	f7fe fe92 	bl	800a560 <pvPortMalloc>
			if( pxStack != NULL )
 800b83c:	4605      	mov	r5, r0
 800b83e:	b1e8      	cbz	r0, 800b87c <xTaskCreate+0x54>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 800b840:	20c0      	movs	r0, #192	; 0xc0
 800b842:	f7fe fe8d 	bl	800a560 <pvPortMalloc>
				if( pxNewTCB != NULL )
 800b846:	4604      	mov	r4, r0
 800b848:	b1a8      	cbz	r0, 800b876 <xTaskCreate+0x4e>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 800b84a:	2300      	movs	r3, #0
 800b84c:	f880 30bd 	strb.w	r3, [r0, #189]	; 0xbd
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800b850:	9b0d      	ldr	r3, [sp, #52]	; 0x34
					pxNewTCB->pxStack = pxStack;
 800b852:	6305      	str	r5, [r0, #48]	; 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800b854:	9301      	str	r3, [sp, #4]
 800b856:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800b858:	9002      	str	r0, [sp, #8]
 800b85a:	9300      	str	r3, [sp, #0]
 800b85c:	4632      	mov	r2, r6
 800b85e:	464b      	mov	r3, r9
 800b860:	4641      	mov	r1, r8
 800b862:	4638      	mov	r0, r7
 800b864:	f7ff ff46 	bl	800b6f4 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800b868:	4620      	mov	r0, r4
 800b86a:	f7ff fe2b 	bl	800b4c4 <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 800b86e:	2001      	movs	r0, #1
	}
 800b870:	b005      	add	sp, #20
 800b872:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 800b876:	4628      	mov	r0, r5
 800b878:	f7fe ff04 	bl	800a684 <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 800b87c:	f04f 30ff 	mov.w	r0, #4294967295
		return xReturn;
 800b880:	e7f6      	b.n	800b870 <xTaskCreate+0x48>
	...

0800b884 <vTaskStartScheduler>:
{
 800b884:	b510      	push	{r4, lr}
 800b886:	b088      	sub	sp, #32
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 800b888:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800b88a:	aa07      	add	r2, sp, #28
 800b88c:	a906      	add	r1, sp, #24
 800b88e:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 800b890:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800b894:	f7fe fe28 	bl	800a4e8 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 800b898:	9b05      	ldr	r3, [sp, #20]
 800b89a:	9302      	str	r3, [sp, #8]
 800b89c:	9b06      	ldr	r3, [sp, #24]
 800b89e:	9a07      	ldr	r2, [sp, #28]
 800b8a0:	4919      	ldr	r1, [pc, #100]	; (800b908 <vTaskStartScheduler+0x84>)
 800b8a2:	481a      	ldr	r0, [pc, #104]	; (800b90c <vTaskStartScheduler+0x88>)
 800b8a4:	e9cd 4300 	strd	r4, r3, [sp]
 800b8a8:	4623      	mov	r3, r4
 800b8aa:	f7ff ff85 	bl	800b7b8 <xTaskCreateStatic>
		if( xIdleTaskHandle != NULL )
 800b8ae:	b340      	cbz	r0, 800b902 <vTaskStartScheduler+0x7e>
			xReturn = xTimerCreateTimerTask();
 800b8b0:	f000 fbc4 	bl	800c03c <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 800b8b4:	2801      	cmp	r0, #1
 800b8b6:	d119      	bne.n	800b8ec <vTaskStartScheduler+0x68>
 800b8b8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b8bc:	f383 8811 	msr	BASEPRI, r3
 800b8c0:	f3bf 8f6f 	isb	sy
 800b8c4:	f3bf 8f4f 	dsb	sy
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800b8c8:	4b11      	ldr	r3, [pc, #68]	; (800b910 <vTaskStartScheduler+0x8c>)
 800b8ca:	4a12      	ldr	r2, [pc, #72]	; (800b914 <vTaskStartScheduler+0x90>)
 800b8cc:	681b      	ldr	r3, [r3, #0]
 800b8ce:	3358      	adds	r3, #88	; 0x58
 800b8d0:	6013      	str	r3, [r2, #0]
		xNextTaskUnblockTime = portMAX_DELAY;
 800b8d2:	4b11      	ldr	r3, [pc, #68]	; (800b918 <vTaskStartScheduler+0x94>)
 800b8d4:	f04f 32ff 	mov.w	r2, #4294967295
 800b8d8:	601a      	str	r2, [r3, #0]
		xSchedulerRunning = pdTRUE;
 800b8da:	4b10      	ldr	r3, [pc, #64]	; (800b91c <vTaskStartScheduler+0x98>)
 800b8dc:	6018      	str	r0, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800b8de:	4b10      	ldr	r3, [pc, #64]	; (800b920 <vTaskStartScheduler+0x9c>)
 800b8e0:	601c      	str	r4, [r3, #0]
}
 800b8e2:	b008      	add	sp, #32
 800b8e4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		if( xPortStartScheduler() != pdFALSE )
 800b8e8:	f7ff b83c 	b.w	800a964 <xPortStartScheduler>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 800b8ec:	3001      	adds	r0, #1
 800b8ee:	d108      	bne.n	800b902 <vTaskStartScheduler+0x7e>
 800b8f0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b8f4:	f383 8811 	msr	BASEPRI, r3
 800b8f8:	f3bf 8f6f 	isb	sy
 800b8fc:	f3bf 8f4f 	dsb	sy
 800b900:	e7fe      	b.n	800b900 <vTaskStartScheduler+0x7c>
}
 800b902:	b008      	add	sp, #32
 800b904:	bd10      	pop	{r4, pc}
 800b906:	bf00      	nop
 800b908:	08024b5c 	.word	0x08024b5c
 800b90c:	0800b695 	.word	0x0800b695
 800b910:	20017318 	.word	0x20017318
 800b914:	20000100 	.word	0x20000100
 800b918:	200177c4 	.word	0x200177c4
 800b91c:	200177e0 	.word	0x200177e0
 800b920:	2001780c 	.word	0x2001780c

0800b924 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 800b924:	4a02      	ldr	r2, [pc, #8]	; (800b930 <vTaskSuspendAll+0xc>)
 800b926:	6813      	ldr	r3, [r2, #0]
 800b928:	3301      	adds	r3, #1
 800b92a:	6013      	str	r3, [r2, #0]
}
 800b92c:	4770      	bx	lr
 800b92e:	bf00      	nop
 800b930:	20017790 	.word	0x20017790

0800b934 <xTaskGetTickCount>:
		xTicks = xTickCount;
 800b934:	4b01      	ldr	r3, [pc, #4]	; (800b93c <xTaskGetTickCount+0x8>)
 800b936:	6818      	ldr	r0, [r3, #0]
}
 800b938:	4770      	bx	lr
 800b93a:	bf00      	nop
 800b93c:	2001780c 	.word	0x2001780c

0800b940 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800b940:	4b3f      	ldr	r3, [pc, #252]	; (800ba40 <xTaskIncrementTick+0x100>)
 800b942:	681b      	ldr	r3, [r3, #0]
{
 800b944:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800b948:	2b00      	cmp	r3, #0
 800b94a:	d173      	bne.n	800ba34 <xTaskIncrementTick+0xf4>
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 800b94c:	4b3d      	ldr	r3, [pc, #244]	; (800ba44 <xTaskIncrementTick+0x104>)
 800b94e:	681d      	ldr	r5, [r3, #0]
 800b950:	3501      	adds	r5, #1
		xTickCount = xConstTickCount;
 800b952:	601d      	str	r5, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 800b954:	b9bd      	cbnz	r5, 800b986 <xTaskIncrementTick+0x46>
			taskSWITCH_DELAYED_LISTS();
 800b956:	4b3c      	ldr	r3, [pc, #240]	; (800ba48 <xTaskIncrementTick+0x108>)
 800b958:	681a      	ldr	r2, [r3, #0]
 800b95a:	6812      	ldr	r2, [r2, #0]
 800b95c:	b142      	cbz	r2, 800b970 <xTaskIncrementTick+0x30>
 800b95e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b962:	f383 8811 	msr	BASEPRI, r3
 800b966:	f3bf 8f6f 	isb	sy
 800b96a:	f3bf 8f4f 	dsb	sy
 800b96e:	e7fe      	b.n	800b96e <xTaskIncrementTick+0x2e>
 800b970:	4a36      	ldr	r2, [pc, #216]	; (800ba4c <xTaskIncrementTick+0x10c>)
 800b972:	6819      	ldr	r1, [r3, #0]
 800b974:	6810      	ldr	r0, [r2, #0]
 800b976:	6018      	str	r0, [r3, #0]
 800b978:	6011      	str	r1, [r2, #0]
 800b97a:	4a35      	ldr	r2, [pc, #212]	; (800ba50 <xTaskIncrementTick+0x110>)
 800b97c:	6813      	ldr	r3, [r2, #0]
 800b97e:	3301      	adds	r3, #1
 800b980:	6013      	str	r3, [r2, #0]
 800b982:	f7ff fe57 	bl	800b634 <prvResetNextTaskUnblockTime>
		if( xConstTickCount >= xNextTaskUnblockTime )
 800b986:	4e33      	ldr	r6, [pc, #204]	; (800ba54 <xTaskIncrementTick+0x114>)
 800b988:	4f33      	ldr	r7, [pc, #204]	; (800ba58 <xTaskIncrementTick+0x118>)
 800b98a:	6833      	ldr	r3, [r6, #0]
 800b98c:	f8df 80d4 	ldr.w	r8, [pc, #212]	; 800ba64 <xTaskIncrementTick+0x124>
 800b990:	42ab      	cmp	r3, r5
BaseType_t xSwitchRequired = pdFALSE;
 800b992:	f04f 0400 	mov.w	r4, #0
		if( xConstTickCount >= xNextTaskUnblockTime )
 800b996:	d911      	bls.n	800b9bc <xTaskIncrementTick+0x7c>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 800b998:	f8d8 3000 	ldr.w	r3, [r8]
 800b99c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b99e:	2214      	movs	r2, #20
 800b9a0:	4353      	muls	r3, r2
 800b9a2:	58fb      	ldr	r3, [r7, r3]
				xSwitchRequired = pdTRUE;
 800b9a4:	2b02      	cmp	r3, #2
 800b9a6:	bf28      	it	cs
 800b9a8:	2401      	movcs	r4, #1
		if( xYieldPending != pdFALSE )
 800b9aa:	4b2c      	ldr	r3, [pc, #176]	; (800ba5c <xTaskIncrementTick+0x11c>)
 800b9ac:	681b      	ldr	r3, [r3, #0]
			xSwitchRequired = pdTRUE;
 800b9ae:	2b00      	cmp	r3, #0
}
 800b9b0:	bf0c      	ite	eq
 800b9b2:	4620      	moveq	r0, r4
 800b9b4:	2001      	movne	r0, #1
 800b9b6:	b003      	add	sp, #12
 800b9b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800b9bc:	f8df 9088 	ldr.w	r9, [pc, #136]	; 800ba48 <xTaskIncrementTick+0x108>
					prvAddTaskToReadyList( pxTCB );
 800b9c0:	f8df a0a4 	ldr.w	sl, [pc, #164]	; 800ba68 <xTaskIncrementTick+0x128>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800b9c4:	f8d9 3000 	ldr.w	r3, [r9]
 800b9c8:	681b      	ldr	r3, [r3, #0]
 800b9ca:	b91b      	cbnz	r3, 800b9d4 <xTaskIncrementTick+0x94>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800b9cc:	f04f 33ff 	mov.w	r3, #4294967295
 800b9d0:	6033      	str	r3, [r6, #0]
					break;
 800b9d2:	e7e1      	b.n	800b998 <xTaskIncrementTick+0x58>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800b9d4:	f8d9 3000 	ldr.w	r3, [r9]
 800b9d8:	68db      	ldr	r3, [r3, #12]
 800b9da:	f8d3 b00c 	ldr.w	fp, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 800b9de:	f8db 2004 	ldr.w	r2, [fp, #4]
					if( xConstTickCount < xItemValue )
 800b9e2:	4295      	cmp	r5, r2
 800b9e4:	d201      	bcs.n	800b9ea <xTaskIncrementTick+0xaa>
						xNextTaskUnblockTime = xItemValue;
 800b9e6:	6032      	str	r2, [r6, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 800b9e8:	e7d6      	b.n	800b998 <xTaskIncrementTick+0x58>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800b9ea:	f10b 0104 	add.w	r1, fp, #4
 800b9ee:	4608      	mov	r0, r1
 800b9f0:	9101      	str	r1, [sp, #4]
 800b9f2:	f7fe feb0 	bl	800a756 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800b9f6:	f8db 2028 	ldr.w	r2, [fp, #40]	; 0x28
 800b9fa:	9901      	ldr	r1, [sp, #4]
 800b9fc:	b122      	cbz	r2, 800ba08 <xTaskIncrementTick+0xc8>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800b9fe:	f10b 0018 	add.w	r0, fp, #24
 800ba02:	f7fe fea8 	bl	800a756 <uxListRemove>
 800ba06:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
 800ba08:	f8db 002c 	ldr.w	r0, [fp, #44]	; 0x2c
 800ba0c:	f8da 2000 	ldr.w	r2, [sl]
 800ba10:	2314      	movs	r3, #20
 800ba12:	4290      	cmp	r0, r2
 800ba14:	bf88      	it	hi
 800ba16:	f8ca 0000 	strhi.w	r0, [sl]
 800ba1a:	fb03 7000 	mla	r0, r3, r0, r7
 800ba1e:	f7fe fe77 	bl	800a710 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800ba22:	f8d8 1000 	ldr.w	r1, [r8]
 800ba26:	f8db 202c 	ldr.w	r2, [fp, #44]	; 0x2c
 800ba2a:	6acb      	ldr	r3, [r1, #44]	; 0x2c
							xSwitchRequired = pdTRUE;
 800ba2c:	429a      	cmp	r2, r3
 800ba2e:	bf28      	it	cs
 800ba30:	2401      	movcs	r4, #1
 800ba32:	e7c7      	b.n	800b9c4 <xTaskIncrementTick+0x84>
		++uxPendedTicks;
 800ba34:	4a0a      	ldr	r2, [pc, #40]	; (800ba60 <xTaskIncrementTick+0x120>)
 800ba36:	6813      	ldr	r3, [r2, #0]
 800ba38:	3301      	adds	r3, #1
 800ba3a:	6013      	str	r3, [r2, #0]
BaseType_t xSwitchRequired = pdFALSE;
 800ba3c:	2400      	movs	r4, #0
 800ba3e:	e7b4      	b.n	800b9aa <xTaskIncrementTick+0x6a>
 800ba40:	20017790 	.word	0x20017790
 800ba44:	2001780c 	.word	0x2001780c
 800ba48:	2001731c 	.word	0x2001731c
 800ba4c:	20017320 	.word	0x20017320
 800ba50:	200177c8 	.word	0x200177c8
 800ba54:	200177c4 	.word	0x200177c4
 800ba58:	20017324 	.word	0x20017324
 800ba5c:	20017810 	.word	0x20017810
 800ba60:	2001778c 	.word	0x2001778c
 800ba64:	20017318 	.word	0x20017318
 800ba68:	20017798 	.word	0x20017798

0800ba6c <xTaskResumeAll>:
{
 800ba6c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	configASSERT( uxSchedulerSuspended );
 800ba6e:	4c31      	ldr	r4, [pc, #196]	; (800bb34 <xTaskResumeAll+0xc8>)
 800ba70:	6823      	ldr	r3, [r4, #0]
 800ba72:	b943      	cbnz	r3, 800ba86 <xTaskResumeAll+0x1a>
 800ba74:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ba78:	f383 8811 	msr	BASEPRI, r3
 800ba7c:	f3bf 8f6f 	isb	sy
 800ba80:	f3bf 8f4f 	dsb	sy
 800ba84:	e7fe      	b.n	800ba84 <xTaskResumeAll+0x18>
	taskENTER_CRITICAL();
 800ba86:	f7fe fedd 	bl	800a844 <vPortEnterCritical>
		--uxSchedulerSuspended;
 800ba8a:	6823      	ldr	r3, [r4, #0]
 800ba8c:	3b01      	subs	r3, #1
 800ba8e:	6023      	str	r3, [r4, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800ba90:	6824      	ldr	r4, [r4, #0]
 800ba92:	b12c      	cbz	r4, 800baa0 <xTaskResumeAll+0x34>
BaseType_t xAlreadyYielded = pdFALSE;
 800ba94:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 800ba96:	f7fe fef5 	bl	800a884 <vPortExitCritical>
}
 800ba9a:	4620      	mov	r0, r4
 800ba9c:	b003      	add	sp, #12
 800ba9e:	bdf0      	pop	{r4, r5, r6, r7, pc}
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 800baa0:	4b25      	ldr	r3, [pc, #148]	; (800bb38 <xTaskResumeAll+0xcc>)
 800baa2:	681b      	ldr	r3, [r3, #0]
 800baa4:	2b00      	cmp	r3, #0
 800baa6:	d0f5      	beq.n	800ba94 <xTaskResumeAll+0x28>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800baa8:	4d24      	ldr	r5, [pc, #144]	; (800bb3c <xTaskResumeAll+0xd0>)
					prvAddTaskToReadyList( pxTCB );
 800baaa:	4e25      	ldr	r6, [pc, #148]	; (800bb40 <xTaskResumeAll+0xd4>)
 800baac:	4f25      	ldr	r7, [pc, #148]	; (800bb44 <xTaskResumeAll+0xd8>)
 800baae:	e01e      	b.n	800baee <xTaskResumeAll+0x82>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800bab0:	68eb      	ldr	r3, [r5, #12]
 800bab2:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800bab4:	f104 0018 	add.w	r0, r4, #24
 800bab8:	f7fe fe4d 	bl	800a756 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800babc:	1d21      	adds	r1, r4, #4
 800babe:	4608      	mov	r0, r1
 800bac0:	9101      	str	r1, [sp, #4]
 800bac2:	f7fe fe48 	bl	800a756 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 800bac6:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800bac8:	6832      	ldr	r2, [r6, #0]
 800baca:	9901      	ldr	r1, [sp, #4]
 800bacc:	2014      	movs	r0, #20
 800bace:	4293      	cmp	r3, r2
 800bad0:	fb00 7003 	mla	r0, r0, r3, r7
 800bad4:	bf88      	it	hi
 800bad6:	6033      	strhi	r3, [r6, #0]
 800bad8:	f7fe fe1a 	bl	800a710 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800badc:	4b1a      	ldr	r3, [pc, #104]	; (800bb48 <xTaskResumeAll+0xdc>)
 800bade:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800bae0:	681b      	ldr	r3, [r3, #0]
 800bae2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800bae4:	429a      	cmp	r2, r3
 800bae6:	d302      	bcc.n	800baee <xTaskResumeAll+0x82>
						xYieldPending = pdTRUE;
 800bae8:	4b18      	ldr	r3, [pc, #96]	; (800bb4c <xTaskResumeAll+0xe0>)
 800baea:	2201      	movs	r2, #1
 800baec:	601a      	str	r2, [r3, #0]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800baee:	682b      	ldr	r3, [r5, #0]
 800baf0:	2b00      	cmp	r3, #0
 800baf2:	d1dd      	bne.n	800bab0 <xTaskResumeAll+0x44>
				if( pxTCB != NULL )
 800baf4:	b10c      	cbz	r4, 800bafa <xTaskResumeAll+0x8e>
					prvResetNextTaskUnblockTime();
 800baf6:	f7ff fd9d 	bl	800b634 <prvResetNextTaskUnblockTime>
					UBaseType_t uxPendedCounts = uxPendedTicks; /* Non-volatile copy. */
 800bafa:	4d15      	ldr	r5, [pc, #84]	; (800bb50 <xTaskResumeAll+0xe4>)
 800bafc:	682c      	ldr	r4, [r5, #0]
					if( uxPendedCounts > ( UBaseType_t ) 0U )
 800bafe:	b144      	cbz	r4, 800bb12 <xTaskResumeAll+0xa6>
								xYieldPending = pdTRUE;
 800bb00:	4e12      	ldr	r6, [pc, #72]	; (800bb4c <xTaskResumeAll+0xe0>)
 800bb02:	2701      	movs	r7, #1
							if( xTaskIncrementTick() != pdFALSE )
 800bb04:	f7ff ff1c 	bl	800b940 <xTaskIncrementTick>
 800bb08:	b100      	cbz	r0, 800bb0c <xTaskResumeAll+0xa0>
								xYieldPending = pdTRUE;
 800bb0a:	6037      	str	r7, [r6, #0]
						} while( uxPendedCounts > ( UBaseType_t ) 0U );
 800bb0c:	3c01      	subs	r4, #1
 800bb0e:	d1f9      	bne.n	800bb04 <xTaskResumeAll+0x98>
						uxPendedTicks = 0;
 800bb10:	602c      	str	r4, [r5, #0]
				if( xYieldPending != pdFALSE )
 800bb12:	4b0e      	ldr	r3, [pc, #56]	; (800bb4c <xTaskResumeAll+0xe0>)
 800bb14:	681b      	ldr	r3, [r3, #0]
 800bb16:	2b00      	cmp	r3, #0
 800bb18:	d0bc      	beq.n	800ba94 <xTaskResumeAll+0x28>
					taskYIELD_IF_USING_PREEMPTION();
 800bb1a:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800bb1e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800bb22:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800bb26:	f3bf 8f4f 	dsb	sy
 800bb2a:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 800bb2e:	2401      	movs	r4, #1
 800bb30:	e7b1      	b.n	800ba96 <xTaskResumeAll+0x2a>
 800bb32:	bf00      	nop
 800bb34:	20017790 	.word	0x20017790
 800bb38:	20017784 	.word	0x20017784
 800bb3c:	200177cc 	.word	0x200177cc
 800bb40:	20017798 	.word	0x20017798
 800bb44:	20017324 	.word	0x20017324
 800bb48:	20017318 	.word	0x20017318
 800bb4c:	20017810 	.word	0x20017810
 800bb50:	2001778c 	.word	0x2001778c

0800bb54 <vTaskDelay>:
	{
 800bb54:	b508      	push	{r3, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 800bb56:	b950      	cbnz	r0, 800bb6e <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 800bb58:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800bb5c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800bb60:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800bb64:	f3bf 8f4f 	dsb	sy
 800bb68:	f3bf 8f6f 	isb	sy
	}
 800bb6c:	bd08      	pop	{r3, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 800bb6e:	4b0a      	ldr	r3, [pc, #40]	; (800bb98 <vTaskDelay+0x44>)
 800bb70:	6819      	ldr	r1, [r3, #0]
 800bb72:	b141      	cbz	r1, 800bb86 <vTaskDelay+0x32>
 800bb74:	f04f 0350 	mov.w	r3, #80	; 0x50
 800bb78:	f383 8811 	msr	BASEPRI, r3
 800bb7c:	f3bf 8f6f 	isb	sy
 800bb80:	f3bf 8f4f 	dsb	sy
 800bb84:	e7fe      	b.n	800bb84 <vTaskDelay+0x30>
			vTaskSuspendAll();
 800bb86:	f7ff fecd 	bl	800b924 <vTaskSuspendAll>
				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
 800bb8a:	f7ff fd1b 	bl	800b5c4 <prvAddCurrentTaskToDelayedList>
			xAlreadyYielded = xTaskResumeAll();
 800bb8e:	f7ff ff6d 	bl	800ba6c <xTaskResumeAll>
		if( xAlreadyYielded == pdFALSE )
 800bb92:	2800      	cmp	r0, #0
 800bb94:	d0e0      	beq.n	800bb58 <vTaskDelay+0x4>
 800bb96:	e7e9      	b.n	800bb6c <vTaskDelay+0x18>
 800bb98:	20017790 	.word	0x20017790

0800bb9c <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 800bb9c:	4b19      	ldr	r3, [pc, #100]	; (800bc04 <vTaskSwitchContext+0x68>)
 800bb9e:	681a      	ldr	r2, [r3, #0]
 800bba0:	4b19      	ldr	r3, [pc, #100]	; (800bc08 <vTaskSwitchContext+0x6c>)
{
 800bba2:	b570      	push	{r4, r5, r6, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 800bba4:	b112      	cbz	r2, 800bbac <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
 800bba6:	2201      	movs	r2, #1
 800bba8:	601a      	str	r2, [r3, #0]
}
 800bbaa:	bd70      	pop	{r4, r5, r6, pc}
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800bbac:	4d17      	ldr	r5, [pc, #92]	; (800bc0c <vTaskSwitchContext+0x70>)
		xYieldPending = pdFALSE;
 800bbae:	601a      	str	r2, [r3, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800bbb0:	682a      	ldr	r2, [r5, #0]
 800bbb2:	4917      	ldr	r1, [pc, #92]	; (800bc10 <vTaskSwitchContext+0x74>)
 800bbb4:	2614      	movs	r6, #20
 800bbb6:	fb06 f302 	mul.w	r3, r6, r2
 800bbba:	18c8      	adds	r0, r1, r3
 800bbbc:	58cc      	ldr	r4, [r1, r3]
 800bbbe:	b1ac      	cbz	r4, 800bbec <vTaskSwitchContext+0x50>
 800bbc0:	6844      	ldr	r4, [r0, #4]
 800bbc2:	3308      	adds	r3, #8
 800bbc4:	6864      	ldr	r4, [r4, #4]
 800bbc6:	6044      	str	r4, [r0, #4]
 800bbc8:	440b      	add	r3, r1
 800bbca:	429c      	cmp	r4, r3
 800bbcc:	bf04      	itt	eq
 800bbce:	6863      	ldreq	r3, [r4, #4]
 800bbd0:	6043      	streq	r3, [r0, #4]
 800bbd2:	2314      	movs	r3, #20
 800bbd4:	fb03 1102 	mla	r1, r3, r2, r1
 800bbd8:	684b      	ldr	r3, [r1, #4]
 800bbda:	68d9      	ldr	r1, [r3, #12]
 800bbdc:	4b0d      	ldr	r3, [pc, #52]	; (800bc14 <vTaskSwitchContext+0x78>)
 800bbde:	6019      	str	r1, [r3, #0]
 800bbe0:	602a      	str	r2, [r5, #0]
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800bbe2:	681b      	ldr	r3, [r3, #0]
 800bbe4:	4a0c      	ldr	r2, [pc, #48]	; (800bc18 <vTaskSwitchContext+0x7c>)
 800bbe6:	3358      	adds	r3, #88	; 0x58
 800bbe8:	6013      	str	r3, [r2, #0]
}
 800bbea:	e7de      	b.n	800bbaa <vTaskSwitchContext+0xe>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800bbec:	b942      	cbnz	r2, 800bc00 <vTaskSwitchContext+0x64>
 800bbee:	f04f 0350 	mov.w	r3, #80	; 0x50
 800bbf2:	f383 8811 	msr	BASEPRI, r3
 800bbf6:	f3bf 8f6f 	isb	sy
 800bbfa:	f3bf 8f4f 	dsb	sy
 800bbfe:	e7fe      	b.n	800bbfe <vTaskSwitchContext+0x62>
 800bc00:	3a01      	subs	r2, #1
 800bc02:	e7d8      	b.n	800bbb6 <vTaskSwitchContext+0x1a>
 800bc04:	20017790 	.word	0x20017790
 800bc08:	20017810 	.word	0x20017810
 800bc0c:	20017798 	.word	0x20017798
 800bc10:	20017324 	.word	0x20017324
 800bc14:	20017318 	.word	0x20017318
 800bc18:	20000100 	.word	0x20000100

0800bc1c <vTaskPlaceOnEventList>:
{
 800bc1c:	b510      	push	{r4, lr}
 800bc1e:	460c      	mov	r4, r1
	configASSERT( pxEventList );
 800bc20:	b940      	cbnz	r0, 800bc34 <vTaskPlaceOnEventList+0x18>
 800bc22:	f04f 0350 	mov.w	r3, #80	; 0x50
 800bc26:	f383 8811 	msr	BASEPRI, r3
 800bc2a:	f3bf 8f6f 	isb	sy
 800bc2e:	f3bf 8f4f 	dsb	sy
 800bc32:	e7fe      	b.n	800bc32 <vTaskPlaceOnEventList+0x16>
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800bc34:	4b05      	ldr	r3, [pc, #20]	; (800bc4c <vTaskPlaceOnEventList+0x30>)
 800bc36:	6819      	ldr	r1, [r3, #0]
 800bc38:	3118      	adds	r1, #24
 800bc3a:	f7fe fd75 	bl	800a728 <vListInsert>
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800bc3e:	4620      	mov	r0, r4
 800bc40:	2101      	movs	r1, #1
}
 800bc42:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800bc46:	f7ff bcbd 	b.w	800b5c4 <prvAddCurrentTaskToDelayedList>
 800bc4a:	bf00      	nop
 800bc4c:	20017318 	.word	0x20017318

0800bc50 <vTaskPlaceOnEventListRestricted>:
	{
 800bc50:	b538      	push	{r3, r4, r5, lr}
 800bc52:	460d      	mov	r5, r1
 800bc54:	4614      	mov	r4, r2
		configASSERT( pxEventList );
 800bc56:	b940      	cbnz	r0, 800bc6a <vTaskPlaceOnEventListRestricted+0x1a>
 800bc58:	f04f 0350 	mov.w	r3, #80	; 0x50
 800bc5c:	f383 8811 	msr	BASEPRI, r3
 800bc60:	f3bf 8f6f 	isb	sy
 800bc64:	f3bf 8f4f 	dsb	sy
 800bc68:	e7fe      	b.n	800bc68 <vTaskPlaceOnEventListRestricted+0x18>
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800bc6a:	4b07      	ldr	r3, [pc, #28]	; (800bc88 <vTaskPlaceOnEventListRestricted+0x38>)
 800bc6c:	6819      	ldr	r1, [r3, #0]
 800bc6e:	3118      	adds	r1, #24
 800bc70:	f7fe fd4e 	bl	800a710 <vListInsertEnd>
			xTicksToWait = portMAX_DELAY;
 800bc74:	2c00      	cmp	r4, #0
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800bc76:	4621      	mov	r1, r4
 800bc78:	bf0c      	ite	eq
 800bc7a:	4628      	moveq	r0, r5
 800bc7c:	f04f 30ff 	movne.w	r0, #4294967295
	}
 800bc80:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800bc84:	f7ff bc9e 	b.w	800b5c4 <prvAddCurrentTaskToDelayedList>
 800bc88:	20017318 	.word	0x20017318

0800bc8c <xTaskRemoveFromEventList>:
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800bc8c:	68c3      	ldr	r3, [r0, #12]
{
 800bc8e:	b513      	push	{r0, r1, r4, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800bc90:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
 800bc92:	b944      	cbnz	r4, 800bca6 <xTaskRemoveFromEventList+0x1a>
 800bc94:	f04f 0350 	mov.w	r3, #80	; 0x50
 800bc98:	f383 8811 	msr	BASEPRI, r3
 800bc9c:	f3bf 8f6f 	isb	sy
 800bca0:	f3bf 8f4f 	dsb	sy
 800bca4:	e7fe      	b.n	800bca4 <xTaskRemoveFromEventList+0x18>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 800bca6:	f104 0118 	add.w	r1, r4, #24
 800bcaa:	4608      	mov	r0, r1
 800bcac:	9101      	str	r1, [sp, #4]
 800bcae:	f7fe fd52 	bl	800a756 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800bcb2:	4b12      	ldr	r3, [pc, #72]	; (800bcfc <xTaskRemoveFromEventList+0x70>)
 800bcb4:	9901      	ldr	r1, [sp, #4]
 800bcb6:	681b      	ldr	r3, [r3, #0]
 800bcb8:	b9eb      	cbnz	r3, 800bcf6 <xTaskRemoveFromEventList+0x6a>
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 800bcba:	1d21      	adds	r1, r4, #4
 800bcbc:	4608      	mov	r0, r1
 800bcbe:	9101      	str	r1, [sp, #4]
 800bcc0:	f7fe fd49 	bl	800a756 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 800bcc4:	4a0e      	ldr	r2, [pc, #56]	; (800bd00 <xTaskRemoveFromEventList+0x74>)
 800bcc6:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800bcc8:	6810      	ldr	r0, [r2, #0]
 800bcca:	9901      	ldr	r1, [sp, #4]
 800bccc:	4283      	cmp	r3, r0
 800bcce:	bf88      	it	hi
 800bcd0:	6013      	strhi	r3, [r2, #0]
 800bcd2:	4a0c      	ldr	r2, [pc, #48]	; (800bd04 <xTaskRemoveFromEventList+0x78>)
 800bcd4:	2014      	movs	r0, #20
 800bcd6:	fb00 2003 	mla	r0, r0, r3, r2
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800bcda:	f7fe fd19 	bl	800a710 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 800bcde:	4b0a      	ldr	r3, [pc, #40]	; (800bd08 <xTaskRemoveFromEventList+0x7c>)
 800bce0:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800bce2:	681b      	ldr	r3, [r3, #0]
 800bce4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800bce6:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 800bce8:	bf85      	ittet	hi
 800bcea:	4b08      	ldrhi	r3, [pc, #32]	; (800bd0c <xTaskRemoveFromEventList+0x80>)
 800bcec:	2001      	movhi	r0, #1
		xReturn = pdFALSE;
 800bcee:	2000      	movls	r0, #0
		xYieldPending = pdTRUE;
 800bcf0:	6018      	strhi	r0, [r3, #0]
}
 800bcf2:	b002      	add	sp, #8
 800bcf4:	bd10      	pop	{r4, pc}
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800bcf6:	4806      	ldr	r0, [pc, #24]	; (800bd10 <xTaskRemoveFromEventList+0x84>)
 800bcf8:	e7ef      	b.n	800bcda <xTaskRemoveFromEventList+0x4e>
 800bcfa:	bf00      	nop
 800bcfc:	20017790 	.word	0x20017790
 800bd00:	20017798 	.word	0x20017798
 800bd04:	20017324 	.word	0x20017324
 800bd08:	20017318 	.word	0x20017318
 800bd0c:	20017810 	.word	0x20017810
 800bd10:	200177cc 	.word	0x200177cc

0800bd14 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800bd14:	4b03      	ldr	r3, [pc, #12]	; (800bd24 <vTaskInternalSetTimeOutState+0x10>)
 800bd16:	681b      	ldr	r3, [r3, #0]
 800bd18:	6003      	str	r3, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800bd1a:	4b03      	ldr	r3, [pc, #12]	; (800bd28 <vTaskInternalSetTimeOutState+0x14>)
 800bd1c:	681b      	ldr	r3, [r3, #0]
 800bd1e:	6043      	str	r3, [r0, #4]
}
 800bd20:	4770      	bx	lr
 800bd22:	bf00      	nop
 800bd24:	200177c8 	.word	0x200177c8
 800bd28:	2001780c 	.word	0x2001780c

0800bd2c <xTaskCheckForTimeOut>:
{
 800bd2c:	b570      	push	{r4, r5, r6, lr}
 800bd2e:	460c      	mov	r4, r1
	configASSERT( pxTimeOut );
 800bd30:	4605      	mov	r5, r0
 800bd32:	b940      	cbnz	r0, 800bd46 <xTaskCheckForTimeOut+0x1a>
 800bd34:	f04f 0350 	mov.w	r3, #80	; 0x50
 800bd38:	f383 8811 	msr	BASEPRI, r3
 800bd3c:	f3bf 8f6f 	isb	sy
 800bd40:	f3bf 8f4f 	dsb	sy
 800bd44:	e7fe      	b.n	800bd44 <xTaskCheckForTimeOut+0x18>
	configASSERT( pxTicksToWait );
 800bd46:	b941      	cbnz	r1, 800bd5a <xTaskCheckForTimeOut+0x2e>
 800bd48:	f04f 0350 	mov.w	r3, #80	; 0x50
 800bd4c:	f383 8811 	msr	BASEPRI, r3
 800bd50:	f3bf 8f6f 	isb	sy
 800bd54:	f3bf 8f4f 	dsb	sy
 800bd58:	e7fe      	b.n	800bd58 <xTaskCheckForTimeOut+0x2c>
	taskENTER_CRITICAL();
 800bd5a:	f7fe fd73 	bl	800a844 <vPortEnterCritical>
		const TickType_t xConstTickCount = xTickCount;
 800bd5e:	4b0f      	ldr	r3, [pc, #60]	; (800bd9c <xTaskCheckForTimeOut+0x70>)
 800bd60:	6819      	ldr	r1, [r3, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 800bd62:	6823      	ldr	r3, [r4, #0]
 800bd64:	1c5a      	adds	r2, r3, #1
 800bd66:	d010      	beq.n	800bd8a <xTaskCheckForTimeOut+0x5e>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800bd68:	480d      	ldr	r0, [pc, #52]	; (800bda0 <xTaskCheckForTimeOut+0x74>)
 800bd6a:	682e      	ldr	r6, [r5, #0]
 800bd6c:	6800      	ldr	r0, [r0, #0]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800bd6e:	686a      	ldr	r2, [r5, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800bd70:	4286      	cmp	r6, r0
 800bd72:	d001      	beq.n	800bd78 <xTaskCheckForTimeOut+0x4c>
 800bd74:	428a      	cmp	r2, r1
 800bd76:	d90f      	bls.n	800bd98 <xTaskCheckForTimeOut+0x6c>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800bd78:	1a88      	subs	r0, r1, r2
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 800bd7a:	4283      	cmp	r3, r0
 800bd7c:	d90a      	bls.n	800bd94 <xTaskCheckForTimeOut+0x68>
			*pxTicksToWait -= xElapsedTime;
 800bd7e:	1a5b      	subs	r3, r3, r1
 800bd80:	4413      	add	r3, r2
 800bd82:	6023      	str	r3, [r4, #0]
			vTaskInternalSetTimeOutState( pxTimeOut );
 800bd84:	4628      	mov	r0, r5
 800bd86:	f7ff ffc5 	bl	800bd14 <vTaskInternalSetTimeOutState>
				xReturn = pdFALSE;
 800bd8a:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 800bd8c:	f7fe fd7a 	bl	800a884 <vPortExitCritical>
}
 800bd90:	4620      	mov	r0, r4
 800bd92:	bd70      	pop	{r4, r5, r6, pc}
			*pxTicksToWait = 0;
 800bd94:	2300      	movs	r3, #0
 800bd96:	6023      	str	r3, [r4, #0]
			xReturn = pdTRUE;
 800bd98:	2401      	movs	r4, #1
 800bd9a:	e7f7      	b.n	800bd8c <xTaskCheckForTimeOut+0x60>
 800bd9c:	2001780c 	.word	0x2001780c
 800bda0:	200177c8 	.word	0x200177c8

0800bda4 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 800bda4:	4b01      	ldr	r3, [pc, #4]	; (800bdac <vTaskMissedYield+0x8>)
 800bda6:	2201      	movs	r2, #1
 800bda8:	601a      	str	r2, [r3, #0]
}
 800bdaa:	4770      	bx	lr
 800bdac:	20017810 	.word	0x20017810

0800bdb0 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 800bdb0:	4b05      	ldr	r3, [pc, #20]	; (800bdc8 <xTaskGetSchedulerState+0x18>)
 800bdb2:	681b      	ldr	r3, [r3, #0]
 800bdb4:	b133      	cbz	r3, 800bdc4 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800bdb6:	4b05      	ldr	r3, [pc, #20]	; (800bdcc <xTaskGetSchedulerState+0x1c>)
 800bdb8:	681b      	ldr	r3, [r3, #0]
				xReturn = taskSCHEDULER_SUSPENDED;
 800bdba:	2b00      	cmp	r3, #0
 800bdbc:	bf0c      	ite	eq
 800bdbe:	2002      	moveq	r0, #2
 800bdc0:	2000      	movne	r0, #0
 800bdc2:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 800bdc4:	2001      	movs	r0, #1
	}
 800bdc6:	4770      	bx	lr
 800bdc8:	200177e0 	.word	0x200177e0
 800bdcc:	20017790 	.word	0x20017790

0800bdd0 <xTaskPriorityInherit>:
	{
 800bdd0:	b573      	push	{r0, r1, r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 800bdd2:	4604      	mov	r4, r0
 800bdd4:	b348      	cbz	r0, 800be2a <xTaskPriorityInherit+0x5a>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 800bdd6:	4d1c      	ldr	r5, [pc, #112]	; (800be48 <xTaskPriorityInherit+0x78>)
 800bdd8:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800bdda:	682a      	ldr	r2, [r5, #0]
 800bddc:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800bdde:	4293      	cmp	r3, r2
 800bde0:	d229      	bcs.n	800be36 <xTaskPriorityInherit+0x66>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800bde2:	6982      	ldr	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800bde4:	4e19      	ldr	r6, [pc, #100]	; (800be4c <xTaskPriorityInherit+0x7c>)
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800bde6:	2a00      	cmp	r2, #0
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800bde8:	bfa1      	itttt	ge
 800bdea:	682a      	ldrge	r2, [r5, #0]
 800bdec:	6ad2      	ldrge	r2, [r2, #44]	; 0x2c
 800bdee:	f1c2 0238 	rsbge	r2, r2, #56	; 0x38
 800bdf2:	6182      	strge	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800bdf4:	2214      	movs	r2, #20
 800bdf6:	fb02 6303 	mla	r3, r2, r3, r6
 800bdfa:	6942      	ldr	r2, [r0, #20]
 800bdfc:	429a      	cmp	r2, r3
 800bdfe:	d116      	bne.n	800be2e <xTaskPriorityInherit+0x5e>
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800be00:	1d01      	adds	r1, r0, #4
 800be02:	4608      	mov	r0, r1
 800be04:	9101      	str	r1, [sp, #4]
 800be06:	f7fe fca6 	bl	800a756 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800be0a:	682b      	ldr	r3, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800be0c:	4a10      	ldr	r2, [pc, #64]	; (800be50 <xTaskPriorityInherit+0x80>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800be0e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800be10:	6810      	ldr	r0, [r2, #0]
 800be12:	9901      	ldr	r1, [sp, #4]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800be14:	62e3      	str	r3, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800be16:	4283      	cmp	r3, r0
 800be18:	f04f 0014 	mov.w	r0, #20
 800be1c:	fb00 6003 	mla	r0, r0, r3, r6
 800be20:	bf88      	it	hi
 800be22:	6013      	strhi	r3, [r2, #0]
 800be24:	f7fe fc74 	bl	800a710 <vListInsertEnd>
				xReturn = pdTRUE;
 800be28:	2001      	movs	r0, #1
	}
 800be2a:	b002      	add	sp, #8
 800be2c:	bd70      	pop	{r4, r5, r6, pc}
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800be2e:	682b      	ldr	r3, [r5, #0]
 800be30:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800be32:	62c3      	str	r3, [r0, #44]	; 0x2c
 800be34:	e7f8      	b.n	800be28 <xTaskPriorityInherit+0x58>
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 800be36:	682b      	ldr	r3, [r5, #0]
 800be38:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800be3a:	6adc      	ldr	r4, [r3, #44]	; 0x2c
 800be3c:	42a0      	cmp	r0, r4
 800be3e:	bf2c      	ite	cs
 800be40:	2000      	movcs	r0, #0
 800be42:	2001      	movcc	r0, #1
 800be44:	e7f1      	b.n	800be2a <xTaskPriorityInherit+0x5a>
 800be46:	bf00      	nop
 800be48:	20017318 	.word	0x20017318
 800be4c:	20017324 	.word	0x20017324
 800be50:	20017798 	.word	0x20017798

0800be54 <xTaskPriorityDisinherit>:
	{
 800be54:	b513      	push	{r0, r1, r4, lr}
		if( pxMutexHolder != NULL )
 800be56:	b910      	cbnz	r0, 800be5e <xTaskPriorityDisinherit+0xa>
	BaseType_t xReturn = pdFALSE;
 800be58:	2000      	movs	r0, #0
	}
 800be5a:	b002      	add	sp, #8
 800be5c:	bd10      	pop	{r4, pc}
			configASSERT( pxTCB == pxCurrentTCB );
 800be5e:	4b1c      	ldr	r3, [pc, #112]	; (800bed0 <xTaskPriorityDisinherit+0x7c>)
 800be60:	681c      	ldr	r4, [r3, #0]
 800be62:	4284      	cmp	r4, r0
 800be64:	d008      	beq.n	800be78 <xTaskPriorityDisinherit+0x24>
 800be66:	f04f 0350 	mov.w	r3, #80	; 0x50
 800be6a:	f383 8811 	msr	BASEPRI, r3
 800be6e:	f3bf 8f6f 	isb	sy
 800be72:	f3bf 8f4f 	dsb	sy
 800be76:	e7fe      	b.n	800be76 <xTaskPriorityDisinherit+0x22>
			configASSERT( pxTCB->uxMutexesHeld );
 800be78:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800be7a:	b943      	cbnz	r3, 800be8e <xTaskPriorityDisinherit+0x3a>
 800be7c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800be80:	f383 8811 	msr	BASEPRI, r3
 800be84:	f3bf 8f6f 	isb	sy
 800be88:	f3bf 8f4f 	dsb	sy
 800be8c:	e7fe      	b.n	800be8c <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800be8e:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800be90:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 800be92:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800be94:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 800be96:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800be98:	d0de      	beq.n	800be58 <xTaskPriorityDisinherit+0x4>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 800be9a:	2b00      	cmp	r3, #0
 800be9c:	d1dc      	bne.n	800be58 <xTaskPriorityDisinherit+0x4>
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800be9e:	1d21      	adds	r1, r4, #4
 800bea0:	4608      	mov	r0, r1
 800bea2:	9101      	str	r1, [sp, #4]
 800bea4:	f7fe fc57 	bl	800a756 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800bea8:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
 800beaa:	9901      	ldr	r1, [sp, #4]
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800beac:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800beae:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
 800beb2:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 800beb4:	4a07      	ldr	r2, [pc, #28]	; (800bed4 <xTaskPriorityDisinherit+0x80>)
 800beb6:	6810      	ldr	r0, [r2, #0]
 800beb8:	4283      	cmp	r3, r0
 800beba:	bf88      	it	hi
 800bebc:	6013      	strhi	r3, [r2, #0]
 800bebe:	4a06      	ldr	r2, [pc, #24]	; (800bed8 <xTaskPriorityDisinherit+0x84>)
 800bec0:	2014      	movs	r0, #20
 800bec2:	fb00 2003 	mla	r0, r0, r3, r2
 800bec6:	f7fe fc23 	bl	800a710 <vListInsertEnd>
					xReturn = pdTRUE;
 800beca:	2001      	movs	r0, #1
		return xReturn;
 800becc:	e7c5      	b.n	800be5a <xTaskPriorityDisinherit+0x6>
 800bece:	bf00      	nop
 800bed0:	20017318 	.word	0x20017318
 800bed4:	20017798 	.word	0x20017798
 800bed8:	20017324 	.word	0x20017324

0800bedc <vTaskPriorityDisinheritAfterTimeout>:
	{
 800bedc:	b537      	push	{r0, r1, r2, r4, r5, lr}
		if( pxMutexHolder != NULL )
 800bede:	4604      	mov	r4, r0
 800bee0:	2800      	cmp	r0, #0
 800bee2:	d044      	beq.n	800bf6e <vTaskPriorityDisinheritAfterTimeout+0x92>
			configASSERT( pxTCB->uxMutexesHeld );
 800bee4:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800bee6:	b942      	cbnz	r2, 800befa <vTaskPriorityDisinheritAfterTimeout+0x1e>
 800bee8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800beec:	f383 8811 	msr	BASEPRI, r3
 800bef0:	f3bf 8f6f 	isb	sy
 800bef4:	f3bf 8f4f 	dsb	sy
 800bef8:	e7fe      	b.n	800bef8 <vTaskPriorityDisinheritAfterTimeout+0x1c>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 800befa:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 800befc:	4299      	cmp	r1, r3
 800befe:	bf38      	it	cc
 800bf00:	4619      	movcc	r1, r3
			if( pxTCB->uxPriority != uxPriorityToUse )
 800bf02:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800bf04:	428b      	cmp	r3, r1
 800bf06:	d032      	beq.n	800bf6e <vTaskPriorityDisinheritAfterTimeout+0x92>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 800bf08:	2a01      	cmp	r2, #1
 800bf0a:	d130      	bne.n	800bf6e <vTaskPriorityDisinheritAfterTimeout+0x92>
					configASSERT( pxTCB != pxCurrentTCB );
 800bf0c:	4a19      	ldr	r2, [pc, #100]	; (800bf74 <vTaskPriorityDisinheritAfterTimeout+0x98>)
 800bf0e:	6812      	ldr	r2, [r2, #0]
 800bf10:	4282      	cmp	r2, r0
 800bf12:	d108      	bne.n	800bf26 <vTaskPriorityDisinheritAfterTimeout+0x4a>
 800bf14:	f04f 0350 	mov.w	r3, #80	; 0x50
 800bf18:	f383 8811 	msr	BASEPRI, r3
 800bf1c:	f3bf 8f6f 	isb	sy
 800bf20:	f3bf 8f4f 	dsb	sy
 800bf24:	e7fe      	b.n	800bf24 <vTaskPriorityDisinheritAfterTimeout+0x48>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800bf26:	6982      	ldr	r2, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800bf28:	4d13      	ldr	r5, [pc, #76]	; (800bf78 <vTaskPriorityDisinheritAfterTimeout+0x9c>)
					pxTCB->uxPriority = uxPriorityToUse;
 800bf2a:	62c1      	str	r1, [r0, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800bf2c:	2a00      	cmp	r2, #0
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800bf2e:	f04f 0214 	mov.w	r2, #20
 800bf32:	fb02 5303 	mla	r3, r2, r3, r5
 800bf36:	6942      	ldr	r2, [r0, #20]
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800bf38:	bfa4      	itt	ge
 800bf3a:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
 800bf3e:	6181      	strge	r1, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800bf40:	429a      	cmp	r2, r3
 800bf42:	d114      	bne.n	800bf6e <vTaskPriorityDisinheritAfterTimeout+0x92>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800bf44:	1d01      	adds	r1, r0, #4
 800bf46:	4608      	mov	r0, r1
 800bf48:	9101      	str	r1, [sp, #4]
 800bf4a:	f7fe fc04 	bl	800a756 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 800bf4e:	4a0b      	ldr	r2, [pc, #44]	; (800bf7c <vTaskPriorityDisinheritAfterTimeout+0xa0>)
 800bf50:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800bf52:	6810      	ldr	r0, [r2, #0]
 800bf54:	9901      	ldr	r1, [sp, #4]
 800bf56:	4283      	cmp	r3, r0
 800bf58:	f04f 0014 	mov.w	r0, #20
 800bf5c:	fb00 5003 	mla	r0, r0, r3, r5
 800bf60:	bf88      	it	hi
 800bf62:	6013      	strhi	r3, [r2, #0]
	}
 800bf64:	b003      	add	sp, #12
 800bf66:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
 800bf6a:	f7fe bbd1 	b.w	800a710 <vListInsertEnd>
	}
 800bf6e:	b003      	add	sp, #12
 800bf70:	bd30      	pop	{r4, r5, pc}
 800bf72:	bf00      	nop
 800bf74:	20017318 	.word	0x20017318
 800bf78:	20017324 	.word	0x20017324
 800bf7c:	20017798 	.word	0x20017798

0800bf80 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 800bf80:	4b04      	ldr	r3, [pc, #16]	; (800bf94 <pvTaskIncrementMutexHeldCount+0x14>)
 800bf82:	681a      	ldr	r2, [r3, #0]
 800bf84:	b11a      	cbz	r2, 800bf8e <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 800bf86:	6819      	ldr	r1, [r3, #0]
 800bf88:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 800bf8a:	3201      	adds	r2, #1
 800bf8c:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 800bf8e:	6818      	ldr	r0, [r3, #0]
	}
 800bf90:	4770      	bx	lr
 800bf92:	bf00      	nop
 800bf94:	20017318 	.word	0x20017318

0800bf98 <prvCheckForValidListAndQueue>:
	pxOverflowTimerList = pxTemp;
}
/*-----------------------------------------------------------*/

static void prvCheckForValidListAndQueue( void )
{
 800bf98:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 800bf9a:	4c11      	ldr	r4, [pc, #68]	; (800bfe0 <prvCheckForValidListAndQueue+0x48>)
	taskENTER_CRITICAL();
 800bf9c:	f7fe fc52 	bl	800a844 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 800bfa0:	6825      	ldr	r5, [r4, #0]
 800bfa2:	b9bd      	cbnz	r5, 800bfd4 <prvCheckForValidListAndQueue+0x3c>
		{
			vListInitialise( &xActiveTimerList1 );
 800bfa4:	4f0f      	ldr	r7, [pc, #60]	; (800bfe4 <prvCheckForValidListAndQueue+0x4c>)
			vListInitialise( &xActiveTimerList2 );
 800bfa6:	4e10      	ldr	r6, [pc, #64]	; (800bfe8 <prvCheckForValidListAndQueue+0x50>)
			vListInitialise( &xActiveTimerList1 );
 800bfa8:	4638      	mov	r0, r7
 800bfaa:	f7fe fba3 	bl	800a6f4 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 800bfae:	4630      	mov	r0, r6
 800bfb0:	f7fe fba0 	bl	800a6f4 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 800bfb4:	4b0d      	ldr	r3, [pc, #52]	; (800bfec <prvCheckForValidListAndQueue+0x54>)
				/* The timer queue is allocated statically in case
				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800bfb6:	4a0e      	ldr	r2, [pc, #56]	; (800bff0 <prvCheckForValidListAndQueue+0x58>)
			pxCurrentTimerList = &xActiveTimerList1;
 800bfb8:	601f      	str	r7, [r3, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 800bfba:	4b0e      	ldr	r3, [pc, #56]	; (800bff4 <prvCheckForValidListAndQueue+0x5c>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800bfbc:	2110      	movs	r1, #16
			pxOverflowTimerList = &xActiveTimerList2;
 800bfbe:	601e      	str	r6, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800bfc0:	200a      	movs	r0, #10
 800bfc2:	4b0d      	ldr	r3, [pc, #52]	; (800bff8 <prvCheckForValidListAndQueue+0x60>)
 800bfc4:	9500      	str	r5, [sp, #0]
 800bfc6:	f7fe fe4e 	bl	800ac66 <xQueueGenericCreateStatic>
 800bfca:	6020      	str	r0, [r4, #0]
			}
			#endif

			#if ( configQUEUE_REGISTRY_SIZE > 0 )
			{
				if( xTimerQueue != NULL )
 800bfcc:	b110      	cbz	r0, 800bfd4 <prvCheckForValidListAndQueue+0x3c>
				{
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 800bfce:	490b      	ldr	r1, [pc, #44]	; (800bffc <prvCheckForValidListAndQueue+0x64>)
 800bfd0:	f7ff fa18 	bl	800b404 <vQueueAddToRegistry>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
}
 800bfd4:	b003      	add	sp, #12
 800bfd6:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	taskEXIT_CRITICAL();
 800bfda:	f7fe bc53 	b.w	800a884 <vPortExitCritical>
 800bfde:	bf00      	nop
 800bfe0:	20017938 	.word	0x20017938
 800bfe4:	200178bc 	.word	0x200178bc
 800bfe8:	200178d0 	.word	0x200178d0
 800bfec:	20017814 	.word	0x20017814
 800bff0:	2001781c 	.word	0x2001781c
 800bff4:	20017818 	.word	0x20017818
 800bff8:	200178e8 	.word	0x200178e8
 800bffc:	08024b61 	.word	0x08024b61

0800c000 <prvInsertTimerInActiveList>:
	if( xNextExpiryTime <= xTimeNow )
 800c000:	4291      	cmp	r1, r2
{
 800c002:	b508      	push	{r3, lr}
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800c004:	6041      	str	r1, [r0, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800c006:	6100      	str	r0, [r0, #16]
	if( xNextExpiryTime <= xTimeNow )
 800c008:	d80a      	bhi.n	800c020 <prvInsertTimerInActiveList+0x20>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800c00a:	1ad2      	subs	r2, r2, r3
 800c00c:	6983      	ldr	r3, [r0, #24]
 800c00e:	429a      	cmp	r2, r3
 800c010:	d20d      	bcs.n	800c02e <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 800c012:	4b08      	ldr	r3, [pc, #32]	; (800c034 <prvInsertTimerInActiveList+0x34>)
 800c014:	1d01      	adds	r1, r0, #4
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800c016:	6818      	ldr	r0, [r3, #0]
 800c018:	f7fe fb86 	bl	800a728 <vListInsert>
BaseType_t xProcessTimerNow = pdFALSE;
 800c01c:	2000      	movs	r0, #0
}
 800c01e:	bd08      	pop	{r3, pc}
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 800c020:	429a      	cmp	r2, r3
 800c022:	d201      	bcs.n	800c028 <prvInsertTimerInActiveList+0x28>
 800c024:	4299      	cmp	r1, r3
 800c026:	d202      	bcs.n	800c02e <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800c028:	4b03      	ldr	r3, [pc, #12]	; (800c038 <prvInsertTimerInActiveList+0x38>)
 800c02a:	1d01      	adds	r1, r0, #4
 800c02c:	e7f3      	b.n	800c016 <prvInsertTimerInActiveList+0x16>
			xProcessTimerNow = pdTRUE;
 800c02e:	2001      	movs	r0, #1
	return xProcessTimerNow;
 800c030:	e7f5      	b.n	800c01e <prvInsertTimerInActiveList+0x1e>
 800c032:	bf00      	nop
 800c034:	20017818 	.word	0x20017818
 800c038:	20017814 	.word	0x20017814

0800c03c <xTimerCreateTimerTask>:
{
 800c03c:	b510      	push	{r4, lr}
 800c03e:	b088      	sub	sp, #32
	prvCheckForValidListAndQueue();
 800c040:	f7ff ffaa 	bl	800bf98 <prvCheckForValidListAndQueue>
	if( xTimerQueue != NULL )
 800c044:	4b12      	ldr	r3, [pc, #72]	; (800c090 <xTimerCreateTimerTask+0x54>)
 800c046:	681b      	ldr	r3, [r3, #0]
 800c048:	b1b3      	cbz	r3, 800c078 <xTimerCreateTimerTask+0x3c>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 800c04a:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800c04c:	aa07      	add	r2, sp, #28
 800c04e:	a906      	add	r1, sp, #24
 800c050:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 800c052:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800c056:	f7fe fa53 	bl	800a500 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 800c05a:	9b05      	ldr	r3, [sp, #20]
 800c05c:	9302      	str	r3, [sp, #8]
 800c05e:	9b06      	ldr	r3, [sp, #24]
 800c060:	9301      	str	r3, [sp, #4]
 800c062:	2302      	movs	r3, #2
 800c064:	9300      	str	r3, [sp, #0]
 800c066:	9a07      	ldr	r2, [sp, #28]
 800c068:	490a      	ldr	r1, [pc, #40]	; (800c094 <xTimerCreateTimerTask+0x58>)
 800c06a:	480b      	ldr	r0, [pc, #44]	; (800c098 <xTimerCreateTimerTask+0x5c>)
 800c06c:	4623      	mov	r3, r4
 800c06e:	f7ff fba3 	bl	800b7b8 <xTaskCreateStatic>
 800c072:	4b0a      	ldr	r3, [pc, #40]	; (800c09c <xTimerCreateTimerTask+0x60>)
 800c074:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 800c076:	b940      	cbnz	r0, 800c08a <xTimerCreateTimerTask+0x4e>
 800c078:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c07c:	f383 8811 	msr	BASEPRI, r3
 800c080:	f3bf 8f6f 	isb	sy
 800c084:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 800c088:	e7fe      	b.n	800c088 <xTimerCreateTimerTask+0x4c>
}
 800c08a:	2001      	movs	r0, #1
 800c08c:	b008      	add	sp, #32
 800c08e:	bd10      	pop	{r4, pc}
 800c090:	20017938 	.word	0x20017938
 800c094:	08024b66 	.word	0x08024b66
 800c098:	0800c1a5 	.word	0x0800c1a5
 800c09c:	2001793c 	.word	0x2001793c

0800c0a0 <xTimerGenericCommand>:
{
 800c0a0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800c0a2:	4616      	mov	r6, r2
	configASSERT( xTimer );
 800c0a4:	4604      	mov	r4, r0
{
 800c0a6:	461a      	mov	r2, r3
	configASSERT( xTimer );
 800c0a8:	b940      	cbnz	r0, 800c0bc <xTimerGenericCommand+0x1c>
 800c0aa:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c0ae:	f383 8811 	msr	BASEPRI, r3
 800c0b2:	f3bf 8f6f 	isb	sy
 800c0b6:	f3bf 8f4f 	dsb	sy
 800c0ba:	e7fe      	b.n	800c0ba <xTimerGenericCommand+0x1a>
	if( xTimerQueue != NULL )
 800c0bc:	4d0d      	ldr	r5, [pc, #52]	; (800c0f4 <xTimerGenericCommand+0x54>)
 800c0be:	6828      	ldr	r0, [r5, #0]
 800c0c0:	b180      	cbz	r0, 800c0e4 <xTimerGenericCommand+0x44>
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800c0c2:	2905      	cmp	r1, #5
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 800c0c4:	e9cd 1600 	strd	r1, r6, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800c0c8:	9402      	str	r4, [sp, #8]
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800c0ca:	dc0d      	bgt.n	800c0e8 <xTimerGenericCommand+0x48>
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800c0cc:	f7ff fe70 	bl	800bdb0 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800c0d0:	2300      	movs	r3, #0
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800c0d2:	2802      	cmp	r0, #2
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800c0d4:	bf08      	it	eq
 800c0d6:	9a08      	ldreq	r2, [sp, #32]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 800c0d8:	6828      	ldr	r0, [r5, #0]
 800c0da:	bf18      	it	ne
 800c0dc:	461a      	movne	r2, r3
 800c0de:	4669      	mov	r1, sp
 800c0e0:	f7fe fe76 	bl	800add0 <xQueueGenericSend>
}
 800c0e4:	b004      	add	sp, #16
 800c0e6:	bd70      	pop	{r4, r5, r6, pc}
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 800c0e8:	2300      	movs	r3, #0
 800c0ea:	4669      	mov	r1, sp
 800c0ec:	f7fe ff23 	bl	800af36 <xQueueGenericSendFromISR>
 800c0f0:	e7f8      	b.n	800c0e4 <xTimerGenericCommand+0x44>
 800c0f2:	bf00      	nop
 800c0f4:	20017938 	.word	0x20017938

0800c0f8 <prvSampleTimeNow>:
{
 800c0f8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
	if( xTimeNow < xLastTime )
 800c0fc:	f8df 80a0 	ldr.w	r8, [pc, #160]	; 800c1a0 <prvSampleTimeNow+0xa8>
{
 800c100:	4606      	mov	r6, r0
	xTimeNow = xTaskGetTickCount();
 800c102:	f7ff fc17 	bl	800b934 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800c106:	f8d8 3000 	ldr.w	r3, [r8]
 800c10a:	4283      	cmp	r3, r0
	xTimeNow = xTaskGetTickCount();
 800c10c:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
 800c10e:	d940      	bls.n	800c192 <prvSampleTimeNow+0x9a>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800c110:	4f21      	ldr	r7, [pc, #132]	; (800c198 <prvSampleTimeNow+0xa0>)
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800c112:	f04f 0900 	mov.w	r9, #0
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800c116:	683b      	ldr	r3, [r7, #0]
 800c118:	681a      	ldr	r2, [r3, #0]
 800c11a:	b95a      	cbnz	r2, 800c134 <prvSampleTimeNow+0x3c>
	pxCurrentTimerList = pxOverflowTimerList;
 800c11c:	4a1f      	ldr	r2, [pc, #124]	; (800c19c <prvSampleTimeNow+0xa4>)
 800c11e:	6811      	ldr	r1, [r2, #0]
 800c120:	6039      	str	r1, [r7, #0]
	pxOverflowTimerList = pxTemp;
 800c122:	6013      	str	r3, [r2, #0]
		*pxTimerListsWereSwitched = pdTRUE;
 800c124:	2301      	movs	r3, #1
}
 800c126:	4628      	mov	r0, r5
		*pxTimerListsWereSwitched = pdFALSE;
 800c128:	6033      	str	r3, [r6, #0]
	xLastTime = xTimeNow;
 800c12a:	f8c8 5000 	str.w	r5, [r8]
}
 800c12e:	b004      	add	sp, #16
 800c130:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800c134:	68db      	ldr	r3, [r3, #12]
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800c136:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800c138:	f8d3 a000 	ldr.w	sl, [r3]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800c13c:	1d21      	adds	r1, r4, #4
 800c13e:	4608      	mov	r0, r1
 800c140:	9103      	str	r1, [sp, #12]
 800c142:	f7fe fb08 	bl	800a756 <uxListRemove>
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800c146:	6a23      	ldr	r3, [r4, #32]
 800c148:	4620      	mov	r0, r4
 800c14a:	4798      	blx	r3
		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800c14c:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800c150:	9903      	ldr	r1, [sp, #12]
 800c152:	f013 0f04 	tst.w	r3, #4
 800c156:	d0de      	beq.n	800c116 <prvSampleTimeNow+0x1e>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 800c158:	69a3      	ldr	r3, [r4, #24]
 800c15a:	4453      	add	r3, sl
			if( xReloadTime > xNextExpireTime )
 800c15c:	459a      	cmp	sl, r3
 800c15e:	d205      	bcs.n	800c16c <prvSampleTimeNow+0x74>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800c160:	6838      	ldr	r0, [r7, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 800c162:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800c164:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800c166:	f7fe fadf 	bl	800a728 <vListInsert>
 800c16a:	e7d4      	b.n	800c116 <prvSampleTimeNow+0x1e>
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800c16c:	2300      	movs	r3, #0
 800c16e:	f8cd 9000 	str.w	r9, [sp]
 800c172:	4652      	mov	r2, sl
 800c174:	4619      	mov	r1, r3
 800c176:	4620      	mov	r0, r4
 800c178:	f7ff ff92 	bl	800c0a0 <xTimerGenericCommand>
				configASSERT( xResult );
 800c17c:	2800      	cmp	r0, #0
 800c17e:	d1ca      	bne.n	800c116 <prvSampleTimeNow+0x1e>
 800c180:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c184:	f383 8811 	msr	BASEPRI, r3
 800c188:	f3bf 8f6f 	isb	sy
 800c18c:	f3bf 8f4f 	dsb	sy
 800c190:	e7fe      	b.n	800c190 <prvSampleTimeNow+0x98>
		*pxTimerListsWereSwitched = pdFALSE;
 800c192:	2300      	movs	r3, #0
 800c194:	e7c7      	b.n	800c126 <prvSampleTimeNow+0x2e>
 800c196:	bf00      	nop
 800c198:	20017814 	.word	0x20017814
 800c19c:	20017818 	.word	0x20017818
 800c1a0:	200178e4 	.word	0x200178e4

0800c1a4 <prvTimerTask>:
{
 800c1a4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800c1a8:	4d6e      	ldr	r5, [pc, #440]	; (800c364 <prvTimerTask+0x1c0>)
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800c1aa:	4e6f      	ldr	r6, [pc, #444]	; (800c368 <prvTimerTask+0x1c4>)
{
 800c1ac:	b089      	sub	sp, #36	; 0x24
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800c1ae:	682b      	ldr	r3, [r5, #0]
 800c1b0:	f8d3 8000 	ldr.w	r8, [r3]
 800c1b4:	f1b8 0f00 	cmp.w	r8, #0
 800c1b8:	d035      	beq.n	800c226 <prvTimerTask+0x82>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800c1ba:	68db      	ldr	r3, [r3, #12]
 800c1bc:	f8d3 8000 	ldr.w	r8, [r3]
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800c1c0:	2400      	movs	r4, #0
	vTaskSuspendAll();
 800c1c2:	f7ff fbaf 	bl	800b924 <vTaskSuspendAll>
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800c1c6:	a804      	add	r0, sp, #16
 800c1c8:	f7ff ff96 	bl	800c0f8 <prvSampleTimeNow>
		if( xTimerListsWereSwitched == pdFALSE )
 800c1cc:	9b04      	ldr	r3, [sp, #16]
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800c1ce:	4681      	mov	r9, r0
		if( xTimerListsWereSwitched == pdFALSE )
 800c1d0:	2b00      	cmp	r3, #0
 800c1d2:	d169      	bne.n	800c2a8 <prvTimerTask+0x104>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800c1d4:	2c00      	cmp	r4, #0
 800c1d6:	d14c      	bne.n	800c272 <prvTimerTask+0xce>
 800c1d8:	4540      	cmp	r0, r8
 800c1da:	d350      	bcc.n	800c27e <prvTimerTask+0xda>
				( void ) xTaskResumeAll();
 800c1dc:	f7ff fc46 	bl	800ba6c <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800c1e0:	682b      	ldr	r3, [r5, #0]
 800c1e2:	68db      	ldr	r3, [r3, #12]
 800c1e4:	68df      	ldr	r7, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800c1e6:	1d38      	adds	r0, r7, #4
 800c1e8:	f7fe fab5 	bl	800a756 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800c1ec:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800c1f0:	0758      	lsls	r0, r3, #29
 800c1f2:	d51a      	bpl.n	800c22a <prvTimerTask+0x86>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 800c1f4:	69b9      	ldr	r1, [r7, #24]
 800c1f6:	4643      	mov	r3, r8
 800c1f8:	464a      	mov	r2, r9
 800c1fa:	4441      	add	r1, r8
 800c1fc:	4638      	mov	r0, r7
 800c1fe:	f7ff feff 	bl	800c000 <prvInsertTimerInActiveList>
 800c202:	b1b0      	cbz	r0, 800c232 <prvTimerTask+0x8e>
			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800c204:	9400      	str	r4, [sp, #0]
 800c206:	4623      	mov	r3, r4
 800c208:	4642      	mov	r2, r8
 800c20a:	4621      	mov	r1, r4
 800c20c:	4638      	mov	r0, r7
 800c20e:	f7ff ff47 	bl	800c0a0 <xTimerGenericCommand>
			configASSERT( xResult );
 800c212:	b970      	cbnz	r0, 800c232 <prvTimerTask+0x8e>
 800c214:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c218:	f383 8811 	msr	BASEPRI, r3
 800c21c:	f3bf 8f6f 	isb	sy
 800c220:	f3bf 8f4f 	dsb	sy
 800c224:	e7fe      	b.n	800c224 <prvTimerTask+0x80>
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800c226:	2401      	movs	r4, #1
 800c228:	e7cb      	b.n	800c1c2 <prvTimerTask+0x1e>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800c22a:	f023 0301 	bic.w	r3, r3, #1
 800c22e:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800c232:	6a3b      	ldr	r3, [r7, #32]
 800c234:	4638      	mov	r0, r7
 800c236:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 800c238:	6830      	ldr	r0, [r6, #0]
 800c23a:	2200      	movs	r2, #0
 800c23c:	a904      	add	r1, sp, #16
 800c23e:	f7fe ff2f 	bl	800b0a0 <xQueueReceive>
 800c242:	2800      	cmp	r0, #0
 800c244:	d0b3      	beq.n	800c1ae <prvTimerTask+0xa>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800c246:	9b04      	ldr	r3, [sp, #16]
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800c248:	9806      	ldr	r0, [sp, #24]
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800c24a:	2b00      	cmp	r3, #0
 800c24c:	db2f      	blt.n	800c2ae <prvTimerTask+0x10a>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 800c24e:	9c06      	ldr	r4, [sp, #24]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 800c250:	6963      	ldr	r3, [r4, #20]
 800c252:	2b00      	cmp	r3, #0
 800c254:	d132      	bne.n	800c2bc <prvTimerTask+0x118>
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800c256:	a803      	add	r0, sp, #12
 800c258:	f7ff ff4e 	bl	800c0f8 <prvSampleTimeNow>
			switch( xMessage.xMessageID )
 800c25c:	9b04      	ldr	r3, [sp, #16]
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800c25e:	4602      	mov	r2, r0
			switch( xMessage.xMessageID )
 800c260:	2b09      	cmp	r3, #9
 800c262:	d8e9      	bhi.n	800c238 <prvTimerTask+0x94>
 800c264:	e8df f003 	tbb	[pc, r3]
 800c268:	572e2e2e 	.word	0x572e2e2e
 800c26c:	2e2e765e 	.word	0x2e2e765e
 800c270:	5e57      	.short	0x5e57
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 800c272:	4b3e      	ldr	r3, [pc, #248]	; (800c36c <prvTimerTask+0x1c8>)
 800c274:	681b      	ldr	r3, [r3, #0]
 800c276:	681c      	ldr	r4, [r3, #0]
 800c278:	fab4 f484 	clz	r4, r4
 800c27c:	0964      	lsrs	r4, r4, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800c27e:	6830      	ldr	r0, [r6, #0]
 800c280:	4622      	mov	r2, r4
 800c282:	eba8 0109 	sub.w	r1, r8, r9
 800c286:	f7ff f8fa 	bl	800b47e <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 800c28a:	f7ff fbef 	bl	800ba6c <xTaskResumeAll>
 800c28e:	2800      	cmp	r0, #0
 800c290:	d1d2      	bne.n	800c238 <prvTimerTask+0x94>
					portYIELD_WITHIN_API();
 800c292:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800c296:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800c29a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800c29e:	f3bf 8f4f 	dsb	sy
 800c2a2:	f3bf 8f6f 	isb	sy
 800c2a6:	e7c7      	b.n	800c238 <prvTimerTask+0x94>
			( void ) xTaskResumeAll();
 800c2a8:	f7ff fbe0 	bl	800ba6c <xTaskResumeAll>
}
 800c2ac:	e7c4      	b.n	800c238 <prvTimerTask+0x94>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800c2ae:	9b05      	ldr	r3, [sp, #20]
 800c2b0:	9907      	ldr	r1, [sp, #28]
 800c2b2:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 800c2b4:	9b04      	ldr	r3, [sp, #16]
 800c2b6:	2b00      	cmp	r3, #0
 800c2b8:	dbbe      	blt.n	800c238 <prvTimerTask+0x94>
 800c2ba:	e7c8      	b.n	800c24e <prvTimerTask+0xaa>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800c2bc:	1d20      	adds	r0, r4, #4
 800c2be:	f7fe fa4a 	bl	800a756 <uxListRemove>
 800c2c2:	e7c8      	b.n	800c256 <prvTimerTask+0xb2>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800c2c4:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800c2c8:	69a1      	ldr	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800c2ca:	f043 0301 	orr.w	r3, r3, #1
 800c2ce:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800c2d2:	9b05      	ldr	r3, [sp, #20]
 800c2d4:	4620      	mov	r0, r4
 800c2d6:	4419      	add	r1, r3
 800c2d8:	f7ff fe92 	bl	800c000 <prvInsertTimerInActiveList>
 800c2dc:	2800      	cmp	r0, #0
 800c2de:	d0ab      	beq.n	800c238 <prvTimerTask+0x94>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800c2e0:	6a23      	ldr	r3, [r4, #32]
 800c2e2:	4620      	mov	r0, r4
 800c2e4:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800c2e6:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800c2ea:	0759      	lsls	r1, r3, #29
 800c2ec:	d5a4      	bpl.n	800c238 <prvTimerTask+0x94>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 800c2ee:	69a2      	ldr	r2, [r4, #24]
 800c2f0:	9905      	ldr	r1, [sp, #20]
 800c2f2:	2300      	movs	r3, #0
 800c2f4:	440a      	add	r2, r1
 800c2f6:	9300      	str	r3, [sp, #0]
 800c2f8:	4619      	mov	r1, r3
 800c2fa:	4620      	mov	r0, r4
 800c2fc:	f7ff fed0 	bl	800c0a0 <xTimerGenericCommand>
							configASSERT( xResult );
 800c300:	2800      	cmp	r0, #0
 800c302:	d199      	bne.n	800c238 <prvTimerTask+0x94>
 800c304:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c308:	f383 8811 	msr	BASEPRI, r3
 800c30c:	f3bf 8f6f 	isb	sy
 800c310:	f3bf 8f4f 	dsb	sy
 800c314:	e7fe      	b.n	800c314 <prvTimerTask+0x170>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800c316:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800c31a:	f023 0301 	bic.w	r3, r3, #1
 800c31e:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
 800c322:	e789      	b.n	800c238 <prvTimerTask+0x94>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800c324:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800c328:	f043 0301 	orr.w	r3, r3, #1
 800c32c:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 800c330:	9905      	ldr	r1, [sp, #20]
 800c332:	61a1      	str	r1, [r4, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 800c334:	b941      	cbnz	r1, 800c348 <prvTimerTask+0x1a4>
 800c336:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c33a:	f383 8811 	msr	BASEPRI, r3
 800c33e:	f3bf 8f6f 	isb	sy
 800c342:	f3bf 8f4f 	dsb	sy
 800c346:	e7fe      	b.n	800c346 <prvTimerTask+0x1a2>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 800c348:	4603      	mov	r3, r0
 800c34a:	4401      	add	r1, r0
 800c34c:	4620      	mov	r0, r4
 800c34e:	f7ff fe57 	bl	800c000 <prvInsertTimerInActiveList>
					break;
 800c352:	e771      	b.n	800c238 <prvTimerTask+0x94>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 800c354:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800c358:	079a      	lsls	r2, r3, #30
 800c35a:	d4de      	bmi.n	800c31a <prvTimerTask+0x176>
							vPortFree( pxTimer );
 800c35c:	4620      	mov	r0, r4
 800c35e:	f7fe f991 	bl	800a684 <vPortFree>
 800c362:	e769      	b.n	800c238 <prvTimerTask+0x94>
 800c364:	20017814 	.word	0x20017814
 800c368:	20017938 	.word	0x20017938
 800c36c:	20017818 	.word	0x20017818

0800c370 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 800c370:	8880      	ldrh	r0, [r0, #4]
 800c372:	4770      	bx	lr

0800c374 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 800c374:	b570      	push	{r4, r5, r6, lr}
 800c376:	6803      	ldr	r3, [r0, #0]
 800c378:	4605      	mov	r5, r0
 800c37a:	460c      	mov	r4, r1
 800c37c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c37e:	2100      	movs	r1, #0
 800c380:	4798      	blx	r3
 800c382:	682b      	ldr	r3, [r5, #0]
 800c384:	4606      	mov	r6, r0
 800c386:	6a1b      	ldr	r3, [r3, #32]
 800c388:	4628      	mov	r0, r5
 800c38a:	4798      	blx	r3
 800c38c:	1ba4      	subs	r4, r4, r6
 800c38e:	b2a4      	uxth	r4, r4
 800c390:	fbb4 f0f0 	udiv	r0, r4, r0
 800c394:	bd70      	pop	{r4, r5, r6, pc}

0800c396 <_ZN8touchgfx17AbstractPartition5clearEv>:
 800c396:	2300      	movs	r3, #0
 800c398:	8083      	strh	r3, [r0, #4]
 800c39a:	4770      	bx	lr

0800c39c <_ZN8touchgfx17AbstractPartition8allocateEt>:
 800c39c:	b510      	push	{r4, lr}
 800c39e:	6803      	ldr	r3, [r0, #0]
 800c3a0:	8881      	ldrh	r1, [r0, #4]
 800c3a2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c3a4:	4604      	mov	r4, r0
 800c3a6:	4798      	blx	r3
 800c3a8:	88a3      	ldrh	r3, [r4, #4]
 800c3aa:	3301      	adds	r3, #1
 800c3ac:	80a3      	strh	r3, [r4, #4]
 800c3ae:	bd10      	pop	{r4, pc}

0800c3b0 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 800c3b0:	6803      	ldr	r3, [r0, #0]
 800c3b2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c3b4:	4718      	bx	r3

0800c3b6 <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800c3b6:	4770      	bx	lr

0800c3b8 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800c3b8:	4a02      	ldr	r2, [pc, #8]	; (800c3c4 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800c3ba:	6002      	str	r2, [r0, #0]
 800c3bc:	2200      	movs	r2, #0
 800c3be:	8082      	strh	r2, [r0, #4]
 800c3c0:	4770      	bx	lr
 800c3c2:	bf00      	nop
 800c3c4:	08024b78 	.word	0x08024b78

0800c3c8 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 800c3c8:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800c3ca:	2000      	movs	r0, #0
 800c3cc:	b12b      	cbz	r3, 800c3da <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800c3ce:	b920      	cbnz	r0, 800c3da <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800c3d0:	1a5a      	subs	r2, r3, r1
 800c3d2:	4250      	negs	r0, r2
 800c3d4:	4150      	adcs	r0, r2
 800c3d6:	699b      	ldr	r3, [r3, #24]
 800c3d8:	e7f8      	b.n	800c3cc <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 800c3da:	4770      	bx	lr

0800c3dc <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 800c3dc:	2300      	movs	r3, #0
 800c3de:	6148      	str	r0, [r1, #20]
 800c3e0:	618b      	str	r3, [r1, #24]
 800c3e2:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800c3e4:	b913      	cbnz	r3, 800c3ec <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 800c3e6:	6281      	str	r1, [r0, #40]	; 0x28
 800c3e8:	4770      	bx	lr
 800c3ea:	4613      	mov	r3, r2
 800c3ec:	699a      	ldr	r2, [r3, #24]
 800c3ee:	2a00      	cmp	r2, #0
 800c3f0:	d1fb      	bne.n	800c3ea <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 800c3f2:	6199      	str	r1, [r3, #24]
 800c3f4:	4770      	bx	lr

0800c3f6 <_ZN8touchgfx9Container9removeAllEv>:
 800c3f6:	2200      	movs	r2, #0
 800c3f8:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800c3fa:	b123      	cbz	r3, 800c406 <_ZN8touchgfx9Container9removeAllEv+0x10>
 800c3fc:	6999      	ldr	r1, [r3, #24]
 800c3fe:	6281      	str	r1, [r0, #40]	; 0x28
 800c400:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800c404:	e7f8      	b.n	800c3f8 <_ZN8touchgfx9Container9removeAllEv+0x2>
 800c406:	4770      	bx	lr

0800c408 <_ZN8touchgfx9Container6unlinkEv>:
 800c408:	2300      	movs	r3, #0
 800c40a:	6283      	str	r3, [r0, #40]	; 0x28
 800c40c:	4770      	bx	lr

0800c40e <_ZNK8touchgfx9Container12getSolidRectEv>:
 800c40e:	2200      	movs	r2, #0
 800c410:	8002      	strh	r2, [r0, #0]
 800c412:	8042      	strh	r2, [r0, #2]
 800c414:	8082      	strh	r2, [r0, #4]
 800c416:	80c2      	strh	r2, [r0, #6]
 800c418:	4770      	bx	lr

0800c41a <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 800c41a:	b570      	push	{r4, r5, r6, lr}
 800c41c:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800c41e:	460d      	mov	r5, r1
 800c420:	4616      	mov	r6, r2
 800c422:	b13c      	cbz	r4, 800c434 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 800c424:	6823      	ldr	r3, [r4, #0]
 800c426:	4620      	mov	r0, r4
 800c428:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800c42a:	4632      	mov	r2, r6
 800c42c:	4629      	mov	r1, r5
 800c42e:	4798      	blx	r3
 800c430:	69a4      	ldr	r4, [r4, #24]
 800c432:	e7f6      	b.n	800c422 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 800c434:	bd70      	pop	{r4, r5, r6, pc}

0800c436 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 800c436:	b538      	push	{r3, r4, r5, lr}
 800c438:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800c43a:	460d      	mov	r5, r1
 800c43c:	b134      	cbz	r4, 800c44c <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 800c43e:	682b      	ldr	r3, [r5, #0]
 800c440:	4621      	mov	r1, r4
 800c442:	689b      	ldr	r3, [r3, #8]
 800c444:	4628      	mov	r0, r5
 800c446:	4798      	blx	r3
 800c448:	69a4      	ldr	r4, [r4, #24]
 800c44a:	e7f7      	b.n	800c43c <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 800c44c:	bd38      	pop	{r3, r4, r5, pc}

0800c44e <_ZNK8touchgfx9Container17invalidateContentEv>:
 800c44e:	b510      	push	{r4, lr}
 800c450:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800c452:	b12c      	cbz	r4, 800c460 <_ZNK8touchgfx9Container17invalidateContentEv+0x12>
 800c454:	6823      	ldr	r3, [r4, #0]
 800c456:	4620      	mov	r0, r4
 800c458:	699b      	ldr	r3, [r3, #24]
 800c45a:	4798      	blx	r3
 800c45c:	69a4      	ldr	r4, [r4, #24]
 800c45e:	e7f8      	b.n	800c452 <_ZNK8touchgfx9Container17invalidateContentEv+0x4>
 800c460:	bd10      	pop	{r4, pc}

0800c462 <_ZN8touchgfx9ContainerD1Ev>:
 800c462:	4770      	bx	lr

0800c464 <_ZN8touchgfx9ContainerD0Ev>:
 800c464:	b510      	push	{r4, lr}
 800c466:	212c      	movs	r1, #44	; 0x2c
 800c468:	4604      	mov	r4, r0
 800c46a:	f015 fbed 	bl	8021c48 <_ZdlPvj>
 800c46e:	4620      	mov	r0, r4
 800c470:	bd10      	pop	{r4, pc}

0800c472 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 800c472:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800c474:	b19b      	cbz	r3, 800c49e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800c476:	428b      	cmp	r3, r1
 800c478:	d109      	bne.n	800c48e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800c47a:	699a      	ldr	r2, [r3, #24]
 800c47c:	2100      	movs	r1, #0
 800c47e:	6159      	str	r1, [r3, #20]
 800c480:	6282      	str	r2, [r0, #40]	; 0x28
 800c482:	b902      	cbnz	r2, 800c486 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 800c484:	4770      	bx	lr
 800c486:	6199      	str	r1, [r3, #24]
 800c488:	4770      	bx	lr
 800c48a:	4613      	mov	r3, r2
 800c48c:	b13a      	cbz	r2, 800c49e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800c48e:	699a      	ldr	r2, [r3, #24]
 800c490:	428a      	cmp	r2, r1
 800c492:	d1fa      	bne.n	800c48a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 800c494:	698a      	ldr	r2, [r1, #24]
 800c496:	619a      	str	r2, [r3, #24]
 800c498:	2300      	movs	r3, #0
 800c49a:	e9c1 3305 	strd	r3, r3, [r1, #20]
 800c49e:	4770      	bx	lr

0800c4a0 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 800c4a0:	b410      	push	{r4}
 800c4a2:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800c4a4:	4604      	mov	r4, r0
 800c4a6:	b92b      	cbnz	r3, 800c4b4 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 800c4a8:	6803      	ldr	r3, [r0, #0]
 800c4aa:	f85d 4b04 	ldr.w	r4, [sp], #4
 800c4ae:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800c4b0:	4611      	mov	r1, r2
 800c4b2:	4718      	bx	r3
 800c4b4:	b941      	cbnz	r1, 800c4c8 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 800c4b6:	6193      	str	r3, [r2, #24]
 800c4b8:	6282      	str	r2, [r0, #40]	; 0x28
 800c4ba:	6154      	str	r4, [r2, #20]
 800c4bc:	f85d 4b04 	ldr.w	r4, [sp], #4
 800c4c0:	4770      	bx	lr
 800c4c2:	4603      	mov	r3, r0
 800c4c4:	2800      	cmp	r0, #0
 800c4c6:	d0f9      	beq.n	800c4bc <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800c4c8:	4299      	cmp	r1, r3
 800c4ca:	6998      	ldr	r0, [r3, #24]
 800c4cc:	d1f9      	bne.n	800c4c2 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 800c4ce:	6190      	str	r0, [r2, #24]
 800c4d0:	618a      	str	r2, [r1, #24]
 800c4d2:	e7f2      	b.n	800c4ba <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

0800c4d4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 800c4d4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c4d8:	461f      	mov	r7, r3
 800c4da:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 800c4de:	460d      	mov	r5, r1
 800c4e0:	4616      	mov	r6, r2
 800c4e2:	b103      	cbz	r3, 800c4e6 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 800c4e4:	6038      	str	r0, [r7, #0]
 800c4e6:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800c4e8:	b314      	cbz	r4, 800c530 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800c4ea:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800c4ee:	b1eb      	cbz	r3, 800c52c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800c4f0:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800c4f4:	428d      	cmp	r5, r1
 800c4f6:	db19      	blt.n	800c52c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800c4f8:	8923      	ldrh	r3, [r4, #8]
 800c4fa:	b289      	uxth	r1, r1
 800c4fc:	440b      	add	r3, r1
 800c4fe:	b21b      	sxth	r3, r3
 800c500:	429d      	cmp	r5, r3
 800c502:	da13      	bge.n	800c52c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800c504:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800c508:	4296      	cmp	r6, r2
 800c50a:	db0f      	blt.n	800c52c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800c50c:	8963      	ldrh	r3, [r4, #10]
 800c50e:	b292      	uxth	r2, r2
 800c510:	4413      	add	r3, r2
 800c512:	b21b      	sxth	r3, r3
 800c514:	429e      	cmp	r6, r3
 800c516:	da09      	bge.n	800c52c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800c518:	6823      	ldr	r3, [r4, #0]
 800c51a:	1ab2      	subs	r2, r6, r2
 800c51c:	1a69      	subs	r1, r5, r1
 800c51e:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
 800c522:	b212      	sxth	r2, r2
 800c524:	463b      	mov	r3, r7
 800c526:	b209      	sxth	r1, r1
 800c528:	4620      	mov	r0, r4
 800c52a:	47c0      	blx	r8
 800c52c:	69a4      	ldr	r4, [r4, #24]
 800c52e:	e7db      	b.n	800c4e8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 800c530:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800c534 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 800c534:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c538:	4c6e      	ldr	r4, [pc, #440]	; (800c6f4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 800c53a:	b0a1      	sub	sp, #132	; 0x84
 800c53c:	6824      	ldr	r4, [r4, #0]
 800c53e:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 800c540:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 800c544:	9303      	str	r3, [sp, #12]
 800c546:	2400      	movs	r4, #0
 800c548:	802c      	strh	r4, [r5, #0]
 800c54a:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 800c54c:	802c      	strh	r4, [r5, #0]
 800c54e:	601c      	str	r4, [r3, #0]
 800c550:	4606      	mov	r6, r0
 800c552:	e9cd 1201 	strd	r1, r2, [sp, #4]
 800c556:	f7ff ffbd 	bl	800c4d4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800c55a:	f1b9 0f03 	cmp.w	r9, #3
 800c55e:	f340 80c2 	ble.w	800c6e6 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 800c562:	4631      	mov	r1, r6
 800c564:	a80c      	add	r0, sp, #48	; 0x30
 800c566:	f007 f885 	bl	8013674 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800c56a:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 800c56e:	9306      	str	r3, [sp, #24]
 800c570:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 800c574:	9307      	str	r3, [sp, #28]
 800c576:	9b03      	ldr	r3, [sp, #12]
 800c578:	f8d3 a000 	ldr.w	sl, [r3]
 800c57c:	f1ba 0f00 	cmp.w	sl, #0
 800c580:	f000 80b4 	beq.w	800c6ec <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 800c584:	4651      	mov	r1, sl
 800c586:	a810      	add	r0, sp, #64	; 0x40
 800c588:	f007 f874 	bl	8013674 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800c58c:	9b01      	ldr	r3, [sp, #4]
 800c58e:	9a06      	ldr	r2, [sp, #24]
 800c590:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 800c594:	189d      	adds	r5, r3, r2
 800c596:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 800c59a:	9a07      	ldr	r2, [sp, #28]
 800c59c:	2002      	movs	r0, #2
 800c59e:	fb91 f1f0 	sdiv	r1, r1, r0
 800c5a2:	4419      	add	r1, r3
 800c5a4:	1a6d      	subs	r5, r5, r1
 800c5a6:	9b02      	ldr	r3, [sp, #8]
 800c5a8:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 800c5ac:	4413      	add	r3, r2
 800c5ae:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 800c5b2:	fb92 f2f0 	sdiv	r2, r2, r0
 800c5b6:	440a      	add	r2, r1
 800c5b8:	1a9b      	subs	r3, r3, r2
 800c5ba:	435b      	muls	r3, r3
 800c5bc:	fb05 3505 	mla	r5, r5, r5, r3
 800c5c0:	4f4d      	ldr	r7, [pc, #308]	; (800c6f8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 800c5c2:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800c5c4:	ac10      	add	r4, sp, #64	; 0x40
 800c5c6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800c5c8:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800c5ca:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800c5cc:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800c5ce:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800c5d0:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 800c5d4:	f1b9 0f0c 	cmp.w	r9, #12
 800c5d8:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800c5dc:	f04f 0303 	mov.w	r3, #3
 800c5e0:	bfc8      	it	gt
 800c5e2:	4698      	movgt	r8, r3
 800c5e4:	f8cd 9000 	str.w	r9, [sp]
 800c5e8:	f04f 0400 	mov.w	r4, #0
 800c5ec:	bfdc      	itt	le
 800c5ee:	f109 32ff 	addle.w	r2, r9, #4294967295
 800c5f2:	fb92 f8f3 	sdivle	r8, r2, r3
 800c5f6:	1c63      	adds	r3, r4, #1
 800c5f8:	aa10      	add	r2, sp, #64	; 0x40
 800c5fa:	f004 0401 	and.w	r4, r4, #1
 800c5fe:	9308      	str	r3, [sp, #32]
 800c600:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 800c604:	9b00      	ldr	r3, [sp, #0]
 800c606:	fb93 f3f8 	sdiv	r3, r3, r8
 800c60a:	b29b      	uxth	r3, r3
 800c60c:	3404      	adds	r4, #4
 800c60e:	f04f 0b00 	mov.w	fp, #0
 800c612:	9304      	str	r3, [sp, #16]
 800c614:	9a04      	ldr	r2, [sp, #16]
 800c616:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800c61a:	fb13 f302 	smulbb	r3, r3, r2
 800c61e:	9a01      	ldr	r2, [sp, #4]
 800c620:	b29b      	uxth	r3, r3
 800c622:	1899      	adds	r1, r3, r2
 800c624:	9305      	str	r3, [sp, #20]
 800c626:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800c62a:	b209      	sxth	r1, r1
 800c62c:	4299      	cmp	r1, r3
 800c62e:	db4d      	blt.n	800c6cc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800c630:	8932      	ldrh	r2, [r6, #8]
 800c632:	4413      	add	r3, r2
 800c634:	b21b      	sxth	r3, r3
 800c636:	4299      	cmp	r1, r3
 800c638:	da48      	bge.n	800c6cc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800c63a:	9b04      	ldr	r3, [sp, #16]
 800c63c:	6827      	ldr	r7, [r4, #0]
 800c63e:	fb17 f703 	smulbb	r7, r7, r3
 800c642:	9b02      	ldr	r3, [sp, #8]
 800c644:	b2bf      	uxth	r7, r7
 800c646:	18fa      	adds	r2, r7, r3
 800c648:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800c64c:	b212      	sxth	r2, r2
 800c64e:	429a      	cmp	r2, r3
 800c650:	db3c      	blt.n	800c6cc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800c652:	8970      	ldrh	r0, [r6, #10]
 800c654:	4403      	add	r3, r0
 800c656:	b21b      	sxth	r3, r3
 800c658:	429a      	cmp	r2, r3
 800c65a:	da37      	bge.n	800c6cc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800c65c:	2300      	movs	r3, #0
 800c65e:	930b      	str	r3, [sp, #44]	; 0x2c
 800c660:	4630      	mov	r0, r6
 800c662:	ab0b      	add	r3, sp, #44	; 0x2c
 800c664:	f7ff ff36 	bl	800c4d4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800c668:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800c66a:	b37a      	cbz	r2, 800c6cc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800c66c:	4552      	cmp	r2, sl
 800c66e:	d02d      	beq.n	800c6cc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800c670:	4611      	mov	r1, r2
 800c672:	a80e      	add	r0, sp, #56	; 0x38
 800c674:	9209      	str	r2, [sp, #36]	; 0x24
 800c676:	f006 fffd 	bl	8013674 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800c67a:	9a06      	ldr	r2, [sp, #24]
 800c67c:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 800c680:	9b01      	ldr	r3, [sp, #4]
 800c682:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 800c686:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 800c68a:	4413      	add	r3, r2
 800c68c:	f04f 0e02 	mov.w	lr, #2
 800c690:	fb91 f1fe 	sdiv	r1, r1, lr
 800c694:	4401      	add	r1, r0
 800c696:	1a58      	subs	r0, r3, r1
 800c698:	9a07      	ldr	r2, [sp, #28]
 800c69a:	9b02      	ldr	r3, [sp, #8]
 800c69c:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 800c6a0:	fb9c fcfe 	sdiv	ip, ip, lr
 800c6a4:	4413      	add	r3, r2
 800c6a6:	448c      	add	ip, r1
 800c6a8:	eba3 030c 	sub.w	r3, r3, ip
 800c6ac:	435b      	muls	r3, r3
 800c6ae:	fb00 3300 	mla	r3, r0, r0, r3
 800c6b2:	42ab      	cmp	r3, r5
 800c6b4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800c6b6:	d208      	bcs.n	800c6ca <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 800c6b8:	9803      	ldr	r0, [sp, #12]
 800c6ba:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800c6bc:	6001      	str	r1, [r0, #0]
 800c6be:	992a      	ldr	r1, [sp, #168]	; 0xa8
 800c6c0:	9805      	ldr	r0, [sp, #20]
 800c6c2:	8008      	strh	r0, [r1, #0]
 800c6c4:	992b      	ldr	r1, [sp, #172]	; 0xac
 800c6c6:	461d      	mov	r5, r3
 800c6c8:	800f      	strh	r7, [r1, #0]
 800c6ca:	4692      	mov	sl, r2
 800c6cc:	f10b 0b01 	add.w	fp, fp, #1
 800c6d0:	f1bb 0f04 	cmp.w	fp, #4
 800c6d4:	f104 0408 	add.w	r4, r4, #8
 800c6d8:	d19c      	bne.n	800c614 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 800c6da:	9b00      	ldr	r3, [sp, #0]
 800c6dc:	9c08      	ldr	r4, [sp, #32]
 800c6de:	444b      	add	r3, r9
 800c6e0:	4544      	cmp	r4, r8
 800c6e2:	9300      	str	r3, [sp, #0]
 800c6e4:	d187      	bne.n	800c5f6 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 800c6e6:	b021      	add	sp, #132	; 0x84
 800c6e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c6ec:	f04f 35ff 	mov.w	r5, #4294967295
 800c6f0:	e766      	b.n	800c5c0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 800c6f2:	bf00      	nop
 800c6f4:	2001794c 	.word	0x2001794c
 800c6f8:	08022ef4 	.word	0x08022ef4

0800c6fc <_ZN8touchgfx4RectaNERKS0_>:
 800c6fc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c700:	f9b1 7000 	ldrsh.w	r7, [r1]
 800c704:	888c      	ldrh	r4, [r1, #4]
 800c706:	f9b0 9000 	ldrsh.w	r9, [r0]
 800c70a:	443c      	add	r4, r7
 800c70c:	b2a4      	uxth	r4, r4
 800c70e:	fa0f f884 	sxth.w	r8, r4
 800c712:	45c1      	cmp	r9, r8
 800c714:	da2f      	bge.n	800c776 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800c716:	8882      	ldrh	r2, [r0, #4]
 800c718:	444a      	add	r2, r9
 800c71a:	b292      	uxth	r2, r2
 800c71c:	fa0f fe82 	sxth.w	lr, r2
 800c720:	4577      	cmp	r7, lr
 800c722:	da28      	bge.n	800c776 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800c724:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800c728:	88cb      	ldrh	r3, [r1, #6]
 800c72a:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800c72e:	442b      	add	r3, r5
 800c730:	b21b      	sxth	r3, r3
 800c732:	429e      	cmp	r6, r3
 800c734:	da1f      	bge.n	800c776 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800c736:	88c3      	ldrh	r3, [r0, #6]
 800c738:	4433      	add	r3, r6
 800c73a:	b29b      	uxth	r3, r3
 800c73c:	fa0f fc83 	sxth.w	ip, r3
 800c740:	4565      	cmp	r5, ip
 800c742:	da18      	bge.n	800c776 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800c744:	454f      	cmp	r7, r9
 800c746:	bfb8      	it	lt
 800c748:	464f      	movlt	r7, r9
 800c74a:	42b5      	cmp	r5, r6
 800c74c:	bfb8      	it	lt
 800c74e:	4635      	movlt	r5, r6
 800c750:	45f0      	cmp	r8, lr
 800c752:	bfd8      	it	le
 800c754:	4622      	movle	r2, r4
 800c756:	1bd2      	subs	r2, r2, r7
 800c758:	8082      	strh	r2, [r0, #4]
 800c75a:	884a      	ldrh	r2, [r1, #2]
 800c75c:	88c9      	ldrh	r1, [r1, #6]
 800c75e:	8007      	strh	r7, [r0, #0]
 800c760:	440a      	add	r2, r1
 800c762:	b292      	uxth	r2, r2
 800c764:	b211      	sxth	r1, r2
 800c766:	458c      	cmp	ip, r1
 800c768:	bfa8      	it	ge
 800c76a:	4613      	movge	r3, r2
 800c76c:	1b5b      	subs	r3, r3, r5
 800c76e:	80c3      	strh	r3, [r0, #6]
 800c770:	8045      	strh	r5, [r0, #2]
 800c772:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800c776:	2300      	movs	r3, #0
 800c778:	8003      	strh	r3, [r0, #0]
 800c77a:	8043      	strh	r3, [r0, #2]
 800c77c:	8083      	strh	r3, [r0, #4]
 800c77e:	80c3      	strh	r3, [r0, #6]
 800c780:	e7f7      	b.n	800c772 <_ZN8touchgfx4RectaNERKS0_+0x76>

0800c782 <_ZNK8touchgfx4Rect7isEmptyEv>:
 800c782:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800c786:	2b00      	cmp	r3, #0
 800c788:	dd06      	ble.n	800c798 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 800c78a:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800c78e:	2800      	cmp	r0, #0
 800c790:	bfcc      	ite	gt
 800c792:	2000      	movgt	r0, #0
 800c794:	2001      	movle	r0, #1
 800c796:	4770      	bx	lr
 800c798:	2001      	movs	r0, #1
 800c79a:	4770      	bx	lr

0800c79c <_ZNK8touchgfx9Container16getContainedAreaEv>:
 800c79c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c7a0:	2300      	movs	r3, #0
 800c7a2:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 800c7a4:	8003      	strh	r3, [r0, #0]
 800c7a6:	4604      	mov	r4, r0
 800c7a8:	8043      	strh	r3, [r0, #2]
 800c7aa:	8083      	strh	r3, [r0, #4]
 800c7ac:	80c3      	strh	r3, [r0, #6]
 800c7ae:	2d00      	cmp	r5, #0
 800c7b0:	d040      	beq.n	800c834 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 800c7b2:	1d28      	adds	r0, r5, #4
 800c7b4:	f7ff ffe5 	bl	800c782 <_ZNK8touchgfx4Rect7isEmptyEv>
 800c7b8:	b988      	cbnz	r0, 800c7de <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800c7ba:	4620      	mov	r0, r4
 800c7bc:	f7ff ffe1 	bl	800c782 <_ZNK8touchgfx4Rect7isEmptyEv>
 800c7c0:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800c7c4:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800c7c8:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 800c7cc:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 800c7d0:	b138      	cbz	r0, 800c7e2 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 800c7d2:	8022      	strh	r2, [r4, #0]
 800c7d4:	8063      	strh	r3, [r4, #2]
 800c7d6:	f8a4 e004 	strh.w	lr, [r4, #4]
 800c7da:	f8a4 c006 	strh.w	ip, [r4, #6]
 800c7de:	69ad      	ldr	r5, [r5, #24]
 800c7e0:	e7e5      	b.n	800c7ae <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 800c7e2:	f9b4 0000 	ldrsh.w	r0, [r4]
 800c7e6:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800c7ea:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 800c7ee:	4290      	cmp	r0, r2
 800c7f0:	4607      	mov	r7, r0
 800c7f2:	bfa8      	it	ge
 800c7f4:	4617      	movge	r7, r2
 800c7f6:	4472      	add	r2, lr
 800c7f8:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 800c7fc:	8027      	strh	r7, [r4, #0]
 800c7fe:	4299      	cmp	r1, r3
 800c800:	460e      	mov	r6, r1
 800c802:	4440      	add	r0, r8
 800c804:	bfa8      	it	ge
 800c806:	461e      	movge	r6, r3
 800c808:	4471      	add	r1, lr
 800c80a:	4463      	add	r3, ip
 800c80c:	b200      	sxth	r0, r0
 800c80e:	b212      	sxth	r2, r2
 800c810:	b209      	sxth	r1, r1
 800c812:	b21b      	sxth	r3, r3
 800c814:	4290      	cmp	r0, r2
 800c816:	bfac      	ite	ge
 800c818:	ebc7 0200 	rsbge	r2, r7, r0
 800c81c:	ebc7 0202 	rsblt	r2, r7, r2
 800c820:	4299      	cmp	r1, r3
 800c822:	bfac      	ite	ge
 800c824:	ebc6 0301 	rsbge	r3, r6, r1
 800c828:	ebc6 0303 	rsblt	r3, r6, r3
 800c82c:	8066      	strh	r6, [r4, #2]
 800c82e:	80a2      	strh	r2, [r4, #4]
 800c830:	80e3      	strh	r3, [r4, #6]
 800c832:	e7d4      	b.n	800c7de <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800c834:	4620      	mov	r0, r4
 800c836:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800c83a <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 800c83a:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800c83e:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800c842:	b383      	cbz	r3, 800c8a6 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800c844:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800c846:	b374      	cbz	r4, 800c8a6 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800c848:	f9b1 5000 	ldrsh.w	r5, [r1]
 800c84c:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 800c850:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 800c854:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 800c858:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800c85c:	b303      	cbz	r3, 800c8a0 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800c85e:	4668      	mov	r0, sp
 800c860:	1d21      	adds	r1, r4, #4
 800c862:	f8ad 5000 	strh.w	r5, [sp]
 800c866:	f8ad 6002 	strh.w	r6, [sp, #2]
 800c86a:	f8ad 7004 	strh.w	r7, [sp, #4]
 800c86e:	f8ad 8006 	strh.w	r8, [sp, #6]
 800c872:	f7ff ff43 	bl	800c6fc <_ZN8touchgfx4RectaNERKS0_>
 800c876:	4668      	mov	r0, sp
 800c878:	f7ff ff83 	bl	800c782 <_ZNK8touchgfx4Rect7isEmptyEv>
 800c87c:	b980      	cbnz	r0, 800c8a0 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800c87e:	f8bd 3000 	ldrh.w	r3, [sp]
 800c882:	88a2      	ldrh	r2, [r4, #4]
 800c884:	1a9b      	subs	r3, r3, r2
 800c886:	f8ad 3000 	strh.w	r3, [sp]
 800c88a:	88e2      	ldrh	r2, [r4, #6]
 800c88c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800c890:	1a9b      	subs	r3, r3, r2
 800c892:	f8ad 3002 	strh.w	r3, [sp, #2]
 800c896:	6823      	ldr	r3, [r4, #0]
 800c898:	4669      	mov	r1, sp
 800c89a:	689b      	ldr	r3, [r3, #8]
 800c89c:	4620      	mov	r0, r4
 800c89e:	4798      	blx	r3
 800c8a0:	69a4      	ldr	r4, [r4, #24]
 800c8a2:	2c00      	cmp	r4, #0
 800c8a4:	d1d8      	bne.n	800c858 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 800c8a6:	b002      	add	sp, #8
 800c8a8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800c8ac <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 800c8ac:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800c8ae:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800c8b2:	460d      	mov	r5, r1
 800c8b4:	4616      	mov	r6, r2
 800c8b6:	b323      	cbz	r3, 800c902 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800c8b8:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800c8ba:	b314      	cbz	r4, 800c902 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800c8bc:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800c8c0:	b1eb      	cbz	r3, 800c8fe <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800c8c2:	6828      	ldr	r0, [r5, #0]
 800c8c4:	6869      	ldr	r1, [r5, #4]
 800c8c6:	466b      	mov	r3, sp
 800c8c8:	c303      	stmia	r3!, {r0, r1}
 800c8ca:	4668      	mov	r0, sp
 800c8cc:	1d21      	adds	r1, r4, #4
 800c8ce:	f7ff ff15 	bl	800c6fc <_ZN8touchgfx4RectaNERKS0_>
 800c8d2:	4668      	mov	r0, sp
 800c8d4:	f7ff ff55 	bl	800c782 <_ZNK8touchgfx4Rect7isEmptyEv>
 800c8d8:	b988      	cbnz	r0, 800c8fe <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800c8da:	f8bd 3000 	ldrh.w	r3, [sp]
 800c8de:	88a2      	ldrh	r2, [r4, #4]
 800c8e0:	1a9b      	subs	r3, r3, r2
 800c8e2:	f8ad 3000 	strh.w	r3, [sp]
 800c8e6:	88e2      	ldrh	r2, [r4, #6]
 800c8e8:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800c8ec:	1a9b      	subs	r3, r3, r2
 800c8ee:	f8ad 3002 	strh.w	r3, [sp, #2]
 800c8f2:	6823      	ldr	r3, [r4, #0]
 800c8f4:	4632      	mov	r2, r6
 800c8f6:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800c8f8:	4669      	mov	r1, sp
 800c8fa:	4620      	mov	r0, r4
 800c8fc:	4798      	blx	r3
 800c8fe:	69a4      	ldr	r4, [r4, #24]
 800c900:	e7db      	b.n	800c8ba <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 800c902:	b002      	add	sp, #8
 800c904:	bd70      	pop	{r4, r5, r6, pc}

0800c906 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 800c906:	b513      	push	{r0, r1, r4, lr}
 800c908:	6803      	ldr	r3, [r0, #0]
 800c90a:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
 800c90e:	2300      	movs	r3, #0
 800c910:	e9cd 3300 	strd	r3, r3, [sp]
 800c914:	466b      	mov	r3, sp
 800c916:	47a0      	blx	r4
 800c918:	b002      	add	sp, #8
 800c91a:	bd10      	pop	{r4, pc}

0800c91c <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 800c91c:	2301      	movs	r3, #1
 800c91e:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800c922:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 800c926:	4770      	bx	lr

0800c928 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 800c928:	2301      	movs	r3, #1
 800c92a:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800c92e:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 800c932:	4770      	bx	lr

0800c934 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 800c934:	6843      	ldr	r3, [r0, #4]
 800c936:	2201      	movs	r2, #1
 800c938:	725a      	strb	r2, [r3, #9]
 800c93a:	6840      	ldr	r0, [r0, #4]
 800c93c:	6803      	ldr	r3, [r0, #0]
 800c93e:	691b      	ldr	r3, [r3, #16]
 800c940:	4718      	bx	r3

0800c942 <_ZN8touchgfx3HAL8flushDMAEv>:
 800c942:	6840      	ldr	r0, [r0, #4]
 800c944:	6803      	ldr	r3, [r0, #0]
 800c946:	689b      	ldr	r3, [r3, #8]
 800c948:	4718      	bx	r3

0800c94a <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 800c94a:	b530      	push	{r4, r5, lr}
 800c94c:	b08b      	sub	sp, #44	; 0x2c
 800c94e:	6804      	ldr	r4, [r0, #0]
 800c950:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 800c954:	9509      	str	r5, [sp, #36]	; 0x24
 800c956:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 800c95a:	9508      	str	r5, [sp, #32]
 800c95c:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 800c960:	9507      	str	r5, [sp, #28]
 800c962:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 800c966:	9506      	str	r5, [sp, #24]
 800c968:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 800c96c:	9505      	str	r5, [sp, #20]
 800c96e:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 800c972:	9504      	str	r5, [sp, #16]
 800c974:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 800c978:	9503      	str	r5, [sp, #12]
 800c97a:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 800c97e:	9502      	str	r5, [sp, #8]
 800c980:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 800c984:	e9cd 3500 	strd	r3, r5, [sp]
 800c988:	4613      	mov	r3, r2
 800c98a:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 800c98c:	2200      	movs	r2, #0
 800c98e:	47a0      	blx	r4
 800c990:	b00b      	add	sp, #44	; 0x2c
 800c992:	bd30      	pop	{r4, r5, pc}

0800c994 <_ZN8touchgfx3HAL10beginFrameEv>:
 800c994:	4b04      	ldr	r3, [pc, #16]	; (800c9a8 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 800c996:	781b      	ldrb	r3, [r3, #0]
 800c998:	b123      	cbz	r3, 800c9a4 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 800c99a:	f890 006a 	ldrb.w	r0, [r0, #106]	; 0x6a
 800c99e:	f080 0001 	eor.w	r0, r0, #1
 800c9a2:	4770      	bx	lr
 800c9a4:	2001      	movs	r0, #1
 800c9a6:	4770      	bx	lr
 800c9a8:	2001794a 	.word	0x2001794a

0800c9ac <_ZN8touchgfx3HAL8endFrameEv>:
 800c9ac:	b510      	push	{r4, lr}
 800c9ae:	4604      	mov	r4, r0
 800c9b0:	6840      	ldr	r0, [r0, #4]
 800c9b2:	6803      	ldr	r3, [r0, #0]
 800c9b4:	689b      	ldr	r3, [r3, #8]
 800c9b6:	4798      	blx	r3
 800c9b8:	f894 3069 	ldrb.w	r3, [r4, #105]	; 0x69
 800c9bc:	b113      	cbz	r3, 800c9c4 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 800c9be:	2301      	movs	r3, #1
 800c9c0:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 800c9c4:	bd10      	pop	{r4, pc}

0800c9c6 <_ZN8touchgfx3HAL10initializeEv>:
 800c9c6:	b510      	push	{r4, lr}
 800c9c8:	4604      	mov	r4, r0
 800c9ca:	f7f3 ff8d 	bl	80008e8 <_ZN8touchgfx10OSWrappers10initializeEv>
 800c9ce:	6860      	ldr	r0, [r4, #4]
 800c9d0:	6803      	ldr	r3, [r0, #0]
 800c9d2:	68db      	ldr	r3, [r3, #12]
 800c9d4:	4798      	blx	r3
 800c9d6:	68e0      	ldr	r0, [r4, #12]
 800c9d8:	6803      	ldr	r3, [r0, #0]
 800c9da:	689b      	ldr	r3, [r3, #8]
 800c9dc:	4798      	blx	r3
 800c9de:	6823      	ldr	r3, [r4, #0]
 800c9e0:	4620      	mov	r0, r4
 800c9e2:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800c9e4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c9e8:	4718      	bx	r3
	...

0800c9ec <_ZN8touchgfx3HAL4tickEv>:
 800c9ec:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800c9ee:	6803      	ldr	r3, [r0, #0]
 800c9f0:	4d5b      	ldr	r5, [pc, #364]	; (800cb60 <_ZN8touchgfx3HAL4tickEv+0x174>)
 800c9f2:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800c9f6:	4604      	mov	r4, r0
 800c9f8:	4798      	blx	r3
 800c9fa:	2800      	cmp	r0, #0
 800c9fc:	f000 8095 	beq.w	800cb2a <_ZN8touchgfx3HAL4tickEv+0x13e>
 800ca00:	2001      	movs	r0, #1
 800ca02:	f7f3 fe9d 	bl	8000740 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800ca06:	f894 3066 	ldrb.w	r3, [r4, #102]	; 0x66
 800ca0a:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 800ca0e:	f894 3075 	ldrb.w	r3, [r4, #117]	; 0x75
 800ca12:	2600      	movs	r6, #0
 800ca14:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800ca18:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 800ca1c:	b133      	cbz	r3, 800ca2c <_ZN8touchgfx3HAL4tickEv+0x40>
 800ca1e:	6823      	ldr	r3, [r4, #0]
 800ca20:	4620      	mov	r0, r4
 800ca22:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 800ca26:	4798      	blx	r3
 800ca28:	f884 6075 	strb.w	r6, [r4, #117]	; 0x75
 800ca2c:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 800ca30:	6862      	ldr	r2, [r4, #4]
 800ca32:	f083 0301 	eor.w	r3, r3, #1
 800ca36:	7253      	strb	r3, [r2, #9]
 800ca38:	2601      	movs	r6, #1
 800ca3a:	702e      	strb	r6, [r5, #0]
 800ca3c:	f005 fde8 	bl	8012610 <_ZN8touchgfx11Application11getInstanceEv>
 800ca40:	6803      	ldr	r3, [r0, #0]
 800ca42:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800ca44:	4798      	blx	r3
 800ca46:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 800ca4a:	b90b      	cbnz	r3, 800ca50 <_ZN8touchgfx3HAL4tickEv+0x64>
 800ca4c:	f884 6067 	strb.w	r6, [r4, #103]	; 0x67
 800ca50:	f005 fdde 	bl	8012610 <_ZN8touchgfx11Application11getInstanceEv>
 800ca54:	6803      	ldr	r3, [r0, #0]
 800ca56:	695b      	ldr	r3, [r3, #20]
 800ca58:	4798      	blx	r3
 800ca5a:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800ca5c:	6803      	ldr	r3, [r0, #0]
 800ca5e:	691b      	ldr	r3, [r3, #16]
 800ca60:	4798      	blx	r3
 800ca62:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 800ca66:	f894 2068 	ldrb.w	r2, [r4, #104]	; 0x68
 800ca6a:	3b01      	subs	r3, #1
 800ca6c:	b2db      	uxtb	r3, r3
 800ca6e:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 800ca72:	b10a      	cbz	r2, 800ca78 <_ZN8touchgfx3HAL4tickEv+0x8c>
 800ca74:	2b00      	cmp	r3, #0
 800ca76:	d1eb      	bne.n	800ca50 <_ZN8touchgfx3HAL4tickEv+0x64>
 800ca78:	4a3a      	ldr	r2, [pc, #232]	; (800cb64 <_ZN8touchgfx3HAL4tickEv+0x178>)
 800ca7a:	f994 1064 	ldrsb.w	r1, [r4, #100]	; 0x64
 800ca7e:	7813      	ldrb	r3, [r2, #0]
 800ca80:	3301      	adds	r3, #1
 800ca82:	b25b      	sxtb	r3, r3
 800ca84:	4299      	cmp	r1, r3
 800ca86:	7013      	strb	r3, [r2, #0]
 800ca88:	dc10      	bgt.n	800caac <_ZN8touchgfx3HAL4tickEv+0xc0>
 800ca8a:	68e0      	ldr	r0, [r4, #12]
 800ca8c:	2300      	movs	r3, #0
 800ca8e:	7013      	strb	r3, [r2, #0]
 800ca90:	6803      	ldr	r3, [r0, #0]
 800ca92:	aa03      	add	r2, sp, #12
 800ca94:	68db      	ldr	r3, [r3, #12]
 800ca96:	a902      	add	r1, sp, #8
 800ca98:	4798      	blx	r3
 800ca9a:	6823      	ldr	r3, [r4, #0]
 800ca9c:	2800      	cmp	r0, #0
 800ca9e:	d050      	beq.n	800cb42 <_ZN8touchgfx3HAL4tickEv+0x156>
 800caa0:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800caa4:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800caa8:	4620      	mov	r0, r4
 800caaa:	4798      	blx	r3
 800caac:	6960      	ldr	r0, [r4, #20]
 800caae:	2300      	movs	r3, #0
 800cab0:	f88d 3007 	strb.w	r3, [sp, #7]
 800cab4:	b158      	cbz	r0, 800cace <_ZN8touchgfx3HAL4tickEv+0xe2>
 800cab6:	6803      	ldr	r3, [r0, #0]
 800cab8:	f10d 0107 	add.w	r1, sp, #7
 800cabc:	68db      	ldr	r3, [r3, #12]
 800cabe:	4798      	blx	r3
 800cac0:	b128      	cbz	r0, 800cace <_ZN8touchgfx3HAL4tickEv+0xe2>
 800cac2:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800cac4:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800cac8:	6803      	ldr	r3, [r0, #0]
 800caca:	68db      	ldr	r3, [r3, #12]
 800cacc:	4798      	blx	r3
 800cace:	f104 001c 	add.w	r0, r4, #28
 800cad2:	f014 fcf1 	bl	80214b8 <_ZN8touchgfx8Gestures4tickEv>
 800cad6:	f894 306c 	ldrb.w	r3, [r4, #108]	; 0x6c
 800cada:	b30b      	cbz	r3, 800cb20 <_ZN8touchgfx3HAL4tickEv+0x134>
 800cadc:	6920      	ldr	r0, [r4, #16]
 800cade:	6803      	ldr	r3, [r0, #0]
 800cae0:	691b      	ldr	r3, [r3, #16]
 800cae2:	4798      	blx	r3
 800cae4:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800cae6:	4606      	mov	r6, r0
 800cae8:	b903      	cbnz	r3, 800caec <_ZN8touchgfx3HAL4tickEv+0x100>
 800caea:	6720      	str	r0, [r4, #112]	; 0x70
 800caec:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800caee:	4a1e      	ldr	r2, [pc, #120]	; (800cb68 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 800caf0:	1af3      	subs	r3, r6, r3
 800caf2:	4293      	cmp	r3, r2
 800caf4:	d914      	bls.n	800cb20 <_ZN8touchgfx3HAL4tickEv+0x134>
 800caf6:	6920      	ldr	r0, [r4, #16]
 800caf8:	6803      	ldr	r3, [r0, #0]
 800cafa:	699b      	ldr	r3, [r3, #24]
 800cafc:	4798      	blx	r3
 800cafe:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800cb00:	2264      	movs	r2, #100	; 0x64
 800cb02:	1af3      	subs	r3, r6, r3
 800cb04:	fbb3 f3f2 	udiv	r3, r3, r2
 800cb08:	fbb0 f0f3 	udiv	r0, r0, r3
 800cb0c:	2800      	cmp	r0, #0
 800cb0e:	dc1d      	bgt.n	800cb4c <_ZN8touchgfx3HAL4tickEv+0x160>
 800cb10:	f884 2065 	strb.w	r2, [r4, #101]	; 0x65
 800cb14:	6920      	ldr	r0, [r4, #16]
 800cb16:	6803      	ldr	r3, [r0, #0]
 800cb18:	2100      	movs	r1, #0
 800cb1a:	69db      	ldr	r3, [r3, #28]
 800cb1c:	4798      	blx	r3
 800cb1e:	6726      	str	r6, [r4, #112]	; 0x70
 800cb20:	f005 fd76 	bl	8012610 <_ZN8touchgfx11Application11getInstanceEv>
 800cb24:	6803      	ldr	r3, [r0, #0]
 800cb26:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800cb28:	4798      	blx	r3
 800cb2a:	6823      	ldr	r3, [r4, #0]
 800cb2c:	4620      	mov	r0, r4
 800cb2e:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 800cb32:	4798      	blx	r3
 800cb34:	2001      	movs	r0, #1
 800cb36:	f7f3 fe04 	bl	8000742 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800cb3a:	2300      	movs	r3, #0
 800cb3c:	702b      	strb	r3, [r5, #0]
 800cb3e:	b004      	add	sp, #16
 800cb40:	bd70      	pop	{r4, r5, r6, pc}
 800cb42:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 800cb46:	4620      	mov	r0, r4
 800cb48:	4798      	blx	r3
 800cb4a:	e7af      	b.n	800caac <_ZN8touchgfx3HAL4tickEv+0xc0>
 800cb4c:	2863      	cmp	r0, #99	; 0x63
 800cb4e:	bfcb      	itete	gt
 800cb50:	2300      	movgt	r3, #0
 800cb52:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 800cb56:	f884 3065 	strbgt.w	r3, [r4, #101]	; 0x65
 800cb5a:	f884 0065 	strble.w	r0, [r4, #101]	; 0x65
 800cb5e:	e7d9      	b.n	800cb14 <_ZN8touchgfx3HAL4tickEv+0x128>
 800cb60:	20017950 	.word	0x20017950
 800cb64:	20017951 	.word	0x20017951
 800cb68:	05f5e100 	.word	0x05f5e100

0800cb6c <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 800cb6c:	f7f3 beec 	b.w	8000948 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800cb70 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 800cb70:	6581      	str	r1, [r0, #88]	; 0x58
 800cb72:	301c      	adds	r0, #28
 800cb74:	f014 bc9e 	b.w	80214b4 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

0800cb78 <_ZN8touchgfx3HAL5touchEll>:
 800cb78:	b530      	push	{r4, r5, lr}
 800cb7a:	b087      	sub	sp, #28
 800cb7c:	4604      	mov	r4, r0
 800cb7e:	a804      	add	r0, sp, #16
 800cb80:	e9cd 1204 	strd	r1, r2, [sp, #16]
 800cb84:	f005 fb06 	bl	8012194 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 800cb88:	9b04      	ldr	r3, [sp, #16]
 800cb8a:	f8ad 300c 	strh.w	r3, [sp, #12]
 800cb8e:	a906      	add	r1, sp, #24
 800cb90:	9b05      	ldr	r3, [sp, #20]
 800cb92:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 800cb96:	a803      	add	r0, sp, #12
 800cb98:	f005 fb4e 	bl	8012238 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 800cb9c:	f894 106b 	ldrb.w	r1, [r4, #107]	; 0x6b
 800cba0:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800cba4:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800cba8:	f104 001c 	add.w	r0, r4, #28
 800cbac:	b189      	cbz	r1, 800cbd2 <_ZN8touchgfx3HAL5touchEll+0x5a>
 800cbae:	f8b4 5060 	ldrh.w	r5, [r4, #96]	; 0x60
 800cbb2:	9300      	str	r3, [sp, #0]
 800cbb4:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 800cbb8:	4613      	mov	r3, r2
 800cbba:	462a      	mov	r2, r5
 800cbbc:	f014 fc8a 	bl	80214d4 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 800cbc0:	b128      	cbz	r0, 800cbce <_ZN8touchgfx3HAL5touchEll+0x56>
 800cbc2:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800cbc6:	65e3      	str	r3, [r4, #92]	; 0x5c
 800cbc8:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800cbcc:	6623      	str	r3, [r4, #96]	; 0x60
 800cbce:	b007      	add	sp, #28
 800cbd0:	bd30      	pop	{r4, r5, pc}
 800cbd2:	f014 fcbf 	bl	8021554 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800cbd6:	2301      	movs	r3, #1
 800cbd8:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800cbdc:	e7f1      	b.n	800cbc2 <_ZN8touchgfx3HAL5touchEll+0x4a>

0800cbde <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 800cbde:	b510      	push	{r4, lr}
 800cbe0:	2b00      	cmp	r3, #0
 800cbe2:	d046      	beq.n	800cc72 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800cbe4:	ea81 0002 	eor.w	r0, r1, r2
 800cbe8:	07c4      	lsls	r4, r0, #31
 800cbea:	d508      	bpl.n	800cbfe <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 800cbec:	440b      	add	r3, r1
 800cbee:	3a01      	subs	r2, #1
 800cbf0:	428b      	cmp	r3, r1
 800cbf2:	d93e      	bls.n	800cc72 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800cbf4:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800cbf8:	f801 0b01 	strb.w	r0, [r1], #1
 800cbfc:	e7f8      	b.n	800cbf0 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 800cbfe:	07d0      	lsls	r0, r2, #31
 800cc00:	bf42      	ittt	mi
 800cc02:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 800cc06:	f801 0b01 	strbmi.w	r0, [r1], #1
 800cc0a:	f103 33ff 	addmi.w	r3, r3, #4294967295
 800cc0e:	2b01      	cmp	r3, #1
 800cc10:	d911      	bls.n	800cc36 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800cc12:	ea81 0402 	eor.w	r4, r1, r2
 800cc16:	07a4      	lsls	r4, r4, #30
 800cc18:	4610      	mov	r0, r2
 800cc1a:	d022      	beq.n	800cc62 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 800cc1c:	f023 0401 	bic.w	r4, r3, #1
 800cc20:	440c      	add	r4, r1
 800cc22:	428c      	cmp	r4, r1
 800cc24:	4602      	mov	r2, r0
 800cc26:	d904      	bls.n	800cc32 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 800cc28:	8812      	ldrh	r2, [r2, #0]
 800cc2a:	f821 2b02 	strh.w	r2, [r1], #2
 800cc2e:	3002      	adds	r0, #2
 800cc30:	e7f7      	b.n	800cc22 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 800cc32:	f003 0301 	and.w	r3, r3, #1
 800cc36:	f023 0003 	bic.w	r0, r3, #3
 800cc3a:	4408      	add	r0, r1
 800cc3c:	4288      	cmp	r0, r1
 800cc3e:	4614      	mov	r4, r2
 800cc40:	d904      	bls.n	800cc4c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 800cc42:	6824      	ldr	r4, [r4, #0]
 800cc44:	f841 4b04 	str.w	r4, [r1], #4
 800cc48:	3204      	adds	r2, #4
 800cc4a:	e7f7      	b.n	800cc3c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 800cc4c:	f003 0303 	and.w	r3, r3, #3
 800cc50:	440b      	add	r3, r1
 800cc52:	3a01      	subs	r2, #1
 800cc54:	428b      	cmp	r3, r1
 800cc56:	d90c      	bls.n	800cc72 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800cc58:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800cc5c:	f801 0b01 	strb.w	r0, [r1], #1
 800cc60:	e7f8      	b.n	800cc54 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 800cc62:	0790      	lsls	r0, r2, #30
 800cc64:	d0e7      	beq.n	800cc36 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800cc66:	f832 0b02 	ldrh.w	r0, [r2], #2
 800cc6a:	f821 0b02 	strh.w	r0, [r1], #2
 800cc6e:	3b02      	subs	r3, #2
 800cc70:	e7e1      	b.n	800cc36 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800cc72:	2001      	movs	r0, #1
 800cc74:	bd10      	pop	{r4, pc}

0800cc76 <_ZN8touchgfx3HAL7noTouchEv>:
 800cc76:	b510      	push	{r4, lr}
 800cc78:	f890 306b 	ldrb.w	r3, [r0, #107]	; 0x6b
 800cc7c:	4604      	mov	r4, r0
 800cc7e:	b153      	cbz	r3, 800cc96 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 800cc80:	f8b0 3060 	ldrh.w	r3, [r0, #96]	; 0x60
 800cc84:	f8b0 205c 	ldrh.w	r2, [r0, #92]	; 0x5c
 800cc88:	2101      	movs	r1, #1
 800cc8a:	301c      	adds	r0, #28
 800cc8c:	f014 fc62 	bl	8021554 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800cc90:	2300      	movs	r3, #0
 800cc92:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800cc96:	bd10      	pop	{r4, pc}

0800cc98 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 800cc98:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800cc9c:	b085      	sub	sp, #20
 800cc9e:	ad04      	add	r5, sp, #16
 800cca0:	4604      	mov	r4, r0
 800cca2:	2000      	movs	r0, #0
 800cca4:	f845 0d04 	str.w	r0, [r5, #-4]!
 800cca8:	69a0      	ldr	r0, [r4, #24]
 800ccaa:	6806      	ldr	r6, [r0, #0]
 800ccac:	9501      	str	r5, [sp, #4]
 800ccae:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 800ccb2:	9500      	str	r5, [sp, #0]
 800ccb4:	6835      	ldr	r5, [r6, #0]
 800ccb6:	4699      	mov	r9, r3
 800ccb8:	460f      	mov	r7, r1
 800ccba:	4690      	mov	r8, r2
 800ccbc:	47a8      	blx	r5
 800ccbe:	4d10      	ldr	r5, [pc, #64]	; (800cd00 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 800ccc0:	4606      	mov	r6, r0
 800ccc2:	f8a5 9000 	strh.w	r9, [r5]
 800ccc6:	f7f5 fb8d 	bl	80023e4 <_ZN8touchgfx3HAL3lcdEv>
 800ccca:	6803      	ldr	r3, [r0, #0]
 800cccc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ccce:	4798      	blx	r3
 800ccd0:	b128      	cbz	r0, 800ccde <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 800ccd2:	2801      	cmp	r0, #1
 800ccd4:	d00b      	beq.n	800ccee <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 800ccd6:	4630      	mov	r0, r6
 800ccd8:	b005      	add	sp, #20
 800ccda:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800ccde:	882b      	ldrh	r3, [r5, #0]
 800cce0:	fb08 7203 	mla	r2, r8, r3, r7
 800cce4:	9b03      	ldr	r3, [sp, #12]
 800cce6:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 800ccea:	63e3      	str	r3, [r4, #60]	; 0x3c
 800ccec:	e7f3      	b.n	800ccd6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800ccee:	882a      	ldrh	r2, [r5, #0]
 800ccf0:	9b03      	ldr	r3, [sp, #12]
 800ccf2:	fb08 7202 	mla	r2, r8, r2, r7
 800ccf6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800ccfa:	1a9a      	subs	r2, r3, r2
 800ccfc:	63e2      	str	r2, [r4, #60]	; 0x3c
 800ccfe:	e7ea      	b.n	800ccd6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800cd00:	20017946 	.word	0x20017946

0800cd04 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 800cd04:	b5f0      	push	{r4, r5, r6, r7, lr}
 800cd06:	b08b      	sub	sp, #44	; 0x2c
 800cd08:	4617      	mov	r7, r2
 800cd0a:	4604      	mov	r4, r0
 800cd0c:	460e      	mov	r6, r1
 800cd0e:	461d      	mov	r5, r3
 800cd10:	f7f5 fb68 	bl	80023e4 <_ZN8touchgfx3HAL3lcdEv>
 800cd14:	6803      	ldr	r3, [r0, #0]
 800cd16:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800cd18:	4798      	blx	r3
 800cd1a:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 800cd1e:	9007      	str	r0, [sp, #28]
 800cd20:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800cd24:	4b0d      	ldr	r3, [pc, #52]	; (800cd5c <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 800cd26:	6822      	ldr	r2, [r4, #0]
 800cd28:	881b      	ldrh	r3, [r3, #0]
 800cd2a:	9306      	str	r3, [sp, #24]
 800cd2c:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 800cd30:	9305      	str	r3, [sp, #20]
 800cd32:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 800cd36:	9304      	str	r3, [sp, #16]
 800cd38:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800cd3c:	9303      	str	r3, [sp, #12]
 800cd3e:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800cd42:	9302      	str	r3, [sp, #8]
 800cd44:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800cd48:	e9cd 5300 	strd	r5, r3, [sp]
 800cd4c:	4631      	mov	r1, r6
 800cd4e:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 800cd50:	463b      	mov	r3, r7
 800cd52:	2200      	movs	r2, #0
 800cd54:	4620      	mov	r0, r4
 800cd56:	47a8      	blx	r5
 800cd58:	b00b      	add	sp, #44	; 0x2c
 800cd5a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800cd5c:	20017946 	.word	0x20017946

0800cd60 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 800cd60:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800cd64:	4698      	mov	r8, r3
 800cd66:	6803      	ldr	r3, [r0, #0]
 800cd68:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 800cd6a:	4b15      	ldr	r3, [pc, #84]	; (800cdc0 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 800cd6c:	b08b      	sub	sp, #44	; 0x2c
 800cd6e:	4617      	mov	r7, r2
 800cd70:	f8b3 9000 	ldrh.w	r9, [r3]
 800cd74:	460e      	mov	r6, r1
 800cd76:	4604      	mov	r4, r0
 800cd78:	f7f5 fb34 	bl	80023e4 <_ZN8touchgfx3HAL3lcdEv>
 800cd7c:	6803      	ldr	r3, [r0, #0]
 800cd7e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800cd80:	4798      	blx	r3
 800cd82:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800cd86:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800cd8a:	2302      	movs	r3, #2
 800cd8c:	e9cd 9306 	strd	r9, r3, [sp, #24]
 800cd90:	2301      	movs	r3, #1
 800cd92:	9305      	str	r3, [sp, #20]
 800cd94:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 800cd98:	9304      	str	r3, [sp, #16]
 800cd9a:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800cd9e:	9303      	str	r3, [sp, #12]
 800cda0:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800cda4:	9302      	str	r3, [sp, #8]
 800cda6:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800cdaa:	2200      	movs	r2, #0
 800cdac:	e9cd 8300 	strd	r8, r3, [sp]
 800cdb0:	4631      	mov	r1, r6
 800cdb2:	463b      	mov	r3, r7
 800cdb4:	4620      	mov	r0, r4
 800cdb6:	47a8      	blx	r5
 800cdb8:	b00b      	add	sp, #44	; 0x2c
 800cdba:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800cdbe:	bf00      	nop
 800cdc0:	20017946 	.word	0x20017946

0800cdc4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 800cdc4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800cdc8:	4698      	mov	r8, r3
 800cdca:	6803      	ldr	r3, [r0, #0]
 800cdcc:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 800cdce:	4b11      	ldr	r3, [pc, #68]	; (800ce14 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 800cdd0:	b087      	sub	sp, #28
 800cdd2:	f8b3 9000 	ldrh.w	r9, [r3]
 800cdd6:	460e      	mov	r6, r1
 800cdd8:	4617      	mov	r7, r2
 800cdda:	4604      	mov	r4, r0
 800cddc:	f7f5 fb02 	bl	80023e4 <_ZN8touchgfx3HAL3lcdEv>
 800cde0:	6803      	ldr	r3, [r0, #0]
 800cde2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800cde4:	4798      	blx	r3
 800cde6:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 800cdea:	f8cd 900c 	str.w	r9, [sp, #12]
 800cdee:	e9cd 0304 	strd	r0, r3, [sp, #16]
 800cdf2:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 800cdf6:	9302      	str	r3, [sp, #8]
 800cdf8:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 800cdfc:	9301      	str	r3, [sp, #4]
 800cdfe:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800ce02:	9300      	str	r3, [sp, #0]
 800ce04:	463a      	mov	r2, r7
 800ce06:	4643      	mov	r3, r8
 800ce08:	4631      	mov	r1, r6
 800ce0a:	4620      	mov	r0, r4
 800ce0c:	47a8      	blx	r5
 800ce0e:	b007      	add	sp, #28
 800ce10:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800ce14:	20017946 	.word	0x20017946

0800ce18 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 800ce18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ce1c:	4604      	mov	r4, r0
 800ce1e:	b08f      	sub	sp, #60	; 0x3c
 800ce20:	4610      	mov	r0, r2
 800ce22:	460d      	mov	r5, r1
 800ce24:	4691      	mov	r9, r2
 800ce26:	461e      	mov	r6, r3
 800ce28:	f008 fd8e 	bl	8015948 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800ce2c:	2800      	cmp	r0, #0
 800ce2e:	f000 809d 	beq.w	800cf6c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 800ce32:	6823      	ldr	r3, [r4, #0]
 800ce34:	f8df b198 	ldr.w	fp, [pc, #408]	; 800cfd0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 800ce38:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800ce3a:	f8df a198 	ldr.w	sl, [pc, #408]	; 800cfd4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 800ce3e:	4f61      	ldr	r7, [pc, #388]	; (800cfc4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800ce40:	4620      	mov	r0, r4
 800ce42:	4798      	blx	r3
 800ce44:	6823      	ldr	r3, [r4, #0]
 800ce46:	4620      	mov	r0, r4
 800ce48:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ce4a:	4798      	blx	r3
 800ce4c:	f8bb 3000 	ldrh.w	r3, [fp]
 800ce50:	9301      	str	r3, [sp, #4]
 800ce52:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 800ce56:	f8ba 3000 	ldrh.w	r3, [sl]
 800ce5a:	9302      	str	r3, [sp, #8]
 800ce5c:	883b      	ldrh	r3, [r7, #0]
 800ce5e:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 800ce62:	9303      	str	r3, [sp, #12]
 800ce64:	4b58      	ldr	r3, [pc, #352]	; (800cfc8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800ce66:	9305      	str	r3, [sp, #20]
 800ce68:	881a      	ldrh	r2, [r3, #0]
 800ce6a:	9204      	str	r2, [sp, #16]
 800ce6c:	4640      	mov	r0, r8
 800ce6e:	f008 fdff 	bl	8015a70 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800ce72:	8038      	strh	r0, [r7, #0]
 800ce74:	4640      	mov	r0, r8
 800ce76:	f008 fe2f 	bl	8015ad8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800ce7a:	9b05      	ldr	r3, [sp, #20]
 800ce7c:	b280      	uxth	r0, r0
 800ce7e:	8018      	strh	r0, [r3, #0]
 800ce80:	4b52      	ldr	r3, [pc, #328]	; (800cfcc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 800ce82:	781b      	ldrb	r3, [r3, #0]
 800ce84:	2b00      	cmp	r3, #0
 800ce86:	d174      	bne.n	800cf72 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 800ce88:	883b      	ldrh	r3, [r7, #0]
 800ce8a:	f8ab 3000 	strh.w	r3, [fp]
 800ce8e:	f8aa 0000 	strh.w	r0, [sl]
 800ce92:	4648      	mov	r0, r9
 800ce94:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 800ce98:	f008 fd56 	bl	8015948 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800ce9c:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 800cea0:	2200      	movs	r2, #0
 800cea2:	4611      	mov	r1, r2
 800cea4:	4628      	mov	r0, r5
 800cea6:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 800ceaa:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 800ceae:	f7f5 fead 	bl	8002c0c <_ZN8touchgfx8Drawable5setXYEss>
 800ceb2:	2301      	movs	r3, #1
 800ceb4:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 800ceb8:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 800cebc:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800cec0:	2b00      	cmp	r3, #0
 800cec2:	dd5c      	ble.n	800cf7e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800cec4:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800cec8:	2b00      	cmp	r3, #0
 800ceca:	dd58      	ble.n	800cf7e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800cecc:	462a      	mov	r2, r5
 800cece:	ab0a      	add	r3, sp, #40	; 0x28
 800ced0:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800ced4:	6851      	ldr	r1, [r2, #4]
 800ced6:	c303      	stmia	r3!, {r0, r1}
 800ced8:	4631      	mov	r1, r6
 800ceda:	a80a      	add	r0, sp, #40	; 0x28
 800cedc:	f7ff fc0e 	bl	800c6fc <_ZN8touchgfx4RectaNERKS0_>
 800cee0:	4b38      	ldr	r3, [pc, #224]	; (800cfc4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800cee2:	f9b3 2000 	ldrsh.w	r2, [r3]
 800cee6:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 800ceea:	2100      	movs	r1, #0
 800ceec:	aa0a      	add	r2, sp, #40	; 0x28
 800ceee:	4b36      	ldr	r3, [pc, #216]	; (800cfc8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800cef0:	910c      	str	r1, [sp, #48]	; 0x30
 800cef2:	e892 0003 	ldmia.w	r2, {r0, r1}
 800cef6:	f9b3 3000 	ldrsh.w	r3, [r3]
 800cefa:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800cefe:	ab08      	add	r3, sp, #32
 800cf00:	e883 0003 	stmia.w	r3, {r0, r1}
 800cf04:	4618      	mov	r0, r3
 800cf06:	a90c      	add	r1, sp, #48	; 0x30
 800cf08:	f7ff fbf8 	bl	800c6fc <_ZN8touchgfx4RectaNERKS0_>
 800cf0c:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 800cf0e:	2b00      	cmp	r3, #0
 800cf10:	d13c      	bne.n	800cf8c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 800cf12:	2000      	movs	r0, #0
 800cf14:	f884 0076 	strb.w	r0, [r4, #118]	; 0x76
 800cf18:	2600      	movs	r6, #0
 800cf1a:	682a      	ldr	r2, [r5, #0]
 800cf1c:	696b      	ldr	r3, [r5, #20]
 800cf1e:	616e      	str	r6, [r5, #20]
 800cf20:	9305      	str	r3, [sp, #20]
 800cf22:	6892      	ldr	r2, [r2, #8]
 800cf24:	a908      	add	r1, sp, #32
 800cf26:	4628      	mov	r0, r5
 800cf28:	4790      	blx	r2
 800cf2a:	9b05      	ldr	r3, [sp, #20]
 800cf2c:	616b      	str	r3, [r5, #20]
 800cf2e:	4652      	mov	r2, sl
 800cf30:	f884 6076 	strb.w	r6, [r4, #118]	; 0x76
 800cf34:	4649      	mov	r1, r9
 800cf36:	4628      	mov	r0, r5
 800cf38:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 800cf3c:	f7f5 fe66 	bl	8002c0c <_ZN8touchgfx8Drawable5setXYEss>
 800cf40:	4b23      	ldr	r3, [pc, #140]	; (800cfd0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 800cf42:	9a01      	ldr	r2, [sp, #4]
 800cf44:	801a      	strh	r2, [r3, #0]
 800cf46:	4b23      	ldr	r3, [pc, #140]	; (800cfd4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 800cf48:	9a02      	ldr	r2, [sp, #8]
 800cf4a:	801a      	strh	r2, [r3, #0]
 800cf4c:	4b1d      	ldr	r3, [pc, #116]	; (800cfc4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800cf4e:	9a03      	ldr	r2, [sp, #12]
 800cf50:	801a      	strh	r2, [r3, #0]
 800cf52:	4b1d      	ldr	r3, [pc, #116]	; (800cfc8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800cf54:	9a04      	ldr	r2, [sp, #16]
 800cf56:	801a      	strh	r2, [r3, #0]
 800cf58:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 800cf5c:	6823      	ldr	r3, [r4, #0]
 800cf5e:	4620      	mov	r0, r4
 800cf60:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800cf62:	4798      	blx	r3
 800cf64:	6823      	ldr	r3, [r4, #0]
 800cf66:	4620      	mov	r0, r4
 800cf68:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800cf6a:	4798      	blx	r3
 800cf6c:	b00f      	add	sp, #60	; 0x3c
 800cf6e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cf72:	883b      	ldrh	r3, [r7, #0]
 800cf74:	f8ab 0000 	strh.w	r0, [fp]
 800cf78:	f8aa 3000 	strh.w	r3, [sl]
 800cf7c:	e789      	b.n	800ce92 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 800cf7e:	462a      	mov	r2, r5
 800cf80:	ab0a      	add	r3, sp, #40	; 0x28
 800cf82:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800cf86:	6851      	ldr	r1, [r2, #4]
 800cf88:	c303      	stmia	r3!, {r0, r1}
 800cf8a:	e7a9      	b.n	800cee0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 800cf8c:	a807      	add	r0, sp, #28
 800cf8e:	f008 fedf 	bl	8015d50 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800cf92:	4606      	mov	r6, r0
 800cf94:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 800cf96:	6803      	ldr	r3, [r0, #0]
 800cf98:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800cf9a:	4798      	blx	r3
 800cf9c:	4286      	cmp	r6, r0
 800cf9e:	d1b8      	bne.n	800cf12 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 800cfa0:	f7f5 fa20 	bl	80023e4 <_ZN8touchgfx3HAL3lcdEv>
 800cfa4:	6803      	ldr	r3, [r0, #0]
 800cfa6:	4606      	mov	r6, r0
 800cfa8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800cfaa:	9305      	str	r3, [sp, #20]
 800cfac:	a807      	add	r0, sp, #28
 800cfae:	f008 fecf 	bl	8015d50 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800cfb2:	9b05      	ldr	r3, [sp, #20]
 800cfb4:	4601      	mov	r1, r0
 800cfb6:	4630      	mov	r0, r6
 800cfb8:	4798      	blx	r3
 800cfba:	f080 0001 	eor.w	r0, r0, #1
 800cfbe:	b2c0      	uxtb	r0, r0
 800cfc0:	e7a8      	b.n	800cf14 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 800cfc2:	bf00      	nop
 800cfc4:	20017940 	.word	0x20017940
 800cfc8:	20017942 	.word	0x20017942
 800cfcc:	20017944 	.word	0x20017944
 800cfd0:	20017946 	.word	0x20017946
 800cfd4:	20017948 	.word	0x20017948

0800cfd8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 800cfd8:	b510      	push	{r4, lr}
 800cfda:	4b07      	ldr	r3, [pc, #28]	; (800cff8 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 800cfdc:	781b      	ldrb	r3, [r3, #0]
 800cfde:	4604      	mov	r4, r0
 800cfe0:	b13b      	cbz	r3, 800cff2 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800cfe2:	6803      	ldr	r3, [r0, #0]
 800cfe4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800cfe6:	4798      	blx	r3
 800cfe8:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800cfea:	4283      	cmp	r3, r0
 800cfec:	d101      	bne.n	800cff2 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800cfee:	6c20      	ldr	r0, [r4, #64]	; 0x40
 800cff0:	bd10      	pop	{r4, pc}
 800cff2:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 800cff4:	e7fc      	b.n	800cff0 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 800cff6:	bf00      	nop
 800cff8:	2001794a 	.word	0x2001794a

0800cffc <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 800cffc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d000:	b08a      	sub	sp, #40	; 0x28
 800d002:	461d      	mov	r5, r3
 800d004:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800d008:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800d00c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800d010:	f8ad 3018 	strh.w	r3, [sp, #24]
 800d014:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800d018:	f8ad 301a 	strh.w	r3, [sp, #26]
 800d01c:	2400      	movs	r4, #0
 800d01e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800d022:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 800d026:	f8ad 301c 	strh.w	r3, [sp, #28]
 800d02a:	4690      	mov	r8, r2
 800d02c:	4607      	mov	r7, r0
 800d02e:	9404      	str	r4, [sp, #16]
 800d030:	f88d 4020 	strb.w	r4, [sp, #32]
 800d034:	f7ff ffd0 	bl	800cfd8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800d038:	fb06 8505 	mla	r5, r6, r5, r8
 800d03c:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800d040:	6878      	ldr	r0, [r7, #4]
 800d042:	9505      	str	r5, [sp, #20]
 800d044:	f8ad 601e 	strh.w	r6, [sp, #30]
 800d048:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800d04c:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
 800d050:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 800d054:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 800d058:	6803      	ldr	r3, [r0, #0]
 800d05a:	a901      	add	r1, sp, #4
 800d05c:	685b      	ldr	r3, [r3, #4]
 800d05e:	4798      	blx	r3
 800d060:	b00a      	add	sp, #40	; 0x28
 800d062:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800d066 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 800d066:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800d06a:	b08b      	sub	sp, #44	; 0x2c
 800d06c:	2400      	movs	r4, #0
 800d06e:	461d      	mov	r5, r3
 800d070:	f44f 6300 	mov.w	r3, #2048	; 0x800
 800d074:	4688      	mov	r8, r1
 800d076:	4691      	mov	r9, r2
 800d078:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
 800d07c:	9404      	str	r4, [sp, #16]
 800d07e:	4607      	mov	r7, r0
 800d080:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800d084:	f7ff ffa8 	bl	800cfd8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800d088:	fb06 9505 	mla	r5, r6, r5, r9
 800d08c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800d090:	f8ad 3018 	strh.w	r3, [sp, #24]
 800d094:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800d098:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800d09c:	6878      	ldr	r0, [r7, #4]
 800d09e:	9505      	str	r5, [sp, #20]
 800d0a0:	f8ad 301a 	strh.w	r3, [sp, #26]
 800d0a4:	f8ad 401c 	strh.w	r4, [sp, #28]
 800d0a8:	f8ad 601e 	strh.w	r6, [sp, #30]
 800d0ac:	f8cd 8010 	str.w	r8, [sp, #16]
 800d0b0:	f8ad 4020 	strh.w	r4, [sp, #32]
 800d0b4:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800d0b8:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 800d0bc:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 800d0c0:	6803      	ldr	r3, [r0, #0]
 800d0c2:	a901      	add	r1, sp, #4
 800d0c4:	685b      	ldr	r3, [r3, #4]
 800d0c6:	4798      	blx	r3
 800d0c8:	b00b      	add	sp, #44	; 0x2c
 800d0ca:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

0800d0d0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 800d0d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d0d4:	b08a      	sub	sp, #40	; 0x28
 800d0d6:	4698      	mov	r8, r3
 800d0d8:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
 800d0dc:	f89d c054 	ldrb.w	ip, [sp, #84]	; 0x54
 800d0e0:	f8bd 7058 	ldrh.w	r7, [sp, #88]	; 0x58
 800d0e4:	f89d 4060 	ldrb.w	r4, [sp, #96]	; 0x60
 800d0e8:	2300      	movs	r3, #0
 800d0ea:	2d0b      	cmp	r5, #11
 800d0ec:	4606      	mov	r6, r0
 800d0ee:	9304      	str	r3, [sp, #16]
 800d0f0:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 800d0f4:	d138      	bne.n	800d168 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 800d0f6:	2380      	movs	r3, #128	; 0x80
 800d0f8:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800d0fc:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800d100:	f8ad 3018 	strh.w	r3, [sp, #24]
 800d104:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800d108:	f8ad 301a 	strh.w	r3, [sp, #26]
 800d10c:	f88d 0020 	strb.w	r0, [sp, #32]
 800d110:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800d114:	f8ad 301c 	strh.w	r3, [sp, #28]
 800d118:	4630      	mov	r0, r6
 800d11a:	9203      	str	r2, [sp, #12]
 800d11c:	f7ff ff5c 	bl	800cfd8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800d120:	2c0b      	cmp	r4, #11
 800d122:	bf98      	it	ls
 800d124:	4b1b      	ldrls	r3, [pc, #108]	; (800d194 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 800d126:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 800d12a:	bf98      	it	ls
 800d12c:	5d19      	ldrbls	r1, [r3, r4]
 800d12e:	f8ad 701e 	strh.w	r7, [sp, #30]
 800d132:	bf88      	it	hi
 800d134:	2100      	movhi	r1, #0
 800d136:	fb02 8307 	mla	r3, r2, r7, r8
 800d13a:	10c9      	asrs	r1, r1, #3
 800d13c:	fb01 0003 	mla	r0, r1, r3, r0
 800d140:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
 800d144:	9005      	str	r0, [sp, #20]
 800d146:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 800d14a:	6870      	ldr	r0, [r6, #4]
 800d14c:	f88d 5021 	strb.w	r5, [sp, #33]	; 0x21
 800d150:	2300      	movs	r3, #0
 800d152:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800d156:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800d15a:	6803      	ldr	r3, [r0, #0]
 800d15c:	a901      	add	r1, sp, #4
 800d15e:	685b      	ldr	r3, [r3, #4]
 800d160:	4798      	blx	r3
 800d162:	b00a      	add	sp, #40	; 0x28
 800d164:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d168:	2d02      	cmp	r5, #2
 800d16a:	d109      	bne.n	800d180 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 800d16c:	28ff      	cmp	r0, #255	; 0xff
 800d16e:	d105      	bne.n	800d17c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 800d170:	f1bc 0f00 	cmp.w	ip, #0
 800d174:	bf14      	ite	ne
 800d176:	2340      	movne	r3, #64	; 0x40
 800d178:	2320      	moveq	r3, #32
 800d17a:	e7bd      	b.n	800d0f8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800d17c:	2340      	movs	r3, #64	; 0x40
 800d17e:	e7bb      	b.n	800d0f8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800d180:	28ff      	cmp	r0, #255	; 0xff
 800d182:	d105      	bne.n	800d190 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 800d184:	f1bc 0f00 	cmp.w	ip, #0
 800d188:	bf14      	ite	ne
 800d18a:	2304      	movne	r3, #4
 800d18c:	2301      	moveq	r3, #1
 800d18e:	e7b3      	b.n	800d0f8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800d190:	2304      	movs	r3, #4
 800d192:	e7b1      	b.n	800d0f8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800d194:	08024c34 	.word	0x08024c34

0800d198 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 800d198:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d19c:	b08b      	sub	sp, #44	; 0x2c
 800d19e:	461d      	mov	r5, r3
 800d1a0:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 800d1a4:	f89d 6060 	ldrb.w	r6, [sp, #96]	; 0x60
 800d1a8:	f8bd a05c 	ldrh.w	sl, [sp, #92]	; 0x5c
 800d1ac:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 800d1b0:	bf14      	ite	ne
 800d1b2:	2308      	movne	r3, #8
 800d1b4:	2302      	moveq	r3, #2
 800d1b6:	2400      	movs	r4, #0
 800d1b8:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800d1bc:	4688      	mov	r8, r1
 800d1be:	4693      	mov	fp, r2
 800d1c0:	9404      	str	r4, [sp, #16]
 800d1c2:	4607      	mov	r7, r0
 800d1c4:	f7ff ff08 	bl	800cfd8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800d1c8:	2e0b      	cmp	r6, #11
 800d1ca:	bf98      	it	ls
 800d1cc:	4b15      	ldrls	r3, [pc, #84]	; (800d224 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 800d1ce:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 800d1d2:	bf98      	it	ls
 800d1d4:	5d9c      	ldrbls	r4, [r3, r6]
 800d1d6:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800d1da:	f8ad 3018 	strh.w	r3, [sp, #24]
 800d1de:	fb05 b50a 	mla	r5, r5, sl, fp
 800d1e2:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 800d1e6:	f8ad 301a 	strh.w	r3, [sp, #26]
 800d1ea:	10e4      	asrs	r4, r4, #3
 800d1ec:	fb04 0405 	mla	r4, r4, r5, r0
 800d1f0:	2300      	movs	r3, #0
 800d1f2:	6878      	ldr	r0, [r7, #4]
 800d1f4:	9405      	str	r4, [sp, #20]
 800d1f6:	f8ad 301c 	strh.w	r3, [sp, #28]
 800d1fa:	f8ad a01e 	strh.w	sl, [sp, #30]
 800d1fe:	f8cd 8010 	str.w	r8, [sp, #16]
 800d202:	f88d 9020 	strb.w	r9, [sp, #32]
 800d206:	f88d 2023 	strb.w	r2, [sp, #35]	; 0x23
 800d20a:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800d20e:	f88d 6021 	strb.w	r6, [sp, #33]	; 0x21
 800d212:	f88d 6022 	strb.w	r6, [sp, #34]	; 0x22
 800d216:	6803      	ldr	r3, [r0, #0]
 800d218:	a901      	add	r1, sp, #4
 800d21a:	685b      	ldr	r3, [r3, #4]
 800d21c:	4798      	blx	r3
 800d21e:	b00b      	add	sp, #44	; 0x2c
 800d220:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d224:	08024c34 	.word	0x08024c34

0800d228 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 800d228:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d22c:	461e      	mov	r6, r3
 800d22e:	4b0a      	ldr	r3, [pc, #40]	; (800d258 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 800d230:	460f      	mov	r7, r1
 800d232:	881d      	ldrh	r5, [r3, #0]
 800d234:	4690      	mov	r8, r2
 800d236:	f7f5 f8d5 	bl	80023e4 <_ZN8touchgfx3HAL3lcdEv>
 800d23a:	6803      	ldr	r3, [r0, #0]
 800d23c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d23e:	4798      	blx	r3
 800d240:	280b      	cmp	r0, #11
 800d242:	bf9a      	itte	ls
 800d244:	4b05      	ldrls	r3, [pc, #20]	; (800d25c <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 800d246:	5c1c      	ldrbls	r4, [r3, r0]
 800d248:	2400      	movhi	r4, #0
 800d24a:	fb08 7005 	mla	r0, r8, r5, r7
 800d24e:	10e4      	asrs	r4, r4, #3
 800d250:	fb04 6000 	mla	r0, r4, r0, r6
 800d254:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d258:	20017946 	.word	0x20017946
 800d25c:	08024c34 	.word	0x08024c34

0800d260 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 800d260:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d262:	b08b      	sub	sp, #44	; 0x2c
 800d264:	461f      	mov	r7, r3
 800d266:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 800d26a:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800d26e:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800d272:	f8ad 3018 	strh.w	r3, [sp, #24]
 800d276:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800d27a:	f8ad 301a 	strh.w	r3, [sp, #26]
 800d27e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800d282:	f8ad 301c 	strh.w	r3, [sp, #28]
 800d286:	2500      	movs	r5, #0
 800d288:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 800d28c:	f88d 3020 	strb.w	r3, [sp, #32]
 800d290:	4604      	mov	r4, r0
 800d292:	4616      	mov	r6, r2
 800d294:	9504      	str	r5, [sp, #16]
 800d296:	f7ff fe9f 	bl	800cfd8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800d29a:	463a      	mov	r2, r7
 800d29c:	4631      	mov	r1, r6
 800d29e:	4603      	mov	r3, r0
 800d2a0:	4620      	mov	r0, r4
 800d2a2:	f7ff ffc1 	bl	800d228 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800d2a6:	4b0e      	ldr	r3, [pc, #56]	; (800d2e0 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 800d2a8:	9005      	str	r0, [sp, #20]
 800d2aa:	881b      	ldrh	r3, [r3, #0]
 800d2ac:	f8ad 301e 	strh.w	r3, [sp, #30]
 800d2b0:	f7f5 f898 	bl	80023e4 <_ZN8touchgfx3HAL3lcdEv>
 800d2b4:	6803      	ldr	r3, [r0, #0]
 800d2b6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d2b8:	4798      	blx	r3
 800d2ba:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800d2bc:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 800d2c0:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 800d2c4:	9304      	str	r3, [sp, #16]
 800d2c6:	6860      	ldr	r0, [r4, #4]
 800d2c8:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800d2cc:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 800d2d0:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
 800d2d4:	6803      	ldr	r3, [r0, #0]
 800d2d6:	a901      	add	r1, sp, #4
 800d2d8:	685b      	ldr	r3, [r3, #4]
 800d2da:	4798      	blx	r3
 800d2dc:	b00b      	add	sp, #44	; 0x2c
 800d2de:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d2e0:	20017946 	.word	0x20017946

0800d2e4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 800d2e4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d2e6:	b08d      	sub	sp, #52	; 0x34
 800d2e8:	466b      	mov	r3, sp
 800d2ea:	e883 0006 	stmia.w	r3, {r1, r2}
 800d2ee:	2300      	movs	r3, #0
 800d2f0:	9306      	str	r3, [sp, #24]
 800d2f2:	6803      	ldr	r3, [r0, #0]
 800d2f4:	f8bd 6000 	ldrh.w	r6, [sp]
 800d2f8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800d2fa:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 800d2fe:	2501      	movs	r5, #1
 800d300:	9503      	str	r5, [sp, #12]
 800d302:	4604      	mov	r4, r0
 800d304:	4798      	blx	r3
 800d306:	463a      	mov	r2, r7
 800d308:	4631      	mov	r1, r6
 800d30a:	4603      	mov	r3, r0
 800d30c:	4620      	mov	r0, r4
 800d30e:	f7ff ff8b 	bl	800d228 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800d312:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800d314:	9307      	str	r3, [sp, #28]
 800d316:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800d31a:	f8ad 3020 	strh.w	r3, [sp, #32]
 800d31e:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800d322:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800d326:	4b0f      	ldr	r3, [pc, #60]	; (800d364 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 800d328:	9004      	str	r0, [sp, #16]
 800d32a:	881b      	ldrh	r3, [r3, #0]
 800d32c:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800d330:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800d334:	f7f5 f856 	bl	80023e4 <_ZN8touchgfx3HAL3lcdEv>
 800d338:	6803      	ldr	r3, [r0, #0]
 800d33a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d33c:	4798      	blx	r3
 800d33e:	23ff      	movs	r3, #255	; 0xff
 800d340:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 800d344:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800d348:	6860      	ldr	r0, [r4, #4]
 800d34a:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 800d34e:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 800d352:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800d356:	6803      	ldr	r3, [r0, #0]
 800d358:	a903      	add	r1, sp, #12
 800d35a:	685b      	ldr	r3, [r3, #4]
 800d35c:	4798      	blx	r3
 800d35e:	6c60      	ldr	r0, [r4, #68]	; 0x44
 800d360:	b00d      	add	sp, #52	; 0x34
 800d362:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d364:	20017946 	.word	0x20017946

0800d368 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 800d368:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d36c:	b08c      	sub	sp, #48	; 0x30
 800d36e:	461e      	mov	r6, r3
 800d370:	466d      	mov	r5, sp
 800d372:	2300      	movs	r3, #0
 800d374:	e885 0006 	stmia.w	r5, {r1, r2}
 800d378:	9306      	str	r3, [sp, #24]
 800d37a:	6803      	ldr	r3, [r0, #0]
 800d37c:	f8bd 7000 	ldrh.w	r7, [sp]
 800d380:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800d382:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 800d386:	2501      	movs	r5, #1
 800d388:	9503      	str	r5, [sp, #12]
 800d38a:	4604      	mov	r4, r0
 800d38c:	4798      	blx	r3
 800d38e:	4642      	mov	r2, r8
 800d390:	4639      	mov	r1, r7
 800d392:	4603      	mov	r3, r0
 800d394:	4620      	mov	r0, r4
 800d396:	f7ff ff47 	bl	800d228 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800d39a:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800d39e:	f8ad 3020 	strh.w	r3, [sp, #32]
 800d3a2:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800d3a6:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800d3aa:	4b11      	ldr	r3, [pc, #68]	; (800d3f0 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 800d3ac:	9004      	str	r0, [sp, #16]
 800d3ae:	881b      	ldrh	r3, [r3, #0]
 800d3b0:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800d3b4:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800d3b6:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800d3ba:	9607      	str	r6, [sp, #28]
 800d3bc:	f7f5 f812 	bl	80023e4 <_ZN8touchgfx3HAL3lcdEv>
 800d3c0:	6803      	ldr	r3, [r0, #0]
 800d3c2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d3c4:	4798      	blx	r3
 800d3c6:	23ff      	movs	r3, #255	; 0xff
 800d3c8:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 800d3cc:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800d3d0:	6860      	ldr	r0, [r4, #4]
 800d3d2:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 800d3d6:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 800d3da:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800d3de:	6803      	ldr	r3, [r0, #0]
 800d3e0:	a903      	add	r1, sp, #12
 800d3e2:	685b      	ldr	r3, [r3, #4]
 800d3e4:	4798      	blx	r3
 800d3e6:	4630      	mov	r0, r6
 800d3e8:	b00c      	add	sp, #48	; 0x30
 800d3ea:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d3ee:	bf00      	nop
 800d3f0:	20017946 	.word	0x20017946

0800d3f4 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 800d3f4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d3f6:	b085      	sub	sp, #20
 800d3f8:	ac02      	add	r4, sp, #8
 800d3fa:	e884 0006 	stmia.w	r4, {r1, r2}
 800d3fe:	4605      	mov	r5, r0
 800d400:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 800d404:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 800d408:	f7ff fde6 	bl	800cfd8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800d40c:	463a      	mov	r2, r7
 800d40e:	4603      	mov	r3, r0
 800d410:	4631      	mov	r1, r6
 800d412:	4628      	mov	r0, r5
 800d414:	f7ff ff08 	bl	800d228 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800d418:	4a05      	ldr	r2, [pc, #20]	; (800d430 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 800d41a:	682b      	ldr	r3, [r5, #0]
 800d41c:	8812      	ldrh	r2, [r2, #0]
 800d41e:	9200      	str	r2, [sp, #0]
 800d420:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 800d422:	e894 0006 	ldmia.w	r4, {r1, r2}
 800d426:	4603      	mov	r3, r0
 800d428:	4628      	mov	r0, r5
 800d42a:	47b0      	blx	r6
 800d42c:	b005      	add	sp, #20
 800d42e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d430:	20017946 	.word	0x20017946

0800d434 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 800d434:	b570      	push	{r4, r5, r6, lr}
 800d436:	f890 306a 	ldrb.w	r3, [r0, #106]	; 0x6a
 800d43a:	4604      	mov	r4, r0
 800d43c:	b19b      	cbz	r3, 800d466 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 800d43e:	2002      	movs	r0, #2
 800d440:	f7f3 f980 	bl	8000744 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 800d444:	2300      	movs	r3, #0
 800d446:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 800d44a:	f884 3069 	strb.w	r3, [r4, #105]	; 0x69
 800d44e:	6823      	ldr	r3, [r4, #0]
 800d450:	4620      	mov	r0, r4
 800d452:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 800d456:	f7ff fdbf 	bl	800cfd8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800d45a:	462b      	mov	r3, r5
 800d45c:	4601      	mov	r1, r0
 800d45e:	4620      	mov	r0, r4
 800d460:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d464:	4718      	bx	r3
 800d466:	bd70      	pop	{r4, r5, r6, pc}

0800d468 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 800d468:	b538      	push	{r3, r4, r5, lr}
 800d46a:	f890 3078 	ldrb.w	r3, [r0, #120]	; 0x78
 800d46e:	428b      	cmp	r3, r1
 800d470:	4604      	mov	r4, r0
 800d472:	460d      	mov	r5, r1
 800d474:	d006      	beq.n	800d484 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 800d476:	6803      	ldr	r3, [r0, #0]
 800d478:	b929      	cbnz	r1, 800d486 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 800d47a:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 800d47e:	4798      	blx	r3
 800d480:	f884 5078 	strb.w	r5, [r4, #120]	; 0x78
 800d484:	bd38      	pop	{r3, r4, r5, pc}
 800d486:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 800d48a:	e7f8      	b.n	800d47e <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

0800d48c <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 800d48c:	b510      	push	{r4, lr}
 800d48e:	4b0d      	ldr	r3, [pc, #52]	; (800d4c4 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 800d490:	781b      	ldrb	r3, [r3, #0]
 800d492:	4604      	mov	r4, r0
 800d494:	b95b      	cbnz	r3, 800d4ae <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800d496:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 800d49a:	2b02      	cmp	r3, #2
 800d49c:	d007      	beq.n	800d4ae <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800d49e:	6840      	ldr	r0, [r0, #4]
 800d4a0:	f000 f92a 	bl	800d6f8 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 800d4a4:	b118      	cbz	r0, 800d4ae <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800d4a6:	6862      	ldr	r2, [r4, #4]
 800d4a8:	7a53      	ldrb	r3, [r2, #9]
 800d4aa:	2b00      	cmp	r3, #0
 800d4ac:	d0fc      	beq.n	800d4a8 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 800d4ae:	f7f3 fa43 	bl	8000938 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800d4b2:	4620      	mov	r0, r4
 800d4b4:	2100      	movs	r1, #0
 800d4b6:	f7ff ffd7 	bl	800d468 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800d4ba:	4620      	mov	r0, r4
 800d4bc:	f7ff fd8c 	bl	800cfd8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800d4c0:	bd10      	pop	{r4, pc}
 800d4c2:	bf00      	nop
 800d4c4:	2001794a 	.word	0x2001794a

0800d4c8 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
 800d4c8:	b570      	push	{r4, r5, r6, lr}
 800d4ca:	4604      	mov	r4, r0
 800d4cc:	6803      	ldr	r3, [r0, #0]
 800d4ce:	b919      	cbnz	r1, 800d4d8 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
 800d4d0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800d4d2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d4d6:	4718      	bx	r3
 800d4d8:	2200      	movs	r2, #0
 800d4da:	f890 6078 	ldrb.w	r6, [r0, #120]	; 0x78
 800d4de:	f880 2078 	strb.w	r2, [r0, #120]	; 0x78
 800d4e2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800d4e4:	4798      	blx	r3
 800d4e6:	f884 6078 	strb.w	r6, [r4, #120]	; 0x78
 800d4ea:	4605      	mov	r5, r0
 800d4ec:	2101      	movs	r1, #1
 800d4ee:	4620      	mov	r0, r4
 800d4f0:	f7ff ffba 	bl	800d468 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800d4f4:	4628      	mov	r0, r5
 800d4f6:	bd70      	pop	{r4, r5, r6, pc}

0800d4f8 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 800d4f8:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 800d4fc:	1a13      	subs	r3, r2, r0
 800d4fe:	4258      	negs	r0, r3
 800d500:	4158      	adcs	r0, r3
 800d502:	4770      	bx	lr

0800d504 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 800d504:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 800d508:	1a9b      	subs	r3, r3, r2
 800d50a:	2b00      	cmp	r3, #0
 800d50c:	bfdc      	itt	le
 800d50e:	6882      	ldrle	r2, [r0, #8]
 800d510:	189b      	addle	r3, r3, r2
 800d512:	2b01      	cmp	r3, #1
 800d514:	bfcc      	ite	gt
 800d516:	2000      	movgt	r0, #0
 800d518:	2001      	movle	r0, #1
 800d51a:	4770      	bx	lr

0800d51c <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 800d51c:	6902      	ldr	r2, [r0, #16]
 800d51e:	6843      	ldr	r3, [r0, #4]
 800d520:	2024      	movs	r0, #36	; 0x24
 800d522:	fb00 3002 	mla	r0, r0, r2, r3
 800d526:	4770      	bx	lr

0800d528 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 800d528:	6803      	ldr	r3, [r0, #0]
 800d52a:	691b      	ldr	r3, [r3, #16]
 800d52c:	4718      	bx	r3

0800d52e <_ZN8touchgfx13DMA_Interface7executeEv>:
 800d52e:	b570      	push	{r4, r5, r6, lr}
 800d530:	2301      	movs	r3, #1
 800d532:	7203      	strb	r3, [r0, #8]
 800d534:	4604      	mov	r4, r0
 800d536:	6840      	ldr	r0, [r0, #4]
 800d538:	6803      	ldr	r3, [r0, #0]
 800d53a:	699b      	ldr	r3, [r3, #24]
 800d53c:	4798      	blx	r3
 800d53e:	6803      	ldr	r3, [r0, #0]
 800d540:	2b40      	cmp	r3, #64	; 0x40
 800d542:	4605      	mov	r5, r0
 800d544:	d00c      	beq.n	800d560 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800d546:	d810      	bhi.n	800d56a <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 800d548:	2b04      	cmp	r3, #4
 800d54a:	d01d      	beq.n	800d588 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 800d54c:	d804      	bhi.n	800d558 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 800d54e:	2b01      	cmp	r3, #1
 800d550:	d006      	beq.n	800d560 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800d552:	2b02      	cmp	r3, #2
 800d554:	d02c      	beq.n	800d5b0 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 800d556:	bd70      	pop	{r4, r5, r6, pc}
 800d558:	2b08      	cmp	r3, #8
 800d55a:	d01d      	beq.n	800d598 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 800d55c:	2b20      	cmp	r3, #32
 800d55e:	d1fa      	bne.n	800d556 <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 800d560:	6823      	ldr	r3, [r4, #0]
 800d562:	4620      	mov	r0, r4
 800d564:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d566:	4798      	blx	r3
 800d568:	e013      	b.n	800d592 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 800d56a:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800d56e:	d0f7      	beq.n	800d560 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800d570:	d804      	bhi.n	800d57c <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 800d572:	2b80      	cmp	r3, #128	; 0x80
 800d574:	d0f4      	beq.n	800d560 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800d576:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800d57a:	e7f0      	b.n	800d55e <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 800d57c:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800d580:	d0ee      	beq.n	800d560 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800d582:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800d586:	e7e5      	b.n	800d554 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 800d588:	6823      	ldr	r3, [r4, #0]
 800d58a:	7f01      	ldrb	r1, [r0, #28]
 800d58c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800d58e:	4620      	mov	r0, r4
 800d590:	4798      	blx	r3
 800d592:	6823      	ldr	r3, [r4, #0]
 800d594:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800d596:	e006      	b.n	800d5a6 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800d598:	6823      	ldr	r3, [r4, #0]
 800d59a:	7f01      	ldrb	r1, [r0, #28]
 800d59c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800d59e:	4620      	mov	r0, r4
 800d5a0:	4798      	blx	r3
 800d5a2:	6823      	ldr	r3, [r4, #0]
 800d5a4:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800d5a6:	4629      	mov	r1, r5
 800d5a8:	4620      	mov	r0, r4
 800d5aa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d5ae:	4718      	bx	r3
 800d5b0:	6823      	ldr	r3, [r4, #0]
 800d5b2:	4620      	mov	r0, r4
 800d5b4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d5b6:	4798      	blx	r3
 800d5b8:	e7f3      	b.n	800d5a2 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

0800d5ba <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 800d5ba:	4770      	bx	lr

0800d5bc <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 800d5bc:	4770      	bx	lr

0800d5be <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 800d5be:	4770      	bx	lr

0800d5c0 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 800d5c0:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 800d5c4:	1ad2      	subs	r2, r2, r3
 800d5c6:	2a00      	cmp	r2, #0
 800d5c8:	b510      	push	{r4, lr}
 800d5ca:	bfdc      	itt	le
 800d5cc:	6884      	ldrle	r4, [r0, #8]
 800d5ce:	1912      	addle	r2, r2, r4
 800d5d0:	2a01      	cmp	r2, #1
 800d5d2:	dd16      	ble.n	800d602 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 800d5d4:	6842      	ldr	r2, [r0, #4]
 800d5d6:	2424      	movs	r4, #36	; 0x24
 800d5d8:	fb04 2303 	mla	r3, r4, r3, r2
 800d5dc:	f101 0220 	add.w	r2, r1, #32
 800d5e0:	f851 4b04 	ldr.w	r4, [r1], #4
 800d5e4:	f843 4b04 	str.w	r4, [r3], #4
 800d5e8:	4291      	cmp	r1, r2
 800d5ea:	d1f9      	bne.n	800d5e0 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 800d5ec:	780a      	ldrb	r2, [r1, #0]
 800d5ee:	701a      	strb	r2, [r3, #0]
 800d5f0:	68c3      	ldr	r3, [r0, #12]
 800d5f2:	6882      	ldr	r2, [r0, #8]
 800d5f4:	f3bf 8f5b 	dmb	ish
 800d5f8:	3301      	adds	r3, #1
 800d5fa:	429a      	cmp	r2, r3
 800d5fc:	bfd8      	it	le
 800d5fe:	1a9b      	suble	r3, r3, r2
 800d600:	60c3      	str	r3, [r0, #12]
 800d602:	bd10      	pop	{r4, pc}

0800d604 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 800d604:	6903      	ldr	r3, [r0, #16]
 800d606:	6882      	ldr	r2, [r0, #8]
 800d608:	f3bf 8f5b 	dmb	ish
 800d60c:	3301      	adds	r3, #1
 800d60e:	429a      	cmp	r2, r3
 800d610:	bfd8      	it	le
 800d612:	1a9b      	suble	r3, r3, r2
 800d614:	6103      	str	r3, [r0, #16]
 800d616:	4770      	bx	lr

0800d618 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 800d618:	b570      	push	{r4, r5, r6, lr}
 800d61a:	4604      	mov	r4, r0
 800d61c:	460e      	mov	r6, r1
 800d61e:	6860      	ldr	r0, [r4, #4]
 800d620:	6803      	ldr	r3, [r0, #0]
 800d622:	685b      	ldr	r3, [r3, #4]
 800d624:	4798      	blx	r3
 800d626:	2800      	cmp	r0, #0
 800d628:	d1f9      	bne.n	800d61e <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 800d62a:	4d0d      	ldr	r5, [pc, #52]	; (800d660 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 800d62c:	6828      	ldr	r0, [r5, #0]
 800d62e:	6803      	ldr	r3, [r0, #0]
 800d630:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800d632:	4798      	blx	r3
 800d634:	f7f3 f98e 	bl	8000954 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 800d638:	6828      	ldr	r0, [r5, #0]
 800d63a:	2101      	movs	r1, #1
 800d63c:	f7ff ff14 	bl	800d468 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800d640:	6860      	ldr	r0, [r4, #4]
 800d642:	6803      	ldr	r3, [r0, #0]
 800d644:	4631      	mov	r1, r6
 800d646:	689b      	ldr	r3, [r3, #8]
 800d648:	4798      	blx	r3
 800d64a:	6823      	ldr	r3, [r4, #0]
 800d64c:	4620      	mov	r0, r4
 800d64e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d650:	4798      	blx	r3
 800d652:	6828      	ldr	r0, [r5, #0]
 800d654:	6803      	ldr	r3, [r0, #0]
 800d656:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d65a:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800d65c:	4718      	bx	r3
 800d65e:	bf00      	nop
 800d660:	2001794c 	.word	0x2001794c

0800d664 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800d664:	b508      	push	{r3, lr}
 800d666:	f7f3 f967 	bl	8000938 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800d66a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800d66e:	f7f3 b96b 	b.w	8000948 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800d672 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800d672:	b510      	push	{r4, lr}
 800d674:	2114      	movs	r1, #20
 800d676:	4604      	mov	r4, r0
 800d678:	f014 fae6 	bl	8021c48 <_ZdlPvj>
 800d67c:	4620      	mov	r0, r4
 800d67e:	bd10      	pop	{r4, pc}

0800d680 <_ZN8touchgfx13DMA_Interface5startEv>:
 800d680:	b510      	push	{r4, lr}
 800d682:	4604      	mov	r4, r0
 800d684:	6840      	ldr	r0, [r0, #4]
 800d686:	6803      	ldr	r3, [r0, #0]
 800d688:	681b      	ldr	r3, [r3, #0]
 800d68a:	4798      	blx	r3
 800d68c:	b948      	cbnz	r0, 800d6a2 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800d68e:	7a63      	ldrb	r3, [r4, #9]
 800d690:	b13b      	cbz	r3, 800d6a2 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800d692:	7a23      	ldrb	r3, [r4, #8]
 800d694:	b92b      	cbnz	r3, 800d6a2 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800d696:	6823      	ldr	r3, [r4, #0]
 800d698:	4620      	mov	r0, r4
 800d69a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800d69c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d6a0:	4718      	bx	r3
 800d6a2:	bd10      	pop	{r4, pc}

0800d6a4 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 800d6a4:	b570      	push	{r4, r5, r6, lr}
 800d6a6:	4604      	mov	r4, r0
 800d6a8:	6840      	ldr	r0, [r0, #4]
 800d6aa:	6803      	ldr	r3, [r0, #0]
 800d6ac:	681b      	ldr	r3, [r3, #0]
 800d6ae:	4798      	blx	r3
 800d6b0:	4605      	mov	r5, r0
 800d6b2:	b930      	cbnz	r0, 800d6c2 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800d6b4:	7a23      	ldrb	r3, [r4, #8]
 800d6b6:	b123      	cbz	r3, 800d6c2 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800d6b8:	6860      	ldr	r0, [r4, #4]
 800d6ba:	6803      	ldr	r3, [r0, #0]
 800d6bc:	695b      	ldr	r3, [r3, #20]
 800d6be:	4798      	blx	r3
 800d6c0:	7225      	strb	r5, [r4, #8]
 800d6c2:	6860      	ldr	r0, [r4, #4]
 800d6c4:	6803      	ldr	r3, [r0, #0]
 800d6c6:	681b      	ldr	r3, [r3, #0]
 800d6c8:	4798      	blx	r3
 800d6ca:	b928      	cbnz	r0, 800d6d8 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 800d6cc:	6823      	ldr	r3, [r4, #0]
 800d6ce:	4620      	mov	r0, r4
 800d6d0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800d6d2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d6d6:	4718      	bx	r3
 800d6d8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d6dc:	f7f3 b942 	b.w	8000964 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

0800d6e0 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 800d6e0:	b510      	push	{r4, lr}
 800d6e2:	4c04      	ldr	r4, [pc, #16]	; (800d6f4 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800d6e4:	6082      	str	r2, [r0, #8]
 800d6e6:	2200      	movs	r2, #0
 800d6e8:	e9c0 4100 	strd	r4, r1, [r0]
 800d6ec:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800d6f0:	bd10      	pop	{r4, pc}
 800d6f2:	bf00      	nop
 800d6f4:	08024c48 	.word	0x08024c48

0800d6f8 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800d6f8:	6840      	ldr	r0, [r0, #4]
 800d6fa:	6803      	ldr	r3, [r0, #0]
 800d6fc:	681b      	ldr	r3, [r3, #0]
 800d6fe:	4718      	bx	r3

0800d700 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 800d700:	4b06      	ldr	r3, [pc, #24]	; (800d71c <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
 800d702:	60c1      	str	r1, [r0, #12]
 800d704:	094a      	lsrs	r2, r1, #5
 800d706:	ea03 2311 	and.w	r3, r3, r1, lsr #8
 800d70a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 800d70e:	4313      	orrs	r3, r2
 800d710:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 800d714:	4319      	orrs	r1, r3
 800d716:	8201      	strh	r1, [r0, #16]
 800d718:	4770      	bx	lr
 800d71a:	bf00      	nop
 800d71c:	fffff800 	.word	0xfffff800

0800d720 <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 800d720:	f1a0 0008 	sub.w	r0, r0, #8
 800d724:	e7ec      	b.n	800d700 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
 800d726:	bf00      	nop

0800d728 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
 800d728:	b508      	push	{r3, lr}
 800d72a:	4b05      	ldr	r3, [pc, #20]	; (800d740 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
 800d72c:	6818      	ldr	r0, [r3, #0]
 800d72e:	6803      	ldr	r3, [r0, #0]
 800d730:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 800d734:	4798      	blx	r3
 800d736:	1e43      	subs	r3, r0, #1
 800d738:	4258      	negs	r0, r3
 800d73a:	4158      	adcs	r0, r3
 800d73c:	bd08      	pop	{r3, pc}
 800d73e:	bf00      	nop
 800d740:	2001794c 	.word	0x2001794c

0800d744 <_ZN8touchgfx13PainterRGB565D1Ev>:
 800d744:	4770      	bx	lr

0800d746 <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
 800d746:	3808      	subs	r0, #8
 800d748:	4770      	bx	lr

0800d74a <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
 800d74a:	b430      	push	{r4, r5}
 800d74c:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 800d750:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
 800d754:	8a02      	ldrh	r2, [r0, #16]
 800d756:	9202      	str	r2, [sp, #8]
 800d758:	f89d 3010 	ldrb.w	r3, [sp, #16]
 800d75c:	68c2      	ldr	r2, [r0, #12]
 800d75e:	4629      	mov	r1, r5
 800d760:	4620      	mov	r0, r4
 800d762:	bc30      	pop	{r4, r5}
 800d764:	f7f3 babc 	b.w	8000ce0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

0800d768 <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
 800d768:	f7f3 bab0 	b.w	8000ccc <_ZN8touchgfx5paint6rgb5658tearDownEv>

0800d76c <_ZN8touchgfx13PainterRGB565D0Ev>:
 800d76c:	b510      	push	{r4, lr}
 800d76e:	2114      	movs	r1, #20
 800d770:	4604      	mov	r4, r0
 800d772:	f014 fa69 	bl	8021c48 <_ZdlPvj>
 800d776:	4620      	mov	r0, r4
 800d778:	bd10      	pop	{r4, pc}

0800d77a <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
 800d77a:	f1a0 0008 	sub.w	r0, r0, #8
 800d77e:	e7f5      	b.n	800d76c <_ZN8touchgfx13PainterRGB565D0Ev>

0800d780 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 800d780:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800d782:	6803      	ldr	r3, [r0, #0]
 800d784:	460d      	mov	r5, r1
 800d786:	4604      	mov	r4, r0
 800d788:	4601      	mov	r1, r0
 800d78a:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800d78c:	a802      	add	r0, sp, #8
 800d78e:	4798      	blx	r3
 800d790:	6828      	ldr	r0, [r5, #0]
 800d792:	6869      	ldr	r1, [r5, #4]
 800d794:	466b      	mov	r3, sp
 800d796:	c303      	stmia	r3!, {r0, r1}
 800d798:	4668      	mov	r0, sp
 800d79a:	4619      	mov	r1, r3
 800d79c:	f7fe ffae 	bl	800c6fc <_ZN8touchgfx4RectaNERKS0_>
 800d7a0:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800d7a2:	b1a8      	cbz	r0, 800d7d0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x50>
 800d7a4:	6803      	ldr	r3, [r0, #0]
 800d7a6:	1d21      	adds	r1, r4, #4
 800d7a8:	68db      	ldr	r3, [r3, #12]
 800d7aa:	4798      	blx	r3
 800d7ac:	b180      	cbz	r0, 800d7d0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x50>
 800d7ae:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 800d7b2:	2b00      	cmp	r3, #0
 800d7b4:	dd0c      	ble.n	800d7d0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x50>
 800d7b6:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
 800d7ba:	2d00      	cmp	r5, #0
 800d7bc:	dd08      	ble.n	800d7d0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x50>
 800d7be:	4a2d      	ldr	r2, [pc, #180]	; (800d874 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xf4>)
 800d7c0:	7812      	ldrb	r2, [r2, #0]
 800d7c2:	b13a      	cbz	r2, 800d7d4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x54>
 800d7c4:	2a01      	cmp	r2, #1
 800d7c6:	d02d      	beq.n	800d824 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa4>
 800d7c8:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800d7ca:	6803      	ldr	r3, [r0, #0]
 800d7cc:	691b      	ldr	r3, [r3, #16]
 800d7ce:	4798      	blx	r3
 800d7d0:	b004      	add	sp, #16
 800d7d2:	bd70      	pop	{r4, r5, r6, pc}
 800d7d4:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800d7d8:	441d      	add	r5, r3
 800d7da:	b2ad      	uxth	r5, r5
 800d7dc:	b22e      	sxth	r6, r5
 800d7de:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 800d7e2:	42b3      	cmp	r3, r6
 800d7e4:	daf0      	bge.n	800d7c8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800d7e6:	6823      	ldr	r3, [r4, #0]
 800d7e8:	4669      	mov	r1, sp
 800d7ea:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800d7ec:	4620      	mov	r0, r4
 800d7ee:	4798      	blx	r3
 800d7f0:	b940      	cbnz	r0, 800d804 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x84>
 800d7f2:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 800d7f6:	2b01      	cmp	r3, #1
 800d7f8:	d004      	beq.n	800d804 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x84>
 800d7fa:	3301      	adds	r3, #1
 800d7fc:	105b      	asrs	r3, r3, #1
 800d7fe:	f8ad 3006 	strh.w	r3, [sp, #6]
 800d802:	e7f0      	b.n	800d7e6 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x66>
 800d804:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800d808:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800d80c:	4413      	add	r3, r2
 800d80e:	b29b      	uxth	r3, r3
 800d810:	441a      	add	r2, r3
 800d812:	b212      	sxth	r2, r2
 800d814:	4296      	cmp	r6, r2
 800d816:	f8ad 3002 	strh.w	r3, [sp, #2]
 800d81a:	dae0      	bge.n	800d7de <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 800d81c:	1aeb      	subs	r3, r5, r3
 800d81e:	f8ad 3006 	strh.w	r3, [sp, #6]
 800d822:	e7dc      	b.n	800d7de <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 800d824:	f8bd 5000 	ldrh.w	r5, [sp]
 800d828:	441d      	add	r5, r3
 800d82a:	b2ad      	uxth	r5, r5
 800d82c:	b22e      	sxth	r6, r5
 800d82e:	f9bd 3000 	ldrsh.w	r3, [sp]
 800d832:	42b3      	cmp	r3, r6
 800d834:	dac8      	bge.n	800d7c8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800d836:	6823      	ldr	r3, [r4, #0]
 800d838:	4669      	mov	r1, sp
 800d83a:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800d83c:	4620      	mov	r0, r4
 800d83e:	4798      	blx	r3
 800d840:	b940      	cbnz	r0, 800d854 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xd4>
 800d842:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 800d846:	2b01      	cmp	r3, #1
 800d848:	d004      	beq.n	800d854 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xd4>
 800d84a:	3301      	adds	r3, #1
 800d84c:	105b      	asrs	r3, r3, #1
 800d84e:	f8ad 3004 	strh.w	r3, [sp, #4]
 800d852:	e7f0      	b.n	800d836 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xb6>
 800d854:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 800d858:	f8bd 3000 	ldrh.w	r3, [sp]
 800d85c:	4413      	add	r3, r2
 800d85e:	b29b      	uxth	r3, r3
 800d860:	441a      	add	r2, r3
 800d862:	b212      	sxth	r2, r2
 800d864:	4296      	cmp	r6, r2
 800d866:	f8ad 3000 	strh.w	r3, [sp]
 800d86a:	dae0      	bge.n	800d82e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 800d86c:	1aeb      	subs	r3, r5, r3
 800d86e:	f8ad 3004 	strh.w	r3, [sp, #4]
 800d872:	e7dc      	b.n	800d82e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 800d874:	20017944 	.word	0x20017944

0800d878 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 800d878:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800d87a:	6803      	ldr	r3, [r0, #0]
 800d87c:	4604      	mov	r4, r0
 800d87e:	4601      	mov	r1, r0
 800d880:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800d882:	4668      	mov	r0, sp
 800d884:	4798      	blx	r3
 800d886:	2100      	movs	r1, #0
 800d888:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800d88c:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800d890:	9102      	str	r1, [sp, #8]
 800d892:	4668      	mov	r0, sp
 800d894:	a902      	add	r1, sp, #8
 800d896:	f8ad 200c 	strh.w	r2, [sp, #12]
 800d89a:	f8ad 300e 	strh.w	r3, [sp, #14]
 800d89e:	f7fe ff2d 	bl	800c6fc <_ZN8touchgfx4RectaNERKS0_>
 800d8a2:	6823      	ldr	r3, [r4, #0]
 800d8a4:	4669      	mov	r1, sp
 800d8a6:	691b      	ldr	r3, [r3, #16]
 800d8a8:	4620      	mov	r0, r4
 800d8aa:	4798      	blx	r3
 800d8ac:	b004      	add	sp, #16
 800d8ae:	bd10      	pop	{r4, pc}

0800d8b0 <_ZN8touchgfx12CanvasWidgetC1Ev>:
 800d8b0:	2101      	movs	r1, #1
 800d8b2:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 800d8b6:	490b      	ldr	r1, [pc, #44]	; (800d8e4 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
 800d8b8:	6001      	str	r1, [r0, #0]
 800d8ba:	2200      	movs	r2, #0
 800d8bc:	21ff      	movs	r1, #255	; 0xff
 800d8be:	8082      	strh	r2, [r0, #4]
 800d8c0:	80c2      	strh	r2, [r0, #6]
 800d8c2:	8102      	strh	r2, [r0, #8]
 800d8c4:	8142      	strh	r2, [r0, #10]
 800d8c6:	8182      	strh	r2, [r0, #12]
 800d8c8:	81c2      	strh	r2, [r0, #14]
 800d8ca:	8202      	strh	r2, [r0, #16]
 800d8cc:	8242      	strh	r2, [r0, #18]
 800d8ce:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800d8d2:	61c2      	str	r2, [r0, #28]
 800d8d4:	8402      	strh	r2, [r0, #32]
 800d8d6:	8442      	strh	r2, [r0, #34]	; 0x22
 800d8d8:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800d8dc:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
 800d8e0:	6282      	str	r2, [r0, #40]	; 0x28
 800d8e2:	4770      	bx	lr
 800d8e4:	08024ca4 	.word	0x08024ca4

0800d8e8 <_ZN8touchgfx17AbstractDataGraph9setScaleXEib>:
 800d8e8:	6301      	str	r1, [r0, #48]	; 0x30
 800d8ea:	4770      	bx	lr

0800d8ec <_ZNK8touchgfx17AbstractDataGraph9getScaleXEv>:
 800d8ec:	6b00      	ldr	r0, [r0, #48]	; 0x30
 800d8ee:	4770      	bx	lr

0800d8f0 <_ZN8touchgfx17AbstractDataGraph9setScaleYEib>:
 800d8f0:	6341      	str	r1, [r0, #52]	; 0x34
 800d8f2:	4770      	bx	lr

0800d8f4 <_ZNK8touchgfx17AbstractDataGraph9getScaleYEv>:
 800d8f4:	6b40      	ldr	r0, [r0, #52]	; 0x34
 800d8f6:	4770      	bx	lr

0800d8f8 <_ZN8touchgfx16DynamicDataGraph14beforeAddValueEv>:
 800d8f8:	4770      	bx	lr

0800d8fa <_ZNK8touchgfx16DynamicDataGraph18indexToGlobalIndexEs>:
 800d8fa:	4608      	mov	r0, r1
 800d8fc:	4770      	bx	lr

0800d8fe <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE>:
 800d8fe:	b530      	push	{r4, r5, lr}
 800d900:	460d      	mov	r5, r1
 800d902:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 800d904:	8949      	ldrh	r1, [r1, #10]
 800d906:	1ac9      	subs	r1, r1, r3
 800d908:	6803      	ldr	r3, [r0, #0]
 800d90a:	b085      	sub	sp, #20
 800d90c:	f8d3 3104 	ldr.w	r3, [r3, #260]	; 0x104
 800d910:	f10d 0206 	add.w	r2, sp, #6
 800d914:	b209      	sxth	r1, r1
 800d916:	4604      	mov	r4, r0
 800d918:	4798      	blx	r3
 800d91a:	b1a0      	cbz	r0, 800d946 <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 800d91c:	792b      	ldrb	r3, [r5, #4]
 800d91e:	b993      	cbnz	r3, 800d946 <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 800d920:	f8d4 0128 	ldr.w	r0, [r4, #296]	; 0x128
 800d924:	b178      	cbz	r0, 800d946 <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 800d926:	6803      	ldr	r3, [r0, #0]
 800d928:	68db      	ldr	r3, [r3, #12]
 800d92a:	4798      	blx	r3
 800d92c:	b158      	cbz	r0, 800d946 <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 800d92e:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 800d932:	f8d4 0128 	ldr.w	r0, [r4, #296]	; 0x128
 800d936:	f8ad 3008 	strh.w	r3, [sp, #8]
 800d93a:	9503      	str	r5, [sp, #12]
 800d93c:	6803      	ldr	r3, [r0, #0]
 800d93e:	aa02      	add	r2, sp, #8
 800d940:	689b      	ldr	r3, [r3, #8]
 800d942:	4621      	mov	r1, r4
 800d944:	4798      	blx	r3
 800d946:	b005      	add	sp, #20
 800d948:	bd30      	pop	{r4, r5, pc}

0800d94a <_ZN8touchgfx17AbstractDataGraph20setGraphRangeXScaledEii>:
 800d94a:	b510      	push	{r4, lr}
 800d94c:	428a      	cmp	r2, r1
 800d94e:	bfbe      	ittt	lt
 800d950:	460b      	movlt	r3, r1
 800d952:	4611      	movlt	r1, r2
 800d954:	461a      	movlt	r2, r3
 800d956:	f8d0 312c 	ldr.w	r3, [r0, #300]	; 0x12c
 800d95a:	428b      	cmp	r3, r1
 800d95c:	4604      	mov	r4, r0
 800d95e:	d103      	bne.n	800d968 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeXScaledEii+0x1e>
 800d960:	f8d0 3130 	ldr.w	r3, [r0, #304]	; 0x130
 800d964:	4293      	cmp	r3, r2
 800d966:	d011      	beq.n	800d98c <_ZN8touchgfx17AbstractDataGraph20setGraphRangeXScaledEii+0x42>
 800d968:	f8c4 112c 	str.w	r1, [r4, #300]	; 0x12c
 800d96c:	f8c4 2130 	str.w	r2, [r4, #304]	; 0x130
 800d970:	f104 00bc 	add.w	r0, r4, #188	; 0xbc
 800d974:	f005 fde3 	bl	801353e <_ZNK8touchgfx8Drawable10invalidateEv>
 800d978:	f104 0038 	add.w	r0, r4, #56	; 0x38
 800d97c:	f005 fddf 	bl	801353e <_ZNK8touchgfx8Drawable10invalidateEv>
 800d980:	f104 00e8 	add.w	r0, r4, #232	; 0xe8
 800d984:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d988:	f005 bdd9 	b.w	801353e <_ZNK8touchgfx8Drawable10invalidateEv>
 800d98c:	bd10      	pop	{r4, pc}

0800d98e <_ZN8touchgfx17AbstractDataGraph20setGraphRangeYScaledEii>:
 800d98e:	b510      	push	{r4, lr}
 800d990:	428a      	cmp	r2, r1
 800d992:	bfbe      	ittt	lt
 800d994:	460b      	movlt	r3, r1
 800d996:	4611      	movlt	r1, r2
 800d998:	461a      	movlt	r2, r3
 800d99a:	f8d0 3134 	ldr.w	r3, [r0, #308]	; 0x134
 800d99e:	428b      	cmp	r3, r1
 800d9a0:	4604      	mov	r4, r0
 800d9a2:	d103      	bne.n	800d9ac <_ZN8touchgfx17AbstractDataGraph20setGraphRangeYScaledEii+0x1e>
 800d9a4:	f8d0 3138 	ldr.w	r3, [r0, #312]	; 0x138
 800d9a8:	4293      	cmp	r3, r2
 800d9aa:	d011      	beq.n	800d9d0 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeYScaledEii+0x42>
 800d9ac:	f8c4 1134 	str.w	r1, [r4, #308]	; 0x134
 800d9b0:	f8c4 2138 	str.w	r2, [r4, #312]	; 0x138
 800d9b4:	f104 0064 	add.w	r0, r4, #100	; 0x64
 800d9b8:	f005 fdc1 	bl	801353e <_ZNK8touchgfx8Drawable10invalidateEv>
 800d9bc:	f104 0038 	add.w	r0, r4, #56	; 0x38
 800d9c0:	f005 fdbd 	bl	801353e <_ZNK8touchgfx8Drawable10invalidateEv>
 800d9c4:	f104 0090 	add.w	r0, r4, #144	; 0x90
 800d9c8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d9cc:	f005 bdb7 	b.w	801353e <_ZNK8touchgfx8Drawable10invalidateEv>
 800d9d0:	bd10      	pop	{r4, pc}

0800d9d2 <_ZN8touchgfx17AbstractDataGraph5clearEv>:
 800d9d2:	2300      	movs	r3, #0
 800d9d4:	f8a0 311e 	strh.w	r3, [r0, #286]	; 0x11e
 800d9d8:	3038      	adds	r0, #56	; 0x38
 800d9da:	f005 bdb0 	b.w	801353e <_ZNK8touchgfx8Drawable10invalidateEv>

0800d9de <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi>:
 800d9de:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d9e2:	f9b0 311e 	ldrsh.w	r3, [r0, #286]	; 0x11e
 800d9e6:	4605      	mov	r5, r0
 800d9e8:	4688      	mov	r8, r1
 800d9ea:	4617      	mov	r7, r2
 800d9ec:	2b00      	cmp	r3, #0
 800d9ee:	d03f      	beq.n	800da70 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x92>
 800d9f0:	6803      	ldr	r3, [r0, #0]
 800d9f2:	f8d3 3130 	ldr.w	r3, [r3, #304]	; 0x130
 800d9f6:	4798      	blx	r3
 800d9f8:	682b      	ldr	r3, [r5, #0]
 800d9fa:	4604      	mov	r4, r0
 800d9fc:	f8d3 3134 	ldr.w	r3, [r3, #308]	; 0x134
 800da00:	4628      	mov	r0, r5
 800da02:	4798      	blx	r3
 800da04:	4284      	cmp	r4, r0
 800da06:	bfc8      	it	gt
 800da08:	4623      	movgt	r3, r4
 800da0a:	f9b5 611e 	ldrsh.w	r6, [r5, #286]	; 0x11e
 800da0e:	bfc4      	itt	gt
 800da10:	4604      	movgt	r4, r0
 800da12:	4618      	movgt	r0, r3
 800da14:	ea24 73e4 	bic.w	r3, r4, r4, asr #31
 800da18:	42b3      	cmp	r3, r6
 800da1a:	da29      	bge.n	800da70 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x92>
 800da1c:	42b0      	cmp	r0, r6
 800da1e:	bfa8      	it	ge
 800da20:	4630      	movge	r0, r6
 800da22:	2800      	cmp	r0, #0
 800da24:	db24      	blt.n	800da70 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x92>
 800da26:	f1b8 0f00 	cmp.w	r8, #0
 800da2a:	d11e      	bne.n	800da6a <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x8c>
 800da2c:	f8d5 2144 	ldr.w	r2, [r5, #324]	; 0x144
 800da30:	f852 1023 	ldr.w	r1, [r2, r3, lsl #2]
 800da34:	460c      	mov	r4, r1
 800da36:	009a      	lsls	r2, r3, #2
 800da38:	4298      	cmp	r0, r3
 800da3a:	dd0b      	ble.n	800da54 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x76>
 800da3c:	f8d5 6144 	ldr.w	r6, [r5, #324]	; 0x144
 800da40:	58b6      	ldr	r6, [r6, r2]
 800da42:	42b1      	cmp	r1, r6
 800da44:	bfa8      	it	ge
 800da46:	4631      	movge	r1, r6
 800da48:	42b4      	cmp	r4, r6
 800da4a:	bfb8      	it	lt
 800da4c:	4634      	movlt	r4, r6
 800da4e:	3301      	adds	r3, #1
 800da50:	3204      	adds	r2, #4
 800da52:	e7f1      	b.n	800da38 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x5a>
 800da54:	1bc9      	subs	r1, r1, r7
 800da56:	193a      	adds	r2, r7, r4
 800da58:	4291      	cmp	r1, r2
 800da5a:	d009      	beq.n	800da70 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x92>
 800da5c:	682b      	ldr	r3, [r5, #0]
 800da5e:	4628      	mov	r0, r5
 800da60:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800da64:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800da68:	4718      	bx	r3
 800da6a:	427c      	negs	r4, r7
 800da6c:	4639      	mov	r1, r7
 800da6e:	e7e2      	b.n	800da36 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x58>
 800da70:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800da74 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE>:
 800da74:	b530      	push	{r4, r5, lr}
 800da76:	790b      	ldrb	r3, [r1, #4]
 800da78:	2b02      	cmp	r3, #2
 800da7a:	b085      	sub	sp, #20
 800da7c:	4604      	mov	r4, r0
 800da7e:	460d      	mov	r5, r1
 800da80:	d020      	beq.n	800dac4 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 800da82:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 800da84:	88c9      	ldrh	r1, [r1, #6]
 800da86:	1ac9      	subs	r1, r1, r3
 800da88:	6803      	ldr	r3, [r0, #0]
 800da8a:	f10d 0206 	add.w	r2, sp, #6
 800da8e:	f8d3 3104 	ldr.w	r3, [r3, #260]	; 0x104
 800da92:	b209      	sxth	r1, r1
 800da94:	4798      	blx	r3
 800da96:	b1a8      	cbz	r0, 800dac4 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 800da98:	792b      	ldrb	r3, [r5, #4]
 800da9a:	2b01      	cmp	r3, #1
 800da9c:	d812      	bhi.n	800dac4 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 800da9e:	f8d4 0124 	ldr.w	r0, [r4, #292]	; 0x124
 800daa2:	b178      	cbz	r0, 800dac4 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 800daa4:	6803      	ldr	r3, [r0, #0]
 800daa6:	68db      	ldr	r3, [r3, #12]
 800daa8:	4798      	blx	r3
 800daaa:	b158      	cbz	r0, 800dac4 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 800daac:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 800dab0:	f8d4 0124 	ldr.w	r0, [r4, #292]	; 0x124
 800dab4:	f8ad 3008 	strh.w	r3, [sp, #8]
 800dab8:	9503      	str	r5, [sp, #12]
 800daba:	6803      	ldr	r3, [r0, #0]
 800dabc:	aa02      	add	r2, sp, #8
 800dabe:	689b      	ldr	r3, [r3, #8]
 800dac0:	4621      	mov	r1, r4
 800dac2:	4798      	blx	r3
 800dac4:	b005      	add	sp, #20
 800dac6:	bd30      	pop	{r4, r5, pc}

0800dac8 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_>:
 800dac8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800dacc:	4604      	mov	r4, r0
 800dace:	f9b0 011e 	ldrsh.w	r0, [r0, #286]	; 0x11e
 800dad2:	9e06      	ldr	r6, [sp, #24]
 800dad4:	4690      	mov	r8, r2
 800dad6:	461f      	mov	r7, r3
 800dad8:	b928      	cbnz	r0, 800dae6 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x1e>
 800dada:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800dade:	8033      	strh	r3, [r6, #0]
 800dae0:	803b      	strh	r3, [r7, #0]
 800dae2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800dae6:	f8b4 2118 	ldrh.w	r2, [r4, #280]	; 0x118
 800daea:	f9b4 0116 	ldrsh.w	r0, [r4, #278]	; 0x116
 800daee:	1883      	adds	r3, r0, r2
 800daf0:	f8b4 2040 	ldrh.w	r2, [r4, #64]	; 0x40
 800daf4:	1ad2      	subs	r2, r2, r3
 800daf6:	b212      	sxth	r2, r2
 800daf8:	2a01      	cmp	r2, #1
 800dafa:	dc07      	bgt.n	800db0c <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x44>
 800dafc:	2300      	movs	r3, #0
 800dafe:	803b      	strh	r3, [r7, #0]
 800db00:	f8b4 311e 	ldrh.w	r3, [r4, #286]	; 0x11e
 800db04:	3b01      	subs	r3, #1
 800db06:	8033      	strh	r3, [r6, #0]
 800db08:	2001      	movs	r0, #1
 800db0a:	e7ea      	b.n	800dae2 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x1a>
 800db0c:	1a08      	subs	r0, r1, r0
 800db0e:	f8d4 3130 	ldr.w	r3, [r4, #304]	; 0x130
 800db12:	f8d4 112c 	ldr.w	r1, [r4, #300]	; 0x12c
 800db16:	6b25      	ldr	r5, [r4, #48]	; 0x30
 800db18:	1a5b      	subs	r3, r3, r1
 800db1a:	ea4f 1040 	mov.w	r0, r0, lsl #5
 800db1e:	d45b      	bmi.n	800dbd8 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x110>
 800db20:	eb05 0343 	add.w	r3, r5, r3, lsl #1
 800db24:	fb93 f1f5 	sdiv	r1, r3, r5
 800db28:	2302      	movs	r3, #2
 800db2a:	fb91 f1f3 	sdiv	r1, r1, r3
 800db2e:	3a01      	subs	r2, #1
 800db30:	f005 fec6 	bl	80138c0 <_ZN8touchgfx6muldivElll>
 800db34:	f8d4 112c 	ldr.w	r1, [r4, #300]	; 0x12c
 800db38:	f8d4 c030 	ldr.w	ip, [r4, #48]	; 0x30
 800db3c:	2900      	cmp	r1, #0
 800db3e:	db57      	blt.n	800dbf0 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x128>
 800db40:	eb0c 0341 	add.w	r3, ip, r1, lsl #1
 800db44:	2502      	movs	r5, #2
 800db46:	fb93 f3fc 	sdiv	r3, r3, ip
 800db4a:	fb93 f3f5 	sdiv	r3, r3, r5
 800db4e:	eb00 1543 	add.w	r5, r0, r3, lsl #5
 800db52:	f8d4 2130 	ldr.w	r2, [r4, #304]	; 0x130
 800db56:	f9b4 3116 	ldrsh.w	r3, [r4, #278]	; 0x116
 800db5a:	1a52      	subs	r2, r2, r1
 800db5c:	eba8 0003 	sub.w	r0, r8, r3
 800db60:	ea4f 1040 	mov.w	r0, r0, lsl #5
 800db64:	d450      	bmi.n	800dc08 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x140>
 800db66:	eb0c 0242 	add.w	r2, ip, r2, lsl #1
 800db6a:	fb92 f1fc 	sdiv	r1, r2, ip
 800db6e:	2202      	movs	r2, #2
 800db70:	fb91 f1f2 	sdiv	r1, r1, r2
 800db74:	f8b4 2118 	ldrh.w	r2, [r4, #280]	; 0x118
 800db78:	4413      	add	r3, r2
 800db7a:	f8b4 2040 	ldrh.w	r2, [r4, #64]	; 0x40
 800db7e:	1ad2      	subs	r2, r2, r3
 800db80:	b212      	sxth	r2, r2
 800db82:	3a01      	subs	r2, #1
 800db84:	f005 fe9c 	bl	80138c0 <_ZN8touchgfx6muldivElll>
 800db88:	f8d4 312c 	ldr.w	r3, [r4, #300]	; 0x12c
 800db8c:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800db8e:	2b00      	cmp	r3, #0
 800db90:	db46      	blt.n	800dc20 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x158>
 800db92:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 800db96:	fb93 f3f2 	sdiv	r3, r3, r2
 800db9a:	2202      	movs	r2, #2
 800db9c:	fb93 f3f2 	sdiv	r3, r3, r2
 800dba0:	eb00 1343 	add.w	r3, r0, r3, lsl #5
 800dba4:	429d      	cmp	r5, r3
 800dba6:	bfde      	ittt	le
 800dba8:	461a      	movle	r2, r3
 800dbaa:	462b      	movle	r3, r5
 800dbac:	4615      	movle	r5, r2
 800dbae:	2d00      	cmp	r5, #0
 800dbb0:	bfa4      	itt	ge
 800dbb2:	351f      	addge	r5, #31
 800dbb4:	116d      	asrge	r5, r5, #5
 800dbb6:	f04f 0020 	mov.w	r0, #32
 800dbba:	bfb8      	it	lt
 800dbbc:	fb95 f5f0 	sdivlt	r5, r5, r0
 800dbc0:	b22d      	sxth	r5, r5
 800dbc2:	2d00      	cmp	r5, #0
 800dbc4:	b21b      	sxth	r3, r3
 800dbc6:	fb93 f3f0 	sdiv	r3, r3, r0
 800dbca:	803b      	strh	r3, [r7, #0]
 800dbcc:	8035      	strh	r5, [r6, #0]
 800dbce:	da33      	bge.n	800dc38 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x170>
 800dbd0:	2000      	movs	r0, #0
 800dbd2:	8030      	strh	r0, [r6, #0]
 800dbd4:	8038      	strh	r0, [r7, #0]
 800dbd6:	e784      	b.n	800dae2 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x1a>
 800dbd8:	f06f 0101 	mvn.w	r1, #1
 800dbdc:	fb01 5303 	mla	r3, r1, r3, r5
 800dbe0:	1e59      	subs	r1, r3, #1
 800dbe2:	2302      	movs	r3, #2
 800dbe4:	fb91 f1f5 	sdiv	r1, r1, r5
 800dbe8:	fb91 f1f3 	sdiv	r1, r1, r3
 800dbec:	4249      	negs	r1, r1
 800dbee:	e79e      	b.n	800db2e <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x66>
 800dbf0:	f06f 0301 	mvn.w	r3, #1
 800dbf4:	fb03 c301 	mla	r3, r3, r1, ip
 800dbf8:	3b01      	subs	r3, #1
 800dbfa:	2502      	movs	r5, #2
 800dbfc:	fb93 f3fc 	sdiv	r3, r3, ip
 800dc00:	fb93 f3f5 	sdiv	r3, r3, r5
 800dc04:	425b      	negs	r3, r3
 800dc06:	e7a2      	b.n	800db4e <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x86>
 800dc08:	f06f 0101 	mvn.w	r1, #1
 800dc0c:	fb01 c202 	mla	r2, r1, r2, ip
 800dc10:	1e51      	subs	r1, r2, #1
 800dc12:	2202      	movs	r2, #2
 800dc14:	fb91 f1fc 	sdiv	r1, r1, ip
 800dc18:	fb91 f1f2 	sdiv	r1, r1, r2
 800dc1c:	4249      	negs	r1, r1
 800dc1e:	e7a9      	b.n	800db74 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0xac>
 800dc20:	f06f 0101 	mvn.w	r1, #1
 800dc24:	fb01 2303 	mla	r3, r1, r3, r2
 800dc28:	3b01      	subs	r3, #1
 800dc2a:	fb93 f3f2 	sdiv	r3, r3, r2
 800dc2e:	2202      	movs	r2, #2
 800dc30:	fb93 f3f2 	sdiv	r3, r3, r2
 800dc34:	425b      	negs	r3, r3
 800dc36:	e7b3      	b.n	800dba0 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0xd8>
 800dc38:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800dc3c:	f9b7 2000 	ldrsh.w	r2, [r7]
 800dc40:	4293      	cmp	r3, r2
 800dc42:	dc05      	bgt.n	800dc50 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x188>
 800dc44:	3b01      	subs	r3, #1
 800dc46:	b21b      	sxth	r3, r3
 800dc48:	8033      	strh	r3, [r6, #0]
 800dc4a:	2000      	movs	r0, #0
 800dc4c:	803b      	strh	r3, [r7, #0]
 800dc4e:	e748      	b.n	800dae2 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x1a>
 800dc50:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 800dc54:	803a      	strh	r2, [r7, #0]
 800dc56:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800dc5a:	f9b6 2000 	ldrsh.w	r2, [r6]
 800dc5e:	4293      	cmp	r3, r2
 800dc60:	bfdc      	itt	le
 800dc62:	f103 33ff 	addle.w	r3, r3, #4294967295
 800dc66:	b21a      	sxthle	r2, r3
 800dc68:	8032      	strh	r2, [r6, #0]
 800dc6a:	e74d      	b.n	800db08 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x40>

0800dc6c <_ZN8touchgfx9ContainerC1Ev>:
 800dc6c:	2101      	movs	r1, #1
 800dc6e:	2200      	movs	r2, #0
 800dc70:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 800dc74:	4909      	ldr	r1, [pc, #36]	; (800dc9c <_ZN8touchgfx9ContainerC1Ev+0x30>)
 800dc76:	8082      	strh	r2, [r0, #4]
 800dc78:	80c2      	strh	r2, [r0, #6]
 800dc7a:	8102      	strh	r2, [r0, #8]
 800dc7c:	8142      	strh	r2, [r0, #10]
 800dc7e:	8182      	strh	r2, [r0, #12]
 800dc80:	81c2      	strh	r2, [r0, #14]
 800dc82:	8202      	strh	r2, [r0, #16]
 800dc84:	8242      	strh	r2, [r0, #18]
 800dc86:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800dc8a:	61c2      	str	r2, [r0, #28]
 800dc8c:	8402      	strh	r2, [r0, #32]
 800dc8e:	8442      	strh	r2, [r0, #34]	; 0x22
 800dc90:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800dc94:	6001      	str	r1, [r0, #0]
 800dc96:	6282      	str	r2, [r0, #40]	; 0x28
 800dc98:	4770      	bx	lr
 800dc9a:	bf00      	nop
 800dc9c:	08024bac 	.word	0x08024bac

0800dca0 <_ZNK8touchgfx7CWRUtil2Q55roundEv>:
 800dca0:	6800      	ldr	r0, [r0, #0]
 800dca2:	2800      	cmp	r0, #0
 800dca4:	bfbd      	ittte	lt
 800dca6:	380f      	sublt	r0, #15
 800dca8:	2320      	movlt	r3, #32
 800dcaa:	fb90 f0f3 	sdivlt	r0, r0, r3
 800dcae:	3010      	addge	r0, #16
 800dcb0:	bfa8      	it	ge
 800dcb2:	1140      	asrge	r0, r0, #5
 800dcb4:	4770      	bx	lr

0800dcb6 <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs>:
 800dcb6:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dcba:	4605      	mov	r5, r0
 800dcbc:	f9b0 011e 	ldrsh.w	r0, [r0, #286]	; 0x11e
 800dcc0:	4688      	mov	r8, r1
 800dcc2:	4691      	mov	r9, r2
 800dcc4:	469a      	mov	sl, r3
 800dcc6:	b360      	cbz	r0, 800dd22 <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs+0x6c>
 800dcc8:	2700      	movs	r7, #0
 800dcca:	f04f 3bff 	mov.w	fp, #4294967295
 800dcce:	f9b5 311e 	ldrsh.w	r3, [r5, #286]	; 0x11e
 800dcd2:	b23e      	sxth	r6, r7
 800dcd4:	42b3      	cmp	r3, r6
 800dcd6:	dd23      	ble.n	800dd20 <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs+0x6a>
 800dcd8:	682b      	ldr	r3, [r5, #0]
 800dcda:	4631      	mov	r1, r6
 800dcdc:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800dce0:	4628      	mov	r0, r5
 800dce2:	4798      	blx	r3
 800dce4:	9001      	str	r0, [sp, #4]
 800dce6:	a801      	add	r0, sp, #4
 800dce8:	f7ff ffda 	bl	800dca0 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800dcec:	682b      	ldr	r3, [r5, #0]
 800dcee:	eba0 0008 	sub.w	r0, r0, r8
 800dcf2:	b204      	sxth	r4, r0
 800dcf4:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 800dcf8:	4631      	mov	r1, r6
 800dcfa:	4628      	mov	r0, r5
 800dcfc:	4798      	blx	r3
 800dcfe:	9001      	str	r0, [sp, #4]
 800dd00:	a801      	add	r0, sp, #4
 800dd02:	f7ff ffcd 	bl	800dca0 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800dd06:	eba0 0009 	sub.w	r0, r0, r9
 800dd0a:	fb10 f000 	smulbb	r0, r0, r0
 800dd0e:	fb04 0404 	mla	r4, r4, r4, r0
 800dd12:	455c      	cmp	r4, fp
 800dd14:	bf3c      	itt	cc
 800dd16:	f8aa 6000 	strhcc.w	r6, [sl]
 800dd1a:	46a3      	movcc	fp, r4
 800dd1c:	3701      	adds	r7, #1
 800dd1e:	e7d6      	b.n	800dcce <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs+0x18>
 800dd20:	2001      	movs	r0, #1
 800dd22:	b003      	add	sp, #12
 800dd24:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800dd28 <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs>:
 800dd28:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800dd2c:	4604      	mov	r4, r0
 800dd2e:	f9b0 011e 	ldrsh.w	r0, [r0, #286]	; 0x11e
 800dd32:	4688      	mov	r8, r1
 800dd34:	4691      	mov	r9, r2
 800dd36:	b1f8      	cbz	r0, 800dd78 <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs+0x50>
 800dd38:	2500      	movs	r5, #0
 800dd3a:	f04f 37ff 	mov.w	r7, #4294967295
 800dd3e:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800dd42:	b22e      	sxth	r6, r5
 800dd44:	42b3      	cmp	r3, r6
 800dd46:	dd16      	ble.n	800dd76 <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs+0x4e>
 800dd48:	6823      	ldr	r3, [r4, #0]
 800dd4a:	4631      	mov	r1, r6
 800dd4c:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800dd50:	4620      	mov	r0, r4
 800dd52:	4798      	blx	r3
 800dd54:	9001      	str	r0, [sp, #4]
 800dd56:	a801      	add	r0, sp, #4
 800dd58:	f7ff ffa2 	bl	800dca0 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800dd5c:	b200      	sxth	r0, r0
 800dd5e:	eba0 0008 	sub.w	r0, r0, r8
 800dd62:	2800      	cmp	r0, #0
 800dd64:	bfb8      	it	lt
 800dd66:	4240      	neglt	r0, r0
 800dd68:	42b8      	cmp	r0, r7
 800dd6a:	bf3c      	itt	cc
 800dd6c:	f8a9 6000 	strhcc.w	r6, [r9]
 800dd70:	4607      	movcc	r7, r0
 800dd72:	3501      	adds	r5, #1
 800dd74:	e7e3      	b.n	800dd3e <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs+0x16>
 800dd76:	2001      	movs	r0, #1
 800dd78:	b003      	add	sp, #12
 800dd7a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800dd7e <_ZN8touchgfx17AbstractDataGraph19setGraphAreaPaddingEssss>:
 800dd7e:	f8a0 3118 	strh.w	r3, [r0, #280]	; 0x118
 800dd82:	f9bd 3000 	ldrsh.w	r3, [sp]
 800dd86:	f8a0 1114 	strh.w	r1, [r0, #276]	; 0x114
 800dd8a:	f8a0 2116 	strh.w	r2, [r0, #278]	; 0x116
 800dd8e:	f8a0 311a 	strh.w	r3, [r0, #282]	; 0x11a
 800dd92:	4770      	bx	lr

0800dd94 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>:
 800dd94:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800dd96:	4604      	mov	r4, r0
 800dd98:	3038      	adds	r0, #56	; 0x38
 800dd9a:	460d      	mov	r5, r1
 800dd9c:	f7fe fb1e 	bl	800c3dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800dda0:	f9b4 2042 	ldrsh.w	r2, [r4, #66]	; 0x42
 800dda4:	9200      	str	r2, [sp, #0]
 800dda6:	2200      	movs	r2, #0
 800dda8:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 800ddac:	4611      	mov	r1, r2
 800ddae:	4628      	mov	r0, r5
 800ddb0:	f7f4 ff6b 	bl	8002c8a <_ZN8touchgfx8Drawable11setPositionEssss>
 800ddb4:	b003      	add	sp, #12
 800ddb6:	bd30      	pop	{r4, r5, pc}

0800ddb8 <_ZN8touchgfx17AbstractDataGraph14addLeftElementERNS_23AbstractGraphDecorationE>:
 800ddb8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800ddba:	4604      	mov	r4, r0
 800ddbc:	3064      	adds	r0, #100	; 0x64
 800ddbe:	460d      	mov	r5, r1
 800ddc0:	f7fe fb0c 	bl	800c3dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800ddc4:	f9b4 206e 	ldrsh.w	r2, [r4, #110]	; 0x6e
 800ddc8:	9200      	str	r2, [sp, #0]
 800ddca:	2200      	movs	r2, #0
 800ddcc:	f9b4 306c 	ldrsh.w	r3, [r4, #108]	; 0x6c
 800ddd0:	4611      	mov	r1, r2
 800ddd2:	4628      	mov	r0, r5
 800ddd4:	f7f4 ff59 	bl	8002c8a <_ZN8touchgfx8Drawable11setPositionEssss>
 800ddd8:	b003      	add	sp, #12
 800ddda:	bd30      	pop	{r4, r5, pc}

0800dddc <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs>:
 800dddc:	b538      	push	{r3, r4, r5, lr}
 800ddde:	f9b0 311e 	ldrsh.w	r3, [r0, #286]	; 0x11e
 800dde2:	428b      	cmp	r3, r1
 800dde4:	460d      	mov	r5, r1
 800dde6:	dd08      	ble.n	800ddfa <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs+0x1e>
 800dde8:	6e04      	ldr	r4, [r0, #96]	; 0x60
 800ddea:	b134      	cbz	r4, 800ddfa <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs+0x1e>
 800ddec:	6823      	ldr	r3, [r4, #0]
 800ddee:	4620      	mov	r0, r4
 800ddf0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800ddf2:	4629      	mov	r1, r5
 800ddf4:	4798      	blx	r3
 800ddf6:	69a4      	ldr	r4, [r4, #24]
 800ddf8:	e7f7      	b.n	800ddea <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs+0xe>
 800ddfa:	bd38      	pop	{r3, r4, r5, pc}

0800ddfc <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs>:
 800ddfc:	b570      	push	{r4, r5, r6, lr}
 800ddfe:	f8d0 40e4 	ldr.w	r4, [r0, #228]	; 0xe4
 800de02:	4606      	mov	r6, r0
 800de04:	460d      	mov	r5, r1
 800de06:	b134      	cbz	r4, 800de16 <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs+0x1a>
 800de08:	6823      	ldr	r3, [r4, #0]
 800de0a:	4620      	mov	r0, r4
 800de0c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800de0e:	4629      	mov	r1, r5
 800de10:	4798      	blx	r3
 800de12:	69a4      	ldr	r4, [r4, #24]
 800de14:	e7f7      	b.n	800de06 <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs+0xa>
 800de16:	f8d6 4110 	ldr.w	r4, [r6, #272]	; 0x110
 800de1a:	b134      	cbz	r4, 800de2a <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs+0x2e>
 800de1c:	6823      	ldr	r3, [r4, #0]
 800de1e:	4620      	mov	r0, r4
 800de20:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800de22:	4629      	mov	r1, r5
 800de24:	4798      	blx	r3
 800de26:	69a4      	ldr	r4, [r4, #24]
 800de28:	e7f7      	b.n	800de1a <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs+0x1e>
 800de2a:	bd70      	pop	{r4, r5, r6, pc}

0800de2c <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv>:
 800de2c:	b538      	push	{r3, r4, r5, lr}
 800de2e:	4604      	mov	r4, r0
 800de30:	2500      	movs	r5, #0
 800de32:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800de36:	42ab      	cmp	r3, r5
 800de38:	db05      	blt.n	800de46 <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv+0x1a>
 800de3a:	b229      	sxth	r1, r5
 800de3c:	4620      	mov	r0, r4
 800de3e:	f7ff ffdd 	bl	800ddfc <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs>
 800de42:	3501      	adds	r5, #1
 800de44:	e7f5      	b.n	800de32 <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv+0x6>
 800de46:	f104 00bc 	add.w	r0, r4, #188	; 0xbc
 800de4a:	f005 fb78 	bl	801353e <_ZNK8touchgfx8Drawable10invalidateEv>
 800de4e:	f104 00e8 	add.w	r0, r4, #232	; 0xe8
 800de52:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800de56:	f005 bb72 	b.w	801353e <_ZNK8touchgfx8Drawable10invalidateEv>

0800de5a <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>:
 800de5a:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800de5c:	6e05      	ldr	r5, [r0, #96]	; 0x60
 800de5e:	4604      	mov	r4, r0
 800de60:	b15d      	cbz	r5, 800de7a <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x20>
 800de62:	f9b4 2042 	ldrsh.w	r2, [r4, #66]	; 0x42
 800de66:	9200      	str	r2, [sp, #0]
 800de68:	2200      	movs	r2, #0
 800de6a:	4628      	mov	r0, r5
 800de6c:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 800de70:	4611      	mov	r1, r2
 800de72:	f7f4 ff0a 	bl	8002c8a <_ZN8touchgfx8Drawable11setPositionEssss>
 800de76:	69ad      	ldr	r5, [r5, #24]
 800de78:	e7f2      	b.n	800de60 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x6>
 800de7a:	f8d4 50e4 	ldr.w	r5, [r4, #228]	; 0xe4
 800de7e:	b15d      	cbz	r5, 800de98 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x3e>
 800de80:	f9b4 20c6 	ldrsh.w	r2, [r4, #198]	; 0xc6
 800de84:	9200      	str	r2, [sp, #0]
 800de86:	2200      	movs	r2, #0
 800de88:	4628      	mov	r0, r5
 800de8a:	f9b4 30c4 	ldrsh.w	r3, [r4, #196]	; 0xc4
 800de8e:	4611      	mov	r1, r2
 800de90:	f7f4 fefb 	bl	8002c8a <_ZN8touchgfx8Drawable11setPositionEssss>
 800de94:	69ad      	ldr	r5, [r5, #24]
 800de96:	e7f2      	b.n	800de7e <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x24>
 800de98:	f8d4 508c 	ldr.w	r5, [r4, #140]	; 0x8c
 800de9c:	b15d      	cbz	r5, 800deb6 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x5c>
 800de9e:	f9b4 206e 	ldrsh.w	r2, [r4, #110]	; 0x6e
 800dea2:	9200      	str	r2, [sp, #0]
 800dea4:	2200      	movs	r2, #0
 800dea6:	4628      	mov	r0, r5
 800dea8:	f9b4 306c 	ldrsh.w	r3, [r4, #108]	; 0x6c
 800deac:	4611      	mov	r1, r2
 800deae:	f7f4 feec 	bl	8002c8a <_ZN8touchgfx8Drawable11setPositionEssss>
 800deb2:	69ad      	ldr	r5, [r5, #24]
 800deb4:	e7f2      	b.n	800de9c <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x42>
 800deb6:	f8d4 50b8 	ldr.w	r5, [r4, #184]	; 0xb8
 800deba:	b15d      	cbz	r5, 800ded4 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x7a>
 800debc:	f9b4 209a 	ldrsh.w	r2, [r4, #154]	; 0x9a
 800dec0:	9200      	str	r2, [sp, #0]
 800dec2:	2200      	movs	r2, #0
 800dec4:	4628      	mov	r0, r5
 800dec6:	f9b4 3098 	ldrsh.w	r3, [r4, #152]	; 0x98
 800deca:	4611      	mov	r1, r2
 800decc:	f7f4 fedd 	bl	8002c8a <_ZN8touchgfx8Drawable11setPositionEssss>
 800ded0:	69ad      	ldr	r5, [r5, #24]
 800ded2:	e7f2      	b.n	800deba <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x60>
 800ded4:	f8d4 5110 	ldr.w	r5, [r4, #272]	; 0x110
 800ded8:	b15d      	cbz	r5, 800def2 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x98>
 800deda:	f9b4 20f2 	ldrsh.w	r2, [r4, #242]	; 0xf2
 800dede:	9200      	str	r2, [sp, #0]
 800dee0:	2200      	movs	r2, #0
 800dee2:	4628      	mov	r0, r5
 800dee4:	f9b4 30f0 	ldrsh.w	r3, [r4, #240]	; 0xf0
 800dee8:	4611      	mov	r1, r2
 800deea:	f7f4 fece 	bl	8002c8a <_ZN8touchgfx8Drawable11setPositionEssss>
 800deee:	69ad      	ldr	r5, [r5, #24]
 800def0:	e7f2      	b.n	800ded8 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x7e>
 800def2:	6823      	ldr	r3, [r4, #0]
 800def4:	695b      	ldr	r3, [r3, #20]
 800def6:	4620      	mov	r0, r4
 800def8:	b003      	add	sp, #12
 800defa:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800defe:	4718      	bx	r3

0800df00 <_ZN8touchgfx17AbstractDataGraph8setWidthEs>:
 800df00:	b430      	push	{r4, r5}
 800df02:	f8b0 4098 	ldrh.w	r4, [r0, #152]	; 0x98
 800df06:	f8a0 10c4 	strh.w	r1, [r0, #196]	; 0xc4
 800df0a:	b28a      	uxth	r2, r1
 800df0c:	1b15      	subs	r5, r2, r4
 800df0e:	f8a0 5094 	strh.w	r5, [r0, #148]	; 0x94
 800df12:	f8b0 506c 	ldrh.w	r5, [r0, #108]	; 0x6c
 800df16:	f8a0 10f0 	strh.w	r1, [r0, #240]	; 0xf0
 800df1a:	442c      	add	r4, r5
 800df1c:	1b12      	subs	r2, r2, r4
 800df1e:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 800df22:	8101      	strh	r1, [r0, #8]
 800df24:	bc30      	pop	{r4, r5}
 800df26:	f7ff bf98 	b.w	800de5a <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>

0800df2a <_ZN8touchgfx17AbstractDataGraph9setHeightEs>:
 800df2a:	b430      	push	{r4, r5}
 800df2c:	f8b0 40f2 	ldrh.w	r4, [r0, #242]	; 0xf2
 800df30:	f8a0 106e 	strh.w	r1, [r0, #110]	; 0x6e
 800df34:	b28a      	uxth	r2, r1
 800df36:	1b15      	subs	r5, r2, r4
 800df38:	f8a0 50ee 	strh.w	r5, [r0, #238]	; 0xee
 800df3c:	f8b0 50c6 	ldrh.w	r5, [r0, #198]	; 0xc6
 800df40:	f8a0 109a 	strh.w	r1, [r0, #154]	; 0x9a
 800df44:	442c      	add	r4, r5
 800df46:	1b12      	subs	r2, r2, r4
 800df48:	f8a0 2042 	strh.w	r2, [r0, #66]	; 0x42
 800df4c:	8141      	strh	r1, [r0, #10]
 800df4e:	bc30      	pop	{r4, r5}
 800df50:	f7ff bf83 	b.w	800de5a <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>

0800df54 <_ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss>:
 800df54:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800df58:	f9bd 7028 	ldrsh.w	r7, [sp, #40]	; 0x28
 800df5c:	fa1f fa83 	uxth.w	sl, r3
 800df60:	4699      	mov	r9, r3
 800df62:	8903      	ldrh	r3, [r0, #8]
 800df64:	4604      	mov	r4, r0
 800df66:	4615      	mov	r5, r2
 800df68:	fa1f f887 	uxth.w	r8, r7
 800df6c:	4452      	add	r2, sl
 800df6e:	8940      	ldrh	r0, [r0, #10]
 800df70:	1a9b      	subs	r3, r3, r2
 800df72:	eb08 0201 	add.w	r2, r8, r1
 800df76:	1a80      	subs	r0, r0, r2
 800df78:	b200      	sxth	r0, r0
 800df7a:	460e      	mov	r6, r1
 800df7c:	9000      	str	r0, [sp, #0]
 800df7e:	460a      	mov	r2, r1
 800df80:	f104 0038 	add.w	r0, r4, #56	; 0x38
 800df84:	4629      	mov	r1, r5
 800df86:	b21b      	sxth	r3, r3
 800df88:	f7f4 fe7f 	bl	8002c8a <_ZN8touchgfx8Drawable11setPositionEssss>
 800df8c:	2200      	movs	r2, #0
 800df8e:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800df92:	9600      	str	r6, [sp, #0]
 800df94:	4611      	mov	r1, r2
 800df96:	f104 00bc 	add.w	r0, r4, #188	; 0xbc
 800df9a:	f7f4 fe76 	bl	8002c8a <_ZN8touchgfx8Drawable11setPositionEssss>
 800df9e:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800dfa2:	9300      	str	r3, [sp, #0]
 800dfa4:	2200      	movs	r2, #0
 800dfa6:	462b      	mov	r3, r5
 800dfa8:	4611      	mov	r1, r2
 800dfaa:	f104 0064 	add.w	r0, r4, #100	; 0x64
 800dfae:	f7f4 fe6c 	bl	8002c8a <_ZN8touchgfx8Drawable11setPositionEssss>
 800dfb2:	8921      	ldrh	r1, [r4, #8]
 800dfb4:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800dfb8:	9300      	str	r3, [sp, #0]
 800dfba:	eba1 010a 	sub.w	r1, r1, sl
 800dfbe:	464b      	mov	r3, r9
 800dfc0:	f104 0090 	add.w	r0, r4, #144	; 0x90
 800dfc4:	2200      	movs	r2, #0
 800dfc6:	b209      	sxth	r1, r1
 800dfc8:	f7f4 fe5f 	bl	8002c8a <_ZN8touchgfx8Drawable11setPositionEssss>
 800dfcc:	8962      	ldrh	r2, [r4, #10]
 800dfce:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800dfd2:	9700      	str	r7, [sp, #0]
 800dfd4:	eba2 0208 	sub.w	r2, r2, r8
 800dfd8:	f104 00e8 	add.w	r0, r4, #232	; 0xe8
 800dfdc:	b212      	sxth	r2, r2
 800dfde:	2100      	movs	r1, #0
 800dfe0:	f7f4 fe53 	bl	8002c8a <_ZN8touchgfx8Drawable11setPositionEssss>
 800dfe4:	4620      	mov	r0, r4
 800dfe6:	b002      	add	sp, #8
 800dfe8:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800dfec:	f7ff bf35 	b.w	800de5a <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>

0800dff0 <_ZN8touchgfx17AbstractDataGraphC1Es>:
 800dff0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dff4:	b085      	sub	sp, #20
 800dff6:	4604      	mov	r4, r0
 800dff8:	9103      	str	r1, [sp, #12]
 800dffa:	f7ff fe37 	bl	800dc6c <_ZN8touchgfx9ContainerC1Ev>
 800dffe:	4b2d      	ldr	r3, [pc, #180]	; (800e0b4 <_ZN8touchgfx17AbstractDataGraphC1Es+0xc4>)
 800e000:	6023      	str	r3, [r4, #0]
 800e002:	2601      	movs	r6, #1
 800e004:	23ff      	movs	r3, #255	; 0xff
 800e006:	f104 0b38 	add.w	fp, r4, #56	; 0x38
 800e00a:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 800e00e:	f104 0964 	add.w	r9, r4, #100	; 0x64
 800e012:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 800e016:	4658      	mov	r0, fp
 800e018:	f7ff fe28 	bl	800dc6c <_ZN8touchgfx9ContainerC1Ev>
 800e01c:	f104 0890 	add.w	r8, r4, #144	; 0x90
 800e020:	4648      	mov	r0, r9
 800e022:	f7ff fe23 	bl	800dc6c <_ZN8touchgfx9ContainerC1Ev>
 800e026:	f104 0abc 	add.w	sl, r4, #188	; 0xbc
 800e02a:	4640      	mov	r0, r8
 800e02c:	f7ff fe1e 	bl	800dc6c <_ZN8touchgfx9ContainerC1Ev>
 800e030:	f104 07e8 	add.w	r7, r4, #232	; 0xe8
 800e034:	4650      	mov	r0, sl
 800e036:	f7ff fe19 	bl	800dc6c <_ZN8touchgfx9ContainerC1Ev>
 800e03a:	4638      	mov	r0, r7
 800e03c:	f7ff fe16 	bl	800dc6c <_ZN8touchgfx9ContainerC1Ev>
 800e040:	2500      	movs	r5, #0
 800e042:	9903      	ldr	r1, [sp, #12]
 800e044:	f8a4 111c 	strh.w	r1, [r4, #284]	; 0x11c
 800e048:	4620      	mov	r0, r4
 800e04a:	4659      	mov	r1, fp
 800e04c:	f8c4 5114 	str.w	r5, [r4, #276]	; 0x114
 800e050:	f8c4 5118 	str.w	r5, [r4, #280]	; 0x118
 800e054:	f8a4 511e 	strh.w	r5, [r4, #286]	; 0x11e
 800e058:	f8a4 5120 	strh.w	r5, [r4, #288]	; 0x120
 800e05c:	f8c4 5124 	str.w	r5, [r4, #292]	; 0x124
 800e060:	f8c4 5128 	str.w	r5, [r4, #296]	; 0x128
 800e064:	f8c4 512c 	str.w	r5, [r4, #300]	; 0x12c
 800e068:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 800e06c:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
 800e070:	f8c4 5138 	str.w	r5, [r4, #312]	; 0x138
 800e074:	f7fe f9b2 	bl	800c3dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800e078:	4651      	mov	r1, sl
 800e07a:	4620      	mov	r0, r4
 800e07c:	f7fe f9ae 	bl	800c3dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800e080:	4649      	mov	r1, r9
 800e082:	4620      	mov	r0, r4
 800e084:	f7fe f9aa 	bl	800c3dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800e088:	4641      	mov	r1, r8
 800e08a:	4620      	mov	r0, r4
 800e08c:	f7fe f9a6 	bl	800c3dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800e090:	4639      	mov	r1, r7
 800e092:	4620      	mov	r0, r4
 800e094:	f7fe f9a2 	bl	800c3dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800e098:	4620      	mov	r0, r4
 800e09a:	9500      	str	r5, [sp, #0]
 800e09c:	462b      	mov	r3, r5
 800e09e:	462a      	mov	r2, r5
 800e0a0:	4629      	mov	r1, r5
 800e0a2:	f7ff ff57 	bl	800df54 <_ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss>
 800e0a6:	4620      	mov	r0, r4
 800e0a8:	f884 6024 	strb.w	r6, [r4, #36]	; 0x24
 800e0ac:	b005      	add	sp, #20
 800e0ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e0b2:	bf00      	nop
 800e0b4:	08024eb4 	.word	0x08024eb4

0800e0b8 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>:
 800e0b8:	4291      	cmp	r1, r2
 800e0ba:	4613      	mov	r3, r2
 800e0bc:	d003      	beq.n	800e0c6 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii+0xe>
 800e0be:	460a      	mov	r2, r1
 800e0c0:	4619      	mov	r1, r3
 800e0c2:	f005 bbfd 	b.w	80138c0 <_ZN8touchgfx6muldivElll>
 800e0c6:	4770      	bx	lr

0800e0c8 <_ZN8touchgfx16DynamicDataGraph9setScaleXEib>:
 800e0c8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e0cc:	6803      	ldr	r3, [r0, #0]
 800e0ce:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800e0d2:	460d      	mov	r5, r1
 800e0d4:	4604      	mov	r4, r0
 800e0d6:	4798      	blx	r3
 800e0d8:	42a8      	cmp	r0, r5
 800e0da:	4606      	mov	r6, r0
 800e0dc:	d024      	beq.n	800e128 <_ZN8touchgfx16DynamicDataGraph9setScaleXEib+0x60>
 800e0de:	6823      	ldr	r3, [r4, #0]
 800e0e0:	4601      	mov	r1, r0
 800e0e2:	462a      	mov	r2, r5
 800e0e4:	f8d4 012c 	ldr.w	r0, [r4, #300]	; 0x12c
 800e0e8:	f8d3 70a4 	ldr.w	r7, [r3, #164]	; 0xa4
 800e0ec:	f7ff ffe4 	bl	800e0b8 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 800e0f0:	462a      	mov	r2, r5
 800e0f2:	4680      	mov	r8, r0
 800e0f4:	4631      	mov	r1, r6
 800e0f6:	f8d4 0130 	ldr.w	r0, [r4, #304]	; 0x130
 800e0fa:	f7ff ffdd 	bl	800e0b8 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 800e0fe:	4641      	mov	r1, r8
 800e100:	4602      	mov	r2, r0
 800e102:	4620      	mov	r0, r4
 800e104:	47b8      	blx	r7
 800e106:	462a      	mov	r2, r5
 800e108:	4631      	mov	r1, r6
 800e10a:	f8d4 013c 	ldr.w	r0, [r4, #316]	; 0x13c
 800e10e:	f7ff ffd3 	bl	800e0b8 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 800e112:	462a      	mov	r2, r5
 800e114:	f8c4 013c 	str.w	r0, [r4, #316]	; 0x13c
 800e118:	4631      	mov	r1, r6
 800e11a:	f8d4 0140 	ldr.w	r0, [r4, #320]	; 0x140
 800e11e:	f7ff ffcb 	bl	800e0b8 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 800e122:	6325      	str	r5, [r4, #48]	; 0x30
 800e124:	f8c4 0140 	str.w	r0, [r4, #320]	; 0x140
 800e128:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800e12c <_ZN8touchgfx16DynamicDataGraph9setScaleYEib>:
 800e12c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800e130:	4604      	mov	r4, r0
 800e132:	460f      	mov	r7, r1
 800e134:	b1ba      	cbz	r2, 800e166 <_ZN8touchgfx16DynamicDataGraph9setScaleYEib+0x3a>
 800e136:	6803      	ldr	r3, [r0, #0]
 800e138:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 800e13c:	4798      	blx	r3
 800e13e:	2600      	movs	r6, #0
 800e140:	4681      	mov	r9, r0
 800e142:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800e146:	b235      	sxth	r5, r6
 800e148:	42ab      	cmp	r3, r5
 800e14a:	f106 0601 	add.w	r6, r6, #1
 800e14e:	dd0a      	ble.n	800e166 <_ZN8touchgfx16DynamicDataGraph9setScaleYEib+0x3a>
 800e150:	f8d4 8144 	ldr.w	r8, [r4, #324]	; 0x144
 800e154:	463a      	mov	r2, r7
 800e156:	4649      	mov	r1, r9
 800e158:	f858 0025 	ldr.w	r0, [r8, r5, lsl #2]
 800e15c:	f7ff ffac 	bl	800e0b8 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 800e160:	f848 0025 	str.w	r0, [r8, r5, lsl #2]
 800e164:	e7ed      	b.n	800e142 <_ZN8touchgfx16DynamicDataGraph9setScaleYEib+0x16>
 800e166:	6367      	str	r7, [r4, #52]	; 0x34
 800e168:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

0800e16c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>:
 800e16c:	b570      	push	{r4, r5, r6, lr}
 800e16e:	6803      	ldr	r3, [r0, #0]
 800e170:	4604      	mov	r4, r0
 800e172:	f8d3 3178 	ldr.w	r3, [r3, #376]	; 0x178
 800e176:	460d      	mov	r5, r1
 800e178:	4798      	blx	r3
 800e17a:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 800e17e:	3301      	adds	r3, #1
 800e180:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
 800e184:	6823      	ldr	r3, [r4, #0]
 800e186:	4629      	mov	r1, r5
 800e188:	4620      	mov	r0, r4
 800e18a:	f8d3 317c 	ldr.w	r3, [r3, #380]	; 0x17c
 800e18e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e192:	4718      	bx	r3

0800e194 <_ZN8touchgfx16GraphElementLineD1Ev>:
 800e194:	4770      	bx	lr

0800e196 <_ZN8touchgfx16GraphElementLineD0Ev>:
 800e196:	b510      	push	{r4, lr}
 800e198:	2130      	movs	r1, #48	; 0x30
 800e19a:	4604      	mov	r4, r0
 800e19c:	f013 fd54 	bl	8021c48 <_ZdlPvj>
 800e1a0:	4620      	mov	r0, r4
 800e1a2:	bd10      	pop	{r4, pc}

0800e1a4 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 800e1a4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e1a6:	4604      	mov	r4, r0
 800e1a8:	4608      	mov	r0, r1
 800e1aa:	460d      	mov	r5, r1
 800e1ac:	f7fe fae9 	bl	800c782 <_ZNK8touchgfx4Rect7isEmptyEv>
 800e1b0:	b978      	cbnz	r0, 800e1d2 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 800e1b2:	4620      	mov	r0, r4
 800e1b4:	f7fe fae5 	bl	800c782 <_ZNK8touchgfx4Rect7isEmptyEv>
 800e1b8:	f9b5 6000 	ldrsh.w	r6, [r5]
 800e1bc:	b150      	cbz	r0, 800e1d4 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 800e1be:	8026      	strh	r6, [r4, #0]
 800e1c0:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800e1c4:	8063      	strh	r3, [r4, #2]
 800e1c6:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 800e1ca:	80a3      	strh	r3, [r4, #4]
 800e1cc:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800e1d0:	80e3      	strh	r3, [r4, #6]
 800e1d2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800e1d4:	f9b4 1000 	ldrsh.w	r1, [r4]
 800e1d8:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800e1dc:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 800e1e0:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 800e1e4:	88ed      	ldrh	r5, [r5, #6]
 800e1e6:	42b1      	cmp	r1, r6
 800e1e8:	460f      	mov	r7, r1
 800e1ea:	bfa8      	it	ge
 800e1ec:	4637      	movge	r7, r6
 800e1ee:	4293      	cmp	r3, r2
 800e1f0:	4618      	mov	r0, r3
 800e1f2:	4466      	add	r6, ip
 800e1f4:	bfa8      	it	ge
 800e1f6:	4610      	movge	r0, r2
 800e1f8:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800e1fc:	8027      	strh	r7, [r4, #0]
 800e1fe:	442a      	add	r2, r5
 800e200:	88e5      	ldrh	r5, [r4, #6]
 800e202:	8060      	strh	r0, [r4, #2]
 800e204:	4461      	add	r1, ip
 800e206:	442b      	add	r3, r5
 800e208:	b236      	sxth	r6, r6
 800e20a:	b209      	sxth	r1, r1
 800e20c:	b212      	sxth	r2, r2
 800e20e:	b21b      	sxth	r3, r3
 800e210:	428e      	cmp	r6, r1
 800e212:	bfac      	ite	ge
 800e214:	ebc7 0106 	rsbge	r1, r7, r6
 800e218:	ebc7 0101 	rsblt	r1, r7, r1
 800e21c:	429a      	cmp	r2, r3
 800e21e:	bfac      	ite	ge
 800e220:	ebc0 0202 	rsbge	r2, r0, r2
 800e224:	ebc0 0203 	rsblt	r2, r0, r3
 800e228:	80a1      	strh	r1, [r4, #4]
 800e22a:	80e2      	strh	r2, [r4, #6]
 800e22c:	e7d1      	b.n	800e1d2 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>

0800e22e <_ZNK8touchgfx7CWRUtil2Q54ceilEv>:
 800e22e:	6800      	ldr	r0, [r0, #0]
 800e230:	2800      	cmp	r0, #0
 800e232:	bfb9      	ittee	lt
 800e234:	2320      	movlt	r3, #32
 800e236:	fb90 f0f3 	sdivlt	r0, r0, r3
 800e23a:	301f      	addge	r0, #31
 800e23c:	1140      	asrge	r0, r0, #5
 800e23e:	4770      	bx	lr

0800e240 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE>:
 800e240:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e244:	6803      	ldr	r3, [r0, #0]
 800e246:	6945      	ldr	r5, [r0, #20]
 800e248:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800e24a:	b093      	sub	sp, #76	; 0x4c
 800e24c:	4604      	mov	r4, r0
 800e24e:	460f      	mov	r7, r1
 800e250:	2d00      	cmp	r5, #0
 800e252:	f000 81ad 	beq.w	800e5b0 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x370>
 800e256:	696d      	ldr	r5, [r5, #20]
 800e258:	4798      	blx	r3
 800e25a:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800e25e:	2b00      	cmp	r3, #0
 800e260:	d077      	beq.n	800e352 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800e262:	f895 302c 	ldrb.w	r3, [r5, #44]	; 0x2c
 800e266:	fb13 f000 	smulbb	r0, r3, r0
 800e26a:	b283      	uxth	r3, r0
 800e26c:	1c58      	adds	r0, r3, #1
 800e26e:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 800e272:	1200      	asrs	r0, r0, #8
 800e274:	d06d      	beq.n	800e352 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800e276:	b2c3      	uxtb	r3, r0
 800e278:	9308      	str	r3, [sp, #32]
 800e27a:	6823      	ldr	r3, [r4, #0]
 800e27c:	f10d 0840 	add.w	r8, sp, #64	; 0x40
 800e280:	462a      	mov	r2, r5
 800e282:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800e286:	4621      	mov	r1, r4
 800e288:	4640      	mov	r0, r8
 800e28a:	4798      	blx	r3
 800e28c:	e898 0003 	ldmia.w	r8, {r0, r1}
 800e290:	ae0e      	add	r6, sp, #56	; 0x38
 800e292:	e886 0003 	stmia.w	r6, {r0, r1}
 800e296:	4639      	mov	r1, r7
 800e298:	4630      	mov	r0, r6
 800e29a:	f7fe fa2f 	bl	800c6fc <_ZN8touchgfx4RectaNERKS0_>
 800e29e:	6823      	ldr	r3, [r4, #0]
 800e2a0:	4629      	mov	r1, r5
 800e2a2:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800e2a6:	4620      	mov	r0, r4
 800e2a8:	4798      	blx	r3
 800e2aa:	6823      	ldr	r3, [r4, #0]
 800e2ac:	4607      	mov	r7, r0
 800e2ae:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800e2b2:	4629      	mov	r1, r5
 800e2b4:	4620      	mov	r0, r4
 800e2b6:	4798      	blx	r3
 800e2b8:	4681      	mov	r9, r0
 800e2ba:	f894 0038 	ldrb.w	r0, [r4, #56]	; 0x38
 800e2be:	0103      	lsls	r3, r0, #4
 800e2c0:	9309      	str	r3, [sp, #36]	; 0x24
 800e2c2:	6823      	ldr	r3, [r4, #0]
 800e2c4:	4629      	mov	r1, r5
 800e2c6:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 800e2ca:	4620      	mov	r0, r4
 800e2cc:	4798      	blx	r3
 800e2ce:	b203      	sxth	r3, r0
 800e2d0:	9306      	str	r3, [sp, #24]
 800e2d2:	6823      	ldr	r3, [r4, #0]
 800e2d4:	4629      	mov	r1, r5
 800e2d6:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 800e2da:	4620      	mov	r0, r4
 800e2dc:	4798      	blx	r3
 800e2de:	2f00      	cmp	r7, #0
 800e2e0:	b203      	sxth	r3, r0
 800e2e2:	9307      	str	r3, [sp, #28]
 800e2e4:	d138      	bne.n	800e358 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x118>
 800e2e6:	f1b9 0f00 	cmp.w	r9, #0
 800e2ea:	d132      	bne.n	800e352 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800e2ec:	6823      	ldr	r3, [r4, #0]
 800e2ee:	464a      	mov	r2, r9
 800e2f0:	4629      	mov	r1, r5
 800e2f2:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800e2f6:	4620      	mov	r0, r4
 800e2f8:	4798      	blx	r3
 800e2fa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800e2fc:	1ac0      	subs	r0, r0, r3
 800e2fe:	9010      	str	r0, [sp, #64]	; 0x40
 800e300:	4640      	mov	r0, r8
 800e302:	f7ff fccd 	bl	800dca0 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800e306:	6823      	ldr	r3, [r4, #0]
 800e308:	4607      	mov	r7, r0
 800e30a:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 800e30e:	4629      	mov	r1, r5
 800e310:	4620      	mov	r0, r4
 800e312:	4798      	blx	r3
 800e314:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800e318:	1a38      	subs	r0, r7, r0
 800e31a:	fa0f f880 	sxth.w	r8, r0
 800e31e:	eb13 0f08 	cmn.w	r3, r8
 800e322:	d416      	bmi.n	800e352 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800e324:	6823      	ldr	r3, [r4, #0]
 800e326:	4629      	mov	r1, r5
 800e328:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 800e32c:	4620      	mov	r0, r4
 800e32e:	4798      	blx	r3
 800e330:	4580      	cmp	r8, r0
 800e332:	da0e      	bge.n	800e352 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800e334:	9a08      	ldr	r2, [sp, #32]
 800e336:	6823      	ldr	r3, [r4, #0]
 800e338:	9202      	str	r2, [sp, #8]
 800e33a:	b23f      	sxth	r7, r7
 800e33c:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 800e340:	9201      	str	r2, [sp, #4]
 800e342:	9700      	str	r7, [sp, #0]
 800e344:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 800e348:	4631      	mov	r1, r6
 800e34a:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800e34e:	4620      	mov	r0, r4
 800e350:	47a8      	blx	r5
 800e352:	b013      	add	sp, #76	; 0x4c
 800e354:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e358:	ddfb      	ble.n	800e352 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800e35a:	6823      	ldr	r3, [r4, #0]
 800e35c:	4629      	mov	r1, r5
 800e35e:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 800e362:	4620      	mov	r0, r4
 800e364:	4798      	blx	r3
 800e366:	6823      	ldr	r3, [r4, #0]
 800e368:	4683      	mov	fp, r0
 800e36a:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 800e36e:	4629      	mov	r1, r5
 800e370:	4620      	mov	r0, r4
 800e372:	4798      	blx	r3
 800e374:	eba0 030b 	sub.w	r3, r0, fp
 800e378:	2b00      	cmp	r3, #0
 800e37a:	bfb8      	it	lt
 800e37c:	425b      	neglt	r3, r3
 800e37e:	fb93 f3f7 	sdiv	r3, r3, r7
 800e382:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 800e386:	4680      	mov	r8, r0
 800e388:	dce3      	bgt.n	800e352 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800e38a:	6823      	ldr	r3, [r4, #0]
 800e38c:	465a      	mov	r2, fp
 800e38e:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800e392:	4629      	mov	r1, r5
 800e394:	4620      	mov	r0, r4
 800e396:	4798      	blx	r3
 800e398:	6823      	ldr	r3, [r4, #0]
 800e39a:	4606      	mov	r6, r0
 800e39c:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800e3a0:	4642      	mov	r2, r8
 800e3a2:	4629      	mov	r1, r5
 800e3a4:	4620      	mov	r0, r4
 800e3a6:	4798      	blx	r3
 800e3a8:	42b0      	cmp	r0, r6
 800e3aa:	bfa2      	ittt	ge
 800e3ac:	4643      	movge	r3, r8
 800e3ae:	46d8      	movge	r8, fp
 800e3b0:	469b      	movge	fp, r3
 800e3b2:	45d8      	cmp	r8, fp
 800e3b4:	bfac      	ite	ge
 800e3b6:	f04f 33ff 	movge.w	r3, #4294967295
 800e3ba:	2301      	movlt	r3, #1
 800e3bc:	fb98 f6f7 	sdiv	r6, r8, r7
 800e3c0:	fb9b f2f7 	sdiv	r2, fp, r7
 800e3c4:	1af6      	subs	r6, r6, r3
 800e3c6:	441a      	add	r2, r3
 800e3c8:	4296      	cmp	r6, r2
 800e3ca:	bfac      	ite	ge
 800e3cc:	f04f 3aff 	movge.w	sl, #4294967295
 800e3d0:	f04f 0a01 	movlt.w	sl, #1
 800e3d4:	f1b9 0f00 	cmp.w	r9, #0
 800e3d8:	d13e      	bne.n	800e458 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x218>
 800e3da:	fb07 fb0a 	mul.w	fp, r7, sl
 800e3de:	eb0a 0802 	add.w	r8, sl, r2
 800e3e2:	4377      	muls	r7, r6
 800e3e4:	45b0      	cmp	r8, r6
 800e3e6:	d0b4      	beq.n	800e352 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800e3e8:	6823      	ldr	r3, [r4, #0]
 800e3ea:	463a      	mov	r2, r7
 800e3ec:	4629      	mov	r1, r5
 800e3ee:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800e3f2:	4620      	mov	r0, r4
 800e3f4:	4798      	blx	r3
 800e3f6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800e3f8:	1ac0      	subs	r0, r0, r3
 800e3fa:	9010      	str	r0, [sp, #64]	; 0x40
 800e3fc:	a810      	add	r0, sp, #64	; 0x40
 800e3fe:	f7ff fc4f 	bl	800dca0 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800e402:	6823      	ldr	r3, [r4, #0]
 800e404:	4681      	mov	r9, r0
 800e406:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 800e40a:	4629      	mov	r1, r5
 800e40c:	4620      	mov	r0, r4
 800e40e:	4798      	blx	r3
 800e410:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 800e414:	eba9 0000 	sub.w	r0, r9, r0
 800e418:	b203      	sxth	r3, r0
 800e41a:	42da      	cmn	r2, r3
 800e41c:	9304      	str	r3, [sp, #16]
 800e41e:	d418      	bmi.n	800e452 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x212>
 800e420:	6822      	ldr	r2, [r4, #0]
 800e422:	4629      	mov	r1, r5
 800e424:	f8d2 20a8 	ldr.w	r2, [r2, #168]	; 0xa8
 800e428:	4620      	mov	r0, r4
 800e42a:	4790      	blx	r2
 800e42c:	9b04      	ldr	r3, [sp, #16]
 800e42e:	4283      	cmp	r3, r0
 800e430:	da0f      	bge.n	800e452 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x212>
 800e432:	9b08      	ldr	r3, [sp, #32]
 800e434:	9302      	str	r3, [sp, #8]
 800e436:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800e43a:	6822      	ldr	r2, [r4, #0]
 800e43c:	9301      	str	r3, [sp, #4]
 800e43e:	fa0f f389 	sxth.w	r3, r9
 800e442:	9300      	str	r3, [sp, #0]
 800e444:	f8d2 9088 	ldr.w	r9, [r2, #136]	; 0x88
 800e448:	a90e      	add	r1, sp, #56	; 0x38
 800e44a:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800e44e:	4620      	mov	r0, r4
 800e450:	47c8      	blx	r9
 800e452:	4456      	add	r6, sl
 800e454:	445f      	add	r7, fp
 800e456:	e7c5      	b.n	800e3e4 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x1a4>
 800e458:	fb98 f8f9 	sdiv	r8, r8, r9
 800e45c:	eba8 0203 	sub.w	r2, r8, r3
 800e460:	fb9b f8f9 	sdiv	r8, fp, r9
 800e464:	4498      	add	r8, r3
 800e466:	4542      	cmp	r2, r8
 800e468:	bfac      	ite	ge
 800e46a:	f04f 33ff 	movge.w	r3, #4294967295
 800e46e:	2301      	movlt	r3, #1
 800e470:	930a      	str	r3, [sp, #40]	; 0x28
 800e472:	6823      	ldr	r3, [r4, #0]
 800e474:	9204      	str	r2, [sp, #16]
 800e476:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800e47a:	fb02 f209 	mul.w	r2, r2, r9
 800e47e:	4629      	mov	r1, r5
 800e480:	4620      	mov	r0, r4
 800e482:	4798      	blx	r3
 800e484:	f10d 0b48 	add.w	fp, sp, #72	; 0x48
 800e488:	f84b 0d08 	str.w	r0, [fp, #-8]!
 800e48c:	4658      	mov	r0, fp
 800e48e:	f7ff fc07 	bl	800dca0 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800e492:	b203      	sxth	r3, r0
 800e494:	9305      	str	r3, [sp, #20]
 800e496:	6823      	ldr	r3, [r4, #0]
 800e498:	fb06 f207 	mul.w	r2, r6, r7
 800e49c:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800e4a0:	4629      	mov	r1, r5
 800e4a2:	4620      	mov	r0, r4
 800e4a4:	4798      	blx	r3
 800e4a6:	9010      	str	r0, [sp, #64]	; 0x40
 800e4a8:	4658      	mov	r0, fp
 800e4aa:	f7ff fbf9 	bl	800dca0 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800e4ae:	fb07 f20a 	mul.w	r2, r7, sl
 800e4b2:	920b      	str	r2, [sp, #44]	; 0x2c
 800e4b4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800e4b6:	4442      	add	r2, r8
 800e4b8:	b203      	sxth	r3, r0
 800e4ba:	920c      	str	r2, [sp, #48]	; 0x30
 800e4bc:	9a05      	ldr	r2, [sp, #20]
 800e4be:	429a      	cmp	r2, r3
 800e4c0:	dc16      	bgt.n	800e4f0 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x2b0>
 800e4c2:	eb06 080a 	add.w	r8, r6, sl
 800e4c6:	fb07 f808 	mul.w	r8, r7, r8
 800e4ca:	9a05      	ldr	r2, [sp, #20]
 800e4cc:	429a      	cmp	r2, r3
 800e4ce:	db54      	blt.n	800e57a <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x33a>
 800e4d0:	6823      	ldr	r3, [r4, #0]
 800e4d2:	4642      	mov	r2, r8
 800e4d4:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800e4d8:	4629      	mov	r1, r5
 800e4da:	4620      	mov	r0, r4
 800e4dc:	4798      	blx	r3
 800e4de:	9010      	str	r0, [sp, #64]	; 0x40
 800e4e0:	4658      	mov	r0, fp
 800e4e2:	f7ff fbdd 	bl	800dca0 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800e4e6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800e4e8:	4456      	add	r6, sl
 800e4ea:	b203      	sxth	r3, r0
 800e4ec:	4490      	add	r8, r2
 800e4ee:	e7ec      	b.n	800e4ca <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x28a>
 800e4f0:	6823      	ldr	r3, [r4, #0]
 800e4f2:	fb07 f206 	mul.w	r2, r7, r6
 800e4f6:	4629      	mov	r1, r5
 800e4f8:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800e4fc:	4620      	mov	r0, r4
 800e4fe:	4798      	blx	r3
 800e500:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800e502:	1ac0      	subs	r0, r0, r3
 800e504:	9010      	str	r0, [sp, #64]	; 0x40
 800e506:	4658      	mov	r0, fp
 800e508:	f7ff fbca 	bl	800dca0 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800e50c:	6823      	ldr	r3, [r4, #0]
 800e50e:	4680      	mov	r8, r0
 800e510:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 800e514:	4629      	mov	r1, r5
 800e516:	4620      	mov	r0, r4
 800e518:	4798      	blx	r3
 800e51a:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 800e51e:	eba8 0000 	sub.w	r0, r8, r0
 800e522:	b203      	sxth	r3, r0
 800e524:	42da      	cmn	r2, r3
 800e526:	930d      	str	r3, [sp, #52]	; 0x34
 800e528:	d418      	bmi.n	800e55c <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x31c>
 800e52a:	6822      	ldr	r2, [r4, #0]
 800e52c:	4629      	mov	r1, r5
 800e52e:	f8d2 20a8 	ldr.w	r2, [r2, #168]	; 0xa8
 800e532:	4620      	mov	r0, r4
 800e534:	4790      	blx	r2
 800e536:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800e538:	4283      	cmp	r3, r0
 800e53a:	da0f      	bge.n	800e55c <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x31c>
 800e53c:	9b08      	ldr	r3, [sp, #32]
 800e53e:	9302      	str	r3, [sp, #8]
 800e540:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800e544:	6822      	ldr	r2, [r4, #0]
 800e546:	9301      	str	r3, [sp, #4]
 800e548:	fa0f f388 	sxth.w	r3, r8
 800e54c:	9300      	str	r3, [sp, #0]
 800e54e:	f8d2 8088 	ldr.w	r8, [r2, #136]	; 0x88
 800e552:	a90e      	add	r1, sp, #56	; 0x38
 800e554:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800e558:	4620      	mov	r0, r4
 800e55a:	47c0      	blx	r8
 800e55c:	6823      	ldr	r3, [r4, #0]
 800e55e:	4456      	add	r6, sl
 800e560:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800e564:	fb06 f207 	mul.w	r2, r6, r7
 800e568:	4629      	mov	r1, r5
 800e56a:	4620      	mov	r0, r4
 800e56c:	4798      	blx	r3
 800e56e:	9010      	str	r0, [sp, #64]	; 0x40
 800e570:	4658      	mov	r0, fp
 800e572:	f7ff fb95 	bl	800dca0 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800e576:	b203      	sxth	r3, r0
 800e578:	e7a0      	b.n	800e4bc <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x27c>
 800e57a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800e57c:	930d      	str	r3, [sp, #52]	; 0x34
 800e57e:	9b04      	ldr	r3, [sp, #16]
 800e580:	4413      	add	r3, r2
 800e582:	9304      	str	r3, [sp, #16]
 800e584:	9a04      	ldr	r2, [sp, #16]
 800e586:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800e588:	4293      	cmp	r3, r2
 800e58a:	f43f aee2 	beq.w	800e352 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800e58e:	9b04      	ldr	r3, [sp, #16]
 800e590:	6822      	ldr	r2, [r4, #0]
 800e592:	4629      	mov	r1, r5
 800e594:	f8d2 80ac 	ldr.w	r8, [r2, #172]	; 0xac
 800e598:	4620      	mov	r0, r4
 800e59a:	fb03 f209 	mul.w	r2, r3, r9
 800e59e:	47c0      	blx	r8
 800e5a0:	9010      	str	r0, [sp, #64]	; 0x40
 800e5a2:	4658      	mov	r0, fp
 800e5a4:	f7ff fb7c 	bl	800dca0 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800e5a8:	b203      	sxth	r3, r0
 800e5aa:	9305      	str	r3, [sp, #20]
 800e5ac:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800e5ae:	e785      	b.n	800e4bc <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x27c>
 800e5b0:	4798      	blx	r3
 800e5b2:	f895 302c 	ldrb.w	r3, [r5, #44]	; 0x2c
 800e5b6:	deff      	udf	#255	; 0xff

0800e5b8 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>:
 800e5b8:	b510      	push	{r4, lr}
 800e5ba:	ea80 73e0 	eor.w	r3, r0, r0, asr #31
 800e5be:	ea81 74e1 	eor.w	r4, r1, r1, asr #31
 800e5c2:	eba4 74e1 	sub.w	r4, r4, r1, asr #31
 800e5c6:	eba3 73e0 	sub.w	r3, r3, r0, asr #31
 800e5ca:	13a4      	asrs	r4, r4, #14
 800e5cc:	139b      	asrs	r3, r3, #14
 800e5ce:	429c      	cmp	r4, r3
 800e5d0:	bfb8      	it	lt
 800e5d2:	461c      	movlt	r4, r3
 800e5d4:	2c01      	cmp	r4, #1
 800e5d6:	dd07      	ble.n	800e5e8 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x30>
 800e5d8:	fb91 f1f4 	sdiv	r1, r1, r4
 800e5dc:	fb90 f0f4 	sdiv	r0, r0, r4
 800e5e0:	f7ff ffea 	bl	800e5b8 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 800e5e4:	4360      	muls	r0, r4
 800e5e6:	bd10      	pop	{r4, pc}
 800e5e8:	4340      	muls	r0, r0
 800e5ea:	fb01 0101 	mla	r1, r1, r1, r0
 800e5ee:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
 800e5f2:	bfb4      	ite	lt
 800e5f4:	f44f 4380 	movlt.w	r3, #16384	; 0x4000
 800e5f8:	f04f 4380 	movge.w	r3, #1073741824	; 0x40000000
 800e5fc:	2000      	movs	r0, #0
 800e5fe:	18c2      	adds	r2, r0, r3
 800e600:	428a      	cmp	r2, r1
 800e602:	bf9c      	itt	ls
 800e604:	1898      	addls	r0, r3, r2
 800e606:	1a89      	subls	r1, r1, r2
 800e608:	089b      	lsrs	r3, r3, #2
 800e60a:	ea4f 0050 	mov.w	r0, r0, lsr #1
 800e60e:	d1f6      	bne.n	800e5fe <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x46>
 800e610:	e7e9      	b.n	800e5e6 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x2e>

0800e612 <_ZNK8touchgfx20AbstractGraphElement21rectFromQ5CoordinatesENS_7CWRUtil2Q5ES2_S2_S2_>:
 800e612:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e614:	9906      	ldr	r1, [sp, #24]
 800e616:	4291      	cmp	r1, r2
 800e618:	bfbc      	itt	lt
 800e61a:	9206      	strlt	r2, [sp, #24]
 800e61c:	460a      	movlt	r2, r1
 800e61e:	9907      	ldr	r1, [sp, #28]
 800e620:	428b      	cmp	r3, r1
 800e622:	4606      	mov	r6, r0
 800e624:	461c      	mov	r4, r3
 800e626:	f04f 0020 	mov.w	r0, #32
 800e62a:	bfc8      	it	gt
 800e62c:	460c      	movgt	r4, r1
 800e62e:	fb92 f5f0 	sdiv	r5, r2, r0
 800e632:	fb94 f4f0 	sdiv	r4, r4, r0
 800e636:	a806      	add	r0, sp, #24
 800e638:	bfc8      	it	gt
 800e63a:	9307      	strgt	r3, [sp, #28]
 800e63c:	f7ff fdf7 	bl	800e22e <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 800e640:	4607      	mov	r7, r0
 800e642:	a807      	add	r0, sp, #28
 800e644:	f7ff fdf3 	bl	800e22e <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 800e648:	1b7a      	subs	r2, r7, r5
 800e64a:	1b00      	subs	r0, r0, r4
 800e64c:	80f0      	strh	r0, [r6, #6]
 800e64e:	8035      	strh	r5, [r6, #0]
 800e650:	8074      	strh	r4, [r6, #2]
 800e652:	80b2      	strh	r2, [r6, #4]
 800e654:	4630      	mov	r0, r6
 800e656:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800e658 <_ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_>:
 800e658:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800e65a:	9c08      	ldr	r4, [sp, #32]
 800e65c:	2602      	movs	r6, #2
 800e65e:	3401      	adds	r4, #1
 800e660:	fb94 f4f6 	sdiv	r4, r4, r6
 800e664:	18a6      	adds	r6, r4, r2
 800e666:	191f      	adds	r7, r3, r4
 800e668:	e9cd 6700 	strd	r6, r7, [sp]
 800e66c:	1b1b      	subs	r3, r3, r4
 800e66e:	1b12      	subs	r2, r2, r4
 800e670:	4605      	mov	r5, r0
 800e672:	f7ff ffce 	bl	800e612 <_ZNK8touchgfx20AbstractGraphElement21rectFromQ5CoordinatesENS_7CWRUtil2Q5ES2_S2_S2_>
 800e676:	4628      	mov	r0, r5
 800e678:	b003      	add	sp, #12
 800e67a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800e67c <_ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs>:
 800e67c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e680:	6943      	ldr	r3, [r0, #20]
 800e682:	b087      	sub	sp, #28
 800e684:	4606      	mov	r6, r0
 800e686:	460d      	mov	r5, r1
 800e688:	2b00      	cmp	r3, #0
 800e68a:	d072      	beq.n	800e772 <_ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs+0xf6>
 800e68c:	695c      	ldr	r4, [r3, #20]
 800e68e:	f890 702c 	ldrb.w	r7, [r0, #44]	; 0x2c
 800e692:	6823      	ldr	r3, [r4, #0]
 800e694:	4620      	mov	r0, r4
 800e696:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800e69a:	4798      	blx	r3
 800e69c:	6823      	ldr	r3, [r4, #0]
 800e69e:	4680      	mov	r8, r0
 800e6a0:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 800e6a4:	4629      	mov	r1, r5
 800e6a6:	4620      	mov	r0, r4
 800e6a8:	4798      	blx	r3
 800e6aa:	017f      	lsls	r7, r7, #5
 800e6ac:	4603      	mov	r3, r0
 800e6ae:	9700      	str	r7, [sp, #0]
 800e6b0:	4642      	mov	r2, r8
 800e6b2:	4631      	mov	r1, r6
 800e6b4:	a802      	add	r0, sp, #8
 800e6b6:	f7ff ffcf 	bl	800e658 <_ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_>
 800e6ba:	2d00      	cmp	r5, #0
 800e6bc:	dd1b      	ble.n	800e6f6 <_ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs+0x7a>
 800e6be:	6823      	ldr	r3, [r4, #0]
 800e6c0:	f105 38ff 	add.w	r8, r5, #4294967295
 800e6c4:	fa0f f888 	sxth.w	r8, r8
 800e6c8:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800e6cc:	4641      	mov	r1, r8
 800e6ce:	4620      	mov	r0, r4
 800e6d0:	4798      	blx	r3
 800e6d2:	6823      	ldr	r3, [r4, #0]
 800e6d4:	4681      	mov	r9, r0
 800e6d6:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 800e6da:	4641      	mov	r1, r8
 800e6dc:	4620      	mov	r0, r4
 800e6de:	4798      	blx	r3
 800e6e0:	4631      	mov	r1, r6
 800e6e2:	4603      	mov	r3, r0
 800e6e4:	9700      	str	r7, [sp, #0]
 800e6e6:	a804      	add	r0, sp, #16
 800e6e8:	464a      	mov	r2, r9
 800e6ea:	f7ff ffb5 	bl	800e658 <_ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_>
 800e6ee:	a904      	add	r1, sp, #16
 800e6f0:	a802      	add	r0, sp, #8
 800e6f2:	f7ff fd57 	bl	800e1a4 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800e6f6:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800e6fa:	3b01      	subs	r3, #1
 800e6fc:	429d      	cmp	r5, r3
 800e6fe:	da19      	bge.n	800e734 <_ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs+0xb8>
 800e700:	6823      	ldr	r3, [r4, #0]
 800e702:	3501      	adds	r5, #1
 800e704:	b22d      	sxth	r5, r5
 800e706:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800e70a:	4629      	mov	r1, r5
 800e70c:	4620      	mov	r0, r4
 800e70e:	4798      	blx	r3
 800e710:	6823      	ldr	r3, [r4, #0]
 800e712:	4680      	mov	r8, r0
 800e714:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 800e718:	4629      	mov	r1, r5
 800e71a:	4620      	mov	r0, r4
 800e71c:	4798      	blx	r3
 800e71e:	4631      	mov	r1, r6
 800e720:	4603      	mov	r3, r0
 800e722:	9700      	str	r7, [sp, #0]
 800e724:	a804      	add	r0, sp, #16
 800e726:	4642      	mov	r2, r8
 800e728:	f7ff ff96 	bl	800e658 <_ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_>
 800e72c:	a904      	add	r1, sp, #16
 800e72e:	a802      	add	r0, sp, #8
 800e730:	f7ff fd38 	bl	800e1a4 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800e734:	f9b4 1114 	ldrsh.w	r1, [r4, #276]	; 0x114
 800e738:	f8b4 311a 	ldrh.w	r3, [r4, #282]	; 0x11a
 800e73c:	f9b4 0040 	ldrsh.w	r0, [r4, #64]	; 0x40
 800e740:	18ca      	adds	r2, r1, r3
 800e742:	f8b4 3042 	ldrh.w	r3, [r4, #66]	; 0x42
 800e746:	f8ad 1012 	strh.w	r1, [sp, #18]
 800e74a:	1a9b      	subs	r3, r3, r2
 800e74c:	f8ad 0014 	strh.w	r0, [sp, #20]
 800e750:	2200      	movs	r2, #0
 800e752:	a904      	add	r1, sp, #16
 800e754:	a802      	add	r0, sp, #8
 800e756:	f8ad 2010 	strh.w	r2, [sp, #16]
 800e75a:	f8ad 3016 	strh.w	r3, [sp, #22]
 800e75e:	f7fd ffcd 	bl	800c6fc <_ZN8touchgfx4RectaNERKS0_>
 800e762:	6833      	ldr	r3, [r6, #0]
 800e764:	a902      	add	r1, sp, #8
 800e766:	691b      	ldr	r3, [r3, #16]
 800e768:	4630      	mov	r0, r6
 800e76a:	4798      	blx	r3
 800e76c:	b007      	add	sp, #28
 800e76e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e772:	681b      	ldr	r3, [r3, #0]
 800e774:	deff      	udf	#255	; 0xff

0800e776 <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE>:
 800e776:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 800e77a:	2b00      	cmp	r3, #0
 800e77c:	da05      	bge.n	800e78a <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE+0x14>
 800e77e:	880a      	ldrh	r2, [r1, #0]
 800e780:	b29b      	uxth	r3, r3
 800e782:	441a      	add	r2, r3
 800e784:	425b      	negs	r3, r3
 800e786:	800a      	strh	r2, [r1, #0]
 800e788:	808b      	strh	r3, [r1, #4]
 800e78a:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 800e78e:	2b00      	cmp	r3, #0
 800e790:	da05      	bge.n	800e79e <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE+0x28>
 800e792:	884a      	ldrh	r2, [r1, #2]
 800e794:	b29b      	uxth	r3, r3
 800e796:	441a      	add	r2, r3
 800e798:	425b      	negs	r3, r3
 800e79a:	804a      	strh	r2, [r1, #2]
 800e79c:	80cb      	strh	r3, [r1, #6]
 800e79e:	4770      	bx	lr

0800e7a0 <_ZNK8touchgfx20GraphElementGridBase8drawLineERKNS_4RectEssssh>:
 800e7a0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800e7a2:	4604      	mov	r4, r0
 800e7a4:	460d      	mov	r5, r1
 800e7a6:	6801      	ldr	r1, [r0, #0]
 800e7a8:	f9bd 0024 	ldrsh.w	r0, [sp, #36]	; 0x24
 800e7ac:	9001      	str	r0, [sp, #4]
 800e7ae:	f9bd 0020 	ldrsh.w	r0, [sp, #32]
 800e7b2:	9000      	str	r0, [sp, #0]
 800e7b4:	f8d1 6090 	ldr.w	r6, [r1, #144]	; 0x90
 800e7b8:	a802      	add	r0, sp, #8
 800e7ba:	4621      	mov	r1, r4
 800e7bc:	47b0      	blx	r6
 800e7be:	a902      	add	r1, sp, #8
 800e7c0:	4620      	mov	r0, r4
 800e7c2:	f7ff ffd8 	bl	800e776 <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE>
 800e7c6:	a802      	add	r0, sp, #8
 800e7c8:	4629      	mov	r1, r5
 800e7ca:	f7fd ff97 	bl	800c6fc <_ZN8touchgfx4RectaNERKS0_>
 800e7ce:	a802      	add	r0, sp, #8
 800e7d0:	f7fd ffd7 	bl	800c782 <_ZNK8touchgfx4Rect7isEmptyEv>
 800e7d4:	b968      	cbnz	r0, 800e7f2 <_ZNK8touchgfx20GraphElementGridBase8drawLineERKNS_4RectEssssh+0x52>
 800e7d6:	6823      	ldr	r3, [r4, #0]
 800e7d8:	a902      	add	r1, sp, #8
 800e7da:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e7dc:	4620      	mov	r0, r4
 800e7de:	4798      	blx	r3
 800e7e0:	f7f3 fe00 	bl	80023e4 <_ZN8touchgfx3HAL3lcdEv>
 800e7e4:	6803      	ldr	r3, [r0, #0]
 800e7e6:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800e7e8:	6a1d      	ldr	r5, [r3, #32]
 800e7ea:	f89d 3028 	ldrb.w	r3, [sp, #40]	; 0x28
 800e7ee:	a902      	add	r1, sp, #8
 800e7f0:	47a8      	blx	r5
 800e7f2:	b004      	add	sp, #16
 800e7f4:	bd70      	pop	{r4, r5, r6, pc}

0800e7f6 <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss>:
 800e7f6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e7fa:	b08b      	sub	sp, #44	; 0x2c
 800e7fc:	461e      	mov	r6, r3
 800e7fe:	f9bd 3050 	ldrsh.w	r3, [sp, #80]	; 0x50
 800e802:	9304      	str	r3, [sp, #16]
 800e804:	429e      	cmp	r6, r3
 800e806:	4689      	mov	r9, r1
 800e808:	4615      	mov	r5, r2
 800e80a:	d072      	beq.n	800e8f2 <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss+0xfc>
 800e80c:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800e810:	015b      	lsls	r3, r3, #5
 800e812:	9303      	str	r3, [sp, #12]
 800e814:	6813      	ldr	r3, [r2, #0]
 800e816:	4610      	mov	r0, r2
 800e818:	4631      	mov	r1, r6
 800e81a:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800e81e:	4798      	blx	r3
 800e820:	ab0a      	add	r3, sp, #40	; 0x28
 800e822:	4634      	mov	r4, r6
 800e824:	f843 0d10 	str.w	r0, [r3, #-16]!
 800e828:	4618      	mov	r0, r3
 800e82a:	f7ff fa39 	bl	800dca0 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800e82e:	682b      	ldr	r3, [r5, #0]
 800e830:	4631      	mov	r1, r6
 800e832:	0147      	lsls	r7, r0, #5
 800e834:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 800e838:	4628      	mov	r0, r5
 800e83a:	4798      	blx	r3
 800e83c:	ab0a      	add	r3, sp, #40	; 0x28
 800e83e:	f843 0d0c 	str.w	r0, [r3, #-12]!
 800e842:	4618      	mov	r0, r3
 800e844:	f7ff fa2c 	bl	800dca0 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800e848:	ea4f 1840 	mov.w	r8, r0, lsl #5
 800e84c:	4642      	mov	r2, r8
 800e84e:	4639      	mov	r1, r7
 800e850:	4648      	mov	r0, r9
 800e852:	f013 f9a7 	bl	8021ba4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 800e856:	2301      	movs	r3, #1
 800e858:	9300      	str	r3, [sp, #0]
 800e85a:	9b00      	ldr	r3, [sp, #0]
 800e85c:	441c      	add	r4, r3
 800e85e:	682b      	ldr	r3, [r5, #0]
 800e860:	b224      	sxth	r4, r4
 800e862:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800e866:	4621      	mov	r1, r4
 800e868:	4628      	mov	r0, r5
 800e86a:	4798      	blx	r3
 800e86c:	9008      	str	r0, [sp, #32]
 800e86e:	a808      	add	r0, sp, #32
 800e870:	f7ff fa16 	bl	800dca0 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800e874:	0143      	lsls	r3, r0, #5
 800e876:	9301      	str	r3, [sp, #4]
 800e878:	682b      	ldr	r3, [r5, #0]
 800e87a:	4621      	mov	r1, r4
 800e87c:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 800e880:	4628      	mov	r0, r5
 800e882:	4798      	blx	r3
 800e884:	9009      	str	r0, [sp, #36]	; 0x24
 800e886:	a809      	add	r0, sp, #36	; 0x24
 800e888:	f7ff fa0a 	bl	800dca0 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800e88c:	0143      	lsls	r3, r0, #5
 800e88e:	9302      	str	r3, [sp, #8]
 800e890:	9b01      	ldr	r3, [sp, #4]
 800e892:	eba3 0b07 	sub.w	fp, r3, r7
 800e896:	9b02      	ldr	r3, [sp, #8]
 800e898:	eba3 0a08 	sub.w	sl, r3, r8
 800e89c:	4651      	mov	r1, sl
 800e89e:	4658      	mov	r0, fp
 800e8a0:	f7ff fe8a 	bl	800e5b8 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 800e8a4:	b318      	cbz	r0, 800e8ee <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss+0xf8>
 800e8a6:	4602      	mov	r2, r0
 800e8a8:	4651      	mov	r1, sl
 800e8aa:	9005      	str	r0, [sp, #20]
 800e8ac:	9803      	ldr	r0, [sp, #12]
 800e8ae:	f005 f807 	bl	80138c0 <_ZN8touchgfx6muldivElll>
 800e8b2:	2302      	movs	r3, #2
 800e8b4:	fb90 faf3 	sdiv	sl, r0, r3
 800e8b8:	9b05      	ldr	r3, [sp, #20]
 800e8ba:	9803      	ldr	r0, [sp, #12]
 800e8bc:	461a      	mov	r2, r3
 800e8be:	4659      	mov	r1, fp
 800e8c0:	f004 fffe 	bl	80138c0 <_ZN8touchgfx6muldivElll>
 800e8c4:	2302      	movs	r3, #2
 800e8c6:	eba7 010a 	sub.w	r1, r7, sl
 800e8ca:	fb90 fbf3 	sdiv	fp, r0, r3
 800e8ce:	4648      	mov	r0, r9
 800e8d0:	eb0b 0208 	add.w	r2, fp, r8
 800e8d4:	f013 f83c 	bl	8021950 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800e8d8:	9b02      	ldr	r3, [sp, #8]
 800e8da:	eb03 020b 	add.w	r2, r3, fp
 800e8de:	9b01      	ldr	r3, [sp, #4]
 800e8e0:	4648      	mov	r0, r9
 800e8e2:	eba3 010a 	sub.w	r1, r3, sl
 800e8e6:	f013 f833 	bl	8021950 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800e8ea:	e9dd 7801 	ldrd	r7, r8, [sp, #4]
 800e8ee:	42a6      	cmp	r6, r4
 800e8f0:	db02      	blt.n	800e8f8 <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss+0x102>
 800e8f2:	b00b      	add	sp, #44	; 0x2c
 800e8f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e8f8:	9b00      	ldr	r3, [sp, #0]
 800e8fa:	9a04      	ldr	r2, [sp, #16]
 800e8fc:	42a2      	cmp	r2, r4
 800e8fe:	bf08      	it	eq
 800e900:	f04f 33ff 	moveq.w	r3, #4294967295
 800e904:	e7a8      	b.n	800e858 <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss+0x62>
	...

0800e908 <_ZN8touchgfx6CanvasD1Ev>:
 800e908:	b510      	push	{r4, lr}
 800e90a:	4b04      	ldr	r3, [pc, #16]	; (800e91c <_ZN8touchgfx6CanvasD1Ev+0x14>)
 800e90c:	4604      	mov	r4, r0
 800e90e:	f840 3b20 	str.w	r3, [r0], #32
 800e912:	f001 fb2f 	bl	800ff74 <_ZN8touchgfx7OutlineD1Ev>
 800e916:	4620      	mov	r0, r4
 800e918:	bd10      	pop	{r4, pc}
 800e91a:	bf00      	nop
 800e91c:	08024fe4 	.word	0x08024fe4

0800e920 <_ZN8touchgfx6CanvasD0Ev>:
 800e920:	b510      	push	{r4, lr}
 800e922:	4604      	mov	r4, r0
 800e924:	f7ff fff0 	bl	800e908 <_ZN8touchgfx6CanvasD1Ev>
 800e928:	4620      	mov	r0, r4
 800e92a:	2170      	movs	r1, #112	; 0x70
 800e92c:	f013 f98c 	bl	8021c48 <_ZdlPvj>
 800e930:	4620      	mov	r0, r4
 800e932:	bd10      	pop	{r4, pc}

0800e934 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE>:
 800e934:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e938:	6943      	ldr	r3, [r0, #20]
 800e93a:	b0a2      	sub	sp, #136	; 0x88
 800e93c:	4606      	mov	r6, r0
 800e93e:	460f      	mov	r7, r1
 800e940:	2b00      	cmp	r3, #0
 800e942:	d06a      	beq.n	800ea1a <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xe6>
 800e944:	695c      	ldr	r4, [r3, #20]
 800e946:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800e94a:	2b01      	cmp	r3, #1
 800e94c:	dc04      	bgt.n	800e958 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0x24>
 800e94e:	2401      	movs	r4, #1
 800e950:	4620      	mov	r0, r4
 800e952:	b022      	add	sp, #136	; 0x88
 800e954:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e958:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800e95c:	ad22      	add	r5, sp, #136	; 0x88
 800e95e:	011b      	lsls	r3, r3, #4
 800e960:	f845 3d70 	str.w	r3, [r5, #-112]!
 800e964:	4628      	mov	r0, r5
 800e966:	f7ff fc62 	bl	800e22e <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 800e96a:	8839      	ldrh	r1, [r7, #0]
 800e96c:	88ba      	ldrh	r2, [r7, #4]
 800e96e:	6823      	ldr	r3, [r4, #0]
 800e970:	b280      	uxth	r0, r0
 800e972:	440a      	add	r2, r1
 800e974:	4402      	add	r2, r0
 800e976:	1a09      	subs	r1, r1, r0
 800e978:	f10d 000e 	add.w	r0, sp, #14
 800e97c:	9000      	str	r0, [sp, #0]
 800e97e:	f8d3 8124 	ldr.w	r8, [r3, #292]	; 0x124
 800e982:	b212      	sxth	r2, r2
 800e984:	ab03      	add	r3, sp, #12
 800e986:	b209      	sxth	r1, r1
 800e988:	4620      	mov	r0, r4
 800e98a:	47c0      	blx	r8
 800e98c:	2800      	cmp	r0, #0
 800e98e:	d0de      	beq.n	800e94e <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0x1a>
 800e990:	f9b4 1114 	ldrsh.w	r1, [r4, #276]	; 0x114
 800e994:	f8b4 311a 	ldrh.w	r3, [r4, #282]	; 0x11a
 800e998:	f9b4 0040 	ldrsh.w	r0, [r4, #64]	; 0x40
 800e99c:	f8ad 1012 	strh.w	r1, [sp, #18]
 800e9a0:	18ca      	adds	r2, r1, r3
 800e9a2:	f8b4 3042 	ldrh.w	r3, [r4, #66]	; 0x42
 800e9a6:	f8ad 0014 	strh.w	r0, [sp, #20]
 800e9aa:	1a9b      	subs	r3, r3, r2
 800e9ac:	4639      	mov	r1, r7
 800e9ae:	2200      	movs	r2, #0
 800e9b0:	a804      	add	r0, sp, #16
 800e9b2:	f8ad 3016 	strh.w	r3, [sp, #22]
 800e9b6:	f8ad 2010 	strh.w	r2, [sp, #16]
 800e9ba:	f7fd fe9f 	bl	800c6fc <_ZN8touchgfx4RectaNERKS0_>
 800e9be:	aa04      	add	r2, sp, #16
 800e9c0:	4631      	mov	r1, r6
 800e9c2:	4628      	mov	r0, r5
 800e9c4:	f012 ff16 	bl	80217f4 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 800e9c8:	f9b4 7120 	ldrsh.w	r7, [r4, #288]	; 0x120
 800e9cc:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800e9d0:	f9bd 200e 	ldrsh.w	r2, [sp, #14]
 800e9d4:	2f00      	cmp	r7, #0
 800e9d6:	dd03      	ble.n	800e9e0 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xac>
 800e9d8:	42bb      	cmp	r3, r7
 800e9da:	da01      	bge.n	800e9e0 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xac>
 800e9dc:	42ba      	cmp	r2, r7
 800e9de:	da0f      	bge.n	800ea00 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xcc>
 800e9e0:	9200      	str	r2, [sp, #0]
 800e9e2:	4622      	mov	r2, r4
 800e9e4:	4629      	mov	r1, r5
 800e9e6:	4630      	mov	r0, r6
 800e9e8:	f7ff ff05 	bl	800e7f6 <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss>
 800e9ec:	f894 102c 	ldrb.w	r1, [r4, #44]	; 0x2c
 800e9f0:	4628      	mov	r0, r5
 800e9f2:	f013 f829 	bl	8021a48 <_ZN8touchgfx6Canvas6renderEh>
 800e9f6:	4604      	mov	r4, r0
 800e9f8:	4628      	mov	r0, r5
 800e9fa:	f7ff ff85 	bl	800e908 <_ZN8touchgfx6CanvasD1Ev>
 800e9fe:	e7a7      	b.n	800e950 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0x1c>
 800ea00:	1e7a      	subs	r2, r7, #1
 800ea02:	b212      	sxth	r2, r2
 800ea04:	9200      	str	r2, [sp, #0]
 800ea06:	4629      	mov	r1, r5
 800ea08:	4622      	mov	r2, r4
 800ea0a:	4630      	mov	r0, r6
 800ea0c:	f7ff fef3 	bl	800e7f6 <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss>
 800ea10:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800ea14:	9300      	str	r3, [sp, #0]
 800ea16:	463b      	mov	r3, r7
 800ea18:	e7e3      	b.n	800e9e2 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xae>
 800ea1a:	f8b3 311e 	ldrh.w	r3, [r3, #286]	; 0x11e
 800ea1e:	deff      	udf	#255	; 0xff

0800ea20 <_ZN8touchgfx15GraphLabelsBase22invalidateGraphPointAtEs>:
 800ea20:	4770      	bx	lr

0800ea22 <_ZNK8touchgfx15GraphLabelsBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE>:
 800ea22:	6c80      	ldr	r0, [r0, #72]	; 0x48
 800ea24:	b118      	cbz	r0, 800ea2e <_ZNK8touchgfx15GraphLabelsBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE+0xc>
 800ea26:	6803      	ldr	r3, [r0, #0]
 800ea28:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800ea2c:	4718      	bx	r3
 800ea2e:	4770      	bx	lr

0800ea30 <_ZNK8touchgfx12GraphLabelsY22getGraphRangeMinScaledEPKNS_17AbstractDataGraphE>:
 800ea30:	680b      	ldr	r3, [r1, #0]
 800ea32:	4608      	mov	r0, r1
 800ea34:	f8d3 30ec 	ldr.w	r3, [r3, #236]	; 0xec
 800ea38:	4718      	bx	r3

0800ea3a <_ZNK8touchgfx12GraphLabelsY22getGraphRangeMaxScaledEPKNS_17AbstractDataGraphE>:
 800ea3a:	680b      	ldr	r3, [r1, #0]
 800ea3c:	4608      	mov	r0, r1
 800ea3e:	f8d3 30f8 	ldr.w	r3, [r3, #248]	; 0xf8
 800ea42:	4718      	bx	r3

0800ea44 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE>:
 800ea44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ea48:	4a37      	ldr	r2, [pc, #220]	; (800eb28 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0xe4>)
 800ea4a:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 800ea4c:	8812      	ldrh	r2, [r2, #0]
 800ea4e:	429a      	cmp	r2, r3
 800ea50:	b087      	sub	sp, #28
 800ea52:	4604      	mov	r4, r0
 800ea54:	4689      	mov	r9, r1
 800ea56:	d937      	bls.n	800eac8 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800ea58:	4a34      	ldr	r2, [pc, #208]	; (800eb2c <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0xe8>)
 800ea5a:	6812      	ldr	r2, [r2, #0]
 800ea5c:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800ea60:	4b33      	ldr	r3, [pc, #204]	; (800eb30 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0xec>)
 800ea62:	681b      	ldr	r3, [r3, #0]
 800ea64:	f853 8022 	ldr.w	r8, [r3, r2, lsl #2]
 800ea68:	f1b8 0f00 	cmp.w	r8, #0
 800ea6c:	d02c      	beq.n	800eac8 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800ea6e:	6803      	ldr	r3, [r0, #0]
 800ea70:	6945      	ldr	r5, [r0, #20]
 800ea72:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800ea74:	2d00      	cmp	r5, #0
 800ea76:	d052      	beq.n	800eb1e <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0xda>
 800ea78:	696f      	ldr	r7, [r5, #20]
 800ea7a:	4798      	blx	r3
 800ea7c:	f897 502c 	ldrb.w	r5, [r7, #44]	; 0x2c
 800ea80:	fb15 f000 	smulbb	r0, r5, r0
 800ea84:	b280      	uxth	r0, r0
 800ea86:	1c45      	adds	r5, r0, #1
 800ea88:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 800ea8c:	122d      	asrs	r5, r5, #8
 800ea8e:	d01b      	beq.n	800eac8 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800ea90:	6823      	ldr	r3, [r4, #0]
 800ea92:	4639      	mov	r1, r7
 800ea94:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800ea98:	4620      	mov	r0, r4
 800ea9a:	4798      	blx	r3
 800ea9c:	6823      	ldr	r3, [r4, #0]
 800ea9e:	4606      	mov	r6, r0
 800eaa0:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800eaa4:	4639      	mov	r1, r7
 800eaa6:	4620      	mov	r0, r4
 800eaa8:	4798      	blx	r3
 800eaaa:	b2ed      	uxtb	r5, r5
 800eaac:	4683      	mov	fp, r0
 800eaae:	b970      	cbnz	r0, 800eace <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x8a>
 800eab0:	b96e      	cbnz	r6, 800eace <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x8a>
 800eab2:	e9cd 6501 	strd	r6, r5, [sp, #4]
 800eab6:	6823      	ldr	r3, [r4, #0]
 800eab8:	9600      	str	r6, [sp, #0]
 800eaba:	f8d3 508c 	ldr.w	r5, [r3, #140]	; 0x8c
 800eabe:	4642      	mov	r2, r8
 800eac0:	463b      	mov	r3, r7
 800eac2:	4649      	mov	r1, r9
 800eac4:	4620      	mov	r0, r4
 800eac6:	47a8      	blx	r5
 800eac8:	b007      	add	sp, #28
 800eaca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800eace:	2e00      	cmp	r6, #0
 800ead0:	ddfa      	ble.n	800eac8 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800ead2:	6823      	ldr	r3, [r4, #0]
 800ead4:	4639      	mov	r1, r7
 800ead6:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800eada:	4620      	mov	r0, r4
 800eadc:	4798      	blx	r3
 800eade:	6823      	ldr	r3, [r4, #0]
 800eae0:	4682      	mov	sl, r0
 800eae2:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 800eae6:	4639      	mov	r1, r7
 800eae8:	4620      	mov	r0, r4
 800eaea:	4798      	blx	r3
 800eaec:	4582      	cmp	sl, r0
 800eaee:	bfde      	ittt	le
 800eaf0:	4603      	movle	r3, r0
 800eaf2:	4650      	movle	r0, sl
 800eaf4:	469a      	movle	sl, r3
 800eaf6:	ebaa 0300 	sub.w	r3, sl, r0
 800eafa:	fb93 f3f6 	sdiv	r3, r3, r6
 800eafe:	2b64      	cmp	r3, #100	; 0x64
 800eb00:	dce2      	bgt.n	800eac8 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800eb02:	e9cd b503 	strd	fp, r5, [sp, #12]
 800eb06:	e9cd a601 	strd	sl, r6, [sp, #4]
 800eb0a:	6823      	ldr	r3, [r4, #0]
 800eb0c:	9000      	str	r0, [sp, #0]
 800eb0e:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 800eb12:	4642      	mov	r2, r8
 800eb14:	463b      	mov	r3, r7
 800eb16:	4649      	mov	r1, r9
 800eb18:	4620      	mov	r0, r4
 800eb1a:	47a8      	blx	r5
 800eb1c:	e7d4      	b.n	800eac8 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800eb1e:	4798      	blx	r3
 800eb20:	f895 302c 	ldrb.w	r3, [r5, #44]	; 0x2c
 800eb24:	deff      	udf	#255	; 0xff
 800eb26:	bf00      	nop
 800eb28:	200179a8 	.word	0x200179a8
 800eb2c:	200179a4 	.word	0x200179a4
 800eb30:	200179ac 	.word	0x200179ac

0800eb34 <_ZN8touchgfx12GraphLabelsYD1Ev>:
 800eb34:	4770      	bx	lr

0800eb36 <_ZNK8touchgfx12GraphLabelsY31getCorrectlyScaledLabelIntervalEPKNS_17AbstractDataGraphE>:
 800eb36:	b538      	push	{r3, r4, r5, lr}
 800eb38:	680a      	ldr	r2, [r1, #0]
 800eb3a:	e9d0 540c 	ldrd	r5, r4, [r0, #48]	; 0x30
 800eb3e:	f8d2 2094 	ldr.w	r2, [r2, #148]	; 0x94
 800eb42:	4608      	mov	r0, r1
 800eb44:	4790      	blx	r2
 800eb46:	4629      	mov	r1, r5
 800eb48:	4602      	mov	r2, r0
 800eb4a:	4620      	mov	r0, r4
 800eb4c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800eb50:	f7ff bab2 	b.w	800e0b8 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>

0800eb54 <_ZN8touchgfx12GraphLabelsYD0Ev>:
 800eb54:	b510      	push	{r4, lr}
 800eb56:	214c      	movs	r1, #76	; 0x4c
 800eb58:	4604      	mov	r4, r0
 800eb5a:	f013 f875 	bl	8021c48 <_ZdlPvj>
 800eb5e:	4620      	mov	r0, r4
 800eb60:	bd10      	pop	{r4, pc}

0800eb62 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih>:
 800eb62:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800eb66:	b08d      	sub	sp, #52	; 0x34
 800eb68:	e9dd 9a18 	ldrd	r9, sl, [sp, #96]	; 0x60
 800eb6c:	9309      	str	r3, [sp, #36]	; 0x24
 800eb6e:	f89d 3068 	ldrb.w	r3, [sp, #104]	; 0x68
 800eb72:	930a      	str	r3, [sp, #40]	; 0x28
 800eb74:	4606      	mov	r6, r0
 800eb76:	e9cd 1207 	strd	r1, r2, [sp, #28]
 800eb7a:	e9dd 7816 	ldrd	r7, r8, [sp, #88]	; 0x58
 800eb7e:	f1b9 0f00 	cmp.w	r9, #0
 800eb82:	d117      	bne.n	800ebb4 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x52>
 800eb84:	2f00      	cmp	r7, #0
 800eb86:	dc7c      	bgt.n	800ec82 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x120>
 800eb88:	f1b8 0f00 	cmp.w	r8, #0
 800eb8c:	da01      	bge.n	800eb92 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x30>
 800eb8e:	2f00      	cmp	r7, #0
 800eb90:	d17a      	bne.n	800ec88 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x126>
 800eb92:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800eb94:	9318      	str	r3, [sp, #96]	; 0x60
 800eb96:	2300      	movs	r3, #0
 800eb98:	e9cd 3316 	strd	r3, r3, [sp, #88]	; 0x58
 800eb9c:	6832      	ldr	r2, [r6, #0]
 800eb9e:	9907      	ldr	r1, [sp, #28]
 800eba0:	f8d2 408c 	ldr.w	r4, [r2, #140]	; 0x8c
 800eba4:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800eba8:	4630      	mov	r0, r6
 800ebaa:	46a4      	mov	ip, r4
 800ebac:	b00d      	add	sp, #52	; 0x34
 800ebae:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ebb2:	4760      	bx	ip
 800ebb4:	fb97 f4f9 	sdiv	r4, r7, r9
 800ebb8:	1e63      	subs	r3, r4, #1
 800ebba:	9305      	str	r3, [sp, #20]
 800ebbc:	f1ba 0f00 	cmp.w	sl, #0
 800ebc0:	d122      	bne.n	800ec08 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xa6>
 800ebc2:	fb98 faf9 	sdiv	sl, r8, r9
 800ebc6:	fb03 f509 	mul.w	r5, r3, r9
 800ebca:	f10a 0a02 	add.w	sl, sl, #2
 800ebce:	9b05      	ldr	r3, [sp, #20]
 800ebd0:	459a      	cmp	sl, r3
 800ebd2:	d059      	beq.n	800ec88 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x126>
 800ebd4:	42af      	cmp	r7, r5
 800ebd6:	dc5a      	bgt.n	800ec8e <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x12c>
 800ebd8:	45a8      	cmp	r8, r5
 800ebda:	da01      	bge.n	800ebe0 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x7e>
 800ebdc:	42af      	cmp	r7, r5
 800ebde:	db0e      	blt.n	800ebfe <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x9c>
 800ebe0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800ebe2:	9302      	str	r3, [sp, #8]
 800ebe4:	9905      	ldr	r1, [sp, #20]
 800ebe6:	6b73      	ldr	r3, [r6, #52]	; 0x34
 800ebe8:	6832      	ldr	r2, [r6, #0]
 800ebea:	434b      	muls	r3, r1
 800ebec:	e9cd 5300 	strd	r5, r3, [sp]
 800ebf0:	9907      	ldr	r1, [sp, #28]
 800ebf2:	f8d2 b08c 	ldr.w	fp, [r2, #140]	; 0x8c
 800ebf6:	4630      	mov	r0, r6
 800ebf8:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800ebfc:	47d8      	blx	fp
 800ebfe:	9b05      	ldr	r3, [sp, #20]
 800ec00:	3301      	adds	r3, #1
 800ec02:	9305      	str	r3, [sp, #20]
 800ec04:	444d      	add	r5, r9
 800ec06:	e7e2      	b.n	800ebce <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x6c>
 800ec08:	fb97 f3fa 	sdiv	r3, r7, sl
 800ec0c:	3b01      	subs	r3, #1
 800ec0e:	9306      	str	r3, [sp, #24]
 800ec10:	9a06      	ldr	r2, [sp, #24]
 800ec12:	fb98 f3fa 	sdiv	r3, r8, sl
 800ec16:	fb02 fb0a 	mul.w	fp, r2, sl
 800ec1a:	9a05      	ldr	r2, [sp, #20]
 800ec1c:	3302      	adds	r3, #2
 800ec1e:	fb02 f509 	mul.w	r5, r2, r9
 800ec22:	930b      	str	r3, [sp, #44]	; 0x2c
 800ec24:	45ab      	cmp	fp, r5
 800ec26:	dd1d      	ble.n	800ec64 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x102>
 800ec28:	42af      	cmp	r7, r5
 800ec2a:	dc08      	bgt.n	800ec3e <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xdc>
 800ec2c:	45a8      	cmp	r8, r5
 800ec2e:	da08      	bge.n	800ec42 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xe0>
 800ec30:	42af      	cmp	r7, r5
 800ec32:	da06      	bge.n	800ec42 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xe0>
 800ec34:	9b05      	ldr	r3, [sp, #20]
 800ec36:	3301      	adds	r3, #1
 800ec38:	9305      	str	r3, [sp, #20]
 800ec3a:	444d      	add	r5, r9
 800ec3c:	e7f2      	b.n	800ec24 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xc2>
 800ec3e:	45a8      	cmp	r8, r5
 800ec40:	dcf8      	bgt.n	800ec34 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xd2>
 800ec42:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800ec44:	9302      	str	r3, [sp, #8]
 800ec46:	9905      	ldr	r1, [sp, #20]
 800ec48:	6b73      	ldr	r3, [r6, #52]	; 0x34
 800ec4a:	6832      	ldr	r2, [r6, #0]
 800ec4c:	434b      	muls	r3, r1
 800ec4e:	e9cd 5300 	strd	r5, r3, [sp]
 800ec52:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 800ec56:	9907      	ldr	r1, [sp, #28]
 800ec58:	461c      	mov	r4, r3
 800ec5a:	4630      	mov	r0, r6
 800ec5c:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800ec60:	47a0      	blx	r4
 800ec62:	e7e7      	b.n	800ec34 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xd2>
 800ec64:	45ab      	cmp	fp, r5
 800ec66:	db04      	blt.n	800ec72 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x110>
 800ec68:	9b05      	ldr	r3, [sp, #20]
 800ec6a:	3301      	adds	r3, #1
 800ec6c:	9305      	str	r3, [sp, #20]
 800ec6e:	444d      	add	r5, r9
 800ec70:	e7f8      	b.n	800ec64 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x102>
 800ec72:	9b06      	ldr	r3, [sp, #24]
 800ec74:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800ec76:	3301      	adds	r3, #1
 800ec78:	4293      	cmp	r3, r2
 800ec7a:	9306      	str	r3, [sp, #24]
 800ec7c:	d004      	beq.n	800ec88 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x126>
 800ec7e:	44d3      	add	fp, sl
 800ec80:	e7d0      	b.n	800ec24 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xc2>
 800ec82:	f1b8 0f00 	cmp.w	r8, #0
 800ec86:	dd84      	ble.n	800eb92 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x30>
 800ec88:	b00d      	add	sp, #52	; 0x34
 800ec8a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ec8e:	45a8      	cmp	r8, r5
 800ec90:	dcb5      	bgt.n	800ebfe <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x9c>
 800ec92:	e7a5      	b.n	800ebe0 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x7e>

0800ec94 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti>:
 800ec94:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800ec98:	f1b3 0900 	subs.w	r9, r3, #0
 800ec9c:	460d      	mov	r5, r1
 800ec9e:	4690      	mov	r8, r2
 800eca0:	9f08      	ldr	r7, [sp, #32]
 800eca2:	f8bd a024 	ldrh.w	sl, [sp, #36]	; 0x24
 800eca6:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 800eca8:	da18      	bge.n	800ecdc <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x48>
 800ecaa:	2a01      	cmp	r2, #1
 800ecac:	dd16      	ble.n	800ecdc <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x48>
 800ecae:	232d      	movs	r3, #45	; 0x2d
 800ecb0:	800b      	strh	r3, [r1, #0]
 800ecb2:	f1c9 0900 	rsb	r9, r9, #0
 800ecb6:	2001      	movs	r0, #1
 800ecb8:	2f00      	cmp	r7, #0
 800ecba:	d111      	bne.n	800ece0 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x4c>
 800ecbc:	eba8 0100 	sub.w	r1, r8, r0
 800ecc0:	2302      	movs	r3, #2
 800ecc2:	eb05 0040 	add.w	r0, r5, r0, lsl #1
 800ecc6:	fb96 f3f3 	sdiv	r3, r6, r3
 800ecca:	4a24      	ldr	r2, [pc, #144]	; (800ed5c <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc8>)
 800eccc:	444b      	add	r3, r9
 800ecce:	b289      	uxth	r1, r1
 800ecd0:	fb93 f3f6 	sdiv	r3, r3, r6
 800ecd4:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800ecd8:	f006 bc58 	b.w	801558c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 800ecdc:	2000      	movs	r0, #0
 800ecde:	e7eb      	b.n	800ecb8 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x24>
 800ece0:	dd39      	ble.n	800ed56 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc2>
 800ece2:	fb99 f4f6 	sdiv	r4, r9, r6
 800ece6:	eba8 0100 	sub.w	r1, r8, r0
 800ecea:	4623      	mov	r3, r4
 800ecec:	4a1b      	ldr	r2, [pc, #108]	; (800ed5c <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc8>)
 800ecee:	b289      	uxth	r1, r1
 800ecf0:	eb05 0040 	add.w	r0, r5, r0, lsl #1
 800ecf4:	f006 fc4a 	bl	801558c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 800ecf8:	4628      	mov	r0, r5
 800ecfa:	f006 f8d3 	bl	8014ea4 <_ZN8touchgfx7Unicode6strlenEPKt>
 800ecfe:	f108 38ff 	add.w	r8, r8, #4294967295
 800ed02:	4580      	cmp	r8, r0
 800ed04:	dd27      	ble.n	800ed56 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc2>
 800ed06:	f825 a010 	strh.w	sl, [r5, r0, lsl #1]
 800ed0a:	fb06 9314 	mls	r3, r6, r4, r9
 800ed0e:	3001      	adds	r0, #1
 800ed10:	2200      	movs	r2, #0
 800ed12:	f04f 090a 	mov.w	r9, #10
 800ed16:	f107 3aff 	add.w	sl, r7, #4294967295
 800ed1a:	f04f 0e02 	mov.w	lr, #2
 800ed1e:	fb96 fefe 	sdiv	lr, r6, lr
 800ed22:	4580      	cmp	r8, r0
 800ed24:	4684      	mov	ip, r0
 800ed26:	dd13      	ble.n	800ed50 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xbc>
 800ed28:	fb09 f303 	mul.w	r3, r9, r3
 800ed2c:	4592      	cmp	sl, r2
 800ed2e:	f102 0201 	add.w	r2, r2, #1
 800ed32:	bf08      	it	eq
 800ed34:	4473      	addeq	r3, lr
 800ed36:	f100 0c01 	add.w	ip, r0, #1
 800ed3a:	fb93 f4f6 	sdiv	r4, r3, r6
 800ed3e:	4297      	cmp	r7, r2
 800ed40:	f104 0130 	add.w	r1, r4, #48	; 0x30
 800ed44:	f825 1010 	strh.w	r1, [r5, r0, lsl #1]
 800ed48:	fb06 3314 	mls	r3, r6, r4, r3
 800ed4c:	4660      	mov	r0, ip
 800ed4e:	d1e8      	bne.n	800ed22 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x8e>
 800ed50:	2300      	movs	r3, #0
 800ed52:	f825 301c 	strh.w	r3, [r5, ip, lsl #1]
 800ed56:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800ed5a:	bf00      	nop
 800ed5c:	08024a60 	.word	0x08024a60

0800ed60 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih>:
 800ed60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ed64:	4698      	mov	r8, r3
 800ed66:	b099      	sub	sp, #100	; 0x64
 800ed68:	681b      	ldr	r3, [r3, #0]
 800ed6a:	4604      	mov	r4, r0
 800ed6c:	f8d3 3118 	ldr.w	r3, [r3, #280]	; 0x118
 800ed70:	4689      	mov	r9, r1
 800ed72:	4640      	mov	r0, r8
 800ed74:	9922      	ldr	r1, [sp, #136]	; 0x88
 800ed76:	4617      	mov	r7, r2
 800ed78:	4798      	blx	r3
 800ed7a:	ae18      	add	r6, sp, #96	; 0x60
 800ed7c:	f846 0d28 	str.w	r0, [r6, #-40]!
 800ed80:	4630      	mov	r0, r6
 800ed82:	f7fe ff8d 	bl	800dca0 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800ed86:	f8b8 3114 	ldrh.w	r3, [r8, #276]	; 0x114
 800ed8a:	1ac0      	subs	r0, r0, r3
 800ed8c:	b200      	sxth	r0, r0
 800ed8e:	2800      	cmp	r0, #0
 800ed90:	f2c0 80c0 	blt.w	800ef14 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1b4>
 800ed94:	f8b8 211a 	ldrh.w	r2, [r8, #282]	; 0x11a
 800ed98:	441a      	add	r2, r3
 800ed9a:	f8b8 3042 	ldrh.w	r3, [r8, #66]	; 0x42
 800ed9e:	1a9b      	subs	r3, r3, r2
 800eda0:	b21b      	sxth	r3, r3
 800eda2:	4298      	cmp	r0, r3
 800eda4:	f280 80b6 	bge.w	800ef14 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1b4>
 800eda8:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800edaa:	9302      	str	r3, [sp, #8]
 800edac:	f8b4 3044 	ldrh.w	r3, [r4, #68]	; 0x44
 800edb0:	9301      	str	r3, [sp, #4]
 800edb2:	f8b4 3042 	ldrh.w	r3, [r4, #66]	; 0x42
 800edb6:	9300      	str	r3, [sp, #0]
 800edb8:	4631      	mov	r1, r6
 800edba:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800edbc:	f8df a174 	ldr.w	sl, [pc, #372]	; 800ef34 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1d4>
 800edc0:	2214      	movs	r2, #20
 800edc2:	4620      	mov	r0, r4
 800edc4:	f7ff ff66 	bl	800ec94 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti>
 800edc8:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800edcc:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800edce:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800edd2:	683b      	ldr	r3, [r7, #0]
 800edd4:	f040 80a1 	bne.w	800ef1a <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1ba>
 800edd8:	f8da 0000 	ldr.w	r0, [sl]
 800eddc:	6a9d      	ldr	r5, [r3, #40]	; 0x28
 800edde:	f7f7 ffe5 	bl	8006dac <_ZNK8touchgfx5Texts7getTextEt>
 800ede2:	4632      	mov	r2, r6
 800ede4:	4601      	mov	r1, r0
 800ede6:	4638      	mov	r0, r7
 800ede8:	47a8      	blx	r5
 800edea:	683b      	ldr	r3, [r7, #0]
 800edec:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800edee:	f8d3 b040 	ldr.w	fp, [r3, #64]	; 0x40
 800edf2:	4605      	mov	r5, r0
 800edf4:	f8da 0000 	ldr.w	r0, [sl]
 800edf8:	f7f7 ffd8 	bl	8006dac <_ZNK8touchgfx5Texts7getTextEt>
 800edfc:	4632      	mov	r2, r6
 800edfe:	4601      	mov	r1, r0
 800ee00:	4638      	mov	r0, r7
 800ee02:	47d8      	blx	fp
 800ee04:	683b      	ldr	r3, [r7, #0]
 800ee06:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800ee08:	f8d3 b024 	ldr.w	fp, [r3, #36]	; 0x24
 800ee0c:	fb15 f500 	smulbb	r5, r5, r0
 800ee10:	f8da 0000 	ldr.w	r0, [sl]
 800ee14:	f7f7 ffca 	bl	8006dac <_ZNK8touchgfx5Texts7getTextEt>
 800ee18:	4632      	mov	r2, r6
 800ee1a:	4601      	mov	r1, r0
 800ee1c:	4638      	mov	r0, r7
 800ee1e:	47d8      	blx	fp
 800ee20:	b2ad      	uxth	r5, r5
 800ee22:	4405      	add	r5, r0
 800ee24:	b2ad      	uxth	r5, r5
 800ee26:	f8d8 3000 	ldr.w	r3, [r8]
 800ee2a:	9922      	ldr	r1, [sp, #136]	; 0x88
 800ee2c:	f8d3 3118 	ldr.w	r3, [r3, #280]	; 0x118
 800ee30:	f8b8 a0c6 	ldrh.w	sl, [r8, #198]	; 0xc6
 800ee34:	4640      	mov	r0, r8
 800ee36:	4798      	blx	r3
 800ee38:	f10d 0b60 	add.w	fp, sp, #96	; 0x60
 800ee3c:	f04f 0800 	mov.w	r8, #0
 800ee40:	f84b 0d3c 	str.w	r0, [fp, #-60]!
 800ee44:	4658      	mov	r0, fp
 800ee46:	f7fe ff2b 	bl	800dca0 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800ee4a:	4450      	add	r0, sl
 800ee4c:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800ee50:	f8ad 3018 	strh.w	r3, [sp, #24]
 800ee54:	eba0 0055 	sub.w	r0, r0, r5, lsr #1
 800ee58:	f8ad 501a 	strh.w	r5, [sp, #26]
 800ee5c:	f8ad 8014 	strh.w	r8, [sp, #20]
 800ee60:	f8ad 0016 	strh.w	r0, [sp, #22]
 800ee64:	ad05      	add	r5, sp, #20
 800ee66:	e895 0003 	ldmia.w	r5, {r0, r1}
 800ee6a:	f10d 0a1c 	add.w	sl, sp, #28
 800ee6e:	e88a 0003 	stmia.w	sl, {r0, r1}
 800ee72:	4649      	mov	r1, r9
 800ee74:	4650      	mov	r0, sl
 800ee76:	f7fd fc41 	bl	800c6fc <_ZN8touchgfx4RectaNERKS0_>
 800ee7a:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 800ee7e:	4543      	cmp	r3, r8
 800ee80:	dd48      	ble.n	800ef14 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1b4>
 800ee82:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 800ee86:	4543      	cmp	r3, r8
 800ee88:	dd44      	ble.n	800ef14 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1b4>
 800ee8a:	f8bd 301c 	ldrh.w	r3, [sp, #28]
 800ee8e:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800ee92:	1a9b      	subs	r3, r3, r2
 800ee94:	f8ad 301c 	strh.w	r3, [sp, #28]
 800ee98:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 800ee9c:	f8bd 301e 	ldrh.w	r3, [sp, #30]
 800eea0:	1a9b      	subs	r3, r3, r2
 800eea2:	f8ad 301e 	strh.w	r3, [sp, #30]
 800eea6:	6823      	ldr	r3, [r4, #0]
 800eea8:	4620      	mov	r0, r4
 800eeaa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800eeac:	4629      	mov	r1, r5
 800eeae:	4798      	blx	r3
 800eeb0:	4b1f      	ldr	r3, [pc, #124]	; (800ef30 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1d0>)
 800eeb2:	f8b4 903c 	ldrh.w	r9, [r4, #60]	; 0x3c
 800eeb6:	681b      	ldr	r3, [r3, #0]
 800eeb8:	f894 1040 	ldrb.w	r1, [r4, #64]	; 0x40
 800eebc:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800eebe:	eb03 0349 	add.w	r3, r3, r9, lsl #1
 800eec2:	785b      	ldrb	r3, [r3, #1]
 800eec4:	920b      	str	r2, [sp, #44]	; 0x2c
 800eec6:	f3c3 0001 	ubfx	r0, r3, #0, #2
 800eeca:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800eece:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800eed2:	f89d 3090 	ldrb.w	r3, [sp, #144]	; 0x90
 800eed6:	f88d 102a 	strb.w	r1, [sp, #42]	; 0x2a
 800eeda:	f88d 3032 	strb.w	r3, [sp, #50]	; 0x32
 800eede:	9709      	str	r7, [sp, #36]	; 0x24
 800eee0:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 800eee4:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
 800eee8:	f88d 8033 	strb.w	r8, [sp, #51]	; 0x33
 800eeec:	f88d 8034 	strb.w	r8, [sp, #52]	; 0x34
 800eef0:	f7f3 fa78 	bl	80023e4 <_ZN8touchgfx3HAL3lcdEv>
 800eef4:	4b0f      	ldr	r3, [pc, #60]	; (800ef34 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1d4>)
 800eef6:	4604      	mov	r4, r0
 800eef8:	4649      	mov	r1, r9
 800eefa:	6818      	ldr	r0, [r3, #0]
 800eefc:	f7f7 ff56 	bl	8006dac <_ZNK8touchgfx5Texts7getTextEt>
 800ef00:	e9cd 6802 	strd	r6, r8, [sp, #8]
 800ef04:	e9cd b000 	strd	fp, r0, [sp]
 800ef08:	4653      	mov	r3, sl
 800ef0a:	e895 0006 	ldmia.w	r5, {r1, r2}
 800ef0e:	4620      	mov	r0, r4
 800ef10:	f7f7 fefe 	bl	8006d10 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800ef14:	b019      	add	sp, #100	; 0x64
 800ef16:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ef1a:	f8da 0000 	ldr.w	r0, [sl]
 800ef1e:	699d      	ldr	r5, [r3, #24]
 800ef20:	f7f7 ff44 	bl	8006dac <_ZNK8touchgfx5Texts7getTextEt>
 800ef24:	4632      	mov	r2, r6
 800ef26:	4601      	mov	r1, r0
 800ef28:	4638      	mov	r0, r7
 800ef2a:	47a8      	blx	r5
 800ef2c:	4605      	mov	r5, r0
 800ef2e:	e77a      	b.n	800ee26 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0xc6>
 800ef30:	200179a4 	.word	0x200179a4
 800ef34:	200179b0 	.word	0x200179b0

0800ef38 <_ZN8touchgfx21GraphWrapAndClearData5clearEv>:
 800ef38:	b510      	push	{r4, lr}
 800ef3a:	4604      	mov	r4, r0
 800ef3c:	f7fe ff76 	bl	800de2c <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv>
 800ef40:	4620      	mov	r0, r4
 800ef42:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ef46:	f7fe bd44 	b.w	800d9d2 <_ZN8touchgfx17AbstractDataGraph5clearEv>

0800ef4a <_ZN8touchgfx21GraphWrapAndClearData8addValueEi>:
 800ef4a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ef4c:	f9b0 511e 	ldrsh.w	r5, [r0, #286]	; 0x11e
 800ef50:	f8d0 6144 	ldr.w	r6, [r0, #324]	; 0x144
 800ef54:	1c6b      	adds	r3, r5, #1
 800ef56:	f8a0 311e 	strh.w	r3, [r0, #286]	; 0x11e
 800ef5a:	6803      	ldr	r3, [r0, #0]
 800ef5c:	460f      	mov	r7, r1
 800ef5e:	f8d3 3180 	ldr.w	r3, [r3, #384]	; 0x180
 800ef62:	4629      	mov	r1, r5
 800ef64:	4604      	mov	r4, r0
 800ef66:	4798      	blx	r3
 800ef68:	f846 7020 	str.w	r7, [r6, r0, lsl #2]
 800ef6c:	b915      	cbnz	r5, 800ef74 <_ZN8touchgfx21GraphWrapAndClearData8addValueEi+0x2a>
 800ef6e:	4620      	mov	r0, r4
 800ef70:	f7fe ff5c 	bl	800de2c <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv>
 800ef74:	4620      	mov	r0, r4
 800ef76:	4629      	mov	r1, r5
 800ef78:	f7fe ff30 	bl	800dddc <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs>
 800ef7c:	4628      	mov	r0, r5
 800ef7e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800ef80 <_ZN8touchgfx21GraphWrapAndClearData14beforeAddValueEv>:
 800ef80:	f9b0 111e 	ldrsh.w	r1, [r0, #286]	; 0x11e
 800ef84:	f9b0 211c 	ldrsh.w	r2, [r0, #284]	; 0x11c
 800ef88:	4291      	cmp	r1, r2
 800ef8a:	db03      	blt.n	800ef94 <_ZN8touchgfx21GraphWrapAndClearData14beforeAddValueEv+0x14>
 800ef8c:	6803      	ldr	r3, [r0, #0]
 800ef8e:	f8d3 30fc 	ldr.w	r3, [r3, #252]	; 0xfc
 800ef92:	4718      	bx	r3
 800ef94:	4770      	bx	lr

0800ef96 <_ZN8touchgfx15GraphScrollData5clearEv>:
 800ef96:	b510      	push	{r4, lr}
 800ef98:	4604      	mov	r4, r0
 800ef9a:	f7fe fd1a 	bl	800d9d2 <_ZN8touchgfx17AbstractDataGraph5clearEv>
 800ef9e:	2300      	movs	r3, #0
 800efa0:	f8a4 314c 	strh.w	r3, [r4, #332]	; 0x14c
 800efa4:	bd10      	pop	{r4, pc}

0800efa6 <_ZN8touchgfx15GraphScrollData14beforeAddValueEv>:
 800efa6:	f9b0 211e 	ldrsh.w	r2, [r0, #286]	; 0x11e
 800efaa:	f9b0 311c 	ldrsh.w	r3, [r0, #284]	; 0x11c
 800efae:	429a      	cmp	r2, r3
 800efb0:	d101      	bne.n	800efb6 <_ZN8touchgfx15GraphScrollData14beforeAddValueEv+0x10>
 800efb2:	f7fe bf3b 	b.w	800de2c <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv>
 800efb6:	4770      	bx	lr

0800efb8 <_ZNK8touchgfx15GraphScrollData18indexToGlobalIndexEs>:
 800efb8:	b538      	push	{r3, r4, r5, lr}
 800efba:	f9b0 411c 	ldrsh.w	r4, [r0, #284]	; 0x11c
 800efbe:	f9b0 511e 	ldrsh.w	r5, [r0, #286]	; 0x11e
 800efc2:	42a5      	cmp	r5, r4
 800efc4:	da04      	bge.n	800efd0 <_ZNK8touchgfx15GraphScrollData18indexToGlobalIndexEs+0x18>
 800efc6:	6803      	ldr	r3, [r0, #0]
 800efc8:	f8d3 3180 	ldr.w	r3, [r3, #384]	; 0x180
 800efcc:	4798      	blx	r3
 800efce:	bd38      	pop	{r3, r4, r5, pc}
 800efd0:	f8d0 0148 	ldr.w	r0, [r0, #328]	; 0x148
 800efd4:	4408      	add	r0, r1
 800efd6:	1b00      	subs	r0, r0, r4
 800efd8:	e7f9      	b.n	800efce <_ZNK8touchgfx15GraphScrollData18indexToGlobalIndexEs+0x16>

0800efda <_ZN8touchgfx15GraphScrollData8addValueEi>:
 800efda:	b570      	push	{r4, r5, r6, lr}
 800efdc:	f9b0 514c 	ldrsh.w	r5, [r0, #332]	; 0x14c
 800efe0:	f9b0 611e 	ldrsh.w	r6, [r0, #286]	; 0x11e
 800efe4:	f9b0 211c 	ldrsh.w	r2, [r0, #284]	; 0x11c
 800efe8:	4604      	mov	r4, r0
 800efea:	1c6b      	adds	r3, r5, #1
 800efec:	b21b      	sxth	r3, r3
 800efee:	42ae      	cmp	r6, r5
 800eff0:	bf08      	it	eq
 800eff2:	f8a4 311e 	strheq.w	r3, [r4, #286]	; 0x11e
 800eff6:	fb93 f0f2 	sdiv	r0, r3, r2
 800effa:	fb02 3010 	mls	r0, r2, r0, r3
 800effe:	f8d4 3144 	ldr.w	r3, [r4, #324]	; 0x144
 800f002:	f8a4 014c 	strh.w	r0, [r4, #332]	; 0x14c
 800f006:	4296      	cmp	r6, r2
 800f008:	f843 1025 	str.w	r1, [r3, r5, lsl #2]
 800f00c:	d108      	bne.n	800f020 <_ZN8touchgfx15GraphScrollData8addValueEi+0x46>
 800f00e:	f104 0038 	add.w	r0, r4, #56	; 0x38
 800f012:	f004 fa94 	bl	801353e <_ZNK8touchgfx8Drawable10invalidateEv>
 800f016:	4620      	mov	r0, r4
 800f018:	f7fe ff08 	bl	800de2c <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv>
 800f01c:	4628      	mov	r0, r5
 800f01e:	bd70      	pop	{r4, r5, r6, pc}
 800f020:	4629      	mov	r1, r5
 800f022:	4620      	mov	r0, r4
 800f024:	f7fe feda 	bl	800dddc <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs>
 800f028:	e7f8      	b.n	800f01c <_ZN8touchgfx15GraphScrollData8addValueEi+0x42>

0800f02a <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 800f02a:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 800f02e:	4770      	bx	lr

0800f030 <_ZN8touchgfx14AbstractButton13executeActionEv>:
 800f030:	b510      	push	{r4, lr}
 800f032:	4604      	mov	r4, r0
 800f034:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800f036:	b150      	cbz	r0, 800f04e <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800f038:	6803      	ldr	r3, [r0, #0]
 800f03a:	68db      	ldr	r3, [r3, #12]
 800f03c:	4798      	blx	r3
 800f03e:	b130      	cbz	r0, 800f04e <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800f040:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800f042:	6803      	ldr	r3, [r0, #0]
 800f044:	4621      	mov	r1, r4
 800f046:	689b      	ldr	r3, [r3, #8]
 800f048:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f04c:	4718      	bx	r3
 800f04e:	bd10      	pop	{r4, pc}

0800f050 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 800f050:	b570      	push	{r4, r5, r6, lr}
 800f052:	790b      	ldrb	r3, [r1, #4]
 800f054:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 800f058:	2b00      	cmp	r3, #0
 800f05a:	bf0c      	ite	eq
 800f05c:	2301      	moveq	r3, #1
 800f05e:	2300      	movne	r3, #0
 800f060:	4604      	mov	r4, r0
 800f062:	460e      	mov	r6, r1
 800f064:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 800f068:	d109      	bne.n	800f07e <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 800f06a:	b14d      	cbz	r5, 800f080 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 800f06c:	7933      	ldrb	r3, [r6, #4]
 800f06e:	2b01      	cmp	r3, #1
 800f070:	d10c      	bne.n	800f08c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 800f072:	6823      	ldr	r3, [r4, #0]
 800f074:	4620      	mov	r0, r4
 800f076:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800f078:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f07c:	4718      	bx	r3
 800f07e:	b12d      	cbz	r5, 800f08c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 800f080:	6823      	ldr	r3, [r4, #0]
 800f082:	4620      	mov	r0, r4
 800f084:	695b      	ldr	r3, [r3, #20]
 800f086:	4798      	blx	r3
 800f088:	2d00      	cmp	r5, #0
 800f08a:	d1ef      	bne.n	800f06c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 800f08c:	bd70      	pop	{r4, r5, r6, pc}

0800f08e <_ZN8touchgfx12ToggleButtonD1Ev>:
 800f08e:	4770      	bx	lr

0800f090 <_ZN8touchgfx12ToggleButton16handleClickEventERKNS_10ClickEventE>:
 800f090:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800f094:	b133      	cbz	r3, 800f0a4 <_ZN8touchgfx12ToggleButton16handleClickEventERKNS_10ClickEventE+0x14>
 800f096:	790b      	ldrb	r3, [r1, #4]
 800f098:	2b01      	cmp	r3, #1
 800f09a:	bf01      	itttt	eq
 800f09c:	8dc3      	ldrheq	r3, [r0, #46]	; 0x2e
 800f09e:	8e02      	ldrheq	r2, [r0, #48]	; 0x30
 800f0a0:	85c2      	strheq	r2, [r0, #46]	; 0x2e
 800f0a2:	8603      	strheq	r3, [r0, #48]	; 0x30
 800f0a4:	f7ff bfd4 	b.w	800f050 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>

0800f0a8 <_ZN8touchgfx12ToggleButton10setBitmapsERKNS_6BitmapES3_>:
 800f0a8:	8813      	ldrh	r3, [r2, #0]
 800f0aa:	8683      	strh	r3, [r0, #52]	; 0x34
 800f0ac:	f000 bbdf 	b.w	800f86e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>

0800f0b0 <_ZN8touchgfx12ToggleButtonD0Ev>:
 800f0b0:	b510      	push	{r4, lr}
 800f0b2:	2138      	movs	r1, #56	; 0x38
 800f0b4:	4604      	mov	r4, r0
 800f0b6:	f012 fdc7 	bl	8021c48 <_ZdlPvj>
 800f0ba:	4620      	mov	r0, r4
 800f0bc:	bd10      	pop	{r4, pc}

0800f0be <_ZNK8touchgfx6Button17invalidateContentEv>:
 800f0be:	f890 2032 	ldrb.w	r2, [r0, #50]	; 0x32
 800f0c2:	b12a      	cbz	r2, 800f0d0 <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 800f0c4:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800f0c8:	b112      	cbz	r2, 800f0d0 <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 800f0ca:	6803      	ldr	r3, [r0, #0]
 800f0cc:	695b      	ldr	r3, [r3, #20]
 800f0ce:	4718      	bx	r3
 800f0d0:	4770      	bx	lr

0800f0d2 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 800f0d2:	2000      	movs	r0, #0
 800f0d4:	4770      	bx	lr
	...

0800f0d8 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 800f0d8:	4b07      	ldr	r3, [pc, #28]	; (800f0f8 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 800f0da:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800f0dc:	881b      	ldrh	r3, [r3, #0]
 800f0de:	4293      	cmp	r3, r2
 800f0e0:	bf81      	itttt	hi
 800f0e2:	4b06      	ldrhi	r3, [pc, #24]	; (800f0fc <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 800f0e4:	681b      	ldrhi	r3, [r3, #0]
 800f0e6:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 800f0ea:	7858      	ldrbhi	r0, [r3, #1]
 800f0ec:	bf8c      	ite	hi
 800f0ee:	f000 0003 	andhi.w	r0, r0, #3
 800f0f2:	2000      	movls	r0, #0
 800f0f4:	4770      	bx	lr
 800f0f6:	bf00      	nop
 800f0f8:	200179a8 	.word	0x200179a8
 800f0fc:	200179a4 	.word	0x200179a4

0800f100 <_ZN8touchgfx8TextAreaD1Ev>:
 800f100:	4770      	bx	lr
	...

0800f104 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 800f104:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f108:	4b10      	ldr	r3, [pc, #64]	; (800f14c <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 800f10a:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800f10c:	881b      	ldrh	r3, [r3, #0]
 800f10e:	428b      	cmp	r3, r1
 800f110:	4604      	mov	r4, r0
 800f112:	d918      	bls.n	800f146 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 800f114:	6803      	ldr	r3, [r0, #0]
 800f116:	6f9d      	ldr	r5, [r3, #120]	; 0x78
 800f118:	4b0d      	ldr	r3, [pc, #52]	; (800f150 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 800f11a:	6818      	ldr	r0, [r3, #0]
 800f11c:	f7f7 fe46 	bl	8006dac <_ZNK8touchgfx5Texts7getTextEt>
 800f120:	6823      	ldr	r3, [r4, #0]
 800f122:	4606      	mov	r6, r0
 800f124:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800f126:	4620      	mov	r0, r4
 800f128:	4798      	blx	r3
 800f12a:	6823      	ldr	r3, [r4, #0]
 800f12c:	4607      	mov	r7, r0
 800f12e:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800f132:	4620      	mov	r0, r4
 800f134:	4798      	blx	r3
 800f136:	463a      	mov	r2, r7
 800f138:	4603      	mov	r3, r0
 800f13a:	4631      	mov	r1, r6
 800f13c:	4620      	mov	r0, r4
 800f13e:	46ac      	mov	ip, r5
 800f140:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800f144:	4760      	bx	ip
 800f146:	2000      	movs	r0, #0
 800f148:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f14c:	200179a8 	.word	0x200179a8
 800f150:	200179b0 	.word	0x200179b0

0800f154 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 800f154:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800f158:	4b17      	ldr	r3, [pc, #92]	; (800f1b8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 800f15a:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800f15c:	881b      	ldrh	r3, [r3, #0]
 800f15e:	428b      	cmp	r3, r1
 800f160:	4604      	mov	r4, r0
 800f162:	d926      	bls.n	800f1b2 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 800f164:	4b15      	ldr	r3, [pc, #84]	; (800f1bc <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 800f166:	681b      	ldr	r3, [r3, #0]
 800f168:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 800f16c:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 800f170:	4b13      	ldr	r3, [pc, #76]	; (800f1c0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 800f172:	7855      	ldrb	r5, [r2, #1]
 800f174:	681b      	ldr	r3, [r3, #0]
 800f176:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 800f17a:	6833      	ldr	r3, [r6, #0]
 800f17c:	69df      	ldr	r7, [r3, #28]
 800f17e:	4b11      	ldr	r3, [pc, #68]	; (800f1c4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 800f180:	6818      	ldr	r0, [r3, #0]
 800f182:	f7f7 fe13 	bl	8006dac <_ZNK8touchgfx5Texts7getTextEt>
 800f186:	6823      	ldr	r3, [r4, #0]
 800f188:	4680      	mov	r8, r0
 800f18a:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800f18c:	4620      	mov	r0, r4
 800f18e:	4798      	blx	r3
 800f190:	6823      	ldr	r3, [r4, #0]
 800f192:	4681      	mov	r9, r0
 800f194:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800f198:	4620      	mov	r0, r4
 800f19a:	4798      	blx	r3
 800f19c:	f3c5 0581 	ubfx	r5, r5, #2, #2
 800f1a0:	9000      	str	r0, [sp, #0]
 800f1a2:	464b      	mov	r3, r9
 800f1a4:	4642      	mov	r2, r8
 800f1a6:	4629      	mov	r1, r5
 800f1a8:	4630      	mov	r0, r6
 800f1aa:	47b8      	blx	r7
 800f1ac:	b003      	add	sp, #12
 800f1ae:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800f1b2:	2000      	movs	r0, #0
 800f1b4:	e7fa      	b.n	800f1ac <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 800f1b6:	bf00      	nop
 800f1b8:	200179a8 	.word	0x200179a8
 800f1bc:	200179a4 	.word	0x200179a4
 800f1c0:	200179ac 	.word	0x200179ac
 800f1c4:	200179b0 	.word	0x200179b0

0800f1c8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 800f1c8:	b40e      	push	{r1, r2, r3}
 800f1ca:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f1ce:	4b2f      	ldr	r3, [pc, #188]	; (800f28c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 800f1d0:	881a      	ldrh	r2, [r3, #0]
 800f1d2:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 800f1d4:	429a      	cmp	r2, r3
 800f1d6:	b09d      	sub	sp, #116	; 0x74
 800f1d8:	4604      	mov	r4, r0
 800f1da:	d954      	bls.n	800f286 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 800f1dc:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 800f290 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 800f1e0:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 800f294 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 800f1e4:	aa26      	add	r2, sp, #152	; 0x98
 800f1e6:	9202      	str	r2, [sp, #8]
 800f1e8:	f8d9 2000 	ldr.w	r2, [r9]
 800f1ec:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800f1f0:	f8d8 3000 	ldr.w	r3, [r8]
 800f1f4:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800f1f8:	682b      	ldr	r3, [r5, #0]
 800f1fa:	4628      	mov	r0, r5
 800f1fc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800f1fe:	4798      	blx	r3
 800f200:	b207      	sxth	r7, r0
 800f202:	4606      	mov	r6, r0
 800f204:	a803      	add	r0, sp, #12
 800f206:	f004 feea 	bl	8013fde <_ZN8touchgfx12TextProviderC1Ev>
 800f20a:	682b      	ldr	r3, [r5, #0]
 800f20c:	4628      	mov	r0, r5
 800f20e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800f210:	4798      	blx	r3
 800f212:	682b      	ldr	r3, [r5, #0]
 800f214:	4682      	mov	sl, r0
 800f216:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800f218:	4628      	mov	r0, r5
 800f21a:	4798      	blx	r3
 800f21c:	4653      	mov	r3, sl
 800f21e:	9000      	str	r0, [sp, #0]
 800f220:	9a02      	ldr	r2, [sp, #8]
 800f222:	9925      	ldr	r1, [sp, #148]	; 0x94
 800f224:	a803      	add	r0, sp, #12
 800f226:	f004 ff35 	bl	8014094 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800f22a:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800f22c:	f8d9 3000 	ldr.w	r3, [r9]
 800f230:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 800f234:	8925      	ldrh	r5, [r4, #8]
 800f236:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 800f23a:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 800f23e:	eba5 050c 	sub.w	r5, r5, ip
 800f242:	784a      	ldrb	r2, [r1, #1]
 800f244:	f8d8 3000 	ldr.w	r3, [r8]
 800f248:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 800f24c:	b22d      	sxth	r5, r5
 800f24e:	9500      	str	r5, [sp, #0]
 800f250:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 800f254:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800f258:	a803      	add	r0, sp, #12
 800f25a:	f002 fd2f 	bl	8011cbc <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 800f25e:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 800f262:	18b9      	adds	r1, r7, r2
 800f264:	2900      	cmp	r1, #0
 800f266:	b203      	sxth	r3, r0
 800f268:	dd0b      	ble.n	800f282 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 800f26a:	3b01      	subs	r3, #1
 800f26c:	fb13 f302 	smulbb	r3, r3, r2
 800f270:	fb16 3300 	smlabb	r3, r6, r0, r3
 800f274:	b21f      	sxth	r7, r3
 800f276:	4638      	mov	r0, r7
 800f278:	b01d      	add	sp, #116	; 0x74
 800f27a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f27e:	b003      	add	sp, #12
 800f280:	4770      	bx	lr
 800f282:	2b00      	cmp	r3, #0
 800f284:	dcf7      	bgt.n	800f276 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 800f286:	2700      	movs	r7, #0
 800f288:	e7f5      	b.n	800f276 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 800f28a:	bf00      	nop
 800f28c:	200179a8 	.word	0x200179a8
 800f290:	200179a4 	.word	0x200179a4
 800f294:	200179ac 	.word	0x200179ac

0800f298 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 800f298:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f29c:	4bbb      	ldr	r3, [pc, #748]	; (800f58c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f4>)
 800f29e:	460c      	mov	r4, r1
 800f2a0:	881b      	ldrh	r3, [r3, #0]
 800f2a2:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
 800f2a4:	428b      	cmp	r3, r1
 800f2a6:	b0a9      	sub	sp, #164	; 0xa4
 800f2a8:	4681      	mov	r9, r0
 800f2aa:	d809      	bhi.n	800f2c0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 800f2ac:	2300      	movs	r3, #0
 800f2ae:	f04f 32ff 	mov.w	r2, #4294967295
 800f2b2:	e9c0 3200 	strd	r3, r2, [r0]
 800f2b6:	6083      	str	r3, [r0, #8]
 800f2b8:	4648      	mov	r0, r9
 800f2ba:	b029      	add	sp, #164	; 0xa4
 800f2bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f2c0:	f8df b2d0 	ldr.w	fp, [pc, #720]	; 800f594 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 800f2c4:	f8df 82d0 	ldr.w	r8, [pc, #720]	; 800f598 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>
 800f2c8:	f8db 3000 	ldr.w	r3, [fp]
 800f2cc:	f8d8 0000 	ldr.w	r0, [r8]
 800f2d0:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 800f2d4:	4bae      	ldr	r3, [pc, #696]	; (800f590 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 800f2d6:	681b      	ldr	r3, [r3, #0]
 800f2d8:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800f2dc:	f7f7 fd66 	bl	8006dac <_ZNK8touchgfx5Texts7getTextEt>
 800f2e0:	682b      	ldr	r3, [r5, #0]
 800f2e2:	4607      	mov	r7, r0
 800f2e4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800f2e6:	4628      	mov	r0, r5
 800f2e8:	4798      	blx	r3
 800f2ea:	8ea6      	ldrh	r6, [r4, #52]	; 0x34
 800f2ec:	f8cd 800c 	str.w	r8, [sp, #12]
 800f2f0:	4430      	add	r0, r6
 800f2f2:	f894 6039 	ldrb.w	r6, [r4, #57]	; 0x39
 800f2f6:	b283      	uxth	r3, r0
 800f2f8:	f10d 0a3c 	add.w	sl, sp, #60	; 0x3c
 800f2fc:	9302      	str	r3, [sp, #8]
 800f2fe:	4650      	mov	r0, sl
 800f300:	2e00      	cmp	r6, #0
 800f302:	f040 8091 	bne.w	800f428 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 800f306:	f004 fe6a 	bl	8013fde <_ZN8touchgfx12TextProviderC1Ev>
 800f30a:	682b      	ldr	r3, [r5, #0]
 800f30c:	4628      	mov	r0, r5
 800f30e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800f310:	4798      	blx	r3
 800f312:	682b      	ldr	r3, [r5, #0]
 800f314:	9005      	str	r0, [sp, #20]
 800f316:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800f318:	4628      	mov	r0, r5
 800f31a:	4798      	blx	r3
 800f31c:	6823      	ldr	r3, [r4, #0]
 800f31e:	4680      	mov	r8, r0
 800f320:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800f322:	4620      	mov	r0, r4
 800f324:	4798      	blx	r3
 800f326:	6822      	ldr	r2, [r4, #0]
 800f328:	9004      	str	r0, [sp, #16]
 800f32a:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 800f32e:	4620      	mov	r0, r4
 800f330:	4790      	blx	r2
 800f332:	9905      	ldr	r1, [sp, #20]
 800f334:	9b04      	ldr	r3, [sp, #16]
 800f336:	9001      	str	r0, [sp, #4]
 800f338:	9300      	str	r3, [sp, #0]
 800f33a:	460a      	mov	r2, r1
 800f33c:	4643      	mov	r3, r8
 800f33e:	4639      	mov	r1, r7
 800f340:	4650      	mov	r0, sl
 800f342:	f004 febc 	bl	80140be <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800f346:	4637      	mov	r7, r6
 800f348:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800f34a:	f8db 3000 	ldr.w	r3, [fp]
 800f34e:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800f352:	4629      	mov	r1, r5
 800f354:	785b      	ldrb	r3, [r3, #1]
 800f356:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800f35a:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800f35e:	4650      	mov	r0, sl
 800f360:	f002 f9fe 	bl	8011760 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 800f364:	4287      	cmp	r7, r0
 800f366:	bfb8      	it	lt
 800f368:	b207      	sxthlt	r7, r0
 800f36a:	3601      	adds	r6, #1
 800f36c:	4650      	mov	r0, sl
 800f36e:	b2b6      	uxth	r6, r6
 800f370:	f004 fe5c 	bl	801402c <_ZN8touchgfx12TextProvider11endOfStringEv>
 800f374:	2800      	cmp	r0, #0
 800f376:	d0e7      	beq.n	800f348 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xb0>
 800f378:	9b02      	ldr	r3, [sp, #8]
 800f37a:	f8b4 8034 	ldrh.w	r8, [r4, #52]	; 0x34
 800f37e:	fb13 f606 	smulbb	r6, r3, r6
 800f382:	eba6 0608 	sub.w	r6, r6, r8
 800f386:	b2b6      	uxth	r6, r6
 800f388:	fa0f f886 	sxth.w	r8, r6
 800f38c:	f1b8 0f00 	cmp.w	r8, #0
 800f390:	dd06      	ble.n	800f3a0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x108>
 800f392:	682b      	ldr	r3, [r5, #0]
 800f394:	4628      	mov	r0, r5
 800f396:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800f398:	4798      	blx	r3
 800f39a:	4430      	add	r0, r6
 800f39c:	fa0f f880 	sxth.w	r8, r0
 800f3a0:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800f3a4:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800f3a8:	6823      	ldr	r3, [r4, #0]
 800f3aa:	bf08      	it	eq
 800f3ac:	f9b4 6008 	ldrsheq.w	r6, [r4, #8]
 800f3b0:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800f3b2:	bf18      	it	ne
 800f3b4:	f9b4 600a 	ldrshne.w	r6, [r4, #10]
 800f3b8:	4620      	mov	r0, r4
 800f3ba:	4798      	blx	r3
 800f3bc:	2801      	cmp	r0, #1
 800f3be:	b2ba      	uxth	r2, r7
 800f3c0:	f000 80d1 	beq.w	800f566 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ce>
 800f3c4:	2802      	cmp	r0, #2
 800f3c6:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 800f3ca:	f000 80d2 	beq.w	800f572 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2da>
 800f3ce:	b21e      	sxth	r6, r3
 800f3d0:	7a29      	ldrb	r1, [r5, #8]
 800f3d2:	7a6d      	ldrb	r5, [r5, #9]
 800f3d4:	1a76      	subs	r6, r6, r1
 800f3d6:	4429      	add	r1, r5
 800f3d8:	440a      	add	r2, r1
 800f3da:	f894 1038 	ldrb.w	r1, [r4, #56]	; 0x38
 800f3de:	b2b3      	uxth	r3, r6
 800f3e0:	b292      	uxth	r2, r2
 800f3e2:	2902      	cmp	r1, #2
 800f3e4:	b21f      	sxth	r7, r3
 800f3e6:	b216      	sxth	r6, r2
 800f3e8:	f000 80c6 	beq.w	800f578 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2e0>
 800f3ec:	2903      	cmp	r1, #3
 800f3ee:	f000 80d5 	beq.w	800f59c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>
 800f3f2:	2901      	cmp	r1, #1
 800f3f4:	f040 80db 	bne.w	800f5ae <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x316>
 800f3f8:	8923      	ldrh	r3, [r4, #8]
 800f3fa:	4632      	mov	r2, r6
 800f3fc:	eba3 0308 	sub.w	r3, r3, r8
 800f400:	4646      	mov	r6, r8
 800f402:	463d      	mov	r5, r7
 800f404:	4690      	mov	r8, r2
 800f406:	b21f      	sxth	r7, r3
 800f408:	9b03      	ldr	r3, [sp, #12]
 800f40a:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800f40c:	6818      	ldr	r0, [r3, #0]
 800f40e:	f7f7 fccd 	bl	8006dac <_ZNK8touchgfx5Texts7getTextEt>
 800f412:	f8a9 7000 	strh.w	r7, [r9]
 800f416:	f8a9 5002 	strh.w	r5, [r9, #2]
 800f41a:	f8a9 6004 	strh.w	r6, [r9, #4]
 800f41e:	f8a9 8006 	strh.w	r8, [r9, #6]
 800f422:	f8c9 0008 	str.w	r0, [r9, #8]
 800f426:	e747      	b.n	800f2b8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 800f428:	f004 fdd9 	bl	8013fde <_ZN8touchgfx12TextProviderC1Ev>
 800f42c:	682b      	ldr	r3, [r5, #0]
 800f42e:	4628      	mov	r0, r5
 800f430:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800f432:	4798      	blx	r3
 800f434:	682b      	ldr	r3, [r5, #0]
 800f436:	4606      	mov	r6, r0
 800f438:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800f43a:	4628      	mov	r0, r5
 800f43c:	4798      	blx	r3
 800f43e:	6823      	ldr	r3, [r4, #0]
 800f440:	4680      	mov	r8, r0
 800f442:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800f444:	4620      	mov	r0, r4
 800f446:	4798      	blx	r3
 800f448:	6822      	ldr	r2, [r4, #0]
 800f44a:	9004      	str	r0, [sp, #16]
 800f44c:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 800f450:	4620      	mov	r0, r4
 800f452:	4790      	blx	r2
 800f454:	9b04      	ldr	r3, [sp, #16]
 800f456:	9001      	str	r0, [sp, #4]
 800f458:	4632      	mov	r2, r6
 800f45a:	9300      	str	r3, [sp, #0]
 800f45c:	4639      	mov	r1, r7
 800f45e:	4643      	mov	r3, r8
 800f460:	4650      	mov	r0, sl
 800f462:	f004 fe2c 	bl	80140be <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800f466:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800f46a:	f9b4 8008 	ldrsh.w	r8, [r4, #8]
 800f46e:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800f470:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
 800f474:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800f478:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800f47c:	bf0a      	itet	eq
 800f47e:	4642      	moveq	r2, r8
 800f480:	461a      	movne	r2, r3
 800f482:	4698      	moveq	r8, r3
 800f484:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 800f488:	1ad2      	subs	r2, r2, r3
 800f48a:	f8db 3000 	ldr.w	r3, [fp]
 800f48e:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 800f492:	7859      	ldrb	r1, [r3, #1]
 800f494:	f8cd a020 	str.w	sl, [sp, #32]
 800f498:	2300      	movs	r3, #0
 800f49a:	f3c1 0181 	ubfx	r1, r1, #2, #2
 800f49e:	f8ad 301c 	strh.w	r3, [sp, #28]
 800f4a2:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 800f4a6:	f88d 0025 	strb.w	r0, [sp, #37]	; 0x25
 800f4aa:	950a      	str	r5, [sp, #40]	; 0x28
 800f4ac:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800f4b0:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 800f4b4:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 800f4b8:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 800f4bc:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 800f4c0:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800f4c4:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 800f4c8:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
 800f4cc:	b350      	cbz	r0, 800f524 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28c>
 800f4ce:	682b      	ldr	r3, [r5, #0]
 800f4d0:	4628      	mov	r0, r5
 800f4d2:	695b      	ldr	r3, [r3, #20]
 800f4d4:	4798      	blx	r3
 800f4d6:	4607      	mov	r7, r0
 800f4d8:	b320      	cbz	r0, 800f524 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28c>
 800f4da:	980a      	ldr	r0, [sp, #40]	; 0x28
 800f4dc:	6803      	ldr	r3, [r0, #0]
 800f4de:	4639      	mov	r1, r7
 800f4e0:	68db      	ldr	r3, [r3, #12]
 800f4e2:	4798      	blx	r3
 800f4e4:	4606      	mov	r6, r0
 800f4e6:	b1e8      	cbz	r0, 800f524 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28c>
 800f4e8:	7b43      	ldrb	r3, [r0, #13]
 800f4ea:	7a82      	ldrb	r2, [r0, #10]
 800f4ec:	005b      	lsls	r3, r3, #1
 800f4ee:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800f4f2:	4313      	orrs	r3, r2
 800f4f4:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 800f4f8:	f89d 3025 	ldrb.w	r3, [sp, #37]	; 0x25
 800f4fc:	2b04      	cmp	r3, #4
 800f4fe:	d111      	bne.n	800f524 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28c>
 800f500:	980a      	ldr	r0, [sp, #40]	; 0x28
 800f502:	6803      	ldr	r3, [r0, #0]
 800f504:	4632      	mov	r2, r6
 800f506:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800f508:	4639      	mov	r1, r7
 800f50a:	4798      	blx	r3
 800f50c:	7b73      	ldrb	r3, [r6, #13]
 800f50e:	005b      	lsls	r3, r3, #1
 800f510:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800f514:	7ab3      	ldrb	r3, [r6, #10]
 800f516:	4313      	orrs	r3, r2
 800f518:	4418      	add	r0, r3
 800f51a:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800f51e:	4418      	add	r0, r3
 800f520:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
 800f524:	f9bd a008 	ldrsh.w	sl, [sp, #8]
 800f528:	2600      	movs	r6, #0
 800f52a:	ea4f 0b4a 	mov.w	fp, sl, lsl #1
 800f52e:	4637      	mov	r7, r6
 800f530:	45c3      	cmp	fp, r8
 800f532:	bfd4      	ite	le
 800f534:	2100      	movle	r1, #0
 800f536:	2101      	movgt	r1, #1
 800f538:	a807      	add	r0, sp, #28
 800f53a:	f002 faf0 	bl	8011b1e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800f53e:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 800f542:	429f      	cmp	r7, r3
 800f544:	bfb8      	it	lt
 800f546:	b21f      	sxthlt	r7, r3
 800f548:	9b02      	ldr	r3, [sp, #8]
 800f54a:	eba8 0803 	sub.w	r8, r8, r3
 800f54e:	f8bd 301c 	ldrh.w	r3, [sp, #28]
 800f552:	3601      	adds	r6, #1
 800f554:	b2b6      	uxth	r6, r6
 800f556:	fa0f f888 	sxth.w	r8, r8
 800f55a:	2b00      	cmp	r3, #0
 800f55c:	f43f af0c 	beq.w	800f378 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xe0>
 800f560:	45c2      	cmp	sl, r8
 800f562:	dbe5      	blt.n	800f530 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x298>
 800f564:	e708      	b.n	800f378 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xe0>
 800f566:	1bf6      	subs	r6, r6, r7
 800f568:	2702      	movs	r7, #2
 800f56a:	fb96 f6f7 	sdiv	r6, r6, r7
 800f56e:	b236      	sxth	r6, r6
 800f570:	e72e      	b.n	800f3d0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x138>
 800f572:	4413      	add	r3, r2
 800f574:	1af6      	subs	r6, r6, r3
 800f576:	e7fa      	b.n	800f56e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2d6>
 800f578:	8925      	ldrh	r5, [r4, #8]
 800f57a:	1aad      	subs	r5, r5, r2
 800f57c:	1aed      	subs	r5, r5, r3
 800f57e:	b22f      	sxth	r7, r5
 800f580:	8965      	ldrh	r5, [r4, #10]
 800f582:	eba5 0508 	sub.w	r5, r5, r8
 800f586:	b22d      	sxth	r5, r5
 800f588:	e73e      	b.n	800f408 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x170>
 800f58a:	bf00      	nop
 800f58c:	200179a8 	.word	0x200179a8
 800f590:	200179ac 	.word	0x200179ac
 800f594:	200179a4 	.word	0x200179a4
 800f598:	200179b0 	.word	0x200179b0
 800f59c:	8965      	ldrh	r5, [r4, #10]
 800f59e:	1aad      	subs	r5, r5, r2
 800f5a0:	1aed      	subs	r5, r5, r3
 800f5a2:	4633      	mov	r3, r6
 800f5a4:	b22d      	sxth	r5, r5
 800f5a6:	4646      	mov	r6, r8
 800f5a8:	2700      	movs	r7, #0
 800f5aa:	4698      	mov	r8, r3
 800f5ac:	e72c      	b.n	800f408 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x170>
 800f5ae:	2500      	movs	r5, #0
 800f5b0:	e72a      	b.n	800f408 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x170>
 800f5b2:	bf00      	nop

0800f5b4 <_ZN8touchgfx8TextAreaD0Ev>:
 800f5b4:	b510      	push	{r4, lr}
 800f5b6:	2148      	movs	r1, #72	; 0x48
 800f5b8:	4604      	mov	r4, r0
 800f5ba:	f012 fb45 	bl	8021c48 <_ZdlPvj>
 800f5be:	4620      	mov	r0, r4
 800f5c0:	bd10      	pop	{r4, pc}
	...

0800f5c4 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 800f5c4:	b513      	push	{r0, r1, r4, lr}
 800f5c6:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 800f5ca:	4604      	mov	r4, r0
 800f5cc:	b1fb      	cbz	r3, 800f60e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800f5ce:	4b16      	ldr	r3, [pc, #88]	; (800f628 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 800f5d0:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800f5d2:	881b      	ldrh	r3, [r3, #0]
 800f5d4:	428b      	cmp	r3, r1
 800f5d6:	d91a      	bls.n	800f60e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800f5d8:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800f5dc:	2b00      	cmp	r3, #0
 800f5de:	dd16      	ble.n	800f60e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800f5e0:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800f5e4:	2b00      	cmp	r3, #0
 800f5e6:	dd12      	ble.n	800f60e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800f5e8:	4b10      	ldr	r3, [pc, #64]	; (800f62c <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 800f5ea:	6818      	ldr	r0, [r3, #0]
 800f5ec:	f7f7 fbde 	bl	8006dac <_ZNK8touchgfx5Texts7getTextEt>
 800f5f0:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 800f5f4:	6822      	ldr	r2, [r4, #0]
 800f5f6:	2b00      	cmp	r3, #0
 800f5f8:	db06      	blt.n	800f608 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 800f5fa:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 800f5fe:	2b00      	cmp	r3, #0
 800f600:	db02      	blt.n	800f608 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 800f602:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800f604:	4298      	cmp	r0, r3
 800f606:	d004      	beq.n	800f612 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 800f608:	6953      	ldr	r3, [r2, #20]
 800f60a:	4620      	mov	r0, r4
 800f60c:	4798      	blx	r3
 800f60e:	b002      	add	sp, #8
 800f610:	bd10      	pop	{r4, pc}
 800f612:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 800f616:	c903      	ldmia	r1, {r0, r1}
 800f618:	466b      	mov	r3, sp
 800f61a:	e883 0003 	stmia.w	r3, {r0, r1}
 800f61e:	6912      	ldr	r2, [r2, #16]
 800f620:	4619      	mov	r1, r3
 800f622:	4620      	mov	r0, r4
 800f624:	4790      	blx	r2
 800f626:	e7f2      	b.n	800f60e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800f628:	200179a8 	.word	0x200179a8
 800f62c:	200179b0 	.word	0x200179b0

0800f630 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 800f630:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f634:	4b44      	ldr	r3, [pc, #272]	; (800f748 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 800f636:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800f638:	881b      	ldrh	r3, [r3, #0]
 800f63a:	4293      	cmp	r3, r2
 800f63c:	b08e      	sub	sp, #56	; 0x38
 800f63e:	4604      	mov	r4, r0
 800f640:	d97e      	bls.n	800f740 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800f642:	6808      	ldr	r0, [r1, #0]
 800f644:	4d41      	ldr	r5, [pc, #260]	; (800f74c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 800f646:	6849      	ldr	r1, [r1, #4]
 800f648:	ab05      	add	r3, sp, #20
 800f64a:	c303      	stmia	r3!, {r0, r1}
 800f64c:	4611      	mov	r1, r2
 800f64e:	6828      	ldr	r0, [r5, #0]
 800f650:	f7f7 fbac 	bl	8006dac <_ZNK8touchgfx5Texts7getTextEt>
 800f654:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 800f658:	2b00      	cmp	r3, #0
 800f65a:	db11      	blt.n	800f680 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800f65c:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 800f660:	2b00      	cmp	r3, #0
 800f662:	db0d      	blt.n	800f680 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800f664:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800f666:	4298      	cmp	r0, r3
 800f668:	d10a      	bne.n	800f680 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800f66a:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 800f66e:	e892 0003 	ldmia.w	r2, {r0, r1}
 800f672:	ab09      	add	r3, sp, #36	; 0x24
 800f674:	e883 0003 	stmia.w	r3, {r0, r1}
 800f678:	4619      	mov	r1, r3
 800f67a:	a805      	add	r0, sp, #20
 800f67c:	f7fd f83e 	bl	800c6fc <_ZN8touchgfx4RectaNERKS0_>
 800f680:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800f684:	2b00      	cmp	r3, #0
 800f686:	dd5b      	ble.n	800f740 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800f688:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 800f68c:	2b00      	cmp	r3, #0
 800f68e:	dd57      	ble.n	800f740 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800f690:	4f2f      	ldr	r7, [pc, #188]	; (800f750 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 800f692:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800f694:	683b      	ldr	r3, [r7, #0]
 800f696:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800f69a:	4b2e      	ldr	r3, [pc, #184]	; (800f754 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 800f69c:	681b      	ldr	r3, [r3, #0]
 800f69e:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 800f6a2:	2e00      	cmp	r6, #0
 800f6a4:	d04c      	beq.n	800f740 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800f6a6:	6823      	ldr	r3, [r4, #0]
 800f6a8:	f894 8036 	ldrb.w	r8, [r4, #54]	; 0x36
 800f6ac:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800f6ae:	4620      	mov	r0, r4
 800f6b0:	4798      	blx	r3
 800f6b2:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800f6b4:	683b      	ldr	r3, [r7, #0]
 800f6b6:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	; 0x34
 800f6ba:	f894 e038 	ldrb.w	lr, [r4, #56]	; 0x38
 800f6be:	f894 7037 	ldrb.w	r7, [r4, #55]	; 0x37
 800f6c2:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800f6c4:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800f6c8:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
 800f6cc:	785b      	ldrb	r3, [r3, #1]
 800f6ce:	9609      	str	r6, [sp, #36]	; 0x24
 800f6d0:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800f6d4:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800f6d8:	4b1f      	ldr	r3, [pc, #124]	; (800f758 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 800f6da:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 800f6de:	681b      	ldr	r3, [r3, #0]
 800f6e0:	f88d e02a 	strb.w	lr, [sp, #42]	; 0x2a
 800f6e4:	910b      	str	r1, [sp, #44]	; 0x2c
 800f6e6:	f8ad c030 	strh.w	ip, [sp, #48]	; 0x30
 800f6ea:	f88d 8032 	strb.w	r8, [sp, #50]	; 0x32
 800f6ee:	f88d 7033 	strb.w	r7, [sp, #51]	; 0x33
 800f6f2:	f88d 2034 	strb.w	r2, [sp, #52]	; 0x34
 800f6f6:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800f6fa:	b10a      	cbz	r2, 800f700 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 800f6fc:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 800f6fe:	b906      	cbnz	r6, 800f702 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 800f700:	689e      	ldr	r6, [r3, #8]
 800f702:	af07      	add	r7, sp, #28
 800f704:	4621      	mov	r1, r4
 800f706:	4638      	mov	r0, r7
 800f708:	f003 ffb4 	bl	8013674 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f70c:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800f70e:	6828      	ldr	r0, [r5, #0]
 800f710:	f7f7 fb4c 	bl	8006dac <_ZNK8touchgfx5Texts7getTextEt>
 800f714:	6823      	ldr	r3, [r4, #0]
 800f716:	4605      	mov	r5, r0
 800f718:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800f71a:	4620      	mov	r0, r4
 800f71c:	4798      	blx	r3
 800f71e:	6823      	ldr	r3, [r4, #0]
 800f720:	4680      	mov	r8, r0
 800f722:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800f726:	4620      	mov	r0, r4
 800f728:	4798      	blx	r3
 800f72a:	e9cd 8002 	strd	r8, r0, [sp, #8]
 800f72e:	ab09      	add	r3, sp, #36	; 0x24
 800f730:	9300      	str	r3, [sp, #0]
 800f732:	9501      	str	r5, [sp, #4]
 800f734:	ab05      	add	r3, sp, #20
 800f736:	e897 0006 	ldmia.w	r7, {r1, r2}
 800f73a:	4630      	mov	r0, r6
 800f73c:	f7f7 fae8 	bl	8006d10 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800f740:	b00e      	add	sp, #56	; 0x38
 800f742:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f746:	bf00      	nop
 800f748:	200179a8 	.word	0x200179a8
 800f74c:	200179b0 	.word	0x200179b0
 800f750:	200179a4 	.word	0x200179a4
 800f754:	200179ac 	.word	0x200179ac
 800f758:	2001794c 	.word	0x2001794c

0800f75c <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 800f75c:	b570      	push	{r4, r5, r6, lr}
 800f75e:	6803      	ldr	r3, [r0, #0]
 800f760:	4604      	mov	r4, r0
 800f762:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800f764:	4615      	mov	r5, r2
 800f766:	4798      	blx	r3
 800f768:	6823      	ldr	r3, [r4, #0]
 800f76a:	4629      	mov	r1, r5
 800f76c:	4620      	mov	r0, r4
 800f76e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800f770:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f774:	4718      	bx	r3
	...

0800f778 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 800f778:	b538      	push	{r3, r4, r5, lr}
 800f77a:	4b0e      	ldr	r3, [pc, #56]	; (800f7b4 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 800f77c:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800f77e:	881b      	ldrh	r3, [r3, #0]
 800f780:	429a      	cmp	r2, r3
 800f782:	4604      	mov	r4, r0
 800f784:	d214      	bcs.n	800f7b0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 800f786:	6803      	ldr	r3, [r0, #0]
 800f788:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800f78a:	4798      	blx	r3
 800f78c:	6823      	ldr	r3, [r4, #0]
 800f78e:	4605      	mov	r5, r0
 800f790:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800f792:	4620      	mov	r0, r4
 800f794:	4798      	blx	r3
 800f796:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800f79a:	b22d      	sxth	r5, r5
 800f79c:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800f7a0:	4601      	mov	r1, r0
 800f7a2:	bf06      	itte	eq
 800f7a4:	4602      	moveq	r2, r0
 800f7a6:	4629      	moveq	r1, r5
 800f7a8:	462a      	movne	r2, r5
 800f7aa:	4620      	mov	r0, r4
 800f7ac:	f7ff ffd6 	bl	800f75c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800f7b0:	bd38      	pop	{r3, r4, r5, pc}
 800f7b2:	bf00      	nop
 800f7b4:	200179a8 	.word	0x200179a8

0800f7b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 800f7b8:	b530      	push	{r4, r5, lr}
 800f7ba:	888b      	ldrh	r3, [r1, #4]
 800f7bc:	8583      	strh	r3, [r0, #44]	; 0x2c
 800f7be:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800f7c2:	b085      	sub	sp, #20
 800f7c4:	4604      	mov	r4, r0
 800f7c6:	b923      	cbnz	r3, 800f7d2 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 800f7c8:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800f7cc:	b90b      	cbnz	r3, 800f7d2 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 800f7ce:	f7ff ffd3 	bl	800f778 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 800f7d2:	6823      	ldr	r3, [r4, #0]
 800f7d4:	466d      	mov	r5, sp
 800f7d6:	4621      	mov	r1, r4
 800f7d8:	4628      	mov	r0, r5
 800f7da:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800f7de:	4798      	blx	r3
 800f7e0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800f7e4:	343c      	adds	r4, #60	; 0x3c
 800f7e6:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 800f7ea:	b005      	add	sp, #20
 800f7ec:	bd30      	pop	{r4, r5, pc}

0800f7ee <_ZNK8touchgfx3Box12getSolidRectEv>:
 800f7ee:	2300      	movs	r3, #0
 800f7f0:	8083      	strh	r3, [r0, #4]
 800f7f2:	80c3      	strh	r3, [r0, #6]
 800f7f4:	8003      	strh	r3, [r0, #0]
 800f7f6:	8043      	strh	r3, [r0, #2]
 800f7f8:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 800f7fc:	2bff      	cmp	r3, #255	; 0xff
 800f7fe:	bf01      	itttt	eq
 800f800:	890b      	ldrheq	r3, [r1, #8]
 800f802:	8083      	strheq	r3, [r0, #4]
 800f804:	894b      	ldrheq	r3, [r1, #10]
 800f806:	80c3      	strheq	r3, [r0, #6]
 800f808:	4770      	bx	lr
	...

0800f80c <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 800f80c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800f80e:	4604      	mov	r4, r0
 800f810:	6808      	ldr	r0, [r1, #0]
 800f812:	6849      	ldr	r1, [r1, #4]
 800f814:	466b      	mov	r3, sp
 800f816:	c303      	stmia	r3!, {r0, r1}
 800f818:	6823      	ldr	r3, [r4, #0]
 800f81a:	4669      	mov	r1, sp
 800f81c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f81e:	4620      	mov	r0, r4
 800f820:	4798      	blx	r3
 800f822:	4b08      	ldr	r3, [pc, #32]	; (800f844 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 800f824:	681b      	ldr	r3, [r3, #0]
 800f826:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800f82a:	b10a      	cbz	r2, 800f830 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 800f82c:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800f82e:	b900      	cbnz	r0, 800f832 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 800f830:	6898      	ldr	r0, [r3, #8]
 800f832:	6803      	ldr	r3, [r0, #0]
 800f834:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800f836:	6a1d      	ldr	r5, [r3, #32]
 800f838:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800f83c:	4669      	mov	r1, sp
 800f83e:	47a8      	blx	r5
 800f840:	b003      	add	sp, #12
 800f842:	bd30      	pop	{r4, r5, pc}
 800f844:	2001794c 	.word	0x2001794c

0800f848 <_ZN8touchgfx3BoxD1Ev>:
 800f848:	4770      	bx	lr

0800f84a <_ZN8touchgfx3BoxD0Ev>:
 800f84a:	b510      	push	{r4, lr}
 800f84c:	212c      	movs	r1, #44	; 0x2c
 800f84e:	4604      	mov	r4, r0
 800f850:	f012 f9fa 	bl	8021c48 <_ZdlPvj>
 800f854:	4620      	mov	r0, r4
 800f856:	bd10      	pop	{r4, pc}

0800f858 <_ZNK8touchgfx3Box17invalidateContentEv>:
 800f858:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
 800f85c:	b12a      	cbz	r2, 800f86a <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800f85e:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800f862:	b112      	cbz	r2, 800f86a <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800f864:	6803      	ldr	r3, [r0, #0]
 800f866:	695b      	ldr	r3, [r3, #20]
 800f868:	4718      	bx	r3
 800f86a:	4770      	bx	lr

0800f86c <_ZN8touchgfx6ButtonD1Ev>:
 800f86c:	4770      	bx	lr

0800f86e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 800f86e:	b570      	push	{r4, r5, r6, lr}
 800f870:	880b      	ldrh	r3, [r1, #0]
 800f872:	85c3      	strh	r3, [r0, #46]	; 0x2e
 800f874:	4605      	mov	r5, r0
 800f876:	8813      	ldrh	r3, [r2, #0]
 800f878:	f825 3f30 	strh.w	r3, [r5, #48]!
 800f87c:	4604      	mov	r4, r0
 800f87e:	4628      	mov	r0, r5
 800f880:	f006 f8f6 	bl	8015a70 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800f884:	4606      	mov	r6, r0
 800f886:	4628      	mov	r0, r5
 800f888:	f006 f926 	bl	8015ad8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800f88c:	6823      	ldr	r3, [r4, #0]
 800f88e:	4605      	mov	r5, r0
 800f890:	4631      	mov	r1, r6
 800f892:	4620      	mov	r0, r4
 800f894:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800f896:	4798      	blx	r3
 800f898:	6823      	ldr	r3, [r4, #0]
 800f89a:	4629      	mov	r1, r5
 800f89c:	4620      	mov	r0, r4
 800f89e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800f8a0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f8a4:	4718      	bx	r3

0800f8a6 <_ZN8touchgfx6ButtonD0Ev>:
 800f8a6:	b510      	push	{r4, lr}
 800f8a8:	2134      	movs	r1, #52	; 0x34
 800f8aa:	4604      	mov	r4, r0
 800f8ac:	f012 f9cc 	bl	8021c48 <_ZdlPvj>
 800f8b0:	4620      	mov	r0, r4
 800f8b2:	bd10      	pop	{r4, pc}

0800f8b4 <_ZNK8touchgfx6Button12getSolidRectEv>:
 800f8b4:	b510      	push	{r4, lr}
 800f8b6:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 800f8ba:	2bff      	cmp	r3, #255	; 0xff
 800f8bc:	4604      	mov	r4, r0
 800f8be:	d006      	beq.n	800f8ce <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 800f8c0:	2300      	movs	r3, #0
 800f8c2:	8003      	strh	r3, [r0, #0]
 800f8c4:	8043      	strh	r3, [r0, #2]
 800f8c6:	8083      	strh	r3, [r0, #4]
 800f8c8:	80c3      	strh	r3, [r0, #6]
 800f8ca:	4620      	mov	r0, r4
 800f8cc:	bd10      	pop	{r4, pc}
 800f8ce:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 800f8d2:	b11b      	cbz	r3, 800f8dc <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 800f8d4:	3130      	adds	r1, #48	; 0x30
 800f8d6:	f006 f933 	bl	8015b40 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800f8da:	e7f6      	b.n	800f8ca <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 800f8dc:	312e      	adds	r1, #46	; 0x2e
 800f8de:	e7fa      	b.n	800f8d6 <_ZNK8touchgfx6Button12getSolidRectEv+0x22>

0800f8e0 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 800f8e0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f8e4:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800f8e8:	b08a      	sub	sp, #40	; 0x28
 800f8ea:	4604      	mov	r4, r0
 800f8ec:	4688      	mov	r8, r1
 800f8ee:	2b00      	cmp	r3, #0
 800f8f0:	d066      	beq.n	800f9c0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 800f8f2:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800f8f4:	f8ad 3014 	strh.w	r3, [sp, #20]
 800f8f8:	a805      	add	r0, sp, #20
 800f8fa:	f006 f8b9 	bl	8015a70 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800f8fe:	4607      	mov	r7, r0
 800f900:	a805      	add	r0, sp, #20
 800f902:	f006 f8e9 	bl	8015ad8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800f906:	f9b8 6000 	ldrsh.w	r6, [r8]
 800f90a:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 800f90e:	4432      	add	r2, r6
 800f910:	b292      	uxth	r2, r2
 800f912:	2300      	movs	r3, #0
 800f914:	fa0f fc82 	sxth.w	ip, r2
 800f918:	459c      	cmp	ip, r3
 800f91a:	9306      	str	r3, [sp, #24]
 800f91c:	dd52      	ble.n	800f9c4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800f91e:	42b7      	cmp	r7, r6
 800f920:	dd50      	ble.n	800f9c4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800f922:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 800f926:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 800f92a:	442b      	add	r3, r5
 800f92c:	b29b      	uxth	r3, r3
 800f92e:	b219      	sxth	r1, r3
 800f930:	2900      	cmp	r1, #0
 800f932:	dd47      	ble.n	800f9c4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800f934:	42a8      	cmp	r0, r5
 800f936:	dd45      	ble.n	800f9c4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800f938:	4567      	cmp	r7, ip
 800f93a:	bfb8      	it	lt
 800f93c:	b2ba      	uxthlt	r2, r7
 800f93e:	4288      	cmp	r0, r1
 800f940:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 800f944:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 800f948:	bfb8      	it	lt
 800f94a:	b283      	uxthlt	r3, r0
 800f94c:	1b92      	subs	r2, r2, r6
 800f94e:	1b5b      	subs	r3, r3, r5
 800f950:	f8ad 201c 	strh.w	r2, [sp, #28]
 800f954:	f8ad 301e 	strh.w	r3, [sp, #30]
 800f958:	f8ad 6018 	strh.w	r6, [sp, #24]
 800f95c:	f8ad 501a 	strh.w	r5, [sp, #26]
 800f960:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800f964:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800f968:	429a      	cmp	r2, r3
 800f96a:	d026      	beq.n	800f9ba <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800f96c:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800f970:	2b00      	cmp	r3, #0
 800f972:	dd22      	ble.n	800f9ba <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800f974:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800f978:	2b00      	cmp	r3, #0
 800f97a:	dd1e      	ble.n	800f9ba <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800f97c:	2300      	movs	r3, #0
 800f97e:	e9cd 3308 	strd	r3, r3, [sp, #32]
 800f982:	6823      	ldr	r3, [r4, #0]
 800f984:	a908      	add	r1, sp, #32
 800f986:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f988:	4620      	mov	r0, r4
 800f98a:	4798      	blx	r3
 800f98c:	4b0f      	ldr	r3, [pc, #60]	; (800f9cc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 800f98e:	681b      	ldr	r3, [r3, #0]
 800f990:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800f994:	b10a      	cbz	r2, 800f99a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 800f996:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800f998:	b900      	cbnz	r0, 800f99c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 800f99a:	6898      	ldr	r0, [r3, #8]
 800f99c:	6801      	ldr	r1, [r0, #0]
 800f99e:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 800f9a2:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 800f9a6:	2501      	movs	r5, #1
 800f9a8:	9502      	str	r5, [sp, #8]
 800f9aa:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 800f9ae:	9401      	str	r4, [sp, #4]
 800f9b0:	ac06      	add	r4, sp, #24
 800f9b2:	9400      	str	r4, [sp, #0]
 800f9b4:	688c      	ldr	r4, [r1, #8]
 800f9b6:	a905      	add	r1, sp, #20
 800f9b8:	47a0      	blx	r4
 800f9ba:	b00a      	add	sp, #40	; 0x28
 800f9bc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f9c0:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800f9c2:	e797      	b.n	800f8f4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 800f9c4:	2300      	movs	r3, #0
 800f9c6:	9307      	str	r3, [sp, #28]
 800f9c8:	e7ca      	b.n	800f960 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 800f9ca:	bf00      	nop
 800f9cc:	2001794c 	.word	0x2001794c

0800f9d0 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 800f9d0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f9d4:	4b2f      	ldr	r3, [pc, #188]	; (800fa94 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 800f9d6:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800f9d8:	881b      	ldrh	r3, [r3, #0]
 800f9da:	4293      	cmp	r3, r2
 800f9dc:	b08d      	sub	sp, #52	; 0x34
 800f9de:	4604      	mov	r4, r0
 800f9e0:	460f      	mov	r7, r1
 800f9e2:	d954      	bls.n	800fa8e <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 800f9e4:	4b2c      	ldr	r3, [pc, #176]	; (800fa98 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 800f9e6:	6819      	ldr	r1, [r3, #0]
 800f9e8:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 800f9ec:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 800f9f0:	4a2a      	ldr	r2, [pc, #168]	; (800fa9c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 800f9f2:	6812      	ldr	r2, [r2, #0]
 800f9f4:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 800f9f8:	2900      	cmp	r1, #0
 800f9fa:	d048      	beq.n	800fa8e <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 800f9fc:	785a      	ldrb	r2, [r3, #1]
 800f9fe:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 800fa02:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 800fa06:	4b26      	ldr	r3, [pc, #152]	; (800faa0 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 800fa08:	f890 5036 	ldrb.w	r5, [r0, #54]	; 0x36
 800fa0c:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
 800fa10:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
 800fa14:	6b26      	ldr	r6, [r4, #48]	; 0x30
 800fa16:	f890 0037 	ldrb.w	r0, [r0, #55]	; 0x37
 800fa1a:	9107      	str	r1, [sp, #28]
 800fa1c:	f3c2 0801 	ubfx	r8, r2, #0, #2
 800fa20:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800fa24:	f88d 2021 	strb.w	r2, [sp, #33]	; 0x21
 800fa28:	681a      	ldr	r2, [r3, #0]
 800fa2a:	f88d 8020 	strb.w	r8, [sp, #32]
 800fa2e:	f892 3076 	ldrb.w	r3, [r2, #118]	; 0x76
 800fa32:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
 800fa36:	9609      	str	r6, [sp, #36]	; 0x24
 800fa38:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
 800fa3c:	f88d 502a 	strb.w	r5, [sp, #42]	; 0x2a
 800fa40:	f88d 002b 	strb.w	r0, [sp, #43]	; 0x2b
 800fa44:	b10b      	cbz	r3, 800fa4a <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 800fa46:	6cd5      	ldr	r5, [r2, #76]	; 0x4c
 800fa48:	b905      	cbnz	r5, 800fa4c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 800fa4a:	6895      	ldr	r5, [r2, #8]
 800fa4c:	ae05      	add	r6, sp, #20
 800fa4e:	4621      	mov	r1, r4
 800fa50:	4630      	mov	r0, r6
 800fa52:	f003 fe0f 	bl	8013674 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800fa56:	4b13      	ldr	r3, [pc, #76]	; (800faa4 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 800fa58:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800fa5a:	6818      	ldr	r0, [r3, #0]
 800fa5c:	f7f7 f9a6 	bl	8006dac <_ZNK8touchgfx5Texts7getTextEt>
 800fa60:	6823      	ldr	r3, [r4, #0]
 800fa62:	4680      	mov	r8, r0
 800fa64:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800fa66:	4620      	mov	r0, r4
 800fa68:	4798      	blx	r3
 800fa6a:	6823      	ldr	r3, [r4, #0]
 800fa6c:	4681      	mov	r9, r0
 800fa6e:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800fa72:	4620      	mov	r0, r4
 800fa74:	4798      	blx	r3
 800fa76:	e9cd 9002 	strd	r9, r0, [sp, #8]
 800fa7a:	ab07      	add	r3, sp, #28
 800fa7c:	9300      	str	r3, [sp, #0]
 800fa7e:	f8cd 8004 	str.w	r8, [sp, #4]
 800fa82:	463b      	mov	r3, r7
 800fa84:	e896 0006 	ldmia.w	r6, {r1, r2}
 800fa88:	4628      	mov	r0, r5
 800fa8a:	f7f7 f941 	bl	8006d10 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800fa8e:	b00d      	add	sp, #52	; 0x34
 800fa90:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800fa94:	200179a8 	.word	0x200179a8
 800fa98:	200179a4 	.word	0x200179a4
 800fa9c:	200179ac 	.word	0x200179ac
 800faa0:	2001794c 	.word	0x2001794c
 800faa4:	200179b0 	.word	0x200179b0

0800faa8 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
 800faa8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800faac:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 800fab0:	b0a0      	sub	sp, #128	; 0x80
 800fab2:	4604      	mov	r4, r0
 800fab4:	b193      	cbz	r3, 800fadc <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 800fab6:	4b30      	ldr	r3, [pc, #192]	; (800fb78 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xd0>)
 800fab8:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800faba:	881b      	ldrh	r3, [r3, #0]
 800fabc:	428b      	cmp	r3, r1
 800fabe:	d90d      	bls.n	800fadc <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 800fac0:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800fac4:	2b00      	cmp	r3, #0
 800fac6:	dd09      	ble.n	800fadc <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 800fac8:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800facc:	2b00      	cmp	r3, #0
 800face:	dd05      	ble.n	800fadc <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 800fad0:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 800fad4:	b12b      	cbz	r3, 800fae2 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x3a>
 800fad6:	6803      	ldr	r3, [r0, #0]
 800fad8:	695b      	ldr	r3, [r3, #20]
 800fada:	4798      	blx	r3
 800fadc:	b020      	add	sp, #128	; 0x80
 800fade:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800fae2:	4b26      	ldr	r3, [pc, #152]	; (800fb7c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xd4>)
 800fae4:	681b      	ldr	r3, [r3, #0]
 800fae6:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 800faea:	4b25      	ldr	r3, [pc, #148]	; (800fb80 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xd8>)
 800faec:	681b      	ldr	r3, [r3, #0]
 800faee:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800faf2:	4b24      	ldr	r3, [pc, #144]	; (800fb84 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xdc>)
 800faf4:	6818      	ldr	r0, [r3, #0]
 800faf6:	f7f7 f959 	bl	8006dac <_ZNK8touchgfx5Texts7getTextEt>
 800fafa:	4606      	mov	r6, r0
 800fafc:	a807      	add	r0, sp, #28
 800fafe:	f004 fa6e 	bl	8013fde <_ZN8touchgfx12TextProviderC1Ev>
 800fb02:	682b      	ldr	r3, [r5, #0]
 800fb04:	4628      	mov	r0, r5
 800fb06:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800fb08:	4798      	blx	r3
 800fb0a:	682b      	ldr	r3, [r5, #0]
 800fb0c:	4607      	mov	r7, r0
 800fb0e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800fb10:	4628      	mov	r0, r5
 800fb12:	4798      	blx	r3
 800fb14:	6823      	ldr	r3, [r4, #0]
 800fb16:	4605      	mov	r5, r0
 800fb18:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800fb1a:	4620      	mov	r0, r4
 800fb1c:	4798      	blx	r3
 800fb1e:	6823      	ldr	r3, [r4, #0]
 800fb20:	4680      	mov	r8, r0
 800fb22:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800fb26:	4620      	mov	r0, r4
 800fb28:	4798      	blx	r3
 800fb2a:	462b      	mov	r3, r5
 800fb2c:	e9cd 8000 	strd	r8, r0, [sp]
 800fb30:	463a      	mov	r2, r7
 800fb32:	a807      	add	r0, sp, #28
 800fb34:	4631      	mov	r1, r6
 800fb36:	f004 fac2 	bl	80140be <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800fb3a:	a807      	add	r0, sp, #28
 800fb3c:	f004 fe7a 	bl	8014834 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800fb40:	280a      	cmp	r0, #10
 800fb42:	d103      	bne.n	800fb4c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xa4>
 800fb44:	6823      	ldr	r3, [r4, #0]
 800fb46:	4620      	mov	r0, r4
 800fb48:	695b      	ldr	r3, [r3, #20]
 800fb4a:	e7c6      	b.n	800fada <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x32>
 800fb4c:	a807      	add	r0, sp, #28
 800fb4e:	f004 fe71 	bl	8014834 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800fb52:	2800      	cmp	r0, #0
 800fb54:	d1f4      	bne.n	800fb40 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x98>
 800fb56:	ad04      	add	r5, sp, #16
 800fb58:	4621      	mov	r1, r4
 800fb5a:	4628      	mov	r0, r5
 800fb5c:	f7ff fb9c 	bl	800f298 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800fb60:	e895 0003 	ldmia.w	r5, {r0, r1}
 800fb64:	6822      	ldr	r2, [r4, #0]
 800fb66:	ab02      	add	r3, sp, #8
 800fb68:	e883 0003 	stmia.w	r3, {r0, r1}
 800fb6c:	6912      	ldr	r2, [r2, #16]
 800fb6e:	4619      	mov	r1, r3
 800fb70:	4620      	mov	r0, r4
 800fb72:	4790      	blx	r2
 800fb74:	e7b2      	b.n	800fadc <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 800fb76:	bf00      	nop
 800fb78:	200179a8 	.word	0x200179a8
 800fb7c:	200179a4 	.word	0x200179a4
 800fb80:	200179ac 	.word	0x200179ac
 800fb84:	200179b0 	.word	0x200179b0

0800fb88 <_ZN8touchgfx13BoxWithBorderD1Ev>:
 800fb88:	4770      	bx	lr

0800fb8a <_ZN8touchgfx13BoxWithBorderD0Ev>:
 800fb8a:	b510      	push	{r4, lr}
 800fb8c:	2134      	movs	r1, #52	; 0x34
 800fb8e:	4604      	mov	r4, r0
 800fb90:	f012 f85a 	bl	8021c48 <_ZdlPvj>
 800fb94:	4620      	mov	r0, r4
 800fb96:	bd10      	pop	{r4, pc}

0800fb98 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE>:
 800fb98:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800fb9c:	4604      	mov	r4, r0
 800fb9e:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800fba0:	8962      	ldrh	r2, [r4, #10]
 800fba2:	b218      	sxth	r0, r3
 800fba4:	460e      	mov	r6, r1
 800fba6:	005b      	lsls	r3, r3, #1
 800fba8:	8921      	ldrh	r1, [r4, #8]
 800fbaa:	b29b      	uxth	r3, r3
 800fbac:	1ac9      	subs	r1, r1, r3
 800fbae:	b08e      	sub	sp, #56	; 0x38
 800fbb0:	b209      	sxth	r1, r1
 800fbb2:	1ad3      	subs	r3, r2, r3
 800fbb4:	b21b      	sxth	r3, r3
 800fbb6:	2900      	cmp	r1, #0
 800fbb8:	f8ad 0000 	strh.w	r0, [sp]
 800fbbc:	f8ad 0002 	strh.w	r0, [sp, #2]
 800fbc0:	f8ad 1004 	strh.w	r1, [sp, #4]
 800fbc4:	f8ad 3006 	strh.w	r3, [sp, #6]
 800fbc8:	dd5e      	ble.n	800fc88 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 800fbca:	2b00      	cmp	r3, #0
 800fbcc:	dd5c      	ble.n	800fc88 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 800fbce:	6830      	ldr	r0, [r6, #0]
 800fbd0:	6871      	ldr	r1, [r6, #4]
 800fbd2:	ab02      	add	r3, sp, #8
 800fbd4:	c303      	stmia	r3!, {r0, r1}
 800fbd6:	4669      	mov	r1, sp
 800fbd8:	a802      	add	r0, sp, #8
 800fbda:	f7fc fd8f 	bl	800c6fc <_ZN8touchgfx4RectaNERKS0_>
 800fbde:	4620      	mov	r0, r4
 800fbe0:	a902      	add	r1, sp, #8
 800fbe2:	f7ff fe13 	bl	800f80c <_ZNK8touchgfx3Box4drawERKNS_4RectE>
 800fbe6:	8e20      	ldrh	r0, [r4, #48]	; 0x30
 800fbe8:	2800      	cmp	r0, #0
 800fbea:	d05f      	beq.n	800fcac <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 800fbec:	8963      	ldrh	r3, [r4, #10]
 800fbee:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800fbf2:	f8ad 101c 	strh.w	r1, [sp, #28]
 800fbf6:	1a1f      	subs	r7, r3, r0
 800fbf8:	eba3 0340 	sub.w	r3, r3, r0, lsl #1
 800fbfc:	b202      	sxth	r2, r0
 800fbfe:	2500      	movs	r5, #0
 800fc00:	b21b      	sxth	r3, r3
 800fc02:	f8ad 1024 	strh.w	r1, [sp, #36]	; 0x24
 800fc06:	1a09      	subs	r1, r1, r0
 800fc08:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 800fc0c:	9506      	str	r5, [sp, #24]
 800fc0e:	f8ad 201e 	strh.w	r2, [sp, #30]
 800fc12:	f8ad 5020 	strh.w	r5, [sp, #32]
 800fc16:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 800fc1a:	f8ad 5028 	strh.w	r5, [sp, #40]	; 0x28
 800fc1e:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 800fc22:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800fc26:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 800fc2a:	f8ad 1030 	strh.w	r1, [sp, #48]	; 0x30
 800fc2e:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 800fc32:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 800fc36:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800fc3a:	af04      	add	r7, sp, #16
 800fc3c:	ab06      	add	r3, sp, #24
 800fc3e:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800fc42:	e893 0003 	ldmia.w	r3, {r0, r1}
 800fc46:	e887 0003 	stmia.w	r7, {r0, r1}
 800fc4a:	4631      	mov	r1, r6
 800fc4c:	4638      	mov	r0, r7
 800fc4e:	f7fc fd55 	bl	800c6fc <_ZN8touchgfx4RectaNERKS0_>
 800fc52:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 800fc56:	2b00      	cmp	r3, #0
 800fc58:	dd12      	ble.n	800fc80 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 800fc5a:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800fc5e:	2b00      	cmp	r3, #0
 800fc60:	dd0e      	ble.n	800fc80 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 800fc62:	6823      	ldr	r3, [r4, #0]
 800fc64:	4639      	mov	r1, r7
 800fc66:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800fc68:	4620      	mov	r0, r4
 800fc6a:	4798      	blx	r3
 800fc6c:	f7f2 fbba 	bl	80023e4 <_ZN8touchgfx3HAL3lcdEv>
 800fc70:	6803      	ldr	r3, [r0, #0]
 800fc72:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800fc74:	f8d3 8020 	ldr.w	r8, [r3, #32]
 800fc78:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800fc7c:	4639      	mov	r1, r7
 800fc7e:	47c0      	blx	r8
 800fc80:	3501      	adds	r5, #1
 800fc82:	2d04      	cmp	r5, #4
 800fc84:	d1da      	bne.n	800fc3c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xa4>
 800fc86:	e011      	b.n	800fcac <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 800fc88:	6830      	ldr	r0, [r6, #0]
 800fc8a:	6871      	ldr	r1, [r6, #4]
 800fc8c:	ab06      	add	r3, sp, #24
 800fc8e:	c303      	stmia	r3!, {r0, r1}
 800fc90:	6823      	ldr	r3, [r4, #0]
 800fc92:	a906      	add	r1, sp, #24
 800fc94:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800fc96:	4620      	mov	r0, r4
 800fc98:	4798      	blx	r3
 800fc9a:	f7f2 fba3 	bl	80023e4 <_ZN8touchgfx3HAL3lcdEv>
 800fc9e:	6803      	ldr	r3, [r0, #0]
 800fca0:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800fca2:	6a1d      	ldr	r5, [r3, #32]
 800fca4:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800fca8:	a906      	add	r1, sp, #24
 800fcaa:	47a8      	blx	r5
 800fcac:	b00e      	add	sp, #56	; 0x38
 800fcae:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800fcb2 <_ZN8touchgfx5ImageD1Ev>:
 800fcb2:	4770      	bx	lr

0800fcb4 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 800fcb4:	b570      	push	{r4, r5, r6, lr}
 800fcb6:	880b      	ldrh	r3, [r1, #0]
 800fcb8:	84c3      	strh	r3, [r0, #38]	; 0x26
 800fcba:	4604      	mov	r4, r0
 800fcbc:	4608      	mov	r0, r1
 800fcbe:	460d      	mov	r5, r1
 800fcc0:	f005 fed6 	bl	8015a70 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800fcc4:	4606      	mov	r6, r0
 800fcc6:	4628      	mov	r0, r5
 800fcc8:	f005 ff06 	bl	8015ad8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800fccc:	6823      	ldr	r3, [r4, #0]
 800fcce:	4605      	mov	r5, r0
 800fcd0:	4631      	mov	r1, r6
 800fcd2:	4620      	mov	r0, r4
 800fcd4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800fcd6:	4798      	blx	r3
 800fcd8:	6823      	ldr	r3, [r4, #0]
 800fcda:	4629      	mov	r1, r5
 800fcdc:	4620      	mov	r0, r4
 800fcde:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800fce0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800fce4:	4718      	bx	r3

0800fce6 <_ZN8touchgfx5ImageD0Ev>:
 800fce6:	b510      	push	{r4, lr}
 800fce8:	212c      	movs	r1, #44	; 0x2c
 800fcea:	4604      	mov	r4, r0
 800fcec:	f011 ffac 	bl	8021c48 <_ZdlPvj>
 800fcf0:	4620      	mov	r0, r4
 800fcf2:	bd10      	pop	{r4, pc}

0800fcf4 <_ZNK8touchgfx5Image12getSolidRectEv>:
 800fcf4:	b510      	push	{r4, lr}
 800fcf6:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 800fcfa:	2bff      	cmp	r3, #255	; 0xff
 800fcfc:	4604      	mov	r4, r0
 800fcfe:	d006      	beq.n	800fd0e <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 800fd00:	2300      	movs	r3, #0
 800fd02:	8003      	strh	r3, [r0, #0]
 800fd04:	8043      	strh	r3, [r0, #2]
 800fd06:	8083      	strh	r3, [r0, #4]
 800fd08:	80c3      	strh	r3, [r0, #6]
 800fd0a:	4620      	mov	r0, r4
 800fd0c:	bd10      	pop	{r4, pc}
 800fd0e:	3126      	adds	r1, #38	; 0x26
 800fd10:	f005 ff16 	bl	8015b40 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800fd14:	e7f9      	b.n	800fd0a <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

0800fd16 <_ZNK8touchgfx5Image17invalidateContentEv>:
 800fd16:	f890 2028 	ldrb.w	r2, [r0, #40]	; 0x28
 800fd1a:	b12a      	cbz	r2, 800fd28 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 800fd1c:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800fd20:	b112      	cbz	r2, 800fd28 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 800fd22:	6803      	ldr	r3, [r0, #0]
 800fd24:	695b      	ldr	r3, [r3, #20]
 800fd26:	4718      	bx	r3
 800fd28:	4770      	bx	lr
	...

0800fd2c <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 800fd2c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800fd30:	4604      	mov	r4, r0
 800fd32:	b088      	sub	sp, #32
 800fd34:	f854 3b26 	ldr.w	r3, [r4], #38
 800fd38:	2500      	movs	r5, #0
 800fd3a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800fd3c:	460f      	mov	r7, r1
 800fd3e:	e9cd 5504 	strd	r5, r5, [sp, #16]
 800fd42:	a904      	add	r1, sp, #16
 800fd44:	4606      	mov	r6, r0
 800fd46:	4798      	blx	r3
 800fd48:	4620      	mov	r0, r4
 800fd4a:	f005 fe91 	bl	8015a70 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800fd4e:	4680      	mov	r8, r0
 800fd50:	4620      	mov	r0, r4
 800fd52:	f005 fec1 	bl	8015ad8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800fd56:	9506      	str	r5, [sp, #24]
 800fd58:	ad06      	add	r5, sp, #24
 800fd5a:	f8ad 001e 	strh.w	r0, [sp, #30]
 800fd5e:	4639      	mov	r1, r7
 800fd60:	4628      	mov	r0, r5
 800fd62:	f8ad 801c 	strh.w	r8, [sp, #28]
 800fd66:	f7fc fcc9 	bl	800c6fc <_ZN8touchgfx4RectaNERKS0_>
 800fd6a:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800fd6e:	2b00      	cmp	r3, #0
 800fd70:	dd19      	ble.n	800fda6 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800fd72:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800fd76:	2b00      	cmp	r3, #0
 800fd78:	dd15      	ble.n	800fda6 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800fd7a:	4b0c      	ldr	r3, [pc, #48]	; (800fdac <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 800fd7c:	681b      	ldr	r3, [r3, #0]
 800fd7e:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800fd82:	b10a      	cbz	r2, 800fd88 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 800fd84:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800fd86:	b900      	cbnz	r0, 800fd8a <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 800fd88:	6898      	ldr	r0, [r3, #8]
 800fd8a:	6801      	ldr	r1, [r0, #0]
 800fd8c:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 800fd90:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 800fd94:	2701      	movs	r7, #1
 800fd96:	9702      	str	r7, [sp, #8]
 800fd98:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 800fd9c:	e9cd 5600 	strd	r5, r6, [sp]
 800fda0:	688d      	ldr	r5, [r1, #8]
 800fda2:	4621      	mov	r1, r4
 800fda4:	47a8      	blx	r5
 800fda6:	b008      	add	sp, #32
 800fda8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800fdac:	2001794c 	.word	0x2001794c

0800fdb0 <_ZN8touchgfx15ButtonWithLabelD1Ev>:
 800fdb0:	4770      	bx	lr

0800fdb2 <_ZN8touchgfx15ButtonWithLabelD0Ev>:
 800fdb2:	b510      	push	{r4, lr}
 800fdb4:	2148      	movs	r1, #72	; 0x48
 800fdb6:	4604      	mov	r4, r0
 800fdb8:	f011 ff46 	bl	8021c48 <_ZdlPvj>
 800fdbc:	4620      	mov	r0, r4
 800fdbe:	bd10      	pop	{r4, pc}

0800fdc0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
 800fdc0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800fdc4:	b08d      	sub	sp, #52	; 0x34
 800fdc6:	4604      	mov	r4, r0
 800fdc8:	4688      	mov	r8, r1
 800fdca:	f7ff fd89 	bl	800f8e0 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 800fdce:	4a4d      	ldr	r2, [pc, #308]	; (800ff04 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x144>)
 800fdd0:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 800fdd2:	8812      	ldrh	r2, [r2, #0]
 800fdd4:	429a      	cmp	r2, r3
 800fdd6:	f240 8081 	bls.w	800fedc <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11c>
 800fdda:	4e4b      	ldr	r6, [pc, #300]	; (800ff08 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x148>)
 800fddc:	6832      	ldr	r2, [r6, #0]
 800fdde:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800fde2:	4b4a      	ldr	r3, [pc, #296]	; (800ff0c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x14c>)
 800fde4:	681b      	ldr	r3, [r3, #0]
 800fde6:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 800fdea:	f894 2045 	ldrb.w	r2, [r4, #69]	; 0x45
 800fdee:	2300      	movs	r3, #0
 800fdf0:	e9cd 3303 	strd	r3, r3, [sp, #12]
 800fdf4:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800fdf8:	2b03      	cmp	r3, #3
 800fdfa:	d811      	bhi.n	800fe20 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 800fdfc:	e8df f003 	tbb	[pc, r3]
 800fe00:	71027102 	.word	0x71027102
 800fe04:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800fe08:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800fe0c:	f8ad 1010 	strh.w	r1, [sp, #16]
 800fe10:	1a9b      	subs	r3, r3, r2
 800fe12:	2002      	movs	r0, #2
 800fe14:	f8ad 2012 	strh.w	r2, [sp, #18]
 800fe18:	fb93 f3f0 	sdiv	r3, r3, r0
 800fe1c:	f8ad 300e 	strh.w	r3, [sp, #14]
 800fe20:	ad03      	add	r5, sp, #12
 800fe22:	e895 0003 	ldmia.w	r5, {r0, r1}
 800fe26:	f10d 0914 	add.w	r9, sp, #20
 800fe2a:	e889 0003 	stmia.w	r9, {r0, r1}
 800fe2e:	4641      	mov	r1, r8
 800fe30:	4648      	mov	r0, r9
 800fe32:	f7fc fc63 	bl	800c6fc <_ZN8touchgfx4RectaNERKS0_>
 800fe36:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800fe3a:	2b00      	cmp	r3, #0
 800fe3c:	dd4e      	ble.n	800fedc <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11c>
 800fe3e:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 800fe42:	2b00      	cmp	r3, #0
 800fe44:	dd4a      	ble.n	800fedc <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11c>
 800fe46:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 800fe4a:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800fe4e:	1a9b      	subs	r3, r3, r2
 800fe50:	f8ad 3014 	strh.w	r3, [sp, #20]
 800fe54:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 800fe58:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800fe5c:	1a9b      	subs	r3, r3, r2
 800fe5e:	f8ad 3016 	strh.w	r3, [sp, #22]
 800fe62:	6823      	ldr	r3, [r4, #0]
 800fe64:	4629      	mov	r1, r5
 800fe66:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800fe68:	4620      	mov	r0, r4
 800fe6a:	4798      	blx	r3
 800fe6c:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 800fe70:	2b00      	cmp	r3, #0
 800fe72:	d045      	beq.n	800ff00 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x140>
 800fe74:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800fe76:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 800fe78:	6833      	ldr	r3, [r6, #0]
 800fe7a:	f894 0032 	ldrb.w	r0, [r4, #50]	; 0x32
 800fe7e:	f894 4044 	ldrb.w	r4, [r4, #68]	; 0x44
 800fe82:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 800fe86:	785b      	ldrb	r3, [r3, #1]
 800fe88:	9209      	str	r2, [sp, #36]	; 0x24
 800fe8a:	f3c3 0601 	ubfx	r6, r3, #0, #2
 800fe8e:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800fe92:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 800fe96:	2300      	movs	r3, #0
 800fe98:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800fe9c:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 800fea0:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 800fea4:	4b1a      	ldr	r3, [pc, #104]	; (800ff10 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x150>)
 800fea6:	9707      	str	r7, [sp, #28]
 800fea8:	681b      	ldr	r3, [r3, #0]
 800feaa:	f88d 6020 	strb.w	r6, [sp, #32]
 800feae:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800feb2:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800feb6:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800feba:	b10a      	cbz	r2, 800fec0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x100>
 800febc:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 800febe:	b904      	cbnz	r4, 800fec2 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x102>
 800fec0:	689c      	ldr	r4, [r3, #8]
 800fec2:	4b14      	ldr	r3, [pc, #80]	; (800ff14 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x154>)
 800fec4:	6818      	ldr	r0, [r3, #0]
 800fec6:	f7f6 ff71 	bl	8006dac <_ZNK8touchgfx5Texts7getTextEt>
 800feca:	ab07      	add	r3, sp, #28
 800fecc:	9001      	str	r0, [sp, #4]
 800fece:	9300      	str	r3, [sp, #0]
 800fed0:	e895 0006 	ldmia.w	r5, {r1, r2}
 800fed4:	464b      	mov	r3, r9
 800fed6:	4620      	mov	r0, r4
 800fed8:	f7f6 ff1a 	bl	8006d10 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800fedc:	b00d      	add	sp, #52	; 0x34
 800fede:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800fee2:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800fee6:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 800feea:	f8ad 2010 	strh.w	r2, [sp, #16]
 800feee:	1a9b      	subs	r3, r3, r2
 800fef0:	2002      	movs	r0, #2
 800fef2:	f8ad 1012 	strh.w	r1, [sp, #18]
 800fef6:	fb93 f3f0 	sdiv	r3, r3, r0
 800fefa:	f8ad 300c 	strh.w	r3, [sp, #12]
 800fefe:	e78f      	b.n	800fe20 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 800ff00:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 800ff02:	e7b8      	b.n	800fe76 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xb6>
 800ff04:	200179a8 	.word	0x200179a8
 800ff08:	200179a4 	.word	0x200179a4
 800ff0c:	200179ac 	.word	0x200179ac
 800ff10:	2001794c 	.word	0x2001794c
 800ff14:	200179b0 	.word	0x200179b0

0800ff18 <_ZN8touchgfx15ButtonWithLabelC1Ev>:
 800ff18:	b510      	push	{r4, lr}
 800ff1a:	2101      	movs	r1, #1
 800ff1c:	4c13      	ldr	r4, [pc, #76]	; (800ff6c <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
 800ff1e:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 800ff22:	2200      	movs	r2, #0
 800ff24:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 800ff28:	6004      	str	r4, [r0, #0]
 800ff2a:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800ff2e:	4c10      	ldr	r4, [pc, #64]	; (800ff70 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
 800ff30:	8082      	strh	r2, [r0, #4]
 800ff32:	80c2      	strh	r2, [r0, #6]
 800ff34:	8102      	strh	r2, [r0, #8]
 800ff36:	8142      	strh	r2, [r0, #10]
 800ff38:	8182      	strh	r2, [r0, #12]
 800ff3a:	81c2      	strh	r2, [r0, #14]
 800ff3c:	8202      	strh	r2, [r0, #16]
 800ff3e:	8242      	strh	r2, [r0, #18]
 800ff40:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800ff44:	61c2      	str	r2, [r0, #28]
 800ff46:	8402      	strh	r2, [r0, #32]
 800ff48:	8442      	strh	r2, [r0, #34]	; 0x22
 800ff4a:	6282      	str	r2, [r0, #40]	; 0x28
 800ff4c:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 800ff50:	85c1      	strh	r1, [r0, #46]	; 0x2e
 800ff52:	8601      	strh	r1, [r0, #48]	; 0x30
 800ff54:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 800ff58:	6344      	str	r4, [r0, #52]	; 0x34
 800ff5a:	8701      	strh	r1, [r0, #56]	; 0x38
 800ff5c:	e9c0 220f 	strd	r2, r2, [r0, #60]	; 0x3c
 800ff60:	f880 2044 	strb.w	r2, [r0, #68]	; 0x44
 800ff64:	f880 2045 	strb.w	r2, [r0, #69]	; 0x45
 800ff68:	bd10      	pop	{r4, pc}
 800ff6a:	bf00      	nop
 800ff6c:	080254ec 	.word	0x080254ec
 800ff70:	08023620 	.word	0x08023620

0800ff74 <_ZN8touchgfx7OutlineD1Ev>:
 800ff74:	4770      	bx	lr

0800ff76 <_ZN8touchgfx7OutlineD0Ev>:
 800ff76:	b510      	push	{r4, lr}
 800ff78:	2130      	movs	r1, #48	; 0x30
 800ff7a:	4604      	mov	r4, r0
 800ff7c:	f011 fe64 	bl	8021c48 <_ZdlPvj>
 800ff80:	4620      	mov	r0, r4
 800ff82:	bd10      	pop	{r4, pc}

0800ff84 <_ZN8touchgfx7Outline5resetEv>:
 800ff84:	b510      	push	{r4, lr}
 800ff86:	4604      	mov	r4, r0
 800ff88:	f000 fe8c 	bl	8010ca4 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 800ff8c:	60e0      	str	r0, [r4, #12]
 800ff8e:	f000 fe8f 	bl	8010cb0 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 800ff92:	68e3      	ldr	r3, [r4, #12]
 800ff94:	6123      	str	r3, [r4, #16]
 800ff96:	08c0      	lsrs	r0, r0, #3
 800ff98:	2200      	movs	r2, #0
 800ff9a:	f647 71ff 	movw	r1, #32767	; 0x7fff
 800ff9e:	3801      	subs	r0, #1
 800ffa0:	6060      	str	r0, [r4, #4]
 800ffa2:	60a2      	str	r2, [r4, #8]
 800ffa4:	8019      	strh	r1, [r3, #0]
 800ffa6:	8059      	strh	r1, [r3, #2]
 800ffa8:	809a      	strh	r2, [r3, #4]
 800ffaa:	80da      	strh	r2, [r3, #6]
 800ffac:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800ffae:	f023 0301 	bic.w	r3, r3, #1
 800ffb2:	f043 0302 	orr.w	r3, r3, #2
 800ffb6:	6263      	str	r3, [r4, #36]	; 0x24
 800ffb8:	bd10      	pop	{r4, pc}
	...

0800ffbc <_ZN8touchgfx7OutlineC1Ev>:
 800ffbc:	b510      	push	{r4, lr}
 800ffbe:	4b0a      	ldr	r3, [pc, #40]	; (800ffe8 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
 800ffc0:	6003      	str	r3, [r0, #0]
 800ffc2:	2300      	movs	r3, #0
 800ffc4:	e9c0 3301 	strd	r3, r3, [r0, #4]
 800ffc8:	e9c0 3303 	strd	r3, r3, [r0, #12]
 800ffcc:	e9c0 3305 	strd	r3, r3, [r0, #20]
 800ffd0:	e9c0 3307 	strd	r3, r3, [r0, #28]
 800ffd4:	6243      	str	r3, [r0, #36]	; 0x24
 800ffd6:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 800ffda:	4604      	mov	r4, r0
 800ffdc:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
 800ffe0:	f7ff ffd0 	bl	800ff84 <_ZN8touchgfx7Outline5resetEv>
 800ffe4:	4620      	mov	r0, r4
 800ffe6:	bd10      	pop	{r4, pc}
 800ffe8:	08025560 	.word	0x08025560

0800ffec <_ZN8touchgfx7Outline10renderLineEiiii>:
 800ffec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fff0:	b093      	sub	sp, #76	; 0x4c
 800fff2:	1156      	asrs	r6, r2, #5
 800fff4:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 800fff6:	9305      	str	r3, [sp, #20]
 800fff8:	f004 051f 	and.w	r5, r4, #31
 800fffc:	1153      	asrs	r3, r2, #5
 800fffe:	9504      	str	r5, [sp, #16]
 8010000:	1165      	asrs	r5, r4, #5
 8010002:	9303      	str	r3, [sp, #12]
 8010004:	42ae      	cmp	r6, r5
 8010006:	ea4f 1364 	mov.w	r3, r4, asr #5
 801000a:	9306      	str	r3, [sp, #24]
 801000c:	f002 031f 	and.w	r3, r2, #31
 8010010:	f040 80f8 	bne.w	8010204 <_ZN8touchgfx7Outline10renderLineEiiii+0x218>
 8010014:	9c04      	ldr	r4, [sp, #16]
 8010016:	9a05      	ldr	r2, [sp, #20]
 8010018:	42a3      	cmp	r3, r4
 801001a:	ea4f 1e62 	mov.w	lr, r2, asr #5
 801001e:	6902      	ldr	r2, [r0, #16]
 8010020:	d125      	bne.n	801006e <_ZN8touchgfx7Outline10renderLineEiiii+0x82>
 8010022:	f9b2 3000 	ldrsh.w	r3, [r2]
 8010026:	459e      	cmp	lr, r3
 8010028:	d103      	bne.n	8010032 <_ZN8touchgfx7Outline10renderLineEiiii+0x46>
 801002a:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 801002e:	429e      	cmp	r6, r3
 8010030:	d035      	beq.n	801009e <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8010032:	88d1      	ldrh	r1, [r2, #6]
 8010034:	8893      	ldrh	r3, [r2, #4]
 8010036:	430b      	orrs	r3, r1
 8010038:	d010      	beq.n	801005c <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 801003a:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 801003e:	2b00      	cmp	r3, #0
 8010040:	db0c      	blt.n	801005c <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8010042:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 8010044:	428b      	cmp	r3, r1
 8010046:	da09      	bge.n	801005c <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8010048:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 801004c:	428b      	cmp	r3, r1
 801004e:	bf38      	it	cc
 8010050:	3208      	addcc	r2, #8
 8010052:	f103 0301 	add.w	r3, r3, #1
 8010056:	bf38      	it	cc
 8010058:	6102      	strcc	r2, [r0, #16]
 801005a:	6083      	str	r3, [r0, #8]
 801005c:	6903      	ldr	r3, [r0, #16]
 801005e:	9a03      	ldr	r2, [sp, #12]
 8010060:	f8a3 e000 	strh.w	lr, [r3]
 8010064:	805a      	strh	r2, [r3, #2]
 8010066:	2200      	movs	r2, #0
 8010068:	809a      	strh	r2, [r3, #4]
 801006a:	80da      	strh	r2, [r3, #6]
 801006c:	e017      	b.n	801009e <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 801006e:	9c05      	ldr	r4, [sp, #20]
 8010070:	f8b2 8004 	ldrh.w	r8, [r2, #4]
 8010074:	f8b2 a006 	ldrh.w	sl, [r2, #6]
 8010078:	f004 041f 	and.w	r4, r4, #31
 801007c:	114e      	asrs	r6, r1, #5
 801007e:	9402      	str	r4, [sp, #8]
 8010080:	9c04      	ldr	r4, [sp, #16]
 8010082:	4576      	cmp	r6, lr
 8010084:	f001 0c1f 	and.w	ip, r1, #31
 8010088:	eba4 0403 	sub.w	r4, r4, r3
 801008c:	d10a      	bne.n	80100a4 <_ZN8touchgfx7Outline10renderLineEiiii+0xb8>
 801008e:	9b02      	ldr	r3, [sp, #8]
 8010090:	449c      	add	ip, r3
 8010092:	44a0      	add	r8, r4
 8010094:	fb04 a40c 	mla	r4, r4, ip, sl
 8010098:	f8a2 8004 	strh.w	r8, [r2, #4]
 801009c:	80d4      	strh	r4, [r2, #6]
 801009e:	b013      	add	sp, #76	; 0x4c
 80100a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80100a4:	9d05      	ldr	r5, [sp, #20]
 80100a6:	1a69      	subs	r1, r5, r1
 80100a8:	bf5b      	ittet	pl
 80100aa:	f1cc 0520 	rsbpl	r5, ip, #32
 80100ae:	436c      	mulpl	r4, r5
 80100b0:	2500      	movmi	r5, #0
 80100b2:	2520      	movpl	r5, #32
 80100b4:	bf44      	itt	mi
 80100b6:	fb04 f40c 	mulmi.w	r4, r4, ip
 80100ba:	4249      	negmi	r1, r1
 80100bc:	9501      	str	r5, [sp, #4]
 80100be:	9f01      	ldr	r7, [sp, #4]
 80100c0:	fb94 f5f1 	sdiv	r5, r4, r1
 80100c4:	fb01 4415 	mls	r4, r1, r5, r4
 80100c8:	bf54      	ite	pl
 80100ca:	f04f 0901 	movpl.w	r9, #1
 80100ce:	f04f 39ff 	movmi.w	r9, #4294967295
 80100d2:	2c00      	cmp	r4, #0
 80100d4:	bfb8      	it	lt
 80100d6:	f105 35ff 	addlt.w	r5, r5, #4294967295
 80100da:	44bc      	add	ip, r7
 80100dc:	44a8      	add	r8, r5
 80100de:	fb05 ac0c 	mla	ip, r5, ip, sl
 80100e2:	f8a2 8004 	strh.w	r8, [r2, #4]
 80100e6:	f8a2 c006 	strh.w	ip, [r2, #6]
 80100ea:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80100ee:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 80100f2:	f8bc 2004 	ldrh.w	r2, [ip, #4]
 80100f6:	bfb8      	it	lt
 80100f8:	1864      	addlt	r4, r4, r1
 80100fa:	ea58 0202 	orrs.w	r2, r8, r2
 80100fe:	444e      	add	r6, r9
 8010100:	d011      	beq.n	8010126 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 8010102:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 8010106:	f1b8 0f00 	cmp.w	r8, #0
 801010a:	db0c      	blt.n	8010126 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 801010c:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 801010e:	4590      	cmp	r8, r2
 8010110:	da09      	bge.n	8010126 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 8010112:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
 8010116:	4590      	cmp	r8, r2
 8010118:	bf3c      	itt	cc
 801011a:	f10c 0208 	addcc.w	r2, ip, #8
 801011e:	6102      	strcc	r2, [r0, #16]
 8010120:	f108 0201 	add.w	r2, r8, #1
 8010124:	6082      	str	r2, [r0, #8]
 8010126:	f8d0 c010 	ldr.w	ip, [r0, #16]
 801012a:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 801012e:	f8ac 6000 	strh.w	r6, [ip]
 8010132:	2700      	movs	r7, #0
 8010134:	45b6      	cmp	lr, r6
 8010136:	f8ac 2002 	strh.w	r2, [ip, #2]
 801013a:	f8ac 7004 	strh.w	r7, [ip, #4]
 801013e:	f8ac 7006 	strh.w	r7, [ip, #6]
 8010142:	442b      	add	r3, r5
 8010144:	d04d      	beq.n	80101e2 <_ZN8touchgfx7Outline10renderLineEiiii+0x1f6>
 8010146:	9f04      	ldr	r7, [sp, #16]
 8010148:	1aff      	subs	r7, r7, r3
 801014a:	443d      	add	r5, r7
 801014c:	016d      	lsls	r5, r5, #5
 801014e:	fb95 f8f1 	sdiv	r8, r5, r1
 8010152:	fb01 5518 	mls	r5, r1, r8, r5
 8010156:	2d00      	cmp	r5, #0
 8010158:	bfb8      	it	lt
 801015a:	f108 38ff 	addlt.w	r8, r8, #4294967295
 801015e:	f108 0701 	add.w	r7, r8, #1
 8010162:	bfb8      	it	lt
 8010164:	186d      	addlt	r5, r5, r1
 8010166:	1a64      	subs	r4, r4, r1
 8010168:	9703      	str	r7, [sp, #12]
 801016a:	f04f 0a00 	mov.w	sl, #0
 801016e:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8010172:	1964      	adds	r4, r4, r5
 8010174:	bf58      	it	pl
 8010176:	9f03      	ldrpl	r7, [sp, #12]
 8010178:	f8bc b004 	ldrh.w	fp, [ip, #4]
 801017c:	bf48      	it	mi
 801017e:	4647      	movmi	r7, r8
 8010180:	44bb      	add	fp, r7
 8010182:	f8ac b004 	strh.w	fp, [ip, #4]
 8010186:	f8bc b006 	ldrh.w	fp, [ip, #6]
 801018a:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 801018e:	f8ac b006 	strh.w	fp, [ip, #6]
 8010192:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8010196:	443b      	add	r3, r7
 8010198:	f8bc b006 	ldrh.w	fp, [ip, #6]
 801019c:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 80101a0:	bf58      	it	pl
 80101a2:	1a64      	subpl	r4, r4, r1
 80101a4:	ea5b 0707 	orrs.w	r7, fp, r7
 80101a8:	444e      	add	r6, r9
 80101aa:	d011      	beq.n	80101d0 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 80101ac:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 80101b0:	f1bb 0f00 	cmp.w	fp, #0
 80101b4:	db0c      	blt.n	80101d0 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 80101b6:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 80101b8:	45bb      	cmp	fp, r7
 80101ba:	da09      	bge.n	80101d0 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 80101bc:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 80101c0:	45bb      	cmp	fp, r7
 80101c2:	bf3c      	itt	cc
 80101c4:	f10c 0708 	addcc.w	r7, ip, #8
 80101c8:	6107      	strcc	r7, [r0, #16]
 80101ca:	f10b 0701 	add.w	r7, fp, #1
 80101ce:	6087      	str	r7, [r0, #8]
 80101d0:	6907      	ldr	r7, [r0, #16]
 80101d2:	45b6      	cmp	lr, r6
 80101d4:	803e      	strh	r6, [r7, #0]
 80101d6:	807a      	strh	r2, [r7, #2]
 80101d8:	f8a7 a004 	strh.w	sl, [r7, #4]
 80101dc:	f8a7 a006 	strh.w	sl, [r7, #6]
 80101e0:	d1c5      	bne.n	801016e <_ZN8touchgfx7Outline10renderLineEiiii+0x182>
 80101e2:	9a04      	ldr	r2, [sp, #16]
 80101e4:	1ad3      	subs	r3, r2, r3
 80101e6:	6902      	ldr	r2, [r0, #16]
 80101e8:	8891      	ldrh	r1, [r2, #4]
 80101ea:	88d6      	ldrh	r6, [r2, #6]
 80101ec:	4419      	add	r1, r3
 80101ee:	8091      	strh	r1, [r2, #4]
 80101f0:	9902      	ldr	r1, [sp, #8]
 80101f2:	f101 0c20 	add.w	ip, r1, #32
 80101f6:	9901      	ldr	r1, [sp, #4]
 80101f8:	ebac 0c01 	sub.w	ip, ip, r1
 80101fc:	fb03 630c 	mla	r3, r3, ip, r6
 8010200:	80d3      	strh	r3, [r2, #6]
 8010202:	e74c      	b.n	801009e <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8010204:	9d05      	ldr	r5, [sp, #20]
 8010206:	1aa2      	subs	r2, r4, r2
 8010208:	eba5 0501 	sub.w	r5, r5, r1
 801020c:	9508      	str	r5, [sp, #32]
 801020e:	9202      	str	r2, [sp, #8]
 8010210:	f140 8128 	bpl.w	8010464 <_ZN8touchgfx7Outline10renderLineEiiii+0x478>
 8010214:	9a03      	ldr	r2, [sp, #12]
 8010216:	2a00      	cmp	r2, #0
 8010218:	f6ff af41 	blt.w	801009e <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 801021c:	9a02      	ldr	r2, [sp, #8]
 801021e:	4252      	negs	r2, r2
 8010220:	9202      	str	r2, [sp, #8]
 8010222:	9a06      	ldr	r2, [sp, #24]
 8010224:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
 8010228:	f04f 34ff 	mov.w	r4, #4294967295
 801022c:	9206      	str	r2, [sp, #24]
 801022e:	462a      	mov	r2, r5
 8010230:	940b      	str	r4, [sp, #44]	; 0x2c
 8010232:	435a      	muls	r2, r3
 8010234:	2400      	movs	r4, #0
 8010236:	9d02      	ldr	r5, [sp, #8]
 8010238:	9401      	str	r4, [sp, #4]
 801023a:	9c02      	ldr	r4, [sp, #8]
 801023c:	fb92 f4f4 	sdiv	r4, r2, r4
 8010240:	fb05 2214 	mls	r2, r5, r4, r2
 8010244:	2a00      	cmp	r2, #0
 8010246:	9207      	str	r2, [sp, #28]
 8010248:	bfbc      	itt	lt
 801024a:	1952      	addlt	r2, r2, r5
 801024c:	9207      	strlt	r2, [sp, #28]
 801024e:	9a01      	ldr	r2, [sp, #4]
 8010250:	6905      	ldr	r5, [r0, #16]
 8010252:	bfb8      	it	lt
 8010254:	f104 34ff 	addlt.w	r4, r4, #4294967295
 8010258:	eb04 0901 	add.w	r9, r4, r1
 801025c:	429a      	cmp	r2, r3
 801025e:	ea4f 1669 	mov.w	r6, r9, asr #5
 8010262:	f040 8112 	bne.w	801048a <_ZN8touchgfx7Outline10renderLineEiiii+0x49e>
 8010266:	f9b5 3000 	ldrsh.w	r3, [r5]
 801026a:	429e      	cmp	r6, r3
 801026c:	d104      	bne.n	8010278 <_ZN8touchgfx7Outline10renderLineEiiii+0x28c>
 801026e:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8010272:	9a03      	ldr	r2, [sp, #12]
 8010274:	429a      	cmp	r2, r3
 8010276:	d01b      	beq.n	80102b0 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8010278:	88ea      	ldrh	r2, [r5, #6]
 801027a:	88ab      	ldrh	r3, [r5, #4]
 801027c:	4313      	orrs	r3, r2
 801027e:	d010      	beq.n	80102a2 <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8010280:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8010284:	2a00      	cmp	r2, #0
 8010286:	db0c      	blt.n	80102a2 <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8010288:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 801028a:	429a      	cmp	r2, r3
 801028c:	da09      	bge.n	80102a2 <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 801028e:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
 8010292:	429a      	cmp	r2, r3
 8010294:	bf38      	it	cc
 8010296:	3508      	addcc	r5, #8
 8010298:	f102 0201 	add.w	r2, r2, #1
 801029c:	bf38      	it	cc
 801029e:	6105      	strcc	r5, [r0, #16]
 80102a0:	6082      	str	r2, [r0, #8]
 80102a2:	6903      	ldr	r3, [r0, #16]
 80102a4:	9a03      	ldr	r2, [sp, #12]
 80102a6:	805a      	strh	r2, [r3, #2]
 80102a8:	2200      	movs	r2, #0
 80102aa:	801e      	strh	r6, [r3, #0]
 80102ac:	809a      	strh	r2, [r3, #4]
 80102ae:	80da      	strh	r2, [r3, #6]
 80102b0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80102b2:	9a03      	ldr	r2, [sp, #12]
 80102b4:	6901      	ldr	r1, [r0, #16]
 80102b6:	441a      	add	r2, r3
 80102b8:	f9b1 3000 	ldrsh.w	r3, [r1]
 80102bc:	42b3      	cmp	r3, r6
 80102be:	d103      	bne.n	80102c8 <_ZN8touchgfx7Outline10renderLineEiiii+0x2dc>
 80102c0:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 80102c4:	429a      	cmp	r2, r3
 80102c6:	d01a      	beq.n	80102fe <_ZN8touchgfx7Outline10renderLineEiiii+0x312>
 80102c8:	88cc      	ldrh	r4, [r1, #6]
 80102ca:	888b      	ldrh	r3, [r1, #4]
 80102cc:	4323      	orrs	r3, r4
 80102ce:	d010      	beq.n	80102f2 <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 80102d0:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 80102d4:	2c00      	cmp	r4, #0
 80102d6:	db0c      	blt.n	80102f2 <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 80102d8:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80102da:	429c      	cmp	r4, r3
 80102dc:	da09      	bge.n	80102f2 <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 80102de:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 80102e2:	429c      	cmp	r4, r3
 80102e4:	bf38      	it	cc
 80102e6:	3108      	addcc	r1, #8
 80102e8:	f104 0401 	add.w	r4, r4, #1
 80102ec:	bf38      	it	cc
 80102ee:	6101      	strcc	r1, [r0, #16]
 80102f0:	6084      	str	r4, [r0, #8]
 80102f2:	6903      	ldr	r3, [r0, #16]
 80102f4:	2100      	movs	r1, #0
 80102f6:	801e      	strh	r6, [r3, #0]
 80102f8:	805a      	strh	r2, [r3, #2]
 80102fa:	8099      	strh	r1, [r3, #4]
 80102fc:	80d9      	strh	r1, [r3, #6]
 80102fe:	9b06      	ldr	r3, [sp, #24]
 8010300:	4293      	cmp	r3, r2
 8010302:	f000 8082 	beq.w	801040a <_ZN8touchgfx7Outline10renderLineEiiii+0x41e>
 8010306:	9b08      	ldr	r3, [sp, #32]
 8010308:	9c02      	ldr	r4, [sp, #8]
 801030a:	9902      	ldr	r1, [sp, #8]
 801030c:	015b      	lsls	r3, r3, #5
 801030e:	fb93 f1f1 	sdiv	r1, r3, r1
 8010312:	fb04 3311 	mls	r3, r4, r1, r3
 8010316:	2b00      	cmp	r3, #0
 8010318:	9103      	str	r1, [sp, #12]
 801031a:	9308      	str	r3, [sp, #32]
 801031c:	da04      	bge.n	8010328 <_ZN8touchgfx7Outline10renderLineEiiii+0x33c>
 801031e:	1e4b      	subs	r3, r1, #1
 8010320:	9303      	str	r3, [sp, #12]
 8010322:	9b08      	ldr	r3, [sp, #32]
 8010324:	4423      	add	r3, r4
 8010326:	9308      	str	r3, [sp, #32]
 8010328:	9b07      	ldr	r3, [sp, #28]
 801032a:	9902      	ldr	r1, [sp, #8]
 801032c:	1a5b      	subs	r3, r3, r1
 801032e:	9307      	str	r3, [sp, #28]
 8010330:	9b01      	ldr	r3, [sp, #4]
 8010332:	f1c3 0320 	rsb	r3, r3, #32
 8010336:	930e      	str	r3, [sp, #56]	; 0x38
 8010338:	990e      	ldr	r1, [sp, #56]	; 0x38
 801033a:	9b01      	ldr	r3, [sp, #4]
 801033c:	1a5b      	subs	r3, r3, r1
 801033e:	464f      	mov	r7, r9
 8010340:	930a      	str	r3, [sp, #40]	; 0x28
 8010342:	2600      	movs	r6, #0
 8010344:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
 8010348:	185b      	adds	r3, r3, r1
 801034a:	bf58      	it	pl
 801034c:	9902      	ldrpl	r1, [sp, #8]
 801034e:	9307      	str	r3, [sp, #28]
 8010350:	bf5d      	ittte	pl
 8010352:	1a5b      	subpl	r3, r3, r1
 8010354:	9307      	strpl	r3, [sp, #28]
 8010356:	9b03      	ldrpl	r3, [sp, #12]
 8010358:	9903      	ldrmi	r1, [sp, #12]
 801035a:	bf58      	it	pl
 801035c:	1c59      	addpl	r1, r3, #1
 801035e:	4489      	add	r9, r1
 8010360:	2a00      	cmp	r2, #0
 8010362:	ea4f 1a69 	mov.w	sl, r9, asr #5
 8010366:	db2e      	blt.n	80103c6 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8010368:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 801036a:	4293      	cmp	r3, r2
 801036c:	dd2b      	ble.n	80103c6 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 801036e:	9c01      	ldr	r4, [sp, #4]
 8010370:	6905      	ldr	r5, [r0, #16]
 8010372:	46a0      	mov	r8, r4
 8010374:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8010376:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
 801037a:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
 801037e:	45a0      	cmp	r8, r4
 8010380:	f040 814f 	bne.w	8010622 <_ZN8touchgfx7Outline10renderLineEiiii+0x636>
 8010384:	f9b5 1000 	ldrsh.w	r1, [r5]
 8010388:	4551      	cmp	r1, sl
 801038a:	d103      	bne.n	8010394 <_ZN8touchgfx7Outline10renderLineEiiii+0x3a8>
 801038c:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 8010390:	4291      	cmp	r1, r2
 8010392:	d018      	beq.n	80103c6 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8010394:	ea5c 010e 	orrs.w	r1, ip, lr
 8010398:	d00f      	beq.n	80103ba <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 801039a:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 801039e:	2900      	cmp	r1, #0
 80103a0:	db0b      	blt.n	80103ba <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 80103a2:	428b      	cmp	r3, r1
 80103a4:	dd09      	ble.n	80103ba <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 80103a6:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
 80103aa:	4299      	cmp	r1, r3
 80103ac:	bf38      	it	cc
 80103ae:	3508      	addcc	r5, #8
 80103b0:	f101 0101 	add.w	r1, r1, #1
 80103b4:	bf38      	it	cc
 80103b6:	6105      	strcc	r5, [r0, #16]
 80103b8:	6081      	str	r1, [r0, #8]
 80103ba:	6903      	ldr	r3, [r0, #16]
 80103bc:	f8a3 a000 	strh.w	sl, [r3]
 80103c0:	805a      	strh	r2, [r3, #2]
 80103c2:	809e      	strh	r6, [r3, #4]
 80103c4:	80de      	strh	r6, [r3, #6]
 80103c6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80103c8:	6901      	ldr	r1, [r0, #16]
 80103ca:	441a      	add	r2, r3
 80103cc:	88cc      	ldrh	r4, [r1, #6]
 80103ce:	888b      	ldrh	r3, [r1, #4]
 80103d0:	4323      	orrs	r3, r4
 80103d2:	d010      	beq.n	80103f6 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 80103d4:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 80103d8:	2c00      	cmp	r4, #0
 80103da:	db0c      	blt.n	80103f6 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 80103dc:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80103de:	429c      	cmp	r4, r3
 80103e0:	da09      	bge.n	80103f6 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 80103e2:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 80103e6:	429c      	cmp	r4, r3
 80103e8:	bf38      	it	cc
 80103ea:	3108      	addcc	r1, #8
 80103ec:	f104 0401 	add.w	r4, r4, #1
 80103f0:	bf38      	it	cc
 80103f2:	6101      	strcc	r1, [r0, #16]
 80103f4:	6084      	str	r4, [r0, #8]
 80103f6:	6903      	ldr	r3, [r0, #16]
 80103f8:	f8a3 a000 	strh.w	sl, [r3]
 80103fc:	805a      	strh	r2, [r3, #2]
 80103fe:	809e      	strh	r6, [r3, #4]
 8010400:	80de      	strh	r6, [r3, #6]
 8010402:	9b06      	ldr	r3, [sp, #24]
 8010404:	4293      	cmp	r3, r2
 8010406:	464f      	mov	r7, r9
 8010408:	d19c      	bne.n	8010344 <_ZN8touchgfx7Outline10renderLineEiiii+0x358>
 801040a:	9b01      	ldr	r3, [sp, #4]
 801040c:	6907      	ldr	r7, [r0, #16]
 801040e:	f1c3 0620 	rsb	r6, r3, #32
 8010412:	9b05      	ldr	r3, [sp, #20]
 8010414:	ea4f 1e63 	mov.w	lr, r3, asr #5
 8010418:	9b04      	ldr	r3, [sp, #16]
 801041a:	429e      	cmp	r6, r3
 801041c:	f040 81cc 	bne.w	80107b8 <_ZN8touchgfx7Outline10renderLineEiiii+0x7cc>
 8010420:	f9b7 3000 	ldrsh.w	r3, [r7]
 8010424:	459e      	cmp	lr, r3
 8010426:	d104      	bne.n	8010432 <_ZN8touchgfx7Outline10renderLineEiiii+0x446>
 8010428:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 801042c:	429a      	cmp	r2, r3
 801042e:	f43f ae36 	beq.w	801009e <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8010432:	88f9      	ldrh	r1, [r7, #6]
 8010434:	88bb      	ldrh	r3, [r7, #4]
 8010436:	430b      	orrs	r3, r1
 8010438:	d010      	beq.n	801045c <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 801043a:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 801043e:	2b00      	cmp	r3, #0
 8010440:	db0c      	blt.n	801045c <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8010442:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 8010444:	428b      	cmp	r3, r1
 8010446:	da09      	bge.n	801045c <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8010448:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 801044c:	428b      	cmp	r3, r1
 801044e:	bf38      	it	cc
 8010450:	3708      	addcc	r7, #8
 8010452:	f103 0301 	add.w	r3, r3, #1
 8010456:	bf38      	it	cc
 8010458:	6107      	strcc	r7, [r0, #16]
 801045a:	6083      	str	r3, [r0, #8]
 801045c:	6903      	ldr	r3, [r0, #16]
 801045e:	f8a3 e000 	strh.w	lr, [r3]
 8010462:	e5ff      	b.n	8010064 <_ZN8touchgfx7Outline10renderLineEiiii+0x78>
 8010464:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 8010466:	9c03      	ldr	r4, [sp, #12]
 8010468:	42a2      	cmp	r2, r4
 801046a:	f6ff ae18 	blt.w	801009e <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 801046e:	9c06      	ldr	r4, [sp, #24]
 8010470:	42a2      	cmp	r2, r4
 8010472:	bfb8      	it	lt
 8010474:	3201      	addlt	r2, #1
 8010476:	9c08      	ldr	r4, [sp, #32]
 8010478:	bfb8      	it	lt
 801047a:	9206      	strlt	r2, [sp, #24]
 801047c:	f1c3 0220 	rsb	r2, r3, #32
 8010480:	4362      	muls	r2, r4
 8010482:	2401      	movs	r4, #1
 8010484:	940b      	str	r4, [sp, #44]	; 0x2c
 8010486:	2420      	movs	r4, #32
 8010488:	e6d5      	b.n	8010236 <_ZN8touchgfx7Outline10renderLineEiiii+0x24a>
 801048a:	f009 021f 	and.w	r2, r9, #31
 801048e:	ea4f 1861 	mov.w	r8, r1, asr #5
 8010492:	920c      	str	r2, [sp, #48]	; 0x30
 8010494:	9a01      	ldr	r2, [sp, #4]
 8010496:	f8b5 e004 	ldrh.w	lr, [r5, #4]
 801049a:	f8b5 a006 	ldrh.w	sl, [r5, #6]
 801049e:	45b0      	cmp	r8, r6
 80104a0:	f001 011f 	and.w	r1, r1, #31
 80104a4:	eba2 0203 	sub.w	r2, r2, r3
 80104a8:	d108      	bne.n	80104bc <_ZN8touchgfx7Outline10renderLineEiiii+0x4d0>
 80104aa:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80104ac:	4419      	add	r1, r3
 80104ae:	4496      	add	lr, r2
 80104b0:	fb02 a101 	mla	r1, r2, r1, sl
 80104b4:	f8a5 e004 	strh.w	lr, [r5, #4]
 80104b8:	80e9      	strh	r1, [r5, #6]
 80104ba:	e6f9      	b.n	80102b0 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 80104bc:	2c00      	cmp	r4, #0
 80104be:	f2c0 80a9 	blt.w	8010614 <_ZN8touchgfx7Outline10renderLineEiiii+0x628>
 80104c2:	2701      	movs	r7, #1
 80104c4:	f1c1 0c20 	rsb	ip, r1, #32
 80104c8:	970a      	str	r7, [sp, #40]	; 0x28
 80104ca:	fb02 f20c 	mul.w	r2, r2, ip
 80104ce:	2720      	movs	r7, #32
 80104d0:	9709      	str	r7, [sp, #36]	; 0x24
 80104d2:	fb92 fcf4 	sdiv	ip, r2, r4
 80104d6:	9f09      	ldr	r7, [sp, #36]	; 0x24
 80104d8:	fb04 221c 	mls	r2, r4, ip, r2
 80104dc:	2a00      	cmp	r2, #0
 80104de:	bfb8      	it	lt
 80104e0:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 80104e4:	4439      	add	r1, r7
 80104e6:	fb0c a101 	mla	r1, ip, r1, sl
 80104ea:	80e9      	strh	r1, [r5, #6]
 80104ec:	44e6      	add	lr, ip
 80104ee:	990a      	ldr	r1, [sp, #40]	; 0x28
 80104f0:	f8a5 e004 	strh.w	lr, [r5, #4]
 80104f4:	eb08 0501 	add.w	r5, r8, r1
 80104f8:	6901      	ldr	r1, [r0, #16]
 80104fa:	f8b1 8006 	ldrh.w	r8, [r1, #6]
 80104fe:	f8b1 e004 	ldrh.w	lr, [r1, #4]
 8010502:	bfb8      	it	lt
 8010504:	1912      	addlt	r2, r2, r4
 8010506:	ea58 070e 	orrs.w	r7, r8, lr
 801050a:	d010      	beq.n	801052e <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 801050c:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
 8010510:	f1be 0f00 	cmp.w	lr, #0
 8010514:	db0b      	blt.n	801052e <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8010516:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8010518:	45be      	cmp	lr, r7
 801051a:	da08      	bge.n	801052e <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 801051c:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 8010520:	45be      	cmp	lr, r7
 8010522:	bf3c      	itt	cc
 8010524:	3108      	addcc	r1, #8
 8010526:	6101      	strcc	r1, [r0, #16]
 8010528:	f10e 0101 	add.w	r1, lr, #1
 801052c:	6081      	str	r1, [r0, #8]
 801052e:	6901      	ldr	r1, [r0, #16]
 8010530:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 8010534:	800d      	strh	r5, [r1, #0]
 8010536:	f04f 0e00 	mov.w	lr, #0
 801053a:	42ae      	cmp	r6, r5
 801053c:	f8a1 8002 	strh.w	r8, [r1, #2]
 8010540:	f8a1 e004 	strh.w	lr, [r1, #4]
 8010544:	f8a1 e006 	strh.w	lr, [r1, #6]
 8010548:	4463      	add	r3, ip
 801054a:	d054      	beq.n	80105f6 <_ZN8touchgfx7Outline10renderLineEiiii+0x60a>
 801054c:	9901      	ldr	r1, [sp, #4]
 801054e:	1ac9      	subs	r1, r1, r3
 8010550:	4461      	add	r1, ip
 8010552:	0149      	lsls	r1, r1, #5
 8010554:	fb91 fef4 	sdiv	lr, r1, r4
 8010558:	fb04 111e 	mls	r1, r4, lr, r1
 801055c:	2900      	cmp	r1, #0
 801055e:	bfb8      	it	lt
 8010560:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 8010564:	f10e 0701 	add.w	r7, lr, #1
 8010568:	bfb8      	it	lt
 801056a:	1909      	addlt	r1, r1, r4
 801056c:	1b12      	subs	r2, r2, r4
 801056e:	970d      	str	r7, [sp, #52]	; 0x34
 8010570:	f8d0 a010 	ldr.w	sl, [r0, #16]
 8010574:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8010576:	f8ba b004 	ldrh.w	fp, [sl, #4]
 801057a:	1852      	adds	r2, r2, r1
 801057c:	bf54      	ite	pl
 801057e:	f8dd c034 	ldrpl.w	ip, [sp, #52]	; 0x34
 8010582:	46f4      	movmi	ip, lr
 8010584:	44e3      	add	fp, ip
 8010586:	f8aa b004 	strh.w	fp, [sl, #4]
 801058a:	f8ba b006 	ldrh.w	fp, [sl, #6]
 801058e:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
 8010592:	f8aa b006 	strh.w	fp, [sl, #6]
 8010596:	4463      	add	r3, ip
 8010598:	f8d0 c010 	ldr.w	ip, [r0, #16]
 801059c:	f8bc b006 	ldrh.w	fp, [ip, #6]
 80105a0:	f8bc a004 	ldrh.w	sl, [ip, #4]
 80105a4:	bf58      	it	pl
 80105a6:	1b12      	subpl	r2, r2, r4
 80105a8:	443d      	add	r5, r7
 80105aa:	ea5b 070a 	orrs.w	r7, fp, sl
 80105ae:	d014      	beq.n	80105da <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 80105b0:	f9bc a002 	ldrsh.w	sl, [ip, #2]
 80105b4:	f1ba 0f00 	cmp.w	sl, #0
 80105b8:	db0f      	blt.n	80105da <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 80105ba:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 80105bc:	45ba      	cmp	sl, r7
 80105be:	da0c      	bge.n	80105da <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 80105c0:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
 80105c4:	45ba      	cmp	sl, r7
 80105c6:	bf38      	it	cc
 80105c8:	f10c 0c08 	addcc.w	ip, ip, #8
 80105cc:	f10a 0a01 	add.w	sl, sl, #1
 80105d0:	bf38      	it	cc
 80105d2:	f8c0 c010 	strcc.w	ip, [r0, #16]
 80105d6:	f8c0 a008 	str.w	sl, [r0, #8]
 80105da:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80105de:	f04f 0700 	mov.w	r7, #0
 80105e2:	42ae      	cmp	r6, r5
 80105e4:	f8ac 5000 	strh.w	r5, [ip]
 80105e8:	f8ac 8002 	strh.w	r8, [ip, #2]
 80105ec:	f8ac 7004 	strh.w	r7, [ip, #4]
 80105f0:	f8ac 7006 	strh.w	r7, [ip, #6]
 80105f4:	d1bc      	bne.n	8010570 <_ZN8touchgfx7Outline10renderLineEiiii+0x584>
 80105f6:	6904      	ldr	r4, [r0, #16]
 80105f8:	9a01      	ldr	r2, [sp, #4]
 80105fa:	990c      	ldr	r1, [sp, #48]	; 0x30
 80105fc:	1ad3      	subs	r3, r2, r3
 80105fe:	88a2      	ldrh	r2, [r4, #4]
 8010600:	441a      	add	r2, r3
 8010602:	80a2      	strh	r2, [r4, #4]
 8010604:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8010606:	3120      	adds	r1, #32
 8010608:	1a89      	subs	r1, r1, r2
 801060a:	88e2      	ldrh	r2, [r4, #6]
 801060c:	fb03 2301 	mla	r3, r3, r1, r2
 8010610:	80e3      	strh	r3, [r4, #6]
 8010612:	e64d      	b.n	80102b0 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8010614:	f04f 37ff 	mov.w	r7, #4294967295
 8010618:	970a      	str	r7, [sp, #40]	; 0x28
 801061a:	434a      	muls	r2, r1
 801061c:	4264      	negs	r4, r4
 801061e:	2700      	movs	r7, #0
 8010620:	e756      	b.n	80104d0 <_ZN8touchgfx7Outline10renderLineEiiii+0x4e4>
 8010622:	ea4f 1867 	mov.w	r8, r7, asr #5
 8010626:	f009 031f 	and.w	r3, r9, #31
 801062a:	45d0      	cmp	r8, sl
 801062c:	f007 071f 	and.w	r7, r7, #31
 8010630:	930f      	str	r3, [sp, #60]	; 0x3c
 8010632:	fa1f fc8c 	uxth.w	ip, ip
 8010636:	fa1f fe8e 	uxth.w	lr, lr
 801063a:	d10a      	bne.n	8010652 <_ZN8touchgfx7Outline10renderLineEiiii+0x666>
 801063c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801063e:	449c      	add	ip, r3
 8010640:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8010642:	f8a5 c004 	strh.w	ip, [r5, #4]
 8010646:	441f      	add	r7, r3
 8010648:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801064a:	fb03 e707 	mla	r7, r3, r7, lr
 801064e:	80ef      	strh	r7, [r5, #6]
 8010650:	e6b9      	b.n	80103c6 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8010652:	2900      	cmp	r1, #0
 8010654:	f2c0 80a8 	blt.w	80107a8 <_ZN8touchgfx7Outline10renderLineEiiii+0x7bc>
 8010658:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801065a:	f1c7 0320 	rsb	r3, r7, #32
 801065e:	4363      	muls	r3, r4
 8010660:	2401      	movs	r4, #1
 8010662:	940d      	str	r4, [sp, #52]	; 0x34
 8010664:	2420      	movs	r4, #32
 8010666:	940c      	str	r4, [sp, #48]	; 0x30
 8010668:	fb93 f4f1 	sdiv	r4, r3, r1
 801066c:	fb01 3b14 	mls	fp, r1, r4, r3
 8010670:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8010672:	f1bb 0f00 	cmp.w	fp, #0
 8010676:	bfb8      	it	lt
 8010678:	f104 34ff 	addlt.w	r4, r4, #4294967295
 801067c:	441f      	add	r7, r3
 801067e:	fb04 e707 	mla	r7, r4, r7, lr
 8010682:	44a4      	add	ip, r4
 8010684:	f8a5 c004 	strh.w	ip, [r5, #4]
 8010688:	80ef      	strh	r7, [r5, #6]
 801068a:	f8d0 c010 	ldr.w	ip, [r0, #16]
 801068e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8010690:	f8bc e006 	ldrh.w	lr, [ip, #6]
 8010694:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8010698:	bfb8      	it	lt
 801069a:	448b      	addlt	fp, r1
 801069c:	eb08 0503 	add.w	r5, r8, r3
 80106a0:	ea5e 0307 	orrs.w	r3, lr, r7
 80106a4:	d011      	beq.n	80106ca <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 80106a6:	f9bc e002 	ldrsh.w	lr, [ip, #2]
 80106aa:	f1be 0f00 	cmp.w	lr, #0
 80106ae:	db0c      	blt.n	80106ca <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 80106b0:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 80106b2:	45be      	cmp	lr, r7
 80106b4:	da09      	bge.n	80106ca <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 80106b6:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 80106ba:	45be      	cmp	lr, r7
 80106bc:	bf3c      	itt	cc
 80106be:	f10c 0708 	addcc.w	r7, ip, #8
 80106c2:	6107      	strcc	r7, [r0, #16]
 80106c4:	f10e 0701 	add.w	r7, lr, #1
 80106c8:	6087      	str	r7, [r0, #8]
 80106ca:	6907      	ldr	r7, [r0, #16]
 80106cc:	b213      	sxth	r3, r2
 80106ce:	9310      	str	r3, [sp, #64]	; 0x40
 80106d0:	807b      	strh	r3, [r7, #2]
 80106d2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80106d4:	803d      	strh	r5, [r7, #0]
 80106d6:	4555      	cmp	r5, sl
 80106d8:	80be      	strh	r6, [r7, #4]
 80106da:	80fe      	strh	r6, [r7, #6]
 80106dc:	eb04 0c03 	add.w	ip, r4, r3
 80106e0:	d051      	beq.n	8010786 <_ZN8touchgfx7Outline10renderLineEiiii+0x79a>
 80106e2:	9b01      	ldr	r3, [sp, #4]
 80106e4:	eba3 070c 	sub.w	r7, r3, ip
 80106e8:	443c      	add	r4, r7
 80106ea:	0164      	lsls	r4, r4, #5
 80106ec:	fb94 f8f1 	sdiv	r8, r4, r1
 80106f0:	fb01 4418 	mls	r4, r1, r8, r4
 80106f4:	2c00      	cmp	r4, #0
 80106f6:	bfb8      	it	lt
 80106f8:	f108 38ff 	addlt.w	r8, r8, #4294967295
 80106fc:	ebab 0301 	sub.w	r3, fp, r1
 8010700:	f108 0701 	add.w	r7, r8, #1
 8010704:	bfb8      	it	lt
 8010706:	1864      	addlt	r4, r4, r1
 8010708:	9309      	str	r3, [sp, #36]	; 0x24
 801070a:	9711      	str	r7, [sp, #68]	; 0x44
 801070c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801070e:	f8d0 e010 	ldr.w	lr, [r0, #16]
 8010712:	191b      	adds	r3, r3, r4
 8010714:	bf58      	it	pl
 8010716:	9f11      	ldrpl	r7, [sp, #68]	; 0x44
 8010718:	f8be b004 	ldrh.w	fp, [lr, #4]
 801071c:	9309      	str	r3, [sp, #36]	; 0x24
 801071e:	bf48      	it	mi
 8010720:	4647      	movmi	r7, r8
 8010722:	44bb      	add	fp, r7
 8010724:	f8ae b004 	strh.w	fp, [lr, #4]
 8010728:	f8be b006 	ldrh.w	fp, [lr, #6]
 801072c:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8010730:	f8ae b006 	strh.w	fp, [lr, #6]
 8010734:	f8d0 e010 	ldr.w	lr, [r0, #16]
 8010738:	44bc      	add	ip, r7
 801073a:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 801073c:	f8be b006 	ldrh.w	fp, [lr, #6]
 8010740:	443d      	add	r5, r7
 8010742:	f8be 7004 	ldrh.w	r7, [lr, #4]
 8010746:	bf5c      	itt	pl
 8010748:	1a5b      	subpl	r3, r3, r1
 801074a:	9309      	strpl	r3, [sp, #36]	; 0x24
 801074c:	ea5b 0307 	orrs.w	r3, fp, r7
 8010750:	d011      	beq.n	8010776 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8010752:	f9be b002 	ldrsh.w	fp, [lr, #2]
 8010756:	f1bb 0f00 	cmp.w	fp, #0
 801075a:	db0c      	blt.n	8010776 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 801075c:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 801075e:	45bb      	cmp	fp, r7
 8010760:	da09      	bge.n	8010776 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8010762:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8010766:	45bb      	cmp	fp, r7
 8010768:	bf3c      	itt	cc
 801076a:	f10e 0708 	addcc.w	r7, lr, #8
 801076e:	6107      	strcc	r7, [r0, #16]
 8010770:	f10b 0701 	add.w	r7, fp, #1
 8010774:	6087      	str	r7, [r0, #8]
 8010776:	6907      	ldr	r7, [r0, #16]
 8010778:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801077a:	803d      	strh	r5, [r7, #0]
 801077c:	4555      	cmp	r5, sl
 801077e:	807b      	strh	r3, [r7, #2]
 8010780:	80be      	strh	r6, [r7, #4]
 8010782:	80fe      	strh	r6, [r7, #6]
 8010784:	d1c2      	bne.n	801070c <_ZN8touchgfx7Outline10renderLineEiiii+0x720>
 8010786:	9b01      	ldr	r3, [sp, #4]
 8010788:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801078a:	eba3 0c0c 	sub.w	ip, r3, ip
 801078e:	6903      	ldr	r3, [r0, #16]
 8010790:	8899      	ldrh	r1, [r3, #4]
 8010792:	4461      	add	r1, ip
 8010794:	8099      	strh	r1, [r3, #4]
 8010796:	990c      	ldr	r1, [sp, #48]	; 0x30
 8010798:	3720      	adds	r7, #32
 801079a:	1a7f      	subs	r7, r7, r1
 801079c:	88d9      	ldrh	r1, [r3, #6]
 801079e:	fb0c 1c07 	mla	ip, ip, r7, r1
 80107a2:	f8a3 c006 	strh.w	ip, [r3, #6]
 80107a6:	e60e      	b.n	80103c6 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 80107a8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80107aa:	f04f 34ff 	mov.w	r4, #4294967295
 80107ae:	940d      	str	r4, [sp, #52]	; 0x34
 80107b0:	437b      	muls	r3, r7
 80107b2:	4249      	negs	r1, r1
 80107b4:	2400      	movs	r4, #0
 80107b6:	e756      	b.n	8010666 <_ZN8touchgfx7Outline10renderLineEiiii+0x67a>
 80107b8:	9905      	ldr	r1, [sp, #20]
 80107ba:	f8b7 8004 	ldrh.w	r8, [r7, #4]
 80107be:	f8b7 a006 	ldrh.w	sl, [r7, #6]
 80107c2:	f001 011f 	and.w	r1, r1, #31
 80107c6:	ea4f 1b69 	mov.w	fp, r9, asr #5
 80107ca:	9102      	str	r1, [sp, #8]
 80107cc:	9904      	ldr	r1, [sp, #16]
 80107ce:	45f3      	cmp	fp, lr
 80107d0:	f009 0c1f 	and.w	ip, r9, #31
 80107d4:	eba1 0406 	sub.w	r4, r1, r6
 80107d8:	d108      	bne.n	80107ec <_ZN8touchgfx7Outline10renderLineEiiii+0x800>
 80107da:	9b02      	ldr	r3, [sp, #8]
 80107dc:	449c      	add	ip, r3
 80107de:	44a0      	add	r8, r4
 80107e0:	fb04 a40c 	mla	r4, r4, ip, sl
 80107e4:	f8a7 8004 	strh.w	r8, [r7, #4]
 80107e8:	80fc      	strh	r4, [r7, #6]
 80107ea:	e458      	b.n	801009e <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 80107ec:	9905      	ldr	r1, [sp, #20]
 80107ee:	ebb1 0109 	subs.w	r1, r1, r9
 80107f2:	bf5b      	ittet	pl
 80107f4:	f1cc 0520 	rsbpl	r5, ip, #32
 80107f8:	436c      	mulpl	r4, r5
 80107fa:	2500      	movmi	r5, #0
 80107fc:	2520      	movpl	r5, #32
 80107fe:	bf44      	itt	mi
 8010800:	fb04 f40c 	mulmi.w	r4, r4, ip
 8010804:	4249      	negmi	r1, r1
 8010806:	9501      	str	r5, [sp, #4]
 8010808:	9b01      	ldr	r3, [sp, #4]
 801080a:	fb94 f5f1 	sdiv	r5, r4, r1
 801080e:	fb01 4415 	mls	r4, r1, r5, r4
 8010812:	bf54      	ite	pl
 8010814:	f04f 0901 	movpl.w	r9, #1
 8010818:	f04f 39ff 	movmi.w	r9, #4294967295
 801081c:	2c00      	cmp	r4, #0
 801081e:	bfb8      	it	lt
 8010820:	f105 35ff 	addlt.w	r5, r5, #4294967295
 8010824:	449c      	add	ip, r3
 8010826:	44a8      	add	r8, r5
 8010828:	fb05 ac0c 	mla	ip, r5, ip, sl
 801082c:	f8a7 8004 	strh.w	r8, [r7, #4]
 8010830:	f8a7 c006 	strh.w	ip, [r7, #6]
 8010834:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8010838:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 801083c:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8010840:	bfb8      	it	lt
 8010842:	1864      	addlt	r4, r4, r1
 8010844:	ea58 0707 	orrs.w	r7, r8, r7
 8010848:	eb0b 0309 	add.w	r3, fp, r9
 801084c:	d011      	beq.n	8010872 <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 801084e:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 8010852:	f1b8 0f00 	cmp.w	r8, #0
 8010856:	db0c      	blt.n	8010872 <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8010858:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 801085a:	45b8      	cmp	r8, r7
 801085c:	da09      	bge.n	8010872 <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 801085e:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
 8010862:	45b8      	cmp	r8, r7
 8010864:	bf3c      	itt	cc
 8010866:	f10c 0708 	addcc.w	r7, ip, #8
 801086a:	6107      	strcc	r7, [r0, #16]
 801086c:	f108 0701 	add.w	r7, r8, #1
 8010870:	6087      	str	r7, [r0, #8]
 8010872:	6907      	ldr	r7, [r0, #16]
 8010874:	f04f 0c00 	mov.w	ip, #0
 8010878:	b212      	sxth	r2, r2
 801087a:	459e      	cmp	lr, r3
 801087c:	803b      	strh	r3, [r7, #0]
 801087e:	807a      	strh	r2, [r7, #2]
 8010880:	f8a7 c004 	strh.w	ip, [r7, #4]
 8010884:	f8a7 c006 	strh.w	ip, [r7, #6]
 8010888:	442e      	add	r6, r5
 801088a:	d04d      	beq.n	8010928 <_ZN8touchgfx7Outline10renderLineEiiii+0x93c>
 801088c:	9f04      	ldr	r7, [sp, #16]
 801088e:	1bbf      	subs	r7, r7, r6
 8010890:	443d      	add	r5, r7
 8010892:	016d      	lsls	r5, r5, #5
 8010894:	fb95 f8f1 	sdiv	r8, r5, r1
 8010898:	fb01 5518 	mls	r5, r1, r8, r5
 801089c:	4565      	cmp	r5, ip
 801089e:	bfb8      	it	lt
 80108a0:	f108 38ff 	addlt.w	r8, r8, #4294967295
 80108a4:	f108 0701 	add.w	r7, r8, #1
 80108a8:	bfb8      	it	lt
 80108aa:	186d      	addlt	r5, r5, r1
 80108ac:	1a64      	subs	r4, r4, r1
 80108ae:	9703      	str	r7, [sp, #12]
 80108b0:	f04f 0a00 	mov.w	sl, #0
 80108b4:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80108b8:	1964      	adds	r4, r4, r5
 80108ba:	bf58      	it	pl
 80108bc:	9f03      	ldrpl	r7, [sp, #12]
 80108be:	f8bc b004 	ldrh.w	fp, [ip, #4]
 80108c2:	bf48      	it	mi
 80108c4:	4647      	movmi	r7, r8
 80108c6:	44bb      	add	fp, r7
 80108c8:	f8ac b004 	strh.w	fp, [ip, #4]
 80108cc:	f8bc b006 	ldrh.w	fp, [ip, #6]
 80108d0:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 80108d4:	f8ac b006 	strh.w	fp, [ip, #6]
 80108d8:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80108dc:	443e      	add	r6, r7
 80108de:	f8bc b006 	ldrh.w	fp, [ip, #6]
 80108e2:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 80108e6:	bf58      	it	pl
 80108e8:	1a64      	subpl	r4, r4, r1
 80108ea:	ea5b 0707 	orrs.w	r7, fp, r7
 80108ee:	444b      	add	r3, r9
 80108f0:	d011      	beq.n	8010916 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 80108f2:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 80108f6:	f1bb 0f00 	cmp.w	fp, #0
 80108fa:	db0c      	blt.n	8010916 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 80108fc:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 80108fe:	45bb      	cmp	fp, r7
 8010900:	da09      	bge.n	8010916 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8010902:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8010906:	45bb      	cmp	fp, r7
 8010908:	bf3c      	itt	cc
 801090a:	f10c 0708 	addcc.w	r7, ip, #8
 801090e:	6107      	strcc	r7, [r0, #16]
 8010910:	f10b 0701 	add.w	r7, fp, #1
 8010914:	6087      	str	r7, [r0, #8]
 8010916:	6907      	ldr	r7, [r0, #16]
 8010918:	459e      	cmp	lr, r3
 801091a:	803b      	strh	r3, [r7, #0]
 801091c:	807a      	strh	r2, [r7, #2]
 801091e:	f8a7 a004 	strh.w	sl, [r7, #4]
 8010922:	f8a7 a006 	strh.w	sl, [r7, #6]
 8010926:	d1c5      	bne.n	80108b4 <_ZN8touchgfx7Outline10renderLineEiiii+0x8c8>
 8010928:	9b04      	ldr	r3, [sp, #16]
 801092a:	1b9e      	subs	r6, r3, r6
 801092c:	6903      	ldr	r3, [r0, #16]
 801092e:	889a      	ldrh	r2, [r3, #4]
 8010930:	4432      	add	r2, r6
 8010932:	809a      	strh	r2, [r3, #4]
 8010934:	9a02      	ldr	r2, [sp, #8]
 8010936:	f102 0c20 	add.w	ip, r2, #32
 801093a:	9a01      	ldr	r2, [sp, #4]
 801093c:	ebac 0c02 	sub.w	ip, ip, r2
 8010940:	88da      	ldrh	r2, [r3, #6]
 8010942:	fb06 260c 	mla	r6, r6, ip, r2
 8010946:	80de      	strh	r6, [r3, #6]
 8010948:	f7ff bba9 	b.w	801009e <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>

0801094c <_ZN8touchgfx7Outline6lineToEii>:
 801094c:	6a43      	ldr	r3, [r0, #36]	; 0x24
 801094e:	079b      	lsls	r3, r3, #30
 8010950:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8010952:	460e      	mov	r6, r1
 8010954:	4615      	mov	r5, r2
 8010956:	d511      	bpl.n	801097c <_ZN8touchgfx7Outline6lineToEii+0x30>
 8010958:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 801095c:	ea86 0701 	eor.w	r7, r6, r1
 8010960:	ea85 0302 	eor.w	r3, r5, r2
 8010964:	433b      	orrs	r3, r7
 8010966:	d009      	beq.n	801097c <_ZN8touchgfx7Outline6lineToEii+0x30>
 8010968:	4633      	mov	r3, r6
 801096a:	9500      	str	r5, [sp, #0]
 801096c:	f7ff fb3e 	bl	800ffec <_ZN8touchgfx7Outline10renderLineEiiii>
 8010970:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8010972:	e9c0 6505 	strd	r6, r5, [r0, #20]
 8010976:	f043 0301 	orr.w	r3, r3, #1
 801097a:	6243      	str	r3, [r0, #36]	; 0x24
 801097c:	b003      	add	sp, #12
 801097e:	bdf0      	pop	{r4, r5, r6, r7, pc}

08010980 <_ZN8touchgfx7Outline6moveToEii>:
 8010980:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010982:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8010984:	4615      	mov	r5, r2
 8010986:	079a      	lsls	r2, r3, #30
 8010988:	4604      	mov	r4, r0
 801098a:	460e      	mov	r6, r1
 801098c:	d401      	bmi.n	8010992 <_ZN8touchgfx7Outline6moveToEii+0x12>
 801098e:	f7ff faf9 	bl	800ff84 <_ZN8touchgfx7Outline5resetEv>
 8010992:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8010994:	07db      	lsls	r3, r3, #31
 8010996:	d504      	bpl.n	80109a2 <_ZN8touchgfx7Outline6moveToEii+0x22>
 8010998:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
 801099c:	4620      	mov	r0, r4
 801099e:	f7ff ffd5 	bl	801094c <_ZN8touchgfx7Outline6lineToEii>
 80109a2:	6923      	ldr	r3, [r4, #16]
 80109a4:	f9b3 2000 	ldrsh.w	r2, [r3]
 80109a8:	1170      	asrs	r0, r6, #5
 80109aa:	4290      	cmp	r0, r2
 80109ac:	ea4f 1165 	mov.w	r1, r5, asr #5
 80109b0:	d103      	bne.n	80109ba <_ZN8touchgfx7Outline6moveToEii+0x3a>
 80109b2:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 80109b6:	4291      	cmp	r1, r2
 80109b8:	d01a      	beq.n	80109f0 <_ZN8touchgfx7Outline6moveToEii+0x70>
 80109ba:	88df      	ldrh	r7, [r3, #6]
 80109bc:	889a      	ldrh	r2, [r3, #4]
 80109be:	433a      	orrs	r2, r7
 80109c0:	d010      	beq.n	80109e4 <_ZN8touchgfx7Outline6moveToEii+0x64>
 80109c2:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 80109c6:	2a00      	cmp	r2, #0
 80109c8:	db0c      	blt.n	80109e4 <_ZN8touchgfx7Outline6moveToEii+0x64>
 80109ca:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 80109cc:	42ba      	cmp	r2, r7
 80109ce:	da09      	bge.n	80109e4 <_ZN8touchgfx7Outline6moveToEii+0x64>
 80109d0:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
 80109d4:	42ba      	cmp	r2, r7
 80109d6:	bf38      	it	cc
 80109d8:	3308      	addcc	r3, #8
 80109da:	f102 0201 	add.w	r2, r2, #1
 80109de:	bf38      	it	cc
 80109e0:	6123      	strcc	r3, [r4, #16]
 80109e2:	60a2      	str	r2, [r4, #8]
 80109e4:	6923      	ldr	r3, [r4, #16]
 80109e6:	2200      	movs	r2, #0
 80109e8:	8018      	strh	r0, [r3, #0]
 80109ea:	8059      	strh	r1, [r3, #2]
 80109ec:	809a      	strh	r2, [r3, #4]
 80109ee:	80da      	strh	r2, [r3, #6]
 80109f0:	6166      	str	r6, [r4, #20]
 80109f2:	e9c4 5606 	strd	r5, r6, [r4, #24]
 80109f6:	6225      	str	r5, [r4, #32]
 80109f8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080109fa <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 80109fa:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80109fe:	b0d0      	sub	sp, #320	; 0x140
 8010a00:	466c      	mov	r4, sp
 8010a02:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 8010a06:	4627      	mov	r7, r4
 8010a08:	1a0d      	subs	r5, r1, r0
 8010a0a:	2d48      	cmp	r5, #72	; 0x48
 8010a0c:	f100 0308 	add.w	r3, r0, #8
 8010a10:	f340 80d5 	ble.w	8010bbe <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 8010a14:	112d      	asrs	r5, r5, #4
 8010a16:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
 8010a1a:	f9b0 9000 	ldrsh.w	r9, [r0]
 8010a1e:	6816      	ldr	r6, [r2, #0]
 8010a20:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
 8010a24:	6006      	str	r6, [r0, #0]
 8010a26:	6856      	ldr	r6, [r2, #4]
 8010a28:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 8010a2c:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 8010a30:	6046      	str	r6, [r0, #4]
 8010a32:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 8010a36:	f8a2 8002 	strh.w	r8, [r2, #2]
 8010a3a:	f8a2 e004 	strh.w	lr, [r2, #4]
 8010a3e:	f8a2 c006 	strh.w	ip, [r2, #6]
 8010a42:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 8010a46:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
 8010a4a:	4565      	cmp	r5, ip
 8010a4c:	f1a1 0208 	sub.w	r2, r1, #8
 8010a50:	db06      	blt.n	8010a60 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
 8010a52:	d119      	bne.n	8010a88 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 8010a54:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 8010a58:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 8010a5c:	42ae      	cmp	r6, r5
 8010a5e:	dd13      	ble.n	8010a88 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 8010a60:	460e      	mov	r6, r1
 8010a62:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
 8010a66:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 8010a6a:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
 8010a6e:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
 8010a72:	601d      	str	r5, [r3, #0]
 8010a74:	6875      	ldr	r5, [r6, #4]
 8010a76:	605d      	str	r5, [r3, #4]
 8010a78:	f821 9c08 	strh.w	r9, [r1, #-8]
 8010a7c:	f821 cc06 	strh.w	ip, [r1, #-6]
 8010a80:	f821 8c04 	strh.w	r8, [r1, #-4]
 8010a84:	f821 ec02 	strh.w	lr, [r1, #-2]
 8010a88:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 8010a8c:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
 8010a90:	42ae      	cmp	r6, r5
 8010a92:	db06      	blt.n	8010aa2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
 8010a94:	d116      	bne.n	8010ac4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 8010a96:	f9b0 c000 	ldrsh.w	ip, [r0]
 8010a9a:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 8010a9e:	45ac      	cmp	ip, r5
 8010aa0:	da10      	bge.n	8010ac4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 8010aa2:	681d      	ldr	r5, [r3, #0]
 8010aa4:	f9b0 8000 	ldrsh.w	r8, [r0]
 8010aa8:	6005      	str	r5, [r0, #0]
 8010aaa:	685d      	ldr	r5, [r3, #4]
 8010aac:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 8010ab0:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 8010ab4:	f8a0 8008 	strh.w	r8, [r0, #8]
 8010ab8:	6045      	str	r5, [r0, #4]
 8010aba:	8146      	strh	r6, [r0, #10]
 8010abc:	f8a0 e00c 	strh.w	lr, [r0, #12]
 8010ac0:	f8a0 c00e 	strh.w	ip, [r0, #14]
 8010ac4:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 8010ac8:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 8010acc:	4565      	cmp	r5, ip
 8010ace:	db06      	blt.n	8010ade <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
 8010ad0:	d119      	bne.n	8010b06 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8010ad2:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
 8010ad6:	f9b0 5000 	ldrsh.w	r5, [r0]
 8010ada:	42ae      	cmp	r6, r5
 8010adc:	da13      	bge.n	8010b06 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8010ade:	460e      	mov	r6, r1
 8010ae0:	f9b0 9000 	ldrsh.w	r9, [r0]
 8010ae4:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 8010ae8:	6005      	str	r5, [r0, #0]
 8010aea:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 8010aee:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
 8010af2:	6875      	ldr	r5, [r6, #4]
 8010af4:	6045      	str	r5, [r0, #4]
 8010af6:	f821 9c08 	strh.w	r9, [r1, #-8]
 8010afa:	f821 cc06 	strh.w	ip, [r1, #-6]
 8010afe:	f821 8c04 	strh.w	r8, [r1, #-4]
 8010b02:	f821 ec02 	strh.w	lr, [r1, #-2]
 8010b06:	3308      	adds	r3, #8
 8010b08:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 8010b0c:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 8010b10:	45e6      	cmp	lr, ip
 8010b12:	dbf8      	blt.n	8010b06 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8010b14:	d105      	bne.n	8010b22 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8010b16:	f9b3 6000 	ldrsh.w	r6, [r3]
 8010b1a:	f9b0 5000 	ldrsh.w	r5, [r0]
 8010b1e:	42ae      	cmp	r6, r5
 8010b20:	dbf1      	blt.n	8010b06 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8010b22:	4615      	mov	r5, r2
 8010b24:	3a08      	subs	r2, #8
 8010b26:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
 8010b2a:	45b4      	cmp	ip, r6
 8010b2c:	dbf9      	blt.n	8010b22 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8010b2e:	d105      	bne.n	8010b3c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
 8010b30:	f9b0 8000 	ldrsh.w	r8, [r0]
 8010b34:	f9b2 6000 	ldrsh.w	r6, [r2]
 8010b38:	45b0      	cmp	r8, r6
 8010b3a:	dbf2      	blt.n	8010b22 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8010b3c:	4293      	cmp	r3, r2
 8010b3e:	f1a5 0608 	sub.w	r6, r5, #8
 8010b42:	d816      	bhi.n	8010b72 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
 8010b44:	f8d6 c000 	ldr.w	ip, [r6]
 8010b48:	f9b3 a000 	ldrsh.w	sl, [r3]
 8010b4c:	f8c3 c000 	str.w	ip, [r3]
 8010b50:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
 8010b54:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
 8010b58:	f8d6 c004 	ldr.w	ip, [r6, #4]
 8010b5c:	f8c3 c004 	str.w	ip, [r3, #4]
 8010b60:	f825 ac08 	strh.w	sl, [r5, #-8]
 8010b64:	f825 ec06 	strh.w	lr, [r5, #-6]
 8010b68:	f825 9c04 	strh.w	r9, [r5, #-4]
 8010b6c:	f825 8c02 	strh.w	r8, [r5, #-2]
 8010b70:	e7c9      	b.n	8010b06 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8010b72:	f8d6 e000 	ldr.w	lr, [r6]
 8010b76:	f9b0 a000 	ldrsh.w	sl, [r0]
 8010b7a:	f8c0 e000 	str.w	lr, [r0]
 8010b7e:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
 8010b82:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
 8010b86:	f8d6 e004 	ldr.w	lr, [r6, #4]
 8010b8a:	f8c0 e004 	str.w	lr, [r0, #4]
 8010b8e:	f825 ac08 	strh.w	sl, [r5, #-8]
 8010b92:	f825 cc06 	strh.w	ip, [r5, #-6]
 8010b96:	f825 9c04 	strh.w	r9, [r5, #-4]
 8010b9a:	f825 8c02 	strh.w	r8, [r5, #-2]
 8010b9e:	1acd      	subs	r5, r1, r3
 8010ba0:	1a16      	subs	r6, r2, r0
 8010ba2:	10ed      	asrs	r5, r5, #3
 8010ba4:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
 8010ba8:	bfb5      	itete	lt
 8010baa:	e9c4 0200 	strdlt	r0, r2, [r4]
 8010bae:	e9c4 3100 	strdge	r3, r1, [r4]
 8010bb2:	460a      	movlt	r2, r1
 8010bb4:	4603      	movge	r3, r0
 8010bb6:	3408      	adds	r4, #8
 8010bb8:	4618      	mov	r0, r3
 8010bba:	4611      	mov	r1, r2
 8010bbc:	e724      	b.n	8010a08 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 8010bbe:	4299      	cmp	r1, r3
 8010bc0:	d928      	bls.n	8010c14 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x21a>
 8010bc2:	f1a3 0210 	sub.w	r2, r3, #16
 8010bc6:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
 8010bca:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
 8010bce:	45ac      	cmp	ip, r5
 8010bd0:	db06      	blt.n	8010be0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
 8010bd2:	d11d      	bne.n	8010c10 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 8010bd4:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
 8010bd8:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
 8010bdc:	42ae      	cmp	r6, r5
 8010bde:	da17      	bge.n	8010c10 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 8010be0:	4615      	mov	r5, r2
 8010be2:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
 8010be6:	f855 6f08 	ldr.w	r6, [r5, #8]!
 8010bea:	6116      	str	r6, [r2, #16]
 8010bec:	686e      	ldr	r6, [r5, #4]
 8010bee:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
 8010bf2:	f9b2 e016 	ldrsh.w	lr, [r2, #22]
 8010bf6:	f8a2 9008 	strh.w	r9, [r2, #8]
 8010bfa:	42a8      	cmp	r0, r5
 8010bfc:	6156      	str	r6, [r2, #20]
 8010bfe:	f8a2 c00a 	strh.w	ip, [r2, #10]
 8010c02:	f8a2 800c 	strh.w	r8, [r2, #12]
 8010c06:	f8a2 e00e 	strh.w	lr, [r2, #14]
 8010c0a:	f1a2 0208 	sub.w	r2, r2, #8
 8010c0e:	d1da      	bne.n	8010bc6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
 8010c10:	3308      	adds	r3, #8
 8010c12:	e7d4      	b.n	8010bbe <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 8010c14:	42bc      	cmp	r4, r7
 8010c16:	d903      	bls.n	8010c20 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x226>
 8010c18:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 8010c1c:	3c08      	subs	r4, #8
 8010c1e:	e6f3      	b.n	8010a08 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 8010c20:	b050      	add	sp, #320	; 0x140
 8010c22:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08010c26 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
 8010c26:	b510      	push	{r4, lr}
 8010c28:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8010c2a:	07da      	lsls	r2, r3, #31
 8010c2c:	4604      	mov	r4, r0
 8010c2e:	d507      	bpl.n	8010c40 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
 8010c30:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 8010c34:	f7ff fe8a 	bl	801094c <_ZN8touchgfx7Outline6lineToEii>
 8010c38:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8010c3a:	f023 0301 	bic.w	r3, r3, #1
 8010c3e:	6243      	str	r3, [r0, #36]	; 0x24
 8010c40:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8010c42:	079b      	lsls	r3, r3, #30
 8010c44:	d521      	bpl.n	8010c8a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
 8010c46:	6923      	ldr	r3, [r4, #16]
 8010c48:	88d9      	ldrh	r1, [r3, #6]
 8010c4a:	889a      	ldrh	r2, [r3, #4]
 8010c4c:	430a      	orrs	r2, r1
 8010c4e:	d010      	beq.n	8010c72 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8010c50:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8010c54:	2a00      	cmp	r2, #0
 8010c56:	db0c      	blt.n	8010c72 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8010c58:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8010c5a:	428a      	cmp	r2, r1
 8010c5c:	da09      	bge.n	8010c72 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8010c5e:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 8010c62:	4291      	cmp	r1, r2
 8010c64:	bf88      	it	hi
 8010c66:	3308      	addhi	r3, #8
 8010c68:	f102 0201 	add.w	r2, r2, #1
 8010c6c:	bf88      	it	hi
 8010c6e:	6123      	strhi	r3, [r4, #16]
 8010c70:	60a2      	str	r2, [r4, #8]
 8010c72:	68a1      	ldr	r1, [r4, #8]
 8010c74:	b129      	cbz	r1, 8010c82 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 8010c76:	6863      	ldr	r3, [r4, #4]
 8010c78:	4299      	cmp	r1, r3
 8010c7a:	d802      	bhi.n	8010c82 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 8010c7c:	68e0      	ldr	r0, [r4, #12]
 8010c7e:	f7ff febc 	bl	80109fa <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 8010c82:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8010c84:	f023 0302 	bic.w	r3, r3, #2
 8010c88:	6263      	str	r3, [r4, #36]	; 0x24
 8010c8a:	68e0      	ldr	r0, [r4, #12]
 8010c8c:	bd10      	pop	{r4, pc}
	...

08010c90 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
 8010c90:	4b02      	ldr	r3, [pc, #8]	; (8010c9c <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
 8010c92:	6018      	str	r0, [r3, #0]
 8010c94:	4b02      	ldr	r3, [pc, #8]	; (8010ca0 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
 8010c96:	6019      	str	r1, [r3, #0]
 8010c98:	4770      	bx	lr
 8010c9a:	bf00      	nop
 8010c9c:	20017954 	.word	0x20017954
 8010ca0:	20017958 	.word	0x20017958

08010ca4 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 8010ca4:	4b01      	ldr	r3, [pc, #4]	; (8010cac <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 8010ca6:	6818      	ldr	r0, [r3, #0]
 8010ca8:	4770      	bx	lr
 8010caa:	bf00      	nop
 8010cac:	20017954 	.word	0x20017954

08010cb0 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 8010cb0:	4b01      	ldr	r3, [pc, #4]	; (8010cb8 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 8010cb2:	6818      	ldr	r0, [r3, #0]
 8010cb4:	4770      	bx	lr
 8010cb6:	bf00      	nop
 8010cb8:	20017958 	.word	0x20017958

08010cbc <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 8010cbc:	b510      	push	{r4, lr}
 8010cbe:	6803      	ldr	r3, [r0, #0]
 8010cc0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010cc2:	460c      	mov	r4, r1
 8010cc4:	4798      	blx	r3
 8010cc6:	1b03      	subs	r3, r0, r4
 8010cc8:	4258      	negs	r0, r3
 8010cca:	4158      	adcs	r0, r3
 8010ccc:	bd10      	pop	{r4, pc}
	...

08010cd0 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 8010cd0:	4b01      	ldr	r3, [pc, #4]	; (8010cd8 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 8010cd2:	6019      	str	r1, [r3, #0]
 8010cd4:	4770      	bx	lr
 8010cd6:	bf00      	nop
 8010cd8:	2001795c 	.word	0x2001795c

08010cdc <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8010cdc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010ce0:	4696      	mov	lr, r2
 8010ce2:	4605      	mov	r5, r0
 8010ce4:	4614      	mov	r4, r2
 8010ce6:	460e      	mov	r6, r1
 8010ce8:	461f      	mov	r7, r3
 8010cea:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8010cee:	b097      	sub	sp, #92	; 0x5c
 8010cf0:	f10d 0c1c 	add.w	ip, sp, #28
 8010cf4:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8010cf8:	f8de 3000 	ldr.w	r3, [lr]
 8010cfc:	f8cc 3000 	str.w	r3, [ip]
 8010d00:	f104 0e14 	add.w	lr, r4, #20
 8010d04:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8010d08:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8010d0c:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8010d10:	f8de 3000 	ldr.w	r3, [lr]
 8010d14:	f8cc 3000 	str.w	r3, [ip]
 8010d18:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 8010d1c:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8010d20:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 8010d24:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8010d28:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 8010d2c:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 8010d30:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 8010d34:	f8de 3000 	ldr.w	r3, [lr]
 8010d38:	f8cc 3000 	str.w	r3, [ip]
 8010d3c:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8010d3e:	682b      	ldr	r3, [r5, #0]
 8010d40:	9201      	str	r2, [sp, #4]
 8010d42:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 8010d46:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8010d48:	9200      	str	r2, [sp, #0]
 8010d4a:	f8cd 8008 	str.w	r8, [sp, #8]
 8010d4e:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
 8010d52:	aa07      	add	r2, sp, #28
 8010d54:	463b      	mov	r3, r7
 8010d56:	4631      	mov	r1, r6
 8010d58:	4628      	mov	r0, r5
 8010d5a:	47d8      	blx	fp
 8010d5c:	46a6      	mov	lr, r4
 8010d5e:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8010d62:	f10d 0c1c 	add.w	ip, sp, #28
 8010d66:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8010d6a:	f8de 3000 	ldr.w	r3, [lr]
 8010d6e:	f8cc 3000 	str.w	r3, [ip]
 8010d72:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 8010d76:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8010d7a:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8010d7e:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8010d82:	343c      	adds	r4, #60	; 0x3c
 8010d84:	f8de 3000 	ldr.w	r3, [lr]
 8010d88:	f8cc 3000 	str.w	r3, [ip]
 8010d8c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8010d8e:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 8010d92:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8010d96:	6823      	ldr	r3, [r4, #0]
 8010d98:	f8cc 3000 	str.w	r3, [ip]
 8010d9c:	682b      	ldr	r3, [r5, #0]
 8010d9e:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 8010da2:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8010da4:	9201      	str	r2, [sp, #4]
 8010da6:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8010da8:	9200      	str	r2, [sp, #0]
 8010daa:	f8cd 8008 	str.w	r8, [sp, #8]
 8010dae:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 8010db0:	aa07      	add	r2, sp, #28
 8010db2:	463b      	mov	r3, r7
 8010db4:	4631      	mov	r1, r6
 8010db6:	4628      	mov	r0, r5
 8010db8:	47a0      	blx	r4
 8010dba:	b017      	add	sp, #92	; 0x5c
 8010dbc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08010dc0 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 8010dc0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010dc4:	b08d      	sub	sp, #52	; 0x34
 8010dc6:	4688      	mov	r8, r1
 8010dc8:	9916      	ldr	r1, [sp, #88]	; 0x58
 8010dca:	f8d3 c000 	ldr.w	ip, [r3]
 8010dce:	680f      	ldr	r7, [r1, #0]
 8010dd0:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 8010dd4:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 8010dd8:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 8010ddc:	edd3 6a07 	vldr	s13, [r3, #28]
 8010de0:	9918      	ldr	r1, [sp, #96]	; 0x60
 8010de2:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 8010de6:	f9b1 9000 	ldrsh.w	r9, [r1]
 8010dea:	f9ba 1000 	ldrsh.w	r1, [sl]
 8010dee:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 8010df2:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 8010df6:	eba7 070c 	sub.w	r7, r7, ip
 8010dfa:	42bc      	cmp	r4, r7
 8010dfc:	bfa8      	it	ge
 8010dfe:	463c      	movge	r4, r7
 8010e00:	ee07 4a90 	vmov	s15, r4
 8010e04:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 8010e08:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 8010e0c:	ee25 4a04 	vmul.f32	s8, s10, s8
 8010e10:	ee65 4a24 	vmul.f32	s9, s10, s9
 8010e14:	ee25 5a27 	vmul.f32	s10, s10, s15
 8010e18:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8010e1c:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8010e20:	eb09 0e0c 	add.w	lr, r9, ip
 8010e24:	4571      	cmp	r1, lr
 8010e26:	ee71 0aa4 	vadd.f32	s1, s3, s9
 8010e2a:	ee32 1a05 	vadd.f32	s2, s4, s10
 8010e2e:	ee36 0a84 	vadd.f32	s0, s13, s8
 8010e32:	ee61 1a87 	vmul.f32	s3, s3, s14
 8010e36:	ee22 2a07 	vmul.f32	s4, s4, s14
 8010e3a:	f340 808d 	ble.w	8010f58 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 8010e3e:	eba1 060e 	sub.w	r6, r1, lr
 8010e42:	fb96 f5f4 	sdiv	r5, r6, r4
 8010e46:	ee07 5a10 	vmov	s14, r5
 8010e4a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8010e4e:	2d00      	cmp	r5, #0
 8010e50:	fb04 6615 	mls	r6, r4, r5, r6
 8010e54:	eea7 0a04 	vfma.f32	s0, s14, s8
 8010e58:	eee7 0a24 	vfma.f32	s1, s14, s9
 8010e5c:	eea7 1a05 	vfma.f32	s2, s14, s10
 8010e60:	dd13      	ble.n	8010e8a <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 8010e62:	ee70 6a44 	vsub.f32	s13, s0, s8
 8010e66:	ee70 1ae4 	vsub.f32	s3, s1, s9
 8010e6a:	eef5 6a40 	vcmp.f32	s13, #0.0
 8010e6e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010e72:	bf18      	it	ne
 8010e74:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 8010e78:	ee31 2a45 	vsub.f32	s4, s2, s10
 8010e7c:	bf08      	it	eq
 8010e7e:	eeb0 7a67 	vmoveq.f32	s14, s15
 8010e82:	ee61 1a87 	vmul.f32	s3, s3, s14
 8010e86:	ee22 2a07 	vmul.f32	s4, s4, s14
 8010e8a:	fb05 f204 	mul.w	r2, r5, r4
 8010e8e:	1abf      	subs	r7, r7, r2
 8010e90:	4494      	add	ip, r2
 8010e92:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 8010e96:	4411      	add	r1, r2
 8010e98:	eb09 020c 	add.w	r2, r9, ip
 8010e9c:	443a      	add	r2, r7
 8010e9e:	b209      	sxth	r1, r1
 8010ea0:	428a      	cmp	r2, r1
 8010ea2:	bfc4      	itt	gt
 8010ea4:	eba1 0209 	subgt.w	r2, r1, r9
 8010ea8:	eba2 070c 	subgt.w	r7, r2, ip
 8010eac:	2f00      	cmp	r7, #0
 8010eae:	dd50      	ble.n	8010f52 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 8010eb0:	fb97 f1f4 	sdiv	r1, r7, r4
 8010eb4:	fb04 7211 	mls	r2, r4, r1, r7
 8010eb8:	b90a      	cbnz	r2, 8010ebe <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 8010eba:	3901      	subs	r1, #1
 8010ebc:	4622      	mov	r2, r4
 8010ebe:	eec7 3a80 	vdiv.f32	s7, s15, s0
 8010ec2:	6840      	ldr	r0, [r0, #4]
 8010ec4:	900b      	str	r0, [sp, #44]	; 0x2c
 8010ec6:	f8d0 a000 	ldr.w	sl, [r0]
 8010eca:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8010ecc:	9008      	str	r0, [sp, #32]
 8010ece:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 8010ed2:	9818      	ldr	r0, [sp, #96]	; 0x60
 8010ed4:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 8010ed8:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 8010edc:	695b      	ldr	r3, [r3, #20]
 8010ede:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8010ee0:	445b      	add	r3, fp
 8010ee2:	eef0 6a42 	vmov.f32	s13, s4
 8010ee6:	ee60 2aa3 	vmul.f32	s5, s1, s7
 8010eea:	ee21 3a23 	vmul.f32	s6, s2, s7
 8010eee:	ee72 7ae1 	vsub.f32	s15, s5, s3
 8010ef2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8010ef6:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8010efa:	9307      	str	r3, [sp, #28]
 8010efc:	ee17 7a90 	vmov	r7, s15
 8010f00:	ee73 7a42 	vsub.f32	s15, s6, s4
 8010f04:	eeb0 7a61 	vmov.f32	s14, s3
 8010f08:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8010f0c:	ee16 3a90 	vmov	r3, s13
 8010f10:	fb97 f7f4 	sdiv	r7, r7, r4
 8010f14:	ee17 ca90 	vmov	ip, s15
 8010f18:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8010f1c:	fb9c fcf4 	sdiv	ip, ip, r4
 8010f20:	fb0c 3306 	mla	r3, ip, r6, r3
 8010f24:	9302      	str	r3, [sp, #8]
 8010f26:	ee17 3a10 	vmov	r3, s14
 8010f2a:	44b6      	add	lr, r6
 8010f2c:	fb04 e505 	mla	r5, r4, r5, lr
 8010f30:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 8010f34:	fb07 3706 	mla	r7, r7, r6, r3
 8010f38:	e9cd 8505 	strd	r8, r5, [sp, #20]
 8010f3c:	e9cd 4700 	strd	r4, r7, [sp]
 8010f40:	2900      	cmp	r1, #0
 8010f42:	bfcc      	ite	gt
 8010f44:	46a1      	movgt	r9, r4
 8010f46:	4691      	movle	r9, r2
 8010f48:	eba9 0306 	sub.w	r3, r9, r6
 8010f4c:	f8da 4008 	ldr.w	r4, [sl, #8]
 8010f50:	47a0      	blx	r4
 8010f52:	b00d      	add	sp, #52	; 0x34
 8010f54:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010f58:	2500      	movs	r5, #0
 8010f5a:	462e      	mov	r6, r5
 8010f5c:	e799      	b.n	8010e92 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

08010f60 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8010f60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010f64:	b0db      	sub	sp, #364	; 0x16c
 8010f66:	461d      	mov	r5, r3
 8010f68:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 8010f6c:	930a      	str	r3, [sp, #40]	; 0x28
 8010f6e:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 8010f72:	930b      	str	r3, [sp, #44]	; 0x2c
 8010f74:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 8010f78:	9310      	str	r3, [sp, #64]	; 0x40
 8010f7a:	6803      	ldr	r3, [r0, #0]
 8010f7c:	910f      	str	r1, [sp, #60]	; 0x3c
 8010f7e:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 8010f80:	9009      	str	r0, [sp, #36]	; 0x24
 8010f82:	4614      	mov	r4, r2
 8010f84:	4629      	mov	r1, r5
 8010f86:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8010f8a:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 8010f8e:	47b8      	blx	r7
 8010f90:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8010f92:	6058      	str	r0, [r3, #4]
 8010f94:	2800      	cmp	r0, #0
 8010f96:	f000 83a1 	beq.w	80116dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8010f9a:	682b      	ldr	r3, [r5, #0]
 8010f9c:	9314      	str	r3, [sp, #80]	; 0x50
 8010f9e:	686b      	ldr	r3, [r5, #4]
 8010fa0:	9315      	str	r3, [sp, #84]	; 0x54
 8010fa2:	4bc4      	ldr	r3, [pc, #784]	; (80112b4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 8010fa4:	ed94 7a02 	vldr	s14, [r4, #8]
 8010fa8:	7819      	ldrb	r1, [r3, #0]
 8010faa:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 8010fae:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 8010fb2:	2900      	cmp	r1, #0
 8010fb4:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8010fb8:	bf16      	itet	ne
 8010fba:	4619      	movne	r1, r3
 8010fbc:	4611      	moveq	r1, r2
 8010fbe:	4613      	movne	r3, r2
 8010fc0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010fc4:	9116      	str	r1, [sp, #88]	; 0x58
 8010fc6:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 8010fca:	f240 8387 	bls.w	80116dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8010fce:	ed94 7a07 	vldr	s14, [r4, #28]
 8010fd2:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8010fd6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010fda:	f240 837f 	bls.w	80116dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8010fde:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 8010fe2:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8010fe6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010fea:	f240 8377 	bls.w	80116dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8010fee:	6822      	ldr	r2, [r4, #0]
 8010ff0:	4bb1      	ldr	r3, [pc, #708]	; (80112b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 8010ff2:	429a      	cmp	r2, r3
 8010ff4:	f2c0 8372 	blt.w	80116dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8010ff8:	49b0      	ldr	r1, [pc, #704]	; (80112bc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 8010ffa:	6963      	ldr	r3, [r4, #20]
 8010ffc:	428a      	cmp	r2, r1
 8010ffe:	f300 836d 	bgt.w	80116dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8011002:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 8011006:	48ae      	ldr	r0, [pc, #696]	; (80112c0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 8011008:	33ff      	adds	r3, #255	; 0xff
 801100a:	4283      	cmp	r3, r0
 801100c:	f200 8366 	bhi.w	80116dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8011010:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8011012:	4dac      	ldr	r5, [pc, #688]	; (80112c4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 8011014:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 8011018:	33ff      	adds	r3, #255	; 0xff
 801101a:	42ab      	cmp	r3, r5
 801101c:	f200 835e 	bhi.w	80116dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8011020:	6862      	ldr	r2, [r4, #4]
 8011022:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 8011026:	33ff      	adds	r3, #255	; 0xff
 8011028:	4283      	cmp	r3, r0
 801102a:	f200 8357 	bhi.w	80116dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801102e:	69a1      	ldr	r1, [r4, #24]
 8011030:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 8011034:	33ff      	adds	r3, #255	; 0xff
 8011036:	4283      	cmp	r3, r0
 8011038:	f200 8350 	bhi.w	80116dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801103c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 801103e:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 8011042:	30ff      	adds	r0, #255	; 0xff
 8011044:	42a8      	cmp	r0, r5
 8011046:	f200 8349 	bhi.w	80116dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801104a:	428a      	cmp	r2, r1
 801104c:	f280 8110 	bge.w	8011270 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 8011050:	429a      	cmp	r2, r3
 8011052:	f300 8119 	bgt.w	8011288 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 8011056:	4299      	cmp	r1, r3
 8011058:	f280 811d 	bge.w	8011296 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 801105c:	2502      	movs	r5, #2
 801105e:	2701      	movs	r7, #1
 8011060:	46a9      	mov	r9, r5
 8011062:	46b8      	mov	r8, r7
 8011064:	f04f 0a00 	mov.w	sl, #0
 8011068:	4621      	mov	r1, r4
 801106a:	a849      	add	r0, sp, #292	; 0x124
 801106c:	f003 fcfe 	bl	8014a6c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 8011070:	4622      	mov	r2, r4
 8011072:	4653      	mov	r3, sl
 8011074:	a949      	add	r1, sp, #292	; 0x124
 8011076:	f8cd 9000 	str.w	r9, [sp]
 801107a:	a819      	add	r0, sp, #100	; 0x64
 801107c:	f003 fe26 	bl	8014ccc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8011080:	4622      	mov	r2, r4
 8011082:	4653      	mov	r3, sl
 8011084:	a949      	add	r1, sp, #292	; 0x124
 8011086:	f8cd 8000 	str.w	r8, [sp]
 801108a:	a829      	add	r0, sp, #164	; 0xa4
 801108c:	f003 fe1e 	bl	8014ccc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8011090:	4643      	mov	r3, r8
 8011092:	4622      	mov	r2, r4
 8011094:	a949      	add	r1, sp, #292	; 0x124
 8011096:	f8cd 9000 	str.w	r9, [sp]
 801109a:	a839      	add	r0, sp, #228	; 0xe4
 801109c:	f003 fe16 	bl	8014ccc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 80110a0:	42af      	cmp	r7, r5
 80110a2:	bfb5      	itete	lt
 80110a4:	2300      	movlt	r3, #0
 80110a6:	2301      	movge	r3, #1
 80110a8:	930e      	strlt	r3, [sp, #56]	; 0x38
 80110aa:	930e      	strge	r3, [sp, #56]	; 0x38
 80110ac:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80110ae:	e893 0003 	ldmia.w	r3, {r0, r1}
 80110b2:	af12      	add	r7, sp, #72	; 0x48
 80110b4:	bfb9      	ittee	lt
 80110b6:	ad29      	addlt	r5, sp, #164	; 0xa4
 80110b8:	ac19      	addlt	r4, sp, #100	; 0x64
 80110ba:	ad19      	addge	r5, sp, #100	; 0x64
 80110bc:	ac29      	addge	r4, sp, #164	; 0xa4
 80110be:	e887 0003 	stmia.w	r7, {r0, r1}
 80110c2:	b928      	cbnz	r0, 80110d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 80110c4:	4b80      	ldr	r3, [pc, #512]	; (80112c8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 80110c6:	6818      	ldr	r0, [r3, #0]
 80110c8:	6803      	ldr	r3, [r0, #0]
 80110ca:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80110cc:	4798      	blx	r3
 80110ce:	6038      	str	r0, [r7, #0]
 80110d0:	9b64      	ldr	r3, [sp, #400]	; 0x190
 80110d2:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 80110d6:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80110da:	930c      	str	r3, [sp, #48]	; 0x30
 80110dc:	990c      	ldr	r1, [sp, #48]	; 0x30
 80110de:	6963      	ldr	r3, [r4, #20]
 80110e0:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 80110e2:	440b      	add	r3, r1
 80110e4:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 80110e8:	4408      	add	r0, r1
 80110ea:	b200      	sxth	r0, r0
 80110ec:	4283      	cmp	r3, r0
 80110ee:	900d      	str	r0, [sp, #52]	; 0x34
 80110f0:	f280 80dd 	bge.w	80112ae <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 80110f4:	428b      	cmp	r3, r1
 80110f6:	da08      	bge.n	801110a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 80110f8:	2a00      	cmp	r2, #0
 80110fa:	dd06      	ble.n	801110a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 80110fc:	1acb      	subs	r3, r1, r3
 80110fe:	429a      	cmp	r2, r3
 8011100:	f2c0 80e4 	blt.w	80112cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 8011104:	2b00      	cmp	r3, #0
 8011106:	f300 80e2 	bgt.w	80112ce <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 801110a:	6967      	ldr	r7, [r4, #20]
 801110c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801110e:	443b      	add	r3, r7
 8011110:	461f      	mov	r7, r3
 8011112:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8011114:	1bdf      	subs	r7, r3, r7
 8011116:	4297      	cmp	r7, r2
 8011118:	bfa8      	it	ge
 801111a:	4617      	movge	r7, r2
 801111c:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 8011120:	2f00      	cmp	r7, #0
 8011122:	f340 8166 	ble.w	80113f2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 8011126:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8011128:	6829      	ldr	r1, [r5, #0]
 801112a:	f9b3 2000 	ldrsh.w	r2, [r3]
 801112e:	f9bb 3000 	ldrsh.w	r3, [fp]
 8011132:	6820      	ldr	r0, [r4, #0]
 8011134:	4411      	add	r1, r2
 8011136:	4299      	cmp	r1, r3
 8011138:	dd1a      	ble.n	8011170 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 801113a:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 801113e:	440b      	add	r3, r1
 8011140:	4402      	add	r2, r0
 8011142:	b21b      	sxth	r3, r3
 8011144:	429a      	cmp	r2, r3
 8011146:	dc13      	bgt.n	8011170 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8011148:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801114a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801114c:	681b      	ldr	r3, [r3, #0]
 801114e:	9206      	str	r2, [sp, #24]
 8011150:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8011152:	9205      	str	r2, [sp, #20]
 8011154:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8011156:	9500      	str	r5, [sp, #0]
 8011158:	e9cd b203 	strd	fp, r2, [sp, #12]
 801115c:	9a64      	ldr	r2, [sp, #400]	; 0x190
 801115e:	9809      	ldr	r0, [sp, #36]	; 0x24
 8011160:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8011164:	a912      	add	r1, sp, #72	; 0x48
 8011166:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 801116a:	aa49      	add	r2, sp, #292	; 0x124
 801116c:	4623      	mov	r3, r4
 801116e:	47c8      	blx	r9
 8011170:	e9d4 2300 	ldrd	r2, r3, [r4]
 8011174:	441a      	add	r2, r3
 8011176:	6963      	ldr	r3, [r4, #20]
 8011178:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 801117c:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 8011180:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 8011184:	68a1      	ldr	r1, [r4, #8]
 8011186:	ed94 6a08 	vldr	s12, [r4, #32]
 801118a:	6022      	str	r2, [r4, #0]
 801118c:	3301      	adds	r3, #1
 801118e:	6163      	str	r3, [r4, #20]
 8011190:	69a3      	ldr	r3, [r4, #24]
 8011192:	ee37 7a27 	vadd.f32	s14, s14, s15
 8011196:	3b01      	subs	r3, #1
 8011198:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 801119c:	61a3      	str	r3, [r4, #24]
 801119e:	6923      	ldr	r3, [r4, #16]
 80111a0:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 80111a4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80111a8:	edd4 6a07 	vldr	s13, [r4, #28]
 80111ac:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 80111b0:	440b      	add	r3, r1
 80111b2:	68e1      	ldr	r1, [r4, #12]
 80111b4:	6123      	str	r3, [r4, #16]
 80111b6:	ee76 6a86 	vadd.f32	s13, s13, s12
 80111ba:	428b      	cmp	r3, r1
 80111bc:	edc4 6a07 	vstr	s13, [r4, #28]
 80111c0:	db15      	blt.n	80111ee <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 80111c2:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 80111c6:	ee76 6a26 	vadd.f32	s13, s12, s13
 80111ca:	3201      	adds	r2, #1
 80111cc:	edc4 6a07 	vstr	s13, [r4, #28]
 80111d0:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 80111d4:	6022      	str	r2, [r4, #0]
 80111d6:	ee36 7a87 	vadd.f32	s14, s13, s14
 80111da:	1a5b      	subs	r3, r3, r1
 80111dc:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 80111e0:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 80111e4:	6123      	str	r3, [r4, #16]
 80111e6:	ee77 7a27 	vadd.f32	s15, s14, s15
 80111ea:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 80111ee:	e9d5 2300 	ldrd	r2, r3, [r5]
 80111f2:	441a      	add	r2, r3
 80111f4:	696b      	ldr	r3, [r5, #20]
 80111f6:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 80111fa:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 80111fe:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 8011202:	68a9      	ldr	r1, [r5, #8]
 8011204:	ed95 6a08 	vldr	s12, [r5, #32]
 8011208:	602a      	str	r2, [r5, #0]
 801120a:	3301      	adds	r3, #1
 801120c:	616b      	str	r3, [r5, #20]
 801120e:	69ab      	ldr	r3, [r5, #24]
 8011210:	ee37 7a27 	vadd.f32	s14, s14, s15
 8011214:	3b01      	subs	r3, #1
 8011216:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 801121a:	61ab      	str	r3, [r5, #24]
 801121c:	692b      	ldr	r3, [r5, #16]
 801121e:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8011222:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8011226:	edd5 6a07 	vldr	s13, [r5, #28]
 801122a:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 801122e:	440b      	add	r3, r1
 8011230:	68e9      	ldr	r1, [r5, #12]
 8011232:	612b      	str	r3, [r5, #16]
 8011234:	ee76 6a86 	vadd.f32	s13, s13, s12
 8011238:	428b      	cmp	r3, r1
 801123a:	edc5 6a07 	vstr	s13, [r5, #28]
 801123e:	db15      	blt.n	801126c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 8011240:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 8011244:	ee76 6a26 	vadd.f32	s13, s12, s13
 8011248:	3201      	adds	r2, #1
 801124a:	edc5 6a07 	vstr	s13, [r5, #28]
 801124e:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 8011252:	602a      	str	r2, [r5, #0]
 8011254:	ee36 7a87 	vadd.f32	s14, s13, s14
 8011258:	1a5b      	subs	r3, r3, r1
 801125a:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 801125e:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 8011262:	612b      	str	r3, [r5, #16]
 8011264:	ee77 7a27 	vadd.f32	s15, s14, s15
 8011268:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 801126c:	3f01      	subs	r7, #1
 801126e:	e757      	b.n	8011120 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 8011270:	4299      	cmp	r1, r3
 8011272:	dc13      	bgt.n	801129c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 8011274:	429a      	cmp	r2, r3
 8011276:	da14      	bge.n	80112a2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 8011278:	2502      	movs	r5, #2
 801127a:	2703      	movs	r7, #3
 801127c:	46a9      	mov	r9, r5
 801127e:	f04f 0800 	mov.w	r8, #0
 8011282:	f04f 0a01 	mov.w	sl, #1
 8011286:	e6ef      	b.n	8011068 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8011288:	2501      	movs	r5, #1
 801128a:	2700      	movs	r7, #0
 801128c:	46a9      	mov	r9, r5
 801128e:	46b8      	mov	r8, r7
 8011290:	f04f 0a02 	mov.w	sl, #2
 8011294:	e6e8      	b.n	8011068 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8011296:	2501      	movs	r5, #1
 8011298:	2702      	movs	r7, #2
 801129a:	e6e1      	b.n	8011060 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 801129c:	2500      	movs	r5, #0
 801129e:	2701      	movs	r7, #1
 80112a0:	e7f4      	b.n	801128c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 80112a2:	2702      	movs	r7, #2
 80112a4:	2503      	movs	r5, #3
 80112a6:	f04f 0900 	mov.w	r9, #0
 80112aa:	46b8      	mov	r8, r7
 80112ac:	e7e9      	b.n	8011282 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 80112ae:	4613      	mov	r3, r2
 80112b0:	e728      	b.n	8011104 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 80112b2:	bf00      	nop
 80112b4:	20017944 	.word	0x20017944
 80112b8:	fffd8f01 	.word	0xfffd8f01
 80112bc:	00027100 	.word	0x00027100
 80112c0:	0004e1ff 	.word	0x0004e1ff
 80112c4:	0004e1fe 	.word	0x0004e1fe
 80112c8:	2001794c 	.word	0x2001794c
 80112cc:	4613      	mov	r3, r2
 80112ce:	992b      	ldr	r1, [sp, #172]	; 0xac
 80112d0:	9111      	str	r1, [sp, #68]	; 0x44
 80112d2:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 80112d6:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 80112da:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 80112dc:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 80112e0:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 80112e4:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 80112e8:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 80112ec:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 80112f0:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 80112f4:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 80112f8:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 80112fc:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 8011300:	469e      	mov	lr, r3
 8011302:	469c      	mov	ip, r3
 8011304:	f04f 0900 	mov.w	r9, #0
 8011308:	f1bc 0f00 	cmp.w	ip, #0
 801130c:	d147      	bne.n	801139e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 801130e:	eb03 0c07 	add.w	ip, r3, r7
 8011312:	1ad7      	subs	r7, r2, r3
 8011314:	f1b9 0f00 	cmp.w	r9, #0
 8011318:	d009      	beq.n	801132e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 801131a:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 801131e:	9029      	str	r0, [sp, #164]	; 0xa4
 8011320:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 8011324:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 8011328:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 801132c:	912d      	str	r1, [sp, #180]	; 0xb4
 801132e:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8011330:	9111      	str	r1, [sp, #68]	; 0x44
 8011332:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 8011336:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 801133a:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 801133e:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 8011342:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 8011346:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 801134a:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 801134e:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 8011352:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 8011356:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 801135a:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 801135e:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 8011362:	f04f 0800 	mov.w	r8, #0
 8011366:	f1be 0f00 	cmp.w	lr, #0
 801136a:	d031      	beq.n	80113d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 801136c:	9e11      	ldr	r6, [sp, #68]	; 0x44
 801136e:	4431      	add	r1, r6
 8011370:	4549      	cmp	r1, r9
 8011372:	4450      	add	r0, sl
 8011374:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8011378:	ee37 7a04 	vadd.f32	s14, s14, s8
 801137c:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8011380:	db08      	blt.n	8011394 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 8011382:	ee77 7a85 	vadd.f32	s15, s15, s10
 8011386:	ee76 6aa5 	vadd.f32	s13, s13, s11
 801138a:	ee37 7a06 	vadd.f32	s14, s14, s12
 801138e:	3001      	adds	r0, #1
 8011390:	eba1 0109 	sub.w	r1, r1, r9
 8011394:	f10e 3eff 	add.w	lr, lr, #4294967295
 8011398:	f04f 0801 	mov.w	r8, #1
 801139c:	e7e3      	b.n	8011366 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 801139e:	9e11      	ldr	r6, [sp, #68]	; 0x44
 80113a0:	4431      	add	r1, r6
 80113a2:	4541      	cmp	r1, r8
 80113a4:	4450      	add	r0, sl
 80113a6:	ee37 7a24 	vadd.f32	s14, s14, s9
 80113aa:	ee77 7a84 	vadd.f32	s15, s15, s8
 80113ae:	ee76 6aa3 	vadd.f32	s13, s13, s7
 80113b2:	db08      	blt.n	80113c6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 80113b4:	ee76 6a85 	vadd.f32	s13, s13, s10
 80113b8:	ee37 7a25 	vadd.f32	s14, s14, s11
 80113bc:	ee77 7a86 	vadd.f32	s15, s15, s12
 80113c0:	3001      	adds	r0, #1
 80113c2:	eba1 0108 	sub.w	r1, r1, r8
 80113c6:	f10c 3cff 	add.w	ip, ip, #4294967295
 80113ca:	f04f 0901 	mov.w	r9, #1
 80113ce:	e79b      	b.n	8011308 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 80113d0:	449c      	add	ip, r3
 80113d2:	1aff      	subs	r7, r7, r3
 80113d4:	f1b8 0f00 	cmp.w	r8, #0
 80113d8:	d009      	beq.n	80113ee <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 80113da:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 80113de:	9019      	str	r0, [sp, #100]	; 0x64
 80113e0:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 80113e4:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 80113e8:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 80113ec:	911d      	str	r1, [sp, #116]	; 0x74
 80113ee:	1ad2      	subs	r2, r2, r3
 80113f0:	e68b      	b.n	801110a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 80113f2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80113f4:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 80113f6:	2b00      	cmp	r3, #0
 80113f8:	f000 80d1 	beq.w	801159e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 80113fc:	ad19      	add	r5, sp, #100	; 0x64
 80113fe:	ac39      	add	r4, sp, #228	; 0xe4
 8011400:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8011402:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8011406:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801140a:	930c      	str	r3, [sp, #48]	; 0x30
 801140c:	990c      	ldr	r1, [sp, #48]	; 0x30
 801140e:	6963      	ldr	r3, [r4, #20]
 8011410:	440b      	add	r3, r1
 8011412:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8011416:	4408      	add	r0, r1
 8011418:	b200      	sxth	r0, r0
 801141a:	4283      	cmp	r3, r0
 801141c:	900d      	str	r0, [sp, #52]	; 0x34
 801141e:	f280 80c1 	bge.w	80115a4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 8011422:	428b      	cmp	r3, r1
 8011424:	da08      	bge.n	8011438 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8011426:	2a00      	cmp	r2, #0
 8011428:	dd06      	ble.n	8011438 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 801142a:	1acb      	subs	r3, r1, r3
 801142c:	429a      	cmp	r2, r3
 801142e:	f2c0 80bb 	blt.w	80115a8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 8011432:	2b00      	cmp	r3, #0
 8011434:	f300 80b9 	bgt.w	80115aa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 8011438:	6967      	ldr	r7, [r4, #20]
 801143a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801143c:	443b      	add	r3, r7
 801143e:	461f      	mov	r7, r3
 8011440:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8011442:	1bdf      	subs	r7, r3, r7
 8011444:	4297      	cmp	r7, r2
 8011446:	bfa8      	it	ge
 8011448:	4617      	movge	r7, r2
 801144a:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 801144e:	2f00      	cmp	r7, #0
 8011450:	f340 813c 	ble.w	80116cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 8011454:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8011456:	6829      	ldr	r1, [r5, #0]
 8011458:	f9b3 2000 	ldrsh.w	r2, [r3]
 801145c:	f9bb 3000 	ldrsh.w	r3, [fp]
 8011460:	6820      	ldr	r0, [r4, #0]
 8011462:	4411      	add	r1, r2
 8011464:	4299      	cmp	r1, r3
 8011466:	dd1a      	ble.n	801149e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8011468:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 801146c:	440b      	add	r3, r1
 801146e:	4402      	add	r2, r0
 8011470:	b21b      	sxth	r3, r3
 8011472:	429a      	cmp	r2, r3
 8011474:	dc13      	bgt.n	801149e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8011476:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8011478:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801147a:	681b      	ldr	r3, [r3, #0]
 801147c:	9206      	str	r2, [sp, #24]
 801147e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8011480:	9205      	str	r2, [sp, #20]
 8011482:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8011484:	9500      	str	r5, [sp, #0]
 8011486:	e9cd b203 	strd	fp, r2, [sp, #12]
 801148a:	9a64      	ldr	r2, [sp, #400]	; 0x190
 801148c:	9809      	ldr	r0, [sp, #36]	; 0x24
 801148e:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8011492:	a912      	add	r1, sp, #72	; 0x48
 8011494:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 8011498:	aa49      	add	r2, sp, #292	; 0x124
 801149a:	4623      	mov	r3, r4
 801149c:	47c8      	blx	r9
 801149e:	e9d4 2300 	ldrd	r2, r3, [r4]
 80114a2:	441a      	add	r2, r3
 80114a4:	6963      	ldr	r3, [r4, #20]
 80114a6:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 80114aa:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 80114ae:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 80114b2:	68a1      	ldr	r1, [r4, #8]
 80114b4:	ed94 6a08 	vldr	s12, [r4, #32]
 80114b8:	6022      	str	r2, [r4, #0]
 80114ba:	3301      	adds	r3, #1
 80114bc:	6163      	str	r3, [r4, #20]
 80114be:	69a3      	ldr	r3, [r4, #24]
 80114c0:	ee37 7a27 	vadd.f32	s14, s14, s15
 80114c4:	3b01      	subs	r3, #1
 80114c6:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 80114ca:	61a3      	str	r3, [r4, #24]
 80114cc:	6923      	ldr	r3, [r4, #16]
 80114ce:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 80114d2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80114d6:	edd4 6a07 	vldr	s13, [r4, #28]
 80114da:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 80114de:	440b      	add	r3, r1
 80114e0:	68e1      	ldr	r1, [r4, #12]
 80114e2:	6123      	str	r3, [r4, #16]
 80114e4:	ee76 6a86 	vadd.f32	s13, s13, s12
 80114e8:	428b      	cmp	r3, r1
 80114ea:	edc4 6a07 	vstr	s13, [r4, #28]
 80114ee:	db15      	blt.n	801151c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 80114f0:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 80114f4:	ee76 6a26 	vadd.f32	s13, s12, s13
 80114f8:	3201      	adds	r2, #1
 80114fa:	edc4 6a07 	vstr	s13, [r4, #28]
 80114fe:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8011502:	6022      	str	r2, [r4, #0]
 8011504:	ee36 7a87 	vadd.f32	s14, s13, s14
 8011508:	1a5b      	subs	r3, r3, r1
 801150a:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 801150e:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 8011512:	6123      	str	r3, [r4, #16]
 8011514:	ee77 7a27 	vadd.f32	s15, s14, s15
 8011518:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 801151c:	e9d5 2300 	ldrd	r2, r3, [r5]
 8011520:	441a      	add	r2, r3
 8011522:	696b      	ldr	r3, [r5, #20]
 8011524:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 8011528:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 801152c:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 8011530:	68a9      	ldr	r1, [r5, #8]
 8011532:	ed95 6a08 	vldr	s12, [r5, #32]
 8011536:	602a      	str	r2, [r5, #0]
 8011538:	3301      	adds	r3, #1
 801153a:	616b      	str	r3, [r5, #20]
 801153c:	69ab      	ldr	r3, [r5, #24]
 801153e:	ee37 7a27 	vadd.f32	s14, s14, s15
 8011542:	3b01      	subs	r3, #1
 8011544:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 8011548:	61ab      	str	r3, [r5, #24]
 801154a:	692b      	ldr	r3, [r5, #16]
 801154c:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8011550:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8011554:	edd5 6a07 	vldr	s13, [r5, #28]
 8011558:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 801155c:	440b      	add	r3, r1
 801155e:	68e9      	ldr	r1, [r5, #12]
 8011560:	612b      	str	r3, [r5, #16]
 8011562:	ee76 6a86 	vadd.f32	s13, s13, s12
 8011566:	428b      	cmp	r3, r1
 8011568:	edc5 6a07 	vstr	s13, [r5, #28]
 801156c:	db15      	blt.n	801159a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 801156e:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 8011572:	ee76 6a26 	vadd.f32	s13, s12, s13
 8011576:	3201      	adds	r2, #1
 8011578:	edc5 6a07 	vstr	s13, [r5, #28]
 801157c:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 8011580:	602a      	str	r2, [r5, #0]
 8011582:	ee36 7a87 	vadd.f32	s14, s13, s14
 8011586:	1a5b      	subs	r3, r3, r1
 8011588:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 801158c:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 8011590:	612b      	str	r3, [r5, #16]
 8011592:	ee77 7a27 	vadd.f32	s15, s14, s15
 8011596:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 801159a:	3f01      	subs	r7, #1
 801159c:	e757      	b.n	801144e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 801159e:	ad39      	add	r5, sp, #228	; 0xe4
 80115a0:	ac19      	add	r4, sp, #100	; 0x64
 80115a2:	e72d      	b.n	8011400 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 80115a4:	4613      	mov	r3, r2
 80115a6:	e744      	b.n	8011432 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 80115a8:	4613      	mov	r3, r2
 80115aa:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 80115ae:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 80115b0:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 80115b4:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 80115b8:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 80115bc:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 80115c0:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 80115c4:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 80115c8:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 80115cc:	993d      	ldr	r1, [sp, #244]	; 0xf4
 80115ce:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 80115d2:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 80115d6:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 80115da:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 80115de:	960e      	str	r6, [sp, #56]	; 0x38
 80115e0:	469e      	mov	lr, r3
 80115e2:	461f      	mov	r7, r3
 80115e4:	f04f 0900 	mov.w	r9, #0
 80115e8:	2f00      	cmp	r7, #0
 80115ea:	d146      	bne.n	801167a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 80115ec:	449c      	add	ip, r3
 80115ee:	1ad7      	subs	r7, r2, r3
 80115f0:	f1b9 0f00 	cmp.w	r9, #0
 80115f4:	d009      	beq.n	801160a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 80115f6:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 80115fa:	9039      	str	r0, [sp, #228]	; 0xe4
 80115fc:	913d      	str	r1, [sp, #244]	; 0xf4
 80115fe:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 8011602:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 8011606:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 801160a:	991b      	ldr	r1, [sp, #108]	; 0x6c
 801160c:	910e      	str	r1, [sp, #56]	; 0x38
 801160e:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 8011612:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8011616:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 801161a:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 801161e:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 8011622:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8011626:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 801162a:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 801162e:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 8011632:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8011636:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 801163a:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 801163e:	f04f 0800 	mov.w	r8, #0
 8011642:	f1be 0f00 	cmp.w	lr, #0
 8011646:	d030      	beq.n	80116aa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 8011648:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 801164a:	4431      	add	r1, r6
 801164c:	4549      	cmp	r1, r9
 801164e:	4450      	add	r0, sl
 8011650:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8011654:	ee37 7a04 	vadd.f32	s14, s14, s8
 8011658:	ee77 7aa3 	vadd.f32	s15, s15, s7
 801165c:	db08      	blt.n	8011670 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 801165e:	ee77 7a85 	vadd.f32	s15, s15, s10
 8011662:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8011666:	ee37 7a06 	vadd.f32	s14, s14, s12
 801166a:	3001      	adds	r0, #1
 801166c:	eba1 0109 	sub.w	r1, r1, r9
 8011670:	f10e 3eff 	add.w	lr, lr, #4294967295
 8011674:	f04f 0801 	mov.w	r8, #1
 8011678:	e7e3      	b.n	8011642 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 801167a:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 801167c:	4431      	add	r1, r6
 801167e:	4541      	cmp	r1, r8
 8011680:	4450      	add	r0, sl
 8011682:	ee37 7a24 	vadd.f32	s14, s14, s9
 8011686:	ee77 7a84 	vadd.f32	s15, s15, s8
 801168a:	ee76 6aa3 	vadd.f32	s13, s13, s7
 801168e:	db08      	blt.n	80116a2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 8011690:	ee76 6a85 	vadd.f32	s13, s13, s10
 8011694:	ee37 7a25 	vadd.f32	s14, s14, s11
 8011698:	ee77 7a86 	vadd.f32	s15, s15, s12
 801169c:	3001      	adds	r0, #1
 801169e:	eba1 0108 	sub.w	r1, r1, r8
 80116a2:	3f01      	subs	r7, #1
 80116a4:	f04f 0901 	mov.w	r9, #1
 80116a8:	e79e      	b.n	80115e8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 80116aa:	449c      	add	ip, r3
 80116ac:	1aff      	subs	r7, r7, r3
 80116ae:	f1b8 0f00 	cmp.w	r8, #0
 80116b2:	d009      	beq.n	80116c8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 80116b4:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 80116b8:	9019      	str	r0, [sp, #100]	; 0x64
 80116ba:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 80116be:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 80116c2:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 80116c6:	911d      	str	r1, [sp, #116]	; 0x74
 80116c8:	1ad2      	subs	r2, r2, r3
 80116ca:	e6b5      	b.n	8011438 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 80116cc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80116ce:	681b      	ldr	r3, [r3, #0]
 80116d0:	b923      	cbnz	r3, 80116dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80116d2:	4b04      	ldr	r3, [pc, #16]	; (80116e4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 80116d4:	6818      	ldr	r0, [r3, #0]
 80116d6:	6803      	ldr	r3, [r0, #0]
 80116d8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80116da:	4798      	blx	r3
 80116dc:	b05b      	add	sp, #364	; 0x16c
 80116de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80116e2:	bf00      	nop
 80116e4:	2001794c 	.word	0x2001794c

080116e8 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>:
 80116e8:	b570      	push	{r4, r5, r6, lr}
 80116ea:	4604      	mov	r4, r0
 80116ec:	f89d 6014 	ldrb.w	r6, [sp, #20]
 80116f0:	9804      	ldr	r0, [sp, #16]
 80116f2:	6061      	str	r1, [r4, #4]
 80116f4:	2500      	movs	r5, #0
 80116f6:	8025      	strh	r5, [r4, #0]
 80116f8:	7223      	strb	r3, [r4, #8]
 80116fa:	7266      	strb	r6, [r4, #9]
 80116fc:	60e0      	str	r0, [r4, #12]
 80116fe:	8222      	strh	r2, [r4, #16]
 8011700:	8265      	strh	r5, [r4, #18]
 8011702:	82a5      	strh	r5, [r4, #20]
 8011704:	82e5      	strh	r5, [r4, #22]
 8011706:	8325      	strh	r5, [r4, #24]
 8011708:	8365      	strh	r5, [r4, #26]
 801170a:	83a5      	strh	r5, [r4, #28]
 801170c:	77a5      	strb	r5, [r4, #30]
 801170e:	b32e      	cbz	r6, 801175c <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 8011710:	6803      	ldr	r3, [r0, #0]
 8011712:	695b      	ldr	r3, [r3, #20]
 8011714:	4798      	blx	r3
 8011716:	4606      	mov	r6, r0
 8011718:	b300      	cbz	r0, 801175c <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 801171a:	68e0      	ldr	r0, [r4, #12]
 801171c:	6803      	ldr	r3, [r0, #0]
 801171e:	4631      	mov	r1, r6
 8011720:	68db      	ldr	r3, [r3, #12]
 8011722:	4798      	blx	r3
 8011724:	4605      	mov	r5, r0
 8011726:	b1c8      	cbz	r0, 801175c <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 8011728:	7b43      	ldrb	r3, [r0, #13]
 801172a:	7a82      	ldrb	r2, [r0, #10]
 801172c:	005b      	lsls	r3, r3, #1
 801172e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8011732:	4313      	orrs	r3, r2
 8011734:	83a3      	strh	r3, [r4, #28]
 8011736:	7a63      	ldrb	r3, [r4, #9]
 8011738:	2b04      	cmp	r3, #4
 801173a:	d10f      	bne.n	801175c <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 801173c:	68e0      	ldr	r0, [r4, #12]
 801173e:	6803      	ldr	r3, [r0, #0]
 8011740:	462a      	mov	r2, r5
 8011742:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8011744:	4631      	mov	r1, r6
 8011746:	4798      	blx	r3
 8011748:	7b6b      	ldrb	r3, [r5, #13]
 801174a:	005b      	lsls	r3, r3, #1
 801174c:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8011750:	7aab      	ldrb	r3, [r5, #10]
 8011752:	4313      	orrs	r3, r2
 8011754:	4418      	add	r0, r3
 8011756:	8ba3      	ldrh	r3, [r4, #28]
 8011758:	4418      	add	r0, r3
 801175a:	83a0      	strh	r0, [r4, #28]
 801175c:	4620      	mov	r0, r4
 801175e:	bd70      	pop	{r4, r5, r6, pc}

08011760 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 8011760:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011764:	2400      	movs	r4, #0
 8011766:	b085      	sub	sp, #20
 8011768:	4681      	mov	r9, r0
 801176a:	4688      	mov	r8, r1
 801176c:	4692      	mov	sl, r2
 801176e:	469b      	mov	fp, r3
 8011770:	4627      	mov	r7, r4
 8011772:	4625      	mov	r5, r4
 8011774:	4626      	mov	r6, r4
 8011776:	4554      	cmp	r4, sl
 8011778:	da2a      	bge.n	80117d0 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 801177a:	2300      	movs	r3, #0
 801177c:	9303      	str	r3, [sp, #12]
 801177e:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8011782:	429d      	cmp	r5, r3
 8011784:	d004      	beq.n	8011790 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 8011786:	f242 030b 	movw	r3, #8203	; 0x200b
 801178a:	429d      	cmp	r5, r3
 801178c:	bf18      	it	ne
 801178e:	462f      	movne	r7, r5
 8011790:	ab03      	add	r3, sp, #12
 8011792:	4642      	mov	r2, r8
 8011794:	4659      	mov	r1, fp
 8011796:	4648      	mov	r0, r9
 8011798:	f002 ff7e 	bl	8014698 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801179c:	4605      	mov	r5, r0
 801179e:	b1b8      	cbz	r0, 80117d0 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 80117a0:	280a      	cmp	r0, #10
 80117a2:	d015      	beq.n	80117d0 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 80117a4:	9a03      	ldr	r2, [sp, #12]
 80117a6:	b18a      	cbz	r2, 80117cc <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 80117a8:	7b50      	ldrb	r0, [r2, #13]
 80117aa:	7a93      	ldrb	r3, [r2, #10]
 80117ac:	8895      	ldrh	r5, [r2, #4]
 80117ae:	0040      	lsls	r0, r0, #1
 80117b0:	f400 7080 	and.w	r0, r0, #256	; 0x100
 80117b4:	4303      	orrs	r3, r0
 80117b6:	9301      	str	r3, [sp, #4]
 80117b8:	f8d8 3000 	ldr.w	r3, [r8]
 80117bc:	4639      	mov	r1, r7
 80117be:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80117c0:	4640      	mov	r0, r8
 80117c2:	4798      	blx	r3
 80117c4:	9b01      	ldr	r3, [sp, #4]
 80117c6:	4418      	add	r0, r3
 80117c8:	4406      	add	r6, r0
 80117ca:	b2b6      	uxth	r6, r6
 80117cc:	3401      	adds	r4, #1
 80117ce:	e7d2      	b.n	8011776 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 80117d0:	4630      	mov	r0, r6
 80117d2:	b005      	add	sp, #20
 80117d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080117d8 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 80117d8:	2a02      	cmp	r2, #2
 80117da:	b530      	push	{r4, r5, lr}
 80117dc:	d011      	beq.n	8011802 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 80117de:	2a03      	cmp	r2, #3
 80117e0:	d01c      	beq.n	801181c <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 80117e2:	2a01      	cmp	r2, #1
 80117e4:	d10c      	bne.n	8011800 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 80117e6:	888b      	ldrh	r3, [r1, #4]
 80117e8:	8801      	ldrh	r1, [r0, #0]
 80117ea:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 80117ee:	8844      	ldrh	r4, [r0, #2]
 80117f0:	8004      	strh	r4, [r0, #0]
 80117f2:	1a5b      	subs	r3, r3, r1
 80117f4:	1a9b      	subs	r3, r3, r2
 80117f6:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 80117fa:	8043      	strh	r3, [r0, #2]
 80117fc:	8081      	strh	r1, [r0, #4]
 80117fe:	80c2      	strh	r2, [r0, #6]
 8011800:	bd30      	pop	{r4, r5, pc}
 8011802:	88cb      	ldrh	r3, [r1, #6]
 8011804:	8842      	ldrh	r2, [r0, #2]
 8011806:	1a9b      	subs	r3, r3, r2
 8011808:	88c2      	ldrh	r2, [r0, #6]
 801180a:	1a9b      	subs	r3, r3, r2
 801180c:	888a      	ldrh	r2, [r1, #4]
 801180e:	8801      	ldrh	r1, [r0, #0]
 8011810:	8043      	strh	r3, [r0, #2]
 8011812:	1a52      	subs	r2, r2, r1
 8011814:	8881      	ldrh	r1, [r0, #4]
 8011816:	1a52      	subs	r2, r2, r1
 8011818:	8002      	strh	r2, [r0, #0]
 801181a:	e7f1      	b.n	8011800 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 801181c:	88cb      	ldrh	r3, [r1, #6]
 801181e:	8841      	ldrh	r1, [r0, #2]
 8011820:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 8011824:	f9b0 5000 	ldrsh.w	r5, [r0]
 8011828:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 801182c:	8045      	strh	r5, [r0, #2]
 801182e:	1a5b      	subs	r3, r3, r1
 8011830:	1a9b      	subs	r3, r3, r2
 8011832:	8003      	strh	r3, [r0, #0]
 8011834:	8082      	strh	r2, [r0, #4]
 8011836:	80c4      	strh	r4, [r0, #6]
 8011838:	e7e2      	b.n	8011800 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

0801183a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 801183a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801183e:	b09f      	sub	sp, #124	; 0x7c
 8011840:	9116      	str	r1, [sp, #88]	; 0x58
 8011842:	9317      	str	r3, [sp, #92]	; 0x5c
 8011844:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8011846:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8011848:	8809      	ldrh	r1, [r1, #0]
 801184a:	889b      	ldrh	r3, [r3, #4]
 801184c:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 8011850:	9212      	str	r2, [sp, #72]	; 0x48
 8011852:	440b      	add	r3, r1
 8011854:	b21b      	sxth	r3, r3
 8011856:	9310      	str	r3, [sp, #64]	; 0x40
 8011858:	f8d8 3000 	ldr.w	r3, [r8]
 801185c:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 8011860:	7a59      	ldrb	r1, [r3, #9]
 8011862:	7a1b      	ldrb	r3, [r3, #8]
 8011864:	9011      	str	r0, [sp, #68]	; 0x44
 8011866:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 801186a:	9114      	str	r1, [sp, #80]	; 0x50
 801186c:	9315      	str	r3, [sp, #84]	; 0x54
 801186e:	f9bd 50a0 	ldrsh.w	r5, [sp, #160]	; 0xa0
 8011872:	2a00      	cmp	r2, #0
 8011874:	d06a      	beq.n	801194c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 8011876:	f898 3010 	ldrb.w	r3, [r8, #16]
 801187a:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801187c:	2b04      	cmp	r3, #4
 801187e:	bf14      	ite	ne
 8011880:	2301      	movne	r3, #1
 8011882:	2302      	moveq	r3, #2
 8011884:	4413      	add	r3, r2
 8011886:	f04f 0900 	mov.w	r9, #0
 801188a:	930f      	str	r3, [sp, #60]	; 0x3c
 801188c:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 8011890:	464c      	mov	r4, r9
 8011892:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 8011896:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 801189a:	4293      	cmp	r3, r2
 801189c:	f280 808f 	bge.w	80119be <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 80118a0:	2300      	movs	r3, #0
 80118a2:	e9cd 331c 	strd	r3, r3, [sp, #112]	; 0x70
 80118a6:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
 80118aa:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 80118ae:	429c      	cmp	r4, r3
 80118b0:	d006      	beq.n	80118c0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x86>
 80118b2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80118b4:	f242 020b 	movw	r2, #8203	; 0x200b
 80118b8:	4294      	cmp	r4, r2
 80118ba:	bf18      	it	ne
 80118bc:	4623      	movne	r3, r4
 80118be:	930d      	str	r3, [sp, #52]	; 0x34
 80118c0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80118c2:	992d      	ldr	r1, [sp, #180]	; 0xb4
 80118c4:	f8d8 2000 	ldr.w	r2, [r8]
 80118c8:	428b      	cmp	r3, r1
 80118ca:	db41      	blt.n	8011950 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 80118cc:	6813      	ldr	r3, [r2, #0]
 80118ce:	4610      	mov	r0, r2
 80118d0:	695b      	ldr	r3, [r3, #20]
 80118d2:	4798      	blx	r3
 80118d4:	4604      	mov	r4, r0
 80118d6:	f8d8 0000 	ldr.w	r0, [r8]
 80118da:	6803      	ldr	r3, [r0, #0]
 80118dc:	aa1d      	add	r2, sp, #116	; 0x74
 80118de:	689e      	ldr	r6, [r3, #8]
 80118e0:	4621      	mov	r1, r4
 80118e2:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 80118e6:	47b0      	blx	r6
 80118e8:	901c      	str	r0, [sp, #112]	; 0x70
 80118ea:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 80118ee:	429c      	cmp	r4, r3
 80118f0:	f000 80e9 	beq.w	8011ac6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 80118f4:	f242 030b 	movw	r3, #8203	; 0x200b
 80118f8:	429c      	cmp	r4, r3
 80118fa:	f000 80e4 	beq.w	8011ac6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 80118fe:	2c00      	cmp	r4, #0
 8011900:	f000 80f6 	beq.w	8011af0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b6>
 8011904:	2c0a      	cmp	r4, #10
 8011906:	d060      	beq.n	80119ca <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 8011908:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 801190a:	b36a      	cbz	r2, 8011968 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 801190c:	8894      	ldrh	r4, [r2, #4]
 801190e:	f1bb 0f00 	cmp.w	fp, #0
 8011912:	d03b      	beq.n	801198c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 8011914:	f892 900d 	ldrb.w	r9, [r2, #13]
 8011918:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801191c:	f409 7380 	and.w	r3, r9, #256	; 0x100
 8011920:	f892 900a 	ldrb.w	r9, [r2, #10]
 8011924:	f1bb 0f01 	cmp.w	fp, #1
 8011928:	ea49 0903 	orr.w	r9, r9, r3
 801192c:	d134      	bne.n	8011998 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15e>
 801192e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8011930:	eba5 0509 	sub.w	r5, r5, r9
 8011934:	2b00      	cmp	r3, #0
 8011936:	d14f      	bne.n	80119d8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 8011938:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801193a:	eb09 0305 	add.w	r3, r9, r5
 801193e:	4413      	add	r3, r2
 8011940:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8011942:	f9b2 2000 	ldrsh.w	r2, [r2]
 8011946:	4293      	cmp	r3, r2
 8011948:	da51      	bge.n	80119ee <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 801194a:	e038      	b.n	80119be <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 801194c:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801194e:	e79a      	b.n	8011886 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
 8011950:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8011954:	9301      	str	r3, [sp, #4]
 8011956:	ab1d      	add	r3, sp, #116	; 0x74
 8011958:	9300      	str	r3, [sp, #0]
 801195a:	4659      	mov	r1, fp
 801195c:	ab1c      	add	r3, sp, #112	; 0x70
 801195e:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8011960:	f002 fee3 	bl	801472a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 8011964:	4604      	mov	r4, r0
 8011966:	e7c0      	b.n	80118ea <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 8011968:	f8d8 0000 	ldr.w	r0, [r8]
 801196c:	6803      	ldr	r3, [r0, #0]
 801196e:	691b      	ldr	r3, [r3, #16]
 8011970:	4798      	blx	r3
 8011972:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8011976:	4298      	cmp	r0, r3
 8011978:	f000 80a5 	beq.w	8011ac6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 801197c:	f242 030b 	movw	r3, #8203	; 0x200b
 8011980:	4298      	cmp	r0, r3
 8011982:	f000 80a0 	beq.w	8011ac6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 8011986:	f1bb 0f00 	cmp.w	fp, #0
 801198a:	d100      	bne.n	801198e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
 801198c:	444d      	add	r5, r9
 801198e:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8011990:	2a00      	cmp	r2, #0
 8011992:	d1bf      	bne.n	8011914 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 8011994:	4691      	mov	r9, r2
 8011996:	e096      	b.n	8011ac6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 8011998:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801199a:	2b00      	cmp	r3, #0
 801199c:	f000 80aa 	beq.w	8011af4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 80119a0:	f1bb 0f00 	cmp.w	fp, #0
 80119a4:	d118      	bne.n	80119d8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 80119a6:	f8d8 0000 	ldr.w	r0, [r8]
 80119aa:	990d      	ldr	r1, [sp, #52]	; 0x34
 80119ac:	6803      	ldr	r3, [r0, #0]
 80119ae:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80119b0:	4798      	blx	r3
 80119b2:	4405      	add	r5, r0
 80119b4:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80119b6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80119b8:	1aeb      	subs	r3, r5, r3
 80119ba:	4293      	cmp	r3, r2
 80119bc:	dd17      	ble.n	80119ee <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 80119be:	2c00      	cmp	r4, #0
 80119c0:	f000 8096 	beq.w	8011af0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b6>
 80119c4:	2c0a      	cmp	r4, #10
 80119c6:	f040 8084 	bne.w	8011ad2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
 80119ca:	240a      	movs	r4, #10
 80119cc:	fab4 f084 	clz	r0, r4
 80119d0:	0940      	lsrs	r0, r0, #5
 80119d2:	b01f      	add	sp, #124	; 0x7c
 80119d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80119d8:	f8d8 0000 	ldr.w	r0, [r8]
 80119dc:	990d      	ldr	r1, [sp, #52]	; 0x34
 80119de:	6803      	ldr	r3, [r0, #0]
 80119e0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80119e2:	4798      	blx	r3
 80119e4:	f1bb 0f01 	cmp.w	fp, #1
 80119e8:	eba5 0500 	sub.w	r5, r5, r0
 80119ec:	d0a4      	beq.n	8011938 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 80119ee:	981c      	ldr	r0, [sp, #112]	; 0x70
 80119f0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80119f2:	f990 1009 	ldrsb.w	r1, [r0, #9]
 80119f6:	f9b3 6000 	ldrsh.w	r6, [r3]
 80119fa:	7b43      	ldrb	r3, [r0, #13]
 80119fc:	015b      	lsls	r3, r3, #5
 80119fe:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8011a02:	7983      	ldrb	r3, [r0, #6]
 8011a04:	4429      	add	r1, r5
 8011a06:	4313      	orrs	r3, r2
 8011a08:	440b      	add	r3, r1
 8011a0a:	42b3      	cmp	r3, r6
 8011a0c:	db5b      	blt.n	8011ac6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 8011a0e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011a10:	4299      	cmp	r1, r3
 8011a12:	da58      	bge.n	8011ac6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 8011a14:	f8d8 0000 	ldr.w	r0, [r8]
 8011a18:	6803      	ldr	r3, [r0, #0]
 8011a1a:	42ae      	cmp	r6, r5
 8011a1c:	bfc8      	it	gt
 8011a1e:	1b76      	subgt	r6, r6, r5
 8011a20:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011a22:	bfcc      	ite	gt
 8011a24:	b2b6      	uxthgt	r6, r6
 8011a26:	2600      	movle	r6, #0
 8011a28:	4798      	blx	r3
 8011a2a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8011a2c:	7b5a      	ldrb	r2, [r3, #13]
 8011a2e:	00d1      	lsls	r1, r2, #3
 8011a30:	f401 7780 	and.w	r7, r1, #256	; 0x100
 8011a34:	7a19      	ldrb	r1, [r3, #8]
 8011a36:	4339      	orrs	r1, r7
 8011a38:	0657      	lsls	r7, r2, #25
 8011a3a:	9f17      	ldr	r7, [sp, #92]	; 0x5c
 8011a3c:	bf44      	itt	mi
 8011a3e:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 8011a42:	b209      	sxthmi	r1, r1
 8011a44:	19c7      	adds	r7, r0, r7
 8011a46:	1a7f      	subs	r7, r7, r1
 8011a48:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8011a4a:	b2bf      	uxth	r7, r7
 8011a4c:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 8011a50:	fa0f fa87 	sxth.w	sl, r7
 8011a54:	4551      	cmp	r1, sl
 8011a56:	dd3a      	ble.n	8011ace <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x294>
 8011a58:	0112      	lsls	r2, r2, #4
 8011a5a:	79d8      	ldrb	r0, [r3, #7]
 8011a5c:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8011a60:	4302      	orrs	r2, r0
 8011a62:	4492      	add	sl, r2
 8011a64:	4551      	cmp	r1, sl
 8011a66:	dc2e      	bgt.n	8011ac6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 8011a68:	1bcf      	subs	r7, r1, r7
 8011a6a:	b2bf      	uxth	r7, r7
 8011a6c:	468a      	mov	sl, r1
 8011a6e:	9319      	str	r3, [sp, #100]	; 0x64
 8011a70:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8011a72:	f8d8 0000 	ldr.w	r0, [r8]
 8011a76:	681a      	ldr	r2, [r3, #0]
 8011a78:	6801      	ldr	r1, [r0, #0]
 8011a7a:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 8011a7c:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8011a7e:	9313      	str	r3, [sp, #76]	; 0x4c
 8011a80:	9218      	str	r2, [sp, #96]	; 0x60
 8011a82:	6b89      	ldr	r1, [r1, #56]	; 0x38
 8011a84:	4788      	blx	r1
 8011a86:	f898 1006 	ldrb.w	r1, [r8, #6]
 8011a8a:	910b      	str	r1, [sp, #44]	; 0x2c
 8011a8c:	f898 100e 	ldrb.w	r1, [r8, #14]
 8011a90:	910a      	str	r1, [sp, #40]	; 0x28
 8011a92:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 8011a96:	9109      	str	r1, [sp, #36]	; 0x24
 8011a98:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8011a9a:	f8d8 1008 	ldr.w	r1, [r8, #8]
 8011a9e:	9305      	str	r3, [sp, #20]
 8011aa0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8011aa2:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8011aa4:	9206      	str	r2, [sp, #24]
 8011aa6:	e9cd 0107 	strd	r0, r1, [sp, #28]
 8011aaa:	e9cd 7303 	strd	r7, r3, [sp, #12]
 8011aae:	e9cd a601 	strd	sl, r6, [sp, #4]
 8011ab2:	442e      	add	r6, r5
 8011ab4:	b236      	sxth	r6, r6
 8011ab6:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8011ab8:	9600      	str	r6, [sp, #0]
 8011aba:	681a      	ldr	r2, [r3, #0]
 8011abc:	9916      	ldr	r1, [sp, #88]	; 0x58
 8011abe:	685b      	ldr	r3, [r3, #4]
 8011ac0:	9811      	ldr	r0, [sp, #68]	; 0x44
 8011ac2:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8011ac4:	47b0      	blx	r6
 8011ac6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011ac8:	3301      	adds	r3, #1
 8011aca:	930e      	str	r3, [sp, #56]	; 0x38
 8011acc:	e6e3      	b.n	8011896 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
 8011ace:	2700      	movs	r7, #0
 8011ad0:	e7cd      	b.n	8011a6e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
 8011ad2:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8011ad4:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8011ad6:	3501      	adds	r5, #1
 8011ad8:	429d      	cmp	r5, r3
 8011ada:	f6bf af77 	bge.w	80119cc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 8011ade:	4659      	mov	r1, fp
 8011ae0:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8011ae2:	f7f5 f8d1 	bl	8006c88 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8011ae6:	4604      	mov	r4, r0
 8011ae8:	b110      	cbz	r0, 8011af0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b6>
 8011aea:	280a      	cmp	r0, #10
 8011aec:	d1f2      	bne.n	8011ad4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29a>
 8011aee:	e76c      	b.n	80119ca <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 8011af0:	2400      	movs	r4, #0
 8011af2:	e76b      	b.n	80119cc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 8011af4:	f1bb 0f00 	cmp.w	fp, #0
 8011af8:	f43f af5c 	beq.w	80119b4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17a>
 8011afc:	e777      	b.n	80119ee <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>

08011afe <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 8011afe:	b530      	push	{r4, r5, lr}
 8011b00:	8a44      	ldrh	r4, [r0, #18]
 8011b02:	8ac5      	ldrh	r5, [r0, #22]
 8011b04:	82c3      	strh	r3, [r0, #22]
 8011b06:	442c      	add	r4, r5
 8011b08:	1ae4      	subs	r4, r4, r3
 8011b0a:	8244      	strh	r4, [r0, #18]
 8011b0c:	8b03      	ldrh	r3, [r0, #24]
 8011b0e:	8a84      	ldrh	r4, [r0, #20]
 8011b10:	4422      	add	r2, r4
 8011b12:	440c      	add	r4, r1
 8011b14:	1a59      	subs	r1, r3, r1
 8011b16:	8342      	strh	r2, [r0, #26]
 8011b18:	8284      	strh	r4, [r0, #20]
 8011b1a:	8301      	strh	r1, [r0, #24]
 8011b1c:	bd30      	pop	{r4, r5, pc}

08011b1e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>:
 8011b1e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011b22:	7a43      	ldrb	r3, [r0, #9]
 8011b24:	1eda      	subs	r2, r3, #3
 8011b26:	b087      	sub	sp, #28
 8011b28:	4604      	mov	r4, r0
 8011b2a:	b2d2      	uxtb	r2, r2
 8011b2c:	460f      	mov	r7, r1
 8011b2e:	2900      	cmp	r1, #0
 8011b30:	d036      	beq.n	8011ba0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x82>
 8011b32:	2a01      	cmp	r2, #1
 8011b34:	d932      	bls.n	8011b9c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x7e>
 8011b36:	1e58      	subs	r0, r3, #1
 8011b38:	f1d0 0b00 	rsbs	fp, r0, #0
 8011b3c:	eb4b 0b00 	adc.w	fp, fp, r0
 8011b40:	1e99      	subs	r1, r3, #2
 8011b42:	424b      	negs	r3, r1
 8011b44:	414b      	adcs	r3, r1
 8011b46:	9303      	str	r3, [sp, #12]
 8011b48:	2300      	movs	r3, #0
 8011b4a:	e9cd 3301 	strd	r3, r3, [sp, #4]
 8011b4e:	2500      	movs	r5, #0
 8011b50:	8265      	strh	r5, [r4, #18]
 8011b52:	82a5      	strh	r5, [r4, #20]
 8011b54:	46a9      	mov	r9, r5
 8011b56:	f242 0a0b 	movw	sl, #8203	; 0x200b
 8011b5a:	2300      	movs	r3, #0
 8011b5c:	9305      	str	r3, [sp, #20]
 8011b5e:	8823      	ldrh	r3, [r4, #0]
 8011b60:	2b20      	cmp	r3, #32
 8011b62:	d02b      	beq.n	8011bbc <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x9e>
 8011b64:	eba3 020a 	sub.w	r2, r3, sl
 8011b68:	4256      	negs	r6, r2
 8011b6a:	4156      	adcs	r6, r2
 8011b6c:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 8011b70:	4293      	cmp	r3, r2
 8011b72:	d004      	beq.n	8011b7e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 8011b74:	4553      	cmp	r3, sl
 8011b76:	bf16      	itet	ne
 8011b78:	4699      	movne	r9, r3
 8011b7a:	2601      	moveq	r6, #1
 8011b7c:	2600      	movne	r6, #0
 8011b7e:	ab05      	add	r3, sp, #20
 8011b80:	68e2      	ldr	r2, [r4, #12]
 8011b82:	7a21      	ldrb	r1, [r4, #8]
 8011b84:	6860      	ldr	r0, [r4, #4]
 8011b86:	f002 fd87 	bl	8014698 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8011b8a:	8020      	strh	r0, [r4, #0]
 8011b8c:	b9c8      	cbnz	r0, 8011bc2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xa4>
 8011b8e:	8b22      	ldrh	r2, [r4, #24]
 8011b90:	2300      	movs	r3, #0
 8011b92:	4611      	mov	r1, r2
 8011b94:	4620      	mov	r0, r4
 8011b96:	f7ff ffb2 	bl	8011afe <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8011b9a:	e066      	b.n	8011c6a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 8011b9c:	468b      	mov	fp, r1
 8011b9e:	e7cf      	b.n	8011b40 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x22>
 8011ba0:	3b01      	subs	r3, #1
 8011ba2:	2a01      	cmp	r2, #1
 8011ba4:	bf8c      	ite	hi
 8011ba6:	2200      	movhi	r2, #0
 8011ba8:	2201      	movls	r2, #1
 8011baa:	2b01      	cmp	r3, #1
 8011bac:	bf8c      	ite	hi
 8011bae:	2300      	movhi	r3, #0
 8011bb0:	2301      	movls	r3, #1
 8011bb2:	9202      	str	r2, [sp, #8]
 8011bb4:	9301      	str	r3, [sp, #4]
 8011bb6:	9103      	str	r1, [sp, #12]
 8011bb8:	468b      	mov	fp, r1
 8011bba:	e7c8      	b.n	8011b4e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x30>
 8011bbc:	4699      	mov	r9, r3
 8011bbe:	2601      	movs	r6, #1
 8011bc0:	e7dd      	b.n	8011b7e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 8011bc2:	8ae3      	ldrh	r3, [r4, #22]
 8011bc4:	280a      	cmp	r0, #10
 8011bc6:	f103 0301 	add.w	r3, r3, #1
 8011bca:	82e3      	strh	r3, [r4, #22]
 8011bcc:	d0df      	beq.n	8011b8e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x70>
 8011bce:	9a05      	ldr	r2, [sp, #20]
 8011bd0:	bb42      	cbnz	r2, 8011c24 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x106>
 8011bd2:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8011bd6:	4298      	cmp	r0, r3
 8011bd8:	d001      	beq.n	8011bde <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 8011bda:	4550      	cmp	r0, sl
 8011bdc:	d1bd      	bne.n	8011b5a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8011bde:	8823      	ldrh	r3, [r4, #0]
 8011be0:	8b21      	ldrh	r1, [r4, #24]
 8011be2:	2b20      	cmp	r3, #32
 8011be4:	d001      	beq.n	8011bea <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xcc>
 8011be6:	4553      	cmp	r3, sl
 8011be8:	d131      	bne.n	8011c4e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x130>
 8011bea:	2e00      	cmp	r6, #0
 8011bec:	bf0a      	itet	eq
 8011bee:	460d      	moveq	r5, r1
 8011bf0:	4630      	movne	r0, r6
 8011bf2:	2001      	moveq	r0, #1
 8011bf4:	440a      	add	r2, r1
 8011bf6:	8aa3      	ldrh	r3, [r4, #20]
 8011bf8:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 8011bfc:	b292      	uxth	r2, r2
 8011bfe:	8322      	strh	r2, [r4, #24]
 8011c00:	4413      	add	r3, r2
 8011c02:	2f00      	cmp	r7, #0
 8011c04:	d03a      	beq.n	8011c7c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x15e>
 8011c06:	f1bb 0f00 	cmp.w	fp, #0
 8011c0a:	d102      	bne.n	8011c12 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xf4>
 8011c0c:	9903      	ldr	r1, [sp, #12]
 8011c0e:	b301      	cbz	r1, 8011c52 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 8011c10:	b1f8      	cbz	r0, 8011c52 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 8011c12:	8ba1      	ldrh	r1, [r4, #28]
 8011c14:	4419      	add	r1, r3
 8011c16:	458c      	cmp	ip, r1
 8011c18:	da2a      	bge.n	8011c70 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 8011c1a:	8a61      	ldrh	r1, [r4, #18]
 8011c1c:	b341      	cbz	r1, 8011c70 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 8011c1e:	4563      	cmp	r3, ip
 8011c20:	dd9b      	ble.n	8011b5a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8011c22:	e01c      	b.n	8011c5e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x140>
 8011c24:	8893      	ldrh	r3, [r2, #4]
 8011c26:	8023      	strh	r3, [r4, #0]
 8011c28:	f892 800d 	ldrb.w	r8, [r2, #13]
 8011c2c:	ea4f 0848 	mov.w	r8, r8, lsl #1
 8011c30:	f408 7080 	and.w	r0, r8, #256	; 0x100
 8011c34:	f892 800a 	ldrb.w	r8, [r2, #10]
 8011c38:	ea48 0800 	orr.w	r8, r8, r0
 8011c3c:	68e0      	ldr	r0, [r4, #12]
 8011c3e:	6803      	ldr	r3, [r0, #0]
 8011c40:	4649      	mov	r1, r9
 8011c42:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8011c44:	4798      	blx	r3
 8011c46:	eb08 0200 	add.w	r2, r8, r0
 8011c4a:	b292      	uxth	r2, r2
 8011c4c:	e7c7      	b.n	8011bde <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 8011c4e:	2000      	movs	r0, #0
 8011c50:	e7d0      	b.n	8011bf4 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xd6>
 8011c52:	4563      	cmp	r3, ip
 8011c54:	dd81      	ble.n	8011b5a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8011c56:	8a63      	ldrh	r3, [r4, #18]
 8011c58:	2b00      	cmp	r3, #0
 8011c5a:	f43f af7e 	beq.w	8011b5a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8011c5e:	2301      	movs	r3, #1
 8011c60:	77a3      	strb	r3, [r4, #30]
 8011c62:	8ba2      	ldrh	r2, [r4, #28]
 8011c64:	8b63      	ldrh	r3, [r4, #26]
 8011c66:	4413      	add	r3, r2
 8011c68:	8363      	strh	r3, [r4, #26]
 8011c6a:	b007      	add	sp, #28
 8011c6c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011c70:	2300      	movs	r3, #0
 8011c72:	4611      	mov	r1, r2
 8011c74:	4620      	mov	r0, r4
 8011c76:	f7ff ff42 	bl	8011afe <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8011c7a:	e76e      	b.n	8011b5a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8011c7c:	4563      	cmp	r3, ip
 8011c7e:	dd14      	ble.n	8011caa <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x18c>
 8011c80:	9b02      	ldr	r3, [sp, #8]
 8011c82:	b113      	cbz	r3, 8011c8a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x16c>
 8011c84:	2301      	movs	r3, #1
 8011c86:	460a      	mov	r2, r1
 8011c88:	e783      	b.n	8011b92 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x74>
 8011c8a:	9b01      	ldr	r3, [sp, #4]
 8011c8c:	2b00      	cmp	r3, #0
 8011c8e:	f43f af64 	beq.w	8011b5a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8011c92:	2800      	cmp	r0, #0
 8011c94:	f47f af61 	bne.w	8011b5a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8011c98:	b116      	cbz	r6, 8011ca0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x182>
 8011c9a:	2301      	movs	r3, #1
 8011c9c:	462a      	mov	r2, r5
 8011c9e:	e779      	b.n	8011b94 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x76>
 8011ca0:	8a63      	ldrh	r3, [r4, #18]
 8011ca2:	2b00      	cmp	r3, #0
 8011ca4:	f43f af59 	beq.w	8011b5a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8011ca8:	e7df      	b.n	8011c6a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 8011caa:	2800      	cmp	r0, #0
 8011cac:	f47f af55 	bne.w	8011b5a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8011cb0:	2e00      	cmp	r6, #0
 8011cb2:	f43f af52 	beq.w	8011b5a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8011cb6:	2301      	movs	r3, #1
 8011cb8:	462a      	mov	r2, r5
 8011cba:	e7db      	b.n	8011c74 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x156>

08011cbc <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 8011cbc:	b530      	push	{r4, r5, lr}
 8011cbe:	4605      	mov	r5, r0
 8011cc0:	b08b      	sub	sp, #44	; 0x2c
 8011cc2:	b191      	cbz	r1, 8011cea <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x2e>
 8011cc4:	e9cd 3100 	strd	r3, r1, [sp]
 8011cc8:	4613      	mov	r3, r2
 8011cca:	4601      	mov	r1, r0
 8011ccc:	f8bd 2038 	ldrh.w	r2, [sp, #56]	; 0x38
 8011cd0:	a802      	add	r0, sp, #8
 8011cd2:	f7ff fd09 	bl	80116e8 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 8011cd6:	2401      	movs	r4, #1
 8011cd8:	2100      	movs	r1, #0
 8011cda:	a802      	add	r0, sp, #8
 8011cdc:	f7ff ff1f 	bl	8011b1e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 8011ce0:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8011ce4:	b163      	cbz	r3, 8011d00 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 8011ce6:	3401      	adds	r4, #1
 8011ce8:	e7f6      	b.n	8011cd8 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x1c>
 8011cea:	f002 fda3 	bl	8014834 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8011cee:	2401      	movs	r4, #1
 8011cf0:	280a      	cmp	r0, #10
 8011cf2:	4628      	mov	r0, r5
 8011cf4:	bf08      	it	eq
 8011cf6:	3401      	addeq	r4, #1
 8011cf8:	f002 fd9c 	bl	8014834 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8011cfc:	2800      	cmp	r0, #0
 8011cfe:	d1f7      	bne.n	8011cf0 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 8011d00:	b2a0      	uxth	r0, r4
 8011d02:	b00b      	add	sp, #44	; 0x2c
 8011d04:	bd30      	pop	{r4, r5, pc}

08011d06 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 8011d06:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011d0a:	b0e5      	sub	sp, #404	; 0x194
 8011d0c:	4689      	mov	r9, r1
 8011d0e:	f8dd a1b8 	ldr.w	sl, [sp, #440]	; 0x1b8
 8011d12:	900a      	str	r0, [sp, #40]	; 0x28
 8011d14:	461c      	mov	r4, r3
 8011d16:	f1ba 0f00 	cmp.w	sl, #0
 8011d1a:	f000 80b4 	beq.w	8011e86 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 8011d1e:	681b      	ldr	r3, [r3, #0]
 8011d20:	2b00      	cmp	r3, #0
 8011d22:	f000 80b0 	beq.w	8011e86 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 8011d26:	7ba3      	ldrb	r3, [r4, #14]
 8011d28:	2b00      	cmp	r3, #0
 8011d2a:	f000 80ac 	beq.w	8011e86 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 8011d2e:	6810      	ldr	r0, [r2, #0]
 8011d30:	6851      	ldr	r1, [r2, #4]
 8011d32:	f9b9 2004 	ldrsh.w	r2, [r9, #4]
 8011d36:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 8011d3a:	f10d 0834 	add.w	r8, sp, #52	; 0x34
 8011d3e:	4643      	mov	r3, r8
 8011d40:	c303      	stmia	r3!, {r0, r1}
 8011d42:	2500      	movs	r5, #0
 8011d44:	f9b9 3006 	ldrsh.w	r3, [r9, #6]
 8011d48:	79a2      	ldrb	r2, [r4, #6]
 8011d4a:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 8011d4e:	a90f      	add	r1, sp, #60	; 0x3c
 8011d50:	4640      	mov	r0, r8
 8011d52:	950f      	str	r5, [sp, #60]	; 0x3c
 8011d54:	f7ff fd40 	bl	80117d8 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8011d58:	a90f      	add	r1, sp, #60	; 0x3c
 8011d5a:	4608      	mov	r0, r1
 8011d5c:	79a2      	ldrb	r2, [r4, #6]
 8011d5e:	af19      	add	r7, sp, #100	; 0x64
 8011d60:	f7ff fd3a 	bl	80117d8 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8011d64:	4638      	mov	r0, r7
 8011d66:	f002 f93a 	bl	8013fde <_ZN8touchgfx12TextProviderC1Ev>
 8011d6a:	6820      	ldr	r0, [r4, #0]
 8011d6c:	6803      	ldr	r3, [r0, #0]
 8011d6e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8011d70:	4798      	blx	r3
 8011d72:	4606      	mov	r6, r0
 8011d74:	6820      	ldr	r0, [r4, #0]
 8011d76:	6803      	ldr	r3, [r0, #0]
 8011d78:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8011d7a:	4798      	blx	r3
 8011d7c:	4633      	mov	r3, r6
 8011d7e:	9000      	str	r0, [sp, #0]
 8011d80:	9a6f      	ldr	r2, [sp, #444]	; 0x1bc
 8011d82:	4651      	mov	r1, sl
 8011d84:	4638      	mov	r0, r7
 8011d86:	f002 f985 	bl	8014094 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8011d8a:	6820      	ldr	r0, [r4, #0]
 8011d8c:	7923      	ldrb	r3, [r4, #4]
 8011d8e:	9308      	str	r3, [sp, #32]
 8011d90:	6803      	ldr	r3, [r0, #0]
 8011d92:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8011d94:	4798      	blx	r3
 8011d96:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8011d9a:	181e      	adds	r6, r3, r0
 8011d9c:	42ae      	cmp	r6, r5
 8011d9e:	dd06      	ble.n	8011dae <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xa8>
 8011da0:	f9b8 2002 	ldrsh.w	r2, [r8, #2]
 8011da4:	4282      	cmp	r2, r0
 8011da6:	bfa4      	itt	ge
 8011da8:	189d      	addge	r5, r3, r2
 8011daa:	fb95 f5f6 	sdivge	r5, r5, r6
 8011dae:	a832      	add	r0, sp, #200	; 0xc8
 8011db0:	f002 f915 	bl	8013fde <_ZN8touchgfx12TextProviderC1Ev>
 8011db4:	7c23      	ldrb	r3, [r4, #16]
 8011db6:	b17b      	cbz	r3, 8011dd8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xd2>
 8011db8:	6820      	ldr	r0, [r4, #0]
 8011dba:	6803      	ldr	r3, [r0, #0]
 8011dbc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8011dbe:	4798      	blx	r3
 8011dc0:	4683      	mov	fp, r0
 8011dc2:	6820      	ldr	r0, [r4, #0]
 8011dc4:	6803      	ldr	r3, [r0, #0]
 8011dc6:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8011dc8:	4798      	blx	r3
 8011dca:	465b      	mov	r3, fp
 8011dcc:	9000      	str	r0, [sp, #0]
 8011dce:	9a6f      	ldr	r2, [sp, #444]	; 0x1bc
 8011dd0:	4651      	mov	r1, sl
 8011dd2:	a832      	add	r0, sp, #200	; 0xc8
 8011dd4:	f002 f95e 	bl	8014094 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8011dd8:	7be1      	ldrb	r1, [r4, #15]
 8011dda:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 8011dde:	7963      	ldrb	r3, [r4, #5]
 8011de0:	1a52      	subs	r2, r2, r1
 8011de2:	7c21      	ldrb	r1, [r4, #16]
 8011de4:	9101      	str	r1, [sp, #4]
 8011de6:	6821      	ldr	r1, [r4, #0]
 8011de8:	9100      	str	r1, [sp, #0]
 8011dea:	b292      	uxth	r2, r2
 8011dec:	a932      	add	r1, sp, #200	; 0xc8
 8011dee:	a811      	add	r0, sp, #68	; 0x44
 8011df0:	f7ff fc7a 	bl	80116e8 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 8011df4:	7c23      	ldrb	r3, [r4, #16]
 8011df6:	b9bb      	cbnz	r3, 8011e28 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>
 8011df8:	fa1f fa86 	uxth.w	sl, r6
 8011dfc:	2d00      	cmp	r5, #0
 8011dfe:	dd45      	ble.n	8011e8c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x186>
 8011e00:	4638      	mov	r0, r7
 8011e02:	f002 fd17 	bl	8014834 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8011e06:	2800      	cmp	r0, #0
 8011e08:	d03d      	beq.n	8011e86 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 8011e0a:	280a      	cmp	r0, #10
 8011e0c:	d1f6      	bne.n	8011dfc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf6>
 8011e0e:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 8011e12:	4453      	add	r3, sl
 8011e14:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 8011e18:	f8bd 3042 	ldrh.w	r3, [sp, #66]	; 0x42
 8011e1c:	eba3 030a 	sub.w	r3, r3, sl
 8011e20:	3d01      	subs	r5, #1
 8011e22:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 8011e26:	e7e9      	b.n	8011dfc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf6>
 8011e28:	0073      	lsls	r3, r6, #1
 8011e2a:	9309      	str	r3, [sp, #36]	; 0x24
 8011e2c:	f64f 7bff 	movw	fp, #65535	; 0xffff
 8011e30:	fa1f fa86 	uxth.w	sl, r6
 8011e34:	2d00      	cmp	r5, #0
 8011e36:	dd29      	ble.n	8011e8c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x186>
 8011e38:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 8011e3c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8011e3e:	428b      	cmp	r3, r1
 8011e40:	bfd4      	ite	le
 8011e42:	2100      	movle	r1, #0
 8011e44:	2101      	movgt	r1, #1
 8011e46:	a811      	add	r0, sp, #68	; 0x44
 8011e48:	f7ff fe69 	bl	8011b1e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 8011e4c:	f8bd 3056 	ldrh.w	r3, [sp, #86]	; 0x56
 8011e50:	3b01      	subs	r3, #1
 8011e52:	b29b      	uxth	r3, r3
 8011e54:	455b      	cmp	r3, fp
 8011e56:	930b      	str	r3, [sp, #44]	; 0x2c
 8011e58:	d005      	beq.n	8011e66 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x160>
 8011e5a:	7961      	ldrb	r1, [r4, #5]
 8011e5c:	4638      	mov	r0, r7
 8011e5e:	f7f4 ff13 	bl	8006c88 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8011e62:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8011e64:	e7f4      	b.n	8011e50 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x14a>
 8011e66:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 8011e6a:	4453      	add	r3, sl
 8011e6c:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 8011e70:	f8bd 3042 	ldrh.w	r3, [sp, #66]	; 0x42
 8011e74:	eba3 030a 	sub.w	r3, r3, sl
 8011e78:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 8011e7c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8011e80:	3d01      	subs	r5, #1
 8011e82:	2b00      	cmp	r3, #0
 8011e84:	d1d6      	bne.n	8011e34 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x12e>
 8011e86:	b065      	add	sp, #404	; 0x194
 8011e88:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011e8c:	0075      	lsls	r5, r6, #1
 8011e8e:	f04f 0a00 	mov.w	sl, #0
 8011e92:	7c23      	ldrb	r3, [r4, #16]
 8011e94:	2b00      	cmp	r3, #0
 8011e96:	d066      	beq.n	8011f66 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x260>
 8011e98:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 8011e9c:	428d      	cmp	r5, r1
 8011e9e:	bfd4      	ite	le
 8011ea0:	2100      	movle	r1, #0
 8011ea2:	2101      	movgt	r1, #1
 8011ea4:	a811      	add	r0, sp, #68	; 0x44
 8011ea6:	f7ff fe3a 	bl	8011b1e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 8011eaa:	9b08      	ldr	r3, [sp, #32]
 8011eac:	2b00      	cmp	r3, #0
 8011eae:	d055      	beq.n	8011f5c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 8011eb0:	f894 b010 	ldrb.w	fp, [r4, #16]
 8011eb4:	2264      	movs	r2, #100	; 0x64
 8011eb6:	4639      	mov	r1, r7
 8011eb8:	a84b      	add	r0, sp, #300	; 0x12c
 8011eba:	f010 f86b 	bl	8021f94 <memcpy>
 8011ebe:	f1bb 0f00 	cmp.w	fp, #0
 8011ec2:	d058      	beq.n	8011f76 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x270>
 8011ec4:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 8011ec8:	7922      	ldrb	r2, [r4, #4]
 8011eca:	2a01      	cmp	r2, #1
 8011ecc:	d13c      	bne.n	8011f48 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x242>
 8011ece:	f9bd 0040 	ldrsh.w	r0, [sp, #64]	; 0x40
 8011ed2:	1ac0      	subs	r0, r0, r3
 8011ed4:	2302      	movs	r3, #2
 8011ed6:	fb90 f0f3 	sdiv	r0, r0, r3
 8011eda:	b200      	sxth	r0, r0
 8011edc:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8011ee0:	4418      	add	r0, r3
 8011ee2:	7c23      	ldrb	r3, [r4, #16]
 8011ee4:	b200      	sxth	r0, r0
 8011ee6:	2b00      	cmp	r3, #0
 8011ee8:	d03a      	beq.n	8011f60 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25a>
 8011eea:	f8bd 2056 	ldrh.w	r2, [sp, #86]	; 0x56
 8011eee:	f89d 1062 	ldrb.w	r1, [sp, #98]	; 0x62
 8011ef2:	9000      	str	r0, [sp, #0]
 8011ef4:	e9cd 2105 	strd	r2, r1, [sp, #20]
 8011ef8:	f9bd 303e 	ldrsh.w	r3, [sp, #62]	; 0x3e
 8011efc:	980a      	ldr	r0, [sp, #40]	; 0x28
 8011efe:	e9cd a703 	strd	sl, r7, [sp, #12]
 8011f02:	e9cd 8401 	strd	r8, r4, [sp, #4]
 8011f06:	464a      	mov	r2, r9
 8011f08:	2100      	movs	r1, #0
 8011f0a:	f7ff fc96 	bl	801183a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 8011f0e:	2800      	cmp	r0, #0
 8011f10:	d1b9      	bne.n	8011e86 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 8011f12:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 8011f16:	b2b2      	uxth	r2, r6
 8011f18:	4611      	mov	r1, r2
 8011f1a:	4413      	add	r3, r2
 8011f1c:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 8011f20:	1a52      	subs	r2, r2, r1
 8011f22:	7c21      	ldrb	r1, [r4, #16]
 8011f24:	b21b      	sxth	r3, r3
 8011f26:	b212      	sxth	r2, r2
 8011f28:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 8011f2c:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 8011f30:	b109      	cbz	r1, 8011f36 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x230>
 8011f32:	42b2      	cmp	r2, r6
 8011f34:	dba7      	blt.n	8011e86 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 8011f36:	f8b8 2006 	ldrh.w	r2, [r8, #6]
 8011f3a:	f8b8 1002 	ldrh.w	r1, [r8, #2]
 8011f3e:	440a      	add	r2, r1
 8011f40:	b212      	sxth	r2, r2
 8011f42:	4293      	cmp	r3, r2
 8011f44:	dda5      	ble.n	8011e92 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x18c>
 8011f46:	e79e      	b.n	8011e86 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 8011f48:	2a02      	cmp	r2, #2
 8011f4a:	d105      	bne.n	8011f58 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 8011f4c:	7be2      	ldrb	r2, [r4, #15]
 8011f4e:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
 8011f52:	1a80      	subs	r0, r0, r2
 8011f54:	1ac0      	subs	r0, r0, r3
 8011f56:	e7c0      	b.n	8011eda <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d4>
 8011f58:	2000      	movs	r0, #0
 8011f5a:	e7bf      	b.n	8011edc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d6>
 8011f5c:	7be0      	ldrb	r0, [r4, #15]
 8011f5e:	e7bd      	b.n	8011edc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d6>
 8011f60:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8011f64:	e7c3      	b.n	8011eee <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e8>
 8011f66:	9b08      	ldr	r3, [sp, #32]
 8011f68:	2b00      	cmp	r3, #0
 8011f6a:	d0f7      	beq.n	8011f5c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 8011f6c:	2264      	movs	r2, #100	; 0x64
 8011f6e:	4639      	mov	r1, r7
 8011f70:	a84b      	add	r0, sp, #300	; 0x12c
 8011f72:	f010 f80f 	bl	8021f94 <memcpy>
 8011f76:	2300      	movs	r3, #0
 8011f78:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8011f7c:	6821      	ldr	r1, [r4, #0]
 8011f7e:	a84b      	add	r0, sp, #300	; 0x12c
 8011f80:	f7ff fbee 	bl	8011760 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 8011f84:	b203      	sxth	r3, r0
 8011f86:	e79f      	b.n	8011ec8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c2>

08011f88 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 8011f88:	2b03      	cmp	r3, #3
 8011f8a:	d818      	bhi.n	8011fbe <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 8011f8c:	e8df f003 	tbb	[pc, r3]
 8011f90:	130d0602 	.word	0x130d0602
 8011f94:	f9b0 2000 	ldrsh.w	r2, [r0]
 8011f98:	1850      	adds	r0, r2, r1
 8011f9a:	4770      	bx	lr
 8011f9c:	8803      	ldrh	r3, [r0, #0]
 8011f9e:	8880      	ldrh	r0, [r0, #4]
 8011fa0:	4418      	add	r0, r3
 8011fa2:	b200      	sxth	r0, r0
 8011fa4:	1a80      	subs	r0, r0, r2
 8011fa6:	3801      	subs	r0, #1
 8011fa8:	4770      	bx	lr
 8011faa:	8803      	ldrh	r3, [r0, #0]
 8011fac:	8880      	ldrh	r0, [r0, #4]
 8011fae:	4418      	add	r0, r3
 8011fb0:	b200      	sxth	r0, r0
 8011fb2:	1a40      	subs	r0, r0, r1
 8011fb4:	e7f7      	b.n	8011fa6 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 8011fb6:	f9b0 0000 	ldrsh.w	r0, [r0]
 8011fba:	4410      	add	r0, r2
 8011fbc:	4770      	bx	lr
 8011fbe:	2000      	movs	r0, #0
 8011fc0:	4770      	bx	lr

08011fc2 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 8011fc2:	2b03      	cmp	r3, #3
 8011fc4:	d817      	bhi.n	8011ff6 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 8011fc6:	e8df f003 	tbb	[pc, r3]
 8011fca:	0602      	.short	0x0602
 8011fcc:	1009      	.short	0x1009
 8011fce:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8011fd2:	1850      	adds	r0, r2, r1
 8011fd4:	4770      	bx	lr
 8011fd6:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8011fda:	e7fa      	b.n	8011fd2 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 8011fdc:	8843      	ldrh	r3, [r0, #2]
 8011fde:	88c0      	ldrh	r0, [r0, #6]
 8011fe0:	4418      	add	r0, r3
 8011fe2:	b200      	sxth	r0, r0
 8011fe4:	1a80      	subs	r0, r0, r2
 8011fe6:	3801      	subs	r0, #1
 8011fe8:	4770      	bx	lr
 8011fea:	8843      	ldrh	r3, [r0, #2]
 8011fec:	88c0      	ldrh	r0, [r0, #6]
 8011fee:	4418      	add	r0, r3
 8011ff0:	b200      	sxth	r0, r0
 8011ff2:	1a40      	subs	r0, r0, r1
 8011ff4:	e7f7      	b.n	8011fe6 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 8011ff6:	2000      	movs	r0, #0
 8011ff8:	4770      	bx	lr
	...

08011ffc <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 8011ffc:	4b01      	ldr	r3, [pc, #4]	; (8012004 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 8011ffe:	2200      	movs	r2, #0
 8012000:	601a      	str	r2, [r3, #0]
 8012002:	4770      	bx	lr
 8012004:	2001795c 	.word	0x2001795c

08012008 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 8012008:	4603      	mov	r3, r0
 801200a:	b1c8      	cbz	r0, 8012040 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 801200c:	0c02      	lsrs	r2, r0, #16
 801200e:	0412      	lsls	r2, r2, #16
 8012010:	b9a2      	cbnz	r2, 801203c <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 8012012:	0403      	lsls	r3, r0, #16
 8012014:	2010      	movs	r0, #16
 8012016:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 801201a:	bf04      	itt	eq
 801201c:	021b      	lsleq	r3, r3, #8
 801201e:	3008      	addeq	r0, #8
 8012020:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8012024:	bf04      	itt	eq
 8012026:	011b      	lsleq	r3, r3, #4
 8012028:	3004      	addeq	r0, #4
 801202a:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 801202e:	bf04      	itt	eq
 8012030:	009b      	lsleq	r3, r3, #2
 8012032:	3002      	addeq	r0, #2
 8012034:	2b00      	cmp	r3, #0
 8012036:	db04      	blt.n	8012042 <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 8012038:	3001      	adds	r0, #1
 801203a:	4770      	bx	lr
 801203c:	2000      	movs	r0, #0
 801203e:	e7ea      	b.n	8012016 <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 8012040:	2020      	movs	r0, #32
 8012042:	4770      	bx	lr

08012044 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 8012044:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012048:	b087      	sub	sp, #28
 801204a:	4681      	mov	r9, r0
 801204c:	4698      	mov	r8, r3
 801204e:	4610      	mov	r0, r2
 8012050:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 8012054:	460d      	mov	r5, r1
 8012056:	b981      	cbnz	r1, 801207a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x36>
 8012058:	b14b      	cbz	r3, 801206e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x2a>
 801205a:	460b      	mov	r3, r1
 801205c:	e9cd 4700 	strd	r4, r7, [sp]
 8012060:	464a      	mov	r2, r9
 8012062:	4641      	mov	r1, r8
 8012064:	f7ff ffee 	bl	8012044 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8012068:	b007      	add	sp, #28
 801206a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801206e:	f04f 33ff 	mov.w	r3, #4294967295
 8012072:	603b      	str	r3, [r7, #0]
 8012074:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8012078:	e7f6      	b.n	8012068 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 801207a:	fa32 fa01 	lsrs.w	sl, r2, r1
 801207e:	d107      	bne.n	8012090 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4c>
 8012080:	fb09 f602 	mul.w	r6, r9, r2
 8012084:	fbb6 f0f4 	udiv	r0, r6, r4
 8012088:	fb04 6610 	mls	r6, r4, r0, r6
 801208c:	603e      	str	r6, [r7, #0]
 801208e:	e7eb      	b.n	8012068 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 8012090:	2601      	movs	r6, #1
 8012092:	408e      	lsls	r6, r1
 8012094:	3e01      	subs	r6, #1
 8012096:	4016      	ands	r6, r2
 8012098:	fa09 fb01 	lsl.w	fp, r9, r1
 801209c:	4630      	mov	r0, r6
 801209e:	fbbb f3f4 	udiv	r3, fp, r4
 80120a2:	9302      	str	r3, [sp, #8]
 80120a4:	fb0a f303 	mul.w	r3, sl, r3
 80120a8:	9303      	str	r3, [sp, #12]
 80120aa:	f7ff ffad 	bl	8012008 <_ZN8touchgfx16TouchCalibration4clzuEm>
 80120ae:	464a      	mov	r2, r9
 80120b0:	460b      	mov	r3, r1
 80120b2:	e9cd 4700 	strd	r4, r7, [sp]
 80120b6:	4601      	mov	r1, r0
 80120b8:	4630      	mov	r0, r6
 80120ba:	f7ff ffc3 	bl	8012044 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 80120be:	9b02      	ldr	r3, [sp, #8]
 80120c0:	fb04 bb13 	mls	fp, r4, r3, fp
 80120c4:	4606      	mov	r6, r0
 80120c6:	4658      	mov	r0, fp
 80120c8:	eb05 0108 	add.w	r1, r5, r8
 80120cc:	f7ff ff9c 	bl	8012008 <_ZN8touchgfx16TouchCalibration4clzuEm>
 80120d0:	ab05      	add	r3, sp, #20
 80120d2:	e9cd 4300 	strd	r4, r3, [sp]
 80120d6:	465a      	mov	r2, fp
 80120d8:	4603      	mov	r3, r0
 80120da:	4650      	mov	r0, sl
 80120dc:	f7ff ffb2 	bl	8012044 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 80120e0:	6839      	ldr	r1, [r7, #0]
 80120e2:	9a05      	ldr	r2, [sp, #20]
 80120e4:	9b03      	ldr	r3, [sp, #12]
 80120e6:	4411      	add	r1, r2
 80120e8:	fbb1 f2f4 	udiv	r2, r1, r4
 80120ec:	18d3      	adds	r3, r2, r3
 80120ee:	441e      	add	r6, r3
 80120f0:	fb04 1412 	mls	r4, r4, r2, r1
 80120f4:	4430      	add	r0, r6
 80120f6:	603c      	str	r4, [r7, #0]
 80120f8:	e7b6      	b.n	8012068 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>

080120fa <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 80120fa:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80120fe:	b085      	sub	sp, #20
 8012100:	f1b0 0900 	subs.w	r9, r0, #0
 8012104:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8012106:	461d      	mov	r5, r3
 8012108:	bfbf      	itttt	lt
 801210a:	6823      	ldrlt	r3, [r4, #0]
 801210c:	425b      	neglt	r3, r3
 801210e:	f1c9 0900 	rsblt	r9, r9, #0
 8012112:	6023      	strlt	r3, [r4, #0]
 8012114:	bfb4      	ite	lt
 8012116:	f04f 36ff 	movlt.w	r6, #4294967295
 801211a:	2601      	movge	r6, #1
 801211c:	2a00      	cmp	r2, #0
 801211e:	4617      	mov	r7, r2
 8012120:	da04      	bge.n	801212c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 8012122:	6823      	ldr	r3, [r4, #0]
 8012124:	425b      	negs	r3, r3
 8012126:	4257      	negs	r7, r2
 8012128:	4276      	negs	r6, r6
 801212a:	6023      	str	r3, [r4, #0]
 801212c:	2d00      	cmp	r5, #0
 801212e:	4638      	mov	r0, r7
 8012130:	bfba      	itte	lt
 8012132:	426d      	neglt	r5, r5
 8012134:	f04f 38ff 	movlt.w	r8, #4294967295
 8012138:	f04f 0801 	movge.w	r8, #1
 801213c:	f7ff ff64 	bl	8012008 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8012140:	ab03      	add	r3, sp, #12
 8012142:	e9cd 5300 	strd	r5, r3, [sp]
 8012146:	463a      	mov	r2, r7
 8012148:	4603      	mov	r3, r0
 801214a:	4648      	mov	r0, r9
 801214c:	f7ff ff7a 	bl	8012044 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8012150:	6823      	ldr	r3, [r4, #0]
 8012152:	9a03      	ldr	r2, [sp, #12]
 8012154:	4546      	cmp	r6, r8
 8012156:	441a      	add	r2, r3
 8012158:	fb92 f3f5 	sdiv	r3, r2, r5
 801215c:	4418      	add	r0, r3
 801215e:	bf18      	it	ne
 8012160:	4240      	negne	r0, r0
 8012162:	fb05 2313 	mls	r3, r5, r3, r2
 8012166:	1c72      	adds	r2, r6, #1
 8012168:	6023      	str	r3, [r4, #0]
 801216a:	d105      	bne.n	8012178 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 801216c:	2b00      	cmp	r3, #0
 801216e:	f1c3 0200 	rsb	r2, r3, #0
 8012172:	db0b      	blt.n	801218c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 8012174:	6022      	str	r2, [r4, #0]
 8012176:	e006      	b.n	8012186 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8012178:	2e01      	cmp	r6, #1
 801217a:	d104      	bne.n	8012186 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 801217c:	2b00      	cmp	r3, #0
 801217e:	da02      	bge.n	8012186 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8012180:	442b      	add	r3, r5
 8012182:	3801      	subs	r0, #1
 8012184:	6023      	str	r3, [r4, #0]
 8012186:	b005      	add	sp, #20
 8012188:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801218c:	3801      	subs	r0, #1
 801218e:	1b52      	subs	r2, r2, r5
 8012190:	e7f0      	b.n	8012174 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>
	...

08012194 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 8012194:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8012198:	4c1c      	ldr	r4, [pc, #112]	; (801220c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 801219a:	6807      	ldr	r7, [r0, #0]
 801219c:	69a3      	ldr	r3, [r4, #24]
 801219e:	4605      	mov	r5, r0
 80121a0:	b92b      	cbnz	r3, 80121ae <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 80121a2:	6840      	ldr	r0, [r0, #4]
 80121a4:	e9c5 7000 	strd	r7, r0, [r5]
 80121a8:	b004      	add	sp, #16
 80121aa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80121ae:	68a2      	ldr	r2, [r4, #8]
 80121b0:	6820      	ldr	r0, [r4, #0]
 80121b2:	ae04      	add	r6, sp, #16
 80121b4:	f04f 0802 	mov.w	r8, #2
 80121b8:	fb93 f1f8 	sdiv	r1, r3, r8
 80121bc:	440a      	add	r2, r1
 80121be:	f846 2d04 	str.w	r2, [r6, #-4]!
 80121c2:	69e1      	ldr	r1, [r4, #28]
 80121c4:	9600      	str	r6, [sp, #0]
 80121c6:	463a      	mov	r2, r7
 80121c8:	f7ff ff97 	bl	80120fa <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 80121cc:	69a3      	ldr	r3, [r4, #24]
 80121ce:	686a      	ldr	r2, [r5, #4]
 80121d0:	6a21      	ldr	r1, [r4, #32]
 80121d2:	9600      	str	r6, [sp, #0]
 80121d4:	4607      	mov	r7, r0
 80121d6:	6860      	ldr	r0, [r4, #4]
 80121d8:	f7ff ff8f 	bl	80120fa <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 80121dc:	6962      	ldr	r2, [r4, #20]
 80121de:	69a3      	ldr	r3, [r4, #24]
 80121e0:	fb93 f8f8 	sdiv	r8, r3, r8
 80121e4:	4442      	add	r2, r8
 80121e6:	9203      	str	r2, [sp, #12]
 80121e8:	6a61      	ldr	r1, [r4, #36]	; 0x24
 80121ea:	682a      	ldr	r2, [r5, #0]
 80121ec:	9600      	str	r6, [sp, #0]
 80121ee:	4407      	add	r7, r0
 80121f0:	68e0      	ldr	r0, [r4, #12]
 80121f2:	f7ff ff82 	bl	80120fa <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 80121f6:	9600      	str	r6, [sp, #0]
 80121f8:	4680      	mov	r8, r0
 80121fa:	69a3      	ldr	r3, [r4, #24]
 80121fc:	686a      	ldr	r2, [r5, #4]
 80121fe:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 8012200:	6920      	ldr	r0, [r4, #16]
 8012202:	f7ff ff7a 	bl	80120fa <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8012206:	4440      	add	r0, r8
 8012208:	e7cc      	b.n	80121a4 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 801220a:	bf00      	nop
 801220c:	20017960 	.word	0x20017960

08012210 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 8012210:	4b07      	ldr	r3, [pc, #28]	; (8012230 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 8012212:	781b      	ldrb	r3, [r3, #0]
 8012214:	2b01      	cmp	r3, #1
 8012216:	d109      	bne.n	801222c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 8012218:	f9b1 3000 	ldrsh.w	r3, [r1]
 801221c:	f9b0 2000 	ldrsh.w	r2, [r0]
 8012220:	8003      	strh	r3, [r0, #0]
 8012222:	4b04      	ldr	r3, [pc, #16]	; (8012234 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 8012224:	881b      	ldrh	r3, [r3, #0]
 8012226:	3b01      	subs	r3, #1
 8012228:	1a9b      	subs	r3, r3, r2
 801222a:	800b      	strh	r3, [r1, #0]
 801222c:	4770      	bx	lr
 801222e:	bf00      	nop
 8012230:	20017944 	.word	0x20017944
 8012234:	20017940 	.word	0x20017940

08012238 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 8012238:	b510      	push	{r4, lr}
 801223a:	4b07      	ldr	r3, [pc, #28]	; (8012258 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 801223c:	781b      	ldrb	r3, [r3, #0]
 801223e:	2b01      	cmp	r3, #1
 8012240:	d108      	bne.n	8012254 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 8012242:	4b06      	ldr	r3, [pc, #24]	; (801225c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 8012244:	880c      	ldrh	r4, [r1, #0]
 8012246:	881b      	ldrh	r3, [r3, #0]
 8012248:	f9b0 2000 	ldrsh.w	r2, [r0]
 801224c:	3b01      	subs	r3, #1
 801224e:	1b1b      	subs	r3, r3, r4
 8012250:	8003      	strh	r3, [r0, #0]
 8012252:	800a      	strh	r2, [r1, #0]
 8012254:	bd10      	pop	{r4, pc}
 8012256:	bf00      	nop
 8012258:	20017944 	.word	0x20017944
 801225c:	20017940 	.word	0x20017940

08012260 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 8012260:	b510      	push	{r4, lr}
 8012262:	4b0a      	ldr	r3, [pc, #40]	; (801228c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 8012264:	781b      	ldrb	r3, [r3, #0]
 8012266:	2b01      	cmp	r3, #1
 8012268:	d10e      	bne.n	8012288 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 801226a:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 801226e:	8843      	ldrh	r3, [r0, #2]
 8012270:	f9b0 4000 	ldrsh.w	r4, [r0]
 8012274:	8044      	strh	r4, [r0, #2]
 8012276:	18ca      	adds	r2, r1, r3
 8012278:	4b05      	ldr	r3, [pc, #20]	; (8012290 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 801227a:	881b      	ldrh	r3, [r3, #0]
 801227c:	1a9b      	subs	r3, r3, r2
 801227e:	8003      	strh	r3, [r0, #0]
 8012280:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8012284:	80c3      	strh	r3, [r0, #6]
 8012286:	8081      	strh	r1, [r0, #4]
 8012288:	bd10      	pop	{r4, pc}
 801228a:	bf00      	nop
 801228c:	20017944 	.word	0x20017944
 8012290:	20017940 	.word	0x20017940

08012294 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 8012294:	4b08      	ldr	r3, [pc, #32]	; (80122b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 8012296:	781b      	ldrb	r3, [r3, #0]
 8012298:	2b01      	cmp	r3, #1
 801229a:	d10c      	bne.n	80122b6 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 801229c:	8803      	ldrh	r3, [r0, #0]
 801229e:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 80122a2:	8842      	ldrh	r2, [r0, #2]
 80122a4:	8002      	strh	r2, [r0, #0]
 80122a6:	185a      	adds	r2, r3, r1
 80122a8:	4b04      	ldr	r3, [pc, #16]	; (80122bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 80122aa:	881b      	ldrh	r3, [r3, #0]
 80122ac:	1a9b      	subs	r3, r3, r2
 80122ae:	8043      	strh	r3, [r0, #2]
 80122b0:	88c3      	ldrh	r3, [r0, #6]
 80122b2:	8083      	strh	r3, [r0, #4]
 80122b4:	80c1      	strh	r1, [r0, #6]
 80122b6:	4770      	bx	lr
 80122b8:	20017944 	.word	0x20017944
 80122bc:	20017940 	.word	0x20017940

080122c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 80122c0:	b510      	push	{r4, lr}
 80122c2:	4b07      	ldr	r3, [pc, #28]	; (80122e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 80122c4:	781b      	ldrb	r3, [r3, #0]
 80122c6:	2b01      	cmp	r3, #1
 80122c8:	d108      	bne.n	80122dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 80122ca:	f9b1 3000 	ldrsh.w	r3, [r1]
 80122ce:	f9b0 4000 	ldrsh.w	r4, [r0]
 80122d2:	8003      	strh	r3, [r0, #0]
 80122d4:	8893      	ldrh	r3, [r2, #4]
 80122d6:	3b01      	subs	r3, #1
 80122d8:	1b1b      	subs	r3, r3, r4
 80122da:	800b      	strh	r3, [r1, #0]
 80122dc:	bd10      	pop	{r4, pc}
 80122de:	bf00      	nop
 80122e0:	20017944 	.word	0x20017944

080122e4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 80122e4:	b510      	push	{r4, lr}
 80122e6:	4b0a      	ldr	r3, [pc, #40]	; (8012310 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 80122e8:	781b      	ldrb	r3, [r3, #0]
 80122ea:	2b01      	cmp	r3, #1
 80122ec:	460a      	mov	r2, r1
 80122ee:	d10d      	bne.n	801230c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 80122f0:	8881      	ldrh	r1, [r0, #4]
 80122f2:	8803      	ldrh	r3, [r0, #0]
 80122f4:	440b      	add	r3, r1
 80122f6:	4601      	mov	r1, r0
 80122f8:	3b01      	subs	r3, #1
 80122fa:	f821 3b02 	strh.w	r3, [r1], #2
 80122fe:	f7ff ffdf 	bl	80122c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 8012302:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8012306:	88c2      	ldrh	r2, [r0, #6]
 8012308:	8082      	strh	r2, [r0, #4]
 801230a:	80c3      	strh	r3, [r0, #6]
 801230c:	bd10      	pop	{r4, pc}
 801230e:	bf00      	nop
 8012310:	20017944 	.word	0x20017944

08012314 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 8012314:	b570      	push	{r4, r5, r6, lr}
 8012316:	4c0b      	ldr	r4, [pc, #44]	; (8012344 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 8012318:	2300      	movs	r3, #0
 801231a:	4605      	mov	r5, r0
 801231c:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 8012320:	6820      	ldr	r0, [r4, #0]
 8012322:	460e      	mov	r6, r1
 8012324:	b110      	cbz	r0, 801232c <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x18>
 8012326:	6803      	ldr	r3, [r0, #0]
 8012328:	695b      	ldr	r3, [r3, #20]
 801232a:	4798      	blx	r3
 801232c:	6026      	str	r6, [r4, #0]
 801232e:	6833      	ldr	r3, [r6, #0]
 8012330:	4630      	mov	r0, r6
 8012332:	68db      	ldr	r3, [r3, #12]
 8012334:	4798      	blx	r3
 8012336:	682b      	ldr	r3, [r5, #0]
 8012338:	4628      	mov	r0, r5
 801233a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801233c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012340:	4718      	bx	r3
 8012342:	bf00      	nop
 8012344:	20017990 	.word	0x20017990

08012348 <_ZN8touchgfx11Application13requestRedrawEv>:
 8012348:	4b06      	ldr	r3, [pc, #24]	; (8012364 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 801234a:	f9b3 2000 	ldrsh.w	r2, [r3]
 801234e:	4b06      	ldr	r3, [pc, #24]	; (8012368 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 8012350:	f8a0 2130 	strh.w	r2, [r0, #304]	; 0x130
 8012354:	f9b3 3000 	ldrsh.w	r3, [r3]
 8012358:	f8a0 3132 	strh.w	r3, [r0, #306]	; 0x132
 801235c:	2100      	movs	r1, #0
 801235e:	f8c0 112c 	str.w	r1, [r0, #300]	; 0x12c
 8012362:	4770      	bx	lr
 8012364:	20017940 	.word	0x20017940
 8012368:	20017942 	.word	0x20017942

0801236c <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 801236c:	4b03      	ldr	r3, [pc, #12]	; (801237c <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 801236e:	6818      	ldr	r0, [r3, #0]
 8012370:	b110      	cbz	r0, 8012378 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 8012372:	6803      	ldr	r3, [r0, #0]
 8012374:	699b      	ldr	r3, [r3, #24]
 8012376:	4718      	bx	r3
 8012378:	4770      	bx	lr
 801237a:	bf00      	nop
 801237c:	20017990 	.word	0x20017990

08012380 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 8012380:	4770      	bx	lr
	...

08012384 <_ZN8touchgfx11Application4drawEv>:
 8012384:	b507      	push	{r0, r1, r2, lr}
 8012386:	4b09      	ldr	r3, [pc, #36]	; (80123ac <_ZN8touchgfx11Application4drawEv+0x28>)
 8012388:	f9b3 2000 	ldrsh.w	r2, [r3]
 801238c:	4b08      	ldr	r3, [pc, #32]	; (80123b0 <_ZN8touchgfx11Application4drawEv+0x2c>)
 801238e:	f8ad 2004 	strh.w	r2, [sp, #4]
 8012392:	f9b3 3000 	ldrsh.w	r3, [r3]
 8012396:	f8ad 3006 	strh.w	r3, [sp, #6]
 801239a:	6803      	ldr	r3, [r0, #0]
 801239c:	2100      	movs	r1, #0
 801239e:	9100      	str	r1, [sp, #0]
 80123a0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80123a2:	4669      	mov	r1, sp
 80123a4:	4798      	blx	r3
 80123a6:	b003      	add	sp, #12
 80123a8:	f85d fb04 	ldr.w	pc, [sp], #4
 80123ac:	20017940 	.word	0x20017940
 80123b0:	20017942 	.word	0x20017942

080123b4 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 80123b4:	4b03      	ldr	r3, [pc, #12]	; (80123c4 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 80123b6:	6818      	ldr	r0, [r3, #0]
 80123b8:	b110      	cbz	r0, 80123c0 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 80123ba:	6803      	ldr	r3, [r0, #0]
 80123bc:	69db      	ldr	r3, [r3, #28]
 80123be:	4718      	bx	r3
 80123c0:	4770      	bx	lr
 80123c2:	bf00      	nop
 80123c4:	20017990 	.word	0x20017990

080123c8 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 80123c8:	4b03      	ldr	r3, [pc, #12]	; (80123d8 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 80123ca:	6818      	ldr	r0, [r3, #0]
 80123cc:	b110      	cbz	r0, 80123d4 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 80123ce:	6803      	ldr	r3, [r0, #0]
 80123d0:	6a1b      	ldr	r3, [r3, #32]
 80123d2:	4718      	bx	r3
 80123d4:	4770      	bx	lr
 80123d6:	bf00      	nop
 80123d8:	20017990 	.word	0x20017990

080123dc <_ZN8touchgfx11Application16clearCachedAreasEv>:
 80123dc:	2300      	movs	r3, #0
 80123de:	f8a0 30e8 	strh.w	r3, [r0, #232]	; 0xe8
 80123e2:	4770      	bx	lr

080123e4 <_ZN8touchgfx11Application14handleKeyEventEh>:
 80123e4:	4b03      	ldr	r3, [pc, #12]	; (80123f4 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 80123e6:	6818      	ldr	r0, [r3, #0]
 80123e8:	b110      	cbz	r0, 80123f0 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 80123ea:	6803      	ldr	r3, [r0, #0]
 80123ec:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80123ee:	4718      	bx	r3
 80123f0:	4770      	bx	lr
 80123f2:	bf00      	nop
 80123f4:	20017990 	.word	0x20017990

080123f8 <_ZN8touchgfx11Application15handleTickEventEv>:
 80123f8:	b570      	push	{r4, r5, r6, lr}
 80123fa:	4d32      	ldr	r5, [pc, #200]	; (80124c4 <_ZN8touchgfx11Application15handleTickEventEv+0xcc>)
 80123fc:	4604      	mov	r4, r0
 80123fe:	6828      	ldr	r0, [r5, #0]
 8012400:	b140      	cbz	r0, 8012414 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8012402:	7a03      	ldrb	r3, [r0, #8]
 8012404:	b933      	cbnz	r3, 8012414 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8012406:	f884 3134 	strb.w	r3, [r4, #308]	; 0x134
 801240a:	6803      	ldr	r3, [r0, #0]
 801240c:	689b      	ldr	r3, [r3, #8]
 801240e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012412:	4718      	bx	r3
 8012414:	f894 3134 	ldrb.w	r3, [r4, #308]	; 0x134
 8012418:	b97b      	cbnz	r3, 801243a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 801241a:	b170      	cbz	r0, 801243a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 801241c:	7a03      	ldrb	r3, [r0, #8]
 801241e:	b163      	cbz	r3, 801243a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8012420:	4b29      	ldr	r3, [pc, #164]	; (80124c8 <_ZN8touchgfx11Application15handleTickEventEv+0xd0>)
 8012422:	6818      	ldr	r0, [r3, #0]
 8012424:	b110      	cbz	r0, 801242c <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 8012426:	6803      	ldr	r3, [r0, #0]
 8012428:	691b      	ldr	r3, [r3, #16]
 801242a:	4798      	blx	r3
 801242c:	6828      	ldr	r0, [r5, #0]
 801242e:	6803      	ldr	r3, [r0, #0]
 8012430:	68db      	ldr	r3, [r3, #12]
 8012432:	4798      	blx	r3
 8012434:	2301      	movs	r3, #1
 8012436:	f884 3134 	strb.w	r3, [r4, #308]	; 0x134
 801243a:	2500      	movs	r5, #0
 801243c:	f8b4 0084 	ldrh.w	r0, [r4, #132]	; 0x84
 8012440:	42a8      	cmp	r0, r5
 8012442:	dd0c      	ble.n	801245e <_ZN8touchgfx11Application15handleTickEventEv+0x66>
 8012444:	1963      	adds	r3, r4, r5
 8012446:	f893 2088 	ldrb.w	r2, [r3, #136]	; 0x88
 801244a:	b132      	cbz	r2, 801245a <_ZN8touchgfx11Application15handleTickEventEv+0x62>
 801244c:	eb05 0245 	add.w	r2, r5, r5, lsl #1
 8012450:	4413      	add	r3, r2
 8012452:	6858      	ldr	r0, [r3, #4]
 8012454:	6803      	ldr	r3, [r0, #0]
 8012456:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8012458:	4798      	blx	r3
 801245a:	3501      	adds	r5, #1
 801245c:	e7ee      	b.n	801243c <_ZN8touchgfx11Application15handleTickEventEv+0x44>
 801245e:	2300      	movs	r3, #0
 8012460:	461a      	mov	r2, r3
 8012462:	4298      	cmp	r0, r3
 8012464:	d015      	beq.n	8012492 <_ZN8touchgfx11Application15handleTickEventEv+0x9a>
 8012466:	18e1      	adds	r1, r4, r3
 8012468:	f891 5088 	ldrb.w	r5, [r1, #136]	; 0x88
 801246c:	b16d      	cbz	r5, 801248a <_ZN8touchgfx11Application15handleTickEventEv+0x92>
 801246e:	429a      	cmp	r2, r3
 8012470:	d00a      	beq.n	8012488 <_ZN8touchgfx11Application15handleTickEventEv+0x90>
 8012472:	eb03 0643 	add.w	r6, r3, r3, lsl #1
 8012476:	4431      	add	r1, r6
 8012478:	684e      	ldr	r6, [r1, #4]
 801247a:	b291      	uxth	r1, r2
 801247c:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 8012480:	604e      	str	r6, [r1, #4]
 8012482:	18a1      	adds	r1, r4, r2
 8012484:	f881 5088 	strb.w	r5, [r1, #136]	; 0x88
 8012488:	3201      	adds	r2, #1
 801248a:	3301      	adds	r3, #1
 801248c:	e7e9      	b.n	8012462 <_ZN8touchgfx11Application15handleTickEventEv+0x6a>
 801248e:	f8a4 3084 	strh.w	r3, [r4, #132]	; 0x84
 8012492:	f8b4 5084 	ldrh.w	r5, [r4, #132]	; 0x84
 8012496:	4295      	cmp	r5, r2
 8012498:	dd0d      	ble.n	80124b6 <_ZN8touchgfx11Application15handleTickEventEv+0xbe>
 801249a:	1e6b      	subs	r3, r5, #1
 801249c:	b29b      	uxth	r3, r3
 801249e:	eb04 0183 	add.w	r1, r4, r3, lsl #2
 80124a2:	4618      	mov	r0, r3
 80124a4:	3104      	adds	r1, #4
 80124a6:	4285      	cmp	r5, r0
 80124a8:	ddf1      	ble.n	801248e <_ZN8touchgfx11Application15handleTickEventEv+0x96>
 80124aa:	f851 6f04 	ldr.w	r6, [r1, #4]!
 80124ae:	f841 6c04 	str.w	r6, [r1, #-4]
 80124b2:	3001      	adds	r0, #1
 80124b4:	e7f7      	b.n	80124a6 <_ZN8touchgfx11Application15handleTickEventEv+0xae>
 80124b6:	4b04      	ldr	r3, [pc, #16]	; (80124c8 <_ZN8touchgfx11Application15handleTickEventEv+0xd0>)
 80124b8:	6818      	ldr	r0, [r3, #0]
 80124ba:	b110      	cbz	r0, 80124c2 <_ZN8touchgfx11Application15handleTickEventEv+0xca>
 80124bc:	6803      	ldr	r3, [r0, #0]
 80124be:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80124c0:	e7a5      	b.n	801240e <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 80124c2:	bd70      	pop	{r4, r5, r6, pc}
 80124c4:	20017994 	.word	0x20017994
 80124c8:	20017990 	.word	0x20017990

080124cc <_ZN8touchgfx11ApplicationD1Ev>:
 80124cc:	4770      	bx	lr

080124ce <_ZN8touchgfx11ApplicationD0Ev>:
 80124ce:	b510      	push	{r4, lr}
 80124d0:	f44f 719c 	mov.w	r1, #312	; 0x138
 80124d4:	4604      	mov	r4, r0
 80124d6:	f00f fbb7 	bl	8021c48 <_ZdlPvj>
 80124da:	4620      	mov	r0, r4
 80124dc:	bd10      	pop	{r4, pc}

080124de <_ZNK8touchgfx4Rect9intersectERKS0_>:
 80124de:	b510      	push	{r4, lr}
 80124e0:	f9b1 4000 	ldrsh.w	r4, [r1]
 80124e4:	888a      	ldrh	r2, [r1, #4]
 80124e6:	f9b0 3000 	ldrsh.w	r3, [r0]
 80124ea:	4422      	add	r2, r4
 80124ec:	b212      	sxth	r2, r2
 80124ee:	4293      	cmp	r3, r2
 80124f0:	da15      	bge.n	801251e <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 80124f2:	8882      	ldrh	r2, [r0, #4]
 80124f4:	4413      	add	r3, r2
 80124f6:	b21b      	sxth	r3, r3
 80124f8:	429c      	cmp	r4, r3
 80124fa:	da10      	bge.n	801251e <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 80124fc:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 8012500:	88c9      	ldrh	r1, [r1, #6]
 8012502:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8012506:	4419      	add	r1, r3
 8012508:	b209      	sxth	r1, r1
 801250a:	428a      	cmp	r2, r1
 801250c:	da07      	bge.n	801251e <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 801250e:	88c0      	ldrh	r0, [r0, #6]
 8012510:	4410      	add	r0, r2
 8012512:	b200      	sxth	r0, r0
 8012514:	4283      	cmp	r3, r0
 8012516:	bfac      	ite	ge
 8012518:	2000      	movge	r0, #0
 801251a:	2001      	movlt	r0, #1
 801251c:	bd10      	pop	{r4, pc}
 801251e:	2000      	movs	r0, #0
 8012520:	e7fc      	b.n	801251c <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

08012522 <_ZN8touchgfx4Rect10restrictToEss>:
 8012522:	f9b0 3000 	ldrsh.w	r3, [r0]
 8012526:	2b00      	cmp	r3, #0
 8012528:	b510      	push	{r4, lr}
 801252a:	da04      	bge.n	8012536 <_ZN8touchgfx4Rect10restrictToEss+0x14>
 801252c:	8884      	ldrh	r4, [r0, #4]
 801252e:	4423      	add	r3, r4
 8012530:	8083      	strh	r3, [r0, #4]
 8012532:	2300      	movs	r3, #0
 8012534:	8003      	strh	r3, [r0, #0]
 8012536:	f9b0 4000 	ldrsh.w	r4, [r0]
 801253a:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 801253e:	1b09      	subs	r1, r1, r4
 8012540:	428b      	cmp	r3, r1
 8012542:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8012546:	bfc8      	it	gt
 8012548:	8081      	strhgt	r1, [r0, #4]
 801254a:	2b00      	cmp	r3, #0
 801254c:	da04      	bge.n	8012558 <_ZN8touchgfx4Rect10restrictToEss+0x36>
 801254e:	88c1      	ldrh	r1, [r0, #6]
 8012550:	440b      	add	r3, r1
 8012552:	80c3      	strh	r3, [r0, #6]
 8012554:	2300      	movs	r3, #0
 8012556:	8043      	strh	r3, [r0, #2]
 8012558:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 801255c:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8012560:	1a52      	subs	r2, r2, r1
 8012562:	4293      	cmp	r3, r2
 8012564:	bfc8      	it	gt
 8012566:	80c2      	strhgt	r2, [r0, #6]
 8012568:	bd10      	pop	{r4, pc}
	...

0801256c <_ZN8touchgfx11Application4drawERNS_4RectE>:
 801256c:	b510      	push	{r4, lr}
 801256e:	4b10      	ldr	r3, [pc, #64]	; (80125b0 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 8012570:	f9b3 2000 	ldrsh.w	r2, [r3]
 8012574:	4b0f      	ldr	r3, [pc, #60]	; (80125b4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 8012576:	460c      	mov	r4, r1
 8012578:	4620      	mov	r0, r4
 801257a:	f9b3 1000 	ldrsh.w	r1, [r3]
 801257e:	f7ff ffd0 	bl	8012522 <_ZN8touchgfx4Rect10restrictToEss>
 8012582:	4b0d      	ldr	r3, [pc, #52]	; (80125b8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 8012584:	6818      	ldr	r0, [r3, #0]
 8012586:	b190      	cbz	r0, 80125ae <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 8012588:	6803      	ldr	r3, [r0, #0]
 801258a:	4621      	mov	r1, r4
 801258c:	689b      	ldr	r3, [r3, #8]
 801258e:	4798      	blx	r3
 8012590:	4b0a      	ldr	r3, [pc, #40]	; (80125bc <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 8012592:	6818      	ldr	r0, [r3, #0]
 8012594:	b118      	cbz	r0, 801259e <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 8012596:	6803      	ldr	r3, [r0, #0]
 8012598:	4621      	mov	r1, r4
 801259a:	689b      	ldr	r3, [r3, #8]
 801259c:	4798      	blx	r3
 801259e:	4b08      	ldr	r3, [pc, #32]	; (80125c0 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 80125a0:	6818      	ldr	r0, [r3, #0]
 80125a2:	6803      	ldr	r3, [r0, #0]
 80125a4:	4621      	mov	r1, r4
 80125a6:	69db      	ldr	r3, [r3, #28]
 80125a8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80125ac:	4718      	bx	r3
 80125ae:	bd10      	pop	{r4, pc}
 80125b0:	20017942 	.word	0x20017942
 80125b4:	20017940 	.word	0x20017940
 80125b8:	20017990 	.word	0x20017990
 80125bc:	2001798c 	.word	0x2001798c
 80125c0:	2001794c 	.word	0x2001794c

080125c4 <_ZNK8touchgfx4Rect8includesERKS0_>:
 80125c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80125c6:	4606      	mov	r6, r0
 80125c8:	4608      	mov	r0, r1
 80125ca:	460f      	mov	r7, r1
 80125cc:	f7fa f8d9 	bl	800c782 <_ZNK8touchgfx4Rect7isEmptyEv>
 80125d0:	b9e8      	cbnz	r0, 801260e <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80125d2:	f9b7 5000 	ldrsh.w	r5, [r7]
 80125d6:	f9b6 4000 	ldrsh.w	r4, [r6]
 80125da:	42a5      	cmp	r5, r4
 80125dc:	db17      	blt.n	801260e <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80125de:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 80125e2:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 80125e6:	429a      	cmp	r2, r3
 80125e8:	db11      	blt.n	801260e <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80125ea:	88b9      	ldrh	r1, [r7, #4]
 80125ec:	440d      	add	r5, r1
 80125ee:	88b1      	ldrh	r1, [r6, #4]
 80125f0:	440c      	add	r4, r1
 80125f2:	b22d      	sxth	r5, r5
 80125f4:	b224      	sxth	r4, r4
 80125f6:	42a5      	cmp	r5, r4
 80125f8:	dc09      	bgt.n	801260e <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80125fa:	88f8      	ldrh	r0, [r7, #6]
 80125fc:	4410      	add	r0, r2
 80125fe:	88f2      	ldrh	r2, [r6, #6]
 8012600:	4413      	add	r3, r2
 8012602:	b200      	sxth	r0, r0
 8012604:	b21b      	sxth	r3, r3
 8012606:	4298      	cmp	r0, r3
 8012608:	bfcc      	ite	gt
 801260a:	2000      	movgt	r0, #0
 801260c:	2001      	movle	r0, #1
 801260e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08012610 <_ZN8touchgfx11Application11getInstanceEv>:
 8012610:	4b01      	ldr	r3, [pc, #4]	; (8012618 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 8012612:	6818      	ldr	r0, [r3, #0]
 8012614:	4770      	bx	lr
 8012616:	bf00      	nop
 8012618:	200179a0 	.word	0x200179a0

0801261c <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>:
 801261c:	2300      	movs	r3, #0
 801261e:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 8012622:	f100 0288 	add.w	r2, r0, #136	; 0x88
 8012626:	30a8      	adds	r0, #168	; 0xa8
 8012628:	f802 3b01 	strb.w	r3, [r2], #1
 801262c:	4282      	cmp	r2, r0
 801262e:	d1fb      	bne.n	8012628 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv+0xc>
 8012630:	4770      	bx	lr

08012632 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 8012632:	4603      	mov	r3, r0
 8012634:	f100 0140 	add.w	r1, r0, #64	; 0x40
 8012638:	2200      	movs	r2, #0
 801263a:	801a      	strh	r2, [r3, #0]
 801263c:	805a      	strh	r2, [r3, #2]
 801263e:	809a      	strh	r2, [r3, #4]
 8012640:	80da      	strh	r2, [r3, #6]
 8012642:	3308      	adds	r3, #8
 8012644:	428b      	cmp	r3, r1
 8012646:	d1f8      	bne.n	801263a <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 8012648:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 801264c:	4770      	bx	lr
	...

08012650 <_ZN8touchgfx11ApplicationC1Ev>:
 8012650:	b570      	push	{r4, r5, r6, lr}
 8012652:	4b19      	ldr	r3, [pc, #100]	; (80126b8 <_ZN8touchgfx11ApplicationC1Ev+0x68>)
 8012654:	6003      	str	r3, [r0, #0]
 8012656:	2500      	movs	r5, #0
 8012658:	4604      	mov	r4, r0
 801265a:	f8a0 5084 	strh.w	r5, [r0, #132]	; 0x84
 801265e:	30a8      	adds	r0, #168	; 0xa8
 8012660:	f7ff ffe7 	bl	8012632 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8012664:	f104 00ea 	add.w	r0, r4, #234	; 0xea
 8012668:	f7ff ffe3 	bl	8012632 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 801266c:	f8a4 512c 	strh.w	r5, [r4, #300]	; 0x12c
 8012670:	f8a4 512e 	strh.w	r5, [r4, #302]	; 0x12e
 8012674:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 8012678:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 801267c:	f884 5134 	strb.w	r5, [r4, #308]	; 0x134
 8012680:	490e      	ldr	r1, [pc, #56]	; (80126bc <_ZN8touchgfx11ApplicationC1Ev+0x6c>)
 8012682:	480f      	ldr	r0, [pc, #60]	; (80126c0 <_ZN8touchgfx11ApplicationC1Ev+0x70>)
 8012684:	4e0f      	ldr	r6, [pc, #60]	; (80126c4 <_ZN8touchgfx11ApplicationC1Ev+0x74>)
 8012686:	f00e fec3 	bl	8021410 <CRC_Lock>
 801268a:	4b0f      	ldr	r3, [pc, #60]	; (80126c8 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 801268c:	b158      	cbz	r0, 80126a6 <_ZN8touchgfx11ApplicationC1Ev+0x56>
 801268e:	801d      	strh	r5, [r3, #0]
 8012690:	4a0e      	ldr	r2, [pc, #56]	; (80126cc <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 8012692:	2300      	movs	r3, #0
 8012694:	6013      	str	r3, [r2, #0]
 8012696:	4a0e      	ldr	r2, [pc, #56]	; (80126d0 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 8012698:	6033      	str	r3, [r6, #0]
 801269a:	4620      	mov	r0, r4
 801269c:	6013      	str	r3, [r2, #0]
 801269e:	f7ff ffbd 	bl	801261c <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
 80126a2:	4620      	mov	r0, r4
 80126a4:	bd70      	pop	{r4, r5, r6, pc}
 80126a6:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80126aa:	2002      	movs	r0, #2
 80126ac:	801a      	strh	r2, [r3, #0]
 80126ae:	6030      	str	r0, [r6, #0]
 80126b0:	f001 fae8 	bl	8013c84 <_ZN8touchgfx6Screen4drawEv>
 80126b4:	e7ec      	b.n	8012690 <_ZN8touchgfx11ApplicationC1Ev+0x40>
 80126b6:	bf00      	nop
 80126b8:	08025570 	.word	0x08025570
 80126bc:	b5e8b5cd 	.word	0xb5e8b5cd
 80126c0:	f407a5c2 	.word	0xf407a5c2
 80126c4:	20017990 	.word	0x20017990
 80126c8:	20000088 	.word	0x20000088
 80126cc:	200179a0 	.word	0x200179a0
 80126d0:	20017994 	.word	0x20017994

080126d4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 80126d4:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 80126d8:	3b01      	subs	r3, #1
 80126da:	b29b      	uxth	r3, r3
 80126dc:	428b      	cmp	r3, r1
 80126de:	b510      	push	{r4, lr}
 80126e0:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 80126e4:	d908      	bls.n	80126f8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 80126e6:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 80126ea:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 80126ee:	681a      	ldr	r2, [r3, #0]
 80126f0:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 80126f4:	685a      	ldr	r2, [r3, #4]
 80126f6:	6062      	str	r2, [r4, #4]
 80126f8:	bd10      	pop	{r4, pc}
	...

080126fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 80126fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012700:	4b94      	ldr	r3, [pc, #592]	; (8012954 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>)
 8012702:	b08f      	sub	sp, #60	; 0x3c
 8012704:	ac0a      	add	r4, sp, #40	; 0x28
 8012706:	e884 0006 	stmia.w	r4, {r1, r2}
 801270a:	f9b3 2000 	ldrsh.w	r2, [r3]
 801270e:	4b92      	ldr	r3, [pc, #584]	; (8012958 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x25c>)
 8012710:	4683      	mov	fp, r0
 8012712:	f9b3 1000 	ldrsh.w	r1, [r3]
 8012716:	4620      	mov	r0, r4
 8012718:	f7ff ff03 	bl	8012522 <_ZN8touchgfx4Rect10restrictToEss>
 801271c:	4620      	mov	r0, r4
 801271e:	f7fa f830 	bl	800c782 <_ZNK8touchgfx4Rect7isEmptyEv>
 8012722:	2800      	cmp	r0, #0
 8012724:	d16a      	bne.n	80127fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8012726:	9403      	str	r4, [sp, #12]
 8012728:	f8bb 50e8 	ldrh.w	r5, [fp, #232]	; 0xe8
 801272c:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 8012730:	eb0b 06c5 	add.w	r6, fp, r5, lsl #3
 8012734:	2400      	movs	r4, #0
 8012736:	9301      	str	r3, [sp, #4]
 8012738:	36a0      	adds	r6, #160	; 0xa0
 801273a:	42a5      	cmp	r5, r4
 801273c:	d00d      	beq.n	801275a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5e>
 801273e:	eba6 01c4 	sub.w	r1, r6, r4, lsl #3
 8012742:	9803      	ldr	r0, [sp, #12]
 8012744:	f7ff ff3e 	bl	80125c4 <_ZNK8touchgfx4Rect8includesERKS0_>
 8012748:	b128      	cbz	r0, 8012756 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a>
 801274a:	1e69      	subs	r1, r5, #1
 801274c:	1b09      	subs	r1, r1, r4
 801274e:	b289      	uxth	r1, r1
 8012750:	9801      	ldr	r0, [sp, #4]
 8012752:	f7ff ffbf 	bl	80126d4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8012756:	3401      	adds	r4, #1
 8012758:	e7ef      	b.n	801273a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3e>
 801275a:	f8bb 70e8 	ldrh.w	r7, [fp, #232]	; 0xe8
 801275e:	9704      	str	r7, [sp, #16]
 8012760:	1e7b      	subs	r3, r7, #1
 8012762:	9302      	str	r3, [sp, #8]
 8012764:	eb0b 0ac7 	add.w	sl, fp, r7, lsl #3
 8012768:	2400      	movs	r4, #0
 801276a:	4655      	mov	r5, sl
 801276c:	9705      	str	r7, [sp, #20]
 801276e:	4626      	mov	r6, r4
 8012770:	9b05      	ldr	r3, [sp, #20]
 8012772:	2b00      	cmp	r3, #0
 8012774:	d078      	beq.n	8012868 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x16c>
 8012776:	9903      	ldr	r1, [sp, #12]
 8012778:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 801277c:	f7ff feaf 	bl	80124de <_ZNK8touchgfx4Rect9intersectERKS0_>
 8012780:	b360      	cbz	r0, 80127dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 8012782:	f9bd e028 	ldrsh.w	lr, [sp, #40]	; 0x28
 8012786:	f9b5 c0a0 	ldrsh.w	ip, [r5, #160]	; 0xa0
 801278a:	f9bd 902a 	ldrsh.w	r9, [sp, #42]	; 0x2a
 801278e:	f9b5 80a2 	ldrsh.w	r8, [r5, #162]	; 0xa2
 8012792:	45e6      	cmp	lr, ip
 8012794:	db35      	blt.n	8012802 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8012796:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 801279a:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 801279e:	4472      	add	r2, lr
 80127a0:	4463      	add	r3, ip
 80127a2:	b212      	sxth	r2, r2
 80127a4:	b21b      	sxth	r3, r3
 80127a6:	429a      	cmp	r2, r3
 80127a8:	dc2b      	bgt.n	8012802 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 80127aa:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 80127ae:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 80127b2:	fa1f f288 	uxth.w	r2, r8
 80127b6:	4413      	add	r3, r2
 80127b8:	b29b      	uxth	r3, r3
 80127ba:	45c1      	cmp	r9, r8
 80127bc:	fa0f fe83 	sxth.w	lr, r3
 80127c0:	fa1f fc89 	uxth.w	ip, r9
 80127c4:	db0f      	blt.n	80127e6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 80127c6:	eba3 030c 	sub.w	r3, r3, ip
 80127ca:	1ac9      	subs	r1, r1, r3
 80127cc:	b209      	sxth	r1, r1
 80127ce:	2900      	cmp	r1, #0
 80127d0:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 80127d4:	dd12      	ble.n	80127fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80127d6:	f8ad e02a 	strh.w	lr, [sp, #42]	; 0x2a
 80127da:	4604      	mov	r4, r0
 80127dc:	9b05      	ldr	r3, [sp, #20]
 80127de:	3b01      	subs	r3, #1
 80127e0:	9305      	str	r3, [sp, #20]
 80127e2:	3d08      	subs	r5, #8
 80127e4:	e7c4      	b.n	8012770 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x74>
 80127e6:	4461      	add	r1, ip
 80127e8:	b209      	sxth	r1, r1
 80127ea:	4571      	cmp	r1, lr
 80127ec:	dc3a      	bgt.n	8012864 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 80127ee:	eba2 020c 	sub.w	r2, r2, ip
 80127f2:	b212      	sxth	r2, r2
 80127f4:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 80127f8:	2a00      	cmp	r2, #0
 80127fa:	dcee      	bgt.n	80127da <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 80127fc:	b00f      	add	sp, #60	; 0x3c
 80127fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012802:	45c1      	cmp	r9, r8
 8012804:	db2e      	blt.n	8012864 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 8012806:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 801280a:	4499      	add	r9, r3
 801280c:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 8012810:	4498      	add	r8, r3
 8012812:	fa0f f989 	sxth.w	r9, r9
 8012816:	fa0f f888 	sxth.w	r8, r8
 801281a:	45c1      	cmp	r9, r8
 801281c:	dc22      	bgt.n	8012864 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 801281e:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 8012822:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8012826:	fa1f f28c 	uxth.w	r2, ip
 801282a:	4413      	add	r3, r2
 801282c:	b29b      	uxth	r3, r3
 801282e:	45e6      	cmp	lr, ip
 8012830:	fa1f f88e 	uxth.w	r8, lr
 8012834:	fa0f f983 	sxth.w	r9, r3
 8012838:	db0a      	blt.n	8012850 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x154>
 801283a:	eba3 0308 	sub.w	r3, r3, r8
 801283e:	1ac9      	subs	r1, r1, r3
 8012840:	b209      	sxth	r1, r1
 8012842:	2900      	cmp	r1, #0
 8012844:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 8012848:	ddd8      	ble.n	80127fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 801284a:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 801284e:	e7c4      	b.n	80127da <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8012850:	4441      	add	r1, r8
 8012852:	b209      	sxth	r1, r1
 8012854:	4549      	cmp	r1, r9
 8012856:	dc05      	bgt.n	8012864 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 8012858:	eba2 0208 	sub.w	r2, r2, r8
 801285c:	b212      	sxth	r2, r2
 801285e:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 8012862:	e7c9      	b.n	80127f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 8012864:	4606      	mov	r6, r0
 8012866:	e7b9      	b.n	80127dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 8012868:	2c00      	cmp	r4, #0
 801286a:	f47f af7d 	bne.w	8012768 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c>
 801286e:	2e00      	cmp	r6, #0
 8012870:	f000 81e1 	beq.w	8012c36 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53a>
 8012874:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	; 0x2a
 8012878:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	; 0x28
 801287c:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8012880:	b2b9      	uxth	r1, r7
 8012882:	9105      	str	r1, [sp, #20]
 8012884:	9805      	ldr	r0, [sp, #20]
 8012886:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 801288a:	4401      	add	r1, r0
 801288c:	b2b3      	uxth	r3, r6
 801288e:	b289      	uxth	r1, r1
 8012890:	441a      	add	r2, r3
 8012892:	9106      	str	r1, [sp, #24]
 8012894:	b292      	uxth	r2, r2
 8012896:	f9bd 9018 	ldrsh.w	r9, [sp, #24]
 801289a:	fa0f f882 	sxth.w	r8, r2
 801289e:	4655      	mov	r5, sl
 80128a0:	e9cd 2307 	strd	r2, r3, [sp, #28]
 80128a4:	9b04      	ldr	r3, [sp, #16]
 80128a6:	2b00      	cmp	r3, #0
 80128a8:	d058      	beq.n	801295c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x260>
 80128aa:	9903      	ldr	r1, [sp, #12]
 80128ac:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 80128b0:	f7ff fe15 	bl	80124de <_ZNK8touchgfx4Rect9intersectERKS0_>
 80128b4:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 80128b8:	b1d8      	cbz	r0, 80128f2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 80128ba:	f9b5 e0a0 	ldrsh.w	lr, [r5, #160]	; 0xa0
 80128be:	f9b5 10a2 	ldrsh.w	r1, [r5, #162]	; 0xa2
 80128c2:	4576      	cmp	r6, lr
 80128c4:	dc26      	bgt.n	8012914 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x218>
 80128c6:	f8b5 c0a4 	ldrh.w	ip, [r5, #164]	; 0xa4
 80128ca:	44f4      	add	ip, lr
 80128cc:	fa0f fc8c 	sxth.w	ip, ip
 80128d0:	45e0      	cmp	r8, ip
 80128d2:	db1f      	blt.n	8012914 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x218>
 80128d4:	428f      	cmp	r7, r1
 80128d6:	fa1f fc81 	uxth.w	ip, r1
 80128da:	f8b5 10a6 	ldrh.w	r1, [r5, #166]	; 0xa6
 80128de:	dc0f      	bgt.n	8012900 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x204>
 80128e0:	9806      	ldr	r0, [sp, #24]
 80128e2:	f8a5 90a2 	strh.w	r9, [r5, #162]	; 0xa2
 80128e6:	eba0 0c0c 	sub.w	ip, r0, ip
 80128ea:	eba1 010c 	sub.w	r1, r1, ip
 80128ee:	f8a5 10a6 	strh.w	r1, [r5, #166]	; 0xa6
 80128f2:	4620      	mov	r0, r4
 80128f4:	9904      	ldr	r1, [sp, #16]
 80128f6:	3901      	subs	r1, #1
 80128f8:	9104      	str	r1, [sp, #16]
 80128fa:	3d08      	subs	r5, #8
 80128fc:	4604      	mov	r4, r0
 80128fe:	e7cf      	b.n	80128a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a4>
 8012900:	4461      	add	r1, ip
 8012902:	b209      	sxth	r1, r1
 8012904:	4549      	cmp	r1, r9
 8012906:	dcf5      	bgt.n	80128f4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 8012908:	9905      	ldr	r1, [sp, #20]
 801290a:	eba1 0c0c 	sub.w	ip, r1, ip
 801290e:	f8a5 c0a6 	strh.w	ip, [r5, #166]	; 0xa6
 8012912:	e7ee      	b.n	80128f2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 8012914:	428f      	cmp	r7, r1
 8012916:	dced      	bgt.n	80128f4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 8012918:	f8b5 c0a6 	ldrh.w	ip, [r5, #166]	; 0xa6
 801291c:	4461      	add	r1, ip
 801291e:	b209      	sxth	r1, r1
 8012920:	4589      	cmp	r9, r1
 8012922:	dbe7      	blt.n	80128f4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 8012924:	4576      	cmp	r6, lr
 8012926:	fa1f fc8e 	uxth.w	ip, lr
 801292a:	f8b5 10a4 	ldrh.w	r1, [r5, #164]	; 0xa4
 801292e:	dc08      	bgt.n	8012942 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x246>
 8012930:	eba2 0c0c 	sub.w	ip, r2, ip
 8012934:	eba1 010c 	sub.w	r1, r1, ip
 8012938:	f8a5 80a0 	strh.w	r8, [r5, #160]	; 0xa0
 801293c:	f8a5 10a4 	strh.w	r1, [r5, #164]	; 0xa4
 8012940:	e7d7      	b.n	80128f2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 8012942:	4461      	add	r1, ip
 8012944:	b209      	sxth	r1, r1
 8012946:	4588      	cmp	r8, r1
 8012948:	dbd4      	blt.n	80128f4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 801294a:	eba3 0c0c 	sub.w	ip, r3, ip
 801294e:	f8a5 c0a4 	strh.w	ip, [r5, #164]	; 0xa4
 8012952:	e7ce      	b.n	80128f2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 8012954:	20017942 	.word	0x20017942
 8012958:	20017940 	.word	0x20017940
 801295c:	2c00      	cmp	r4, #0
 801295e:	f000 816a 	beq.w	8012c36 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53a>
 8012962:	9b02      	ldr	r3, [sp, #8]
 8012964:	3301      	adds	r3, #1
 8012966:	f000 8166 	beq.w	8012c36 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53a>
 801296a:	f10a 04a0 	add.w	r4, sl, #160	; 0xa0
 801296e:	4621      	mov	r1, r4
 8012970:	9803      	ldr	r0, [sp, #12]
 8012972:	f7ff fe27 	bl	80125c4 <_ZNK8touchgfx4Rect8includesERKS0_>
 8012976:	b120      	cbz	r0, 8012982 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x286>
 8012978:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801297c:	9801      	ldr	r0, [sp, #4]
 801297e:	f7ff fea9 	bl	80126d4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8012982:	9903      	ldr	r1, [sp, #12]
 8012984:	4620      	mov	r0, r4
 8012986:	f7ff fdaa 	bl	80124de <_ZNK8touchgfx4Rect9intersectERKS0_>
 801298a:	2800      	cmp	r0, #0
 801298c:	f000 809b 	beq.w	8012ac6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ca>
 8012990:	f9ba 00a0 	ldrsh.w	r0, [sl, #160]	; 0xa0
 8012994:	f9ba 30a4 	ldrsh.w	r3, [sl, #164]	; 0xa4
 8012998:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 801299c:	9309      	str	r3, [sp, #36]	; 0x24
 801299e:	b281      	uxth	r1, r0
 80129a0:	eb01 0c03 	add.w	ip, r1, r3
 80129a4:	fa1f f98c 	uxth.w	r9, ip
 80129a8:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 80129ac:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	; 0x2a
 80129b0:	f9ba 20a2 	ldrsh.w	r2, [sl, #162]	; 0xa2
 80129b4:	b2ab      	uxth	r3, r5
 80129b6:	eb03 040c 	add.w	r4, r3, ip
 80129ba:	b2a4      	uxth	r4, r4
 80129bc:	9405      	str	r4, [sp, #20]
 80129be:	f9bd 4014 	ldrsh.w	r4, [sp, #20]
 80129c2:	9404      	str	r4, [sp, #16]
 80129c4:	4285      	cmp	r5, r0
 80129c6:	f8bb 40e8 	ldrh.w	r4, [fp, #232]	; 0xe8
 80129ca:	f340 809a 	ble.w	8012b02 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x406>
 80129ce:	1a5b      	subs	r3, r3, r1
 80129d0:	b29b      	uxth	r3, r3
 80129d2:	4596      	cmp	lr, r2
 80129d4:	fa0f f589 	sxth.w	r5, r9
 80129d8:	b21e      	sxth	r6, r3
 80129da:	dd2e      	ble.n	8012a3a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x33e>
 80129dc:	9f02      	ldr	r7, [sp, #8]
 80129de:	f8bd 002e 	ldrh.w	r0, [sp, #46]	; 0x2e
 80129e2:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 80129e6:	9f04      	ldr	r7, [sp, #16]
 80129e8:	1b7f      	subs	r7, r7, r5
 80129ea:	f8b8 50ae 	ldrh.w	r5, [r8, #174]	; 0xae
 80129ee:	fa1f fe8e 	uxth.w	lr, lr
 80129f2:	b292      	uxth	r2, r2
 80129f4:	ebae 0102 	sub.w	r1, lr, r2
 80129f8:	4486      	add	lr, r0
 80129fa:	442a      	add	r2, r5
 80129fc:	b289      	uxth	r1, r1
 80129fe:	fa0f fe8e 	sxth.w	lr, lr
 8012a02:	b212      	sxth	r2, r2
 8012a04:	b20c      	sxth	r4, r1
 8012a06:	ebae 0202 	sub.w	r2, lr, r2
 8012a0a:	4367      	muls	r7, r4
 8012a0c:	4372      	muls	r2, r6
 8012a0e:	4297      	cmp	r7, r2
 8012a10:	db09      	blt.n	8012a26 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x32a>
 8012a12:	f8b8 20a8 	ldrh.w	r2, [r8, #168]	; 0xa8
 8012a16:	f8a8 40ae 	strh.w	r4, [r8, #174]	; 0xae
 8012a1a:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8012a1e:	449c      	add	ip, r3
 8012a20:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8012a24:	e680      	b.n	8012728 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8012a26:	4401      	add	r1, r0
 8012a28:	f8b8 30aa 	ldrh.w	r3, [r8, #170]	; 0xaa
 8012a2c:	f8a8 60ac 	strh.w	r6, [r8, #172]	; 0xac
 8012a30:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8012a34:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8012a38:	e676      	b.n	8012728 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8012a3a:	9f04      	ldr	r7, [sp, #16]
 8012a3c:	42bd      	cmp	r5, r7
 8012a3e:	da27      	bge.n	8012a90 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x394>
 8012a40:	9902      	ldr	r1, [sp, #8]
 8012a42:	f8bd 402e 	ldrh.w	r4, [sp, #46]	; 0x2e
 8012a46:	eb0b 00c1 	add.w	r0, fp, r1, lsl #3
 8012a4a:	eb04 010e 	add.w	r1, r4, lr
 8012a4e:	fa1f f881 	uxth.w	r8, r1
 8012a52:	f8b0 10ae 	ldrh.w	r1, [r0, #174]	; 0xae
 8012a56:	4411      	add	r1, r2
 8012a58:	eba1 0108 	sub.w	r1, r1, r8
 8012a5c:	b289      	uxth	r1, r1
 8012a5e:	fa0f f988 	sxth.w	r9, r8
 8012a62:	eba2 020e 	sub.w	r2, r2, lr
 8012a66:	fa0f f881 	sxth.w	r8, r1
 8012a6a:	1b7f      	subs	r7, r7, r5
 8012a6c:	4372      	muls	r2, r6
 8012a6e:	fb08 f707 	mul.w	r7, r8, r7
 8012a72:	42ba      	cmp	r2, r7
 8012a74:	dc06      	bgt.n	8012a84 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 8012a76:	f8a0 90aa 	strh.w	r9, [r0, #170]	; 0xaa
 8012a7a:	f8a0 80ae 	strh.w	r8, [r0, #174]	; 0xae
 8012a7e:	f8b0 20a8 	ldrh.w	r2, [r0, #168]	; 0xa8
 8012a82:	e7ca      	b.n	8012a1a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 8012a84:	f8a0 60ac 	strh.w	r6, [r0, #172]	; 0xac
 8012a88:	4421      	add	r1, r4
 8012a8a:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8012a8e:	e64b      	b.n	8012728 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8012a90:	9d05      	ldr	r5, [sp, #20]
 8012a92:	eba9 0505 	sub.w	r5, r9, r5
 8012a96:	b2ad      	uxth	r5, r5
 8012a98:	2c06      	cmp	r4, #6
 8012a9a:	fa0f fe85 	sxth.w	lr, r5
 8012a9e:	d818      	bhi.n	8012ad2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3d6>
 8012aa0:	9b04      	ldr	r3, [sp, #16]
 8012aa2:	f8aa 30a0 	strh.w	r3, [sl, #160]	; 0xa0
 8012aa6:	1c63      	adds	r3, r4, #1
 8012aa8:	f9ba 10a6 	ldrsh.w	r1, [sl, #166]	; 0xa6
 8012aac:	f8aa e0a4 	strh.w	lr, [sl, #164]	; 0xa4
 8012ab0:	f8ab 30e8 	strh.w	r3, [fp, #232]	; 0xe8
 8012ab4:	9b01      	ldr	r3, [sp, #4]
 8012ab6:	9d01      	ldr	r5, [sp, #4]
 8012ab8:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8012abc:	f825 0034 	strh.w	r0, [r5, r4, lsl #3]
 8012ac0:	805a      	strh	r2, [r3, #2]
 8012ac2:	809e      	strh	r6, [r3, #4]
 8012ac4:	80d9      	strh	r1, [r3, #6]
 8012ac6:	9b02      	ldr	r3, [sp, #8]
 8012ac8:	3b01      	subs	r3, #1
 8012aca:	9302      	str	r3, [sp, #8]
 8012acc:	f1aa 0a08 	sub.w	sl, sl, #8
 8012ad0:	e747      	b.n	8012962 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x266>
 8012ad2:	9a02      	ldr	r2, [sp, #8]
 8012ad4:	45b6      	cmp	lr, r6
 8012ad6:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8012ada:	db0d      	blt.n	8012af8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3fc>
 8012adc:	449c      	add	ip, r3
 8012ade:	fa1f fc8c 	uxth.w	ip, ip
 8012ae2:	445a      	add	r2, fp
 8012ae4:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8012ae8:	448c      	add	ip, r1
 8012aea:	f8ad 0028 	strh.w	r0, [sp, #40]	; 0x28
 8012aee:	f8a2 c0a8 	strh.w	ip, [r2, #168]	; 0xa8
 8012af2:	f8a2 e0ac 	strh.w	lr, [r2, #172]	; 0xac
 8012af6:	e617      	b.n	8012728 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8012af8:	445a      	add	r2, fp
 8012afa:	44ac      	add	ip, r5
 8012afc:	f8a2 60ac 	strh.w	r6, [r2, #172]	; 0xac
 8012b00:	e78e      	b.n	8012a20 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x324>
 8012b02:	f8bd 602e 	ldrh.w	r6, [sp, #46]	; 0x2e
 8012b06:	fa1f f18e 	uxth.w	r1, lr
 8012b0a:	eb01 0806 	add.w	r8, r1, r6
 8012b0e:	b293      	uxth	r3, r2
 8012b10:	fa1f f888 	uxth.w	r8, r8
 8012b14:	9306      	str	r3, [sp, #24]
 8012b16:	fa0f f388 	sxth.w	r3, r8
 8012b1a:	9307      	str	r3, [sp, #28]
 8012b1c:	9f06      	ldr	r7, [sp, #24]
 8012b1e:	f8ba 30a6 	ldrh.w	r3, [sl, #166]	; 0xa6
 8012b22:	443b      	add	r3, r7
 8012b24:	b29b      	uxth	r3, r3
 8012b26:	4596      	cmp	lr, r2
 8012b28:	9308      	str	r3, [sp, #32]
 8012b2a:	da25      	bge.n	8012b78 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x47c>
 8012b2c:	9905      	ldr	r1, [sp, #20]
 8012b2e:	eba3 0308 	sub.w	r3, r3, r8
 8012b32:	eba9 0401 	sub.w	r4, r9, r1
 8012b36:	b2a4      	uxth	r4, r4
 8012b38:	b29b      	uxth	r3, r3
 8012b3a:	fa0f f984 	sxth.w	r9, r4
 8012b3e:	b219      	sxth	r1, r3
 8012b40:	eba2 020e 	sub.w	r2, r2, lr
 8012b44:	1b40      	subs	r0, r0, r5
 8012b46:	fb09 f202 	mul.w	r2, r9, r2
 8012b4a:	4348      	muls	r0, r1
 8012b4c:	4282      	cmp	r2, r0
 8012b4e:	9a02      	ldr	r2, [sp, #8]
 8012b50:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8012b54:	445a      	add	r2, fp
 8012b56:	dc06      	bgt.n	8012b66 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46a>
 8012b58:	9b07      	ldr	r3, [sp, #28]
 8012b5a:	f8a2 10ae 	strh.w	r1, [r2, #174]	; 0xae
 8012b5e:	f8a2 30aa 	strh.w	r3, [r2, #170]	; 0xaa
 8012b62:	44a4      	add	ip, r4
 8012b64:	e75c      	b.n	8012a20 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x324>
 8012b66:	9904      	ldr	r1, [sp, #16]
 8012b68:	f8a2 90ac 	strh.w	r9, [r2, #172]	; 0xac
 8012b6c:	f8a2 10a8 	strh.w	r1, [r2, #168]	; 0xa8
 8012b70:	4433      	add	r3, r6
 8012b72:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8012b76:	e5d7      	b.n	8012728 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8012b78:	9f06      	ldr	r7, [sp, #24]
 8012b7a:	9b04      	ldr	r3, [sp, #16]
 8012b7c:	1bc9      	subs	r1, r1, r7
 8012b7e:	fa0f f789 	sxth.w	r7, r9
 8012b82:	b289      	uxth	r1, r1
 8012b84:	429f      	cmp	r7, r3
 8012b86:	fa0f fe81 	sxth.w	lr, r1
 8012b8a:	dd22      	ble.n	8012bd2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4d6>
 8012b8c:	9a05      	ldr	r2, [sp, #20]
 8012b8e:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8012b92:	1b40      	subs	r0, r0, r5
 8012b94:	eba9 0202 	sub.w	r2, r9, r2
 8012b98:	9d07      	ldr	r5, [sp, #28]
 8012b9a:	b292      	uxth	r2, r2
 8012b9c:	eba5 0a03 	sub.w	sl, r5, r3
 8012ba0:	b214      	sxth	r4, r2
 8012ba2:	9b02      	ldr	r3, [sp, #8]
 8012ba4:	fb0e f000 	mul.w	r0, lr, r0
 8012ba8:	fb04 fa0a 	mul.w	sl, r4, sl
 8012bac:	00db      	lsls	r3, r3, #3
 8012bae:	4550      	cmp	r0, sl
 8012bb0:	445b      	add	r3, fp
 8012bb2:	db03      	blt.n	8012bbc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c0>
 8012bb4:	f8a3 e0ae 	strh.w	lr, [r3, #174]	; 0xae
 8012bb8:	4494      	add	ip, r2
 8012bba:	e731      	b.n	8012a20 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x324>
 8012bbc:	9a04      	ldr	r2, [sp, #16]
 8012bbe:	f8a3 20a8 	strh.w	r2, [r3, #168]	; 0xa8
 8012bc2:	f8a3 40ac 	strh.w	r4, [r3, #172]	; 0xac
 8012bc6:	f8b3 30aa 	ldrh.w	r3, [r3, #170]	; 0xaa
 8012bca:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8012bce:	4431      	add	r1, r6
 8012bd0:	e75b      	b.n	8012a8a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38e>
 8012bd2:	9b08      	ldr	r3, [sp, #32]
 8012bd4:	eba3 0308 	sub.w	r3, r3, r8
 8012bd8:	b29b      	uxth	r3, r3
 8012bda:	2c06      	cmp	r4, #6
 8012bdc:	b21d      	sxth	r5, r3
 8012bde:	d813      	bhi.n	8012c08 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x50c>
 8012be0:	9b07      	ldr	r3, [sp, #28]
 8012be2:	f8aa 30a2 	strh.w	r3, [sl, #162]	; 0xa2
 8012be6:	1c63      	adds	r3, r4, #1
 8012be8:	f8aa 50a6 	strh.w	r5, [sl, #166]	; 0xa6
 8012bec:	f8ab 30e8 	strh.w	r3, [fp, #232]	; 0xe8
 8012bf0:	9b01      	ldr	r3, [sp, #4]
 8012bf2:	9901      	ldr	r1, [sp, #4]
 8012bf4:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8012bf8:	f821 0034 	strh.w	r0, [r1, r4, lsl #3]
 8012bfc:	805a      	strh	r2, [r3, #2]
 8012bfe:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8012c00:	809a      	strh	r2, [r3, #4]
 8012c02:	f8a3 e006 	strh.w	lr, [r3, #6]
 8012c06:	e75e      	b.n	8012ac6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ca>
 8012c08:	9802      	ldr	r0, [sp, #8]
 8012c0a:	4575      	cmp	r5, lr
 8012c0c:	ea4f 00c0 	mov.w	r0, r0, lsl #3
 8012c10:	db0d      	blt.n	8012c2e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x532>
 8012c12:	4431      	add	r1, r6
 8012c14:	9b06      	ldr	r3, [sp, #24]
 8012c16:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 8012c1a:	b289      	uxth	r1, r1
 8012c1c:	4458      	add	r0, fp
 8012c1e:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8012c22:	4419      	add	r1, r3
 8012c24:	f8a0 10aa 	strh.w	r1, [r0, #170]	; 0xaa
 8012c28:	f8a0 50ae 	strh.w	r5, [r0, #174]	; 0xae
 8012c2c:	e57c      	b.n	8012728 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8012c2e:	4458      	add	r0, fp
 8012c30:	f8a0 e0ae 	strh.w	lr, [r0, #174]	; 0xae
 8012c34:	e79c      	b.n	8012b70 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x474>
 8012c36:	f8bb 60e8 	ldrh.w	r6, [fp, #232]	; 0xe8
 8012c3a:	2e07      	cmp	r6, #7
 8012c3c:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 8012c40:	d812      	bhi.n	8012c68 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56c>
 8012c42:	1c75      	adds	r5, r6, #1
 8012c44:	f8ab 50e8 	strh.w	r5, [fp, #232]	; 0xe8
 8012c48:	9d01      	ldr	r5, [sp, #4]
 8012c4a:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 8012c4e:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 8012c52:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8012c56:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 8012c5a:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 8012c5e:	442c      	add	r4, r5
 8012c60:	8061      	strh	r1, [r4, #2]
 8012c62:	80a2      	strh	r2, [r4, #4]
 8012c64:	80e3      	strh	r3, [r4, #6]
 8012c66:	e5c9      	b.n	80127fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8012c68:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 8012c6c:	3e01      	subs	r6, #1
 8012c6e:	445c      	add	r4, fp
 8012c70:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 8012c74:	f04f 37ff 	mov.w	r7, #4294967295
 8012c78:	2500      	movs	r5, #0
 8012c7a:	9305      	str	r3, [sp, #20]
 8012c7c:	f9b4 30a4 	ldrsh.w	r3, [r4, #164]	; 0xa4
 8012c80:	9302      	str	r3, [sp, #8]
 8012c82:	1e72      	subs	r2, r6, #1
 8012c84:	f9b4 30a6 	ldrsh.w	r3, [r4, #166]	; 0xa6
 8012c88:	9304      	str	r3, [sp, #16]
 8012c8a:	4691      	mov	r9, r2
 8012c8c:	f104 03a0 	add.w	r3, r4, #160	; 0xa0
 8012c90:	f1b9 3fff 	cmp.w	r9, #4294967295
 8012c94:	bf14      	ite	ne
 8012c96:	9905      	ldrne	r1, [sp, #20]
 8012c98:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 8012c9c:	6818      	ldr	r0, [r3, #0]
 8012c9e:	9207      	str	r2, [sp, #28]
 8012ca0:	bf18      	it	ne
 8012ca2:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 8012ca6:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8012caa:	f8be 1006 	ldrh.w	r1, [lr, #6]
 8012cae:	f8be 8004 	ldrh.w	r8, [lr, #4]
 8012cb2:	9306      	str	r3, [sp, #24]
 8012cb4:	fb18 f801 	smulbb	r8, r8, r1
 8012cb8:	6859      	ldr	r1, [r3, #4]
 8012cba:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8012cbe:	4671      	mov	r1, lr
 8012cc0:	a80c      	add	r0, sp, #48	; 0x30
 8012cc2:	f7fb fa6f 	bl	800e1a4 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8012cc6:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 8012cca:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 8012cce:	9b04      	ldr	r3, [sp, #16]
 8012cd0:	9a02      	ldr	r2, [sp, #8]
 8012cd2:	fb10 f001 	smulbb	r0, r0, r1
 8012cd6:	fb02 8803 	mla	r8, r2, r3, r8
 8012cda:	eba0 0108 	sub.w	r1, r0, r8
 8012cde:	f04f 0c08 	mov.w	ip, #8
 8012ce2:	fb90 f0fc 	sdiv	r0, r0, ip
 8012ce6:	4288      	cmp	r0, r1
 8012ce8:	dc20      	bgt.n	8012d2c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x630>
 8012cea:	4551      	cmp	r1, sl
 8012cec:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 8012cf0:	da03      	bge.n	8012cfa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fe>
 8012cf2:	b1d9      	cbz	r1, 8012d2c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x630>
 8012cf4:	468a      	mov	sl, r1
 8012cf6:	464f      	mov	r7, r9
 8012cf8:	4635      	mov	r5, r6
 8012cfa:	f109 39ff 	add.w	r9, r9, #4294967295
 8012cfe:	f119 0f02 	cmn.w	r9, #2
 8012d02:	d1c5      	bne.n	8012c90 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8012d04:	4616      	mov	r6, r2
 8012d06:	3201      	adds	r2, #1
 8012d08:	f1a4 0408 	sub.w	r4, r4, #8
 8012d0c:	d1b6      	bne.n	8012c7c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x580>
 8012d0e:	9b01      	ldr	r3, [sp, #4]
 8012d10:	b2ac      	uxth	r4, r5
 8012d12:	00ed      	lsls	r5, r5, #3
 8012d14:	1958      	adds	r0, r3, r5
 8012d16:	1c7b      	adds	r3, r7, #1
 8012d18:	d10b      	bne.n	8012d32 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x636>
 8012d1a:	4601      	mov	r1, r0
 8012d1c:	9803      	ldr	r0, [sp, #12]
 8012d1e:	f7fb fa41 	bl	800e1a4 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8012d22:	4621      	mov	r1, r4
 8012d24:	9801      	ldr	r0, [sp, #4]
 8012d26:	f7ff fcd5 	bl	80126d4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8012d2a:	e4fd      	b.n	8012728 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8012d2c:	464f      	mov	r7, r9
 8012d2e:	4635      	mov	r5, r6
 8012d30:	e7ed      	b.n	8012d0e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x612>
 8012d32:	9b01      	ldr	r3, [sp, #4]
 8012d34:	00ff      	lsls	r7, r7, #3
 8012d36:	19d9      	adds	r1, r3, r7
 8012d38:	f7fb fa34 	bl	800e1a4 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8012d3c:	9b03      	ldr	r3, [sp, #12]
 8012d3e:	cb03      	ldmia	r3!, {r0, r1}
 8012d40:	445f      	add	r7, fp
 8012d42:	445d      	add	r5, fp
 8012d44:	f8c7 00a8 	str.w	r0, [r7, #168]	; 0xa8
 8012d48:	f8c7 10ac 	str.w	r1, [r7, #172]	; 0xac
 8012d4c:	f855 0fa8 	ldr.w	r0, [r5, #168]!
 8012d50:	9b03      	ldr	r3, [sp, #12]
 8012d52:	6869      	ldr	r1, [r5, #4]
 8012d54:	c303      	stmia	r3!, {r0, r1}
 8012d56:	e7e4      	b.n	8012d22 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x626>

08012d58 <_ZN8touchgfx11Application10invalidateEv>:
 8012d58:	4b09      	ldr	r3, [pc, #36]	; (8012d80 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 8012d5a:	f9b3 2000 	ldrsh.w	r2, [r3]
 8012d5e:	4b09      	ldr	r3, [pc, #36]	; (8012d84 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 8012d60:	b082      	sub	sp, #8
 8012d62:	f9b3 3000 	ldrsh.w	r3, [r3]
 8012d66:	f8ad 3006 	strh.w	r3, [sp, #6]
 8012d6a:	2100      	movs	r1, #0
 8012d6c:	9100      	str	r1, [sp, #0]
 8012d6e:	f8ad 2004 	strh.w	r2, [sp, #4]
 8012d72:	ab02      	add	r3, sp, #8
 8012d74:	e913 0006 	ldmdb	r3, {r1, r2}
 8012d78:	b002      	add	sp, #8
 8012d7a:	f7ff bcbf 	b.w	80126fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 8012d7e:	bf00      	nop
 8012d80:	20017940 	.word	0x20017940
 8012d84:	20017942 	.word	0x20017942

08012d88 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 8012d88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012d8c:	f500 7696 	add.w	r6, r0, #300	; 0x12c
 8012d90:	b09b      	sub	sp, #108	; 0x6c
 8012d92:	4604      	mov	r4, r0
 8012d94:	4630      	mov	r0, r6
 8012d96:	f7f9 fcf4 	bl	800c782 <_ZNK8touchgfx4Rect7isEmptyEv>
 8012d9a:	4605      	mov	r5, r0
 8012d9c:	b940      	cbnz	r0, 8012db0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x28>
 8012d9e:	e896 0006 	ldmia.w	r6, {r1, r2}
 8012da2:	4620      	mov	r0, r4
 8012da4:	f7ff fcaa 	bl	80126fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 8012da8:	f8c4 512c 	str.w	r5, [r4, #300]	; 0x12c
 8012dac:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 8012db0:	4bc9      	ldr	r3, [pc, #804]	; (80130d8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8012db2:	681b      	ldr	r3, [r3, #0]
 8012db4:	2b00      	cmp	r3, #0
 8012db6:	d03e      	beq.n	8012e36 <_ZN8touchgfx11Application15drawCachedAreasEv+0xae>
 8012db8:	4dc8      	ldr	r5, [pc, #800]	; (80130dc <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 8012dba:	4628      	mov	r0, r5
 8012dbc:	f7f9 fce1 	bl	800c782 <_ZNK8touchgfx4Rect7isEmptyEv>
 8012dc0:	4606      	mov	r6, r0
 8012dc2:	2800      	cmp	r0, #0
 8012dc4:	d137      	bne.n	8012e36 <_ZN8touchgfx11Application15drawCachedAreasEv+0xae>
 8012dc6:	4628      	mov	r0, r5
 8012dc8:	f7ff fa4a 	bl	8012260 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8012dcc:	6829      	ldr	r1, [r5, #0]
 8012dce:	686a      	ldr	r2, [r5, #4]
 8012dd0:	4620      	mov	r0, r4
 8012dd2:	f7ff fc93 	bl	80126fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 8012dd6:	802e      	strh	r6, [r5, #0]
 8012dd8:	806e      	strh	r6, [r5, #2]
 8012dda:	80ae      	strh	r6, [r5, #4]
 8012ddc:	80ee      	strh	r6, [r5, #6]
 8012dde:	ae09      	add	r6, sp, #36	; 0x24
 8012de0:	4630      	mov	r0, r6
 8012de2:	f7ff fc26 	bl	8012632 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8012de6:	4abe      	ldr	r2, [pc, #760]	; (80130e0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 8012de8:	f8b4 70e8 	ldrh.w	r7, [r4, #232]	; 0xe8
 8012dec:	8815      	ldrh	r5, [r2, #0]
 8012dee:	9202      	str	r2, [sp, #8]
 8012df0:	462b      	mov	r3, r5
 8012df2:	f104 00a8 	add.w	r0, r4, #168	; 0xa8
 8012df6:	429f      	cmp	r7, r3
 8012df8:	d924      	bls.n	8012e44 <_ZN8touchgfx11Application15drawCachedAreasEv+0xbc>
 8012dfa:	f8bd 1064 	ldrh.w	r1, [sp, #100]	; 0x64
 8012dfe:	2907      	cmp	r1, #7
 8012e00:	d816      	bhi.n	8012e30 <_ZN8touchgfx11Application15drawCachedAreasEv+0xa8>
 8012e02:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 8012e06:	f930 8033 	ldrsh.w	r8, [r0, r3, lsl #3]
 8012e0a:	f9b2 9002 	ldrsh.w	r9, [r2, #2]
 8012e0e:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 8012e12:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 8012e16:	1c4a      	adds	r2, r1, #1
 8012e18:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
 8012e1c:	eb06 02c1 	add.w	r2, r6, r1, lsl #3
 8012e20:	f826 8031 	strh.w	r8, [r6, r1, lsl #3]
 8012e24:	f8a2 9002 	strh.w	r9, [r2, #2]
 8012e28:	f8a2 e004 	strh.w	lr, [r2, #4]
 8012e2c:	f8a2 c006 	strh.w	ip, [r2, #6]
 8012e30:	3301      	adds	r3, #1
 8012e32:	b29b      	uxth	r3, r3
 8012e34:	e7df      	b.n	8012df6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x6e>
 8012e36:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 8012e3a:	2b00      	cmp	r3, #0
 8012e3c:	d1cf      	bne.n	8012dde <_ZN8touchgfx11Application15drawCachedAreasEv+0x56>
 8012e3e:	b01b      	add	sp, #108	; 0x6c
 8012e40:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012e44:	462f      	mov	r7, r5
 8012e46:	f8b4 312a 	ldrh.w	r3, [r4, #298]	; 0x12a
 8012e4a:	42bb      	cmp	r3, r7
 8012e4c:	d90b      	bls.n	8012e66 <_ZN8touchgfx11Application15drawCachedAreasEv+0xde>
 8012e4e:	eb04 03c7 	add.w	r3, r4, r7, lsl #3
 8012e52:	4620      	mov	r0, r4
 8012e54:	f8d3 10ea 	ldr.w	r1, [r3, #234]	; 0xea
 8012e58:	f8d3 20ee 	ldr.w	r2, [r3, #238]	; 0xee
 8012e5c:	3701      	adds	r7, #1
 8012e5e:	f7ff fc4d 	bl	80126fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 8012e62:	b2bf      	uxth	r7, r7
 8012e64:	e7ef      	b.n	8012e46 <_ZN8touchgfx11Application15drawCachedAreasEv+0xbe>
 8012e66:	4a9f      	ldr	r2, [pc, #636]	; (80130e4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 8012e68:	6813      	ldr	r3, [r2, #0]
 8012e6a:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 8012e6e:	2b01      	cmp	r3, #1
 8012e70:	4690      	mov	r8, r2
 8012e72:	f040 80e6 	bne.w	8013042 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ba>
 8012e76:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
 8012e7a:	f8b4 70e8 	ldrh.w	r7, [r4, #232]	; 0xe8
 8012e7e:	4629      	mov	r1, r5
 8012e80:	33aa      	adds	r3, #170	; 0xaa
 8012e82:	2500      	movs	r5, #0
 8012e84:	428f      	cmp	r7, r1
 8012e86:	f103 0308 	add.w	r3, r3, #8
 8012e8a:	dd0a      	ble.n	8012ea2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x11a>
 8012e8c:	f833 2c08 	ldrh.w	r2, [r3, #-8]
 8012e90:	f833 0c04 	ldrh.w	r0, [r3, #-4]
 8012e94:	4402      	add	r2, r0
 8012e96:	b212      	sxth	r2, r2
 8012e98:	4295      	cmp	r5, r2
 8012e9a:	bfb8      	it	lt
 8012e9c:	4615      	movlt	r5, r2
 8012e9e:	3101      	adds	r1, #1
 8012ea0:	e7f0      	b.n	8012e84 <_ZN8touchgfx11Application15drawCachedAreasEv+0xfc>
 8012ea2:	4b91      	ldr	r3, [pc, #580]	; (80130e8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 8012ea4:	f8df b23c 	ldr.w	fp, [pc, #572]	; 80130e4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>
 8012ea8:	881b      	ldrh	r3, [r3, #0]
 8012eaa:	2b0f      	cmp	r3, #15
 8012eac:	bf88      	it	hi
 8012eae:	ea4f 0ad3 	movhi.w	sl, r3, lsr #3
 8012eb2:	f04f 0300 	mov.w	r3, #0
 8012eb6:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8012eba:	bf98      	it	ls
 8012ebc:	f04f 0a01 	movls.w	sl, #1
 8012ec0:	46d8      	mov	r8, fp
 8012ec2:	f8bd 701a 	ldrh.w	r7, [sp, #26]
 8012ec6:	f8bd 0016 	ldrh.w	r0, [sp, #22]
 8012eca:	4438      	add	r0, r7
 8012ecc:	b207      	sxth	r7, r0
 8012ece:	f8db 0000 	ldr.w	r0, [fp]
 8012ed2:	42bd      	cmp	r5, r7
 8012ed4:	6803      	ldr	r3, [r0, #0]
 8012ed6:	f340 8084 	ble.w	8012fe2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 8012eda:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 8012ede:	4798      	blx	r3
 8012ee0:	eb07 030a 	add.w	r3, r7, sl
 8012ee4:	4298      	cmp	r0, r3
 8012ee6:	da07      	bge.n	8012ef8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x170>
 8012ee8:	4285      	cmp	r5, r0
 8012eea:	dd05      	ble.n	8012ef8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x170>
 8012eec:	4287      	cmp	r7, r0
 8012eee:	dd6d      	ble.n	8012fcc <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 8012ef0:	2f00      	cmp	r7, #0
 8012ef2:	dd6b      	ble.n	8012fcc <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 8012ef4:	4628      	mov	r0, r5
 8012ef6:	e004      	b.n	8012f02 <_ZN8touchgfx11Application15drawCachedAreasEv+0x17a>
 8012ef8:	4287      	cmp	r7, r0
 8012efa:	dcfb      	bgt.n	8012ef4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x16c>
 8012efc:	42a8      	cmp	r0, r5
 8012efe:	bfa8      	it	ge
 8012f00:	4628      	movge	r0, r5
 8012f02:	4b7a      	ldr	r3, [pc, #488]	; (80130ec <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>)
 8012f04:	f8ad 7016 	strh.w	r7, [sp, #22]
 8012f08:	f9b3 3000 	ldrsh.w	r3, [r3]
 8012f0c:	f8ad 3018 	strh.w	r3, [sp, #24]
 8012f10:	9b02      	ldr	r3, [sp, #8]
 8012f12:	1bc0      	subs	r0, r0, r7
 8012f14:	2200      	movs	r2, #0
 8012f16:	881f      	ldrh	r7, [r3, #0]
 8012f18:	f8ad 2014 	strh.w	r2, [sp, #20]
 8012f1c:	f8ad 001a 	strh.w	r0, [sp, #26]
 8012f20:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 8012f24:	42bb      	cmp	r3, r7
 8012f26:	d9cc      	bls.n	8012ec2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13a>
 8012f28:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 8012f2c:	ab07      	add	r3, sp, #28
 8012f2e:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 8012f32:	6851      	ldr	r1, [r2, #4]
 8012f34:	c303      	stmia	r3!, {r0, r1}
 8012f36:	a905      	add	r1, sp, #20
 8012f38:	a807      	add	r0, sp, #28
 8012f3a:	f7ff fad0 	bl	80124de <_ZNK8touchgfx4Rect9intersectERKS0_>
 8012f3e:	2800      	cmp	r0, #0
 8012f40:	d04c      	beq.n	8012fdc <_ZN8touchgfx11Application15drawCachedAreasEv+0x254>
 8012f42:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 8012f46:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 8012f4a:	f8bd 9020 	ldrh.w	r9, [sp, #32]
 8012f4e:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 8012f52:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8012f56:	9303      	str	r3, [sp, #12]
 8012f58:	4686      	mov	lr, r0
 8012f5a:	4290      	cmp	r0, r2
 8012f5c:	4448      	add	r0, r9
 8012f5e:	f8bd 9018 	ldrh.w	r9, [sp, #24]
 8012f62:	bfb8      	it	lt
 8012f64:	4696      	movlt	lr, r2
 8012f66:	444a      	add	r2, r9
 8012f68:	4299      	cmp	r1, r3
 8012f6a:	b280      	uxth	r0, r0
 8012f6c:	b292      	uxth	r2, r2
 8012f6e:	468c      	mov	ip, r1
 8012f70:	fa0f f982 	sxth.w	r9, r2
 8012f74:	bfb8      	it	lt
 8012f76:	469c      	movlt	ip, r3
 8012f78:	b203      	sxth	r3, r0
 8012f7a:	454b      	cmp	r3, r9
 8012f7c:	bfb8      	it	lt
 8012f7e:	4602      	movlt	r2, r0
 8012f80:	eba2 020e 	sub.w	r2, r2, lr
 8012f84:	f8ad 2020 	strh.w	r2, [sp, #32]
 8012f88:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8012f8c:	9b03      	ldr	r3, [sp, #12]
 8012f8e:	f8ad e01c 	strh.w	lr, [sp, #28]
 8012f92:	4411      	add	r1, r2
 8012f94:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8012f98:	f8ad c01e 	strh.w	ip, [sp, #30]
 8012f9c:	4413      	add	r3, r2
 8012f9e:	b289      	uxth	r1, r1
 8012fa0:	b29b      	uxth	r3, r3
 8012fa2:	b208      	sxth	r0, r1
 8012fa4:	b21a      	sxth	r2, r3
 8012fa6:	4290      	cmp	r0, r2
 8012fa8:	bfb8      	it	lt
 8012faa:	460b      	movlt	r3, r1
 8012fac:	eba3 030c 	sub.w	r3, r3, ip
 8012fb0:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8012fb4:	a807      	add	r0, sp, #28
 8012fb6:	f7f9 fbe4 	bl	800c782 <_ZNK8touchgfx4Rect7isEmptyEv>
 8012fba:	b920      	cbnz	r0, 8012fc6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 8012fbc:	6823      	ldr	r3, [r4, #0]
 8012fbe:	a907      	add	r1, sp, #28
 8012fc0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8012fc2:	4620      	mov	r0, r4
 8012fc4:	4798      	blx	r3
 8012fc6:	3701      	adds	r7, #1
 8012fc8:	b2bf      	uxth	r7, r7
 8012fca:	e7a9      	b.n	8012f20 <_ZN8touchgfx11Application15drawCachedAreasEv+0x198>
 8012fcc:	f8d8 0000 	ldr.w	r0, [r8]
 8012fd0:	6803      	ldr	r3, [r0, #0]
 8012fd2:	2101      	movs	r1, #1
 8012fd4:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8012fd8:	4798      	blx	r3
 8012fda:	e772      	b.n	8012ec2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13a>
 8012fdc:	e9cd 0007 	strd	r0, r0, [sp, #28]
 8012fe0:	e7e8      	b.n	8012fb4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
 8012fe2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8012fe4:	4798      	blx	r3
 8012fe6:	4b42      	ldr	r3, [pc, #264]	; (80130f0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x368>)
 8012fe8:	781b      	ldrb	r3, [r3, #0]
 8012fea:	2b00      	cmp	r3, #0
 8012fec:	f43f af27 	beq.w	8012e3e <_ZN8touchgfx11Application15drawCachedAreasEv+0xb6>
 8012ff0:	2300      	movs	r3, #0
 8012ff2:	f8a4 312a 	strh.w	r3, [r4, #298]	; 0x12a
 8012ff6:	9b02      	ldr	r3, [sp, #8]
 8012ff8:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 8012ffc:	881b      	ldrh	r3, [r3, #0]
 8012ffe:	f104 00ea 	add.w	r0, r4, #234	; 0xea
 8013002:	429d      	cmp	r5, r3
 8013004:	f67f af1b 	bls.w	8012e3e <_ZN8touchgfx11Application15drawCachedAreasEv+0xb6>
 8013008:	f8b4 112a 	ldrh.w	r1, [r4, #298]	; 0x12a
 801300c:	2907      	cmp	r1, #7
 801300e:	d815      	bhi.n	801303c <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b4>
 8013010:	eb06 02c3 	add.w	r2, r6, r3, lsl #3
 8013014:	f936 8033 	ldrsh.w	r8, [r6, r3, lsl #3]
 8013018:	f9b2 e002 	ldrsh.w	lr, [r2, #2]
 801301c:	f9b2 c004 	ldrsh.w	ip, [r2, #4]
 8013020:	f9b2 7006 	ldrsh.w	r7, [r2, #6]
 8013024:	1c4a      	adds	r2, r1, #1
 8013026:	f8a4 212a 	strh.w	r2, [r4, #298]	; 0x12a
 801302a:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 801302e:	f820 8031 	strh.w	r8, [r0, r1, lsl #3]
 8013032:	f8a2 e002 	strh.w	lr, [r2, #2]
 8013036:	f8a2 c004 	strh.w	ip, [r2, #4]
 801303a:	80d7      	strh	r7, [r2, #6]
 801303c:	3301      	adds	r3, #1
 801303e:	b29b      	uxth	r3, r3
 8013040:	e7df      	b.n	8013002 <_ZN8touchgfx11Application15drawCachedAreasEv+0x27a>
 8013042:	2b02      	cmp	r3, #2
 8013044:	f040 8136 	bne.w	80132b4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x52c>
 8013048:	4b2a      	ldr	r3, [pc, #168]	; (80130f4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x36c>)
 801304a:	781b      	ldrb	r3, [r3, #0]
 801304c:	2b01      	cmp	r3, #1
 801304e:	f104 09a8 	add.w	r9, r4, #168	; 0xa8
 8013052:	f000 809c 	beq.w	801318e <_ZN8touchgfx11Application15drawCachedAreasEv+0x406>
 8013056:	9b02      	ldr	r3, [sp, #8]
 8013058:	f8b4 20e8 	ldrh.w	r2, [r4, #232]	; 0xe8
 801305c:	f8b3 b000 	ldrh.w	fp, [r3]
 8013060:	f10b 0b01 	add.w	fp, fp, #1
 8013064:	fa1f fb8b 	uxth.w	fp, fp
 8013068:	2a00      	cmp	r2, #0
 801306a:	d0bc      	beq.n	8012fe6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 801306c:	f8b4 50aa 	ldrh.w	r5, [r4, #170]	; 0xaa
 8013070:	f8b4 30ae 	ldrh.w	r3, [r4, #174]	; 0xae
 8013074:	441d      	add	r5, r3
 8013076:	b22d      	sxth	r5, r5
 8013078:	4659      	mov	r1, fp
 801307a:	f04f 0800 	mov.w	r8, #0
 801307e:	b28b      	uxth	r3, r1
 8013080:	429a      	cmp	r2, r3
 8013082:	ea4f 07c8 	mov.w	r7, r8, lsl #3
 8013086:	f240 80c1 	bls.w	801320c <_ZN8touchgfx11Application15drawCachedAreasEv+0x484>
 801308a:	4427      	add	r7, r4
 801308c:	eb04 0ec1 	add.w	lr, r4, r1, lsl #3
 8013090:	f9b7 30aa 	ldrsh.w	r3, [r7, #170]	; 0xaa
 8013094:	f9be c0aa 	ldrsh.w	ip, [lr, #170]	; 0xaa
 8013098:	4563      	cmp	r3, ip
 801309a:	4608      	mov	r0, r1
 801309c:	f340 80a3 	ble.w	80131e6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x45e>
 80130a0:	f8be 50ae 	ldrh.w	r5, [lr, #174]	; 0xae
 80130a4:	4465      	add	r5, ip
 80130a6:	b22d      	sxth	r5, r5
 80130a8:	429d      	cmp	r5, r3
 80130aa:	bfa8      	it	ge
 80130ac:	461d      	movge	r5, r3
 80130ae:	3101      	adds	r1, #1
 80130b0:	4680      	mov	r8, r0
 80130b2:	e7e4      	b.n	801307e <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f6>
 80130b4:	d10b      	bne.n	80130ce <_ZN8touchgfx11Application15drawCachedAreasEv+0x346>
 80130b6:	f9b5 c0ae 	ldrsh.w	ip, [r5, #174]	; 0xae
 80130ba:	f9ba 10ae 	ldrsh.w	r1, [sl, #174]	; 0xae
 80130be:	458c      	cmp	ip, r1
 80130c0:	bfb4      	ite	lt
 80130c2:	469c      	movlt	ip, r3
 80130c4:	46bc      	movge	ip, r7
 80130c6:	4572      	cmp	r2, lr
 80130c8:	bfb8      	it	lt
 80130ca:	4672      	movlt	r2, lr
 80130cc:	e088      	b.n	80131e0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x458>
 80130ce:	428a      	cmp	r2, r1
 80130d0:	bfb8      	it	lt
 80130d2:	460a      	movlt	r2, r1
 80130d4:	46bc      	mov	ip, r7
 80130d6:	e083      	b.n	80131e0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x458>
 80130d8:	2001798c 	.word	0x2001798c
 80130dc:	20017998 	.word	0x20017998
 80130e0:	20000088 	.word	0x20000088
 80130e4:	2001794c 	.word	0x2001794c
 80130e8:	20017942 	.word	0x20017942
 80130ec:	20017940 	.word	0x20017940
 80130f0:	2001794a 	.word	0x2001794a
 80130f4:	20017944 	.word	0x20017944
 80130f8:	1961      	adds	r1, r4, r5
 80130fa:	ab07      	add	r3, sp, #28
 80130fc:	f851 0fa8 	ldr.w	r0, [r1, #168]!
 8013100:	6849      	ldr	r1, [r1, #4]
 8013102:	c303      	stmia	r3!, {r0, r1}
 8013104:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8013108:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 801310c:	2b13      	cmp	r3, #19
 801310e:	bfd8      	it	le
 8013110:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 8013114:	f8ad 201c 	strh.w	r2, [sp, #28]
 8013118:	440b      	add	r3, r1
 801311a:	1a9b      	subs	r3, r3, r2
 801311c:	a807      	add	r0, sp, #28
 801311e:	f8ad 3020 	strh.w	r3, [sp, #32]
 8013122:	f7ff f8b7 	bl	8012294 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8013126:	a807      	add	r0, sp, #28
 8013128:	f7f9 fb2b 	bl	800c782 <_ZNK8touchgfx4Rect7isEmptyEv>
 801312c:	bb78      	cbnz	r0, 801318e <_ZN8touchgfx11Application15drawCachedAreasEv+0x406>
 801312e:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 8013132:	f8d8 0000 	ldr.w	r0, [r8]
 8013136:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 801313a:	f8d0 e000 	ldr.w	lr, [r0]
 801313e:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 8013142:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8013146:	f1bc 0f14 	cmp.w	ip, #20
 801314a:	bfa8      	it	ge
 801314c:	f04f 0c14 	movge.w	ip, #20
 8013150:	fa1f fc8c 	uxth.w	ip, ip
 8013154:	f8cd c000 	str.w	ip, [sp]
 8013158:	f8de a090 	ldr.w	sl, [lr, #144]	; 0x90
 801315c:	47d0      	blx	sl
 801315e:	4682      	mov	sl, r0
 8013160:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8013164:	a807      	add	r0, sp, #28
 8013166:	f7ff f87b 	bl	8012260 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 801316a:	6823      	ldr	r3, [r4, #0]
 801316c:	4425      	add	r5, r4
 801316e:	4620      	mov	r0, r4
 8013170:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8013172:	a907      	add	r1, sp, #28
 8013174:	4798      	blx	r3
 8013176:	f8b5 00ac 	ldrh.w	r0, [r5, #172]	; 0xac
 801317a:	eba0 000a 	sub.w	r0, r0, sl
 801317e:	b200      	sxth	r0, r0
 8013180:	f8a5 00ac 	strh.w	r0, [r5, #172]	; 0xac
 8013184:	b918      	cbnz	r0, 801318e <_ZN8touchgfx11Application15drawCachedAreasEv+0x406>
 8013186:	b2b9      	uxth	r1, r7
 8013188:	4648      	mov	r0, r9
 801318a:	f7ff faa3 	bl	80126d4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801318e:	f8b4 b0e8 	ldrh.w	fp, [r4, #232]	; 0xe8
 8013192:	f1bb 0f00 	cmp.w	fp, #0
 8013196:	f43f af26 	beq.w	8012fe6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 801319a:	9b02      	ldr	r3, [sp, #8]
 801319c:	f9b4 20a8 	ldrsh.w	r2, [r4, #168]	; 0xa8
 80131a0:	881b      	ldrh	r3, [r3, #0]
 80131a2:	3301      	adds	r3, #1
 80131a4:	b29b      	uxth	r3, r3
 80131a6:	2700      	movs	r7, #0
 80131a8:	b299      	uxth	r1, r3
 80131aa:	458b      	cmp	fp, r1
 80131ac:	ea4f 05c7 	mov.w	r5, r7, lsl #3
 80131b0:	d9a2      	bls.n	80130f8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x370>
 80131b2:	4425      	add	r5, r4
 80131b4:	eb04 0ac3 	add.w	sl, r4, r3, lsl #3
 80131b8:	f8b5 10ac 	ldrh.w	r1, [r5, #172]	; 0xac
 80131bc:	f8b5 00a8 	ldrh.w	r0, [r5, #168]	; 0xa8
 80131c0:	f9ba e0a8 	ldrsh.w	lr, [sl, #168]	; 0xa8
 80131c4:	4408      	add	r0, r1
 80131c6:	f8ba 10ac 	ldrh.w	r1, [sl, #172]	; 0xac
 80131ca:	4471      	add	r1, lr
 80131cc:	b200      	sxth	r0, r0
 80131ce:	b209      	sxth	r1, r1
 80131d0:	4288      	cmp	r0, r1
 80131d2:	469c      	mov	ip, r3
 80131d4:	f6bf af6e 	bge.w	80130b4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x32c>
 80131d8:	4586      	cmp	lr, r0
 80131da:	4672      	mov	r2, lr
 80131dc:	bfb8      	it	lt
 80131de:	4602      	movlt	r2, r0
 80131e0:	3301      	adds	r3, #1
 80131e2:	4667      	mov	r7, ip
 80131e4:	e7e0      	b.n	80131a8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x420>
 80131e6:	d10c      	bne.n	8013202 <_ZN8touchgfx11Application15drawCachedAreasEv+0x47a>
 80131e8:	f9b7 70ac 	ldrsh.w	r7, [r7, #172]	; 0xac
 80131ec:	f9be 00ac 	ldrsh.w	r0, [lr, #172]	; 0xac
 80131f0:	4287      	cmp	r7, r0
 80131f2:	bfb4      	ite	lt
 80131f4:	4608      	movlt	r0, r1
 80131f6:	4640      	movge	r0, r8
 80131f8:	f8be 70ae 	ldrh.w	r7, [lr, #174]	; 0xae
 80131fc:	443b      	add	r3, r7
 80131fe:	b21b      	sxth	r3, r3
 8013200:	e752      	b.n	80130a8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x320>
 8013202:	4565      	cmp	r5, ip
 8013204:	bfa8      	it	ge
 8013206:	4665      	movge	r5, ip
 8013208:	4640      	mov	r0, r8
 801320a:	e750      	b.n	80130ae <_ZN8touchgfx11Application15drawCachedAreasEv+0x326>
 801320c:	eb09 0007 	add.w	r0, r9, r7
 8013210:	4427      	add	r7, r4
 8013212:	9203      	str	r2, [sp, #12]
 8013214:	f9b7 a0ae 	ldrsh.w	sl, [r7, #174]	; 0xae
 8013218:	f1ba 0f13 	cmp.w	sl, #19
 801321c:	bfde      	ittt	le
 801321e:	f8b7 50aa 	ldrhle.w	r5, [r7, #170]	; 0xaa
 8013222:	4455      	addle	r5, sl
 8013224:	b22d      	sxthle	r5, r5
 8013226:	f7f9 faac 	bl	800c782 <_ZNK8touchgfx4Rect7isEmptyEv>
 801322a:	9a03      	ldr	r2, [sp, #12]
 801322c:	2800      	cmp	r0, #0
 801322e:	f47f af1b 	bne.w	8013068 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2e0>
 8013232:	f9b7 20aa 	ldrsh.w	r2, [r7, #170]	; 0xaa
 8013236:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 801323a:	482a      	ldr	r0, [pc, #168]	; (80132e4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x55c>)
 801323c:	f9b7 10a8 	ldrsh.w	r1, [r7, #168]	; 0xa8
 8013240:	f9b7 30ac 	ldrsh.w	r3, [r7, #172]	; 0xac
 8013244:	6800      	ldr	r0, [r0, #0]
 8013246:	f8ad 101c 	strh.w	r1, [sp, #28]
 801324a:	1aad      	subs	r5, r5, r2
 801324c:	2d14      	cmp	r5, #20
 801324e:	f8ad 201e 	strh.w	r2, [sp, #30]
 8013252:	f8ad 3020 	strh.w	r3, [sp, #32]
 8013256:	bfa8      	it	ge
 8013258:	2514      	movge	r5, #20
 801325a:	f8d0 c000 	ldr.w	ip, [r0]
 801325e:	b2ad      	uxth	r5, r5
 8013260:	fa1f fa8a 	uxth.w	sl, sl
 8013264:	4555      	cmp	r5, sl
 8013266:	bf94      	ite	ls
 8013268:	9500      	strls	r5, [sp, #0]
 801326a:	f8cd a000 	strhi.w	sl, [sp]
 801326e:	b292      	uxth	r2, r2
 8013270:	f8dc 5090 	ldr.w	r5, [ip, #144]	; 0x90
 8013274:	b29b      	uxth	r3, r3
 8013276:	b289      	uxth	r1, r1
 8013278:	47a8      	blx	r5
 801327a:	6823      	ldr	r3, [r4, #0]
 801327c:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8013280:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8013282:	a907      	add	r1, sp, #28
 8013284:	4620      	mov	r0, r4
 8013286:	4798      	blx	r3
 8013288:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 801328c:	f8b7 30ae 	ldrh.w	r3, [r7, #174]	; 0xae
 8013290:	f8b7 20aa 	ldrh.w	r2, [r7, #170]	; 0xaa
 8013294:	1a5b      	subs	r3, r3, r1
 8013296:	440a      	add	r2, r1
 8013298:	b21b      	sxth	r3, r3
 801329a:	f8a7 20aa 	strh.w	r2, [r7, #170]	; 0xaa
 801329e:	f8a7 30ae 	strh.w	r3, [r7, #174]	; 0xae
 80132a2:	2b00      	cmp	r3, #0
 80132a4:	f47f aed7 	bne.w	8013056 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ce>
 80132a8:	fa1f f188 	uxth.w	r1, r8
 80132ac:	4648      	mov	r0, r9
 80132ae:	f7ff fa11 	bl	80126d4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80132b2:	e6d0      	b.n	8013056 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ce>
 80132b4:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 80132b8:	42ab      	cmp	r3, r5
 80132ba:	f67f ae94 	bls.w	8012fe6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 80132be:	eb04 02c5 	add.w	r2, r4, r5, lsl #3
 80132c2:	ab07      	add	r3, sp, #28
 80132c4:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 80132c8:	6851      	ldr	r1, [r2, #4]
 80132ca:	c303      	stmia	r3!, {r0, r1}
 80132cc:	a807      	add	r0, sp, #28
 80132ce:	f7f9 fa58 	bl	800c782 <_ZNK8touchgfx4Rect7isEmptyEv>
 80132d2:	b920      	cbnz	r0, 80132de <_ZN8touchgfx11Application15drawCachedAreasEv+0x556>
 80132d4:	6823      	ldr	r3, [r4, #0]
 80132d6:	a907      	add	r1, sp, #28
 80132d8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80132da:	4620      	mov	r0, r4
 80132dc:	4798      	blx	r3
 80132de:	3501      	adds	r5, #1
 80132e0:	b2ad      	uxth	r5, r5
 80132e2:	e7e7      	b.n	80132b4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x52c>
 80132e4:	2001794c 	.word	0x2001794c

080132e8 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 80132e8:	4b03      	ldr	r3, [pc, #12]	; (80132f8 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 80132ea:	2200      	movs	r2, #0
 80132ec:	801a      	strh	r2, [r3, #0]
 80132ee:	805a      	strh	r2, [r3, #2]
 80132f0:	809a      	strh	r2, [r3, #4]
 80132f2:	80da      	strh	r2, [r3, #6]
 80132f4:	4770      	bx	lr
 80132f6:	bf00      	nop
 80132f8:	20017998 	.word	0x20017998

080132fc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 80132fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013300:	4606      	mov	r6, r0
 8013302:	b09d      	sub	sp, #116	; 0x74
 8013304:	a803      	add	r0, sp, #12
 8013306:	4614      	mov	r4, r2
 8013308:	468a      	mov	sl, r1
 801330a:	461d      	mov	r5, r3
 801330c:	f000 fe67 	bl	8013fde <_ZN8touchgfx12TextProviderC1Ev>
 8013310:	6833      	ldr	r3, [r6, #0]
 8013312:	4630      	mov	r0, r6
 8013314:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8013316:	4798      	blx	r3
 8013318:	6833      	ldr	r3, [r6, #0]
 801331a:	4607      	mov	r7, r0
 801331c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801331e:	4630      	mov	r0, r6
 8013320:	4798      	blx	r3
 8013322:	462a      	mov	r2, r5
 8013324:	9000      	str	r0, [sp, #0]
 8013326:	4621      	mov	r1, r4
 8013328:	463b      	mov	r3, r7
 801332a:	a803      	add	r0, sp, #12
 801332c:	f000 feb2 	bl	8014094 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8013330:	2500      	movs	r5, #0
 8013332:	462c      	mov	r4, r5
 8013334:	46a9      	mov	r9, r5
 8013336:	46a8      	mov	r8, r5
 8013338:	f242 0b0b 	movw	fp, #8203	; 0x200b
 801333c:	2300      	movs	r3, #0
 801333e:	9302      	str	r3, [sp, #8]
 8013340:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8013344:	429c      	cmp	r4, r3
 8013346:	d002      	beq.n	801334e <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 8013348:	455c      	cmp	r4, fp
 801334a:	bf18      	it	ne
 801334c:	4625      	movne	r5, r4
 801334e:	ab02      	add	r3, sp, #8
 8013350:	4632      	mov	r2, r6
 8013352:	4651      	mov	r1, sl
 8013354:	a803      	add	r0, sp, #12
 8013356:	f001 f99f 	bl	8014698 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801335a:	4604      	mov	r4, r0
 801335c:	b108      	cbz	r0, 8013362 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 801335e:	280a      	cmp	r0, #10
 8013360:	d10a      	bne.n	8013378 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 8013362:	45c1      	cmp	r9, r8
 8013364:	bf38      	it	cc
 8013366:	46c1      	movcc	r9, r8
 8013368:	f04f 0800 	mov.w	r8, #0
 801336c:	2c00      	cmp	r4, #0
 801336e:	d1e5      	bne.n	801333c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8013370:	4648      	mov	r0, r9
 8013372:	b01d      	add	sp, #116	; 0x74
 8013374:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013378:	9a02      	ldr	r2, [sp, #8]
 801337a:	2a00      	cmp	r2, #0
 801337c:	d0de      	beq.n	801333c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 801337e:	7b57      	ldrb	r7, [r2, #13]
 8013380:	6833      	ldr	r3, [r6, #0]
 8013382:	8894      	ldrh	r4, [r2, #4]
 8013384:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8013386:	007f      	lsls	r7, r7, #1
 8013388:	f407 7080 	and.w	r0, r7, #256	; 0x100
 801338c:	7a97      	ldrb	r7, [r2, #10]
 801338e:	4629      	mov	r1, r5
 8013390:	4307      	orrs	r7, r0
 8013392:	4630      	mov	r0, r6
 8013394:	4798      	blx	r3
 8013396:	4438      	add	r0, r7
 8013398:	4480      	add	r8, r0
 801339a:	fa1f f888 	uxth.w	r8, r8
 801339e:	e7e5      	b.n	801336c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

080133a0 <_ZNK8touchgfx4Font12getCharWidthEt>:
 80133a0:	b508      	push	{r3, lr}
 80133a2:	6803      	ldr	r3, [r0, #0]
 80133a4:	68db      	ldr	r3, [r3, #12]
 80133a6:	4798      	blx	r3
 80133a8:	b128      	cbz	r0, 80133b6 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 80133aa:	7b43      	ldrb	r3, [r0, #13]
 80133ac:	7a80      	ldrb	r0, [r0, #10]
 80133ae:	005b      	lsls	r3, r3, #1
 80133b0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80133b4:	4318      	orrs	r0, r3
 80133b6:	bd08      	pop	{r3, pc}

080133b8 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 80133b8:	b40e      	push	{r1, r2, r3}
 80133ba:	b5f0      	push	{r4, r5, r6, r7, lr}
 80133bc:	b09e      	sub	sp, #120	; 0x78
 80133be:	ab23      	add	r3, sp, #140	; 0x8c
 80133c0:	4605      	mov	r5, r0
 80133c2:	f853 4b04 	ldr.w	r4, [r3], #4
 80133c6:	9303      	str	r3, [sp, #12]
 80133c8:	a805      	add	r0, sp, #20
 80133ca:	f000 fe08 	bl	8013fde <_ZN8touchgfx12TextProviderC1Ev>
 80133ce:	682b      	ldr	r3, [r5, #0]
 80133d0:	4628      	mov	r0, r5
 80133d2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80133d4:	4798      	blx	r3
 80133d6:	682b      	ldr	r3, [r5, #0]
 80133d8:	4606      	mov	r6, r0
 80133da:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80133dc:	4628      	mov	r0, r5
 80133de:	4798      	blx	r3
 80133e0:	4633      	mov	r3, r6
 80133e2:	ae1e      	add	r6, sp, #120	; 0x78
 80133e4:	4621      	mov	r1, r4
 80133e6:	9000      	str	r0, [sp, #0]
 80133e8:	9a03      	ldr	r2, [sp, #12]
 80133ea:	2400      	movs	r4, #0
 80133ec:	a805      	add	r0, sp, #20
 80133ee:	f000 fe51 	bl	8014094 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80133f2:	f846 4d68 	str.w	r4, [r6, #-104]!
 80133f6:	462a      	mov	r2, r5
 80133f8:	4633      	mov	r3, r6
 80133fa:	4621      	mov	r1, r4
 80133fc:	a805      	add	r0, sp, #20
 80133fe:	f001 f94b 	bl	8014698 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8013402:	b1f0      	cbz	r0, 8013442 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 8013404:	280a      	cmp	r0, #10
 8013406:	d018      	beq.n	801343a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8013408:	9f04      	ldr	r7, [sp, #16]
 801340a:	b1b7      	cbz	r7, 801343a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 801340c:	7b78      	ldrb	r0, [r7, #13]
 801340e:	7a3b      	ldrb	r3, [r7, #8]
 8013410:	88aa      	ldrh	r2, [r5, #4]
 8013412:	00c1      	lsls	r1, r0, #3
 8013414:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8013418:	4319      	orrs	r1, r3
 801341a:	0643      	lsls	r3, r0, #25
 801341c:	bf44      	itt	mi
 801341e:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 8013422:	b219      	sxthmi	r1, r3
 8013424:	0100      	lsls	r0, r0, #4
 8013426:	79fb      	ldrb	r3, [r7, #7]
 8013428:	f400 7080 	and.w	r0, r0, #256	; 0x100
 801342c:	4303      	orrs	r3, r0
 801342e:	4413      	add	r3, r2
 8013430:	1a5b      	subs	r3, r3, r1
 8013432:	b29b      	uxth	r3, r3
 8013434:	42a3      	cmp	r3, r4
 8013436:	bfc8      	it	gt
 8013438:	b21c      	sxthgt	r4, r3
 801343a:	4633      	mov	r3, r6
 801343c:	462a      	mov	r2, r5
 801343e:	2100      	movs	r1, #0
 8013440:	e7dc      	b.n	80133fc <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 8013442:	b2a0      	uxth	r0, r4
 8013444:	b01e      	add	sp, #120	; 0x78
 8013446:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 801344a:	b003      	add	sp, #12
 801344c:	4770      	bx	lr

0801344e <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 801344e:	b40e      	push	{r1, r2, r3}
 8013450:	b570      	push	{r4, r5, r6, lr}
 8013452:	b09d      	sub	sp, #116	; 0x74
 8013454:	ab21      	add	r3, sp, #132	; 0x84
 8013456:	4604      	mov	r4, r0
 8013458:	f853 5b04 	ldr.w	r5, [r3], #4
 801345c:	9302      	str	r3, [sp, #8]
 801345e:	a803      	add	r0, sp, #12
 8013460:	f000 fdbd 	bl	8013fde <_ZN8touchgfx12TextProviderC1Ev>
 8013464:	6823      	ldr	r3, [r4, #0]
 8013466:	4620      	mov	r0, r4
 8013468:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801346a:	4798      	blx	r3
 801346c:	6823      	ldr	r3, [r4, #0]
 801346e:	4606      	mov	r6, r0
 8013470:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8013472:	4620      	mov	r0, r4
 8013474:	4798      	blx	r3
 8013476:	4633      	mov	r3, r6
 8013478:	9000      	str	r0, [sp, #0]
 801347a:	9a02      	ldr	r2, [sp, #8]
 801347c:	4629      	mov	r1, r5
 801347e:	a803      	add	r0, sp, #12
 8013480:	f000 fe08 	bl	8014094 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8013484:	a803      	add	r0, sp, #12
 8013486:	f001 f9d5 	bl	8014834 <_ZN8touchgfx12TextProvider11getNextCharEv>
 801348a:	2401      	movs	r4, #1
 801348c:	b2a3      	uxth	r3, r4
 801348e:	b140      	cbz	r0, 80134a2 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 8013490:	280a      	cmp	r0, #10
 8013492:	bf08      	it	eq
 8013494:	3301      	addeq	r3, #1
 8013496:	a803      	add	r0, sp, #12
 8013498:	bf08      	it	eq
 801349a:	b21c      	sxtheq	r4, r3
 801349c:	f001 f9ca 	bl	8014834 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80134a0:	e7f4      	b.n	801348c <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 80134a2:	4618      	mov	r0, r3
 80134a4:	b01d      	add	sp, #116	; 0x74
 80134a6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80134aa:	b003      	add	sp, #12
 80134ac:	4770      	bx	lr

080134ae <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 80134ae:	b40e      	push	{r1, r2, r3}
 80134b0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80134b2:	b09e      	sub	sp, #120	; 0x78
 80134b4:	ab23      	add	r3, sp, #140	; 0x8c
 80134b6:	4604      	mov	r4, r0
 80134b8:	f853 5b04 	ldr.w	r5, [r3], #4
 80134bc:	9303      	str	r3, [sp, #12]
 80134be:	a805      	add	r0, sp, #20
 80134c0:	f000 fd8d 	bl	8013fde <_ZN8touchgfx12TextProviderC1Ev>
 80134c4:	6823      	ldr	r3, [r4, #0]
 80134c6:	4620      	mov	r0, r4
 80134c8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80134ca:	4798      	blx	r3
 80134cc:	6823      	ldr	r3, [r4, #0]
 80134ce:	4606      	mov	r6, r0
 80134d0:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80134d2:	4620      	mov	r0, r4
 80134d4:	4798      	blx	r3
 80134d6:	4633      	mov	r3, r6
 80134d8:	4629      	mov	r1, r5
 80134da:	9000      	str	r0, [sp, #0]
 80134dc:	9a03      	ldr	r2, [sp, #12]
 80134de:	a805      	add	r0, sp, #20
 80134e0:	ad1e      	add	r5, sp, #120	; 0x78
 80134e2:	f000 fdd7 	bl	8014094 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80134e6:	2100      	movs	r1, #0
 80134e8:	f845 1d68 	str.w	r1, [r5, #-104]!
 80134ec:	4622      	mov	r2, r4
 80134ee:	462b      	mov	r3, r5
 80134f0:	a805      	add	r0, sp, #20
 80134f2:	f001 f8d1 	bl	8014698 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80134f6:	26ff      	movs	r6, #255	; 0xff
 80134f8:	b1d8      	cbz	r0, 8013532 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x84>
 80134fa:	280a      	cmp	r0, #10
 80134fc:	d012      	beq.n	8013524 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x76>
 80134fe:	9804      	ldr	r0, [sp, #16]
 8013500:	b180      	cbz	r0, 8013524 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x76>
 8013502:	7b47      	ldrb	r7, [r0, #13]
 8013504:	7922      	ldrb	r2, [r4, #4]
 8013506:	00fb      	lsls	r3, r7, #3
 8013508:	f403 7180 	and.w	r1, r3, #256	; 0x100
 801350c:	7a03      	ldrb	r3, [r0, #8]
 801350e:	430b      	orrs	r3, r1
 8013510:	0679      	lsls	r1, r7, #25
 8013512:	bf44      	itt	mi
 8013514:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8013518:	b21b      	sxthmi	r3, r3
 801351a:	1ad3      	subs	r3, r2, r3
 801351c:	b2db      	uxtb	r3, r3
 801351e:	429e      	cmp	r6, r3
 8013520:	bf28      	it	cs
 8013522:	461e      	movcs	r6, r3
 8013524:	462b      	mov	r3, r5
 8013526:	4622      	mov	r2, r4
 8013528:	2100      	movs	r1, #0
 801352a:	a805      	add	r0, sp, #20
 801352c:	f001 f8b4 	bl	8014698 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8013530:	e7e2      	b.n	80134f8 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4a>
 8013532:	4630      	mov	r0, r6
 8013534:	b01e      	add	sp, #120	; 0x78
 8013536:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 801353a:	b003      	add	sp, #12
 801353c:	4770      	bx	lr

0801353e <_ZNK8touchgfx8Drawable10invalidateEv>:
 801353e:	b513      	push	{r0, r1, r4, lr}
 8013540:	6803      	ldr	r3, [r0, #0]
 8013542:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8013546:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801354a:	f8ad 1004 	strh.w	r1, [sp, #4]
 801354e:	2400      	movs	r4, #0
 8013550:	9400      	str	r4, [sp, #0]
 8013552:	f8ad 2006 	strh.w	r2, [sp, #6]
 8013556:	691b      	ldr	r3, [r3, #16]
 8013558:	4669      	mov	r1, sp
 801355a:	4798      	blx	r3
 801355c:	b002      	add	sp, #8
 801355e:	bd10      	pop	{r4, pc}

08013560 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 8013560:	b538      	push	{r3, r4, r5, lr}
 8013562:	680b      	ldr	r3, [r1, #0]
 8013564:	460c      	mov	r4, r1
 8013566:	68db      	ldr	r3, [r3, #12]
 8013568:	4605      	mov	r5, r0
 801356a:	4798      	blx	r3
 801356c:	6823      	ldr	r3, [r4, #0]
 801356e:	4620      	mov	r0, r4
 8013570:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013572:	4629      	mov	r1, r5
 8013574:	4798      	blx	r3
 8013576:	4628      	mov	r0, r5
 8013578:	bd38      	pop	{r3, r4, r5, pc}

0801357a <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 801357a:	b410      	push	{r4}
 801357c:	880a      	ldrh	r2, [r1, #0]
 801357e:	8884      	ldrh	r4, [r0, #4]
 8013580:	4422      	add	r2, r4
 8013582:	800a      	strh	r2, [r1, #0]
 8013584:	88c4      	ldrh	r4, [r0, #6]
 8013586:	884a      	ldrh	r2, [r1, #2]
 8013588:	4422      	add	r2, r4
 801358a:	804a      	strh	r2, [r1, #2]
 801358c:	6940      	ldr	r0, [r0, #20]
 801358e:	b120      	cbz	r0, 801359a <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 8013590:	6803      	ldr	r3, [r0, #0]
 8013592:	f85d 4b04 	ldr.w	r4, [sp], #4
 8013596:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013598:	4718      	bx	r3
 801359a:	f85d 4b04 	ldr.w	r4, [sp], #4
 801359e:	4770      	bx	lr

080135a0 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 80135a0:	b570      	push	{r4, r5, r6, lr}
 80135a2:	8882      	ldrh	r2, [r0, #4]
 80135a4:	880b      	ldrh	r3, [r1, #0]
 80135a6:	4413      	add	r3, r2
 80135a8:	800b      	strh	r3, [r1, #0]
 80135aa:	88c2      	ldrh	r2, [r0, #6]
 80135ac:	884b      	ldrh	r3, [r1, #2]
 80135ae:	460c      	mov	r4, r1
 80135b0:	4413      	add	r3, r2
 80135b2:	804b      	strh	r3, [r1, #2]
 80135b4:	4605      	mov	r5, r0
 80135b6:	1d01      	adds	r1, r0, #4
 80135b8:	4620      	mov	r0, r4
 80135ba:	f7f9 f89f 	bl	800c6fc <_ZN8touchgfx4RectaNERKS0_>
 80135be:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 80135c2:	2b00      	cmp	r3, #0
 80135c4:	dd0b      	ble.n	80135de <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 80135c6:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80135ca:	2b00      	cmp	r3, #0
 80135cc:	dd07      	ble.n	80135de <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 80135ce:	6968      	ldr	r0, [r5, #20]
 80135d0:	b128      	cbz	r0, 80135de <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 80135d2:	6803      	ldr	r3, [r0, #0]
 80135d4:	4621      	mov	r1, r4
 80135d6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80135d8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80135dc:	4718      	bx	r3
 80135de:	bd70      	pop	{r4, r5, r6, pc}

080135e0 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 80135e0:	b570      	push	{r4, r5, r6, lr}
 80135e2:	8882      	ldrh	r2, [r0, #4]
 80135e4:	880b      	ldrh	r3, [r1, #0]
 80135e6:	4413      	add	r3, r2
 80135e8:	800b      	strh	r3, [r1, #0]
 80135ea:	88c2      	ldrh	r2, [r0, #6]
 80135ec:	884b      	ldrh	r3, [r1, #2]
 80135ee:	460c      	mov	r4, r1
 80135f0:	4413      	add	r3, r2
 80135f2:	804b      	strh	r3, [r1, #2]
 80135f4:	4605      	mov	r5, r0
 80135f6:	1d01      	adds	r1, r0, #4
 80135f8:	4620      	mov	r0, r4
 80135fa:	f7f9 f87f 	bl	800c6fc <_ZN8touchgfx4RectaNERKS0_>
 80135fe:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8013602:	2b00      	cmp	r3, #0
 8013604:	dd18      	ble.n	8013638 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 8013606:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801360a:	2b00      	cmp	r3, #0
 801360c:	dd14      	ble.n	8013638 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 801360e:	6968      	ldr	r0, [r5, #20]
 8013610:	b128      	cbz	r0, 801361e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 8013612:	6803      	ldr	r3, [r0, #0]
 8013614:	4621      	mov	r1, r4
 8013616:	691b      	ldr	r3, [r3, #16]
 8013618:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801361c:	4718      	bx	r3
 801361e:	4b07      	ldr	r3, [pc, #28]	; (801363c <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 8013620:	681b      	ldr	r3, [r3, #0]
 8013622:	3304      	adds	r3, #4
 8013624:	429d      	cmp	r5, r3
 8013626:	d107      	bne.n	8013638 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 8013628:	f7fe fff2 	bl	8012610 <_ZN8touchgfx11Application11getInstanceEv>
 801362c:	6821      	ldr	r1, [r4, #0]
 801362e:	6862      	ldr	r2, [r4, #4]
 8013630:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013634:	f7ff b862 	b.w	80126fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 8013638:	bd70      	pop	{r4, r5, r6, pc}
 801363a:	bf00      	nop
 801363c:	20017990 	.word	0x20017990

08013640 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 8013640:	b570      	push	{r4, r5, r6, lr}
 8013642:	4604      	mov	r4, r0
 8013644:	4616      	mov	r6, r2
 8013646:	460d      	mov	r5, r1
 8013648:	b901      	cbnz	r1, 801364c <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 801364a:	b192      	cbz	r2, 8013672 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 801364c:	6823      	ldr	r3, [r4, #0]
 801364e:	4620      	mov	r0, r4
 8013650:	699b      	ldr	r3, [r3, #24]
 8013652:	4798      	blx	r3
 8013654:	88e2      	ldrh	r2, [r4, #6]
 8013656:	88a1      	ldrh	r1, [r4, #4]
 8013658:	4432      	add	r2, r6
 801365a:	4429      	add	r1, r5
 801365c:	4620      	mov	r0, r4
 801365e:	b212      	sxth	r2, r2
 8013660:	b209      	sxth	r1, r1
 8013662:	f7ef fad3 	bl	8002c0c <_ZN8touchgfx8Drawable5setXYEss>
 8013666:	6823      	ldr	r3, [r4, #0]
 8013668:	4620      	mov	r0, r4
 801366a:	699b      	ldr	r3, [r3, #24]
 801366c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013670:	4718      	bx	r3
 8013672:	bd70      	pop	{r4, r5, r6, pc}

08013674 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 8013674:	b510      	push	{r4, lr}
 8013676:	4604      	mov	r4, r0
 8013678:	4608      	mov	r0, r1
 801367a:	2300      	movs	r3, #0
 801367c:	8023      	strh	r3, [r4, #0]
 801367e:	8063      	strh	r3, [r4, #2]
 8013680:	6803      	ldr	r3, [r0, #0]
 8013682:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8013686:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 801368a:	80a1      	strh	r1, [r4, #4]
 801368c:	80e2      	strh	r2, [r4, #6]
 801368e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013690:	4621      	mov	r1, r4
 8013692:	4798      	blx	r3
 8013694:	4620      	mov	r0, r4
 8013696:	bd10      	pop	{r4, pc}

08013698 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>:
 8013698:	b530      	push	{r4, r5, lr}
 801369a:	8083      	strh	r3, [r0, #4]
 801369c:	f89d 300c 	ldrb.w	r3, [sp, #12]
 80136a0:	f89d 5010 	ldrb.w	r5, [sp, #16]
 80136a4:	7183      	strb	r3, [r0, #6]
 80136a6:	79c3      	ldrb	r3, [r0, #7]
 80136a8:	6101      	str	r1, [r0, #16]
 80136aa:	f365 0306 	bfi	r3, r5, #0, #7
 80136ae:	f89d 5014 	ldrb.w	r5, [sp, #20]
 80136b2:	8282      	strh	r2, [r0, #20]
 80136b4:	f365 13c7 	bfi	r3, r5, #7, #1
 80136b8:	71c3      	strb	r3, [r0, #7]
 80136ba:	f89d 3018 	ldrb.w	r3, [sp, #24]
 80136be:	7203      	strb	r3, [r0, #8]
 80136c0:	f89d 301c 	ldrb.w	r3, [sp, #28]
 80136c4:	7243      	strb	r3, [r0, #9]
 80136c6:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 80136ca:	8143      	strh	r3, [r0, #10]
 80136cc:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 80136d0:	8183      	strh	r3, [r0, #12]
 80136d2:	4b01      	ldr	r3, [pc, #4]	; (80136d8 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt+0x40>)
 80136d4:	6003      	str	r3, [r0, #0]
 80136d6:	bd30      	pop	{r4, r5, pc}
 80136d8:	080255bc 	.word	0x080255bc

080136dc <_ZNK8touchgfx9ConstFont4findEt>:
 80136dc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80136de:	6904      	ldr	r4, [r0, #16]
 80136e0:	b3bc      	cbz	r4, 8013752 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80136e2:	88a3      	ldrh	r3, [r4, #4]
 80136e4:	8a82      	ldrh	r2, [r0, #20]
 80136e6:	1acb      	subs	r3, r1, r3
 80136e8:	f102 32ff 	add.w	r2, r2, #4294967295
 80136ec:	d431      	bmi.n	8013752 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80136ee:	4293      	cmp	r3, r2
 80136f0:	dd0c      	ble.n	801370c <_ZNK8touchgfx9ConstFont4findEt+0x30>
 80136f2:	230e      	movs	r3, #14
 80136f4:	fb03 4302 	mla	r3, r3, r2, r4
 80136f8:	889b      	ldrh	r3, [r3, #4]
 80136fa:	1a5b      	subs	r3, r3, r1
 80136fc:	1ad3      	subs	r3, r2, r3
 80136fe:	429a      	cmp	r2, r3
 8013700:	db27      	blt.n	8013752 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8013702:	2b00      	cmp	r3, #0
 8013704:	bfbc      	itt	lt
 8013706:	2302      	movlt	r3, #2
 8013708:	fb92 f3f3 	sdivlt	r3, r2, r3
 801370c:	2500      	movs	r5, #0
 801370e:	260e      	movs	r6, #14
 8013710:	4295      	cmp	r5, r2
 8013712:	dc1e      	bgt.n	8013752 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8013714:	fb06 4003 	mla	r0, r6, r3, r4
 8013718:	8887      	ldrh	r7, [r0, #4]
 801371a:	42b9      	cmp	r1, r7
 801371c:	d01a      	beq.n	8013754 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 801371e:	d20d      	bcs.n	801373c <_ZNK8touchgfx9ConstFont4findEt+0x60>
 8013720:	1e5a      	subs	r2, r3, #1
 8013722:	4295      	cmp	r5, r2
 8013724:	dc15      	bgt.n	8013752 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8013726:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 801372a:	1a5b      	subs	r3, r3, r1
 801372c:	1ad3      	subs	r3, r2, r3
 801372e:	429a      	cmp	r2, r3
 8013730:	db0f      	blt.n	8013752 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8013732:	429d      	cmp	r5, r3
 8013734:	ddec      	ble.n	8013710 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8013736:	1953      	adds	r3, r2, r5
 8013738:	105b      	asrs	r3, r3, #1
 801373a:	e7e9      	b.n	8013710 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 801373c:	1c5d      	adds	r5, r3, #1
 801373e:	42aa      	cmp	r2, r5
 8013740:	db07      	blt.n	8013752 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8013742:	8a43      	ldrh	r3, [r0, #18]
 8013744:	1acb      	subs	r3, r1, r3
 8013746:	442b      	add	r3, r5
 8013748:	429d      	cmp	r5, r3
 801374a:	dc02      	bgt.n	8013752 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801374c:	429a      	cmp	r2, r3
 801374e:	dadf      	bge.n	8013710 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8013750:	e7f1      	b.n	8013736 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 8013752:	2000      	movs	r0, #0
 8013754:	bdf0      	pop	{r4, r5, r6, r7, pc}

08013756 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 8013756:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8013758:	4604      	mov	r4, r0
 801375a:	4617      	mov	r7, r2
 801375c:	461e      	mov	r6, r3
 801375e:	b911      	cbnz	r1, 8013766 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 8013760:	2500      	movs	r5, #0
 8013762:	4628      	mov	r0, r5
 8013764:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8013766:	290a      	cmp	r1, #10
 8013768:	d0fa      	beq.n	8013760 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801376a:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 801376e:	4291      	cmp	r1, r2
 8013770:	d0f6      	beq.n	8013760 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8013772:	f242 020b 	movw	r2, #8203	; 0x200b
 8013776:	4291      	cmp	r1, r2
 8013778:	d0f2      	beq.n	8013760 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801377a:	f7ff ffaf 	bl	80136dc <_ZNK8touchgfx9ConstFont4findEt>
 801377e:	4605      	mov	r5, r0
 8013780:	b950      	cbnz	r0, 8013798 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 8013782:	6823      	ldr	r3, [r4, #0]
 8013784:	4620      	mov	r0, r4
 8013786:	691b      	ldr	r3, [r3, #16]
 8013788:	4798      	blx	r3
 801378a:	4601      	mov	r1, r0
 801378c:	4620      	mov	r0, r4
 801378e:	f7ff ffa5 	bl	80136dc <_ZNK8touchgfx9ConstFont4findEt>
 8013792:	4605      	mov	r5, r0
 8013794:	2800      	cmp	r0, #0
 8013796:	d0e3      	beq.n	8013760 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8013798:	6823      	ldr	r3, [r4, #0]
 801379a:	4629      	mov	r1, r5
 801379c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801379e:	4620      	mov	r0, r4
 80137a0:	4798      	blx	r3
 80137a2:	6038      	str	r0, [r7, #0]
 80137a4:	6823      	ldr	r3, [r4, #0]
 80137a6:	4620      	mov	r0, r4
 80137a8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80137aa:	4798      	blx	r3
 80137ac:	7030      	strb	r0, [r6, #0]
 80137ae:	e7d8      	b.n	8013762 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

080137b0 <_ZN8touchgfx4clzuEm>:
 80137b0:	4603      	mov	r3, r0
 80137b2:	b1c8      	cbz	r0, 80137e8 <_ZN8touchgfx4clzuEm+0x38>
 80137b4:	0c02      	lsrs	r2, r0, #16
 80137b6:	0412      	lsls	r2, r2, #16
 80137b8:	b9a2      	cbnz	r2, 80137e4 <_ZN8touchgfx4clzuEm+0x34>
 80137ba:	0403      	lsls	r3, r0, #16
 80137bc:	2010      	movs	r0, #16
 80137be:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 80137c2:	bf04      	itt	eq
 80137c4:	021b      	lsleq	r3, r3, #8
 80137c6:	3008      	addeq	r0, #8
 80137c8:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 80137cc:	bf04      	itt	eq
 80137ce:	011b      	lsleq	r3, r3, #4
 80137d0:	3004      	addeq	r0, #4
 80137d2:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 80137d6:	bf04      	itt	eq
 80137d8:	009b      	lsleq	r3, r3, #2
 80137da:	3002      	addeq	r0, #2
 80137dc:	2b00      	cmp	r3, #0
 80137de:	db04      	blt.n	80137ea <_ZN8touchgfx4clzuEm+0x3a>
 80137e0:	3001      	adds	r0, #1
 80137e2:	4770      	bx	lr
 80137e4:	2000      	movs	r0, #0
 80137e6:	e7ea      	b.n	80137be <_ZN8touchgfx4clzuEm+0xe>
 80137e8:	2020      	movs	r0, #32
 80137ea:	4770      	bx	lr

080137ec <_ZN8touchgfx7muldivuEmmmRm>:
 80137ec:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80137f0:	4680      	mov	r8, r0
 80137f2:	460f      	mov	r7, r1
 80137f4:	4615      	mov	r5, r2
 80137f6:	461e      	mov	r6, r3
 80137f8:	f7ff ffda 	bl	80137b0 <_ZN8touchgfx4clzuEm>
 80137fc:	b998      	cbnz	r0, 8013826 <_ZN8touchgfx7muldivuEmmmRm+0x3a>
 80137fe:	4608      	mov	r0, r1
 8013800:	f7ff ffd6 	bl	80137b0 <_ZN8touchgfx4clzuEm>
 8013804:	2800      	cmp	r0, #0
 8013806:	dd08      	ble.n	801381a <_ZN8touchgfx7muldivuEmmmRm+0x2e>
 8013808:	4633      	mov	r3, r6
 801380a:	462a      	mov	r2, r5
 801380c:	4641      	mov	r1, r8
 801380e:	4638      	mov	r0, r7
 8013810:	f7ff ffec 	bl	80137ec <_ZN8touchgfx7muldivuEmmmRm>
 8013814:	b003      	add	sp, #12
 8013816:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801381a:	f04f 33ff 	mov.w	r3, #4294967295
 801381e:	6033      	str	r3, [r6, #0]
 8013820:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8013824:	e7f6      	b.n	8013814 <_ZN8touchgfx7muldivuEmmmRm+0x28>
 8013826:	fa31 f900 	lsrs.w	r9, r1, r0
 801382a:	fb01 f308 	mul.w	r3, r1, r8
 801382e:	d105      	bne.n	801383c <_ZN8touchgfx7muldivuEmmmRm+0x50>
 8013830:	fbb3 f0f5 	udiv	r0, r3, r5
 8013834:	fb05 3510 	mls	r5, r5, r0, r3
 8013838:	6035      	str	r5, [r6, #0]
 801383a:	e7eb      	b.n	8013814 <_ZN8touchgfx7muldivuEmmmRm+0x28>
 801383c:	2301      	movs	r3, #1
 801383e:	fa08 fb00 	lsl.w	fp, r8, r0
 8013842:	fa03 f000 	lsl.w	r0, r3, r0
 8013846:	3801      	subs	r0, #1
 8013848:	462a      	mov	r2, r5
 801384a:	4633      	mov	r3, r6
 801384c:	4641      	mov	r1, r8
 801384e:	4038      	ands	r0, r7
 8013850:	f7ff ffcc 	bl	80137ec <_ZN8touchgfx7muldivuEmmmRm>
 8013854:	fbbb faf5 	udiv	sl, fp, r5
 8013858:	462a      	mov	r2, r5
 801385a:	4607      	mov	r7, r0
 801385c:	ab01      	add	r3, sp, #4
 801385e:	fb05 b11a 	mls	r1, r5, sl, fp
 8013862:	4648      	mov	r0, r9
 8013864:	f7ff ffc2 	bl	80137ec <_ZN8touchgfx7muldivuEmmmRm>
 8013868:	9b01      	ldr	r3, [sp, #4]
 801386a:	6832      	ldr	r2, [r6, #0]
 801386c:	fb09 f40a 	mul.w	r4, r9, sl
 8013870:	441a      	add	r2, r3
 8013872:	fbb2 f3f5 	udiv	r3, r2, r5
 8013876:	441c      	add	r4, r3
 8013878:	443c      	add	r4, r7
 801387a:	4420      	add	r0, r4
 801387c:	fb05 2513 	mls	r5, r5, r3, r2
 8013880:	e7da      	b.n	8013838 <_ZN8touchgfx7muldivuEmmmRm+0x4c>

08013882 <_ZN8touchgfx6muldivElllRl>:
 8013882:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8013884:	2800      	cmp	r0, #0
 8013886:	bfba      	itte	lt
 8013888:	4240      	neglt	r0, r0
 801388a:	f04f 34ff 	movlt.w	r4, #4294967295
 801388e:	2401      	movge	r4, #1
 8013890:	2900      	cmp	r1, #0
 8013892:	bfbc      	itt	lt
 8013894:	4249      	neglt	r1, r1
 8013896:	4264      	neglt	r4, r4
 8013898:	2a00      	cmp	r2, #0
 801389a:	bfb6      	itet	lt
 801389c:	4265      	neglt	r5, r4
 801389e:	4625      	movge	r5, r4
 80138a0:	4252      	neglt	r2, r2
 80138a2:	4288      	cmp	r0, r1
 80138a4:	461e      	mov	r6, r3
 80138a6:	bfc2      	ittt	gt
 80138a8:	4603      	movgt	r3, r0
 80138aa:	4608      	movgt	r0, r1
 80138ac:	4619      	movgt	r1, r3
 80138ae:	ab01      	add	r3, sp, #4
 80138b0:	f7ff ff9c 	bl	80137ec <_ZN8touchgfx7muldivuEmmmRm>
 80138b4:	9b01      	ldr	r3, [sp, #4]
 80138b6:	4368      	muls	r0, r5
 80138b8:	435c      	muls	r4, r3
 80138ba:	6034      	str	r4, [r6, #0]
 80138bc:	b002      	add	sp, #8
 80138be:	bd70      	pop	{r4, r5, r6, pc}

080138c0 <_ZN8touchgfx6muldivElll>:
 80138c0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80138c2:	4606      	mov	r6, r0
 80138c4:	ab01      	add	r3, sp, #4
 80138c6:	460d      	mov	r5, r1
 80138c8:	4614      	mov	r4, r2
 80138ca:	f7ff ffda 	bl	8013882 <_ZN8touchgfx6muldivElllRl>
 80138ce:	2e00      	cmp	r6, #0
 80138d0:	db20      	blt.n	8013914 <_ZN8touchgfx6muldivElll+0x54>
 80138d2:	bf14      	ite	ne
 80138d4:	2301      	movne	r3, #1
 80138d6:	2300      	moveq	r3, #0
 80138d8:	2d00      	cmp	r5, #0
 80138da:	db1e      	blt.n	801391a <_ZN8touchgfx6muldivElll+0x5a>
 80138dc:	bf14      	ite	ne
 80138de:	2201      	movne	r2, #1
 80138e0:	2200      	moveq	r2, #0
 80138e2:	2c00      	cmp	r4, #0
 80138e4:	fb03 f202 	mul.w	r2, r3, r2
 80138e8:	db1a      	blt.n	8013920 <_ZN8touchgfx6muldivElll+0x60>
 80138ea:	bf14      	ite	ne
 80138ec:	2301      	movne	r3, #1
 80138ee:	2300      	moveq	r3, #0
 80138f0:	4353      	muls	r3, r2
 80138f2:	2b01      	cmp	r3, #1
 80138f4:	d117      	bne.n	8013926 <_ZN8touchgfx6muldivElll+0x66>
 80138f6:	9b01      	ldr	r3, [sp, #4]
 80138f8:	2c00      	cmp	r4, #0
 80138fa:	bfb8      	it	lt
 80138fc:	4264      	neglt	r4, r4
 80138fe:	2b00      	cmp	r3, #0
 8013900:	f104 0401 	add.w	r4, r4, #1
 8013904:	bfb8      	it	lt
 8013906:	425b      	neglt	r3, r3
 8013908:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 801390c:	db00      	blt.n	8013910 <_ZN8touchgfx6muldivElll+0x50>
 801390e:	3001      	adds	r0, #1
 8013910:	b002      	add	sp, #8
 8013912:	bd70      	pop	{r4, r5, r6, pc}
 8013914:	f04f 33ff 	mov.w	r3, #4294967295
 8013918:	e7de      	b.n	80138d8 <_ZN8touchgfx6muldivElll+0x18>
 801391a:	f04f 32ff 	mov.w	r2, #4294967295
 801391e:	e7e0      	b.n	80138e2 <_ZN8touchgfx6muldivElll+0x22>
 8013920:	f04f 33ff 	mov.w	r3, #4294967295
 8013924:	e7e4      	b.n	80138f0 <_ZN8touchgfx6muldivElll+0x30>
 8013926:	3301      	adds	r3, #1
 8013928:	d1f2      	bne.n	8013910 <_ZN8touchgfx6muldivElll+0x50>
 801392a:	9b01      	ldr	r3, [sp, #4]
 801392c:	2c00      	cmp	r4, #0
 801392e:	bfb8      	it	lt
 8013930:	4264      	neglt	r4, r4
 8013932:	2b00      	cmp	r3, #0
 8013934:	bfb8      	it	lt
 8013936:	425b      	neglt	r3, r3
 8013938:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 801393c:	bfc8      	it	gt
 801393e:	f100 30ff 	addgt.w	r0, r0, #4294967295
 8013942:	e7e5      	b.n	8013910 <_ZN8touchgfx6muldivElll+0x50>

08013944 <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 8013944:	2000      	movs	r0, #0
 8013946:	4770      	bx	lr

08013948 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 8013948:	2001      	movs	r0, #1
 801394a:	4770      	bx	lr

0801394c <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 801394c:	2002      	movs	r0, #2
 801394e:	4770      	bx	lr

08013950 <_ZN8touchgfx6ScreenD1Ev>:
 8013950:	4770      	bx	lr

08013952 <_ZN8touchgfx12GestureEventD1Ev>:
 8013952:	4770      	bx	lr

08013954 <_ZN8touchgfx9DragEventD1Ev>:
 8013954:	4770      	bx	lr

08013956 <_ZN8touchgfx10ClickEventD1Ev>:
 8013956:	4770      	bx	lr

08013958 <_ZN8touchgfx10ClickEventD0Ev>:
 8013958:	b510      	push	{r4, lr}
 801395a:	210c      	movs	r1, #12
 801395c:	4604      	mov	r4, r0
 801395e:	f00e f973 	bl	8021c48 <_ZdlPvj>
 8013962:	4620      	mov	r0, r4
 8013964:	bd10      	pop	{r4, pc}

08013966 <_ZN8touchgfx9DragEventD0Ev>:
 8013966:	b510      	push	{r4, lr}
 8013968:	2110      	movs	r1, #16
 801396a:	4604      	mov	r4, r0
 801396c:	f00e f96c 	bl	8021c48 <_ZdlPvj>
 8013970:	4620      	mov	r0, r4
 8013972:	bd10      	pop	{r4, pc}

08013974 <_ZN8touchgfx12GestureEventD0Ev>:
 8013974:	b510      	push	{r4, lr}
 8013976:	210c      	movs	r1, #12
 8013978:	4604      	mov	r4, r0
 801397a:	f00e f965 	bl	8021c48 <_ZdlPvj>
 801397e:	4620      	mov	r0, r4
 8013980:	bd10      	pop	{r4, pc}

08013982 <_ZN8touchgfx6ScreenD0Ev>:
 8013982:	b510      	push	{r4, lr}
 8013984:	213c      	movs	r1, #60	; 0x3c
 8013986:	4604      	mov	r4, r0
 8013988:	f00e f95e 	bl	8021c48 <_ZdlPvj>
 801398c:	4620      	mov	r0, r4
 801398e:	bd10      	pop	{r4, pc}

08013990 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 8013990:	b530      	push	{r4, r5, lr}
 8013992:	460d      	mov	r5, r1
 8013994:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8013996:	b087      	sub	sp, #28
 8013998:	4604      	mov	r4, r0
 801399a:	b301      	cbz	r1, 80139de <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 801399c:	a801      	add	r0, sp, #4
 801399e:	f7ff fe69 	bl	8013674 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80139a2:	892a      	ldrh	r2, [r5, #8]
 80139a4:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 80139a8:	7928      	ldrb	r0, [r5, #4]
 80139aa:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 80139ae:	f88d 0010 	strb.w	r0, [sp, #16]
 80139b2:	1ad2      	subs	r2, r2, r3
 80139b4:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 80139b6:	6b20      	ldr	r0, [r4, #48]	; 0x30
 80139b8:	f8ad 1012 	strh.w	r1, [sp, #18]
 80139bc:	441a      	add	r2, r3
 80139be:	896b      	ldrh	r3, [r5, #10]
 80139c0:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 80139c4:	f8ad 2014 	strh.w	r2, [sp, #20]
 80139c8:	1b5b      	subs	r3, r3, r5
 80139ca:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 80139cc:	442b      	add	r3, r5
 80139ce:	4d05      	ldr	r5, [pc, #20]	; (80139e4 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 80139d0:	9503      	str	r5, [sp, #12]
 80139d2:	f8ad 3016 	strh.w	r3, [sp, #22]
 80139d6:	6803      	ldr	r3, [r0, #0]
 80139d8:	a903      	add	r1, sp, #12
 80139da:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80139dc:	4798      	blx	r3
 80139de:	b007      	add	sp, #28
 80139e0:	bd30      	pop	{r4, r5, pc}
 80139e2:	bf00      	nop
 80139e4:	0802563c 	.word	0x0802563c

080139e8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 80139e8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80139ec:	6b03      	ldr	r3, [r0, #48]	; 0x30
 80139ee:	b08a      	sub	sp, #40	; 0x28
 80139f0:	4604      	mov	r4, r0
 80139f2:	460d      	mov	r5, r1
 80139f4:	b113      	cbz	r3, 80139fc <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 80139f6:	790b      	ldrb	r3, [r1, #4]
 80139f8:	2b00      	cmp	r3, #0
 80139fa:	d044      	beq.n	8013a86 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 80139fc:	f104 0804 	add.w	r8, r4, #4
 8013a00:	4641      	mov	r1, r8
 8013a02:	a803      	add	r0, sp, #12
 8013a04:	f7ff fe36 	bl	8013674 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8013a08:	792b      	ldrb	r3, [r5, #4]
 8013a0a:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8013a0e:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 8013a12:	b983      	cbnz	r3, 8013a36 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 8013a14:	892a      	ldrh	r2, [r5, #8]
 8013a16:	88e9      	ldrh	r1, [r5, #6]
 8013a18:	f104 0336 	add.w	r3, r4, #54	; 0x36
 8013a1c:	1b92      	subs	r2, r2, r6
 8013a1e:	1bc9      	subs	r1, r1, r7
 8013a20:	9301      	str	r3, [sp, #4]
 8013a22:	f104 0334 	add.w	r3, r4, #52	; 0x34
 8013a26:	9300      	str	r3, [sp, #0]
 8013a28:	b212      	sxth	r2, r2
 8013a2a:	f104 0330 	add.w	r3, r4, #48	; 0x30
 8013a2e:	b209      	sxth	r1, r1
 8013a30:	4640      	mov	r0, r8
 8013a32:	f7f8 fd7f 	bl	800c534 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 8013a36:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8013a38:	b329      	cbz	r1, 8013a86 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8013a3a:	a805      	add	r0, sp, #20
 8013a3c:	f7ff fe1a 	bl	8013674 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8013a40:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8013a44:	792b      	ldrb	r3, [r5, #4]
 8013a46:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8013a48:	f88d 3020 	strb.w	r3, [sp, #32]
 8013a4c:	1abf      	subs	r7, r7, r2
 8013a4e:	88ea      	ldrh	r2, [r5, #6]
 8013a50:	4417      	add	r7, r2
 8013a52:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 8013a54:	4417      	add	r7, r2
 8013a56:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 8013a5a:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 8013a5e:	1ab6      	subs	r6, r6, r2
 8013a60:	892a      	ldrh	r2, [r5, #8]
 8013a62:	4416      	add	r6, r2
 8013a64:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8013a66:	4416      	add	r6, r2
 8013a68:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 8013a6c:	4a07      	ldr	r2, [pc, #28]	; (8013a8c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 8013a6e:	9207      	str	r2, [sp, #28]
 8013a70:	2600      	movs	r6, #0
 8013a72:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 8013a76:	6803      	ldr	r3, [r0, #0]
 8013a78:	a907      	add	r1, sp, #28
 8013a7a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8013a7c:	4798      	blx	r3
 8013a7e:	792b      	ldrb	r3, [r5, #4]
 8013a80:	b10b      	cbz	r3, 8013a86 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8013a82:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 8013a86:	b00a      	add	sp, #40	; 0x28
 8013a88:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013a8c:	08025614 	.word	0x08025614

08013a90 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 8013a90:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013a94:	460c      	mov	r4, r1
 8013a96:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8013a98:	b088      	sub	sp, #32
 8013a9a:	4605      	mov	r5, r0
 8013a9c:	2900      	cmp	r1, #0
 8013a9e:	d06d      	beq.n	8013b7c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 8013aa0:	4668      	mov	r0, sp
 8013aa2:	f7ff fde7 	bl	8013674 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8013aa6:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 8013aa8:	88e3      	ldrh	r3, [r4, #6]
 8013aaa:	f9bd 8000 	ldrsh.w	r8, [sp]
 8013aae:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 8013ab2:	440b      	add	r3, r1
 8013ab4:	b21b      	sxth	r3, r3
 8013ab6:	4543      	cmp	r3, r8
 8013ab8:	db31      	blt.n	8013b1e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8013aba:	f8bd c004 	ldrh.w	ip, [sp, #4]
 8013abe:	44c4      	add	ip, r8
 8013ac0:	fa0f fc8c 	sxth.w	ip, ip
 8013ac4:	4563      	cmp	r3, ip
 8013ac6:	da2a      	bge.n	8013b1e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8013ac8:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 8013aca:	8926      	ldrh	r6, [r4, #8]
 8013acc:	4416      	add	r6, r2
 8013ace:	b236      	sxth	r6, r6
 8013ad0:	42be      	cmp	r6, r7
 8013ad2:	db24      	blt.n	8013b1e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8013ad4:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8013ad8:	4438      	add	r0, r7
 8013ada:	b200      	sxth	r0, r0
 8013adc:	4286      	cmp	r6, r0
 8013ade:	da1e      	bge.n	8013b1e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8013ae0:	8963      	ldrh	r3, [r4, #10]
 8013ae2:	4419      	add	r1, r3
 8013ae4:	b209      	sxth	r1, r1
 8013ae6:	4541      	cmp	r1, r8
 8013ae8:	db08      	blt.n	8013afc <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8013aea:	4561      	cmp	r1, ip
 8013aec:	da06      	bge.n	8013afc <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8013aee:	89a3      	ldrh	r3, [r4, #12]
 8013af0:	441a      	add	r2, r3
 8013af2:	b212      	sxth	r2, r2
 8013af4:	42ba      	cmp	r2, r7
 8013af6:	db01      	blt.n	8013afc <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8013af8:	4282      	cmp	r2, r0
 8013afa:	db10      	blt.n	8013b1e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8013afc:	4b21      	ldr	r3, [pc, #132]	; (8013b84 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 8013afe:	9304      	str	r3, [sp, #16]
 8013b00:	2302      	movs	r3, #2
 8013b02:	f88d 3014 	strb.w	r3, [sp, #20]
 8013b06:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8013b08:	2300      	movs	r3, #0
 8013b0a:	f8ad 3016 	strh.w	r3, [sp, #22]
 8013b0e:	f8ad 3018 	strh.w	r3, [sp, #24]
 8013b12:	f8ad 301a 	strh.w	r3, [sp, #26]
 8013b16:	6803      	ldr	r3, [r0, #0]
 8013b18:	a904      	add	r1, sp, #16
 8013b1a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8013b1c:	4798      	blx	r3
 8013b1e:	1d29      	adds	r1, r5, #4
 8013b20:	a802      	add	r0, sp, #8
 8013b22:	f7ff fda7 	bl	8013674 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8013b26:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8013b2a:	88e0      	ldrh	r0, [r4, #6]
 8013b2c:	7921      	ldrb	r1, [r4, #4]
 8013b2e:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 8013b32:	8922      	ldrh	r2, [r4, #8]
 8013b34:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 8013b36:	f88d 1014 	strb.w	r1, [sp, #20]
 8013b3a:	eba3 0808 	sub.w	r8, r3, r8
 8013b3e:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8013b42:	1bdf      	subs	r7, r3, r7
 8013b44:	b2bb      	uxth	r3, r7
 8013b46:	fa1f f888 	uxth.w	r8, r8
 8013b4a:	8967      	ldrh	r7, [r4, #10]
 8013b4c:	89a4      	ldrh	r4, [r4, #12]
 8013b4e:	4440      	add	r0, r8
 8013b50:	4460      	add	r0, ip
 8013b52:	441a      	add	r2, r3
 8013b54:	44b8      	add	r8, r7
 8013b56:	4423      	add	r3, r4
 8013b58:	f8ad 0016 	strh.w	r0, [sp, #22]
 8013b5c:	4433      	add	r3, r6
 8013b5e:	4432      	add	r2, r6
 8013b60:	44e0      	add	r8, ip
 8013b62:	4c09      	ldr	r4, [pc, #36]	; (8013b88 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 8013b64:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8013b66:	9404      	str	r4, [sp, #16]
 8013b68:	f8ad 2018 	strh.w	r2, [sp, #24]
 8013b6c:	f8ad 801a 	strh.w	r8, [sp, #26]
 8013b70:	f8ad 301c 	strh.w	r3, [sp, #28]
 8013b74:	6803      	ldr	r3, [r0, #0]
 8013b76:	a904      	add	r1, sp, #16
 8013b78:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8013b7a:	4798      	blx	r3
 8013b7c:	b008      	add	sp, #32
 8013b7e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013b82:	bf00      	nop
 8013b84:	08025614 	.word	0x08025614
 8013b88:	08025628 	.word	0x08025628

08013b8c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 8013b8c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8013b8e:	4604      	mov	r4, r0
 8013b90:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 8013b94:	3201      	adds	r2, #1
 8013b96:	d112      	bne.n	8013bbe <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 8013b98:	6803      	ldr	r3, [r0, #0]
 8013b9a:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8013b9e:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8013ba2:	f8ad 1004 	strh.w	r1, [sp, #4]
 8013ba6:	2500      	movs	r5, #0
 8013ba8:	9500      	str	r5, [sp, #0]
 8013baa:	466d      	mov	r5, sp
 8013bac:	4629      	mov	r1, r5
 8013bae:	f8ad 2006 	strh.w	r2, [sp, #6]
 8013bb2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8013bb4:	4798      	blx	r3
 8013bb6:	e895 0003 	ldmia.w	r5, {r0, r1}
 8013bba:	e884 0003 	stmia.w	r4, {r0, r1}
 8013bbe:	4620      	mov	r0, r4
 8013bc0:	b003      	add	sp, #12
 8013bc2:	bd30      	pop	{r4, r5, pc}

08013bc4 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 8013bc4:	b513      	push	{r0, r1, r4, lr}
 8013bc6:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 8013bca:	3301      	adds	r3, #1
 8013bcc:	4604      	mov	r4, r0
 8013bce:	d109      	bne.n	8013be4 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 8013bd0:	4601      	mov	r1, r0
 8013bd2:	4668      	mov	r0, sp
 8013bd4:	f7ff fd4e 	bl	8013674 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8013bd8:	f8bd 3000 	ldrh.w	r3, [sp]
 8013bdc:	8423      	strh	r3, [r4, #32]
 8013bde:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8013be2:	8463      	strh	r3, [r4, #34]	; 0x22
 8013be4:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 8013be8:	b002      	add	sp, #8
 8013bea:	bd10      	pop	{r4, pc}

08013bec <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 8013bec:	b513      	push	{r0, r1, r4, lr}
 8013bee:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 8013bf2:	3301      	adds	r3, #1
 8013bf4:	4604      	mov	r4, r0
 8013bf6:	d109      	bne.n	8013c0c <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 8013bf8:	4601      	mov	r1, r0
 8013bfa:	4668      	mov	r0, sp
 8013bfc:	f7ff fd3a 	bl	8013674 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8013c00:	f8bd 3000 	ldrh.w	r3, [sp]
 8013c04:	8423      	strh	r3, [r4, #32]
 8013c06:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8013c0a:	8463      	strh	r3, [r4, #34]	; 0x22
 8013c0c:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 8013c10:	b002      	add	sp, #8
 8013c12:	bd10      	pop	{r4, pc}

08013c14 <_ZN8touchgfx6ScreenC1Ev>:
 8013c14:	b570      	push	{r4, r5, r6, lr}
 8013c16:	4605      	mov	r5, r0
 8013c18:	4b16      	ldr	r3, [pc, #88]	; (8013c74 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 8013c1a:	f845 3b04 	str.w	r3, [r5], #4
 8013c1e:	2300      	movs	r3, #0
 8013c20:	8103      	strh	r3, [r0, #8]
 8013c22:	8143      	strh	r3, [r0, #10]
 8013c24:	8183      	strh	r3, [r0, #12]
 8013c26:	81c3      	strh	r3, [r0, #14]
 8013c28:	8203      	strh	r3, [r0, #16]
 8013c2a:	8243      	strh	r3, [r0, #18]
 8013c2c:	8283      	strh	r3, [r0, #20]
 8013c2e:	82c3      	strh	r3, [r0, #22]
 8013c30:	e9c0 3306 	strd	r3, r3, [r0, #24]
 8013c34:	6203      	str	r3, [r0, #32]
 8013c36:	8483      	strh	r3, [r0, #36]	; 0x24
 8013c38:	84c3      	strh	r3, [r0, #38]	; 0x26
 8013c3a:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 8013c3e:	4a0e      	ldr	r2, [pc, #56]	; (8013c78 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 8013c40:	6343      	str	r3, [r0, #52]	; 0x34
 8013c42:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 8013c46:	4b0d      	ldr	r3, [pc, #52]	; (8013c7c <_ZN8touchgfx6ScreenC1Ev+0x68>)
 8013c48:	6042      	str	r2, [r0, #4]
 8013c4a:	f9b3 6000 	ldrsh.w	r6, [r3]
 8013c4e:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8013c50:	4a0b      	ldr	r2, [pc, #44]	; (8013c80 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 8013c52:	4604      	mov	r4, r0
 8013c54:	2101      	movs	r1, #1
 8013c56:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 8013c5a:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 8013c5e:	f9b2 1000 	ldrsh.w	r1, [r2]
 8013c62:	4628      	mov	r0, r5
 8013c64:	4798      	blx	r3
 8013c66:	6863      	ldr	r3, [r4, #4]
 8013c68:	4628      	mov	r0, r5
 8013c6a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8013c6c:	4631      	mov	r1, r6
 8013c6e:	4798      	blx	r3
 8013c70:	4620      	mov	r0, r4
 8013c72:	bd70      	pop	{r4, r5, r6, pc}
 8013c74:	08025650 	.word	0x08025650
 8013c78:	08024bac 	.word	0x08024bac
 8013c7c:	20017942 	.word	0x20017942
 8013c80:	20017940 	.word	0x20017940

08013c84 <_ZN8touchgfx6Screen4drawEv>:
 8013c84:	b507      	push	{r0, r1, r2, lr}
 8013c86:	4b09      	ldr	r3, [pc, #36]	; (8013cac <_ZN8touchgfx6Screen4drawEv+0x28>)
 8013c88:	f9b3 2000 	ldrsh.w	r2, [r3]
 8013c8c:	4b08      	ldr	r3, [pc, #32]	; (8013cb0 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 8013c8e:	f8ad 2004 	strh.w	r2, [sp, #4]
 8013c92:	f9b3 3000 	ldrsh.w	r3, [r3]
 8013c96:	f8ad 3006 	strh.w	r3, [sp, #6]
 8013c9a:	6803      	ldr	r3, [r0, #0]
 8013c9c:	2100      	movs	r1, #0
 8013c9e:	9100      	str	r1, [sp, #0]
 8013ca0:	689b      	ldr	r3, [r3, #8]
 8013ca2:	4669      	mov	r1, sp
 8013ca4:	4798      	blx	r3
 8013ca6:	b003      	add	sp, #12
 8013ca8:	f85d fb04 	ldr.w	pc, [sp], #4
 8013cac:	20017940 	.word	0x20017940
 8013cb0:	20017942 	.word	0x20017942

08013cb4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 8013cb4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013cb8:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 8013cbc:	2b00      	cmp	r3, #0
 8013cbe:	b089      	sub	sp, #36	; 0x24
 8013cc0:	4680      	mov	r8, r0
 8013cc2:	460c      	mov	r4, r1
 8013cc4:	4615      	mov	r5, r2
 8013cc6:	dd0e      	ble.n	8013ce6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8013cc8:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8013ccc:	2b00      	cmp	r3, #0
 8013cce:	dd0a      	ble.n	8013ce6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8013cd0:	4628      	mov	r0, r5
 8013cd2:	f7ff ff5b 	bl	8013b8c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8013cd6:	4621      	mov	r1, r4
 8013cd8:	f7fe fc01 	bl	80124de <_ZNK8touchgfx4Rect9intersectERKS0_>
 8013cdc:	69eb      	ldr	r3, [r5, #28]
 8013cde:	b928      	cbnz	r0, 8013cec <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 8013ce0:	461d      	mov	r5, r3
 8013ce2:	2b00      	cmp	r3, #0
 8013ce4:	d1f4      	bne.n	8013cd0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 8013ce6:	b009      	add	sp, #36	; 0x24
 8013ce8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013cec:	ae04      	add	r6, sp, #16
 8013cee:	2b00      	cmp	r3, #0
 8013cf0:	f000 80b5 	beq.w	8013e5e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8013cf4:	682b      	ldr	r3, [r5, #0]
 8013cf6:	4629      	mov	r1, r5
 8013cf8:	68db      	ldr	r3, [r3, #12]
 8013cfa:	a802      	add	r0, sp, #8
 8013cfc:	4798      	blx	r3
 8013cfe:	4628      	mov	r0, r5
 8013d00:	f7ff ff60 	bl	8013bc4 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8013d04:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 8013d08:	4407      	add	r7, r0
 8013d0a:	4628      	mov	r0, r5
 8013d0c:	f7ff ff6e 	bl	8013bec <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8013d10:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8013d14:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8013d18:	f8ad 2014 	strh.w	r2, [sp, #20]
 8013d1c:	4418      	add	r0, r3
 8013d1e:	4621      	mov	r1, r4
 8013d20:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8013d24:	f8ad 0012 	strh.w	r0, [sp, #18]
 8013d28:	b23f      	sxth	r7, r7
 8013d2a:	4630      	mov	r0, r6
 8013d2c:	f8ad 3016 	strh.w	r3, [sp, #22]
 8013d30:	f8ad 7010 	strh.w	r7, [sp, #16]
 8013d34:	f7f8 fce2 	bl	800c6fc <_ZN8touchgfx4RectaNERKS0_>
 8013d38:	4628      	mov	r0, r5
 8013d3a:	f7ff ff27 	bl	8013b8c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8013d3e:	4602      	mov	r2, r0
 8013d40:	e896 0003 	ldmia.w	r6, {r0, r1}
 8013d44:	ab06      	add	r3, sp, #24
 8013d46:	e883 0003 	stmia.w	r3, {r0, r1}
 8013d4a:	4611      	mov	r1, r2
 8013d4c:	4618      	mov	r0, r3
 8013d4e:	f7f8 fcd5 	bl	800c6fc <_ZN8touchgfx4RectaNERKS0_>
 8013d52:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8013d56:	f9b4 1000 	ldrsh.w	r1, [r4]
 8013d5a:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 8013d5e:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 8013d62:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 8013d66:	4299      	cmp	r1, r3
 8013d68:	d10b      	bne.n	8013d82 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8013d6a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8013d6e:	4552      	cmp	r2, sl
 8013d70:	d107      	bne.n	8013d82 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8013d72:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8013d76:	455a      	cmp	r2, fp
 8013d78:	d103      	bne.n	8013d82 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8013d7a:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8013d7e:	454a      	cmp	r2, r9
 8013d80:	d06d      	beq.n	8013e5e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8013d82:	f1bb 0f00 	cmp.w	fp, #0
 8013d86:	dd65      	ble.n	8013e54 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8013d88:	f1b9 0f00 	cmp.w	r9, #0
 8013d8c:	dd62      	ble.n	8013e54 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8013d8e:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8013d92:	fa1f f08a 	uxth.w	r0, sl
 8013d96:	4552      	cmp	r2, sl
 8013d98:	9000      	str	r0, [sp, #0]
 8013d9a:	da12      	bge.n	8013dc2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 8013d9c:	9301      	str	r3, [sp, #4]
 8013d9e:	9b00      	ldr	r3, [sp, #0]
 8013da0:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8013da4:	f8ad 2012 	strh.w	r2, [sp, #18]
 8013da8:	1a9a      	subs	r2, r3, r2
 8013daa:	f8ad 1010 	strh.w	r1, [sp, #16]
 8013dae:	f8ad 0014 	strh.w	r0, [sp, #20]
 8013db2:	f8ad 2016 	strh.w	r2, [sp, #22]
 8013db6:	69ea      	ldr	r2, [r5, #28]
 8013db8:	4631      	mov	r1, r6
 8013dba:	4640      	mov	r0, r8
 8013dbc:	f7ff ff7a 	bl	8013cb4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8013dc0:	9b01      	ldr	r3, [sp, #4]
 8013dc2:	f9b4 2000 	ldrsh.w	r2, [r4]
 8013dc6:	429a      	cmp	r2, r3
 8013dc8:	b29f      	uxth	r7, r3
 8013dca:	da0d      	bge.n	8013de8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 8013dcc:	f8ad 2010 	strh.w	r2, [sp, #16]
 8013dd0:	1aba      	subs	r2, r7, r2
 8013dd2:	f8ad a012 	strh.w	sl, [sp, #18]
 8013dd6:	f8ad 2014 	strh.w	r2, [sp, #20]
 8013dda:	f8ad 9016 	strh.w	r9, [sp, #22]
 8013dde:	69ea      	ldr	r2, [r5, #28]
 8013de0:	4631      	mov	r1, r6
 8013de2:	4640      	mov	r0, r8
 8013de4:	f7ff ff66 	bl	8013cb4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8013de8:	8822      	ldrh	r2, [r4, #0]
 8013dea:	88a3      	ldrh	r3, [r4, #4]
 8013dec:	445f      	add	r7, fp
 8013dee:	4413      	add	r3, r2
 8013df0:	b29b      	uxth	r3, r3
 8013df2:	b2bf      	uxth	r7, r7
 8013df4:	b23a      	sxth	r2, r7
 8013df6:	b219      	sxth	r1, r3
 8013df8:	4291      	cmp	r1, r2
 8013dfa:	dd0d      	ble.n	8013e18 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 8013dfc:	1bdb      	subs	r3, r3, r7
 8013dfe:	f8ad 2010 	strh.w	r2, [sp, #16]
 8013e02:	f8ad a012 	strh.w	sl, [sp, #18]
 8013e06:	f8ad 3014 	strh.w	r3, [sp, #20]
 8013e0a:	f8ad 9016 	strh.w	r9, [sp, #22]
 8013e0e:	69ea      	ldr	r2, [r5, #28]
 8013e10:	4631      	mov	r1, r6
 8013e12:	4640      	mov	r0, r8
 8013e14:	f7ff ff4e 	bl	8013cb4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8013e18:	88e2      	ldrh	r2, [r4, #6]
 8013e1a:	8863      	ldrh	r3, [r4, #2]
 8013e1c:	4413      	add	r3, r2
 8013e1e:	9a00      	ldr	r2, [sp, #0]
 8013e20:	444a      	add	r2, r9
 8013e22:	b29b      	uxth	r3, r3
 8013e24:	fa1f f982 	uxth.w	r9, r2
 8013e28:	fa0f f289 	sxth.w	r2, r9
 8013e2c:	b219      	sxth	r1, r3
 8013e2e:	428a      	cmp	r2, r1
 8013e30:	da15      	bge.n	8013e5e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8013e32:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8013e36:	f9b4 0000 	ldrsh.w	r0, [r4]
 8013e3a:	f8ad 1014 	strh.w	r1, [sp, #20]
 8013e3e:	eba3 0309 	sub.w	r3, r3, r9
 8013e42:	f8ad 0010 	strh.w	r0, [sp, #16]
 8013e46:	f8ad 2012 	strh.w	r2, [sp, #18]
 8013e4a:	f8ad 3016 	strh.w	r3, [sp, #22]
 8013e4e:	69ea      	ldr	r2, [r5, #28]
 8013e50:	4631      	mov	r1, r6
 8013e52:	e001      	b.n	8013e58 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 8013e54:	69ea      	ldr	r2, [r5, #28]
 8013e56:	4621      	mov	r1, r4
 8013e58:	4640      	mov	r0, r8
 8013e5a:	f7ff ff2b 	bl	8013cb4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8013e5e:	4628      	mov	r0, r5
 8013e60:	f7ff fe94 	bl	8013b8c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8013e64:	6861      	ldr	r1, [r4, #4]
 8013e66:	4602      	mov	r2, r0
 8013e68:	6820      	ldr	r0, [r4, #0]
 8013e6a:	4633      	mov	r3, r6
 8013e6c:	c303      	stmia	r3!, {r0, r1}
 8013e6e:	4611      	mov	r1, r2
 8013e70:	4630      	mov	r0, r6
 8013e72:	f7f8 fc43 	bl	800c6fc <_ZN8touchgfx4RectaNERKS0_>
 8013e76:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8013e7a:	2b00      	cmp	r3, #0
 8013e7c:	f77f af33 	ble.w	8013ce6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8013e80:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8013e84:	2b00      	cmp	r3, #0
 8013e86:	f77f af2e 	ble.w	8013ce6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8013e8a:	4628      	mov	r0, r5
 8013e8c:	f7ff fe9a 	bl	8013bc4 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8013e90:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 8013e94:	1a18      	subs	r0, r3, r0
 8013e96:	f8ad 0010 	strh.w	r0, [sp, #16]
 8013e9a:	4628      	mov	r0, r5
 8013e9c:	f7ff fea6 	bl	8013bec <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8013ea0:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8013ea4:	1a18      	subs	r0, r3, r0
 8013ea6:	f8ad 0012 	strh.w	r0, [sp, #18]
 8013eaa:	682b      	ldr	r3, [r5, #0]
 8013eac:	4631      	mov	r1, r6
 8013eae:	689b      	ldr	r3, [r3, #8]
 8013eb0:	4628      	mov	r0, r5
 8013eb2:	4798      	blx	r3
 8013eb4:	e717      	b.n	8013ce6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

08013eb6 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 8013eb6:	b570      	push	{r4, r5, r6, lr}
 8013eb8:	460c      	mov	r4, r1
 8013eba:	b086      	sub	sp, #24
 8013ebc:	1d06      	adds	r6, r0, #4
 8013ebe:	2300      	movs	r3, #0
 8013ec0:	4631      	mov	r1, r6
 8013ec2:	4605      	mov	r5, r0
 8013ec4:	a802      	add	r0, sp, #8
 8013ec6:	9301      	str	r3, [sp, #4]
 8013ec8:	f7ff fbd4 	bl	8013674 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8013ecc:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8013ed0:	8822      	ldrh	r2, [r4, #0]
 8013ed2:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 8013ed6:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8013eda:	f8ad 0014 	strh.w	r0, [sp, #20]
 8013ede:	1ad2      	subs	r2, r2, r3
 8013ee0:	8863      	ldrh	r3, [r4, #2]
 8013ee2:	f8ad 2010 	strh.w	r2, [sp, #16]
 8013ee6:	1a5b      	subs	r3, r3, r1
 8013ee8:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8013eec:	f8ad 1016 	strh.w	r1, [sp, #22]
 8013ef0:	aa01      	add	r2, sp, #4
 8013ef2:	a904      	add	r1, sp, #16
 8013ef4:	4630      	mov	r0, r6
 8013ef6:	f8ad 3012 	strh.w	r3, [sp, #18]
 8013efa:	f7f8 fcd7 	bl	800c8ac <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 8013efe:	9a01      	ldr	r2, [sp, #4]
 8013f00:	b11a      	cbz	r2, 8013f0a <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 8013f02:	4621      	mov	r1, r4
 8013f04:	4628      	mov	r0, r5
 8013f06:	f7ff fed5 	bl	8013cb4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8013f0a:	b006      	add	sp, #24
 8013f0c:	bd70      	pop	{r4, r5, r6, pc}

08013f0e <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 8013f0e:	b530      	push	{r4, r5, lr}
 8013f10:	4602      	mov	r2, r0
 8013f12:	4604      	mov	r4, r0
 8013f14:	f852 0f08 	ldr.w	r0, [r2, #8]!
 8013f18:	b085      	sub	sp, #20
 8013f1a:	460d      	mov	r5, r1
 8013f1c:	6851      	ldr	r1, [r2, #4]
 8013f1e:	466b      	mov	r3, sp
 8013f20:	c303      	stmia	r3!, {r0, r1}
 8013f22:	4629      	mov	r1, r5
 8013f24:	4668      	mov	r0, sp
 8013f26:	f7f8 fbe9 	bl	800c6fc <_ZN8touchgfx4RectaNERKS0_>
 8013f2a:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8013f2e:	b12b      	cbz	r3, 8013f3c <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 8013f30:	4669      	mov	r1, sp
 8013f32:	4620      	mov	r0, r4
 8013f34:	f7ff ffbf 	bl	8013eb6 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 8013f38:	b005      	add	sp, #20
 8013f3a:	bd30      	pop	{r4, r5, pc}
 8013f3c:	3404      	adds	r4, #4
 8013f3e:	4621      	mov	r1, r4
 8013f40:	a802      	add	r0, sp, #8
 8013f42:	f7ff fb97 	bl	8013674 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8013f46:	f8bd 3000 	ldrh.w	r3, [sp]
 8013f4a:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 8013f4e:	1a9b      	subs	r3, r3, r2
 8013f50:	f8ad 3000 	strh.w	r3, [sp]
 8013f54:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8013f58:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8013f5c:	4669      	mov	r1, sp
 8013f5e:	1a9b      	subs	r3, r3, r2
 8013f60:	4620      	mov	r0, r4
 8013f62:	f8ad 3002 	strh.w	r3, [sp, #2]
 8013f66:	f7f8 fc68 	bl	800c83a <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 8013f6a:	e7e5      	b.n	8013f38 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

08013f6c <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 8013f6c:	680a      	ldr	r2, [r1, #0]
 8013f6e:	460b      	mov	r3, r1
 8013f70:	6992      	ldr	r2, [r2, #24]
 8013f72:	1d01      	adds	r1, r0, #4
 8013f74:	4618      	mov	r0, r3
 8013f76:	4710      	bx	r2

08013f78 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
 8013f78:	4298      	cmp	r0, r3
 8013f7a:	d200      	bcs.n	8013f7e <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
 8013f7c:	b913      	cbnz	r3, 8013f84 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
 8013f7e:	440a      	add	r2, r1
 8013f80:	b210      	sxth	r0, r2
 8013f82:	4770      	bx	lr
 8013f84:	ee07 0a90 	vmov	s15, r0
 8013f88:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8013f8c:	ee07 3a90 	vmov	s15, r3
 8013f90:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8013f94:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8013f98:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8013f9c:	ee37 7a66 	vsub.f32	s14, s14, s13
 8013fa0:	ee07 2a90 	vmov	s15, r2
 8013fa4:	ee67 5a07 	vmul.f32	s11, s14, s14
 8013fa8:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 8013fac:	eee5 6a87 	vfma.f32	s13, s11, s14
 8013fb0:	ee07 1a90 	vmov	s15, r1
 8013fb4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8013fb8:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8013fbc:	eee6 7a26 	vfma.f32	s15, s12, s13
 8013fc0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8013fc4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013fc8:	bfcc      	ite	gt
 8013fca:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 8013fce:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 8013fd2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8013fd6:	ee17 3a90 	vmov	r3, s15
 8013fda:	b218      	sxth	r0, r3
 8013fdc:	4770      	bx	lr

08013fde <_ZN8touchgfx12TextProviderC1Ev>:
 8013fde:	b538      	push	{r3, r4, r5, lr}
 8013fe0:	2500      	movs	r5, #0
 8013fe2:	2302      	movs	r3, #2
 8013fe4:	4604      	mov	r4, r0
 8013fe6:	e9c0 5500 	strd	r5, r5, [r0]
 8013fea:	7403      	strb	r3, [r0, #16]
 8013fec:	6145      	str	r5, [r0, #20]
 8013fee:	7605      	strb	r5, [r0, #24]
 8013ff0:	83c5      	strh	r5, [r0, #30]
 8013ff2:	8405      	strh	r5, [r0, #32]
 8013ff4:	86c5      	strh	r5, [r0, #54]	; 0x36
 8013ff6:	8705      	strh	r5, [r0, #56]	; 0x38
 8013ff8:	87c5      	strh	r5, [r0, #62]	; 0x3e
 8013ffa:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 8013ffe:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 8014002:	220e      	movs	r2, #14
 8014004:	4629      	mov	r1, r5
 8014006:	304c      	adds	r0, #76	; 0x4c
 8014008:	f00d ffd2 	bl	8021fb0 <memset>
 801400c:	2301      	movs	r3, #1
 801400e:	4620      	mov	r0, r4
 8014010:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 8014014:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8014018:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 801401c:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 8014020:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 8014024:	f7f2 fe72 	bl	8006d0c <_ZN8touchgfx12TextProvider18initializeInternalEv>
 8014028:	4620      	mov	r0, r4
 801402a:	bd38      	pop	{r3, r4, r5, pc}

0801402c <_ZN8touchgfx12TextProvider11endOfStringEv>:
 801402c:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 801402e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8014032:	8c40      	ldrh	r0, [r0, #34]	; 0x22
 8014034:	fab0 f080 	clz	r0, r0
 8014038:	0940      	lsrs	r0, r0, #5
 801403a:	4770      	bx	lr

0801403c <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 801403c:	b530      	push	{r4, r5, lr}
 801403e:	2500      	movs	r5, #0
 8014040:	2401      	movs	r4, #1
 8014042:	6843      	ldr	r3, [r0, #4]
 8014044:	b913      	cbnz	r3, 801404c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 8014046:	6803      	ldr	r3, [r0, #0]
 8014048:	b313      	cbz	r3, 8014090 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 801404a:	6043      	str	r3, [r0, #4]
 801404c:	7e03      	ldrb	r3, [r0, #24]
 801404e:	b143      	cbz	r3, 8014062 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 8014050:	6943      	ldr	r3, [r0, #20]
 8014052:	b12b      	cbz	r3, 8014060 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8014054:	881a      	ldrh	r2, [r3, #0]
 8014056:	b11a      	cbz	r2, 8014060 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8014058:	1c9a      	adds	r2, r3, #2
 801405a:	6142      	str	r2, [r0, #20]
 801405c:	8818      	ldrh	r0, [r3, #0]
 801405e:	bd30      	pop	{r4, r5, pc}
 8014060:	7605      	strb	r5, [r0, #24]
 8014062:	6843      	ldr	r3, [r0, #4]
 8014064:	8819      	ldrh	r1, [r3, #0]
 8014066:	b199      	cbz	r1, 8014090 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8014068:	1c9a      	adds	r2, r3, #2
 801406a:	2902      	cmp	r1, #2
 801406c:	6042      	str	r2, [r0, #4]
 801406e:	d1f5      	bne.n	801405c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 8014070:	7c03      	ldrb	r3, [r0, #16]
 8014072:	2b01      	cmp	r3, #1
 8014074:	d8e5      	bhi.n	8014042 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8014076:	1c5a      	adds	r2, r3, #1
 8014078:	3302      	adds	r3, #2
 801407a:	7402      	strb	r2, [r0, #16]
 801407c:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8014080:	6143      	str	r3, [r0, #20]
 8014082:	2b00      	cmp	r3, #0
 8014084:	d0dd      	beq.n	8014042 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8014086:	881b      	ldrh	r3, [r3, #0]
 8014088:	2b00      	cmp	r3, #0
 801408a:	d0da      	beq.n	8014042 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801408c:	7604      	strb	r4, [r0, #24]
 801408e:	e7d8      	b.n	8014042 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8014090:	2000      	movs	r0, #0
 8014092:	e7e4      	b.n	801405e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

08014094 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 8014094:	b430      	push	{r4, r5}
 8014096:	6001      	str	r1, [r0, #0]
 8014098:	2100      	movs	r1, #0
 801409a:	6041      	str	r1, [r0, #4]
 801409c:	6815      	ldr	r5, [r2, #0]
 801409e:	6085      	str	r5, [r0, #8]
 80140a0:	6852      	ldr	r2, [r2, #4]
 80140a2:	6443      	str	r3, [r0, #68]	; 0x44
 80140a4:	9b02      	ldr	r3, [sp, #8]
 80140a6:	60c2      	str	r2, [r0, #12]
 80140a8:	7401      	strb	r1, [r0, #16]
 80140aa:	6141      	str	r1, [r0, #20]
 80140ac:	7601      	strb	r1, [r0, #24]
 80140ae:	8701      	strh	r1, [r0, #56]	; 0x38
 80140b0:	8401      	strh	r1, [r0, #32]
 80140b2:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 80140b6:	6483      	str	r3, [r0, #72]	; 0x48
 80140b8:	bc30      	pop	{r4, r5}
 80140ba:	f7f2 be27 	b.w	8006d0c <_ZN8touchgfx12TextProvider18initializeInternalEv>

080140be <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 80140be:	b408      	push	{r3}
 80140c0:	b510      	push	{r4, lr}
 80140c2:	b085      	sub	sp, #20
 80140c4:	ac07      	add	r4, sp, #28
 80140c6:	f854 3b04 	ldr.w	r3, [r4], #4
 80140ca:	9300      	str	r3, [sp, #0]
 80140cc:	4613      	mov	r3, r2
 80140ce:	4622      	mov	r2, r4
 80140d0:	9403      	str	r4, [sp, #12]
 80140d2:	f7ff ffdf 	bl	8014094 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80140d6:	b005      	add	sp, #20
 80140d8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80140dc:	b001      	add	sp, #4
 80140de:	4770      	bx	lr

080140e0 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 80140e0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80140e2:	4605      	mov	r5, r0
 80140e4:	4608      	mov	r0, r1
 80140e6:	b1e9      	cbz	r1, 8014124 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 80140e8:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 80140ec:	460b      	mov	r3, r1
 80140ee:	f101 0708 	add.w	r7, r1, #8
 80140f2:	4622      	mov	r2, r4
 80140f4:	6818      	ldr	r0, [r3, #0]
 80140f6:	6859      	ldr	r1, [r3, #4]
 80140f8:	4626      	mov	r6, r4
 80140fa:	c603      	stmia	r6!, {r0, r1}
 80140fc:	3308      	adds	r3, #8
 80140fe:	42bb      	cmp	r3, r7
 8014100:	4634      	mov	r4, r6
 8014102:	d1f7      	bne.n	80140f4 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 8014104:	6818      	ldr	r0, [r3, #0]
 8014106:	6030      	str	r0, [r6, #0]
 8014108:	889b      	ldrh	r3, [r3, #4]
 801410a:	80b3      	strh	r3, [r6, #4]
 801410c:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 8014110:	015b      	lsls	r3, r3, #5
 8014112:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8014116:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 801411a:	430b      	orrs	r3, r1
 801411c:	425b      	negs	r3, r3
 801411e:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 8014122:	4610      	mov	r0, r2
 8014124:	bdf0      	pop	{r4, r5, r6, r7, pc}

08014126 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 8014126:	b538      	push	{r3, r4, r5, lr}
 8014128:	460c      	mov	r4, r1
 801412a:	6811      	ldr	r1, [r2, #0]
 801412c:	4610      	mov	r0, r2
 801412e:	68cd      	ldr	r5, [r1, #12]
 8014130:	4619      	mov	r1, r3
 8014132:	47a8      	blx	r5
 8014134:	2800      	cmp	r0, #0
 8014136:	bf08      	it	eq
 8014138:	4620      	moveq	r0, r4
 801413a:	bd38      	pop	{r3, r4, r5, pc}

0801413c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 801413c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801413e:	4604      	mov	r4, r0
 8014140:	4615      	mov	r5, r2
 8014142:	4608      	mov	r0, r1
 8014144:	b93a      	cbnz	r2, 8014156 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 8014146:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 801414a:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 801414e:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 8014152:	4628      	mov	r0, r5
 8014154:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8014156:	f892 c00d 	ldrb.w	ip, [r2, #13]
 801415a:	8893      	ldrh	r3, [r2, #4]
 801415c:	ea4f 160c 	mov.w	r6, ip, lsl #4
 8014160:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8014164:	79ee      	ldrb	r6, [r5, #7]
 8014166:	f46f 6763 	mvn.w	r7, #3632	; 0xe30
 801416a:	4316      	orrs	r6, r2
 801416c:	19da      	adds	r2, r3, r7
 801416e:	b291      	uxth	r1, r2
 8014170:	291d      	cmp	r1, #29
 8014172:	b2b7      	uxth	r7, r6
 8014174:	d87a      	bhi.n	801426c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 8014176:	2201      	movs	r2, #1
 8014178:	408a      	lsls	r2, r1
 801417a:	4975      	ldr	r1, [pc, #468]	; (8014350 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
 801417c:	420a      	tst	r2, r1
 801417e:	ea4f 06e6 	mov.w	r6, r6, asr #3
 8014182:	d12d      	bne.n	80141e0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 8014184:	f412 7f60 	tst.w	r2, #896	; 0x380
 8014188:	d070      	beq.n	801426c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 801418a:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 801418e:	462b      	mov	r3, r5
 8014190:	f105 0e08 	add.w	lr, r5, #8
 8014194:	4615      	mov	r5, r2
 8014196:	6818      	ldr	r0, [r3, #0]
 8014198:	6859      	ldr	r1, [r3, #4]
 801419a:	4694      	mov	ip, r2
 801419c:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 80141a0:	3308      	adds	r3, #8
 80141a2:	4573      	cmp	r3, lr
 80141a4:	4662      	mov	r2, ip
 80141a6:	d1f6      	bne.n	8014196 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 80141a8:	6818      	ldr	r0, [r3, #0]
 80141aa:	f8cc 0000 	str.w	r0, [ip]
 80141ae:	889b      	ldrh	r3, [r3, #4]
 80141b0:	f8ac 3004 	strh.w	r3, [ip, #4]
 80141b4:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 80141b8:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 80141bc:	b2b3      	uxth	r3, r6
 80141be:	1aca      	subs	r2, r1, r3
 80141c0:	b292      	uxth	r2, r2
 80141c2:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 80141c6:	10d2      	asrs	r2, r2, #3
 80141c8:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 80141cc:	f002 0260 	and.w	r2, r2, #96	; 0x60
 80141d0:	4302      	orrs	r2, r0
 80141d2:	1bcf      	subs	r7, r1, r7
 80141d4:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 80141d8:	1afb      	subs	r3, r7, r3
 80141da:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 80141de:	e7b8      	b.n	8014152 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 80141e0:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80141e2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80141e6:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 80141e8:	f640 6333 	movw	r3, #3635	; 0xe33
 80141ec:	4299      	cmp	r1, r3
 80141ee:	d110      	bne.n	8014212 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
 80141f0:	6803      	ldr	r3, [r0, #0]
 80141f2:	68db      	ldr	r3, [r3, #12]
 80141f4:	4798      	blx	r3
 80141f6:	7b41      	ldrb	r1, [r0, #13]
 80141f8:	00cb      	lsls	r3, r1, #3
 80141fa:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80141fe:	7a03      	ldrb	r3, [r0, #8]
 8014200:	0648      	lsls	r0, r1, #25
 8014202:	ea43 0302 	orr.w	r3, r3, r2
 8014206:	bf44      	itt	mi
 8014208:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801420c:	b21b      	sxthmi	r3, r3
 801420e:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8014212:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 8014216:	443b      	add	r3, r7
 8014218:	4433      	add	r3, r6
 801421a:	b29b      	uxth	r3, r3
 801421c:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 8014220:	462a      	mov	r2, r5
 8014222:	f105 0c08 	add.w	ip, r5, #8
 8014226:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801422a:	4635      	mov	r5, r6
 801422c:	6810      	ldr	r0, [r2, #0]
 801422e:	6851      	ldr	r1, [r2, #4]
 8014230:	4637      	mov	r7, r6
 8014232:	c703      	stmia	r7!, {r0, r1}
 8014234:	3208      	adds	r2, #8
 8014236:	4562      	cmp	r2, ip
 8014238:	463e      	mov	r6, r7
 801423a:	d1f7      	bne.n	801422c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
 801423c:	6810      	ldr	r0, [r2, #0]
 801423e:	6038      	str	r0, [r7, #0]
 8014240:	8892      	ldrh	r2, [r2, #4]
 8014242:	80ba      	strh	r2, [r7, #4]
 8014244:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8014248:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 801424c:	10db      	asrs	r3, r3, #3
 801424e:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8014252:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8014256:	4313      	orrs	r3, r2
 8014258:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 801425c:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 8014260:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 8014264:	1a9b      	subs	r3, r3, r2
 8014266:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 801426a:	e772      	b.n	8014152 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 801426c:	f023 0204 	bic.w	r2, r3, #4
 8014270:	f640 611b 	movw	r1, #3611	; 0xe1b
 8014274:	428a      	cmp	r2, r1
 8014276:	d003      	beq.n	8014280 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x144>
 8014278:	f640 621d 	movw	r2, #3613	; 0xe1d
 801427c:	4293      	cmp	r3, r2
 801427e:	d120      	bne.n	80142c2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x186>
 8014280:	3b01      	subs	r3, #1
 8014282:	4602      	mov	r2, r0
 8014284:	b29b      	uxth	r3, r3
 8014286:	4629      	mov	r1, r5
 8014288:	4620      	mov	r0, r4
 801428a:	f7ff ff4c 	bl	8014126 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 801428e:	7b41      	ldrb	r1, [r0, #13]
 8014290:	00cb      	lsls	r3, r1, #3
 8014292:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8014296:	7a03      	ldrb	r3, [r0, #8]
 8014298:	0649      	lsls	r1, r1, #25
 801429a:	ea43 0302 	orr.w	r3, r3, r2
 801429e:	bf44      	itt	mi
 80142a0:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80142a4:	b21b      	sxthmi	r3, r3
 80142a6:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 80142aa:	7b6b      	ldrb	r3, [r5, #13]
 80142ac:	7aaa      	ldrb	r2, [r5, #10]
 80142ae:	005b      	lsls	r3, r3, #1
 80142b0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80142b4:	4313      	orrs	r3, r2
 80142b6:	115a      	asrs	r2, r3, #5
 80142b8:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 80142bc:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 80142c0:	e036      	b.n	8014330 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
 80142c2:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 80142c6:	f402 7180 	and.w	r1, r2, #256	; 0x100
 80142ca:	7a2a      	ldrb	r2, [r5, #8]
 80142cc:	f01c 0f40 	tst.w	ip, #64	; 0x40
 80142d0:	ea42 0201 	orr.w	r2, r2, r1
 80142d4:	bf1c      	itt	ne
 80142d6:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 80142da:	b212      	sxthne	r2, r2
 80142dc:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 80142e0:	f640 6109 	movw	r1, #3593	; 0xe09
 80142e4:	f023 0210 	bic.w	r2, r3, #16
 80142e8:	428a      	cmp	r2, r1
 80142ea:	d003      	beq.n	80142f4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b8>
 80142ec:	f640 6213 	movw	r2, #3603	; 0xe13
 80142f0:	4293      	cmp	r3, r2
 80142f2:	d12a      	bne.n	801434a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
 80142f4:	7b6e      	ldrb	r6, [r5, #13]
 80142f6:	0076      	lsls	r6, r6, #1
 80142f8:	f406 7280 	and.w	r2, r6, #256	; 0x100
 80142fc:	7aae      	ldrb	r6, [r5, #10]
 80142fe:	4316      	orrs	r6, r2
 8014300:	f640 6213 	movw	r2, #3603	; 0xe13
 8014304:	4293      	cmp	r3, r2
 8014306:	bf18      	it	ne
 8014308:	f103 33ff 	addne.w	r3, r3, #4294967295
 801430c:	4602      	mov	r2, r0
 801430e:	bf14      	ite	ne
 8014310:	b29b      	uxthne	r3, r3
 8014312:	f640 630c 	movweq	r3, #3596	; 0xe0c
 8014316:	4629      	mov	r1, r5
 8014318:	4620      	mov	r0, r4
 801431a:	f7ff ff04 	bl	8014126 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 801431e:	7b43      	ldrb	r3, [r0, #13]
 8014320:	7a82      	ldrb	r2, [r0, #10]
 8014322:	005b      	lsls	r3, r3, #1
 8014324:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8014328:	4313      	orrs	r3, r2
 801432a:	1af6      	subs	r6, r6, r3
 801432c:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 8014330:	7b69      	ldrb	r1, [r5, #13]
 8014332:	00cb      	lsls	r3, r1, #3
 8014334:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8014338:	7a2b      	ldrb	r3, [r5, #8]
 801433a:	4313      	orrs	r3, r2
 801433c:	064a      	lsls	r2, r1, #25
 801433e:	bf44      	itt	mi
 8014340:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8014344:	b21b      	sxthmi	r3, r3
 8014346:	1bdb      	subs	r3, r3, r7
 8014348:	e747      	b.n	80141da <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 801434a:	2300      	movs	r3, #0
 801434c:	e7b6      	b.n	80142bc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x180>
 801434e:	bf00      	nop
 8014350:	3fc00079 	.word	0x3fc00079

08014354 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 8014354:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8014358:	4604      	mov	r4, r0
 801435a:	b942      	cbnz	r2, 801436e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 801435c:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8014360:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 8014364:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 8014368:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 801436c:	e047      	b.n	80143fe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 801436e:	7b51      	ldrb	r1, [r2, #13]
 8014370:	8893      	ldrh	r3, [r2, #4]
 8014372:	010d      	lsls	r5, r1, #4
 8014374:	f405 7080 	and.w	r0, r5, #256	; 0x100
 8014378:	79d5      	ldrb	r5, [r2, #7]
 801437a:	4305      	orrs	r5, r0
 801437c:	2d04      	cmp	r5, #4
 801437e:	bfcc      	ite	gt
 8014380:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 8014384:	f04f 0e01 	movle.w	lr, #1
 8014388:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 801438c:	f200 80ab 	bhi.w	80144e6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 8014390:	f240 60e7 	movw	r0, #1767	; 0x6e7
 8014394:	4283      	cmp	r3, r0
 8014396:	d216      	bcs.n	80143c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8014398:	f240 605b 	movw	r0, #1627	; 0x65b
 801439c:	4283      	cmp	r3, r0
 801439e:	d859      	bhi.n	8014454 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 80143a0:	f240 6057 	movw	r0, #1623	; 0x657
 80143a4:	4283      	cmp	r3, r0
 80143a6:	d20e      	bcs.n	80143c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80143a8:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 80143ac:	d24a      	bcs.n	8014444 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 80143ae:	f240 604e 	movw	r0, #1614	; 0x64e
 80143b2:	4283      	cmp	r3, r0
 80143b4:	d207      	bcs.n	80143c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80143b6:	f240 601a 	movw	r0, #1562	; 0x61a
 80143ba:	4283      	cmp	r3, r0
 80143bc:	d02a      	beq.n	8014414 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80143be:	d821      	bhi.n	8014404 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 80143c0:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 80143c4:	d35b      	bcc.n	801447e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 80143c6:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 80143ca:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 80143ce:	f040 80d0 	bne.w	8014572 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 80143d2:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 80143d6:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 80143da:	f040 80ca 	bne.w	8014572 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 80143de:	00cb      	lsls	r3, r1, #3
 80143e0:	f403 7080 	and.w	r0, r3, #256	; 0x100
 80143e4:	7a13      	ldrb	r3, [r2, #8]
 80143e6:	0649      	lsls	r1, r1, #25
 80143e8:	ea43 0300 	orr.w	r3, r3, r0
 80143ec:	bf44      	itt	mi
 80143ee:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80143f2:	b21b      	sxthmi	r3, r3
 80143f4:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 80143f8:	1b5d      	subs	r5, r3, r5
 80143fa:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 80143fe:	4610      	mov	r0, r2
 8014400:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8014404:	f240 604b 	movw	r0, #1611	; 0x64b
 8014408:	4283      	cmp	r3, r0
 801440a:	d338      	bcc.n	801447e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801440c:	f240 604c 	movw	r0, #1612	; 0x64c
 8014410:	4283      	cmp	r3, r0
 8014412:	d9d8      	bls.n	80143c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8014414:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 8014418:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 801441c:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8014420:	f040 80f2 	bne.w	8014608 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8014424:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8014428:	f040 80ee 	bne.w	8014608 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 801442c:	00cb      	lsls	r3, r1, #3
 801442e:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8014432:	7a13      	ldrb	r3, [r2, #8]
 8014434:	064e      	lsls	r6, r1, #25
 8014436:	ea43 0300 	orr.w	r3, r3, r0
 801443a:	bf44      	itt	mi
 801443c:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8014440:	b21b      	sxthmi	r3, r3
 8014442:	e7d9      	b.n	80143f8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 8014444:	f240 6054 	movw	r0, #1620	; 0x654
 8014448:	4283      	cmp	r3, r0
 801444a:	d8e3      	bhi.n	8014414 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801444c:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8014450:	d9e0      	bls.n	8014414 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8014452:	e7b8      	b.n	80143c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8014454:	f240 6074 	movw	r0, #1652	; 0x674
 8014458:	4283      	cmp	r3, r0
 801445a:	d0b4      	beq.n	80143c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801445c:	d82d      	bhi.n	80144ba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 801445e:	f240 605e 	movw	r0, #1630	; 0x65e
 8014462:	4283      	cmp	r3, r0
 8014464:	d804      	bhi.n	8014470 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 8014466:	f240 605d 	movw	r0, #1629	; 0x65d
 801446a:	4283      	cmp	r3, r0
 801446c:	d3d2      	bcc.n	8014414 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801446e:	e7aa      	b.n	80143c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8014470:	f240 605f 	movw	r0, #1631	; 0x65f
 8014474:	4283      	cmp	r3, r0
 8014476:	d0cd      	beq.n	8014414 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8014478:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 801447c:	d0a3      	beq.n	80143c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801447e:	00cb      	lsls	r3, r1, #3
 8014480:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8014484:	7a13      	ldrb	r3, [r2, #8]
 8014486:	0649      	lsls	r1, r1, #25
 8014488:	ea43 0300 	orr.w	r3, r3, r0
 801448c:	bf44      	itt	mi
 801448e:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8014492:	b21b      	sxthmi	r3, r3
 8014494:	1b5d      	subs	r5, r3, r5
 8014496:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801449a:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801449e:	7b53      	ldrb	r3, [r2, #13]
 80144a0:	015b      	lsls	r3, r3, #5
 80144a2:	f403 7180 	and.w	r1, r3, #256	; 0x100
 80144a6:	7993      	ldrb	r3, [r2, #6]
 80144a8:	430b      	orrs	r3, r1
 80144aa:	005b      	lsls	r3, r3, #1
 80144ac:	2105      	movs	r1, #5
 80144ae:	fb93 f3f1 	sdiv	r3, r3, r1
 80144b2:	f992 1009 	ldrsb.w	r1, [r2, #9]
 80144b6:	440b      	add	r3, r1
 80144b8:	e756      	b.n	8014368 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 80144ba:	f240 60e2 	movw	r0, #1762	; 0x6e2
 80144be:	4283      	cmp	r3, r0
 80144c0:	d809      	bhi.n	80144d6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 80144c2:	f240 60df 	movw	r0, #1759	; 0x6df
 80144c6:	4283      	cmp	r3, r0
 80144c8:	f4bf af7d 	bcs.w	80143c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80144cc:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 80144d0:	2b05      	cmp	r3, #5
 80144d2:	d8d4      	bhi.n	801447e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 80144d4:	e777      	b.n	80143c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80144d6:	f240 60e3 	movw	r0, #1763	; 0x6e3
 80144da:	4283      	cmp	r3, r0
 80144dc:	d09a      	beq.n	8014414 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80144de:	f240 60e4 	movw	r0, #1764	; 0x6e4
 80144e2:	4283      	cmp	r3, r0
 80144e4:	e7ca      	b.n	801447c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 80144e6:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 80144ea:	d22b      	bcs.n	8014544 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 80144ec:	f640 00ed 	movw	r0, #2285	; 0x8ed
 80144f0:	4283      	cmp	r3, r0
 80144f2:	d28f      	bcs.n	8014414 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80144f4:	f640 00e5 	movw	r0, #2277	; 0x8e5
 80144f8:	4283      	cmp	r3, r0
 80144fa:	d816      	bhi.n	801452a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 80144fc:	f640 00e4 	movw	r0, #2276	; 0x8e4
 8014500:	4283      	cmp	r3, r0
 8014502:	f4bf af60 	bcs.w	80143c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8014506:	f240 60ec 	movw	r0, #1772	; 0x6ec
 801450a:	4283      	cmp	r3, r0
 801450c:	d80a      	bhi.n	8014524 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 801450e:	f240 60eb 	movw	r0, #1771	; 0x6eb
 8014512:	4283      	cmp	r3, r0
 8014514:	f4bf af57 	bcs.w	80143c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8014518:	f240 60ea 	movw	r0, #1770	; 0x6ea
 801451c:	4283      	cmp	r3, r0
 801451e:	f43f af79 	beq.w	8014414 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8014522:	e7ac      	b.n	801447e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8014524:	f240 60ed 	movw	r0, #1773	; 0x6ed
 8014528:	e7f8      	b.n	801451c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 801452a:	f640 00e8 	movw	r0, #2280	; 0x8e8
 801452e:	4283      	cmp	r3, r0
 8014530:	d802      	bhi.n	8014538 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 8014532:	f640 00e7 	movw	r0, #2279	; 0x8e7
 8014536:	e798      	b.n	801446a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 8014538:	f640 00e9 	movw	r0, #2281	; 0x8e9
 801453c:	4283      	cmp	r3, r0
 801453e:	f47f af42 	bne.w	80143c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8014542:	e767      	b.n	8014414 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8014544:	f640 00f6 	movw	r0, #2294	; 0x8f6
 8014548:	4283      	cmp	r3, r0
 801454a:	f43f af63 	beq.w	8014414 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801454e:	d802      	bhi.n	8014556 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 8014550:	f640 00f2 	movw	r0, #2290	; 0x8f2
 8014554:	e7f2      	b.n	801453c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 8014556:	f640 00fa 	movw	r0, #2298	; 0x8fa
 801455a:	4283      	cmp	r3, r0
 801455c:	d805      	bhi.n	801456a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 801455e:	f640 00f9 	movw	r0, #2297	; 0x8f9
 8014562:	4283      	cmp	r3, r0
 8014564:	f4ff af2f 	bcc.w	80143c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8014568:	e754      	b.n	8014414 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801456a:	f640 00fe 	movw	r0, #2302	; 0x8fe
 801456e:	4283      	cmp	r3, r0
 8014570:	e7af      	b.n	80144d2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 8014572:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 8014576:	4617      	mov	r7, r2
 8014578:	f102 0808 	add.w	r8, r2, #8
 801457c:	4666      	mov	r6, ip
 801457e:	6838      	ldr	r0, [r7, #0]
 8014580:	6879      	ldr	r1, [r7, #4]
 8014582:	46e6      	mov	lr, ip
 8014584:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8014588:	3708      	adds	r7, #8
 801458a:	4547      	cmp	r7, r8
 801458c:	46f4      	mov	ip, lr
 801458e:	d1f6      	bne.n	801457e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 8014590:	6838      	ldr	r0, [r7, #0]
 8014592:	f8ce 0000 	str.w	r0, [lr]
 8014596:	88b9      	ldrh	r1, [r7, #4]
 8014598:	f8ae 1004 	strh.w	r1, [lr, #4]
 801459c:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 80145a0:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 80145a4:	d009      	beq.n	80145ba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 80145a6:	7b51      	ldrb	r1, [r2, #13]
 80145a8:	7992      	ldrb	r2, [r2, #6]
 80145aa:	0149      	lsls	r1, r1, #5
 80145ac:	f401 7180 	and.w	r1, r1, #256	; 0x100
 80145b0:	4311      	orrs	r1, r2
 80145b2:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 80145b6:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 80145ba:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 80145be:	b2ad      	uxth	r5, r5
 80145c0:	d00d      	beq.n	80145de <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 80145c2:	442b      	add	r3, r5
 80145c4:	b29b      	uxth	r3, r3
 80145c6:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 80145ca:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 80145ce:	10db      	asrs	r3, r3, #3
 80145d0:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 80145d4:	f003 0360 	and.w	r3, r3, #96	; 0x60
 80145d8:	4313      	orrs	r3, r2
 80145da:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 80145de:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 80145e2:	00cb      	lsls	r3, r1, #3
 80145e4:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80145e8:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 80145ec:	064f      	lsls	r7, r1, #25
 80145ee:	ea43 0302 	orr.w	r3, r3, r2
 80145f2:	bf44      	itt	mi
 80145f4:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80145f8:	b21b      	sxthmi	r3, r3
 80145fa:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 80145fe:	1b5b      	subs	r3, r3, r5
 8014600:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8014604:	4632      	mov	r2, r6
 8014606:	e6fa      	b.n	80143fe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8014608:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 801460c:	4617      	mov	r7, r2
 801460e:	f102 0908 	add.w	r9, r2, #8
 8014612:	4666      	mov	r6, ip
 8014614:	6838      	ldr	r0, [r7, #0]
 8014616:	6879      	ldr	r1, [r7, #4]
 8014618:	46e0      	mov	r8, ip
 801461a:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 801461e:	3708      	adds	r7, #8
 8014620:	454f      	cmp	r7, r9
 8014622:	46c4      	mov	ip, r8
 8014624:	d1f6      	bne.n	8014614 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 8014626:	6838      	ldr	r0, [r7, #0]
 8014628:	f8c8 0000 	str.w	r0, [r8]
 801462c:	88b9      	ldrh	r1, [r7, #4]
 801462e:	f8a8 1004 	strh.w	r1, [r8, #4]
 8014632:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 8014636:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801463a:	d009      	beq.n	8014650 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 801463c:	7b51      	ldrb	r1, [r2, #13]
 801463e:	7992      	ldrb	r2, [r2, #6]
 8014640:	0149      	lsls	r1, r1, #5
 8014642:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8014646:	4311      	orrs	r1, r2
 8014648:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 801464c:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 8014650:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8014654:	d00e      	beq.n	8014674 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 8014656:	eba3 030e 	sub.w	r3, r3, lr
 801465a:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 801465e:	b29b      	uxth	r3, r3
 8014660:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8014664:	10db      	asrs	r3, r3, #3
 8014666:	f003 0360 	and.w	r3, r3, #96	; 0x60
 801466a:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 801466e:	4313      	orrs	r3, r2
 8014670:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8014674:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 8014678:	00cb      	lsls	r3, r1, #3
 801467a:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801467e:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 8014682:	0648      	lsls	r0, r1, #25
 8014684:	ea43 0302 	orr.w	r3, r3, r2
 8014688:	bf44      	itt	mi
 801468a:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801468e:	b21b      	sxthmi	r3, r3
 8014690:	1b5d      	subs	r5, r3, r5
 8014692:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8014696:	e7b5      	b.n	8014604 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

08014698 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 8014698:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801469c:	461e      	mov	r6, r3
 801469e:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 80146a0:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80146a4:	4604      	mov	r4, r0
 80146a6:	4617      	mov	r7, r2
 80146a8:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 80146ac:	f7f2 faec 	bl	8006c88 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 80146b0:	4605      	mov	r5, r0
 80146b2:	b918      	cbnz	r0, 80146bc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 80146b4:	6030      	str	r0, [r6, #0]
 80146b6:	4628      	mov	r0, r5
 80146b8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80146bc:	683b      	ldr	r3, [r7, #0]
 80146be:	4601      	mov	r1, r0
 80146c0:	68db      	ldr	r3, [r3, #12]
 80146c2:	4638      	mov	r0, r7
 80146c4:	4798      	blx	r3
 80146c6:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 80146ca:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 80146ce:	4602      	mov	r2, r0
 80146d0:	6030      	str	r0, [r6, #0]
 80146d2:	d213      	bcs.n	80146fc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 80146d4:	4643      	mov	r3, r8
 80146d6:	4639      	mov	r1, r7
 80146d8:	4620      	mov	r0, r4
 80146da:	f7ff fe3b 	bl	8014354 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 80146de:	6030      	str	r0, [r6, #0]
 80146e0:	6833      	ldr	r3, [r6, #0]
 80146e2:	b143      	cbz	r3, 80146f6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 80146e4:	7b5a      	ldrb	r2, [r3, #13]
 80146e6:	7a9b      	ldrb	r3, [r3, #10]
 80146e8:	0052      	lsls	r2, r2, #1
 80146ea:	f402 7280 	and.w	r2, r2, #256	; 0x100
 80146ee:	4313      	orrs	r3, r2
 80146f0:	bf0c      	ite	eq
 80146f2:	2301      	moveq	r3, #1
 80146f4:	2300      	movne	r3, #0
 80146f6:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 80146fa:	e7dc      	b.n	80146b6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 80146fc:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8014700:	b29b      	uxth	r3, r3
 8014702:	2b7f      	cmp	r3, #127	; 0x7f
 8014704:	d804      	bhi.n	8014710 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 8014706:	4639      	mov	r1, r7
 8014708:	4620      	mov	r0, r4
 801470a:	f7ff fd17 	bl	801413c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 801470e:	e7e6      	b.n	80146de <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 8014710:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8014714:	2b00      	cmp	r3, #0
 8014716:	d0e3      	beq.n	80146e0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8014718:	f640 1302 	movw	r3, #2306	; 0x902
 801471c:	429d      	cmp	r5, r3
 801471e:	d1df      	bne.n	80146e0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8014720:	4601      	mov	r1, r0
 8014722:	4620      	mov	r0, r4
 8014724:	f7ff fcdc 	bl	80140e0 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8014728:	e7d9      	b.n	80146de <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

0801472a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 801472a:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801472e:	461e      	mov	r6, r3
 8014730:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8014732:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8014736:	4604      	mov	r4, r0
 8014738:	4617      	mov	r7, r2
 801473a:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 801473e:	f7f2 faa3 	bl	8006c88 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8014742:	4605      	mov	r5, r0
 8014744:	b918      	cbnz	r0, 801474e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 8014746:	6030      	str	r0, [r6, #0]
 8014748:	4628      	mov	r0, r5
 801474a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801474e:	683b      	ldr	r3, [r7, #0]
 8014750:	4601      	mov	r1, r0
 8014752:	f8d3 9008 	ldr.w	r9, [r3, #8]
 8014756:	4638      	mov	r0, r7
 8014758:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 801475c:	47c8      	blx	r9
 801475e:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 8014762:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8014766:	4602      	mov	r2, r0
 8014768:	6030      	str	r0, [r6, #0]
 801476a:	d213      	bcs.n	8014794 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 801476c:	4643      	mov	r3, r8
 801476e:	4639      	mov	r1, r7
 8014770:	4620      	mov	r0, r4
 8014772:	f7ff fdef 	bl	8014354 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8014776:	6030      	str	r0, [r6, #0]
 8014778:	6833      	ldr	r3, [r6, #0]
 801477a:	b143      	cbz	r3, 801478e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 801477c:	7b5a      	ldrb	r2, [r3, #13]
 801477e:	7a9b      	ldrb	r3, [r3, #10]
 8014780:	0052      	lsls	r2, r2, #1
 8014782:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8014786:	4313      	orrs	r3, r2
 8014788:	bf0c      	ite	eq
 801478a:	2301      	moveq	r3, #1
 801478c:	2300      	movne	r3, #0
 801478e:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 8014792:	e7d9      	b.n	8014748 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 8014794:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8014798:	b29b      	uxth	r3, r3
 801479a:	2b7f      	cmp	r3, #127	; 0x7f
 801479c:	d804      	bhi.n	80147a8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 801479e:	4639      	mov	r1, r7
 80147a0:	4620      	mov	r0, r4
 80147a2:	f7ff fccb 	bl	801413c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 80147a6:	e7e6      	b.n	8014776 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 80147a8:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 80147ac:	2b00      	cmp	r3, #0
 80147ae:	d0e3      	beq.n	8014778 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 80147b0:	f640 1302 	movw	r3, #2306	; 0x902
 80147b4:	429d      	cmp	r5, r3
 80147b6:	d1df      	bne.n	8014778 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 80147b8:	4601      	mov	r1, r0
 80147ba:	4620      	mov	r0, r4
 80147bc:	f7ff fc90 	bl	80140e0 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 80147c0:	e7d9      	b.n	8014776 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

080147c2 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 80147c2:	b510      	push	{r4, lr}
 80147c4:	4604      	mov	r4, r0
 80147c6:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 80147ca:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80147cc:	b1f1      	cbz	r1, 801480c <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 80147ce:	2b0a      	cmp	r3, #10
 80147d0:	d02f      	beq.n	8014832 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 80147d2:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 80147d4:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 80147d8:	3901      	subs	r1, #1
 80147da:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 80147dc:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 80147e0:	1c51      	adds	r1, r2, #1
 80147e2:	b289      	uxth	r1, r1
 80147e4:	2901      	cmp	r1, #1
 80147e6:	bf84      	itt	hi
 80147e8:	f102 32ff 	addhi.w	r2, r2, #4294967295
 80147ec:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 80147ee:	f103 0201 	add.w	r2, r3, #1
 80147f2:	8722      	strh	r2, [r4, #56]	; 0x38
 80147f4:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 80147f6:	bf98      	it	ls
 80147f8:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 80147fa:	4413      	add	r3, r2
 80147fc:	b29b      	uxth	r3, r3
 80147fe:	2b09      	cmp	r3, #9
 8014800:	bf88      	it	hi
 8014802:	3b0a      	subhi	r3, #10
 8014804:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8014808:	8458      	strh	r0, [r3, #34]	; 0x22
 801480a:	e7dc      	b.n	80147c6 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 801480c:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801480e:	2b0a      	cmp	r3, #10
 8014810:	d00f      	beq.n	8014832 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 8014812:	4620      	mov	r0, r4
 8014814:	f7ff fc12 	bl	801403c <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 8014818:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801481a:	1c5a      	adds	r2, r3, #1
 801481c:	8722      	strh	r2, [r4, #56]	; 0x38
 801481e:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8014820:	4413      	add	r3, r2
 8014822:	b29b      	uxth	r3, r3
 8014824:	2b09      	cmp	r3, #9
 8014826:	bf88      	it	hi
 8014828:	3b0a      	subhi	r3, #10
 801482a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801482e:	8458      	strh	r0, [r3, #34]	; 0x22
 8014830:	e7ec      	b.n	801480c <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 8014832:	bd10      	pop	{r4, pc}

08014834 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 8014834:	b538      	push	{r3, r4, r5, lr}
 8014836:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8014838:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 801483c:	4604      	mov	r4, r0
 801483e:	8c55      	ldrh	r5, [r2, #34]	; 0x22
 8014840:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 8014842:	3a01      	subs	r2, #1
 8014844:	8702      	strh	r2, [r0, #56]	; 0x38
 8014846:	1c5a      	adds	r2, r3, #1
 8014848:	b292      	uxth	r2, r2
 801484a:	2a09      	cmp	r2, #9
 801484c:	bf86      	itte	hi
 801484e:	3b09      	subhi	r3, #9
 8014850:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 8014852:	86c2      	strhls	r2, [r0, #54]	; 0x36
 8014854:	f7ff ffb5 	bl	80147c2 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 8014858:	8c23      	ldrh	r3, [r4, #32]
 801485a:	2b01      	cmp	r3, #1
 801485c:	bf9c      	itt	ls
 801485e:	3301      	addls	r3, #1
 8014860:	8423      	strhls	r3, [r4, #32]
 8014862:	8be3      	ldrh	r3, [r4, #30]
 8014864:	b90b      	cbnz	r3, 801486a <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 8014866:	2302      	movs	r3, #2
 8014868:	83e3      	strh	r3, [r4, #30]
 801486a:	8be3      	ldrh	r3, [r4, #30]
 801486c:	3b01      	subs	r3, #1
 801486e:	b29b      	uxth	r3, r3
 8014870:	83e3      	strh	r3, [r4, #30]
 8014872:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014876:	4628      	mov	r0, r5
 8014878:	8365      	strh	r5, [r4, #26]
 801487a:	bd38      	pop	{r3, r4, r5, pc}

0801487c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 801487c:	428a      	cmp	r2, r1
 801487e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8014882:	8ec7      	ldrh	r7, [r0, #54]	; 0x36
 8014884:	d931      	bls.n	80148ea <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 8014886:	8f05      	ldrh	r5, [r0, #56]	; 0x38
 8014888:	f8b0 8040 	ldrh.w	r8, [r0, #64]	; 0x40
 801488c:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	; 0x3e
 8014890:	19ee      	adds	r6, r5, r7
 8014892:	1a54      	subs	r4, r2, r1
 8014894:	3e01      	subs	r6, #1
 8014896:	fa1f fe84 	uxth.w	lr, r4
 801489a:	b2b4      	uxth	r4, r6
 801489c:	eba4 090e 	sub.w	r9, r4, lr
 80148a0:	fa1f f989 	uxth.w	r9, r9
 80148a4:	2c09      	cmp	r4, #9
 80148a6:	4626      	mov	r6, r4
 80148a8:	bf88      	it	hi
 80148aa:	f1a4 060a 	subhi.w	r6, r4, #10
 80148ae:	f1bc 0f00 	cmp.w	ip, #0
 80148b2:	bf08      	it	eq
 80148b4:	f04f 0c02 	moveq.w	ip, #2
 80148b8:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 80148bc:	f10c 3cff 	add.w	ip, ip, #4294967295
 80148c0:	fa1f fc8c 	uxth.w	ip, ip
 80148c4:	3c01      	subs	r4, #1
 80148c6:	f8b6 a022 	ldrh.w	sl, [r6, #34]	; 0x22
 80148ca:	b2a4      	uxth	r4, r4
 80148cc:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 80148d0:	454c      	cmp	r4, r9
 80148d2:	f8a6 a03a 	strh.w	sl, [r6, #58]	; 0x3a
 80148d6:	d1e5      	bne.n	80148a4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 80148d8:	eba5 050e 	sub.w	r5, r5, lr
 80148dc:	eb0e 0408 	add.w	r4, lr, r8
 80148e0:	8705      	strh	r5, [r0, #56]	; 0x38
 80148e2:	f8a0 4040 	strh.w	r4, [r0, #64]	; 0x40
 80148e6:	f8a0 c03e 	strh.w	ip, [r0, #62]	; 0x3e
 80148ea:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 80148ec:	1a64      	subs	r4, r4, r1
 80148ee:	4439      	add	r1, r7
 80148f0:	b289      	uxth	r1, r1
 80148f2:	2909      	cmp	r1, #9
 80148f4:	bf88      	it	hi
 80148f6:	390a      	subhi	r1, #10
 80148f8:	8704      	strh	r4, [r0, #56]	; 0x38
 80148fa:	86c1      	strh	r1, [r0, #54]	; 0x36
 80148fc:	250a      	movs	r5, #10
 80148fe:	b18a      	cbz	r2, 8014924 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 8014900:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 8014902:	3a01      	subs	r2, #1
 8014904:	b292      	uxth	r2, r2
 8014906:	3101      	adds	r1, #1
 8014908:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 801490c:	8701      	strh	r1, [r0, #56]	; 0x38
 801490e:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 8014910:	b901      	cbnz	r1, 8014914 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 8014912:	86c5      	strh	r5, [r0, #54]	; 0x36
 8014914:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 8014916:	3901      	subs	r1, #1
 8014918:	b289      	uxth	r1, r1
 801491a:	86c1      	strh	r1, [r0, #54]	; 0x36
 801491c:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 8014920:	844c      	strh	r4, [r1, #34]	; 0x22
 8014922:	e7ec      	b.n	80148fe <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 8014924:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8014928:	f7ff bf4b 	b.w	80147c2 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

0801492c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 801492c:	b570      	push	{r4, r5, r6, lr}
 801492e:	2500      	movs	r5, #0
 8014930:	4295      	cmp	r5, r2
 8014932:	d011      	beq.n	8014958 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 8014934:	8bc4      	ldrh	r4, [r0, #30]
 8014936:	f831 6b02 	ldrh.w	r6, [r1], #2
 801493a:	4414      	add	r4, r2
 801493c:	3c01      	subs	r4, #1
 801493e:	1b64      	subs	r4, r4, r5
 8014940:	b2a4      	uxth	r4, r4
 8014942:	2c01      	cmp	r4, #1
 8014944:	bf88      	it	hi
 8014946:	3c02      	subhi	r4, #2
 8014948:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801494c:	8b64      	ldrh	r4, [r4, #26]
 801494e:	42b4      	cmp	r4, r6
 8014950:	d117      	bne.n	8014982 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 8014952:	3501      	adds	r5, #1
 8014954:	b2ad      	uxth	r5, r5
 8014956:	e7eb      	b.n	8014930 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 8014958:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801495c:	2400      	movs	r4, #0
 801495e:	4413      	add	r3, r2
 8014960:	b2a2      	uxth	r2, r4
 8014962:	429a      	cmp	r2, r3
 8014964:	da0f      	bge.n	8014986 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 8014966:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 8014968:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 801496c:	4432      	add	r2, r6
 801496e:	b292      	uxth	r2, r2
 8014970:	2a09      	cmp	r2, #9
 8014972:	bf88      	it	hi
 8014974:	3a0a      	subhi	r2, #10
 8014976:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801497a:	3401      	adds	r4, #1
 801497c:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 801497e:	42aa      	cmp	r2, r5
 8014980:	d0ee      	beq.n	8014960 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 8014982:	2000      	movs	r0, #0
 8014984:	bd70      	pop	{r4, r5, r6, pc}
 8014986:	2001      	movs	r0, #1
 8014988:	e7fc      	b.n	8014984 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

0801498a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 801498a:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801498e:	4605      	mov	r5, r0
 8014990:	4616      	mov	r6, r2
 8014992:	1c8c      	adds	r4, r1, #2
 8014994:	8809      	ldrh	r1, [r1, #0]
 8014996:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 801499a:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 801499e:	42b3      	cmp	r3, r6
 80149a0:	d124      	bne.n	80149ec <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 80149a2:	f3c1 2903 	ubfx	r9, r1, #8, #4
 80149a6:	f3c1 1803 	ubfx	r8, r1, #4, #4
 80149aa:	f001 070f 	and.w	r7, r1, #15
 80149ae:	f8cd 8000 	str.w	r8, [sp]
 80149b2:	464b      	mov	r3, r9
 80149b4:	4652      	mov	r2, sl
 80149b6:	4621      	mov	r1, r4
 80149b8:	4628      	mov	r0, r5
 80149ba:	f7ff ffb7 	bl	801492c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 80149be:	4683      	mov	fp, r0
 80149c0:	b168      	cbz	r0, 80149de <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 80149c2:	eb0a 0109 	add.w	r1, sl, r9
 80149c6:	4441      	add	r1, r8
 80149c8:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 80149cc:	463a      	mov	r2, r7
 80149ce:	4649      	mov	r1, r9
 80149d0:	4628      	mov	r0, r5
 80149d2:	f7ff ff53 	bl	801487c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 80149d6:	4658      	mov	r0, fp
 80149d8:	b003      	add	sp, #12
 80149da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80149de:	eb07 010a 	add.w	r1, r7, sl
 80149e2:	4449      	add	r1, r9
 80149e4:	4441      	add	r1, r8
 80149e6:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 80149ea:	e7d2      	b.n	8014992 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 80149ec:	f04f 0b00 	mov.w	fp, #0
 80149f0:	e7f1      	b.n	80149d6 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

080149f2 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 80149f2:	b570      	push	{r4, r5, r6, lr}
 80149f4:	8810      	ldrh	r0, [r2, #0]
 80149f6:	4298      	cmp	r0, r3
 80149f8:	d817      	bhi.n	8014a2a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 80149fa:	1e48      	subs	r0, r1, #1
 80149fc:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 8014a00:	4298      	cmp	r0, r3
 8014a02:	d312      	bcc.n	8014a2a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8014a04:	2400      	movs	r4, #0
 8014a06:	428c      	cmp	r4, r1
 8014a08:	d20f      	bcs.n	8014a2a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8014a0a:	1860      	adds	r0, r4, r1
 8014a0c:	1040      	asrs	r0, r0, #1
 8014a0e:	0085      	lsls	r5, r0, #2
 8014a10:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 8014a14:	42b3      	cmp	r3, r6
 8014a16:	d902      	bls.n	8014a1e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 8014a18:	3001      	adds	r0, #1
 8014a1a:	b284      	uxth	r4, r0
 8014a1c:	e7f3      	b.n	8014a06 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8014a1e:	d201      	bcs.n	8014a24 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 8014a20:	b281      	uxth	r1, r0
 8014a22:	e7f0      	b.n	8014a06 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8014a24:	442a      	add	r2, r5
 8014a26:	8850      	ldrh	r0, [r2, #2]
 8014a28:	bd70      	pop	{r4, r5, r6, pc}
 8014a2a:	2000      	movs	r0, #0
 8014a2c:	e7fc      	b.n	8014a28 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

08014a2e <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 8014a2e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014a32:	6c45      	ldr	r5, [r0, #68]	; 0x44
 8014a34:	886f      	ldrh	r7, [r5, #2]
 8014a36:	4604      	mov	r4, r0
 8014a38:	087f      	lsrs	r7, r7, #1
 8014a3a:	260b      	movs	r6, #11
 8014a3c:	3e01      	subs	r6, #1
 8014a3e:	d013      	beq.n	8014a68 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8014a40:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8014a42:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8014a46:	462a      	mov	r2, r5
 8014a48:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8014a4c:	4639      	mov	r1, r7
 8014a4e:	4643      	mov	r3, r8
 8014a50:	4620      	mov	r0, r4
 8014a52:	f7ff ffce 	bl	80149f2 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 8014a56:	b138      	cbz	r0, 8014a68 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8014a58:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 8014a5c:	4642      	mov	r2, r8
 8014a5e:	4620      	mov	r0, r4
 8014a60:	f7ff ff93 	bl	801498a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 8014a64:	2800      	cmp	r0, #0
 8014a66:	d1e9      	bne.n	8014a3c <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 8014a68:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08014a6c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 8014a6c:	b570      	push	{r4, r5, r6, lr}
 8014a6e:	694a      	ldr	r2, [r1, #20]
 8014a70:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8014a72:	684b      	ldr	r3, [r1, #4]
 8014a74:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 8014a76:	1b54      	subs	r4, r2, r5
 8014a78:	f000 8106 	beq.w	8014c88 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 8014a7c:	1b9b      	subs	r3, r3, r6
 8014a7e:	d003      	beq.n	8014a88 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8014a80:	4363      	muls	r3, r4
 8014a82:	2210      	movs	r2, #16
 8014a84:	fb93 f3f2 	sdiv	r3, r3, r2
 8014a88:	680c      	ldr	r4, [r1, #0]
 8014a8a:	698a      	ldr	r2, [r1, #24]
 8014a8c:	1b65      	subs	r5, r4, r5
 8014a8e:	f000 80fd 	beq.w	8014c8c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 8014a92:	1b92      	subs	r2, r2, r6
 8014a94:	d003      	beq.n	8014a9e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8014a96:	436a      	muls	r2, r5
 8014a98:	2410      	movs	r4, #16
 8014a9a:	fb92 f2f4 	sdiv	r2, r2, r4
 8014a9e:	1a9b      	subs	r3, r3, r2
 8014aa0:	ee07 3a90 	vmov	s15, r3
 8014aa4:	ed9f 4a88 	vldr	s8, [pc, #544]	; 8014cc8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 8014aa8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8014aac:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8014ab0:	ee67 7a84 	vmul.f32	s15, s15, s8
 8014ab4:	460a      	mov	r2, r1
 8014ab6:	ee87 3a27 	vdiv.f32	s6, s14, s15
 8014aba:	4603      	mov	r3, r0
 8014abc:	f100 040c 	add.w	r4, r0, #12
 8014ac0:	eeb1 6a43 	vneg.f32	s12, s6
 8014ac4:	edd2 7a02 	vldr	s15, [r2, #8]
 8014ac8:	eec7 6a27 	vdiv.f32	s13, s14, s15
 8014acc:	3214      	adds	r2, #20
 8014ace:	ece3 6a01 	vstmia	r3!, {s13}
 8014ad2:	ed52 7a02 	vldr	s15, [r2, #-8]
 8014ad6:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8014ada:	429c      	cmp	r4, r3
 8014adc:	edc3 7a02 	vstr	s15, [r3, #8]
 8014ae0:	ed52 7a01 	vldr	s15, [r2, #-4]
 8014ae4:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8014ae8:	edc3 7a05 	vstr	s15, [r3, #20]
 8014aec:	d1ea      	bne.n	8014ac4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 8014aee:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8014af0:	698b      	ldr	r3, [r1, #24]
 8014af2:	edd0 4a02 	vldr	s9, [r0, #8]
 8014af6:	edd0 3a00 	vldr	s7, [r0]
 8014afa:	edd0 6a01 	vldr	s13, [r0, #4]
 8014afe:	ed90 5a05 	vldr	s10, [r0, #20]
 8014b02:	ed90 2a03 	vldr	s4, [r0, #12]
 8014b06:	edd0 5a04 	vldr	s11, [r0, #16]
 8014b0a:	ed90 1a07 	vldr	s2, [r0, #28]
 8014b0e:	edd0 2a06 	vldr	s5, [r0, #24]
 8014b12:	1a9b      	subs	r3, r3, r2
 8014b14:	ee07 3a90 	vmov	s15, r3
 8014b18:	684b      	ldr	r3, [r1, #4]
 8014b1a:	1a9b      	subs	r3, r3, r2
 8014b1c:	ee07 3a10 	vmov	s14, r3
 8014b20:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8014b24:	ee76 6ae4 	vsub.f32	s13, s13, s9
 8014b28:	ee67 7a84 	vmul.f32	s15, s15, s8
 8014b2c:	ee73 4ae4 	vsub.f32	s9, s7, s9
 8014b30:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8014b34:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 8014b38:	ee27 7a04 	vmul.f32	s14, s14, s8
 8014b3c:	ee75 5ac5 	vsub.f32	s11, s11, s10
 8014b40:	eee6 7a87 	vfma.f32	s15, s13, s14
 8014b44:	ee32 5a45 	vsub.f32	s10, s4, s10
 8014b48:	ee67 7a83 	vmul.f32	s15, s15, s6
 8014b4c:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 8014b50:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8014b52:	694a      	ldr	r2, [r1, #20]
 8014b54:	1b13      	subs	r3, r2, r4
 8014b56:	ee07 3a10 	vmov	s14, r3
 8014b5a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8014b5e:	680b      	ldr	r3, [r1, #0]
 8014b60:	ee27 7a04 	vmul.f32	s14, s14, s8
 8014b64:	1b1b      	subs	r3, r3, r4
 8014b66:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 8014b6a:	ee07 3a10 	vmov	s14, r3
 8014b6e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8014b72:	ee27 7a04 	vmul.f32	s14, s14, s8
 8014b76:	eee6 4a87 	vfma.f32	s9, s13, s14
 8014b7a:	ee64 4a86 	vmul.f32	s9, s9, s12
 8014b7e:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 8014b82:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8014b84:	698b      	ldr	r3, [r1, #24]
 8014b86:	1a9b      	subs	r3, r3, r2
 8014b88:	ee06 3a90 	vmov	s13, r3
 8014b8c:	684b      	ldr	r3, [r1, #4]
 8014b8e:	1a9b      	subs	r3, r3, r2
 8014b90:	ee07 3a10 	vmov	s14, r3
 8014b94:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8014b98:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8014b9c:	ee66 6a84 	vmul.f32	s13, s13, s8
 8014ba0:	ee27 7a04 	vmul.f32	s14, s14, s8
 8014ba4:	ee65 6a66 	vnmul.f32	s13, s10, s13
 8014ba8:	eee5 6a87 	vfma.f32	s13, s11, s14
 8014bac:	ee66 6a83 	vmul.f32	s13, s13, s6
 8014bb0:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 8014bb4:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8014bb6:	694a      	ldr	r2, [r1, #20]
 8014bb8:	1b13      	subs	r3, r2, r4
 8014bba:	ee07 3a10 	vmov	s14, r3
 8014bbe:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8014bc2:	680b      	ldr	r3, [r1, #0]
 8014bc4:	ee27 7a04 	vmul.f32	s14, s14, s8
 8014bc8:	1b1b      	subs	r3, r3, r4
 8014bca:	ee25 5a47 	vnmul.f32	s10, s10, s14
 8014bce:	ee07 3a10 	vmov	s14, r3
 8014bd2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8014bd6:	ee27 7a04 	vmul.f32	s14, s14, s8
 8014bda:	eea5 5a87 	vfma.f32	s10, s11, s14
 8014bde:	edd0 5a08 	vldr	s11, [r0, #32]
 8014be2:	ee25 5a06 	vmul.f32	s10, s10, s12
 8014be6:	ee31 1a65 	vsub.f32	s2, s2, s11
 8014bea:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 8014bee:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8014bf0:	698b      	ldr	r3, [r1, #24]
 8014bf2:	1a9b      	subs	r3, r3, r2
 8014bf4:	ee07 3a10 	vmov	s14, r3
 8014bf8:	684b      	ldr	r3, [r1, #4]
 8014bfa:	1a9b      	subs	r3, r3, r2
 8014bfc:	ee01 3a90 	vmov	s3, r3
 8014c00:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8014c04:	ee72 5ae5 	vsub.f32	s11, s5, s11
 8014c08:	ee27 7a04 	vmul.f32	s14, s14, s8
 8014c0c:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 8014c10:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 8014c14:	ee61 1a84 	vmul.f32	s3, s3, s8
 8014c18:	eea1 7a21 	vfma.f32	s14, s2, s3
 8014c1c:	ee27 7a03 	vmul.f32	s14, s14, s6
 8014c20:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8014c24:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8014c26:	694a      	ldr	r2, [r1, #20]
 8014c28:	1b13      	subs	r3, r2, r4
 8014c2a:	ee03 3a10 	vmov	s6, r3
 8014c2e:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8014c32:	680b      	ldr	r3, [r1, #0]
 8014c34:	ee23 3a04 	vmul.f32	s6, s6, s8
 8014c38:	1b1b      	subs	r3, r3, r4
 8014c3a:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 8014c3e:	ee03 3a10 	vmov	s6, r3
 8014c42:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8014c46:	ee23 4a04 	vmul.f32	s8, s6, s8
 8014c4a:	eee1 5a04 	vfma.f32	s11, s2, s8
 8014c4e:	ee25 6a86 	vmul.f32	s12, s11, s12
 8014c52:	ee62 5a67 	vnmul.f32	s11, s4, s15
 8014c56:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 8014c5a:	eee3 5aa6 	vfma.f32	s11, s7, s13
 8014c5e:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8014c62:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014c66:	dd13      	ble.n	8014c90 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 8014c68:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8014c6c:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 8014c70:	63c3      	str	r3, [r0, #60]	; 0x3c
 8014c72:	eee3 7a87 	vfma.f32	s15, s7, s14
 8014c76:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8014c7a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014c7e:	dd15      	ble.n	8014cac <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 8014c80:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8014c84:	6403      	str	r3, [r0, #64]	; 0x40
 8014c86:	bd70      	pop	{r4, r5, r6, pc}
 8014c88:	4623      	mov	r3, r4
 8014c8a:	e6fd      	b.n	8014a88 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8014c8c:	462a      	mov	r2, r5
 8014c8e:	e706      	b.n	8014a9e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8014c90:	d502      	bpl.n	8014c98 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 8014c92:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8014c96:	e7e9      	b.n	8014c6c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 8014c98:	ee22 2a64 	vnmul.f32	s4, s4, s9
 8014c9c:	eea3 2a85 	vfma.f32	s4, s7, s10
 8014ca0:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 8014ca4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014ca8:	dade      	bge.n	8014c68 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 8014caa:	e7f2      	b.n	8014c92 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 8014cac:	d502      	bpl.n	8014cb4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 8014cae:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8014cb2:	e7e7      	b.n	8014c84 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 8014cb4:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 8014cb8:	eee3 4a86 	vfma.f32	s9, s7, s12
 8014cbc:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 8014cc0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014cc4:	dadc      	bge.n	8014c80 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 8014cc6:	e7f2      	b.n	8014cae <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 8014cc8:	3d800000 	.word	0x3d800000

08014ccc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 8014ccc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8014cd0:	2714      	movs	r7, #20
 8014cd2:	435f      	muls	r7, r3
 8014cd4:	eb02 0c07 	add.w	ip, r2, r7
 8014cd8:	f8dc 5004 	ldr.w	r5, [ip, #4]
 8014cdc:	f115 0e0f 	adds.w	lr, r5, #15
 8014ce0:	f100 80a2 	bmi.w	8014e28 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 8014ce4:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 8014ce8:	9c08      	ldr	r4, [sp, #32]
 8014cea:	f8c0 e014 	str.w	lr, [r0, #20]
 8014cee:	2614      	movs	r6, #20
 8014cf0:	4366      	muls	r6, r4
 8014cf2:	eb02 0806 	add.w	r8, r2, r6
 8014cf6:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8014cfa:	f115 040f 	adds.w	r4, r5, #15
 8014cfe:	f100 809f 	bmi.w	8014e40 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 8014d02:	1124      	asrs	r4, r4, #4
 8014d04:	eba4 040e 	sub.w	r4, r4, lr
 8014d08:	6184      	str	r4, [r0, #24]
 8014d0a:	2c00      	cmp	r4, #0
 8014d0c:	f000 808a 	beq.w	8014e24 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 8014d10:	f8dc 9004 	ldr.w	r9, [ip, #4]
 8014d14:	f8d8 4004 	ldr.w	r4, [r8, #4]
 8014d18:	5995      	ldr	r5, [r2, r6]
 8014d1a:	eba4 0809 	sub.w	r8, r4, r9
 8014d1e:	59d4      	ldr	r4, [r2, r7]
 8014d20:	eba5 0a04 	sub.w	sl, r5, r4
 8014d24:	ea4f 150a 	mov.w	r5, sl, lsl #4
 8014d28:	fb0e fe05 	mul.w	lr, lr, r5
 8014d2c:	fb0a ee19 	mls	lr, sl, r9, lr
 8014d30:	fb08 e404 	mla	r4, r8, r4, lr
 8014d34:	ea4f 1608 	mov.w	r6, r8, lsl #4
 8014d38:	3c01      	subs	r4, #1
 8014d3a:	19a4      	adds	r4, r4, r6
 8014d3c:	f100 808c 	bmi.w	8014e58 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 8014d40:	fb94 fef6 	sdiv	lr, r4, r6
 8014d44:	f8c0 e000 	str.w	lr, [r0]
 8014d48:	fb06 441e 	mls	r4, r6, lr, r4
 8014d4c:	6104      	str	r4, [r0, #16]
 8014d4e:	2d00      	cmp	r5, #0
 8014d50:	f2c0 8095 	blt.w	8014e7e <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 8014d54:	fb95 f4f6 	sdiv	r4, r5, r6
 8014d58:	6044      	str	r4, [r0, #4]
 8014d5a:	fb06 5514 	mls	r5, r6, r4, r5
 8014d5e:	6085      	str	r5, [r0, #8]
 8014d60:	60c6      	str	r6, [r0, #12]
 8014d62:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8014d66:	6945      	ldr	r5, [r0, #20]
 8014d68:	59d2      	ldr	r2, [r2, r7]
 8014d6a:	eddf 6a4d 	vldr	s13, [pc, #308]	; 8014ea0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 8014d6e:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 8014d72:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 8014d76:	ee07 4a10 	vmov	s14, r4
 8014d7a:	6804      	ldr	r4, [r0, #0]
 8014d7c:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 8014d80:	ee07 2a90 	vmov	s15, r2
 8014d84:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8014d88:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8014d8c:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8014d90:	ee27 7a26 	vmul.f32	s14, s14, s13
 8014d94:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8014d98:	edd3 6a00 	vldr	s13, [r3]
 8014d9c:	eee6 6a07 	vfma.f32	s13, s12, s14
 8014da0:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
 8014da4:	eee6 6a27 	vfma.f32	s13, s12, s15
 8014da8:	edc0 6a07 	vstr	s13, [r0, #28]
 8014dac:	edd0 6a01 	vldr	s13, [r0, #4]
 8014db0:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
 8014db4:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 8014db8:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8014dbc:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8014dc0:	ed80 6a08 	vstr	s12, [r0, #32]
 8014dc4:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 8014dc6:	6242      	str	r2, [r0, #36]	; 0x24
 8014dc8:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
 8014dcc:	ed93 6a03 	vldr	s12, [r3, #12]
 8014dd0:	eea5 6a87 	vfma.f32	s12, s11, s14
 8014dd4:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8014dd8:	eea5 6aa7 	vfma.f32	s12, s11, s15
 8014ddc:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
 8014de0:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8014de4:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
 8014de8:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8014dec:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
 8014df0:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8014df2:	6302      	str	r2, [r0, #48]	; 0x30
 8014df4:	ed93 6a06 	vldr	s12, [r3, #24]
 8014df8:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
 8014dfc:	eea5 6a87 	vfma.f32	s12, s11, s14
 8014e00:	eeb0 7a46 	vmov.f32	s14, s12
 8014e04:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
 8014e08:	eea6 7a27 	vfma.f32	s14, s12, s15
 8014e0c:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8014e10:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
 8014e14:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
 8014e18:	eee6 7a87 	vfma.f32	s15, s13, s14
 8014e1c:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
 8014e20:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 8014e22:	63c3      	str	r3, [r0, #60]	; 0x3c
 8014e24:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8014e28:	f1c5 0501 	rsb	r5, r5, #1
 8014e2c:	f015 050f 	ands.w	r5, r5, #15
 8014e30:	bf18      	it	ne
 8014e32:	2501      	movne	r5, #1
 8014e34:	2410      	movs	r4, #16
 8014e36:	fb9e fef4 	sdiv	lr, lr, r4
 8014e3a:	ebae 0e05 	sub.w	lr, lr, r5
 8014e3e:	e753      	b.n	8014ce8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 8014e40:	f1c5 0501 	rsb	r5, r5, #1
 8014e44:	f015 050f 	ands.w	r5, r5, #15
 8014e48:	bf18      	it	ne
 8014e4a:	2501      	movne	r5, #1
 8014e4c:	f04f 0910 	mov.w	r9, #16
 8014e50:	fb94 f4f9 	sdiv	r4, r4, r9
 8014e54:	1b64      	subs	r4, r4, r5
 8014e56:	e755      	b.n	8014d04 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 8014e58:	4264      	negs	r4, r4
 8014e5a:	fb94 fef6 	sdiv	lr, r4, r6
 8014e5e:	f1ce 0800 	rsb	r8, lr, #0
 8014e62:	fb06 441e 	mls	r4, r6, lr, r4
 8014e66:	f8c0 8000 	str.w	r8, [r0]
 8014e6a:	6104      	str	r4, [r0, #16]
 8014e6c:	2c00      	cmp	r4, #0
 8014e6e:	f43f af6e 	beq.w	8014d4e <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 8014e72:	ea6f 0e0e 	mvn.w	lr, lr
 8014e76:	f8c0 e000 	str.w	lr, [r0]
 8014e7a:	1b34      	subs	r4, r6, r4
 8014e7c:	e766      	b.n	8014d4c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 8014e7e:	426d      	negs	r5, r5
 8014e80:	fb95 f4f6 	sdiv	r4, r5, r6
 8014e84:	f1c4 0e00 	rsb	lr, r4, #0
 8014e88:	fb06 5514 	mls	r5, r6, r4, r5
 8014e8c:	f8c0 e004 	str.w	lr, [r0, #4]
 8014e90:	6085      	str	r5, [r0, #8]
 8014e92:	2d00      	cmp	r5, #0
 8014e94:	f43f af64 	beq.w	8014d60 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 8014e98:	43e4      	mvns	r4, r4
 8014e9a:	6044      	str	r4, [r0, #4]
 8014e9c:	1b75      	subs	r5, r6, r5
 8014e9e:	e75e      	b.n	8014d5e <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 8014ea0:	3d800000 	.word	0x3d800000

08014ea4 <_ZN8touchgfx7Unicode6strlenEPKt>:
 8014ea4:	4602      	mov	r2, r0
 8014ea6:	b148      	cbz	r0, 8014ebc <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 8014ea8:	2300      	movs	r3, #0
 8014eaa:	b298      	uxth	r0, r3
 8014eac:	3301      	adds	r3, #1
 8014eae:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 8014eb2:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 8014eb6:	2900      	cmp	r1, #0
 8014eb8:	d1f7      	bne.n	8014eaa <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 8014eba:	4770      	bx	lr
 8014ebc:	4770      	bx	lr

08014ebe <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 8014ebe:	b530      	push	{r4, r5, lr}
 8014ec0:	4604      	mov	r4, r0
 8014ec2:	b159      	cbz	r1, 8014edc <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 8014ec4:	b148      	cbz	r0, 8014eda <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8014ec6:	2300      	movs	r3, #0
 8014ec8:	b298      	uxth	r0, r3
 8014eca:	4282      	cmp	r2, r0
 8014ecc:	d905      	bls.n	8014eda <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8014ece:	5ccd      	ldrb	r5, [r1, r3]
 8014ed0:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 8014ed4:	3301      	adds	r3, #1
 8014ed6:	2d00      	cmp	r5, #0
 8014ed8:	d1f6      	bne.n	8014ec8 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 8014eda:	bd30      	pop	{r4, r5, pc}
 8014edc:	4608      	mov	r0, r1
 8014ede:	e7fc      	b.n	8014eda <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

08014ee0 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>:
 8014ee0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8014ee2:	b08b      	sub	sp, #44	; 0x2c
 8014ee4:	468c      	mov	ip, r1
 8014ee6:	2100      	movs	r1, #0
 8014ee8:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 8014eec:	ae01      	add	r6, sp, #4
 8014eee:	211f      	movs	r1, #31
 8014ef0:	fbb0 f7f3 	udiv	r7, r0, r3
 8014ef4:	fb03 0517 	mls	r5, r3, r7, r0
 8014ef8:	b2ec      	uxtb	r4, r5
 8014efa:	2d09      	cmp	r5, #9
 8014efc:	bfd4      	ite	le
 8014efe:	3430      	addle	r4, #48	; 0x30
 8014f00:	3457      	addgt	r4, #87	; 0x57
 8014f02:	b2e4      	uxtb	r4, r4
 8014f04:	558c      	strb	r4, [r1, r6]
 8014f06:	4638      	mov	r0, r7
 8014f08:	1e4c      	subs	r4, r1, #1
 8014f0a:	b92f      	cbnz	r7, 8014f18 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2+0x38>
 8014f0c:	4431      	add	r1, r6
 8014f0e:	4660      	mov	r0, ip
 8014f10:	f7ff ffd5 	bl	8014ebe <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8014f14:	b00b      	add	sp, #44	; 0x2c
 8014f16:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8014f18:	4621      	mov	r1, r4
 8014f1a:	e7e9      	b.n	8014ef0 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2+0x10>

08014f1c <_ZN8touchgfx7Unicode4itoaElPtti>:
 8014f1c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8014f1e:	4607      	mov	r7, r0
 8014f20:	b08b      	sub	sp, #44	; 0x2c
 8014f22:	4608      	mov	r0, r1
 8014f24:	b341      	cbz	r1, 8014f78 <_ZN8touchgfx7Unicode4itoaElPtti+0x5c>
 8014f26:	1e99      	subs	r1, r3, #2
 8014f28:	2922      	cmp	r1, #34	; 0x22
 8014f2a:	d825      	bhi.n	8014f78 <_ZN8touchgfx7Unicode4itoaElPtti+0x5c>
 8014f2c:	2100      	movs	r1, #0
 8014f2e:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 8014f32:	463c      	mov	r4, r7
 8014f34:	261f      	movs	r6, #31
 8014f36:	f10d 0c04 	add.w	ip, sp, #4
 8014f3a:	fb94 fef3 	sdiv	lr, r4, r3
 8014f3e:	fb03 441e 	mls	r4, r3, lr, r4
 8014f42:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 8014f46:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 8014f4a:	b2ec      	uxtb	r4, r5
 8014f4c:	2d09      	cmp	r5, #9
 8014f4e:	bfd4      	ite	le
 8014f50:	3430      	addle	r4, #48	; 0x30
 8014f52:	3457      	addgt	r4, #87	; 0x57
 8014f54:	b2e4      	uxtb	r4, r4
 8014f56:	f80c 4006 	strb.w	r4, [ip, r6]
 8014f5a:	4674      	mov	r4, lr
 8014f5c:	1e71      	subs	r1, r6, #1
 8014f5e:	b96c      	cbnz	r4, 8014f7c <_ZN8touchgfx7Unicode4itoaElPtti+0x60>
 8014f60:	2f00      	cmp	r7, #0
 8014f62:	da05      	bge.n	8014f70 <_ZN8touchgfx7Unicode4itoaElPtti+0x54>
 8014f64:	ab0a      	add	r3, sp, #40	; 0x28
 8014f66:	4419      	add	r1, r3
 8014f68:	232d      	movs	r3, #45	; 0x2d
 8014f6a:	f801 3c24 	strb.w	r3, [r1, #-36]
 8014f6e:	1eb1      	subs	r1, r6, #2
 8014f70:	3101      	adds	r1, #1
 8014f72:	4461      	add	r1, ip
 8014f74:	f7ff ffa3 	bl	8014ebe <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8014f78:	b00b      	add	sp, #44	; 0x2c
 8014f7a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8014f7c:	460e      	mov	r6, r1
 8014f7e:	e7dc      	b.n	8014f3a <_ZN8touchgfx7Unicode4itoaElPtti+0x1e>

08014f80 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 8014f80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014f84:	4691      	mov	r9, r2
 8014f86:	b085      	sub	sp, #20
 8014f88:	6802      	ldr	r2, [r0, #0]
 8014f8a:	9201      	str	r2, [sp, #4]
 8014f8c:	4688      	mov	r8, r1
 8014f8e:	4683      	mov	fp, r0
 8014f90:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 8014f94:	9103      	str	r1, [sp, #12]
 8014f96:	4610      	mov	r0, r2
 8014f98:	461c      	mov	r4, r3
 8014f9a:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 8014f9e:	9302      	str	r3, [sp, #8]
 8014fa0:	f7ff ff80 	bl	8014ea4 <_ZN8touchgfx7Unicode6strlenEPKt>
 8014fa4:	f1b8 0f00 	cmp.w	r8, #0
 8014fa8:	bf0c      	ite	eq
 8014faa:	4684      	moveq	ip, r0
 8014fac:	f100 0c01 	addne.w	ip, r0, #1
 8014fb0:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
 8014fb4:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 8014fb8:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8014fba:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8014fbc:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
 8014fc0:	9903      	ldr	r1, [sp, #12]
 8014fc2:	fa1f fc8c 	uxth.w	ip, ip
 8014fc6:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 8014fca:	d041      	beq.n	8015050 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8014fcc:	d834      	bhi.n	8015038 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 8014fce:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
 8014fd2:	d059      	beq.n	8015088 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 8014fd4:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 8014fd8:	d03a      	beq.n	8015050 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8014fda:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
 8014fde:	d034      	beq.n	801504a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8014fe0:	2400      	movs	r4, #0
 8014fe2:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 8014fe6:	3a01      	subs	r2, #1
 8014fe8:	b169      	cbz	r1, 8015006 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8014fea:	9911      	ldr	r1, [sp, #68]	; 0x44
 8014fec:	458c      	cmp	ip, r1
 8014fee:	da09      	bge.n	8015004 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8014ff0:	eba1 010c 	sub.w	r1, r1, ip
 8014ff4:	b289      	uxth	r1, r1
 8014ff6:	b933      	cbnz	r3, 8015006 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8014ff8:	2e00      	cmp	r6, #0
 8014ffa:	d051      	beq.n	80150a0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8014ffc:	2800      	cmp	r0, #0
 8014ffe:	d04f      	beq.n	80150a0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8015000:	440c      	add	r4, r1
 8015002:	b2a4      	uxth	r4, r4
 8015004:	2100      	movs	r1, #0
 8015006:	682b      	ldr	r3, [r5, #0]
 8015008:	4293      	cmp	r3, r2
 801500a:	da07      	bge.n	801501c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 801500c:	f1b8 0f00 	cmp.w	r8, #0
 8015010:	d004      	beq.n	801501c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8015012:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 8015016:	682b      	ldr	r3, [r5, #0]
 8015018:	3301      	adds	r3, #1
 801501a:	602b      	str	r3, [r5, #0]
 801501c:	2730      	movs	r7, #48	; 0x30
 801501e:	2c00      	cmp	r4, #0
 8015020:	d04e      	beq.n	80150c0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8015022:	682e      	ldr	r6, [r5, #0]
 8015024:	3c01      	subs	r4, #1
 8015026:	42b2      	cmp	r2, r6
 8015028:	b2a4      	uxth	r4, r4
 801502a:	dd49      	ble.n	80150c0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 801502c:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8015030:	682b      	ldr	r3, [r5, #0]
 8015032:	3301      	adds	r3, #1
 8015034:	602b      	str	r3, [r5, #0]
 8015036:	e7f2      	b.n	801501e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 8015038:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
 801503c:	d01d      	beq.n	801507a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 801503e:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
 8015042:	d002      	beq.n	801504a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8015044:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
 8015048:	e7c9      	b.n	8014fde <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 801504a:	4684      	mov	ip, r0
 801504c:	f04f 0800 	mov.w	r8, #0
 8015050:	2c00      	cmp	r4, #0
 8015052:	d0c6      	beq.n	8014fe2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8015054:	b947      	cbnz	r7, 8015068 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8015056:	2801      	cmp	r0, #1
 8015058:	d106      	bne.n	8015068 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 801505a:	8814      	ldrh	r4, [r2, #0]
 801505c:	2c30      	cmp	r4, #48	; 0x30
 801505e:	bf02      	ittt	eq
 8015060:	3202      	addeq	r2, #2
 8015062:	f8cb 2000 	streq.w	r2, [fp]
 8015066:	4638      	moveq	r0, r7
 8015068:	45bc      	cmp	ip, r7
 801506a:	da14      	bge.n	8015096 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 801506c:	b2bf      	uxth	r7, r7
 801506e:	eba7 040c 	sub.w	r4, r7, ip
 8015072:	b2a4      	uxth	r4, r4
 8015074:	46bc      	mov	ip, r7
 8015076:	2600      	movs	r6, #0
 8015078:	e7b3      	b.n	8014fe2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801507a:	4684      	mov	ip, r0
 801507c:	b16c      	cbz	r4, 801509a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 801507e:	42b8      	cmp	r0, r7
 8015080:	dd00      	ble.n	8015084 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 8015082:	b2b8      	uxth	r0, r7
 8015084:	2400      	movs	r4, #0
 8015086:	e003      	b.n	8015090 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 8015088:	f04f 0c01 	mov.w	ip, #1
 801508c:	2400      	movs	r4, #0
 801508e:	4660      	mov	r0, ip
 8015090:	4626      	mov	r6, r4
 8015092:	46a0      	mov	r8, r4
 8015094:	e7a5      	b.n	8014fe2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8015096:	2400      	movs	r4, #0
 8015098:	e7ed      	b.n	8015076 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 801509a:	4626      	mov	r6, r4
 801509c:	46a0      	mov	r8, r4
 801509e:	e7a0      	b.n	8014fe2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 80150a0:	2900      	cmp	r1, #0
 80150a2:	d0b0      	beq.n	8015006 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 80150a4:	2720      	movs	r7, #32
 80150a6:	682e      	ldr	r6, [r5, #0]
 80150a8:	2900      	cmp	r1, #0
 80150aa:	d0ac      	beq.n	8015006 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 80150ac:	3901      	subs	r1, #1
 80150ae:	4296      	cmp	r6, r2
 80150b0:	b289      	uxth	r1, r1
 80150b2:	daa7      	bge.n	8015004 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 80150b4:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 80150b8:	682b      	ldr	r3, [r5, #0]
 80150ba:	3301      	adds	r3, #1
 80150bc:	602b      	str	r3, [r5, #0]
 80150be:	e7f2      	b.n	80150a6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 80150c0:	b188      	cbz	r0, 80150e6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 80150c2:	682b      	ldr	r3, [r5, #0]
 80150c4:	3801      	subs	r0, #1
 80150c6:	429a      	cmp	r2, r3
 80150c8:	b280      	uxth	r0, r0
 80150ca:	dd0c      	ble.n	80150e6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 80150cc:	f8db 3000 	ldr.w	r3, [fp]
 80150d0:	1c9c      	adds	r4, r3, #2
 80150d2:	f8cb 4000 	str.w	r4, [fp]
 80150d6:	881c      	ldrh	r4, [r3, #0]
 80150d8:	682b      	ldr	r3, [r5, #0]
 80150da:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 80150de:	682b      	ldr	r3, [r5, #0]
 80150e0:	3301      	adds	r3, #1
 80150e2:	602b      	str	r3, [r5, #0]
 80150e4:	e7ec      	b.n	80150c0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 80150e6:	2620      	movs	r6, #32
 80150e8:	b151      	cbz	r1, 8015100 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 80150ea:	6828      	ldr	r0, [r5, #0]
 80150ec:	3901      	subs	r1, #1
 80150ee:	4282      	cmp	r2, r0
 80150f0:	b289      	uxth	r1, r1
 80150f2:	dd05      	ble.n	8015100 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 80150f4:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 80150f8:	682b      	ldr	r3, [r5, #0]
 80150fa:	3301      	adds	r3, #1
 80150fc:	602b      	str	r3, [r5, #0]
 80150fe:	e7f3      	b.n	80150e8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 8015100:	b005      	add	sp, #20
 8015102:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015106 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 8015106:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801510a:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 801510e:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
 8015112:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
 8015116:	2400      	movs	r4, #0
 8015118:	8014      	strh	r4, [r2, #0]
 801511a:	701c      	strb	r4, [r3, #0]
 801511c:	f888 4000 	strb.w	r4, [r8]
 8015120:	f88c 4000 	strb.w	r4, [ip]
 8015124:	f88e 4000 	strb.w	r4, [lr]
 8015128:	703c      	strb	r4, [r7, #0]
 801512a:	6804      	ldr	r4, [r0, #0]
 801512c:	b1a4      	cbz	r4, 8015158 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 801512e:	8824      	ldrh	r4, [r4, #0]
 8015130:	f04f 0901 	mov.w	r9, #1
 8015134:	b314      	cbz	r4, 801517c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8015136:	2c2b      	cmp	r4, #43	; 0x2b
 8015138:	d001      	beq.n	801513e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 801513a:	2c20      	cmp	r4, #32
 801513c:	d110      	bne.n	8015160 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 801513e:	8014      	strh	r4, [r2, #0]
 8015140:	6804      	ldr	r4, [r0, #0]
 8015142:	b10c      	cbz	r4, 8015148 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 8015144:	3402      	adds	r4, #2
 8015146:	6004      	str	r4, [r0, #0]
 8015148:	680c      	ldr	r4, [r1, #0]
 801514a:	b10c      	cbz	r4, 8015150 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 801514c:	3401      	adds	r4, #1
 801514e:	600c      	str	r4, [r1, #0]
 8015150:	6804      	ldr	r4, [r0, #0]
 8015152:	b17c      	cbz	r4, 8015174 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 8015154:	8824      	ldrh	r4, [r4, #0]
 8015156:	e7ed      	b.n	8015134 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8015158:	680c      	ldr	r4, [r1, #0]
 801515a:	b17c      	cbz	r4, 801517c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 801515c:	7824      	ldrb	r4, [r4, #0]
 801515e:	e7e7      	b.n	8015130 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 8015160:	2c2d      	cmp	r4, #45	; 0x2d
 8015162:	d102      	bne.n	801516a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 8015164:	f883 9000 	strb.w	r9, [r3]
 8015168:	e7ea      	b.n	8015140 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 801516a:	2c23      	cmp	r4, #35	; 0x23
 801516c:	d107      	bne.n	801517e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 801516e:	f888 9000 	strb.w	r9, [r8]
 8015172:	e7e5      	b.n	8015140 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8015174:	680c      	ldr	r4, [r1, #0]
 8015176:	b10c      	cbz	r4, 801517c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8015178:	7824      	ldrb	r4, [r4, #0]
 801517a:	e7db      	b.n	8015134 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 801517c:	2400      	movs	r4, #0
 801517e:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8015182:	2b09      	cmp	r3, #9
 8015184:	d901      	bls.n	801518a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 8015186:	2c2a      	cmp	r4, #42	; 0x2a
 8015188:	d122      	bne.n	80151d0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 801518a:	2301      	movs	r3, #1
 801518c:	2c30      	cmp	r4, #48	; 0x30
 801518e:	f88e 3000 	strb.w	r3, [lr]
 8015192:	d10d      	bne.n	80151b0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8015194:	f88c 3000 	strb.w	r3, [ip]
 8015198:	6803      	ldr	r3, [r0, #0]
 801519a:	b10b      	cbz	r3, 80151a0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 801519c:	3302      	adds	r3, #2
 801519e:	6003      	str	r3, [r0, #0]
 80151a0:	680b      	ldr	r3, [r1, #0]
 80151a2:	b10b      	cbz	r3, 80151a8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 80151a4:	3301      	adds	r3, #1
 80151a6:	600b      	str	r3, [r1, #0]
 80151a8:	6803      	ldr	r3, [r0, #0]
 80151aa:	2b00      	cmp	r3, #0
 80151ac:	d02f      	beq.n	801520e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 80151ae:	881c      	ldrh	r4, [r3, #0]
 80151b0:	2c2a      	cmp	r4, #42	; 0x2a
 80151b2:	d135      	bne.n	8015220 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 80151b4:	f04f 33ff 	mov.w	r3, #4294967295
 80151b8:	6033      	str	r3, [r6, #0]
 80151ba:	6803      	ldr	r3, [r0, #0]
 80151bc:	b10b      	cbz	r3, 80151c2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 80151be:	3302      	adds	r3, #2
 80151c0:	6003      	str	r3, [r0, #0]
 80151c2:	680b      	ldr	r3, [r1, #0]
 80151c4:	b10b      	cbz	r3, 80151ca <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 80151c6:	3301      	adds	r3, #1
 80151c8:	600b      	str	r3, [r1, #0]
 80151ca:	6803      	ldr	r3, [r0, #0]
 80151cc:	b31b      	cbz	r3, 8015216 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 80151ce:	881c      	ldrh	r4, [r3, #0]
 80151d0:	2c2e      	cmp	r4, #46	; 0x2e
 80151d2:	d11a      	bne.n	801520a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 80151d4:	2301      	movs	r3, #1
 80151d6:	703b      	strb	r3, [r7, #0]
 80151d8:	6803      	ldr	r3, [r0, #0]
 80151da:	b10b      	cbz	r3, 80151e0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 80151dc:	3302      	adds	r3, #2
 80151de:	6003      	str	r3, [r0, #0]
 80151e0:	680b      	ldr	r3, [r1, #0]
 80151e2:	b10b      	cbz	r3, 80151e8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 80151e4:	3301      	adds	r3, #1
 80151e6:	600b      	str	r3, [r1, #0]
 80151e8:	6803      	ldr	r3, [r0, #0]
 80151ea:	2b00      	cmp	r3, #0
 80151ec:	d036      	beq.n	801525c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 80151ee:	881b      	ldrh	r3, [r3, #0]
 80151f0:	2b2a      	cmp	r3, #42	; 0x2a
 80151f2:	d137      	bne.n	8015264 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 80151f4:	f04f 33ff 	mov.w	r3, #4294967295
 80151f8:	602b      	str	r3, [r5, #0]
 80151fa:	6803      	ldr	r3, [r0, #0]
 80151fc:	b10b      	cbz	r3, 8015202 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 80151fe:	3302      	adds	r3, #2
 8015200:	6003      	str	r3, [r0, #0]
 8015202:	680b      	ldr	r3, [r1, #0]
 8015204:	b10b      	cbz	r3, 801520a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8015206:	3301      	adds	r3, #1
 8015208:	600b      	str	r3, [r1, #0]
 801520a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801520e:	680c      	ldr	r4, [r1, #0]
 8015210:	b134      	cbz	r4, 8015220 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8015212:	7824      	ldrb	r4, [r4, #0]
 8015214:	e7cc      	b.n	80151b0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8015216:	680b      	ldr	r3, [r1, #0]
 8015218:	2b00      	cmp	r3, #0
 801521a:	d0f6      	beq.n	801520a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 801521c:	781c      	ldrb	r4, [r3, #0]
 801521e:	e7d7      	b.n	80151d0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8015220:	2300      	movs	r3, #0
 8015222:	6033      	str	r3, [r6, #0]
 8015224:	220a      	movs	r2, #10
 8015226:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 801522a:	fa1f f38c 	uxth.w	r3, ip
 801522e:	2b09      	cmp	r3, #9
 8015230:	d8ce      	bhi.n	80151d0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8015232:	6833      	ldr	r3, [r6, #0]
 8015234:	fb02 c303 	mla	r3, r2, r3, ip
 8015238:	6033      	str	r3, [r6, #0]
 801523a:	6803      	ldr	r3, [r0, #0]
 801523c:	b10b      	cbz	r3, 8015242 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 801523e:	3302      	adds	r3, #2
 8015240:	6003      	str	r3, [r0, #0]
 8015242:	680b      	ldr	r3, [r1, #0]
 8015244:	b10b      	cbz	r3, 801524a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 8015246:	3301      	adds	r3, #1
 8015248:	600b      	str	r3, [r1, #0]
 801524a:	6803      	ldr	r3, [r0, #0]
 801524c:	b10b      	cbz	r3, 8015252 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 801524e:	881c      	ldrh	r4, [r3, #0]
 8015250:	e7e9      	b.n	8015226 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8015252:	680c      	ldr	r4, [r1, #0]
 8015254:	2c00      	cmp	r4, #0
 8015256:	d0e6      	beq.n	8015226 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8015258:	7824      	ldrb	r4, [r4, #0]
 801525a:	e7e4      	b.n	8015226 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 801525c:	680b      	ldr	r3, [r1, #0]
 801525e:	b10b      	cbz	r3, 8015264 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8015260:	781b      	ldrb	r3, [r3, #0]
 8015262:	e7c5      	b.n	80151f0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 8015264:	2200      	movs	r2, #0
 8015266:	602a      	str	r2, [r5, #0]
 8015268:	240a      	movs	r4, #10
 801526a:	3b30      	subs	r3, #48	; 0x30
 801526c:	b29e      	uxth	r6, r3
 801526e:	2e09      	cmp	r6, #9
 8015270:	682a      	ldr	r2, [r5, #0]
 8015272:	d813      	bhi.n	801529c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 8015274:	fb04 3302 	mla	r3, r4, r2, r3
 8015278:	602b      	str	r3, [r5, #0]
 801527a:	6803      	ldr	r3, [r0, #0]
 801527c:	b10b      	cbz	r3, 8015282 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 801527e:	3302      	adds	r3, #2
 8015280:	6003      	str	r3, [r0, #0]
 8015282:	680b      	ldr	r3, [r1, #0]
 8015284:	b10b      	cbz	r3, 801528a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 8015286:	3301      	adds	r3, #1
 8015288:	600b      	str	r3, [r1, #0]
 801528a:	6803      	ldr	r3, [r0, #0]
 801528c:	b10b      	cbz	r3, 8015292 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 801528e:	881b      	ldrh	r3, [r3, #0]
 8015290:	e7eb      	b.n	801526a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8015292:	680b      	ldr	r3, [r1, #0]
 8015294:	2b00      	cmp	r3, #0
 8015296:	d0e8      	beq.n	801526a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8015298:	781b      	ldrb	r3, [r3, #0]
 801529a:	e7e6      	b.n	801526a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 801529c:	2a06      	cmp	r2, #6
 801529e:	bfa8      	it	ge
 80152a0:	2206      	movge	r2, #6
 80152a2:	602a      	str	r2, [r5, #0]
 80152a4:	e7b1      	b.n	801520a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

080152a6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 80152a6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80152aa:	b0a3      	sub	sp, #140	; 0x8c
 80152ac:	2600      	movs	r6, #0
 80152ae:	f10d 0944 	add.w	r9, sp, #68	; 0x44
 80152b2:	4607      	mov	r7, r0
 80152b4:	4688      	mov	r8, r1
 80152b6:	e9cd 3208 	strd	r3, r2, [sp, #32]
 80152ba:	4631      	mov	r1, r6
 80152bc:	2242      	movs	r2, #66	; 0x42
 80152be:	4648      	mov	r0, r9
 80152c0:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 80152c2:	960d      	str	r6, [sp, #52]	; 0x34
 80152c4:	f00c fe74 	bl	8021fb0 <memset>
 80152c8:	b15f      	cbz	r7, 80152e2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 80152ca:	f108 3aff 	add.w	sl, r8, #4294967295
 80152ce:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80152d0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80152d2:	b152      	cbz	r2, 80152ea <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 80152d4:	8812      	ldrh	r2, [r2, #0]
 80152d6:	b10a      	cbz	r2, 80152dc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 80152d8:	459a      	cmp	sl, r3
 80152da:	dc2e      	bgt.n	801533a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 80152dc:	2200      	movs	r2, #0
 80152de:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 80152e2:	4638      	mov	r0, r7
 80152e4:	b023      	add	sp, #140	; 0x8c
 80152e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80152ea:	9a08      	ldr	r2, [sp, #32]
 80152ec:	2a00      	cmp	r2, #0
 80152ee:	d0f5      	beq.n	80152dc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 80152f0:	7812      	ldrb	r2, [r2, #0]
 80152f2:	e7f0      	b.n	80152d6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 80152f4:	2d00      	cmp	r5, #0
 80152f6:	d0ea      	beq.n	80152ce <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80152f8:	782a      	ldrb	r2, [r5, #0]
 80152fa:	b142      	cbz	r2, 801530e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 80152fc:	2a25      	cmp	r2, #37	; 0x25
 80152fe:	d001      	beq.n	8015304 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 8015300:	459a      	cmp	sl, r3
 8015302:	dc08      	bgt.n	8015316 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 8015304:	f1bb 0f00 	cmp.w	fp, #0
 8015308:	d121      	bne.n	801534e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 801530a:	2d00      	cmp	r5, #0
 801530c:	d0df      	beq.n	80152ce <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801530e:	782a      	ldrb	r2, [r5, #0]
 8015310:	f04f 0b00 	mov.w	fp, #0
 8015314:	e01d      	b.n	8015352 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 8015316:	f1bb 0f00 	cmp.w	fp, #0
 801531a:	d078      	beq.n	801540e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 801531c:	f8bb 2000 	ldrh.w	r2, [fp]
 8015320:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8015324:	f1bb 0f00 	cmp.w	fp, #0
 8015328:	d002      	beq.n	8015330 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 801532a:	f10b 0202 	add.w	r2, fp, #2
 801532e:	9209      	str	r2, [sp, #36]	; 0x24
 8015330:	b10d      	cbz	r5, 8015336 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 8015332:	3501      	adds	r5, #1
 8015334:	9508      	str	r5, [sp, #32]
 8015336:	3301      	adds	r3, #1
 8015338:	930d      	str	r3, [sp, #52]	; 0x34
 801533a:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 801533e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8015340:	f1bb 0f00 	cmp.w	fp, #0
 8015344:	d0d6      	beq.n	80152f4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 8015346:	f8bb 2000 	ldrh.w	r2, [fp]
 801534a:	2a00      	cmp	r2, #0
 801534c:	d1d6      	bne.n	80152fc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 801534e:	f8bb 2000 	ldrh.w	r2, [fp]
 8015352:	2a00      	cmp	r2, #0
 8015354:	d0bb      	beq.n	80152ce <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8015356:	459a      	cmp	sl, r3
 8015358:	ddb9      	ble.n	80152ce <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801535a:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
 801535e:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
 8015362:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 8015366:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
 801536a:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
 801536e:	960e      	str	r6, [sp, #56]	; 0x38
 8015370:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
 8015374:	960f      	str	r6, [sp, #60]	; 0x3c
 8015376:	f1bb 0f00 	cmp.w	fp, #0
 801537a:	d002      	beq.n	8015382 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 801537c:	f10b 0302 	add.w	r3, fp, #2
 8015380:	9309      	str	r3, [sp, #36]	; 0x24
 8015382:	b10d      	cbz	r5, 8015388 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 8015384:	1c6b      	adds	r3, r5, #1
 8015386:	9308      	str	r3, [sp, #32]
 8015388:	ab0f      	add	r3, sp, #60	; 0x3c
 801538a:	9305      	str	r3, [sp, #20]
 801538c:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 8015390:	9304      	str	r3, [sp, #16]
 8015392:	ab0e      	add	r3, sp, #56	; 0x38
 8015394:	9303      	str	r3, [sp, #12]
 8015396:	ab0c      	add	r3, sp, #48	; 0x30
 8015398:	9302      	str	r3, [sp, #8]
 801539a:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 801539e:	9301      	str	r3, [sp, #4]
 80153a0:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 80153a4:	9300      	str	r3, [sp, #0]
 80153a6:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 80153aa:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 80153ae:	a908      	add	r1, sp, #32
 80153b0:	a809      	add	r0, sp, #36	; 0x24
 80153b2:	f7ff fea8 	bl	8015106 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 80153b6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80153b8:	2b00      	cmp	r3, #0
 80153ba:	bfbe      	ittt	lt
 80153bc:	6823      	ldrlt	r3, [r4, #0]
 80153be:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 80153c2:	930e      	strlt	r3, [sp, #56]	; 0x38
 80153c4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80153c6:	bfb8      	it	lt
 80153c8:	3404      	addlt	r4, #4
 80153ca:	2b00      	cmp	r3, #0
 80153cc:	bfb8      	it	lt
 80153ce:	6823      	ldrlt	r3, [r4, #0]
 80153d0:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 80153d4:	bfbe      	ittt	lt
 80153d6:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 80153da:	930f      	strlt	r3, [sp, #60]	; 0x3c
 80153dc:	3404      	addlt	r4, #4
 80153de:	b1d9      	cbz	r1, 8015418 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 80153e0:	880b      	ldrh	r3, [r1, #0]
 80153e2:	2b69      	cmp	r3, #105	; 0x69
 80153e4:	d01f      	beq.n	8015426 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 80153e6:	d82f      	bhi.n	8015448 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 80153e8:	2b58      	cmp	r3, #88	; 0x58
 80153ea:	d01c      	beq.n	8015426 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 80153ec:	d818      	bhi.n	8015420 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 80153ee:	2b25      	cmp	r3, #37	; 0x25
 80153f0:	d034      	beq.n	801545c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 80153f2:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 80153f6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80153f8:	f1bb 0f00 	cmp.w	fp, #0
 80153fc:	f000 80b8 	beq.w	8015570 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 8015400:	f8bb 5000 	ldrh.w	r5, [fp]
 8015404:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 8015408:	3301      	adds	r3, #1
 801540a:	930d      	str	r3, [sp, #52]	; 0x34
 801540c:	e029      	b.n	8015462 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 801540e:	b10d      	cbz	r5, 8015414 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 8015410:	782a      	ldrb	r2, [r5, #0]
 8015412:	e785      	b.n	8015320 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8015414:	462a      	mov	r2, r5
 8015416:	e783      	b.n	8015320 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8015418:	2a00      	cmp	r2, #0
 801541a:	d0ea      	beq.n	80153f2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 801541c:	7813      	ldrb	r3, [r2, #0]
 801541e:	e7e0      	b.n	80153e2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 8015420:	3b63      	subs	r3, #99	; 0x63
 8015422:	2b01      	cmp	r3, #1
 8015424:	d8e5      	bhi.n	80153f2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8015426:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 801542a:	b329      	cbz	r1, 8015478 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 801542c:	880b      	ldrh	r3, [r1, #0]
 801542e:	2b69      	cmp	r3, #105	; 0x69
 8015430:	d063      	beq.n	80154fa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8015432:	d825      	bhi.n	8015480 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 8015434:	2b63      	cmp	r3, #99	; 0x63
 8015436:	d038      	beq.n	80154aa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 8015438:	2b64      	cmp	r3, #100	; 0x64
 801543a:	d05e      	beq.n	80154fa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 801543c:	2b58      	cmp	r3, #88	; 0x58
 801543e:	d07b      	beq.n	8015538 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 8015440:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 8015444:	4625      	mov	r5, r4
 8015446:	e036      	b.n	80154b6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8015448:	2b73      	cmp	r3, #115	; 0x73
 801544a:	d0ec      	beq.n	8015426 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801544c:	d802      	bhi.n	8015454 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 801544e:	2b6f      	cmp	r3, #111	; 0x6f
 8015450:	d1cf      	bne.n	80153f2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8015452:	e7e8      	b.n	8015426 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8015454:	2b75      	cmp	r3, #117	; 0x75
 8015456:	d0e6      	beq.n	8015426 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8015458:	2b78      	cmp	r3, #120	; 0x78
 801545a:	e7f9      	b.n	8015450 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 801545c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801545e:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 8015462:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015464:	b10b      	cbz	r3, 801546a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 8015466:	3302      	adds	r3, #2
 8015468:	9309      	str	r3, [sp, #36]	; 0x24
 801546a:	9b08      	ldr	r3, [sp, #32]
 801546c:	2b00      	cmp	r3, #0
 801546e:	f43f af2e 	beq.w	80152ce <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8015472:	3301      	adds	r3, #1
 8015474:	9308      	str	r3, [sp, #32]
 8015476:	e72a      	b.n	80152ce <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8015478:	2a00      	cmp	r2, #0
 801547a:	d0e1      	beq.n	8015440 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 801547c:	7813      	ldrb	r3, [r2, #0]
 801547e:	e7d6      	b.n	801542e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 8015480:	2b73      	cmp	r3, #115	; 0x73
 8015482:	d036      	beq.n	80154f2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 8015484:	d807      	bhi.n	8015496 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 8015486:	2b6f      	cmp	r3, #111	; 0x6f
 8015488:	d1da      	bne.n	8015440 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 801548a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801548c:	1d25      	adds	r5, r4, #4
 801548e:	eba8 0202 	sub.w	r2, r8, r2
 8015492:	2308      	movs	r3, #8
 8015494:	e04a      	b.n	801552c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 8015496:	2b75      	cmp	r3, #117	; 0x75
 8015498:	d043      	beq.n	8015522 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 801549a:	2b78      	cmp	r3, #120	; 0x78
 801549c:	d1d0      	bne.n	8015440 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 801549e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80154a0:	1d25      	adds	r5, r4, #4
 80154a2:	eba8 0202 	sub.w	r2, r8, r2
 80154a6:	2310      	movs	r3, #16
 80154a8:	e040      	b.n	801552c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 80154aa:	6823      	ldr	r3, [r4, #0]
 80154ac:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 80154b0:	1d25      	adds	r5, r4, #4
 80154b2:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 80154b6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80154b8:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 80154bc:	2b00      	cmp	r3, #0
 80154be:	d052      	beq.n	8015566 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 80154c0:	881a      	ldrh	r2, [r3, #0]
 80154c2:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 80154c6:	a80d      	add	r0, sp, #52	; 0x34
 80154c8:	9005      	str	r0, [sp, #20]
 80154ca:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 80154ce:	9004      	str	r0, [sp, #16]
 80154d0:	980e      	ldr	r0, [sp, #56]	; 0x38
 80154d2:	9003      	str	r0, [sp, #12]
 80154d4:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 80154d8:	9002      	str	r0, [sp, #8]
 80154da:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80154dc:	9001      	str	r0, [sp, #4]
 80154de:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 80154e2:	9000      	str	r0, [sp, #0]
 80154e4:	e9cd 8706 	strd	r8, r7, [sp, #24]
 80154e8:	a810      	add	r0, sp, #64	; 0x40
 80154ea:	f7ff fd49 	bl	8014f80 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 80154ee:	462c      	mov	r4, r5
 80154f0:	e7b7      	b.n	8015462 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 80154f2:	6823      	ldr	r3, [r4, #0]
 80154f4:	1d25      	adds	r5, r4, #4
 80154f6:	9310      	str	r3, [sp, #64]	; 0x40
 80154f8:	e7dd      	b.n	80154b6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 80154fa:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80154fc:	6820      	ldr	r0, [r4, #0]
 80154fe:	eba8 0202 	sub.w	r2, r8, r2
 8015502:	230a      	movs	r3, #10
 8015504:	b292      	uxth	r2, r2
 8015506:	4649      	mov	r1, r9
 8015508:	f7ff fd08 	bl	8014f1c <_ZN8touchgfx7Unicode4itoaElPtti>
 801550c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8015510:	2b2d      	cmp	r3, #45	; 0x2d
 8015512:	f104 0504 	add.w	r5, r4, #4
 8015516:	d1ce      	bne.n	80154b6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8015518:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801551c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801551e:	3302      	adds	r3, #2
 8015520:	e7e9      	b.n	80154f6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 8015522:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8015524:	1d25      	adds	r5, r4, #4
 8015526:	eba8 0202 	sub.w	r2, r8, r2
 801552a:	230a      	movs	r3, #10
 801552c:	b292      	uxth	r2, r2
 801552e:	4649      	mov	r1, r9
 8015530:	6820      	ldr	r0, [r4, #0]
 8015532:	f7ff fcd5 	bl	8014ee0 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>
 8015536:	e7be      	b.n	80154b6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8015538:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801553a:	6820      	ldr	r0, [r4, #0]
 801553c:	eba8 0202 	sub.w	r2, r8, r2
 8015540:	b292      	uxth	r2, r2
 8015542:	2310      	movs	r3, #16
 8015544:	4649      	mov	r1, r9
 8015546:	f7ff fccb 	bl	8014ee0 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>
 801554a:	1d25      	adds	r5, r4, #4
 801554c:	f10d 0242 	add.w	r2, sp, #66	; 0x42
 8015550:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 8015554:	2b00      	cmp	r3, #0
 8015556:	d0ae      	beq.n	80154b6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8015558:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 801555c:	2919      	cmp	r1, #25
 801555e:	d8f7      	bhi.n	8015550 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8015560:	3b20      	subs	r3, #32
 8015562:	8013      	strh	r3, [r2, #0]
 8015564:	e7f4      	b.n	8015550 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8015566:	9a08      	ldr	r2, [sp, #32]
 8015568:	2a00      	cmp	r2, #0
 801556a:	d0aa      	beq.n	80154c2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 801556c:	7812      	ldrb	r2, [r2, #0]
 801556e:	e7a8      	b.n	80154c2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8015570:	2d00      	cmp	r5, #0
 8015572:	f43f af47 	beq.w	8015404 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 8015576:	782d      	ldrb	r5, [r5, #0]
 8015578:	e744      	b.n	8015404 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

0801557a <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 801557a:	b507      	push	{r0, r1, r2, lr}
 801557c:	9300      	str	r3, [sp, #0]
 801557e:	4613      	mov	r3, r2
 8015580:	2200      	movs	r2, #0
 8015582:	f7ff fe90 	bl	80152a6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 8015586:	b003      	add	sp, #12
 8015588:	f85d fb04 	ldr.w	pc, [sp], #4

0801558c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 801558c:	b40c      	push	{r2, r3}
 801558e:	b507      	push	{r0, r1, r2, lr}
 8015590:	ab04      	add	r3, sp, #16
 8015592:	f853 2b04 	ldr.w	r2, [r3], #4
 8015596:	9301      	str	r3, [sp, #4]
 8015598:	f7ff ffef 	bl	801557a <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 801559c:	b003      	add	sp, #12
 801559e:	f85d eb04 	ldr.w	lr, [sp], #4
 80155a2:	b002      	add	sp, #8
 80155a4:	4770      	bx	lr
	...

080155a8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>:
 80155a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80155ac:	b0c3      	sub	sp, #268	; 0x10c
 80155ae:	2600      	movs	r6, #0
 80155b0:	f10d 0840 	add.w	r8, sp, #64	; 0x40
 80155b4:	4607      	mov	r7, r0
 80155b6:	4689      	mov	r9, r1
 80155b8:	e9cd 3208 	strd	r3, r2, [sp, #32]
 80155bc:	4631      	mov	r1, r6
 80155be:	22c8      	movs	r2, #200	; 0xc8
 80155c0:	4640      	mov	r0, r8
 80155c2:	f8dd a130 	ldr.w	sl, [sp, #304]	; 0x130
 80155c6:	960c      	str	r6, [sp, #48]	; 0x30
 80155c8:	f00c fcf2 	bl	8021fb0 <memset>
 80155cc:	b17f      	cbz	r7, 80155ee <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x46>
 80155ce:	eddf 5aa4 	vldr	s11, [pc, #656]	; 8015860 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2b8>
 80155d2:	f8df b298 	ldr.w	fp, [pc, #664]	; 801586c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2c4>
 80155d6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80155d8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80155da:	b162      	cbz	r2, 80155f6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x4e>
 80155dc:	8812      	ldrh	r2, [r2, #0]
 80155de:	b11a      	cbz	r2, 80155e8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x40>
 80155e0:	f109 31ff 	add.w	r1, r9, #4294967295
 80155e4:	4299      	cmp	r1, r3
 80155e6:	dc26      	bgt.n	8015636 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x8e>
 80155e8:	2200      	movs	r2, #0
 80155ea:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 80155ee:	4638      	mov	r0, r7
 80155f0:	b043      	add	sp, #268	; 0x10c
 80155f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80155f6:	9a08      	ldr	r2, [sp, #32]
 80155f8:	2a00      	cmp	r2, #0
 80155fa:	d0f5      	beq.n	80155e8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x40>
 80155fc:	7812      	ldrb	r2, [r2, #0]
 80155fe:	e7ee      	b.n	80155de <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36>
 8015600:	2c00      	cmp	r4, #0
 8015602:	d0e8      	beq.n	80155d6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 8015604:	7822      	ldrb	r2, [r4, #0]
 8015606:	b132      	cbz	r2, 8015616 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x6e>
 8015608:	2a25      	cmp	r2, #37	; 0x25
 801560a:	d001      	beq.n	8015610 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x68>
 801560c:	4299      	cmp	r1, r3
 801560e:	dc05      	bgt.n	801561c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x74>
 8015610:	b9cd      	cbnz	r5, 8015646 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x9e>
 8015612:	2c00      	cmp	r4, #0
 8015614:	d0df      	beq.n	80155d6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 8015616:	7822      	ldrb	r2, [r4, #0]
 8015618:	2500      	movs	r5, #0
 801561a:	e015      	b.n	8015648 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xa0>
 801561c:	2d00      	cmp	r5, #0
 801561e:	d073      	beq.n	8015708 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x160>
 8015620:	882a      	ldrh	r2, [r5, #0]
 8015622:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8015626:	b10d      	cbz	r5, 801562c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x84>
 8015628:	3502      	adds	r5, #2
 801562a:	9509      	str	r5, [sp, #36]	; 0x24
 801562c:	b10c      	cbz	r4, 8015632 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x8a>
 801562e:	3401      	adds	r4, #1
 8015630:	9408      	str	r4, [sp, #32]
 8015632:	3301      	adds	r3, #1
 8015634:	930c      	str	r3, [sp, #48]	; 0x30
 8015636:	e9dd 4508 	ldrd	r4, r5, [sp, #32]
 801563a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801563c:	2d00      	cmp	r5, #0
 801563e:	d0df      	beq.n	8015600 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x58>
 8015640:	882a      	ldrh	r2, [r5, #0]
 8015642:	2a00      	cmp	r2, #0
 8015644:	d1e0      	bne.n	8015608 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x60>
 8015646:	882a      	ldrh	r2, [r5, #0]
 8015648:	2a00      	cmp	r2, #0
 801564a:	d0c4      	beq.n	80155d6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 801564c:	4299      	cmp	r1, r3
 801564e:	ddc2      	ble.n	80155d6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 8015650:	2300      	movs	r3, #0
 8015652:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8015656:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 801565a:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 801565e:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 8015662:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 8015666:	930d      	str	r3, [sp, #52]	; 0x34
 8015668:	f88d 302d 	strb.w	r3, [sp, #45]	; 0x2d
 801566c:	930e      	str	r3, [sp, #56]	; 0x38
 801566e:	b10d      	cbz	r5, 8015674 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xcc>
 8015670:	1cab      	adds	r3, r5, #2
 8015672:	9309      	str	r3, [sp, #36]	; 0x24
 8015674:	b10c      	cbz	r4, 801567a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xd2>
 8015676:	1c63      	adds	r3, r4, #1
 8015678:	9308      	str	r3, [sp, #32]
 801567a:	ab0e      	add	r3, sp, #56	; 0x38
 801567c:	9305      	str	r3, [sp, #20]
 801567e:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 8015682:	9304      	str	r3, [sp, #16]
 8015684:	ab0d      	add	r3, sp, #52	; 0x34
 8015686:	9303      	str	r3, [sp, #12]
 8015688:	ab0b      	add	r3, sp, #44	; 0x2c
 801568a:	9302      	str	r3, [sp, #8]
 801568c:	f10d 032b 	add.w	r3, sp, #43	; 0x2b
 8015690:	9301      	str	r3, [sp, #4]
 8015692:	f10d 032a 	add.w	r3, sp, #42	; 0x2a
 8015696:	9300      	str	r3, [sp, #0]
 8015698:	f10d 022e 	add.w	r2, sp, #46	; 0x2e
 801569c:	f10d 0329 	add.w	r3, sp, #41	; 0x29
 80156a0:	a908      	add	r1, sp, #32
 80156a2:	a809      	add	r0, sp, #36	; 0x24
 80156a4:	f7ff fd2f 	bl	8015106 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 80156a8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80156aa:	2b00      	cmp	r3, #0
 80156ac:	da0b      	bge.n	80156c6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x11e>
 80156ae:	eb0a 0386 	add.w	r3, sl, r6, lsl #2
 80156b2:	edd3 7a00 	vldr	s15, [r3]
 80156b6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80156ba:	3601      	adds	r6, #1
 80156bc:	ee17 3a90 	vmov	r3, s15
 80156c0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80156c4:	930d      	str	r3, [sp, #52]	; 0x34
 80156c6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80156c8:	2b00      	cmp	r3, #0
 80156ca:	da0b      	bge.n	80156e4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x13c>
 80156cc:	eb0a 0386 	add.w	r3, sl, r6, lsl #2
 80156d0:	edd3 7a00 	vldr	s15, [r3]
 80156d4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80156d8:	3601      	adds	r6, #1
 80156da:	ee17 3a90 	vmov	r3, s15
 80156de:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80156e2:	930e      	str	r3, [sp, #56]	; 0x38
 80156e4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80156e6:	b1a3      	cbz	r3, 8015712 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x16a>
 80156e8:	881a      	ldrh	r2, [r3, #0]
 80156ea:	2a25      	cmp	r2, #37	; 0x25
 80156ec:	d016      	beq.n	801571c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x174>
 80156ee:	2a66      	cmp	r2, #102	; 0x66
 80156f0:	d01a      	beq.n	8015728 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x180>
 80156f2:	e9cd 4508 	strd	r4, r5, [sp, #32]
 80156f6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80156f8:	2d00      	cmp	r5, #0
 80156fa:	f000 80fe 	beq.w	80158fa <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x352>
 80156fe:	882c      	ldrh	r4, [r5, #0]
 8015700:	f827 4013 	strh.w	r4, [r7, r3, lsl #1]
 8015704:	3301      	adds	r3, #1
 8015706:	e00d      	b.n	8015724 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x17c>
 8015708:	b10c      	cbz	r4, 801570e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x166>
 801570a:	7822      	ldrb	r2, [r4, #0]
 801570c:	e789      	b.n	8015622 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7a>
 801570e:	4622      	mov	r2, r4
 8015710:	e787      	b.n	8015622 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7a>
 8015712:	9b08      	ldr	r3, [sp, #32]
 8015714:	2b00      	cmp	r3, #0
 8015716:	d0ec      	beq.n	80156f2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x14a>
 8015718:	781a      	ldrb	r2, [r3, #0]
 801571a:	e7e6      	b.n	80156ea <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x142>
 801571c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801571e:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8015722:	3302      	adds	r3, #2
 8015724:	930c      	str	r3, [sp, #48]	; 0x30
 8015726:	e042      	b.n	80157ae <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x206>
 8015728:	eb0a 0386 	add.w	r3, sl, r6, lsl #2
 801572c:	edd3 7a00 	vldr	s15, [r3]
 8015730:	f89d 302d 	ldrb.w	r3, [sp, #45]	; 0x2d
 8015734:	f8cd 803c 	str.w	r8, [sp, #60]	; 0x3c
 8015738:	3601      	adds	r6, #1
 801573a:	b923      	cbnz	r3, 8015746 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x19e>
 801573c:	2301      	movs	r3, #1
 801573e:	f88d 302d 	strb.w	r3, [sp, #45]	; 0x2d
 8015742:	2306      	movs	r3, #6
 8015744:	930e      	str	r3, [sp, #56]	; 0x38
 8015746:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801574a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801574e:	bf48      	it	mi
 8015750:	eef1 7a67 	vnegmi.f32	s15, s15
 8015754:	eeb0 7ae7 	vabs.f32	s14, s15
 8015758:	bf48      	it	mi
 801575a:	232d      	movmi	r3, #45	; 0x2d
 801575c:	eeb4 7a65 	vcmp.f32	s14, s11
 8015760:	bf48      	it	mi
 8015762:	f8ad 302e 	strhmi.w	r3, [sp, #46]	; 0x2e
 8015766:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801576a:	dd2b      	ble.n	80157c4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x21c>
 801576c:	f8cd b040 	str.w	fp, [sp, #64]	; 0x40
 8015770:	2366      	movs	r3, #102	; 0x66
 8015772:	9311      	str	r3, [sp, #68]	; 0x44
 8015774:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015776:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 801577a:	2b00      	cmp	r3, #0
 801577c:	f000 80b7 	beq.w	80158ee <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x346>
 8015780:	881a      	ldrh	r2, [r3, #0]
 8015782:	f89d 302d 	ldrb.w	r3, [sp, #45]	; 0x2d
 8015786:	a80c      	add	r0, sp, #48	; 0x30
 8015788:	9005      	str	r0, [sp, #20]
 801578a:	f89d 0029 	ldrb.w	r0, [sp, #41]	; 0x29
 801578e:	9004      	str	r0, [sp, #16]
 8015790:	980d      	ldr	r0, [sp, #52]	; 0x34
 8015792:	9003      	str	r0, [sp, #12]
 8015794:	f89d 002c 	ldrb.w	r0, [sp, #44]	; 0x2c
 8015798:	9002      	str	r0, [sp, #8]
 801579a:	980e      	ldr	r0, [sp, #56]	; 0x38
 801579c:	9001      	str	r0, [sp, #4]
 801579e:	f89d 002b 	ldrb.w	r0, [sp, #43]	; 0x2b
 80157a2:	9000      	str	r0, [sp, #0]
 80157a4:	e9cd 9706 	strd	r9, r7, [sp, #24]
 80157a8:	a80f      	add	r0, sp, #60	; 0x3c
 80157aa:	f7ff fbe9 	bl	8014f80 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 80157ae:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80157b0:	b10b      	cbz	r3, 80157b6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x20e>
 80157b2:	3302      	adds	r3, #2
 80157b4:	9309      	str	r3, [sp, #36]	; 0x24
 80157b6:	9b08      	ldr	r3, [sp, #32]
 80157b8:	2b00      	cmp	r3, #0
 80157ba:	f43f af0c 	beq.w	80155d6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 80157be:	3301      	adds	r3, #1
 80157c0:	9308      	str	r3, [sp, #32]
 80157c2:	e708      	b.n	80155d6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 80157c4:	eef4 7a67 	vcmp.f32	s15, s15
 80157c8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80157cc:	d60b      	bvs.n	80157e6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x23e>
 80157ce:	980e      	ldr	r0, [sp, #56]	; 0x38
 80157d0:	ed9f 7a24 	vldr	s14, [pc, #144]	; 8015864 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2bc>
 80157d4:	2300      	movs	r3, #0
 80157d6:	eeb2 6a04 	vmov.f32	s12, #36	; 0x41200000  10.0
 80157da:	4283      	cmp	r3, r0
 80157dc:	da07      	bge.n	80157ee <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x246>
 80157de:	ee87 7a06 	vdiv.f32	s14, s14, s12
 80157e2:	3301      	adds	r3, #1
 80157e4:	e7f9      	b.n	80157da <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x232>
 80157e6:	4b20      	ldr	r3, [pc, #128]	; (8015868 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2c0>)
 80157e8:	9310      	str	r3, [sp, #64]	; 0x40
 80157ea:	236e      	movs	r3, #110	; 0x6e
 80157ec:	e7c1      	b.n	8015772 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1ca>
 80157ee:	ee77 7a87 	vadd.f32	s15, s15, s14
 80157f2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80157f6:	eeb0 7a67 	vmov.f32	s14, s15
 80157fa:	eeb4 7ac6 	vcmpe.f32	s14, s12
 80157fe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8015802:	da27      	bge.n	8015854 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2ac>
 8015804:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8015806:	2100      	movs	r1, #0
 8015808:	eeb6 5a00 	vmov.f32	s10, #96	; 0x3f000000  0.5
 801580c:	eba9 0202 	sub.w	r2, r9, r2
 8015810:	eef4 6ac5 	vcmpe.f32	s13, s10
 8015814:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8015818:	b28c      	uxth	r4, r1
 801581a:	db2a      	blt.n	8015872 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2ca>
 801581c:	1a53      	subs	r3, r2, r1
 801581e:	2b00      	cmp	r3, #0
 8015820:	dd27      	ble.n	8015872 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2ca>
 8015822:	2963      	cmp	r1, #99	; 0x63
 8015824:	d024      	beq.n	8015870 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2c8>
 8015826:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 801582a:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 801582e:	ee17 3a10 	vmov	r3, s14
 8015832:	2b09      	cmp	r3, #9
 8015834:	bfa8      	it	ge
 8015836:	2309      	movge	r3, #9
 8015838:	ee07 3a10 	vmov	s14, r3
 801583c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8015840:	f103 0430 	add.w	r4, r3, #48	; 0x30
 8015844:	f828 4011 	strh.w	r4, [r8, r1, lsl #1]
 8015848:	eee7 7a66 	vfms.f32	s15, s14, s13
 801584c:	3101      	adds	r1, #1
 801584e:	eec6 6a86 	vdiv.f32	s13, s13, s12
 8015852:	e7dd      	b.n	8015810 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x268>
 8015854:	ee66 6a86 	vmul.f32	s13, s13, s12
 8015858:	ee87 7a06 	vdiv.f32	s14, s14, s12
 801585c:	e7cd      	b.n	80157fa <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x252>
 801585e:	bf00      	nop
 8015860:	7f7fffff 	.word	0x7f7fffff
 8015864:	3f000002 	.word	0x3f000002
 8015868:	0061006e 	.word	0x0061006e
 801586c:	006e0069 	.word	0x006e0069
 8015870:	460c      	mov	r4, r1
 8015872:	2a63      	cmp	r2, #99	; 0x63
 8015874:	bfd4      	ite	le
 8015876:	ebc4 0202 	rsble	r2, r4, r2
 801587a:	f1c4 0263 	rsbgt	r2, r4, #99	; 0x63
 801587e:	2a00      	cmp	r2, #0
 8015880:	dd30      	ble.n	80158e4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x33c>
 8015882:	4603      	mov	r3, r0
 8015884:	2501      	movs	r5, #1
 8015886:	210a      	movs	r1, #10
 8015888:	2b00      	cmp	r3, #0
 801588a:	dd0d      	ble.n	80158a8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x300>
 801588c:	ee67 7a86 	vmul.f32	s15, s15, s12
 8015890:	3b01      	subs	r3, #1
 8015892:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8015896:	ee17 ca10 	vmov	ip, s14
 801589a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801589e:	fb01 c505 	mla	r5, r1, r5, ip
 80158a2:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80158a6:	e7ef      	b.n	8015888 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e0>
 80158a8:	2800      	cmp	r0, #0
 80158aa:	f100 33ff 	add.w	r3, r0, #4294967295
 80158ae:	bfac      	ite	ge
 80158b0:	1a18      	subge	r0, r3, r0
 80158b2:	4618      	movlt	r0, r3
 80158b4:	0064      	lsls	r4, r4, #1
 80158b6:	900e      	str	r0, [sp, #56]	; 0x38
 80158b8:	230a      	movs	r3, #10
 80158ba:	b292      	uxth	r2, r2
 80158bc:	eb08 0104 	add.w	r1, r8, r4
 80158c0:	4628      	mov	r0, r5
 80158c2:	f7ff fb2b 	bl	8014f1c <_ZN8touchgfx7Unicode4itoaElPtti>
 80158c6:	2d01      	cmp	r5, #1
 80158c8:	dc0a      	bgt.n	80158e0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x338>
 80158ca:	f89d 302a 	ldrb.w	r3, [sp, #42]	; 0x2a
 80158ce:	2b00      	cmp	r3, #0
 80158d0:	bf0c      	ite	eq
 80158d2:	2300      	moveq	r3, #0
 80158d4:	232e      	movne	r3, #46	; 0x2e
 80158d6:	aa42      	add	r2, sp, #264	; 0x108
 80158d8:	4414      	add	r4, r2
 80158da:	f824 3cc8 	strh.w	r3, [r4, #-200]
 80158de:	e749      	b.n	8015774 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1cc>
 80158e0:	232e      	movs	r3, #46	; 0x2e
 80158e2:	e7f8      	b.n	80158d6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x32e>
 80158e4:	ab42      	add	r3, sp, #264	; 0x108
 80158e6:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 80158ea:	2300      	movs	r3, #0
 80158ec:	e7f5      	b.n	80158da <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x332>
 80158ee:	9a08      	ldr	r2, [sp, #32]
 80158f0:	2a00      	cmp	r2, #0
 80158f2:	f43f af46 	beq.w	8015782 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1da>
 80158f6:	7812      	ldrb	r2, [r2, #0]
 80158f8:	e743      	b.n	8015782 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1da>
 80158fa:	2c00      	cmp	r4, #0
 80158fc:	f43f af00 	beq.w	8015700 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x158>
 8015900:	7824      	ldrb	r4, [r4, #0]
 8015902:	e6fd      	b.n	8015700 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x158>

08015904 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>:
 8015904:	b507      	push	{r0, r1, r2, lr}
 8015906:	9300      	str	r3, [sp, #0]
 8015908:	4613      	mov	r3, r2
 801590a:	2200      	movs	r2, #0
 801590c:	f7ff fe4c 	bl	80155a8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>
 8015910:	b003      	add	sp, #12
 8015912:	f85d fb04 	ldr.w	pc, [sp], #4
	...

08015918 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 8015918:	4b01      	ldr	r3, [pc, #4]	; (8015920 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 801591a:	6018      	str	r0, [r3, #0]
 801591c:	4770      	bx	lr
 801591e:	bf00      	nop
 8015920:	200179b4 	.word	0x200179b4

08015924 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 8015924:	4b06      	ldr	r3, [pc, #24]	; (8015940 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 8015926:	881a      	ldrh	r2, [r3, #0]
 8015928:	4282      	cmp	r2, r0
 801592a:	d807      	bhi.n	801593c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 801592c:	4b05      	ldr	r3, [pc, #20]	; (8015944 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 801592e:	881b      	ldrh	r3, [r3, #0]
 8015930:	4413      	add	r3, r2
 8015932:	4298      	cmp	r0, r3
 8015934:	bfac      	ite	ge
 8015936:	2000      	movge	r0, #0
 8015938:	2001      	movlt	r0, #1
 801593a:	4770      	bx	lr
 801593c:	2000      	movs	r0, #0
 801593e:	4770      	bx	lr
 8015940:	200179d4 	.word	0x200179d4
 8015944:	200179d8 	.word	0x200179d8

08015948 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 8015948:	b508      	push	{r3, lr}
 801594a:	4601      	mov	r1, r0
 801594c:	f7ff ffea 	bl	8015924 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 8015950:	b118      	cbz	r0, 801595a <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 8015952:	4b02      	ldr	r3, [pc, #8]	; (801595c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 8015954:	681b      	ldr	r3, [r3, #0]
 8015956:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 801595a:	bd08      	pop	{r3, pc}
 801595c:	200179b8 	.word	0x200179b8

08015960 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 8015960:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015962:	4c24      	ldr	r4, [pc, #144]	; (80159f4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 8015964:	6823      	ldr	r3, [r4, #0]
 8015966:	2b00      	cmp	r3, #0
 8015968:	d042      	beq.n	80159f0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 801596a:	4a23      	ldr	r2, [pc, #140]	; (80159f8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 801596c:	4d23      	ldr	r5, [pc, #140]	; (80159fc <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 801596e:	8811      	ldrh	r1, [r2, #0]
 8015970:	f8b5 c000 	ldrh.w	ip, [r5]
 8015974:	4822      	ldr	r0, [pc, #136]	; (8015a00 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 8015976:	4461      	add	r1, ip
 8015978:	1c4a      	adds	r2, r1, #1
 801597a:	f022 0201 	bic.w	r2, r2, #1
 801597e:	008f      	lsls	r7, r1, #2
 8015980:	0412      	lsls	r2, r2, #16
 8015982:	19de      	adds	r6, r3, r7
 8015984:	0c12      	lsrs	r2, r2, #16
 8015986:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 801598a:	6006      	str	r6, [r0, #0]
 801598c:	4e1d      	ldr	r6, [pc, #116]	; (8015a04 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 801598e:	19da      	adds	r2, r3, r7
 8015990:	6032      	str	r2, [r6, #0]
 8015992:	220e      	movs	r2, #14
 8015994:	fb02 f20c 	mul.w	r2, r2, ip
 8015998:	3203      	adds	r2, #3
 801599a:	f022 0203 	bic.w	r2, r2, #3
 801599e:	443a      	add	r2, r7
 80159a0:	4f19      	ldr	r7, [pc, #100]	; (8015a08 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 80159a2:	4413      	add	r3, r2
 80159a4:	603b      	str	r3, [r7, #0]
 80159a6:	4f19      	ldr	r7, [pc, #100]	; (8015a0c <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 80159a8:	2300      	movs	r3, #0
 80159aa:	803b      	strh	r3, [r7, #0]
 80159ac:	4f18      	ldr	r7, [pc, #96]	; (8015a10 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 80159ae:	683f      	ldr	r7, [r7, #0]
 80159b0:	1aba      	subs	r2, r7, r2
 80159b2:	4f18      	ldr	r7, [pc, #96]	; (8015a14 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 80159b4:	603a      	str	r2, [r7, #0]
 80159b6:	4a18      	ldr	r2, [pc, #96]	; (8015a18 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 80159b8:	469c      	mov	ip, r3
 80159ba:	8013      	strh	r3, [r2, #0]
 80159bc:	f64f 77ff 	movw	r7, #65535	; 0xffff
 80159c0:	428b      	cmp	r3, r1
 80159c2:	d10d      	bne.n	80159e0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 80159c4:	882d      	ldrh	r5, [r5, #0]
 80159c6:	6830      	ldr	r0, [r6, #0]
 80159c8:	2300      	movs	r3, #0
 80159ca:	240e      	movs	r4, #14
 80159cc:	429d      	cmp	r5, r3
 80159ce:	d90f      	bls.n	80159f0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 80159d0:	fb04 0203 	mla	r2, r4, r3, r0
 80159d4:	3301      	adds	r3, #1
 80159d6:	7b11      	ldrb	r1, [r2, #12]
 80159d8:	f36f 1145 	bfc	r1, #5, #1
 80159dc:	7311      	strb	r1, [r2, #12]
 80159de:	e7f5      	b.n	80159cc <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 80159e0:	6822      	ldr	r2, [r4, #0]
 80159e2:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 80159e6:	6802      	ldr	r2, [r0, #0]
 80159e8:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 80159ec:	3301      	adds	r3, #1
 80159ee:	e7e7      	b.n	80159c0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 80159f0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80159f2:	bf00      	nop
 80159f4:	200179b8 	.word	0x200179b8
 80159f8:	200179d4 	.word	0x200179d4
 80159fc:	200179d8 	.word	0x200179d8
 8015a00:	200179cc 	.word	0x200179cc
 8015a04:	200179bc 	.word	0x200179bc
 8015a08:	200179c4 	.word	0x200179c4
 8015a0c:	200179d6 	.word	0x200179d6
 8015a10:	200179c0 	.word	0x200179c0
 8015a14:	200179d0 	.word	0x200179d0
 8015a18:	200179c8 	.word	0x200179c8

08015a1c <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 8015a1c:	4b06      	ldr	r3, [pc, #24]	; (8015a38 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 8015a1e:	681b      	ldr	r3, [r3, #0]
 8015a20:	b943      	cbnz	r3, 8015a34 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8015a22:	b139      	cbz	r1, 8015a34 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8015a24:	4b05      	ldr	r3, [pc, #20]	; (8015a3c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 8015a26:	801a      	strh	r2, [r3, #0]
 8015a28:	4b05      	ldr	r3, [pc, #20]	; (8015a40 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 8015a2a:	6019      	str	r1, [r3, #0]
 8015a2c:	4b05      	ldr	r3, [pc, #20]	; (8015a44 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 8015a2e:	6018      	str	r0, [r3, #0]
 8015a30:	f7ff bf96 	b.w	8015960 <_ZN8touchgfx6Bitmap10clearCacheEv>
 8015a34:	4770      	bx	lr
 8015a36:	bf00      	nop
 8015a38:	200179c4 	.word	0x200179c4
 8015a3c:	200179d8 	.word	0x200179d8
 8015a40:	200179c0 	.word	0x200179c0
 8015a44:	200179b8 	.word	0x200179b8

08015a48 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 8015a48:	b470      	push	{r4, r5, r6}
 8015a4a:	4c07      	ldr	r4, [pc, #28]	; (8015a68 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 8015a4c:	6826      	ldr	r6, [r4, #0]
 8015a4e:	4605      	mov	r5, r0
 8015a50:	4610      	mov	r0, r2
 8015a52:	9a03      	ldr	r2, [sp, #12]
 8015a54:	b936      	cbnz	r6, 8015a64 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 8015a56:	6025      	str	r5, [r4, #0]
 8015a58:	4c04      	ldr	r4, [pc, #16]	; (8015a6c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 8015a5a:	8021      	strh	r1, [r4, #0]
 8015a5c:	bc70      	pop	{r4, r5, r6}
 8015a5e:	4619      	mov	r1, r3
 8015a60:	f7ff bfdc 	b.w	8015a1c <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 8015a64:	bc70      	pop	{r4, r5, r6}
 8015a66:	4770      	bx	lr
 8015a68:	200179dc 	.word	0x200179dc
 8015a6c:	200179d4 	.word	0x200179d4

08015a70 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 8015a70:	4a12      	ldr	r2, [pc, #72]	; (8015abc <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 8015a72:	8803      	ldrh	r3, [r0, #0]
 8015a74:	8812      	ldrh	r2, [r2, #0]
 8015a76:	4293      	cmp	r3, r2
 8015a78:	d207      	bcs.n	8015a8a <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 8015a7a:	4a11      	ldr	r2, [pc, #68]	; (8015ac0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 8015a7c:	6812      	ldr	r2, [r2, #0]
 8015a7e:	2114      	movs	r1, #20
 8015a80:	fb01 2303 	mla	r3, r1, r3, r2
 8015a84:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 8015a88:	4770      	bx	lr
 8015a8a:	490e      	ldr	r1, [pc, #56]	; (8015ac4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 8015a8c:	8809      	ldrh	r1, [r1, #0]
 8015a8e:	4411      	add	r1, r2
 8015a90:	428b      	cmp	r3, r1
 8015a92:	da04      	bge.n	8015a9e <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 8015a94:	1a9b      	subs	r3, r3, r2
 8015a96:	4a0c      	ldr	r2, [pc, #48]	; (8015ac8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 8015a98:	210e      	movs	r1, #14
 8015a9a:	6812      	ldr	r2, [r2, #0]
 8015a9c:	e7f0      	b.n	8015a80 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 8015a9e:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8015aa2:	4293      	cmp	r3, r2
 8015aa4:	d108      	bne.n	8015ab8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 8015aa6:	4b09      	ldr	r3, [pc, #36]	; (8015acc <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 8015aa8:	781b      	ldrb	r3, [r3, #0]
 8015aaa:	b91b      	cbnz	r3, 8015ab4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 8015aac:	4b08      	ldr	r3, [pc, #32]	; (8015ad0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 8015aae:	f9b3 0000 	ldrsh.w	r0, [r3]
 8015ab2:	4770      	bx	lr
 8015ab4:	4b07      	ldr	r3, [pc, #28]	; (8015ad4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 8015ab6:	e7fa      	b.n	8015aae <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 8015ab8:	2000      	movs	r0, #0
 8015aba:	4770      	bx	lr
 8015abc:	200179d4 	.word	0x200179d4
 8015ac0:	200179dc 	.word	0x200179dc
 8015ac4:	200179d8 	.word	0x200179d8
 8015ac8:	200179bc 	.word	0x200179bc
 8015acc:	20017944 	.word	0x20017944
 8015ad0:	20017946 	.word	0x20017946
 8015ad4:	20017948 	.word	0x20017948

08015ad8 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 8015ad8:	4a12      	ldr	r2, [pc, #72]	; (8015b24 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 8015ada:	8803      	ldrh	r3, [r0, #0]
 8015adc:	8812      	ldrh	r2, [r2, #0]
 8015ade:	4293      	cmp	r3, r2
 8015ae0:	d207      	bcs.n	8015af2 <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 8015ae2:	4a11      	ldr	r2, [pc, #68]	; (8015b28 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 8015ae4:	6812      	ldr	r2, [r2, #0]
 8015ae6:	2114      	movs	r1, #20
 8015ae8:	fb01 2303 	mla	r3, r1, r3, r2
 8015aec:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 8015af0:	4770      	bx	lr
 8015af2:	490e      	ldr	r1, [pc, #56]	; (8015b2c <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 8015af4:	8809      	ldrh	r1, [r1, #0]
 8015af6:	4411      	add	r1, r2
 8015af8:	428b      	cmp	r3, r1
 8015afa:	da04      	bge.n	8015b06 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 8015afc:	1a9b      	subs	r3, r3, r2
 8015afe:	4a0c      	ldr	r2, [pc, #48]	; (8015b30 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 8015b00:	210e      	movs	r1, #14
 8015b02:	6812      	ldr	r2, [r2, #0]
 8015b04:	e7f0      	b.n	8015ae8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 8015b06:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8015b0a:	4293      	cmp	r3, r2
 8015b0c:	d108      	bne.n	8015b20 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 8015b0e:	4b09      	ldr	r3, [pc, #36]	; (8015b34 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 8015b10:	781b      	ldrb	r3, [r3, #0]
 8015b12:	b91b      	cbnz	r3, 8015b1c <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 8015b14:	4b08      	ldr	r3, [pc, #32]	; (8015b38 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 8015b16:	f9b3 0000 	ldrsh.w	r0, [r3]
 8015b1a:	4770      	bx	lr
 8015b1c:	4b07      	ldr	r3, [pc, #28]	; (8015b3c <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 8015b1e:	e7fa      	b.n	8015b16 <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 8015b20:	2000      	movs	r0, #0
 8015b22:	4770      	bx	lr
 8015b24:	200179d4 	.word	0x200179d4
 8015b28:	200179dc 	.word	0x200179dc
 8015b2c:	200179d8 	.word	0x200179d8
 8015b30:	200179bc 	.word	0x200179bc
 8015b34:	20017944 	.word	0x20017944
 8015b38:	20017948 	.word	0x20017948
 8015b3c:	20017946 	.word	0x20017946

08015b40 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 8015b40:	b510      	push	{r4, lr}
 8015b42:	4a1f      	ldr	r2, [pc, #124]	; (8015bc0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
 8015b44:	880b      	ldrh	r3, [r1, #0]
 8015b46:	8812      	ldrh	r2, [r2, #0]
 8015b48:	4293      	cmp	r3, r2
 8015b4a:	d213      	bcs.n	8015b74 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 8015b4c:	4a1d      	ldr	r2, [pc, #116]	; (8015bc4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
 8015b4e:	6812      	ldr	r2, [r2, #0]
 8015b50:	2114      	movs	r1, #20
 8015b52:	fb01 2303 	mla	r3, r1, r3, r2
 8015b56:	8a1a      	ldrh	r2, [r3, #16]
 8015b58:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 8015b5c:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 8015b60:	8a5b      	ldrh	r3, [r3, #18]
 8015b62:	8004      	strh	r4, [r0, #0]
 8015b64:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8015b68:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8015b6c:	8041      	strh	r1, [r0, #2]
 8015b6e:	8082      	strh	r2, [r0, #4]
 8015b70:	80c3      	strh	r3, [r0, #6]
 8015b72:	e00e      	b.n	8015b92 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 8015b74:	4914      	ldr	r1, [pc, #80]	; (8015bc8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
 8015b76:	8809      	ldrh	r1, [r1, #0]
 8015b78:	4411      	add	r1, r2
 8015b7a:	428b      	cmp	r3, r1
 8015b7c:	da0a      	bge.n	8015b94 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
 8015b7e:	1a9b      	subs	r3, r3, r2
 8015b80:	4a12      	ldr	r2, [pc, #72]	; (8015bcc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 8015b82:	6812      	ldr	r2, [r2, #0]
 8015b84:	210e      	movs	r1, #14
 8015b86:	fb01 2303 	mla	r3, r1, r3, r2
 8015b8a:	681a      	ldr	r2, [r3, #0]
 8015b8c:	6002      	str	r2, [r0, #0]
 8015b8e:	685a      	ldr	r2, [r3, #4]
 8015b90:	6042      	str	r2, [r0, #4]
 8015b92:	bd10      	pop	{r4, pc}
 8015b94:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8015b98:	4293      	cmp	r3, r2
 8015b9a:	d10b      	bne.n	8015bb4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
 8015b9c:	4b0c      	ldr	r3, [pc, #48]	; (8015bd0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 8015b9e:	f9b3 1000 	ldrsh.w	r1, [r3]
 8015ba2:	4b0c      	ldr	r3, [pc, #48]	; (8015bd4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 8015ba4:	8081      	strh	r1, [r0, #4]
 8015ba6:	f9b3 2000 	ldrsh.w	r2, [r3]
 8015baa:	80c2      	strh	r2, [r0, #6]
 8015bac:	2300      	movs	r3, #0
 8015bae:	8003      	strh	r3, [r0, #0]
 8015bb0:	8043      	strh	r3, [r0, #2]
 8015bb2:	e7ee      	b.n	8015b92 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 8015bb4:	2300      	movs	r3, #0
 8015bb6:	8003      	strh	r3, [r0, #0]
 8015bb8:	8043      	strh	r3, [r0, #2]
 8015bba:	8083      	strh	r3, [r0, #4]
 8015bbc:	e7d8      	b.n	8015b70 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 8015bbe:	bf00      	nop
 8015bc0:	200179d4 	.word	0x200179d4
 8015bc4:	200179dc 	.word	0x200179dc
 8015bc8:	200179d8 	.word	0x200179d8
 8015bcc:	200179bc 	.word	0x200179bc
 8015bd0:	20017940 	.word	0x20017940
 8015bd4:	20017942 	.word	0x20017942

08015bd8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 8015bd8:	4a17      	ldr	r2, [pc, #92]	; (8015c38 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 8015bda:	8803      	ldrh	r3, [r0, #0]
 8015bdc:	8812      	ldrh	r2, [r2, #0]
 8015bde:	4293      	cmp	r3, r2
 8015be0:	d213      	bcs.n	8015c0a <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 8015be2:	4a16      	ldr	r2, [pc, #88]	; (8015c3c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 8015be4:	6812      	ldr	r2, [r2, #0]
 8015be6:	2114      	movs	r1, #20
 8015be8:	fb01 2303 	mla	r3, r1, r3, r2
 8015bec:	8a1a      	ldrh	r2, [r3, #16]
 8015bee:	8919      	ldrh	r1, [r3, #8]
 8015bf0:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8015bf4:	428a      	cmp	r2, r1
 8015bf6:	db1d      	blt.n	8015c34 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8015bf8:	8a58      	ldrh	r0, [r3, #18]
 8015bfa:	f3c0 000c 	ubfx	r0, r0, #0, #13
 8015bfe:	895b      	ldrh	r3, [r3, #10]
 8015c00:	4298      	cmp	r0, r3
 8015c02:	bfac      	ite	ge
 8015c04:	2000      	movge	r0, #0
 8015c06:	2001      	movlt	r0, #1
 8015c08:	4770      	bx	lr
 8015c0a:	490d      	ldr	r1, [pc, #52]	; (8015c40 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 8015c0c:	8809      	ldrh	r1, [r1, #0]
 8015c0e:	4411      	add	r1, r2
 8015c10:	428b      	cmp	r3, r1
 8015c12:	da0d      	bge.n	8015c30 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 8015c14:	1a9b      	subs	r3, r3, r2
 8015c16:	4a0b      	ldr	r2, [pc, #44]	; (8015c44 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 8015c18:	6812      	ldr	r2, [r2, #0]
 8015c1a:	210e      	movs	r1, #14
 8015c1c:	fb01 2303 	mla	r3, r1, r3, r2
 8015c20:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 8015c24:	891a      	ldrh	r2, [r3, #8]
 8015c26:	4291      	cmp	r1, r2
 8015c28:	db04      	blt.n	8015c34 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8015c2a:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 8015c2e:	e7e6      	b.n	8015bfe <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 8015c30:	2000      	movs	r0, #0
 8015c32:	4770      	bx	lr
 8015c34:	2001      	movs	r0, #1
 8015c36:	4770      	bx	lr
 8015c38:	200179d4 	.word	0x200179d4
 8015c3c:	200179dc 	.word	0x200179dc
 8015c40:	200179d8 	.word	0x200179d8
 8015c44:	200179bc 	.word	0x200179bc

08015c48 <_ZNK8touchgfx6Bitmap7getDataEv>:
 8015c48:	4a12      	ldr	r2, [pc, #72]	; (8015c94 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 8015c4a:	8803      	ldrh	r3, [r0, #0]
 8015c4c:	8811      	ldrh	r1, [r2, #0]
 8015c4e:	428b      	cmp	r3, r1
 8015c50:	d20b      	bcs.n	8015c6a <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 8015c52:	4a11      	ldr	r2, [pc, #68]	; (8015c98 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8015c54:	6812      	ldr	r2, [r2, #0]
 8015c56:	b112      	cbz	r2, 8015c5e <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 8015c58:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8015c5c:	b9c0      	cbnz	r0, 8015c90 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 8015c5e:	4a0f      	ldr	r2, [pc, #60]	; (8015c9c <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 8015c60:	6811      	ldr	r1, [r2, #0]
 8015c62:	2214      	movs	r2, #20
 8015c64:	4353      	muls	r3, r2
 8015c66:	58c8      	ldr	r0, [r1, r3]
 8015c68:	4770      	bx	lr
 8015c6a:	4a0d      	ldr	r2, [pc, #52]	; (8015ca0 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 8015c6c:	8812      	ldrh	r2, [r2, #0]
 8015c6e:	440a      	add	r2, r1
 8015c70:	4293      	cmp	r3, r2
 8015c72:	da04      	bge.n	8015c7e <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 8015c74:	4a08      	ldr	r2, [pc, #32]	; (8015c98 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8015c76:	6812      	ldr	r2, [r2, #0]
 8015c78:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8015c7c:	4770      	bx	lr
 8015c7e:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8015c82:	4293      	cmp	r3, r2
 8015c84:	d103      	bne.n	8015c8e <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 8015c86:	4b07      	ldr	r3, [pc, #28]	; (8015ca4 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 8015c88:	681b      	ldr	r3, [r3, #0]
 8015c8a:	6c58      	ldr	r0, [r3, #68]	; 0x44
 8015c8c:	4770      	bx	lr
 8015c8e:	2000      	movs	r0, #0
 8015c90:	4770      	bx	lr
 8015c92:	bf00      	nop
 8015c94:	200179d4 	.word	0x200179d4
 8015c98:	200179b8 	.word	0x200179b8
 8015c9c:	200179dc 	.word	0x200179dc
 8015ca0:	200179d8 	.word	0x200179d8
 8015ca4:	2001794c 	.word	0x2001794c

08015ca8 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 8015ca8:	4b24      	ldr	r3, [pc, #144]	; (8015d3c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 8015caa:	8802      	ldrh	r2, [r0, #0]
 8015cac:	8818      	ldrh	r0, [r3, #0]
 8015cae:	4282      	cmp	r2, r0
 8015cb0:	d221      	bcs.n	8015cf6 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 8015cb2:	4b23      	ldr	r3, [pc, #140]	; (8015d40 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 8015cb4:	6819      	ldr	r1, [r3, #0]
 8015cb6:	2314      	movs	r3, #20
 8015cb8:	fb03 1302 	mla	r3, r3, r2, r1
 8015cbc:	6858      	ldr	r0, [r3, #4]
 8015cbe:	2800      	cmp	r0, #0
 8015cc0:	d03a      	beq.n	8015d38 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8015cc2:	4920      	ldr	r1, [pc, #128]	; (8015d44 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8015cc4:	6809      	ldr	r1, [r1, #0]
 8015cc6:	2900      	cmp	r1, #0
 8015cc8:	d036      	beq.n	8015d38 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8015cca:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 8015cce:	2900      	cmp	r1, #0
 8015cd0:	d032      	beq.n	8015d38 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8015cd2:	891a      	ldrh	r2, [r3, #8]
 8015cd4:	8958      	ldrh	r0, [r3, #10]
 8015cd6:	4350      	muls	r0, r2
 8015cd8:	7c5a      	ldrb	r2, [r3, #17]
 8015cda:	7cdb      	ldrb	r3, [r3, #19]
 8015cdc:	0952      	lsrs	r2, r2, #5
 8015cde:	f3c3 1342 	ubfx	r3, r3, #5, #3
 8015ce2:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8015ce6:	2b0b      	cmp	r3, #11
 8015ce8:	bf18      	it	ne
 8015cea:	0040      	lslne	r0, r0, #1
 8015cec:	3003      	adds	r0, #3
 8015cee:	f020 0003 	bic.w	r0, r0, #3
 8015cf2:	4408      	add	r0, r1
 8015cf4:	4770      	bx	lr
 8015cf6:	4b14      	ldr	r3, [pc, #80]	; (8015d48 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 8015cf8:	881b      	ldrh	r3, [r3, #0]
 8015cfa:	4403      	add	r3, r0
 8015cfc:	429a      	cmp	r2, r3
 8015cfe:	da1a      	bge.n	8015d36 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8015d00:	4b12      	ldr	r3, [pc, #72]	; (8015d4c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 8015d02:	681b      	ldr	r3, [r3, #0]
 8015d04:	1a10      	subs	r0, r2, r0
 8015d06:	210e      	movs	r1, #14
 8015d08:	fb01 3000 	mla	r0, r1, r0, r3
 8015d0c:	7b03      	ldrb	r3, [r0, #12]
 8015d0e:	f003 031f 	and.w	r3, r3, #31
 8015d12:	2b0b      	cmp	r3, #11
 8015d14:	d10b      	bne.n	8015d2e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 8015d16:	8903      	ldrh	r3, [r0, #8]
 8015d18:	8940      	ldrh	r0, [r0, #10]
 8015d1a:	4358      	muls	r0, r3
 8015d1c:	4b09      	ldr	r3, [pc, #36]	; (8015d44 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8015d1e:	6819      	ldr	r1, [r3, #0]
 8015d20:	3003      	adds	r0, #3
 8015d22:	f020 0303 	bic.w	r3, r0, #3
 8015d26:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 8015d2a:	4418      	add	r0, r3
 8015d2c:	4770      	bx	lr
 8015d2e:	2b0d      	cmp	r3, #13
 8015d30:	d101      	bne.n	8015d36 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8015d32:	300d      	adds	r0, #13
 8015d34:	4770      	bx	lr
 8015d36:	2000      	movs	r0, #0
 8015d38:	4770      	bx	lr
 8015d3a:	bf00      	nop
 8015d3c:	200179d4 	.word	0x200179d4
 8015d40:	200179dc 	.word	0x200179dc
 8015d44:	200179b8 	.word	0x200179b8
 8015d48:	200179d8 	.word	0x200179d8
 8015d4c:	200179bc 	.word	0x200179bc

08015d50 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 8015d50:	b510      	push	{r4, lr}
 8015d52:	4a17      	ldr	r2, [pc, #92]	; (8015db0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 8015d54:	8803      	ldrh	r3, [r0, #0]
 8015d56:	8812      	ldrh	r2, [r2, #0]
 8015d58:	4293      	cmp	r3, r2
 8015d5a:	d20c      	bcs.n	8015d76 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 8015d5c:	4a15      	ldr	r2, [pc, #84]	; (8015db4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 8015d5e:	6812      	ldr	r2, [r2, #0]
 8015d60:	2114      	movs	r1, #20
 8015d62:	fb01 2303 	mla	r3, r1, r3, r2
 8015d66:	7c58      	ldrb	r0, [r3, #17]
 8015d68:	0942      	lsrs	r2, r0, #5
 8015d6a:	7cd8      	ldrb	r0, [r3, #19]
 8015d6c:	f3c0 1042 	ubfx	r0, r0, #5, #3
 8015d70:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 8015d74:	bd10      	pop	{r4, pc}
 8015d76:	4910      	ldr	r1, [pc, #64]	; (8015db8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 8015d78:	8809      	ldrh	r1, [r1, #0]
 8015d7a:	4411      	add	r1, r2
 8015d7c:	428b      	cmp	r3, r1
 8015d7e:	da09      	bge.n	8015d94 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 8015d80:	1a9b      	subs	r3, r3, r2
 8015d82:	4a0e      	ldr	r2, [pc, #56]	; (8015dbc <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 8015d84:	6812      	ldr	r2, [r2, #0]
 8015d86:	210e      	movs	r1, #14
 8015d88:	fb01 2303 	mla	r3, r1, r3, r2
 8015d8c:	7b18      	ldrb	r0, [r3, #12]
 8015d8e:	f000 001f 	and.w	r0, r0, #31
 8015d92:	e7ef      	b.n	8015d74 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 8015d94:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8015d98:	4293      	cmp	r3, r2
 8015d9a:	d106      	bne.n	8015daa <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 8015d9c:	f7ec fb22 	bl	80023e4 <_ZN8touchgfx3HAL3lcdEv>
 8015da0:	6803      	ldr	r3, [r0, #0]
 8015da2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015da6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8015da8:	4718      	bx	r3
 8015daa:	2000      	movs	r0, #0
 8015dac:	e7e2      	b.n	8015d74 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 8015dae:	bf00      	nop
 8015db0:	200179d4 	.word	0x200179d4
 8015db4:	200179dc 	.word	0x200179dc
 8015db8:	200179d8 	.word	0x200179d8
 8015dbc:	200179bc 	.word	0x200179bc

08015dc0 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 8015dc0:	2010      	movs	r0, #16
 8015dc2:	4770      	bx	lr

08015dc4 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 8015dc4:	2000      	movs	r0, #0
 8015dc6:	4770      	bx	lr

08015dc8 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 8015dc8:	4b02      	ldr	r3, [pc, #8]	; (8015dd4 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 8015dca:	8818      	ldrh	r0, [r3, #0]
 8015dcc:	0040      	lsls	r0, r0, #1
 8015dce:	b280      	uxth	r0, r0
 8015dd0:	4770      	bx	lr
 8015dd2:	bf00      	nop
 8015dd4:	20017946 	.word	0x20017946

08015dd8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 8015dd8:	2bff      	cmp	r3, #255	; 0xff
 8015dda:	d050      	beq.n	8015e7e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 8015ddc:	2a0b      	cmp	r2, #11
 8015dde:	d04a      	beq.n	8015e76 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8015de0:	d80e      	bhi.n	8015e00 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 8015de2:	2a03      	cmp	r2, #3
 8015de4:	d03f      	beq.n	8015e66 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 8015de6:	d804      	bhi.n	8015df2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 8015de8:	2a01      	cmp	r2, #1
 8015dea:	d03e      	beq.n	8015e6a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 8015dec:	d93f      	bls.n	8015e6e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 8015dee:	6b80      	ldr	r0, [r0, #56]	; 0x38
 8015df0:	4770      	bx	lr
 8015df2:	2a09      	cmp	r2, #9
 8015df4:	d03f      	beq.n	8015e76 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8015df6:	d83c      	bhi.n	8015e72 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8015df8:	2a08      	cmp	r2, #8
 8015dfa:	d03a      	beq.n	8015e72 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8015dfc:	2000      	movs	r0, #0
 8015dfe:	4770      	bx	lr
 8015e00:	2a2f      	cmp	r2, #47	; 0x2f
 8015e02:	d024      	beq.n	8015e4e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 8015e04:	d80d      	bhi.n	8015e22 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 8015e06:	2a2d      	cmp	r2, #45	; 0x2d
 8015e08:	d014      	beq.n	8015e34 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 8015e0a:	d826      	bhi.n	8015e5a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 8015e0c:	2a2c      	cmp	r2, #44	; 0x2c
 8015e0e:	d1f5      	bne.n	8015dfc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8015e10:	684b      	ldr	r3, [r1, #4]
 8015e12:	781b      	ldrb	r3, [r3, #0]
 8015e14:	2b01      	cmp	r3, #1
 8015e16:	d018      	beq.n	8015e4a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 8015e18:	d323      	bcc.n	8015e62 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 8015e1a:	2b02      	cmp	r3, #2
 8015e1c:	d1ee      	bne.n	8015dfc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8015e1e:	6880      	ldr	r0, [r0, #8]
 8015e20:	4770      	bx	lr
 8015e22:	2a31      	cmp	r2, #49	; 0x31
 8015e24:	d004      	beq.n	8015e30 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 8015e26:	d328      	bcc.n	8015e7a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8015e28:	2a32      	cmp	r2, #50	; 0x32
 8015e2a:	d026      	beq.n	8015e7a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8015e2c:	2a33      	cmp	r2, #51	; 0x33
 8015e2e:	d1e5      	bne.n	8015dfc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8015e30:	6f00      	ldr	r0, [r0, #112]	; 0x70
 8015e32:	4770      	bx	lr
 8015e34:	684b      	ldr	r3, [r1, #4]
 8015e36:	781b      	ldrb	r3, [r3, #0]
 8015e38:	2b01      	cmp	r3, #1
 8015e3a:	d004      	beq.n	8015e46 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 8015e3c:	d30b      	bcc.n	8015e56 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8015e3e:	2b02      	cmp	r3, #2
 8015e40:	d1dc      	bne.n	8015dfc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8015e42:	6900      	ldr	r0, [r0, #16]
 8015e44:	4770      	bx	lr
 8015e46:	6a00      	ldr	r0, [r0, #32]
 8015e48:	4770      	bx	lr
 8015e4a:	6980      	ldr	r0, [r0, #24]
 8015e4c:	4770      	bx	lr
 8015e4e:	684b      	ldr	r3, [r1, #4]
 8015e50:	781b      	ldrb	r3, [r3, #0]
 8015e52:	2b00      	cmp	r3, #0
 8015e54:	d1d2      	bne.n	8015dfc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8015e56:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8015e58:	4770      	bx	lr
 8015e5a:	684b      	ldr	r3, [r1, #4]
 8015e5c:	781b      	ldrb	r3, [r3, #0]
 8015e5e:	2b00      	cmp	r3, #0
 8015e60:	d1cc      	bne.n	8015dfc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8015e62:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8015e64:	4770      	bx	lr
 8015e66:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8015e68:	4770      	bx	lr
 8015e6a:	6d00      	ldr	r0, [r0, #80]	; 0x50
 8015e6c:	4770      	bx	lr
 8015e6e:	6c00      	ldr	r0, [r0, #64]	; 0x40
 8015e70:	4770      	bx	lr
 8015e72:	6d80      	ldr	r0, [r0, #88]	; 0x58
 8015e74:	4770      	bx	lr
 8015e76:	6e00      	ldr	r0, [r0, #96]	; 0x60
 8015e78:	4770      	bx	lr
 8015e7a:	6e80      	ldr	r0, [r0, #104]	; 0x68
 8015e7c:	4770      	bx	lr
 8015e7e:	2a0b      	cmp	r2, #11
 8015e80:	d049      	beq.n	8015f16 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8015e82:	d80e      	bhi.n	8015ea2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 8015e84:	2a03      	cmp	r2, #3
 8015e86:	d040      	beq.n	8015f0a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 8015e88:	d804      	bhi.n	8015e94 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 8015e8a:	2a01      	cmp	r2, #1
 8015e8c:	d03f      	beq.n	8015f0e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 8015e8e:	d940      	bls.n	8015f12 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 8015e90:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8015e92:	4770      	bx	lr
 8015e94:	2a09      	cmp	r2, #9
 8015e96:	d03e      	beq.n	8015f16 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8015e98:	d801      	bhi.n	8015e9e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 8015e9a:	2a08      	cmp	r2, #8
 8015e9c:	d1ae      	bne.n	8015dfc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8015e9e:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 8015ea0:	4770      	bx	lr
 8015ea2:	2a2f      	cmp	r2, #47	; 0x2f
 8015ea4:	d024      	beq.n	8015ef0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 8015ea6:	d80d      	bhi.n	8015ec4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 8015ea8:	2a2d      	cmp	r2, #45	; 0x2d
 8015eaa:	d014      	beq.n	8015ed6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 8015eac:	d826      	bhi.n	8015efc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 8015eae:	2a2c      	cmp	r2, #44	; 0x2c
 8015eb0:	d1a4      	bne.n	8015dfc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8015eb2:	684b      	ldr	r3, [r1, #4]
 8015eb4:	781b      	ldrb	r3, [r3, #0]
 8015eb6:	2b01      	cmp	r3, #1
 8015eb8:	d018      	beq.n	8015eec <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 8015eba:	d324      	bcc.n	8015f06 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 8015ebc:	2b02      	cmp	r3, #2
 8015ebe:	d19d      	bne.n	8015dfc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8015ec0:	68c0      	ldr	r0, [r0, #12]
 8015ec2:	4770      	bx	lr
 8015ec4:	2a31      	cmp	r2, #49	; 0x31
 8015ec6:	d004      	beq.n	8015ed2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 8015ec8:	d327      	bcc.n	8015f1a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8015eca:	2a32      	cmp	r2, #50	; 0x32
 8015ecc:	d025      	beq.n	8015f1a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8015ece:	2a33      	cmp	r2, #51	; 0x33
 8015ed0:	d194      	bne.n	8015dfc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8015ed2:	6f40      	ldr	r0, [r0, #116]	; 0x74
 8015ed4:	4770      	bx	lr
 8015ed6:	684b      	ldr	r3, [r1, #4]
 8015ed8:	781b      	ldrb	r3, [r3, #0]
 8015eda:	2b01      	cmp	r3, #1
 8015edc:	d004      	beq.n	8015ee8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 8015ede:	d30b      	bcc.n	8015ef8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 8015ee0:	2b02      	cmp	r3, #2
 8015ee2:	d18b      	bne.n	8015dfc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8015ee4:	6940      	ldr	r0, [r0, #20]
 8015ee6:	4770      	bx	lr
 8015ee8:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8015eea:	4770      	bx	lr
 8015eec:	69c0      	ldr	r0, [r0, #28]
 8015eee:	4770      	bx	lr
 8015ef0:	684b      	ldr	r3, [r1, #4]
 8015ef2:	781b      	ldrb	r3, [r3, #0]
 8015ef4:	2b00      	cmp	r3, #0
 8015ef6:	d181      	bne.n	8015dfc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8015ef8:	6b40      	ldr	r0, [r0, #52]	; 0x34
 8015efa:	4770      	bx	lr
 8015efc:	684b      	ldr	r3, [r1, #4]
 8015efe:	781b      	ldrb	r3, [r3, #0]
 8015f00:	2b00      	cmp	r3, #0
 8015f02:	f47f af7b 	bne.w	8015dfc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8015f06:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 8015f08:	4770      	bx	lr
 8015f0a:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8015f0c:	4770      	bx	lr
 8015f0e:	6d40      	ldr	r0, [r0, #84]	; 0x54
 8015f10:	4770      	bx	lr
 8015f12:	6c40      	ldr	r0, [r0, #68]	; 0x44
 8015f14:	4770      	bx	lr
 8015f16:	6e40      	ldr	r0, [r0, #100]	; 0x64
 8015f18:	4770      	bx	lr
 8015f1a:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 8015f1c:	4770      	bx	lr

08015f1e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015f1e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015f22:	b087      	sub	sp, #28
 8015f24:	9815      	ldr	r0, [sp, #84]	; 0x54
 8015f26:	9205      	str	r2, [sp, #20]
 8015f28:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8015f2c:	9202      	str	r2, [sp, #8]
 8015f2e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8015f32:	9101      	str	r1, [sp, #4]
 8015f34:	6841      	ldr	r1, [r0, #4]
 8015f36:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 8015f3a:	fb01 2404 	mla	r4, r1, r4, r2
 8015f3e:	6802      	ldr	r2, [r0, #0]
 8015f40:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8015f44:	f8de 2000 	ldr.w	r2, [lr]
 8015f48:	9203      	str	r2, [sp, #12]
 8015f4a:	f8de 2004 	ldr.w	r2, [lr, #4]
 8015f4e:	3204      	adds	r2, #4
 8015f50:	9204      	str	r2, [sp, #16]
 8015f52:	9a02      	ldr	r2, [sp, #8]
 8015f54:	43d6      	mvns	r6, r2
 8015f56:	b2f6      	uxtb	r6, r6
 8015f58:	9a01      	ldr	r2, [sp, #4]
 8015f5a:	2a00      	cmp	r2, #0
 8015f5c:	dc03      	bgt.n	8015f66 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8015f5e:	9a05      	ldr	r2, [sp, #20]
 8015f60:	2a00      	cmp	r2, #0
 8015f62:	f340 8129 	ble.w	80161b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8015f66:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8015f68:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8015f6c:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8015f70:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8015f74:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8015f76:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8015f7a:	2b00      	cmp	r3, #0
 8015f7c:	dd0e      	ble.n	8015f9c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8015f7e:	1408      	asrs	r0, r1, #16
 8015f80:	d405      	bmi.n	8015f8e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8015f82:	4560      	cmp	r0, ip
 8015f84:	da03      	bge.n	8015f8e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8015f86:	1410      	asrs	r0, r2, #16
 8015f88:	d401      	bmi.n	8015f8e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8015f8a:	42b8      	cmp	r0, r7
 8015f8c:	db07      	blt.n	8015f9e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8015f8e:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8015f90:	4401      	add	r1, r0
 8015f92:	9814      	ldr	r0, [sp, #80]	; 0x50
 8015f94:	3b01      	subs	r3, #1
 8015f96:	4402      	add	r2, r0
 8015f98:	3402      	adds	r4, #2
 8015f9a:	e7ee      	b.n	8015f7a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8015f9c:	d071      	beq.n	8016082 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8015f9e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8015fa0:	1e58      	subs	r0, r3, #1
 8015fa2:	fb05 1500 	mla	r5, r5, r0, r1
 8015fa6:	142d      	asrs	r5, r5, #16
 8015fa8:	d45f      	bmi.n	801606a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8015faa:	4565      	cmp	r5, ip
 8015fac:	da5d      	bge.n	801606a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8015fae:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8015fb0:	fb05 2000 	mla	r0, r5, r0, r2
 8015fb4:	1400      	asrs	r0, r0, #16
 8015fb6:	d458      	bmi.n	801606a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8015fb8:	42b8      	cmp	r0, r7
 8015fba:	da56      	bge.n	801606a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8015fbc:	f8bd b008 	ldrh.w	fp, [sp, #8]
 8015fc0:	4699      	mov	r9, r3
 8015fc2:	46a2      	mov	sl, r4
 8015fc4:	f1b9 0f00 	cmp.w	r9, #0
 8015fc8:	dd57      	ble.n	801607a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 8015fca:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8015fce:	9803      	ldr	r0, [sp, #12]
 8015fd0:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8015fd4:	140d      	asrs	r5, r1, #16
 8015fd6:	fb07 000c 	mla	r0, r7, ip, r0
 8015fda:	f109 39ff 	add.w	r9, r9, #4294967295
 8015fde:	5d40      	ldrb	r0, [r0, r5]
 8015fe0:	9d04      	ldr	r5, [sp, #16]
 8015fe2:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8015fe6:	f8ba 5000 	ldrh.w	r5, [sl]
 8015fea:	122f      	asrs	r7, r5, #8
 8015fec:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8015ff0:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8015ff4:	fb17 f706 	smulbb	r7, r7, r6
 8015ff8:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8015ffc:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8016000:	00ed      	lsls	r5, r5, #3
 8016002:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8016006:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801600a:	10c7      	asrs	r7, r0, #3
 801600c:	b2ed      	uxtb	r5, r5
 801600e:	00c0      	lsls	r0, r0, #3
 8016010:	fb18 f806 	smulbb	r8, r8, r6
 8016014:	fb15 f506 	smulbb	r5, r5, r6
 8016018:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801601c:	b2c0      	uxtb	r0, r0
 801601e:	fa1f fc8c 	uxth.w	ip, ip
 8016022:	fb07 870b 	mla	r7, r7, fp, r8
 8016026:	fb00 500b 	mla	r0, r0, fp, r5
 801602a:	b280      	uxth	r0, r0
 801602c:	b2bf      	uxth	r7, r7
 801602e:	f10c 0501 	add.w	r5, ip, #1
 8016032:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8016036:	f107 0801 	add.w	r8, r7, #1
 801603a:	1c45      	adds	r5, r0, #1
 801603c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8016040:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8016044:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8016046:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801604a:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801604e:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8016052:	ea45 0c0c 	orr.w	ip, r5, ip
 8016056:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801605a:	4401      	add	r1, r0
 801605c:	9814      	ldr	r0, [sp, #80]	; 0x50
 801605e:	ea4c 0c08 	orr.w	ip, ip, r8
 8016062:	f82a cb02 	strh.w	ip, [sl], #2
 8016066:	4402      	add	r2, r0
 8016068:	e7ac      	b.n	8015fc4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801606a:	f8bd a008 	ldrh.w	sl, [sp, #8]
 801606e:	f04f 0800 	mov.w	r8, #0
 8016072:	eb03 0008 	add.w	r0, r3, r8
 8016076:	2800      	cmp	r0, #0
 8016078:	dc41      	bgt.n	80160fe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801607a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801607e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8016082:	9b01      	ldr	r3, [sp, #4]
 8016084:	2b00      	cmp	r3, #0
 8016086:	f340 8097 	ble.w	80161b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801608a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801608e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8016092:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8016096:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016098:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801609c:	ee31 1a05 	vadd.f32	s2, s2, s10
 80160a0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80160a4:	eef0 6a62 	vmov.f32	s13, s5
 80160a8:	ee61 7a27 	vmul.f32	s15, s2, s15
 80160ac:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80160b0:	ee77 2a62 	vsub.f32	s5, s14, s5
 80160b4:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 80160b8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80160bc:	eef0 6a43 	vmov.f32	s13, s6
 80160c0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80160c4:	ee12 2a90 	vmov	r2, s5
 80160c8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80160cc:	fb92 f3f3 	sdiv	r3, r2, r3
 80160d0:	ee13 2a10 	vmov	r2, s6
 80160d4:	9313      	str	r3, [sp, #76]	; 0x4c
 80160d6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80160d8:	fb92 f3f3 	sdiv	r3, r2, r3
 80160dc:	9314      	str	r3, [sp, #80]	; 0x50
 80160de:	9b01      	ldr	r3, [sp, #4]
 80160e0:	9a05      	ldr	r2, [sp, #20]
 80160e2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80160e6:	3b01      	subs	r3, #1
 80160e8:	9301      	str	r3, [sp, #4]
 80160ea:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 80160ee:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80160f0:	eeb0 3a67 	vmov.f32	s6, s15
 80160f4:	bf08      	it	eq
 80160f6:	4613      	moveq	r3, r2
 80160f8:	eef0 2a47 	vmov.f32	s5, s14
 80160fc:	e72c      	b.n	8015f58 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 80160fe:	140f      	asrs	r7, r1, #16
 8016100:	d453      	bmi.n	80161aa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8016102:	f8de 5008 	ldr.w	r5, [lr, #8]
 8016106:	42bd      	cmp	r5, r7
 8016108:	dd4f      	ble.n	80161aa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801610a:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801610e:	d44c      	bmi.n	80161aa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8016110:	f8de 000c 	ldr.w	r0, [lr, #12]
 8016114:	4560      	cmp	r0, ip
 8016116:	dd48      	ble.n	80161aa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8016118:	9803      	ldr	r0, [sp, #12]
 801611a:	b22d      	sxth	r5, r5
 801611c:	fb0c 0505 	mla	r5, ip, r5, r0
 8016120:	5de8      	ldrb	r0, [r5, r7]
 8016122:	9d04      	ldr	r5, [sp, #16]
 8016124:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8016128:	f06f 0501 	mvn.w	r5, #1
 801612c:	fb05 fb08 	mul.w	fp, r5, r8
 8016130:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8016134:	f834 500b 	ldrh.w	r5, [r4, fp]
 8016138:	122f      	asrs	r7, r5, #8
 801613a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801613e:	fb17 f706 	smulbb	r7, r7, r6
 8016142:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8016146:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801614a:	00ed      	lsls	r5, r5, #3
 801614c:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8016150:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8016154:	10c7      	asrs	r7, r0, #3
 8016156:	b2ed      	uxtb	r5, r5
 8016158:	00c0      	lsls	r0, r0, #3
 801615a:	fb19 f906 	smulbb	r9, r9, r6
 801615e:	fb15 f506 	smulbb	r5, r5, r6
 8016162:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8016166:	b2c0      	uxtb	r0, r0
 8016168:	fa1f fc8c 	uxth.w	ip, ip
 801616c:	fb07 970a 	mla	r7, r7, sl, r9
 8016170:	fb00 500a 	mla	r0, r0, sl, r5
 8016174:	b2bf      	uxth	r7, r7
 8016176:	b280      	uxth	r0, r0
 8016178:	f10c 0501 	add.w	r5, ip, #1
 801617c:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8016180:	f107 0901 	add.w	r9, r7, #1
 8016184:	1c45      	adds	r5, r0, #1
 8016186:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801618a:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801618e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8016192:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8016196:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801619a:	ea45 0c0c 	orr.w	ip, r5, ip
 801619e:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80161a2:	ea4c 0c09 	orr.w	ip, ip, r9
 80161a6:	f824 c00b 	strh.w	ip, [r4, fp]
 80161aa:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80161ac:	4401      	add	r1, r0
 80161ae:	9814      	ldr	r0, [sp, #80]	; 0x50
 80161b0:	f108 38ff 	add.w	r8, r8, #4294967295
 80161b4:	4402      	add	r2, r0
 80161b6:	e75c      	b.n	8016072 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 80161b8:	b007      	add	sp, #28
 80161ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080161be <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80161be:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80161c2:	b085      	sub	sp, #20
 80161c4:	4693      	mov	fp, r2
 80161c6:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 80161c8:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80161ca:	6870      	ldr	r0, [r6, #4]
 80161cc:	9100      	str	r1, [sp, #0]
 80161ce:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 80161d2:	fb00 2404 	mla	r4, r0, r4, r2
 80161d6:	6832      	ldr	r2, [r6, #0]
 80161d8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80161dc:	682a      	ldr	r2, [r5, #0]
 80161de:	9201      	str	r2, [sp, #4]
 80161e0:	686a      	ldr	r2, [r5, #4]
 80161e2:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 80161e6:	3204      	adds	r2, #4
 80161e8:	9202      	str	r2, [sp, #8]
 80161ea:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80161ee:	9a00      	ldr	r2, [sp, #0]
 80161f0:	2a00      	cmp	r2, #0
 80161f2:	dc03      	bgt.n	80161fc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80161f4:	f1bb 0f00 	cmp.w	fp, #0
 80161f8:	f340 80a0 	ble.w	801633c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 80161fc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80161fe:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8016202:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8016206:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801620a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801620c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8016210:	2b00      	cmp	r3, #0
 8016212:	dd0c      	ble.n	801622e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8016214:	1406      	asrs	r6, r0, #16
 8016216:	d405      	bmi.n	8016224 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8016218:	454e      	cmp	r6, r9
 801621a:	da03      	bge.n	8016224 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801621c:	1416      	asrs	r6, r2, #16
 801621e:	d401      	bmi.n	8016224 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8016220:	4546      	cmp	r6, r8
 8016222:	db05      	blt.n	8016230 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8016224:	4470      	add	r0, lr
 8016226:	4462      	add	r2, ip
 8016228:	3b01      	subs	r3, #1
 801622a:	3402      	adds	r4, #2
 801622c:	e7f0      	b.n	8016210 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801622e:	d00f      	beq.n	8016250 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8016230:	1e5e      	subs	r6, r3, #1
 8016232:	fb0e 0706 	mla	r7, lr, r6, r0
 8016236:	143f      	asrs	r7, r7, #16
 8016238:	d541      	bpl.n	80162be <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 801623a:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801623e:	4698      	mov	r8, r3
 8016240:	9603      	str	r6, [sp, #12]
 8016242:	f1b8 0f00 	cmp.w	r8, #0
 8016246:	dc59      	bgt.n	80162fc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8016248:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801624c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8016250:	9b00      	ldr	r3, [sp, #0]
 8016252:	2b00      	cmp	r3, #0
 8016254:	dd72      	ble.n	801633c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8016256:	ee30 0a04 	vadd.f32	s0, s0, s8
 801625a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801625e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8016262:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016264:	ee31 1a05 	vadd.f32	s2, s2, s10
 8016268:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801626c:	eeb0 6a62 	vmov.f32	s12, s5
 8016270:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016274:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016278:	ee77 2a62 	vsub.f32	s5, s14, s5
 801627c:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8016280:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016284:	eeb0 6a43 	vmov.f32	s12, s6
 8016288:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801628c:	ee12 2a90 	vmov	r2, s5
 8016290:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016294:	fb92 fef3 	sdiv	lr, r2, r3
 8016298:	ee13 2a10 	vmov	r2, s6
 801629c:	fb92 fcf3 	sdiv	ip, r2, r3
 80162a0:	9b00      	ldr	r3, [sp, #0]
 80162a2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80162a6:	3b01      	subs	r3, #1
 80162a8:	9300      	str	r3, [sp, #0]
 80162aa:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80162ae:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80162b0:	eeb0 3a67 	vmov.f32	s6, s15
 80162b4:	bf08      	it	eq
 80162b6:	465b      	moveq	r3, fp
 80162b8:	eef0 2a47 	vmov.f32	s5, s14
 80162bc:	e797      	b.n	80161ee <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 80162be:	454f      	cmp	r7, r9
 80162c0:	dabb      	bge.n	801623a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80162c2:	fb0c 2606 	mla	r6, ip, r6, r2
 80162c6:	1436      	asrs	r6, r6, #16
 80162c8:	d4b7      	bmi.n	801623a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80162ca:	4546      	cmp	r6, r8
 80162cc:	dab5      	bge.n	801623a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80162ce:	461e      	mov	r6, r3
 80162d0:	46a0      	mov	r8, r4
 80162d2:	2e00      	cmp	r6, #0
 80162d4:	ddb8      	ble.n	8016248 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80162d6:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 80162da:	9901      	ldr	r1, [sp, #4]
 80162dc:	1417      	asrs	r7, r2, #16
 80162de:	ea4f 4920 	mov.w	r9, r0, asr #16
 80162e2:	fb0a 1707 	mla	r7, sl, r7, r1
 80162e6:	9902      	ldr	r1, [sp, #8]
 80162e8:	f817 7009 	ldrb.w	r7, [r7, r9]
 80162ec:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 80162f0:	f828 7b02 	strh.w	r7, [r8], #2
 80162f4:	4470      	add	r0, lr
 80162f6:	4462      	add	r2, ip
 80162f8:	3e01      	subs	r6, #1
 80162fa:	e7ea      	b.n	80162d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 80162fc:	ea5f 4920 	movs.w	r9, r0, asr #16
 8016300:	d417      	bmi.n	8016332 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8016302:	68ae      	ldr	r6, [r5, #8]
 8016304:	454e      	cmp	r6, r9
 8016306:	dd14      	ble.n	8016332 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8016308:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801630c:	d411      	bmi.n	8016332 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801630e:	68ef      	ldr	r7, [r5, #12]
 8016310:	4557      	cmp	r7, sl
 8016312:	dd0e      	ble.n	8016332 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8016314:	9f01      	ldr	r7, [sp, #4]
 8016316:	b236      	sxth	r6, r6
 8016318:	fb0a 7606 	mla	r6, sl, r6, r7
 801631c:	9f02      	ldr	r7, [sp, #8]
 801631e:	f816 6009 	ldrb.w	r6, [r6, r9]
 8016322:	f06f 0101 	mvn.w	r1, #1
 8016326:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801632a:	fb01 f608 	mul.w	r6, r1, r8
 801632e:	9903      	ldr	r1, [sp, #12]
 8016330:	538f      	strh	r7, [r1, r6]
 8016332:	4470      	add	r0, lr
 8016334:	4462      	add	r2, ip
 8016336:	f108 38ff 	add.w	r8, r8, #4294967295
 801633a:	e782      	b.n	8016242 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801633c:	b005      	add	sp, #20
 801633e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016342 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016342:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016346:	b087      	sub	sp, #28
 8016348:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801634a:	9205      	str	r2, [sp, #20]
 801634c:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8016350:	9203      	str	r2, [sp, #12]
 8016352:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 8016356:	9102      	str	r1, [sp, #8]
 8016358:	6861      	ldr	r1, [r4, #4]
 801635a:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 801635e:	fb01 2000 	mla	r0, r1, r0, r2
 8016362:	6822      	ldr	r2, [r4, #0]
 8016364:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 8016368:	9200      	str	r2, [sp, #0]
 801636a:	f8dc 2000 	ldr.w	r2, [ip]
 801636e:	9204      	str	r2, [sp, #16]
 8016370:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8016374:	3204      	adds	r2, #4
 8016376:	9201      	str	r2, [sp, #4]
 8016378:	9a03      	ldr	r2, [sp, #12]
 801637a:	43d5      	mvns	r5, r2
 801637c:	b2ed      	uxtb	r5, r5
 801637e:	9a02      	ldr	r2, [sp, #8]
 8016380:	2a00      	cmp	r2, #0
 8016382:	dc03      	bgt.n	801638c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8016384:	9a05      	ldr	r2, [sp, #20]
 8016386:	2a00      	cmp	r2, #0
 8016388:	f340 812c 	ble.w	80165e4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801638c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801638e:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 8016392:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 8016396:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801639a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801639c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80163a0:	2b00      	cmp	r3, #0
 80163a2:	dd10      	ble.n	80163c6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80163a4:	140c      	asrs	r4, r1, #16
 80163a6:	d405      	bmi.n	80163b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80163a8:	4574      	cmp	r4, lr
 80163aa:	da03      	bge.n	80163b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80163ac:	1414      	asrs	r4, r2, #16
 80163ae:	d401      	bmi.n	80163b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80163b0:	42bc      	cmp	r4, r7
 80163b2:	db09      	blt.n	80163c8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 80163b4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80163b6:	9800      	ldr	r0, [sp, #0]
 80163b8:	4421      	add	r1, r4
 80163ba:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80163bc:	3002      	adds	r0, #2
 80163be:	4422      	add	r2, r4
 80163c0:	3b01      	subs	r3, #1
 80163c2:	9000      	str	r0, [sp, #0]
 80163c4:	e7ec      	b.n	80163a0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 80163c6:	d071      	beq.n	80164ac <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 80163c8:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 80163ca:	1e5c      	subs	r4, r3, #1
 80163cc:	fb06 1604 	mla	r6, r6, r4, r1
 80163d0:	1436      	asrs	r6, r6, #16
 80163d2:	d45d      	bmi.n	8016490 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80163d4:	4576      	cmp	r6, lr
 80163d6:	da5b      	bge.n	8016490 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80163d8:	9e14      	ldr	r6, [sp, #80]	; 0x50
 80163da:	fb06 2404 	mla	r4, r6, r4, r2
 80163de:	1424      	asrs	r4, r4, #16
 80163e0:	d456      	bmi.n	8016490 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80163e2:	42bc      	cmp	r4, r7
 80163e4:	da54      	bge.n	8016490 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80163e6:	f8dd 9000 	ldr.w	r9, [sp]
 80163ea:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 80163ee:	4698      	mov	r8, r3
 80163f0:	f1b8 0f00 	cmp.w	r8, #0
 80163f4:	dd54      	ble.n	80164a0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 80163f6:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 80163fa:	9804      	ldr	r0, [sp, #16]
 80163fc:	1414      	asrs	r4, r2, #16
 80163fe:	fb07 0404 	mla	r4, r7, r4, r0
 8016402:	140e      	asrs	r6, r1, #16
 8016404:	9801      	ldr	r0, [sp, #4]
 8016406:	f814 e006 	ldrb.w	lr, [r4, r6]
 801640a:	f8b9 4000 	ldrh.w	r4, [r9]
 801640e:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8016412:	eb00 0b0e 	add.w	fp, r0, lr
 8016416:	1227      	asrs	r7, r4, #8
 8016418:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801641c:	f89b b001 	ldrb.w	fp, [fp, #1]
 8016420:	f810 e00e 	ldrb.w	lr, [r0, lr]
 8016424:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8016426:	fb16 f60a 	smulbb	r6, r6, sl
 801642a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801642e:	fb07 6705 	mla	r7, r7, r5, r6
 8016432:	10e6      	asrs	r6, r4, #3
 8016434:	00e4      	lsls	r4, r4, #3
 8016436:	b2e4      	uxtb	r4, r4
 8016438:	fb1b fb0a 	smulbb	fp, fp, sl
 801643c:	fb14 f405 	smulbb	r4, r4, r5
 8016440:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8016444:	b2bf      	uxth	r7, r7
 8016446:	fb06 b605 	mla	r6, r6, r5, fp
 801644a:	fb0e 4e0a 	mla	lr, lr, sl, r4
 801644e:	b2b6      	uxth	r6, r6
 8016450:	fa1f fe8e 	uxth.w	lr, lr
 8016454:	1c7c      	adds	r4, r7, #1
 8016456:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801645a:	f106 0b01 	add.w	fp, r6, #1
 801645e:	f10e 0401 	add.w	r4, lr, #1
 8016462:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 8016466:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801646a:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801646e:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8016472:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8016476:	4327      	orrs	r7, r4
 8016478:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801647c:	4401      	add	r1, r0
 801647e:	9814      	ldr	r0, [sp, #80]	; 0x50
 8016480:	ea47 070b 	orr.w	r7, r7, fp
 8016484:	f829 7b02 	strh.w	r7, [r9], #2
 8016488:	4402      	add	r2, r0
 801648a:	f108 38ff 	add.w	r8, r8, #4294967295
 801648e:	e7af      	b.n	80163f0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8016490:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 8016494:	f04f 0e00 	mov.w	lr, #0
 8016498:	eb03 040e 	add.w	r4, r3, lr
 801649c:	2c00      	cmp	r4, #0
 801649e:	dc43      	bgt.n	8016528 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 80164a0:	9a00      	ldr	r2, [sp, #0]
 80164a2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80164a6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80164aa:	9300      	str	r3, [sp, #0]
 80164ac:	9b02      	ldr	r3, [sp, #8]
 80164ae:	2b00      	cmp	r3, #0
 80164b0:	f340 8098 	ble.w	80165e4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 80164b4:	ee30 0a04 	vadd.f32	s0, s0, s8
 80164b8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80164bc:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80164c0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80164c2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80164c6:	ee31 1a05 	vadd.f32	s2, s2, s10
 80164ca:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80164ce:	eef0 6a62 	vmov.f32	s13, s5
 80164d2:	ee61 7a27 	vmul.f32	s15, s2, s15
 80164d6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80164da:	ee77 2a62 	vsub.f32	s5, s14, s5
 80164de:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 80164e2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80164e6:	eef0 6a43 	vmov.f32	s13, s6
 80164ea:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80164ee:	ee12 2a90 	vmov	r2, s5
 80164f2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80164f6:	fb92 f3f3 	sdiv	r3, r2, r3
 80164fa:	ee13 2a10 	vmov	r2, s6
 80164fe:	9313      	str	r3, [sp, #76]	; 0x4c
 8016500:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016502:	fb92 f3f3 	sdiv	r3, r2, r3
 8016506:	9314      	str	r3, [sp, #80]	; 0x50
 8016508:	9b02      	ldr	r3, [sp, #8]
 801650a:	9a05      	ldr	r2, [sp, #20]
 801650c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016510:	3b01      	subs	r3, #1
 8016512:	9302      	str	r3, [sp, #8]
 8016514:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 8016518:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801651a:	eeb0 3a67 	vmov.f32	s6, s15
 801651e:	bf08      	it	eq
 8016520:	4613      	moveq	r3, r2
 8016522:	eef0 2a47 	vmov.f32	s5, s14
 8016526:	e72a      	b.n	801637e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8016528:	140f      	asrs	r7, r1, #16
 801652a:	d454      	bmi.n	80165d6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801652c:	f8dc 6008 	ldr.w	r6, [ip, #8]
 8016530:	42be      	cmp	r6, r7
 8016532:	dd50      	ble.n	80165d6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8016534:	ea5f 4822 	movs.w	r8, r2, asr #16
 8016538:	d44d      	bmi.n	80165d6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801653a:	f8dc 400c 	ldr.w	r4, [ip, #12]
 801653e:	4544      	cmp	r4, r8
 8016540:	dd49      	ble.n	80165d6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8016542:	9c04      	ldr	r4, [sp, #16]
 8016544:	b236      	sxth	r6, r6
 8016546:	fb08 4606 	mla	r6, r8, r6, r4
 801654a:	f06f 0001 	mvn.w	r0, #1
 801654e:	f816 8007 	ldrb.w	r8, [r6, r7]
 8016552:	9c01      	ldr	r4, [sp, #4]
 8016554:	fb00 fa0e 	mul.w	sl, r0, lr
 8016558:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801655c:	9800      	ldr	r0, [sp, #0]
 801655e:	eb04 0b08 	add.w	fp, r4, r8
 8016562:	f830 400a 	ldrh.w	r4, [r0, sl]
 8016566:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801656a:	9801      	ldr	r0, [sp, #4]
 801656c:	f89b b001 	ldrb.w	fp, [fp, #1]
 8016570:	f810 8008 	ldrb.w	r8, [r0, r8]
 8016574:	9800      	ldr	r0, [sp, #0]
 8016576:	1227      	asrs	r7, r4, #8
 8016578:	fb16 f609 	smulbb	r6, r6, r9
 801657c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8016580:	fb07 6705 	mla	r7, r7, r5, r6
 8016584:	10e6      	asrs	r6, r4, #3
 8016586:	00e4      	lsls	r4, r4, #3
 8016588:	b2e4      	uxtb	r4, r4
 801658a:	fb1b fb09 	smulbb	fp, fp, r9
 801658e:	fb14 f405 	smulbb	r4, r4, r5
 8016592:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8016596:	b2bf      	uxth	r7, r7
 8016598:	fb06 b605 	mla	r6, r6, r5, fp
 801659c:	fb08 4809 	mla	r8, r8, r9, r4
 80165a0:	b2b6      	uxth	r6, r6
 80165a2:	fa1f f888 	uxth.w	r8, r8
 80165a6:	1c7c      	adds	r4, r7, #1
 80165a8:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 80165ac:	f106 0b01 	add.w	fp, r6, #1
 80165b0:	f108 0401 	add.w	r4, r8, #1
 80165b4:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 80165b8:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 80165bc:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80165c0:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 80165c4:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 80165c8:	4327      	orrs	r7, r4
 80165ca:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 80165ce:	ea47 070b 	orr.w	r7, r7, fp
 80165d2:	f820 700a 	strh.w	r7, [r0, sl]
 80165d6:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80165d8:	4401      	add	r1, r0
 80165da:	9814      	ldr	r0, [sp, #80]	; 0x50
 80165dc:	f10e 3eff 	add.w	lr, lr, #4294967295
 80165e0:	4402      	add	r2, r0
 80165e2:	e759      	b.n	8016498 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 80165e4:	b007      	add	sp, #28
 80165e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

080165ec <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80165ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80165f0:	b085      	sub	sp, #20
 80165f2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80165f6:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 80165f8:	9203      	str	r2, [sp, #12]
 80165fa:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 80165fe:	6870      	ldr	r0, [r6, #4]
 8016600:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8016602:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 8016606:	686f      	ldr	r7, [r5, #4]
 8016608:	9101      	str	r1, [sp, #4]
 801660a:	fb00 2404 	mla	r4, r0, r4, r2
 801660e:	6832      	ldr	r2, [r6, #0]
 8016610:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8016614:	682a      	ldr	r2, [r5, #0]
 8016616:	9202      	str	r2, [sp, #8]
 8016618:	3704      	adds	r7, #4
 801661a:	9a01      	ldr	r2, [sp, #4]
 801661c:	2a00      	cmp	r2, #0
 801661e:	dc03      	bgt.n	8016628 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8016620:	9a03      	ldr	r2, [sp, #12]
 8016622:	2a00      	cmp	r2, #0
 8016624:	f340 80cc 	ble.w	80167c0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8016628:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801662a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801662e:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8016632:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8016636:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8016638:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801663c:	2b00      	cmp	r3, #0
 801663e:	dd0d      	ble.n	801665c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8016640:	1406      	asrs	r6, r0, #16
 8016642:	d405      	bmi.n	8016650 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8016644:	454e      	cmp	r6, r9
 8016646:	da03      	bge.n	8016650 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8016648:	1416      	asrs	r6, r2, #16
 801664a:	d401      	bmi.n	8016650 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801664c:	4546      	cmp	r6, r8
 801664e:	db06      	blt.n	801665e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8016650:	9e12      	ldr	r6, [sp, #72]	; 0x48
 8016652:	4460      	add	r0, ip
 8016654:	4432      	add	r2, r6
 8016656:	3b01      	subs	r3, #1
 8016658:	3402      	adds	r4, #2
 801665a:	e7ef      	b.n	801663c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 801665c:	d00f      	beq.n	801667e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801665e:	1e5e      	subs	r6, r3, #1
 8016660:	fb0c 0e06 	mla	lr, ip, r6, r0
 8016664:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 8016668:	d543      	bpl.n	80166f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801666a:	4698      	mov	r8, r3
 801666c:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 8016670:	f1b8 0f00 	cmp.w	r8, #0
 8016674:	dc71      	bgt.n	801675a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 8016676:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801667a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801667e:	9b01      	ldr	r3, [sp, #4]
 8016680:	2b00      	cmp	r3, #0
 8016682:	f340 809d 	ble.w	80167c0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8016686:	ee30 0a04 	vadd.f32	s0, s0, s8
 801668a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801668e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8016692:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016694:	ee31 1a05 	vadd.f32	s2, s2, s10
 8016698:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801669c:	eeb0 6a62 	vmov.f32	s12, s5
 80166a0:	ee61 7a27 	vmul.f32	s15, s2, s15
 80166a4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80166a8:	ee77 2a62 	vsub.f32	s5, s14, s5
 80166ac:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 80166b0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80166b4:	eeb0 6a43 	vmov.f32	s12, s6
 80166b8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80166bc:	ee12 2a90 	vmov	r2, s5
 80166c0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80166c4:	fb92 fcf3 	sdiv	ip, r2, r3
 80166c8:	ee13 2a10 	vmov	r2, s6
 80166cc:	fb92 f3f3 	sdiv	r3, r2, r3
 80166d0:	9312      	str	r3, [sp, #72]	; 0x48
 80166d2:	9b01      	ldr	r3, [sp, #4]
 80166d4:	9a03      	ldr	r2, [sp, #12]
 80166d6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80166da:	3b01      	subs	r3, #1
 80166dc:	9301      	str	r3, [sp, #4]
 80166de:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80166e2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80166e4:	eeb0 3a67 	vmov.f32	s6, s15
 80166e8:	bf08      	it	eq
 80166ea:	4613      	moveq	r3, r2
 80166ec:	eef0 2a47 	vmov.f32	s5, s14
 80166f0:	e793      	b.n	801661a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 80166f2:	45ce      	cmp	lr, r9
 80166f4:	dab9      	bge.n	801666a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80166f6:	9912      	ldr	r1, [sp, #72]	; 0x48
 80166f8:	fb01 2606 	mla	r6, r1, r6, r2
 80166fc:	1436      	asrs	r6, r6, #16
 80166fe:	d4b4      	bmi.n	801666a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8016700:	4546      	cmp	r6, r8
 8016702:	dab2      	bge.n	801666a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8016704:	4698      	mov	r8, r3
 8016706:	46a2      	mov	sl, r4
 8016708:	f1b8 0f00 	cmp.w	r8, #0
 801670c:	ddb3      	ble.n	8016676 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801670e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8016712:	9902      	ldr	r1, [sp, #8]
 8016714:	1416      	asrs	r6, r2, #16
 8016716:	fb09 1606 	mla	r6, r9, r6, r1
 801671a:	ea4f 4e20 	mov.w	lr, r0, asr #16
 801671e:	492a      	ldr	r1, [pc, #168]	; (80167c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 8016720:	f816 e00e 	ldrb.w	lr, [r6, lr]
 8016724:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8016728:	eb07 0b0e 	add.w	fp, r7, lr
 801672c:	4460      	add	r0, ip
 801672e:	f89b 6001 	ldrb.w	r6, [fp, #1]
 8016732:	f89b 9002 	ldrb.w	r9, [fp, #2]
 8016736:	00f6      	lsls	r6, r6, #3
 8016738:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 801673c:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8016740:	ea49 0606 	orr.w	r6, r9, r6
 8016744:	f817 900e 	ldrb.w	r9, [r7, lr]
 8016748:	9912      	ldr	r1, [sp, #72]	; 0x48
 801674a:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 801674e:	f82a 6b02 	strh.w	r6, [sl], #2
 8016752:	440a      	add	r2, r1
 8016754:	f108 38ff 	add.w	r8, r8, #4294967295
 8016758:	e7d6      	b.n	8016708 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801675a:	ea5f 4920 	movs.w	r9, r0, asr #16
 801675e:	d429      	bmi.n	80167b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8016760:	68ae      	ldr	r6, [r5, #8]
 8016762:	454e      	cmp	r6, r9
 8016764:	dd26      	ble.n	80167b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8016766:	ea5f 4b22 	movs.w	fp, r2, asr #16
 801676a:	d423      	bmi.n	80167b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801676c:	68e9      	ldr	r1, [r5, #12]
 801676e:	4559      	cmp	r1, fp
 8016770:	dd20      	ble.n	80167b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8016772:	9902      	ldr	r1, [sp, #8]
 8016774:	fa0f fe86 	sxth.w	lr, r6
 8016778:	fb0b 1e0e 	mla	lr, fp, lr, r1
 801677c:	f06f 0101 	mvn.w	r1, #1
 8016780:	f81e e009 	ldrb.w	lr, [lr, r9]
 8016784:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8016788:	eb07 060e 	add.w	r6, r7, lr
 801678c:	fb01 f908 	mul.w	r9, r1, r8
 8016790:	f896 b002 	ldrb.w	fp, [r6, #2]
 8016794:	7876      	ldrb	r6, [r6, #1]
 8016796:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 801679a:	00f6      	lsls	r6, r6, #3
 801679c:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 80167a0:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80167a4:	ea4b 0606 	orr.w	r6, fp, r6
 80167a8:	f817 b00e 	ldrb.w	fp, [r7, lr]
 80167ac:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 80167b0:	f82a 6009 	strh.w	r6, [sl, r9]
 80167b4:	9912      	ldr	r1, [sp, #72]	; 0x48
 80167b6:	4460      	add	r0, ip
 80167b8:	440a      	add	r2, r1
 80167ba:	f108 38ff 	add.w	r8, r8, #4294967295
 80167be:	e757      	b.n	8016670 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80167c0:	b005      	add	sp, #20
 80167c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80167c6:	bf00      	nop
 80167c8:	fffff800 	.word	0xfffff800

080167cc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80167cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80167d0:	b087      	sub	sp, #28
 80167d2:	468b      	mov	fp, r1
 80167d4:	9815      	ldr	r0, [sp, #84]	; 0x54
 80167d6:	9204      	str	r2, [sp, #16]
 80167d8:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80167dc:	9205      	str	r2, [sp, #20]
 80167de:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 80167e2:	6841      	ldr	r1, [r0, #4]
 80167e4:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 80167e8:	fb01 2404 	mla	r4, r1, r4, r2
 80167ec:	6802      	ldr	r2, [r0, #0]
 80167ee:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80167f2:	f8dc 2000 	ldr.w	r2, [ip]
 80167f6:	9201      	str	r2, [sp, #4]
 80167f8:	f8dc 2004 	ldr.w	r2, [ip, #4]
 80167fc:	3204      	adds	r2, #4
 80167fe:	9202      	str	r2, [sp, #8]
 8016800:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8016804:	f1bb 0f00 	cmp.w	fp, #0
 8016808:	dc03      	bgt.n	8016812 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801680a:	9a04      	ldr	r2, [sp, #16]
 801680c:	2a00      	cmp	r2, #0
 801680e:	f340 8138 	ble.w	8016a82 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8016812:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8016814:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8016818:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 801681c:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8016820:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8016822:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8016826:	2b00      	cmp	r3, #0
 8016828:	dd0e      	ble.n	8016848 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801682a:	1402      	asrs	r2, r0, #16
 801682c:	d405      	bmi.n	801683a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801682e:	42ba      	cmp	r2, r7
 8016830:	da03      	bge.n	801683a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8016832:	140a      	asrs	r2, r1, #16
 8016834:	d401      	bmi.n	801683a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8016836:	42b2      	cmp	r2, r6
 8016838:	db07      	blt.n	801684a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801683a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801683c:	4410      	add	r0, r2
 801683e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8016840:	3b01      	subs	r3, #1
 8016842:	4411      	add	r1, r2
 8016844:	3402      	adds	r4, #2
 8016846:	e7ee      	b.n	8016826 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8016848:	d019      	beq.n	801687e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801684a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801684c:	1e5a      	subs	r2, r3, #1
 801684e:	fb05 0502 	mla	r5, r5, r2, r0
 8016852:	142d      	asrs	r5, r5, #16
 8016854:	d409      	bmi.n	801686a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8016856:	42bd      	cmp	r5, r7
 8016858:	da07      	bge.n	801686a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801685a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801685c:	fb05 1202 	mla	r2, r5, r2, r1
 8016860:	1412      	asrs	r2, r2, #16
 8016862:	d402      	bmi.n	801686a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8016864:	42b2      	cmp	r2, r6
 8016866:	f2c0 80ac 	blt.w	80169c2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 801686a:	f04f 0e00 	mov.w	lr, #0
 801686e:	eb03 020e 	add.w	r2, r3, lr
 8016872:	2a00      	cmp	r2, #0
 8016874:	dc3e      	bgt.n	80168f4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8016876:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801687a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801687e:	f1bb 0f00 	cmp.w	fp, #0
 8016882:	f340 80fe 	ble.w	8016a82 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8016886:	ee30 0a04 	vadd.f32	s0, s0, s8
 801688a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801688e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8016892:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016894:	f1bb 0b01 	subs.w	fp, fp, #1
 8016898:	ee31 1a05 	vadd.f32	s2, s2, s10
 801689c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80168a0:	eeb0 6a62 	vmov.f32	s12, s5
 80168a4:	ee61 7a27 	vmul.f32	s15, s2, s15
 80168a8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80168ac:	ee77 2a62 	vsub.f32	s5, s14, s5
 80168b0:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 80168b4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80168b8:	eeb0 6a43 	vmov.f32	s12, s6
 80168bc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80168c0:	ee12 2a90 	vmov	r2, s5
 80168c4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80168c8:	fb92 f3f3 	sdiv	r3, r2, r3
 80168cc:	ee13 2a10 	vmov	r2, s6
 80168d0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80168d4:	9313      	str	r3, [sp, #76]	; 0x4c
 80168d6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80168d8:	fb92 f3f3 	sdiv	r3, r2, r3
 80168dc:	9a04      	ldr	r2, [sp, #16]
 80168de:	9314      	str	r3, [sp, #80]	; 0x50
 80168e0:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 80168e4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80168e6:	eeb0 3a67 	vmov.f32	s6, s15
 80168ea:	bf08      	it	eq
 80168ec:	4613      	moveq	r3, r2
 80168ee:	eef0 2a47 	vmov.f32	s5, s14
 80168f2:	e787      	b.n	8016804 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80168f4:	1406      	asrs	r6, r0, #16
 80168f6:	d45d      	bmi.n	80169b4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80168f8:	f8dc 5008 	ldr.w	r5, [ip, #8]
 80168fc:	42b5      	cmp	r5, r6
 80168fe:	dd59      	ble.n	80169b4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8016900:	140f      	asrs	r7, r1, #16
 8016902:	d457      	bmi.n	80169b4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8016904:	f8dc 200c 	ldr.w	r2, [ip, #12]
 8016908:	42ba      	cmp	r2, r7
 801690a:	dd53      	ble.n	80169b4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801690c:	9a01      	ldr	r2, [sp, #4]
 801690e:	b22d      	sxth	r5, r5
 8016910:	fb07 2505 	mla	r5, r7, r5, r2
 8016914:	5daa      	ldrb	r2, [r5, r6]
 8016916:	9d02      	ldr	r5, [sp, #8]
 8016918:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801691c:	0e2e      	lsrs	r6, r5, #24
 801691e:	d049      	beq.n	80169b4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8016920:	f06f 0201 	mvn.w	r2, #1
 8016924:	fb02 f20e 	mul.w	r2, r2, lr
 8016928:	9203      	str	r2, [sp, #12]
 801692a:	f834 8002 	ldrh.w	r8, [r4, r2]
 801692e:	9a05      	ldr	r2, [sp, #20]
 8016930:	4356      	muls	r6, r2
 8016932:	1c72      	adds	r2, r6, #1
 8016934:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8016938:	1212      	asrs	r2, r2, #8
 801693a:	fa1f f982 	uxth.w	r9, r2
 801693e:	ea4f 2728 	mov.w	r7, r8, asr #8
 8016942:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8016946:	43d2      	mvns	r2, r2
 8016948:	b2d2      	uxtb	r2, r2
 801694a:	fb16 f609 	smulbb	r6, r6, r9
 801694e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8016952:	fb07 6702 	mla	r7, r7, r2, r6
 8016956:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801695a:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801695e:	b2ed      	uxtb	r5, r5
 8016960:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8016964:	fa5f f888 	uxtb.w	r8, r8
 8016968:	fb15 f509 	smulbb	r5, r5, r9
 801696c:	fb08 5502 	mla	r5, r8, r2, r5
 8016970:	b2bf      	uxth	r7, r7
 8016972:	fb1a fa09 	smulbb	sl, sl, r9
 8016976:	b2ad      	uxth	r5, r5
 8016978:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801697c:	fb06 a602 	mla	r6, r6, r2, sl
 8016980:	1c7a      	adds	r2, r7, #1
 8016982:	f105 0a01 	add.w	sl, r5, #1
 8016986:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801698a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801698e:	b2b6      	uxth	r6, r6
 8016990:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8016994:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8016998:	ea4a 0707 	orr.w	r7, sl, r7
 801699c:	f106 0a01 	add.w	sl, r6, #1
 80169a0:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80169a4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80169a8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80169ac:	9a03      	ldr	r2, [sp, #12]
 80169ae:	ea47 070a 	orr.w	r7, r7, sl
 80169b2:	52a7      	strh	r7, [r4, r2]
 80169b4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80169b6:	4410      	add	r0, r2
 80169b8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80169ba:	f10e 3eff 	add.w	lr, lr, #4294967295
 80169be:	4411      	add	r1, r2
 80169c0:	e755      	b.n	801686e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80169c2:	f04f 0800 	mov.w	r8, #0
 80169c6:	eba3 0208 	sub.w	r2, r3, r8
 80169ca:	2a00      	cmp	r2, #0
 80169cc:	f77f af53 	ble.w	8016876 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 80169d0:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 80169d4:	9f01      	ldr	r7, [sp, #4]
 80169d6:	140a      	asrs	r2, r1, #16
 80169d8:	1405      	asrs	r5, r0, #16
 80169da:	fb06 7202 	mla	r2, r6, r2, r7
 80169de:	5d52      	ldrb	r2, [r2, r5]
 80169e0:	9d02      	ldr	r5, [sp, #8]
 80169e2:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 80169e6:	0e2e      	lsrs	r6, r5, #24
 80169e8:	d044      	beq.n	8016a74 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 80169ea:	9a05      	ldr	r2, [sp, #20]
 80169ec:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 80169f0:	4356      	muls	r6, r2
 80169f2:	1c72      	adds	r2, r6, #1
 80169f4:	eb02 2226 	add.w	r2, r2, r6, asr #8
 80169f8:	1212      	asrs	r2, r2, #8
 80169fa:	fa1f f982 	uxth.w	r9, r2
 80169fe:	ea4f 272e 	mov.w	r7, lr, asr #8
 8016a02:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8016a06:	43d2      	mvns	r2, r2
 8016a08:	b2d2      	uxtb	r2, r2
 8016a0a:	fb16 f609 	smulbb	r6, r6, r9
 8016a0e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8016a12:	fb07 6702 	mla	r7, r7, r2, r6
 8016a16:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8016a1a:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8016a1e:	b2ed      	uxtb	r5, r5
 8016a20:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8016a24:	fa5f fe8e 	uxtb.w	lr, lr
 8016a28:	fb15 f509 	smulbb	r5, r5, r9
 8016a2c:	fb0e 5502 	mla	r5, lr, r2, r5
 8016a30:	b2bf      	uxth	r7, r7
 8016a32:	fb1a fa09 	smulbb	sl, sl, r9
 8016a36:	b2ad      	uxth	r5, r5
 8016a38:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8016a3c:	fb06 a602 	mla	r6, r6, r2, sl
 8016a40:	1c7a      	adds	r2, r7, #1
 8016a42:	f105 0a01 	add.w	sl, r5, #1
 8016a46:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8016a4a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8016a4e:	b2b6      	uxth	r6, r6
 8016a50:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8016a54:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8016a58:	ea4a 0707 	orr.w	r7, sl, r7
 8016a5c:	f106 0a01 	add.w	sl, r6, #1
 8016a60:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8016a64:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016a68:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8016a6c:	ea47 070a 	orr.w	r7, r7, sl
 8016a70:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8016a74:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8016a76:	4410      	add	r0, r2
 8016a78:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8016a7a:	f108 0801 	add.w	r8, r8, #1
 8016a7e:	4411      	add	r1, r2
 8016a80:	e7a1      	b.n	80169c6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8016a82:	b007      	add	sp, #28
 8016a84:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016a88 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016a88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016a8c:	b085      	sub	sp, #20
 8016a8e:	468b      	mov	fp, r1
 8016a90:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8016a92:	9203      	str	r2, [sp, #12]
 8016a94:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8016a98:	6841      	ldr	r1, [r0, #4]
 8016a9a:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 8016a9e:	fb01 2404 	mla	r4, r1, r4, r2
 8016aa2:	6802      	ldr	r2, [r0, #0]
 8016aa4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8016aa8:	f8de 2000 	ldr.w	r2, [lr]
 8016aac:	9200      	str	r2, [sp, #0]
 8016aae:	f8de 2004 	ldr.w	r2, [lr, #4]
 8016ab2:	3204      	adds	r2, #4
 8016ab4:	9201      	str	r2, [sp, #4]
 8016ab6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8016aba:	f1bb 0f00 	cmp.w	fp, #0
 8016abe:	dc03      	bgt.n	8016ac8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8016ac0:	9a03      	ldr	r2, [sp, #12]
 8016ac2:	2a00      	cmp	r2, #0
 8016ac4:	f340 8153 	ble.w	8016d6e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8016ac8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8016aca:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8016ace:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8016ad2:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8016ad6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8016ad8:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8016adc:	2b00      	cmp	r3, #0
 8016ade:	dd0e      	ble.n	8016afe <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8016ae0:	1408      	asrs	r0, r1, #16
 8016ae2:	d405      	bmi.n	8016af0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8016ae4:	42b8      	cmp	r0, r7
 8016ae6:	da03      	bge.n	8016af0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8016ae8:	1410      	asrs	r0, r2, #16
 8016aea:	d401      	bmi.n	8016af0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8016aec:	42b0      	cmp	r0, r6
 8016aee:	db07      	blt.n	8016b00 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8016af0:	9811      	ldr	r0, [sp, #68]	; 0x44
 8016af2:	4401      	add	r1, r0
 8016af4:	9812      	ldr	r0, [sp, #72]	; 0x48
 8016af6:	3b01      	subs	r3, #1
 8016af8:	4402      	add	r2, r0
 8016afa:	3402      	adds	r4, #2
 8016afc:	e7ee      	b.n	8016adc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8016afe:	d017      	beq.n	8016b30 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8016b00:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8016b02:	1e58      	subs	r0, r3, #1
 8016b04:	fb05 1500 	mla	r5, r5, r0, r1
 8016b08:	142d      	asrs	r5, r5, #16
 8016b0a:	d409      	bmi.n	8016b20 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8016b0c:	42bd      	cmp	r5, r7
 8016b0e:	da07      	bge.n	8016b20 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8016b10:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8016b12:	fb05 2000 	mla	r0, r5, r0, r2
 8016b16:	1400      	asrs	r0, r0, #16
 8016b18:	d402      	bmi.n	8016b20 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8016b1a:	42b0      	cmp	r0, r6
 8016b1c:	f2c0 80bc 	blt.w	8016c98 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 8016b20:	2600      	movs	r6, #0
 8016b22:	1998      	adds	r0, r3, r6
 8016b24:	2800      	cmp	r0, #0
 8016b26:	dc3e      	bgt.n	8016ba6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 8016b28:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8016b2c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8016b30:	f1bb 0f00 	cmp.w	fp, #0
 8016b34:	f340 811b 	ble.w	8016d6e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8016b38:	ee30 0a04 	vadd.f32	s0, s0, s8
 8016b3c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8016b40:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8016b44:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016b46:	f1bb 0b01 	subs.w	fp, fp, #1
 8016b4a:	ee31 1a05 	vadd.f32	s2, s2, s10
 8016b4e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8016b52:	eeb0 6a62 	vmov.f32	s12, s5
 8016b56:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016b5a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016b5e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8016b62:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8016b66:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016b6a:	eeb0 6a43 	vmov.f32	s12, s6
 8016b6e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8016b72:	ee12 2a90 	vmov	r2, s5
 8016b76:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016b7a:	fb92 f3f3 	sdiv	r3, r2, r3
 8016b7e:	ee13 2a10 	vmov	r2, s6
 8016b82:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016b86:	9311      	str	r3, [sp, #68]	; 0x44
 8016b88:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016b8a:	fb92 f3f3 	sdiv	r3, r2, r3
 8016b8e:	9a03      	ldr	r2, [sp, #12]
 8016b90:	9312      	str	r3, [sp, #72]	; 0x48
 8016b92:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8016b96:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016b98:	eeb0 3a67 	vmov.f32	s6, s15
 8016b9c:	bf08      	it	eq
 8016b9e:	4613      	moveq	r3, r2
 8016ba0:	eef0 2a47 	vmov.f32	s5, s14
 8016ba4:	e789      	b.n	8016aba <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8016ba6:	140f      	asrs	r7, r1, #16
 8016ba8:	d426      	bmi.n	8016bf8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8016baa:	f8de 5008 	ldr.w	r5, [lr, #8]
 8016bae:	42bd      	cmp	r5, r7
 8016bb0:	dd22      	ble.n	8016bf8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8016bb2:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8016bb6:	d41f      	bmi.n	8016bf8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8016bb8:	f8de 000c 	ldr.w	r0, [lr, #12]
 8016bbc:	4560      	cmp	r0, ip
 8016bbe:	dd1b      	ble.n	8016bf8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8016bc0:	9800      	ldr	r0, [sp, #0]
 8016bc2:	b22d      	sxth	r5, r5
 8016bc4:	fb0c 0505 	mla	r5, ip, r5, r0
 8016bc8:	5de8      	ldrb	r0, [r5, r7]
 8016bca:	9d01      	ldr	r5, [sp, #4]
 8016bcc:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 8016bd0:	0e07      	lsrs	r7, r0, #24
 8016bd2:	2fff      	cmp	r7, #255	; 0xff
 8016bd4:	d116      	bne.n	8016c04 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8016bd6:	f06f 0501 	mvn.w	r5, #1
 8016bda:	fb05 f706 	mul.w	r7, r5, r6
 8016bde:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 8016be2:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8016be6:	0945      	lsrs	r5, r0, #5
 8016be8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8016bec:	ea4c 0505 	orr.w	r5, ip, r5
 8016bf0:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8016bf4:	4305      	orrs	r5, r0
 8016bf6:	53e5      	strh	r5, [r4, r7]
 8016bf8:	9811      	ldr	r0, [sp, #68]	; 0x44
 8016bfa:	4401      	add	r1, r0
 8016bfc:	9812      	ldr	r0, [sp, #72]	; 0x48
 8016bfe:	3e01      	subs	r6, #1
 8016c00:	4402      	add	r2, r0
 8016c02:	e78e      	b.n	8016b22 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8016c04:	b2fd      	uxtb	r5, r7
 8016c06:	2f00      	cmp	r7, #0
 8016c08:	d0f6      	beq.n	8016bf8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8016c0a:	f06f 0701 	mvn.w	r7, #1
 8016c0e:	4377      	muls	r7, r6
 8016c10:	fa1f f985 	uxth.w	r9, r5
 8016c14:	f834 8007 	ldrh.w	r8, [r4, r7]
 8016c18:	9702      	str	r7, [sp, #8]
 8016c1a:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8016c1e:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8016c22:	43ed      	mvns	r5, r5
 8016c24:	b2ed      	uxtb	r5, r5
 8016c26:	fb17 f709 	smulbb	r7, r7, r9
 8016c2a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8016c2e:	fb0c 7c05 	mla	ip, ip, r5, r7
 8016c32:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8016c36:	ea4f 07e8 	mov.w	r7, r8, asr #3
 8016c3a:	b2c0      	uxtb	r0, r0
 8016c3c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8016c40:	fa5f f888 	uxtb.w	r8, r8
 8016c44:	fb10 f009 	smulbb	r0, r0, r9
 8016c48:	fb08 0005 	mla	r0, r8, r5, r0
 8016c4c:	b280      	uxth	r0, r0
 8016c4e:	fa1f fc8c 	uxth.w	ip, ip
 8016c52:	fb1a fa09 	smulbb	sl, sl, r9
 8016c56:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8016c5a:	fb07 a705 	mla	r7, r7, r5, sl
 8016c5e:	f100 0a01 	add.w	sl, r0, #1
 8016c62:	f10c 0501 	add.w	r5, ip, #1
 8016c66:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8016c6a:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8016c6e:	b2bf      	uxth	r7, r7
 8016c70:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8016c74:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8016c78:	ea4a 0c0c 	orr.w	ip, sl, ip
 8016c7c:	f107 0a01 	add.w	sl, r7, #1
 8016c80:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8016c84:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016c88:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8016c8c:	9802      	ldr	r0, [sp, #8]
 8016c8e:	ea4c 0c0a 	orr.w	ip, ip, sl
 8016c92:	f824 c000 	strh.w	ip, [r4, r0]
 8016c96:	e7af      	b.n	8016bf8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8016c98:	f04f 0800 	mov.w	r8, #0
 8016c9c:	eba3 0008 	sub.w	r0, r3, r8
 8016ca0:	2800      	cmp	r0, #0
 8016ca2:	f77f af41 	ble.w	8016b28 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8016ca6:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8016caa:	9f00      	ldr	r7, [sp, #0]
 8016cac:	1410      	asrs	r0, r2, #16
 8016cae:	140d      	asrs	r5, r1, #16
 8016cb0:	fb06 7000 	mla	r0, r6, r0, r7
 8016cb4:	5d40      	ldrb	r0, [r0, r5]
 8016cb6:	9d01      	ldr	r5, [sp, #4]
 8016cb8:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8016cbc:	0e2e      	lsrs	r6, r5, #24
 8016cbe:	2eff      	cmp	r6, #255	; 0xff
 8016cc0:	d112      	bne.n	8016ce8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 8016cc2:	482c      	ldr	r0, [pc, #176]	; (8016d74 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 8016cc4:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8016cc8:	0968      	lsrs	r0, r5, #5
 8016cca:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8016cce:	4330      	orrs	r0, r6
 8016cd0:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8016cd4:	4328      	orrs	r0, r5
 8016cd6:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 8016cda:	9811      	ldr	r0, [sp, #68]	; 0x44
 8016cdc:	4401      	add	r1, r0
 8016cde:	9812      	ldr	r0, [sp, #72]	; 0x48
 8016ce0:	f108 0801 	add.w	r8, r8, #1
 8016ce4:	4402      	add	r2, r0
 8016ce6:	e7d9      	b.n	8016c9c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8016ce8:	b2f0      	uxtb	r0, r6
 8016cea:	2e00      	cmp	r6, #0
 8016cec:	d0f5      	beq.n	8016cda <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8016cee:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 8016cf2:	fa1f f980 	uxth.w	r9, r0
 8016cf6:	ea4f 272c 	mov.w	r7, ip, asr #8
 8016cfa:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8016cfe:	43c0      	mvns	r0, r0
 8016d00:	b2c0      	uxtb	r0, r0
 8016d02:	fb16 f609 	smulbb	r6, r6, r9
 8016d06:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8016d0a:	fb07 6700 	mla	r7, r7, r0, r6
 8016d0e:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8016d12:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8016d16:	b2ed      	uxtb	r5, r5
 8016d18:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8016d1c:	fa5f fc8c 	uxtb.w	ip, ip
 8016d20:	fb15 f509 	smulbb	r5, r5, r9
 8016d24:	fb0c 5500 	mla	r5, ip, r0, r5
 8016d28:	b2bf      	uxth	r7, r7
 8016d2a:	fb1a fa09 	smulbb	sl, sl, r9
 8016d2e:	b2ad      	uxth	r5, r5
 8016d30:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8016d34:	fb06 a600 	mla	r6, r6, r0, sl
 8016d38:	1c78      	adds	r0, r7, #1
 8016d3a:	f105 0a01 	add.w	sl, r5, #1
 8016d3e:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8016d42:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8016d46:	b2b6      	uxth	r6, r6
 8016d48:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8016d4c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8016d50:	ea4a 0707 	orr.w	r7, sl, r7
 8016d54:	f106 0a01 	add.w	sl, r6, #1
 8016d58:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8016d5c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016d60:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8016d64:	ea47 070a 	orr.w	r7, r7, sl
 8016d68:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8016d6c:	e7b5      	b.n	8016cda <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8016d6e:	b005      	add	sp, #20
 8016d70:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016d74:	fffff800 	.word	0xfffff800

08016d78 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016d78:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016d7c:	b087      	sub	sp, #28
 8016d7e:	468b      	mov	fp, r1
 8016d80:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8016d82:	9204      	str	r2, [sp, #16]
 8016d84:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8016d88:	9205      	str	r2, [sp, #20]
 8016d8a:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 8016d8e:	6861      	ldr	r1, [r4, #4]
 8016d90:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 8016d94:	fb01 2000 	mla	r0, r1, r0, r2
 8016d98:	6822      	ldr	r2, [r4, #0]
 8016d9a:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8016d9e:	f8de 2000 	ldr.w	r2, [lr]
 8016da2:	9201      	str	r2, [sp, #4]
 8016da4:	f8de 2004 	ldr.w	r2, [lr, #4]
 8016da8:	9202      	str	r2, [sp, #8]
 8016daa:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8016dae:	f1bb 0f00 	cmp.w	fp, #0
 8016db2:	dc03      	bgt.n	8016dbc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 8016db4:	9a04      	ldr	r2, [sp, #16]
 8016db6:	2a00      	cmp	r2, #0
 8016db8:	f340 8142 	ble.w	8017040 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8016dbc:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8016dbe:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8016dc2:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8016dc6:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8016dca:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8016dcc:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8016dd0:	2b00      	cmp	r3, #0
 8016dd2:	dd0e      	ble.n	8016df2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8016dd4:	140c      	asrs	r4, r1, #16
 8016dd6:	d405      	bmi.n	8016de4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8016dd8:	42bc      	cmp	r4, r7
 8016dda:	da03      	bge.n	8016de4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8016ddc:	1414      	asrs	r4, r2, #16
 8016dde:	d401      	bmi.n	8016de4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8016de0:	42b4      	cmp	r4, r6
 8016de2:	db07      	blt.n	8016df4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8016de4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8016de6:	4421      	add	r1, r4
 8016de8:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8016dea:	3b01      	subs	r3, #1
 8016dec:	4422      	add	r2, r4
 8016dee:	3002      	adds	r0, #2
 8016df0:	e7ee      	b.n	8016dd0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8016df2:	d019      	beq.n	8016e28 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8016df4:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8016df6:	1e5c      	subs	r4, r3, #1
 8016df8:	fb05 1504 	mla	r5, r5, r4, r1
 8016dfc:	142d      	asrs	r5, r5, #16
 8016dfe:	d409      	bmi.n	8016e14 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8016e00:	42bd      	cmp	r5, r7
 8016e02:	da07      	bge.n	8016e14 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8016e04:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8016e06:	fb05 2404 	mla	r4, r5, r4, r2
 8016e0a:	1424      	asrs	r4, r4, #16
 8016e0c:	d402      	bmi.n	8016e14 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8016e0e:	42b4      	cmp	r4, r6
 8016e10:	f2c0 80b1 	blt.w	8016f76 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8016e14:	f04f 0800 	mov.w	r8, #0
 8016e18:	eb03 0408 	add.w	r4, r3, r8
 8016e1c:	2c00      	cmp	r4, #0
 8016e1e:	dc3e      	bgt.n	8016e9e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8016e20:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8016e24:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8016e28:	f1bb 0f00 	cmp.w	fp, #0
 8016e2c:	f340 8108 	ble.w	8017040 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8016e30:	ee30 0a04 	vadd.f32	s0, s0, s8
 8016e34:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8016e38:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8016e3c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016e3e:	f1bb 0b01 	subs.w	fp, fp, #1
 8016e42:	ee31 1a05 	vadd.f32	s2, s2, s10
 8016e46:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8016e4a:	eeb0 6a62 	vmov.f32	s12, s5
 8016e4e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016e52:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016e56:	ee77 2a62 	vsub.f32	s5, s14, s5
 8016e5a:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8016e5e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016e62:	eeb0 6a43 	vmov.f32	s12, s6
 8016e66:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8016e6a:	ee12 2a90 	vmov	r2, s5
 8016e6e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016e72:	fb92 f3f3 	sdiv	r3, r2, r3
 8016e76:	ee13 2a10 	vmov	r2, s6
 8016e7a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016e7e:	9313      	str	r3, [sp, #76]	; 0x4c
 8016e80:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016e82:	fb92 f3f3 	sdiv	r3, r2, r3
 8016e86:	9a04      	ldr	r2, [sp, #16]
 8016e88:	9314      	str	r3, [sp, #80]	; 0x50
 8016e8a:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8016e8e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016e90:	eeb0 3a67 	vmov.f32	s6, s15
 8016e94:	bf08      	it	eq
 8016e96:	4613      	moveq	r3, r2
 8016e98:	eef0 2a47 	vmov.f32	s5, s14
 8016e9c:	e787      	b.n	8016dae <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 8016e9e:	140e      	asrs	r6, r1, #16
 8016ea0:	d462      	bmi.n	8016f68 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8016ea2:	f8de 5008 	ldr.w	r5, [lr, #8]
 8016ea6:	42b5      	cmp	r5, r6
 8016ea8:	dd5e      	ble.n	8016f68 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8016eaa:	1417      	asrs	r7, r2, #16
 8016eac:	d45c      	bmi.n	8016f68 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8016eae:	f8de 400c 	ldr.w	r4, [lr, #12]
 8016eb2:	42bc      	cmp	r4, r7
 8016eb4:	dd58      	ble.n	8016f68 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8016eb6:	b22d      	sxth	r5, r5
 8016eb8:	fb07 6505 	mla	r5, r7, r5, r6
 8016ebc:	9c02      	ldr	r4, [sp, #8]
 8016ebe:	5d66      	ldrb	r6, [r4, r5]
 8016ec0:	2e00      	cmp	r6, #0
 8016ec2:	d051      	beq.n	8016f68 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8016ec4:	9c01      	ldr	r4, [sp, #4]
 8016ec6:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 8016eca:	f06f 0401 	mvn.w	r4, #1
 8016ece:	fb04 f408 	mul.w	r4, r4, r8
 8016ed2:	9403      	str	r4, [sp, #12]
 8016ed4:	5b05      	ldrh	r5, [r0, r4]
 8016ed6:	9c05      	ldr	r4, [sp, #20]
 8016ed8:	4366      	muls	r6, r4
 8016eda:	1c74      	adds	r4, r6, #1
 8016edc:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8016ee0:	1224      	asrs	r4, r4, #8
 8016ee2:	b2a7      	uxth	r7, r4
 8016ee4:	122e      	asrs	r6, r5, #8
 8016ee6:	43e4      	mvns	r4, r4
 8016ee8:	b2e4      	uxtb	r4, r4
 8016eea:	ea4f 2c29 	mov.w	ip, r9, asr #8
 8016eee:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8016ef2:	fb16 f604 	smulbb	r6, r6, r4
 8016ef6:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8016efa:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8016efe:	00ed      	lsls	r5, r5, #3
 8016f00:	fb0c 6c07 	mla	ip, ip, r7, r6
 8016f04:	b2ed      	uxtb	r5, r5
 8016f06:	ea4f 06e9 	mov.w	r6, r9, asr #3
 8016f0a:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8016f0e:	fb15 f504 	smulbb	r5, r5, r4
 8016f12:	fa5f f989 	uxtb.w	r9, r9
 8016f16:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8016f1a:	fb09 5507 	mla	r5, r9, r7, r5
 8016f1e:	fb1a fa04 	smulbb	sl, sl, r4
 8016f22:	fa1f fc8c 	uxth.w	ip, ip
 8016f26:	b2ad      	uxth	r5, r5
 8016f28:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8016f2c:	fb06 a607 	mla	r6, r6, r7, sl
 8016f30:	f10c 0401 	add.w	r4, ip, #1
 8016f34:	f105 0a01 	add.w	sl, r5, #1
 8016f38:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8016f3c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8016f40:	b2b6      	uxth	r6, r6
 8016f42:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8016f46:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8016f4a:	ea4a 0c0c 	orr.w	ip, sl, ip
 8016f4e:	f106 0a01 	add.w	sl, r6, #1
 8016f52:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8016f56:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016f5a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8016f5e:	9c03      	ldr	r4, [sp, #12]
 8016f60:	ea4c 0c0a 	orr.w	ip, ip, sl
 8016f64:	f820 c004 	strh.w	ip, [r0, r4]
 8016f68:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8016f6a:	4421      	add	r1, r4
 8016f6c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8016f6e:	f108 38ff 	add.w	r8, r8, #4294967295
 8016f72:	4422      	add	r2, r4
 8016f74:	e750      	b.n	8016e18 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8016f76:	f04f 0900 	mov.w	r9, #0
 8016f7a:	eba3 0409 	sub.w	r4, r3, r9
 8016f7e:	2c00      	cmp	r4, #0
 8016f80:	f77f af4e 	ble.w	8016e20 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8016f84:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8016f88:	140d      	asrs	r5, r1, #16
 8016f8a:	1414      	asrs	r4, r2, #16
 8016f8c:	fb06 5404 	mla	r4, r6, r4, r5
 8016f90:	9d02      	ldr	r5, [sp, #8]
 8016f92:	5d2e      	ldrb	r6, [r5, r4]
 8016f94:	2e00      	cmp	r6, #0
 8016f96:	d04c      	beq.n	8017032 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 8016f98:	9d01      	ldr	r5, [sp, #4]
 8016f9a:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 8016f9e:	9c05      	ldr	r4, [sp, #20]
 8016fa0:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8016fa4:	4366      	muls	r6, r4
 8016fa6:	1c74      	adds	r4, r6, #1
 8016fa8:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8016fac:	1224      	asrs	r4, r4, #8
 8016fae:	b2a7      	uxth	r7, r4
 8016fb0:	122e      	asrs	r6, r5, #8
 8016fb2:	43e4      	mvns	r4, r4
 8016fb4:	b2e4      	uxtb	r4, r4
 8016fb6:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8016fba:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8016fbe:	fb16 f604 	smulbb	r6, r6, r4
 8016fc2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8016fc6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8016fca:	00ed      	lsls	r5, r5, #3
 8016fcc:	fb0c 6c07 	mla	ip, ip, r7, r6
 8016fd0:	b2ed      	uxtb	r5, r5
 8016fd2:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8016fd6:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8016fda:	fb15 f504 	smulbb	r5, r5, r4
 8016fde:	fa5f f888 	uxtb.w	r8, r8
 8016fe2:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8016fe6:	fb08 5507 	mla	r5, r8, r7, r5
 8016fea:	fb1a fa04 	smulbb	sl, sl, r4
 8016fee:	fa1f fc8c 	uxth.w	ip, ip
 8016ff2:	b2ad      	uxth	r5, r5
 8016ff4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8016ff8:	fb06 a607 	mla	r6, r6, r7, sl
 8016ffc:	f10c 0401 	add.w	r4, ip, #1
 8017000:	f105 0a01 	add.w	sl, r5, #1
 8017004:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8017008:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801700c:	b2b6      	uxth	r6, r6
 801700e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8017012:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8017016:	ea4a 0c0c 	orr.w	ip, sl, ip
 801701a:	f106 0a01 	add.w	sl, r6, #1
 801701e:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8017022:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8017026:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801702a:	ea4c 0c0a 	orr.w	ip, ip, sl
 801702e:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8017032:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8017034:	4421      	add	r1, r4
 8017036:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8017038:	f109 0901 	add.w	r9, r9, #1
 801703c:	4422      	add	r2, r4
 801703e:	e79c      	b.n	8016f7a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8017040:	b007      	add	sp, #28
 8017042:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08017046 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8017046:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801704a:	b085      	sub	sp, #20
 801704c:	468b      	mov	fp, r1
 801704e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8017050:	9203      	str	r2, [sp, #12]
 8017052:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 8017056:	6861      	ldr	r1, [r4, #4]
 8017058:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801705c:	fb01 2000 	mla	r0, r1, r0, r2
 8017060:	6822      	ldr	r2, [r4, #0]
 8017062:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8017066:	f8d8 2000 	ldr.w	r2, [r8]
 801706a:	9200      	str	r2, [sp, #0]
 801706c:	f8d8 2004 	ldr.w	r2, [r8, #4]
 8017070:	9201      	str	r2, [sp, #4]
 8017072:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8017076:	f1bb 0f00 	cmp.w	fp, #0
 801707a:	dc03      	bgt.n	8017084 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801707c:	9a03      	ldr	r2, [sp, #12]
 801707e:	2a00      	cmp	r2, #0
 8017080:	f340 8146 	ble.w	8017310 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8017084:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8017086:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801708a:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801708e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8017092:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8017094:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8017098:	2b00      	cmp	r3, #0
 801709a:	dd0e      	ble.n	80170ba <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801709c:	140c      	asrs	r4, r1, #16
 801709e:	d405      	bmi.n	80170ac <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80170a0:	42bc      	cmp	r4, r7
 80170a2:	da03      	bge.n	80170ac <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80170a4:	1414      	asrs	r4, r2, #16
 80170a6:	d401      	bmi.n	80170ac <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80170a8:	42b4      	cmp	r4, r6
 80170aa:	db07      	blt.n	80170bc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80170ac:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80170ae:	4421      	add	r1, r4
 80170b0:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80170b2:	3b01      	subs	r3, #1
 80170b4:	4422      	add	r2, r4
 80170b6:	3002      	adds	r0, #2
 80170b8:	e7ee      	b.n	8017098 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80170ba:	d017      	beq.n	80170ec <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 80170bc:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80170be:	1e5c      	subs	r4, r3, #1
 80170c0:	fb05 1504 	mla	r5, r5, r4, r1
 80170c4:	142d      	asrs	r5, r5, #16
 80170c6:	d409      	bmi.n	80170dc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80170c8:	42bd      	cmp	r5, r7
 80170ca:	da07      	bge.n	80170dc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80170cc:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80170ce:	fb05 2404 	mla	r4, r5, r4, r2
 80170d2:	1424      	asrs	r4, r4, #16
 80170d4:	d402      	bmi.n	80170dc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80170d6:	42b4      	cmp	r4, r6
 80170d8:	f2c0 80b3 	blt.w	8017242 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 80170dc:	2600      	movs	r6, #0
 80170de:	199c      	adds	r4, r3, r6
 80170e0:	2c00      	cmp	r4, #0
 80170e2:	dc3e      	bgt.n	8017162 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80170e4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80170e8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80170ec:	f1bb 0f00 	cmp.w	fp, #0
 80170f0:	f340 810e 	ble.w	8017310 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 80170f4:	ee30 0a04 	vadd.f32	s0, s0, s8
 80170f8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80170fc:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8017100:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8017102:	f1bb 0b01 	subs.w	fp, fp, #1
 8017106:	ee31 1a05 	vadd.f32	s2, s2, s10
 801710a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801710e:	eeb0 6a62 	vmov.f32	s12, s5
 8017112:	ee61 7a27 	vmul.f32	s15, s2, s15
 8017116:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801711a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801711e:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8017122:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8017126:	eeb0 6a43 	vmov.f32	s12, s6
 801712a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801712e:	ee12 2a90 	vmov	r2, s5
 8017132:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8017136:	fb92 f3f3 	sdiv	r3, r2, r3
 801713a:	ee13 2a10 	vmov	r2, s6
 801713e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8017142:	9311      	str	r3, [sp, #68]	; 0x44
 8017144:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8017146:	fb92 f3f3 	sdiv	r3, r2, r3
 801714a:	9a03      	ldr	r2, [sp, #12]
 801714c:	9312      	str	r3, [sp, #72]	; 0x48
 801714e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8017152:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8017154:	eeb0 3a67 	vmov.f32	s6, s15
 8017158:	bf08      	it	eq
 801715a:	4613      	moveq	r3, r2
 801715c:	eef0 2a47 	vmov.f32	s5, s14
 8017160:	e789      	b.n	8017076 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8017162:	140f      	asrs	r7, r1, #16
 8017164:	d418      	bmi.n	8017198 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8017166:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801716a:	42bd      	cmp	r5, r7
 801716c:	dd14      	ble.n	8017198 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801716e:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8017172:	d411      	bmi.n	8017198 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8017174:	f8d8 400c 	ldr.w	r4, [r8, #12]
 8017178:	4564      	cmp	r4, ip
 801717a:	dd0d      	ble.n	8017198 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801717c:	b22d      	sxth	r5, r5
 801717e:	fb0c 7505 	mla	r5, ip, r5, r7
 8017182:	9c01      	ldr	r4, [sp, #4]
 8017184:	5d64      	ldrb	r4, [r4, r5]
 8017186:	2cff      	cmp	r4, #255	; 0xff
 8017188:	d10c      	bne.n	80171a4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801718a:	9c00      	ldr	r4, [sp, #0]
 801718c:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 8017190:	f06f 0401 	mvn.w	r4, #1
 8017194:	4374      	muls	r4, r6
 8017196:	5305      	strh	r5, [r0, r4]
 8017198:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801719a:	4421      	add	r1, r4
 801719c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801719e:	3e01      	subs	r6, #1
 80171a0:	4422      	add	r2, r4
 80171a2:	e79c      	b.n	80170de <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80171a4:	2c00      	cmp	r4, #0
 80171a6:	d0f7      	beq.n	8017198 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80171a8:	9f00      	ldr	r7, [sp, #0]
 80171aa:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 80171ae:	f06f 0501 	mvn.w	r5, #1
 80171b2:	4375      	muls	r5, r6
 80171b4:	9502      	str	r5, [sp, #8]
 80171b6:	5b45      	ldrh	r5, [r0, r5]
 80171b8:	fa1f fc84 	uxth.w	ip, r4
 80171bc:	122f      	asrs	r7, r5, #8
 80171be:	43e4      	mvns	r4, r4
 80171c0:	b2e4      	uxtb	r4, r4
 80171c2:	ea4f 2e29 	mov.w	lr, r9, asr #8
 80171c6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80171ca:	fb17 f704 	smulbb	r7, r7, r4
 80171ce:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80171d2:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 80171d6:	00ed      	lsls	r5, r5, #3
 80171d8:	fb0e 7e0c 	mla	lr, lr, ip, r7
 80171dc:	b2ed      	uxtb	r5, r5
 80171de:	ea4f 07e9 	mov.w	r7, r9, asr #3
 80171e2:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 80171e6:	fb15 f504 	smulbb	r5, r5, r4
 80171ea:	fa5f f989 	uxtb.w	r9, r9
 80171ee:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 80171f2:	fb09 550c 	mla	r5, r9, ip, r5
 80171f6:	fb1a fa04 	smulbb	sl, sl, r4
 80171fa:	fa1f fe8e 	uxth.w	lr, lr
 80171fe:	b2ad      	uxth	r5, r5
 8017200:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8017204:	fb07 a70c 	mla	r7, r7, ip, sl
 8017208:	f10e 0401 	add.w	r4, lr, #1
 801720c:	f105 0a01 	add.w	sl, r5, #1
 8017210:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 8017214:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8017218:	b2bf      	uxth	r7, r7
 801721a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801721e:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8017222:	ea4a 0e0e 	orr.w	lr, sl, lr
 8017226:	f107 0a01 	add.w	sl, r7, #1
 801722a:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801722e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8017232:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8017236:	9c02      	ldr	r4, [sp, #8]
 8017238:	ea4e 0e0a 	orr.w	lr, lr, sl
 801723c:	f820 e004 	strh.w	lr, [r0, r4]
 8017240:	e7aa      	b.n	8017198 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8017242:	f04f 0900 	mov.w	r9, #0
 8017246:	eba3 0409 	sub.w	r4, r3, r9
 801724a:	2c00      	cmp	r4, #0
 801724c:	f77f af4a 	ble.w	80170e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8017250:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8017254:	1414      	asrs	r4, r2, #16
 8017256:	140d      	asrs	r5, r1, #16
 8017258:	fb06 5504 	mla	r5, r6, r4, r5
 801725c:	9c01      	ldr	r4, [sp, #4]
 801725e:	5d64      	ldrb	r4, [r4, r5]
 8017260:	2cff      	cmp	r4, #255	; 0xff
 8017262:	d10b      	bne.n	801727c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8017264:	9c00      	ldr	r4, [sp, #0]
 8017266:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 801726a:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 801726e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8017270:	4421      	add	r1, r4
 8017272:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8017274:	f109 0901 	add.w	r9, r9, #1
 8017278:	4422      	add	r2, r4
 801727a:	e7e4      	b.n	8017246 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801727c:	2c00      	cmp	r4, #0
 801727e:	d0f6      	beq.n	801726e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8017280:	9e00      	ldr	r6, [sp, #0]
 8017282:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 8017286:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801728a:	b2a7      	uxth	r7, r4
 801728c:	122e      	asrs	r6, r5, #8
 801728e:	43e4      	mvns	r4, r4
 8017290:	b2e4      	uxtb	r4, r4
 8017292:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8017296:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801729a:	fb16 f604 	smulbb	r6, r6, r4
 801729e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80172a2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80172a6:	00ed      	lsls	r5, r5, #3
 80172a8:	fb0c 6c07 	mla	ip, ip, r7, r6
 80172ac:	b2ed      	uxtb	r5, r5
 80172ae:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80172b2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80172b6:	fb15 f504 	smulbb	r5, r5, r4
 80172ba:	fa5f fe8e 	uxtb.w	lr, lr
 80172be:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 80172c2:	fb0e 5507 	mla	r5, lr, r7, r5
 80172c6:	fb1a fa04 	smulbb	sl, sl, r4
 80172ca:	fa1f fc8c 	uxth.w	ip, ip
 80172ce:	b2ad      	uxth	r5, r5
 80172d0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80172d4:	fb06 a607 	mla	r6, r6, r7, sl
 80172d8:	f10c 0401 	add.w	r4, ip, #1
 80172dc:	f105 0a01 	add.w	sl, r5, #1
 80172e0:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 80172e4:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80172e8:	b2b6      	uxth	r6, r6
 80172ea:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80172ee:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80172f2:	ea4a 0c0c 	orr.w	ip, sl, ip
 80172f6:	f106 0a01 	add.w	sl, r6, #1
 80172fa:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80172fe:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8017302:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8017306:	ea4c 0c0a 	orr.w	ip, ip, sl
 801730a:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801730e:	e7ae      	b.n	801726e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8017310:	b005      	add	sp, #20
 8017312:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08017316 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8017316:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801731a:	b085      	sub	sp, #20
 801731c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801731e:	9203      	str	r2, [sp, #12]
 8017320:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 8017324:	9201      	str	r2, [sp, #4]
 8017326:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801732a:	9100      	str	r1, [sp, #0]
 801732c:	6841      	ldr	r1, [r0, #4]
 801732e:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 8017332:	fb01 2404 	mla	r4, r1, r4, r2
 8017336:	6802      	ldr	r2, [r0, #0]
 8017338:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801733c:	f8de 2000 	ldr.w	r2, [lr]
 8017340:	9202      	str	r2, [sp, #8]
 8017342:	9a01      	ldr	r2, [sp, #4]
 8017344:	43d6      	mvns	r6, r2
 8017346:	b2f6      	uxtb	r6, r6
 8017348:	9a00      	ldr	r2, [sp, #0]
 801734a:	2a00      	cmp	r2, #0
 801734c:	dc03      	bgt.n	8017356 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801734e:	9a03      	ldr	r2, [sp, #12]
 8017350:	2a00      	cmp	r2, #0
 8017352:	f340 8124 	ble.w	801759e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8017356:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8017358:	f9be c008 	ldrsh.w	ip, [lr, #8]
 801735c:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8017360:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8017364:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8017366:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801736a:	2b00      	cmp	r3, #0
 801736c:	dd0e      	ble.n	801738c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801736e:	1408      	asrs	r0, r1, #16
 8017370:	d405      	bmi.n	801737e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8017372:	4560      	cmp	r0, ip
 8017374:	da03      	bge.n	801737e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8017376:	1410      	asrs	r0, r2, #16
 8017378:	d401      	bmi.n	801737e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801737a:	42b8      	cmp	r0, r7
 801737c:	db07      	blt.n	801738e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801737e:	9811      	ldr	r0, [sp, #68]	; 0x44
 8017380:	4401      	add	r1, r0
 8017382:	9812      	ldr	r0, [sp, #72]	; 0x48
 8017384:	3b01      	subs	r3, #1
 8017386:	4402      	add	r2, r0
 8017388:	3402      	adds	r4, #2
 801738a:	e7ee      	b.n	801736a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801738c:	d06e      	beq.n	801746c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801738e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8017390:	1e58      	subs	r0, r3, #1
 8017392:	fb05 1500 	mla	r5, r5, r0, r1
 8017396:	142d      	asrs	r5, r5, #16
 8017398:	d45c      	bmi.n	8017454 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801739a:	4565      	cmp	r5, ip
 801739c:	da5a      	bge.n	8017454 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801739e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80173a0:	fb05 2000 	mla	r0, r5, r0, r2
 80173a4:	1400      	asrs	r0, r0, #16
 80173a6:	d455      	bmi.n	8017454 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80173a8:	42b8      	cmp	r0, r7
 80173aa:	da53      	bge.n	8017454 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80173ac:	f8bd b004 	ldrh.w	fp, [sp, #4]
 80173b0:	4699      	mov	r9, r3
 80173b2:	46a2      	mov	sl, r4
 80173b4:	f1b9 0f00 	cmp.w	r9, #0
 80173b8:	dd54      	ble.n	8017464 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80173ba:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 80173be:	140d      	asrs	r5, r1, #16
 80173c0:	1410      	asrs	r0, r2, #16
 80173c2:	fb07 5000 	mla	r0, r7, r0, r5
 80173c6:	9d02      	ldr	r5, [sp, #8]
 80173c8:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 80173cc:	f8ba 5000 	ldrh.w	r5, [sl]
 80173d0:	122f      	asrs	r7, r5, #8
 80173d2:	ea4f 2c20 	mov.w	ip, r0, asr #8
 80173d6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80173da:	fb17 f706 	smulbb	r7, r7, r6
 80173de:	ea4f 08e5 	mov.w	r8, r5, asr #3
 80173e2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80173e6:	00ed      	lsls	r5, r5, #3
 80173e8:	fb0c 7c0b 	mla	ip, ip, fp, r7
 80173ec:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 80173f0:	10c7      	asrs	r7, r0, #3
 80173f2:	b2ed      	uxtb	r5, r5
 80173f4:	00c0      	lsls	r0, r0, #3
 80173f6:	fb18 f806 	smulbb	r8, r8, r6
 80173fa:	fb15 f506 	smulbb	r5, r5, r6
 80173fe:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8017402:	b2c0      	uxtb	r0, r0
 8017404:	fa1f fc8c 	uxth.w	ip, ip
 8017408:	fb07 870b 	mla	r7, r7, fp, r8
 801740c:	fb00 500b 	mla	r0, r0, fp, r5
 8017410:	b280      	uxth	r0, r0
 8017412:	b2bf      	uxth	r7, r7
 8017414:	f10c 0501 	add.w	r5, ip, #1
 8017418:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801741c:	f107 0801 	add.w	r8, r7, #1
 8017420:	1c45      	adds	r5, r0, #1
 8017422:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8017426:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801742a:	9811      	ldr	r0, [sp, #68]	; 0x44
 801742c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8017430:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8017434:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8017438:	ea45 0c0c 	orr.w	ip, r5, ip
 801743c:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8017440:	4401      	add	r1, r0
 8017442:	9812      	ldr	r0, [sp, #72]	; 0x48
 8017444:	ea4c 0c08 	orr.w	ip, ip, r8
 8017448:	f82a cb02 	strh.w	ip, [sl], #2
 801744c:	4402      	add	r2, r0
 801744e:	f109 39ff 	add.w	r9, r9, #4294967295
 8017452:	e7af      	b.n	80173b4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8017454:	f8bd a004 	ldrh.w	sl, [sp, #4]
 8017458:	f04f 0800 	mov.w	r8, #0
 801745c:	eb03 0008 	add.w	r0, r3, r8
 8017460:	2800      	cmp	r0, #0
 8017462:	dc41      	bgt.n	80174e8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8017464:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8017468:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801746c:	9b00      	ldr	r3, [sp, #0]
 801746e:	2b00      	cmp	r3, #0
 8017470:	f340 8095 	ble.w	801759e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8017474:	ee30 0a04 	vadd.f32	s0, s0, s8
 8017478:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801747c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8017480:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8017482:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8017486:	ee31 1a05 	vadd.f32	s2, s2, s10
 801748a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801748e:	eef0 6a62 	vmov.f32	s13, s5
 8017492:	ee61 7a27 	vmul.f32	s15, s2, s15
 8017496:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801749a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801749e:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 80174a2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80174a6:	eef0 6a43 	vmov.f32	s13, s6
 80174aa:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80174ae:	ee12 2a90 	vmov	r2, s5
 80174b2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80174b6:	fb92 f3f3 	sdiv	r3, r2, r3
 80174ba:	ee13 2a10 	vmov	r2, s6
 80174be:	9311      	str	r3, [sp, #68]	; 0x44
 80174c0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80174c2:	fb92 f3f3 	sdiv	r3, r2, r3
 80174c6:	9312      	str	r3, [sp, #72]	; 0x48
 80174c8:	9b00      	ldr	r3, [sp, #0]
 80174ca:	9a03      	ldr	r2, [sp, #12]
 80174cc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80174d0:	3b01      	subs	r3, #1
 80174d2:	9300      	str	r3, [sp, #0]
 80174d4:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 80174d8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80174da:	eeb0 3a67 	vmov.f32	s6, s15
 80174de:	bf08      	it	eq
 80174e0:	4613      	moveq	r3, r2
 80174e2:	eef0 2a47 	vmov.f32	s5, s14
 80174e6:	e72f      	b.n	8017348 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 80174e8:	140f      	asrs	r7, r1, #16
 80174ea:	d451      	bmi.n	8017590 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 80174ec:	f8de 5008 	ldr.w	r5, [lr, #8]
 80174f0:	42bd      	cmp	r5, r7
 80174f2:	dd4d      	ble.n	8017590 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 80174f4:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80174f8:	d44a      	bmi.n	8017590 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 80174fa:	f8de 000c 	ldr.w	r0, [lr, #12]
 80174fe:	4560      	cmp	r0, ip
 8017500:	dd46      	ble.n	8017590 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8017502:	b22d      	sxth	r5, r5
 8017504:	fb0c 7505 	mla	r5, ip, r5, r7
 8017508:	9802      	ldr	r0, [sp, #8]
 801750a:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 801750e:	f06f 0501 	mvn.w	r5, #1
 8017512:	fb05 fb08 	mul.w	fp, r5, r8
 8017516:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801751a:	f834 500b 	ldrh.w	r5, [r4, fp]
 801751e:	122f      	asrs	r7, r5, #8
 8017520:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8017524:	fb17 f706 	smulbb	r7, r7, r6
 8017528:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801752c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8017530:	00ed      	lsls	r5, r5, #3
 8017532:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8017536:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801753a:	10c7      	asrs	r7, r0, #3
 801753c:	b2ed      	uxtb	r5, r5
 801753e:	00c0      	lsls	r0, r0, #3
 8017540:	fb19 f906 	smulbb	r9, r9, r6
 8017544:	fb15 f506 	smulbb	r5, r5, r6
 8017548:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801754c:	b2c0      	uxtb	r0, r0
 801754e:	fa1f fc8c 	uxth.w	ip, ip
 8017552:	fb07 970a 	mla	r7, r7, sl, r9
 8017556:	fb00 500a 	mla	r0, r0, sl, r5
 801755a:	b2bf      	uxth	r7, r7
 801755c:	b280      	uxth	r0, r0
 801755e:	f10c 0501 	add.w	r5, ip, #1
 8017562:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8017566:	f107 0901 	add.w	r9, r7, #1
 801756a:	1c45      	adds	r5, r0, #1
 801756c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8017570:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8017574:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8017578:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801757c:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8017580:	ea45 0c0c 	orr.w	ip, r5, ip
 8017584:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8017588:	ea4c 0c09 	orr.w	ip, ip, r9
 801758c:	f824 c00b 	strh.w	ip, [r4, fp]
 8017590:	9811      	ldr	r0, [sp, #68]	; 0x44
 8017592:	4401      	add	r1, r0
 8017594:	9812      	ldr	r0, [sp, #72]	; 0x48
 8017596:	f108 38ff 	add.w	r8, r8, #4294967295
 801759a:	4402      	add	r2, r0
 801759c:	e75e      	b.n	801745c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 801759e:	b005      	add	sp, #20
 80175a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080175a4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80175a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80175a8:	b085      	sub	sp, #20
 80175aa:	4693      	mov	fp, r2
 80175ac:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 80175ae:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80175b0:	6870      	ldr	r0, [r6, #4]
 80175b2:	9101      	str	r1, [sp, #4]
 80175b4:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 80175b8:	fb00 2404 	mla	r4, r0, r4, r2
 80175bc:	6832      	ldr	r2, [r6, #0]
 80175be:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 80175c2:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80175c6:	682a      	ldr	r2, [r5, #0]
 80175c8:	9202      	str	r2, [sp, #8]
 80175ca:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80175ce:	9a01      	ldr	r2, [sp, #4]
 80175d0:	2a00      	cmp	r2, #0
 80175d2:	dc03      	bgt.n	80175dc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80175d4:	f1bb 0f00 	cmp.w	fp, #0
 80175d8:	f340 809a 	ble.w	8017710 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 80175dc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80175de:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 80175e2:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 80175e6:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80175ea:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80175ec:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80175f0:	2b00      	cmp	r3, #0
 80175f2:	dd0c      	ble.n	801760e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 80175f4:	1406      	asrs	r6, r0, #16
 80175f6:	d405      	bmi.n	8017604 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80175f8:	454e      	cmp	r6, r9
 80175fa:	da03      	bge.n	8017604 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80175fc:	1416      	asrs	r6, r2, #16
 80175fe:	d401      	bmi.n	8017604 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8017600:	4546      	cmp	r6, r8
 8017602:	db05      	blt.n	8017610 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8017604:	4470      	add	r0, lr
 8017606:	4462      	add	r2, ip
 8017608:	3b01      	subs	r3, #1
 801760a:	3402      	adds	r4, #2
 801760c:	e7f0      	b.n	80175f0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801760e:	d00f      	beq.n	8017630 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8017610:	1e5e      	subs	r6, r3, #1
 8017612:	fb0e 0706 	mla	r7, lr, r6, r0
 8017616:	143f      	asrs	r7, r7, #16
 8017618:	d541      	bpl.n	801769e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 801761a:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801761e:	4698      	mov	r8, r3
 8017620:	9603      	str	r6, [sp, #12]
 8017622:	f1b8 0f00 	cmp.w	r8, #0
 8017626:	dc56      	bgt.n	80176d6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 8017628:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801762c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8017630:	9b01      	ldr	r3, [sp, #4]
 8017632:	2b00      	cmp	r3, #0
 8017634:	dd6c      	ble.n	8017710 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8017636:	ee30 0a04 	vadd.f32	s0, s0, s8
 801763a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801763e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8017642:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8017644:	ee31 1a05 	vadd.f32	s2, s2, s10
 8017648:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801764c:	eeb0 6a62 	vmov.f32	s12, s5
 8017650:	ee61 7a27 	vmul.f32	s15, s2, s15
 8017654:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8017658:	ee77 2a62 	vsub.f32	s5, s14, s5
 801765c:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8017660:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8017664:	eeb0 6a43 	vmov.f32	s12, s6
 8017668:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801766c:	ee12 2a90 	vmov	r2, s5
 8017670:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8017674:	fb92 fef3 	sdiv	lr, r2, r3
 8017678:	ee13 2a10 	vmov	r2, s6
 801767c:	fb92 fcf3 	sdiv	ip, r2, r3
 8017680:	9b01      	ldr	r3, [sp, #4]
 8017682:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8017686:	3b01      	subs	r3, #1
 8017688:	9301      	str	r3, [sp, #4]
 801768a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801768e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8017690:	eeb0 3a67 	vmov.f32	s6, s15
 8017694:	bf08      	it	eq
 8017696:	465b      	moveq	r3, fp
 8017698:	eef0 2a47 	vmov.f32	s5, s14
 801769c:	e797      	b.n	80175ce <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801769e:	454f      	cmp	r7, r9
 80176a0:	dabb      	bge.n	801761a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80176a2:	fb0c 2606 	mla	r6, ip, r6, r2
 80176a6:	1436      	asrs	r6, r6, #16
 80176a8:	d4b7      	bmi.n	801761a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80176aa:	4546      	cmp	r6, r8
 80176ac:	dab5      	bge.n	801761a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80176ae:	461e      	mov	r6, r3
 80176b0:	46a0      	mov	r8, r4
 80176b2:	2e00      	cmp	r6, #0
 80176b4:	ddb8      	ble.n	8017628 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80176b6:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 80176ba:	9902      	ldr	r1, [sp, #8]
 80176bc:	1417      	asrs	r7, r2, #16
 80176be:	ea4f 4920 	mov.w	r9, r0, asr #16
 80176c2:	fb0a 9707 	mla	r7, sl, r7, r9
 80176c6:	4470      	add	r0, lr
 80176c8:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 80176cc:	f828 7b02 	strh.w	r7, [r8], #2
 80176d0:	4462      	add	r2, ip
 80176d2:	3e01      	subs	r6, #1
 80176d4:	e7ed      	b.n	80176b2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 80176d6:	ea5f 4920 	movs.w	r9, r0, asr #16
 80176da:	d414      	bmi.n	8017706 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 80176dc:	68ae      	ldr	r6, [r5, #8]
 80176de:	454e      	cmp	r6, r9
 80176e0:	dd11      	ble.n	8017706 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 80176e2:	ea5f 4a22 	movs.w	sl, r2, asr #16
 80176e6:	d40e      	bmi.n	8017706 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 80176e8:	68ef      	ldr	r7, [r5, #12]
 80176ea:	4557      	cmp	r7, sl
 80176ec:	dd0b      	ble.n	8017706 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 80176ee:	b236      	sxth	r6, r6
 80176f0:	fb0a 9606 	mla	r6, sl, r6, r9
 80176f4:	9f02      	ldr	r7, [sp, #8]
 80176f6:	f06f 0101 	mvn.w	r1, #1
 80176fa:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 80176fe:	fb01 f608 	mul.w	r6, r1, r8
 8017702:	9903      	ldr	r1, [sp, #12]
 8017704:	538f      	strh	r7, [r1, r6]
 8017706:	4470      	add	r0, lr
 8017708:	4462      	add	r2, ip
 801770a:	f108 38ff 	add.w	r8, r8, #4294967295
 801770e:	e788      	b.n	8017622 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8017710:	b005      	add	sp, #20
 8017712:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08017716 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8017716:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801771a:	b087      	sub	sp, #28
 801771c:	468b      	mov	fp, r1
 801771e:	9815      	ldr	r0, [sp, #84]	; 0x54
 8017720:	9203      	str	r2, [sp, #12]
 8017722:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8017726:	9204      	str	r2, [sp, #16]
 8017728:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 801772c:	6841      	ldr	r1, [r0, #4]
 801772e:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 8017732:	fb01 2505 	mla	r5, r1, r5, r2
 8017736:	6802      	ldr	r2, [r0, #0]
 8017738:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 801773c:	f8d9 2000 	ldr.w	r2, [r9]
 8017740:	9201      	str	r2, [sp, #4]
 8017742:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8017746:	f1bb 0f00 	cmp.w	fp, #0
 801774a:	dc03      	bgt.n	8017754 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801774c:	9a03      	ldr	r2, [sp, #12]
 801774e:	2a00      	cmp	r2, #0
 8017750:	f340 8159 	ble.w	8017a06 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8017754:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8017756:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801775a:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801775e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8017762:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8017764:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8017768:	2b00      	cmp	r3, #0
 801776a:	dd0e      	ble.n	801778a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801776c:	1402      	asrs	r2, r0, #16
 801776e:	d405      	bmi.n	801777c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8017770:	42ba      	cmp	r2, r7
 8017772:	da03      	bge.n	801777c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8017774:	140a      	asrs	r2, r1, #16
 8017776:	d401      	bmi.n	801777c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8017778:	42b2      	cmp	r2, r6
 801777a:	db07      	blt.n	801778c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801777c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801777e:	4410      	add	r0, r2
 8017780:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8017782:	3b01      	subs	r3, #1
 8017784:	4411      	add	r1, r2
 8017786:	3502      	adds	r5, #2
 8017788:	e7ee      	b.n	8017768 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801778a:	d017      	beq.n	80177bc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801778c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801778e:	1e5a      	subs	r2, r3, #1
 8017790:	fb04 0402 	mla	r4, r4, r2, r0
 8017794:	1424      	asrs	r4, r4, #16
 8017796:	d409      	bmi.n	80177ac <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8017798:	42bc      	cmp	r4, r7
 801779a:	da07      	bge.n	80177ac <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801779c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801779e:	fb04 1202 	mla	r2, r4, r2, r1
 80177a2:	1412      	asrs	r2, r2, #16
 80177a4:	d402      	bmi.n	80177ac <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80177a6:	42b2      	cmp	r2, r6
 80177a8:	f2c0 80bf 	blt.w	801792a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80177ac:	2700      	movs	r7, #0
 80177ae:	19da      	adds	r2, r3, r7
 80177b0:	2a00      	cmp	r2, #0
 80177b2:	dc3e      	bgt.n	8017832 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80177b4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80177b8:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 80177bc:	f1bb 0f00 	cmp.w	fp, #0
 80177c0:	f340 8121 	ble.w	8017a06 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 80177c4:	ee30 0a04 	vadd.f32	s0, s0, s8
 80177c8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80177cc:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80177d0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80177d2:	f1bb 0b01 	subs.w	fp, fp, #1
 80177d6:	ee31 1a05 	vadd.f32	s2, s2, s10
 80177da:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80177de:	eeb0 6a62 	vmov.f32	s12, s5
 80177e2:	ee61 7a27 	vmul.f32	s15, s2, s15
 80177e6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80177ea:	ee77 2a62 	vsub.f32	s5, s14, s5
 80177ee:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 80177f2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80177f6:	eeb0 6a43 	vmov.f32	s12, s6
 80177fa:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80177fe:	ee12 2a90 	vmov	r2, s5
 8017802:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8017806:	fb92 f3f3 	sdiv	r3, r2, r3
 801780a:	ee13 2a10 	vmov	r2, s6
 801780e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8017812:	9313      	str	r3, [sp, #76]	; 0x4c
 8017814:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8017816:	fb92 f3f3 	sdiv	r3, r2, r3
 801781a:	9a03      	ldr	r2, [sp, #12]
 801781c:	9314      	str	r3, [sp, #80]	; 0x50
 801781e:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8017822:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8017824:	eeb0 3a67 	vmov.f32	s6, s15
 8017828:	bf08      	it	eq
 801782a:	4613      	moveq	r3, r2
 801782c:	eef0 2a47 	vmov.f32	s5, s14
 8017830:	e789      	b.n	8017746 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8017832:	1406      	asrs	r6, r0, #16
 8017834:	d42d      	bmi.n	8017892 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8017836:	f8d9 4008 	ldr.w	r4, [r9, #8]
 801783a:	42b4      	cmp	r4, r6
 801783c:	dd29      	ble.n	8017892 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801783e:	ea5f 4c21 	movs.w	ip, r1, asr #16
 8017842:	d426      	bmi.n	8017892 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8017844:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8017848:	4562      	cmp	r2, ip
 801784a:	dd22      	ble.n	8017892 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801784c:	b224      	sxth	r4, r4
 801784e:	9a01      	ldr	r2, [sp, #4]
 8017850:	fb0c 6404 	mla	r4, ip, r4, r6
 8017854:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 8017858:	0e22      	lsrs	r2, r4, #24
 801785a:	d01a      	beq.n	8017892 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801785c:	9e04      	ldr	r6, [sp, #16]
 801785e:	4372      	muls	r2, r6
 8017860:	1c56      	adds	r6, r2, #1
 8017862:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8017866:	1212      	asrs	r2, r2, #8
 8017868:	0a26      	lsrs	r6, r4, #8
 801786a:	2aff      	cmp	r2, #255	; 0xff
 801786c:	9605      	str	r6, [sp, #20]
 801786e:	d116      	bne.n	801789e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8017870:	f06f 0201 	mvn.w	r2, #1
 8017874:	fb02 fc07 	mul.w	ip, r2, r7
 8017878:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801787c:	0962      	lsrs	r2, r4, #5
 801787e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017882:	f026 0607 	bic.w	r6, r6, #7
 8017886:	4316      	orrs	r6, r2
 8017888:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801788c:	4326      	orrs	r6, r4
 801788e:	f825 600c 	strh.w	r6, [r5, ip]
 8017892:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8017894:	4410      	add	r0, r2
 8017896:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8017898:	3f01      	subs	r7, #1
 801789a:	4411      	add	r1, r2
 801789c:	e787      	b.n	80177ae <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801789e:	f06f 0601 	mvn.w	r6, #1
 80178a2:	437e      	muls	r6, r7
 80178a4:	fa1f fa82 	uxth.w	sl, r2
 80178a8:	f835 8006 	ldrh.w	r8, [r5, r6]
 80178ac:	9602      	str	r6, [sp, #8]
 80178ae:	ea4f 2e28 	mov.w	lr, r8, asr #8
 80178b2:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 80178b6:	43d2      	mvns	r2, r2
 80178b8:	b2d2      	uxtb	r2, r2
 80178ba:	fb1c fc0a 	smulbb	ip, ip, sl
 80178be:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 80178c2:	fb0e ce02 	mla	lr, lr, r2, ip
 80178c6:	b2e4      	uxtb	r4, r4
 80178c8:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 80178cc:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80178d0:	f89d 6014 	ldrb.w	r6, [sp, #20]
 80178d4:	fa5f f888 	uxtb.w	r8, r8
 80178d8:	fb14 f40a 	smulbb	r4, r4, sl
 80178dc:	fb08 4402 	mla	r4, r8, r2, r4
 80178e0:	fa1f fe8e 	uxth.w	lr, lr
 80178e4:	fb16 f60a 	smulbb	r6, r6, sl
 80178e8:	b2a4      	uxth	r4, r4
 80178ea:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 80178ee:	fb0c 6c02 	mla	ip, ip, r2, r6
 80178f2:	f10e 0201 	add.w	r2, lr, #1
 80178f6:	1c66      	adds	r6, r4, #1
 80178f8:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 80178fc:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8017900:	fa1f fc8c 	uxth.w	ip, ip
 8017904:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8017908:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801790c:	ea46 0e0e 	orr.w	lr, r6, lr
 8017910:	f10c 0601 	add.w	r6, ip, #1
 8017914:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8017918:	0976      	lsrs	r6, r6, #5
 801791a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801791e:	9a02      	ldr	r2, [sp, #8]
 8017920:	ea4e 0e06 	orr.w	lr, lr, r6
 8017924:	f825 e002 	strh.w	lr, [r5, r2]
 8017928:	e7b3      	b.n	8017892 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801792a:	f04f 0800 	mov.w	r8, #0
 801792e:	eba3 0208 	sub.w	r2, r3, r8
 8017932:	2a00      	cmp	r2, #0
 8017934:	f77f af3e 	ble.w	80177b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8017938:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 801793c:	1404      	asrs	r4, r0, #16
 801793e:	140a      	asrs	r2, r1, #16
 8017940:	fb06 4202 	mla	r2, r6, r2, r4
 8017944:	9c01      	ldr	r4, [sp, #4]
 8017946:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 801794a:	0e22      	lsrs	r2, r4, #24
 801794c:	d016      	beq.n	801797c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801794e:	9e04      	ldr	r6, [sp, #16]
 8017950:	4372      	muls	r2, r6
 8017952:	1c56      	adds	r6, r2, #1
 8017954:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8017958:	1212      	asrs	r2, r2, #8
 801795a:	2aff      	cmp	r2, #255	; 0xff
 801795c:	ea4f 2614 	mov.w	r6, r4, lsr #8
 8017960:	d113      	bne.n	801798a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 8017962:	0962      	lsrs	r2, r4, #5
 8017964:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 8017968:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801796c:	f026 0607 	bic.w	r6, r6, #7
 8017970:	4316      	orrs	r6, r2
 8017972:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8017976:	4326      	orrs	r6, r4
 8017978:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 801797c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801797e:	4410      	add	r0, r2
 8017980:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8017982:	f108 0801 	add.w	r8, r8, #1
 8017986:	4411      	add	r1, r2
 8017988:	e7d1      	b.n	801792e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 801798a:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 801798e:	fa1f fa82 	uxth.w	sl, r2
 8017992:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8017996:	f3c4 4707 	ubfx	r7, r4, #16, #8
 801799a:	43d2      	mvns	r2, r2
 801799c:	b2d2      	uxtb	r2, r2
 801799e:	fb17 f70a 	smulbb	r7, r7, sl
 80179a2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80179a6:	fb0c 7c02 	mla	ip, ip, r2, r7
 80179aa:	b2e4      	uxtb	r4, r4
 80179ac:	ea4f 07ee 	mov.w	r7, lr, asr #3
 80179b0:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80179b4:	fa5f fe8e 	uxtb.w	lr, lr
 80179b8:	fb14 f40a 	smulbb	r4, r4, sl
 80179bc:	fb0e 4402 	mla	r4, lr, r2, r4
 80179c0:	b2f6      	uxtb	r6, r6
 80179c2:	fa1f fc8c 	uxth.w	ip, ip
 80179c6:	fb16 f60a 	smulbb	r6, r6, sl
 80179ca:	b2a4      	uxth	r4, r4
 80179cc:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80179d0:	fb07 6702 	mla	r7, r7, r2, r6
 80179d4:	f10c 0201 	add.w	r2, ip, #1
 80179d8:	1c66      	adds	r6, r4, #1
 80179da:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 80179de:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 80179e2:	b2bf      	uxth	r7, r7
 80179e4:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80179e8:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80179ec:	ea46 0c0c 	orr.w	ip, r6, ip
 80179f0:	1c7e      	adds	r6, r7, #1
 80179f2:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 80179f6:	0976      	lsrs	r6, r6, #5
 80179f8:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80179fc:	ea4c 0c06 	orr.w	ip, ip, r6
 8017a00:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 8017a04:	e7ba      	b.n	801797c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 8017a06:	b007      	add	sp, #28
 8017a08:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08017a0c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8017a0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017a10:	b085      	sub	sp, #20
 8017a12:	468b      	mov	fp, r1
 8017a14:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8017a16:	9203      	str	r2, [sp, #12]
 8017a18:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8017a1c:	6841      	ldr	r1, [r0, #4]
 8017a1e:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 8017a22:	fb01 2404 	mla	r4, r1, r4, r2
 8017a26:	6802      	ldr	r2, [r0, #0]
 8017a28:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8017a2c:	f8d8 2000 	ldr.w	r2, [r8]
 8017a30:	9201      	str	r2, [sp, #4]
 8017a32:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8017a36:	f1bb 0f00 	cmp.w	fp, #0
 8017a3a:	dc03      	bgt.n	8017a44 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8017a3c:	9a03      	ldr	r2, [sp, #12]
 8017a3e:	2a00      	cmp	r2, #0
 8017a40:	f340 814f 	ble.w	8017ce2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8017a44:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8017a46:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8017a4a:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8017a4e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8017a52:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8017a54:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8017a58:	2b00      	cmp	r3, #0
 8017a5a:	dd0e      	ble.n	8017a7a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8017a5c:	1408      	asrs	r0, r1, #16
 8017a5e:	d405      	bmi.n	8017a6c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8017a60:	42b8      	cmp	r0, r7
 8017a62:	da03      	bge.n	8017a6c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8017a64:	1410      	asrs	r0, r2, #16
 8017a66:	d401      	bmi.n	8017a6c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8017a68:	42b0      	cmp	r0, r6
 8017a6a:	db07      	blt.n	8017a7c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8017a6c:	9811      	ldr	r0, [sp, #68]	; 0x44
 8017a6e:	4401      	add	r1, r0
 8017a70:	9812      	ldr	r0, [sp, #72]	; 0x48
 8017a72:	3b01      	subs	r3, #1
 8017a74:	4402      	add	r2, r0
 8017a76:	3402      	adds	r4, #2
 8017a78:	e7ee      	b.n	8017a58 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8017a7a:	d017      	beq.n	8017aac <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8017a7c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8017a7e:	1e58      	subs	r0, r3, #1
 8017a80:	fb05 1500 	mla	r5, r5, r0, r1
 8017a84:	142d      	asrs	r5, r5, #16
 8017a86:	d409      	bmi.n	8017a9c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8017a88:	42bd      	cmp	r5, r7
 8017a8a:	da07      	bge.n	8017a9c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8017a8c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8017a8e:	fb05 2000 	mla	r0, r5, r0, r2
 8017a92:	1400      	asrs	r0, r0, #16
 8017a94:	d402      	bmi.n	8017a9c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8017a96:	42b0      	cmp	r0, r6
 8017a98:	f2c0 80ba 	blt.w	8017c10 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8017a9c:	2600      	movs	r6, #0
 8017a9e:	1998      	adds	r0, r3, r6
 8017aa0:	2800      	cmp	r0, #0
 8017aa2:	dc3e      	bgt.n	8017b22 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8017aa4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8017aa8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8017aac:	f1bb 0f00 	cmp.w	fp, #0
 8017ab0:	f340 8117 	ble.w	8017ce2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8017ab4:	ee30 0a04 	vadd.f32	s0, s0, s8
 8017ab8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8017abc:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8017ac0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8017ac2:	f1bb 0b01 	subs.w	fp, fp, #1
 8017ac6:	ee31 1a05 	vadd.f32	s2, s2, s10
 8017aca:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8017ace:	eeb0 6a62 	vmov.f32	s12, s5
 8017ad2:	ee61 7a27 	vmul.f32	s15, s2, s15
 8017ad6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8017ada:	ee77 2a62 	vsub.f32	s5, s14, s5
 8017ade:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8017ae2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8017ae6:	eeb0 6a43 	vmov.f32	s12, s6
 8017aea:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8017aee:	ee12 2a90 	vmov	r2, s5
 8017af2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8017af6:	fb92 f3f3 	sdiv	r3, r2, r3
 8017afa:	ee13 2a10 	vmov	r2, s6
 8017afe:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8017b02:	9311      	str	r3, [sp, #68]	; 0x44
 8017b04:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8017b06:	fb92 f3f3 	sdiv	r3, r2, r3
 8017b0a:	9a03      	ldr	r2, [sp, #12]
 8017b0c:	9312      	str	r3, [sp, #72]	; 0x48
 8017b0e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8017b12:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8017b14:	eeb0 3a67 	vmov.f32	s6, s15
 8017b18:	bf08      	it	eq
 8017b1a:	4613      	moveq	r3, r2
 8017b1c:	eef0 2a47 	vmov.f32	s5, s14
 8017b20:	e789      	b.n	8017a36 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8017b22:	140f      	asrs	r7, r1, #16
 8017b24:	d424      	bmi.n	8017b70 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8017b26:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8017b2a:	42bd      	cmp	r5, r7
 8017b2c:	dd20      	ble.n	8017b70 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8017b2e:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8017b32:	d41d      	bmi.n	8017b70 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8017b34:	f8d8 000c 	ldr.w	r0, [r8, #12]
 8017b38:	4560      	cmp	r0, ip
 8017b3a:	dd19      	ble.n	8017b70 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8017b3c:	b22d      	sxth	r5, r5
 8017b3e:	fb0c 7505 	mla	r5, ip, r5, r7
 8017b42:	9801      	ldr	r0, [sp, #4]
 8017b44:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 8017b48:	0e07      	lsrs	r7, r0, #24
 8017b4a:	2fff      	cmp	r7, #255	; 0xff
 8017b4c:	d116      	bne.n	8017b7c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8017b4e:	f06f 0501 	mvn.w	r5, #1
 8017b52:	fb05 f706 	mul.w	r7, r5, r6
 8017b56:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 8017b5a:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8017b5e:	0945      	lsrs	r5, r0, #5
 8017b60:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8017b64:	ea4c 0505 	orr.w	r5, ip, r5
 8017b68:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8017b6c:	4305      	orrs	r5, r0
 8017b6e:	53e5      	strh	r5, [r4, r7]
 8017b70:	9811      	ldr	r0, [sp, #68]	; 0x44
 8017b72:	4401      	add	r1, r0
 8017b74:	9812      	ldr	r0, [sp, #72]	; 0x48
 8017b76:	3e01      	subs	r6, #1
 8017b78:	4402      	add	r2, r0
 8017b7a:	e790      	b.n	8017a9e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8017b7c:	b2fd      	uxtb	r5, r7
 8017b7e:	2f00      	cmp	r7, #0
 8017b80:	d0f6      	beq.n	8017b70 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8017b82:	f06f 0701 	mvn.w	r7, #1
 8017b86:	4377      	muls	r7, r6
 8017b88:	fa1f f985 	uxth.w	r9, r5
 8017b8c:	f834 e007 	ldrh.w	lr, [r4, r7]
 8017b90:	9702      	str	r7, [sp, #8]
 8017b92:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8017b96:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8017b9a:	43ed      	mvns	r5, r5
 8017b9c:	b2ed      	uxtb	r5, r5
 8017b9e:	fb17 f709 	smulbb	r7, r7, r9
 8017ba2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8017ba6:	fb0c 7c05 	mla	ip, ip, r5, r7
 8017baa:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8017bae:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8017bb2:	b2c0      	uxtb	r0, r0
 8017bb4:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8017bb8:	fa5f fe8e 	uxtb.w	lr, lr
 8017bbc:	fb10 f009 	smulbb	r0, r0, r9
 8017bc0:	fb0e 0005 	mla	r0, lr, r5, r0
 8017bc4:	b280      	uxth	r0, r0
 8017bc6:	fa1f fc8c 	uxth.w	ip, ip
 8017bca:	fb1a fa09 	smulbb	sl, sl, r9
 8017bce:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8017bd2:	fb07 a705 	mla	r7, r7, r5, sl
 8017bd6:	f100 0a01 	add.w	sl, r0, #1
 8017bda:	f10c 0501 	add.w	r5, ip, #1
 8017bde:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8017be2:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8017be6:	b2bf      	uxth	r7, r7
 8017be8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8017bec:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8017bf0:	ea4a 0c0c 	orr.w	ip, sl, ip
 8017bf4:	f107 0a01 	add.w	sl, r7, #1
 8017bf8:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8017bfc:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8017c00:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8017c04:	9802      	ldr	r0, [sp, #8]
 8017c06:	ea4c 0c0a 	orr.w	ip, ip, sl
 8017c0a:	f824 c000 	strh.w	ip, [r4, r0]
 8017c0e:	e7af      	b.n	8017b70 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8017c10:	f04f 0e00 	mov.w	lr, #0
 8017c14:	eba3 000e 	sub.w	r0, r3, lr
 8017c18:	2800      	cmp	r0, #0
 8017c1a:	f77f af43 	ble.w	8017aa4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8017c1e:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8017c22:	140d      	asrs	r5, r1, #16
 8017c24:	1410      	asrs	r0, r2, #16
 8017c26:	fb06 5000 	mla	r0, r6, r0, r5
 8017c2a:	9d01      	ldr	r5, [sp, #4]
 8017c2c:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8017c30:	0e2e      	lsrs	r6, r5, #24
 8017c32:	2eff      	cmp	r6, #255	; 0xff
 8017c34:	d112      	bne.n	8017c5c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 8017c36:	482c      	ldr	r0, [pc, #176]	; (8017ce8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 8017c38:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8017c3c:	0968      	lsrs	r0, r5, #5
 8017c3e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8017c42:	4330      	orrs	r0, r6
 8017c44:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8017c48:	4328      	orrs	r0, r5
 8017c4a:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 8017c4e:	9811      	ldr	r0, [sp, #68]	; 0x44
 8017c50:	4401      	add	r1, r0
 8017c52:	9812      	ldr	r0, [sp, #72]	; 0x48
 8017c54:	f10e 0e01 	add.w	lr, lr, #1
 8017c58:	4402      	add	r2, r0
 8017c5a:	e7db      	b.n	8017c14 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 8017c5c:	b2f0      	uxtb	r0, r6
 8017c5e:	2e00      	cmp	r6, #0
 8017c60:	d0f5      	beq.n	8017c4e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8017c62:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8017c66:	fa1f f980 	uxth.w	r9, r0
 8017c6a:	ea4f 272c 	mov.w	r7, ip, asr #8
 8017c6e:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8017c72:	43c0      	mvns	r0, r0
 8017c74:	b2c0      	uxtb	r0, r0
 8017c76:	fb16 f609 	smulbb	r6, r6, r9
 8017c7a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8017c7e:	fb07 6700 	mla	r7, r7, r0, r6
 8017c82:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8017c86:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8017c8a:	b2ed      	uxtb	r5, r5
 8017c8c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8017c90:	fa5f fc8c 	uxtb.w	ip, ip
 8017c94:	fb15 f509 	smulbb	r5, r5, r9
 8017c98:	fb0c 5500 	mla	r5, ip, r0, r5
 8017c9c:	b2bf      	uxth	r7, r7
 8017c9e:	fb1a fa09 	smulbb	sl, sl, r9
 8017ca2:	b2ad      	uxth	r5, r5
 8017ca4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8017ca8:	fb06 a600 	mla	r6, r6, r0, sl
 8017cac:	1c78      	adds	r0, r7, #1
 8017cae:	f105 0a01 	add.w	sl, r5, #1
 8017cb2:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8017cb6:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8017cba:	b2b6      	uxth	r6, r6
 8017cbc:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8017cc0:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8017cc4:	ea4a 0707 	orr.w	r7, sl, r7
 8017cc8:	f106 0a01 	add.w	sl, r6, #1
 8017ccc:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8017cd0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8017cd4:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8017cd8:	ea47 070a 	orr.w	r7, r7, sl
 8017cdc:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 8017ce0:	e7b5      	b.n	8017c4e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8017ce2:	b005      	add	sp, #20
 8017ce4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017ce8:	fffff800 	.word	0xfffff800

08017cec <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8017cec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017cf0:	b087      	sub	sp, #28
 8017cf2:	468b      	mov	fp, r1
 8017cf4:	9815      	ldr	r0, [sp, #84]	; 0x54
 8017cf6:	9203      	str	r2, [sp, #12]
 8017cf8:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8017cfc:	9204      	str	r2, [sp, #16]
 8017cfe:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8017d02:	6841      	ldr	r1, [r0, #4]
 8017d04:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 8017d08:	fb01 2404 	mla	r4, r1, r4, r2
 8017d0c:	6802      	ldr	r2, [r0, #0]
 8017d0e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8017d12:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8017d16:	3201      	adds	r2, #1
 8017d18:	f022 0201 	bic.w	r2, r2, #1
 8017d1c:	9200      	str	r2, [sp, #0]
 8017d1e:	f8d9 2000 	ldr.w	r2, [r9]
 8017d22:	9201      	str	r2, [sp, #4]
 8017d24:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8017d28:	f1bb 0f00 	cmp.w	fp, #0
 8017d2c:	dc03      	bgt.n	8017d36 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8017d2e:	9a03      	ldr	r2, [sp, #12]
 8017d30:	2a00      	cmp	r2, #0
 8017d32:	f340 8169 	ble.w	8018008 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8017d36:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8017d38:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8017d3c:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8017d40:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8017d44:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8017d46:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8017d4a:	2b00      	cmp	r3, #0
 8017d4c:	dd0e      	ble.n	8017d6c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8017d4e:	1402      	asrs	r2, r0, #16
 8017d50:	d405      	bmi.n	8017d5e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8017d52:	42ba      	cmp	r2, r7
 8017d54:	da03      	bge.n	8017d5e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8017d56:	140a      	asrs	r2, r1, #16
 8017d58:	d401      	bmi.n	8017d5e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8017d5a:	42b2      	cmp	r2, r6
 8017d5c:	db07      	blt.n	8017d6e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8017d5e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8017d60:	4410      	add	r0, r2
 8017d62:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8017d64:	3b01      	subs	r3, #1
 8017d66:	4411      	add	r1, r2
 8017d68:	3402      	adds	r4, #2
 8017d6a:	e7ee      	b.n	8017d4a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8017d6c:	d017      	beq.n	8017d9e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8017d6e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8017d70:	1e5a      	subs	r2, r3, #1
 8017d72:	fb05 0502 	mla	r5, r5, r2, r0
 8017d76:	142d      	asrs	r5, r5, #16
 8017d78:	d409      	bmi.n	8017d8e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8017d7a:	42bd      	cmp	r5, r7
 8017d7c:	da07      	bge.n	8017d8e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8017d7e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8017d80:	fb05 1202 	mla	r2, r5, r2, r1
 8017d84:	1412      	asrs	r2, r2, #16
 8017d86:	d402      	bmi.n	8017d8e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8017d88:	42b2      	cmp	r2, r6
 8017d8a:	f2c0 80c7 	blt.w	8017f1c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 8017d8e:	2700      	movs	r7, #0
 8017d90:	19da      	adds	r2, r3, r7
 8017d92:	2a00      	cmp	r2, #0
 8017d94:	dc3e      	bgt.n	8017e14 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8017d96:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8017d9a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8017d9e:	f1bb 0f00 	cmp.w	fp, #0
 8017da2:	f340 8131 	ble.w	8018008 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8017da6:	ee30 0a04 	vadd.f32	s0, s0, s8
 8017daa:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8017dae:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8017db2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8017db4:	f1bb 0b01 	subs.w	fp, fp, #1
 8017db8:	ee31 1a05 	vadd.f32	s2, s2, s10
 8017dbc:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8017dc0:	eeb0 6a62 	vmov.f32	s12, s5
 8017dc4:	ee61 7a27 	vmul.f32	s15, s2, s15
 8017dc8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8017dcc:	ee77 2a62 	vsub.f32	s5, s14, s5
 8017dd0:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8017dd4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8017dd8:	eeb0 6a43 	vmov.f32	s12, s6
 8017ddc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8017de0:	ee12 2a90 	vmov	r2, s5
 8017de4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8017de8:	fb92 f3f3 	sdiv	r3, r2, r3
 8017dec:	ee13 2a10 	vmov	r2, s6
 8017df0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8017df4:	9313      	str	r3, [sp, #76]	; 0x4c
 8017df6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8017df8:	fb92 f3f3 	sdiv	r3, r2, r3
 8017dfc:	9a03      	ldr	r2, [sp, #12]
 8017dfe:	9314      	str	r3, [sp, #80]	; 0x50
 8017e00:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8017e04:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8017e06:	eeb0 3a67 	vmov.f32	s6, s15
 8017e0a:	bf08      	it	eq
 8017e0c:	4613      	moveq	r3, r2
 8017e0e:	eef0 2a47 	vmov.f32	s5, s14
 8017e12:	e789      	b.n	8017d28 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8017e14:	1405      	asrs	r5, r0, #16
 8017e16:	d435      	bmi.n	8017e84 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8017e18:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8017e1c:	42aa      	cmp	r2, r5
 8017e1e:	dd31      	ble.n	8017e84 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8017e20:	140e      	asrs	r6, r1, #16
 8017e22:	d42f      	bmi.n	8017e84 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8017e24:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8017e28:	42b2      	cmp	r2, r6
 8017e2a:	dd2b      	ble.n	8017e84 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8017e2c:	9a00      	ldr	r2, [sp, #0]
 8017e2e:	fb06 5502 	mla	r5, r6, r2, r5
 8017e32:	086a      	lsrs	r2, r5, #1
 8017e34:	9e01      	ldr	r6, [sp, #4]
 8017e36:	5cb2      	ldrb	r2, [r6, r2]
 8017e38:	07ee      	lsls	r6, r5, #31
 8017e3a:	bf54      	ite	pl
 8017e3c:	f002 020f 	andpl.w	r2, r2, #15
 8017e40:	1112      	asrmi	r2, r2, #4
 8017e42:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8017e46:	b2d2      	uxtb	r2, r2
 8017e48:	b1e2      	cbz	r2, 8017e84 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8017e4a:	9d04      	ldr	r5, [sp, #16]
 8017e4c:	436a      	muls	r2, r5
 8017e4e:	1c55      	adds	r5, r2, #1
 8017e50:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8017e54:	4d6e      	ldr	r5, [pc, #440]	; (8018010 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 8017e56:	682d      	ldr	r5, [r5, #0]
 8017e58:	1212      	asrs	r2, r2, #8
 8017e5a:	0a2e      	lsrs	r6, r5, #8
 8017e5c:	2aff      	cmp	r2, #255	; 0xff
 8017e5e:	9605      	str	r6, [sp, #20]
 8017e60:	d116      	bne.n	8017e90 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8017e62:	f06f 0201 	mvn.w	r2, #1
 8017e66:	fb02 fc07 	mul.w	ip, r2, r7
 8017e6a:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 8017e6e:	096a      	lsrs	r2, r5, #5
 8017e70:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017e74:	f026 0607 	bic.w	r6, r6, #7
 8017e78:	4316      	orrs	r6, r2
 8017e7a:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8017e7e:	432e      	orrs	r6, r5
 8017e80:	f824 600c 	strh.w	r6, [r4, ip]
 8017e84:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8017e86:	4410      	add	r0, r2
 8017e88:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8017e8a:	3f01      	subs	r7, #1
 8017e8c:	4411      	add	r1, r2
 8017e8e:	e77f      	b.n	8017d90 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 8017e90:	f06f 0601 	mvn.w	r6, #1
 8017e94:	437e      	muls	r6, r7
 8017e96:	fa1f fa82 	uxth.w	sl, r2
 8017e9a:	f834 8006 	ldrh.w	r8, [r4, r6]
 8017e9e:	9602      	str	r6, [sp, #8]
 8017ea0:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8017ea4:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 8017ea8:	43d2      	mvns	r2, r2
 8017eaa:	b2d2      	uxtb	r2, r2
 8017eac:	fb1c fc0a 	smulbb	ip, ip, sl
 8017eb0:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8017eb4:	fb0e ce02 	mla	lr, lr, r2, ip
 8017eb8:	b2ed      	uxtb	r5, r5
 8017eba:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8017ebe:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8017ec2:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8017ec6:	fa5f f888 	uxtb.w	r8, r8
 8017eca:	fb15 f50a 	smulbb	r5, r5, sl
 8017ece:	fb08 5502 	mla	r5, r8, r2, r5
 8017ed2:	fa1f fe8e 	uxth.w	lr, lr
 8017ed6:	fb16 f60a 	smulbb	r6, r6, sl
 8017eda:	b2ad      	uxth	r5, r5
 8017edc:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8017ee0:	fb0c 6c02 	mla	ip, ip, r2, r6
 8017ee4:	f10e 0201 	add.w	r2, lr, #1
 8017ee8:	1c6e      	adds	r6, r5, #1
 8017eea:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8017eee:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 8017ef2:	fa1f fc8c 	uxth.w	ip, ip
 8017ef6:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8017efa:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8017efe:	ea46 0e0e 	orr.w	lr, r6, lr
 8017f02:	f10c 0601 	add.w	r6, ip, #1
 8017f06:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8017f0a:	0976      	lsrs	r6, r6, #5
 8017f0c:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8017f10:	9a02      	ldr	r2, [sp, #8]
 8017f12:	ea4e 0e06 	orr.w	lr, lr, r6
 8017f16:	f824 e002 	strh.w	lr, [r4, r2]
 8017f1a:	e7b3      	b.n	8017e84 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8017f1c:	f04f 0800 	mov.w	r8, #0
 8017f20:	eba3 0208 	sub.w	r2, r3, r8
 8017f24:	2a00      	cmp	r2, #0
 8017f26:	f77f af36 	ble.w	8017d96 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8017f2a:	9e00      	ldr	r6, [sp, #0]
 8017f2c:	1402      	asrs	r2, r0, #16
 8017f2e:	140d      	asrs	r5, r1, #16
 8017f30:	fb06 2505 	mla	r5, r6, r5, r2
 8017f34:	086a      	lsrs	r2, r5, #1
 8017f36:	9e01      	ldr	r6, [sp, #4]
 8017f38:	5cb2      	ldrb	r2, [r6, r2]
 8017f3a:	07ed      	lsls	r5, r5, #31
 8017f3c:	bf54      	ite	pl
 8017f3e:	f002 020f 	andpl.w	r2, r2, #15
 8017f42:	1112      	asrmi	r2, r2, #4
 8017f44:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8017f48:	b2d2      	uxtb	r2, r2
 8017f4a:	b1c2      	cbz	r2, 8017f7e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8017f4c:	9d04      	ldr	r5, [sp, #16]
 8017f4e:	436a      	muls	r2, r5
 8017f50:	1c55      	adds	r5, r2, #1
 8017f52:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8017f56:	4d2e      	ldr	r5, [pc, #184]	; (8018010 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 8017f58:	1212      	asrs	r2, r2, #8
 8017f5a:	682e      	ldr	r6, [r5, #0]
 8017f5c:	2aff      	cmp	r2, #255	; 0xff
 8017f5e:	ea4f 2516 	mov.w	r5, r6, lsr #8
 8017f62:	d113      	bne.n	8017f8c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8017f64:	0972      	lsrs	r2, r6, #5
 8017f66:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 8017f6a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017f6e:	f025 0507 	bic.w	r5, r5, #7
 8017f72:	4315      	orrs	r5, r2
 8017f74:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8017f78:	4335      	orrs	r5, r6
 8017f7a:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 8017f7e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8017f80:	4410      	add	r0, r2
 8017f82:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8017f84:	f108 0801 	add.w	r8, r8, #1
 8017f88:	4411      	add	r1, r2
 8017f8a:	e7c9      	b.n	8017f20 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8017f8c:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8017f90:	fa1f fa82 	uxth.w	sl, r2
 8017f94:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8017f98:	f3c6 4707 	ubfx	r7, r6, #16, #8
 8017f9c:	43d2      	mvns	r2, r2
 8017f9e:	b2d2      	uxtb	r2, r2
 8017fa0:	fb17 f70a 	smulbb	r7, r7, sl
 8017fa4:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8017fa8:	fb0c 7c02 	mla	ip, ip, r2, r7
 8017fac:	b2f6      	uxtb	r6, r6
 8017fae:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8017fb2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8017fb6:	fa5f fe8e 	uxtb.w	lr, lr
 8017fba:	fb16 f60a 	smulbb	r6, r6, sl
 8017fbe:	fb0e 6602 	mla	r6, lr, r2, r6
 8017fc2:	b2ed      	uxtb	r5, r5
 8017fc4:	fa1f fc8c 	uxth.w	ip, ip
 8017fc8:	fb15 f50a 	smulbb	r5, r5, sl
 8017fcc:	b2b6      	uxth	r6, r6
 8017fce:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8017fd2:	fb07 5702 	mla	r7, r7, r2, r5
 8017fd6:	f10c 0201 	add.w	r2, ip, #1
 8017fda:	1c75      	adds	r5, r6, #1
 8017fdc:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8017fe0:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 8017fe4:	b2bf      	uxth	r7, r7
 8017fe6:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8017fea:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8017fee:	ea45 0c0c 	orr.w	ip, r5, ip
 8017ff2:	1c7d      	adds	r5, r7, #1
 8017ff4:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 8017ff8:	096d      	lsrs	r5, r5, #5
 8017ffa:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8017ffe:	ea4c 0c05 	orr.w	ip, ip, r5
 8018002:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 8018006:	e7ba      	b.n	8017f7e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8018008:	b007      	add	sp, #28
 801800a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801800e:	bf00      	nop
 8018010:	2001795c 	.word	0x2001795c

08018014 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018014:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018018:	b087      	sub	sp, #28
 801801a:	f8df 830c 	ldr.w	r8, [pc, #780]	; 8018328 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 801801e:	9815      	ldr	r0, [sp, #84]	; 0x54
 8018020:	9205      	str	r2, [sp, #20]
 8018022:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8018026:	9101      	str	r1, [sp, #4]
 8018028:	6841      	ldr	r1, [r0, #4]
 801802a:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 801802e:	fb01 2404 	mla	r4, r1, r4, r2
 8018032:	6802      	ldr	r2, [r0, #0]
 8018034:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8018038:	f8db 2008 	ldr.w	r2, [fp, #8]
 801803c:	3201      	adds	r2, #1
 801803e:	f022 0201 	bic.w	r2, r2, #1
 8018042:	9202      	str	r2, [sp, #8]
 8018044:	f8db 2000 	ldr.w	r2, [fp]
 8018048:	9203      	str	r2, [sp, #12]
 801804a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801804e:	9a01      	ldr	r2, [sp, #4]
 8018050:	2a00      	cmp	r2, #0
 8018052:	dc03      	bgt.n	801805c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8018054:	9a05      	ldr	r2, [sp, #20]
 8018056:	2a00      	cmp	r2, #0
 8018058:	f340 8162 	ble.w	8018320 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801805c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801805e:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 8018062:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 8018066:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801806a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801806c:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8018070:	2b00      	cmp	r3, #0
 8018072:	dd0e      	ble.n	8018092 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8018074:	1402      	asrs	r2, r0, #16
 8018076:	d405      	bmi.n	8018084 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8018078:	42ba      	cmp	r2, r7
 801807a:	da03      	bge.n	8018084 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801807c:	140a      	asrs	r2, r1, #16
 801807e:	d401      	bmi.n	8018084 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8018080:	42b2      	cmp	r2, r6
 8018082:	db07      	blt.n	8018094 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8018084:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8018086:	4410      	add	r0, r2
 8018088:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801808a:	3b01      	subs	r3, #1
 801808c:	4411      	add	r1, r2
 801808e:	3402      	adds	r4, #2
 8018090:	e7ee      	b.n	8018070 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8018092:	d017      	beq.n	80180c4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8018094:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8018096:	1e5a      	subs	r2, r3, #1
 8018098:	fb05 0502 	mla	r5, r5, r2, r0
 801809c:	142d      	asrs	r5, r5, #16
 801809e:	d409      	bmi.n	80180b4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80180a0:	42bd      	cmp	r5, r7
 80180a2:	da07      	bge.n	80180b4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80180a4:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80180a6:	fb05 1202 	mla	r2, r5, r2, r1
 80180aa:	1412      	asrs	r2, r2, #16
 80180ac:	d402      	bmi.n	80180b4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80180ae:	42b2      	cmp	r2, r6
 80180b0:	f2c0 80c3 	blt.w	801823a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 80180b4:	2500      	movs	r5, #0
 80180b6:	195a      	adds	r2, r3, r5
 80180b8:	2a00      	cmp	r2, #0
 80180ba:	dc3f      	bgt.n	801813c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 80180bc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80180c0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80180c4:	9b01      	ldr	r3, [sp, #4]
 80180c6:	2b00      	cmp	r3, #0
 80180c8:	f340 812a 	ble.w	8018320 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 80180cc:	ee30 0a04 	vadd.f32	s0, s0, s8
 80180d0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80180d4:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80180d8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80180da:	ee31 1a05 	vadd.f32	s2, s2, s10
 80180de:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80180e2:	eeb0 6a62 	vmov.f32	s12, s5
 80180e6:	ee61 7a27 	vmul.f32	s15, s2, s15
 80180ea:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80180ee:	ee77 2a62 	vsub.f32	s5, s14, s5
 80180f2:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 80180f6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80180fa:	eeb0 6a43 	vmov.f32	s12, s6
 80180fe:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018102:	ee12 2a90 	vmov	r2, s5
 8018106:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801810a:	fb92 f3f3 	sdiv	r3, r2, r3
 801810e:	ee13 2a10 	vmov	r2, s6
 8018112:	9313      	str	r3, [sp, #76]	; 0x4c
 8018114:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018116:	fb92 f3f3 	sdiv	r3, r2, r3
 801811a:	9314      	str	r3, [sp, #80]	; 0x50
 801811c:	9b01      	ldr	r3, [sp, #4]
 801811e:	9a05      	ldr	r2, [sp, #20]
 8018120:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018124:	3b01      	subs	r3, #1
 8018126:	9301      	str	r3, [sp, #4]
 8018128:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801812c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801812e:	eeb0 3a67 	vmov.f32	s6, s15
 8018132:	bf08      	it	eq
 8018134:	4613      	moveq	r3, r2
 8018136:	eef0 2a47 	vmov.f32	s5, s14
 801813a:	e788      	b.n	801804e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801813c:	1406      	asrs	r6, r0, #16
 801813e:	d42c      	bmi.n	801819a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8018140:	f8db 2008 	ldr.w	r2, [fp, #8]
 8018144:	42b2      	cmp	r2, r6
 8018146:	dd28      	ble.n	801819a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8018148:	140f      	asrs	r7, r1, #16
 801814a:	d426      	bmi.n	801819a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801814c:	f8db 200c 	ldr.w	r2, [fp, #12]
 8018150:	42ba      	cmp	r2, r7
 8018152:	dd22      	ble.n	801819a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8018154:	9a02      	ldr	r2, [sp, #8]
 8018156:	fb07 6602 	mla	r6, r7, r2, r6
 801815a:	0872      	lsrs	r2, r6, #1
 801815c:	9f03      	ldr	r7, [sp, #12]
 801815e:	5cba      	ldrb	r2, [r7, r2]
 8018160:	07f6      	lsls	r6, r6, #31
 8018162:	bf54      	ite	pl
 8018164:	f002 020f 	andpl.w	r2, r2, #15
 8018168:	1112      	asrmi	r2, r2, #4
 801816a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801816e:	b2d2      	uxtb	r2, r2
 8018170:	2aff      	cmp	r2, #255	; 0xff
 8018172:	d118      	bne.n	80181a6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 8018174:	f8d8 2000 	ldr.w	r2, [r8]
 8018178:	f06f 0601 	mvn.w	r6, #1
 801817c:	fb06 f705 	mul.w	r7, r6, r5
 8018180:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
 8018184:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 8018188:	0956      	lsrs	r6, r2, #5
 801818a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801818e:	ea4c 0606 	orr.w	r6, ip, r6
 8018192:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8018196:	4316      	orrs	r6, r2
 8018198:	53e6      	strh	r6, [r4, r7]
 801819a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801819c:	4410      	add	r0, r2
 801819e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80181a0:	3d01      	subs	r5, #1
 80181a2:	4411      	add	r1, r2
 80181a4:	e787      	b.n	80180b6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80181a6:	2a00      	cmp	r2, #0
 80181a8:	d0f7      	beq.n	801819a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80181aa:	f06f 0601 	mvn.w	r6, #1
 80181ae:	436e      	muls	r6, r5
 80181b0:	f8d8 c000 	ldr.w	ip, [r8]
 80181b4:	f834 e006 	ldrh.w	lr, [r4, r6]
 80181b8:	9604      	str	r6, [sp, #16]
 80181ba:	fa1f f982 	uxth.w	r9, r2
 80181be:	ea4f 272e 	mov.w	r7, lr, asr #8
 80181c2:	f3cc 4607 	ubfx	r6, ip, #16, #8
 80181c6:	43d2      	mvns	r2, r2
 80181c8:	b2d2      	uxtb	r2, r2
 80181ca:	fb16 f609 	smulbb	r6, r6, r9
 80181ce:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80181d2:	fb07 6702 	mla	r7, r7, r2, r6
 80181d6:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 80181da:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80181de:	fa5f fc8c 	uxtb.w	ip, ip
 80181e2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80181e6:	fa5f fe8e 	uxtb.w	lr, lr
 80181ea:	fb1c fc09 	smulbb	ip, ip, r9
 80181ee:	fb0e cc02 	mla	ip, lr, r2, ip
 80181f2:	b2bf      	uxth	r7, r7
 80181f4:	fb1a fa09 	smulbb	sl, sl, r9
 80181f8:	fa1f fc8c 	uxth.w	ip, ip
 80181fc:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8018200:	fb06 a602 	mla	r6, r6, r2, sl
 8018204:	1c7a      	adds	r2, r7, #1
 8018206:	f10c 0a01 	add.w	sl, ip, #1
 801820a:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801820e:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 8018212:	b2b6      	uxth	r6, r6
 8018214:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8018218:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801821c:	ea4a 0707 	orr.w	r7, sl, r7
 8018220:	f106 0a01 	add.w	sl, r6, #1
 8018224:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8018228:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801822c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8018230:	9a04      	ldr	r2, [sp, #16]
 8018232:	ea47 070a 	orr.w	r7, r7, sl
 8018236:	52a7      	strh	r7, [r4, r2]
 8018238:	e7af      	b.n	801819a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801823a:	f04f 0e00 	mov.w	lr, #0
 801823e:	eba3 020e 	sub.w	r2, r3, lr
 8018242:	2a00      	cmp	r2, #0
 8018244:	f77f af3a 	ble.w	80180bc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8018248:	9e02      	ldr	r6, [sp, #8]
 801824a:	1402      	asrs	r2, r0, #16
 801824c:	140d      	asrs	r5, r1, #16
 801824e:	fb06 2505 	mla	r5, r6, r5, r2
 8018252:	086a      	lsrs	r2, r5, #1
 8018254:	9e03      	ldr	r6, [sp, #12]
 8018256:	5cb2      	ldrb	r2, [r6, r2]
 8018258:	07ed      	lsls	r5, r5, #31
 801825a:	bf54      	ite	pl
 801825c:	f002 020f 	andpl.w	r2, r2, #15
 8018260:	1112      	asrmi	r2, r2, #4
 8018262:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8018266:	b2d2      	uxtb	r2, r2
 8018268:	2aff      	cmp	r2, #255	; 0xff
 801826a:	d115      	bne.n	8018298 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 801826c:	f8d8 5000 	ldr.w	r5, [r8]
 8018270:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
 8018274:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 8018278:	096a      	lsrs	r2, r5, #5
 801827a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801827e:	4332      	orrs	r2, r6
 8018280:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8018284:	432a      	orrs	r2, r5
 8018286:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 801828a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801828c:	4410      	add	r0, r2
 801828e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8018290:	f10e 0e01 	add.w	lr, lr, #1
 8018294:	4411      	add	r1, r2
 8018296:	e7d2      	b.n	801823e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8018298:	2a00      	cmp	r2, #0
 801829a:	d0f6      	beq.n	801828a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801829c:	f8d8 7000 	ldr.w	r7, [r8]
 80182a0:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 80182a4:	fa1f f982 	uxth.w	r9, r2
 80182a8:	ea4f 262c 	mov.w	r6, ip, asr #8
 80182ac:	f3c7 4507 	ubfx	r5, r7, #16, #8
 80182b0:	43d2      	mvns	r2, r2
 80182b2:	b2d2      	uxtb	r2, r2
 80182b4:	fb15 f509 	smulbb	r5, r5, r9
 80182b8:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80182bc:	fb06 5602 	mla	r6, r6, r2, r5
 80182c0:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 80182c4:	ea4f 05ec 	mov.w	r5, ip, asr #3
 80182c8:	b2ff      	uxtb	r7, r7
 80182ca:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80182ce:	fa5f fc8c 	uxtb.w	ip, ip
 80182d2:	fb17 f709 	smulbb	r7, r7, r9
 80182d6:	fb0c 7702 	mla	r7, ip, r2, r7
 80182da:	b2b6      	uxth	r6, r6
 80182dc:	fb1a fa09 	smulbb	sl, sl, r9
 80182e0:	b2bf      	uxth	r7, r7
 80182e2:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80182e6:	fb05 a502 	mla	r5, r5, r2, sl
 80182ea:	1c72      	adds	r2, r6, #1
 80182ec:	f107 0a01 	add.w	sl, r7, #1
 80182f0:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 80182f4:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 80182f8:	b2ad      	uxth	r5, r5
 80182fa:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80182fe:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8018302:	ea4a 0606 	orr.w	r6, sl, r6
 8018306:	f105 0a01 	add.w	sl, r5, #1
 801830a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801830e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8018312:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8018316:	ea46 060a 	orr.w	r6, r6, sl
 801831a:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 801831e:	e7b4      	b.n	801828a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8018320:	b007      	add	sp, #28
 8018322:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018326:	bf00      	nop
 8018328:	2001795c 	.word	0x2001795c

0801832c <_ZN8touchgfx8LCD16bppD1Ev>:
 801832c:	4770      	bx	lr

0801832e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 801832e:	4770      	bx	lr

08018330 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 8018330:	4770      	bx	lr

08018332 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 8018332:	4770      	bx	lr

08018334 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 8018334:	4770      	bx	lr

08018336 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8018336:	4770      	bx	lr

08018338 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8018338:	4770      	bx	lr

0801833a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801833a:	4770      	bx	lr

0801833c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801833c:	4770      	bx	lr

0801833e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801833e:	4770      	bx	lr

08018340 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8018340:	4770      	bx	lr

08018342 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8018342:	4770      	bx	lr

08018344 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8018344:	4770      	bx	lr

08018346 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8018346:	4770      	bx	lr

08018348 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8018348:	4770      	bx	lr

0801834a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801834a:	4770      	bx	lr

0801834c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 801834c:	4770      	bx	lr

0801834e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801834e:	4770      	bx	lr

08018350 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8018350:	4770      	bx	lr

08018352 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8018352:	4770      	bx	lr

08018354 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8018354:	4770      	bx	lr

08018356 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8018356:	4770      	bx	lr

08018358 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 8018358:	4770      	bx	lr

0801835a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 801835a:	4770      	bx	lr

0801835c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 801835c:	4770      	bx	lr

0801835e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801835e:	4770      	bx	lr

08018360 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8018360:	4770      	bx	lr

08018362 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8018362:	4770      	bx	lr

08018364 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8018364:	4770      	bx	lr

08018366 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 8018366:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801836a:	b088      	sub	sp, #32
 801836c:	ac08      	add	r4, sp, #32
 801836e:	4606      	mov	r6, r0
 8018370:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 8018374:	4620      	mov	r0, r4
 8018376:	4688      	mov	r8, r1
 8018378:	4691      	mov	r9, r2
 801837a:	f7fd fc65 	bl	8015c48 <_ZNK8touchgfx6Bitmap7getDataEv>
 801837e:	6833      	ldr	r3, [r6, #0]
 8018380:	4605      	mov	r5, r0
 8018382:	4620      	mov	r0, r4
 8018384:	699f      	ldr	r7, [r3, #24]
 8018386:	f7fd fb73 	bl	8015a70 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801838a:	4682      	mov	sl, r0
 801838c:	4620      	mov	r0, r4
 801838e:	f7fd fba3 	bl	8015ad8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8018392:	9500      	str	r5, [sp, #0]
 8018394:	e9cd a001 	strd	sl, r0, [sp, #4]
 8018398:	464b      	mov	r3, r9
 801839a:	a806      	add	r0, sp, #24
 801839c:	4642      	mov	r2, r8
 801839e:	4631      	mov	r1, r6
 80183a0:	47b8      	blx	r7
 80183a2:	4628      	mov	r0, r5
 80183a4:	b008      	add	sp, #32
 80183a6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

080183ac <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 80183ac:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80183b0:	2300      	movs	r3, #0
 80183b2:	9300      	str	r3, [sp, #0]
 80183b4:	4b3d      	ldr	r3, [pc, #244]	; (80184ac <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 80183b6:	781b      	ldrb	r3, [r3, #0]
 80183b8:	2b00      	cmp	r3, #0
 80183ba:	d137      	bne.n	801842c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 80183bc:	4a3c      	ldr	r2, [pc, #240]	; (80184b0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 80183be:	f9b2 2000 	ldrsh.w	r2, [r2]
 80183c2:	f8ad 2004 	strh.w	r2, [sp, #4]
 80183c6:	2b00      	cmp	r3, #0
 80183c8:	d132      	bne.n	8018430 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 80183ca:	4b3a      	ldr	r3, [pc, #232]	; (80184b4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 80183cc:	f9b3 3000 	ldrsh.w	r3, [r3]
 80183d0:	6808      	ldr	r0, [r1, #0]
 80183d2:	6849      	ldr	r1, [r1, #4]
 80183d4:	f8ad 3006 	strh.w	r3, [sp, #6]
 80183d8:	ac02      	add	r4, sp, #8
 80183da:	ab02      	add	r3, sp, #8
 80183dc:	c303      	stmia	r3!, {r0, r1}
 80183de:	4669      	mov	r1, sp
 80183e0:	4620      	mov	r0, r4
 80183e2:	f7f9 ff7f 	bl	80122e4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80183e6:	4668      	mov	r0, sp
 80183e8:	f7f9 ff54 	bl	8012294 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80183ec:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 80183f0:	f8bd 2000 	ldrh.w	r2, [sp]
 80183f4:	4d30      	ldr	r5, [pc, #192]	; (80184b8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 80183f6:	4413      	add	r3, r2
 80183f8:	f8ad 3008 	strh.w	r3, [sp, #8]
 80183fc:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8018400:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8018404:	6828      	ldr	r0, [r5, #0]
 8018406:	4413      	add	r3, r2
 8018408:	f8ad 300a 	strh.w	r3, [sp, #10]
 801840c:	6803      	ldr	r3, [r0, #0]
 801840e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8018410:	4798      	blx	r3
 8018412:	f010 0f01 	tst.w	r0, #1
 8018416:	462f      	mov	r7, r5
 8018418:	d00c      	beq.n	8018434 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 801841a:	6828      	ldr	r0, [r5, #0]
 801841c:	6803      	ldr	r3, [r0, #0]
 801841e:	e894 0006 	ldmia.w	r4, {r1, r2}
 8018422:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8018424:	4798      	blx	r3
 8018426:	b004      	add	sp, #16
 8018428:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801842c:	4a21      	ldr	r2, [pc, #132]	; (80184b4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801842e:	e7c6      	b.n	80183be <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 8018430:	4b1f      	ldr	r3, [pc, #124]	; (80184b0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8018432:	e7cb      	b.n	80183cc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 8018434:	6838      	ldr	r0, [r7, #0]
 8018436:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 801843a:	6803      	ldr	r3, [r0, #0]
 801843c:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 8018440:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8018442:	4798      	blx	r3
 8018444:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 8018448:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801844c:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 8018450:	fb16 3602 	smlabb	r6, r6, r2, r3
 8018454:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8018458:	6838      	ldr	r0, [r7, #0]
 801845a:	6803      	ldr	r3, [r0, #0]
 801845c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801845e:	4798      	blx	r3
 8018460:	4a13      	ldr	r2, [pc, #76]	; (80184b0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8018462:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 8018466:	8813      	ldrh	r3, [r2, #0]
 8018468:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801846c:	fb03 1404 	mla	r4, r3, r4, r1
 8018470:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8018474:	435d      	muls	r5, r3
 8018476:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801847a:	ea4f 0848 	mov.w	r8, r8, lsl #1
 801847e:	4691      	mov	r9, r2
 8018480:	6838      	ldr	r0, [r7, #0]
 8018482:	42ac      	cmp	r4, r5
 8018484:	6803      	ldr	r3, [r0, #0]
 8018486:	d20e      	bcs.n	80184a6 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 8018488:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
 801848c:	4632      	mov	r2, r6
 801848e:	4643      	mov	r3, r8
 8018490:	4621      	mov	r1, r4
 8018492:	47d0      	blx	sl
 8018494:	f8b9 3000 	ldrh.w	r3, [r9]
 8018498:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801849c:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 80184a0:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 80184a4:	e7ec      	b.n	8018480 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 80184a6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80184a8:	4798      	blx	r3
 80184aa:	e7bc      	b.n	8018426 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 80184ac:	20017944 	.word	0x20017944
 80184b0:	20017946 	.word	0x20017946
 80184b4:	20017948 	.word	0x20017948
 80184b8:	2001794c 	.word	0x2001794c

080184bc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 80184bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80184c0:	b08b      	sub	sp, #44	; 0x2c
 80184c2:	460f      	mov	r7, r1
 80184c4:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 80184c8:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 80184cc:	4616      	mov	r6, r2
 80184ce:	f1bb 0f00 	cmp.w	fp, #0
 80184d2:	d049      	beq.n	8018568 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 80184d4:	6810      	ldr	r0, [r2, #0]
 80184d6:	6851      	ldr	r1, [r2, #4]
 80184d8:	ad06      	add	r5, sp, #24
 80184da:	c503      	stmia	r5!, {r0, r1}
 80184dc:	6818      	ldr	r0, [r3, #0]
 80184de:	6859      	ldr	r1, [r3, #4]
 80184e0:	ad08      	add	r5, sp, #32
 80184e2:	c503      	stmia	r5!, {r0, r1}
 80184e4:	a806      	add	r0, sp, #24
 80184e6:	f7f9 fed5 	bl	8012294 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80184ea:	4631      	mov	r1, r6
 80184ec:	a808      	add	r0, sp, #32
 80184ee:	f7f9 fef9 	bl	80122e4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80184f2:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 80184f6:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 80184fa:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 80184fe:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 8018502:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 8018506:	fb16 2103 	smlabb	r1, r6, r3, r2
 801850a:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 801850e:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 8018512:	4f5f      	ldr	r7, [pc, #380]	; (8018690 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 8018514:	440a      	add	r2, r1
 8018516:	f8ad 2020 	strh.w	r2, [sp, #32]
 801851a:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 801851e:	6838      	ldr	r0, [r7, #0]
 8018520:	4413      	add	r3, r2
 8018522:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8018526:	6803      	ldr	r3, [r0, #0]
 8018528:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801852a:	4798      	blx	r3
 801852c:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8018530:	46b9      	mov	r9, r7
 8018532:	d01c      	beq.n	801856e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb2>
 8018534:	f010 0f04 	tst.w	r0, #4
 8018538:	d01d      	beq.n	8018576 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801853a:	f8d9 0000 	ldr.w	r0, [r9]
 801853e:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 8018542:	6801      	ldr	r1, [r0, #0]
 8018544:	f8cd b00c 	str.w	fp, [sp, #12]
 8018548:	2700      	movs	r7, #0
 801854a:	e9cd 4704 	strd	r4, r7, [sp, #16]
 801854e:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 8018552:	9402      	str	r4, [sp, #8]
 8018554:	b2ad      	uxth	r5, r5
 8018556:	fa1f f488 	uxth.w	r4, r8
 801855a:	9501      	str	r5, [sp, #4]
 801855c:	9400      	str	r4, [sp, #0]
 801855e:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 8018560:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8018564:	4631      	mov	r1, r6
 8018566:	47a0      	blx	r4
 8018568:	b00b      	add	sp, #44	; 0x2c
 801856a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801856e:	b914      	cbnz	r4, 8018576 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 8018570:	f010 0f01 	tst.w	r0, #1
 8018574:	e7e0      	b.n	8018538 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7c>
 8018576:	f8d9 0000 	ldr.w	r0, [r9]
 801857a:	6803      	ldr	r3, [r0, #0]
 801857c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801857e:	4798      	blx	r3
 8018580:	4b44      	ldr	r3, [pc, #272]	; (8018694 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 8018582:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 8018586:	881a      	ldrh	r2, [r3, #0]
 8018588:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 801858c:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8018590:	fb02 1404 	mla	r4, r2, r4, r1
 8018594:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8018598:	469a      	mov	sl, r3
 801859a:	fb05 f502 	mul.w	r5, r5, r2
 801859e:	ea4f 0748 	mov.w	r7, r8, lsl #1
 80185a2:	d059      	beq.n	8018658 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 80185a4:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 80185a8:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 80185ac:	fa1f f28b 	uxth.w	r2, fp
 80185b0:	fa1f f989 	uxth.w	r9, r9
 80185b4:	469e      	mov	lr, r3
 80185b6:	42ac      	cmp	r4, r5
 80185b8:	d264      	bcs.n	8018684 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 80185ba:	eb04 0a07 	add.w	sl, r4, r7
 80185be:	4554      	cmp	r4, sl
 80185c0:	d23d      	bcs.n	801863e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 80185c2:	8821      	ldrh	r1, [r4, #0]
 80185c4:	f836 3b02 	ldrh.w	r3, [r6], #2
 80185c8:	1208      	asrs	r0, r1, #8
 80185ca:	ea4f 2c23 	mov.w	ip, r3, asr #8
 80185ce:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80185d2:	fb10 f009 	smulbb	r0, r0, r9
 80185d6:	ea4f 0be1 	mov.w	fp, r1, asr #3
 80185da:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80185de:	00c9      	lsls	r1, r1, #3
 80185e0:	fb0c 0c02 	mla	ip, ip, r2, r0
 80185e4:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 80185e8:	10d8      	asrs	r0, r3, #3
 80185ea:	b2c9      	uxtb	r1, r1
 80185ec:	00db      	lsls	r3, r3, #3
 80185ee:	fa1f fc8c 	uxth.w	ip, ip
 80185f2:	fb1b fb09 	smulbb	fp, fp, r9
 80185f6:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80185fa:	b2db      	uxtb	r3, r3
 80185fc:	fb11 f109 	smulbb	r1, r1, r9
 8018600:	fb00 b002 	mla	r0, r0, r2, fp
 8018604:	fb03 1302 	mla	r3, r3, r2, r1
 8018608:	f10c 0b01 	add.w	fp, ip, #1
 801860c:	b29b      	uxth	r3, r3
 801860e:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 8018612:	b280      	uxth	r0, r0
 8018614:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 8018618:	f103 0c01 	add.w	ip, r3, #1
 801861c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8018620:	1c43      	adds	r3, r0, #1
 8018622:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8018626:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801862a:	0940      	lsrs	r0, r0, #5
 801862c:	ea4c 0c0b 	orr.w	ip, ip, fp
 8018630:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8018634:	ea4c 0c00 	orr.w	ip, ip, r0
 8018638:	f824 cb02 	strh.w	ip, [r4], #2
 801863c:	e7bf      	b.n	80185be <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 801863e:	f8be 3000 	ldrh.w	r3, [lr]
 8018642:	eba3 0308 	sub.w	r3, r3, r8
 8018646:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801864a:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801864e:	eba3 0308 	sub.w	r3, r3, r8
 8018652:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8018656:	e7ae      	b.n	80185b6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 8018658:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801865c:	f8d9 0000 	ldr.w	r0, [r9]
 8018660:	42ac      	cmp	r4, r5
 8018662:	6803      	ldr	r3, [r0, #0]
 8018664:	d20e      	bcs.n	8018684 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 8018666:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
 801866a:	4632      	mov	r2, r6
 801866c:	463b      	mov	r3, r7
 801866e:	4621      	mov	r1, r4
 8018670:	47c0      	blx	r8
 8018672:	f8ba 3000 	ldrh.w	r3, [sl]
 8018676:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801867a:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801867e:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8018682:	e7eb      	b.n	801865c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 8018684:	4b02      	ldr	r3, [pc, #8]	; (8018690 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 8018686:	6818      	ldr	r0, [r3, #0]
 8018688:	6803      	ldr	r3, [r0, #0]
 801868a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801868c:	4798      	blx	r3
 801868e:	e76b      	b.n	8018568 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 8018690:	2001794c 	.word	0x2001794c
 8018694:	20017946 	.word	0x20017946

08018698 <_ZN8touchgfx8LCD16bppD0Ev>:
 8018698:	b510      	push	{r4, lr}
 801869a:	2178      	movs	r1, #120	; 0x78
 801869c:	4604      	mov	r4, r0
 801869e:	f009 fad3 	bl	8021c48 <_ZdlPvj>
 80186a2:	4620      	mov	r0, r4
 80186a4:	bd10      	pop	{r4, pc}

080186a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 80186a6:	b510      	push	{r4, lr}
 80186a8:	2104      	movs	r1, #4
 80186aa:	4604      	mov	r4, r0
 80186ac:	f009 facc 	bl	8021c48 <_ZdlPvj>
 80186b0:	4620      	mov	r0, r4
 80186b2:	bd10      	pop	{r4, pc}

080186b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 80186b4:	b510      	push	{r4, lr}
 80186b6:	2104      	movs	r1, #4
 80186b8:	4604      	mov	r4, r0
 80186ba:	f009 fac5 	bl	8021c48 <_ZdlPvj>
 80186be:	4620      	mov	r0, r4
 80186c0:	bd10      	pop	{r4, pc}

080186c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 80186c2:	b510      	push	{r4, lr}
 80186c4:	2104      	movs	r1, #4
 80186c6:	4604      	mov	r4, r0
 80186c8:	f009 fabe 	bl	8021c48 <_ZdlPvj>
 80186cc:	4620      	mov	r0, r4
 80186ce:	bd10      	pop	{r4, pc}

080186d0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 80186d0:	b510      	push	{r4, lr}
 80186d2:	2104      	movs	r1, #4
 80186d4:	4604      	mov	r4, r0
 80186d6:	f009 fab7 	bl	8021c48 <_ZdlPvj>
 80186da:	4620      	mov	r0, r4
 80186dc:	bd10      	pop	{r4, pc}

080186de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 80186de:	b510      	push	{r4, lr}
 80186e0:	2104      	movs	r1, #4
 80186e2:	4604      	mov	r4, r0
 80186e4:	f009 fab0 	bl	8021c48 <_ZdlPvj>
 80186e8:	4620      	mov	r0, r4
 80186ea:	bd10      	pop	{r4, pc}

080186ec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 80186ec:	b510      	push	{r4, lr}
 80186ee:	2104      	movs	r1, #4
 80186f0:	4604      	mov	r4, r0
 80186f2:	f009 faa9 	bl	8021c48 <_ZdlPvj>
 80186f6:	4620      	mov	r0, r4
 80186f8:	bd10      	pop	{r4, pc}

080186fa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 80186fa:	b510      	push	{r4, lr}
 80186fc:	2104      	movs	r1, #4
 80186fe:	4604      	mov	r4, r0
 8018700:	f009 faa2 	bl	8021c48 <_ZdlPvj>
 8018704:	4620      	mov	r0, r4
 8018706:	bd10      	pop	{r4, pc}

08018708 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 8018708:	b510      	push	{r4, lr}
 801870a:	2104      	movs	r1, #4
 801870c:	4604      	mov	r4, r0
 801870e:	f009 fa9b 	bl	8021c48 <_ZdlPvj>
 8018712:	4620      	mov	r0, r4
 8018714:	bd10      	pop	{r4, pc}

08018716 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8018716:	b510      	push	{r4, lr}
 8018718:	2104      	movs	r1, #4
 801871a:	4604      	mov	r4, r0
 801871c:	f009 fa94 	bl	8021c48 <_ZdlPvj>
 8018720:	4620      	mov	r0, r4
 8018722:	bd10      	pop	{r4, pc}

08018724 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8018724:	b510      	push	{r4, lr}
 8018726:	2104      	movs	r1, #4
 8018728:	4604      	mov	r4, r0
 801872a:	f009 fa8d 	bl	8021c48 <_ZdlPvj>
 801872e:	4620      	mov	r0, r4
 8018730:	bd10      	pop	{r4, pc}

08018732 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8018732:	b510      	push	{r4, lr}
 8018734:	2104      	movs	r1, #4
 8018736:	4604      	mov	r4, r0
 8018738:	f009 fa86 	bl	8021c48 <_ZdlPvj>
 801873c:	4620      	mov	r0, r4
 801873e:	bd10      	pop	{r4, pc}

08018740 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8018740:	b510      	push	{r4, lr}
 8018742:	2104      	movs	r1, #4
 8018744:	4604      	mov	r4, r0
 8018746:	f009 fa7f 	bl	8021c48 <_ZdlPvj>
 801874a:	4620      	mov	r0, r4
 801874c:	bd10      	pop	{r4, pc}

0801874e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801874e:	b510      	push	{r4, lr}
 8018750:	2104      	movs	r1, #4
 8018752:	4604      	mov	r4, r0
 8018754:	f009 fa78 	bl	8021c48 <_ZdlPvj>
 8018758:	4620      	mov	r0, r4
 801875a:	bd10      	pop	{r4, pc}

0801875c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801875c:	b510      	push	{r4, lr}
 801875e:	2104      	movs	r1, #4
 8018760:	4604      	mov	r4, r0
 8018762:	f009 fa71 	bl	8021c48 <_ZdlPvj>
 8018766:	4620      	mov	r0, r4
 8018768:	bd10      	pop	{r4, pc}

0801876a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801876a:	b510      	push	{r4, lr}
 801876c:	2104      	movs	r1, #4
 801876e:	4604      	mov	r4, r0
 8018770:	f009 fa6a 	bl	8021c48 <_ZdlPvj>
 8018774:	4620      	mov	r0, r4
 8018776:	bd10      	pop	{r4, pc}

08018778 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8018778:	b510      	push	{r4, lr}
 801877a:	2104      	movs	r1, #4
 801877c:	4604      	mov	r4, r0
 801877e:	f009 fa63 	bl	8021c48 <_ZdlPvj>
 8018782:	4620      	mov	r0, r4
 8018784:	bd10      	pop	{r4, pc}

08018786 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8018786:	b510      	push	{r4, lr}
 8018788:	2104      	movs	r1, #4
 801878a:	4604      	mov	r4, r0
 801878c:	f009 fa5c 	bl	8021c48 <_ZdlPvj>
 8018790:	4620      	mov	r0, r4
 8018792:	bd10      	pop	{r4, pc}

08018794 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8018794:	b510      	push	{r4, lr}
 8018796:	2104      	movs	r1, #4
 8018798:	4604      	mov	r4, r0
 801879a:	f009 fa55 	bl	8021c48 <_ZdlPvj>
 801879e:	4620      	mov	r0, r4
 80187a0:	bd10      	pop	{r4, pc}

080187a2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 80187a2:	b510      	push	{r4, lr}
 80187a4:	2104      	movs	r1, #4
 80187a6:	4604      	mov	r4, r0
 80187a8:	f009 fa4e 	bl	8021c48 <_ZdlPvj>
 80187ac:	4620      	mov	r0, r4
 80187ae:	bd10      	pop	{r4, pc}

080187b0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 80187b0:	b510      	push	{r4, lr}
 80187b2:	2104      	movs	r1, #4
 80187b4:	4604      	mov	r4, r0
 80187b6:	f009 fa47 	bl	8021c48 <_ZdlPvj>
 80187ba:	4620      	mov	r0, r4
 80187bc:	bd10      	pop	{r4, pc}

080187be <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 80187be:	b510      	push	{r4, lr}
 80187c0:	2104      	movs	r1, #4
 80187c2:	4604      	mov	r4, r0
 80187c4:	f009 fa40 	bl	8021c48 <_ZdlPvj>
 80187c8:	4620      	mov	r0, r4
 80187ca:	bd10      	pop	{r4, pc}

080187cc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 80187cc:	b510      	push	{r4, lr}
 80187ce:	2104      	movs	r1, #4
 80187d0:	4604      	mov	r4, r0
 80187d2:	f009 fa39 	bl	8021c48 <_ZdlPvj>
 80187d6:	4620      	mov	r0, r4
 80187d8:	bd10      	pop	{r4, pc}

080187da <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 80187da:	b510      	push	{r4, lr}
 80187dc:	2104      	movs	r1, #4
 80187de:	4604      	mov	r4, r0
 80187e0:	f009 fa32 	bl	8021c48 <_ZdlPvj>
 80187e4:	4620      	mov	r0, r4
 80187e6:	bd10      	pop	{r4, pc}

080187e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 80187e8:	b510      	push	{r4, lr}
 80187ea:	2104      	movs	r1, #4
 80187ec:	4604      	mov	r4, r0
 80187ee:	f009 fa2b 	bl	8021c48 <_ZdlPvj>
 80187f2:	4620      	mov	r0, r4
 80187f4:	bd10      	pop	{r4, pc}

080187f6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 80187f6:	b510      	push	{r4, lr}
 80187f8:	2104      	movs	r1, #4
 80187fa:	4604      	mov	r4, r0
 80187fc:	f009 fa24 	bl	8021c48 <_ZdlPvj>
 8018800:	4620      	mov	r0, r4
 8018802:	bd10      	pop	{r4, pc}

08018804 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 8018804:	b510      	push	{r4, lr}
 8018806:	2104      	movs	r1, #4
 8018808:	4604      	mov	r4, r0
 801880a:	f009 fa1d 	bl	8021c48 <_ZdlPvj>
 801880e:	4620      	mov	r0, r4
 8018810:	bd10      	pop	{r4, pc}

08018812 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 8018812:	b510      	push	{r4, lr}
 8018814:	2104      	movs	r1, #4
 8018816:	4604      	mov	r4, r0
 8018818:	f009 fa16 	bl	8021c48 <_ZdlPvj>
 801881c:	4620      	mov	r0, r4
 801881e:	bd10      	pop	{r4, pc}

08018820 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 8018820:	b510      	push	{r4, lr}
 8018822:	2104      	movs	r1, #4
 8018824:	4604      	mov	r4, r0
 8018826:	f009 fa0f 	bl	8021c48 <_ZdlPvj>
 801882a:	4620      	mov	r0, r4
 801882c:	bd10      	pop	{r4, pc}
	...

08018830 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 8018830:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018834:	b091      	sub	sp, #68	; 0x44
 8018836:	469b      	mov	fp, r3
 8018838:	f10d 0828 	add.w	r8, sp, #40	; 0x28
 801883c:	4616      	mov	r6, r2
 801883e:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	; 0x6c
 8018842:	f9b3 2000 	ldrsh.w	r2, [r3]
 8018846:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801884a:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801884e:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8018852:	4604      	mov	r4, r0
 8018854:	460d      	mov	r5, r1
 8018856:	4640      	mov	r0, r8
 8018858:	4659      	mov	r1, fp
 801885a:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801885e:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 8018862:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
 8018866:	f7f3 ff49 	bl	800c6fc <_ZN8touchgfx4RectaNERKS0_>
 801886a:	4631      	mov	r1, r6
 801886c:	4640      	mov	r0, r8
 801886e:	f7f3 ff45 	bl	800c6fc <_ZN8touchgfx4RectaNERKS0_>
 8018872:	4b74      	ldr	r3, [pc, #464]	; (8018a44 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 8018874:	8818      	ldrh	r0, [r3, #0]
 8018876:	4b74      	ldr	r3, [pc, #464]	; (8018a48 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 8018878:	8819      	ldrh	r1, [r3, #0]
 801887a:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801887e:	2b00      	cmp	r3, #0
 8018880:	b202      	sxth	r2, r0
 8018882:	b20e      	sxth	r6, r1
 8018884:	da07      	bge.n	8018896 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 8018886:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 801888a:	4463      	add	r3, ip
 801888c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8018890:	2300      	movs	r3, #0
 8018892:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8018896:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801889a:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801889e:	1ad2      	subs	r2, r2, r3
 80188a0:	4594      	cmp	ip, r2
 80188a2:	bfc4      	itt	gt
 80188a4:	1ac2      	subgt	r2, r0, r3
 80188a6:	f8ad 202c 	strhgt.w	r2, [sp, #44]	; 0x2c
 80188aa:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 80188ae:	2a00      	cmp	r2, #0
 80188b0:	da07      	bge.n	80188c2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 80188b2:	f8bd c02e 	ldrh.w	ip, [sp, #46]	; 0x2e
 80188b6:	4462      	add	r2, ip
 80188b8:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 80188bc:	2200      	movs	r2, #0
 80188be:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 80188c2:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
 80188c6:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 80188ca:	eba6 060a 	sub.w	r6, r6, sl
 80188ce:	42b2      	cmp	r2, r6
 80188d0:	bfc4      	itt	gt
 80188d2:	eba1 020a 	subgt.w	r2, r1, sl
 80188d6:	f8ad 202e 	strhgt.w	r2, [sp, #46]	; 0x2e
 80188da:	4a5c      	ldr	r2, [pc, #368]	; (8018a4c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 80188dc:	7812      	ldrb	r2, [r2, #0]
 80188de:	b9a2      	cbnz	r2, 801890a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 80188e0:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 80188e4:	4286      	cmp	r6, r0
 80188e6:	4640      	mov	r0, r8
 80188e8:	9303      	str	r3, [sp, #12]
 80188ea:	bf14      	ite	ne
 80188ec:	2600      	movne	r6, #0
 80188ee:	2601      	moveq	r6, #1
 80188f0:	f7f3 ff47 	bl	800c782 <_ZNK8touchgfx4Rect7isEmptyEv>
 80188f4:	9b03      	ldr	r3, [sp, #12]
 80188f6:	b160      	cbz	r0, 8018912 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 80188f8:	2300      	movs	r3, #0
 80188fa:	8023      	strh	r3, [r4, #0]
 80188fc:	8063      	strh	r3, [r4, #2]
 80188fe:	80a3      	strh	r3, [r4, #4]
 8018900:	4620      	mov	r0, r4
 8018902:	80e3      	strh	r3, [r4, #6]
 8018904:	b011      	add	sp, #68	; 0x44
 8018906:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801890a:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801890e:	428e      	cmp	r6, r1
 8018910:	e7e9      	b.n	80188e6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 8018912:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8018916:	9205      	str	r2, [sp, #20]
 8018918:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801891c:	9206      	str	r2, [sp, #24]
 801891e:	f8bb 2000 	ldrh.w	r2, [fp]
 8018922:	900e      	str	r0, [sp, #56]	; 0x38
 8018924:	1a9b      	subs	r3, r3, r2
 8018926:	b21b      	sxth	r3, r3
 8018928:	9303      	str	r3, [sp, #12]
 801892a:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801892e:	f8ad 903c 	strh.w	r9, [sp, #60]	; 0x3c
 8018932:	ebaa 0a03 	sub.w	sl, sl, r3
 8018936:	fa0f f38a 	sxth.w	r3, sl
 801893a:	9304      	str	r3, [sp, #16]
 801893c:	9b03      	ldr	r3, [sp, #12]
 801893e:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8018942:	9b04      	ldr	r3, [sp, #16]
 8018944:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8018948:	9b05      	ldr	r3, [sp, #20]
 801894a:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 801894e:	a90e      	add	r1, sp, #56	; 0x38
 8018950:	9b06      	ldr	r3, [sp, #24]
 8018952:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8018956:	a80c      	add	r0, sp, #48	; 0x30
 8018958:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
 801895c:	f7f9 fcc2 	bl	80122e4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8018960:	4640      	mov	r0, r8
 8018962:	f7f9 fc97 	bl	8012294 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8018966:	a80e      	add	r0, sp, #56	; 0x38
 8018968:	f7f9 fc94 	bl	8012294 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801896c:	4b38      	ldr	r3, [pc, #224]	; (8018a50 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 801896e:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
 8018972:	881b      	ldrh	r3, [r3, #0]
 8018974:	9307      	str	r3, [sp, #28]
 8018976:	682b      	ldr	r3, [r5, #0]
 8018978:	f8df b0d8 	ldr.w	fp, [pc, #216]	; 8018a54 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801897c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801897e:	4628      	mov	r0, r5
 8018980:	4798      	blx	r3
 8018982:	f8bd 5032 	ldrh.w	r5, [sp, #50]	; 0x32
 8018986:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 801898a:	4681      	mov	r9, r0
 801898c:	fb1a 3305 	smlabb	r3, sl, r5, r3
 8018990:	f8db 0000 	ldr.w	r0, [fp]
 8018994:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8018996:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801899a:	6803      	ldr	r3, [r0, #0]
 801899c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801899e:	4798      	blx	r3
 80189a0:	4607      	mov	r7, r0
 80189a2:	f8db 0000 	ldr.w	r0, [fp]
 80189a6:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 80189aa:	6803      	ldr	r3, [r0, #0]
 80189ac:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 80189b0:	9109      	str	r1, [sp, #36]	; 0x24
 80189b2:	9208      	str	r2, [sp, #32]
 80189b4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80189b6:	4798      	blx	r3
 80189b8:	f010 0f01 	tst.w	r0, #1
 80189bc:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 80189c0:	d012      	beq.n	80189e8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 80189c2:	f8db 0000 	ldr.w	r0, [fp]
 80189c6:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 80189ca:	6803      	ldr	r3, [r0, #0]
 80189cc:	9200      	str	r2, [sp, #0]
 80189ce:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 80189d0:	e898 0006 	ldmia.w	r8, {r1, r2}
 80189d4:	462b      	mov	r3, r5
 80189d6:	47b0      	blx	r6
 80189d8:	9b03      	ldr	r3, [sp, #12]
 80189da:	8023      	strh	r3, [r4, #0]
 80189dc:	9b04      	ldr	r3, [sp, #16]
 80189de:	8063      	strh	r3, [r4, #2]
 80189e0:	9b05      	ldr	r3, [sp, #20]
 80189e2:	80a3      	strh	r3, [r4, #4]
 80189e4:	9b06      	ldr	r3, [sp, #24]
 80189e6:	e78b      	b.n	8018900 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 80189e8:	fb09 f202 	mul.w	r2, r9, r2
 80189ec:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 80189f0:	440f      	add	r7, r1
 80189f2:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 80189f6:	b166      	cbz	r6, 8018a12 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 80189f8:	9a07      	ldr	r2, [sp, #28]
 80189fa:	4592      	cmp	sl, r2
 80189fc:	d109      	bne.n	8018a12 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 80189fe:	f8db 0000 	ldr.w	r0, [fp]
 8018a02:	6802      	ldr	r2, [r0, #0]
 8018a04:	fb09 f303 	mul.w	r3, r9, r3
 8018a08:	6b56      	ldr	r6, [r2, #52]	; 0x34
 8018a0a:	4629      	mov	r1, r5
 8018a0c:	463a      	mov	r2, r7
 8018a0e:	47b0      	blx	r6
 8018a10:	e7e2      	b.n	80189d8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 8018a12:	fb0a f303 	mul.w	r3, sl, r3
 8018a16:	f8df b03c 	ldr.w	fp, [pc, #60]	; 8018a54 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 8018a1a:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 8018a1e:	ea4f 064a 	mov.w	r6, sl, lsl #1
 8018a22:	4545      	cmp	r5, r8
 8018a24:	d2d8      	bcs.n	80189d8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 8018a26:	f8db 0000 	ldr.w	r0, [fp]
 8018a2a:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8018a2e:	6802      	ldr	r2, [r0, #0]
 8018a30:	4629      	mov	r1, r5
 8018a32:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
 8018a36:	005b      	lsls	r3, r3, #1
 8018a38:	463a      	mov	r2, r7
 8018a3a:	47d0      	blx	sl
 8018a3c:	444f      	add	r7, r9
 8018a3e:	4435      	add	r5, r6
 8018a40:	e7ef      	b.n	8018a22 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 8018a42:	bf00      	nop
 8018a44:	20017940 	.word	0x20017940
 8018a48:	20017942 	.word	0x20017942
 8018a4c:	20017944 	.word	0x20017944
 8018a50:	20017946 	.word	0x20017946
 8018a54:	2001794c 	.word	0x2001794c

08018a58 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 8018a58:	b5f0      	push	{r4, r5, r6, r7, lr}
 8018a5a:	4606      	mov	r6, r0
 8018a5c:	b087      	sub	sp, #28
 8018a5e:	460c      	mov	r4, r1
 8018a60:	4617      	mov	r7, r2
 8018a62:	461d      	mov	r5, r3
 8018a64:	b333      	cbz	r3, 8018ab4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8018a66:	4608      	mov	r0, r1
 8018a68:	f7f3 fe8b 	bl	800c782 <_ZNK8touchgfx4Rect7isEmptyEv>
 8018a6c:	bb10      	cbnz	r0, 8018ab4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8018a6e:	6820      	ldr	r0, [r4, #0]
 8018a70:	6861      	ldr	r1, [r4, #4]
 8018a72:	4c1c      	ldr	r4, [pc, #112]	; (8018ae4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 8018a74:	ab04      	add	r3, sp, #16
 8018a76:	c303      	stmia	r3!, {r0, r1}
 8018a78:	a804      	add	r0, sp, #16
 8018a7a:	f7f9 fc0b 	bl	8012294 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8018a7e:	6820      	ldr	r0, [r4, #0]
 8018a80:	6803      	ldr	r3, [r0, #0]
 8018a82:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8018a84:	4798      	blx	r3
 8018a86:	2dff      	cmp	r5, #255	; 0xff
 8018a88:	d016      	beq.n	8018ab8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 8018a8a:	f010 0f08 	tst.w	r0, #8
 8018a8e:	6820      	ldr	r0, [r4, #0]
 8018a90:	d015      	beq.n	8018abe <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 8018a92:	2400      	movs	r4, #0
 8018a94:	6801      	ldr	r1, [r0, #0]
 8018a96:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8018a9a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8018a9e:	e9cd 5402 	strd	r5, r4, [sp, #8]
 8018aa2:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 8018aa6:	9401      	str	r4, [sp, #4]
 8018aa8:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 8018aac:	9400      	str	r4, [sp, #0]
 8018aae:	6e0c      	ldr	r4, [r1, #96]	; 0x60
 8018ab0:	4639      	mov	r1, r7
 8018ab2:	47a0      	blx	r4
 8018ab4:	b007      	add	sp, #28
 8018ab6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8018ab8:	f010 0f02 	tst.w	r0, #2
 8018abc:	e7e7      	b.n	8018a8e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 8018abe:	6803      	ldr	r3, [r0, #0]
 8018ac0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8018ac2:	4798      	blx	r3
 8018ac4:	4b08      	ldr	r3, [pc, #32]	; (8018ae8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 8018ac6:	881a      	ldrh	r2, [r3, #0]
 8018ac8:	6833      	ldr	r3, [r6, #0]
 8018aca:	e9cd 7500 	strd	r7, r5, [sp]
 8018ace:	4601      	mov	r1, r0
 8018ad0:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 8018ad2:	4630      	mov	r0, r6
 8018ad4:	ab04      	add	r3, sp, #16
 8018ad6:	47a8      	blx	r5
 8018ad8:	6820      	ldr	r0, [r4, #0]
 8018ada:	6803      	ldr	r3, [r0, #0]
 8018adc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8018ade:	4798      	blx	r3
 8018ae0:	e7e8      	b.n	8018ab4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8018ae2:	bf00      	nop
 8018ae4:	2001794c 	.word	0x2001794c
 8018ae8:	20017946 	.word	0x20017946

08018aec <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 8018aec:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8018af0:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 8018af4:	9e08      	ldr	r6, [sp, #32]
 8018af6:	4688      	mov	r8, r1
 8018af8:	4614      	mov	r4, r2
 8018afa:	461d      	mov	r5, r3
 8018afc:	2f00      	cmp	r7, #0
 8018afe:	f000 80a9 	beq.w	8018c54 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8018b02:	4618      	mov	r0, r3
 8018b04:	f7f3 fe3d 	bl	800c782 <_ZNK8touchgfx4Rect7isEmptyEv>
 8018b08:	2800      	cmp	r0, #0
 8018b0a:	f040 80a3 	bne.w	8018c54 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8018b0e:	f9b5 1000 	ldrsh.w	r1, [r5]
 8018b12:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8018b16:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 8018b1a:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 8018b1e:	fb04 1303 	mla	r3, r4, r3, r1
 8018b22:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 8018b26:	4365      	muls	r5, r4
 8018b28:	2fff      	cmp	r7, #255	; 0xff
 8018b2a:	eba4 0200 	sub.w	r2, r4, r0
 8018b2e:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 8018b32:	ea4f 2816 	mov.w	r8, r6, lsr #8
 8018b36:	d04a      	beq.n	8018bce <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 8018b38:	b2bc      	uxth	r4, r7
 8018b3a:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 8018b3e:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 8018b42:	fa5f f788 	uxtb.w	r7, r8
 8018b46:	b2f3      	uxtb	r3, r6
 8018b48:	0040      	lsls	r0, r0, #1
 8018b4a:	fb0e fe04 	mul.w	lr, lr, r4
 8018b4e:	4367      	muls	r7, r4
 8018b50:	4363      	muls	r3, r4
 8018b52:	ea4f 0842 	mov.w	r8, r2, lsl #1
 8018b56:	fa1f fc8c 	uxth.w	ip, ip
 8018b5a:	42a9      	cmp	r1, r5
 8018b5c:	d27a      	bcs.n	8018c54 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8018b5e:	eb01 0900 	add.w	r9, r1, r0
 8018b62:	4549      	cmp	r1, r9
 8018b64:	d231      	bcs.n	8018bca <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 8018b66:	880a      	ldrh	r2, [r1, #0]
 8018b68:	1214      	asrs	r4, r2, #8
 8018b6a:	10d6      	asrs	r6, r2, #3
 8018b6c:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8018b70:	00d2      	lsls	r2, r2, #3
 8018b72:	b2d2      	uxtb	r2, r2
 8018b74:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8018b78:	fb14 f40c 	smulbb	r4, r4, ip
 8018b7c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8018b80:	4474      	add	r4, lr
 8018b82:	fb12 f20c 	smulbb	r2, r2, ip
 8018b86:	b2a4      	uxth	r4, r4
 8018b88:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8018b8c:	441a      	add	r2, r3
 8018b8e:	b292      	uxth	r2, r2
 8018b90:	f104 0a01 	add.w	sl, r4, #1
 8018b94:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8018b98:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 8018b9c:	fb16 f60c 	smulbb	r6, r6, ip
 8018ba0:	f102 0a01 	add.w	sl, r2, #1
 8018ba4:	443e      	add	r6, r7
 8018ba6:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 8018baa:	b2b6      	uxth	r6, r6
 8018bac:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8018bb0:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8018bb4:	4322      	orrs	r2, r4
 8018bb6:	1c74      	adds	r4, r6, #1
 8018bb8:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 8018bbc:	0976      	lsrs	r6, r6, #5
 8018bbe:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8018bc2:	4332      	orrs	r2, r6
 8018bc4:	f821 2b02 	strh.w	r2, [r1], #2
 8018bc8:	e7cb      	b.n	8018b62 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 8018bca:	4441      	add	r1, r8
 8018bcc:	e7c5      	b.n	8018b5a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 8018bce:	4f22      	ldr	r7, [pc, #136]	; (8018c58 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 8018bd0:	0973      	lsrs	r3, r6, #5
 8018bd2:	ea08 0707 	and.w	r7, r8, r7
 8018bd6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018bda:	433b      	orrs	r3, r7
 8018bdc:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8018be0:	4333      	orrs	r3, r6
 8018be2:	07e7      	lsls	r7, r4, #31
 8018be4:	b29b      	uxth	r3, r3
 8018be6:	d50b      	bpl.n	8018c00 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 8018be8:	0040      	lsls	r0, r0, #1
 8018bea:	0052      	lsls	r2, r2, #1
 8018bec:	42a9      	cmp	r1, r5
 8018bee:	d231      	bcs.n	8018c54 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8018bf0:	180c      	adds	r4, r1, r0
 8018bf2:	42a1      	cmp	r1, r4
 8018bf4:	d202      	bcs.n	8018bfc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 8018bf6:	f821 3b02 	strh.w	r3, [r1], #2
 8018bfa:	e7fa      	b.n	8018bf2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 8018bfc:	4411      	add	r1, r2
 8018bfe:	e7f5      	b.n	8018bec <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 8018c00:	078e      	lsls	r6, r1, #30
 8018c02:	d008      	beq.n	8018c16 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 8018c04:	0066      	lsls	r6, r4, #1
 8018c06:	460a      	mov	r2, r1
 8018c08:	42aa      	cmp	r2, r5
 8018c0a:	d202      	bcs.n	8018c12 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 8018c0c:	8013      	strh	r3, [r2, #0]
 8018c0e:	4432      	add	r2, r6
 8018c10:	e7fa      	b.n	8018c08 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 8018c12:	3102      	adds	r1, #2
 8018c14:	3801      	subs	r0, #1
 8018c16:	07c2      	lsls	r2, r0, #31
 8018c18:	d50b      	bpl.n	8018c32 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 8018c1a:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 8018c1e:	3a01      	subs	r2, #1
 8018c20:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 8018c24:	0066      	lsls	r6, r4, #1
 8018c26:	42aa      	cmp	r2, r5
 8018c28:	d202      	bcs.n	8018c30 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 8018c2a:	8013      	strh	r3, [r2, #0]
 8018c2c:	4432      	add	r2, r6
 8018c2e:	e7fa      	b.n	8018c26 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 8018c30:	3801      	subs	r0, #1
 8018c32:	b178      	cbz	r0, 8018c54 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8018c34:	1040      	asrs	r0, r0, #1
 8018c36:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 8018c3a:	0080      	lsls	r0, r0, #2
 8018c3c:	0064      	lsls	r4, r4, #1
 8018c3e:	42a9      	cmp	r1, r5
 8018c40:	d208      	bcs.n	8018c54 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8018c42:	180e      	adds	r6, r1, r0
 8018c44:	460a      	mov	r2, r1
 8018c46:	42b2      	cmp	r2, r6
 8018c48:	d202      	bcs.n	8018c50 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 8018c4a:	f842 3b04 	str.w	r3, [r2], #4
 8018c4e:	e7fa      	b.n	8018c46 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 8018c50:	4421      	add	r1, r4
 8018c52:	e7f4      	b.n	8018c3e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 8018c54:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8018c58:	00fff800 	.word	0x00fff800

08018c5c <_ZN8touchgfx8LCD16bppC1Ev>:
 8018c5c:	2200      	movs	r2, #0
 8018c5e:	4910      	ldr	r1, [pc, #64]	; (8018ca0 <_ZN8touchgfx8LCD16bppC1Ev+0x44>)
 8018c60:	6042      	str	r2, [r0, #4]
 8018c62:	6001      	str	r1, [r0, #0]
 8018c64:	e9c0 2202 	strd	r2, r2, [r0, #8]
 8018c68:	e9c0 2204 	strd	r2, r2, [r0, #16]
 8018c6c:	e9c0 2206 	strd	r2, r2, [r0, #24]
 8018c70:	e9c0 2208 	strd	r2, r2, [r0, #32]
 8018c74:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 8018c78:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 8018c7c:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 8018c80:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 8018c84:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 8018c88:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 8018c8c:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 8018c90:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 8018c94:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 8018c98:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 8018c9c:	4770      	bx	lr
 8018c9e:	bf00      	nop
 8018ca0:	080258b4 	.word	0x080258b4

08018ca4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 8018ca4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018ca8:	460d      	mov	r5, r1
 8018caa:	b08d      	sub	sp, #52	; 0x34
 8018cac:	4604      	mov	r4, r0
 8018cae:	6808      	ldr	r0, [r1, #0]
 8018cb0:	6849      	ldr	r1, [r1, #4]
 8018cb2:	4699      	mov	r9, r3
 8018cb4:	ab08      	add	r3, sp, #32
 8018cb6:	c303      	stmia	r3!, {r0, r1}
 8018cb8:	6810      	ldr	r0, [r2, #0]
 8018cba:	6851      	ldr	r1, [r2, #4]
 8018cbc:	ab0a      	add	r3, sp, #40	; 0x28
 8018cbe:	c303      	stmia	r3!, {r0, r1}
 8018cc0:	a808      	add	r0, sp, #32
 8018cc2:	f7f9 fae7 	bl	8012294 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8018cc6:	4629      	mov	r1, r5
 8018cc8:	a80a      	add	r0, sp, #40	; 0x28
 8018cca:	f7f9 fb0b 	bl	80122e4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8018cce:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 8018cd2:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 8018cd6:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 8018cda:	4d63      	ldr	r5, [pc, #396]	; (8018e68 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8018cdc:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 8018ce0:	6828      	ldr	r0, [r5, #0]
 8018ce2:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 8018ce6:	fb11 2103 	smlabb	r1, r1, r3, r2
 8018cea:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8018cee:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 8018cf2:	440a      	add	r2, r1
 8018cf4:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8018cf8:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8018cfc:	4413      	add	r3, r2
 8018cfe:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8018d02:	6803      	ldr	r3, [r0, #0]
 8018d04:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8018d06:	4798      	blx	r3
 8018d08:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8018d0c:	d119      	bne.n	8018d42 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 8018d0e:	f010 0f20 	tst.w	r0, #32
 8018d12:	6828      	ldr	r0, [r5, #0]
 8018d14:	d018      	beq.n	8018d48 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 8018d16:	2500      	movs	r5, #0
 8018d18:	6801      	ldr	r1, [r0, #0]
 8018d1a:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8018d1e:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 8018d22:	e9cd 9503 	strd	r9, r5, [sp, #12]
 8018d26:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 8018d2a:	9502      	str	r5, [sp, #8]
 8018d2c:	b2b6      	uxth	r6, r6
 8018d2e:	fa1f f588 	uxth.w	r5, r8
 8018d32:	9601      	str	r6, [sp, #4]
 8018d34:	9500      	str	r5, [sp, #0]
 8018d36:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 8018d38:	4621      	mov	r1, r4
 8018d3a:	47a8      	blx	r5
 8018d3c:	b00d      	add	sp, #52	; 0x34
 8018d3e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018d42:	f010 0f40 	tst.w	r0, #64	; 0x40
 8018d46:	e7e4      	b.n	8018d12 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 8018d48:	6803      	ldr	r3, [r0, #0]
 8018d4a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8018d4c:	4798      	blx	r3
 8018d4e:	4947      	ldr	r1, [pc, #284]	; (8018e6c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 8018d50:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8018d54:	880b      	ldrh	r3, [r1, #0]
 8018d56:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 8018d5a:	fb03 5202 	mla	r2, r3, r2, r5
 8018d5e:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8018d62:	4373      	muls	r3, r6
 8018d64:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8018d68:	9307      	str	r3, [sp, #28]
 8018d6a:	ea4f 0348 	mov.w	r3, r8, lsl #1
 8018d6e:	9306      	str	r3, [sp, #24]
 8018d70:	468a      	mov	sl, r1
 8018d72:	9b07      	ldr	r3, [sp, #28]
 8018d74:	4298      	cmp	r0, r3
 8018d76:	d270      	bcs.n	8018e5a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 8018d78:	9b06      	ldr	r3, [sp, #24]
 8018d7a:	4621      	mov	r1, r4
 8018d7c:	eb00 0b03 	add.w	fp, r0, r3
 8018d80:	4558      	cmp	r0, fp
 8018d82:	d25d      	bcs.n	8018e40 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 8018d84:	f851 4b04 	ldr.w	r4, [r1], #4
 8018d88:	0e23      	lsrs	r3, r4, #24
 8018d8a:	d014      	beq.n	8018db6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8018d8c:	2bff      	cmp	r3, #255	; 0xff
 8018d8e:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 8018d92:	d112      	bne.n	8018dba <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 8018d94:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8018d98:	d10f      	bne.n	8018dba <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 8018d9a:	0963      	lsrs	r3, r4, #5
 8018d9c:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8018da0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018da4:	f02c 0c07 	bic.w	ip, ip, #7
 8018da8:	ea43 0c0c 	orr.w	ip, r3, ip
 8018dac:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8018db0:	ea4c 0404 	orr.w	r4, ip, r4
 8018db4:	8004      	strh	r4, [r0, #0]
 8018db6:	3002      	adds	r0, #2
 8018db8:	e7e2      	b.n	8018d80 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 8018dba:	fb09 f303 	mul.w	r3, r9, r3
 8018dbe:	8807      	ldrh	r7, [r0, #0]
 8018dc0:	1c5a      	adds	r2, r3, #1
 8018dc2:	eb02 2223 	add.w	r2, r2, r3, asr #8
 8018dc6:	1212      	asrs	r2, r2, #8
 8018dc8:	123e      	asrs	r6, r7, #8
 8018dca:	b293      	uxth	r3, r2
 8018dcc:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 8018dd0:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8018dd4:	43d2      	mvns	r2, r2
 8018dd6:	b2d2      	uxtb	r2, r2
 8018dd8:	10fd      	asrs	r5, r7, #3
 8018dda:	fb1e fe03 	smulbb	lr, lr, r3
 8018dde:	00ff      	lsls	r7, r7, #3
 8018de0:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8018de4:	fb06 e602 	mla	r6, r6, r2, lr
 8018de8:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8018dec:	b2ff      	uxtb	r7, r7
 8018dee:	fa5f fc8c 	uxtb.w	ip, ip
 8018df2:	b2e4      	uxtb	r4, r4
 8018df4:	b2b6      	uxth	r6, r6
 8018df6:	fb1c fc03 	smulbb	ip, ip, r3
 8018dfa:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8018dfe:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 8018e02:	fb14 f403 	smulbb	r4, r4, r3
 8018e06:	fb05 c502 	mla	r5, r5, r2, ip
 8018e0a:	f106 0e01 	add.w	lr, r6, #1
 8018e0e:	fb07 4702 	mla	r7, r7, r2, r4
 8018e12:	b2ad      	uxth	r5, r5
 8018e14:	b2bf      	uxth	r7, r7
 8018e16:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 8018e1a:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
 8018e1e:	f105 0c01 	add.w	ip, r5, #1
 8018e22:	1c7e      	adds	r6, r7, #1
 8018e24:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8018e28:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8018e2c:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8018e30:	096d      	lsrs	r5, r5, #5
 8018e32:	ea46 060e 	orr.w	r6, r6, lr
 8018e36:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8018e3a:	432e      	orrs	r6, r5
 8018e3c:	8006      	strh	r6, [r0, #0]
 8018e3e:	e7ba      	b.n	8018db6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8018e40:	f8ba 3000 	ldrh.w	r3, [sl]
 8018e44:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
 8018e48:	eba3 0308 	sub.w	r3, r3, r8
 8018e4c:	eba4 0408 	sub.w	r4, r4, r8
 8018e50:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018e54:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 8018e58:	e78b      	b.n	8018d72 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 8018e5a:	4b03      	ldr	r3, [pc, #12]	; (8018e68 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8018e5c:	6818      	ldr	r0, [r3, #0]
 8018e5e:	6803      	ldr	r3, [r0, #0]
 8018e60:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8018e62:	4798      	blx	r3
 8018e64:	e76a      	b.n	8018d3c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 8018e66:	bf00      	nop
 8018e68:	2001794c 	.word	0x2001794c
 8018e6c:	20017946 	.word	0x20017946

08018e70 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 8018e70:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8018e74:	460c      	mov	r4, r1
 8018e76:	b085      	sub	sp, #20
 8018e78:	6810      	ldr	r0, [r2, #0]
 8018e7a:	6851      	ldr	r1, [r2, #4]
 8018e7c:	466d      	mov	r5, sp
 8018e7e:	c503      	stmia	r5!, {r0, r1}
 8018e80:	6818      	ldr	r0, [r3, #0]
 8018e82:	6859      	ldr	r1, [r3, #4]
 8018e84:	4616      	mov	r6, r2
 8018e86:	c503      	stmia	r5!, {r0, r1}
 8018e88:	4668      	mov	r0, sp
 8018e8a:	f7f9 fa03 	bl	8012294 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8018e8e:	4631      	mov	r1, r6
 8018e90:	a802      	add	r0, sp, #8
 8018e92:	f7f9 fa27 	bl	80122e4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8018e96:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 8018e9a:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 8018e9e:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8018ea2:	4d28      	ldr	r5, [pc, #160]	; (8018f44 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 8018ea4:	4e28      	ldr	r6, [pc, #160]	; (8018f48 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 8018ea6:	6828      	ldr	r0, [r5, #0]
 8018ea8:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8018eac:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 8018eb0:	fb11 2103 	smlabb	r1, r1, r3, r2
 8018eb4:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8018eb8:	f8bd 1000 	ldrh.w	r1, [sp]
 8018ebc:	440a      	add	r2, r1
 8018ebe:	f8ad 2008 	strh.w	r2, [sp, #8]
 8018ec2:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8018ec6:	4413      	add	r3, r2
 8018ec8:	f8ad 300a 	strh.w	r3, [sp, #10]
 8018ecc:	6803      	ldr	r3, [r0, #0]
 8018ece:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8018ed0:	4798      	blx	r3
 8018ed2:	8833      	ldrh	r3, [r6, #0]
 8018ed4:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 8018ed8:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8018edc:	f8df e06c 	ldr.w	lr, [pc, #108]	; 8018f4c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 8018ee0:	fb03 1202 	mla	r2, r3, r2, r1
 8018ee4:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8018ee8:	fb08 f303 	mul.w	r3, r8, r3
 8018eec:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8018ef0:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 8018ef4:	4298      	cmp	r0, r3
 8018ef6:	d21d      	bcs.n	8018f34 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 8018ef8:	eb00 080c 	add.w	r8, r0, ip
 8018efc:	4540      	cmp	r0, r8
 8018efe:	d20f      	bcs.n	8018f20 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 8018f00:	f854 1b04 	ldr.w	r1, [r4], #4
 8018f04:	ea4f 1951 	mov.w	r9, r1, lsr #5
 8018f08:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 8018f0c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8018f10:	ea42 0209 	orr.w	r2, r2, r9
 8018f14:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8018f18:	430a      	orrs	r2, r1
 8018f1a:	f820 2b02 	strh.w	r2, [r0], #2
 8018f1e:	e7ed      	b.n	8018efc <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 8018f20:	8832      	ldrh	r2, [r6, #0]
 8018f22:	1bd2      	subs	r2, r2, r7
 8018f24:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8018f28:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 8018f2c:	1bd2      	subs	r2, r2, r7
 8018f2e:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 8018f32:	e7df      	b.n	8018ef4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 8018f34:	6828      	ldr	r0, [r5, #0]
 8018f36:	6803      	ldr	r3, [r0, #0]
 8018f38:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8018f3a:	4798      	blx	r3
 8018f3c:	b005      	add	sp, #20
 8018f3e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8018f42:	bf00      	nop
 8018f44:	2001794c 	.word	0x2001794c
 8018f48:	20017946 	.word	0x20017946
 8018f4c:	fffff800 	.word	0xfffff800

08018f50 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 8018f50:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8018f54:	460e      	mov	r6, r1
 8018f56:	b08e      	sub	sp, #56	; 0x38
 8018f58:	4604      	mov	r4, r0
 8018f5a:	6808      	ldr	r0, [r1, #0]
 8018f5c:	6849      	ldr	r1, [r1, #4]
 8018f5e:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 8019138 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 8018f62:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 801913c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 8018f66:	461d      	mov	r5, r3
 8018f68:	ab0a      	add	r3, sp, #40	; 0x28
 8018f6a:	c303      	stmia	r3!, {r0, r1}
 8018f6c:	6810      	ldr	r0, [r2, #0]
 8018f6e:	6851      	ldr	r1, [r2, #4]
 8018f70:	ab0c      	add	r3, sp, #48	; 0x30
 8018f72:	c303      	stmia	r3!, {r0, r1}
 8018f74:	a80a      	add	r0, sp, #40	; 0x28
 8018f76:	f7f9 f98d 	bl	8012294 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8018f7a:	4631      	mov	r1, r6
 8018f7c:	a80c      	add	r0, sp, #48	; 0x30
 8018f7e:	f7f9 f9b1 	bl	80122e4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8018f82:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 8018f86:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8018f8a:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8018f8e:	f8d8 0000 	ldr.w	r0, [r8]
 8018f92:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 8018f96:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 8018f9a:	fb11 2103 	smlabb	r1, r1, r3, r2
 8018f9e:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8018fa2:	440c      	add	r4, r1
 8018fa4:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 8018fa8:	440a      	add	r2, r1
 8018faa:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8018fae:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 8018fb2:	4413      	add	r3, r2
 8018fb4:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8018fb8:	6803      	ldr	r3, [r0, #0]
 8018fba:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8018fbc:	4798      	blx	r3
 8018fbe:	2dff      	cmp	r5, #255	; 0xff
 8018fc0:	d124      	bne.n	801900c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 8018fc2:	f010 0f01 	tst.w	r0, #1
 8018fc6:	f8d8 0000 	ldr.w	r0, [r8]
 8018fca:	d022      	beq.n	8019012 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 8018fcc:	2100      	movs	r1, #0
 8018fce:	f8d0 c000 	ldr.w	ip, [r0]
 8018fd2:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8018fd6:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 8018fda:	e9cd 1107 	strd	r1, r1, [sp, #28]
 8018fde:	f04f 0e01 	mov.w	lr, #1
 8018fe2:	f8cd e018 	str.w	lr, [sp, #24]
 8018fe6:	f8b9 e000 	ldrh.w	lr, [r9]
 8018fea:	9503      	str	r5, [sp, #12]
 8018fec:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 8018ff0:	b2b6      	uxth	r6, r6
 8018ff2:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8018ff6:	9102      	str	r1, [sp, #8]
 8018ff8:	b2bf      	uxth	r7, r7
 8018ffa:	9601      	str	r6, [sp, #4]
 8018ffc:	9700      	str	r7, [sp, #0]
 8018ffe:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
 8019002:	4621      	mov	r1, r4
 8019004:	47a8      	blx	r5
 8019006:	b00e      	add	sp, #56	; 0x38
 8019008:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801900c:	f010 0f04 	tst.w	r0, #4
 8019010:	e7d9      	b.n	8018fc6 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 8019012:	6803      	ldr	r3, [r0, #0]
 8019014:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8019016:	4798      	blx	r3
 8019018:	f8b9 3000 	ldrh.w	r3, [r9]
 801901c:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 8019020:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 8019024:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 8019028:	fb03 1202 	mla	r2, r3, r2, r1
 801902c:	ebac 0c07 	sub.w	ip, ip, r7
 8019030:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8019034:	435e      	muls	r6, r3
 8019036:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 801903a:	2dff      	cmp	r5, #255	; 0xff
 801903c:	eba3 0707 	sub.w	r7, r3, r7
 8019040:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8019044:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8019048:	ea4f 0747 	mov.w	r7, r7, lsl #1
 801904c:	d049      	beq.n	80190e2 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 801904e:	43eb      	mvns	r3, r5
 8019050:	fa1f f985 	uxth.w	r9, r5
 8019054:	b2db      	uxtb	r3, r3
 8019056:	42b0      	cmp	r0, r6
 8019058:	d266      	bcs.n	8019128 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801905a:	eb00 0a0e 	add.w	sl, r0, lr
 801905e:	4550      	cmp	r0, sl
 8019060:	4621      	mov	r1, r4
 8019062:	f104 0403 	add.w	r4, r4, #3
 8019066:	d25b      	bcs.n	8019120 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 8019068:	8802      	ldrh	r2, [r0, #0]
 801906a:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801906e:	ea4f 2822 	mov.w	r8, r2, asr #8
 8019072:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 8019076:	fb11 f109 	smulbb	r1, r1, r9
 801907a:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 801907e:	10d5      	asrs	r5, r2, #3
 8019080:	fb08 1803 	mla	r8, r8, r3, r1
 8019084:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 8019088:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801908c:	fb11 f109 	smulbb	r1, r1, r9
 8019090:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8019094:	fb05 1503 	mla	r5, r5, r3, r1
 8019098:	00d2      	lsls	r2, r2, #3
 801909a:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801909e:	b2d2      	uxtb	r2, r2
 80190a0:	fb11 f109 	smulbb	r1, r1, r9
 80190a4:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 80190a8:	fa1f f888 	uxth.w	r8, r8
 80190ac:	fb02 1203 	mla	r2, r2, r3, r1
 80190b0:	b292      	uxth	r2, r2
 80190b2:	f108 0101 	add.w	r1, r8, #1
 80190b6:	b2ad      	uxth	r5, r5
 80190b8:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 80190bc:	1c51      	adds	r1, r2, #1
 80190be:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80190c2:	1c69      	adds	r1, r5, #1
 80190c4:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 80190c8:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 80190cc:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80190d0:	096d      	lsrs	r5, r5, #5
 80190d2:	ea42 0208 	orr.w	r2, r2, r8
 80190d6:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80190da:	432a      	orrs	r2, r5
 80190dc:	f820 2b02 	strh.w	r2, [r0], #2
 80190e0:	e7bd      	b.n	801905e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 80190e2:	4a14      	ldr	r2, [pc, #80]	; (8019134 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 80190e4:	42b0      	cmp	r0, r6
 80190e6:	d21f      	bcs.n	8019128 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 80190e8:	eb00 050e 	add.w	r5, r0, lr
 80190ec:	42a8      	cmp	r0, r5
 80190ee:	4621      	mov	r1, r4
 80190f0:	f104 0403 	add.w	r4, r4, #3
 80190f4:	d210      	bcs.n	8019118 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 80190f6:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 80190fa:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 80190fe:	00db      	lsls	r3, r3, #3
 8019100:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 8019104:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019108:	430b      	orrs	r3, r1
 801910a:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801910e:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 8019112:	f820 3b02 	strh.w	r3, [r0], #2
 8019116:	e7e9      	b.n	80190ec <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 8019118:	4438      	add	r0, r7
 801911a:	eb01 040c 	add.w	r4, r1, ip
 801911e:	e7e1      	b.n	80190e4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 8019120:	4438      	add	r0, r7
 8019122:	eb01 040c 	add.w	r4, r1, ip
 8019126:	e796      	b.n	8019056 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 8019128:	4b03      	ldr	r3, [pc, #12]	; (8019138 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 801912a:	6818      	ldr	r0, [r3, #0]
 801912c:	6803      	ldr	r3, [r0, #0]
 801912e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8019130:	4798      	blx	r3
 8019132:	e768      	b.n	8019006 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 8019134:	fffff800 	.word	0xfffff800
 8019138:	2001794c 	.word	0x2001794c
 801913c:	20017946 	.word	0x20017946

08019140 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 8019140:	b4f0      	push	{r4, r5, r6, r7}
 8019142:	4616      	mov	r6, r2
 8019144:	2e01      	cmp	r6, #1
 8019146:	461c      	mov	r4, r3
 8019148:	460d      	mov	r5, r1
 801914a:	9a04      	ldr	r2, [sp, #16]
 801914c:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8019150:	f89d 7018 	ldrb.w	r7, [sp, #24]
 8019154:	d012      	beq.n	801917c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 8019156:	d303      	bcc.n	8019160 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 8019158:	2e02      	cmp	r6, #2
 801915a:	d00a      	beq.n	8019172 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 801915c:	bcf0      	pop	{r4, r5, r6, r7}
 801915e:	4770      	bx	lr
 8019160:	6805      	ldr	r5, [r0, #0]
 8019162:	e9cd 3704 	strd	r3, r7, [sp, #16]
 8019166:	68ed      	ldr	r5, [r5, #12]
 8019168:	4613      	mov	r3, r2
 801916a:	46ac      	mov	ip, r5
 801916c:	4622      	mov	r2, r4
 801916e:	bcf0      	pop	{r4, r5, r6, r7}
 8019170:	4760      	bx	ip
 8019172:	4621      	mov	r1, r4
 8019174:	4628      	mov	r0, r5
 8019176:	bcf0      	pop	{r4, r5, r6, r7}
 8019178:	f7ff bd94 	b.w	8018ca4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801917c:	4621      	mov	r1, r4
 801917e:	4628      	mov	r0, r5
 8019180:	bcf0      	pop	{r4, r5, r6, r7}
 8019182:	f7ff bee5 	b.w	8018f50 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

08019188 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 8019188:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801918c:	4681      	mov	r9, r0
 801918e:	b093      	sub	sp, #76	; 0x4c
 8019190:	6810      	ldr	r0, [r2, #0]
 8019192:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 8019196:	4f6d      	ldr	r7, [pc, #436]	; (801934c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 8019198:	4688      	mov	r8, r1
 801919a:	6851      	ldr	r1, [r2, #4]
 801919c:	ac0e      	add	r4, sp, #56	; 0x38
 801919e:	c403      	stmia	r4!, {r0, r1}
 80191a0:	6818      	ldr	r0, [r3, #0]
 80191a2:	6859      	ldr	r1, [r3, #4]
 80191a4:	ac10      	add	r4, sp, #64	; 0x40
 80191a6:	4616      	mov	r6, r2
 80191a8:	c403      	stmia	r4!, {r0, r1}
 80191aa:	a80e      	add	r0, sp, #56	; 0x38
 80191ac:	f7f9 f872 	bl	8012294 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80191b0:	4631      	mov	r1, r6
 80191b2:	a810      	add	r0, sp, #64	; 0x40
 80191b4:	f7f9 f896 	bl	80122e4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80191b8:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 80191bc:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 80191c0:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 80191c4:	4e62      	ldr	r6, [pc, #392]	; (8019350 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 80191c6:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 80191ca:	6830      	ldr	r0, [r6, #0]
 80191cc:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 80191d0:	fb11 2103 	smlabb	r1, r1, r3, r2
 80191d4:	4489      	add	r9, r1
 80191d6:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 80191da:	440a      	add	r2, r1
 80191dc:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 80191e0:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 80191e4:	4413      	add	r3, r2
 80191e6:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 80191ea:	6803      	ldr	r3, [r0, #0]
 80191ec:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80191ee:	4798      	blx	r3
 80191f0:	f010 0f80 	tst.w	r0, #128	; 0x80
 80191f4:	6830      	ldr	r0, [r6, #0]
 80191f6:	d01d      	beq.n	8019234 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 80191f8:	2200      	movs	r2, #0
 80191fa:	6801      	ldr	r1, [r0, #0]
 80191fc:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8019200:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8019204:	220b      	movs	r2, #11
 8019206:	9207      	str	r2, [sp, #28]
 8019208:	883a      	ldrh	r2, [r7, #0]
 801920a:	9206      	str	r2, [sp, #24]
 801920c:	2201      	movs	r2, #1
 801920e:	e9cd a204 	strd	sl, r2, [sp, #16]
 8019212:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 8019216:	9203      	str	r2, [sp, #12]
 8019218:	b2a4      	uxth	r4, r4
 801921a:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 801921e:	9200      	str	r2, [sp, #0]
 8019220:	b2ad      	uxth	r5, r5
 8019222:	9502      	str	r5, [sp, #8]
 8019224:	9401      	str	r4, [sp, #4]
 8019226:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 8019228:	4642      	mov	r2, r8
 801922a:	4649      	mov	r1, r9
 801922c:	47a0      	blx	r4
 801922e:	b013      	add	sp, #76	; 0x4c
 8019230:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019234:	6803      	ldr	r3, [r0, #0]
 8019236:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8019238:	4798      	blx	r3
 801923a:	883b      	ldrh	r3, [r7, #0]
 801923c:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 8019240:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 8019244:	fb03 1202 	mla	r2, r3, r2, r1
 8019248:	435d      	muls	r5, r3
 801924a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801924e:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 8019252:	920c      	str	r2, [sp, #48]	; 0x30
 8019254:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 8019258:	1b12      	subs	r2, r2, r4
 801925a:	920d      	str	r2, [sp, #52]	; 0x34
 801925c:	0062      	lsls	r2, r4, #1
 801925e:	1b1c      	subs	r4, r3, r4
 8019260:	0063      	lsls	r3, r4, #1
 8019262:	920a      	str	r2, [sp, #40]	; 0x28
 8019264:	930b      	str	r3, [sp, #44]	; 0x2c
 8019266:	f04f 0e04 	mov.w	lr, #4
 801926a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801926c:	4298      	cmp	r0, r3
 801926e:	d266      	bcs.n	801933e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 8019270:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019272:	eb00 0b03 	add.w	fp, r0, r3
 8019276:	4558      	cmp	r0, fp
 8019278:	d25c      	bcs.n	8019334 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 801927a:	f819 3b01 	ldrb.w	r3, [r9], #1
 801927e:	fb1e e303 	smlabb	r3, lr, r3, lr
 8019282:	f858 2003 	ldr.w	r2, [r8, r3]
 8019286:	0e11      	lsrs	r1, r2, #24
 8019288:	d012      	beq.n	80192b0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801928a:	29ff      	cmp	r1, #255	; 0xff
 801928c:	ea4f 2712 	mov.w	r7, r2, lsr #8
 8019290:	d110      	bne.n	80192b4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8019292:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8019296:	d10d      	bne.n	80192b4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8019298:	0953      	lsrs	r3, r2, #5
 801929a:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 801929e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80192a2:	f027 0707 	bic.w	r7, r7, #7
 80192a6:	431f      	orrs	r7, r3
 80192a8:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80192ac:	433a      	orrs	r2, r7
 80192ae:	8002      	strh	r2, [r0, #0]
 80192b0:	3002      	adds	r0, #2
 80192b2:	e7e0      	b.n	8019276 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 80192b4:	fb0a f101 	mul.w	r1, sl, r1
 80192b8:	8806      	ldrh	r6, [r0, #0]
 80192ba:	1c4b      	adds	r3, r1, #1
 80192bc:	eb03 2321 	add.w	r3, r3, r1, asr #8
 80192c0:	1235      	asrs	r5, r6, #8
 80192c2:	10f4      	asrs	r4, r6, #3
 80192c4:	121b      	asrs	r3, r3, #8
 80192c6:	00f6      	lsls	r6, r6, #3
 80192c8:	b299      	uxth	r1, r3
 80192ca:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 80192ce:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80192d2:	b2f6      	uxtb	r6, r6
 80192d4:	43db      	mvns	r3, r3
 80192d6:	b2d2      	uxtb	r2, r2
 80192d8:	b2db      	uxtb	r3, r3
 80192da:	fb1c fc01 	smulbb	ip, ip, r1
 80192de:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 80192e2:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 80192e6:	fb12 f201 	smulbb	r2, r2, r1
 80192ea:	fb05 c503 	mla	r5, r5, r3, ip
 80192ee:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 80192f2:	b2ff      	uxtb	r7, r7
 80192f4:	fb06 2203 	mla	r2, r6, r3, r2
 80192f8:	b2ad      	uxth	r5, r5
 80192fa:	fb17 f701 	smulbb	r7, r7, r1
 80192fe:	b292      	uxth	r2, r2
 8019300:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 8019304:	fb04 7403 	mla	r4, r4, r3, r7
 8019308:	f105 0c01 	add.w	ip, r5, #1
 801930c:	1c57      	adds	r7, r2, #1
 801930e:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8019312:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8019316:	b2a4      	uxth	r4, r4
 8019318:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801931c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8019320:	433d      	orrs	r5, r7
 8019322:	1c67      	adds	r7, r4, #1
 8019324:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 8019328:	0964      	lsrs	r4, r4, #5
 801932a:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801932e:	4325      	orrs	r5, r4
 8019330:	8005      	strh	r5, [r0, #0]
 8019332:	e7bd      	b.n	80192b0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8019334:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8019336:	4418      	add	r0, r3
 8019338:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801933a:	4499      	add	r9, r3
 801933c:	e795      	b.n	801926a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 801933e:	4b04      	ldr	r3, [pc, #16]	; (8019350 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8019340:	6818      	ldr	r0, [r3, #0]
 8019342:	6803      	ldr	r3, [r0, #0]
 8019344:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8019346:	4798      	blx	r3
 8019348:	e771      	b.n	801922e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 801934a:	bf00      	nop
 801934c:	20017946 	.word	0x20017946
 8019350:	2001794c 	.word	0x2001794c

08019354 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 8019354:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019358:	b087      	sub	sp, #28
 801935a:	4680      	mov	r8, r0
 801935c:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 8019360:	460d      	mov	r5, r1
 8019362:	4614      	mov	r4, r2
 8019364:	2e00      	cmp	r6, #0
 8019366:	f000 80b9 	beq.w	80194dc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 801936a:	6810      	ldr	r0, [r2, #0]
 801936c:	6851      	ldr	r1, [r2, #4]
 801936e:	af02      	add	r7, sp, #8
 8019370:	c703      	stmia	r7!, {r0, r1}
 8019372:	6818      	ldr	r0, [r3, #0]
 8019374:	6859      	ldr	r1, [r3, #4]
 8019376:	af04      	add	r7, sp, #16
 8019378:	c703      	stmia	r7!, {r0, r1}
 801937a:	a802      	add	r0, sp, #8
 801937c:	f7f8 ff8a 	bl	8012294 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8019380:	4621      	mov	r1, r4
 8019382:	a804      	add	r0, sp, #16
 8019384:	f7f8 ffae 	bl	80122e4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8019388:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801938c:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8019390:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 8019394:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 8019398:	fb14 2103 	smlabb	r1, r4, r3, r2
 801939c:	eb08 0401 	add.w	r4, r8, r1
 80193a0:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 80193a4:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 80193a8:	440a      	add	r2, r1
 80193aa:	f8ad 2010 	strh.w	r2, [sp, #16]
 80193ae:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 80193b2:	4413      	add	r3, r2
 80193b4:	f8ad 3012 	strh.w	r3, [sp, #18]
 80193b8:	4b4a      	ldr	r3, [pc, #296]	; (80194e4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 80193ba:	6818      	ldr	r0, [r3, #0]
 80193bc:	6803      	ldr	r3, [r0, #0]
 80193be:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80193c0:	4798      	blx	r3
 80193c2:	4b49      	ldr	r3, [pc, #292]	; (80194e8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 80193c4:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 80193c8:	881a      	ldrh	r2, [r3, #0]
 80193ca:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 80193ce:	2eff      	cmp	r6, #255	; 0xff
 80193d0:	fb02 c101 	mla	r1, r2, r1, ip
 80193d4:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 80193d8:	fb02 f207 	mul.w	r2, r2, r7
 80193dc:	f105 0104 	add.w	r1, r5, #4
 80193e0:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 80193e4:	461d      	mov	r5, r3
 80193e6:	d05a      	beq.n	801949e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 80193e8:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 80193ec:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 80193f0:	b2b6      	uxth	r6, r6
 80193f2:	fa1f fe8e 	uxth.w	lr, lr
 80193f6:	9301      	str	r3, [sp, #4]
 80193f8:	4282      	cmp	r2, r0
 80193fa:	d96a      	bls.n	80194d2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 80193fc:	eb00 0b0a 	add.w	fp, r0, sl
 8019400:	4583      	cmp	fp, r0
 8019402:	d940      	bls.n	8019486 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 8019404:	f814 3b01 	ldrb.w	r3, [r4], #1
 8019408:	8805      	ldrh	r5, [r0, #0]
 801940a:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801940e:	122f      	asrs	r7, r5, #8
 8019410:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8019414:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019418:	fb17 f70e 	smulbb	r7, r7, lr
 801941c:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8019420:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019424:	00ed      	lsls	r5, r5, #3
 8019426:	fb0c 7c06 	mla	ip, ip, r6, r7
 801942a:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801942e:	10df      	asrs	r7, r3, #3
 8019430:	b2ed      	uxtb	r5, r5
 8019432:	00db      	lsls	r3, r3, #3
 8019434:	fa1f fc8c 	uxth.w	ip, ip
 8019438:	fb19 f90e 	smulbb	r9, r9, lr
 801943c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019440:	b2db      	uxtb	r3, r3
 8019442:	fb15 f50e 	smulbb	r5, r5, lr
 8019446:	fb07 9706 	mla	r7, r7, r6, r9
 801944a:	fb03 5306 	mla	r3, r3, r6, r5
 801944e:	f10c 0901 	add.w	r9, ip, #1
 8019452:	b29b      	uxth	r3, r3
 8019454:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 8019458:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 801945c:	f103 0c01 	add.w	ip, r3, #1
 8019460:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8019464:	b2bf      	uxth	r7, r7
 8019466:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801946a:	ea4c 0c09 	orr.w	ip, ip, r9
 801946e:	f107 0901 	add.w	r9, r7, #1
 8019472:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 8019476:	097f      	lsrs	r7, r7, #5
 8019478:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801947c:	ea4c 0c07 	orr.w	ip, ip, r7
 8019480:	f820 cb02 	strh.w	ip, [r0], #2
 8019484:	e7bc      	b.n	8019400 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 8019486:	9b01      	ldr	r3, [sp, #4]
 8019488:	881b      	ldrh	r3, [r3, #0]
 801948a:	eba3 0308 	sub.w	r3, r3, r8
 801948e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8019492:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8019496:	eba3 0308 	sub.w	r3, r3, r8
 801949a:	441c      	add	r4, r3
 801949c:	e7ac      	b.n	80193f8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 801949e:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 80194a2:	4282      	cmp	r2, r0
 80194a4:	d915      	bls.n	80194d2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 80194a6:	eb00 060a 	add.w	r6, r0, sl
 80194aa:	4286      	cmp	r6, r0
 80194ac:	d906      	bls.n	80194bc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 80194ae:	f814 3b01 	ldrb.w	r3, [r4], #1
 80194b2:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 80194b6:	f820 3b02 	strh.w	r3, [r0], #2
 80194ba:	e7f6      	b.n	80194aa <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 80194bc:	882b      	ldrh	r3, [r5, #0]
 80194be:	eba3 0308 	sub.w	r3, r3, r8
 80194c2:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80194c6:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 80194ca:	eba3 0308 	sub.w	r3, r3, r8
 80194ce:	441c      	add	r4, r3
 80194d0:	e7e7      	b.n	80194a2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 80194d2:	4b04      	ldr	r3, [pc, #16]	; (80194e4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 80194d4:	6818      	ldr	r0, [r3, #0]
 80194d6:	6803      	ldr	r3, [r0, #0]
 80194d8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80194da:	4798      	blx	r3
 80194dc:	b007      	add	sp, #28
 80194de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80194e2:	bf00      	nop
 80194e4:	2001794c 	.word	0x2001794c
 80194e8:	20017946 	.word	0x20017946

080194ec <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 80194ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80194f0:	b091      	sub	sp, #68	; 0x44
 80194f2:	4680      	mov	r8, r0
 80194f4:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 80194f8:	460f      	mov	r7, r1
 80194fa:	4614      	mov	r4, r2
 80194fc:	2d00      	cmp	r5, #0
 80194fe:	d051      	beq.n	80195a4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 8019500:	6810      	ldr	r0, [r2, #0]
 8019502:	6851      	ldr	r1, [r2, #4]
 8019504:	f8df 9200 	ldr.w	r9, [pc, #512]	; 8019708 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 8019508:	ae0c      	add	r6, sp, #48	; 0x30
 801950a:	c603      	stmia	r6!, {r0, r1}
 801950c:	6818      	ldr	r0, [r3, #0]
 801950e:	6859      	ldr	r1, [r3, #4]
 8019510:	ae0e      	add	r6, sp, #56	; 0x38
 8019512:	c603      	stmia	r6!, {r0, r1}
 8019514:	a80c      	add	r0, sp, #48	; 0x30
 8019516:	f7f8 febd 	bl	8012294 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801951a:	4621      	mov	r1, r4
 801951c:	a80e      	add	r0, sp, #56	; 0x38
 801951e:	f7f8 fee1 	bl	80122e4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8019522:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 8019526:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801952a:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 801952e:	f8d9 0000 	ldr.w	r0, [r9]
 8019532:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 8019536:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 801953a:	fb11 2103 	smlabb	r1, r1, r3, r2
 801953e:	eb08 0401 	add.w	r4, r8, r1
 8019542:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 8019546:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 801970c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 801954a:	440a      	add	r2, r1
 801954c:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 8019550:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 8019554:	4413      	add	r3, r2
 8019556:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 801955a:	6803      	ldr	r3, [r0, #0]
 801955c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801955e:	4798      	blx	r3
 8019560:	f010 0f80 	tst.w	r0, #128	; 0x80
 8019564:	f8d9 0000 	ldr.w	r0, [r9]
 8019568:	d01f      	beq.n	80195aa <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 801956a:	2200      	movs	r2, #0
 801956c:	6801      	ldr	r1, [r0, #0]
 801956e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8019572:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8019576:	220b      	movs	r2, #11
 8019578:	9207      	str	r2, [sp, #28]
 801957a:	f8b8 2000 	ldrh.w	r2, [r8]
 801957e:	9206      	str	r2, [sp, #24]
 8019580:	2201      	movs	r2, #1
 8019582:	e9cd 5204 	strd	r5, r2, [sp, #16]
 8019586:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 801958a:	9203      	str	r2, [sp, #12]
 801958c:	fa1f f28a 	uxth.w	r2, sl
 8019590:	9202      	str	r2, [sp, #8]
 8019592:	b2b6      	uxth	r6, r6
 8019594:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8019598:	9200      	str	r2, [sp, #0]
 801959a:	9601      	str	r6, [sp, #4]
 801959c:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 801959e:	463a      	mov	r2, r7
 80195a0:	4621      	mov	r1, r4
 80195a2:	47a8      	blx	r5
 80195a4:	b011      	add	sp, #68	; 0x44
 80195a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80195aa:	6803      	ldr	r3, [r0, #0]
 80195ac:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80195ae:	4798      	blx	r3
 80195b0:	f8b8 2000 	ldrh.w	r2, [r8]
 80195b4:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 80195b8:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 80195bc:	2dff      	cmp	r5, #255	; 0xff
 80195be:	fb02 1303 	mla	r3, r2, r3, r1
 80195c2:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80195c6:	ea4f 0946 	mov.w	r9, r6, lsl #1
 80195ca:	fb0a fa02 	mul.w	sl, sl, r2
 80195ce:	d062      	beq.n	8019696 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 80195d0:	ea6f 0c05 	mvn.w	ip, r5
 80195d4:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 80195d8:	930a      	str	r3, [sp, #40]	; 0x28
 80195da:	b2ad      	uxth	r5, r5
 80195dc:	fa5f fc8c 	uxtb.w	ip, ip
 80195e0:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 80195e4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80195e6:	4298      	cmp	r0, r3
 80195e8:	f080 8085 	bcs.w	80196f6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 80195ec:	eb00 0b09 	add.w	fp, r0, r9
 80195f0:	4558      	cmp	r0, fp
 80195f2:	d246      	bcs.n	8019682 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 80195f4:	f814 eb01 	ldrb.w	lr, [r4], #1
 80195f8:	2303      	movs	r3, #3
 80195fa:	2204      	movs	r2, #4
 80195fc:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 8019600:	eb07 0a0e 	add.w	sl, r7, lr
 8019604:	8803      	ldrh	r3, [r0, #0]
 8019606:	f89a 8002 	ldrb.w	r8, [sl, #2]
 801960a:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801960e:	1219      	asrs	r1, r3, #8
 8019610:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8019614:	fb18 f805 	smulbb	r8, r8, r5
 8019618:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 801961c:	10da      	asrs	r2, r3, #3
 801961e:	fb01 810c 	mla	r1, r1, ip, r8
 8019622:	00db      	lsls	r3, r3, #3
 8019624:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8019628:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801962c:	b2db      	uxtb	r3, r3
 801962e:	fb18 f805 	smulbb	r8, r8, r5
 8019632:	fb1e fe05 	smulbb	lr, lr, r5
 8019636:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 801963a:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 801963e:	b289      	uxth	r1, r1
 8019640:	fb02 820c 	mla	r2, r2, ip, r8
 8019644:	fb03 e30c 	mla	r3, r3, ip, lr
 8019648:	b292      	uxth	r2, r2
 801964a:	b29b      	uxth	r3, r3
 801964c:	f101 0801 	add.w	r8, r1, #1
 8019650:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 8019654:	f103 0e01 	add.w	lr, r3, #1
 8019658:	f102 0801 	add.w	r8, r2, #1
 801965c:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 8019660:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 8019664:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8019668:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801966c:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8019670:	ea4e 0101 	orr.w	r1, lr, r1
 8019674:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8019678:	ea41 0108 	orr.w	r1, r1, r8
 801967c:	f820 1b02 	strh.w	r1, [r0], #2
 8019680:	e7b6      	b.n	80195f0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 8019682:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8019684:	881b      	ldrh	r3, [r3, #0]
 8019686:	1b9b      	subs	r3, r3, r6
 8019688:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801968c:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8019690:	1b9b      	subs	r3, r3, r6
 8019692:	441c      	add	r4, r3
 8019694:	e7a6      	b.n	80195e4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 8019696:	491b      	ldr	r1, [pc, #108]	; (8019704 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 8019698:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 801969c:	2203      	movs	r2, #3
 801969e:	2504      	movs	r5, #4
 80196a0:	4550      	cmp	r0, sl
 80196a2:	d228      	bcs.n	80196f6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 80196a4:	eb00 0c09 	add.w	ip, r0, r9
 80196a8:	4560      	cmp	r0, ip
 80196aa:	4623      	mov	r3, r4
 80196ac:	d219      	bcs.n	80196e2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 80196ae:	f893 e000 	ldrb.w	lr, [r3]
 80196b2:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 80196b6:	eb07 0b0e 	add.w	fp, r7, lr
 80196ba:	f817 e00e 	ldrb.w	lr, [r7, lr]
 80196be:	f89b 3002 	ldrb.w	r3, [fp, #2]
 80196c2:	f89b b001 	ldrb.w	fp, [fp, #1]
 80196c6:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 80196ca:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 80196ce:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 80196d2:	ea43 030b 	orr.w	r3, r3, fp
 80196d6:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 80196da:	3401      	adds	r4, #1
 80196dc:	f820 3b02 	strh.w	r3, [r0], #2
 80196e0:	e7e2      	b.n	80196a8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 80196e2:	f8b8 3000 	ldrh.w	r3, [r8]
 80196e6:	1b9b      	subs	r3, r3, r6
 80196e8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80196ec:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 80196f0:	1b9b      	subs	r3, r3, r6
 80196f2:	441c      	add	r4, r3
 80196f4:	e7d4      	b.n	80196a0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 80196f6:	4b04      	ldr	r3, [pc, #16]	; (8019708 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 80196f8:	6818      	ldr	r0, [r3, #0]
 80196fa:	6803      	ldr	r3, [r0, #0]
 80196fc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80196fe:	4798      	blx	r3
 8019700:	e750      	b.n	80195a4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 8019702:	bf00      	nop
 8019704:	fffff800 	.word	0xfffff800
 8019708:	2001794c 	.word	0x2001794c
 801970c:	20017946 	.word	0x20017946

08019710 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 8019710:	b430      	push	{r4, r5}
 8019712:	780d      	ldrb	r5, [r1, #0]
 8019714:	f89d 4008 	ldrb.w	r4, [sp, #8]
 8019718:	2d01      	cmp	r5, #1
 801971a:	d00a      	beq.n	8019732 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x22>
 801971c:	d305      	bcc.n	801972a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1a>
 801971e:	2d02      	cmp	r5, #2
 8019720:	d10b      	bne.n	801973a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x2a>
 8019722:	9402      	str	r4, [sp, #8]
 8019724:	bc30      	pop	{r4, r5}
 8019726:	f7ff be15 	b.w	8019354 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 801972a:	9402      	str	r4, [sp, #8]
 801972c:	bc30      	pop	{r4, r5}
 801972e:	f7ff bd2b 	b.w	8019188 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 8019732:	9402      	str	r4, [sp, #8]
 8019734:	bc30      	pop	{r4, r5}
 8019736:	f7ff bed9 	b.w	80194ec <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 801973a:	bc30      	pop	{r4, r5}
 801973c:	4770      	bx	lr
	...

08019740 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 8019740:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019744:	4604      	mov	r4, r0
 8019746:	b087      	sub	sp, #28
 8019748:	6810      	ldr	r0, [r2, #0]
 801974a:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 801974e:	f8df 9238 	ldr.w	r9, [pc, #568]	; 8019988 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 8019752:	460e      	mov	r6, r1
 8019754:	6851      	ldr	r1, [r2, #4]
 8019756:	ad02      	add	r5, sp, #8
 8019758:	c503      	stmia	r5!, {r0, r1}
 801975a:	6818      	ldr	r0, [r3, #0]
 801975c:	6859      	ldr	r1, [r3, #4]
 801975e:	ad04      	add	r5, sp, #16
 8019760:	4617      	mov	r7, r2
 8019762:	c503      	stmia	r5!, {r0, r1}
 8019764:	a802      	add	r0, sp, #8
 8019766:	f7f8 fd95 	bl	8012294 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801976a:	4639      	mov	r1, r7
 801976c:	a804      	add	r0, sp, #16
 801976e:	f7f8 fdb9 	bl	80122e4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8019772:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8019776:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801977a:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 801977e:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8019782:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 8019786:	fb11 2103 	smlabb	r1, r1, r3, r2
 801978a:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 801978e:	440e      	add	r6, r1
 8019790:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8019794:	440a      	add	r2, r1
 8019796:	f8ad 2010 	strh.w	r2, [sp, #16]
 801979a:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801979e:	4413      	add	r3, r2
 80197a0:	f8ad 3012 	strh.w	r3, [sp, #18]
 80197a4:	4b77      	ldr	r3, [pc, #476]	; (8019984 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 80197a6:	6818      	ldr	r0, [r3, #0]
 80197a8:	6803      	ldr	r3, [r0, #0]
 80197aa:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80197ac:	4798      	blx	r3
 80197ae:	f8b9 b000 	ldrh.w	fp, [r9]
 80197b2:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80197b6:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 80197ba:	fb0b 2303 	mla	r3, fp, r3, r2
 80197be:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80197c2:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 80197c6:	ea4f 0348 	mov.w	r3, r8, lsl #1
 80197ca:	fb05 f50b 	mul.w	r5, r5, fp
 80197ce:	9300      	str	r3, [sp, #0]
 80197d0:	d069      	beq.n	80198a6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 80197d2:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 80197d6:	4558      	cmp	r0, fp
 80197d8:	f080 80cc 	bcs.w	8019974 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 80197dc:	9b00      	ldr	r3, [sp, #0]
 80197de:	18c3      	adds	r3, r0, r3
 80197e0:	9301      	str	r3, [sp, #4]
 80197e2:	4631      	mov	r1, r6
 80197e4:	9b01      	ldr	r3, [sp, #4]
 80197e6:	4298      	cmp	r0, r3
 80197e8:	d24f      	bcs.n	801988a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 80197ea:	f811 2b01 	ldrb.w	r2, [r1], #1
 80197ee:	2a00      	cmp	r2, #0
 80197f0:	d048      	beq.n	8019884 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 80197f2:	fb0a f202 	mul.w	r2, sl, r2
 80197f6:	1c53      	adds	r3, r2, #1
 80197f8:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80197fc:	121b      	asrs	r3, r3, #8
 80197fe:	d041      	beq.n	8019884 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 8019800:	8802      	ldrh	r2, [r0, #0]
 8019802:	f8b4 c000 	ldrh.w	ip, [r4]
 8019806:	b29e      	uxth	r6, r3
 8019808:	1215      	asrs	r5, r2, #8
 801980a:	43db      	mvns	r3, r3
 801980c:	b2db      	uxtb	r3, r3
 801980e:	ea4f 272c 	mov.w	r7, ip, asr #8
 8019812:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8019816:	fb15 f503 	smulbb	r5, r5, r3
 801981a:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 801981e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019822:	00d2      	lsls	r2, r2, #3
 8019824:	fb07 5706 	mla	r7, r7, r6, r5
 8019828:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801982c:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8019830:	b2d2      	uxtb	r2, r2
 8019832:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8019836:	b2bf      	uxth	r7, r7
 8019838:	fb1e fe03 	smulbb	lr, lr, r3
 801983c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8019840:	fa5f fc8c 	uxtb.w	ip, ip
 8019844:	fb12 f203 	smulbb	r2, r2, r3
 8019848:	fb05 e506 	mla	r5, r5, r6, lr
 801984c:	fb0c 2c06 	mla	ip, ip, r6, r2
 8019850:	f107 0e01 	add.w	lr, r7, #1
 8019854:	fa1f fc8c 	uxth.w	ip, ip
 8019858:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 801985c:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 8019860:	f10c 0701 	add.w	r7, ip, #1
 8019864:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8019868:	b2ad      	uxth	r5, r5
 801986a:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801986e:	ea47 070e 	orr.w	r7, r7, lr
 8019872:	f105 0e01 	add.w	lr, r5, #1
 8019876:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801987a:	096d      	lsrs	r5, r5, #5
 801987c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8019880:	432f      	orrs	r7, r5
 8019882:	8007      	strh	r7, [r0, #0]
 8019884:	3002      	adds	r0, #2
 8019886:	3402      	adds	r4, #2
 8019888:	e7ac      	b.n	80197e4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 801988a:	f8b9 3000 	ldrh.w	r3, [r9]
 801988e:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8019892:	eba3 0308 	sub.w	r3, r3, r8
 8019896:	eba6 0608 	sub.w	r6, r6, r8
 801989a:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801989e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80198a2:	440e      	add	r6, r1
 80198a4:	e797      	b.n	80197d6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 80198a6:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 80198aa:	42a8      	cmp	r0, r5
 80198ac:	d262      	bcs.n	8019974 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 80198ae:	9b00      	ldr	r3, [sp, #0]
 80198b0:	4631      	mov	r1, r6
 80198b2:	eb00 0b03 	add.w	fp, r0, r3
 80198b6:	4558      	cmp	r0, fp
 80198b8:	d24e      	bcs.n	8019958 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 80198ba:	f811 3b01 	ldrb.w	r3, [r1], #1
 80198be:	b12b      	cbz	r3, 80198cc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 80198c0:	2bff      	cmp	r3, #255	; 0xff
 80198c2:	f8b4 e000 	ldrh.w	lr, [r4]
 80198c6:	d104      	bne.n	80198d2 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 80198c8:	f8a0 e000 	strh.w	lr, [r0]
 80198cc:	3002      	adds	r0, #2
 80198ce:	3402      	adds	r4, #2
 80198d0:	e7f1      	b.n	80198b6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 80198d2:	8802      	ldrh	r2, [r0, #0]
 80198d4:	b29f      	uxth	r7, r3
 80198d6:	1216      	asrs	r6, r2, #8
 80198d8:	43db      	mvns	r3, r3
 80198da:	b2db      	uxtb	r3, r3
 80198dc:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80198e0:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80198e4:	fb16 f603 	smulbb	r6, r6, r3
 80198e8:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 80198ec:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80198f0:	00d2      	lsls	r2, r2, #3
 80198f2:	fb0c 6c07 	mla	ip, ip, r7, r6
 80198f6:	b2d2      	uxtb	r2, r2
 80198f8:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80198fc:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8019900:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8019904:	fb1a fa03 	smulbb	sl, sl, r3
 8019908:	fa1f fc8c 	uxth.w	ip, ip
 801990c:	fb12 f303 	smulbb	r3, r2, r3
 8019910:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019914:	fa5f fe8e 	uxtb.w	lr, lr
 8019918:	fb06 a607 	mla	r6, r6, r7, sl
 801991c:	f10c 0201 	add.w	r2, ip, #1
 8019920:	fb0e 3307 	mla	r3, lr, r7, r3
 8019924:	b2b6      	uxth	r6, r6
 8019926:	b29b      	uxth	r3, r3
 8019928:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801992c:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 8019930:	f106 0a01 	add.w	sl, r6, #1
 8019934:	f103 0c01 	add.w	ip, r3, #1
 8019938:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801993c:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 8019940:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8019944:	0976      	lsrs	r6, r6, #5
 8019946:	ea4c 0c02 	orr.w	ip, ip, r2
 801994a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801994e:	ea4c 0c06 	orr.w	ip, ip, r6
 8019952:	f8a0 c000 	strh.w	ip, [r0]
 8019956:	e7b9      	b.n	80198cc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 8019958:	f8b9 3000 	ldrh.w	r3, [r9]
 801995c:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8019960:	eba3 0308 	sub.w	r3, r3, r8
 8019964:	eba6 0608 	sub.w	r6, r6, r8
 8019968:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801996c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8019970:	440e      	add	r6, r1
 8019972:	e79a      	b.n	80198aa <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 8019974:	4b03      	ldr	r3, [pc, #12]	; (8019984 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 8019976:	6818      	ldr	r0, [r3, #0]
 8019978:	6803      	ldr	r3, [r0, #0]
 801997a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801997c:	4798      	blx	r3
 801997e:	b007      	add	sp, #28
 8019980:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019984:	2001794c 	.word	0x2001794c
 8019988:	20017946 	.word	0x20017946

0801998c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 801998c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019990:	b089      	sub	sp, #36	; 0x24
 8019992:	4682      	mov	sl, r0
 8019994:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 8019998:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801999a:	460f      	mov	r7, r1
 801999c:	4691      	mov	r9, r2
 801999e:	4698      	mov	r8, r3
 80199a0:	2e00      	cmp	r6, #0
 80199a2:	d036      	beq.n	8019a12 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 80199a4:	4608      	mov	r0, r1
 80199a6:	f7fc f863 	bl	8015a70 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80199aa:	4605      	mov	r5, r0
 80199ac:	4638      	mov	r0, r7
 80199ae:	f7fc f893 	bl	8015ad8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80199b2:	f8ad 000e 	strh.w	r0, [sp, #14]
 80199b6:	4638      	mov	r0, r7
 80199b8:	f8ad 9008 	strh.w	r9, [sp, #8]
 80199bc:	f8ad 500c 	strh.w	r5, [sp, #12]
 80199c0:	f8ad 800a 	strh.w	r8, [sp, #10]
 80199c4:	f7fc f940 	bl	8015c48 <_ZNK8touchgfx6Bitmap7getDataEv>
 80199c8:	4605      	mov	r5, r0
 80199ca:	4638      	mov	r0, r7
 80199cc:	f7fc f96c 	bl	8015ca8 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 80199d0:	4681      	mov	r9, r0
 80199d2:	4638      	mov	r0, r7
 80199d4:	f7fc f9bc 	bl	8015d50 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80199d8:	280b      	cmp	r0, #11
 80199da:	d81a      	bhi.n	8019a12 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 80199dc:	e8df f000 	tbb	[pc, r0]
 80199e0:	1906aebd 	.word	0x1906aebd
 80199e4:	19191919 	.word	0x19191919
 80199e8:	b5191919 	.word	0xb5191919
 80199ec:	4bb0      	ldr	r3, [pc, #704]	; (8019cb0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
 80199ee:	6818      	ldr	r0, [r3, #0]
 80199f0:	6803      	ldr	r3, [r0, #0]
 80199f2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80199f4:	4798      	blx	r3
 80199f6:	2eff      	cmp	r6, #255	; 0xff
 80199f8:	d121      	bne.n	8019a3e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb2>
 80199fa:	0683      	lsls	r3, r0, #26
 80199fc:	d41f      	bmi.n	8019a3e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb2>
 80199fe:	4638      	mov	r0, r7
 8019a00:	f7fc f8ea 	bl	8015bd8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8019a04:	b940      	cbnz	r0, 8019a18 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x8c>
 8019a06:	4623      	mov	r3, r4
 8019a08:	aa02      	add	r2, sp, #8
 8019a0a:	4629      	mov	r1, r5
 8019a0c:	4650      	mov	r0, sl
 8019a0e:	f7ff fa2f 	bl	8018e70 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 8019a12:	b009      	add	sp, #36	; 0x24
 8019a14:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019a18:	f10d 0818 	add.w	r8, sp, #24
 8019a1c:	4639      	mov	r1, r7
 8019a1e:	4640      	mov	r0, r8
 8019a20:	f7fc f88e 	bl	8015b40 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8019a24:	e898 0003 	ldmia.w	r8, {r0, r1}
 8019a28:	af04      	add	r7, sp, #16
 8019a2a:	e887 0003 	stmia.w	r7, {r0, r1}
 8019a2e:	4638      	mov	r0, r7
 8019a30:	4621      	mov	r1, r4
 8019a32:	f7f2 fe63 	bl	800c6fc <_ZN8touchgfx4RectaNERKS0_>
 8019a36:	4638      	mov	r0, r7
 8019a38:	f7f2 fea3 	bl	800c782 <_ZNK8touchgfx4Rect7isEmptyEv>
 8019a3c:	b130      	cbz	r0, 8019a4c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc0>
 8019a3e:	4633      	mov	r3, r6
 8019a40:	4622      	mov	r2, r4
 8019a42:	a902      	add	r1, sp, #8
 8019a44:	4628      	mov	r0, r5
 8019a46:	f7ff f92d 	bl	8018ca4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8019a4a:	e7e2      	b.n	8019a12 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 8019a4c:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8019a50:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8019a54:	4293      	cmp	r3, r2
 8019a56:	dd12      	ble.n	8019a7e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf2>
 8019a58:	1a9b      	subs	r3, r3, r2
 8019a5a:	f9b4 0000 	ldrsh.w	r0, [r4]
 8019a5e:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8019a62:	f8ad 0018 	strh.w	r0, [sp, #24]
 8019a66:	f8ad 201a 	strh.w	r2, [sp, #26]
 8019a6a:	f8ad 101c 	strh.w	r1, [sp, #28]
 8019a6e:	f8ad 301e 	strh.w	r3, [sp, #30]
 8019a72:	4642      	mov	r2, r8
 8019a74:	4633      	mov	r3, r6
 8019a76:	a902      	add	r1, sp, #8
 8019a78:	4628      	mov	r0, r5
 8019a7a:	f7ff f913 	bl	8018ca4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8019a7e:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8019a82:	f9b4 2000 	ldrsh.w	r2, [r4]
 8019a86:	4293      	cmp	r3, r2
 8019a88:	dd12      	ble.n	8019ab0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x124>
 8019a8a:	1a9b      	subs	r3, r3, r2
 8019a8c:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8019a90:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8019a94:	f8ad 2018 	strh.w	r2, [sp, #24]
 8019a98:	f8ad 001a 	strh.w	r0, [sp, #26]
 8019a9c:	f8ad 301c 	strh.w	r3, [sp, #28]
 8019aa0:	f8ad 101e 	strh.w	r1, [sp, #30]
 8019aa4:	23ff      	movs	r3, #255	; 0xff
 8019aa6:	4642      	mov	r2, r8
 8019aa8:	a902      	add	r1, sp, #8
 8019aaa:	4628      	mov	r0, r5
 8019aac:	f7ff f8fa 	bl	8018ca4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8019ab0:	463b      	mov	r3, r7
 8019ab2:	aa02      	add	r2, sp, #8
 8019ab4:	4629      	mov	r1, r5
 8019ab6:	4650      	mov	r0, sl
 8019ab8:	f7ff f9da 	bl	8018e70 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 8019abc:	88a2      	ldrh	r2, [r4, #4]
 8019abe:	8823      	ldrh	r3, [r4, #0]
 8019ac0:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8019ac4:	4413      	add	r3, r2
 8019ac6:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8019aca:	440a      	add	r2, r1
 8019acc:	b29b      	uxth	r3, r3
 8019ace:	b292      	uxth	r2, r2
 8019ad0:	b211      	sxth	r1, r2
 8019ad2:	b218      	sxth	r0, r3
 8019ad4:	4288      	cmp	r0, r1
 8019ad6:	dd12      	ble.n	8019afe <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x172>
 8019ad8:	1a9b      	subs	r3, r3, r2
 8019ada:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8019ade:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 8019ae2:	f8ad 1018 	strh.w	r1, [sp, #24]
 8019ae6:	f8ad 301c 	strh.w	r3, [sp, #28]
 8019aea:	f8ad 001e 	strh.w	r0, [sp, #30]
 8019aee:	23ff      	movs	r3, #255	; 0xff
 8019af0:	4642      	mov	r2, r8
 8019af2:	a902      	add	r1, sp, #8
 8019af4:	4628      	mov	r0, r5
 8019af6:	f8ad 601a 	strh.w	r6, [sp, #26]
 8019afa:	f7ff f8d3 	bl	8018ca4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8019afe:	88e2      	ldrh	r2, [r4, #6]
 8019b00:	8863      	ldrh	r3, [r4, #2]
 8019b02:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8019b06:	4413      	add	r3, r2
 8019b08:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8019b0c:	440a      	add	r2, r1
 8019b0e:	b29b      	uxth	r3, r3
 8019b10:	b292      	uxth	r2, r2
 8019b12:	b211      	sxth	r1, r2
 8019b14:	b218      	sxth	r0, r3
 8019b16:	4288      	cmp	r0, r1
 8019b18:	f77f af7b 	ble.w	8019a12 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 8019b1c:	1a9b      	subs	r3, r3, r2
 8019b1e:	f9b4 6000 	ldrsh.w	r6, [r4]
 8019b22:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8019b26:	f8ad 301e 	strh.w	r3, [sp, #30]
 8019b2a:	f8ad 6018 	strh.w	r6, [sp, #24]
 8019b2e:	f8ad 101a 	strh.w	r1, [sp, #26]
 8019b32:	f8ad 001c 	strh.w	r0, [sp, #28]
 8019b36:	23ff      	movs	r3, #255	; 0xff
 8019b38:	4642      	mov	r2, r8
 8019b3a:	e782      	b.n	8019a42 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb6>
 8019b3c:	4633      	mov	r3, r6
 8019b3e:	4622      	mov	r2, r4
 8019b40:	a902      	add	r1, sp, #8
 8019b42:	4628      	mov	r0, r5
 8019b44:	f7ff fa04 	bl	8018f50 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 8019b48:	e763      	b.n	8019a12 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 8019b4a:	9600      	str	r6, [sp, #0]
 8019b4c:	4623      	mov	r3, r4
 8019b4e:	aa02      	add	r2, sp, #8
 8019b50:	4649      	mov	r1, r9
 8019b52:	4628      	mov	r0, r5
 8019b54:	f7ff fddc 	bl	8019710 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 8019b58:	e75b      	b.n	8019a12 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 8019b5a:	4638      	mov	r0, r7
 8019b5c:	f7fc f83c 	bl	8015bd8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8019b60:	b950      	cbnz	r0, 8019b78 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ec>
 8019b62:	e9cd 6000 	strd	r6, r0, [sp]
 8019b66:	f8da 3000 	ldr.w	r3, [sl]
 8019b6a:	aa02      	add	r2, sp, #8
 8019b6c:	68de      	ldr	r6, [r3, #12]
 8019b6e:	4629      	mov	r1, r5
 8019b70:	4623      	mov	r3, r4
 8019b72:	4650      	mov	r0, sl
 8019b74:	47b0      	blx	r6
 8019b76:	e74c      	b.n	8019a12 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 8019b78:	f10d 0818 	add.w	r8, sp, #24
 8019b7c:	4639      	mov	r1, r7
 8019b7e:	4640      	mov	r0, r8
 8019b80:	f7fb ffde 	bl	8015b40 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8019b84:	e898 0003 	ldmia.w	r8, {r0, r1}
 8019b88:	af04      	add	r7, sp, #16
 8019b8a:	e887 0003 	stmia.w	r7, {r0, r1}
 8019b8e:	4638      	mov	r0, r7
 8019b90:	4621      	mov	r1, r4
 8019b92:	f7f2 fdb3 	bl	800c6fc <_ZN8touchgfx4RectaNERKS0_>
 8019b96:	4638      	mov	r0, r7
 8019b98:	f7f2 fdf3 	bl	800c782 <_ZNK8touchgfx4Rect7isEmptyEv>
 8019b9c:	b138      	cbz	r0, 8019bae <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x222>
 8019b9e:	9600      	str	r6, [sp, #0]
 8019ba0:	4623      	mov	r3, r4
 8019ba2:	aa02      	add	r2, sp, #8
 8019ba4:	4649      	mov	r1, r9
 8019ba6:	4628      	mov	r0, r5
 8019ba8:	f7ff fdca 	bl	8019740 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8019bac:	e731      	b.n	8019a12 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 8019bae:	e9cd 6000 	strd	r6, r0, [sp]
 8019bb2:	f8da 3000 	ldr.w	r3, [sl]
 8019bb6:	aa02      	add	r2, sp, #8
 8019bb8:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 8019bbc:	4629      	mov	r1, r5
 8019bbe:	463b      	mov	r3, r7
 8019bc0:	4650      	mov	r0, sl
 8019bc2:	47d8      	blx	fp
 8019bc4:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8019bc8:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8019bcc:	4293      	cmp	r3, r2
 8019bce:	dd13      	ble.n	8019bf8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26c>
 8019bd0:	f9b4 0000 	ldrsh.w	r0, [r4]
 8019bd4:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8019bd8:	f8ad 0018 	strh.w	r0, [sp, #24]
 8019bdc:	1a9b      	subs	r3, r3, r2
 8019bde:	f8ad 201a 	strh.w	r2, [sp, #26]
 8019be2:	f8ad 101c 	strh.w	r1, [sp, #28]
 8019be6:	f8ad 301e 	strh.w	r3, [sp, #30]
 8019bea:	9600      	str	r6, [sp, #0]
 8019bec:	4643      	mov	r3, r8
 8019bee:	aa02      	add	r2, sp, #8
 8019bf0:	4649      	mov	r1, r9
 8019bf2:	4628      	mov	r0, r5
 8019bf4:	f7ff fda4 	bl	8019740 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8019bf8:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8019bfc:	f9b4 2000 	ldrsh.w	r2, [r4]
 8019c00:	4293      	cmp	r3, r2
 8019c02:	dd13      	ble.n	8019c2c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a0>
 8019c04:	1a9b      	subs	r3, r3, r2
 8019c06:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8019c0a:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8019c0e:	f8ad 2018 	strh.w	r2, [sp, #24]
 8019c12:	f8ad 001a 	strh.w	r0, [sp, #26]
 8019c16:	f8ad 301c 	strh.w	r3, [sp, #28]
 8019c1a:	f8ad 101e 	strh.w	r1, [sp, #30]
 8019c1e:	9600      	str	r6, [sp, #0]
 8019c20:	4643      	mov	r3, r8
 8019c22:	aa02      	add	r2, sp, #8
 8019c24:	4649      	mov	r1, r9
 8019c26:	4628      	mov	r0, r5
 8019c28:	f7ff fd8a 	bl	8019740 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8019c2c:	88a2      	ldrh	r2, [r4, #4]
 8019c2e:	8823      	ldrh	r3, [r4, #0]
 8019c30:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8019c34:	4413      	add	r3, r2
 8019c36:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8019c3a:	440a      	add	r2, r1
 8019c3c:	b29b      	uxth	r3, r3
 8019c3e:	b292      	uxth	r2, r2
 8019c40:	b211      	sxth	r1, r2
 8019c42:	b218      	sxth	r0, r3
 8019c44:	4288      	cmp	r0, r1
 8019c46:	dd13      	ble.n	8019c70 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e4>
 8019c48:	1a9b      	subs	r3, r3, r2
 8019c4a:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8019c4e:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 8019c52:	f8ad 1018 	strh.w	r1, [sp, #24]
 8019c56:	f8ad 301c 	strh.w	r3, [sp, #28]
 8019c5a:	f8ad 001e 	strh.w	r0, [sp, #30]
 8019c5e:	9600      	str	r6, [sp, #0]
 8019c60:	4643      	mov	r3, r8
 8019c62:	aa02      	add	r2, sp, #8
 8019c64:	4649      	mov	r1, r9
 8019c66:	4628      	mov	r0, r5
 8019c68:	f8ad 701a 	strh.w	r7, [sp, #26]
 8019c6c:	f7ff fd68 	bl	8019740 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8019c70:	88e2      	ldrh	r2, [r4, #6]
 8019c72:	8863      	ldrh	r3, [r4, #2]
 8019c74:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8019c78:	4413      	add	r3, r2
 8019c7a:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8019c7e:	440a      	add	r2, r1
 8019c80:	b29b      	uxth	r3, r3
 8019c82:	b292      	uxth	r2, r2
 8019c84:	b211      	sxth	r1, r2
 8019c86:	b218      	sxth	r0, r3
 8019c88:	4288      	cmp	r0, r1
 8019c8a:	f77f aec2 	ble.w	8019a12 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 8019c8e:	f9b4 7000 	ldrsh.w	r7, [r4]
 8019c92:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8019c96:	f8ad 7018 	strh.w	r7, [sp, #24]
 8019c9a:	1a9b      	subs	r3, r3, r2
 8019c9c:	f8ad 301e 	strh.w	r3, [sp, #30]
 8019ca0:	f8ad 101a 	strh.w	r1, [sp, #26]
 8019ca4:	f8ad 001c 	strh.w	r0, [sp, #28]
 8019ca8:	9600      	str	r6, [sp, #0]
 8019caa:	4643      	mov	r3, r8
 8019cac:	e779      	b.n	8019ba2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x216>
 8019cae:	bf00      	nop
 8019cb0:	2001794c 	.word	0x2001794c

08019cb4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 8019cb4:	b180      	cbz	r0, 8019cd8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 8019cb6:	2903      	cmp	r1, #3
 8019cb8:	d81c      	bhi.n	8019cf4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 8019cba:	e8df f001 	tbb	[pc, r1]
 8019cbe:	1d02      	.short	0x1d02
 8019cc0:	1f08      	.short	0x1f08
 8019cc2:	4b10      	ldr	r3, [pc, #64]	; (8019d04 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8019cc4:	8818      	ldrh	r0, [r3, #0]
 8019cc6:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8019cca:	4240      	negs	r0, r0
 8019ccc:	4770      	bx	lr
 8019cce:	4b0d      	ldr	r3, [pc, #52]	; (8019d04 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8019cd0:	8818      	ldrh	r0, [r3, #0]
 8019cd2:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8019cd6:	4770      	bx	lr
 8019cd8:	2903      	cmp	r1, #3
 8019cda:	d80b      	bhi.n	8019cf4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 8019cdc:	a301      	add	r3, pc, #4	; (adr r3, 8019ce4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 8019cde:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 8019ce2:	bf00      	nop
 8019ce4:	08019cf9 	.word	0x08019cf9
 8019ce8:	08019ccf 	.word	0x08019ccf
 8019cec:	08019cfd 	.word	0x08019cfd
 8019cf0:	08019cc3 	.word	0x08019cc3
 8019cf4:	2000      	movs	r0, #0
 8019cf6:	4770      	bx	lr
 8019cf8:	2001      	movs	r0, #1
 8019cfa:	4770      	bx	lr
 8019cfc:	f04f 30ff 	mov.w	r0, #4294967295
 8019d00:	4770      	bx	lr
 8019d02:	bf00      	nop
 8019d04:	20017946 	.word	0x20017946

08019d08 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 8019d08:	b180      	cbz	r0, 8019d2c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 8019d0a:	2903      	cmp	r1, #3
 8019d0c:	d81c      	bhi.n	8019d48 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 8019d0e:	e8df f001 	tbb	[pc, r1]
 8019d12:	021d      	.short	0x021d
 8019d14:	071f      	.short	0x071f
 8019d16:	4b10      	ldr	r3, [pc, #64]	; (8019d58 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8019d18:	8818      	ldrh	r0, [r3, #0]
 8019d1a:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8019d1e:	4770      	bx	lr
 8019d20:	4b0d      	ldr	r3, [pc, #52]	; (8019d58 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8019d22:	8818      	ldrh	r0, [r3, #0]
 8019d24:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8019d28:	4240      	negs	r0, r0
 8019d2a:	4770      	bx	lr
 8019d2c:	2903      	cmp	r1, #3
 8019d2e:	d80b      	bhi.n	8019d48 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 8019d30:	a301      	add	r3, pc, #4	; (adr r3, 8019d38 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 8019d32:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 8019d36:	bf00      	nop
 8019d38:	08019d17 	.word	0x08019d17
 8019d3c:	08019d51 	.word	0x08019d51
 8019d40:	08019d21 	.word	0x08019d21
 8019d44:	08019d4d 	.word	0x08019d4d
 8019d48:	2000      	movs	r0, #0
 8019d4a:	4770      	bx	lr
 8019d4c:	2001      	movs	r0, #1
 8019d4e:	4770      	bx	lr
 8019d50:	f04f 30ff 	mov.w	r0, #4294967295
 8019d54:	4770      	bx	lr
 8019d56:	bf00      	nop
 8019d58:	20017946 	.word	0x20017946

08019d5c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 8019d5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019d60:	b099      	sub	sp, #100	; 0x64
 8019d62:	910b      	str	r1, [sp, #44]	; 0x2c
 8019d64:	a914      	add	r1, sp, #80	; 0x50
 8019d66:	e881 000c 	stmia.w	r1, {r2, r3}
 8019d6a:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 8019d6e:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 8019d72:	f891 900d 	ldrb.w	r9, [r1, #13]
 8019d76:	9309      	str	r3, [sp, #36]	; 0x24
 8019d78:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 8019d7c:	9310      	str	r3, [sp, #64]	; 0x40
 8019d7e:	ea4f 1749 	mov.w	r7, r9, lsl #5
 8019d82:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
 8019d86:	930c      	str	r3, [sp, #48]	; 0x30
 8019d88:	f407 7380 	and.w	r3, r7, #256	; 0x100
 8019d8c:	798f      	ldrb	r7, [r1, #6]
 8019d8e:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	; 0x88
 8019d92:	f8bd 5090 	ldrh.w	r5, [sp, #144]	; 0x90
 8019d96:	f8bd 6094 	ldrh.w	r6, [sp, #148]	; 0x94
 8019d9a:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 8019d9e:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 8019da2:	431f      	orrs	r7, r3
 8019da4:	f000 8195 	beq.w	801a0d2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8019da8:	ea4f 1909 	mov.w	r9, r9, lsl #4
 8019dac:	f409 7380 	and.w	r3, r9, #256	; 0x100
 8019db0:	f891 9007 	ldrb.w	r9, [r1, #7]
 8019db4:	ea59 0903 	orrs.w	r9, r9, r3
 8019db8:	f000 818b 	beq.w	801a0d2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8019dbc:	f991 3009 	ldrsb.w	r3, [r1, #9]
 8019dc0:	b29b      	uxth	r3, r3
 8019dc2:	2d00      	cmp	r5, #0
 8019dc4:	f000 812e 	beq.w	801a024 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 8019dc8:	1aed      	subs	r5, r5, r3
 8019dca:	b2ad      	uxth	r5, r5
 8019dcc:	042b      	lsls	r3, r5, #16
 8019dce:	d502      	bpl.n	8019dd6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 8019dd0:	1b64      	subs	r4, r4, r5
 8019dd2:	b224      	sxth	r4, r4
 8019dd4:	2500      	movs	r5, #0
 8019dd6:	f9b2 1000 	ldrsh.w	r1, [r2]
 8019dda:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8019dde:	428c      	cmp	r4, r1
 8019de0:	b28b      	uxth	r3, r1
 8019de2:	bfbf      	itttt	lt
 8019de4:	18ed      	addlt	r5, r5, r3
 8019de6:	1b2c      	sublt	r4, r5, r4
 8019de8:	b2a5      	uxthlt	r5, r4
 8019dea:	460c      	movlt	r4, r1
 8019dec:	8891      	ldrh	r1, [r2, #4]
 8019dee:	440b      	add	r3, r1
 8019df0:	b21b      	sxth	r3, r3
 8019df2:	930f      	str	r3, [sp, #60]	; 0x3c
 8019df4:	88d3      	ldrh	r3, [r2, #6]
 8019df6:	8852      	ldrh	r2, [r2, #2]
 8019df8:	4413      	add	r3, r2
 8019dfa:	b21b      	sxth	r3, r3
 8019dfc:	930d      	str	r3, [sp, #52]	; 0x34
 8019dfe:	4bbe      	ldr	r3, [pc, #760]	; (801a0f8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 8019e00:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8019e02:	f893 b000 	ldrb.w	fp, [r3]
 8019e06:	f10b 3cff 	add.w	ip, fp, #4294967295
 8019e0a:	f1dc 0300 	rsbs	r3, ip, #0
 8019e0e:	eb43 030c 	adc.w	r3, r3, ip
 8019e12:	930e      	str	r3, [sp, #56]	; 0x38
 8019e14:	4621      	mov	r1, r4
 8019e16:	4653      	mov	r3, sl
 8019e18:	a814      	add	r0, sp, #80	; 0x50
 8019e1a:	f7f8 f8b5 	bl	8011f88 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 8019e1e:	4621      	mov	r1, r4
 8019e20:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 8019e24:	4653      	mov	r3, sl
 8019e26:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8019e28:	a814      	add	r0, sp, #80	; 0x50
 8019e2a:	f7f8 f8ca 	bl	8011fc2 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 8019e2e:	a918      	add	r1, sp, #96	; 0x60
 8019e30:	f821 0d02 	strh.w	r0, [r1, #-2]!
 8019e34:	a817      	add	r0, sp, #92	; 0x5c
 8019e36:	f7f8 f9eb 	bl	8012210 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 8019e3a:	f1ba 0f00 	cmp.w	sl, #0
 8019e3e:	f040 80f4 	bne.w	801a02a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 8019e42:	f1bb 0f01 	cmp.w	fp, #1
 8019e46:	f040 80f8 	bne.w	801a03a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 8019e4a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019e4c:	2b00      	cmp	r3, #0
 8019e4e:	f040 8145 	bne.w	801a0dc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 8019e52:	b2ba      	uxth	r2, r7
 8019e54:	b905      	cbnz	r5, 8019e58 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 8019e56:	b16e      	cbz	r6, 8019e74 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 8019e58:	fb06 5302 	mla	r3, r6, r2, r5
 8019e5c:	9828      	ldr	r0, [sp, #160]	; 0xa0
 8019e5e:	fb08 f303 	mul.w	r3, r8, r3
 8019e62:	4631      	mov	r1, r6
 8019e64:	f003 0607 	and.w	r6, r3, #7
 8019e68:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 8019e6c:	9328      	str	r3, [sp, #160]	; 0xa0
 8019e6e:	eba9 0301 	sub.w	r3, r9, r1
 8019e72:	930a      	str	r3, [sp, #40]	; 0x28
 8019e74:	4651      	mov	r1, sl
 8019e76:	980e      	ldr	r0, [sp, #56]	; 0x38
 8019e78:	f7ff ff1c 	bl	8019cb4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 8019e7c:	4681      	mov	r9, r0
 8019e7e:	980e      	ldr	r0, [sp, #56]	; 0x38
 8019e80:	f7ff ff42 	bl	8019d08 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 8019e84:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019e86:	9909      	ldr	r1, [sp, #36]	; 0x24
 8019e88:	eba3 0a01 	sub.w	sl, r3, r1
 8019e8c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019e8e:	459a      	cmp	sl, r3
 8019e90:	bfa8      	it	ge
 8019e92:	469a      	movge	sl, r3
 8019e94:	f1ba 0f00 	cmp.w	sl, #0
 8019e98:	4683      	mov	fp, r0
 8019e9a:	f340 811a 	ble.w	801a0d2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8019e9e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8019ea0:	1b64      	subs	r4, r4, r5
 8019ea2:	1b1c      	subs	r4, r3, r4
 8019ea4:	42bc      	cmp	r4, r7
 8019ea6:	bfd4      	ite	le
 8019ea8:	ebc5 0504 	rsble	r5, r5, r4
 8019eac:	ebc5 0507 	rsbgt	r5, r5, r7
 8019eb0:	2d00      	cmp	r5, #0
 8019eb2:	f340 810e 	ble.w	801a0d2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8019eb6:	1b52      	subs	r2, r2, r5
 8019eb8:	fb08 f302 	mul.w	r3, r8, r2
 8019ebc:	930f      	str	r3, [sp, #60]	; 0x3c
 8019ebe:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8019ec0:	2b00      	cmp	r3, #0
 8019ec2:	f040 8116 	bne.w	801a0f2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 8019ec6:	4b8d      	ldr	r3, [pc, #564]	; (801a0fc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 8019ec8:	6818      	ldr	r0, [r3, #0]
 8019eca:	6803      	ldr	r3, [r0, #0]
 8019ecc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8019ece:	4798      	blx	r3
 8019ed0:	2301      	movs	r3, #1
 8019ed2:	fa03 f308 	lsl.w	r3, r3, r8
 8019ed6:	4a8a      	ldr	r2, [pc, #552]	; (801a100 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 8019ed8:	3b01      	subs	r3, #1
 8019eda:	b2db      	uxtb	r3, r3
 8019edc:	8811      	ldrh	r1, [r2, #0]
 8019ede:	930e      	str	r3, [sp, #56]	; 0x38
 8019ee0:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 8019ee4:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 8019ee8:	fb01 2303 	mla	r3, r1, r3, r2
 8019eec:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8019ef0:	930a      	str	r3, [sp, #40]	; 0x28
 8019ef2:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8019ef4:	f3c3 4307 	ubfx	r3, r3, #16, #8
 8019ef8:	9313      	str	r3, [sp, #76]	; 0x4c
 8019efa:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8019efc:	0a19      	lsrs	r1, r3, #8
 8019efe:	b2cb      	uxtb	r3, r1
 8019f00:	9312      	str	r3, [sp, #72]	; 0x48
 8019f02:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8019f04:	b2db      	uxtb	r3, r3
 8019f06:	9311      	str	r3, [sp, #68]	; 0x44
 8019f08:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8019f0a:	095a      	lsrs	r2, r3, #5
 8019f0c:	4b7d      	ldr	r3, [pc, #500]	; (801a104 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 8019f0e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019f12:	400b      	ands	r3, r1
 8019f14:	4313      	orrs	r3, r2
 8019f16:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8019f18:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8019f1c:	4313      	orrs	r3, r2
 8019f1e:	b29b      	uxth	r3, r3
 8019f20:	9310      	str	r3, [sp, #64]	; 0x40
 8019f22:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8019f24:	781a      	ldrb	r2, [r3, #0]
 8019f26:	ea4f 0349 	mov.w	r3, r9, lsl #1
 8019f2a:	4132      	asrs	r2, r6
 8019f2c:	fb05 b919 	mls	r9, r5, r9, fp
 8019f30:	fb03 fb05 	mul.w	fp, r3, r5
 8019f34:	b2d2      	uxtb	r2, r2
 8019f36:	930d      	str	r3, [sp, #52]	; 0x34
 8019f38:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 8019f3c:	f11a 3aff 	adds.w	sl, sl, #4294967295
 8019f40:	f0c0 80f5 	bcc.w	801a12e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 8019f44:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 8019f48:	46ae      	mov	lr, r5
 8019f4a:	f11e 3eff 	adds.w	lr, lr, #4294967295
 8019f4e:	f0c0 80dd 	bcc.w	801a10c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 8019f52:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019f54:	4013      	ands	r3, r2
 8019f56:	d055      	beq.n	801a004 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 8019f58:	20ff      	movs	r0, #255	; 0xff
 8019f5a:	990e      	ldr	r1, [sp, #56]	; 0x38
 8019f5c:	fb90 f1f1 	sdiv	r1, r0, r1
 8019f60:	434b      	muls	r3, r1
 8019f62:	2bfe      	cmp	r3, #254	; 0xfe
 8019f64:	dd03      	ble.n	8019f6e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 8019f66:	990c      	ldr	r1, [sp, #48]	; 0x30
 8019f68:	4281      	cmp	r1, r0
 8019f6a:	f000 80cd 	beq.w	801a108 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 8019f6e:	990c      	ldr	r1, [sp, #48]	; 0x30
 8019f70:	f8bc 4000 	ldrh.w	r4, [ip]
 8019f74:	fb11 f303 	smulbb	r3, r1, r3
 8019f78:	b29b      	uxth	r3, r3
 8019f7a:	1c59      	adds	r1, r3, #1
 8019f7c:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8019f80:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8019f84:	b29f      	uxth	r7, r3
 8019f86:	43db      	mvns	r3, r3
 8019f88:	b2db      	uxtb	r3, r3
 8019f8a:	9309      	str	r3, [sp, #36]	; 0x24
 8019f8c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8019f8e:	1220      	asrs	r0, r4, #8
 8019f90:	fb13 f907 	smulbb	r9, r3, r7
 8019f94:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8019f98:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019f9a:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 8019f9e:	fb00 9003 	mla	r0, r0, r3, r9
 8019fa2:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8019fa4:	10e1      	asrs	r1, r4, #3
 8019fa6:	fb13 f907 	smulbb	r9, r3, r7
 8019faa:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8019fae:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019fb0:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 8019fb4:	fb01 9103 	mla	r1, r1, r3, r9
 8019fb8:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8019fba:	00e4      	lsls	r4, r4, #3
 8019fbc:	fb13 f707 	smulbb	r7, r3, r7
 8019fc0:	b2e4      	uxtb	r4, r4
 8019fc2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019fc4:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8019fc8:	fb04 7403 	mla	r4, r4, r3, r7
 8019fcc:	b280      	uxth	r0, r0
 8019fce:	b2a4      	uxth	r4, r4
 8019fd0:	1c43      	adds	r3, r0, #1
 8019fd2:	f104 0901 	add.w	r9, r4, #1
 8019fd6:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8019fda:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 8019fde:	b289      	uxth	r1, r1
 8019fe0:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 8019fe4:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8019fe8:	ea49 0000 	orr.w	r0, r9, r0
 8019fec:	f101 0901 	add.w	r9, r1, #1
 8019ff0:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 8019ff4:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8019ff8:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8019ffc:	ea40 0009 	orr.w	r0, r0, r9
 801a000:	f8ac 0000 	strh.w	r0, [ip]
 801a004:	4446      	add	r6, r8
 801a006:	b2b6      	uxth	r6, r6
 801a008:	2e07      	cmp	r6, #7
 801a00a:	bf81      	itttt	hi
 801a00c:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 801a00e:	785a      	ldrbhi	r2, [r3, #1]
 801a010:	3301      	addhi	r3, #1
 801a012:	9328      	strhi	r3, [sp, #160]	; 0xa0
 801a014:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801a016:	bf9a      	itte	ls
 801a018:	fa42 f208 	asrls.w	r2, r2, r8
 801a01c:	b2d2      	uxtbls	r2, r2
 801a01e:	2600      	movhi	r6, #0
 801a020:	449c      	add	ip, r3
 801a022:	e792      	b.n	8019f4a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 801a024:	441c      	add	r4, r3
 801a026:	b224      	sxth	r4, r4
 801a028:	e6d5      	b.n	8019dd6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801a02a:	f1ba 0f01 	cmp.w	sl, #1
 801a02e:	f47f af0c 	bne.w	8019e4a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801a032:	f1bb 0f01 	cmp.w	fp, #1
 801a036:	f47f af08 	bne.w	8019e4a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801a03a:	f8df b0c0 	ldr.w	fp, [pc, #192]	; 801a0fc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 801a03e:	f8db 0000 	ldr.w	r0, [fp]
 801a042:	6803      	ldr	r3, [r0, #0]
 801a044:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801a046:	4798      	blx	r3
 801a048:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 801a04c:	465a      	mov	r2, fp
 801a04e:	d006      	beq.n	801a05e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801a050:	f1b8 0f04 	cmp.w	r8, #4
 801a054:	d140      	bne.n	801a0d8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 801a056:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a058:	3300      	adds	r3, #0
 801a05a:	bf18      	it	ne
 801a05c:	2301      	movne	r3, #1
 801a05e:	0580      	lsls	r0, r0, #22
 801a060:	d56e      	bpl.n	801a140 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801a062:	f1b8 0f08 	cmp.w	r8, #8
 801a066:	d16b      	bne.n	801a140 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801a068:	2b00      	cmp	r3, #0
 801a06a:	bf0c      	ite	eq
 801a06c:	f44f 7100 	moveq.w	r1, #512	; 0x200
 801a070:	f44f 7180 	movne.w	r1, #256	; 0x100
 801a074:	2d00      	cmp	r5, #0
 801a076:	f47f aee8 	bne.w	8019e4a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801a07a:	2e00      	cmp	r6, #0
 801a07c:	f47f aee5 	bne.w	8019e4a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801a080:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801a082:	19e3      	adds	r3, r4, r7
 801a084:	4283      	cmp	r3, r0
 801a086:	f73f aee0 	bgt.w	8019e4a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801a08a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a08c:	980d      	ldr	r0, [sp, #52]	; 0x34
 801a08e:	444b      	add	r3, r9
 801a090:	4283      	cmp	r3, r0
 801a092:	f73f aeda 	bgt.w	8019e4a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801a096:	6810      	ldr	r0, [r2, #0]
 801a098:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 801a09c:	6804      	ldr	r4, [r0, #0]
 801a09e:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 801a0a2:	b2bf      	uxth	r7, r7
 801a0a4:	f1b8 0f08 	cmp.w	r8, #8
 801a0a8:	f04f 0500 	mov.w	r5, #0
 801a0ac:	bf18      	it	ne
 801a0ae:	3701      	addne	r7, #1
 801a0b0:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801a0b4:	990c      	ldr	r1, [sp, #48]	; 0x30
 801a0b6:	9104      	str	r1, [sp, #16]
 801a0b8:	bf18      	it	ne
 801a0ba:	f027 0701 	bicne.w	r7, r7, #1
 801a0be:	992a      	ldr	r1, [sp, #168]	; 0xa8
 801a0c0:	bf18      	it	ne
 801a0c2:	b2bf      	uxthne	r7, r7
 801a0c4:	e9cd 7102 	strd	r7, r1, [sp, #8]
 801a0c8:	e9cd 7900 	strd	r7, r9, [sp]
 801a0cc:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801a0ce:	6d64      	ldr	r4, [r4, #84]	; 0x54
 801a0d0:	47a0      	blx	r4
 801a0d2:	b019      	add	sp, #100	; 0x64
 801a0d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a0d8:	2300      	movs	r3, #0
 801a0da:	e7c0      	b.n	801a05e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801a0dc:	2208      	movs	r2, #8
 801a0de:	fb92 f3f8 	sdiv	r3, r2, r8
 801a0e2:	1e5a      	subs	r2, r3, #1
 801a0e4:	443a      	add	r2, r7
 801a0e6:	fb92 f2f3 	sdiv	r2, r2, r3
 801a0ea:	fb12 f203 	smulbb	r2, r2, r3
 801a0ee:	b292      	uxth	r2, r2
 801a0f0:	e6b0      	b.n	8019e54 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 801a0f2:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801a0f4:	e6ec      	b.n	8019ed0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 801a0f6:	bf00      	nop
 801a0f8:	20017944 	.word	0x20017944
 801a0fc:	2001794c 	.word	0x2001794c
 801a100:	20017946 	.word	0x20017946
 801a104:	00fff800 	.word	0x00fff800
 801a108:	9810      	ldr	r0, [sp, #64]	; 0x40
 801a10a:	e779      	b.n	801a000 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 801a10c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801a10e:	b153      	cbz	r3, 801a126 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 801a110:	441e      	add	r6, r3
 801a112:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801a114:	b2b6      	uxth	r6, r6
 801a116:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 801a11a:	f006 0607 	and.w	r6, r6, #7
 801a11e:	781a      	ldrb	r2, [r3, #0]
 801a120:	9328      	str	r3, [sp, #160]	; 0xa0
 801a122:	4132      	asrs	r2, r6
 801a124:	b2d2      	uxtb	r2, r2
 801a126:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a128:	445b      	add	r3, fp
 801a12a:	930a      	str	r3, [sp, #40]	; 0x28
 801a12c:	e706      	b.n	8019f3c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 801a12e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a130:	2b00      	cmp	r3, #0
 801a132:	d1ce      	bne.n	801a0d2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801a134:	4b05      	ldr	r3, [pc, #20]	; (801a14c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 801a136:	6818      	ldr	r0, [r3, #0]
 801a138:	6803      	ldr	r3, [r0, #0]
 801a13a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801a13c:	4798      	blx	r3
 801a13e:	e7c8      	b.n	801a0d2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801a140:	2b00      	cmp	r3, #0
 801a142:	f43f ae82 	beq.w	8019e4a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801a146:	f44f 7180 	mov.w	r1, #256	; 0x100
 801a14a:	e793      	b.n	801a074 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 801a14c:	2001794c 	.word	0x2001794c

0801a150 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 801a150:	b538      	push	{r3, r4, r5, lr}
 801a152:	4c15      	ldr	r4, [pc, #84]	; (801a1a8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 801a154:	7823      	ldrb	r3, [r4, #0]
 801a156:	f3bf 8f5b 	dmb	ish
 801a15a:	07da      	lsls	r2, r3, #31
 801a15c:	4605      	mov	r5, r0
 801a15e:	d40b      	bmi.n	801a178 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801a160:	4620      	mov	r0, r4
 801a162:	f007 fd73 	bl	8021c4c <__cxa_guard_acquire>
 801a166:	b138      	cbz	r0, 801a178 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801a168:	4620      	mov	r0, r4
 801a16a:	f007 fd7b 	bl	8021c64 <__cxa_guard_release>
 801a16e:	4a0f      	ldr	r2, [pc, #60]	; (801a1ac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801a170:	490f      	ldr	r1, [pc, #60]	; (801a1b0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 801a172:	4810      	ldr	r0, [pc, #64]	; (801a1b4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801a174:	f007 fd63 	bl	8021c3e <__aeabi_atexit>
 801a178:	4c0f      	ldr	r4, [pc, #60]	; (801a1b8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 801a17a:	7823      	ldrb	r3, [r4, #0]
 801a17c:	f3bf 8f5b 	dmb	ish
 801a180:	07db      	lsls	r3, r3, #31
 801a182:	d40b      	bmi.n	801a19c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801a184:	4620      	mov	r0, r4
 801a186:	f007 fd61 	bl	8021c4c <__cxa_guard_acquire>
 801a18a:	b138      	cbz	r0, 801a19c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801a18c:	4620      	mov	r0, r4
 801a18e:	f007 fd69 	bl	8021c64 <__cxa_guard_release>
 801a192:	4a06      	ldr	r2, [pc, #24]	; (801a1ac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801a194:	4909      	ldr	r1, [pc, #36]	; (801a1bc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 801a196:	480a      	ldr	r0, [pc, #40]	; (801a1c0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801a198:	f007 fd51 	bl	8021c3e <__aeabi_atexit>
 801a19c:	4b05      	ldr	r3, [pc, #20]	; (801a1b4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801a19e:	612b      	str	r3, [r5, #16]
 801a1a0:	4b07      	ldr	r3, [pc, #28]	; (801a1c0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801a1a2:	616b      	str	r3, [r5, #20]
 801a1a4:	bd38      	pop	{r3, r4, r5, pc}
 801a1a6:	bf00      	nop
 801a1a8:	20017a20 	.word	0x20017a20
 801a1ac:	20000000 	.word	0x20000000
 801a1b0:	08018361 	.word	0x08018361
 801a1b4:	200000cc 	.word	0x200000cc
 801a1b8:	20017a24 	.word	0x20017a24
 801a1bc:	0801835f 	.word	0x0801835f
 801a1c0:	200000d0 	.word	0x200000d0

0801a1c4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 801a1c4:	b538      	push	{r3, r4, r5, lr}
 801a1c6:	4c15      	ldr	r4, [pc, #84]	; (801a21c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 801a1c8:	7823      	ldrb	r3, [r4, #0]
 801a1ca:	f3bf 8f5b 	dmb	ish
 801a1ce:	07da      	lsls	r2, r3, #31
 801a1d0:	4605      	mov	r5, r0
 801a1d2:	d40b      	bmi.n	801a1ec <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801a1d4:	4620      	mov	r0, r4
 801a1d6:	f007 fd39 	bl	8021c4c <__cxa_guard_acquire>
 801a1da:	b138      	cbz	r0, 801a1ec <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801a1dc:	4620      	mov	r0, r4
 801a1de:	f007 fd41 	bl	8021c64 <__cxa_guard_release>
 801a1e2:	4a0f      	ldr	r2, [pc, #60]	; (801a220 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801a1e4:	490f      	ldr	r1, [pc, #60]	; (801a224 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 801a1e6:	4810      	ldr	r0, [pc, #64]	; (801a228 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801a1e8:	f007 fd29 	bl	8021c3e <__aeabi_atexit>
 801a1ec:	4c0f      	ldr	r4, [pc, #60]	; (801a22c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 801a1ee:	7823      	ldrb	r3, [r4, #0]
 801a1f0:	f3bf 8f5b 	dmb	ish
 801a1f4:	07db      	lsls	r3, r3, #31
 801a1f6:	d40b      	bmi.n	801a210 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801a1f8:	4620      	mov	r0, r4
 801a1fa:	f007 fd27 	bl	8021c4c <__cxa_guard_acquire>
 801a1fe:	b138      	cbz	r0, 801a210 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801a200:	4620      	mov	r0, r4
 801a202:	f007 fd2f 	bl	8021c64 <__cxa_guard_release>
 801a206:	4a06      	ldr	r2, [pc, #24]	; (801a220 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801a208:	4909      	ldr	r1, [pc, #36]	; (801a230 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 801a20a:	480a      	ldr	r0, [pc, #40]	; (801a234 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801a20c:	f007 fd17 	bl	8021c3e <__aeabi_atexit>
 801a210:	4b05      	ldr	r3, [pc, #20]	; (801a228 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801a212:	60ab      	str	r3, [r5, #8]
 801a214:	4b07      	ldr	r3, [pc, #28]	; (801a234 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801a216:	60eb      	str	r3, [r5, #12]
 801a218:	bd38      	pop	{r3, r4, r5, pc}
 801a21a:	bf00      	nop
 801a21c:	200179f8 	.word	0x200179f8
 801a220:	20000000 	.word	0x20000000
 801a224:	08018365 	.word	0x08018365
 801a228:	200000a4 	.word	0x200000a4
 801a22c:	200179fc 	.word	0x200179fc
 801a230:	08018363 	.word	0x08018363
 801a234:	200000a8 	.word	0x200000a8

0801a238 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 801a238:	b510      	push	{r4, lr}
 801a23a:	4604      	mov	r4, r0
 801a23c:	f7ff ff88 	bl	801a150 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 801a240:	4620      	mov	r0, r4
 801a242:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801a246:	f7ff bfbd 	b.w	801a1c4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

0801a24c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 801a24c:	b538      	push	{r3, r4, r5, lr}
 801a24e:	4c15      	ldr	r4, [pc, #84]	; (801a2a4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 801a250:	7823      	ldrb	r3, [r4, #0]
 801a252:	f3bf 8f5b 	dmb	ish
 801a256:	07da      	lsls	r2, r3, #31
 801a258:	4605      	mov	r5, r0
 801a25a:	d40b      	bmi.n	801a274 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801a25c:	4620      	mov	r0, r4
 801a25e:	f007 fcf5 	bl	8021c4c <__cxa_guard_acquire>
 801a262:	b138      	cbz	r0, 801a274 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801a264:	4620      	mov	r0, r4
 801a266:	f007 fcfd 	bl	8021c64 <__cxa_guard_release>
 801a26a:	4a0f      	ldr	r2, [pc, #60]	; (801a2a8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801a26c:	490f      	ldr	r1, [pc, #60]	; (801a2ac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 801a26e:	4810      	ldr	r0, [pc, #64]	; (801a2b0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801a270:	f007 fce5 	bl	8021c3e <__aeabi_atexit>
 801a274:	4c0f      	ldr	r4, [pc, #60]	; (801a2b4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 801a276:	7823      	ldrb	r3, [r4, #0]
 801a278:	f3bf 8f5b 	dmb	ish
 801a27c:	07db      	lsls	r3, r3, #31
 801a27e:	d40b      	bmi.n	801a298 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801a280:	4620      	mov	r0, r4
 801a282:	f007 fce3 	bl	8021c4c <__cxa_guard_acquire>
 801a286:	b138      	cbz	r0, 801a298 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801a288:	4620      	mov	r0, r4
 801a28a:	f007 fceb 	bl	8021c64 <__cxa_guard_release>
 801a28e:	4a06      	ldr	r2, [pc, #24]	; (801a2a8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801a290:	4909      	ldr	r1, [pc, #36]	; (801a2b8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 801a292:	480a      	ldr	r0, [pc, #40]	; (801a2bc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801a294:	f007 fcd3 	bl	8021c3e <__aeabi_atexit>
 801a298:	4b05      	ldr	r3, [pc, #20]	; (801a2b0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801a29a:	622b      	str	r3, [r5, #32]
 801a29c:	4b07      	ldr	r3, [pc, #28]	; (801a2bc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801a29e:	626b      	str	r3, [r5, #36]	; 0x24
 801a2a0:	bd38      	pop	{r3, r4, r5, pc}
 801a2a2:	bf00      	nop
 801a2a4:	20017a28 	.word	0x20017a28
 801a2a8:	20000000 	.word	0x20000000
 801a2ac:	08018359 	.word	0x08018359
 801a2b0:	200000d4 	.word	0x200000d4
 801a2b4:	20017a2c 	.word	0x20017a2c
 801a2b8:	08018357 	.word	0x08018357
 801a2bc:	200000d8 	.word	0x200000d8

0801a2c0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 801a2c0:	b538      	push	{r3, r4, r5, lr}
 801a2c2:	4c15      	ldr	r4, [pc, #84]	; (801a318 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 801a2c4:	7823      	ldrb	r3, [r4, #0]
 801a2c6:	f3bf 8f5b 	dmb	ish
 801a2ca:	07da      	lsls	r2, r3, #31
 801a2cc:	4605      	mov	r5, r0
 801a2ce:	d40b      	bmi.n	801a2e8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801a2d0:	4620      	mov	r0, r4
 801a2d2:	f007 fcbb 	bl	8021c4c <__cxa_guard_acquire>
 801a2d6:	b138      	cbz	r0, 801a2e8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801a2d8:	4620      	mov	r0, r4
 801a2da:	f007 fcc3 	bl	8021c64 <__cxa_guard_release>
 801a2de:	4a0f      	ldr	r2, [pc, #60]	; (801a31c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801a2e0:	490f      	ldr	r1, [pc, #60]	; (801a320 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 801a2e2:	4810      	ldr	r0, [pc, #64]	; (801a324 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801a2e4:	f007 fcab 	bl	8021c3e <__aeabi_atexit>
 801a2e8:	4c0f      	ldr	r4, [pc, #60]	; (801a328 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 801a2ea:	7823      	ldrb	r3, [r4, #0]
 801a2ec:	f3bf 8f5b 	dmb	ish
 801a2f0:	07db      	lsls	r3, r3, #31
 801a2f2:	d40b      	bmi.n	801a30c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801a2f4:	4620      	mov	r0, r4
 801a2f6:	f007 fca9 	bl	8021c4c <__cxa_guard_acquire>
 801a2fa:	b138      	cbz	r0, 801a30c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801a2fc:	4620      	mov	r0, r4
 801a2fe:	f007 fcb1 	bl	8021c64 <__cxa_guard_release>
 801a302:	4a06      	ldr	r2, [pc, #24]	; (801a31c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801a304:	4909      	ldr	r1, [pc, #36]	; (801a32c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 801a306:	480a      	ldr	r0, [pc, #40]	; (801a330 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801a308:	f007 fc99 	bl	8021c3e <__aeabi_atexit>
 801a30c:	4b05      	ldr	r3, [pc, #20]	; (801a324 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801a30e:	61ab      	str	r3, [r5, #24]
 801a310:	4b07      	ldr	r3, [pc, #28]	; (801a330 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801a312:	61eb      	str	r3, [r5, #28]
 801a314:	bd38      	pop	{r3, r4, r5, pc}
 801a316:	bf00      	nop
 801a318:	20017a00 	.word	0x20017a00
 801a31c:	20000000 	.word	0x20000000
 801a320:	0801835d 	.word	0x0801835d
 801a324:	200000ac 	.word	0x200000ac
 801a328:	20017a04 	.word	0x20017a04
 801a32c:	0801835b 	.word	0x0801835b
 801a330:	200000b0 	.word	0x200000b0

0801a334 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 801a334:	b510      	push	{r4, lr}
 801a336:	4604      	mov	r4, r0
 801a338:	f7ff ff88 	bl	801a24c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 801a33c:	4620      	mov	r0, r4
 801a33e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801a342:	f7ff bfbd 	b.w	801a2c0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

0801a348 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 801a348:	b538      	push	{r3, r4, r5, lr}
 801a34a:	4c15      	ldr	r4, [pc, #84]	; (801a3a0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 801a34c:	7823      	ldrb	r3, [r4, #0]
 801a34e:	f3bf 8f5b 	dmb	ish
 801a352:	07da      	lsls	r2, r3, #31
 801a354:	4605      	mov	r5, r0
 801a356:	d40b      	bmi.n	801a370 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801a358:	4620      	mov	r0, r4
 801a35a:	f007 fc77 	bl	8021c4c <__cxa_guard_acquire>
 801a35e:	b138      	cbz	r0, 801a370 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801a360:	4620      	mov	r0, r4
 801a362:	f007 fc7f 	bl	8021c64 <__cxa_guard_release>
 801a366:	4a0f      	ldr	r2, [pc, #60]	; (801a3a4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801a368:	490f      	ldr	r1, [pc, #60]	; (801a3a8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 801a36a:	4810      	ldr	r0, [pc, #64]	; (801a3ac <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801a36c:	f007 fc67 	bl	8021c3e <__aeabi_atexit>
 801a370:	4c0f      	ldr	r4, [pc, #60]	; (801a3b0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 801a372:	7823      	ldrb	r3, [r4, #0]
 801a374:	f3bf 8f5b 	dmb	ish
 801a378:	07db      	lsls	r3, r3, #31
 801a37a:	d40b      	bmi.n	801a394 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801a37c:	4620      	mov	r0, r4
 801a37e:	f007 fc65 	bl	8021c4c <__cxa_guard_acquire>
 801a382:	b138      	cbz	r0, 801a394 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801a384:	4620      	mov	r0, r4
 801a386:	f007 fc6d 	bl	8021c64 <__cxa_guard_release>
 801a38a:	4a06      	ldr	r2, [pc, #24]	; (801a3a4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801a38c:	4909      	ldr	r1, [pc, #36]	; (801a3b4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 801a38e:	480a      	ldr	r0, [pc, #40]	; (801a3b8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801a390:	f007 fc55 	bl	8021c3e <__aeabi_atexit>
 801a394:	4b05      	ldr	r3, [pc, #20]	; (801a3ac <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801a396:	632b      	str	r3, [r5, #48]	; 0x30
 801a398:	4b07      	ldr	r3, [pc, #28]	; (801a3b8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801a39a:	636b      	str	r3, [r5, #52]	; 0x34
 801a39c:	bd38      	pop	{r3, r4, r5, pc}
 801a39e:	bf00      	nop
 801a3a0:	20017a38 	.word	0x20017a38
 801a3a4:	20000000 	.word	0x20000000
 801a3a8:	08018351 	.word	0x08018351
 801a3ac:	200000e4 	.word	0x200000e4
 801a3b0:	20017a3c 	.word	0x20017a3c
 801a3b4:	0801834f 	.word	0x0801834f
 801a3b8:	200000e8 	.word	0x200000e8

0801a3bc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 801a3bc:	b538      	push	{r3, r4, r5, lr}
 801a3be:	4c15      	ldr	r4, [pc, #84]	; (801a414 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 801a3c0:	7823      	ldrb	r3, [r4, #0]
 801a3c2:	f3bf 8f5b 	dmb	ish
 801a3c6:	07da      	lsls	r2, r3, #31
 801a3c8:	4605      	mov	r5, r0
 801a3ca:	d40b      	bmi.n	801a3e4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801a3cc:	4620      	mov	r0, r4
 801a3ce:	f007 fc3d 	bl	8021c4c <__cxa_guard_acquire>
 801a3d2:	b138      	cbz	r0, 801a3e4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801a3d4:	4620      	mov	r0, r4
 801a3d6:	f007 fc45 	bl	8021c64 <__cxa_guard_release>
 801a3da:	4a0f      	ldr	r2, [pc, #60]	; (801a418 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801a3dc:	490f      	ldr	r1, [pc, #60]	; (801a41c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 801a3de:	4810      	ldr	r0, [pc, #64]	; (801a420 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801a3e0:	f007 fc2d 	bl	8021c3e <__aeabi_atexit>
 801a3e4:	4c0f      	ldr	r4, [pc, #60]	; (801a424 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 801a3e6:	7823      	ldrb	r3, [r4, #0]
 801a3e8:	f3bf 8f5b 	dmb	ish
 801a3ec:	07db      	lsls	r3, r3, #31
 801a3ee:	d40b      	bmi.n	801a408 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801a3f0:	4620      	mov	r0, r4
 801a3f2:	f007 fc2b 	bl	8021c4c <__cxa_guard_acquire>
 801a3f6:	b138      	cbz	r0, 801a408 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801a3f8:	4620      	mov	r0, r4
 801a3fa:	f007 fc33 	bl	8021c64 <__cxa_guard_release>
 801a3fe:	4a06      	ldr	r2, [pc, #24]	; (801a418 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801a400:	4909      	ldr	r1, [pc, #36]	; (801a428 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 801a402:	480a      	ldr	r0, [pc, #40]	; (801a42c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801a404:	f007 fc1b 	bl	8021c3e <__aeabi_atexit>
 801a408:	4b05      	ldr	r3, [pc, #20]	; (801a420 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801a40a:	62ab      	str	r3, [r5, #40]	; 0x28
 801a40c:	4b07      	ldr	r3, [pc, #28]	; (801a42c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801a40e:	62eb      	str	r3, [r5, #44]	; 0x2c
 801a410:	bd38      	pop	{r3, r4, r5, pc}
 801a412:	bf00      	nop
 801a414:	20017a08 	.word	0x20017a08
 801a418:	20000000 	.word	0x20000000
 801a41c:	08018355 	.word	0x08018355
 801a420:	200000b4 	.word	0x200000b4
 801a424:	20017a0c 	.word	0x20017a0c
 801a428:	08018353 	.word	0x08018353
 801a42c:	200000b8 	.word	0x200000b8

0801a430 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 801a430:	b510      	push	{r4, lr}
 801a432:	4604      	mov	r4, r0
 801a434:	f7ff ff88 	bl	801a348 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 801a438:	4620      	mov	r0, r4
 801a43a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801a43e:	f7ff bfbd 	b.w	801a3bc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

0801a444 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 801a444:	b538      	push	{r3, r4, r5, lr}
 801a446:	4c15      	ldr	r4, [pc, #84]	; (801a49c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 801a448:	7823      	ldrb	r3, [r4, #0]
 801a44a:	f3bf 8f5b 	dmb	ish
 801a44e:	07da      	lsls	r2, r3, #31
 801a450:	4605      	mov	r5, r0
 801a452:	d40b      	bmi.n	801a46c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801a454:	4620      	mov	r0, r4
 801a456:	f007 fbf9 	bl	8021c4c <__cxa_guard_acquire>
 801a45a:	b138      	cbz	r0, 801a46c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801a45c:	4620      	mov	r0, r4
 801a45e:	f007 fc01 	bl	8021c64 <__cxa_guard_release>
 801a462:	4a0f      	ldr	r2, [pc, #60]	; (801a4a0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801a464:	490f      	ldr	r1, [pc, #60]	; (801a4a4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 801a466:	4810      	ldr	r0, [pc, #64]	; (801a4a8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801a468:	f007 fbe9 	bl	8021c3e <__aeabi_atexit>
 801a46c:	4c0f      	ldr	r4, [pc, #60]	; (801a4ac <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 801a46e:	7823      	ldrb	r3, [r4, #0]
 801a470:	f3bf 8f5b 	dmb	ish
 801a474:	07db      	lsls	r3, r3, #31
 801a476:	d40b      	bmi.n	801a490 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801a478:	4620      	mov	r0, r4
 801a47a:	f007 fbe7 	bl	8021c4c <__cxa_guard_acquire>
 801a47e:	b138      	cbz	r0, 801a490 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801a480:	4620      	mov	r0, r4
 801a482:	f007 fbef 	bl	8021c64 <__cxa_guard_release>
 801a486:	4a06      	ldr	r2, [pc, #24]	; (801a4a0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801a488:	4909      	ldr	r1, [pc, #36]	; (801a4b0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 801a48a:	480a      	ldr	r0, [pc, #40]	; (801a4b4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801a48c:	f007 fbd7 	bl	8021c3e <__aeabi_atexit>
 801a490:	4b05      	ldr	r3, [pc, #20]	; (801a4a8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801a492:	652b      	str	r3, [r5, #80]	; 0x50
 801a494:	4b07      	ldr	r3, [pc, #28]	; (801a4b4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801a496:	656b      	str	r3, [r5, #84]	; 0x54
 801a498:	bd38      	pop	{r3, r4, r5, pc}
 801a49a:	bf00      	nop
 801a49c:	20017a40 	.word	0x20017a40
 801a4a0:	20000000 	.word	0x20000000
 801a4a4:	08018341 	.word	0x08018341
 801a4a8:	200000ec 	.word	0x200000ec
 801a4ac:	20017a44 	.word	0x20017a44
 801a4b0:	0801833f 	.word	0x0801833f
 801a4b4:	200000f0 	.word	0x200000f0

0801a4b8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 801a4b8:	b538      	push	{r3, r4, r5, lr}
 801a4ba:	4c15      	ldr	r4, [pc, #84]	; (801a510 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 801a4bc:	7823      	ldrb	r3, [r4, #0]
 801a4be:	f3bf 8f5b 	dmb	ish
 801a4c2:	07da      	lsls	r2, r3, #31
 801a4c4:	4605      	mov	r5, r0
 801a4c6:	d40b      	bmi.n	801a4e0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801a4c8:	4620      	mov	r0, r4
 801a4ca:	f007 fbbf 	bl	8021c4c <__cxa_guard_acquire>
 801a4ce:	b138      	cbz	r0, 801a4e0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801a4d0:	4620      	mov	r0, r4
 801a4d2:	f007 fbc7 	bl	8021c64 <__cxa_guard_release>
 801a4d6:	4a0f      	ldr	r2, [pc, #60]	; (801a514 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801a4d8:	490f      	ldr	r1, [pc, #60]	; (801a518 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 801a4da:	4810      	ldr	r0, [pc, #64]	; (801a51c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801a4dc:	f007 fbaf 	bl	8021c3e <__aeabi_atexit>
 801a4e0:	4c0f      	ldr	r4, [pc, #60]	; (801a520 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 801a4e2:	7823      	ldrb	r3, [r4, #0]
 801a4e4:	f3bf 8f5b 	dmb	ish
 801a4e8:	07db      	lsls	r3, r3, #31
 801a4ea:	d40b      	bmi.n	801a504 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801a4ec:	4620      	mov	r0, r4
 801a4ee:	f007 fbad 	bl	8021c4c <__cxa_guard_acquire>
 801a4f2:	b138      	cbz	r0, 801a504 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801a4f4:	4620      	mov	r0, r4
 801a4f6:	f007 fbb5 	bl	8021c64 <__cxa_guard_release>
 801a4fa:	4a06      	ldr	r2, [pc, #24]	; (801a514 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801a4fc:	4909      	ldr	r1, [pc, #36]	; (801a524 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 801a4fe:	480a      	ldr	r0, [pc, #40]	; (801a528 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801a500:	f007 fb9d 	bl	8021c3e <__aeabi_atexit>
 801a504:	4b05      	ldr	r3, [pc, #20]	; (801a51c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801a506:	64ab      	str	r3, [r5, #72]	; 0x48
 801a508:	4b07      	ldr	r3, [pc, #28]	; (801a528 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801a50a:	64eb      	str	r3, [r5, #76]	; 0x4c
 801a50c:	bd38      	pop	{r3, r4, r5, pc}
 801a50e:	bf00      	nop
 801a510:	20017a48 	.word	0x20017a48
 801a514:	20000000 	.word	0x20000000
 801a518:	08018345 	.word	0x08018345
 801a51c:	200000f4 	.word	0x200000f4
 801a520:	20017a4c 	.word	0x20017a4c
 801a524:	08018343 	.word	0x08018343
 801a528:	200000f8 	.word	0x200000f8

0801a52c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 801a52c:	b538      	push	{r3, r4, r5, lr}
 801a52e:	4c15      	ldr	r4, [pc, #84]	; (801a584 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 801a530:	7823      	ldrb	r3, [r4, #0]
 801a532:	f3bf 8f5b 	dmb	ish
 801a536:	07da      	lsls	r2, r3, #31
 801a538:	4605      	mov	r5, r0
 801a53a:	d40b      	bmi.n	801a554 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801a53c:	4620      	mov	r0, r4
 801a53e:	f007 fb85 	bl	8021c4c <__cxa_guard_acquire>
 801a542:	b138      	cbz	r0, 801a554 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801a544:	4620      	mov	r0, r4
 801a546:	f007 fb8d 	bl	8021c64 <__cxa_guard_release>
 801a54a:	4a0f      	ldr	r2, [pc, #60]	; (801a588 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801a54c:	490f      	ldr	r1, [pc, #60]	; (801a58c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 801a54e:	4810      	ldr	r0, [pc, #64]	; (801a590 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801a550:	f007 fb75 	bl	8021c3e <__aeabi_atexit>
 801a554:	4c0f      	ldr	r4, [pc, #60]	; (801a594 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 801a556:	7823      	ldrb	r3, [r4, #0]
 801a558:	f3bf 8f5b 	dmb	ish
 801a55c:	07db      	lsls	r3, r3, #31
 801a55e:	d40b      	bmi.n	801a578 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801a560:	4620      	mov	r0, r4
 801a562:	f007 fb73 	bl	8021c4c <__cxa_guard_acquire>
 801a566:	b138      	cbz	r0, 801a578 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801a568:	4620      	mov	r0, r4
 801a56a:	f007 fb7b 	bl	8021c64 <__cxa_guard_release>
 801a56e:	4a06      	ldr	r2, [pc, #24]	; (801a588 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801a570:	4909      	ldr	r1, [pc, #36]	; (801a598 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 801a572:	480a      	ldr	r0, [pc, #40]	; (801a59c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801a574:	f007 fb63 	bl	8021c3e <__aeabi_atexit>
 801a578:	4b05      	ldr	r3, [pc, #20]	; (801a590 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801a57a:	642b      	str	r3, [r5, #64]	; 0x40
 801a57c:	4b07      	ldr	r3, [pc, #28]	; (801a59c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801a57e:	646b      	str	r3, [r5, #68]	; 0x44
 801a580:	bd38      	pop	{r3, r4, r5, pc}
 801a582:	bf00      	nop
 801a584:	20017a10 	.word	0x20017a10
 801a588:	20000000 	.word	0x20000000
 801a58c:	08018349 	.word	0x08018349
 801a590:	200000bc 	.word	0x200000bc
 801a594:	20017a14 	.word	0x20017a14
 801a598:	08018347 	.word	0x08018347
 801a59c:	200000c0 	.word	0x200000c0

0801a5a0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 801a5a0:	b538      	push	{r3, r4, r5, lr}
 801a5a2:	4c15      	ldr	r4, [pc, #84]	; (801a5f8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 801a5a4:	7823      	ldrb	r3, [r4, #0]
 801a5a6:	f3bf 8f5b 	dmb	ish
 801a5aa:	07da      	lsls	r2, r3, #31
 801a5ac:	4605      	mov	r5, r0
 801a5ae:	d40b      	bmi.n	801a5c8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801a5b0:	4620      	mov	r0, r4
 801a5b2:	f007 fb4b 	bl	8021c4c <__cxa_guard_acquire>
 801a5b6:	b138      	cbz	r0, 801a5c8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801a5b8:	4620      	mov	r0, r4
 801a5ba:	f007 fb53 	bl	8021c64 <__cxa_guard_release>
 801a5be:	4a0f      	ldr	r2, [pc, #60]	; (801a5fc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801a5c0:	490f      	ldr	r1, [pc, #60]	; (801a600 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 801a5c2:	4810      	ldr	r0, [pc, #64]	; (801a604 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801a5c4:	f007 fb3b 	bl	8021c3e <__aeabi_atexit>
 801a5c8:	4c0f      	ldr	r4, [pc, #60]	; (801a608 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 801a5ca:	7823      	ldrb	r3, [r4, #0]
 801a5cc:	f3bf 8f5b 	dmb	ish
 801a5d0:	07db      	lsls	r3, r3, #31
 801a5d2:	d40b      	bmi.n	801a5ec <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801a5d4:	4620      	mov	r0, r4
 801a5d6:	f007 fb39 	bl	8021c4c <__cxa_guard_acquire>
 801a5da:	b138      	cbz	r0, 801a5ec <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801a5dc:	4620      	mov	r0, r4
 801a5de:	f007 fb41 	bl	8021c64 <__cxa_guard_release>
 801a5e2:	4a06      	ldr	r2, [pc, #24]	; (801a5fc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801a5e4:	4909      	ldr	r1, [pc, #36]	; (801a60c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 801a5e6:	480a      	ldr	r0, [pc, #40]	; (801a610 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801a5e8:	f007 fb29 	bl	8021c3e <__aeabi_atexit>
 801a5ec:	4b05      	ldr	r3, [pc, #20]	; (801a604 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801a5ee:	63ab      	str	r3, [r5, #56]	; 0x38
 801a5f0:	4b07      	ldr	r3, [pc, #28]	; (801a610 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801a5f2:	63eb      	str	r3, [r5, #60]	; 0x3c
 801a5f4:	bd38      	pop	{r3, r4, r5, pc}
 801a5f6:	bf00      	nop
 801a5f8:	20017a30 	.word	0x20017a30
 801a5fc:	20000000 	.word	0x20000000
 801a600:	0801834d 	.word	0x0801834d
 801a604:	200000dc 	.word	0x200000dc
 801a608:	20017a34 	.word	0x20017a34
 801a60c:	0801834b 	.word	0x0801834b
 801a610:	200000e0 	.word	0x200000e0

0801a614 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 801a614:	b510      	push	{r4, lr}
 801a616:	4604      	mov	r4, r0
 801a618:	f7ff ff14 	bl	801a444 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 801a61c:	4620      	mov	r0, r4
 801a61e:	f7ff ff85 	bl	801a52c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 801a622:	4620      	mov	r0, r4
 801a624:	f7ff ff48 	bl	801a4b8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 801a628:	4620      	mov	r0, r4
 801a62a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801a62e:	f7ff bfb7 	b.w	801a5a0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

0801a634 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 801a634:	b538      	push	{r3, r4, r5, lr}
 801a636:	4c15      	ldr	r4, [pc, #84]	; (801a68c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 801a638:	7823      	ldrb	r3, [r4, #0]
 801a63a:	f3bf 8f5b 	dmb	ish
 801a63e:	07da      	lsls	r2, r3, #31
 801a640:	4605      	mov	r5, r0
 801a642:	d40b      	bmi.n	801a65c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801a644:	4620      	mov	r0, r4
 801a646:	f007 fb01 	bl	8021c4c <__cxa_guard_acquire>
 801a64a:	b138      	cbz	r0, 801a65c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801a64c:	4620      	mov	r0, r4
 801a64e:	f007 fb09 	bl	8021c64 <__cxa_guard_release>
 801a652:	4a0f      	ldr	r2, [pc, #60]	; (801a690 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801a654:	490f      	ldr	r1, [pc, #60]	; (801a694 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 801a656:	4810      	ldr	r0, [pc, #64]	; (801a698 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801a658:	f007 faf1 	bl	8021c3e <__aeabi_atexit>
 801a65c:	4c0f      	ldr	r4, [pc, #60]	; (801a69c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 801a65e:	7823      	ldrb	r3, [r4, #0]
 801a660:	f3bf 8f5b 	dmb	ish
 801a664:	07db      	lsls	r3, r3, #31
 801a666:	d40b      	bmi.n	801a680 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801a668:	4620      	mov	r0, r4
 801a66a:	f007 faef 	bl	8021c4c <__cxa_guard_acquire>
 801a66e:	b138      	cbz	r0, 801a680 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801a670:	4620      	mov	r0, r4
 801a672:	f007 faf7 	bl	8021c64 <__cxa_guard_release>
 801a676:	4a06      	ldr	r2, [pc, #24]	; (801a690 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801a678:	4909      	ldr	r1, [pc, #36]	; (801a6a0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 801a67a:	480a      	ldr	r0, [pc, #40]	; (801a6a4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801a67c:	f007 fadf 	bl	8021c3e <__aeabi_atexit>
 801a680:	4b05      	ldr	r3, [pc, #20]	; (801a698 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801a682:	662b      	str	r3, [r5, #96]	; 0x60
 801a684:	4b07      	ldr	r3, [pc, #28]	; (801a6a4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801a686:	666b      	str	r3, [r5, #100]	; 0x64
 801a688:	bd38      	pop	{r3, r4, r5, pc}
 801a68a:	bf00      	nop
 801a68c:	20017a18 	.word	0x20017a18
 801a690:	20000000 	.word	0x20000000
 801a694:	08018339 	.word	0x08018339
 801a698:	200000c4 	.word	0x200000c4
 801a69c:	20017a1c 	.word	0x20017a1c
 801a6a0:	08018337 	.word	0x08018337
 801a6a4:	200000c8 	.word	0x200000c8

0801a6a8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 801a6a8:	b538      	push	{r3, r4, r5, lr}
 801a6aa:	4c15      	ldr	r4, [pc, #84]	; (801a700 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 801a6ac:	7823      	ldrb	r3, [r4, #0]
 801a6ae:	f3bf 8f5b 	dmb	ish
 801a6b2:	07da      	lsls	r2, r3, #31
 801a6b4:	4605      	mov	r5, r0
 801a6b6:	d40b      	bmi.n	801a6d0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801a6b8:	4620      	mov	r0, r4
 801a6ba:	f007 fac7 	bl	8021c4c <__cxa_guard_acquire>
 801a6be:	b138      	cbz	r0, 801a6d0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801a6c0:	4620      	mov	r0, r4
 801a6c2:	f007 facf 	bl	8021c64 <__cxa_guard_release>
 801a6c6:	4a0f      	ldr	r2, [pc, #60]	; (801a704 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801a6c8:	490f      	ldr	r1, [pc, #60]	; (801a708 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 801a6ca:	4810      	ldr	r0, [pc, #64]	; (801a70c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801a6cc:	f007 fab7 	bl	8021c3e <__aeabi_atexit>
 801a6d0:	4c0f      	ldr	r4, [pc, #60]	; (801a710 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 801a6d2:	7823      	ldrb	r3, [r4, #0]
 801a6d4:	f3bf 8f5b 	dmb	ish
 801a6d8:	07db      	lsls	r3, r3, #31
 801a6da:	d40b      	bmi.n	801a6f4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801a6dc:	4620      	mov	r0, r4
 801a6de:	f007 fab5 	bl	8021c4c <__cxa_guard_acquire>
 801a6e2:	b138      	cbz	r0, 801a6f4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801a6e4:	4620      	mov	r0, r4
 801a6e6:	f007 fabd 	bl	8021c64 <__cxa_guard_release>
 801a6ea:	4a06      	ldr	r2, [pc, #24]	; (801a704 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801a6ec:	4909      	ldr	r1, [pc, #36]	; (801a714 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 801a6ee:	480a      	ldr	r0, [pc, #40]	; (801a718 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801a6f0:	f007 faa5 	bl	8021c3e <__aeabi_atexit>
 801a6f4:	4b05      	ldr	r3, [pc, #20]	; (801a70c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801a6f6:	65ab      	str	r3, [r5, #88]	; 0x58
 801a6f8:	4b07      	ldr	r3, [pc, #28]	; (801a718 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801a6fa:	65eb      	str	r3, [r5, #92]	; 0x5c
 801a6fc:	bd38      	pop	{r3, r4, r5, pc}
 801a6fe:	bf00      	nop
 801a700:	200179f0 	.word	0x200179f0
 801a704:	20000000 	.word	0x20000000
 801a708:	0801833d 	.word	0x0801833d
 801a70c:	2000009c 	.word	0x2000009c
 801a710:	200179f4 	.word	0x200179f4
 801a714:	0801833b 	.word	0x0801833b
 801a718:	200000a0 	.word	0x200000a0

0801a71c <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 801a71c:	b510      	push	{r4, lr}
 801a71e:	4604      	mov	r4, r0
 801a720:	f7ff ff88 	bl	801a634 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 801a724:	4620      	mov	r0, r4
 801a726:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801a72a:	f7ff bfbd 	b.w	801a6a8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

0801a730 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 801a730:	b538      	push	{r3, r4, r5, lr}
 801a732:	4c15      	ldr	r4, [pc, #84]	; (801a788 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 801a734:	7823      	ldrb	r3, [r4, #0]
 801a736:	f3bf 8f5b 	dmb	ish
 801a73a:	07da      	lsls	r2, r3, #31
 801a73c:	4605      	mov	r5, r0
 801a73e:	d40b      	bmi.n	801a758 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801a740:	4620      	mov	r0, r4
 801a742:	f007 fa83 	bl	8021c4c <__cxa_guard_acquire>
 801a746:	b138      	cbz	r0, 801a758 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801a748:	4620      	mov	r0, r4
 801a74a:	f007 fa8b 	bl	8021c64 <__cxa_guard_release>
 801a74e:	4a0f      	ldr	r2, [pc, #60]	; (801a78c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801a750:	490f      	ldr	r1, [pc, #60]	; (801a790 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 801a752:	4810      	ldr	r0, [pc, #64]	; (801a794 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801a754:	f007 fa73 	bl	8021c3e <__aeabi_atexit>
 801a758:	4c0f      	ldr	r4, [pc, #60]	; (801a798 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 801a75a:	7823      	ldrb	r3, [r4, #0]
 801a75c:	f3bf 8f5b 	dmb	ish
 801a760:	07db      	lsls	r3, r3, #31
 801a762:	d40b      	bmi.n	801a77c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801a764:	4620      	mov	r0, r4
 801a766:	f007 fa71 	bl	8021c4c <__cxa_guard_acquire>
 801a76a:	b138      	cbz	r0, 801a77c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801a76c:	4620      	mov	r0, r4
 801a76e:	f007 fa79 	bl	8021c64 <__cxa_guard_release>
 801a772:	4a06      	ldr	r2, [pc, #24]	; (801a78c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801a774:	4909      	ldr	r1, [pc, #36]	; (801a79c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 801a776:	480a      	ldr	r0, [pc, #40]	; (801a7a0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801a778:	f007 fa61 	bl	8021c3e <__aeabi_atexit>
 801a77c:	4b05      	ldr	r3, [pc, #20]	; (801a794 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801a77e:	672b      	str	r3, [r5, #112]	; 0x70
 801a780:	4b07      	ldr	r3, [pc, #28]	; (801a7a0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801a782:	676b      	str	r3, [r5, #116]	; 0x74
 801a784:	bd38      	pop	{r3, r4, r5, pc}
 801a786:	bf00      	nop
 801a788:	200179e8 	.word	0x200179e8
 801a78c:	20000000 	.word	0x20000000
 801a790:	08018331 	.word	0x08018331
 801a794:	20000094 	.word	0x20000094
 801a798:	200179ec 	.word	0x200179ec
 801a79c:	0801832f 	.word	0x0801832f
 801a7a0:	20000098 	.word	0x20000098

0801a7a4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 801a7a4:	b538      	push	{r3, r4, r5, lr}
 801a7a6:	4c15      	ldr	r4, [pc, #84]	; (801a7fc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 801a7a8:	7823      	ldrb	r3, [r4, #0]
 801a7aa:	f3bf 8f5b 	dmb	ish
 801a7ae:	07da      	lsls	r2, r3, #31
 801a7b0:	4605      	mov	r5, r0
 801a7b2:	d40b      	bmi.n	801a7cc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801a7b4:	4620      	mov	r0, r4
 801a7b6:	f007 fa49 	bl	8021c4c <__cxa_guard_acquire>
 801a7ba:	b138      	cbz	r0, 801a7cc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801a7bc:	4620      	mov	r0, r4
 801a7be:	f007 fa51 	bl	8021c64 <__cxa_guard_release>
 801a7c2:	4a0f      	ldr	r2, [pc, #60]	; (801a800 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801a7c4:	490f      	ldr	r1, [pc, #60]	; (801a804 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 801a7c6:	4810      	ldr	r0, [pc, #64]	; (801a808 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801a7c8:	f007 fa39 	bl	8021c3e <__aeabi_atexit>
 801a7cc:	4c0f      	ldr	r4, [pc, #60]	; (801a80c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 801a7ce:	7823      	ldrb	r3, [r4, #0]
 801a7d0:	f3bf 8f5b 	dmb	ish
 801a7d4:	07db      	lsls	r3, r3, #31
 801a7d6:	d40b      	bmi.n	801a7f0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801a7d8:	4620      	mov	r0, r4
 801a7da:	f007 fa37 	bl	8021c4c <__cxa_guard_acquire>
 801a7de:	b138      	cbz	r0, 801a7f0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801a7e0:	4620      	mov	r0, r4
 801a7e2:	f007 fa3f 	bl	8021c64 <__cxa_guard_release>
 801a7e6:	4a06      	ldr	r2, [pc, #24]	; (801a800 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801a7e8:	4909      	ldr	r1, [pc, #36]	; (801a810 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 801a7ea:	480a      	ldr	r0, [pc, #40]	; (801a814 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801a7ec:	f007 fa27 	bl	8021c3e <__aeabi_atexit>
 801a7f0:	4b05      	ldr	r3, [pc, #20]	; (801a808 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801a7f2:	66ab      	str	r3, [r5, #104]	; 0x68
 801a7f4:	4b07      	ldr	r3, [pc, #28]	; (801a814 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801a7f6:	66eb      	str	r3, [r5, #108]	; 0x6c
 801a7f8:	bd38      	pop	{r3, r4, r5, pc}
 801a7fa:	bf00      	nop
 801a7fc:	200179e0 	.word	0x200179e0
 801a800:	20000000 	.word	0x20000000
 801a804:	08018335 	.word	0x08018335
 801a808:	2000008c 	.word	0x2000008c
 801a80c:	200179e4 	.word	0x200179e4
 801a810:	08018333 	.word	0x08018333
 801a814:	20000090 	.word	0x20000090

0801a818 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 801a818:	b510      	push	{r4, lr}
 801a81a:	4604      	mov	r4, r0
 801a81c:	f7ff ff88 	bl	801a730 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 801a820:	4620      	mov	r0, r4
 801a822:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801a826:	f7ff bfbd 	b.w	801a7a4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

0801a82a <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 801a82a:	b510      	push	{r4, lr}
 801a82c:	4604      	mov	r4, r0
 801a82e:	f7ff fff3 	bl	801a818 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 801a832:	4620      	mov	r0, r4
 801a834:	f7ff ff72 	bl	801a71c <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 801a838:	4620      	mov	r0, r4
 801a83a:	f7ff fdf9 	bl	801a430 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 801a83e:	4620      	mov	r0, r4
 801a840:	f7ff fcfa 	bl	801a238 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 801a844:	4620      	mov	r0, r4
 801a846:	f7ff fd75 	bl	801a334 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 801a84a:	4620      	mov	r0, r4
 801a84c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801a850:	f7ff bee0 	b.w	801a614 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

0801a854 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 801a854:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a858:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	; 0x2c
 801a85c:	f9bd e024 	ldrsh.w	lr, [sp, #36]	; 0x24
 801a860:	f9bd b028 	ldrsh.w	fp, [sp, #40]	; 0x28
 801a864:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 801a868:	f89d 7038 	ldrb.w	r7, [sp, #56]	; 0x38
 801a86c:	f89d 603c 	ldrb.w	r6, [sp, #60]	; 0x3c
 801a870:	8808      	ldrh	r0, [r1, #0]
 801a872:	fb05 4c0e 	mla	ip, r5, lr, r4
 801a876:	2d00      	cmp	r5, #0
 801a878:	eb02 0a0c 	add.w	sl, r2, ip
 801a87c:	f2c0 80b0 	blt.w	801a9e0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801a880:	45ab      	cmp	fp, r5
 801a882:	f340 80ad 	ble.w	801a9e0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801a886:	2c00      	cmp	r4, #0
 801a888:	f2c0 80a8 	blt.w	801a9dc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801a88c:	45a6      	cmp	lr, r4
 801a88e:	f340 80a5 	ble.w	801a9dc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801a892:	f812 200c 	ldrb.w	r2, [r2, ip]
 801a896:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 801a89a:	1c62      	adds	r2, r4, #1
 801a89c:	f100 80a3 	bmi.w	801a9e6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801a8a0:	4596      	cmp	lr, r2
 801a8a2:	f340 80a0 	ble.w	801a9e6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801a8a6:	f1b9 0f00 	cmp.w	r9, #0
 801a8aa:	f000 809c 	beq.w	801a9e6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801a8ae:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801a8b2:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801a8b6:	3501      	adds	r5, #1
 801a8b8:	f100 8099 	bmi.w	801a9ee <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801a8bc:	45ab      	cmp	fp, r5
 801a8be:	f340 8096 	ble.w	801a9ee <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801a8c2:	2f00      	cmp	r7, #0
 801a8c4:	f000 8093 	beq.w	801a9ee <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801a8c8:	2c00      	cmp	r4, #0
 801a8ca:	f2c0 808e 	blt.w	801a9ea <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801a8ce:	45a6      	cmp	lr, r4
 801a8d0:	f340 808b 	ble.w	801a9ea <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801a8d4:	f81a 200e 	ldrb.w	r2, [sl, lr]
 801a8d8:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 801a8dc:	3401      	adds	r4, #1
 801a8de:	f100 8089 	bmi.w	801a9f4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801a8e2:	45a6      	cmp	lr, r4
 801a8e4:	f340 8086 	ble.w	801a9f4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801a8e8:	f1b9 0f00 	cmp.w	r9, #0
 801a8ec:	f000 8082 	beq.w	801a9f4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801a8f0:	44d6      	add	lr, sl
 801a8f2:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801a8f6:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 801a8fa:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801a8fe:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801a902:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 801a906:	fb19 fe07 	smulbb	lr, r9, r7
 801a90a:	ea44 0808 	orr.w	r8, r4, r8
 801a90e:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801a912:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801a916:	f1c7 0210 	rsb	r2, r7, #16
 801a91a:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801a91e:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801a922:	ea44 0c0c 	orr.w	ip, r4, ip
 801a926:	eba2 0209 	sub.w	r2, r2, r9
 801a92a:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801a92e:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801a932:	fb04 f40c 	mul.w	r4, r4, ip
 801a936:	fb02 4808 	mla	r8, r2, r8, r4
 801a93a:	041a      	lsls	r2, r3, #16
 801a93c:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801a940:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801a944:	4313      	orrs	r3, r2
 801a946:	042a      	lsls	r2, r5, #16
 801a948:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801a94c:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801a950:	fb0e 8303 	mla	r3, lr, r3, r8
 801a954:	432a      	orrs	r2, r5
 801a956:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801a95a:	fb07 3202 	mla	r2, r7, r2, r3
 801a95e:	0d53      	lsrs	r3, r2, #21
 801a960:	0952      	lsrs	r2, r2, #5
 801a962:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801a966:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801a96a:	431a      	orrs	r2, r3
 801a96c:	b293      	uxth	r3, r2
 801a96e:	b2b4      	uxth	r4, r6
 801a970:	1202      	asrs	r2, r0, #8
 801a972:	43f6      	mvns	r6, r6
 801a974:	b2f6      	uxtb	r6, r6
 801a976:	121d      	asrs	r5, r3, #8
 801a978:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801a97c:	fb12 f206 	smulbb	r2, r2, r6
 801a980:	10c7      	asrs	r7, r0, #3
 801a982:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801a986:	00c0      	lsls	r0, r0, #3
 801a988:	fb05 2504 	mla	r5, r5, r4, r2
 801a98c:	b2c0      	uxtb	r0, r0
 801a98e:	10da      	asrs	r2, r3, #3
 801a990:	00db      	lsls	r3, r3, #3
 801a992:	b2db      	uxtb	r3, r3
 801a994:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801a998:	fb10 f006 	smulbb	r0, r0, r6
 801a99c:	b2ad      	uxth	r5, r5
 801a99e:	fb03 0004 	mla	r0, r3, r4, r0
 801a9a2:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801a9a6:	fb17 f706 	smulbb	r7, r7, r6
 801a9aa:	b280      	uxth	r0, r0
 801a9ac:	1c6b      	adds	r3, r5, #1
 801a9ae:	fb02 7204 	mla	r2, r2, r4, r7
 801a9b2:	b292      	uxth	r2, r2
 801a9b4:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801a9b8:	1c43      	adds	r3, r0, #1
 801a9ba:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801a9be:	1c50      	adds	r0, r2, #1
 801a9c0:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801a9c4:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801a9c8:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801a9cc:	0952      	lsrs	r2, r2, #5
 801a9ce:	432b      	orrs	r3, r5
 801a9d0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a9d4:	4313      	orrs	r3, r2
 801a9d6:	800b      	strh	r3, [r1, #0]
 801a9d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a9dc:	4680      	mov	r8, r0
 801a9de:	e75c      	b.n	801a89a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 801a9e0:	4684      	mov	ip, r0
 801a9e2:	4680      	mov	r8, r0
 801a9e4:	e767      	b.n	801a8b6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801a9e6:	4684      	mov	ip, r0
 801a9e8:	e765      	b.n	801a8b6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801a9ea:	4605      	mov	r5, r0
 801a9ec:	e776      	b.n	801a8dc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 801a9ee:	4603      	mov	r3, r0
 801a9f0:	4605      	mov	r5, r0
 801a9f2:	e782      	b.n	801a8fa <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 801a9f4:	4603      	mov	r3, r0
 801a9f6:	e780      	b.n	801a8fa <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

0801a9f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a9f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a9fc:	b099      	sub	sp, #100	; 0x64
 801a9fe:	e9dd a523 	ldrd	sl, r5, [sp, #140]	; 0x8c
 801aa02:	9215      	str	r2, [sp, #84]	; 0x54
 801aa04:	9309      	str	r3, [sp, #36]	; 0x24
 801aa06:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 801aa08:	f89d 30ac 	ldrb.w	r3, [sp, #172]	; 0xac
 801aa0c:	930d      	str	r3, [sp, #52]	; 0x34
 801aa0e:	910c      	str	r1, [sp, #48]	; 0x30
 801aa10:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	; 0xa0
 801aa14:	9016      	str	r0, [sp, #88]	; 0x58
 801aa16:	6850      	ldr	r0, [r2, #4]
 801aa18:	6812      	ldr	r2, [r2, #0]
 801aa1a:	fb00 1303 	mla	r3, r0, r3, r1
 801aa1e:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 801aa22:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801aa24:	681b      	ldr	r3, [r3, #0]
 801aa26:	930b      	str	r3, [sp, #44]	; 0x2c
 801aa28:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801aa2a:	685e      	ldr	r6, [r3, #4]
 801aa2c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801aa2e:	43db      	mvns	r3, r3
 801aa30:	b2db      	uxtb	r3, r3
 801aa32:	3604      	adds	r6, #4
 801aa34:	930a      	str	r3, [sp, #40]	; 0x28
 801aa36:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801aa38:	2b00      	cmp	r3, #0
 801aa3a:	dc03      	bgt.n	801aa44 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801aa3c:	9b15      	ldr	r3, [sp, #84]	; 0x54
 801aa3e:	2b00      	cmp	r3, #0
 801aa40:	f340 8225 	ble.w	801ae8e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801aa44:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801aa46:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801aa4a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801aa4e:	1e48      	subs	r0, r1, #1
 801aa50:	1e57      	subs	r7, r2, #1
 801aa52:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801aa54:	2b00      	cmp	r3, #0
 801aa56:	f340 80e3 	ble.w	801ac20 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801aa5a:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 801aa5e:	ea4f 4325 	mov.w	r3, r5, asr #16
 801aa62:	d406      	bmi.n	801aa72 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801aa64:	4584      	cmp	ip, r0
 801aa66:	da04      	bge.n	801aa72 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801aa68:	2b00      	cmp	r3, #0
 801aa6a:	db02      	blt.n	801aa72 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801aa6c:	42bb      	cmp	r3, r7
 801aa6e:	f2c0 80d8 	blt.w	801ac22 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801aa72:	f11c 0c01 	adds.w	ip, ip, #1
 801aa76:	f100 80c9 	bmi.w	801ac0c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801aa7a:	4561      	cmp	r1, ip
 801aa7c:	f2c0 80c6 	blt.w	801ac0c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801aa80:	3301      	adds	r3, #1
 801aa82:	f100 80c3 	bmi.w	801ac0c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801aa86:	429a      	cmp	r2, r3
 801aa88:	f2c0 80c0 	blt.w	801ac0c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801aa8c:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801aa90:	4647      	mov	r7, r8
 801aa92:	f1bb 0f00 	cmp.w	fp, #0
 801aa96:	f340 80e3 	ble.w	801ac60 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 801aa9a:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801aa9c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801aa9e:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801aaa2:	689b      	ldr	r3, [r3, #8]
 801aaa4:	ea5f 422a 	movs.w	r2, sl, asr #16
 801aaa8:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801aaac:	f3ca 3003 	ubfx	r0, sl, #12, #4
 801aab0:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801aab4:	f100 8121 	bmi.w	801acfa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801aab8:	f103 39ff 	add.w	r9, r3, #4294967295
 801aabc:	454a      	cmp	r2, r9
 801aabe:	f280 811c 	bge.w	801acfa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801aac2:	f1bc 0f00 	cmp.w	ip, #0
 801aac6:	f2c0 8118 	blt.w	801acfa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801aaca:	f10e 39ff 	add.w	r9, lr, #4294967295
 801aace:	45cc      	cmp	ip, r9
 801aad0:	f280 8113 	bge.w	801acfa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801aad4:	b21b      	sxth	r3, r3
 801aad6:	fb0c 2203 	mla	r2, ip, r3, r2
 801aada:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801aadc:	eb04 0902 	add.w	r9, r4, r2
 801aae0:	5ca2      	ldrb	r2, [r4, r2]
 801aae2:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 801aae6:	2800      	cmp	r0, #0
 801aae8:	f000 80fe 	beq.w	801ace8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801aaec:	f899 2001 	ldrb.w	r2, [r9, #1]
 801aaf0:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 801aaf4:	9211      	str	r2, [sp, #68]	; 0x44
 801aaf6:	b151      	cbz	r1, 801ab0e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801aaf8:	eb09 0203 	add.w	r2, r9, r3
 801aafc:	f819 3003 	ldrb.w	r3, [r9, r3]
 801ab00:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801ab04:	930f      	str	r3, [sp, #60]	; 0x3c
 801ab06:	7853      	ldrb	r3, [r2, #1]
 801ab08:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801ab0c:	9312      	str	r3, [sp, #72]	; 0x48
 801ab0e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801ab10:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801ab12:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801ab16:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801ab1a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801ab1e:	ea4c 0c03 	orr.w	ip, ip, r3
 801ab22:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801ab24:	041b      	lsls	r3, r3, #16
 801ab26:	fb10 f201 	smulbb	r2, r0, r1
 801ab2a:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801ab2e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801ab32:	10d2      	asrs	r2, r2, #3
 801ab34:	4323      	orrs	r3, r4
 801ab36:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 801ab3a:	4353      	muls	r3, r2
 801ab3c:	fb09 330c 	mla	r3, r9, ip, r3
 801ab40:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801ab44:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801ab48:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801ab4c:	ea4c 0e0e 	orr.w	lr, ip, lr
 801ab50:	f1c1 0c10 	rsb	ip, r1, #16
 801ab54:	ebac 0c00 	sub.w	ip, ip, r0
 801ab58:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801ab5c:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801ab60:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801ab62:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801ab64:	0418      	lsls	r0, r3, #16
 801ab66:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801ab6a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801ab6e:	4318      	orrs	r0, r3
 801ab70:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801ab74:	fb02 c200 	mla	r2, r2, r0, ip
 801ab78:	0d53      	lsrs	r3, r2, #21
 801ab7a:	0952      	lsrs	r2, r2, #5
 801ab7c:	8838      	ldrh	r0, [r7, #0]
 801ab7e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ab82:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801ab86:	431a      	orrs	r2, r3
 801ab88:	b292      	uxth	r2, r2
 801ab8a:	1201      	asrs	r1, r0, #8
 801ab8c:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 801ab90:	ea4f 2c22 	mov.w	ip, r2, asr #8
 801ab94:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801ab98:	fb11 f104 	smulbb	r1, r1, r4
 801ab9c:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801aba0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801aba4:	00c0      	lsls	r0, r0, #3
 801aba6:	fb0c 1c03 	mla	ip, ip, r3, r1
 801abaa:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801abae:	10d1      	asrs	r1, r2, #3
 801abb0:	b2c0      	uxtb	r0, r0
 801abb2:	00d2      	lsls	r2, r2, #3
 801abb4:	b2d2      	uxtb	r2, r2
 801abb6:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801abba:	fb1e fe04 	smulbb	lr, lr, r4
 801abbe:	fb10 f004 	smulbb	r0, r0, r4
 801abc2:	fa1f fc8c 	uxth.w	ip, ip
 801abc6:	fb01 e103 	mla	r1, r1, r3, lr
 801abca:	fb02 0303 	mla	r3, r2, r3, r0
 801abce:	b29a      	uxth	r2, r3
 801abd0:	f10c 0301 	add.w	r3, ip, #1
 801abd4:	b289      	uxth	r1, r1
 801abd6:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801abda:	1c53      	adds	r3, r2, #1
 801abdc:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801abe0:	1c4a      	adds	r2, r1, #1
 801abe2:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801abe6:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801abea:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801abee:	0949      	lsrs	r1, r1, #5
 801abf0:	ea43 030c 	orr.w	r3, r3, ip
 801abf4:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801abf8:	430b      	orrs	r3, r1
 801abfa:	803b      	strh	r3, [r7, #0]
 801abfc:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801abfe:	449a      	add	sl, r3
 801ac00:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801ac02:	3702      	adds	r7, #2
 801ac04:	441d      	add	r5, r3
 801ac06:	f10b 3bff 	add.w	fp, fp, #4294967295
 801ac0a:	e742      	b.n	801aa92 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801ac0c:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801ac0e:	449a      	add	sl, r3
 801ac10:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801ac12:	441d      	add	r5, r3
 801ac14:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ac16:	3b01      	subs	r3, #1
 801ac18:	9309      	str	r3, [sp, #36]	; 0x24
 801ac1a:	f108 0802 	add.w	r8, r8, #2
 801ac1e:	e718      	b.n	801aa52 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801ac20:	d023      	beq.n	801ac6a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 801ac22:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ac24:	9825      	ldr	r0, [sp, #148]	; 0x94
 801ac26:	3b01      	subs	r3, #1
 801ac28:	fb00 a003 	mla	r0, r0, r3, sl
 801ac2c:	1400      	asrs	r0, r0, #16
 801ac2e:	f53f af2d 	bmi.w	801aa8c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801ac32:	3901      	subs	r1, #1
 801ac34:	4288      	cmp	r0, r1
 801ac36:	f6bf af29 	bge.w	801aa8c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801ac3a:	9926      	ldr	r1, [sp, #152]	; 0x98
 801ac3c:	fb01 5303 	mla	r3, r1, r3, r5
 801ac40:	141b      	asrs	r3, r3, #16
 801ac42:	f53f af23 	bmi.w	801aa8c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801ac46:	3a01      	subs	r2, #1
 801ac48:	4293      	cmp	r3, r2
 801ac4a:	f6bf af1f 	bge.w	801aa8c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801ac4e:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 801ac52:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 801ac56:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 801ac5a:	f1be 0f00 	cmp.w	lr, #0
 801ac5e:	dc6c      	bgt.n	801ad3a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801ac60:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ac62:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801ac66:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801ac6a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801ac6c:	2b00      	cmp	r3, #0
 801ac6e:	f340 810e 	ble.w	801ae8e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801ac72:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ac76:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801ac7a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801ac7e:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801ac80:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ac84:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ac88:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ac8c:	eef0 6a62 	vmov.f32	s13, s5
 801ac90:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ac94:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ac98:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ac9c:	ee16 aa90 	vmov	sl, s13
 801aca0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801aca4:	eef0 6a43 	vmov.f32	s13, s6
 801aca8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801acac:	ee12 2a90 	vmov	r2, s5
 801acb0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801acb4:	fb92 f3f3 	sdiv	r3, r2, r3
 801acb8:	ee13 2a10 	vmov	r2, s6
 801acbc:	9325      	str	r3, [sp, #148]	; 0x94
 801acbe:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801acc0:	fb92 f3f3 	sdiv	r3, r2, r3
 801acc4:	9326      	str	r3, [sp, #152]	; 0x98
 801acc6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801acc8:	9a15      	ldr	r2, [sp, #84]	; 0x54
 801acca:	3b01      	subs	r3, #1
 801accc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801acd0:	930c      	str	r3, [sp, #48]	; 0x30
 801acd2:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801acd4:	bf08      	it	eq
 801acd6:	4613      	moveq	r3, r2
 801acd8:	ee16 5a90 	vmov	r5, s13
 801acdc:	9309      	str	r3, [sp, #36]	; 0x24
 801acde:	eeb0 3a67 	vmov.f32	s6, s15
 801ace2:	eef0 2a47 	vmov.f32	s5, s14
 801ace6:	e6a6      	b.n	801aa36 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801ace8:	2900      	cmp	r1, #0
 801acea:	f43f af10 	beq.w	801ab0e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801acee:	f819 3003 	ldrb.w	r3, [r9, r3]
 801acf2:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801acf6:	930f      	str	r3, [sp, #60]	; 0x3c
 801acf8:	e709      	b.n	801ab0e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801acfa:	f112 0901 	adds.w	r9, r2, #1
 801acfe:	f53f af7d 	bmi.w	801abfc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801ad02:	454b      	cmp	r3, r9
 801ad04:	f6ff af7a 	blt.w	801abfc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801ad08:	f11c 0901 	adds.w	r9, ip, #1
 801ad0c:	f53f af76 	bmi.w	801abfc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801ad10:	45ce      	cmp	lr, r9
 801ad12:	f6ff af73 	blt.w	801abfc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801ad16:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801ad18:	9202      	str	r2, [sp, #8]
 801ad1a:	b21b      	sxth	r3, r3
 801ad1c:	fa0f f28e 	sxth.w	r2, lr
 801ad20:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801ad24:	e9cd c003 	strd	ip, r0, [sp, #12]
 801ad28:	9201      	str	r2, [sp, #4]
 801ad2a:	9300      	str	r3, [sp, #0]
 801ad2c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801ad2e:	9816      	ldr	r0, [sp, #88]	; 0x58
 801ad30:	4633      	mov	r3, r6
 801ad32:	4639      	mov	r1, r7
 801ad34:	f7ff fd8e 	bl	801a854 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 801ad38:	e760      	b.n	801abfc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801ad3a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801ad3c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801ad3e:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801ad42:	ea4f 422a 	mov.w	r2, sl, asr #16
 801ad46:	1429      	asrs	r1, r5, #16
 801ad48:	fb03 2101 	mla	r1, r3, r1, r2
 801ad4c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801ad4e:	440a      	add	r2, r1
 801ad50:	5c61      	ldrb	r1, [r4, r1]
 801ad52:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 801ad56:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801ad5a:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 801ad5e:	f1bc 0f00 	cmp.w	ip, #0
 801ad62:	f000 808c 	beq.w	801ae7e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 801ad66:	7857      	ldrb	r7, [r2, #1]
 801ad68:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 801ad6c:	9413      	str	r4, [sp, #76]	; 0x4c
 801ad6e:	b140      	cbz	r0, 801ad82 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801ad70:	18d7      	adds	r7, r2, r3
 801ad72:	5cd3      	ldrb	r3, [r2, r3]
 801ad74:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801ad78:	9310      	str	r3, [sp, #64]	; 0x40
 801ad7a:	787b      	ldrb	r3, [r7, #1]
 801ad7c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801ad80:	9314      	str	r3, [sp, #80]	; 0x50
 801ad82:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801ad84:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801ad86:	fb1c f200 	smulbb	r2, ip, r0
 801ad8a:	041f      	lsls	r7, r3, #16
 801ad8c:	10d2      	asrs	r2, r2, #3
 801ad8e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801ad92:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 801ad96:	431f      	orrs	r7, r3
 801ad98:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 801ad9c:	9317      	str	r3, [sp, #92]	; 0x5c
 801ad9e:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801ada0:	041b      	lsls	r3, r3, #16
 801ada2:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 801ada6:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801adaa:	ea43 030b 	orr.w	r3, r3, fp
 801adae:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801adb0:	4353      	muls	r3, r2
 801adb2:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801adb6:	fb04 3707 	mla	r7, r4, r7, r3
 801adba:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801adbe:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 801adc2:	ea43 0b01 	orr.w	fp, r3, r1
 801adc6:	f1c0 0110 	rsb	r1, r0, #16
 801adca:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801adcc:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801adce:	eba1 0c0c 	sub.w	ip, r1, ip
 801add2:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801add6:	fb0c 770b 	mla	r7, ip, fp, r7
 801adda:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801adde:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 801ade2:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801ade6:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801adea:	ea4c 0c0b 	orr.w	ip, ip, fp
 801adee:	fb02 770c 	mla	r7, r2, ip, r7
 801adf2:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801adf4:	0d79      	lsrs	r1, r7, #21
 801adf6:	097f      	lsrs	r7, r7, #5
 801adf8:	8812      	ldrh	r2, [r2, #0]
 801adfa:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801adfe:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801ae02:	430f      	orrs	r7, r1
 801ae04:	b2bb      	uxth	r3, r7
 801ae06:	1211      	asrs	r1, r2, #8
 801ae08:	1218      	asrs	r0, r3, #8
 801ae0a:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801ae0e:	fb11 f104 	smulbb	r1, r1, r4
 801ae12:	10d7      	asrs	r7, r2, #3
 801ae14:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801ae18:	00d2      	lsls	r2, r2, #3
 801ae1a:	fb00 1009 	mla	r0, r0, r9, r1
 801ae1e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801ae22:	10d9      	asrs	r1, r3, #3
 801ae24:	b2d2      	uxtb	r2, r2
 801ae26:	00db      	lsls	r3, r3, #3
 801ae28:	fb17 f704 	smulbb	r7, r7, r4
 801ae2c:	fb12 f204 	smulbb	r2, r2, r4
 801ae30:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801ae34:	b2db      	uxtb	r3, r3
 801ae36:	b280      	uxth	r0, r0
 801ae38:	fb01 7109 	mla	r1, r1, r9, r7
 801ae3c:	fb03 2309 	mla	r3, r3, r9, r2
 801ae40:	b29b      	uxth	r3, r3
 801ae42:	b289      	uxth	r1, r1
 801ae44:	1c42      	adds	r2, r0, #1
 801ae46:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801ae4a:	1c4f      	adds	r7, r1, #1
 801ae4c:	1c5a      	adds	r2, r3, #1
 801ae4e:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801ae52:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801ae56:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801ae5a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801ae5e:	0949      	lsrs	r1, r1, #5
 801ae60:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ae62:	4310      	orrs	r0, r2
 801ae64:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801ae68:	4308      	orrs	r0, r1
 801ae6a:	f823 0b02 	strh.w	r0, [r3], #2
 801ae6e:	930e      	str	r3, [sp, #56]	; 0x38
 801ae70:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801ae72:	449a      	add	sl, r3
 801ae74:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801ae76:	f10e 3eff 	add.w	lr, lr, #4294967295
 801ae7a:	441d      	add	r5, r3
 801ae7c:	e6ed      	b.n	801ac5a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 801ae7e:	2800      	cmp	r0, #0
 801ae80:	f43f af7f 	beq.w	801ad82 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801ae84:	5cd3      	ldrb	r3, [r2, r3]
 801ae86:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801ae8a:	9310      	str	r3, [sp, #64]	; 0x40
 801ae8c:	e779      	b.n	801ad82 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801ae8e:	b019      	add	sp, #100	; 0x64
 801ae90:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801ae94 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801ae94:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801ae98:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	; 0x28
 801ae9c:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 801aea0:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
 801aea4:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 801aea8:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 801aeac:	8808      	ldrh	r0, [r1, #0]
 801aeae:	fb08 470e 	mla	r7, r8, lr, r4
 801aeb2:	f1b8 0f00 	cmp.w	r8, #0
 801aeb6:	eb02 0907 	add.w	r9, r2, r7
 801aeba:	db67      	blt.n	801af8c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801aebc:	45c2      	cmp	sl, r8
 801aebe:	dd65      	ble.n	801af8c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801aec0:	2c00      	cmp	r4, #0
 801aec2:	db61      	blt.n	801af88 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801aec4:	45a6      	cmp	lr, r4
 801aec6:	dd5f      	ble.n	801af88 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801aec8:	5dd2      	ldrb	r2, [r2, r7]
 801aeca:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801aece:	1c62      	adds	r2, r4, #1
 801aed0:	d45f      	bmi.n	801af92 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801aed2:	4596      	cmp	lr, r2
 801aed4:	dd5d      	ble.n	801af92 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801aed6:	2d00      	cmp	r5, #0
 801aed8:	d05b      	beq.n	801af92 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801aeda:	f899 2001 	ldrb.w	r2, [r9, #1]
 801aede:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 801aee2:	f118 0801 	adds.w	r8, r8, #1
 801aee6:	d458      	bmi.n	801af9a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801aee8:	45c2      	cmp	sl, r8
 801aeea:	dd56      	ble.n	801af9a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801aeec:	2e00      	cmp	r6, #0
 801aeee:	d054      	beq.n	801af9a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801aef0:	2c00      	cmp	r4, #0
 801aef2:	db50      	blt.n	801af96 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801aef4:	45a6      	cmp	lr, r4
 801aef6:	dd4e      	ble.n	801af96 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801aef8:	f819 200e 	ldrb.w	r2, [r9, lr]
 801aefc:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 801af00:	3401      	adds	r4, #1
 801af02:	d407      	bmi.n	801af14 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801af04:	45a6      	cmp	lr, r4
 801af06:	dd05      	ble.n	801af14 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801af08:	b125      	cbz	r5, 801af14 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801af0a:	44ce      	add	lr, r9
 801af0c:	f89e 0001 	ldrb.w	r0, [lr, #1]
 801af10:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 801af14:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801af18:	fb15 f406 	smulbb	r4, r5, r6
 801af1c:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801af20:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801af24:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801af28:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801af2c:	ea43 0c0c 	orr.w	ip, r3, ip
 801af30:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801af34:	f1c6 0310 	rsb	r3, r6, #16
 801af38:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801af3c:	1b5b      	subs	r3, r3, r5
 801af3e:	ea4e 0707 	orr.w	r7, lr, r7
 801af42:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801af46:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801af4a:	437d      	muls	r5, r7
 801af4c:	fb03 5c0c 	mla	ip, r3, ip, r5
 801af50:	0403      	lsls	r3, r0, #16
 801af52:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801af56:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801af5a:	4318      	orrs	r0, r3
 801af5c:	0413      	lsls	r3, r2, #16
 801af5e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801af62:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801af66:	4313      	orrs	r3, r2
 801af68:	fb04 c000 	mla	r0, r4, r0, ip
 801af6c:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801af70:	fb06 0003 	mla	r0, r6, r3, r0
 801af74:	0d43      	lsrs	r3, r0, #21
 801af76:	0940      	lsrs	r0, r0, #5
 801af78:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801af7c:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801af80:	4318      	orrs	r0, r3
 801af82:	8008      	strh	r0, [r1, #0]
 801af84:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801af88:	4684      	mov	ip, r0
 801af8a:	e7a0      	b.n	801aece <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 801af8c:	4607      	mov	r7, r0
 801af8e:	4684      	mov	ip, r0
 801af90:	e7a7      	b.n	801aee2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801af92:	4607      	mov	r7, r0
 801af94:	e7a5      	b.n	801aee2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801af96:	4602      	mov	r2, r0
 801af98:	e7b2      	b.n	801af00 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 801af9a:	4602      	mov	r2, r0
 801af9c:	e7ba      	b.n	801af14 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

0801af9e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801af9e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801afa2:	b093      	sub	sp, #76	; 0x4c
 801afa4:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 801afa8:	920f      	str	r2, [sp, #60]	; 0x3c
 801afaa:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801afac:	9108      	str	r1, [sp, #32]
 801afae:	9306      	str	r3, [sp, #24]
 801afb0:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 801afb4:	9010      	str	r0, [sp, #64]	; 0x40
 801afb6:	6850      	ldr	r0, [r2, #4]
 801afb8:	6812      	ldr	r2, [r2, #0]
 801afba:	fb00 1303 	mla	r3, r0, r3, r1
 801afbe:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801afc2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801afc4:	681b      	ldr	r3, [r3, #0]
 801afc6:	9307      	str	r3, [sp, #28]
 801afc8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801afca:	685f      	ldr	r7, [r3, #4]
 801afcc:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801afd0:	3704      	adds	r7, #4
 801afd2:	9b08      	ldr	r3, [sp, #32]
 801afd4:	2b00      	cmp	r3, #0
 801afd6:	dc03      	bgt.n	801afe0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 801afd8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801afda:	2b00      	cmp	r3, #0
 801afdc:	f340 81b2 	ble.w	801b344 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801afe0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801afe2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801afe6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801afea:	1e48      	subs	r0, r1, #1
 801afec:	f102 3cff 	add.w	ip, r2, #4294967295
 801aff0:	9b06      	ldr	r3, [sp, #24]
 801aff2:	2b00      	cmp	r3, #0
 801aff4:	f340 80a9 	ble.w	801b14a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801aff8:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801affc:	ea4f 4326 	mov.w	r3, r6, asr #16
 801b000:	d406      	bmi.n	801b010 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801b002:	4586      	cmp	lr, r0
 801b004:	da04      	bge.n	801b010 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801b006:	2b00      	cmp	r3, #0
 801b008:	db02      	blt.n	801b010 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801b00a:	4563      	cmp	r3, ip
 801b00c:	f2c0 809e 	blt.w	801b14c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801b010:	f11e 0e01 	adds.w	lr, lr, #1
 801b014:	f100 808f 	bmi.w	801b136 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b018:	4571      	cmp	r1, lr
 801b01a:	f2c0 808c 	blt.w	801b136 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b01e:	3301      	adds	r3, #1
 801b020:	f100 8089 	bmi.w	801b136 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b024:	429a      	cmp	r2, r3
 801b026:	f2c0 8086 	blt.w	801b136 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b02a:	f8dd b018 	ldr.w	fp, [sp, #24]
 801b02e:	46c8      	mov	r8, r9
 801b030:	f1bb 0f00 	cmp.w	fp, #0
 801b034:	f340 80a6 	ble.w	801b184 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801b038:	9a24      	ldr	r2, [sp, #144]	; 0x90
 801b03a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801b03c:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801b040:	689b      	ldr	r3, [r3, #8]
 801b042:	1422      	asrs	r2, r4, #16
 801b044:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801b048:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801b04c:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801b050:	f100 80e3 	bmi.w	801b21a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801b054:	f103 3aff 	add.w	sl, r3, #4294967295
 801b058:	4552      	cmp	r2, sl
 801b05a:	f280 80de 	bge.w	801b21a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801b05e:	f1bc 0f00 	cmp.w	ip, #0
 801b062:	f2c0 80da 	blt.w	801b21a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801b066:	f10e 3aff 	add.w	sl, lr, #4294967295
 801b06a:	45d4      	cmp	ip, sl
 801b06c:	f280 80d5 	bge.w	801b21a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801b070:	b21b      	sxth	r3, r3
 801b072:	fb0c 2203 	mla	r2, ip, r3, r2
 801b076:	9d07      	ldr	r5, [sp, #28]
 801b078:	eb05 0a02 	add.w	sl, r5, r2
 801b07c:	5caa      	ldrb	r2, [r5, r2]
 801b07e:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 801b082:	2800      	cmp	r0, #0
 801b084:	f000 80c0 	beq.w	801b208 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 801b088:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801b08c:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 801b090:	920b      	str	r2, [sp, #44]	; 0x2c
 801b092:	b151      	cbz	r1, 801b0aa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801b094:	eb0a 0203 	add.w	r2, sl, r3
 801b098:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801b09c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801b0a0:	9309      	str	r3, [sp, #36]	; 0x24
 801b0a2:	7853      	ldrb	r3, [r2, #1]
 801b0a4:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801b0a8:	930c      	str	r3, [sp, #48]	; 0x30
 801b0aa:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801b0ac:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801b0ae:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801b0b2:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801b0b6:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801b0ba:	ea4c 0c03 	orr.w	ip, ip, r3
 801b0be:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801b0c0:	041b      	lsls	r3, r3, #16
 801b0c2:	fb10 f201 	smulbb	r2, r0, r1
 801b0c6:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801b0ca:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801b0ce:	10d2      	asrs	r2, r2, #3
 801b0d0:	432b      	orrs	r3, r5
 801b0d2:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 801b0d6:	4353      	muls	r3, r2
 801b0d8:	fb0a 330c 	mla	r3, sl, ip, r3
 801b0dc:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801b0e0:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801b0e4:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801b0e8:	ea4c 0e0e 	orr.w	lr, ip, lr
 801b0ec:	f1c1 0c10 	rsb	ip, r1, #16
 801b0f0:	ebac 0c00 	sub.w	ip, ip, r0
 801b0f4:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801b0f8:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801b0fc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b0fe:	0418      	lsls	r0, r3, #16
 801b100:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801b104:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801b108:	4318      	orrs	r0, r3
 801b10a:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801b10e:	fb02 c200 	mla	r2, r2, r0, ip
 801b112:	0d53      	lsrs	r3, r2, #21
 801b114:	0952      	lsrs	r2, r2, #5
 801b116:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801b11a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801b11e:	431a      	orrs	r2, r3
 801b120:	f8a8 2000 	strh.w	r2, [r8]
 801b124:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801b126:	441c      	add	r4, r3
 801b128:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801b12a:	f108 0802 	add.w	r8, r8, #2
 801b12e:	441e      	add	r6, r3
 801b130:	f10b 3bff 	add.w	fp, fp, #4294967295
 801b134:	e77c      	b.n	801b030 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801b136:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801b138:	441c      	add	r4, r3
 801b13a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801b13c:	441e      	add	r6, r3
 801b13e:	9b06      	ldr	r3, [sp, #24]
 801b140:	3b01      	subs	r3, #1
 801b142:	9306      	str	r3, [sp, #24]
 801b144:	f109 0902 	add.w	r9, r9, #2
 801b148:	e752      	b.n	801aff0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801b14a:	d020      	beq.n	801b18e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801b14c:	9b06      	ldr	r3, [sp, #24]
 801b14e:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801b150:	3b01      	subs	r3, #1
 801b152:	fb00 4003 	mla	r0, r0, r3, r4
 801b156:	1400      	asrs	r0, r0, #16
 801b158:	f53f af67 	bmi.w	801b02a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801b15c:	3901      	subs	r1, #1
 801b15e:	4288      	cmp	r0, r1
 801b160:	f6bf af63 	bge.w	801b02a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801b164:	9920      	ldr	r1, [sp, #128]	; 0x80
 801b166:	fb01 6303 	mla	r3, r1, r3, r6
 801b16a:	141b      	asrs	r3, r3, #16
 801b16c:	f53f af5d 	bmi.w	801b02a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801b170:	3a01      	subs	r2, #1
 801b172:	4293      	cmp	r3, r2
 801b174:	f6bf af59 	bge.w	801b02a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801b178:	f8dd 8018 	ldr.w	r8, [sp, #24]
 801b17c:	46ca      	mov	sl, r9
 801b17e:	f1b8 0f00 	cmp.w	r8, #0
 801b182:	dc67      	bgt.n	801b254 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801b184:	9b06      	ldr	r3, [sp, #24]
 801b186:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801b18a:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801b18e:	9b08      	ldr	r3, [sp, #32]
 801b190:	2b00      	cmp	r3, #0
 801b192:	f340 80d7 	ble.w	801b344 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801b196:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b19a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b19e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801b1a2:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801b1a4:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b1a8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b1ac:	eeb0 6a62 	vmov.f32	s12, s5
 801b1b0:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b1b4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b1b8:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b1bc:	ee16 4a10 	vmov	r4, s12
 801b1c0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b1c4:	eeb0 6a43 	vmov.f32	s12, s6
 801b1c8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b1cc:	ee12 2a90 	vmov	r2, s5
 801b1d0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b1d4:	fb92 f3f3 	sdiv	r3, r2, r3
 801b1d8:	ee13 2a10 	vmov	r2, s6
 801b1dc:	931f      	str	r3, [sp, #124]	; 0x7c
 801b1de:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801b1e0:	fb92 f3f3 	sdiv	r3, r2, r3
 801b1e4:	9320      	str	r3, [sp, #128]	; 0x80
 801b1e6:	9b08      	ldr	r3, [sp, #32]
 801b1e8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801b1ea:	3b01      	subs	r3, #1
 801b1ec:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b1f0:	9308      	str	r3, [sp, #32]
 801b1f2:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801b1f4:	bf08      	it	eq
 801b1f6:	4613      	moveq	r3, r2
 801b1f8:	ee16 6a10 	vmov	r6, s12
 801b1fc:	9306      	str	r3, [sp, #24]
 801b1fe:	eeb0 3a67 	vmov.f32	s6, s15
 801b202:	eef0 2a47 	vmov.f32	s5, s14
 801b206:	e6e4      	b.n	801afd2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 801b208:	2900      	cmp	r1, #0
 801b20a:	f43f af4e 	beq.w	801b0aa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801b20e:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801b212:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801b216:	9309      	str	r3, [sp, #36]	; 0x24
 801b218:	e747      	b.n	801b0aa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801b21a:	f112 0a01 	adds.w	sl, r2, #1
 801b21e:	d481      	bmi.n	801b124 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801b220:	4553      	cmp	r3, sl
 801b222:	f6ff af7f 	blt.w	801b124 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801b226:	f11c 0a01 	adds.w	sl, ip, #1
 801b22a:	f53f af7b 	bmi.w	801b124 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801b22e:	45d6      	cmp	lr, sl
 801b230:	f6ff af78 	blt.w	801b124 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801b234:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 801b238:	b21b      	sxth	r3, r3
 801b23a:	fa0f f28e 	sxth.w	r2, lr
 801b23e:	e9cd 0104 	strd	r0, r1, [sp, #16]
 801b242:	9201      	str	r2, [sp, #4]
 801b244:	9300      	str	r3, [sp, #0]
 801b246:	9a07      	ldr	r2, [sp, #28]
 801b248:	9810      	ldr	r0, [sp, #64]	; 0x40
 801b24a:	463b      	mov	r3, r7
 801b24c:	4641      	mov	r1, r8
 801b24e:	f7ff fe21 	bl	801ae94 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801b252:	e767      	b.n	801b124 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801b254:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801b256:	9d07      	ldr	r5, [sp, #28]
 801b258:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801b25c:	1422      	asrs	r2, r4, #16
 801b25e:	1431      	asrs	r1, r6, #16
 801b260:	fb03 2101 	mla	r1, r3, r1, r2
 801b264:	9a07      	ldr	r2, [sp, #28]
 801b266:	440a      	add	r2, r1
 801b268:	5c69      	ldrb	r1, [r5, r1]
 801b26a:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 801b26e:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801b272:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 801b276:	f1be 0f00 	cmp.w	lr, #0
 801b27a:	d05c      	beq.n	801b336 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 801b27c:	f892 c001 	ldrb.w	ip, [r2, #1]
 801b280:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 801b284:	950d      	str	r5, [sp, #52]	; 0x34
 801b286:	b150      	cbz	r0, 801b29e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801b288:	eb02 0c03 	add.w	ip, r2, r3
 801b28c:	5cd3      	ldrb	r3, [r2, r3]
 801b28e:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801b292:	930a      	str	r3, [sp, #40]	; 0x28
 801b294:	f89c 3001 	ldrb.w	r3, [ip, #1]
 801b298:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801b29c:	930e      	str	r3, [sp, #56]	; 0x38
 801b29e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801b2a0:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801b2a2:	fb1e f200 	smulbb	r2, lr, r0
 801b2a6:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801b2aa:	10d2      	asrs	r2, r2, #3
 801b2ac:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801b2b0:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801b2b4:	ea4c 0c03 	orr.w	ip, ip, r3
 801b2b8:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 801b2bc:	9311      	str	r3, [sp, #68]	; 0x44
 801b2be:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b2c0:	041b      	lsls	r3, r3, #16
 801b2c2:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 801b2c6:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801b2ca:	ea43 030b 	orr.w	r3, r3, fp
 801b2ce:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801b2d0:	4353      	muls	r3, r2
 801b2d2:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801b2d6:	fb05 3c0c 	mla	ip, r5, ip, r3
 801b2da:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801b2de:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 801b2e2:	ea43 0b01 	orr.w	fp, r3, r1
 801b2e6:	f1c0 0110 	rsb	r1, r0, #16
 801b2ea:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b2ec:	eba1 0e0e 	sub.w	lr, r1, lr
 801b2f0:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 801b2f4:	fb0e cc0b 	mla	ip, lr, fp, ip
 801b2f8:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 801b2fc:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 801b300:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801b304:	ea4b 0e0e 	orr.w	lr, fp, lr
 801b308:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801b30c:	fb02 cc0e 	mla	ip, r2, lr, ip
 801b310:	ea4f 535c 	mov.w	r3, ip, lsr #21
 801b314:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801b318:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801b31c:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801b320:	ea43 0c0c 	orr.w	ip, r3, ip
 801b324:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801b326:	f82a cb02 	strh.w	ip, [sl], #2
 801b32a:	441c      	add	r4, r3
 801b32c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801b32e:	f108 38ff 	add.w	r8, r8, #4294967295
 801b332:	441e      	add	r6, r3
 801b334:	e723      	b.n	801b17e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801b336:	2800      	cmp	r0, #0
 801b338:	d0b1      	beq.n	801b29e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801b33a:	5cd3      	ldrb	r3, [r2, r3]
 801b33c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801b340:	930a      	str	r3, [sp, #40]	; 0x28
 801b342:	e7ac      	b.n	801b29e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801b344:	b013      	add	sp, #76	; 0x4c
 801b346:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b34a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 801b34a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b34e:	880d      	ldrh	r5, [r1, #0]
 801b350:	b087      	sub	sp, #28
 801b352:	10ef      	asrs	r7, r5, #3
 801b354:	ea4f 2a25 	mov.w	sl, r5, asr #8
 801b358:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801b35c:	00ed      	lsls	r5, r5, #3
 801b35e:	9701      	str	r7, [sp, #4]
 801b360:	b2ed      	uxtb	r5, r5
 801b362:	9502      	str	r5, [sp, #8]
 801b364:	9d01      	ldr	r5, [sp, #4]
 801b366:	9103      	str	r1, [sp, #12]
 801b368:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
 801b36c:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	; 0x40
 801b370:	9902      	ldr	r1, [sp, #8]
 801b372:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 801b376:	f89d 4050 	ldrb.w	r4, [sp, #80]	; 0x50
 801b37a:	f89d e054 	ldrb.w	lr, [sp, #84]	; 0x54
 801b37e:	f89d 8058 	ldrb.w	r8, [sp, #88]	; 0x58
 801b382:	f00a 0af8 	and.w	sl, sl, #248	; 0xf8
 801b386:	022d      	lsls	r5, r5, #8
 801b388:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 801b38c:	fb06 0709 	mla	r7, r6, r9, r0
 801b390:	430d      	orrs	r5, r1
 801b392:	2e00      	cmp	r6, #0
 801b394:	eb02 0c07 	add.w	ip, r2, r7
 801b398:	9505      	str	r5, [sp, #20]
 801b39a:	f2c0 80b6 	blt.w	801b50a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801b39e:	45b3      	cmp	fp, r6
 801b3a0:	f340 80b3 	ble.w	801b50a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801b3a4:	2800      	cmp	r0, #0
 801b3a6:	f2c0 80ae 	blt.w	801b506 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801b3aa:	4581      	cmp	r9, r0
 801b3ac:	f340 80ab 	ble.w	801b506 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801b3b0:	5dd7      	ldrb	r7, [r2, r7]
 801b3b2:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801b3b6:	441f      	add	r7, r3
 801b3b8:	1c42      	adds	r2, r0, #1
 801b3ba:	f100 80a9 	bmi.w	801b510 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801b3be:	4591      	cmp	r9, r2
 801b3c0:	f340 80a6 	ble.w	801b510 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801b3c4:	2c00      	cmp	r4, #0
 801b3c6:	f000 80a3 	beq.w	801b510 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801b3ca:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801b3ce:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801b3d2:	441d      	add	r5, r3
 801b3d4:	3601      	adds	r6, #1
 801b3d6:	f100 809f 	bmi.w	801b518 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801b3da:	45b3      	cmp	fp, r6
 801b3dc:	f340 809c 	ble.w	801b518 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801b3e0:	f1be 0f00 	cmp.w	lr, #0
 801b3e4:	f000 8098 	beq.w	801b518 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801b3e8:	2800      	cmp	r0, #0
 801b3ea:	f2c0 8093 	blt.w	801b514 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801b3ee:	4581      	cmp	r9, r0
 801b3f0:	f340 8090 	ble.w	801b514 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801b3f4:	f81c 6009 	ldrb.w	r6, [ip, r9]
 801b3f8:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801b3fc:	441e      	add	r6, r3
 801b3fe:	3001      	adds	r0, #1
 801b400:	f100 808d 	bmi.w	801b51e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801b404:	4581      	cmp	r9, r0
 801b406:	f340 808a 	ble.w	801b51e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801b40a:	2c00      	cmp	r4, #0
 801b40c:	f000 8087 	beq.w	801b51e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801b410:	44e1      	add	r9, ip
 801b412:	f899 2001 	ldrb.w	r2, [r9, #1]
 801b416:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801b41a:	4413      	add	r3, r2
 801b41c:	b2a4      	uxth	r4, r4
 801b41e:	fa1f fe8e 	uxth.w	lr, lr
 801b422:	fb04 fb0e 	mul.w	fp, r4, lr
 801b426:	0124      	lsls	r4, r4, #4
 801b428:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 801b42c:	f5c4 7980 	rsb	r9, r4, #256	; 0x100
 801b430:	eba4 040b 	sub.w	r4, r4, fp
 801b434:	fa1f f08e 	uxth.w	r0, lr
 801b438:	b2a2      	uxth	r2, r4
 801b43a:	78ac      	ldrb	r4, [r5, #2]
 801b43c:	f897 c002 	ldrb.w	ip, [r7, #2]
 801b440:	9901      	ldr	r1, [sp, #4]
 801b442:	eba9 0900 	sub.w	r9, r9, r0
 801b446:	fa1f f989 	uxth.w	r9, r9
 801b44a:	4354      	muls	r4, r2
 801b44c:	fb09 440c 	mla	r4, r9, ip, r4
 801b450:	f896 c002 	ldrb.w	ip, [r6, #2]
 801b454:	fb00 440c 	mla	r4, r0, ip, r4
 801b458:	f893 c002 	ldrb.w	ip, [r3, #2]
 801b45c:	fa1f fe88 	uxth.w	lr, r8
 801b460:	ea6f 0808 	mvn.w	r8, r8
 801b464:	fa5f f888 	uxtb.w	r8, r8
 801b468:	fb0b 4c0c 	mla	ip, fp, ip, r4
 801b46c:	fb1a fa08 	smulbb	sl, sl, r8
 801b470:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801b474:	fb0c ac0e 	mla	ip, ip, lr, sl
 801b478:	f895 a001 	ldrb.w	sl, [r5, #1]
 801b47c:	787c      	ldrb	r4, [r7, #1]
 801b47e:	782d      	ldrb	r5, [r5, #0]
 801b480:	783f      	ldrb	r7, [r7, #0]
 801b482:	fb02 fa0a 	mul.w	sl, r2, sl
 801b486:	fb09 aa04 	mla	sl, r9, r4, sl
 801b48a:	7874      	ldrb	r4, [r6, #1]
 801b48c:	436a      	muls	r2, r5
 801b48e:	7835      	ldrb	r5, [r6, #0]
 801b490:	fb00 aa04 	mla	sl, r0, r4, sl
 801b494:	fb09 2207 	mla	r2, r9, r7, r2
 801b498:	785c      	ldrb	r4, [r3, #1]
 801b49a:	781b      	ldrb	r3, [r3, #0]
 801b49c:	fb00 2005 	mla	r0, r0, r5, r2
 801b4a0:	fb0b a404 	mla	r4, fp, r4, sl
 801b4a4:	fb0b 0b03 	mla	fp, fp, r3, r0
 801b4a8:	9b02      	ldr	r3, [sp, #8]
 801b4aa:	fb11 fa08 	smulbb	sl, r1, r8
 801b4ae:	fa1f fc8c 	uxth.w	ip, ip
 801b4b2:	fb13 f808 	smulbb	r8, r3, r8
 801b4b6:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 801b4ba:	f3c4 2407 	ubfx	r4, r4, #8, #8
 801b4be:	fb04 a40e 	mla	r4, r4, lr, sl
 801b4c2:	f10c 0301 	add.w	r3, ip, #1
 801b4c6:	fb0b 8e0e 	mla	lr, fp, lr, r8
 801b4ca:	fa1f fe8e 	uxth.w	lr, lr
 801b4ce:	b2a4      	uxth	r4, r4
 801b4d0:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801b4d4:	f40c 4378 	and.w	r3, ip, #63488	; 0xf800
 801b4d8:	f104 0a01 	add.w	sl, r4, #1
 801b4dc:	f10e 0c01 	add.w	ip, lr, #1
 801b4e0:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801b4e4:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801b4e8:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801b4ec:	0964      	lsrs	r4, r4, #5
 801b4ee:	ea4c 0c03 	orr.w	ip, ip, r3
 801b4f2:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801b4f6:	9b03      	ldr	r3, [sp, #12]
 801b4f8:	ea4c 0c04 	orr.w	ip, ip, r4
 801b4fc:	f8a3 c000 	strh.w	ip, [r3]
 801b500:	b007      	add	sp, #28
 801b502:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b506:	af05      	add	r7, sp, #20
 801b508:	e756      	b.n	801b3b8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 801b50a:	ad05      	add	r5, sp, #20
 801b50c:	462f      	mov	r7, r5
 801b50e:	e761      	b.n	801b3d4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801b510:	ad05      	add	r5, sp, #20
 801b512:	e75f      	b.n	801b3d4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801b514:	ae05      	add	r6, sp, #20
 801b516:	e772      	b.n	801b3fe <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 801b518:	ab05      	add	r3, sp, #20
 801b51a:	461e      	mov	r6, r3
 801b51c:	e77e      	b.n	801b41c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 801b51e:	ab05      	add	r3, sp, #20
 801b520:	e77c      	b.n	801b41c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

0801b522 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b522:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b526:	b095      	sub	sp, #84	; 0x54
 801b528:	9212      	str	r2, [sp, #72]	; 0x48
 801b52a:	9309      	str	r3, [sp, #36]	; 0x24
 801b52c:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 801b52e:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 801b532:	930f      	str	r3, [sp, #60]	; 0x3c
 801b534:	910e      	str	r1, [sp, #56]	; 0x38
 801b536:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	; 0x90
 801b53a:	9013      	str	r0, [sp, #76]	; 0x4c
 801b53c:	6850      	ldr	r0, [r2, #4]
 801b53e:	6812      	ldr	r2, [r2, #0]
 801b540:	fb00 1303 	mla	r3, r0, r3, r1
 801b544:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801b548:	930a      	str	r3, [sp, #40]	; 0x28
 801b54a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801b54c:	681b      	ldr	r3, [r3, #0]
 801b54e:	930d      	str	r3, [sp, #52]	; 0x34
 801b550:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801b552:	685c      	ldr	r4, [r3, #4]
 801b554:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801b556:	43db      	mvns	r3, r3
 801b558:	b2db      	uxtb	r3, r3
 801b55a:	3404      	adds	r4, #4
 801b55c:	930b      	str	r3, [sp, #44]	; 0x2c
 801b55e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b560:	2b00      	cmp	r3, #0
 801b562:	dc03      	bgt.n	801b56c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801b564:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801b566:	2b00      	cmp	r3, #0
 801b568:	f340 8255 	ble.w	801ba16 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801b56c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801b56e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b572:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801b576:	1e48      	subs	r0, r1, #1
 801b578:	1e55      	subs	r5, r2, #1
 801b57a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b57c:	2b00      	cmp	r3, #0
 801b57e:	f340 80f9 	ble.w	801b774 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801b582:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 801b584:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801b586:	1436      	asrs	r6, r6, #16
 801b588:	ea4f 4323 	mov.w	r3, r3, asr #16
 801b58c:	d406      	bmi.n	801b59c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801b58e:	4286      	cmp	r6, r0
 801b590:	da04      	bge.n	801b59c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801b592:	2b00      	cmp	r3, #0
 801b594:	db02      	blt.n	801b59c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801b596:	42ab      	cmp	r3, r5
 801b598:	f2c0 80ed 	blt.w	801b776 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 801b59c:	3601      	adds	r6, #1
 801b59e:	f100 80da 	bmi.w	801b756 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801b5a2:	42b1      	cmp	r1, r6
 801b5a4:	f2c0 80d7 	blt.w	801b756 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801b5a8:	3301      	adds	r3, #1
 801b5aa:	f100 80d4 	bmi.w	801b756 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801b5ae:	429a      	cmp	r2, r3
 801b5b0:	f2c0 80d1 	blt.w	801b756 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801b5b4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b5b6:	9311      	str	r3, [sp, #68]	; 0x44
 801b5b8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b5ba:	930c      	str	r3, [sp, #48]	; 0x30
 801b5bc:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801b5be:	2b00      	cmp	r3, #0
 801b5c0:	f340 80fa 	ble.w	801b7b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 801b5c4:	9826      	ldr	r0, [sp, #152]	; 0x98
 801b5c6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801b5c8:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801b5ca:	68c6      	ldr	r6, [r0, #12]
 801b5cc:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801b5ce:	141d      	asrs	r5, r3, #16
 801b5d0:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801b5d4:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801b5d6:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801b5d8:	1400      	asrs	r0, r0, #16
 801b5da:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801b5de:	6892      	ldr	r2, [r2, #8]
 801b5e0:	f100 813e 	bmi.w	801b860 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801b5e4:	1e57      	subs	r7, r2, #1
 801b5e6:	42b8      	cmp	r0, r7
 801b5e8:	f280 813a 	bge.w	801b860 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801b5ec:	2d00      	cmp	r5, #0
 801b5ee:	f2c0 8137 	blt.w	801b860 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801b5f2:	1e77      	subs	r7, r6, #1
 801b5f4:	42bd      	cmp	r5, r7
 801b5f6:	f280 8133 	bge.w	801b860 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801b5fa:	b212      	sxth	r2, r2
 801b5fc:	fb05 0002 	mla	r0, r5, r2, r0
 801b600:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801b602:	f815 a000 	ldrb.w	sl, [r5, r0]
 801b606:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 801b60a:	182e      	adds	r6, r5, r0
 801b60c:	eb04 050a 	add.w	r5, r4, sl
 801b610:	2b00      	cmp	r3, #0
 801b612:	f000 8117 	beq.w	801b844 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 801b616:	f896 c001 	ldrb.w	ip, [r6, #1]
 801b61a:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801b61e:	44a4      	add	ip, r4
 801b620:	2900      	cmp	r1, #0
 801b622:	f000 8117 	beq.w	801b854 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 801b626:	18b0      	adds	r0, r6, r2
 801b628:	5cb2      	ldrb	r2, [r6, r2]
 801b62a:	7840      	ldrb	r0, [r0, #1]
 801b62c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801b630:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801b634:	4422      	add	r2, r4
 801b636:	4420      	add	r0, r4
 801b638:	b29b      	uxth	r3, r3
 801b63a:	b289      	uxth	r1, r1
 801b63c:	fb03 f901 	mul.w	r9, r3, r1
 801b640:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801b644:	011b      	lsls	r3, r3, #4
 801b646:	b289      	uxth	r1, r1
 801b648:	f89c 7002 	ldrb.w	r7, [ip, #2]
 801b64c:	f895 b002 	ldrb.w	fp, [r5, #2]
 801b650:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801b652:	f814 a00a 	ldrb.w	sl, [r4, sl]
 801b656:	f8b6 e000 	ldrh.w	lr, [r6]
 801b65a:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 801b65e:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 801b662:	eba3 0309 	sub.w	r3, r3, r9
 801b666:	b29b      	uxth	r3, r3
 801b668:	eba8 0801 	sub.w	r8, r8, r1
 801b66c:	fa1f f888 	uxth.w	r8, r8
 801b670:	435f      	muls	r7, r3
 801b672:	fb08 770b 	mla	r7, r8, fp, r7
 801b676:	f892 b002 	ldrb.w	fp, [r2, #2]
 801b67a:	9310      	str	r3, [sp, #64]	; 0x40
 801b67c:	fb01 770b 	mla	r7, r1, fp, r7
 801b680:	f890 b002 	ldrb.w	fp, [r0, #2]
 801b684:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801b686:	fb09 770b 	mla	r7, r9, fp, r7
 801b68a:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 801b68e:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801b692:	fb1b fb03 	smulbb	fp, fp, r3
 801b696:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801b69a:	fb07 b706 	mla	r7, r7, r6, fp
 801b69e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b6a0:	f895 b001 	ldrb.w	fp, [r5, #1]
 801b6a4:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801b6a8:	f89c c000 	ldrb.w	ip, [ip]
 801b6ac:	435d      	muls	r5, r3
 801b6ae:	fb08 550b 	mla	r5, r8, fp, r5
 801b6b2:	f892 b001 	ldrb.w	fp, [r2, #1]
 801b6b6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801b6b8:	fb01 550b 	mla	r5, r1, fp, r5
 801b6bc:	f890 b001 	ldrb.w	fp, [r0, #1]
 801b6c0:	fb09 550b 	mla	r5, r9, fp, r5
 801b6c4:	ea4f 0bee 	mov.w	fp, lr, asr #3
 801b6c8:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801b6cc:	fb1b fb03 	smulbb	fp, fp, r3
 801b6d0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b6d2:	fb03 f30c 	mul.w	r3, r3, ip
 801b6d6:	f892 c000 	ldrb.w	ip, [r2]
 801b6da:	fb08 330a 	mla	r3, r8, sl, r3
 801b6de:	fb01 330c 	mla	r3, r1, ip, r3
 801b6e2:	f890 c000 	ldrb.w	ip, [r0]
 801b6e6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801b6ea:	fb09 3c0c 	mla	ip, r9, ip, r3
 801b6ee:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801b6f0:	fa5f fe8e 	uxtb.w	lr, lr
 801b6f4:	b2bf      	uxth	r7, r7
 801b6f6:	fb1e fe03 	smulbb	lr, lr, r3
 801b6fa:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801b6fe:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801b702:	fb05 b506 	mla	r5, r5, r6, fp
 801b706:	1c7b      	adds	r3, r7, #1
 801b708:	fb0c e606 	mla	r6, ip, r6, lr
 801b70c:	b2ad      	uxth	r5, r5
 801b70e:	b2b6      	uxth	r6, r6
 801b710:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801b714:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 801b718:	f105 0b01 	add.w	fp, r5, #1
 801b71c:	1c77      	adds	r7, r6, #1
 801b71e:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 801b722:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801b726:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801b72a:	096d      	lsrs	r5, r5, #5
 801b72c:	431f      	orrs	r7, r3
 801b72e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801b732:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801b734:	433d      	orrs	r5, r7
 801b736:	801d      	strh	r5, [r3, #0]
 801b738:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801b73a:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801b73c:	3302      	adds	r3, #2
 801b73e:	930c      	str	r3, [sp, #48]	; 0x30
 801b740:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801b742:	4413      	add	r3, r2
 801b744:	931f      	str	r3, [sp, #124]	; 0x7c
 801b746:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801b748:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801b74a:	4413      	add	r3, r2
 801b74c:	9320      	str	r3, [sp, #128]	; 0x80
 801b74e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801b750:	3b01      	subs	r3, #1
 801b752:	9311      	str	r3, [sp, #68]	; 0x44
 801b754:	e732      	b.n	801b5bc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801b756:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801b758:	9e21      	ldr	r6, [sp, #132]	; 0x84
 801b75a:	4433      	add	r3, r6
 801b75c:	931f      	str	r3, [sp, #124]	; 0x7c
 801b75e:	9e22      	ldr	r6, [sp, #136]	; 0x88
 801b760:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801b762:	4433      	add	r3, r6
 801b764:	9320      	str	r3, [sp, #128]	; 0x80
 801b766:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b768:	3b01      	subs	r3, #1
 801b76a:	9309      	str	r3, [sp, #36]	; 0x24
 801b76c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b76e:	3302      	adds	r3, #2
 801b770:	930a      	str	r3, [sp, #40]	; 0x28
 801b772:	e702      	b.n	801b57a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801b774:	d027      	beq.n	801b7c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 801b776:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b778:	9821      	ldr	r0, [sp, #132]	; 0x84
 801b77a:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 801b77c:	3b01      	subs	r3, #1
 801b77e:	fb00 5003 	mla	r0, r0, r3, r5
 801b782:	1400      	asrs	r0, r0, #16
 801b784:	f53f af16 	bmi.w	801b5b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801b788:	3901      	subs	r1, #1
 801b78a:	4288      	cmp	r0, r1
 801b78c:	f6bf af12 	bge.w	801b5b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801b790:	9922      	ldr	r1, [sp, #136]	; 0x88
 801b792:	9820      	ldr	r0, [sp, #128]	; 0x80
 801b794:	fb01 0303 	mla	r3, r1, r3, r0
 801b798:	141b      	asrs	r3, r3, #16
 801b79a:	f53f af0b 	bmi.w	801b5b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801b79e:	3a01      	subs	r2, #1
 801b7a0:	4293      	cmp	r3, r2
 801b7a2:	f6bf af07 	bge.w	801b5b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801b7a6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b7a8:	9311      	str	r3, [sp, #68]	; 0x44
 801b7aa:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 801b7ae:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b7b0:	930c      	str	r3, [sp, #48]	; 0x30
 801b7b2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801b7b4:	2b00      	cmp	r3, #0
 801b7b6:	dc70      	bgt.n	801b89a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801b7b8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b7ba:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801b7bc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b7c0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801b7c4:	930a      	str	r3, [sp, #40]	; 0x28
 801b7c6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b7c8:	2b00      	cmp	r3, #0
 801b7ca:	f340 8124 	ble.w	801ba16 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801b7ce:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b7d2:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801b7d6:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801b7da:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801b7dc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b7e0:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b7e4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b7e8:	eef0 6a62 	vmov.f32	s13, s5
 801b7ec:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b7f0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b7f4:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b7f8:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 801b7fc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b800:	eef0 6a43 	vmov.f32	s13, s6
 801b804:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b808:	ee12 2a90 	vmov	r2, s5
 801b80c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b810:	fb92 f3f3 	sdiv	r3, r2, r3
 801b814:	ee13 2a10 	vmov	r2, s6
 801b818:	9321      	str	r3, [sp, #132]	; 0x84
 801b81a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801b81c:	fb92 f3f3 	sdiv	r3, r2, r3
 801b820:	9322      	str	r3, [sp, #136]	; 0x88
 801b822:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b824:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801b826:	3b01      	subs	r3, #1
 801b828:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b82c:	930e      	str	r3, [sp, #56]	; 0x38
 801b82e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801b830:	edcd 6a20 	vstr	s13, [sp, #128]	; 0x80
 801b834:	bf08      	it	eq
 801b836:	4613      	moveq	r3, r2
 801b838:	9309      	str	r3, [sp, #36]	; 0x24
 801b83a:	eeb0 3a67 	vmov.f32	s6, s15
 801b83e:	eef0 2a47 	vmov.f32	s5, s14
 801b842:	e68c      	b.n	801b55e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801b844:	b149      	cbz	r1, 801b85a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 801b846:	5cb2      	ldrb	r2, [r6, r2]
 801b848:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801b84c:	4422      	add	r2, r4
 801b84e:	4628      	mov	r0, r5
 801b850:	46ac      	mov	ip, r5
 801b852:	e6f1      	b.n	801b638 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801b854:	4628      	mov	r0, r5
 801b856:	462a      	mov	r2, r5
 801b858:	e6ee      	b.n	801b638 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801b85a:	4628      	mov	r0, r5
 801b85c:	462a      	mov	r2, r5
 801b85e:	e7f7      	b.n	801b850 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 801b860:	1c47      	adds	r7, r0, #1
 801b862:	f53f af69 	bmi.w	801b738 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801b866:	42ba      	cmp	r2, r7
 801b868:	f6ff af66 	blt.w	801b738 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801b86c:	1c6f      	adds	r7, r5, #1
 801b86e:	f53f af63 	bmi.w	801b738 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801b872:	42be      	cmp	r6, r7
 801b874:	f6ff af60 	blt.w	801b738 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801b878:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801b87a:	9002      	str	r0, [sp, #8]
 801b87c:	b236      	sxth	r6, r6
 801b87e:	b212      	sxth	r2, r2
 801b880:	e9cd 1705 	strd	r1, r7, [sp, #20]
 801b884:	e9cd 5303 	strd	r5, r3, [sp, #12]
 801b888:	9200      	str	r2, [sp, #0]
 801b88a:	9601      	str	r6, [sp, #4]
 801b88c:	4623      	mov	r3, r4
 801b88e:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 801b892:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801b894:	f7ff fd59 	bl	801b34a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 801b898:	e74e      	b.n	801b738 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801b89a:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801b89c:	9820      	ldr	r0, [sp, #128]	; 0x80
 801b89e:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 801b8a0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801b8a2:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801b8a6:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801b8a8:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801b8ac:	142d      	asrs	r5, r5, #16
 801b8ae:	1400      	asrs	r0, r0, #16
 801b8b0:	fb02 5000 	mla	r0, r2, r0, r5
 801b8b4:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801b8b6:	f815 9000 	ldrb.w	r9, [r5, r0]
 801b8ba:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801b8be:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 801b8c2:	182e      	adds	r6, r5, r0
 801b8c4:	eb04 0509 	add.w	r5, r4, r9
 801b8c8:	2b00      	cmp	r3, #0
 801b8ca:	f000 8096 	beq.w	801b9fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801b8ce:	7877      	ldrb	r7, [r6, #1]
 801b8d0:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801b8d4:	4427      	add	r7, r4
 801b8d6:	2900      	cmp	r1, #0
 801b8d8:	f000 8097 	beq.w	801ba0a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 801b8dc:	18b0      	adds	r0, r6, r2
 801b8de:	5cb2      	ldrb	r2, [r6, r2]
 801b8e0:	7840      	ldrb	r0, [r0, #1]
 801b8e2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801b8e6:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801b8ea:	4422      	add	r2, r4
 801b8ec:	4420      	add	r0, r4
 801b8ee:	b29b      	uxth	r3, r3
 801b8f0:	b289      	uxth	r1, r1
 801b8f2:	fb03 f801 	mul.w	r8, r3, r1
 801b8f6:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801b8f8:	f895 b002 	ldrb.w	fp, [r5, #2]
 801b8fc:	f8b6 c000 	ldrh.w	ip, [r6]
 801b900:	78be      	ldrb	r6, [r7, #2]
 801b902:	f814 9009 	ldrb.w	r9, [r4, r9]
 801b906:	011b      	lsls	r3, r3, #4
 801b908:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 801b90c:	b289      	uxth	r1, r1
 801b90e:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801b912:	eba3 0308 	sub.w	r3, r3, r8
 801b916:	b29b      	uxth	r3, r3
 801b918:	ebae 0e01 	sub.w	lr, lr, r1
 801b91c:	fa1f fe8e 	uxth.w	lr, lr
 801b920:	435e      	muls	r6, r3
 801b922:	fb0e 660b 	mla	r6, lr, fp, r6
 801b926:	f892 b002 	ldrb.w	fp, [r2, #2]
 801b92a:	9310      	str	r3, [sp, #64]	; 0x40
 801b92c:	fb01 660b 	mla	r6, r1, fp, r6
 801b930:	f890 b002 	ldrb.w	fp, [r0, #2]
 801b934:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801b936:	fb08 660b 	mla	r6, r8, fp, r6
 801b93a:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 801b93e:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801b942:	fb1b fb03 	smulbb	fp, fp, r3
 801b946:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801b94a:	fb06 b60a 	mla	r6, r6, sl, fp
 801b94e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b950:	f895 b001 	ldrb.w	fp, [r5, #1]
 801b954:	787d      	ldrb	r5, [r7, #1]
 801b956:	783f      	ldrb	r7, [r7, #0]
 801b958:	435d      	muls	r5, r3
 801b95a:	fb0e 550b 	mla	r5, lr, fp, r5
 801b95e:	f892 b001 	ldrb.w	fp, [r2, #1]
 801b962:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801b964:	fb01 550b 	mla	r5, r1, fp, r5
 801b968:	f890 b001 	ldrb.w	fp, [r0, #1]
 801b96c:	fb08 550b 	mla	r5, r8, fp, r5
 801b970:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801b974:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801b978:	fb1b fb03 	smulbb	fp, fp, r3
 801b97c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b97e:	437b      	muls	r3, r7
 801b980:	7817      	ldrb	r7, [r2, #0]
 801b982:	fb0e 3309 	mla	r3, lr, r9, r3
 801b986:	fb01 3307 	mla	r3, r1, r7, r3
 801b98a:	7807      	ldrb	r7, [r0, #0]
 801b98c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801b990:	fb08 3707 	mla	r7, r8, r7, r3
 801b994:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801b996:	fa5f fc8c 	uxtb.w	ip, ip
 801b99a:	fb1c fc03 	smulbb	ip, ip, r3
 801b99e:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801b9a2:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801b9a6:	fb05 b50a 	mla	r5, r5, sl, fp
 801b9aa:	fb07 c70a 	mla	r7, r7, sl, ip
 801b9ae:	b2b6      	uxth	r6, r6
 801b9b0:	b2ad      	uxth	r5, r5
 801b9b2:	b2bf      	uxth	r7, r7
 801b9b4:	1c73      	adds	r3, r6, #1
 801b9b6:	1c7a      	adds	r2, r7, #1
 801b9b8:	f105 0b01 	add.w	fp, r5, #1
 801b9bc:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801b9c0:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801b9c4:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801b9c8:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801b9cc:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801b9d0:	096d      	lsrs	r5, r5, #5
 801b9d2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801b9d4:	4316      	orrs	r6, r2
 801b9d6:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801b9da:	432e      	orrs	r6, r5
 801b9dc:	f823 6b02 	strh.w	r6, [r3], #2
 801b9e0:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801b9e2:	930c      	str	r3, [sp, #48]	; 0x30
 801b9e4:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801b9e6:	4413      	add	r3, r2
 801b9e8:	931f      	str	r3, [sp, #124]	; 0x7c
 801b9ea:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801b9ec:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801b9ee:	4413      	add	r3, r2
 801b9f0:	9320      	str	r3, [sp, #128]	; 0x80
 801b9f2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801b9f4:	3b01      	subs	r3, #1
 801b9f6:	9311      	str	r3, [sp, #68]	; 0x44
 801b9f8:	e6db      	b.n	801b7b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 801b9fa:	b149      	cbz	r1, 801ba10 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801b9fc:	5cb2      	ldrb	r2, [r6, r2]
 801b9fe:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801ba02:	4422      	add	r2, r4
 801ba04:	4628      	mov	r0, r5
 801ba06:	462f      	mov	r7, r5
 801ba08:	e771      	b.n	801b8ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801ba0a:	4628      	mov	r0, r5
 801ba0c:	462a      	mov	r2, r5
 801ba0e:	e76e      	b.n	801b8ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801ba10:	4628      	mov	r0, r5
 801ba12:	462a      	mov	r2, r5
 801ba14:	e7f7      	b.n	801ba06 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801ba16:	b015      	add	sp, #84	; 0x54
 801ba18:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801ba1c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 801ba1c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ba20:	880f      	ldrh	r7, [r1, #0]
 801ba22:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 801ba26:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 801ba2a:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 801ba2e:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 801ba32:	023c      	lsls	r4, r7, #8
 801ba34:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	; 0x38
 801ba38:	f404 0b78 	and.w	fp, r4, #16252928	; 0xf80000
 801ba3c:	017c      	lsls	r4, r7, #5
 801ba3e:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
 801ba42:	00ff      	lsls	r7, r7, #3
 801ba44:	ea4b 0404 	orr.w	r4, fp, r4
 801ba48:	b2ff      	uxtb	r7, r7
 801ba4a:	fb05 ca0e 	mla	sl, r5, lr, ip
 801ba4e:	4327      	orrs	r7, r4
 801ba50:	2d00      	cmp	r5, #0
 801ba52:	eb02 080a 	add.w	r8, r2, sl
 801ba56:	9701      	str	r7, [sp, #4]
 801ba58:	db7e      	blt.n	801bb58 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801ba5a:	45a9      	cmp	r9, r5
 801ba5c:	dd7c      	ble.n	801bb58 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801ba5e:	f1bc 0f00 	cmp.w	ip, #0
 801ba62:	db77      	blt.n	801bb54 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801ba64:	45e6      	cmp	lr, ip
 801ba66:	dd75      	ble.n	801bb54 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801ba68:	f812 700a 	ldrb.w	r7, [r2, sl]
 801ba6c:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801ba70:	441f      	add	r7, r3
 801ba72:	f11c 0201 	adds.w	r2, ip, #1
 801ba76:	d472      	bmi.n	801bb5e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801ba78:	4596      	cmp	lr, r2
 801ba7a:	dd70      	ble.n	801bb5e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801ba7c:	2800      	cmp	r0, #0
 801ba7e:	d06e      	beq.n	801bb5e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801ba80:	f898 4001 	ldrb.w	r4, [r8, #1]
 801ba84:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801ba88:	441c      	add	r4, r3
 801ba8a:	3501      	adds	r5, #1
 801ba8c:	d46b      	bmi.n	801bb66 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801ba8e:	45a9      	cmp	r9, r5
 801ba90:	dd69      	ble.n	801bb66 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801ba92:	2e00      	cmp	r6, #0
 801ba94:	d067      	beq.n	801bb66 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801ba96:	f1bc 0f00 	cmp.w	ip, #0
 801ba9a:	db62      	blt.n	801bb62 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801ba9c:	45e6      	cmp	lr, ip
 801ba9e:	dd60      	ble.n	801bb62 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801baa0:	f818 500e 	ldrb.w	r5, [r8, lr]
 801baa4:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801baa8:	441d      	add	r5, r3
 801baaa:	f11c 0201 	adds.w	r2, ip, #1
 801baae:	d45d      	bmi.n	801bb6c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801bab0:	4596      	cmp	lr, r2
 801bab2:	dd5b      	ble.n	801bb6c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801bab4:	2800      	cmp	r0, #0
 801bab6:	d059      	beq.n	801bb6c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801bab8:	44c6      	add	lr, r8
 801baba:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801babe:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801bac2:	4413      	add	r3, r2
 801bac4:	b280      	uxth	r0, r0
 801bac6:	b2b2      	uxth	r2, r6
 801bac8:	fb00 f602 	mul.w	r6, r0, r2
 801bacc:	0100      	lsls	r0, r0, #4
 801bace:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 801bad2:	f5c0 7880 	rsb	r8, r0, #256	; 0x100
 801bad6:	1b80      	subs	r0, r0, r6
 801bad8:	fa1f fc82 	uxth.w	ip, r2
 801badc:	b282      	uxth	r2, r0
 801bade:	78a0      	ldrb	r0, [r4, #2]
 801bae0:	f897 e002 	ldrb.w	lr, [r7, #2]
 801bae4:	f897 9000 	ldrb.w	r9, [r7]
 801bae8:	787f      	ldrb	r7, [r7, #1]
 801baea:	eba8 080c 	sub.w	r8, r8, ip
 801baee:	fa1f f888 	uxth.w	r8, r8
 801baf2:	4350      	muls	r0, r2
 801baf4:	fb08 0e0e 	mla	lr, r8, lr, r0
 801baf8:	78a8      	ldrb	r0, [r5, #2]
 801bafa:	fb0c e000 	mla	r0, ip, r0, lr
 801bafe:	f893 e002 	ldrb.w	lr, [r3, #2]
 801bb02:	fb06 0e0e 	mla	lr, r6, lr, r0
 801bb06:	f40e 4078 	and.w	r0, lr, #63488	; 0xf800
 801bb0a:	f894 e000 	ldrb.w	lr, [r4]
 801bb0e:	fb02 fe0e 	mul.w	lr, r2, lr
 801bb12:	fb08 e909 	mla	r9, r8, r9, lr
 801bb16:	f895 e000 	ldrb.w	lr, [r5]
 801bb1a:	fb0c 990e 	mla	r9, ip, lr, r9
 801bb1e:	f893 e000 	ldrb.w	lr, [r3]
 801bb22:	785b      	ldrb	r3, [r3, #1]
 801bb24:	fb06 9e0e 	mla	lr, r6, lr, r9
 801bb28:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801bb2c:	ea4e 0e00 	orr.w	lr, lr, r0
 801bb30:	7860      	ldrb	r0, [r4, #1]
 801bb32:	4350      	muls	r0, r2
 801bb34:	786a      	ldrb	r2, [r5, #1]
 801bb36:	fb08 0007 	mla	r0, r8, r7, r0
 801bb3a:	fb0c 0202 	mla	r2, ip, r2, r0
 801bb3e:	fb06 2303 	mla	r3, r6, r3, r2
 801bb42:	095b      	lsrs	r3, r3, #5
 801bb44:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801bb48:	ea4e 0303 	orr.w	r3, lr, r3
 801bb4c:	800b      	strh	r3, [r1, #0]
 801bb4e:	b003      	add	sp, #12
 801bb50:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bb54:	af01      	add	r7, sp, #4
 801bb56:	e78c      	b.n	801ba72 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 801bb58:	ac01      	add	r4, sp, #4
 801bb5a:	4627      	mov	r7, r4
 801bb5c:	e795      	b.n	801ba8a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801bb5e:	ac01      	add	r4, sp, #4
 801bb60:	e793      	b.n	801ba8a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801bb62:	ad01      	add	r5, sp, #4
 801bb64:	e7a1      	b.n	801baaa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 801bb66:	ab01      	add	r3, sp, #4
 801bb68:	461d      	mov	r5, r3
 801bb6a:	e7ab      	b.n	801bac4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 801bb6c:	ab01      	add	r3, sp, #4
 801bb6e:	e7a9      	b.n	801bac4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

0801bb70 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801bb70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bb74:	b08f      	sub	sp, #60	; 0x3c
 801bb76:	e9dd b519 	ldrd	fp, r5, [sp, #100]	; 0x64
 801bb7a:	920c      	str	r2, [sp, #48]	; 0x30
 801bb7c:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 801bb7e:	910a      	str	r1, [sp, #40]	; 0x28
 801bb80:	9306      	str	r3, [sp, #24]
 801bb82:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	; 0x78
 801bb86:	900d      	str	r0, [sp, #52]	; 0x34
 801bb88:	6850      	ldr	r0, [r2, #4]
 801bb8a:	6812      	ldr	r2, [r2, #0]
 801bb8c:	fb00 1303 	mla	r3, r0, r3, r1
 801bb90:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801bb94:	9307      	str	r3, [sp, #28]
 801bb96:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801bb98:	681b      	ldr	r3, [r3, #0]
 801bb9a:	9308      	str	r3, [sp, #32]
 801bb9c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801bb9e:	685c      	ldr	r4, [r3, #4]
 801bba0:	3404      	adds	r4, #4
 801bba2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801bba4:	2b00      	cmp	r3, #0
 801bba6:	dc03      	bgt.n	801bbb0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801bba8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801bbaa:	2b00      	cmp	r3, #0
 801bbac:	f340 81d6 	ble.w	801bf5c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801bbb0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801bbb2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801bbb6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801bbba:	1e48      	subs	r0, r1, #1
 801bbbc:	1e56      	subs	r6, r2, #1
 801bbbe:	9b06      	ldr	r3, [sp, #24]
 801bbc0:	2b00      	cmp	r3, #0
 801bbc2:	f340 80b7 	ble.w	801bd34 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 801bbc6:	ea5f 472b 	movs.w	r7, fp, asr #16
 801bbca:	ea4f 4325 	mov.w	r3, r5, asr #16
 801bbce:	d406      	bmi.n	801bbde <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801bbd0:	4287      	cmp	r7, r0
 801bbd2:	da04      	bge.n	801bbde <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801bbd4:	2b00      	cmp	r3, #0
 801bbd6:	db02      	blt.n	801bbde <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801bbd8:	42b3      	cmp	r3, r6
 801bbda:	f2c0 80ac 	blt.w	801bd36 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801bbde:	3701      	adds	r7, #1
 801bbe0:	f100 809d 	bmi.w	801bd1e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801bbe4:	42b9      	cmp	r1, r7
 801bbe6:	f2c0 809a 	blt.w	801bd1e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801bbea:	3301      	adds	r3, #1
 801bbec:	f100 8097 	bmi.w	801bd1e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801bbf0:	429a      	cmp	r2, r3
 801bbf2:	f2c0 8094 	blt.w	801bd1e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801bbf6:	9b06      	ldr	r3, [sp, #24]
 801bbf8:	930b      	str	r3, [sp, #44]	; 0x2c
 801bbfa:	9b07      	ldr	r3, [sp, #28]
 801bbfc:	9309      	str	r3, [sp, #36]	; 0x24
 801bbfe:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801bc00:	2b00      	cmp	r3, #0
 801bc02:	f340 80b5 	ble.w	801bd70 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801bc06:	9820      	ldr	r0, [sp, #128]	; 0x80
 801bc08:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801bc0a:	68c7      	ldr	r7, [r0, #12]
 801bc0c:	6892      	ldr	r2, [r2, #8]
 801bc0e:	ea5f 402b 	movs.w	r0, fp, asr #16
 801bc12:	ea4f 4625 	mov.w	r6, r5, asr #16
 801bc16:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801bc1a:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801bc1e:	f100 80fb 	bmi.w	801be18 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801bc22:	f102 3cff 	add.w	ip, r2, #4294967295
 801bc26:	4560      	cmp	r0, ip
 801bc28:	f280 80f6 	bge.w	801be18 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801bc2c:	2e00      	cmp	r6, #0
 801bc2e:	f2c0 80f3 	blt.w	801be18 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801bc32:	f107 3cff 	add.w	ip, r7, #4294967295
 801bc36:	4566      	cmp	r6, ip
 801bc38:	f280 80ee 	bge.w	801be18 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801bc3c:	b212      	sxth	r2, r2
 801bc3e:	fb06 0002 	mla	r0, r6, r2, r0
 801bc42:	9e08      	ldr	r6, [sp, #32]
 801bc44:	1837      	adds	r7, r6, r0
 801bc46:	5c30      	ldrb	r0, [r6, r0]
 801bc48:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 801bc4c:	eb04 0c08 	add.w	ip, r4, r8
 801bc50:	2b00      	cmp	r3, #0
 801bc52:	f000 80d3 	beq.w	801bdfc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801bc56:	787e      	ldrb	r6, [r7, #1]
 801bc58:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801bc5c:	4426      	add	r6, r4
 801bc5e:	2900      	cmp	r1, #0
 801bc60:	f000 80d4 	beq.w	801be0c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 801bc64:	18b8      	adds	r0, r7, r2
 801bc66:	5cba      	ldrb	r2, [r7, r2]
 801bc68:	7840      	ldrb	r0, [r0, #1]
 801bc6a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801bc6e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801bc72:	4422      	add	r2, r4
 801bc74:	4420      	add	r0, r4
 801bc76:	b29b      	uxth	r3, r3
 801bc78:	b289      	uxth	r1, r1
 801bc7a:	fb03 f901 	mul.w	r9, r3, r1
 801bc7e:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801bc82:	011b      	lsls	r3, r3, #4
 801bc84:	b289      	uxth	r1, r1
 801bc86:	78b7      	ldrb	r7, [r6, #2]
 801bc88:	f89c a002 	ldrb.w	sl, [ip, #2]
 801bc8c:	f89c c001 	ldrb.w	ip, [ip, #1]
 801bc90:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801bc94:	eba3 0309 	sub.w	r3, r3, r9
 801bc98:	b29b      	uxth	r3, r3
 801bc9a:	ebae 0e01 	sub.w	lr, lr, r1
 801bc9e:	fa1f fe8e 	uxth.w	lr, lr
 801bca2:	435f      	muls	r7, r3
 801bca4:	fb0e 770a 	mla	r7, lr, sl, r7
 801bca8:	f892 a002 	ldrb.w	sl, [r2, #2]
 801bcac:	fb01 770a 	mla	r7, r1, sl, r7
 801bcb0:	f890 a002 	ldrb.w	sl, [r0, #2]
 801bcb4:	fb09 7a0a 	mla	sl, r9, sl, r7
 801bcb8:	f814 7008 	ldrb.w	r7, [r4, r8]
 801bcbc:	f896 8000 	ldrb.w	r8, [r6]
 801bcc0:	7876      	ldrb	r6, [r6, #1]
 801bcc2:	fb03 f808 	mul.w	r8, r3, r8
 801bcc6:	fb0e 8807 	mla	r8, lr, r7, r8
 801bcca:	7817      	ldrb	r7, [r2, #0]
 801bccc:	fb01 8807 	mla	r8, r1, r7, r8
 801bcd0:	7807      	ldrb	r7, [r0, #0]
 801bcd2:	fb09 8707 	mla	r7, r9, r7, r8
 801bcd6:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 801bcda:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801bcde:	ea47 070a 	orr.w	r7, r7, sl
 801bce2:	4373      	muls	r3, r6
 801bce4:	f892 a001 	ldrb.w	sl, [r2, #1]
 801bce8:	fb0e 330c 	mla	r3, lr, ip, r3
 801bcec:	fb01 310a 	mla	r1, r1, sl, r3
 801bcf0:	f890 a001 	ldrb.w	sl, [r0, #1]
 801bcf4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801bcf6:	fb09 1a0a 	mla	sl, r9, sl, r1
 801bcfa:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801bcfe:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801bd02:	ea47 070a 	orr.w	r7, r7, sl
 801bd06:	801f      	strh	r7, [r3, #0]
 801bd08:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801bd0a:	3302      	adds	r3, #2
 801bd0c:	9309      	str	r3, [sp, #36]	; 0x24
 801bd0e:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801bd10:	449b      	add	fp, r3
 801bd12:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801bd14:	441d      	add	r5, r3
 801bd16:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801bd18:	3b01      	subs	r3, #1
 801bd1a:	930b      	str	r3, [sp, #44]	; 0x2c
 801bd1c:	e76f      	b.n	801bbfe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801bd1e:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801bd20:	449b      	add	fp, r3
 801bd22:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801bd24:	441d      	add	r5, r3
 801bd26:	9b06      	ldr	r3, [sp, #24]
 801bd28:	3b01      	subs	r3, #1
 801bd2a:	9306      	str	r3, [sp, #24]
 801bd2c:	9b07      	ldr	r3, [sp, #28]
 801bd2e:	3302      	adds	r3, #2
 801bd30:	9307      	str	r3, [sp, #28]
 801bd32:	e744      	b.n	801bbbe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 801bd34:	d023      	beq.n	801bd7e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 801bd36:	9b06      	ldr	r3, [sp, #24]
 801bd38:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801bd3a:	3b01      	subs	r3, #1
 801bd3c:	fb00 b003 	mla	r0, r0, r3, fp
 801bd40:	1400      	asrs	r0, r0, #16
 801bd42:	f53f af58 	bmi.w	801bbf6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801bd46:	3901      	subs	r1, #1
 801bd48:	4288      	cmp	r0, r1
 801bd4a:	f6bf af54 	bge.w	801bbf6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801bd4e:	991c      	ldr	r1, [sp, #112]	; 0x70
 801bd50:	fb01 5303 	mla	r3, r1, r3, r5
 801bd54:	141b      	asrs	r3, r3, #16
 801bd56:	f53f af4e 	bmi.w	801bbf6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801bd5a:	3a01      	subs	r2, #1
 801bd5c:	4293      	cmp	r3, r2
 801bd5e:	f6bf af4a 	bge.w	801bbf6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801bd62:	9b06      	ldr	r3, [sp, #24]
 801bd64:	9309      	str	r3, [sp, #36]	; 0x24
 801bd66:	9b07      	ldr	r3, [sp, #28]
 801bd68:	930b      	str	r3, [sp, #44]	; 0x2c
 801bd6a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801bd6c:	2b00      	cmp	r3, #0
 801bd6e:	dc70      	bgt.n	801be52 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 801bd70:	9b06      	ldr	r3, [sp, #24]
 801bd72:	9a07      	ldr	r2, [sp, #28]
 801bd74:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801bd78:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801bd7c:	9307      	str	r3, [sp, #28]
 801bd7e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801bd80:	2b00      	cmp	r3, #0
 801bd82:	f340 80eb 	ble.w	801bf5c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801bd86:	ee30 0a04 	vadd.f32	s0, s0, s8
 801bd8a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801bd8e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801bd92:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801bd94:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801bd98:	ee31 1a05 	vadd.f32	s2, s2, s10
 801bd9c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801bda0:	eef0 6a62 	vmov.f32	s13, s5
 801bda4:	ee61 7a27 	vmul.f32	s15, s2, s15
 801bda8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801bdac:	ee77 2a62 	vsub.f32	s5, s14, s5
 801bdb0:	ee16 ba90 	vmov	fp, s13
 801bdb4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801bdb8:	eef0 6a43 	vmov.f32	s13, s6
 801bdbc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801bdc0:	ee12 2a90 	vmov	r2, s5
 801bdc4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801bdc8:	fb92 f3f3 	sdiv	r3, r2, r3
 801bdcc:	ee13 2a10 	vmov	r2, s6
 801bdd0:	931b      	str	r3, [sp, #108]	; 0x6c
 801bdd2:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801bdd4:	fb92 f3f3 	sdiv	r3, r2, r3
 801bdd8:	931c      	str	r3, [sp, #112]	; 0x70
 801bdda:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801bddc:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801bdde:	3b01      	subs	r3, #1
 801bde0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801bde4:	930a      	str	r3, [sp, #40]	; 0x28
 801bde6:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801bde8:	bf08      	it	eq
 801bdea:	4613      	moveq	r3, r2
 801bdec:	ee16 5a90 	vmov	r5, s13
 801bdf0:	9306      	str	r3, [sp, #24]
 801bdf2:	eeb0 3a67 	vmov.f32	s6, s15
 801bdf6:	eef0 2a47 	vmov.f32	s5, s14
 801bdfa:	e6d2      	b.n	801bba2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801bdfc:	b149      	cbz	r1, 801be12 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801bdfe:	5cba      	ldrb	r2, [r7, r2]
 801be00:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801be04:	4422      	add	r2, r4
 801be06:	4660      	mov	r0, ip
 801be08:	4666      	mov	r6, ip
 801be0a:	e734      	b.n	801bc76 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801be0c:	4660      	mov	r0, ip
 801be0e:	4662      	mov	r2, ip
 801be10:	e731      	b.n	801bc76 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801be12:	4660      	mov	r0, ip
 801be14:	4662      	mov	r2, ip
 801be16:	e7f7      	b.n	801be08 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 801be18:	f110 0c01 	adds.w	ip, r0, #1
 801be1c:	f53f af74 	bmi.w	801bd08 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801be20:	4562      	cmp	r2, ip
 801be22:	f6ff af71 	blt.w	801bd08 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801be26:	f116 0c01 	adds.w	ip, r6, #1
 801be2a:	f53f af6d 	bmi.w	801bd08 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801be2e:	4567      	cmp	r7, ip
 801be30:	f6ff af6a 	blt.w	801bd08 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801be34:	b23f      	sxth	r7, r7
 801be36:	b212      	sxth	r2, r2
 801be38:	e9cd 3104 	strd	r3, r1, [sp, #16]
 801be3c:	e9cd 0602 	strd	r0, r6, [sp, #8]
 801be40:	9200      	str	r2, [sp, #0]
 801be42:	9701      	str	r7, [sp, #4]
 801be44:	4623      	mov	r3, r4
 801be46:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801be4a:	980d      	ldr	r0, [sp, #52]	; 0x34
 801be4c:	f7ff fde6 	bl	801ba1c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 801be50:	e75a      	b.n	801bd08 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801be52:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801be54:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801be58:	ea4f 462b 	mov.w	r6, fp, asr #16
 801be5c:	1428      	asrs	r0, r5, #16
 801be5e:	fb02 6000 	mla	r0, r2, r0, r6
 801be62:	9e08      	ldr	r6, [sp, #32]
 801be64:	f816 8000 	ldrb.w	r8, [r6, r0]
 801be68:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801be6c:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801be70:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801be74:	1837      	adds	r7, r6, r0
 801be76:	eb04 0c08 	add.w	ip, r4, r8
 801be7a:	2b00      	cmp	r3, #0
 801be7c:	d060      	beq.n	801bf40 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 801be7e:	787e      	ldrb	r6, [r7, #1]
 801be80:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801be84:	4426      	add	r6, r4
 801be86:	2900      	cmp	r1, #0
 801be88:	d062      	beq.n	801bf50 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 801be8a:	18b8      	adds	r0, r7, r2
 801be8c:	5cba      	ldrb	r2, [r7, r2]
 801be8e:	7840      	ldrb	r0, [r0, #1]
 801be90:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801be94:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801be98:	4422      	add	r2, r4
 801be9a:	4420      	add	r0, r4
 801be9c:	b29b      	uxth	r3, r3
 801be9e:	b289      	uxth	r1, r1
 801bea0:	fb03 f901 	mul.w	r9, r3, r1
 801bea4:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801bea8:	011b      	lsls	r3, r3, #4
 801beaa:	b289      	uxth	r1, r1
 801beac:	78b7      	ldrb	r7, [r6, #2]
 801beae:	f89c a002 	ldrb.w	sl, [ip, #2]
 801beb2:	f89c c001 	ldrb.w	ip, [ip, #1]
 801beb6:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801beba:	eba3 0309 	sub.w	r3, r3, r9
 801bebe:	b29b      	uxth	r3, r3
 801bec0:	ebae 0e01 	sub.w	lr, lr, r1
 801bec4:	fa1f fe8e 	uxth.w	lr, lr
 801bec8:	435f      	muls	r7, r3
 801beca:	fb0e 770a 	mla	r7, lr, sl, r7
 801bece:	f892 a002 	ldrb.w	sl, [r2, #2]
 801bed2:	fb01 770a 	mla	r7, r1, sl, r7
 801bed6:	f890 a002 	ldrb.w	sl, [r0, #2]
 801beda:	fb09 7a0a 	mla	sl, r9, sl, r7
 801bede:	f814 7008 	ldrb.w	r7, [r4, r8]
 801bee2:	f896 8000 	ldrb.w	r8, [r6]
 801bee6:	7876      	ldrb	r6, [r6, #1]
 801bee8:	fb03 f808 	mul.w	r8, r3, r8
 801beec:	fb0e 8807 	mla	r8, lr, r7, r8
 801bef0:	7817      	ldrb	r7, [r2, #0]
 801bef2:	fb01 8807 	mla	r8, r1, r7, r8
 801bef6:	7807      	ldrb	r7, [r0, #0]
 801bef8:	fb09 8707 	mla	r7, r9, r7, r8
 801befc:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 801bf00:	4373      	muls	r3, r6
 801bf02:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801bf06:	7856      	ldrb	r6, [r2, #1]
 801bf08:	ea47 070a 	orr.w	r7, r7, sl
 801bf0c:	fb0e 330c 	mla	r3, lr, ip, r3
 801bf10:	f890 a001 	ldrb.w	sl, [r0, #1]
 801bf14:	fb01 3306 	mla	r3, r1, r6, r3
 801bf18:	fb09 3a0a 	mla	sl, r9, sl, r3
 801bf1c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801bf20:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801bf22:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801bf26:	ea47 070a 	orr.w	r7, r7, sl
 801bf2a:	f823 7b02 	strh.w	r7, [r3], #2
 801bf2e:	930b      	str	r3, [sp, #44]	; 0x2c
 801bf30:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801bf32:	449b      	add	fp, r3
 801bf34:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801bf36:	441d      	add	r5, r3
 801bf38:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801bf3a:	3b01      	subs	r3, #1
 801bf3c:	9309      	str	r3, [sp, #36]	; 0x24
 801bf3e:	e714      	b.n	801bd6a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801bf40:	b149      	cbz	r1, 801bf56 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801bf42:	5cba      	ldrb	r2, [r7, r2]
 801bf44:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801bf48:	4422      	add	r2, r4
 801bf4a:	4660      	mov	r0, ip
 801bf4c:	4666      	mov	r6, ip
 801bf4e:	e7a5      	b.n	801be9c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801bf50:	4660      	mov	r0, ip
 801bf52:	4662      	mov	r2, ip
 801bf54:	e7a2      	b.n	801be9c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801bf56:	4660      	mov	r0, ip
 801bf58:	4662      	mov	r2, ip
 801bf5a:	e7f7      	b.n	801bf4c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 801bf5c:	b00f      	add	sp, #60	; 0x3c
 801bf5e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801bf62 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 801bf62:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bf66:	b085      	sub	sp, #20
 801bf68:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	; 0x40
 801bf6c:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 801bf70:	9102      	str	r1, [sp, #8]
 801bf72:	2c00      	cmp	r4, #0
 801bf74:	fb04 710c 	mla	r1, r4, ip, r7
 801bf78:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 801bf7c:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
 801bf80:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 801bf84:	eb02 0e01 	add.w	lr, r2, r1
 801bf88:	f2c0 8122 	blt.w	801c1d0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801bf8c:	45a0      	cmp	r8, r4
 801bf8e:	f340 811f 	ble.w	801c1d0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801bf92:	2f00      	cmp	r7, #0
 801bf94:	f2c0 811a 	blt.w	801c1cc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801bf98:	45bc      	cmp	ip, r7
 801bf9a:	f340 8117 	ble.w	801c1cc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801bf9e:	5c52      	ldrb	r2, [r2, r1]
 801bfa0:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 801bfa4:	1c7a      	adds	r2, r7, #1
 801bfa6:	f100 8116 	bmi.w	801c1d6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801bfaa:	4594      	cmp	ip, r2
 801bfac:	f340 8113 	ble.w	801c1d6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801bfb0:	2e00      	cmp	r6, #0
 801bfb2:	f000 8112 	beq.w	801c1da <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 801bfb6:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801bfba:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801bfbe:	3401      	adds	r4, #1
 801bfc0:	f100 810f 	bmi.w	801c1e2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801bfc4:	45a0      	cmp	r8, r4
 801bfc6:	f340 810c 	ble.w	801c1e2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801bfca:	2800      	cmp	r0, #0
 801bfcc:	f000 810c 	beq.w	801c1e8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 801bfd0:	2f00      	cmp	r7, #0
 801bfd2:	f2c0 8104 	blt.w	801c1de <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801bfd6:	45bc      	cmp	ip, r7
 801bfd8:	f340 8101 	ble.w	801c1de <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801bfdc:	f81e 200c 	ldrb.w	r2, [lr, ip]
 801bfe0:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 801bfe4:	3701      	adds	r7, #1
 801bfe6:	f100 8102 	bmi.w	801c1ee <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801bfea:	45bc      	cmp	ip, r7
 801bfec:	f340 80ff 	ble.w	801c1ee <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801bff0:	2e00      	cmp	r6, #0
 801bff2:	f000 80fe 	beq.w	801c1f2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 801bff6:	44f4      	add	ip, lr
 801bff8:	f89c 2001 	ldrb.w	r2, [ip, #1]
 801bffc:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 801c000:	b2b6      	uxth	r6, r6
 801c002:	b280      	uxth	r0, r0
 801c004:	fb00 fe06 	mul.w	lr, r0, r6
 801c008:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801c00c:	0136      	lsls	r6, r6, #4
 801c00e:	eba6 070e 	sub.w	r7, r6, lr
 801c012:	b280      	uxth	r0, r0
 801c014:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 801c018:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801c01c:	b2bf      	uxth	r7, r7
 801c01e:	1a1b      	subs	r3, r3, r0
 801c020:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801c024:	b29b      	uxth	r3, r3
 801c026:	fb0a f607 	mul.w	r6, sl, r7
 801c02a:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801c02e:	fb0b 6603 	mla	r6, fp, r3, r6
 801c032:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801c036:	fb00 6609 	mla	r6, r0, r9, r6
 801c03a:	fb0e 6608 	mla	r6, lr, r8, r6
 801c03e:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801c042:	9600      	str	r6, [sp, #0]
 801c044:	2e00      	cmp	r6, #0
 801c046:	f000 80be 	beq.w	801c1c6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 801c04a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801c04e:	fb0b fc0c 	mul.w	ip, fp, ip
 801c052:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801c056:	fb0b f505 	mul.w	r5, fp, r5
 801c05a:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801c05e:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 801c062:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801c066:	44dc      	add	ip, fp
 801c068:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c06c:	9501      	str	r5, [sp, #4]
 801c06e:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 801c072:	9503      	str	r5, [sp, #12]
 801c074:	9d01      	ldr	r5, [sp, #4]
 801c076:	9e02      	ldr	r6, [sp, #8]
 801c078:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 801c07c:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801c080:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 801c084:	fb0a fc0c 	mul.w	ip, sl, ip
 801c088:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801c08c:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801c090:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801c094:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801c098:	4465      	add	r5, ip
 801c09a:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801c09e:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801c0a2:	fb09 fc0c 	mul.w	ip, r9, ip
 801c0a6:	fb09 f904 	mul.w	r9, r9, r4
 801c0aa:	f509 7480 	add.w	r4, r9, #256	; 0x100
 801c0ae:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801c0b2:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 801c0b6:	fb08 f404 	mul.w	r4, r8, r4
 801c0ba:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801c0be:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801c0c2:	fb08 f802 	mul.w	r8, r8, r2
 801c0c6:	fb0a fa01 	mul.w	sl, sl, r1
 801c0ca:	0a22      	lsrs	r2, r4, #8
 801c0cc:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 801c0d0:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801c0d4:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 801c0d8:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801c0dc:	4414      	add	r4, r2
 801c0de:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801c0e2:	f508 7280 	add.w	r2, r8, #256	; 0x100
 801c0e6:	0a2d      	lsrs	r5, r5, #8
 801c0e8:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801c0ec:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801c0f0:	9a03      	ldr	r2, [sp, #12]
 801c0f2:	8836      	ldrh	r6, [r6, #0]
 801c0f4:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801c0f8:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801c0fc:	437d      	muls	r5, r7
 801c0fe:	4461      	add	r1, ip
 801c100:	0a24      	lsrs	r4, r4, #8
 801c102:	fb02 5503 	mla	r5, r2, r3, r5
 801c106:	0a09      	lsrs	r1, r1, #8
 801c108:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801c10c:	fb04 540e 	mla	r4, r4, lr, r5
 801c110:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801c114:	fb01 4100 	mla	r1, r1, r0, r4
 801c118:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c11c:	0a09      	lsrs	r1, r1, #8
 801c11e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801c122:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 801c126:	fb07 f70a 	mul.w	r7, r7, sl
 801c12a:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801c12e:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 801c132:	fb03 7101 	mla	r1, r3, r1, r7
 801c136:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801c13a:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801c13e:	fb0e 1e08 	mla	lr, lr, r8, r1
 801c142:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 801c146:	fb00 e101 	mla	r1, r0, r1, lr
 801c14a:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 801c14e:	9a00      	ldr	r2, [sp, #0]
 801c150:	b287      	uxth	r7, r0
 801c152:	437a      	muls	r2, r7
 801c154:	0a09      	lsrs	r1, r1, #8
 801c156:	1c53      	adds	r3, r2, #1
 801c158:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801c15c:	4321      	orrs	r1, r4
 801c15e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801c162:	1235      	asrs	r5, r6, #8
 801c164:	0c0a      	lsrs	r2, r1, #16
 801c166:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801c16a:	b2db      	uxtb	r3, r3
 801c16c:	fb12 f207 	smulbb	r2, r2, r7
 801c170:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801c174:	fb05 2503 	mla	r5, r5, r3, r2
 801c178:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801c17c:	10f2      	asrs	r2, r6, #3
 801c17e:	b2c8      	uxtb	r0, r1
 801c180:	00f6      	lsls	r6, r6, #3
 801c182:	fb14 f407 	smulbb	r4, r4, r7
 801c186:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801c18a:	b2f6      	uxtb	r6, r6
 801c18c:	fb10 f007 	smulbb	r0, r0, r7
 801c190:	fb02 4203 	mla	r2, r2, r3, r4
 801c194:	b2ad      	uxth	r5, r5
 801c196:	fb06 0303 	mla	r3, r6, r3, r0
 801c19a:	b299      	uxth	r1, r3
 801c19c:	b294      	uxth	r4, r2
 801c19e:	1c6b      	adds	r3, r5, #1
 801c1a0:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801c1a4:	1c62      	adds	r2, r4, #1
 801c1a6:	1c4b      	adds	r3, r1, #1
 801c1a8:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801c1ac:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801c1b0:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801c1b4:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801c1b8:	0952      	lsrs	r2, r2, #5
 801c1ba:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c1be:	432b      	orrs	r3, r5
 801c1c0:	4313      	orrs	r3, r2
 801c1c2:	9a02      	ldr	r2, [sp, #8]
 801c1c4:	8013      	strh	r3, [r2, #0]
 801c1c6:	b005      	add	sp, #20
 801c1c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c1cc:	2500      	movs	r5, #0
 801c1ce:	e6e9      	b.n	801bfa4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 801c1d0:	2100      	movs	r1, #0
 801c1d2:	460d      	mov	r5, r1
 801c1d4:	e6f3      	b.n	801bfbe <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801c1d6:	2100      	movs	r1, #0
 801c1d8:	e6f1      	b.n	801bfbe <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801c1da:	4631      	mov	r1, r6
 801c1dc:	e6ef      	b.n	801bfbe <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801c1de:	2400      	movs	r4, #0
 801c1e0:	e700      	b.n	801bfe4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 801c1e2:	2200      	movs	r2, #0
 801c1e4:	4614      	mov	r4, r2
 801c1e6:	e70b      	b.n	801c000 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801c1e8:	4602      	mov	r2, r0
 801c1ea:	4604      	mov	r4, r0
 801c1ec:	e708      	b.n	801c000 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801c1ee:	2200      	movs	r2, #0
 801c1f0:	e706      	b.n	801c000 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801c1f2:	4632      	mov	r2, r6
 801c1f4:	e704      	b.n	801c000 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

0801c1f6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c1f6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c1fa:	b09f      	sub	sp, #124	; 0x7c
 801c1fc:	921b      	str	r2, [sp, #108]	; 0x6c
 801c1fe:	9309      	str	r3, [sp, #36]	; 0x24
 801c200:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801c202:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 801c206:	931c      	str	r3, [sp, #112]	; 0x70
 801c208:	9119      	str	r1, [sp, #100]	; 0x64
 801c20a:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 801c20e:	901d      	str	r0, [sp, #116]	; 0x74
 801c210:	6850      	ldr	r0, [r2, #4]
 801c212:	6812      	ldr	r2, [r2, #0]
 801c214:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 801c216:	fb00 1303 	mla	r3, r0, r3, r1
 801c21a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801c21e:	930c      	str	r3, [sp, #48]	; 0x30
 801c220:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801c222:	681b      	ldr	r3, [r3, #0]
 801c224:	9312      	str	r3, [sp, #72]	; 0x48
 801c226:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801c228:	685e      	ldr	r6, [r3, #4]
 801c22a:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 801c22e:	930d      	str	r3, [sp, #52]	; 0x34
 801c230:	3604      	adds	r6, #4
 801c232:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801c234:	2b00      	cmp	r3, #0
 801c236:	dc03      	bgt.n	801c240 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801c238:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801c23a:	2b00      	cmp	r3, #0
 801c23c:	f340 8388 	ble.w	801c950 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 801c240:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801c242:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c246:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801c24a:	1e48      	subs	r0, r1, #1
 801c24c:	1e57      	subs	r7, r2, #1
 801c24e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c250:	2b00      	cmp	r3, #0
 801c252:	f340 8195 	ble.w	801c580 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801c256:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801c258:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801c25c:	ea4f 4325 	mov.w	r3, r5, asr #16
 801c260:	d406      	bmi.n	801c270 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801c262:	4584      	cmp	ip, r0
 801c264:	da04      	bge.n	801c270 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801c266:	2b00      	cmp	r3, #0
 801c268:	db02      	blt.n	801c270 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801c26a:	42bb      	cmp	r3, r7
 801c26c:	f2c0 8189 	blt.w	801c582 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 801c270:	f11c 0c01 	adds.w	ip, ip, #1
 801c274:	f100 8177 	bmi.w	801c566 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801c278:	4561      	cmp	r1, ip
 801c27a:	f2c0 8174 	blt.w	801c566 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801c27e:	3301      	adds	r3, #1
 801c280:	f100 8171 	bmi.w	801c566 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801c284:	429a      	cmp	r2, r3
 801c286:	f2c0 816e 	blt.w	801c566 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801c28a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c28c:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801c28e:	931a      	str	r3, [sp, #104]	; 0x68
 801c290:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 801c292:	2b00      	cmp	r3, #0
 801c294:	f340 8193 	ble.w	801c5be <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 801c298:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801c29a:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801c29e:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801c2a0:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 801c2a4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801c2a6:	141b      	asrs	r3, r3, #16
 801c2a8:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801c2ac:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801c2b0:	f100 81d6 	bmi.w	801c660 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801c2b4:	f100 38ff 	add.w	r8, r0, #4294967295
 801c2b8:	4543      	cmp	r3, r8
 801c2ba:	f280 81d1 	bge.w	801c660 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801c2be:	f1bc 0f00 	cmp.w	ip, #0
 801c2c2:	f2c0 81cd 	blt.w	801c660 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801c2c6:	f10e 38ff 	add.w	r8, lr, #4294967295
 801c2ca:	45c4      	cmp	ip, r8
 801c2cc:	f280 81c8 	bge.w	801c660 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801c2d0:	b200      	sxth	r0, r0
 801c2d2:	fb0c 3300 	mla	r3, ip, r0, r3
 801c2d6:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801c2d8:	eb04 0803 	add.w	r8, r4, r3
 801c2dc:	5ce3      	ldrb	r3, [r4, r3]
 801c2de:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801c2e2:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801c2e6:	2a00      	cmp	r2, #0
 801c2e8:	f000 81af 	beq.w	801c64a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801c2ec:	f898 c001 	ldrb.w	ip, [r8, #1]
 801c2f0:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801c2f4:	940e      	str	r4, [sp, #56]	; 0x38
 801c2f6:	0e24      	lsrs	r4, r4, #24
 801c2f8:	9415      	str	r4, [sp, #84]	; 0x54
 801c2fa:	b179      	cbz	r1, 801c31c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801c2fc:	eb08 0c00 	add.w	ip, r8, r0
 801c300:	f818 0000 	ldrb.w	r0, [r8, r0]
 801c304:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801c308:	900a      	str	r0, [sp, #40]	; 0x28
 801c30a:	0e00      	lsrs	r0, r0, #24
 801c30c:	9013      	str	r0, [sp, #76]	; 0x4c
 801c30e:	f89c 0001 	ldrb.w	r0, [ip, #1]
 801c312:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801c316:	900f      	str	r0, [sp, #60]	; 0x3c
 801c318:	0e00      	lsrs	r0, r0, #24
 801c31a:	9016      	str	r0, [sp, #88]	; 0x58
 801c31c:	b292      	uxth	r2, r2
 801c31e:	b289      	uxth	r1, r1
 801c320:	fb02 f901 	mul.w	r9, r2, r1
 801c324:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801c328:	0112      	lsls	r2, r2, #4
 801c32a:	eba2 0809 	sub.w	r8, r2, r9
 801c32e:	b289      	uxth	r1, r1
 801c330:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801c334:	9815      	ldr	r0, [sp, #84]	; 0x54
 801c336:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801c338:	fa1f f888 	uxth.w	r8, r8
 801c33c:	1a52      	subs	r2, r2, r1
 801c33e:	b292      	uxth	r2, r2
 801c340:	fb08 f000 	mul.w	r0, r8, r0
 801c344:	fb02 000e 	mla	r0, r2, lr, r0
 801c348:	fb01 0004 	mla	r0, r1, r4, r0
 801c34c:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801c34e:	fb09 0004 	mla	r0, r9, r4, r0
 801c352:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801c356:	2800      	cmp	r0, #0
 801c358:	f000 80fa 	beq.w	801c550 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801c35c:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801c360:	d01b      	beq.n	801c39a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801c362:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801c366:	fb0e fa0a 	mul.w	sl, lr, sl
 801c36a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801c36e:	fb0e fe03 	mul.w	lr, lr, r3
 801c372:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801c376:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801c37a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801c37e:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801c382:	4453      	add	r3, sl
 801c384:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801c388:	0a1b      	lsrs	r3, r3, #8
 801c38a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c38e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801c392:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801c396:	ea43 030c 	orr.w	r3, r3, ip
 801c39a:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801c39c:	2cff      	cmp	r4, #255	; 0xff
 801c39e:	d021      	beq.n	801c3e4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801c3a0:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801c3a2:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801c3a6:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801c3a8:	fb04 fb0b 	mul.w	fp, r4, fp
 801c3ac:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801c3ae:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801c3b2:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801c3b4:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801c3b8:	fb04 fa0a 	mul.w	sl, r4, sl
 801c3bc:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801c3c0:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801c3c4:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801c3c8:	44de      	add	lr, fp
 801c3ca:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801c3ce:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801c3d2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c3d6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801c3da:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801c3de:	ea4e 040a 	orr.w	r4, lr, sl
 801c3e2:	940e      	str	r4, [sp, #56]	; 0x38
 801c3e4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801c3e6:	2cff      	cmp	r4, #255	; 0xff
 801c3e8:	d021      	beq.n	801c42e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 801c3ea:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801c3ec:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801c3f0:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801c3f2:	fb04 fb0b 	mul.w	fp, r4, fp
 801c3f6:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801c3f8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801c3fc:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801c3fe:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801c402:	fb04 fa0a 	mul.w	sl, r4, sl
 801c406:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801c40a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801c40e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801c412:	44de      	add	lr, fp
 801c414:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801c418:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801c41c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c420:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801c424:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801c428:	ea4e 040a 	orr.w	r4, lr, sl
 801c42c:	940a      	str	r4, [sp, #40]	; 0x28
 801c42e:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801c430:	2cff      	cmp	r4, #255	; 0xff
 801c432:	d021      	beq.n	801c478 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 801c434:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801c436:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801c43a:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801c43c:	fb04 fb0b 	mul.w	fp, r4, fp
 801c440:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801c442:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801c446:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801c448:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801c44c:	fb04 fa0a 	mul.w	sl, r4, sl
 801c450:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801c454:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801c458:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801c45c:	44de      	add	lr, fp
 801c45e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801c462:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801c466:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c46a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801c46e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801c472:	ea4e 040a 	orr.w	r4, lr, sl
 801c476:	940f      	str	r4, [sp, #60]	; 0x3c
 801c478:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801c47a:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801c47e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801c480:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 801c484:	fb08 fc0c 	mul.w	ip, r8, ip
 801c488:	fb02 cc0e 	mla	ip, r2, lr, ip
 801c48c:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801c490:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801c492:	fb01 cc0e 	mla	ip, r1, lr, ip
 801c496:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801c49a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801c49c:	fb09 cc0e 	mla	ip, r9, lr, ip
 801c4a0:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 801c4a4:	fb08 f80e 	mul.w	r8, r8, lr
 801c4a8:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801c4ac:	fb02 8303 	mla	r3, r2, r3, r8
 801c4b0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801c4b2:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801c4b4:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801c4b8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801c4ba:	fb01 330a 	mla	r3, r1, sl, r3
 801c4be:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 801c4c2:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801c4c4:	fb09 3901 	mla	r9, r9, r1, r3
 801c4c8:	4342      	muls	r2, r0
 801c4ca:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c4ce:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801c4d2:	883b      	ldrh	r3, [r7, #0]
 801c4d4:	1c50      	adds	r0, r2, #1
 801c4d6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801c4da:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801c4de:	ea4c 0c09 	orr.w	ip, ip, r9
 801c4e2:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801c4e6:	1219      	asrs	r1, r3, #8
 801c4e8:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801c4ec:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801c4f0:	b2c0      	uxtb	r0, r0
 801c4f2:	fb12 f204 	smulbb	r2, r2, r4
 801c4f6:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801c4fa:	fb01 2100 	mla	r1, r1, r0, r2
 801c4fe:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801c502:	10da      	asrs	r2, r3, #3
 801c504:	fa5f fc8c 	uxtb.w	ip, ip
 801c508:	00db      	lsls	r3, r3, #3
 801c50a:	fb1c fc04 	smulbb	ip, ip, r4
 801c50e:	b2db      	uxtb	r3, r3
 801c510:	b289      	uxth	r1, r1
 801c512:	fb03 c300 	mla	r3, r3, r0, ip
 801c516:	fa1f fc83 	uxth.w	ip, r3
 801c51a:	1c4b      	adds	r3, r1, #1
 801c51c:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801c520:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801c524:	fb1e fe04 	smulbb	lr, lr, r4
 801c528:	f10c 0301 	add.w	r3, ip, #1
 801c52c:	fb02 e200 	mla	r2, r2, r0, lr
 801c530:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801c534:	b292      	uxth	r2, r2
 801c536:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801c53a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801c53e:	430b      	orrs	r3, r1
 801c540:	1c51      	adds	r1, r2, #1
 801c542:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801c546:	0952      	lsrs	r2, r2, #5
 801c548:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c54c:	4313      	orrs	r3, r2
 801c54e:	803b      	strh	r3, [r7, #0]
 801c550:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801c552:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801c554:	441a      	add	r2, r3
 801c556:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801c558:	9229      	str	r2, [sp, #164]	; 0xa4
 801c55a:	441d      	add	r5, r3
 801c55c:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 801c55e:	3b01      	subs	r3, #1
 801c560:	3702      	adds	r7, #2
 801c562:	931a      	str	r3, [sp, #104]	; 0x68
 801c564:	e694      	b.n	801c290 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801c566:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801c568:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801c56a:	441c      	add	r4, r3
 801c56c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801c56e:	9429      	str	r4, [sp, #164]	; 0xa4
 801c570:	441d      	add	r5, r3
 801c572:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c574:	3b01      	subs	r3, #1
 801c576:	9309      	str	r3, [sp, #36]	; 0x24
 801c578:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801c57a:	3302      	adds	r3, #2
 801c57c:	930c      	str	r3, [sp, #48]	; 0x30
 801c57e:	e666      	b.n	801c24e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801c580:	d024      	beq.n	801c5cc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 801c582:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c584:	982b      	ldr	r0, [sp, #172]	; 0xac
 801c586:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801c588:	3b01      	subs	r3, #1
 801c58a:	fb00 4003 	mla	r0, r0, r3, r4
 801c58e:	1400      	asrs	r0, r0, #16
 801c590:	f53f ae7b 	bmi.w	801c28a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801c594:	3901      	subs	r1, #1
 801c596:	4288      	cmp	r0, r1
 801c598:	f6bf ae77 	bge.w	801c28a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801c59c:	992c      	ldr	r1, [sp, #176]	; 0xb0
 801c59e:	fb01 5303 	mla	r3, r1, r3, r5
 801c5a2:	141b      	asrs	r3, r3, #16
 801c5a4:	f53f ae71 	bmi.w	801c28a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801c5a8:	3a01      	subs	r2, #1
 801c5aa:	4293      	cmp	r3, r2
 801c5ac:	f6bf ae6d 	bge.w	801c28a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801c5b0:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801c5b4:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 801c5b8:	f1bb 0f00 	cmp.w	fp, #0
 801c5bc:	dc70      	bgt.n	801c6a0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 801c5be:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c5c0:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801c5c4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801c5c6:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801c5ca:	930c      	str	r3, [sp, #48]	; 0x30
 801c5cc:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801c5ce:	2b00      	cmp	r3, #0
 801c5d0:	f340 81be 	ble.w	801c950 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 801c5d4:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c5d8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801c5dc:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801c5e0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c5e2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c5e6:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c5ea:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c5ee:	eef0 6a62 	vmov.f32	s13, s5
 801c5f2:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c5f6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c5fa:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c5fe:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 801c602:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c606:	eef0 6a43 	vmov.f32	s13, s6
 801c60a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c60e:	ee12 2a90 	vmov	r2, s5
 801c612:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c616:	fb92 f3f3 	sdiv	r3, r2, r3
 801c61a:	ee13 2a10 	vmov	r2, s6
 801c61e:	932b      	str	r3, [sp, #172]	; 0xac
 801c620:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c622:	fb92 f3f3 	sdiv	r3, r2, r3
 801c626:	932c      	str	r3, [sp, #176]	; 0xb0
 801c628:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801c62a:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 801c62c:	3b01      	subs	r3, #1
 801c62e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c632:	9319      	str	r3, [sp, #100]	; 0x64
 801c634:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c636:	bf08      	it	eq
 801c638:	4613      	moveq	r3, r2
 801c63a:	ee16 5a90 	vmov	r5, s13
 801c63e:	9309      	str	r3, [sp, #36]	; 0x24
 801c640:	eeb0 3a67 	vmov.f32	s6, s15
 801c644:	eef0 2a47 	vmov.f32	s5, s14
 801c648:	e5f3      	b.n	801c232 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801c64a:	2900      	cmp	r1, #0
 801c64c:	f43f ae66 	beq.w	801c31c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801c650:	f818 0000 	ldrb.w	r0, [r8, r0]
 801c654:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801c658:	900a      	str	r0, [sp, #40]	; 0x28
 801c65a:	0e00      	lsrs	r0, r0, #24
 801c65c:	9013      	str	r0, [sp, #76]	; 0x4c
 801c65e:	e65d      	b.n	801c31c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801c660:	f113 0801 	adds.w	r8, r3, #1
 801c664:	f53f af74 	bmi.w	801c550 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801c668:	4540      	cmp	r0, r8
 801c66a:	f6ff af71 	blt.w	801c550 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801c66e:	f11c 0801 	adds.w	r8, ip, #1
 801c672:	f53f af6d 	bmi.w	801c550 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801c676:	45c6      	cmp	lr, r8
 801c678:	f6ff af6a 	blt.w	801c550 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801c67c:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 801c67e:	9302      	str	r3, [sp, #8]
 801c680:	b200      	sxth	r0, r0
 801c682:	fa0f f38e 	sxth.w	r3, lr
 801c686:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801c68a:	e9cd c203 	strd	ip, r2, [sp, #12]
 801c68e:	9301      	str	r3, [sp, #4]
 801c690:	9000      	str	r0, [sp, #0]
 801c692:	4633      	mov	r3, r6
 801c694:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801c696:	981d      	ldr	r0, [sp, #116]	; 0x74
 801c698:	4639      	mov	r1, r7
 801c69a:	f7ff fc62 	bl	801bf62 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 801c69e:	e757      	b.n	801c550 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801c6a0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801c6a2:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801c6a4:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801c6a8:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801c6aa:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c6ae:	1427      	asrs	r7, r4, #16
 801c6b0:	142b      	asrs	r3, r5, #16
 801c6b2:	fb01 7303 	mla	r3, r1, r3, r7
 801c6b6:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801c6b8:	18e7      	adds	r7, r4, r3
 801c6ba:	5ce3      	ldrb	r3, [r4, r3]
 801c6bc:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801c6c0:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801c6c4:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801c6c8:	2a00      	cmp	r2, #0
 801c6ca:	f000 8137 	beq.w	801c93c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801c6ce:	f897 e001 	ldrb.w	lr, [r7, #1]
 801c6d2:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801c6d6:	9410      	str	r4, [sp, #64]	; 0x40
 801c6d8:	0e24      	lsrs	r4, r4, #24
 801c6da:	9417      	str	r4, [sp, #92]	; 0x5c
 801c6dc:	b170      	cbz	r0, 801c6fc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801c6de:	eb07 0e01 	add.w	lr, r7, r1
 801c6e2:	5c79      	ldrb	r1, [r7, r1]
 801c6e4:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801c6e8:	910b      	str	r1, [sp, #44]	; 0x2c
 801c6ea:	0e09      	lsrs	r1, r1, #24
 801c6ec:	9114      	str	r1, [sp, #80]	; 0x50
 801c6ee:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801c6f2:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801c6f6:	9111      	str	r1, [sp, #68]	; 0x44
 801c6f8:	0e09      	lsrs	r1, r1, #24
 801c6fa:	9118      	str	r1, [sp, #96]	; 0x60
 801c6fc:	b292      	uxth	r2, r2
 801c6fe:	b280      	uxth	r0, r0
 801c700:	fb02 f800 	mul.w	r8, r2, r0
 801c704:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801c708:	0112      	lsls	r2, r2, #4
 801c70a:	eba2 0e08 	sub.w	lr, r2, r8
 801c70e:	b280      	uxth	r0, r0
 801c710:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801c714:	9917      	ldr	r1, [sp, #92]	; 0x5c
 801c716:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801c718:	fa1f fe8e 	uxth.w	lr, lr
 801c71c:	1a12      	subs	r2, r2, r0
 801c71e:	b292      	uxth	r2, r2
 801c720:	fb0e f101 	mul.w	r1, lr, r1
 801c724:	fb02 110c 	mla	r1, r2, ip, r1
 801c728:	fb00 1104 	mla	r1, r0, r4, r1
 801c72c:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801c72e:	fb08 1104 	mla	r1, r8, r4, r1
 801c732:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801c736:	2900      	cmp	r1, #0
 801c738:	f000 80f5 	beq.w	801c926 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801c73c:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801c740:	d019      	beq.n	801c776 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 801c742:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801c746:	fb0c fa0a 	mul.w	sl, ip, sl
 801c74a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801c74e:	fb0c fc03 	mul.w	ip, ip, r3
 801c752:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801c756:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801c75a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801c75e:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801c762:	4453      	add	r3, sl
 801c764:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801c768:	0a1b      	lsrs	r3, r3, #8
 801c76a:	0a3f      	lsrs	r7, r7, #8
 801c76c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801c770:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801c774:	433b      	orrs	r3, r7
 801c776:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801c778:	2cff      	cmp	r4, #255	; 0xff
 801c77a:	d020      	beq.n	801c7be <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 801c77c:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801c77e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801c782:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801c784:	4367      	muls	r7, r4
 801c786:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801c788:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801c78c:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801c78e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801c792:	fb04 fa0a 	mul.w	sl, r4, sl
 801c796:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801c79a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801c79e:	44bc      	add	ip, r7
 801c7a0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801c7a4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801c7a8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c7ac:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c7b0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801c7b4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801c7b8:	ea4c 040a 	orr.w	r4, ip, sl
 801c7bc:	9410      	str	r4, [sp, #64]	; 0x40
 801c7be:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801c7c0:	2cff      	cmp	r4, #255	; 0xff
 801c7c2:	d020      	beq.n	801c806 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 801c7c4:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801c7c6:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801c7ca:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801c7cc:	4367      	muls	r7, r4
 801c7ce:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801c7d0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801c7d4:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801c7d6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801c7da:	fb04 fa0a 	mul.w	sl, r4, sl
 801c7de:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801c7e2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801c7e6:	44bc      	add	ip, r7
 801c7e8:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801c7ec:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801c7f0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c7f4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c7f8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801c7fc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801c800:	ea4c 040a 	orr.w	r4, ip, sl
 801c804:	940b      	str	r4, [sp, #44]	; 0x2c
 801c806:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801c808:	2cff      	cmp	r4, #255	; 0xff
 801c80a:	d020      	beq.n	801c84e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 801c80c:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801c80e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801c812:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801c814:	4367      	muls	r7, r4
 801c816:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801c818:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801c81c:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801c81e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801c822:	fb04 fa0a 	mul.w	sl, r4, sl
 801c826:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801c82a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801c82e:	44bc      	add	ip, r7
 801c830:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801c834:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801c838:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c83c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c840:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801c844:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801c848:	ea4c 040a 	orr.w	r4, ip, sl
 801c84c:	9411      	str	r4, [sp, #68]	; 0x44
 801c84e:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801c850:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801c854:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801c856:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801c85a:	fb0e f707 	mul.w	r7, lr, r7
 801c85e:	fb02 770c 	mla	r7, r2, ip, r7
 801c862:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801c866:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801c868:	fb00 770c 	mla	r7, r0, ip, r7
 801c86c:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801c870:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801c872:	fb08 770c 	mla	r7, r8, ip, r7
 801c876:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 801c87a:	fb0e fe0c 	mul.w	lr, lr, ip
 801c87e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801c882:	fb02 e303 	mla	r3, r2, r3, lr
 801c886:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801c888:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801c88a:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801c88e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801c890:	fb00 330a 	mla	r3, r0, sl, r3
 801c894:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 801c898:	fb08 3c0c 	mla	ip, r8, ip, r3
 801c89c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c89e:	f8b9 0000 	ldrh.w	r0, [r9]
 801c8a2:	434b      	muls	r3, r1
 801c8a4:	0a3f      	lsrs	r7, r7, #8
 801c8a6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c8aa:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801c8ae:	1c59      	adds	r1, r3, #1
 801c8b0:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801c8b4:	ea47 070c 	orr.w	r7, r7, ip
 801c8b8:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801c8bc:	1202      	asrs	r2, r0, #8
 801c8be:	0c3b      	lsrs	r3, r7, #16
 801c8c0:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801c8c4:	b2c9      	uxtb	r1, r1
 801c8c6:	fb13 f304 	smulbb	r3, r3, r4
 801c8ca:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801c8ce:	fb02 3201 	mla	r2, r2, r1, r3
 801c8d2:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801c8d6:	10c3      	asrs	r3, r0, #3
 801c8d8:	b2ff      	uxtb	r7, r7
 801c8da:	00c0      	lsls	r0, r0, #3
 801c8dc:	b292      	uxth	r2, r2
 801c8de:	fb1c fc04 	smulbb	ip, ip, r4
 801c8e2:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801c8e6:	b2c0      	uxtb	r0, r0
 801c8e8:	fb17 f704 	smulbb	r7, r7, r4
 801c8ec:	fb03 c301 	mla	r3, r3, r1, ip
 801c8f0:	fb00 7001 	mla	r0, r0, r1, r7
 801c8f4:	f102 0c01 	add.w	ip, r2, #1
 801c8f8:	b280      	uxth	r0, r0
 801c8fa:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 801c8fe:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 801c902:	1c42      	adds	r2, r0, #1
 801c904:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801c908:	b29b      	uxth	r3, r3
 801c90a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801c90e:	ea42 020c 	orr.w	r2, r2, ip
 801c912:	f103 0c01 	add.w	ip, r3, #1
 801c916:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801c91a:	095b      	lsrs	r3, r3, #5
 801c91c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801c920:	431a      	orrs	r2, r3
 801c922:	f8a9 2000 	strh.w	r2, [r9]
 801c926:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801c928:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801c92a:	441a      	add	r2, r3
 801c92c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801c92e:	9229      	str	r2, [sp, #164]	; 0xa4
 801c930:	f109 0902 	add.w	r9, r9, #2
 801c934:	441d      	add	r5, r3
 801c936:	f10b 3bff 	add.w	fp, fp, #4294967295
 801c93a:	e63d      	b.n	801c5b8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 801c93c:	2800      	cmp	r0, #0
 801c93e:	f43f aedd 	beq.w	801c6fc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801c942:	5c79      	ldrb	r1, [r7, r1]
 801c944:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801c948:	910b      	str	r1, [sp, #44]	; 0x2c
 801c94a:	0e09      	lsrs	r1, r1, #24
 801c94c:	9114      	str	r1, [sp, #80]	; 0x50
 801c94e:	e6d5      	b.n	801c6fc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801c950:	b01f      	add	sp, #124	; 0x7c
 801c952:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801c956 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 801c956:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c95a:	b089      	sub	sp, #36	; 0x24
 801c95c:	9101      	str	r1, [sp, #4]
 801c95e:	9801      	ldr	r0, [sp, #4]
 801c960:	f9bd c048 	ldrsh.w	ip, [sp, #72]	; 0x48
 801c964:	8800      	ldrh	r0, [r0, #0]
 801c966:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	; 0x4c
 801c96a:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 801c96e:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
 801c972:	1206      	asrs	r6, r0, #8
 801c974:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	; 0x50
 801c978:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801c97c:	9602      	str	r6, [sp, #8]
 801c97e:	10c6      	asrs	r6, r0, #3
 801c980:	00c0      	lsls	r0, r0, #3
 801c982:	b2c0      	uxtb	r0, r0
 801c984:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801c988:	9004      	str	r0, [sp, #16]
 801c98a:	2f00      	cmp	r7, #0
 801c98c:	fb07 100c 	mla	r0, r7, ip, r1
 801c990:	9603      	str	r6, [sp, #12]
 801c992:	eb02 0e00 	add.w	lr, r2, r0
 801c996:	f2c0 810a 	blt.w	801cbae <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801c99a:	45b8      	cmp	r8, r7
 801c99c:	f340 8107 	ble.w	801cbae <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801c9a0:	2900      	cmp	r1, #0
 801c9a2:	f2c0 8102 	blt.w	801cbaa <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801c9a6:	458c      	cmp	ip, r1
 801c9a8:	f340 80ff 	ble.w	801cbaa <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801c9ac:	5c12      	ldrb	r2, [r2, r0]
 801c9ae:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 801c9b2:	1c4a      	adds	r2, r1, #1
 801c9b4:	f100 80fe 	bmi.w	801cbb4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801c9b8:	4594      	cmp	ip, r2
 801c9ba:	f340 80fb 	ble.w	801cbb4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801c9be:	2d00      	cmp	r5, #0
 801c9c0:	f000 80fa 	beq.w	801cbb8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 801c9c4:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801c9c8:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 801c9cc:	3701      	adds	r7, #1
 801c9ce:	f100 80f7 	bmi.w	801cbc0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801c9d2:	45b8      	cmp	r8, r7
 801c9d4:	f340 80f4 	ble.w	801cbc0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801c9d8:	2c00      	cmp	r4, #0
 801c9da:	f000 80f4 	beq.w	801cbc6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 801c9de:	2900      	cmp	r1, #0
 801c9e0:	eb0e 020c 	add.w	r2, lr, ip
 801c9e4:	f2c0 80ea 	blt.w	801cbbc <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801c9e8:	458c      	cmp	ip, r1
 801c9ea:	f340 80e7 	ble.w	801cbbc <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801c9ee:	f81e 700c 	ldrb.w	r7, [lr, ip]
 801c9f2:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 801c9f6:	3101      	adds	r1, #1
 801c9f8:	f100 80e8 	bmi.w	801cbcc <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801c9fc:	458c      	cmp	ip, r1
 801c9fe:	f340 80e5 	ble.w	801cbcc <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801ca02:	2d00      	cmp	r5, #0
 801ca04:	f000 80e4 	beq.w	801cbd0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 801ca08:	7852      	ldrb	r2, [r2, #1]
 801ca0a:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801ca0e:	0e0b      	lsrs	r3, r1, #24
 801ca10:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 801ca14:	9300      	str	r3, [sp, #0]
 801ca16:	b2a4      	uxth	r4, r4
 801ca18:	b2ab      	uxth	r3, r5
 801ca1a:	f000 15ff 	and.w	r5, r0, #16711935	; 0xff00ff
 801ca1e:	fb03 f904 	mul.w	r9, r3, r4
 801ca22:	fb0a f505 	mul.w	r5, sl, r5
 801ca26:	011b      	lsls	r3, r3, #4
 801ca28:	eba3 0e09 	sub.w	lr, r3, r9
 801ca2c:	f5c3 7280 	rsb	r2, r3, #256	; 0x100
 801ca30:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 801ca34:	0a28      	lsrs	r0, r5, #8
 801ca36:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801ca3a:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
 801ca3e:	4405      	add	r5, r0
 801ca40:	0a2d      	lsrs	r5, r5, #8
 801ca42:	fb0a f303 	mul.w	r3, sl, r3
 801ca46:	f005 10ff 	and.w	r0, r5, #16711935	; 0xff00ff
 801ca4a:	9005      	str	r0, [sp, #20]
 801ca4c:	f503 7080 	add.w	r0, r3, #256	; 0x100
 801ca50:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801ca54:	0a1b      	lsrs	r3, r3, #8
 801ca56:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 801ca5a:	9306      	str	r3, [sp, #24]
 801ca5c:	f006 13ff 	and.w	r3, r6, #16711935	; 0xff00ff
 801ca60:	fb0b f303 	mul.w	r3, fp, r3
 801ca64:	0a1d      	lsrs	r5, r3, #8
 801ca66:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801ca6a:	ea4f 6817 	mov.w	r8, r7, lsr #24
 801ca6e:	fb0b f606 	mul.w	r6, fp, r6
 801ca72:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 801ca76:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 801ca7a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801ca7e:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801ca82:	fb08 f707 	mul.w	r7, r8, r7
 801ca86:	441d      	add	r5, r3
 801ca88:	f506 7380 	add.w	r3, r6, #256	; 0x100
 801ca8c:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801ca90:	f507 7380 	add.w	r3, r7, #256	; 0x100
 801ca94:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 801ca98:	fb08 fc0c 	mul.w	ip, r8, ip
 801ca9c:	0a1b      	lsrs	r3, r3, #8
 801ca9e:	9307      	str	r3, [sp, #28]
 801caa0:	ea4f 201c 	mov.w	r0, ip, lsr #8
 801caa4:	0e0b      	lsrs	r3, r1, #24
 801caa6:	f001 17ff 	and.w	r7, r1, #16711935	; 0xff00ff
 801caaa:	435f      	muls	r7, r3
 801caac:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801cab0:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801cab4:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 801cab8:	4460      	add	r0, ip
 801caba:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801cabe:	b2a4      	uxth	r4, r4
 801cac0:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801cac4:	0a2d      	lsrs	r5, r5, #8
 801cac6:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801caca:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801cace:	fa1f fe8e 	uxth.w	lr, lr
 801cad2:	4359      	muls	r1, r3
 801cad4:	1b12      	subs	r2, r2, r4
 801cad6:	9b05      	ldr	r3, [sp, #20]
 801cad8:	44bc      	add	ip, r7
 801cada:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801cade:	b292      	uxth	r2, r2
 801cae0:	fb05 f50e 	mul.w	r5, r5, lr
 801cae4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801cae8:	fb03 5502 	mla	r5, r3, r2, r5
 801caec:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801caf0:	9b06      	ldr	r3, [sp, #24]
 801caf2:	f501 7780 	add.w	r7, r1, #256	; 0x100
 801caf6:	0a36      	lsrs	r6, r6, #8
 801caf8:	0a00      	lsrs	r0, r0, #8
 801cafa:	fb0c 5509 	mla	r5, ip, r9, r5
 801cafe:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801cb02:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801cb06:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801cb0a:	fb00 5504 	mla	r5, r0, r4, r5
 801cb0e:	fb0e f606 	mul.w	r6, lr, r6
 801cb12:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 801cb16:	0a09      	lsrs	r1, r1, #8
 801cb18:	9b07      	ldr	r3, [sp, #28]
 801cb1a:	fb02 6000 	mla	r0, r2, r0, r6
 801cb1e:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801cb22:	fb09 0001 	mla	r0, r9, r1, r0
 801cb26:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801cb2a:	fb0e fe0b 	mul.w	lr, lr, fp
 801cb2e:	fb04 0003 	mla	r0, r4, r3, r0
 801cb32:	fb02 e20a 	mla	r2, r2, sl, lr
 801cb36:	9b00      	ldr	r3, [sp, #0]
 801cb38:	fb04 2408 	mla	r4, r4, r8, r2
 801cb3c:	fb09 4903 	mla	r9, r9, r3, r4
 801cb40:	ea6f 2929 	mvn.w	r9, r9, asr #8
 801cb44:	9b02      	ldr	r3, [sp, #8]
 801cb46:	9a04      	ldr	r2, [sp, #16]
 801cb48:	fa5f f989 	uxtb.w	r9, r9
 801cb4c:	fb03 f109 	mul.w	r1, r3, r9
 801cb50:	9b03      	ldr	r3, [sp, #12]
 801cb52:	0a2d      	lsrs	r5, r5, #8
 801cb54:	0a00      	lsrs	r0, r0, #8
 801cb56:	fb03 f309 	mul.w	r3, r3, r9
 801cb5a:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801cb5e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801cb62:	4305      	orrs	r5, r0
 801cb64:	fb02 f909 	mul.w	r9, r2, r9
 801cb68:	1c58      	adds	r0, r3, #1
 801cb6a:	1c4a      	adds	r2, r1, #1
 801cb6c:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801cb70:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801cb74:	0a2b      	lsrs	r3, r5, #8
 801cb76:	0c2a      	lsrs	r2, r5, #16
 801cb78:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801cb7c:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 801cb80:	00db      	lsls	r3, r3, #3
 801cb82:	0212      	lsls	r2, r2, #8
 801cb84:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 801cb88:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801cb8c:	4313      	orrs	r3, r2
 801cb8e:	f109 0201 	add.w	r2, r9, #1
 801cb92:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 801cb96:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 801cb9a:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801cb9e:	431d      	orrs	r5, r3
 801cba0:	9b01      	ldr	r3, [sp, #4]
 801cba2:	801d      	strh	r5, [r3, #0]
 801cba4:	b009      	add	sp, #36	; 0x24
 801cba6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cbaa:	2000      	movs	r0, #0
 801cbac:	e701      	b.n	801c9b2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 801cbae:	2600      	movs	r6, #0
 801cbb0:	4630      	mov	r0, r6
 801cbb2:	e70b      	b.n	801c9cc <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801cbb4:	2600      	movs	r6, #0
 801cbb6:	e709      	b.n	801c9cc <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801cbb8:	462e      	mov	r6, r5
 801cbba:	e707      	b.n	801c9cc <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801cbbc:	2700      	movs	r7, #0
 801cbbe:	e71a      	b.n	801c9f6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 801cbc0:	2100      	movs	r1, #0
 801cbc2:	460f      	mov	r7, r1
 801cbc4:	e723      	b.n	801ca0e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801cbc6:	4621      	mov	r1, r4
 801cbc8:	4627      	mov	r7, r4
 801cbca:	e720      	b.n	801ca0e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801cbcc:	2100      	movs	r1, #0
 801cbce:	e71e      	b.n	801ca0e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801cbd0:	4629      	mov	r1, r5
 801cbd2:	e71c      	b.n	801ca0e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

0801cbd4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801cbd4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cbd8:	b09b      	sub	sp, #108	; 0x6c
 801cbda:	9218      	str	r2, [sp, #96]	; 0x60
 801cbdc:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801cbde:	9116      	str	r1, [sp, #88]	; 0x58
 801cbe0:	9307      	str	r3, [sp, #28]
 801cbe2:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 801cbe6:	9019      	str	r0, [sp, #100]	; 0x64
 801cbe8:	6850      	ldr	r0, [r2, #4]
 801cbea:	6812      	ldr	r2, [r2, #0]
 801cbec:	9d26      	ldr	r5, [sp, #152]	; 0x98
 801cbee:	fb00 1303 	mla	r3, r0, r3, r1
 801cbf2:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801cbf6:	930a      	str	r3, [sp, #40]	; 0x28
 801cbf8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801cbfa:	681b      	ldr	r3, [r3, #0]
 801cbfc:	930f      	str	r3, [sp, #60]	; 0x3c
 801cbfe:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801cc00:	685e      	ldr	r6, [r3, #4]
 801cc02:	3604      	adds	r6, #4
 801cc04:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801cc06:	2b00      	cmp	r3, #0
 801cc08:	dc03      	bgt.n	801cc12 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801cc0a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801cc0c:	2b00      	cmp	r3, #0
 801cc0e:	f340 8373 	ble.w	801d2f8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801cc12:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801cc14:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801cc18:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801cc1c:	1e48      	subs	r0, r1, #1
 801cc1e:	1e57      	subs	r7, r2, #1
 801cc20:	9b07      	ldr	r3, [sp, #28]
 801cc22:	2b00      	cmp	r3, #0
 801cc24:	f340 8190 	ble.w	801cf48 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801cc28:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801cc2a:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801cc2e:	ea4f 4325 	mov.w	r3, r5, asr #16
 801cc32:	d406      	bmi.n	801cc42 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801cc34:	4584      	cmp	ip, r0
 801cc36:	da04      	bge.n	801cc42 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801cc38:	2b00      	cmp	r3, #0
 801cc3a:	db02      	blt.n	801cc42 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801cc3c:	42bb      	cmp	r3, r7
 801cc3e:	f2c0 8184 	blt.w	801cf4a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 801cc42:	f11c 0c01 	adds.w	ip, ip, #1
 801cc46:	f100 8172 	bmi.w	801cf2e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801cc4a:	4561      	cmp	r1, ip
 801cc4c:	f2c0 816f 	blt.w	801cf2e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801cc50:	3301      	adds	r3, #1
 801cc52:	f100 816c 	bmi.w	801cf2e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801cc56:	429a      	cmp	r2, r3
 801cc58:	f2c0 8169 	blt.w	801cf2e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801cc5c:	9b07      	ldr	r3, [sp, #28]
 801cc5e:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801cc60:	9317      	str	r3, [sp, #92]	; 0x5c
 801cc62:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801cc64:	2b00      	cmp	r3, #0
 801cc66:	f340 818e 	ble.w	801cf86 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 801cc6a:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801cc6c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801cc70:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801cc72:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 801cc76:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801cc78:	141b      	asrs	r3, r3, #16
 801cc7a:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801cc7e:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801cc82:	f100 81d1 	bmi.w	801d028 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801cc86:	f101 38ff 	add.w	r8, r1, #4294967295
 801cc8a:	4543      	cmp	r3, r8
 801cc8c:	f280 81cc 	bge.w	801d028 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801cc90:	f1bc 0f00 	cmp.w	ip, #0
 801cc94:	f2c0 81c8 	blt.w	801d028 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801cc98:	f10e 38ff 	add.w	r8, lr, #4294967295
 801cc9c:	45c4      	cmp	ip, r8
 801cc9e:	f280 81c3 	bge.w	801d028 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801cca2:	b209      	sxth	r1, r1
 801cca4:	fb0c 3301 	mla	r3, ip, r1, r3
 801cca8:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801ccaa:	eb04 0803 	add.w	r8, r4, r3
 801ccae:	5ce3      	ldrb	r3, [r4, r3]
 801ccb0:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801ccb4:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801ccb8:	2a00      	cmp	r2, #0
 801ccba:	f000 81aa 	beq.w	801d012 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 801ccbe:	f898 c001 	ldrb.w	ip, [r8, #1]
 801ccc2:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801ccc6:	940b      	str	r4, [sp, #44]	; 0x2c
 801ccc8:	0e24      	lsrs	r4, r4, #24
 801ccca:	9412      	str	r4, [sp, #72]	; 0x48
 801cccc:	b178      	cbz	r0, 801ccee <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801ccce:	eb08 0c01 	add.w	ip, r8, r1
 801ccd2:	f818 1001 	ldrb.w	r1, [r8, r1]
 801ccd6:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801ccda:	9108      	str	r1, [sp, #32]
 801ccdc:	0e09      	lsrs	r1, r1, #24
 801ccde:	9110      	str	r1, [sp, #64]	; 0x40
 801cce0:	f89c 1001 	ldrb.w	r1, [ip, #1]
 801cce4:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801cce8:	910c      	str	r1, [sp, #48]	; 0x30
 801ccea:	0e09      	lsrs	r1, r1, #24
 801ccec:	9113      	str	r1, [sp, #76]	; 0x4c
 801ccee:	b292      	uxth	r2, r2
 801ccf0:	b280      	uxth	r0, r0
 801ccf2:	fb02 f900 	mul.w	r9, r2, r0
 801ccf6:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801ccfa:	0112      	lsls	r2, r2, #4
 801ccfc:	eba2 0809 	sub.w	r8, r2, r9
 801cd00:	b280      	uxth	r0, r0
 801cd02:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801cd06:	9912      	ldr	r1, [sp, #72]	; 0x48
 801cd08:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801cd0a:	fa1f f888 	uxth.w	r8, r8
 801cd0e:	1a12      	subs	r2, r2, r0
 801cd10:	b292      	uxth	r2, r2
 801cd12:	fb08 f101 	mul.w	r1, r8, r1
 801cd16:	fb02 110e 	mla	r1, r2, lr, r1
 801cd1a:	fb00 1104 	mla	r1, r0, r4, r1
 801cd1e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801cd20:	fb09 1104 	mla	r1, r9, r4, r1
 801cd24:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801cd28:	2900      	cmp	r1, #0
 801cd2a:	f000 80f5 	beq.w	801cf18 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801cd2e:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801cd32:	d01b      	beq.n	801cd6c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801cd34:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801cd38:	fb0e fa0a 	mul.w	sl, lr, sl
 801cd3c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801cd40:	fb0e fe03 	mul.w	lr, lr, r3
 801cd44:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801cd48:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801cd4c:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801cd50:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801cd54:	4453      	add	r3, sl
 801cd56:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801cd5a:	0a1b      	lsrs	r3, r3, #8
 801cd5c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801cd60:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801cd64:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801cd68:	ea43 030c 	orr.w	r3, r3, ip
 801cd6c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801cd6e:	2cff      	cmp	r4, #255	; 0xff
 801cd70:	d021      	beq.n	801cdb6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 801cd72:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801cd74:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801cd78:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801cd7a:	fb04 fb0b 	mul.w	fp, r4, fp
 801cd7e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801cd80:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801cd84:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801cd86:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801cd8a:	fb04 fa0a 	mul.w	sl, r4, sl
 801cd8e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801cd92:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801cd96:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801cd9a:	44de      	add	lr, fp
 801cd9c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801cda0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801cda4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801cda8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801cdac:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801cdb0:	ea4e 040a 	orr.w	r4, lr, sl
 801cdb4:	940b      	str	r4, [sp, #44]	; 0x2c
 801cdb6:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801cdb8:	2cff      	cmp	r4, #255	; 0xff
 801cdba:	d021      	beq.n	801ce00 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 801cdbc:	9c08      	ldr	r4, [sp, #32]
 801cdbe:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801cdc2:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801cdc4:	fb04 fb0b 	mul.w	fp, r4, fp
 801cdc8:	9c08      	ldr	r4, [sp, #32]
 801cdca:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801cdce:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801cdd0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801cdd4:	fb04 fa0a 	mul.w	sl, r4, sl
 801cdd8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801cddc:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801cde0:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801cde4:	44de      	add	lr, fp
 801cde6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801cdea:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801cdee:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801cdf2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801cdf6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801cdfa:	ea4e 040a 	orr.w	r4, lr, sl
 801cdfe:	9408      	str	r4, [sp, #32]
 801ce00:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801ce02:	2cff      	cmp	r4, #255	; 0xff
 801ce04:	d021      	beq.n	801ce4a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801ce06:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801ce08:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801ce0c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801ce0e:	fb04 fb0b 	mul.w	fp, r4, fp
 801ce12:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801ce14:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801ce18:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801ce1a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801ce1e:	fb04 fa0a 	mul.w	sl, r4, sl
 801ce22:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ce26:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801ce2a:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801ce2e:	44de      	add	lr, fp
 801ce30:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801ce34:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801ce38:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ce3c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ce40:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ce44:	ea4e 040a 	orr.w	r4, lr, sl
 801ce48:	940c      	str	r4, [sp, #48]	; 0x30
 801ce4a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801ce4c:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801ce50:	9c08      	ldr	r4, [sp, #32]
 801ce52:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 801ce56:	fb08 fc0c 	mul.w	ip, r8, ip
 801ce5a:	fb02 cc0e 	mla	ip, r2, lr, ip
 801ce5e:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801ce62:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801ce64:	fb00 cc0e 	mla	ip, r0, lr, ip
 801ce68:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801ce6c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801ce6e:	fb09 cc0e 	mla	ip, r9, lr, ip
 801ce72:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 801ce76:	fb08 f80e 	mul.w	r8, r8, lr
 801ce7a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801ce7e:	fb02 8303 	mla	r3, r2, r3, r8
 801ce82:	9a08      	ldr	r2, [sp, #32]
 801ce84:	f8b7 8000 	ldrh.w	r8, [r7]
 801ce88:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801ce8c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801ce8e:	fb00 330a 	mla	r3, r0, sl, r3
 801ce92:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 801ce96:	fb09 3900 	mla	r9, r9, r0, r3
 801ce9a:	43c9      	mvns	r1, r1
 801ce9c:	ea4f 2228 	mov.w	r2, r8, asr #8
 801cea0:	fa5f fe81 	uxtb.w	lr, r1
 801cea4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801cea8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801ceac:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801ceb0:	fb02 f20e 	mul.w	r2, r2, lr
 801ceb4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ceb8:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801cebc:	ea4c 0c09 	orr.w	ip, ip, r9
 801cec0:	1c53      	adds	r3, r2, #1
 801cec2:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 801cec6:	ea4f 00e8 	mov.w	r0, r8, asr #3
 801ceca:	ea4f 431c 	mov.w	r3, ip, lsr #16
 801cece:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801ced2:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801ced6:	4a63      	ldr	r2, [pc, #396]	; (801d064 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 801ced8:	fb00 f00e 	mul.w	r0, r0, lr
 801cedc:	b2db      	uxtb	r3, r3
 801cede:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 801cee2:	1c43      	adds	r3, r0, #1
 801cee4:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801cee8:	ea4f 231c 	mov.w	r3, ip, lsr #8
 801ceec:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 801cef0:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801cef4:	b2c9      	uxtb	r1, r1
 801cef6:	00db      	lsls	r3, r3, #3
 801cef8:	fb01 f10e 	mul.w	r1, r1, lr
 801cefc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801cf00:	4313      	orrs	r3, r2
 801cf02:	1c4a      	adds	r2, r1, #1
 801cf04:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801cf08:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801cf0c:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801cf10:	ea4c 0c03 	orr.w	ip, ip, r3
 801cf14:	f8a7 c000 	strh.w	ip, [r7]
 801cf18:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801cf1a:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801cf1c:	441a      	add	r2, r3
 801cf1e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801cf20:	9225      	str	r2, [sp, #148]	; 0x94
 801cf22:	441d      	add	r5, r3
 801cf24:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801cf26:	3b01      	subs	r3, #1
 801cf28:	3702      	adds	r7, #2
 801cf2a:	9317      	str	r3, [sp, #92]	; 0x5c
 801cf2c:	e699      	b.n	801cc62 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801cf2e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801cf30:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801cf32:	441c      	add	r4, r3
 801cf34:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801cf36:	9425      	str	r4, [sp, #148]	; 0x94
 801cf38:	441d      	add	r5, r3
 801cf3a:	9b07      	ldr	r3, [sp, #28]
 801cf3c:	3b01      	subs	r3, #1
 801cf3e:	9307      	str	r3, [sp, #28]
 801cf40:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801cf42:	3302      	adds	r3, #2
 801cf44:	930a      	str	r3, [sp, #40]	; 0x28
 801cf46:	e66b      	b.n	801cc20 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801cf48:	d024      	beq.n	801cf94 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 801cf4a:	9b07      	ldr	r3, [sp, #28]
 801cf4c:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801cf4e:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801cf50:	3b01      	subs	r3, #1
 801cf52:	fb00 4003 	mla	r0, r0, r3, r4
 801cf56:	1400      	asrs	r0, r0, #16
 801cf58:	f53f ae80 	bmi.w	801cc5c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801cf5c:	3901      	subs	r1, #1
 801cf5e:	4288      	cmp	r0, r1
 801cf60:	f6bf ae7c 	bge.w	801cc5c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801cf64:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801cf66:	fb01 5303 	mla	r3, r1, r3, r5
 801cf6a:	141b      	asrs	r3, r3, #16
 801cf6c:	f53f ae76 	bmi.w	801cc5c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801cf70:	3a01      	subs	r2, #1
 801cf72:	4293      	cmp	r3, r2
 801cf74:	f6bf ae72 	bge.w	801cc5c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801cf78:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801cf7c:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 801cf80:	f1bb 0f00 	cmp.w	fp, #0
 801cf84:	dc70      	bgt.n	801d068 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801cf86:	9b07      	ldr	r3, [sp, #28]
 801cf88:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801cf8c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801cf8e:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801cf92:	930a      	str	r3, [sp, #40]	; 0x28
 801cf94:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801cf96:	2b00      	cmp	r3, #0
 801cf98:	f340 81ae 	ble.w	801d2f8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801cf9c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801cfa0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801cfa4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801cfa8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801cfaa:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801cfae:	ee31 1a05 	vadd.f32	s2, s2, s10
 801cfb2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801cfb6:	eef0 6a62 	vmov.f32	s13, s5
 801cfba:	ee61 7a27 	vmul.f32	s15, s2, s15
 801cfbe:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801cfc2:	ee77 2a62 	vsub.f32	s5, s14, s5
 801cfc6:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 801cfca:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801cfce:	eef0 6a43 	vmov.f32	s13, s6
 801cfd2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801cfd6:	ee12 2a90 	vmov	r2, s5
 801cfda:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801cfde:	fb92 f3f3 	sdiv	r3, r2, r3
 801cfe2:	ee13 2a10 	vmov	r2, s6
 801cfe6:	9327      	str	r3, [sp, #156]	; 0x9c
 801cfe8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801cfea:	fb92 f3f3 	sdiv	r3, r2, r3
 801cfee:	9328      	str	r3, [sp, #160]	; 0xa0
 801cff0:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801cff2:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801cff4:	3b01      	subs	r3, #1
 801cff6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801cffa:	9316      	str	r3, [sp, #88]	; 0x58
 801cffc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801cffe:	bf08      	it	eq
 801d000:	4613      	moveq	r3, r2
 801d002:	ee16 5a90 	vmov	r5, s13
 801d006:	9307      	str	r3, [sp, #28]
 801d008:	eeb0 3a67 	vmov.f32	s6, s15
 801d00c:	eef0 2a47 	vmov.f32	s5, s14
 801d010:	e5f8      	b.n	801cc04 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801d012:	2800      	cmp	r0, #0
 801d014:	f43f ae6b 	beq.w	801ccee <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801d018:	f818 1001 	ldrb.w	r1, [r8, r1]
 801d01c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801d020:	9108      	str	r1, [sp, #32]
 801d022:	0e09      	lsrs	r1, r1, #24
 801d024:	9110      	str	r1, [sp, #64]	; 0x40
 801d026:	e662      	b.n	801ccee <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801d028:	f113 0801 	adds.w	r8, r3, #1
 801d02c:	f53f af74 	bmi.w	801cf18 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801d030:	4541      	cmp	r1, r8
 801d032:	f6ff af71 	blt.w	801cf18 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801d036:	f11c 0801 	adds.w	r8, ip, #1
 801d03a:	f53f af6d 	bmi.w	801cf18 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801d03e:	45c6      	cmp	lr, r8
 801d040:	f6ff af6a 	blt.w	801cf18 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801d044:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 801d048:	b209      	sxth	r1, r1
 801d04a:	fa0f f38e 	sxth.w	r3, lr
 801d04e:	e9cd 2004 	strd	r2, r0, [sp, #16]
 801d052:	9301      	str	r3, [sp, #4]
 801d054:	9100      	str	r1, [sp, #0]
 801d056:	4633      	mov	r3, r6
 801d058:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801d05a:	9819      	ldr	r0, [sp, #100]	; 0x64
 801d05c:	4639      	mov	r1, r7
 801d05e:	f7ff fc7a 	bl	801c956 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 801d062:	e759      	b.n	801cf18 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801d064:	fffff800 	.word	0xfffff800
 801d068:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801d06a:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801d06c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801d070:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801d072:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d076:	1427      	asrs	r7, r4, #16
 801d078:	142b      	asrs	r3, r5, #16
 801d07a:	fb01 7303 	mla	r3, r1, r3, r7
 801d07e:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801d080:	18e7      	adds	r7, r4, r3
 801d082:	5ce3      	ldrb	r3, [r4, r3]
 801d084:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801d088:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801d08c:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801d090:	2a00      	cmp	r2, #0
 801d092:	f000 8127 	beq.w	801d2e4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801d096:	f897 e001 	ldrb.w	lr, [r7, #1]
 801d09a:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801d09e:	940d      	str	r4, [sp, #52]	; 0x34
 801d0a0:	0e24      	lsrs	r4, r4, #24
 801d0a2:	9414      	str	r4, [sp, #80]	; 0x50
 801d0a4:	b170      	cbz	r0, 801d0c4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801d0a6:	eb07 0e01 	add.w	lr, r7, r1
 801d0aa:	5c79      	ldrb	r1, [r7, r1]
 801d0ac:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801d0b0:	9109      	str	r1, [sp, #36]	; 0x24
 801d0b2:	0e09      	lsrs	r1, r1, #24
 801d0b4:	9111      	str	r1, [sp, #68]	; 0x44
 801d0b6:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801d0ba:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801d0be:	910e      	str	r1, [sp, #56]	; 0x38
 801d0c0:	0e09      	lsrs	r1, r1, #24
 801d0c2:	9115      	str	r1, [sp, #84]	; 0x54
 801d0c4:	b292      	uxth	r2, r2
 801d0c6:	b280      	uxth	r0, r0
 801d0c8:	fb02 f800 	mul.w	r8, r2, r0
 801d0cc:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801d0d0:	0112      	lsls	r2, r2, #4
 801d0d2:	eba2 0e08 	sub.w	lr, r2, r8
 801d0d6:	b280      	uxth	r0, r0
 801d0d8:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 801d0dc:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801d0de:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801d0e0:	fa1f fe8e 	uxth.w	lr, lr
 801d0e4:	1a09      	subs	r1, r1, r0
 801d0e6:	b289      	uxth	r1, r1
 801d0e8:	fb0e f202 	mul.w	r2, lr, r2
 801d0ec:	fb01 220c 	mla	r2, r1, ip, r2
 801d0f0:	fb00 2204 	mla	r2, r0, r4, r2
 801d0f4:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801d0f6:	fb08 2204 	mla	r2, r8, r4, r2
 801d0fa:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801d0fe:	2a00      	cmp	r2, #0
 801d100:	f000 80e5 	beq.w	801d2ce <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 801d104:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801d108:	d019      	beq.n	801d13e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 801d10a:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801d10e:	fb0c fa0a 	mul.w	sl, ip, sl
 801d112:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801d116:	fb0c fc03 	mul.w	ip, ip, r3
 801d11a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801d11e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801d122:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801d126:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801d12a:	4453      	add	r3, sl
 801d12c:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801d130:	0a1b      	lsrs	r3, r3, #8
 801d132:	0a3f      	lsrs	r7, r7, #8
 801d134:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801d138:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801d13c:	433b      	orrs	r3, r7
 801d13e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801d140:	2cff      	cmp	r4, #255	; 0xff
 801d142:	d020      	beq.n	801d186 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 801d144:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801d146:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801d14a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801d14c:	4367      	muls	r7, r4
 801d14e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801d150:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801d154:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801d156:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801d15a:	fb04 fa0a 	mul.w	sl, r4, sl
 801d15e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801d162:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801d166:	44bc      	add	ip, r7
 801d168:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801d16c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801d170:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d174:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801d178:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801d17c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801d180:	ea4c 040a 	orr.w	r4, ip, sl
 801d184:	940d      	str	r4, [sp, #52]	; 0x34
 801d186:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801d188:	2cff      	cmp	r4, #255	; 0xff
 801d18a:	d020      	beq.n	801d1ce <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 801d18c:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801d18e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801d192:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801d194:	4367      	muls	r7, r4
 801d196:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801d198:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801d19c:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801d19e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801d1a2:	fb04 fa0a 	mul.w	sl, r4, sl
 801d1a6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801d1aa:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801d1ae:	44bc      	add	ip, r7
 801d1b0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801d1b4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801d1b8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d1bc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801d1c0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801d1c4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801d1c8:	ea4c 040a 	orr.w	r4, ip, sl
 801d1cc:	9409      	str	r4, [sp, #36]	; 0x24
 801d1ce:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801d1d0:	2cff      	cmp	r4, #255	; 0xff
 801d1d2:	d020      	beq.n	801d216 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 801d1d4:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801d1d6:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801d1da:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801d1dc:	4367      	muls	r7, r4
 801d1de:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801d1e0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801d1e4:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801d1e6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801d1ea:	fb04 fa0a 	mul.w	sl, r4, sl
 801d1ee:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801d1f2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801d1f6:	44bc      	add	ip, r7
 801d1f8:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801d1fc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801d200:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d204:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801d208:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801d20c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801d210:	ea4c 040a 	orr.w	r4, ip, sl
 801d214:	940e      	str	r4, [sp, #56]	; 0x38
 801d216:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801d218:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801d21c:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801d21e:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801d222:	fb0e f707 	mul.w	r7, lr, r7
 801d226:	fb01 770c 	mla	r7, r1, ip, r7
 801d22a:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801d22e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801d230:	fb00 770c 	mla	r7, r0, ip, r7
 801d234:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801d238:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801d23a:	fb08 770c 	mla	r7, r8, ip, r7
 801d23e:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 801d242:	fb0e fe0c 	mul.w	lr, lr, ip
 801d246:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801d24a:	fb01 e303 	mla	r3, r1, r3, lr
 801d24e:	9909      	ldr	r1, [sp, #36]	; 0x24
 801d250:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801d254:	990e      	ldr	r1, [sp, #56]	; 0x38
 801d256:	fb00 330a 	mla	r3, r0, sl, r3
 801d25a:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 801d25e:	fb08 3c0c 	mla	ip, r8, ip, r3
 801d262:	f8b9 3000 	ldrh.w	r3, [r9]
 801d266:	43d2      	mvns	r2, r2
 801d268:	1218      	asrs	r0, r3, #8
 801d26a:	b2d2      	uxtb	r2, r2
 801d26c:	10d9      	asrs	r1, r3, #3
 801d26e:	0a3f      	lsrs	r7, r7, #8
 801d270:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d274:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801d278:	00db      	lsls	r3, r3, #3
 801d27a:	4350      	muls	r0, r2
 801d27c:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801d280:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801d284:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801d288:	b2db      	uxtb	r3, r3
 801d28a:	ea47 070c 	orr.w	r7, r7, ip
 801d28e:	4351      	muls	r1, r2
 801d290:	4353      	muls	r3, r2
 801d292:	1c42      	adds	r2, r0, #1
 801d294:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801d298:	0c3a      	lsrs	r2, r7, #16
 801d29a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801d29e:	4a18      	ldr	r2, [pc, #96]	; (801d300 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 801d2a0:	b2c0      	uxtb	r0, r0
 801d2a2:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 801d2a6:	1c4a      	adds	r2, r1, #1
 801d2a8:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801d2ac:	0a3a      	lsrs	r2, r7, #8
 801d2ae:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801d2b2:	00c9      	lsls	r1, r1, #3
 801d2b4:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801d2b8:	4301      	orrs	r1, r0
 801d2ba:	1c58      	adds	r0, r3, #1
 801d2bc:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801d2c0:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801d2c4:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 801d2c8:	4308      	orrs	r0, r1
 801d2ca:	f8a9 0000 	strh.w	r0, [r9]
 801d2ce:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801d2d0:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801d2d2:	441a      	add	r2, r3
 801d2d4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801d2d6:	9225      	str	r2, [sp, #148]	; 0x94
 801d2d8:	f109 0902 	add.w	r9, r9, #2
 801d2dc:	441d      	add	r5, r3
 801d2de:	f10b 3bff 	add.w	fp, fp, #4294967295
 801d2e2:	e64d      	b.n	801cf80 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 801d2e4:	2800      	cmp	r0, #0
 801d2e6:	f43f aeed 	beq.w	801d0c4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801d2ea:	5c79      	ldrb	r1, [r7, r1]
 801d2ec:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801d2f0:	9109      	str	r1, [sp, #36]	; 0x24
 801d2f2:	0e09      	lsrs	r1, r1, #24
 801d2f4:	9111      	str	r1, [sp, #68]	; 0x44
 801d2f6:	e6e5      	b.n	801d0c4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801d2f8:	b01b      	add	sp, #108	; 0x6c
 801d2fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d2fe:	bf00      	nop
 801d300:	fffff800 	.word	0xfffff800

0801d304 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 801d304:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d308:	b085      	sub	sp, #20
 801d30a:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 801d30e:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 801d312:	9103      	str	r1, [sp, #12]
 801d314:	fb00 7406 	mla	r4, r0, r6, r7
 801d318:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 801d31c:	2800      	cmp	r0, #0
 801d31e:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 801d322:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 801d326:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 801d32a:	9501      	str	r5, [sp, #4]
 801d32c:	eb03 0904 	add.w	r9, r3, r4
 801d330:	f2c0 8150 	blt.w	801d5d4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801d334:	4583      	cmp	fp, r0
 801d336:	f340 814d 	ble.w	801d5d4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801d33a:	2f00      	cmp	r7, #0
 801d33c:	f2c0 8146 	blt.w	801d5cc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801d340:	42be      	cmp	r6, r7
 801d342:	f340 8143 	ble.w	801d5cc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801d346:	f813 c004 	ldrb.w	ip, [r3, r4]
 801d34a:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 801d34e:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801d352:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 801d356:	4355      	muls	r5, r2
 801d358:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801d35c:	f64f 041f 	movw	r4, #63519	; 0xf81f
 801d360:	fb0c f203 	mul.w	r2, ip, r3
 801d364:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801d368:	f605 0501 	addw	r5, r5, #2049	; 0x801
 801d36c:	441d      	add	r5, r3
 801d36e:	f102 0320 	add.w	r3, r2, #32
 801d372:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801d376:	0a1b      	lsrs	r3, r3, #8
 801d378:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801d37c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801d380:	431c      	orrs	r4, r3
 801d382:	1c7b      	adds	r3, r7, #1
 801d384:	f100 812b 	bmi.w	801d5de <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801d388:	429e      	cmp	r6, r3
 801d38a:	f340 8128 	ble.w	801d5de <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801d38e:	2900      	cmp	r1, #0
 801d390:	f000 8128 	beq.w	801d5e4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 801d394:	9a01      	ldr	r2, [sp, #4]
 801d396:	f899 3001 	ldrb.w	r3, [r9, #1]
 801d39a:	8855      	ldrh	r5, [r2, #2]
 801d39c:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801d3a0:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 801d3a4:	fb08 f802 	mul.w	r8, r8, r2
 801d3a8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801d3ac:	f64f 021f 	movw	r2, #63519	; 0xf81f
 801d3b0:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801d3b4:	435d      	muls	r5, r3
 801d3b6:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801d3ba:	44d0      	add	r8, sl
 801d3bc:	f105 0a20 	add.w	sl, r5, #32
 801d3c0:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801d3c4:	0a2d      	lsrs	r5, r5, #8
 801d3c6:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801d3ca:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801d3ce:	432a      	orrs	r2, r5
 801d3d0:	3001      	adds	r0, #1
 801d3d2:	f100 810d 	bmi.w	801d5f0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 801d3d6:	4583      	cmp	fp, r0
 801d3d8:	f340 810a 	ble.w	801d5f0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 801d3dc:	f1be 0f00 	cmp.w	lr, #0
 801d3e0:	f000 810b 	beq.w	801d5fa <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 801d3e4:	2f00      	cmp	r7, #0
 801d3e6:	f2c0 8100 	blt.w	801d5ea <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 801d3ea:	42be      	cmp	r6, r7
 801d3ec:	f340 80fd 	ble.w	801d5ea <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 801d3f0:	9801      	ldr	r0, [sp, #4]
 801d3f2:	f819 5006 	ldrb.w	r5, [r9, r6]
 801d3f6:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801d3fa:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801d3fe:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 801d402:	fb0a fa00 	mul.w	sl, sl, r0
 801d406:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 801d40a:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801d40e:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 801d412:	fb05 f808 	mul.w	r8, r5, r8
 801d416:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 801d41a:	4482      	add	sl, r0
 801d41c:	f108 0020 	add.w	r0, r8, #32
 801d420:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801d424:	0a00      	lsrs	r0, r0, #8
 801d426:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801d42a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801d42e:	ea4b 0b00 	orr.w	fp, fp, r0
 801d432:	3701      	adds	r7, #1
 801d434:	f100 80e6 	bmi.w	801d604 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801d438:	42be      	cmp	r6, r7
 801d43a:	f340 80e3 	ble.w	801d604 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801d43e:	2900      	cmp	r1, #0
 801d440:	f000 80e3 	beq.w	801d60a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 801d444:	3601      	adds	r6, #1
 801d446:	9801      	ldr	r0, [sp, #4]
 801d448:	f819 7006 	ldrb.w	r7, [r9, r6]
 801d44c:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801d450:	ea4f 09e7 	mov.w	r9, r7, asr #3
 801d454:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 801d458:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801d45c:	fb09 f906 	mul.w	r9, r9, r6
 801d460:	fb07 f800 	mul.w	r8, r7, r0
 801d464:	f64f 001f 	movw	r0, #63519	; 0xf81f
 801d468:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801d46c:	f609 0901 	addw	r9, r9, #2049	; 0x801
 801d470:	44d1      	add	r9, sl
 801d472:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801d476:	f108 0020 	add.w	r0, r8, #32
 801d47a:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801d47e:	0a00      	lsrs	r0, r0, #8
 801d480:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801d484:	4330      	orrs	r0, r6
 801d486:	b28e      	uxth	r6, r1
 801d488:	fa1f f98e 	uxth.w	r9, lr
 801d48c:	fb06 f809 	mul.w	r8, r6, r9
 801d490:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 801d494:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801d498:	0136      	lsls	r6, r6, #4
 801d49a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801d49e:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801d4a2:	9601      	str	r6, [sp, #4]
 801d4a4:	ea4a 0404 	orr.w	r4, sl, r4
 801d4a8:	fa1f f689 	uxth.w	r6, r9
 801d4ac:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801d4b0:	fb11 f90e 	smulbb	r9, r1, lr
 801d4b4:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 801d4b8:	9602      	str	r6, [sp, #8]
 801d4ba:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801d4be:	4626      	mov	r6, r4
 801d4c0:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801d4c4:	f1ce 0410 	rsb	r4, lr, #16
 801d4c8:	1a64      	subs	r4, r4, r1
 801d4ca:	ea4a 0202 	orr.w	r2, sl, r2
 801d4ce:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801d4d2:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801d4d6:	434a      	muls	r2, r1
 801d4d8:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801d4dc:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801d4e0:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801d4e4:	fb04 2406 	mla	r4, r4, r6, r2
 801d4e8:	ea4a 0000 	orr.w	r0, sl, r0
 801d4ec:	fb09 4200 	mla	r2, r9, r0, r4
 801d4f0:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801d4f4:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801d4f8:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801d4fc:	ea44 0b0b 	orr.w	fp, r4, fp
 801d500:	9c01      	ldr	r4, [sp, #4]
 801d502:	9e02      	ldr	r6, [sp, #8]
 801d504:	9903      	ldr	r1, [sp, #12]
 801d506:	f5c4 7480 	rsb	r4, r4, #256	; 0x100
 801d50a:	1ba4      	subs	r4, r4, r6
 801d50c:	9e01      	ldr	r6, [sp, #4]
 801d50e:	8808      	ldrh	r0, [r1, #0]
 801d510:	f89d 1050 	ldrb.w	r1, [sp, #80]	; 0x50
 801d514:	eba6 0608 	sub.w	r6, r6, r8
 801d518:	b2b6      	uxth	r6, r6
 801d51a:	b2a4      	uxth	r4, r4
 801d51c:	4373      	muls	r3, r6
 801d51e:	fb0c 3304 	mla	r3, ip, r4, r3
 801d522:	9c02      	ldr	r4, [sp, #8]
 801d524:	fb04 3505 	mla	r5, r4, r5, r3
 801d528:	fb08 5707 	mla	r7, r8, r7, r5
 801d52c:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801d530:	b289      	uxth	r1, r1
 801d532:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801d536:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801d53a:	434f      	muls	r7, r1
 801d53c:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801d540:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801d544:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d548:	1c7b      	adds	r3, r7, #1
 801d54a:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801d54e:	ea42 0e0e 	orr.w	lr, r2, lr
 801d552:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801d556:	fa1f f28e 	uxth.w	r2, lr
 801d55a:	1203      	asrs	r3, r0, #8
 801d55c:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 801d560:	b2ff      	uxtb	r7, r7
 801d562:	1215      	asrs	r5, r2, #8
 801d564:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801d568:	fb13 f307 	smulbb	r3, r3, r7
 801d56c:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801d570:	fb05 3501 	mla	r5, r5, r1, r3
 801d574:	10c3      	asrs	r3, r0, #3
 801d576:	10d4      	asrs	r4, r2, #3
 801d578:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801d57c:	fb13 f307 	smulbb	r3, r3, r7
 801d580:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 801d584:	fb04 3401 	mla	r4, r4, r1, r3
 801d588:	00c3      	lsls	r3, r0, #3
 801d58a:	00d2      	lsls	r2, r2, #3
 801d58c:	b2db      	uxtb	r3, r3
 801d58e:	fb13 f307 	smulbb	r3, r3, r7
 801d592:	b2d2      	uxtb	r2, r2
 801d594:	fb02 3101 	mla	r1, r2, r1, r3
 801d598:	b2ad      	uxth	r5, r5
 801d59a:	b289      	uxth	r1, r1
 801d59c:	b2a4      	uxth	r4, r4
 801d59e:	1c6b      	adds	r3, r5, #1
 801d5a0:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801d5a4:	1c62      	adds	r2, r4, #1
 801d5a6:	1c4b      	adds	r3, r1, #1
 801d5a8:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801d5ac:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801d5b0:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801d5b4:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801d5b8:	0964      	lsrs	r4, r4, #5
 801d5ba:	432b      	orrs	r3, r5
 801d5bc:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801d5c0:	9a03      	ldr	r2, [sp, #12]
 801d5c2:	4323      	orrs	r3, r4
 801d5c4:	8013      	strh	r3, [r2, #0]
 801d5c6:	b005      	add	sp, #20
 801d5c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d5cc:	f04f 0c00 	mov.w	ip, #0
 801d5d0:	4664      	mov	r4, ip
 801d5d2:	e6d6      	b.n	801d382 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 801d5d4:	2300      	movs	r3, #0
 801d5d6:	469c      	mov	ip, r3
 801d5d8:	461a      	mov	r2, r3
 801d5da:	461c      	mov	r4, r3
 801d5dc:	e6f8      	b.n	801d3d0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801d5de:	2300      	movs	r3, #0
 801d5e0:	461a      	mov	r2, r3
 801d5e2:	e6f5      	b.n	801d3d0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801d5e4:	460b      	mov	r3, r1
 801d5e6:	460a      	mov	r2, r1
 801d5e8:	e6f2      	b.n	801d3d0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801d5ea:	2500      	movs	r5, #0
 801d5ec:	46ab      	mov	fp, r5
 801d5ee:	e720      	b.n	801d432 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 801d5f0:	2700      	movs	r7, #0
 801d5f2:	463d      	mov	r5, r7
 801d5f4:	4638      	mov	r0, r7
 801d5f6:	46bb      	mov	fp, r7
 801d5f8:	e745      	b.n	801d486 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801d5fa:	4677      	mov	r7, lr
 801d5fc:	4675      	mov	r5, lr
 801d5fe:	4670      	mov	r0, lr
 801d600:	46f3      	mov	fp, lr
 801d602:	e740      	b.n	801d486 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801d604:	2700      	movs	r7, #0
 801d606:	4638      	mov	r0, r7
 801d608:	e73d      	b.n	801d486 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801d60a:	460f      	mov	r7, r1
 801d60c:	4608      	mov	r0, r1
 801d60e:	e73a      	b.n	801d486 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

0801d610 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d610:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d614:	b097      	sub	sp, #92	; 0x5c
 801d616:	9214      	str	r2, [sp, #80]	; 0x50
 801d618:	9308      	str	r3, [sp, #32]
 801d61a:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801d61c:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801d620:	9312      	str	r3, [sp, #72]	; 0x48
 801d622:	9111      	str	r1, [sp, #68]	; 0x44
 801d624:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 801d628:	9015      	str	r0, [sp, #84]	; 0x54
 801d62a:	6850      	ldr	r0, [r2, #4]
 801d62c:	6812      	ldr	r2, [r2, #0]
 801d62e:	fb00 1303 	mla	r3, r0, r3, r1
 801d632:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801d636:	9309      	str	r3, [sp, #36]	; 0x24
 801d638:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801d63a:	681b      	ldr	r3, [r3, #0]
 801d63c:	930b      	str	r3, [sp, #44]	; 0x2c
 801d63e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801d640:	685b      	ldr	r3, [r3, #4]
 801d642:	930c      	str	r3, [sp, #48]	; 0x30
 801d644:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 801d648:	930a      	str	r3, [sp, #40]	; 0x28
 801d64a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801d64c:	2b00      	cmp	r3, #0
 801d64e:	dc03      	bgt.n	801d658 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801d650:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801d652:	2b00      	cmp	r3, #0
 801d654:	f340 83cb 	ble.w	801ddee <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 801d658:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801d65a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d65e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801d662:	1e48      	subs	r0, r1, #1
 801d664:	1e55      	subs	r5, r2, #1
 801d666:	9b08      	ldr	r3, [sp, #32]
 801d668:	2b00      	cmp	r3, #0
 801d66a:	f340 81a3 	ble.w	801d9b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 801d66e:	9e21      	ldr	r6, [sp, #132]	; 0x84
 801d670:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801d672:	1436      	asrs	r6, r6, #16
 801d674:	ea4f 4323 	mov.w	r3, r3, asr #16
 801d678:	d406      	bmi.n	801d688 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801d67a:	4286      	cmp	r6, r0
 801d67c:	da04      	bge.n	801d688 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801d67e:	2b00      	cmp	r3, #0
 801d680:	db02      	blt.n	801d688 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801d682:	42ab      	cmp	r3, r5
 801d684:	f2c0 8197 	blt.w	801d9b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801d688:	3601      	adds	r6, #1
 801d68a:	f100 8184 	bmi.w	801d996 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801d68e:	42b1      	cmp	r1, r6
 801d690:	f2c0 8181 	blt.w	801d996 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801d694:	3301      	adds	r3, #1
 801d696:	f100 817e 	bmi.w	801d996 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801d69a:	429a      	cmp	r2, r3
 801d69c:	f2c0 817b 	blt.w	801d996 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801d6a0:	9b08      	ldr	r3, [sp, #32]
 801d6a2:	9f09      	ldr	r7, [sp, #36]	; 0x24
 801d6a4:	9313      	str	r3, [sp, #76]	; 0x4c
 801d6a6:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801d6aa:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801d6ac:	2b00      	cmp	r3, #0
 801d6ae:	f340 81a4 	ble.w	801d9fa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801d6b2:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801d6b4:	9d21      	ldr	r5, [sp, #132]	; 0x84
 801d6b6:	1418      	asrs	r0, r3, #16
 801d6b8:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801d6ba:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801d6be:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801d6c0:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801d6c4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801d6c6:	142d      	asrs	r5, r5, #16
 801d6c8:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801d6cc:	f100 81f8 	bmi.w	801dac0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801d6d0:	f102 3eff 	add.w	lr, r2, #4294967295
 801d6d4:	4575      	cmp	r5, lr
 801d6d6:	f280 81f3 	bge.w	801dac0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801d6da:	2800      	cmp	r0, #0
 801d6dc:	f2c0 81f0 	blt.w	801dac0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801d6e0:	f103 3eff 	add.w	lr, r3, #4294967295
 801d6e4:	4570      	cmp	r0, lr
 801d6e6:	f280 81eb 	bge.w	801dac0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801d6ea:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801d6ec:	b212      	sxth	r2, r2
 801d6ee:	fb00 5002 	mla	r0, r0, r2, r5
 801d6f2:	fa1f fe81 	uxth.w	lr, r1
 801d6f6:	eb03 0a00 	add.w	sl, r3, r0
 801d6fa:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801d6fe:	f813 9000 	ldrb.w	r9, [r3, r0]
 801d702:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801d706:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 801d70a:	b29b      	uxth	r3, r3
 801d70c:	f1bc 0f00 	cmp.w	ip, #0
 801d710:	f000 81b9 	beq.w	801da86 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 801d714:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801d718:	940d      	str	r4, [sp, #52]	; 0x34
 801d71a:	eb0a 0b02 	add.w	fp, sl, r2
 801d71e:	fa1f fa8c 	uxth.w	sl, ip
 801d722:	fb0a fe0e 	mul.w	lr, sl, lr
 801d726:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801d72a:	fa1f fa8a 	uxth.w	sl, sl
 801d72e:	eba5 050e 	sub.w	r5, r5, lr
 801d732:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801d736:	940e      	str	r4, [sp, #56]	; 0x38
 801d738:	eba3 030a 	sub.w	r3, r3, sl
 801d73c:	b2ad      	uxth	r5, r5
 801d73e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801d740:	b29b      	uxth	r3, r3
 801d742:	fb08 f505 	mul.w	r5, r8, r5
 801d746:	fb09 5303 	mla	r3, r9, r3, r5
 801d74a:	fb0a 3304 	mla	r3, sl, r4, r3
 801d74e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801d750:	fb0e 3304 	mla	r3, lr, r4, r3
 801d754:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801d758:	2b00      	cmp	r3, #0
 801d75a:	f000 810f 	beq.w	801d97c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801d75e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801d760:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801d764:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801d768:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801d76c:	f000 8190 	beq.w	801da90 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 801d770:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801d774:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801d778:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801d77c:	fb09 f000 	mul.w	r0, r9, r0
 801d780:	fb0a fe0e 	mul.w	lr, sl, lr
 801d784:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801d788:	f100 0b20 	add.w	fp, r0, #32
 801d78c:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801d790:	44ce      	add	lr, r9
 801d792:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801d796:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801d79a:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801d79e:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801d7a2:	ea4e 0909 	orr.w	r9, lr, r9
 801d7a6:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801d7aa:	8868      	ldrh	r0, [r5, #2]
 801d7ac:	d019      	beq.n	801d7e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801d7ae:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801d7b2:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801d7b6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801d7ba:	fb08 f800 	mul.w	r8, r8, r0
 801d7be:	fb0a fe0e 	mul.w	lr, sl, lr
 801d7c2:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801d7c6:	f108 0b20 	add.w	fp, r8, #32
 801d7ca:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801d7ce:	4486      	add	lr, r0
 801d7d0:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801d7d4:	0a00      	lsrs	r0, r0, #8
 801d7d6:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801d7da:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801d7de:	ea4e 0000 	orr.w	r0, lr, r0
 801d7e2:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801d7e6:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801d7ea:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801d7ee:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801d7f2:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801d7f6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801d7fa:	ea4e 0909 	orr.w	r9, lr, r9
 801d7fe:	ea4a 0000 	orr.w	r0, sl, r0
 801d802:	f1bc 0f00 	cmp.w	ip, #0
 801d806:	f000 8145 	beq.w	801da94 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 801d80a:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 801d80e:	3a01      	subs	r2, #1
 801d810:	0052      	lsls	r2, r2, #1
 801d812:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801d814:	3202      	adds	r2, #2
 801d816:	2cff      	cmp	r4, #255	; 0xff
 801d818:	eb05 0e02 	add.w	lr, r5, r2
 801d81c:	5aaa      	ldrh	r2, [r5, r2]
 801d81e:	d018      	beq.n	801d852 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801d820:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 801d824:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d828:	fb04 fa02 	mul.w	sl, r4, r2
 801d82c:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801d830:	fb08 f805 	mul.w	r8, r8, r5
 801d834:	f10a 0520 	add.w	r5, sl, #32
 801d838:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801d83c:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801d840:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801d844:	4442      	add	r2, r8
 801d846:	0a2d      	lsrs	r5, r5, #8
 801d848:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801d84c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801d850:	432a      	orrs	r2, r5
 801d852:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801d854:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801d858:	2cff      	cmp	r4, #255	; 0xff
 801d85a:	d01a      	beq.n	801d892 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 801d85c:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 801d860:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801d864:	fb04 fa05 	mul.w	sl, r4, r5
 801d868:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801d86c:	fb08 f80e 	mul.w	r8, r8, lr
 801d870:	f10a 0e20 	add.w	lr, sl, #32
 801d874:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801d878:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801d87c:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801d880:	4445      	add	r5, r8
 801d882:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801d886:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801d88a:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 801d88e:	ea45 050e 	orr.w	r5, r5, lr
 801d892:	fb1c fe01 	smulbb	lr, ip, r1
 801d896:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801d89a:	f1cc 0810 	rsb	r8, ip, #16
 801d89e:	eba8 0801 	sub.w	r8, r8, r1
 801d8a2:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801d8a6:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801d8aa:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801d8ae:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801d8b2:	4341      	muls	r1, r0
 801d8b4:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801d8b8:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801d8bc:	ea4a 0202 	orr.w	r2, sl, r2
 801d8c0:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801d8c4:	fb09 1108 	mla	r1, r9, r8, r1
 801d8c8:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801d8cc:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801d8d0:	fb0c 1102 	mla	r1, ip, r2, r1
 801d8d4:	ea4b 0505 	orr.w	r5, fp, r5
 801d8d8:	fb0e 1e05 	mla	lr, lr, r5, r1
 801d8dc:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801d8e0:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801d8e4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d8e8:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801d8ec:	ea42 0e0e 	orr.w	lr, r2, lr
 801d8f0:	fa1f f28e 	uxth.w	r2, lr
 801d8f4:	2bff      	cmp	r3, #255	; 0xff
 801d8f6:	d103      	bne.n	801d900 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801d8f8:	9912      	ldr	r1, [sp, #72]	; 0x48
 801d8fa:	29ff      	cmp	r1, #255	; 0xff
 801d8fc:	f000 80de 	beq.w	801dabc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 801d900:	990a      	ldr	r1, [sp, #40]	; 0x28
 801d902:	8838      	ldrh	r0, [r7, #0]
 801d904:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801d906:	434b      	muls	r3, r1
 801d908:	f103 0c01 	add.w	ip, r3, #1
 801d90c:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 801d910:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801d914:	fa5f fc83 	uxtb.w	ip, r3
 801d918:	1203      	asrs	r3, r0, #8
 801d91a:	1215      	asrs	r5, r2, #8
 801d91c:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801d920:	fb13 f30c 	smulbb	r3, r3, ip
 801d924:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801d928:	fb05 3501 	mla	r5, r5, r1, r3
 801d92c:	10c3      	asrs	r3, r0, #3
 801d92e:	10d1      	asrs	r1, r2, #3
 801d930:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801d934:	fb13 f30c 	smulbb	r3, r3, ip
 801d938:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801d93c:	fb01 3104 	mla	r1, r1, r4, r3
 801d940:	00c3      	lsls	r3, r0, #3
 801d942:	00d2      	lsls	r2, r2, #3
 801d944:	b2db      	uxtb	r3, r3
 801d946:	b2d2      	uxtb	r2, r2
 801d948:	fb13 f30c 	smulbb	r3, r3, ip
 801d94c:	b2ad      	uxth	r5, r5
 801d94e:	fb02 3304 	mla	r3, r2, r4, r3
 801d952:	b29a      	uxth	r2, r3
 801d954:	1c6b      	adds	r3, r5, #1
 801d956:	b289      	uxth	r1, r1
 801d958:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801d95c:	1c53      	adds	r3, r2, #1
 801d95e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801d962:	1c4a      	adds	r2, r1, #1
 801d964:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801d968:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801d96c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801d970:	0949      	lsrs	r1, r1, #5
 801d972:	432b      	orrs	r3, r5
 801d974:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801d978:	430b      	orrs	r3, r1
 801d97a:	803b      	strh	r3, [r7, #0]
 801d97c:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801d97e:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 801d980:	4413      	add	r3, r2
 801d982:	9321      	str	r3, [sp, #132]	; 0x84
 801d984:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801d986:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d988:	441a      	add	r2, r3
 801d98a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801d98c:	9222      	str	r2, [sp, #136]	; 0x88
 801d98e:	3b01      	subs	r3, #1
 801d990:	3702      	adds	r7, #2
 801d992:	9313      	str	r3, [sp, #76]	; 0x4c
 801d994:	e689      	b.n	801d6aa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801d996:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801d998:	9e23      	ldr	r6, [sp, #140]	; 0x8c
 801d99a:	9c22      	ldr	r4, [sp, #136]	; 0x88
 801d99c:	4433      	add	r3, r6
 801d99e:	9321      	str	r3, [sp, #132]	; 0x84
 801d9a0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d9a2:	441c      	add	r4, r3
 801d9a4:	9b08      	ldr	r3, [sp, #32]
 801d9a6:	9422      	str	r4, [sp, #136]	; 0x88
 801d9a8:	3b01      	subs	r3, #1
 801d9aa:	9308      	str	r3, [sp, #32]
 801d9ac:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d9ae:	3302      	adds	r3, #2
 801d9b0:	9309      	str	r3, [sp, #36]	; 0x24
 801d9b2:	e658      	b.n	801d666 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 801d9b4:	d028      	beq.n	801da08 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801d9b6:	9b08      	ldr	r3, [sp, #32]
 801d9b8:	9823      	ldr	r0, [sp, #140]	; 0x8c
 801d9ba:	9d21      	ldr	r5, [sp, #132]	; 0x84
 801d9bc:	3b01      	subs	r3, #1
 801d9be:	fb00 5003 	mla	r0, r0, r3, r5
 801d9c2:	1400      	asrs	r0, r0, #16
 801d9c4:	f53f ae6c 	bmi.w	801d6a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801d9c8:	3901      	subs	r1, #1
 801d9ca:	4288      	cmp	r0, r1
 801d9cc:	f6bf ae68 	bge.w	801d6a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801d9d0:	9924      	ldr	r1, [sp, #144]	; 0x90
 801d9d2:	9822      	ldr	r0, [sp, #136]	; 0x88
 801d9d4:	fb01 0303 	mla	r3, r1, r3, r0
 801d9d8:	141b      	asrs	r3, r3, #16
 801d9da:	f53f ae61 	bmi.w	801d6a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801d9de:	3a01      	subs	r2, #1
 801d9e0:	4293      	cmp	r3, r2
 801d9e2:	f6bf ae5d 	bge.w	801d6a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801d9e6:	9b08      	ldr	r3, [sp, #32]
 801d9e8:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 801d9ec:	9313      	str	r3, [sp, #76]	; 0x4c
 801d9ee:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801d9f2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801d9f4:	2b00      	cmp	r3, #0
 801d9f6:	f300 8082 	bgt.w	801dafe <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801d9fa:	9b08      	ldr	r3, [sp, #32]
 801d9fc:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801da00:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801da02:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801da06:	9309      	str	r3, [sp, #36]	; 0x24
 801da08:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801da0a:	2b00      	cmp	r3, #0
 801da0c:	f340 81ef 	ble.w	801ddee <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 801da10:	ee30 0a04 	vadd.f32	s0, s0, s8
 801da14:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801da18:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801da1c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801da1e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801da22:	ee31 1a05 	vadd.f32	s2, s2, s10
 801da26:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801da2a:	eef0 6a62 	vmov.f32	s13, s5
 801da2e:	ee61 7a27 	vmul.f32	s15, s2, s15
 801da32:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801da36:	ee77 2a62 	vsub.f32	s5, s14, s5
 801da3a:	edcd 6a21 	vstr	s13, [sp, #132]	; 0x84
 801da3e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801da42:	eef0 6a43 	vmov.f32	s13, s6
 801da46:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801da4a:	ee12 2a90 	vmov	r2, s5
 801da4e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801da52:	fb92 f3f3 	sdiv	r3, r2, r3
 801da56:	ee13 2a10 	vmov	r2, s6
 801da5a:	9323      	str	r3, [sp, #140]	; 0x8c
 801da5c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801da5e:	fb92 f3f3 	sdiv	r3, r2, r3
 801da62:	9324      	str	r3, [sp, #144]	; 0x90
 801da64:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801da66:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801da68:	3b01      	subs	r3, #1
 801da6a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801da6e:	9311      	str	r3, [sp, #68]	; 0x44
 801da70:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801da72:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
 801da76:	bf08      	it	eq
 801da78:	4613      	moveq	r3, r2
 801da7a:	9308      	str	r3, [sp, #32]
 801da7c:	eeb0 3a67 	vmov.f32	s6, s15
 801da80:	eef0 2a47 	vmov.f32	s5, s14
 801da84:	e5e1      	b.n	801d64a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801da86:	fb08 f505 	mul.w	r5, r8, r5
 801da8a:	fb09 5303 	mla	r3, r9, r3, r5
 801da8e:	e661      	b.n	801d754 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 801da90:	4681      	mov	r9, r0
 801da92:	e688      	b.n	801d7a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801da94:	f1c1 0210 	rsb	r2, r1, #16
 801da98:	4341      	muls	r1, r0
 801da9a:	fb09 1902 	mla	r9, r9, r2, r1
 801da9e:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801daa2:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801daa6:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801daaa:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801daae:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801dab2:	ea42 0909 	orr.w	r9, r2, r9
 801dab6:	fa1f f289 	uxth.w	r2, r9
 801daba:	e71b      	b.n	801d8f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801dabc:	803a      	strh	r2, [r7, #0]
 801dabe:	e75d      	b.n	801d97c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801dac0:	f115 0e01 	adds.w	lr, r5, #1
 801dac4:	f53f af5a 	bmi.w	801d97c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801dac8:	4572      	cmp	r2, lr
 801daca:	f6ff af57 	blt.w	801d97c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801dace:	f110 0e01 	adds.w	lr, r0, #1
 801dad2:	f53f af53 	bmi.w	801d97c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801dad6:	4573      	cmp	r3, lr
 801dad8:	f6ff af50 	blt.w	801d97c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801dadc:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801dade:	9502      	str	r5, [sp, #8]
 801dae0:	b21b      	sxth	r3, r3
 801dae2:	b212      	sxth	r2, r2
 801dae4:	e9cd 0103 	strd	r0, r1, [sp, #12]
 801dae8:	9301      	str	r3, [sp, #4]
 801daea:	9200      	str	r2, [sp, #0]
 801daec:	e9cd c405 	strd	ip, r4, [sp, #20]
 801daf0:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 801daf4:	4639      	mov	r1, r7
 801daf6:	9815      	ldr	r0, [sp, #84]	; 0x54
 801daf8:	f7ff fc04 	bl	801d304 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 801dafc:	e73e      	b.n	801d97c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801dafe:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801db00:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801db04:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801db06:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801db0a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801db0c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801db10:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801db12:	141f      	asrs	r7, r3, #16
 801db14:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801db16:	141b      	asrs	r3, r3, #16
 801db18:	fb01 3707 	mla	r7, r1, r7, r3
 801db1c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801db1e:	fa1f fc82 	uxth.w	ip, r2
 801db22:	eb03 0a07 	add.w	sl, r3, r7
 801db26:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801db2a:	f813 9007 	ldrb.w	r9, [r3, r7]
 801db2e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801db32:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801db36:	b29b      	uxth	r3, r3
 801db38:	2d00      	cmp	r5, #0
 801db3a:	f000 813d 	beq.w	801ddb8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 801db3e:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801db42:	940f      	str	r4, [sp, #60]	; 0x3c
 801db44:	eb0a 0b01 	add.w	fp, sl, r1
 801db48:	fa1f fa85 	uxth.w	sl, r5
 801db4c:	fb0a fc0c 	mul.w	ip, sl, ip
 801db50:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801db54:	fa1f fa8a 	uxth.w	sl, sl
 801db58:	eba0 000c 	sub.w	r0, r0, ip
 801db5c:	eba3 030a 	sub.w	r3, r3, sl
 801db60:	b280      	uxth	r0, r0
 801db62:	fb08 f000 	mul.w	r0, r8, r0
 801db66:	b29b      	uxth	r3, r3
 801db68:	fb09 0303 	mla	r3, r9, r3, r0
 801db6c:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801db6e:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801db72:	9410      	str	r4, [sp, #64]	; 0x40
 801db74:	fb0a 3300 	mla	r3, sl, r0, r3
 801db78:	fb0c 3304 	mla	r3, ip, r4, r3
 801db7c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801db80:	2b00      	cmp	r3, #0
 801db82:	f000 810b 	beq.w	801dd9c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 801db86:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801db88:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801db8a:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801db8e:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801db92:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801db96:	f000 8114 	beq.w	801ddc2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 801db9a:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801db9e:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801dba2:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801dba6:	fb09 f707 	mul.w	r7, r9, r7
 801dbaa:	fb0a fc0c 	mul.w	ip, sl, ip
 801dbae:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801dbb2:	f107 0b20 	add.w	fp, r7, #32
 801dbb6:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801dbba:	44cc      	add	ip, r9
 801dbbc:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801dbc0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801dbc4:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801dbc8:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801dbcc:	ea4c 0909 	orr.w	r9, ip, r9
 801dbd0:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801dbd4:	8847      	ldrh	r7, [r0, #2]
 801dbd6:	d019      	beq.n	801dc0c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 801dbd8:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801dbdc:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801dbe0:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801dbe4:	fb08 f807 	mul.w	r8, r8, r7
 801dbe8:	fb0a fc0c 	mul.w	ip, sl, ip
 801dbec:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801dbf0:	f108 0b20 	add.w	fp, r8, #32
 801dbf4:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801dbf8:	44bc      	add	ip, r7
 801dbfa:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801dbfe:	0a3f      	lsrs	r7, r7, #8
 801dc00:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801dc04:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801dc08:	ea4c 0707 	orr.w	r7, ip, r7
 801dc0c:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801dc10:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801dc14:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801dc18:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801dc1c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801dc20:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801dc24:	ea4c 0909 	orr.w	r9, ip, r9
 801dc28:	ea4a 0707 	orr.w	r7, sl, r7
 801dc2c:	2d00      	cmp	r5, #0
 801dc2e:	f000 80ca 	beq.w	801ddc6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 801dc32:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801dc36:	3901      	subs	r1, #1
 801dc38:	0049      	lsls	r1, r1, #1
 801dc3a:	3102      	adds	r1, #2
 801dc3c:	eb00 0c01 	add.w	ip, r0, r1
 801dc40:	5a41      	ldrh	r1, [r0, r1]
 801dc42:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801dc44:	28ff      	cmp	r0, #255	; 0xff
 801dc46:	d019      	beq.n	801dc7c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 801dc48:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801dc4a:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 801dc4e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801dc52:	fb04 fa01 	mul.w	sl, r4, r1
 801dc56:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801dc5a:	fb08 f800 	mul.w	r8, r8, r0
 801dc5e:	f10a 0020 	add.w	r0, sl, #32
 801dc62:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801dc66:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801dc6a:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801dc6e:	4441      	add	r1, r8
 801dc70:	0a00      	lsrs	r0, r0, #8
 801dc72:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801dc76:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801dc7a:	4301      	orrs	r1, r0
 801dc7c:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801dc7e:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801dc82:	2cff      	cmp	r4, #255	; 0xff
 801dc84:	d01a      	beq.n	801dcbc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 801dc86:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 801dc8a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801dc8e:	fb04 fa00 	mul.w	sl, r4, r0
 801dc92:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801dc96:	fb08 f80c 	mul.w	r8, r8, ip
 801dc9a:	f10a 0c20 	add.w	ip, sl, #32
 801dc9e:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801dca2:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801dca6:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801dcaa:	4440      	add	r0, r8
 801dcac:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801dcb0:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801dcb4:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801dcb8:	ea40 000c 	orr.w	r0, r0, ip
 801dcbc:	fb15 fc02 	smulbb	ip, r5, r2
 801dcc0:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801dcc4:	f1c5 0810 	rsb	r8, r5, #16
 801dcc8:	eba8 0802 	sub.w	r8, r8, r2
 801dccc:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801dcd0:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801dcd4:	437a      	muls	r2, r7
 801dcd6:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801dcda:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801dcde:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801dce2:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801dce6:	fb09 2208 	mla	r2, r9, r8, r2
 801dcea:	ea4a 0101 	orr.w	r1, sl, r1
 801dcee:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801dcf2:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801dcf6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801dcfa:	fb05 2201 	mla	r2, r5, r1, r2
 801dcfe:	ea4b 0000 	orr.w	r0, fp, r0
 801dd02:	fb0c 2200 	mla	r2, ip, r0, r2
 801dd06:	0d57      	lsrs	r7, r2, #21
 801dd08:	0952      	lsrs	r2, r2, #5
 801dd0a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801dd0e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801dd12:	433a      	orrs	r2, r7
 801dd14:	2bff      	cmp	r3, #255	; 0xff
 801dd16:	b292      	uxth	r2, r2
 801dd18:	d102      	bne.n	801dd20 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801dd1a:	9912      	ldr	r1, [sp, #72]	; 0x48
 801dd1c:	29ff      	cmp	r1, #255	; 0xff
 801dd1e:	d063      	beq.n	801dde8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 801dd20:	980a      	ldr	r0, [sp, #40]	; 0x28
 801dd22:	f8be 1000 	ldrh.w	r1, [lr]
 801dd26:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801dd28:	4343      	muls	r3, r0
 801dd2a:	1c58      	adds	r0, r3, #1
 801dd2c:	eb00 2323 	add.w	r3, r0, r3, asr #8
 801dd30:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801dd34:	1208      	asrs	r0, r1, #8
 801dd36:	b2db      	uxtb	r3, r3
 801dd38:	1215      	asrs	r5, r2, #8
 801dd3a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801dd3e:	fb10 f003 	smulbb	r0, r0, r3
 801dd42:	10cf      	asrs	r7, r1, #3
 801dd44:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801dd48:	00c9      	lsls	r1, r1, #3
 801dd4a:	fb05 0504 	mla	r5, r5, r4, r0
 801dd4e:	b2c9      	uxtb	r1, r1
 801dd50:	10d0      	asrs	r0, r2, #3
 801dd52:	00d2      	lsls	r2, r2, #3
 801dd54:	fb11 f103 	smulbb	r1, r1, r3
 801dd58:	b2d2      	uxtb	r2, r2
 801dd5a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801dd5e:	fb02 1204 	mla	r2, r2, r4, r1
 801dd62:	fb17 f703 	smulbb	r7, r7, r3
 801dd66:	b2ad      	uxth	r5, r5
 801dd68:	b292      	uxth	r2, r2
 801dd6a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801dd6e:	fb00 7004 	mla	r0, r0, r4, r7
 801dd72:	1c6b      	adds	r3, r5, #1
 801dd74:	1c57      	adds	r7, r2, #1
 801dd76:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801dd7a:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801dd7e:	b280      	uxth	r0, r0
 801dd80:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801dd84:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801dd88:	433d      	orrs	r5, r7
 801dd8a:	1c47      	adds	r7, r0, #1
 801dd8c:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801dd90:	097f      	lsrs	r7, r7, #5
 801dd92:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801dd96:	433d      	orrs	r5, r7
 801dd98:	f8ae 5000 	strh.w	r5, [lr]
 801dd9c:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801dd9e:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 801dda0:	4413      	add	r3, r2
 801dda2:	9321      	str	r3, [sp, #132]	; 0x84
 801dda4:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801dda6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801dda8:	441a      	add	r2, r3
 801ddaa:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801ddac:	9222      	str	r2, [sp, #136]	; 0x88
 801ddae:	3b01      	subs	r3, #1
 801ddb0:	f10e 0e02 	add.w	lr, lr, #2
 801ddb4:	9313      	str	r3, [sp, #76]	; 0x4c
 801ddb6:	e61c      	b.n	801d9f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 801ddb8:	fb08 f000 	mul.w	r0, r8, r0
 801ddbc:	fb09 0303 	mla	r3, r9, r3, r0
 801ddc0:	e6dc      	b.n	801db7c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 801ddc2:	46b9      	mov	r9, r7
 801ddc4:	e704      	b.n	801dbd0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 801ddc6:	f1c2 0110 	rsb	r1, r2, #16
 801ddca:	437a      	muls	r2, r7
 801ddcc:	fb09 2901 	mla	r9, r9, r1, r2
 801ddd0:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801ddd4:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801ddd8:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801dddc:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801dde0:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801dde4:	4302      	orrs	r2, r0
 801dde6:	e795      	b.n	801dd14 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 801dde8:	f8ae 2000 	strh.w	r2, [lr]
 801ddec:	e7d6      	b.n	801dd9c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 801ddee:	b017      	add	sp, #92	; 0x5c
 801ddf0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801ddf4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801ddf4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ddf8:	b085      	sub	sp, #20
 801ddfa:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 801ddfe:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 801de02:	9103      	str	r1, [sp, #12]
 801de04:	fb00 7406 	mla	r4, r0, r6, r7
 801de08:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 801de0c:	2800      	cmp	r0, #0
 801de0e:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 801de12:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 801de16:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 801de1a:	9501      	str	r5, [sp, #4]
 801de1c:	eb02 0904 	add.w	r9, r2, r4
 801de20:	f2c0 8141 	blt.w	801e0a6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801de24:	4583      	cmp	fp, r0
 801de26:	f340 813e 	ble.w	801e0a6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801de2a:	2f00      	cmp	r7, #0
 801de2c:	f2c0 8137 	blt.w	801e09e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801de30:	42be      	cmp	r6, r7
 801de32:	f340 8134 	ble.w	801e09e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801de36:	f812 c004 	ldrb.w	ip, [r2, r4]
 801de3a:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 801de3e:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801de42:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 801de46:	4355      	muls	r5, r2
 801de48:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801de4c:	f64f 041f 	movw	r4, #63519	; 0xf81f
 801de50:	fb0c f203 	mul.w	r2, ip, r3
 801de54:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801de58:	f605 0501 	addw	r5, r5, #2049	; 0x801
 801de5c:	441d      	add	r5, r3
 801de5e:	f102 0320 	add.w	r3, r2, #32
 801de62:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801de66:	0a1b      	lsrs	r3, r3, #8
 801de68:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801de6c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801de70:	431c      	orrs	r4, r3
 801de72:	1c7b      	adds	r3, r7, #1
 801de74:	f100 811c 	bmi.w	801e0b0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801de78:	429e      	cmp	r6, r3
 801de7a:	f340 8119 	ble.w	801e0b0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801de7e:	2900      	cmp	r1, #0
 801de80:	f000 8119 	beq.w	801e0b6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 801de84:	9a01      	ldr	r2, [sp, #4]
 801de86:	f899 3001 	ldrb.w	r3, [r9, #1]
 801de8a:	8855      	ldrh	r5, [r2, #2]
 801de8c:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801de90:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 801de94:	fb08 f802 	mul.w	r8, r8, r2
 801de98:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801de9c:	f64f 021f 	movw	r2, #63519	; 0xf81f
 801dea0:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801dea4:	435d      	muls	r5, r3
 801dea6:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801deaa:	44d0      	add	r8, sl
 801deac:	f105 0a20 	add.w	sl, r5, #32
 801deb0:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801deb4:	0a2d      	lsrs	r5, r5, #8
 801deb6:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801deba:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801debe:	432a      	orrs	r2, r5
 801dec0:	3001      	adds	r0, #1
 801dec2:	f100 80fe 	bmi.w	801e0c2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801dec6:	4583      	cmp	fp, r0
 801dec8:	f340 80fb 	ble.w	801e0c2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801decc:	f1be 0f00 	cmp.w	lr, #0
 801ded0:	f000 80fc 	beq.w	801e0cc <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 801ded4:	2f00      	cmp	r7, #0
 801ded6:	f2c0 80f1 	blt.w	801e0bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801deda:	42be      	cmp	r6, r7
 801dedc:	f340 80ee 	ble.w	801e0bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801dee0:	9801      	ldr	r0, [sp, #4]
 801dee2:	f819 5006 	ldrb.w	r5, [r9, r6]
 801dee6:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801deea:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801deee:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 801def2:	fb0a fa00 	mul.w	sl, sl, r0
 801def6:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 801defa:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801defe:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 801df02:	fb05 f808 	mul.w	r8, r5, r8
 801df06:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 801df0a:	4482      	add	sl, r0
 801df0c:	f108 0020 	add.w	r0, r8, #32
 801df10:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801df14:	0a00      	lsrs	r0, r0, #8
 801df16:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801df1a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801df1e:	ea4b 0b00 	orr.w	fp, fp, r0
 801df22:	3701      	adds	r7, #1
 801df24:	f100 80d7 	bmi.w	801e0d6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801df28:	42be      	cmp	r6, r7
 801df2a:	f340 80d4 	ble.w	801e0d6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801df2e:	2900      	cmp	r1, #0
 801df30:	f000 80d4 	beq.w	801e0dc <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 801df34:	3601      	adds	r6, #1
 801df36:	9801      	ldr	r0, [sp, #4]
 801df38:	f819 7006 	ldrb.w	r7, [r9, r6]
 801df3c:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801df40:	ea4f 09e7 	mov.w	r9, r7, asr #3
 801df44:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 801df48:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801df4c:	fb09 f906 	mul.w	r9, r9, r6
 801df50:	fb07 f800 	mul.w	r8, r7, r0
 801df54:	f64f 001f 	movw	r0, #63519	; 0xf81f
 801df58:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801df5c:	f609 0901 	addw	r9, r9, #2049	; 0x801
 801df60:	44d1      	add	r9, sl
 801df62:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801df66:	f108 0020 	add.w	r0, r8, #32
 801df6a:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801df6e:	0a00      	lsrs	r0, r0, #8
 801df70:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801df74:	4330      	orrs	r0, r6
 801df76:	b28e      	uxth	r6, r1
 801df78:	fa1f f98e 	uxth.w	r9, lr
 801df7c:	fb06 f809 	mul.w	r8, r6, r9
 801df80:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 801df84:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801df88:	0136      	lsls	r6, r6, #4
 801df8a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801df8e:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801df92:	9601      	str	r6, [sp, #4]
 801df94:	ea4a 0404 	orr.w	r4, sl, r4
 801df98:	fa1f f689 	uxth.w	r6, r9
 801df9c:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801dfa0:	fb11 f90e 	smulbb	r9, r1, lr
 801dfa4:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 801dfa8:	9602      	str	r6, [sp, #8]
 801dfaa:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801dfae:	4626      	mov	r6, r4
 801dfb0:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801dfb4:	f1ce 0410 	rsb	r4, lr, #16
 801dfb8:	1a64      	subs	r4, r4, r1
 801dfba:	ea4a 0202 	orr.w	r2, sl, r2
 801dfbe:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801dfc2:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801dfc6:	434a      	muls	r2, r1
 801dfc8:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801dfcc:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801dfd0:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801dfd4:	fb04 2406 	mla	r4, r4, r6, r2
 801dfd8:	ea4a 0000 	orr.w	r0, sl, r0
 801dfdc:	fb09 4200 	mla	r2, r9, r0, r4
 801dfe0:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801dfe4:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801dfe8:	9801      	ldr	r0, [sp, #4]
 801dfea:	9903      	ldr	r1, [sp, #12]
 801dfec:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801dff0:	ea44 0b0b 	orr.w	fp, r4, fp
 801dff4:	9c02      	ldr	r4, [sp, #8]
 801dff6:	8809      	ldrh	r1, [r1, #0]
 801dff8:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 801dffc:	1b00      	subs	r0, r0, r4
 801dffe:	9c01      	ldr	r4, [sp, #4]
 801e000:	eba4 0608 	sub.w	r6, r4, r8
 801e004:	b2b6      	uxth	r6, r6
 801e006:	b280      	uxth	r0, r0
 801e008:	4373      	muls	r3, r6
 801e00a:	fb0c 3300 	mla	r3, ip, r0, r3
 801e00e:	9802      	ldr	r0, [sp, #8]
 801e010:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801e014:	fb00 3505 	mla	r5, r0, r5, r3
 801e018:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801e01c:	fb08 5707 	mla	r7, r8, r7, r5
 801e020:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801e024:	120b      	asrs	r3, r1, #8
 801e026:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801e02a:	ea6f 2727 	mvn.w	r7, r7, asr #8
 801e02e:	b2ff      	uxtb	r7, r7
 801e030:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e034:	10c8      	asrs	r0, r1, #3
 801e036:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801e03a:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801e03e:	00c9      	lsls	r1, r1, #3
 801e040:	437b      	muls	r3, r7
 801e042:	ea42 0e0e 	orr.w	lr, r2, lr
 801e046:	b2c9      	uxtb	r1, r1
 801e048:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801e04c:	fa1f f28e 	uxth.w	r2, lr
 801e050:	4378      	muls	r0, r7
 801e052:	434f      	muls	r7, r1
 801e054:	1c59      	adds	r1, r3, #1
 801e056:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801e05a:	1213      	asrs	r3, r2, #8
 801e05c:	f023 0307 	bic.w	r3, r3, #7
 801e060:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801e064:	1c41      	adds	r1, r0, #1
 801e066:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801e06a:	10d1      	asrs	r1, r2, #3
 801e06c:	f021 0103 	bic.w	r1, r1, #3
 801e070:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801e074:	021b      	lsls	r3, r3, #8
 801e076:	00c9      	lsls	r1, r1, #3
 801e078:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801e07c:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801e080:	430b      	orrs	r3, r1
 801e082:	1c79      	adds	r1, r7, #1
 801e084:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 801e088:	00d2      	lsls	r2, r2, #3
 801e08a:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801e08e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801e092:	431a      	orrs	r2, r3
 801e094:	9b03      	ldr	r3, [sp, #12]
 801e096:	801a      	strh	r2, [r3, #0]
 801e098:	b005      	add	sp, #20
 801e09a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e09e:	f04f 0c00 	mov.w	ip, #0
 801e0a2:	4664      	mov	r4, ip
 801e0a4:	e6e5      	b.n	801de72 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 801e0a6:	2300      	movs	r3, #0
 801e0a8:	469c      	mov	ip, r3
 801e0aa:	461a      	mov	r2, r3
 801e0ac:	461c      	mov	r4, r3
 801e0ae:	e707      	b.n	801dec0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801e0b0:	2300      	movs	r3, #0
 801e0b2:	461a      	mov	r2, r3
 801e0b4:	e704      	b.n	801dec0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801e0b6:	460b      	mov	r3, r1
 801e0b8:	460a      	mov	r2, r1
 801e0ba:	e701      	b.n	801dec0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801e0bc:	2500      	movs	r5, #0
 801e0be:	46ab      	mov	fp, r5
 801e0c0:	e72f      	b.n	801df22 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 801e0c2:	2700      	movs	r7, #0
 801e0c4:	463d      	mov	r5, r7
 801e0c6:	4638      	mov	r0, r7
 801e0c8:	46bb      	mov	fp, r7
 801e0ca:	e754      	b.n	801df76 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801e0cc:	4677      	mov	r7, lr
 801e0ce:	4675      	mov	r5, lr
 801e0d0:	4670      	mov	r0, lr
 801e0d2:	46f3      	mov	fp, lr
 801e0d4:	e74f      	b.n	801df76 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801e0d6:	2700      	movs	r7, #0
 801e0d8:	4638      	mov	r0, r7
 801e0da:	e74c      	b.n	801df76 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801e0dc:	460f      	mov	r7, r1
 801e0de:	4608      	mov	r0, r1
 801e0e0:	e749      	b.n	801df76 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

0801e0e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e0e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e0e8:	b093      	sub	sp, #76	; 0x4c
 801e0ea:	9210      	str	r2, [sp, #64]	; 0x40
 801e0ec:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801e0ee:	910e      	str	r1, [sp, #56]	; 0x38
 801e0f0:	9306      	str	r3, [sp, #24]
 801e0f2:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 801e0f6:	9011      	str	r0, [sp, #68]	; 0x44
 801e0f8:	6850      	ldr	r0, [r2, #4]
 801e0fa:	6812      	ldr	r2, [r2, #0]
 801e0fc:	fb00 1303 	mla	r3, r0, r3, r1
 801e100:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801e104:	9307      	str	r3, [sp, #28]
 801e106:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801e108:	681b      	ldr	r3, [r3, #0]
 801e10a:	9308      	str	r3, [sp, #32]
 801e10c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801e10e:	685b      	ldr	r3, [r3, #4]
 801e110:	9309      	str	r3, [sp, #36]	; 0x24
 801e112:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801e114:	2b00      	cmp	r3, #0
 801e116:	dc03      	bgt.n	801e120 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801e118:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e11a:	2b00      	cmp	r3, #0
 801e11c:	f340 83b4 	ble.w	801e888 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 801e120:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801e122:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e126:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801e12a:	1e48      	subs	r0, r1, #1
 801e12c:	1e55      	subs	r5, r2, #1
 801e12e:	9b06      	ldr	r3, [sp, #24]
 801e130:	2b00      	cmp	r3, #0
 801e132:	f340 8163 	ble.w	801e3fc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 801e136:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 801e138:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801e13a:	1436      	asrs	r6, r6, #16
 801e13c:	ea4f 4323 	mov.w	r3, r3, asr #16
 801e140:	d406      	bmi.n	801e150 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801e142:	4286      	cmp	r6, r0
 801e144:	da04      	bge.n	801e150 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801e146:	2b00      	cmp	r3, #0
 801e148:	db02      	blt.n	801e150 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801e14a:	42ab      	cmp	r3, r5
 801e14c:	f2c0 8157 	blt.w	801e3fe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 801e150:	3601      	adds	r6, #1
 801e152:	f100 8144 	bmi.w	801e3de <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801e156:	42b1      	cmp	r1, r6
 801e158:	f2c0 8141 	blt.w	801e3de <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801e15c:	3301      	adds	r3, #1
 801e15e:	f100 813e 	bmi.w	801e3de <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801e162:	429a      	cmp	r2, r3
 801e164:	f2c0 813b 	blt.w	801e3de <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801e168:	9b06      	ldr	r3, [sp, #24]
 801e16a:	9f07      	ldr	r7, [sp, #28]
 801e16c:	930f      	str	r3, [sp, #60]	; 0x3c
 801e16e:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801e172:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801e174:	2b00      	cmp	r3, #0
 801e176:	f340 8164 	ble.w	801e442 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 801e17a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801e17c:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 801e17e:	1418      	asrs	r0, r3, #16
 801e180:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801e182:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801e186:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801e188:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801e18c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801e18e:	142d      	asrs	r5, r5, #16
 801e190:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801e194:	f100 81ee 	bmi.w	801e574 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801e198:	f102 3eff 	add.w	lr, r2, #4294967295
 801e19c:	4575      	cmp	r5, lr
 801e19e:	f280 81e9 	bge.w	801e574 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801e1a2:	2800      	cmp	r0, #0
 801e1a4:	f2c0 81e6 	blt.w	801e574 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801e1a8:	f103 3eff 	add.w	lr, r3, #4294967295
 801e1ac:	4570      	cmp	r0, lr
 801e1ae:	f280 81e1 	bge.w	801e574 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801e1b2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e1b4:	b212      	sxth	r2, r2
 801e1b6:	fb00 5002 	mla	r0, r0, r2, r5
 801e1ba:	fa1f fe81 	uxth.w	lr, r1
 801e1be:	eb03 0a00 	add.w	sl, r3, r0
 801e1c2:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801e1c6:	f813 9000 	ldrb.w	r9, [r3, r0]
 801e1ca:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801e1ce:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 801e1d2:	b29b      	uxth	r3, r3
 801e1d4:	f1bc 0f00 	cmp.w	ip, #0
 801e1d8:	f000 8179 	beq.w	801e4ce <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801e1dc:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801e1e0:	940a      	str	r4, [sp, #40]	; 0x28
 801e1e2:	eb0a 0b02 	add.w	fp, sl, r2
 801e1e6:	fa1f fa8c 	uxth.w	sl, ip
 801e1ea:	fb0a fe0e 	mul.w	lr, sl, lr
 801e1ee:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801e1f2:	fa1f fa8a 	uxth.w	sl, sl
 801e1f6:	eba5 050e 	sub.w	r5, r5, lr
 801e1fa:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801e1fe:	940b      	str	r4, [sp, #44]	; 0x2c
 801e200:	eba3 030a 	sub.w	r3, r3, sl
 801e204:	b2ad      	uxth	r5, r5
 801e206:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801e208:	b29b      	uxth	r3, r3
 801e20a:	fb08 f505 	mul.w	r5, r8, r5
 801e20e:	fb09 5303 	mla	r3, r9, r3, r5
 801e212:	fb0a 3304 	mla	r3, sl, r4, r3
 801e216:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801e218:	fb0e 3304 	mla	r3, lr, r4, r3
 801e21c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801e220:	2b00      	cmp	r3, #0
 801e222:	f000 80cf 	beq.w	801e3c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801e226:	9c08      	ldr	r4, [sp, #32]
 801e228:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801e22c:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801e230:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801e234:	f000 8150 	beq.w	801e4d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 801e238:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801e23c:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801e240:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801e244:	fb09 f000 	mul.w	r0, r9, r0
 801e248:	fb0a fe0e 	mul.w	lr, sl, lr
 801e24c:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801e250:	f100 0b20 	add.w	fp, r0, #32
 801e254:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801e258:	44ce      	add	lr, r9
 801e25a:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801e25e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801e262:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801e266:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801e26a:	ea4e 0909 	orr.w	r9, lr, r9
 801e26e:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801e272:	8868      	ldrh	r0, [r5, #2]
 801e274:	d019      	beq.n	801e2aa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801e276:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801e27a:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801e27e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801e282:	fb08 f800 	mul.w	r8, r8, r0
 801e286:	fb0a fe0e 	mul.w	lr, sl, lr
 801e28a:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801e28e:	f108 0b20 	add.w	fp, r8, #32
 801e292:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801e296:	4486      	add	lr, r0
 801e298:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801e29c:	0a00      	lsrs	r0, r0, #8
 801e29e:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801e2a2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801e2a6:	ea4e 0000 	orr.w	r0, lr, r0
 801e2aa:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801e2ae:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801e2b2:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801e2b6:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801e2ba:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801e2be:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801e2c2:	ea4e 0909 	orr.w	r9, lr, r9
 801e2c6:	ea4a 0000 	orr.w	r0, sl, r0
 801e2ca:	f1bc 0f00 	cmp.w	ip, #0
 801e2ce:	f000 8105 	beq.w	801e4dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801e2d2:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 801e2d6:	3a01      	subs	r2, #1
 801e2d8:	0052      	lsls	r2, r2, #1
 801e2da:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801e2dc:	3202      	adds	r2, #2
 801e2de:	2cff      	cmp	r4, #255	; 0xff
 801e2e0:	eb05 0e02 	add.w	lr, r5, r2
 801e2e4:	5aaa      	ldrh	r2, [r5, r2]
 801e2e6:	d018      	beq.n	801e31a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801e2e8:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 801e2ec:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e2f0:	fb04 fa02 	mul.w	sl, r4, r2
 801e2f4:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801e2f8:	fb08 f805 	mul.w	r8, r8, r5
 801e2fc:	f10a 0520 	add.w	r5, sl, #32
 801e300:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801e304:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801e308:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801e30c:	4442      	add	r2, r8
 801e30e:	0a2d      	lsrs	r5, r5, #8
 801e310:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801e314:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801e318:	432a      	orrs	r2, r5
 801e31a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801e31c:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801e320:	2cff      	cmp	r4, #255	; 0xff
 801e322:	d01a      	beq.n	801e35a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801e324:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 801e328:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801e32c:	fb04 fa05 	mul.w	sl, r4, r5
 801e330:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801e334:	fb08 f80e 	mul.w	r8, r8, lr
 801e338:	f10a 0e20 	add.w	lr, sl, #32
 801e33c:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801e340:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801e344:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801e348:	4445      	add	r5, r8
 801e34a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e34e:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801e352:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 801e356:	ea45 050e 	orr.w	r5, r5, lr
 801e35a:	fb1c fe01 	smulbb	lr, ip, r1
 801e35e:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801e362:	f1cc 0810 	rsb	r8, ip, #16
 801e366:	eba8 0801 	sub.w	r8, r8, r1
 801e36a:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801e36e:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801e372:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801e376:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801e37a:	4341      	muls	r1, r0
 801e37c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801e380:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801e384:	ea4a 0202 	orr.w	r2, sl, r2
 801e388:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801e38c:	fb09 1108 	mla	r1, r9, r8, r1
 801e390:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801e394:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801e398:	fb0c 1102 	mla	r1, ip, r2, r1
 801e39c:	ea4b 0505 	orr.w	r5, fp, r5
 801e3a0:	fb0e 1e05 	mla	lr, lr, r5, r1
 801e3a4:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801e3a8:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801e3ac:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e3b0:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801e3b4:	ea42 0e0e 	orr.w	lr, r2, lr
 801e3b8:	fa1f f28e 	uxth.w	r2, lr
 801e3bc:	2bff      	cmp	r3, #255	; 0xff
 801e3be:	f040 80a1 	bne.w	801e504 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 801e3c2:	803a      	strh	r2, [r7, #0]
 801e3c4:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801e3c6:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 801e3c8:	4413      	add	r3, r2
 801e3ca:	931d      	str	r3, [sp, #116]	; 0x74
 801e3cc:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 801e3ce:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801e3d0:	441a      	add	r2, r3
 801e3d2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801e3d4:	921e      	str	r2, [sp, #120]	; 0x78
 801e3d6:	3b01      	subs	r3, #1
 801e3d8:	3702      	adds	r7, #2
 801e3da:	930f      	str	r3, [sp, #60]	; 0x3c
 801e3dc:	e6c9      	b.n	801e172 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801e3de:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801e3e0:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 801e3e2:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 801e3e4:	4433      	add	r3, r6
 801e3e6:	931d      	str	r3, [sp, #116]	; 0x74
 801e3e8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801e3ea:	441c      	add	r4, r3
 801e3ec:	9b06      	ldr	r3, [sp, #24]
 801e3ee:	941e      	str	r4, [sp, #120]	; 0x78
 801e3f0:	3b01      	subs	r3, #1
 801e3f2:	9306      	str	r3, [sp, #24]
 801e3f4:	9b07      	ldr	r3, [sp, #28]
 801e3f6:	3302      	adds	r3, #2
 801e3f8:	9307      	str	r3, [sp, #28]
 801e3fa:	e698      	b.n	801e12e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801e3fc:	d028      	beq.n	801e450 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801e3fe:	9b06      	ldr	r3, [sp, #24]
 801e400:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801e402:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 801e404:	3b01      	subs	r3, #1
 801e406:	fb00 5003 	mla	r0, r0, r3, r5
 801e40a:	1400      	asrs	r0, r0, #16
 801e40c:	f53f aeac 	bmi.w	801e168 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801e410:	3901      	subs	r1, #1
 801e412:	4288      	cmp	r0, r1
 801e414:	f6bf aea8 	bge.w	801e168 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801e418:	9920      	ldr	r1, [sp, #128]	; 0x80
 801e41a:	981e      	ldr	r0, [sp, #120]	; 0x78
 801e41c:	fb01 0303 	mla	r3, r1, r3, r0
 801e420:	141b      	asrs	r3, r3, #16
 801e422:	f53f aea1 	bmi.w	801e168 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801e426:	3a01      	subs	r2, #1
 801e428:	4293      	cmp	r3, r2
 801e42a:	f6bf ae9d 	bge.w	801e168 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801e42e:	9b06      	ldr	r3, [sp, #24]
 801e430:	f8dd e01c 	ldr.w	lr, [sp, #28]
 801e434:	930f      	str	r3, [sp, #60]	; 0x3c
 801e436:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801e43a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801e43c:	2b00      	cmp	r3, #0
 801e43e:	f300 80b6 	bgt.w	801e5ae <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 801e442:	9b06      	ldr	r3, [sp, #24]
 801e444:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801e448:	9b07      	ldr	r3, [sp, #28]
 801e44a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801e44e:	9307      	str	r3, [sp, #28]
 801e450:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801e452:	2b00      	cmp	r3, #0
 801e454:	f340 8218 	ble.w	801e888 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 801e458:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e45c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801e460:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801e464:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801e466:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e46a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e46e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e472:	eef0 6a62 	vmov.f32	s13, s5
 801e476:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e47a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e47e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e482:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 801e486:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e48a:	eef0 6a43 	vmov.f32	s13, s6
 801e48e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e492:	ee12 2a90 	vmov	r2, s5
 801e496:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e49a:	fb92 f3f3 	sdiv	r3, r2, r3
 801e49e:	ee13 2a10 	vmov	r2, s6
 801e4a2:	931f      	str	r3, [sp, #124]	; 0x7c
 801e4a4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801e4a6:	fb92 f3f3 	sdiv	r3, r2, r3
 801e4aa:	9320      	str	r3, [sp, #128]	; 0x80
 801e4ac:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801e4ae:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801e4b0:	3b01      	subs	r3, #1
 801e4b2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e4b6:	930e      	str	r3, [sp, #56]	; 0x38
 801e4b8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801e4ba:	edcd 6a1e 	vstr	s13, [sp, #120]	; 0x78
 801e4be:	bf08      	it	eq
 801e4c0:	4613      	moveq	r3, r2
 801e4c2:	9306      	str	r3, [sp, #24]
 801e4c4:	eeb0 3a67 	vmov.f32	s6, s15
 801e4c8:	eef0 2a47 	vmov.f32	s5, s14
 801e4cc:	e621      	b.n	801e112 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801e4ce:	fb08 f505 	mul.w	r5, r8, r5
 801e4d2:	fb09 5303 	mla	r3, r9, r3, r5
 801e4d6:	e6a1      	b.n	801e21c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 801e4d8:	4681      	mov	r9, r0
 801e4da:	e6c8      	b.n	801e26e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 801e4dc:	f1c1 0210 	rsb	r2, r1, #16
 801e4e0:	4341      	muls	r1, r0
 801e4e2:	fb09 1902 	mla	r9, r9, r2, r1
 801e4e6:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801e4ea:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801e4ee:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801e4f2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e4f6:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801e4fa:	ea42 0909 	orr.w	r9, r2, r9
 801e4fe:	fa1f f289 	uxth.w	r2, r9
 801e502:	e75b      	b.n	801e3bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801e504:	f8b7 c000 	ldrh.w	ip, [r7]
 801e508:	43db      	mvns	r3, r3
 801e50a:	ea4f 202c 	mov.w	r0, ip, asr #8
 801e50e:	fa5f fe83 	uxtb.w	lr, r3
 801e512:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801e516:	fb00 f00e 	mul.w	r0, r0, lr
 801e51a:	1c41      	adds	r1, r0, #1
 801e51c:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801e520:	1211      	asrs	r1, r2, #8
 801e522:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801e526:	f021 0107 	bic.w	r1, r1, #7
 801e52a:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801e52e:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801e532:	48d7      	ldr	r0, [pc, #860]	; (801e890 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 801e534:	fb05 f50e 	mul.w	r5, r5, lr
 801e538:	b2c9      	uxtb	r1, r1
 801e53a:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 801e53e:	1c69      	adds	r1, r5, #1
 801e540:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801e544:	10d1      	asrs	r1, r2, #3
 801e546:	f021 0103 	bic.w	r1, r1, #3
 801e54a:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 801e54e:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801e552:	b2db      	uxtb	r3, r3
 801e554:	00c9      	lsls	r1, r1, #3
 801e556:	fb03 f30e 	mul.w	r3, r3, lr
 801e55a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801e55e:	4301      	orrs	r1, r0
 801e560:	1c58      	adds	r0, r3, #1
 801e562:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801e566:	00d2      	lsls	r2, r2, #3
 801e568:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801e56c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801e570:	430a      	orrs	r2, r1
 801e572:	e726      	b.n	801e3c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 801e574:	f115 0e01 	adds.w	lr, r5, #1
 801e578:	f53f af24 	bmi.w	801e3c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801e57c:	4572      	cmp	r2, lr
 801e57e:	f6ff af21 	blt.w	801e3c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801e582:	f110 0e01 	adds.w	lr, r0, #1
 801e586:	f53f af1d 	bmi.w	801e3c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801e58a:	4573      	cmp	r3, lr
 801e58c:	f6ff af1a 	blt.w	801e3c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801e590:	b21b      	sxth	r3, r3
 801e592:	b212      	sxth	r2, r2
 801e594:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 801e598:	e9cd 5002 	strd	r5, r0, [sp, #8]
 801e59c:	9301      	str	r3, [sp, #4]
 801e59e:	9200      	str	r2, [sp, #0]
 801e5a0:	4639      	mov	r1, r7
 801e5a2:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 801e5a6:	9811      	ldr	r0, [sp, #68]	; 0x44
 801e5a8:	f7ff fc24 	bl	801ddf4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801e5ac:	e70a      	b.n	801e3c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801e5ae:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801e5b0:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801e5b4:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801e5b6:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801e5ba:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801e5bc:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e5c0:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801e5c2:	141f      	asrs	r7, r3, #16
 801e5c4:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801e5c6:	141b      	asrs	r3, r3, #16
 801e5c8:	fb01 3707 	mla	r7, r1, r7, r3
 801e5cc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e5ce:	fa1f fc82 	uxth.w	ip, r2
 801e5d2:	eb03 0a07 	add.w	sl, r3, r7
 801e5d6:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801e5da:	f813 9007 	ldrb.w	r9, [r3, r7]
 801e5de:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801e5e2:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801e5e6:	b29b      	uxth	r3, r3
 801e5e8:	2d00      	cmp	r5, #0
 801e5ea:	f000 80fe 	beq.w	801e7ea <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 801e5ee:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801e5f2:	940c      	str	r4, [sp, #48]	; 0x30
 801e5f4:	eb0a 0b01 	add.w	fp, sl, r1
 801e5f8:	fa1f fa85 	uxth.w	sl, r5
 801e5fc:	fb0a fc0c 	mul.w	ip, sl, ip
 801e600:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801e604:	fa1f fa8a 	uxth.w	sl, sl
 801e608:	eba0 000c 	sub.w	r0, r0, ip
 801e60c:	eba3 030a 	sub.w	r3, r3, sl
 801e610:	b280      	uxth	r0, r0
 801e612:	fb08 f000 	mul.w	r0, r8, r0
 801e616:	b29b      	uxth	r3, r3
 801e618:	fb09 0303 	mla	r3, r9, r3, r0
 801e61c:	980c      	ldr	r0, [sp, #48]	; 0x30
 801e61e:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801e622:	940d      	str	r4, [sp, #52]	; 0x34
 801e624:	fb0a 3300 	mla	r3, sl, r0, r3
 801e628:	fb0c 3304 	mla	r3, ip, r4, r3
 801e62c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801e630:	2b00      	cmp	r3, #0
 801e632:	f000 80cc 	beq.w	801e7ce <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 801e636:	9808      	ldr	r0, [sp, #32]
 801e638:	9c08      	ldr	r4, [sp, #32]
 801e63a:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801e63e:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801e642:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801e646:	f000 80d5 	beq.w	801e7f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801e64a:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801e64e:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801e652:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801e656:	fb09 f707 	mul.w	r7, r9, r7
 801e65a:	fb0a fc0c 	mul.w	ip, sl, ip
 801e65e:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801e662:	f107 0b20 	add.w	fp, r7, #32
 801e666:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801e66a:	44cc      	add	ip, r9
 801e66c:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801e670:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801e674:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801e678:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801e67c:	ea4c 0909 	orr.w	r9, ip, r9
 801e680:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801e684:	8847      	ldrh	r7, [r0, #2]
 801e686:	d019      	beq.n	801e6bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 801e688:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801e68c:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801e690:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801e694:	fb08 f807 	mul.w	r8, r8, r7
 801e698:	fb0a fc0c 	mul.w	ip, sl, ip
 801e69c:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801e6a0:	f108 0b20 	add.w	fp, r8, #32
 801e6a4:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801e6a8:	44bc      	add	ip, r7
 801e6aa:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801e6ae:	0a3f      	lsrs	r7, r7, #8
 801e6b0:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801e6b4:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801e6b8:	ea4c 0707 	orr.w	r7, ip, r7
 801e6bc:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801e6c0:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801e6c4:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801e6c8:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801e6cc:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801e6d0:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801e6d4:	ea4c 0909 	orr.w	r9, ip, r9
 801e6d8:	ea4a 0707 	orr.w	r7, sl, r7
 801e6dc:	2d00      	cmp	r5, #0
 801e6de:	f000 808b 	beq.w	801e7f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 801e6e2:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801e6e6:	3901      	subs	r1, #1
 801e6e8:	0049      	lsls	r1, r1, #1
 801e6ea:	3102      	adds	r1, #2
 801e6ec:	eb00 0c01 	add.w	ip, r0, r1
 801e6f0:	5a41      	ldrh	r1, [r0, r1]
 801e6f2:	980c      	ldr	r0, [sp, #48]	; 0x30
 801e6f4:	28ff      	cmp	r0, #255	; 0xff
 801e6f6:	d019      	beq.n	801e72c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 801e6f8:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801e6fa:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 801e6fe:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801e702:	fb04 fa01 	mul.w	sl, r4, r1
 801e706:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801e70a:	fb08 f800 	mul.w	r8, r8, r0
 801e70e:	f10a 0020 	add.w	r0, sl, #32
 801e712:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801e716:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801e71a:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801e71e:	4441      	add	r1, r8
 801e720:	0a00      	lsrs	r0, r0, #8
 801e722:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801e726:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801e72a:	4301      	orrs	r1, r0
 801e72c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801e72e:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801e732:	2cff      	cmp	r4, #255	; 0xff
 801e734:	d01a      	beq.n	801e76c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 801e736:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 801e73a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801e73e:	fb04 fa00 	mul.w	sl, r4, r0
 801e742:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801e746:	fb08 f80c 	mul.w	r8, r8, ip
 801e74a:	f10a 0c20 	add.w	ip, sl, #32
 801e74e:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801e752:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801e756:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801e75a:	4440      	add	r0, r8
 801e75c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e760:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801e764:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801e768:	ea40 000c 	orr.w	r0, r0, ip
 801e76c:	fb15 fc02 	smulbb	ip, r5, r2
 801e770:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801e774:	f1c5 0810 	rsb	r8, r5, #16
 801e778:	eba8 0802 	sub.w	r8, r8, r2
 801e77c:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801e780:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801e784:	437a      	muls	r2, r7
 801e786:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801e78a:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801e78e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801e792:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801e796:	fb09 2208 	mla	r2, r9, r8, r2
 801e79a:	ea4a 0101 	orr.w	r1, sl, r1
 801e79e:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801e7a2:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801e7a6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801e7aa:	fb05 2201 	mla	r2, r5, r1, r2
 801e7ae:	ea4b 0000 	orr.w	r0, fp, r0
 801e7b2:	fb0c 2200 	mla	r2, ip, r0, r2
 801e7b6:	0d57      	lsrs	r7, r2, #21
 801e7b8:	0952      	lsrs	r2, r2, #5
 801e7ba:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801e7be:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801e7c2:	433a      	orrs	r2, r7
 801e7c4:	2bff      	cmp	r3, #255	; 0xff
 801e7c6:	b292      	uxth	r2, r2
 801e7c8:	d127      	bne.n	801e81a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 801e7ca:	f8ae 2000 	strh.w	r2, [lr]
 801e7ce:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801e7d0:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 801e7d2:	4413      	add	r3, r2
 801e7d4:	931d      	str	r3, [sp, #116]	; 0x74
 801e7d6:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 801e7d8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801e7da:	441a      	add	r2, r3
 801e7dc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801e7de:	921e      	str	r2, [sp, #120]	; 0x78
 801e7e0:	3b01      	subs	r3, #1
 801e7e2:	f10e 0e02 	add.w	lr, lr, #2
 801e7e6:	930f      	str	r3, [sp, #60]	; 0x3c
 801e7e8:	e627      	b.n	801e43a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801e7ea:	fb08 f000 	mul.w	r0, r8, r0
 801e7ee:	fb09 0303 	mla	r3, r9, r3, r0
 801e7f2:	e71b      	b.n	801e62c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 801e7f4:	46b9      	mov	r9, r7
 801e7f6:	e743      	b.n	801e680 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 801e7f8:	f1c2 0110 	rsb	r1, r2, #16
 801e7fc:	437a      	muls	r2, r7
 801e7fe:	fb09 2901 	mla	r9, r9, r1, r2
 801e802:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801e806:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801e80a:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801e80e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801e812:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801e816:	4302      	orrs	r2, r0
 801e818:	e7d4      	b.n	801e7c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 801e81a:	f8be 7000 	ldrh.w	r7, [lr]
 801e81e:	4c1c      	ldr	r4, [pc, #112]	; (801e890 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 801e820:	43db      	mvns	r3, r3
 801e822:	1238      	asrs	r0, r7, #8
 801e824:	fa5f fc83 	uxtb.w	ip, r3
 801e828:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801e82c:	10fd      	asrs	r5, r7, #3
 801e82e:	fb00 f00c 	mul.w	r0, r0, ip
 801e832:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801e836:	fb05 f10c 	mul.w	r1, r5, ip
 801e83a:	1c45      	adds	r5, r0, #1
 801e83c:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801e840:	1215      	asrs	r5, r2, #8
 801e842:	f025 0507 	bic.w	r5, r5, #7
 801e846:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801e84a:	1c4d      	adds	r5, r1, #1
 801e84c:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 801e850:	10d1      	asrs	r1, r2, #3
 801e852:	f021 0103 	bic.w	r1, r1, #3
 801e856:	00fb      	lsls	r3, r7, #3
 801e858:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801e85c:	b2db      	uxtb	r3, r3
 801e85e:	b2c0      	uxtb	r0, r0
 801e860:	00c9      	lsls	r1, r1, #3
 801e862:	fb03 f30c 	mul.w	r3, r3, ip
 801e866:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801e86a:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 801e86e:	4308      	orrs	r0, r1
 801e870:	1c59      	adds	r1, r3, #1
 801e872:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801e876:	00d2      	lsls	r2, r2, #3
 801e878:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801e87c:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 801e880:	4318      	orrs	r0, r3
 801e882:	f8ae 0000 	strh.w	r0, [lr]
 801e886:	e7a2      	b.n	801e7ce <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 801e888:	b013      	add	sp, #76	; 0x4c
 801e88a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e88e:	bf00      	nop
 801e890:	fffff800 	.word	0xfffff800

0801e894 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 801e894:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801e898:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	; 0x24
 801e89c:	fb05 4c03 	mla	ip, r5, r3, r4
 801e8a0:	2d00      	cmp	r5, #0
 801e8a2:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 801e8a6:	f89d 902c 	ldrb.w	r9, [sp, #44]	; 0x2c
 801e8aa:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 801e8ae:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 801e8b2:	8808      	ldrh	r0, [r1, #0]
 801e8b4:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 801e8b8:	f2c0 80a7 	blt.w	801ea0a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 801e8bc:	45aa      	cmp	sl, r5
 801e8be:	f340 80a4 	ble.w	801ea0a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 801e8c2:	2c00      	cmp	r4, #0
 801e8c4:	f2c0 809f 	blt.w	801ea06 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 801e8c8:	42a3      	cmp	r3, r4
 801e8ca:	f340 809c 	ble.w	801ea06 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 801e8ce:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 801e8d2:	1c62      	adds	r2, r4, #1
 801e8d4:	f100 809c 	bmi.w	801ea10 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801e8d8:	4293      	cmp	r3, r2
 801e8da:	f340 8099 	ble.w	801ea10 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801e8de:	f1b9 0f00 	cmp.w	r9, #0
 801e8e2:	f000 8095 	beq.w	801ea10 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801e8e6:	f8be c002 	ldrh.w	ip, [lr, #2]
 801e8ea:	3501      	adds	r5, #1
 801e8ec:	f100 8094 	bmi.w	801ea18 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801e8f0:	45aa      	cmp	sl, r5
 801e8f2:	f340 8091 	ble.w	801ea18 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801e8f6:	2f00      	cmp	r7, #0
 801e8f8:	f000 808e 	beq.w	801ea18 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801e8fc:	2c00      	cmp	r4, #0
 801e8fe:	f2c0 8089 	blt.w	801ea14 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 801e902:	42a3      	cmp	r3, r4
 801e904:	f340 8086 	ble.w	801ea14 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 801e908:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 801e90c:	3401      	adds	r4, #1
 801e90e:	f100 8086 	bmi.w	801ea1e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801e912:	42a3      	cmp	r3, r4
 801e914:	f340 8083 	ble.w	801ea1e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801e918:	f1b9 0f00 	cmp.w	r9, #0
 801e91c:	d07f      	beq.n	801ea1e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801e91e:	3301      	adds	r3, #1
 801e920:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 801e924:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801e928:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801e92c:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 801e930:	fb19 fe07 	smulbb	lr, r9, r7
 801e934:	ea44 0808 	orr.w	r8, r4, r8
 801e938:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801e93c:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801e940:	f1c7 0210 	rsb	r2, r7, #16
 801e944:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801e948:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801e94c:	ea44 0c0c 	orr.w	ip, r4, ip
 801e950:	eba2 0209 	sub.w	r2, r2, r9
 801e954:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801e958:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801e95c:	fb04 f40c 	mul.w	r4, r4, ip
 801e960:	fb02 4808 	mla	r8, r2, r8, r4
 801e964:	041a      	lsls	r2, r3, #16
 801e966:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801e96a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801e96e:	4313      	orrs	r3, r2
 801e970:	042a      	lsls	r2, r5, #16
 801e972:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801e976:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801e97a:	fb0e 8303 	mla	r3, lr, r3, r8
 801e97e:	432a      	orrs	r2, r5
 801e980:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801e984:	fb07 3202 	mla	r2, r7, r2, r3
 801e988:	0d53      	lsrs	r3, r2, #21
 801e98a:	0952      	lsrs	r2, r2, #5
 801e98c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801e990:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801e994:	431a      	orrs	r2, r3
 801e996:	b293      	uxth	r3, r2
 801e998:	b2b4      	uxth	r4, r6
 801e99a:	1202      	asrs	r2, r0, #8
 801e99c:	43f6      	mvns	r6, r6
 801e99e:	b2f6      	uxtb	r6, r6
 801e9a0:	121d      	asrs	r5, r3, #8
 801e9a2:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801e9a6:	fb12 f206 	smulbb	r2, r2, r6
 801e9aa:	10c7      	asrs	r7, r0, #3
 801e9ac:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801e9b0:	00c0      	lsls	r0, r0, #3
 801e9b2:	fb05 2504 	mla	r5, r5, r4, r2
 801e9b6:	b2c0      	uxtb	r0, r0
 801e9b8:	10da      	asrs	r2, r3, #3
 801e9ba:	00db      	lsls	r3, r3, #3
 801e9bc:	b2db      	uxtb	r3, r3
 801e9be:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801e9c2:	fb10 f006 	smulbb	r0, r0, r6
 801e9c6:	b2ad      	uxth	r5, r5
 801e9c8:	fb03 0004 	mla	r0, r3, r4, r0
 801e9cc:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801e9d0:	fb17 f706 	smulbb	r7, r7, r6
 801e9d4:	b280      	uxth	r0, r0
 801e9d6:	1c6b      	adds	r3, r5, #1
 801e9d8:	fb02 7204 	mla	r2, r2, r4, r7
 801e9dc:	b292      	uxth	r2, r2
 801e9de:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801e9e2:	1c43      	adds	r3, r0, #1
 801e9e4:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801e9e8:	1c50      	adds	r0, r2, #1
 801e9ea:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801e9ee:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801e9f2:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801e9f6:	0952      	lsrs	r2, r2, #5
 801e9f8:	432b      	orrs	r3, r5
 801e9fa:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e9fe:	4313      	orrs	r3, r2
 801ea00:	800b      	strh	r3, [r1, #0]
 801ea02:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801ea06:	4680      	mov	r8, r0
 801ea08:	e763      	b.n	801e8d2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 801ea0a:	4684      	mov	ip, r0
 801ea0c:	4680      	mov	r8, r0
 801ea0e:	e76c      	b.n	801e8ea <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 801ea10:	4684      	mov	ip, r0
 801ea12:	e76a      	b.n	801e8ea <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 801ea14:	4605      	mov	r5, r0
 801ea16:	e779      	b.n	801e90c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 801ea18:	4603      	mov	r3, r0
 801ea1a:	4605      	mov	r5, r0
 801ea1c:	e782      	b.n	801e924 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 801ea1e:	4603      	mov	r3, r0
 801ea20:	e780      	b.n	801e924 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

0801ea22 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ea22:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ea26:	b093      	sub	sp, #76	; 0x4c
 801ea28:	461d      	mov	r5, r3
 801ea2a:	9210      	str	r2, [sp, #64]	; 0x40
 801ea2c:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801ea2e:	f89d 2094 	ldrb.w	r2, [sp, #148]	; 0x94
 801ea32:	920b      	str	r2, [sp, #44]	; 0x2c
 801ea34:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	; 0x88
 801ea38:	910a      	str	r1, [sp, #40]	; 0x28
 801ea3a:	6859      	ldr	r1, [r3, #4]
 801ea3c:	681b      	ldr	r3, [r3, #0]
 801ea3e:	9011      	str	r0, [sp, #68]	; 0x44
 801ea40:	fb01 2707 	mla	r7, r1, r7, r2
 801ea44:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 801ea48:	9307      	str	r3, [sp, #28]
 801ea4a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ea4c:	681b      	ldr	r3, [r3, #0]
 801ea4e:	9309      	str	r3, [sp, #36]	; 0x24
 801ea50:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801ea52:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 801ea56:	43db      	mvns	r3, r3
 801ea58:	b2db      	uxtb	r3, r3
 801ea5a:	9308      	str	r3, [sp, #32]
 801ea5c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ea5e:	2b00      	cmp	r3, #0
 801ea60:	dc03      	bgt.n	801ea6a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801ea62:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ea64:	2b00      	cmp	r3, #0
 801ea66:	f340 8203 	ble.w	801ee70 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801ea6a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ea6c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ea70:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801ea74:	1e48      	subs	r0, r1, #1
 801ea76:	f102 3cff 	add.w	ip, r2, #4294967295
 801ea7a:	2d00      	cmp	r5, #0
 801ea7c:	f340 80da 	ble.w	801ec34 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 801ea80:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801ea84:	ea4f 4326 	mov.w	r3, r6, asr #16
 801ea88:	d406      	bmi.n	801ea98 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801ea8a:	4586      	cmp	lr, r0
 801ea8c:	da04      	bge.n	801ea98 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801ea8e:	2b00      	cmp	r3, #0
 801ea90:	db02      	blt.n	801ea98 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801ea92:	4563      	cmp	r3, ip
 801ea94:	f2c0 80cf 	blt.w	801ec36 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801ea98:	f11e 0e01 	adds.w	lr, lr, #1
 801ea9c:	f100 80c1 	bmi.w	801ec22 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801eaa0:	4571      	cmp	r1, lr
 801eaa2:	f2c0 80be 	blt.w	801ec22 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801eaa6:	3301      	adds	r3, #1
 801eaa8:	f100 80bb 	bmi.w	801ec22 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801eaac:	429a      	cmp	r2, r3
 801eaae:	f2c0 80b8 	blt.w	801ec22 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801eab2:	f8dd 801c 	ldr.w	r8, [sp, #28]
 801eab6:	46a9      	mov	r9, r5
 801eab8:	f1b9 0f00 	cmp.w	r9, #0
 801eabc:	f340 80d8 	ble.w	801ec70 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 801eac0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801eac2:	1421      	asrs	r1, r4, #16
 801eac4:	ea4f 4026 	mov.w	r0, r6, asr #16
 801eac8:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801eacc:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801ead0:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801ead4:	f100 8111 	bmi.w	801ecfa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801ead8:	f10e 3aff 	add.w	sl, lr, #4294967295
 801eadc:	4551      	cmp	r1, sl
 801eade:	f280 810c 	bge.w	801ecfa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801eae2:	2800      	cmp	r0, #0
 801eae4:	f2c0 8109 	blt.w	801ecfa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801eae8:	f103 3aff 	add.w	sl, r3, #4294967295
 801eaec:	4550      	cmp	r0, sl
 801eaee:	f280 8104 	bge.w	801ecfa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801eaf2:	fa0f f38e 	sxth.w	r3, lr
 801eaf6:	fb00 1103 	mla	r1, r0, r3, r1
 801eafa:	9809      	ldr	r0, [sp, #36]	; 0x24
 801eafc:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 801eb00:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 801eb04:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 801eb08:	f1bc 0f00 	cmp.w	ip, #0
 801eb0c:	d007      	beq.n	801eb1e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 801eb0e:	005b      	lsls	r3, r3, #1
 801eb10:	eb0a 0003 	add.w	r0, sl, r3
 801eb14:	f83a 3003 	ldrh.w	r3, [sl, r3]
 801eb18:	930c      	str	r3, [sp, #48]	; 0x30
 801eb1a:	8843      	ldrh	r3, [r0, #2]
 801eb1c:	930d      	str	r3, [sp, #52]	; 0x34
 801eb1e:	ea4f 400e 	mov.w	r0, lr, lsl #16
 801eb22:	fb12 f30c 	smulbb	r3, r2, ip
 801eb26:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801eb2a:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801eb2e:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801eb32:	10db      	asrs	r3, r3, #3
 801eb34:	ea40 000e 	orr.w	r0, r0, lr
 801eb38:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801eb3c:	f1cc 0e10 	rsb	lr, ip, #16
 801eb40:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801eb44:	ebae 0e02 	sub.w	lr, lr, r2
 801eb48:	ea4a 0101 	orr.w	r1, sl, r1
 801eb4c:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801eb50:	4351      	muls	r1, r2
 801eb52:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801eb54:	9f08      	ldr	r7, [sp, #32]
 801eb56:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801eb5a:	fb0e 1e00 	mla	lr, lr, r0, r1
 801eb5e:	0410      	lsls	r0, r2, #16
 801eb60:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801eb64:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801eb68:	4310      	orrs	r0, r2
 801eb6a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801eb6c:	990c      	ldr	r1, [sp, #48]	; 0x30
 801eb6e:	0412      	lsls	r2, r2, #16
 801eb70:	fb03 e000 	mla	r0, r3, r0, lr
 801eb74:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801eb78:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 801eb7c:	ea42 020e 	orr.w	r2, r2, lr
 801eb80:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801eb84:	fb03 0302 	mla	r3, r3, r2, r0
 801eb88:	0d5a      	lsrs	r2, r3, #21
 801eb8a:	095b      	lsrs	r3, r3, #5
 801eb8c:	f8b8 0000 	ldrh.w	r0, [r8]
 801eb90:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801eb94:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801eb98:	4313      	orrs	r3, r2
 801eb9a:	b29b      	uxth	r3, r3
 801eb9c:	1201      	asrs	r1, r0, #8
 801eb9e:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 801eba2:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801eba6:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801ebaa:	fb11 f107 	smulbb	r1, r1, r7
 801ebae:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801ebb2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801ebb6:	00c0      	lsls	r0, r0, #3
 801ebb8:	fb0c 1c02 	mla	ip, ip, r2, r1
 801ebbc:	b2c0      	uxtb	r0, r0
 801ebbe:	10d9      	asrs	r1, r3, #3
 801ebc0:	00db      	lsls	r3, r3, #3
 801ebc2:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801ebc6:	b2db      	uxtb	r3, r3
 801ebc8:	fb10 f007 	smulbb	r0, r0, r7
 801ebcc:	fa1f fc8c 	uxth.w	ip, ip
 801ebd0:	fb03 0302 	mla	r3, r3, r2, r0
 801ebd4:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801ebd8:	fb1e fe07 	smulbb	lr, lr, r7
 801ebdc:	fb01 e102 	mla	r1, r1, r2, lr
 801ebe0:	b29a      	uxth	r2, r3
 801ebe2:	f10c 0301 	add.w	r3, ip, #1
 801ebe6:	b289      	uxth	r1, r1
 801ebe8:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801ebec:	1c53      	adds	r3, r2, #1
 801ebee:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801ebf2:	1c4a      	adds	r2, r1, #1
 801ebf4:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801ebf8:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801ebfc:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801ec00:	0949      	lsrs	r1, r1, #5
 801ec02:	ea43 030c 	orr.w	r3, r3, ip
 801ec06:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801ec0a:	430b      	orrs	r3, r1
 801ec0c:	f8a8 3000 	strh.w	r3, [r8]
 801ec10:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801ec12:	441c      	add	r4, r3
 801ec14:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801ec16:	f108 0802 	add.w	r8, r8, #2
 801ec1a:	441e      	add	r6, r3
 801ec1c:	f109 39ff 	add.w	r9, r9, #4294967295
 801ec20:	e74a      	b.n	801eab8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801ec22:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801ec24:	441c      	add	r4, r3
 801ec26:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801ec28:	441e      	add	r6, r3
 801ec2a:	9b07      	ldr	r3, [sp, #28]
 801ec2c:	3302      	adds	r3, #2
 801ec2e:	3d01      	subs	r5, #1
 801ec30:	9307      	str	r3, [sp, #28]
 801ec32:	e722      	b.n	801ea7a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801ec34:	d022      	beq.n	801ec7c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 801ec36:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801ec38:	1e6b      	subs	r3, r5, #1
 801ec3a:	fb00 4003 	mla	r0, r0, r3, r4
 801ec3e:	1400      	asrs	r0, r0, #16
 801ec40:	f53f af37 	bmi.w	801eab2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801ec44:	3901      	subs	r1, #1
 801ec46:	4288      	cmp	r0, r1
 801ec48:	f6bf af33 	bge.w	801eab2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801ec4c:	9920      	ldr	r1, [sp, #128]	; 0x80
 801ec4e:	fb01 6303 	mla	r3, r1, r3, r6
 801ec52:	141b      	asrs	r3, r3, #16
 801ec54:	f53f af2d 	bmi.w	801eab2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801ec58:	3a01      	subs	r2, #1
 801ec5a:	4293      	cmp	r3, r2
 801ec5c:	f6bf af29 	bge.w	801eab2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801ec60:	f8dd 901c 	ldr.w	r9, [sp, #28]
 801ec64:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 801ec68:	46a8      	mov	r8, r5
 801ec6a:	f1b8 0f00 	cmp.w	r8, #0
 801ec6e:	dc5e      	bgt.n	801ed2e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801ec70:	9b07      	ldr	r3, [sp, #28]
 801ec72:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801ec76:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801ec7a:	9307      	str	r3, [sp, #28]
 801ec7c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ec7e:	2b00      	cmp	r3, #0
 801ec80:	f340 80f6 	ble.w	801ee70 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801ec84:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ec88:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801ec8c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801ec90:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801ec92:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ec96:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ec9a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ec9e:	eef0 6a62 	vmov.f32	s13, s5
 801eca2:	ee61 7a27 	vmul.f32	s15, s2, s15
 801eca6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ecaa:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ecae:	ee16 4a90 	vmov	r4, s13
 801ecb2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ecb6:	eef0 6a43 	vmov.f32	s13, s6
 801ecba:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ecbe:	ee12 2a90 	vmov	r2, s5
 801ecc2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ecc6:	fb92 f3f3 	sdiv	r3, r2, r3
 801ecca:	ee13 2a10 	vmov	r2, s6
 801ecce:	931f      	str	r3, [sp, #124]	; 0x7c
 801ecd0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801ecd2:	fb92 f3f3 	sdiv	r3, r2, r3
 801ecd6:	9320      	str	r3, [sp, #128]	; 0x80
 801ecd8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ecda:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801ecdc:	3b01      	subs	r3, #1
 801ecde:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ece2:	930a      	str	r3, [sp, #40]	; 0x28
 801ece4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801ece6:	ee16 6a90 	vmov	r6, s13
 801ecea:	bf14      	ite	ne
 801ecec:	461d      	movne	r5, r3
 801ecee:	4615      	moveq	r5, r2
 801ecf0:	eeb0 3a67 	vmov.f32	s6, s15
 801ecf4:	eef0 2a47 	vmov.f32	s5, s14
 801ecf8:	e6b0      	b.n	801ea5c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801ecfa:	f111 0a01 	adds.w	sl, r1, #1
 801ecfe:	d487      	bmi.n	801ec10 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801ed00:	45d6      	cmp	lr, sl
 801ed02:	db85      	blt.n	801ec10 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801ed04:	f110 0a01 	adds.w	sl, r0, #1
 801ed08:	d482      	bmi.n	801ec10 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801ed0a:	4553      	cmp	r3, sl
 801ed0c:	db80      	blt.n	801ec10 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801ed0e:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801ed10:	9101      	str	r1, [sp, #4]
 801ed12:	b21b      	sxth	r3, r3
 801ed14:	e9cd 0202 	strd	r0, r2, [sp, #8]
 801ed18:	9300      	str	r3, [sp, #0]
 801ed1a:	e9cd c704 	strd	ip, r7, [sp, #16]
 801ed1e:	fa0f f38e 	sxth.w	r3, lr
 801ed22:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801ed24:	9811      	ldr	r0, [sp, #68]	; 0x44
 801ed26:	4641      	mov	r1, r8
 801ed28:	f7ff fdb4 	bl	801e894 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 801ed2c:	e770      	b.n	801ec10 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801ed2e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ed30:	9f09      	ldr	r7, [sp, #36]	; 0x24
 801ed32:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ed36:	1430      	asrs	r0, r6, #16
 801ed38:	1423      	asrs	r3, r4, #16
 801ed3a:	fb01 3000 	mla	r0, r1, r0, r3
 801ed3e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ed40:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 801ed44:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 801ed48:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801ed4c:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801ed50:	8858      	ldrh	r0, [r3, #2]
 801ed52:	f1be 0f00 	cmp.w	lr, #0
 801ed56:	d00b      	beq.n	801ed70 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 801ed58:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801ed5c:	3901      	subs	r1, #1
 801ed5e:	0049      	lsls	r1, r1, #1
 801ed60:	3102      	adds	r1, #2
 801ed62:	eb03 0b01 	add.w	fp, r3, r1
 801ed66:	5a5b      	ldrh	r3, [r3, r1]
 801ed68:	930e      	str	r3, [sp, #56]	; 0x38
 801ed6a:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801ed6e:	930f      	str	r3, [sp, #60]	; 0x3c
 801ed70:	ea4f 410c 	mov.w	r1, ip, lsl #16
 801ed74:	fb12 f30e 	smulbb	r3, r2, lr
 801ed78:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801ed7c:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801ed80:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 801ed84:	10db      	asrs	r3, r3, #3
 801ed86:	ea41 010c 	orr.w	r1, r1, ip
 801ed8a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801ed8e:	f1ce 0c10 	rsb	ip, lr, #16
 801ed92:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801ed96:	ebac 0c02 	sub.w	ip, ip, r2
 801ed9a:	ea4b 0000 	orr.w	r0, fp, r0
 801ed9e:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801eda2:	4350      	muls	r0, r2
 801eda4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801eda6:	9f08      	ldr	r7, [sp, #32]
 801eda8:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801edac:	fb0c 0c01 	mla	ip, ip, r1, r0
 801edb0:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801edb4:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 801edb8:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801edba:	980e      	ldr	r0, [sp, #56]	; 0x38
 801edbc:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801edc0:	0412      	lsls	r2, r2, #16
 801edc2:	ea4b 0101 	orr.w	r1, fp, r1
 801edc6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801edca:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801edce:	fb03 c101 	mla	r1, r3, r1, ip
 801edd2:	4302      	orrs	r2, r0
 801edd4:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801edd8:	fb03 1202 	mla	r2, r3, r2, r1
 801eddc:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 801ede0:	0952      	lsrs	r2, r2, #5
 801ede2:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 801ede6:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801edea:	f8b9 2000 	ldrh.w	r2, [r9]
 801edee:	ea4b 0303 	orr.w	r3, fp, r3
 801edf2:	b29b      	uxth	r3, r3
 801edf4:	1211      	asrs	r1, r2, #8
 801edf6:	1218      	asrs	r0, r3, #8
 801edf8:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801edfc:	fb11 f107 	smulbb	r1, r1, r7
 801ee00:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 801ee04:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801ee08:	00d2      	lsls	r2, r2, #3
 801ee0a:	fb00 100a 	mla	r0, r0, sl, r1
 801ee0e:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801ee12:	10d9      	asrs	r1, r3, #3
 801ee14:	b2d2      	uxtb	r2, r2
 801ee16:	00db      	lsls	r3, r3, #3
 801ee18:	fb1c fc07 	smulbb	ip, ip, r7
 801ee1c:	fb12 f207 	smulbb	r2, r2, r7
 801ee20:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801ee24:	b2db      	uxtb	r3, r3
 801ee26:	b280      	uxth	r0, r0
 801ee28:	fb01 c10a 	mla	r1, r1, sl, ip
 801ee2c:	fb03 230a 	mla	r3, r3, sl, r2
 801ee30:	b29b      	uxth	r3, r3
 801ee32:	b289      	uxth	r1, r1
 801ee34:	1c42      	adds	r2, r0, #1
 801ee36:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801ee3a:	f101 0c01 	add.w	ip, r1, #1
 801ee3e:	1c5a      	adds	r2, r3, #1
 801ee40:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801ee44:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801ee48:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801ee4a:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801ee4e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801ee52:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801ee56:	4310      	orrs	r0, r2
 801ee58:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801ee5c:	441c      	add	r4, r3
 801ee5e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801ee60:	ea40 000c 	orr.w	r0, r0, ip
 801ee64:	f829 0b02 	strh.w	r0, [r9], #2
 801ee68:	441e      	add	r6, r3
 801ee6a:	f108 38ff 	add.w	r8, r8, #4294967295
 801ee6e:	e6fc      	b.n	801ec6a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 801ee70:	b013      	add	sp, #76	; 0x4c
 801ee72:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801ee76 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 801ee76:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801ee7a:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 801ee7e:	fb0e 4703 	mla	r7, lr, r3, r4
 801ee82:	f1be 0f00 	cmp.w	lr, #0
 801ee86:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 801ee8a:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
 801ee8e:	f89d 602c 	ldrb.w	r6, [sp, #44]	; 0x2c
 801ee92:	8808      	ldrh	r0, [r1, #0]
 801ee94:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 801ee98:	db60      	blt.n	801ef5c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 801ee9a:	45f1      	cmp	r9, lr
 801ee9c:	dd5e      	ble.n	801ef5c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 801ee9e:	2c00      	cmp	r4, #0
 801eea0:	db5a      	blt.n	801ef58 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 801eea2:	42a3      	cmp	r3, r4
 801eea4:	dd58      	ble.n	801ef58 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 801eea6:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 801eeaa:	1c62      	adds	r2, r4, #1
 801eeac:	d459      	bmi.n	801ef62 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801eeae:	4293      	cmp	r3, r2
 801eeb0:	dd57      	ble.n	801ef62 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801eeb2:	2d00      	cmp	r5, #0
 801eeb4:	d055      	beq.n	801ef62 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801eeb6:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 801eeba:	f11e 0e01 	adds.w	lr, lr, #1
 801eebe:	d454      	bmi.n	801ef6a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801eec0:	45f1      	cmp	r9, lr
 801eec2:	dd52      	ble.n	801ef6a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801eec4:	2e00      	cmp	r6, #0
 801eec6:	d050      	beq.n	801ef6a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801eec8:	2c00      	cmp	r4, #0
 801eeca:	db4c      	blt.n	801ef66 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 801eecc:	42a3      	cmp	r3, r4
 801eece:	dd4a      	ble.n	801ef66 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 801eed0:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 801eed4:	3401      	adds	r4, #1
 801eed6:	d405      	bmi.n	801eee4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801eed8:	42a3      	cmp	r3, r4
 801eeda:	dd03      	ble.n	801eee4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801eedc:	b115      	cbz	r5, 801eee4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801eede:	3301      	adds	r3, #1
 801eee0:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 801eee4:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801eee8:	fb15 f406 	smulbb	r4, r5, r6
 801eeec:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801eef0:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801eef4:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801eef8:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801eefc:	ea43 0c0c 	orr.w	ip, r3, ip
 801ef00:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801ef04:	f1c6 0310 	rsb	r3, r6, #16
 801ef08:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801ef0c:	1b5b      	subs	r3, r3, r5
 801ef0e:	ea4e 0707 	orr.w	r7, lr, r7
 801ef12:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801ef16:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801ef1a:	437d      	muls	r5, r7
 801ef1c:	fb03 5c0c 	mla	ip, r3, ip, r5
 801ef20:	0403      	lsls	r3, r0, #16
 801ef22:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801ef26:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801ef2a:	4318      	orrs	r0, r3
 801ef2c:	0413      	lsls	r3, r2, #16
 801ef2e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801ef32:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801ef36:	4313      	orrs	r3, r2
 801ef38:	fb04 c000 	mla	r0, r4, r0, ip
 801ef3c:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801ef40:	fb06 0003 	mla	r0, r6, r3, r0
 801ef44:	0d43      	lsrs	r3, r0, #21
 801ef46:	0940      	lsrs	r0, r0, #5
 801ef48:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ef4c:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801ef50:	4318      	orrs	r0, r3
 801ef52:	8008      	strh	r0, [r1, #0]
 801ef54:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801ef58:	4684      	mov	ip, r0
 801ef5a:	e7a6      	b.n	801eeaa <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 801ef5c:	4607      	mov	r7, r0
 801ef5e:	4684      	mov	ip, r0
 801ef60:	e7ab      	b.n	801eeba <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801ef62:	4607      	mov	r7, r0
 801ef64:	e7a9      	b.n	801eeba <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801ef66:	4602      	mov	r2, r0
 801ef68:	e7b4      	b.n	801eed4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 801ef6a:	4602      	mov	r2, r0
 801ef6c:	e7ba      	b.n	801eee4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

0801ef6e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ef6e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ef72:	b08f      	sub	sp, #60	; 0x3c
 801ef74:	461d      	mov	r5, r3
 801ef76:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801ef78:	920c      	str	r2, [sp, #48]	; 0x30
 801ef7a:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	; 0x78
 801ef7e:	9107      	str	r1, [sp, #28]
 801ef80:	6859      	ldr	r1, [r3, #4]
 801ef82:	681b      	ldr	r3, [r3, #0]
 801ef84:	900d      	str	r0, [sp, #52]	; 0x34
 801ef86:	fb01 2707 	mla	r7, r1, r7, r2
 801ef8a:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 801ef8e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801ef90:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	; 0x64
 801ef94:	f8d3 8000 	ldr.w	r8, [r3]
 801ef98:	9b07      	ldr	r3, [sp, #28]
 801ef9a:	2b00      	cmp	r3, #0
 801ef9c:	dc03      	bgt.n	801efa6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801ef9e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801efa0:	2b00      	cmp	r3, #0
 801efa2:	f340 8181 	ble.w	801f2a8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 801efa6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801efa8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801efac:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801efb0:	1e48      	subs	r0, r1, #1
 801efb2:	f102 3cff 	add.w	ip, r2, #4294967295
 801efb6:	2d00      	cmp	r5, #0
 801efb8:	f340 809b 	ble.w	801f0f2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 801efbc:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801efc0:	ea4f 4326 	mov.w	r3, r6, asr #16
 801efc4:	d406      	bmi.n	801efd4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801efc6:	4586      	cmp	lr, r0
 801efc8:	da04      	bge.n	801efd4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801efca:	2b00      	cmp	r3, #0
 801efcc:	db02      	blt.n	801efd4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801efce:	4563      	cmp	r3, ip
 801efd0:	f2c0 8090 	blt.w	801f0f4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801efd4:	f11e 0e01 	adds.w	lr, lr, #1
 801efd8:	f100 8084 	bmi.w	801f0e4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801efdc:	4571      	cmp	r1, lr
 801efde:	f2c0 8081 	blt.w	801f0e4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801efe2:	3301      	adds	r3, #1
 801efe4:	d47e      	bmi.n	801f0e4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801efe6:	429a      	cmp	r2, r3
 801efe8:	db7c      	blt.n	801f0e4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801efea:	46aa      	mov	sl, r5
 801efec:	46b9      	mov	r9, r7
 801efee:	f1ba 0f00 	cmp.w	sl, #0
 801eff2:	f340 8099 	ble.w	801f128 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 801eff6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801eff8:	1421      	asrs	r1, r4, #16
 801effa:	ea4f 4026 	mov.w	r0, r6, asr #16
 801effe:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801f002:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801f006:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801f00a:	f100 80d0 	bmi.w	801f1ae <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801f00e:	f10e 3bff 	add.w	fp, lr, #4294967295
 801f012:	4559      	cmp	r1, fp
 801f014:	f280 80cb 	bge.w	801f1ae <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801f018:	2800      	cmp	r0, #0
 801f01a:	f2c0 80c8 	blt.w	801f1ae <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801f01e:	f103 3bff 	add.w	fp, r3, #4294967295
 801f022:	4558      	cmp	r0, fp
 801f024:	f280 80c3 	bge.w	801f1ae <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801f028:	fa0f fe8e 	sxth.w	lr, lr
 801f02c:	fb00 110e 	mla	r1, r0, lr, r1
 801f030:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801f034:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 801f038:	8841      	ldrh	r1, [r0, #2]
 801f03a:	f1bc 0f00 	cmp.w	ip, #0
 801f03e:	d00b      	beq.n	801f058 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 801f040:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 801f044:	3b01      	subs	r3, #1
 801f046:	005b      	lsls	r3, r3, #1
 801f048:	3302      	adds	r3, #2
 801f04a:	eb00 0e03 	add.w	lr, r0, r3
 801f04e:	5ac3      	ldrh	r3, [r0, r3]
 801f050:	9308      	str	r3, [sp, #32]
 801f052:	f8be 3002 	ldrh.w	r3, [lr, #2]
 801f056:	9309      	str	r3, [sp, #36]	; 0x24
 801f058:	ea4f 400b 	mov.w	r0, fp, lsl #16
 801f05c:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801f060:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801f064:	ea40 000b 	orr.w	r0, r0, fp
 801f068:	fb12 f30c 	smulbb	r3, r2, ip
 801f06c:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801f070:	10db      	asrs	r3, r3, #3
 801f072:	f1cc 0e10 	rsb	lr, ip, #16
 801f076:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801f07a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801f07e:	ebae 0e02 	sub.w	lr, lr, r2
 801f082:	ea4b 0101 	orr.w	r1, fp, r1
 801f086:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801f08a:	4351      	muls	r1, r2
 801f08c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801f08e:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801f092:	fb0e 1e00 	mla	lr, lr, r0, r1
 801f096:	0410      	lsls	r0, r2, #16
 801f098:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801f09c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801f0a0:	4310      	orrs	r0, r2
 801f0a2:	9a08      	ldr	r2, [sp, #32]
 801f0a4:	9908      	ldr	r1, [sp, #32]
 801f0a6:	0412      	lsls	r2, r2, #16
 801f0a8:	fb03 e000 	mla	r0, r3, r0, lr
 801f0ac:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801f0b0:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 801f0b4:	ea42 020e 	orr.w	r2, r2, lr
 801f0b8:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801f0bc:	fb03 0302 	mla	r3, r3, r2, r0
 801f0c0:	0d5a      	lsrs	r2, r3, #21
 801f0c2:	095b      	lsrs	r3, r3, #5
 801f0c4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801f0c8:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801f0cc:	4313      	orrs	r3, r2
 801f0ce:	f8a9 3000 	strh.w	r3, [r9]
 801f0d2:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801f0d4:	441c      	add	r4, r3
 801f0d6:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801f0d8:	f109 0902 	add.w	r9, r9, #2
 801f0dc:	441e      	add	r6, r3
 801f0de:	f10a 3aff 	add.w	sl, sl, #4294967295
 801f0e2:	e784      	b.n	801efee <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801f0e4:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801f0e6:	441c      	add	r4, r3
 801f0e8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801f0ea:	3d01      	subs	r5, #1
 801f0ec:	441e      	add	r6, r3
 801f0ee:	3702      	adds	r7, #2
 801f0f0:	e761      	b.n	801efb6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801f0f2:	d01d      	beq.n	801f130 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801f0f4:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801f0f6:	1e6b      	subs	r3, r5, #1
 801f0f8:	fb00 4003 	mla	r0, r0, r3, r4
 801f0fc:	1400      	asrs	r0, r0, #16
 801f0fe:	f53f af74 	bmi.w	801efea <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801f102:	3901      	subs	r1, #1
 801f104:	4288      	cmp	r0, r1
 801f106:	f6bf af70 	bge.w	801efea <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801f10a:	991c      	ldr	r1, [sp, #112]	; 0x70
 801f10c:	fb01 6303 	mla	r3, r1, r3, r6
 801f110:	141b      	asrs	r3, r3, #16
 801f112:	f53f af6a 	bmi.w	801efea <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801f116:	3a01      	subs	r2, #1
 801f118:	4293      	cmp	r3, r2
 801f11a:	f6bf af66 	bge.w	801efea <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801f11e:	46a9      	mov	r9, r5
 801f120:	46ba      	mov	sl, r7
 801f122:	f1b9 0f00 	cmp.w	r9, #0
 801f126:	dc5a      	bgt.n	801f1de <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 801f128:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801f12c:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 801f130:	9b07      	ldr	r3, [sp, #28]
 801f132:	2b00      	cmp	r3, #0
 801f134:	f340 80b8 	ble.w	801f2a8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 801f138:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f13c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801f140:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801f144:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801f146:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f14a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f14e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f152:	eef0 6a62 	vmov.f32	s13, s5
 801f156:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f15a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f15e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f162:	ee16 4a90 	vmov	r4, s13
 801f166:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f16a:	eef0 6a43 	vmov.f32	s13, s6
 801f16e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f172:	ee12 2a90 	vmov	r2, s5
 801f176:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f17a:	fb92 f3f3 	sdiv	r3, r2, r3
 801f17e:	ee13 2a10 	vmov	r2, s6
 801f182:	931b      	str	r3, [sp, #108]	; 0x6c
 801f184:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801f186:	fb92 f3f3 	sdiv	r3, r2, r3
 801f18a:	931c      	str	r3, [sp, #112]	; 0x70
 801f18c:	9b07      	ldr	r3, [sp, #28]
 801f18e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801f190:	3b01      	subs	r3, #1
 801f192:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f196:	9307      	str	r3, [sp, #28]
 801f198:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801f19a:	ee16 6a90 	vmov	r6, s13
 801f19e:	bf14      	ite	ne
 801f1a0:	461d      	movne	r5, r3
 801f1a2:	4615      	moveq	r5, r2
 801f1a4:	eeb0 3a67 	vmov.f32	s6, s15
 801f1a8:	eef0 2a47 	vmov.f32	s5, s14
 801f1ac:	e6f4      	b.n	801ef98 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801f1ae:	f111 0b01 	adds.w	fp, r1, #1
 801f1b2:	d48e      	bmi.n	801f0d2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801f1b4:	45de      	cmp	lr, fp
 801f1b6:	db8c      	blt.n	801f0d2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801f1b8:	f110 0b01 	adds.w	fp, r0, #1
 801f1bc:	d489      	bmi.n	801f0d2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801f1be:	455b      	cmp	r3, fp
 801f1c0:	db87      	blt.n	801f0d2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801f1c2:	b21b      	sxth	r3, r3
 801f1c4:	e9cd 1001 	strd	r1, r0, [sp, #4]
 801f1c8:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 801f1cc:	9300      	str	r3, [sp, #0]
 801f1ce:	4642      	mov	r2, r8
 801f1d0:	fa0f f38e 	sxth.w	r3, lr
 801f1d4:	4649      	mov	r1, r9
 801f1d6:	980d      	ldr	r0, [sp, #52]	; 0x34
 801f1d8:	f7ff fe4d 	bl	801ee76 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 801f1dc:	e779      	b.n	801f0d2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801f1de:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f1e0:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801f1e4:	1420      	asrs	r0, r4, #16
 801f1e6:	1431      	asrs	r1, r6, #16
 801f1e8:	fb03 0101 	mla	r1, r3, r1, r0
 801f1ec:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801f1f0:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801f1f4:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 801f1f8:	8841      	ldrh	r1, [r0, #2]
 801f1fa:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801f1fe:	f1be 0f00 	cmp.w	lr, #0
 801f202:	d00b      	beq.n	801f21c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 801f204:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 801f208:	3b01      	subs	r3, #1
 801f20a:	005b      	lsls	r3, r3, #1
 801f20c:	3302      	adds	r3, #2
 801f20e:	eb00 0b03 	add.w	fp, r0, r3
 801f212:	5ac3      	ldrh	r3, [r0, r3]
 801f214:	930a      	str	r3, [sp, #40]	; 0x28
 801f216:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801f21a:	930b      	str	r3, [sp, #44]	; 0x2c
 801f21c:	ea4f 400c 	mov.w	r0, ip, lsl #16
 801f220:	fb12 f30e 	smulbb	r3, r2, lr
 801f224:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801f228:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801f22c:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801f230:	10db      	asrs	r3, r3, #3
 801f232:	ea40 000c 	orr.w	r0, r0, ip
 801f236:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801f23a:	f1ce 0c10 	rsb	ip, lr, #16
 801f23e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801f242:	ebac 0c02 	sub.w	ip, ip, r2
 801f246:	ea4b 0101 	orr.w	r1, fp, r1
 801f24a:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801f24e:	4351      	muls	r1, r2
 801f250:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801f252:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801f256:	fb0c 1c00 	mla	ip, ip, r0, r1
 801f25a:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801f25e:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 801f262:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801f264:	990a      	ldr	r1, [sp, #40]	; 0x28
 801f266:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801f26a:	0412      	lsls	r2, r2, #16
 801f26c:	ea4b 0000 	orr.w	r0, fp, r0
 801f270:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801f274:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 801f278:	fb03 c000 	mla	r0, r3, r0, ip
 801f27c:	ea42 0b0b 	orr.w	fp, r2, fp
 801f280:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801f284:	fb03 000b 	mla	r0, r3, fp, r0
 801f288:	0d43      	lsrs	r3, r0, #21
 801f28a:	0940      	lsrs	r0, r0, #5
 801f28c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f290:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801f294:	4318      	orrs	r0, r3
 801f296:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801f298:	f82a 0b02 	strh.w	r0, [sl], #2
 801f29c:	441c      	add	r4, r3
 801f29e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801f2a0:	f109 39ff 	add.w	r9, r9, #4294967295
 801f2a4:	441e      	add	r6, r3
 801f2a6:	e73c      	b.n	801f122 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 801f2a8:	b00f      	add	sp, #60	; 0x3c
 801f2aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801f2ae <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 801f2ae:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f2b2:	b085      	sub	sp, #20
 801f2b4:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 801f2b8:	9102      	str	r1, [sp, #8]
 801f2ba:	2c00      	cmp	r4, #0
 801f2bc:	fb04 7103 	mla	r1, r4, r3, r7
 801f2c0:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 801f2c4:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 801f2c8:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 801f2cc:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 801f2d0:	f2c0 811b 	blt.w	801f50a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 801f2d4:	45a6      	cmp	lr, r4
 801f2d6:	f340 8118 	ble.w	801f50a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 801f2da:	2f00      	cmp	r7, #0
 801f2dc:	f2c0 8113 	blt.w	801f506 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 801f2e0:	42bb      	cmp	r3, r7
 801f2e2:	f340 8110 	ble.w	801f506 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 801f2e6:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 801f2ea:	1c7a      	adds	r2, r7, #1
 801f2ec:	f100 8110 	bmi.w	801f510 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 801f2f0:	4293      	cmp	r3, r2
 801f2f2:	f340 810d 	ble.w	801f510 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 801f2f6:	2e00      	cmp	r6, #0
 801f2f8:	f000 810c 	beq.w	801f514 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 801f2fc:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801f300:	3401      	adds	r4, #1
 801f302:	f100 810b 	bmi.w	801f51c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 801f306:	45a6      	cmp	lr, r4
 801f308:	f340 8108 	ble.w	801f51c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 801f30c:	2800      	cmp	r0, #0
 801f30e:	f000 8108 	beq.w	801f522 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 801f312:	2f00      	cmp	r7, #0
 801f314:	f2c0 8100 	blt.w	801f518 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 801f318:	42bb      	cmp	r3, r7
 801f31a:	f340 80fd 	ble.w	801f518 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 801f31e:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801f322:	3701      	adds	r7, #1
 801f324:	f100 8100 	bmi.w	801f528 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 801f328:	42bb      	cmp	r3, r7
 801f32a:	f340 80fd 	ble.w	801f528 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 801f32e:	2e00      	cmp	r6, #0
 801f330:	f000 80fc 	beq.w	801f52c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 801f334:	3301      	adds	r3, #1
 801f336:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 801f33a:	b2b6      	uxth	r6, r6
 801f33c:	b280      	uxth	r0, r0
 801f33e:	fb00 fe06 	mul.w	lr, r0, r6
 801f342:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801f346:	0136      	lsls	r6, r6, #4
 801f348:	eba6 070e 	sub.w	r7, r6, lr
 801f34c:	b280      	uxth	r0, r0
 801f34e:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 801f352:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801f356:	b2bf      	uxth	r7, r7
 801f358:	1a1b      	subs	r3, r3, r0
 801f35a:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801f35e:	b29b      	uxth	r3, r3
 801f360:	fb0a f607 	mul.w	r6, sl, r7
 801f364:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801f368:	fb0b 6603 	mla	r6, fp, r3, r6
 801f36c:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801f370:	fb00 6609 	mla	r6, r0, r9, r6
 801f374:	fb0e 6608 	mla	r6, lr, r8, r6
 801f378:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801f37c:	9600      	str	r6, [sp, #0]
 801f37e:	2e00      	cmp	r6, #0
 801f380:	f000 80be 	beq.w	801f500 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 801f384:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801f388:	fb0b fc0c 	mul.w	ip, fp, ip
 801f38c:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801f390:	fb0b f505 	mul.w	r5, fp, r5
 801f394:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801f398:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 801f39c:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801f3a0:	44dc      	add	ip, fp
 801f3a2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f3a6:	9501      	str	r5, [sp, #4]
 801f3a8:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 801f3ac:	9503      	str	r5, [sp, #12]
 801f3ae:	9d01      	ldr	r5, [sp, #4]
 801f3b0:	9e02      	ldr	r6, [sp, #8]
 801f3b2:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 801f3b6:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801f3ba:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 801f3be:	fb0a fc0c 	mul.w	ip, sl, ip
 801f3c2:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801f3c6:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801f3ca:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801f3ce:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801f3d2:	4465      	add	r5, ip
 801f3d4:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801f3d8:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801f3dc:	fb09 fc0c 	mul.w	ip, r9, ip
 801f3e0:	fb09 f904 	mul.w	r9, r9, r4
 801f3e4:	f509 7480 	add.w	r4, r9, #256	; 0x100
 801f3e8:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801f3ec:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 801f3f0:	fb08 f404 	mul.w	r4, r8, r4
 801f3f4:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801f3f8:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801f3fc:	fb08 f802 	mul.w	r8, r8, r2
 801f400:	fb0a fa01 	mul.w	sl, sl, r1
 801f404:	0a22      	lsrs	r2, r4, #8
 801f406:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 801f40a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801f40e:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 801f412:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801f416:	4414      	add	r4, r2
 801f418:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801f41c:	f508 7280 	add.w	r2, r8, #256	; 0x100
 801f420:	0a2d      	lsrs	r5, r5, #8
 801f422:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801f426:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801f42a:	9a03      	ldr	r2, [sp, #12]
 801f42c:	8836      	ldrh	r6, [r6, #0]
 801f42e:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801f432:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801f436:	437d      	muls	r5, r7
 801f438:	4461      	add	r1, ip
 801f43a:	0a24      	lsrs	r4, r4, #8
 801f43c:	fb02 5503 	mla	r5, r2, r3, r5
 801f440:	0a09      	lsrs	r1, r1, #8
 801f442:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801f446:	fb04 540e 	mla	r4, r4, lr, r5
 801f44a:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801f44e:	fb01 4100 	mla	r1, r1, r0, r4
 801f452:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f456:	0a09      	lsrs	r1, r1, #8
 801f458:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801f45c:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 801f460:	fb07 f70a 	mul.w	r7, r7, sl
 801f464:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801f468:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 801f46c:	fb03 7101 	mla	r1, r3, r1, r7
 801f470:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801f474:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801f478:	fb0e 1e08 	mla	lr, lr, r8, r1
 801f47c:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 801f480:	fb00 e101 	mla	r1, r0, r1, lr
 801f484:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 801f488:	9a00      	ldr	r2, [sp, #0]
 801f48a:	b287      	uxth	r7, r0
 801f48c:	437a      	muls	r2, r7
 801f48e:	0a09      	lsrs	r1, r1, #8
 801f490:	1c53      	adds	r3, r2, #1
 801f492:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801f496:	4321      	orrs	r1, r4
 801f498:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801f49c:	1235      	asrs	r5, r6, #8
 801f49e:	0c0a      	lsrs	r2, r1, #16
 801f4a0:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801f4a4:	b2db      	uxtb	r3, r3
 801f4a6:	fb12 f207 	smulbb	r2, r2, r7
 801f4aa:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801f4ae:	fb05 2503 	mla	r5, r5, r3, r2
 801f4b2:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801f4b6:	10f2      	asrs	r2, r6, #3
 801f4b8:	b2c8      	uxtb	r0, r1
 801f4ba:	00f6      	lsls	r6, r6, #3
 801f4bc:	fb14 f407 	smulbb	r4, r4, r7
 801f4c0:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801f4c4:	b2f6      	uxtb	r6, r6
 801f4c6:	fb10 f007 	smulbb	r0, r0, r7
 801f4ca:	fb02 4203 	mla	r2, r2, r3, r4
 801f4ce:	b2ad      	uxth	r5, r5
 801f4d0:	fb06 0303 	mla	r3, r6, r3, r0
 801f4d4:	b299      	uxth	r1, r3
 801f4d6:	b294      	uxth	r4, r2
 801f4d8:	1c6b      	adds	r3, r5, #1
 801f4da:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801f4de:	1c62      	adds	r2, r4, #1
 801f4e0:	1c4b      	adds	r3, r1, #1
 801f4e2:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801f4e6:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801f4ea:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801f4ee:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801f4f2:	0952      	lsrs	r2, r2, #5
 801f4f4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801f4f8:	432b      	orrs	r3, r5
 801f4fa:	4313      	orrs	r3, r2
 801f4fc:	9a02      	ldr	r2, [sp, #8]
 801f4fe:	8013      	strh	r3, [r2, #0]
 801f500:	b005      	add	sp, #20
 801f502:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f506:	2500      	movs	r5, #0
 801f508:	e6ef      	b.n	801f2ea <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 801f50a:	2100      	movs	r1, #0
 801f50c:	460d      	mov	r5, r1
 801f50e:	e6f7      	b.n	801f300 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801f510:	2100      	movs	r1, #0
 801f512:	e6f5      	b.n	801f300 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801f514:	4631      	mov	r1, r6
 801f516:	e6f3      	b.n	801f300 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801f518:	2400      	movs	r4, #0
 801f51a:	e702      	b.n	801f322 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 801f51c:	2200      	movs	r2, #0
 801f51e:	4614      	mov	r4, r2
 801f520:	e70b      	b.n	801f33a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801f522:	4602      	mov	r2, r0
 801f524:	4604      	mov	r4, r0
 801f526:	e708      	b.n	801f33a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801f528:	2200      	movs	r2, #0
 801f52a:	e706      	b.n	801f33a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801f52c:	4632      	mov	r2, r6
 801f52e:	e704      	b.n	801f33a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

0801f530 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f530:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f534:	b09d      	sub	sp, #116	; 0x74
 801f536:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 801f53a:	9219      	str	r2, [sp, #100]	; 0x64
 801f53c:	9307      	str	r3, [sp, #28]
 801f53e:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801f540:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 801f544:	931a      	str	r3, [sp, #104]	; 0x68
 801f546:	9117      	str	r1, [sp, #92]	; 0x5c
 801f548:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 801f54c:	901b      	str	r0, [sp, #108]	; 0x6c
 801f54e:	6850      	ldr	r0, [r2, #4]
 801f550:	6812      	ldr	r2, [r2, #0]
 801f552:	fb00 1303 	mla	r3, r0, r3, r1
 801f556:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801f55a:	930a      	str	r3, [sp, #40]	; 0x28
 801f55c:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801f55e:	681b      	ldr	r3, [r3, #0]
 801f560:	9310      	str	r3, [sp, #64]	; 0x40
 801f562:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801f566:	930b      	str	r3, [sp, #44]	; 0x2c
 801f568:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801f56a:	2b00      	cmp	r3, #0
 801f56c:	dc03      	bgt.n	801f576 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801f56e:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801f570:	2b00      	cmp	r3, #0
 801f572:	f340 8375 	ble.w	801fc60 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801f576:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801f578:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f57c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f580:	1e48      	subs	r0, r1, #1
 801f582:	1e57      	subs	r7, r2, #1
 801f584:	9b07      	ldr	r3, [sp, #28]
 801f586:	2b00      	cmp	r3, #0
 801f588:	f340 818e 	ble.w	801f8a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801f58c:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801f590:	ea4f 4326 	mov.w	r3, r6, asr #16
 801f594:	d406      	bmi.n	801f5a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801f596:	4584      	cmp	ip, r0
 801f598:	da04      	bge.n	801f5a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801f59a:	2b00      	cmp	r3, #0
 801f59c:	db02      	blt.n	801f5a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801f59e:	42bb      	cmp	r3, r7
 801f5a0:	f2c0 8183 	blt.w	801f8aa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 801f5a4:	f11c 0c01 	adds.w	ip, ip, #1
 801f5a8:	f100 8173 	bmi.w	801f892 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801f5ac:	4561      	cmp	r1, ip
 801f5ae:	f2c0 8170 	blt.w	801f892 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801f5b2:	3301      	adds	r3, #1
 801f5b4:	f100 816d 	bmi.w	801f892 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801f5b8:	429a      	cmp	r2, r3
 801f5ba:	f2c0 816a 	blt.w	801f892 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801f5be:	9b07      	ldr	r3, [sp, #28]
 801f5c0:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801f5c2:	9318      	str	r3, [sp, #96]	; 0x60
 801f5c4:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801f5c6:	2b00      	cmp	r3, #0
 801f5c8:	f340 818c 	ble.w	801f8e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 801f5cc:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 801f5ce:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801f5d0:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801f5d4:	689b      	ldr	r3, [r3, #8]
 801f5d6:	1422      	asrs	r2, r4, #16
 801f5d8:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801f5dc:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801f5e0:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801f5e4:	f100 81cd 	bmi.w	801f982 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801f5e8:	f103 38ff 	add.w	r8, r3, #4294967295
 801f5ec:	4542      	cmp	r2, r8
 801f5ee:	f280 81c8 	bge.w	801f982 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801f5f2:	f1bc 0f00 	cmp.w	ip, #0
 801f5f6:	f2c0 81c4 	blt.w	801f982 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801f5fa:	f10e 38ff 	add.w	r8, lr, #4294967295
 801f5fe:	45c4      	cmp	ip, r8
 801f600:	f280 81bf 	bge.w	801f982 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801f604:	b21b      	sxth	r3, r3
 801f606:	fb0c 2203 	mla	r2, ip, r3, r2
 801f60a:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801f60c:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801f610:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801f614:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801f618:	2800      	cmp	r0, #0
 801f61a:	f000 81a9 	beq.w	801f970 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 801f61e:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801f622:	950c      	str	r5, [sp, #48]	; 0x30
 801f624:	0e2d      	lsrs	r5, r5, #24
 801f626:	9513      	str	r5, [sp, #76]	; 0x4c
 801f628:	b181      	cbz	r1, 801f64c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801f62a:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 801f62e:	3b01      	subs	r3, #1
 801f630:	009b      	lsls	r3, r3, #2
 801f632:	3304      	adds	r3, #4
 801f634:	eb08 0c03 	add.w	ip, r8, r3
 801f638:	f858 3003 	ldr.w	r3, [r8, r3]
 801f63c:	9308      	str	r3, [sp, #32]
 801f63e:	0e1b      	lsrs	r3, r3, #24
 801f640:	9311      	str	r3, [sp, #68]	; 0x44
 801f642:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801f646:	930d      	str	r3, [sp, #52]	; 0x34
 801f648:	0e1b      	lsrs	r3, r3, #24
 801f64a:	9314      	str	r3, [sp, #80]	; 0x50
 801f64c:	b280      	uxth	r0, r0
 801f64e:	b289      	uxth	r1, r1
 801f650:	fb00 f901 	mul.w	r9, r0, r1
 801f654:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801f658:	0100      	lsls	r0, r0, #4
 801f65a:	eba0 0809 	sub.w	r8, r0, r9
 801f65e:	b289      	uxth	r1, r1
 801f660:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801f664:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801f666:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801f668:	fa1f f888 	uxth.w	r8, r8
 801f66c:	1a5b      	subs	r3, r3, r1
 801f66e:	b29b      	uxth	r3, r3
 801f670:	fb08 f000 	mul.w	r0, r8, r0
 801f674:	fb03 000e 	mla	r0, r3, lr, r0
 801f678:	fb01 0005 	mla	r0, r1, r5, r0
 801f67c:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801f67e:	fb09 0005 	mla	r0, r9, r5, r0
 801f682:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801f686:	2800      	cmp	r0, #0
 801f688:	f000 80fa 	beq.w	801f880 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801f68c:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801f690:	d01b      	beq.n	801f6ca <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801f692:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 801f696:	fb0e fa0a 	mul.w	sl, lr, sl
 801f69a:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801f69e:	fb0e fe02 	mul.w	lr, lr, r2
 801f6a2:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801f6a6:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801f6aa:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801f6ae:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801f6b2:	4452      	add	r2, sl
 801f6b4:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801f6b8:	0a12      	lsrs	r2, r2, #8
 801f6ba:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f6be:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801f6c2:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801f6c6:	ea42 020c 	orr.w	r2, r2, ip
 801f6ca:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801f6cc:	2dff      	cmp	r5, #255	; 0xff
 801f6ce:	d021      	beq.n	801f714 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801f6d0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801f6d2:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801f6d6:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801f6d8:	fb05 fb0b 	mul.w	fp, r5, fp
 801f6dc:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801f6de:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801f6e2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801f6e4:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801f6e8:	fb05 fa0a 	mul.w	sl, r5, sl
 801f6ec:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801f6f0:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801f6f4:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801f6f8:	44de      	add	lr, fp
 801f6fa:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801f6fe:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801f702:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f706:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801f70a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801f70e:	ea4e 050a 	orr.w	r5, lr, sl
 801f712:	950c      	str	r5, [sp, #48]	; 0x30
 801f714:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801f716:	2dff      	cmp	r5, #255	; 0xff
 801f718:	d021      	beq.n	801f75e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 801f71a:	9d08      	ldr	r5, [sp, #32]
 801f71c:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801f720:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801f722:	fb05 fb0b 	mul.w	fp, r5, fp
 801f726:	9d08      	ldr	r5, [sp, #32]
 801f728:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801f72c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801f72e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801f732:	fb05 fa0a 	mul.w	sl, r5, sl
 801f736:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801f73a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801f73e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801f742:	44de      	add	lr, fp
 801f744:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801f748:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801f74c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f750:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801f754:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801f758:	ea4e 050a 	orr.w	r5, lr, sl
 801f75c:	9508      	str	r5, [sp, #32]
 801f75e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801f760:	2dff      	cmp	r5, #255	; 0xff
 801f762:	d021      	beq.n	801f7a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 801f764:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801f766:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801f76a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801f76c:	fb05 fb0b 	mul.w	fp, r5, fp
 801f770:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801f772:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801f776:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801f778:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801f77c:	fb05 fa0a 	mul.w	sl, r5, sl
 801f780:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801f784:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801f788:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801f78c:	44de      	add	lr, fp
 801f78e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801f792:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801f796:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f79a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801f79e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801f7a2:	ea4e 050a 	orr.w	r5, lr, sl
 801f7a6:	950d      	str	r5, [sp, #52]	; 0x34
 801f7a8:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801f7aa:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801f7ae:	9d08      	ldr	r5, [sp, #32]
 801f7b0:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 801f7b4:	fb08 fc0c 	mul.w	ip, r8, ip
 801f7b8:	fb03 cc0e 	mla	ip, r3, lr, ip
 801f7bc:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801f7c0:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801f7c2:	fb01 cc0e 	mla	ip, r1, lr, ip
 801f7c6:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801f7ca:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801f7cc:	fb09 cc0e 	mla	ip, r9, lr, ip
 801f7d0:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801f7d4:	fb08 f80e 	mul.w	r8, r8, lr
 801f7d8:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801f7dc:	fb03 8202 	mla	r2, r3, r2, r8
 801f7e0:	9b08      	ldr	r3, [sp, #32]
 801f7e2:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801f7e4:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 801f7e8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f7ea:	fb01 220a 	mla	r2, r1, sl, r2
 801f7ee:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 801f7f2:	fb09 2901 	mla	r9, r9, r1, r2
 801f7f6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801f7f8:	883b      	ldrh	r3, [r7, #0]
 801f7fa:	4342      	muls	r2, r0
 801f7fc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f800:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801f804:	1c50      	adds	r0, r2, #1
 801f806:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801f80a:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801f80e:	ea4c 0c09 	orr.w	ip, ip, r9
 801f812:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801f816:	1219      	asrs	r1, r3, #8
 801f818:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801f81c:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801f820:	b2c0      	uxtb	r0, r0
 801f822:	fb12 f205 	smulbb	r2, r2, r5
 801f826:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801f82a:	fb01 2100 	mla	r1, r1, r0, r2
 801f82e:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801f832:	10da      	asrs	r2, r3, #3
 801f834:	fa5f fc8c 	uxtb.w	ip, ip
 801f838:	00db      	lsls	r3, r3, #3
 801f83a:	fb1c fc05 	smulbb	ip, ip, r5
 801f83e:	b2db      	uxtb	r3, r3
 801f840:	b289      	uxth	r1, r1
 801f842:	fb03 c300 	mla	r3, r3, r0, ip
 801f846:	fa1f fc83 	uxth.w	ip, r3
 801f84a:	1c4b      	adds	r3, r1, #1
 801f84c:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801f850:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801f854:	fb1e fe05 	smulbb	lr, lr, r5
 801f858:	f10c 0301 	add.w	r3, ip, #1
 801f85c:	fb02 e200 	mla	r2, r2, r0, lr
 801f860:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801f864:	b292      	uxth	r2, r2
 801f866:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801f86a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801f86e:	430b      	orrs	r3, r1
 801f870:	1c51      	adds	r1, r2, #1
 801f872:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801f876:	0952      	lsrs	r2, r2, #5
 801f878:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801f87c:	4313      	orrs	r3, r2
 801f87e:	803b      	strh	r3, [r7, #0]
 801f880:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801f882:	441c      	add	r4, r3
 801f884:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801f886:	441e      	add	r6, r3
 801f888:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801f88a:	3b01      	subs	r3, #1
 801f88c:	3702      	adds	r7, #2
 801f88e:	9318      	str	r3, [sp, #96]	; 0x60
 801f890:	e698      	b.n	801f5c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801f892:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801f894:	441c      	add	r4, r3
 801f896:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801f898:	441e      	add	r6, r3
 801f89a:	9b07      	ldr	r3, [sp, #28]
 801f89c:	3b01      	subs	r3, #1
 801f89e:	9307      	str	r3, [sp, #28]
 801f8a0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f8a2:	3302      	adds	r3, #2
 801f8a4:	930a      	str	r3, [sp, #40]	; 0x28
 801f8a6:	e66d      	b.n	801f584 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801f8a8:	d023      	beq.n	801f8f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 801f8aa:	9b07      	ldr	r3, [sp, #28]
 801f8ac:	9829      	ldr	r0, [sp, #164]	; 0xa4
 801f8ae:	3b01      	subs	r3, #1
 801f8b0:	fb00 4003 	mla	r0, r0, r3, r4
 801f8b4:	1400      	asrs	r0, r0, #16
 801f8b6:	f53f ae82 	bmi.w	801f5be <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801f8ba:	3901      	subs	r1, #1
 801f8bc:	4288      	cmp	r0, r1
 801f8be:	f6bf ae7e 	bge.w	801f5be <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801f8c2:	992a      	ldr	r1, [sp, #168]	; 0xa8
 801f8c4:	fb01 6303 	mla	r3, r1, r3, r6
 801f8c8:	141b      	asrs	r3, r3, #16
 801f8ca:	f53f ae78 	bmi.w	801f5be <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801f8ce:	3a01      	subs	r2, #1
 801f8d0:	4293      	cmp	r3, r2
 801f8d2:	f6bf ae74 	bge.w	801f5be <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801f8d6:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801f8da:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 801f8de:	f1bb 0f00 	cmp.w	fp, #0
 801f8e2:	dc6c      	bgt.n	801f9be <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801f8e4:	9b07      	ldr	r3, [sp, #28]
 801f8e6:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801f8ea:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f8ec:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801f8f0:	930a      	str	r3, [sp, #40]	; 0x28
 801f8f2:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801f8f4:	2b00      	cmp	r3, #0
 801f8f6:	f340 81b3 	ble.w	801fc60 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801f8fa:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f8fe:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801f902:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801f906:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801f908:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f90c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f910:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f914:	eef0 6a62 	vmov.f32	s13, s5
 801f918:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f91c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f920:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f924:	ee16 4a90 	vmov	r4, s13
 801f928:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f92c:	eef0 6a43 	vmov.f32	s13, s6
 801f930:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f934:	ee12 2a90 	vmov	r2, s5
 801f938:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f93c:	fb92 f3f3 	sdiv	r3, r2, r3
 801f940:	ee13 2a10 	vmov	r2, s6
 801f944:	9329      	str	r3, [sp, #164]	; 0xa4
 801f946:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801f948:	fb92 f3f3 	sdiv	r3, r2, r3
 801f94c:	932a      	str	r3, [sp, #168]	; 0xa8
 801f94e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801f950:	9a19      	ldr	r2, [sp, #100]	; 0x64
 801f952:	3b01      	subs	r3, #1
 801f954:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f958:	9317      	str	r3, [sp, #92]	; 0x5c
 801f95a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801f95c:	bf08      	it	eq
 801f95e:	4613      	moveq	r3, r2
 801f960:	ee16 6a90 	vmov	r6, s13
 801f964:	9307      	str	r3, [sp, #28]
 801f966:	eeb0 3a67 	vmov.f32	s6, s15
 801f96a:	eef0 2a47 	vmov.f32	s5, s14
 801f96e:	e5fb      	b.n	801f568 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801f970:	2900      	cmp	r1, #0
 801f972:	f43f ae6b 	beq.w	801f64c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801f976:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801f97a:	9308      	str	r3, [sp, #32]
 801f97c:	0e1b      	lsrs	r3, r3, #24
 801f97e:	9311      	str	r3, [sp, #68]	; 0x44
 801f980:	e664      	b.n	801f64c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801f982:	f112 0801 	adds.w	r8, r2, #1
 801f986:	f53f af7b 	bmi.w	801f880 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801f98a:	4543      	cmp	r3, r8
 801f98c:	f6ff af78 	blt.w	801f880 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801f990:	f11c 0801 	adds.w	r8, ip, #1
 801f994:	f53f af74 	bmi.w	801f880 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801f998:	45c6      	cmp	lr, r8
 801f99a:	f6ff af71 	blt.w	801f880 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801f99e:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 801f9a0:	9201      	str	r2, [sp, #4]
 801f9a2:	fa0f f28e 	sxth.w	r2, lr
 801f9a6:	e9cd 1504 	strd	r1, r5, [sp, #16]
 801f9aa:	e9cd c002 	strd	ip, r0, [sp, #8]
 801f9ae:	9200      	str	r2, [sp, #0]
 801f9b0:	b21b      	sxth	r3, r3
 801f9b2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801f9b4:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801f9b6:	4639      	mov	r1, r7
 801f9b8:	f7ff fc79 	bl	801f2ae <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 801f9bc:	e760      	b.n	801f880 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801f9be:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801f9c0:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801f9c2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f9c6:	1427      	asrs	r7, r4, #16
 801f9c8:	1433      	asrs	r3, r6, #16
 801f9ca:	fb01 7303 	mla	r3, r1, r3, r7
 801f9ce:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 801f9d2:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801f9d6:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801f9da:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801f9de:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801f9e2:	2a00      	cmp	r2, #0
 801f9e4:	f000 8133 	beq.w	801fc4e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 801f9e8:	687d      	ldr	r5, [r7, #4]
 801f9ea:	950e      	str	r5, [sp, #56]	; 0x38
 801f9ec:	0e2d      	lsrs	r5, r5, #24
 801f9ee:	9515      	str	r5, [sp, #84]	; 0x54
 801f9f0:	b178      	cbz	r0, 801fa12 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801f9f2:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 801f9f6:	3901      	subs	r1, #1
 801f9f8:	0089      	lsls	r1, r1, #2
 801f9fa:	3104      	adds	r1, #4
 801f9fc:	eb07 0e01 	add.w	lr, r7, r1
 801fa00:	5879      	ldr	r1, [r7, r1]
 801fa02:	9109      	str	r1, [sp, #36]	; 0x24
 801fa04:	0e09      	lsrs	r1, r1, #24
 801fa06:	9112      	str	r1, [sp, #72]	; 0x48
 801fa08:	f8de 1004 	ldr.w	r1, [lr, #4]
 801fa0c:	910f      	str	r1, [sp, #60]	; 0x3c
 801fa0e:	0e09      	lsrs	r1, r1, #24
 801fa10:	9116      	str	r1, [sp, #88]	; 0x58
 801fa12:	b292      	uxth	r2, r2
 801fa14:	b280      	uxth	r0, r0
 801fa16:	fb02 f800 	mul.w	r8, r2, r0
 801fa1a:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801fa1e:	0112      	lsls	r2, r2, #4
 801fa20:	eba2 0e08 	sub.w	lr, r2, r8
 801fa24:	b280      	uxth	r0, r0
 801fa26:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801fa2a:	9915      	ldr	r1, [sp, #84]	; 0x54
 801fa2c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801fa2e:	fa1f fe8e 	uxth.w	lr, lr
 801fa32:	1a12      	subs	r2, r2, r0
 801fa34:	b292      	uxth	r2, r2
 801fa36:	fb0e f101 	mul.w	r1, lr, r1
 801fa3a:	fb02 110c 	mla	r1, r2, ip, r1
 801fa3e:	fb00 1105 	mla	r1, r0, r5, r1
 801fa42:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801fa44:	fb08 1105 	mla	r1, r8, r5, r1
 801fa48:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801fa4c:	2900      	cmp	r1, #0
 801fa4e:	f000 80f5 	beq.w	801fc3c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 801fa52:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801fa56:	d019      	beq.n	801fa8c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 801fa58:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801fa5c:	fb0c fa0a 	mul.w	sl, ip, sl
 801fa60:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801fa64:	fb0c fc03 	mul.w	ip, ip, r3
 801fa68:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801fa6c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801fa70:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801fa74:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801fa78:	4453      	add	r3, sl
 801fa7a:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801fa7e:	0a1b      	lsrs	r3, r3, #8
 801fa80:	0a3f      	lsrs	r7, r7, #8
 801fa82:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801fa86:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801fa8a:	433b      	orrs	r3, r7
 801fa8c:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801fa8e:	2dff      	cmp	r5, #255	; 0xff
 801fa90:	d020      	beq.n	801fad4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 801fa92:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801fa94:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801fa98:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801fa9a:	436f      	muls	r7, r5
 801fa9c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801fa9e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801faa2:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801faa4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801faa8:	fb05 fa0a 	mul.w	sl, r5, sl
 801faac:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801fab0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801fab4:	44bc      	add	ip, r7
 801fab6:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801faba:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801fabe:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801fac2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801fac6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801faca:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801face:	ea4c 050a 	orr.w	r5, ip, sl
 801fad2:	950e      	str	r5, [sp, #56]	; 0x38
 801fad4:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801fad6:	2dff      	cmp	r5, #255	; 0xff
 801fad8:	d020      	beq.n	801fb1c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 801fada:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801fadc:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801fae0:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801fae2:	436f      	muls	r7, r5
 801fae4:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801fae6:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801faea:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801faec:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801faf0:	fb05 fa0a 	mul.w	sl, r5, sl
 801faf4:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801faf8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801fafc:	44bc      	add	ip, r7
 801fafe:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801fb02:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801fb06:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801fb0a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801fb0e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801fb12:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801fb16:	ea4c 050a 	orr.w	r5, ip, sl
 801fb1a:	9509      	str	r5, [sp, #36]	; 0x24
 801fb1c:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801fb1e:	2dff      	cmp	r5, #255	; 0xff
 801fb20:	d020      	beq.n	801fb64 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 801fb22:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801fb24:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801fb28:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801fb2a:	436f      	muls	r7, r5
 801fb2c:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801fb2e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801fb32:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801fb34:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801fb38:	fb05 fa0a 	mul.w	sl, r5, sl
 801fb3c:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801fb40:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801fb44:	44bc      	add	ip, r7
 801fb46:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801fb4a:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801fb4e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801fb52:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801fb56:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801fb5a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801fb5e:	ea4c 050a 	orr.w	r5, ip, sl
 801fb62:	950f      	str	r5, [sp, #60]	; 0x3c
 801fb64:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801fb66:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801fb6a:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801fb6c:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801fb70:	fb0e f707 	mul.w	r7, lr, r7
 801fb74:	fb02 770c 	mla	r7, r2, ip, r7
 801fb78:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801fb7c:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801fb7e:	fb00 770c 	mla	r7, r0, ip, r7
 801fb82:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801fb86:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801fb88:	fb08 770c 	mla	r7, r8, ip, r7
 801fb8c:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801fb90:	fb0e fe0c 	mul.w	lr, lr, ip
 801fb94:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801fb98:	fb02 e303 	mla	r3, r2, r3, lr
 801fb9c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801fb9e:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801fba0:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801fba4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801fba6:	fb00 330a 	mla	r3, r0, sl, r3
 801fbaa:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 801fbae:	fb08 3c0c 	mla	ip, r8, ip, r3
 801fbb2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801fbb4:	f8b9 0000 	ldrh.w	r0, [r9]
 801fbb8:	4359      	muls	r1, r3
 801fbba:	0a3f      	lsrs	r7, r7, #8
 801fbbc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801fbc0:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801fbc4:	1c4b      	adds	r3, r1, #1
 801fbc6:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801fbca:	ea47 070c 	orr.w	r7, r7, ip
 801fbce:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801fbd2:	1202      	asrs	r2, r0, #8
 801fbd4:	0c3b      	lsrs	r3, r7, #16
 801fbd6:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801fbda:	b2c9      	uxtb	r1, r1
 801fbdc:	fb13 f305 	smulbb	r3, r3, r5
 801fbe0:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801fbe4:	fb02 3201 	mla	r2, r2, r1, r3
 801fbe8:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801fbec:	10c3      	asrs	r3, r0, #3
 801fbee:	b2ff      	uxtb	r7, r7
 801fbf0:	00c0      	lsls	r0, r0, #3
 801fbf2:	b2c0      	uxtb	r0, r0
 801fbf4:	fb17 f705 	smulbb	r7, r7, r5
 801fbf8:	fb00 7001 	mla	r0, r0, r1, r7
 801fbfc:	b292      	uxth	r2, r2
 801fbfe:	fb1c fc05 	smulbb	ip, ip, r5
 801fc02:	b280      	uxth	r0, r0
 801fc04:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801fc08:	fb03 c301 	mla	r3, r3, r1, ip
 801fc0c:	1c51      	adds	r1, r2, #1
 801fc0e:	f100 0c01 	add.w	ip, r0, #1
 801fc12:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801fc16:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 801fc1a:	b29b      	uxth	r3, r3
 801fc1c:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801fc20:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 801fc24:	ea4c 0202 	orr.w	r2, ip, r2
 801fc28:	f103 0c01 	add.w	ip, r3, #1
 801fc2c:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801fc30:	095b      	lsrs	r3, r3, #5
 801fc32:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801fc36:	431a      	orrs	r2, r3
 801fc38:	f8a9 2000 	strh.w	r2, [r9]
 801fc3c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801fc3e:	441c      	add	r4, r3
 801fc40:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801fc42:	f109 0902 	add.w	r9, r9, #2
 801fc46:	441e      	add	r6, r3
 801fc48:	f10b 3bff 	add.w	fp, fp, #4294967295
 801fc4c:	e647      	b.n	801f8de <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 801fc4e:	2800      	cmp	r0, #0
 801fc50:	f43f aedf 	beq.w	801fa12 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801fc54:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 801fc58:	9109      	str	r1, [sp, #36]	; 0x24
 801fc5a:	0e09      	lsrs	r1, r1, #24
 801fc5c:	9112      	str	r1, [sp, #72]	; 0x48
 801fc5e:	e6d8      	b.n	801fa12 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801fc60:	b01d      	add	sp, #116	; 0x74
 801fc62:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801fc66 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 801fc66:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fc6a:	b085      	sub	sp, #20
 801fc6c:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 801fc70:	9102      	str	r1, [sp, #8]
 801fc72:	2c00      	cmp	r4, #0
 801fc74:	fb04 7103 	mla	r1, r4, r3, r7
 801fc78:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 801fc7c:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 801fc80:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 801fc84:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 801fc88:	f2c0 810c 	blt.w	801fea4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 801fc8c:	45a6      	cmp	lr, r4
 801fc8e:	f340 8109 	ble.w	801fea4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 801fc92:	2f00      	cmp	r7, #0
 801fc94:	f2c0 8104 	blt.w	801fea0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 801fc98:	42bb      	cmp	r3, r7
 801fc9a:	f340 8101 	ble.w	801fea0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 801fc9e:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 801fca2:	1c7a      	adds	r2, r7, #1
 801fca4:	f100 8101 	bmi.w	801feaa <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 801fca8:	4293      	cmp	r3, r2
 801fcaa:	f340 80fe 	ble.w	801feaa <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 801fcae:	2e00      	cmp	r6, #0
 801fcb0:	f000 80fd 	beq.w	801feae <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 801fcb4:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801fcb8:	3401      	adds	r4, #1
 801fcba:	f100 80fc 	bmi.w	801feb6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 801fcbe:	45a6      	cmp	lr, r4
 801fcc0:	f340 80f9 	ble.w	801feb6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 801fcc4:	2800      	cmp	r0, #0
 801fcc6:	f000 80f9 	beq.w	801febc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 801fcca:	2f00      	cmp	r7, #0
 801fccc:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 801fcd0:	f2c0 80ef 	blt.w	801feb2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 801fcd4:	42bb      	cmp	r3, r7
 801fcd6:	f340 80ec 	ble.w	801feb2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 801fcda:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801fcde:	3701      	adds	r7, #1
 801fce0:	f100 80ef 	bmi.w	801fec2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 801fce4:	42bb      	cmp	r3, r7
 801fce6:	f340 80ec 	ble.w	801fec2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 801fcea:	2e00      	cmp	r6, #0
 801fcec:	f000 80eb 	beq.w	801fec6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 801fcf0:	6852      	ldr	r2, [r2, #4]
 801fcf2:	b2b6      	uxth	r6, r6
 801fcf4:	b280      	uxth	r0, r0
 801fcf6:	fb00 fe06 	mul.w	lr, r0, r6
 801fcfa:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801fcfe:	0136      	lsls	r6, r6, #4
 801fd00:	eba6 070e 	sub.w	r7, r6, lr
 801fd04:	b280      	uxth	r0, r0
 801fd06:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 801fd0a:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801fd0e:	b2bf      	uxth	r7, r7
 801fd10:	1a1b      	subs	r3, r3, r0
 801fd12:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801fd16:	b29b      	uxth	r3, r3
 801fd18:	fb07 f60a 	mul.w	r6, r7, sl
 801fd1c:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801fd20:	fb0b 6603 	mla	r6, fp, r3, r6
 801fd24:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801fd28:	fb00 6609 	mla	r6, r0, r9, r6
 801fd2c:	fb0e 6608 	mla	r6, lr, r8, r6
 801fd30:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801fd34:	9600      	str	r6, [sp, #0]
 801fd36:	2e00      	cmp	r6, #0
 801fd38:	f000 80af 	beq.w	801fe9a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 801fd3c:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801fd40:	fb0b fc0c 	mul.w	ip, fp, ip
 801fd44:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801fd48:	fb0b f505 	mul.w	r5, fp, r5
 801fd4c:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801fd50:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 801fd54:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801fd58:	44dc      	add	ip, fp
 801fd5a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801fd5e:	9501      	str	r5, [sp, #4]
 801fd60:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 801fd64:	9503      	str	r5, [sp, #12]
 801fd66:	9d01      	ldr	r5, [sp, #4]
 801fd68:	9e02      	ldr	r6, [sp, #8]
 801fd6a:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 801fd6e:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801fd72:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 801fd76:	fb0a fc0c 	mul.w	ip, sl, ip
 801fd7a:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801fd7e:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801fd82:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801fd86:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801fd8a:	4465      	add	r5, ip
 801fd8c:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801fd90:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801fd94:	fb09 fc0c 	mul.w	ip, r9, ip
 801fd98:	fb09 f904 	mul.w	r9, r9, r4
 801fd9c:	f509 7480 	add.w	r4, r9, #256	; 0x100
 801fda0:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801fda4:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 801fda8:	fb08 f404 	mul.w	r4, r8, r4
 801fdac:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801fdb0:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801fdb4:	fb08 f802 	mul.w	r8, r8, r2
 801fdb8:	fb0a fa01 	mul.w	sl, sl, r1
 801fdbc:	0a22      	lsrs	r2, r4, #8
 801fdbe:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 801fdc2:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801fdc6:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 801fdca:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801fdce:	4414      	add	r4, r2
 801fdd0:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801fdd4:	f508 7280 	add.w	r2, r8, #256	; 0x100
 801fdd8:	0a2d      	lsrs	r5, r5, #8
 801fdda:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801fdde:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801fde2:	9a03      	ldr	r2, [sp, #12]
 801fde4:	8836      	ldrh	r6, [r6, #0]
 801fde6:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801fdea:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801fdee:	437d      	muls	r5, r7
 801fdf0:	4461      	add	r1, ip
 801fdf2:	0a24      	lsrs	r4, r4, #8
 801fdf4:	fb02 5503 	mla	r5, r2, r3, r5
 801fdf8:	0a09      	lsrs	r1, r1, #8
 801fdfa:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801fdfe:	fb04 540e 	mla	r4, r4, lr, r5
 801fe02:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801fe06:	fb01 4100 	mla	r1, r1, r0, r4
 801fe0a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801fe0e:	0a09      	lsrs	r1, r1, #8
 801fe10:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801fe14:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 801fe18:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801fe1c:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 801fe20:	fb07 f70a 	mul.w	r7, r7, sl
 801fe24:	fb03 7101 	mla	r1, r3, r1, r7
 801fe28:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801fe2c:	9b00      	ldr	r3, [sp, #0]
 801fe2e:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801fe32:	fb0e 1e08 	mla	lr, lr, r8, r1
 801fe36:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 801fe3a:	fb00 e101 	mla	r1, r0, r1, lr
 801fe3e:	43da      	mvns	r2, r3
 801fe40:	1233      	asrs	r3, r6, #8
 801fe42:	b2d2      	uxtb	r2, r2
 801fe44:	10f0      	asrs	r0, r6, #3
 801fe46:	0a09      	lsrs	r1, r1, #8
 801fe48:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801fe4c:	00f6      	lsls	r6, r6, #3
 801fe4e:	4353      	muls	r3, r2
 801fe50:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801fe54:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801fe58:	b2f6      	uxtb	r6, r6
 801fe5a:	4321      	orrs	r1, r4
 801fe5c:	4350      	muls	r0, r2
 801fe5e:	4356      	muls	r6, r2
 801fe60:	1c5a      	adds	r2, r3, #1
 801fe62:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801fe66:	0c0b      	lsrs	r3, r1, #16
 801fe68:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801fe6c:	1c42      	adds	r2, r0, #1
 801fe6e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801fe72:	0a0a      	lsrs	r2, r1, #8
 801fe74:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801fe78:	021b      	lsls	r3, r3, #8
 801fe7a:	00d2      	lsls	r2, r2, #3
 801fe7c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801fe80:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801fe84:	4313      	orrs	r3, r2
 801fe86:	1c72      	adds	r2, r6, #1
 801fe88:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801fe8c:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 801fe90:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801fe94:	4319      	orrs	r1, r3
 801fe96:	9b02      	ldr	r3, [sp, #8]
 801fe98:	8019      	strh	r1, [r3, #0]
 801fe9a:	b005      	add	sp, #20
 801fe9c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fea0:	2500      	movs	r5, #0
 801fea2:	e6fe      	b.n	801fca2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 801fea4:	2100      	movs	r1, #0
 801fea6:	460d      	mov	r5, r1
 801fea8:	e706      	b.n	801fcb8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801feaa:	2100      	movs	r1, #0
 801feac:	e704      	b.n	801fcb8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801feae:	4631      	mov	r1, r6
 801feb0:	e702      	b.n	801fcb8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801feb2:	2400      	movs	r4, #0
 801feb4:	e713      	b.n	801fcde <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 801feb6:	2200      	movs	r2, #0
 801feb8:	4614      	mov	r4, r2
 801feba:	e71a      	b.n	801fcf2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801febc:	4602      	mov	r2, r0
 801febe:	4604      	mov	r4, r0
 801fec0:	e717      	b.n	801fcf2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801fec2:	2200      	movs	r2, #0
 801fec4:	e715      	b.n	801fcf2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801fec6:	4632      	mov	r2, r6
 801fec8:	e713      	b.n	801fcf2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

0801fecc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801fecc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fed0:	b09b      	sub	sp, #108	; 0x6c
 801fed2:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 801fed6:	9218      	str	r2, [sp, #96]	; 0x60
 801fed8:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801feda:	9116      	str	r1, [sp, #88]	; 0x58
 801fedc:	9307      	str	r3, [sp, #28]
 801fede:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 801fee2:	9019      	str	r0, [sp, #100]	; 0x64
 801fee4:	6850      	ldr	r0, [r2, #4]
 801fee6:	6812      	ldr	r2, [r2, #0]
 801fee8:	fb00 1303 	mla	r3, r0, r3, r1
 801feec:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801fef0:	930a      	str	r3, [sp, #40]	; 0x28
 801fef2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801fef4:	681b      	ldr	r3, [r3, #0]
 801fef6:	930f      	str	r3, [sp, #60]	; 0x3c
 801fef8:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801fefa:	2b00      	cmp	r3, #0
 801fefc:	dc03      	bgt.n	801ff06 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801fefe:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801ff00:	2b00      	cmp	r3, #0
 801ff02:	f340 8386 	ble.w	8020612 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801ff06:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801ff08:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ff0c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801ff10:	1e48      	subs	r0, r1, #1
 801ff12:	1e57      	subs	r7, r2, #1
 801ff14:	9b07      	ldr	r3, [sp, #28]
 801ff16:	2b00      	cmp	r3, #0
 801ff18:	f340 8166 	ble.w	80201e8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801ff1c:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801ff20:	ea4f 4326 	mov.w	r3, r6, asr #16
 801ff24:	d406      	bmi.n	801ff34 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801ff26:	4584      	cmp	ip, r0
 801ff28:	da04      	bge.n	801ff34 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801ff2a:	2b00      	cmp	r3, #0
 801ff2c:	db02      	blt.n	801ff34 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801ff2e:	42bb      	cmp	r3, r7
 801ff30:	f2c0 815b 	blt.w	80201ea <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 801ff34:	f11c 0c01 	adds.w	ip, ip, #1
 801ff38:	f100 814b 	bmi.w	80201d2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801ff3c:	4561      	cmp	r1, ip
 801ff3e:	f2c0 8148 	blt.w	80201d2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801ff42:	3301      	adds	r3, #1
 801ff44:	f100 8145 	bmi.w	80201d2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801ff48:	429a      	cmp	r2, r3
 801ff4a:	f2c0 8142 	blt.w	80201d2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801ff4e:	9b07      	ldr	r3, [sp, #28]
 801ff50:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801ff52:	9317      	str	r3, [sp, #92]	; 0x5c
 801ff54:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801ff56:	2b00      	cmp	r3, #0
 801ff58:	f340 8165 	ble.w	8020226 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801ff5c:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 801ff5e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801ff60:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801ff64:	689b      	ldr	r3, [r3, #8]
 801ff66:	1422      	asrs	r2, r4, #16
 801ff68:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801ff6c:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801ff70:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801ff74:	f100 81d5 	bmi.w	8020322 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801ff78:	f103 38ff 	add.w	r8, r3, #4294967295
 801ff7c:	4542      	cmp	r2, r8
 801ff7e:	f280 81d0 	bge.w	8020322 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801ff82:	f1bc 0f00 	cmp.w	ip, #0
 801ff86:	f2c0 81cc 	blt.w	8020322 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801ff8a:	f10e 38ff 	add.w	r8, lr, #4294967295
 801ff8e:	45c4      	cmp	ip, r8
 801ff90:	f280 81c7 	bge.w	8020322 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801ff94:	b21b      	sxth	r3, r3
 801ff96:	fb0c 2203 	mla	r2, ip, r3, r2
 801ff9a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801ff9c:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801ffa0:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801ffa4:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801ffa8:	2900      	cmp	r1, #0
 801ffaa:	f000 8182 	beq.w	80202b2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801ffae:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801ffb2:	950b      	str	r5, [sp, #44]	; 0x2c
 801ffb4:	0e2d      	lsrs	r5, r5, #24
 801ffb6:	9512      	str	r5, [sp, #72]	; 0x48
 801ffb8:	b180      	cbz	r0, 801ffdc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801ffba:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 801ffbe:	3b01      	subs	r3, #1
 801ffc0:	009b      	lsls	r3, r3, #2
 801ffc2:	3304      	adds	r3, #4
 801ffc4:	eb08 0c03 	add.w	ip, r8, r3
 801ffc8:	f858 3003 	ldr.w	r3, [r8, r3]
 801ffcc:	9308      	str	r3, [sp, #32]
 801ffce:	0e1b      	lsrs	r3, r3, #24
 801ffd0:	9310      	str	r3, [sp, #64]	; 0x40
 801ffd2:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801ffd6:	930c      	str	r3, [sp, #48]	; 0x30
 801ffd8:	0e1b      	lsrs	r3, r3, #24
 801ffda:	9313      	str	r3, [sp, #76]	; 0x4c
 801ffdc:	b289      	uxth	r1, r1
 801ffde:	b280      	uxth	r0, r0
 801ffe0:	fb01 f900 	mul.w	r9, r1, r0
 801ffe4:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801ffe8:	0109      	lsls	r1, r1, #4
 801ffea:	eba1 0809 	sub.w	r8, r1, r9
 801ffee:	b280      	uxth	r0, r0
 801fff0:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 801fff4:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801fff6:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801fff8:	fa1f f888 	uxth.w	r8, r8
 801fffc:	1a09      	subs	r1, r1, r0
 801fffe:	b289      	uxth	r1, r1
 8020000:	fb08 f303 	mul.w	r3, r8, r3
 8020004:	fb01 330e 	mla	r3, r1, lr, r3
 8020008:	fb00 3305 	mla	r3, r0, r5, r3
 802000c:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 802000e:	fb09 3305 	mla	r3, r9, r5, r3
 8020012:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8020016:	2b00      	cmp	r3, #0
 8020018:	f000 80d2 	beq.w	80201c0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 802001c:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8020020:	d01b      	beq.n	802005a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 8020022:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 8020026:	fb0e fa0a 	mul.w	sl, lr, sl
 802002a:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 802002e:	fb0e fe02 	mul.w	lr, lr, r2
 8020032:	ea4f 221a 	mov.w	r2, sl, lsr #8
 8020036:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 802003a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 802003e:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8020042:	4452      	add	r2, sl
 8020044:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8020048:	0a12      	lsrs	r2, r2, #8
 802004a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802004e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8020052:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8020056:	ea42 020c 	orr.w	r2, r2, ip
 802005a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 802005c:	2dff      	cmp	r5, #255	; 0xff
 802005e:	d021      	beq.n	80200a4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 8020060:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8020062:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8020066:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8020068:	fb05 fb0b 	mul.w	fp, r5, fp
 802006c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 802006e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8020072:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8020074:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020078:	fb05 fa0a 	mul.w	sl, r5, sl
 802007c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020080:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8020084:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8020088:	44de      	add	lr, fp
 802008a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802008e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020092:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020096:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802009a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802009e:	ea4e 050a 	orr.w	r5, lr, sl
 80200a2:	950b      	str	r5, [sp, #44]	; 0x2c
 80200a4:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80200a6:	2dff      	cmp	r5, #255	; 0xff
 80200a8:	d021      	beq.n	80200ee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 80200aa:	9d08      	ldr	r5, [sp, #32]
 80200ac:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80200b0:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80200b2:	fb05 fb0b 	mul.w	fp, r5, fp
 80200b6:	9d08      	ldr	r5, [sp, #32]
 80200b8:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 80200bc:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80200be:	fb05 fa0e 	mul.w	sl, r5, lr
 80200c2:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80200c6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80200ca:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80200ce:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80200d2:	44de      	add	lr, fp
 80200d4:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80200d8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80200dc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80200e0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80200e4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80200e8:	ea4e 050a 	orr.w	r5, lr, sl
 80200ec:	9508      	str	r5, [sp, #32]
 80200ee:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80200f0:	2dff      	cmp	r5, #255	; 0xff
 80200f2:	d021      	beq.n	8020138 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 80200f4:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80200f6:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80200fa:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80200fc:	fb05 fb0b 	mul.w	fp, r5, fp
 8020100:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8020102:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8020106:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8020108:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802010c:	fb05 fa0a 	mul.w	sl, r5, sl
 8020110:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020114:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8020118:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 802011c:	44de      	add	lr, fp
 802011e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8020122:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020126:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802012a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802012e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020132:	ea4e 050a 	orr.w	r5, lr, sl
 8020136:	950c      	str	r5, [sp, #48]	; 0x30
 8020138:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 802013a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 802013e:	9d08      	ldr	r5, [sp, #32]
 8020140:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8020144:	fb08 fc0c 	mul.w	ip, r8, ip
 8020148:	fb01 cc0e 	mla	ip, r1, lr, ip
 802014c:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8020150:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8020152:	fb00 cc0e 	mla	ip, r0, lr, ip
 8020156:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 802015a:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 802015c:	fb09 cc0e 	mla	ip, r9, lr, ip
 8020160:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8020164:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8020168:	fb08 f80e 	mul.w	r8, r8, lr
 802016c:	fb01 8202 	mla	r2, r1, r2, r8
 8020170:	9908      	ldr	r1, [sp, #32]
 8020172:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8020176:	990c      	ldr	r1, [sp, #48]	; 0x30
 8020178:	fb00 220a 	mla	r2, r0, sl, r2
 802017c:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 8020180:	fb09 2900 	mla	r9, r9, r0, r2
 8020184:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020188:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802018c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020190:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8020194:	ea4c 0c09 	orr.w	ip, ip, r9
 8020198:	2bff      	cmp	r3, #255	; 0xff
 802019a:	ea4f 221c 	mov.w	r2, ip, lsr #8
 802019e:	f040 8091 	bne.w	80202c4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 80201a2:	ea4f 135c 	mov.w	r3, ip, lsr #5
 80201a6:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 80201aa:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80201ae:	f022 0207 	bic.w	r2, r2, #7
 80201b2:	431a      	orrs	r2, r3
 80201b4:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 80201b8:	ea4c 0c02 	orr.w	ip, ip, r2
 80201bc:	f8a7 c000 	strh.w	ip, [r7]
 80201c0:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80201c2:	441c      	add	r4, r3
 80201c4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80201c6:	441e      	add	r6, r3
 80201c8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80201ca:	3b01      	subs	r3, #1
 80201cc:	3702      	adds	r7, #2
 80201ce:	9317      	str	r3, [sp, #92]	; 0x5c
 80201d0:	e6c0      	b.n	801ff54 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 80201d2:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80201d4:	441c      	add	r4, r3
 80201d6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80201d8:	441e      	add	r6, r3
 80201da:	9b07      	ldr	r3, [sp, #28]
 80201dc:	3b01      	subs	r3, #1
 80201de:	9307      	str	r3, [sp, #28]
 80201e0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80201e2:	3302      	adds	r3, #2
 80201e4:	930a      	str	r3, [sp, #40]	; 0x28
 80201e6:	e695      	b.n	801ff14 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80201e8:	d024      	beq.n	8020234 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 80201ea:	9b07      	ldr	r3, [sp, #28]
 80201ec:	9827      	ldr	r0, [sp, #156]	; 0x9c
 80201ee:	3b01      	subs	r3, #1
 80201f0:	fb00 4003 	mla	r0, r0, r3, r4
 80201f4:	1400      	asrs	r0, r0, #16
 80201f6:	f53f aeaa 	bmi.w	801ff4e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 80201fa:	3901      	subs	r1, #1
 80201fc:	4288      	cmp	r0, r1
 80201fe:	f6bf aea6 	bge.w	801ff4e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8020202:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8020204:	fb01 6303 	mla	r3, r1, r3, r6
 8020208:	141b      	asrs	r3, r3, #16
 802020a:	f53f aea0 	bmi.w	801ff4e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 802020e:	3a01      	subs	r2, #1
 8020210:	4293      	cmp	r3, r2
 8020212:	f6bf ae9c 	bge.w	801ff4e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8020216:	f8dd b01c 	ldr.w	fp, [sp, #28]
 802021a:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 802021e:	f1bb 0f00 	cmp.w	fp, #0
 8020222:	f300 809a 	bgt.w	802035a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8020226:	9b07      	ldr	r3, [sp, #28]
 8020228:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 802022c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802022e:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8020232:	930a      	str	r3, [sp, #40]	; 0x28
 8020234:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8020236:	2b00      	cmp	r3, #0
 8020238:	f340 81eb 	ble.w	8020612 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 802023c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8020240:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8020244:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8020248:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802024a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802024e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020252:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020256:	eef0 6a62 	vmov.f32	s13, s5
 802025a:	ee61 7a27 	vmul.f32	s15, s2, s15
 802025e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020262:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020266:	ee16 4a90 	vmov	r4, s13
 802026a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802026e:	eef0 6a43 	vmov.f32	s13, s6
 8020272:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8020276:	ee12 2a90 	vmov	r2, s5
 802027a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802027e:	fb92 f3f3 	sdiv	r3, r2, r3
 8020282:	ee13 2a10 	vmov	r2, s6
 8020286:	9327      	str	r3, [sp, #156]	; 0x9c
 8020288:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802028a:	fb92 f3f3 	sdiv	r3, r2, r3
 802028e:	9328      	str	r3, [sp, #160]	; 0xa0
 8020290:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8020292:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8020294:	3b01      	subs	r3, #1
 8020296:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802029a:	9316      	str	r3, [sp, #88]	; 0x58
 802029c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802029e:	bf08      	it	eq
 80202a0:	4613      	moveq	r3, r2
 80202a2:	ee16 6a90 	vmov	r6, s13
 80202a6:	9307      	str	r3, [sp, #28]
 80202a8:	eeb0 3a67 	vmov.f32	s6, s15
 80202ac:	eef0 2a47 	vmov.f32	s5, s14
 80202b0:	e622      	b.n	801fef8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 80202b2:	2800      	cmp	r0, #0
 80202b4:	f43f ae92 	beq.w	801ffdc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 80202b8:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 80202bc:	9308      	str	r3, [sp, #32]
 80202be:	0e1b      	lsrs	r3, r3, #24
 80202c0:	9310      	str	r3, [sp, #64]	; 0x40
 80202c2:	e68b      	b.n	801ffdc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 80202c4:	8839      	ldrh	r1, [r7, #0]
 80202c6:	4dd4      	ldr	r5, [pc, #848]	; (8020618 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 80202c8:	43db      	mvns	r3, r3
 80202ca:	ea4f 2e21 	mov.w	lr, r1, asr #8
 80202ce:	fa5f f883 	uxtb.w	r8, r3
 80202d2:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 80202d6:	fb0e fe08 	mul.w	lr, lr, r8
 80202da:	10c8      	asrs	r0, r1, #3
 80202dc:	00cb      	lsls	r3, r1, #3
 80202de:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80202e2:	f10e 0101 	add.w	r1, lr, #1
 80202e6:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 80202ea:	fb00 f008 	mul.w	r0, r0, r8
 80202ee:	ea4f 411c 	mov.w	r1, ip, lsr #16
 80202f2:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 80202f6:	f100 0e01 	add.w	lr, r0, #1
 80202fa:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 80202fe:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8020302:	b2db      	uxtb	r3, r3
 8020304:	b2c9      	uxtb	r1, r1
 8020306:	00d2      	lsls	r2, r2, #3
 8020308:	fb03 f308 	mul.w	r3, r3, r8
 802030c:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 8020310:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8020314:	430a      	orrs	r2, r1
 8020316:	1c59      	adds	r1, r3, #1
 8020318:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 802031c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8020320:	e748      	b.n	80201b4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 8020322:	f112 0801 	adds.w	r8, r2, #1
 8020326:	f53f af4b 	bmi.w	80201c0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 802032a:	4543      	cmp	r3, r8
 802032c:	f6ff af48 	blt.w	80201c0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8020330:	f11c 0801 	adds.w	r8, ip, #1
 8020334:	f53f af44 	bmi.w	80201c0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8020338:	45c6      	cmp	lr, r8
 802033a:	f6ff af41 	blt.w	80201c0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 802033e:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 8020342:	fa0f f28e 	sxth.w	r2, lr
 8020346:	e9cd 1003 	strd	r1, r0, [sp, #12]
 802034a:	9200      	str	r2, [sp, #0]
 802034c:	b21b      	sxth	r3, r3
 802034e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8020350:	9819      	ldr	r0, [sp, #100]	; 0x64
 8020352:	4639      	mov	r1, r7
 8020354:	f7ff fc87 	bl	801fc66 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 8020358:	e732      	b.n	80201c0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 802035a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802035c:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 802035e:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 8020362:	1421      	asrs	r1, r4, #16
 8020364:	1433      	asrs	r3, r6, #16
 8020366:	fb07 1303 	mla	r3, r7, r3, r1
 802036a:	990f      	ldr	r1, [sp, #60]	; 0x3c
 802036c:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 8020370:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8020374:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8020378:	f3c6 3003 	ubfx	r0, r6, #12, #4
 802037c:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8020380:	2a00      	cmp	r2, #0
 8020382:	f000 8107 	beq.w	8020594 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 8020386:	684d      	ldr	r5, [r1, #4]
 8020388:	950d      	str	r5, [sp, #52]	; 0x34
 802038a:	0e2d      	lsrs	r5, r5, #24
 802038c:	9514      	str	r5, [sp, #80]	; 0x50
 802038e:	b178      	cbz	r0, 80203b0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8020390:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 8020394:	3f01      	subs	r7, #1
 8020396:	00bf      	lsls	r7, r7, #2
 8020398:	3704      	adds	r7, #4
 802039a:	eb01 0e07 	add.w	lr, r1, r7
 802039e:	59c9      	ldr	r1, [r1, r7]
 80203a0:	9109      	str	r1, [sp, #36]	; 0x24
 80203a2:	0e09      	lsrs	r1, r1, #24
 80203a4:	9111      	str	r1, [sp, #68]	; 0x44
 80203a6:	f8de 1004 	ldr.w	r1, [lr, #4]
 80203aa:	910e      	str	r1, [sp, #56]	; 0x38
 80203ac:	0e09      	lsrs	r1, r1, #24
 80203ae:	9115      	str	r1, [sp, #84]	; 0x54
 80203b0:	b292      	uxth	r2, r2
 80203b2:	b280      	uxth	r0, r0
 80203b4:	fb02 f900 	mul.w	r9, r2, r0
 80203b8:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 80203bc:	0112      	lsls	r2, r2, #4
 80203be:	eba2 0e09 	sub.w	lr, r2, r9
 80203c2:	b280      	uxth	r0, r0
 80203c4:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 80203c8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80203ca:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80203cc:	fa1f fe8e 	uxth.w	lr, lr
 80203d0:	1a09      	subs	r1, r1, r0
 80203d2:	b289      	uxth	r1, r1
 80203d4:	fb0e f202 	mul.w	r2, lr, r2
 80203d8:	fb01 220c 	mla	r2, r1, ip, r2
 80203dc:	fb00 2205 	mla	r2, r0, r5, r2
 80203e0:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80203e2:	fb09 2205 	mla	r2, r9, r5, r2
 80203e6:	f3c2 2207 	ubfx	r2, r2, #8, #8
 80203ea:	2a00      	cmp	r2, #0
 80203ec:	f000 80c9 	beq.w	8020582 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 80203f0:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80203f4:	d019      	beq.n	802042a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 80203f6:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80203fa:	fb0c fa0a 	mul.w	sl, ip, sl
 80203fe:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8020402:	fb0c fc03 	mul.w	ip, ip, r3
 8020406:	ea4f 231a 	mov.w	r3, sl, lsr #8
 802040a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802040e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8020412:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8020416:	4453      	add	r3, sl
 8020418:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 802041c:	0a1b      	lsrs	r3, r3, #8
 802041e:	0a3f      	lsrs	r7, r7, #8
 8020420:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8020424:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8020428:	433b      	orrs	r3, r7
 802042a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 802042c:	2dff      	cmp	r5, #255	; 0xff
 802042e:	d020      	beq.n	8020472 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 8020430:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8020432:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8020436:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8020438:	436f      	muls	r7, r5
 802043a:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802043c:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8020440:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8020442:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8020446:	fb05 fa0a 	mul.w	sl, r5, sl
 802044a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802044e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020452:	44bc      	add	ip, r7
 8020454:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8020458:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802045c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020460:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020464:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020468:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802046c:	ea4c 050a 	orr.w	r5, ip, sl
 8020470:	950d      	str	r5, [sp, #52]	; 0x34
 8020472:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8020474:	2dff      	cmp	r5, #255	; 0xff
 8020476:	d020      	beq.n	80204ba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 8020478:	9d09      	ldr	r5, [sp, #36]	; 0x24
 802047a:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 802047e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8020480:	436f      	muls	r7, r5
 8020482:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8020484:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8020488:	9d11      	ldr	r5, [sp, #68]	; 0x44
 802048a:	fb05 fa0c 	mul.w	sl, r5, ip
 802048e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8020492:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020496:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802049a:	44bc      	add	ip, r7
 802049c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80204a0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80204a4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80204a8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80204ac:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80204b0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80204b4:	ea4c 050a 	orr.w	r5, ip, sl
 80204b8:	9509      	str	r5, [sp, #36]	; 0x24
 80204ba:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80204bc:	2dff      	cmp	r5, #255	; 0xff
 80204be:	d020      	beq.n	8020502 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 80204c0:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80204c2:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80204c6:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80204c8:	436f      	muls	r7, r5
 80204ca:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80204cc:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80204d0:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80204d2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80204d6:	fb05 fa0a 	mul.w	sl, r5, sl
 80204da:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80204de:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80204e2:	44bc      	add	ip, r7
 80204e4:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80204e8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80204ec:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80204f0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80204f4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80204f8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80204fc:	ea4c 050a 	orr.w	r5, ip, sl
 8020500:	950e      	str	r5, [sp, #56]	; 0x38
 8020502:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8020504:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8020508:	9d09      	ldr	r5, [sp, #36]	; 0x24
 802050a:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 802050e:	fb0e f707 	mul.w	r7, lr, r7
 8020512:	fb01 770c 	mla	r7, r1, ip, r7
 8020516:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 802051a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802051c:	fb00 770c 	mla	r7, r0, ip, r7
 8020520:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8020524:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8020526:	fb09 770c 	mla	r7, r9, ip, r7
 802052a:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 802052e:	fb0e fe0c 	mul.w	lr, lr, ip
 8020532:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8020536:	fb01 e303 	mla	r3, r1, r3, lr
 802053a:	9909      	ldr	r1, [sp, #36]	; 0x24
 802053c:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8020540:	990e      	ldr	r1, [sp, #56]	; 0x38
 8020542:	fb00 330a 	mla	r3, r0, sl, r3
 8020546:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 802054a:	fb09 3c0c 	mla	ip, r9, ip, r3
 802054e:	0a3f      	lsrs	r7, r7, #8
 8020550:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020554:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8020558:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 802055c:	ea47 070c 	orr.w	r7, r7, ip
 8020560:	2aff      	cmp	r2, #255	; 0xff
 8020562:	ea4f 2317 	mov.w	r3, r7, lsr #8
 8020566:	d11e      	bne.n	80205a6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 8020568:	097a      	lsrs	r2, r7, #5
 802056a:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 802056e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8020572:	f023 0307 	bic.w	r3, r3, #7
 8020576:	4313      	orrs	r3, r2
 8020578:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 802057c:	431f      	orrs	r7, r3
 802057e:	f8a8 7000 	strh.w	r7, [r8]
 8020582:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8020584:	441c      	add	r4, r3
 8020586:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8020588:	f108 0802 	add.w	r8, r8, #2
 802058c:	441e      	add	r6, r3
 802058e:	f10b 3bff 	add.w	fp, fp, #4294967295
 8020592:	e644      	b.n	802021e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 8020594:	2800      	cmp	r0, #0
 8020596:	f43f af0b 	beq.w	80203b0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 802059a:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 802059e:	9109      	str	r1, [sp, #36]	; 0x24
 80205a0:	0e09      	lsrs	r1, r1, #24
 80205a2:	9111      	str	r1, [sp, #68]	; 0x44
 80205a4:	e704      	b.n	80203b0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 80205a6:	f8b8 1000 	ldrh.w	r1, [r8]
 80205aa:	43d2      	mvns	r2, r2
 80205ac:	ea4f 2c21 	mov.w	ip, r1, asr #8
 80205b0:	fa5f fe82 	uxtb.w	lr, r2
 80205b4:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80205b8:	fb0c fc0e 	mul.w	ip, ip, lr
 80205bc:	10c8      	asrs	r0, r1, #3
 80205be:	00ca      	lsls	r2, r1, #3
 80205c0:	f10c 0101 	add.w	r1, ip, #1
 80205c4:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 80205c8:	0c39      	lsrs	r1, r7, #16
 80205ca:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 80205ce:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80205d2:	4911      	ldr	r1, [pc, #68]	; (8020618 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 80205d4:	fb00 f00e 	mul.w	r0, r0, lr
 80205d8:	fa5f fc8c 	uxtb.w	ip, ip
 80205dc:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 80205e0:	b2d2      	uxtb	r2, r2
 80205e2:	1c41      	adds	r1, r0, #1
 80205e4:	fb02 f20e 	mul.w	r2, r2, lr
 80205e8:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 80205ec:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80205f0:	1c51      	adds	r1, r2, #1
 80205f2:	00c0      	lsls	r0, r0, #3
 80205f4:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80205f8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80205fc:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8020600:	ea4c 0c00 	orr.w	ip, ip, r0
 8020604:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8020608:	ea47 0c0c 	orr.w	ip, r7, ip
 802060c:	f8a8 c000 	strh.w	ip, [r8]
 8020610:	e7b7      	b.n	8020582 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 8020612:	b01b      	add	sp, #108	; 0x6c
 8020614:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020618:	fffff800 	.word	0xfffff800

0802061c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 802061c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8020620:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 8020624:	2d00      	cmp	r5, #0
 8020626:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 802062a:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 802062e:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8020632:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 8020636:	fb05 0e03 	mla	lr, r5, r3, r0
 802063a:	f2c0 808c 	blt.w	8020756 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 802063e:	45a9      	cmp	r9, r5
 8020640:	f340 8089 	ble.w	8020756 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 8020644:	2800      	cmp	r0, #0
 8020646:	f2c0 8084 	blt.w	8020752 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 802064a:	4580      	cmp	r8, r0
 802064c:	f340 8081 	ble.w	8020752 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 8020650:	ea4f 045e 	mov.w	r4, lr, lsr #1
 8020654:	f01e 0f01 	tst.w	lr, #1
 8020658:	5d16      	ldrb	r6, [r2, r4]
 802065a:	bf0c      	ite	eq
 802065c:	f006 060f 	andeq.w	r6, r6, #15
 8020660:	1136      	asrne	r6, r6, #4
 8020662:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8020666:	b2f6      	uxtb	r6, r6
 8020668:	1c44      	adds	r4, r0, #1
 802066a:	d477      	bmi.n	802075c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 802066c:	45a0      	cmp	r8, r4
 802066e:	dd75      	ble.n	802075c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 8020670:	2f00      	cmp	r7, #0
 8020672:	d075      	beq.n	8020760 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 8020674:	f10e 0a01 	add.w	sl, lr, #1
 8020678:	ea4f 045a 	mov.w	r4, sl, lsr #1
 802067c:	f01a 0f01 	tst.w	sl, #1
 8020680:	5d14      	ldrb	r4, [r2, r4]
 8020682:	bf0c      	ite	eq
 8020684:	f004 040f 	andeq.w	r4, r4, #15
 8020688:	1124      	asrne	r4, r4, #4
 802068a:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 802068e:	b2e4      	uxtb	r4, r4
 8020690:	3501      	adds	r5, #1
 8020692:	d469      	bmi.n	8020768 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 8020694:	45a9      	cmp	r9, r5
 8020696:	dd67      	ble.n	8020768 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 8020698:	f1bc 0f00 	cmp.w	ip, #0
 802069c:	d067      	beq.n	802076e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 802069e:	2800      	cmp	r0, #0
 80206a0:	db60      	blt.n	8020764 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 80206a2:	4580      	cmp	r8, r0
 80206a4:	dd5e      	ble.n	8020764 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 80206a6:	eb03 090e 	add.w	r9, r3, lr
 80206aa:	ea4f 0559 	mov.w	r5, r9, lsr #1
 80206ae:	f019 0f01 	tst.w	r9, #1
 80206b2:	5d55      	ldrb	r5, [r2, r5]
 80206b4:	bf0c      	ite	eq
 80206b6:	f005 050f 	andeq.w	r5, r5, #15
 80206ba:	112d      	asrne	r5, r5, #4
 80206bc:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 80206c0:	b2ed      	uxtb	r5, r5
 80206c2:	3001      	adds	r0, #1
 80206c4:	d456      	bmi.n	8020774 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 80206c6:	4580      	cmp	r8, r0
 80206c8:	dd54      	ble.n	8020774 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 80206ca:	2f00      	cmp	r7, #0
 80206cc:	d054      	beq.n	8020778 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 80206ce:	3301      	adds	r3, #1
 80206d0:	449e      	add	lr, r3
 80206d2:	ea4f 035e 	mov.w	r3, lr, lsr #1
 80206d6:	f01e 0f01 	tst.w	lr, #1
 80206da:	5cd0      	ldrb	r0, [r2, r3]
 80206dc:	bf0c      	ite	eq
 80206de:	f000 000f 	andeq.w	r0, r0, #15
 80206e2:	1100      	asrne	r0, r0, #4
 80206e4:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 80206e8:	b2c3      	uxtb	r3, r0
 80206ea:	b2ba      	uxth	r2, r7
 80206ec:	fa1f fc8c 	uxth.w	ip, ip
 80206f0:	fb02 f00c 	mul.w	r0, r2, ip
 80206f4:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 80206f8:	0112      	lsls	r2, r2, #4
 80206fa:	fa1f fc8c 	uxth.w	ip, ip
 80206fe:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 8020702:	1a12      	subs	r2, r2, r0
 8020704:	eba7 070c 	sub.w	r7, r7, ip
 8020708:	b292      	uxth	r2, r2
 802070a:	b2bf      	uxth	r7, r7
 802070c:	4362      	muls	r2, r4
 802070e:	fb06 2207 	mla	r2, r6, r7, r2
 8020712:	fb0c 2505 	mla	r5, ip, r5, r2
 8020716:	fb00 5303 	mla	r3, r0, r3, r5
 802071a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802071e:	b1b3      	cbz	r3, 802074e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 8020720:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 8020724:	435a      	muls	r2, r3
 8020726:	1c53      	adds	r3, r2, #1
 8020728:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802072c:	4a2d      	ldr	r2, [pc, #180]	; (80207e4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 802072e:	121b      	asrs	r3, r3, #8
 8020730:	6812      	ldr	r2, [r2, #0]
 8020732:	2bff      	cmp	r3, #255	; 0xff
 8020734:	ea4f 2612 	mov.w	r6, r2, lsr #8
 8020738:	d120      	bne.n	802077c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 802073a:	4b2b      	ldr	r3, [pc, #172]	; (80207e8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 802073c:	0950      	lsrs	r0, r2, #5
 802073e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8020742:	4033      	ands	r3, r6
 8020744:	4318      	orrs	r0, r3
 8020746:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802074a:	4302      	orrs	r2, r0
 802074c:	800a      	strh	r2, [r1, #0]
 802074e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8020752:	2600      	movs	r6, #0
 8020754:	e788      	b.n	8020668 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 8020756:	2400      	movs	r4, #0
 8020758:	4626      	mov	r6, r4
 802075a:	e799      	b.n	8020690 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 802075c:	2400      	movs	r4, #0
 802075e:	e797      	b.n	8020690 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8020760:	463c      	mov	r4, r7
 8020762:	e795      	b.n	8020690 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8020764:	2500      	movs	r5, #0
 8020766:	e7ac      	b.n	80206c2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 8020768:	2300      	movs	r3, #0
 802076a:	461d      	mov	r5, r3
 802076c:	e7bd      	b.n	80206ea <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 802076e:	4663      	mov	r3, ip
 8020770:	4665      	mov	r5, ip
 8020772:	e7ba      	b.n	80206ea <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8020774:	2300      	movs	r3, #0
 8020776:	e7b8      	b.n	80206ea <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8020778:	463b      	mov	r3, r7
 802077a:	e7b6      	b.n	80206ea <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 802077c:	880d      	ldrh	r5, [r1, #0]
 802077e:	b29f      	uxth	r7, r3
 8020780:	122c      	asrs	r4, r5, #8
 8020782:	f3c2 4007 	ubfx	r0, r2, #16, #8
 8020786:	43db      	mvns	r3, r3
 8020788:	b2db      	uxtb	r3, r3
 802078a:	fb10 f007 	smulbb	r0, r0, r7
 802078e:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8020792:	fb04 0403 	mla	r4, r4, r3, r0
 8020796:	b2f6      	uxtb	r6, r6
 8020798:	10e8      	asrs	r0, r5, #3
 802079a:	b2d2      	uxtb	r2, r2
 802079c:	00ed      	lsls	r5, r5, #3
 802079e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80207a2:	fb12 f207 	smulbb	r2, r2, r7
 80207a6:	fb16 f607 	smulbb	r6, r6, r7
 80207aa:	b2ed      	uxtb	r5, r5
 80207ac:	b2a4      	uxth	r4, r4
 80207ae:	fb00 6603 	mla	r6, r0, r3, r6
 80207b2:	fb05 2303 	mla	r3, r5, r3, r2
 80207b6:	b29a      	uxth	r2, r3
 80207b8:	1c63      	adds	r3, r4, #1
 80207ba:	b2b0      	uxth	r0, r6
 80207bc:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 80207c0:	1c53      	adds	r3, r2, #1
 80207c2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80207c6:	1c42      	adds	r2, r0, #1
 80207c8:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80207cc:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 80207d0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80207d4:	0940      	lsrs	r0, r0, #5
 80207d6:	4323      	orrs	r3, r4
 80207d8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80207dc:	4303      	orrs	r3, r0
 80207de:	800b      	strh	r3, [r1, #0]
 80207e0:	e7b5      	b.n	802074e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 80207e2:	bf00      	nop
 80207e4:	2001795c 	.word	0x2001795c
 80207e8:	00fff800 	.word	0x00fff800

080207ec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80207ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80207f0:	b097      	sub	sp, #92	; 0x5c
 80207f2:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 80207f6:	9214      	str	r2, [sp, #80]	; 0x50
 80207f8:	9309      	str	r3, [sp, #36]	; 0x24
 80207fa:	9a25      	ldr	r2, [sp, #148]	; 0x94
 80207fc:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 8020800:	910d      	str	r1, [sp, #52]	; 0x34
 8020802:	930f      	str	r3, [sp, #60]	; 0x3c
 8020804:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 8020808:	9015      	str	r0, [sp, #84]	; 0x54
 802080a:	6850      	ldr	r0, [r2, #4]
 802080c:	6812      	ldr	r2, [r2, #0]
 802080e:	fb00 1303 	mla	r3, r0, r3, r1
 8020812:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8020816:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8020818:	689b      	ldr	r3, [r3, #8]
 802081a:	3301      	adds	r3, #1
 802081c:	f023 0301 	bic.w	r3, r3, #1
 8020820:	930a      	str	r3, [sp, #40]	; 0x28
 8020822:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8020824:	681f      	ldr	r7, [r3, #0]
 8020826:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8020828:	2b00      	cmp	r3, #0
 802082a:	dc03      	bgt.n	8020834 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 802082c:	9b14      	ldr	r3, [sp, #80]	; 0x50
 802082e:	2b00      	cmp	r3, #0
 8020830:	f340 8287 	ble.w	8020d42 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 8020834:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8020836:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802083a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802083e:	1e48      	subs	r0, r1, #1
 8020840:	f102 3cff 	add.w	ip, r2, #4294967295
 8020844:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020846:	2b00      	cmp	r3, #0
 8020848:	f340 80c4 	ble.w	80209d4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 802084c:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8020850:	ea4f 4326 	mov.w	r3, r6, asr #16
 8020854:	d406      	bmi.n	8020864 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8020856:	4586      	cmp	lr, r0
 8020858:	da04      	bge.n	8020864 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802085a:	2b00      	cmp	r3, #0
 802085c:	db02      	blt.n	8020864 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802085e:	4563      	cmp	r3, ip
 8020860:	f2c0 80b9 	blt.w	80209d6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 8020864:	f11e 0e01 	adds.w	lr, lr, #1
 8020868:	f100 80aa 	bmi.w	80209c0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 802086c:	4571      	cmp	r1, lr
 802086e:	f2c0 80a7 	blt.w	80209c0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8020872:	3301      	adds	r3, #1
 8020874:	f100 80a4 	bmi.w	80209c0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8020878:	429a      	cmp	r2, r3
 802087a:	f2c0 80a1 	blt.w	80209c0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 802087e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020880:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
 8020884:	930e      	str	r3, [sp, #56]	; 0x38
 8020886:	46c8      	mov	r8, r9
 8020888:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802088a:	2b00      	cmp	r3, #0
 802088c:	f340 80c3 	ble.w	8020a16 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8020890:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8020892:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8020896:	1423      	asrs	r3, r4, #16
 8020898:	ea4f 4026 	mov.w	r0, r6, asr #16
 802089c:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80208a0:	f3c6 3103 	ubfx	r1, r6, #12, #4
 80208a4:	f100 814d 	bmi.w	8020b42 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 80208a8:	f10c 3bff 	add.w	fp, ip, #4294967295
 80208ac:	455b      	cmp	r3, fp
 80208ae:	f280 8148 	bge.w	8020b42 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 80208b2:	2800      	cmp	r0, #0
 80208b4:	f2c0 8145 	blt.w	8020b42 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 80208b8:	f10e 3bff 	add.w	fp, lr, #4294967295
 80208bc:	4558      	cmp	r0, fp
 80208be:	f280 8140 	bge.w	8020b42 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 80208c2:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 80208c4:	fb00 3305 	mla	r3, r0, r5, r3
 80208c8:	0858      	lsrs	r0, r3, #1
 80208ca:	07dd      	lsls	r5, r3, #31
 80208cc:	f817 c000 	ldrb.w	ip, [r7, r0]
 80208d0:	bf54      	ite	pl
 80208d2:	f00c 0c0f 	andpl.w	ip, ip, #15
 80208d6:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80208da:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80208de:	fa5f fc8c 	uxtb.w	ip, ip
 80208e2:	2a00      	cmp	r2, #0
 80208e4:	f000 80db 	beq.w	8020a9e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 80208e8:	1c58      	adds	r0, r3, #1
 80208ea:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 80208ee:	07c0      	lsls	r0, r0, #31
 80208f0:	f817 e00e 	ldrb.w	lr, [r7, lr]
 80208f4:	bf54      	ite	pl
 80208f6:	f00e 0e0f 	andpl.w	lr, lr, #15
 80208fa:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 80208fe:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8020902:	fa5f f08e 	uxtb.w	r0, lr
 8020906:	9010      	str	r0, [sp, #64]	; 0x40
 8020908:	b1c9      	cbz	r1, 802093e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 802090a:	4453      	add	r3, sl
 802090c:	0858      	lsrs	r0, r3, #1
 802090e:	07dd      	lsls	r5, r3, #31
 8020910:	5c38      	ldrb	r0, [r7, r0]
 8020912:	bf54      	ite	pl
 8020914:	f000 000f 	andpl.w	r0, r0, #15
 8020918:	1100      	asrmi	r0, r0, #4
 802091a:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 802091e:	3301      	adds	r3, #1
 8020920:	b2c0      	uxtb	r0, r0
 8020922:	900b      	str	r0, [sp, #44]	; 0x2c
 8020924:	0858      	lsrs	r0, r3, #1
 8020926:	07dd      	lsls	r5, r3, #31
 8020928:	f817 e000 	ldrb.w	lr, [r7, r0]
 802092c:	bf54      	ite	pl
 802092e:	f00e 030f 	andpl.w	r3, lr, #15
 8020932:	ea4f 132e 	movmi.w	r3, lr, asr #4
 8020936:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 802093a:	b2db      	uxtb	r3, r3
 802093c:	9311      	str	r3, [sp, #68]	; 0x44
 802093e:	b292      	uxth	r2, r2
 8020940:	b289      	uxth	r1, r1
 8020942:	fb02 f301 	mul.w	r3, r2, r1
 8020946:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 802094a:	0112      	lsls	r2, r2, #4
 802094c:	b289      	uxth	r1, r1
 802094e:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 8020952:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8020954:	1ad2      	subs	r2, r2, r3
 8020956:	1a40      	subs	r0, r0, r1
 8020958:	b292      	uxth	r2, r2
 802095a:	436a      	muls	r2, r5
 802095c:	b280      	uxth	r0, r0
 802095e:	fb0c 2c00 	mla	ip, ip, r0, r2
 8020962:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8020964:	fb01 c102 	mla	r1, r1, r2, ip
 8020968:	9a11      	ldr	r2, [sp, #68]	; 0x44
 802096a:	fb03 1302 	mla	r3, r3, r2, r1
 802096e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8020972:	b1db      	cbz	r3, 80209ac <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8020974:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8020976:	4353      	muls	r3, r2
 8020978:	1c5a      	adds	r2, r3, #1
 802097a:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 802097e:	4ac6      	ldr	r2, [pc, #792]	; (8020c98 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8020980:	121b      	asrs	r3, r3, #8
 8020982:	6812      	ldr	r2, [r2, #0]
 8020984:	2bff      	cmp	r3, #255	; 0xff
 8020986:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 802098a:	f040 8099 	bne.w	8020ac0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 802098e:	0953      	lsrs	r3, r2, #5
 8020990:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8020994:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020998:	f02c 0c07 	bic.w	ip, ip, #7
 802099c:	ea43 0c0c 	orr.w	ip, r3, ip
 80209a0:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80209a4:	ea4c 0202 	orr.w	r2, ip, r2
 80209a8:	f8a8 2000 	strh.w	r2, [r8]
 80209ac:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80209ae:	441c      	add	r4, r3
 80209b0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80209b2:	441e      	add	r6, r3
 80209b4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80209b6:	3b01      	subs	r3, #1
 80209b8:	f108 0802 	add.w	r8, r8, #2
 80209bc:	930e      	str	r3, [sp, #56]	; 0x38
 80209be:	e763      	b.n	8020888 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80209c0:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80209c2:	441c      	add	r4, r3
 80209c4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80209c6:	441e      	add	r6, r3
 80209c8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80209ca:	3b01      	subs	r3, #1
 80209cc:	9309      	str	r3, [sp, #36]	; 0x24
 80209ce:	f109 0902 	add.w	r9, r9, #2
 80209d2:	e737      	b.n	8020844 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 80209d4:	d024      	beq.n	8020a20 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 80209d6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80209d8:	9823      	ldr	r0, [sp, #140]	; 0x8c
 80209da:	3b01      	subs	r3, #1
 80209dc:	fb00 4003 	mla	r0, r0, r3, r4
 80209e0:	1400      	asrs	r0, r0, #16
 80209e2:	f53f af4c 	bmi.w	802087e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80209e6:	3901      	subs	r1, #1
 80209e8:	4288      	cmp	r0, r1
 80209ea:	f6bf af48 	bge.w	802087e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80209ee:	9924      	ldr	r1, [sp, #144]	; 0x90
 80209f0:	fb01 6303 	mla	r3, r1, r3, r6
 80209f4:	141b      	asrs	r3, r3, #16
 80209f6:	f53f af42 	bmi.w	802087e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80209fa:	3a01      	subs	r2, #1
 80209fc:	4293      	cmp	r3, r2
 80209fe:	f6bf af3e 	bge.w	802087e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8020a02:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 8020a06:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8020a0a:	930e      	str	r3, [sp, #56]	; 0x38
 8020a0c:	46c8      	mov	r8, r9
 8020a0e:	f1bb 0f00 	cmp.w	fp, #0
 8020a12:	f300 80b7 	bgt.w	8020b84 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 8020a16:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020a18:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8020a1c:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8020a20:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8020a22:	2b00      	cmp	r3, #0
 8020a24:	f340 818d 	ble.w	8020d42 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 8020a28:	ee30 0a04 	vadd.f32	s0, s0, s8
 8020a2c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8020a30:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8020a34:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020a36:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8020a3a:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020a3e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020a42:	eef0 6a62 	vmov.f32	s13, s5
 8020a46:	ee61 7a27 	vmul.f32	s15, s2, s15
 8020a4a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020a4e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020a52:	ee16 4a90 	vmov	r4, s13
 8020a56:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8020a5a:	eef0 6a43 	vmov.f32	s13, s6
 8020a5e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8020a62:	ee12 2a90 	vmov	r2, s5
 8020a66:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8020a6a:	fb92 f3f3 	sdiv	r3, r2, r3
 8020a6e:	ee13 2a10 	vmov	r2, s6
 8020a72:	9323      	str	r3, [sp, #140]	; 0x8c
 8020a74:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020a76:	fb92 f3f3 	sdiv	r3, r2, r3
 8020a7a:	9324      	str	r3, [sp, #144]	; 0x90
 8020a7c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8020a7e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8020a80:	3b01      	subs	r3, #1
 8020a82:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020a86:	930d      	str	r3, [sp, #52]	; 0x34
 8020a88:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020a8a:	bf08      	it	eq
 8020a8c:	4613      	moveq	r3, r2
 8020a8e:	ee16 6a90 	vmov	r6, s13
 8020a92:	9309      	str	r3, [sp, #36]	; 0x24
 8020a94:	eeb0 3a67 	vmov.f32	s6, s15
 8020a98:	eef0 2a47 	vmov.f32	s5, s14
 8020a9c:	e6c3      	b.n	8020826 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8020a9e:	2900      	cmp	r1, #0
 8020aa0:	f43f af4d 	beq.w	802093e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8020aa4:	eb0a 0003 	add.w	r0, sl, r3
 8020aa8:	0843      	lsrs	r3, r0, #1
 8020aaa:	07c0      	lsls	r0, r0, #31
 8020aac:	5cfb      	ldrb	r3, [r7, r3]
 8020aae:	bf54      	ite	pl
 8020ab0:	f003 030f 	andpl.w	r3, r3, #15
 8020ab4:	111b      	asrmi	r3, r3, #4
 8020ab6:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8020aba:	b2db      	uxtb	r3, r3
 8020abc:	930b      	str	r3, [sp, #44]	; 0x2c
 8020abe:	e73e      	b.n	802093e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8020ac0:	f8b8 e000 	ldrh.w	lr, [r8]
 8020ac4:	fa1f fb83 	uxth.w	fp, r3
 8020ac8:	ea4f 202e 	mov.w	r0, lr, asr #8
 8020acc:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8020ad0:	43db      	mvns	r3, r3
 8020ad2:	b2db      	uxtb	r3, r3
 8020ad4:	fb11 f10b 	smulbb	r1, r1, fp
 8020ad8:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8020adc:	fb00 1003 	mla	r0, r0, r3, r1
 8020ae0:	fa5f fc8c 	uxtb.w	ip, ip
 8020ae4:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8020ae8:	b2d2      	uxtb	r2, r2
 8020aea:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8020aee:	b280      	uxth	r0, r0
 8020af0:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8020af4:	fb1c fc0b 	smulbb	ip, ip, fp
 8020af8:	fa5f fe8e 	uxtb.w	lr, lr
 8020afc:	fb12 fb0b 	smulbb	fp, r2, fp
 8020b00:	fb01 cc03 	mla	ip, r1, r3, ip
 8020b04:	fb0e bb03 	mla	fp, lr, r3, fp
 8020b08:	1c43      	adds	r3, r0, #1
 8020b0a:	fa1f fc8c 	uxth.w	ip, ip
 8020b0e:	fa1f fb8b 	uxth.w	fp, fp
 8020b12:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8020b16:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
 8020b1a:	f10c 0101 	add.w	r1, ip, #1
 8020b1e:	f10b 0001 	add.w	r0, fp, #1
 8020b22:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8020b26:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8020b2a:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8020b2e:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8020b32:	4318      	orrs	r0, r3
 8020b34:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8020b38:	ea40 000c 	orr.w	r0, r0, ip
 8020b3c:	f8a8 0000 	strh.w	r0, [r8]
 8020b40:	e734      	b.n	80209ac <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8020b42:	f113 0b01 	adds.w	fp, r3, #1
 8020b46:	f53f af31 	bmi.w	80209ac <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8020b4a:	45dc      	cmp	ip, fp
 8020b4c:	f6ff af2e 	blt.w	80209ac <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8020b50:	f110 0b01 	adds.w	fp, r0, #1
 8020b54:	f53f af2a 	bmi.w	80209ac <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8020b58:	45de      	cmp	lr, fp
 8020b5a:	f6ff af27 	blt.w	80209ac <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8020b5e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8020b60:	9302      	str	r3, [sp, #8]
 8020b62:	fa0f f38e 	sxth.w	r3, lr
 8020b66:	9301      	str	r3, [sp, #4]
 8020b68:	fa0f f38c 	sxth.w	r3, ip
 8020b6c:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8020b70:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8020b74:	9300      	str	r3, [sp, #0]
 8020b76:	463a      	mov	r2, r7
 8020b78:	4653      	mov	r3, sl
 8020b7a:	4641      	mov	r1, r8
 8020b7c:	9815      	ldr	r0, [sp, #84]	; 0x54
 8020b7e:	f7ff fd4d 	bl	802061c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 8020b82:	e713      	b.n	80209ac <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8020b84:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8020b86:	1422      	asrs	r2, r4, #16
 8020b88:	1433      	asrs	r3, r6, #16
 8020b8a:	fb05 2303 	mla	r3, r5, r3, r2
 8020b8e:	085a      	lsrs	r2, r3, #1
 8020b90:	07dd      	lsls	r5, r3, #31
 8020b92:	5cba      	ldrb	r2, [r7, r2]
 8020b94:	bf54      	ite	pl
 8020b96:	f002 020f 	andpl.w	r2, r2, #15
 8020b9a:	1112      	asrmi	r2, r2, #4
 8020b9c:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8020ba0:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8020ba4:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8020ba8:	b2d2      	uxtb	r2, r2
 8020baa:	2900      	cmp	r1, #0
 8020bac:	d076      	beq.n	8020c9c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8020bae:	f103 0e01 	add.w	lr, r3, #1
 8020bb2:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 8020bb6:	f01e 0f01 	tst.w	lr, #1
 8020bba:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8020bbe:	bf0c      	ite	eq
 8020bc0:	f00c 0c0f 	andeq.w	ip, ip, #15
 8020bc4:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 8020bc8:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8020bcc:	fa5f f58c 	uxtb.w	r5, ip
 8020bd0:	9512      	str	r5, [sp, #72]	; 0x48
 8020bd2:	b300      	cbz	r0, 8020c16 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8020bd4:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8020bd6:	442b      	add	r3, r5
 8020bd8:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8020bdc:	07dd      	lsls	r5, r3, #31
 8020bde:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8020be2:	bf54      	ite	pl
 8020be4:	f00c 0c0f 	andpl.w	ip, ip, #15
 8020be8:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8020bec:	3301      	adds	r3, #1
 8020bee:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8020bf2:	fa5f f58c 	uxtb.w	r5, ip
 8020bf6:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8020bfa:	950c      	str	r5, [sp, #48]	; 0x30
 8020bfc:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8020c00:	07dd      	lsls	r5, r3, #31
 8020c02:	bf54      	ite	pl
 8020c04:	f00c 0c0f 	andpl.w	ip, ip, #15
 8020c08:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8020c0c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8020c10:	fa5f f38c 	uxtb.w	r3, ip
 8020c14:	9313      	str	r3, [sp, #76]	; 0x4c
 8020c16:	b289      	uxth	r1, r1
 8020c18:	b280      	uxth	r0, r0
 8020c1a:	fb01 f300 	mul.w	r3, r1, r0
 8020c1e:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 8020c22:	0109      	lsls	r1, r1, #4
 8020c24:	b280      	uxth	r0, r0
 8020c26:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 8020c2a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8020c2c:	1ac9      	subs	r1, r1, r3
 8020c2e:	ebac 0c00 	sub.w	ip, ip, r0
 8020c32:	b289      	uxth	r1, r1
 8020c34:	4369      	muls	r1, r5
 8020c36:	fa1f fc8c 	uxth.w	ip, ip
 8020c3a:	fb02 120c 	mla	r2, r2, ip, r1
 8020c3e:	990c      	ldr	r1, [sp, #48]	; 0x30
 8020c40:	fb00 2001 	mla	r0, r0, r1, r2
 8020c44:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8020c46:	fb03 0302 	mla	r3, r3, r2, r0
 8020c4a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8020c4e:	b1d3      	cbz	r3, 8020c86 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8020c50:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8020c52:	4353      	muls	r3, r2
 8020c54:	1c5a      	adds	r2, r3, #1
 8020c56:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8020c5a:	4a0f      	ldr	r2, [pc, #60]	; (8020c98 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8020c5c:	121b      	asrs	r3, r3, #8
 8020c5e:	6812      	ldr	r2, [r2, #0]
 8020c60:	2bff      	cmp	r3, #255	; 0xff
 8020c62:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8020c66:	d12d      	bne.n	8020cc4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 8020c68:	0953      	lsrs	r3, r2, #5
 8020c6a:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8020c6e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020c72:	f02c 0c07 	bic.w	ip, ip, #7
 8020c76:	ea43 0c0c 	orr.w	ip, r3, ip
 8020c7a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8020c7e:	ea4c 0202 	orr.w	r2, ip, r2
 8020c82:	f8a8 2000 	strh.w	r2, [r8]
 8020c86:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8020c88:	441c      	add	r4, r3
 8020c8a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020c8c:	f108 0802 	add.w	r8, r8, #2
 8020c90:	441e      	add	r6, r3
 8020c92:	f10b 3bff 	add.w	fp, fp, #4294967295
 8020c96:	e6ba      	b.n	8020a0e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8020c98:	2001795c 	.word	0x2001795c
 8020c9c:	2800      	cmp	r0, #0
 8020c9e:	d0ba      	beq.n	8020c16 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8020ca0:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8020ca2:	442b      	add	r3, r5
 8020ca4:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8020ca8:	07db      	lsls	r3, r3, #31
 8020caa:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8020cae:	bf54      	ite	pl
 8020cb0:	f00c 0c0f 	andpl.w	ip, ip, #15
 8020cb4:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8020cb8:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8020cbc:	fa5f f38c 	uxtb.w	r3, ip
 8020cc0:	930c      	str	r3, [sp, #48]	; 0x30
 8020cc2:	e7a8      	b.n	8020c16 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8020cc4:	f8b8 e000 	ldrh.w	lr, [r8]
 8020cc8:	fa1f fa83 	uxth.w	sl, r3
 8020ccc:	ea4f 202e 	mov.w	r0, lr, asr #8
 8020cd0:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8020cd4:	43db      	mvns	r3, r3
 8020cd6:	b2db      	uxtb	r3, r3
 8020cd8:	fb11 f10a 	smulbb	r1, r1, sl
 8020cdc:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8020ce0:	fb00 1003 	mla	r0, r0, r3, r1
 8020ce4:	b2d2      	uxtb	r2, r2
 8020ce6:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8020cea:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8020cee:	fa5f fe8e 	uxtb.w	lr, lr
 8020cf2:	fb12 f20a 	smulbb	r2, r2, sl
 8020cf6:	fb0e 2203 	mla	r2, lr, r3, r2
 8020cfa:	fa5f fc8c 	uxtb.w	ip, ip
 8020cfe:	b280      	uxth	r0, r0
 8020d00:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8020d04:	b292      	uxth	r2, r2
 8020d06:	fb1c fc0a 	smulbb	ip, ip, sl
 8020d0a:	fb01 cc03 	mla	ip, r1, r3, ip
 8020d0e:	1c43      	adds	r3, r0, #1
 8020d10:	1c51      	adds	r1, r2, #1
 8020d12:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8020d16:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 8020d1a:	fa1f fc8c 	uxth.w	ip, ip
 8020d1e:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8020d22:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8020d26:	4308      	orrs	r0, r1
 8020d28:	f10c 0101 	add.w	r1, ip, #1
 8020d2c:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8020d30:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8020d34:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8020d38:	ea40 000c 	orr.w	r0, r0, ip
 8020d3c:	f8a8 0000 	strh.w	r0, [r8]
 8020d40:	e7a1      	b.n	8020c86 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8020d42:	b017      	add	sp, #92	; 0x5c
 8020d44:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08020d48 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 8020d48:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8020d4c:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 8020d50:	2d00      	cmp	r5, #0
 8020d52:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8020d56:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8020d5a:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8020d5e:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 8020d62:	fb05 0e03 	mla	lr, r5, r3, r0
 8020d66:	f2c0 80b0 	blt.w	8020eca <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8020d6a:	45a9      	cmp	r9, r5
 8020d6c:	f340 80ad 	ble.w	8020eca <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8020d70:	2800      	cmp	r0, #0
 8020d72:	f2c0 80a8 	blt.w	8020ec6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8020d76:	4580      	cmp	r8, r0
 8020d78:	f340 80a5 	ble.w	8020ec6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8020d7c:	ea4f 045e 	mov.w	r4, lr, lsr #1
 8020d80:	f01e 0f01 	tst.w	lr, #1
 8020d84:	5d16      	ldrb	r6, [r2, r4]
 8020d86:	bf0c      	ite	eq
 8020d88:	f006 060f 	andeq.w	r6, r6, #15
 8020d8c:	1136      	asrne	r6, r6, #4
 8020d8e:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8020d92:	b2f6      	uxtb	r6, r6
 8020d94:	1c44      	adds	r4, r0, #1
 8020d96:	f100 809b 	bmi.w	8020ed0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8020d9a:	45a0      	cmp	r8, r4
 8020d9c:	f340 8098 	ble.w	8020ed0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8020da0:	2f00      	cmp	r7, #0
 8020da2:	f000 8097 	beq.w	8020ed4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 8020da6:	f10e 0a01 	add.w	sl, lr, #1
 8020daa:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8020dae:	f01a 0f01 	tst.w	sl, #1
 8020db2:	5d14      	ldrb	r4, [r2, r4]
 8020db4:	bf0c      	ite	eq
 8020db6:	f004 040f 	andeq.w	r4, r4, #15
 8020dba:	1124      	asrne	r4, r4, #4
 8020dbc:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8020dc0:	b2e4      	uxtb	r4, r4
 8020dc2:	3501      	adds	r5, #1
 8020dc4:	f100 808a 	bmi.w	8020edc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8020dc8:	45a9      	cmp	r9, r5
 8020dca:	f340 8087 	ble.w	8020edc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8020dce:	f1bc 0f00 	cmp.w	ip, #0
 8020dd2:	f000 8086 	beq.w	8020ee2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 8020dd6:	2800      	cmp	r0, #0
 8020dd8:	db7e      	blt.n	8020ed8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8020dda:	4580      	cmp	r8, r0
 8020ddc:	dd7c      	ble.n	8020ed8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8020dde:	eb03 090e 	add.w	r9, r3, lr
 8020de2:	ea4f 0559 	mov.w	r5, r9, lsr #1
 8020de6:	f019 0f01 	tst.w	r9, #1
 8020dea:	5d55      	ldrb	r5, [r2, r5]
 8020dec:	bf0c      	ite	eq
 8020dee:	f005 050f 	andeq.w	r5, r5, #15
 8020df2:	112d      	asrne	r5, r5, #4
 8020df4:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8020df8:	b2ed      	uxtb	r5, r5
 8020dfa:	3001      	adds	r0, #1
 8020dfc:	d474      	bmi.n	8020ee8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8020dfe:	4580      	cmp	r8, r0
 8020e00:	dd72      	ble.n	8020ee8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8020e02:	2f00      	cmp	r7, #0
 8020e04:	d072      	beq.n	8020eec <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 8020e06:	3301      	adds	r3, #1
 8020e08:	449e      	add	lr, r3
 8020e0a:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8020e0e:	f01e 0f01 	tst.w	lr, #1
 8020e12:	5cd0      	ldrb	r0, [r2, r3]
 8020e14:	bf0c      	ite	eq
 8020e16:	f000 000f 	andeq.w	r0, r0, #15
 8020e1a:	1100      	asrne	r0, r0, #4
 8020e1c:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8020e20:	b2c3      	uxtb	r3, r0
 8020e22:	b2ba      	uxth	r2, r7
 8020e24:	fa1f fc8c 	uxth.w	ip, ip
 8020e28:	fb02 f00c 	mul.w	r0, r2, ip
 8020e2c:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8020e30:	0112      	lsls	r2, r2, #4
 8020e32:	fa1f fc8c 	uxth.w	ip, ip
 8020e36:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 8020e3a:	1a12      	subs	r2, r2, r0
 8020e3c:	eba7 070c 	sub.w	r7, r7, ip
 8020e40:	b292      	uxth	r2, r2
 8020e42:	b2bf      	uxth	r7, r7
 8020e44:	4362      	muls	r2, r4
 8020e46:	fb06 2207 	mla	r2, r6, r7, r2
 8020e4a:	fb0c 2505 	mla	r5, ip, r5, r2
 8020e4e:	fb00 5303 	mla	r3, r0, r3, r5
 8020e52:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8020e56:	b3a3      	cbz	r3, 8020ec2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 8020e58:	4a25      	ldr	r2, [pc, #148]	; (8020ef0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 8020e5a:	880e      	ldrh	r6, [r1, #0]
 8020e5c:	6815      	ldr	r5, [r2, #0]
 8020e5e:	1234      	asrs	r4, r6, #8
 8020e60:	b29a      	uxth	r2, r3
 8020e62:	f3c5 4007 	ubfx	r0, r5, #16, #8
 8020e66:	43db      	mvns	r3, r3
 8020e68:	b2db      	uxtb	r3, r3
 8020e6a:	fb10 f002 	smulbb	r0, r0, r2
 8020e6e:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8020e72:	fb04 0403 	mla	r4, r4, r3, r0
 8020e76:	f3c5 2707 	ubfx	r7, r5, #8, #8
 8020e7a:	10f0      	asrs	r0, r6, #3
 8020e7c:	b2ed      	uxtb	r5, r5
 8020e7e:	00f6      	lsls	r6, r6, #3
 8020e80:	fb17 f702 	smulbb	r7, r7, r2
 8020e84:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8020e88:	fb15 f202 	smulbb	r2, r5, r2
 8020e8c:	b2f6      	uxtb	r6, r6
 8020e8e:	b2a4      	uxth	r4, r4
 8020e90:	fb00 7003 	mla	r0, r0, r3, r7
 8020e94:	fb06 2303 	mla	r3, r6, r3, r2
 8020e98:	b29a      	uxth	r2, r3
 8020e9a:	1c63      	adds	r3, r4, #1
 8020e9c:	b280      	uxth	r0, r0
 8020e9e:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8020ea2:	1c53      	adds	r3, r2, #1
 8020ea4:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8020ea8:	1c42      	adds	r2, r0, #1
 8020eaa:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8020eae:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8020eb2:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8020eb6:	0940      	lsrs	r0, r0, #5
 8020eb8:	4323      	orrs	r3, r4
 8020eba:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8020ebe:	4303      	orrs	r3, r0
 8020ec0:	800b      	strh	r3, [r1, #0]
 8020ec2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8020ec6:	2600      	movs	r6, #0
 8020ec8:	e764      	b.n	8020d94 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 8020eca:	2400      	movs	r4, #0
 8020ecc:	4626      	mov	r6, r4
 8020ece:	e778      	b.n	8020dc2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8020ed0:	2400      	movs	r4, #0
 8020ed2:	e776      	b.n	8020dc2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8020ed4:	463c      	mov	r4, r7
 8020ed6:	e774      	b.n	8020dc2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8020ed8:	2500      	movs	r5, #0
 8020eda:	e78e      	b.n	8020dfa <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 8020edc:	2300      	movs	r3, #0
 8020ede:	461d      	mov	r5, r3
 8020ee0:	e79f      	b.n	8020e22 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8020ee2:	4663      	mov	r3, ip
 8020ee4:	4665      	mov	r5, ip
 8020ee6:	e79c      	b.n	8020e22 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8020ee8:	2300      	movs	r3, #0
 8020eea:	e79a      	b.n	8020e22 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8020eec:	463b      	mov	r3, r7
 8020eee:	e798      	b.n	8020e22 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8020ef0:	2001795c 	.word	0x2001795c

08020ef4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020ef4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020ef8:	b093      	sub	sp, #76	; 0x4c
 8020efa:	461d      	mov	r5, r3
 8020efc:	920c      	str	r2, [sp, #48]	; 0x30
 8020efe:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8020f00:	9107      	str	r1, [sp, #28]
 8020f02:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8020f06:	9011      	str	r0, [sp, #68]	; 0x44
 8020f08:	6850      	ldr	r0, [r2, #4]
 8020f0a:	6812      	ldr	r2, [r2, #0]
 8020f0c:	fb00 1303 	mla	r3, r0, r3, r1
 8020f10:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8020f14:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020f16:	689b      	ldr	r3, [r3, #8]
 8020f18:	3301      	adds	r3, #1
 8020f1a:	f023 0301 	bic.w	r3, r3, #1
 8020f1e:	9306      	str	r3, [sp, #24]
 8020f20:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020f22:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8020f26:	681f      	ldr	r7, [r3, #0]
 8020f28:	9b07      	ldr	r3, [sp, #28]
 8020f2a:	2b00      	cmp	r3, #0
 8020f2c:	dc03      	bgt.n	8020f36 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8020f2e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8020f30:	2b00      	cmp	r3, #0
 8020f32:	f340 8267 	ble.w	8021404 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8020f36:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020f38:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020f3c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8020f40:	1e48      	subs	r0, r1, #1
 8020f42:	f102 3cff 	add.w	ip, r2, #4294967295
 8020f46:	2d00      	cmp	r5, #0
 8020f48:	f340 80b8 	ble.w	80210bc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8020f4c:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8020f50:	ea4f 4326 	mov.w	r3, r6, asr #16
 8020f54:	d406      	bmi.n	8020f64 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8020f56:	4586      	cmp	lr, r0
 8020f58:	da04      	bge.n	8020f64 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8020f5a:	2b00      	cmp	r3, #0
 8020f5c:	db02      	blt.n	8020f64 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8020f5e:	4563      	cmp	r3, ip
 8020f60:	f2c0 80ad 	blt.w	80210be <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 8020f64:	f11e 0e01 	adds.w	lr, lr, #1
 8020f68:	f100 80a0 	bmi.w	80210ac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8020f6c:	4571      	cmp	r1, lr
 8020f6e:	f2c0 809d 	blt.w	80210ac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8020f72:	3301      	adds	r3, #1
 8020f74:	f100 809a 	bmi.w	80210ac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8020f78:	429a      	cmp	r2, r3
 8020f7a:	f2c0 8097 	blt.w	80210ac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8020f7e:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 8020f82:	9509      	str	r5, [sp, #36]	; 0x24
 8020f84:	46c8      	mov	r8, r9
 8020f86:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020f88:	2b00      	cmp	r3, #0
 8020f8a:	f340 80b6 	ble.w	80210fa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 8020f8e:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8020f92:	9308      	str	r3, [sp, #32]
 8020f94:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020f96:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8020f9a:	1423      	asrs	r3, r4, #16
 8020f9c:	ea4f 4026 	mov.w	r0, r6, asr #16
 8020fa0:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8020fa4:	f100 813e 	bmi.w	8021224 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8020fa8:	f10c 3bff 	add.w	fp, ip, #4294967295
 8020fac:	455b      	cmp	r3, fp
 8020fae:	f280 8139 	bge.w	8021224 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8020fb2:	2800      	cmp	r0, #0
 8020fb4:	f2c0 8136 	blt.w	8021224 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8020fb8:	f10e 3bff 	add.w	fp, lr, #4294967295
 8020fbc:	4558      	cmp	r0, fp
 8020fbe:	f280 8131 	bge.w	8021224 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8020fc2:	9a06      	ldr	r2, [sp, #24]
 8020fc4:	fb00 3302 	mla	r3, r0, r2, r3
 8020fc8:	0858      	lsrs	r0, r3, #1
 8020fca:	07da      	lsls	r2, r3, #31
 8020fcc:	f817 c000 	ldrb.w	ip, [r7, r0]
 8020fd0:	9a08      	ldr	r2, [sp, #32]
 8020fd2:	bf54      	ite	pl
 8020fd4:	f00c 0c0f 	andpl.w	ip, ip, #15
 8020fd8:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8020fdc:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8020fe0:	fa5f fc8c 	uxtb.w	ip, ip
 8020fe4:	2a00      	cmp	r2, #0
 8020fe6:	f000 80cb 	beq.w	8021180 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8020fea:	1c58      	adds	r0, r3, #1
 8020fec:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8020ff0:	07c0      	lsls	r0, r0, #31
 8020ff2:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8020ff6:	bf54      	ite	pl
 8020ff8:	f00e 0e0f 	andpl.w	lr, lr, #15
 8020ffc:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8021000:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8021004:	fa5f fe8e 	uxtb.w	lr, lr
 8021008:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 802100c:	b1b9      	cbz	r1, 802103e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 802100e:	4453      	add	r3, sl
 8021010:	0858      	lsrs	r0, r3, #1
 8021012:	07da      	lsls	r2, r3, #31
 8021014:	5c38      	ldrb	r0, [r7, r0]
 8021016:	bf54      	ite	pl
 8021018:	f000 000f 	andpl.w	r0, r0, #15
 802101c:	1100      	asrmi	r0, r0, #4
 802101e:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8021022:	b2c0      	uxtb	r0, r0
 8021024:	900a      	str	r0, [sp, #40]	; 0x28
 8021026:	1c58      	adds	r0, r3, #1
 8021028:	0843      	lsrs	r3, r0, #1
 802102a:	07c2      	lsls	r2, r0, #31
 802102c:	5cfb      	ldrb	r3, [r7, r3]
 802102e:	bf54      	ite	pl
 8021030:	f003 030f 	andpl.w	r3, r3, #15
 8021034:	111b      	asrmi	r3, r3, #4
 8021036:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 802103a:	b2db      	uxtb	r3, r3
 802103c:	930e      	str	r3, [sp, #56]	; 0x38
 802103e:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8021042:	b289      	uxth	r1, r1
 8021044:	fb02 f301 	mul.w	r3, r2, r1
 8021048:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 802104c:	0112      	lsls	r2, r2, #4
 802104e:	b289      	uxth	r1, r1
 8021050:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 8021054:	1a40      	subs	r0, r0, r1
 8021056:	fa1f fe80 	uxth.w	lr, r0
 802105a:	1ad2      	subs	r2, r2, r3
 802105c:	980d      	ldr	r0, [sp, #52]	; 0x34
 802105e:	b292      	uxth	r2, r2
 8021060:	4342      	muls	r2, r0
 8021062:	fb0c 2c0e 	mla	ip, ip, lr, r2
 8021066:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8021068:	fb01 c102 	mla	r1, r1, r2, ip
 802106c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 802106e:	fb03 1302 	mla	r3, r3, r2, r1
 8021072:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8021076:	2bff      	cmp	r3, #255	; 0xff
 8021078:	f040 8093 	bne.w	80211a2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 802107c:	4bbe      	ldr	r3, [pc, #760]	; (8021378 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 802107e:	681a      	ldr	r2, [r3, #0]
 8021080:	4bbe      	ldr	r3, [pc, #760]	; (802137c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8021082:	0951      	lsrs	r1, r2, #5
 8021084:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8021088:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 802108c:	430b      	orrs	r3, r1
 802108e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8021092:	4313      	orrs	r3, r2
 8021094:	f8a8 3000 	strh.w	r3, [r8]
 8021098:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802109a:	441c      	add	r4, r3
 802109c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802109e:	441e      	add	r6, r3
 80210a0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80210a2:	3b01      	subs	r3, #1
 80210a4:	f108 0802 	add.w	r8, r8, #2
 80210a8:	9309      	str	r3, [sp, #36]	; 0x24
 80210aa:	e76c      	b.n	8020f86 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80210ac:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80210ae:	441c      	add	r4, r3
 80210b0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80210b2:	3d01      	subs	r5, #1
 80210b4:	441e      	add	r6, r3
 80210b6:	f109 0902 	add.w	r9, r9, #2
 80210ba:	e744      	b.n	8020f46 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80210bc:	d021      	beq.n	8021102 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 80210be:	981f      	ldr	r0, [sp, #124]	; 0x7c
 80210c0:	1e6b      	subs	r3, r5, #1
 80210c2:	fb00 4003 	mla	r0, r0, r3, r4
 80210c6:	1400      	asrs	r0, r0, #16
 80210c8:	f53f af59 	bmi.w	8020f7e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80210cc:	3901      	subs	r1, #1
 80210ce:	4288      	cmp	r0, r1
 80210d0:	f6bf af55 	bge.w	8020f7e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80210d4:	9920      	ldr	r1, [sp, #128]	; 0x80
 80210d6:	fb01 6303 	mla	r3, r1, r3, r6
 80210da:	141b      	asrs	r3, r3, #16
 80210dc:	f53f af4f 	bmi.w	8020f7e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80210e0:	3a01      	subs	r2, #1
 80210e2:	4293      	cmp	r3, r2
 80210e4:	f6bf af4b 	bge.w	8020f7e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80210e8:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80210ec:	9308      	str	r3, [sp, #32]
 80210ee:	46a8      	mov	r8, r5
 80210f0:	46ce      	mov	lr, r9
 80210f2:	f1b8 0f00 	cmp.w	r8, #0
 80210f6:	f300 80b5 	bgt.w	8021264 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 80210fa:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 80210fe:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8021102:	9b07      	ldr	r3, [sp, #28]
 8021104:	2b00      	cmp	r3, #0
 8021106:	f340 817d 	ble.w	8021404 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 802110a:	ee30 0a04 	vadd.f32	s0, s0, s8
 802110e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8021112:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8021116:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8021118:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802111c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8021120:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8021124:	eef0 6a62 	vmov.f32	s13, s5
 8021128:	ee61 7a27 	vmul.f32	s15, s2, s15
 802112c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021130:	ee77 2a62 	vsub.f32	s5, s14, s5
 8021134:	ee16 4a90 	vmov	r4, s13
 8021138:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802113c:	eef0 6a43 	vmov.f32	s13, s6
 8021140:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8021144:	ee12 2a90 	vmov	r2, s5
 8021148:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802114c:	fb92 f3f3 	sdiv	r3, r2, r3
 8021150:	ee13 2a10 	vmov	r2, s6
 8021154:	931f      	str	r3, [sp, #124]	; 0x7c
 8021156:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8021158:	fb92 f3f3 	sdiv	r3, r2, r3
 802115c:	9320      	str	r3, [sp, #128]	; 0x80
 802115e:	9b07      	ldr	r3, [sp, #28]
 8021160:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8021162:	3b01      	subs	r3, #1
 8021164:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021168:	9307      	str	r3, [sp, #28]
 802116a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802116c:	ee16 6a90 	vmov	r6, s13
 8021170:	bf14      	ite	ne
 8021172:	461d      	movne	r5, r3
 8021174:	4615      	moveq	r5, r2
 8021176:	eeb0 3a67 	vmov.f32	s6, s15
 802117a:	eef0 2a47 	vmov.f32	s5, s14
 802117e:	e6d3      	b.n	8020f28 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8021180:	2900      	cmp	r1, #0
 8021182:	f43f af5c 	beq.w	802103e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8021186:	eb0a 0003 	add.w	r0, sl, r3
 802118a:	0843      	lsrs	r3, r0, #1
 802118c:	07c0      	lsls	r0, r0, #31
 802118e:	5cfb      	ldrb	r3, [r7, r3]
 8021190:	bf54      	ite	pl
 8021192:	f003 030f 	andpl.w	r3, r3, #15
 8021196:	111b      	asrmi	r3, r3, #4
 8021198:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 802119c:	b2db      	uxtb	r3, r3
 802119e:	930a      	str	r3, [sp, #40]	; 0x28
 80211a0:	e74d      	b.n	802103e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 80211a2:	2b00      	cmp	r3, #0
 80211a4:	f43f af78 	beq.w	8021098 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80211a8:	4a73      	ldr	r2, [pc, #460]	; (8021378 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 80211aa:	f8b8 c000 	ldrh.w	ip, [r8]
 80211ae:	6810      	ldr	r0, [r2, #0]
 80211b0:	fa1f fe83 	uxth.w	lr, r3
 80211b4:	ea4f 212c 	mov.w	r1, ip, asr #8
 80211b8:	f3c0 4207 	ubfx	r2, r0, #16, #8
 80211bc:	43db      	mvns	r3, r3
 80211be:	b2db      	uxtb	r3, r3
 80211c0:	fb12 f20e 	smulbb	r2, r2, lr
 80211c4:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80211c8:	fb01 2103 	mla	r1, r1, r3, r2
 80211cc:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 80211d0:	ea4f 02ec 	mov.w	r2, ip, asr #3
 80211d4:	b2c0      	uxtb	r0, r0
 80211d6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80211da:	fb1b fb0e 	smulbb	fp, fp, lr
 80211de:	b289      	uxth	r1, r1
 80211e0:	fb10 fe0e 	smulbb	lr, r0, lr
 80211e4:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80211e8:	fa5f fc8c 	uxtb.w	ip, ip
 80211ec:	fb02 b203 	mla	r2, r2, r3, fp
 80211f0:	1c48      	adds	r0, r1, #1
 80211f2:	fb0c e303 	mla	r3, ip, r3, lr
 80211f6:	b292      	uxth	r2, r2
 80211f8:	b29b      	uxth	r3, r3
 80211fa:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 80211fe:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 8021202:	f102 0b01 	add.w	fp, r2, #1
 8021206:	1c59      	adds	r1, r3, #1
 8021208:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 802120c:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8021210:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8021214:	0952      	lsrs	r2, r2, #5
 8021216:	4301      	orrs	r1, r0
 8021218:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802121c:	4311      	orrs	r1, r2
 802121e:	f8a8 1000 	strh.w	r1, [r8]
 8021222:	e739      	b.n	8021098 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8021224:	f113 0b01 	adds.w	fp, r3, #1
 8021228:	f53f af36 	bmi.w	8021098 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802122c:	45dc      	cmp	ip, fp
 802122e:	f6ff af33 	blt.w	8021098 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8021232:	f110 0b01 	adds.w	fp, r0, #1
 8021236:	f53f af2f 	bmi.w	8021098 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802123a:	45de      	cmp	lr, fp
 802123c:	f6ff af2c 	blt.w	8021098 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8021240:	9a08      	ldr	r2, [sp, #32]
 8021242:	9302      	str	r3, [sp, #8]
 8021244:	fa0f f38e 	sxth.w	r3, lr
 8021248:	9301      	str	r3, [sp, #4]
 802124a:	fa0f f38c 	sxth.w	r3, ip
 802124e:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8021252:	9105      	str	r1, [sp, #20]
 8021254:	9300      	str	r3, [sp, #0]
 8021256:	463a      	mov	r2, r7
 8021258:	4653      	mov	r3, sl
 802125a:	4641      	mov	r1, r8
 802125c:	9811      	ldr	r0, [sp, #68]	; 0x44
 802125e:	f7ff fd73 	bl	8020d48 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 8021262:	e719      	b.n	8021098 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8021264:	9906      	ldr	r1, [sp, #24]
 8021266:	1422      	asrs	r2, r4, #16
 8021268:	1433      	asrs	r3, r6, #16
 802126a:	fb01 2303 	mla	r3, r1, r3, r2
 802126e:	085a      	lsrs	r2, r3, #1
 8021270:	07d9      	lsls	r1, r3, #31
 8021272:	5cba      	ldrb	r2, [r7, r2]
 8021274:	bf54      	ite	pl
 8021276:	f002 020f 	andpl.w	r2, r2, #15
 802127a:	1112      	asrmi	r2, r2, #4
 802127c:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8021280:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8021284:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8021288:	b2d2      	uxtb	r2, r2
 802128a:	2800      	cmp	r0, #0
 802128c:	d062      	beq.n	8021354 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 802128e:	f103 0a01 	add.w	sl, r3, #1
 8021292:	ea4f 015a 	mov.w	r1, sl, lsr #1
 8021296:	f01a 0f01 	tst.w	sl, #1
 802129a:	5c79      	ldrb	r1, [r7, r1]
 802129c:	bf0c      	ite	eq
 802129e:	f001 010f 	andeq.w	r1, r1, #15
 80212a2:	1109      	asrne	r1, r1, #4
 80212a4:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80212a8:	b2c9      	uxtb	r1, r1
 80212aa:	910f      	str	r1, [sp, #60]	; 0x3c
 80212ac:	f1bc 0f00 	cmp.w	ip, #0
 80212b0:	d019      	beq.n	80212e6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 80212b2:	9908      	ldr	r1, [sp, #32]
 80212b4:	440b      	add	r3, r1
 80212b6:	0859      	lsrs	r1, r3, #1
 80212b8:	f013 0f01 	tst.w	r3, #1
 80212bc:	5c79      	ldrb	r1, [r7, r1]
 80212be:	bf0c      	ite	eq
 80212c0:	f001 010f 	andeq.w	r1, r1, #15
 80212c4:	1109      	asrne	r1, r1, #4
 80212c6:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80212ca:	b2c9      	uxtb	r1, r1
 80212cc:	3301      	adds	r3, #1
 80212ce:	910b      	str	r1, [sp, #44]	; 0x2c
 80212d0:	0859      	lsrs	r1, r3, #1
 80212d2:	07db      	lsls	r3, r3, #31
 80212d4:	5c79      	ldrb	r1, [r7, r1]
 80212d6:	bf54      	ite	pl
 80212d8:	f001 010f 	andpl.w	r1, r1, #15
 80212dc:	1109      	asrmi	r1, r1, #4
 80212de:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80212e2:	b2c9      	uxtb	r1, r1
 80212e4:	9110      	str	r1, [sp, #64]	; 0x40
 80212e6:	b280      	uxth	r0, r0
 80212e8:	fa1f fc8c 	uxth.w	ip, ip
 80212ec:	fb00 f30c 	mul.w	r3, r0, ip
 80212f0:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 80212f4:	0100      	lsls	r0, r0, #4
 80212f6:	fa1f fc8c 	uxth.w	ip, ip
 80212fa:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 80212fe:	eba1 010c 	sub.w	r1, r1, ip
 8021302:	fa1f fa81 	uxth.w	sl, r1
 8021306:	1ac0      	subs	r0, r0, r3
 8021308:	990f      	ldr	r1, [sp, #60]	; 0x3c
 802130a:	b280      	uxth	r0, r0
 802130c:	4348      	muls	r0, r1
 802130e:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8021310:	fb02 020a 	mla	r2, r2, sl, r0
 8021314:	fb0c 2c01 	mla	ip, ip, r1, r2
 8021318:	9a10      	ldr	r2, [sp, #64]	; 0x40
 802131a:	fb03 c302 	mla	r3, r3, r2, ip
 802131e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8021322:	2bff      	cmp	r3, #255	; 0xff
 8021324:	d12c      	bne.n	8021380 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 8021326:	4b14      	ldr	r3, [pc, #80]	; (8021378 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8021328:	681a      	ldr	r2, [r3, #0]
 802132a:	4b14      	ldr	r3, [pc, #80]	; (802137c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 802132c:	0951      	lsrs	r1, r2, #5
 802132e:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8021332:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8021336:	430b      	orrs	r3, r1
 8021338:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802133c:	4313      	orrs	r3, r2
 802133e:	f8ae 3000 	strh.w	r3, [lr]
 8021342:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8021344:	441c      	add	r4, r3
 8021346:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021348:	f10e 0e02 	add.w	lr, lr, #2
 802134c:	441e      	add	r6, r3
 802134e:	f108 38ff 	add.w	r8, r8, #4294967295
 8021352:	e6ce      	b.n	80210f2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8021354:	f1bc 0f00 	cmp.w	ip, #0
 8021358:	d0c5      	beq.n	80212e6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 802135a:	9908      	ldr	r1, [sp, #32]
 802135c:	440b      	add	r3, r1
 802135e:	0859      	lsrs	r1, r3, #1
 8021360:	07db      	lsls	r3, r3, #31
 8021362:	5c79      	ldrb	r1, [r7, r1]
 8021364:	bf54      	ite	pl
 8021366:	f001 010f 	andpl.w	r1, r1, #15
 802136a:	1109      	asrmi	r1, r1, #4
 802136c:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8021370:	b2c9      	uxtb	r1, r1
 8021372:	910b      	str	r1, [sp, #44]	; 0x2c
 8021374:	e7b7      	b.n	80212e6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8021376:	bf00      	nop
 8021378:	2001795c 	.word	0x2001795c
 802137c:	fffff800 	.word	0xfffff800
 8021380:	2b00      	cmp	r3, #0
 8021382:	d0de      	beq.n	8021342 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8021384:	4a21      	ldr	r2, [pc, #132]	; (802140c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 8021386:	f8be c000 	ldrh.w	ip, [lr]
 802138a:	6810      	ldr	r0, [r2, #0]
 802138c:	fa1f fa83 	uxth.w	sl, r3
 8021390:	ea4f 212c 	mov.w	r1, ip, asr #8
 8021394:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8021398:	43db      	mvns	r3, r3
 802139a:	b2db      	uxtb	r3, r3
 802139c:	fb12 f20a 	smulbb	r2, r2, sl
 80213a0:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80213a4:	fb01 2103 	mla	r1, r1, r3, r2
 80213a8:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 80213ac:	ea4f 02ec 	mov.w	r2, ip, asr #3
 80213b0:	b2c0      	uxtb	r0, r0
 80213b2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80213b6:	fa5f fc8c 	uxtb.w	ip, ip
 80213ba:	fb10 f00a 	smulbb	r0, r0, sl
 80213be:	fb0c 0003 	mla	r0, ip, r3, r0
 80213c2:	b289      	uxth	r1, r1
 80213c4:	fb1b fb0a 	smulbb	fp, fp, sl
 80213c8:	b280      	uxth	r0, r0
 80213ca:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80213ce:	fb02 b203 	mla	r2, r2, r3, fp
 80213d2:	1c4b      	adds	r3, r1, #1
 80213d4:	f100 0b01 	add.w	fp, r0, #1
 80213d8:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80213dc:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 80213e0:	b292      	uxth	r2, r2
 80213e2:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 80213e6:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 80213ea:	ea4b 0101 	orr.w	r1, fp, r1
 80213ee:	f102 0b01 	add.w	fp, r2, #1
 80213f2:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 80213f6:	0952      	lsrs	r2, r2, #5
 80213f8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80213fc:	4311      	orrs	r1, r2
 80213fe:	f8ae 1000 	strh.w	r1, [lr]
 8021402:	e79e      	b.n	8021342 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8021404:	b013      	add	sp, #76	; 0x4c
 8021406:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802140a:	bf00      	nop
 802140c:	2001795c 	.word	0x2001795c

08021410 <CRC_Lock>:
 8021410:	b530      	push	{r4, r5, lr}
 8021412:	4a20      	ldr	r2, [pc, #128]	; (8021494 <CRC_Lock+0x84>)
 8021414:	6813      	ldr	r3, [r2, #0]
 8021416:	f023 0301 	bic.w	r3, r3, #1
 802141a:	6013      	str	r3, [r2, #0]
 802141c:	4b1e      	ldr	r3, [pc, #120]	; (8021498 <CRC_Lock+0x88>)
 802141e:	681a      	ldr	r2, [r3, #0]
 8021420:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 8021424:	4022      	ands	r2, r4
 8021426:	f24c 2540 	movw	r5, #49728	; 0xc240
 802142a:	42aa      	cmp	r2, r5
 802142c:	d005      	beq.n	802143a <CRC_Lock+0x2a>
 802142e:	681b      	ldr	r3, [r3, #0]
 8021430:	f24c 2270 	movw	r2, #49776	; 0xc270
 8021434:	4023      	ands	r3, r4
 8021436:	4293      	cmp	r3, r2
 8021438:	d124      	bne.n	8021484 <CRC_Lock+0x74>
 802143a:	4b18      	ldr	r3, [pc, #96]	; (802149c <CRC_Lock+0x8c>)
 802143c:	681b      	ldr	r3, [r3, #0]
 802143e:	bb0b      	cbnz	r3, 8021484 <CRC_Lock+0x74>
 8021440:	4b17      	ldr	r3, [pc, #92]	; (80214a0 <CRC_Lock+0x90>)
 8021442:	681a      	ldr	r2, [r3, #0]
 8021444:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8021448:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 802144c:	d00d      	beq.n	802146a <CRC_Lock+0x5a>
 802144e:	681a      	ldr	r2, [r3, #0]
 8021450:	f240 4483 	movw	r4, #1155	; 0x483
 8021454:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8021458:	42a2      	cmp	r2, r4
 802145a:	d006      	beq.n	802146a <CRC_Lock+0x5a>
 802145c:	681b      	ldr	r3, [r3, #0]
 802145e:	f240 4285 	movw	r2, #1157	; 0x485
 8021462:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8021466:	4293      	cmp	r3, r2
 8021468:	d10c      	bne.n	8021484 <CRC_Lock+0x74>
 802146a:	4b0e      	ldr	r3, [pc, #56]	; (80214a4 <CRC_Lock+0x94>)
 802146c:	2201      	movs	r2, #1
 802146e:	601a      	str	r2, [r3, #0]
 8021470:	681a      	ldr	r2, [r3, #0]
 8021472:	2a00      	cmp	r2, #0
 8021474:	d1fc      	bne.n	8021470 <CRC_Lock+0x60>
 8021476:	4b0c      	ldr	r3, [pc, #48]	; (80214a8 <CRC_Lock+0x98>)
 8021478:	6018      	str	r0, [r3, #0]
 802147a:	6818      	ldr	r0, [r3, #0]
 802147c:	1a43      	subs	r3, r0, r1
 802147e:	4258      	negs	r0, r3
 8021480:	4158      	adcs	r0, r3
 8021482:	bd30      	pop	{r4, r5, pc}
 8021484:	4b09      	ldr	r3, [pc, #36]	; (80214ac <CRC_Lock+0x9c>)
 8021486:	2201      	movs	r2, #1
 8021488:	601a      	str	r2, [r3, #0]
 802148a:	681a      	ldr	r2, [r3, #0]
 802148c:	2a00      	cmp	r2, #0
 802148e:	d1fc      	bne.n	802148a <CRC_Lock+0x7a>
 8021490:	4b07      	ldr	r3, [pc, #28]	; (80214b0 <CRC_Lock+0xa0>)
 8021492:	e7f1      	b.n	8021478 <CRC_Lock+0x68>
 8021494:	e0002000 	.word	0xe0002000
 8021498:	e000ed00 	.word	0xe000ed00
 802149c:	e0042000 	.word	0xe0042000
 80214a0:	5c001000 	.word	0x5c001000
 80214a4:	58024c08 	.word	0x58024c08
 80214a8:	58024c00 	.word	0x58024c00
 80214ac:	40023008 	.word	0x40023008
 80214b0:	40023000 	.word	0x40023000

080214b4 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 80214b4:	6101      	str	r1, [r0, #16]
 80214b6:	4770      	bx	lr

080214b8 <_ZN8touchgfx8Gestures4tickEv>:
 80214b8:	7b83      	ldrb	r3, [r0, #14]
 80214ba:	b14b      	cbz	r3, 80214d0 <_ZN8touchgfx8Gestures4tickEv+0x18>
 80214bc:	8903      	ldrh	r3, [r0, #8]
 80214be:	3301      	adds	r3, #1
 80214c0:	b29b      	uxth	r3, r3
 80214c2:	2b07      	cmp	r3, #7
 80214c4:	8103      	strh	r3, [r0, #8]
 80214c6:	bf81      	itttt	hi
 80214c8:	2300      	movhi	r3, #0
 80214ca:	8143      	strhhi	r3, [r0, #10]
 80214cc:	8183      	strhhi	r3, [r0, #12]
 80214ce:	7383      	strbhi	r3, [r0, #14]
 80214d0:	4770      	bx	lr
	...

080214d4 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 80214d4:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80214d8:	4698      	mov	r8, r3
 80214da:	8883      	ldrh	r3, [r0, #4]
 80214dc:	f8ad 3006 	strh.w	r3, [sp, #6]
 80214e0:	eba8 0303 	sub.w	r3, r8, r3
 80214e4:	b21b      	sxth	r3, r3
 80214e6:	4604      	mov	r4, r0
 80214e8:	2b00      	cmp	r3, #0
 80214ea:	4617      	mov	r7, r2
 80214ec:	4a18      	ldr	r2, [pc, #96]	; (8021550 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 80214ee:	9200      	str	r2, [sp, #0]
 80214f0:	bfb8      	it	lt
 80214f2:	425b      	neglt	r3, r3
 80214f4:	8aa2      	ldrh	r2, [r4, #20]
 80214f6:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 80214fa:	f8ad 800a 	strh.w	r8, [sp, #10]
 80214fe:	b21b      	sxth	r3, r3
 8021500:	460e      	mov	r6, r1
 8021502:	4293      	cmp	r3, r2
 8021504:	88c1      	ldrh	r1, [r0, #6]
 8021506:	f8ad 1008 	strh.w	r1, [sp, #8]
 802150a:	f04f 0000 	mov.w	r0, #0
 802150e:	f88d 0004 	strb.w	r0, [sp, #4]
 8021512:	f8ad 500c 	strh.w	r5, [sp, #12]
 8021516:	dc07      	bgt.n	8021528 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 8021518:	1a69      	subs	r1, r5, r1
 802151a:	b209      	sxth	r1, r1
 802151c:	2900      	cmp	r1, #0
 802151e:	bfb8      	it	lt
 8021520:	4249      	neglt	r1, r1
 8021522:	b209      	sxth	r1, r1
 8021524:	428a      	cmp	r2, r1
 8021526:	da10      	bge.n	802154a <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 8021528:	6920      	ldr	r0, [r4, #16]
 802152a:	6803      	ldr	r3, [r0, #0]
 802152c:	4669      	mov	r1, sp
 802152e:	685b      	ldr	r3, [r3, #4]
 8021530:	4798      	blx	r3
 8021532:	eba8 0606 	sub.w	r6, r8, r6
 8021536:	2300      	movs	r3, #0
 8021538:	1bef      	subs	r7, r5, r7
 802153a:	2001      	movs	r0, #1
 802153c:	8123      	strh	r3, [r4, #8]
 802153e:	8166      	strh	r6, [r4, #10]
 8021540:	81a7      	strh	r7, [r4, #12]
 8021542:	f8a4 8004 	strh.w	r8, [r4, #4]
 8021546:	80e5      	strh	r5, [r4, #6]
 8021548:	73a0      	strb	r0, [r4, #14]
 802154a:	b004      	add	sp, #16
 802154c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8021550:	08025628 	.word	0x08025628

08021554 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 8021554:	b5f0      	push	{r4, r5, r6, r7, lr}
 8021556:	461e      	mov	r6, r3
 8021558:	1e4b      	subs	r3, r1, #1
 802155a:	2b01      	cmp	r3, #1
 802155c:	b085      	sub	sp, #20
 802155e:	4604      	mov	r4, r0
 8021560:	460d      	mov	r5, r1
 8021562:	4617      	mov	r7, r2
 8021564:	d84b      	bhi.n	80215fe <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 8021566:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 802156a:	1cd3      	adds	r3, r2, #3
 802156c:	b29b      	uxth	r3, r3
 802156e:	2b06      	cmp	r3, #6
 8021570:	d916      	bls.n	80215a0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 8021572:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 8021614 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8021576:	f8cd c004 	str.w	ip, [sp, #4]
 802157a:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 802157e:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8021582:	6900      	ldr	r0, [r0, #16]
 8021584:	f8ad 100c 	strh.w	r1, [sp, #12]
 8021588:	f04f 0c00 	mov.w	ip, #0
 802158c:	f88d c008 	strb.w	ip, [sp, #8]
 8021590:	f8ad 200a 	strh.w	r2, [sp, #10]
 8021594:	f8ad 300e 	strh.w	r3, [sp, #14]
 8021598:	6803      	ldr	r3, [r0, #0]
 802159a:	a901      	add	r1, sp, #4
 802159c:	689b      	ldr	r3, [r3, #8]
 802159e:	4798      	blx	r3
 80215a0:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80215a4:	1cd3      	adds	r3, r2, #3
 80215a6:	b29b      	uxth	r3, r3
 80215a8:	2b06      	cmp	r3, #6
 80215aa:	d916      	bls.n	80215da <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 80215ac:	f8df c064 	ldr.w	ip, [pc, #100]	; 8021614 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 80215b0:	f8cd c004 	str.w	ip, [sp, #4]
 80215b4:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80215b8:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80215bc:	6920      	ldr	r0, [r4, #16]
 80215be:	f8ad 100c 	strh.w	r1, [sp, #12]
 80215c2:	f04f 0c01 	mov.w	ip, #1
 80215c6:	f88d c008 	strb.w	ip, [sp, #8]
 80215ca:	f8ad 200a 	strh.w	r2, [sp, #10]
 80215ce:	f8ad 300e 	strh.w	r3, [sp, #14]
 80215d2:	6803      	ldr	r3, [r0, #0]
 80215d4:	a901      	add	r1, sp, #4
 80215d6:	689b      	ldr	r3, [r3, #8]
 80215d8:	4798      	blx	r3
 80215da:	4b0d      	ldr	r3, [pc, #52]	; (8021610 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 80215dc:	9301      	str	r3, [sp, #4]
 80215de:	6920      	ldr	r0, [r4, #16]
 80215e0:	f88d 5008 	strb.w	r5, [sp, #8]
 80215e4:	2300      	movs	r3, #0
 80215e6:	f8ad 700a 	strh.w	r7, [sp, #10]
 80215ea:	f8ad 600c 	strh.w	r6, [sp, #12]
 80215ee:	f8ad 300e 	strh.w	r3, [sp, #14]
 80215f2:	6803      	ldr	r3, [r0, #0]
 80215f4:	a901      	add	r1, sp, #4
 80215f6:	681b      	ldr	r3, [r3, #0]
 80215f8:	4798      	blx	r3
 80215fa:	b005      	add	sp, #20
 80215fc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80215fe:	2900      	cmp	r1, #0
 8021600:	d1eb      	bne.n	80215da <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8021602:	80a2      	strh	r2, [r4, #4]
 8021604:	80c6      	strh	r6, [r0, #6]
 8021606:	60a1      	str	r1, [r4, #8]
 8021608:	81a1      	strh	r1, [r4, #12]
 802160a:	73a1      	strb	r1, [r4, #14]
 802160c:	e7e5      	b.n	80215da <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 802160e:	bf00      	nop
 8021610:	08025614 	.word	0x08025614
 8021614:	0802563c 	.word	0x0802563c

08021618 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>:
 8021618:	10c9      	asrs	r1, r1, #3
 802161a:	2900      	cmp	r1, #0
 802161c:	bfb8      	it	lt
 802161e:	4249      	neglt	r1, r1
 8021620:	2801      	cmp	r0, #1
 8021622:	d108      	bne.n	8021636 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 8021624:	f3c1 0008 	ubfx	r0, r1, #0, #9
 8021628:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 802162c:	4601      	mov	r1, r0
 802162e:	dd02      	ble.n	8021636 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 8021630:	f5c0 7000 	rsb	r0, r0, #512	; 0x200
 8021634:	4770      	bx	lr
 8021636:	29ff      	cmp	r1, #255	; 0xff
 8021638:	bfa8      	it	ge
 802163a:	21ff      	movge	r1, #255	; 0xff
 802163c:	4608      	mov	r0, r1
 802163e:	4770      	bx	lr

08021640 <_ZN8touchgfx10Rasterizer6lineToEii>:
 8021640:	b410      	push	{r4}
 8021642:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 8021646:	429c      	cmp	r4, r3
 8021648:	d803      	bhi.n	8021652 <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
 802164a:	f85d 4b04 	ldr.w	r4, [sp], #4
 802164e:	f7ef b97d 	b.w	801094c <_ZN8touchgfx7Outline6lineToEii>
 8021652:	f85d 4b04 	ldr.w	r4, [sp], #4
 8021656:	4770      	bx	lr

08021658 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
 8021658:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802165c:	b08b      	sub	sp, #44	; 0x2c
 802165e:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8021662:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8021666:	9308      	str	r3, [sp, #32]
 8021668:	4606      	mov	r6, r0
 802166a:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 802166e:	9309      	str	r3, [sp, #36]	; 0x24
 8021670:	468a      	mov	sl, r1
 8021672:	f7ef fad8 	bl	8010c26 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
 8021676:	68b5      	ldr	r5, [r6, #8]
 8021678:	4604      	mov	r4, r0
 802167a:	2d00      	cmp	r5, #0
 802167c:	d044      	beq.n	8021708 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 802167e:	6873      	ldr	r3, [r6, #4]
 8021680:	42ab      	cmp	r3, r5
 8021682:	d33d      	bcc.n	8021700 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
 8021684:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8021688:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	; 0x34
 802168c:	eb02 0b03 	add.w	fp, r2, r3
 8021690:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 8021694:	fb02 1203 	mla	r2, r2, r3, r1
 8021698:	9205      	str	r2, [sp, #20]
 802169a:	1e6a      	subs	r2, r5, #1
 802169c:	9204      	str	r2, [sp, #16]
 802169e:	f04f 0800 	mov.w	r8, #0
 80216a2:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
 80216a6:	f9b4 7000 	ldrsh.w	r7, [r4]
 80216aa:	454b      	cmp	r3, r9
 80216ac:	463a      	mov	r2, r7
 80216ae:	d008      	beq.n	80216c2 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
 80216b0:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	; 0x34
 80216b4:	eb03 0b09 	add.w	fp, r3, r9
 80216b8:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
 80216bc:	fb03 1309 	mla	r3, r3, r9, r1
 80216c0:	9305      	str	r3, [sp, #20]
 80216c2:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 80216c6:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 80216ca:	4498      	add	r8, r3
 80216cc:	9b04      	ldr	r3, [sp, #16]
 80216ce:	3b01      	subs	r3, #1
 80216d0:	9304      	str	r3, [sp, #16]
 80216d2:	9b04      	ldr	r3, [sp, #16]
 80216d4:	3301      	adds	r3, #1
 80216d6:	d015      	beq.n	8021704 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
 80216d8:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
 80216dc:	42bb      	cmp	r3, r7
 80216de:	d117      	bne.n	8021710 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
 80216e0:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 80216e4:	9b04      	ldr	r3, [sp, #16]
 80216e6:	4548      	cmp	r0, r9
 80216e8:	f103 33ff 	add.w	r3, r3, #4294967295
 80216ec:	d17f      	bne.n	80217ee <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x196>
 80216ee:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 80216f2:	4401      	add	r1, r0
 80216f4:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80216f8:	4480      	add	r8, r0
 80216fa:	e7e9      	b.n	80216d0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
 80216fc:	461f      	mov	r7, r3
 80216fe:	e044      	b.n	802178a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x132>
 8021700:	2000      	movs	r0, #0
 8021702:	e002      	b.n	802170a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
 8021704:	2900      	cmp	r1, #0
 8021706:	d16f      	bne.n	80217e8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x190>
 8021708:	2001      	movs	r0, #1
 802170a:	b00b      	add	sp, #44	; 0x2c
 802170c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021710:	2900      	cmp	r1, #0
 8021712:	d030      	beq.n	8021776 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11e>
 8021714:	2f00      	cmp	r7, #0
 8021716:	db29      	blt.n	802176c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8021718:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 802171c:	42bb      	cmp	r3, r7
 802171e:	dd25      	ble.n	802176c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8021720:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
 8021724:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 8021728:	f7ff ff76 	bl	8021618 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 802172c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802172e:	fb10 f003 	smulbb	r0, r0, r3
 8021732:	b280      	uxth	r0, r0
 8021734:	1c41      	adds	r1, r0, #1
 8021736:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 802173a:	1209      	asrs	r1, r1, #8
 802173c:	f011 0fff 	tst.w	r1, #255	; 0xff
 8021740:	d014      	beq.n	802176c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8021742:	9808      	ldr	r0, [sp, #32]
 8021744:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 8021746:	b2c9      	uxtb	r1, r1
 8021748:	b2ba      	uxth	r2, r7
 802174a:	9102      	str	r1, [sp, #8]
 802174c:	2101      	movs	r1, #1
 802174e:	4413      	add	r3, r2
 8021750:	9101      	str	r1, [sp, #4]
 8021752:	4402      	add	r2, r0
 8021754:	fa0f f18b 	sxth.w	r1, fp
 8021758:	f8da 0000 	ldr.w	r0, [sl]
 802175c:	9100      	str	r1, [sp, #0]
 802175e:	6941      	ldr	r1, [r0, #20]
 8021760:	b21b      	sxth	r3, r3
 8021762:	460d      	mov	r5, r1
 8021764:	b212      	sxth	r2, r2
 8021766:	9905      	ldr	r1, [sp, #20]
 8021768:	4650      	mov	r0, sl
 802176a:	47a8      	blx	r5
 802176c:	9b04      	ldr	r3, [sp, #16]
 802176e:	3301      	adds	r3, #1
 8021770:	f107 0201 	add.w	r2, r7, #1
 8021774:	d0c8      	beq.n	8021708 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8021776:	f9b4 7000 	ldrsh.w	r7, [r4]
 802177a:	1abb      	subs	r3, r7, r2
 802177c:	2b00      	cmp	r3, #0
 802177e:	dd31      	ble.n	80217e4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8021780:	2a00      	cmp	r2, #0
 8021782:	dabb      	bge.n	80216fc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
 8021784:	2f00      	cmp	r7, #0
 8021786:	dd2d      	ble.n	80217e4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8021788:	2200      	movs	r2, #0
 802178a:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 802178e:	19d1      	adds	r1, r2, r7
 8021790:	4299      	cmp	r1, r3
 8021792:	db02      	blt.n	802179a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x142>
 8021794:	1a9f      	subs	r7, r3, r2
 8021796:	2f00      	cmp	r7, #0
 8021798:	dd24      	ble.n	80217e4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 802179a:	ea4f 1188 	mov.w	r1, r8, lsl #6
 802179e:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 80217a2:	f7ff ff39 	bl	8021618 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 80217a6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80217a8:	fb10 f003 	smulbb	r0, r0, r3
 80217ac:	b280      	uxth	r0, r0
 80217ae:	1c41      	adds	r1, r0, #1
 80217b0:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 80217b4:	1209      	asrs	r1, r1, #8
 80217b6:	f011 0fff 	tst.w	r1, #255	; 0xff
 80217ba:	d013      	beq.n	80217e4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 80217bc:	9808      	ldr	r0, [sp, #32]
 80217be:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 80217c0:	b292      	uxth	r2, r2
 80217c2:	b2c9      	uxtb	r1, r1
 80217c4:	4413      	add	r3, r2
 80217c6:	9102      	str	r1, [sp, #8]
 80217c8:	4402      	add	r2, r0
 80217ca:	b23f      	sxth	r7, r7
 80217cc:	f8da 0000 	ldr.w	r0, [sl]
 80217d0:	9701      	str	r7, [sp, #4]
 80217d2:	fa0f f18b 	sxth.w	r1, fp
 80217d6:	9100      	str	r1, [sp, #0]
 80217d8:	6947      	ldr	r7, [r0, #20]
 80217da:	9905      	ldr	r1, [sp, #20]
 80217dc:	b21b      	sxth	r3, r3
 80217de:	b212      	sxth	r2, r2
 80217e0:	4650      	mov	r0, sl
 80217e2:	47b8      	blx	r7
 80217e4:	464b      	mov	r3, r9
 80217e6:	e75c      	b.n	80216a2 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
 80217e8:	2f00      	cmp	r7, #0
 80217ea:	da95      	bge.n	8021718 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xc0>
 80217ec:	e78c      	b.n	8021708 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 80217ee:	2900      	cmp	r1, #0
 80217f0:	d0f8      	beq.n	80217e4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 80217f2:	e78f      	b.n	8021714 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbc>

080217f4 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>:
 80217f4:	4b4c      	ldr	r3, [pc, #304]	; (8021928 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x134>)
 80217f6:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 80217fa:	2500      	movs	r5, #0
 80217fc:	f100 0620 	add.w	r6, r0, #32
 8021800:	4604      	mov	r4, r0
 8021802:	e9c0 3100 	strd	r3, r1, [r0]
 8021806:	e9c0 5502 	strd	r5, r5, [r0, #8]
 802180a:	e9c0 5504 	strd	r5, r5, [r0, #16]
 802180e:	e9c0 5506 	strd	r5, r5, [r0, #24]
 8021812:	f100 0718 	add.w	r7, r0, #24
 8021816:	4630      	mov	r0, r6
 8021818:	4690      	mov	r8, r2
 802181a:	f7ee fbcf 	bl	800ffbc <_ZN8touchgfx7OutlineC1Ev>
 802181e:	e9c4 5517 	strd	r5, r5, [r4, #92]	; 0x5c
 8021822:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 8021826:	2301      	movs	r3, #1
 8021828:	f884 5050 	strb.w	r5, [r4, #80]	; 0x50
 802182c:	f8a4 5052 	strh.w	r5, [r4, #82]	; 0x52
 8021830:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
 8021834:	f8a4 5056 	strh.w	r5, [r4, #86]	; 0x56
 8021838:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 802183c:	f884 5059 	strb.w	r5, [r4, #89]	; 0x59
 8021840:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 8021844:	f9b8 2000 	ldrsh.w	r2, [r8]
 8021848:	f8b8 0004 	ldrh.w	r0, [r8, #4]
 802184c:	f8d4 c004 	ldr.w	ip, [r4, #4]
 8021850:	9500      	str	r5, [sp, #0]
 8021852:	4410      	add	r0, r2
 8021854:	b280      	uxth	r0, r0
 8021856:	fa0f fa80 	sxth.w	sl, r0
 802185a:	45aa      	cmp	sl, r5
 802185c:	f9bc 9008 	ldrsh.w	r9, [ip, #8]
 8021860:	f9bc e00a 	ldrsh.w	lr, [ip, #10]
 8021864:	dd5c      	ble.n	8021920 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12c>
 8021866:	4591      	cmp	r9, r2
 8021868:	dd5a      	ble.n	8021920 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12c>
 802186a:	f9b8 1002 	ldrsh.w	r1, [r8, #2]
 802186e:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8021872:	440b      	add	r3, r1
 8021874:	b29b      	uxth	r3, r3
 8021876:	b21d      	sxth	r5, r3
 8021878:	2d00      	cmp	r5, #0
 802187a:	dd51      	ble.n	8021920 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12c>
 802187c:	458e      	cmp	lr, r1
 802187e:	dd4f      	ble.n	8021920 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12c>
 8021880:	45d1      	cmp	r9, sl
 8021882:	bfb8      	it	lt
 8021884:	fa1f f089 	uxthlt.w	r0, r9
 8021888:	45ae      	cmp	lr, r5
 802188a:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 802188e:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
 8021892:	bfb8      	it	lt
 8021894:	fa1f f38e 	uxthlt.w	r3, lr
 8021898:	1a80      	subs	r0, r0, r2
 802189a:	1a5b      	subs	r3, r3, r1
 802189c:	f8ad 0004 	strh.w	r0, [sp, #4]
 80218a0:	f8ad 3006 	strh.w	r3, [sp, #6]
 80218a4:	f8ad 2000 	strh.w	r2, [sp]
 80218a8:	f8ad 1002 	strh.w	r1, [sp, #2]
 80218ac:	466d      	mov	r5, sp
 80218ae:	e895 0003 	ldmia.w	r5, {r0, r1}
 80218b2:	e887 0003 	stmia.w	r7, {r0, r1}
 80218b6:	f8dc 3000 	ldr.w	r3, [ip]
 80218ba:	4660      	mov	r0, ip
 80218bc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80218be:	4639      	mov	r1, r7
 80218c0:	4798      	blx	r3
 80218c2:	6861      	ldr	r1, [r4, #4]
 80218c4:	4628      	mov	r0, r5
 80218c6:	3104      	adds	r1, #4
 80218c8:	f7f0 fd0c 	bl	80122e4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80218cc:	4638      	mov	r0, r7
 80218ce:	f7f0 fce1 	bl	8012294 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80218d2:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 80218d6:	f8bd 2000 	ldrh.w	r2, [sp]
 80218da:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 80218de:	f8a4 3054 	strh.w	r3, [r4, #84]	; 0x54
 80218e2:	4630      	mov	r0, r6
 80218e4:	f7ee fb4e 	bl	800ff84 <_ZN8touchgfx7Outline5resetEv>
 80218e8:	f9bd 3000 	ldrsh.w	r3, [sp]
 80218ec:	f9b4 201e 	ldrsh.w	r2, [r4, #30]
 80218f0:	015b      	lsls	r3, r3, #5
 80218f2:	60a3      	str	r3, [r4, #8]
 80218f4:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 80218f8:	015b      	lsls	r3, r3, #5
 80218fa:	60e3      	str	r3, [r4, #12]
 80218fc:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8021900:	015b      	lsls	r3, r3, #5
 8021902:	6123      	str	r3, [r4, #16]
 8021904:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8021908:	015b      	lsls	r3, r3, #5
 802190a:	6163      	str	r3, [r4, #20]
 802190c:	f9b4 301c 	ldrsh.w	r3, [r4, #28]
 8021910:	f8a4 3056 	strh.w	r3, [r4, #86]	; 0x56
 8021914:	4620      	mov	r0, r4
 8021916:	e9c4 3212 	strd	r3, r2, [r4, #72]	; 0x48
 802191a:	b002      	add	sp, #8
 802191c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8021920:	2300      	movs	r3, #0
 8021922:	9301      	str	r3, [sp, #4]
 8021924:	e7c2      	b.n	80218ac <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0xb8>
 8021926:	bf00      	nop
 8021928:	08024fe4 	.word	0x08024fe4

0802192c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 802192c:	b510      	push	{r4, lr}
 802192e:	4b07      	ldr	r3, [pc, #28]	; (802194c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x20>)
 8021930:	781b      	ldrb	r3, [r3, #0]
 8021932:	2b01      	cmp	r3, #1
 8021934:	d108      	bne.n	8021948 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>
 8021936:	6843      	ldr	r3, [r0, #4]
 8021938:	6814      	ldr	r4, [r2, #0]
 802193a:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 802193e:	680b      	ldr	r3, [r1, #0]
 8021940:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 8021944:	6013      	str	r3, [r2, #0]
 8021946:	600c      	str	r4, [r1, #0]
 8021948:	bd10      	pop	{r4, pc}
 802194a:	bf00      	nop
 802194c:	20017944 	.word	0x20017944

08021950 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 8021950:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8021952:	ab02      	add	r3, sp, #8
 8021954:	4604      	mov	r4, r0
 8021956:	f843 2d08 	str.w	r2, [r3, #-8]!
 802195a:	9101      	str	r1, [sp, #4]
 802195c:	461a      	mov	r2, r3
 802195e:	a901      	add	r1, sp, #4
 8021960:	f7ff ffe4 	bl	802192c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 8021964:	68a3      	ldr	r3, [r4, #8]
 8021966:	9901      	ldr	r1, [sp, #4]
 8021968:	9a00      	ldr	r2, [sp, #0]
 802196a:	1ac9      	subs	r1, r1, r3
 802196c:	68e3      	ldr	r3, [r4, #12]
 802196e:	9101      	str	r1, [sp, #4]
 8021970:	1ad2      	subs	r2, r2, r3
 8021972:	2a00      	cmp	r2, #0
 8021974:	9200      	str	r2, [sp, #0]
 8021976:	db1c      	blt.n	80219b2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
 8021978:	6963      	ldr	r3, [r4, #20]
 802197a:	429a      	cmp	r2, r3
 802197c:	bfac      	ite	ge
 802197e:	2002      	movge	r0, #2
 8021980:	2000      	movlt	r0, #0
 8021982:	2900      	cmp	r1, #0
 8021984:	db17      	blt.n	80219b6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
 8021986:	6923      	ldr	r3, [r4, #16]
 8021988:	4299      	cmp	r1, r3
 802198a:	bfac      	ite	ge
 802198c:	2308      	movge	r3, #8
 802198e:	2300      	movlt	r3, #0
 8021990:	4303      	orrs	r3, r0
 8021992:	f894 0064 	ldrb.w	r0, [r4, #100]	; 0x64
 8021996:	b2dd      	uxtb	r5, r3
 8021998:	b978      	cbnz	r0, 80219ba <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
 802199a:	f104 0020 	add.w	r0, r4, #32
 802199e:	f7ff fe4f 	bl	8021640 <_ZN8touchgfx10Rasterizer6lineToEii>
 80219a2:	9b01      	ldr	r3, [sp, #4]
 80219a4:	65e3      	str	r3, [r4, #92]	; 0x5c
 80219a6:	9b00      	ldr	r3, [sp, #0]
 80219a8:	6623      	str	r3, [r4, #96]	; 0x60
 80219aa:	f884 5064 	strb.w	r5, [r4, #100]	; 0x64
 80219ae:	b002      	add	sp, #8
 80219b0:	bd70      	pop	{r4, r5, r6, pc}
 80219b2:	2001      	movs	r0, #1
 80219b4:	e7e5      	b.n	8021982 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
 80219b6:	2304      	movs	r3, #4
 80219b8:	e7ea      	b.n	8021990 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
 80219ba:	b113      	cbz	r3, 80219c2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
 80219bc:	ea10 0305 	ands.w	r3, r0, r5
 80219c0:	d11d      	bne.n	80219fe <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xae>
 80219c2:	f894 3058 	ldrb.w	r3, [r4, #88]	; 0x58
 80219c6:	f104 0620 	add.w	r6, r4, #32
 80219ca:	e9d4 1217 	ldrd	r1, r2, [r4, #92]	; 0x5c
 80219ce:	b193      	cbz	r3, 80219f6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa6>
 80219d0:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 80219d4:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 80219d8:	4298      	cmp	r0, r3
 80219da:	d802      	bhi.n	80219e2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
 80219dc:	4630      	mov	r0, r6
 80219de:	f7ee ffcf 	bl	8010980 <_ZN8touchgfx7Outline6moveToEii>
 80219e2:	2300      	movs	r3, #0
 80219e4:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 80219e8:	2301      	movs	r3, #1
 80219ea:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 80219ee:	e9dd 2100 	ldrd	r2, r1, [sp]
 80219f2:	4630      	mov	r0, r6
 80219f4:	e7d3      	b.n	802199e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
 80219f6:	4630      	mov	r0, r6
 80219f8:	f7ff fe22 	bl	8021640 <_ZN8touchgfx10Rasterizer6lineToEii>
 80219fc:	e7f7      	b.n	80219ee <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9e>
 80219fe:	461d      	mov	r5, r3
 8021a00:	e7cf      	b.n	80219a2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>

08021a02 <_ZN8touchgfx6Canvas5closeEv>:
 8021a02:	b538      	push	{r3, r4, r5, lr}
 8021a04:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 8021a08:	4604      	mov	r4, r0
 8021a0a:	b993      	cbnz	r3, 8021a32 <_ZN8touchgfx6Canvas5closeEv+0x30>
 8021a0c:	f890 3064 	ldrb.w	r3, [r0, #100]	; 0x64
 8021a10:	f890 2065 	ldrb.w	r2, [r0, #101]	; 0x65
 8021a14:	4213      	tst	r3, r2
 8021a16:	d10c      	bne.n	8021a32 <_ZN8touchgfx6Canvas5closeEv+0x30>
 8021a18:	f100 0520 	add.w	r5, r0, #32
 8021a1c:	b123      	cbz	r3, 8021a28 <_ZN8touchgfx6Canvas5closeEv+0x26>
 8021a1e:	e9d0 1217 	ldrd	r1, r2, [r0, #92]	; 0x5c
 8021a22:	4628      	mov	r0, r5
 8021a24:	f7ff fe0c 	bl	8021640 <_ZN8touchgfx10Rasterizer6lineToEii>
 8021a28:	e9d4 121a 	ldrd	r1, r2, [r4, #104]	; 0x68
 8021a2c:	4628      	mov	r0, r5
 8021a2e:	f7ff fe07 	bl	8021640 <_ZN8touchgfx10Rasterizer6lineToEii>
 8021a32:	2300      	movs	r3, #0
 8021a34:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8021a38:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
 8021a3c:	4298      	cmp	r0, r3
 8021a3e:	bf34      	ite	cc
 8021a40:	2000      	movcc	r0, #0
 8021a42:	2001      	movcs	r0, #1
 8021a44:	bd38      	pop	{r3, r4, r5, pc}
	...

08021a48 <_ZN8touchgfx6Canvas6renderEh>:
 8021a48:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8021a4c:	4604      	mov	r4, r0
 8021a4e:	6840      	ldr	r0, [r0, #4]
 8021a50:	6803      	ldr	r3, [r0, #0]
 8021a52:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8021a54:	460d      	mov	r5, r1
 8021a56:	4798      	blx	r3
 8021a58:	fb10 f105 	smulbb	r1, r0, r5
 8021a5c:	b289      	uxth	r1, r1
 8021a5e:	1c4d      	adds	r5, r1, #1
 8021a60:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8021a64:	122d      	asrs	r5, r5, #8
 8021a66:	f000 8098 	beq.w	8021b9a <_ZN8touchgfx6Canvas6renderEh+0x152>
 8021a6a:	f894 3059 	ldrb.w	r3, [r4, #89]	; 0x59
 8021a6e:	2b00      	cmp	r3, #0
 8021a70:	f000 8093 	beq.w	8021b9a <_ZN8touchgfx6Canvas6renderEh+0x152>
 8021a74:	4620      	mov	r0, r4
 8021a76:	f7ff ffc4 	bl	8021a02 <_ZN8touchgfx6Canvas5closeEv>
 8021a7a:	4607      	mov	r7, r0
 8021a7c:	2800      	cmp	r0, #0
 8021a7e:	d043      	beq.n	8021b08 <_ZN8touchgfx6Canvas6renderEh+0xc0>
 8021a80:	6863      	ldr	r3, [r4, #4]
 8021a82:	4e47      	ldr	r6, [pc, #284]	; (8021ba0 <_ZN8touchgfx6Canvas6renderEh+0x158>)
 8021a84:	6a98      	ldr	r0, [r3, #40]	; 0x28
 8021a86:	6837      	ldr	r7, [r6, #0]
 8021a88:	6803      	ldr	r3, [r0, #0]
 8021a8a:	689b      	ldr	r3, [r3, #8]
 8021a8c:	4798      	blx	r3
 8021a8e:	4601      	mov	r1, r0
 8021a90:	4638      	mov	r0, r7
 8021a92:	f7eb fd19 	bl	800d4c8 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
 8021a96:	4607      	mov	r7, r0
 8021a98:	f7e0 fca4 	bl	80023e4 <_ZN8touchgfx3HAL3lcdEv>
 8021a9c:	6803      	ldr	r3, [r0, #0]
 8021a9e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8021aa0:	4798      	blx	r3
 8021aa2:	4680      	mov	r8, r0
 8021aa4:	f7e0 fc9e 	bl	80023e4 <_ZN8touchgfx3HAL3lcdEv>
 8021aa8:	6803      	ldr	r3, [r0, #0]
 8021aaa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8021aac:	4798      	blx	r3
 8021aae:	280b      	cmp	r0, #11
 8021ab0:	d858      	bhi.n	8021b64 <_ZN8touchgfx6Canvas6renderEh+0x11c>
 8021ab2:	e8df f000 	tbb	[pc, r0]
 8021ab6:	594e      	.short	0x594e
 8021ab8:	2d570669 	.word	0x2d570669
 8021abc:	6262623d 	.word	0x6262623d
 8021ac0:	6262      	.short	0x6262
 8021ac2:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8021ac6:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8021aca:	2208      	movs	r2, #8
 8021acc:	fb91 f2f2 	sdiv	r2, r1, r2
 8021ad0:	fb08 2303 	mla	r3, r8, r3, r2
 8021ad4:	441f      	add	r7, r3
 8021ad6:	424b      	negs	r3, r1
 8021ad8:	f003 0307 	and.w	r3, r3, #7
 8021adc:	f001 0107 	and.w	r1, r1, #7
 8021ae0:	bf58      	it	pl
 8021ae2:	4259      	negpl	r1, r3
 8021ae4:	b2c9      	uxtb	r1, r1
 8021ae6:	b2ed      	uxtb	r5, r5
 8021ae8:	e9cd 1500 	strd	r1, r5, [sp]
 8021aec:	6860      	ldr	r0, [r4, #4]
 8021aee:	fa0f f388 	sxth.w	r3, r8
 8021af2:	463a      	mov	r2, r7
 8021af4:	6a81      	ldr	r1, [r0, #40]	; 0x28
 8021af6:	f104 0020 	add.w	r0, r4, #32
 8021afa:	f7ff fdad 	bl	8021658 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
 8021afe:	4607      	mov	r7, r0
 8021b00:	6830      	ldr	r0, [r6, #0]
 8021b02:	6803      	ldr	r3, [r0, #0]
 8021b04:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8021b06:	4798      	blx	r3
 8021b08:	4638      	mov	r0, r7
 8021b0a:	b002      	add	sp, #8
 8021b0c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8021b10:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8021b14:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8021b18:	2204      	movs	r2, #4
 8021b1a:	fb91 f2f2 	sdiv	r2, r1, r2
 8021b1e:	fb08 2303 	mla	r3, r8, r3, r2
 8021b22:	441f      	add	r7, r3
 8021b24:	424b      	negs	r3, r1
 8021b26:	f003 0303 	and.w	r3, r3, #3
 8021b2a:	f001 0103 	and.w	r1, r1, #3
 8021b2e:	e7d7      	b.n	8021ae0 <_ZN8touchgfx6Canvas6renderEh+0x98>
 8021b30:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8021b34:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8021b38:	2900      	cmp	r1, #0
 8021b3a:	f04f 0202 	mov.w	r2, #2
 8021b3e:	fb91 f2f2 	sdiv	r2, r1, r2
 8021b42:	f001 0101 	and.w	r1, r1, #1
 8021b46:	fb08 2303 	mla	r3, r8, r3, r2
 8021b4a:	441f      	add	r7, r3
 8021b4c:	bfb8      	it	lt
 8021b4e:	4249      	neglt	r1, r1
 8021b50:	e7c8      	b.n	8021ae4 <_ZN8touchgfx6Canvas6renderEh+0x9c>
 8021b52:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8021b56:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8021b5a:	fb08 f303 	mul.w	r3, r8, r3
 8021b5e:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8021b62:	441f      	add	r7, r3
 8021b64:	2100      	movs	r1, #0
 8021b66:	e7be      	b.n	8021ae6 <_ZN8touchgfx6Canvas6renderEh+0x9e>
 8021b68:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8021b6c:	fb08 f203 	mul.w	r2, r8, r3
 8021b70:	8b23      	ldrh	r3, [r4, #24]
 8021b72:	2103      	movs	r1, #3
 8021b74:	fb13 2301 	smlabb	r3, r3, r1, r2
 8021b78:	e7f3      	b.n	8021b62 <_ZN8touchgfx6Canvas6renderEh+0x11a>
 8021b7a:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8021b7e:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8021b82:	fb08 2303 	mla	r3, r8, r3, r2
 8021b86:	e7ec      	b.n	8021b62 <_ZN8touchgfx6Canvas6renderEh+0x11a>
 8021b88:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8021b8c:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8021b90:	fb08 f303 	mul.w	r3, r8, r3
 8021b94:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8021b98:	e7e3      	b.n	8021b62 <_ZN8touchgfx6Canvas6renderEh+0x11a>
 8021b9a:	2701      	movs	r7, #1
 8021b9c:	e7b4      	b.n	8021b08 <_ZN8touchgfx6Canvas6renderEh+0xc0>
 8021b9e:	bf00      	nop
 8021ba0:	2001794c 	.word	0x2001794c

08021ba4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 8021ba4:	b513      	push	{r0, r1, r4, lr}
 8021ba6:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 8021baa:	4604      	mov	r4, r0
 8021bac:	e9cd 2100 	strd	r2, r1, [sp]
 8021bb0:	b1a3      	cbz	r3, 8021bdc <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
 8021bb2:	466a      	mov	r2, sp
 8021bb4:	a901      	add	r1, sp, #4
 8021bb6:	4620      	mov	r0, r4
 8021bb8:	f7ff feb8 	bl	802192c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 8021bbc:	68a3      	ldr	r3, [r4, #8]
 8021bbe:	9901      	ldr	r1, [sp, #4]
 8021bc0:	9a00      	ldr	r2, [sp, #0]
 8021bc2:	1ac9      	subs	r1, r1, r3
 8021bc4:	68e3      	ldr	r3, [r4, #12]
 8021bc6:	9101      	str	r1, [sp, #4]
 8021bc8:	1ad2      	subs	r2, r2, r3
 8021bca:	2a00      	cmp	r2, #0
 8021bcc:	9200      	str	r2, [sp, #0]
 8021bce:	da0b      	bge.n	8021be8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
 8021bd0:	2301      	movs	r3, #1
 8021bd2:	2900      	cmp	r1, #0
 8021bd4:	da0e      	bge.n	8021bf4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
 8021bd6:	f043 0304 	orr.w	r3, r3, #4
 8021bda:	e013      	b.n	8021c04 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
 8021bdc:	f7ff ff11 	bl	8021a02 <_ZN8touchgfx6Canvas5closeEv>
 8021be0:	2800      	cmp	r0, #0
 8021be2:	d1e6      	bne.n	8021bb2 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
 8021be4:	b002      	add	sp, #8
 8021be6:	bd10      	pop	{r4, pc}
 8021be8:	6963      	ldr	r3, [r4, #20]
 8021bea:	429a      	cmp	r2, r3
 8021bec:	bfac      	ite	ge
 8021bee:	2302      	movge	r3, #2
 8021bf0:	2300      	movlt	r3, #0
 8021bf2:	e7ee      	b.n	8021bd2 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
 8021bf4:	6920      	ldr	r0, [r4, #16]
 8021bf6:	4281      	cmp	r1, r0
 8021bf8:	bfac      	ite	ge
 8021bfa:	2008      	movge	r0, #8
 8021bfc:	2000      	movlt	r0, #0
 8021bfe:	4318      	orrs	r0, r3
 8021c00:	b2c3      	uxtb	r3, r0
 8021c02:	b158      	cbz	r0, 8021c1c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
 8021c04:	2201      	movs	r2, #1
 8021c06:	f884 2058 	strb.w	r2, [r4, #88]	; 0x58
 8021c0a:	9901      	ldr	r1, [sp, #4]
 8021c0c:	9a00      	ldr	r2, [sp, #0]
 8021c0e:	66a1      	str	r1, [r4, #104]	; 0x68
 8021c10:	66e2      	str	r2, [r4, #108]	; 0x6c
 8021c12:	e9c4 1217 	strd	r1, r2, [r4, #92]	; 0x5c
 8021c16:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 8021c1a:	e7e3      	b.n	8021be4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
 8021c1c:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 8021c20:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 8021c24:	4298      	cmp	r0, r3
 8021c26:	d803      	bhi.n	8021c30 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
 8021c28:	f104 0020 	add.w	r0, r4, #32
 8021c2c:	f7ee fea8 	bl	8010980 <_ZN8touchgfx7Outline6moveToEii>
 8021c30:	2300      	movs	r3, #0
 8021c32:	2201      	movs	r2, #1
 8021c34:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8021c38:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 8021c3c:	e7e5      	b.n	8021c0a <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

08021c3e <__aeabi_atexit>:
 8021c3e:	460b      	mov	r3, r1
 8021c40:	4601      	mov	r1, r0
 8021c42:	4618      	mov	r0, r3
 8021c44:	f000 b852 	b.w	8021cec <__cxa_atexit>

08021c48 <_ZdlPvj>:
 8021c48:	f000 b812 	b.w	8021c70 <_ZdlPv>

08021c4c <__cxa_guard_acquire>:
 8021c4c:	6803      	ldr	r3, [r0, #0]
 8021c4e:	07db      	lsls	r3, r3, #31
 8021c50:	d406      	bmi.n	8021c60 <__cxa_guard_acquire+0x14>
 8021c52:	7843      	ldrb	r3, [r0, #1]
 8021c54:	b103      	cbz	r3, 8021c58 <__cxa_guard_acquire+0xc>
 8021c56:	deff      	udf	#255	; 0xff
 8021c58:	2301      	movs	r3, #1
 8021c5a:	7043      	strb	r3, [r0, #1]
 8021c5c:	4618      	mov	r0, r3
 8021c5e:	4770      	bx	lr
 8021c60:	2000      	movs	r0, #0
 8021c62:	4770      	bx	lr

08021c64 <__cxa_guard_release>:
 8021c64:	2301      	movs	r3, #1
 8021c66:	6003      	str	r3, [r0, #0]
 8021c68:	4770      	bx	lr

08021c6a <__cxa_pure_virtual>:
 8021c6a:	b508      	push	{r3, lr}
 8021c6c:	f000 f80e 	bl	8021c8c <_ZSt9terminatev>

08021c70 <_ZdlPv>:
 8021c70:	f000 b988 	b.w	8021f84 <free>

08021c74 <_ZN10__cxxabiv111__terminateEPFvvE>:
 8021c74:	b508      	push	{r3, lr}
 8021c76:	4780      	blx	r0
 8021c78:	f000 f80d 	bl	8021c96 <abort>

08021c7c <_ZSt13get_terminatev>:
 8021c7c:	4b02      	ldr	r3, [pc, #8]	; (8021c88 <_ZSt13get_terminatev+0xc>)
 8021c7e:	6818      	ldr	r0, [r3, #0]
 8021c80:	f3bf 8f5b 	dmb	ish
 8021c84:	4770      	bx	lr
 8021c86:	bf00      	nop
 8021c88:	200000fc 	.word	0x200000fc

08021c8c <_ZSt9terminatev>:
 8021c8c:	b508      	push	{r3, lr}
 8021c8e:	f7ff fff5 	bl	8021c7c <_ZSt13get_terminatev>
 8021c92:	f7ff ffef 	bl	8021c74 <_ZN10__cxxabiv111__terminateEPFvvE>

08021c96 <abort>:
 8021c96:	b508      	push	{r3, lr}
 8021c98:	2006      	movs	r0, #6
 8021c9a:	f000 fe01 	bl	80228a0 <raise>
 8021c9e:	2001      	movs	r0, #1
 8021ca0:	f7e0 f99a 	bl	8001fd8 <_exit>

08021ca4 <__assert_func>:
 8021ca4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8021ca6:	4614      	mov	r4, r2
 8021ca8:	461a      	mov	r2, r3
 8021caa:	4b09      	ldr	r3, [pc, #36]	; (8021cd0 <__assert_func+0x2c>)
 8021cac:	681b      	ldr	r3, [r3, #0]
 8021cae:	4605      	mov	r5, r0
 8021cb0:	68d8      	ldr	r0, [r3, #12]
 8021cb2:	b14c      	cbz	r4, 8021cc8 <__assert_func+0x24>
 8021cb4:	4b07      	ldr	r3, [pc, #28]	; (8021cd4 <__assert_func+0x30>)
 8021cb6:	9100      	str	r1, [sp, #0]
 8021cb8:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8021cbc:	4906      	ldr	r1, [pc, #24]	; (8021cd8 <__assert_func+0x34>)
 8021cbe:	462b      	mov	r3, r5
 8021cc0:	f000 f8fe 	bl	8021ec0 <fiprintf>
 8021cc4:	f7ff ffe7 	bl	8021c96 <abort>
 8021cc8:	4b04      	ldr	r3, [pc, #16]	; (8021cdc <__assert_func+0x38>)
 8021cca:	461c      	mov	r4, r3
 8021ccc:	e7f3      	b.n	8021cb6 <__assert_func+0x12>
 8021cce:	bf00      	nop
 8021cd0:	20000100 	.word	0x20000100
 8021cd4:	08025904 	.word	0x08025904
 8021cd8:	08025911 	.word	0x08025911
 8021cdc:	08024aff 	.word	0x08024aff

08021ce0 <atexit>:
 8021ce0:	2300      	movs	r3, #0
 8021ce2:	4601      	mov	r1, r0
 8021ce4:	461a      	mov	r2, r3
 8021ce6:	4618      	mov	r0, r3
 8021ce8:	f000 bf0c 	b.w	8022b04 <__register_exitproc>

08021cec <__cxa_atexit>:
 8021cec:	b510      	push	{r4, lr}
 8021cee:	4c05      	ldr	r4, [pc, #20]	; (8021d04 <__cxa_atexit+0x18>)
 8021cf0:	4613      	mov	r3, r2
 8021cf2:	b12c      	cbz	r4, 8021d00 <__cxa_atexit+0x14>
 8021cf4:	460a      	mov	r2, r1
 8021cf6:	4601      	mov	r1, r0
 8021cf8:	2002      	movs	r0, #2
 8021cfa:	f000 ff03 	bl	8022b04 <__register_exitproc>
 8021cfe:	bd10      	pop	{r4, pc}
 8021d00:	4620      	mov	r0, r4
 8021d02:	e7fc      	b.n	8021cfe <__cxa_atexit+0x12>
 8021d04:	08022b05 	.word	0x08022b05

08021d08 <__errno>:
 8021d08:	4b01      	ldr	r3, [pc, #4]	; (8021d10 <__errno+0x8>)
 8021d0a:	6818      	ldr	r0, [r3, #0]
 8021d0c:	4770      	bx	lr
 8021d0e:	bf00      	nop
 8021d10:	20000100 	.word	0x20000100

08021d14 <std>:
 8021d14:	2300      	movs	r3, #0
 8021d16:	b510      	push	{r4, lr}
 8021d18:	4604      	mov	r4, r0
 8021d1a:	e9c0 3300 	strd	r3, r3, [r0]
 8021d1e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8021d22:	6083      	str	r3, [r0, #8]
 8021d24:	8181      	strh	r1, [r0, #12]
 8021d26:	6643      	str	r3, [r0, #100]	; 0x64
 8021d28:	81c2      	strh	r2, [r0, #14]
 8021d2a:	6183      	str	r3, [r0, #24]
 8021d2c:	4619      	mov	r1, r3
 8021d2e:	2208      	movs	r2, #8
 8021d30:	305c      	adds	r0, #92	; 0x5c
 8021d32:	f000 f93d 	bl	8021fb0 <memset>
 8021d36:	4b05      	ldr	r3, [pc, #20]	; (8021d4c <std+0x38>)
 8021d38:	6263      	str	r3, [r4, #36]	; 0x24
 8021d3a:	4b05      	ldr	r3, [pc, #20]	; (8021d50 <std+0x3c>)
 8021d3c:	62a3      	str	r3, [r4, #40]	; 0x28
 8021d3e:	4b05      	ldr	r3, [pc, #20]	; (8021d54 <std+0x40>)
 8021d40:	62e3      	str	r3, [r4, #44]	; 0x2c
 8021d42:	4b05      	ldr	r3, [pc, #20]	; (8021d58 <std+0x44>)
 8021d44:	6224      	str	r4, [r4, #32]
 8021d46:	6323      	str	r3, [r4, #48]	; 0x30
 8021d48:	bd10      	pop	{r4, pc}
 8021d4a:	bf00      	nop
 8021d4c:	080228d9 	.word	0x080228d9
 8021d50:	080228fb 	.word	0x080228fb
 8021d54:	08022933 	.word	0x08022933
 8021d58:	08022957 	.word	0x08022957

08021d5c <_cleanup_r>:
 8021d5c:	4901      	ldr	r1, [pc, #4]	; (8021d64 <_cleanup_r+0x8>)
 8021d5e:	f000 b8c1 	b.w	8021ee4 <_fwalk_reent>
 8021d62:	bf00      	nop
 8021d64:	08022cf5 	.word	0x08022cf5

08021d68 <__sfmoreglue>:
 8021d68:	b570      	push	{r4, r5, r6, lr}
 8021d6a:	2268      	movs	r2, #104	; 0x68
 8021d6c:	1e4d      	subs	r5, r1, #1
 8021d6e:	4355      	muls	r5, r2
 8021d70:	460e      	mov	r6, r1
 8021d72:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8021d76:	f000 f98f 	bl	8022098 <_malloc_r>
 8021d7a:	4604      	mov	r4, r0
 8021d7c:	b140      	cbz	r0, 8021d90 <__sfmoreglue+0x28>
 8021d7e:	2100      	movs	r1, #0
 8021d80:	e9c0 1600 	strd	r1, r6, [r0]
 8021d84:	300c      	adds	r0, #12
 8021d86:	60a0      	str	r0, [r4, #8]
 8021d88:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8021d8c:	f000 f910 	bl	8021fb0 <memset>
 8021d90:	4620      	mov	r0, r4
 8021d92:	bd70      	pop	{r4, r5, r6, pc}

08021d94 <__sfp_lock_acquire>:
 8021d94:	4801      	ldr	r0, [pc, #4]	; (8021d9c <__sfp_lock_acquire+0x8>)
 8021d96:	f000 b8ea 	b.w	8021f6e <__retarget_lock_acquire_recursive>
 8021d9a:	bf00      	nop
 8021d9c:	20017a52 	.word	0x20017a52

08021da0 <__sfp_lock_release>:
 8021da0:	4801      	ldr	r0, [pc, #4]	; (8021da8 <__sfp_lock_release+0x8>)
 8021da2:	f000 b8e6 	b.w	8021f72 <__retarget_lock_release_recursive>
 8021da6:	bf00      	nop
 8021da8:	20017a52 	.word	0x20017a52

08021dac <__sinit_lock_acquire>:
 8021dac:	4801      	ldr	r0, [pc, #4]	; (8021db4 <__sinit_lock_acquire+0x8>)
 8021dae:	f000 b8de 	b.w	8021f6e <__retarget_lock_acquire_recursive>
 8021db2:	bf00      	nop
 8021db4:	20017a53 	.word	0x20017a53

08021db8 <__sinit_lock_release>:
 8021db8:	4801      	ldr	r0, [pc, #4]	; (8021dc0 <__sinit_lock_release+0x8>)
 8021dba:	f000 b8da 	b.w	8021f72 <__retarget_lock_release_recursive>
 8021dbe:	bf00      	nop
 8021dc0:	20017a53 	.word	0x20017a53

08021dc4 <__sinit>:
 8021dc4:	b510      	push	{r4, lr}
 8021dc6:	4604      	mov	r4, r0
 8021dc8:	f7ff fff0 	bl	8021dac <__sinit_lock_acquire>
 8021dcc:	69a3      	ldr	r3, [r4, #24]
 8021dce:	b11b      	cbz	r3, 8021dd8 <__sinit+0x14>
 8021dd0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8021dd4:	f7ff bff0 	b.w	8021db8 <__sinit_lock_release>
 8021dd8:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8021ddc:	6523      	str	r3, [r4, #80]	; 0x50
 8021dde:	4b13      	ldr	r3, [pc, #76]	; (8021e2c <__sinit+0x68>)
 8021de0:	4a13      	ldr	r2, [pc, #76]	; (8021e30 <__sinit+0x6c>)
 8021de2:	681b      	ldr	r3, [r3, #0]
 8021de4:	62a2      	str	r2, [r4, #40]	; 0x28
 8021de6:	42a3      	cmp	r3, r4
 8021de8:	bf04      	itt	eq
 8021dea:	2301      	moveq	r3, #1
 8021dec:	61a3      	streq	r3, [r4, #24]
 8021dee:	4620      	mov	r0, r4
 8021df0:	f000 f820 	bl	8021e34 <__sfp>
 8021df4:	6060      	str	r0, [r4, #4]
 8021df6:	4620      	mov	r0, r4
 8021df8:	f000 f81c 	bl	8021e34 <__sfp>
 8021dfc:	60a0      	str	r0, [r4, #8]
 8021dfe:	4620      	mov	r0, r4
 8021e00:	f000 f818 	bl	8021e34 <__sfp>
 8021e04:	2200      	movs	r2, #0
 8021e06:	60e0      	str	r0, [r4, #12]
 8021e08:	2104      	movs	r1, #4
 8021e0a:	6860      	ldr	r0, [r4, #4]
 8021e0c:	f7ff ff82 	bl	8021d14 <std>
 8021e10:	68a0      	ldr	r0, [r4, #8]
 8021e12:	2201      	movs	r2, #1
 8021e14:	2109      	movs	r1, #9
 8021e16:	f7ff ff7d 	bl	8021d14 <std>
 8021e1a:	68e0      	ldr	r0, [r4, #12]
 8021e1c:	2202      	movs	r2, #2
 8021e1e:	2112      	movs	r1, #18
 8021e20:	f7ff ff78 	bl	8021d14 <std>
 8021e24:	2301      	movs	r3, #1
 8021e26:	61a3      	str	r3, [r4, #24]
 8021e28:	e7d2      	b.n	8021dd0 <__sinit+0xc>
 8021e2a:	bf00      	nop
 8021e2c:	080259a0 	.word	0x080259a0
 8021e30:	08021d5d 	.word	0x08021d5d

08021e34 <__sfp>:
 8021e34:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8021e36:	4607      	mov	r7, r0
 8021e38:	f7ff ffac 	bl	8021d94 <__sfp_lock_acquire>
 8021e3c:	4b1e      	ldr	r3, [pc, #120]	; (8021eb8 <__sfp+0x84>)
 8021e3e:	681e      	ldr	r6, [r3, #0]
 8021e40:	69b3      	ldr	r3, [r6, #24]
 8021e42:	b913      	cbnz	r3, 8021e4a <__sfp+0x16>
 8021e44:	4630      	mov	r0, r6
 8021e46:	f7ff ffbd 	bl	8021dc4 <__sinit>
 8021e4a:	3648      	adds	r6, #72	; 0x48
 8021e4c:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8021e50:	3b01      	subs	r3, #1
 8021e52:	d503      	bpl.n	8021e5c <__sfp+0x28>
 8021e54:	6833      	ldr	r3, [r6, #0]
 8021e56:	b30b      	cbz	r3, 8021e9c <__sfp+0x68>
 8021e58:	6836      	ldr	r6, [r6, #0]
 8021e5a:	e7f7      	b.n	8021e4c <__sfp+0x18>
 8021e5c:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8021e60:	b9d5      	cbnz	r5, 8021e98 <__sfp+0x64>
 8021e62:	4b16      	ldr	r3, [pc, #88]	; (8021ebc <__sfp+0x88>)
 8021e64:	60e3      	str	r3, [r4, #12]
 8021e66:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8021e6a:	6665      	str	r5, [r4, #100]	; 0x64
 8021e6c:	f000 f87e 	bl	8021f6c <__retarget_lock_init_recursive>
 8021e70:	f7ff ff96 	bl	8021da0 <__sfp_lock_release>
 8021e74:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8021e78:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8021e7c:	6025      	str	r5, [r4, #0]
 8021e7e:	61a5      	str	r5, [r4, #24]
 8021e80:	2208      	movs	r2, #8
 8021e82:	4629      	mov	r1, r5
 8021e84:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8021e88:	f000 f892 	bl	8021fb0 <memset>
 8021e8c:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8021e90:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8021e94:	4620      	mov	r0, r4
 8021e96:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8021e98:	3468      	adds	r4, #104	; 0x68
 8021e9a:	e7d9      	b.n	8021e50 <__sfp+0x1c>
 8021e9c:	2104      	movs	r1, #4
 8021e9e:	4638      	mov	r0, r7
 8021ea0:	f7ff ff62 	bl	8021d68 <__sfmoreglue>
 8021ea4:	4604      	mov	r4, r0
 8021ea6:	6030      	str	r0, [r6, #0]
 8021ea8:	2800      	cmp	r0, #0
 8021eaa:	d1d5      	bne.n	8021e58 <__sfp+0x24>
 8021eac:	f7ff ff78 	bl	8021da0 <__sfp_lock_release>
 8021eb0:	230c      	movs	r3, #12
 8021eb2:	603b      	str	r3, [r7, #0]
 8021eb4:	e7ee      	b.n	8021e94 <__sfp+0x60>
 8021eb6:	bf00      	nop
 8021eb8:	080259a0 	.word	0x080259a0
 8021ebc:	ffff0001 	.word	0xffff0001

08021ec0 <fiprintf>:
 8021ec0:	b40e      	push	{r1, r2, r3}
 8021ec2:	b503      	push	{r0, r1, lr}
 8021ec4:	4601      	mov	r1, r0
 8021ec6:	ab03      	add	r3, sp, #12
 8021ec8:	4805      	ldr	r0, [pc, #20]	; (8021ee0 <fiprintf+0x20>)
 8021eca:	f853 2b04 	ldr.w	r2, [r3], #4
 8021ece:	6800      	ldr	r0, [r0, #0]
 8021ed0:	9301      	str	r3, [sp, #4]
 8021ed2:	f000 f97f 	bl	80221d4 <_vfiprintf_r>
 8021ed6:	b002      	add	sp, #8
 8021ed8:	f85d eb04 	ldr.w	lr, [sp], #4
 8021edc:	b003      	add	sp, #12
 8021ede:	4770      	bx	lr
 8021ee0:	20000100 	.word	0x20000100

08021ee4 <_fwalk_reent>:
 8021ee4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8021ee8:	4606      	mov	r6, r0
 8021eea:	4688      	mov	r8, r1
 8021eec:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8021ef0:	2700      	movs	r7, #0
 8021ef2:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8021ef6:	f1b9 0901 	subs.w	r9, r9, #1
 8021efa:	d505      	bpl.n	8021f08 <_fwalk_reent+0x24>
 8021efc:	6824      	ldr	r4, [r4, #0]
 8021efe:	2c00      	cmp	r4, #0
 8021f00:	d1f7      	bne.n	8021ef2 <_fwalk_reent+0xe>
 8021f02:	4638      	mov	r0, r7
 8021f04:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8021f08:	89ab      	ldrh	r3, [r5, #12]
 8021f0a:	2b01      	cmp	r3, #1
 8021f0c:	d907      	bls.n	8021f1e <_fwalk_reent+0x3a>
 8021f0e:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8021f12:	3301      	adds	r3, #1
 8021f14:	d003      	beq.n	8021f1e <_fwalk_reent+0x3a>
 8021f16:	4629      	mov	r1, r5
 8021f18:	4630      	mov	r0, r6
 8021f1a:	47c0      	blx	r8
 8021f1c:	4307      	orrs	r7, r0
 8021f1e:	3568      	adds	r5, #104	; 0x68
 8021f20:	e7e9      	b.n	8021ef6 <_fwalk_reent+0x12>
	...

08021f24 <__libc_init_array>:
 8021f24:	b570      	push	{r4, r5, r6, lr}
 8021f26:	4d0d      	ldr	r5, [pc, #52]	; (8021f5c <__libc_init_array+0x38>)
 8021f28:	4c0d      	ldr	r4, [pc, #52]	; (8021f60 <__libc_init_array+0x3c>)
 8021f2a:	1b64      	subs	r4, r4, r5
 8021f2c:	10a4      	asrs	r4, r4, #2
 8021f2e:	2600      	movs	r6, #0
 8021f30:	42a6      	cmp	r6, r4
 8021f32:	d109      	bne.n	8021f48 <__libc_init_array+0x24>
 8021f34:	4d0b      	ldr	r5, [pc, #44]	; (8021f64 <__libc_init_array+0x40>)
 8021f36:	4c0c      	ldr	r4, [pc, #48]	; (8021f68 <__libc_init_array+0x44>)
 8021f38:	f000 ffd0 	bl	8022edc <_init>
 8021f3c:	1b64      	subs	r4, r4, r5
 8021f3e:	10a4      	asrs	r4, r4, #2
 8021f40:	2600      	movs	r6, #0
 8021f42:	42a6      	cmp	r6, r4
 8021f44:	d105      	bne.n	8021f52 <__libc_init_array+0x2e>
 8021f46:	bd70      	pop	{r4, r5, r6, pc}
 8021f48:	f855 3b04 	ldr.w	r3, [r5], #4
 8021f4c:	4798      	blx	r3
 8021f4e:	3601      	adds	r6, #1
 8021f50:	e7ee      	b.n	8021f30 <__libc_init_array+0xc>
 8021f52:	f855 3b04 	ldr.w	r3, [r5], #4
 8021f56:	4798      	blx	r3
 8021f58:	3601      	adds	r6, #1
 8021f5a:	e7f2      	b.n	8021f42 <__libc_init_array+0x1e>
 8021f5c:	080aa50c 	.word	0x080aa50c
 8021f60:	080aa50c 	.word	0x080aa50c
 8021f64:	080aa50c 	.word	0x080aa50c
 8021f68:	080aa520 	.word	0x080aa520

08021f6c <__retarget_lock_init_recursive>:
 8021f6c:	4770      	bx	lr

08021f6e <__retarget_lock_acquire_recursive>:
 8021f6e:	4770      	bx	lr

08021f70 <__retarget_lock_release>:
 8021f70:	4770      	bx	lr

08021f72 <__retarget_lock_release_recursive>:
 8021f72:	4770      	bx	lr

08021f74 <malloc>:
 8021f74:	4b02      	ldr	r3, [pc, #8]	; (8021f80 <malloc+0xc>)
 8021f76:	4601      	mov	r1, r0
 8021f78:	6818      	ldr	r0, [r3, #0]
 8021f7a:	f000 b88d 	b.w	8022098 <_malloc_r>
 8021f7e:	bf00      	nop
 8021f80:	20000100 	.word	0x20000100

08021f84 <free>:
 8021f84:	4b02      	ldr	r3, [pc, #8]	; (8021f90 <free+0xc>)
 8021f86:	4601      	mov	r1, r0
 8021f88:	6818      	ldr	r0, [r3, #0]
 8021f8a:	f000 b819 	b.w	8021fc0 <_free_r>
 8021f8e:	bf00      	nop
 8021f90:	20000100 	.word	0x20000100

08021f94 <memcpy>:
 8021f94:	440a      	add	r2, r1
 8021f96:	4291      	cmp	r1, r2
 8021f98:	f100 33ff 	add.w	r3, r0, #4294967295
 8021f9c:	d100      	bne.n	8021fa0 <memcpy+0xc>
 8021f9e:	4770      	bx	lr
 8021fa0:	b510      	push	{r4, lr}
 8021fa2:	f811 4b01 	ldrb.w	r4, [r1], #1
 8021fa6:	f803 4f01 	strb.w	r4, [r3, #1]!
 8021faa:	4291      	cmp	r1, r2
 8021fac:	d1f9      	bne.n	8021fa2 <memcpy+0xe>
 8021fae:	bd10      	pop	{r4, pc}

08021fb0 <memset>:
 8021fb0:	4402      	add	r2, r0
 8021fb2:	4603      	mov	r3, r0
 8021fb4:	4293      	cmp	r3, r2
 8021fb6:	d100      	bne.n	8021fba <memset+0xa>
 8021fb8:	4770      	bx	lr
 8021fba:	f803 1b01 	strb.w	r1, [r3], #1
 8021fbe:	e7f9      	b.n	8021fb4 <memset+0x4>

08021fc0 <_free_r>:
 8021fc0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8021fc2:	2900      	cmp	r1, #0
 8021fc4:	d044      	beq.n	8022050 <_free_r+0x90>
 8021fc6:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8021fca:	9001      	str	r0, [sp, #4]
 8021fcc:	2b00      	cmp	r3, #0
 8021fce:	f1a1 0404 	sub.w	r4, r1, #4
 8021fd2:	bfb8      	it	lt
 8021fd4:	18e4      	addlt	r4, r4, r3
 8021fd6:	f000 ff41 	bl	8022e5c <__malloc_lock>
 8021fda:	4a1e      	ldr	r2, [pc, #120]	; (8022054 <_free_r+0x94>)
 8021fdc:	9801      	ldr	r0, [sp, #4]
 8021fde:	6813      	ldr	r3, [r2, #0]
 8021fe0:	b933      	cbnz	r3, 8021ff0 <_free_r+0x30>
 8021fe2:	6063      	str	r3, [r4, #4]
 8021fe4:	6014      	str	r4, [r2, #0]
 8021fe6:	b003      	add	sp, #12
 8021fe8:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8021fec:	f000 bf3c 	b.w	8022e68 <__malloc_unlock>
 8021ff0:	42a3      	cmp	r3, r4
 8021ff2:	d908      	bls.n	8022006 <_free_r+0x46>
 8021ff4:	6825      	ldr	r5, [r4, #0]
 8021ff6:	1961      	adds	r1, r4, r5
 8021ff8:	428b      	cmp	r3, r1
 8021ffa:	bf01      	itttt	eq
 8021ffc:	6819      	ldreq	r1, [r3, #0]
 8021ffe:	685b      	ldreq	r3, [r3, #4]
 8022000:	1949      	addeq	r1, r1, r5
 8022002:	6021      	streq	r1, [r4, #0]
 8022004:	e7ed      	b.n	8021fe2 <_free_r+0x22>
 8022006:	461a      	mov	r2, r3
 8022008:	685b      	ldr	r3, [r3, #4]
 802200a:	b10b      	cbz	r3, 8022010 <_free_r+0x50>
 802200c:	42a3      	cmp	r3, r4
 802200e:	d9fa      	bls.n	8022006 <_free_r+0x46>
 8022010:	6811      	ldr	r1, [r2, #0]
 8022012:	1855      	adds	r5, r2, r1
 8022014:	42a5      	cmp	r5, r4
 8022016:	d10b      	bne.n	8022030 <_free_r+0x70>
 8022018:	6824      	ldr	r4, [r4, #0]
 802201a:	4421      	add	r1, r4
 802201c:	1854      	adds	r4, r2, r1
 802201e:	42a3      	cmp	r3, r4
 8022020:	6011      	str	r1, [r2, #0]
 8022022:	d1e0      	bne.n	8021fe6 <_free_r+0x26>
 8022024:	681c      	ldr	r4, [r3, #0]
 8022026:	685b      	ldr	r3, [r3, #4]
 8022028:	6053      	str	r3, [r2, #4]
 802202a:	4421      	add	r1, r4
 802202c:	6011      	str	r1, [r2, #0]
 802202e:	e7da      	b.n	8021fe6 <_free_r+0x26>
 8022030:	d902      	bls.n	8022038 <_free_r+0x78>
 8022032:	230c      	movs	r3, #12
 8022034:	6003      	str	r3, [r0, #0]
 8022036:	e7d6      	b.n	8021fe6 <_free_r+0x26>
 8022038:	6825      	ldr	r5, [r4, #0]
 802203a:	1961      	adds	r1, r4, r5
 802203c:	428b      	cmp	r3, r1
 802203e:	bf04      	itt	eq
 8022040:	6819      	ldreq	r1, [r3, #0]
 8022042:	685b      	ldreq	r3, [r3, #4]
 8022044:	6063      	str	r3, [r4, #4]
 8022046:	bf04      	itt	eq
 8022048:	1949      	addeq	r1, r1, r5
 802204a:	6021      	streq	r1, [r4, #0]
 802204c:	6054      	str	r4, [r2, #4]
 802204e:	e7ca      	b.n	8021fe6 <_free_r+0x26>
 8022050:	b003      	add	sp, #12
 8022052:	bd30      	pop	{r4, r5, pc}
 8022054:	20017a54 	.word	0x20017a54

08022058 <sbrk_aligned>:
 8022058:	b570      	push	{r4, r5, r6, lr}
 802205a:	4e0e      	ldr	r6, [pc, #56]	; (8022094 <sbrk_aligned+0x3c>)
 802205c:	460c      	mov	r4, r1
 802205e:	6831      	ldr	r1, [r6, #0]
 8022060:	4605      	mov	r5, r0
 8022062:	b911      	cbnz	r1, 802206a <sbrk_aligned+0x12>
 8022064:	f000 fbe4 	bl	8022830 <_sbrk_r>
 8022068:	6030      	str	r0, [r6, #0]
 802206a:	4621      	mov	r1, r4
 802206c:	4628      	mov	r0, r5
 802206e:	f000 fbdf 	bl	8022830 <_sbrk_r>
 8022072:	1c43      	adds	r3, r0, #1
 8022074:	d00a      	beq.n	802208c <sbrk_aligned+0x34>
 8022076:	1cc4      	adds	r4, r0, #3
 8022078:	f024 0403 	bic.w	r4, r4, #3
 802207c:	42a0      	cmp	r0, r4
 802207e:	d007      	beq.n	8022090 <sbrk_aligned+0x38>
 8022080:	1a21      	subs	r1, r4, r0
 8022082:	4628      	mov	r0, r5
 8022084:	f000 fbd4 	bl	8022830 <_sbrk_r>
 8022088:	3001      	adds	r0, #1
 802208a:	d101      	bne.n	8022090 <sbrk_aligned+0x38>
 802208c:	f04f 34ff 	mov.w	r4, #4294967295
 8022090:	4620      	mov	r0, r4
 8022092:	bd70      	pop	{r4, r5, r6, pc}
 8022094:	20017a58 	.word	0x20017a58

08022098 <_malloc_r>:
 8022098:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802209c:	1ccd      	adds	r5, r1, #3
 802209e:	f025 0503 	bic.w	r5, r5, #3
 80220a2:	3508      	adds	r5, #8
 80220a4:	2d0c      	cmp	r5, #12
 80220a6:	bf38      	it	cc
 80220a8:	250c      	movcc	r5, #12
 80220aa:	2d00      	cmp	r5, #0
 80220ac:	4607      	mov	r7, r0
 80220ae:	db01      	blt.n	80220b4 <_malloc_r+0x1c>
 80220b0:	42a9      	cmp	r1, r5
 80220b2:	d905      	bls.n	80220c0 <_malloc_r+0x28>
 80220b4:	230c      	movs	r3, #12
 80220b6:	603b      	str	r3, [r7, #0]
 80220b8:	2600      	movs	r6, #0
 80220ba:	4630      	mov	r0, r6
 80220bc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80220c0:	4e2e      	ldr	r6, [pc, #184]	; (802217c <_malloc_r+0xe4>)
 80220c2:	f000 fecb 	bl	8022e5c <__malloc_lock>
 80220c6:	6833      	ldr	r3, [r6, #0]
 80220c8:	461c      	mov	r4, r3
 80220ca:	bb34      	cbnz	r4, 802211a <_malloc_r+0x82>
 80220cc:	4629      	mov	r1, r5
 80220ce:	4638      	mov	r0, r7
 80220d0:	f7ff ffc2 	bl	8022058 <sbrk_aligned>
 80220d4:	1c43      	adds	r3, r0, #1
 80220d6:	4604      	mov	r4, r0
 80220d8:	d14d      	bne.n	8022176 <_malloc_r+0xde>
 80220da:	6834      	ldr	r4, [r6, #0]
 80220dc:	4626      	mov	r6, r4
 80220de:	2e00      	cmp	r6, #0
 80220e0:	d140      	bne.n	8022164 <_malloc_r+0xcc>
 80220e2:	6823      	ldr	r3, [r4, #0]
 80220e4:	4631      	mov	r1, r6
 80220e6:	4638      	mov	r0, r7
 80220e8:	eb04 0803 	add.w	r8, r4, r3
 80220ec:	f000 fba0 	bl	8022830 <_sbrk_r>
 80220f0:	4580      	cmp	r8, r0
 80220f2:	d13a      	bne.n	802216a <_malloc_r+0xd2>
 80220f4:	6821      	ldr	r1, [r4, #0]
 80220f6:	3503      	adds	r5, #3
 80220f8:	1a6d      	subs	r5, r5, r1
 80220fa:	f025 0503 	bic.w	r5, r5, #3
 80220fe:	3508      	adds	r5, #8
 8022100:	2d0c      	cmp	r5, #12
 8022102:	bf38      	it	cc
 8022104:	250c      	movcc	r5, #12
 8022106:	4629      	mov	r1, r5
 8022108:	4638      	mov	r0, r7
 802210a:	f7ff ffa5 	bl	8022058 <sbrk_aligned>
 802210e:	3001      	adds	r0, #1
 8022110:	d02b      	beq.n	802216a <_malloc_r+0xd2>
 8022112:	6823      	ldr	r3, [r4, #0]
 8022114:	442b      	add	r3, r5
 8022116:	6023      	str	r3, [r4, #0]
 8022118:	e00e      	b.n	8022138 <_malloc_r+0xa0>
 802211a:	6822      	ldr	r2, [r4, #0]
 802211c:	1b52      	subs	r2, r2, r5
 802211e:	d41e      	bmi.n	802215e <_malloc_r+0xc6>
 8022120:	2a0b      	cmp	r2, #11
 8022122:	d916      	bls.n	8022152 <_malloc_r+0xba>
 8022124:	1961      	adds	r1, r4, r5
 8022126:	42a3      	cmp	r3, r4
 8022128:	6025      	str	r5, [r4, #0]
 802212a:	bf18      	it	ne
 802212c:	6059      	strne	r1, [r3, #4]
 802212e:	6863      	ldr	r3, [r4, #4]
 8022130:	bf08      	it	eq
 8022132:	6031      	streq	r1, [r6, #0]
 8022134:	5162      	str	r2, [r4, r5]
 8022136:	604b      	str	r3, [r1, #4]
 8022138:	4638      	mov	r0, r7
 802213a:	f104 060b 	add.w	r6, r4, #11
 802213e:	f000 fe93 	bl	8022e68 <__malloc_unlock>
 8022142:	f026 0607 	bic.w	r6, r6, #7
 8022146:	1d23      	adds	r3, r4, #4
 8022148:	1af2      	subs	r2, r6, r3
 802214a:	d0b6      	beq.n	80220ba <_malloc_r+0x22>
 802214c:	1b9b      	subs	r3, r3, r6
 802214e:	50a3      	str	r3, [r4, r2]
 8022150:	e7b3      	b.n	80220ba <_malloc_r+0x22>
 8022152:	6862      	ldr	r2, [r4, #4]
 8022154:	42a3      	cmp	r3, r4
 8022156:	bf0c      	ite	eq
 8022158:	6032      	streq	r2, [r6, #0]
 802215a:	605a      	strne	r2, [r3, #4]
 802215c:	e7ec      	b.n	8022138 <_malloc_r+0xa0>
 802215e:	4623      	mov	r3, r4
 8022160:	6864      	ldr	r4, [r4, #4]
 8022162:	e7b2      	b.n	80220ca <_malloc_r+0x32>
 8022164:	4634      	mov	r4, r6
 8022166:	6876      	ldr	r6, [r6, #4]
 8022168:	e7b9      	b.n	80220de <_malloc_r+0x46>
 802216a:	230c      	movs	r3, #12
 802216c:	603b      	str	r3, [r7, #0]
 802216e:	4638      	mov	r0, r7
 8022170:	f000 fe7a 	bl	8022e68 <__malloc_unlock>
 8022174:	e7a1      	b.n	80220ba <_malloc_r+0x22>
 8022176:	6025      	str	r5, [r4, #0]
 8022178:	e7de      	b.n	8022138 <_malloc_r+0xa0>
 802217a:	bf00      	nop
 802217c:	20017a54 	.word	0x20017a54

08022180 <__sfputc_r>:
 8022180:	6893      	ldr	r3, [r2, #8]
 8022182:	3b01      	subs	r3, #1
 8022184:	2b00      	cmp	r3, #0
 8022186:	b410      	push	{r4}
 8022188:	6093      	str	r3, [r2, #8]
 802218a:	da08      	bge.n	802219e <__sfputc_r+0x1e>
 802218c:	6994      	ldr	r4, [r2, #24]
 802218e:	42a3      	cmp	r3, r4
 8022190:	db01      	blt.n	8022196 <__sfputc_r+0x16>
 8022192:	290a      	cmp	r1, #10
 8022194:	d103      	bne.n	802219e <__sfputc_r+0x1e>
 8022196:	f85d 4b04 	ldr.w	r4, [sp], #4
 802219a:	f000 bbe1 	b.w	8022960 <__swbuf_r>
 802219e:	6813      	ldr	r3, [r2, #0]
 80221a0:	1c58      	adds	r0, r3, #1
 80221a2:	6010      	str	r0, [r2, #0]
 80221a4:	7019      	strb	r1, [r3, #0]
 80221a6:	4608      	mov	r0, r1
 80221a8:	f85d 4b04 	ldr.w	r4, [sp], #4
 80221ac:	4770      	bx	lr

080221ae <__sfputs_r>:
 80221ae:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80221b0:	4606      	mov	r6, r0
 80221b2:	460f      	mov	r7, r1
 80221b4:	4614      	mov	r4, r2
 80221b6:	18d5      	adds	r5, r2, r3
 80221b8:	42ac      	cmp	r4, r5
 80221ba:	d101      	bne.n	80221c0 <__sfputs_r+0x12>
 80221bc:	2000      	movs	r0, #0
 80221be:	e007      	b.n	80221d0 <__sfputs_r+0x22>
 80221c0:	f814 1b01 	ldrb.w	r1, [r4], #1
 80221c4:	463a      	mov	r2, r7
 80221c6:	4630      	mov	r0, r6
 80221c8:	f7ff ffda 	bl	8022180 <__sfputc_r>
 80221cc:	1c43      	adds	r3, r0, #1
 80221ce:	d1f3      	bne.n	80221b8 <__sfputs_r+0xa>
 80221d0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

080221d4 <_vfiprintf_r>:
 80221d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80221d8:	460d      	mov	r5, r1
 80221da:	b09d      	sub	sp, #116	; 0x74
 80221dc:	4614      	mov	r4, r2
 80221de:	4698      	mov	r8, r3
 80221e0:	4606      	mov	r6, r0
 80221e2:	b118      	cbz	r0, 80221ec <_vfiprintf_r+0x18>
 80221e4:	6983      	ldr	r3, [r0, #24]
 80221e6:	b90b      	cbnz	r3, 80221ec <_vfiprintf_r+0x18>
 80221e8:	f7ff fdec 	bl	8021dc4 <__sinit>
 80221ec:	4b89      	ldr	r3, [pc, #548]	; (8022414 <_vfiprintf_r+0x240>)
 80221ee:	429d      	cmp	r5, r3
 80221f0:	d11b      	bne.n	802222a <_vfiprintf_r+0x56>
 80221f2:	6875      	ldr	r5, [r6, #4]
 80221f4:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80221f6:	07d9      	lsls	r1, r3, #31
 80221f8:	d405      	bmi.n	8022206 <_vfiprintf_r+0x32>
 80221fa:	89ab      	ldrh	r3, [r5, #12]
 80221fc:	059a      	lsls	r2, r3, #22
 80221fe:	d402      	bmi.n	8022206 <_vfiprintf_r+0x32>
 8022200:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8022202:	f7ff feb4 	bl	8021f6e <__retarget_lock_acquire_recursive>
 8022206:	89ab      	ldrh	r3, [r5, #12]
 8022208:	071b      	lsls	r3, r3, #28
 802220a:	d501      	bpl.n	8022210 <_vfiprintf_r+0x3c>
 802220c:	692b      	ldr	r3, [r5, #16]
 802220e:	b9eb      	cbnz	r3, 802224c <_vfiprintf_r+0x78>
 8022210:	4629      	mov	r1, r5
 8022212:	4630      	mov	r0, r6
 8022214:	f000 fc08 	bl	8022a28 <__swsetup_r>
 8022218:	b1c0      	cbz	r0, 802224c <_vfiprintf_r+0x78>
 802221a:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802221c:	07dc      	lsls	r4, r3, #31
 802221e:	d50e      	bpl.n	802223e <_vfiprintf_r+0x6a>
 8022220:	f04f 30ff 	mov.w	r0, #4294967295
 8022224:	b01d      	add	sp, #116	; 0x74
 8022226:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802222a:	4b7b      	ldr	r3, [pc, #492]	; (8022418 <_vfiprintf_r+0x244>)
 802222c:	429d      	cmp	r5, r3
 802222e:	d101      	bne.n	8022234 <_vfiprintf_r+0x60>
 8022230:	68b5      	ldr	r5, [r6, #8]
 8022232:	e7df      	b.n	80221f4 <_vfiprintf_r+0x20>
 8022234:	4b79      	ldr	r3, [pc, #484]	; (802241c <_vfiprintf_r+0x248>)
 8022236:	429d      	cmp	r5, r3
 8022238:	bf08      	it	eq
 802223a:	68f5      	ldreq	r5, [r6, #12]
 802223c:	e7da      	b.n	80221f4 <_vfiprintf_r+0x20>
 802223e:	89ab      	ldrh	r3, [r5, #12]
 8022240:	0598      	lsls	r0, r3, #22
 8022242:	d4ed      	bmi.n	8022220 <_vfiprintf_r+0x4c>
 8022244:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8022246:	f7ff fe94 	bl	8021f72 <__retarget_lock_release_recursive>
 802224a:	e7e9      	b.n	8022220 <_vfiprintf_r+0x4c>
 802224c:	2300      	movs	r3, #0
 802224e:	9309      	str	r3, [sp, #36]	; 0x24
 8022250:	2320      	movs	r3, #32
 8022252:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8022256:	f8cd 800c 	str.w	r8, [sp, #12]
 802225a:	2330      	movs	r3, #48	; 0x30
 802225c:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8022420 <_vfiprintf_r+0x24c>
 8022260:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8022264:	f04f 0901 	mov.w	r9, #1
 8022268:	4623      	mov	r3, r4
 802226a:	469a      	mov	sl, r3
 802226c:	f813 2b01 	ldrb.w	r2, [r3], #1
 8022270:	b10a      	cbz	r2, 8022276 <_vfiprintf_r+0xa2>
 8022272:	2a25      	cmp	r2, #37	; 0x25
 8022274:	d1f9      	bne.n	802226a <_vfiprintf_r+0x96>
 8022276:	ebba 0b04 	subs.w	fp, sl, r4
 802227a:	d00b      	beq.n	8022294 <_vfiprintf_r+0xc0>
 802227c:	465b      	mov	r3, fp
 802227e:	4622      	mov	r2, r4
 8022280:	4629      	mov	r1, r5
 8022282:	4630      	mov	r0, r6
 8022284:	f7ff ff93 	bl	80221ae <__sfputs_r>
 8022288:	3001      	adds	r0, #1
 802228a:	f000 80aa 	beq.w	80223e2 <_vfiprintf_r+0x20e>
 802228e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8022290:	445a      	add	r2, fp
 8022292:	9209      	str	r2, [sp, #36]	; 0x24
 8022294:	f89a 3000 	ldrb.w	r3, [sl]
 8022298:	2b00      	cmp	r3, #0
 802229a:	f000 80a2 	beq.w	80223e2 <_vfiprintf_r+0x20e>
 802229e:	2300      	movs	r3, #0
 80222a0:	f04f 32ff 	mov.w	r2, #4294967295
 80222a4:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80222a8:	f10a 0a01 	add.w	sl, sl, #1
 80222ac:	9304      	str	r3, [sp, #16]
 80222ae:	9307      	str	r3, [sp, #28]
 80222b0:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 80222b4:	931a      	str	r3, [sp, #104]	; 0x68
 80222b6:	4654      	mov	r4, sl
 80222b8:	2205      	movs	r2, #5
 80222ba:	f814 1b01 	ldrb.w	r1, [r4], #1
 80222be:	4858      	ldr	r0, [pc, #352]	; (8022420 <_vfiprintf_r+0x24c>)
 80222c0:	f7dd ff96 	bl	80001f0 <memchr>
 80222c4:	9a04      	ldr	r2, [sp, #16]
 80222c6:	b9d8      	cbnz	r0, 8022300 <_vfiprintf_r+0x12c>
 80222c8:	06d1      	lsls	r1, r2, #27
 80222ca:	bf44      	itt	mi
 80222cc:	2320      	movmi	r3, #32
 80222ce:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80222d2:	0713      	lsls	r3, r2, #28
 80222d4:	bf44      	itt	mi
 80222d6:	232b      	movmi	r3, #43	; 0x2b
 80222d8:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80222dc:	f89a 3000 	ldrb.w	r3, [sl]
 80222e0:	2b2a      	cmp	r3, #42	; 0x2a
 80222e2:	d015      	beq.n	8022310 <_vfiprintf_r+0x13c>
 80222e4:	9a07      	ldr	r2, [sp, #28]
 80222e6:	4654      	mov	r4, sl
 80222e8:	2000      	movs	r0, #0
 80222ea:	f04f 0c0a 	mov.w	ip, #10
 80222ee:	4621      	mov	r1, r4
 80222f0:	f811 3b01 	ldrb.w	r3, [r1], #1
 80222f4:	3b30      	subs	r3, #48	; 0x30
 80222f6:	2b09      	cmp	r3, #9
 80222f8:	d94e      	bls.n	8022398 <_vfiprintf_r+0x1c4>
 80222fa:	b1b0      	cbz	r0, 802232a <_vfiprintf_r+0x156>
 80222fc:	9207      	str	r2, [sp, #28]
 80222fe:	e014      	b.n	802232a <_vfiprintf_r+0x156>
 8022300:	eba0 0308 	sub.w	r3, r0, r8
 8022304:	fa09 f303 	lsl.w	r3, r9, r3
 8022308:	4313      	orrs	r3, r2
 802230a:	9304      	str	r3, [sp, #16]
 802230c:	46a2      	mov	sl, r4
 802230e:	e7d2      	b.n	80222b6 <_vfiprintf_r+0xe2>
 8022310:	9b03      	ldr	r3, [sp, #12]
 8022312:	1d19      	adds	r1, r3, #4
 8022314:	681b      	ldr	r3, [r3, #0]
 8022316:	9103      	str	r1, [sp, #12]
 8022318:	2b00      	cmp	r3, #0
 802231a:	bfbb      	ittet	lt
 802231c:	425b      	neglt	r3, r3
 802231e:	f042 0202 	orrlt.w	r2, r2, #2
 8022322:	9307      	strge	r3, [sp, #28]
 8022324:	9307      	strlt	r3, [sp, #28]
 8022326:	bfb8      	it	lt
 8022328:	9204      	strlt	r2, [sp, #16]
 802232a:	7823      	ldrb	r3, [r4, #0]
 802232c:	2b2e      	cmp	r3, #46	; 0x2e
 802232e:	d10c      	bne.n	802234a <_vfiprintf_r+0x176>
 8022330:	7863      	ldrb	r3, [r4, #1]
 8022332:	2b2a      	cmp	r3, #42	; 0x2a
 8022334:	d135      	bne.n	80223a2 <_vfiprintf_r+0x1ce>
 8022336:	9b03      	ldr	r3, [sp, #12]
 8022338:	1d1a      	adds	r2, r3, #4
 802233a:	681b      	ldr	r3, [r3, #0]
 802233c:	9203      	str	r2, [sp, #12]
 802233e:	2b00      	cmp	r3, #0
 8022340:	bfb8      	it	lt
 8022342:	f04f 33ff 	movlt.w	r3, #4294967295
 8022346:	3402      	adds	r4, #2
 8022348:	9305      	str	r3, [sp, #20]
 802234a:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8022430 <_vfiprintf_r+0x25c>
 802234e:	7821      	ldrb	r1, [r4, #0]
 8022350:	2203      	movs	r2, #3
 8022352:	4650      	mov	r0, sl
 8022354:	f7dd ff4c 	bl	80001f0 <memchr>
 8022358:	b140      	cbz	r0, 802236c <_vfiprintf_r+0x198>
 802235a:	2340      	movs	r3, #64	; 0x40
 802235c:	eba0 000a 	sub.w	r0, r0, sl
 8022360:	fa03 f000 	lsl.w	r0, r3, r0
 8022364:	9b04      	ldr	r3, [sp, #16]
 8022366:	4303      	orrs	r3, r0
 8022368:	3401      	adds	r4, #1
 802236a:	9304      	str	r3, [sp, #16]
 802236c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8022370:	482c      	ldr	r0, [pc, #176]	; (8022424 <_vfiprintf_r+0x250>)
 8022372:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8022376:	2206      	movs	r2, #6
 8022378:	f7dd ff3a 	bl	80001f0 <memchr>
 802237c:	2800      	cmp	r0, #0
 802237e:	d03f      	beq.n	8022400 <_vfiprintf_r+0x22c>
 8022380:	4b29      	ldr	r3, [pc, #164]	; (8022428 <_vfiprintf_r+0x254>)
 8022382:	bb1b      	cbnz	r3, 80223cc <_vfiprintf_r+0x1f8>
 8022384:	9b03      	ldr	r3, [sp, #12]
 8022386:	3307      	adds	r3, #7
 8022388:	f023 0307 	bic.w	r3, r3, #7
 802238c:	3308      	adds	r3, #8
 802238e:	9303      	str	r3, [sp, #12]
 8022390:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8022392:	443b      	add	r3, r7
 8022394:	9309      	str	r3, [sp, #36]	; 0x24
 8022396:	e767      	b.n	8022268 <_vfiprintf_r+0x94>
 8022398:	fb0c 3202 	mla	r2, ip, r2, r3
 802239c:	460c      	mov	r4, r1
 802239e:	2001      	movs	r0, #1
 80223a0:	e7a5      	b.n	80222ee <_vfiprintf_r+0x11a>
 80223a2:	2300      	movs	r3, #0
 80223a4:	3401      	adds	r4, #1
 80223a6:	9305      	str	r3, [sp, #20]
 80223a8:	4619      	mov	r1, r3
 80223aa:	f04f 0c0a 	mov.w	ip, #10
 80223ae:	4620      	mov	r0, r4
 80223b0:	f810 2b01 	ldrb.w	r2, [r0], #1
 80223b4:	3a30      	subs	r2, #48	; 0x30
 80223b6:	2a09      	cmp	r2, #9
 80223b8:	d903      	bls.n	80223c2 <_vfiprintf_r+0x1ee>
 80223ba:	2b00      	cmp	r3, #0
 80223bc:	d0c5      	beq.n	802234a <_vfiprintf_r+0x176>
 80223be:	9105      	str	r1, [sp, #20]
 80223c0:	e7c3      	b.n	802234a <_vfiprintf_r+0x176>
 80223c2:	fb0c 2101 	mla	r1, ip, r1, r2
 80223c6:	4604      	mov	r4, r0
 80223c8:	2301      	movs	r3, #1
 80223ca:	e7f0      	b.n	80223ae <_vfiprintf_r+0x1da>
 80223cc:	ab03      	add	r3, sp, #12
 80223ce:	9300      	str	r3, [sp, #0]
 80223d0:	462a      	mov	r2, r5
 80223d2:	4b16      	ldr	r3, [pc, #88]	; (802242c <_vfiprintf_r+0x258>)
 80223d4:	a904      	add	r1, sp, #16
 80223d6:	4630      	mov	r0, r6
 80223d8:	f3af 8000 	nop.w
 80223dc:	4607      	mov	r7, r0
 80223de:	1c78      	adds	r0, r7, #1
 80223e0:	d1d6      	bne.n	8022390 <_vfiprintf_r+0x1bc>
 80223e2:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80223e4:	07d9      	lsls	r1, r3, #31
 80223e6:	d405      	bmi.n	80223f4 <_vfiprintf_r+0x220>
 80223e8:	89ab      	ldrh	r3, [r5, #12]
 80223ea:	059a      	lsls	r2, r3, #22
 80223ec:	d402      	bmi.n	80223f4 <_vfiprintf_r+0x220>
 80223ee:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80223f0:	f7ff fdbf 	bl	8021f72 <__retarget_lock_release_recursive>
 80223f4:	89ab      	ldrh	r3, [r5, #12]
 80223f6:	065b      	lsls	r3, r3, #25
 80223f8:	f53f af12 	bmi.w	8022220 <_vfiprintf_r+0x4c>
 80223fc:	9809      	ldr	r0, [sp, #36]	; 0x24
 80223fe:	e711      	b.n	8022224 <_vfiprintf_r+0x50>
 8022400:	ab03      	add	r3, sp, #12
 8022402:	9300      	str	r3, [sp, #0]
 8022404:	462a      	mov	r2, r5
 8022406:	4b09      	ldr	r3, [pc, #36]	; (802242c <_vfiprintf_r+0x258>)
 8022408:	a904      	add	r1, sp, #16
 802240a:	4630      	mov	r0, r6
 802240c:	f000 f880 	bl	8022510 <_printf_i>
 8022410:	e7e4      	b.n	80223dc <_vfiprintf_r+0x208>
 8022412:	bf00      	nop
 8022414:	08025960 	.word	0x08025960
 8022418:	08025980 	.word	0x08025980
 802241c:	08025940 	.word	0x08025940
 8022420:	080259a4 	.word	0x080259a4
 8022424:	080259ae 	.word	0x080259ae
 8022428:	00000000 	.word	0x00000000
 802242c:	080221af 	.word	0x080221af
 8022430:	080259aa 	.word	0x080259aa

08022434 <_printf_common>:
 8022434:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8022438:	4616      	mov	r6, r2
 802243a:	4699      	mov	r9, r3
 802243c:	688a      	ldr	r2, [r1, #8]
 802243e:	690b      	ldr	r3, [r1, #16]
 8022440:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8022444:	4293      	cmp	r3, r2
 8022446:	bfb8      	it	lt
 8022448:	4613      	movlt	r3, r2
 802244a:	6033      	str	r3, [r6, #0]
 802244c:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8022450:	4607      	mov	r7, r0
 8022452:	460c      	mov	r4, r1
 8022454:	b10a      	cbz	r2, 802245a <_printf_common+0x26>
 8022456:	3301      	adds	r3, #1
 8022458:	6033      	str	r3, [r6, #0]
 802245a:	6823      	ldr	r3, [r4, #0]
 802245c:	0699      	lsls	r1, r3, #26
 802245e:	bf42      	ittt	mi
 8022460:	6833      	ldrmi	r3, [r6, #0]
 8022462:	3302      	addmi	r3, #2
 8022464:	6033      	strmi	r3, [r6, #0]
 8022466:	6825      	ldr	r5, [r4, #0]
 8022468:	f015 0506 	ands.w	r5, r5, #6
 802246c:	d106      	bne.n	802247c <_printf_common+0x48>
 802246e:	f104 0a19 	add.w	sl, r4, #25
 8022472:	68e3      	ldr	r3, [r4, #12]
 8022474:	6832      	ldr	r2, [r6, #0]
 8022476:	1a9b      	subs	r3, r3, r2
 8022478:	42ab      	cmp	r3, r5
 802247a:	dc26      	bgt.n	80224ca <_printf_common+0x96>
 802247c:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8022480:	1e13      	subs	r3, r2, #0
 8022482:	6822      	ldr	r2, [r4, #0]
 8022484:	bf18      	it	ne
 8022486:	2301      	movne	r3, #1
 8022488:	0692      	lsls	r2, r2, #26
 802248a:	d42b      	bmi.n	80224e4 <_printf_common+0xb0>
 802248c:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8022490:	4649      	mov	r1, r9
 8022492:	4638      	mov	r0, r7
 8022494:	47c0      	blx	r8
 8022496:	3001      	adds	r0, #1
 8022498:	d01e      	beq.n	80224d8 <_printf_common+0xa4>
 802249a:	6823      	ldr	r3, [r4, #0]
 802249c:	68e5      	ldr	r5, [r4, #12]
 802249e:	6832      	ldr	r2, [r6, #0]
 80224a0:	f003 0306 	and.w	r3, r3, #6
 80224a4:	2b04      	cmp	r3, #4
 80224a6:	bf08      	it	eq
 80224a8:	1aad      	subeq	r5, r5, r2
 80224aa:	68a3      	ldr	r3, [r4, #8]
 80224ac:	6922      	ldr	r2, [r4, #16]
 80224ae:	bf0c      	ite	eq
 80224b0:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80224b4:	2500      	movne	r5, #0
 80224b6:	4293      	cmp	r3, r2
 80224b8:	bfc4      	itt	gt
 80224ba:	1a9b      	subgt	r3, r3, r2
 80224bc:	18ed      	addgt	r5, r5, r3
 80224be:	2600      	movs	r6, #0
 80224c0:	341a      	adds	r4, #26
 80224c2:	42b5      	cmp	r5, r6
 80224c4:	d11a      	bne.n	80224fc <_printf_common+0xc8>
 80224c6:	2000      	movs	r0, #0
 80224c8:	e008      	b.n	80224dc <_printf_common+0xa8>
 80224ca:	2301      	movs	r3, #1
 80224cc:	4652      	mov	r2, sl
 80224ce:	4649      	mov	r1, r9
 80224d0:	4638      	mov	r0, r7
 80224d2:	47c0      	blx	r8
 80224d4:	3001      	adds	r0, #1
 80224d6:	d103      	bne.n	80224e0 <_printf_common+0xac>
 80224d8:	f04f 30ff 	mov.w	r0, #4294967295
 80224dc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80224e0:	3501      	adds	r5, #1
 80224e2:	e7c6      	b.n	8022472 <_printf_common+0x3e>
 80224e4:	18e1      	adds	r1, r4, r3
 80224e6:	1c5a      	adds	r2, r3, #1
 80224e8:	2030      	movs	r0, #48	; 0x30
 80224ea:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 80224ee:	4422      	add	r2, r4
 80224f0:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 80224f4:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 80224f8:	3302      	adds	r3, #2
 80224fa:	e7c7      	b.n	802248c <_printf_common+0x58>
 80224fc:	2301      	movs	r3, #1
 80224fe:	4622      	mov	r2, r4
 8022500:	4649      	mov	r1, r9
 8022502:	4638      	mov	r0, r7
 8022504:	47c0      	blx	r8
 8022506:	3001      	adds	r0, #1
 8022508:	d0e6      	beq.n	80224d8 <_printf_common+0xa4>
 802250a:	3601      	adds	r6, #1
 802250c:	e7d9      	b.n	80224c2 <_printf_common+0x8e>
	...

08022510 <_printf_i>:
 8022510:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8022514:	7e0f      	ldrb	r7, [r1, #24]
 8022516:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8022518:	2f78      	cmp	r7, #120	; 0x78
 802251a:	4691      	mov	r9, r2
 802251c:	4680      	mov	r8, r0
 802251e:	460c      	mov	r4, r1
 8022520:	469a      	mov	sl, r3
 8022522:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8022526:	d807      	bhi.n	8022538 <_printf_i+0x28>
 8022528:	2f62      	cmp	r7, #98	; 0x62
 802252a:	d80a      	bhi.n	8022542 <_printf_i+0x32>
 802252c:	2f00      	cmp	r7, #0
 802252e:	f000 80d8 	beq.w	80226e2 <_printf_i+0x1d2>
 8022532:	2f58      	cmp	r7, #88	; 0x58
 8022534:	f000 80a3 	beq.w	802267e <_printf_i+0x16e>
 8022538:	f104 0542 	add.w	r5, r4, #66	; 0x42
 802253c:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8022540:	e03a      	b.n	80225b8 <_printf_i+0xa8>
 8022542:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8022546:	2b15      	cmp	r3, #21
 8022548:	d8f6      	bhi.n	8022538 <_printf_i+0x28>
 802254a:	a101      	add	r1, pc, #4	; (adr r1, 8022550 <_printf_i+0x40>)
 802254c:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8022550:	080225a9 	.word	0x080225a9
 8022554:	080225bd 	.word	0x080225bd
 8022558:	08022539 	.word	0x08022539
 802255c:	08022539 	.word	0x08022539
 8022560:	08022539 	.word	0x08022539
 8022564:	08022539 	.word	0x08022539
 8022568:	080225bd 	.word	0x080225bd
 802256c:	08022539 	.word	0x08022539
 8022570:	08022539 	.word	0x08022539
 8022574:	08022539 	.word	0x08022539
 8022578:	08022539 	.word	0x08022539
 802257c:	080226c9 	.word	0x080226c9
 8022580:	080225ed 	.word	0x080225ed
 8022584:	080226ab 	.word	0x080226ab
 8022588:	08022539 	.word	0x08022539
 802258c:	08022539 	.word	0x08022539
 8022590:	080226eb 	.word	0x080226eb
 8022594:	08022539 	.word	0x08022539
 8022598:	080225ed 	.word	0x080225ed
 802259c:	08022539 	.word	0x08022539
 80225a0:	08022539 	.word	0x08022539
 80225a4:	080226b3 	.word	0x080226b3
 80225a8:	682b      	ldr	r3, [r5, #0]
 80225aa:	1d1a      	adds	r2, r3, #4
 80225ac:	681b      	ldr	r3, [r3, #0]
 80225ae:	602a      	str	r2, [r5, #0]
 80225b0:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80225b4:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80225b8:	2301      	movs	r3, #1
 80225ba:	e0a3      	b.n	8022704 <_printf_i+0x1f4>
 80225bc:	6820      	ldr	r0, [r4, #0]
 80225be:	6829      	ldr	r1, [r5, #0]
 80225c0:	0606      	lsls	r6, r0, #24
 80225c2:	f101 0304 	add.w	r3, r1, #4
 80225c6:	d50a      	bpl.n	80225de <_printf_i+0xce>
 80225c8:	680e      	ldr	r6, [r1, #0]
 80225ca:	602b      	str	r3, [r5, #0]
 80225cc:	2e00      	cmp	r6, #0
 80225ce:	da03      	bge.n	80225d8 <_printf_i+0xc8>
 80225d0:	232d      	movs	r3, #45	; 0x2d
 80225d2:	4276      	negs	r6, r6
 80225d4:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80225d8:	485e      	ldr	r0, [pc, #376]	; (8022754 <_printf_i+0x244>)
 80225da:	230a      	movs	r3, #10
 80225dc:	e019      	b.n	8022612 <_printf_i+0x102>
 80225de:	680e      	ldr	r6, [r1, #0]
 80225e0:	602b      	str	r3, [r5, #0]
 80225e2:	f010 0f40 	tst.w	r0, #64	; 0x40
 80225e6:	bf18      	it	ne
 80225e8:	b236      	sxthne	r6, r6
 80225ea:	e7ef      	b.n	80225cc <_printf_i+0xbc>
 80225ec:	682b      	ldr	r3, [r5, #0]
 80225ee:	6820      	ldr	r0, [r4, #0]
 80225f0:	1d19      	adds	r1, r3, #4
 80225f2:	6029      	str	r1, [r5, #0]
 80225f4:	0601      	lsls	r1, r0, #24
 80225f6:	d501      	bpl.n	80225fc <_printf_i+0xec>
 80225f8:	681e      	ldr	r6, [r3, #0]
 80225fa:	e002      	b.n	8022602 <_printf_i+0xf2>
 80225fc:	0646      	lsls	r6, r0, #25
 80225fe:	d5fb      	bpl.n	80225f8 <_printf_i+0xe8>
 8022600:	881e      	ldrh	r6, [r3, #0]
 8022602:	4854      	ldr	r0, [pc, #336]	; (8022754 <_printf_i+0x244>)
 8022604:	2f6f      	cmp	r7, #111	; 0x6f
 8022606:	bf0c      	ite	eq
 8022608:	2308      	moveq	r3, #8
 802260a:	230a      	movne	r3, #10
 802260c:	2100      	movs	r1, #0
 802260e:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8022612:	6865      	ldr	r5, [r4, #4]
 8022614:	60a5      	str	r5, [r4, #8]
 8022616:	2d00      	cmp	r5, #0
 8022618:	bfa2      	ittt	ge
 802261a:	6821      	ldrge	r1, [r4, #0]
 802261c:	f021 0104 	bicge.w	r1, r1, #4
 8022620:	6021      	strge	r1, [r4, #0]
 8022622:	b90e      	cbnz	r6, 8022628 <_printf_i+0x118>
 8022624:	2d00      	cmp	r5, #0
 8022626:	d04d      	beq.n	80226c4 <_printf_i+0x1b4>
 8022628:	4615      	mov	r5, r2
 802262a:	fbb6 f1f3 	udiv	r1, r6, r3
 802262e:	fb03 6711 	mls	r7, r3, r1, r6
 8022632:	5dc7      	ldrb	r7, [r0, r7]
 8022634:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8022638:	4637      	mov	r7, r6
 802263a:	42bb      	cmp	r3, r7
 802263c:	460e      	mov	r6, r1
 802263e:	d9f4      	bls.n	802262a <_printf_i+0x11a>
 8022640:	2b08      	cmp	r3, #8
 8022642:	d10b      	bne.n	802265c <_printf_i+0x14c>
 8022644:	6823      	ldr	r3, [r4, #0]
 8022646:	07de      	lsls	r6, r3, #31
 8022648:	d508      	bpl.n	802265c <_printf_i+0x14c>
 802264a:	6923      	ldr	r3, [r4, #16]
 802264c:	6861      	ldr	r1, [r4, #4]
 802264e:	4299      	cmp	r1, r3
 8022650:	bfde      	ittt	le
 8022652:	2330      	movle	r3, #48	; 0x30
 8022654:	f805 3c01 	strble.w	r3, [r5, #-1]
 8022658:	f105 35ff 	addle.w	r5, r5, #4294967295
 802265c:	1b52      	subs	r2, r2, r5
 802265e:	6122      	str	r2, [r4, #16]
 8022660:	f8cd a000 	str.w	sl, [sp]
 8022664:	464b      	mov	r3, r9
 8022666:	aa03      	add	r2, sp, #12
 8022668:	4621      	mov	r1, r4
 802266a:	4640      	mov	r0, r8
 802266c:	f7ff fee2 	bl	8022434 <_printf_common>
 8022670:	3001      	adds	r0, #1
 8022672:	d14c      	bne.n	802270e <_printf_i+0x1fe>
 8022674:	f04f 30ff 	mov.w	r0, #4294967295
 8022678:	b004      	add	sp, #16
 802267a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802267e:	4835      	ldr	r0, [pc, #212]	; (8022754 <_printf_i+0x244>)
 8022680:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 8022684:	6829      	ldr	r1, [r5, #0]
 8022686:	6823      	ldr	r3, [r4, #0]
 8022688:	f851 6b04 	ldr.w	r6, [r1], #4
 802268c:	6029      	str	r1, [r5, #0]
 802268e:	061d      	lsls	r5, r3, #24
 8022690:	d514      	bpl.n	80226bc <_printf_i+0x1ac>
 8022692:	07df      	lsls	r7, r3, #31
 8022694:	bf44      	itt	mi
 8022696:	f043 0320 	orrmi.w	r3, r3, #32
 802269a:	6023      	strmi	r3, [r4, #0]
 802269c:	b91e      	cbnz	r6, 80226a6 <_printf_i+0x196>
 802269e:	6823      	ldr	r3, [r4, #0]
 80226a0:	f023 0320 	bic.w	r3, r3, #32
 80226a4:	6023      	str	r3, [r4, #0]
 80226a6:	2310      	movs	r3, #16
 80226a8:	e7b0      	b.n	802260c <_printf_i+0xfc>
 80226aa:	6823      	ldr	r3, [r4, #0]
 80226ac:	f043 0320 	orr.w	r3, r3, #32
 80226b0:	6023      	str	r3, [r4, #0]
 80226b2:	2378      	movs	r3, #120	; 0x78
 80226b4:	4828      	ldr	r0, [pc, #160]	; (8022758 <_printf_i+0x248>)
 80226b6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 80226ba:	e7e3      	b.n	8022684 <_printf_i+0x174>
 80226bc:	0659      	lsls	r1, r3, #25
 80226be:	bf48      	it	mi
 80226c0:	b2b6      	uxthmi	r6, r6
 80226c2:	e7e6      	b.n	8022692 <_printf_i+0x182>
 80226c4:	4615      	mov	r5, r2
 80226c6:	e7bb      	b.n	8022640 <_printf_i+0x130>
 80226c8:	682b      	ldr	r3, [r5, #0]
 80226ca:	6826      	ldr	r6, [r4, #0]
 80226cc:	6961      	ldr	r1, [r4, #20]
 80226ce:	1d18      	adds	r0, r3, #4
 80226d0:	6028      	str	r0, [r5, #0]
 80226d2:	0635      	lsls	r5, r6, #24
 80226d4:	681b      	ldr	r3, [r3, #0]
 80226d6:	d501      	bpl.n	80226dc <_printf_i+0x1cc>
 80226d8:	6019      	str	r1, [r3, #0]
 80226da:	e002      	b.n	80226e2 <_printf_i+0x1d2>
 80226dc:	0670      	lsls	r0, r6, #25
 80226de:	d5fb      	bpl.n	80226d8 <_printf_i+0x1c8>
 80226e0:	8019      	strh	r1, [r3, #0]
 80226e2:	2300      	movs	r3, #0
 80226e4:	6123      	str	r3, [r4, #16]
 80226e6:	4615      	mov	r5, r2
 80226e8:	e7ba      	b.n	8022660 <_printf_i+0x150>
 80226ea:	682b      	ldr	r3, [r5, #0]
 80226ec:	1d1a      	adds	r2, r3, #4
 80226ee:	602a      	str	r2, [r5, #0]
 80226f0:	681d      	ldr	r5, [r3, #0]
 80226f2:	6862      	ldr	r2, [r4, #4]
 80226f4:	2100      	movs	r1, #0
 80226f6:	4628      	mov	r0, r5
 80226f8:	f7dd fd7a 	bl	80001f0 <memchr>
 80226fc:	b108      	cbz	r0, 8022702 <_printf_i+0x1f2>
 80226fe:	1b40      	subs	r0, r0, r5
 8022700:	6060      	str	r0, [r4, #4]
 8022702:	6863      	ldr	r3, [r4, #4]
 8022704:	6123      	str	r3, [r4, #16]
 8022706:	2300      	movs	r3, #0
 8022708:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802270c:	e7a8      	b.n	8022660 <_printf_i+0x150>
 802270e:	6923      	ldr	r3, [r4, #16]
 8022710:	462a      	mov	r2, r5
 8022712:	4649      	mov	r1, r9
 8022714:	4640      	mov	r0, r8
 8022716:	47d0      	blx	sl
 8022718:	3001      	adds	r0, #1
 802271a:	d0ab      	beq.n	8022674 <_printf_i+0x164>
 802271c:	6823      	ldr	r3, [r4, #0]
 802271e:	079b      	lsls	r3, r3, #30
 8022720:	d413      	bmi.n	802274a <_printf_i+0x23a>
 8022722:	68e0      	ldr	r0, [r4, #12]
 8022724:	9b03      	ldr	r3, [sp, #12]
 8022726:	4298      	cmp	r0, r3
 8022728:	bfb8      	it	lt
 802272a:	4618      	movlt	r0, r3
 802272c:	e7a4      	b.n	8022678 <_printf_i+0x168>
 802272e:	2301      	movs	r3, #1
 8022730:	4632      	mov	r2, r6
 8022732:	4649      	mov	r1, r9
 8022734:	4640      	mov	r0, r8
 8022736:	47d0      	blx	sl
 8022738:	3001      	adds	r0, #1
 802273a:	d09b      	beq.n	8022674 <_printf_i+0x164>
 802273c:	3501      	adds	r5, #1
 802273e:	68e3      	ldr	r3, [r4, #12]
 8022740:	9903      	ldr	r1, [sp, #12]
 8022742:	1a5b      	subs	r3, r3, r1
 8022744:	42ab      	cmp	r3, r5
 8022746:	dcf2      	bgt.n	802272e <_printf_i+0x21e>
 8022748:	e7eb      	b.n	8022722 <_printf_i+0x212>
 802274a:	2500      	movs	r5, #0
 802274c:	f104 0619 	add.w	r6, r4, #25
 8022750:	e7f5      	b.n	802273e <_printf_i+0x22e>
 8022752:	bf00      	nop
 8022754:	080259b5 	.word	0x080259b5
 8022758:	080259c6 	.word	0x080259c6

0802275c <cleanup_glue>:
 802275c:	b538      	push	{r3, r4, r5, lr}
 802275e:	460c      	mov	r4, r1
 8022760:	6809      	ldr	r1, [r1, #0]
 8022762:	4605      	mov	r5, r0
 8022764:	b109      	cbz	r1, 802276a <cleanup_glue+0xe>
 8022766:	f7ff fff9 	bl	802275c <cleanup_glue>
 802276a:	4621      	mov	r1, r4
 802276c:	4628      	mov	r0, r5
 802276e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8022772:	f7ff bc25 	b.w	8021fc0 <_free_r>
	...

08022778 <_reclaim_reent>:
 8022778:	4b2c      	ldr	r3, [pc, #176]	; (802282c <_reclaim_reent+0xb4>)
 802277a:	681b      	ldr	r3, [r3, #0]
 802277c:	4283      	cmp	r3, r0
 802277e:	b570      	push	{r4, r5, r6, lr}
 8022780:	4604      	mov	r4, r0
 8022782:	d051      	beq.n	8022828 <_reclaim_reent+0xb0>
 8022784:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8022786:	b143      	cbz	r3, 802279a <_reclaim_reent+0x22>
 8022788:	68db      	ldr	r3, [r3, #12]
 802278a:	2b00      	cmp	r3, #0
 802278c:	d14a      	bne.n	8022824 <_reclaim_reent+0xac>
 802278e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8022790:	6819      	ldr	r1, [r3, #0]
 8022792:	b111      	cbz	r1, 802279a <_reclaim_reent+0x22>
 8022794:	4620      	mov	r0, r4
 8022796:	f7ff fc13 	bl	8021fc0 <_free_r>
 802279a:	6961      	ldr	r1, [r4, #20]
 802279c:	b111      	cbz	r1, 80227a4 <_reclaim_reent+0x2c>
 802279e:	4620      	mov	r0, r4
 80227a0:	f7ff fc0e 	bl	8021fc0 <_free_r>
 80227a4:	6a61      	ldr	r1, [r4, #36]	; 0x24
 80227a6:	b111      	cbz	r1, 80227ae <_reclaim_reent+0x36>
 80227a8:	4620      	mov	r0, r4
 80227aa:	f7ff fc09 	bl	8021fc0 <_free_r>
 80227ae:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 80227b0:	b111      	cbz	r1, 80227b8 <_reclaim_reent+0x40>
 80227b2:	4620      	mov	r0, r4
 80227b4:	f7ff fc04 	bl	8021fc0 <_free_r>
 80227b8:	6be1      	ldr	r1, [r4, #60]	; 0x3c
 80227ba:	b111      	cbz	r1, 80227c2 <_reclaim_reent+0x4a>
 80227bc:	4620      	mov	r0, r4
 80227be:	f7ff fbff 	bl	8021fc0 <_free_r>
 80227c2:	6c21      	ldr	r1, [r4, #64]	; 0x40
 80227c4:	b111      	cbz	r1, 80227cc <_reclaim_reent+0x54>
 80227c6:	4620      	mov	r0, r4
 80227c8:	f7ff fbfa 	bl	8021fc0 <_free_r>
 80227cc:	6de1      	ldr	r1, [r4, #92]	; 0x5c
 80227ce:	b111      	cbz	r1, 80227d6 <_reclaim_reent+0x5e>
 80227d0:	4620      	mov	r0, r4
 80227d2:	f7ff fbf5 	bl	8021fc0 <_free_r>
 80227d6:	6da1      	ldr	r1, [r4, #88]	; 0x58
 80227d8:	b111      	cbz	r1, 80227e0 <_reclaim_reent+0x68>
 80227da:	4620      	mov	r0, r4
 80227dc:	f7ff fbf0 	bl	8021fc0 <_free_r>
 80227e0:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80227e2:	b111      	cbz	r1, 80227ea <_reclaim_reent+0x72>
 80227e4:	4620      	mov	r0, r4
 80227e6:	f7ff fbeb 	bl	8021fc0 <_free_r>
 80227ea:	69a3      	ldr	r3, [r4, #24]
 80227ec:	b1e3      	cbz	r3, 8022828 <_reclaim_reent+0xb0>
 80227ee:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 80227f0:	4620      	mov	r0, r4
 80227f2:	4798      	blx	r3
 80227f4:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 80227f6:	b1b9      	cbz	r1, 8022828 <_reclaim_reent+0xb0>
 80227f8:	4620      	mov	r0, r4
 80227fa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80227fe:	f7ff bfad 	b.w	802275c <cleanup_glue>
 8022802:	5949      	ldr	r1, [r1, r5]
 8022804:	b941      	cbnz	r1, 8022818 <_reclaim_reent+0xa0>
 8022806:	3504      	adds	r5, #4
 8022808:	6a63      	ldr	r3, [r4, #36]	; 0x24
 802280a:	2d80      	cmp	r5, #128	; 0x80
 802280c:	68d9      	ldr	r1, [r3, #12]
 802280e:	d1f8      	bne.n	8022802 <_reclaim_reent+0x8a>
 8022810:	4620      	mov	r0, r4
 8022812:	f7ff fbd5 	bl	8021fc0 <_free_r>
 8022816:	e7ba      	b.n	802278e <_reclaim_reent+0x16>
 8022818:	680e      	ldr	r6, [r1, #0]
 802281a:	4620      	mov	r0, r4
 802281c:	f7ff fbd0 	bl	8021fc0 <_free_r>
 8022820:	4631      	mov	r1, r6
 8022822:	e7ef      	b.n	8022804 <_reclaim_reent+0x8c>
 8022824:	2500      	movs	r5, #0
 8022826:	e7ef      	b.n	8022808 <_reclaim_reent+0x90>
 8022828:	bd70      	pop	{r4, r5, r6, pc}
 802282a:	bf00      	nop
 802282c:	20000100 	.word	0x20000100

08022830 <_sbrk_r>:
 8022830:	b538      	push	{r3, r4, r5, lr}
 8022832:	4d06      	ldr	r5, [pc, #24]	; (802284c <_sbrk_r+0x1c>)
 8022834:	2300      	movs	r3, #0
 8022836:	4604      	mov	r4, r0
 8022838:	4608      	mov	r0, r1
 802283a:	602b      	str	r3, [r5, #0]
 802283c:	f7df fbfa 	bl	8002034 <_sbrk>
 8022840:	1c43      	adds	r3, r0, #1
 8022842:	d102      	bne.n	802284a <_sbrk_r+0x1a>
 8022844:	682b      	ldr	r3, [r5, #0]
 8022846:	b103      	cbz	r3, 802284a <_sbrk_r+0x1a>
 8022848:	6023      	str	r3, [r4, #0]
 802284a:	bd38      	pop	{r3, r4, r5, pc}
 802284c:	20017b64 	.word	0x20017b64

08022850 <_raise_r>:
 8022850:	291f      	cmp	r1, #31
 8022852:	b538      	push	{r3, r4, r5, lr}
 8022854:	4604      	mov	r4, r0
 8022856:	460d      	mov	r5, r1
 8022858:	d904      	bls.n	8022864 <_raise_r+0x14>
 802285a:	2316      	movs	r3, #22
 802285c:	6003      	str	r3, [r0, #0]
 802285e:	f04f 30ff 	mov.w	r0, #4294967295
 8022862:	bd38      	pop	{r3, r4, r5, pc}
 8022864:	6c42      	ldr	r2, [r0, #68]	; 0x44
 8022866:	b112      	cbz	r2, 802286e <_raise_r+0x1e>
 8022868:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 802286c:	b94b      	cbnz	r3, 8022882 <_raise_r+0x32>
 802286e:	4620      	mov	r0, r4
 8022870:	f000 f830 	bl	80228d4 <_getpid_r>
 8022874:	462a      	mov	r2, r5
 8022876:	4601      	mov	r1, r0
 8022878:	4620      	mov	r0, r4
 802287a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 802287e:	f000 b817 	b.w	80228b0 <_kill_r>
 8022882:	2b01      	cmp	r3, #1
 8022884:	d00a      	beq.n	802289c <_raise_r+0x4c>
 8022886:	1c59      	adds	r1, r3, #1
 8022888:	d103      	bne.n	8022892 <_raise_r+0x42>
 802288a:	2316      	movs	r3, #22
 802288c:	6003      	str	r3, [r0, #0]
 802288e:	2001      	movs	r0, #1
 8022890:	e7e7      	b.n	8022862 <_raise_r+0x12>
 8022892:	2400      	movs	r4, #0
 8022894:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 8022898:	4628      	mov	r0, r5
 802289a:	4798      	blx	r3
 802289c:	2000      	movs	r0, #0
 802289e:	e7e0      	b.n	8022862 <_raise_r+0x12>

080228a0 <raise>:
 80228a0:	4b02      	ldr	r3, [pc, #8]	; (80228ac <raise+0xc>)
 80228a2:	4601      	mov	r1, r0
 80228a4:	6818      	ldr	r0, [r3, #0]
 80228a6:	f7ff bfd3 	b.w	8022850 <_raise_r>
 80228aa:	bf00      	nop
 80228ac:	20000100 	.word	0x20000100

080228b0 <_kill_r>:
 80228b0:	b538      	push	{r3, r4, r5, lr}
 80228b2:	4d07      	ldr	r5, [pc, #28]	; (80228d0 <_kill_r+0x20>)
 80228b4:	2300      	movs	r3, #0
 80228b6:	4604      	mov	r4, r0
 80228b8:	4608      	mov	r0, r1
 80228ba:	4611      	mov	r1, r2
 80228bc:	602b      	str	r3, [r5, #0]
 80228be:	f7df fb83 	bl	8001fc8 <_kill>
 80228c2:	1c43      	adds	r3, r0, #1
 80228c4:	d102      	bne.n	80228cc <_kill_r+0x1c>
 80228c6:	682b      	ldr	r3, [r5, #0]
 80228c8:	b103      	cbz	r3, 80228cc <_kill_r+0x1c>
 80228ca:	6023      	str	r3, [r4, #0]
 80228cc:	bd38      	pop	{r3, r4, r5, pc}
 80228ce:	bf00      	nop
 80228d0:	20017b64 	.word	0x20017b64

080228d4 <_getpid_r>:
 80228d4:	f7df bb76 	b.w	8001fc4 <_getpid>

080228d8 <__sread>:
 80228d8:	b510      	push	{r4, lr}
 80228da:	460c      	mov	r4, r1
 80228dc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80228e0:	f000 fac8 	bl	8022e74 <_read_r>
 80228e4:	2800      	cmp	r0, #0
 80228e6:	bfab      	itete	ge
 80228e8:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 80228ea:	89a3      	ldrhlt	r3, [r4, #12]
 80228ec:	181b      	addge	r3, r3, r0
 80228ee:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 80228f2:	bfac      	ite	ge
 80228f4:	6563      	strge	r3, [r4, #84]	; 0x54
 80228f6:	81a3      	strhlt	r3, [r4, #12]
 80228f8:	bd10      	pop	{r4, pc}

080228fa <__swrite>:
 80228fa:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80228fe:	461f      	mov	r7, r3
 8022900:	898b      	ldrh	r3, [r1, #12]
 8022902:	05db      	lsls	r3, r3, #23
 8022904:	4605      	mov	r5, r0
 8022906:	460c      	mov	r4, r1
 8022908:	4616      	mov	r6, r2
 802290a:	d505      	bpl.n	8022918 <__swrite+0x1e>
 802290c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8022910:	2302      	movs	r3, #2
 8022912:	2200      	movs	r2, #0
 8022914:	f000 fa2a 	bl	8022d6c <_lseek_r>
 8022918:	89a3      	ldrh	r3, [r4, #12]
 802291a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802291e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8022922:	81a3      	strh	r3, [r4, #12]
 8022924:	4632      	mov	r2, r6
 8022926:	463b      	mov	r3, r7
 8022928:	4628      	mov	r0, r5
 802292a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802292e:	f000 b869 	b.w	8022a04 <_write_r>

08022932 <__sseek>:
 8022932:	b510      	push	{r4, lr}
 8022934:	460c      	mov	r4, r1
 8022936:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802293a:	f000 fa17 	bl	8022d6c <_lseek_r>
 802293e:	1c43      	adds	r3, r0, #1
 8022940:	89a3      	ldrh	r3, [r4, #12]
 8022942:	bf15      	itete	ne
 8022944:	6560      	strne	r0, [r4, #84]	; 0x54
 8022946:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 802294a:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 802294e:	81a3      	strheq	r3, [r4, #12]
 8022950:	bf18      	it	ne
 8022952:	81a3      	strhne	r3, [r4, #12]
 8022954:	bd10      	pop	{r4, pc}

08022956 <__sclose>:
 8022956:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802295a:	f000 b935 	b.w	8022bc8 <_close_r>
	...

08022960 <__swbuf_r>:
 8022960:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8022962:	460e      	mov	r6, r1
 8022964:	4614      	mov	r4, r2
 8022966:	4605      	mov	r5, r0
 8022968:	b118      	cbz	r0, 8022972 <__swbuf_r+0x12>
 802296a:	6983      	ldr	r3, [r0, #24]
 802296c:	b90b      	cbnz	r3, 8022972 <__swbuf_r+0x12>
 802296e:	f7ff fa29 	bl	8021dc4 <__sinit>
 8022972:	4b21      	ldr	r3, [pc, #132]	; (80229f8 <__swbuf_r+0x98>)
 8022974:	429c      	cmp	r4, r3
 8022976:	d12b      	bne.n	80229d0 <__swbuf_r+0x70>
 8022978:	686c      	ldr	r4, [r5, #4]
 802297a:	69a3      	ldr	r3, [r4, #24]
 802297c:	60a3      	str	r3, [r4, #8]
 802297e:	89a3      	ldrh	r3, [r4, #12]
 8022980:	071a      	lsls	r2, r3, #28
 8022982:	d52f      	bpl.n	80229e4 <__swbuf_r+0x84>
 8022984:	6923      	ldr	r3, [r4, #16]
 8022986:	b36b      	cbz	r3, 80229e4 <__swbuf_r+0x84>
 8022988:	6923      	ldr	r3, [r4, #16]
 802298a:	6820      	ldr	r0, [r4, #0]
 802298c:	1ac0      	subs	r0, r0, r3
 802298e:	6963      	ldr	r3, [r4, #20]
 8022990:	b2f6      	uxtb	r6, r6
 8022992:	4283      	cmp	r3, r0
 8022994:	4637      	mov	r7, r6
 8022996:	dc04      	bgt.n	80229a2 <__swbuf_r+0x42>
 8022998:	4621      	mov	r1, r4
 802299a:	4628      	mov	r0, r5
 802299c:	f000 f9aa 	bl	8022cf4 <_fflush_r>
 80229a0:	bb30      	cbnz	r0, 80229f0 <__swbuf_r+0x90>
 80229a2:	68a3      	ldr	r3, [r4, #8]
 80229a4:	3b01      	subs	r3, #1
 80229a6:	60a3      	str	r3, [r4, #8]
 80229a8:	6823      	ldr	r3, [r4, #0]
 80229aa:	1c5a      	adds	r2, r3, #1
 80229ac:	6022      	str	r2, [r4, #0]
 80229ae:	701e      	strb	r6, [r3, #0]
 80229b0:	6963      	ldr	r3, [r4, #20]
 80229b2:	3001      	adds	r0, #1
 80229b4:	4283      	cmp	r3, r0
 80229b6:	d004      	beq.n	80229c2 <__swbuf_r+0x62>
 80229b8:	89a3      	ldrh	r3, [r4, #12]
 80229ba:	07db      	lsls	r3, r3, #31
 80229bc:	d506      	bpl.n	80229cc <__swbuf_r+0x6c>
 80229be:	2e0a      	cmp	r6, #10
 80229c0:	d104      	bne.n	80229cc <__swbuf_r+0x6c>
 80229c2:	4621      	mov	r1, r4
 80229c4:	4628      	mov	r0, r5
 80229c6:	f000 f995 	bl	8022cf4 <_fflush_r>
 80229ca:	b988      	cbnz	r0, 80229f0 <__swbuf_r+0x90>
 80229cc:	4638      	mov	r0, r7
 80229ce:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80229d0:	4b0a      	ldr	r3, [pc, #40]	; (80229fc <__swbuf_r+0x9c>)
 80229d2:	429c      	cmp	r4, r3
 80229d4:	d101      	bne.n	80229da <__swbuf_r+0x7a>
 80229d6:	68ac      	ldr	r4, [r5, #8]
 80229d8:	e7cf      	b.n	802297a <__swbuf_r+0x1a>
 80229da:	4b09      	ldr	r3, [pc, #36]	; (8022a00 <__swbuf_r+0xa0>)
 80229dc:	429c      	cmp	r4, r3
 80229de:	bf08      	it	eq
 80229e0:	68ec      	ldreq	r4, [r5, #12]
 80229e2:	e7ca      	b.n	802297a <__swbuf_r+0x1a>
 80229e4:	4621      	mov	r1, r4
 80229e6:	4628      	mov	r0, r5
 80229e8:	f000 f81e 	bl	8022a28 <__swsetup_r>
 80229ec:	2800      	cmp	r0, #0
 80229ee:	d0cb      	beq.n	8022988 <__swbuf_r+0x28>
 80229f0:	f04f 37ff 	mov.w	r7, #4294967295
 80229f4:	e7ea      	b.n	80229cc <__swbuf_r+0x6c>
 80229f6:	bf00      	nop
 80229f8:	08025960 	.word	0x08025960
 80229fc:	08025980 	.word	0x08025980
 8022a00:	08025940 	.word	0x08025940

08022a04 <_write_r>:
 8022a04:	b538      	push	{r3, r4, r5, lr}
 8022a06:	4d07      	ldr	r5, [pc, #28]	; (8022a24 <_write_r+0x20>)
 8022a08:	4604      	mov	r4, r0
 8022a0a:	4608      	mov	r0, r1
 8022a0c:	4611      	mov	r1, r2
 8022a0e:	2200      	movs	r2, #0
 8022a10:	602a      	str	r2, [r5, #0]
 8022a12:	461a      	mov	r2, r3
 8022a14:	f7df faf4 	bl	8002000 <_write>
 8022a18:	1c43      	adds	r3, r0, #1
 8022a1a:	d102      	bne.n	8022a22 <_write_r+0x1e>
 8022a1c:	682b      	ldr	r3, [r5, #0]
 8022a1e:	b103      	cbz	r3, 8022a22 <_write_r+0x1e>
 8022a20:	6023      	str	r3, [r4, #0]
 8022a22:	bd38      	pop	{r3, r4, r5, pc}
 8022a24:	20017b64 	.word	0x20017b64

08022a28 <__swsetup_r>:
 8022a28:	4b32      	ldr	r3, [pc, #200]	; (8022af4 <__swsetup_r+0xcc>)
 8022a2a:	b570      	push	{r4, r5, r6, lr}
 8022a2c:	681d      	ldr	r5, [r3, #0]
 8022a2e:	4606      	mov	r6, r0
 8022a30:	460c      	mov	r4, r1
 8022a32:	b125      	cbz	r5, 8022a3e <__swsetup_r+0x16>
 8022a34:	69ab      	ldr	r3, [r5, #24]
 8022a36:	b913      	cbnz	r3, 8022a3e <__swsetup_r+0x16>
 8022a38:	4628      	mov	r0, r5
 8022a3a:	f7ff f9c3 	bl	8021dc4 <__sinit>
 8022a3e:	4b2e      	ldr	r3, [pc, #184]	; (8022af8 <__swsetup_r+0xd0>)
 8022a40:	429c      	cmp	r4, r3
 8022a42:	d10f      	bne.n	8022a64 <__swsetup_r+0x3c>
 8022a44:	686c      	ldr	r4, [r5, #4]
 8022a46:	89a3      	ldrh	r3, [r4, #12]
 8022a48:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8022a4c:	0719      	lsls	r1, r3, #28
 8022a4e:	d42c      	bmi.n	8022aaa <__swsetup_r+0x82>
 8022a50:	06dd      	lsls	r5, r3, #27
 8022a52:	d411      	bmi.n	8022a78 <__swsetup_r+0x50>
 8022a54:	2309      	movs	r3, #9
 8022a56:	6033      	str	r3, [r6, #0]
 8022a58:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8022a5c:	81a3      	strh	r3, [r4, #12]
 8022a5e:	f04f 30ff 	mov.w	r0, #4294967295
 8022a62:	e03e      	b.n	8022ae2 <__swsetup_r+0xba>
 8022a64:	4b25      	ldr	r3, [pc, #148]	; (8022afc <__swsetup_r+0xd4>)
 8022a66:	429c      	cmp	r4, r3
 8022a68:	d101      	bne.n	8022a6e <__swsetup_r+0x46>
 8022a6a:	68ac      	ldr	r4, [r5, #8]
 8022a6c:	e7eb      	b.n	8022a46 <__swsetup_r+0x1e>
 8022a6e:	4b24      	ldr	r3, [pc, #144]	; (8022b00 <__swsetup_r+0xd8>)
 8022a70:	429c      	cmp	r4, r3
 8022a72:	bf08      	it	eq
 8022a74:	68ec      	ldreq	r4, [r5, #12]
 8022a76:	e7e6      	b.n	8022a46 <__swsetup_r+0x1e>
 8022a78:	0758      	lsls	r0, r3, #29
 8022a7a:	d512      	bpl.n	8022aa2 <__swsetup_r+0x7a>
 8022a7c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8022a7e:	b141      	cbz	r1, 8022a92 <__swsetup_r+0x6a>
 8022a80:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8022a84:	4299      	cmp	r1, r3
 8022a86:	d002      	beq.n	8022a8e <__swsetup_r+0x66>
 8022a88:	4630      	mov	r0, r6
 8022a8a:	f7ff fa99 	bl	8021fc0 <_free_r>
 8022a8e:	2300      	movs	r3, #0
 8022a90:	6363      	str	r3, [r4, #52]	; 0x34
 8022a92:	89a3      	ldrh	r3, [r4, #12]
 8022a94:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8022a98:	81a3      	strh	r3, [r4, #12]
 8022a9a:	2300      	movs	r3, #0
 8022a9c:	6063      	str	r3, [r4, #4]
 8022a9e:	6923      	ldr	r3, [r4, #16]
 8022aa0:	6023      	str	r3, [r4, #0]
 8022aa2:	89a3      	ldrh	r3, [r4, #12]
 8022aa4:	f043 0308 	orr.w	r3, r3, #8
 8022aa8:	81a3      	strh	r3, [r4, #12]
 8022aaa:	6923      	ldr	r3, [r4, #16]
 8022aac:	b94b      	cbnz	r3, 8022ac2 <__swsetup_r+0x9a>
 8022aae:	89a3      	ldrh	r3, [r4, #12]
 8022ab0:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8022ab4:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8022ab8:	d003      	beq.n	8022ac2 <__swsetup_r+0x9a>
 8022aba:	4621      	mov	r1, r4
 8022abc:	4630      	mov	r0, r6
 8022abe:	f000 f98d 	bl	8022ddc <__smakebuf_r>
 8022ac2:	89a0      	ldrh	r0, [r4, #12]
 8022ac4:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8022ac8:	f010 0301 	ands.w	r3, r0, #1
 8022acc:	d00a      	beq.n	8022ae4 <__swsetup_r+0xbc>
 8022ace:	2300      	movs	r3, #0
 8022ad0:	60a3      	str	r3, [r4, #8]
 8022ad2:	6963      	ldr	r3, [r4, #20]
 8022ad4:	425b      	negs	r3, r3
 8022ad6:	61a3      	str	r3, [r4, #24]
 8022ad8:	6923      	ldr	r3, [r4, #16]
 8022ada:	b943      	cbnz	r3, 8022aee <__swsetup_r+0xc6>
 8022adc:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8022ae0:	d1ba      	bne.n	8022a58 <__swsetup_r+0x30>
 8022ae2:	bd70      	pop	{r4, r5, r6, pc}
 8022ae4:	0781      	lsls	r1, r0, #30
 8022ae6:	bf58      	it	pl
 8022ae8:	6963      	ldrpl	r3, [r4, #20]
 8022aea:	60a3      	str	r3, [r4, #8]
 8022aec:	e7f4      	b.n	8022ad8 <__swsetup_r+0xb0>
 8022aee:	2000      	movs	r0, #0
 8022af0:	e7f7      	b.n	8022ae2 <__swsetup_r+0xba>
 8022af2:	bf00      	nop
 8022af4:	20000100 	.word	0x20000100
 8022af8:	08025960 	.word	0x08025960
 8022afc:	08025980 	.word	0x08025980
 8022b00:	08025940 	.word	0x08025940

08022b04 <__register_exitproc>:
 8022b04:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8022b08:	f8df 80b8 	ldr.w	r8, [pc, #184]	; 8022bc4 <__register_exitproc+0xc0>
 8022b0c:	4606      	mov	r6, r0
 8022b0e:	f8d8 0000 	ldr.w	r0, [r8]
 8022b12:	461f      	mov	r7, r3
 8022b14:	460d      	mov	r5, r1
 8022b16:	4691      	mov	r9, r2
 8022b18:	f7ff fa29 	bl	8021f6e <__retarget_lock_acquire_recursive>
 8022b1c:	4b25      	ldr	r3, [pc, #148]	; (8022bb4 <__register_exitproc+0xb0>)
 8022b1e:	681c      	ldr	r4, [r3, #0]
 8022b20:	b934      	cbnz	r4, 8022b30 <__register_exitproc+0x2c>
 8022b22:	4c25      	ldr	r4, [pc, #148]	; (8022bb8 <__register_exitproc+0xb4>)
 8022b24:	601c      	str	r4, [r3, #0]
 8022b26:	4b25      	ldr	r3, [pc, #148]	; (8022bbc <__register_exitproc+0xb8>)
 8022b28:	b113      	cbz	r3, 8022b30 <__register_exitproc+0x2c>
 8022b2a:	681b      	ldr	r3, [r3, #0]
 8022b2c:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 8022b30:	6863      	ldr	r3, [r4, #4]
 8022b32:	2b1f      	cmp	r3, #31
 8022b34:	dd07      	ble.n	8022b46 <__register_exitproc+0x42>
 8022b36:	f8d8 0000 	ldr.w	r0, [r8]
 8022b3a:	f7ff fa1a 	bl	8021f72 <__retarget_lock_release_recursive>
 8022b3e:	f04f 30ff 	mov.w	r0, #4294967295
 8022b42:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8022b46:	b34e      	cbz	r6, 8022b9c <__register_exitproc+0x98>
 8022b48:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 8022b4c:	b988      	cbnz	r0, 8022b72 <__register_exitproc+0x6e>
 8022b4e:	4b1c      	ldr	r3, [pc, #112]	; (8022bc0 <__register_exitproc+0xbc>)
 8022b50:	b923      	cbnz	r3, 8022b5c <__register_exitproc+0x58>
 8022b52:	f8d8 0000 	ldr.w	r0, [r8]
 8022b56:	f7ff fa0b 	bl	8021f70 <__retarget_lock_release>
 8022b5a:	e7f0      	b.n	8022b3e <__register_exitproc+0x3a>
 8022b5c:	f44f 7084 	mov.w	r0, #264	; 0x108
 8022b60:	f7ff fa08 	bl	8021f74 <malloc>
 8022b64:	2800      	cmp	r0, #0
 8022b66:	d0f4      	beq.n	8022b52 <__register_exitproc+0x4e>
 8022b68:	2300      	movs	r3, #0
 8022b6a:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 8022b6e:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 8022b72:	6863      	ldr	r3, [r4, #4]
 8022b74:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 8022b78:	2201      	movs	r2, #1
 8022b7a:	409a      	lsls	r2, r3
 8022b7c:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 8022b80:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 8022b84:	4313      	orrs	r3, r2
 8022b86:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 8022b8a:	2e02      	cmp	r6, #2
 8022b8c:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 8022b90:	bf02      	ittt	eq
 8022b92:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 8022b96:	4313      	orreq	r3, r2
 8022b98:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 8022b9c:	6863      	ldr	r3, [r4, #4]
 8022b9e:	f8d8 0000 	ldr.w	r0, [r8]
 8022ba2:	1c5a      	adds	r2, r3, #1
 8022ba4:	3302      	adds	r3, #2
 8022ba6:	6062      	str	r2, [r4, #4]
 8022ba8:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 8022bac:	f7ff f9e1 	bl	8021f72 <__retarget_lock_release_recursive>
 8022bb0:	2000      	movs	r0, #0
 8022bb2:	e7c6      	b.n	8022b42 <__register_exitproc+0x3e>
 8022bb4:	20017bf4 	.word	0x20017bf4
 8022bb8:	20017b68 	.word	0x20017b68
 8022bbc:	080259d8 	.word	0x080259d8
 8022bc0:	08021f75 	.word	0x08021f75
 8022bc4:	20000164 	.word	0x20000164

08022bc8 <_close_r>:
 8022bc8:	b538      	push	{r3, r4, r5, lr}
 8022bca:	4d06      	ldr	r5, [pc, #24]	; (8022be4 <_close_r+0x1c>)
 8022bcc:	2300      	movs	r3, #0
 8022bce:	4604      	mov	r4, r0
 8022bd0:	4608      	mov	r0, r1
 8022bd2:	602b      	str	r3, [r5, #0]
 8022bd4:	f7df fa22 	bl	800201c <_close>
 8022bd8:	1c43      	adds	r3, r0, #1
 8022bda:	d102      	bne.n	8022be2 <_close_r+0x1a>
 8022bdc:	682b      	ldr	r3, [r5, #0]
 8022bde:	b103      	cbz	r3, 8022be2 <_close_r+0x1a>
 8022be0:	6023      	str	r3, [r4, #0]
 8022be2:	bd38      	pop	{r3, r4, r5, pc}
 8022be4:	20017b64 	.word	0x20017b64

08022be8 <__sflush_r>:
 8022be8:	898a      	ldrh	r2, [r1, #12]
 8022bea:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8022bee:	4605      	mov	r5, r0
 8022bf0:	0710      	lsls	r0, r2, #28
 8022bf2:	460c      	mov	r4, r1
 8022bf4:	d458      	bmi.n	8022ca8 <__sflush_r+0xc0>
 8022bf6:	684b      	ldr	r3, [r1, #4]
 8022bf8:	2b00      	cmp	r3, #0
 8022bfa:	dc05      	bgt.n	8022c08 <__sflush_r+0x20>
 8022bfc:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8022bfe:	2b00      	cmp	r3, #0
 8022c00:	dc02      	bgt.n	8022c08 <__sflush_r+0x20>
 8022c02:	2000      	movs	r0, #0
 8022c04:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8022c08:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8022c0a:	2e00      	cmp	r6, #0
 8022c0c:	d0f9      	beq.n	8022c02 <__sflush_r+0x1a>
 8022c0e:	2300      	movs	r3, #0
 8022c10:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8022c14:	682f      	ldr	r7, [r5, #0]
 8022c16:	602b      	str	r3, [r5, #0]
 8022c18:	d032      	beq.n	8022c80 <__sflush_r+0x98>
 8022c1a:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8022c1c:	89a3      	ldrh	r3, [r4, #12]
 8022c1e:	075a      	lsls	r2, r3, #29
 8022c20:	d505      	bpl.n	8022c2e <__sflush_r+0x46>
 8022c22:	6863      	ldr	r3, [r4, #4]
 8022c24:	1ac0      	subs	r0, r0, r3
 8022c26:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8022c28:	b10b      	cbz	r3, 8022c2e <__sflush_r+0x46>
 8022c2a:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8022c2c:	1ac0      	subs	r0, r0, r3
 8022c2e:	2300      	movs	r3, #0
 8022c30:	4602      	mov	r2, r0
 8022c32:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8022c34:	6a21      	ldr	r1, [r4, #32]
 8022c36:	4628      	mov	r0, r5
 8022c38:	47b0      	blx	r6
 8022c3a:	1c43      	adds	r3, r0, #1
 8022c3c:	89a3      	ldrh	r3, [r4, #12]
 8022c3e:	d106      	bne.n	8022c4e <__sflush_r+0x66>
 8022c40:	6829      	ldr	r1, [r5, #0]
 8022c42:	291d      	cmp	r1, #29
 8022c44:	d82c      	bhi.n	8022ca0 <__sflush_r+0xb8>
 8022c46:	4a2a      	ldr	r2, [pc, #168]	; (8022cf0 <__sflush_r+0x108>)
 8022c48:	40ca      	lsrs	r2, r1
 8022c4a:	07d6      	lsls	r6, r2, #31
 8022c4c:	d528      	bpl.n	8022ca0 <__sflush_r+0xb8>
 8022c4e:	2200      	movs	r2, #0
 8022c50:	6062      	str	r2, [r4, #4]
 8022c52:	04d9      	lsls	r1, r3, #19
 8022c54:	6922      	ldr	r2, [r4, #16]
 8022c56:	6022      	str	r2, [r4, #0]
 8022c58:	d504      	bpl.n	8022c64 <__sflush_r+0x7c>
 8022c5a:	1c42      	adds	r2, r0, #1
 8022c5c:	d101      	bne.n	8022c62 <__sflush_r+0x7a>
 8022c5e:	682b      	ldr	r3, [r5, #0]
 8022c60:	b903      	cbnz	r3, 8022c64 <__sflush_r+0x7c>
 8022c62:	6560      	str	r0, [r4, #84]	; 0x54
 8022c64:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8022c66:	602f      	str	r7, [r5, #0]
 8022c68:	2900      	cmp	r1, #0
 8022c6a:	d0ca      	beq.n	8022c02 <__sflush_r+0x1a>
 8022c6c:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8022c70:	4299      	cmp	r1, r3
 8022c72:	d002      	beq.n	8022c7a <__sflush_r+0x92>
 8022c74:	4628      	mov	r0, r5
 8022c76:	f7ff f9a3 	bl	8021fc0 <_free_r>
 8022c7a:	2000      	movs	r0, #0
 8022c7c:	6360      	str	r0, [r4, #52]	; 0x34
 8022c7e:	e7c1      	b.n	8022c04 <__sflush_r+0x1c>
 8022c80:	6a21      	ldr	r1, [r4, #32]
 8022c82:	2301      	movs	r3, #1
 8022c84:	4628      	mov	r0, r5
 8022c86:	47b0      	blx	r6
 8022c88:	1c41      	adds	r1, r0, #1
 8022c8a:	d1c7      	bne.n	8022c1c <__sflush_r+0x34>
 8022c8c:	682b      	ldr	r3, [r5, #0]
 8022c8e:	2b00      	cmp	r3, #0
 8022c90:	d0c4      	beq.n	8022c1c <__sflush_r+0x34>
 8022c92:	2b1d      	cmp	r3, #29
 8022c94:	d001      	beq.n	8022c9a <__sflush_r+0xb2>
 8022c96:	2b16      	cmp	r3, #22
 8022c98:	d101      	bne.n	8022c9e <__sflush_r+0xb6>
 8022c9a:	602f      	str	r7, [r5, #0]
 8022c9c:	e7b1      	b.n	8022c02 <__sflush_r+0x1a>
 8022c9e:	89a3      	ldrh	r3, [r4, #12]
 8022ca0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8022ca4:	81a3      	strh	r3, [r4, #12]
 8022ca6:	e7ad      	b.n	8022c04 <__sflush_r+0x1c>
 8022ca8:	690f      	ldr	r7, [r1, #16]
 8022caa:	2f00      	cmp	r7, #0
 8022cac:	d0a9      	beq.n	8022c02 <__sflush_r+0x1a>
 8022cae:	0793      	lsls	r3, r2, #30
 8022cb0:	680e      	ldr	r6, [r1, #0]
 8022cb2:	bf08      	it	eq
 8022cb4:	694b      	ldreq	r3, [r1, #20]
 8022cb6:	600f      	str	r7, [r1, #0]
 8022cb8:	bf18      	it	ne
 8022cba:	2300      	movne	r3, #0
 8022cbc:	eba6 0807 	sub.w	r8, r6, r7
 8022cc0:	608b      	str	r3, [r1, #8]
 8022cc2:	f1b8 0f00 	cmp.w	r8, #0
 8022cc6:	dd9c      	ble.n	8022c02 <__sflush_r+0x1a>
 8022cc8:	6a21      	ldr	r1, [r4, #32]
 8022cca:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8022ccc:	4643      	mov	r3, r8
 8022cce:	463a      	mov	r2, r7
 8022cd0:	4628      	mov	r0, r5
 8022cd2:	47b0      	blx	r6
 8022cd4:	2800      	cmp	r0, #0
 8022cd6:	dc06      	bgt.n	8022ce6 <__sflush_r+0xfe>
 8022cd8:	89a3      	ldrh	r3, [r4, #12]
 8022cda:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8022cde:	81a3      	strh	r3, [r4, #12]
 8022ce0:	f04f 30ff 	mov.w	r0, #4294967295
 8022ce4:	e78e      	b.n	8022c04 <__sflush_r+0x1c>
 8022ce6:	4407      	add	r7, r0
 8022ce8:	eba8 0800 	sub.w	r8, r8, r0
 8022cec:	e7e9      	b.n	8022cc2 <__sflush_r+0xda>
 8022cee:	bf00      	nop
 8022cf0:	20400001 	.word	0x20400001

08022cf4 <_fflush_r>:
 8022cf4:	b538      	push	{r3, r4, r5, lr}
 8022cf6:	690b      	ldr	r3, [r1, #16]
 8022cf8:	4605      	mov	r5, r0
 8022cfa:	460c      	mov	r4, r1
 8022cfc:	b913      	cbnz	r3, 8022d04 <_fflush_r+0x10>
 8022cfe:	2500      	movs	r5, #0
 8022d00:	4628      	mov	r0, r5
 8022d02:	bd38      	pop	{r3, r4, r5, pc}
 8022d04:	b118      	cbz	r0, 8022d0e <_fflush_r+0x1a>
 8022d06:	6983      	ldr	r3, [r0, #24]
 8022d08:	b90b      	cbnz	r3, 8022d0e <_fflush_r+0x1a>
 8022d0a:	f7ff f85b 	bl	8021dc4 <__sinit>
 8022d0e:	4b14      	ldr	r3, [pc, #80]	; (8022d60 <_fflush_r+0x6c>)
 8022d10:	429c      	cmp	r4, r3
 8022d12:	d11b      	bne.n	8022d4c <_fflush_r+0x58>
 8022d14:	686c      	ldr	r4, [r5, #4]
 8022d16:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8022d1a:	2b00      	cmp	r3, #0
 8022d1c:	d0ef      	beq.n	8022cfe <_fflush_r+0xa>
 8022d1e:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8022d20:	07d0      	lsls	r0, r2, #31
 8022d22:	d404      	bmi.n	8022d2e <_fflush_r+0x3a>
 8022d24:	0599      	lsls	r1, r3, #22
 8022d26:	d402      	bmi.n	8022d2e <_fflush_r+0x3a>
 8022d28:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8022d2a:	f7ff f920 	bl	8021f6e <__retarget_lock_acquire_recursive>
 8022d2e:	4628      	mov	r0, r5
 8022d30:	4621      	mov	r1, r4
 8022d32:	f7ff ff59 	bl	8022be8 <__sflush_r>
 8022d36:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8022d38:	07da      	lsls	r2, r3, #31
 8022d3a:	4605      	mov	r5, r0
 8022d3c:	d4e0      	bmi.n	8022d00 <_fflush_r+0xc>
 8022d3e:	89a3      	ldrh	r3, [r4, #12]
 8022d40:	059b      	lsls	r3, r3, #22
 8022d42:	d4dd      	bmi.n	8022d00 <_fflush_r+0xc>
 8022d44:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8022d46:	f7ff f914 	bl	8021f72 <__retarget_lock_release_recursive>
 8022d4a:	e7d9      	b.n	8022d00 <_fflush_r+0xc>
 8022d4c:	4b05      	ldr	r3, [pc, #20]	; (8022d64 <_fflush_r+0x70>)
 8022d4e:	429c      	cmp	r4, r3
 8022d50:	d101      	bne.n	8022d56 <_fflush_r+0x62>
 8022d52:	68ac      	ldr	r4, [r5, #8]
 8022d54:	e7df      	b.n	8022d16 <_fflush_r+0x22>
 8022d56:	4b04      	ldr	r3, [pc, #16]	; (8022d68 <_fflush_r+0x74>)
 8022d58:	429c      	cmp	r4, r3
 8022d5a:	bf08      	it	eq
 8022d5c:	68ec      	ldreq	r4, [r5, #12]
 8022d5e:	e7da      	b.n	8022d16 <_fflush_r+0x22>
 8022d60:	08025960 	.word	0x08025960
 8022d64:	08025980 	.word	0x08025980
 8022d68:	08025940 	.word	0x08025940

08022d6c <_lseek_r>:
 8022d6c:	b538      	push	{r3, r4, r5, lr}
 8022d6e:	4d07      	ldr	r5, [pc, #28]	; (8022d8c <_lseek_r+0x20>)
 8022d70:	4604      	mov	r4, r0
 8022d72:	4608      	mov	r0, r1
 8022d74:	4611      	mov	r1, r2
 8022d76:	2200      	movs	r2, #0
 8022d78:	602a      	str	r2, [r5, #0]
 8022d7a:	461a      	mov	r2, r3
 8022d7c:	f7df f958 	bl	8002030 <_lseek>
 8022d80:	1c43      	adds	r3, r0, #1
 8022d82:	d102      	bne.n	8022d8a <_lseek_r+0x1e>
 8022d84:	682b      	ldr	r3, [r5, #0]
 8022d86:	b103      	cbz	r3, 8022d8a <_lseek_r+0x1e>
 8022d88:	6023      	str	r3, [r4, #0]
 8022d8a:	bd38      	pop	{r3, r4, r5, pc}
 8022d8c:	20017b64 	.word	0x20017b64

08022d90 <__swhatbuf_r>:
 8022d90:	b570      	push	{r4, r5, r6, lr}
 8022d92:	460e      	mov	r6, r1
 8022d94:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8022d98:	2900      	cmp	r1, #0
 8022d9a:	b096      	sub	sp, #88	; 0x58
 8022d9c:	4614      	mov	r4, r2
 8022d9e:	461d      	mov	r5, r3
 8022da0:	da08      	bge.n	8022db4 <__swhatbuf_r+0x24>
 8022da2:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 8022da6:	2200      	movs	r2, #0
 8022da8:	602a      	str	r2, [r5, #0]
 8022daa:	061a      	lsls	r2, r3, #24
 8022dac:	d410      	bmi.n	8022dd0 <__swhatbuf_r+0x40>
 8022dae:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8022db2:	e00e      	b.n	8022dd2 <__swhatbuf_r+0x42>
 8022db4:	466a      	mov	r2, sp
 8022db6:	f000 f86f 	bl	8022e98 <_fstat_r>
 8022dba:	2800      	cmp	r0, #0
 8022dbc:	dbf1      	blt.n	8022da2 <__swhatbuf_r+0x12>
 8022dbe:	9a01      	ldr	r2, [sp, #4]
 8022dc0:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8022dc4:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8022dc8:	425a      	negs	r2, r3
 8022dca:	415a      	adcs	r2, r3
 8022dcc:	602a      	str	r2, [r5, #0]
 8022dce:	e7ee      	b.n	8022dae <__swhatbuf_r+0x1e>
 8022dd0:	2340      	movs	r3, #64	; 0x40
 8022dd2:	2000      	movs	r0, #0
 8022dd4:	6023      	str	r3, [r4, #0]
 8022dd6:	b016      	add	sp, #88	; 0x58
 8022dd8:	bd70      	pop	{r4, r5, r6, pc}
	...

08022ddc <__smakebuf_r>:
 8022ddc:	898b      	ldrh	r3, [r1, #12]
 8022dde:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8022de0:	079d      	lsls	r5, r3, #30
 8022de2:	4606      	mov	r6, r0
 8022de4:	460c      	mov	r4, r1
 8022de6:	d507      	bpl.n	8022df8 <__smakebuf_r+0x1c>
 8022de8:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8022dec:	6023      	str	r3, [r4, #0]
 8022dee:	6123      	str	r3, [r4, #16]
 8022df0:	2301      	movs	r3, #1
 8022df2:	6163      	str	r3, [r4, #20]
 8022df4:	b002      	add	sp, #8
 8022df6:	bd70      	pop	{r4, r5, r6, pc}
 8022df8:	ab01      	add	r3, sp, #4
 8022dfa:	466a      	mov	r2, sp
 8022dfc:	f7ff ffc8 	bl	8022d90 <__swhatbuf_r>
 8022e00:	9900      	ldr	r1, [sp, #0]
 8022e02:	4605      	mov	r5, r0
 8022e04:	4630      	mov	r0, r6
 8022e06:	f7ff f947 	bl	8022098 <_malloc_r>
 8022e0a:	b948      	cbnz	r0, 8022e20 <__smakebuf_r+0x44>
 8022e0c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8022e10:	059a      	lsls	r2, r3, #22
 8022e12:	d4ef      	bmi.n	8022df4 <__smakebuf_r+0x18>
 8022e14:	f023 0303 	bic.w	r3, r3, #3
 8022e18:	f043 0302 	orr.w	r3, r3, #2
 8022e1c:	81a3      	strh	r3, [r4, #12]
 8022e1e:	e7e3      	b.n	8022de8 <__smakebuf_r+0xc>
 8022e20:	4b0d      	ldr	r3, [pc, #52]	; (8022e58 <__smakebuf_r+0x7c>)
 8022e22:	62b3      	str	r3, [r6, #40]	; 0x28
 8022e24:	89a3      	ldrh	r3, [r4, #12]
 8022e26:	6020      	str	r0, [r4, #0]
 8022e28:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8022e2c:	81a3      	strh	r3, [r4, #12]
 8022e2e:	9b00      	ldr	r3, [sp, #0]
 8022e30:	6163      	str	r3, [r4, #20]
 8022e32:	9b01      	ldr	r3, [sp, #4]
 8022e34:	6120      	str	r0, [r4, #16]
 8022e36:	b15b      	cbz	r3, 8022e50 <__smakebuf_r+0x74>
 8022e38:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8022e3c:	4630      	mov	r0, r6
 8022e3e:	f000 f83d 	bl	8022ebc <_isatty_r>
 8022e42:	b128      	cbz	r0, 8022e50 <__smakebuf_r+0x74>
 8022e44:	89a3      	ldrh	r3, [r4, #12]
 8022e46:	f023 0303 	bic.w	r3, r3, #3
 8022e4a:	f043 0301 	orr.w	r3, r3, #1
 8022e4e:	81a3      	strh	r3, [r4, #12]
 8022e50:	89a0      	ldrh	r0, [r4, #12]
 8022e52:	4305      	orrs	r5, r0
 8022e54:	81a5      	strh	r5, [r4, #12]
 8022e56:	e7cd      	b.n	8022df4 <__smakebuf_r+0x18>
 8022e58:	08021d5d 	.word	0x08021d5d

08022e5c <__malloc_lock>:
 8022e5c:	4801      	ldr	r0, [pc, #4]	; (8022e64 <__malloc_lock+0x8>)
 8022e5e:	f7ff b886 	b.w	8021f6e <__retarget_lock_acquire_recursive>
 8022e62:	bf00      	nop
 8022e64:	20017a51 	.word	0x20017a51

08022e68 <__malloc_unlock>:
 8022e68:	4801      	ldr	r0, [pc, #4]	; (8022e70 <__malloc_unlock+0x8>)
 8022e6a:	f7ff b882 	b.w	8021f72 <__retarget_lock_release_recursive>
 8022e6e:	bf00      	nop
 8022e70:	20017a51 	.word	0x20017a51

08022e74 <_read_r>:
 8022e74:	b538      	push	{r3, r4, r5, lr}
 8022e76:	4d07      	ldr	r5, [pc, #28]	; (8022e94 <_read_r+0x20>)
 8022e78:	4604      	mov	r4, r0
 8022e7a:	4608      	mov	r0, r1
 8022e7c:	4611      	mov	r1, r2
 8022e7e:	2200      	movs	r2, #0
 8022e80:	602a      	str	r2, [r5, #0]
 8022e82:	461a      	mov	r2, r3
 8022e84:	f7df f8ae 	bl	8001fe4 <_read>
 8022e88:	1c43      	adds	r3, r0, #1
 8022e8a:	d102      	bne.n	8022e92 <_read_r+0x1e>
 8022e8c:	682b      	ldr	r3, [r5, #0]
 8022e8e:	b103      	cbz	r3, 8022e92 <_read_r+0x1e>
 8022e90:	6023      	str	r3, [r4, #0]
 8022e92:	bd38      	pop	{r3, r4, r5, pc}
 8022e94:	20017b64 	.word	0x20017b64

08022e98 <_fstat_r>:
 8022e98:	b538      	push	{r3, r4, r5, lr}
 8022e9a:	4d07      	ldr	r5, [pc, #28]	; (8022eb8 <_fstat_r+0x20>)
 8022e9c:	2300      	movs	r3, #0
 8022e9e:	4604      	mov	r4, r0
 8022ea0:	4608      	mov	r0, r1
 8022ea2:	4611      	mov	r1, r2
 8022ea4:	602b      	str	r3, [r5, #0]
 8022ea6:	f7df f8bc 	bl	8002022 <_fstat>
 8022eaa:	1c43      	adds	r3, r0, #1
 8022eac:	d102      	bne.n	8022eb4 <_fstat_r+0x1c>
 8022eae:	682b      	ldr	r3, [r5, #0]
 8022eb0:	b103      	cbz	r3, 8022eb4 <_fstat_r+0x1c>
 8022eb2:	6023      	str	r3, [r4, #0]
 8022eb4:	bd38      	pop	{r3, r4, r5, pc}
 8022eb6:	bf00      	nop
 8022eb8:	20017b64 	.word	0x20017b64

08022ebc <_isatty_r>:
 8022ebc:	b538      	push	{r3, r4, r5, lr}
 8022ebe:	4d06      	ldr	r5, [pc, #24]	; (8022ed8 <_isatty_r+0x1c>)
 8022ec0:	2300      	movs	r3, #0
 8022ec2:	4604      	mov	r4, r0
 8022ec4:	4608      	mov	r0, r1
 8022ec6:	602b      	str	r3, [r5, #0]
 8022ec8:	f7df f8b0 	bl	800202c <_isatty>
 8022ecc:	1c43      	adds	r3, r0, #1
 8022ece:	d102      	bne.n	8022ed6 <_isatty_r+0x1a>
 8022ed0:	682b      	ldr	r3, [r5, #0]
 8022ed2:	b103      	cbz	r3, 8022ed6 <_isatty_r+0x1a>
 8022ed4:	6023      	str	r3, [r4, #0]
 8022ed6:	bd38      	pop	{r3, r4, r5, pc}
 8022ed8:	20017b64 	.word	0x20017b64

08022edc <_init>:
 8022edc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8022ede:	bf00      	nop
 8022ee0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8022ee2:	bc08      	pop	{r3}
 8022ee4:	469e      	mov	lr, r3
 8022ee6:	4770      	bx	lr

08022ee8 <_fini>:
 8022ee8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8022eea:	bf00      	nop
 8022eec:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8022eee:	bc08      	pop	{r3}
 8022ef0:	469e      	mov	lr, r3
 8022ef2:	4770      	bx	lr
