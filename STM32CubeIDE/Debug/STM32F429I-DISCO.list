
STM32F429I-DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000219b0  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00002cd4  08021b60  08021b60  00031b60  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 0000162e  08024834  08024834  00034834  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000094  08025e64  08025e64  00035e64  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 00000224  08025ef8  08025ef8  00035ef8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 ExtFlashSection 0009d2a8  0802611c  0802611c  0003611c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  080c33c4  080c33c4  000e016c  2**0
                  CONTENTS
  8 .ARM          00000008  080c33c4  080c33c4  000d33c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  080c33cc  080c33cc  000e016c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000014  080c33cc  080c33cc  000d33cc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   00000008  080c33e0  080c33e0  000d33e0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         0000016c  20000000  080c33e8  000e0000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss          00015744  2000016c  080c3554  000e016c  2**2
                  ALLOC
 14 ._user_heap_stack 00001400  200158b0  080c3554  000e58b0  2**0
                  ALLOC
 15 .ARM.attributes 00000030  00000000  00000000  000e016c  2**0
                  CONTENTS, READONLY
 16 TouchGFX_Framebuffer 0004b000  d0000000  d0000000  000f0000  2**2
                  ALLOC
 17 .debug_line   000510dc  00000000  00000000  000e019c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_info   000ef5d1  00000000  00000000  00131278  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_abbrev 000150a5  00000000  00000000  00220849  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_aranges 000030c0  00000000  00000000  002358f0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_str    0011a127  00000000  00000000  002389b0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_ranges 00007060  00000000  00000000  00352ad8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_loc    00035d79  00000000  00000000  00359b38  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_macro  00030c09  00000000  00000000  0038f8b1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .comment      000000cf  00000000  00000000  003c04ba  2**0
                  CONTENTS, READONLY
 26 .debug_frame  00008e68  00000000  00000000  003c058c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	2000016c 	.word	0x2000016c
 80001cc:	00000000 	.word	0x00000000
 80001d0:	08021b48 	.word	0x08021b48

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000170 	.word	0x20000170
 80001ec:	08021b48 	.word	0x08021b48

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <__aeabi_uldivmod>:
 8000290:	b953      	cbnz	r3, 80002a8 <__aeabi_uldivmod+0x18>
 8000292:	b94a      	cbnz	r2, 80002a8 <__aeabi_uldivmod+0x18>
 8000294:	2900      	cmp	r1, #0
 8000296:	bf08      	it	eq
 8000298:	2800      	cmpeq	r0, #0
 800029a:	bf1c      	itt	ne
 800029c:	f04f 31ff 	movne.w	r1, #4294967295
 80002a0:	f04f 30ff 	movne.w	r0, #4294967295
 80002a4:	f000 b974 	b.w	8000590 <__aeabi_idiv0>
 80002a8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002ac:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002b0:	f000 f806 	bl	80002c0 <__udivmoddi4>
 80002b4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002b8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002bc:	b004      	add	sp, #16
 80002be:	4770      	bx	lr

080002c0 <__udivmoddi4>:
 80002c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002c4:	9d08      	ldr	r5, [sp, #32]
 80002c6:	4604      	mov	r4, r0
 80002c8:	468e      	mov	lr, r1
 80002ca:	2b00      	cmp	r3, #0
 80002cc:	d14d      	bne.n	800036a <__udivmoddi4+0xaa>
 80002ce:	428a      	cmp	r2, r1
 80002d0:	4694      	mov	ip, r2
 80002d2:	d969      	bls.n	80003a8 <__udivmoddi4+0xe8>
 80002d4:	fab2 f282 	clz	r2, r2
 80002d8:	b152      	cbz	r2, 80002f0 <__udivmoddi4+0x30>
 80002da:	fa01 f302 	lsl.w	r3, r1, r2
 80002de:	f1c2 0120 	rsb	r1, r2, #32
 80002e2:	fa20 f101 	lsr.w	r1, r0, r1
 80002e6:	fa0c fc02 	lsl.w	ip, ip, r2
 80002ea:	ea41 0e03 	orr.w	lr, r1, r3
 80002ee:	4094      	lsls	r4, r2
 80002f0:	ea4f 481c 	mov.w	r8, ip, lsr #16
 80002f4:	0c21      	lsrs	r1, r4, #16
 80002f6:	fbbe f6f8 	udiv	r6, lr, r8
 80002fa:	fa1f f78c 	uxth.w	r7, ip
 80002fe:	fb08 e316 	mls	r3, r8, r6, lr
 8000302:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8000306:	fb06 f107 	mul.w	r1, r6, r7
 800030a:	4299      	cmp	r1, r3
 800030c:	d90a      	bls.n	8000324 <__udivmoddi4+0x64>
 800030e:	eb1c 0303 	adds.w	r3, ip, r3
 8000312:	f106 30ff 	add.w	r0, r6, #4294967295
 8000316:	f080 811f 	bcs.w	8000558 <__udivmoddi4+0x298>
 800031a:	4299      	cmp	r1, r3
 800031c:	f240 811c 	bls.w	8000558 <__udivmoddi4+0x298>
 8000320:	3e02      	subs	r6, #2
 8000322:	4463      	add	r3, ip
 8000324:	1a5b      	subs	r3, r3, r1
 8000326:	b2a4      	uxth	r4, r4
 8000328:	fbb3 f0f8 	udiv	r0, r3, r8
 800032c:	fb08 3310 	mls	r3, r8, r0, r3
 8000330:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000334:	fb00 f707 	mul.w	r7, r0, r7
 8000338:	42a7      	cmp	r7, r4
 800033a:	d90a      	bls.n	8000352 <__udivmoddi4+0x92>
 800033c:	eb1c 0404 	adds.w	r4, ip, r4
 8000340:	f100 33ff 	add.w	r3, r0, #4294967295
 8000344:	f080 810a 	bcs.w	800055c <__udivmoddi4+0x29c>
 8000348:	42a7      	cmp	r7, r4
 800034a:	f240 8107 	bls.w	800055c <__udivmoddi4+0x29c>
 800034e:	4464      	add	r4, ip
 8000350:	3802      	subs	r0, #2
 8000352:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000356:	1be4      	subs	r4, r4, r7
 8000358:	2600      	movs	r6, #0
 800035a:	b11d      	cbz	r5, 8000364 <__udivmoddi4+0xa4>
 800035c:	40d4      	lsrs	r4, r2
 800035e:	2300      	movs	r3, #0
 8000360:	e9c5 4300 	strd	r4, r3, [r5]
 8000364:	4631      	mov	r1, r6
 8000366:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800036a:	428b      	cmp	r3, r1
 800036c:	d909      	bls.n	8000382 <__udivmoddi4+0xc2>
 800036e:	2d00      	cmp	r5, #0
 8000370:	f000 80ef 	beq.w	8000552 <__udivmoddi4+0x292>
 8000374:	2600      	movs	r6, #0
 8000376:	e9c5 0100 	strd	r0, r1, [r5]
 800037a:	4630      	mov	r0, r6
 800037c:	4631      	mov	r1, r6
 800037e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000382:	fab3 f683 	clz	r6, r3
 8000386:	2e00      	cmp	r6, #0
 8000388:	d14a      	bne.n	8000420 <__udivmoddi4+0x160>
 800038a:	428b      	cmp	r3, r1
 800038c:	d302      	bcc.n	8000394 <__udivmoddi4+0xd4>
 800038e:	4282      	cmp	r2, r0
 8000390:	f200 80f9 	bhi.w	8000586 <__udivmoddi4+0x2c6>
 8000394:	1a84      	subs	r4, r0, r2
 8000396:	eb61 0303 	sbc.w	r3, r1, r3
 800039a:	2001      	movs	r0, #1
 800039c:	469e      	mov	lr, r3
 800039e:	2d00      	cmp	r5, #0
 80003a0:	d0e0      	beq.n	8000364 <__udivmoddi4+0xa4>
 80003a2:	e9c5 4e00 	strd	r4, lr, [r5]
 80003a6:	e7dd      	b.n	8000364 <__udivmoddi4+0xa4>
 80003a8:	b902      	cbnz	r2, 80003ac <__udivmoddi4+0xec>
 80003aa:	deff      	udf	#255	; 0xff
 80003ac:	fab2 f282 	clz	r2, r2
 80003b0:	2a00      	cmp	r2, #0
 80003b2:	f040 8092 	bne.w	80004da <__udivmoddi4+0x21a>
 80003b6:	eba1 010c 	sub.w	r1, r1, ip
 80003ba:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80003be:	fa1f fe8c 	uxth.w	lr, ip
 80003c2:	2601      	movs	r6, #1
 80003c4:	0c20      	lsrs	r0, r4, #16
 80003c6:	fbb1 f3f7 	udiv	r3, r1, r7
 80003ca:	fb07 1113 	mls	r1, r7, r3, r1
 80003ce:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 80003d2:	fb0e f003 	mul.w	r0, lr, r3
 80003d6:	4288      	cmp	r0, r1
 80003d8:	d908      	bls.n	80003ec <__udivmoddi4+0x12c>
 80003da:	eb1c 0101 	adds.w	r1, ip, r1
 80003de:	f103 38ff 	add.w	r8, r3, #4294967295
 80003e2:	d202      	bcs.n	80003ea <__udivmoddi4+0x12a>
 80003e4:	4288      	cmp	r0, r1
 80003e6:	f200 80cb 	bhi.w	8000580 <__udivmoddi4+0x2c0>
 80003ea:	4643      	mov	r3, r8
 80003ec:	1a09      	subs	r1, r1, r0
 80003ee:	b2a4      	uxth	r4, r4
 80003f0:	fbb1 f0f7 	udiv	r0, r1, r7
 80003f4:	fb07 1110 	mls	r1, r7, r0, r1
 80003f8:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 80003fc:	fb0e fe00 	mul.w	lr, lr, r0
 8000400:	45a6      	cmp	lr, r4
 8000402:	d908      	bls.n	8000416 <__udivmoddi4+0x156>
 8000404:	eb1c 0404 	adds.w	r4, ip, r4
 8000408:	f100 31ff 	add.w	r1, r0, #4294967295
 800040c:	d202      	bcs.n	8000414 <__udivmoddi4+0x154>
 800040e:	45a6      	cmp	lr, r4
 8000410:	f200 80bb 	bhi.w	800058a <__udivmoddi4+0x2ca>
 8000414:	4608      	mov	r0, r1
 8000416:	eba4 040e 	sub.w	r4, r4, lr
 800041a:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 800041e:	e79c      	b.n	800035a <__udivmoddi4+0x9a>
 8000420:	f1c6 0720 	rsb	r7, r6, #32
 8000424:	40b3      	lsls	r3, r6
 8000426:	fa22 fc07 	lsr.w	ip, r2, r7
 800042a:	ea4c 0c03 	orr.w	ip, ip, r3
 800042e:	fa20 f407 	lsr.w	r4, r0, r7
 8000432:	fa01 f306 	lsl.w	r3, r1, r6
 8000436:	431c      	orrs	r4, r3
 8000438:	40f9      	lsrs	r1, r7
 800043a:	ea4f 491c 	mov.w	r9, ip, lsr #16
 800043e:	fa00 f306 	lsl.w	r3, r0, r6
 8000442:	fbb1 f8f9 	udiv	r8, r1, r9
 8000446:	0c20      	lsrs	r0, r4, #16
 8000448:	fa1f fe8c 	uxth.w	lr, ip
 800044c:	fb09 1118 	mls	r1, r9, r8, r1
 8000450:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000454:	fb08 f00e 	mul.w	r0, r8, lr
 8000458:	4288      	cmp	r0, r1
 800045a:	fa02 f206 	lsl.w	r2, r2, r6
 800045e:	d90b      	bls.n	8000478 <__udivmoddi4+0x1b8>
 8000460:	eb1c 0101 	adds.w	r1, ip, r1
 8000464:	f108 3aff 	add.w	sl, r8, #4294967295
 8000468:	f080 8088 	bcs.w	800057c <__udivmoddi4+0x2bc>
 800046c:	4288      	cmp	r0, r1
 800046e:	f240 8085 	bls.w	800057c <__udivmoddi4+0x2bc>
 8000472:	f1a8 0802 	sub.w	r8, r8, #2
 8000476:	4461      	add	r1, ip
 8000478:	1a09      	subs	r1, r1, r0
 800047a:	b2a4      	uxth	r4, r4
 800047c:	fbb1 f0f9 	udiv	r0, r1, r9
 8000480:	fb09 1110 	mls	r1, r9, r0, r1
 8000484:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
 8000488:	fb00 fe0e 	mul.w	lr, r0, lr
 800048c:	458e      	cmp	lr, r1
 800048e:	d908      	bls.n	80004a2 <__udivmoddi4+0x1e2>
 8000490:	eb1c 0101 	adds.w	r1, ip, r1
 8000494:	f100 34ff 	add.w	r4, r0, #4294967295
 8000498:	d26c      	bcs.n	8000574 <__udivmoddi4+0x2b4>
 800049a:	458e      	cmp	lr, r1
 800049c:	d96a      	bls.n	8000574 <__udivmoddi4+0x2b4>
 800049e:	3802      	subs	r0, #2
 80004a0:	4461      	add	r1, ip
 80004a2:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 80004a6:	fba0 9402 	umull	r9, r4, r0, r2
 80004aa:	eba1 010e 	sub.w	r1, r1, lr
 80004ae:	42a1      	cmp	r1, r4
 80004b0:	46c8      	mov	r8, r9
 80004b2:	46a6      	mov	lr, r4
 80004b4:	d356      	bcc.n	8000564 <__udivmoddi4+0x2a4>
 80004b6:	d053      	beq.n	8000560 <__udivmoddi4+0x2a0>
 80004b8:	b15d      	cbz	r5, 80004d2 <__udivmoddi4+0x212>
 80004ba:	ebb3 0208 	subs.w	r2, r3, r8
 80004be:	eb61 010e 	sbc.w	r1, r1, lr
 80004c2:	fa01 f707 	lsl.w	r7, r1, r7
 80004c6:	fa22 f306 	lsr.w	r3, r2, r6
 80004ca:	40f1      	lsrs	r1, r6
 80004cc:	431f      	orrs	r7, r3
 80004ce:	e9c5 7100 	strd	r7, r1, [r5]
 80004d2:	2600      	movs	r6, #0
 80004d4:	4631      	mov	r1, r6
 80004d6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80004da:	f1c2 0320 	rsb	r3, r2, #32
 80004de:	40d8      	lsrs	r0, r3
 80004e0:	fa0c fc02 	lsl.w	ip, ip, r2
 80004e4:	fa21 f303 	lsr.w	r3, r1, r3
 80004e8:	4091      	lsls	r1, r2
 80004ea:	4301      	orrs	r1, r0
 80004ec:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80004f0:	fa1f fe8c 	uxth.w	lr, ip
 80004f4:	fbb3 f0f7 	udiv	r0, r3, r7
 80004f8:	fb07 3610 	mls	r6, r7, r0, r3
 80004fc:	0c0b      	lsrs	r3, r1, #16
 80004fe:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
 8000502:	fb00 f60e 	mul.w	r6, r0, lr
 8000506:	429e      	cmp	r6, r3
 8000508:	fa04 f402 	lsl.w	r4, r4, r2
 800050c:	d908      	bls.n	8000520 <__udivmoddi4+0x260>
 800050e:	eb1c 0303 	adds.w	r3, ip, r3
 8000512:	f100 38ff 	add.w	r8, r0, #4294967295
 8000516:	d22f      	bcs.n	8000578 <__udivmoddi4+0x2b8>
 8000518:	429e      	cmp	r6, r3
 800051a:	d92d      	bls.n	8000578 <__udivmoddi4+0x2b8>
 800051c:	3802      	subs	r0, #2
 800051e:	4463      	add	r3, ip
 8000520:	1b9b      	subs	r3, r3, r6
 8000522:	b289      	uxth	r1, r1
 8000524:	fbb3 f6f7 	udiv	r6, r3, r7
 8000528:	fb07 3316 	mls	r3, r7, r6, r3
 800052c:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000530:	fb06 f30e 	mul.w	r3, r6, lr
 8000534:	428b      	cmp	r3, r1
 8000536:	d908      	bls.n	800054a <__udivmoddi4+0x28a>
 8000538:	eb1c 0101 	adds.w	r1, ip, r1
 800053c:	f106 38ff 	add.w	r8, r6, #4294967295
 8000540:	d216      	bcs.n	8000570 <__udivmoddi4+0x2b0>
 8000542:	428b      	cmp	r3, r1
 8000544:	d914      	bls.n	8000570 <__udivmoddi4+0x2b0>
 8000546:	3e02      	subs	r6, #2
 8000548:	4461      	add	r1, ip
 800054a:	1ac9      	subs	r1, r1, r3
 800054c:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
 8000550:	e738      	b.n	80003c4 <__udivmoddi4+0x104>
 8000552:	462e      	mov	r6, r5
 8000554:	4628      	mov	r0, r5
 8000556:	e705      	b.n	8000364 <__udivmoddi4+0xa4>
 8000558:	4606      	mov	r6, r0
 800055a:	e6e3      	b.n	8000324 <__udivmoddi4+0x64>
 800055c:	4618      	mov	r0, r3
 800055e:	e6f8      	b.n	8000352 <__udivmoddi4+0x92>
 8000560:	454b      	cmp	r3, r9
 8000562:	d2a9      	bcs.n	80004b8 <__udivmoddi4+0x1f8>
 8000564:	ebb9 0802 	subs.w	r8, r9, r2
 8000568:	eb64 0e0c 	sbc.w	lr, r4, ip
 800056c:	3801      	subs	r0, #1
 800056e:	e7a3      	b.n	80004b8 <__udivmoddi4+0x1f8>
 8000570:	4646      	mov	r6, r8
 8000572:	e7ea      	b.n	800054a <__udivmoddi4+0x28a>
 8000574:	4620      	mov	r0, r4
 8000576:	e794      	b.n	80004a2 <__udivmoddi4+0x1e2>
 8000578:	4640      	mov	r0, r8
 800057a:	e7d1      	b.n	8000520 <__udivmoddi4+0x260>
 800057c:	46d0      	mov	r8, sl
 800057e:	e77b      	b.n	8000478 <__udivmoddi4+0x1b8>
 8000580:	3b02      	subs	r3, #2
 8000582:	4461      	add	r1, ip
 8000584:	e732      	b.n	80003ec <__udivmoddi4+0x12c>
 8000586:	4630      	mov	r0, r6
 8000588:	e709      	b.n	800039e <__udivmoddi4+0xde>
 800058a:	4464      	add	r4, ip
 800058c:	3802      	subs	r0, #2
 800058e:	e742      	b.n	8000416 <__udivmoddi4+0x156>

08000590 <__aeabi_idiv0>:
 8000590:	4770      	bx	lr
 8000592:	bf00      	nop

08000594 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 8000594:	f8df d034 	ldr.w	sp, [pc, #52]	; 80005cc <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8000598:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 800059a:	e003      	b.n	80005a4 <LoopCopyDataInit>

0800059c <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 800059c:	4b0c      	ldr	r3, [pc, #48]	; (80005d0 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 800059e:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 80005a0:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 80005a2:	3104      	adds	r1, #4

080005a4 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 80005a4:	480b      	ldr	r0, [pc, #44]	; (80005d4 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 80005a6:	4b0c      	ldr	r3, [pc, #48]	; (80005d8 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 80005a8:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 80005aa:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 80005ac:	d3f6      	bcc.n	800059c <CopyDataInit>
  ldr  r2, =_sbss
 80005ae:	4a0b      	ldr	r2, [pc, #44]	; (80005dc <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 80005b0:	e002      	b.n	80005b8 <LoopFillZerobss>

080005b2 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 80005b2:	2300      	movs	r3, #0
  str  r3, [r2], #4
 80005b4:	f842 3b04 	str.w	r3, [r2], #4

080005b8 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 80005b8:	4b09      	ldr	r3, [pc, #36]	; (80005e0 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 80005ba:	429a      	cmp	r2, r3
  bcc  FillZerobss
 80005bc:	d3f9      	bcc.n	80005b2 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 80005be:	f005 fbdd 	bl	8005d7c <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80005c2:	f020 fae5 	bl	8020b90 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80005c6:	f000 ff8f 	bl	80014e8 <main>
  bx  lr    
 80005ca:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 80005cc:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 80005d0:	080c33e8 	.word	0x080c33e8
  ldr  r0, =_sdata
 80005d4:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 80005d8:	2000016c 	.word	0x2000016c
  ldr  r2, =_sbss
 80005dc:	2000016c 	.word	0x2000016c
  ldr  r3, = _ebss
 80005e0:	200158b0 	.word	0x200158b0

080005e4 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80005e4:	e7fe      	b.n	80005e4 <ADC_IRQHandler>

080005e6 <MX_TouchGFX_Init>:
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_init();
 80005e6:	f000 bc39 	b.w	8000e5c <touchgfx_init>

080005ea <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 80005ea:	f000 bcab 	b.w	8000f44 <touchgfx_taskEntry>

080005ee <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 80005ee:	4770      	bx	lr

080005f0 <_ZN20STM32TouchControllerD0Ev>:
 80005f0:	b510      	push	{r4, lr}
 80005f2:	2104      	movs	r1, #4
 80005f4:	4604      	mov	r4, r0
 80005f6:	f020 f8d7 	bl	80207a8 <_ZdlPvj>
 80005fa:	4620      	mov	r0, r4
 80005fc:	bd10      	pop	{r4, pc}
	...

08000600 <_Z11BSP_TS_Inittt>:
  * @param  XSize: The maximum X size of the TS area on LCD
  * @param  YSize: The maximum Y size of the TS area on LCD
  * @retval TS_OK: if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize)
{
 8000600:	b538      	push	{r3, r4, r5, lr}
    uint8_t ret = TS_ERROR;

    /* Initialize x and y positions boundaries */
    TsXBoundary = XSize;
 8000602:	4b0c      	ldr	r3, [pc, #48]	; (8000634 <_Z11BSP_TS_Inittt+0x34>)
    TsYBoundary = YSize;

    /* Read ID and verify if the IO expander is ready */
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8000604:	4c0c      	ldr	r4, [pc, #48]	; (8000638 <_Z11BSP_TS_Inittt+0x38>)
    TsXBoundary = XSize;
 8000606:	8018      	strh	r0, [r3, #0]
    TsYBoundary = YSize;
 8000608:	4b0c      	ldr	r3, [pc, #48]	; (800063c <_Z11BSP_TS_Inittt+0x3c>)
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 800060a:	2082      	movs	r0, #130	; 0x82
    TsYBoundary = YSize;
 800060c:	8019      	strh	r1, [r3, #0]
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 800060e:	6863      	ldr	r3, [r4, #4]
 8000610:	4798      	blx	r3
 8000612:	f640 0311 	movw	r3, #2065	; 0x811
 8000616:	4298      	cmp	r0, r3
 8000618:	d10a      	bne.n	8000630 <_Z11BSP_TS_Inittt+0x30>
    {
        /* Initialize the TS driver structure */
        TsDrv = &stmpe811_ts_drv;
 800061a:	4d09      	ldr	r5, [pc, #36]	; (8000640 <_Z11BSP_TS_Inittt+0x40>)
    }

    if (ret == TS_OK)
    {
        /* Initialize the LL TS Driver */
        TsDrv->Init(TS_I2C_ADDRESS);
 800061c:	6823      	ldr	r3, [r4, #0]
        TsDrv = &stmpe811_ts_drv;
 800061e:	602c      	str	r4, [r5, #0]
        TsDrv->Init(TS_I2C_ADDRESS);
 8000620:	2082      	movs	r0, #130	; 0x82
 8000622:	4798      	blx	r3
        TsDrv->Start(TS_I2C_ADDRESS);
 8000624:	682b      	ldr	r3, [r5, #0]
 8000626:	2082      	movs	r0, #130	; 0x82
 8000628:	68db      	ldr	r3, [r3, #12]
 800062a:	4798      	blx	r3
 800062c:	2000      	movs	r0, #0
    }

    return ret;
}
 800062e:	bd38      	pop	{r3, r4, r5, pc}
    uint8_t ret = TS_ERROR;
 8000630:	2001      	movs	r0, #1
 8000632:	e7fc      	b.n	800062e <_Z11BSP_TS_Inittt+0x2e>
 8000634:	20000188 	.word	0x20000188
 8000638:	20000054 	.word	0x20000054
 800063c:	2000018a 	.word	0x2000018a
 8000640:	2000018c 	.word	0x2000018c

08000644 <_ZN20STM32TouchController4initEv>:
    BSP_TS_Init(240, 320);
 8000644:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8000648:	20f0      	movs	r0, #240	; 0xf0
 800064a:	f7ff bfd9 	b.w	8000600 <_Z11BSP_TS_Inittt>
	...

08000650 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>:
/**
  * @brief  Returns status and positions of the touch screen.
  * @param  TsState: Pointer to touch screen current state structure
  */
void BSP_TS_GetState(TS_StateTypeDef* TsState)
{
 8000650:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    static uint32_t _x = 0, _y = 0;
    uint16_t xDiff, yDiff, x, y, xr, yr;

    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8000652:	4d2d      	ldr	r5, [pc, #180]	; (8000708 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb8>)
 8000654:	682b      	ldr	r3, [r5, #0]
{
 8000656:	4604      	mov	r4, r0
    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8000658:	691b      	ldr	r3, [r3, #16]
 800065a:	2082      	movs	r0, #130	; 0x82
 800065c:	4798      	blx	r3
 800065e:	b280      	uxth	r0, r0
 8000660:	8020      	strh	r0, [r4, #0]

    if (TsState->TouchDetected)
 8000662:	2800      	cmp	r0, #0
 8000664:	d043      	beq.n	80006ee <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x9e>
    {
        TsDrv->GetXY(TS_I2C_ADDRESS, &x, &y);
 8000666:	682b      	ldr	r3, [r5, #0]
 8000668:	f10d 0206 	add.w	r2, sp, #6
 800066c:	695b      	ldr	r3, [r3, #20]
 800066e:	a901      	add	r1, sp, #4
 8000670:	2082      	movs	r0, #130	; 0x82
 8000672:	4798      	blx	r3

        /* Y value first correction */
        y -= 360;
 8000674:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8000678:	f5a2 72b4 	sub.w	r2, r2, #360	; 0x168
 800067c:	b292      	uxth	r2, r2

        /* Y value second correction */
        yr = y / 11;

        /* Return y position value */
        if (yr <= 0)
 800067e:	2a0a      	cmp	r2, #10
 8000680:	d937      	bls.n	80006f2 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xa2>
        yr = y / 11;
 8000682:	230b      	movs	r3, #11
 8000684:	fbb2 f2f3 	udiv	r2, r2, r3
        {
            yr = 0;
        }
        else if (yr > TsYBoundary)
 8000688:	4b20      	ldr	r3, [pc, #128]	; (800070c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xbc>)
 800068a:	881b      	ldrh	r3, [r3, #0]
 800068c:	429a      	cmp	r2, r3
 800068e:	d901      	bls.n	8000694 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x44>
        {
            yr = TsYBoundary - 1;
 8000690:	3b01      	subs	r3, #1
 8000692:	b29a      	uxth	r2, r3
        else
        {}
        y = yr;

        /* X value first correction */
        if (x <= 3000)
 8000694:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8000698:	f640 31b8 	movw	r1, #3000	; 0xbb8
 800069c:	428b      	cmp	r3, r1
 800069e:	d82a      	bhi.n	80006f6 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xa6>
        {
            x = 3870 - x;
 80006a0:	f5c3 6371 	rsb	r3, r3, #3856	; 0xf10
 80006a4:	330e      	adds	r3, #14
 80006a6:	b29b      	uxth	r3, r3
        {
            x = 3800 - x;
        }

        /* X value second correction */
        xr = x / 15;
 80006a8:	210f      	movs	r1, #15
 80006aa:	fbb3 f3f1 	udiv	r3, r3, r1
        /* Return X position value */
        if (xr <= 0)
        {
            xr = 0;
        }
        else if (xr > TsXBoundary)
 80006ae:	4918      	ldr	r1, [pc, #96]	; (8000710 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc0>)
 80006b0:	8809      	ldrh	r1, [r1, #0]
 80006b2:	428b      	cmp	r3, r1
 80006b4:	d901      	bls.n	80006ba <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x6a>
        {
            xr = TsXBoundary - 1;
 80006b6:	1e4b      	subs	r3, r1, #1
 80006b8:	b29b      	uxth	r3, r3
        }
        else
        {}

        x = xr;
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006ba:	4e16      	ldr	r6, [pc, #88]	; (8000714 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc4>)
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006bc:	4d16      	ldr	r5, [pc, #88]	; (8000718 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc8>)
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006be:	6830      	ldr	r0, [r6, #0]
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006c0:	682f      	ldr	r7, [r5, #0]
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006c2:	4283      	cmp	r3, r0
 80006c4:	b281      	uxth	r1, r0
 80006c6:	bf8c      	ite	hi
 80006c8:	1a59      	subhi	r1, r3, r1
 80006ca:	1ac9      	subls	r1, r1, r3
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006cc:	b2b8      	uxth	r0, r7
 80006ce:	42ba      	cmp	r2, r7
 80006d0:	bf8c      	ite	hi
 80006d2:	1a10      	subhi	r0, r2, r0
 80006d4:	1a80      	subls	r0, r0, r2
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006d6:	b289      	uxth	r1, r1
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006d8:	b280      	uxth	r0, r0

        if (xDiff + yDiff > 5)
 80006da:	4401      	add	r1, r0
 80006dc:	2905      	cmp	r1, #5
        {
            _x = x;
 80006de:	bfc8      	it	gt
 80006e0:	6033      	strgt	r3, [r6, #0]
            _y = y;
        }

        /* Update the X position */
        TsState->X = _x;
 80006e2:	6833      	ldr	r3, [r6, #0]
            _y = y;
 80006e4:	bfc8      	it	gt
 80006e6:	602a      	strgt	r2, [r5, #0]
        TsState->X = _x;
 80006e8:	8063      	strh	r3, [r4, #2]

        /* Update the Y position */
        TsState->Y = _y;
 80006ea:	682b      	ldr	r3, [r5, #0]
 80006ec:	80a3      	strh	r3, [r4, #4]
    }
}
 80006ee:	b003      	add	sp, #12
 80006f0:	bdf0      	pop	{r4, r5, r6, r7, pc}
            yr = 0;
 80006f2:	2200      	movs	r2, #0
 80006f4:	e7ce      	b.n	8000694 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x44>
            x = 3800 - x;
 80006f6:	f5c3 636d 	rsb	r3, r3, #3792	; 0xed0
 80006fa:	3308      	adds	r3, #8
 80006fc:	b29b      	uxth	r3, r3
        if (xr <= 0)
 80006fe:	2b0e      	cmp	r3, #14
 8000700:	d8d2      	bhi.n	80006a8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x58>
            xr = 0;
 8000702:	2300      	movs	r3, #0
 8000704:	e7d9      	b.n	80006ba <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x6a>
 8000706:	bf00      	nop
 8000708:	2000018c 	.word	0x2000018c
 800070c:	2000018a 	.word	0x2000018a
 8000710:	20000188 	.word	0x20000188
 8000714:	20000190 	.word	0x20000190
 8000718:	20000194 	.word	0x20000194

0800071c <_ZN20STM32TouchController11sampleTouchERlS0_>:
{
 800071c:	b537      	push	{r0, r1, r2, r4, r5, lr}
    BSP_TS_GetState(&state);
 800071e:	4668      	mov	r0, sp
{
 8000720:	460d      	mov	r5, r1
 8000722:	4614      	mov	r4, r2
    BSP_TS_GetState(&state);
 8000724:	f7ff ff94 	bl	8000650 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>
    if (state.TouchDetected)
 8000728:	f8bd 0000 	ldrh.w	r0, [sp]
 800072c:	b130      	cbz	r0, 800073c <_ZN20STM32TouchController11sampleTouchERlS0_+0x20>
        x = state.X;
 800072e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8000732:	602b      	str	r3, [r5, #0]
        y = state.Y;
 8000734:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8000738:	6023      	str	r3, [r4, #0]
        return true;
 800073a:	2001      	movs	r0, #1
}
 800073c:	b003      	add	sp, #12
 800073e:	bd30      	pop	{r4, r5, pc}

08000740 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{

}
 8000740:	4770      	bx	lr

08000742 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
 8000742:	4770      	bx	lr

08000744 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
 8000744:	4770      	bx	lr

08000746 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 8000746:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 8000748:	f880 1074 	strb.w	r1, [r0, #116]	; 0x74
        displayOrientationChangeRequested = true;
 800074c:	f880 3075 	strb.w	r3, [r0, #117]	; 0x75
    }
 8000750:	4770      	bx	lr

08000752 <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 8000752:	2000      	movs	r0, #0
 8000754:	4770      	bx	lr
	...

08000758 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8000758:	4b03      	ldr	r3, [pc, #12]	; (8000768 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 800075a:	6441      	str	r1, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 800075c:	3900      	subs	r1, #0
 800075e:	bf18      	it	ne
 8000760:	2101      	movne	r1, #1
 8000762:	7019      	strb	r1, [r3, #0]
    }
 8000764:	4770      	bx	lr
 8000766:	bf00      	nop
 8000768:	20015603 	.word	0x20015603

0800076c <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 800076c:	2000      	movs	r0, #0
 800076e:	4770      	bx	lr

08000770 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 8000770:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8000772:	b10b      	cbz	r3, 8000778 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 8000774:	4608      	mov	r0, r1
 8000776:	4718      	bx	r3
        }
    }
 8000778:	4770      	bx	lr

0800077a <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 800077a:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800077e:	4770      	bx	lr

08000780 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 8000780:	6840      	ldr	r0, [r0, #4]
 8000782:	6803      	ldr	r3, [r0, #0]
 8000784:	699b      	ldr	r3, [r3, #24]
 8000786:	4718      	bx	r3

08000788 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 8000788:	4770      	bx	lr

0800078a <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 800078a:	4770      	bx	lr

0800078c <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 800078c:	4770      	bx	lr

0800078e <_ZN11TouchGFXHAL10initializeEv>:
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 800078e:	f000 bc79 	b.w	8001084 <_ZN20TouchGFXGeneratedHAL10initializeEv>

08000792 <_ZN11TouchGFXHAL9taskEntryEv>:
}

void TouchGFXHAL::taskEntry()
{
 8000792:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 8000794:	6803      	ldr	r3, [r0, #0]
{
 8000796:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 8000798:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800079c:	4798      	blx	r3
    enableInterrupts();
 800079e:	6823      	ldr	r3, [r4, #0]
 80007a0:	4620      	mov	r0, r4
 80007a2:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 80007a4:	4798      	blx	r3

    OSWrappers::waitForVSync();
 80007a6:	f000 f8eb 	bl	8000980 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 80007aa:	6823      	ldr	r3, [r4, #0]
 80007ac:	4620      	mov	r0, r4
 80007ae:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80007b0:	4798      	blx	r3

    LCD_IO_WriteReg(0x29);
 80007b2:	2029      	movs	r0, #41	; 0x29
 80007b4:	f001 f98e 	bl	8001ad4 <LCD_IO_WriteReg>

    for (;;)
    {
        OSWrappers::waitForVSync();
 80007b8:	f000 f8e2 	bl	8000980 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 80007bc:	6823      	ldr	r3, [r4, #0]
 80007be:	4620      	mov	r0, r4
 80007c0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80007c2:	4798      	blx	r3
    for (;;)
 80007c4:	e7f8      	b.n	80007b8 <_ZN11TouchGFXHAL9taskEntryEv+0x26>

080007c6 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 80007c6:	b510      	push	{r4, lr}
 80007c8:	4604      	mov	r4, r0
        swapFrameBuffers();
 80007ca:	f00b f9db 	bl	800bb84 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 80007ce:	6823      	ldr	r3, [r4, #0]
 80007d0:	4620      	mov	r0, r4
 80007d2:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    }
 80007d6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 80007da:	4718      	bx	r3

080007dc <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 80007dc:	f000 bc44 	b.w	8001068 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

080007e0 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 80007e0:	f000 bc48 	b.w	8001074 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

080007e4 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 80007e4:	f000 bc74 	b.w	80010d0 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

080007e8 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 80007e8:	f000 bc1a 	b.w	8001020 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

080007ec <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 80007ec:	f000 bc74 	b.w	80010d8 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

080007f0 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 80007f0:	f000 bc7c 	b.w	80010ec <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

080007f4 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 80007f4:	f000 bc1e 	b.w	8001034 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

080007f8 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 80007f8:	f00a bc38 	b.w	800b06c <_ZN8touchgfx3HAL16flushFrameBufferEv>

080007fc <_ZN11TouchGFXHALD0Ev>:
 80007fc:	b510      	push	{r4, lr}
 80007fe:	217c      	movs	r1, #124	; 0x7c
 8000800:	4604      	mov	r4, r0
 8000802:	f01f ffd1 	bl	80207a8 <_ZdlPvj>
 8000806:	4620      	mov	r0, r4
 8000808:	bd10      	pop	{r4, pc}

0800080a <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 800080a:	f890 3077 	ldrb.w	r3, [r0, #119]	; 0x77
 800080e:	b11b      	cbz	r3, 8000818 <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 8000810:	6840      	ldr	r0, [r0, #4]
 8000812:	6803      	ldr	r3, [r0, #0]
 8000814:	681b      	ldr	r3, [r3, #0]
 8000816:	4718      	bx	r3
    }
 8000818:	4618      	mov	r0, r3
 800081a:	4770      	bx	lr

0800081c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 800081c:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 800081e:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 8000822:	f890 4074 	ldrb.w	r4, [r0, #116]	; 0x74
            if (DISPLAY_ROTATION == rotate0)
 8000826:	4b0c      	ldr	r3, [pc, #48]	; (8000858 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 8000828:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 800082a:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 800082c:	d009      	beq.n	8000842 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 800082e:	b93a      	cbnz	r2, 8000840 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000830:	4a0a      	ldr	r2, [pc, #40]	; (800085c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 8000832:	490b      	ldr	r1, [pc, #44]	; (8000860 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000834:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 8000836:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 8000838:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800083a:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 800083c:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 800083e:	701a      	strb	r2, [r3, #0]
    }
 8000840:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 8000842:	2a00      	cmp	r2, #0
 8000844:	d0fc      	beq.n	8000840 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000846:	4a05      	ldr	r2, [pc, #20]	; (800085c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 8000848:	4905      	ldr	r1, [pc, #20]	; (8000860 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800084a:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 800084c:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 800084e:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000850:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 8000852:	2200      	movs	r2, #0
 8000854:	e7f3      	b.n	800083e <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 8000856:	bf00      	nop
 8000858:	200155fc 	.word	0x200155fc
 800085c:	200155f8 	.word	0x200155f8
 8000860:	200155fa 	.word	0x200155fa

08000864 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 8000864:	b570      	push	{r4, r5, r6, lr}
 8000866:	460d      	mov	r5, r1
 8000868:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 800086a:	b935      	cbnz	r5, 800087a <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 800086c:	4b09      	ldr	r3, [pc, #36]	; (8000894 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 800086e:	4a0a      	ldr	r2, [pc, #40]	; (8000898 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 8000870:	480a      	ldr	r0, [pc, #40]	; (800089c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 8000872:	f240 21d2 	movw	r1, #722	; 0x2d2
 8000876:	f020 f84b 	bl	8020910 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 800087a:	e9c0 520f 	strd	r5, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 800087e:	4b08      	ldr	r3, [pc, #32]	; (80008a0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 8000880:	3a00      	subs	r2, #0
 8000882:	bf18      	it	ne
 8000884:	2201      	movne	r2, #1
 8000886:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 8000888:	6803      	ldr	r3, [r0, #0]
    }
 800088a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setAnimationStorage(animationStorage);
 800088e:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8000892:	4718      	bx	r3
 8000894:	08021bb8 	.word	0x08021bb8
 8000898:	08021bf0 	.word	0x08021bf0
 800089c:	08021c3e 	.word	0x08021c3e
 80008a0:	20015602 	.word	0x20015602

080008a4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 80008a4:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 80008a6:	4b09      	ldr	r3, [pc, #36]	; (80008cc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 80008a8:	881b      	ldrh	r3, [r3, #0]
 80008aa:	428b      	cmp	r3, r1
 80008ac:	d803      	bhi.n	80008b6 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 80008ae:	4b08      	ldr	r3, [pc, #32]	; (80008d0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 80008b0:	881b      	ldrh	r3, [r3, #0]
 80008b2:	4293      	cmp	r3, r2
 80008b4:	d905      	bls.n	80008c2 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 80008b6:	4b07      	ldr	r3, [pc, #28]	; (80008d4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 80008b8:	4a07      	ldr	r2, [pc, #28]	; (80008d8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 80008ba:	4808      	ldr	r0, [pc, #32]	; (80008dc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 80008bc:	219e      	movs	r1, #158	; 0x9e
 80008be:	f020 f827 	bl	8020910 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 80008c2:	4b07      	ldr	r3, [pc, #28]	; (80008e0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 80008c4:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 80008c6:	4b07      	ldr	r3, [pc, #28]	; (80008e4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 80008c8:	801a      	strh	r2, [r3, #0]
    }
 80008ca:	bd08      	pop	{r3, pc}
 80008cc:	200155f8 	.word	0x200155f8
 80008d0:	200155fa 	.word	0x200155fa
 80008d4:	08021c83 	.word	0x08021c83
 80008d8:	08021ce6 	.word	0x08021ce6
 80008dc:	08021c3e 	.word	0x08021c3e
 80008e0:	200155fe 	.word	0x200155fe
 80008e4:	20015600 	.word	0x20015600

080008e8 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 80008e8:	2101      	movs	r1, #1
{
 80008ea:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 80008ec:	2200      	movs	r2, #0
 80008ee:	4608      	mov	r0, r1
 80008f0:	f007 fef6 	bl	80086e0 <osSemaphoreNew>
 80008f4:	4b0a      	ldr	r3, [pc, #40]	; (8000920 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 80008f6:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 80008f8:	b928      	cbnz	r0, 8000906 <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 80008fa:	4b0a      	ldr	r3, [pc, #40]	; (8000924 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 80008fc:	4a0a      	ldr	r2, [pc, #40]	; (8000928 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 80008fe:	2129      	movs	r1, #41	; 0x29

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000900:	480a      	ldr	r0, [pc, #40]	; (800092c <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8000902:	f020 f805 	bl	8020910 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8000906:	2200      	movs	r2, #0
 8000908:	2104      	movs	r1, #4
 800090a:	2001      	movs	r0, #1
 800090c:	f007 ffae 	bl	800886c <osMessageQueueNew>
 8000910:	4b07      	ldr	r3, [pc, #28]	; (8000930 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8000912:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000914:	b918      	cbnz	r0, 800091e <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8000916:	4b07      	ldr	r3, [pc, #28]	; (8000934 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8000918:	4a03      	ldr	r2, [pc, #12]	; (8000928 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 800091a:	212d      	movs	r1, #45	; 0x2d
 800091c:	e7f0      	b.n	8000900 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 800091e:	bd08      	pop	{r3, pc}
 8000920:	2000019c 	.word	0x2000019c
 8000924:	08021e04 	.word	0x08021e04
 8000928:	08021e4d 	.word	0x08021e4d
 800092c:	08021e7c 	.word	0x08021e7c
 8000930:	20000198 	.word	0x20000198
 8000934:	08021eca 	.word	0x08021eca

08000938 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8000938:	4b02      	ldr	r3, [pc, #8]	; (8000944 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 800093a:	f04f 31ff 	mov.w	r1, #4294967295
 800093e:	6818      	ldr	r0, [r3, #0]
 8000940:	f007 bf24 	b.w	800878c <osSemaphoreAcquire>
 8000944:	2000019c 	.word	0x2000019c

08000948 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8000948:	4b01      	ldr	r3, [pc, #4]	; (8000950 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 800094a:	6818      	ldr	r0, [r3, #0]
 800094c:	f007 bf58 	b.w	8008800 <osSemaphoreRelease>
 8000950:	2000019c 	.word	0x2000019c

08000954 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8000954:	4b02      	ldr	r3, [pc, #8]	; (8000960 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8000956:	2100      	movs	r1, #0
 8000958:	6818      	ldr	r0, [r3, #0]
 800095a:	f007 bf17 	b.w	800878c <osSemaphoreAcquire>
 800095e:	bf00      	nop
 8000960:	2000019c 	.word	0x2000019c

08000964 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 8000964:	f7ff bff0 	b.w	8000948 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08000968 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8000968:	4803      	ldr	r0, [pc, #12]	; (8000978 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 800096a:	4904      	ldr	r1, [pc, #16]	; (800097c <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 800096c:	6800      	ldr	r0, [r0, #0]
 800096e:	2300      	movs	r3, #0
 8000970:	461a      	mov	r2, r3
 8000972:	f007 bfc1 	b.w	80088f8 <osMessageQueuePut>
 8000976:	bf00      	nop
 8000978:	20000198 	.word	0x20000198
 800097c:	20000004 	.word	0x20000004

08000980 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8000980:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8000982:	4c08      	ldr	r4, [pc, #32]	; (80009a4 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8000984:	2300      	movs	r3, #0
 8000986:	461a      	mov	r2, r3
 8000988:	a901      	add	r1, sp, #4
 800098a:	6820      	ldr	r0, [r4, #0]
 800098c:	f007 fff6 	bl	800897c <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8000990:	6820      	ldr	r0, [r4, #0]
 8000992:	f04f 33ff 	mov.w	r3, #4294967295
 8000996:	2200      	movs	r2, #0
 8000998:	a901      	add	r1, sp, #4
 800099a:	f007 ffef 	bl	800897c <osMessageQueueGet>
}
 800099e:	b002      	add	sp, #8
 80009a0:	bd10      	pop	{r4, pc}
 80009a2:	bf00      	nop
 80009a4:	20000198 	.word	0x20000198

080009a8 <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 80009a8:	6803      	ldr	r3, [r0, #0]
 80009aa:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80009ac:	4718      	bx	r3

080009ae <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
 80009ae:	2001      	movs	r0, #1
 80009b0:	4770      	bx	lr

080009b2 <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 80009b2:	6803      	ldr	r3, [r0, #0]
 80009b4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80009b6:	4718      	bx	r3

080009b8 <_ZN8STM32DMA10initializeEv>:
    /* Disable DMA2D global Interrupt */
    NVIC_DisableIRQ(DMA2D_IRQn);
}

void STM32DMA::initialize()
{
 80009b8:	b082      	sub	sp, #8
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 80009ba:	2300      	movs	r3, #0
 80009bc:	9301      	str	r3, [sp, #4]
 80009be:	4b0d      	ldr	r3, [pc, #52]	; (80009f4 <_ZN8STM32DMA10initializeEv+0x3c>)
 80009c0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80009c2:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 80009c6:	631a      	str	r2, [r3, #48]	; 0x30
 80009c8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80009ca:	f402 0200 	and.w	r2, r2, #8388608	; 0x800000
 80009ce:	9201      	str	r2, [sp, #4]
 80009d0:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
 80009d2:	691a      	ldr	r2, [r3, #16]
 80009d4:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 80009d8:	611a      	str	r2, [r3, #16]
    __HAL_RCC_DMA2D_RELEASE_RESET();
 80009da:	691a      	ldr	r2, [r3, #16]
 80009dc:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 80009e0:	611a      	str	r2, [r3, #16]

    /* Add transfer complete callback function */
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 80009e2:	4b05      	ldr	r3, [pc, #20]	; (80009f8 <_ZN8STM32DMA10initializeEv+0x40>)
 80009e4:	4a05      	ldr	r2, [pc, #20]	; (80009fc <_ZN8STM32DMA10initializeEv+0x44>)
 80009e6:	611a      	str	r2, [r3, #16]
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80009e8:	4b05      	ldr	r3, [pc, #20]	; (8000a00 <_ZN8STM32DMA10initializeEv+0x48>)
 80009ea:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80009ee:	609a      	str	r2, [r3, #8]

    /* Enable DMA2D global Interrupt */
    NVIC_EnableIRQ(DMA2D_IRQn);
}
 80009f0:	b002      	add	sp, #8
 80009f2:	4770      	bx	lr
 80009f4:	40023800 	.word	0x40023800
 80009f8:	20003a54 	.word	0x20003a54
 80009fc:	08000a45 	.word	0x08000a45
 8000a00:	e000e100 	.word	0xe000e100

08000a04 <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 8000a04:	f240 30ef 	movw	r0, #1007	; 0x3ef
 8000a08:	4770      	bx	lr
	...

08000a0c <_ZN8STM32DMAD1Ev>:
STM32DMA::~STM32DMA()
 8000a0c:	4b05      	ldr	r3, [pc, #20]	; (8000a24 <_ZN8STM32DMAD1Ev+0x18>)
 8000a0e:	6003      	str	r3, [r0, #0]
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000a10:	4b05      	ldr	r3, [pc, #20]	; (8000a28 <_ZN8STM32DMAD1Ev+0x1c>)
 8000a12:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8000a16:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8000a1a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8000a1e:	f3bf 8f6f 	isb	sy
}
 8000a22:	4770      	bx	lr
 8000a24:	08022068 	.word	0x08022068
 8000a28:	e000e100 	.word	0xe000e100

08000a2c <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
 8000a2c:	b510      	push	{r4, lr}
 8000a2e:	4604      	mov	r4, r0
}
 8000a30:	f44f 615a 	mov.w	r1, #3488	; 0xda0
 8000a34:	f7ff ffea 	bl	8000a0c <_ZN8STM32DMAD1Ev>
 8000a38:	4620      	mov	r0, r4
 8000a3a:	f01f feb5 	bl	80207a8 <_ZdlPvj>
 8000a3e:	4620      	mov	r0, r4
 8000a40:	bd10      	pop	{r4, pc}
	...

08000a44 <DMA2D_XferCpltCallback>:
        return instance;
 8000a44:	4b02      	ldr	r3, [pc, #8]	; (8000a50 <DMA2D_XferCpltCallback+0xc>)
 8000a46:	681b      	ldr	r3, [r3, #0]
 8000a48:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 8000a4a:	6803      	ldr	r3, [r0, #0]
 8000a4c:	695b      	ldr	r3, [r3, #20]
 8000a4e:	4718      	bx	r3
 8000a50:	20015604 	.word	0x20015604

08000a54 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8000a54:	b570      	push	{r4, r5, r6, lr}
 8000a56:	4604      	mov	r4, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 8000a58:	4625      	mov	r5, r4
 8000a5a:	4b0a      	ldr	r3, [pc, #40]	; (8000a84 <_ZN8STM32DMAC1Ev+0x30>)
 8000a5c:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8000a5e:	2600      	movs	r6, #0
 8000a60:	6060      	str	r0, [r4, #4]
 8000a62:	7226      	strb	r6, [r4, #8]
 8000a64:	7266      	strb	r6, [r4, #9]
 8000a66:	f845 3b20 	str.w	r3, [r5], #32
 8000a6a:	2260      	movs	r2, #96	; 0x60
 8000a6c:	4629      	mov	r1, r5
 8000a6e:	f00b f9df 	bl	800be30 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 8000a72:	f504 635a 	add.w	r3, r4, #3488	; 0xda0
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 8000a76:	60ee      	str	r6, [r5, #12]
 8000a78:	3524      	adds	r5, #36	; 0x24
 8000a7a:	42ab      	cmp	r3, r5
 8000a7c:	d1fb      	bne.n	8000a76 <_ZN8STM32DMAC1Ev+0x22>
}
 8000a7e:	4620      	mov	r0, r4
 8000a80:	bd70      	pop	{r4, r5, r6, pc}
 8000a82:	bf00      	nop
 8000a84:	08022068 	.word	0x08022068

08000a88 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 8000a88:	b508      	push	{r3, lr}
    switch (format)
 8000a8a:	290b      	cmp	r1, #11
 8000a8c:	d80b      	bhi.n	8000aa6 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1e>
 8000a8e:	e8df f001 	tbb	[pc, r1]
 8000a92:	0612      	.short	0x0612
 8000a94:	0a0a0a10 	.word	0x0a0a0a10
 8000a98:	0808080a 	.word	0x0808080a
 8000a9c:	0808      	.short	0x0808
 8000a9e:	2001      	movs	r0, #1
}
 8000aa0:	bd08      	pop	{r3, pc}
        dma2dColorMode = DMA2D_INPUT_L8;
 8000aa2:	2005      	movs	r0, #5
        break;
 8000aa4:	e7fc      	b.n	8000aa0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        assert(0 && "Unsupported Format!");
 8000aa6:	4b05      	ldr	r3, [pc, #20]	; (8000abc <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 8000aa8:	4a05      	ldr	r2, [pc, #20]	; (8000ac0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 8000aaa:	4806      	ldr	r0, [pc, #24]	; (8000ac4 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x3c>)
 8000aac:	2167      	movs	r1, #103	; 0x67
 8000aae:	f01f ff2f 	bl	8020910 <__assert_func>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 8000ab2:	2000      	movs	r0, #0
 8000ab4:	e7f4      	b.n	8000aa0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_INPUT_RGB565;
 8000ab6:	2002      	movs	r0, #2
    return dma2dColorMode;
 8000ab8:	e7f2      	b.n	8000aa0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 8000aba:	bf00      	nop
 8000abc:	08021f0c 	.word	0x08021f0c
 8000ac0:	08021f27 	.word	0x08021f27
 8000ac4:	08021f71 	.word	0x08021f71

08000ac8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 8000ac8:	b508      	push	{r3, lr}
    switch (format)
 8000aca:	290a      	cmp	r1, #10
 8000acc:	d809      	bhi.n	8000ae2 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1a>
 8000ace:	e8df f001 	tbb	[pc, r1]
 8000ad2:	0610      	.short	0x0610
 8000ad4:	0808080e 	.word	0x0808080e
 8000ad8:	06060608 	.word	0x06060608
 8000adc:	06          	.byte	0x06
 8000add:	00          	.byte	0x00
 8000ade:	2001      	movs	r0, #1
}
 8000ae0:	bd08      	pop	{r3, pc}
        assert(0 && "Unsupported Format!");
 8000ae2:	4b05      	ldr	r3, [pc, #20]	; (8000af8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x30>)
 8000ae4:	4a05      	ldr	r2, [pc, #20]	; (8000afc <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 8000ae6:	4806      	ldr	r0, [pc, #24]	; (8000b00 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 8000ae8:	2188      	movs	r1, #136	; 0x88
 8000aea:	f01f ff11 	bl	8020910 <__assert_func>
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 8000aee:	2000      	movs	r0, #0
 8000af0:	e7f6      	b.n	8000ae0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 8000af2:	2002      	movs	r0, #2
    return dma2dColorMode;
 8000af4:	e7f4      	b.n	8000ae0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 8000af6:	bf00      	nop
 8000af8:	08021f0c 	.word	0x08021f0c
 8000afc:	08021fbd 	.word	0x08021fbd
 8000b00:	08021f71 	.word	0x08021f71

08000b04 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
 * BLIT_OP_COPY_ARGB8888_WITH_ALPHA
 * BLIT_OP_COPY_A4
 * BLIT_OP_COPY_A8
 */
void STM32DMA::setupDataCopy(const BlitOp& blitOp)
{
 8000b04:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000b08:	7f4f      	ldrb	r7, [r1, #29]
{
 8000b0a:	460c      	mov	r4, r1
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000b0c:	4639      	mov	r1, r7
{
 8000b0e:	4681      	mov	r9, r0
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000b10:	f7ff ffba 	bl	8000a88 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000b14:	f894 801e 	ldrb.w	r8, [r4, #30]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000b18:	4605      	mov	r5, r0
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000b1a:	4641      	mov	r1, r8
 8000b1c:	4648      	mov	r0, r9
 8000b1e:	f7ff ffb3 	bl	8000a88 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000b22:	4641      	mov	r1, r8
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000b24:	4606      	mov	r6, r0
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000b26:	4648      	mov	r0, r9
 8000b28:	f7ff ffce 	bl	8000ac8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000b2c:	8aa1      	ldrh	r1, [r4, #20]
 8000b2e:	8b62      	ldrh	r2, [r4, #26]
 8000b30:	4b42      	ldr	r3, [pc, #264]	; (8000c3c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000b32:	1a52      	subs	r2, r2, r1
 8000b34:	641a      	str	r2, [r3, #64]	; 0x40

    /* DMA2D BGOR register configuration */
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000b36:	619a      	str	r2, [r3, #24]

    /* DMA2D FGOR register configuration */
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 8000b38:	8b22      	ldrh	r2, [r4, #24]
 8000b3a:	1a52      	subs	r2, r2, r1
 8000b3c:	611a      	str	r2, [r3, #16]

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000b3e:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000b40:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000b42:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000b46:	645a      	str	r2, [r3, #68]	; 0x44

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000b48:	6920      	ldr	r0, [r4, #16]

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000b4a:	6862      	ldr	r2, [r4, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000b4c:	63d8      	str	r0, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000b4e:	60da      	str	r2, [r3, #12]

    switch (blitOp.operation)
 8000b50:	6821      	ldr	r1, [r4, #0]
    {
    case BLIT_OP_COPY_A4:
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b52:	f894 c01c 	ldrb.w	ip, [r4, #28]
    switch (blitOp.operation)
 8000b56:	2980      	cmp	r1, #128	; 0x80
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b58:	ea4f 620c 	mov.w	r2, ip, lsl #24
    switch (blitOp.operation)
 8000b5c:	d026      	beq.n	8000bac <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa8>
 8000b5e:	d810      	bhi.n	8000b82 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x7e>
 8000b60:	2920      	cmp	r1, #32
 8000b62:	ea45 0402 	orr.w	r4, r5, r2
 8000b66:	d061      	beq.n	8000c2c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
 8000b68:	2940      	cmp	r1, #64	; 0x40
 8000b6a:	d05f      	beq.n	8000c2c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
 8000b6c:	2904      	cmp	r1, #4
 8000b6e:	d05d      	beq.n	8000c2c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
        break;
    default: /* BLIT_OP_COPY */
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b70:	4b32      	ldr	r3, [pc, #200]	; (8000c3c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000b72:	432a      	orrs	r2, r5
 8000b74:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000

        /* Perform pixel-format-conversion (PFC) If Bitmap format is not same format as framebuffer format */
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000b78:	4547      	cmp	r7, r8
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b7a:	61da      	str	r2, [r3, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000b7c:	d05a      	beq.n	8000c34 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x130>
        {
            /* Start DMA2D : PFC Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
 8000b7e:	4a30      	ldr	r2, [pc, #192]	; (8000c40 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 8000b80:	e040      	b.n	8000c04 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
    switch (blitOp.operation)
 8000b82:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
 8000b86:	d007      	beq.n	8000b98 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x94>
 8000b88:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 8000b8c:	d1f0      	bne.n	8000b70 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x6c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b8e:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8000b92:	f042 0209 	orr.w	r2, r2, #9
 8000b96:	e003      	b.n	8000ba0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b98:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8000b9c:	f042 020a 	orr.w	r2, r2, #10
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000ba0:	61da      	str	r2, [r3, #28]
     *
     * @return The result of the operation.
     */
    operator uint32_t() const
    {
        return color;
 8000ba2:	68e2      	ldr	r2, [r4, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8000ba4:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000ba6:	625e      	str	r6, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000ba8:	6158      	str	r0, [r3, #20]
 8000baa:	e02a      	b.n	8000c02 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfe>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 8000bac:	68a4      	ldr	r4, [r4, #8]
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000bae:	432a      	orrs	r2, r5
 8000bb0:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 8000bb4:	1d21      	adds	r1, r4, #4
 8000bb6:	62d9      	str	r1, [r3, #44]	; 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000bb8:	61da      	str	r2, [r3, #28]
            switch ((Bitmap::ClutFormat)palette->format)
 8000bba:	7822      	ldrb	r2, [r4, #0]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000bbc:	625e      	str	r6, [r3, #36]	; 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000bbe:	6158      	str	r0, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
 8000bc0:	b142      	cbz	r2, 8000bd4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd0>
 8000bc2:	2a01      	cmp	r2, #1
 8000bc4:	d021      	beq.n	8000c0a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x106>
                assert(0 && "Unsupported format");
 8000bc6:	4b1f      	ldr	r3, [pc, #124]	; (8000c44 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x140>)
 8000bc8:	4a1f      	ldr	r2, [pc, #124]	; (8000c48 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x144>)
 8000bca:	4820      	ldr	r0, [pc, #128]	; (8000c4c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x148>)
 8000bcc:	f44f 7189 	mov.w	r1, #274	; 0x112
 8000bd0:	f01f fe9e 	bl	8020910 <__assert_func>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000bd4:	69da      	ldr	r2, [r3, #28]
 8000bd6:	8861      	ldrh	r1, [r4, #2]
 8000bd8:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 8000bdc:	3901      	subs	r1, #1
 8000bde:	f022 0210 	bic.w	r2, r2, #16
 8000be2:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8000be6:	61da      	str	r2, [r3, #28]
            bool blend = true;
 8000be8:	2001      	movs	r0, #1
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 8000bea:	4b14      	ldr	r3, [pc, #80]	; (8000c3c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000bec:	69da      	ldr	r2, [r3, #28]
 8000bee:	f042 0220 	orr.w	r2, r2, #32
 8000bf2:	61da      	str	r2, [r3, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 8000bf4:	69da      	ldr	r2, [r3, #28]
 8000bf6:	0692      	lsls	r2, r2, #26
 8000bf8:	d4fc      	bmi.n	8000bf4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf0>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 8000bfa:	2210      	movs	r2, #16
 8000bfc:	609a      	str	r2, [r3, #8]
            if(blend)
 8000bfe:	2800      	cmp	r0, #0
 8000c00:	d0bd      	beq.n	8000b7e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x7a>
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 8000c02:	4a13      	ldr	r2, [pc, #76]	; (8000c50 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14c>)
        }
        else
        {
            /* Start DMA2D : M2M Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8000c04:	601a      	str	r2, [r3, #0]
        }
        break;
    }
}
 8000c06:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000c0a:	8862      	ldrh	r2, [r4, #2]
 8000c0c:	69d9      	ldr	r1, [r3, #28]
 8000c0e:	1e54      	subs	r4, r2, #1
 8000c10:	f421 427f 	bic.w	r2, r1, #65280	; 0xff00
 8000c14:	f022 0210 	bic.w	r2, r2, #16
 8000c18:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
                if(blitOp.alpha == 255)
 8000c1c:	f1bc 00ff 	subs.w	r0, ip, #255	; 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000c20:	f042 0210 	orr.w	r2, r2, #16
                if(blitOp.alpha == 255)
 8000c24:	bf18      	it	ne
 8000c26:	2001      	movne	r0, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000c28:	61da      	str	r2, [r3, #28]
                break;
 8000c2a:	e7de      	b.n	8000bea <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe6>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000c2c:	f444 3400 	orr.w	r4, r4, #131072	; 0x20000
 8000c30:	61dc      	str	r4, [r3, #28]
 8000c32:	e7b8      	b.n	8000ba6 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa2>
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8000c34:	f240 2201 	movw	r2, #513	; 0x201
 8000c38:	e7e4      	b.n	8000c04 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
 8000c3a:	bf00      	nop
 8000c3c:	4002b000 	.word	0x4002b000
 8000c40:	00010201 	.word	0x00010201
 8000c44:	08022008 	.word	0x08022008
 8000c48:	08022022 	.word	0x08022022
 8000c4c:	08021f71 	.word	0x08021f71
 8000c50:	00020201 	.word	0x00020201

08000c54 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
 8000c54:	b570      	push	{r4, r5, r6, lr}
 8000c56:	460c      	mov	r4, r1
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000c58:	7f89      	ldrb	r1, [r1, #30]
 8000c5a:	f7ff ff35 	bl	8000ac8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000c5e:	8aa6      	ldrh	r6, [r4, #20]
 8000c60:	8ae1      	ldrh	r1, [r4, #22]

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c62:	8b62      	ldrh	r2, [r4, #26]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000c64:	4b15      	ldr	r3, [pc, #84]	; (8000cbc <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x68>)
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c66:	6925      	ldr	r5, [r4, #16]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000c68:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000c6a:	ea41 4106 	orr.w	r1, r1, r6, lsl #16
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c6e:	1b92      	subs	r2, r2, r6
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000c70:	6459      	str	r1, [r3, #68]	; 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c72:	63dd      	str	r5, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c74:	641a      	str	r2, [r3, #64]	; 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 8000c76:	6826      	ldr	r6, [r4, #0]
 8000c78:	68e1      	ldr	r1, [r4, #12]
 8000c7a:	2e08      	cmp	r6, #8
 8000c7c:	d10d      	bne.n	8000c9a <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x46>
    {
        /* DMA2D BGOR register configuration */
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c7e:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c80:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000c82:	6258      	str	r0, [r3, #36]	; 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8000c84:	7f20      	ldrb	r0, [r4, #28]
 8000c86:	4a0e      	ldr	r2, [pc, #56]	; (8000cc0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x6c>)
 8000c88:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 8000c8c:	61da      	str	r2, [r3, #28]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
 8000c8e:	4a0d      	ldr	r2, [pc, #52]	; (8000cc4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x70>)
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8000c90:	6219      	str	r1, [r3, #32]
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c92:	615d      	str	r5, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c94:	60dd      	str	r5, [r3, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8000c96:	601a      	str	r2, [r3, #0]
    }
}
 8000c98:	bd70      	pop	{r4, r5, r6, pc}
        WRITE_REG(DMA2D->FGOR, 0);
 8000c9a:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8000c9c:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 8000c9e:	611a      	str	r2, [r3, #16]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
 8000ca0:	0948      	lsrs	r0, r1, #5
 8000ca2:	0a0a      	lsrs	r2, r1, #8
 8000ca4:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8000ca8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8000cac:	4302      	orrs	r2, r0
 8000cae:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8000cb2:	430a      	orrs	r2, r1
 8000cb4:	639a      	str	r2, [r3, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8000cb6:	4a04      	ldr	r2, [pc, #16]	; (8000cc8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x74>)
 8000cb8:	e7ed      	b.n	8000c96 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x42>
 8000cba:	bf00      	nop
 8000cbc:	4002b000 	.word	0x4002b000
 8000cc0:	00010009 	.word	0x00010009
 8000cc4:	00020201 	.word	0x00020201
 8000cc8:	00030201 	.word	0x00030201

08000ccc <_ZN8touchgfx5paint6rgb5658tearDownEv>:
    * @brief Waits until previous DMA drawing operation has finished
    */
    void tearDown()
    {
        /* Wait for DMA2D to finish last run */
        while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8000ccc:	4b03      	ldr	r3, [pc, #12]	; (8000cdc <_ZN8touchgfx5paint6rgb5658tearDownEv+0x10>)
 8000cce:	681a      	ldr	r2, [r3, #0]
 8000cd0:	07d2      	lsls	r2, r2, #31
 8000cd2:	d4fc      	bmi.n	8000cce <_ZN8touchgfx5paint6rgb5658tearDownEv+0x2>

        /* Clear transfer flags */
        WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC|DMA2D_FLAG_CE|DMA2D_FLAG_TE);
 8000cd4:	2223      	movs	r2, #35	; 0x23
 8000cd6:	609a      	str	r2, [r3, #8]
    }
 8000cd8:	4770      	bx	lr
 8000cda:	bf00      	nop
 8000cdc:	4002b000 	.word	0x4002b000

08000ce0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
    *
    * @brief Renders Canvas Widget chunks using DMA.
    * This functions will not generate an interrupt, and will not affect the DMA queue.
    */
    void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
    {
 8000ce0:	b530      	push	{r4, r5, lr}
        /* Wait for DMA2D to finish last run */
        while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8000ce2:	4c0f      	ldr	r4, [pc, #60]	; (8000d20 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x40>)
 8000ce4:	6825      	ldr	r5, [r4, #0]
 8000ce6:	07ed      	lsls	r5, r5, #31
 8000ce8:	d4fc      	bmi.n	8000ce4 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4>

        /* Clear transfer flags */
        WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC|DMA2D_FLAG_CE|DMA2D_FLAG_TE);
 8000cea:	2523      	movs	r5, #35	; 0x23

        /* DMA2D OPFCCR register configuration */
        WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

        /* Configure DMA2D data size */
        WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000cec:	0409      	lsls	r1, r1, #16
        WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC|DMA2D_FLAG_CE|DMA2D_FLAG_TE);
 8000cee:	60a5      	str	r5, [r4, #8]
        WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000cf0:	f041 0101 	orr.w	r1, r1, #1
        WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8000cf4:	2502      	movs	r5, #2

        /* Configure DMA2D destination address */
        WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

        if (alpha < 0xFF)
 8000cf6:	2bff      	cmp	r3, #255	; 0xff
        WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8000cf8:	6365      	str	r5, [r4, #52]	; 0x34
        WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000cfa:	6461      	str	r1, [r4, #68]	; 0x44
        WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 8000cfc:	63e0      	str	r0, [r4, #60]	; 0x3c
        if (alpha < 0xFF)
 8000cfe:	d00a      	beq.n	8000d16 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x36>
        {
            /* Write DMA2D BGPFCCR register */
            WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));

            /* Write DMA2D FGPFCCR register */
            WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8000d00:	4908      	ldr	r1, [pc, #32]	; (8000d24 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x44>)
            WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000d02:	6265      	str	r5, [r4, #36]	; 0x24
            WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8000d04:	ea41 6303 	orr.w	r3, r1, r3, lsl #24
 8000d08:	61e3      	str	r3, [r4, #28]

            /* Configure DMA2D source address */
            WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);

            /* Enable the Peripheral and Enable the transfer complete interrupt */
            WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
 8000d0a:	4b07      	ldr	r3, [pc, #28]	; (8000d28 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x48>)
            WRITE_REG(DMA2D->FGCOLR, color);
 8000d0c:	6222      	str	r2, [r4, #32]
            WRITE_REG(DMA2D->BGMAR, (uint32_t)ptr);
 8000d0e:	6160      	str	r0, [r4, #20]
            WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);
 8000d10:	60e0      	str	r0, [r4, #12]

            /* Set color */
            WRITE_REG(DMA2D->OCOLR, color565);

            /* Enable the Peripheral and Enable the transfer complete interrupt */
            WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 8000d12:	6023      	str	r3, [r4, #0]
        }
    }
 8000d14:	bd30      	pop	{r4, r5, pc}
            WRITE_REG(DMA2D->FGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8000d16:	61e5      	str	r5, [r4, #28]
            WRITE_REG(DMA2D->OCOLR, color565);
 8000d18:	9b03      	ldr	r3, [sp, #12]
 8000d1a:	63a3      	str	r3, [r4, #56]	; 0x38
            WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 8000d1c:	4b03      	ldr	r3, [pc, #12]	; (8000d2c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4c>)
 8000d1e:	e7f8      	b.n	8000d12 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x32>
 8000d20:	4002b000 	.word	0x4002b000
 8000d24:	00010009 	.word	0x00010009
 8000d28:	00020001 	.word	0x00020001
 8000d2c:	00030001 	.word	0x00030001

08000d30 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8000d30:	2001      	movs	r0, #1
 8000d32:	4770      	bx	lr

08000d34 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8000d34:	2038      	movs	r0, #56	; 0x38
 8000d36:	4770      	bx	lr

08000d38 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 8000d38:	2338      	movs	r3, #56	; 0x38
 8000d3a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000d3e:	3008      	adds	r0, #8
 8000d40:	4770      	bx	lr

08000d42 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 8000d42:	2338      	movs	r3, #56	; 0x38
 8000d44:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000d48:	3008      	adds	r0, #8
 8000d4a:	4770      	bx	lr

08000d4c <_ZNK8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8000d4c:	2001      	movs	r0, #1
 8000d4e:	4770      	bx	lr

08000d50 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8000d50:	f242 703c 	movw	r0, #10044	; 0x273c
 8000d54:	4770      	bx	lr

08000d56 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000d56:	f242 733c 	movw	r3, #10044	; 0x273c
 8000d5a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000d5e:	3008      	adds	r0, #8
 8000d60:	4770      	bx	lr

08000d62 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000d62:	f242 733c 	movw	r3, #10044	; 0x273c
 8000d66:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000d6a:	3008      	adds	r0, #8
 8000d6c:	4770      	bx	lr

08000d6e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8000d6e:	2001      	movs	r0, #1
 8000d70:	4770      	bx	lr

08000d72 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8000d72:	2010      	movs	r0, #16
 8000d74:	4770      	bx	lr

08000d76 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000d76:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8000d7a:	3008      	adds	r0, #8
 8000d7c:	4770      	bx	lr

08000d7e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000d7e:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8000d82:	3008      	adds	r0, #8
 8000d84:	4770      	bx	lr

08000d86 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoScreen1ScreenNoTransition();
 8000d86:	4608      	mov	r0, r1
 8000d88:	f001 bdc2 	b.w	8002910 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>

08000d8c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8000d8c:	b510      	push	{r4, lr}
 8000d8e:	4b03      	ldr	r3, [pc, #12]	; (8000d9c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
 8000d90:	6003      	str	r3, [r0, #0]
 8000d92:	4604      	mov	r4, r0
 8000d94:	f009 fd9f 	bl	800a8d6 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000d98:	4620      	mov	r0, r4
 8000d9a:	bd10      	pop	{r4, pc}
 8000d9c:	08022120 	.word	0x08022120

08000da0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
 8000da0:	b510      	push	{r4, lr}
 8000da2:	4604      	mov	r4, r0
 8000da4:	f7ff fff2 	bl	8000d8c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8000da8:	4620      	mov	r0, r4
 8000daa:	2140      	movs	r1, #64	; 0x40
 8000dac:	f01f fcfc 	bl	80207a8 <_ZdlPvj>
 8000db0:	4620      	mov	r0, r4
 8000db2:	bd10      	pop	{r4, pc}

08000db4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8000db4:	b510      	push	{r4, lr}
 8000db6:	4b03      	ldr	r3, [pc, #12]	; (8000dc4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000db8:	6003      	str	r3, [r0, #0]
 8000dba:	4604      	mov	r4, r0
 8000dbc:	f009 fd8b 	bl	800a8d6 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000dc0:	4620      	mov	r0, r4
 8000dc2:	bd10      	pop	{r4, pc}
 8000dc4:	080220ec 	.word	0x080220ec

08000dc8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000dc8:	b510      	push	{r4, lr}
 8000dca:	4604      	mov	r4, r0
 8000dcc:	f7ff fff2 	bl	8000db4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000dd0:	4620      	mov	r0, r4
 8000dd2:	f242 7144 	movw	r1, #10052	; 0x2744
 8000dd6:	f01f fce7 	bl	80207a8 <_ZdlPvj>
 8000dda:	4620      	mov	r0, r4
 8000ddc:	bd10      	pop	{r4, pc}
	...

08000de0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8000de0:	b510      	push	{r4, lr}
 8000de2:	4b03      	ldr	r3, [pc, #12]	; (8000df0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000de4:	6003      	str	r3, [r0, #0]
 8000de6:	4604      	mov	r4, r0
 8000de8:	f009 fd75 	bl	800a8d6 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000dec:	4620      	mov	r0, r4
 8000dee:	bd10      	pop	{r4, pc}
 8000df0:	080220b8 	.word	0x080220b8

08000df4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000df4:	b510      	push	{r4, lr}
 8000df6:	4604      	mov	r4, r0
 8000df8:	f7ff fff2 	bl	8000de0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000dfc:	4620      	mov	r0, r4
 8000dfe:	2118      	movs	r1, #24
 8000e00:	f01f fcd2 	bl	80207a8 <_ZdlPvj>
 8000e04:	4620      	mov	r0, r4
 8000e06:	bd10      	pop	{r4, pc}

08000e08 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8000e08:	b510      	push	{r4, lr}
 8000e0a:	4b09      	ldr	r3, [pc, #36]	; (8000e30 <_ZN12FrontendHeapD1Ev+0x28>)
 8000e0c:	6003      	str	r3, [r0, #0]
 8000e0e:	4604      	mov	r4, r0
 8000e10:	f500 501d 	add.w	r0, r0, #10048	; 0x2740
 8000e14:	3030      	adds	r0, #48	; 0x30
 8000e16:	f7ff ffb9 	bl	8000d8c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8000e1a:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 8000e1e:	f7ff ffc9 	bl	8000db4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000e22:	f104 0014 	add.w	r0, r4, #20
 8000e26:	f7ff ffdb 	bl	8000de0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000e2a:	4620      	mov	r0, r4
 8000e2c:	bd10      	pop	{r4, pc}
 8000e2e:	bf00      	nop
 8000e30:	08022154 	.word	0x08022154

08000e34 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8000e34:	b508      	push	{r3, lr}
 8000e36:	4802      	ldr	r0, [pc, #8]	; (8000e40 <__tcf_0+0xc>)
 8000e38:	f7ff ffe6 	bl	8000e08 <_ZN12FrontendHeapD1Ev>
 8000e3c:	bd08      	pop	{r3, pc}
 8000e3e:	bf00      	nop
 8000e40:	200001a4 	.word	0x200001a4

08000e44 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 8000e44:	b510      	push	{r4, lr}
 8000e46:	4604      	mov	r4, r0
 8000e48:	f7ff ffde 	bl	8000e08 <_ZN12FrontendHeapD1Ev>
 8000e4c:	4620      	mov	r0, r4
 8000e4e:	f642 110c 	movw	r1, #10508	; 0x290c
 8000e52:	f01f fca9 	bl	80207a8 <_ZdlPvj>
 8000e56:	4620      	mov	r0, r4
 8000e58:	bd10      	pop	{r4, pc}
	...

08000e5c <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 8000e5c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8000e60:	f001 fa3e 	bl	80022e0 <_ZN14BitmapDatabase11getInstanceEv>
 8000e64:	4605      	mov	r5, r0
 8000e66:	f001 fa3f 	bl	80022e8 <_ZN14BitmapDatabase15getInstanceSizeEv>
 8000e6a:	2400      	movs	r4, #0
 8000e6c:	4601      	mov	r1, r0
 8000e6e:	4623      	mov	r3, r4
 8000e70:	4628      	mov	r0, r5
 8000e72:	4622      	mov	r2, r4
 8000e74:	9400      	str	r4, [sp, #0]
 8000e76:	f013 fb97 	bl	80145a8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 8000e7a:	4b26      	ldr	r3, [pc, #152]	; (8000f14 <touchgfx_init+0xb8>)
 8000e7c:	4a26      	ldr	r2, [pc, #152]	; (8000f18 <touchgfx_init+0xbc>)
        static FrontendHeap instance;
 8000e7e:	4d27      	ldr	r5, [pc, #156]	; (8000f1c <touchgfx_init+0xc0>)
 8000e80:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 8000e82:	4620      	mov	r0, r4
 8000e84:	f003 ffcc 	bl	8004e20 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 8000e88:	4825      	ldr	r0, [pc, #148]	; (8000f20 <touchgfx_init+0xc4>)
 8000e8a:	f013 faf5 	bl	8014478 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8000e8e:	782b      	ldrb	r3, [r5, #0]
 8000e90:	f3bf 8f5b 	dmb	ish
 8000e94:	07db      	lsls	r3, r3, #31
 8000e96:	d436      	bmi.n	8000f06 <touchgfx_init+0xaa>
 8000e98:	4628      	mov	r0, r5
 8000e9a:	f01f fc87 	bl	80207ac <__cxa_guard_acquire>
 8000e9e:	b390      	cbz	r0, 8000f06 <touchgfx_init+0xaa>
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 8000ea0:	4c20      	ldr	r4, [pc, #128]	; (8000f24 <touchgfx_init+0xc8>)
 8000ea2:	4f21      	ldr	r7, [pc, #132]	; (8000f28 <touchgfx_init+0xcc>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 8000ea4:	4b21      	ldr	r3, [pc, #132]	; (8000f2c <touchgfx_init+0xd0>)
 8000ea6:	6023      	str	r3, [r4, #0]
 8000ea8:	f107 0644 	add.w	r6, r7, #68	; 0x44
 8000eac:	f104 0014 	add.w	r0, r4, #20
 8000eb0:	f104 082c 	add.w	r8, r4, #44	; 0x2c
 8000eb4:	6060      	str	r0, [r4, #4]
 8000eb6:	f8c4 8008 	str.w	r8, [r4, #8]
 8000eba:	60e7      	str	r7, [r4, #12]
 8000ebc:	6126      	str	r6, [r4, #16]
 8000ebe:	f009 fd0b 	bl	800a8d8 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000ec2:	4b1b      	ldr	r3, [pc, #108]	; (8000f30 <touchgfx_init+0xd4>)
 8000ec4:	6163      	str	r3, [r4, #20]
 8000ec6:	4640      	mov	r0, r8
 8000ec8:	f009 fd06 	bl	800a8d8 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000ecc:	4b19      	ldr	r3, [pc, #100]	; (8000f34 <touchgfx_init+0xd8>)
 8000ece:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000ed0:	4638      	mov	r0, r7
 8000ed2:	f009 fd01 	bl	800a8d8 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000ed6:	f504 5300 	add.w	r3, r4, #8192	; 0x2000
 8000eda:	4a17      	ldr	r2, [pc, #92]	; (8000f38 <touchgfx_init+0xdc>)
 8000edc:	f8c3 2770 	str.w	r2, [r3, #1904]	; 0x770
 8000ee0:	f503 60f6 	add.w	r0, r3, #1968	; 0x7b0
 8000ee4:	f004 f818 	bl	8004f18 <_ZN5ModelC1Ev>
 8000ee8:	4622      	mov	r2, r4
 8000eea:	f107 0140 	add.w	r1, r7, #64	; 0x40
 8000eee:	4630      	mov	r0, r6
 8000ef0:	f004 f808 	bl	8004f04 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 8000ef4:	4630      	mov	r0, r6
 8000ef6:	f001 fd0b 	bl	8002910 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
        static FrontendHeap instance;
 8000efa:	4810      	ldr	r0, [pc, #64]	; (8000f3c <touchgfx_init+0xe0>)
 8000efc:	f01f fd26 	bl	802094c <atexit>
 8000f00:	4628      	mov	r0, r5
 8000f02:	f01f fc5f 	bl	80207c4 <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 8000f06:	480e      	ldr	r0, [pc, #56]	; (8000f40 <touchgfx_init+0xe4>)
}
 8000f08:	b002      	add	sp, #8
 8000f0a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8000f0e:	f7ff bc3e 	b.w	800078e <_ZN11TouchGFXHAL10initializeEv>
 8000f12:	bf00      	nop
 8000f14:	20015668 	.word	0x20015668
 8000f18:	200038d0 	.word	0x200038d0
 8000f1c:	200001a0 	.word	0x200001a0
 8000f20:	20000008 	.word	0x20000008
 8000f24:	200001a4 	.word	0x200001a4
 8000f28:	20002914 	.word	0x20002914
 8000f2c:	08022154 	.word	0x08022154
 8000f30:	080220b8 	.word	0x080220b8
 8000f34:	080220ec 	.word	0x080220ec
 8000f38:	08022120 	.word	0x08022120
 8000f3c:	08000e35 	.word	0x08000e35
 8000f40:	20003854 	.word	0x20003854

08000f44 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 8000f44:	4801      	ldr	r0, [pc, #4]	; (8000f4c <touchgfx_taskEntry+0x8>)
 8000f46:	f7ff bc24 	b.w	8000792 <_ZN11TouchGFXHAL9taskEntryEv>
 8000f4a:	bf00      	nop
 8000f4c:	20003854 	.word	0x20003854

08000f50 <_GLOBAL__sub_I_touchgfx_init>:
}
 8000f50:	b570      	push	{r4, r5, r6, lr}
{
public:

    STM32TouchController() {}
 8000f52:	4c23      	ldr	r4, [pc, #140]	; (8000fe0 <_GLOBAL__sub_I_touchgfx_init+0x90>)
static STM32DMA dma;
 8000f54:	4e23      	ldr	r6, [pc, #140]	; (8000fe4 <_GLOBAL__sub_I_touchgfx_init+0x94>)
 8000f56:	4b24      	ldr	r3, [pc, #144]	; (8000fe8 <_GLOBAL__sub_I_touchgfx_init+0x98>)
static LCD16bpp display;
 8000f58:	4d24      	ldr	r5, [pc, #144]	; (8000fec <_GLOBAL__sub_I_touchgfx_init+0x9c>)
 8000f5a:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 8000f5c:	4630      	mov	r0, r6
 8000f5e:	f7ff fd79 	bl	8000a54 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 8000f62:	4628      	mov	r0, r5
 8000f64:	f016 fc2a 	bl	80177bc <_ZN8touchgfx8LCD16bppC1Ev>
          lastRenderMethod(HARDWARE)
 8000f68:	4b21      	ldr	r3, [pc, #132]	; (8000ff0 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
        instance = this;
 8000f6a:	4822      	ldr	r0, [pc, #136]	; (8000ff4 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
          lastRenderMethod(HARDWARE)
 8000f6c:	60dc      	str	r4, [r3, #12]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000f6e:	4c22      	ldr	r4, [pc, #136]	; (8000ff8 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
        instance = this;
 8000f70:	6003      	str	r3, [r0, #0]
          lastRenderMethod(HARDWARE)
 8000f72:	2200      	movs	r2, #0
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000f74:	20f0      	movs	r0, #240	; 0xf0
          lastRenderMethod(HARDWARE)
 8000f76:	f44f 7180 	mov.w	r1, #256	; 0x100
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000f7a:	8020      	strh	r0, [r4, #0]
          lastRenderMethod(HARDWARE)
 8000f7c:	e9c3 1212 	strd	r1, r2, [r3, #72]	; 0x48
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000f80:	4c1e      	ldr	r4, [pc, #120]	; (8000ffc <_GLOBAL__sub_I_touchgfx_init+0xac>)
          lastRenderMethod(HARDWARE)
 8000f82:	491f      	ldr	r1, [pc, #124]	; (8001000 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000f84:	8020      	strh	r0, [r4, #0]
          lastRenderMethod(HARDWARE)
 8000f86:	e9c3 1219 	strd	r1, r2, [r3, #100]	; 0x64
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000f8a:	4c1e      	ldr	r4, [pc, #120]	; (8001004 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 8000f8c:	861a      	strh	r2, [r3, #48]	; 0x30
          lastRenderMethod(HARDWARE)
 8000f8e:	f04f 7180 	mov.w	r1, #16777216	; 0x1000000
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000f92:	f44f 70a0 	mov.w	r0, #320	; 0x140
          lastRenderMethod(HARDWARE)
 8000f96:	6759      	str	r1, [r3, #116]	; 0x74
 8000f98:	2101      	movs	r1, #1
 8000f9a:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8000f9e:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8000fa2:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8000fa6:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
 8000faa:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
 8000fae:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 8000fb2:	e9c3 2214 	strd	r2, r2, [r3, #80]	; 0x50
 8000fb6:	e9c3 2216 	strd	r2, r2, [r3, #88]	; 0x58
 8000fba:	661a      	str	r2, [r3, #96]	; 0x60
 8000fbc:	f883 206c 	strb.w	r2, [r3, #108]	; 0x6c
 8000fc0:	671a      	str	r2, [r3, #112]	; 0x70
 8000fc2:	e9c3 6501 	strd	r6, r5, [r3, #4]
 8000fc6:	f883 1078 	strb.w	r1, [r3, #120]	; 0x78
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000fca:	8020      	strh	r0, [r4, #0]
 8000fcc:	4c0e      	ldr	r4, [pc, #56]	; (8001008 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8000fce:	f883 1034 	strb.w	r1, [r3, #52]	; 0x34
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000fd2:	8020      	strh	r0, [r4, #0]
        DISPLAY_ROTATION = rotate0;
 8000fd4:	480d      	ldr	r0, [pc, #52]	; (800100c <_GLOBAL__sub_I_touchgfx_init+0xbc>)
 8000fd6:	7002      	strb	r2, [r0, #0]
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 8000fd8:	4a0d      	ldr	r2, [pc, #52]	; (8001010 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 8000fda:	601a      	str	r2, [r3, #0]
}
 8000fdc:	bd70      	pop	{r4, r5, r6, pc}
 8000fde:	bf00      	nop
 8000fe0:	20002ab0 	.word	0x20002ab0
 8000fe4:	20002ab4 	.word	0x20002ab4
 8000fe8:	08021ba8 	.word	0x08021ba8
 8000fec:	200038d4 	.word	0x200038d4
 8000ff0:	20003854 	.word	0x20003854
 8000ff4:	20015604 	.word	0x20015604
 8000ff8:	200155f8 	.word	0x200155f8
 8000ffc:	200155fe 	.word	0x200155fe
 8001000:	01000001 	.word	0x01000001
 8001004:	200155fa 	.word	0x200155fa
 8001008:	20015600 	.word	0x20015600
 800100c:	200155fc 	.word	0x200155fc
 8001010:	08021d34 	.word	0x08021d34

08001014 <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
 8001014:	4801      	ldr	r0, [pc, #4]	; (800101c <_GLOBAL__sub_D_touchgfx_init+0x8>)
 8001016:	f7ff bcf9 	b.w	8000a0c <_ZN8STM32DMAD1Ev>
 800101a:	bf00      	nop
 800101c:	20002ab4 	.word	0x20002ab4

08001020 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001020:	4b03      	ldr	r3, [pc, #12]	; (8001030 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
 8001022:	2290      	movs	r2, #144	; 0x90
 8001024:	f883 235a 	strb.w	r2, [r3, #858]	; 0x35a
 8001028:	f883 2358 	strb.w	r2, [r3, #856]	; 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 800102c:	4770      	bx	lr
 800102e:	bf00      	nop
 8001030:	e000e100 	.word	0xe000e100

08001034 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8001034:	4a09      	ldr	r2, [pc, #36]	; (800105c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 8001036:	490a      	ldr	r1, [pc, #40]	; (8001060 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 8001038:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 800103a:	480a      	ldr	r0, [pc, #40]	; (8001064 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 800103c:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8001040:	3b01      	subs	r3, #1
 8001042:	b29b      	uxth	r3, r3
 8001044:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 8001046:	6911      	ldr	r1, [r2, #16]
 8001048:	f3c1 010a 	ubfx	r1, r1, #0, #11
 800104c:	3901      	subs	r1, #1
 800104e:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 8001050:	6413      	str	r3, [r2, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 8001052:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8001054:	f043 0301 	orr.w	r3, r3, #1
 8001058:	6353      	str	r3, [r2, #52]	; 0x34
}
 800105a:	4770      	bx	lr
 800105c:	40016800 	.word	0x40016800
 8001060:	20003950 	.word	0x20003950
 8001064:	2000394e 	.word	0x2000394e

08001068 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 8001068:	4b01      	ldr	r3, [pc, #4]	; (8001070 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 800106a:	f8d3 00ac 	ldr.w	r0, [r3, #172]	; 0xac
}
 800106e:	4770      	bx	lr
 8001070:	40016800 	.word	0x40016800

08001074 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001074:	4b02      	ldr	r3, [pc, #8]	; (8001080 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8001076:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001078:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 800107c:	625a      	str	r2, [r3, #36]	; 0x24
}
 800107e:	4770      	bx	lr
 8001080:	40016800 	.word	0x40016800

08001084 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 8001084:	b570      	push	{r4, r5, r6, lr}
 8001086:	4604      	mov	r4, r0
    HAL::initialize();
 8001088:	f00a f845 	bl	800b116 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 800108c:	6823      	ldr	r3, [r4, #0]
 800108e:	6e5d      	ldr	r5, [r3, #100]	; 0x64
 8001090:	f010 f86e 	bl	8011170 <_ZN8touchgfx11Application11getInstanceEv>
 8001094:	4601      	mov	r1, r0
 8001096:	4620      	mov	r0, r4
 8001098:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 800109a:	6823      	ldr	r3, [r4, #0]
 800109c:	4a05      	ldr	r2, [pc, #20]	; (80010b4 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 800109e:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 80010a2:	4620      	mov	r0, r4
 80010a4:	46ac      	mov	ip, r5
 80010a6:	2300      	movs	r3, #0
}
 80010a8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 80010ac:	f5a2 3116 	sub.w	r1, r2, #153600	; 0x25800
 80010b0:	4760      	bx	ip
 80010b2:	bf00      	nop
 80010b4:	d0025800 	.word	0xd0025800

080010b8 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 80010b8:	f00a b814 	b.w	800b0e4 <_ZN8touchgfx3HAL10beginFrameEv>

080010bc <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    if (frameBufferUpdatedThisFrame)
 80010bc:	f890 304b 	ldrb.w	r3, [r0, #75]	; 0x4b
 80010c0:	b113      	cbz	r3, 80010c8 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0xc>
        refreshRequested = true;
 80010c2:	4b02      	ldr	r3, [pc, #8]	; (80010cc <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x10>)
 80010c4:	2201      	movs	r2, #1
 80010c6:	701a      	strb	r2, [r3, #0]
    HAL::endFrame();
 80010c8:	f00a b818 	b.w	800b0fc <_ZN8touchgfx3HAL8endFrameEv>
 80010cc:	2000394c 	.word	0x2000394c

080010d0 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 80010d0:	f009 bfd2 	b.w	800b078 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

080010d4 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 80010d4:	f00a b92b 	b.w	800b32e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

080010d8 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80010d8:	4b03      	ldr	r3, [pc, #12]	; (80010e8 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
 80010da:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80010de:	609a      	str	r2, [r3, #8]
 80010e0:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 80010e4:	609a      	str	r2, [r3, #8]
}
 80010e6:	4770      	bx	lr
 80010e8:	e000e100 	.word	0xe000e100

080010ec <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80010ec:	4b08      	ldr	r3, [pc, #32]	; (8001110 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
 80010ee:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80010f2:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 80010f6:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80010fa:	f3bf 8f6f 	isb	sy
 80010fe:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8001102:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 8001106:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800110a:	f3bf 8f6f 	isb	sy
}
 800110e:	4770      	bx	lr
 8001110:	e000e100 	.word	0xe000e100

08001114 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 8001114:	b510      	push	{r4, lr}
        return instance;
 8001116:	4c14      	ldr	r4, [pc, #80]	; (8001168 <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
 8001118:	6823      	ldr	r3, [r4, #0]
 800111a:	b323      	cbz	r3, 8001166 <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 800111c:	4b13      	ldr	r3, [pc, #76]	; (800116c <HAL_LTDC_LineEventCallback+0x58>)
 800111e:	4a14      	ldr	r2, [pc, #80]	; (8001170 <HAL_LTDC_LineEventCallback+0x5c>)
 8001120:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001122:	8811      	ldrh	r1, [r2, #0]
 8001124:	428b      	cmp	r3, r1
 8001126:	d113      	bne.n	8001150 <HAL_LTDC_LineEventCallback+0x3c>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 8001128:	4b12      	ldr	r3, [pc, #72]	; (8001174 <HAL_LTDC_LineEventCallback+0x60>)
 800112a:	8819      	ldrh	r1, [r3, #0]
 800112c:	f006 f8c6 	bl	80072bc <HAL_LTDC_ProgramLineEvent>
 8001130:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 8001132:	f892 3066 	ldrb.w	r3, [r2, #102]	; 0x66
 8001136:	3301      	adds	r3, #1
 8001138:	f882 3066 	strb.w	r3, [r2, #102]	; 0x66
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 800113c:	f7ff fc14 	bl	8000968 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 8001140:	6820      	ldr	r0, [r4, #0]
 8001142:	f00a fd1f 	bl	800bb84 <_ZN8touchgfx3HAL16swapFrameBuffersEv>

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 8001146:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 800114a:	2000      	movs	r0, #0
 800114c:	f7ff baf8 	b.w	8000740 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 8001150:	f006 f8b4 	bl	80072bc <HAL_LTDC_ProgramLineEvent>
        return instance;
 8001154:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
 8001156:	6803      	ldr	r3, [r0, #0]
 8001158:	6a1b      	ldr	r3, [r3, #32]
 800115a:	4798      	blx	r3
    }
 800115c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 8001160:	2000      	movs	r0, #0
 8001162:	f7ff baee 	b.w	8000742 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 8001166:	bd10      	pop	{r4, pc}
 8001168:	20015604 	.word	0x20015604
 800116c:	40016800 	.word	0x40016800
 8001170:	20003950 	.word	0x20003950
 8001174:	2000394e 	.word	0x2000394e

08001178 <SPI5_Write>:
/**
  * @brief  Writes a byte to device.
  * @param  Value: value to be written
  */
static void SPI5_Write(uint16_t Value)
{
 8001178:	b507      	push	{r0, r1, r2, lr}
  HAL_StatusTypeDef status = HAL_OK;
  
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 800117a:	4b06      	ldr	r3, [pc, #24]	; (8001194 <SPI5_Write+0x1c>)
{
 800117c:	f8ad 0006 	strh.w	r0, [sp, #6]
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001180:	681b      	ldr	r3, [r3, #0]
 8001182:	4805      	ldr	r0, [pc, #20]	; (8001198 <SPI5_Write+0x20>)
 8001184:	2201      	movs	r2, #1
 8001186:	f10d 0106 	add.w	r1, sp, #6
 800118a:	f006 fda8 	bl	8007cde <HAL_SPI_Transmit>
  if(status != HAL_OK)
  {
    /* Re-Initialize the BUS */
    SPI5_Error();
  }
}
 800118e:	b003      	add	sp, #12
 8001190:	f85d fb04 	ldr.w	pc, [sp], #4
 8001194:	20000010 	.word	0x20000010
 8001198:	20003bc4 	.word	0x20003bc4

0800119c <CountAvgFrom60sec>:
			result+=ladowarka.PomiaryCoSec[i];
 800119c:	4910      	ldr	r1, [pc, #64]	; (80011e0 <CountAvgFrom60sec+0x44>)
float CountAvgFrom60sec(){
 800119e:	b082      	sub	sp, #8
 80011a0:	2300      	movs	r3, #0
			result+=ladowarka.PomiaryCoSec[i];
 80011a2:	f203 225e 	addw	r2, r3, #606	; 0x25e
 80011a6:	eb01 0282 	add.w	r2, r1, r2, lsl #2
 80011aa:	ed92 7a00 	vldr	s14, [r2]
 80011ae:	eddd 7a01 	vldr	s15, [sp, #4]
		for (uint8_t i=0;i<60;i++)
 80011b2:	3301      	adds	r3, #1
			result+=ladowarka.PomiaryCoSec[i];
 80011b4:	ee77 7a87 	vadd.f32	s15, s15, s14
		for (uint8_t i=0;i<60;i++)
 80011b8:	2b3c      	cmp	r3, #60	; 0x3c
			result+=ladowarka.PomiaryCoSec[i];
 80011ba:	edcd 7a01 	vstr	s15, [sp, #4]
		for (uint8_t i=0;i<60;i++)
 80011be:	d1f0      	bne.n	80011a2 <CountAvgFrom60sec+0x6>
		ladowarka.SredniaZOstatniejMin=result/60;
 80011c0:	eddd 6a01 	vldr	s13, [sp, #4]
 80011c4:	eddf 7a07 	vldr	s15, [pc, #28]	; 80011e4 <CountAvgFrom60sec+0x48>
 80011c8:	4b07      	ldr	r3, [pc, #28]	; (80011e8 <CountAvgFrom60sec+0x4c>)
 80011ca:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 80011ce:	ed83 7a00 	vstr	s14, [r3]
	return result/60;
 80011d2:	ed9d 0a01 	vldr	s0, [sp, #4]
}
 80011d6:	ee80 0a27 	vdiv.f32	s0, s0, s15
 80011da:	b002      	add	sp, #8
 80011dc:	4770      	bx	lr
 80011de:	bf00      	nop
 80011e0:	20003c5c 	.word	0x20003c5c
 80011e4:	42700000 	.word	0x42700000
 80011e8:	200046e0 	.word	0x200046e0

080011ec <ZadanieDwa>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_ZadanieDwa */
__weak void ZadanieDwa(void *argument)
{
 80011ec:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	  static volatile uint32_t value2=0; //actual value of adc measurement on battery  + resistor.
	  static volatile uint32_t value3=0; //actual value of adc vrefint

	  static int sec0to59=0;

		if(ladowarka.Minelo100ms){ //jesli zostalo wykryte przerwanie z liniczka7
 80011f0:	4c80      	ldr	r4, [pc, #512]	; (80013f4 <ZadanieDwa+0x208>)
			ladowarka.Minelo100ms=0; //kasuj flage

					//pomiar napiecia baterii
					HAL_ADC_Start(&hadc3);
 80011f2:	4d81      	ldr	r5, [pc, #516]	; (80013f8 <ZadanieDwa+0x20c>)
		if(ladowarka.Minelo100ms){ //jesli zostalo wykryte przerwanie z liniczka7
 80011f4:	f8d4 3a6c 	ldr.w	r3, [r4, #2668]	; 0xa6c
 80011f8:	2b00      	cmp	r3, #0
 80011fa:	f000 80c7 	beq.w	800138c <ZadanieDwa+0x1a0>
			ladowarka.Minelo100ms=0; //kasuj flage
 80011fe:	2300      	movs	r3, #0
					HAL_ADC_Start(&hadc3);
 8001200:	4628      	mov	r0, r5
			ladowarka.Minelo100ms=0; //kasuj flage
 8001202:	f8c4 3a6c 	str.w	r3, [r4, #2668]	; 0xa6c
					value += HAL_ADC_GetValue(&hadc3);
 8001206:	f8df 8220 	ldr.w	r8, [pc, #544]	; 8001428 <ZadanieDwa+0x23c>

					//pomiar napiecia na baterii i rezystorze
					HAL_ADC_Start(&hadc2);
					value2 += HAL_ADC_GetValue(&hadc2);
 800120a:	4f7c      	ldr	r7, [pc, #496]	; (80013fc <ZadanieDwa+0x210>)

					//pomiar napiecia na Vref
					HAL_ADC_Start(&hadc1);
					value3 += HAL_ADC_GetValue(&hadc1);
 800120c:	4e7c      	ldr	r6, [pc, #496]	; (8001400 <ZadanieDwa+0x214>)
					HAL_ADC_Start(&hadc3);
 800120e:	f004 fea9 	bl	8005f64 <HAL_ADC_Start>
					value += HAL_ADC_GetValue(&hadc3);
 8001212:	4628      	mov	r0, r5
 8001214:	f004 ff1a 	bl	800604c <HAL_ADC_GetValue>
 8001218:	f8d8 3000 	ldr.w	r3, [r8]
 800121c:	4418      	add	r0, r3
 800121e:	f8c8 0000 	str.w	r0, [r8]
					HAL_ADC_Start(&hadc2);
 8001222:	4878      	ldr	r0, [pc, #480]	; (8001404 <ZadanieDwa+0x218>)
 8001224:	f004 fe9e 	bl	8005f64 <HAL_ADC_Start>
					value2 += HAL_ADC_GetValue(&hadc2);
 8001228:	4876      	ldr	r0, [pc, #472]	; (8001404 <ZadanieDwa+0x218>)
 800122a:	f004 ff0f 	bl	800604c <HAL_ADC_GetValue>
 800122e:	683b      	ldr	r3, [r7, #0]
 8001230:	4418      	add	r0, r3
 8001232:	6038      	str	r0, [r7, #0]
					HAL_ADC_Start(&hadc1);
 8001234:	4874      	ldr	r0, [pc, #464]	; (8001408 <ZadanieDwa+0x21c>)
 8001236:	f004 fe95 	bl	8005f64 <HAL_ADC_Start>
					value3 += HAL_ADC_GetValue(&hadc1);
 800123a:	4873      	ldr	r0, [pc, #460]	; (8001408 <ZadanieDwa+0x21c>)
 800123c:	f004 ff06 	bl	800604c <HAL_ADC_GetValue>
 8001240:	6833      	ldr	r3, [r6, #0]
 8001242:	4418      	add	r0, r3
 8001244:	6030      	str	r0, [r6, #0]
					liczbaPomiarow++;
 8001246:	4871      	ldr	r0, [pc, #452]	; (800140c <ZadanieDwa+0x220>)
 8001248:	6803      	ldr	r3, [r0, #0]
 800124a:	f04f 0c0a 	mov.w	ip, #10
 800124e:	3301      	adds	r3, #1
 8001250:	6003      	str	r3, [r0, #0]
 8001252:	fb93 f2fc 	sdiv	r2, r3, ip
 8001256:	fb0c 3312 	mls	r3, ip, r2, r3

					/****** jesli minela sekunda ->10tickow co 100ms********/

					if(liczbaPomiarow%10==0){ //jesli minela sekunda
 800125a:	2b00      	cmp	r3, #0
 800125c:	f040 8096 	bne.w	800138c <ZadanieDwa+0x1a0>
						ladowarka.VccVoltage=(value3/10);  //vrefint voltage
 8001260:	6833      	ldr	r3, [r6, #0]
 8001262:	fbb3 f3fc 	udiv	r3, r3, ip
 8001266:	ee07 3a90 	vmov	s15, r3
 800126a:	4b69      	ldr	r3, [pc, #420]	; (8001410 <ZadanieDwa+0x224>)
						ladowarka.VccVoltage=(Vref*4096.0f)/ladowarka.VccVoltage;
 800126c:	eddf 6a69 	vldr	s13, [pc, #420]	; 8001414 <ZadanieDwa+0x228>
						ladowarka.VccVoltage=(value3/10);  //vrefint voltage
 8001270:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001274:	edc3 7a00 	vstr	s15, [r3]
						ladowarka.VccVoltage=(Vref*4096.0f)/ladowarka.VccVoltage;
 8001278:	ed93 7a00 	vldr	s14, [r3]
 800127c:	eec6 7a87 	vdiv.f32	s15, s13, s14

						ladowarka.BatteryVoltage=(value/10) * ladowarka.VccVoltage / 4096.0f; // napiecie na baterii
 8001280:	eddf 6a65 	vldr	s13, [pc, #404]	; 8001418 <ZadanieDwa+0x22c>
						ladowarka.VccVoltage=(Vref*4096.0f)/ladowarka.VccVoltage;
 8001284:	edc3 7a00 	vstr	s15, [r3]
						ladowarka.BatteryVoltage=(value/10) * ladowarka.VccVoltage / 4096.0f; // napiecie na baterii
 8001288:	f8d8 1000 	ldr.w	r1, [r8]
 800128c:	fbb1 f2fc 	udiv	r2, r1, ip
 8001290:	ee07 2a10 	vmov	s14, r2
 8001294:	edd3 7a00 	vldr	s15, [r3]
 8001298:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800129c:	ee27 7a27 	vmul.f32	s14, s14, s15
 80012a0:	ee27 7a26 	vmul.f32	s14, s14, s13
 80012a4:	ed84 7a00 	vstr	s14, [r4]
						ladowarka.ChargingCurrent=(value2/10) * ladowarka.VccVoltage / 4096.0f; // napiecie na baterii i rezystorze,
 80012a8:	683a      	ldr	r2, [r7, #0]
 80012aa:	fbb2 f2fc 	udiv	r2, r2, ip
 80012ae:	ee07 2a90 	vmov	s15, r2
 80012b2:	ed93 7a00 	vldr	s14, [r3]
 80012b6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80012ba:	ee67 7a87 	vmul.f32	s15, s15, s14
 80012be:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80012c2:	ed43 7a03 	vstr	s15, [r3, #-12]


						ladowarka.ChargingCurrent=(ladowarka.ChargingCurrent-ladowarka.BatteryVoltage)*1000; //	Jako ze rezystor jest 1Ohm, to prad jest rowny napiecu. wynik w [mA]
 80012c6:	ed53 7a03 	vldr	s15, [r3, #-12]
 80012ca:	ed94 7a00 	vldr	s14, [r4]
 80012ce:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80012d2:	ed9f 7a52 	vldr	s14, [pc, #328]	; 800141c <ZadanieDwa+0x230>
 80012d6:	ee67 7a87 	vmul.f32	s15, s15, s14
 80012da:	ed43 7a03 	vstr	s15, [r3, #-12]
						if (ladowarka.ChargingCurrent <=0 ) ladowarka.ChargingCurrent=0;
 80012de:	ed53 7a03 	vldr	s15, [r3, #-12]
 80012e2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80012e6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80012ea:	bf9c      	itt	ls
 80012ec:	2200      	movls	r2, #0
 80012ee:	f843 2c0c 	strls.w	r2, [r3, #-12]

						// jesli zaczeto ladwoac
						if (ladowarka.ChargeStarted ){ //jesli zaczeto ladwowac
 80012f2:	6923      	ldr	r3, [r4, #16]
 80012f4:	2b00      	cmp	r3, #0
 80012f6:	d043      	beq.n	8001380 <ZadanieDwa+0x194>
							if (ladowarka.CzsasLadowaniaWSec<1) {ladowarka.NapiecieBaterii[0]=ladowarka.BatteryVoltage; ladowarka.SredniaZOstatniejMin = ladowarka.BatteryVoltage; ladowarka.narysujPunktNaWykresieMin=1; }//dla 0 pomiaru dodaj od razy do tablicy oraz wyplotuj na obu wykreasch.
 80012f8:	f8d4 3a78 	ldr.w	r3, [r4, #2680]	; 0xa78
 80012fc:	2b00      	cmp	r3, #0
 80012fe:	dc07      	bgt.n	8001310 <ZadanieDwa+0x124>
 8001300:	6823      	ldr	r3, [r4, #0]
 8001302:	61a3      	str	r3, [r4, #24]
 8001304:	4b46      	ldr	r3, [pc, #280]	; (8001420 <ZadanieDwa+0x234>)
 8001306:	6822      	ldr	r2, [r4, #0]
 8001308:	601a      	str	r2, [r3, #0]
 800130a:	2301      	movs	r3, #1
 800130c:	f8c4 3a74 	str.w	r3, [r4, #2676]	; 0xa74


							if (ladowarka.BatteryVoltage>ladowarka.MaxBatteryVoltage) ladowarka.MaxBatteryVoltage=ladowarka.BatteryVoltage; //uaktualnij max wartosc.
 8001310:	ed94 7a00 	vldr	s14, [r4]
 8001314:	edd4 7a01 	vldr	s15, [r4, #4]
							ladowarka.CzsasLadowaniaWSec++; //jesli zaczal sie proces ladowana ziwekszja wartosc czas ladowania w sec
							ladowarka.narysujPunktNaWykresie=1; //zezwol na narysowanie danej na wykresie


							/********* dodawanie co 1 sek wartosc pomiaru do tabeli********/
							ladowarka.PomiaryCoSec[sec0to59++]=ladowarka.BatteryVoltage;
 8001318:	f8df 9110 	ldr.w	r9, [pc, #272]	; 800142c <ZadanieDwa+0x240>
							if (ladowarka.BatteryVoltage>ladowarka.MaxBatteryVoltage) ladowarka.MaxBatteryVoltage=ladowarka.BatteryVoltage; //uaktualnij max wartosc.
 800131c:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8001320:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001324:	bfc4      	itt	gt
 8001326:	6823      	ldrgt	r3, [r4, #0]
 8001328:	6063      	strgt	r3, [r4, #4]
							ladowarka.CzsasLadowaniaWSec++; //jesli zaczal sie proces ladowana ziwekszja wartosc czas ladowania w sec
 800132a:	f8d4 3a78 	ldr.w	r3, [r4, #2680]	; 0xa78
 800132e:	3301      	adds	r3, #1
 8001330:	f8c4 3a78 	str.w	r3, [r4, #2680]	; 0xa78
							ladowarka.narysujPunktNaWykresie=1; //zezwol na narysowanie danej na wykresie
 8001334:	2301      	movs	r3, #1
 8001336:	f8c4 3a70 	str.w	r3, [r4, #2672]	; 0xa70
							ladowarka.PomiaryCoSec[sec0to59++]=ladowarka.BatteryVoltage;
 800133a:	f8d9 3000 	ldr.w	r3, [r9]
 800133e:	6821      	ldr	r1, [r4, #0]
 8001340:	1c5a      	adds	r2, r3, #1
 8001342:	f203 235e 	addw	r3, r3, #606	; 0x25e
 8001346:	eb04 0383 	add.w	r3, r4, r3, lsl #2
							if (sec0to59>59) {	//jesli mamy 10 elementow w tabeli (minelo 10sec) usrednij i dodaj wartosc do NapiecieBaterii
 800134a:	2a3b      	cmp	r2, #59	; 0x3b
							ladowarka.PomiaryCoSec[sec0to59++]=ladowarka.BatteryVoltage;
 800134c:	f8c9 2000 	str.w	r2, [r9]
 8001350:	6019      	str	r1, [r3, #0]
							if (sec0to59>59) {	//jesli mamy 10 elementow w tabeli (minelo 10sec) usrednij i dodaj wartosc do NapiecieBaterii
 8001352:	dd15      	ble.n	8001380 <ZadanieDwa+0x194>
								//jesli ladujemy to dodaj wartosc do tablicy
								CountAvgFrom60sec();
 8001354:	f7ff ff22 	bl	800119c <CountAvgFrom60sec>
								if (ladowarka.ChargingCompleted==0){
 8001358:	f8d4 3a80 	ldr.w	r3, [r4, #2688]	; 0xa80
 800135c:	b953      	cbnz	r3, 8001374 <ZadanieDwa+0x188>
									ladowarka.NapiecieBaterii[ladowarka.CzsasLadowaniaWSec/60]=ladowarka.SredniaZOstatniejMin; // TO DO srednia z 10 pomiarow
 800135e:	f8d4 3a78 	ldr.w	r3, [r4, #2680]	; 0xa78
 8001362:	223c      	movs	r2, #60	; 0x3c
 8001364:	fb93 f3f2 	sdiv	r3, r3, r2
 8001368:	4a2d      	ldr	r2, [pc, #180]	; (8001420 <ZadanieDwa+0x234>)
 800136a:	3306      	adds	r3, #6
 800136c:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8001370:	6812      	ldr	r2, [r2, #0]
 8001372:	601a      	str	r2, [r3, #0]
								}

								sec0to59=0;
 8001374:	2300      	movs	r3, #0
 8001376:	f8c9 3000 	str.w	r3, [r9]

								ladowarka.narysujPunktNaWykresieMin=1;//zezwol na narysowanie na wykresie minut.
 800137a:	2301      	movs	r3, #1
 800137c:	f8c4 3a74 	str.w	r3, [r4, #2676]	; 0xa74
							}

						}


						liczbaPomiarow=0; //po 1 sek ustaw to na 0
 8001380:	2300      	movs	r3, #0
						value=0; //resetuj pomiar napiecia na baterii
 8001382:	f8c8 3000 	str.w	r3, [r8]
						liczbaPomiarow=0; //po 1 sek ustaw to na 0
 8001386:	6003      	str	r3, [r0, #0]
						value2=0; //resetuj  napiecie na baterii i rezystorze,
 8001388:	603b      	str	r3, [r7, #0]
						value3=0; //resetuj  napiecie na internal ref voltage.
 800138a:	6033      	str	r3, [r6, #0]


					}

					/*************** generowanie napiecia ***************************/
					if(ladowarka.ChargeStarted==1 && ladowarka.UstawioneNapiecieNaopAmpie==0 ) { //jesli kliknieto przycik na GUI START   i nie ustawiono jeszce napiecia na op ampie
 800138c:	6923      	ldr	r3, [r4, #16]
 800138e:	2b01      	cmp	r3, #1
 8001390:	d119      	bne.n	80013c6 <ZadanieDwa+0x1da>
 8001392:	6963      	ldr	r3, [r4, #20]
 8001394:	b9bb      	cbnz	r3, 80013c6 <ZadanieDwa+0x1da>
						/********* ustawienie poprawnego napiecia************/
						int napiecie=4095;//domyslnie 0
						if (ladowarka.LoadingCurrent==400) napiecie=3100;
 8001396:	68a3      	ldr	r3, [r4, #8]
 8001398:	f5b3 7fc8 	cmp.w	r3, #400	; 0x190
 800139c:	d021      	beq.n	80013e2 <ZadanieDwa+0x1f6>
						else if (ladowarka.LoadingCurrent==300) napiecie=3250;
 800139e:	68a3      	ldr	r3, [r4, #8]
 80013a0:	f5b3 7f96 	cmp.w	r3, #300	; 0x12c
 80013a4:	d020      	beq.n	80013e8 <ZadanieDwa+0x1fc>
						else if (ladowarka.LoadingCurrent==200) napiecie=3530;
 80013a6:	68a3      	ldr	r3, [r4, #8]
 80013a8:	2bc8      	cmp	r3, #200	; 0xc8
 80013aa:	d020      	beq.n	80013ee <ZadanieDwa+0x202>
						else if (ladowarka.LoadingCurrent==100) napiecie=3700;
 80013ac:	68a1      	ldr	r1, [r4, #8]
 80013ae:	f640 73ff 	movw	r3, #4095	; 0xfff
 80013b2:	f640 6274 	movw	r2, #3700	; 0xe74
 80013b6:	2964      	cmp	r1, #100	; 0x64
 80013b8:	bf08      	it	eq
 80013ba:	4613      	moveq	r3, r2
							HAL_DAC_SetValue(&hdac, DAC_CHANNEL_2, DAC_ALIGN_12B_R, napiecie);  //ustaw poprawne napiece tutaj (3V)
 80013bc:	4819      	ldr	r0, [pc, #100]	; (8001424 <ZadanieDwa+0x238>)
 80013be:	2200      	movs	r2, #0
 80013c0:	2110      	movs	r1, #16
 80013c2:	f004 ffa6 	bl	8006312 <HAL_DAC_SetValue>
							//ladowarka.UstawioneNapiecieNaopAmpie=1;
					}

					/************** sprawdzenie czy pomiar nie ma sie juz zakonczyc*****************/
					if (ladowarka.ChargingCompleted){
 80013c6:	f8d4 3a80 	ldr.w	r3, [r4, #2688]	; 0xa80
 80013ca:	b133      	cbz	r3, 80013da <ZadanieDwa+0x1ee>
						HAL_DAC_SetValue(&hdac, DAC_CHANNEL_2, DAC_ALIGN_12B_R, CurrentAfterCharging);  //ustaw max napiecie zeby nie ladowac.
 80013cc:	4815      	ldr	r0, [pc, #84]	; (8001424 <ZadanieDwa+0x238>)
 80013ce:	f640 733c 	movw	r3, #3900	; 0xf3c
 80013d2:	2200      	movs	r2, #0
 80013d4:	2110      	movs	r1, #16
 80013d6:	f004 ff9c 	bl	8006312 <HAL_DAC_SetValue>
					}



    osDelay(1); //to chyba ma zostac?
 80013da:	2001      	movs	r0, #1
 80013dc:	f007 f966 	bl	80086ac <osDelay>
  {
 80013e0:	e708      	b.n	80011f4 <ZadanieDwa+0x8>
						if (ladowarka.LoadingCurrent==400) napiecie=3100;
 80013e2:	f640 431c 	movw	r3, #3100	; 0xc1c
 80013e6:	e7e9      	b.n	80013bc <ZadanieDwa+0x1d0>
						else if (ladowarka.LoadingCurrent==300) napiecie=3250;
 80013e8:	f640 43b2 	movw	r3, #3250	; 0xcb2
 80013ec:	e7e6      	b.n	80013bc <ZadanieDwa+0x1d0>
						else if (ladowarka.LoadingCurrent==200) napiecie=3530;
 80013ee:	f640 53ca 	movw	r3, #3530	; 0xdca
 80013f2:	e7e3      	b.n	80013bc <ZadanieDwa+0x1d0>
 80013f4:	20003c5c 	.word	0x20003c5c
 80013f8:	200039f0 	.word	0x200039f0
 80013fc:	200046f4 	.word	0x200046f4
 8001400:	200046f8 	.word	0x200046f8
 8001404:	200039a8 	.word	0x200039a8
 8001408:	20003960 	.word	0x20003960
 800140c:	200046e8 	.word	0x200046e8
 8001410:	200046e4 	.word	0x200046e4
 8001414:	459ae148 	.word	0x459ae148
 8001418:	39800000 	.word	0x39800000
 800141c:	447a0000 	.word	0x447a0000
 8001420:	200046e0 	.word	0x200046e0
 8001424:	20003a40 	.word	0x20003a40
 8001428:	200046f0 	.word	0x200046f0
 800142c:	200046ec 	.word	0x200046ec

08001430 <SystemClock_Config>:
{
 8001430:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001432:	b0a1      	sub	sp, #132	; 0x84
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001434:	2210      	movs	r2, #16
 8001436:	2100      	movs	r1, #0
 8001438:	a80a      	add	r0, sp, #40	; 0x28
 800143a:	f01f fbef 	bl	8020c1c <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 800143e:	2214      	movs	r2, #20
 8001440:	2100      	movs	r1, #0
 8001442:	a803      	add	r0, sp, #12
 8001444:	f01f fbea 	bl	8020c1c <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001448:	2100      	movs	r1, #0
 800144a:	2230      	movs	r2, #48	; 0x30
 800144c:	a814      	add	r0, sp, #80	; 0x50
 800144e:	f01f fbe5 	bl	8020c1c <memset>
  __HAL_RCC_PWR_CLK_ENABLE();
 8001452:	2400      	movs	r4, #0
 8001454:	4b22      	ldr	r3, [pc, #136]	; (80014e0 <SystemClock_Config+0xb0>)
 8001456:	9401      	str	r4, [sp, #4]
 8001458:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800145a:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800145e:	641a      	str	r2, [r3, #64]	; 0x40
 8001460:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001462:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001466:	9301      	str	r3, [sp, #4]
 8001468:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 800146a:	4b1e      	ldr	r3, [pc, #120]	; (80014e4 <SystemClock_Config+0xb4>)
 800146c:	9402      	str	r4, [sp, #8]
 800146e:	681a      	ldr	r2, [r3, #0]
 8001470:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 8001474:	601a      	str	r2, [r3, #0]
 8001476:	681b      	ldr	r3, [r3, #0]
 8001478:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 800147c:	9302      	str	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 800147e:	2201      	movs	r2, #1
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001480:	9b02      	ldr	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001482:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8001486:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 800148a:	2502      	movs	r5, #2
 800148c:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 8001490:	e9cd 530e 	strd	r5, r3, [sp, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLN = 336;
 8001494:	2708      	movs	r7, #8
 8001496:	f44f 73a8 	mov.w	r3, #336	; 0x150
  RCC_OscInitStruct.PLL.PLLQ = 4;
 800149a:	2604      	movs	r6, #4
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800149c:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLN = 336;
 800149e:	e9cd 7310 	strd	r7, r3, [sp, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 80014a2:	9512      	str	r5, [sp, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLQ = 4;
 80014a4:	9613      	str	r6, [sp, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80014a6:	f005 ff27 	bl	80072f8 <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80014aa:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80014ac:	e9cd 3503 	strd	r3, r5, [sp, #12]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 80014b0:	f44f 51a0 	mov.w	r1, #5120	; 0x1400
 80014b4:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80014b8:	e9cd 1306 	strd	r1, r3, [sp, #24]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 80014bc:	a803      	add	r0, sp, #12
 80014be:	2105      	movs	r1, #5
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80014c0:	9405      	str	r4, [sp, #20]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 80014c2:	f006 f8f1 	bl	80076a8 <HAL_RCC_ClockConfig>
  PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 80014c6:	23c0      	movs	r3, #192	; 0xc0
 80014c8:	9318      	str	r3, [sp, #96]	; 0x60
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80014ca:	a814      	add	r0, sp, #80	; 0x50
  PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 80014cc:	f44f 3300 	mov.w	r3, #131072	; 0x20000
  PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 80014d0:	9714      	str	r7, [sp, #80]	; 0x50
  PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 80014d2:	961a      	str	r6, [sp, #104]	; 0x68
  PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 80014d4:	931d      	str	r3, [sp, #116]	; 0x74
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80014d6:	f006 f9c1 	bl	800785c <HAL_RCCEx_PeriphCLKConfig>
}
 80014da:	b021      	add	sp, #132	; 0x84
 80014dc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80014de:	bf00      	nop
 80014e0:	40023800 	.word	0x40023800
 80014e4:	40007000 	.word	0x40007000

080014e8 <main>:
{
 80014e8:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
 80014ec:	b09b      	sub	sp, #108	; 0x6c
  HAL_Init();
 80014ee:	f004 fc53 	bl	8005d98 <HAL_Init>
  SystemClock_Config();
 80014f2:	f7ff ff9d 	bl	8001430 <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80014f6:	2214      	movs	r2, #20
 80014f8:	2100      	movs	r1, #0
 80014fa:	a80d      	add	r0, sp, #52	; 0x34
  __HAL_RCC_GPIOF_CLK_ENABLE();
 80014fc:	2400      	movs	r4, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80014fe:	f01f fb8d 	bl	8020c1c <memset>
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001502:	4bc6      	ldr	r3, [pc, #792]	; (800181c <main+0x334>)
 8001504:	9400      	str	r4, [sp, #0]
 8001506:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001508:	48c5      	ldr	r0, [pc, #788]	; (8001820 <main+0x338>)
  hi2c3.Instance = I2C3;
 800150a:	4ec6      	ldr	r6, [pc, #792]	; (8001824 <main+0x33c>)
  __HAL_RCC_GPIOF_CLK_ENABLE();
 800150c:	f042 0220 	orr.w	r2, r2, #32
 8001510:	631a      	str	r2, [r3, #48]	; 0x30
 8001512:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001514:	f002 0220 	and.w	r2, r2, #32
 8001518:	9200      	str	r2, [sp, #0]
 800151a:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 800151c:	9401      	str	r4, [sp, #4]
 800151e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001520:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8001524:	631a      	str	r2, [r3, #48]	; 0x30
 8001526:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001528:	f002 0280 	and.w	r2, r2, #128	; 0x80
 800152c:	9201      	str	r2, [sp, #4]
 800152e:	9a01      	ldr	r2, [sp, #4]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8001530:	9402      	str	r4, [sp, #8]
 8001532:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001534:	f042 0204 	orr.w	r2, r2, #4
 8001538:	631a      	str	r2, [r3, #48]	; 0x30
 800153a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800153c:	f002 0204 	and.w	r2, r2, #4
 8001540:	9202      	str	r2, [sp, #8]
 8001542:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8001544:	9403      	str	r4, [sp, #12]
 8001546:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001548:	f042 0201 	orr.w	r2, r2, #1
 800154c:	631a      	str	r2, [r3, #48]	; 0x30
 800154e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001550:	f002 0201 	and.w	r2, r2, #1
 8001554:	9203      	str	r2, [sp, #12]
 8001556:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001558:	9404      	str	r4, [sp, #16]
 800155a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800155c:	f042 0202 	orr.w	r2, r2, #2
 8001560:	631a      	str	r2, [r3, #48]	; 0x30
 8001562:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001564:	f002 0202 	and.w	r2, r2, #2
 8001568:	9204      	str	r2, [sp, #16]
 800156a:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 800156c:	9405      	str	r4, [sp, #20]
 800156e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001570:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8001574:	631a      	str	r2, [r3, #48]	; 0x30
 8001576:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001578:	f002 0240 	and.w	r2, r2, #64	; 0x40
 800157c:	9205      	str	r2, [sp, #20]
 800157e:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001580:	9406      	str	r4, [sp, #24]
 8001582:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001584:	f042 0210 	orr.w	r2, r2, #16
 8001588:	631a      	str	r2, [r3, #48]	; 0x30
 800158a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800158c:	f002 0210 	and.w	r2, r2, #16
 8001590:	9206      	str	r2, [sp, #24]
 8001592:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001594:	9407      	str	r4, [sp, #28]
 8001596:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001598:	f042 0208 	orr.w	r2, r2, #8
 800159c:	631a      	str	r2, [r3, #48]	; 0x30
 800159e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80015a0:	f003 0308 	and.w	r3, r3, #8
 80015a4:	9307      	str	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80015a6:	4622      	mov	r2, r4
 80015a8:	2104      	movs	r1, #4
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80015aa:	9b07      	ldr	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80015ac:	f005 f8a8 	bl	8006700 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_12, GPIO_PIN_RESET);
 80015b0:	489d      	ldr	r0, [pc, #628]	; (8001828 <main+0x340>)
 80015b2:	4622      	mov	r2, r4
 80015b4:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 80015b8:	f005 f8a2 	bl	8006700 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 80015bc:	4622      	mov	r2, r4
 80015be:	489b      	ldr	r0, [pc, #620]	; (800182c <main+0x344>)
 80015c0:	f44f 5140 	mov.w	r1, #12288	; 0x3000
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80015c4:	2501      	movs	r5, #1
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 80015c6:	f005 f89b 	bl	8006700 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80015ca:	2702      	movs	r7, #2
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80015cc:	f04f 0b04 	mov.w	fp, #4
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80015d0:	4893      	ldr	r0, [pc, #588]	; (8001820 <main+0x338>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80015d2:	9710      	str	r7, [sp, #64]	; 0x40
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80015d4:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80015d6:	e9cd b50d 	strd	fp, r5, [sp, #52]	; 0x34
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80015da:	940f      	str	r4, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80015dc:	f004 ffa8 	bl	8006530 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12;
 80015e0:	f44f 5280 	mov.w	r2, #4096	; 0x1000
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80015e4:	4890      	ldr	r0, [pc, #576]	; (8001828 <main+0x340>)
 80015e6:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80015e8:	e9cd 250d 	strd	r2, r5, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80015ec:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80015f0:	f004 ff9e 	bl	8006530 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80015f4:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 80015f6:	f44f 5240 	mov.w	r2, #12288	; 0x3000
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80015fa:	488c      	ldr	r0, [pc, #560]	; (800182c <main+0x344>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80015fc:	e9cd 250d 	strd	r2, r5, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001600:	e9cd 470f 	strd	r4, r7, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001604:	f004 ff94 	bl	8006530 <HAL_GPIO_Init>
  hcrc.Instance = CRC;
 8001608:	4889      	ldr	r0, [pc, #548]	; (8001830 <main+0x348>)
 800160a:	4a8a      	ldr	r2, [pc, #552]	; (8001834 <main+0x34c>)
 800160c:	6002      	str	r2, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 800160e:	f004 fe0f 	bl	8006230 <HAL_CRC_Init>
  hi2c3.Init.ClockSpeed = 100000;
 8001612:	4b89      	ldr	r3, [pc, #548]	; (8001838 <main+0x350>)
 8001614:	4a89      	ldr	r2, [pc, #548]	; (800183c <main+0x354>)
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8001616:	6234      	str	r4, [r6, #32]
  hi2c3.Init.ClockSpeed = 100000;
 8001618:	e9c6 3200 	strd	r3, r2, [r6]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 800161c:	4630      	mov	r0, r6
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 800161e:	f44f 4280 	mov.w	r2, #16384	; 0x4000
  hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8001622:	e9c6 2404 	strd	r2, r4, [r6, #16]
  hi2c3.Init.OwnAddress1 = 0;
 8001626:	e9c6 4402 	strd	r4, r4, [r6, #8]
  hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 800162a:	e9c6 4406 	strd	r4, r4, [r6, #24]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 800162e:	f005 fa49 	bl	8006ac4 <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_DISABLE) != HAL_OK)
 8001632:	2110      	movs	r1, #16
 8001634:	4630      	mov	r0, r6
 8001636:	f005 fc85 	bl	8006f44 <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 800163a:	4621      	mov	r1, r4
 800163c:	4630      	mov	r0, r6
 800163e:	f005 fca0 	bl	8006f82 <HAL_I2CEx_ConfigDigitalFilter>
  hspi5.Instance = SPI5;
 8001642:	487f      	ldr	r0, [pc, #508]	; (8001840 <main+0x358>)
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001644:	497f      	ldr	r1, [pc, #508]	; (8001844 <main+0x35c>)
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8001646:	6284      	str	r4, [r0, #40]	; 0x28
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001648:	f44f 7282 	mov.w	r2, #260	; 0x104
 800164c:	e9c0 1200 	strd	r1, r2, [r0]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8001650:	f44f 7600 	mov.w	r6, #512	; 0x200
 8001654:	2218      	movs	r2, #24
 8001656:	e9c0 6206 	strd	r6, r2, [r0, #24]
  hspi5.Init.CRCPolynomial = 10;
 800165a:	220a      	movs	r2, #10
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 800165c:	4e7a      	ldr	r6, [pc, #488]	; (8001848 <main+0x360>)
  hspi5.Init.CRCPolynomial = 10;
 800165e:	62c2      	str	r2, [r0, #44]	; 0x2c
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 8001660:	e9c0 4402 	strd	r4, r4, [r0, #8]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 8001664:	e9c0 4404 	strd	r4, r4, [r0, #16]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 8001668:	e9c0 4408 	strd	r4, r4, [r0, #32]
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 800166c:	f006 fafa 	bl	8007c64 <HAL_SPI_Init>
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8001670:	4a76      	ldr	r2, [pc, #472]	; (800184c <main+0x364>)
  SdramTiming.LoadToActiveDelay = 2;
 8001672:	970d      	str	r7, [sp, #52]	; 0x34
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8001674:	f04f 0810 	mov.w	r8, #16
  hsdram1.Init.SDBank = FMC_SDRAM_BANK2;
 8001678:	e9c6 2500 	strd	r2, r5, [r6]
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 800167c:	2240      	movs	r2, #64	; 0x40
 800167e:	e9c6 8204 	strd	r8, r2, [r6, #16]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 8001682:	f44f 72c0 	mov.w	r2, #384	; 0x180
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 8001686:	e9c6 2406 	strd	r2, r4, [r6, #24]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 800168a:	f44f 6200 	mov.w	r2, #2048	; 0x800
  SdramTiming.WriteRecoveryTime = 3;
 800168e:	2303      	movs	r3, #3
  SdramTiming.ExitSelfRefreshDelay = 7;
 8001690:	f04f 0a07 	mov.w	sl, #7
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 8001694:	e9c6 2408 	strd	r2, r4, [r6, #32]
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001698:	a90d      	add	r1, sp, #52	; 0x34
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 800169a:	f44f 5200 	mov.w	r2, #8192	; 0x2000
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 800169e:	4630      	mov	r0, r6
  SdramTiming.RPDelay = 2;
 80016a0:	e9cd 3711 	strd	r3, r7, [sp, #68]	; 0x44
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80016a4:	f04f 0908 	mov.w	r9, #8
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 80016a8:	e9c6 4b02 	strd	r4, fp, [r6, #8]
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 80016ac:	62b2      	str	r2, [r6, #40]	; 0x28
  SdramTiming.SelfRefreshTime = 4;
 80016ae:	e9cd ab0e 	strd	sl, fp, [sp, #56]	; 0x38
  SdramTiming.RCDDelay = 2;
 80016b2:	9713      	str	r7, [sp, #76]	; 0x4c
  SdramTiming.RowCycleDelay = 7;
 80016b4:	f8cd a040 	str.w	sl, [sp, #64]	; 0x40
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80016b8:	f006 f9fa 	bl	8007ab0 <HAL_SDRAM_Init>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80016bc:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80016c0:	a909      	add	r1, sp, #36	; 0x24
 80016c2:	4630      	mov	r0, r6
  Command->AutoRefreshNumber       = 1;
 80016c4:	e9cd 950a 	strd	r9, r5, [sp, #40]	; 0x28
 __IO uint32_t tmpmrd =0;
 80016c8:	9408      	str	r4, [sp, #32]
  Command->CommandMode             = FMC_SDRAM_CMD_CLK_ENABLE;
 80016ca:	9509      	str	r5, [sp, #36]	; 0x24
  Command->ModeRegisterDefinition  = 0;
 80016cc:	940c      	str	r4, [sp, #48]	; 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80016ce:	f006 fa0f 	bl	8007af0 <HAL_SDRAM_SendCommand>
  HAL_Delay(1);
 80016d2:	4628      	mov	r0, r5
 80016d4:	f004 fb8c 	bl	8005df0 <HAL_Delay>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);  
 80016d8:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80016dc:	a909      	add	r1, sp, #36	; 0x24
 80016de:	4630      	mov	r0, r6
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80016e0:	e9cd 7909 	strd	r7, r9, [sp, #36]	; 0x24
  Command->ModeRegisterDefinition  = 0;
 80016e4:	e9cd 540b 	strd	r5, r4, [sp, #44]	; 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);  
 80016e8:	f006 fa02 	bl	8007af0 <HAL_SDRAM_SendCommand>
  Command->CommandMode             = FMC_SDRAM_CMD_AUTOREFRESH_MODE;
 80016ec:	2303      	movs	r3, #3
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80016ee:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80016f2:	a909      	add	r1, sp, #36	; 0x24
 80016f4:	4630      	mov	r0, r6
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80016f6:	e9cd 3909 	strd	r3, r9, [sp, #36]	; 0x24
  Command->ModeRegisterDefinition  = 0;
 80016fa:	e9cd b40b 	strd	fp, r4, [sp, #44]	; 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80016fe:	f006 f9f7 	bl	8007af0 <HAL_SDRAM_SendCommand>
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |
 8001702:	f44f 720c 	mov.w	r2, #560	; 0x230
 8001706:	9208      	str	r2, [sp, #32]
  Command->ModeRegisterDefinition  = tmpmrd;
 8001708:	9b08      	ldr	r3, [sp, #32]
 800170a:	930c      	str	r3, [sp, #48]	; 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 800170c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001710:	a909      	add	r1, sp, #36	; 0x24
 8001712:	4630      	mov	r0, r6
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001714:	e9cd b909 	strd	fp, r9, [sp, #36]	; 0x24
  Command->AutoRefreshNumber       = 1;
 8001718:	950b      	str	r5, [sp, #44]	; 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 800171a:	f006 f9e9 	bl	8007af0 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT); 
 800171e:	f240 516a 	movw	r1, #1386	; 0x56a
 8001722:	4630      	mov	r0, r6
 8001724:	f006 f9fb 	bl	8007b1e <HAL_SDRAM_ProgramRefreshRate>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 8001728:	2234      	movs	r2, #52	; 0x34
 800172a:	4621      	mov	r1, r4
 800172c:	eb0d 0002 	add.w	r0, sp, r2
 8001730:	f01f fa74 	bl	8020c1c <memset>
  hltdc.Instance = LTDC;
 8001734:	4e46      	ldr	r6, [pc, #280]	; (8001850 <main+0x368>)
 8001736:	4b47      	ldr	r3, [pc, #284]	; (8001854 <main+0x36c>)
  hltdc.Init.Backcolor.Blue = 0;
 8001738:	86b4      	strh	r4, [r6, #52]	; 0x34
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 800173a:	e9c6 3400 	strd	r3, r4, [r6]
  hltdc.Init.HorizontalSync = 9;
 800173e:	2309      	movs	r3, #9
  hltdc.Init.AccumulatedVBP = 3;
 8001740:	f04f 0c1d 	mov.w	ip, #29
  hltdc.Init.VerticalSync = 1;
 8001744:	e9c6 3505 	strd	r3, r5, [r6, #20]
  hltdc.Init.AccumulatedVBP = 3;
 8001748:	2303      	movs	r3, #3
 800174a:	e9c6 c307 	strd	ip, r3, [r6, #28]
  hltdc.Init.AccumulatedActiveH = 323;
 800174e:	f240 1e0d 	movw	lr, #269	; 0x10d
 8001752:	f240 1343 	movw	r3, #323	; 0x143
 8001756:	e9c6 e309 	strd	lr, r3, [r6, #36]	; 0x24
  hltdc.Init.TotalHeigh = 327;
 800175a:	f240 1917 	movw	r9, #279	; 0x117
 800175e:	f240 1347 	movw	r3, #327	; 0x147
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001762:	4630      	mov	r0, r6
  hltdc.Init.TotalHeigh = 327;
 8001764:	e9c6 930b 	strd	r9, r3, [r6, #44]	; 0x2c
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 8001768:	e9c6 4402 	strd	r4, r4, [r6, #8]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 800176c:	6134      	str	r4, [r6, #16]
  hltdc.Init.Backcolor.Red = 0;
 800176e:	f886 4036 	strb.w	r4, [r6, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001772:	f005 fcab 	bl	80070cc <HAL_LTDC_Init>
  pLayerCfg.Alpha = 255;
 8001776:	21ff      	movs	r1, #255	; 0xff
  pLayerCfg.WindowX1 = 240;
 8001778:	22f0      	movs	r2, #240	; 0xf0
  pLayerCfg.Alpha0 = 0;
 800177a:	e9cd 1412 	strd	r1, r4, [sp, #72]	; 0x48
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 800177e:	f44f 6b80 	mov.w	fp, #1024	; 0x400
 8001782:	2105      	movs	r1, #5
  pLayerCfg.WindowY1 = 320;
 8001784:	f44f 73a0 	mov.w	r3, #320	; 0x140
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8001788:	e9cd b114 	strd	fp, r1, [sp, #80]	; 0x50
  pLayerCfg.WindowY0 = 0;
 800178c:	e9cd 240e 	strd	r2, r4, [sp, #56]	; 0x38
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001790:	a90d      	add	r1, sp, #52	; 0x34
  pLayerCfg.ImageWidth = 240;
 8001792:	e9cd 4216 	strd	r4, r2, [sp, #88]	; 0x58
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001796:	4630      	mov	r0, r6
 8001798:	4622      	mov	r2, r4
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 800179a:	e9cd 3710 	strd	r3, r7, [sp, #64]	; 0x40
  LcdDrv = &ili9341_drv;
 800179e:	4e2e      	ldr	r6, [pc, #184]	; (8001858 <main+0x370>)
  pLayerCfg.ImageHeight = 320;
 80017a0:	9318      	str	r3, [sp, #96]	; 0x60
  pLayerCfg.WindowX0 = 0;
 80017a2:	940d      	str	r4, [sp, #52]	; 0x34
  pLayerCfg.Backcolor.Blue = 0;
 80017a4:	f8ad 4064 	strh.w	r4, [sp, #100]	; 0x64
  pLayerCfg.Backcolor.Red = 0;
 80017a8:	f88d 4066 	strb.w	r4, [sp, #102]	; 0x66
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 80017ac:	f005 fd59 	bl	8007262 <HAL_LTDC_ConfigLayer>
  LcdDrv = &ili9341_drv;
 80017b0:	4b2a      	ldr	r3, [pc, #168]	; (800185c <main+0x374>)
 80017b2:	6033      	str	r3, [r6, #0]
  LcdDrv->Init();
 80017b4:	681b      	ldr	r3, [r3, #0]
  hdac.Instance = DAC;
 80017b6:	f8df 90bc 	ldr.w	r9, [pc, #188]	; 8001874 <main+0x38c>
  LcdDrv->Init();
 80017ba:	4798      	blx	r3
  LcdDrv->DisplayOff();
 80017bc:	6833      	ldr	r3, [r6, #0]
  hdma2d.Instance = DMA2D;
 80017be:	4e28      	ldr	r6, [pc, #160]	; (8001860 <main+0x378>)
  LcdDrv->DisplayOff();
 80017c0:	68db      	ldr	r3, [r3, #12]
 80017c2:	4798      	blx	r3
  hdma2d.Instance = DMA2D;
 80017c4:	4b27      	ldr	r3, [pc, #156]	; (8001864 <main+0x37c>)
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
 80017c6:	e9c6 470a 	strd	r4, r7, [r6, #40]	; 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 80017ca:	e9c6 440c 	strd	r4, r4, [r6, #48]	; 0x30
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 80017ce:	4630      	mov	r0, r6
  hdma2d.Init.Mode = DMA2D_M2M;
 80017d0:	e9c6 3400 	strd	r3, r4, [r6]
  hdma2d.Init.OutputOffset = 0;
 80017d4:	e9c6 7402 	strd	r7, r4, [r6, #8]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 80017d8:	f004 fdad 	bl	8006336 <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 80017dc:	4629      	mov	r1, r5
 80017de:	4630      	mov	r0, r6
 80017e0:	f004 fe62 	bl	80064a8 <HAL_DMA2D_ConfigLayer>
  htim7.Instance = TIM7;
 80017e4:	4e20      	ldr	r6, [pc, #128]	; (8001868 <main+0x380>)
  htim7.Init.Prescaler = 8400-1;
 80017e6:	4a21      	ldr	r2, [pc, #132]	; (800186c <main+0x384>)
  htim7.Init.CounterMode = TIM_COUNTERMODE_UP;
 80017e8:	60b4      	str	r4, [r6, #8]
  htim7.Init.Prescaler = 8400-1;
 80017ea:	f242 03cf 	movw	r3, #8399	; 0x20cf
 80017ee:	e9c6 2300 	strd	r2, r3, [r6]
  if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
 80017f2:	4630      	mov	r0, r6
  htim7.Init.Period = 1000-1;
 80017f4:	f240 33e7 	movw	r3, #999	; 0x3e7
 80017f8:	60f3      	str	r3, [r6, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80017fa:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  htim7.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80017fe:	61b4      	str	r4, [r6, #24]
  if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
 8001800:	f006 fdca 	bl	8008398 <HAL_TIM_Base_Init>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
 8001804:	a90d      	add	r1, sp, #52	; 0x34
 8001806:	4630      	mov	r0, r6
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001808:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
 800180c:	f006 fdde 	bl	80083cc <HAL_TIMEx_MasterConfigSynchronization>
  hdac.Instance = DAC;
 8001810:	4b17      	ldr	r3, [pc, #92]	; (8001870 <main+0x388>)
 8001812:	f8c9 3000 	str.w	r3, [r9]
  if (HAL_DAC_Init(&hdac) != HAL_OK)
 8001816:	4648      	mov	r0, r9
 8001818:	e02e      	b.n	8001878 <main+0x390>
 800181a:	bf00      	nop
 800181c:	40023800 	.word	0x40023800
 8001820:	40020800 	.word	0x40020800
 8001824:	20003a94 	.word	0x20003a94
 8001828:	40020400 	.word	0x40020400
 800182c:	40020c00 	.word	0x40020c00
 8001830:	20003a38 	.word	0x20003a38
 8001834:	40023000 	.word	0x40023000
 8001838:	40005c00 	.word	0x40005c00
 800183c:	000186a0 	.word	0x000186a0
 8001840:	20003bc4 	.word	0x20003bc4
 8001844:	40015000 	.word	0x40015000
 8001848:	20003b90 	.word	0x20003b90
 800184c:	a0000140 	.word	0xa0000140
 8001850:	20003ae8 	.word	0x20003ae8
 8001854:	40016800 	.word	0x40016800
 8001858:	20003958 	.word	0x20003958
 800185c:	2000001c 	.word	0x2000001c
 8001860:	20003a54 	.word	0x20003a54
 8001864:	4002b000 	.word	0x4002b000
 8001868:	20003c1c 	.word	0x20003c1c
 800186c:	40001400 	.word	0x40001400
 8001870:	40007400 	.word	0x40007400
 8001874:	20003a40 	.word	0x20003a40
  DAC_ChannelConfTypeDef sConfig = {0};
 8001878:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  if (HAL_DAC_Init(&hdac) != HAL_OK)
 800187c:	f004 fce8 	bl	8006250 <HAL_DAC_Init>
  if (HAL_DAC_ConfigChannel(&hdac, &sConfig, DAC_CHANNEL_2) != HAL_OK)
 8001880:	4642      	mov	r2, r8
 8001882:	a90d      	add	r1, sp, #52	; 0x34
 8001884:	4648      	mov	r0, r9
  sConfig.DAC_OutputBuffer = DAC_OUTPUTBUFFER_ENABLE;
 8001886:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  if (HAL_DAC_ConfigChannel(&hdac, &sConfig, DAC_CHANNEL_2) != HAL_OK)
 800188a:	f004 fd21 	bl	80062d0 <HAL_DAC_ConfigChannel>
  ADC_ChannelConfTypeDef sConfig = {0};
 800188e:	4621      	mov	r1, r4
 8001890:	4642      	mov	r2, r8
 8001892:	a80d      	add	r0, sp, #52	; 0x34
 8001894:	f01f f9c2 	bl	8020c1c <memset>
  hadc2.Instance = ADC2;
 8001898:	4a43      	ldr	r2, [pc, #268]	; (80019a8 <main+0x4c0>)
  hadc2.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 800189a:	4b44      	ldr	r3, [pc, #272]	; (80019ac <main+0x4c4>)
  hadc2.Init.Resolution = ADC_RESOLUTION_12B;
 800189c:	6094      	str	r4, [r2, #8]
  hadc2.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 800189e:	f44f 3b80 	mov.w	fp, #65536	; 0x10000
 80018a2:	e9c2 3b00 	strd	r3, fp, [r2]
  if (HAL_ADC_Init(&hadc2) != HAL_OK)
 80018a6:	4610      	mov	r0, r2
  hadc2.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 80018a8:	4b41      	ldr	r3, [pc, #260]	; (80019b0 <main+0x4c8>)
 80018aa:	6293      	str	r3, [r2, #40]	; 0x28
  hadc2.Init.ScanConvMode = DISABLE;
 80018ac:	6114      	str	r4, [r2, #16]
  hadc2.Init.ContinuousConvMode = ENABLE;
 80018ae:	7615      	strb	r5, [r2, #24]
  hadc2.Init.DiscontinuousConvMode = DISABLE;
 80018b0:	f882 4020 	strb.w	r4, [r2, #32]
  hadc2.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 80018b4:	62d4      	str	r4, [r2, #44]	; 0x2c
  hadc2.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 80018b6:	60d4      	str	r4, [r2, #12]
  hadc2.Init.NbrOfConversion = 1;
 80018b8:	61d5      	str	r5, [r2, #28]
  hadc2.Init.DMAContinuousRequests = DISABLE;
 80018ba:	f882 4030 	strb.w	r4, [r2, #48]	; 0x30
  hadc2.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 80018be:	6155      	str	r5, [r2, #20]
  if (HAL_ADC_Init(&hadc2) != HAL_OK)
 80018c0:	f004 faaa 	bl	8005e18 <HAL_ADC_Init>
  if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 80018c4:	4a38      	ldr	r2, [pc, #224]	; (80019a8 <main+0x4c0>)
  sConfig.SamplingTime = ADC_SAMPLETIME_480CYCLES;
 80018c6:	f8cd a03c 	str.w	sl, [sp, #60]	; 0x3c
  if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 80018ca:	a90d      	add	r1, sp, #52	; 0x34
 80018cc:	4610      	mov	r0, r2
  sConfig.Rank = 1;
 80018ce:	e9cd 750d 	strd	r7, r5, [sp, #52]	; 0x34
  hadc3.Instance = ADC3;
 80018d2:	4f38      	ldr	r7, [pc, #224]	; (80019b4 <main+0x4cc>)
  if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 80018d4:	f004 fbbe 	bl	8006054 <HAL_ADC_ConfigChannel>
  ADC_ChannelConfTypeDef sConfig = {0};
 80018d8:	4621      	mov	r1, r4
 80018da:	4642      	mov	r2, r8
 80018dc:	a80d      	add	r0, sp, #52	; 0x34
 80018de:	f01f f99d 	bl	8020c1c <memset>
  hadc3.Instance = ADC3;
 80018e2:	4a35      	ldr	r2, [pc, #212]	; (80019b8 <main+0x4d0>)
  hadc3.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 80018e4:	4b32      	ldr	r3, [pc, #200]	; (80019b0 <main+0x4c8>)
 80018e6:	62bb      	str	r3, [r7, #40]	; 0x28
  if (HAL_ADC_Init(&hadc3) != HAL_OK)
 80018e8:	4638      	mov	r0, r7
  hadc3.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 80018ea:	e9c7 2b00 	strd	r2, fp, [r7]
  hadc3.Init.Resolution = ADC_RESOLUTION_12B;
 80018ee:	60bc      	str	r4, [r7, #8]
  hadc3.Init.ScanConvMode = DISABLE;
 80018f0:	613c      	str	r4, [r7, #16]
  hadc3.Init.ContinuousConvMode = ENABLE;
 80018f2:	763d      	strb	r5, [r7, #24]
  hadc3.Init.DiscontinuousConvMode = DISABLE;
 80018f4:	f887 4020 	strb.w	r4, [r7, #32]
  hadc3.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 80018f8:	62fc      	str	r4, [r7, #44]	; 0x2c
  hadc3.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 80018fa:	60fc      	str	r4, [r7, #12]
  hadc3.Init.NbrOfConversion = 1;
 80018fc:	61fd      	str	r5, [r7, #28]
  hadc3.Init.DMAContinuousRequests = DISABLE;
 80018fe:	f887 4030 	strb.w	r4, [r7, #48]	; 0x30
  hadc3.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 8001902:	617d      	str	r5, [r7, #20]
  if (HAL_ADC_Init(&hadc3) != HAL_OK)
 8001904:	f004 fa88 	bl	8005e18 <HAL_ADC_Init>
  if (HAL_ADC_ConfigChannel(&hadc3, &sConfig) != HAL_OK)
 8001908:	a90d      	add	r1, sp, #52	; 0x34
 800190a:	4638      	mov	r0, r7
  sConfig.Rank = 1;
 800190c:	e9cd 550d 	strd	r5, r5, [sp, #52]	; 0x34
  hadc1.Instance = ADC1;
 8001910:	4f2a      	ldr	r7, [pc, #168]	; (80019bc <main+0x4d4>)
  sConfig.SamplingTime = ADC_SAMPLETIME_480CYCLES;
 8001912:	f8cd a03c 	str.w	sl, [sp, #60]	; 0x3c
  if (HAL_ADC_ConfigChannel(&hadc3, &sConfig) != HAL_OK)
 8001916:	f004 fb9d 	bl	8006054 <HAL_ADC_ConfigChannel>
  ADC_ChannelConfTypeDef sConfig = {0};
 800191a:	4621      	mov	r1, r4
 800191c:	4642      	mov	r2, r8
 800191e:	a80d      	add	r0, sp, #52	; 0x34
 8001920:	f01f f97c 	bl	8020c1c <memset>
  hadc1.Instance = ADC1;
 8001924:	4a26      	ldr	r2, [pc, #152]	; (80019c0 <main+0x4d8>)
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 8001926:	4b22      	ldr	r3, [pc, #136]	; (80019b0 <main+0x4c8>)
 8001928:	62bb      	str	r3, [r7, #40]	; 0x28
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 800192a:	4638      	mov	r0, r7
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 800192c:	e9c7 2b00 	strd	r2, fp, [r7]
  hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 8001930:	60bc      	str	r4, [r7, #8]
  hadc1.Init.ScanConvMode = DISABLE;
 8001932:	613c      	str	r4, [r7, #16]
  hadc1.Init.ContinuousConvMode = ENABLE;
 8001934:	763d      	strb	r5, [r7, #24]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 8001936:	f887 4020 	strb.w	r4, [r7, #32]
  hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 800193a:	62fc      	str	r4, [r7, #44]	; 0x2c
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 800193c:	60fc      	str	r4, [r7, #12]
  hadc1.Init.NbrOfConversion = 1;
 800193e:	61fd      	str	r5, [r7, #28]
  hadc1.Init.DMAContinuousRequests = DISABLE;
 8001940:	f887 4030 	strb.w	r4, [r7, #48]	; 0x30
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 8001944:	617d      	str	r5, [r7, #20]
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 8001946:	f004 fa67 	bl	8005e18 <HAL_ADC_Init>
  sConfig.Channel = ADC_CHANNEL_VREFINT;
 800194a:	2311      	movs	r3, #17
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 800194c:	a90d      	add	r1, sp, #52	; 0x34
 800194e:	4638      	mov	r0, r7
  sConfig.Rank = 1;
 8001950:	e9cd 350d 	strd	r3, r5, [sp, #52]	; 0x34
  sConfig.SamplingTime = ADC_SAMPLETIME_480CYCLES;
 8001954:	f8cd a03c 	str.w	sl, [sp, #60]	; 0x3c
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8001958:	f004 fb7c 	bl	8006054 <HAL_ADC_ConfigChannel>
  MX_TouchGFX_Init();
 800195c:	f7fe fe43 	bl	80005e6 <MX_TouchGFX_Init>
  ladowarka.VccVoltage=3.3f;
 8001960:	4b18      	ldr	r3, [pc, #96]	; (80019c4 <main+0x4dc>)
 8001962:	4a19      	ldr	r2, [pc, #100]	; (80019c8 <main+0x4e0>)
 8001964:	601a      	str	r2, [r3, #0]
HAL_TIM_Base_Start_IT(&htim7); //uruchomienie timera 7 (przerwanie co 1 sek)
 8001966:	4630      	mov	r0, r6
 8001968:	f006 fbf9 	bl	800815e <HAL_TIM_Base_Start_IT>
HAL_DAC_Start(&hdac, DAC_CHANNEL_2);
 800196c:	4641      	mov	r1, r8
 800196e:	4648      	mov	r0, r9
 8001970:	f004 fc81 	bl	8006276 <HAL_DAC_Start>
HAL_DAC_SetValue(&hdac, DAC_CHANNEL_2, DAC_ALIGN_12B_R, 4095); //ustaw max napiecie na ADC, zeby nie plynal zaden prad !ZMIENIC
 8001974:	f640 73ff 	movw	r3, #4095	; 0xfff
 8001978:	4622      	mov	r2, r4
 800197a:	4641      	mov	r1, r8
 800197c:	4648      	mov	r0, r9
 800197e:	f004 fcc8 	bl	8006312 <HAL_DAC_SetValue>
  osKernelInitialize();
 8001982:	f006 fe03 	bl	800858c <osKernelInitialize>
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001986:	4a11      	ldr	r2, [pc, #68]	; (80019cc <main+0x4e4>)
 8001988:	4811      	ldr	r0, [pc, #68]	; (80019d0 <main+0x4e8>)
 800198a:	4621      	mov	r1, r4
 800198c:	f006 fe38 	bl	8008600 <osThreadNew>
 8001990:	4b10      	ldr	r3, [pc, #64]	; (80019d4 <main+0x4ec>)
  TaskDwaHandle = osThreadNew(ZadanieDwa, NULL, &TaskDwa_attributes);
 8001992:	4a11      	ldr	r2, [pc, #68]	; (80019d8 <main+0x4f0>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001994:	6018      	str	r0, [r3, #0]
  TaskDwaHandle = osThreadNew(ZadanieDwa, NULL, &TaskDwa_attributes);
 8001996:	4621      	mov	r1, r4
 8001998:	4810      	ldr	r0, [pc, #64]	; (80019dc <main+0x4f4>)
 800199a:	f006 fe31 	bl	8008600 <osThreadNew>
 800199e:	4b10      	ldr	r3, [pc, #64]	; (80019e0 <main+0x4f8>)
 80019a0:	6018      	str	r0, [r3, #0]
  osKernelStart();
 80019a2:	f006 fe0d 	bl	80085c0 <osKernelStart>
  while (1)
 80019a6:	e7fe      	b.n	80019a6 <main+0x4be>
 80019a8:	200039a8 	.word	0x200039a8
 80019ac:	40012100 	.word	0x40012100
 80019b0:	0f000001 	.word	0x0f000001
 80019b4:	200039f0 	.word	0x200039f0
 80019b8:	40012200 	.word	0x40012200
 80019bc:	20003960 	.word	0x20003960
 80019c0:	40012000 	.word	0x40012000
 80019c4:	200046e4 	.word	0x200046e4
 80019c8:	40533333 	.word	0x40533333
 80019cc:	08022174 	.word	0x08022174
 80019d0:	080005eb 	.word	0x080005eb
 80019d4:	20003954 	.word	0x20003954
 80019d8:	08022198 	.word	0x08022198
 80019dc:	080011ed 	.word	0x080011ed
 80019e0:	2000395c 	.word	0x2000395c

080019e4 <IOE_Init>:
 80019e4:	4770      	bx	lr

080019e6 <IOE_ITConfig>:
 80019e6:	4770      	bx	lr

080019e8 <IOE_Write>:
{
 80019e8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout); 
 80019ea:	4b09      	ldr	r3, [pc, #36]	; (8001a10 <IOE_Write+0x28>)
 80019ec:	f88d 2017 	strb.w	r2, [sp, #23]
 80019f0:	681b      	ldr	r3, [r3, #0]
 80019f2:	9302      	str	r3, [sp, #8]
 80019f4:	f10d 0217 	add.w	r2, sp, #23
 80019f8:	2301      	movs	r3, #1
 80019fa:	9200      	str	r2, [sp, #0]
 80019fc:	9301      	str	r3, [sp, #4]
 80019fe:	460a      	mov	r2, r1
 8001a00:	4601      	mov	r1, r0
 8001a02:	4804      	ldr	r0, [pc, #16]	; (8001a14 <IOE_Write+0x2c>)
 8001a04:	f005 f906 	bl	8006c14 <HAL_I2C_Mem_Write>
}
 8001a08:	b007      	add	sp, #28
 8001a0a:	f85d fb04 	ldr.w	pc, [sp], #4
 8001a0e:	bf00      	nop
 8001a10:	2000000c 	.word	0x2000000c
 8001a14:	20003a94 	.word	0x20003a94

08001a18 <IOE_Read>:
{
 8001a18:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  uint8_t value = 0;
 8001a1a:	2300      	movs	r3, #0
 8001a1c:	f88d 3017 	strb.w	r3, [sp, #23]
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001a20:	4b08      	ldr	r3, [pc, #32]	; (8001a44 <IOE_Read+0x2c>)
 8001a22:	681b      	ldr	r3, [r3, #0]
 8001a24:	9302      	str	r3, [sp, #8]
{
 8001a26:	460a      	mov	r2, r1
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001a28:	2301      	movs	r3, #1
 8001a2a:	f10d 0117 	add.w	r1, sp, #23
 8001a2e:	9100      	str	r1, [sp, #0]
 8001a30:	9301      	str	r3, [sp, #4]
 8001a32:	4601      	mov	r1, r0
 8001a34:	4804      	ldr	r0, [pc, #16]	; (8001a48 <IOE_Read+0x30>)
 8001a36:	f005 f97d 	bl	8006d34 <HAL_I2C_Mem_Read>
}
 8001a3a:	f89d 0017 	ldrb.w	r0, [sp, #23]
 8001a3e:	b007      	add	sp, #28
 8001a40:	f85d fb04 	ldr.w	pc, [sp], #4
 8001a44:	2000000c 	.word	0x2000000c
 8001a48:	20003a94 	.word	0x20003a94

08001a4c <IOE_ReadMultiple>:
{
 8001a4c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 8001a4e:	4c08      	ldr	r4, [pc, #32]	; (8001a70 <IOE_ReadMultiple+0x24>)
 8001a50:	6824      	ldr	r4, [r4, #0]
 8001a52:	9200      	str	r2, [sp, #0]
 8001a54:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8001a58:	460a      	mov	r2, r1
 8001a5a:	2301      	movs	r3, #1
 8001a5c:	4601      	mov	r1, r0
 8001a5e:	4805      	ldr	r0, [pc, #20]	; (8001a74 <IOE_ReadMultiple+0x28>)
 8001a60:	f005 f968 	bl	8006d34 <HAL_I2C_Mem_Read>
}
 8001a64:	3800      	subs	r0, #0
 8001a66:	bf18      	it	ne
 8001a68:	2001      	movne	r0, #1
 8001a6a:	b004      	add	sp, #16
 8001a6c:	bd10      	pop	{r4, pc}
 8001a6e:	bf00      	nop
 8001a70:	2000000c 	.word	0x2000000c
 8001a74:	20003a94 	.word	0x20003a94

08001a78 <IOE_Delay>:
 8001a78:	f004 b9ba 	b.w	8005df0 <HAL_Delay>

08001a7c <LCD_IO_Init>:
{
 8001a7c:	b508      	push	{r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001a7e:	4806      	ldr	r0, [pc, #24]	; (8001a98 <LCD_IO_Init+0x1c>)
 8001a80:	2200      	movs	r2, #0
 8001a82:	2104      	movs	r1, #4
 8001a84:	f004 fe3c 	bl	8006700 <HAL_GPIO_WritePin>
}
 8001a88:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001a8c:	4802      	ldr	r0, [pc, #8]	; (8001a98 <LCD_IO_Init+0x1c>)
 8001a8e:	2201      	movs	r2, #1
 8001a90:	2104      	movs	r1, #4
 8001a92:	f004 be35 	b.w	8006700 <HAL_GPIO_WritePin>
 8001a96:	bf00      	nop
 8001a98:	40020800 	.word	0x40020800

08001a9c <LCD_IO_WriteData>:
{
 8001a9c:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001a9e:	4d0b      	ldr	r5, [pc, #44]	; (8001acc <LCD_IO_WriteData+0x30>)
{
 8001aa0:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001aa2:	2201      	movs	r2, #1
 8001aa4:	480a      	ldr	r0, [pc, #40]	; (8001ad0 <LCD_IO_WriteData+0x34>)
 8001aa6:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001aaa:	f004 fe29 	bl	8006700 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001aae:	2200      	movs	r2, #0
 8001ab0:	2104      	movs	r1, #4
 8001ab2:	4628      	mov	r0, r5
 8001ab4:	f004 fe24 	bl	8006700 <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 8001ab8:	4620      	mov	r0, r4
 8001aba:	f7ff fb5d 	bl	8001178 <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001abe:	4628      	mov	r0, r5
 8001ac0:	2201      	movs	r2, #1
}
 8001ac2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001ac6:	2104      	movs	r1, #4
 8001ac8:	f004 be1a 	b.w	8006700 <HAL_GPIO_WritePin>
 8001acc:	40020800 	.word	0x40020800
 8001ad0:	40020c00 	.word	0x40020c00

08001ad4 <LCD_IO_WriteReg>:
{
 8001ad4:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001ad6:	4d0b      	ldr	r5, [pc, #44]	; (8001b04 <LCD_IO_WriteReg+0x30>)
{
 8001ad8:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001ada:	2200      	movs	r2, #0
 8001adc:	480a      	ldr	r0, [pc, #40]	; (8001b08 <LCD_IO_WriteReg+0x34>)
 8001ade:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001ae2:	f004 fe0d 	bl	8006700 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001ae6:	2200      	movs	r2, #0
 8001ae8:	2104      	movs	r1, #4
 8001aea:	4628      	mov	r0, r5
 8001aec:	f004 fe08 	bl	8006700 <HAL_GPIO_WritePin>
  SPI5_Write(Reg);
 8001af0:	4620      	mov	r0, r4
 8001af2:	f7ff fb41 	bl	8001178 <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001af6:	4628      	mov	r0, r5
 8001af8:	2201      	movs	r2, #1
}
 8001afa:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001afe:	2104      	movs	r1, #4
 8001b00:	f004 bdfe 	b.w	8006700 <HAL_GPIO_WritePin>
 8001b04:	40020800 	.word	0x40020800
 8001b08:	40020c00 	.word	0x40020c00

08001b0c <LCD_IO_ReadData>:
{
 8001b0c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001b0e:	4e14      	ldr	r6, [pc, #80]	; (8001b60 <LCD_IO_ReadData+0x54>)
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001b10:	4f14      	ldr	r7, [pc, #80]	; (8001b64 <LCD_IO_ReadData+0x58>)
{
 8001b12:	4605      	mov	r5, r0
 8001b14:	460c      	mov	r4, r1
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001b16:	4630      	mov	r0, r6
 8001b18:	2200      	movs	r2, #0
 8001b1a:	2104      	movs	r1, #4
 8001b1c:	f004 fdf0 	bl	8006700 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001b20:	2200      	movs	r2, #0
 8001b22:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001b26:	4638      	mov	r0, r7
 8001b28:	f004 fdea 	bl	8006700 <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 8001b2c:	4628      	mov	r0, r5
 8001b2e:	f7ff fb23 	bl	8001178 <SPI5_Write>
  status = HAL_SPI_Receive(&hspi5, (uint8_t*) &readvalue, ReadSize, Spi5Timeout);
 8001b32:	4b0d      	ldr	r3, [pc, #52]	; (8001b68 <LCD_IO_ReadData+0x5c>)
 8001b34:	480d      	ldr	r0, [pc, #52]	; (8001b6c <LCD_IO_ReadData+0x60>)
 8001b36:	681b      	ldr	r3, [r3, #0]
 8001b38:	4622      	mov	r2, r4
 8001b3a:	a901      	add	r1, sp, #4
 8001b3c:	f006 fa6d 	bl	800801a <HAL_SPI_Receive>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001b40:	4638      	mov	r0, r7
 8001b42:	2201      	movs	r2, #1
 8001b44:	f44f 5100 	mov.w	r1, #8192	; 0x2000
  return readvalue;
 8001b48:	9c01      	ldr	r4, [sp, #4]
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001b4a:	f004 fdd9 	bl	8006700 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001b4e:	4630      	mov	r0, r6
 8001b50:	2201      	movs	r2, #1
 8001b52:	2104      	movs	r1, #4
 8001b54:	f004 fdd4 	bl	8006700 <HAL_GPIO_WritePin>
}
 8001b58:	4620      	mov	r0, r4
 8001b5a:	b003      	add	sp, #12
 8001b5c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001b5e:	bf00      	nop
 8001b60:	40020800 	.word	0x40020800
 8001b64:	40020c00 	.word	0x40020c00
 8001b68:	20000010 	.word	0x20000010
 8001b6c:	20003bc4 	.word	0x20003bc4

08001b70 <LCD_Delay>:
  HAL_Delay(Delay);
 8001b70:	f004 b93e 	b.w	8005df0 <HAL_Delay>

08001b74 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM8) {
 8001b74:	6802      	ldr	r2, [r0, #0]
 8001b76:	4b08      	ldr	r3, [pc, #32]	; (8001b98 <HAL_TIM_PeriodElapsedCallback+0x24>)
 8001b78:	429a      	cmp	r2, r3
{
 8001b7a:	b510      	push	{r4, lr}
 8001b7c:	4604      	mov	r4, r0
  if (htim->Instance == TIM8) {
 8001b7e:	d101      	bne.n	8001b84 <HAL_TIM_PeriodElapsedCallback+0x10>
    HAL_IncTick();
 8001b80:	f004 f924 	bl	8005dcc <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */
  if (htim->Instance == TIM7){ //timer co 100ms
 8001b84:	6822      	ldr	r2, [r4, #0]
 8001b86:	4b05      	ldr	r3, [pc, #20]	; (8001b9c <HAL_TIM_PeriodElapsedCallback+0x28>)
 8001b88:	429a      	cmp	r2, r3
	  ladowarka.Minelo100ms=1;
 8001b8a:	bf02      	ittt	eq
 8001b8c:	4b04      	ldreq	r3, [pc, #16]	; (8001ba0 <HAL_TIM_PeriodElapsedCallback+0x2c>)
 8001b8e:	2201      	moveq	r2, #1
 8001b90:	f8c3 2a6c 	streq.w	r2, [r3, #2668]	; 0xa6c
  }

  /* USER CODE END Callback 1 */
}
 8001b94:	bd10      	pop	{r4, pc}
 8001b96:	bf00      	nop
 8001b98:	40010400 	.word	0x40010400
 8001b9c:	40001400 	.word	0x40001400
 8001ba0:	20003c5c 	.word	0x20003c5c

08001ba4 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001ba4:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001ba6:	4b0e      	ldr	r3, [pc, #56]	; (8001be0 <HAL_MspInit+0x3c>)
 8001ba8:	2200      	movs	r2, #0
 8001baa:	9200      	str	r2, [sp, #0]
 8001bac:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8001bae:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 8001bb2:	6459      	str	r1, [r3, #68]	; 0x44
 8001bb4:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8001bb6:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 8001bba:	9100      	str	r1, [sp, #0]
 8001bbc:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001bbe:	9201      	str	r2, [sp, #4]
 8001bc0:	6c19      	ldr	r1, [r3, #64]	; 0x40
 8001bc2:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 8001bc6:	6419      	str	r1, [r3, #64]	; 0x40
 8001bc8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001bca:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001bce:	9301      	str	r3, [sp, #4]
 8001bd0:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001bd2:	210f      	movs	r1, #15
 8001bd4:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001bd8:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001bda:	f004 bae9 	b.w	80061b0 <HAL_NVIC_SetPriority>
 8001bde:	bf00      	nop
 8001be0:	40023800 	.word	0x40023800

08001be4 <HAL_ADC_MspInit>:
* This function configures the hardware resources used in this example
* @param hadc: ADC handle pointer
* @retval None
*/
void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
{
 8001be4:	b510      	push	{r4, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001be6:	2214      	movs	r2, #20
{
 8001be8:	b08a      	sub	sp, #40	; 0x28
 8001bea:	4604      	mov	r4, r0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001bec:	2100      	movs	r1, #0
 8001bee:	eb0d 0002 	add.w	r0, sp, r2
 8001bf2:	f01f f813 	bl	8020c1c <memset>
  if(hadc->Instance==ADC1)
 8001bf6:	6823      	ldr	r3, [r4, #0]
 8001bf8:	4a26      	ldr	r2, [pc, #152]	; (8001c94 <HAL_ADC_MspInit+0xb0>)
 8001bfa:	4293      	cmp	r3, r2
 8001bfc:	d10d      	bne.n	8001c1a <HAL_ADC_MspInit+0x36>
  {
  /* USER CODE BEGIN ADC1_MspInit 0 */

  /* USER CODE END ADC1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_ADC1_CLK_ENABLE();
 8001bfe:	2300      	movs	r3, #0
 8001c00:	9300      	str	r3, [sp, #0]
 8001c02:	4b25      	ldr	r3, [pc, #148]	; (8001c98 <HAL_ADC_MspInit+0xb4>)
 8001c04:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001c06:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8001c0a:	645a      	str	r2, [r3, #68]	; 0x44
 8001c0c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001c0e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8001c12:	9300      	str	r3, [sp, #0]
 8001c14:	9b00      	ldr	r3, [sp, #0]
  /* USER CODE BEGIN ADC3_MspInit 1 */

  /* USER CODE END ADC3_MspInit 1 */
  }

}
 8001c16:	b00a      	add	sp, #40	; 0x28
 8001c18:	bd10      	pop	{r4, pc}
  else if(hadc->Instance==ADC2)
 8001c1a:	4a20      	ldr	r2, [pc, #128]	; (8001c9c <HAL_ADC_MspInit+0xb8>)
 8001c1c:	4293      	cmp	r3, r2
 8001c1e:	d11e      	bne.n	8001c5e <HAL_ADC_MspInit+0x7a>
    __HAL_RCC_ADC2_CLK_ENABLE();
 8001c20:	4b1d      	ldr	r3, [pc, #116]	; (8001c98 <HAL_ADC_MspInit+0xb4>)
 8001c22:	2100      	movs	r1, #0
 8001c24:	9101      	str	r1, [sp, #4]
 8001c26:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001c28:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8001c2c:	645a      	str	r2, [r3, #68]	; 0x44
 8001c2e:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001c30:	f402 7200 	and.w	r2, r2, #512	; 0x200
 8001c34:	9201      	str	r2, [sp, #4]
 8001c36:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001c38:	9102      	str	r1, [sp, #8]
 8001c3a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c3c:	f042 0201 	orr.w	r2, r2, #1
 8001c40:	631a      	str	r2, [r3, #48]	; 0x30
 8001c42:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001c44:	f003 0301 	and.w	r3, r3, #1
 8001c48:	9302      	str	r3, [sp, #8]
 8001c4a:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_2;
 8001c4c:	2304      	movs	r3, #4
    GPIO_InitStruct.Pin = GPIO_PIN_1;
 8001c4e:	9305      	str	r3, [sp, #20]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001c50:	4813      	ldr	r0, [pc, #76]	; (8001ca0 <HAL_ADC_MspInit+0xbc>)
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8001c52:	2303      	movs	r3, #3
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001c54:	a905      	add	r1, sp, #20
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8001c56:	9306      	str	r3, [sp, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001c58:	f004 fc6a 	bl	8006530 <HAL_GPIO_Init>
}
 8001c5c:	e7db      	b.n	8001c16 <HAL_ADC_MspInit+0x32>
  else if(hadc->Instance==ADC3)
 8001c5e:	4a11      	ldr	r2, [pc, #68]	; (8001ca4 <HAL_ADC_MspInit+0xc0>)
 8001c60:	4293      	cmp	r3, r2
 8001c62:	d1d8      	bne.n	8001c16 <HAL_ADC_MspInit+0x32>
    __HAL_RCC_ADC3_CLK_ENABLE();
 8001c64:	4b0c      	ldr	r3, [pc, #48]	; (8001c98 <HAL_ADC_MspInit+0xb4>)
 8001c66:	2100      	movs	r1, #0
 8001c68:	9103      	str	r1, [sp, #12]
 8001c6a:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001c6c:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8001c70:	645a      	str	r2, [r3, #68]	; 0x44
 8001c72:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001c74:	f402 6280 	and.w	r2, r2, #1024	; 0x400
 8001c78:	9203      	str	r2, [sp, #12]
 8001c7a:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001c7c:	9104      	str	r1, [sp, #16]
 8001c7e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c80:	f042 0201 	orr.w	r2, r2, #1
 8001c84:	631a      	str	r2, [r3, #48]	; 0x30
 8001c86:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001c88:	f003 0301 	and.w	r3, r3, #1
 8001c8c:	9304      	str	r3, [sp, #16]
 8001c8e:	9b04      	ldr	r3, [sp, #16]
    GPIO_InitStruct.Pin = GPIO_PIN_1;
 8001c90:	2302      	movs	r3, #2
 8001c92:	e7dc      	b.n	8001c4e <HAL_ADC_MspInit+0x6a>
 8001c94:	40012000 	.word	0x40012000
 8001c98:	40023800 	.word	0x40023800
 8001c9c:	40012100 	.word	0x40012100
 8001ca0:	40020000 	.word	0x40020000
 8001ca4:	40012200 	.word	0x40012200

08001ca8 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8001ca8:	6802      	ldr	r2, [r0, #0]
 8001caa:	4b09      	ldr	r3, [pc, #36]	; (8001cd0 <HAL_CRC_MspInit+0x28>)
 8001cac:	429a      	cmp	r2, r3
{
 8001cae:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 8001cb0:	d10b      	bne.n	8001cca <HAL_CRC_MspInit+0x22>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8001cb2:	2300      	movs	r3, #0
 8001cb4:	9301      	str	r3, [sp, #4]
 8001cb6:	4b07      	ldr	r3, [pc, #28]	; (8001cd4 <HAL_CRC_MspInit+0x2c>)
 8001cb8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001cba:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8001cbe:	631a      	str	r2, [r3, #48]	; 0x30
 8001cc0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001cc2:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8001cc6:	9301      	str	r3, [sp, #4]
 8001cc8:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8001cca:	b002      	add	sp, #8
 8001ccc:	4770      	bx	lr
 8001cce:	bf00      	nop
 8001cd0:	40023000 	.word	0x40023000
 8001cd4:	40023800 	.word	0x40023800

08001cd8 <HAL_DAC_MspInit>:
* This function configures the hardware resources used in this example
* @param hdac: DAC handle pointer
* @retval None
*/
void HAL_DAC_MspInit(DAC_HandleTypeDef* hdac)
{
 8001cd8:	b510      	push	{r4, lr}
 8001cda:	4604      	mov	r4, r0
 8001cdc:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001cde:	2214      	movs	r2, #20
 8001ce0:	2100      	movs	r1, #0
 8001ce2:	a803      	add	r0, sp, #12
 8001ce4:	f01e ff9a 	bl	8020c1c <memset>
  if(hdac->Instance==DAC)
 8001ce8:	6822      	ldr	r2, [r4, #0]
 8001cea:	4b12      	ldr	r3, [pc, #72]	; (8001d34 <HAL_DAC_MspInit+0x5c>)
 8001cec:	429a      	cmp	r2, r3
 8001cee:	d11e      	bne.n	8001d2e <HAL_DAC_MspInit+0x56>
  {
  /* USER CODE BEGIN DAC_MspInit 0 */

  /* USER CODE END DAC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DAC_CLK_ENABLE();
 8001cf0:	f503 33e2 	add.w	r3, r3, #115712	; 0x1c400
 8001cf4:	2100      	movs	r1, #0
 8001cf6:	9101      	str	r1, [sp, #4]
 8001cf8:	6c1a      	ldr	r2, [r3, #64]	; 0x40
    PA5     ------> DAC_OUT2
    */
    GPIO_InitStruct.Pin = GPIO_PIN_5;
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001cfa:	480f      	ldr	r0, [pc, #60]	; (8001d38 <HAL_DAC_MspInit+0x60>)
    __HAL_RCC_DAC_CLK_ENABLE();
 8001cfc:	f042 5200 	orr.w	r2, r2, #536870912	; 0x20000000
 8001d00:	641a      	str	r2, [r3, #64]	; 0x40
 8001d02:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001d04:	f002 5200 	and.w	r2, r2, #536870912	; 0x20000000
 8001d08:	9201      	str	r2, [sp, #4]
 8001d0a:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001d0c:	9102      	str	r1, [sp, #8]
 8001d0e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d10:	f042 0201 	orr.w	r2, r2, #1
 8001d14:	631a      	str	r2, [r3, #48]	; 0x30
 8001d16:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001d18:	f003 0301 	and.w	r3, r3, #1
 8001d1c:	9302      	str	r3, [sp, #8]
 8001d1e:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8001d20:	2220      	movs	r2, #32
 8001d22:	2303      	movs	r3, #3
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001d24:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8001d26:	e9cd 2303 	strd	r2, r3, [sp, #12]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001d2a:	f004 fc01 	bl	8006530 <HAL_GPIO_Init>
  /* USER CODE BEGIN DAC_MspInit 1 */

  /* USER CODE END DAC_MspInit 1 */
  }

}
 8001d2e:	b008      	add	sp, #32
 8001d30:	bd10      	pop	{r4, pc}
 8001d32:	bf00      	nop
 8001d34:	40007400 	.word	0x40007400
 8001d38:	40020000 	.word	0x40020000

08001d3c <HAL_DMA2D_MspInit>:
* This function configures the hardware resources used in this example
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
 8001d3c:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 8001d3e:	4b0f      	ldr	r3, [pc, #60]	; (8001d7c <HAL_DMA2D_MspInit+0x40>)
 8001d40:	6802      	ldr	r2, [r0, #0]
 8001d42:	429a      	cmp	r2, r3
 8001d44:	d116      	bne.n	8001d74 <HAL_DMA2D_MspInit+0x38>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001d46:	2200      	movs	r2, #0
 8001d48:	f5a3 43f0 	sub.w	r3, r3, #30720	; 0x7800
 8001d4c:	9201      	str	r2, [sp, #4]
 8001d4e:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001d50:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8001d54:	6319      	str	r1, [r3, #48]	; 0x30
 8001d56:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001d58:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8001d5c:	9301      	str	r3, [sp, #4]
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001d5e:	2105      	movs	r1, #5
 8001d60:	205a      	movs	r0, #90	; 0x5a
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001d62:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001d64:	f004 fa24 	bl	80061b0 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001d68:	205a      	movs	r0, #90	; 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 8001d6a:	b003      	add	sp, #12
 8001d6c:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001d70:	f004 ba50 	b.w	8006214 <HAL_NVIC_EnableIRQ>
}
 8001d74:	b003      	add	sp, #12
 8001d76:	f85d fb04 	ldr.w	pc, [sp], #4
 8001d7a:	bf00      	nop
 8001d7c:	4002b000 	.word	0x4002b000

08001d80 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8001d80:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001d84:	4604      	mov	r4, r0
 8001d86:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001d88:	2214      	movs	r2, #20
 8001d8a:	2100      	movs	r1, #0
 8001d8c:	a803      	add	r0, sp, #12
 8001d8e:	f01e ff45 	bl	8020c1c <memset>
  if(hi2c->Instance==I2C3)
 8001d92:	6822      	ldr	r2, [r4, #0]
 8001d94:	4b24      	ldr	r3, [pc, #144]	; (8001e28 <HAL_I2C_MspInit+0xa8>)
 8001d96:	429a      	cmp	r2, r3
 8001d98:	d143      	bne.n	8001e22 <HAL_I2C_MspInit+0xa2>
  {
  /* USER CODE BEGIN I2C3_MspInit 0 */

  /* USER CODE END I2C3_MspInit 0 */

    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001d9a:	4c24      	ldr	r4, [pc, #144]	; (8001e2c <HAL_I2C_MspInit+0xac>)
    GPIO_InitStruct.Pin = GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001d9c:	4824      	ldr	r0, [pc, #144]	; (8001e30 <HAL_I2C_MspInit+0xb0>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001d9e:	2500      	movs	r5, #0
 8001da0:	9500      	str	r5, [sp, #0]
 8001da2:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001da4:	f043 0304 	orr.w	r3, r3, #4
 8001da8:	6323      	str	r3, [r4, #48]	; 0x30
 8001daa:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001dac:	f003 0304 	and.w	r3, r3, #4
 8001db0:	9300      	str	r3, [sp, #0]
 8001db2:	9b00      	ldr	r3, [sp, #0]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001db4:	9501      	str	r5, [sp, #4]
 8001db6:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001db8:	f043 0301 	orr.w	r3, r3, #1
 8001dbc:	6323      	str	r3, [r4, #48]	; 0x30
 8001dbe:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001dc0:	f003 0301 	and.w	r3, r3, #1
 8001dc4:	9301      	str	r3, [sp, #4]
 8001dc6:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001dc8:	f04f 0912 	mov.w	r9, #18
 8001dcc:	f44f 7300 	mov.w	r3, #512	; 0x200
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001dd0:	f04f 0801 	mov.w	r8, #1
 8001dd4:	2703      	movs	r7, #3
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001dd6:	2604      	movs	r6, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001dd8:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001dda:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001dde:	e9cd 8705 	strd	r8, r7, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001de2:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001de4:	f004 fba4 	bl	8006530 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8001de8:	f44f 7380 	mov.w	r3, #256	; 0x100
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001dec:	4811      	ldr	r0, [pc, #68]	; (8001e34 <HAL_I2C_MspInit+0xb4>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001dee:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001df0:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001df2:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001df6:	e9cd 8705 	strd	r8, r7, [sp, #20]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001dfa:	f004 fb99 	bl	8006530 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001dfe:	9502      	str	r5, [sp, #8]
 8001e00:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001e02:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001e06:	6423      	str	r3, [r4, #64]	; 0x40
 8001e08:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001e0a:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8001e0e:	9302      	str	r3, [sp, #8]
 8001e10:	9b02      	ldr	r3, [sp, #8]
  /* USER CODE BEGIN I2C3_MspInit 1 */
  /* Force the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_FORCE_RESET();
 8001e12:	6a23      	ldr	r3, [r4, #32]
 8001e14:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001e18:	6223      	str	r3, [r4, #32]
      
    /* Release the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_RELEASE_RESET(); 
 8001e1a:	6a23      	ldr	r3, [r4, #32]
 8001e1c:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8001e20:	6223      	str	r3, [r4, #32]
  /* USER CODE END I2C3_MspInit 1 */
  }

}
 8001e22:	b009      	add	sp, #36	; 0x24
 8001e24:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001e28:	40005c00 	.word	0x40005c00
 8001e2c:	40023800 	.word	0x40023800
 8001e30:	40020800 	.word	0x40020800
 8001e34:	40020000 	.word	0x40020000

08001e38 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8001e38:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001e3a:	4604      	mov	r4, r0
 8001e3c:	b08d      	sub	sp, #52	; 0x34
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001e3e:	2214      	movs	r2, #20
 8001e40:	2100      	movs	r1, #0
 8001e42:	a807      	add	r0, sp, #28
 8001e44:	f01e feea 	bl	8020c1c <memset>
  if(hltdc->Instance==LTDC)
 8001e48:	6822      	ldr	r2, [r4, #0]
 8001e4a:	4b57      	ldr	r3, [pc, #348]	; (8001fa8 <HAL_LTDC_MspInit+0x170>)
 8001e4c:	429a      	cmp	r2, r3
 8001e4e:	f040 80a8 	bne.w	8001fa2 <HAL_LTDC_MspInit+0x16a>
  {
  /* USER CODE BEGIN LTDC_MspInit 0 */

  /* USER CODE END LTDC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001e52:	f503 4350 	add.w	r3, r3, #53248	; 0xd000
 8001e56:	2500      	movs	r5, #0
 8001e58:	9500      	str	r5, [sp, #0]
 8001e5a:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_10;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001e5c:	4853      	ldr	r0, [pc, #332]	; (8001fac <HAL_LTDC_MspInit+0x174>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001e5e:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8001e62:	645a      	str	r2, [r3, #68]	; 0x44
 8001e64:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001e66:	f002 6280 	and.w	r2, r2, #67108864	; 0x4000000
 8001e6a:	9200      	str	r2, [sp, #0]
 8001e6c:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001e6e:	9501      	str	r5, [sp, #4]
 8001e70:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001e72:	f042 0220 	orr.w	r2, r2, #32
 8001e76:	631a      	str	r2, [r3, #48]	; 0x30
 8001e78:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001e7a:	f002 0220 	and.w	r2, r2, #32
 8001e7e:	9201      	str	r2, [sp, #4]
 8001e80:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001e82:	9502      	str	r5, [sp, #8]
 8001e84:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001e86:	f042 0201 	orr.w	r2, r2, #1
 8001e8a:	631a      	str	r2, [r3, #48]	; 0x30
 8001e8c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001e8e:	f002 0201 	and.w	r2, r2, #1
 8001e92:	9202      	str	r2, [sp, #8]
 8001e94:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001e96:	9503      	str	r5, [sp, #12]
 8001e98:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001e9a:	f042 0202 	orr.w	r2, r2, #2
 8001e9e:	631a      	str	r2, [r3, #48]	; 0x30
 8001ea0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001ea2:	f002 0202 	and.w	r2, r2, #2
 8001ea6:	9203      	str	r2, [sp, #12]
 8001ea8:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8001eaa:	9504      	str	r5, [sp, #16]
 8001eac:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001eae:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8001eb2:	631a      	str	r2, [r3, #48]	; 0x30
 8001eb4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001eb6:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8001eba:	9204      	str	r2, [sp, #16]
 8001ebc:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001ebe:	9505      	str	r5, [sp, #20]
 8001ec0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001ec2:	f042 0204 	orr.w	r2, r2, #4
 8001ec6:	631a      	str	r2, [r3, #48]	; 0x30
 8001ec8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001eca:	f002 0204 	and.w	r2, r2, #4
 8001ece:	9205      	str	r2, [sp, #20]
 8001ed0:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001ed2:	9506      	str	r5, [sp, #24]
 8001ed4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001ed6:	f042 0208 	orr.w	r2, r2, #8
 8001eda:	631a      	str	r2, [r3, #48]	; 0x30
 8001edc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001ede:	f003 0308 	and.w	r3, r3, #8
 8001ee2:	9306      	str	r3, [sp, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001ee4:	2402      	movs	r4, #2
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001ee6:	260e      	movs	r6, #14
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001ee8:	9b06      	ldr	r3, [sp, #24]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001eea:	940a      	str	r4, [sp, #40]	; 0x28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001eec:	f44f 6380 	mov.w	r3, #1024	; 0x400
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001ef0:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001ef2:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001ef6:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001ef8:	f004 fb1a 	bl	8006530 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8001efc:	f641 0358 	movw	r3, #6232	; 0x1858
                          |GPIO_PIN_12;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001f00:	482b      	ldr	r0, [pc, #172]	; (8001fb0 <HAL_LTDC_MspInit+0x178>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001f02:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001f04:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001f06:	e9cd 3407 	strd	r3, r4, [sp, #28]

    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001f0a:	2709      	movs	r7, #9
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001f0c:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001f10:	f004 fb0e 	bl	8006530 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8001f14:	2303      	movs	r3, #3
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001f16:	4827      	ldr	r0, [pc, #156]	; (8001fb4 <HAL_LTDC_MspInit+0x17c>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001f18:	970b      	str	r7, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001f1a:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001f1c:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001f20:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001f24:	f004 fb04 	bl	8006530 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 8001f28:	f44f 6370 	mov.w	r3, #3840	; 0xf00
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001f2c:	4821      	ldr	r0, [pc, #132]	; (8001fb4 <HAL_LTDC_MspInit+0x17c>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001f2e:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001f30:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001f32:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001f36:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001f3a:	f004 faf9 	bl	8006530 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 8001f3e:	f44f 630c 	mov.w	r3, #2240	; 0x8c0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001f42:	481d      	ldr	r0, [pc, #116]	; (8001fb8 <HAL_LTDC_MspInit+0x180>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001f44:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001f46:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001f48:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001f4c:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001f50:	f004 faee 	bl	8006530 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8001f54:	23c0      	movs	r3, #192	; 0xc0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001f56:	4819      	ldr	r0, [pc, #100]	; (8001fbc <HAL_LTDC_MspInit+0x184>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001f58:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001f5a:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001f5c:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001f60:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001f64:	f004 fae4 	bl	8006530 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8001f68:	2308      	movs	r3, #8
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001f6a:	4815      	ldr	r0, [pc, #84]	; (8001fc0 <HAL_LTDC_MspInit+0x188>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001f6c:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001f6e:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001f70:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001f74:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001f78:	f004 fada 	bl	8006530 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8001f7c:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001f80:	480d      	ldr	r0, [pc, #52]	; (8001fb8 <HAL_LTDC_MspInit+0x180>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001f82:	970b      	str	r7, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001f84:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001f86:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001f8a:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001f8e:	f004 facf 	bl	8006530 <HAL_GPIO_Init>

    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8001f92:	2058      	movs	r0, #88	; 0x58
 8001f94:	462a      	mov	r2, r5
 8001f96:	2105      	movs	r1, #5
 8001f98:	f004 f90a 	bl	80061b0 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8001f9c:	2058      	movs	r0, #88	; 0x58
 8001f9e:	f004 f939 	bl	8006214 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8001fa2:	b00d      	add	sp, #52	; 0x34
 8001fa4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001fa6:	bf00      	nop
 8001fa8:	40016800 	.word	0x40016800
 8001fac:	40021400 	.word	0x40021400
 8001fb0:	40020000 	.word	0x40020000
 8001fb4:	40020400 	.word	0x40020400
 8001fb8:	40021800 	.word	0x40021800
 8001fbc:	40020800 	.word	0x40020800
 8001fc0:	40020c00 	.word	0x40020c00

08001fc4 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8001fc4:	b510      	push	{r4, lr}
 8001fc6:	4604      	mov	r4, r0
 8001fc8:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001fca:	2214      	movs	r2, #20
 8001fcc:	2100      	movs	r1, #0
 8001fce:	a803      	add	r0, sp, #12
 8001fd0:	f01e fe24 	bl	8020c1c <memset>
  if(hspi->Instance==SPI5)
 8001fd4:	6822      	ldr	r2, [r4, #0]
 8001fd6:	4b14      	ldr	r3, [pc, #80]	; (8002028 <HAL_SPI_MspInit+0x64>)
 8001fd8:	429a      	cmp	r2, r3
 8001fda:	d123      	bne.n	8002024 <HAL_SPI_MspInit+0x60>
  {
  /* USER CODE BEGIN SPI5_MspInit 0 */

  /* USER CODE END SPI5_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI5_CLK_ENABLE();
 8001fdc:	f503 4368 	add.w	r3, r3, #59392	; 0xe800
 8001fe0:	2100      	movs	r1, #0
 8001fe2:	9101      	str	r1, [sp, #4]
 8001fe4:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001fe6:	4811      	ldr	r0, [pc, #68]	; (800202c <HAL_SPI_MspInit+0x68>)
    __HAL_RCC_SPI5_CLK_ENABLE();
 8001fe8:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 8001fec:	645a      	str	r2, [r3, #68]	; 0x44
 8001fee:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001ff0:	f402 1280 	and.w	r2, r2, #1048576	; 0x100000
 8001ff4:	9201      	str	r2, [sp, #4]
 8001ff6:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001ff8:	9102      	str	r1, [sp, #8]
 8001ffa:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001ffc:	f042 0220 	orr.w	r2, r2, #32
 8002000:	631a      	str	r2, [r3, #48]	; 0x30
 8002002:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002004:	f003 0320 	and.w	r3, r3, #32
 8002008:	9302      	str	r3, [sp, #8]
 800200a:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800200c:	f44f 7260 	mov.w	r2, #896	; 0x380
 8002010:	2302      	movs	r3, #2
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8002012:	2103      	movs	r1, #3
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002014:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8002018:	2305      	movs	r3, #5
 800201a:	e9cd 1306 	strd	r1, r3, [sp, #24]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800201e:	a903      	add	r1, sp, #12
 8002020:	f004 fa86 	bl	8006530 <HAL_GPIO_Init>
  /* USER CODE BEGIN SPI5_MspInit 1 */

  /* USER CODE END SPI5_MspInit 1 */
  }

}
 8002024:	b008      	add	sp, #32
 8002026:	bd10      	pop	{r4, pc}
 8002028:	40015000 	.word	0x40015000
 800202c:	40021400 	.word	0x40021400

08002030 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8002030:	b507      	push	{r0, r1, r2, lr}
  if(htim_base->Instance==TIM7)
 8002032:	4b0f      	ldr	r3, [pc, #60]	; (8002070 <HAL_TIM_Base_MspInit+0x40>)
 8002034:	6802      	ldr	r2, [r0, #0]
 8002036:	429a      	cmp	r2, r3
 8002038:	d116      	bne.n	8002068 <HAL_TIM_Base_MspInit+0x38>
  {
  /* USER CODE BEGIN TIM7_MspInit 0 */

  /* USER CODE END TIM7_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM7_CLK_ENABLE();
 800203a:	2200      	movs	r2, #0
 800203c:	f503 3309 	add.w	r3, r3, #140288	; 0x22400
 8002040:	9201      	str	r2, [sp, #4]
 8002042:	6c19      	ldr	r1, [r3, #64]	; 0x40
 8002044:	f041 0120 	orr.w	r1, r1, #32
 8002048:	6419      	str	r1, [r3, #64]	; 0x40
 800204a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800204c:	f003 0320 	and.w	r3, r3, #32
 8002050:	9301      	str	r3, [sp, #4]
    /* TIM7 interrupt Init */
    HAL_NVIC_SetPriority(TIM7_IRQn, 5, 0);
 8002052:	2105      	movs	r1, #5
 8002054:	2037      	movs	r0, #55	; 0x37
    __HAL_RCC_TIM7_CLK_ENABLE();
 8002056:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(TIM7_IRQn, 5, 0);
 8002058:	f004 f8aa 	bl	80061b0 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM7_IRQn);
 800205c:	2037      	movs	r0, #55	; 0x37
  /* USER CODE BEGIN TIM7_MspInit 1 */

  /* USER CODE END TIM7_MspInit 1 */
  }

}
 800205e:	b003      	add	sp, #12
 8002060:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(TIM7_IRQn);
 8002064:	f004 b8d6 	b.w	8006214 <HAL_NVIC_EnableIRQ>
}
 8002068:	b003      	add	sp, #12
 800206a:	f85d fb04 	ldr.w	pc, [sp], #4
 800206e:	bf00      	nop
 8002070:	40001400 	.word	0x40001400

08002074 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8002074:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002078:	b086      	sub	sp, #24
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 800207a:	2300      	movs	r3, #0
 800207c:	9303      	str	r3, [sp, #12]
  if (FMC_Initialized) {
 800207e:	4b2b      	ldr	r3, [pc, #172]	; (800212c <HAL_SDRAM_MspInit+0xb8>)
 8002080:	681c      	ldr	r4, [r3, #0]
 8002082:	2c00      	cmp	r4, #0
 8002084:	d14f      	bne.n	8002126 <HAL_SDRAM_MspInit+0xb2>
  FMC_Initialized = 1;
 8002086:	f04f 0801 	mov.w	r8, #1
 800208a:	f8c3 8000 	str.w	r8, [r3]
  __HAL_RCC_FMC_CLK_ENABLE();
 800208e:	4b28      	ldr	r3, [pc, #160]	; (8002130 <HAL_SDRAM_MspInit+0xbc>)
 8002090:	9400      	str	r4, [sp, #0]
 8002092:	6b9a      	ldr	r2, [r3, #56]	; 0x38
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002094:	4827      	ldr	r0, [pc, #156]	; (8002134 <HAL_SDRAM_MspInit+0xc0>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8002096:	ea42 0208 	orr.w	r2, r2, r8
 800209a:	639a      	str	r2, [r3, #56]	; 0x38
 800209c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800209e:	ea03 0308 	and.w	r3, r3, r8
 80020a2:	9300      	str	r3, [sp, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80020a4:	2702      	movs	r7, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80020a6:	2603      	movs	r6, #3
 80020a8:	250c      	movs	r5, #12
  __HAL_RCC_FMC_CLK_ENABLE();
 80020aa:	9b00      	ldr	r3, [sp, #0]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80020ac:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80020ae:	f64f 033f 	movw	r3, #63551	; 0xf83f
 80020b2:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80020b6:	e9cd 6504 	strd	r6, r5, [sp, #16]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80020ba:	f004 fa39 	bl	8006530 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80020be:	481e      	ldr	r0, [pc, #120]	; (8002138 <HAL_SDRAM_MspInit+0xc4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80020c0:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80020c2:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80020c4:	e9cd 8701 	strd	r8, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80020c8:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80020cc:	f004 fa30 	bl	8006530 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 80020d0:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80020d4:	4819      	ldr	r0, [pc, #100]	; (800213c <HAL_SDRAM_MspInit+0xc8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80020d6:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80020d8:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80020da:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80020de:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80020e2:	f004 fa25 	bl	8006530 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 80020e6:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80020ea:	4815      	ldr	r0, [pc, #84]	; (8002140 <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80020ec:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80020ee:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80020f0:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80020f4:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80020f8:	f004 fa1a 	bl	8006530 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 80020fc:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002100:	4810      	ldr	r0, [pc, #64]	; (8002144 <HAL_SDRAM_MspInit+0xd0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002102:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002104:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002106:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800210a:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800210e:	f004 fa0f 	bl	8006530 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8002112:	2360      	movs	r3, #96	; 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002114:	480c      	ldr	r0, [pc, #48]	; (8002148 <HAL_SDRAM_MspInit+0xd4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002116:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002118:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800211a:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800211e:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002122:	f004 fa05 	bl	8006530 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 8002126:	b006      	add	sp, #24
 8002128:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800212c:	200046fc 	.word	0x200046fc
 8002130:	40023800 	.word	0x40023800
 8002134:	40021400 	.word	0x40021400
 8002138:	40020800 	.word	0x40020800
 800213c:	40021800 	.word	0x40021800
 8002140:	40021000 	.word	0x40021000
 8002144:	40020c00 	.word	0x40020c00
 8002148:	40020400 	.word	0x40020400

0800214c <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 800214c:	b530      	push	{r4, r5, lr}
 800214e:	4601      	mov	r1, r0
 8002150:	b089      	sub	sp, #36	; 0x24
  uint32_t              uwTimclock = 0;
  uint32_t              uwPrescalerValue = 0;
  uint32_t              pFLatency;

  /*Configure the TIM8 IRQ priority */
  HAL_NVIC_SetPriority(TIM8_UP_TIM13_IRQn, TickPriority ,0);
 8002152:	2200      	movs	r2, #0
 8002154:	202c      	movs	r0, #44	; 0x2c
 8002156:	f004 f82b 	bl	80061b0 <HAL_NVIC_SetPriority>

  /* Enable the TIM8 global Interrupt */
  HAL_NVIC_EnableIRQ(TIM8_UP_TIM13_IRQn);
 800215a:	202c      	movs	r0, #44	; 0x2c
 800215c:	f004 f85a 	bl	8006214 <HAL_NVIC_EnableIRQ>

  /* Enable TIM8 clock */
  __HAL_RCC_TIM8_CLK_ENABLE();
 8002160:	2500      	movs	r5, #0
 8002162:	4b15      	ldr	r3, [pc, #84]	; (80021b8 <HAL_InitTick+0x6c>)
 8002164:	9502      	str	r5, [sp, #8]
 8002166:	6c5a      	ldr	r2, [r3, #68]	; 0x44

  /* Compute the prescaler value to have TIM8 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000) - 1);

  /* Initialize TIM8 */
  htim8.Instance = TIM8;
 8002168:	4c14      	ldr	r4, [pc, #80]	; (80021bc <HAL_InitTick+0x70>)
  __HAL_RCC_TIM8_CLK_ENABLE();
 800216a:	f042 0202 	orr.w	r2, r2, #2
 800216e:	645a      	str	r2, [r3, #68]	; 0x44
 8002170:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002172:	f003 0302 	and.w	r3, r3, #2
 8002176:	9302      	str	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8002178:	a901      	add	r1, sp, #4
 800217a:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM8_CLK_ENABLE();
 800217c:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 800217e:	f005 fb4f 	bl	8007820 <HAL_RCC_GetClockConfig>
  uwTimclock = 2*HAL_RCC_GetPCLK2Freq();
 8002182:	f005 fb3d 	bl	8007800 <HAL_RCC_GetPCLK2Freq>
  htim8.Instance = TIM8;
 8002186:	4b0e      	ldr	r3, [pc, #56]	; (80021c0 <HAL_InitTick+0x74>)
 8002188:	6023      	str	r3, [r4, #0]
  + Period = [(TIM8CLK/1000) - 1]. to have a (1/1000) s time base.
  + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim8.Init.Period = (1000000 / 1000) - 1;
 800218a:	f240 33e7 	movw	r3, #999	; 0x3e7
 800218e:	60e3      	str	r3, [r4, #12]
  uwTimclock = 2*HAL_RCC_GetPCLK2Freq();
 8002190:	0040      	lsls	r0, r0, #1
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000) - 1);
 8002192:	4b0c      	ldr	r3, [pc, #48]	; (80021c4 <HAL_InitTick+0x78>)
 8002194:	fbb0 f0f3 	udiv	r0, r0, r3
 8002198:	3801      	subs	r0, #1
  htim8.Init.Prescaler = uwPrescalerValue;
 800219a:	6060      	str	r0, [r4, #4]
  htim8.Init.ClockDivision = 0;
  htim8.Init.CounterMode = TIM_COUNTERMODE_UP;
  if(HAL_TIM_Base_Init(&htim8) == HAL_OK)
 800219c:	4620      	mov	r0, r4
  htim8.Init.ClockDivision = 0;
 800219e:	6125      	str	r5, [r4, #16]
  htim8.Init.CounterMode = TIM_COUNTERMODE_UP;
 80021a0:	60a5      	str	r5, [r4, #8]
  if(HAL_TIM_Base_Init(&htim8) == HAL_OK)
 80021a2:	f006 f8f9 	bl	8008398 <HAL_TIM_Base_Init>
 80021a6:	b920      	cbnz	r0, 80021b2 <HAL_InitTick+0x66>
  {
    /* Start the TIM time Base generation in interrupt mode */
    return HAL_TIM_Base_Start_IT(&htim8);
 80021a8:	4620      	mov	r0, r4
 80021aa:	f005 ffd8 	bl	800815e <HAL_TIM_Base_Start_IT>
  }

  /* Return function status */
  return HAL_ERROR;
}
 80021ae:	b009      	add	sp, #36	; 0x24
 80021b0:	bd30      	pop	{r4, r5, pc}
  return HAL_ERROR;
 80021b2:	2001      	movs	r0, #1
 80021b4:	e7fb      	b.n	80021ae <HAL_InitTick+0x62>
 80021b6:	bf00      	nop
 80021b8:	40023800 	.word	0x40023800
 80021bc:	20004700 	.word	0x20004700
 80021c0:	40010400 	.word	0x40010400
 80021c4:	000f4240 	.word	0x000f4240

080021c8 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 80021c8:	4770      	bx	lr

080021ca <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 80021ca:	e7fe      	b.n	80021ca <HardFault_Handler>

080021cc <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 80021cc:	e7fe      	b.n	80021cc <MemManage_Handler>

080021ce <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 80021ce:	e7fe      	b.n	80021ce <BusFault_Handler>

080021d0 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 80021d0:	e7fe      	b.n	80021d0 <UsageFault_Handler>

080021d2 <DebugMon_Handler>:
 80021d2:	4770      	bx	lr

080021d4 <TIM8_UP_TIM13_IRQHandler>:
void TIM8_UP_TIM13_IRQHandler(void)
{
  /* USER CODE BEGIN TIM8_UP_TIM13_IRQn 0 */

  /* USER CODE END TIM8_UP_TIM13_IRQn 0 */
  HAL_TIM_IRQHandler(&htim8);
 80021d4:	4801      	ldr	r0, [pc, #4]	; (80021dc <TIM8_UP_TIM13_IRQHandler+0x8>)
 80021d6:	f005 bfd6 	b.w	8008186 <HAL_TIM_IRQHandler>
 80021da:	bf00      	nop
 80021dc:	20004700 	.word	0x20004700

080021e0 <TIM7_IRQHandler>:
void TIM7_IRQHandler(void)
{
  /* USER CODE BEGIN TIM7_IRQn 0 */

  /* USER CODE END TIM7_IRQn 0 */
  HAL_TIM_IRQHandler(&htim7);
 80021e0:	4801      	ldr	r0, [pc, #4]	; (80021e8 <TIM7_IRQHandler+0x8>)
 80021e2:	f005 bfd0 	b.w	8008186 <HAL_TIM_IRQHandler>
 80021e6:	bf00      	nop
 80021e8:	20003c1c 	.word	0x20003c1c

080021ec <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 80021ec:	4801      	ldr	r0, [pc, #4]	; (80021f4 <LTDC_IRQHandler+0x8>)
 80021ee:	f004 bfdb 	b.w	80071a8 <HAL_LTDC_IRQHandler>
 80021f2:	bf00      	nop
 80021f4:	20003ae8 	.word	0x20003ae8

080021f8 <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 80021f8:	4801      	ldr	r0, [pc, #4]	; (8002200 <DMA2D_IRQHandler+0x8>)
 80021fa:	f004 b8ca 	b.w	8006392 <HAL_DMA2D_IRQHandler>
 80021fe:	bf00      	nop
 8002200:	20003a54 	.word	0x20003a54

08002204 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8002204:	2001      	movs	r0, #1
 8002206:	4770      	bx	lr

08002208 <_kill>:

int _kill(int pid, int sig)
{
 8002208:	b508      	push	{r3, lr}
	errno = EINVAL;
 800220a:	f01e fbb3 	bl	8020974 <__errno>
 800220e:	2316      	movs	r3, #22
 8002210:	6003      	str	r3, [r0, #0]
	return -1;
}
 8002212:	f04f 30ff 	mov.w	r0, #4294967295
 8002216:	bd08      	pop	{r3, pc}

08002218 <_exit>:

void _exit (int status)
{
 8002218:	b508      	push	{r3, lr}
	errno = EINVAL;
 800221a:	f01e fbab 	bl	8020974 <__errno>
 800221e:	2316      	movs	r3, #22
 8002220:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 8002222:	e7fe      	b.n	8002222 <_exit+0xa>

08002224 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8002224:	b570      	push	{r4, r5, r6, lr}
 8002226:	460d      	mov	r5, r1
 8002228:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800222a:	460e      	mov	r6, r1
 800222c:	1b73      	subs	r3, r6, r5
 800222e:	429c      	cmp	r4, r3
 8002230:	dc01      	bgt.n	8002236 <_read+0x12>
	{
		*ptr++ = __io_getchar();
	}

return len;
}
 8002232:	4620      	mov	r0, r4
 8002234:	bd70      	pop	{r4, r5, r6, pc}
		*ptr++ = __io_getchar();
 8002236:	f3af 8000 	nop.w
 800223a:	f806 0b01 	strb.w	r0, [r6], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800223e:	e7f5      	b.n	800222c <_read+0x8>

08002240 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8002240:	b570      	push	{r4, r5, r6, lr}
 8002242:	460d      	mov	r5, r1
 8002244:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002246:	460e      	mov	r6, r1
 8002248:	1b73      	subs	r3, r6, r5
 800224a:	429c      	cmp	r4, r3
 800224c:	dc01      	bgt.n	8002252 <_write+0x12>
	{
		__io_putchar(*ptr++);
	}
	return len;
}
 800224e:	4620      	mov	r0, r4
 8002250:	bd70      	pop	{r4, r5, r6, pc}
		__io_putchar(*ptr++);
 8002252:	f816 0b01 	ldrb.w	r0, [r6], #1
 8002256:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800225a:	e7f5      	b.n	8002248 <_write+0x8>

0800225c <_close>:

int _close(int file)
{
	return -1;
}
 800225c:	f04f 30ff 	mov.w	r0, #4294967295
 8002260:	4770      	bx	lr

08002262 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 8002262:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8002266:	604b      	str	r3, [r1, #4]
	return 0;
}
 8002268:	2000      	movs	r0, #0
 800226a:	4770      	bx	lr

0800226c <_isatty>:

int _isatty(int file)
{
	return 1;
}
 800226c:	2001      	movs	r0, #1
 800226e:	4770      	bx	lr

08002270 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 8002270:	2000      	movs	r0, #0
 8002272:	4770      	bx	lr

08002274 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8002274:	4a0a      	ldr	r2, [pc, #40]	; (80022a0 <_sbrk+0x2c>)
 8002276:	6811      	ldr	r1, [r2, #0]
{
 8002278:	b508      	push	{r3, lr}
 800227a:	4603      	mov	r3, r0
	if (heap_end == 0)
 800227c:	b909      	cbnz	r1, 8002282 <_sbrk+0xe>
		heap_end = &end;
 800227e:	4909      	ldr	r1, [pc, #36]	; (80022a4 <_sbrk+0x30>)
 8002280:	6011      	str	r1, [r2, #0]

	prev_heap_end = heap_end;
 8002282:	6810      	ldr	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 8002284:	4669      	mov	r1, sp
 8002286:	4403      	add	r3, r0
 8002288:	428b      	cmp	r3, r1
 800228a:	d906      	bls.n	800229a <_sbrk+0x26>
	{
		errno = ENOMEM;
 800228c:	f01e fb72 	bl	8020974 <__errno>
 8002290:	230c      	movs	r3, #12
 8002292:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 8002294:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap_end += incr;

	return (caddr_t) prev_heap_end;
}
 8002298:	bd08      	pop	{r3, pc}
	heap_end += incr;
 800229a:	6013      	str	r3, [r2, #0]
	return (caddr_t) prev_heap_end;
 800229c:	e7fc      	b.n	8002298 <_sbrk+0x24>
 800229e:	bf00      	nop
 80022a0:	20004740 	.word	0x20004740
 80022a4:	200158b0 	.word	0x200158b0

080022a8 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // verdana_40_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 80022a8:	4770      	bx	lr

080022aa <_ZN23ApplicationFontProviderD0Ev>:
 80022aa:	b510      	push	{r4, lr}
 80022ac:	2104      	movs	r1, #4
 80022ae:	4604      	mov	r4, r0
 80022b0:	f01e fa7a 	bl	80207a8 <_ZdlPvj>
 80022b4:	4620      	mov	r0, r4
 80022b6:	bd10      	pop	{r4, pc}

080022b8 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
    switch (typography)
 80022b8:	2901      	cmp	r1, #1
{
 80022ba:	b508      	push	{r3, lr}
    switch (typography)
 80022bc:	d006      	beq.n	80022cc <_ZN23ApplicationFontProvider7getFontEt+0x14>
 80022be:	2902      	cmp	r1, #2
 80022c0:	d008      	beq.n	80022d4 <_ZN23ApplicationFontProvider7getFontEt+0x1c>
 80022c2:	b959      	cbnz	r1, 80022dc <_ZN23ApplicationFontProvider7getFontEt+0x24>
    {
    case Typography::DEFAULT:
        // verdana_15_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 80022c4:	f002 fdf8 	bl	8004eb8 <_ZN17TypedTextDatabase8getFontsEv>
 80022c8:	6800      	ldr	r0, [r0, #0]
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
    default:
        return 0;
    }
}
 80022ca:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 80022cc:	f002 fdf4 	bl	8004eb8 <_ZN17TypedTextDatabase8getFontsEv>
 80022d0:	6840      	ldr	r0, [r0, #4]
 80022d2:	e7fa      	b.n	80022ca <_ZN23ApplicationFontProvider7getFontEt+0x12>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 80022d4:	f002 fdf0 	bl	8004eb8 <_ZN17TypedTextDatabase8getFontsEv>
 80022d8:	6880      	ldr	r0, [r0, #8]
 80022da:	e7f6      	b.n	80022ca <_ZN23ApplicationFontProvider7getFontEt+0x12>
    switch (typography)
 80022dc:	2000      	movs	r0, #0
 80022de:	e7f4      	b.n	80022ca <_ZN23ApplicationFontProvider7getFontEt+0x12>

080022e0 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 80022e0:	4800      	ldr	r0, [pc, #0]	; (80022e4 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 80022e2:	4770      	bx	lr
 80022e4:	080221d0 	.word	0x080221d0

080022e8 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 80022e8:	200d      	movs	r0, #13
 80022ea:	4770      	bx	lr

080022ec <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 80022ec:	b513      	push	{r0, r1, r4, lr}
 80022ee:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 80022f0:	b151      	cbz	r1, 8002308 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 80022f2:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 80022f4:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 80022f6:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 80022fa:	aa01      	add	r2, sp, #4
 80022fc:	689c      	ldr	r4, [r3, #8]
 80022fe:	f10d 0303 	add.w	r3, sp, #3
 8002302:	47a0      	blx	r4
        return glyph;
    }
 8002304:	b002      	add	sp, #8
 8002306:	bd10      	pop	{r4, pc}
            return 0;
 8002308:	4608      	mov	r0, r1
 800230a:	e7fb      	b.n	8002304 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

0800230c <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 800230c:	8940      	ldrh	r0, [r0, #10]
 800230e:	4770      	bx	lr

08002310 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 8002310:	8980      	ldrh	r0, [r0, #12]
 8002312:	4770      	bx	lr

08002314 <_ZNK8touchgfx4Font13getFontHeightEv>:
     *       getMinimumTextHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getFontHeight() const
    {
        return fontHeight;
    }
 8002314:	8880      	ldrh	r0, [r0, #4]
 8002316:	4770      	bx	lr

08002318 <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
     *
     * @return The minimum height needed for a text field that uses this font.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getMinimumTextHeight() const
    {
        return fontHeight + pixelsBelowBaseline;
 8002318:	7983      	ldrb	r3, [r0, #6]
 800231a:	8880      	ldrh	r0, [r0, #4]
 800231c:	4418      	add	r0, r3
    }
 800231e:	b280      	uxth	r0, r0
 8002320:	4770      	bx	lr

08002322 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 8002322:	79c0      	ldrb	r0, [r0, #7]
    }
 8002324:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 8002328:	4770      	bx	lr

0800232a <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 800232a:	79c0      	ldrb	r0, [r0, #7]
    }
 800232c:	09c0      	lsrs	r0, r0, #7
 800232e:	4770      	bx	lr

08002330 <_ZN8touchgfx9TypedTextD1Ev>:
    }
 8002330:	4770      	bx	lr

08002332 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 8002332:	b510      	push	{r4, lr}
    }
 8002334:	2108      	movs	r1, #8
    virtual ~TypedText()
 8002336:	4604      	mov	r4, r0
    }
 8002338:	f01e fa36 	bl	80207a8 <_ZdlPvj>
 800233c:	4620      	mov	r0, r4
 800233e:	bd10      	pop	{r4, pc}

08002340 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 8002340:	4770      	bx	lr

08002342 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 8002342:	4770      	bx	lr

08002344 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 8002344:	f500 7396 	add.w	r3, r0, #300	; 0x12c
 8002348:	6808      	ldr	r0, [r1, #0]
 800234a:	6849      	ldr	r1, [r1, #4]
 800234c:	c303      	stmia	r3!, {r0, r1}
    }
 800234e:	4770      	bx	lr

08002350 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 8002350:	2000      	movs	r0, #0
 8002352:	4770      	bx	lr

08002354 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 8002354:	8081      	strh	r1, [r0, #4]
    }
 8002356:	4770      	bx	lr

08002358 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 8002358:	80c1      	strh	r1, [r0, #6]
    }
 800235a:	4770      	bx	lr

0800235c <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 800235c:	8101      	strh	r1, [r0, #8]
    }
 800235e:	4770      	bx	lr

08002360 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 8002360:	8141      	strh	r1, [r0, #10]
    }
 8002362:	4770      	bx	lr

08002364 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 8002364:	4770      	bx	lr

08002366 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 8002366:	4770      	bx	lr

08002368 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 8002368:	4770      	bx	lr

0800236a <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 800236a:	4770      	bx	lr

0800236c <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 800236c:	4770      	bx	lr

0800236e <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 800236e:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 8002370:	88c4      	ldrh	r4, [r0, #6]
 8002372:	6803      	ldr	r3, [r0, #0]
 8002374:	1b12      	subs	r2, r2, r4
 8002376:	8884      	ldrh	r4, [r0, #4]
 8002378:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800237a:	1b09      	subs	r1, r1, r4
 800237c:	b212      	sxth	r2, r2
    }
 800237e:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 8002382:	b209      	sxth	r1, r1
 8002384:	4718      	bx	r3

08002386 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 8002386:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800238a:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 800238c:	f04f 33ff 	mov.w	r3, #4294967295
 8002390:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 8002392:	6813      	ldr	r3, [r2, #0]
 8002394:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 8002396:	6010      	str	r0, [r2, #0]
    }
 8002398:	4770      	bx	lr

0800239a <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 800239a:	4770      	bx	lr

0800239c <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 800239c:	4770      	bx	lr

0800239e <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 800239e:	6041      	str	r1, [r0, #4]
    }
 80023a0:	4770      	bx	lr

080023a2 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 80023a2:	4770      	bx	lr

080023a4 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80023a4:	4b06      	ldr	r3, [pc, #24]	; (80023c0 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 80023a6:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 80023aa:	2300      	movs	r3, #0
 80023ac:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
// Screen1

void FrontendApplicationBase::gotoScreen1ScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoScreen1ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 80023b0:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 80023b4:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 80023b8:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c

    virtual void changeToStartScreen()
    {
        gotoScreen1ScreenNoTransition();
    }
 80023bc:	4770      	bx	lr
 80023be:	bf00      	nop
 80023c0:	080024d5 	.word	0x080024d5

080023c4 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 80023c4:	2301      	movs	r3, #1
 80023c6:	7203      	strb	r3, [r0, #8]
    }
 80023c8:	4770      	bx	lr

080023ca <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 80023ca:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 80023ce:	b11a      	cbz	r2, 80023d8 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 80023d0:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 80023d4:	b102      	cbz	r2, 80023d8 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 80023d6:	6018      	str	r0, [r3, #0]
        }
    }
 80023d8:	4770      	bx	lr

080023da <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRectD1Ev>:
{
public:
    /**
     * A Widget that reports solid and but does not draw anything.
     */
    class FullSolidRect : public Widget
 80023da:	4770      	bx	lr

080023dc <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED1Ev>:
class WipeTransition : public Transition
 80023dc:	4770      	bx	lr

080023de <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 80023de:	4770      	bx	lr

080023e0 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 80023e0:	4770      	bx	lr

080023e2 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE8tearDownEv>:
            // Copy rect from tft to client framebuffer
            HAL::getInstance()->lcd().blitCopy((const uint16_t*)tftFb, source, rect, 255, false);
        }
    }

    virtual void tearDown()
 80023e2:	4601      	mov	r1, r0
    {
        screenContainer->remove(solid);
 80023e4:	6840      	ldr	r0, [r0, #4]
 80023e6:	6803      	ldr	r3, [r0, #0]
 80023e8:	3110      	adds	r1, #16
 80023ea:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80023ec:	4718      	bx	r3

080023ee <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE4initEv>:
    }

    virtual void init()
 80023ee:	4601      	mov	r1, r0
    {
        Transition::init();
        // Add the solid (and not-drawing-anything) widget on top to cover the other widgets
        screenContainer->add(solid);
 80023f0:	6840      	ldr	r0, [r0, #4]
 80023f2:	6803      	ldr	r3, [r0, #0]
 80023f4:	3110      	adds	r1, #16
 80023f6:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80023f8:	4718      	bx	r3

080023fa <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE10invalidateEv>:
     * Wipe transition does not require an invalidation. Invalidation
     * is handled by the class. Do no invalidation initially.
     */
    virtual void invalidate()
    {
    }
 80023fa:	4770      	bx	lr

080023fc <_ZNK8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRect4drawERKNS_4RectE>:
        }
 80023fc:	4770      	bx	lr

080023fe <_ZNK8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRect12getSolidRectEv>:
        virtual Rect getSolidRect() const
 80023fe:	b510      	push	{r4, lr}
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8002400:	2200      	movs	r2, #0
            return Rect(0U, 0U, rect.width, rect.height);
 8002402:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 8002406:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 800240a:	8002      	strh	r2, [r0, #0]
 800240c:	8042      	strh	r2, [r0, #2]
 800240e:	8084      	strh	r4, [r0, #4]
 8002410:	80c1      	strh	r1, [r0, #6]
        }
 8002412:	bd10      	pop	{r4, pc}

08002414 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 8002414:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 8002416:	68c2      	ldr	r2, [r0, #12]
 8002418:	6841      	ldr	r1, [r0, #4]
 800241a:	1054      	asrs	r4, r2, #1
    virtual void execute()
 800241c:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
 800241e:	eb01 0062 	add.w	r0, r1, r2, asr #1
 8002422:	07d2      	lsls	r2, r2, #31
 8002424:	bf48      	it	mi
 8002426:	590a      	ldrmi	r2, [r1, r4]
 8002428:	689b      	ldr	r3, [r3, #8]
    }
 800242a:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 800242e:	bf48      	it	mi
 8002430:	58d3      	ldrmi	r3, [r2, r3]
 8002432:	4718      	bx	r3

08002434 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 8002434:	6843      	ldr	r3, [r0, #4]
 8002436:	b12b      	cbz	r3, 8002444 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 8002438:	6883      	ldr	r3, [r0, #8]
 800243a:	b92b      	cbnz	r3, 8002448 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 800243c:	68c0      	ldr	r0, [r0, #12]
 800243e:	f000 0001 	and.w	r0, r0, #1
 8002442:	4770      	bx	lr
 8002444:	4618      	mov	r0, r3
 8002446:	4770      	bx	lr
 8002448:	2001      	movs	r0, #1
    }
 800244a:	4770      	bx	lr

0800244c <_ZN8touchgfx12NoTransitionD0Ev>:
 800244c:	b510      	push	{r4, lr}
 800244e:	210c      	movs	r1, #12
 8002450:	4604      	mov	r4, r0
 8002452:	f01e f9a9 	bl	80207a8 <_ZdlPvj>
 8002456:	4620      	mov	r0, r4
 8002458:	bd10      	pop	{r4, pc}

0800245a <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 800245a:	b510      	push	{r4, lr}
 800245c:	2110      	movs	r1, #16
 800245e:	4604      	mov	r4, r0
 8002460:	f01e f9a2 	bl	80207a8 <_ZdlPvj>
 8002464:	4620      	mov	r0, r4
 8002466:	bd10      	pop	{r4, pc}

08002468 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 8002468:	b510      	push	{r4, lr}
 800246a:	f44f 71ac 	mov.w	r1, #344	; 0x158
 800246e:	4604      	mov	r4, r0
 8002470:	f01e f99a 	bl	80207a8 <_ZdlPvj>
 8002474:	4620      	mov	r0, r4
 8002476:	bd10      	pop	{r4, pc}

08002478 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED0Ev>:
class WipeTransition : public Transition
 8002478:	b510      	push	{r4, lr}
 800247a:	2138      	movs	r1, #56	; 0x38
 800247c:	4604      	mov	r4, r0
 800247e:	f01e f993 	bl	80207a8 <_ZdlPvj>
 8002482:	4620      	mov	r0, r4
 8002484:	bd10      	pop	{r4, pc}

08002486 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRectD0Ev>:
    class FullSolidRect : public Widget
 8002486:	b510      	push	{r4, lr}
 8002488:	2128      	movs	r1, #40	; 0x28
 800248a:	4604      	mov	r4, r0
 800248c:	f01e f98c 	bl	80207a8 <_ZdlPvj>
 8002490:	4620      	mov	r0, r4
 8002492:	bd10      	pop	{r4, pc}

08002494 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 8002494:	b508      	push	{r3, lr}
        Application::getInstance()->invalidate();
 8002496:	f00e fe6b 	bl	8011170 <_ZN8touchgfx11Application11getInstanceEv>
    }
 800249a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        Application::getInstance()->invalidate();
 800249e:	f00f ba0b 	b.w	80118b8 <_ZN8touchgfx11Application10invalidateEv>

080024a2 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 80024a2:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 80024a6:	b112      	cbz	r2, 80024ae <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 80024a8:	6803      	ldr	r3, [r0, #0]
 80024aa:	695b      	ldr	r3, [r3, #20]
 80024ac:	4718      	bx	r3
    }
 80024ae:	4770      	bx	lr

080024b0 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 80024b0:	b510      	push	{r4, lr}
 80024b2:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 80024b4:	f8d0 013c 	ldr.w	r0, [r0, #316]	; 0x13c
 80024b8:	b158      	cbz	r0, 80024d2 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 80024ba:	6803      	ldr	r3, [r0, #0]
 80024bc:	68db      	ldr	r3, [r3, #12]
 80024be:	4798      	blx	r3
 80024c0:	b138      	cbz	r0, 80024d2 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 80024c2:	f8d4 013c 	ldr.w	r0, [r4, #316]	; 0x13c
 80024c6:	6803      	ldr	r3, [r0, #0]
 80024c8:	689b      	ldr	r3, [r3, #8]
 80024ca:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 80024cc:	2300      	movs	r3, #0
 80024ce:	f8c4 313c 	str.w	r3, [r4, #316]	; 0x13c
    }
 80024d2:	bd10      	pop	{r4, pc}

080024d4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv>:
}

void FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl()
{
 80024d4:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Screen1View, Screen1Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80024d8:	e9d0 5a54 	ldrd	r5, sl, [r0, #336]	; 0x150
{
 80024dc:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80024de:	68a8      	ldr	r0, [r5, #8]
 80024e0:	6803      	ldr	r3, [r0, #0]
 80024e2:	6a1b      	ldr	r3, [r3, #32]
 80024e4:	4798      	blx	r3
 80024e6:	f5b0 6fc2 	cmp.w	r0, #1552	; 0x610
 80024ea:	d205      	bcs.n	80024f8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x24>
 80024ec:	4b45      	ldr	r3, [pc, #276]	; (8002604 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x130>)
 80024ee:	4a46      	ldr	r2, [pc, #280]	; (8002608 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
 80024f0:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80024f2:	4846      	ldr	r0, [pc, #280]	; (800260c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x138>)
 80024f4:	f01e fa0c 	bl	8020910 <__assert_func>
 80024f8:	6868      	ldr	r0, [r5, #4]
 80024fa:	6803      	ldr	r3, [r0, #0]
 80024fc:	6a1b      	ldr	r3, [r3, #32]
 80024fe:	4798      	blx	r3
 8002500:	280f      	cmp	r0, #15
 8002502:	d803      	bhi.n	800250c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x38>
 8002504:	4b42      	ldr	r3, [pc, #264]	; (8002610 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x13c>)
 8002506:	4a40      	ldr	r2, [pc, #256]	; (8002608 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
 8002508:	21a4      	movs	r1, #164	; 0xa4
 800250a:	e7f2      	b.n	80024f2 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800250c:	68e8      	ldr	r0, [r5, #12]
 800250e:	6803      	ldr	r3, [r0, #0]
 8002510:	6a1b      	ldr	r3, [r3, #32]
 8002512:	4798      	blx	r3
 8002514:	280b      	cmp	r0, #11
 8002516:	d803      	bhi.n	8002520 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x4c>
 8002518:	4b3e      	ldr	r3, [pc, #248]	; (8002614 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x140>)
 800251a:	4a3b      	ldr	r2, [pc, #236]	; (8002608 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
 800251c:	21a5      	movs	r1, #165	; 0xa5
 800251e:	e7e8      	b.n	80024f2 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x1e>
    if (*currentTrans)
 8002520:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 800261c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x148>
    Application::getInstance()->clearAllTimerWidgets();
 8002524:	f00e fe24 	bl	8011170 <_ZN8touchgfx11Application11getInstanceEv>
 8002528:	f00e fe28 	bl	801117c <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 800252c:	f8d9 0000 	ldr.w	r0, [r9]
 8002530:	b110      	cbz	r0, 8002538 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x64>
        (*currentTrans)->tearDown();
 8002532:	6803      	ldr	r3, [r0, #0]
 8002534:	68db      	ldr	r3, [r3, #12]
 8002536:	4798      	blx	r3
    if (*currentTrans)
 8002538:	f8d9 0000 	ldr.w	r0, [r9]
 800253c:	b110      	cbz	r0, 8002544 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x70>
        (*currentTrans)->~Transition();
 800253e:	6803      	ldr	r3, [r0, #0]
 8002540:	681b      	ldr	r3, [r3, #0]
 8002542:	4798      	blx	r3
    if (*currentScreen)
 8002544:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 8002620 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x14c>
 8002548:	f8d8 0000 	ldr.w	r0, [r8]
 800254c:	b110      	cbz	r0, 8002554 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 800254e:	6803      	ldr	r3, [r0, #0]
 8002550:	695b      	ldr	r3, [r3, #20]
 8002552:	4798      	blx	r3
    if (*currentPresenter)
 8002554:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8002558:	b110      	cbz	r0, 8002560 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x8c>
        (*currentPresenter)->deactivate();
 800255a:	6803      	ldr	r3, [r0, #0]
 800255c:	685b      	ldr	r3, [r3, #4]
 800255e:	4798      	blx	r3
    if (*currentScreen)
 8002560:	f8d8 0000 	ldr.w	r0, [r8]
 8002564:	b110      	cbz	r0, 800256c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x98>
        (*currentScreen)->~Screen();
 8002566:	6803      	ldr	r3, [r0, #0]
 8002568:	681b      	ldr	r3, [r3, #0]
 800256a:	4798      	blx	r3
    if (*currentPresenter)
 800256c:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8002570:	b110      	cbz	r0, 8002578 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 8002572:	6803      	ldr	r3, [r0, #0]
 8002574:	689b      	ldr	r3, [r3, #8]
 8002576:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002578:	68e8      	ldr	r0, [r5, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 800257a:	6803      	ldr	r3, [r0, #0]
 800257c:	2100      	movs	r1, #0
 800257e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002580:	4798      	blx	r3
        : screenContainer(0), done(false)
 8002582:	f04f 0b00 	mov.w	fp, #0
 8002586:	4b24      	ldr	r3, [pc, #144]	; (8002618 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x144>)
 8002588:	6003      	str	r3, [r0, #0]
 800258a:	4604      	mov	r4, r0
 800258c:	f8c0 b004 	str.w	fp, [r0, #4]
 8002590:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8002594:	68a8      	ldr	r0, [r5, #8]
 8002596:	6803      	ldr	r3, [r0, #0]
 8002598:	4659      	mov	r1, fp
 800259a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800259c:	4798      	blx	r3
 800259e:	4606      	mov	r6, r0
 80025a0:	f002 fdce 	bl	8005140 <_ZN11Screen1ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80025a4:	6868      	ldr	r0, [r5, #4]
 80025a6:	6803      	ldr	r3, [r0, #0]
 80025a8:	4659      	mov	r1, fp
 80025aa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80025ac:	4798      	blx	r3
 80025ae:	4631      	mov	r1, r6
 80025b0:	4605      	mov	r5, r0
 80025b2:	f002 fd19 	bl	8004fe8 <_ZN16Screen1PresenterC1ER11Screen1View>
    *currentTrans = newTransition;
 80025b6:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 80025ba:	f8c7 5138 	str.w	r5, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 80025be:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80025c2:	b1e5      	cbz	r5, 80025fe <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x12a>
 80025c4:	1d2b      	adds	r3, r5, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 80025c6:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80025ca:	6833      	ldr	r3, [r6, #0]
    virtual void DisplayCurrentValue() {};
    virtual void DisplayChargingFinished() {};

    void bind(Model* m)
    {
        model = m;
 80025cc:	f8c5 a008 	str.w	sl, [r5, #8]
 80025d0:	4630      	mov	r0, r6
 80025d2:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 80025d4:	63f5      	str	r5, [r6, #60]	; 0x3c
 80025d6:	4798      	blx	r3
    newPresenter->activate();
 80025d8:	682b      	ldr	r3, [r5, #0]
 80025da:	4628      	mov	r0, r5
 80025dc:	681b      	ldr	r3, [r3, #0]
 80025de:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80025e0:	4621      	mov	r1, r4
 80025e2:	4630      	mov	r0, r6
 80025e4:	f010 fa72 	bl	8012acc <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80025e8:	6823      	ldr	r3, [r4, #0]
 80025ea:	4620      	mov	r0, r4
 80025ec:	691b      	ldr	r3, [r3, #16]
 80025ee:	4798      	blx	r3
    newTransition->invalidate();
 80025f0:	6823      	ldr	r3, [r4, #0]
 80025f2:	695b      	ldr	r3, [r3, #20]
 80025f4:	4620      	mov	r0, r4
}
 80025f6:	b001      	add	sp, #4
 80025f8:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80025fc:	4718      	bx	r3
    model->bind(newPresenter);
 80025fe:	462b      	mov	r3, r5
 8002600:	e7e1      	b.n	80025c6 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0xf2>
 8002602:	bf00      	nop
 8002604:	080222e4 	.word	0x080222e4
 8002608:	08022372 	.word	0x08022372
 800260c:	08022476 	.word	0x08022476
 8002610:	080224bd 	.word	0x080224bd
 8002614:	08022560 	.word	0x08022560
 8002618:	08022790 	.word	0x08022790
 800261c:	2001564c 	.word	0x2001564c
 8002620:	20015648 	.word	0x20015648

08002624 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv>:
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoScreenGraphScreenWipeTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoScreenGraphScreenWipeTransitionEastImpl()
{
 8002624:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<ScreenGraphView, ScreenGraphPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8002628:	e9d0 ba54 	ldrd	fp, sl, [r0, #336]	; 0x150
{
 800262c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800262e:	f8db 0008 	ldr.w	r0, [fp, #8]
 8002632:	6803      	ldr	r3, [r0, #0]
 8002634:	6a1b      	ldr	r3, [r3, #32]
 8002636:	4798      	blx	r3
 8002638:	f242 733b 	movw	r3, #10043	; 0x273b
 800263c:	4298      	cmp	r0, r3
 800263e:	d805      	bhi.n	800264c <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x28>
 8002640:	4b56      	ldr	r3, [pc, #344]	; (800279c <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x178>)
 8002642:	4a57      	ldr	r2, [pc, #348]	; (80027a0 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x17c>)
 8002644:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002646:	4857      	ldr	r0, [pc, #348]	; (80027a4 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x180>)
 8002648:	f01e f962 	bl	8020910 <__assert_func>
 800264c:	f8db 0004 	ldr.w	r0, [fp, #4]
 8002650:	6803      	ldr	r3, [r0, #0]
 8002652:	6a1b      	ldr	r3, [r3, #32]
 8002654:	4798      	blx	r3
 8002656:	280f      	cmp	r0, #15
 8002658:	d803      	bhi.n	8002662 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x3e>
 800265a:	4b53      	ldr	r3, [pc, #332]	; (80027a8 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x184>)
 800265c:	4a50      	ldr	r2, [pc, #320]	; (80027a0 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x17c>)
 800265e:	21a4      	movs	r1, #164	; 0xa4
 8002660:	e7f1      	b.n	8002646 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x22>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8002662:	f8db 000c 	ldr.w	r0, [fp, #12]
 8002666:	6803      	ldr	r3, [r0, #0]
 8002668:	6a1b      	ldr	r3, [r3, #32]
 800266a:	4798      	blx	r3
 800266c:	2837      	cmp	r0, #55	; 0x37
 800266e:	d803      	bhi.n	8002678 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x54>
 8002670:	4b4e      	ldr	r3, [pc, #312]	; (80027ac <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x188>)
 8002672:	4a4b      	ldr	r2, [pc, #300]	; (80027a0 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x17c>)
 8002674:	21a5      	movs	r1, #165	; 0xa5
 8002676:	e7e6      	b.n	8002646 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x22>
    if (*currentTrans)
 8002678:	f8df 9144 	ldr.w	r9, [pc, #324]	; 80027c0 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x19c>
    Application::getInstance()->clearAllTimerWidgets();
 800267c:	f00e fd78 	bl	8011170 <_ZN8touchgfx11Application11getInstanceEv>
 8002680:	f00e fd7c 	bl	801117c <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8002684:	f8d9 0000 	ldr.w	r0, [r9]
 8002688:	b110      	cbz	r0, 8002690 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x6c>
        (*currentTrans)->tearDown();
 800268a:	6803      	ldr	r3, [r0, #0]
 800268c:	68db      	ldr	r3, [r3, #12]
 800268e:	4798      	blx	r3
    if (*currentTrans)
 8002690:	f8d9 0000 	ldr.w	r0, [r9]
 8002694:	b110      	cbz	r0, 800269c <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x78>
        (*currentTrans)->~Transition();
 8002696:	6803      	ldr	r3, [r0, #0]
 8002698:	681b      	ldr	r3, [r3, #0]
 800269a:	4798      	blx	r3
    if (*currentScreen)
 800269c:	f8df 8124 	ldr.w	r8, [pc, #292]	; 80027c4 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x1a0>
 80026a0:	f8d8 0000 	ldr.w	r0, [r8]
 80026a4:	b110      	cbz	r0, 80026ac <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x88>
        (*currentScreen)->tearDownScreen();
 80026a6:	6803      	ldr	r3, [r0, #0]
 80026a8:	695b      	ldr	r3, [r3, #20]
 80026aa:	4798      	blx	r3
    if (*currentPresenter)
 80026ac:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 80026b0:	b110      	cbz	r0, 80026b8 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x94>
        (*currentPresenter)->deactivate();
 80026b2:	6803      	ldr	r3, [r0, #0]
 80026b4:	685b      	ldr	r3, [r3, #4]
 80026b6:	4798      	blx	r3
    if (*currentScreen)
 80026b8:	f8d8 0000 	ldr.w	r0, [r8]
 80026bc:	b110      	cbz	r0, 80026c4 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0xa0>
        (*currentScreen)->~Screen();
 80026be:	6803      	ldr	r3, [r0, #0]
 80026c0:	681b      	ldr	r3, [r3, #0]
 80026c2:	4798      	blx	r3
    if (*currentPresenter)
 80026c4:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 80026c8:	b110      	cbz	r0, 80026d0 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0xac>
        (*currentPresenter)->~Presenter();
 80026ca:	6803      	ldr	r3, [r0, #0]
 80026cc:	689b      	ldr	r3, [r3, #8]
 80026ce:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80026d0:	f8db 000c 	ldr.w	r0, [fp, #12]
 80026d4:	6803      	ldr	r3, [r0, #0]
 80026d6:	2100      	movs	r1, #0
 80026d8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80026da:	4798      	blx	r3
          solid()
 80026dc:	4b34      	ldr	r3, [pc, #208]	; (80027b0 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x18c>)
 80026de:	6003      	str	r3, [r0, #0]
 80026e0:	4604      	mov	r4, r0
 80026e2:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
 80026e6:	8103      	strh	r3, [r0, #8]
 80026e8:	2500      	movs	r5, #0
 80026ea:	f44f 7380 	mov.w	r3, #256	; 0x100
 80026ee:	6045      	str	r5, [r0, #4]
 80026f0:	7285      	strb	r5, [r0, #10]
 80026f2:	6363      	str	r3, [r4, #52]	; 0x34
    class FullSolidRect : public Widget
 80026f4:	4b2f      	ldr	r3, [pc, #188]	; (80027b4 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x190>)
 80026f6:	6123      	str	r3, [r4, #16]
            targetValue = HAL::DISPLAY_WIDTH;
 80026f8:	4b2f      	ldr	r3, [pc, #188]	; (80027b8 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x194>)
          solid()
 80026fa:	81e5      	strh	r5, [r4, #14]
            targetValue = HAL::DISPLAY_WIDTH;
 80026fc:	f9b3 1000 	ldrsh.w	r1, [r3]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8002700:	4b2e      	ldr	r3, [pc, #184]	; (80027bc <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x198>)
            targetValue = HAL::DISPLAY_WIDTH;
 8002702:	81a1      	strh	r1, [r4, #12]
          solid()
 8002704:	3010      	adds	r0, #16
 8002706:	e9c4 5505 	strd	r5, r5, [r4, #20]
 800270a:	e9c4 5507 	strd	r5, r5, [r4, #28]
 800270e:	e9c4 5509 	strd	r5, r5, [r4, #36]	; 0x24
 8002712:	e9c4 550b 	strd	r5, r5, [r4, #44]	; 0x2c
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8002716:	f9b3 6000 	ldrsh.w	r6, [r3]
        setWidth(width);
 800271a:	9001      	str	r0, [sp, #4]
 800271c:	f7ff fe1e 	bl	800235c <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 8002720:	6923      	ldr	r3, [r4, #16]
 8002722:	9801      	ldr	r0, [sp, #4]
 8002724:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8002726:	4631      	mov	r1, r6
 8002728:	4798      	blx	r3
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800272a:	f8db 0008 	ldr.w	r0, [fp, #8]
 800272e:	6803      	ldr	r3, [r0, #0]
 8002730:	4629      	mov	r1, r5
 8002732:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002734:	4798      	blx	r3
 8002736:	4606      	mov	r6, r0
 8002738:	f003 f876 	bl	8005828 <_ZN15ScreenGraphViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800273c:	f8db 0004 	ldr.w	r0, [fp, #4]
 8002740:	6803      	ldr	r3, [r0, #0]
 8002742:	4629      	mov	r1, r5
 8002744:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002746:	4798      	blx	r3
 8002748:	4631      	mov	r1, r6
 800274a:	4605      	mov	r5, r0
 800274c:	f002 fd52 	bl	80051f4 <_ZN20ScreenGraphPresenterC1ER15ScreenGraphView>
    *currentTrans = newTransition;
 8002750:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 8002754:	f8c7 5138 	str.w	r5, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 8002758:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800275c:	b1e5      	cbz	r5, 8002798 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x174>
 800275e:	1d2b      	adds	r3, r5, #4
 8002760:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8002764:	6833      	ldr	r3, [r6, #0]
 8002766:	f8c5 a008 	str.w	sl, [r5, #8]
 800276a:	4630      	mov	r0, r6
 800276c:	68db      	ldr	r3, [r3, #12]
 800276e:	63f5      	str	r5, [r6, #60]	; 0x3c
 8002770:	4798      	blx	r3
    newPresenter->activate();
 8002772:	682b      	ldr	r3, [r5, #0]
 8002774:	4628      	mov	r0, r5
 8002776:	681b      	ldr	r3, [r3, #0]
 8002778:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800277a:	4621      	mov	r1, r4
 800277c:	4630      	mov	r0, r6
 800277e:	f010 f9a5 	bl	8012acc <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8002782:	6823      	ldr	r3, [r4, #0]
 8002784:	4620      	mov	r0, r4
 8002786:	691b      	ldr	r3, [r3, #16]
 8002788:	4798      	blx	r3
    newTransition->invalidate();
 800278a:	6823      	ldr	r3, [r4, #0]
 800278c:	695b      	ldr	r3, [r3, #20]
 800278e:	4620      	mov	r0, r4
}
 8002790:	b003      	add	sp, #12
 8002792:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002796:	4718      	bx	r3
    model->bind(newPresenter);
 8002798:	462b      	mov	r3, r5
 800279a:	e7e1      	b.n	8002760 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x13c>
 800279c:	080222e4 	.word	0x080222e4
 80027a0:	08022603 	.word	0x08022603
 80027a4:	08022476 	.word	0x08022476
 80027a8:	080224bd 	.word	0x080224bd
 80027ac:	08022560 	.word	0x08022560
 80027b0:	0802281c 	.word	0x0802281c
 80027b4:	080227b4 	.word	0x080227b4
 80027b8:	200155f8 	.word	0x200155f8
 80027bc:	200155fa 	.word	0x200155fa
 80027c0:	2001564c 	.word	0x2001564c
 80027c4:	20015648 	.word	0x20015648

080027c8 <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 80027c8:	4b04      	ldr	r3, [pc, #16]	; (80027dc <_ZN8touchgfx3HAL3lcdEv+0x14>)
 80027ca:	681b      	ldr	r3, [r3, #0]
 80027cc:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 80027d0:	b10a      	cbz	r2, 80027d6 <_ZN8touchgfx3HAL3lcdEv+0xe>
 80027d2:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80027d4:	b900      	cbnz	r0, 80027d8 <_ZN8touchgfx3HAL3lcdEv+0x10>
        return instance->lcdRef;
 80027d6:	6898      	ldr	r0, [r3, #8]
    }
 80027d8:	4770      	bx	lr
 80027da:	bf00      	nop
 80027dc:	20015604 	.word	0x20015604

080027e0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
 80027e0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80027e2:	4604      	mov	r4, r0
        animationCounter++;
 80027e4:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter <= (animationSteps))
 80027e6:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 80027e8:	3001      	adds	r0, #1
 80027ea:	b2c0      	uxtb	r0, r0
        if (animationCounter <= (animationSteps))
 80027ec:	4298      	cmp	r0, r3
    virtual void handleTickEvent()
 80027ee:	b089      	sub	sp, #36	; 0x24
        animationCounter++;
 80027f0:	72a0      	strb	r0, [r4, #10]
        if (animationCounter <= (animationSteps))
 80027f2:	d850      	bhi.n	8002896 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xb6>
            calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 80027f4:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80027f8:	2100      	movs	r1, #0
 80027fa:	f010 f96d 	bl	8012ad8 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
            if (calculatedValue % 2)
 80027fe:	f010 0201 	ands.w	r2, r0, #1
 8002802:	b283      	uxth	r3, r0
 8002804:	d04d      	beq.n	80028a2 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xc2>
                calculatedValue += (calculatedValue > 0 ? 1 : -1);
 8002806:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800280a:	2800      	cmp	r0, #0
 800280c:	bfd8      	it	le
 800280e:	460a      	movle	r2, r1
 8002810:	4413      	add	r3, r2
 8002812:	81e3      	strh	r3, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8002814:	4e24      	ldr	r6, [pc, #144]	; (80028a8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xc8>)
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 8002816:	4f25      	ldr	r7, [pc, #148]	; (80028ac <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xcc>)
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8002818:	8831      	ldrh	r1, [r6, #0]
                const uint16_t prevSolidWidth = solid.getWidth();
 800281a:	f8b4 c018 	ldrh.w	ip, [r4, #24]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 800281e:	89e3      	ldrh	r3, [r4, #14]
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 8002820:	f9b7 0000 	ldrsh.w	r0, [r7]
 8002824:	f8ad 001e 	strh.w	r0, [sp, #30]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8002828:	1aca      	subs	r2, r1, r3
                screenContainer->invalidateRect(r);
 800282a:	6860      	ldr	r0, [r4, #4]
                const uint16_t delta = prevSolidWidth - solid.getWidth();
 800282c:	4463      	add	r3, ip
 800282e:	1a5b      	subs	r3, r3, r1
 8002830:	f8ad 301c 	strh.w	r3, [sp, #28]
                screenContainer->invalidateRect(r);
 8002834:	6803      	ldr	r3, [r0, #0]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8002836:	b212      	sxth	r2, r2
 8002838:	2500      	movs	r5, #0
                screenContainer->invalidateRect(r);
 800283a:	691b      	ldr	r3, [r3, #16]
        rect.width = width;
 800283c:	8322      	strh	r2, [r4, #24]
 800283e:	f8ad 2018 	strh.w	r2, [sp, #24]
 8002842:	f8ad 501a 	strh.w	r5, [sp, #26]
 8002846:	a906      	add	r1, sp, #24
 8002848:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 800284a:	7aa3      	ldrb	r3, [r4, #10]
 800284c:	2b01      	cmp	r3, #1
 800284e:	d126      	bne.n	800289e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xbe>
 8002850:	4b17      	ldr	r3, [pc, #92]	; (80028b0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xd0>)
 8002852:	781b      	ldrb	r3, [r3, #0]
 8002854:	b31b      	cbz	r3, 800289e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xbe>
            Rect rect = solid.getRect(); // Part to copy between buffers
 8002856:	69a1      	ldr	r1, [r4, #24]
 8002858:	6960      	ldr	r0, [r4, #20]
 800285a:	ab04      	add	r3, sp, #16
 800285c:	c303      	stmia	r3!, {r0, r1}
        return instance;
 800285e:	4b15      	ldr	r3, [pc, #84]	; (80028b4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xd4>)
 8002860:	6818      	ldr	r0, [r3, #0]
            uint16_t* tftFb = HAL::getInstance()->getTFTFrameBuffer();
 8002862:	6803      	ldr	r3, [r0, #0]
 8002864:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002866:	4798      	blx	r3
            source.width = HAL::DISPLAY_WIDTH;
 8002868:	8833      	ldrh	r3, [r6, #0]
 800286a:	f8ad 301c 	strh.w	r3, [sp, #28]
            source.height = HAL::DISPLAY_HEIGHT;
 800286e:	883b      	ldrh	r3, [r7, #0]
 8002870:	f8ad 301e 	strh.w	r3, [sp, #30]
            uint16_t* tftFb = HAL::getInstance()->getTFTFrameBuffer();
 8002874:	9003      	str	r0, [sp, #12]
        : x(0), y(0), width(0), height(0)
 8002876:	f8ad 5018 	strh.w	r5, [sp, #24]
 800287a:	f8ad 501a 	strh.w	r5, [sp, #26]
            HAL::getInstance()->lcd().blitCopy((const uint16_t*)tftFb, source, rect, 255, false);
 800287e:	f7ff ffa3 	bl	80027c8 <_ZN8touchgfx3HAL3lcdEv>
 8002882:	22ff      	movs	r2, #255	; 0xff
 8002884:	6803      	ldr	r3, [r0, #0]
 8002886:	9200      	str	r2, [sp, #0]
 8002888:	9501      	str	r5, [sp, #4]
 800288a:	68dc      	ldr	r4, [r3, #12]
 800288c:	9903      	ldr	r1, [sp, #12]
 800288e:	ab04      	add	r3, sp, #16
 8002890:	aa06      	add	r2, sp, #24
 8002892:	47a0      	blx	r4
 8002894:	e003      	b.n	800289e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xbe>
            done = true;
 8002896:	2301      	movs	r3, #1
 8002898:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 800289a:	2300      	movs	r3, #0
 800289c:	72a3      	strb	r3, [r4, #10]
    }
 800289e:	b009      	add	sp, #36	; 0x24
 80028a0:	bdf0      	pop	{r4, r5, r6, r7, pc}
            calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 80028a2:	81e0      	strh	r0, [r4, #14]
 80028a4:	e7b6      	b.n	8002814 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x34>
 80028a6:	bf00      	nop
 80028a8:	200155f8 	.word	0x200155f8
 80028ac:	200155fa 	.word	0x200155fa
 80028b0:	20015602 	.word	0x20015602
 80028b4:	20015604 	.word	0x20015604

080028b8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 80028b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80028ba:	4604      	mov	r4, r0
 80028bc:	4617      	mov	r7, r2
 80028be:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 80028c0:	f00e fc76 	bl	80111b0 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 80028c4:	4b0e      	ldr	r3, [pc, #56]	; (8002900 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x48>)
 80028c6:	601c      	str	r4, [r3, #0]
      model(m)
 80028c8:	4b0e      	ldr	r3, [pc, #56]	; (8002904 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x4c>)
 80028ca:	6023      	str	r3, [r4, #0]
        : pobject(0), pmemfun(0)
 80028cc:	4b0e      	ldr	r3, [pc, #56]	; (8002908 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
          pendingScreenTransitionCallback(0)
 80028ce:	2500      	movs	r5, #0
 80028d0:	e9c4 3550 	strd	r3, r5, [r4, #320]	; 0x140
 80028d4:	4b0d      	ldr	r3, [pc, #52]	; (800290c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
 80028d6:	e9c4 5552 	strd	r5, r5, [r4, #328]	; 0x148
 80028da:	6818      	ldr	r0, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 80028dc:	6803      	ldr	r3, [r0, #0]
 80028de:	4629      	mov	r1, r5
 80028e0:	689b      	ldr	r3, [r3, #8]
 80028e2:	e9c4 554e 	strd	r5, r5, [r4, #312]	; 0x138
      model(m)
 80028e6:	e9c4 7654 	strd	r7, r6, [r4, #336]	; 0x150
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 80028ea:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 80028ec:	4628      	mov	r0, r5
 80028ee:	f002 fa97 	bl	8004e20 <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 80028f2:	f7ff ff69 	bl	80027c8 <_ZN8touchgfx3HAL3lcdEv>
 80028f6:	f016 fd48 	bl	801938a <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
}
 80028fa:	4620      	mov	r0, r4
 80028fc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80028fe:	bf00      	nop
 8002900:	20015658 	.word	0x20015658
 8002904:	08022744 	.word	0x08022744
 8002908:	0802272c 	.word	0x0802272c
 800290c:	20015604 	.word	0x20015604

08002910 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002910:	4b06      	ldr	r3, [pc, #24]	; (800292c <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv+0x1c>)
 8002912:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8002916:	2300      	movs	r3, #0
 8002918:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
    pendingScreenTransitionCallback = &transitionCallback;
 800291c:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8002920:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8002924:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8002928:	4770      	bx	lr
 800292a:	bf00      	nop
 800292c:	080024d5 	.word	0x080024d5

08002930 <_ZN23FrontendApplicationBase39gotoScreenGraphScreenWipeTransitionEastEv>:
 8002930:	4b06      	ldr	r3, [pc, #24]	; (800294c <_ZN23FrontendApplicationBase39gotoScreenGraphScreenWipeTransitionEastEv+0x1c>)
 8002932:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8002936:	2300      	movs	r3, #0
 8002938:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
    pendingScreenTransitionCallback = &transitionCallback;
 800293c:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8002940:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8002944:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8002948:	4770      	bx	lr
 800294a:	bf00      	nop
 800294c:	08002625 	.word	0x08002625

08002950 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 8002950:	6a00      	ldr	r0, [r0, #32]
 8002952:	4770      	bx	lr

08002954 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 8002954:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8002956:	4770      	bx	lr

08002958 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 8002958:	4770      	bx	lr

0800295a <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 800295a:	888b      	ldrh	r3, [r1, #4]
 800295c:	6980      	ldr	r0, [r0, #24]
 800295e:	680a      	ldr	r2, [r1, #0]
 8002960:	0adb      	lsrs	r3, r3, #11
 8002962:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 8002966:	4410      	add	r0, r2
 8002968:	4770      	bx	lr

0800296a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 800296a:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 800296c:	b1c2      	cbz	r2, 80029a0 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 800296e:	7b13      	ldrb	r3, [r2, #12]
 8002970:	b1b3      	cbz	r3, 80029a0 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 8002972:	7b54      	ldrb	r4, [r2, #13]
 8002974:	7ad2      	ldrb	r2, [r2, #11]
 8002976:	0224      	lsls	r4, r4, #8
 8002978:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 800297c:	4314      	orrs	r4, r2
 800297e:	69c2      	ldr	r2, [r0, #28]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8002980:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8002982:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 8002986:	8813      	ldrh	r3, [r2, #0]
 8002988:	428b      	cmp	r3, r1
 800298a:	d102      	bne.n	8002992 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 800298c:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 8002990:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 8002992:	d805      	bhi.n	80029a0 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8002994:	3801      	subs	r0, #1
 8002996:	b280      	uxth	r0, r0
 8002998:	3204      	adds	r2, #4
 800299a:	2800      	cmp	r0, #0
 800299c:	d1f3      	bne.n	8002986 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 800299e:	e7f7      	b.n	8002990 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 80029a0:	2000      	movs	r0, #0
 80029a2:	e7f5      	b.n	8002990 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

080029a4 <_ZN8touchgfx13GeneratedFontD0Ev>:
 80029a4:	b510      	push	{r4, lr}
 80029a6:	2128      	movs	r1, #40	; 0x28
 80029a8:	4604      	mov	r4, r0
 80029aa:	f01d fefd 	bl	80207a8 <_ZdlPvj>
 80029ae:	4620      	mov	r0, r4
 80029b0:	bd10      	pop	{r4, pc}
	...

080029b4 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* list, uint16_t size, uint16_t height, uint8_t pixBelowBase, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 80029b4:	b530      	push	{r4, r5, lr}
 80029b6:	b089      	sub	sp, #36	; 0x24
 80029b8:	4604      	mov	r4, r0
      arabicTable(formsTable)
 80029ba:	f8bd 5050 	ldrh.w	r5, [sp, #80]	; 0x50
 80029be:	9506      	str	r5, [sp, #24]
 80029c0:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 80029c4:	9505      	str	r5, [sp, #20]
 80029c6:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 80029ca:	9504      	str	r5, [sp, #16]
 80029cc:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 80029d0:	9503      	str	r5, [sp, #12]
 80029d2:	f89d 5038 	ldrb.w	r5, [sp, #56]	; 0x38
 80029d6:	9502      	str	r5, [sp, #8]
 80029d8:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 80029dc:	9501      	str	r5, [sp, #4]
 80029de:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 80029e2:	9500      	str	r5, [sp, #0]
 80029e4:	f00f fc08 	bl	80121f8 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>
 80029e8:	4b06      	ldr	r3, [pc, #24]	; (8002a04 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x50>)
 80029ea:	6023      	str	r3, [r4, #0]
 80029ec:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80029ee:	61a3      	str	r3, [r4, #24]
 80029f0:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80029f2:	61e3      	str	r3, [r4, #28]
 80029f4:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80029f6:	6223      	str	r3, [r4, #32]
 80029f8:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80029fa:	6263      	str	r3, [r4, #36]	; 0x24
}
 80029fc:	4620      	mov	r0, r4
 80029fe:	b009      	add	sp, #36	; 0x24
 8002a00:	bd30      	pop	{r4, r5, pc}
 8002a02:	bf00      	nop
 8002a04:	08022840 	.word	0x08022840

08002a08 <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
 8002a08:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8002a0a:	4770      	bx	lr

08002a0c <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 8002a0c:	4770      	bx	lr

08002a0e <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 8002a0e:	4770      	bx	lr

08002a10 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 8002a10:	4770      	bx	lr

08002a12 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 8002a12:	4770      	bx	lr

08002a14 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 8002a14:	4770      	bx	lr

08002a16 <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
 8002a16:	b530      	push	{r4, r5, lr}
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
 8002a18:	6803      	ldr	r3, [r0, #0]
 8002a1a:	8101      	strh	r1, [r0, #8]
    virtual void setWidth(int16_t width)
 8002a1c:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 8002a1e:	466d      	mov	r5, sp
 8002a20:	4601      	mov	r1, r0
 8002a22:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setWidth(int16_t width)
 8002a26:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 8002a28:	4628      	mov	r0, r5
 8002a2a:	4798      	blx	r3
 8002a2c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002a30:	343c      	adds	r4, #60	; 0x3c
 8002a32:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 8002a36:	b005      	add	sp, #20
 8002a38:	bd30      	pop	{r4, r5, pc}

08002a3a <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
 8002a3a:	b530      	push	{r4, r5, lr}
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
 8002a3c:	6803      	ldr	r3, [r0, #0]
        rect.height = height;
 8002a3e:	8141      	strh	r1, [r0, #10]
    virtual void setHeight(int16_t height)
 8002a40:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 8002a42:	466d      	mov	r5, sp
 8002a44:	4601      	mov	r1, r0
 8002a46:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setHeight(int16_t height)
 8002a4a:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 8002a4c:	4628      	mov	r0, r5
 8002a4e:	4798      	blx	r3
 8002a50:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002a54:	343c      	adds	r4, #60	; 0x3c
 8002a56:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 8002a5a:	b005      	add	sp, #20
 8002a5c:	bd30      	pop	{r4, r5, pc}

08002a5e <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 8002a5e:	2200      	movs	r2, #0
 8002a60:	8002      	strh	r2, [r0, #0]
 8002a62:	8042      	strh	r2, [r0, #2]
 8002a64:	8082      	strh	r2, [r0, #4]
 8002a66:	80c2      	strh	r2, [r0, #6]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8002a68:	4770      	bx	lr

08002a6a <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8002a6a:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
    }
 8002a6e:	4770      	bx	lr

08002a70 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
     * @param  x         The x coordinate of the TextArea.
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002a70:	b570      	push	{r4, r5, r6, lr}
    {
        setX(x);
 8002a72:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002a74:	4604      	mov	r4, r0
        setX(x);
 8002a76:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002a78:	4615      	mov	r5, r2
        setX(x);
 8002a7a:	4798      	blx	r3
        setBaselineY(baselineY);
 8002a7c:	6823      	ldr	r3, [r4, #0]
 8002a7e:	4629      	mov	r1, r5
 8002a80:	4620      	mov	r0, r4
 8002a82:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    }
 8002a84:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
 8002a88:	4718      	bx	r3

08002a8a <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
 8002a8a:	2000      	movs	r0, #0
 8002a8c:	4770      	bx	lr

08002a8e <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
 8002a8e:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8002a90:	4770      	bx	lr

08002a92 <_ZN15Screen1ViewBaseD1Ev>:

class Screen1ViewBase : public touchgfx::View<Screen1Presenter>
{
public:
    Screen1ViewBase();
    virtual ~Screen1ViewBase() {}
 8002a92:	4770      	bx	lr

08002a94 <_ZN15Screen1ViewBase17ButtonDownClickedEv>:
     * Virtual Action Handlers
     */
    virtual void ButtonDownClicked()
    {
        // Override and implement this function in Screen1
    }
 8002a94:	4770      	bx	lr

08002a96 <_ZN15Screen1ViewBase15ButtonUpClickedEv>:

    virtual void ButtonUpClicked()
    {
        // Override and implement this function in Screen1
    }
 8002a96:	4770      	bx	lr

08002a98 <_ZN15Screen1ViewBase18ButtonStartClickedEv>:

    virtual void ButtonStartClicked()
    {
        // Override and implement this function in Screen1
    }
 8002a98:	4770      	bx	lr

08002a9a <_ZN15Screen1ViewBase19ButtonUpTimeClickedEv>:

    virtual void ButtonUpTimeClicked()
    {
        // Override and implement this function in Screen1
    }
 8002a9a:	4770      	bx	lr

08002a9c <_ZN15Screen1ViewBase21ButtonDownTimeClickedEv>:

    virtual void ButtonDownTimeClicked()
    {
        // Override and implement this function in Screen1
    }
 8002a9c:	4770      	bx	lr

08002a9e <_ZN15Screen1ViewBase11setupScreenEv>:
}

void Screen1ViewBase::setupScreen()
{

}
 8002a9e:	4770      	bx	lr

08002aa0 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>:
 * @tparam T Generic type parameter. Typically a AbstractButtonContainer subclass.
 *
 * @see AbstractButtonContainer, BoxWithBorder
 */
template <class T>
class BoxWithBorderButtonStyle : public T
 8002aa0:	4770      	bx	lr

08002aa2 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>:
     *
     * @see setPressed
     */
    bool getPressed()
    {
        return pressed;
 8002aa2:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
    colortype borderDown;    ///< The border down

    /** @copydoc AbstractButtonContainer::handlePressedUpdated() */
    virtual void handlePressedUpdated()
    {
        borderBox.setColor(T::getPressed() ? down : up);
 8002aa6:	b14b      	cbz	r3, 8002abc <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x1a>
 8002aa8:	f100 026c 	add.w	r2, r0, #108	; 0x6c
 8002aac:	6812      	ldr	r2, [r2, #0]
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 8002aae:	65c2      	str	r2, [r0, #92]	; 0x5c
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
 8002ab0:	b13b      	cbz	r3, 8002ac2 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x20>
 8002ab2:	f100 0374 	add.w	r3, r0, #116	; 0x74
 8002ab6:	681b      	ldr	r3, [r3, #0]
     *
     * @see setColor, getBorderColor, Color::getColorFromRGB
     */
    void setBorderColor(colortype colorBorder)
    {
        borderColor = colorBorder;
 8002ab8:	6603      	str	r3, [r0, #96]	; 0x60
        T::handlePressedUpdated();
    }
 8002aba:	4770      	bx	lr
        borderBox.setColor(T::getPressed() ? down : up);
 8002abc:	f100 0268 	add.w	r2, r0, #104	; 0x68
 8002ac0:	e7f4      	b.n	8002aac <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0xa>
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
 8002ac2:	f100 0370 	add.w	r3, r0, #112	; 0x70
 8002ac6:	e7f6      	b.n	8002ab6 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x14>

08002ac8 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002ac8:	4770      	bx	lr

08002aca <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
 8002aca:	4770      	bx	lr

08002acc <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEED1Ev>:
 * The position of the icon can be adjusted with setIconXY.
 *
 * @see AbstractButtonContainer
 */
template <class T>
class IconButtonStyle : public T
 8002acc:	4770      	bx	lr

08002ace <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 8002ace:	4770      	bx	lr

08002ad0 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8002ad0:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002ad2:	68c2      	ldr	r2, [r0, #12]
 8002ad4:	6844      	ldr	r4, [r0, #4]
 8002ad6:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002ad8:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8002ada:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002ade:	07d2      	lsls	r2, r2, #31
 8002ae0:	bf48      	it	mi
 8002ae2:	5962      	ldrmi	r2, [r4, r5]
 8002ae4:	689b      	ldr	r3, [r3, #8]
    }
 8002ae6:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002ae8:	bf48      	it	mi
 8002aea:	58d3      	ldrmi	r3, [r2, r3]
 8002aec:	4718      	bx	r3

08002aee <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8002aee:	6843      	ldr	r3, [r0, #4]
 8002af0:	b12b      	cbz	r3, 8002afe <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x10>
 8002af2:	6883      	ldr	r3, [r0, #8]
 8002af4:	b92b      	cbnz	r3, 8002b02 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
 8002af6:	68c0      	ldr	r0, [r0, #12]
 8002af8:	f000 0001 	and.w	r0, r0, #1
 8002afc:	4770      	bx	lr
 8002afe:	4618      	mov	r0, r3
 8002b00:	4770      	bx	lr
 8002b02:	2001      	movs	r0, #1
    }
 8002b04:	4770      	bx	lr

08002b06 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8002b06:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002b08:	68c2      	ldr	r2, [r0, #12]
 8002b0a:	6844      	ldr	r4, [r0, #4]
 8002b0c:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002b0e:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8002b10:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002b14:	07d2      	lsls	r2, r2, #31
 8002b16:	bf48      	it	mi
 8002b18:	5962      	ldrmi	r2, [r4, r5]
 8002b1a:	689b      	ldr	r3, [r3, #8]
    }
 8002b1c:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002b1e:	bf48      	it	mi
 8002b20:	58d3      	ldrmi	r3, [r2, r3]
 8002b22:	4718      	bx	r3

08002b24 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8002b24:	6843      	ldr	r3, [r0, #4]
 8002b26:	b12b      	cbz	r3, 8002b34 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8002b28:	6883      	ldr	r3, [r0, #8]
 8002b2a:	b92b      	cbnz	r3, 8002b38 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8002b2c:	68c0      	ldr	r0, [r0, #12]
 8002b2e:	f000 0001 	and.w	r0, r0, #1
 8002b32:	4770      	bx	lr
 8002b34:	4618      	mov	r0, r3
 8002b36:	4770      	bx	lr
 8002b38:	2001      	movs	r0, #1
    }
 8002b3a:	4770      	bx	lr

08002b3c <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE18handleAlphaUpdatedEv>:
    }

    /** @copydoc Image::getAlpha() */
    uint8_t getAlpha() const
    {
        return alpha;
 8002b3c:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
     *
     * @note The user code must call invalidate() in order to update the display.
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8002b40:	f880 30a4 	strb.w	r3, [r0, #164]	; 0xa4
    /**
     * @copydoc Image::setAlpha
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8002b44:	f880 305a 	strb.w	r3, [r0, #90]	; 0x5a
    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        iconImage.setAlpha(T::getAlpha());
        T::handleAlphaUpdated();
    }
 8002b48:	4770      	bx	lr

08002b4a <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE18handleAlphaUpdatedEv>:
 8002b4a:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
 8002b4e:	f880 305a 	strb.w	r3, [r0, #90]	; 0x5a
    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        borderBox.setAlpha(T::getAlpha());
        T::handleAlphaUpdated();
    }
 8002b52:	4770      	bx	lr

08002b54 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>:
    virtual void handlePressedUpdated()
 8002b54:	b510      	push	{r4, lr}
 8002b56:	4604      	mov	r4, r0
        iconImage.setBitmap(T::getPressed() ? iconPressed : iconReleased);
 8002b58:	307c      	adds	r0, #124	; 0x7c
 8002b5a:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 8002b5e:	b13b      	cbz	r3, 8002b70 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv+0x1c>
 8002b60:	f104 017a 	add.w	r1, r4, #122	; 0x7a
 8002b64:	f00b fe56 	bl	800e814 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        T::handlePressedUpdated();
 8002b68:	4620      	mov	r0, r4
 8002b6a:	f7ff ff9a 	bl	8002aa2 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
    }
 8002b6e:	bd10      	pop	{r4, pc}
        iconImage.setBitmap(T::getPressed() ? iconPressed : iconReleased);
 8002b70:	f104 0178 	add.w	r1, r4, #120	; 0x78
 8002b74:	e7f6      	b.n	8002b64 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv+0x10>

08002b76 <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 8002b76:	b510      	push	{r4, lr}
 8002b78:	214c      	movs	r1, #76	; 0x4c
 8002b7a:	4604      	mov	r4, r0
 8002b7c:	f01d fe14 	bl	80207a8 <_ZdlPvj>
 8002b80:	4620      	mov	r0, r4
 8002b82:	bd10      	pop	{r4, pc}

08002b84 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED0Ev>:
class BoxWithBorderButtonStyle : public T
 8002b84:	b510      	push	{r4, lr}
 8002b86:	2178      	movs	r1, #120	; 0x78
 8002b88:	4604      	mov	r4, r0
 8002b8a:	f01d fe0d 	bl	80207a8 <_ZdlPvj>
 8002b8e:	4620      	mov	r0, r4
 8002b90:	bd10      	pop	{r4, pc}

08002b92 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEED0Ev>:
class IconButtonStyle : public T
 8002b92:	b510      	push	{r4, lr}
 8002b94:	21a8      	movs	r1, #168	; 0xa8
 8002b96:	4604      	mov	r4, r0
 8002b98:	f01d fe06 	bl	80207a8 <_ZdlPvj>
 8002b9c:	4620      	mov	r0, r4
 8002b9e:	bd10      	pop	{r4, pc}

08002ba0 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002ba0:	b510      	push	{r4, lr}
 8002ba2:	2110      	movs	r1, #16
 8002ba4:	4604      	mov	r4, r0
 8002ba6:	f01d fdff 	bl	80207a8 <_ZdlPvj>
 8002baa:	4620      	mov	r0, r4
 8002bac:	bd10      	pop	{r4, pc}

08002bae <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
 8002bae:	b510      	push	{r4, lr}
 8002bb0:	2110      	movs	r1, #16
 8002bb2:	4604      	mov	r4, r0
 8002bb4:	f01d fdf8 	bl	80207a8 <_ZdlPvj>
 8002bb8:	4620      	mov	r0, r4
 8002bba:	bd10      	pop	{r4, pc}

08002bbc <_ZN15Screen1ViewBaseD0Ev>:
    virtual ~Screen1ViewBase() {}
 8002bbc:	b510      	push	{r4, lr}
 8002bbe:	f44f 61c2 	mov.w	r1, #1552	; 0x610
 8002bc2:	4604      	mov	r4, r0
 8002bc4:	f01d fdf0 	bl	80207a8 <_ZdlPvj>
 8002bc8:	4620      	mov	r0, r4
 8002bca:	bd10      	pop	{r4, pc}

08002bcc <_ZN8touchgfx23AbstractButtonContainer13executeActionEv>:
    /**
     * Executes the previously set action.
     *
     * @see setAction
     */
    virtual void executeAction()
 8002bcc:	b510      	push	{r4, lr}
 8002bce:	4604      	mov	r4, r0
    {
        if (action && action->isValid())
 8002bd0:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8002bd2:	b150      	cbz	r0, 8002bea <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x1e>
 8002bd4:	6803      	ldr	r3, [r0, #0]
 8002bd6:	68db      	ldr	r3, [r3, #12]
 8002bd8:	4798      	blx	r3
 8002bda:	b130      	cbz	r0, 8002bea <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x1e>
        {
            action->execute(*this);
 8002bdc:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8002bde:	6803      	ldr	r3, [r0, #0]
 8002be0:	4621      	mov	r1, r4
 8002be2:	689b      	ldr	r3, [r3, #8]
        }
    }
 8002be4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            action->execute(*this);
 8002be8:	4718      	bx	r3
    }
 8002bea:	bd10      	pop	{r4, pc}

08002bec <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:
    }
}

void Screen1ViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &ButtonDown)
 8002bec:	f100 02c4 	add.w	r2, r0, #196	; 0xc4
 8002bf0:	4291      	cmp	r1, r2
 8002bf2:	d102      	bne.n	8002bfa <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xe>
    {
        //ButtonUpInteraction
        //When ButtonDown clicked call virtual function
        //Call ButtonDownClicked
        ButtonDownClicked();
 8002bf4:	6803      	ldr	r3, [r0, #0]
 8002bf6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    else if (&src == &ButtonUpTime)
    {
        //InteractionButtonUpTimeClicked
        //When ButtonUpTime clicked call virtual function
        //Call ButtonUpTimeClicked
        ButtonUpTimeClicked();
 8002bf8:	4718      	bx	r3
    else if (&src == &ButtonUp)
 8002bfa:	f500 72b6 	add.w	r2, r0, #364	; 0x16c
 8002bfe:	4291      	cmp	r1, r2
 8002c00:	d102      	bne.n	8002c08 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x1c>
        ButtonUpClicked();
 8002c02:	6803      	ldr	r3, [r0, #0]
 8002c04:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002c06:	e7f7      	b.n	8002bf8 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xc>
    else if (&src == &ButtonDownTime)
 8002c08:	f200 4224 	addw	r2, r0, #1060	; 0x424
 8002c0c:	4291      	cmp	r1, r2
 8002c0e:	d102      	bne.n	8002c16 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x2a>
        ButtonDownTimeClicked();
 8002c10:	6803      	ldr	r3, [r0, #0]
 8002c12:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8002c14:	e7f0      	b.n	8002bf8 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xc>
    else if (&src == &ButtonUpTime)
 8002c16:	f200 42cc 	addw	r2, r0, #1228	; 0x4cc
 8002c1a:	4291      	cmp	r1, r2
 8002c1c:	d102      	bne.n	8002c24 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x38>
        ButtonUpTimeClicked();
 8002c1e:	6803      	ldr	r3, [r0, #0]
 8002c20:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002c22:	e7e9      	b.n	8002bf8 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xc>
    }
}
 8002c24:	4770      	bx	lr

08002c26 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE>:
     *
     * @return The click type of this event.
     */
    ClickEventType getType() const
    {
        return clickEventType;
 8002c26:	790b      	ldrb	r3, [r1, #4]
     *
     * @param  event The click event.
     *
     * @see setAction, setPressed, getPressed
     */
    virtual void handleClickEvent(const ClickEvent& event)
 8002c28:	b570      	push	{r4, r5, r6, lr}
        return pressed;
 8002c2a:	f890 602c 	ldrb.w	r6, [r0, #44]	; 0x2c
 8002c2e:	4604      	mov	r4, r0
 8002c30:	460d      	mov	r5, r1
    {
        bool wasPressed = getPressed();
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 8002c32:	b99b      	cbnz	r3, 8002c5c <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x36>
 8002c34:	b98e      	cbnz	r6, 8002c5a <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x34>
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
 8002c36:	fab3 f383 	clz	r3, r3
 8002c3a:	095b      	lsrs	r3, r3, #5
 8002c3c:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
        handlePressedUpdated();
 8002c40:	6823      	ldr	r3, [r4, #0]
 8002c42:	4620      	mov	r0, r4
 8002c44:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8002c48:	4798      	blx	r3
        {
            setPressed(newPressedValue);
            invalidate();
 8002c4a:	6823      	ldr	r3, [r4, #0]
 8002c4c:	4620      	mov	r0, r4
 8002c4e:	695b      	ldr	r3, [r3, #20]
 8002c50:	4798      	blx	r3
        }
        if (wasPressed && (event.getType() == ClickEvent::RELEASED))
 8002c52:	b116      	cbz	r6, 8002c5a <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x34>
 8002c54:	792b      	ldrb	r3, [r5, #4]
 8002c56:	2b01      	cmp	r3, #1
 8002c58:	d003      	beq.n	8002c62 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x3c>
        {
            executeAction();
        }
    }
 8002c5a:	bd70      	pop	{r4, r5, r6, pc}
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 8002c5c:	2e00      	cmp	r6, #0
 8002c5e:	d0fc      	beq.n	8002c5a <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x34>
 8002c60:	e7e9      	b.n	8002c36 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x10>
            executeAction();
 8002c62:	6823      	ldr	r3, [r4, #0]
 8002c64:	4620      	mov	r0, r4
 8002c66:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
    }
 8002c6a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            executeAction();
 8002c6e:	4718      	bx	r3

08002c70 <_ZN8touchgfx8TextArea12setBaselineYEs>:
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 8002c70:	6803      	ldr	r3, [r0, #0]
    virtual void setBaselineY(int16_t baselineY)
 8002c72:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 8002c74:	6b5e      	ldr	r6, [r3, #52]	; 0x34
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002c76:	4b12      	ldr	r3, [pc, #72]	; (8002cc0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 8002c78:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
 8002c7a:	4604      	mov	r4, r0
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 8002c7c:	b28d      	uxth	r5, r1
 8002c7e:	b92b      	cbnz	r3, 8002c8c <_ZN8touchgfx8TextArea12setBaselineYEs+0x1c>
 8002c80:	4b10      	ldr	r3, [pc, #64]	; (8002cc4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 8002c82:	4a11      	ldr	r2, [pc, #68]	; (8002cc8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8002c84:	216c      	movs	r1, #108	; 0x6c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002c86:	4811      	ldr	r0, [pc, #68]	; (8002ccc <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 8002c88:	f01d fe42 	bl	8020910 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8002c8c:	4910      	ldr	r1, [pc, #64]	; (8002cd0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 8002c8e:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002c90:	8809      	ldrh	r1, [r1, #0]
 8002c92:	4291      	cmp	r1, r2
 8002c94:	d803      	bhi.n	8002c9e <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 8002c96:	4b0f      	ldr	r3, [pc, #60]	; (8002cd4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 8002c98:	4a0b      	ldr	r2, [pc, #44]	; (8002cc8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8002c9a:	216d      	movs	r1, #109	; 0x6d
 8002c9c:	e7f3      	b.n	8002c86 <_ZN8touchgfx8TextArea12setBaselineYEs+0x16>
        return fonts[typedTexts[typedTextId].fontIdx];
 8002c9e:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 8002ca2:	4b0d      	ldr	r3, [pc, #52]	; (8002cd8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 8002ca4:	681b      	ldr	r3, [r3, #0]
 8002ca6:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8002caa:	6803      	ldr	r3, [r0, #0]
 8002cac:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002cae:	4798      	blx	r3
 8002cb0:	1a28      	subs	r0, r5, r0
 8002cb2:	b201      	sxth	r1, r0
 8002cb4:	4633      	mov	r3, r6
 8002cb6:	4620      	mov	r0, r4
    }
 8002cb8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 8002cbc:	4718      	bx	r3
 8002cbe:	bf00      	nop
 8002cc0:	2001565c 	.word	0x2001565c
 8002cc4:	08022890 	.word	0x08022890
 8002cc8:	080228d2 	.word	0x080228d2
 8002ccc:	0802290d 	.word	0x0802290d
 8002cd0:	20015660 	.word	0x20015660
 8002cd4:	08022954 	.word	0x08022954
 8002cd8:	20015664 	.word	0x20015664

08002cdc <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
    if (&src == &buttonStart)
 8002cdc:	f500 732a 	add.w	r3, r0, #680	; 0x2a8
 8002ce0:	428b      	cmp	r3, r1
{
 8002ce2:	b510      	push	{r4, lr}
 8002ce4:	4604      	mov	r4, r0
    if (&src == &buttonStart)
 8002ce6:	d109      	bne.n	8002cfc <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x20>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8002ce8:	f00e fa42 	bl	8011170 <_ZN8touchgfx11Application11getInstanceEv>
        application().gotoScreenGraphScreenWipeTransitionEast();
 8002cec:	f7ff fe20 	bl	8002930 <_ZN23FrontendApplicationBase39gotoScreenGraphScreenWipeTransitionEastEv>
        ButtonStartClicked();
 8002cf0:	6823      	ldr	r3, [r4, #0]
 8002cf2:	4620      	mov	r0, r4
 8002cf4:	6b5b      	ldr	r3, [r3, #52]	; 0x34
}
 8002cf6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        ButtonStartClicked();
 8002cfa:	4718      	bx	r3
}
 8002cfc:	bd10      	pop	{r4, pc}

08002cfe <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:

        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 8002cfe:	2200      	movs	r2, #0
 8002d00:	f04f 31ff 	mov.w	r1, #4294967295
 8002d04:	e9c0 2100 	strd	r2, r1, [r0]
              text(0)
 8002d08:	6082      	str	r2, [r0, #8]
    }
 8002d0a:	4770      	bx	lr

08002d0c <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 8002d0c:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 8002d0e:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 8002d10:	4604      	mov	r4, r0
        setX(x);
 8002d12:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    void setXY(int16_t x, int16_t y)
 8002d14:	4615      	mov	r5, r2
        setX(x);
 8002d16:	4798      	blx	r3
        setY(y);
 8002d18:	6823      	ldr	r3, [r4, #0]
 8002d1a:	4629      	mov	r1, r5
 8002d1c:	4620      	mov	r0, r4
 8002d1e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    }
 8002d20:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 8002d24:	4718      	bx	r3

08002d26 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>:
        iconReleased = newIconReleased;
 8002d26:	880b      	ldrh	r3, [r1, #0]
    virtual void setIconBitmaps(const Bitmap& newIconReleased, const Bitmap& newIconPressed)
 8002d28:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
        iconReleased = newIconReleased;
 8002d2c:	f8a0 3078 	strh.w	r3, [r0, #120]	; 0x78
        iconPressed = newIconPressed;
 8002d30:	8813      	ldrh	r3, [r2, #0]
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
 8002d32:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
        iconPressed = newIconPressed;
 8002d36:	f8a0 307a 	strh.w	r3, [r0, #122]	; 0x7a
    virtual void setIconBitmaps(const Bitmap& newIconReleased, const Bitmap& newIconPressed)
 8002d3a:	4604      	mov	r4, r0
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
 8002d3c:	4610      	mov	r0, r2
    virtual void setIconBitmaps(const Bitmap& newIconReleased, const Bitmap& newIconPressed)
 8002d3e:	4690      	mov	r8, r2
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
 8002d40:	f011 fc46 	bl	80145d0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8002d44:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8002d48:	4607      	mov	r7, r0
 8002d4a:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8002d4e:	4640      	mov	r0, r8
 8002d50:	f3c3 064f 	ubfx	r6, r3, #1, #16
 8002d54:	f011 fc70 	bl	8014638 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8002d58:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8002d5c:	f3c5 054f 	ubfx	r5, r5, #1, #16
 8002d60:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8002d64:	eb07 77d7 	add.w	r7, r7, r7, lsr #31
 8002d68:	eba6 0260 	sub.w	r2, r6, r0, asr #1
 8002d6c:	eba5 0767 	sub.w	r7, r5, r7, asr #1
 8002d70:	f104 007c 	add.w	r0, r4, #124	; 0x7c
 8002d74:	b239      	sxth	r1, r7
 8002d76:	b212      	sxth	r2, r2
 8002d78:	f7ff ffc8 	bl	8002d0c <_ZN8touchgfx8Drawable5setXYEss>
        handlePressedUpdated();
 8002d7c:	6823      	ldr	r3, [r4, #0]
 8002d7e:	4620      	mov	r0, r4
 8002d80:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
    }
 8002d84:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
        handlePressedUpdated();
 8002d88:	4718      	bx	r3

08002d8a <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8002d8a:	b570      	push	{r4, r5, r6, lr}
 8002d8c:	4604      	mov	r4, r0
 8002d8e:	461d      	mov	r5, r3
 8002d90:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
        setXY(x, y);
 8002d94:	f7ff ffba 	bl	8002d0c <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8002d98:	6823      	ldr	r3, [r4, #0]
 8002d9a:	4629      	mov	r1, r5
 8002d9c:	4620      	mov	r0, r4
 8002d9e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002da0:	4798      	blx	r3
        setHeight(height);
 8002da2:	6823      	ldr	r3, [r4, #0]
 8002da4:	4631      	mov	r1, r6
 8002da6:	4620      	mov	r0, r4
 8002da8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    }
 8002daa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 8002dae:	4718      	bx	r3

08002db0 <_ZN8touchgfx6WidgetC1Ev>:
 8002db0:	2200      	movs	r2, #0
 8002db2:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8002db6:	e9c0 2203 	strd	r2, r2, [r0, #12]
          visible(true)
 8002dba:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8002dbe:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8002dc2:	f44f 7280 	mov.w	r2, #256	; 0x100
 8002dc6:	8482      	strh	r2, [r0, #36]	; 0x24
class Widget : public Drawable
 8002dc8:	4a01      	ldr	r2, [pc, #4]	; (8002dd0 <_ZN8touchgfx6WidgetC1Ev+0x20>)
 8002dca:	6002      	str	r2, [r0, #0]
 8002dcc:	4770      	bx	lr
 8002dce:	bf00      	nop
 8002dd0:	080229d8 	.word	0x080229d8

08002dd4 <_ZN8touchgfx3BoxC1Ev>:
    Box()
 8002dd4:	b510      	push	{r4, lr}
        : Widget(), alpha(255), color(0)
 8002dd6:	2226      	movs	r2, #38	; 0x26
    Box()
 8002dd8:	4604      	mov	r4, r0
        : Widget(), alpha(255), color(0)
 8002dda:	2100      	movs	r1, #0
 8002ddc:	f01d ff1e 	bl	8020c1c <memset>
 8002de0:	4620      	mov	r0, r4
 8002de2:	f7ff ffe5 	bl	8002db0 <_ZN8touchgfx6WidgetC1Ev>
 8002de6:	4b04      	ldr	r3, [pc, #16]	; (8002df8 <_ZN8touchgfx3BoxC1Ev+0x24>)
 8002de8:	6023      	str	r3, [r4, #0]
 8002dea:	23ff      	movs	r3, #255	; 0xff
 8002dec:	f884 3026 	strb.w	r3, [r4, #38]	; 0x26
        : color(col)
 8002df0:	2300      	movs	r3, #0
 8002df2:	62a3      	str	r3, [r4, #40]	; 0x28
    }
 8002df4:	4620      	mov	r0, r4
 8002df6:	bd10      	pop	{r4, pc}
 8002df8:	0802412c 	.word	0x0802412c

08002dfc <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>:
    Image(const Bitmap& bmp = Bitmap())
 8002dfc:	b538      	push	{r3, r4, r5, lr}
        : Widget(), bitmap(bmp), alpha(255)
 8002dfe:	2226      	movs	r2, #38	; 0x26
    Image(const Bitmap& bmp = Bitmap())
 8002e00:	4604      	mov	r4, r0
 8002e02:	460d      	mov	r5, r1
        : Widget(), bitmap(bmp), alpha(255)
 8002e04:	2100      	movs	r1, #0
 8002e06:	f01d ff09 	bl	8020c1c <memset>
 8002e0a:	4620      	mov	r0, r4
 8002e0c:	f7ff ffd0 	bl	8002db0 <_ZN8touchgfx6WidgetC1Ev>
 8002e10:	4b06      	ldr	r3, [pc, #24]	; (8002e2c <_ZN8touchgfx5ImageC1ERKNS_6BitmapE+0x30>)
 8002e12:	6023      	str	r3, [r4, #0]
 8002e14:	882b      	ldrh	r3, [r5, #0]
 8002e16:	84e3      	strh	r3, [r4, #38]	; 0x26
 8002e18:	23ff      	movs	r3, #255	; 0xff
        Image::setBitmap(bmp);
 8002e1a:	4620      	mov	r0, r4
        : Widget(), bitmap(bmp), alpha(255)
 8002e1c:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
        Image::setBitmap(bmp);
 8002e20:	4629      	mov	r1, r5
 8002e22:	f00b fcf7 	bl	800e814 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    }
 8002e26:	4620      	mov	r0, r4
 8002e28:	bd38      	pop	{r3, r4, r5, pc}
 8002e2a:	bf00      	nop
 8002e2c:	08024270 	.word	0x08024270

08002e30 <_ZN8touchgfx8TextAreaC1Ev>:
    TextArea()
 8002e30:	b510      	push	{r4, lr}
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002e32:	2226      	movs	r2, #38	; 0x26
    TextArea()
 8002e34:	4604      	mov	r4, r0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002e36:	2100      	movs	r1, #0
 8002e38:	f01d fef0 	bl	8020c1c <memset>
 8002e3c:	4620      	mov	r0, r4
 8002e3e:	f7ff ffb7 	bl	8002db0 <_ZN8touchgfx6WidgetC1Ev>
 8002e42:	4b0a      	ldr	r3, [pc, #40]	; (8002e6c <_ZN8touchgfx8TextAreaC1Ev+0x3c>)
 8002e44:	6023      	str	r3, [r4, #0]
        : typedTextId(id)
 8002e46:	4b0a      	ldr	r3, [pc, #40]	; (8002e70 <_ZN8touchgfx8TextAreaC1Ev+0x40>)
 8002e48:	62a3      	str	r3, [r4, #40]	; 0x28
 8002e4a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002e4e:	85a3      	strh	r3, [r4, #44]	; 0x2c
 8002e50:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 8002e54:	2300      	movs	r3, #0
 8002e56:	e9c4 320c 	strd	r3, r2, [r4, #48]	; 0x30
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8002e5a:	f04f 32ff 	mov.w	r2, #4294967295
              text(0)
 8002e5e:	e9c4 2310 	strd	r2, r3, [r4, #64]	; 0x40
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002e62:	8723      	strh	r3, [r4, #56]	; 0x38
 8002e64:	63e3      	str	r3, [r4, #60]	; 0x3c
    }
 8002e66:	4620      	mov	r0, r4
 8002e68:	bd10      	pop	{r4, pc}
 8002e6a:	bf00      	nop
 8002e6c:	0802409c 	.word	0x0802409c
 8002e70:	080222dc 	.word	0x080222dc

08002e74 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>:
        return typedTextId < numberOfTypedTexts;
 8002e74:	4b1b      	ldr	r3, [pc, #108]	; (8002ee4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x70>)
     * change you may need to reposition the label text by calling this function to keep the
     * text horizontally centered.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
 8002e76:	b573      	push	{r0, r1, r4, r5, r6, lr}
    {
        if (typedText.hasValidId())
 8002e78:	881b      	ldrh	r3, [r3, #0]
 8002e7a:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 8002e7c:	428b      	cmp	r3, r1
    void updateTextPosition()
 8002e7e:	4606      	mov	r6, r0
        if (typedText.hasValidId())
 8002e80:	d92b      	bls.n	8002eda <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x66>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002e82:	4b19      	ldr	r3, [pc, #100]	; (8002ee8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x74>)
 8002e84:	681b      	ldr	r3, [r3, #0]
 8002e86:	b92b      	cbnz	r3, 8002e94 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x20>
 8002e88:	4b18      	ldr	r3, [pc, #96]	; (8002eec <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x78>)
 8002e8a:	4a19      	ldr	r2, [pc, #100]	; (8002ef0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x7c>)
 8002e8c:	4819      	ldr	r0, [pc, #100]	; (8002ef4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x80>)
 8002e8e:	216c      	movs	r1, #108	; 0x6c
 8002e90:	f01d fd3e 	bl	8020910 <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 8002e94:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8002e98:	4b17      	ldr	r3, [pc, #92]	; (8002ef8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x84>)
 8002e9a:	681b      	ldr	r3, [r3, #0]
 8002e9c:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
 8002ea0:	4b16      	ldr	r3, [pc, #88]	; (8002efc <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x88>)
 8002ea2:	6818      	ldr	r0, [r3, #0]
 8002ea4:	f001 fff8 	bl	8004e98 <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getMaxTextHeight(s) * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8002ea8:	682b      	ldr	r3, [r5, #0]
 8002eaa:	9001      	str	r0, [sp, #4]
 8002eac:	4601      	mov	r1, r0
 8002eae:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002eb0:	4628      	mov	r0, r5
 8002eb2:	4798      	blx	r3
 8002eb4:	682b      	ldr	r3, [r5, #0]
 8002eb6:	9901      	ldr	r1, [sp, #4]
 8002eb8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002eba:	4604      	mov	r4, r0
 8002ebc:	4628      	mov	r0, r5
 8002ebe:	4798      	blx	r3
 8002ec0:	682b      	ldr	r3, [r5, #0]
 8002ec2:	9901      	ldr	r1, [sp, #4]
 8002ec4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002ec6:	fb14 f400 	smulbb	r4, r4, r0
 8002eca:	4628      	mov	r0, r5
 8002ecc:	4798      	blx	r3
 8002ece:	b2e4      	uxtb	r4, r4
 8002ed0:	4404      	add	r4, r0
 8002ed2:	f886 4045 	strb.w	r4, [r6, #69]	; 0x45
        }
        else
        {
            textHeightIncludingSpacing = 0;
        }
    }
 8002ed6:	b002      	add	sp, #8
 8002ed8:	bd70      	pop	{r4, r5, r6, pc}
            textHeightIncludingSpacing = 0;
 8002eda:	2300      	movs	r3, #0
 8002edc:	f880 3045 	strb.w	r3, [r0, #69]	; 0x45
    }
 8002ee0:	e7f9      	b.n	8002ed6 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x62>
 8002ee2:	bf00      	nop
 8002ee4:	20015660 	.word	0x20015660
 8002ee8:	2001565c 	.word	0x2001565c
 8002eec:	08022890 	.word	0x08022890
 8002ef0:	080228d2 	.word	0x080228d2
 8002ef4:	0802290d 	.word	0x0802290d
 8002ef8:	20015664 	.word	0x20015664
 8002efc:	20015668 	.word	0x20015668

08002f00 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>:
        : pressed(false), alpha(255), action(0)
 8002f00:	f44f 437f 	mov.w	r3, #65280	; 0xff00
    IconButtonStyle()
 8002f04:	b573      	push	{r0, r1, r4, r5, r6, lr}
        : T(), up(), down()
 8002f06:	4606      	mov	r6, r0
 8002f08:	8583      	strh	r3, [r0, #44]	; 0x2c
        touchable = touch;
 8002f0a:	f240 1301 	movw	r3, #257	; 0x101
          firstChild(0)
 8002f0e:	2500      	movs	r5, #0
 8002f10:	8483      	strh	r3, [r0, #36]	; 0x24
 8002f12:	4b1d      	ldr	r3, [pc, #116]	; (8002f88 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0x88>)
 8002f14:	6285      	str	r5, [r0, #40]	; 0x28
        : x(0), y(0), width(0), height(0)
 8002f16:	e9c0 5501 	strd	r5, r5, [r0, #4]
 8002f1a:	e9c0 5503 	strd	r5, r5, [r0, #12]
          visible(true)
 8002f1e:	e9c0 5505 	strd	r5, r5, [r0, #20]
 8002f22:	e9c0 5507 	strd	r5, r5, [r0, #28]
 8002f26:	6305      	str	r5, [r0, #48]	; 0x30
 8002f28:	f846 3b34 	str.w	r3, [r6], #52
 8002f2c:	4604      	mov	r4, r0
        : Box(), borderColor(0), borderSize(0)
 8002f2e:	4630      	mov	r0, r6
 8002f30:	f7ff ff50 	bl	8002dd4 <_ZN8touchgfx3BoxC1Ev>
 8002f34:	4b15      	ldr	r3, [pc, #84]	; (8002f8c <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0x8c>)
 8002f36:	6363      	str	r3, [r4, #52]	; 0x34
        borderBox.setXY(0, 0);
 8002f38:	462a      	mov	r2, r5
        : color(0)
 8002f3a:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 8002f3e:	e9c4 551c 	strd	r5, r5, [r4, #112]	; 0x70
        : color(col)
 8002f42:	6625      	str	r5, [r4, #96]	; 0x60
 8002f44:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 8002f48:	4629      	mov	r1, r5
 8002f4a:	4630      	mov	r0, r6
 8002f4c:	f7ff fede 	bl	8002d0c <_ZN8touchgfx8Drawable5setXYEss>
        T::add(borderBox);
 8002f50:	4631      	mov	r1, r6
 8002f52:	4620      	mov	r0, r4
 8002f54:	f007 fdea 	bl	800ab2c <_ZN8touchgfx9Container3addERNS_8DrawableE>
        : T()
 8002f58:	4b0d      	ldr	r3, [pc, #52]	; (8002f90 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0x90>)
 8002f5a:	6023      	str	r3, [r4, #0]
 8002f5c:	f104 057c 	add.w	r5, r4, #124	; 0x7c
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 8002f60:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002f64:	f8a4 3078 	strh.w	r3, [r4, #120]	; 0x78
 8002f68:	f8a4 307a 	strh.w	r3, [r4, #122]	; 0x7a
 8002f6c:	a901      	add	r1, sp, #4
 8002f6e:	4628      	mov	r0, r5
 8002f70:	f8ad 3004 	strh.w	r3, [sp, #4]
 8002f74:	f7ff ff42 	bl	8002dfc <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
        T::add(iconImage);
 8002f78:	4620      	mov	r0, r4
 8002f7a:	4629      	mov	r1, r5
 8002f7c:	f007 fdd6 	bl	800ab2c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 8002f80:	4620      	mov	r0, r4
 8002f82:	b002      	add	sp, #8
 8002f84:	bd70      	pop	{r4, r5, r6, pc}
 8002f86:	bf00      	nop
 8002f88:	08022ad0 	.word	0x08022ad0
 8002f8c:	08024208 	.word	0x08024208
 8002f90:	08022b6c 	.word	0x08022b6c

08002f94 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>:
    void setBoxWithBorderColors(const colortype colorReleased, const colortype colorPressed, const colortype borderColorReleased, const colortype borderColorPressed)
 8002f94:	b410      	push	{r4}
        borderUp = borderColorReleased;
 8002f96:	6703      	str	r3, [r0, #112]	; 0x70
        borderDown = borderColorPressed;
 8002f98:	9b01      	ldr	r3, [sp, #4]
 8002f9a:	6743      	str	r3, [r0, #116]	; 0x74
        handlePressedUpdated();
 8002f9c:	6803      	ldr	r3, [r0, #0]
    }
 8002f9e:	f85d 4b04 	ldr.w	r4, [sp], #4
        handlePressedUpdated();
 8002fa2:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
        down = colorPressed;
 8002fa6:	e9c0 121a 	strd	r1, r2, [r0, #104]	; 0x68
        handlePressedUpdated();
 8002faa:	4718      	bx	r3

08002fac <_ZN15Screen1ViewBaseC1Ev>:
Screen1ViewBase::Screen1ViewBase() :
 8002fac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002fb0:	ed2d 8b0c 	vpush	{d8-d13}
 8002fb4:	4604      	mov	r4, r0
 8002fb6:	b08d      	sub	sp, #52	; 0x34
        : presenter(0)
 8002fb8:	f00f fbdc 	bl	8012774 <_ZN8touchgfx6ScreenC1Ev>
    flexButtonCallback(this, &Screen1ViewBase::flexButtonCallbackHandler)
 8002fbc:	4622      	mov	r2, r4
 8002fbe:	2500      	movs	r5, #0
 8002fc0:	4be5      	ldr	r3, [pc, #916]	; (8003358 <_ZN15Screen1ViewBaseC1Ev+0x3ac>)
 8002fc2:	63e5      	str	r5, [r4, #60]	; 0x3c
 8002fc4:	f842 3b40 	str.w	r3, [r2], #64
 8002fc8:	4610      	mov	r0, r2
 8002fca:	ee08 2a10 	vmov	s16, r2
 8002fce:	f7ff ff01 	bl	8002dd4 <_ZN8touchgfx3BoxC1Ev>
 8002fd2:	f104 036c 	add.w	r3, r4, #108	; 0x6c
 8002fd6:	f64f 76ff 	movw	r6, #65535	; 0xffff
 8002fda:	a90a      	add	r1, sp, #40	; 0x28
 8002fdc:	4618      	mov	r0, r3
 8002fde:	ee0c 3a10 	vmov	s24, r3
 8002fe2:	f8ad 6028 	strh.w	r6, [sp, #40]	; 0x28
 8002fe6:	f7ff ff09 	bl	8002dfc <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8002fea:	f104 0398 	add.w	r3, r4, #152	; 0x98
 8002fee:	a90a      	add	r1, sp, #40	; 0x28
 8002ff0:	4618      	mov	r0, r3
 8002ff2:	ee0c 3a90 	vmov	s25, r3
 8002ff6:	f8ad 6028 	strh.w	r6, [sp, #40]	; 0x28
 8002ffa:	f7ff feff 	bl	8002dfc <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8002ffe:	f104 03c4 	add.w	r3, r4, #196	; 0xc4
 8003002:	4618      	mov	r0, r3
 8003004:	ee08 3a90 	vmov	s17, r3
 8003008:	f7ff ff7a 	bl	8002f00 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 800300c:	f504 73b6 	add.w	r3, r4, #364	; 0x16c
 8003010:	4618      	mov	r0, r3
 8003012:	ee09 3a10 	vmov	s18, r3
 8003016:	f7ff ff73 	bl	8002f00 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 800301a:	f504 7305 	add.w	r3, r4, #532	; 0x214
 800301e:	4618      	mov	r0, r3
 8003020:	ee09 3a90 	vmov	s19, r3
 8003024:	f7ff ff04 	bl	8002e30 <_ZN8touchgfx8TextAreaC1Ev>
 8003028:	f504 7317 	add.w	r3, r4, #604	; 0x25c
        : TextArea()
 800302c:	4618      	mov	r0, r3
 800302e:	ee0a 3a10 	vmov	s20, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8003032:	4fca      	ldr	r7, [pc, #808]	; (800335c <_ZN15Screen1ViewBaseC1Ev+0x3b0>)
        : TextArea()
 8003034:	f7ff fefc 	bl	8002e30 <_ZN8touchgfx8TextAreaC1Ev>
 8003038:	f504 732a 	add.w	r3, r4, #680	; 0x2a8
        : TextAreaWithWildcardBase(), wc1(0)
 800303c:	f8c4 725c 	str.w	r7, [r4, #604]	; 0x25c
 8003040:	f8c4 52a4 	str.w	r5, [r4, #676]	; 0x2a4
 8003044:	4618      	mov	r0, r3
 8003046:	ee0a 3a90 	vmov	s21, r3
 800304a:	f00b fd15 	bl	800ea78 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800304e:	f504 733c 	add.w	r3, r4, #752	; 0x2f0
 8003052:	a90a      	add	r1, sp, #40	; 0x28
 8003054:	4618      	mov	r0, r3
 8003056:	ee0d 3a10 	vmov	s26, r3
 800305a:	f8ad 6028 	strh.w	r6, [sp, #40]	; 0x28
 800305e:	f7ff fecd 	bl	8002dfc <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8003062:	f504 7347 	add.w	r3, r4, #796	; 0x31c
 8003066:	4618      	mov	r0, r3
 8003068:	ee0b 3a10 	vmov	s22, r3
 800306c:	f7ff fee0 	bl	8002e30 <_ZN8touchgfx8TextAreaC1Ev>
 8003070:	f504 7359 	add.w	r3, r4, #868	; 0x364
 8003074:	f504 7b6c 	add.w	fp, r4, #944	; 0x3b0
        : TextArea()
 8003078:	4618      	mov	r0, r3
 800307a:	ee0b 3a90 	vmov	s23, r3
 800307e:	f7ff fed7 	bl	8002e30 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8003082:	f8c4 7364 	str.w	r7, [r4, #868]	; 0x364
 8003086:	f8c4 53ac 	str.w	r5, [r4, #940]	; 0x3ac
 800308a:	4658      	mov	r0, fp
 800308c:	f7ff fed0 	bl	8002e30 <_ZN8touchgfx8TextAreaC1Ev>
 8003090:	f504 737e 	add.w	r3, r4, #1016	; 0x3f8
 8003094:	a90a      	add	r1, sp, #40	; 0x28
 8003096:	4618      	mov	r0, r3
 8003098:	f204 4924 	addw	r9, r4, #1060	; 0x424
 800309c:	ee0d 3a90 	vmov	s27, r3
 80030a0:	f204 48cc 	addw	r8, r4, #1228	; 0x4cc
 80030a4:	f8ad 6028 	strh.w	r6, [sp, #40]	; 0x28
 80030a8:	f7ff fea8 	bl	8002dfc <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 80030ac:	4648      	mov	r0, r9
 80030ae:	f7ff ff27 	bl	8002f00 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 80030b2:	f204 5a74 	addw	sl, r4, #1396	; 0x574
 80030b6:	4640      	mov	r0, r8
 80030b8:	f7ff ff22 	bl	8002f00 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
        : TextArea()
 80030bc:	4650      	mov	r0, sl
 80030be:	f7ff feb7 	bl	8002e30 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80030c2:	4ba7      	ldr	r3, [pc, #668]	; (8003360 <_ZN15Screen1ViewBaseC1Ev+0x3b4>)
 80030c4:	f8c4 35f0 	str.w	r3, [r4, #1520]	; 0x5f0
 80030c8:	4ba6      	ldr	r3, [pc, #664]	; (8003364 <_ZN15Screen1ViewBaseC1Ev+0x3b8>)
 80030ca:	f8c4 35f8 	str.w	r3, [r4, #1528]	; 0x5f8
 80030ce:	4ba6      	ldr	r3, [pc, #664]	; (8003368 <_ZN15Screen1ViewBaseC1Ev+0x3bc>)
 80030d0:	f8c4 3600 	str.w	r3, [r4, #1536]	; 0x600
 80030d4:	4ba5      	ldr	r3, [pc, #660]	; (800336c <_ZN15Screen1ViewBaseC1Ev+0x3c0>)
 80030d6:	f8c4 3608 	str.w	r3, [r4, #1544]	; 0x608
    __background.setPosition(0, 0, 320, 240);
 80030da:	23f0      	movs	r3, #240	; 0xf0
 80030dc:	462a      	mov	r2, r5
 80030de:	4629      	mov	r1, r5
 80030e0:	ee18 0a10 	vmov	r0, s16
        : TextAreaWithWildcardBase(), wc1(0)
 80030e4:	f8c4 7574 	str.w	r7, [r4, #1396]	; 0x574
 80030e8:	f8c4 55bc 	str.w	r5, [r4, #1468]	; 0x5bc
 80030ec:	f8c4 55fc 	str.w	r5, [r4, #1532]	; 0x5fc
 80030f0:	f8c4 560c 	str.w	r5, [r4, #1548]	; 0x60c
 80030f4:	9300      	str	r3, [sp, #0]
 80030f6:	f8c4 45f4 	str.w	r4, [r4, #1524]	; 0x5f4
 80030fa:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80030fe:	f8c4 4604 	str.w	r4, [r4, #1540]	; 0x604
 8003102:	f7ff fe42 	bl	8002d8a <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8003106:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800310a:	66a3      	str	r3, [r4, #104]	; 0x68
    image2.setXY(0, 0);
 800310c:	462a      	mov	r2, r5
 800310e:	4629      	mov	r1, r5
 8003110:	ee1c 0a10 	vmov	r0, s24
 8003114:	f7ff fdfa 	bl	8002d0c <_ZN8touchgfx8Drawable5setXYEss>
    image2.setBitmap(touchgfx::Bitmap(BITMAP_BG_ID));
 8003118:	ee1c 0a10 	vmov	r0, s24
 800311c:	a90a      	add	r1, sp, #40	; 0x28
 800311e:	f8ad 5028 	strh.w	r5, [sp, #40]	; 0x28
 8003122:	f00b fb77 	bl	800e814 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    image3.setXY(118, 25);
 8003126:	ee1c 0a90 	vmov	r0, s25
 800312a:	2219      	movs	r2, #25
 800312c:	2176      	movs	r1, #118	; 0x76
 800312e:	f7ff fded 	bl	8002d0c <_ZN8touchgfx8Drawable5setXYEss>
    image3.setBitmap(touchgfx::Bitmap(BITMAP_COUNTER_BOX_ID));
 8003132:	aa0a      	add	r2, sp, #40	; 0x28
 8003134:	f04f 0303 	mov.w	r3, #3
 8003138:	4611      	mov	r1, r2
 800313a:	ee1c 0a90 	vmov	r0, s25
 800313e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8003142:	f00b fb67 	bl	800e814 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        borderBox.setPosition(x, y, width, height);
 8003146:	2317      	movs	r3, #23
     *
     * @see getBorderSize
     */
    void setBorderSize(uint16_t size)
    {
        borderSize = size;
 8003148:	2705      	movs	r7, #5
    ButtonDown.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 800314a:	4e89      	ldr	r6, [pc, #548]	; (8003370 <_ZN15Screen1ViewBaseC1Ev+0x3c4>)
 800314c:	9300      	str	r3, [sp, #0]
 800314e:	462a      	mov	r2, r5
 8003150:	4629      	mov	r1, r5
 8003152:	232b      	movs	r3, #43	; 0x2b
 8003154:	f104 00f8 	add.w	r0, r4, #248	; 0xf8
 8003158:	f7ff fe17 	bl	8002d8a <_ZN8touchgfx8Drawable11setPositionEssss>
 800315c:	4b85      	ldr	r3, [pc, #532]	; (8003374 <_ZN15Screen1ViewBaseC1Ev+0x3c8>)
 800315e:	4a86      	ldr	r2, [pc, #536]	; (8003378 <_ZN15Screen1ViewBaseC1Ev+0x3cc>)
 8003160:	4986      	ldr	r1, [pc, #536]	; (800337c <_ZN15Screen1ViewBaseC1Ev+0x3d0>)
 8003162:	9600      	str	r6, [sp, #0]
 8003164:	ee18 0a90 	vmov	r0, s17
 8003168:	f8a4 7128 	strh.w	r7, [r4, #296]	; 0x128
 800316c:	f7ff ff12 	bl	8002f94 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    ButtonDown.setIconBitmaps(Bitmap(BITMAP_DARK_ICONS_DOWN_ARROW_32_ID), Bitmap(BITMAP_DARK_ICONS_DOWN_ARROW_32_ID));
 8003170:	ee18 0a90 	vmov	r0, s17
 8003174:	aa0a      	add	r2, sp, #40	; 0x28
 8003176:	a909      	add	r1, sp, #36	; 0x24
 8003178:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
 800317c:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
 8003180:	f7ff fdd1 	bl	8002d26 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>
    ButtonDown.setPosition(273, 49, 43, 23);
 8003184:	2317      	movs	r3, #23
 8003186:	ee18 0a90 	vmov	r0, s17
 800318a:	9300      	str	r3, [sp, #0]
 800318c:	2231      	movs	r2, #49	; 0x31
 800318e:	232b      	movs	r3, #43	; 0x2b
 8003190:	f240 1111 	movw	r1, #273	; 0x111
        rect.x = x;
 8003194:	f8c4 7144 	str.w	r7, [r4, #324]	; 0x144
 8003198:	f7ff fdf7 	bl	8002d8a <_ZN8touchgfx8Drawable11setPositionEssss>
    ButtonDown.setAction(flexButtonCallback);
 800319c:	f504 63c0 	add.w	r3, r4, #1536	; 0x600
 80031a0:	9303      	str	r3, [sp, #12]
        action = &callback;
 80031a2:	f8c4 30f4 	str.w	r3, [r4, #244]	; 0xf4
 80031a6:	2317      	movs	r3, #23
 80031a8:	462a      	mov	r2, r5
 80031aa:	4629      	mov	r1, r5
 80031ac:	9300      	str	r3, [sp, #0]
 80031ae:	f504 70d0 	add.w	r0, r4, #416	; 0x1a0
 80031b2:	232b      	movs	r3, #43	; 0x2b
 80031b4:	f7ff fde9 	bl	8002d8a <_ZN8touchgfx8Drawable11setPositionEssss>
    ButtonUp.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 80031b8:	4b6e      	ldr	r3, [pc, #440]	; (8003374 <_ZN15Screen1ViewBaseC1Ev+0x3c8>)
 80031ba:	4a6f      	ldr	r2, [pc, #444]	; (8003378 <_ZN15Screen1ViewBaseC1Ev+0x3cc>)
 80031bc:	496f      	ldr	r1, [pc, #444]	; (800337c <_ZN15Screen1ViewBaseC1Ev+0x3d0>)
 80031be:	9600      	str	r6, [sp, #0]
 80031c0:	ee19 0a10 	vmov	r0, s18
 80031c4:	f8a4 71d0 	strh.w	r7, [r4, #464]	; 0x1d0
 80031c8:	f7ff fee4 	bl	8002f94 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
 80031cc:	f04f 0206 	mov.w	r2, #6
    ButtonUp.setIconBitmaps(Bitmap(BITMAP_DARK_ICONS_UP_ARROW_32_ID), Bitmap(BITMAP_DARK_ICONS_UP_ARROW_32_ID));
 80031d0:	a80a      	add	r0, sp, #40	; 0x28
 80031d2:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 80031d6:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 80031da:	a909      	add	r1, sp, #36	; 0x24
 80031dc:	4602      	mov	r2, r0
 80031de:	ee19 0a10 	vmov	r0, s18
 80031e2:	f7ff fda0 	bl	8002d26 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>
 80031e6:	2006      	movs	r0, #6
 80031e8:	f8c4 01ec 	str.w	r0, [r4, #492]	; 0x1ec
    ButtonUp.setPosition(273, 25, 43, 23);
 80031ec:	2017      	movs	r0, #23
 80031ee:	232b      	movs	r3, #43	; 0x2b
 80031f0:	9000      	str	r0, [sp, #0]
 80031f2:	2219      	movs	r2, #25
 80031f4:	ee19 0a10 	vmov	r0, s18
 80031f8:	f240 1111 	movw	r1, #273	; 0x111
 80031fc:	f7ff fdc5 	bl	8002d8a <_ZN8touchgfx8Drawable11setPositionEssss>
 8003200:	9a03      	ldr	r2, [sp, #12]
 8003202:	f8c4 219c 	str.w	r2, [r4, #412]	; 0x19c
    LabelPradLadowania.setXY(41, 28);
 8003206:	ee19 0a90 	vmov	r0, s19
 800320a:	221c      	movs	r2, #28
 800320c:	2129      	movs	r1, #41	; 0x29
        boundingArea = calculateBoundingArea();
 800320e:	ae04      	add	r6, sp, #16
 8003210:	f7ff fd7c 	bl	8002d0c <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8003214:	f04f 30ff 	mov.w	r0, #4294967295
        boundingArea = calculateBoundingArea();
 8003218:	ee19 1a90 	vmov	r1, s19
        color = newColor;
 800321c:	f8c4 0244 	str.w	r0, [r4, #580]	; 0x244
        linespace = space;
 8003220:	f8a4 5248 	strh.w	r5, [r4, #584]	; 0x248
        boundingArea = calculateBoundingArea();
 8003224:	4630      	mov	r0, r6
 8003226:	f00a fdf5 	bl	800de14 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800322a:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 800322e:	f504 7314 	add.w	r3, r4, #592	; 0x250
 8003232:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8003236:	4b52      	ldr	r3, [pc, #328]	; (8003380 <_ZN15Screen1ViewBaseC1Ev+0x3d4>)
 8003238:	930a      	str	r3, [sp, #40]	; 0x28
    LabelPradLadowania.setTypedText(touchgfx::TypedText(T___SINGLEUSE_OQ6C));
 800323a:	ee19 0a90 	vmov	r0, s19
 800323e:	2314      	movs	r3, #20
 8003240:	a90a      	add	r1, sp, #40	; 0x28
 8003242:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003246:	f00b f867 	bl	800e318 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    txtPradLadowania.setPosition(143, 36, 124, 24);
 800324a:	2018      	movs	r0, #24
 800324c:	2224      	movs	r2, #36	; 0x24
 800324e:	9000      	str	r0, [sp, #0]
 8003250:	237c      	movs	r3, #124	; 0x7c
 8003252:	ee1a 0a10 	vmov	r0, s20
 8003256:	218f      	movs	r1, #143	; 0x8f
 8003258:	f7ff fd97 	bl	8002d8a <_ZN8touchgfx8Drawable11setPositionEssss>
 800325c:	f8d4 325c 	ldr.w	r3, [r4, #604]	; 0x25c
        linespace = space;
 8003260:	f8a4 5290 	strh.w	r5, [r4, #656]	; 0x290
        color = newColor;
 8003264:	f04f 30ff 	mov.w	r0, #4294967295
        boundingArea = calculateBoundingArea();
 8003268:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 800326c:	f8c4 028c 	str.w	r0, [r4, #652]	; 0x28c
        boundingArea = calculateBoundingArea();
 8003270:	ee1a 1a10 	vmov	r1, s20
 8003274:	4630      	mov	r0, r6
 8003276:	4798      	blx	r3
 8003278:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 800327c:	f504 7326 	add.w	r3, r4, #664	; 0x298
 8003280:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    txtPradLadowania.setWildcard(txtPradLadowaniaBuffer);
 8003284:	f504 63b8 	add.w	r3, r4, #1472	; 0x5c0
        wc1 = value;
 8003288:	f8c4 32a4 	str.w	r3, [r4, #676]	; 0x2a4
 800328c:	4b3c      	ldr	r3, [pc, #240]	; (8003380 <_ZN15Screen1ViewBaseC1Ev+0x3d4>)
    txtPradLadowaniaBuffer[0] = 0;
 800328e:	f8a4 55c0 	strh.w	r5, [r4, #1472]	; 0x5c0
    txtPradLadowania.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9VFQ));
 8003292:	ee1a 0a10 	vmov	r0, s20
 8003296:	930a      	str	r3, [sp, #40]	; 0x28
 8003298:	a90a      	add	r1, sp, #40	; 0x28
 800329a:	2313      	movs	r3, #19
 800329c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80032a0:	f00b f83a 	bl	800e318 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    buttonStart.setXY(78, 180);
 80032a4:	ee1a 0a90 	vmov	r0, s21
 80032a8:	22b4      	movs	r2, #180	; 0xb4
 80032aa:	214e      	movs	r1, #78	; 0x4e
 80032ac:	f7ff fd2e 	bl	8002d0c <_ZN8touchgfx8Drawable5setXYEss>
 80032b0:	2301      	movs	r3, #1
    buttonStart.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
 80032b2:	a80a      	add	r0, sp, #40	; 0x28
 80032b4:	4602      	mov	r2, r0
 80032b6:	a909      	add	r1, sp, #36	; 0x24
 80032b8:	ee1a 0a90 	vmov	r0, s21
 80032bc:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80032c0:	2302      	movs	r3, #2
 80032c2:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80032c6:	f00b f882 	bl	800e3ce <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 80032ca:	2312      	movs	r3, #18
        updateTextPosition();
 80032cc:	ee1a 0a90 	vmov	r0, s21
 80032d0:	f8a4 32e0 	strh.w	r3, [r4, #736]	; 0x2e0
 80032d4:	f7ff fdce 	bl	8002e74 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonStart.setAction(buttonCallback);
 80032d8:	f504 63be 	add.w	r3, r4, #1520	; 0x5f0
        color = col;
 80032dc:	f04f 30ff 	mov.w	r0, #4294967295
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 80032e0:	f8c4 32d0 	str.w	r3, [r4, #720]	; 0x2d0
    image3_1.setXY(118, 138);
 80032e4:	228a      	movs	r2, #138	; 0x8a
        colorPressed = col;
 80032e6:	e9c4 00b9 	strd	r0, r0, [r4, #740]	; 0x2e4
 80032ea:	2176      	movs	r1, #118	; 0x76
 80032ec:	ee1d 0a10 	vmov	r0, s26
 80032f0:	f7ff fd0c 	bl	8002d0c <_ZN8touchgfx8Drawable5setXYEss>
 80032f4:	f04f 0103 	mov.w	r1, #3
    image3_1.setBitmap(touchgfx::Bitmap(BITMAP_COUNTER_BOX_ID));
 80032f8:	a80a      	add	r0, sp, #40	; 0x28
 80032fa:	f8ad 1028 	strh.w	r1, [sp, #40]	; 0x28
 80032fe:	4601      	mov	r1, r0
 8003300:	ee1d 0a10 	vmov	r0, s26
 8003304:	f00b fa86 	bl	800e814 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    LabelNapiecieBaterii.setXY(41, 141);
 8003308:	228d      	movs	r2, #141	; 0x8d
 800330a:	ee1b 0a10 	vmov	r0, s22
 800330e:	2129      	movs	r1, #41	; 0x29
 8003310:	f7ff fcfc 	bl	8002d0c <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8003314:	f04f 30ff 	mov.w	r0, #4294967295
        boundingArea = calculateBoundingArea();
 8003318:	ee1b 1a10 	vmov	r1, s22
        color = newColor;
 800331c:	f8c4 034c 	str.w	r0, [r4, #844]	; 0x34c
        linespace = space;
 8003320:	f8a4 5350 	strh.w	r5, [r4, #848]	; 0x350
        boundingArea = calculateBoundingArea();
 8003324:	4630      	mov	r0, r6
 8003326:	f00a fd75 	bl	800de14 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800332a:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 800332e:	f504 7356 	add.w	r3, r4, #856	; 0x358
 8003332:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8003336:	4b12      	ldr	r3, [pc, #72]	; (8003380 <_ZN15Screen1ViewBaseC1Ev+0x3d4>)
 8003338:	930a      	str	r3, [sp, #40]	; 0x28
    LabelNapiecieBaterii.setTypedText(touchgfx::TypedText(T___SINGLEUSE_O6MQ));
 800333a:	a80a      	add	r0, sp, #40	; 0x28
 800333c:	2311      	movs	r3, #17
 800333e:	4601      	mov	r1, r0
 8003340:	ee1b 0a10 	vmov	r0, s22
 8003344:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003348:	f00a ffe6 	bl	800e318 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    txtNapiecieBaterii.setPosition(143, 147, 124, 24);
 800334c:	2018      	movs	r0, #24
 800334e:	2293      	movs	r2, #147	; 0x93
 8003350:	9000      	str	r0, [sp, #0]
 8003352:	237c      	movs	r3, #124	; 0x7c
 8003354:	e016      	b.n	8003384 <_ZN15Screen1ViewBaseC1Ev+0x3d8>
 8003356:	bf00      	nop
 8003358:	08022c3c 	.word	0x08022c3c
 800335c:	08022a40 	.word	0x08022a40
 8003360:	08022c0c 	.word	0x08022c0c
 8003364:	08002cdd 	.word	0x08002cdd
 8003368:	08022c24 	.word	0x08022c24
 800336c:	08002bed 	.word	0x08002bed
 8003370:	ff336699 	.word	0xff336699
 8003374:	ff003366 	.word	0xff003366
 8003378:	ff0099cc 	.word	0xff0099cc
 800337c:	ff006699 	.word	0xff006699
 8003380:	080222dc 	.word	0x080222dc
 8003384:	ee1b 0a90 	vmov	r0, s23
 8003388:	218f      	movs	r1, #143	; 0x8f
 800338a:	f7ff fcfe 	bl	8002d8a <_ZN8touchgfx8Drawable11setPositionEssss>
 800338e:	f8d4 3364 	ldr.w	r3, [r4, #868]	; 0x364
        linespace = space;
 8003392:	f8a4 5398 	strh.w	r5, [r4, #920]	; 0x398
        color = newColor;
 8003396:	f04f 30ff 	mov.w	r0, #4294967295
        boundingArea = calculateBoundingArea();
 800339a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 800339e:	f8c4 0394 	str.w	r0, [r4, #916]	; 0x394
        boundingArea = calculateBoundingArea();
 80033a2:	ee1b 1a90 	vmov	r1, s23
 80033a6:	4630      	mov	r0, r6
 80033a8:	4798      	blx	r3
 80033aa:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 80033ae:	f504 7368 	add.w	r3, r4, #928	; 0x3a0
 80033b2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    txtNapiecieBaterii.setWildcard(txtNapiecieBateriiBuffer);
 80033b6:	f204 53d4 	addw	r3, r4, #1492	; 0x5d4
 80033ba:	f8c4 33ac 	str.w	r3, [r4, #940]	; 0x3ac
    txtNapiecieBaterii.setTypedText(touchgfx::TypedText(T___SINGLEUSE_JY89));
 80033be:	a80a      	add	r0, sp, #40	; 0x28
 80033c0:	4b96      	ldr	r3, [pc, #600]	; (800361c <_ZN15Screen1ViewBaseC1Ev+0x670>)
    txtNapiecieBateriiBuffer[0] = 0;
 80033c2:	f8a4 55d4 	strh.w	r5, [r4, #1492]	; 0x5d4
    txtNapiecieBaterii.setTypedText(touchgfx::TypedText(T___SINGLEUSE_JY89));
 80033c6:	4601      	mov	r1, r0
 80033c8:	930a      	str	r3, [sp, #40]	; 0x28
 80033ca:	ee1b 0a90 	vmov	r0, s23
 80033ce:	2310      	movs	r3, #16
 80033d0:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80033d4:	f00a ffa0 	bl	800e318 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    LabelChargingTime.setXY(6, 86);
 80033d8:	2256      	movs	r2, #86	; 0x56
 80033da:	2106      	movs	r1, #6
 80033dc:	4658      	mov	r0, fp
 80033de:	f7ff fc95 	bl	8002d0c <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80033e2:	f04f 30ff 	mov.w	r0, #4294967295
 80033e6:	f8c4 03e0 	str.w	r0, [r4, #992]	; 0x3e0
        linespace = space;
 80033ea:	f8a4 53e4 	strh.w	r5, [r4, #996]	; 0x3e4
        boundingArea = calculateBoundingArea();
 80033ee:	4659      	mov	r1, fp
 80033f0:	4630      	mov	r0, r6
 80033f2:	f00a fd0f 	bl	800de14 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80033f6:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 80033fa:	f504 737b 	add.w	r3, r4, #1004	; 0x3ec
 80033fe:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    LabelChargingTime.setTypedText(touchgfx::TypedText(T___SINGLEUSE_LNZH));
 8003402:	a80a      	add	r0, sp, #40	; 0x28
 8003404:	4b85      	ldr	r3, [pc, #532]	; (800361c <_ZN15Screen1ViewBaseC1Ev+0x670>)
 8003406:	930a      	str	r3, [sp, #40]	; 0x28
 8003408:	4601      	mov	r1, r0
 800340a:	4658      	mov	r0, fp
 800340c:	f8ad 702c 	strh.w	r7, [sp, #44]	; 0x2c
 8003410:	f00a ff82 	bl	800e318 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    image3_2.setXY(118, 83);
 8003414:	2253      	movs	r2, #83	; 0x53
 8003416:	ee1d 0a90 	vmov	r0, s27
 800341a:	2176      	movs	r1, #118	; 0x76
 800341c:	f7ff fc76 	bl	8002d0c <_ZN8touchgfx8Drawable5setXYEss>
 8003420:	f04f 0103 	mov.w	r1, #3
    image3_2.setBitmap(touchgfx::Bitmap(BITMAP_COUNTER_BOX_ID));
 8003424:	ee1d 0a90 	vmov	r0, s27
 8003428:	f8ad 1028 	strh.w	r1, [sp, #40]	; 0x28
 800342c:	a90a      	add	r1, sp, #40	; 0x28
 800342e:	f00b f9f1 	bl	800e814 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003432:	2117      	movs	r1, #23
 8003434:	462a      	mov	r2, r5
 8003436:	9100      	str	r1, [sp, #0]
 8003438:	232b      	movs	r3, #43	; 0x2b
 800343a:	4629      	mov	r1, r5
 800343c:	f504 608b 	add.w	r0, r4, #1112	; 0x458
 8003440:	f7ff fca3 	bl	8002d8a <_ZN8touchgfx8Drawable11setPositionEssss>
    ButtonDownTime.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8003444:	4b76      	ldr	r3, [pc, #472]	; (8003620 <_ZN15Screen1ViewBaseC1Ev+0x674>)
 8003446:	9300      	str	r3, [sp, #0]
 8003448:	f1a3 1333 	sub.w	r3, r3, #3342387	; 0x330033
 800344c:	f5a3 534c 	sub.w	r3, r3, #13056	; 0x3300
 8003450:	4a74      	ldr	r2, [pc, #464]	; (8003624 <_ZN15Screen1ViewBaseC1Ev+0x678>)
 8003452:	4975      	ldr	r1, [pc, #468]	; (8003628 <_ZN15Screen1ViewBaseC1Ev+0x67c>)
 8003454:	f8a4 7488 	strh.w	r7, [r4, #1160]	; 0x488
 8003458:	4648      	mov	r0, r9
 800345a:	f7ff fd9b 	bl	8002f94 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    ButtonDownTime.setIconBitmaps(Bitmap(BITMAP_DARK_ICONS_DOWN_ARROW_32_ID), Bitmap(BITMAP_DARK_ICONS_DOWN_ARROW_32_ID));
 800345e:	a90a      	add	r1, sp, #40	; 0x28
 8003460:	460a      	mov	r2, r1
 8003462:	4648      	mov	r0, r9
 8003464:	a909      	add	r1, sp, #36	; 0x24
 8003466:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
 800346a:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
 800346e:	f7ff fc5a 	bl	8002d26 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>
    ButtonDownTime.setPosition(273, 105, 43, 23);
 8003472:	2117      	movs	r1, #23
 8003474:	9100      	str	r1, [sp, #0]
 8003476:	232b      	movs	r3, #43	; 0x2b
 8003478:	2269      	movs	r2, #105	; 0x69
 800347a:	f240 1111 	movw	r1, #273	; 0x111
 800347e:	4648      	mov	r0, r9
 8003480:	f8c4 74a4 	str.w	r7, [r4, #1188]	; 0x4a4
 8003484:	f7ff fc81 	bl	8002d8a <_ZN8touchgfx8Drawable11setPositionEssss>
 8003488:	9a03      	ldr	r2, [sp, #12]
 800348a:	f8c4 2454 	str.w	r2, [r4, #1108]	; 0x454
 800348e:	2117      	movs	r1, #23
 8003490:	462a      	mov	r2, r5
 8003492:	9100      	str	r1, [sp, #0]
 8003494:	232b      	movs	r3, #43	; 0x2b
 8003496:	4629      	mov	r1, r5
 8003498:	f504 60a0 	add.w	r0, r4, #1280	; 0x500
 800349c:	f7ff fc75 	bl	8002d8a <_ZN8touchgfx8Drawable11setPositionEssss>
    ButtonUpTime.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 80034a0:	4b5f      	ldr	r3, [pc, #380]	; (8003620 <_ZN15Screen1ViewBaseC1Ev+0x674>)
 80034a2:	9300      	str	r3, [sp, #0]
 80034a4:	f1a3 1333 	sub.w	r3, r3, #3342387	; 0x330033
 80034a8:	f5a3 534c 	sub.w	r3, r3, #13056	; 0x3300
 80034ac:	4a5d      	ldr	r2, [pc, #372]	; (8003624 <_ZN15Screen1ViewBaseC1Ev+0x678>)
 80034ae:	495e      	ldr	r1, [pc, #376]	; (8003628 <_ZN15Screen1ViewBaseC1Ev+0x67c>)
 80034b0:	f8a4 7530 	strh.w	r7, [r4, #1328]	; 0x530
 80034b4:	4640      	mov	r0, r8
 80034b6:	f7ff fd6d 	bl	8002f94 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
 80034ba:	f04f 0206 	mov.w	r2, #6
 80034be:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 80034c2:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
    ButtonUpTime.setIconBitmaps(Bitmap(BITMAP_DARK_ICONS_UP_ARROW_32_ID), Bitmap(BITMAP_DARK_ICONS_UP_ARROW_32_ID));
 80034c6:	a909      	add	r1, sp, #36	; 0x24
 80034c8:	aa0a      	add	r2, sp, #40	; 0x28
 80034ca:	4640      	mov	r0, r8
 80034cc:	f7ff fc2b 	bl	8002d26 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>
 80034d0:	2306      	movs	r3, #6
 80034d2:	f8c4 354c 	str.w	r3, [r4, #1356]	; 0x54c
    ButtonUpTime.setPosition(273, 81, 43, 23);
 80034d6:	2317      	movs	r3, #23
 80034d8:	9300      	str	r3, [sp, #0]
 80034da:	2251      	movs	r2, #81	; 0x51
 80034dc:	232b      	movs	r3, #43	; 0x2b
 80034de:	f240 1111 	movw	r1, #273	; 0x111
 80034e2:	4640      	mov	r0, r8
 80034e4:	f7ff fc51 	bl	8002d8a <_ZN8touchgfx8Drawable11setPositionEssss>
 80034e8:	9b03      	ldr	r3, [sp, #12]
 80034ea:	f8c4 34fc 	str.w	r3, [r4, #1276]	; 0x4fc
    txtChargingTime.setPosition(143, 93, 124, 24);
 80034ee:	2318      	movs	r3, #24
 80034f0:	225d      	movs	r2, #93	; 0x5d
 80034f2:	9300      	str	r3, [sp, #0]
 80034f4:	218f      	movs	r1, #143	; 0x8f
 80034f6:	237c      	movs	r3, #124	; 0x7c
 80034f8:	4650      	mov	r0, sl
 80034fa:	f7ff fc46 	bl	8002d8a <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 80034fe:	f04f 33ff 	mov.w	r3, #4294967295
 8003502:	f8c4 35a4 	str.w	r3, [r4, #1444]	; 0x5a4
        boundingArea = calculateBoundingArea();
 8003506:	f8d4 3574 	ldr.w	r3, [r4, #1396]	; 0x574
        linespace = space;
 800350a:	f8a4 55a8 	strh.w	r5, [r4, #1448]	; 0x5a8
        boundingArea = calculateBoundingArea();
 800350e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8003512:	4651      	mov	r1, sl
 8003514:	4630      	mov	r0, r6
 8003516:	4798      	blx	r3
 8003518:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 800351c:	f504 63b6 	add.w	r3, r4, #1456	; 0x5b0
 8003520:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003524:	4b41      	ldr	r3, [pc, #260]	; (800362c <_ZN15Screen1ViewBaseC1Ev+0x680>)
 8003526:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(txtChargingTimeBuffer, TXTCHARGINGTIME_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_JGTL).getText());
 8003528:	f504 65bd 	add.w	r5, r4, #1512	; 0x5e8
 800352c:	b92b      	cbnz	r3, 800353a <_ZN15Screen1ViewBaseC1Ev+0x58e>
 800352e:	4b40      	ldr	r3, [pc, #256]	; (8003630 <_ZN15Screen1ViewBaseC1Ev+0x684>)
 8003530:	4a40      	ldr	r2, [pc, #256]	; (8003634 <_ZN15Screen1ViewBaseC1Ev+0x688>)
 8003532:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003534:	4840      	ldr	r0, [pc, #256]	; (8003638 <_ZN15Screen1ViewBaseC1Ev+0x68c>)
 8003536:	f01d f9eb 	bl	8020910 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 800353a:	4b40      	ldr	r3, [pc, #256]	; (800363c <_ZN15Screen1ViewBaseC1Ev+0x690>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800353c:	881b      	ldrh	r3, [r3, #0]
 800353e:	2b03      	cmp	r3, #3
 8003540:	d803      	bhi.n	800354a <_ZN15Screen1ViewBaseC1Ev+0x59e>
 8003542:	4b3f      	ldr	r3, [pc, #252]	; (8003640 <_ZN15Screen1ViewBaseC1Ev+0x694>)
 8003544:	4a3b      	ldr	r2, [pc, #236]	; (8003634 <_ZN15Screen1ViewBaseC1Ev+0x688>)
 8003546:	2161      	movs	r1, #97	; 0x61
 8003548:	e7f4      	b.n	8003534 <_ZN15Screen1ViewBaseC1Ev+0x588>
        return texts->getText(typedTextId);
 800354a:	4b3e      	ldr	r3, [pc, #248]	; (8003644 <_ZN15Screen1ViewBaseC1Ev+0x698>)
 800354c:	2103      	movs	r1, #3
 800354e:	6818      	ldr	r0, [r3, #0]
 8003550:	f001 fca2 	bl	8004e98 <_ZNK8touchgfx5Texts7getTextEt>
 8003554:	4a3c      	ldr	r2, [pc, #240]	; (8003648 <_ZN15Screen1ViewBaseC1Ev+0x69c>)
 8003556:	4603      	mov	r3, r0
 8003558:	2103      	movs	r1, #3
 800355a:	4628      	mov	r0, r5
 800355c:	f010 fdc6 	bl	80140ec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8003560:	4b2e      	ldr	r3, [pc, #184]	; (800361c <_ZN15Screen1ViewBaseC1Ev+0x670>)
 8003562:	f8c4 55bc 	str.w	r5, [r4, #1468]	; 0x5bc
 8003566:	930a      	str	r3, [sp, #40]	; 0x28
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 8003568:	1d25      	adds	r5, r4, #4
 800356a:	2304      	movs	r3, #4
    txtChargingTime.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8IRX));
 800356c:	a90a      	add	r1, sp, #40	; 0x28
 800356e:	4650      	mov	r0, sl
 8003570:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003574:	f00a fed0 	bl	800e318 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003578:	ee18 1a10 	vmov	r1, s16
 800357c:	4628      	mov	r0, r5
 800357e:	f007 fad5 	bl	800ab2c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003582:	ee1c 1a10 	vmov	r1, s24
 8003586:	4628      	mov	r0, r5
 8003588:	f007 fad0 	bl	800ab2c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800358c:	ee1c 1a90 	vmov	r1, s25
 8003590:	4628      	mov	r0, r5
 8003592:	f007 facb 	bl	800ab2c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003596:	ee18 1a90 	vmov	r1, s17
 800359a:	4628      	mov	r0, r5
 800359c:	f007 fac6 	bl	800ab2c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80035a0:	ee19 1a10 	vmov	r1, s18
 80035a4:	4628      	mov	r0, r5
 80035a6:	f007 fac1 	bl	800ab2c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80035aa:	ee19 1a90 	vmov	r1, s19
 80035ae:	4628      	mov	r0, r5
 80035b0:	f007 fabc 	bl	800ab2c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80035b4:	ee1a 1a10 	vmov	r1, s20
 80035b8:	4628      	mov	r0, r5
 80035ba:	f007 fab7 	bl	800ab2c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80035be:	ee1a 1a90 	vmov	r1, s21
 80035c2:	4628      	mov	r0, r5
 80035c4:	f007 fab2 	bl	800ab2c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80035c8:	ee1d 1a10 	vmov	r1, s26
 80035cc:	4628      	mov	r0, r5
 80035ce:	f007 faad 	bl	800ab2c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80035d2:	ee1b 1a10 	vmov	r1, s22
 80035d6:	4628      	mov	r0, r5
 80035d8:	f007 faa8 	bl	800ab2c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80035dc:	ee1b 1a90 	vmov	r1, s23
 80035e0:	4628      	mov	r0, r5
 80035e2:	f007 faa3 	bl	800ab2c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80035e6:	4659      	mov	r1, fp
 80035e8:	4628      	mov	r0, r5
 80035ea:	f007 fa9f 	bl	800ab2c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80035ee:	ee1d 1a90 	vmov	r1, s27
 80035f2:	4628      	mov	r0, r5
 80035f4:	f007 fa9a 	bl	800ab2c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80035f8:	4649      	mov	r1, r9
 80035fa:	4628      	mov	r0, r5
 80035fc:	f007 fa96 	bl	800ab2c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003600:	4641      	mov	r1, r8
 8003602:	4628      	mov	r0, r5
 8003604:	f007 fa92 	bl	800ab2c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003608:	4628      	mov	r0, r5
 800360a:	4651      	mov	r1, sl
 800360c:	f007 fa8e 	bl	800ab2c <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8003610:	4620      	mov	r0, r4
 8003612:	b00d      	add	sp, #52	; 0x34
 8003614:	ecbd 8b0c 	vpop	{d8-d13}
 8003618:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800361c:	080222dc 	.word	0x080222dc
 8003620:	ff336699 	.word	0xff336699
 8003624:	ff0099cc 	.word	0xff0099cc
 8003628:	ff006699 	.word	0xff006699
 800362c:	2001565c 	.word	0x2001565c
 8003630:	08022890 	.word	0x08022890
 8003634:	08022992 	.word	0x08022992
 8003638:	0802290d 	.word	0x0802290d
 800363c:	20015660 	.word	0x20015660
 8003640:	08022954 	.word	0x08022954
 8003644:	20015668 	.word	0x20015668
 8003648:	080229ca 	.word	0x080229ca

0800364c <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
 800364c:	2000      	movs	r0, #0
 800364e:	4770      	bx	lr

08003650 <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
    {
        widgetWidth = widgetRect.width;
 8003650:	888b      	ldrh	r3, [r1, #4]
 8003652:	8083      	strh	r3, [r0, #4]
        return true;
    }
 8003654:	2001      	movs	r0, #1
 8003656:	4770      	bx	lr

08003658 <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
 8003658:	4770      	bx	lr

0800365a <_ZN8touchgfx17AbstractDataGraph8setAlphaEh>:
     *
     * @note All graph elements have to take this alpha into consideration.
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 800365a:	f880 102c 	strb.w	r1, [r0, #44]	; 0x2c
    }
 800365e:	4770      	bx	lr

08003660 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>:
     * @param  min The minimum x value.
     * @param  max The maximum x value.
     *
     * @note The graph as well as the area above and below are automatically redrawn (invalidated).
     */
    virtual void setGraphRangeX(int min, int max)
 8003660:	b410      	push	{r4}
    {
        setGraphRangeXScaled(int2scaledX(min), int2scaledX(max));
 8003662:	6803      	ldr	r3, [r0, #0]
     *
     * @note For internal use.
     */
    FORCE_INLINE_FUNCTION int int2scaledX(int i) const
    {
        return int2scaled(i, xScale);
 8003664:	6b04      	ldr	r4, [r0, #48]	; 0x30
        setGraphRangeXScaled(int2scaledX(min), int2scaledX(max));
 8003666:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 800366a:	4362      	muls	r2, r4
 800366c:	4361      	muls	r1, r4
    }
 800366e:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeXScaled(int2scaledX(min), int2scaledX(max));
 8003672:	4718      	bx	r3

08003674 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff>:
     *
     * @return The product of the two numbers, rounded to nearest integer value.
     */
    FORCE_INLINE_FUNCTION static int float2scaled(float f, int scale)
    {
        const float fs = f * (float)scale;
 8003674:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
        setGraphRangeXScaled(float2scaledX(min), float2scaledX(max));
 8003678:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 800367a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setGraphRangeXScaled(float2scaledX(min), float2scaledX(max));
 800367e:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
        const float fs = f * (float)scale;
 8003682:	ee20 0a27 	vmul.f32	s0, s0, s15
        if (fs >= 0)
 8003686:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 800368a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800368e:	db17      	blt.n	80036c0 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff+0x4c>
        {
            return (int)(fs + 0.5f);
 8003690:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8003694:	ee30 0a07 	vadd.f32	s0, s0, s14
 8003698:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 800369c:	ee17 1a10 	vmov	r1, s14
        const float fs = f * (float)scale;
 80036a0:	ee60 0aa7 	vmul.f32	s1, s1, s15
        if (fs >= 0)
 80036a4:	eef5 0ac0 	vcmpe.f32	s1, #0.0
 80036a8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80036ac:	db1c      	blt.n	80036e8 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff+0x74>
            return (int)(fs + 0.5f);
 80036ae:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 80036b2:	ee70 0aa7 	vadd.f32	s1, s1, s15
 80036b6:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 80036ba:	ee17 2a90 	vmov	r2, s15
        setGraphRangeXScaled(float2scaledX(min), float2scaledX(max));
 80036be:	4718      	bx	r3
        }
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 80036c0:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 80036c4:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80036c8:	ee17 2a10 	vmov	r2, s14
 80036cc:	ee30 0a66 	vsub.f32	s0, s0, s13
 80036d0:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80036d4:	ee30 0a26 	vadd.f32	s0, s0, s13
 80036d8:	1e51      	subs	r1, r2, #1
 80036da:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 80036de:	ee10 2a10 	vmov	r2, s0
 80036e2:	440a      	add	r2, r1
 80036e4:	4611      	mov	r1, r2
 80036e6:	e7db      	b.n	80036a0 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff+0x2c>
 80036e8:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 80036ec:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80036f0:	ee17 2a90 	vmov	r2, s15
 80036f4:	ee70 0ac7 	vsub.f32	s1, s1, s14
 80036f8:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 80036fc:	ee70 0a87 	vadd.f32	s1, s1, s14
 8003700:	3a01      	subs	r2, #1
 8003702:	eefd 0ae0 	vcvt.s32.f32	s1, s1
 8003706:	ee10 ca90 	vmov	ip, s1
 800370a:	4494      	add	ip, r2
 800370c:	4662      	mov	r2, ip
 800370e:	e7d6      	b.n	80036be <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff+0x4a>

08003710 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbi>:
    virtual void setGraphRangeXAuto(bool showYaxis = true, int margin = 0)
 8003710:	b410      	push	{r4}
        setGraphRangeXAutoScaled(showYaxis, int2scaledX(margin));
 8003712:	6803      	ldr	r3, [r0, #0]
        return i * scale;
 8003714:	6b04      	ldr	r4, [r0, #48]	; 0x30
        setGraphRangeXAutoScaled(showYaxis, int2scaledX(margin));
 8003716:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800371a:	4362      	muls	r2, r4
    }
 800371c:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeXAutoScaled(showYaxis, int2scaledX(margin));
 8003720:	4718      	bx	r3

08003722 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbf>:
        const float fs = f * (float)scale;
 8003722:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
        setGraphRangeXAutoScaled(showYaxis, float2scaledX(margin));
 8003726:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 8003728:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setGraphRangeXAutoScaled(showYaxis, float2scaledX(margin));
 800372c:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
        const float fs = f * (float)scale;
 8003730:	ee27 0a80 	vmul.f32	s0, s15, s0
        if (fs >= 0)
 8003734:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8003738:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800373c:	db08      	blt.n	8003750 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbf+0x2e>
            return (int)(fs + 0.5f);
 800373e:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8003742:	ee30 0a27 	vadd.f32	s0, s0, s15
 8003746:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 800374a:	ee17 2a90 	vmov	r2, s15
        setGraphRangeXAutoScaled(showYaxis, float2scaledX(margin));
 800374e:	4718      	bx	r3
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8003750:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8003754:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8003758:	ee17 2a90 	vmov	r2, s15
 800375c:	ee30 0a47 	vsub.f32	s0, s0, s14
 8003760:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 8003764:	ee30 0a07 	vadd.f32	s0, s0, s14
 8003768:	3a01      	subs	r2, #1
 800376a:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 800376e:	ee10 ca10 	vmov	ip, s0
 8003772:	4494      	add	ip, r2
 8003774:	4662      	mov	r2, ip
 8003776:	e7ea      	b.n	800374e <_ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbf+0x2c>

08003778 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEii>:
    virtual void setGraphRangeY(int min, int max)
 8003778:	b410      	push	{r4}
        setGraphRangeYScaled(int2scaledY(min), int2scaledY(max));
 800377a:	6803      	ldr	r3, [r0, #0]
        return int2scaled(i, yScale);
 800377c:	6b44      	ldr	r4, [r0, #52]	; 0x34
        setGraphRangeYScaled(int2scaledY(min), int2scaledY(max));
 800377e:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8003782:	4362      	muls	r2, r4
 8003784:	4361      	muls	r1, r4
    }
 8003786:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeYScaled(int2scaledY(min), int2scaledY(max));
 800378a:	4718      	bx	r3

0800378c <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff>:
        const float fs = f * (float)scale;
 800378c:	edd0 7a0d 	vldr	s15, [r0, #52]	; 0x34
        setGraphRangeYScaled(float2scaledY(min), float2scaledY(max));
 8003790:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 8003792:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setGraphRangeYScaled(float2scaledY(min), float2scaledY(max));
 8003796:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
        const float fs = f * (float)scale;
 800379a:	ee20 0a27 	vmul.f32	s0, s0, s15
        if (fs >= 0)
 800379e:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80037a2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80037a6:	db17      	blt.n	80037d8 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff+0x4c>
            return (int)(fs + 0.5f);
 80037a8:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80037ac:	ee30 0a07 	vadd.f32	s0, s0, s14
 80037b0:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 80037b4:	ee17 1a10 	vmov	r1, s14
        const float fs = f * (float)scale;
 80037b8:	ee60 0aa7 	vmul.f32	s1, s1, s15
        if (fs >= 0)
 80037bc:	eef5 0ac0 	vcmpe.f32	s1, #0.0
 80037c0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80037c4:	db1c      	blt.n	8003800 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff+0x74>
            return (int)(fs + 0.5f);
 80037c6:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 80037ca:	ee70 0aa7 	vadd.f32	s1, s1, s15
 80037ce:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 80037d2:	ee17 2a90 	vmov	r2, s15
        setGraphRangeYScaled(float2scaledY(min), float2scaledY(max));
 80037d6:	4718      	bx	r3
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 80037d8:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 80037dc:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80037e0:	ee17 2a10 	vmov	r2, s14
 80037e4:	ee30 0a66 	vsub.f32	s0, s0, s13
 80037e8:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80037ec:	ee30 0a26 	vadd.f32	s0, s0, s13
 80037f0:	1e51      	subs	r1, r2, #1
 80037f2:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 80037f6:	ee10 2a10 	vmov	r2, s0
 80037fa:	440a      	add	r2, r1
 80037fc:	4611      	mov	r1, r2
 80037fe:	e7db      	b.n	80037b8 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff+0x2c>
 8003800:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 8003804:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8003808:	ee17 2a90 	vmov	r2, s15
 800380c:	ee70 0ac7 	vsub.f32	s1, s1, s14
 8003810:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 8003814:	ee70 0a87 	vadd.f32	s1, s1, s14
 8003818:	3a01      	subs	r2, #1
 800381a:	eefd 0ae0 	vcvt.s32.f32	s1, s1
 800381e:	ee10 ca90 	vmov	ip, s1
 8003822:	4494      	add	ip, r2
 8003824:	4662      	mov	r2, ip
 8003826:	e7d6      	b.n	80037d6 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff+0x4a>

08003828 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbi>:
    virtual void setGraphRangeYAuto(bool showXaxis = true, int margin = 0)
 8003828:	b410      	push	{r4}
        setGraphRangeYAutoScaled(showXaxis, int2scaledY(margin));
 800382a:	6803      	ldr	r3, [r0, #0]
        return i * scale;
 800382c:	6b44      	ldr	r4, [r0, #52]	; 0x34
        setGraphRangeYAutoScaled(showXaxis, int2scaledY(margin));
 800382e:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 8003832:	4362      	muls	r2, r4
    }
 8003834:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeYAutoScaled(showXaxis, int2scaledY(margin));
 8003838:	4718      	bx	r3

0800383a <_ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbf>:
        const float fs = f * (float)scale;
 800383a:	edd0 7a0d 	vldr	s15, [r0, #52]	; 0x34
        setGraphRangeYAutoScaled(showXaxis, float2scaledY(margin));
 800383e:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 8003840:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setGraphRangeYAutoScaled(showXaxis, float2scaledY(margin));
 8003844:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
        const float fs = f * (float)scale;
 8003848:	ee27 0a80 	vmul.f32	s0, s15, s0
        if (fs >= 0)
 800384c:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8003850:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003854:	db08      	blt.n	8003868 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbf+0x2e>
            return (int)(fs + 0.5f);
 8003856:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 800385a:	ee30 0a27 	vadd.f32	s0, s0, s15
 800385e:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8003862:	ee17 2a90 	vmov	r2, s15
        setGraphRangeYAutoScaled(showXaxis, float2scaledY(margin));
 8003866:	4718      	bx	r3
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8003868:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 800386c:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8003870:	ee17 2a90 	vmov	r2, s15
 8003874:	ee30 0a47 	vsub.f32	s0, s0, s14
 8003878:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 800387c:	ee30 0a07 	vadd.f32	s0, s0, s14
 8003880:	3a01      	subs	r2, #1
 8003882:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8003886:	ee10 ca10 	vmov	ip, s0
 800388a:	4494      	add	ip, r2
 800388c:	4662      	mov	r2, ip
 800388e:	e7ea      	b.n	8003866 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbf+0x2c>

08003890 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMinAsIntEv>:
        return scaled2intX(graphRangeMinX);
 8003890:	f8d0 312c 	ldr.w	r3, [r0, #300]	; 0x12c
     *
     * @note For internal use.
     */
    FORCE_INLINE_FUNCTION int scaled2intX(int i) const
    {
        return scaled2int(i, xScale);
 8003894:	6b02      	ldr	r2, [r0, #48]	; 0x30
        if (i >= 0)
 8003896:	2b00      	cmp	r3, #0
 8003898:	db07      	blt.n	80038aa <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMinAsIntEv+0x1a>
            return ((i * 2 + scale) / scale) / 2;
 800389a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 800389e:	fb93 f0f2 	sdiv	r0, r3, r2
 80038a2:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 80038a6:	1040      	asrs	r0, r0, #1
 80038a8:	4770      	bx	lr
        return -(((-i * 2 + scale - 1) / scale) / 2);
 80038aa:	f06f 0001 	mvn.w	r0, #1
 80038ae:	fb00 2003 	mla	r0, r0, r3, r2
 80038b2:	3801      	subs	r0, #1
 80038b4:	fb90 f0f2 	sdiv	r0, r0, r2
 80038b8:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 80038bc:	1040      	asrs	r0, r0, #1
 80038be:	4240      	negs	r0, r0
    }
 80038c0:	4770      	bx	lr

080038c2 <_ZNK8touchgfx17AbstractDataGraph24getGraphRangeXMinAsFloatEv>:
     *
     * @return The number divided by the scale.
     */
    FORCE_INLINE_FUNCTION static float scaled2float(int i, int scale)
    {
        return (float)i / (float)scale;
 80038c2:	edd0 7a4b 	vldr	s15, [r0, #300]	; 0x12c
 80038c6:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 80038ca:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
 80038ce:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 80038d2:	ee80 0a27 	vdiv.f32	s0, s0, s15
 80038d6:	4770      	bx	lr

080038d8 <_ZNK8touchgfx17AbstractDataGraph23getGraphRangeXMinScaledEv>:
    }
 80038d8:	f8d0 012c 	ldr.w	r0, [r0, #300]	; 0x12c
 80038dc:	4770      	bx	lr

080038de <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMaxAsIntEv>:
        return scaled2intX(graphRangeMaxX);
 80038de:	f8d0 3130 	ldr.w	r3, [r0, #304]	; 0x130
        return scaled2int(i, xScale);
 80038e2:	6b02      	ldr	r2, [r0, #48]	; 0x30
        if (i >= 0)
 80038e4:	2b00      	cmp	r3, #0
 80038e6:	db07      	blt.n	80038f8 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMaxAsIntEv+0x1a>
            return ((i * 2 + scale) / scale) / 2;
 80038e8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80038ec:	fb93 f0f2 	sdiv	r0, r3, r2
 80038f0:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 80038f4:	1040      	asrs	r0, r0, #1
 80038f6:	4770      	bx	lr
        return -(((-i * 2 + scale - 1) / scale) / 2);
 80038f8:	f06f 0001 	mvn.w	r0, #1
 80038fc:	fb00 2003 	mla	r0, r0, r3, r2
 8003900:	3801      	subs	r0, #1
 8003902:	fb90 f0f2 	sdiv	r0, r0, r2
 8003906:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 800390a:	1040      	asrs	r0, r0, #1
 800390c:	4240      	negs	r0, r0
    }
 800390e:	4770      	bx	lr

08003910 <_ZNK8touchgfx17AbstractDataGraph24getGraphRangeXMaxAsFloatEv>:
        return (float)i / (float)scale;
 8003910:	edd0 7a4c 	vldr	s15, [r0, #304]	; 0x130
 8003914:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8003918:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
 800391c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 8003920:	ee80 0a27 	vdiv.f32	s0, s0, s15
 8003924:	4770      	bx	lr

08003926 <_ZNK8touchgfx17AbstractDataGraph23getGraphRangeXMaxScaledEv>:
    }
 8003926:	f8d0 0130 	ldr.w	r0, [r0, #304]	; 0x130
 800392a:	4770      	bx	lr

0800392c <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMinAsIntEv>:
        return scaled2intY(graphRangeMinY);
 800392c:	f8d0 3134 	ldr.w	r3, [r0, #308]	; 0x134
        return scaled2int(i, yScale);
 8003930:	6b42      	ldr	r2, [r0, #52]	; 0x34
        if (i >= 0)
 8003932:	2b00      	cmp	r3, #0
 8003934:	db07      	blt.n	8003946 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMinAsIntEv+0x1a>
            return ((i * 2 + scale) / scale) / 2;
 8003936:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 800393a:	fb93 f0f2 	sdiv	r0, r3, r2
 800393e:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003942:	1040      	asrs	r0, r0, #1
 8003944:	4770      	bx	lr
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8003946:	f06f 0001 	mvn.w	r0, #1
 800394a:	fb00 2003 	mla	r0, r0, r3, r2
 800394e:	3801      	subs	r0, #1
 8003950:	fb90 f0f2 	sdiv	r0, r0, r2
 8003954:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003958:	1040      	asrs	r0, r0, #1
 800395a:	4240      	negs	r0, r0
    }
 800395c:	4770      	bx	lr

0800395e <_ZNK8touchgfx17AbstractDataGraph24getGraphRangeYMinAsFloatEv>:
        return (float)i / (float)scale;
 800395e:	edd0 7a4d 	vldr	s15, [r0, #308]	; 0x134
 8003962:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8003966:	edd0 7a0d 	vldr	s15, [r0, #52]	; 0x34
 800396a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 800396e:	ee80 0a27 	vdiv.f32	s0, s0, s15
 8003972:	4770      	bx	lr

08003974 <_ZNK8touchgfx17AbstractDataGraph23getGraphRangeYMinScaledEv>:
    }
 8003974:	f8d0 0134 	ldr.w	r0, [r0, #308]	; 0x134
 8003978:	4770      	bx	lr

0800397a <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMaxAsIntEv>:
        return scaled2intY(graphRangeMaxY);
 800397a:	f8d0 3138 	ldr.w	r3, [r0, #312]	; 0x138
        return scaled2int(i, yScale);
 800397e:	6b42      	ldr	r2, [r0, #52]	; 0x34
        if (i >= 0)
 8003980:	2b00      	cmp	r3, #0
 8003982:	db07      	blt.n	8003994 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMaxAsIntEv+0x1a>
            return ((i * 2 + scale) / scale) / 2;
 8003984:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8003988:	fb93 f0f2 	sdiv	r0, r3, r2
 800398c:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003990:	1040      	asrs	r0, r0, #1
 8003992:	4770      	bx	lr
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8003994:	f06f 0001 	mvn.w	r0, #1
 8003998:	fb00 2003 	mla	r0, r0, r3, r2
 800399c:	3801      	subs	r0, #1
 800399e:	fb90 f0f2 	sdiv	r0, r0, r2
 80039a2:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 80039a6:	1040      	asrs	r0, r0, #1
 80039a8:	4240      	negs	r0, r0
    }
 80039aa:	4770      	bx	lr

080039ac <_ZNK8touchgfx17AbstractDataGraph24getGraphRangeYMaxAsFloatEv>:
        return (float)i / (float)scale;
 80039ac:	edd0 7a4e 	vldr	s15, [r0, #312]	; 0x138
 80039b0:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 80039b4:	edd0 7a0d 	vldr	s15, [r0, #52]	; 0x34
 80039b8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 80039bc:	ee80 0a27 	vdiv.f32	s0, s0, s15
 80039c0:	4770      	bx	lr

080039c2 <_ZNK8touchgfx17AbstractDataGraph23getGraphRangeYMaxScaledEv>:
    }
 80039c2:	f8d0 0138 	ldr.w	r0, [r0, #312]	; 0x138
 80039c6:	4770      	bx	lr

080039c8 <_ZN8touchgfx16DynamicDataGraph8setScaleEib>:
     * @see getScale
     *
     * @note The current xAxisFactor, xAxisOffet and xGraphRange values are updated to reflect the
     *       new scale being set.
     */
    virtual void setScale(int scale, bool updateData = false)
 80039c8:	b570      	push	{r4, r5, r6, lr}
    {
        setScaleX(scale, updateData);
 80039ca:	6803      	ldr	r3, [r0, #0]
    virtual void setScale(int scale, bool updateData = false)
 80039cc:	4604      	mov	r4, r0
        setScaleX(scale, updateData);
 80039ce:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
    virtual void setScale(int scale, bool updateData = false)
 80039d2:	460d      	mov	r5, r1
 80039d4:	4616      	mov	r6, r2
        setScaleX(scale, updateData);
 80039d6:	4798      	blx	r3
        setScaleY(scale, updateData);
 80039d8:	6823      	ldr	r3, [r4, #0]
 80039da:	4632      	mov	r2, r6
 80039dc:	4629      	mov	r1, r5
 80039de:	4620      	mov	r0, r4
 80039e0:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
    }
 80039e4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setScaleY(scale, updateData);
 80039e8:	4718      	bx	r3

080039ea <_ZNK8touchgfx16DynamicDataGraph8getScaleEv>:
     *
     * @see setScale
     */
    virtual int getScale() const
    {
        return getScaleY();
 80039ea:	6803      	ldr	r3, [r0, #0]
 80039ec:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 80039f0:	4718      	bx	r3

080039f2 <_ZNK8touchgfx16DynamicDataGraph17getGraphRangeXMinEv>:
     *
     * @return The minimum x coordinate .
     */
    virtual int getGraphRangeXMin() const
    {
        return getGraphRangeXMinScaled();
 80039f2:	6803      	ldr	r3, [r0, #0]
 80039f4:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
 80039f8:	4718      	bx	r3

080039fa <_ZNK8touchgfx16DynamicDataGraph17getGraphRangeXMaxEv>:
     *
     * @return The maximum x coordinate .
     */
    virtual int getGraphRangeXMax() const
    {
        return getGraphRangeXMaxScaled();
 80039fa:	6803      	ldr	r3, [r0, #0]
 80039fc:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8003a00:	4718      	bx	r3

08003a02 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeXAutoScaledEbi>:

    virtual void setGraphRangeYAutoScaled(bool showXaxis, int margin);

    virtual void setGraphRangeXAutoScaled(bool /*showYaxis*/, int margin)
    {
        setGraphRangeXScaled(-scaled2intX(margin), (usedCapacity - 1) + scaled2intX(margin));
 8003a02:	6803      	ldr	r3, [r0, #0]
        if (i >= 0)
 8003a04:	2a00      	cmp	r2, #0
    virtual void setGraphRangeXAutoScaled(bool /*showYaxis*/, int margin)
 8003a06:	b410      	push	{r4}
        setGraphRangeXScaled(-scaled2intX(margin), (usedCapacity - 1) + scaled2intX(margin));
 8003a08:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
        return scaled2int(i, xScale);
 8003a0c:	6b04      	ldr	r4, [r0, #48]	; 0x30
        if (i >= 0)
 8003a0e:	db0e      	blt.n	8003a2e <_ZN8touchgfx16DynamicDataGraph24setGraphRangeXAutoScaledEbi+0x2c>
            return ((i * 2 + scale) / scale) / 2;
 8003a10:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8003a14:	fb92 f1f4 	sdiv	r1, r2, r4
 8003a18:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8003a1c:	1049      	asrs	r1, r1, #1
        setGraphRangeXScaled(-scaled2intX(margin), (usedCapacity - 1) + scaled2intX(margin));
 8003a1e:	f9b0 211e 	ldrsh.w	r2, [r0, #286]	; 0x11e
    }
 8003a22:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeXScaled(-scaled2intX(margin), (usedCapacity - 1) + scaled2intX(margin));
 8003a26:	3a01      	subs	r2, #1
 8003a28:	440a      	add	r2, r1
 8003a2a:	4249      	negs	r1, r1
 8003a2c:	4718      	bx	r3
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8003a2e:	f06f 0101 	mvn.w	r1, #1
 8003a32:	fb01 4102 	mla	r1, r1, r2, r4
 8003a36:	3901      	subs	r1, #1
 8003a38:	fb91 f1f4 	sdiv	r1, r1, r4
 8003a3c:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8003a40:	1049      	asrs	r1, r1, #1
 8003a42:	4249      	negs	r1, r1
 8003a44:	e7eb      	b.n	8003a1e <_ZN8touchgfx16DynamicDataGraph24setGraphRangeXAutoScaledEbi+0x1c>

08003a46 <_ZN8touchgfx16DynamicDataGraph13setXAxisScaleEi>:

    /// @cond
    TOUCHGFX_DEPRECATED("Please use setXAxisFactor()", virtual void setXAxisScale(int scale))
    {
        setXAxisFactor(scale);
 8003a46:	6803      	ldr	r3, [r0, #0]
 8003a48:	f8d3 313c 	ldr.w	r3, [r3, #316]	; 0x13c
 8003a4c:	4718      	bx	r3

08003a4e <_ZN8touchgfx16DynamicDataGraph14setXAxisFactorEi>:
        return i * scale;
 8003a4e:	6b02      	ldr	r2, [r0, #48]	; 0x30
     *
     * @param  factor The x axis factor.
     */
    virtual void setXAxisFactor(int factor)
    {
        setXAxisFactorScaled(int2scaledX(factor));
 8003a50:	6803      	ldr	r3, [r0, #0]
 8003a52:	4351      	muls	r1, r2
 8003a54:	f8d3 3148 	ldr.w	r3, [r3, #328]	; 0x148
 8003a58:	4718      	bx	r3

08003a5a <_ZN8touchgfx16DynamicDataGraph13setXAxisScaleEf>:
    }

    /// @cond
    TOUCHGFX_DEPRECATED("Please use setXAxisFactor()", virtual void setXAxisScale(float scale))
    {
        setXAxisFactor(scale);
 8003a5a:	6803      	ldr	r3, [r0, #0]
 8003a5c:	f8d3 3144 	ldr.w	r3, [r3, #324]	; 0x144
 8003a60:	4718      	bx	r3

08003a62 <_ZN8touchgfx16DynamicDataGraph14setXAxisFactorEf>:
        const float fs = f * (float)scale;
 8003a62:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
    /// @endcond

    /** @copydoc setXAxisFactor(int) */
    virtual void setXAxisFactor(float factor)
    {
        setXAxisFactorScaled(float2scaledX(factor));
 8003a66:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 8003a68:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setXAxisFactorScaled(float2scaledX(factor));
 8003a6c:	f8d3 3148 	ldr.w	r3, [r3, #328]	; 0x148
        const float fs = f * (float)scale;
 8003a70:	ee27 0a80 	vmul.f32	s0, s15, s0
        if (fs >= 0)
 8003a74:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8003a78:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003a7c:	db08      	blt.n	8003a90 <_ZN8touchgfx16DynamicDataGraph14setXAxisFactorEf+0x2e>
            return (int)(fs + 0.5f);
 8003a7e:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8003a82:	ee30 0a27 	vadd.f32	s0, s0, s15
 8003a86:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8003a8a:	ee17 1a90 	vmov	r1, s15
        setXAxisFactorScaled(float2scaledX(factor));
 8003a8e:	4718      	bx	r3
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8003a90:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8003a94:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8003a98:	ee17 2a90 	vmov	r2, s15
 8003a9c:	ee30 0a47 	vsub.f32	s0, s0, s14
 8003aa0:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 8003aa4:	ee30 0a07 	vadd.f32	s0, s0, s14
 8003aa8:	1e51      	subs	r1, r2, #1
 8003aaa:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8003aae:	ee10 2a10 	vmov	r2, s0
 8003ab2:	440a      	add	r2, r1
 8003ab4:	4611      	mov	r1, r2
 8003ab6:	e7ea      	b.n	8003a8e <_ZN8touchgfx16DynamicDataGraph14setXAxisFactorEf+0x2c>

08003ab8 <_ZN8touchgfx16DynamicDataGraph20setXAxisFactorScaledEi>:
     *
     * @see setXAxisFactorScaled,setXAxisFactor
     */
    virtual void setXAxisFactorScaled(int factor)
    {
        xAxisFactor = factor;
 8003ab8:	f8c0 113c 	str.w	r1, [r0, #316]	; 0x13c
    }
 8003abc:	4770      	bx	lr

08003abe <_ZNK8touchgfx16DynamicDataGraph18getXAxisScaleAsIntEv>:

    /// @cond
    TOUCHGFX_DEPRECATED("Please use getXAxisFactorAsInt()", virtual int getXAxisScaleAsInt() const)
    {
        return getXAxisFactorAsInt();
 8003abe:	6803      	ldr	r3, [r0, #0]
 8003ac0:	f8d3 3150 	ldr.w	r3, [r3, #336]	; 0x150
 8003ac4:	4718      	bx	r3

08003ac6 <_ZNK8touchgfx16DynamicDataGraph19getXAxisFactorAsIntEv>:
     *
     * @return The x axis factor.
     */
    virtual int getXAxisFactorAsInt() const
    {
        return scaled2intX(getXAxisFactorScaled());
 8003ac6:	6803      	ldr	r3, [r0, #0]
    virtual int getXAxisFactorAsInt() const
 8003ac8:	b510      	push	{r4, lr}
        return scaled2intX(getXAxisFactorScaled());
 8003aca:	f8d3 315c 	ldr.w	r3, [r3, #348]	; 0x15c
    virtual int getXAxisFactorAsInt() const
 8003ace:	4604      	mov	r4, r0
        return scaled2intX(getXAxisFactorScaled());
 8003ad0:	4798      	blx	r3
        if (i >= 0)
 8003ad2:	2800      	cmp	r0, #0
        return scaled2int(i, xScale);
 8003ad4:	6b23      	ldr	r3, [r4, #48]	; 0x30
        if (i >= 0)
 8003ad6:	db07      	blt.n	8003ae8 <_ZNK8touchgfx16DynamicDataGraph19getXAxisFactorAsIntEv+0x22>
            return ((i * 2 + scale) / scale) / 2;
 8003ad8:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8003adc:	fb90 f0f3 	sdiv	r0, r0, r3
 8003ae0:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003ae4:	1040      	asrs	r0, r0, #1
    }
 8003ae6:	bd10      	pop	{r4, pc}
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8003ae8:	f06f 0201 	mvn.w	r2, #1
 8003aec:	fb02 3000 	mla	r0, r2, r0, r3
 8003af0:	3801      	subs	r0, #1
 8003af2:	fb90 f0f3 	sdiv	r0, r0, r3
 8003af6:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003afa:	1040      	asrs	r0, r0, #1
 8003afc:	4240      	negs	r0, r0
        return scaled2intX(getXAxisFactorScaled());
 8003afe:	e7f2      	b.n	8003ae6 <_ZNK8touchgfx16DynamicDataGraph19getXAxisFactorAsIntEv+0x20>

08003b00 <_ZNK8touchgfx16DynamicDataGraph20getXAxisScaleAsFloatEv>:

    /// @cond
    TOUCHGFX_DEPRECATED("Please use getXAxisFactorAsFloat()", virtual float getXAxisScaleAsFloat() const)
    {
        return getXAxisFactorAsFloat();
 8003b00:	6803      	ldr	r3, [r0, #0]
 8003b02:	f8d3 3158 	ldr.w	r3, [r3, #344]	; 0x158
 8003b06:	4718      	bx	r3

08003b08 <_ZNK8touchgfx16DynamicDataGraph21getXAxisFactorAsFloatEv>:
    /// @endcond

    /** @copydoc getXAxisFactorAsInt() */
    virtual float getXAxisFactorAsFloat() const
    {
        return scaled2floatX(getXAxisFactorScaled());
 8003b08:	6803      	ldr	r3, [r0, #0]
    virtual float getXAxisFactorAsFloat() const
 8003b0a:	b510      	push	{r4, lr}
        return scaled2floatX(getXAxisFactorScaled());
 8003b0c:	f8d3 315c 	ldr.w	r3, [r3, #348]	; 0x15c
    virtual float getXAxisFactorAsFloat() const
 8003b10:	4604      	mov	r4, r0
        return scaled2floatX(getXAxisFactorScaled());
 8003b12:	4798      	blx	r3
        return (float)i / (float)scale;
 8003b14:	ee07 0a90 	vmov	s15, r0
 8003b18:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8003b1c:	edd4 7a0c 	vldr	s15, [r4, #48]	; 0x30
 8003b20:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 8003b24:	ee80 0a27 	vdiv.f32	s0, s0, s15
 8003b28:	bd10      	pop	{r4, pc}

08003b2a <_ZNK8touchgfx16DynamicDataGraph20getXAxisFactorScaledEv>:
     * @see getXAxisFactorAsInt, getXAxisFactorAsFloat, setXAxisFactor
     */
    virtual int getXAxisFactorScaled() const
    {
        return xAxisFactor;
    }
 8003b2a:	f8d0 013c 	ldr.w	r0, [r0, #316]	; 0x13c
 8003b2e:	4770      	bx	lr

08003b30 <_ZN8touchgfx16DynamicDataGraph14setXAxisOffsetEi>:
        return i * scale;
 8003b30:	6b02      	ldr	r2, [r0, #48]	; 0x30
     *
     * @param  offset The x axis offset.
     */
    virtual void setXAxisOffset(int offset)
    {
        setXAxisOffsetScaled(int2scaledX(offset));
 8003b32:	6803      	ldr	r3, [r0, #0]
 8003b34:	4351      	muls	r1, r2
 8003b36:	f8d3 3168 	ldr.w	r3, [r3, #360]	; 0x168
 8003b3a:	4718      	bx	r3

08003b3c <_ZN8touchgfx16DynamicDataGraph14setXAxisOffsetEf>:
        const float fs = f * (float)scale;
 8003b3c:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
    }

    /** @copydoc setXAxisOffset(int) */
    virtual void setXAxisOffset(float offset)
    {
        setXAxisOffsetScaled(float2scaledX(offset));
 8003b40:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 8003b42:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setXAxisOffsetScaled(float2scaledX(offset));
 8003b46:	f8d3 3168 	ldr.w	r3, [r3, #360]	; 0x168
        const float fs = f * (float)scale;
 8003b4a:	ee27 0a80 	vmul.f32	s0, s15, s0
        if (fs >= 0)
 8003b4e:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8003b52:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003b56:	db08      	blt.n	8003b6a <_ZN8touchgfx16DynamicDataGraph14setXAxisOffsetEf+0x2e>
            return (int)(fs + 0.5f);
 8003b58:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8003b5c:	ee30 0a27 	vadd.f32	s0, s0, s15
 8003b60:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8003b64:	ee17 1a90 	vmov	r1, s15
        setXAxisOffsetScaled(float2scaledX(offset));
 8003b68:	4718      	bx	r3
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8003b6a:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8003b6e:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8003b72:	ee17 2a90 	vmov	r2, s15
 8003b76:	ee30 0a47 	vsub.f32	s0, s0, s14
 8003b7a:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 8003b7e:	ee30 0a07 	vadd.f32	s0, s0, s14
 8003b82:	1e51      	subs	r1, r2, #1
 8003b84:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8003b88:	ee10 2a10 	vmov	r2, s0
 8003b8c:	440a      	add	r2, r1
 8003b8e:	4611      	mov	r1, r2
 8003b90:	e7ea      	b.n	8003b68 <_ZN8touchgfx16DynamicDataGraph14setXAxisOffsetEf+0x2c>

08003b92 <_ZN8touchgfx16DynamicDataGraph20setXAxisOffsetScaledEi>:
     *
     * @see setXAxisOffset, getXAxisOffsetScaled
     */
    virtual void setXAxisOffsetScaled(int offset)
    {
        xAxisOffset = offset;
 8003b92:	f8c0 1140 	str.w	r1, [r0, #320]	; 0x140
    }
 8003b96:	4770      	bx	lr

08003b98 <_ZNK8touchgfx16DynamicDataGraph19getXAxisOffsetAsIntEv>:
     *
     * @return The x axis offset.
     */
    virtual int getXAxisOffsetAsInt() const
    {
        return scaled2intX(getXAxisOffsetScaled());
 8003b98:	6803      	ldr	r3, [r0, #0]
    virtual int getXAxisOffsetAsInt() const
 8003b9a:	b510      	push	{r4, lr}
        return scaled2intX(getXAxisOffsetScaled());
 8003b9c:	f8d3 3174 	ldr.w	r3, [r3, #372]	; 0x174
    virtual int getXAxisOffsetAsInt() const
 8003ba0:	4604      	mov	r4, r0
        return scaled2intX(getXAxisOffsetScaled());
 8003ba2:	4798      	blx	r3
        if (i >= 0)
 8003ba4:	2800      	cmp	r0, #0
        return scaled2int(i, xScale);
 8003ba6:	6b23      	ldr	r3, [r4, #48]	; 0x30
        if (i >= 0)
 8003ba8:	db07      	blt.n	8003bba <_ZNK8touchgfx16DynamicDataGraph19getXAxisOffsetAsIntEv+0x22>
            return ((i * 2 + scale) / scale) / 2;
 8003baa:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8003bae:	fb90 f0f3 	sdiv	r0, r0, r3
 8003bb2:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003bb6:	1040      	asrs	r0, r0, #1
    }
 8003bb8:	bd10      	pop	{r4, pc}
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8003bba:	f06f 0201 	mvn.w	r2, #1
 8003bbe:	fb02 3000 	mla	r0, r2, r0, r3
 8003bc2:	3801      	subs	r0, #1
 8003bc4:	fb90 f0f3 	sdiv	r0, r0, r3
 8003bc8:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003bcc:	1040      	asrs	r0, r0, #1
 8003bce:	4240      	negs	r0, r0
        return scaled2intX(getXAxisOffsetScaled());
 8003bd0:	e7f2      	b.n	8003bb8 <_ZNK8touchgfx16DynamicDataGraph19getXAxisOffsetAsIntEv+0x20>

08003bd2 <_ZNK8touchgfx16DynamicDataGraph21getXAxisOffsetAsFloatEv>:

    /** @copydoc getXAxisOffsetAsInt() */
    virtual float getXAxisOffsetAsFloat() const
    {
        return scaled2floatX(getXAxisOffsetScaled());
 8003bd2:	6803      	ldr	r3, [r0, #0]
    virtual float getXAxisOffsetAsFloat() const
 8003bd4:	b510      	push	{r4, lr}
        return scaled2floatX(getXAxisOffsetScaled());
 8003bd6:	f8d3 3174 	ldr.w	r3, [r3, #372]	; 0x174
    virtual float getXAxisOffsetAsFloat() const
 8003bda:	4604      	mov	r4, r0
        return scaled2floatX(getXAxisOffsetScaled());
 8003bdc:	4798      	blx	r3
        return (float)i / (float)scale;
 8003bde:	ee07 0a90 	vmov	s15, r0
 8003be2:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8003be6:	edd4 7a0c 	vldr	s15, [r4, #48]	; 0x30
 8003bea:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 8003bee:	ee80 0a27 	vdiv.f32	s0, s0, s15
 8003bf2:	bd10      	pop	{r4, pc}

08003bf4 <_ZNK8touchgfx16DynamicDataGraph20getXAxisOffsetScaledEv>:
     * @see getXAxisOffsetAsInt, getXAxisOffsetAsFloat, setXAxisOffsetScaled, setXAxisOffset
     */
    virtual int getXAxisOffsetScaled() const
    {
        return xAxisOffset;
    }
 8003bf4:	f8d0 0140 	ldr.w	r0, [r0, #320]	; 0x140
 8003bf8:	4770      	bx	lr

08003bfa <_ZNK8touchgfx16DynamicDataGraph12indexToXAxisEii>:
    }

    virtual int indexToXAxis(const int valueScaled, const int /*labelScaled*/) const
    {
        // Value is also index for these types of graphs.
        return (indexToGlobalIndex(scaled2intX(valueScaled)) * xAxisFactor) + xAxisOffset;
 8003bfa:	6803      	ldr	r3, [r0, #0]
        return scaled2int(i, xScale);
 8003bfc:	6b02      	ldr	r2, [r0, #48]	; 0x30
        return (indexToGlobalIndex(scaled2intX(valueScaled)) * xAxisFactor) + xAxisOffset;
 8003bfe:	f8d3 3184 	ldr.w	r3, [r3, #388]	; 0x184
        if (i >= 0)
 8003c02:	2900      	cmp	r1, #0
    virtual int indexToXAxis(const int valueScaled, const int /*labelScaled*/) const
 8003c04:	b510      	push	{r4, lr}
 8003c06:	4604      	mov	r4, r0
        if (i >= 0)
 8003c08:	db0e      	blt.n	8003c28 <_ZNK8touchgfx16DynamicDataGraph12indexToXAxisEii+0x2e>
            return ((i * 2 + scale) / scale) / 2;
 8003c0a:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 8003c0e:	fb91 f1f2 	sdiv	r1, r1, r2
 8003c12:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8003c16:	1049      	asrs	r1, r1, #1
        return (indexToGlobalIndex(scaled2intX(valueScaled)) * xAxisFactor) + xAxisOffset;
 8003c18:	b209      	sxth	r1, r1
 8003c1a:	4620      	mov	r0, r4
 8003c1c:	4798      	blx	r3
 8003c1e:	e9d4 234f 	ldrd	r2, r3, [r4, #316]	; 0x13c
    }
 8003c22:	fb02 3000 	mla	r0, r2, r0, r3
 8003c26:	bd10      	pop	{r4, pc}
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8003c28:	f06f 0001 	mvn.w	r0, #1
 8003c2c:	fb00 2101 	mla	r1, r0, r1, r2
 8003c30:	3901      	subs	r1, #1
 8003c32:	fb91 f1f2 	sdiv	r1, r1, r2
 8003c36:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8003c3a:	1049      	asrs	r1, r1, #1
 8003c3c:	4249      	negs	r1, r1
 8003c3e:	e7eb      	b.n	8003c18 <_ZNK8touchgfx16DynamicDataGraph12indexToXAxisEii+0x1e>

08003c40 <_ZNK8touchgfx16DynamicDataGraph9getScaleXEv>:
    virtual void setScaleX(int scale, bool updateData = false);

    virtual int getScaleX() const
    {
        return AbstractDataGraph::getScaleX();
    }
 8003c40:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8003c42:	4770      	bx	lr

08003c44 <_ZNK8touchgfx16DynamicDataGraph9getScaleYEv>:
    virtual void setScaleY(int scale, bool updateData = false);

    virtual int getScaleY() const
    {
        return AbstractDataGraph::getScaleY();
    }
 8003c44:	6b40      	ldr	r0, [r0, #52]	; 0x34
 8003c46:	4770      	bx	lr

08003c48 <_ZN8touchgfx16DynamicDataGraph19setXAxisScaleScaledEi>:

    /// @cond
    TOUCHGFX_DEPRECATED("Please use setXAxisFactorScaled()", virtual void setXAxisScaleScaled(int scale))
    {
        setXAxisFactorScaled(scale);
 8003c48:	6803      	ldr	r3, [r0, #0]
 8003c4a:	f8d3 3148 	ldr.w	r3, [r3, #328]	; 0x148
 8003c4e:	4718      	bx	r3

08003c50 <_ZNK8touchgfx16DynamicDataGraph19getXAxisScaleScaledEv>:
    /// @endcond

    /// @cond
    TOUCHGFX_DEPRECATED("Please use getXAxisFactorScaled()", virtual int getXAxisScaleScaled() const)
    {
        return getXAxisFactorScaled();
 8003c50:	6803      	ldr	r3, [r0, #0]
 8003c52:	f8d3 315c 	ldr.w	r3, [r3, #348]	; 0x15c
 8003c56:	4718      	bx	r3

08003c58 <_ZNK8touchgfx16DynamicDataGraph16indexToScreenXQ5Es>:
        return i * scale;
 8003c58:	6b02      	ldr	r2, [r0, #48]	; 0x30
    }
    /// @endcond

    virtual CWRUtil::Q5 indexToScreenXQ5(int16_t index) const
    {
        return valueToScreenXQ5(int2scaledX(index));
 8003c5a:	6803      	ldr	r3, [r0, #0]
 8003c5c:	4351      	muls	r1, r2
 8003c5e:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 8003c62:	4718      	bx	r3

08003c64 <_ZNK8touchgfx16DynamicDataGraph16indexToScreenYQ5Es>:
    }

    virtual CWRUtil::Q5 indexToScreenYQ5(int16_t index) const
    {
        return valueToScreenYQ5(yValues[dataIndex(index)]);
 8003c64:	6803      	ldr	r3, [r0, #0]
    virtual CWRUtil::Q5 indexToScreenYQ5(int16_t index) const
 8003c66:	b570      	push	{r4, r5, r6, lr}
        return valueToScreenYQ5(yValues[dataIndex(index)]);
 8003c68:	f8d3 5118 	ldr.w	r5, [r3, #280]	; 0x118
 8003c6c:	f8d3 3180 	ldr.w	r3, [r3, #384]	; 0x180
 8003c70:	f8d0 6144 	ldr.w	r6, [r0, #324]	; 0x144
    virtual CWRUtil::Q5 indexToScreenYQ5(int16_t index) const
 8003c74:	4604      	mov	r4, r0
        return valueToScreenYQ5(yValues[dataIndex(index)]);
 8003c76:	4798      	blx	r3
 8003c78:	462b      	mov	r3, r5
 8003c7a:	f856 1020 	ldr.w	r1, [r6, r0, lsl #2]
 8003c7e:	4620      	mov	r0, r4
    }
 8003c80:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        return valueToScreenYQ5(yValues[dataIndex(index)]);
 8003c84:	4718      	bx	r3

08003c86 <_ZNK8touchgfx15GraphScrollData9dataIndexEs>:

    virtual int16_t addValue(int value);

    virtual int16_t dataIndex(int16_t screenIndex) const
    {
        return usedCapacity < maxCapacity ? screenIndex : (screenIndex + current) % maxCapacity;
 8003c86:	f9b0 211c 	ldrsh.w	r2, [r0, #284]	; 0x11c
 8003c8a:	f9b0 311e 	ldrsh.w	r3, [r0, #286]	; 0x11e
 8003c8e:	4293      	cmp	r3, r2
 8003c90:	db07      	blt.n	8003ca2 <_ZNK8touchgfx15GraphScrollData9dataIndexEs+0x1c>
 8003c92:	f9b0 314c 	ldrsh.w	r3, [r0, #332]	; 0x14c
 8003c96:	4419      	add	r1, r3
 8003c98:	fb91 f0f2 	sdiv	r0, r1, r2
 8003c9c:	fb02 1110 	mls	r1, r2, r0, r1
 8003ca0:	b209      	sxth	r1, r1
    }
 8003ca2:	4608      	mov	r0, r1
 8003ca4:	4770      	bx	lr

08003ca6 <_ZNK8touchgfx15GraphScrollData10indexToXQ5Es>:

private:
    virtual CWRUtil::Q5 indexToXQ5(int16_t index) const
    {
        return CWRUtil::toQ5(index);
    }
 8003ca6:	0148      	lsls	r0, r1, #5
 8003ca8:	4770      	bx	lr

08003caa <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8003caa:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
    }
 8003cae:	4770      	bx	lr

08003cb0 <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
 8003cb0:	f890 0026 	ldrb.w	r0, [r0, #38]	; 0x26
 8003cb4:	4770      	bx	lr

08003cb6 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
     * overwritten in subclasses and return the minimal rectangle containing the shape. See
     * classes such as Circle for example implementations.
     *
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
 8003cb6:	b510      	push	{r4, lr}
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8003cb8:	2200      	movs	r2, #0
        return rect.width;
 8003cba:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
        return rect.height;
 8003cbe:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 8003cc2:	8002      	strh	r2, [r0, #0]
 8003cc4:	8042      	strh	r2, [r0, #2]
 8003cc6:	8084      	strh	r4, [r0, #4]
 8003cc8:	80c1      	strh	r1, [r0, #6]
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
 8003cca:	bd10      	pop	{r4, pc}

08003ccc <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
 8003ccc:	2200      	movs	r2, #0
 8003cce:	8002      	strh	r2, [r0, #0]
 8003cd0:	8042      	strh	r2, [r0, #2]
 8003cd2:	8082      	strh	r2, [r0, #4]
 8003cd4:	80c2      	strh	r2, [r0, #6]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8003cd6:	4770      	bx	lr

08003cd8 <_ZN8touchgfx25AbstractGraphElementNoCWR8setColorENS_9colortypeE>:
     *
     * @see getColor
     */
    virtual void setColor(colortype newColor)
    {
        color = newColor;
 8003cd8:	62c1      	str	r1, [r0, #44]	; 0x2c
    }
 8003cda:	4770      	bx	lr

08003cdc <_ZNK8touchgfx25AbstractGraphElementNoCWR8getColorEv>:
     * @see setColor
     */
    virtual colortype getColor() const
    {
        return color;
    }
 8003cdc:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 8003cde:	4770      	bx	lr

08003ce0 <_ZNK8touchgfx25AbstractGraphElementNoCWR16drawCanvasWidgetERKNS_4RectE>:

    virtual bool drawCanvasWidget(const Rect&) const
    {
        return true;
    }
 8003ce0:	2001      	movs	r0, #1
 8003ce2:	4770      	bx	lr

08003ce4 <_ZN8touchgfx25AbstractGraphElementNoCWR10setPainterERNS_15AbstractPainterE>:
    void normalizeRect(Rect& r) const;

private:
    virtual void setPainter(AbstractPainter& /*painter*/)
    {
    }
 8003ce4:	4770      	bx	lr

08003ce6 <_ZN8touchgfx20GraphElementGridBase22invalidateGraphPointAtEs>:
        return lineWidth;
    }

    virtual void invalidateGraphPointAt(int16_t)
    {
    }
 8003ce6:	4770      	bx	lr

08003ce8 <_ZNK8touchgfx20GraphElementGridBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE>:
     *
     * @return The correctly scaled major interval.
     */
    virtual int getCorrectlyScaledMajorInterval(const AbstractDataGraph* graph) const
    {
        return majorGrid == 0 ? 0 : majorGrid->getCorrectlyScaledGridInterval(graph);
 8003ce8:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8003cea:	b118      	cbz	r0, 8003cf4 <_ZNK8touchgfx20GraphElementGridBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE+0xc>
 8003cec:	6803      	ldr	r3, [r0, #0]
 8003cee:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8003cf2:	4718      	bx	r3
    }
 8003cf4:	4770      	bx	lr

08003cf6 <_ZNK8touchgfx17GraphElementGridX13enclosingAreaEPKNS_17AbstractDataGraphE>:
    {
        return convertToGraphScaleX(graph, gridInterval, dataScale);
    }

protected:
    virtual Rect enclosingArea(const AbstractDataGraph* graph) const
 8003cf6:	b530      	push	{r4, r5, lr}
        return graphArea.getHeight() - (topPadding + bottomPadding);
 8003cf8:	f8b2 111a 	ldrh.w	r1, [r2, #282]	; 0x11a
        return topPadding;
 8003cfc:	f9b2 4114 	ldrsh.w	r4, [r2, #276]	; 0x114
        return rect.width;
 8003d00:	f9b2 5040 	ldrsh.w	r5, [r2, #64]	; 0x40
        return graphArea.getHeight() - (topPadding + bottomPadding);
 8003d04:	f8b2 2042 	ldrh.w	r2, [r2, #66]	; 0x42
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8003d08:	8044      	strh	r4, [r0, #2]
 8003d0a:	4421      	add	r1, r4
 8003d0c:	1a52      	subs	r2, r2, r1
 8003d0e:	2100      	movs	r1, #0
 8003d10:	8001      	strh	r1, [r0, #0]
 8003d12:	8085      	strh	r5, [r0, #4]
 8003d14:	80c2      	strh	r2, [r0, #6]
    {
        return Rect(0, graph->getGraphAreaPaddingTop(), graph->getGraphAreaWidthIncludingPadding(), graph->getGraphAreaHeight());
    }
 8003d16:	bd30      	pop	{r4, r5, pc}

08003d18 <_ZNK8touchgfx17GraphElementGridX8lineRectEssss>:

    virtual Rect lineRect(int16_t start, int16_t length, int16_t pos, int16_t width) const
 8003d18:	b510      	push	{r4, lr}
 8003d1a:	8042      	strh	r2, [r0, #2]
 8003d1c:	f9bd 4008 	ldrsh.w	r4, [sp, #8]
 8003d20:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8003d24:	8004      	strh	r4, [r0, #0]
 8003d26:	8082      	strh	r2, [r0, #4]
 8003d28:	80c3      	strh	r3, [r0, #6]
    {
        return Rect(pos, start, width, length);
    }
 8003d2a:	bd10      	pop	{r4, pc}

08003d2c <_ZNK8touchgfx17GraphElementGridX22getGraphRangeMinScaledEPKNS_17AbstractDataGraphE>:

    virtual int getGraphRangeMinScaled(const AbstractDataGraph* graph) const
    {
        return graph->getGraphRangeXMinScaled();
 8003d2c:	680b      	ldr	r3, [r1, #0]
    virtual int getGraphRangeMinScaled(const AbstractDataGraph* graph) const
 8003d2e:	4608      	mov	r0, r1
        return graph->getGraphRangeXMinScaled();
 8003d30:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
 8003d34:	4718      	bx	r3

08003d36 <_ZNK8touchgfx17GraphElementGridX22getGraphRangeMaxScaledEPKNS_17AbstractDataGraphE>:
    }

    virtual int getGraphRangeMaxScaled(const AbstractDataGraph* graph) const
    {
        return graph->getGraphRangeXMaxScaled();
 8003d36:	680b      	ldr	r3, [r1, #0]
    virtual int getGraphRangeMaxScaled(const AbstractDataGraph* graph) const
 8003d38:	4608      	mov	r0, r1
        return graph->getGraphRangeXMaxScaled();
 8003d3a:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8003d3e:	4718      	bx	r3

08003d40 <_ZNK8touchgfx17GraphElementGridX17getGraphAreaStartEPKNS_17AbstractDataGraphE>:
    }

    virtual int getGraphAreaStart(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaPaddingTop();
    }
 8003d40:	f9b1 0114 	ldrsh.w	r0, [r1, #276]	; 0x114
 8003d44:	4770      	bx	lr

08003d46 <_ZNK8touchgfx17GraphElementGridX18getGraphAreaLengthEPKNS_17AbstractDataGraphE>:
 8003d46:	f8b1 0114 	ldrh.w	r0, [r1, #276]	; 0x114
 8003d4a:	f8b1 311a 	ldrh.w	r3, [r1, #282]	; 0x11a
 8003d4e:	4403      	add	r3, r0
 8003d50:	f8b1 0042 	ldrh.w	r0, [r1, #66]	; 0x42
 8003d54:	1ac0      	subs	r0, r0, r3

    virtual int getGraphAreaLength(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaHeight();
    }
 8003d56:	b200      	sxth	r0, r0
 8003d58:	4770      	bx	lr

08003d5a <_ZNK8touchgfx17GraphElementGridX20getGraphAreaStartPosEPKNS_17AbstractDataGraphE>:

    virtual int getGraphAreaStartPos(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaPaddingLeft();
    }
 8003d5a:	f9b1 0116 	ldrsh.w	r0, [r1, #278]	; 0x116
 8003d5e:	4770      	bx	lr

08003d60 <_ZNK8touchgfx17GraphElementGridX18getGraphAreaEndPosEPKNS_17AbstractDataGraphE>:
        return graphArea.getWidth() - (leftPadding + rightPadding);
 8003d60:	f8b1 0116 	ldrh.w	r0, [r1, #278]	; 0x116
 8003d64:	f8b1 3118 	ldrh.w	r3, [r1, #280]	; 0x118
 8003d68:	4403      	add	r3, r0
 8003d6a:	f8b1 0040 	ldrh.w	r0, [r1, #64]	; 0x40
 8003d6e:	1ac0      	subs	r0, r0, r3

    virtual int getGraphAreaEndPos(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaWidth();
    }
 8003d70:	b200      	sxth	r0, r0
 8003d72:	4770      	bx	lr

08003d74 <_ZNK8touchgfx17GraphElementGridX15valueToScreenQ5EPKNS_17AbstractDataGraphEi>:
        return graph->valueToScreenXQ5(x);
 8003d74:	680b      	ldr	r3, [r1, #0]

    virtual CWRUtil::Q5 valueToScreenQ5(const AbstractDataGraph* graph, int value) const
 8003d76:	4608      	mov	r0, r1
        return graph->valueToScreenXQ5(x);
 8003d78:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 8003d7c:	4611      	mov	r1, r2
 8003d7e:	4718      	bx	r3

08003d80 <_ZNK8touchgfx17GraphElementGridY13enclosingAreaEPKNS_17AbstractDataGraphE>:
 8003d80:	f8b2 1118 	ldrh.w	r1, [r2, #280]	; 0x118
    {
        return convertToGraphScaleY(graph, gridInterval, dataScale);
    }

protected:
    virtual Rect enclosingArea(const AbstractDataGraph* graph) const
 8003d84:	b530      	push	{r4, r5, lr}
        return leftPadding;
 8003d86:	f9b2 5116 	ldrsh.w	r5, [r2, #278]	; 0x116
 8003d8a:	8005      	strh	r5, [r0, #0]
        return graphArea.getWidth() - (leftPadding + rightPadding);
 8003d8c:	186c      	adds	r4, r5, r1
 8003d8e:	f8b2 1040 	ldrh.w	r1, [r2, #64]	; 0x40
        return rect.height;
 8003d92:	f9b2 2042 	ldrsh.w	r2, [r2, #66]	; 0x42
 8003d96:	80c2      	strh	r2, [r0, #6]
 8003d98:	1b09      	subs	r1, r1, r4
 8003d9a:	2400      	movs	r4, #0
 8003d9c:	8044      	strh	r4, [r0, #2]
 8003d9e:	8081      	strh	r1, [r0, #4]
    {
        return Rect(graph->getGraphAreaPaddingLeft(), 0, graph->getGraphAreaWidth(), graph->getGraphAreaHeightIncludingPadding());
    }
 8003da0:	bd30      	pop	{r4, r5, pc}

08003da2 <_ZNK8touchgfx17GraphElementGridY8lineRectEssss>:
 8003da2:	8002      	strh	r2, [r0, #0]
 8003da4:	8083      	strh	r3, [r0, #4]
 8003da6:	f9bd 2000 	ldrsh.w	r2, [sp]
 8003daa:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8003dae:	8042      	strh	r2, [r0, #2]
 8003db0:	80c3      	strh	r3, [r0, #6]

    virtual Rect lineRect(int16_t start, int16_t length, int16_t pos, int16_t width) const
    {
        return Rect(start, pos, length, width);
    }
 8003db2:	4770      	bx	lr

08003db4 <_ZNK8touchgfx17GraphElementGridY22getGraphRangeMinScaledEPKNS_17AbstractDataGraphE>:

    virtual int getGraphRangeMinScaled(const AbstractDataGraph* graph) const
    {
        return graph->getGraphRangeYMinScaled();
 8003db4:	680b      	ldr	r3, [r1, #0]
    virtual int getGraphRangeMinScaled(const AbstractDataGraph* graph) const
 8003db6:	4608      	mov	r0, r1
        return graph->getGraphRangeYMinScaled();
 8003db8:	f8d3 30ec 	ldr.w	r3, [r3, #236]	; 0xec
 8003dbc:	4718      	bx	r3

08003dbe <_ZNK8touchgfx17GraphElementGridY22getGraphRangeMaxScaledEPKNS_17AbstractDataGraphE>:
    }

    virtual int getGraphRangeMaxScaled(const AbstractDataGraph* graph) const
    {
        return graph->getGraphRangeYMaxScaled();
 8003dbe:	680b      	ldr	r3, [r1, #0]
    virtual int getGraphRangeMaxScaled(const AbstractDataGraph* graph) const
 8003dc0:	4608      	mov	r0, r1
        return graph->getGraphRangeYMaxScaled();
 8003dc2:	f8d3 30f8 	ldr.w	r3, [r3, #248]	; 0xf8
 8003dc6:	4718      	bx	r3

08003dc8 <_ZNK8touchgfx17GraphElementGridY17getGraphAreaStartEPKNS_17AbstractDataGraphE>:
    }

    virtual int getGraphAreaStart(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaPaddingLeft();
    }
 8003dc8:	f9b1 0116 	ldrsh.w	r0, [r1, #278]	; 0x116
 8003dcc:	4770      	bx	lr

08003dce <_ZNK8touchgfx17GraphElementGridY18getGraphAreaLengthEPKNS_17AbstractDataGraphE>:
 8003dce:	f8b1 0116 	ldrh.w	r0, [r1, #278]	; 0x116
 8003dd2:	f8b1 3118 	ldrh.w	r3, [r1, #280]	; 0x118
 8003dd6:	4403      	add	r3, r0
 8003dd8:	f8b1 0040 	ldrh.w	r0, [r1, #64]	; 0x40
 8003ddc:	1ac0      	subs	r0, r0, r3

    virtual int getGraphAreaLength(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaWidth();
    }
 8003dde:	b200      	sxth	r0, r0
 8003de0:	4770      	bx	lr

08003de2 <_ZNK8touchgfx17GraphElementGridY20getGraphAreaStartPosEPKNS_17AbstractDataGraphE>:

    virtual int getGraphAreaStartPos(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaPaddingTop();
    }
 8003de2:	f9b1 0114 	ldrsh.w	r0, [r1, #276]	; 0x114
 8003de6:	4770      	bx	lr

08003de8 <_ZNK8touchgfx17GraphElementGridY18getGraphAreaEndPosEPKNS_17AbstractDataGraphE>:
        return graphArea.getHeight() - (topPadding + bottomPadding);
 8003de8:	f8b1 0114 	ldrh.w	r0, [r1, #276]	; 0x114
 8003dec:	f8b1 311a 	ldrh.w	r3, [r1, #282]	; 0x11a
 8003df0:	4403      	add	r3, r0
 8003df2:	f8b1 0042 	ldrh.w	r0, [r1, #66]	; 0x42
 8003df6:	1ac0      	subs	r0, r0, r3

    virtual int getGraphAreaEndPos(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaHeight();
    }
 8003df8:	b200      	sxth	r0, r0
 8003dfa:	4770      	bx	lr

08003dfc <_ZNK8touchgfx17GraphElementGridY15valueToScreenQ5EPKNS_17AbstractDataGraphEi>:
        return graph->valueToScreenYQ5(y);
 8003dfc:	680b      	ldr	r3, [r1, #0]

    virtual CWRUtil::Q5 valueToScreenQ5(const AbstractDataGraph* graph, int value) const
 8003dfe:	4608      	mov	r0, r1
        return graph->valueToScreenYQ5(y);
 8003e00:	f8d3 3118 	ldr.w	r3, [r3, #280]	; 0x118
 8003e04:	4611      	mov	r1, r2
 8003e06:	4718      	bx	r3

08003e08 <_ZN19ScreenGraphViewBaseD1Ev>:

class ScreenGraphViewBase : public touchgfx::View<ScreenGraphPresenter>
{
public:
    ScreenGraphViewBase();
    virtual ~ScreenGraphViewBase() {}
 8003e08:	4770      	bx	lr

08003e0a <_ZN19ScreenGraphViewBase11setupScreenEv>:
}

void ScreenGraphViewBase::setupScreen()
{

}
 8003e0a:	4770      	bx	lr

08003e0c <_ZN8touchgfx8CallbackI19ScreenGraphViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003e0c:	4770      	bx	lr

08003e0e <_ZN8touchgfx11GraphScrollILs60EED1Ev>:
 * the new values added to the graph.
 *
 * @tparam CAPACITY The maximum number of data points on the graph.
 */
template <int16_t CAPACITY>
class GraphScroll : public GraphScrollData
 8003e0e:	4770      	bx	lr

08003e10 <_ZN8touchgfx11GraphScrollILs600EED1Ev>:
 8003e10:	4770      	bx	lr

08003e12 <_ZN8touchgfx17GraphElementGridYD1Ev>:
class GraphElementGridY : public GraphElementGridBase
 8003e12:	4770      	bx	lr

08003e14 <_ZN8touchgfx17GraphElementGridXD1Ev>:
class GraphElementGridX : public GraphElementGridBase
 8003e14:	4770      	bx	lr

08003e16 <_ZN8touchgfx8CallbackI19ScreenGraphViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8003e16:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003e18:	68c2      	ldr	r2, [r0, #12]
 8003e1a:	6844      	ldr	r4, [r0, #4]
 8003e1c:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8003e1e:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8003e20:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8003e24:	07d2      	lsls	r2, r2, #31
 8003e26:	bf48      	it	mi
 8003e28:	5962      	ldrmi	r2, [r4, r5]
 8003e2a:	689b      	ldr	r3, [r3, #8]
    }
 8003e2c:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003e2e:	bf48      	it	mi
 8003e30:	58d3      	ldrmi	r3, [r2, r3]
 8003e32:	4718      	bx	r3

08003e34 <_ZNK8touchgfx8CallbackI19ScreenGraphViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8003e34:	6843      	ldr	r3, [r0, #4]
 8003e36:	b12b      	cbz	r3, 8003e44 <_ZNK8touchgfx8CallbackI19ScreenGraphViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8003e38:	6883      	ldr	r3, [r0, #8]
 8003e3a:	b92b      	cbnz	r3, 8003e48 <_ZNK8touchgfx8CallbackI19ScreenGraphViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8003e3c:	68c0      	ldr	r0, [r0, #12]
 8003e3e:	f000 0001 	and.w	r0, r0, #1
 8003e42:	4770      	bx	lr
 8003e44:	4618      	mov	r0, r3
 8003e46:	4770      	bx	lr
 8003e48:	2001      	movs	r0, #1
    }
 8003e4a:	4770      	bx	lr

08003e4c <_ZN8touchgfx17GraphElementGridXD0Ev>:
 8003e4c:	b510      	push	{r4, lr}
 8003e4e:	2140      	movs	r1, #64	; 0x40
 8003e50:	4604      	mov	r4, r0
 8003e52:	f01c fca9 	bl	80207a8 <_ZdlPvj>
 8003e56:	4620      	mov	r0, r4
 8003e58:	bd10      	pop	{r4, pc}

08003e5a <_ZN8touchgfx17GraphElementGridYD0Ev>:
class GraphElementGridY : public GraphElementGridBase
 8003e5a:	b510      	push	{r4, lr}
 8003e5c:	2140      	movs	r1, #64	; 0x40
 8003e5e:	4604      	mov	r4, r0
 8003e60:	f01c fca2 	bl	80207a8 <_ZdlPvj>
 8003e64:	4620      	mov	r0, r4
 8003e66:	bd10      	pop	{r4, pc}

08003e68 <_ZN8touchgfx11GraphScrollILs600EED0Ev>:
 8003e68:	b510      	push	{r4, lr}
 8003e6a:	f44f 612b 	mov.w	r1, #2736	; 0xab0
 8003e6e:	4604      	mov	r4, r0
 8003e70:	f01c fc9a 	bl	80207a8 <_ZdlPvj>
 8003e74:	4620      	mov	r0, r4
 8003e76:	bd10      	pop	{r4, pc}

08003e78 <_ZN8touchgfx11GraphScrollILs60EED0Ev>:
 8003e78:	b510      	push	{r4, lr}
 8003e7a:	f44f 7110 	mov.w	r1, #576	; 0x240
 8003e7e:	4604      	mov	r4, r0
 8003e80:	f01c fc92 	bl	80207a8 <_ZdlPvj>
 8003e84:	4620      	mov	r0, r4
 8003e86:	bd10      	pop	{r4, pc}

08003e88 <_ZN8touchgfx8CallbackI19ScreenGraphViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003e88:	b510      	push	{r4, lr}
 8003e8a:	2110      	movs	r1, #16
 8003e8c:	4604      	mov	r4, r0
 8003e8e:	f01c fc8b 	bl	80207a8 <_ZdlPvj>
 8003e92:	4620      	mov	r0, r4
 8003e94:	bd10      	pop	{r4, pc}

08003e96 <_ZN19ScreenGraphViewBaseD0Ev>:
 8003e96:	b510      	push	{r4, lr}
 8003e98:	f242 713c 	movw	r1, #10044	; 0x273c
 8003e9c:	4604      	mov	r4, r0
 8003e9e:	f01c fc83 	bl	80207a8 <_ZdlPvj>
 8003ea2:	4620      	mov	r0, r4
 8003ea4:	bd10      	pop	{r4, pc}

08003ea6 <_ZNK8touchgfx17AbstractDataGraph17invalidateContentEv>:
        if (alpha > 0)
 8003ea6:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8003eaa:	b10b      	cbz	r3, 8003eb0 <_ZNK8touchgfx17AbstractDataGraph17invalidateContentEv+0xa>
            Container::invalidateContent();
 8003eac:	f006 be77 	b.w	800ab9e <_ZNK8touchgfx9Container17invalidateContentEv>
    }
 8003eb0:	4770      	bx	lr

08003eb2 <_ZNK8touchgfx17GraphElementGridX30getCorrectlyScaledGridIntervalEPKNS_17AbstractDataGraphE>:
    virtual int getCorrectlyScaledGridInterval(const AbstractDataGraph* graph) const
 8003eb2:	b513      	push	{r0, r1, r4, lr}
 8003eb4:	4603      	mov	r3, r0
 8003eb6:	4608      	mov	r0, r1
        return convertToGraphScaleX(graph, gridInterval, dataScale);
 8003eb8:	e9d3 140c 	ldrd	r1, r4, [r3, #48]	; 0x30
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleX());
 8003ebc:	6803      	ldr	r3, [r0, #0]
        return convertToGraphScaleX(graph, gridInterval, dataScale);
 8003ebe:	9101      	str	r1, [sp, #4]
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleX());
 8003ec0:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8003ec4:	4798      	blx	r3
 8003ec6:	9901      	ldr	r1, [sp, #4]
 8003ec8:	4602      	mov	r2, r0
 8003eca:	4620      	mov	r0, r4
    }
 8003ecc:	b002      	add	sp, #8
 8003ece:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleX());
 8003ed2:	f008 bcad 	b.w	800c830 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>

08003ed6 <_ZNK8touchgfx17GraphElementGridY30getCorrectlyScaledGridIntervalEPKNS_17AbstractDataGraphE>:
    virtual int getCorrectlyScaledGridInterval(const AbstractDataGraph* graph) const
 8003ed6:	b513      	push	{r0, r1, r4, lr}
 8003ed8:	4603      	mov	r3, r0
 8003eda:	4608      	mov	r0, r1
        return convertToGraphScaleY(graph, gridInterval, dataScale);
 8003edc:	e9d3 140c 	ldrd	r1, r4, [r3, #48]	; 0x30
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleY());
 8003ee0:	6803      	ldr	r3, [r0, #0]
        return convertToGraphScaleY(graph, gridInterval, dataScale);
 8003ee2:	9101      	str	r1, [sp, #4]
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleY());
 8003ee4:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8003ee8:	4798      	blx	r3
 8003eea:	9901      	ldr	r1, [sp, #4]
 8003eec:	4602      	mov	r2, r0
 8003eee:	4620      	mov	r0, r4
    }
 8003ef0:	b002      	add	sp, #8
 8003ef2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleY());
 8003ef6:	f008 bc9b 	b.w	800c830 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
	...

08003efc <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs>:
        assert(index >= 0 && index < usedCapacity);
 8003efc:	1e0a      	subs	r2, r1, #0
    virtual int indexToDataPointYScaled(int16_t index) const
 8003efe:	b510      	push	{r4, lr}
        assert(index >= 0 && index < usedCapacity);
 8003f00:	db03      	blt.n	8003f0a <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0xe>
 8003f02:	f9b0 411e 	ldrsh.w	r4, [r0, #286]	; 0x11e
 8003f06:	4294      	cmp	r4, r2
 8003f08:	dc06      	bgt.n	8003f18 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0x1c>
 8003f0a:	4b08      	ldr	r3, [pc, #32]	; (8003f2c <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0x30>)
 8003f0c:	4a08      	ldr	r2, [pc, #32]	; (8003f30 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0x34>)
 8003f0e:	4809      	ldr	r0, [pc, #36]	; (8003f34 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0x38>)
 8003f10:	f240 6133 	movw	r1, #1587	; 0x633
 8003f14:	f01c fcfc 	bl	8020910 <__assert_func>
        return yValues[dataIndex(index)];
 8003f18:	6803      	ldr	r3, [r0, #0]
 8003f1a:	f8d0 4144 	ldr.w	r4, [r0, #324]	; 0x144
 8003f1e:	f8d3 3180 	ldr.w	r3, [r3, #384]	; 0x180
 8003f22:	4798      	blx	r3
    }
 8003f24:	f854 0020 	ldr.w	r0, [r4, r0, lsl #2]
 8003f28:	bd10      	pop	{r4, pc}
 8003f2a:	bf00      	nop
 8003f2c:	08022c7c 	.word	0x08022c7c
 8003f30:	08022c9f 	.word	0x08022c9f
 8003f34:	08022cee 	.word	0x08022cee

08003f38 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs>:
        assert(index >= 0 && index < usedCapacity);
 8003f38:	1e0b      	subs	r3, r1, #0
    virtual int indexToDataPointXScaled(int16_t index) const
 8003f3a:	b510      	push	{r4, lr}
 8003f3c:	4604      	mov	r4, r0
        assert(index >= 0 && index < usedCapacity);
 8003f3e:	db03      	blt.n	8003f48 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x10>
 8003f40:	f9b0 211e 	ldrsh.w	r2, [r0, #286]	; 0x11e
 8003f44:	429a      	cmp	r2, r3
 8003f46:	dc06      	bgt.n	8003f56 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x1e>
 8003f48:	4b07      	ldr	r3, [pc, #28]	; (8003f68 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x30>)
 8003f4a:	4a08      	ldr	r2, [pc, #32]	; (8003f6c <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x34>)
 8003f4c:	4808      	ldr	r0, [pc, #32]	; (8003f70 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x38>)
 8003f4e:	f240 612d 	movw	r1, #1581	; 0x62d
 8003f52:	f01c fcdd 	bl	8020910 <__assert_func>
        return (indexToGlobalIndex(index) * xAxisFactor) + xAxisOffset;
 8003f56:	6803      	ldr	r3, [r0, #0]
 8003f58:	f8d3 3184 	ldr.w	r3, [r3, #388]	; 0x184
 8003f5c:	4798      	blx	r3
 8003f5e:	e9d4 234f 	ldrd	r2, r3, [r4, #316]	; 0x13c
    }
 8003f62:	fb02 3000 	mla	r0, r2, r0, r3
 8003f66:	bd10      	pop	{r4, pc}
 8003f68:	08022c7c 	.word	0x08022c7c
 8003f6c:	08022d4b 	.word	0x08022d4b
 8003f70:	08022cee 	.word	0x08022cee

08003f74 <_ZN19ScreenGraphViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

}

void ScreenGraphViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &toggleButton1)
 8003f74:	f500 5389 	add.w	r3, r0, #4384	; 0x1120
 8003f78:	3308      	adds	r3, #8
 8003f7a:	4299      	cmp	r1, r3
{
 8003f7c:	b510      	push	{r4, lr}
 8003f7e:	4604      	mov	r4, r0
    if (&src == &toggleButton1)
 8003f80:	d115      	bne.n	8003fae <_ZN19ScreenGraphViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
    {
        //Interaction2
        //When toggleButton1 clicked execute C++ code
        //Execute C++ code
        dynamicGraph1.setVisible(!dynamicGraph1.isVisible());
 8003f82:	f890 3d7d 	ldrb.w	r3, [r0, #3453]	; 0xd7d
 8003f86:	f083 0301 	eor.w	r3, r3, #1
        visible = vis;
 8003f8a:	f880 3d7d 	strb.w	r3, [r0, #3453]	; 0xd7d
        dynamicGraph2.setVisible(!dynamicGraph2.isVisible());
 8003f8e:	f890 30f1 	ldrb.w	r3, [r0, #241]	; 0xf1
 8003f92:	f083 0301 	eor.w	r3, r3, #1
 8003f96:	f880 30f1 	strb.w	r3, [r0, #241]	; 0xf1
        dynamicGraph1.invalidate();
 8003f9a:	f600 5058 	addw	r0, r0, #3416	; 0xd58
 8003f9e:	f00e f87e 	bl	801209e <_ZNK8touchgfx8Drawable10invalidateEv>
        dynamicGraph2.invalidate();
 8003fa2:	f104 00cc 	add.w	r0, r4, #204	; 0xcc
        //When buttonCloseModal clicked hide modalWindow1
        //Hide modalWindow1
        modalWindow1.setVisible(false);
        modalWindow1.invalidate();
    }
}
 8003fa6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        modalWindow1.invalidate();
 8003faa:	f00e b878 	b.w	801209e <_ZNK8touchgfx8Drawable10invalidateEv>
    else if (&src == &buttonCloseModal)
 8003fae:	f500 539c 	add.w	r3, r0, #4992	; 0x1380
 8003fb2:	3308      	adds	r3, #8
 8003fb4:	4299      	cmp	r1, r3
 8003fb6:	d108      	bne.n	8003fca <_ZN19ScreenGraphViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x56>
 8003fb8:	f500 5380 	add.w	r3, r0, #4096	; 0x1000
 8003fbc:	2200      	movs	r2, #0
        modalWindow1.invalidate();
 8003fbe:	f500 5096 	add.w	r0, r0, #4800	; 0x12c0
 8003fc2:	f883 22fd 	strb.w	r2, [r3, #765]	; 0x2fd
 8003fc6:	3018      	adds	r0, #24
 8003fc8:	e7ed      	b.n	8003fa6 <_ZN19ScreenGraphViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x32>
}
 8003fca:	bd10      	pop	{r4, pc}

08003fcc <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll>:
     * @param  factor2 The second factor.
     * @param  divisor The divisor.
     *
     * @return factor1 * factor2 / divisor as a Q5
     */
    static Q5 muldiv_toQ5(int32_t factor1, int32_t factor2, int32_t divisor)
 8003fcc:	b537      	push	{r0, r1, r2, r4, r5, lr}
    {
        int32_t remainder;
        int32_t result = muldiv(factor1, factor2, divisor, remainder);
 8003fce:	ab01      	add	r3, sp, #4
    static Q5 muldiv_toQ5(int32_t factor1, int32_t factor2, int32_t divisor)
 8003fd0:	4615      	mov	r5, r2
        int32_t result = muldiv(factor1, factor2, divisor, remainder);
 8003fd2:	f00e fa06 	bl	80123e2 <_ZN8touchgfx6muldivElllRl>
        if (result >= 0)
 8003fd6:	2800      	cmp	r0, #0
 8003fd8:	ea4f 1440 	mov.w	r4, r0, lsl #5
        return Q5(muldiv((int)factor1, (int)factor2, (int)divisor));
 8003fdc:	9901      	ldr	r1, [sp, #4]
 8003fde:	462a      	mov	r2, r5
 8003fe0:	f04f 0020 	mov.w	r0, #32
        if (result >= 0)
 8003fe4:	db04      	blt.n	8003ff0 <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll+0x24>
        return Q5(muldiv((int)factor1, (int)factor2, (int)divisor));
 8003fe6:	f00e fa1b 	bl	8012420 <_ZN8touchgfx6muldivElll>
            return Q5(v + q5.v);
 8003fea:	4420      	add	r0, r4
        {
            return toQ5(result) + muldivQ5(Q5(Rasterizer::POLY_BASE_SIZE), Q5(remainder), Q5(divisor));
        }
        return toQ5(result) - muldivQ5(Q5(Rasterizer::POLY_BASE_SIZE), Q5(remainder), Q5(divisor));
    }
 8003fec:	b003      	add	sp, #12
 8003fee:	bd30      	pop	{r4, r5, pc}
        return Q5(muldiv((int)factor1, (int)factor2, (int)divisor));
 8003ff0:	f00e fa16 	bl	8012420 <_ZN8touchgfx6muldivElll>
            return Q5(v - q5.v);
 8003ff4:	1a20      	subs	r0, r4, r0
 8003ff6:	e7f9      	b.n	8003fec <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll+0x20>

08003ff8 <_ZNK8touchgfx17AbstractDataGraph16valueToScreenYQ5Ei>:
    virtual CWRUtil::Q5 valueToScreenYQ5(int y) const
 8003ff8:	b570      	push	{r4, r5, r6, lr}
        return graphArea.getHeight() - (topPadding + bottomPadding);
 8003ffa:	f9b0 4114 	ldrsh.w	r4, [r0, #276]	; 0x114
 8003ffe:	f8b0 511a 	ldrh.w	r5, [r0, #282]	; 0x11a
 8004002:	1963      	adds	r3, r4, r5
 8004004:	f8b0 5042 	ldrh.w	r5, [r0, #66]	; 0x42
 8004008:	1aed      	subs	r5, r5, r3
        return CWRUtil::toQ5(graphAreaHeight + topPadding - 1) - CWRUtil::muldiv_toQ5(y - graphRangeMinY, graphAreaHeight - 1, graphRangeMaxY - graphRangeMinY);
 800400a:	e9d0 324d 	ldrd	r3, r2, [r0, #308]	; 0x134
    virtual CWRUtil::Q5 valueToScreenYQ5(int y) const
 800400e:	460e      	mov	r6, r1
        return CWRUtil::toQ5(graphAreaHeight + topPadding - 1) - CWRUtil::muldiv_toQ5(y - graphRangeMinY, graphAreaHeight - 1, graphRangeMaxY - graphRangeMinY);
 8004010:	b22d      	sxth	r5, r5
 8004012:	1ad2      	subs	r2, r2, r3
 8004014:	1e69      	subs	r1, r5, #1
 8004016:	1af0      	subs	r0, r6, r3
 8004018:	f7ff ffd8 	bl	8003fcc <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll>
 800401c:	442c      	add	r4, r5
 800401e:	3c01      	subs	r4, #1
    }
 8004020:	ebc0 1044 	rsb	r0, r0, r4, lsl #5
 8004024:	bd70      	pop	{r4, r5, r6, pc}

08004026 <_ZNK8touchgfx17AbstractDataGraph16valueToScreenXQ5Ei>:
    virtual CWRUtil::Q5 valueToScreenXQ5(int x) const
 8004026:	b538      	push	{r3, r4, r5, lr}
 8004028:	4604      	mov	r4, r0
 800402a:	4608      	mov	r0, r1
        return graphArea.getWidth() - (leftPadding + rightPadding);
 800402c:	f8b4 3118 	ldrh.w	r3, [r4, #280]	; 0x118
 8004030:	f8b4 1116 	ldrh.w	r1, [r4, #278]	; 0x116
 8004034:	440b      	add	r3, r1
 8004036:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
        return CWRUtil::muldiv_toQ5(x - graphRangeMinX, getGraphAreaWidth() - 1, graphRangeMaxX - graphRangeMinX) + CWRUtil::toQ5(leftPadding);
 800403a:	e9d4 524b 	ldrd	r5, r2, [r4, #300]	; 0x12c
        return graphArea.getWidth() - (leftPadding + rightPadding);
 800403e:	1ac9      	subs	r1, r1, r3
        return CWRUtil::muldiv_toQ5(x - graphRangeMinX, getGraphAreaWidth() - 1, graphRangeMaxX - graphRangeMinX) + CWRUtil::toQ5(leftPadding);
 8004040:	b209      	sxth	r1, r1
 8004042:	1b52      	subs	r2, r2, r5
 8004044:	3901      	subs	r1, #1
 8004046:	1b40      	subs	r0, r0, r5
 8004048:	f7ff ffc0 	bl	8003fcc <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll>
            return Q5(v + q5.v);
 800404c:	f9b4 3116 	ldrsh.w	r3, [r4, #278]	; 0x116
    }
 8004050:	eb00 1043 	add.w	r0, r0, r3, lsl #5
 8004054:	bd38      	pop	{r3, r4, r5, pc}
	...

08004058 <_ZN8touchgfx20GraphElementGridBaseC1Ev>:
    GraphElementGridBase()
 8004058:	b510      	push	{r4, lr}
 800405a:	4604      	mov	r4, r0
        : CanvasWidget()
 800405c:	f007 ffd0 	bl	800c000 <_ZN8touchgfx12CanvasWidgetC1Ev>
        : dataScale(1), gridInterval(10), lineWidth(1), majorGrid(0)
 8004060:	4a06      	ldr	r2, [pc, #24]	; (800407c <_ZN8touchgfx20GraphElementGridBaseC1Ev+0x24>)
 8004062:	6022      	str	r2, [r4, #0]
        : color(col)
 8004064:	2300      	movs	r3, #0
 8004066:	2201      	movs	r2, #1
 8004068:	210a      	movs	r1, #10
 800406a:	e9c4 210c 	strd	r2, r1, [r4, #48]	; 0x30
 800406e:	62e3      	str	r3, [r4, #44]	; 0x2c
 8004070:	f884 2038 	strb.w	r2, [r4, #56]	; 0x38
 8004074:	63e3      	str	r3, [r4, #60]	; 0x3c
    }
 8004076:	4620      	mov	r0, r4
 8004078:	bd10      	pop	{r4, pc}
 800407a:	bf00      	nop
 800407c:	08023d20 	.word	0x08023d20

08004080 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>:
public:
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
 8004080:	b570      	push	{r4, r5, r6, lr}
        : widgetWidth(0)
 8004082:	2300      	movs	r3, #0
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8004084:	4e12      	ldr	r6, [pc, #72]	; (80040d0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x50>)
 8004086:	8083      	strh	r3, [r0, #4]
        : AbstractPainter()
 8004088:	4b12      	ldr	r3, [pc, #72]	; (80040d4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x54>)
 800408a:	6003      	str	r3, [r0, #0]
 800408c:	6833      	ldr	r3, [r6, #0]
 800408e:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
    AbstractPainterRGB565()
 8004092:	4605      	mov	r5, r0
 8004094:	b10a      	cbz	r2, 800409a <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1a>
 8004096:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8004098:	b900      	cbnz	r0, 800409c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1c>
        return instance->lcdRef;
 800409a:	6898      	ldr	r0, [r3, #8]
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
 800409c:	6803      	ldr	r3, [r0, #0]
 800409e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80040a0:	4798      	blx	r3
        return auxiliaryLCD;
 80040a2:	6833      	ldr	r3, [r6, #0]
 80040a4:	fab0 f480 	clz	r4, r0
 80040a8:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80040aa:	0964      	lsrs	r4, r4, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
 80040ac:	b130      	cbz	r0, 80040bc <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x3c>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
 80040ae:	6803      	ldr	r3, [r0, #0]
 80040b0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80040b2:	4798      	blx	r3
 80040b4:	2800      	cmp	r0, #0
 80040b6:	bf08      	it	eq
 80040b8:	f044 0401 	orreq.w	r4, r4, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
 80040bc:	b92c      	cbnz	r4, 80040ca <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x4a>
 80040be:	4b06      	ldr	r3, [pc, #24]	; (80040d8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x58>)
 80040c0:	4a06      	ldr	r2, [pc, #24]	; (80040dc <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x5c>)
 80040c2:	4807      	ldr	r0, [pc, #28]	; (80040e0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x60>)
 80040c4:	212c      	movs	r1, #44	; 0x2c
 80040c6:	f01c fc23 	bl	8020910 <__assert_func>
    }
 80040ca:	4628      	mov	r0, r5
 80040cc:	bd70      	pop	{r4, r5, r6, pc}
 80040ce:	bf00      	nop
 80040d0:	20015604 	.word	0x20015604
 80040d4:	0802300c 	.word	0x0802300c
 80040d8:	08022d9a 	.word	0x08022d9a
 80040dc:	08022df8 	.word	0x08022df8
 80040e0:	08022e31 	.word	0x08022e31

080040e4 <_ZN8touchgfx15GraphLabelsBaseC1Ev>:
 * @see GraphLabelsX, GraphLabelsY
 */
class GraphLabelsBase : public AbstractGraphDecoration
{
public:
    GraphLabelsBase()
 80040e4:	b510      	push	{r4, lr}
 80040e6:	4604      	mov	r4, r0
        : CanvasWidget()
 80040e8:	f007 ff8a 	bl	800c000 <_ZN8touchgfx12CanvasWidgetC1Ev>
        : AbstractGraphDecoration(),
          dataScale(1), labelInterval(0), labelTypedText(TYPED_TEXT_INVALID), labelRotation(TEXT_ROTATE_0), labelDecimals(0), labelDecimalPoint('.'), majorLabel(0)
 80040ec:	4a0a      	ldr	r2, [pc, #40]	; (8004118 <_ZN8touchgfx15GraphLabelsBaseC1Ev+0x34>)
 80040ee:	6022      	str	r2, [r4, #0]
 80040f0:	2300      	movs	r3, #0
 80040f2:	2201      	movs	r2, #1
 80040f4:	e9c4 230c 	strd	r2, r3, [r4, #48]	; 0x30
 80040f8:	4a08      	ldr	r2, [pc, #32]	; (800411c <_ZN8touchgfx15GraphLabelsBaseC1Ev+0x38>)
 80040fa:	63a2      	str	r2, [r4, #56]	; 0x38
 80040fc:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8004100:	87a2      	strh	r2, [r4, #60]	; 0x3c
 8004102:	222e      	movs	r2, #46	; 0x2e
 8004104:	62e3      	str	r3, [r4, #44]	; 0x2c
 8004106:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800410a:	f8a4 3042 	strh.w	r3, [r4, #66]	; 0x42
 800410e:	f8a4 2044 	strh.w	r2, [r4, #68]	; 0x44
 8004112:	64a3      	str	r3, [r4, #72]	; 0x48
    {
    }
 8004114:	4620      	mov	r0, r4
 8004116:	bd10      	pop	{r4, pc}
 8004118:	08023f18 	.word	0x08023f18
 800411c:	080222dc 	.word	0x080222dc

08004120 <_ZN8touchgfx14AbstractButtonC1Ev>:
    AbstractButton()
 8004120:	b510      	push	{r4, lr}
        : Widget(), action(), pressed(false)
 8004122:	2226      	movs	r2, #38	; 0x26
    AbstractButton()
 8004124:	4604      	mov	r4, r0
        : Widget(), action(), pressed(false)
 8004126:	2100      	movs	r1, #0
 8004128:	f01c fd78 	bl	8020c1c <memset>
 800412c:	4620      	mov	r0, r4
 800412e:	f7fe fe3f 	bl	8002db0 <_ZN8touchgfx6WidgetC1Ev>
 8004132:	4b05      	ldr	r3, [pc, #20]	; (8004148 <_ZN8touchgfx14AbstractButtonC1Ev+0x28>)
 8004134:	6023      	str	r3, [r4, #0]
 8004136:	2300      	movs	r3, #0
 8004138:	62a3      	str	r3, [r4, #40]	; 0x28
 800413a:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
        touchable = touch;
 800413e:	2301      	movs	r3, #1
 8004140:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
    }
 8004144:	4620      	mov	r0, r4
 8004146:	bd10      	pop	{r4, pc}
 8004148:	08023fb8 	.word	0x08023fb8

0800414c <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>:
    TextAreaWithOneWildcard()
 800414c:	b510      	push	{r4, lr}
 800414e:	4604      	mov	r4, r0
        : TextArea()
 8004150:	f7fe fe6e 	bl	8002e30 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8004154:	4b02      	ldr	r3, [pc, #8]	; (8004160 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev+0x14>)
 8004156:	6023      	str	r3, [r4, #0]
 8004158:	2300      	movs	r3, #0
 800415a:	64a3      	str	r3, [r4, #72]	; 0x48
    }
 800415c:	4620      	mov	r0, r4
 800415e:	bd10      	pop	{r4, pc}
 8004160:	08022a40 	.word	0x08022a40

08004164 <_ZN19ScreenGraphViewBaseC1Ev>:
ScreenGraphViewBase::ScreenGraphViewBase() :
 8004164:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004168:	ed2d 8b10 	vpush	{d8-d15}
 800416c:	4604      	mov	r4, r0
 800416e:	b097      	sub	sp, #92	; 0x5c
 8004170:	f00e fb00 	bl	8012774 <_ZN8touchgfx6ScreenC1Ev>
    buttonCallback(this, &ScreenGraphViewBase::buttonCallbackHandler)
 8004174:	4622      	mov	r2, r4
 8004176:	2500      	movs	r5, #0
 8004178:	4beb      	ldr	r3, [pc, #940]	; (8004528 <_ZN19ScreenGraphViewBaseC1Ev+0x3c4>)
 800417a:	63e5      	str	r5, [r4, #60]	; 0x3c
 800417c:	f842 3b40 	str.w	r3, [r2], #64
 8004180:	4610      	mov	r0, r2
 8004182:	ee0b 2a90 	vmov	s23, r2
 8004186:	f7fe fe25 	bl	8002dd4 <_ZN8touchgfx3BoxC1Ev>
 800418a:	f104 036c 	add.w	r3, r4, #108	; 0x6c
 800418e:	f64f 76ff 	movw	r6, #65535	; 0xffff
 8004192:	a914      	add	r1, sp, #80	; 0x50
 8004194:	4618      	mov	r0, r3
 8004196:	ee0c 3a10 	vmov	s24, r3
 800419a:	f8ad 6050 	strh.w	r6, [sp, #80]	; 0x50
 800419e:	f7fe fe2d 	bl	8002dfc <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 80041a2:	f104 0398 	add.w	r3, r4, #152	; 0x98
        : Box(), borderColor(0), borderSize(0)
 80041a6:	4618      	mov	r0, r3
 80041a8:	f104 0bcc 	add.w	fp, r4, #204	; 0xcc
 80041ac:	ee0d 3a90 	vmov	s27, r3
 80041b0:	f7fe fe10 	bl	8002dd4 <_ZN8touchgfx3BoxC1Ev>
 80041b4:	4bdd      	ldr	r3, [pc, #884]	; (800452c <_ZN19ScreenGraphViewBaseC1Ev+0x3c8>)
 80041b6:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
        : AbstractDataGraph(capacity), xAxisFactor(1), xAxisOffset(0), yValues(values), dataCounter(0)
 80041ba:	f44f 7116 	mov.w	r1, #600	; 0x258
 80041be:	f8c4 50c4 	str.w	r5, [r4, #196]	; 0xc4
 80041c2:	f8a4 50c8 	strh.w	r5, [r4, #200]	; 0xc8
 80041c6:	4658      	mov	r0, fp
 80041c8:	f008 face 	bl	800c768 <_ZN8touchgfx17AbstractDataGraphC1Es>
 80041cc:	4bd8      	ldr	r3, [pc, #864]	; (8004530 <_ZN19ScreenGraphViewBaseC1Ev+0x3cc>)
 80041ce:	f8c4 30cc 	str.w	r3, [r4, #204]	; 0xcc
{
public:
    GraphScroll()
        : GraphScrollData(CAPACITY, y)
 80041d2:	f504 7207 	add.w	r2, r4, #540	; 0x21c
 80041d6:	2301      	movs	r3, #1
        DynamicDataGraph::setGraphRangeX(0, capacity - 1);
 80041d8:	4629      	mov	r1, r5
        : AbstractDataGraph(capacity), xAxisFactor(1), xAxisOffset(0), yValues(values), dataCounter(0)
 80041da:	e9c4 3582 	strd	r3, r5, [r4, #520]	; 0x208
 80041de:	e9c4 2584 	strd	r2, r5, [r4, #528]	; 0x210
        DynamicDataGraph::setGraphRangeX(0, capacity - 1);
 80041e2:	4658      	mov	r0, fp
 80041e4:	f240 2257 	movw	r2, #599	; 0x257
 80041e8:	f7ff fa3a 	bl	8003660 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>
 80041ec:	f604 337c 	addw	r3, r4, #2940	; 0xb7c
 80041f0:	4ad0      	ldr	r2, [pc, #832]	; (8004534 <_ZN19ScreenGraphViewBaseC1Ev+0x3d0>)
 80041f2:	f8c4 20cc 	str.w	r2, [r4, #204]	; 0xcc
 80041f6:	4618      	mov	r0, r3
        : DynamicDataGraph(capacity, values), current(0)
 80041f8:	f8a4 5218 	strh.w	r5, [r4, #536]	; 0x218
 80041fc:	ee0f 3a10 	vmov	s30, r3
 8004200:	f007 fefe 	bl	800c000 <_ZN8touchgfx12CanvasWidgetC1Ev>
 */
class GraphElementLine : public AbstractGraphElement
{
public:
    GraphElementLine()
        : lineWidth(2)
 8004204:	f04f 0202 	mov.w	r2, #2
 8004208:	4bcb      	ldr	r3, [pc, #812]	; (8004538 <_ZN19ScreenGraphViewBaseC1Ev+0x3d4>)
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 800420a:	f8df 9350 	ldr.w	r9, [pc, #848]	; 800455c <_ZN19ScreenGraphViewBaseC1Ev+0x3f8>
 800420e:	f884 2ba8 	strb.w	r2, [r4, #2984]	; 0xba8
 8004212:	f604 32ac 	addw	r2, r4, #2988	; 0xbac
 8004216:	f8c4 3b7c 	str.w	r3, [r4, #2940]	; 0xb7c
 800421a:	4610      	mov	r0, r2
 800421c:	9207      	str	r2, [sp, #28]
 800421e:	f7ff ff2f 	bl	8004080 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8004222:	f109 0224 	add.w	r2, r9, #36	; 0x24
 8004226:	f504 613c 	add.w	r1, r4, #3008	; 0xbc0
 800422a:	f8c4 2bb4 	str.w	r2, [r4, #2996]	; 0xbb4
 800422e:	f8c4 9bac 	str.w	r9, [r4, #2988]	; 0xbac
class GraphElementGridX : public GraphElementGridBase
 8004232:	4608      	mov	r0, r1
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
 8004234:	f8c4 5bb8 	str.w	r5, [r4, #3000]	; 0xbb8
 8004238:	f8df a324 	ldr.w	sl, [pc, #804]	; 8004560 <_ZN19ScreenGraphViewBaseC1Ev+0x3fc>
class GraphElementGridY : public GraphElementGridBase
 800423c:	4fbf      	ldr	r7, [pc, #764]	; (800453c <_ZN19ScreenGraphViewBaseC1Ev+0x3d8>)
 800423e:	ee0f 1a90 	vmov	s31, r1
class GraphElementGridX : public GraphElementGridBase
 8004242:	f7ff ff09 	bl	8004058 <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 8004246:	f504 6140 	add.w	r1, r4, #3072	; 0xc00
 800424a:	f8c4 abc0 	str.w	sl, [r4, #3008]	; 0xbc0
class GraphElementGridY : public GraphElementGridBase
 800424e:	4608      	mov	r0, r1
 8004250:	9108      	str	r1, [sp, #32]
 8004252:	f7ff ff01 	bl	8004058 <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 8004256:	f504 6144 	add.w	r1, r4, #3136	; 0xc40
 800425a:	f8c4 7c00 	str.w	r7, [r4, #3072]	; 0xc00
class GraphElementGridX : public GraphElementGridBase
 800425e:	4608      	mov	r0, r1
 8004260:	ee0e 1a10 	vmov	s28, r1
 8004264:	f7ff fef8 	bl	8004058 <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 8004268:	f504 6148 	add.w	r1, r4, #3200	; 0xc80
 800426c:	f8c4 ac40 	str.w	sl, [r4, #3136]	; 0xc40
class GraphElementGridY : public GraphElementGridBase
 8004270:	4608      	mov	r0, r1
 8004272:	ee0e 1a90 	vmov	s29, r1
 8004276:	f7ff feef 	bl	8004058 <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 800427a:	f504 614c 	add.w	r1, r4, #3264	; 0xcc0
 800427e:	f8c4 7c80 	str.w	r7, [r4, #3200]	; 0xc80

/**
 * GraphLabelsX will draw labels along the X axis at given intervals. By combining two
 * GraphLabelsX it is possible to have different appearance for major and minor y offsets.
 */
class GraphLabelsX : public GraphLabelsBase
 8004282:	4608      	mov	r0, r1
 8004284:	9109      	str	r1, [sp, #36]	; 0x24
 8004286:	f7ff ff2d 	bl	80040e4 <_ZN8touchgfx15GraphLabelsBaseC1Ev>
 800428a:	4aad      	ldr	r2, [pc, #692]	; (8004540 <_ZN19ScreenGraphViewBaseC1Ev+0x3dc>)
 800428c:	f8c4 2cc0 	str.w	r2, [r4, #3264]	; 0xcc0
 8004290:	f604 510c 	addw	r1, r4, #3340	; 0xd0c

/**
 * GraphLabelsY will draw labels along the Y axis at given intervals. By combining two
 * GraphLabelsY it is possible to have different appearance for major and minor y offsets.
 */
class GraphLabelsY : public GraphLabelsBase
 8004294:	4608      	mov	r0, r1
 8004296:	f604 5858 	addw	r8, r4, #3416	; 0xd58
 800429a:	910a      	str	r1, [sp, #40]	; 0x28
 800429c:	f7ff ff22 	bl	80040e4 <_ZN8touchgfx15GraphLabelsBaseC1Ev>
 80042a0:	49a8      	ldr	r1, [pc, #672]	; (8004544 <_ZN19ScreenGraphViewBaseC1Ev+0x3e0>)
 80042a2:	f8c4 1d0c 	str.w	r1, [r4, #3340]	; 0xd0c
        : AbstractDataGraph(capacity), xAxisFactor(1), xAxisOffset(0), yValues(values), dataCounter(0)
 80042a6:	4640      	mov	r0, r8
 80042a8:	213c      	movs	r1, #60	; 0x3c
 80042aa:	f008 fa5d 	bl	800c768 <_ZN8touchgfx17AbstractDataGraphC1Es>
 80042ae:	4ba0      	ldr	r3, [pc, #640]	; (8004530 <_ZN19ScreenGraphViewBaseC1Ev+0x3cc>)
 80042b0:	f8c4 3d58 	str.w	r3, [r4, #3416]	; 0xd58
 80042b4:	2001      	movs	r0, #1
        : GraphScrollData(CAPACITY, y)
 80042b6:	f604 63a8 	addw	r3, r4, #3752	; 0xea8
        DynamicDataGraph::setGraphRangeX(0, capacity - 1);
 80042ba:	4629      	mov	r1, r5
 80042bc:	223b      	movs	r2, #59	; 0x3b
        : AbstractDataGraph(capacity), xAxisFactor(1), xAxisOffset(0), yValues(values), dataCounter(0)
 80042be:	f8c4 0e94 	str.w	r0, [r4, #3732]	; 0xe94
 80042c2:	f8c4 3e9c 	str.w	r3, [r4, #3740]	; 0xe9c
        DynamicDataGraph::setGraphRangeX(0, capacity - 1);
 80042c6:	4640      	mov	r0, r8
        : AbstractDataGraph(capacity), xAxisFactor(1), xAxisOffset(0), yValues(values), dataCounter(0)
 80042c8:	f8c4 5e98 	str.w	r5, [r4, #3736]	; 0xe98
 80042cc:	f8c4 5ea0 	str.w	r5, [r4, #3744]	; 0xea0
        DynamicDataGraph::setGraphRangeX(0, capacity - 1);
 80042d0:	f7ff f9c6 	bl	8003660 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>
 80042d4:	4b9c      	ldr	r3, [pc, #624]	; (8004548 <_ZN19ScreenGraphViewBaseC1Ev+0x3e4>)
 80042d6:	f8c4 3d58 	str.w	r3, [r4, #3416]	; 0xd58
 80042da:	f604 7098 	addw	r0, r4, #3992	; 0xf98
        : DynamicDataGraph(capacity, values), current(0)
 80042de:	f8a4 5ea4 	strh.w	r5, [r4, #3748]	; 0xea4
 80042e2:	900b      	str	r0, [sp, #44]	; 0x2c
        : CanvasWidget()
 80042e4:	f007 fe8c 	bl	800c000 <_ZN8touchgfx12CanvasWidgetC1Ev>
        : lineWidth(2)
 80042e8:	4b93      	ldr	r3, [pc, #588]	; (8004538 <_ZN19ScreenGraphViewBaseC1Ev+0x3d4>)
 80042ea:	f8c4 3f98 	str.w	r3, [r4, #3992]	; 0xf98
 80042ee:	f04f 0302 	mov.w	r3, #2
 80042f2:	f884 3fc4 	strb.w	r3, [r4, #4036]	; 0xfc4
 80042f6:	f604 70c8 	addw	r0, r4, #4040	; 0xfc8
 80042fa:	900c      	str	r0, [sp, #48]	; 0x30
 80042fc:	f7ff fec0 	bl	8004080 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8004300:	f109 0224 	add.w	r2, r9, #36	; 0x24
 8004304:	f8c4 2fd0 	str.w	r2, [r4, #4048]	; 0xfd0
 8004308:	f8c4 9fc8 	str.w	r9, [r4, #4040]	; 0xfc8
 800430c:	f604 70dc 	addw	r0, r4, #4060	; 0xfdc
 8004310:	f8c4 5fd4 	str.w	r5, [r4, #4052]	; 0xfd4
 8004314:	900d      	str	r0, [sp, #52]	; 0x34
class GraphElementGridX : public GraphElementGridBase
 8004316:	f7ff fe9f 	bl	8004058 <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 800431a:	f504 5080 	add.w	r0, r4, #4096	; 0x1000
class GraphElementGridY : public GraphElementGridBase
 800431e:	f504 5980 	add.w	r9, r4, #4096	; 0x1000
class GraphElementGridX : public GraphElementGridBase
 8004322:	f8c4 afdc 	str.w	sl, [r4, #4060]	; 0xfdc
 8004326:	301c      	adds	r0, #28
 8004328:	9005      	str	r0, [sp, #20]
class GraphElementGridY : public GraphElementGridBase
 800432a:	f7ff fe95 	bl	8004058 <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 800432e:	f504 5082 	add.w	r0, r4, #4160	; 0x1040
 8004332:	f8c9 701c 	str.w	r7, [r9, #28]
 8004336:	301c      	adds	r0, #28
 8004338:	9003      	str	r0, [sp, #12]
class GraphElementGridX : public GraphElementGridBase
 800433a:	f7ff fe8d 	bl	8004058 <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 800433e:	f504 5084 	add.w	r0, r4, #4224	; 0x1080
 8004342:	f8c9 a05c 	str.w	sl, [r9, #92]	; 0x5c
 8004346:	301c      	adds	r0, #28
 8004348:	9004      	str	r0, [sp, #16]
class GraphElementGridY : public GraphElementGridBase
 800434a:	f7ff fe85 	bl	8004058 <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 800434e:	f504 5086 	add.w	r0, r4, #4288	; 0x10c0
 8004352:	f8c9 709c 	str.w	r7, [r9, #156]	; 0x9c
 8004356:	301c      	adds	r0, #28
 8004358:	9006      	str	r0, [sp, #24]
 800435a:	f7ff fec3 	bl	80040e4 <_ZN8touchgfx15GraphLabelsBaseC1Ev>
 800435e:	4979      	ldr	r1, [pc, #484]	; (8004544 <_ZN19ScreenGraphViewBaseC1Ev+0x3e0>)
 8004360:	f8c9 10dc 	str.w	r1, [r9, #220]	; 0xdc
 8004364:	f504 5189 	add.w	r1, r4, #4384	; 0x1120
 8004368:	3108      	adds	r1, #8
 */
class Button : public AbstractButton
{
public:
    Button()
        : AbstractButton(), up(), down(), alpha(255)
 800436a:	4608      	mov	r0, r1
 800436c:	ee09 1a10 	vmov	s18, r1
 8004370:	f7ff fed6 	bl	8004120 <_ZN8touchgfx14AbstractButtonC1Ev>
 * A ToggleButton is a Button specialization that swaps the two bitmaps when clicked, such that
 * the previous "pressed" bitmap, now becomes the one displayed when button is not
 * pressed. This can by used to give the effect of a button that can be pressed in and
 * when it is subsequently pressed, it will pop back out.
 */
class ToggleButton : public Button
 8004374:	4b75      	ldr	r3, [pc, #468]	; (800454c <_ZN19ScreenGraphViewBaseC1Ev+0x3e8>)
 8004376:	f8c9 3128 	str.w	r3, [r9, #296]	; 0x128
 800437a:	f504 518b 	add.w	r1, r4, #4448	; 0x1160
 800437e:	f8a9 6156 	strh.w	r6, [r9, #342]	; 0x156
 8004382:	f8a9 6158 	strh.w	r6, [r9, #344]	; 0x158
 8004386:	f889 615a 	strb.w	r6, [r9, #346]	; 0x15a
 800438a:	f8a9 615c 	strh.w	r6, [r9, #348]	; 0x15c
 800438e:	4608      	mov	r0, r1
 8004390:	ee09 1a90 	vmov	s19, r1
 8004394:	f7fe fd4c 	bl	8002e30 <_ZN8touchgfx8TextAreaC1Ev>
 8004398:	f504 518d 	add.w	r1, r4, #4512	; 0x11a0
 800439c:	3108      	adds	r1, #8
 800439e:	4608      	mov	r0, r1
 80043a0:	ee08 1a10 	vmov	s16, r1
 80043a4:	f7ff fed2 	bl	800414c <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80043a8:	f504 518f 	add.w	r1, r4, #4576	; 0x11e0
 80043ac:	3114      	adds	r1, #20
 80043ae:	4608      	mov	r0, r1
 80043b0:	ee0a 1a10 	vmov	s20, r1
 80043b4:	f7ff feca 	bl	800414c <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80043b8:	f504 5192 	add.w	r1, r4, #4672	; 0x1240
 80043bc:	4608      	mov	r0, r1
 80043be:	ee0c 1a90 	vmov	s25, r1
 80043c2:	f7ff fec3 	bl	800414c <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80043c6:	f504 5194 	add.w	r1, r4, #4736	; 0x1280
 80043ca:	310c      	adds	r1, #12
 80043cc:	f504 5a96 	add.w	sl, r4, #4800	; 0x12c0
 80043d0:	4608      	mov	r0, r1
 80043d2:	f10a 0a18 	add.w	sl, sl, #24
 80043d6:	ee0a 1a90 	vmov	s21, r1
 80043da:	f7ff feb7 	bl	800414c <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80043de:	4650      	mov	r0, sl
 80043e0:	f006 fb1a 	bl	800aa18 <_ZN8touchgfx11ModalWindowC1Ev>
 80043e4:	f504 519c 	add.w	r1, r4, #4992	; 0x1380
 80043e8:	3108      	adds	r1, #8
 80043ea:	4608      	mov	r0, r1
 80043ec:	ee0d 1a10 	vmov	s26, r1
 80043f0:	f7ff fe96 	bl	8004120 <_ZN8touchgfx14AbstractButtonC1Ev>
 80043f4:	f504 519d 	add.w	r1, r4, #5024	; 0x13a0
 80043f8:	311c      	adds	r1, #28
 80043fa:	4b55      	ldr	r3, [pc, #340]	; (8004550 <_ZN19ScreenGraphViewBaseC1Ev+0x3ec>)
 80043fc:	f8c9 3388 	str.w	r3, [r9, #904]	; 0x388
 8004400:	460b      	mov	r3, r1
 8004402:	4618      	mov	r0, r3
 8004404:	f8a9 63b6 	strh.w	r6, [r9, #950]	; 0x3b6
 8004408:	f8a9 63b8 	strh.w	r6, [r9, #952]	; 0x3b8
 800440c:	f889 63ba 	strb.w	r6, [r9, #954]	; 0x3ba
 8004410:	ee0b 1a10 	vmov	s22, r1
 8004414:	a914      	add	r1, sp, #80	; 0x50
 8004416:	f8ad 6050 	strh.w	r6, [sp, #80]	; 0x50
 800441a:	f7fe fcef 	bl	8002dfc <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 800441e:	f504 519f 	add.w	r1, r4, #5088	; 0x13e0
 8004422:	3108      	adds	r1, #8
 8004424:	4608      	mov	r0, r1
 8004426:	ee08 1a90 	vmov	s17, r1
 800442a:	f7fe fd01 	bl	8002e30 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 800442e:	4b49      	ldr	r3, [pc, #292]	; (8004554 <_ZN19ScreenGraphViewBaseC1Ev+0x3f0>)
 8004430:	f8c9 346c 	str.w	r3, [r9, #1132]	; 0x46c
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8004434:	f504 50a3 	add.w	r0, r4, #5216	; 0x1460
 8004438:	4b47      	ldr	r3, [pc, #284]	; (8004558 <_ZN19ScreenGraphViewBaseC1Ev+0x3f4>)
 800443a:	f8c9 3474 	str.w	r3, [r9, #1140]	; 0x474
 800443e:	f44f 5196 	mov.w	r1, #4800	; 0x12c0
 8004442:	301c      	adds	r0, #28
 8004444:	f8c9 4470 	str.w	r4, [r9, #1136]	; 0x470
 8004448:	f8c9 5478 	str.w	r5, [r9, #1144]	; 0x478
 800444c:	f00b f9d0 	bl	800f7f0 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 320, 240);
 8004450:	23f0      	movs	r3, #240	; 0xf0
 8004452:	ee1b 0a90 	vmov	r0, s23
 8004456:	9300      	str	r3, [sp, #0]
 8004458:	462a      	mov	r2, r5
 800445a:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800445e:	4629      	mov	r1, r5
 8004460:	f7fe fc93 	bl	8002d8a <_ZN8touchgfx8Drawable11setPositionEssss>
 8004464:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
    Background.setXY(-109, -23);
 8004468:	f06f 0216 	mvn.w	r2, #22
 800446c:	ee1c 0a10 	vmov	r0, s24
 8004470:	66a1      	str	r1, [r4, #104]	; 0x68
 8004472:	f06f 016c 	mvn.w	r1, #108	; 0x6c
 8004476:	f7fe fc49 	bl	8002d0c <_ZN8touchgfx8Drawable5setXYEss>
 800447a:	f04f 0104 	mov.w	r1, #4
    Background.setBitmap(touchgfx::Bitmap(BITMAP_DARK_BACKGROUNDS_MAIN_BG_TEXTURE_480X272PX_ID));
 800447e:	ee1c 0a10 	vmov	r0, s24
 8004482:	f8ad 1050 	strh.w	r1, [sp, #80]	; 0x50
 8004486:	a914      	add	r1, sp, #80	; 0x50
 8004488:	f00a f9c4 	bl	800e814 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    boxWithBorder1.setPosition(0, 0, 320, 166);
 800448c:	21a6      	movs	r1, #166	; 0xa6
 800448e:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8004492:	ee1d 0a90 	vmov	r0, s27
 8004496:	9100      	str	r1, [sp, #0]
 8004498:	462a      	mov	r2, r5
 800449a:	4629      	mov	r1, r5
 800449c:	f7fe fc75 	bl	8002d8a <_ZN8touchgfx8Drawable11setPositionEssss>
 80044a0:	f04f 31ff 	mov.w	r1, #4294967295
 80044a4:	f8c4 10c0 	str.w	r1, [r4, #192]	; 0xc0
        borderColor = colorBorder;
 80044a8:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
 80044ac:	f8c4 10c4 	str.w	r1, [r4, #196]	; 0xc4
        borderSize = size;
 80044b0:	f04f 0101 	mov.w	r1, #1
 80044b4:	f8a4 10c8 	strh.w	r1, [r4, #200]	; 0xc8
    dynamicGraph2.setScale(1000);
 80044b8:	462a      	mov	r2, r5
 80044ba:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 80044be:	4658      	mov	r0, fp
 80044c0:	f7ff fa82 	bl	80039c8 <_ZN8touchgfx16DynamicDataGraph8setScaleEib>
    dynamicGraph2.setGraphRangeX(0, 10);
 80044c4:	220a      	movs	r2, #10
 80044c6:	4629      	mov	r1, r5
 80044c8:	4658      	mov	r0, fp
 80044ca:	f7ff f8c9 	bl	8003660 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>
    dynamicGraph2.setPosition(0, 0, 320, 166);
 80044ce:	21a6      	movs	r1, #166	; 0xa6
 80044d0:	9100      	str	r1, [sp, #0]
 80044d2:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80044d6:	462a      	mov	r2, r5
 80044d8:	4629      	mov	r1, r5
 80044da:	4658      	mov	r0, fp
 80044dc:	f7fe fc55 	bl	8002d8a <_ZN8touchgfx8Drawable11setPositionEssss>
    dynamicGraph2.setGraphAreaMargin(6, 20, 5, 15);
 80044e0:	210f      	movs	r1, #15
 80044e2:	9100      	str	r1, [sp, #0]
 80044e4:	2305      	movs	r3, #5
 80044e6:	2214      	movs	r2, #20
 80044e8:	2106      	movs	r1, #6
 80044ea:	4658      	mov	r0, fp
 80044ec:	f008 f8ee 	bl	800c6cc <_ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss>
    dynamicGraph2.setGraphAreaPadding(0, 0, 0, 0);
 80044f0:	462b      	mov	r3, r5
 80044f2:	462a      	mov	r2, r5
 80044f4:	4629      	mov	r1, r5
 80044f6:	4658      	mov	r0, fp
 80044f8:	9500      	str	r5, [sp, #0]
 80044fa:	f007 ffea 	bl	800c4d2 <_ZN8touchgfx17AbstractDataGraph19setGraphAreaPaddingEssss>
    dynamicGraph2.setGraphRangeY(1.0f, 1.5f);
 80044fe:	eef7 0a08 	vmov.f32	s1, #120	; 0x3fc00000  1.5
 8004502:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 8004506:	4658      	mov	r0, fp
 8004508:	f7ff f940 	bl	800378c <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 800450c:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8004510:	f8d4 1bf0 	ldr.w	r1, [r4, #3056]	; 0xbf0
 8004514:	f8d4 0bf4 	ldr.w	r0, [r4, #3060]	; 0xbf4
        visible = vis;
 8004518:	f884 50f1 	strb.w	r5, [r4, #241]	; 0xf1
 800451c:	f008 f988 	bl	800c830 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        majorGrid = &major;
 8004520:	ee1e 3a10 	vmov	r3, s28
 8004524:	e01e      	b.n	8004564 <_ZN19ScreenGraphViewBaseC1Ev+0x400>
 8004526:	bf00      	nop
 8004528:	0802337c 	.word	0x0802337c
 800452c:	08024208 	.word	0x08024208
 8004530:	080239cc 	.word	0x080239cc
 8004534:	0802302c 	.word	0x0802302c
 8004538:	08023ca4 	.word	0x08023ca4
 800453c:	08022f54 	.word	0x08022f54
 8004540:	08023dd8 	.word	0x08023dd8
 8004544:	08023e78 	.word	0x08023e78
 8004548:	080231c8 	.word	0x080231c8
 800454c:	08024028 	.word	0x08024028
 8004550:	08024194 	.word	0x08024194
 8004554:	08023364 	.word	0x08023364
 8004558:	08003f75 	.word	0x08003f75
 800455c:	0802391c 	.word	0x0802391c
 8004560:	08022e9c 	.word	0x08022e9c
        dataScale = scale;
 8004564:	f44f 767a 	mov.w	r6, #1000	; 0x3e8
        color = newColor;
 8004568:	4fd3      	ldr	r7, [pc, #844]	; (80048b8 <_ZN19ScreenGraphViewBaseC1Ev+0x754>)
        majorGrid = &major;
 800456a:	f8c4 3bfc 	str.w	r3, [r4, #3068]	; 0xbfc
        lineWidth = width;
 800456e:	f04f 0101 	mov.w	r1, #1
        dataScale = scale;
 8004572:	f8c4 6bf0 	str.w	r6, [r4, #3056]	; 0xbf0
        color = newColor;
 8004576:	f8c4 7bec 	str.w	r7, [r4, #3052]	; 0xbec
        gridInterval = abs(interval);
 800457a:	f8c4 6bf4 	str.w	r6, [r4, #3060]	; 0xbf4
        lineWidth = width;
 800457e:	f884 1bf8 	strb.w	r1, [r4, #3064]	; 0xbf8
    dynamicGraph2.addGraphElement(dynamicGraph2MinorXAxisGrid);
 8004582:	4658      	mov	r0, fp
 8004584:	ee1f 1a90 	vmov	r1, s31
 8004588:	f007 ffae 	bl	800c4e8 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 800458c:	4632      	mov	r2, r6
 800458e:	f8d4 1c30 	ldr.w	r1, [r4, #3120]	; 0xc30
 8004592:	f8d4 0c34 	ldr.w	r0, [r4, #3124]	; 0xc34
 8004596:	f008 f94b 	bl	800c830 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        majorGrid = &major;
 800459a:	ee1e 3a90 	vmov	r3, s29
        gridInterval = abs(interval);
 800459e:	204b      	movs	r0, #75	; 0x4b
        lineWidth = width;
 80045a0:	f04f 0101 	mov.w	r1, #1
        majorGrid = &major;
 80045a4:	f8c4 3c3c 	str.w	r3, [r4, #3132]	; 0xc3c
        dataScale = scale;
 80045a8:	f8c4 6c30 	str.w	r6, [r4, #3120]	; 0xc30
        color = newColor;
 80045ac:	f8c4 7c2c 	str.w	r7, [r4, #3116]	; 0xc2c
        gridInterval = abs(interval);
 80045b0:	f8c4 0c34 	str.w	r0, [r4, #3124]	; 0xc34
        lineWidth = width;
 80045b4:	f884 1c38 	strb.w	r1, [r4, #3128]	; 0xc38
    dynamicGraph2.addGraphElement(dynamicGraph2MinorYAxisGrid);
 80045b8:	4658      	mov	r0, fp
 80045ba:	9908      	ldr	r1, [sp, #32]
 80045bc:	f007 ff94 	bl	800c4e8 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 80045c0:	4632      	mov	r2, r6
 80045c2:	f8d4 1c70 	ldr.w	r1, [r4, #3184]	; 0xc70
 80045c6:	f8d4 0c74 	ldr.w	r0, [r4, #3188]	; 0xc74
 80045ca:	f008 f931 	bl	800c830 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        lineWidth = width;
 80045ce:	f04f 0302 	mov.w	r3, #2
 80045d2:	f884 3c78 	strb.w	r3, [r4, #3192]	; 0xc78
    dynamicGraph2.addGraphElement(dynamicGraph2MajorXAxisGrid);
 80045d6:	ee1e 1a10 	vmov	r1, s28
        dataScale = scale;
 80045da:	f8c4 6c70 	str.w	r6, [r4, #3184]	; 0xc70
        color = newColor;
 80045de:	f8c4 7c6c 	str.w	r7, [r4, #3180]	; 0xc6c
        gridInterval = abs(interval);
 80045e2:	f8c4 6c74 	str.w	r6, [r4, #3188]	; 0xc74
 80045e6:	4658      	mov	r0, fp
 80045e8:	f007 ff7e 	bl	800c4e8 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 80045ec:	4632      	mov	r2, r6
 80045ee:	f8d4 1cb0 	ldr.w	r1, [r4, #3248]	; 0xcb0
 80045f2:	f8d4 0cb4 	ldr.w	r0, [r4, #3252]	; 0xcb4
 80045f6:	f008 f91b 	bl	800c830 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        lineWidth = width;
 80045fa:	f04f 0302 	mov.w	r3, #2
        gridInterval = abs(interval);
 80045fe:	2196      	movs	r1, #150	; 0x96
        lineWidth = width;
 8004600:	f884 3cb8 	strb.w	r3, [r4, #3256]	; 0xcb8
        dataScale = scale;
 8004604:	f8c4 6cb0 	str.w	r6, [r4, #3248]	; 0xcb0
        color = newColor;
 8004608:	f8c4 7cac 	str.w	r7, [r4, #3244]	; 0xcac
        gridInterval = abs(interval);
 800460c:	f8c4 1cb4 	str.w	r1, [r4, #3252]	; 0xcb4
    dynamicGraph2.addGraphElement(dynamicGraph2MajorYAxisGrid);
 8004610:	4658      	mov	r0, fp
 8004612:	ee1e 1a90 	vmov	r1, s29
 8004616:	f007 ff67 	bl	800c4e8 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        labelInterval = AbstractDataGraph::convertToNewScale(labelInterval, dataScale, scale);
 800461a:	4632      	mov	r2, r6
 800461c:	f8d4 1cf0 	ldr.w	r1, [r4, #3312]	; 0xcf0
 8004620:	f8d4 0cf4 	ldr.w	r0, [r4, #3316]	; 0xcf4
 8004624:	f008 f904 	bl	800c830 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
class TypedText
 8004628:	f04f 0207 	mov.w	r2, #7
    dynamicGraph2.addBottomElement(dynamicGraph2MajorXAxisLabel);
 800462c:	9909      	ldr	r1, [sp, #36]	; 0x24
        dataScale = scale;
 800462e:	f8c4 6cf0 	str.w	r6, [r4, #3312]	; 0xcf0
        labelInterval = abs(interval);
 8004632:	f8c4 6cf4 	str.w	r6, [r4, #3316]	; 0xcf4
 8004636:	f8a4 2cfc 	strh.w	r2, [r4, #3324]	; 0xcfc
        color = newColor;
 800463a:	f8c4 7cec 	str.w	r7, [r4, #3308]	; 0xcec
 800463e:	4658      	mov	r0, fp
 8004640:	f007 ff76 	bl	800c530 <_ZN8touchgfx17AbstractDataGraph16addBottomElementERNS_23AbstractGraphDecorationE>
        labelInterval = AbstractDataGraph::convertToNewScale(labelInterval, dataScale, scale);
 8004644:	4632      	mov	r2, r6
 8004646:	f8d4 1d3c 	ldr.w	r1, [r4, #3388]	; 0xd3c
 800464a:	f8d4 0d40 	ldr.w	r0, [r4, #3392]	; 0xd40
 800464e:	f008 f8ef 	bl	800c830 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        labelInterval = abs(interval);
 8004652:	2296      	movs	r2, #150	; 0x96
 8004654:	f8c4 2d40 	str.w	r2, [r4, #3392]	; 0xd40
 8004658:	f04f 0206 	mov.w	r2, #6
 800465c:	f8a4 2d48 	strh.w	r2, [r4, #3400]	; 0xd48
        labelDecimals = decimals;
 8004660:	f04f 0201 	mov.w	r2, #1
    dynamicGraph2.addLeftElement(dynamicGraph2MajorYAxisLabel);
 8004664:	990a      	ldr	r1, [sp, #40]	; 0x28
        dataScale = scale;
 8004666:	f8c4 6d3c 	str.w	r6, [r4, #3388]	; 0xd3c
        labelDecimals = decimals;
 800466a:	f8a4 2d4e 	strh.w	r2, [r4, #3406]	; 0xd4e
 800466e:	f8c4 7d38 	str.w	r7, [r4, #3384]	; 0xd38
 8004672:	4658      	mov	r0, fp
 8004674:	f007 ff4a 	bl	800c50c <_ZN8touchgfx17AbstractDataGraph14addLeftElementERNS_23AbstractGraphDecorationE>
        canvasPainter = &painter;
 8004678:	9b07      	ldr	r3, [sp, #28]
 800467a:	f8c4 3ba4 	str.w	r3, [r4, #2980]	; 0xba4
 800467e:	f04f 427f 	mov.w	r2, #4278190080	; 0xff000000
     *
     * @see getLineWidth
     */
    FORCE_INLINE_FUNCTION void setLineWidth(uint8_t width)
    {
        lineWidth = width;
 8004682:	f04f 0302 	mov.w	r3, #2
 8004686:	f884 3ba8 	strb.w	r3, [r4, #2984]	; 0xba8
    dynamicGraph2.addGraphElement(dynamicGraph2Line1);
 800468a:	ee1f 1a10 	vmov	r1, s30
 800468e:	f8c4 2bb8 	str.w	r2, [r4, #3000]	; 0xbb8
 8004692:	4658      	mov	r0, fp
    }

    virtual void setColor(colortype color)
    {
        AbstractPainterColor::setColor(color);
        color565 = LCD16bpp::getNativeColor(painterColor);
 8004694:	f8a4 5bbc 	strh.w	r5, [r4, #3004]	; 0xbbc
 8004698:	f007 ff26 	bl	800c4e8 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
    dynamicGraph1.setScale(1000);
 800469c:	4631      	mov	r1, r6
 800469e:	462a      	mov	r2, r5
 80046a0:	4640      	mov	r0, r8
 80046a2:	f7ff f991 	bl	80039c8 <_ZN8touchgfx16DynamicDataGraph8setScaleEib>
    dynamicGraph1.setPosition(0, 0, 320, 166);
 80046a6:	22a6      	movs	r2, #166	; 0xa6
 80046a8:	9200      	str	r2, [sp, #0]
 80046aa:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80046ae:	462a      	mov	r2, r5
 80046b0:	4629      	mov	r1, r5
 80046b2:	4640      	mov	r0, r8
 80046b4:	f7fe fb69 	bl	8002d8a <_ZN8touchgfx8Drawable11setPositionEssss>
    dynamicGraph1.setGraphAreaMargin(6, 24, 0, 15);
 80046b8:	220f      	movs	r2, #15
 80046ba:	9200      	str	r2, [sp, #0]
 80046bc:	462b      	mov	r3, r5
 80046be:	2218      	movs	r2, #24
 80046c0:	2106      	movs	r1, #6
 80046c2:	4640      	mov	r0, r8
 80046c4:	f008 f802 	bl	800c6cc <_ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss>
    dynamicGraph1.setGraphAreaPadding(0, 0, 0, 0);
 80046c8:	462b      	mov	r3, r5
 80046ca:	462a      	mov	r2, r5
 80046cc:	4629      	mov	r1, r5
 80046ce:	4640      	mov	r0, r8
 80046d0:	9500      	str	r5, [sp, #0]
 80046d2:	f007 fefe 	bl	800c4d2 <_ZN8touchgfx17AbstractDataGraph19setGraphAreaPaddingEssss>
    dynamicGraph1.setGraphRangeY(1.0f, 1.5f);
 80046d6:	eef7 0a08 	vmov.f32	s1, #120	; 0x3fc00000  1.5
 80046da:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 80046de:	4640      	mov	r0, r8
 80046e0:	f7ff f854 	bl	800378c <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 80046e4:	4632      	mov	r2, r6
 80046e6:	e9d9 1003 	ldrd	r1, r0, [r9, #12]
 80046ea:	f008 f8a1 	bl	800c830 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        gridInterval = abs(interval);
 80046ee:	f241 3288 	movw	r2, #5000	; 0x1388
        majorGrid = &major;
 80046f2:	9b03      	ldr	r3, [sp, #12]
        gridInterval = abs(interval);
 80046f4:	f8c9 2010 	str.w	r2, [r9, #16]
        lineWidth = width;
 80046f8:	f04f 0201 	mov.w	r2, #1
        color = newColor;
 80046fc:	e9c9 7602 	strd	r7, r6, [r9, #8]
        majorGrid = &major;
 8004700:	f8c9 3018 	str.w	r3, [r9, #24]
    dynamicGraph1.addGraphElement(dynamicGraph1MinorXAxisGrid);
 8004704:	990d      	ldr	r1, [sp, #52]	; 0x34
        lineWidth = width;
 8004706:	f889 2014 	strb.w	r2, [r9, #20]
 800470a:	4640      	mov	r0, r8
 800470c:	f007 feec 	bl	800c4e8 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 8004710:	4632      	mov	r2, r6
 8004712:	e9d9 1013 	ldrd	r1, r0, [r9, #76]	; 0x4c
 8004716:	f008 f88b 	bl	800c830 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        gridInterval = abs(interval);
 800471a:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
        lineWidth = width;
 800471e:	f04f 0201 	mov.w	r2, #1
        gridInterval = abs(interval);
 8004722:	f8c9 3050 	str.w	r3, [r9, #80]	; 0x50
        majorGrid = &major;
 8004726:	9b04      	ldr	r3, [sp, #16]
 8004728:	f8c9 3058 	str.w	r3, [r9, #88]	; 0x58
        color = newColor;
 800472c:	e9c9 7612 	strd	r7, r6, [r9, #72]	; 0x48
    dynamicGraph1.addGraphElement(dynamicGraph1MinorYAxisGrid);
 8004730:	9905      	ldr	r1, [sp, #20]
        lineWidth = width;
 8004732:	f889 2054 	strb.w	r2, [r9, #84]	; 0x54
 8004736:	4640      	mov	r0, r8
 8004738:	f007 fed6 	bl	800c4e8 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 800473c:	4632      	mov	r2, r6
 800473e:	e9d9 1023 	ldrd	r1, r0, [r9, #140]	; 0x8c
 8004742:	f008 f875 	bl	800c830 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        gridInterval = abs(interval);
 8004746:	f242 7310 	movw	r3, #10000	; 0x2710
 800474a:	f8c9 3090 	str.w	r3, [r9, #144]	; 0x90
        lineWidth = width;
 800474e:	f04f 0302 	mov.w	r3, #2
        color = newColor;
 8004752:	e9c9 7622 	strd	r7, r6, [r9, #136]	; 0x88
        lineWidth = width;
 8004756:	f889 3094 	strb.w	r3, [r9, #148]	; 0x94
    dynamicGraph1.addGraphElement(dynamicGraph1MajorXAxisGrid);
 800475a:	9903      	ldr	r1, [sp, #12]
 800475c:	4640      	mov	r0, r8
 800475e:	f007 fec3 	bl	800c4e8 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 8004762:	4632      	mov	r2, r6
 8004764:	e9d9 1033 	ldrd	r1, r0, [r9, #204]	; 0xcc
 8004768:	f008 f862 	bl	800c830 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        lineWidth = width;
 800476c:	f04f 0302 	mov.w	r3, #2
        color = newColor;
 8004770:	e9c9 7632 	strd	r7, r6, [r9, #200]	; 0xc8
        lineWidth = width;
 8004774:	f889 30d4 	strb.w	r3, [r9, #212]	; 0xd4
    dynamicGraph1.addGraphElement(dynamicGraph1MajorYAxisGrid);
 8004778:	9904      	ldr	r1, [sp, #16]
        gridInterval = abs(interval);
 800477a:	f8c9 60d0 	str.w	r6, [r9, #208]	; 0xd0
 800477e:	4640      	mov	r0, r8
 8004780:	f007 feb2 	bl	800c4e8 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        labelInterval = AbstractDataGraph::convertToNewScale(labelInterval, dataScale, scale);
 8004784:	4632      	mov	r2, r6
 8004786:	e9d9 1043 	ldrd	r1, r0, [r9, #268]	; 0x10c
 800478a:	f008 f851 	bl	800c830 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        labelInterval = abs(interval);
 800478e:	2396      	movs	r3, #150	; 0x96
 8004790:	f8c9 3110 	str.w	r3, [r9, #272]	; 0x110
 8004794:	f04f 030f 	mov.w	r3, #15
 8004798:	f8a9 3118 	strh.w	r3, [r9, #280]	; 0x118
        labelDecimals = decimals;
 800479c:	f04f 0302 	mov.w	r3, #2
    dynamicGraph1.addLeftElement(dynamicGraph1MajorYAxisLabel);
 80047a0:	9906      	ldr	r1, [sp, #24]
        dataScale = scale;
 80047a2:	f8c9 610c 	str.w	r6, [r9, #268]	; 0x10c
        labelDecimals = decimals;
 80047a6:	f8a9 311e 	strh.w	r3, [r9, #286]	; 0x11e
        color = newColor;
 80047aa:	f8c9 7108 	str.w	r7, [r9, #264]	; 0x108
 80047ae:	4640      	mov	r0, r8
 80047b0:	f007 feac 	bl	800c50c <_ZN8touchgfx17AbstractDataGraph14addLeftElementERNS_23AbstractGraphDecorationE>
 80047b4:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80047b8:	f8c4 3fd4 	str.w	r3, [r4, #4052]	; 0xfd4
 80047bc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80047be:	f8c4 3fc0 	str.w	r3, [r4, #4032]	; 0xfc0
        lineWidth = width;
 80047c2:	f04f 0302 	mov.w	r3, #2
 80047c6:	f884 3fc4 	strb.w	r3, [r4, #4036]	; 0xfc4
    dynamicGraph1.addGraphElement(dynamicGraph1Line1);
 80047ca:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80047cc:	f8a4 5fd8 	strh.w	r5, [r4, #4056]	; 0xfd8
 80047d0:	4640      	mov	r0, r8
 80047d2:	f007 fe89 	bl	800c4e8 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
    toggleButton1.setXY(65, 211);
 80047d6:	ee19 0a10 	vmov	r0, s18
 80047da:	22d3      	movs	r2, #211	; 0xd3
 80047dc:	2141      	movs	r1, #65	; 0x41
 80047de:	f7fe fa95 	bl	8002d0c <_ZN8touchgfx8Drawable5setXYEss>
 80047e2:	f04f 030b 	mov.w	r3, #11
 80047e6:	f8ad 304c 	strh.w	r3, [sp, #76]	; 0x4c
 80047ea:	f04f 030c 	mov.w	r3, #12
{
public:
    virtual void setBitmaps(const Bitmap& bitmapReleased, const Bitmap& bitmapPressed)
    {
        originalPressed = bitmapPressed;
        Button::setBitmaps(bitmapReleased, bitmapPressed);
 80047ee:	ee19 0a10 	vmov	r0, s18
        originalPressed = bitmapPressed;
 80047f2:	f8a9 315c 	strh.w	r3, [r9, #348]	; 0x15c
        Button::setBitmaps(bitmapReleased, bitmapPressed);
 80047f6:	aa14      	add	r2, sp, #80	; 0x50
 80047f8:	a913      	add	r1, sp, #76	; 0x4c
 80047fa:	f8ad 3050 	strh.w	r3, [sp, #80]	; 0x50
 80047fe:	f009 fde6 	bl	800e3ce <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
    toggleButton1.setAction(buttonCallback);
 8004802:	f504 53a3 	add.w	r3, r4, #5216	; 0x1460
 8004806:	330c      	adds	r3, #12
    txtShowWholeGraph.setXY(1, 219);
 8004808:	22db      	movs	r2, #219	; 0xdb
 800480a:	ee19 0a90 	vmov	r0, s19
        action = &callback;
 800480e:	f8c9 3150 	str.w	r3, [r9, #336]	; 0x150
 8004812:	2101      	movs	r1, #1
 8004814:	ae0e      	add	r6, sp, #56	; 0x38
    toggleButton1.setAction(buttonCallback);
 8004816:	9303      	str	r3, [sp, #12]
    txtShowWholeGraph.setXY(1, 219);
 8004818:	f7fe fa78 	bl	8002d0c <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 800481c:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
        boundingArea = calculateBoundingArea();
 8004820:	ee19 1a90 	vmov	r1, s19
        color = newColor;
 8004824:	f8c9 3190 	str.w	r3, [r9, #400]	; 0x190
        boundingArea = calculateBoundingArea();
 8004828:	4630      	mov	r0, r6
        linespace = space;
 800482a:	f8a9 5194 	strh.w	r5, [r9, #404]	; 0x194
        boundingArea = calculateBoundingArea();
 800482e:	f009 faf1 	bl	800de14 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004832:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8004836:	ee19 3a90 	vmov	r3, s19
 800483a:	333c      	adds	r3, #60	; 0x3c
 800483c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8004840:	4b1e      	ldr	r3, [pc, #120]	; (80048bc <_ZN19ScreenGraphViewBaseC1Ev+0x758>)
 8004842:	9314      	str	r3, [sp, #80]	; 0x50
    txtShowWholeGraph.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DO01));
 8004844:	ee19 0a90 	vmov	r0, s19
 8004848:	230e      	movs	r3, #14
 800484a:	a914      	add	r1, sp, #80	; 0x50
 800484c:	f8ad 3054 	strh.w	r3, [sp, #84]	; 0x54
 8004850:	f009 fd62 	bl	800e318 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    txtLastValue.setPosition(2, 168, 132, 15);
 8004854:	230f      	movs	r3, #15
 8004856:	22a8      	movs	r2, #168	; 0xa8
 8004858:	ee18 0a10 	vmov	r0, s16
 800485c:	9300      	str	r3, [sp, #0]
 800485e:	2102      	movs	r1, #2
 8004860:	2384      	movs	r3, #132	; 0x84
 8004862:	f7fe fa92 	bl	8002d8a <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8004866:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800486a:	f8c9 31d8 	str.w	r3, [r9, #472]	; 0x1d8
        boundingArea = calculateBoundingArea();
 800486e:	f8d9 31a8 	ldr.w	r3, [r9, #424]	; 0x1a8
        linespace = space;
 8004872:	f8a9 51dc 	strh.w	r5, [r9, #476]	; 0x1dc
        boundingArea = calculateBoundingArea();
 8004876:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800487a:	ee18 1a10 	vmov	r1, s16
 800487e:	4630      	mov	r0, r6
 8004880:	4798      	blx	r3
 8004882:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8004886:	ee18 3a10 	vmov	r3, s16
 800488a:	333c      	adds	r3, #60	; 0x3c
 800488c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004890:	4b0b      	ldr	r3, [pc, #44]	; (80048c0 <_ZN19ScreenGraphViewBaseC1Ev+0x75c>)
 8004892:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(txtLastValueBuffer, TXTLASTVALUE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_SQ4H).getText());
 8004894:	f504 57a1 	add.w	r7, r4, #5152	; 0x1420
 8004898:	3710      	adds	r7, #16
 800489a:	b92b      	cbnz	r3, 80048a8 <_ZN19ScreenGraphViewBaseC1Ev+0x744>
 800489c:	4b09      	ldr	r3, [pc, #36]	; (80048c4 <_ZN19ScreenGraphViewBaseC1Ev+0x760>)
 800489e:	4a0a      	ldr	r2, [pc, #40]	; (80048c8 <_ZN19ScreenGraphViewBaseC1Ev+0x764>)
 80048a0:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80048a2:	480a      	ldr	r0, [pc, #40]	; (80048cc <_ZN19ScreenGraphViewBaseC1Ev+0x768>)
 80048a4:	f01c f834 	bl	8020910 <__assert_func>
 80048a8:	4b09      	ldr	r3, [pc, #36]	; (80048d0 <_ZN19ScreenGraphViewBaseC1Ev+0x76c>)
 80048aa:	881b      	ldrh	r3, [r3, #0]
 80048ac:	2b0b      	cmp	r3, #11
 80048ae:	d813      	bhi.n	80048d8 <_ZN19ScreenGraphViewBaseC1Ev+0x774>
 80048b0:	4b08      	ldr	r3, [pc, #32]	; (80048d4 <_ZN19ScreenGraphViewBaseC1Ev+0x770>)
 80048b2:	4a05      	ldr	r2, [pc, #20]	; (80048c8 <_ZN19ScreenGraphViewBaseC1Ev+0x764>)
 80048b4:	2161      	movs	r1, #97	; 0x61
 80048b6:	e7f4      	b.n	80048a2 <_ZN19ScreenGraphViewBaseC1Ev+0x73e>
 80048b8:	ff1497c5 	.word	0xff1497c5
 80048bc:	080222dc 	.word	0x080222dc
 80048c0:	2001565c 	.word	0x2001565c
 80048c4:	08022890 	.word	0x08022890
 80048c8:	08022992 	.word	0x08022992
 80048cc:	0802290d 	.word	0x0802290d
 80048d0:	20015660 	.word	0x20015660
 80048d4:	08022954 	.word	0x08022954
        return texts->getText(typedTextId);
 80048d8:	4bb8      	ldr	r3, [pc, #736]	; (8004bbc <_ZN19ScreenGraphViewBaseC1Ev+0xa58>)
 80048da:	210b      	movs	r1, #11
 80048dc:	6818      	ldr	r0, [r3, #0]
 80048de:	f000 fadb 	bl	8004e98 <_ZNK8touchgfx5Texts7getTextEt>
 80048e2:	4ab7      	ldr	r2, [pc, #732]	; (8004bc0 <_ZN19ScreenGraphViewBaseC1Ev+0xa5c>)
 80048e4:	4603      	mov	r3, r0
 80048e6:	2108      	movs	r1, #8
 80048e8:	4638      	mov	r0, r7
 80048ea:	f00f fbff 	bl	80140ec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 80048ee:	4bb5      	ldr	r3, [pc, #724]	; (8004bc4 <_ZN19ScreenGraphViewBaseC1Ev+0xa60>)
        wc1 = value;
 80048f0:	f8c9 71f0 	str.w	r7, [r9, #496]	; 0x1f0
    txtLastValue.setTypedText(touchgfx::TypedText(T___SINGLEUSE_POMN));
 80048f4:	ee18 0a10 	vmov	r0, s16
 80048f8:	9314      	str	r3, [sp, #80]	; 0x50
 80048fa:	a914      	add	r1, sp, #80	; 0x50
 80048fc:	230d      	movs	r3, #13
 80048fe:	f8ad 3054 	strh.w	r3, [sp, #84]	; 0x54
 8004902:	f009 fd09 	bl	800e318 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    txtMaxValue.setPosition(2, 183, 132, 15);
 8004906:	210f      	movs	r1, #15
 8004908:	9100      	str	r1, [sp, #0]
 800490a:	2384      	movs	r3, #132	; 0x84
 800490c:	2102      	movs	r1, #2
 800490e:	ee1a 0a10 	vmov	r0, s20
 8004912:	22b7      	movs	r2, #183	; 0xb7
 8004914:	f7fe fa39 	bl	8002d8a <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8004918:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
 800491c:	f8c9 1224 	str.w	r1, [r9, #548]	; 0x224
        boundingArea = calculateBoundingArea();
 8004920:	f04f 31ff 	mov.w	r1, #4294967295
 8004924:	e9c9 158d 	strd	r1, r5, [r9, #564]	; 0x234
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004928:	49a7      	ldr	r1, [pc, #668]	; (8004bc8 <_ZN19ScreenGraphViewBaseC1Ev+0xa64>)
        linespace = space;
 800492a:	f8a9 5228 	strh.w	r5, [r9, #552]	; 0x228
 800492e:	680b      	ldr	r3, [r1, #0]
        boundingArea = calculateBoundingArea();
 8004930:	f8c9 5230 	str.w	r5, [r9, #560]	; 0x230
    Unicode::snprintf(txtMaxValueBuffer, TXTMAXVALUE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_JAK9).getText());
 8004934:	f504 57a2 	add.w	r7, r4, #5184	; 0x1440
 8004938:	2b00      	cmp	r3, #0
 800493a:	d0af      	beq.n	800489c <_ZN19ScreenGraphViewBaseC1Ev+0x738>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800493c:	48a3      	ldr	r0, [pc, #652]	; (8004bcc <_ZN19ScreenGraphViewBaseC1Ev+0xa68>)
 800493e:	8803      	ldrh	r3, [r0, #0]
 8004940:	2b0a      	cmp	r3, #10
 8004942:	d9b5      	bls.n	80048b0 <_ZN19ScreenGraphViewBaseC1Ev+0x74c>
        return texts->getText(typedTextId);
 8004944:	4a9d      	ldr	r2, [pc, #628]	; (8004bbc <_ZN19ScreenGraphViewBaseC1Ev+0xa58>)
 8004946:	210a      	movs	r1, #10
 8004948:	6810      	ldr	r0, [r2, #0]
 800494a:	f000 faa5 	bl	8004e98 <_ZNK8touchgfx5Texts7getTextEt>
 800494e:	4a9c      	ldr	r2, [pc, #624]	; (8004bc0 <_ZN19ScreenGraphViewBaseC1Ev+0xa5c>)
 8004950:	4603      	mov	r3, r0
 8004952:	2108      	movs	r1, #8
 8004954:	4638      	mov	r0, r7
 8004956:	f00f fbc9 	bl	80140ec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 800495a:	f04f 0c0c 	mov.w	ip, #12
 800495e:	f8ad c054 	strh.w	ip, [sp, #84]	; 0x54
    txtMaxValue.setTypedText(touchgfx::TypedText(T___SINGLEUSE_5RGF));
 8004962:	f10d 0c50 	add.w	ip, sp, #80	; 0x50
 8004966:	4b97      	ldr	r3, [pc, #604]	; (8004bc4 <_ZN19ScreenGraphViewBaseC1Ev+0xa60>)
 8004968:	f8c9 723c 	str.w	r7, [r9, #572]	; 0x23c
 800496c:	4661      	mov	r1, ip
 800496e:	ee1a 0a10 	vmov	r0, s20
    textChargingTme.setPosition(2, 198, 132, 15);
 8004972:	270f      	movs	r7, #15
 8004974:	9314      	str	r3, [sp, #80]	; 0x50
    txtMaxValue.setTypedText(touchgfx::TypedText(T___SINGLEUSE_5RGF));
 8004976:	f009 fccf 	bl	800e318 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textChargingTme.setPosition(2, 198, 132, 15);
 800497a:	9700      	str	r7, [sp, #0]
 800497c:	2384      	movs	r3, #132	; 0x84
 800497e:	2102      	movs	r1, #2
 8004980:	ee1c 0a90 	vmov	r0, s25
 8004984:	22c6      	movs	r2, #198	; 0xc6
 8004986:	f7fe fa00 	bl	8002d8a <_ZN8touchgfx8Drawable11setPositionEssss>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800498a:	498f      	ldr	r1, [pc, #572]	; (8004bc8 <_ZN19ScreenGraphViewBaseC1Ev+0xa64>)
        linespace = space;
 800498c:	f8a9 5274 	strh.w	r5, [r9, #628]	; 0x274
        color = newColor;
 8004990:	f04f 477f 	mov.w	r7, #4278190080	; 0xff000000
 8004994:	f8c9 7270 	str.w	r7, [r9, #624]	; 0x270
 8004998:	680b      	ldr	r3, [r1, #0]
        boundingArea = calculateBoundingArea();
 800499a:	f8c9 527c 	str.w	r5, [r9, #636]	; 0x27c
 800499e:	f04f 37ff 	mov.w	r7, #4294967295
 80049a2:	e9c9 75a0 	strd	r7, r5, [r9, #640]	; 0x280
    Unicode::snprintf(textChargingTmeBuffer, TEXTCHARGINGTME_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_E1C6).getText());
 80049a6:	f504 57a2 	add.w	r7, r4, #5184	; 0x1440
 80049aa:	3710      	adds	r7, #16
 80049ac:	2b00      	cmp	r3, #0
 80049ae:	f43f af75 	beq.w	800489c <_ZN19ScreenGraphViewBaseC1Ev+0x738>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80049b2:	4886      	ldr	r0, [pc, #536]	; (8004bcc <_ZN19ScreenGraphViewBaseC1Ev+0xa68>)
 80049b4:	8803      	ldrh	r3, [r0, #0]
 80049b6:	2b08      	cmp	r3, #8
 80049b8:	f67f af7a 	bls.w	80048b0 <_ZN19ScreenGraphViewBaseC1Ev+0x74c>
        return texts->getText(typedTextId);
 80049bc:	4a7f      	ldr	r2, [pc, #508]	; (8004bbc <_ZN19ScreenGraphViewBaseC1Ev+0xa58>)
 80049be:	2108      	movs	r1, #8
 80049c0:	6810      	ldr	r0, [r2, #0]
 80049c2:	f000 fa69 	bl	8004e98 <_ZNK8touchgfx5Texts7getTextEt>
 80049c6:	4a7e      	ldr	r2, [pc, #504]	; (8004bc0 <_ZN19ScreenGraphViewBaseC1Ev+0xa5c>)
 80049c8:	4603      	mov	r3, r0
 80049ca:	210a      	movs	r1, #10
 80049cc:	4638      	mov	r0, r7
 80049ce:	f00f fb8d 	bl	80140ec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textChargingTme.setTypedText(touchgfx::TypedText(T___SINGLEUSE_U9Q3));
 80049d2:	f10d 0e50 	add.w	lr, sp, #80	; 0x50
        : typedTextId(id)
 80049d6:	4b7b      	ldr	r3, [pc, #492]	; (8004bc4 <_ZN19ScreenGraphViewBaseC1Ev+0xa60>)
 80049d8:	f8c9 7288 	str.w	r7, [r9, #648]	; 0x288
 80049dc:	f04f 0c09 	mov.w	ip, #9
 80049e0:	4671      	mov	r1, lr
 80049e2:	ee1c 0a90 	vmov	r0, s25
 80049e6:	9314      	str	r3, [sp, #80]	; 0x50
 80049e8:	f8ad c054 	strh.w	ip, [sp, #84]	; 0x54
 80049ec:	f009 fc94 	bl	800e318 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textChargingCurrent.setPosition(160, 168, 153, 15);
 80049f0:	f04f 0e0f 	mov.w	lr, #15
 80049f4:	f8cd e000 	str.w	lr, [sp]
 80049f8:	2399      	movs	r3, #153	; 0x99
 80049fa:	21a0      	movs	r1, #160	; 0xa0
 80049fc:	ee1a 0a90 	vmov	r0, s21
 8004a00:	22a8      	movs	r2, #168	; 0xa8
 8004a02:	f7fe f9c2 	bl	8002d8a <_ZN8touchgfx8Drawable11setPositionEssss>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004a06:	4970      	ldr	r1, [pc, #448]	; (8004bc8 <_ZN19ScreenGraphViewBaseC1Ev+0xa64>)
        linespace = space;
 8004a08:	f8a9 52c0 	strh.w	r5, [r9, #704]	; 0x2c0
        color = newColor;
 8004a0c:	f04f 4e7f 	mov.w	lr, #4278190080	; 0xff000000
 8004a10:	680b      	ldr	r3, [r1, #0]
 8004a12:	f8c9 e2bc 	str.w	lr, [r9, #700]	; 0x2bc
    Unicode::snprintf(textChargingCurrentBuffer, TEXTCHARGINGCURRENT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_G6V4).getText());
 8004a16:	f504 57a3 	add.w	r7, r4, #5216	; 0x1460
        boundingArea = calculateBoundingArea();
 8004a1a:	f04f 3eff 	mov.w	lr, #4294967295
 8004a1e:	e9c9 e5b3 	strd	lr, r5, [r9, #716]	; 0x2cc
 8004a22:	f8c9 52c8 	str.w	r5, [r9, #712]	; 0x2c8
 8004a26:	3704      	adds	r7, #4
 8004a28:	2b00      	cmp	r3, #0
 8004a2a:	f43f af37 	beq.w	800489c <_ZN19ScreenGraphViewBaseC1Ev+0x738>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004a2e:	4867      	ldr	r0, [pc, #412]	; (8004bcc <_ZN19ScreenGraphViewBaseC1Ev+0xa68>)
 8004a30:	8803      	ldrh	r3, [r0, #0]
 8004a32:	2b01      	cmp	r3, #1
 8004a34:	f67f af3c 	bls.w	80048b0 <_ZN19ScreenGraphViewBaseC1Ev+0x74c>
        return texts->getText(typedTextId);
 8004a38:	4a60      	ldr	r2, [pc, #384]	; (8004bbc <_ZN19ScreenGraphViewBaseC1Ev+0xa58>)
 8004a3a:	2101      	movs	r1, #1
 8004a3c:	6810      	ldr	r0, [r2, #0]
 8004a3e:	f000 fa2b 	bl	8004e98 <_ZNK8touchgfx5Texts7getTextEt>
 8004a42:	4a5f      	ldr	r2, [pc, #380]	; (8004bc0 <_ZN19ScreenGraphViewBaseC1Ev+0xa5c>)
 8004a44:	4603      	mov	r3, r0
 8004a46:	2104      	movs	r1, #4
 8004a48:	4638      	mov	r0, r7
 8004a4a:	f00f fb4f 	bl	80140ec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textChargingCurrent.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ZLXT));
 8004a4e:	ee1a 0a90 	vmov	r0, s21
 8004a52:	f8c9 72d4 	str.w	r7, [r9, #724]	; 0x2d4
        : typedTextId(id)
 8004a56:	f04f 0302 	mov.w	r3, #2
 8004a5a:	4f5a      	ldr	r7, [pc, #360]	; (8004bc4 <_ZN19ScreenGraphViewBaseC1Ev+0xa60>)
 8004a5c:	f8ad 3054 	strh.w	r3, [sp, #84]	; 0x54
 8004a60:	a914      	add	r1, sp, #80	; 0x50
 8004a62:	9714      	str	r7, [sp, #80]	; 0x50
 8004a64:	f009 fc58 	bl	800e318 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    modalWindow1.setBackground(touchgfx::BitmapId(BITMAP_RSZ_MY_MODAL_BACKGROUND_ID), 75, 60);
 8004a68:	230a      	movs	r3, #10
 8004a6a:	224b      	movs	r2, #75	; 0x4b
 8004a6c:	f8ad 3050 	strh.w	r3, [sp, #80]	; 0x50
 8004a70:	a914      	add	r1, sp, #80	; 0x50
 8004a72:	233c      	movs	r3, #60	; 0x3c
 8004a74:	4650      	mov	r0, sl
 8004a76:	f005 ff81 	bl	800a97c <_ZN8touchgfx11ModalWindow13setBackgroundERKtss>
    modalWindow1.setShadeColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
 8004a7a:	4650      	mov	r0, sl
 8004a7c:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
 8004a80:	f005 ff50 	bl	800a924 <_ZN8touchgfx11ModalWindow13setShadeColorENS_9colortypeE>
    modalWindow1.setShadeAlpha(150);
 8004a84:	2196      	movs	r1, #150	; 0x96
 8004a86:	4650      	mov	r0, sl
 8004a88:	f005 ff50 	bl	800a92c <_ZN8touchgfx11ModalWindow13setShadeAlphaEh>
    modalWindow1.hide();
 8004a8c:	4650      	mov	r0, sl
 8004a8e:	f005 ff3c 	bl	800a90a <_ZN8touchgfx11ModalWindow4hideEv>
    buttonCloseModal.setXY(53, 87);
 8004a92:	ee1d 0a10 	vmov	r0, s26
 8004a96:	2257      	movs	r2, #87	; 0x57
 8004a98:	2135      	movs	r1, #53	; 0x35
 8004a9a:	f7fe f937 	bl	8002d0c <_ZN8touchgfx8Drawable5setXYEss>
 8004a9e:	f04f 0307 	mov.w	r3, #7
    buttonCloseModal.setBitmaps(touchgfx::Bitmap(BITMAP_RSZ_CLOSE_BUTTON_ID), touchgfx::Bitmap(BITMAP_RSZ_CLOSE_BUTTON_PRESSED_ID));
 8004aa2:	aa14      	add	r2, sp, #80	; 0x50
 8004aa4:	ee1d 0a10 	vmov	r0, s26
 8004aa8:	f8ad 304c 	strh.w	r3, [sp, #76]	; 0x4c
 8004aac:	a913      	add	r1, sp, #76	; 0x4c
 8004aae:	2308      	movs	r3, #8
 8004ab0:	f8ad 3050 	strh.w	r3, [sp, #80]	; 0x50
 8004ab4:	f009 fc8b 	bl	800e3ce <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8004ab8:	9b03      	ldr	r3, [sp, #12]
 8004aba:	f8c9 33b0 	str.w	r3, [r9, #944]	; 0x3b0
    modalWindow1.add(buttonCloseModal);
 8004abe:	ee1d 1a10 	vmov	r1, s26
 8004ac2:	4650      	mov	r0, sl
 8004ac4:	f005 ff2b 	bl	800a91e <_ZN8touchgfx11ModalWindow3addERNS_8DrawableE>
    image1.setXY(59, 3);
 8004ac8:	2203      	movs	r2, #3
 8004aca:	ee1b 0a10 	vmov	r0, s22
 8004ace:	213b      	movs	r1, #59	; 0x3b
 8004ad0:	f7fe f91c 	bl	8002d0c <_ZN8touchgfx8Drawable5setXYEss>
 8004ad4:	f04f 0c09 	mov.w	ip, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_RSZ_INFO_ICON_ID));
 8004ad8:	ee1b 0a10 	vmov	r0, s22
 8004adc:	a914      	add	r1, sp, #80	; 0x50
 8004ade:	f8ad c050 	strh.w	ip, [sp, #80]	; 0x50
 8004ae2:	f009 fe97 	bl	800e814 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    modalWindow1.add(image1);
 8004ae6:	ee1b 1a10 	vmov	r1, s22
 8004aea:	4650      	mov	r0, sl
 8004aec:	f005 ff17 	bl	800a91e <_ZN8touchgfx11ModalWindow3addERNS_8DrawableE>
    textChargingCompleted.setXY(7, 60);
 8004af0:	ee18 0a90 	vmov	r0, s17
 8004af4:	223c      	movs	r2, #60	; 0x3c
 8004af6:	2107      	movs	r1, #7
 8004af8:	f7fe f908 	bl	8002d0c <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8004afc:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
        boundingArea = calculateBoundingArea();
 8004b00:	ee18 1a90 	vmov	r1, s17
        color = newColor;
 8004b04:	f8c9 3418 	str.w	r3, [r9, #1048]	; 0x418
        linespace = space;
 8004b08:	f8a9 541c 	strh.w	r5, [r9, #1052]	; 0x41c
        boundingArea = calculateBoundingArea();
 8004b0c:	4630      	mov	r0, r6
 8004b0e:	f009 f981 	bl	800de14 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004b12:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8004b16:	ee18 3a90 	vmov	r3, s17
 8004b1a:	333c      	adds	r3, #60	; 0x3c
 8004b1c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    textChargingCompleted.setTypedText(touchgfx::TypedText(T___SINGLEUSE_86E1));
 8004b20:	ee18 0a90 	vmov	r0, s17
 8004b24:	a914      	add	r1, sp, #80	; 0x50
 8004b26:	f8ad 5054 	strh.w	r5, [sp, #84]	; 0x54
 8004b2a:	9714      	str	r7, [sp, #80]	; 0x50
 8004b2c:	1d25      	adds	r5, r4, #4
 8004b2e:	f009 fbf3 	bl	800e318 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    modalWindow1.add(textChargingCompleted);
 8004b32:	ee18 1a90 	vmov	r1, s17
 8004b36:	4650      	mov	r0, sl
 8004b38:	f005 fef1 	bl	800a91e <_ZN8touchgfx11ModalWindow3addERNS_8DrawableE>
 8004b3c:	ee1b 1a90 	vmov	r1, s23
 8004b40:	4628      	mov	r0, r5
 8004b42:	f005 fff3 	bl	800ab2c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004b46:	ee1c 1a10 	vmov	r1, s24
 8004b4a:	4628      	mov	r0, r5
 8004b4c:	f005 ffee 	bl	800ab2c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004b50:	ee1d 1a90 	vmov	r1, s27
 8004b54:	4628      	mov	r0, r5
 8004b56:	f005 ffe9 	bl	800ab2c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004b5a:	4659      	mov	r1, fp
 8004b5c:	4628      	mov	r0, r5
 8004b5e:	f005 ffe5 	bl	800ab2c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004b62:	4641      	mov	r1, r8
 8004b64:	4628      	mov	r0, r5
 8004b66:	f005 ffe1 	bl	800ab2c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004b6a:	ee19 1a10 	vmov	r1, s18
 8004b6e:	4628      	mov	r0, r5
 8004b70:	f005 ffdc 	bl	800ab2c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004b74:	ee19 1a90 	vmov	r1, s19
 8004b78:	4628      	mov	r0, r5
 8004b7a:	f005 ffd7 	bl	800ab2c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004b7e:	ee18 1a10 	vmov	r1, s16
 8004b82:	4628      	mov	r0, r5
 8004b84:	f005 ffd2 	bl	800ab2c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004b88:	ee1a 1a10 	vmov	r1, s20
 8004b8c:	4628      	mov	r0, r5
 8004b8e:	f005 ffcd 	bl	800ab2c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004b92:	ee1c 1a90 	vmov	r1, s25
 8004b96:	4628      	mov	r0, r5
 8004b98:	f005 ffc8 	bl	800ab2c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004b9c:	ee1a 1a90 	vmov	r1, s21
 8004ba0:	4628      	mov	r0, r5
 8004ba2:	f005 ffc3 	bl	800ab2c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004ba6:	4628      	mov	r0, r5
 8004ba8:	4651      	mov	r1, sl
 8004baa:	f005 ffbf 	bl	800ab2c <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8004bae:	4620      	mov	r0, r4
 8004bb0:	b017      	add	sp, #92	; 0x5c
 8004bb2:	ecbd 8b10 	vpop	{d8-d15}
 8004bb6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004bba:	bf00      	nop
 8004bbc:	20015668 	.word	0x20015668
 8004bc0:	080229ca 	.word	0x080229ca
 8004bc4:	080222dc 	.word	0x080222dc
 8004bc8:	2001565c 	.word	0x2001565c
 8004bcc:	20015660 	.word	0x20015660

08004bd0 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 40, 10, 2, 4, 1, 0, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8004bd0:	4770      	bx	lr
	...

08004bd4 <_Z23getFont_verdana_10_4bppv>:
{
 8004bd4:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 40, 10, 2, 4, 1, 0, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8004bd6:	4d16      	ldr	r5, [pc, #88]	; (8004c30 <_Z23getFont_verdana_10_4bppv+0x5c>)
 8004bd8:	782c      	ldrb	r4, [r5, #0]
 8004bda:	f3bf 8f5b 	dmb	ish
 8004bde:	f014 0401 	ands.w	r4, r4, #1
{
 8004be2:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 40, 10, 2, 4, 1, 0, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8004be4:	d120      	bne.n	8004c28 <_Z23getFont_verdana_10_4bppv+0x54>
 8004be6:	4628      	mov	r0, r5
 8004be8:	f01b fde0 	bl	80207ac <__cxa_guard_acquire>
 8004bec:	b1e0      	cbz	r0, 8004c28 <_Z23getFont_verdana_10_4bppv+0x54>
 8004bee:	233f      	movs	r3, #63	; 0x3f
 8004bf0:	9307      	str	r3, [sp, #28]
 8004bf2:	4b10      	ldr	r3, [pc, #64]	; (8004c34 <_Z23getFont_verdana_10_4bppv+0x60>)
 8004bf4:	9306      	str	r3, [sp, #24]
 8004bf6:	4b10      	ldr	r3, [pc, #64]	; (8004c38 <_Z23getFont_verdana_10_4bppv+0x64>)
 8004bf8:	9305      	str	r3, [sp, #20]
 8004bfa:	2301      	movs	r3, #1
 8004bfc:	e9cd 4303 	strd	r4, r3, [sp, #12]
 8004c00:	9302      	str	r3, [sp, #8]
 8004c02:	2204      	movs	r2, #4
 8004c04:	2302      	movs	r3, #2
 8004c06:	e9cd 3200 	strd	r3, r2, [sp]
 8004c0a:	490c      	ldr	r1, [pc, #48]	; (8004c3c <_Z23getFont_verdana_10_4bppv+0x68>)
 8004c0c:	480c      	ldr	r0, [pc, #48]	; (8004c40 <_Z23getFont_verdana_10_4bppv+0x6c>)
 8004c0e:	9408      	str	r4, [sp, #32]
 8004c10:	230a      	movs	r3, #10
 8004c12:	2228      	movs	r2, #40	; 0x28
 8004c14:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 8004c18:	f7fd fecc 	bl	80029b4 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8004c1c:	4809      	ldr	r0, [pc, #36]	; (8004c44 <_Z23getFont_verdana_10_4bppv+0x70>)
 8004c1e:	f01b fe95 	bl	802094c <atexit>
 8004c22:	4628      	mov	r0, r5
 8004c24:	f01b fdce 	bl	80207c4 <__cxa_guard_release>
    return verdana_10_4bpp;
}
 8004c28:	4805      	ldr	r0, [pc, #20]	; (8004c40 <_Z23getFont_verdana_10_4bppv+0x6c>)
 8004c2a:	b00d      	add	sp, #52	; 0x34
 8004c2c:	bd30      	pop	{r4, r5, pc}
 8004c2e:	bf00      	nop
 8004c30:	20004744 	.word	0x20004744
 8004c34:	08025e64 	.word	0x08025e64
 8004c38:	08025eec 	.word	0x08025eec
 8004c3c:	080259a0 	.word	0x080259a0
 8004c40:	20004748 	.word	0x20004748
 8004c44:	08004bd1 	.word	0x08004bd1

08004c48 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_15_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_15_4bpp();

touchgfx::GeneratedFont& getFont_verdana_15_4bpp()
{
    static touchgfx::GeneratedFont verdana_15_4bpp(glyphs_verdana_15_4bpp, 42, 15, 3, 4, 1, 0, 1, unicodes_verdana_15_4bpp, kerning_verdana_15_4bpp, 63, 0, 0, 0);
 8004c48:	4770      	bx	lr
	...

08004c4c <_Z23getFont_verdana_15_4bppv>:
{
 8004c4c:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_15_4bpp(glyphs_verdana_15_4bpp, 42, 15, 3, 4, 1, 0, 1, unicodes_verdana_15_4bpp, kerning_verdana_15_4bpp, 63, 0, 0, 0);
 8004c4e:	4d16      	ldr	r5, [pc, #88]	; (8004ca8 <_Z23getFont_verdana_15_4bppv+0x5c>)
 8004c50:	782c      	ldrb	r4, [r5, #0]
 8004c52:	f3bf 8f5b 	dmb	ish
 8004c56:	f014 0401 	ands.w	r4, r4, #1
{
 8004c5a:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_15_4bpp(glyphs_verdana_15_4bpp, 42, 15, 3, 4, 1, 0, 1, unicodes_verdana_15_4bpp, kerning_verdana_15_4bpp, 63, 0, 0, 0);
 8004c5c:	d120      	bne.n	8004ca0 <_Z23getFont_verdana_15_4bppv+0x54>
 8004c5e:	4628      	mov	r0, r5
 8004c60:	f01b fda4 	bl	80207ac <__cxa_guard_acquire>
 8004c64:	b1e0      	cbz	r0, 8004ca0 <_Z23getFont_verdana_15_4bppv+0x54>
 8004c66:	233f      	movs	r3, #63	; 0x3f
 8004c68:	9307      	str	r3, [sp, #28]
 8004c6a:	4b10      	ldr	r3, [pc, #64]	; (8004cac <_Z23getFont_verdana_15_4bppv+0x60>)
 8004c6c:	9306      	str	r3, [sp, #24]
 8004c6e:	4b10      	ldr	r3, [pc, #64]	; (8004cb0 <_Z23getFont_verdana_15_4bppv+0x64>)
 8004c70:	9305      	str	r3, [sp, #20]
 8004c72:	2301      	movs	r3, #1
 8004c74:	e9cd 4303 	strd	r4, r3, [sp, #12]
 8004c78:	9302      	str	r3, [sp, #8]
 8004c7a:	2204      	movs	r2, #4
 8004c7c:	2303      	movs	r3, #3
 8004c7e:	e9cd 3200 	strd	r3, r2, [sp]
 8004c82:	490c      	ldr	r1, [pc, #48]	; (8004cb4 <_Z23getFont_verdana_15_4bppv+0x68>)
 8004c84:	480c      	ldr	r0, [pc, #48]	; (8004cb8 <_Z23getFont_verdana_15_4bppv+0x6c>)
 8004c86:	9408      	str	r4, [sp, #32]
 8004c88:	230f      	movs	r3, #15
 8004c8a:	222a      	movs	r2, #42	; 0x2a
 8004c8c:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 8004c90:	f7fd fe90 	bl	80029b4 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8004c94:	4809      	ldr	r0, [pc, #36]	; (8004cbc <_Z23getFont_verdana_15_4bppv+0x70>)
 8004c96:	f01b fe59 	bl	802094c <atexit>
 8004c9a:	4628      	mov	r0, r5
 8004c9c:	f01b fd92 	bl	80207c4 <__cxa_guard_release>
    return verdana_15_4bpp;
}
 8004ca0:	4805      	ldr	r0, [pc, #20]	; (8004cb8 <_Z23getFont_verdana_15_4bppv+0x6c>)
 8004ca2:	b00d      	add	sp, #52	; 0x34
 8004ca4:	bd30      	pop	{r4, r5, pc}
 8004ca6:	bf00      	nop
 8004ca8:	20004770 	.word	0x20004770
 8004cac:	08025e80 	.word	0x08025e80
 8004cb0:	08025ef0 	.word	0x08025ef0
 8004cb4:	08025bd0 	.word	0x08025bd0
 8004cb8:	20004774 	.word	0x20004774
 8004cbc:	08004c49 	.word	0x08004c49

08004cc0 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 5, 40, 1, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8004cc0:	4770      	bx	lr
	...

08004cc4 <_Z23getFont_verdana_40_4bppv>:
{
 8004cc4:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 5, 40, 1, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8004cc6:	4d15      	ldr	r5, [pc, #84]	; (8004d1c <_Z23getFont_verdana_40_4bppv+0x58>)
 8004cc8:	782c      	ldrb	r4, [r5, #0]
 8004cca:	f3bf 8f5b 	dmb	ish
 8004cce:	f014 0401 	ands.w	r4, r4, #1
{
 8004cd2:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 5, 40, 1, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8004cd4:	d11f      	bne.n	8004d16 <_Z23getFont_verdana_40_4bppv+0x52>
 8004cd6:	4628      	mov	r0, r5
 8004cd8:	f01b fd68 	bl	80207ac <__cxa_guard_acquire>
 8004cdc:	b1d8      	cbz	r0, 8004d16 <_Z23getFont_verdana_40_4bppv+0x52>
 8004cde:	233f      	movs	r3, #63	; 0x3f
 8004ce0:	9307      	str	r3, [sp, #28]
 8004ce2:	4b0f      	ldr	r3, [pc, #60]	; (8004d20 <_Z23getFont_verdana_40_4bppv+0x5c>)
 8004ce4:	9306      	str	r3, [sp, #24]
 8004ce6:	4b0f      	ldr	r3, [pc, #60]	; (8004d24 <_Z23getFont_verdana_40_4bppv+0x60>)
 8004ce8:	490f      	ldr	r1, [pc, #60]	; (8004d28 <_Z23getFont_verdana_40_4bppv+0x64>)
 8004cea:	4810      	ldr	r0, [pc, #64]	; (8004d2c <_Z23getFont_verdana_40_4bppv+0x68>)
 8004cec:	9408      	str	r4, [sp, #32]
 8004cee:	e9cd 4304 	strd	r4, r3, [sp, #16]
 8004cf2:	2204      	movs	r2, #4
 8004cf4:	2301      	movs	r3, #1
 8004cf6:	e9cd 2301 	strd	r2, r3, [sp, #4]
 8004cfa:	9300      	str	r3, [sp, #0]
 8004cfc:	2205      	movs	r2, #5
 8004cfe:	2328      	movs	r3, #40	; 0x28
 8004d00:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 8004d04:	9403      	str	r4, [sp, #12]
 8004d06:	f7fd fe55 	bl	80029b4 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8004d0a:	4809      	ldr	r0, [pc, #36]	; (8004d30 <_Z23getFont_verdana_40_4bppv+0x6c>)
 8004d0c:	f01b fe1e 	bl	802094c <atexit>
 8004d10:	4628      	mov	r0, r5
 8004d12:	f01b fd57 	bl	80207c4 <__cxa_guard_release>
    return verdana_40_4bpp;
}
 8004d16:	4805      	ldr	r0, [pc, #20]	; (8004d2c <_Z23getFont_verdana_40_4bppv+0x68>)
 8004d18:	b00d      	add	sp, #52	; 0x34
 8004d1a:	bd30      	pop	{r4, r5, pc}
 8004d1c:	2000479c 	.word	0x2000479c
 8004d20:	08025ed8 	.word	0x08025ed8
 8004d24:	08025ef4 	.word	0x08025ef4
 8004d28:	08025e1c 	.word	0x08025e1c
 8004d2c:	200047a0 	.word	0x200047a0
 8004d30:	08004cc1 	.word	0x08004cc1

08004d34 <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 8004d34:	2000      	movs	r0, #0
 8004d36:	4770      	bx	lr

08004d38 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
 8004d38:	2000      	movs	r0, #0
 8004d3a:	4770      	bx	lr

08004d3c <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8004d3c:	b40e      	push	{r1, r2, r3}
 8004d3e:	b503      	push	{r0, r1, lr}
 8004d40:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8004d42:	2100      	movs	r1, #0
{
 8004d44:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 8004d48:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8004d4a:	f00d f887 	bl	8011e5c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8004d4e:	b002      	add	sp, #8
 8004d50:	f85d eb04 	ldr.w	lr, [sp], #4
 8004d54:	b003      	add	sp, #12
 8004d56:	4770      	bx	lr

08004d58 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8004d58:	b40c      	push	{r2, r3}
 8004d5a:	b507      	push	{r0, r1, r2, lr}
 8004d5c:	ab04      	add	r3, sp, #16
 8004d5e:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 8004d62:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 8004d64:	f00d f87a 	bl	8011e5c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8004d68:	b003      	add	sp, #12
 8004d6a:	f85d eb04 	ldr.w	lr, [sp], #4
 8004d6e:	b002      	add	sp, #8
 8004d70:	4770      	bx	lr
	...

08004d74 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 8004d74:	6c43      	ldr	r3, [r0, #68]	; 0x44
{
 8004d76:	b510      	push	{r4, lr}
 8004d78:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 8004d7a:	b373      	cbz	r3, 8004dda <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        {
            return used == size;
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 8004d7c:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 8004d7e:	b92b      	cbnz	r3, 8004d8c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 8004d80:	4b18      	ldr	r3, [pc, #96]	; (8004de4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 8004d82:	4a19      	ldr	r2, [pc, #100]	; (8004de8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 8004d84:	21c0      	movs	r1, #192	; 0xc0
            return buffer[pos];
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 8004d86:	4819      	ldr	r0, [pc, #100]	; (8004dec <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 8004d88:	f01b fdc2 	bl	8020910 <__assert_func>
            return buffer[pos];
 8004d8c:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8004d8e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8004d92:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
 8004d94:	b30b      	cbz	r3, 8004dda <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 8004d96:	f00e fbfa 	bl	801358e <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 8004d9a:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8004d9c:	2b01      	cmp	r3, #1
 8004d9e:	d803      	bhi.n	8004da8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 8004da0:	4b13      	ldr	r3, [pc, #76]	; (8004df0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 8004da2:	4a14      	ldr	r2, [pc, #80]	; (8004df4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 8004da4:	21c5      	movs	r1, #197	; 0xc5
 8004da6:	e7ee      	b.n	8004d86 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 8004da8:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8004daa:	1c53      	adds	r3, r2, #1
 8004dac:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 8004dae:	2b09      	cmp	r3, #9
 8004db0:	4619      	mov	r1, r3
 8004db2:	bf88      	it	hi
 8004db4:	f1a3 010a 	subhi.w	r1, r3, #10
 8004db8:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 8004dbc:	f640 103f 	movw	r0, #2367	; 0x93f
 8004dc0:	8c49      	ldrh	r1, [r1, #34]	; 0x22
 8004dc2:	4281      	cmp	r1, r0
 8004dc4:	d109      	bne.n	8004dda <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 8004dc6:	2b0a      	cmp	r3, #10
 8004dc8:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8004dcc:	bf28      	it	cs
 8004dce:	2300      	movcs	r3, #0
        }
        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 8004dd0:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 8004dd4:	8c50      	ldrh	r0, [r2, #34]	; 0x22
            buffer[index < size ? index : 0] = newChar;
 8004dd6:	8458      	strh	r0, [r3, #34]	; 0x22
            buffer[pos] = newChar;
 8004dd8:	8451      	strh	r1, [r2, #34]	; 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 8004dda:	4620      	mov	r0, r4
}
 8004ddc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 8004de0:	f00e bad8 	b.w	8013394 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8004de4:	080233ac 	.word	0x080233ac
 8004de8:	080233b5 	.word	0x080233b5
 8004dec:	08023460 	.word	0x08023460
 8004df0:	080234aa 	.word	0x080234aa
 8004df4:	080234b8 	.word	0x080234b8

08004df8 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 8004df8:	f00e ba93 	b.w	8013322 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08004dfc <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 8004dfc:	b510      	push	{r4, lr}
 8004dfe:	b086      	sub	sp, #24
 8004e00:	ac02      	add	r4, sp, #8
 8004e02:	e884 0006 	stmia.w	r4, {r1, r2}
 8004e06:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 8004e08:	ab0a      	add	r3, sp, #40	; 0x28
 8004e0a:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 8004e0c:	9301      	str	r3, [sp, #4]
 8004e0e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004e10:	9300      	str	r3, [sp, #0]
 8004e12:	4621      	mov	r1, r4
 8004e14:	9b08      	ldr	r3, [sp, #32]
 8004e16:	f00b fd26 	bl	8010866 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 8004e1a:	b006      	add	sp, #24
 8004e1c:	bd10      	pop	{r4, pc}
	...

08004e20 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8004e20:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 8004e22:	bb18      	cbnz	r0, 8004e6c <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 8004e24:	4b12      	ldr	r3, [pc, #72]	; (8004e70 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 8004e26:	4813      	ldr	r0, [pc, #76]	; (8004e74 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 8004e28:	681b      	ldr	r3, [r3, #0]
 8004e2a:	4913      	ldr	r1, [pc, #76]	; (8004e78 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 8004e2c:	b1b3      	cbz	r3, 8004e5c <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8004e2e:	681a      	ldr	r2, [r3, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8004e30:	689c      	ldr	r4, [r3, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8004e32:	441a      	add	r2, r3
 8004e34:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 8004e36:	685a      	ldr	r2, [r3, #4]
 8004e38:	441a      	add	r2, r3
 8004e3a:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8004e3c:	441c      	add	r4, r3
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 8004e3e:	4b0f      	ldr	r3, [pc, #60]	; (8004e7c <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 8004e40:	2200      	movs	r2, #0
 8004e42:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 8004e44:	f000 f838 	bl	8004eb8 <_ZN17TypedTextDatabase8getFontsEv>
 8004e48:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 8004e4a:	f000 f833 	bl	8004eb4 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 8004e4e:	4b0c      	ldr	r3, [pc, #48]	; (8004e80 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 8004e50:	601c      	str	r4, [r3, #0]
        fonts = f;
 8004e52:	4b0c      	ldr	r3, [pc, #48]	; (8004e84 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 8004e54:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 8004e56:	4b0c      	ldr	r3, [pc, #48]	; (8004e88 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 8004e58:	8018      	strh	r0, [r3, #0]
    }
}
 8004e5a:	e007      	b.n	8004e6c <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 8004e5c:	4b0b      	ldr	r3, [pc, #44]	; (8004e8c <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 8004e5e:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8004e60:	4b0b      	ldr	r3, [pc, #44]	; (8004e90 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 8004e62:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8004e64:	4b0b      	ldr	r3, [pc, #44]	; (8004e94 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 8004e66:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 8004e68:	2c00      	cmp	r4, #0
 8004e6a:	d1e8      	bne.n	8004e3e <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 8004e6c:	bd38      	pop	{r3, r4, r5, pc}
 8004e6e:	bf00      	nop
 8004e70:	200047c8 	.word	0x200047c8
 8004e74:	200047cc 	.word	0x200047cc
 8004e78:	200047d0 	.word	0x200047d0
 8004e7c:	200047d4 	.word	0x200047d4
 8004e80:	2001565c 	.word	0x2001565c
 8004e84:	20015664 	.word	0x20015664
 8004e88:	20015660 	.word	0x20015660
 8004e8c:	08025f4c 	.word	0x08025f4c
 8004e90:	08025ef8 	.word	0x08025ef8
 8004e94:	08026118 	.word	0x08026118

08004e98 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 8004e98:	4b04      	ldr	r3, [pc, #16]	; (8004eac <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 8004e9a:	681b      	ldr	r3, [r3, #0]
 8004e9c:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8004ea0:	4b03      	ldr	r3, [pc, #12]	; (8004eb0 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 8004ea2:	681b      	ldr	r3, [r3, #0]
}
 8004ea4:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8004ea8:	4770      	bx	lr
 8004eaa:	bf00      	nop
 8004eac:	200047d0 	.word	0x200047d0
 8004eb0:	200047cc 	.word	0x200047cc

08004eb4 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 8004eb4:	2015      	movs	r0, #21
 8004eb6:	4770      	bx	lr

08004eb8 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 8004eb8:	4800      	ldr	r0, [pc, #0]	; (8004ebc <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 8004eba:	4770      	bx	lr
 8004ebc:	200047d8 	.word	0x200047d8

08004ec0 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 8004ec0:	b510      	push	{r4, lr}
    &(getFont_verdana_15_4bpp()),
 8004ec2:	f7ff fec3 	bl	8004c4c <_Z23getFont_verdana_15_4bppv>
};
 8004ec6:	4c04      	ldr	r4, [pc, #16]	; (8004ed8 <_GLOBAL__sub_I_touchgfx_fonts+0x18>)
 8004ec8:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 8004eca:	f7ff fefb 	bl	8004cc4 <_Z23getFont_verdana_40_4bppv>
};
 8004ece:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp())
 8004ed0:	f7ff fe80 	bl	8004bd4 <_Z23getFont_verdana_10_4bppv>
};
 8004ed4:	60a0      	str	r0, [r4, #8]
} // namespace TypedTextDatabase
 8004ed6:	bd10      	pop	{r4, pc}
 8004ed8:	200047d8 	.word	0x200047d8

08004edc <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 8004edc:	4770      	bx	lr

08004ede <_ZN19FrontendApplicationD0Ev>:
 8004ede:	b510      	push	{r4, lr}
 8004ee0:	f44f 71ac 	mov.w	r1, #344	; 0x158
 8004ee4:	4604      	mov	r4, r0
 8004ee6:	f01b fc5f 	bl	80207a8 <_ZdlPvj>
 8004eea:	4620      	mov	r0, r4
 8004eec:	bd10      	pop	{r4, pc}

08004eee <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 8004eee:	b510      	push	{r4, lr}
 8004ef0:	4604      	mov	r4, r0
    {
        model.tick();
 8004ef2:	f8d0 0154 	ldr.w	r0, [r0, #340]	; 0x154
 8004ef6:	f000 f813 	bl	8004f20 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 8004efa:	4620      	mov	r0, r4
    }
 8004efc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 8004f00:	f00c b82a 	b.w	8010f58 <_ZN8touchgfx11Application15handleTickEventEv>

08004f04 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 8004f04:	b510      	push	{r4, lr}
 8004f06:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 8004f08:	f7fd fcd6 	bl	80028b8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 8004f0c:	4b01      	ldr	r3, [pc, #4]	; (8004f14 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 8004f0e:	6023      	str	r3, [r4, #0]
{

}
 8004f10:	4620      	mov	r0, r4
 8004f12:	bd10      	pop	{r4, pc}
 8004f14:	08023594 	.word	0x08023594

08004f18 <_ZN5ModelC1Ev>:
extern LadowarkaStruct ladowarka;
#endif
int PradLadowania=400; //Set default charging curretn to 400mA
int licznik;
int ChargingTime=10; //Set default charging time to 10hrs
Model::Model() : modelListener(0)
 8004f18:	2200      	movs	r2, #0
 8004f1a:	6002      	str	r2, [r0, #0]
{

}
 8004f1c:	4770      	bx	lr
	...

08004f20 <_ZN5Model4tickEv>:

void Model::tick()
{
 8004f20:	b570      	push	{r4, r5, r6, lr}
 8004f22:	4604      	mov	r4, r0
//	if (licznik>1000 )licznik =0;
//
//	if (licznik%100) modelListener->UpdateBatteryVoltage();

/************* UPDATE BATT VOLTAGE ON GRAPH *********************/
modelListener->UpdateBatteryVoltage();
 8004f24:	6800      	ldr	r0, [r0, #0]

#ifndef SIMULATOR

if(ladowarka.narysujPunktNaWykresie){
 8004f26:	4d21      	ldr	r5, [pc, #132]	; (8004fac <_ZN5Model4tickEv+0x8c>)
modelListener->UpdateBatteryVoltage();
 8004f28:	6803      	ldr	r3, [r0, #0]
 8004f2a:	689b      	ldr	r3, [r3, #8]
 8004f2c:	4798      	blx	r3
if(ladowarka.narysujPunktNaWykresie){
 8004f2e:	f8d5 3a70 	ldr.w	r3, [r5, #2672]	; 0xa70
 8004f32:	b173      	cbz	r3, 8004f52 <_ZN5Model4tickEv+0x32>
	if (ladowarka.CzsasLadowaniaWSec==1)	modelListener->DrawPoint(); //dodanie jednego extra punktu bo zaczynamy od 0
 8004f34:	f8d5 3a78 	ldr.w	r3, [r5, #2680]	; 0xa78
 8004f38:	2b01      	cmp	r3, #1
 8004f3a:	d103      	bne.n	8004f44 <_ZN5Model4tickEv+0x24>
 8004f3c:	6820      	ldr	r0, [r4, #0]
 8004f3e:	6803      	ldr	r3, [r0, #0]
 8004f40:	68db      	ldr	r3, [r3, #12]
 8004f42:	4798      	blx	r3
	modelListener->DrawPoint();
 8004f44:	6820      	ldr	r0, [r4, #0]
 8004f46:	6803      	ldr	r3, [r0, #0]
 8004f48:	68db      	ldr	r3, [r3, #12]
 8004f4a:	4798      	blx	r3
	ladowarka.narysujPunktNaWykresie=0;
 8004f4c:	2300      	movs	r3, #0
 8004f4e:	f8c5 3a70 	str.w	r3, [r5, #2672]	; 0xa70
}

if (ladowarka.narysujPunktNaWykresieMin){
 8004f52:	f8d5 3a74 	ldr.w	r3, [r5, #2676]	; 0xa74
 8004f56:	b133      	cbz	r3, 8004f66 <_ZN5Model4tickEv+0x46>
	modelListener->DrawPointMin();
 8004f58:	6820      	ldr	r0, [r4, #0]
 8004f5a:	6803      	ldr	r3, [r0, #0]
 8004f5c:	691b      	ldr	r3, [r3, #16]
 8004f5e:	4798      	blx	r3
	ladowarka.narysujPunktNaWykresieMin=0;
 8004f60:	2300      	movs	r3, #0
 8004f62:	f8c5 3a74 	str.w	r3, [r5, #2676]	; 0xa74

}


if((ladowarka.CzsasLadowaniaWSec>=ladowarka.ChargingTime*60*60) && (ladowarka.ChargingCompleted==0) && ladowarka.ChargeStarted==1){  //*60*60//jesli czas ladowania jest wiekszy niz ustawiony pokaz modala
 8004f66:	f8d5 2a78 	ldr.w	r2, [r5, #2680]	; 0xa78
 8004f6a:	68eb      	ldr	r3, [r5, #12]
 8004f6c:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8004f70:	434b      	muls	r3, r1
 8004f72:	429a      	cmp	r2, r3
 8004f74:	db0b      	blt.n	8004f8e <_ZN5Model4tickEv+0x6e>
 8004f76:	f8d5 3a80 	ldr.w	r3, [r5, #2688]	; 0xa80
 8004f7a:	b943      	cbnz	r3, 8004f8e <_ZN5Model4tickEv+0x6e>
 8004f7c:	692e      	ldr	r6, [r5, #16]
 8004f7e:	2e01      	cmp	r6, #1
 8004f80:	d105      	bne.n	8004f8e <_ZN5Model4tickEv+0x6e>
	modelListener->DisplayChargingFinished();
 8004f82:	6820      	ldr	r0, [r4, #0]
 8004f84:	6803      	ldr	r3, [r0, #0]
 8004f86:	6a1b      	ldr	r3, [r3, #32]
 8004f88:	4798      	blx	r3
	ladowarka.ChargingCompleted=1;
 8004f8a:	f8c5 6a80 	str.w	r6, [r5, #2688]	; 0xa80
}
#endif

/*************** Update min/max value **************************/
modelListener->DisplayLastAndMaxVlt();
 8004f8e:	6820      	ldr	r0, [r4, #0]
 8004f90:	6803      	ldr	r3, [r0, #0]
 8004f92:	695b      	ldr	r3, [r3, #20]
 8004f94:	4798      	blx	r3
/*************** Update Runningn Time value **************************/
modelListener->DisplayRunningTime();
 8004f96:	6820      	ldr	r0, [r4, #0]
 8004f98:	6803      	ldr	r3, [r0, #0]
 8004f9a:	699b      	ldr	r3, [r3, #24]
 8004f9c:	4798      	blx	r3
/*************** Update Charging current value **************************/
modelListener->DisplayCurrentValue();
 8004f9e:	6820      	ldr	r0, [r4, #0]
 8004fa0:	6803      	ldr	r3, [r0, #0]
}
 8004fa2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
modelListener->DisplayCurrentValue();
 8004fa6:	69db      	ldr	r3, [r3, #28]
 8004fa8:	4718      	bx	r3
 8004faa:	bf00      	nop
 8004fac:	20003c5c 	.word	0x20003c5c

08004fb0 <_ZN13ModelListener9DrawPointEv>:
    virtual void DrawPoint () {};
 8004fb0:	4770      	bx	lr

08004fb2 <_ZN13ModelListener12DrawPointMinEv>:
    virtual void DrawPointMin () {};
 8004fb2:	4770      	bx	lr

08004fb4 <_ZN13ModelListener20DisplayLastAndMaxVltEv>:
    virtual void DisplayLastAndMaxVlt() {} ;
 8004fb4:	4770      	bx	lr

08004fb6 <_ZN13ModelListener18DisplayRunningTimeEv>:
    virtual void DisplayRunningTime() {} ;
 8004fb6:	4770      	bx	lr

08004fb8 <_ZN13ModelListener19DisplayCurrentValueEv>:
    virtual void DisplayCurrentValue() {};
 8004fb8:	4770      	bx	lr

08004fba <_ZN13ModelListener23DisplayChargingFinishedEv>:
    virtual void DisplayChargingFinished() {};
 8004fba:	4770      	bx	lr

08004fbc <_ZN16Screen1PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen1Presenter() {};
 8004fbc:	4770      	bx	lr

08004fbe <_ZThn4_N16Screen1PresenterD1Ev>:
 8004fbe:	3804      	subs	r0, #4
 8004fc0:	4770      	bx	lr

08004fc2 <_ZN16Screen1Presenter10deactivateEv>:
}

void Screen1Presenter::activate()
{

}
 8004fc2:	4770      	bx	lr

08004fc4 <_ZN16Screen1Presenter20UpdateBatteryVoltageEv>:
{

}

void Screen1Presenter:: UpdateBatteryVoltage(){
view.DisplayBatteryVoltage();
 8004fc4:	68c0      	ldr	r0, [r0, #12]
 8004fc6:	6803      	ldr	r3, [r0, #0]
 8004fc8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004fca:	4718      	bx	r3

08004fcc <_ZThn4_N16Screen1Presenter20UpdateBatteryVoltageEv>:
    virtual void UpdateBatteryVoltage();
 8004fcc:	f1a0 0004 	sub.w	r0, r0, #4
 8004fd0:	f7ff bff8 	b.w	8004fc4 <_ZN16Screen1Presenter20UpdateBatteryVoltageEv>

08004fd4 <_ZN16Screen1PresenterD0Ev>:
    virtual ~Screen1Presenter() {};
 8004fd4:	b510      	push	{r4, lr}
 8004fd6:	2110      	movs	r1, #16
 8004fd8:	4604      	mov	r4, r0
 8004fda:	f01b fbe5 	bl	80207a8 <_ZdlPvj>
 8004fde:	4620      	mov	r0, r4
 8004fe0:	bd10      	pop	{r4, pc}

08004fe2 <_ZThn4_N16Screen1PresenterD0Ev>:
 8004fe2:	f1a0 0004 	sub.w	r0, r0, #4
 8004fe6:	e7f5      	b.n	8004fd4 <_ZN16Screen1PresenterD0Ev>

08004fe8 <_ZN16Screen1PresenterC1ER11Screen1View>:
Screen1Presenter::Screen1Presenter(Screen1View& v)
 8004fe8:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 8004fea:	2200      	movs	r2, #0
 8004fec:	6082      	str	r2, [r0, #8]
    : view(v)
 8004fee:	4a04      	ldr	r2, [pc, #16]	; (8005000 <_ZN16Screen1PresenterC1ER11Screen1View+0x18>)
 8004ff0:	60c1      	str	r1, [r0, #12]
 8004ff2:	f102 0408 	add.w	r4, r2, #8
 8004ff6:	3224      	adds	r2, #36	; 0x24
 8004ff8:	6004      	str	r4, [r0, #0]
 8004ffa:	6042      	str	r2, [r0, #4]
}
 8004ffc:	bd10      	pop	{r4, pc}
 8004ffe:	bf00      	nop
 8005000:	080235d8 	.word	0x080235d8

08005004 <_ZN11Screen1ViewD1Ev>:
#include <gui/screen1_screen/Screen1Presenter.hpp>
class Screen1View : public Screen1ViewBase
{
public:
    Screen1View();
    virtual ~Screen1View() {}
 8005004:	4770      	bx	lr

08005006 <_ZN11Screen1View14tearDownScreenEv>:
}

void Screen1View::tearDownScreen()
{
    Screen1ViewBase::tearDownScreen();
}
 8005006:	4770      	bx	lr

08005008 <_ZN11Screen1View18ButtonStartClickedEv>:
}

void Screen1View::ButtonStartClicked()
{
#ifndef SIMULATOR
 ladowarka.LoadingCurrent=PradLadowania;
 8005008:	4b04      	ldr	r3, [pc, #16]	; (800501c <_ZN11Screen1View18ButtonStartClickedEv+0x14>)
 800500a:	681a      	ldr	r2, [r3, #0]
 800500c:	4b04      	ldr	r3, [pc, #16]	; (8005020 <_ZN11Screen1View18ButtonStartClickedEv+0x18>)
 800500e:	609a      	str	r2, [r3, #8]
 ladowarka.ChargeStarted=1;
 8005010:	2201      	movs	r2, #1
 8005012:	611a      	str	r2, [r3, #16]
 ladowarka.ChargingTime=ChargingTime;
 8005014:	4a03      	ldr	r2, [pc, #12]	; (8005024 <_ZN11Screen1View18ButtonStartClickedEv+0x1c>)
 8005016:	6812      	ldr	r2, [r2, #0]
 8005018:	60da      	str	r2, [r3, #12]
#endif
}
 800501a:	4770      	bx	lr
 800501c:	20000018 	.word	0x20000018
 8005020:	20003c5c 	.word	0x20003c5c
 8005024:	20000014 	.word	0x20000014

08005028 <_ZN11Screen1View15ButtonUpClickedEv>:
	PradLadowania=PradLadowania+100;
 8005028:	4b0b      	ldr	r3, [pc, #44]	; (8005058 <_ZN11Screen1View15ButtonUpClickedEv+0x30>)
 800502a:	681a      	ldr	r2, [r3, #0]
{
 800502c:	b510      	push	{r4, lr}
	PradLadowania=PradLadowania+100;
 800502e:	3264      	adds	r2, #100	; 0x64
	if (PradLadowania >400){
 8005030:	f5b2 7fc8 	cmp.w	r2, #400	; 0x190
	PradLadowania=400;}
 8005034:	bfc8      	it	gt
 8005036:	f44f 72c8 	movgt.w	r2, #400	; 0x190
 800503a:	601a      	str	r2, [r3, #0]
{
 800503c:	4604      	mov	r4, r0
	Unicode::snprintf(txtPradLadowaniaBuffer,TXTPRADLADOWANIA_SIZE,"%d",PradLadowania);
 800503e:	681b      	ldr	r3, [r3, #0]
 8005040:	4a06      	ldr	r2, [pc, #24]	; (800505c <_ZN11Screen1View15ButtonUpClickedEv+0x34>)
 8005042:	210a      	movs	r1, #10
 8005044:	f500 60b8 	add.w	r0, r0, #1472	; 0x5c0
 8005048:	f00f f850 	bl	80140ec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	txtPradLadowania.invalidate();
 800504c:	f504 7017 	add.w	r0, r4, #604	; 0x25c
}
 8005050:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	txtPradLadowania.invalidate();
 8005054:	f00d b823 	b.w	801209e <_ZNK8touchgfx8Drawable10invalidateEv>
 8005058:	20000018 	.word	0x20000018
 800505c:	08023620 	.word	0x08023620

08005060 <_ZN11Screen1View17ButtonDownClickedEv>:
	PradLadowania=PradLadowania-100;
 8005060:	4b0a      	ldr	r3, [pc, #40]	; (800508c <_ZN11Screen1View17ButtonDownClickedEv+0x2c>)
 8005062:	681a      	ldr	r2, [r3, #0]
{
 8005064:	b510      	push	{r4, lr}
	PradLadowania=PradLadowania-100;
 8005066:	3a64      	subs	r2, #100	; 0x64
    if (PradLadowania <100){
 8005068:	2a63      	cmp	r2, #99	; 0x63
	PradLadowania=100;}
 800506a:	bfd8      	it	le
 800506c:	2264      	movle	r2, #100	; 0x64
 800506e:	601a      	str	r2, [r3, #0]
{
 8005070:	4604      	mov	r4, r0
	Unicode::snprintf(txtPradLadowaniaBuffer,TXTPRADLADOWANIA_SIZE,"%d",PradLadowania);
 8005072:	681b      	ldr	r3, [r3, #0]
 8005074:	4a06      	ldr	r2, [pc, #24]	; (8005090 <_ZN11Screen1View17ButtonDownClickedEv+0x30>)
 8005076:	210a      	movs	r1, #10
 8005078:	f500 60b8 	add.w	r0, r0, #1472	; 0x5c0
 800507c:	f00f f836 	bl	80140ec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	txtPradLadowania.invalidate();
 8005080:	f504 7017 	add.w	r0, r4, #604	; 0x25c
}
 8005084:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	txtPradLadowania.invalidate();
 8005088:	f00d b809 	b.w	801209e <_ZNK8touchgfx8Drawable10invalidateEv>
 800508c:	20000018 	.word	0x20000018
 8005090:	08023620 	.word	0x08023620

08005094 <_ZN11Screen1View19ButtonUpTimeClickedEv>:
	ChargingTime=ChargingTime+1;
 8005094:	4b0a      	ldr	r3, [pc, #40]	; (80050c0 <_ZN11Screen1View19ButtonUpTimeClickedEv+0x2c>)
 8005096:	681a      	ldr	r2, [r3, #0]
{
 8005098:	b510      	push	{r4, lr}
	ChargingTime=ChargingTime+1;
 800509a:	3201      	adds	r2, #1
	if (ChargingTime >10){
 800509c:	2a0a      	cmp	r2, #10
		ChargingTime=10;}
 800509e:	bfc8      	it	gt
 80050a0:	220a      	movgt	r2, #10
 80050a2:	601a      	str	r2, [r3, #0]
{
 80050a4:	4604      	mov	r4, r0
	Unicode::snprintf(txtChargingTimeBuffer,TXTCHARGINGTIME_SIZE,"%d",ChargingTime);
 80050a6:	681b      	ldr	r3, [r3, #0]
 80050a8:	4a06      	ldr	r2, [pc, #24]	; (80050c4 <_ZN11Screen1View19ButtonUpTimeClickedEv+0x30>)
 80050aa:	2103      	movs	r1, #3
 80050ac:	f500 60bd 	add.w	r0, r0, #1512	; 0x5e8
 80050b0:	f00f f81c 	bl	80140ec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	txtChargingTime.invalidate();
 80050b4:	f204 5074 	addw	r0, r4, #1396	; 0x574
}
 80050b8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	txtChargingTime.invalidate();
 80050bc:	f00c bfef 	b.w	801209e <_ZNK8touchgfx8Drawable10invalidateEv>
 80050c0:	20000014 	.word	0x20000014
 80050c4:	08023620 	.word	0x08023620

080050c8 <_ZN11Screen1View21ButtonDownTimeClickedEv>:
	ChargingTime=ChargingTime-1;
 80050c8:	4b0a      	ldr	r3, [pc, #40]	; (80050f4 <_ZN11Screen1View21ButtonDownTimeClickedEv+0x2c>)
 80050ca:	681a      	ldr	r2, [r3, #0]
{
 80050cc:	b510      	push	{r4, lr}
	ChargingTime=ChargingTime-1;
 80050ce:	3a01      	subs	r2, #1
    if (ChargingTime <1){
 80050d0:	2a00      	cmp	r2, #0
    	ChargingTime=1;}
 80050d2:	bfd8      	it	le
 80050d4:	2201      	movle	r2, #1
 80050d6:	601a      	str	r2, [r3, #0]
{
 80050d8:	4604      	mov	r4, r0
	Unicode::snprintf(txtChargingTimeBuffer,TXTCHARGINGTIME_SIZE,"%d",ChargingTime);
 80050da:	681b      	ldr	r3, [r3, #0]
 80050dc:	4a06      	ldr	r2, [pc, #24]	; (80050f8 <_ZN11Screen1View21ButtonDownTimeClickedEv+0x30>)
 80050de:	2103      	movs	r1, #3
 80050e0:	f500 60bd 	add.w	r0, r0, #1512	; 0x5e8
 80050e4:	f00f f802 	bl	80140ec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	txtChargingTime.invalidate();
 80050e8:	f204 5074 	addw	r0, r4, #1396	; 0x574
}
 80050ec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	txtChargingTime.invalidate();
 80050f0:	f00c bfd5 	b.w	801209e <_ZNK8touchgfx8Drawable10invalidateEv>
 80050f4:	20000014 	.word	0x20000014
 80050f8:	08023620 	.word	0x08023620

080050fc <_ZN11Screen1View11setupScreenEv>:
    Screen1ViewBase::setupScreen();
 80050fc:	f7fd bccf 	b.w	8002a9e <_ZN15Screen1ViewBase11setupScreenEv>

08005100 <_ZN11Screen1View21DisplayBatteryVoltageEv>:
void Screen1View::DisplayBatteryVoltage(){
 8005100:	b513      	push	{r0, r1, r4, lr}
	Unicode::snprintfFloat(txtNapiecieBateriiBuffer,TXTNAPIECIEBATERII_SIZE,"%.3f",ladowarka.BatteryVoltage);
 8005102:	4b09      	ldr	r3, [pc, #36]	; (8005128 <_ZN11Screen1View21DisplayBatteryVoltageEv+0x28>)
     *
     * @see snprintf, snprintfFloats
     */
    static UnicodeChar* snprintfFloat(UnicodeChar* dst, uint16_t dstSize, const char* format, const float value)
    {
        return snprintfFloats(dst, dstSize, format, &value);
 8005104:	4a09      	ldr	r2, [pc, #36]	; (800512c <_ZN11Screen1View21DisplayBatteryVoltageEv+0x2c>)
 8005106:	681b      	ldr	r3, [r3, #0]
 8005108:	9301      	str	r3, [sp, #4]
void Screen1View::DisplayBatteryVoltage(){
 800510a:	4604      	mov	r4, r0
 800510c:	ab01      	add	r3, sp, #4
 800510e:	210a      	movs	r1, #10
 8005110:	f200 50d4 	addw	r0, r0, #1492	; 0x5d4
 8005114:	f00f f9a6 	bl	8014464 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	txtNapiecieBaterii.invalidate();
 8005118:	f504 7059 	add.w	r0, r4, #868	; 0x364
}
 800511c:	b002      	add	sp, #8
 800511e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	txtNapiecieBaterii.invalidate();
 8005122:	f00c bfbc 	b.w	801209e <_ZNK8touchgfx8Drawable10invalidateEv>
 8005126:	bf00      	nop
 8005128:	20003c5c 	.word	0x20003c5c
 800512c:	08023623 	.word	0x08023623

08005130 <_ZN11Screen1ViewD0Ev>:
 8005130:	b510      	push	{r4, lr}
 8005132:	f44f 61c2 	mov.w	r1, #1552	; 0x610
 8005136:	4604      	mov	r4, r0
 8005138:	f01b fb36 	bl	80207a8 <_ZdlPvj>
 800513c:	4620      	mov	r0, r4
 800513e:	bd10      	pop	{r4, pc}

08005140 <_ZN11Screen1ViewC1Ev>:
Screen1View::Screen1View()
 8005140:	b510      	push	{r4, lr}
 8005142:	4604      	mov	r4, r0
 8005144:	f7fd ff32 	bl	8002fac <_ZN15Screen1ViewBaseC1Ev>
 8005148:	4b07      	ldr	r3, [pc, #28]	; (8005168 <_ZN11Screen1ViewC1Ev+0x28>)
 800514a:	6023      	str	r3, [r4, #0]
Unicode::snprintf(txtPradLadowaniaBuffer,TXTPRADLADOWANIA_SIZE,"%d",PradLadowania);
 800514c:	4b07      	ldr	r3, [pc, #28]	; (800516c <_ZN11Screen1ViewC1Ev+0x2c>)
 800514e:	4a08      	ldr	r2, [pc, #32]	; (8005170 <_ZN11Screen1ViewC1Ev+0x30>)
 8005150:	681b      	ldr	r3, [r3, #0]
 8005152:	210a      	movs	r1, #10
 8005154:	f504 60b8 	add.w	r0, r4, #1472	; 0x5c0
 8005158:	f00e ffc8 	bl	80140ec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	txtPradLadowania.invalidate();
 800515c:	f504 7017 	add.w	r0, r4, #604	; 0x25c
 8005160:	f00c ff9d 	bl	801209e <_ZNK8touchgfx8Drawable10invalidateEv>
}
 8005164:	4620      	mov	r0, r4
 8005166:	bd10      	pop	{r4, pc}
 8005168:	08023630 	.word	0x08023630
 800516c:	20000018 	.word	0x20000018
 8005170:	08023620 	.word	0x08023620

08005174 <_ZN13ModelListener20UpdateBatteryVoltageEv>:
    virtual void UpdateBatteryVoltage () {};
 8005174:	4770      	bx	lr

08005176 <_ZN20ScreenGraphPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~ScreenGraphPresenter() {};
 8005176:	4770      	bx	lr

08005178 <_ZThn4_N20ScreenGraphPresenterD1Ev>:
 8005178:	3804      	subs	r0, #4
 800517a:	4770      	bx	lr

0800517c <_ZN20ScreenGraphPresenter10deactivateEv>:
}

void ScreenGraphPresenter::activate()
{

}
 800517c:	4770      	bx	lr

0800517e <_ZN20ScreenGraphPresenter9DrawPointEv>:
{

}
void ScreenGraphPresenter::DrawPoint()
{
	view.DrawPoint2();
 800517e:	68c0      	ldr	r0, [r0, #12]
 8005180:	6803      	ldr	r3, [r0, #0]
 8005182:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005184:	4718      	bx	r3

08005186 <_ZThn4_N20ScreenGraphPresenter9DrawPointEv>:
    virtual void DrawPoint();
 8005186:	f1a0 0004 	sub.w	r0, r0, #4
 800518a:	f7ff bff8 	b.w	800517e <_ZN20ScreenGraphPresenter9DrawPointEv>

0800518e <_ZN20ScreenGraphPresenter12DrawPointMinEv>:
}
void ScreenGraphPresenter::DrawPointMin()
{
	view.DrawPoint2Min();
 800518e:	68c0      	ldr	r0, [r0, #12]
 8005190:	6803      	ldr	r3, [r0, #0]
 8005192:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8005194:	4718      	bx	r3

08005196 <_ZThn4_N20ScreenGraphPresenter12DrawPointMinEv>:
    virtual void DrawPointMin();
 8005196:	f1a0 0004 	sub.w	r0, r0, #4
 800519a:	f7ff bff8 	b.w	800518e <_ZN20ScreenGraphPresenter12DrawPointMinEv>

0800519e <_ZN20ScreenGraphPresenter20DisplayLastAndMaxVltEv>:
}
void ScreenGraphPresenter::DisplayLastAndMaxVlt()
{
	view.DisplayLastAndMaxVlt2();
 800519e:	68c0      	ldr	r0, [r0, #12]
 80051a0:	6803      	ldr	r3, [r0, #0]
 80051a2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80051a4:	4718      	bx	r3

080051a6 <_ZThn4_N20ScreenGraphPresenter20DisplayLastAndMaxVltEv>:
    virtual void DisplayLastAndMaxVlt();
 80051a6:	f1a0 0004 	sub.w	r0, r0, #4
 80051aa:	f7ff bff8 	b.w	800519e <_ZN20ScreenGraphPresenter20DisplayLastAndMaxVltEv>

080051ae <_ZN20ScreenGraphPresenter18DisplayRunningTimeEv>:
}
void ScreenGraphPresenter::DisplayRunningTime()
{
	view.DisplayRunningTime2();
 80051ae:	68c0      	ldr	r0, [r0, #12]
 80051b0:	6803      	ldr	r3, [r0, #0]
 80051b2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80051b4:	4718      	bx	r3

080051b6 <_ZThn4_N20ScreenGraphPresenter18DisplayRunningTimeEv>:
    virtual void DisplayRunningTime();
 80051b6:	f1a0 0004 	sub.w	r0, r0, #4
 80051ba:	f7ff bff8 	b.w	80051ae <_ZN20ScreenGraphPresenter18DisplayRunningTimeEv>

080051be <_ZN20ScreenGraphPresenter19DisplayCurrentValueEv>:
}
void ScreenGraphPresenter::DisplayCurrentValue()
{
	view.DisplayCurrentValue2();
 80051be:	68c0      	ldr	r0, [r0, #12]
 80051c0:	6803      	ldr	r3, [r0, #0]
 80051c2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80051c4:	4718      	bx	r3

080051c6 <_ZThn4_N20ScreenGraphPresenter19DisplayCurrentValueEv>:
    virtual void DisplayCurrentValue();
 80051c6:	f1a0 0004 	sub.w	r0, r0, #4
 80051ca:	f7ff bff8 	b.w	80051be <_ZN20ScreenGraphPresenter19DisplayCurrentValueEv>

080051ce <_ZN20ScreenGraphPresenter23DisplayChargingFinishedEv>:
}
void ScreenGraphPresenter::DisplayChargingFinished()
{
	view.DisplayChargingFinished2();
 80051ce:	68c0      	ldr	r0, [r0, #12]
 80051d0:	6803      	ldr	r3, [r0, #0]
 80051d2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80051d4:	4718      	bx	r3

080051d6 <_ZThn4_N20ScreenGraphPresenter23DisplayChargingFinishedEv>:
    virtual void DisplayChargingFinished();
 80051d6:	f1a0 0004 	sub.w	r0, r0, #4
 80051da:	f7ff bff8 	b.w	80051ce <_ZN20ScreenGraphPresenter23DisplayChargingFinishedEv>

080051de <_ZN20ScreenGraphPresenterD0Ev>:
    virtual ~ScreenGraphPresenter() {};
 80051de:	b510      	push	{r4, lr}
 80051e0:	2110      	movs	r1, #16
 80051e2:	4604      	mov	r4, r0
 80051e4:	f01b fae0 	bl	80207a8 <_ZdlPvj>
 80051e8:	4620      	mov	r0, r4
 80051ea:	bd10      	pop	{r4, pc}

080051ec <_ZThn4_N20ScreenGraphPresenterD0Ev>:
 80051ec:	f1a0 0004 	sub.w	r0, r0, #4
 80051f0:	e7f5      	b.n	80051de <_ZN20ScreenGraphPresenterD0Ev>
	...

080051f4 <_ZN20ScreenGraphPresenterC1ER15ScreenGraphView>:
ScreenGraphPresenter::ScreenGraphPresenter(ScreenGraphView& v)
 80051f4:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 80051f6:	2200      	movs	r2, #0
 80051f8:	6082      	str	r2, [r0, #8]
    : view(v)
 80051fa:	4a04      	ldr	r2, [pc, #16]	; (800520c <_ZN20ScreenGraphPresenterC1ER15ScreenGraphView+0x18>)
 80051fc:	60c1      	str	r1, [r0, #12]
 80051fe:	f102 0408 	add.w	r4, r2, #8
 8005202:	3238      	adds	r2, #56	; 0x38
 8005204:	6004      	str	r4, [r0, #0]
 8005206:	6042      	str	r2, [r0, #4]
}
 8005208:	bd10      	pop	{r4, pc}
 800520a:	bf00      	nop
 800520c:	08023674 	.word	0x08023674

08005210 <_ZN15ScreenGraphViewD1Ev>:

class ScreenGraphView : public ScreenGraphViewBase
{
public:
    ScreenGraphView();
    virtual ~ScreenGraphView() {}
 8005210:	4770      	bx	lr

08005212 <_ZN15ScreenGraphView14tearDownScreenEv>:
}

void ScreenGraphView::tearDownScreen()
{
    ScreenGraphViewBase::tearDownScreen();
}
 8005212:	4770      	bx	lr

08005214 <_ZN15ScreenGraphView24DisplayChargingFinished2Ev>:
 8005214:	f500 5380 	add.w	r3, r0, #4096	; 0x1000
 8005218:	2201      	movs	r2, #1
#endif
}

void ScreenGraphView::DisplayChargingFinished2(){
	modalWindow1.setVisible(true);
	modalWindow1.invalidate();
 800521a:	f500 5096 	add.w	r0, r0, #4800	; 0x12c0
 800521e:	f883 22fd 	strb.w	r2, [r3, #765]	; 0x2fd
 8005222:	3018      	adds	r0, #24
 8005224:	f00c bf3b 	b.w	801209e <_ZNK8touchgfx8Drawable10invalidateEv>

08005228 <_ZN15ScreenGraphView8countMinEv>:
	Unicode::snprintf(textChargingTmeBuffer,TEXTCHARGINGTME_SIZE,"%02d:%02d:%02d\n",h,m,s);
	textChargingTme.invalidate();
#endif
}

float ScreenGraphView::countMin(){
 8005228:	b508      	push	{r3, lr}
#ifndef SIMULATOR
	float results= ladowarka.PomiaryCoSec[0]; //domyslna wartocs
 800522a:	4915      	ldr	r1, [pc, #84]	; (8005280 <_ZN15ScreenGraphView8countMinEv+0x58>)
float ScreenGraphView::countMin(){
 800522c:	ed2d 8b02 	vpush	{d8}
	float results= ladowarka.PomiaryCoSec[0]; //domyslna wartocs
 8005230:	ed91 0a00 	vldr	s0, [r1]
	for (int i=0;i<59;i++){
 8005234:	2200      	movs	r2, #0
		if ((ladowarka.PomiaryCoSec[i] < results) && ladowarka.PomiaryCoSec[i]!=0)  results=ladowarka.PomiaryCoSec[i];
 8005236:	f6a1 1178 	subw	r1, r1, #2424	; 0x978
 800523a:	f202 235e 	addw	r3, r2, #606	; 0x25e
 800523e:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8005242:	edd3 7a00 	vldr	s15, [r3]
 8005246:	eef4 7ac0 	vcmpe.f32	s15, s0
 800524a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800524e:	d508      	bpl.n	8005262 <_ZN15ScreenGraphView8countMinEv+0x3a>
 8005250:	edd3 7a00 	vldr	s15, [r3]
 8005254:	eef5 7a40 	vcmp.f32	s15, #0.0
 8005258:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800525c:	bf18      	it	ne
 800525e:	ed93 0a00 	vldrne	s0, [r3]
	for (int i=0;i<59;i++){
 8005262:	3201      	adds	r2, #1
 8005264:	2a3b      	cmp	r2, #59	; 0x3b
 8005266:	d1e8      	bne.n	800523a <_ZN15ScreenGraphView8countMinEv+0x12>
	}

	return (floor(results*100)/100);
 8005268:	ed9f 8a06 	vldr	s16, [pc, #24]	; 8005284 <_ZN15ScreenGraphView8countMinEv+0x5c>
  using ::floor;

#ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  inline _GLIBCXX_CONSTEXPR float
  floor(float __x)
  { return __builtin_floorf(__x); }
 800526c:	ee20 0a08 	vmul.f32	s0, s0, s16
 8005270:	f01b fb04 	bl	802087c <floorf>
#else
	return 1.5;
#endif
}
 8005274:	ee80 0a08 	vdiv.f32	s0, s0, s16
 8005278:	ecbd 8b02 	vpop	{d8}
 800527c:	bd08      	pop	{r3, pc}
 800527e:	bf00      	nop
 8005280:	200045d4 	.word	0x200045d4
 8005284:	42c80000 	.word	0x42c80000

08005288 <_ZN15ScreenGraphView8countMaxEv>:
float ScreenGraphView::countMax(){
 8005288:	b508      	push	{r3, lr}
 800528a:	ed2d 8b02 	vpush	{d8}
#ifndef SIMULATOR
	float results= 0; //domyslna wartocs
 800528e:	ed9f 0a10 	vldr	s0, [pc, #64]	; 80052d0 <_ZN15ScreenGraphView8countMaxEv+0x48>
	for (int i=0;i<59;i++){
		if (ladowarka.PomiaryCoSec[i] > results)  results=ladowarka.PomiaryCoSec[i];
 8005292:	4910      	ldr	r1, [pc, #64]	; (80052d4 <_ZN15ScreenGraphView8countMaxEv+0x4c>)
	for (int i=0;i<59;i++){
 8005294:	2300      	movs	r3, #0
		if (ladowarka.PomiaryCoSec[i] > results)  results=ladowarka.PomiaryCoSec[i];
 8005296:	f203 225e 	addw	r2, r3, #606	; 0x25e
 800529a:	eb01 0282 	add.w	r2, r1, r2, lsl #2
 800529e:	edd2 7a00 	vldr	s15, [r2]
 80052a2:	eef4 7ac0 	vcmpe.f32	s15, s0
 80052a6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
	for (int i=0;i<59;i++){
 80052aa:	f103 0301 	add.w	r3, r3, #1
		if (ladowarka.PomiaryCoSec[i] > results)  results=ladowarka.PomiaryCoSec[i];
 80052ae:	bfc8      	it	gt
 80052b0:	ed92 0a00 	vldrgt	s0, [r2]
	for (int i=0;i<59;i++){
 80052b4:	2b3b      	cmp	r3, #59	; 0x3b
 80052b6:	d1ee      	bne.n	8005296 <_ZN15ScreenGraphView8countMaxEv+0xe>
	}

	return (ceil(results*100)/100);
 80052b8:	ed9f 8a07 	vldr	s16, [pc, #28]	; 80052d8 <_ZN15ScreenGraphView8countMaxEv+0x50>
  { return __builtin_ceilf(__x); }
 80052bc:	ee20 0a08 	vmul.f32	s0, s0, s16
 80052c0:	f01b fa9a 	bl	80207f8 <ceilf>


#else
	return 1.5;
#endif
}
 80052c4:	ee80 0a08 	vdiv.f32	s0, s0, s16
 80052c8:	ecbd 8b02 	vpop	{d8}
 80052cc:	bd08      	pop	{r3, pc}
 80052ce:	bf00      	nop
 80052d0:	00000000 	.word	0x00000000
 80052d4:	20003c5c 	.word	0x20003c5c
 80052d8:	42c80000 	.word	0x42c80000

080052dc <_ZN15ScreenGraphView19DisplayRunningTime2Ev>:
	sec=ladowarka.CzsasLadowaniaWSec;
 80052dc:	4b11      	ldr	r3, [pc, #68]	; (8005324 <_ZN15ScreenGraphView19DisplayRunningTime2Ev+0x48>)
void ScreenGraphView::DisplayRunningTime2(){
 80052de:	b513      	push	{r0, r1, r4, lr}
	sec=ladowarka.CzsasLadowaniaWSec;
 80052e0:	f8d3 2a78 	ldr.w	r2, [r3, #2680]	; 0xa78
	m = (sec -(3600*h))/60;
 80052e4:	4910      	ldr	r1, [pc, #64]	; (8005328 <_ZN15ScreenGraphView19DisplayRunningTime2Ev+0x4c>)
void ScreenGraphView::DisplayRunningTime2(){
 80052e6:	4604      	mov	r4, r0
	h = (sec/3600);
 80052e8:	f44f 6361 	mov.w	r3, #3600	; 0xe10
	s = (sec -(3600*h)-(m*60));
 80052ec:	f06f 003b 	mvn.w	r0, #59	; 0x3b
	h = (sec/3600);
 80052f0:	fb92 f3f3 	sdiv	r3, r2, r3
	m = (sec -(3600*h))/60;
 80052f4:	fb01 2203 	mla	r2, r1, r3, r2
 80052f8:	213c      	movs	r1, #60	; 0x3c
 80052fa:	fb92 f1f1 	sdiv	r1, r2, r1
	s = (sec -(3600*h)-(m*60));
 80052fe:	fb00 2201 	mla	r2, r0, r1, r2
	Unicode::snprintf(textChargingTmeBuffer,TEXTCHARGINGTME_SIZE,"%02d:%02d:%02d\n",h,m,s);
 8005302:	f504 50a2 	add.w	r0, r4, #5184	; 0x1440
 8005306:	e9cd 1200 	strd	r1, r2, [sp]
 800530a:	3010      	adds	r0, #16
 800530c:	4a07      	ldr	r2, [pc, #28]	; (800532c <_ZN15ScreenGraphView19DisplayRunningTime2Ev+0x50>)
 800530e:	210a      	movs	r1, #10
 8005310:	f00e feec 	bl	80140ec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textChargingTme.invalidate();
 8005314:	f504 5092 	add.w	r0, r4, #4672	; 0x1240
}
 8005318:	b002      	add	sp, #8
 800531a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	textChargingTme.invalidate();
 800531e:	f00c bebe 	b.w	801209e <_ZNK8touchgfx8Drawable10invalidateEv>
 8005322:	bf00      	nop
 8005324:	20003c5c 	.word	0x20003c5c
 8005328:	fffff1f0 	.word	0xfffff1f0
 800532c:	080236d0 	.word	0x080236d0

08005330 <_ZN15ScreenGraphViewD0Ev>:
 8005330:	b510      	push	{r4, lr}
 8005332:	f242 713c 	movw	r1, #10044	; 0x273c
 8005336:	4604      	mov	r4, r0
 8005338:	f01b fa36 	bl	80207a8 <_ZdlPvj>
 800533c:	4620      	mov	r0, r4
 800533e:	bd10      	pop	{r4, pc}

08005340 <_ZN15ScreenGraphView11setupScreenEv>:
{
 8005340:	b510      	push	{r4, lr}
 8005342:	4604      	mov	r4, r0
    ScreenGraphViewBase::setupScreen();
 8005344:	f7fe fd61 	bl	8003e0a <_ZN19ScreenGraphViewBase11setupScreenEv>
        setIntervalScaled(AbstractDataGraph::float2scaled(interval, dataScale));
 8005348:	f504 5280 	add.w	r2, r4, #4096	; 0x1000
        const float fs = f * (float)scale;
 800534c:	edd2 7a43 	vldr	s15, [r2, #268]	; 0x10c
 8005350:	ed9f 6a90 	vldr	s12, [pc, #576]	; 8005594 <_ZN15ScreenGraphView11setupScreenEv+0x254>
 8005354:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8005358:	ee27 7a06 	vmul.f32	s14, s14, s12
        if (fs >= 0)
 800535c:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8005360:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005364:	f2c0 809e 	blt.w	80054a4 <_ZN15ScreenGraphView11setupScreenEv+0x164>
            return (int)(fs + 0.5f);
 8005368:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 800536c:	ee37 7a27 	vadd.f32	s14, s14, s15
 8005370:	eefd 7ac7 	vcvt.s32.f32	s15, s14
 8005374:	ee17 3a90 	vmov	r3, s15
        const float fs = f * (float)scale;
 8005378:	edd2 7a33 	vldr	s15, [r2, #204]	; 0xcc
 800537c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 * @return The absolute (non-negative) value of d.
 */
template <typename T>
T abs(T d)
{
    return (d < 0) ? -d : d;
 8005380:	2b00      	cmp	r3, #0
 8005382:	ee67 7a86 	vmul.f32	s15, s15, s12
 8005386:	bfb8      	it	lt
 8005388:	425b      	neglt	r3, r3
        if (fs >= 0)
 800538a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800538e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
        labelInterval = abs(interval);
 8005392:	f8c2 3110 	str.w	r3, [r2, #272]	; 0x110
 8005396:	f2c0 8099 	blt.w	80054cc <_ZN15ScreenGraphView11setupScreenEv+0x18c>
            return (int)(fs + 0.5f);
 800539a:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800539e:	ee77 7a87 	vadd.f32	s15, s15, s14
 80053a2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80053a6:	ee17 3a90 	vmov	r3, s15
        const float fs = f * (float)scale;
 80053aa:	edd2 7a13 	vldr	s15, [r2, #76]	; 0x4c
 80053ae:	ed9f 7a7a 	vldr	s14, [pc, #488]	; 8005598 <_ZN15ScreenGraphView11setupScreenEv+0x258>
 80053b2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80053b6:	2b00      	cmp	r3, #0
 80053b8:	ee67 7a87 	vmul.f32	s15, s15, s14
 80053bc:	bfb8      	it	lt
 80053be:	425b      	neglt	r3, r3
        if (fs >= 0)
 80053c0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80053c4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
        gridInterval = abs(interval);
 80053c8:	f8c2 30d0 	str.w	r3, [r2, #208]	; 0xd0
 80053cc:	f2c0 8092 	blt.w	80054f4 <_ZN15ScreenGraphView11setupScreenEv+0x1b4>
            return (int)(fs + 0.5f);
 80053d0:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80053d4:	ee77 7a87 	vadd.f32	s15, s15, s14
 80053d8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80053dc:	ee17 3a90 	vmov	r3, s15
 80053e0:	2b00      	cmp	r3, #0
 80053e2:	bfb8      	it	lt
 80053e4:	425b      	neglt	r3, r3
 80053e6:	6513      	str	r3, [r2, #80]	; 0x50
        const float fs = f * (float)scale;
 80053e8:	f8d4 3d3c 	ldr.w	r3, [r4, #3388]	; 0xd3c
 80053ec:	ed9f 6a6b 	vldr	s12, [pc, #428]	; 800559c <_ZN15ScreenGraphView11setupScreenEv+0x25c>
 80053f0:	ee07 3a90 	vmov	s15, r3
 80053f4:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80053f8:	ee27 7a06 	vmul.f32	s14, s14, s12
        if (fs >= 0)
 80053fc:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8005400:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005404:	f2c0 808a 	blt.w	800551c <_ZN15ScreenGraphView11setupScreenEv+0x1dc>
            return (int)(fs + 0.5f);
 8005408:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 800540c:	ee37 7a27 	vadd.f32	s14, s14, s15
 8005410:	eefd 7ac7 	vcvt.s32.f32	s15, s14
 8005414:	ee17 3a90 	vmov	r3, s15
 8005418:	2b00      	cmp	r3, #0
 800541a:	bfb8      	it	lt
 800541c:	425b      	neglt	r3, r3
 800541e:	f8c4 3d40 	str.w	r3, [r4, #3392]	; 0xd40
        const float fs = f * (float)scale;
 8005422:	f8d4 3cb0 	ldr.w	r3, [r4, #3248]	; 0xcb0
 8005426:	ee07 3a90 	vmov	s15, r3
 800542a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800542e:	ee67 7a86 	vmul.f32	s15, s15, s12
        if (fs >= 0)
 8005432:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005436:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800543a:	f2c0 8083 	blt.w	8005544 <_ZN15ScreenGraphView11setupScreenEv+0x204>
            return (int)(fs + 0.5f);
 800543e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005442:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005446:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800544a:	ee17 3a90 	vmov	r3, s15
 800544e:	2b00      	cmp	r3, #0
 8005450:	bfb8      	it	lt
 8005452:	425b      	neglt	r3, r3
 8005454:	f8c4 3cb4 	str.w	r3, [r4, #3252]	; 0xcb4
        const float fs = f * (float)scale;
 8005458:	f8d4 3c30 	ldr.w	r3, [r4, #3120]	; 0xc30
 800545c:	ed9f 7a50 	vldr	s14, [pc, #320]	; 80055a0 <_ZN15ScreenGraphView11setupScreenEv+0x260>
 8005460:	ee07 3a90 	vmov	s15, r3
 8005464:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005468:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800546c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005470:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005474:	db7a      	blt.n	800556c <_ZN15ScreenGraphView11setupScreenEv+0x22c>
            return (int)(fs + 0.5f);
 8005476:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800547a:	ee77 7a87 	vadd.f32	s15, s15, s14
 800547e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005482:	ee17 3a90 	vmov	r3, s15
 8005486:	2b00      	cmp	r3, #0
 8005488:	bfb8      	it	lt
 800548a:	425b      	neglt	r3, r3
     dynamicGraph1.invalidate();
 800548c:	f604 5058 	addw	r0, r4, #3416	; 0xd58
 8005490:	f8c4 3c34 	str.w	r3, [r4, #3124]	; 0xc34
 8005494:	f00c fe03 	bl	801209e <_ZNK8touchgfx8Drawable10invalidateEv>
     dynamicGraph2.invalidate();
 8005498:	f104 00cc 	add.w	r0, r4, #204	; 0xcc
}
 800549c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
     dynamicGraph2.invalidate();
 80054a0:	f00c bdfd 	b.w	801209e <_ZNK8touchgfx8Drawable10invalidateEv>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 80054a4:	eefd 6ac7 	vcvt.s32.f32	s13, s14
 80054a8:	eef8 7ae6 	vcvt.f32.s32	s15, s13
 80054ac:	ee16 3a90 	vmov	r3, s13
 80054b0:	ee37 7a67 	vsub.f32	s14, s14, s15
 80054b4:	eef7 7a08 	vmov.f32	s15, #120	; 0x3fc00000  1.5
 80054b8:	ee37 7a27 	vadd.f32	s14, s14, s15
 80054bc:	3b01      	subs	r3, #1
 80054be:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 80054c2:	ee17 1a10 	vmov	r1, s14
 80054c6:	4419      	add	r1, r3
 80054c8:	460b      	mov	r3, r1
 80054ca:	e755      	b.n	8005378 <_ZN15ScreenGraphView11setupScreenEv+0x38>
 80054cc:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80054d0:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80054d4:	ee17 3a10 	vmov	r3, s14
 80054d8:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80054dc:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80054e0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80054e4:	3b01      	subs	r3, #1
 80054e6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80054ea:	ee17 1a90 	vmov	r1, s15
 80054ee:	4419      	add	r1, r3
 80054f0:	460b      	mov	r3, r1
 80054f2:	e75a      	b.n	80053aa <_ZN15ScreenGraphView11setupScreenEv+0x6a>
 80054f4:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80054f8:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80054fc:	ee17 3a10 	vmov	r3, s14
 8005500:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8005504:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8005508:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800550c:	3b01      	subs	r3, #1
 800550e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005512:	ee17 1a90 	vmov	r1, s15
 8005516:	4419      	add	r1, r3
 8005518:	460b      	mov	r3, r1
 800551a:	e761      	b.n	80053e0 <_ZN15ScreenGraphView11setupScreenEv+0xa0>
 800551c:	eefd 6ac7 	vcvt.s32.f32	s13, s14
 8005520:	eef8 7ae6 	vcvt.f32.s32	s15, s13
 8005524:	ee16 3a90 	vmov	r3, s13
 8005528:	ee37 7a67 	vsub.f32	s14, s14, s15
 800552c:	eef7 7a08 	vmov.f32	s15, #120	; 0x3fc00000  1.5
 8005530:	ee37 7a27 	vadd.f32	s14, s14, s15
 8005534:	3b01      	subs	r3, #1
 8005536:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 800553a:	ee17 2a10 	vmov	r2, s14
 800553e:	441a      	add	r2, r3
 8005540:	4613      	mov	r3, r2
 8005542:	e769      	b.n	8005418 <_ZN15ScreenGraphView11setupScreenEv+0xd8>
 8005544:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8005548:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800554c:	ee17 3a10 	vmov	r3, s14
 8005550:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8005554:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8005558:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800555c:	3b01      	subs	r3, #1
 800555e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005562:	ee17 2a90 	vmov	r2, s15
 8005566:	441a      	add	r2, r3
 8005568:	4613      	mov	r3, r2
 800556a:	e770      	b.n	800544e <_ZN15ScreenGraphView11setupScreenEv+0x10e>
 800556c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8005570:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8005574:	ee17 3a10 	vmov	r3, s14
 8005578:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800557c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8005580:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8005584:	3b01      	subs	r3, #1
 8005586:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800558a:	ee17 2a90 	vmov	r2, s15
 800558e:	441a      	add	r2, r3
 8005590:	4613      	mov	r3, r2
 8005592:	e778      	b.n	8005486 <_ZN15ScreenGraphView11setupScreenEv+0x146>
 8005594:	3c23d70a 	.word	0x3c23d70a
 8005598:	3ba3d70a 	.word	0x3ba3d70a
 800559c:	3dcccccd 	.word	0x3dcccccd
 80055a0:	3d4ccccd 	.word	0x3d4ccccd

080055a4 <_ZN15ScreenGraphView20DisplayCurrentValue2Ev>:
void ScreenGraphView::DisplayCurrentValue2(){
 80055a4:	b513      	push	{r0, r1, r4, lr}
	Unicode::snprintfFloat(textChargingCurrentBuffer,TEXTCHARGINGCURRENT_SIZE,"%3f",ladowarka.ChargingCurrent);
 80055a6:	4b0a      	ldr	r3, [pc, #40]	; (80055d0 <_ZN15ScreenGraphView20DisplayCurrentValue2Ev+0x2c>)
 80055a8:	4a0a      	ldr	r2, [pc, #40]	; (80055d4 <_ZN15ScreenGraphView20DisplayCurrentValue2Ev+0x30>)
 80055aa:	681b      	ldr	r3, [r3, #0]
 80055ac:	9301      	str	r3, [sp, #4]
void ScreenGraphView::DisplayCurrentValue2(){
 80055ae:	4604      	mov	r4, r0
 80055b0:	2104      	movs	r1, #4
 80055b2:	f500 50a3 	add.w	r0, r0, #5216	; 0x1460
 80055b6:	ab01      	add	r3, sp, #4
 80055b8:	4408      	add	r0, r1
 80055ba:	f00e ff53 	bl	8014464 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	textChargingCurrent.invalidate();
 80055be:	f504 5094 	add.w	r0, r4, #4736	; 0x1280
 80055c2:	300c      	adds	r0, #12
}
 80055c4:	b002      	add	sp, #8
 80055c6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	textChargingCurrent.invalidate();
 80055ca:	f00c bd68 	b.w	801209e <_ZNK8touchgfx8Drawable10invalidateEv>
 80055ce:	bf00      	nop
 80055d0:	200046d8 	.word	0x200046d8
 80055d4:	080236e0 	.word	0x080236e0

080055d8 <_ZN15ScreenGraphView21DisplayLastAndMaxVlt2Ev>:
void ScreenGraphView::DisplayLastAndMaxVlt2(){
 80055d8:	b537      	push	{r0, r1, r2, r4, r5, lr}
	Unicode::snprintfFloat(txtLastValueBuffer,TXTLASTVALUE_SIZE,"%.3f",ladowarka.BatteryVoltage);
 80055da:	4d11      	ldr	r5, [pc, #68]	; (8005620 <_ZN15ScreenGraphView21DisplayLastAndMaxVlt2Ev+0x48>)
 80055dc:	4a11      	ldr	r2, [pc, #68]	; (8005624 <_ZN15ScreenGraphView21DisplayLastAndMaxVlt2Ev+0x4c>)
 80055de:	682b      	ldr	r3, [r5, #0]
 80055e0:	9301      	str	r3, [sp, #4]
void ScreenGraphView::DisplayLastAndMaxVlt2(){
 80055e2:	4604      	mov	r4, r0
 80055e4:	f500 50a1 	add.w	r0, r0, #5152	; 0x1420
 80055e8:	ab01      	add	r3, sp, #4
 80055ea:	2108      	movs	r1, #8
 80055ec:	3010      	adds	r0, #16
 80055ee:	f00e ff39 	bl	8014464 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	Unicode::snprintfFloat(txtMaxValueBuffer,TXTMAXVALUE_SIZE,"%.3f",ladowarka.MaxBatteryVoltage);
 80055f2:	686b      	ldr	r3, [r5, #4]
 80055f4:	4a0b      	ldr	r2, [pc, #44]	; (8005624 <_ZN15ScreenGraphView21DisplayLastAndMaxVlt2Ev+0x4c>)
 80055f6:	9301      	str	r3, [sp, #4]
 80055f8:	2108      	movs	r1, #8
 80055fa:	ab01      	add	r3, sp, #4
 80055fc:	f504 50a2 	add.w	r0, r4, #5184	; 0x1440
 8005600:	f00e ff30 	bl	8014464 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	txtMaxValue.invalidate();
 8005604:	f504 508f 	add.w	r0, r4, #4576	; 0x11e0
 8005608:	3014      	adds	r0, #20
 800560a:	f00c fd48 	bl	801209e <_ZNK8touchgfx8Drawable10invalidateEv>
	txtLastValue.invalidate();
 800560e:	f504 508d 	add.w	r0, r4, #4512	; 0x11a0
 8005612:	3008      	adds	r0, #8
}
 8005614:	b003      	add	sp, #12
 8005616:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
	txtLastValue.invalidate();
 800561a:	f00c bd40 	b.w	801209e <_ZNK8touchgfx8Drawable10invalidateEv>
 800561e:	bf00      	nop
 8005620:	20003c5c 	.word	0x20003c5c
 8005624:	08023623 	.word	0x08023623

08005628 <_ZN15ScreenGraphView10DrawPoint2Ev>:
void ScreenGraphView::DrawPoint2(){
 8005628:	b538      	push	{r3, r4, r5, lr}
	dynamicGraph1.addDataPoint(ladowarka.BatteryVoltage);
 800562a:	4b24      	ldr	r3, [pc, #144]	; (80056bc <_ZN15ScreenGraphView10DrawPoint2Ev+0x94>)
 800562c:	ed93 7a00 	vldr	s14, [r3]
        const float fs = f * (float)scale;
 8005630:	f8d0 3d8c 	ldr.w	r3, [r0, #3468]	; 0xd8c
 8005634:	ee07 3a90 	vmov	s15, r3
 8005638:	eef8 7ae7 	vcvt.f32.s32	s15, s15
void ScreenGraphView::DrawPoint2(){
 800563c:	ed2d 8b02 	vpush	{d8}
 8005640:	ee67 7a87 	vmul.f32	s15, s15, s14
 8005644:	4604      	mov	r4, r0
        if (fs >= 0)
 8005646:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800564a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
	dynamicGraph1.addDataPoint(ladowarka.BatteryVoltage);
 800564e:	f600 5558 	addw	r5, r0, #3416	; 0xd58
 8005652:	db1e      	blt.n	8005692 <_ZN15ScreenGraphView10DrawPoint2Ev+0x6a>
            return (int)(fs + 0.5f);
 8005654:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005658:	ee77 7a87 	vadd.f32	s15, s15, s14
 800565c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005660:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005664:	4628      	mov	r0, r5
 8005666:	f007 f93d 	bl	800c8e4 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
    dynamicGraph1.setGraphRangeY(countMin(), countMax());
 800566a:	6823      	ldr	r3, [r4, #0]
 800566c:	4620      	mov	r0, r4
 800566e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8005670:	4798      	blx	r3
 8005672:	6823      	ldr	r3, [r4, #0]
 8005674:	4620      	mov	r0, r4
 8005676:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8005678:	eeb0 8a40 	vmov.f32	s16, s0
 800567c:	4798      	blx	r3
 800567e:	4628      	mov	r0, r5
 8005680:	eef0 0a40 	vmov.f32	s1, s0
 8005684:	eeb0 0a48 	vmov.f32	s0, s16
 8005688:	f7fe f880 	bl	800378c <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff>
}
 800568c:	ecbd 8b02 	vpop	{d8}
 8005690:	bd38      	pop	{r3, r4, r5, pc}
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8005692:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8005696:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800569a:	ee17 3a10 	vmov	r3, s14
 800569e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80056a2:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80056a6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80056aa:	1e59      	subs	r1, r3, #1
 80056ac:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80056b0:	ee17 3a90 	vmov	r3, s15
 80056b4:	440b      	add	r3, r1
 80056b6:	4619      	mov	r1, r3
 80056b8:	e7d4      	b.n	8005664 <_ZN15ScreenGraphView10DrawPoint2Ev+0x3c>
 80056ba:	bf00      	nop
 80056bc:	20003c5c 	.word	0x20003c5c

080056c0 <_ZN15ScreenGraphView13DrawPoint2MinEv>:
void ScreenGraphView::DrawPoint2Min(){
 80056c0:	b570      	push	{r4, r5, r6, lr}
        const float fs = f * (float)scale;
 80056c2:	edd0 7a40 	vldr	s15, [r0, #256]	; 0x100
	dynamicGraph2.addDataPoint(ladowarka.SredniaZOstatniejMin);
 80056c6:	4d56      	ldr	r5, [pc, #344]	; (8005820 <_ZN15ScreenGraphView13DrawPoint2MinEv+0x160>)
 80056c8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80056cc:	ed95 7a00 	vldr	s14, [r5]
 80056d0:	ee67 7a87 	vmul.f32	s15, s15, s14
void ScreenGraphView::DrawPoint2Min(){
 80056d4:	ed2d 8b02 	vpush	{d8}
        if (fs >= 0)
 80056d8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80056dc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80056e0:	4604      	mov	r4, r0
	dynamicGraph2.addDataPoint(ladowarka.SredniaZOstatniejMin);
 80056e2:	f100 06cc 	add.w	r6, r0, #204	; 0xcc
 80056e6:	db57      	blt.n	8005798 <_ZN15ScreenGraphView13DrawPoint2MinEv+0xd8>
            return (int)(fs + 0.5f);
 80056e8:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80056ec:	ee77 7a87 	vadd.f32	s15, s15, s14
 80056f0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80056f4:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80056f8:	4630      	mov	r0, r6
 80056fa:	f007 f8f3 	bl	800c8e4 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
	if (ladowarka.SredniaZOstatniejMin<minValue) minValue=ladowarka.SredniaZOstatniejMin;
 80056fe:	edd5 7a00 	vldr	s15, [r5]
 8005702:	eeb0 0a00 	vmov.f32	s0, #0	; 0x40000000  2.0
 8005706:	eef4 7ac0 	vcmpe.f32	s15, s0
 800570a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800570e:	bf48      	it	mi
 8005710:	ed95 0a00 	vldrmi	s0, [r5]
	 dynamicGraph2.setGraphRangeY((floor(minValue*10)/10),(ceil(ladowarka.MaxBatteryVoltage*10)/10));
 8005714:	4d43      	ldr	r5, [pc, #268]	; (8005824 <_ZN15ScreenGraphView13DrawPoint2MinEv+0x164>)
 8005716:	eeb2 8a04 	vmov.f32	s16, #36	; 0x41200000  10.0
  { return __builtin_floorf(__x); }
 800571a:	ee20 0a08 	vmul.f32	s0, s0, s16
 800571e:	f01b f8ad 	bl	802087c <floorf>
 8005722:	eef0 8a40 	vmov.f32	s17, s0
 8005726:	ed95 0a01 	vldr	s0, [r5, #4]
  { return __builtin_ceilf(__x); }
 800572a:	ee20 0a08 	vmul.f32	s0, s0, s16
 800572e:	f01b f863 	bl	80207f8 <ceilf>
 8005732:	4630      	mov	r0, r6
 8005734:	eec0 0a08 	vdiv.f32	s1, s0, s16
 8005738:	ee88 0a88 	vdiv.f32	s0, s17, s16
 800573c:	f7fe f826 	bl	800378c <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff>
	if (ladowarka.CzsasLadowaniaWSec>9*60 && ladowarka.CzsasLadowaniaWSec <59*60){ //jesli czas jest >9min i <59 min
 8005740:	f8d5 3a78 	ldr.w	r3, [r5, #2680]	; 0xa78
 8005744:	f5b3 7f07 	cmp.w	r3, #540	; 0x21c
 8005748:	dd3a      	ble.n	80057c0 <_ZN15ScreenGraphView13DrawPoint2MinEv+0x100>
 800574a:	f8d5 2a78 	ldr.w	r2, [r5, #2680]	; 0xa78
 800574e:	f640 53d3 	movw	r3, #3539	; 0xdd3
 8005752:	429a      	cmp	r2, r3
 8005754:	dc34      	bgt.n	80057c0 <_ZN15ScreenGraphView13DrawPoint2MinEv+0x100>
		dynamicGraph2.setGraphRangeX(0,60);
 8005756:	223c      	movs	r2, #60	; 0x3c
 8005758:	2100      	movs	r1, #0
 800575a:	4630      	mov	r0, r6
 800575c:	f7fd ff80 	bl	8003660 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>
        setIntervalScaled(abs(interval) * dataScale);
 8005760:	f8d4 2c70 	ldr.w	r2, [r4, #3184]	; 0xc70
        return i * scale;
 8005764:	f8d4 3cf0 	ldr.w	r3, [r4, #3312]	; 0xcf0
 8005768:	210a      	movs	r1, #10
 800576a:	434a      	muls	r2, r1
 800576c:	2a00      	cmp	r2, #0
 800576e:	bfb8      	it	lt
 8005770:	4252      	neglt	r2, r2
        gridInterval = abs(interval);
 8005772:	f8c4 2c74 	str.w	r2, [r4, #3188]	; 0xc74
        setIntervalScaled(abs(interval) * dataScale);
 8005776:	f8d4 2bf0 	ldr.w	r2, [r4, #3056]	; 0xbf0
 800577a:	0052      	lsls	r2, r2, #1
 800577c:	2a00      	cmp	r2, #0
 800577e:	bfb8      	it	lt
 8005780:	4252      	neglt	r2, r2
        gridInterval = abs(interval);
 8005782:	f8c4 2bf4 	str.w	r2, [r4, #3060]	; 0xbf4
 8005786:	434b      	muls	r3, r1
 8005788:	2b00      	cmp	r3, #0
 800578a:	bfb8      	it	lt
 800578c:	425b      	neglt	r3, r3
 800578e:	f8c4 3cf4 	str.w	r3, [r4, #3316]	; 0xcf4
}
 8005792:	ecbd 8b02 	vpop	{d8}
 8005796:	bd70      	pop	{r4, r5, r6, pc}
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8005798:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800579c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80057a0:	ee17 3a10 	vmov	r3, s14
 80057a4:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80057a8:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80057ac:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80057b0:	1e59      	subs	r1, r3, #1
 80057b2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80057b6:	ee17 3a90 	vmov	r3, s15
 80057ba:	440b      	add	r3, r1
 80057bc:	4619      	mov	r1, r3
 80057be:	e79b      	b.n	80056f8 <_ZN15ScreenGraphView13DrawPoint2MinEv+0x38>
	else if ((ladowarka.CzsasLadowaniaWSec >59*60) && (ladowarka.ChargingCompleted==0) ){ //jesli czas jest >59 min
 80057c0:	f8d5 2a78 	ldr.w	r2, [r5, #2680]	; 0xa78
 80057c4:	f640 53d4 	movw	r3, #3540	; 0xdd4
 80057c8:	429a      	cmp	r2, r3
 80057ca:	dd02      	ble.n	80057d2 <_ZN15ScreenGraphView13DrawPoint2MinEv+0x112>
 80057cc:	f8d5 1a80 	ldr.w	r1, [r5, #2688]	; 0xa80
 80057d0:	b151      	cbz	r1, 80057e8 <_ZN15ScreenGraphView13DrawPoint2MinEv+0x128>
	else if(ladowarka.ChargingCompleted) 	{//maksymalna wartosc graphu keidy skonczy sie ladowanie oraz ustaw plot X,Y
 80057d2:	f8d5 3a80 	ldr.w	r3, [r5, #2688]	; 0xa80
 80057d6:	2b00      	cmp	r3, #0
 80057d8:	d0db      	beq.n	8005792 <_ZN15ScreenGraphView13DrawPoint2MinEv+0xd2>
				dynamicGraph2.setGraphRangeX(0,600);
 80057da:	f44f 7216 	mov.w	r2, #600	; 0x258
 80057de:	2100      	movs	r1, #0
 80057e0:	4630      	mov	r0, r6
 80057e2:	f7fd ff3d 	bl	8003660 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>
}
 80057e6:	e7d4      	b.n	8005792 <_ZN15ScreenGraphView13DrawPoint2MinEv+0xd2>
			dynamicGraph2.setGraphRangeX(0,ladowarka.ChargingTime*60);
 80057e8:	68ea      	ldr	r2, [r5, #12]
 80057ea:	253c      	movs	r5, #60	; 0x3c
 80057ec:	436a      	muls	r2, r5
 80057ee:	4630      	mov	r0, r6
 80057f0:	f7fd ff36 	bl	8003660 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>
        setIntervalScaled(abs(interval) * dataScale);
 80057f4:	f8d4 2c70 	ldr.w	r2, [r4, #3184]	; 0xc70
 80057f8:	436a      	muls	r2, r5
 80057fa:	2a00      	cmp	r2, #0
 80057fc:	bfb8      	it	lt
 80057fe:	4252      	neglt	r2, r2
        gridInterval = abs(interval);
 8005800:	f8c4 2c74 	str.w	r2, [r4, #3188]	; 0xc74
        setIntervalScaled(abs(interval) * dataScale);
 8005804:	f8d4 2bf0 	ldr.w	r2, [r4, #3056]	; 0xbf0
 8005808:	230a      	movs	r3, #10
 800580a:	435a      	muls	r2, r3
 800580c:	2a00      	cmp	r2, #0
        return i * scale;
 800580e:	f8d4 3cf0 	ldr.w	r3, [r4, #3312]	; 0xcf0
 8005812:	bfb8      	it	lt
 8005814:	4252      	neglt	r2, r2
        gridInterval = abs(interval);
 8005816:	f8c4 2bf4 	str.w	r2, [r4, #3060]	; 0xbf4
 800581a:	436b      	muls	r3, r5
 800581c:	e7b4      	b.n	8005788 <_ZN15ScreenGraphView13DrawPoint2MinEv+0xc8>
 800581e:	bf00      	nop
 8005820:	200046e0 	.word	0x200046e0
 8005824:	20003c5c 	.word	0x20003c5c

08005828 <_ZN15ScreenGraphViewC1Ev>:
ScreenGraphView::ScreenGraphView()
 8005828:	b510      	push	{r4, lr}
 800582a:	4604      	mov	r4, r0
 800582c:	f7fe fc9a 	bl	8004164 <_ZN19ScreenGraphViewBaseC1Ev>
 8005830:	4b01      	ldr	r3, [pc, #4]	; (8005838 <_ZN15ScreenGraphViewC1Ev+0x10>)
 8005832:	6023      	str	r3, [r4, #0]
}
 8005834:	4620      	mov	r0, r4
 8005836:	bd10      	pop	{r4, pc}
 8005838:	080236ec 	.word	0x080236ec

0800583c <ili9341_GetLcdPixelWidth>:
  */
uint16_t ili9341_GetLcdPixelWidth(void)
{
  /* Return LCD PIXEL WIDTH */
  return ILI9341_LCD_PIXEL_WIDTH;
}
 800583c:	20f0      	movs	r0, #240	; 0xf0
 800583e:	4770      	bx	lr

08005840 <ili9341_GetLcdPixelHeight>:
  */
uint16_t ili9341_GetLcdPixelHeight(void)
{
  /* Return LCD PIXEL HEIGHT */
  return ILI9341_LCD_PIXEL_HEIGHT;
}
 8005840:	f44f 70a0 	mov.w	r0, #320	; 0x140
 8005844:	4770      	bx	lr

08005846 <ili9341_DisplayOn>:
  LCD_IO_WriteReg(LCD_Reg);
 8005846:	2029      	movs	r0, #41	; 0x29
 8005848:	f7fc b944 	b.w	8001ad4 <LCD_IO_WriteReg>

0800584c <ili9341_DisplayOff>:
 800584c:	2028      	movs	r0, #40	; 0x28
 800584e:	f7fc b941 	b.w	8001ad4 <LCD_IO_WriteReg>

08005852 <ili9341_Init>:
{
 8005852:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8005854:	f7fc f912 	bl	8001a7c <LCD_IO_Init>
  LCD_IO_WriteReg(LCD_Reg);
 8005858:	20ca      	movs	r0, #202	; 0xca
 800585a:	f7fc f93b 	bl	8001ad4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800585e:	20c3      	movs	r0, #195	; 0xc3
 8005860:	f7fc f91c 	bl	8001a9c <LCD_IO_WriteData>
 8005864:	2008      	movs	r0, #8
 8005866:	f7fc f919 	bl	8001a9c <LCD_IO_WriteData>
 800586a:	2050      	movs	r0, #80	; 0x50
 800586c:	f7fc f916 	bl	8001a9c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005870:	20cf      	movs	r0, #207	; 0xcf
 8005872:	f7fc f92f 	bl	8001ad4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005876:	2000      	movs	r0, #0
 8005878:	f7fc f910 	bl	8001a9c <LCD_IO_WriteData>
 800587c:	20c1      	movs	r0, #193	; 0xc1
 800587e:	f7fc f90d 	bl	8001a9c <LCD_IO_WriteData>
 8005882:	2030      	movs	r0, #48	; 0x30
 8005884:	f7fc f90a 	bl	8001a9c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005888:	20ed      	movs	r0, #237	; 0xed
 800588a:	f7fc f923 	bl	8001ad4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800588e:	2064      	movs	r0, #100	; 0x64
 8005890:	f7fc f904 	bl	8001a9c <LCD_IO_WriteData>
 8005894:	2003      	movs	r0, #3
 8005896:	f7fc f901 	bl	8001a9c <LCD_IO_WriteData>
 800589a:	2012      	movs	r0, #18
 800589c:	f7fc f8fe 	bl	8001a9c <LCD_IO_WriteData>
 80058a0:	2081      	movs	r0, #129	; 0x81
 80058a2:	f7fc f8fb 	bl	8001a9c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80058a6:	20e8      	movs	r0, #232	; 0xe8
 80058a8:	f7fc f914 	bl	8001ad4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80058ac:	2085      	movs	r0, #133	; 0x85
 80058ae:	f7fc f8f5 	bl	8001a9c <LCD_IO_WriteData>
 80058b2:	2000      	movs	r0, #0
 80058b4:	f7fc f8f2 	bl	8001a9c <LCD_IO_WriteData>
 80058b8:	2078      	movs	r0, #120	; 0x78
 80058ba:	f7fc f8ef 	bl	8001a9c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80058be:	20cb      	movs	r0, #203	; 0xcb
 80058c0:	f7fc f908 	bl	8001ad4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80058c4:	2039      	movs	r0, #57	; 0x39
 80058c6:	f7fc f8e9 	bl	8001a9c <LCD_IO_WriteData>
 80058ca:	202c      	movs	r0, #44	; 0x2c
 80058cc:	f7fc f8e6 	bl	8001a9c <LCD_IO_WriteData>
 80058d0:	2000      	movs	r0, #0
 80058d2:	f7fc f8e3 	bl	8001a9c <LCD_IO_WriteData>
 80058d6:	2034      	movs	r0, #52	; 0x34
 80058d8:	f7fc f8e0 	bl	8001a9c <LCD_IO_WriteData>
 80058dc:	2002      	movs	r0, #2
 80058de:	f7fc f8dd 	bl	8001a9c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80058e2:	20f7      	movs	r0, #247	; 0xf7
 80058e4:	f7fc f8f6 	bl	8001ad4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80058e8:	2020      	movs	r0, #32
 80058ea:	f7fc f8d7 	bl	8001a9c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80058ee:	20ea      	movs	r0, #234	; 0xea
 80058f0:	f7fc f8f0 	bl	8001ad4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80058f4:	2000      	movs	r0, #0
 80058f6:	f7fc f8d1 	bl	8001a9c <LCD_IO_WriteData>
 80058fa:	2000      	movs	r0, #0
 80058fc:	f7fc f8ce 	bl	8001a9c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005900:	20b1      	movs	r0, #177	; 0xb1
 8005902:	f7fc f8e7 	bl	8001ad4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005906:	2000      	movs	r0, #0
 8005908:	f7fc f8c8 	bl	8001a9c <LCD_IO_WriteData>
 800590c:	201b      	movs	r0, #27
 800590e:	f7fc f8c5 	bl	8001a9c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005912:	20b6      	movs	r0, #182	; 0xb6
 8005914:	f7fc f8de 	bl	8001ad4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005918:	200a      	movs	r0, #10
 800591a:	f7fc f8bf 	bl	8001a9c <LCD_IO_WriteData>
 800591e:	20a2      	movs	r0, #162	; 0xa2
 8005920:	f7fc f8bc 	bl	8001a9c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005924:	20c0      	movs	r0, #192	; 0xc0
 8005926:	f7fc f8d5 	bl	8001ad4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800592a:	2010      	movs	r0, #16
 800592c:	f7fc f8b6 	bl	8001a9c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005930:	20c1      	movs	r0, #193	; 0xc1
 8005932:	f7fc f8cf 	bl	8001ad4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005936:	2010      	movs	r0, #16
 8005938:	f7fc f8b0 	bl	8001a9c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800593c:	20c5      	movs	r0, #197	; 0xc5
 800593e:	f7fc f8c9 	bl	8001ad4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005942:	2045      	movs	r0, #69	; 0x45
 8005944:	f7fc f8aa 	bl	8001a9c <LCD_IO_WriteData>
 8005948:	2015      	movs	r0, #21
 800594a:	f7fc f8a7 	bl	8001a9c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800594e:	20c7      	movs	r0, #199	; 0xc7
 8005950:	f7fc f8c0 	bl	8001ad4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005954:	2090      	movs	r0, #144	; 0x90
 8005956:	f7fc f8a1 	bl	8001a9c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800595a:	2036      	movs	r0, #54	; 0x36
 800595c:	f7fc f8ba 	bl	8001ad4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005960:	20c8      	movs	r0, #200	; 0xc8
 8005962:	f7fc f89b 	bl	8001a9c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005966:	20f2      	movs	r0, #242	; 0xf2
 8005968:	f7fc f8b4 	bl	8001ad4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800596c:	2000      	movs	r0, #0
 800596e:	f7fc f895 	bl	8001a9c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005972:	20b0      	movs	r0, #176	; 0xb0
 8005974:	f7fc f8ae 	bl	8001ad4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005978:	20c2      	movs	r0, #194	; 0xc2
 800597a:	f7fc f88f 	bl	8001a9c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800597e:	20b6      	movs	r0, #182	; 0xb6
 8005980:	f7fc f8a8 	bl	8001ad4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005984:	200a      	movs	r0, #10
 8005986:	f7fc f889 	bl	8001a9c <LCD_IO_WriteData>
 800598a:	20a7      	movs	r0, #167	; 0xa7
 800598c:	f7fc f886 	bl	8001a9c <LCD_IO_WriteData>
 8005990:	2027      	movs	r0, #39	; 0x27
 8005992:	f7fc f883 	bl	8001a9c <LCD_IO_WriteData>
 8005996:	2004      	movs	r0, #4
 8005998:	f7fc f880 	bl	8001a9c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800599c:	202a      	movs	r0, #42	; 0x2a
 800599e:	f7fc f899 	bl	8001ad4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80059a2:	2000      	movs	r0, #0
 80059a4:	f7fc f87a 	bl	8001a9c <LCD_IO_WriteData>
 80059a8:	2000      	movs	r0, #0
 80059aa:	f7fc f877 	bl	8001a9c <LCD_IO_WriteData>
 80059ae:	2000      	movs	r0, #0
 80059b0:	f7fc f874 	bl	8001a9c <LCD_IO_WriteData>
 80059b4:	20ef      	movs	r0, #239	; 0xef
 80059b6:	f7fc f871 	bl	8001a9c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80059ba:	202b      	movs	r0, #43	; 0x2b
 80059bc:	f7fc f88a 	bl	8001ad4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80059c0:	2000      	movs	r0, #0
 80059c2:	f7fc f86b 	bl	8001a9c <LCD_IO_WriteData>
 80059c6:	2000      	movs	r0, #0
 80059c8:	f7fc f868 	bl	8001a9c <LCD_IO_WriteData>
 80059cc:	2001      	movs	r0, #1
 80059ce:	f7fc f865 	bl	8001a9c <LCD_IO_WriteData>
 80059d2:	203f      	movs	r0, #63	; 0x3f
 80059d4:	f7fc f862 	bl	8001a9c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80059d8:	20f6      	movs	r0, #246	; 0xf6
 80059da:	f7fc f87b 	bl	8001ad4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80059de:	2001      	movs	r0, #1
 80059e0:	f7fc f85c 	bl	8001a9c <LCD_IO_WriteData>
 80059e4:	2000      	movs	r0, #0
 80059e6:	f7fc f859 	bl	8001a9c <LCD_IO_WriteData>
 80059ea:	2006      	movs	r0, #6
 80059ec:	f7fc f856 	bl	8001a9c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80059f0:	202c      	movs	r0, #44	; 0x2c
 80059f2:	f7fc f86f 	bl	8001ad4 <LCD_IO_WriteReg>
  LCD_Delay(200);
 80059f6:	20c8      	movs	r0, #200	; 0xc8
 80059f8:	f7fc f8ba 	bl	8001b70 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 80059fc:	2026      	movs	r0, #38	; 0x26
 80059fe:	f7fc f869 	bl	8001ad4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005a02:	2001      	movs	r0, #1
 8005a04:	f7fc f84a 	bl	8001a9c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005a08:	20e0      	movs	r0, #224	; 0xe0
 8005a0a:	f7fc f863 	bl	8001ad4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005a0e:	200f      	movs	r0, #15
 8005a10:	f7fc f844 	bl	8001a9c <LCD_IO_WriteData>
 8005a14:	2029      	movs	r0, #41	; 0x29
 8005a16:	f7fc f841 	bl	8001a9c <LCD_IO_WriteData>
 8005a1a:	2024      	movs	r0, #36	; 0x24
 8005a1c:	f7fc f83e 	bl	8001a9c <LCD_IO_WriteData>
 8005a20:	200c      	movs	r0, #12
 8005a22:	f7fc f83b 	bl	8001a9c <LCD_IO_WriteData>
 8005a26:	200e      	movs	r0, #14
 8005a28:	f7fc f838 	bl	8001a9c <LCD_IO_WriteData>
 8005a2c:	2009      	movs	r0, #9
 8005a2e:	f7fc f835 	bl	8001a9c <LCD_IO_WriteData>
 8005a32:	204e      	movs	r0, #78	; 0x4e
 8005a34:	f7fc f832 	bl	8001a9c <LCD_IO_WriteData>
 8005a38:	2078      	movs	r0, #120	; 0x78
 8005a3a:	f7fc f82f 	bl	8001a9c <LCD_IO_WriteData>
 8005a3e:	203c      	movs	r0, #60	; 0x3c
 8005a40:	f7fc f82c 	bl	8001a9c <LCD_IO_WriteData>
 8005a44:	2009      	movs	r0, #9
 8005a46:	f7fc f829 	bl	8001a9c <LCD_IO_WriteData>
 8005a4a:	2013      	movs	r0, #19
 8005a4c:	f7fc f826 	bl	8001a9c <LCD_IO_WriteData>
 8005a50:	2005      	movs	r0, #5
 8005a52:	f7fc f823 	bl	8001a9c <LCD_IO_WriteData>
 8005a56:	2017      	movs	r0, #23
 8005a58:	f7fc f820 	bl	8001a9c <LCD_IO_WriteData>
 8005a5c:	2011      	movs	r0, #17
 8005a5e:	f7fc f81d 	bl	8001a9c <LCD_IO_WriteData>
 8005a62:	2000      	movs	r0, #0
 8005a64:	f7fc f81a 	bl	8001a9c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005a68:	20e1      	movs	r0, #225	; 0xe1
 8005a6a:	f7fc f833 	bl	8001ad4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005a6e:	2000      	movs	r0, #0
 8005a70:	f7fc f814 	bl	8001a9c <LCD_IO_WriteData>
 8005a74:	2016      	movs	r0, #22
 8005a76:	f7fc f811 	bl	8001a9c <LCD_IO_WriteData>
 8005a7a:	201b      	movs	r0, #27
 8005a7c:	f7fc f80e 	bl	8001a9c <LCD_IO_WriteData>
 8005a80:	2004      	movs	r0, #4
 8005a82:	f7fc f80b 	bl	8001a9c <LCD_IO_WriteData>
 8005a86:	2011      	movs	r0, #17
 8005a88:	f7fc f808 	bl	8001a9c <LCD_IO_WriteData>
 8005a8c:	2007      	movs	r0, #7
 8005a8e:	f7fc f805 	bl	8001a9c <LCD_IO_WriteData>
 8005a92:	2031      	movs	r0, #49	; 0x31
 8005a94:	f7fc f802 	bl	8001a9c <LCD_IO_WriteData>
 8005a98:	2033      	movs	r0, #51	; 0x33
 8005a9a:	f7fb ffff 	bl	8001a9c <LCD_IO_WriteData>
 8005a9e:	2042      	movs	r0, #66	; 0x42
 8005aa0:	f7fb fffc 	bl	8001a9c <LCD_IO_WriteData>
 8005aa4:	2005      	movs	r0, #5
 8005aa6:	f7fb fff9 	bl	8001a9c <LCD_IO_WriteData>
 8005aaa:	200c      	movs	r0, #12
 8005aac:	f7fb fff6 	bl	8001a9c <LCD_IO_WriteData>
 8005ab0:	200a      	movs	r0, #10
 8005ab2:	f7fb fff3 	bl	8001a9c <LCD_IO_WriteData>
 8005ab6:	2028      	movs	r0, #40	; 0x28
 8005ab8:	f7fb fff0 	bl	8001a9c <LCD_IO_WriteData>
 8005abc:	202f      	movs	r0, #47	; 0x2f
 8005abe:	f7fb ffed 	bl	8001a9c <LCD_IO_WriteData>
 8005ac2:	200f      	movs	r0, #15
 8005ac4:	f7fb ffea 	bl	8001a9c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005ac8:	2011      	movs	r0, #17
 8005aca:	f7fc f803 	bl	8001ad4 <LCD_IO_WriteReg>
  LCD_Delay(200);
 8005ace:	20c8      	movs	r0, #200	; 0xc8
 8005ad0:	f7fc f84e 	bl	8001b70 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8005ad4:	2029      	movs	r0, #41	; 0x29
 8005ad6:	f7fb fffd 	bl	8001ad4 <LCD_IO_WriteReg>
}
 8005ada:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LCD_IO_WriteReg(LCD_Reg);
 8005ade:	202c      	movs	r0, #44	; 0x2c
 8005ae0:	f7fb bff8 	b.w	8001ad4 <LCD_IO_WriteReg>

08005ae4 <ili9341_ReadID>:
{
 8005ae4:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8005ae6:	f7fb ffc9 	bl	8001a7c <LCD_IO_Init>
  return (LCD_IO_ReadData(RegValue, ReadSize));
 8005aea:	2103      	movs	r1, #3
 8005aec:	20d3      	movs	r0, #211	; 0xd3
 8005aee:	f7fc f80d 	bl	8001b0c <LCD_IO_ReadData>
}
 8005af2:	b280      	uxth	r0, r0
 8005af4:	bd08      	pop	{r3, pc}

08005af6 <stmpe811_Reset>:
  * @brief  Reset the stmpe811 by Software.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval None
  */
void stmpe811_Reset(uint16_t DeviceAddr)
{
 8005af6:	b510      	push	{r4, lr}
  /* Power Down the stmpe811 */  
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 8005af8:	b2c4      	uxtb	r4, r0
 8005afa:	2202      	movs	r2, #2
 8005afc:	2103      	movs	r1, #3
 8005afe:	4620      	mov	r0, r4
 8005b00:	f7fb ff72 	bl	80019e8 <IOE_Write>

  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(10); 
 8005b04:	200a      	movs	r0, #10
 8005b06:	f7fb ffb7 	bl	8001a78 <IOE_Delay>
  
  /* Power On the Codec after the power off => all registers are reinitialized */
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 8005b0a:	4620      	mov	r0, r4
 8005b0c:	2200      	movs	r2, #0
 8005b0e:	2103      	movs	r1, #3
 8005b10:	f7fb ff6a 	bl	80019e8 <IOE_Write>
  
  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(2); 
}
 8005b14:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 8005b18:	2002      	movs	r0, #2
 8005b1a:	f7fb bfad 	b.w	8001a78 <IOE_Delay>

08005b1e <stmpe811_ReadID>:
  * @brief  Read the stmpe811 IO Expander device ID.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval The Device ID (two bytes).
  */
uint16_t stmpe811_ReadID(uint16_t DeviceAddr)
{
 8005b1e:	b538      	push	{r3, r4, r5, lr}
 8005b20:	4604      	mov	r4, r0
  /* Initialize IO BUS layer */
  IOE_Init(); 
  
  /* Return the device ID value */
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8005b22:	b2e4      	uxtb	r4, r4
  IOE_Init(); 
 8005b24:	f7fb ff5e 	bl	80019e4 <IOE_Init>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8005b28:	2100      	movs	r1, #0
 8005b2a:	4620      	mov	r0, r4
 8005b2c:	f7fb ff74 	bl	8001a18 <IOE_Read>
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8005b30:	2101      	movs	r1, #1
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8005b32:	4605      	mov	r5, r0
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8005b34:	4620      	mov	r0, r4
 8005b36:	f7fb ff6f 	bl	8001a18 <IOE_Read>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8005b3a:	ea40 2005 	orr.w	r0, r0, r5, lsl #8
}
 8005b3e:	b280      	uxth	r0, r0
 8005b40:	bd38      	pop	{r3, r4, r5, pc}

08005b42 <stmpe811_TS_DetectTouch>:
  * @brief  Return if there is touch detected or not.
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Touch detected state.
  */
uint8_t stmpe811_TS_DetectTouch(uint16_t DeviceAddr)
{
 8005b42:	b510      	push	{r4, lr}
  uint8_t state;
  uint8_t ret = 0;
  
  state = ((IOE_Read(DeviceAddr, STMPE811_REG_TSC_CTRL) & (uint8_t)STMPE811_TS_CTRL_STATUS) == (uint8_t)0x80);
 8005b44:	b2c4      	uxtb	r4, r0
 8005b46:	2140      	movs	r1, #64	; 0x40
 8005b48:	4620      	mov	r0, r4
 8005b4a:	f7fb ff65 	bl	8001a18 <IOE_Read>
  
  if(state > 0)
 8005b4e:	0603      	lsls	r3, r0, #24
 8005b50:	d507      	bpl.n	8005b62 <stmpe811_TS_DetectTouch+0x20>
  {
    if(IOE_Read(DeviceAddr, STMPE811_REG_FIFO_SIZE) > 0)
 8005b52:	214c      	movs	r1, #76	; 0x4c
 8005b54:	4620      	mov	r0, r4
 8005b56:	f7fb ff5f 	bl	8001a18 <IOE_Read>
    {
      ret = 1;
 8005b5a:	3800      	subs	r0, #0
 8005b5c:	bf18      	it	ne
 8005b5e:	2001      	movne	r0, #1
    /* Enable the FIFO again */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
  }
  
  return ret;
}
 8005b60:	bd10      	pop	{r4, pc}
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8005b62:	2201      	movs	r2, #1
 8005b64:	214b      	movs	r1, #75	; 0x4b
 8005b66:	4620      	mov	r0, r4
 8005b68:	f7fb ff3e 	bl	80019e8 <IOE_Write>
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8005b6c:	4620      	mov	r0, r4
 8005b6e:	2200      	movs	r2, #0
 8005b70:	214b      	movs	r1, #75	; 0x4b
 8005b72:	f7fb ff39 	bl	80019e8 <IOE_Write>
  uint8_t ret = 0;
 8005b76:	2000      	movs	r0, #0
 8005b78:	e7f2      	b.n	8005b60 <stmpe811_TS_DetectTouch+0x1e>

08005b7a <stmpe811_TS_GetXY>:
  * @param  X: Pointer to X position value
  * @param  Y: Pointer to Y position value   
  * @retval None.
  */
void stmpe811_TS_GetXY(uint16_t DeviceAddr, uint16_t *X, uint16_t *Y)
{
 8005b7a:	b573      	push	{r0, r1, r4, r5, r6, lr}
  uint8_t  dataXYZ[4];
  uint32_t uldataXYZ;
  
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8005b7c:	2304      	movs	r3, #4
 8005b7e:	b2c4      	uxtb	r4, r0
{
 8005b80:	460e      	mov	r6, r1
 8005b82:	4615      	mov	r5, r2
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8005b84:	21d7      	movs	r1, #215	; 0xd7
 8005b86:	eb0d 0203 	add.w	r2, sp, r3
 8005b8a:	4620      	mov	r0, r4
 8005b8c:	f7fb ff5e 	bl	8001a4c <IOE_ReadMultiple>
  
  /* Calculate positions values */
  uldataXYZ = (dataXYZ[0] << 24)|(dataXYZ[1] << 16)|(dataXYZ[2] << 8)|(dataXYZ[3] << 0);     
 8005b90:	9b01      	ldr	r3, [sp, #4]
 8005b92:	ba1b      	rev	r3, r3
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8005b94:	0d1a      	lsrs	r2, r3, #20
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8005b96:	f3c3 230b 	ubfx	r3, r3, #8, #12
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8005b9a:	8032      	strh	r2, [r6, #0]
  
  /* Reset FIFO */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8005b9c:	4620      	mov	r0, r4
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8005b9e:	802b      	strh	r3, [r5, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8005ba0:	2201      	movs	r2, #1
 8005ba2:	214b      	movs	r1, #75	; 0x4b
 8005ba4:	f7fb ff20 	bl	80019e8 <IOE_Write>
  /* Enable the FIFO again */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8005ba8:	2200      	movs	r2, #0
 8005baa:	214b      	movs	r1, #75	; 0x4b
 8005bac:	4620      	mov	r0, r4
 8005bae:	f7fb ff1b 	bl	80019e8 <IOE_Write>
}
 8005bb2:	b002      	add	sp, #8
 8005bb4:	bd70      	pop	{r4, r5, r6, pc}
	...

08005bb8 <stmpe811_Init>:
{
 8005bb8:	b510      	push	{r4, lr}
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
  {
    if(stmpe811[idx] == DeviceAddr)
 8005bba:	4b0a      	ldr	r3, [pc, #40]	; (8005be4 <stmpe811_Init+0x2c>)
 8005bbc:	781a      	ldrb	r2, [r3, #0]
 8005bbe:	4290      	cmp	r0, r2
{
 8005bc0:	4604      	mov	r4, r0
    if(stmpe811[idx] == DeviceAddr)
 8005bc2:	d00d      	beq.n	8005be0 <stmpe811_Init+0x28>
 8005bc4:	7859      	ldrb	r1, [r3, #1]
 8005bc6:	4288      	cmp	r0, r1
 8005bc8:	d00a      	beq.n	8005be0 <stmpe811_Init+0x28>
 8005bca:	b10a      	cbz	r2, 8005bd0 <stmpe811_Init+0x18>
 8005bcc:	b941      	cbnz	r1, 8005be0 <stmpe811_Init+0x28>
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
 8005bce:	2201      	movs	r2, #1
      stmpe811[empty] = DeviceAddr;
 8005bd0:	549c      	strb	r4, [r3, r2]
      IOE_Init(); 
 8005bd2:	f7fb ff07 	bl	80019e4 <IOE_Init>
      stmpe811_Reset(DeviceAddr);
 8005bd6:	4620      	mov	r0, r4
}
 8005bd8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      stmpe811_Reset(DeviceAddr);
 8005bdc:	f7ff bf8b 	b.w	8005af6 <stmpe811_Reset>
}
 8005be0:	bd10      	pop	{r4, pc}
 8005be2:	bf00      	nop
 8005be4:	200047e4 	.word	0x200047e4

08005be8 <stmpe811_EnableGlobalIT>:
{
 8005be8:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8005bea:	b2c4      	uxtb	r4, r0
 8005bec:	2109      	movs	r1, #9
 8005bee:	4620      	mov	r0, r4
 8005bf0:	f7fb ff12 	bl	8001a18 <IOE_Read>
  tmp |= (uint8_t)STMPE811_GIT_EN;
 8005bf4:	f040 0001 	orr.w	r0, r0, #1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8005bf8:	b2c2      	uxtb	r2, r0
 8005bfa:	2109      	movs	r1, #9
 8005bfc:	4620      	mov	r0, r4
}
 8005bfe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8005c02:	f7fb bef1 	b.w	80019e8 <IOE_Write>

08005c06 <stmpe811_DisableGlobalIT>:
{
 8005c06:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8005c08:	b2c4      	uxtb	r4, r0
 8005c0a:	2109      	movs	r1, #9
 8005c0c:	4620      	mov	r0, r4
 8005c0e:	f7fb ff03 	bl	8001a18 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 8005c12:	2109      	movs	r1, #9
 8005c14:	f000 02fe 	and.w	r2, r0, #254	; 0xfe
 8005c18:	4620      	mov	r0, r4
}
 8005c1a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 8005c1e:	f7fb bee3 	b.w	80019e8 <IOE_Write>

08005c22 <stmpe811_EnableITSource>:
{
 8005c22:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8005c24:	b2c4      	uxtb	r4, r0
{
 8005c26:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8005c28:	4620      	mov	r0, r4
 8005c2a:	210a      	movs	r1, #10
 8005c2c:	f7fb fef4 	bl	8001a18 <IOE_Read>
  tmp |= Source; 
 8005c30:	4328      	orrs	r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8005c32:	b2c2      	uxtb	r2, r0
 8005c34:	210a      	movs	r1, #10
 8005c36:	4620      	mov	r0, r4
}
 8005c38:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8005c3c:	f7fb bed4 	b.w	80019e8 <IOE_Write>

08005c40 <stmpe811_TS_EnableIT>:
{
 8005c40:	b507      	push	{r0, r1, r2, lr}
 8005c42:	9001      	str	r0, [sp, #4]
  IOE_ITConfig();
 8005c44:	f7fb fecf 	bl	80019e6 <IOE_ITConfig>
  stmpe811_EnableITSource(DeviceAddr, STMPE811_TS_IT); 
 8005c48:	9801      	ldr	r0, [sp, #4]
 8005c4a:	211f      	movs	r1, #31
 8005c4c:	f7ff ffe9 	bl	8005c22 <stmpe811_EnableITSource>
  stmpe811_EnableGlobalIT(DeviceAddr);
 8005c50:	9801      	ldr	r0, [sp, #4]
}
 8005c52:	b003      	add	sp, #12
 8005c54:	f85d eb04 	ldr.w	lr, [sp], #4
  stmpe811_EnableGlobalIT(DeviceAddr);
 8005c58:	f7ff bfc6 	b.w	8005be8 <stmpe811_EnableGlobalIT>

08005c5c <stmpe811_DisableITSource>:
{
 8005c5c:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8005c5e:	b2c4      	uxtb	r4, r0
{
 8005c60:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8005c62:	4620      	mov	r0, r4
 8005c64:	210a      	movs	r1, #10
 8005c66:	f7fb fed7 	bl	8001a18 <IOE_Read>
  tmp &= ~Source; 
 8005c6a:	ea20 0005 	bic.w	r0, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8005c6e:	b2c2      	uxtb	r2, r0
 8005c70:	210a      	movs	r1, #10
 8005c72:	4620      	mov	r0, r4
}
 8005c74:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8005c78:	f7fb beb6 	b.w	80019e8 <IOE_Write>

08005c7c <stmpe811_TS_DisableIT>:
{
 8005c7c:	b510      	push	{r4, lr}
 8005c7e:	4604      	mov	r4, r0
  stmpe811_DisableGlobalIT(DeviceAddr);
 8005c80:	f7ff ffc1 	bl	8005c06 <stmpe811_DisableGlobalIT>
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 8005c84:	4620      	mov	r0, r4
 8005c86:	211f      	movs	r1, #31
}
 8005c88:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 8005c8c:	f7ff bfe6 	b.w	8005c5c <stmpe811_DisableITSource>

08005c90 <stmpe811_ReadGITStatus>:
{
 8005c90:	b510      	push	{r4, lr}
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8005c92:	b2c0      	uxtb	r0, r0
{
 8005c94:	460c      	mov	r4, r1
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8005c96:	210b      	movs	r1, #11
 8005c98:	f7fb febe 	bl	8001a18 <IOE_Read>
}
 8005c9c:	4020      	ands	r0, r4
 8005c9e:	bd10      	pop	{r4, pc}

08005ca0 <stmpe811_TS_ITStatus>:
  return(stmpe811_ReadGITStatus(DeviceAddr, STMPE811_TS_IT));
 8005ca0:	211f      	movs	r1, #31
 8005ca2:	f7ff bff5 	b.w	8005c90 <stmpe811_ReadGITStatus>

08005ca6 <stmpe811_ClearGlobalIT>:
{
 8005ca6:	460a      	mov	r2, r1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, Source);
 8005ca8:	b2c0      	uxtb	r0, r0
 8005caa:	210b      	movs	r1, #11
 8005cac:	f7fb be9c 	b.w	80019e8 <IOE_Write>

08005cb0 <stmpe811_TS_ClearIT>:
  stmpe811_ClearGlobalIT(DeviceAddr, STMPE811_TS_IT);
 8005cb0:	211f      	movs	r1, #31
 8005cb2:	f7ff bff8 	b.w	8005ca6 <stmpe811_ClearGlobalIT>

08005cb6 <stmpe811_IO_EnableAF>:
{
 8005cb6:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8005cb8:	b2c4      	uxtb	r4, r0
{
 8005cba:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8005cbc:	4620      	mov	r0, r4
 8005cbe:	2117      	movs	r1, #23
 8005cc0:	f7fb feaa 	bl	8001a18 <IOE_Read>
  tmp &= ~(uint8_t)IO_Pin;   
 8005cc4:	ea20 0005 	bic.w	r0, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 8005cc8:	b2c2      	uxtb	r2, r0
 8005cca:	2117      	movs	r1, #23
 8005ccc:	4620      	mov	r0, r4
}
 8005cce:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 8005cd2:	f7fb be89 	b.w	80019e8 <IOE_Write>

08005cd6 <stmpe811_TS_Start>:
{
 8005cd6:	b570      	push	{r4, r5, r6, lr}
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8005cd8:	b2c4      	uxtb	r4, r0
{
 8005cda:	4606      	mov	r6, r0
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8005cdc:	2104      	movs	r1, #4
 8005cde:	4620      	mov	r0, r4
 8005ce0:	f7fb fe9a 	bl	8001a18 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8005ce4:	2104      	movs	r1, #4
 8005ce6:	f000 02fb 	and.w	r2, r0, #251	; 0xfb
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8005cea:	4605      	mov	r5, r0
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8005cec:	4620      	mov	r0, r4
 8005cee:	f7fb fe7b 	bl	80019e8 <IOE_Write>
  stmpe811_IO_EnableAF(DeviceAddr, STMPE811_TOUCH_IO_ALL);
 8005cf2:	4630      	mov	r0, r6
 8005cf4:	21f0      	movs	r1, #240	; 0xf0
 8005cf6:	f7ff ffde 	bl	8005cb6 <stmpe811_IO_EnableAF>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8005cfa:	f005 02f8 	and.w	r2, r5, #248	; 0xf8
 8005cfe:	4620      	mov	r0, r4
 8005d00:	2104      	movs	r1, #4
 8005d02:	f7fb fe71 	bl	80019e8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL1, 0x49);
 8005d06:	2249      	movs	r2, #73	; 0x49
 8005d08:	2120      	movs	r1, #32
 8005d0a:	4620      	mov	r0, r4
 8005d0c:	f7fb fe6c 	bl	80019e8 <IOE_Write>
  IOE_Delay(2); 
 8005d10:	2002      	movs	r0, #2
 8005d12:	f7fb feb1 	bl	8001a78 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL2, 0x01);
 8005d16:	4620      	mov	r0, r4
 8005d18:	2201      	movs	r2, #1
 8005d1a:	2121      	movs	r1, #33	; 0x21
 8005d1c:	f7fb fe64 	bl	80019e8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CFG, 0x9A); 
 8005d20:	4620      	mov	r0, r4
 8005d22:	229a      	movs	r2, #154	; 0x9a
 8005d24:	2141      	movs	r1, #65	; 0x41
 8005d26:	f7fb fe5f 	bl	80019e8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_TH, 0x01);
 8005d2a:	4620      	mov	r0, r4
 8005d2c:	2201      	movs	r2, #1
 8005d2e:	214a      	movs	r1, #74	; 0x4a
 8005d30:	f7fb fe5a 	bl	80019e8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8005d34:	4620      	mov	r0, r4
 8005d36:	2201      	movs	r2, #1
 8005d38:	214b      	movs	r1, #75	; 0x4b
 8005d3a:	f7fb fe55 	bl	80019e8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8005d3e:	4620      	mov	r0, r4
 8005d40:	2200      	movs	r2, #0
 8005d42:	214b      	movs	r1, #75	; 0x4b
 8005d44:	f7fb fe50 	bl	80019e8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_FRACT_XYZ, 0x01);
 8005d48:	4620      	mov	r0, r4
 8005d4a:	2201      	movs	r2, #1
 8005d4c:	2156      	movs	r1, #86	; 0x56
 8005d4e:	f7fb fe4b 	bl	80019e8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_I_DRIVE, 0x01);
 8005d52:	4620      	mov	r0, r4
 8005d54:	2201      	movs	r2, #1
 8005d56:	2158      	movs	r1, #88	; 0x58
 8005d58:	f7fb fe46 	bl	80019e8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CTRL, 0x01);
 8005d5c:	4620      	mov	r0, r4
 8005d5e:	2201      	movs	r2, #1
 8005d60:	2140      	movs	r1, #64	; 0x40
 8005d62:	f7fb fe41 	bl	80019e8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, 0xFF);
 8005d66:	4620      	mov	r0, r4
 8005d68:	22ff      	movs	r2, #255	; 0xff
 8005d6a:	210b      	movs	r1, #11
 8005d6c:	f7fb fe3c 	bl	80019e8 <IOE_Write>
}
 8005d70:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  IOE_Delay(2); 
 8005d74:	2002      	movs	r0, #2
 8005d76:	f7fb be7f 	b.w	8001a78 <IOE_Delay>
	...

08005d7c <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8005d7c:	4b05      	ldr	r3, [pc, #20]	; (8005d94 <SystemInit+0x18>)
 8005d7e:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
 8005d82:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 8005d86:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8005d8a:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8005d8e:	609a      	str	r2, [r3, #8]
#endif
}
 8005d90:	4770      	bx	lr
 8005d92:	bf00      	nop
 8005d94:	e000ed00 	.word	0xe000ed00

08005d98 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8005d98:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8005d9a:	4b0b      	ldr	r3, [pc, #44]	; (8005dc8 <HAL_Init+0x30>)
 8005d9c:	681a      	ldr	r2, [r3, #0]
 8005d9e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8005da2:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8005da4:	681a      	ldr	r2, [r3, #0]
 8005da6:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8005daa:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8005dac:	681a      	ldr	r2, [r3, #0]
 8005dae:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8005db2:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8005db4:	2003      	movs	r0, #3
 8005db6:	f000 f9e9 	bl	800618c <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 8005dba:	2000      	movs	r0, #0
 8005dbc:	f7fc f9c6 	bl	800214c <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8005dc0:	f7fb fef0 	bl	8001ba4 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 8005dc4:	2000      	movs	r0, #0
 8005dc6:	bd08      	pop	{r3, pc}
 8005dc8:	40023c00 	.word	0x40023c00

08005dcc <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 8005dcc:	4a03      	ldr	r2, [pc, #12]	; (8005ddc <HAL_IncTick+0x10>)
 8005dce:	4b04      	ldr	r3, [pc, #16]	; (8005de0 <HAL_IncTick+0x14>)
 8005dd0:	6811      	ldr	r1, [r2, #0]
 8005dd2:	781b      	ldrb	r3, [r3, #0]
 8005dd4:	440b      	add	r3, r1
 8005dd6:	6013      	str	r3, [r2, #0]
}
 8005dd8:	4770      	bx	lr
 8005dda:	bf00      	nop
 8005ddc:	200047e8 	.word	0x200047e8
 8005de0:	20000080 	.word	0x20000080

08005de4 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8005de4:	4b01      	ldr	r3, [pc, #4]	; (8005dec <HAL_GetTick+0x8>)
 8005de6:	6818      	ldr	r0, [r3, #0]
}
 8005de8:	4770      	bx	lr
 8005dea:	bf00      	nop
 8005dec:	200047e8 	.word	0x200047e8

08005df0 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8005df0:	b538      	push	{r3, r4, r5, lr}
 8005df2:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8005df4:	f7ff fff6 	bl	8005de4 <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8005df8:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 8005dfa:	bf1c      	itt	ne
 8005dfc:	4b05      	ldrne	r3, [pc, #20]	; (8005e14 <HAL_Delay+0x24>)
 8005dfe:	781b      	ldrbne	r3, [r3, #0]
  uint32_t tickstart = HAL_GetTick();
 8005e00:	4605      	mov	r5, r0
    wait += (uint32_t)(uwTickFreq);
 8005e02:	bf18      	it	ne
 8005e04:	18e4      	addne	r4, r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 8005e06:	f7ff ffed 	bl	8005de4 <HAL_GetTick>
 8005e0a:	1b43      	subs	r3, r0, r5
 8005e0c:	42a3      	cmp	r3, r4
 8005e0e:	d3fa      	bcc.n	8005e06 <HAL_Delay+0x16>
  {
  }
}
 8005e10:	bd38      	pop	{r3, r4, r5, pc}
 8005e12:	bf00      	nop
 8005e14:	20000080 	.word	0x20000080

08005e18 <HAL_ADC_Init>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.  
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_Init(ADC_HandleTypeDef* hadc)
{
 8005e18:	b538      	push	{r3, r4, r5, lr}
  HAL_StatusTypeDef tmp_hal_status = HAL_OK;
  
  /* Check ADC handle */
  if(hadc == NULL)
 8005e1a:	4604      	mov	r4, r0
 8005e1c:	2800      	cmp	r0, #0
 8005e1e:	f000 809b 	beq.w	8005f58 <HAL_ADC_Init+0x140>
  if(hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
  {
    assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
  }
  
  if(hadc->State == HAL_ADC_STATE_RESET)
 8005e22:	6c05      	ldr	r5, [r0, #64]	; 0x40
 8005e24:	b925      	cbnz	r5, 8005e30 <HAL_ADC_Init+0x18>

    /* Init the low level hardware */
    hadc->MspInitCallback(hadc);
#else
    /* Init the low level hardware */
    HAL_ADC_MspInit(hadc);
 8005e26:	f7fb fedd 	bl	8001be4 <HAL_ADC_MspInit>
#endif /* USE_HAL_ADC_REGISTER_CALLBACKS */

    /* Initialize ADC error code */
    ADC_CLEAR_ERRORCODE(hadc);
 8005e2a:	6465      	str	r5, [r4, #68]	; 0x44
    
    /* Allocate lock resource and initialize it */
    hadc->Lock = HAL_UNLOCKED;
 8005e2c:	f884 503c 	strb.w	r5, [r4, #60]	; 0x3c
  }
  
  /* Configuration of ADC parameters if previous preliminary actions are      */ 
  /* correctly completed.                                                     */
  if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
 8005e30:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8005e32:	06db      	lsls	r3, r3, #27
 8005e34:	f100 808e 	bmi.w	8005f54 <HAL_ADC_Init+0x13c>
  {
    /* Set ADC state */
    ADC_STATE_CLR_SET(hadc->State,
 8005e38:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8005e3a:	f423 5388 	bic.w	r3, r3, #4352	; 0x1100
 8005e3e:	f023 0302 	bic.w	r3, r3, #2
 8005e42:	f043 0302 	orr.w	r3, r3, #2
 8005e46:	6423      	str	r3, [r4, #64]	; 0x40
  /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
  /* control register)                                                    */
  tmpADC_Common = ADC_COMMON_REGISTER(hadc);
  
  /* Set the ADC clock prescaler */
  tmpADC_Common->CCR &= ~(ADC_CCR_ADCPRE);
 8005e48:	4b44      	ldr	r3, [pc, #272]	; (8005f5c <HAL_ADC_Init+0x144>)
 8005e4a:	685a      	ldr	r2, [r3, #4]
 8005e4c:	f422 3240 	bic.w	r2, r2, #196608	; 0x30000
 8005e50:	605a      	str	r2, [r3, #4]
  tmpADC_Common->CCR |=  hadc->Init.ClockPrescaler;
 8005e52:	685a      	ldr	r2, [r3, #4]
 8005e54:	6861      	ldr	r1, [r4, #4]
 8005e56:	430a      	orrs	r2, r1
 8005e58:	605a      	str	r2, [r3, #4]
  
  /* Set ADC scan mode */
  hadc->Instance->CR1 &= ~(ADC_CR1_SCAN);
 8005e5a:	6823      	ldr	r3, [r4, #0]
  hadc->Instance->CR1 |=  ADC_CR1_SCANCONV(hadc->Init.ScanConvMode);
 8005e5c:	6921      	ldr	r1, [r4, #16]
  hadc->Instance->CR1 &= ~(ADC_CR1_SCAN);
 8005e5e:	685a      	ldr	r2, [r3, #4]
 8005e60:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8005e64:	605a      	str	r2, [r3, #4]
  hadc->Instance->CR1 |=  ADC_CR1_SCANCONV(hadc->Init.ScanConvMode);
 8005e66:	685a      	ldr	r2, [r3, #4]
 8005e68:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8005e6c:	605a      	str	r2, [r3, #4]
  
  /* Set ADC resolution */
  hadc->Instance->CR1 &= ~(ADC_CR1_RES);
 8005e6e:	685a      	ldr	r2, [r3, #4]
  hadc->Instance->CR1 |=  hadc->Init.Resolution;
 8005e70:	68a1      	ldr	r1, [r4, #8]
  hadc->Instance->CR1 &= ~(ADC_CR1_RES);
 8005e72:	f022 7240 	bic.w	r2, r2, #50331648	; 0x3000000
 8005e76:	605a      	str	r2, [r3, #4]
  hadc->Instance->CR1 |=  hadc->Init.Resolution;
 8005e78:	685a      	ldr	r2, [r3, #4]
 8005e7a:	430a      	orrs	r2, r1
 8005e7c:	605a      	str	r2, [r3, #4]
  
  /* Set ADC data alignment */
  hadc->Instance->CR2 &= ~(ADC_CR2_ALIGN);
 8005e7e:	689a      	ldr	r2, [r3, #8]
  hadc->Instance->CR2 |= hadc->Init.DataAlign;
 8005e80:	68e1      	ldr	r1, [r4, #12]
  hadc->Instance->CR2 &= ~(ADC_CR2_ALIGN);
 8005e82:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8005e86:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= hadc->Init.DataAlign;
 8005e88:	689a      	ldr	r2, [r3, #8]
 8005e8a:	430a      	orrs	r2, r1
 8005e8c:	609a      	str	r2, [r3, #8]
  /* Enable external trigger if trigger selection is different of software  */
  /* start.                                                                 */
  /* Note: This configuration keeps the hardware feature of parameter       */
  /*       ExternalTrigConvEdge "trigger edge none" equivalent to           */
  /*       software start.                                                  */
  if(hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 8005e8e:	4934      	ldr	r1, [pc, #208]	; (8005f60 <HAL_ADC_Init+0x148>)
 8005e90:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8005e92:	428a      	cmp	r2, r1
 8005e94:	d052      	beq.n	8005f3c <HAL_ADC_Init+0x124>
  {
    /* Select external trigger to start conversion */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 8005e96:	6899      	ldr	r1, [r3, #8]
 8005e98:	f021 6170 	bic.w	r1, r1, #251658240	; 0xf000000
 8005e9c:	6099      	str	r1, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConv;
 8005e9e:	6899      	ldr	r1, [r3, #8]
 8005ea0:	430a      	orrs	r2, r1
 8005ea2:	609a      	str	r2, [r3, #8]
    
    /* Select external trigger polarity */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 8005ea4:	689a      	ldr	r2, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConvEdge;
 8005ea6:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 8005ea8:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 8005eac:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConvEdge;
 8005eae:	689a      	ldr	r2, [r3, #8]
 8005eb0:	430a      	orrs	r2, r1
  }
  else
  {
    /* Reset the external trigger */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 8005eb2:	609a      	str	r2, [r3, #8]
  }
  
  /* Enable or disable ADC continuous conversion mode */
  hadc->Instance->CR2 &= ~(ADC_CR2_CONT);
 8005eb4:	689a      	ldr	r2, [r3, #8]
 8005eb6:	f022 0202 	bic.w	r2, r2, #2
 8005eba:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode);
 8005ebc:	689a      	ldr	r2, [r3, #8]
 8005ebe:	7e21      	ldrb	r1, [r4, #24]
 8005ec0:	ea42 0241 	orr.w	r2, r2, r1, lsl #1
 8005ec4:	609a      	str	r2, [r3, #8]
  
  if(hadc->Init.DiscontinuousConvMode != DISABLE)
 8005ec6:	f894 2020 	ldrb.w	r2, [r4, #32]
 8005eca:	2a00      	cmp	r2, #0
 8005ecc:	d03e      	beq.n	8005f4c <HAL_ADC_Init+0x134>
  {
    assert_param(IS_ADC_REGULAR_DISC_NUMBER(hadc->Init.NbrOfDiscConversion));
  
    /* Enable the selected ADC regular discontinuous mode */
    hadc->Instance->CR1 |= (uint32_t)ADC_CR1_DISCEN;
 8005ece:	685a      	ldr	r2, [r3, #4]
    
    /* Set the number of channels to be converted in discontinuous mode */
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCNUM);
    hadc->Instance->CR1 |=  ADC_CR1_DISCONTINUOUS(hadc->Init.NbrOfDiscConversion);
 8005ed0:	6a61      	ldr	r1, [r4, #36]	; 0x24
    hadc->Instance->CR1 |= (uint32_t)ADC_CR1_DISCEN;
 8005ed2:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8005ed6:	605a      	str	r2, [r3, #4]
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCNUM);
 8005ed8:	685a      	ldr	r2, [r3, #4]
 8005eda:	f422 4260 	bic.w	r2, r2, #57344	; 0xe000
 8005ede:	605a      	str	r2, [r3, #4]
    hadc->Instance->CR1 |=  ADC_CR1_DISCONTINUOUS(hadc->Init.NbrOfDiscConversion);
 8005ee0:	685a      	ldr	r2, [r3, #4]
 8005ee2:	3901      	subs	r1, #1
 8005ee4:	ea42 3241 	orr.w	r2, r2, r1, lsl #13
  }
  else
  {
    /* Disable the selected ADC regular discontinuous mode */
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCEN);
 8005ee8:	605a      	str	r2, [r3, #4]
  }
  
  /* Set ADC number of conversion */
  hadc->Instance->SQR1 &= ~(ADC_SQR1_L);
 8005eea:	6ada      	ldr	r2, [r3, #44]	; 0x2c
  hadc->Instance->SQR1 |=  ADC_SQR1(hadc->Init.NbrOfConversion);
 8005eec:	69e1      	ldr	r1, [r4, #28]
  hadc->Instance->SQR1 &= ~(ADC_SQR1_L);
 8005eee:	f422 0270 	bic.w	r2, r2, #15728640	; 0xf00000
 8005ef2:	62da      	str	r2, [r3, #44]	; 0x2c
  hadc->Instance->SQR1 |=  ADC_SQR1(hadc->Init.NbrOfConversion);
 8005ef4:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8005ef6:	3901      	subs	r1, #1
 8005ef8:	ea42 5201 	orr.w	r2, r2, r1, lsl #20
 8005efc:	62da      	str	r2, [r3, #44]	; 0x2c
  
  /* Enable or disable ADC DMA continuous request */
  hadc->Instance->CR2 &= ~(ADC_CR2_DDS);
 8005efe:	689a      	ldr	r2, [r3, #8]
 8005f00:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8005f04:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_DMAContReq((uint32_t)hadc->Init.DMAContinuousRequests);
 8005f06:	689a      	ldr	r2, [r3, #8]
 8005f08:	f894 1030 	ldrb.w	r1, [r4, #48]	; 0x30
 8005f0c:	ea42 2241 	orr.w	r2, r2, r1, lsl #9
 8005f10:	609a      	str	r2, [r3, #8]
  
  /* Enable or disable ADC end of conversion selection */
  hadc->Instance->CR2 &= ~(ADC_CR2_EOCS);
 8005f12:	689a      	ldr	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 8005f14:	6961      	ldr	r1, [r4, #20]
  hadc->Instance->CR2 &= ~(ADC_CR2_EOCS);
 8005f16:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8005f1a:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 8005f1c:	689a      	ldr	r2, [r3, #8]
    ADC_CLEAR_ERRORCODE(hadc);
 8005f1e:	2000      	movs	r0, #0
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 8005f20:	ea42 2281 	orr.w	r2, r2, r1, lsl #10
 8005f24:	609a      	str	r2, [r3, #8]
    ADC_CLEAR_ERRORCODE(hadc);
 8005f26:	6460      	str	r0, [r4, #68]	; 0x44
    ADC_STATE_CLR_SET(hadc->State,
 8005f28:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8005f2a:	f023 0303 	bic.w	r3, r3, #3
 8005f2e:	f043 0301 	orr.w	r3, r3, #1
 8005f32:	6423      	str	r3, [r4, #64]	; 0x40
  __HAL_UNLOCK(hadc);
 8005f34:	2300      	movs	r3, #0
 8005f36:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
}
 8005f3a:	bd38      	pop	{r3, r4, r5, pc}
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 8005f3c:	689a      	ldr	r2, [r3, #8]
 8005f3e:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 8005f42:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 8005f44:	689a      	ldr	r2, [r3, #8]
 8005f46:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 8005f4a:	e7b2      	b.n	8005eb2 <HAL_ADC_Init+0x9a>
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCEN);
 8005f4c:	685a      	ldr	r2, [r3, #4]
 8005f4e:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8005f52:	e7c9      	b.n	8005ee8 <HAL_ADC_Init+0xd0>
    tmp_hal_status = HAL_ERROR;
 8005f54:	2001      	movs	r0, #1
 8005f56:	e7ed      	b.n	8005f34 <HAL_ADC_Init+0x11c>
    return HAL_ERROR;
 8005f58:	2001      	movs	r0, #1
 8005f5a:	e7ee      	b.n	8005f3a <HAL_ADC_Init+0x122>
 8005f5c:	40012300 	.word	0x40012300
 8005f60:	0f000001 	.word	0x0f000001

08005f64 <HAL_ADC_Start>:
{
 8005f64:	b082      	sub	sp, #8
  __IO uint32_t counter = 0U;
 8005f66:	2300      	movs	r3, #0
 8005f68:	9301      	str	r3, [sp, #4]
  __HAL_LOCK(hadc);
 8005f6a:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 8005f6e:	2b01      	cmp	r3, #1
 8005f70:	d060      	beq.n	8006034 <HAL_ADC_Start+0xd0>
 8005f72:	2301      	movs	r3, #1
 8005f74:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  if((hadc->Instance->CR2 & ADC_CR2_ADON) != ADC_CR2_ADON)
 8005f78:	6803      	ldr	r3, [r0, #0]
 8005f7a:	689a      	ldr	r2, [r3, #8]
 8005f7c:	07d2      	lsls	r2, r2, #31
 8005f7e:	d505      	bpl.n	8005f8c <HAL_ADC_Start+0x28>
  if(HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_ADON))
 8005f80:	689a      	ldr	r2, [r3, #8]
 8005f82:	07d1      	lsls	r1, r2, #31
 8005f84:	d414      	bmi.n	8005fb0 <HAL_ADC_Start+0x4c>
  return HAL_OK;
 8005f86:	2000      	movs	r0, #0
}
 8005f88:	b002      	add	sp, #8
 8005f8a:	4770      	bx	lr
    __HAL_ADC_ENABLE(hadc);
 8005f8c:	689a      	ldr	r2, [r3, #8]
    counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 8005f8e:	492a      	ldr	r1, [pc, #168]	; (8006038 <HAL_ADC_Start+0xd4>)
    __HAL_ADC_ENABLE(hadc);
 8005f90:	f042 0201 	orr.w	r2, r2, #1
 8005f94:	609a      	str	r2, [r3, #8]
    counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 8005f96:	4a29      	ldr	r2, [pc, #164]	; (800603c <HAL_ADC_Start+0xd8>)
 8005f98:	6812      	ldr	r2, [r2, #0]
 8005f9a:	fbb2 f2f1 	udiv	r2, r2, r1
 8005f9e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
      counter--;
 8005fa2:	9201      	str	r2, [sp, #4]
    while(counter != 0U)
 8005fa4:	9a01      	ldr	r2, [sp, #4]
 8005fa6:	2a00      	cmp	r2, #0
 8005fa8:	d0ea      	beq.n	8005f80 <HAL_ADC_Start+0x1c>
      counter--;
 8005faa:	9a01      	ldr	r2, [sp, #4]
 8005fac:	3a01      	subs	r2, #1
 8005fae:	e7f8      	b.n	8005fa2 <HAL_ADC_Start+0x3e>
    ADC_STATE_CLR_SET(hadc->State,
 8005fb0:	6c02      	ldr	r2, [r0, #64]	; 0x40
 8005fb2:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 8005fb6:	f022 0201 	bic.w	r2, r2, #1
 8005fba:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8005fbe:	6402      	str	r2, [r0, #64]	; 0x40
    if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
 8005fc0:	685a      	ldr	r2, [r3, #4]
 8005fc2:	0552      	lsls	r2, r2, #21
      ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);  
 8005fc4:	bf41      	itttt	mi
 8005fc6:	6c02      	ldrmi	r2, [r0, #64]	; 0x40
 8005fc8:	f422 5240 	bicmi.w	r2, r2, #12288	; 0x3000
 8005fcc:	f442 5280 	orrmi.w	r2, r2, #4096	; 0x1000
 8005fd0:	6402      	strmi	r2, [r0, #64]	; 0x40
    if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 8005fd2:	6c02      	ldr	r2, [r0, #64]	; 0x40
 8005fd4:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
      CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));         
 8005fd8:	bf1c      	itt	ne
 8005fda:	6c42      	ldrne	r2, [r0, #68]	; 0x44
 8005fdc:	f022 0206 	bicne.w	r2, r2, #6
      ADC_CLEAR_ERRORCODE(hadc);
 8005fe0:	6442      	str	r2, [r0, #68]	; 0x44
    __HAL_UNLOCK(hadc);
 8005fe2:	2200      	movs	r2, #0
 8005fe4:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC | ADC_FLAG_OVR);
 8005fe8:	f06f 0222 	mvn.w	r2, #34	; 0x22
 8005fec:	601a      	str	r2, [r3, #0]
    if(HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_MULTI))
 8005fee:	4a14      	ldr	r2, [pc, #80]	; (8006040 <HAL_ADC_Start+0xdc>)
 8005ff0:	6851      	ldr	r1, [r2, #4]
 8005ff2:	f011 0f1f 	tst.w	r1, #31
 8005ff6:	4913      	ldr	r1, [pc, #76]	; (8006044 <HAL_ADC_Start+0xe0>)
 8005ff8:	d119      	bne.n	800602e <HAL_ADC_Start+0xca>
      if((hadc->Instance == ADC1) || ((hadc->Instance == ADC2) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_0)) \
 8005ffa:	428b      	cmp	r3, r1
 8005ffc:	d007      	beq.n	800600e <HAL_ADC_Start+0xaa>
 8005ffe:	f501 7180 	add.w	r1, r1, #256	; 0x100
 8006002:	428b      	cmp	r3, r1
 8006004:	d10c      	bne.n	8006020 <HAL_ADC_Start+0xbc>
 8006006:	6852      	ldr	r2, [r2, #4]
 8006008:	f012 0f1f 	tst.w	r2, #31
                                  || ((hadc->Instance == ADC3) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_4)))
 800600c:	d1bb      	bne.n	8005f86 <HAL_ADC_Start+0x22>
      if((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 800600e:	6898      	ldr	r0, [r3, #8]
 8006010:	f010 5040 	ands.w	r0, r0, #805306368	; 0x30000000
 8006014:	d1b7      	bne.n	8005f86 <HAL_ADC_Start+0x22>
          hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 8006016:	689a      	ldr	r2, [r3, #8]
 8006018:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 800601c:	609a      	str	r2, [r3, #8]
 800601e:	e7b3      	b.n	8005f88 <HAL_ADC_Start+0x24>
                                  || ((hadc->Instance == ADC3) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_4)))
 8006020:	4909      	ldr	r1, [pc, #36]	; (8006048 <HAL_ADC_Start+0xe4>)
 8006022:	428b      	cmp	r3, r1
 8006024:	d1af      	bne.n	8005f86 <HAL_ADC_Start+0x22>
 8006026:	6852      	ldr	r2, [r2, #4]
 8006028:	f012 0f10 	tst.w	r2, #16
 800602c:	e7ee      	b.n	800600c <HAL_ADC_Start+0xa8>
      if((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 800602e:	428b      	cmp	r3, r1
 8006030:	d1a9      	bne.n	8005f86 <HAL_ADC_Start+0x22>
 8006032:	e7ec      	b.n	800600e <HAL_ADC_Start+0xaa>
  __HAL_LOCK(hadc);
 8006034:	2002      	movs	r0, #2
 8006036:	e7a7      	b.n	8005f88 <HAL_ADC_Start+0x24>
 8006038:	000f4240 	.word	0x000f4240
 800603c:	2000007c 	.word	0x2000007c
 8006040:	40012300 	.word	0x40012300
 8006044:	40012000 	.word	0x40012000
 8006048:	40012200 	.word	0x40012200

0800604c <HAL_ADC_GetValue>:
  return hadc->Instance->DR;
 800604c:	6803      	ldr	r3, [r0, #0]
 800604e:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
}
 8006050:	4770      	bx	lr
	...

08006054 <HAL_ADC_ConfigChannel>:
{
 8006054:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  __IO uint32_t counter = 0U;
 8006056:	2300      	movs	r3, #0
 8006058:	9301      	str	r3, [sp, #4]
  __HAL_LOCK(hadc);
 800605a:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800605e:	2b01      	cmp	r3, #1
 8006060:	d069      	beq.n	8006136 <HAL_ADC_ConfigChannel+0xe2>
 8006062:	2301      	movs	r3, #1
 8006064:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  if (sConfig->Channel > ADC_CHANNEL_9)
 8006068:	680d      	ldr	r5, [r1, #0]
    hadc->Instance->SMPR1 &= ~ADC_SMPR1(ADC_SMPR1_SMP10, sConfig->Channel);
 800606a:	6803      	ldr	r3, [r0, #0]
    hadc->Instance->SMPR1 |= ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel);
 800606c:	688e      	ldr	r6, [r1, #8]
  if (sConfig->Channel > ADC_CHANNEL_9)
 800606e:	2d09      	cmp	r5, #9
 8006070:	b2ac      	uxth	r4, r5
 8006072:	d934      	bls.n	80060de <HAL_ADC_ConfigChannel+0x8a>
    hadc->Instance->SMPR1 &= ~ADC_SMPR1(ADC_SMPR1_SMP10, sConfig->Channel);
 8006074:	eb04 0244 	add.w	r2, r4, r4, lsl #1
 8006078:	68df      	ldr	r7, [r3, #12]
 800607a:	3a1e      	subs	r2, #30
 800607c:	f04f 0c07 	mov.w	ip, #7
 8006080:	fa0c fc02 	lsl.w	ip, ip, r2
 8006084:	ea27 070c 	bic.w	r7, r7, ip
 8006088:	60df      	str	r7, [r3, #12]
    hadc->Instance->SMPR1 |= ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel);
 800608a:	68df      	ldr	r7, [r3, #12]
 800608c:	fa06 f202 	lsl.w	r2, r6, r2
 8006090:	433a      	orrs	r2, r7
 8006092:	60da      	str	r2, [r3, #12]
  if (sConfig->Rank < 7U)
 8006094:	6849      	ldr	r1, [r1, #4]
 8006096:	2906      	cmp	r1, #6
    hadc->Instance->SQR3 &= ~ADC_SQR3_RK(ADC_SQR3_SQ1, sConfig->Rank);
 8006098:	eb01 0281 	add.w	r2, r1, r1, lsl #2
  if (sConfig->Rank < 7U)
 800609c:	d82f      	bhi.n	80060fe <HAL_ADC_ConfigChannel+0xaa>
    hadc->Instance->SQR3 &= ~ADC_SQR3_RK(ADC_SQR3_SQ1, sConfig->Rank);
 800609e:	6b59      	ldr	r1, [r3, #52]	; 0x34
 80060a0:	3a05      	subs	r2, #5
 80060a2:	261f      	movs	r6, #31
 80060a4:	4096      	lsls	r6, r2
 80060a6:	ea21 0106 	bic.w	r1, r1, r6
 80060aa:	6359      	str	r1, [r3, #52]	; 0x34
    hadc->Instance->SQR3 |= ADC_SQR3_RK(sConfig->Channel, sConfig->Rank);
 80060ac:	6b59      	ldr	r1, [r3, #52]	; 0x34
 80060ae:	fa04 f202 	lsl.w	r2, r4, r2
 80060b2:	430a      	orrs	r2, r1
 80060b4:	635a      	str	r2, [r3, #52]	; 0x34
  if ((hadc->Instance == ADC1) && (sConfig->Channel == ADC_CHANNEL_VBAT))
 80060b6:	4a30      	ldr	r2, [pc, #192]	; (8006178 <HAL_ADC_ConfigChannel+0x124>)
 80060b8:	4293      	cmp	r3, r2
 80060ba:	d10a      	bne.n	80060d2 <HAL_ADC_ConfigChannel+0x7e>
 80060bc:	2d12      	cmp	r5, #18
 80060be:	d13c      	bne.n	800613a <HAL_ADC_ConfigChannel+0xe6>
      tmpADC_Common->CCR &= ~ADC_CCR_TSVREFE;
 80060c0:	4b2e      	ldr	r3, [pc, #184]	; (800617c <HAL_ADC_ConfigChannel+0x128>)
 80060c2:	685a      	ldr	r2, [r3, #4]
 80060c4:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 80060c8:	605a      	str	r2, [r3, #4]
    tmpADC_Common->CCR |= ADC_CCR_VBATE;
 80060ca:	685a      	ldr	r2, [r3, #4]
 80060cc:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 80060d0:	605a      	str	r2, [r3, #4]
  __HAL_UNLOCK(hadc);
 80060d2:	2300      	movs	r3, #0
 80060d4:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  return HAL_OK;
 80060d8:	4618      	mov	r0, r3
}
 80060da:	b003      	add	sp, #12
 80060dc:	bdf0      	pop	{r4, r5, r6, r7, pc}
    hadc->Instance->SMPR2 &= ~ADC_SMPR2(ADC_SMPR2_SMP0, sConfig->Channel);
 80060de:	691f      	ldr	r7, [r3, #16]
 80060e0:	eb05 0245 	add.w	r2, r5, r5, lsl #1
 80060e4:	f04f 0c07 	mov.w	ip, #7
 80060e8:	fa0c fc02 	lsl.w	ip, ip, r2
 80060ec:	ea27 070c 	bic.w	r7, r7, ip
 80060f0:	611f      	str	r7, [r3, #16]
    hadc->Instance->SMPR2 |= ADC_SMPR2(sConfig->SamplingTime, sConfig->Channel);
 80060f2:	691f      	ldr	r7, [r3, #16]
 80060f4:	fa06 f202 	lsl.w	r2, r6, r2
 80060f8:	433a      	orrs	r2, r7
 80060fa:	611a      	str	r2, [r3, #16]
 80060fc:	e7ca      	b.n	8006094 <HAL_ADC_ConfigChannel+0x40>
  else if (sConfig->Rank < 13U)
 80060fe:	290c      	cmp	r1, #12
 8006100:	f04f 011f 	mov.w	r1, #31
 8006104:	d80b      	bhi.n	800611e <HAL_ADC_ConfigChannel+0xca>
    hadc->Instance->SQR2 &= ~ADC_SQR2_RK(ADC_SQR2_SQ7, sConfig->Rank);
 8006106:	6b1e      	ldr	r6, [r3, #48]	; 0x30
 8006108:	3a23      	subs	r2, #35	; 0x23
 800610a:	4091      	lsls	r1, r2
 800610c:	ea26 0101 	bic.w	r1, r6, r1
 8006110:	6319      	str	r1, [r3, #48]	; 0x30
    hadc->Instance->SQR2 |= ADC_SQR2_RK(sConfig->Channel, sConfig->Rank);
 8006112:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8006114:	fa04 f202 	lsl.w	r2, r4, r2
 8006118:	430a      	orrs	r2, r1
 800611a:	631a      	str	r2, [r3, #48]	; 0x30
 800611c:	e7cb      	b.n	80060b6 <HAL_ADC_ConfigChannel+0x62>
    hadc->Instance->SQR1 &= ~ADC_SQR1_RK(ADC_SQR1_SQ13, sConfig->Rank);
 800611e:	6ade      	ldr	r6, [r3, #44]	; 0x2c
 8006120:	3a41      	subs	r2, #65	; 0x41
 8006122:	4091      	lsls	r1, r2
 8006124:	ea26 0101 	bic.w	r1, r6, r1
 8006128:	62d9      	str	r1, [r3, #44]	; 0x2c
    hadc->Instance->SQR1 |= ADC_SQR1_RK(sConfig->Channel, sConfig->Rank);
 800612a:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 800612c:	fa04 f202 	lsl.w	r2, r4, r2
 8006130:	430a      	orrs	r2, r1
 8006132:	62da      	str	r2, [r3, #44]	; 0x2c
 8006134:	e7bf      	b.n	80060b6 <HAL_ADC_ConfigChannel+0x62>
  __HAL_LOCK(hadc);
 8006136:	2002      	movs	r0, #2
 8006138:	e7cf      	b.n	80060da <HAL_ADC_ConfigChannel+0x86>
  if ((hadc->Instance == ADC1) && ((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR) || (sConfig->Channel == ADC_CHANNEL_VREFINT)))
 800613a:	4b11      	ldr	r3, [pc, #68]	; (8006180 <HAL_ADC_ConfigChannel+0x12c>)
 800613c:	429d      	cmp	r5, r3
 800613e:	d001      	beq.n	8006144 <HAL_ADC_ConfigChannel+0xf0>
 8006140:	2d11      	cmp	r5, #17
 8006142:	d1c6      	bne.n	80060d2 <HAL_ADC_ConfigChannel+0x7e>
      tmpADC_Common->CCR &= ~ADC_CCR_VBATE;
 8006144:	4b0d      	ldr	r3, [pc, #52]	; (800617c <HAL_ADC_ConfigChannel+0x128>)
 8006146:	685a      	ldr	r2, [r3, #4]
 8006148:	f422 0280 	bic.w	r2, r2, #4194304	; 0x400000
 800614c:	605a      	str	r2, [r3, #4]
    tmpADC_Common->CCR |= ADC_CCR_TSVREFE;
 800614e:	685a      	ldr	r2, [r3, #4]
 8006150:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 8006154:	605a      	str	r2, [r3, #4]
    if((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR))
 8006156:	4b0a      	ldr	r3, [pc, #40]	; (8006180 <HAL_ADC_ConfigChannel+0x12c>)
 8006158:	429d      	cmp	r5, r3
 800615a:	d1ba      	bne.n	80060d2 <HAL_ADC_ConfigChannel+0x7e>
      counter = (ADC_TEMPSENSOR_DELAY_US * (SystemCoreClock / 1000000U));
 800615c:	4b09      	ldr	r3, [pc, #36]	; (8006184 <HAL_ADC_ConfigChannel+0x130>)
 800615e:	4a0a      	ldr	r2, [pc, #40]	; (8006188 <HAL_ADC_ConfigChannel+0x134>)
 8006160:	681b      	ldr	r3, [r3, #0]
 8006162:	fbb3 f3f2 	udiv	r3, r3, r2
 8006166:	220a      	movs	r2, #10
 8006168:	4353      	muls	r3, r2
        counter--;
 800616a:	9301      	str	r3, [sp, #4]
      while(counter != 0U)
 800616c:	9b01      	ldr	r3, [sp, #4]
 800616e:	2b00      	cmp	r3, #0
 8006170:	d0af      	beq.n	80060d2 <HAL_ADC_ConfigChannel+0x7e>
        counter--;
 8006172:	9b01      	ldr	r3, [sp, #4]
 8006174:	3b01      	subs	r3, #1
 8006176:	e7f8      	b.n	800616a <HAL_ADC_ConfigChannel+0x116>
 8006178:	40012000 	.word	0x40012000
 800617c:	40012300 	.word	0x40012300
 8006180:	10000012 	.word	0x10000012
 8006184:	2000007c 	.word	0x2000007c
 8006188:	000f4240 	.word	0x000f4240

0800618c <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 800618c:	4907      	ldr	r1, [pc, #28]	; (80061ac <HAL_NVIC_SetPriorityGrouping+0x20>)
 800618e:	68ca      	ldr	r2, [r1, #12]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8006190:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8006194:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8006196:	0412      	lsls	r2, r2, #16
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8006198:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800619c:	0c12      	lsrs	r2, r2, #16
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 800619e:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 80061a0:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 80061a4:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 80061a8:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 80061aa:	4770      	bx	lr
 80061ac:	e000ed00 	.word	0xe000ed00

080061b0 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 80061b0:	4b16      	ldr	r3, [pc, #88]	; (800620c <HAL_NVIC_SetPriority+0x5c>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 80061b2:	b530      	push	{r4, r5, lr}
 80061b4:	68dc      	ldr	r4, [r3, #12]
 80061b6:	f3c4 2402 	ubfx	r4, r4, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80061ba:	f1c4 0507 	rsb	r5, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80061be:	1d23      	adds	r3, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80061c0:	2d04      	cmp	r5, #4
 80061c2:	bf28      	it	cs
 80061c4:	2504      	movcs	r5, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80061c6:	2b06      	cmp	r3, #6

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80061c8:	f04f 33ff 	mov.w	r3, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80061cc:	bf8c      	ite	hi
 80061ce:	3c03      	subhi	r4, #3
 80061d0:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80061d2:	fa03 f505 	lsl.w	r5, r3, r5
 80061d6:	ea21 0105 	bic.w	r1, r1, r5
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 80061da:	40a3      	lsls	r3, r4
 80061dc:	ea22 0203 	bic.w	r2, r2, r3
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80061e0:	40a1      	lsls	r1, r4
  if ((int32_t)(IRQn) >= 0)
 80061e2:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80061e4:	ea41 0302 	orr.w	r3, r1, r2
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80061e8:	bfac      	ite	ge
 80061ea:	f100 4060 	addge.w	r0, r0, #3758096384	; 0xe0000000
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80061ee:	4a08      	ldrlt	r2, [pc, #32]	; (8006210 <HAL_NVIC_SetPriority+0x60>)
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80061f0:	ea4f 1303 	mov.w	r3, r3, lsl #4
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80061f4:	bfb8      	it	lt
 80061f6:	f000 000f 	andlt.w	r0, r0, #15
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80061fa:	b2db      	uxtb	r3, r3
 80061fc:	bfaa      	itet	ge
 80061fe:	f500 4061 	addge.w	r0, r0, #57600	; 0xe100
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8006202:	5413      	strblt	r3, [r2, r0]
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8006204:	f880 3300 	strbge.w	r3, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 8006208:	bd30      	pop	{r4, r5, pc}
 800620a:	bf00      	nop
 800620c:	e000ed00 	.word	0xe000ed00
 8006210:	e000ed14 	.word	0xe000ed14

08006214 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8006214:	2800      	cmp	r0, #0
 8006216:	db08      	blt.n	800622a <HAL_NVIC_EnableIRQ+0x16>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8006218:	0942      	lsrs	r2, r0, #5
 800621a:	2301      	movs	r3, #1
 800621c:	f000 001f 	and.w	r0, r0, #31
 8006220:	fa03 f000 	lsl.w	r0, r3, r0
 8006224:	4b01      	ldr	r3, [pc, #4]	; (800622c <HAL_NVIC_EnableIRQ+0x18>)
 8006226:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 800622a:	4770      	bx	lr
 800622c:	e000e100 	.word	0xe000e100

08006230 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8006230:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8006232:	4604      	mov	r4, r0
 8006234:	b150      	cbz	r0, 800624c <HAL_CRC_Init+0x1c>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 8006236:	7943      	ldrb	r3, [r0, #5]
 8006238:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800623c:	b913      	cbnz	r3, 8006244 <HAL_CRC_Init+0x14>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 800623e:	7102      	strb	r2, [r0, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 8006240:	f7fb fd32 	bl	8001ca8 <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 8006244:	2301      	movs	r3, #1
 8006246:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 8006248:	2000      	movs	r0, #0
}
 800624a:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800624c:	2001      	movs	r0, #1
 800624e:	e7fc      	b.n	800624a <HAL_CRC_Init+0x1a>

08006250 <HAL_DAC_Init>:
  * @param  hdac pointer to a DAC_HandleTypeDef structure that contains
  *         the configuration information for the specified DAC.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DAC_Init(DAC_HandleTypeDef* hdac)
{ 
 8006250:	b510      	push	{r4, lr}
  /* Check DAC handle */
  if(hdac == NULL)
 8006252:	4604      	mov	r4, r0
 8006254:	b168      	cbz	r0, 8006272 <HAL_DAC_Init+0x22>
     return HAL_ERROR;
  }
  /* Check the parameters */
  assert_param(IS_DAC_ALL_INSTANCE(hdac->Instance));
  
  if(hdac->State == HAL_DAC_STATE_RESET)
 8006256:	7903      	ldrb	r3, [r0, #4]
 8006258:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800625c:	b913      	cbnz	r3, 8006264 <HAL_DAC_Init+0x14>
    {
      hdac->MspInitCallback               = HAL_DAC_MspInit;
    }
#endif /* USE_HAL_DAC_REGISTER_CALLBACKS */
    /* Allocate lock resource and initialize it */
    hdac->Lock = HAL_UNLOCKED;
 800625e:	7142      	strb	r2, [r0, #5]
#if (USE_HAL_DAC_REGISTER_CALLBACKS == 1)
    /* Init the low level hardware */
    hdac->MspInitCallback(hdac);
#else
    /* Init the low level hardware */
    HAL_DAC_MspInit(hdac);
 8006260:	f7fb fd3a 	bl	8001cd8 <HAL_DAC_MspInit>
#endif /* USE_HAL_DAC_REGISTER_CALLBACKS */
  }
  
  /* Initialize the DAC state*/
  hdac->State = HAL_DAC_STATE_BUSY;
 8006264:	2302      	movs	r3, #2
 8006266:	7123      	strb	r3, [r4, #4]
  
  /* Set DAC error code to none */
  hdac->ErrorCode = HAL_DAC_ERROR_NONE;
 8006268:	2000      	movs	r0, #0
  
  /* Initialize the DAC state*/
  hdac->State = HAL_DAC_STATE_READY;
 800626a:	2301      	movs	r3, #1
  hdac->ErrorCode = HAL_DAC_ERROR_NONE;
 800626c:	6120      	str	r0, [r4, #16]
  hdac->State = HAL_DAC_STATE_READY;
 800626e:	7123      	strb	r3, [r4, #4]
  
  /* Return function status */
  return HAL_OK;
}
 8006270:	bd10      	pop	{r4, pc}
     return HAL_ERROR;
 8006272:	2001      	movs	r0, #1
 8006274:	e7fc      	b.n	8006270 <HAL_DAC_Init+0x20>

08006276 <HAL_DAC_Start>:
  *            @arg DAC_CHANNEL_1: DAC Channel1 selected
  *            @arg DAC_CHANNEL_2: DAC Channel2 selected
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DAC_Start(DAC_HandleTypeDef* hdac, uint32_t Channel)
{
 8006276:	b510      	push	{r4, lr}
  
  /* Check the parameters */
  assert_param(IS_DAC_CHANNEL(Channel));
  
  /* Process locked */
  __HAL_LOCK(hdac);
 8006278:	7943      	ldrb	r3, [r0, #5]
 800627a:	2b01      	cmp	r3, #1
 800627c:	f04f 0302 	mov.w	r3, #2
 8006280:	d017      	beq.n	80062b2 <HAL_DAC_Start+0x3c>
  
  /* Change DAC state */
  hdac->State = HAL_DAC_STATE_BUSY;
 8006282:	7103      	strb	r3, [r0, #4]
  
  /* Enable the Peripheral */
  __HAL_DAC_ENABLE(hdac, Channel);
 8006284:	6803      	ldr	r3, [r0, #0]
 8006286:	2201      	movs	r2, #1
 8006288:	681c      	ldr	r4, [r3, #0]
 800628a:	408a      	lsls	r2, r1
 800628c:	4322      	orrs	r2, r4
 800628e:	601a      	str	r2, [r3, #0]
  
  if(Channel == DAC_CHANNEL_1)
 8006290:	b989      	cbnz	r1, 80062b6 <HAL_DAC_Start+0x40>
  {
    tmp1 = hdac->Instance->CR & DAC_CR_TEN1;
 8006292:	6819      	ldr	r1, [r3, #0]
    tmp2 = hdac->Instance->CR & DAC_CR_TSEL1;
 8006294:	681a      	ldr	r2, [r3, #0]
    /* Check if software trigger enabled */
    if((tmp1 ==  DAC_CR_TEN1) && (tmp2 ==  DAC_CR_TSEL1))
 8006296:	074c      	lsls	r4, r1, #29
 8006298:	d507      	bpl.n	80062aa <HAL_DAC_Start+0x34>
    tmp2 = hdac->Instance->CR & DAC_CR_TSEL1;
 800629a:	f002 0238 	and.w	r2, r2, #56	; 0x38
    if((tmp1 ==  DAC_CR_TEN1) && (tmp2 ==  DAC_CR_TSEL1))
 800629e:	2a38      	cmp	r2, #56	; 0x38
 80062a0:	d103      	bne.n	80062aa <HAL_DAC_Start+0x34>
    {
      /* Enable the selected DAC software conversion */
      hdac->Instance->SWTRIGR |= (uint32_t)DAC_SWTRIGR_SWTRIG1;
 80062a2:	685a      	ldr	r2, [r3, #4]
 80062a4:	f042 0201 	orr.w	r2, r2, #1
    tmp2 = hdac->Instance->CR & DAC_CR_TSEL2;    
    /* Check if software trigger enabled */
    if((tmp1 == DAC_CR_TEN2) && (tmp2 == DAC_CR_TSEL2))
    {
      /* Enable the selected DAC software conversion*/
      hdac->Instance->SWTRIGR |= (uint32_t)DAC_SWTRIGR_SWTRIG2;
 80062a8:	605a      	str	r2, [r3, #4]
    }
  }
  
  /* Change DAC state */
  hdac->State = HAL_DAC_STATE_READY;
 80062aa:	2301      	movs	r3, #1
 80062ac:	7103      	strb	r3, [r0, #4]
  
  /* Process unlocked */
  __HAL_UNLOCK(hdac);
 80062ae:	2300      	movs	r3, #0
 80062b0:	7143      	strb	r3, [r0, #5]
  __HAL_LOCK(hdac);
 80062b2:	4618      	mov	r0, r3
    
  /* Return function status */
  return HAL_OK;
}
 80062b4:	bd10      	pop	{r4, pc}
    tmp1 = hdac->Instance->CR & DAC_CR_TEN2;
 80062b6:	6819      	ldr	r1, [r3, #0]
    tmp2 = hdac->Instance->CR & DAC_CR_TSEL2;    
 80062b8:	681a      	ldr	r2, [r3, #0]
    if((tmp1 == DAC_CR_TEN2) && (tmp2 == DAC_CR_TSEL2))
 80062ba:	0349      	lsls	r1, r1, #13
 80062bc:	d5f5      	bpl.n	80062aa <HAL_DAC_Start+0x34>
    tmp2 = hdac->Instance->CR & DAC_CR_TSEL2;    
 80062be:	f402 1260 	and.w	r2, r2, #3670016	; 0x380000
    if((tmp1 == DAC_CR_TEN2) && (tmp2 == DAC_CR_TSEL2))
 80062c2:	f5b2 1f60 	cmp.w	r2, #3670016	; 0x380000
 80062c6:	d1f0      	bne.n	80062aa <HAL_DAC_Start+0x34>
      hdac->Instance->SWTRIGR |= (uint32_t)DAC_SWTRIGR_SWTRIG2;
 80062c8:	685a      	ldr	r2, [r3, #4]
 80062ca:	f042 0202 	orr.w	r2, r2, #2
 80062ce:	e7eb      	b.n	80062a8 <HAL_DAC_Start+0x32>

080062d0 <HAL_DAC_ConfigChannel>:
  *            @arg DAC_CHANNEL_1: DAC Channel1 selected
  *            @arg DAC_CHANNEL_2: DAC Channel2 selected
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DAC_ConfigChannel(DAC_HandleTypeDef* hdac, DAC_ChannelConfTypeDef* sConfig, uint32_t Channel)
{
 80062d0:	b530      	push	{r4, r5, lr}
  assert_param(IS_DAC_TRIGGER(sConfig->DAC_Trigger));
  assert_param(IS_DAC_OUTPUT_BUFFER_STATE(sConfig->DAC_OutputBuffer));
  assert_param(IS_DAC_CHANNEL(Channel));
  
  /* Process locked */
  __HAL_LOCK(hdac);
 80062d2:	7943      	ldrb	r3, [r0, #5]
 80062d4:	2b01      	cmp	r3, #1
 80062d6:	f04f 0302 	mov.w	r3, #2
 80062da:	d018      	beq.n	800630e <HAL_DAC_ConfigChannel+0x3e>
  
  /* Change DAC state */
  hdac->State = HAL_DAC_STATE_BUSY;
  
  /* Get the DAC CR value */
  tmpreg1 = hdac->Instance->CR;
 80062dc:	6804      	ldr	r4, [r0, #0]
  hdac->State = HAL_DAC_STATE_BUSY;
 80062de:	7103      	strb	r3, [r0, #4]
  tmpreg1 = hdac->Instance->CR;
 80062e0:	6823      	ldr	r3, [r4, #0]
  /* Clear BOFFx, TENx, TSELx, WAVEx and MAMPx bits */
  tmpreg1 &= ~(((uint32_t)(DAC_CR_MAMP1 | DAC_CR_WAVE1 | DAC_CR_TSEL1 | DAC_CR_TEN1 | DAC_CR_BOFF1)) << Channel);
 80062e2:	f640 75fe 	movw	r5, #4094	; 0xffe
 80062e6:	4095      	lsls	r5, r2
 80062e8:	ea23 0505 	bic.w	r5, r3, r5
  /* Configure for the selected DAC channel: buffer output, trigger */
  /* Set TSELx and TENx bits according to DAC_Trigger value */
  /* Set BOFFx bit according to DAC_OutputBuffer value */   
  tmpreg2 = (sConfig->DAC_Trigger | sConfig->DAC_OutputBuffer);
 80062ec:	e9d1 3100 	ldrd	r3, r1, [r1]
 80062f0:	430b      	orrs	r3, r1
  /* Calculate CR register value depending on DAC_Channel */
  tmpreg1 |= tmpreg2 << Channel;
 80062f2:	4093      	lsls	r3, r2
 80062f4:	432b      	orrs	r3, r5
  /* Write to DAC CR */
  hdac->Instance->CR = tmpreg1;
 80062f6:	6023      	str	r3, [r4, #0]
  /* Disable wave generation */
  hdac->Instance->CR &= ~(DAC_CR_WAVE1 << Channel);
 80062f8:	6823      	ldr	r3, [r4, #0]
 80062fa:	21c0      	movs	r1, #192	; 0xc0
 80062fc:	fa01 f202 	lsl.w	r2, r1, r2
 8006300:	ea23 0202 	bic.w	r2, r3, r2
  
  /* Change DAC state */
  hdac->State = HAL_DAC_STATE_READY;
 8006304:	2301      	movs	r3, #1
  hdac->Instance->CR &= ~(DAC_CR_WAVE1 << Channel);
 8006306:	6022      	str	r2, [r4, #0]
  hdac->State = HAL_DAC_STATE_READY;
 8006308:	7103      	strb	r3, [r0, #4]
  
  /* Process unlocked */
  __HAL_UNLOCK(hdac);
 800630a:	2300      	movs	r3, #0
 800630c:	7143      	strb	r3, [r0, #5]
  __HAL_LOCK(hdac);
 800630e:	4618      	mov	r0, r3
  
  /* Return function status */
  return HAL_OK;
}
 8006310:	bd30      	pop	{r4, r5, pc}

08006312 <HAL_DAC_SetValue>:
  *            @arg DAC_ALIGN_12B_R: 12bit right data alignment selected
  * @param  Data Data to be loaded in the selected data holding register.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DAC_SetValue(DAC_HandleTypeDef* hdac, uint32_t Channel, uint32_t Alignment, uint32_t Data)
{  
 8006312:	b513      	push	{r0, r1, r4, lr}
  /* Check the parameters */
  assert_param(IS_DAC_CHANNEL(Channel));
  assert_param(IS_DAC_ALIGN(Alignment));
  assert_param(IS_DAC_DATA(Data));
  
  tmp = (uint32_t)hdac->Instance; 
 8006314:	6800      	ldr	r0, [r0, #0]
  __IO uint32_t tmp = 0U;
 8006316:	2400      	movs	r4, #0
 8006318:	9401      	str	r4, [sp, #4]
  tmp = (uint32_t)hdac->Instance; 
 800631a:	9001      	str	r0, [sp, #4]
  if(Channel == DAC_CHANNEL_1)
 800631c:	b941      	cbnz	r1, 8006330 <HAL_DAC_SetValue+0x1e>
  {
    tmp += DAC_DHR12R1_ALIGNMENT(Alignment);
 800631e:	9901      	ldr	r1, [sp, #4]
 8006320:	3108      	adds	r1, #8
  }
  else
  {
    tmp += DAC_DHR12R2_ALIGNMENT(Alignment);
 8006322:	440a      	add	r2, r1
 8006324:	9201      	str	r2, [sp, #4]
  }

  /* Set the DAC channel1 selected data holding register */
  *(__IO uint32_t *) tmp = Data;
 8006326:	9a01      	ldr	r2, [sp, #4]
  
  /* Return function status */
  return HAL_OK;
}
 8006328:	2000      	movs	r0, #0
  *(__IO uint32_t *) tmp = Data;
 800632a:	6013      	str	r3, [r2, #0]
}
 800632c:	b002      	add	sp, #8
 800632e:	bd10      	pop	{r4, pc}
    tmp += DAC_DHR12R2_ALIGNMENT(Alignment);
 8006330:	9901      	ldr	r1, [sp, #4]
 8006332:	3114      	adds	r1, #20
 8006334:	e7f5      	b.n	8006322 <HAL_DAC_SetValue+0x10>

08006336 <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 8006336:	b510      	push	{r4, lr}
  /* Check the DMA2D peripheral state */
  if(hdma2d == NULL)
 8006338:	4604      	mov	r4, r0
 800633a:	b330      	cbz	r0, 800638a <HAL_DMA2D_Init+0x54>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if(hdma2d->State == HAL_DMA2D_STATE_RESET)
 800633c:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 8006340:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8006344:	b91b      	cbnz	r3, 800634e <HAL_DMA2D_Init+0x18>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 8006346:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 800634a:	f7fb fcf7 	bl	8001d3c <HAL_DMA2D_MspInit>

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 800634e:	6822      	ldr	r2, [r4, #0]
 8006350:	6861      	ldr	r1, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8006352:	2302      	movs	r3, #2
 8006354:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8006358:	6813      	ldr	r3, [r2, #0]
 800635a:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 800635e:	430b      	orrs	r3, r1
 8006360:	6013      	str	r3, [r2, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 8006362:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8006364:	68a1      	ldr	r1, [r4, #8]
 8006366:	f023 0307 	bic.w	r3, r3, #7
 800636a:	430b      	orrs	r3, r1
 800636c:	6353      	str	r3, [r2, #52]	; 0x34

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 800636e:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8006370:	68e1      	ldr	r1, [r4, #12]
 8006372:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 8006376:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 800637a:	430b      	orrs	r3, r1
 800637c:	6413      	str	r3, [r2, #64]	; 0x40


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 800637e:	2000      	movs	r0, #0

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8006380:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8006382:	63e0      	str	r0, [r4, #60]	; 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8006384:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

  return HAL_OK;
}
 8006388:	bd10      	pop	{r4, pc}
     return HAL_ERROR;
 800638a:	2001      	movs	r0, #1
 800638c:	e7fc      	b.n	8006388 <HAL_DMA2D_Init+0x52>

0800638e <HAL_DMA2D_LineEventCallback>:
 800638e:	4770      	bx	lr

08006390 <HAL_DMA2D_CLUTLoadingCpltCallback>:
 8006390:	4770      	bx	lr

08006392 <HAL_DMA2D_IRQHandler>:
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
void HAL_DMA2D_IRQHandler(DMA2D_HandleTypeDef *hdma2d)
{
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8006392:	6803      	ldr	r3, [r0, #0]
{
 8006394:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8006396:	685e      	ldr	r6, [r3, #4]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 8006398:	681d      	ldr	r5, [r3, #0]

  /* Transfer Error Interrupt management ***************************************/
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 800639a:	07f2      	lsls	r2, r6, #31
{
 800639c:	4604      	mov	r4, r0
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 800639e:	d514      	bpl.n	80063ca <HAL_DMA2D_IRQHandler+0x38>
  {
    if ((crflags & DMA2D_IT_TE) != 0U)
 80063a0:	05e9      	lsls	r1, r5, #23
 80063a2:	d512      	bpl.n	80063ca <HAL_DMA2D_IRQHandler+0x38>
    {
      /* Disable the transfer Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 80063a4:	681a      	ldr	r2, [r3, #0]
 80063a6:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 80063aa:	601a      	str	r2, [r3, #0]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 80063ac:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 80063ae:	f042 0201 	orr.w	r2, r2, #1
 80063b2:	63c2      	str	r2, [r0, #60]	; 0x3c

      /* Clear the transfer error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 80063b4:	2201      	movs	r2, #1
 80063b6:	609a      	str	r2, [r3, #8]

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 80063b8:	2304      	movs	r3, #4
 80063ba:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 80063be:	2300      	movs	r3, #0
 80063c0:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38

      if(hdma2d->XferErrorCallback != NULL)
 80063c4:	6943      	ldr	r3, [r0, #20]
 80063c6:	b103      	cbz	r3, 80063ca <HAL_DMA2D_IRQHandler+0x38>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 80063c8:	4798      	blx	r3
      }
    }
  }
  /* Configuration Error Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 80063ca:	06b2      	lsls	r2, r6, #26
 80063cc:	d516      	bpl.n	80063fc <HAL_DMA2D_IRQHandler+0x6a>
  {
    if ((crflags & DMA2D_IT_CE) != 0U)
 80063ce:	04ab      	lsls	r3, r5, #18
 80063d0:	d514      	bpl.n	80063fc <HAL_DMA2D_IRQHandler+0x6a>
    {
      /* Disable the Configuration Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 80063d2:	6823      	ldr	r3, [r4, #0]
 80063d4:	681a      	ldr	r2, [r3, #0]
 80063d6:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 80063da:	601a      	str	r2, [r3, #0]

      /* Clear the Configuration error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 80063dc:	2220      	movs	r2, #32
 80063de:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 80063e0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80063e2:	f043 0302 	orr.w	r3, r3, #2
 80063e6:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 80063e8:	2304      	movs	r3, #4
 80063ea:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 80063ee:	2300      	movs	r3, #0
 80063f0:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if(hdma2d->XferErrorCallback != NULL)
 80063f4:	6963      	ldr	r3, [r4, #20]
 80063f6:	b10b      	cbz	r3, 80063fc <HAL_DMA2D_IRQHandler+0x6a>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 80063f8:	4620      	mov	r0, r4
 80063fa:	4798      	blx	r3
      }
    }
  }
  /* CLUT access Error Interrupt management ***********************************/
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 80063fc:	0730      	lsls	r0, r6, #28
 80063fe:	d516      	bpl.n	800642e <HAL_DMA2D_IRQHandler+0x9c>
  {
    if ((crflags & DMA2D_IT_CAE) != 0U)
 8006400:	0529      	lsls	r1, r5, #20
 8006402:	d514      	bpl.n	800642e <HAL_DMA2D_IRQHandler+0x9c>
    {
      /* Disable the CLUT access error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 8006404:	6823      	ldr	r3, [r4, #0]
 8006406:	681a      	ldr	r2, [r3, #0]
 8006408:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800640c:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT access error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 800640e:	2208      	movs	r2, #8
 8006410:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 8006412:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8006414:	f043 0304 	orr.w	r3, r3, #4
 8006418:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 800641a:	2304      	movs	r3, #4
 800641c:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8006420:	2300      	movs	r3, #0
 8006422:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if(hdma2d->XferErrorCallback != NULL)
 8006426:	6963      	ldr	r3, [r4, #20]
 8006428:	b10b      	cbz	r3, 800642e <HAL_DMA2D_IRQHandler+0x9c>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 800642a:	4620      	mov	r0, r4
 800642c:	4798      	blx	r3
      }
    }
  }
  /* Transfer watermark Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 800642e:	0772      	lsls	r2, r6, #29
 8006430:	d50b      	bpl.n	800644a <HAL_DMA2D_IRQHandler+0xb8>
  {
    if ((crflags & DMA2D_IT_TW) != 0U)
 8006432:	056b      	lsls	r3, r5, #21
 8006434:	d509      	bpl.n	800644a <HAL_DMA2D_IRQHandler+0xb8>
    {
      /* Disable the transfer watermark interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 8006436:	6823      	ldr	r3, [r4, #0]
 8006438:	681a      	ldr	r2, [r3, #0]
 800643a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800643e:	601a      	str	r2, [r3, #0]

      /* Clear the transfer watermark flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 8006440:	2204      	movs	r2, #4
 8006442:	609a      	str	r2, [r3, #8]

      /* Transfer watermark Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->LineEventCallback(hdma2d);
#else
      HAL_DMA2D_LineEventCallback(hdma2d);
 8006444:	4620      	mov	r0, r4
 8006446:	f7ff ffa2 	bl	800638e <HAL_DMA2D_LineEventCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */

    }
  }
  /* Transfer Complete Interrupt management ************************************/
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 800644a:	07b0      	lsls	r0, r6, #30
 800644c:	d514      	bpl.n	8006478 <HAL_DMA2D_IRQHandler+0xe6>
  {
    if ((crflags & DMA2D_IT_TC) != 0U)
 800644e:	05a9      	lsls	r1, r5, #22
 8006450:	d512      	bpl.n	8006478 <HAL_DMA2D_IRQHandler+0xe6>
    {
      /* Disable the transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 8006452:	6823      	ldr	r3, [r4, #0]
 8006454:	681a      	ldr	r2, [r3, #0]
 8006456:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 800645a:	601a      	str	r2, [r3, #0]

      /* Clear the transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 800645c:	2202      	movs	r2, #2
 800645e:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8006460:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8006462:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8006464:	2301      	movs	r3, #1
 8006466:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 800646a:	2300      	movs	r3, #0
 800646c:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if(hdma2d->XferCpltCallback != NULL)
 8006470:	6923      	ldr	r3, [r4, #16]
 8006472:	b10b      	cbz	r3, 8006478 <HAL_DMA2D_IRQHandler+0xe6>
      {
        /* Transfer complete Callback */
        hdma2d->XferCpltCallback(hdma2d);
 8006474:	4620      	mov	r0, r4
 8006476:	4798      	blx	r3
      }
    }
  }
  /* CLUT Transfer Complete Interrupt management ******************************/
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 8006478:	06f2      	lsls	r2, r6, #27
 800647a:	d513      	bpl.n	80064a4 <HAL_DMA2D_IRQHandler+0x112>
  {
    if ((crflags & DMA2D_IT_CTC) != 0U)
 800647c:	04eb      	lsls	r3, r5, #19
 800647e:	d511      	bpl.n	80064a4 <HAL_DMA2D_IRQHandler+0x112>
    {
      /* Disable the CLUT transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 8006480:	6823      	ldr	r3, [r4, #0]
 8006482:	681a      	ldr	r2, [r3, #0]
 8006484:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8006488:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 800648a:	2210      	movs	r2, #16
 800648c:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 800648e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8006490:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8006492:	2301      	movs	r3, #1
 8006494:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8006498:	2300      	movs	r3, #0
 800649a:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      /* CLUT Transfer complete Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->CLUTLoadingCpltCallback(hdma2d);
#else
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 800649e:	4620      	mov	r0, r4
 80064a0:	f7ff ff76 	bl	8006390 <HAL_DMA2D_CLUTLoadingCpltCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
    }
  }

}
 80064a4:	bd70      	pop	{r4, r5, r6, pc}
	...

080064a8 <HAL_DMA2D_ConfigLayer>:
  *                   This parameter can be one of the following values:
  *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_ConfigLayer(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
{
 80064a8:	b5f0      	push	{r4, r5, r6, r7, lr}
      assert_param(IS_DMA2D_ALPHA_MODE(hdma2d->LayerCfg[LayerIdx].AlphaMode));
    }
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
 80064aa:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 80064ae:	2b01      	cmp	r3, #1
 80064b0:	f04f 0302 	mov.w	r3, #2
 80064b4:	d02b      	beq.n	800650e <HAL_DMA2D_ConfigLayer+0x66>
 80064b6:	2201      	movs	r2, #1

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 80064b8:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
  __HAL_LOCK(hdma2d);
 80064bc:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 80064c0:	eb00 1301 	add.w	r3, r0, r1, lsl #4
 80064c4:	e9d3 4207 	ldrd	r4, r2, [r3, #28]
 80064c8:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 80064ca:	4f18      	ldr	r7, [pc, #96]	; (800652c <HAL_DMA2D_ConfigLayer+0x84>)
 80064cc:	ea44 4202 	orr.w	r2, r4, r2, lsl #16
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 80064d0:	3c09      	subs	r4, #9
 80064d2:	2c01      	cmp	r4, #1
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 80064d4:	bf9c      	itt	ls
 80064d6:	f005 437f 	andls.w	r3, r5, #4278190080	; 0xff000000
 80064da:	431a      	orrls	r2, r3
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 80064dc:	ea4f 1601 	mov.w	r6, r1, lsl #4

  /* Configure the background DMA2D layer */
  if(LayerIdx == DMA2D_BACKGROUND_LAYER)
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 80064e0:	6803      	ldr	r3, [r0, #0]
    regValue |=  (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 80064e2:	bf88      	it	hi
 80064e4:	ea42 6205 	orrhi.w	r2, r2, r5, lsl #24
  if(LayerIdx == DMA2D_BACKGROUND_LAYER)
 80064e8:	b999      	cbnz	r1, 8006512 <HAL_DMA2D_ConfigLayer+0x6a>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 80064ea:	6a59      	ldr	r1, [r3, #36]	; 0x24
 80064ec:	4039      	ands	r1, r7
 80064ee:	430a      	orrs	r2, r1
 80064f0:	625a      	str	r2, [r3, #36]	; 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);

    /* DMA2D BGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 80064f2:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 80064f4:	6982      	ldr	r2, [r0, #24]
 80064f6:	619a      	str	r2, [r3, #24]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 80064f8:	d803      	bhi.n	8006502 <HAL_DMA2D_ConfigLayer+0x5a>
    {
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE|DMA2D_BGCOLR_GREEN|DMA2D_BGCOLR_RED));
 80064fa:	6a42      	ldr	r2, [r0, #36]	; 0x24
 80064fc:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
 8006500:	629a      	str	r2, [r3, #40]	; 0x28
    {
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE|DMA2D_FGCOLR_GREEN|DMA2D_FGCOLR_RED));
    }
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8006502:	2301      	movs	r3, #1
 8006504:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 8006508:	2300      	movs	r3, #0
 800650a:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
  __HAL_LOCK(hdma2d);
 800650e:	4618      	mov	r0, r3

  return HAL_OK;
}
 8006510:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8006512:	69d9      	ldr	r1, [r3, #28]
 8006514:	4039      	ands	r1, r7
 8006516:	430a      	orrs	r2, r1
 8006518:	61da      	str	r2, [r3, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 800651a:	1982      	adds	r2, r0, r6
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 800651c:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 800651e:	6992      	ldr	r2, [r2, #24]
 8006520:	611a      	str	r2, [r3, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE|DMA2D_FGCOLR_GREEN|DMA2D_FGCOLR_RED));
 8006522:	bf9c      	itt	ls
 8006524:	f025 457f 	bicls.w	r5, r5, #4278190080	; 0xff000000
 8006528:	621d      	strls	r5, [r3, #32]
 800652a:	e7ea      	b.n	8006502 <HAL_DMA2D_ConfigLayer+0x5a>
 800652c:	00fcfff0 	.word	0x00fcfff0

08006530 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8006530:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8006534:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 80066f8 <HAL_GPIO_Init+0x1c8>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8006538:	4a6d      	ldr	r2, [pc, #436]	; (80066f0 <HAL_GPIO_Init+0x1c0>)
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800653a:	f8df 91c0 	ldr.w	r9, [pc, #448]	; 80066fc <HAL_GPIO_Init+0x1cc>
  for(position = 0U; position < GPIO_NUMBER; position++)
 800653e:	2300      	movs	r3, #0
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8006540:	680d      	ldr	r5, [r1, #0]
    ioposition = 0x01U << position;
 8006542:	2401      	movs	r4, #1
 8006544:	409c      	lsls	r4, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8006546:	ea04 0605 	and.w	r6, r4, r5
    if(iocurrent == ioposition)
 800654a:	43ac      	bics	r4, r5
 800654c:	f040 80b7 	bne.w	80066be <HAL_GPIO_Init+0x18e>
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8006550:	684c      	ldr	r4, [r1, #4]
 8006552:	f024 0c10 	bic.w	ip, r4, #16
 8006556:	ea4f 0e43 	mov.w	lr, r3, lsl #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800655a:	2503      	movs	r5, #3
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 800655c:	f10c 37ff 	add.w	r7, ip, #4294967295
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8006560:	fa05 f50e 	lsl.w	r5, r5, lr
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8006564:	2f01      	cmp	r7, #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8006566:	ea6f 0505 	mvn.w	r5, r5
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 800656a:	d811      	bhi.n	8006590 <HAL_GPIO_Init+0x60>
        temp = GPIOx->OSPEEDR; 
 800656c:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800656e:	ea07 0a05 	and.w	sl, r7, r5
        temp |= (GPIO_Init->Speed << (position * 2U));
 8006572:	68cf      	ldr	r7, [r1, #12]
 8006574:	fa07 f70e 	lsl.w	r7, r7, lr
 8006578:	ea47 070a 	orr.w	r7, r7, sl
        GPIOx->OSPEEDR = temp;
 800657c:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 800657e:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8006580:	ea27 0a06 	bic.w	sl, r7, r6
        temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4U) << position);
 8006584:	f3c4 1700 	ubfx	r7, r4, #4, #1
 8006588:	409f      	lsls	r7, r3
 800658a:	ea47 070a 	orr.w	r7, r7, sl
        GPIOx->OTYPER = temp;
 800658e:	6047      	str	r7, [r0, #4]
      temp = GPIOx->PUPDR;
 8006590:	68c7      	ldr	r7, [r0, #12]
      temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 8006592:	ea07 0a05 	and.w	sl, r7, r5
      temp |= ((GPIO_Init->Pull) << (position * 2U));
 8006596:	688f      	ldr	r7, [r1, #8]
 8006598:	fa07 f70e 	lsl.w	r7, r7, lr
 800659c:	ea47 070a 	orr.w	r7, r7, sl
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 80065a0:	f1bc 0f02 	cmp.w	ip, #2
      GPIOx->PUPDR = temp;
 80065a4:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 80065a6:	d116      	bne.n	80065d6 <HAL_GPIO_Init+0xa6>
        temp = GPIOx->AFR[position >> 3U];
 80065a8:	ea4f 0ad3 	mov.w	sl, r3, lsr #3
 80065ac:	eb00 0a8a 	add.w	sl, r0, sl, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 80065b0:	f003 0b07 	and.w	fp, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 80065b4:	f8da 7020 	ldr.w	r7, [sl, #32]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 80065b8:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
 80065bc:	f04f 0c0f 	mov.w	ip, #15
 80065c0:	fa0c fc0b 	lsl.w	ip, ip, fp
 80065c4:	ea27 0c0c 	bic.w	ip, r7, ip
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 80065c8:	690f      	ldr	r7, [r1, #16]
 80065ca:	fa07 f70b 	lsl.w	r7, r7, fp
 80065ce:	ea47 070c 	orr.w	r7, r7, ip
        GPIOx->AFR[position >> 3U] = temp;
 80065d2:	f8ca 7020 	str.w	r7, [sl, #32]
      temp = GPIOx->MODER;
 80065d6:	6807      	ldr	r7, [r0, #0]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 80065d8:	403d      	ands	r5, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 80065da:	f004 0703 	and.w	r7, r4, #3
 80065de:	fa07 f70e 	lsl.w	r7, r7, lr
 80065e2:	433d      	orrs	r5, r7
      GPIOx->MODER = temp;
 80065e4:	6005      	str	r5, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 80065e6:	00e5      	lsls	r5, r4, #3
 80065e8:	d569      	bpl.n	80066be <HAL_GPIO_Init+0x18e>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80065ea:	f04f 0b00 	mov.w	fp, #0
 80065ee:	f8cd b004 	str.w	fp, [sp, #4]
 80065f2:	f8d8 7044 	ldr.w	r7, [r8, #68]	; 0x44
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 80065f6:	4d3f      	ldr	r5, [pc, #252]	; (80066f4 <HAL_GPIO_Init+0x1c4>)
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80065f8:	f447 4780 	orr.w	r7, r7, #16384	; 0x4000
 80065fc:	f8c8 7044 	str.w	r7, [r8, #68]	; 0x44
 8006600:	f8d8 7044 	ldr.w	r7, [r8, #68]	; 0x44
 8006604:	f407 4780 	and.w	r7, r7, #16384	; 0x4000
 8006608:	9701      	str	r7, [sp, #4]
 800660a:	9f01      	ldr	r7, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2U];
 800660c:	f023 0703 	bic.w	r7, r3, #3
 8006610:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 8006614:	f507 379c 	add.w	r7, r7, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8006618:	f003 0e03 	and.w	lr, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 800661c:	f8d7 a008 	ldr.w	sl, [r7, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8006620:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 8006624:	f04f 0c0f 	mov.w	ip, #15
 8006628:	fa0c fc0e 	lsl.w	ip, ip, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800662c:	42a8      	cmp	r0, r5
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800662e:	ea2a 0c0c 	bic.w	ip, sl, ip
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8006632:	d04b      	beq.n	80066cc <HAL_GPIO_Init+0x19c>
 8006634:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8006638:	42a8      	cmp	r0, r5
 800663a:	d049      	beq.n	80066d0 <HAL_GPIO_Init+0x1a0>
 800663c:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8006640:	42a8      	cmp	r0, r5
 8006642:	d047      	beq.n	80066d4 <HAL_GPIO_Init+0x1a4>
 8006644:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8006648:	42a8      	cmp	r0, r5
 800664a:	d045      	beq.n	80066d8 <HAL_GPIO_Init+0x1a8>
 800664c:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8006650:	42a8      	cmp	r0, r5
 8006652:	d043      	beq.n	80066dc <HAL_GPIO_Init+0x1ac>
 8006654:	4548      	cmp	r0, r9
 8006656:	d043      	beq.n	80066e0 <HAL_GPIO_Init+0x1b0>
 8006658:	f505 6500 	add.w	r5, r5, #2048	; 0x800
 800665c:	42a8      	cmp	r0, r5
 800665e:	d041      	beq.n	80066e4 <HAL_GPIO_Init+0x1b4>
 8006660:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8006664:	42a8      	cmp	r0, r5
 8006666:	d03f      	beq.n	80066e8 <HAL_GPIO_Init+0x1b8>
 8006668:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800666c:	42a8      	cmp	r0, r5
 800666e:	d03d      	beq.n	80066ec <HAL_GPIO_Init+0x1bc>
 8006670:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8006674:	42a8      	cmp	r0, r5
 8006676:	bf0c      	ite	eq
 8006678:	2509      	moveq	r5, #9
 800667a:	250a      	movne	r5, #10
 800667c:	fa05 f50e 	lsl.w	r5, r5, lr
 8006680:	ea45 050c 	orr.w	r5, r5, ip
        SYSCFG->EXTICR[position >> 2U] = temp;
 8006684:	60bd      	str	r5, [r7, #8]
        temp = EXTI->IMR;
 8006686:	6815      	ldr	r5, [r2, #0]
        temp &= ~((uint32_t)iocurrent);
 8006688:	43f7      	mvns	r7, r6
        if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 800668a:	f414 3f80 	tst.w	r4, #65536	; 0x10000
        temp &= ~((uint32_t)iocurrent);
 800668e:	bf0c      	ite	eq
 8006690:	403d      	andeq	r5, r7
        {
          temp |= iocurrent;
 8006692:	4335      	orrne	r5, r6
        }
        EXTI->IMR = temp;
 8006694:	6015      	str	r5, [r2, #0]

        temp = EXTI->EMR;
 8006696:	6855      	ldr	r5, [r2, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 8006698:	f414 3f00 	tst.w	r4, #131072	; 0x20000
        temp &= ~((uint32_t)iocurrent);
 800669c:	bf0c      	ite	eq
 800669e:	403d      	andeq	r5, r7
        {
          temp |= iocurrent;
 80066a0:	4335      	orrne	r5, r6
        }
        EXTI->EMR = temp;
 80066a2:	6055      	str	r5, [r2, #4]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 80066a4:	6895      	ldr	r5, [r2, #8]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 80066a6:	f414 1f80 	tst.w	r4, #1048576	; 0x100000
        temp &= ~((uint32_t)iocurrent);
 80066aa:	bf0c      	ite	eq
 80066ac:	403d      	andeq	r5, r7
        {
          temp |= iocurrent;
 80066ae:	4335      	orrne	r5, r6
        }
        EXTI->RTSR = temp;
 80066b0:	6095      	str	r5, [r2, #8]

        temp = EXTI->FTSR;
 80066b2:	68d5      	ldr	r5, [r2, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 80066b4:	02a4      	lsls	r4, r4, #10
        temp &= ~((uint32_t)iocurrent);
 80066b6:	bf54      	ite	pl
 80066b8:	403d      	andpl	r5, r7
        {
          temp |= iocurrent;
 80066ba:	4335      	orrmi	r5, r6
        }
        EXTI->FTSR = temp;
 80066bc:	60d5      	str	r5, [r2, #12]
  for(position = 0U; position < GPIO_NUMBER; position++)
 80066be:	3301      	adds	r3, #1
 80066c0:	2b10      	cmp	r3, #16
 80066c2:	f47f af3d 	bne.w	8006540 <HAL_GPIO_Init+0x10>
      }
    }
  }
}
 80066c6:	b003      	add	sp, #12
 80066c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 80066cc:	465d      	mov	r5, fp
 80066ce:	e7d5      	b.n	800667c <HAL_GPIO_Init+0x14c>
 80066d0:	2501      	movs	r5, #1
 80066d2:	e7d3      	b.n	800667c <HAL_GPIO_Init+0x14c>
 80066d4:	2502      	movs	r5, #2
 80066d6:	e7d1      	b.n	800667c <HAL_GPIO_Init+0x14c>
 80066d8:	2503      	movs	r5, #3
 80066da:	e7cf      	b.n	800667c <HAL_GPIO_Init+0x14c>
 80066dc:	2504      	movs	r5, #4
 80066de:	e7cd      	b.n	800667c <HAL_GPIO_Init+0x14c>
 80066e0:	2505      	movs	r5, #5
 80066e2:	e7cb      	b.n	800667c <HAL_GPIO_Init+0x14c>
 80066e4:	2506      	movs	r5, #6
 80066e6:	e7c9      	b.n	800667c <HAL_GPIO_Init+0x14c>
 80066e8:	2507      	movs	r5, #7
 80066ea:	e7c7      	b.n	800667c <HAL_GPIO_Init+0x14c>
 80066ec:	2508      	movs	r5, #8
 80066ee:	e7c5      	b.n	800667c <HAL_GPIO_Init+0x14c>
 80066f0:	40013c00 	.word	0x40013c00
 80066f4:	40020000 	.word	0x40020000
 80066f8:	40023800 	.word	0x40023800
 80066fc:	40021400 	.word	0x40021400

08006700 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 8006700:	b10a      	cbz	r2, 8006706 <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 8006702:	6181      	str	r1, [r0, #24]
  }
}
 8006704:	4770      	bx	lr
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 8006706:	0409      	lsls	r1, r1, #16
 8006708:	e7fb      	b.n	8006702 <HAL_GPIO_WritePin+0x2>

0800670a <I2C_IsAcknowledgeFailed>:
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800670a:	6801      	ldr	r1, [r0, #0]
 800670c:	694b      	ldr	r3, [r1, #20]
 800670e:	f413 6380 	ands.w	r3, r3, #1024	; 0x400
 8006712:	f04f 0200 	mov.w	r2, #0
 8006716:	d010      	beq.n	800673a <I2C_IsAcknowledgeFailed+0x30>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8006718:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 800671c:	614b      	str	r3, [r1, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
    hi2c->State               = HAL_I2C_STATE_READY;
 800671e:	2320      	movs	r3, #32
    hi2c->PreviousState       = I2C_STATE_NONE;
 8006720:	6302      	str	r2, [r0, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 8006722:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 8006726:	f880 203e 	strb.w	r2, [r0, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800672a:	6c03      	ldr	r3, [r0, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 800672c:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8006730:	f043 0304 	orr.w	r3, r3, #4
 8006734:	6403      	str	r3, [r0, #64]	; 0x40

    return HAL_ERROR;
 8006736:	2001      	movs	r0, #1
 8006738:	4770      	bx	lr
  }
  return HAL_OK;
 800673a:	4618      	mov	r0, r3
}
 800673c:	4770      	bx	lr

0800673e <I2C_WaitOnFlagUntilTimeout>:
{
 800673e:	e92d 46f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r9, sl, lr}
 8006742:	4606      	mov	r6, r0
 8006744:	460f      	mov	r7, r1
 8006746:	4691      	mov	r9, r2
 8006748:	461d      	mov	r5, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800674a:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 800674e:	6833      	ldr	r3, [r6, #0]
 8006750:	f1ba 0f01 	cmp.w	sl, #1
 8006754:	bf0c      	ite	eq
 8006756:	695c      	ldreq	r4, [r3, #20]
 8006758:	699c      	ldrne	r4, [r3, #24]
 800675a:	ea27 0404 	bic.w	r4, r7, r4
 800675e:	b2a4      	uxth	r4, r4
 8006760:	fab4 f484 	clz	r4, r4
 8006764:	0964      	lsrs	r4, r4, #5
 8006766:	45a1      	cmp	r9, r4
 8006768:	d001      	beq.n	800676e <I2C_WaitOnFlagUntilTimeout+0x30>
  return HAL_OK;
 800676a:	2000      	movs	r0, #0
 800676c:	e017      	b.n	800679e <I2C_WaitOnFlagUntilTimeout+0x60>
    if (Timeout != HAL_MAX_DELAY)
 800676e:	1c6a      	adds	r2, r5, #1
 8006770:	d0ee      	beq.n	8006750 <I2C_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8006772:	f7ff fb37 	bl	8005de4 <HAL_GetTick>
 8006776:	9b08      	ldr	r3, [sp, #32]
 8006778:	1ac0      	subs	r0, r0, r3
 800677a:	42a8      	cmp	r0, r5
 800677c:	d801      	bhi.n	8006782 <I2C_WaitOnFlagUntilTimeout+0x44>
 800677e:	2d00      	cmp	r5, #0
 8006780:	d1e5      	bne.n	800674e <I2C_WaitOnFlagUntilTimeout+0x10>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8006782:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8006784:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8006786:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8006788:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800678c:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8006790:	6c32      	ldr	r2, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8006792:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8006796:	f042 0220 	orr.w	r2, r2, #32
 800679a:	6432      	str	r2, [r6, #64]	; 0x40
        return HAL_ERROR;
 800679c:	2001      	movs	r0, #1
}
 800679e:	e8bd 86f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r9, sl, pc}

080067a2 <I2C_WaitOnMasterAddressFlagUntilTimeout>:
{
 80067a2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80067a6:	4604      	mov	r4, r0
 80067a8:	460f      	mov	r7, r1
 80067aa:	4616      	mov	r6, r2
 80067ac:	4698      	mov	r8, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 80067ae:	6825      	ldr	r5, [r4, #0]
 80067b0:	6968      	ldr	r0, [r5, #20]
 80067b2:	ea27 0000 	bic.w	r0, r7, r0
 80067b6:	b280      	uxth	r0, r0
 80067b8:	b1b8      	cbz	r0, 80067ea <I2C_WaitOnMasterAddressFlagUntilTimeout+0x48>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80067ba:	696b      	ldr	r3, [r5, #20]
 80067bc:	055a      	lsls	r2, r3, #21
 80067be:	d516      	bpl.n	80067ee <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4c>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80067c0:	682b      	ldr	r3, [r5, #0]
 80067c2:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80067c6:	602b      	str	r3, [r5, #0]
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80067c8:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 80067cc:	616b      	str	r3, [r5, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 80067ce:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 80067d0:	2300      	movs	r3, #0
 80067d2:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 80067d4:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 80067d8:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80067dc:	6c22      	ldr	r2, [r4, #64]	; 0x40
 80067de:	f042 0204 	orr.w	r2, r2, #4
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80067e2:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 80067e4:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        return HAL_ERROR;
 80067e8:	2001      	movs	r0, #1
}
 80067ea:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (Timeout != HAL_MAX_DELAY)
 80067ee:	1c73      	adds	r3, r6, #1
 80067f0:	d0de      	beq.n	80067b0 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80067f2:	f7ff faf7 	bl	8005de4 <HAL_GetTick>
 80067f6:	eba0 0008 	sub.w	r0, r0, r8
 80067fa:	42b0      	cmp	r0, r6
 80067fc:	d801      	bhi.n	8006802 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x60>
 80067fe:	2e00      	cmp	r6, #0
 8006800:	d1d5      	bne.n	80067ae <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
        hi2c->PreviousState       = I2C_STATE_NONE;
 8006802:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 8006804:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8006806:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8006808:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 800680c:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8006810:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8006812:	f042 0220 	orr.w	r2, r2, #32
 8006816:	e7e4      	b.n	80067e2 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x40>

08006818 <I2C_WaitOnRXNEFlagUntilTimeout>:
{
 8006818:	b570      	push	{r4, r5, r6, lr}
 800681a:	4604      	mov	r4, r0
 800681c:	460d      	mov	r5, r1
 800681e:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8006820:	6821      	ldr	r1, [r4, #0]
 8006822:	694b      	ldr	r3, [r1, #20]
 8006824:	f013 0340 	ands.w	r3, r3, #64	; 0x40
 8006828:	d001      	beq.n	800682e <I2C_WaitOnRXNEFlagUntilTimeout+0x16>
  return HAL_OK;
 800682a:	2000      	movs	r0, #0
 800682c:	e010      	b.n	8006850 <I2C_WaitOnRXNEFlagUntilTimeout+0x38>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800682e:	694a      	ldr	r2, [r1, #20]
 8006830:	06d2      	lsls	r2, r2, #27
 8006832:	d50e      	bpl.n	8006852 <I2C_WaitOnRXNEFlagUntilTimeout+0x3a>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8006834:	f06f 0210 	mvn.w	r2, #16
 8006838:	614a      	str	r2, [r1, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 800683a:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 800683c:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800683e:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8006842:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 8006846:	6c22      	ldr	r2, [r4, #64]	; 0x40
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8006848:	6422      	str	r2, [r4, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 800684a:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
      return HAL_ERROR;
 800684e:	2001      	movs	r0, #1
}
 8006850:	bd70      	pop	{r4, r5, r6, pc}
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8006852:	f7ff fac7 	bl	8005de4 <HAL_GetTick>
 8006856:	1b80      	subs	r0, r0, r6
 8006858:	42a8      	cmp	r0, r5
 800685a:	d801      	bhi.n	8006860 <I2C_WaitOnRXNEFlagUntilTimeout+0x48>
 800685c:	2d00      	cmp	r5, #0
 800685e:	d1df      	bne.n	8006820 <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
      hi2c->PreviousState       = I2C_STATE_NONE;
 8006860:	2300      	movs	r3, #0
      hi2c->State               = HAL_I2C_STATE_READY;
 8006862:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8006864:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8006866:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800686a:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800686e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8006870:	f042 0220 	orr.w	r2, r2, #32
 8006874:	e7e8      	b.n	8006848 <I2C_WaitOnRXNEFlagUntilTimeout+0x30>

08006876 <I2C_WaitOnBTFFlagUntilTimeout>:
{
 8006876:	b570      	push	{r4, r5, r6, lr}
 8006878:	4604      	mov	r4, r0
 800687a:	460d      	mov	r5, r1
 800687c:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800687e:	6823      	ldr	r3, [r4, #0]
 8006880:	695b      	ldr	r3, [r3, #20]
 8006882:	075b      	lsls	r3, r3, #29
 8006884:	d501      	bpl.n	800688a <I2C_WaitOnBTFFlagUntilTimeout+0x14>
  return HAL_OK;
 8006886:	2000      	movs	r0, #0
}
 8006888:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 800688a:	4620      	mov	r0, r4
 800688c:	f7ff ff3d 	bl	800670a <I2C_IsAcknowledgeFailed>
 8006890:	b9a8      	cbnz	r0, 80068be <I2C_WaitOnBTFFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 8006892:	1c6a      	adds	r2, r5, #1
 8006894:	d0f3      	beq.n	800687e <I2C_WaitOnBTFFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8006896:	f7ff faa5 	bl	8005de4 <HAL_GetTick>
 800689a:	1b80      	subs	r0, r0, r6
 800689c:	42a8      	cmp	r0, r5
 800689e:	d801      	bhi.n	80068a4 <I2C_WaitOnBTFFlagUntilTimeout+0x2e>
 80068a0:	2d00      	cmp	r5, #0
 80068a2:	d1ec      	bne.n	800687e <I2C_WaitOnBTFFlagUntilTimeout+0x8>
        hi2c->PreviousState       = I2C_STATE_NONE;
 80068a4:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 80068a6:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 80068a8:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 80068aa:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 80068ae:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80068b2:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 80068b4:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80068b8:	f042 0220 	orr.w	r2, r2, #32
 80068bc:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 80068be:	2001      	movs	r0, #1
 80068c0:	e7e2      	b.n	8006888 <I2C_WaitOnBTFFlagUntilTimeout+0x12>

080068c2 <I2C_WaitOnTXEFlagUntilTimeout>:
{
 80068c2:	b570      	push	{r4, r5, r6, lr}
 80068c4:	4604      	mov	r4, r0
 80068c6:	460d      	mov	r5, r1
 80068c8:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80068ca:	6823      	ldr	r3, [r4, #0]
 80068cc:	695b      	ldr	r3, [r3, #20]
 80068ce:	061b      	lsls	r3, r3, #24
 80068d0:	d501      	bpl.n	80068d6 <I2C_WaitOnTXEFlagUntilTimeout+0x14>
  return HAL_OK;
 80068d2:	2000      	movs	r0, #0
}
 80068d4:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 80068d6:	4620      	mov	r0, r4
 80068d8:	f7ff ff17 	bl	800670a <I2C_IsAcknowledgeFailed>
 80068dc:	b9a8      	cbnz	r0, 800690a <I2C_WaitOnTXEFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 80068de:	1c6a      	adds	r2, r5, #1
 80068e0:	d0f3      	beq.n	80068ca <I2C_WaitOnTXEFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80068e2:	f7ff fa7f 	bl	8005de4 <HAL_GetTick>
 80068e6:	1b80      	subs	r0, r0, r6
 80068e8:	42a8      	cmp	r0, r5
 80068ea:	d801      	bhi.n	80068f0 <I2C_WaitOnTXEFlagUntilTimeout+0x2e>
 80068ec:	2d00      	cmp	r5, #0
 80068ee:	d1ec      	bne.n	80068ca <I2C_WaitOnTXEFlagUntilTimeout+0x8>
        hi2c->PreviousState       = I2C_STATE_NONE;
 80068f0:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 80068f2:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 80068f4:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 80068f6:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 80068fa:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80068fe:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8006900:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8006904:	f042 0220 	orr.w	r2, r2, #32
 8006908:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 800690a:	2001      	movs	r0, #1
 800690c:	e7e2      	b.n	80068d4 <I2C_WaitOnTXEFlagUntilTimeout+0x12>
	...

08006910 <I2C_RequestMemoryWrite>:
{
 8006910:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8006914:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8006916:	6802      	ldr	r2, [r0, #0]
{
 8006918:	b085      	sub	sp, #20
 800691a:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
 800691e:	4699      	mov	r9, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8006920:	6813      	ldr	r3, [r2, #0]
 8006922:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8006926:	6013      	str	r3, [r2, #0]
{
 8006928:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800692a:	463b      	mov	r3, r7
 800692c:	f8cd 8000 	str.w	r8, [sp]
 8006930:	2200      	movs	r2, #0
 8006932:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 8006936:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8006938:	f7ff ff01 	bl	800673e <I2C_WaitOnFlagUntilTimeout>
 800693c:	6823      	ldr	r3, [r4, #0]
 800693e:	b138      	cbz	r0, 8006950 <I2C_RequestMemoryWrite+0x40>
    if (hi2c->Instance->CR1 & I2C_CR1_START)
 8006940:	681b      	ldr	r3, [r3, #0]
 8006942:	05db      	lsls	r3, r3, #23
 8006944:	d502      	bpl.n	800694c <I2C_RequestMemoryWrite+0x3c>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8006946:	f44f 7300 	mov.w	r3, #512	; 0x200
 800694a:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 800694c:	2003      	movs	r0, #3
 800694e:	e00a      	b.n	8006966 <I2C_RequestMemoryWrite+0x56>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8006950:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 8006954:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8006956:	4919      	ldr	r1, [pc, #100]	; (80069bc <I2C_RequestMemoryWrite+0xac>)
 8006958:	4643      	mov	r3, r8
 800695a:	463a      	mov	r2, r7
 800695c:	4620      	mov	r0, r4
 800695e:	f7ff ff20 	bl	80067a2 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8006962:	b118      	cbz	r0, 800696c <I2C_RequestMemoryWrite+0x5c>
      return HAL_ERROR;
 8006964:	2001      	movs	r0, #1
}
 8006966:	b005      	add	sp, #20
 8006968:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800696c:	6823      	ldr	r3, [r4, #0]
 800696e:	9003      	str	r0, [sp, #12]
 8006970:	695a      	ldr	r2, [r3, #20]
 8006972:	9203      	str	r2, [sp, #12]
 8006974:	699b      	ldr	r3, [r3, #24]
 8006976:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8006978:	4642      	mov	r2, r8
 800697a:	4639      	mov	r1, r7
 800697c:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800697e:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8006980:	f7ff ff9f 	bl	80068c2 <I2C_WaitOnTXEFlagUntilTimeout>
 8006984:	b140      	cbz	r0, 8006998 <I2C_RequestMemoryWrite+0x88>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8006986:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8006988:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800698a:	bf01      	itttt	eq
 800698c:	6822      	ldreq	r2, [r4, #0]
 800698e:	6813      	ldreq	r3, [r2, #0]
 8006990:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 8006994:	6013      	streq	r3, [r2, #0]
 8006996:	e7e5      	b.n	8006964 <I2C_RequestMemoryWrite+0x54>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8006998:	f1b9 0f01 	cmp.w	r9, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800699c:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800699e:	d102      	bne.n	80069a6 <I2C_RequestMemoryWrite+0x96>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80069a0:	b2ed      	uxtb	r5, r5
 80069a2:	611d      	str	r5, [r3, #16]
 80069a4:	e7df      	b.n	8006966 <I2C_RequestMemoryWrite+0x56>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 80069a6:	0a2a      	lsrs	r2, r5, #8
 80069a8:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80069aa:	4639      	mov	r1, r7
 80069ac:	4642      	mov	r2, r8
 80069ae:	4620      	mov	r0, r4
 80069b0:	f7ff ff87 	bl	80068c2 <I2C_WaitOnTXEFlagUntilTimeout>
 80069b4:	2800      	cmp	r0, #0
 80069b6:	d1e6      	bne.n	8006986 <I2C_RequestMemoryWrite+0x76>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80069b8:	6823      	ldr	r3, [r4, #0]
 80069ba:	e7f1      	b.n	80069a0 <I2C_RequestMemoryWrite+0x90>
 80069bc:	00010002 	.word	0x00010002

080069c0 <I2C_RequestMemoryRead>:
{
 80069c0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80069c4:	469a      	mov	sl, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80069c6:	6803      	ldr	r3, [r0, #0]
{
 80069c8:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80069ca:	681a      	ldr	r2, [r3, #0]
 80069cc:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 80069d0:	601a      	str	r2, [r3, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80069d2:	681a      	ldr	r2, [r3, #0]
{
 80069d4:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80069d8:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80069dc:	601a      	str	r2, [r3, #0]
{
 80069de:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 80069e0:	463b      	mov	r3, r7
 80069e2:	f8cd 8000 	str.w	r8, [sp]
 80069e6:	2200      	movs	r2, #0
 80069e8:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 80069ec:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 80069ee:	f7ff fea6 	bl	800673e <I2C_WaitOnFlagUntilTimeout>
 80069f2:	6823      	ldr	r3, [r4, #0]
 80069f4:	b148      	cbz	r0, 8006a0a <I2C_RequestMemoryRead+0x4a>
    if (hi2c->Instance->CR1 & I2C_CR1_START)
 80069f6:	681b      	ldr	r3, [r3, #0]
    if (hi2c->Instance->CR1 & I2C_CR1_START)
 80069f8:	05db      	lsls	r3, r3, #23
 80069fa:	d502      	bpl.n	8006a02 <I2C_RequestMemoryRead+0x42>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 80069fc:	f44f 7300 	mov.w	r3, #512	; 0x200
 8006a00:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 8006a02:	2003      	movs	r0, #3
}
 8006a04:	b004      	add	sp, #16
 8006a06:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8006a0a:	fa5f f986 	uxtb.w	r9, r6
 8006a0e:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 8006a12:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8006a14:	492a      	ldr	r1, [pc, #168]	; (8006ac0 <I2C_RequestMemoryRead+0x100>)
 8006a16:	4643      	mov	r3, r8
 8006a18:	463a      	mov	r2, r7
 8006a1a:	4620      	mov	r0, r4
 8006a1c:	f7ff fec1 	bl	80067a2 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8006a20:	b108      	cbz	r0, 8006a26 <I2C_RequestMemoryRead+0x66>
    return HAL_ERROR;
 8006a22:	2001      	movs	r0, #1
 8006a24:	e7ee      	b.n	8006a04 <I2C_RequestMemoryRead+0x44>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006a26:	6823      	ldr	r3, [r4, #0]
 8006a28:	9003      	str	r0, [sp, #12]
 8006a2a:	695a      	ldr	r2, [r3, #20]
 8006a2c:	9203      	str	r2, [sp, #12]
 8006a2e:	699b      	ldr	r3, [r3, #24]
 8006a30:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8006a32:	4642      	mov	r2, r8
 8006a34:	4639      	mov	r1, r7
 8006a36:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006a38:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8006a3a:	f7ff ff42 	bl	80068c2 <I2C_WaitOnTXEFlagUntilTimeout>
 8006a3e:	b140      	cbz	r0, 8006a52 <I2C_RequestMemoryRead+0x92>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8006a40:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8006a42:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8006a44:	bf01      	itttt	eq
 8006a46:	6822      	ldreq	r2, [r4, #0]
 8006a48:	6813      	ldreq	r3, [r2, #0]
 8006a4a:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 8006a4e:	6013      	streq	r3, [r2, #0]
 8006a50:	e7e7      	b.n	8006a22 <I2C_RequestMemoryRead+0x62>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8006a52:	f1ba 0f01 	cmp.w	sl, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8006a56:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8006a58:	d11a      	bne.n	8006a90 <I2C_RequestMemoryRead+0xd0>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8006a5a:	b2ed      	uxtb	r5, r5
 8006a5c:	611d      	str	r5, [r3, #16]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8006a5e:	4642      	mov	r2, r8
 8006a60:	4639      	mov	r1, r7
 8006a62:	4620      	mov	r0, r4
 8006a64:	f7ff ff2d 	bl	80068c2 <I2C_WaitOnTXEFlagUntilTimeout>
 8006a68:	2800      	cmp	r0, #0
 8006a6a:	d1e9      	bne.n	8006a40 <I2C_RequestMemoryRead+0x80>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8006a6c:	6822      	ldr	r2, [r4, #0]
 8006a6e:	6813      	ldr	r3, [r2, #0]
 8006a70:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8006a74:	6013      	str	r3, [r2, #0]
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8006a76:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8006a7a:	4602      	mov	r2, r0
 8006a7c:	f8cd 8000 	str.w	r8, [sp]
 8006a80:	463b      	mov	r3, r7
 8006a82:	4620      	mov	r0, r4
 8006a84:	f7ff fe5b 	bl	800673e <I2C_WaitOnFlagUntilTimeout>
 8006a88:	6822      	ldr	r2, [r4, #0]
 8006a8a:	b160      	cbz	r0, 8006aa6 <I2C_RequestMemoryRead+0xe6>
    if (hi2c->Instance->CR1 & I2C_CR1_START)
 8006a8c:	6813      	ldr	r3, [r2, #0]
 8006a8e:	e7b3      	b.n	80069f8 <I2C_RequestMemoryRead+0x38>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8006a90:	0a2a      	lsrs	r2, r5, #8
 8006a92:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8006a94:	4639      	mov	r1, r7
 8006a96:	4642      	mov	r2, r8
 8006a98:	4620      	mov	r0, r4
 8006a9a:	f7ff ff12 	bl	80068c2 <I2C_WaitOnTXEFlagUntilTimeout>
 8006a9e:	2800      	cmp	r0, #0
 8006aa0:	d1ce      	bne.n	8006a40 <I2C_RequestMemoryRead+0x80>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8006aa2:	6823      	ldr	r3, [r4, #0]
 8006aa4:	e7d9      	b.n	8006a5a <I2C_RequestMemoryRead+0x9a>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 8006aa6:	f049 0301 	orr.w	r3, r9, #1
 8006aaa:	6113      	str	r3, [r2, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8006aac:	4904      	ldr	r1, [pc, #16]	; (8006ac0 <I2C_RequestMemoryRead+0x100>)
 8006aae:	4643      	mov	r3, r8
 8006ab0:	463a      	mov	r2, r7
 8006ab2:	4620      	mov	r0, r4
 8006ab4:	f7ff fe75 	bl	80067a2 <I2C_WaitOnMasterAddressFlagUntilTimeout>
    return HAL_TIMEOUT;
 8006ab8:	3800      	subs	r0, #0
 8006aba:	bf18      	it	ne
 8006abc:	2001      	movne	r0, #1
 8006abe:	e7a1      	b.n	8006a04 <I2C_RequestMemoryRead+0x44>
 8006ac0:	00010002 	.word	0x00010002

08006ac4 <HAL_I2C_Init>:
{
 8006ac4:	b570      	push	{r4, r5, r6, lr}
  if (hi2c == NULL)
 8006ac6:	4604      	mov	r4, r0
 8006ac8:	b908      	cbnz	r0, 8006ace <HAL_I2C_Init+0xa>
    return HAL_ERROR;
 8006aca:	2001      	movs	r0, #1
}
 8006acc:	bd70      	pop	{r4, r5, r6, pc}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 8006ace:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8006ad2:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8006ad6:	b91b      	cbnz	r3, 8006ae0 <HAL_I2C_Init+0x1c>
    hi2c->Lock = HAL_UNLOCKED;
 8006ad8:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 8006adc:	f7fb f950 	bl	8001d80 <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 8006ae0:	2324      	movs	r3, #36	; 0x24
 8006ae2:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 8006ae6:	6823      	ldr	r3, [r4, #0]
 8006ae8:	681a      	ldr	r2, [r3, #0]
 8006aea:	f022 0201 	bic.w	r2, r2, #1
 8006aee:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 8006af0:	681a      	ldr	r2, [r3, #0]
 8006af2:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8006af6:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 8006af8:	681a      	ldr	r2, [r3, #0]
 8006afa:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8006afe:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 8006b00:	f000 fe6e 	bl	80077e0 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 8006b04:	4b3f      	ldr	r3, [pc, #252]	; (8006c04 <HAL_I2C_Init+0x140>)
 8006b06:	6865      	ldr	r5, [r4, #4]
 8006b08:	429d      	cmp	r5, r3
 8006b0a:	bf94      	ite	ls
 8006b0c:	4b3e      	ldrls	r3, [pc, #248]	; (8006c08 <HAL_I2C_Init+0x144>)
 8006b0e:	4b3f      	ldrhi	r3, [pc, #252]	; (8006c0c <HAL_I2C_Init+0x148>)
 8006b10:	4298      	cmp	r0, r3
 8006b12:	bf8c      	ite	hi
 8006b14:	2300      	movhi	r3, #0
 8006b16:	2301      	movls	r3, #1
 8006b18:	2b00      	cmp	r3, #0
 8006b1a:	d1d6      	bne.n	8006aca <HAL_I2C_Init+0x6>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8006b1c:	6822      	ldr	r2, [r4, #0]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8006b1e:	4e39      	ldr	r6, [pc, #228]	; (8006c04 <HAL_I2C_Init+0x140>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8006b20:	6853      	ldr	r3, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 8006b22:	493b      	ldr	r1, [pc, #236]	; (8006c10 <HAL_I2C_Init+0x14c>)
 8006b24:	fbb0 f1f1 	udiv	r1, r0, r1
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8006b28:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8006b2c:	430b      	orrs	r3, r1
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8006b2e:	42b5      	cmp	r5, r6
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8006b30:	6053      	str	r3, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8006b32:	bf88      	it	hi
 8006b34:	f44f 7696 	movhi.w	r6, #300	; 0x12c
 8006b38:	6a13      	ldr	r3, [r2, #32]
 8006b3a:	bf88      	it	hi
 8006b3c:	4371      	mulhi	r1, r6
 8006b3e:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8006b42:	bf84      	itt	hi
 8006b44:	f44f 767a 	movhi.w	r6, #1000	; 0x3e8
 8006b48:	fbb1 f1f6 	udivhi	r1, r1, r6
 8006b4c:	3101      	adds	r1, #1
 8006b4e:	4319      	orrs	r1, r3
 8006b50:	6211      	str	r1, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8006b52:	69d1      	ldr	r1, [r2, #28]
 8006b54:	1e43      	subs	r3, r0, #1
 8006b56:	482b      	ldr	r0, [pc, #172]	; (8006c04 <HAL_I2C_Init+0x140>)
 8006b58:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 8006b5c:	4285      	cmp	r5, r0
 8006b5e:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8006b62:	d832      	bhi.n	8006bca <HAL_I2C_Init+0x106>
 8006b64:	006d      	lsls	r5, r5, #1
 8006b66:	f640 70fc 	movw	r0, #4092	; 0xffc
 8006b6a:	fbb3 f3f5 	udiv	r3, r3, r5
 8006b6e:	3301      	adds	r3, #1
 8006b70:	4203      	tst	r3, r0
 8006b72:	d042      	beq.n	8006bfa <HAL_I2C_Init+0x136>
 8006b74:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8006b78:	430b      	orrs	r3, r1
 8006b7a:	61d3      	str	r3, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 8006b7c:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 8006b80:	6811      	ldr	r1, [r2, #0]
 8006b82:	4303      	orrs	r3, r0
 8006b84:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 8006b88:	430b      	orrs	r3, r1
 8006b8a:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 8006b8c:	6891      	ldr	r1, [r2, #8]
 8006b8e:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 8006b92:	f421 4103 	bic.w	r1, r1, #33536	; 0x8300
 8006b96:	4303      	orrs	r3, r0
 8006b98:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8006b9c:	430b      	orrs	r3, r1
 8006b9e:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 8006ba0:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 8006ba4:	68d1      	ldr	r1, [r2, #12]
 8006ba6:	4303      	orrs	r3, r0
 8006ba8:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8006bac:	430b      	orrs	r3, r1
 8006bae:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 8006bb0:	6813      	ldr	r3, [r2, #0]
 8006bb2:	f043 0301 	orr.w	r3, r3, #1
 8006bb6:	6013      	str	r3, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8006bb8:	2000      	movs	r0, #0
  hi2c->State = HAL_I2C_STATE_READY;
 8006bba:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8006bbc:	6420      	str	r0, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 8006bbe:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 8006bc2:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8006bc4:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
  return HAL_OK;
 8006bc8:	e780      	b.n	8006acc <HAL_I2C_Init+0x8>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8006bca:	68a0      	ldr	r0, [r4, #8]
 8006bcc:	b950      	cbnz	r0, 8006be4 <HAL_I2C_Init+0x120>
 8006bce:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8006bd2:	fbb3 f3f5 	udiv	r3, r3, r5
 8006bd6:	3301      	adds	r3, #1
 8006bd8:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8006bdc:	b17b      	cbz	r3, 8006bfe <HAL_I2C_Init+0x13a>
 8006bde:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8006be2:	e7c9      	b.n	8006b78 <HAL_I2C_Init+0xb4>
 8006be4:	2019      	movs	r0, #25
 8006be6:	4345      	muls	r5, r0
 8006be8:	fbb3 f3f5 	udiv	r3, r3, r5
 8006bec:	3301      	adds	r3, #1
 8006bee:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8006bf2:	b123      	cbz	r3, 8006bfe <HAL_I2C_Init+0x13a>
 8006bf4:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8006bf8:	e7be      	b.n	8006b78 <HAL_I2C_Init+0xb4>
 8006bfa:	2304      	movs	r3, #4
 8006bfc:	e7bc      	b.n	8006b78 <HAL_I2C_Init+0xb4>
 8006bfe:	2301      	movs	r3, #1
 8006c00:	e7ba      	b.n	8006b78 <HAL_I2C_Init+0xb4>
 8006c02:	bf00      	nop
 8006c04:	000186a0 	.word	0x000186a0
 8006c08:	001e847f 	.word	0x001e847f
 8006c0c:	003d08ff 	.word	0x003d08ff
 8006c10:	000f4240 	.word	0x000f4240

08006c14 <HAL_I2C_Mem_Write>:
{
 8006c14:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8006c18:	4604      	mov	r4, r0
 8006c1a:	4699      	mov	r9, r3
 8006c1c:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8006c1e:	460f      	mov	r7, r1
 8006c20:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8006c22:	f7ff f8df 	bl	8005de4 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8006c26:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8006c2a:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 8006c2c:	4605      	mov	r5, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8006c2e:	d003      	beq.n	8006c38 <HAL_I2C_Mem_Write+0x24>
    return HAL_BUSY;
 8006c30:	2002      	movs	r0, #2
}
 8006c32:	b003      	add	sp, #12
 8006c34:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8006c38:	9000      	str	r0, [sp, #0]
 8006c3a:	493c      	ldr	r1, [pc, #240]	; (8006d2c <HAL_I2C_Mem_Write+0x118>)
 8006c3c:	2319      	movs	r3, #25
 8006c3e:	2201      	movs	r2, #1
 8006c40:	4620      	mov	r0, r4
 8006c42:	f7ff fd7c 	bl	800673e <I2C_WaitOnFlagUntilTimeout>
 8006c46:	2800      	cmp	r0, #0
 8006c48:	d1f2      	bne.n	8006c30 <HAL_I2C_Mem_Write+0x1c>
    __HAL_LOCK(hi2c);
 8006c4a:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8006c4e:	2b01      	cmp	r3, #1
 8006c50:	d0ee      	beq.n	8006c30 <HAL_I2C_Mem_Write+0x1c>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8006c52:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 8006c54:	2301      	movs	r3, #1
 8006c56:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8006c5a:	6803      	ldr	r3, [r0, #0]
 8006c5c:	07d9      	lsls	r1, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 8006c5e:	bf5e      	ittt	pl
 8006c60:	6803      	ldrpl	r3, [r0, #0]
 8006c62:	f043 0301 	orrpl.w	r3, r3, #1
 8006c66:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8006c68:	6803      	ldr	r3, [r0, #0]
 8006c6a:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8006c6e:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8006c70:	2321      	movs	r3, #33	; 0x21
 8006c72:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8006c76:	2340      	movs	r3, #64	; 0x40
 8006c78:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8006c7c:	2300      	movs	r3, #0
 8006c7e:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 8006c80:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8006c82:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 8006c84:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8006c88:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8006c8a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006c8c:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8006c8e:	4b28      	ldr	r3, [pc, #160]	; (8006d30 <HAL_I2C_Mem_Write+0x11c>)
 8006c90:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8006c92:	e9cd 6500 	strd	r6, r5, [sp]
 8006c96:	464b      	mov	r3, r9
 8006c98:	4642      	mov	r2, r8
 8006c9a:	4639      	mov	r1, r7
 8006c9c:	4620      	mov	r0, r4
 8006c9e:	f7ff fe37 	bl	8006910 <I2C_RequestMemoryWrite>
 8006ca2:	2800      	cmp	r0, #0
 8006ca4:	d02a      	beq.n	8006cfc <HAL_I2C_Mem_Write+0xe8>
      return HAL_ERROR;
 8006ca6:	2001      	movs	r0, #1
 8006ca8:	e7c3      	b.n	8006c32 <HAL_I2C_Mem_Write+0x1e>
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8006caa:	f7ff fe0a 	bl	80068c2 <I2C_WaitOnTXEFlagUntilTimeout>
 8006cae:	b140      	cbz	r0, 8006cc2 <HAL_I2C_Mem_Write+0xae>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8006cb0:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8006cb2:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8006cb4:	bf01      	itttt	eq
 8006cb6:	6822      	ldreq	r2, [r4, #0]
 8006cb8:	6813      	ldreq	r3, [r2, #0]
 8006cba:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 8006cbe:	6013      	streq	r3, [r2, #0]
 8006cc0:	e7f1      	b.n	8006ca6 <HAL_I2C_Mem_Write+0x92>
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8006cc2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006cc4:	6827      	ldr	r7, [r4, #0]
 8006cc6:	461a      	mov	r2, r3
 8006cc8:	f812 1b01 	ldrb.w	r1, [r2], #1
 8006ccc:	6139      	str	r1, [r7, #16]
      hi2c->pBuffPtr++;
 8006cce:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 8006cd0:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 8006cd2:	8d21      	ldrh	r1, [r4, #40]	; 0x28
      hi2c->XferCount--;
 8006cd4:	3a01      	subs	r2, #1
 8006cd6:	b292      	uxth	r2, r2
 8006cd8:	8562      	strh	r2, [r4, #42]	; 0x2a
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8006cda:	697a      	ldr	r2, [r7, #20]
      hi2c->XferSize--;
 8006cdc:	1e48      	subs	r0, r1, #1
 8006cde:	b280      	uxth	r0, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8006ce0:	0752      	lsls	r2, r2, #29
      hi2c->XferSize--;
 8006ce2:	8520      	strh	r0, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8006ce4:	d50a      	bpl.n	8006cfc <HAL_I2C_Mem_Write+0xe8>
 8006ce6:	b148      	cbz	r0, 8006cfc <HAL_I2C_Mem_Write+0xe8>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 8006ce8:	785a      	ldrb	r2, [r3, #1]
 8006cea:	613a      	str	r2, [r7, #16]
        hi2c->pBuffPtr++;
 8006cec:	3302      	adds	r3, #2
 8006cee:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferCount--;
 8006cf0:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006cf2:	3b01      	subs	r3, #1
        hi2c->XferSize--;
 8006cf4:	3902      	subs	r1, #2
        hi2c->XferCount--;
 8006cf6:	b29b      	uxth	r3, r3
        hi2c->XferSize--;
 8006cf8:	8521      	strh	r1, [r4, #40]	; 0x28
        hi2c->XferCount--;
 8006cfa:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 8006cfc:	8d23      	ldrh	r3, [r4, #40]	; 0x28
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8006cfe:	462a      	mov	r2, r5
 8006d00:	4631      	mov	r1, r6
 8006d02:	4620      	mov	r0, r4
    while (hi2c->XferSize > 0U)
 8006d04:	2b00      	cmp	r3, #0
 8006d06:	d1d0      	bne.n	8006caa <HAL_I2C_Mem_Write+0x96>
    if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8006d08:	f7ff fdb5 	bl	8006876 <I2C_WaitOnBTFFlagUntilTimeout>
 8006d0c:	2800      	cmp	r0, #0
 8006d0e:	d1cf      	bne.n	8006cb0 <HAL_I2C_Mem_Write+0x9c>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8006d10:	6822      	ldr	r2, [r4, #0]
 8006d12:	6813      	ldr	r3, [r2, #0]
 8006d14:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8006d18:	6013      	str	r3, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 8006d1a:	2320      	movs	r3, #32
 8006d1c:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 8006d20:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8006d24:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    return HAL_OK;
 8006d28:	e783      	b.n	8006c32 <HAL_I2C_Mem_Write+0x1e>
 8006d2a:	bf00      	nop
 8006d2c:	00100002 	.word	0x00100002
 8006d30:	ffff0000 	.word	0xffff0000

08006d34 <HAL_I2C_Mem_Read>:
{
 8006d34:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8006d38:	4604      	mov	r4, r0
 8006d3a:	b087      	sub	sp, #28
 8006d3c:	4699      	mov	r9, r3
 8006d3e:	9f10      	ldr	r7, [sp, #64]	; 0x40
 8006d40:	460d      	mov	r5, r1
 8006d42:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8006d44:	f7ff f84e 	bl	8005de4 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8006d48:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8006d4c:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 8006d4e:	4606      	mov	r6, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8006d50:	d004      	beq.n	8006d5c <HAL_I2C_Mem_Read+0x28>
    return HAL_BUSY;
 8006d52:	2502      	movs	r5, #2
}
 8006d54:	4628      	mov	r0, r5
 8006d56:	b007      	add	sp, #28
 8006d58:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8006d5c:	9000      	str	r0, [sp, #0]
 8006d5e:	4976      	ldr	r1, [pc, #472]	; (8006f38 <HAL_I2C_Mem_Read+0x204>)
 8006d60:	2319      	movs	r3, #25
 8006d62:	2201      	movs	r2, #1
 8006d64:	4620      	mov	r0, r4
 8006d66:	f7ff fcea 	bl	800673e <I2C_WaitOnFlagUntilTimeout>
 8006d6a:	2800      	cmp	r0, #0
 8006d6c:	d1f1      	bne.n	8006d52 <HAL_I2C_Mem_Read+0x1e>
    __HAL_LOCK(hi2c);
 8006d6e:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8006d72:	2b01      	cmp	r3, #1
 8006d74:	d0ed      	beq.n	8006d52 <HAL_I2C_Mem_Read+0x1e>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8006d76:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 8006d78:	2301      	movs	r3, #1
 8006d7a:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8006d7e:	6803      	ldr	r3, [r0, #0]
 8006d80:	07db      	lsls	r3, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 8006d82:	bf5e      	ittt	pl
 8006d84:	6803      	ldrpl	r3, [r0, #0]
 8006d86:	f043 0301 	orrpl.w	r3, r3, #1
 8006d8a:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8006d8c:	6803      	ldr	r3, [r0, #0]
 8006d8e:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8006d92:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8006d94:	2322      	movs	r3, #34	; 0x22
 8006d96:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8006d9a:	2340      	movs	r3, #64	; 0x40
 8006d9c:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8006da0:	2300      	movs	r3, #0
 8006da2:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 8006da4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8006da6:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 8006da8:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8006dac:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8006dae:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006db0:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8006db2:	4b62      	ldr	r3, [pc, #392]	; (8006f3c <HAL_I2C_Mem_Read+0x208>)
 8006db4:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8006db6:	4629      	mov	r1, r5
 8006db8:	e9cd 7600 	strd	r7, r6, [sp]
 8006dbc:	464b      	mov	r3, r9
 8006dbe:	4642      	mov	r2, r8
 8006dc0:	4620      	mov	r0, r4
 8006dc2:	f7ff fdfd 	bl	80069c0 <I2C_RequestMemoryRead>
 8006dc6:	4605      	mov	r5, r0
 8006dc8:	b108      	cbz	r0, 8006dce <HAL_I2C_Mem_Read+0x9a>
      return HAL_ERROR;
 8006dca:	2501      	movs	r5, #1
 8006dcc:	e7c2      	b.n	8006d54 <HAL_I2C_Mem_Read+0x20>
    if (hi2c->XferSize == 0U)
 8006dce:	8d22      	ldrh	r2, [r4, #40]	; 0x28
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006dd0:	6823      	ldr	r3, [r4, #0]
    if (hi2c->XferSize == 0U)
 8006dd2:	b9b2      	cbnz	r2, 8006e02 <HAL_I2C_Mem_Read+0xce>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006dd4:	9002      	str	r0, [sp, #8]
 8006dd6:	695a      	ldr	r2, [r3, #20]
 8006dd8:	9202      	str	r2, [sp, #8]
 8006dda:	699a      	ldr	r2, [r3, #24]
 8006ddc:	9202      	str	r2, [sp, #8]
 8006dde:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8006de0:	681a      	ldr	r2, [r3, #0]
 8006de2:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8006de6:	601a      	str	r2, [r3, #0]
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8006de8:	f8df 8154 	ldr.w	r8, [pc, #340]	; 8006f40 <HAL_I2C_Mem_Read+0x20c>
    while (hi2c->XferSize > 0U)
 8006dec:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8006dee:	2b00      	cmp	r3, #0
 8006df0:	d12c      	bne.n	8006e4c <HAL_I2C_Mem_Read+0x118>
    hi2c->State = HAL_I2C_STATE_READY;
 8006df2:	2220      	movs	r2, #32
 8006df4:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 8006df8:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8006dfc:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    return HAL_OK;
 8006e00:	e7a8      	b.n	8006d54 <HAL_I2C_Mem_Read+0x20>
    else if (hi2c->XferSize == 1U)
 8006e02:	2a01      	cmp	r2, #1
 8006e04:	d10a      	bne.n	8006e1c <HAL_I2C_Mem_Read+0xe8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8006e06:	681a      	ldr	r2, [r3, #0]
 8006e08:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006e0c:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006e0e:	9003      	str	r0, [sp, #12]
 8006e10:	695a      	ldr	r2, [r3, #20]
 8006e12:	9203      	str	r2, [sp, #12]
 8006e14:	699a      	ldr	r2, [r3, #24]
 8006e16:	9203      	str	r2, [sp, #12]
 8006e18:	9a03      	ldr	r2, [sp, #12]
 8006e1a:	e7e1      	b.n	8006de0 <HAL_I2C_Mem_Read+0xac>
    else if (hi2c->XferSize == 2U)
 8006e1c:	2a02      	cmp	r2, #2
 8006e1e:	d10e      	bne.n	8006e3e <HAL_I2C_Mem_Read+0x10a>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8006e20:	681a      	ldr	r2, [r3, #0]
 8006e22:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006e26:	601a      	str	r2, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8006e28:	681a      	ldr	r2, [r3, #0]
 8006e2a:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8006e2e:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006e30:	9004      	str	r0, [sp, #16]
 8006e32:	695a      	ldr	r2, [r3, #20]
 8006e34:	9204      	str	r2, [sp, #16]
 8006e36:	699b      	ldr	r3, [r3, #24]
 8006e38:	9304      	str	r3, [sp, #16]
 8006e3a:	9b04      	ldr	r3, [sp, #16]
 8006e3c:	e7d4      	b.n	8006de8 <HAL_I2C_Mem_Read+0xb4>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006e3e:	9005      	str	r0, [sp, #20]
 8006e40:	695a      	ldr	r2, [r3, #20]
 8006e42:	9205      	str	r2, [sp, #20]
 8006e44:	699b      	ldr	r3, [r3, #24]
 8006e46:	9305      	str	r3, [sp, #20]
 8006e48:	9b05      	ldr	r3, [sp, #20]
 8006e4a:	e7cd      	b.n	8006de8 <HAL_I2C_Mem_Read+0xb4>
      if (hi2c->XferSize <= 3U)
 8006e4c:	2b03      	cmp	r3, #3
 8006e4e:	d856      	bhi.n	8006efe <HAL_I2C_Mem_Read+0x1ca>
        if (hi2c->XferSize == 1U)
 8006e50:	2b01      	cmp	r3, #1
 8006e52:	d115      	bne.n	8006e80 <HAL_I2C_Mem_Read+0x14c>
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8006e54:	4632      	mov	r2, r6
 8006e56:	4639      	mov	r1, r7
 8006e58:	4620      	mov	r0, r4
 8006e5a:	f7ff fcdd 	bl	8006818 <I2C_WaitOnRXNEFlagUntilTimeout>
 8006e5e:	2800      	cmp	r0, #0
 8006e60:	d1b3      	bne.n	8006dca <HAL_I2C_Mem_Read+0x96>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8006e62:	6823      	ldr	r3, [r4, #0]
 8006e64:	691a      	ldr	r2, [r3, #16]
 8006e66:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006e68:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8006e6a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006e6c:	3301      	adds	r3, #1
 8006e6e:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8006e70:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8006e72:	3b01      	subs	r3, #1
 8006e74:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8006e76:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006e78:	3b01      	subs	r3, #1
 8006e7a:	b29b      	uxth	r3, r3
 8006e7c:	8563      	strh	r3, [r4, #42]	; 0x2a
 8006e7e:	e7b5      	b.n	8006dec <HAL_I2C_Mem_Read+0xb8>
        else if (hi2c->XferSize == 2U)
 8006e80:	2b02      	cmp	r3, #2
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8006e82:	9600      	str	r6, [sp, #0]
 8006e84:	463b      	mov	r3, r7
 8006e86:	f04f 0200 	mov.w	r2, #0
 8006e8a:	4641      	mov	r1, r8
 8006e8c:	4620      	mov	r0, r4
        else if (hi2c->XferSize == 2U)
 8006e8e:	d119      	bne.n	8006ec4 <HAL_I2C_Mem_Read+0x190>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8006e90:	f7ff fc55 	bl	800673e <I2C_WaitOnFlagUntilTimeout>
 8006e94:	2800      	cmp	r0, #0
 8006e96:	d198      	bne.n	8006dca <HAL_I2C_Mem_Read+0x96>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8006e98:	6823      	ldr	r3, [r4, #0]
 8006e9a:	681a      	ldr	r2, [r3, #0]
 8006e9c:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8006ea0:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8006ea2:	691a      	ldr	r2, [r3, #16]
 8006ea4:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006ea6:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8006ea8:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8006eaa:	1c53      	adds	r3, r2, #1
 8006eac:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8006eae:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8006eb0:	3b01      	subs	r3, #1
 8006eb2:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8006eb4:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006eb6:	3b01      	subs	r3, #1
 8006eb8:	b29b      	uxth	r3, r3
 8006eba:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8006ebc:	6823      	ldr	r3, [r4, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8006ebe:	691b      	ldr	r3, [r3, #16]
 8006ec0:	7053      	strb	r3, [r2, #1]
 8006ec2:	e7d2      	b.n	8006e6a <HAL_I2C_Mem_Read+0x136>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8006ec4:	f7ff fc3b 	bl	800673e <I2C_WaitOnFlagUntilTimeout>
 8006ec8:	2800      	cmp	r0, #0
 8006eca:	f47f af7e 	bne.w	8006dca <HAL_I2C_Mem_Read+0x96>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8006ece:	6823      	ldr	r3, [r4, #0]
 8006ed0:	681a      	ldr	r2, [r3, #0]
 8006ed2:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006ed6:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8006ed8:	691a      	ldr	r2, [r3, #16]
 8006eda:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006edc:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8006ede:	6a63      	ldr	r3, [r4, #36]	; 0x24
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8006ee0:	9600      	str	r6, [sp, #0]
          hi2c->pBuffPtr++;
 8006ee2:	3301      	adds	r3, #1
 8006ee4:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8006ee6:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8006ee8:	3b01      	subs	r3, #1
 8006eea:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8006eec:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006eee:	3b01      	subs	r3, #1
 8006ef0:	b29b      	uxth	r3, r3
 8006ef2:	8563      	strh	r3, [r4, #42]	; 0x2a
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8006ef4:	4602      	mov	r2, r0
 8006ef6:	463b      	mov	r3, r7
 8006ef8:	4641      	mov	r1, r8
 8006efa:	4620      	mov	r0, r4
 8006efc:	e7c8      	b.n	8006e90 <HAL_I2C_Mem_Read+0x15c>
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8006efe:	4632      	mov	r2, r6
 8006f00:	4639      	mov	r1, r7
 8006f02:	4620      	mov	r0, r4
 8006f04:	f7ff fc88 	bl	8006818 <I2C_WaitOnRXNEFlagUntilTimeout>
 8006f08:	2800      	cmp	r0, #0
 8006f0a:	f47f af5e 	bne.w	8006dca <HAL_I2C_Mem_Read+0x96>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8006f0e:	6823      	ldr	r3, [r4, #0]
 8006f10:	691a      	ldr	r2, [r3, #16]
 8006f12:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006f14:	701a      	strb	r2, [r3, #0]
        hi2c->pBuffPtr++;
 8006f16:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8006f18:	1c53      	adds	r3, r2, #1
 8006f1a:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferSize--;
 8006f1c:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8006f1e:	3b01      	subs	r3, #1
 8006f20:	8523      	strh	r3, [r4, #40]	; 0x28
        hi2c->XferCount--;
 8006f22:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006f24:	3b01      	subs	r3, #1
 8006f26:	b29b      	uxth	r3, r3
 8006f28:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8006f2a:	6823      	ldr	r3, [r4, #0]
 8006f2c:	6959      	ldr	r1, [r3, #20]
 8006f2e:	0749      	lsls	r1, r1, #29
 8006f30:	f57f af5c 	bpl.w	8006dec <HAL_I2C_Mem_Read+0xb8>
 8006f34:	e7c3      	b.n	8006ebe <HAL_I2C_Mem_Read+0x18a>
 8006f36:	bf00      	nop
 8006f38:	00100002 	.word	0x00100002
 8006f3c:	ffff0000 	.word	0xffff0000
 8006f40:	00010004 	.word	0x00010004

08006f44 <HAL_I2CEx_ConfigAnalogFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  AnalogFilter new state of the Analog filter.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigAnalogFilter(I2C_HandleTypeDef *hi2c, uint32_t AnalogFilter)
{
 8006f44:	b510      	push	{r4, lr}
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8006f46:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8006f4a:	2b20      	cmp	r3, #32
 8006f4c:	b2dc      	uxtb	r4, r3
 8006f4e:	d116      	bne.n	8006f7e <HAL_I2CEx_ConfigAnalogFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;
 8006f50:	2324      	movs	r3, #36	; 0x24
 8006f52:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8006f56:	6803      	ldr	r3, [r0, #0]
 8006f58:	681a      	ldr	r2, [r3, #0]
 8006f5a:	f022 0201 	bic.w	r2, r2, #1
 8006f5e:	601a      	str	r2, [r3, #0]

    /* Reset I2Cx ANOFF bit */
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 8006f60:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8006f62:	f022 0210 	bic.w	r2, r2, #16
 8006f66:	625a      	str	r2, [r3, #36]	; 0x24

    /* Disable the analog filter */
    hi2c->Instance->FLTR |= AnalogFilter;
 8006f68:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8006f6a:	4311      	orrs	r1, r2
 8006f6c:	6259      	str	r1, [r3, #36]	; 0x24

    __HAL_I2C_ENABLE(hi2c);
 8006f6e:	681a      	ldr	r2, [r3, #0]
 8006f70:	f042 0201 	orr.w	r2, r2, #1
 8006f74:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 8006f76:	f880 403d 	strb.w	r4, [r0, #61]	; 0x3d

    return HAL_OK;
 8006f7a:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 8006f7c:	bd10      	pop	{r4, pc}
    return HAL_BUSY;
 8006f7e:	2002      	movs	r0, #2
 8006f80:	e7fc      	b.n	8006f7c <HAL_I2CEx_ConfigAnalogFilter+0x38>

08006f82 <HAL_I2CEx_ConfigDigitalFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  DigitalFilter Coefficient of digital noise filter between 0x00 and 0x0F.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigDigitalFilter(I2C_HandleTypeDef *hi2c, uint32_t DigitalFilter)
{
 8006f82:	b530      	push	{r4, r5, lr}

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8006f84:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8006f88:	2b20      	cmp	r3, #32
 8006f8a:	b2dc      	uxtb	r4, r3
 8006f8c:	d116      	bne.n	8006fbc <HAL_I2CEx_ConfigDigitalFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8006f8e:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 8006f90:	2324      	movs	r3, #36	; 0x24
 8006f92:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 8006f96:	6813      	ldr	r3, [r2, #0]
 8006f98:	f023 0301 	bic.w	r3, r3, #1
 8006f9c:	6013      	str	r3, [r2, #0]

    /* Get the old register value */
    tmpreg = hi2c->Instance->FLTR;
 8006f9e:	6a55      	ldr	r5, [r2, #36]	; 0x24

    /* Reset I2Cx DNF bit [3:0] */
    tmpreg &= ~(I2C_FLTR_DNF);
 8006fa0:	f64f 73f0 	movw	r3, #65520	; 0xfff0
 8006fa4:	402b      	ands	r3, r5

    /* Set I2Cx DNF coefficient */
    tmpreg |= DigitalFilter;
 8006fa6:	430b      	orrs	r3, r1

    /* Store the new register value */
    hi2c->Instance->FLTR = tmpreg;
 8006fa8:	b29b      	uxth	r3, r3
 8006faa:	6253      	str	r3, [r2, #36]	; 0x24

    __HAL_I2C_ENABLE(hi2c);
 8006fac:	6813      	ldr	r3, [r2, #0]
 8006fae:	f043 0301 	orr.w	r3, r3, #1
 8006fb2:	6013      	str	r3, [r2, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 8006fb4:	f880 403d 	strb.w	r4, [r0, #61]	; 0x3d

    return HAL_OK;
 8006fb8:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 8006fba:	bd30      	pop	{r4, r5, pc}
    return HAL_BUSY;
 8006fbc:	2002      	movs	r0, #2
 8006fbe:	e7fc      	b.n	8006fba <HAL_I2CEx_ConfigDigitalFilter+0x38>

08006fc0 <LTDC_SetConfig>:
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8006fc0:	6800      	ldr	r0, [r0, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8006fc2:	f8d1 c000 	ldr.w	ip, [r1]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8006fc6:	01d2      	lsls	r2, r2, #7
 8006fc8:	3284      	adds	r2, #132	; 0x84
 8006fca:	1883      	adds	r3, r0, r2
{
 8006fcc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8006fd0:	68c6      	ldr	r6, [r0, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8006fd2:	685d      	ldr	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8006fd4:	684c      	ldr	r4, [r1, #4]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 8006fd6:	f8d1 9018 	ldr.w	r9, [r1, #24]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8006fda:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
 8006fde:	605d      	str	r5, [r3, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8006fe0:	68c5      	ldr	r5, [r0, #12]
 8006fe2:	f10c 0701 	add.w	r7, ip, #1
 8006fe6:	f3c5 450b 	ubfx	r5, r5, #16, #12
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8006fea:	f3c6 460b 	ubfx	r6, r6, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8006fee:	443d      	add	r5, r7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8006ff0:	4426      	add	r6, r4
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8006ff2:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
 8006ff6:	605d      	str	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 8006ff8:	68c5      	ldr	r5, [r0, #12]
 8006ffa:	68ce      	ldr	r6, [r1, #12]
 8006ffc:	f3c5 050a 	ubfx	r5, r5, #0, #11
 8007000:	442e      	add	r6, r5
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 8007002:	689d      	ldr	r5, [r3, #8]
 8007004:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
 8007008:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800700a:	68c7      	ldr	r7, [r0, #12]
 800700c:	688d      	ldr	r5, [r1, #8]
 800700e:	f3c7 070a 	ubfx	r7, r7, #0, #11
 8007012:	3501      	adds	r5, #1
 8007014:	443d      	add	r5, r7
 8007016:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
 800701a:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800701c:	691d      	ldr	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800701e:	690e      	ldr	r6, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8007020:	f025 0507 	bic.w	r5, r5, #7
 8007024:	611d      	str	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 8007026:	f04f 0e00 	mov.w	lr, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800702a:	611e      	str	r6, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 800702c:	699d      	ldr	r5, [r3, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 800702e:	f891 7032 	ldrb.w	r7, [r1, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 8007032:	f891 8031 	ldrb.w	r8, [r1, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 8007036:	f8c3 e018 	str.w	lr, [r3, #24]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 800703a:	f891 5030 	ldrb.w	r5, [r1, #48]	; 0x30
 800703e:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
 8007042:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
 8007046:	ea45 4507 	orr.w	r5, r5, r7, lsl #16
 800704a:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 800704c:	695d      	ldr	r5, [r3, #20]
 800704e:	f025 05ff 	bic.w	r5, r5, #255	; 0xff
 8007052:	615d      	str	r5, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 8007054:	694d      	ldr	r5, [r1, #20]
 8007056:	615d      	str	r5, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 8007058:	69dd      	ldr	r5, [r3, #28]
 800705a:	f425 65e0 	bic.w	r5, r5, #1792	; 0x700
 800705e:	f025 0507 	bic.w	r5, r5, #7
 8007062:	61dd      	str	r5, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 8007064:	e9d1 5707 	ldrd	r5, r7, [r1, #28]
 8007068:	433d      	orrs	r5, r7
 800706a:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800706c:	6a9d      	ldr	r5, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800706e:	6a4d      	ldr	r5, [r1, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8007070:	f8c3 e028 	str.w	lr, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8007074:	629d      	str	r5, [r3, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 8007076:	b31e      	cbz	r6, 80070c0 <LTDC_SetConfig+0x100>
  {
    tmp = 4U;
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 8007078:	2e01      	cmp	r6, #1
 800707a:	d023      	beq.n	80070c4 <LTDC_SetConfig+0x104>
  {
    tmp = 3U;
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 800707c:	1eb5      	subs	r5, r6, #2
 800707e:	2d02      	cmp	r5, #2
 8007080:	d922      	bls.n	80070c8 <LTDC_SetConfig+0x108>
  {
    tmp = 2U;
  }
  else
  {
    tmp = 1U;
 8007082:	2e07      	cmp	r6, #7
 8007084:	bf0c      	ite	eq
 8007086:	2502      	moveq	r5, #2
 8007088:	2501      	movne	r5, #1
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800708a:	6ade      	ldr	r6, [r3, #44]	; 0x2c
 800708c:	f006 26e0 	and.w	r6, r6, #3758153728	; 0xe000e000
 8007090:	62de      	str	r6, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8007092:	eba4 040c 	sub.w	r4, r4, ip
 8007096:	6a8e      	ldr	r6, [r1, #40]	; 0x28
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8007098:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800709a:	436c      	muls	r4, r5
 800709c:	436e      	muls	r6, r5
 800709e:	3403      	adds	r4, #3
 80070a0:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
 80070a4:	62dc      	str	r4, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 80070a6:	6b1c      	ldr	r4, [r3, #48]	; 0x30
 80070a8:	f424 64ff 	bic.w	r4, r4, #2040	; 0x7f8
 80070ac:	f024 0407 	bic.w	r4, r4, #7
 80070b0:	631c      	str	r4, [r3, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 80070b2:	6319      	str	r1, [r3, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 80070b4:	5883      	ldr	r3, [r0, r2]
 80070b6:	f043 0301 	orr.w	r3, r3, #1
 80070ba:	5083      	str	r3, [r0, r2]
}
 80070bc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    tmp = 4U;
 80070c0:	2504      	movs	r5, #4
 80070c2:	e7e2      	b.n	800708a <LTDC_SetConfig+0xca>
    tmp = 3U;
 80070c4:	2503      	movs	r5, #3
 80070c6:	e7e0      	b.n	800708a <LTDC_SetConfig+0xca>
    tmp = 2U;
 80070c8:	2502      	movs	r5, #2
 80070ca:	e7de      	b.n	800708a <LTDC_SetConfig+0xca>

080070cc <HAL_LTDC_Init>:
{
 80070cc:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 80070ce:	4604      	mov	r4, r0
 80070d0:	2800      	cmp	r0, #0
 80070d2:	d063      	beq.n	800719c <HAL_LTDC_Init+0xd0>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 80070d4:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 80070d8:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80070dc:	b91b      	cbnz	r3, 80070e6 <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 80070de:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 80070e2:	f7fa fea9 	bl	8001e38 <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 80070e6:	2302      	movs	r3, #2
 80070e8:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 80070ec:	6823      	ldr	r3, [r4, #0]
 80070ee:	699a      	ldr	r2, [r3, #24]
 80070f0:	f022 4270 	bic.w	r2, r2, #4026531840	; 0xf0000000
 80070f4:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 80070f6:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 80070fa:	4302      	orrs	r2, r0
 80070fc:	68e0      	ldr	r0, [r4, #12]
 80070fe:	6999      	ldr	r1, [r3, #24]
 8007100:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 8007102:	6920      	ldr	r0, [r4, #16]
 8007104:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8007106:	430a      	orrs	r2, r1
 8007108:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800710a:	689a      	ldr	r2, [r3, #8]
 800710c:	4924      	ldr	r1, [pc, #144]	; (80071a0 <HAL_LTDC_Init+0xd4>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 800710e:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8007110:	400a      	ands	r2, r1
 8007112:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 8007114:	689a      	ldr	r2, [r3, #8]
 8007116:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800711a:	69a0      	ldr	r0, [r4, #24]
 800711c:	4302      	orrs	r2, r0
 800711e:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8007120:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 8007122:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8007124:	400a      	ands	r2, r1
 8007126:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 8007128:	68da      	ldr	r2, [r3, #12]
 800712a:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800712e:	6a20      	ldr	r0, [r4, #32]
 8007130:	4302      	orrs	r2, r0
 8007132:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8007134:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 8007136:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8007138:	400a      	ands	r2, r1
 800713a:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 800713c:	691a      	ldr	r2, [r3, #16]
 800713e:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8007142:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8007144:	4302      	orrs	r2, r0
 8007146:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 8007148:	695a      	ldr	r2, [r3, #20]
 800714a:	4011      	ands	r1, r2
 800714c:	6159      	str	r1, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800714e:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 8007150:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 8007152:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8007156:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8007158:	430a      	orrs	r2, r1
 800715a:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800715c:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 800715e:	f894 0036 	ldrb.w	r0, [r4, #54]	; 0x36
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 8007162:	f894 5035 	ldrb.w	r5, [r4, #53]	; 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8007166:	f001 417f 	and.w	r1, r1, #4278190080	; 0xff000000
 800716a:	62d9      	str	r1, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 800716c:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 800716e:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 8007172:	430a      	orrs	r2, r1
 8007174:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 8007178:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800717c:	62da      	str	r2, [r3, #44]	; 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 800717e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8007180:	f042 0206 	orr.w	r2, r2, #6
 8007184:	635a      	str	r2, [r3, #52]	; 0x34
  __HAL_LTDC_ENABLE(hltdc);
 8007186:	699a      	ldr	r2, [r3, #24]
 8007188:	f042 0201 	orr.w	r2, r2, #1
 800718c:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800718e:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 8007190:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8007192:	f8c4 00a4 	str.w	r0, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 8007196:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
}
 800719a:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 800719c:	2001      	movs	r0, #1
 800719e:	e7fc      	b.n	800719a <HAL_LTDC_Init+0xce>
 80071a0:	f000f800 	.word	0xf000f800

080071a4 <HAL_LTDC_ErrorCallback>:
 80071a4:	4770      	bx	lr

080071a6 <HAL_LTDC_ReloadEventCallback>:
 80071a6:	4770      	bx	lr

080071a8 <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 80071a8:	6803      	ldr	r3, [r0, #0]
{
 80071aa:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 80071ac:	6b9e      	ldr	r6, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 80071ae:	6b5d      	ldr	r5, [r3, #52]	; 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 80071b0:	0772      	lsls	r2, r6, #29
{
 80071b2:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 80071b4:	d514      	bpl.n	80071e0 <HAL_LTDC_IRQHandler+0x38>
 80071b6:	0769      	lsls	r1, r5, #29
 80071b8:	d512      	bpl.n	80071e0 <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 80071ba:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80071bc:	f022 0204 	bic.w	r2, r2, #4
 80071c0:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 80071c2:	2204      	movs	r2, #4
 80071c4:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 80071c6:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 80071ca:	f043 0301 	orr.w	r3, r3, #1
 80071ce:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 80071d2:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 80071d4:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 80071d8:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 80071dc:	f7ff ffe2 	bl	80071a4 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 80071e0:	07b2      	lsls	r2, r6, #30
 80071e2:	d516      	bpl.n	8007212 <HAL_LTDC_IRQHandler+0x6a>
 80071e4:	07ab      	lsls	r3, r5, #30
 80071e6:	d514      	bpl.n	8007212 <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 80071e8:	6823      	ldr	r3, [r4, #0]
 80071ea:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80071ec:	f022 0202 	bic.w	r2, r2, #2
 80071f0:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 80071f2:	2202      	movs	r2, #2
 80071f4:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 80071f6:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 80071fa:	4313      	orrs	r3, r2
 80071fc:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8007200:	2304      	movs	r3, #4
 8007202:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8007206:	2300      	movs	r3, #0
 8007208:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800720c:	4620      	mov	r0, r4
 800720e:	f7ff ffc9 	bl	80071a4 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 8007212:	07f0      	lsls	r0, r6, #31
 8007214:	d510      	bpl.n	8007238 <HAL_LTDC_IRQHandler+0x90>
 8007216:	07e9      	lsls	r1, r5, #31
 8007218:	d50e      	bpl.n	8007238 <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800721a:	6823      	ldr	r3, [r4, #0]
 800721c:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800721e:	f022 0201 	bic.w	r2, r2, #1
 8007222:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 8007224:	2201      	movs	r2, #1
 8007226:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 8007228:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800722a:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800722e:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 8007232:	4620      	mov	r0, r4
 8007234:	f7f9 ff6e 	bl	8001114 <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 8007238:	0732      	lsls	r2, r6, #28
 800723a:	d511      	bpl.n	8007260 <HAL_LTDC_IRQHandler+0xb8>
 800723c:	072b      	lsls	r3, r5, #28
 800723e:	d50f      	bpl.n	8007260 <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 8007240:	6823      	ldr	r3, [r4, #0]
 8007242:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8007244:	f022 0208 	bic.w	r2, r2, #8
 8007248:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800724a:	2208      	movs	r2, #8
 800724c:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 800724e:	2301      	movs	r3, #1
 8007250:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8007254:	2300      	movs	r3, #0
 8007256:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 800725a:	4620      	mov	r0, r4
 800725c:	f7ff ffa3 	bl	80071a6 <HAL_LTDC_ReloadEventCallback>
}
 8007260:	bd70      	pop	{r4, r5, r6, pc}

08007262 <HAL_LTDC_ConfigLayer>:
{
 8007262:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __HAL_LOCK(hltdc);
 8007266:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800726a:	2b01      	cmp	r3, #1
{
 800726c:	4606      	mov	r6, r0
 800726e:	460f      	mov	r7, r1
 8007270:	4694      	mov	ip, r2
 8007272:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 8007276:	d01f      	beq.n	80072b8 <HAL_LTDC_ConfigLayer+0x56>
 8007278:	f04f 0801 	mov.w	r8, #1
 800727c:	f886 80a0 	strb.w	r8, [r6, #160]	; 0xa0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8007280:	f886 00a1 	strb.w	r0, [r6, #161]	; 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8007284:	2434      	movs	r4, #52	; 0x34
 8007286:	460d      	mov	r5, r1
 8007288:	fb04 6402 	mla	r4, r4, r2, r6
 800728c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800728e:	3438      	adds	r4, #56	; 0x38
 8007290:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8007292:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8007294:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8007296:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8007298:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800729a:	682b      	ldr	r3, [r5, #0]
 800729c:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 800729e:	4630      	mov	r0, r6
 80072a0:	4662      	mov	r2, ip
 80072a2:	4639      	mov	r1, r7
 80072a4:	f7ff fe8c 	bl	8006fc0 <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 80072a8:	6833      	ldr	r3, [r6, #0]
  __HAL_UNLOCK(hltdc);
 80072aa:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 80072ac:	f8c3 8024 	str.w	r8, [r3, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 80072b0:	f886 80a1 	strb.w	r8, [r6, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 80072b4:	f886 00a0 	strb.w	r0, [r6, #160]	; 0xa0
}
 80072b8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080072bc <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 80072bc:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 80072c0:	2b01      	cmp	r3, #1
 80072c2:	f04f 0302 	mov.w	r3, #2
 80072c6:	d012      	beq.n	80072ee <HAL_LTDC_ProgramLineEvent+0x32>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 80072c8:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 80072cc:	6803      	ldr	r3, [r0, #0]
 80072ce:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80072d0:	f022 0201 	bic.w	r2, r2, #1
 80072d4:	635a      	str	r2, [r3, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 80072d6:	4a07      	ldr	r2, [pc, #28]	; (80072f4 <HAL_LTDC_ProgramLineEvent+0x38>)
 80072d8:	6411      	str	r1, [r2, #64]	; 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 80072da:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80072dc:	f042 0201 	orr.w	r2, r2, #1
 80072e0:	635a      	str	r2, [r3, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
 80072e2:	2301      	movs	r3, #1
 80072e4:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 80072e8:	2300      	movs	r3, #0
 80072ea:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
  __HAL_LOCK(hltdc);
 80072ee:	4618      	mov	r0, r3
}
 80072f0:	4770      	bx	lr
 80072f2:	bf00      	nop
 80072f4:	40016800 	.word	0x40016800

080072f8 <HAL_RCC_OscConfig>:
  *         supported by this API. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 80072f8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 80072fc:	4604      	mov	r4, r0
 80072fe:	b340      	cbz	r0, 8007352 <HAL_RCC_OscConfig+0x5a>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8007300:	6803      	ldr	r3, [r0, #0]
 8007302:	07dd      	lsls	r5, r3, #31
 8007304:	d410      	bmi.n	8007328 <HAL_RCC_OscConfig+0x30>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8007306:	6823      	ldr	r3, [r4, #0]
 8007308:	0798      	lsls	r0, r3, #30
 800730a:	d45e      	bmi.n	80073ca <HAL_RCC_OscConfig+0xd2>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800730c:	6823      	ldr	r3, [r4, #0]
 800730e:	071a      	lsls	r2, r3, #28
 8007310:	f100 80a0 	bmi.w	8007454 <HAL_RCC_OscConfig+0x15c>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8007314:	6823      	ldr	r3, [r4, #0]
 8007316:	075b      	lsls	r3, r3, #29
 8007318:	f100 80c0 	bmi.w	800749c <HAL_RCC_OscConfig+0x1a4>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 800731c:	69a0      	ldr	r0, [r4, #24]
 800731e:	2800      	cmp	r0, #0
 8007320:	f040 8128 	bne.w	8007574 <HAL_RCC_OscConfig+0x27c>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 8007324:	2000      	movs	r0, #0
 8007326:	e02b      	b.n	8007380 <HAL_RCC_OscConfig+0x88>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 8007328:	4b8f      	ldr	r3, [pc, #572]	; (8007568 <HAL_RCC_OscConfig+0x270>)
 800732a:	689a      	ldr	r2, [r3, #8]
 800732c:	f002 020c 	and.w	r2, r2, #12
 8007330:	2a04      	cmp	r2, #4
 8007332:	d007      	beq.n	8007344 <HAL_RCC_OscConfig+0x4c>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8007334:	689a      	ldr	r2, [r3, #8]
 8007336:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800733a:	2a08      	cmp	r2, #8
 800733c:	d10b      	bne.n	8007356 <HAL_RCC_OscConfig+0x5e>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800733e:	685a      	ldr	r2, [r3, #4]
 8007340:	0251      	lsls	r1, r2, #9
 8007342:	d508      	bpl.n	8007356 <HAL_RCC_OscConfig+0x5e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8007344:	4b88      	ldr	r3, [pc, #544]	; (8007568 <HAL_RCC_OscConfig+0x270>)
 8007346:	681b      	ldr	r3, [r3, #0]
 8007348:	039a      	lsls	r2, r3, #14
 800734a:	d5dc      	bpl.n	8007306 <HAL_RCC_OscConfig+0xe>
 800734c:	6863      	ldr	r3, [r4, #4]
 800734e:	2b00      	cmp	r3, #0
 8007350:	d1d9      	bne.n	8007306 <HAL_RCC_OscConfig+0xe>
          return HAL_ERROR;
 8007352:	2001      	movs	r0, #1
 8007354:	e014      	b.n	8007380 <HAL_RCC_OscConfig+0x88>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8007356:	6862      	ldr	r2, [r4, #4]
 8007358:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
 800735c:	d113      	bne.n	8007386 <HAL_RCC_OscConfig+0x8e>
 800735e:	681a      	ldr	r2, [r3, #0]
 8007360:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8007364:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8007366:	f7fe fd3d 	bl	8005de4 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800736a:	4e7f      	ldr	r6, [pc, #508]	; (8007568 <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 800736c:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800736e:	6833      	ldr	r3, [r6, #0]
 8007370:	039b      	lsls	r3, r3, #14
 8007372:	d4c8      	bmi.n	8007306 <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8007374:	f7fe fd36 	bl	8005de4 <HAL_GetTick>
 8007378:	1b40      	subs	r0, r0, r5
 800737a:	2864      	cmp	r0, #100	; 0x64
 800737c:	d9f7      	bls.n	800736e <HAL_RCC_OscConfig+0x76>
            return HAL_TIMEOUT;
 800737e:	2003      	movs	r0, #3
}
 8007380:	b002      	add	sp, #8
 8007382:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8007386:	4d78      	ldr	r5, [pc, #480]	; (8007568 <HAL_RCC_OscConfig+0x270>)
 8007388:	f5b2 2fa0 	cmp.w	r2, #327680	; 0x50000
 800738c:	682b      	ldr	r3, [r5, #0]
 800738e:	d107      	bne.n	80073a0 <HAL_RCC_OscConfig+0xa8>
 8007390:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8007394:	602b      	str	r3, [r5, #0]
 8007396:	682b      	ldr	r3, [r5, #0]
 8007398:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800739c:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800739e:	e7e2      	b.n	8007366 <HAL_RCC_OscConfig+0x6e>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80073a0:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80073a4:	602b      	str	r3, [r5, #0]
 80073a6:	682b      	ldr	r3, [r5, #0]
 80073a8:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80073ac:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 80073ae:	2a00      	cmp	r2, #0
 80073b0:	d1d9      	bne.n	8007366 <HAL_RCC_OscConfig+0x6e>
        tickstart = HAL_GetTick();
 80073b2:	f7fe fd17 	bl	8005de4 <HAL_GetTick>
 80073b6:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 80073b8:	682b      	ldr	r3, [r5, #0]
 80073ba:	039f      	lsls	r7, r3, #14
 80073bc:	d5a3      	bpl.n	8007306 <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 80073be:	f7fe fd11 	bl	8005de4 <HAL_GetTick>
 80073c2:	1b80      	subs	r0, r0, r6
 80073c4:	2864      	cmp	r0, #100	; 0x64
 80073c6:	d9f7      	bls.n	80073b8 <HAL_RCC_OscConfig+0xc0>
 80073c8:	e7d9      	b.n	800737e <HAL_RCC_OscConfig+0x86>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 80073ca:	4b67      	ldr	r3, [pc, #412]	; (8007568 <HAL_RCC_OscConfig+0x270>)
 80073cc:	689a      	ldr	r2, [r3, #8]
 80073ce:	f012 0f0c 	tst.w	r2, #12
 80073d2:	d007      	beq.n	80073e4 <HAL_RCC_OscConfig+0xec>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 80073d4:	689a      	ldr	r2, [r3, #8]
 80073d6:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 80073da:	2a08      	cmp	r2, #8
 80073dc:	d111      	bne.n	8007402 <HAL_RCC_OscConfig+0x10a>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 80073de:	685b      	ldr	r3, [r3, #4]
 80073e0:	025e      	lsls	r6, r3, #9
 80073e2:	d40e      	bmi.n	8007402 <HAL_RCC_OscConfig+0x10a>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 80073e4:	4a60      	ldr	r2, [pc, #384]	; (8007568 <HAL_RCC_OscConfig+0x270>)
 80073e6:	6813      	ldr	r3, [r2, #0]
 80073e8:	079d      	lsls	r5, r3, #30
 80073ea:	d502      	bpl.n	80073f2 <HAL_RCC_OscConfig+0xfa>
 80073ec:	68e3      	ldr	r3, [r4, #12]
 80073ee:	2b01      	cmp	r3, #1
 80073f0:	d1af      	bne.n	8007352 <HAL_RCC_OscConfig+0x5a>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 80073f2:	6813      	ldr	r3, [r2, #0]
 80073f4:	6921      	ldr	r1, [r4, #16]
 80073f6:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 80073fa:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 80073fe:	6013      	str	r3, [r2, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8007400:	e784      	b.n	800730c <HAL_RCC_OscConfig+0x14>
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 8007402:	68e2      	ldr	r2, [r4, #12]
 8007404:	4b59      	ldr	r3, [pc, #356]	; (800756c <HAL_RCC_OscConfig+0x274>)
 8007406:	b1b2      	cbz	r2, 8007436 <HAL_RCC_OscConfig+0x13e>
        __HAL_RCC_HSI_ENABLE();
 8007408:	2201      	movs	r2, #1
 800740a:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800740c:	f7fe fcea 	bl	8005de4 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8007410:	4d55      	ldr	r5, [pc, #340]	; (8007568 <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 8007412:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8007414:	682b      	ldr	r3, [r5, #0]
 8007416:	0798      	lsls	r0, r3, #30
 8007418:	d507      	bpl.n	800742a <HAL_RCC_OscConfig+0x132>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800741a:	682b      	ldr	r3, [r5, #0]
 800741c:	6922      	ldr	r2, [r4, #16]
 800741e:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 8007422:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8007426:	602b      	str	r3, [r5, #0]
 8007428:	e770      	b.n	800730c <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800742a:	f7fe fcdb 	bl	8005de4 <HAL_GetTick>
 800742e:	1b80      	subs	r0, r0, r6
 8007430:	2802      	cmp	r0, #2
 8007432:	d9ef      	bls.n	8007414 <HAL_RCC_OscConfig+0x11c>
 8007434:	e7a3      	b.n	800737e <HAL_RCC_OscConfig+0x86>
        __HAL_RCC_HSI_DISABLE();
 8007436:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8007438:	f7fe fcd4 	bl	8005de4 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800743c:	4e4a      	ldr	r6, [pc, #296]	; (8007568 <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 800743e:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8007440:	6833      	ldr	r3, [r6, #0]
 8007442:	0799      	lsls	r1, r3, #30
 8007444:	f57f af62 	bpl.w	800730c <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8007448:	f7fe fccc 	bl	8005de4 <HAL_GetTick>
 800744c:	1b40      	subs	r0, r0, r5
 800744e:	2802      	cmp	r0, #2
 8007450:	d9f6      	bls.n	8007440 <HAL_RCC_OscConfig+0x148>
 8007452:	e794      	b.n	800737e <HAL_RCC_OscConfig+0x86>
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 8007454:	6962      	ldr	r2, [r4, #20]
 8007456:	4b45      	ldr	r3, [pc, #276]	; (800756c <HAL_RCC_OscConfig+0x274>)
 8007458:	b182      	cbz	r2, 800747c <HAL_RCC_OscConfig+0x184>
      __HAL_RCC_LSI_ENABLE();
 800745a:	2201      	movs	r2, #1
 800745c:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 8007460:	f7fe fcc0 	bl	8005de4 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8007464:	4e40      	ldr	r6, [pc, #256]	; (8007568 <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 8007466:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8007468:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800746a:	079f      	lsls	r7, r3, #30
 800746c:	f53f af52 	bmi.w	8007314 <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8007470:	f7fe fcb8 	bl	8005de4 <HAL_GetTick>
 8007474:	1b40      	subs	r0, r0, r5
 8007476:	2802      	cmp	r0, #2
 8007478:	d9f6      	bls.n	8007468 <HAL_RCC_OscConfig+0x170>
 800747a:	e780      	b.n	800737e <HAL_RCC_OscConfig+0x86>
      __HAL_RCC_LSI_DISABLE();
 800747c:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 8007480:	f7fe fcb0 	bl	8005de4 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8007484:	4e38      	ldr	r6, [pc, #224]	; (8007568 <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 8007486:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8007488:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800748a:	0798      	lsls	r0, r3, #30
 800748c:	f57f af42 	bpl.w	8007314 <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8007490:	f7fe fca8 	bl	8005de4 <HAL_GetTick>
 8007494:	1b40      	subs	r0, r0, r5
 8007496:	2802      	cmp	r0, #2
 8007498:	d9f6      	bls.n	8007488 <HAL_RCC_OscConfig+0x190>
 800749a:	e770      	b.n	800737e <HAL_RCC_OscConfig+0x86>
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 800749c:	4b32      	ldr	r3, [pc, #200]	; (8007568 <HAL_RCC_OscConfig+0x270>)
 800749e:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80074a0:	f012 5280 	ands.w	r2, r2, #268435456	; 0x10000000
 80074a4:	d128      	bne.n	80074f8 <HAL_RCC_OscConfig+0x200>
      __HAL_RCC_PWR_CLK_ENABLE();
 80074a6:	9201      	str	r2, [sp, #4]
 80074a8:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80074aa:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 80074ae:	641a      	str	r2, [r3, #64]	; 0x40
 80074b0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80074b2:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80074b6:	9301      	str	r3, [sp, #4]
 80074b8:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 80074ba:	2701      	movs	r7, #1
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 80074bc:	4d2c      	ldr	r5, [pc, #176]	; (8007570 <HAL_RCC_OscConfig+0x278>)
 80074be:	682b      	ldr	r3, [r5, #0]
 80074c0:	05d9      	lsls	r1, r3, #23
 80074c2:	d51b      	bpl.n	80074fc <HAL_RCC_OscConfig+0x204>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 80074c4:	68a3      	ldr	r3, [r4, #8]
 80074c6:	4d28      	ldr	r5, [pc, #160]	; (8007568 <HAL_RCC_OscConfig+0x270>)
 80074c8:	2b01      	cmp	r3, #1
 80074ca:	d127      	bne.n	800751c <HAL_RCC_OscConfig+0x224>
 80074cc:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 80074ce:	f043 0301 	orr.w	r3, r3, #1
 80074d2:	672b      	str	r3, [r5, #112]	; 0x70
      tickstart = HAL_GetTick();
 80074d4:	f7fe fc86 	bl	8005de4 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80074d8:	4e23      	ldr	r6, [pc, #140]	; (8007568 <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 80074da:	4605      	mov	r5, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80074dc:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80074e0:	6f33      	ldr	r3, [r6, #112]	; 0x70
 80074e2:	079b      	lsls	r3, r3, #30
 80074e4:	d539      	bpl.n	800755a <HAL_RCC_OscConfig+0x262>
    if(pwrclkchanged == SET)
 80074e6:	2f00      	cmp	r7, #0
 80074e8:	f43f af18 	beq.w	800731c <HAL_RCC_OscConfig+0x24>
      __HAL_RCC_PWR_CLK_DISABLE();
 80074ec:	4a1e      	ldr	r2, [pc, #120]	; (8007568 <HAL_RCC_OscConfig+0x270>)
 80074ee:	6c13      	ldr	r3, [r2, #64]	; 0x40
 80074f0:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 80074f4:	6413      	str	r3, [r2, #64]	; 0x40
 80074f6:	e711      	b.n	800731c <HAL_RCC_OscConfig+0x24>
    FlagStatus       pwrclkchanged = RESET;
 80074f8:	2700      	movs	r7, #0
 80074fa:	e7df      	b.n	80074bc <HAL_RCC_OscConfig+0x1c4>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 80074fc:	682b      	ldr	r3, [r5, #0]
 80074fe:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8007502:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 8007504:	f7fe fc6e 	bl	8005de4 <HAL_GetTick>
 8007508:	4606      	mov	r6, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800750a:	682b      	ldr	r3, [r5, #0]
 800750c:	05da      	lsls	r2, r3, #23
 800750e:	d4d9      	bmi.n	80074c4 <HAL_RCC_OscConfig+0x1cc>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8007510:	f7fe fc68 	bl	8005de4 <HAL_GetTick>
 8007514:	1b80      	subs	r0, r0, r6
 8007516:	2802      	cmp	r0, #2
 8007518:	d9f7      	bls.n	800750a <HAL_RCC_OscConfig+0x212>
 800751a:	e730      	b.n	800737e <HAL_RCC_OscConfig+0x86>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800751c:	2b05      	cmp	r3, #5
 800751e:	d104      	bne.n	800752a <HAL_RCC_OscConfig+0x232>
 8007520:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8007522:	f043 0304 	orr.w	r3, r3, #4
 8007526:	672b      	str	r3, [r5, #112]	; 0x70
 8007528:	e7d0      	b.n	80074cc <HAL_RCC_OscConfig+0x1d4>
 800752a:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 800752c:	f022 0201 	bic.w	r2, r2, #1
 8007530:	672a      	str	r2, [r5, #112]	; 0x70
 8007532:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 8007534:	f022 0204 	bic.w	r2, r2, #4
 8007538:	672a      	str	r2, [r5, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800753a:	2b00      	cmp	r3, #0
 800753c:	d1ca      	bne.n	80074d4 <HAL_RCC_OscConfig+0x1dc>
      tickstart = HAL_GetTick();
 800753e:	f7fe fc51 	bl	8005de4 <HAL_GetTick>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8007542:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 8007546:	4606      	mov	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8007548:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800754a:	0798      	lsls	r0, r3, #30
 800754c:	d5cb      	bpl.n	80074e6 <HAL_RCC_OscConfig+0x1ee>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800754e:	f7fe fc49 	bl	8005de4 <HAL_GetTick>
 8007552:	1b80      	subs	r0, r0, r6
 8007554:	4540      	cmp	r0, r8
 8007556:	d9f7      	bls.n	8007548 <HAL_RCC_OscConfig+0x250>
 8007558:	e711      	b.n	800737e <HAL_RCC_OscConfig+0x86>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800755a:	f7fe fc43 	bl	8005de4 <HAL_GetTick>
 800755e:	1b40      	subs	r0, r0, r5
 8007560:	4540      	cmp	r0, r8
 8007562:	d9bd      	bls.n	80074e0 <HAL_RCC_OscConfig+0x1e8>
 8007564:	e70b      	b.n	800737e <HAL_RCC_OscConfig+0x86>
 8007566:	bf00      	nop
 8007568:	40023800 	.word	0x40023800
 800756c:	42470000 	.word	0x42470000
 8007570:	40007000 	.word	0x40007000
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 8007574:	4d33      	ldr	r5, [pc, #204]	; (8007644 <HAL_RCC_OscConfig+0x34c>)
 8007576:	68ab      	ldr	r3, [r5, #8]
 8007578:	f003 030c 	and.w	r3, r3, #12
 800757c:	2b08      	cmp	r3, #8
 800757e:	d03d      	beq.n	80075fc <HAL_RCC_OscConfig+0x304>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8007580:	4b31      	ldr	r3, [pc, #196]	; (8007648 <HAL_RCC_OscConfig+0x350>)
 8007582:	2200      	movs	r2, #0
 8007584:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 8007586:	661a      	str	r2, [r3, #96]	; 0x60
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8007588:	d12b      	bne.n	80075e2 <HAL_RCC_OscConfig+0x2ea>
        tickstart = HAL_GetTick();
 800758a:	f7fe fc2b 	bl	8005de4 <HAL_GetTick>
 800758e:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8007590:	682b      	ldr	r3, [r5, #0]
 8007592:	0199      	lsls	r1, r3, #6
 8007594:	d41f      	bmi.n	80075d6 <HAL_RCC_OscConfig+0x2de>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 8007596:	e9d4 3207 	ldrd	r3, r2, [r4, #28]
 800759a:	4313      	orrs	r3, r2
 800759c:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800759e:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 80075a2:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80075a4:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 80075a8:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 80075aa:	0852      	lsrs	r2, r2, #1
 80075ac:	3a01      	subs	r2, #1
 80075ae:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80075b2:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 80075b4:	4b24      	ldr	r3, [pc, #144]	; (8007648 <HAL_RCC_OscConfig+0x350>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80075b6:	4d23      	ldr	r5, [pc, #140]	; (8007644 <HAL_RCC_OscConfig+0x34c>)
        __HAL_RCC_PLL_ENABLE();
 80075b8:	2201      	movs	r2, #1
 80075ba:	661a      	str	r2, [r3, #96]	; 0x60
        tickstart = HAL_GetTick();
 80075bc:	f7fe fc12 	bl	8005de4 <HAL_GetTick>
 80075c0:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80075c2:	682b      	ldr	r3, [r5, #0]
 80075c4:	019a      	lsls	r2, r3, #6
 80075c6:	f53f aead 	bmi.w	8007324 <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 80075ca:	f7fe fc0b 	bl	8005de4 <HAL_GetTick>
 80075ce:	1b00      	subs	r0, r0, r4
 80075d0:	2802      	cmp	r0, #2
 80075d2:	d9f6      	bls.n	80075c2 <HAL_RCC_OscConfig+0x2ca>
 80075d4:	e6d3      	b.n	800737e <HAL_RCC_OscConfig+0x86>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 80075d6:	f7fe fc05 	bl	8005de4 <HAL_GetTick>
 80075da:	1b80      	subs	r0, r0, r6
 80075dc:	2802      	cmp	r0, #2
 80075de:	d9d7      	bls.n	8007590 <HAL_RCC_OscConfig+0x298>
 80075e0:	e6cd      	b.n	800737e <HAL_RCC_OscConfig+0x86>
        tickstart = HAL_GetTick();
 80075e2:	f7fe fbff 	bl	8005de4 <HAL_GetTick>
 80075e6:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 80075e8:	682b      	ldr	r3, [r5, #0]
 80075ea:	019b      	lsls	r3, r3, #6
 80075ec:	f57f ae9a 	bpl.w	8007324 <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 80075f0:	f7fe fbf8 	bl	8005de4 <HAL_GetTick>
 80075f4:	1b00      	subs	r0, r0, r4
 80075f6:	2802      	cmp	r0, #2
 80075f8:	d9f6      	bls.n	80075e8 <HAL_RCC_OscConfig+0x2f0>
 80075fa:	e6c0      	b.n	800737e <HAL_RCC_OscConfig+0x86>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 80075fc:	2801      	cmp	r0, #1
 80075fe:	f43f aebf 	beq.w	8007380 <HAL_RCC_OscConfig+0x88>
        pll_config = RCC->PLLCFGR;
 8007602:	686b      	ldr	r3, [r5, #4]
        if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8007604:	69e2      	ldr	r2, [r4, #28]
 8007606:	f403 0180 	and.w	r1, r3, #4194304	; 0x400000
 800760a:	4291      	cmp	r1, r2
 800760c:	f47f aea1 	bne.w	8007352 <HAL_RCC_OscConfig+0x5a>
 8007610:	6a21      	ldr	r1, [r4, #32]
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 8007612:	f003 023f 	and.w	r2, r3, #63	; 0x3f
        if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8007616:	428a      	cmp	r2, r1
 8007618:	f47f ae9b 	bne.w	8007352 <HAL_RCC_OscConfig+0x5a>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 800761c:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800761e:	f647 72c0 	movw	r2, #32704	; 0x7fc0
 8007622:	401a      	ands	r2, r3
 8007624:	428a      	cmp	r2, r1
 8007626:	f47f ae94 	bne.w	8007352 <HAL_RCC_OscConfig+0x5a>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != RCC_OscInitStruct->PLL.PLLN) ||
 800762a:	6aa1      	ldr	r1, [r4, #40]	; 0x28
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 800762c:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != RCC_OscInitStruct->PLL.PLLN) ||
 8007630:	428a      	cmp	r2, r1
 8007632:	f47f ae8e 	bne.w	8007352 <HAL_RCC_OscConfig+0x5a>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 8007636:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != RCC_OscInitStruct->PLL.PLLQ))
 8007638:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 800763c:	4293      	cmp	r3, r2
 800763e:	f43f ae71 	beq.w	8007324 <HAL_RCC_OscConfig+0x2c>
 8007642:	e686      	b.n	8007352 <HAL_RCC_OscConfig+0x5a>
 8007644:	40023800 	.word	0x40023800
 8007648:	42470000 	.word	0x42470000

0800764c <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800764c:	4913      	ldr	r1, [pc, #76]	; (800769c <HAL_RCC_GetSysClockFreq+0x50>)
{
 800764e:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8007650:	688b      	ldr	r3, [r1, #8]
 8007652:	f003 030c 	and.w	r3, r3, #12
 8007656:	2b04      	cmp	r3, #4
 8007658:	d01c      	beq.n	8007694 <HAL_RCC_GetSysClockFreq+0x48>
 800765a:	2b08      	cmp	r3, #8
 800765c:	d11c      	bne.n	8007698 <HAL_RCC_GetSysClockFreq+0x4c>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800765e:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8007660:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8007662:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8007664:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8007668:	bf14      	ite	ne
 800766a:	480d      	ldrne	r0, [pc, #52]	; (80076a0 <HAL_RCC_GetSysClockFreq+0x54>)
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800766c:	480d      	ldreq	r0, [pc, #52]	; (80076a4 <HAL_RCC_GetSysClockFreq+0x58>)
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800766e:	f3c1 1188 	ubfx	r1, r1, #6, #9
 8007672:	bf18      	it	ne
 8007674:	2300      	movne	r3, #0
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8007676:	f002 023f 	and.w	r2, r2, #63	; 0x3f
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800767a:	fba1 0100 	umull	r0, r1, r1, r0
 800767e:	f7f8 fe07 	bl	8000290 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 8007682:	4b06      	ldr	r3, [pc, #24]	; (800769c <HAL_RCC_GetSysClockFreq+0x50>)
 8007684:	685b      	ldr	r3, [r3, #4]
 8007686:	f3c3 4301 	ubfx	r3, r3, #16, #2
 800768a:	3301      	adds	r3, #1
 800768c:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 800768e:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 8007692:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8007694:	4802      	ldr	r0, [pc, #8]	; (80076a0 <HAL_RCC_GetSysClockFreq+0x54>)
 8007696:	e7fc      	b.n	8007692 <HAL_RCC_GetSysClockFreq+0x46>
      sysclockfreq = HSI_VALUE;
 8007698:	4802      	ldr	r0, [pc, #8]	; (80076a4 <HAL_RCC_GetSysClockFreq+0x58>)
  return sysclockfreq;
 800769a:	e7fa      	b.n	8007692 <HAL_RCC_GetSysClockFreq+0x46>
 800769c:	40023800 	.word	0x40023800
 80076a0:	007a1200 	.word	0x007a1200
 80076a4:	00f42400 	.word	0x00f42400

080076a8 <HAL_RCC_ClockConfig>:
{
 80076a8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80076ac:	460d      	mov	r5, r1
  if(RCC_ClkInitStruct == NULL)
 80076ae:	4604      	mov	r4, r0
 80076b0:	b910      	cbnz	r0, 80076b8 <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 80076b2:	2001      	movs	r0, #1
}
 80076b4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 80076b8:	4b44      	ldr	r3, [pc, #272]	; (80077cc <HAL_RCC_ClockConfig+0x124>)
 80076ba:	681a      	ldr	r2, [r3, #0]
 80076bc:	f002 020f 	and.w	r2, r2, #15
 80076c0:	428a      	cmp	r2, r1
 80076c2:	d328      	bcc.n	8007716 <HAL_RCC_ClockConfig+0x6e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 80076c4:	6822      	ldr	r2, [r4, #0]
 80076c6:	0797      	lsls	r7, r2, #30
 80076c8:	d42d      	bmi.n	8007726 <HAL_RCC_ClockConfig+0x7e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 80076ca:	07d0      	lsls	r0, r2, #31
 80076cc:	d441      	bmi.n	8007752 <HAL_RCC_ClockConfig+0xaa>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 80076ce:	4b3f      	ldr	r3, [pc, #252]	; (80077cc <HAL_RCC_ClockConfig+0x124>)
 80076d0:	681a      	ldr	r2, [r3, #0]
 80076d2:	f002 020f 	and.w	r2, r2, #15
 80076d6:	42aa      	cmp	r2, r5
 80076d8:	d866      	bhi.n	80077a8 <HAL_RCC_ClockConfig+0x100>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 80076da:	6822      	ldr	r2, [r4, #0]
 80076dc:	0751      	lsls	r1, r2, #29
 80076de:	d46c      	bmi.n	80077ba <HAL_RCC_ClockConfig+0x112>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 80076e0:	0713      	lsls	r3, r2, #28
 80076e2:	d507      	bpl.n	80076f4 <HAL_RCC_ClockConfig+0x4c>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 80076e4:	4a3a      	ldr	r2, [pc, #232]	; (80077d0 <HAL_RCC_ClockConfig+0x128>)
 80076e6:	6921      	ldr	r1, [r4, #16]
 80076e8:	6893      	ldr	r3, [r2, #8]
 80076ea:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 80076ee:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 80076f2:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 80076f4:	f7ff ffaa 	bl	800764c <HAL_RCC_GetSysClockFreq>
 80076f8:	4b35      	ldr	r3, [pc, #212]	; (80077d0 <HAL_RCC_ClockConfig+0x128>)
 80076fa:	4a36      	ldr	r2, [pc, #216]	; (80077d4 <HAL_RCC_ClockConfig+0x12c>)
 80076fc:	689b      	ldr	r3, [r3, #8]
 80076fe:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8007702:	5cd3      	ldrb	r3, [r2, r3]
 8007704:	40d8      	lsrs	r0, r3
 8007706:	4b34      	ldr	r3, [pc, #208]	; (80077d8 <HAL_RCC_ClockConfig+0x130>)
 8007708:	6018      	str	r0, [r3, #0]
  HAL_InitTick (uwTickPrio);
 800770a:	4b34      	ldr	r3, [pc, #208]	; (80077dc <HAL_RCC_ClockConfig+0x134>)
 800770c:	6818      	ldr	r0, [r3, #0]
 800770e:	f7fa fd1d 	bl	800214c <HAL_InitTick>
  return HAL_OK;
 8007712:	2000      	movs	r0, #0
 8007714:	e7ce      	b.n	80076b4 <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8007716:	b2ca      	uxtb	r2, r1
 8007718:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800771a:	681b      	ldr	r3, [r3, #0]
 800771c:	f003 030f 	and.w	r3, r3, #15
 8007720:	428b      	cmp	r3, r1
 8007722:	d1c6      	bne.n	80076b2 <HAL_RCC_ClockConfig+0xa>
 8007724:	e7ce      	b.n	80076c4 <HAL_RCC_ClockConfig+0x1c>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8007726:	4b2a      	ldr	r3, [pc, #168]	; (80077d0 <HAL_RCC_ClockConfig+0x128>)
 8007728:	f012 0f04 	tst.w	r2, #4
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 800772c:	bf1e      	ittt	ne
 800772e:	6899      	ldrne	r1, [r3, #8]
 8007730:	f441 51e0 	orrne.w	r1, r1, #7168	; 0x1c00
 8007734:	6099      	strne	r1, [r3, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8007736:	0716      	lsls	r6, r2, #28
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 8007738:	bf42      	ittt	mi
 800773a:	6899      	ldrmi	r1, [r3, #8]
 800773c:	f441 4160 	orrmi.w	r1, r1, #57344	; 0xe000
 8007740:	6099      	strmi	r1, [r3, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8007742:	4923      	ldr	r1, [pc, #140]	; (80077d0 <HAL_RCC_ClockConfig+0x128>)
 8007744:	68a0      	ldr	r0, [r4, #8]
 8007746:	688b      	ldr	r3, [r1, #8]
 8007748:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 800774c:	4303      	orrs	r3, r0
 800774e:	608b      	str	r3, [r1, #8]
 8007750:	e7bb      	b.n	80076ca <HAL_RCC_ClockConfig+0x22>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8007752:	6862      	ldr	r2, [r4, #4]
 8007754:	4b1e      	ldr	r3, [pc, #120]	; (80077d0 <HAL_RCC_ClockConfig+0x128>)
 8007756:	2a01      	cmp	r2, #1
 8007758:	d11c      	bne.n	8007794 <HAL_RCC_ClockConfig+0xec>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800775a:	681b      	ldr	r3, [r3, #0]
 800775c:	f413 3f00 	tst.w	r3, #131072	; 0x20000
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8007760:	d0a7      	beq.n	80076b2 <HAL_RCC_ClockConfig+0xa>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8007762:	4e1b      	ldr	r6, [pc, #108]	; (80077d0 <HAL_RCC_ClockConfig+0x128>)
 8007764:	68b3      	ldr	r3, [r6, #8]
 8007766:	f023 0303 	bic.w	r3, r3, #3
 800776a:	4313      	orrs	r3, r2
 800776c:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 800776e:	f7fe fb39 	bl	8005de4 <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8007772:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 8007776:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8007778:	68b3      	ldr	r3, [r6, #8]
 800777a:	6862      	ldr	r2, [r4, #4]
 800777c:	f003 030c 	and.w	r3, r3, #12
 8007780:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 8007784:	d0a3      	beq.n	80076ce <HAL_RCC_ClockConfig+0x26>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8007786:	f7fe fb2d 	bl	8005de4 <HAL_GetTick>
 800778a:	1bc0      	subs	r0, r0, r7
 800778c:	4540      	cmp	r0, r8
 800778e:	d9f3      	bls.n	8007778 <HAL_RCC_ClockConfig+0xd0>
        return HAL_TIMEOUT;
 8007790:	2003      	movs	r0, #3
 8007792:	e78f      	b.n	80076b4 <HAL_RCC_ClockConfig+0xc>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8007794:	1e91      	subs	r1, r2, #2
 8007796:	2901      	cmp	r1, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8007798:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800779a:	d802      	bhi.n	80077a2 <HAL_RCC_ClockConfig+0xfa>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800779c:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 80077a0:	e7de      	b.n	8007760 <HAL_RCC_ClockConfig+0xb8>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80077a2:	f013 0f02 	tst.w	r3, #2
 80077a6:	e7db      	b.n	8007760 <HAL_RCC_ClockConfig+0xb8>
    __HAL_FLASH_SET_LATENCY(FLatency);
 80077a8:	b2ea      	uxtb	r2, r5
 80077aa:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 80077ac:	681b      	ldr	r3, [r3, #0]
 80077ae:	f003 030f 	and.w	r3, r3, #15
 80077b2:	42ab      	cmp	r3, r5
 80077b4:	f47f af7d 	bne.w	80076b2 <HAL_RCC_ClockConfig+0xa>
 80077b8:	e78f      	b.n	80076da <HAL_RCC_ClockConfig+0x32>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 80077ba:	4905      	ldr	r1, [pc, #20]	; (80077d0 <HAL_RCC_ClockConfig+0x128>)
 80077bc:	68e0      	ldr	r0, [r4, #12]
 80077be:	688b      	ldr	r3, [r1, #8]
 80077c0:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 80077c4:	4303      	orrs	r3, r0
 80077c6:	608b      	str	r3, [r1, #8]
 80077c8:	e78a      	b.n	80076e0 <HAL_RCC_ClockConfig+0x38>
 80077ca:	bf00      	nop
 80077cc:	40023c00 	.word	0x40023c00
 80077d0:	40023800 	.word	0x40023800
 80077d4:	0802373c 	.word	0x0802373c
 80077d8:	2000007c 	.word	0x2000007c
 80077dc:	20000084 	.word	0x20000084

080077e0 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 80077e0:	4b04      	ldr	r3, [pc, #16]	; (80077f4 <HAL_RCC_GetPCLK1Freq+0x14>)
 80077e2:	4a05      	ldr	r2, [pc, #20]	; (80077f8 <HAL_RCC_GetPCLK1Freq+0x18>)
 80077e4:	689b      	ldr	r3, [r3, #8]
 80077e6:	f3c3 2382 	ubfx	r3, r3, #10, #3
 80077ea:	5cd3      	ldrb	r3, [r2, r3]
 80077ec:	4a03      	ldr	r2, [pc, #12]	; (80077fc <HAL_RCC_GetPCLK1Freq+0x1c>)
 80077ee:	6810      	ldr	r0, [r2, #0]
}
 80077f0:	40d8      	lsrs	r0, r3
 80077f2:	4770      	bx	lr
 80077f4:	40023800 	.word	0x40023800
 80077f8:	0802374c 	.word	0x0802374c
 80077fc:	2000007c 	.word	0x2000007c

08007800 <HAL_RCC_GetPCLK2Freq>:
  * @retval PCLK2 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
  /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq()>> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2)>> RCC_CFGR_PPRE2_Pos]);
 8007800:	4b04      	ldr	r3, [pc, #16]	; (8007814 <HAL_RCC_GetPCLK2Freq+0x14>)
 8007802:	4a05      	ldr	r2, [pc, #20]	; (8007818 <HAL_RCC_GetPCLK2Freq+0x18>)
 8007804:	689b      	ldr	r3, [r3, #8]
 8007806:	f3c3 3342 	ubfx	r3, r3, #13, #3
 800780a:	5cd3      	ldrb	r3, [r2, r3]
 800780c:	4a03      	ldr	r2, [pc, #12]	; (800781c <HAL_RCC_GetPCLK2Freq+0x1c>)
 800780e:	6810      	ldr	r0, [r2, #0]
}
 8007810:	40d8      	lsrs	r0, r3
 8007812:	4770      	bx	lr
 8007814:	40023800 	.word	0x40023800
 8007818:	0802374c 	.word	0x0802374c
 800781c:	2000007c 	.word	0x2000007c

08007820 <HAL_RCC_GetClockConfig>:
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 8007820:	230f      	movs	r3, #15
 8007822:	6003      	str	r3, [r0, #0]

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 8007824:	4b0b      	ldr	r3, [pc, #44]	; (8007854 <HAL_RCC_GetClockConfig+0x34>)
 8007826:	689a      	ldr	r2, [r3, #8]
 8007828:	f002 0203 	and.w	r2, r2, #3
 800782c:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 800782e:	689a      	ldr	r2, [r3, #8]
 8007830:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 8007834:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 8007836:	689a      	ldr	r2, [r3, #8]
 8007838:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 800783c:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800783e:	689b      	ldr	r3, [r3, #8]
 8007840:	08db      	lsrs	r3, r3, #3
 8007842:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 8007846:	6103      	str	r3, [r0, #16]

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 8007848:	4b03      	ldr	r3, [pc, #12]	; (8007858 <HAL_RCC_GetClockConfig+0x38>)
 800784a:	681b      	ldr	r3, [r3, #0]
 800784c:	f003 030f 	and.w	r3, r3, #15
 8007850:	600b      	str	r3, [r1, #0]
}
 8007852:	4770      	bx	lr
 8007854:	40023800 	.word	0x40023800
 8007858:	40023c00 	.word	0x40023c00

0800785c <HAL_RCCEx_PeriphCLKConfig>:
  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 800785c:	6803      	ldr	r3, [r0, #0]
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800785e:	f013 0f43 	tst.w	r3, #67	; 0x43
{
 8007862:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8007864:	4604      	mov	r4, r0
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 8007866:	f040 808c 	bne.w	8007982 <HAL_RCCEx_PeriphCLKConfig+0x126>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800786a:	6823      	ldr	r3, [r4, #0]
 800786c:	f013 0f0c 	tst.w	r3, #12
 8007870:	d045      	beq.n	80078fe <HAL_RCCEx_PeriphCLKConfig+0xa2>
  {
    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 8007872:	4b8b      	ldr	r3, [pc, #556]	; (8007aa0 <HAL_RCCEx_PeriphCLKConfig+0x244>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is disabled */
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8007874:	4d8b      	ldr	r5, [pc, #556]	; (8007aa4 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLSAI_DISABLE();
 8007876:	2200      	movs	r2, #0
 8007878:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800787a:	f7fe fab3 	bl	8005de4 <HAL_GetTick>
 800787e:	4606      	mov	r6, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8007880:	682b      	ldr	r3, [r5, #0]
 8007882:	009f      	lsls	r7, r3, #2
 8007884:	f100 80cf 	bmi.w	8007a26 <HAL_RCCEx_PeriphCLKConfig+0x1ca>
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLSAI, PLLSAIQ and PLLSAI_DIVQ must
       be added only for SAI configuration */
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 8007888:	6821      	ldr	r1, [r4, #0]
 800788a:	074e      	lsls	r6, r1, #29
 800788c:	d515      	bpl.n	80078ba <HAL_RCCEx_PeriphCLKConfig+0x5e>
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800788e:	e9d4 0304 	ldrd	r0, r3, [r4, #16]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 8007892:	f8d5 2088 	ldr.w	r2, [r5, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 8007896:	061b      	lsls	r3, r3, #24
 8007898:	f002 42e0 	and.w	r2, r2, #1879048192	; 0x70000000
 800789c:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 80078a0:	4313      	orrs	r3, r2
 80078a2:	f8c5 3088 	str.w	r3, [r5, #136]	; 0x88
      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 80078a6:	f8d5 308c 	ldr.w	r3, [r5, #140]	; 0x8c
 80078aa:	6a22      	ldr	r2, [r4, #32]
 80078ac:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 80078b0:	3a01      	subs	r2, #1
 80078b2:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 80078b6:	f8c5 308c 	str.w	r3, [r5, #140]	; 0x8c
    }

    /*---------------------------- LTDC configuration ------------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 80078ba:	070d      	lsls	r5, r1, #28
 80078bc:	d514      	bpl.n	80078e8 <HAL_RCCEx_PeriphCLKConfig+0x8c>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 80078be:	4a79      	ldr	r2, [pc, #484]	; (8007aa4 <HAL_RCCEx_PeriphCLKConfig+0x248>)
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 80078c0:	69a3      	ldr	r3, [r4, #24]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 80078c2:	f8d2 1088 	ldr.w	r1, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 80078c6:	6920      	ldr	r0, [r4, #16]
 80078c8:	071b      	lsls	r3, r3, #28
 80078ca:	f001 6170 	and.w	r1, r1, #251658240	; 0xf000000
 80078ce:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 80078d2:	430b      	orrs	r3, r1
 80078d4:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 80078d8:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 80078dc:	6a61      	ldr	r1, [r4, #36]	; 0x24
 80078de:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 80078e2:	430b      	orrs	r3, r1
 80078e4:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    }
    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 80078e8:	4b6d      	ldr	r3, [pc, #436]	; (8007aa0 <HAL_RCCEx_PeriphCLKConfig+0x244>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is ready */
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 80078ea:	4e6e      	ldr	r6, [pc, #440]	; (8007aa4 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLSAI_ENABLE();
 80078ec:	2201      	movs	r2, #1
 80078ee:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 80078f0:	f7fe fa78 	bl	8005de4 <HAL_GetTick>
 80078f4:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 80078f6:	6833      	ldr	r3, [r6, #0]
 80078f8:	0098      	lsls	r0, r3, #2
 80078fa:	f140 809b 	bpl.w	8007a34 <HAL_RCCEx_PeriphCLKConfig+0x1d8>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 80078fe:	6823      	ldr	r3, [r4, #0]
 8007900:	069b      	lsls	r3, r3, #26
 8007902:	d533      	bpl.n	800796c <HAL_RCCEx_PeriphCLKConfig+0x110>
  {
    /* Check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable Power Clock*/
    __HAL_RCC_PWR_CLK_ENABLE();
 8007904:	2300      	movs	r3, #0
 8007906:	9301      	str	r3, [sp, #4]
 8007908:	4b66      	ldr	r3, [pc, #408]	; (8007aa4 <HAL_RCCEx_PeriphCLKConfig+0x248>)

    /* Enable write access to Backup domain */
    PWR->CR |= PWR_CR_DBP;
 800790a:	4d67      	ldr	r5, [pc, #412]	; (8007aa8 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PWR_CLK_ENABLE();
 800790c:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800790e:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8007912:	641a      	str	r2, [r3, #64]	; 0x40
 8007914:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007916:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800791a:	9301      	str	r3, [sp, #4]
 800791c:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 800791e:	682b      	ldr	r3, [r5, #0]
 8007920:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8007924:	602b      	str	r3, [r5, #0]

    /* Get tick */
    tickstart = HAL_GetTick();
 8007926:	f7fe fa5d 	bl	8005de4 <HAL_GetTick>
 800792a:	4606      	mov	r6, r0

    while((PWR->CR & PWR_CR_DBP) == RESET)
 800792c:	682b      	ldr	r3, [r5, #0]
 800792e:	05d9      	lsls	r1, r3, #23
 8007930:	f140 8087 	bpl.w	8007a42 <HAL_RCCEx_PeriphCLKConfig+0x1e6>
      {
        return HAL_TIMEOUT;
      }
    }
    /* Reset the Backup domain only if the RTC Clock source selection is modified from reset value */
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 8007934:	4d5b      	ldr	r5, [pc, #364]	; (8007aa4 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 8007936:	6f2b      	ldr	r3, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8007938:	f413 7340 	ands.w	r3, r3, #768	; 0x300
 800793c:	f040 8088 	bne.w	8007a50 <HAL_RCCEx_PeriphCLKConfig+0x1f4>
            return HAL_TIMEOUT;
          }
        }
      }
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8007940:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8007942:	f403 7240 	and.w	r2, r3, #768	; 0x300
 8007946:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 800794a:	4a56      	ldr	r2, [pc, #344]	; (8007aa4 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 800794c:	f040 80a4 	bne.w	8007a98 <HAL_RCCEx_PeriphCLKConfig+0x23c>
 8007950:	6891      	ldr	r1, [r2, #8]
 8007952:	f023 4070 	bic.w	r0, r3, #4026531840	; 0xf0000000
 8007956:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 800795a:	f420 7040 	bic.w	r0, r0, #768	; 0x300
 800795e:	4301      	orrs	r1, r0
 8007960:	6091      	str	r1, [r2, #8]
 8007962:	6f11      	ldr	r1, [r2, #112]	; 0x70
 8007964:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8007968:	430b      	orrs	r3, r1
 800796a:	6713      	str	r3, [r2, #112]	; 0x70
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800796c:	6820      	ldr	r0, [r4, #0]
 800796e:	f010 0010 	ands.w	r0, r0, #16
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 8007972:	bf1f      	itttt	ne
 8007974:	4b4d      	ldrne	r3, [pc, #308]	; (8007aac <HAL_RCCEx_PeriphCLKConfig+0x250>)
 8007976:	f894 202c 	ldrbne.w	r2, [r4, #44]	; 0x2c
 800797a:	f8c3 21e0 	strne.w	r2, [r3, #480]	; 0x1e0
  }
  return HAL_OK;
 800797e:	2000      	movne	r0, #0
 8007980:	e04f      	b.n	8007a22 <HAL_RCCEx_PeriphCLKConfig+0x1c6>
    __HAL_RCC_PLLI2S_DISABLE();
 8007982:	4b47      	ldr	r3, [pc, #284]	; (8007aa0 <HAL_RCCEx_PeriphCLKConfig+0x244>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8007984:	4e47      	ldr	r6, [pc, #284]	; (8007aa4 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLI2S_DISABLE();
 8007986:	2200      	movs	r2, #0
 8007988:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800798a:	f7fe fa2b 	bl	8005de4 <HAL_GetTick>
 800798e:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8007990:	6833      	ldr	r3, [r6, #0]
 8007992:	011f      	lsls	r7, r3, #4
 8007994:	d43f      	bmi.n	8007a16 <HAL_RCCEx_PeriphCLKConfig+0x1ba>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 8007996:	6821      	ldr	r1, [r4, #0]
 8007998:	07cd      	lsls	r5, r1, #31
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 800799a:	bf41      	itttt	mi
 800799c:	e9d4 2301 	ldrdmi	r2, r3, [r4, #4]
 80079a0:	071b      	lslmi	r3, r3, #28
 80079a2:	ea43 1382 	orrmi.w	r3, r3, r2, lsl #6
 80079a6:	f8c6 3084 	strmi.w	r3, [r6, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 80079aa:	0788      	lsls	r0, r1, #30
 80079ac:	d515      	bpl.n	80079da <HAL_RCCEx_PeriphCLKConfig+0x17e>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 80079ae:	4a3d      	ldr	r2, [pc, #244]	; (8007aa4 <HAL_RCCEx_PeriphCLKConfig+0x248>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 80079b0:	68e3      	ldr	r3, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 80079b2:	f8d2 0084 	ldr.w	r0, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 80079b6:	6865      	ldr	r5, [r4, #4]
 80079b8:	061b      	lsls	r3, r3, #24
 80079ba:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 80079be:	ea43 1385 	orr.w	r3, r3, r5, lsl #6
 80079c2:	4303      	orrs	r3, r0
 80079c4:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 80079c8:	f8d2 008c 	ldr.w	r0, [r2, #140]	; 0x8c
 80079cc:	69e3      	ldr	r3, [r4, #28]
 80079ce:	f020 001f 	bic.w	r0, r0, #31
 80079d2:	3b01      	subs	r3, #1
 80079d4:	4303      	orrs	r3, r0
 80079d6:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 80079da:	0649      	lsls	r1, r1, #25
 80079dc:	d50a      	bpl.n	80079f4 <HAL_RCCEx_PeriphCLKConfig+0x198>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 80079de:	68e3      	ldr	r3, [r4, #12]
 80079e0:	6862      	ldr	r2, [r4, #4]
 80079e2:	061b      	lsls	r3, r3, #24
 80079e4:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 80079e8:	68a2      	ldr	r2, [r4, #8]
 80079ea:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 80079ee:	4a2d      	ldr	r2, [pc, #180]	; (8007aa4 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 80079f0:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 80079f4:	4b2a      	ldr	r3, [pc, #168]	; (8007aa0 <HAL_RCCEx_PeriphCLKConfig+0x244>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 80079f6:	4e2b      	ldr	r6, [pc, #172]	; (8007aa4 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLI2S_ENABLE();
 80079f8:	2201      	movs	r2, #1
 80079fa:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 80079fc:	f7fe f9f2 	bl	8005de4 <HAL_GetTick>
 8007a00:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8007a02:	6833      	ldr	r3, [r6, #0]
 8007a04:	011a      	lsls	r2, r3, #4
 8007a06:	f53f af30 	bmi.w	800786a <HAL_RCCEx_PeriphCLKConfig+0xe>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 8007a0a:	f7fe f9eb 	bl	8005de4 <HAL_GetTick>
 8007a0e:	1b40      	subs	r0, r0, r5
 8007a10:	2802      	cmp	r0, #2
 8007a12:	d9f6      	bls.n	8007a02 <HAL_RCCEx_PeriphCLKConfig+0x1a6>
 8007a14:	e004      	b.n	8007a20 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 8007a16:	f7fe f9e5 	bl	8005de4 <HAL_GetTick>
 8007a1a:	1b40      	subs	r0, r0, r5
 8007a1c:	2802      	cmp	r0, #2
 8007a1e:	d9b7      	bls.n	8007990 <HAL_RCCEx_PeriphCLKConfig+0x134>
        return HAL_TIMEOUT;
 8007a20:	2003      	movs	r0, #3
}
 8007a22:	b003      	add	sp, #12
 8007a24:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 8007a26:	f7fe f9dd 	bl	8005de4 <HAL_GetTick>
 8007a2a:	1b80      	subs	r0, r0, r6
 8007a2c:	2802      	cmp	r0, #2
 8007a2e:	f67f af27 	bls.w	8007880 <HAL_RCCEx_PeriphCLKConfig+0x24>
 8007a32:	e7f5      	b.n	8007a20 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 8007a34:	f7fe f9d6 	bl	8005de4 <HAL_GetTick>
 8007a38:	1b40      	subs	r0, r0, r5
 8007a3a:	2802      	cmp	r0, #2
 8007a3c:	f67f af5b 	bls.w	80078f6 <HAL_RCCEx_PeriphCLKConfig+0x9a>
 8007a40:	e7ee      	b.n	8007a20 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 8007a42:	f7fe f9cf 	bl	8005de4 <HAL_GetTick>
 8007a46:	1b80      	subs	r0, r0, r6
 8007a48:	2802      	cmp	r0, #2
 8007a4a:	f67f af6f 	bls.w	800792c <HAL_RCCEx_PeriphCLKConfig+0xd0>
 8007a4e:	e7e7      	b.n	8007a20 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8007a50:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8007a52:	f402 7240 	and.w	r2, r2, #768	; 0x300
 8007a56:	4293      	cmp	r3, r2
 8007a58:	f43f af72 	beq.w	8007940 <HAL_RCCEx_PeriphCLKConfig+0xe4>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8007a5c:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 8007a5e:	4a10      	ldr	r2, [pc, #64]	; (8007aa0 <HAL_RCCEx_PeriphCLKConfig+0x244>)
 8007a60:	2101      	movs	r1, #1
 8007a62:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8007a66:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 8007a6a:	2100      	movs	r1, #0
 8007a6c:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      RCC->BDCR = tmpreg1;
 8007a70:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 8007a72:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8007a74:	07da      	lsls	r2, r3, #31
 8007a76:	f57f af63 	bpl.w	8007940 <HAL_RCCEx_PeriphCLKConfig+0xe4>
        tickstart = HAL_GetTick();
 8007a7a:	f7fe f9b3 	bl	8005de4 <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8007a7e:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 8007a82:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8007a84:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8007a86:	079b      	lsls	r3, r3, #30
 8007a88:	f53f af5a 	bmi.w	8007940 <HAL_RCCEx_PeriphCLKConfig+0xe4>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8007a8c:	f7fe f9aa 	bl	8005de4 <HAL_GetTick>
 8007a90:	1b80      	subs	r0, r0, r6
 8007a92:	42b8      	cmp	r0, r7
 8007a94:	d9f6      	bls.n	8007a84 <HAL_RCCEx_PeriphCLKConfig+0x228>
 8007a96:	e7c3      	b.n	8007a20 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8007a98:	6891      	ldr	r1, [r2, #8]
 8007a9a:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 8007a9e:	e75f      	b.n	8007960 <HAL_RCCEx_PeriphCLKConfig+0x104>
 8007aa0:	42470000 	.word	0x42470000
 8007aa4:	40023800 	.word	0x40023800
 8007aa8:	40007000 	.word	0x40007000
 8007aac:	42471000 	.word	0x42471000

08007ab0 <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure 
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{   
 8007ab0:	b538      	push	{r3, r4, r5, lr}
 8007ab2:	460d      	mov	r5, r1
  /* Check the SDRAM handle parameter */
  if(hsdram == NULL)
 8007ab4:	4604      	mov	r4, r0
 8007ab6:	b1c8      	cbz	r0, 8007aec <HAL_SDRAM_Init+0x3c>
  {
    return HAL_ERROR;
  }
  
  if(hsdram->State == HAL_SDRAM_STATE_RESET)
 8007ab8:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8007abc:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8007ac0:	b91b      	cbnz	r3, 8007aca <HAL_SDRAM_Init+0x1a>
  {  
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 8007ac2:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 8007ac6:	f7fa fad5 	bl	8002074 <HAL_SDRAM_MspInit>
#endif
  }
  
  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8007aca:	2302      	movs	r3, #2
 8007acc:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Initialize SDRAM control Interface */
  FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 8007ad0:	1d21      	adds	r1, r4, #4
 8007ad2:	6820      	ldr	r0, [r4, #0]
 8007ad4:	f000 fcba 	bl	800844c <FMC_SDRAM_Init>
  
  /* Initialize SDRAM timing Interface */
  FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank); 
 8007ad8:	6862      	ldr	r2, [r4, #4]
 8007ada:	6820      	ldr	r0, [r4, #0]
 8007adc:	4629      	mov	r1, r5
 8007ade:	f000 fceb 	bl	80084b8 <FMC_SDRAM_Timing_Init>
  
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 8007ae2:	2301      	movs	r3, #1
 8007ae4:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  return HAL_OK;
 8007ae8:	2000      	movs	r0, #0
}
 8007aea:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8007aec:	2001      	movs	r0, #1
 8007aee:	e7fc      	b.n	8007aea <HAL_SDRAM_Init+0x3a>

08007af0 <HAL_SDRAM_SendCommand>:
  * @param  Command SDRAM command structure
  * @param  Timeout Timeout duration
  * @retval HAL status
  */  
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 8007af0:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 8007af2:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8007af6:	2b02      	cmp	r3, #2
{
 8007af8:	4604      	mov	r4, r0
 8007afa:	460d      	mov	r5, r1
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 8007afc:	b2d8      	uxtb	r0, r3
 8007afe:	d00d      	beq.n	8007b1c <HAL_SDRAM_SendCommand+0x2c>
  {
    return HAL_BUSY;
  }
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8007b00:	2302      	movs	r3, #2
 8007b02:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Send SDRAM command */
  FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 8007b06:	6820      	ldr	r0, [r4, #0]
 8007b08:	f000 fd12 	bl	8008530 <FMC_SDRAM_SendCommand>
  
  /* Update the SDRAM controller state */
  if(Command->CommandMode == FMC_SDRAM_CMD_PALL)
 8007b0c:	682b      	ldr	r3, [r5, #0]
 8007b0e:	2b02      	cmp	r3, #2
  {
    hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 8007b10:	bf0c      	ite	eq
 8007b12:	2305      	moveq	r3, #5
  }
  else
  {
    hsdram->State = HAL_SDRAM_STATE_READY;
 8007b14:	2301      	movne	r3, #1
 8007b16:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  }
  
  return HAL_OK;  
 8007b1a:	2000      	movs	r0, #0
}
 8007b1c:	bd38      	pop	{r3, r4, r5, pc}

08007b1e <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.  
  * @param  RefreshRate The SDRAM refresh rate value       
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 8007b1e:	b510      	push	{r4, lr}
  /* Check the SDRAM controller state */
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 8007b20:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8007b24:	2b02      	cmp	r3, #2
{
 8007b26:	4604      	mov	r4, r0
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 8007b28:	b2d8      	uxtb	r0, r3
 8007b2a:	d009      	beq.n	8007b40 <HAL_SDRAM_ProgramRefreshRate+0x22>
  {
    return HAL_BUSY;
  } 
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8007b2c:	2302      	movs	r3, #2
 8007b2e:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Program the refresh rate */
  FMC_SDRAM_ProgramRefreshRate(hsdram->Instance ,RefreshRate);
 8007b32:	6820      	ldr	r0, [r4, #0]
 8007b34:	f000 fd23 	bl	800857e <FMC_SDRAM_ProgramRefreshRate>
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 8007b38:	2301      	movs	r3, #1
 8007b3a:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  return HAL_OK;   
 8007b3e:	2000      	movs	r0, #0
}
 8007b40:	bd10      	pop	{r4, pc}

08007b42 <SPI_WaitFlagStateUntilTimeout.constprop.0>:
  * @param  State flag state to check
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
 8007b42:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007b44:	4604      	mov	r4, r0
 8007b46:	460e      	mov	r6, r1
 8007b48:	4615      	mov	r5, r2
 8007b4a:	461f      	mov	r7, r3
                                                       uint32_t Timeout, uint32_t Tickstart)
{
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 8007b4c:	6822      	ldr	r2, [r4, #0]
 8007b4e:	6893      	ldr	r3, [r2, #8]
 8007b50:	ea36 0303 	bics.w	r3, r6, r3
 8007b54:	d001      	beq.n	8007b5a <SPI_WaitFlagStateUntilTimeout.constprop.0+0x18>
        return HAL_TIMEOUT;
      }
    }
  }

  return HAL_OK;
 8007b56:	2000      	movs	r0, #0
 8007b58:	e02d      	b.n	8007bb6 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x74>
    if (Timeout != HAL_MAX_DELAY)
 8007b5a:	1c6b      	adds	r3, r5, #1
 8007b5c:	d0f7      	beq.n	8007b4e <SPI_WaitFlagStateUntilTimeout.constprop.0+0xc>
      if (((HAL_GetTick() - Tickstart) >= Timeout) || (Timeout == 0U))
 8007b5e:	f7fe f941 	bl	8005de4 <HAL_GetTick>
 8007b62:	1bc0      	subs	r0, r0, r7
 8007b64:	4285      	cmp	r5, r0
 8007b66:	d8f1      	bhi.n	8007b4c <SPI_WaitFlagStateUntilTimeout.constprop.0+0xa>
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 8007b68:	6823      	ldr	r3, [r4, #0]
 8007b6a:	685a      	ldr	r2, [r3, #4]
 8007b6c:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 8007b70:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8007b72:	6862      	ldr	r2, [r4, #4]
 8007b74:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 8007b78:	d10a      	bne.n	8007b90 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x4e>
 8007b7a:	68a2      	ldr	r2, [r4, #8]
 8007b7c:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 8007b80:	d002      	beq.n	8007b88 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x46>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8007b82:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 8007b86:	d103      	bne.n	8007b90 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x4e>
          __HAL_SPI_DISABLE(hspi);
 8007b88:	681a      	ldr	r2, [r3, #0]
 8007b8a:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8007b8e:	601a      	str	r2, [r3, #0]
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 8007b90:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8007b92:	f5b2 5f00 	cmp.w	r2, #8192	; 0x2000
 8007b96:	d107      	bne.n	8007ba8 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x66>
          SPI_RESET_CRC(hspi);
 8007b98:	681a      	ldr	r2, [r3, #0]
 8007b9a:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8007b9e:	601a      	str	r2, [r3, #0]
 8007ba0:	681a      	ldr	r2, [r3, #0]
 8007ba2:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8007ba6:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 8007ba8:	2301      	movs	r3, #1
 8007baa:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
        __HAL_UNLOCK(hspi);
 8007bae:	2300      	movs	r3, #0
 8007bb0:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
 8007bb4:	2003      	movs	r0, #3
}
 8007bb6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08007bb8 <SPI_EndRxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t Tickstart)
{
 8007bb8:	b538      	push	{r3, r4, r5, lr}
 8007bba:	4613      	mov	r3, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8007bbc:	6842      	ldr	r2, [r0, #4]
 8007bbe:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 8007bc2:	4604      	mov	r4, r0
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8007bc4:	d11f      	bne.n	8007c06 <SPI_EndRxTransaction+0x4e>
 8007bc6:	6882      	ldr	r2, [r0, #8]
 8007bc8:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 8007bcc:	d002      	beq.n	8007bd4 <SPI_EndRxTransaction+0x1c>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8007bce:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 8007bd2:	d107      	bne.n	8007be4 <SPI_EndRxTransaction+0x2c>
  {
    /* Disable SPI peripheral */
    __HAL_SPI_DISABLE(hspi);
 8007bd4:	6825      	ldr	r5, [r4, #0]
 8007bd6:	6828      	ldr	r0, [r5, #0]
  }

  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
  {
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 8007bd8:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
    __HAL_SPI_DISABLE(hspi);
 8007bdc:	f020 0040 	bic.w	r0, r0, #64	; 0x40
 8007be0:	6028      	str	r0, [r5, #0]
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 8007be2:	d007      	beq.n	8007bf4 <SPI_EndRxTransaction+0x3c>
    {
      /* Control the BSY flag */
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8007be4:	460a      	mov	r2, r1
 8007be6:	2180      	movs	r1, #128	; 0x80
 8007be8:	4620      	mov	r0, r4
 8007bea:	f7ff ffaa 	bl	8007b42 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 8007bee:	b920      	cbnz	r0, 8007bfa <SPI_EndRxTransaction+0x42>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
      return HAL_TIMEOUT;
    }
  }
  return HAL_OK;
 8007bf0:	2000      	movs	r0, #0
}
 8007bf2:	bd38      	pop	{r3, r4, r5, pc}
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 8007bf4:	460a      	mov	r2, r1
 8007bf6:	2101      	movs	r1, #1
 8007bf8:	e7f6      	b.n	8007be8 <SPI_EndRxTransaction+0x30>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8007bfa:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8007bfc:	f043 0320 	orr.w	r3, r3, #32
 8007c00:	6563      	str	r3, [r4, #84]	; 0x54
      return HAL_TIMEOUT;
 8007c02:	2003      	movs	r0, #3
 8007c04:	e7f5      	b.n	8007bf2 <SPI_EndRxTransaction+0x3a>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 8007c06:	460a      	mov	r2, r1
 8007c08:	2101      	movs	r1, #1
 8007c0a:	e7ee      	b.n	8007bea <SPI_EndRxTransaction+0x32>

08007c0c <SPI_EndRxTxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
 8007c0c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8007c0e:	4613      	mov	r3, r2
  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8007c10:	4a12      	ldr	r2, [pc, #72]	; (8007c5c <SPI_EndRxTxTransaction+0x50>)
 8007c12:	6815      	ldr	r5, [r2, #0]
 8007c14:	4a12      	ldr	r2, [pc, #72]	; (8007c60 <SPI_EndRxTxTransaction+0x54>)
 8007c16:	fbb5 f5f2 	udiv	r5, r5, r2
 8007c1a:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8007c1e:	4355      	muls	r5, r2
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8007c20:	6842      	ldr	r2, [r0, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8007c22:	9501      	str	r5, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8007c24:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 8007c28:	4604      	mov	r4, r0
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8007c2a:	d10b      	bne.n	8007c44 <SPI_EndRxTxTransaction+0x38>
  {
    /* Control the BSY flag */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8007c2c:	460a      	mov	r2, r1
 8007c2e:	2180      	movs	r1, #128	; 0x80
 8007c30:	f7ff ff87 	bl	8007b42 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 8007c34:	b178      	cbz	r0, 8007c56 <SPI_EndRxTxTransaction+0x4a>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8007c36:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8007c38:	f043 0320 	orr.w	r3, r3, #32
 8007c3c:	6563      	str	r3, [r4, #84]	; 0x54
      return HAL_TIMEOUT;
 8007c3e:	2003      	movs	r0, #3
      count--;
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
  }

  return HAL_OK;
}
 8007c40:	b003      	add	sp, #12
 8007c42:	bd30      	pop	{r4, r5, pc}
      if (count == 0U)
 8007c44:	9b01      	ldr	r3, [sp, #4]
 8007c46:	b133      	cbz	r3, 8007c56 <SPI_EndRxTxTransaction+0x4a>
      count--;
 8007c48:	9b01      	ldr	r3, [sp, #4]
 8007c4a:	3b01      	subs	r3, #1
 8007c4c:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 8007c4e:	6823      	ldr	r3, [r4, #0]
 8007c50:	689b      	ldr	r3, [r3, #8]
 8007c52:	061b      	lsls	r3, r3, #24
 8007c54:	d4f6      	bmi.n	8007c44 <SPI_EndRxTxTransaction+0x38>
  return HAL_OK;
 8007c56:	2000      	movs	r0, #0
 8007c58:	e7f2      	b.n	8007c40 <SPI_EndRxTxTransaction+0x34>
 8007c5a:	bf00      	nop
 8007c5c:	2000007c 	.word	0x2000007c
 8007c60:	016e3600 	.word	0x016e3600

08007c64 <HAL_SPI_Init>:
{
 8007c64:	b510      	push	{r4, lr}
  if (hspi == NULL)
 8007c66:	4604      	mov	r4, r0
 8007c68:	2800      	cmp	r0, #0
 8007c6a:	d036      	beq.n	8007cda <HAL_SPI_Init+0x76>
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8007c6c:	2300      	movs	r3, #0
 8007c6e:	6283      	str	r3, [r0, #40]	; 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 8007c70:	f890 3051 	ldrb.w	r3, [r0, #81]	; 0x51
 8007c74:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8007c78:	b91b      	cbnz	r3, 8007c82 <HAL_SPI_Init+0x1e>
    hspi->Lock = HAL_UNLOCKED;
 8007c7a:	f880 2050 	strb.w	r2, [r0, #80]	; 0x50
    HAL_SPI_MspInit(hspi);
 8007c7e:	f7fa f9a1 	bl	8001fc4 <HAL_SPI_MspInit>
  __HAL_SPI_DISABLE(hspi);
 8007c82:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, (hspi->Init.Mode | hspi->Init.Direction | hspi->Init.DataSize |
 8007c84:	69a2      	ldr	r2, [r4, #24]
  hspi->State = HAL_SPI_STATE_BUSY;
 8007c86:	2302      	movs	r3, #2
 8007c88:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_SPI_DISABLE(hspi);
 8007c8c:	680b      	ldr	r3, [r1, #0]
 8007c8e:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8007c92:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, (hspi->Init.Mode | hspi->Init.Direction | hspi->Init.DataSize |
 8007c94:	e9d4 3001 	ldrd	r3, r0, [r4, #4]
 8007c98:	4303      	orrs	r3, r0
 8007c9a:	68e0      	ldr	r0, [r4, #12]
 8007c9c:	4303      	orrs	r3, r0
 8007c9e:	6920      	ldr	r0, [r4, #16]
 8007ca0:	4303      	orrs	r3, r0
 8007ca2:	6960      	ldr	r0, [r4, #20]
 8007ca4:	4303      	orrs	r3, r0
 8007ca6:	69e0      	ldr	r0, [r4, #28]
 8007ca8:	4303      	orrs	r3, r0
 8007caa:	6a20      	ldr	r0, [r4, #32]
 8007cac:	4303      	orrs	r3, r0
 8007cae:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8007cb0:	4303      	orrs	r3, r0
 8007cb2:	f402 7000 	and.w	r0, r2, #512	; 0x200
 8007cb6:	4303      	orrs	r3, r0
 8007cb8:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | hspi->Init.TIMode));
 8007cba:	0c12      	lsrs	r2, r2, #16
 8007cbc:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8007cbe:	f002 0204 	and.w	r2, r2, #4
 8007cc2:	431a      	orrs	r2, r3
 8007cc4:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 8007cc6:	69cb      	ldr	r3, [r1, #28]
 8007cc8:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8007ccc:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8007cce:	2000      	movs	r0, #0
  hspi->State     = HAL_SPI_STATE_READY;
 8007cd0:	2301      	movs	r3, #1
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8007cd2:	6560      	str	r0, [r4, #84]	; 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 8007cd4:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
}
 8007cd8:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8007cda:	2001      	movs	r0, #1
 8007cdc:	e7fc      	b.n	8007cd8 <HAL_SPI_Init+0x74>

08007cde <HAL_SPI_Transmit>:
{
 8007cde:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8007ce2:	461e      	mov	r6, r3
  __HAL_LOCK(hspi);
 8007ce4:	f890 3050 	ldrb.w	r3, [r0, #80]	; 0x50
 8007ce8:	2b01      	cmp	r3, #1
{
 8007cea:	4604      	mov	r4, r0
 8007cec:	460d      	mov	r5, r1
 8007cee:	4617      	mov	r7, r2
  __HAL_LOCK(hspi);
 8007cf0:	f000 809d 	beq.w	8007e2e <HAL_SPI_Transmit+0x150>
 8007cf4:	2301      	movs	r3, #1
 8007cf6:	f880 3050 	strb.w	r3, [r0, #80]	; 0x50
  tickstart = HAL_GetTick();
 8007cfa:	f7fe f873 	bl	8005de4 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 8007cfe:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 8007d02:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 8007d04:	4680      	mov	r8, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 8007d06:	b2d8      	uxtb	r0, r3
 8007d08:	f040 808f 	bne.w	8007e2a <HAL_SPI_Transmit+0x14c>
  if ((pData == NULL) || (Size == 0U))
 8007d0c:	2d00      	cmp	r5, #0
 8007d0e:	d05a      	beq.n	8007dc6 <HAL_SPI_Transmit+0xe8>
 8007d10:	2f00      	cmp	r7, #0
 8007d12:	d058      	beq.n	8007dc6 <HAL_SPI_Transmit+0xe8>
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 8007d14:	2303      	movs	r3, #3
 8007d16:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8007d1a:	68a2      	ldr	r2, [r4, #8]
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 8007d1c:	6325      	str	r5, [r4, #48]	; 0x30
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8007d1e:	2300      	movs	r3, #0
 8007d20:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->RxISR       = NULL;
 8007d22:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->TxXferCount = Size;
 8007d26:	86e7      	strh	r7, [r4, #54]	; 0x36
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 8007d28:	63a3      	str	r3, [r4, #56]	; 0x38
  hspi->RxXferCount = 0U;
 8007d2a:	87e3      	strh	r3, [r4, #62]	; 0x3e
  hspi->RxXferSize  = 0U;
 8007d2c:	87a3      	strh	r3, [r4, #60]	; 0x3c
    SPI_1LINE_TX(hspi);
 8007d2e:	6823      	ldr	r3, [r4, #0]
  hspi->TxXferSize  = Size;
 8007d30:	86a7      	strh	r7, [r4, #52]	; 0x34
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8007d32:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
    SPI_1LINE_TX(hspi);
 8007d36:	bf08      	it	eq
 8007d38:	681a      	ldreq	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8007d3a:	68e1      	ldr	r1, [r4, #12]
    SPI_1LINE_TX(hspi);
 8007d3c:	bf04      	itt	eq
 8007d3e:	f442 4280 	orreq.w	r2, r2, #16384	; 0x4000
 8007d42:	601a      	streq	r2, [r3, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8007d44:	681a      	ldr	r2, [r3, #0]
 8007d46:	0652      	lsls	r2, r2, #25
    __HAL_SPI_ENABLE(hspi);
 8007d48:	bf5e      	ittt	pl
 8007d4a:	681a      	ldrpl	r2, [r3, #0]
 8007d4c:	f042 0240 	orrpl.w	r2, r2, #64	; 0x40
 8007d50:	601a      	strpl	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8007d52:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8007d56:	6862      	ldr	r2, [r4, #4]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8007d58:	d141      	bne.n	8007dde <HAL_SPI_Transmit+0x100>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8007d5a:	b10a      	cbz	r2, 8007d60 <HAL_SPI_Transmit+0x82>
 8007d5c:	2f01      	cmp	r7, #1
 8007d5e:	d107      	bne.n	8007d70 <HAL_SPI_Transmit+0x92>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8007d60:	f835 2b02 	ldrh.w	r2, [r5], #2
 8007d64:	60da      	str	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8007d66:	6325      	str	r5, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8007d68:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007d6a:	3b01      	subs	r3, #1
 8007d6c:	b29b      	uxth	r3, r3
 8007d6e:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 8007d70:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007d72:	b29b      	uxth	r3, r3
 8007d74:	b9a3      	cbnz	r3, 8007da0 <HAL_SPI_Transmit+0xc2>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8007d76:	4642      	mov	r2, r8
 8007d78:	4631      	mov	r1, r6
 8007d7a:	4620      	mov	r0, r4
 8007d7c:	f7ff ff46 	bl	8007c0c <SPI_EndRxTxTransaction>
 8007d80:	2800      	cmp	r0, #0
 8007d82:	d14f      	bne.n	8007e24 <HAL_SPI_Transmit+0x146>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 8007d84:	68a3      	ldr	r3, [r4, #8]
 8007d86:	b933      	cbnz	r3, 8007d96 <HAL_SPI_Transmit+0xb8>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8007d88:	9301      	str	r3, [sp, #4]
 8007d8a:	6823      	ldr	r3, [r4, #0]
 8007d8c:	68da      	ldr	r2, [r3, #12]
 8007d8e:	9201      	str	r2, [sp, #4]
 8007d90:	689b      	ldr	r3, [r3, #8]
 8007d92:	9301      	str	r3, [sp, #4]
 8007d94:	9b01      	ldr	r3, [sp, #4]
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8007d96:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 8007d98:	3800      	subs	r0, #0
 8007d9a:	bf18      	it	ne
 8007d9c:	2001      	movne	r0, #1
error:
 8007d9e:	e012      	b.n	8007dc6 <HAL_SPI_Transmit+0xe8>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8007da0:	6822      	ldr	r2, [r4, #0]
 8007da2:	6893      	ldr	r3, [r2, #8]
 8007da4:	0798      	lsls	r0, r3, #30
 8007da6:	d505      	bpl.n	8007db4 <HAL_SPI_Transmit+0xd6>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8007da8:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8007daa:	f833 1b02 	ldrh.w	r1, [r3], #2
 8007dae:	60d1      	str	r1, [r2, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 8007db0:	6323      	str	r3, [r4, #48]	; 0x30
 8007db2:	e7d9      	b.n	8007d68 <HAL_SPI_Transmit+0x8a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8007db4:	f7fe f816 	bl	8005de4 <HAL_GetTick>
 8007db8:	eba0 0008 	sub.w	r0, r0, r8
 8007dbc:	42b0      	cmp	r0, r6
 8007dbe:	d30b      	bcc.n	8007dd8 <HAL_SPI_Transmit+0xfa>
 8007dc0:	1c71      	adds	r1, r6, #1
 8007dc2:	d0d5      	beq.n	8007d70 <HAL_SPI_Transmit+0x92>
          errorcode = HAL_TIMEOUT;
 8007dc4:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 8007dc6:	2301      	movs	r3, #1
 8007dc8:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 8007dcc:	2300      	movs	r3, #0
 8007dce:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 8007dd2:	b002      	add	sp, #8
 8007dd4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8007dd8:	2e00      	cmp	r6, #0
 8007dda:	d1c9      	bne.n	8007d70 <HAL_SPI_Transmit+0x92>
 8007ddc:	e7f2      	b.n	8007dc4 <HAL_SPI_Transmit+0xe6>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8007dde:	b10a      	cbz	r2, 8007de4 <HAL_SPI_Transmit+0x106>
 8007de0:	2f01      	cmp	r7, #1
 8007de2:	d108      	bne.n	8007df6 <HAL_SPI_Transmit+0x118>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8007de4:	782a      	ldrb	r2, [r5, #0]
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8007de6:	731a      	strb	r2, [r3, #12]
        hspi->pTxBuffPtr += sizeof(uint8_t);
 8007de8:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8007dea:	3301      	adds	r3, #1
 8007dec:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8007dee:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007df0:	3b01      	subs	r3, #1
 8007df2:	b29b      	uxth	r3, r3
 8007df4:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 8007df6:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007df8:	b29b      	uxth	r3, r3
 8007dfa:	2b00      	cmp	r3, #0
 8007dfc:	d0bb      	beq.n	8007d76 <HAL_SPI_Transmit+0x98>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8007dfe:	6823      	ldr	r3, [r4, #0]
 8007e00:	689a      	ldr	r2, [r3, #8]
 8007e02:	0792      	lsls	r2, r2, #30
 8007e04:	d502      	bpl.n	8007e0c <HAL_SPI_Transmit+0x12e>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8007e06:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8007e08:	7812      	ldrb	r2, [r2, #0]
 8007e0a:	e7ec      	b.n	8007de6 <HAL_SPI_Transmit+0x108>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8007e0c:	f7fd ffea 	bl	8005de4 <HAL_GetTick>
 8007e10:	eba0 0008 	sub.w	r0, r0, r8
 8007e14:	42b0      	cmp	r0, r6
 8007e16:	d302      	bcc.n	8007e1e <HAL_SPI_Transmit+0x140>
 8007e18:	1c73      	adds	r3, r6, #1
 8007e1a:	d0ec      	beq.n	8007df6 <HAL_SPI_Transmit+0x118>
 8007e1c:	e7d2      	b.n	8007dc4 <HAL_SPI_Transmit+0xe6>
 8007e1e:	2e00      	cmp	r6, #0
 8007e20:	d1e9      	bne.n	8007df6 <HAL_SPI_Transmit+0x118>
 8007e22:	e7cf      	b.n	8007dc4 <HAL_SPI_Transmit+0xe6>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8007e24:	2320      	movs	r3, #32
 8007e26:	6563      	str	r3, [r4, #84]	; 0x54
 8007e28:	e7ac      	b.n	8007d84 <HAL_SPI_Transmit+0xa6>
    errorcode = HAL_BUSY;
 8007e2a:	2002      	movs	r0, #2
 8007e2c:	e7cb      	b.n	8007dc6 <HAL_SPI_Transmit+0xe8>
  __HAL_LOCK(hspi);
 8007e2e:	2002      	movs	r0, #2
 8007e30:	e7cf      	b.n	8007dd2 <HAL_SPI_Transmit+0xf4>

08007e32 <HAL_SPI_TransmitReceive>:
{
 8007e32:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8007e36:	461e      	mov	r6, r3
  __HAL_LOCK(hspi);
 8007e38:	f890 3050 	ldrb.w	r3, [r0, #80]	; 0x50
{
 8007e3c:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  __HAL_LOCK(hspi);
 8007e3e:	2b01      	cmp	r3, #1
{
 8007e40:	4604      	mov	r4, r0
 8007e42:	460d      	mov	r5, r1
 8007e44:	4691      	mov	r9, r2
  __HAL_LOCK(hspi);
 8007e46:	f000 80e6 	beq.w	8008016 <HAL_SPI_TransmitReceive+0x1e4>
 8007e4a:	2301      	movs	r3, #1
 8007e4c:	f880 3050 	strb.w	r3, [r0, #80]	; 0x50
  tickstart = HAL_GetTick();
 8007e50:	f7fd ffc8 	bl	8005de4 <HAL_GetTick>
  tmp_state           = hspi->State;
 8007e54:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  tmp_mode            = hspi->Init.Mode;
 8007e58:	6862      	ldr	r2, [r4, #4]
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 8007e5a:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 8007e5c:	4680      	mov	r8, r0
  tmp_state           = hspi->State;
 8007e5e:	b2d9      	uxtb	r1, r3
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 8007e60:	d00a      	beq.n	8007e78 <HAL_SPI_TransmitReceive+0x46>
 8007e62:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 8007e66:	f040 80d4 	bne.w	8008012 <HAL_SPI_TransmitReceive+0x1e0>
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 8007e6a:	68a3      	ldr	r3, [r4, #8]
 8007e6c:	2b00      	cmp	r3, #0
 8007e6e:	f040 80d0 	bne.w	8008012 <HAL_SPI_TransmitReceive+0x1e0>
 8007e72:	2904      	cmp	r1, #4
 8007e74:	f040 80cd 	bne.w	8008012 <HAL_SPI_TransmitReceive+0x1e0>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 8007e78:	2d00      	cmp	r5, #0
 8007e7a:	d040      	beq.n	8007efe <HAL_SPI_TransmitReceive+0xcc>
 8007e7c:	f1b9 0f00 	cmp.w	r9, #0
 8007e80:	d03d      	beq.n	8007efe <HAL_SPI_TransmitReceive+0xcc>
 8007e82:	2e00      	cmp	r6, #0
 8007e84:	d03b      	beq.n	8007efe <HAL_SPI_TransmitReceive+0xcc>
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 8007e86:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 8007e8a:	f8c4 9038 	str.w	r9, [r4, #56]	; 0x38
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 8007e8e:	2b04      	cmp	r3, #4
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 8007e90:	bf1c      	itt	ne
 8007e92:	2305      	movne	r3, #5
 8007e94:	f884 3051 	strbne.w	r3, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8007e98:	2300      	movs	r3, #0
 8007e9a:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->TxISR       = NULL;
 8007e9c:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8007ea0:	6823      	ldr	r3, [r4, #0]
  hspi->RxXferCount = Size;
 8007ea2:	87e6      	strh	r6, [r4, #62]	; 0x3e
  hspi->TxXferCount = Size;
 8007ea4:	86e6      	strh	r6, [r4, #54]	; 0x36
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8007ea6:	6819      	ldr	r1, [r3, #0]
  hspi->RxXferSize  = Size;
 8007ea8:	87a6      	strh	r6, [r4, #60]	; 0x3c
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8007eaa:	0649      	lsls	r1, r1, #25
    __HAL_SPI_ENABLE(hspi);
 8007eac:	bf58      	it	pl
 8007eae:	6819      	ldrpl	r1, [r3, #0]
  hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 8007eb0:	6325      	str	r5, [r4, #48]	; 0x30
    __HAL_SPI_ENABLE(hspi);
 8007eb2:	bf58      	it	pl
 8007eb4:	f041 0140 	orrpl.w	r1, r1, #64	; 0x40
  hspi->TxXferSize  = Size;
 8007eb8:	86a6      	strh	r6, [r4, #52]	; 0x34
    __HAL_SPI_ENABLE(hspi);
 8007eba:	bf58      	it	pl
 8007ebc:	6019      	strpl	r1, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8007ebe:	68e1      	ldr	r1, [r4, #12]
 8007ec0:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
 8007ec4:	d152      	bne.n	8007f6c <HAL_SPI_TransmitReceive+0x13a>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8007ec6:	b10a      	cbz	r2, 8007ecc <HAL_SPI_TransmitReceive+0x9a>
 8007ec8:	2e01      	cmp	r6, #1
 8007eca:	d107      	bne.n	8007edc <HAL_SPI_TransmitReceive+0xaa>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8007ecc:	f835 2b02 	ldrh.w	r2, [r5], #2
 8007ed0:	60da      	str	r2, [r3, #12]
      hspi->TxXferCount--;
 8007ed2:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8007ed4:	6325      	str	r5, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 8007ed6:	3b01      	subs	r3, #1
 8007ed8:	b29b      	uxth	r3, r3
 8007eda:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 1U;
 8007edc:	2501      	movs	r5, #1
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8007ede:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007ee0:	b29b      	uxth	r3, r3
 8007ee2:	b973      	cbnz	r3, 8007f02 <HAL_SPI_TransmitReceive+0xd0>
 8007ee4:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8007ee6:	b29b      	uxth	r3, r3
 8007ee8:	b95b      	cbnz	r3, 8007f02 <HAL_SPI_TransmitReceive+0xd0>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8007eea:	4642      	mov	r2, r8
 8007eec:	4639      	mov	r1, r7
 8007eee:	4620      	mov	r0, r4
 8007ef0:	f7ff fe8c 	bl	8007c0c <SPI_EndRxTxTransaction>
 8007ef4:	2800      	cmp	r0, #0
 8007ef6:	f000 8081 	beq.w	8007ffc <HAL_SPI_TransmitReceive+0x1ca>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8007efa:	2320      	movs	r3, #32
 8007efc:	6563      	str	r3, [r4, #84]	; 0x54
    errorcode = HAL_ERROR;
 8007efe:	2001      	movs	r0, #1
 8007f00:	e02b      	b.n	8007f5a <HAL_SPI_TransmitReceive+0x128>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 8007f02:	6821      	ldr	r1, [r4, #0]
 8007f04:	688b      	ldr	r3, [r1, #8]
 8007f06:	079e      	lsls	r6, r3, #30
 8007f08:	d50d      	bpl.n	8007f26 <HAL_SPI_TransmitReceive+0xf4>
 8007f0a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007f0c:	b29b      	uxth	r3, r3
 8007f0e:	b153      	cbz	r3, 8007f26 <HAL_SPI_TransmitReceive+0xf4>
 8007f10:	b14d      	cbz	r5, 8007f26 <HAL_SPI_TransmitReceive+0xf4>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8007f12:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8007f14:	f833 2b02 	ldrh.w	r2, [r3], #2
 8007f18:	60ca      	str	r2, [r1, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 8007f1a:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8007f1c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007f1e:	3b01      	subs	r3, #1
 8007f20:	b29b      	uxth	r3, r3
 8007f22:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 8007f24:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 8007f26:	688a      	ldr	r2, [r1, #8]
 8007f28:	f012 0201 	ands.w	r2, r2, #1
 8007f2c:	d00c      	beq.n	8007f48 <HAL_SPI_TransmitReceive+0x116>
 8007f2e:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8007f30:	b29b      	uxth	r3, r3
 8007f32:	b14b      	cbz	r3, 8007f48 <HAL_SPI_TransmitReceive+0x116>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 8007f34:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8007f36:	68c9      	ldr	r1, [r1, #12]
 8007f38:	f823 1b02 	strh.w	r1, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 8007f3c:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 8007f3e:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8007f40:	3b01      	subs	r3, #1
 8007f42:	b29b      	uxth	r3, r3
 8007f44:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 8007f46:	4615      	mov	r5, r2
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 8007f48:	f7fd ff4c 	bl	8005de4 <HAL_GetTick>
 8007f4c:	eba0 0008 	sub.w	r0, r0, r8
 8007f50:	42b8      	cmp	r0, r7
 8007f52:	d3c4      	bcc.n	8007ede <HAL_SPI_TransmitReceive+0xac>
 8007f54:	1c78      	adds	r0, r7, #1
 8007f56:	d0c2      	beq.n	8007ede <HAL_SPI_TransmitReceive+0xac>
        errorcode = HAL_TIMEOUT;
 8007f58:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 8007f5a:	2301      	movs	r3, #1
 8007f5c:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 8007f60:	2300      	movs	r3, #0
 8007f62:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 8007f66:	b003      	add	sp, #12
 8007f68:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8007f6c:	b10a      	cbz	r2, 8007f72 <HAL_SPI_TransmitReceive+0x140>
 8007f6e:	2e01      	cmp	r6, #1
 8007f70:	d108      	bne.n	8007f84 <HAL_SPI_TransmitReceive+0x152>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8007f72:	782a      	ldrb	r2, [r5, #0]
 8007f74:	731a      	strb	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint8_t);
 8007f76:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8007f78:	3301      	adds	r3, #1
 8007f7a:	6323      	str	r3, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 8007f7c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007f7e:	3b01      	subs	r3, #1
 8007f80:	b29b      	uxth	r3, r3
 8007f82:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 1U;
 8007f84:	2501      	movs	r5, #1
 8007f86:	e02d      	b.n	8007fe4 <HAL_SPI_TransmitReceive+0x1b2>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 8007f88:	6822      	ldr	r2, [r4, #0]
 8007f8a:	6893      	ldr	r3, [r2, #8]
 8007f8c:	0799      	lsls	r1, r3, #30
 8007f8e:	d50e      	bpl.n	8007fae <HAL_SPI_TransmitReceive+0x17c>
 8007f90:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007f92:	b29b      	uxth	r3, r3
 8007f94:	b15b      	cbz	r3, 8007fae <HAL_SPI_TransmitReceive+0x17c>
 8007f96:	b155      	cbz	r5, 8007fae <HAL_SPI_TransmitReceive+0x17c>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 8007f98:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8007f9a:	781b      	ldrb	r3, [r3, #0]
 8007f9c:	7313      	strb	r3, [r2, #12]
        hspi->pTxBuffPtr++;
 8007f9e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8007fa0:	3301      	adds	r3, #1
 8007fa2:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8007fa4:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007fa6:	3b01      	subs	r3, #1
 8007fa8:	b29b      	uxth	r3, r3
 8007faa:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 8007fac:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 8007fae:	6822      	ldr	r2, [r4, #0]
 8007fb0:	6891      	ldr	r1, [r2, #8]
 8007fb2:	f011 0101 	ands.w	r1, r1, #1
 8007fb6:	d00d      	beq.n	8007fd4 <HAL_SPI_TransmitReceive+0x1a2>
 8007fb8:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8007fba:	b29b      	uxth	r3, r3
 8007fbc:	b153      	cbz	r3, 8007fd4 <HAL_SPI_TransmitReceive+0x1a2>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 8007fbe:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8007fc0:	68d2      	ldr	r2, [r2, #12]
 8007fc2:	701a      	strb	r2, [r3, #0]
        hspi->pRxBuffPtr++;
 8007fc4:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8007fc6:	3301      	adds	r3, #1
 8007fc8:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 8007fca:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8007fcc:	3b01      	subs	r3, #1
 8007fce:	b29b      	uxth	r3, r3
 8007fd0:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 8007fd2:	460d      	mov	r5, r1
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 8007fd4:	f7fd ff06 	bl	8005de4 <HAL_GetTick>
 8007fd8:	eba0 0008 	sub.w	r0, r0, r8
 8007fdc:	42b8      	cmp	r0, r7
 8007fde:	d30a      	bcc.n	8007ff6 <HAL_SPI_TransmitReceive+0x1c4>
 8007fe0:	1c7b      	adds	r3, r7, #1
 8007fe2:	d1b9      	bne.n	8007f58 <HAL_SPI_TransmitReceive+0x126>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8007fe4:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007fe6:	b29b      	uxth	r3, r3
 8007fe8:	2b00      	cmp	r3, #0
 8007fea:	d1cd      	bne.n	8007f88 <HAL_SPI_TransmitReceive+0x156>
 8007fec:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8007fee:	b29b      	uxth	r3, r3
 8007ff0:	2b00      	cmp	r3, #0
 8007ff2:	d1c9      	bne.n	8007f88 <HAL_SPI_TransmitReceive+0x156>
 8007ff4:	e779      	b.n	8007eea <HAL_SPI_TransmitReceive+0xb8>
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 8007ff6:	2f00      	cmp	r7, #0
 8007ff8:	d1f4      	bne.n	8007fe4 <HAL_SPI_TransmitReceive+0x1b2>
 8007ffa:	e7ad      	b.n	8007f58 <HAL_SPI_TransmitReceive+0x126>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 8007ffc:	68a3      	ldr	r3, [r4, #8]
 8007ffe:	2b00      	cmp	r3, #0
 8008000:	d1ab      	bne.n	8007f5a <HAL_SPI_TransmitReceive+0x128>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8008002:	6823      	ldr	r3, [r4, #0]
 8008004:	9001      	str	r0, [sp, #4]
 8008006:	68da      	ldr	r2, [r3, #12]
 8008008:	9201      	str	r2, [sp, #4]
 800800a:	689b      	ldr	r3, [r3, #8]
 800800c:	9301      	str	r3, [sp, #4]
 800800e:	9b01      	ldr	r3, [sp, #4]
 8008010:	e7a3      	b.n	8007f5a <HAL_SPI_TransmitReceive+0x128>
    errorcode = HAL_BUSY;
 8008012:	2002      	movs	r0, #2
 8008014:	e7a1      	b.n	8007f5a <HAL_SPI_TransmitReceive+0x128>
  __HAL_LOCK(hspi);
 8008016:	2002      	movs	r0, #2
 8008018:	e7a5      	b.n	8007f66 <HAL_SPI_TransmitReceive+0x134>

0800801a <HAL_SPI_Receive>:
{
 800801a:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800801e:	461d      	mov	r5, r3
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 8008020:	6843      	ldr	r3, [r0, #4]
 8008022:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
{
 8008026:	4604      	mov	r4, r0
 8008028:	4689      	mov	r9, r1
 800802a:	4617      	mov	r7, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800802c:	d10c      	bne.n	8008048 <HAL_SPI_Receive+0x2e>
 800802e:	6883      	ldr	r3, [r0, #8]
 8008030:	b953      	cbnz	r3, 8008048 <HAL_SPI_Receive+0x2e>
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 8008032:	2304      	movs	r3, #4
 8008034:	f880 3051 	strb.w	r3, [r0, #81]	; 0x51
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 8008038:	4613      	mov	r3, r2
 800803a:	9500      	str	r5, [sp, #0]
 800803c:	460a      	mov	r2, r1
 800803e:	f7ff fef8 	bl	8007e32 <HAL_SPI_TransmitReceive>
}
 8008042:	b003      	add	sp, #12
 8008044:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  __HAL_LOCK(hspi);
 8008048:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 800804c:	2b01      	cmp	r3, #1
 800804e:	f000 8084 	beq.w	800815a <HAL_SPI_Receive+0x140>
 8008052:	2301      	movs	r3, #1
 8008054:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 8008058:	f7fd fec4 	bl	8005de4 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800805c:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 8008060:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 8008062:	4680      	mov	r8, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 8008064:	b2d8      	uxtb	r0, r3
 8008066:	d176      	bne.n	8008156 <HAL_SPI_Receive+0x13c>
  if ((pData == NULL) || (Size == 0U))
 8008068:	f1b9 0f00 	cmp.w	r9, #0
 800806c:	d05a      	beq.n	8008124 <HAL_SPI_Receive+0x10a>
 800806e:	2f00      	cmp	r7, #0
 8008070:	d058      	beq.n	8008124 <HAL_SPI_Receive+0x10a>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8008072:	68a2      	ldr	r2, [r4, #8]
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 8008074:	f8c4 9038 	str.w	r9, [r4, #56]	; 0x38
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 8008078:	2304      	movs	r3, #4
 800807a:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800807e:	2600      	movs	r6, #0
    SPI_1LINE_RX(hspi);
 8008080:	6823      	ldr	r3, [r4, #0]
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8008082:	6566      	str	r6, [r4, #84]	; 0x54
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8008084:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
  hspi->RxXferCount = Size;
 8008088:	87e7      	strh	r7, [r4, #62]	; 0x3e
  hspi->TxXferCount = 0U;
 800808a:	86e6      	strh	r6, [r4, #54]	; 0x36
    SPI_1LINE_RX(hspi);
 800808c:	bf08      	it	eq
 800808e:	681a      	ldreq	r2, [r3, #0]
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 8008090:	6326      	str	r6, [r4, #48]	; 0x30
    SPI_1LINE_RX(hspi);
 8008092:	bf08      	it	eq
 8008094:	f422 4280 	biceq.w	r2, r2, #16384	; 0x4000
  hspi->TxISR       = NULL;
 8008098:	e9c4 6610 	strd	r6, r6, [r4, #64]	; 0x40
  hspi->TxXferSize  = 0U;
 800809c:	86a6      	strh	r6, [r4, #52]	; 0x34
  hspi->RxXferSize  = Size;
 800809e:	87a7      	strh	r7, [r4, #60]	; 0x3c
    SPI_1LINE_RX(hspi);
 80080a0:	bf08      	it	eq
 80080a2:	601a      	streq	r2, [r3, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 80080a4:	681a      	ldr	r2, [r3, #0]
 80080a6:	0656      	lsls	r6, r2, #25
    __HAL_SPI_ENABLE(hspi);
 80080a8:	bf5e      	ittt	pl
 80080aa:	681a      	ldrpl	r2, [r3, #0]
 80080ac:	f042 0240 	orrpl.w	r2, r2, #64	; 0x40
 80080b0:	601a      	strpl	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 80080b2:	68e3      	ldr	r3, [r4, #12]
 80080b4:	b1f3      	cbz	r3, 80080f4 <HAL_SPI_Receive+0xda>
    while (hspi->RxXferCount > 0U)
 80080b6:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 80080b8:	b29b      	uxth	r3, r3
 80080ba:	b1fb      	cbz	r3, 80080fc <HAL_SPI_Receive+0xe2>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 80080bc:	6823      	ldr	r3, [r4, #0]
 80080be:	689a      	ldr	r2, [r3, #8]
 80080c0:	07d2      	lsls	r2, r2, #31
 80080c2:	d539      	bpl.n	8008138 <HAL_SPI_Receive+0x11e>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 80080c4:	68da      	ldr	r2, [r3, #12]
 80080c6:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80080c8:	f823 2b02 	strh.w	r2, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 80080cc:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 80080ce:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 80080d0:	3b01      	subs	r3, #1
 80080d2:	b29b      	uxth	r3, r3
 80080d4:	87e3      	strh	r3, [r4, #62]	; 0x3e
 80080d6:	e7ee      	b.n	80080b6 <HAL_SPI_Receive+0x9c>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 80080d8:	6823      	ldr	r3, [r4, #0]
 80080da:	689a      	ldr	r2, [r3, #8]
 80080dc:	07d0      	lsls	r0, r2, #31
 80080de:	d518      	bpl.n	8008112 <HAL_SPI_Receive+0xf8>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 80080e0:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80080e2:	7b1b      	ldrb	r3, [r3, #12]
 80080e4:	7013      	strb	r3, [r2, #0]
        hspi->pRxBuffPtr += sizeof(uint8_t);
 80080e6:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80080e8:	3301      	adds	r3, #1
 80080ea:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 80080ec:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 80080ee:	3b01      	subs	r3, #1
 80080f0:	b29b      	uxth	r3, r3
 80080f2:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 80080f4:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 80080f6:	b29b      	uxth	r3, r3
 80080f8:	2b00      	cmp	r3, #0
 80080fa:	d1ed      	bne.n	80080d8 <HAL_SPI_Receive+0xbe>
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 80080fc:	4642      	mov	r2, r8
 80080fe:	4629      	mov	r1, r5
 8008100:	4620      	mov	r0, r4
 8008102:	f7ff fd59 	bl	8007bb8 <SPI_EndRxTransaction>
 8008106:	bb18      	cbnz	r0, 8008150 <HAL_SPI_Receive+0x136>
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8008108:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 800810a:	3800      	subs	r0, #0
 800810c:	bf18      	it	ne
 800810e:	2001      	movne	r0, #1
error :
 8008110:	e008      	b.n	8008124 <HAL_SPI_Receive+0x10a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8008112:	f7fd fe67 	bl	8005de4 <HAL_GetTick>
 8008116:	eba0 0008 	sub.w	r0, r0, r8
 800811a:	42a8      	cmp	r0, r5
 800811c:	d309      	bcc.n	8008132 <HAL_SPI_Receive+0x118>
 800811e:	1c69      	adds	r1, r5, #1
 8008120:	d0e8      	beq.n	80080f4 <HAL_SPI_Receive+0xda>
          errorcode = HAL_TIMEOUT;
 8008122:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 8008124:	2301      	movs	r3, #1
 8008126:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800812a:	2300      	movs	r3, #0
 800812c:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  return errorcode;
 8008130:	e787      	b.n	8008042 <HAL_SPI_Receive+0x28>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8008132:	2d00      	cmp	r5, #0
 8008134:	d1de      	bne.n	80080f4 <HAL_SPI_Receive+0xda>
 8008136:	e7f4      	b.n	8008122 <HAL_SPI_Receive+0x108>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8008138:	f7fd fe54 	bl	8005de4 <HAL_GetTick>
 800813c:	eba0 0008 	sub.w	r0, r0, r8
 8008140:	42a8      	cmp	r0, r5
 8008142:	d302      	bcc.n	800814a <HAL_SPI_Receive+0x130>
 8008144:	1c6b      	adds	r3, r5, #1
 8008146:	d0b6      	beq.n	80080b6 <HAL_SPI_Receive+0x9c>
 8008148:	e7eb      	b.n	8008122 <HAL_SPI_Receive+0x108>
 800814a:	2d00      	cmp	r5, #0
 800814c:	d1b3      	bne.n	80080b6 <HAL_SPI_Receive+0x9c>
 800814e:	e7e8      	b.n	8008122 <HAL_SPI_Receive+0x108>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8008150:	2320      	movs	r3, #32
 8008152:	6563      	str	r3, [r4, #84]	; 0x54
 8008154:	e7d8      	b.n	8008108 <HAL_SPI_Receive+0xee>
    errorcode = HAL_BUSY;
 8008156:	2002      	movs	r0, #2
 8008158:	e7e4      	b.n	8008124 <HAL_SPI_Receive+0x10a>
  __HAL_LOCK(hspi);
 800815a:	2002      	movs	r0, #2
 800815c:	e771      	b.n	8008042 <HAL_SPI_Receive+0x28>

0800815e <HAL_TIM_Base_Start_IT>:

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800815e:	6803      	ldr	r3, [r0, #0]
 8008160:	68da      	ldr	r2, [r3, #12]
 8008162:	f042 0201 	orr.w	r2, r2, #1
 8008166:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8008168:	689a      	ldr	r2, [r3, #8]
 800816a:	f002 0207 	and.w	r2, r2, #7
  if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800816e:	2a06      	cmp	r2, #6
  {
    __HAL_TIM_ENABLE(htim);
 8008170:	bf1e      	ittt	ne
 8008172:	681a      	ldrne	r2, [r3, #0]
 8008174:	f042 0201 	orrne.w	r2, r2, #1
 8008178:	601a      	strne	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
}
 800817a:	2000      	movs	r0, #0
 800817c:	4770      	bx	lr

0800817e <HAL_TIM_OC_DelayElapsedCallback>:
 800817e:	4770      	bx	lr

08008180 <HAL_TIM_IC_CaptureCallback>:
 8008180:	4770      	bx	lr

08008182 <HAL_TIM_PWM_PulseFinishedCallback>:
 8008182:	4770      	bx	lr

08008184 <HAL_TIM_TriggerCallback>:
 8008184:	4770      	bx	lr

08008186 <HAL_TIM_IRQHandler>:
  * @retval None
  */
void HAL_TIM_IRQHandler(TIM_HandleTypeDef *htim)
{
  /* Capture compare 1 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 8008186:	6803      	ldr	r3, [r0, #0]
 8008188:	691a      	ldr	r2, [r3, #16]
 800818a:	0791      	lsls	r1, r2, #30
{
 800818c:	b510      	push	{r4, lr}
 800818e:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 8008190:	d50e      	bpl.n	80081b0 <HAL_TIM_IRQHandler+0x2a>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 8008192:	68da      	ldr	r2, [r3, #12]
 8008194:	0792      	lsls	r2, r2, #30
 8008196:	d50b      	bpl.n	80081b0 <HAL_TIM_IRQHandler+0x2a>
    {
      {
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 8008198:	f06f 0202 	mvn.w	r2, #2
 800819c:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800819e:	2201      	movs	r2, #1
 80081a0:	7702      	strb	r2, [r0, #28]

        /* Input capture event */
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 80081a2:	699b      	ldr	r3, [r3, #24]
 80081a4:	079b      	lsls	r3, r3, #30
 80081a6:	d077      	beq.n	8008298 <HAL_TIM_IRQHandler+0x112>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->IC_CaptureCallback(htim);
#else
          HAL_TIM_IC_CaptureCallback(htim);
 80081a8:	f7ff ffea 	bl	8008180 <HAL_TIM_IC_CaptureCallback>
#else
          HAL_TIM_OC_DelayElapsedCallback(htim);
          HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
        }
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80081ac:	2300      	movs	r3, #0
 80081ae:	7723      	strb	r3, [r4, #28]
      }
    }
  }
  /* Capture compare 2 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 80081b0:	6823      	ldr	r3, [r4, #0]
 80081b2:	691a      	ldr	r2, [r3, #16]
 80081b4:	0750      	lsls	r0, r2, #29
 80081b6:	d510      	bpl.n	80081da <HAL_TIM_IRQHandler+0x54>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 80081b8:	68da      	ldr	r2, [r3, #12]
 80081ba:	0751      	lsls	r1, r2, #29
 80081bc:	d50d      	bpl.n	80081da <HAL_TIM_IRQHandler+0x54>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 80081be:	f06f 0204 	mvn.w	r2, #4
 80081c2:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 80081c4:	2202      	movs	r2, #2
 80081c6:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 80081c8:	699b      	ldr	r3, [r3, #24]
 80081ca:	f413 7f40 	tst.w	r3, #768	; 0x300
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 80081ce:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 80081d0:	d068      	beq.n	80082a4 <HAL_TIM_IRQHandler+0x11e>
        HAL_TIM_IC_CaptureCallback(htim);
 80081d2:	f7ff ffd5 	bl	8008180 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80081d6:	2300      	movs	r3, #0
 80081d8:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 3 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 80081da:	6823      	ldr	r3, [r4, #0]
 80081dc:	691a      	ldr	r2, [r3, #16]
 80081de:	0712      	lsls	r2, r2, #28
 80081e0:	d50f      	bpl.n	8008202 <HAL_TIM_IRQHandler+0x7c>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 80081e2:	68da      	ldr	r2, [r3, #12]
 80081e4:	0710      	lsls	r0, r2, #28
 80081e6:	d50c      	bpl.n	8008202 <HAL_TIM_IRQHandler+0x7c>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 80081e8:	f06f 0208 	mvn.w	r2, #8
 80081ec:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 80081ee:	2204      	movs	r2, #4
 80081f0:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 80081f2:	69db      	ldr	r3, [r3, #28]
 80081f4:	0799      	lsls	r1, r3, #30
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 80081f6:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 80081f8:	d05a      	beq.n	80082b0 <HAL_TIM_IRQHandler+0x12a>
        HAL_TIM_IC_CaptureCallback(htim);
 80081fa:	f7ff ffc1 	bl	8008180 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80081fe:	2300      	movs	r3, #0
 8008200:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 4 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 8008202:	6823      	ldr	r3, [r4, #0]
 8008204:	691a      	ldr	r2, [r3, #16]
 8008206:	06d2      	lsls	r2, r2, #27
 8008208:	d510      	bpl.n	800822c <HAL_TIM_IRQHandler+0xa6>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 800820a:	68da      	ldr	r2, [r3, #12]
 800820c:	06d0      	lsls	r0, r2, #27
 800820e:	d50d      	bpl.n	800822c <HAL_TIM_IRQHandler+0xa6>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 8008210:	f06f 0210 	mvn.w	r2, #16
 8008214:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 8008216:	2208      	movs	r2, #8
 8008218:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800821a:	69db      	ldr	r3, [r3, #28]
 800821c:	f413 7f40 	tst.w	r3, #768	; 0x300
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8008220:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8008222:	d04b      	beq.n	80082bc <HAL_TIM_IRQHandler+0x136>
        HAL_TIM_IC_CaptureCallback(htim);
 8008224:	f7ff ffac 	bl	8008180 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8008228:	2300      	movs	r3, #0
 800822a:	7723      	strb	r3, [r4, #28]
    }
  }
  /* TIM Update event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800822c:	6823      	ldr	r3, [r4, #0]
 800822e:	691a      	ldr	r2, [r3, #16]
 8008230:	07d1      	lsls	r1, r2, #31
 8008232:	d508      	bpl.n	8008246 <HAL_TIM_IRQHandler+0xc0>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 8008234:	68da      	ldr	r2, [r3, #12]
 8008236:	07d2      	lsls	r2, r2, #31
 8008238:	d505      	bpl.n	8008246 <HAL_TIM_IRQHandler+0xc0>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 800823a:	f06f 0201 	mvn.w	r2, #1
 800823e:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->PeriodElapsedCallback(htim);
#else
      HAL_TIM_PeriodElapsedCallback(htim);
 8008240:	4620      	mov	r0, r4
 8008242:	f7f9 fc97 	bl	8001b74 <HAL_TIM_PeriodElapsedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break input event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 8008246:	6823      	ldr	r3, [r4, #0]
 8008248:	691a      	ldr	r2, [r3, #16]
 800824a:	0610      	lsls	r0, r2, #24
 800824c:	d508      	bpl.n	8008260 <HAL_TIM_IRQHandler+0xda>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 800824e:	68da      	ldr	r2, [r3, #12]
 8008250:	0611      	lsls	r1, r2, #24
 8008252:	d505      	bpl.n	8008260 <HAL_TIM_IRQHandler+0xda>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 8008254:	f06f 0280 	mvn.w	r2, #128	; 0x80
 8008258:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->BreakCallback(htim);
#else
      HAL_TIMEx_BreakCallback(htim);
 800825a:	4620      	mov	r0, r4
 800825c:	f000 f8f5 	bl	800844a <HAL_TIMEx_BreakCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Trigger detection event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 8008260:	6823      	ldr	r3, [r4, #0]
 8008262:	691a      	ldr	r2, [r3, #16]
 8008264:	0652      	lsls	r2, r2, #25
 8008266:	d508      	bpl.n	800827a <HAL_TIM_IRQHandler+0xf4>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 8008268:	68da      	ldr	r2, [r3, #12]
 800826a:	0650      	lsls	r0, r2, #25
 800826c:	d505      	bpl.n	800827a <HAL_TIM_IRQHandler+0xf4>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 800826e:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8008272:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->TriggerCallback(htim);
#else
      HAL_TIM_TriggerCallback(htim);
 8008274:	4620      	mov	r0, r4
 8008276:	f7ff ff85 	bl	8008184 <HAL_TIM_TriggerCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM commutation event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800827a:	6823      	ldr	r3, [r4, #0]
 800827c:	691a      	ldr	r2, [r3, #16]
 800827e:	0691      	lsls	r1, r2, #26
 8008280:	d522      	bpl.n	80082c8 <HAL_TIM_IRQHandler+0x142>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 8008282:	68da      	ldr	r2, [r3, #12]
 8008284:	0692      	lsls	r2, r2, #26
 8008286:	d51f      	bpl.n	80082c8 <HAL_TIM_IRQHandler+0x142>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 8008288:	f06f 0220 	mvn.w	r2, #32
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->CommutationCallback(htim);
#else
      HAL_TIMEx_CommutCallback(htim);
 800828c:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800828e:	611a      	str	r2, [r3, #16]
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
}
 8008290:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 8008294:	f000 b8d8 	b.w	8008448 <HAL_TIMEx_CommutCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 8008298:	f7ff ff71 	bl	800817e <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 800829c:	4620      	mov	r0, r4
 800829e:	f7ff ff70 	bl	8008182 <HAL_TIM_PWM_PulseFinishedCallback>
 80082a2:	e783      	b.n	80081ac <HAL_TIM_IRQHandler+0x26>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80082a4:	f7ff ff6b 	bl	800817e <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80082a8:	4620      	mov	r0, r4
 80082aa:	f7ff ff6a 	bl	8008182 <HAL_TIM_PWM_PulseFinishedCallback>
 80082ae:	e792      	b.n	80081d6 <HAL_TIM_IRQHandler+0x50>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80082b0:	f7ff ff65 	bl	800817e <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80082b4:	4620      	mov	r0, r4
 80082b6:	f7ff ff64 	bl	8008182 <HAL_TIM_PWM_PulseFinishedCallback>
 80082ba:	e7a0      	b.n	80081fe <HAL_TIM_IRQHandler+0x78>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80082bc:	f7ff ff5f 	bl	800817e <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80082c0:	4620      	mov	r0, r4
 80082c2:	f7ff ff5e 	bl	8008182 <HAL_TIM_PWM_PulseFinishedCallback>
 80082c6:	e7af      	b.n	8008228 <HAL_TIM_IRQHandler+0xa2>
}
 80082c8:	bd10      	pop	{r4, pc}
	...

080082cc <TIM_Base_SetConfig>:
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 80082cc:	4a30      	ldr	r2, [pc, #192]	; (8008390 <TIM_Base_SetConfig+0xc4>)
  tmpcr1 = TIMx->CR1;
 80082ce:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 80082d0:	4290      	cmp	r0, r2
 80082d2:	d012      	beq.n	80082fa <TIM_Base_SetConfig+0x2e>
 80082d4:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 80082d8:	d00f      	beq.n	80082fa <TIM_Base_SetConfig+0x2e>
 80082da:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 80082de:	4290      	cmp	r0, r2
 80082e0:	d00b      	beq.n	80082fa <TIM_Base_SetConfig+0x2e>
 80082e2:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80082e6:	4290      	cmp	r0, r2
 80082e8:	d007      	beq.n	80082fa <TIM_Base_SetConfig+0x2e>
 80082ea:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80082ee:	4290      	cmp	r0, r2
 80082f0:	d003      	beq.n	80082fa <TIM_Base_SetConfig+0x2e>
 80082f2:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 80082f6:	4290      	cmp	r0, r2
 80082f8:	d119      	bne.n	800832e <TIM_Base_SetConfig+0x62>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
 80082fa:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 80082fc:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 8008300:	4313      	orrs	r3, r2
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 8008302:	4a23      	ldr	r2, [pc, #140]	; (8008390 <TIM_Base_SetConfig+0xc4>)
 8008304:	4290      	cmp	r0, r2
 8008306:	d029      	beq.n	800835c <TIM_Base_SetConfig+0x90>
 8008308:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 800830c:	d026      	beq.n	800835c <TIM_Base_SetConfig+0x90>
 800830e:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 8008312:	4290      	cmp	r0, r2
 8008314:	d022      	beq.n	800835c <TIM_Base_SetConfig+0x90>
 8008316:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800831a:	4290      	cmp	r0, r2
 800831c:	d01e      	beq.n	800835c <TIM_Base_SetConfig+0x90>
 800831e:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8008322:	4290      	cmp	r0, r2
 8008324:	d01a      	beq.n	800835c <TIM_Base_SetConfig+0x90>
 8008326:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800832a:	4290      	cmp	r0, r2
 800832c:	d016      	beq.n	800835c <TIM_Base_SetConfig+0x90>
 800832e:	4a19      	ldr	r2, [pc, #100]	; (8008394 <TIM_Base_SetConfig+0xc8>)
 8008330:	4290      	cmp	r0, r2
 8008332:	d013      	beq.n	800835c <TIM_Base_SetConfig+0x90>
 8008334:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8008338:	4290      	cmp	r0, r2
 800833a:	d00f      	beq.n	800835c <TIM_Base_SetConfig+0x90>
 800833c:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8008340:	4290      	cmp	r0, r2
 8008342:	d00b      	beq.n	800835c <TIM_Base_SetConfig+0x90>
 8008344:	f5a2 3298 	sub.w	r2, r2, #77824	; 0x13000
 8008348:	4290      	cmp	r0, r2
 800834a:	d007      	beq.n	800835c <TIM_Base_SetConfig+0x90>
 800834c:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8008350:	4290      	cmp	r0, r2
 8008352:	d003      	beq.n	800835c <TIM_Base_SetConfig+0x90>
 8008354:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8008358:	4290      	cmp	r0, r2
 800835a:	d103      	bne.n	8008364 <TIM_Base_SetConfig+0x98>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800835c:	68ca      	ldr	r2, [r1, #12]
    tmpcr1 &= ~TIM_CR1_CKD;
 800835e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8008362:	4313      	orrs	r3, r2
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 8008364:	694a      	ldr	r2, [r1, #20]
 8008366:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800836a:	4313      	orrs	r3, r2

  TIMx->CR1 = tmpcr1;
 800836c:	6003      	str	r3, [r0, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 800836e:	688b      	ldr	r3, [r1, #8]
 8008370:	62c3      	str	r3, [r0, #44]	; 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 8008372:	680b      	ldr	r3, [r1, #0]
 8008374:	6283      	str	r3, [r0, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 8008376:	4b06      	ldr	r3, [pc, #24]	; (8008390 <TIM_Base_SetConfig+0xc4>)
 8008378:	4298      	cmp	r0, r3
 800837a:	d003      	beq.n	8008384 <TIM_Base_SetConfig+0xb8>
 800837c:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8008380:	4298      	cmp	r0, r3
 8008382:	d101      	bne.n	8008388 <TIM_Base_SetConfig+0xbc>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 8008384:	690b      	ldr	r3, [r1, #16]
 8008386:	6303      	str	r3, [r0, #48]	; 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 8008388:	2301      	movs	r3, #1
 800838a:	6143      	str	r3, [r0, #20]
}
 800838c:	4770      	bx	lr
 800838e:	bf00      	nop
 8008390:	40010000 	.word	0x40010000
 8008394:	40014000 	.word	0x40014000

08008398 <HAL_TIM_Base_Init>:
{
 8008398:	b510      	push	{r4, lr}
  if (htim == NULL)
 800839a:	4604      	mov	r4, r0
 800839c:	b1a0      	cbz	r0, 80083c8 <HAL_TIM_Base_Init+0x30>
  if (htim->State == HAL_TIM_STATE_RESET)
 800839e:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 80083a2:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80083a6:	b91b      	cbnz	r3, 80083b0 <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 80083a8:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 80083ac:	f7f9 fe40 	bl	8002030 <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 80083b0:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 80083b2:	6820      	ldr	r0, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 80083b4:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 80083b8:	1d21      	adds	r1, r4, #4
 80083ba:	f7ff ff87 	bl	80082cc <TIM_Base_SetConfig>
  htim->State = HAL_TIM_STATE_READY;
 80083be:	2301      	movs	r3, #1
 80083c0:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 80083c4:	2000      	movs	r0, #0
}
 80083c6:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 80083c8:	2001      	movs	r0, #1
 80083ca:	e7fc      	b.n	80083c6 <HAL_TIM_Base_Init+0x2e>

080083cc <HAL_TIMEx_MasterConfigSynchronization>:
  *         mode.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIMEx_MasterConfigSynchronization(TIM_HandleTypeDef *htim,
                                                        TIM_MasterConfigTypeDef *sMasterConfig)
{
 80083cc:	b530      	push	{r4, r5, lr}
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 80083ce:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 80083d2:	2b01      	cmp	r3, #1
 80083d4:	f04f 0302 	mov.w	r3, #2
 80083d8:	d032      	beq.n	8008440 <HAL_TIMEx_MasterConfigSynchronization+0x74>

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;
 80083da:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 80083de:	6803      	ldr	r3, [r0, #0]
  tmpsmcr = htim->Instance->SMCR;

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 80083e0:	680d      	ldr	r5, [r1, #0]
  tmpcr2 = htim->Instance->CR2;
 80083e2:	685c      	ldr	r4, [r3, #4]
  tmpsmcr = htim->Instance->SMCR;
 80083e4:	689a      	ldr	r2, [r3, #8]
  tmpcr2 &= ~TIM_CR2_MMS;
 80083e6:	f024 0470 	bic.w	r4, r4, #112	; 0x70
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 80083ea:	432c      	orrs	r4, r5

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 80083ec:	605c      	str	r4, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 80083ee:	4c15      	ldr	r4, [pc, #84]	; (8008444 <HAL_TIMEx_MasterConfigSynchronization+0x78>)
 80083f0:	42a3      	cmp	r3, r4
 80083f2:	d01a      	beq.n	800842a <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 80083f4:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80083f8:	d017      	beq.n	800842a <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 80083fa:	f5a4 447c 	sub.w	r4, r4, #64512	; 0xfc00
 80083fe:	42a3      	cmp	r3, r4
 8008400:	d013      	beq.n	800842a <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 8008402:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8008406:	42a3      	cmp	r3, r4
 8008408:	d00f      	beq.n	800842a <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 800840a:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800840e:	42a3      	cmp	r3, r4
 8008410:	d00b      	beq.n	800842a <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 8008412:	f504 4478 	add.w	r4, r4, #63488	; 0xf800
 8008416:	42a3      	cmp	r3, r4
 8008418:	d007      	beq.n	800842a <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 800841a:	f504 5470 	add.w	r4, r4, #15360	; 0x3c00
 800841e:	42a3      	cmp	r3, r4
 8008420:	d003      	beq.n	800842a <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 8008422:	f5a4 3494 	sub.w	r4, r4, #75776	; 0x12800
 8008426:	42a3      	cmp	r3, r4
 8008428:	d104      	bne.n	8008434 <HAL_TIMEx_MasterConfigSynchronization+0x68>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 800842a:	6849      	ldr	r1, [r1, #4]
    tmpsmcr &= ~TIM_SMCR_MSM;
 800842c:	f022 0280 	bic.w	r2, r2, #128	; 0x80
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 8008430:	430a      	orrs	r2, r1

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 8008432:	609a      	str	r2, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;
 8008434:	2301      	movs	r3, #1
 8008436:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

  __HAL_UNLOCK(htim);
 800843a:	2300      	movs	r3, #0
 800843c:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  __HAL_LOCK(htim);
 8008440:	4618      	mov	r0, r3

  return HAL_OK;
}
 8008442:	bd30      	pop	{r4, r5, pc}
 8008444:	40010000 	.word	0x40010000

08008448 <HAL_TIMEx_CommutCallback>:
 8008448:	4770      	bx	lr

0800844a <HAL_TIMEx_BreakCallback>:
 800844a:	4770      	bx	lr

0800844c <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure   
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 800844c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
                                               Init->InternalBankNumber |\
                                               Init->CASLatency         |\
                                               Init->WriteProtection    |\
                                               Init->SDClockPeriod      |\
                                               Init->ReadBurst          |\
                                               Init->ReadPipeDelay
 8008450:	6a4a      	ldr	r2, [r1, #36]	; 0x24
                                               Init->ReadBurst          |\
 8008452:	e9d1 4307 	ldrd	r4, r3, [r1, #28]
                                               Init->RowBitsNumber      |\
 8008456:	e9d1 5801 	ldrd	r5, r8, [r1, #4]
                                               Init->InternalBankNumber |\
 800845a:	e9d1 ec03 	ldrd	lr, ip, [r1, #12]
                                               Init->WriteProtection    |\
 800845e:	e9d1 7605 	ldrd	r7, r6, [r1, #20]
  if (Init->SDBank != FMC_SDRAM_BANK2) 
 8008462:	6809      	ldr	r1, [r1, #0]
 8008464:	2901      	cmp	r1, #1
 8008466:	ea43 0304 	orr.w	r3, r3, r4
 800846a:	4912      	ldr	r1, [pc, #72]	; (80084b4 <FMC_SDRAM_Init+0x68>)
    tmpr1 = Device->SDCR[FMC_SDRAM_BANK1];
 800846c:	6804      	ldr	r4, [r0, #0]
  if (Init->SDBank != FMC_SDRAM_BANK2) 
 800846e:	d00f      	beq.n	8008490 <FMC_SDRAM_Init+0x44>
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8008470:	431a      	orrs	r2, r3
 8008472:	432a      	orrs	r2, r5
 8008474:	ea42 0308 	orr.w	r3, r2, r8
 8008478:	ea43 030e 	orr.w	r3, r3, lr
 800847c:	ea43 030c 	orr.w	r3, r3, ip
 8008480:	433b      	orrs	r3, r7
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 8008482:	4021      	ands	r1, r4
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8008484:	4333      	orrs	r3, r6
 8008486:	430b      	orrs	r3, r1
                                               );
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 8008488:	6003      	str	r3, [r0, #0]
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
    Device->SDCR[FMC_SDRAM_BANK2] = tmpr2;
  }  
  
  return HAL_OK;
}
 800848a:	2000      	movs	r0, #0
 800848c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 8008490:	4313      	orrs	r3, r2
    tmpr2 = Device->SDCR[FMC_SDRAM_BANK2];
 8008492:	6842      	ldr	r2, [r0, #4]
    tmpr2 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 8008494:	4011      	ands	r1, r2
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8008496:	ea45 0208 	orr.w	r2, r5, r8
 800849a:	ea42 020e 	orr.w	r2, r2, lr
 800849e:	ea42 020c 	orr.w	r2, r2, ip
 80084a2:	433a      	orrs	r2, r7
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_SDCLK | FMC_SDCR1_RBURST | FMC_SDCR1_RPIPE));
 80084a4:	f424 44f8 	bic.w	r4, r4, #31744	; 0x7c00
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 80084a8:	4332      	orrs	r2, r6
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 80084aa:	4323      	orrs	r3, r4
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 80084ac:	430a      	orrs	r2, r1
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 80084ae:	6003      	str	r3, [r0, #0]
    Device->SDCR[FMC_SDRAM_BANK2] = tmpr2;
 80084b0:	6042      	str	r2, [r0, #4]
 80084b2:	e7ea      	b.n	800848a <FMC_SDRAM_Init+0x3e>
 80084b4:	ffff8000 	.word	0xffff8000

080084b8 <FMC_SDRAM_Timing_Init>:
                          FMC_SDTR1_TRCD));
    
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
                       (((Timing->RowCycleDelay)-1U) << 12U)       |\
 80084b8:	68cb      	ldr	r3, [r1, #12]
{
 80084ba:	b5f0      	push	{r4, r5, r6, r7, lr}
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 80084bc:	680c      	ldr	r4, [r1, #0]
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
 80084be:	688e      	ldr	r6, [r1, #8]
                       (((Timing->WriteRecoveryTime)-1U) <<16U)    |\
 80084c0:	690d      	ldr	r5, [r1, #16]
                       (((Timing->RowCycleDelay)-1U) << 12U)       |\
 80084c2:	1e5f      	subs	r7, r3, #1
                       (((Timing->RPDelay)-1U) << 20U)             |\
 80084c4:	694b      	ldr	r3, [r1, #20]
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 80084c6:	f104 3cff 	add.w	ip, r4, #4294967295
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
 80084ca:	684c      	ldr	r4, [r1, #4]
                       (((Timing->RCDDelay)-1U) << 24U));
 80084cc:	6989      	ldr	r1, [r1, #24]
                       (((Timing->RPDelay)-1U) << 20U)             |\
 80084ce:	3b01      	subs	r3, #1
 80084d0:	051b      	lsls	r3, r3, #20
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
 80084d2:	3c01      	subs	r4, #1
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
 80084d4:	3e01      	subs	r6, #1
                       (((Timing->WriteRecoveryTime)-1U) <<16U)    |\
 80084d6:	3d01      	subs	r5, #1
                       (((Timing->RCDDelay)-1U) << 24U));
 80084d8:	3901      	subs	r1, #1
  if (Bank != FMC_SDRAM_BANK2) 
 80084da:	2a01      	cmp	r2, #1
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
 80084dc:	ea4f 1404 	mov.w	r4, r4, lsl #4
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
 80084e0:	ea4f 2606 	mov.w	r6, r6, lsl #8
                       (((Timing->WriteRecoveryTime)-1U) <<16U)    |\
 80084e4:	ea4f 4505 	mov.w	r5, r5, lsl #16
                       (((Timing->RCDDelay)-1U) << 24U));
 80084e8:	ea4f 6101 	mov.w	r1, r1, lsl #24
 80084ec:	ea43 3307 	orr.w	r3, r3, r7, lsl #12
  if (Bank != FMC_SDRAM_BANK2) 
 80084f0:	d00c      	beq.n	800850c <FMC_SDRAM_Timing_Init+0x54>
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 80084f2:	ea43 030c 	orr.w	r3, r3, ip
 80084f6:	4323      	orrs	r3, r4
    tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 80084f8:	6882      	ldr	r2, [r0, #8]
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 80084fa:	4333      	orrs	r3, r6
 80084fc:	432b      	orrs	r3, r5
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 80084fe:	f002 4270 	and.w	r2, r2, #4026531840	; 0xf0000000
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 8008502:	430b      	orrs	r3, r1
 8008504:	4313      	orrs	r3, r2
    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 8008506:	6083      	str	r3, [r0, #8]

    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
    Device->SDTR[FMC_SDRAM_BANK2] = tmpr2;
  }
  return HAL_OK;
}
 8008508:	2000      	movs	r0, #0
 800850a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 800850c:	6887      	ldr	r7, [r0, #8]
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TRC | FMC_SDTR1_TRP));
 800850e:	f427 0770 	bic.w	r7, r7, #15728640	; 0xf00000
 8008512:	f427 4770 	bic.w	r7, r7, #61440	; 0xf000
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 8008516:	4334      	orrs	r4, r6
    tmpr1 |= (uint32_t)((((Timing->RowCycleDelay)-1U) << 12U)       |\
 8008518:	433b      	orrs	r3, r7
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 800851a:	ea44 020c 	orr.w	r2, r4, ip
    tmpr2 = Device->SDTR[FMC_SDRAM_BANK2];
 800851e:	68c7      	ldr	r7, [r0, #12]
    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 8008520:	6083      	str	r3, [r0, #8]
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 8008522:	432a      	orrs	r2, r5
    tmpr2 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 8008524:	f007 4770 	and.w	r7, r7, #4026531840	; 0xf0000000
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 8008528:	430a      	orrs	r2, r1
 800852a:	433a      	orrs	r2, r7
    Device->SDTR[FMC_SDRAM_BANK2] = tmpr2;
 800852c:	60c2      	str	r2, [r0, #12]
 800852e:	e7eb      	b.n	8008508 <FMC_SDRAM_Timing_Init+0x50>

08008530 <FMC_SDRAM_SendCommand>:
  * @param  Timing Pointer to SDRAM Timing structure
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */  
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 8008530:	b573      	push	{r0, r1, r4, r5, r6, lr}
  __IO uint32_t tmpr = 0U;
 8008532:	2300      	movs	r3, #0
 8008534:	9301      	str	r3, [sp, #4]
{
 8008536:	4615      	mov	r5, r2
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));  

  /* Set command register */
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 8008538:	e9d1 3200 	ldrd	r3, r2, [r1]
 800853c:	4313      	orrs	r3, r2
                    (Command->CommandTarget)                |\
                    (((Command->AutoRefreshNumber)-1U) << 5U) |\
                    ((Command->ModeRegisterDefinition) << 9U)
 800853e:	68ca      	ldr	r2, [r1, #12]
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 8008540:	ea43 2342 	orr.w	r3, r3, r2, lsl #9
                    (((Command->AutoRefreshNumber)-1U) << 5U) |\
 8008544:	688a      	ldr	r2, [r1, #8]
 8008546:	3a01      	subs	r2, #1
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 8008548:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 800854c:	9301      	str	r3, [sp, #4]
                    );
    
  Device->SDCMR = tmpr;
 800854e:	9b01      	ldr	r3, [sp, #4]
 8008550:	6103      	str	r3, [r0, #16]
{
 8008552:	4604      	mov	r4, r0

  /* Get tick */ 
  tickstart = HAL_GetTick();
 8008554:	f7fd fc46 	bl	8005de4 <HAL_GetTick>
 8008558:	4606      	mov	r6, r0

  /* Wait until command is send */
  while(HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800855a:	69a3      	ldr	r3, [r4, #24]
 800855c:	f013 0320 	ands.w	r3, r3, #32
 8008560:	d101      	bne.n	8008566 <FMC_SDRAM_SendCommand+0x36>
        return HAL_TIMEOUT;
      }
    }
  }

  return HAL_OK;
 8008562:	4618      	mov	r0, r3
 8008564:	e003      	b.n	800856e <FMC_SDRAM_SendCommand+0x3e>
    if(Timeout != HAL_MAX_DELAY)
 8008566:	1c6b      	adds	r3, r5, #1
 8008568:	d0f7      	beq.n	800855a <FMC_SDRAM_SendCommand+0x2a>
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 800856a:	b915      	cbnz	r5, 8008572 <FMC_SDRAM_SendCommand+0x42>
        return HAL_TIMEOUT;
 800856c:	2003      	movs	r0, #3
}
 800856e:	b002      	add	sp, #8
 8008570:	bd70      	pop	{r4, r5, r6, pc}
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 8008572:	f7fd fc37 	bl	8005de4 <HAL_GetTick>
 8008576:	1b80      	subs	r0, r0, r6
 8008578:	42a8      	cmp	r0, r5
 800857a:	d9ee      	bls.n	800855a <FMC_SDRAM_SendCommand+0x2a>
 800857c:	e7f6      	b.n	800856c <FMC_SDRAM_SendCommand+0x3c>

0800857e <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));
  
  /* Set the refresh rate in command register */
  Device->SDRTR |= (RefreshRate<<1U);
 800857e:	6943      	ldr	r3, [r0, #20]
 8008580:	ea43 0141 	orr.w	r1, r3, r1, lsl #1
 8008584:	6141      	str	r1, [r0, #20]
  
  return HAL_OK;   
}
 8008586:	2000      	movs	r0, #0
 8008588:	4770      	bx	lr
	...

0800858c <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800858c:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 8008590:	b113      	cbz	r3, 8008598 <osKernelInitialize+0xc>
    stat = osErrorISR;
 8008592:	f06f 0005 	mvn.w	r0, #5
 8008596:	4770      	bx	lr
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8008598:	f3ef 8210 	mrs	r2, PRIMASK
  return(result);
 800859c:	4b07      	ldr	r3, [pc, #28]	; (80085bc <osKernelInitialize+0x30>)
  if (IS_IRQ()) {
 800859e:	b912      	cbnz	r2, 80085a6 <osKernelInitialize+0x1a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80085a0:	f3ef 8211 	mrs	r2, BASEPRI
 80085a4:	b112      	cbz	r2, 80085ac <osKernelInitialize+0x20>
 80085a6:	681a      	ldr	r2, [r3, #0]
 80085a8:	2a02      	cmp	r2, #2
 80085aa:	d0f2      	beq.n	8008592 <osKernelInitialize+0x6>
  }
  else {
    if (KernelState == osKernelInactive) {
 80085ac:	6818      	ldr	r0, [r3, #0]
 80085ae:	b910      	cbnz	r0, 80085b6 <osKernelInitialize+0x2a>
      #if defined(USE_FREERTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 80085b0:	2201      	movs	r2, #1
 80085b2:	601a      	str	r2, [r3, #0]
      stat = osOK;
 80085b4:	4770      	bx	lr
    } else {
      stat = osError;
 80085b6:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 80085ba:	4770      	bx	lr
 80085bc:	20004aac 	.word	0x20004aac

080085c0 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 80085c0:	b508      	push	{r3, lr}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80085c2:	f3ef 8305 	mrs	r3, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 80085c6:	b113      	cbz	r3, 80085ce <osKernelStart+0xe>
    stat = osErrorISR;
 80085c8:	f06f 0005 	mvn.w	r0, #5
      stat = osError;
    }
  }

  return (stat);
}
 80085cc:	bd08      	pop	{r3, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80085ce:	f3ef 8210 	mrs	r2, PRIMASK
  return(result);
 80085d2:	4b0a      	ldr	r3, [pc, #40]	; (80085fc <osKernelStart+0x3c>)
  if (IS_IRQ()) {
 80085d4:	b912      	cbnz	r2, 80085dc <osKernelStart+0x1c>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80085d6:	f3ef 8211 	mrs	r2, BASEPRI
 80085da:	b112      	cbz	r2, 80085e2 <osKernelStart+0x22>
 80085dc:	681a      	ldr	r2, [r3, #0]
 80085de:	2a02      	cmp	r2, #2
 80085e0:	d0f2      	beq.n	80085c8 <osKernelStart+0x8>
    if (KernelState == osKernelReady) {
 80085e2:	681a      	ldr	r2, [r3, #0]
 80085e4:	2a01      	cmp	r2, #1
 80085e6:	d105      	bne.n	80085f4 <osKernelStart+0x34>
      KernelState = osKernelRunning;
 80085e8:	2202      	movs	r2, #2
 80085ea:	601a      	str	r2, [r3, #0]
      vTaskStartScheduler();
 80085ec:	f001 fbda 	bl	8009da4 <vTaskStartScheduler>
      stat = osOK;
 80085f0:	2000      	movs	r0, #0
 80085f2:	e7eb      	b.n	80085cc <osKernelStart+0xc>
      stat = osError;
 80085f4:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 80085f8:	e7e8      	b.n	80085cc <osKernelStart+0xc>
 80085fa:	bf00      	nop
 80085fc:	20004aac 	.word	0x20004aac

08008600 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 8008600:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008602:	b087      	sub	sp, #28
 8008604:	4614      	mov	r4, r2
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 8008606:	2200      	movs	r2, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 8008608:	460b      	mov	r3, r1
  hTask = NULL;
 800860a:	9205      	str	r2, [sp, #20]
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800860c:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 8008610:	bb22      	cbnz	r2, 800865c <osThreadNew+0x5c>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8008612:	f3ef 8210 	mrs	r2, PRIMASK
 8008616:	b912      	cbnz	r2, 800861e <osThreadNew+0x1e>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8008618:	f3ef 8211 	mrs	r2, BASEPRI
 800861c:	b11a      	cbz	r2, 8008626 <osThreadNew+0x26>
 800861e:	4a22      	ldr	r2, [pc, #136]	; (80086a8 <osThreadNew+0xa8>)
 8008620:	6812      	ldr	r2, [r2, #0]
 8008622:	2a02      	cmp	r2, #2
 8008624:	d01a      	beq.n	800865c <osThreadNew+0x5c>
 8008626:	b1c8      	cbz	r0, 800865c <osThreadNew+0x5c>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 8008628:	2c00      	cmp	r4, #0
 800862a:	d02f      	beq.n	800868c <osThreadNew+0x8c>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 800862c:	69a5      	ldr	r5, [r4, #24]
 800862e:	2d00      	cmp	r5, #0
 8008630:	bf08      	it	eq
 8008632:	2518      	moveq	r5, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 8008634:	1e6a      	subs	r2, r5, #1
 8008636:	2a37      	cmp	r2, #55	; 0x37
 8008638:	46ac      	mov	ip, r5
 800863a:	d82b      	bhi.n	8008694 <osThreadNew+0x94>
 800863c:	6862      	ldr	r2, [r4, #4]
 800863e:	07d2      	lsls	r2, r2, #31
 8008640:	d428      	bmi.n	8008694 <osThreadNew+0x94>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 8008642:	6966      	ldr	r6, [r4, #20]
 8008644:	b16e      	cbz	r6, 8008662 <osThreadNew+0x62>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 8008646:	08b2      	lsrs	r2, r6, #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8008648:	e9d4 7e02 	ldrd	r7, lr, [r4, #8]
      if (attr->name != NULL) {
 800864c:	6821      	ldr	r1, [r4, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800864e:	b157      	cbz	r7, 8008666 <osThreadNew+0x66>
 8008650:	f1be 0fbf 	cmp.w	lr, #191	; 0xbf
 8008654:	d902      	bls.n	800865c <osThreadNew+0x5c>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8008656:	6924      	ldr	r4, [r4, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8008658:	b104      	cbz	r4, 800865c <osThreadNew+0x5c>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800865a:	b9ee      	cbnz	r6, 8008698 <osThreadNew+0x98>
        }
      }
    }
  }

  return ((osThreadId_t)hTask);
 800865c:	9805      	ldr	r0, [sp, #20]
}
 800865e:	b007      	add	sp, #28
 8008660:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 8008662:	2280      	movs	r2, #128	; 0x80
 8008664:	e7f0      	b.n	8008648 <osThreadNew+0x48>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 8008666:	f1be 0f00 	cmp.w	lr, #0
 800866a:	d1f7      	bne.n	800865c <osThreadNew+0x5c>
      if (mem == 0) {
 800866c:	6924      	ldr	r4, [r4, #16]
 800866e:	2c00      	cmp	r4, #0
 8008670:	d1f4      	bne.n	800865c <osThreadNew+0x5c>
 8008672:	460c      	mov	r4, r1
        if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 8008674:	a905      	add	r1, sp, #20
 8008676:	e9cd c100 	strd	ip, r1, [sp]
 800867a:	b292      	uxth	r2, r2
 800867c:	4621      	mov	r1, r4
 800867e:	f001 fb63 	bl	8009d48 <xTaskCreate>
 8008682:	2801      	cmp	r0, #1
          hTask = NULL;
 8008684:	bf1c      	itt	ne
 8008686:	2300      	movne	r3, #0
 8008688:	9305      	strne	r3, [sp, #20]
 800868a:	e7e7      	b.n	800865c <osThreadNew+0x5c>
    prio  = (UBaseType_t)osPriorityNormal;
 800868c:	f04f 0c18 	mov.w	ip, #24
    stack = configMINIMAL_STACK_SIZE;
 8008690:	2280      	movs	r2, #128	; 0x80
 8008692:	e7ef      	b.n	8008674 <osThreadNew+0x74>
        return (NULL);
 8008694:	2000      	movs	r0, #0
 8008696:	e7e2      	b.n	800865e <osThreadNew+0x5e>
      hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 8008698:	e9cd 4701 	strd	r4, r7, [sp, #4]
 800869c:	9500      	str	r5, [sp, #0]
 800869e:	f001 fb1b 	bl	8009cd8 <xTaskCreateStatic>
 80086a2:	9005      	str	r0, [sp, #20]
 80086a4:	e7da      	b.n	800865c <osThreadNew+0x5c>
 80086a6:	bf00      	nop
 80086a8:	20004aac 	.word	0x20004aac

080086ac <osDelay>:

  /* Return flags before clearing */
  return (rflags);
}

osStatus_t osDelay (uint32_t ticks) {
 80086ac:	b508      	push	{r3, lr}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80086ae:	f3ef 8305 	mrs	r3, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 80086b2:	b113      	cbz	r3, 80086ba <osDelay+0xe>
    stat = osErrorISR;
 80086b4:	f06f 0005 	mvn.w	r0, #5
      vTaskDelay(ticks);
    }
  }

  return (stat);
}
 80086b8:	bd08      	pop	{r3, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80086ba:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 80086be:	b913      	cbnz	r3, 80086c6 <osDelay+0x1a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80086c0:	f3ef 8311 	mrs	r3, BASEPRI
 80086c4:	b11b      	cbz	r3, 80086ce <osDelay+0x22>
 80086c6:	4b05      	ldr	r3, [pc, #20]	; (80086dc <osDelay+0x30>)
 80086c8:	681b      	ldr	r3, [r3, #0]
 80086ca:	2b02      	cmp	r3, #2
 80086cc:	d0f2      	beq.n	80086b4 <osDelay+0x8>
    if (ticks != 0U) {
 80086ce:	2800      	cmp	r0, #0
 80086d0:	d0f2      	beq.n	80086b8 <osDelay+0xc>
      vTaskDelay(ticks);
 80086d2:	f001 fccf 	bl	800a074 <vTaskDelay>
    stat = osOK;
 80086d6:	2000      	movs	r0, #0
 80086d8:	e7ee      	b.n	80086b8 <osDelay+0xc>
 80086da:	bf00      	nop
 80086dc:	20004aac 	.word	0x20004aac

080086e0 <osSemaphoreNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 80086e0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80086e2:	460e      	mov	r6, r1
 80086e4:	4615      	mov	r5, r2
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80086e6:	f3ef 8305 	mrs	r3, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 80086ea:	b11b      	cbz	r3, 80086f4 <osSemaphoreNew+0x14>
        }

        if ((hSemaphore != NULL) && (initial_count != 0U)) {
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
            vSemaphoreDelete (hSemaphore);
            hSemaphore = NULL;
 80086ec:	2400      	movs	r4, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 80086ee:	4620      	mov	r0, r4
 80086f0:	b002      	add	sp, #8
 80086f2:	bd70      	pop	{r4, r5, r6, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80086f4:	f3ef 8310 	mrs	r3, PRIMASK
  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 80086f8:	b913      	cbnz	r3, 8008700 <osSemaphoreNew+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80086fa:	f3ef 8311 	mrs	r3, BASEPRI
 80086fe:	b11b      	cbz	r3, 8008708 <osSemaphoreNew+0x28>
 8008700:	4b21      	ldr	r3, [pc, #132]	; (8008788 <osSemaphoreNew+0xa8>)
 8008702:	681b      	ldr	r3, [r3, #0]
 8008704:	2b02      	cmp	r3, #2
 8008706:	d0f1      	beq.n	80086ec <osSemaphoreNew+0xc>
 8008708:	2800      	cmp	r0, #0
 800870a:	d0ef      	beq.n	80086ec <osSemaphoreNew+0xc>
 800870c:	42b0      	cmp	r0, r6
 800870e:	d3ed      	bcc.n	80086ec <osSemaphoreNew+0xc>
    if (attr != NULL) {
 8008710:	b1ed      	cbz	r5, 800874e <osSemaphoreNew+0x6e>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 8008712:	e9d5 3202 	ldrd	r3, r2, [r5, #8]
 8008716:	b1c3      	cbz	r3, 800874a <osSemaphoreNew+0x6a>
 8008718:	2a4f      	cmp	r2, #79	; 0x4f
 800871a:	d9e7      	bls.n	80086ec <osSemaphoreNew+0xc>
      if (max_count == 1U) {
 800871c:	2801      	cmp	r0, #1
 800871e:	d129      	bne.n	8008774 <osSemaphoreNew+0x94>
          hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 8008720:	2203      	movs	r2, #3
 8008722:	9200      	str	r2, [sp, #0]
 8008724:	2200      	movs	r2, #0
 8008726:	4611      	mov	r1, r2
 8008728:	f000 fd2d 	bl	8009186 <xQueueGenericCreateStatic>
          hSemaphore = xSemaphoreCreateBinary();
 800872c:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 800872e:	2800      	cmp	r0, #0
 8008730:	d0dc      	beq.n	80086ec <osSemaphoreNew+0xc>
 8008732:	b1ce      	cbz	r6, 8008768 <osSemaphoreNew+0x88>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8008734:	2300      	movs	r3, #0
 8008736:	461a      	mov	r2, r3
 8008738:	4619      	mov	r1, r3
 800873a:	f000 fdd9 	bl	80092f0 <xQueueGenericSend>
 800873e:	2801      	cmp	r0, #1
 8008740:	d012      	beq.n	8008768 <osSemaphoreNew+0x88>
            vSemaphoreDelete (hSemaphore);
 8008742:	4620      	mov	r0, r4
 8008744:	f001 f914 	bl	8009970 <vQueueDelete>
 8008748:	e7d0      	b.n	80086ec <osSemaphoreNew+0xc>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 800874a:	2a00      	cmp	r2, #0
 800874c:	d1ce      	bne.n	80086ec <osSemaphoreNew+0xc>
      if (max_count == 1U) {
 800874e:	2801      	cmp	r0, #1
 8008750:	d104      	bne.n	800875c <osSemaphoreNew+0x7c>
          hSemaphore = xSemaphoreCreateBinary();
 8008752:	2203      	movs	r2, #3
 8008754:	2100      	movs	r1, #0
 8008756:	f000 fd64 	bl	8009222 <xQueueGenericCreate>
 800875a:	e7e7      	b.n	800872c <osSemaphoreNew+0x4c>
          hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800875c:	4631      	mov	r1, r6
 800875e:	f000 fda9 	bl	80092b4 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 8008762:	4604      	mov	r4, r0
 8008764:	2800      	cmp	r0, #0
 8008766:	d0c1      	beq.n	80086ec <osSemaphoreNew+0xc>
        if (attr != NULL) {
 8008768:	b95d      	cbnz	r5, 8008782 <osSemaphoreNew+0xa2>
        vQueueAddToRegistry (hSemaphore, name);
 800876a:	4629      	mov	r1, r5
 800876c:	4620      	mov	r0, r4
 800876e:	f001 f8d9 	bl	8009924 <vQueueAddToRegistry>
  return ((osSemaphoreId_t)hSemaphore);
 8008772:	e7bc      	b.n	80086ee <osSemaphoreNew+0xe>
          hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 8008774:	461a      	mov	r2, r3
 8008776:	4631      	mov	r1, r6
 8008778:	f000 fd7a 	bl	8009270 <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 800877c:	4604      	mov	r4, r0
 800877e:	2800      	cmp	r0, #0
 8008780:	d0b4      	beq.n	80086ec <osSemaphoreNew+0xc>
          name = attr->name;
 8008782:	682d      	ldr	r5, [r5, #0]
 8008784:	e7f1      	b.n	800876a <osSemaphoreNew+0x8a>
 8008786:	bf00      	nop
 8008788:	20004aac 	.word	0x20004aac

0800878c <osSemaphoreAcquire>:

osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 800878c:	b513      	push	{r0, r1, r4, lr}
 800878e:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8008790:	b918      	cbnz	r0, 800879a <osSemaphoreAcquire+0xe>
    stat = osErrorParameter;
 8008792:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 8008796:	b002      	add	sp, #8
 8008798:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800879a:	f3ef 8305 	mrs	r3, IPSR
  else if (IS_IRQ()) {
 800879e:	b163      	cbz	r3, 80087ba <osSemaphoreAcquire+0x2e>
    if (timeout != 0U) {
 80087a0:	2c00      	cmp	r4, #0
 80087a2:	d1f6      	bne.n	8008792 <osSemaphoreAcquire+0x6>
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 80087a4:	aa01      	add	r2, sp, #4
 80087a6:	4621      	mov	r1, r4
      yield = pdFALSE;
 80087a8:	9401      	str	r4, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 80087aa:	f001 f86b 	bl	8009884 <xQueueReceiveFromISR>
 80087ae:	2801      	cmp	r0, #1
 80087b0:	d113      	bne.n	80087da <osSemaphoreAcquire+0x4e>
        portYIELD_FROM_ISR (yield);
 80087b2:	9b01      	ldr	r3, [sp, #4]
 80087b4:	b9a3      	cbnz	r3, 80087e0 <osSemaphoreAcquire+0x54>
  stat = osOK;
 80087b6:	2000      	movs	r0, #0
 80087b8:	e7ed      	b.n	8008796 <osSemaphoreAcquire+0xa>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80087ba:	f3ef 8310 	mrs	r3, PRIMASK
  else if (IS_IRQ()) {
 80087be:	b913      	cbnz	r3, 80087c6 <osSemaphoreAcquire+0x3a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80087c0:	f3ef 8311 	mrs	r3, BASEPRI
 80087c4:	b11b      	cbz	r3, 80087ce <osSemaphoreAcquire+0x42>
 80087c6:	4b0d      	ldr	r3, [pc, #52]	; (80087fc <osSemaphoreAcquire+0x70>)
 80087c8:	681b      	ldr	r3, [r3, #0]
 80087ca:	2b02      	cmp	r3, #2
 80087cc:	d0e8      	beq.n	80087a0 <osSemaphoreAcquire+0x14>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 80087ce:	4621      	mov	r1, r4
 80087d0:	f000 ff95 	bl	80096fe <xQueueSemaphoreTake>
 80087d4:	2801      	cmp	r0, #1
 80087d6:	d0ee      	beq.n	80087b6 <osSemaphoreAcquire+0x2a>
      if (timeout != 0U) {
 80087d8:	b96c      	cbnz	r4, 80087f6 <osSemaphoreAcquire+0x6a>
        stat = osErrorResource;
 80087da:	f06f 0002 	mvn.w	r0, #2
 80087de:	e7da      	b.n	8008796 <osSemaphoreAcquire+0xa>
        portYIELD_FROM_ISR (yield);
 80087e0:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80087e4:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80087e8:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80087ec:	f3bf 8f4f 	dsb	sy
 80087f0:	f3bf 8f6f 	isb	sy
 80087f4:	e7df      	b.n	80087b6 <osSemaphoreAcquire+0x2a>
        stat = osErrorTimeout;
 80087f6:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 80087fa:	e7cc      	b.n	8008796 <osSemaphoreAcquire+0xa>
 80087fc:	20004aac 	.word	0x20004aac

08008800 <osSemaphoreRelease>:

osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 8008800:	b513      	push	{r0, r1, r4, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8008802:	b370      	cbz	r0, 8008862 <osSemaphoreRelease+0x62>
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8008804:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 8008808:	b14b      	cbz	r3, 800881e <osSemaphoreRelease+0x1e>
    yield = pdFALSE;
 800880a:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800880c:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 800880e:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8008810:	f000 fe82 	bl	8009518 <xQueueGiveFromISR>
 8008814:	2801      	cmp	r0, #1
 8008816:	d014      	beq.n	8008842 <osSemaphoreRelease+0x42>
      portYIELD_FROM_ISR (yield);
    }
  }
  else {
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
      stat = osErrorResource;
 8008818:	f06f 0002 	mvn.w	r0, #2
 800881c:	e014      	b.n	8008848 <osSemaphoreRelease+0x48>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800881e:	f3ef 8310 	mrs	r3, PRIMASK
  else if (IS_IRQ()) {
 8008822:	b913      	cbnz	r3, 800882a <osSemaphoreRelease+0x2a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8008824:	f3ef 8311 	mrs	r3, BASEPRI
 8008828:	b11b      	cbz	r3, 8008832 <osSemaphoreRelease+0x32>
 800882a:	4b0f      	ldr	r3, [pc, #60]	; (8008868 <osSemaphoreRelease+0x68>)
 800882c:	681b      	ldr	r3, [r3, #0]
 800882e:	2b02      	cmp	r3, #2
 8008830:	d0eb      	beq.n	800880a <osSemaphoreRelease+0xa>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8008832:	2300      	movs	r3, #0
 8008834:	461a      	mov	r2, r3
 8008836:	4619      	mov	r1, r3
 8008838:	f000 fd5a 	bl	80092f0 <xQueueGenericSend>
 800883c:	2801      	cmp	r0, #1
 800883e:	d002      	beq.n	8008846 <osSemaphoreRelease+0x46>
 8008840:	e7ea      	b.n	8008818 <osSemaphoreRelease+0x18>
      portYIELD_FROM_ISR (yield);
 8008842:	9b01      	ldr	r3, [sp, #4]
 8008844:	b913      	cbnz	r3, 800884c <osSemaphoreRelease+0x4c>
  stat = osOK;
 8008846:	2000      	movs	r0, #0
    }
  }

  return (stat);
}
 8008848:	b002      	add	sp, #8
 800884a:	bd10      	pop	{r4, pc}
      portYIELD_FROM_ISR (yield);
 800884c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008850:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008854:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008858:	f3bf 8f4f 	dsb	sy
 800885c:	f3bf 8f6f 	isb	sy
 8008860:	e7f1      	b.n	8008846 <osSemaphoreRelease+0x46>
    stat = osErrorParameter;
 8008862:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 8008866:	e7ef      	b.n	8008848 <osSemaphoreRelease+0x48>
 8008868:	20004aac 	.word	0x20004aac

0800886c <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 800886c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800886e:	4614      	mov	r4, r2
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8008870:	f3ef 8305 	mrs	r3, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 8008874:	b11b      	cbz	r3, 800887e <osMessageQueueNew+0x12>
  hQueue = NULL;
 8008876:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 8008878:	4628      	mov	r0, r5
 800887a:	b002      	add	sp, #8
 800887c:	bd70      	pop	{r4, r5, r6, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800887e:	f3ef 8310 	mrs	r3, PRIMASK
  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 8008882:	b913      	cbnz	r3, 800888a <osMessageQueueNew+0x1e>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8008884:	f3ef 8311 	mrs	r3, BASEPRI
 8008888:	b11b      	cbz	r3, 8008892 <osMessageQueueNew+0x26>
 800888a:	4b1a      	ldr	r3, [pc, #104]	; (80088f4 <osMessageQueueNew+0x88>)
 800888c:	681b      	ldr	r3, [r3, #0]
 800888e:	2b02      	cmp	r3, #2
 8008890:	d0f1      	beq.n	8008876 <osMessageQueueNew+0xa>
 8008892:	2800      	cmp	r0, #0
 8008894:	d0ef      	beq.n	8008876 <osMessageQueueNew+0xa>
 8008896:	2900      	cmp	r1, #0
 8008898:	d0ed      	beq.n	8008876 <osMessageQueueNew+0xa>
    if (attr != NULL) {
 800889a:	b1ec      	cbz	r4, 80088d8 <osMessageQueueNew+0x6c>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800889c:	e9d4 3202 	ldrd	r3, r2, [r4, #8]
 80088a0:	b193      	cbz	r3, 80088c8 <osMessageQueueNew+0x5c>
 80088a2:	2a4f      	cmp	r2, #79	; 0x4f
 80088a4:	d9e7      	bls.n	8008876 <osMessageQueueNew+0xa>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 80088a6:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 80088a8:	2a00      	cmp	r2, #0
 80088aa:	d0e4      	beq.n	8008876 <osMessageQueueNew+0xa>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 80088ac:	6966      	ldr	r6, [r4, #20]
 80088ae:	fb01 f500 	mul.w	r5, r1, r0
 80088b2:	42ae      	cmp	r6, r5
 80088b4:	d3df      	bcc.n	8008876 <osMessageQueueNew+0xa>
      hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 80088b6:	2500      	movs	r5, #0
 80088b8:	9500      	str	r5, [sp, #0]
 80088ba:	f000 fc64 	bl	8009186 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 80088be:	4605      	mov	r5, r0
 80088c0:	2800      	cmp	r0, #0
 80088c2:	d0d8      	beq.n	8008876 <osMessageQueueNew+0xa>
        name = attr->name;
 80088c4:	6824      	ldr	r4, [r4, #0]
 80088c6:	e00f      	b.n	80088e8 <osMessageQueueNew+0x7c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 80088c8:	2a00      	cmp	r2, #0
 80088ca:	d1d4      	bne.n	8008876 <osMessageQueueNew+0xa>
 80088cc:	6923      	ldr	r3, [r4, #16]
 80088ce:	2b00      	cmp	r3, #0
 80088d0:	d1d1      	bne.n	8008876 <osMessageQueueNew+0xa>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 80088d2:	6963      	ldr	r3, [r4, #20]
 80088d4:	2b00      	cmp	r3, #0
 80088d6:	d1ce      	bne.n	8008876 <osMessageQueueNew+0xa>
        hQueue = xQueueCreate (msg_count, msg_size);
 80088d8:	2200      	movs	r2, #0
 80088da:	f000 fca2 	bl	8009222 <xQueueGenericCreate>
    if (hQueue != NULL) {
 80088de:	4605      	mov	r5, r0
 80088e0:	2800      	cmp	r0, #0
 80088e2:	d0c8      	beq.n	8008876 <osMessageQueueNew+0xa>
      if (attr != NULL) {
 80088e4:	2c00      	cmp	r4, #0
 80088e6:	d1ed      	bne.n	80088c4 <osMessageQueueNew+0x58>
      vQueueAddToRegistry (hQueue, name);
 80088e8:	4621      	mov	r1, r4
 80088ea:	4628      	mov	r0, r5
 80088ec:	f001 f81a 	bl	8009924 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 80088f0:	e7c2      	b.n	8008878 <osMessageQueueNew+0xc>
 80088f2:	bf00      	nop
 80088f4:	20004aac 	.word	0x20004aac

080088f8 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 80088f8:	b513      	push	{r0, r1, r4, lr}
 80088fa:	461c      	mov	r4, r3
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80088fc:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8008900:	b123      	cbz	r3, 800890c <osMessageQueuePut+0x14>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8008902:	b9d8      	cbnz	r0, 800893c <osMessageQueuePut+0x44>
      stat = osErrorParameter;
 8008904:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 8008908:	b002      	add	sp, #8
 800890a:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800890c:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 8008910:	b913      	cbnz	r3, 8008918 <osMessageQueuePut+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8008912:	f3ef 8311 	mrs	r3, BASEPRI
 8008916:	b11b      	cbz	r3, 8008920 <osMessageQueuePut+0x28>
 8008918:	4b17      	ldr	r3, [pc, #92]	; (8008978 <osMessageQueuePut+0x80>)
 800891a:	681b      	ldr	r3, [r3, #0]
 800891c:	2b02      	cmp	r3, #2
 800891e:	d0f0      	beq.n	8008902 <osMessageQueuePut+0xa>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8008920:	2800      	cmp	r0, #0
 8008922:	d0ef      	beq.n	8008904 <osMessageQueuePut+0xc>
 8008924:	2900      	cmp	r1, #0
 8008926:	d0ed      	beq.n	8008904 <osMessageQueuePut+0xc>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8008928:	2300      	movs	r3, #0
 800892a:	4622      	mov	r2, r4
 800892c:	f000 fce0 	bl	80092f0 <xQueueGenericSend>
 8008930:	2801      	cmp	r0, #1
 8008932:	d010      	beq.n	8008956 <osMessageQueuePut+0x5e>
        if (timeout != 0U) {
 8008934:	b9e4      	cbnz	r4, 8008970 <osMessageQueuePut+0x78>
          stat = osErrorResource;
 8008936:	f06f 0002 	mvn.w	r0, #2
 800893a:	e7e5      	b.n	8008908 <osMessageQueuePut+0x10>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800893c:	2900      	cmp	r1, #0
 800893e:	d0e1      	beq.n	8008904 <osMessageQueuePut+0xc>
 8008940:	2c00      	cmp	r4, #0
 8008942:	d1df      	bne.n	8008904 <osMessageQueuePut+0xc>
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8008944:	4623      	mov	r3, r4
 8008946:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8008948:	9401      	str	r4, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800894a:	f000 fd84 	bl	8009456 <xQueueGenericSendFromISR>
 800894e:	2801      	cmp	r0, #1
 8008950:	d1f1      	bne.n	8008936 <osMessageQueuePut+0x3e>
        portYIELD_FROM_ISR (yield);
 8008952:	9b01      	ldr	r3, [sp, #4]
 8008954:	b90b      	cbnz	r3, 800895a <osMessageQueuePut+0x62>
  stat = osOK;
 8008956:	2000      	movs	r0, #0
 8008958:	e7d6      	b.n	8008908 <osMessageQueuePut+0x10>
        portYIELD_FROM_ISR (yield);
 800895a:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800895e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008962:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008966:	f3bf 8f4f 	dsb	sy
 800896a:	f3bf 8f6f 	isb	sy
 800896e:	e7f2      	b.n	8008956 <osMessageQueuePut+0x5e>
          stat = osErrorTimeout;
 8008970:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8008974:	e7c8      	b.n	8008908 <osMessageQueuePut+0x10>
 8008976:	bf00      	nop
 8008978:	20004aac 	.word	0x20004aac

0800897c <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 800897c:	b513      	push	{r0, r1, r4, lr}
 800897e:	461c      	mov	r4, r3
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8008980:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8008984:	b123      	cbz	r3, 8008990 <osMessageQueueGet+0x14>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8008986:	b9d0      	cbnz	r0, 80089be <osMessageQueueGet+0x42>
      stat = osErrorParameter;
 8008988:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 800898c:	b002      	add	sp, #8
 800898e:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8008990:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 8008994:	b913      	cbnz	r3, 800899c <osMessageQueueGet+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8008996:	f3ef 8311 	mrs	r3, BASEPRI
 800899a:	b11b      	cbz	r3, 80089a4 <osMessageQueueGet+0x28>
 800899c:	4b16      	ldr	r3, [pc, #88]	; (80089f8 <osMessageQueueGet+0x7c>)
 800899e:	681b      	ldr	r3, [r3, #0]
 80089a0:	2b02      	cmp	r3, #2
 80089a2:	d0f0      	beq.n	8008986 <osMessageQueueGet+0xa>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 80089a4:	2800      	cmp	r0, #0
 80089a6:	d0ef      	beq.n	8008988 <osMessageQueueGet+0xc>
 80089a8:	2900      	cmp	r1, #0
 80089aa:	d0ed      	beq.n	8008988 <osMessageQueueGet+0xc>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 80089ac:	4622      	mov	r2, r4
 80089ae:	f000 fe07 	bl	80095c0 <xQueueReceive>
 80089b2:	2801      	cmp	r0, #1
 80089b4:	d00f      	beq.n	80089d6 <osMessageQueueGet+0x5a>
        if (timeout != 0U) {
 80089b6:	b9dc      	cbnz	r4, 80089f0 <osMessageQueueGet+0x74>
          stat = osErrorResource;
 80089b8:	f06f 0002 	mvn.w	r0, #2
 80089bc:	e7e6      	b.n	800898c <osMessageQueueGet+0x10>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 80089be:	2900      	cmp	r1, #0
 80089c0:	d0e2      	beq.n	8008988 <osMessageQueueGet+0xc>
 80089c2:	2c00      	cmp	r4, #0
 80089c4:	d1e0      	bne.n	8008988 <osMessageQueueGet+0xc>
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 80089c6:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 80089c8:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 80089ca:	f000 ff5b 	bl	8009884 <xQueueReceiveFromISR>
 80089ce:	2801      	cmp	r0, #1
 80089d0:	d1f2      	bne.n	80089b8 <osMessageQueueGet+0x3c>
        portYIELD_FROM_ISR (yield);
 80089d2:	9b01      	ldr	r3, [sp, #4]
 80089d4:	b90b      	cbnz	r3, 80089da <osMessageQueueGet+0x5e>
  stat = osOK;
 80089d6:	2000      	movs	r0, #0
 80089d8:	e7d8      	b.n	800898c <osMessageQueueGet+0x10>
        portYIELD_FROM_ISR (yield);
 80089da:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80089de:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80089e2:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80089e6:	f3bf 8f4f 	dsb	sy
 80089ea:	f3bf 8f6f 	isb	sy
 80089ee:	e7f2      	b.n	80089d6 <osMessageQueueGet+0x5a>
          stat = osErrorTimeout;
 80089f0:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 80089f4:	e7ca      	b.n	800898c <osMessageQueueGet+0x10>
 80089f6:	bf00      	nop
 80089f8:	20004aac 	.word	0x20004aac

080089fc <vApplicationGetIdleTaskMemory>:
/*
  vApplicationGetIdleTaskMemory gets called when configSUPPORT_STATIC_ALLOCATION
  equals to 1 and is required for static memory allocation support.
*/
void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 80089fc:	4b03      	ldr	r3, [pc, #12]	; (8008a0c <vApplicationGetIdleTaskMemory+0x10>)
 80089fe:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 8008a00:	4b03      	ldr	r3, [pc, #12]	; (8008a10 <vApplicationGetIdleTaskMemory+0x14>)
 8008a02:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 8008a04:	2380      	movs	r3, #128	; 0x80
 8008a06:	6013      	str	r3, [r2, #0]
}
 8008a08:	4770      	bx	lr
 8008a0a:	bf00      	nop
 8008a0c:	200049ec 	.word	0x200049ec
 8008a10:	200047ec 	.word	0x200047ec

08008a14 <vApplicationGetTimerTaskMemory>:
/*
  vApplicationGetTimerTaskMemory gets called when configSUPPORT_STATIC_ALLOCATION
  equals to 1 and is required for static memory allocation support.
*/
void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 8008a14:	4b03      	ldr	r3, [pc, #12]	; (8008a24 <vApplicationGetTimerTaskMemory+0x10>)
 8008a16:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 8008a18:	4b03      	ldr	r3, [pc, #12]	; (8008a28 <vApplicationGetTimerTaskMemory+0x14>)
 8008a1a:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 8008a1c:	f44f 7380 	mov.w	r3, #256	; 0x100
 8008a20:	6013      	str	r3, [r2, #0]
}
 8008a22:	4770      	bx	lr
 8008a24:	20004eb0 	.word	0x20004eb0
 8008a28:	20004ab0 	.word	0x20004ab0

08008a2c <prvInsertBlockIntoFreeList>:
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
}
/*-----------------------------------------------------------*/

static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert )
{
 8008a2c:	b510      	push	{r4, lr}
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 8008a2e:	4b0f      	ldr	r3, [pc, #60]	; (8008a6c <prvInsertBlockIntoFreeList+0x40>)
 8008a30:	461a      	mov	r2, r3
 8008a32:	681b      	ldr	r3, [r3, #0]
 8008a34:	4283      	cmp	r3, r0
 8008a36:	d3fb      	bcc.n	8008a30 <prvInsertBlockIntoFreeList+0x4>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 8008a38:	6854      	ldr	r4, [r2, #4]
 8008a3a:	1911      	adds	r1, r2, r4
 8008a3c:	4288      	cmp	r0, r1
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 8008a3e:	bf01      	itttt	eq
 8008a40:	6841      	ldreq	r1, [r0, #4]
 8008a42:	4610      	moveq	r0, r2
 8008a44:	1909      	addeq	r1, r1, r4
 8008a46:	6051      	streq	r1, [r2, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 8008a48:	6844      	ldr	r4, [r0, #4]
 8008a4a:	1901      	adds	r1, r0, r4
 8008a4c:	428b      	cmp	r3, r1
 8008a4e:	d107      	bne.n	8008a60 <prvInsertBlockIntoFreeList+0x34>
	{
		if( pxIterator->pxNextFreeBlock != pxEnd )
 8008a50:	4907      	ldr	r1, [pc, #28]	; (8008a70 <prvInsertBlockIntoFreeList+0x44>)
 8008a52:	6809      	ldr	r1, [r1, #0]
 8008a54:	428b      	cmp	r3, r1
		{
			/* Form one big block from the two blocks. */
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 8008a56:	bf1f      	itttt	ne
 8008a58:	6859      	ldrne	r1, [r3, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 8008a5a:	681b      	ldrne	r3, [r3, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 8008a5c:	1909      	addne	r1, r1, r4
 8008a5e:	6041      	strne	r1, [r0, #4]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 8008a60:	4290      	cmp	r0, r2
		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
 8008a62:	6003      	str	r3, [r0, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 8008a64:	bf18      	it	ne
 8008a66:	6010      	strne	r0, [r2, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 8008a68:	bd10      	pop	{r4, pc}
 8008a6a:	bf00      	nop
 8008a6c:	20014f80 	.word	0x20014f80
 8008a70:	20004f70 	.word	0x20004f70

08008a74 <pvPortMalloc>:
{
 8008a74:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008a78:	4604      	mov	r4, r0
	vTaskSuspendAll();
 8008a7a:	f001 f9e3 	bl	8009e44 <vTaskSuspendAll>
		if( pxEnd == NULL )
 8008a7e:	4840      	ldr	r0, [pc, #256]	; (8008b80 <pvPortMalloc+0x10c>)
 8008a80:	4d40      	ldr	r5, [pc, #256]	; (8008b84 <pvPortMalloc+0x110>)
 8008a82:	6803      	ldr	r3, [r0, #0]
 8008a84:	bb0b      	cbnz	r3, 8008aca <pvPortMalloc+0x56>
	uxAddress = ( size_t ) ucHeap;
 8008a86:	4940      	ldr	r1, [pc, #256]	; (8008b88 <pvPortMalloc+0x114>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 8008a88:	074e      	lsls	r6, r1, #29
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 8008a8a:	bf1f      	itttt	ne
 8008a8c:	1dcb      	addne	r3, r1, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8008a8e:	f023 0307 	bicne.w	r3, r3, #7
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 8008a92:	f501 3280 	addne.w	r2, r1, #65536	; 0x10000
 8008a96:	1ad2      	subne	r2, r2, r3
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8008a98:	bf14      	ite	ne
 8008a9a:	4619      	movne	r1, r3
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
 8008a9c:	f44f 3280 	moveq.w	r2, #65536	; 0x10000
	uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
 8008aa0:	440a      	add	r2, r1
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 8008aa2:	4e3a      	ldr	r6, [pc, #232]	; (8008b8c <pvPortMalloc+0x118>)
	uxAddress -= xHeapStructSize;
 8008aa4:	3a08      	subs	r2, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8008aa6:	f022 0207 	bic.w	r2, r2, #7
	xStart.xBlockSize = ( size_t ) 0;
 8008aaa:	2300      	movs	r3, #0
 8008aac:	6073      	str	r3, [r6, #4]
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 8008aae:	6031      	str	r1, [r6, #0]
	pxEnd->pxNextFreeBlock = NULL;
 8008ab0:	e9c2 3300 	strd	r3, r3, [r2]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 8008ab4:	1a53      	subs	r3, r2, r1
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 8008ab6:	e9c1 2300 	strd	r2, r3, [r1]
	pxEnd = ( void * ) uxAddress;
 8008aba:	6002      	str	r2, [r0, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8008abc:	4a34      	ldr	r2, [pc, #208]	; (8008b90 <pvPortMalloc+0x11c>)
 8008abe:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8008ac0:	4a34      	ldr	r2, [pc, #208]	; (8008b94 <pvPortMalloc+0x120>)
 8008ac2:	6013      	str	r3, [r2, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 8008ac4:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 8008ac8:	602b      	str	r3, [r5, #0]
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 8008aca:	682f      	ldr	r7, [r5, #0]
 8008acc:	4227      	tst	r7, r4
 8008ace:	d151      	bne.n	8008b74 <pvPortMalloc+0x100>
			if( xWantedSize > 0 )
 8008ad0:	2c00      	cmp	r4, #0
 8008ad2:	d042      	beq.n	8008b5a <pvPortMalloc+0xe6>
				xWantedSize += xHeapStructSize;
 8008ad4:	f104 0308 	add.w	r3, r4, #8
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 8008ad8:	0761      	lsls	r1, r4, #29
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 8008ada:	bf1c      	itt	ne
 8008adc:	f023 0307 	bicne.w	r3, r3, #7
 8008ae0:	3308      	addne	r3, #8
			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 8008ae2:	2b00      	cmp	r3, #0
 8008ae4:	d046      	beq.n	8008b74 <pvPortMalloc+0x100>
 8008ae6:	4c2b      	ldr	r4, [pc, #172]	; (8008b94 <pvPortMalloc+0x120>)
 8008ae8:	6826      	ldr	r6, [r4, #0]
 8008aea:	429e      	cmp	r6, r3
 8008aec:	d342      	bcc.n	8008b74 <pvPortMalloc+0x100>
				pxBlock = xStart.pxNextFreeBlock;
 8008aee:	4a27      	ldr	r2, [pc, #156]	; (8008b8c <pvPortMalloc+0x118>)
 8008af0:	6815      	ldr	r5, [r2, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 8008af2:	6869      	ldr	r1, [r5, #4]
 8008af4:	4299      	cmp	r1, r3
 8008af6:	d204      	bcs.n	8008b02 <pvPortMalloc+0x8e>
 8008af8:	f8d5 c000 	ldr.w	ip, [r5]
 8008afc:	f1bc 0f00 	cmp.w	ip, #0
 8008b00:	d115      	bne.n	8008b2e <pvPortMalloc+0xba>
				if( pxBlock != pxEnd )
 8008b02:	6800      	ldr	r0, [r0, #0]
 8008b04:	42a8      	cmp	r0, r5
 8008b06:	d035      	beq.n	8008b74 <pvPortMalloc+0x100>
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 8008b08:	1ac9      	subs	r1, r1, r3
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 8008b0a:	6828      	ldr	r0, [r5, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8008b0c:	f8d2 8000 	ldr.w	r8, [r2]
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 8008b10:	6010      	str	r0, [r2, #0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 8008b12:	2910      	cmp	r1, #16
 8008b14:	d912      	bls.n	8008b3c <pvPortMalloc+0xc8>
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 8008b16:	18e8      	adds	r0, r5, r3
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 8008b18:	0742      	lsls	r2, r0, #29
 8008b1a:	d00b      	beq.n	8008b34 <pvPortMalloc+0xc0>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 8008b1c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008b20:	f383 8811 	msr	BASEPRI, r3
 8008b24:	f3bf 8f6f 	isb	sy
 8008b28:	f3bf 8f4f 	dsb	sy
 8008b2c:	e7fe      	b.n	8008b2c <pvPortMalloc+0xb8>
 8008b2e:	462a      	mov	r2, r5
 8008b30:	4665      	mov	r5, ip
 8008b32:	e7de      	b.n	8008af2 <pvPortMalloc+0x7e>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 8008b34:	6041      	str	r1, [r0, #4]
						pxBlock->xBlockSize = xWantedSize;
 8008b36:	606b      	str	r3, [r5, #4]
						prvInsertBlockIntoFreeList( pxNewBlockLink );
 8008b38:	f7ff ff78 	bl	8008a2c <prvInsertBlockIntoFreeList>
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8008b3c:	4914      	ldr	r1, [pc, #80]	; (8008b90 <pvPortMalloc+0x11c>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8008b3e:	686b      	ldr	r3, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8008b40:	6808      	ldr	r0, [r1, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8008b42:	1af6      	subs	r6, r6, r3
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 8008b44:	431f      	orrs	r7, r3
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8008b46:	4286      	cmp	r6, r0
					pxBlock->pxNextFreeBlock = NULL;
 8008b48:	f04f 0300 	mov.w	r3, #0
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8008b4c:	6026      	str	r6, [r4, #0]
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 8008b4e:	bf38      	it	cc
 8008b50:	600e      	strcc	r6, [r1, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8008b52:	f108 0408 	add.w	r4, r8, #8
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 8008b56:	606f      	str	r7, [r5, #4]
					pxBlock->pxNextFreeBlock = NULL;
 8008b58:	602b      	str	r3, [r5, #0]
	( void ) xTaskResumeAll();
 8008b5a:	f001 fa17 	bl	8009f8c <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 8008b5e:	0763      	lsls	r3, r4, #29
 8008b60:	d00a      	beq.n	8008b78 <pvPortMalloc+0x104>
 8008b62:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008b66:	f383 8811 	msr	BASEPRI, r3
 8008b6a:	f3bf 8f6f 	isb	sy
 8008b6e:	f3bf 8f4f 	dsb	sy
 8008b72:	e7fe      	b.n	8008b72 <pvPortMalloc+0xfe>
void *pvReturn = NULL;
 8008b74:	2400      	movs	r4, #0
 8008b76:	e7f0      	b.n	8008b5a <pvPortMalloc+0xe6>
}
 8008b78:	4620      	mov	r0, r4
 8008b7a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8008b7e:	bf00      	nop
 8008b80:	20004f70 	.word	0x20004f70
 8008b84:	20014f74 	.word	0x20014f74
 8008b88:	20004f74 	.word	0x20004f74
 8008b8c:	20014f80 	.word	0x20014f80
 8008b90:	20014f7c 	.word	0x20014f7c
 8008b94:	20014f78 	.word	0x20014f78

08008b98 <vPortFree>:
{
 8008b98:	b510      	push	{r4, lr}
	if( pv != NULL )
 8008b9a:	4604      	mov	r4, r0
 8008b9c:	b370      	cbz	r0, 8008bfc <vPortFree+0x64>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 8008b9e:	4a18      	ldr	r2, [pc, #96]	; (8008c00 <vPortFree+0x68>)
 8008ba0:	f850 3c04 	ldr.w	r3, [r0, #-4]
 8008ba4:	6812      	ldr	r2, [r2, #0]
 8008ba6:	4213      	tst	r3, r2
 8008ba8:	d108      	bne.n	8008bbc <vPortFree+0x24>
 8008baa:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008bae:	f383 8811 	msr	BASEPRI, r3
 8008bb2:	f3bf 8f6f 	isb	sy
 8008bb6:	f3bf 8f4f 	dsb	sy
 8008bba:	e7fe      	b.n	8008bba <vPortFree+0x22>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 8008bbc:	f850 1c08 	ldr.w	r1, [r0, #-8]
 8008bc0:	b141      	cbz	r1, 8008bd4 <vPortFree+0x3c>
 8008bc2:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008bc6:	f383 8811 	msr	BASEPRI, r3
 8008bca:	f3bf 8f6f 	isb	sy
 8008bce:	f3bf 8f4f 	dsb	sy
 8008bd2:	e7fe      	b.n	8008bd2 <vPortFree+0x3a>
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 8008bd4:	ea23 0302 	bic.w	r3, r3, r2
 8008bd8:	f840 3c04 	str.w	r3, [r0, #-4]
				vTaskSuspendAll();
 8008bdc:	f001 f932 	bl	8009e44 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 8008be0:	4a08      	ldr	r2, [pc, #32]	; (8008c04 <vPortFree+0x6c>)
 8008be2:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8008be6:	6811      	ldr	r1, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8008be8:	f1a4 0008 	sub.w	r0, r4, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 8008bec:	440b      	add	r3, r1
 8008bee:	6013      	str	r3, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8008bf0:	f7ff ff1c 	bl	8008a2c <prvInsertBlockIntoFreeList>
}
 8008bf4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				( void ) xTaskResumeAll();
 8008bf8:	f001 b9c8 	b.w	8009f8c <xTaskResumeAll>
}
 8008bfc:	bd10      	pop	{r4, pc}
 8008bfe:	bf00      	nop
 8008c00:	20014f74 	.word	0x20014f74
 8008c04:	20014f78 	.word	0x20014f78

08008c08 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8008c08:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 8008c0c:	f04f 32ff 	mov.w	r2, #4294967295

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8008c10:	e9c0 2302 	strd	r2, r3, [r0, #8]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8008c14:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8008c16:	6103      	str	r3, [r0, #16]

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 8008c18:	2300      	movs	r3, #0
 8008c1a:	6003      	str	r3, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 8008c1c:	4770      	bx	lr

08008c1e <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 8008c1e:	2300      	movs	r3, #0
 8008c20:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 8008c22:	4770      	bx	lr

08008c24 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 8008c24:	6843      	ldr	r3, [r0, #4]
	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
 8008c26:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 8008c28:	689a      	ldr	r2, [r3, #8]
 8008c2a:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
 8008c2c:	689a      	ldr	r2, [r3, #8]
 8008c2e:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious = pxNewListItem;
 8008c30:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 8008c32:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 8008c34:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8008c36:	3301      	adds	r3, #1
 8008c38:	6003      	str	r3, [r0, #0]
}
 8008c3a:	4770      	bx	lr

08008c3c <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 8008c3c:	b530      	push	{r4, r5, lr}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 8008c3e:	680c      	ldr	r4, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 8008c40:	1c63      	adds	r3, r4, #1
 8008c42:	d10a      	bne.n	8008c5a <vListInsert+0x1e>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
 8008c44:	6903      	ldr	r3, [r0, #16]
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
 8008c46:	685a      	ldr	r2, [r3, #4]
 8008c48:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 8008c4a:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
 8008c4c:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 8008c4e:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 8008c50:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 8008c52:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8008c54:	3301      	adds	r3, #1
 8008c56:	6003      	str	r3, [r0, #0]
}
 8008c58:	bd30      	pop	{r4, r5, pc}
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 8008c5a:	f100 0208 	add.w	r2, r0, #8
 8008c5e:	4613      	mov	r3, r2
 8008c60:	6852      	ldr	r2, [r2, #4]
 8008c62:	6815      	ldr	r5, [r2, #0]
 8008c64:	42a5      	cmp	r5, r4
 8008c66:	d9fa      	bls.n	8008c5e <vListInsert+0x22>
 8008c68:	e7ed      	b.n	8008c46 <vListInsert+0xa>

08008c6a <uxListRemove>:
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8008c6a:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
List_t * const pxList = pxItemToRemove->pxContainer;
 8008c6e:	6903      	ldr	r3, [r0, #16]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8008c70:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 8008c72:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 8008c74:	6859      	ldr	r1, [r3, #4]
 8008c76:	4281      	cmp	r1, r0
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 8008c78:	bf08      	it	eq
 8008c7a:	605a      	streq	r2, [r3, #4]
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
 8008c7c:	2200      	movs	r2, #0
 8008c7e:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
 8008c80:	681a      	ldr	r2, [r3, #0]
 8008c82:	3a01      	subs	r2, #1
 8008c84:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
 8008c86:	6818      	ldr	r0, [r3, #0]
}
 8008c88:	4770      	bx	lr
	...

08008c8c <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 8008c8c:	4808      	ldr	r0, [pc, #32]	; (8008cb0 <prvPortStartFirstTask+0x24>)
 8008c8e:	6800      	ldr	r0, [r0, #0]
 8008c90:	6800      	ldr	r0, [r0, #0]
 8008c92:	f380 8808 	msr	MSP, r0
 8008c96:	f04f 0000 	mov.w	r0, #0
 8008c9a:	f380 8814 	msr	CONTROL, r0
 8008c9e:	b662      	cpsie	i
 8008ca0:	b661      	cpsie	f
 8008ca2:	f3bf 8f4f 	dsb	sy
 8008ca6:	f3bf 8f6f 	isb	sy
 8008caa:	df00      	svc	0
 8008cac:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 8008cae:	0000      	.short	0x0000
 8008cb0:	e000ed08 	.word	0xe000ed08

08008cb4 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 8008cb4:	f8df 000c 	ldr.w	r0, [pc, #12]	; 8008cc4 <vPortEnableVFP+0x10>
 8008cb8:	6801      	ldr	r1, [r0, #0]
 8008cba:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8008cbe:	6001      	str	r1, [r0, #0]
 8008cc0:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 8008cc2:	0000      	.short	0x0000
 8008cc4:	e000ed88 	.word	0xe000ed88

08008cc8 <prvTaskExitError>:
{
 8008cc8:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 8008cca:	2300      	movs	r3, #0
 8008ccc:	9301      	str	r3, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 8008cce:	4b0d      	ldr	r3, [pc, #52]	; (8008d04 <prvTaskExitError+0x3c>)
 8008cd0:	681b      	ldr	r3, [r3, #0]
 8008cd2:	3301      	adds	r3, #1
 8008cd4:	d008      	beq.n	8008ce8 <prvTaskExitError+0x20>
 8008cd6:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008cda:	f383 8811 	msr	BASEPRI, r3
 8008cde:	f3bf 8f6f 	isb	sy
 8008ce2:	f3bf 8f4f 	dsb	sy
 8008ce6:	e7fe      	b.n	8008ce6 <prvTaskExitError+0x1e>
 8008ce8:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008cec:	f383 8811 	msr	BASEPRI, r3
 8008cf0:	f3bf 8f6f 	isb	sy
 8008cf4:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 8008cf8:	9b01      	ldr	r3, [sp, #4]
 8008cfa:	2b00      	cmp	r3, #0
 8008cfc:	d0fc      	beq.n	8008cf8 <prvTaskExitError+0x30>
}
 8008cfe:	b002      	add	sp, #8
 8008d00:	4770      	bx	lr
 8008d02:	bf00      	nop
 8008d04:	20000088 	.word	0x20000088

08008d08 <pxPortInitialiseStack>:
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 8008d08:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8008d0c:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 8008d10:	4b07      	ldr	r3, [pc, #28]	; (8008d30 <pxPortInitialiseStack+0x28>)
 8008d12:	f840 3c0c 	str.w	r3, [r0, #-12]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 8008d16:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 8008d1a:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 8008d1e:	f840 1c08 	str.w	r1, [r0, #-8]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 8008d22:	f840 2c20 	str.w	r2, [r0, #-32]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 8008d26:	f840 3c24 	str.w	r3, [r0, #-36]
}
 8008d2a:	3844      	subs	r0, #68	; 0x44
 8008d2c:	4770      	bx	lr
 8008d2e:	bf00      	nop
 8008d30:	08008cc9 	.word	0x08008cc9
	...

08008d40 <SVC_Handler>:
	__asm volatile (
 8008d40:	4b07      	ldr	r3, [pc, #28]	; (8008d60 <pxCurrentTCBConst2>)
 8008d42:	6819      	ldr	r1, [r3, #0]
 8008d44:	6808      	ldr	r0, [r1, #0]
 8008d46:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008d4a:	f380 8809 	msr	PSP, r0
 8008d4e:	f3bf 8f6f 	isb	sy
 8008d52:	f04f 0000 	mov.w	r0, #0
 8008d56:	f380 8811 	msr	BASEPRI, r0
 8008d5a:	4770      	bx	lr
 8008d5c:	f3af 8000 	nop.w

08008d60 <pxCurrentTCBConst2>:
 8008d60:	20014fd0 	.word	0x20014fd0

08008d64 <vPortEnterCritical>:
 8008d64:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008d68:	f383 8811 	msr	BASEPRI, r3
 8008d6c:	f3bf 8f6f 	isb	sy
 8008d70:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 8008d74:	4a0a      	ldr	r2, [pc, #40]	; (8008da0 <vPortEnterCritical+0x3c>)
 8008d76:	6813      	ldr	r3, [r2, #0]
 8008d78:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 8008d7a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 8008d7c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 8008d7e:	d10e      	bne.n	8008d9e <vPortEnterCritical+0x3a>
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 8008d80:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008d84:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	; 0xd04
 8008d88:	b2db      	uxtb	r3, r3
 8008d8a:	b143      	cbz	r3, 8008d9e <vPortEnterCritical+0x3a>
 8008d8c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008d90:	f383 8811 	msr	BASEPRI, r3
 8008d94:	f3bf 8f6f 	isb	sy
 8008d98:	f3bf 8f4f 	dsb	sy
 8008d9c:	e7fe      	b.n	8008d9c <vPortEnterCritical+0x38>
}
 8008d9e:	4770      	bx	lr
 8008da0:	20000088 	.word	0x20000088

08008da4 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 8008da4:	4a08      	ldr	r2, [pc, #32]	; (8008dc8 <vPortExitCritical+0x24>)
 8008da6:	6813      	ldr	r3, [r2, #0]
 8008da8:	b943      	cbnz	r3, 8008dbc <vPortExitCritical+0x18>
 8008daa:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008dae:	f383 8811 	msr	BASEPRI, r3
 8008db2:	f3bf 8f6f 	isb	sy
 8008db6:	f3bf 8f4f 	dsb	sy
 8008dba:	e7fe      	b.n	8008dba <vPortExitCritical+0x16>
	uxCriticalNesting--;
 8008dbc:	3b01      	subs	r3, #1
 8008dbe:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 8008dc0:	b90b      	cbnz	r3, 8008dc6 <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 8008dc2:	f383 8811 	msr	BASEPRI, r3
}
 8008dc6:	4770      	bx	lr
 8008dc8:	20000088 	.word	0x20000088
 8008dcc:	00000000 	.word	0x00000000

08008dd0 <PendSV_Handler>:
	__asm volatile
 8008dd0:	f3ef 8009 	mrs	r0, PSP
 8008dd4:	f3bf 8f6f 	isb	sy
 8008dd8:	4b15      	ldr	r3, [pc, #84]	; (8008e30 <pxCurrentTCBConst>)
 8008dda:	681a      	ldr	r2, [r3, #0]
 8008ddc:	f01e 0f10 	tst.w	lr, #16
 8008de0:	bf08      	it	eq
 8008de2:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 8008de6:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008dea:	6010      	str	r0, [r2, #0]
 8008dec:	e92d 0009 	stmdb	sp!, {r0, r3}
 8008df0:	f04f 0050 	mov.w	r0, #80	; 0x50
 8008df4:	f380 8811 	msr	BASEPRI, r0
 8008df8:	f3bf 8f4f 	dsb	sy
 8008dfc:	f3bf 8f6f 	isb	sy
 8008e00:	f001 f95c 	bl	800a0bc <vTaskSwitchContext>
 8008e04:	f04f 0000 	mov.w	r0, #0
 8008e08:	f380 8811 	msr	BASEPRI, r0
 8008e0c:	bc09      	pop	{r0, r3}
 8008e0e:	6819      	ldr	r1, [r3, #0]
 8008e10:	6808      	ldr	r0, [r1, #0]
 8008e12:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008e16:	f01e 0f10 	tst.w	lr, #16
 8008e1a:	bf08      	it	eq
 8008e1c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 8008e20:	f380 8809 	msr	PSP, r0
 8008e24:	f3bf 8f6f 	isb	sy
 8008e28:	4770      	bx	lr
 8008e2a:	bf00      	nop
 8008e2c:	f3af 8000 	nop.w

08008e30 <pxCurrentTCBConst>:
 8008e30:	20014fd0 	.word	0x20014fd0

08008e34 <SysTick_Handler>:
{
 8008e34:	b508      	push	{r3, lr}
	__asm volatile
 8008e36:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008e3a:	f383 8811 	msr	BASEPRI, r3
 8008e3e:	f3bf 8f6f 	isb	sy
 8008e42:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 8008e46:	f001 f80b 	bl	8009e60 <xTaskIncrementTick>
 8008e4a:	b128      	cbz	r0, 8008e58 <SysTick_Handler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 8008e4c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008e50:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008e54:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
	__asm volatile
 8008e58:	2300      	movs	r3, #0
 8008e5a:	f383 8811 	msr	BASEPRI, r3
}
 8008e5e:	bd08      	pop	{r3, pc}

08008e60 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 8008e60:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 8008e64:	2300      	movs	r3, #0
 8008e66:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 8008e68:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 8008e6a:	4b05      	ldr	r3, [pc, #20]	; (8008e80 <vPortSetupTimerInterrupt+0x20>)
 8008e6c:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8008e70:	681b      	ldr	r3, [r3, #0]
 8008e72:	fbb3 f3f1 	udiv	r3, r3, r1
 8008e76:	3b01      	subs	r3, #1
 8008e78:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 8008e7a:	2307      	movs	r3, #7
 8008e7c:	6113      	str	r3, [r2, #16]
}
 8008e7e:	4770      	bx	lr
 8008e80:	2000007c 	.word	0x2000007c

08008e84 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 8008e84:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
{
 8008e88:	b537      	push	{r0, r1, r2, r4, r5, lr}
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 8008e8a:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	; 0xd00
 8008e8e:	4a3a      	ldr	r2, [pc, #232]	; (8008f78 <xPortStartScheduler+0xf4>)
 8008e90:	4291      	cmp	r1, r2
 8008e92:	d108      	bne.n	8008ea6 <xPortStartScheduler+0x22>
	__asm volatile
 8008e94:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008e98:	f383 8811 	msr	BASEPRI, r3
 8008e9c:	f3bf 8f6f 	isb	sy
 8008ea0:	f3bf 8f4f 	dsb	sy
 8008ea4:	e7fe      	b.n	8008ea4 <xPortStartScheduler+0x20>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 8008ea6:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	; 0xd00
 8008eaa:	4b34      	ldr	r3, [pc, #208]	; (8008f7c <xPortStartScheduler+0xf8>)
 8008eac:	429a      	cmp	r2, r3
 8008eae:	d108      	bne.n	8008ec2 <xPortStartScheduler+0x3e>
 8008eb0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008eb4:	f383 8811 	msr	BASEPRI, r3
 8008eb8:	f3bf 8f6f 	isb	sy
 8008ebc:	f3bf 8f4f 	dsb	sy
 8008ec0:	e7fe      	b.n	8008ec0 <xPortStartScheduler+0x3c>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 8008ec2:	4b2f      	ldr	r3, [pc, #188]	; (8008f80 <xPortStartScheduler+0xfc>)
 8008ec4:	781a      	ldrb	r2, [r3, #0]
 8008ec6:	b2d2      	uxtb	r2, r2
 8008ec8:	9201      	str	r2, [sp, #4]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 8008eca:	22ff      	movs	r2, #255	; 0xff
 8008ecc:	701a      	strb	r2, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 8008ece:	781b      	ldrb	r3, [r3, #0]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8008ed0:	4a2c      	ldr	r2, [pc, #176]	; (8008f84 <xPortStartScheduler+0x100>)
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 8008ed2:	b2db      	uxtb	r3, r3
 8008ed4:	f88d 3003 	strb.w	r3, [sp, #3]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8008ed8:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8008edc:	f003 0350 	and.w	r3, r3, #80	; 0x50
 8008ee0:	7013      	strb	r3, [r2, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 8008ee2:	4a29      	ldr	r2, [pc, #164]	; (8008f88 <xPortStartScheduler+0x104>)
 8008ee4:	2307      	movs	r3, #7
 8008ee6:	6013      	str	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 8008ee8:	2100      	movs	r1, #0
 8008eea:	f89d 0003 	ldrb.w	r0, [sp, #3]
 8008eee:	0600      	lsls	r0, r0, #24
 8008ef0:	f103 34ff 	add.w	r4, r3, #4294967295
 8008ef4:	d40c      	bmi.n	8008f10 <xPortStartScheduler+0x8c>
 8008ef6:	b111      	cbz	r1, 8008efe <xPortStartScheduler+0x7a>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 8008ef8:	2b03      	cmp	r3, #3
 8008efa:	6013      	str	r3, [r2, #0]
 8008efc:	d011      	beq.n	8008f22 <xPortStartScheduler+0x9e>
 8008efe:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008f02:	f383 8811 	msr	BASEPRI, r3
 8008f06:	f3bf 8f6f 	isb	sy
 8008f0a:	f3bf 8f4f 	dsb	sy
 8008f0e:	e7fe      	b.n	8008f0e <xPortStartScheduler+0x8a>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 8008f10:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8008f14:	005b      	lsls	r3, r3, #1
 8008f16:	b2db      	uxtb	r3, r3
 8008f18:	f88d 3003 	strb.w	r3, [sp, #3]
 8008f1c:	2101      	movs	r1, #1
 8008f1e:	4623      	mov	r3, r4
 8008f20:	e7e3      	b.n	8008eea <xPortStartScheduler+0x66>
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 8008f22:	f44f 7340 	mov.w	r3, #768	; 0x300
 8008f26:	6013      	str	r3, [r2, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 8008f28:	9b01      	ldr	r3, [sp, #4]
 8008f2a:	4a15      	ldr	r2, [pc, #84]	; (8008f80 <xPortStartScheduler+0xfc>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 8008f2c:	f04f 24e0 	mov.w	r4, #3758153728	; 0xe000e000
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 8008f30:	b2db      	uxtb	r3, r3
 8008f32:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 8008f34:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	; 0xd20
 8008f38:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8008f3c:	f8c4 3d20 	str.w	r3, [r4, #3360]	; 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 8008f40:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	; 0xd20
 8008f44:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 8008f48:	f8c4 3d20 	str.w	r3, [r4, #3360]	; 0xd20
	vPortSetupTimerInterrupt();
 8008f4c:	f7ff ff88 	bl	8008e60 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 8008f50:	4b0e      	ldr	r3, [pc, #56]	; (8008f8c <xPortStartScheduler+0x108>)
 8008f52:	2500      	movs	r5, #0
 8008f54:	601d      	str	r5, [r3, #0]
	vPortEnableVFP();
 8008f56:	f7ff fead 	bl	8008cb4 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 8008f5a:	f8d4 3f34 	ldr.w	r3, [r4, #3892]	; 0xf34
 8008f5e:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 8008f62:	f8c4 3f34 	str.w	r3, [r4, #3892]	; 0xf34
	prvPortStartFirstTask();
 8008f66:	f7ff fe91 	bl	8008c8c <prvPortStartFirstTask>
	vTaskSwitchContext();
 8008f6a:	f001 f8a7 	bl	800a0bc <vTaskSwitchContext>
	prvTaskExitError();
 8008f6e:	f7ff feab 	bl	8008cc8 <prvTaskExitError>
}
 8008f72:	4628      	mov	r0, r5
 8008f74:	b003      	add	sp, #12
 8008f76:	bd30      	pop	{r4, r5, pc}
 8008f78:	410fc271 	.word	0x410fc271
 8008f7c:	410fc270 	.word	0x410fc270
 8008f80:	e000e400 	.word	0xe000e400
 8008f84:	20014f88 	.word	0x20014f88
 8008f88:	20014f8c 	.word	0x20014f8c
 8008f8c:	20000088 	.word	0x20000088

08008f90 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 8008f90:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 8008f94:	2b0f      	cmp	r3, #15
 8008f96:	d90e      	bls.n	8008fb6 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 8008f98:	4a11      	ldr	r2, [pc, #68]	; (8008fe0 <vPortValidateInterruptPriority+0x50>)
 8008f9a:	5c9b      	ldrb	r3, [r3, r2]
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 8008f9c:	4a11      	ldr	r2, [pc, #68]	; (8008fe4 <vPortValidateInterruptPriority+0x54>)
 8008f9e:	7812      	ldrb	r2, [r2, #0]
 8008fa0:	429a      	cmp	r2, r3
 8008fa2:	d908      	bls.n	8008fb6 <vPortValidateInterruptPriority+0x26>
 8008fa4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008fa8:	f383 8811 	msr	BASEPRI, r3
 8008fac:	f3bf 8f6f 	isb	sy
 8008fb0:	f3bf 8f4f 	dsb	sy
 8008fb4:	e7fe      	b.n	8008fb4 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 8008fb6:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008fba:	4a0b      	ldr	r2, [pc, #44]	; (8008fe8 <vPortValidateInterruptPriority+0x58>)
 8008fbc:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	; 0xd0c
 8008fc0:	6812      	ldr	r2, [r2, #0]
 8008fc2:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8008fc6:	4293      	cmp	r3, r2
 8008fc8:	d908      	bls.n	8008fdc <vPortValidateInterruptPriority+0x4c>
 8008fca:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008fce:	f383 8811 	msr	BASEPRI, r3
 8008fd2:	f3bf 8f6f 	isb	sy
 8008fd6:	f3bf 8f4f 	dsb	sy
 8008fda:	e7fe      	b.n	8008fda <vPortValidateInterruptPriority+0x4a>
	}
 8008fdc:	4770      	bx	lr
 8008fde:	bf00      	nop
 8008fe0:	e000e3f0 	.word	0xe000e3f0
 8008fe4:	20014f88 	.word	0x20014f88
 8008fe8:	20014f8c 	.word	0x20014f8c

08008fec <prvIsQueueEmpty>:
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
 8008fec:	b510      	push	{r4, lr}
 8008fee:	4604      	mov	r4, r0
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8008ff0:	f7ff feb8 	bl	8008d64 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 8008ff4:	6ba4      	ldr	r4, [r4, #56]	; 0x38
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 8008ff6:	f7ff fed5 	bl	8008da4 <vPortExitCritical>

	return xReturn;
}
 8008ffa:	fab4 f084 	clz	r0, r4
 8008ffe:	0940      	lsrs	r0, r0, #5
 8009000:	bd10      	pop	{r4, pc}

08009002 <prvCopyDataToQueue>:
{
 8009002:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8009004:	4615      	mov	r5, r2
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 8009006:	6c02      	ldr	r2, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8009008:	6b86      	ldr	r6, [r0, #56]	; 0x38
{
 800900a:	4604      	mov	r4, r0
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800900c:	b952      	cbnz	r2, 8009024 <prvCopyDataToQueue+0x22>
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800900e:	6807      	ldr	r7, [r0, #0]
 8009010:	bb47      	cbnz	r7, 8009064 <prvCopyDataToQueue+0x62>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 8009012:	6880      	ldr	r0, [r0, #8]
 8009014:	f001 f9ae 	bl	800a374 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 8009018:	60a7      	str	r7, [r4, #8]
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 800901a:	4605      	mov	r5, r0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800901c:	3601      	adds	r6, #1
 800901e:	63a6      	str	r6, [r4, #56]	; 0x38
}
 8009020:	4628      	mov	r0, r5
 8009022:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	else if( xPosition == queueSEND_TO_BACK )
 8009024:	b965      	cbnz	r5, 8009040 <prvCopyDataToQueue+0x3e>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8009026:	6840      	ldr	r0, [r0, #4]
 8009028:	f017 fdea 	bl	8020c00 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800902c:	6863      	ldr	r3, [r4, #4]
 800902e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8009030:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8009032:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8009034:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8009036:	4293      	cmp	r3, r2
 8009038:	d3f0      	bcc.n	800901c <prvCopyDataToQueue+0x1a>
			pxQueue->pcWriteTo = pxQueue->pcHead;
 800903a:	6823      	ldr	r3, [r4, #0]
 800903c:	6063      	str	r3, [r4, #4]
 800903e:	e7ed      	b.n	800901c <prvCopyDataToQueue+0x1a>
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 8009040:	68c0      	ldr	r0, [r0, #12]
 8009042:	f017 fddd 	bl	8020c00 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8009046:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8009048:	68e3      	ldr	r3, [r4, #12]
 800904a:	4251      	negs	r1, r2
 800904c:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800904e:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8009050:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8009052:	4293      	cmp	r3, r2
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 8009054:	bf3e      	ittt	cc
 8009056:	68a3      	ldrcc	r3, [r4, #8]
 8009058:	185b      	addcc	r3, r3, r1
 800905a:	60e3      	strcc	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 800905c:	2d02      	cmp	r5, #2
 800905e:	d101      	bne.n	8009064 <prvCopyDataToQueue+0x62>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8009060:	b116      	cbz	r6, 8009068 <prvCopyDataToQueue+0x66>
				--uxMessagesWaiting;
 8009062:	3e01      	subs	r6, #1
BaseType_t xReturn = pdFALSE;
 8009064:	2500      	movs	r5, #0
 8009066:	e7d9      	b.n	800901c <prvCopyDataToQueue+0x1a>
 8009068:	4635      	mov	r5, r6
 800906a:	e7d7      	b.n	800901c <prvCopyDataToQueue+0x1a>

0800906c <prvCopyDataFromQueue>:
{
 800906c:	4603      	mov	r3, r0
 800906e:	b410      	push	{r4}
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8009070:	6c1a      	ldr	r2, [r3, #64]	; 0x40
{
 8009072:	4608      	mov	r0, r1
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8009074:	b16a      	cbz	r2, 8009092 <prvCopyDataFromQueue+0x26>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8009076:	68dc      	ldr	r4, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8009078:	6899      	ldr	r1, [r3, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800907a:	4414      	add	r4, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800907c:	428c      	cmp	r4, r1
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800907e:	bf28      	it	cs
 8009080:	6819      	ldrcs	r1, [r3, #0]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8009082:	60dc      	str	r4, [r3, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8009084:	bf28      	it	cs
 8009086:	60d9      	strcs	r1, [r3, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8009088:	68d9      	ldr	r1, [r3, #12]
}
 800908a:	f85d 4b04 	ldr.w	r4, [sp], #4
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800908e:	f017 bdb7 	b.w	8020c00 <memcpy>
}
 8009092:	f85d 4b04 	ldr.w	r4, [sp], #4
 8009096:	4770      	bx	lr

08009098 <prvUnlockQueue>:
{
 8009098:	b570      	push	{r4, r5, r6, lr}
 800909a:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 800909c:	f7ff fe62 	bl	8008d64 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 80090a0:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80090a4:	f104 0624 	add.w	r6, r4, #36	; 0x24
		int8_t cTxLock = pxQueue->cTxLock;
 80090a8:	b26d      	sxtb	r5, r5
		while( cTxLock > queueLOCKED_UNMODIFIED )
 80090aa:	2d00      	cmp	r5, #0
 80090ac:	dc14      	bgt.n	80090d8 <prvUnlockQueue+0x40>
		pxQueue->cTxLock = queueUNLOCKED;
 80090ae:	23ff      	movs	r3, #255	; 0xff
 80090b0:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 80090b4:	f7ff fe76 	bl	8008da4 <vPortExitCritical>
	taskENTER_CRITICAL();
 80090b8:	f7ff fe54 	bl	8008d64 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 80090bc:	f894 5044 	ldrb.w	r5, [r4, #68]	; 0x44
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80090c0:	f104 0610 	add.w	r6, r4, #16
		int8_t cRxLock = pxQueue->cRxLock;
 80090c4:	b26d      	sxtb	r5, r5
		while( cRxLock > queueLOCKED_UNMODIFIED )
 80090c6:	2d00      	cmp	r5, #0
 80090c8:	dc12      	bgt.n	80090f0 <prvUnlockQueue+0x58>
		pxQueue->cRxLock = queueUNLOCKED;
 80090ca:	23ff      	movs	r3, #255	; 0xff
 80090cc:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
}
 80090d0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 80090d4:	f7ff be66 	b.w	8008da4 <vPortExitCritical>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80090d8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80090da:	2b00      	cmp	r3, #0
 80090dc:	d0e7      	beq.n	80090ae <prvUnlockQueue+0x16>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80090de:	4630      	mov	r0, r6
 80090e0:	f001 f864 	bl	800a1ac <xTaskRemoveFromEventList>
 80090e4:	b108      	cbz	r0, 80090ea <prvUnlockQueue+0x52>
						vTaskMissedYield();
 80090e6:	f001 f8ed 	bl	800a2c4 <vTaskMissedYield>
			--cTxLock;
 80090ea:	3d01      	subs	r5, #1
 80090ec:	b26d      	sxtb	r5, r5
 80090ee:	e7dc      	b.n	80090aa <prvUnlockQueue+0x12>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80090f0:	6923      	ldr	r3, [r4, #16]
 80090f2:	2b00      	cmp	r3, #0
 80090f4:	d0e9      	beq.n	80090ca <prvUnlockQueue+0x32>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80090f6:	4630      	mov	r0, r6
 80090f8:	f001 f858 	bl	800a1ac <xTaskRemoveFromEventList>
 80090fc:	b108      	cbz	r0, 8009102 <prvUnlockQueue+0x6a>
					vTaskMissedYield();
 80090fe:	f001 f8e1 	bl	800a2c4 <vTaskMissedYield>
				--cRxLock;
 8009102:	3d01      	subs	r5, #1
 8009104:	b26d      	sxtb	r5, r5
 8009106:	e7de      	b.n	80090c6 <prvUnlockQueue+0x2e>

08009108 <xQueueGenericReset>:
{
 8009108:	b538      	push	{r3, r4, r5, lr}
 800910a:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 800910c:	4604      	mov	r4, r0
 800910e:	b940      	cbnz	r0, 8009122 <xQueueGenericReset+0x1a>
 8009110:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009114:	f383 8811 	msr	BASEPRI, r3
 8009118:	f3bf 8f6f 	isb	sy
 800911c:	f3bf 8f4f 	dsb	sy
 8009120:	e7fe      	b.n	8009120 <xQueueGenericReset+0x18>
	taskENTER_CRITICAL();
 8009122:	f7ff fe1f 	bl	8008d64 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8009126:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	; 0x3c
 800912a:	6822      	ldr	r2, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800912c:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800912e:	434b      	muls	r3, r1
 8009130:	18d0      	adds	r0, r2, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8009132:	1a5b      	subs	r3, r3, r1
 8009134:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8009136:	60a0      	str	r0, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8009138:	60e3      	str	r3, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800913a:	2000      	movs	r0, #0
		pxQueue->cRxLock = queueUNLOCKED;
 800913c:	23ff      	movs	r3, #255	; 0xff
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800913e:	63a0      	str	r0, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 8009140:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
 8009144:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
		if( xNewQueue == pdFALSE )
 8009148:	b9a5      	cbnz	r5, 8009174 <xQueueGenericReset+0x6c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800914a:	6923      	ldr	r3, [r4, #16]
 800914c:	b173      	cbz	r3, 800916c <xQueueGenericReset+0x64>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800914e:	f104 0010 	add.w	r0, r4, #16
 8009152:	f001 f82b 	bl	800a1ac <xTaskRemoveFromEventList>
 8009156:	b148      	cbz	r0, 800916c <xQueueGenericReset+0x64>
					queueYIELD_IF_USING_PREEMPTION();
 8009158:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800915c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009160:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009164:	f3bf 8f4f 	dsb	sy
 8009168:	f3bf 8f6f 	isb	sy
	taskEXIT_CRITICAL();
 800916c:	f7ff fe1a 	bl	8008da4 <vPortExitCritical>
}
 8009170:	2001      	movs	r0, #1
 8009172:	bd38      	pop	{r3, r4, r5, pc}
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 8009174:	f104 0010 	add.w	r0, r4, #16
 8009178:	f7ff fd46 	bl	8008c08 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800917c:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8009180:	f7ff fd42 	bl	8008c08 <vListInitialise>
 8009184:	e7f2      	b.n	800916c <xQueueGenericReset+0x64>

08009186 <xQueueGenericCreateStatic>:
	{
 8009186:	b513      	push	{r0, r1, r4, lr}
 8009188:	461c      	mov	r4, r3
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800918a:	b940      	cbnz	r0, 800919e <xQueueGenericCreateStatic+0x18>
 800918c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009190:	f383 8811 	msr	BASEPRI, r3
 8009194:	f3bf 8f6f 	isb	sy
 8009198:	f3bf 8f4f 	dsb	sy
 800919c:	e7fe      	b.n	800919c <xQueueGenericCreateStatic+0x16>
		configASSERT( pxStaticQueue != NULL );
 800919e:	b943      	cbnz	r3, 80091b2 <xQueueGenericCreateStatic+0x2c>
 80091a0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80091a4:	f383 8811 	msr	BASEPRI, r3
 80091a8:	f3bf 8f6f 	isb	sy
 80091ac:	f3bf 8f4f 	dsb	sy
 80091b0:	e7fe      	b.n	80091b0 <xQueueGenericCreateStatic+0x2a>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 80091b2:	b14a      	cbz	r2, 80091c8 <xQueueGenericCreateStatic+0x42>
 80091b4:	b991      	cbnz	r1, 80091dc <xQueueGenericCreateStatic+0x56>
 80091b6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80091ba:	f383 8811 	msr	BASEPRI, r3
 80091be:	f3bf 8f6f 	isb	sy
 80091c2:	f3bf 8f4f 	dsb	sy
 80091c6:	e7fe      	b.n	80091c6 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 80091c8:	b141      	cbz	r1, 80091dc <xQueueGenericCreateStatic+0x56>
 80091ca:	f04f 0350 	mov.w	r3, #80	; 0x50
 80091ce:	f383 8811 	msr	BASEPRI, r3
 80091d2:	f3bf 8f6f 	isb	sy
 80091d6:	f3bf 8f4f 	dsb	sy
 80091da:	e7fe      	b.n	80091da <xQueueGenericCreateStatic+0x54>
			volatile size_t xSize = sizeof( StaticQueue_t );
 80091dc:	2350      	movs	r3, #80	; 0x50
 80091de:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 80091e0:	9b01      	ldr	r3, [sp, #4]
 80091e2:	2b50      	cmp	r3, #80	; 0x50
 80091e4:	d008      	beq.n	80091f8 <xQueueGenericCreateStatic+0x72>
 80091e6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80091ea:	f383 8811 	msr	BASEPRI, r3
 80091ee:	f3bf 8f6f 	isb	sy
 80091f2:	f3bf 8f4f 	dsb	sy
 80091f6:	e7fe      	b.n	80091f6 <xQueueGenericCreateStatic+0x70>
	if( uxItemSize == ( UBaseType_t ) 0 )
 80091f8:	2900      	cmp	r1, #0
 80091fa:	bf08      	it	eq
 80091fc:	4622      	moveq	r2, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 80091fe:	9b01      	ldr	r3, [sp, #4]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8009200:	6022      	str	r2, [r4, #0]
 8009202:	2301      	movs	r3, #1
	pxNewQueue->uxItemSize = uxItemSize;
 8009204:	e9c4 010f 	strd	r0, r1, [r4, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8009208:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800920c:	4619      	mov	r1, r3
 800920e:	4620      	mov	r0, r4
 8009210:	f7ff ff7a 	bl	8009108 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8009214:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8009218:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
	}
 800921c:	4620      	mov	r0, r4
 800921e:	b002      	add	sp, #8
 8009220:	bd10      	pop	{r4, pc}

08009222 <xQueueGenericCreate>:
	{
 8009222:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8009224:	460d      	mov	r5, r1
 8009226:	4617      	mov	r7, r2
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8009228:	4606      	mov	r6, r0
 800922a:	b940      	cbnz	r0, 800923e <xQueueGenericCreate+0x1c>
 800922c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009230:	f383 8811 	msr	BASEPRI, r3
 8009234:	f3bf 8f6f 	isb	sy
 8009238:	f3bf 8f4f 	dsb	sy
 800923c:	e7fe      	b.n	800923c <xQueueGenericCreate+0x1a>
			xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800923e:	4348      	muls	r0, r1
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 8009240:	3050      	adds	r0, #80	; 0x50
 8009242:	f7ff fc17 	bl	8008a74 <pvPortMalloc>
		if( pxNewQueue != NULL )
 8009246:	4604      	mov	r4, r0
 8009248:	b170      	cbz	r0, 8009268 <xQueueGenericCreate+0x46>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800924a:	2300      	movs	r3, #0
 800924c:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 8009250:	b165      	cbz	r5, 800926c <xQueueGenericCreate+0x4a>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8009252:	f100 0350 	add.w	r3, r0, #80	; 0x50
	pxNewQueue->uxItemSize = uxItemSize;
 8009256:	e9c4 650f 	strd	r6, r5, [r4, #60]	; 0x3c
 800925a:	6023      	str	r3, [r4, #0]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800925c:	2101      	movs	r1, #1
 800925e:	4620      	mov	r0, r4
 8009260:	f7ff ff52 	bl	8009108 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8009264:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 8009268:	4620      	mov	r0, r4
 800926a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800926c:	4603      	mov	r3, r0
 800926e:	e7f2      	b.n	8009256 <xQueueGenericCreate+0x34>

08009270 <xQueueCreateCountingSemaphoreStatic>:
	{
 8009270:	b513      	push	{r0, r1, r4, lr}
 8009272:	4613      	mov	r3, r2
 8009274:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8009276:	b940      	cbnz	r0, 800928a <xQueueCreateCountingSemaphoreStatic+0x1a>
 8009278:	f04f 0350 	mov.w	r3, #80	; 0x50
 800927c:	f383 8811 	msr	BASEPRI, r3
 8009280:	f3bf 8f6f 	isb	sy
 8009284:	f3bf 8f4f 	dsb	sy
 8009288:	e7fe      	b.n	8009288 <xQueueCreateCountingSemaphoreStatic+0x18>
		configASSERT( uxInitialCount <= uxMaxCount );
 800928a:	4288      	cmp	r0, r1
 800928c:	d208      	bcs.n	80092a0 <xQueueCreateCountingSemaphoreStatic+0x30>
 800928e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009292:	f383 8811 	msr	BASEPRI, r3
 8009296:	f3bf 8f6f 	isb	sy
 800929a:	f3bf 8f4f 	dsb	sy
 800929e:	e7fe      	b.n	800929e <xQueueCreateCountingSemaphoreStatic+0x2e>
		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 80092a0:	2202      	movs	r2, #2
 80092a2:	9200      	str	r2, [sp, #0]
 80092a4:	2200      	movs	r2, #0
 80092a6:	4611      	mov	r1, r2
 80092a8:	f7ff ff6d 	bl	8009186 <xQueueGenericCreateStatic>
		if( xHandle != NULL )
 80092ac:	b100      	cbz	r0, 80092b0 <xQueueCreateCountingSemaphoreStatic+0x40>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 80092ae:	6384      	str	r4, [r0, #56]	; 0x38
	}
 80092b0:	b002      	add	sp, #8
 80092b2:	bd10      	pop	{r4, pc}

080092b4 <xQueueCreateCountingSemaphore>:
	{
 80092b4:	b510      	push	{r4, lr}
 80092b6:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 80092b8:	b940      	cbnz	r0, 80092cc <xQueueCreateCountingSemaphore+0x18>
 80092ba:	f04f 0350 	mov.w	r3, #80	; 0x50
 80092be:	f383 8811 	msr	BASEPRI, r3
 80092c2:	f3bf 8f6f 	isb	sy
 80092c6:	f3bf 8f4f 	dsb	sy
 80092ca:	e7fe      	b.n	80092ca <xQueueCreateCountingSemaphore+0x16>
		configASSERT( uxInitialCount <= uxMaxCount );
 80092cc:	4288      	cmp	r0, r1
 80092ce:	d208      	bcs.n	80092e2 <xQueueCreateCountingSemaphore+0x2e>
 80092d0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80092d4:	f383 8811 	msr	BASEPRI, r3
 80092d8:	f3bf 8f6f 	isb	sy
 80092dc:	f3bf 8f4f 	dsb	sy
 80092e0:	e7fe      	b.n	80092e0 <xQueueCreateCountingSemaphore+0x2c>
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 80092e2:	2202      	movs	r2, #2
 80092e4:	2100      	movs	r1, #0
 80092e6:	f7ff ff9c 	bl	8009222 <xQueueGenericCreate>
		if( xHandle != NULL )
 80092ea:	b100      	cbz	r0, 80092ee <xQueueCreateCountingSemaphore+0x3a>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 80092ec:	6384      	str	r4, [r0, #56]	; 0x38
	}
 80092ee:	bd10      	pop	{r4, pc}

080092f0 <xQueueGenericSend>:
{
 80092f0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80092f4:	b085      	sub	sp, #20
 80092f6:	4688      	mov	r8, r1
 80092f8:	9201      	str	r2, [sp, #4]
 80092fa:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 80092fc:	4604      	mov	r4, r0
 80092fe:	b940      	cbnz	r0, 8009312 <xQueueGenericSend+0x22>
 8009300:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009304:	f383 8811 	msr	BASEPRI, r3
 8009308:	f3bf 8f6f 	isb	sy
 800930c:	f3bf 8f4f 	dsb	sy
 8009310:	e7fe      	b.n	8009310 <xQueueGenericSend+0x20>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8009312:	b951      	cbnz	r1, 800932a <xQueueGenericSend+0x3a>
 8009314:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8009316:	b143      	cbz	r3, 800932a <xQueueGenericSend+0x3a>
 8009318:	f04f 0350 	mov.w	r3, #80	; 0x50
 800931c:	f383 8811 	msr	BASEPRI, r3
 8009320:	f3bf 8f6f 	isb	sy
 8009324:	f3bf 8f4f 	dsb	sy
 8009328:	e7fe      	b.n	8009328 <xQueueGenericSend+0x38>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800932a:	2f02      	cmp	r7, #2
 800932c:	d10b      	bne.n	8009346 <xQueueGenericSend+0x56>
 800932e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8009330:	2b01      	cmp	r3, #1
 8009332:	d008      	beq.n	8009346 <xQueueGenericSend+0x56>
 8009334:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009338:	f383 8811 	msr	BASEPRI, r3
 800933c:	f3bf 8f6f 	isb	sy
 8009340:	f3bf 8f4f 	dsb	sy
 8009344:	e7fe      	b.n	8009344 <xQueueGenericSend+0x54>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8009346:	f000 ffc3 	bl	800a2d0 <xTaskGetSchedulerState>
 800934a:	4606      	mov	r6, r0
 800934c:	b950      	cbnz	r0, 8009364 <xQueueGenericSend+0x74>
 800934e:	9b01      	ldr	r3, [sp, #4]
 8009350:	b14b      	cbz	r3, 8009366 <xQueueGenericSend+0x76>
 8009352:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009356:	f383 8811 	msr	BASEPRI, r3
 800935a:	f3bf 8f6f 	isb	sy
 800935e:	f3bf 8f4f 	dsb	sy
 8009362:	e7fe      	b.n	8009362 <xQueueGenericSend+0x72>
 8009364:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 8009366:	f04f 0900 	mov.w	r9, #0
 800936a:	e037      	b.n	80093dc <xQueueGenericSend+0xec>
				if( xTicksToWait == ( TickType_t ) 0 )
 800936c:	9d01      	ldr	r5, [sp, #4]
 800936e:	b91d      	cbnz	r5, 8009378 <xQueueGenericSend+0x88>
					taskEXIT_CRITICAL();
 8009370:	f7ff fd18 	bl	8008da4 <vPortExitCritical>
			return errQUEUE_FULL;
 8009374:	2000      	movs	r0, #0
 8009376:	e052      	b.n	800941e <xQueueGenericSend+0x12e>
				else if( xEntryTimeSet == pdFALSE )
 8009378:	b916      	cbnz	r6, 8009380 <xQueueGenericSend+0x90>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800937a:	a802      	add	r0, sp, #8
 800937c:	f000 ff5a 	bl	800a234 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8009380:	f7ff fd10 	bl	8008da4 <vPortExitCritical>
		vTaskSuspendAll();
 8009384:	f000 fd5e 	bl	8009e44 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8009388:	f7ff fcec 	bl	8008d64 <vPortEnterCritical>
 800938c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8009390:	2bff      	cmp	r3, #255	; 0xff
 8009392:	bf08      	it	eq
 8009394:	f884 9044 	strbeq.w	r9, [r4, #68]	; 0x44
 8009398:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800939c:	2bff      	cmp	r3, #255	; 0xff
 800939e:	bf08      	it	eq
 80093a0:	f884 9045 	strbeq.w	r9, [r4, #69]	; 0x45
 80093a4:	f7ff fcfe 	bl	8008da4 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 80093a8:	a901      	add	r1, sp, #4
 80093aa:	a802      	add	r0, sp, #8
 80093ac:	f000 ff4e 	bl	800a24c <xTaskCheckForTimeOut>
 80093b0:	2800      	cmp	r0, #0
 80093b2:	d14a      	bne.n	800944a <xQueueGenericSend+0x15a>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 80093b4:	f7ff fcd6 	bl	8008d64 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 80093b8:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80093ba:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80093bc:	429a      	cmp	r2, r3
 80093be:	d131      	bne.n	8009424 <xQueueGenericSend+0x134>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 80093c0:	f7ff fcf0 	bl	8008da4 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 80093c4:	9901      	ldr	r1, [sp, #4]
 80093c6:	f104 0010 	add.w	r0, r4, #16
 80093ca:	f000 feb7 	bl	800a13c <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 80093ce:	4620      	mov	r0, r4
 80093d0:	f7ff fe62 	bl	8009098 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 80093d4:	f000 fdda 	bl	8009f8c <xTaskResumeAll>
 80093d8:	b360      	cbz	r0, 8009434 <xQueueGenericSend+0x144>
 80093da:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 80093dc:	f7ff fcc2 	bl	8008d64 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 80093e0:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80093e2:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80093e4:	429a      	cmp	r2, r3
 80093e6:	d301      	bcc.n	80093ec <xQueueGenericSend+0xfc>
 80093e8:	2f02      	cmp	r7, #2
 80093ea:	d1bf      	bne.n	800936c <xQueueGenericSend+0x7c>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 80093ec:	463a      	mov	r2, r7
 80093ee:	4641      	mov	r1, r8
 80093f0:	4620      	mov	r0, r4
 80093f2:	f7ff fe06 	bl	8009002 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80093f6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80093f8:	b11b      	cbz	r3, 8009402 <xQueueGenericSend+0x112>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80093fa:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80093fe:	f000 fed5 	bl	800a1ac <xTaskRemoveFromEventList>
					else if( xYieldRequired != pdFALSE )
 8009402:	b148      	cbz	r0, 8009418 <xQueueGenericSend+0x128>
						queueYIELD_IF_USING_PREEMPTION();
 8009404:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009408:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800940c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009410:	f3bf 8f4f 	dsb	sy
 8009414:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8009418:	f7ff fcc4 	bl	8008da4 <vPortExitCritical>
				return pdPASS;
 800941c:	2001      	movs	r0, #1
}
 800941e:	b005      	add	sp, #20
 8009420:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
 8009424:	f7ff fcbe 	bl	8008da4 <vPortExitCritical>
				prvUnlockQueue( pxQueue );
 8009428:	4620      	mov	r0, r4
 800942a:	f7ff fe35 	bl	8009098 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800942e:	f000 fdad 	bl	8009f8c <xTaskResumeAll>
 8009432:	e7d2      	b.n	80093da <xQueueGenericSend+0xea>
					portYIELD_WITHIN_API();
 8009434:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009438:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800943c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009440:	f3bf 8f4f 	dsb	sy
 8009444:	f3bf 8f6f 	isb	sy
 8009448:	e7c7      	b.n	80093da <xQueueGenericSend+0xea>
			prvUnlockQueue( pxQueue );
 800944a:	4620      	mov	r0, r4
 800944c:	f7ff fe24 	bl	8009098 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8009450:	f000 fd9c 	bl	8009f8c <xTaskResumeAll>
 8009454:	e78e      	b.n	8009374 <xQueueGenericSend+0x84>

08009456 <xQueueGenericSendFromISR>:
{
 8009456:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800945a:	4689      	mov	r9, r1
 800945c:	4690      	mov	r8, r2
 800945e:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 8009460:	4604      	mov	r4, r0
 8009462:	b940      	cbnz	r0, 8009476 <xQueueGenericSendFromISR+0x20>
 8009464:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009468:	f383 8811 	msr	BASEPRI, r3
 800946c:	f3bf 8f6f 	isb	sy
 8009470:	f3bf 8f4f 	dsb	sy
 8009474:	e7fe      	b.n	8009474 <xQueueGenericSendFromISR+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8009476:	b951      	cbnz	r1, 800948e <xQueueGenericSendFromISR+0x38>
 8009478:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800947a:	b143      	cbz	r3, 800948e <xQueueGenericSendFromISR+0x38>
 800947c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009480:	f383 8811 	msr	BASEPRI, r3
 8009484:	f3bf 8f6f 	isb	sy
 8009488:	f3bf 8f4f 	dsb	sy
 800948c:	e7fe      	b.n	800948c <xQueueGenericSendFromISR+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800948e:	2f02      	cmp	r7, #2
 8009490:	d10b      	bne.n	80094aa <xQueueGenericSendFromISR+0x54>
 8009492:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8009494:	2b01      	cmp	r3, #1
 8009496:	d008      	beq.n	80094aa <xQueueGenericSendFromISR+0x54>
 8009498:	f04f 0350 	mov.w	r3, #80	; 0x50
 800949c:	f383 8811 	msr	BASEPRI, r3
 80094a0:	f3bf 8f6f 	isb	sy
 80094a4:	f3bf 8f4f 	dsb	sy
 80094a8:	e7fe      	b.n	80094a8 <xQueueGenericSendFromISR+0x52>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 80094aa:	f7ff fd71 	bl	8008f90 <vPortValidateInterruptPriority>
	__asm volatile
 80094ae:	f3ef 8611 	mrs	r6, BASEPRI
 80094b2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80094b6:	f383 8811 	msr	BASEPRI, r3
 80094ba:	f3bf 8f6f 	isb	sy
 80094be:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 80094c2:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80094c4:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80094c6:	429a      	cmp	r2, r3
 80094c8:	d301      	bcc.n	80094ce <xQueueGenericSendFromISR+0x78>
 80094ca:	2f02      	cmp	r7, #2
 80094cc:	d122      	bne.n	8009514 <xQueueGenericSendFromISR+0xbe>
			const int8_t cTxLock = pxQueue->cTxLock;
 80094ce:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 80094d2:	463a      	mov	r2, r7
			const int8_t cTxLock = pxQueue->cTxLock;
 80094d4:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 80094d6:	4649      	mov	r1, r9
 80094d8:	4620      	mov	r0, r4
 80094da:	f7ff fd92 	bl	8009002 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 80094de:	1c6b      	adds	r3, r5, #1
 80094e0:	d113      	bne.n	800950a <xQueueGenericSendFromISR+0xb4>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80094e2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80094e4:	b90b      	cbnz	r3, 80094ea <xQueueGenericSendFromISR+0x94>
			xReturn = pdPASS;
 80094e6:	2001      	movs	r0, #1
 80094e8:	e00b      	b.n	8009502 <xQueueGenericSendFromISR+0xac>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80094ea:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80094ee:	f000 fe5d 	bl	800a1ac <xTaskRemoveFromEventList>
 80094f2:	2800      	cmp	r0, #0
 80094f4:	d0f7      	beq.n	80094e6 <xQueueGenericSendFromISR+0x90>
							if( pxHigherPriorityTaskWoken != NULL )
 80094f6:	f1b8 0f00 	cmp.w	r8, #0
 80094fa:	d0f4      	beq.n	80094e6 <xQueueGenericSendFromISR+0x90>
								*pxHigherPriorityTaskWoken = pdTRUE;
 80094fc:	2001      	movs	r0, #1
 80094fe:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 8009502:	f386 8811 	msr	BASEPRI, r6
}
 8009506:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800950a:	3501      	adds	r5, #1
 800950c:	b26d      	sxtb	r5, r5
 800950e:	f884 5045 	strb.w	r5, [r4, #69]	; 0x45
 8009512:	e7e8      	b.n	80094e6 <xQueueGenericSendFromISR+0x90>
			xReturn = errQUEUE_FULL;
 8009514:	2000      	movs	r0, #0
 8009516:	e7f4      	b.n	8009502 <xQueueGenericSendFromISR+0xac>

08009518 <xQueueGiveFromISR>:
{
 8009518:	b570      	push	{r4, r5, r6, lr}
 800951a:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 800951c:	4604      	mov	r4, r0
 800951e:	b940      	cbnz	r0, 8009532 <xQueueGiveFromISR+0x1a>
	__asm volatile
 8009520:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009524:	f383 8811 	msr	BASEPRI, r3
 8009528:	f3bf 8f6f 	isb	sy
 800952c:	f3bf 8f4f 	dsb	sy
 8009530:	e7fe      	b.n	8009530 <xQueueGiveFromISR+0x18>
	configASSERT( pxQueue->uxItemSize == 0 );
 8009532:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8009534:	b143      	cbz	r3, 8009548 <xQueueGiveFromISR+0x30>
 8009536:	f04f 0350 	mov.w	r3, #80	; 0x50
 800953a:	f383 8811 	msr	BASEPRI, r3
 800953e:	f3bf 8f6f 	isb	sy
 8009542:	f3bf 8f4f 	dsb	sy
 8009546:	e7fe      	b.n	8009546 <xQueueGiveFromISR+0x2e>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 8009548:	6803      	ldr	r3, [r0, #0]
 800954a:	b953      	cbnz	r3, 8009562 <xQueueGiveFromISR+0x4a>
 800954c:	6883      	ldr	r3, [r0, #8]
 800954e:	b143      	cbz	r3, 8009562 <xQueueGiveFromISR+0x4a>
 8009550:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009554:	f383 8811 	msr	BASEPRI, r3
 8009558:	f3bf 8f6f 	isb	sy
 800955c:	f3bf 8f4f 	dsb	sy
 8009560:	e7fe      	b.n	8009560 <xQueueGiveFromISR+0x48>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8009562:	f7ff fd15 	bl	8008f90 <vPortValidateInterruptPriority>
	__asm volatile
 8009566:	f3ef 8611 	mrs	r6, BASEPRI
 800956a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800956e:	f383 8811 	msr	BASEPRI, r3
 8009572:	f3bf 8f6f 	isb	sy
 8009576:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800957a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 800957c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800957e:	4293      	cmp	r3, r2
 8009580:	d91c      	bls.n	80095bc <xQueueGiveFromISR+0xa4>
			const int8_t cTxLock = pxQueue->cTxLock;
 8009582:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8009586:	3201      	adds	r2, #1
			if( cTxLock == queueUNLOCKED )
 8009588:	29ff      	cmp	r1, #255	; 0xff
			const int8_t cTxLock = pxQueue->cTxLock;
 800958a:	b24b      	sxtb	r3, r1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800958c:	63a2      	str	r2, [r4, #56]	; 0x38
			if( cTxLock == queueUNLOCKED )
 800958e:	d110      	bne.n	80095b2 <xQueueGiveFromISR+0x9a>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8009590:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8009592:	b90b      	cbnz	r3, 8009598 <xQueueGiveFromISR+0x80>
			xReturn = pdPASS;
 8009594:	2001      	movs	r0, #1
 8009596:	e009      	b.n	80095ac <xQueueGiveFromISR+0x94>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8009598:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800959c:	f000 fe06 	bl	800a1ac <xTaskRemoveFromEventList>
 80095a0:	2800      	cmp	r0, #0
 80095a2:	d0f7      	beq.n	8009594 <xQueueGiveFromISR+0x7c>
							if( pxHigherPriorityTaskWoken != NULL )
 80095a4:	2d00      	cmp	r5, #0
 80095a6:	d0f5      	beq.n	8009594 <xQueueGiveFromISR+0x7c>
								*pxHigherPriorityTaskWoken = pdTRUE;
 80095a8:	2001      	movs	r0, #1
 80095aa:	6028      	str	r0, [r5, #0]
	__asm volatile
 80095ac:	f386 8811 	msr	BASEPRI, r6
}
 80095b0:	bd70      	pop	{r4, r5, r6, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 80095b2:	3301      	adds	r3, #1
 80095b4:	b25b      	sxtb	r3, r3
 80095b6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 80095ba:	e7eb      	b.n	8009594 <xQueueGiveFromISR+0x7c>
			xReturn = errQUEUE_FULL;
 80095bc:	2000      	movs	r0, #0
 80095be:	e7f5      	b.n	80095ac <xQueueGiveFromISR+0x94>

080095c0 <xQueueReceive>:
{
 80095c0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80095c4:	460f      	mov	r7, r1
 80095c6:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 80095c8:	4604      	mov	r4, r0
 80095ca:	b940      	cbnz	r0, 80095de <xQueueReceive+0x1e>
	__asm volatile
 80095cc:	f04f 0350 	mov.w	r3, #80	; 0x50
 80095d0:	f383 8811 	msr	BASEPRI, r3
 80095d4:	f3bf 8f6f 	isb	sy
 80095d8:	f3bf 8f4f 	dsb	sy
 80095dc:	e7fe      	b.n	80095dc <xQueueReceive+0x1c>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 80095de:	b951      	cbnz	r1, 80095f6 <xQueueReceive+0x36>
 80095e0:	6c03      	ldr	r3, [r0, #64]	; 0x40
 80095e2:	b143      	cbz	r3, 80095f6 <xQueueReceive+0x36>
 80095e4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80095e8:	f383 8811 	msr	BASEPRI, r3
 80095ec:	f3bf 8f6f 	isb	sy
 80095f0:	f3bf 8f4f 	dsb	sy
 80095f4:	e7fe      	b.n	80095f4 <xQueueReceive+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 80095f6:	f000 fe6b 	bl	800a2d0 <xTaskGetSchedulerState>
 80095fa:	4606      	mov	r6, r0
 80095fc:	b950      	cbnz	r0, 8009614 <xQueueReceive+0x54>
 80095fe:	9b01      	ldr	r3, [sp, #4]
 8009600:	b14b      	cbz	r3, 8009616 <xQueueReceive+0x56>
 8009602:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009606:	f383 8811 	msr	BASEPRI, r3
 800960a:	f3bf 8f6f 	isb	sy
 800960e:	f3bf 8f4f 	dsb	sy
 8009612:	e7fe      	b.n	8009612 <xQueueReceive+0x52>
 8009614:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 8009616:	f04f 0800 	mov.w	r8, #0
 800961a:	e03d      	b.n	8009698 <xQueueReceive+0xd8>
				if( xTicksToWait == ( TickType_t ) 0 )
 800961c:	9d01      	ldr	r5, [sp, #4]
 800961e:	b91d      	cbnz	r5, 8009628 <xQueueReceive+0x68>
					taskEXIT_CRITICAL();
 8009620:	f7ff fbc0 	bl	8008da4 <vPortExitCritical>
				return errQUEUE_EMPTY;
 8009624:	2000      	movs	r0, #0
 8009626:	e056      	b.n	80096d6 <xQueueReceive+0x116>
				else if( xEntryTimeSet == pdFALSE )
 8009628:	b916      	cbnz	r6, 8009630 <xQueueReceive+0x70>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800962a:	a802      	add	r0, sp, #8
 800962c:	f000 fe02 	bl	800a234 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8009630:	f7ff fbb8 	bl	8008da4 <vPortExitCritical>
		vTaskSuspendAll();
 8009634:	f000 fc06 	bl	8009e44 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8009638:	f7ff fb94 	bl	8008d64 <vPortEnterCritical>
 800963c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8009640:	2bff      	cmp	r3, #255	; 0xff
 8009642:	bf08      	it	eq
 8009644:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 8009648:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800964c:	2bff      	cmp	r3, #255	; 0xff
 800964e:	bf08      	it	eq
 8009650:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 8009654:	f7ff fba6 	bl	8008da4 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8009658:	a901      	add	r1, sp, #4
 800965a:	a802      	add	r0, sp, #8
 800965c:	f000 fdf6 	bl	800a24c <xTaskCheckForTimeOut>
 8009660:	2800      	cmp	r0, #0
 8009662:	d141      	bne.n	80096e8 <xQueueReceive+0x128>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8009664:	4620      	mov	r0, r4
 8009666:	f7ff fcc1 	bl	8008fec <prvIsQueueEmpty>
 800966a:	b3b8      	cbz	r0, 80096dc <xQueueReceive+0x11c>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800966c:	9901      	ldr	r1, [sp, #4]
 800966e:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8009672:	f000 fd63 	bl	800a13c <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8009676:	4620      	mov	r0, r4
 8009678:	f7ff fd0e 	bl	8009098 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 800967c:	f000 fc86 	bl	8009f8c <xTaskResumeAll>
 8009680:	b948      	cbnz	r0, 8009696 <xQueueReceive+0xd6>
					portYIELD_WITHIN_API();
 8009682:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009686:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800968a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800968e:	f3bf 8f4f 	dsb	sy
 8009692:	f3bf 8f6f 	isb	sy
 8009696:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 8009698:	f7ff fb64 	bl	8008d64 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800969c:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800969e:	2d00      	cmp	r5, #0
 80096a0:	d0bc      	beq.n	800961c <xQueueReceive+0x5c>
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 80096a2:	4639      	mov	r1, r7
 80096a4:	4620      	mov	r0, r4
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 80096a6:	3d01      	subs	r5, #1
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 80096a8:	f7ff fce0 	bl	800906c <prvCopyDataFromQueue>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 80096ac:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80096ae:	6923      	ldr	r3, [r4, #16]
 80096b0:	b173      	cbz	r3, 80096d0 <xQueueReceive+0x110>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80096b2:	f104 0010 	add.w	r0, r4, #16
 80096b6:	f000 fd79 	bl	800a1ac <xTaskRemoveFromEventList>
 80096ba:	b148      	cbz	r0, 80096d0 <xQueueReceive+0x110>
						queueYIELD_IF_USING_PREEMPTION();
 80096bc:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80096c0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80096c4:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80096c8:	f3bf 8f4f 	dsb	sy
 80096cc:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 80096d0:	f7ff fb68 	bl	8008da4 <vPortExitCritical>
				return pdPASS;
 80096d4:	2001      	movs	r0, #1
}
 80096d6:	b004      	add	sp, #16
 80096d8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
				prvUnlockQueue( pxQueue );
 80096dc:	4620      	mov	r0, r4
 80096de:	f7ff fcdb 	bl	8009098 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 80096e2:	f000 fc53 	bl	8009f8c <xTaskResumeAll>
 80096e6:	e7d6      	b.n	8009696 <xQueueReceive+0xd6>
			prvUnlockQueue( pxQueue );
 80096e8:	4620      	mov	r0, r4
 80096ea:	f7ff fcd5 	bl	8009098 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 80096ee:	f000 fc4d 	bl	8009f8c <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 80096f2:	4620      	mov	r0, r4
 80096f4:	f7ff fc7a 	bl	8008fec <prvIsQueueEmpty>
 80096f8:	2800      	cmp	r0, #0
 80096fa:	d0cc      	beq.n	8009696 <xQueueReceive+0xd6>
 80096fc:	e792      	b.n	8009624 <xQueueReceive+0x64>

080096fe <xQueueSemaphoreTake>:
{
 80096fe:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009700:	b085      	sub	sp, #20
	configASSERT( ( pxQueue ) );
 8009702:	4604      	mov	r4, r0
{
 8009704:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 8009706:	b940      	cbnz	r0, 800971a <xQueueSemaphoreTake+0x1c>
 8009708:	f04f 0350 	mov.w	r3, #80	; 0x50
 800970c:	f383 8811 	msr	BASEPRI, r3
 8009710:	f3bf 8f6f 	isb	sy
 8009714:	f3bf 8f4f 	dsb	sy
 8009718:	e7fe      	b.n	8009718 <xQueueSemaphoreTake+0x1a>
	configASSERT( pxQueue->uxItemSize == 0 );
 800971a:	6c05      	ldr	r5, [r0, #64]	; 0x40
 800971c:	b145      	cbz	r5, 8009730 <xQueueSemaphoreTake+0x32>
 800971e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009722:	f383 8811 	msr	BASEPRI, r3
 8009726:	f3bf 8f6f 	isb	sy
 800972a:	f3bf 8f4f 	dsb	sy
 800972e:	e7fe      	b.n	800972e <xQueueSemaphoreTake+0x30>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8009730:	f000 fdce 	bl	800a2d0 <xTaskGetSchedulerState>
 8009734:	4606      	mov	r6, r0
 8009736:	b950      	cbnz	r0, 800974e <xQueueSemaphoreTake+0x50>
 8009738:	9b01      	ldr	r3, [sp, #4]
 800973a:	b15b      	cbz	r3, 8009754 <xQueueSemaphoreTake+0x56>
 800973c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009740:	f383 8811 	msr	BASEPRI, r3
 8009744:	f3bf 8f6f 	isb	sy
 8009748:	f3bf 8f4f 	dsb	sy
 800974c:	e7fe      	b.n	800974c <xQueueSemaphoreTake+0x4e>
 800974e:	462e      	mov	r6, r5
		prvLockQueue( pxQueue );
 8009750:	2700      	movs	r7, #0
 8009752:	e053      	b.n	80097fc <xQueueSemaphoreTake+0xfe>
 8009754:	4605      	mov	r5, r0
 8009756:	e7fb      	b.n	8009750 <xQueueSemaphoreTake+0x52>
				if( xTicksToWait == ( TickType_t ) 0 )
 8009758:	9b01      	ldr	r3, [sp, #4]
 800975a:	b963      	cbnz	r3, 8009776 <xQueueSemaphoreTake+0x78>
						configASSERT( xInheritanceOccurred == pdFALSE );
 800975c:	b145      	cbz	r5, 8009770 <xQueueSemaphoreTake+0x72>
 800975e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009762:	f383 8811 	msr	BASEPRI, r3
 8009766:	f3bf 8f6f 	isb	sy
 800976a:	f3bf 8f4f 	dsb	sy
 800976e:	e7fe      	b.n	800976e <xQueueSemaphoreTake+0x70>
					taskEXIT_CRITICAL();
 8009770:	f7ff fb18 	bl	8008da4 <vPortExitCritical>
					return errQUEUE_EMPTY;
 8009774:	e062      	b.n	800983c <xQueueSemaphoreTake+0x13e>
				else if( xEntryTimeSet == pdFALSE )
 8009776:	b916      	cbnz	r6, 800977e <xQueueSemaphoreTake+0x80>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8009778:	a802      	add	r0, sp, #8
 800977a:	f000 fd5b 	bl	800a234 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 800977e:	f7ff fb11 	bl	8008da4 <vPortExitCritical>
		vTaskSuspendAll();
 8009782:	f000 fb5f 	bl	8009e44 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8009786:	f7ff faed 	bl	8008d64 <vPortEnterCritical>
 800978a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800978e:	2bff      	cmp	r3, #255	; 0xff
 8009790:	bf08      	it	eq
 8009792:	f884 7044 	strbeq.w	r7, [r4, #68]	; 0x44
 8009796:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800979a:	2bff      	cmp	r3, #255	; 0xff
 800979c:	bf08      	it	eq
 800979e:	f884 7045 	strbeq.w	r7, [r4, #69]	; 0x45
 80097a2:	f7ff faff 	bl	8008da4 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 80097a6:	a901      	add	r1, sp, #4
 80097a8:	a802      	add	r0, sp, #8
 80097aa:	f000 fd4f 	bl	800a24c <xTaskCheckForTimeOut>
 80097ae:	2800      	cmp	r0, #0
 80097b0:	d14d      	bne.n	800984e <xQueueSemaphoreTake+0x150>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 80097b2:	4620      	mov	r0, r4
 80097b4:	f7ff fc1a 	bl	8008fec <prvIsQueueEmpty>
 80097b8:	2800      	cmp	r0, #0
 80097ba:	d042      	beq.n	8009842 <xQueueSemaphoreTake+0x144>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 80097bc:	6823      	ldr	r3, [r4, #0]
 80097be:	b93b      	cbnz	r3, 80097d0 <xQueueSemaphoreTake+0xd2>
						taskENTER_CRITICAL();
 80097c0:	f7ff fad0 	bl	8008d64 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 80097c4:	68a0      	ldr	r0, [r4, #8]
 80097c6:	f000 fd93 	bl	800a2f0 <xTaskPriorityInherit>
 80097ca:	4605      	mov	r5, r0
						taskEXIT_CRITICAL();
 80097cc:	f7ff faea 	bl	8008da4 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 80097d0:	9901      	ldr	r1, [sp, #4]
 80097d2:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80097d6:	f000 fcb1 	bl	800a13c <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 80097da:	4620      	mov	r0, r4
 80097dc:	f7ff fc5c 	bl	8009098 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 80097e0:	f000 fbd4 	bl	8009f8c <xTaskResumeAll>
 80097e4:	b948      	cbnz	r0, 80097fa <xQueueSemaphoreTake+0xfc>
					portYIELD_WITHIN_API();
 80097e6:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80097ea:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80097ee:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80097f2:	f3bf 8f4f 	dsb	sy
 80097f6:	f3bf 8f6f 	isb	sy
 80097fa:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 80097fc:	f7ff fab2 	bl	8008d64 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 8009800:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 8009802:	2b00      	cmp	r3, #0
 8009804:	d0a8      	beq.n	8009758 <xQueueSemaphoreTake+0x5a>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 8009806:	3b01      	subs	r3, #1
 8009808:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800980a:	6823      	ldr	r3, [r4, #0]
 800980c:	b913      	cbnz	r3, 8009814 <xQueueSemaphoreTake+0x116>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 800980e:	f000 fe47 	bl	800a4a0 <pvTaskIncrementMutexHeldCount>
 8009812:	60a0      	str	r0, [r4, #8]
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8009814:	6923      	ldr	r3, [r4, #16]
 8009816:	b173      	cbz	r3, 8009836 <xQueueSemaphoreTake+0x138>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8009818:	f104 0010 	add.w	r0, r4, #16
 800981c:	f000 fcc6 	bl	800a1ac <xTaskRemoveFromEventList>
 8009820:	b148      	cbz	r0, 8009836 <xQueueSemaphoreTake+0x138>
						queueYIELD_IF_USING_PREEMPTION();
 8009822:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009826:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800982a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800982e:	f3bf 8f4f 	dsb	sy
 8009832:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8009836:	f7ff fab5 	bl	8008da4 <vPortExitCritical>
				return pdPASS;
 800983a:	2501      	movs	r5, #1
}
 800983c:	4628      	mov	r0, r5
 800983e:	b005      	add	sp, #20
 8009840:	bdf0      	pop	{r4, r5, r6, r7, pc}
				prvUnlockQueue( pxQueue );
 8009842:	4620      	mov	r0, r4
 8009844:	f7ff fc28 	bl	8009098 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8009848:	f000 fba0 	bl	8009f8c <xTaskResumeAll>
 800984c:	e7d5      	b.n	80097fa <xQueueSemaphoreTake+0xfc>
			prvUnlockQueue( pxQueue );
 800984e:	4620      	mov	r0, r4
 8009850:	f7ff fc22 	bl	8009098 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8009854:	f000 fb9a 	bl	8009f8c <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8009858:	4620      	mov	r0, r4
 800985a:	f7ff fbc7 	bl	8008fec <prvIsQueueEmpty>
 800985e:	2800      	cmp	r0, #0
 8009860:	d0cb      	beq.n	80097fa <xQueueSemaphoreTake+0xfc>
					if( xInheritanceOccurred != pdFALSE )
 8009862:	2d00      	cmp	r5, #0
 8009864:	d0ea      	beq.n	800983c <xQueueSemaphoreTake+0x13e>
						taskENTER_CRITICAL();
 8009866:	f7ff fa7d 	bl	8008d64 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 800986a:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800986c:	b119      	cbz	r1, 8009876 <xQueueSemaphoreTake+0x178>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 800986e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8009870:	6819      	ldr	r1, [r3, #0]
 8009872:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 8009876:	68a0      	ldr	r0, [r4, #8]
 8009878:	f000 fdc0 	bl	800a3fc <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 800987c:	2500      	movs	r5, #0
						taskEXIT_CRITICAL();
 800987e:	f7ff fa91 	bl	8008da4 <vPortExitCritical>
 8009882:	e7db      	b.n	800983c <xQueueSemaphoreTake+0x13e>

08009884 <xQueueReceiveFromISR>:
{
 8009884:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8009888:	4689      	mov	r9, r1
 800988a:	4690      	mov	r8, r2
	configASSERT( pxQueue );
 800988c:	4605      	mov	r5, r0
 800988e:	b940      	cbnz	r0, 80098a2 <xQueueReceiveFromISR+0x1e>
 8009890:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009894:	f383 8811 	msr	BASEPRI, r3
 8009898:	f3bf 8f6f 	isb	sy
 800989c:	f3bf 8f4f 	dsb	sy
 80098a0:	e7fe      	b.n	80098a0 <xQueueReceiveFromISR+0x1c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 80098a2:	b951      	cbnz	r1, 80098ba <xQueueReceiveFromISR+0x36>
 80098a4:	6c03      	ldr	r3, [r0, #64]	; 0x40
 80098a6:	b143      	cbz	r3, 80098ba <xQueueReceiveFromISR+0x36>
 80098a8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80098ac:	f383 8811 	msr	BASEPRI, r3
 80098b0:	f3bf 8f6f 	isb	sy
 80098b4:	f3bf 8f4f 	dsb	sy
 80098b8:	e7fe      	b.n	80098b8 <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 80098ba:	f7ff fb69 	bl	8008f90 <vPortValidateInterruptPriority>
	__asm volatile
 80098be:	f3ef 8711 	mrs	r7, BASEPRI
 80098c2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80098c6:	f383 8811 	msr	BASEPRI, r3
 80098ca:	f3bf 8f6f 	isb	sy
 80098ce:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 80098d2:	6bac      	ldr	r4, [r5, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 80098d4:	b31c      	cbz	r4, 800991e <xQueueReceiveFromISR+0x9a>
			const int8_t cRxLock = pxQueue->cRxLock;
 80098d6:	f895 6044 	ldrb.w	r6, [r5, #68]	; 0x44
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 80098da:	4649      	mov	r1, r9
			const int8_t cRxLock = pxQueue->cRxLock;
 80098dc:	b276      	sxtb	r6, r6
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 80098de:	4628      	mov	r0, r5
 80098e0:	f7ff fbc4 	bl	800906c <prvCopyDataFromQueue>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 80098e4:	3c01      	subs	r4, #1
			if( cRxLock == queueUNLOCKED )
 80098e6:	1c73      	adds	r3, r6, #1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 80098e8:	63ac      	str	r4, [r5, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 80098ea:	d113      	bne.n	8009914 <xQueueReceiveFromISR+0x90>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80098ec:	692b      	ldr	r3, [r5, #16]
 80098ee:	b90b      	cbnz	r3, 80098f4 <xQueueReceiveFromISR+0x70>
			xReturn = pdPASS;
 80098f0:	2001      	movs	r0, #1
 80098f2:	e00b      	b.n	800990c <xQueueReceiveFromISR+0x88>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80098f4:	f105 0010 	add.w	r0, r5, #16
 80098f8:	f000 fc58 	bl	800a1ac <xTaskRemoveFromEventList>
 80098fc:	2800      	cmp	r0, #0
 80098fe:	d0f7      	beq.n	80098f0 <xQueueReceiveFromISR+0x6c>
						if( pxHigherPriorityTaskWoken != NULL )
 8009900:	f1b8 0f00 	cmp.w	r8, #0
 8009904:	d0f4      	beq.n	80098f0 <xQueueReceiveFromISR+0x6c>
							*pxHigherPriorityTaskWoken = pdTRUE;
 8009906:	2001      	movs	r0, #1
 8009908:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 800990c:	f387 8811 	msr	BASEPRI, r7
}
 8009910:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 8009914:	3601      	adds	r6, #1
 8009916:	b276      	sxtb	r6, r6
 8009918:	f885 6044 	strb.w	r6, [r5, #68]	; 0x44
 800991c:	e7e8      	b.n	80098f0 <xQueueReceiveFromISR+0x6c>
			xReturn = pdFAIL;
 800991e:	4620      	mov	r0, r4
 8009920:	e7f4      	b.n	800990c <xQueueReceiveFromISR+0x88>
	...

08009924 <vQueueAddToRegistry>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified char types are allowed for strings and single characters only. */
	{
 8009924:	b510      	push	{r4, lr}

		/* See if there is an empty space in the registry.  A NULL name denotes
		a free slot. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 8009926:	4a07      	ldr	r2, [pc, #28]	; (8009944 <vQueueAddToRegistry+0x20>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8009928:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800992a:	f852 4033 	ldr.w	r4, [r2, r3, lsl #3]
 800992e:	b92c      	cbnz	r4, 800993c <vQueueAddToRegistry+0x18>
			{
				/* Store the information on this queue. */
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 8009930:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 8009934:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 8009938:	6058      	str	r0, [r3, #4]
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	}
 800993a:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800993c:	3301      	adds	r3, #1
 800993e:	2b08      	cmp	r3, #8
 8009940:	d1f3      	bne.n	800992a <vQueueAddToRegistry+0x6>
 8009942:	e7fa      	b.n	800993a <vQueueAddToRegistry+0x16>
 8009944:	20014f90 	.word	0x20014f90

08009948 <vQueueUnregisterQueue>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueUnregisterQueue( QueueHandle_t xQueue )
	{
 8009948:	b510      	push	{r4, lr}

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800994a:	4a08      	ldr	r2, [pc, #32]	; (800996c <vQueueUnregisterQueue+0x24>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800994c:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800994e:	eb02 01c3 	add.w	r1, r2, r3, lsl #3
 8009952:	684c      	ldr	r4, [r1, #4]
 8009954:	4284      	cmp	r4, r0
 8009956:	d104      	bne.n	8009962 <vQueueUnregisterQueue+0x1a>
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 8009958:	2000      	movs	r0, #0
 800995a:	f842 0033 	str.w	r0, [r2, r3, lsl #3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 800995e:	6048      	str	r0, [r1, #4]
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 8009960:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8009962:	3301      	adds	r3, #1
 8009964:	2b08      	cmp	r3, #8
 8009966:	d1f2      	bne.n	800994e <vQueueUnregisterQueue+0x6>
 8009968:	e7fa      	b.n	8009960 <vQueueUnregisterQueue+0x18>
 800996a:	bf00      	nop
 800996c:	20014f90 	.word	0x20014f90

08009970 <vQueueDelete>:
{
 8009970:	b510      	push	{r4, lr}
	configASSERT( pxQueue );
 8009972:	4604      	mov	r4, r0
 8009974:	b940      	cbnz	r0, 8009988 <vQueueDelete+0x18>
	__asm volatile
 8009976:	f04f 0350 	mov.w	r3, #80	; 0x50
 800997a:	f383 8811 	msr	BASEPRI, r3
 800997e:	f3bf 8f6f 	isb	sy
 8009982:	f3bf 8f4f 	dsb	sy
 8009986:	e7fe      	b.n	8009986 <vQueueDelete+0x16>
		vQueueUnregisterQueue( pxQueue );
 8009988:	f7ff ffde 	bl	8009948 <vQueueUnregisterQueue>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 800998c:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
 8009990:	b923      	cbnz	r3, 800999c <vQueueDelete+0x2c>
			vPortFree( pxQueue );
 8009992:	4620      	mov	r0, r4
}
 8009994:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
			vPortFree( pxQueue );
 8009998:	f7ff b8fe 	b.w	8008b98 <vPortFree>
}
 800999c:	bd10      	pop	{r4, pc}

0800999e <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 800999e:	b570      	push	{r4, r5, r6, lr}
 80099a0:	4604      	mov	r4, r0
 80099a2:	460d      	mov	r5, r1
 80099a4:	4616      	mov	r6, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 80099a6:	f7ff f9dd 	bl	8008d64 <vPortEnterCritical>
 80099aa:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 80099ae:	2bff      	cmp	r3, #255	; 0xff
 80099b0:	bf04      	itt	eq
 80099b2:	2300      	moveq	r3, #0
 80099b4:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 80099b8:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 80099bc:	2bff      	cmp	r3, #255	; 0xff
 80099be:	bf04      	itt	eq
 80099c0:	2300      	moveq	r3, #0
 80099c2:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 80099c6:	f7ff f9ed 	bl	8008da4 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 80099ca:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80099cc:	b92b      	cbnz	r3, 80099da <vQueueWaitForMessageRestricted+0x3c>
		{
			/* There is nothing in the queue, block for the specified period. */
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 80099ce:	4632      	mov	r2, r6
 80099d0:	4629      	mov	r1, r5
 80099d2:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80099d6:	f000 fbcb 	bl	800a170 <vTaskPlaceOnEventListRestricted>
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
 80099da:	4620      	mov	r0, r4
	}
 80099dc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		prvUnlockQueue( pxQueue );
 80099e0:	f7ff bb5a 	b.w	8009098 <prvUnlockQueue>

080099e4 <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 80099e4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80099e8:	4604      	mov	r4, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 80099ea:	f7ff f9bb 	bl	8008d64 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 80099ee:	4b30      	ldr	r3, [pc, #192]	; (8009ab0 <prvAddNewTaskToReadyList+0xcc>)
		if( pxCurrentTCB == NULL )
 80099f0:	4e30      	ldr	r6, [pc, #192]	; (8009ab4 <prvAddNewTaskToReadyList+0xd0>)
		uxCurrentNumberOfTasks++;
 80099f2:	681a      	ldr	r2, [r3, #0]
 80099f4:	4f30      	ldr	r7, [pc, #192]	; (8009ab8 <prvAddNewTaskToReadyList+0xd4>)
 80099f6:	3201      	adds	r2, #1
 80099f8:	601a      	str	r2, [r3, #0]
		if( pxCurrentTCB == NULL )
 80099fa:	6835      	ldr	r5, [r6, #0]
 80099fc:	2d00      	cmp	r5, #0
 80099fe:	d14b      	bne.n	8009a98 <prvAddNewTaskToReadyList+0xb4>
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
 8009a00:	6034      	str	r4, [r6, #0]

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 8009a02:	681b      	ldr	r3, [r3, #0]
 8009a04:	2b01      	cmp	r3, #1
 8009a06:	d11f      	bne.n	8009a48 <prvAddNewTaskToReadyList+0x64>
 8009a08:	46b8      	mov	r8, r7
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 8009a0a:	4640      	mov	r0, r8
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 8009a0c:	3501      	adds	r5, #1
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 8009a0e:	f7ff f8fb 	bl	8008c08 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 8009a12:	2d38      	cmp	r5, #56	; 0x38
 8009a14:	f108 0814 	add.w	r8, r8, #20
 8009a18:	d1f7      	bne.n	8009a0a <prvAddNewTaskToReadyList+0x26>
	}

	vListInitialise( &xDelayedTaskList1 );
 8009a1a:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8009ae0 <prvAddNewTaskToReadyList+0xfc>
	vListInitialise( &xDelayedTaskList2 );
 8009a1e:	4d27      	ldr	r5, [pc, #156]	; (8009abc <prvAddNewTaskToReadyList+0xd8>)
	vListInitialise( &xDelayedTaskList1 );
 8009a20:	4640      	mov	r0, r8
 8009a22:	f7ff f8f1 	bl	8008c08 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 8009a26:	4628      	mov	r0, r5
 8009a28:	f7ff f8ee 	bl	8008c08 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 8009a2c:	4824      	ldr	r0, [pc, #144]	; (8009ac0 <prvAddNewTaskToReadyList+0xdc>)
 8009a2e:	f7ff f8eb 	bl	8008c08 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 8009a32:	4824      	ldr	r0, [pc, #144]	; (8009ac4 <prvAddNewTaskToReadyList+0xe0>)
 8009a34:	f7ff f8e8 	bl	8008c08 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 8009a38:	4823      	ldr	r0, [pc, #140]	; (8009ac8 <prvAddNewTaskToReadyList+0xe4>)
 8009a3a:	f7ff f8e5 	bl	8008c08 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 8009a3e:	4b23      	ldr	r3, [pc, #140]	; (8009acc <prvAddNewTaskToReadyList+0xe8>)
 8009a40:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 8009a44:	4b22      	ldr	r3, [pc, #136]	; (8009ad0 <prvAddNewTaskToReadyList+0xec>)
 8009a46:	601d      	str	r5, [r3, #0]
		uxTaskNumber++;
 8009a48:	4a22      	ldr	r2, [pc, #136]	; (8009ad4 <prvAddNewTaskToReadyList+0xf0>)
 8009a4a:	6813      	ldr	r3, [r2, #0]
 8009a4c:	3301      	adds	r3, #1
 8009a4e:	6013      	str	r3, [r2, #0]
		prvAddTaskToReadyList( pxNewTCB );
 8009a50:	4a21      	ldr	r2, [pc, #132]	; (8009ad8 <prvAddNewTaskToReadyList+0xf4>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 8009a52:	6463      	str	r3, [r4, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 8009a54:	6811      	ldr	r1, [r2, #0]
 8009a56:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8009a58:	2014      	movs	r0, #20
 8009a5a:	428b      	cmp	r3, r1
 8009a5c:	fb00 7003 	mla	r0, r0, r3, r7
 8009a60:	f104 0104 	add.w	r1, r4, #4
 8009a64:	bf88      	it	hi
 8009a66:	6013      	strhi	r3, [r2, #0]
 8009a68:	f7ff f8dc 	bl	8008c24 <vListInsertEnd>
	taskEXIT_CRITICAL();
 8009a6c:	f7ff f99a 	bl	8008da4 <vPortExitCritical>
	if( xSchedulerRunning != pdFALSE )
 8009a70:	4b1a      	ldr	r3, [pc, #104]	; (8009adc <prvAddNewTaskToReadyList+0xf8>)
 8009a72:	681b      	ldr	r3, [r3, #0]
 8009a74:	b173      	cbz	r3, 8009a94 <prvAddNewTaskToReadyList+0xb0>
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 8009a76:	6833      	ldr	r3, [r6, #0]
 8009a78:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8009a7a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8009a7c:	429a      	cmp	r2, r3
 8009a7e:	d209      	bcs.n	8009a94 <prvAddNewTaskToReadyList+0xb0>
			taskYIELD_IF_USING_PREEMPTION();
 8009a80:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009a84:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009a88:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009a8c:	f3bf 8f4f 	dsb	sy
 8009a90:	f3bf 8f6f 	isb	sy
}
 8009a94:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( xSchedulerRunning == pdFALSE )
 8009a98:	4b10      	ldr	r3, [pc, #64]	; (8009adc <prvAddNewTaskToReadyList+0xf8>)
 8009a9a:	681b      	ldr	r3, [r3, #0]
 8009a9c:	2b00      	cmp	r3, #0
 8009a9e:	d1d3      	bne.n	8009a48 <prvAddNewTaskToReadyList+0x64>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 8009aa0:	6833      	ldr	r3, [r6, #0]
 8009aa2:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8009aa4:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8009aa6:	429a      	cmp	r2, r3
					pxCurrentTCB = pxNewTCB;
 8009aa8:	bf98      	it	ls
 8009aaa:	6034      	strls	r4, [r6, #0]
 8009aac:	e7cc      	b.n	8009a48 <prvAddNewTaskToReadyList+0x64>
 8009aae:	bf00      	nop
 8009ab0:	2001543c 	.word	0x2001543c
 8009ab4:	20014fd0 	.word	0x20014fd0
 8009ab8:	20014fdc 	.word	0x20014fdc
 8009abc:	20015468 	.word	0x20015468
 8009ac0:	20015484 	.word	0x20015484
 8009ac4:	200154b0 	.word	0x200154b0
 8009ac8:	2001549c 	.word	0x2001549c
 8009acc:	20014fd4 	.word	0x20014fd4
 8009ad0:	20014fd8 	.word	0x20014fd8
 8009ad4:	2001544c 	.word	0x2001544c
 8009ad8:	20015450 	.word	0x20015450
 8009adc:	20015498 	.word	0x20015498
 8009ae0:	20015454 	.word	0x20015454

08009ae4 <prvAddCurrentTaskToDelayedList>:
	}
#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
 8009ae4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 8009ae6:	4b15      	ldr	r3, [pc, #84]	; (8009b3c <prvAddCurrentTaskToDelayedList+0x58>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009ae8:	4e15      	ldr	r6, [pc, #84]	; (8009b40 <prvAddCurrentTaskToDelayedList+0x5c>)
const TickType_t xConstTickCount = xTickCount;
 8009aea:	681d      	ldr	r5, [r3, #0]
{
 8009aec:	4604      	mov	r4, r0
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009aee:	6830      	ldr	r0, [r6, #0]
 8009af0:	3004      	adds	r0, #4
{
 8009af2:	460f      	mov	r7, r1
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009af4:	f7ff f8b9 	bl	8008c6a <uxListRemove>
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 8009af8:	1c63      	adds	r3, r4, #1
 8009afa:	d107      	bne.n	8009b0c <prvAddCurrentTaskToDelayedList+0x28>
 8009afc:	b137      	cbz	r7, 8009b0c <prvAddCurrentTaskToDelayedList+0x28>
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8009afe:	6831      	ldr	r1, [r6, #0]
 8009b00:	4810      	ldr	r0, [pc, #64]	; (8009b44 <prvAddCurrentTaskToDelayedList+0x60>)

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
 8009b02:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8009b06:	3104      	adds	r1, #4
 8009b08:	f7ff b88c 	b.w	8008c24 <vListInsertEnd>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 8009b0c:	6833      	ldr	r3, [r6, #0]
 8009b0e:	192c      	adds	r4, r5, r4
 8009b10:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 8009b12:	d307      	bcc.n	8009b24 <prvAddCurrentTaskToDelayedList+0x40>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8009b14:	4b0c      	ldr	r3, [pc, #48]	; (8009b48 <prvAddCurrentTaskToDelayedList+0x64>)
 8009b16:	6818      	ldr	r0, [r3, #0]
 8009b18:	6831      	ldr	r1, [r6, #0]
}
 8009b1a:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8009b1e:	3104      	adds	r1, #4
 8009b20:	f7ff b88c 	b.w	8008c3c <vListInsert>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8009b24:	4b09      	ldr	r3, [pc, #36]	; (8009b4c <prvAddCurrentTaskToDelayedList+0x68>)
 8009b26:	6818      	ldr	r0, [r3, #0]
 8009b28:	6831      	ldr	r1, [r6, #0]
 8009b2a:	3104      	adds	r1, #4
 8009b2c:	f7ff f886 	bl	8008c3c <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 8009b30:	4b07      	ldr	r3, [pc, #28]	; (8009b50 <prvAddCurrentTaskToDelayedList+0x6c>)
 8009b32:	681a      	ldr	r2, [r3, #0]
 8009b34:	42a2      	cmp	r2, r4
					xNextTaskUnblockTime = xTimeToWake;
 8009b36:	bf88      	it	hi
 8009b38:	601c      	strhi	r4, [r3, #0]
}
 8009b3a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8009b3c:	200154c4 	.word	0x200154c4
 8009b40:	20014fd0 	.word	0x20014fd0
 8009b44:	2001549c 	.word	0x2001549c
 8009b48:	20014fd8 	.word	0x20014fd8
 8009b4c:	20014fd4 	.word	0x20014fd4
 8009b50:	2001547c 	.word	0x2001547c

08009b54 <prvResetNextTaskUnblockTime>:
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8009b54:	4a06      	ldr	r2, [pc, #24]	; (8009b70 <prvResetNextTaskUnblockTime+0x1c>)
 8009b56:	6813      	ldr	r3, [r2, #0]
 8009b58:	6819      	ldr	r1, [r3, #0]
 8009b5a:	4b06      	ldr	r3, [pc, #24]	; (8009b74 <prvResetNextTaskUnblockTime+0x20>)
 8009b5c:	b919      	cbnz	r1, 8009b66 <prvResetNextTaskUnblockTime+0x12>
		xNextTaskUnblockTime = portMAX_DELAY;
 8009b5e:	f04f 32ff 	mov.w	r2, #4294967295
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 8009b62:	601a      	str	r2, [r3, #0]
}
 8009b64:	4770      	bx	lr
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009b66:	6812      	ldr	r2, [r2, #0]
 8009b68:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 8009b6a:	68d2      	ldr	r2, [r2, #12]
 8009b6c:	6852      	ldr	r2, [r2, #4]
 8009b6e:	e7f8      	b.n	8009b62 <prvResetNextTaskUnblockTime+0xe>
 8009b70:	20014fd4 	.word	0x20014fd4
 8009b74:	2001547c 	.word	0x2001547c

08009b78 <prvDeleteTCB>:
	{
 8009b78:	b510      	push	{r4, lr}
 8009b7a:	4604      	mov	r4, r0
			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
 8009b7c:	3058      	adds	r0, #88	; 0x58
 8009b7e:	f017 fc31 	bl	80213e4 <_reclaim_reent>
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 8009b82:	f894 30bd 	ldrb.w	r3, [r4, #189]	; 0xbd
 8009b86:	b93b      	cbnz	r3, 8009b98 <prvDeleteTCB+0x20>
				vPortFree( pxTCB->pxStack );
 8009b88:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8009b8a:	f7ff f805 	bl	8008b98 <vPortFree>
				vPortFree( pxTCB );
 8009b8e:	4620      	mov	r0, r4
	}
 8009b90:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				vPortFree( pxTCB );
 8009b94:	f7ff b800 	b.w	8008b98 <vPortFree>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 8009b98:	2b01      	cmp	r3, #1
 8009b9a:	d0f8      	beq.n	8009b8e <prvDeleteTCB+0x16>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 8009b9c:	2b02      	cmp	r3, #2
 8009b9e:	d008      	beq.n	8009bb2 <prvDeleteTCB+0x3a>
 8009ba0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009ba4:	f383 8811 	msr	BASEPRI, r3
 8009ba8:	f3bf 8f6f 	isb	sy
 8009bac:	f3bf 8f4f 	dsb	sy
 8009bb0:	e7fe      	b.n	8009bb0 <prvDeleteTCB+0x38>
	}
 8009bb2:	bd10      	pop	{r4, pc}

08009bb4 <prvIdleTask>:
{
 8009bb4:	b580      	push	{r7, lr}
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8009bb6:	4c13      	ldr	r4, [pc, #76]	; (8009c04 <prvIdleTask+0x50>)
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009bb8:	4f13      	ldr	r7, [pc, #76]	; (8009c08 <prvIdleTask+0x54>)
				--uxCurrentNumberOfTasks;
 8009bba:	4d14      	ldr	r5, [pc, #80]	; (8009c0c <prvIdleTask+0x58>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8009bbc:	6823      	ldr	r3, [r4, #0]
 8009bbe:	b973      	cbnz	r3, 8009bde <prvIdleTask+0x2a>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 8009bc0:	4b13      	ldr	r3, [pc, #76]	; (8009c10 <prvIdleTask+0x5c>)
 8009bc2:	681b      	ldr	r3, [r3, #0]
 8009bc4:	2b01      	cmp	r3, #1
 8009bc6:	d9f8      	bls.n	8009bba <prvIdleTask+0x6>
				taskYIELD();
 8009bc8:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009bcc:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009bd0:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009bd4:	f3bf 8f4f 	dsb	sy
 8009bd8:	f3bf 8f6f 	isb	sy
 8009bdc:	e7ed      	b.n	8009bba <prvIdleTask+0x6>
			taskENTER_CRITICAL();
 8009bde:	f7ff f8c1 	bl	8008d64 <vPortEnterCritical>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009be2:	68fb      	ldr	r3, [r7, #12]
 8009be4:	68de      	ldr	r6, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8009be6:	1d30      	adds	r0, r6, #4
 8009be8:	f7ff f83f 	bl	8008c6a <uxListRemove>
				--uxCurrentNumberOfTasks;
 8009bec:	682b      	ldr	r3, [r5, #0]
 8009bee:	3b01      	subs	r3, #1
 8009bf0:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
 8009bf2:	6823      	ldr	r3, [r4, #0]
 8009bf4:	3b01      	subs	r3, #1
 8009bf6:	6023      	str	r3, [r4, #0]
			taskEXIT_CRITICAL();
 8009bf8:	f7ff f8d4 	bl	8008da4 <vPortExitCritical>
			prvDeleteTCB( pxTCB );
 8009bfc:	4630      	mov	r0, r6
 8009bfe:	f7ff ffbb 	bl	8009b78 <prvDeleteTCB>
 8009c02:	e7db      	b.n	8009bbc <prvIdleTask+0x8>
 8009c04:	20015440 	.word	0x20015440
 8009c08:	200154b0 	.word	0x200154b0
 8009c0c:	2001543c 	.word	0x2001543c
 8009c10:	20014fdc 	.word	0x20014fdc

08009c14 <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8009c14:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009c18:	e9dd 8409 	ldrd	r8, r4, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8009c1c:	ea4f 0982 	mov.w	r9, r2, lsl #2
 8009c20:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8009c22:	4606      	mov	r6, r0
 8009c24:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8009c26:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8009c28:	21a5      	movs	r1, #165	; 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8009c2a:	461f      	mov	r7, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8009c2c:	f016 fff6 	bl	8020c1c <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 8009c30:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8009c32:	f1a9 0904 	sub.w	r9, r9, #4
 8009c36:	4491      	add	r9, r2
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 8009c38:	f029 0907 	bic.w	r9, r9, #7
	if( pcName != NULL )
 8009c3c:	2d00      	cmp	r5, #0
 8009c3e:	d042      	beq.n	8009cc6 <prvInitialiseNewTask.constprop.0+0xb2>
 8009c40:	1e6b      	subs	r3, r5, #1
 8009c42:	f104 0234 	add.w	r2, r4, #52	; 0x34
 8009c46:	350f      	adds	r5, #15
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8009c48:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 8009c4c:	f802 0b01 	strb.w	r0, [r2], #1
			if( pcName[ x ] == ( char ) 0x00 )
 8009c50:	b108      	cbz	r0, 8009c56 <prvInitialiseNewTask.constprop.0+0x42>
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 8009c52:	42ab      	cmp	r3, r5
 8009c54:	d1f8      	bne.n	8009c48 <prvInitialiseNewTask.constprop.0+0x34>
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 8009c56:	2300      	movs	r3, #0
 8009c58:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 8009c5c:	9d08      	ldr	r5, [sp, #32]
 8009c5e:	2d37      	cmp	r5, #55	; 0x37
 8009c60:	bf28      	it	cs
 8009c62:	2537      	movcs	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 8009c64:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 8009c68:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 8009c6a:	64e5      	str	r5, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8009c6c:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 8009c6e:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8009c72:	f7fe ffd4 	bl	8008c1e <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009c76:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 8009c7a:	f104 0018 	add.w	r0, r4, #24
 8009c7e:	f7fe ffce 	bl	8008c1e <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
 8009c82:	f8c4 a0b8 	str.w	sl, [r4, #184]	; 0xb8
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 8009c86:	2260      	movs	r2, #96	; 0x60
 8009c88:	4651      	mov	r1, sl
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 8009c8a:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009c8c:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 8009c8e:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 8009c90:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 8009c94:	f884 a0bc 	strb.w	sl, [r4, #188]	; 0xbc
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 8009c98:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8009c9c:	f016 ffbe 	bl	8020c1c <memset>
 8009ca0:	4b0a      	ldr	r3, [pc, #40]	; (8009ccc <prvInitialiseNewTask.constprop.0+0xb8>)
 8009ca2:	65e3      	str	r3, [r4, #92]	; 0x5c
 8009ca4:	4b0a      	ldr	r3, [pc, #40]	; (8009cd0 <prvInitialiseNewTask.constprop.0+0xbc>)
 8009ca6:	6623      	str	r3, [r4, #96]	; 0x60
 8009ca8:	4b0a      	ldr	r3, [pc, #40]	; (8009cd4 <prvInitialiseNewTask.constprop.0+0xc0>)
 8009caa:	6663      	str	r3, [r4, #100]	; 0x64
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 8009cac:	463a      	mov	r2, r7
 8009cae:	4631      	mov	r1, r6
 8009cb0:	4648      	mov	r0, r9
 8009cb2:	f7ff f829 	bl	8008d08 <pxPortInitialiseStack>
 8009cb6:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 8009cb8:	f1b8 0f00 	cmp.w	r8, #0
 8009cbc:	d001      	beq.n	8009cc2 <prvInitialiseNewTask.constprop.0+0xae>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 8009cbe:	f8c8 4000 	str.w	r4, [r8]
}
 8009cc2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 8009cc6:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 8009cca:	e7c7      	b.n	8009c5c <prvInitialiseNewTask.constprop.0+0x48>
 8009ccc:	080247b8 	.word	0x080247b8
 8009cd0:	080247d8 	.word	0x080247d8
 8009cd4:	08024798 	.word	0x08024798

08009cd8 <xTaskCreateStatic>:
	{
 8009cd8:	b570      	push	{r4, r5, r6, lr}
 8009cda:	b086      	sub	sp, #24
 8009cdc:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 8009ce0:	b945      	cbnz	r5, 8009cf4 <xTaskCreateStatic+0x1c>
 8009ce2:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009ce6:	f383 8811 	msr	BASEPRI, r3
 8009cea:	f3bf 8f6f 	isb	sy
 8009cee:	f3bf 8f4f 	dsb	sy
 8009cf2:	e7fe      	b.n	8009cf2 <xTaskCreateStatic+0x1a>
		configASSERT( pxTaskBuffer != NULL );
 8009cf4:	b944      	cbnz	r4, 8009d08 <xTaskCreateStatic+0x30>
 8009cf6:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009cfa:	f383 8811 	msr	BASEPRI, r3
 8009cfe:	f3bf 8f6f 	isb	sy
 8009d02:	f3bf 8f4f 	dsb	sy
 8009d06:	e7fe      	b.n	8009d06 <xTaskCreateStatic+0x2e>
			volatile size_t xSize = sizeof( StaticTask_t );
 8009d08:	26c0      	movs	r6, #192	; 0xc0
 8009d0a:	9605      	str	r6, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 8009d0c:	9e05      	ldr	r6, [sp, #20]
 8009d0e:	2ec0      	cmp	r6, #192	; 0xc0
 8009d10:	d008      	beq.n	8009d24 <xTaskCreateStatic+0x4c>
 8009d12:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009d16:	f383 8811 	msr	BASEPRI, r3
 8009d1a:	f3bf 8f6f 	isb	sy
 8009d1e:	f3bf 8f4f 	dsb	sy
 8009d22:	e7fe      	b.n	8009d22 <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 8009d24:	6325      	str	r5, [r4, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 8009d26:	2502      	movs	r5, #2
 8009d28:	f884 50bd 	strb.w	r5, [r4, #189]	; 0xbd
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8009d2c:	ad04      	add	r5, sp, #16
 8009d2e:	9501      	str	r5, [sp, #4]
 8009d30:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8009d32:	9402      	str	r4, [sp, #8]
 8009d34:	9500      	str	r5, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 8009d36:	9e05      	ldr	r6, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8009d38:	f7ff ff6c 	bl	8009c14 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 8009d3c:	4620      	mov	r0, r4
 8009d3e:	f7ff fe51 	bl	80099e4 <prvAddNewTaskToReadyList>
	}
 8009d42:	9804      	ldr	r0, [sp, #16]
 8009d44:	b006      	add	sp, #24
 8009d46:	bd70      	pop	{r4, r5, r6, pc}

08009d48 <xTaskCreate>:
	{
 8009d48:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009d4c:	4607      	mov	r7, r0
 8009d4e:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8009d50:	0090      	lsls	r0, r2, #2
	{
 8009d52:	4688      	mov	r8, r1
 8009d54:	4616      	mov	r6, r2
 8009d56:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8009d58:	f7fe fe8c 	bl	8008a74 <pvPortMalloc>
			if( pxStack != NULL )
 8009d5c:	4605      	mov	r5, r0
 8009d5e:	b1e8      	cbz	r0, 8009d9c <xTaskCreate+0x54>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 8009d60:	20c0      	movs	r0, #192	; 0xc0
 8009d62:	f7fe fe87 	bl	8008a74 <pvPortMalloc>
				if( pxNewTCB != NULL )
 8009d66:	4604      	mov	r4, r0
 8009d68:	b1a8      	cbz	r0, 8009d96 <xTaskCreate+0x4e>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 8009d6a:	2300      	movs	r3, #0
 8009d6c:	f880 30bd 	strb.w	r3, [r0, #189]	; 0xbd
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8009d70:	9b0d      	ldr	r3, [sp, #52]	; 0x34
					pxNewTCB->pxStack = pxStack;
 8009d72:	6305      	str	r5, [r0, #48]	; 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8009d74:	9301      	str	r3, [sp, #4]
 8009d76:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8009d78:	9002      	str	r0, [sp, #8]
 8009d7a:	9300      	str	r3, [sp, #0]
 8009d7c:	4632      	mov	r2, r6
 8009d7e:	464b      	mov	r3, r9
 8009d80:	4641      	mov	r1, r8
 8009d82:	4638      	mov	r0, r7
 8009d84:	f7ff ff46 	bl	8009c14 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 8009d88:	4620      	mov	r0, r4
 8009d8a:	f7ff fe2b 	bl	80099e4 <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 8009d8e:	2001      	movs	r0, #1
	}
 8009d90:	b005      	add	sp, #20
 8009d92:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 8009d96:	4628      	mov	r0, r5
 8009d98:	f7fe fefe 	bl	8008b98 <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 8009d9c:	f04f 30ff 	mov.w	r0, #4294967295
		return xReturn;
 8009da0:	e7f6      	b.n	8009d90 <xTaskCreate+0x48>
	...

08009da4 <vTaskStartScheduler>:
{
 8009da4:	b510      	push	{r4, lr}
 8009da6:	b088      	sub	sp, #32
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 8009da8:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8009daa:	aa07      	add	r2, sp, #28
 8009dac:	a906      	add	r1, sp, #24
 8009dae:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 8009db0:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8009db4:	f7fe fe22 	bl	80089fc <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 8009db8:	9b05      	ldr	r3, [sp, #20]
 8009dba:	9302      	str	r3, [sp, #8]
 8009dbc:	9b06      	ldr	r3, [sp, #24]
 8009dbe:	9a07      	ldr	r2, [sp, #28]
 8009dc0:	4919      	ldr	r1, [pc, #100]	; (8009e28 <vTaskStartScheduler+0x84>)
 8009dc2:	481a      	ldr	r0, [pc, #104]	; (8009e2c <vTaskStartScheduler+0x88>)
 8009dc4:	e9cd 4300 	strd	r4, r3, [sp]
 8009dc8:	4623      	mov	r3, r4
 8009dca:	f7ff ff85 	bl	8009cd8 <xTaskCreateStatic>
		if( xIdleTaskHandle != NULL )
 8009dce:	b340      	cbz	r0, 8009e22 <vTaskStartScheduler+0x7e>
			xReturn = xTimerCreateTimerTask();
 8009dd0:	f000 fbc4 	bl	800a55c <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 8009dd4:	2801      	cmp	r0, #1
 8009dd6:	d119      	bne.n	8009e0c <vTaskStartScheduler+0x68>
 8009dd8:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009ddc:	f383 8811 	msr	BASEPRI, r3
 8009de0:	f3bf 8f6f 	isb	sy
 8009de4:	f3bf 8f4f 	dsb	sy
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 8009de8:	4b11      	ldr	r3, [pc, #68]	; (8009e30 <vTaskStartScheduler+0x8c>)
 8009dea:	4a12      	ldr	r2, [pc, #72]	; (8009e34 <vTaskStartScheduler+0x90>)
 8009dec:	681b      	ldr	r3, [r3, #0]
 8009dee:	3358      	adds	r3, #88	; 0x58
 8009df0:	6013      	str	r3, [r2, #0]
		xNextTaskUnblockTime = portMAX_DELAY;
 8009df2:	4b11      	ldr	r3, [pc, #68]	; (8009e38 <vTaskStartScheduler+0x94>)
 8009df4:	f04f 32ff 	mov.w	r2, #4294967295
 8009df8:	601a      	str	r2, [r3, #0]
		xSchedulerRunning = pdTRUE;
 8009dfa:	4b10      	ldr	r3, [pc, #64]	; (8009e3c <vTaskStartScheduler+0x98>)
 8009dfc:	6018      	str	r0, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 8009dfe:	4b10      	ldr	r3, [pc, #64]	; (8009e40 <vTaskStartScheduler+0x9c>)
 8009e00:	601c      	str	r4, [r3, #0]
}
 8009e02:	b008      	add	sp, #32
 8009e04:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		if( xPortStartScheduler() != pdFALSE )
 8009e08:	f7ff b83c 	b.w	8008e84 <xPortStartScheduler>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 8009e0c:	3001      	adds	r0, #1
 8009e0e:	d108      	bne.n	8009e22 <vTaskStartScheduler+0x7e>
 8009e10:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009e14:	f383 8811 	msr	BASEPRI, r3
 8009e18:	f3bf 8f6f 	isb	sy
 8009e1c:	f3bf 8f4f 	dsb	sy
 8009e20:	e7fe      	b.n	8009e20 <vTaskStartScheduler+0x7c>
}
 8009e22:	b008      	add	sp, #32
 8009e24:	bd10      	pop	{r4, pc}
 8009e26:	bf00      	nop
 8009e28:	08023754 	.word	0x08023754
 8009e2c:	08009bb5 	.word	0x08009bb5
 8009e30:	20014fd0 	.word	0x20014fd0
 8009e34:	20000104 	.word	0x20000104
 8009e38:	2001547c 	.word	0x2001547c
 8009e3c:	20015498 	.word	0x20015498
 8009e40:	200154c4 	.word	0x200154c4

08009e44 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 8009e44:	4a02      	ldr	r2, [pc, #8]	; (8009e50 <vTaskSuspendAll+0xc>)
 8009e46:	6813      	ldr	r3, [r2, #0]
 8009e48:	3301      	adds	r3, #1
 8009e4a:	6013      	str	r3, [r2, #0]
}
 8009e4c:	4770      	bx	lr
 8009e4e:	bf00      	nop
 8009e50:	20015448 	.word	0x20015448

08009e54 <xTaskGetTickCount>:
		xTicks = xTickCount;
 8009e54:	4b01      	ldr	r3, [pc, #4]	; (8009e5c <xTaskGetTickCount+0x8>)
 8009e56:	6818      	ldr	r0, [r3, #0]
}
 8009e58:	4770      	bx	lr
 8009e5a:	bf00      	nop
 8009e5c:	200154c4 	.word	0x200154c4

08009e60 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009e60:	4b3f      	ldr	r3, [pc, #252]	; (8009f60 <xTaskIncrementTick+0x100>)
 8009e62:	681b      	ldr	r3, [r3, #0]
{
 8009e64:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009e68:	2b00      	cmp	r3, #0
 8009e6a:	d173      	bne.n	8009f54 <xTaskIncrementTick+0xf4>
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 8009e6c:	4b3d      	ldr	r3, [pc, #244]	; (8009f64 <xTaskIncrementTick+0x104>)
 8009e6e:	681d      	ldr	r5, [r3, #0]
 8009e70:	3501      	adds	r5, #1
		xTickCount = xConstTickCount;
 8009e72:	601d      	str	r5, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 8009e74:	b9bd      	cbnz	r5, 8009ea6 <xTaskIncrementTick+0x46>
			taskSWITCH_DELAYED_LISTS();
 8009e76:	4b3c      	ldr	r3, [pc, #240]	; (8009f68 <xTaskIncrementTick+0x108>)
 8009e78:	681a      	ldr	r2, [r3, #0]
 8009e7a:	6812      	ldr	r2, [r2, #0]
 8009e7c:	b142      	cbz	r2, 8009e90 <xTaskIncrementTick+0x30>
 8009e7e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009e82:	f383 8811 	msr	BASEPRI, r3
 8009e86:	f3bf 8f6f 	isb	sy
 8009e8a:	f3bf 8f4f 	dsb	sy
 8009e8e:	e7fe      	b.n	8009e8e <xTaskIncrementTick+0x2e>
 8009e90:	4a36      	ldr	r2, [pc, #216]	; (8009f6c <xTaskIncrementTick+0x10c>)
 8009e92:	6819      	ldr	r1, [r3, #0]
 8009e94:	6810      	ldr	r0, [r2, #0]
 8009e96:	6018      	str	r0, [r3, #0]
 8009e98:	6011      	str	r1, [r2, #0]
 8009e9a:	4a35      	ldr	r2, [pc, #212]	; (8009f70 <xTaskIncrementTick+0x110>)
 8009e9c:	6813      	ldr	r3, [r2, #0]
 8009e9e:	3301      	adds	r3, #1
 8009ea0:	6013      	str	r3, [r2, #0]
 8009ea2:	f7ff fe57 	bl	8009b54 <prvResetNextTaskUnblockTime>
		if( xConstTickCount >= xNextTaskUnblockTime )
 8009ea6:	4e33      	ldr	r6, [pc, #204]	; (8009f74 <xTaskIncrementTick+0x114>)
 8009ea8:	4f33      	ldr	r7, [pc, #204]	; (8009f78 <xTaskIncrementTick+0x118>)
 8009eaa:	6833      	ldr	r3, [r6, #0]
 8009eac:	f8df 80d4 	ldr.w	r8, [pc, #212]	; 8009f84 <xTaskIncrementTick+0x124>
 8009eb0:	42ab      	cmp	r3, r5
BaseType_t xSwitchRequired = pdFALSE;
 8009eb2:	f04f 0400 	mov.w	r4, #0
		if( xConstTickCount >= xNextTaskUnblockTime )
 8009eb6:	d911      	bls.n	8009edc <xTaskIncrementTick+0x7c>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 8009eb8:	f8d8 3000 	ldr.w	r3, [r8]
 8009ebc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009ebe:	2214      	movs	r2, #20
 8009ec0:	4353      	muls	r3, r2
 8009ec2:	58fb      	ldr	r3, [r7, r3]
				xSwitchRequired = pdTRUE;
 8009ec4:	2b02      	cmp	r3, #2
 8009ec6:	bf28      	it	cs
 8009ec8:	2401      	movcs	r4, #1
		if( xYieldPending != pdFALSE )
 8009eca:	4b2c      	ldr	r3, [pc, #176]	; (8009f7c <xTaskIncrementTick+0x11c>)
 8009ecc:	681b      	ldr	r3, [r3, #0]
			xSwitchRequired = pdTRUE;
 8009ece:	2b00      	cmp	r3, #0
}
 8009ed0:	bf0c      	ite	eq
 8009ed2:	4620      	moveq	r0, r4
 8009ed4:	2001      	movne	r0, #1
 8009ed6:	b003      	add	sp, #12
 8009ed8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8009edc:	f8df 9088 	ldr.w	r9, [pc, #136]	; 8009f68 <xTaskIncrementTick+0x108>
					prvAddTaskToReadyList( pxTCB );
 8009ee0:	f8df a0a4 	ldr.w	sl, [pc, #164]	; 8009f88 <xTaskIncrementTick+0x128>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8009ee4:	f8d9 3000 	ldr.w	r3, [r9]
 8009ee8:	681b      	ldr	r3, [r3, #0]
 8009eea:	b91b      	cbnz	r3, 8009ef4 <xTaskIncrementTick+0x94>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009eec:	f04f 33ff 	mov.w	r3, #4294967295
 8009ef0:	6033      	str	r3, [r6, #0]
					break;
 8009ef2:	e7e1      	b.n	8009eb8 <xTaskIncrementTick+0x58>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009ef4:	f8d9 3000 	ldr.w	r3, [r9]
 8009ef8:	68db      	ldr	r3, [r3, #12]
 8009efa:	f8d3 b00c 	ldr.w	fp, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 8009efe:	f8db 2004 	ldr.w	r2, [fp, #4]
					if( xConstTickCount < xItemValue )
 8009f02:	4295      	cmp	r5, r2
 8009f04:	d201      	bcs.n	8009f0a <xTaskIncrementTick+0xaa>
						xNextTaskUnblockTime = xItemValue;
 8009f06:	6032      	str	r2, [r6, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 8009f08:	e7d6      	b.n	8009eb8 <xTaskIncrementTick+0x58>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8009f0a:	f10b 0104 	add.w	r1, fp, #4
 8009f0e:	4608      	mov	r0, r1
 8009f10:	9101      	str	r1, [sp, #4]
 8009f12:	f7fe feaa 	bl	8008c6a <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 8009f16:	f8db 2028 	ldr.w	r2, [fp, #40]	; 0x28
 8009f1a:	9901      	ldr	r1, [sp, #4]
 8009f1c:	b122      	cbz	r2, 8009f28 <xTaskIncrementTick+0xc8>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8009f1e:	f10b 0018 	add.w	r0, fp, #24
 8009f22:	f7fe fea2 	bl	8008c6a <uxListRemove>
 8009f26:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
 8009f28:	f8db 002c 	ldr.w	r0, [fp, #44]	; 0x2c
 8009f2c:	f8da 2000 	ldr.w	r2, [sl]
 8009f30:	2314      	movs	r3, #20
 8009f32:	4290      	cmp	r0, r2
 8009f34:	bf88      	it	hi
 8009f36:	f8ca 0000 	strhi.w	r0, [sl]
 8009f3a:	fb03 7000 	mla	r0, r3, r0, r7
 8009f3e:	f7fe fe71 	bl	8008c24 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8009f42:	f8d8 1000 	ldr.w	r1, [r8]
 8009f46:	f8db 202c 	ldr.w	r2, [fp, #44]	; 0x2c
 8009f4a:	6acb      	ldr	r3, [r1, #44]	; 0x2c
							xSwitchRequired = pdTRUE;
 8009f4c:	429a      	cmp	r2, r3
 8009f4e:	bf28      	it	cs
 8009f50:	2401      	movcs	r4, #1
 8009f52:	e7c7      	b.n	8009ee4 <xTaskIncrementTick+0x84>
		++uxPendedTicks;
 8009f54:	4a0a      	ldr	r2, [pc, #40]	; (8009f80 <xTaskIncrementTick+0x120>)
 8009f56:	6813      	ldr	r3, [r2, #0]
 8009f58:	3301      	adds	r3, #1
 8009f5a:	6013      	str	r3, [r2, #0]
BaseType_t xSwitchRequired = pdFALSE;
 8009f5c:	2400      	movs	r4, #0
 8009f5e:	e7b4      	b.n	8009eca <xTaskIncrementTick+0x6a>
 8009f60:	20015448 	.word	0x20015448
 8009f64:	200154c4 	.word	0x200154c4
 8009f68:	20014fd4 	.word	0x20014fd4
 8009f6c:	20014fd8 	.word	0x20014fd8
 8009f70:	20015480 	.word	0x20015480
 8009f74:	2001547c 	.word	0x2001547c
 8009f78:	20014fdc 	.word	0x20014fdc
 8009f7c:	200154c8 	.word	0x200154c8
 8009f80:	20015444 	.word	0x20015444
 8009f84:	20014fd0 	.word	0x20014fd0
 8009f88:	20015450 	.word	0x20015450

08009f8c <xTaskResumeAll>:
{
 8009f8c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	configASSERT( uxSchedulerSuspended );
 8009f8e:	4c31      	ldr	r4, [pc, #196]	; (800a054 <xTaskResumeAll+0xc8>)
 8009f90:	6823      	ldr	r3, [r4, #0]
 8009f92:	b943      	cbnz	r3, 8009fa6 <xTaskResumeAll+0x1a>
 8009f94:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009f98:	f383 8811 	msr	BASEPRI, r3
 8009f9c:	f3bf 8f6f 	isb	sy
 8009fa0:	f3bf 8f4f 	dsb	sy
 8009fa4:	e7fe      	b.n	8009fa4 <xTaskResumeAll+0x18>
	taskENTER_CRITICAL();
 8009fa6:	f7fe fedd 	bl	8008d64 <vPortEnterCritical>
		--uxSchedulerSuspended;
 8009faa:	6823      	ldr	r3, [r4, #0]
 8009fac:	3b01      	subs	r3, #1
 8009fae:	6023      	str	r3, [r4, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009fb0:	6824      	ldr	r4, [r4, #0]
 8009fb2:	b12c      	cbz	r4, 8009fc0 <xTaskResumeAll+0x34>
BaseType_t xAlreadyYielded = pdFALSE;
 8009fb4:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 8009fb6:	f7fe fef5 	bl	8008da4 <vPortExitCritical>
}
 8009fba:	4620      	mov	r0, r4
 8009fbc:	b003      	add	sp, #12
 8009fbe:	bdf0      	pop	{r4, r5, r6, r7, pc}
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 8009fc0:	4b25      	ldr	r3, [pc, #148]	; (800a058 <xTaskResumeAll+0xcc>)
 8009fc2:	681b      	ldr	r3, [r3, #0]
 8009fc4:	2b00      	cmp	r3, #0
 8009fc6:	d0f5      	beq.n	8009fb4 <xTaskResumeAll+0x28>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8009fc8:	4d24      	ldr	r5, [pc, #144]	; (800a05c <xTaskResumeAll+0xd0>)
					prvAddTaskToReadyList( pxTCB );
 8009fca:	4e25      	ldr	r6, [pc, #148]	; (800a060 <xTaskResumeAll+0xd4>)
 8009fcc:	4f25      	ldr	r7, [pc, #148]	; (800a064 <xTaskResumeAll+0xd8>)
 8009fce:	e01e      	b.n	800a00e <xTaskResumeAll+0x82>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009fd0:	68eb      	ldr	r3, [r5, #12]
 8009fd2:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8009fd4:	f104 0018 	add.w	r0, r4, #24
 8009fd8:	f7fe fe47 	bl	8008c6a <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8009fdc:	1d21      	adds	r1, r4, #4
 8009fde:	4608      	mov	r0, r1
 8009fe0:	9101      	str	r1, [sp, #4]
 8009fe2:	f7fe fe42 	bl	8008c6a <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 8009fe6:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8009fe8:	6832      	ldr	r2, [r6, #0]
 8009fea:	9901      	ldr	r1, [sp, #4]
 8009fec:	2014      	movs	r0, #20
 8009fee:	4293      	cmp	r3, r2
 8009ff0:	fb00 7003 	mla	r0, r0, r3, r7
 8009ff4:	bf88      	it	hi
 8009ff6:	6033      	strhi	r3, [r6, #0]
 8009ff8:	f7fe fe14 	bl	8008c24 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8009ffc:	4b1a      	ldr	r3, [pc, #104]	; (800a068 <xTaskResumeAll+0xdc>)
 8009ffe:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800a000:	681b      	ldr	r3, [r3, #0]
 800a002:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a004:	429a      	cmp	r2, r3
 800a006:	d302      	bcc.n	800a00e <xTaskResumeAll+0x82>
						xYieldPending = pdTRUE;
 800a008:	4b18      	ldr	r3, [pc, #96]	; (800a06c <xTaskResumeAll+0xe0>)
 800a00a:	2201      	movs	r2, #1
 800a00c:	601a      	str	r2, [r3, #0]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800a00e:	682b      	ldr	r3, [r5, #0]
 800a010:	2b00      	cmp	r3, #0
 800a012:	d1dd      	bne.n	8009fd0 <xTaskResumeAll+0x44>
				if( pxTCB != NULL )
 800a014:	b10c      	cbz	r4, 800a01a <xTaskResumeAll+0x8e>
					prvResetNextTaskUnblockTime();
 800a016:	f7ff fd9d 	bl	8009b54 <prvResetNextTaskUnblockTime>
					UBaseType_t uxPendedCounts = uxPendedTicks; /* Non-volatile copy. */
 800a01a:	4d15      	ldr	r5, [pc, #84]	; (800a070 <xTaskResumeAll+0xe4>)
 800a01c:	682c      	ldr	r4, [r5, #0]
					if( uxPendedCounts > ( UBaseType_t ) 0U )
 800a01e:	b144      	cbz	r4, 800a032 <xTaskResumeAll+0xa6>
								xYieldPending = pdTRUE;
 800a020:	4e12      	ldr	r6, [pc, #72]	; (800a06c <xTaskResumeAll+0xe0>)
 800a022:	2701      	movs	r7, #1
							if( xTaskIncrementTick() != pdFALSE )
 800a024:	f7ff ff1c 	bl	8009e60 <xTaskIncrementTick>
 800a028:	b100      	cbz	r0, 800a02c <xTaskResumeAll+0xa0>
								xYieldPending = pdTRUE;
 800a02a:	6037      	str	r7, [r6, #0]
						} while( uxPendedCounts > ( UBaseType_t ) 0U );
 800a02c:	3c01      	subs	r4, #1
 800a02e:	d1f9      	bne.n	800a024 <xTaskResumeAll+0x98>
						uxPendedTicks = 0;
 800a030:	602c      	str	r4, [r5, #0]
				if( xYieldPending != pdFALSE )
 800a032:	4b0e      	ldr	r3, [pc, #56]	; (800a06c <xTaskResumeAll+0xe0>)
 800a034:	681b      	ldr	r3, [r3, #0]
 800a036:	2b00      	cmp	r3, #0
 800a038:	d0bc      	beq.n	8009fb4 <xTaskResumeAll+0x28>
					taskYIELD_IF_USING_PREEMPTION();
 800a03a:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800a03e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800a042:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800a046:	f3bf 8f4f 	dsb	sy
 800a04a:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 800a04e:	2401      	movs	r4, #1
 800a050:	e7b1      	b.n	8009fb6 <xTaskResumeAll+0x2a>
 800a052:	bf00      	nop
 800a054:	20015448 	.word	0x20015448
 800a058:	2001543c 	.word	0x2001543c
 800a05c:	20015484 	.word	0x20015484
 800a060:	20015450 	.word	0x20015450
 800a064:	20014fdc 	.word	0x20014fdc
 800a068:	20014fd0 	.word	0x20014fd0
 800a06c:	200154c8 	.word	0x200154c8
 800a070:	20015444 	.word	0x20015444

0800a074 <vTaskDelay>:
	{
 800a074:	b508      	push	{r3, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 800a076:	b950      	cbnz	r0, 800a08e <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 800a078:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800a07c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800a080:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800a084:	f3bf 8f4f 	dsb	sy
 800a088:	f3bf 8f6f 	isb	sy
	}
 800a08c:	bd08      	pop	{r3, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 800a08e:	4b0a      	ldr	r3, [pc, #40]	; (800a0b8 <vTaskDelay+0x44>)
 800a090:	6819      	ldr	r1, [r3, #0]
 800a092:	b141      	cbz	r1, 800a0a6 <vTaskDelay+0x32>
 800a094:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a098:	f383 8811 	msr	BASEPRI, r3
 800a09c:	f3bf 8f6f 	isb	sy
 800a0a0:	f3bf 8f4f 	dsb	sy
 800a0a4:	e7fe      	b.n	800a0a4 <vTaskDelay+0x30>
			vTaskSuspendAll();
 800a0a6:	f7ff fecd 	bl	8009e44 <vTaskSuspendAll>
				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
 800a0aa:	f7ff fd1b 	bl	8009ae4 <prvAddCurrentTaskToDelayedList>
			xAlreadyYielded = xTaskResumeAll();
 800a0ae:	f7ff ff6d 	bl	8009f8c <xTaskResumeAll>
		if( xAlreadyYielded == pdFALSE )
 800a0b2:	2800      	cmp	r0, #0
 800a0b4:	d0e0      	beq.n	800a078 <vTaskDelay+0x4>
 800a0b6:	e7e9      	b.n	800a08c <vTaskDelay+0x18>
 800a0b8:	20015448 	.word	0x20015448

0800a0bc <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 800a0bc:	4b19      	ldr	r3, [pc, #100]	; (800a124 <vTaskSwitchContext+0x68>)
 800a0be:	681a      	ldr	r2, [r3, #0]
 800a0c0:	4b19      	ldr	r3, [pc, #100]	; (800a128 <vTaskSwitchContext+0x6c>)
{
 800a0c2:	b570      	push	{r4, r5, r6, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 800a0c4:	b112      	cbz	r2, 800a0cc <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
 800a0c6:	2201      	movs	r2, #1
 800a0c8:	601a      	str	r2, [r3, #0]
}
 800a0ca:	bd70      	pop	{r4, r5, r6, pc}
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a0cc:	4d17      	ldr	r5, [pc, #92]	; (800a12c <vTaskSwitchContext+0x70>)
		xYieldPending = pdFALSE;
 800a0ce:	601a      	str	r2, [r3, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a0d0:	682a      	ldr	r2, [r5, #0]
 800a0d2:	4917      	ldr	r1, [pc, #92]	; (800a130 <vTaskSwitchContext+0x74>)
 800a0d4:	2614      	movs	r6, #20
 800a0d6:	fb06 f302 	mul.w	r3, r6, r2
 800a0da:	18c8      	adds	r0, r1, r3
 800a0dc:	58cc      	ldr	r4, [r1, r3]
 800a0de:	b1ac      	cbz	r4, 800a10c <vTaskSwitchContext+0x50>
 800a0e0:	6844      	ldr	r4, [r0, #4]
 800a0e2:	3308      	adds	r3, #8
 800a0e4:	6864      	ldr	r4, [r4, #4]
 800a0e6:	6044      	str	r4, [r0, #4]
 800a0e8:	440b      	add	r3, r1
 800a0ea:	429c      	cmp	r4, r3
 800a0ec:	bf04      	itt	eq
 800a0ee:	6863      	ldreq	r3, [r4, #4]
 800a0f0:	6043      	streq	r3, [r0, #4]
 800a0f2:	2314      	movs	r3, #20
 800a0f4:	fb03 1102 	mla	r1, r3, r2, r1
 800a0f8:	684b      	ldr	r3, [r1, #4]
 800a0fa:	68d9      	ldr	r1, [r3, #12]
 800a0fc:	4b0d      	ldr	r3, [pc, #52]	; (800a134 <vTaskSwitchContext+0x78>)
 800a0fe:	6019      	str	r1, [r3, #0]
 800a100:	602a      	str	r2, [r5, #0]
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800a102:	681b      	ldr	r3, [r3, #0]
 800a104:	4a0c      	ldr	r2, [pc, #48]	; (800a138 <vTaskSwitchContext+0x7c>)
 800a106:	3358      	adds	r3, #88	; 0x58
 800a108:	6013      	str	r3, [r2, #0]
}
 800a10a:	e7de      	b.n	800a0ca <vTaskSwitchContext+0xe>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a10c:	b942      	cbnz	r2, 800a120 <vTaskSwitchContext+0x64>
 800a10e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a112:	f383 8811 	msr	BASEPRI, r3
 800a116:	f3bf 8f6f 	isb	sy
 800a11a:	f3bf 8f4f 	dsb	sy
 800a11e:	e7fe      	b.n	800a11e <vTaskSwitchContext+0x62>
 800a120:	3a01      	subs	r2, #1
 800a122:	e7d8      	b.n	800a0d6 <vTaskSwitchContext+0x1a>
 800a124:	20015448 	.word	0x20015448
 800a128:	200154c8 	.word	0x200154c8
 800a12c:	20015450 	.word	0x20015450
 800a130:	20014fdc 	.word	0x20014fdc
 800a134:	20014fd0 	.word	0x20014fd0
 800a138:	20000104 	.word	0x20000104

0800a13c <vTaskPlaceOnEventList>:
{
 800a13c:	b510      	push	{r4, lr}
 800a13e:	460c      	mov	r4, r1
	configASSERT( pxEventList );
 800a140:	b940      	cbnz	r0, 800a154 <vTaskPlaceOnEventList+0x18>
 800a142:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a146:	f383 8811 	msr	BASEPRI, r3
 800a14a:	f3bf 8f6f 	isb	sy
 800a14e:	f3bf 8f4f 	dsb	sy
 800a152:	e7fe      	b.n	800a152 <vTaskPlaceOnEventList+0x16>
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800a154:	4b05      	ldr	r3, [pc, #20]	; (800a16c <vTaskPlaceOnEventList+0x30>)
 800a156:	6819      	ldr	r1, [r3, #0]
 800a158:	3118      	adds	r1, #24
 800a15a:	f7fe fd6f 	bl	8008c3c <vListInsert>
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800a15e:	4620      	mov	r0, r4
 800a160:	2101      	movs	r1, #1
}
 800a162:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800a166:	f7ff bcbd 	b.w	8009ae4 <prvAddCurrentTaskToDelayedList>
 800a16a:	bf00      	nop
 800a16c:	20014fd0 	.word	0x20014fd0

0800a170 <vTaskPlaceOnEventListRestricted>:
	{
 800a170:	b538      	push	{r3, r4, r5, lr}
 800a172:	460d      	mov	r5, r1
 800a174:	4614      	mov	r4, r2
		configASSERT( pxEventList );
 800a176:	b940      	cbnz	r0, 800a18a <vTaskPlaceOnEventListRestricted+0x1a>
 800a178:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a17c:	f383 8811 	msr	BASEPRI, r3
 800a180:	f3bf 8f6f 	isb	sy
 800a184:	f3bf 8f4f 	dsb	sy
 800a188:	e7fe      	b.n	800a188 <vTaskPlaceOnEventListRestricted+0x18>
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800a18a:	4b07      	ldr	r3, [pc, #28]	; (800a1a8 <vTaskPlaceOnEventListRestricted+0x38>)
 800a18c:	6819      	ldr	r1, [r3, #0]
 800a18e:	3118      	adds	r1, #24
 800a190:	f7fe fd48 	bl	8008c24 <vListInsertEnd>
			xTicksToWait = portMAX_DELAY;
 800a194:	2c00      	cmp	r4, #0
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800a196:	4621      	mov	r1, r4
 800a198:	bf0c      	ite	eq
 800a19a:	4628      	moveq	r0, r5
 800a19c:	f04f 30ff 	movne.w	r0, #4294967295
	}
 800a1a0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800a1a4:	f7ff bc9e 	b.w	8009ae4 <prvAddCurrentTaskToDelayedList>
 800a1a8:	20014fd0 	.word	0x20014fd0

0800a1ac <xTaskRemoveFromEventList>:
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a1ac:	68c3      	ldr	r3, [r0, #12]
{
 800a1ae:	b513      	push	{r0, r1, r4, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a1b0:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
 800a1b2:	b944      	cbnz	r4, 800a1c6 <xTaskRemoveFromEventList+0x1a>
 800a1b4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a1b8:	f383 8811 	msr	BASEPRI, r3
 800a1bc:	f3bf 8f6f 	isb	sy
 800a1c0:	f3bf 8f4f 	dsb	sy
 800a1c4:	e7fe      	b.n	800a1c4 <xTaskRemoveFromEventList+0x18>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 800a1c6:	f104 0118 	add.w	r1, r4, #24
 800a1ca:	4608      	mov	r0, r1
 800a1cc:	9101      	str	r1, [sp, #4]
 800a1ce:	f7fe fd4c 	bl	8008c6a <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800a1d2:	4b12      	ldr	r3, [pc, #72]	; (800a21c <xTaskRemoveFromEventList+0x70>)
 800a1d4:	9901      	ldr	r1, [sp, #4]
 800a1d6:	681b      	ldr	r3, [r3, #0]
 800a1d8:	b9eb      	cbnz	r3, 800a216 <xTaskRemoveFromEventList+0x6a>
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 800a1da:	1d21      	adds	r1, r4, #4
 800a1dc:	4608      	mov	r0, r1
 800a1de:	9101      	str	r1, [sp, #4]
 800a1e0:	f7fe fd43 	bl	8008c6a <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 800a1e4:	4a0e      	ldr	r2, [pc, #56]	; (800a220 <xTaskRemoveFromEventList+0x74>)
 800a1e6:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800a1e8:	6810      	ldr	r0, [r2, #0]
 800a1ea:	9901      	ldr	r1, [sp, #4]
 800a1ec:	4283      	cmp	r3, r0
 800a1ee:	bf88      	it	hi
 800a1f0:	6013      	strhi	r3, [r2, #0]
 800a1f2:	4a0c      	ldr	r2, [pc, #48]	; (800a224 <xTaskRemoveFromEventList+0x78>)
 800a1f4:	2014      	movs	r0, #20
 800a1f6:	fb00 2003 	mla	r0, r0, r3, r2
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800a1fa:	f7fe fd13 	bl	8008c24 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 800a1fe:	4b0a      	ldr	r3, [pc, #40]	; (800a228 <xTaskRemoveFromEventList+0x7c>)
 800a200:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800a202:	681b      	ldr	r3, [r3, #0]
 800a204:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a206:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 800a208:	bf85      	ittet	hi
 800a20a:	4b08      	ldrhi	r3, [pc, #32]	; (800a22c <xTaskRemoveFromEventList+0x80>)
 800a20c:	2001      	movhi	r0, #1
		xReturn = pdFALSE;
 800a20e:	2000      	movls	r0, #0
		xYieldPending = pdTRUE;
 800a210:	6018      	strhi	r0, [r3, #0]
}
 800a212:	b002      	add	sp, #8
 800a214:	bd10      	pop	{r4, pc}
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800a216:	4806      	ldr	r0, [pc, #24]	; (800a230 <xTaskRemoveFromEventList+0x84>)
 800a218:	e7ef      	b.n	800a1fa <xTaskRemoveFromEventList+0x4e>
 800a21a:	bf00      	nop
 800a21c:	20015448 	.word	0x20015448
 800a220:	20015450 	.word	0x20015450
 800a224:	20014fdc 	.word	0x20014fdc
 800a228:	20014fd0 	.word	0x20014fd0
 800a22c:	200154c8 	.word	0x200154c8
 800a230:	20015484 	.word	0x20015484

0800a234 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800a234:	4b03      	ldr	r3, [pc, #12]	; (800a244 <vTaskInternalSetTimeOutState+0x10>)
 800a236:	681b      	ldr	r3, [r3, #0]
 800a238:	6003      	str	r3, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800a23a:	4b03      	ldr	r3, [pc, #12]	; (800a248 <vTaskInternalSetTimeOutState+0x14>)
 800a23c:	681b      	ldr	r3, [r3, #0]
 800a23e:	6043      	str	r3, [r0, #4]
}
 800a240:	4770      	bx	lr
 800a242:	bf00      	nop
 800a244:	20015480 	.word	0x20015480
 800a248:	200154c4 	.word	0x200154c4

0800a24c <xTaskCheckForTimeOut>:
{
 800a24c:	b570      	push	{r4, r5, r6, lr}
 800a24e:	460c      	mov	r4, r1
	configASSERT( pxTimeOut );
 800a250:	4605      	mov	r5, r0
 800a252:	b940      	cbnz	r0, 800a266 <xTaskCheckForTimeOut+0x1a>
 800a254:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a258:	f383 8811 	msr	BASEPRI, r3
 800a25c:	f3bf 8f6f 	isb	sy
 800a260:	f3bf 8f4f 	dsb	sy
 800a264:	e7fe      	b.n	800a264 <xTaskCheckForTimeOut+0x18>
	configASSERT( pxTicksToWait );
 800a266:	b941      	cbnz	r1, 800a27a <xTaskCheckForTimeOut+0x2e>
 800a268:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a26c:	f383 8811 	msr	BASEPRI, r3
 800a270:	f3bf 8f6f 	isb	sy
 800a274:	f3bf 8f4f 	dsb	sy
 800a278:	e7fe      	b.n	800a278 <xTaskCheckForTimeOut+0x2c>
	taskENTER_CRITICAL();
 800a27a:	f7fe fd73 	bl	8008d64 <vPortEnterCritical>
		const TickType_t xConstTickCount = xTickCount;
 800a27e:	4b0f      	ldr	r3, [pc, #60]	; (800a2bc <xTaskCheckForTimeOut+0x70>)
 800a280:	6819      	ldr	r1, [r3, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 800a282:	6823      	ldr	r3, [r4, #0]
 800a284:	1c5a      	adds	r2, r3, #1
 800a286:	d010      	beq.n	800a2aa <xTaskCheckForTimeOut+0x5e>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800a288:	480d      	ldr	r0, [pc, #52]	; (800a2c0 <xTaskCheckForTimeOut+0x74>)
 800a28a:	682e      	ldr	r6, [r5, #0]
 800a28c:	6800      	ldr	r0, [r0, #0]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800a28e:	686a      	ldr	r2, [r5, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800a290:	4286      	cmp	r6, r0
 800a292:	d001      	beq.n	800a298 <xTaskCheckForTimeOut+0x4c>
 800a294:	428a      	cmp	r2, r1
 800a296:	d90f      	bls.n	800a2b8 <xTaskCheckForTimeOut+0x6c>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800a298:	1a88      	subs	r0, r1, r2
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 800a29a:	4283      	cmp	r3, r0
 800a29c:	d90a      	bls.n	800a2b4 <xTaskCheckForTimeOut+0x68>
			*pxTicksToWait -= xElapsedTime;
 800a29e:	1a5b      	subs	r3, r3, r1
 800a2a0:	4413      	add	r3, r2
 800a2a2:	6023      	str	r3, [r4, #0]
			vTaskInternalSetTimeOutState( pxTimeOut );
 800a2a4:	4628      	mov	r0, r5
 800a2a6:	f7ff ffc5 	bl	800a234 <vTaskInternalSetTimeOutState>
				xReturn = pdFALSE;
 800a2aa:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 800a2ac:	f7fe fd7a 	bl	8008da4 <vPortExitCritical>
}
 800a2b0:	4620      	mov	r0, r4
 800a2b2:	bd70      	pop	{r4, r5, r6, pc}
			*pxTicksToWait = 0;
 800a2b4:	2300      	movs	r3, #0
 800a2b6:	6023      	str	r3, [r4, #0]
			xReturn = pdTRUE;
 800a2b8:	2401      	movs	r4, #1
 800a2ba:	e7f7      	b.n	800a2ac <xTaskCheckForTimeOut+0x60>
 800a2bc:	200154c4 	.word	0x200154c4
 800a2c0:	20015480 	.word	0x20015480

0800a2c4 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 800a2c4:	4b01      	ldr	r3, [pc, #4]	; (800a2cc <vTaskMissedYield+0x8>)
 800a2c6:	2201      	movs	r2, #1
 800a2c8:	601a      	str	r2, [r3, #0]
}
 800a2ca:	4770      	bx	lr
 800a2cc:	200154c8 	.word	0x200154c8

0800a2d0 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 800a2d0:	4b05      	ldr	r3, [pc, #20]	; (800a2e8 <xTaskGetSchedulerState+0x18>)
 800a2d2:	681b      	ldr	r3, [r3, #0]
 800a2d4:	b133      	cbz	r3, 800a2e4 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800a2d6:	4b05      	ldr	r3, [pc, #20]	; (800a2ec <xTaskGetSchedulerState+0x1c>)
 800a2d8:	681b      	ldr	r3, [r3, #0]
				xReturn = taskSCHEDULER_SUSPENDED;
 800a2da:	2b00      	cmp	r3, #0
 800a2dc:	bf0c      	ite	eq
 800a2de:	2002      	moveq	r0, #2
 800a2e0:	2000      	movne	r0, #0
 800a2e2:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 800a2e4:	2001      	movs	r0, #1
	}
 800a2e6:	4770      	bx	lr
 800a2e8:	20015498 	.word	0x20015498
 800a2ec:	20015448 	.word	0x20015448

0800a2f0 <xTaskPriorityInherit>:
	{
 800a2f0:	b573      	push	{r0, r1, r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 800a2f2:	4604      	mov	r4, r0
 800a2f4:	b348      	cbz	r0, 800a34a <xTaskPriorityInherit+0x5a>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 800a2f6:	4d1c      	ldr	r5, [pc, #112]	; (800a368 <xTaskPriorityInherit+0x78>)
 800a2f8:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800a2fa:	682a      	ldr	r2, [r5, #0]
 800a2fc:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800a2fe:	4293      	cmp	r3, r2
 800a300:	d229      	bcs.n	800a356 <xTaskPriorityInherit+0x66>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800a302:	6982      	ldr	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800a304:	4e19      	ldr	r6, [pc, #100]	; (800a36c <xTaskPriorityInherit+0x7c>)
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800a306:	2a00      	cmp	r2, #0
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a308:	bfa1      	itttt	ge
 800a30a:	682a      	ldrge	r2, [r5, #0]
 800a30c:	6ad2      	ldrge	r2, [r2, #44]	; 0x2c
 800a30e:	f1c2 0238 	rsbge	r2, r2, #56	; 0x38
 800a312:	6182      	strge	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800a314:	2214      	movs	r2, #20
 800a316:	fb02 6303 	mla	r3, r2, r3, r6
 800a31a:	6942      	ldr	r2, [r0, #20]
 800a31c:	429a      	cmp	r2, r3
 800a31e:	d116      	bne.n	800a34e <xTaskPriorityInherit+0x5e>
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800a320:	1d01      	adds	r1, r0, #4
 800a322:	4608      	mov	r0, r1
 800a324:	9101      	str	r1, [sp, #4]
 800a326:	f7fe fca0 	bl	8008c6a <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800a32a:	682b      	ldr	r3, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800a32c:	4a10      	ldr	r2, [pc, #64]	; (800a370 <xTaskPriorityInherit+0x80>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800a32e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800a330:	6810      	ldr	r0, [r2, #0]
 800a332:	9901      	ldr	r1, [sp, #4]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800a334:	62e3      	str	r3, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800a336:	4283      	cmp	r3, r0
 800a338:	f04f 0014 	mov.w	r0, #20
 800a33c:	fb00 6003 	mla	r0, r0, r3, r6
 800a340:	bf88      	it	hi
 800a342:	6013      	strhi	r3, [r2, #0]
 800a344:	f7fe fc6e 	bl	8008c24 <vListInsertEnd>
				xReturn = pdTRUE;
 800a348:	2001      	movs	r0, #1
	}
 800a34a:	b002      	add	sp, #8
 800a34c:	bd70      	pop	{r4, r5, r6, pc}
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800a34e:	682b      	ldr	r3, [r5, #0]
 800a350:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a352:	62c3      	str	r3, [r0, #44]	; 0x2c
 800a354:	e7f8      	b.n	800a348 <xTaskPriorityInherit+0x58>
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 800a356:	682b      	ldr	r3, [r5, #0]
 800a358:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800a35a:	6adc      	ldr	r4, [r3, #44]	; 0x2c
 800a35c:	42a0      	cmp	r0, r4
 800a35e:	bf2c      	ite	cs
 800a360:	2000      	movcs	r0, #0
 800a362:	2001      	movcc	r0, #1
 800a364:	e7f1      	b.n	800a34a <xTaskPriorityInherit+0x5a>
 800a366:	bf00      	nop
 800a368:	20014fd0 	.word	0x20014fd0
 800a36c:	20014fdc 	.word	0x20014fdc
 800a370:	20015450 	.word	0x20015450

0800a374 <xTaskPriorityDisinherit>:
	{
 800a374:	b513      	push	{r0, r1, r4, lr}
		if( pxMutexHolder != NULL )
 800a376:	b910      	cbnz	r0, 800a37e <xTaskPriorityDisinherit+0xa>
	BaseType_t xReturn = pdFALSE;
 800a378:	2000      	movs	r0, #0
	}
 800a37a:	b002      	add	sp, #8
 800a37c:	bd10      	pop	{r4, pc}
			configASSERT( pxTCB == pxCurrentTCB );
 800a37e:	4b1c      	ldr	r3, [pc, #112]	; (800a3f0 <xTaskPriorityDisinherit+0x7c>)
 800a380:	681c      	ldr	r4, [r3, #0]
 800a382:	4284      	cmp	r4, r0
 800a384:	d008      	beq.n	800a398 <xTaskPriorityDisinherit+0x24>
 800a386:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a38a:	f383 8811 	msr	BASEPRI, r3
 800a38e:	f3bf 8f6f 	isb	sy
 800a392:	f3bf 8f4f 	dsb	sy
 800a396:	e7fe      	b.n	800a396 <xTaskPriorityDisinherit+0x22>
			configASSERT( pxTCB->uxMutexesHeld );
 800a398:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800a39a:	b943      	cbnz	r3, 800a3ae <xTaskPriorityDisinherit+0x3a>
 800a39c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a3a0:	f383 8811 	msr	BASEPRI, r3
 800a3a4:	f3bf 8f6f 	isb	sy
 800a3a8:	f3bf 8f4f 	dsb	sy
 800a3ac:	e7fe      	b.n	800a3ac <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800a3ae:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800a3b0:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 800a3b2:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800a3b4:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 800a3b6:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800a3b8:	d0de      	beq.n	800a378 <xTaskPriorityDisinherit+0x4>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 800a3ba:	2b00      	cmp	r3, #0
 800a3bc:	d1dc      	bne.n	800a378 <xTaskPriorityDisinherit+0x4>
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800a3be:	1d21      	adds	r1, r4, #4
 800a3c0:	4608      	mov	r0, r1
 800a3c2:	9101      	str	r1, [sp, #4]
 800a3c4:	f7fe fc51 	bl	8008c6a <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800a3c8:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
 800a3ca:	9901      	ldr	r1, [sp, #4]
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800a3cc:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a3ce:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
 800a3d2:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 800a3d4:	4a07      	ldr	r2, [pc, #28]	; (800a3f4 <xTaskPriorityDisinherit+0x80>)
 800a3d6:	6810      	ldr	r0, [r2, #0]
 800a3d8:	4283      	cmp	r3, r0
 800a3da:	bf88      	it	hi
 800a3dc:	6013      	strhi	r3, [r2, #0]
 800a3de:	4a06      	ldr	r2, [pc, #24]	; (800a3f8 <xTaskPriorityDisinherit+0x84>)
 800a3e0:	2014      	movs	r0, #20
 800a3e2:	fb00 2003 	mla	r0, r0, r3, r2
 800a3e6:	f7fe fc1d 	bl	8008c24 <vListInsertEnd>
					xReturn = pdTRUE;
 800a3ea:	2001      	movs	r0, #1
		return xReturn;
 800a3ec:	e7c5      	b.n	800a37a <xTaskPriorityDisinherit+0x6>
 800a3ee:	bf00      	nop
 800a3f0:	20014fd0 	.word	0x20014fd0
 800a3f4:	20015450 	.word	0x20015450
 800a3f8:	20014fdc 	.word	0x20014fdc

0800a3fc <vTaskPriorityDisinheritAfterTimeout>:
	{
 800a3fc:	b537      	push	{r0, r1, r2, r4, r5, lr}
		if( pxMutexHolder != NULL )
 800a3fe:	4604      	mov	r4, r0
 800a400:	2800      	cmp	r0, #0
 800a402:	d044      	beq.n	800a48e <vTaskPriorityDisinheritAfterTimeout+0x92>
			configASSERT( pxTCB->uxMutexesHeld );
 800a404:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800a406:	b942      	cbnz	r2, 800a41a <vTaskPriorityDisinheritAfterTimeout+0x1e>
 800a408:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a40c:	f383 8811 	msr	BASEPRI, r3
 800a410:	f3bf 8f6f 	isb	sy
 800a414:	f3bf 8f4f 	dsb	sy
 800a418:	e7fe      	b.n	800a418 <vTaskPriorityDisinheritAfterTimeout+0x1c>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 800a41a:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 800a41c:	4299      	cmp	r1, r3
 800a41e:	bf38      	it	cc
 800a420:	4619      	movcc	r1, r3
			if( pxTCB->uxPriority != uxPriorityToUse )
 800a422:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800a424:	428b      	cmp	r3, r1
 800a426:	d032      	beq.n	800a48e <vTaskPriorityDisinheritAfterTimeout+0x92>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 800a428:	2a01      	cmp	r2, #1
 800a42a:	d130      	bne.n	800a48e <vTaskPriorityDisinheritAfterTimeout+0x92>
					configASSERT( pxTCB != pxCurrentTCB );
 800a42c:	4a19      	ldr	r2, [pc, #100]	; (800a494 <vTaskPriorityDisinheritAfterTimeout+0x98>)
 800a42e:	6812      	ldr	r2, [r2, #0]
 800a430:	4282      	cmp	r2, r0
 800a432:	d108      	bne.n	800a446 <vTaskPriorityDisinheritAfterTimeout+0x4a>
 800a434:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a438:	f383 8811 	msr	BASEPRI, r3
 800a43c:	f3bf 8f6f 	isb	sy
 800a440:	f3bf 8f4f 	dsb	sy
 800a444:	e7fe      	b.n	800a444 <vTaskPriorityDisinheritAfterTimeout+0x48>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800a446:	6982      	ldr	r2, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800a448:	4d13      	ldr	r5, [pc, #76]	; (800a498 <vTaskPriorityDisinheritAfterTimeout+0x9c>)
					pxTCB->uxPriority = uxPriorityToUse;
 800a44a:	62c1      	str	r1, [r0, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800a44c:	2a00      	cmp	r2, #0
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800a44e:	f04f 0214 	mov.w	r2, #20
 800a452:	fb02 5303 	mla	r3, r2, r3, r5
 800a456:	6942      	ldr	r2, [r0, #20]
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a458:	bfa4      	itt	ge
 800a45a:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
 800a45e:	6181      	strge	r1, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800a460:	429a      	cmp	r2, r3
 800a462:	d114      	bne.n	800a48e <vTaskPriorityDisinheritAfterTimeout+0x92>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800a464:	1d01      	adds	r1, r0, #4
 800a466:	4608      	mov	r0, r1
 800a468:	9101      	str	r1, [sp, #4]
 800a46a:	f7fe fbfe 	bl	8008c6a <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 800a46e:	4a0b      	ldr	r2, [pc, #44]	; (800a49c <vTaskPriorityDisinheritAfterTimeout+0xa0>)
 800a470:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800a472:	6810      	ldr	r0, [r2, #0]
 800a474:	9901      	ldr	r1, [sp, #4]
 800a476:	4283      	cmp	r3, r0
 800a478:	f04f 0014 	mov.w	r0, #20
 800a47c:	fb00 5003 	mla	r0, r0, r3, r5
 800a480:	bf88      	it	hi
 800a482:	6013      	strhi	r3, [r2, #0]
	}
 800a484:	b003      	add	sp, #12
 800a486:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
 800a48a:	f7fe bbcb 	b.w	8008c24 <vListInsertEnd>
	}
 800a48e:	b003      	add	sp, #12
 800a490:	bd30      	pop	{r4, r5, pc}
 800a492:	bf00      	nop
 800a494:	20014fd0 	.word	0x20014fd0
 800a498:	20014fdc 	.word	0x20014fdc
 800a49c:	20015450 	.word	0x20015450

0800a4a0 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 800a4a0:	4b04      	ldr	r3, [pc, #16]	; (800a4b4 <pvTaskIncrementMutexHeldCount+0x14>)
 800a4a2:	681a      	ldr	r2, [r3, #0]
 800a4a4:	b11a      	cbz	r2, 800a4ae <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 800a4a6:	6819      	ldr	r1, [r3, #0]
 800a4a8:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 800a4aa:	3201      	adds	r2, #1
 800a4ac:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 800a4ae:	6818      	ldr	r0, [r3, #0]
	}
 800a4b0:	4770      	bx	lr
 800a4b2:	bf00      	nop
 800a4b4:	20014fd0 	.word	0x20014fd0

0800a4b8 <prvCheckForValidListAndQueue>:
	pxOverflowTimerList = pxTemp;
}
/*-----------------------------------------------------------*/

static void prvCheckForValidListAndQueue( void )
{
 800a4b8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 800a4ba:	4c11      	ldr	r4, [pc, #68]	; (800a500 <prvCheckForValidListAndQueue+0x48>)
	taskENTER_CRITICAL();
 800a4bc:	f7fe fc52 	bl	8008d64 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 800a4c0:	6825      	ldr	r5, [r4, #0]
 800a4c2:	b9bd      	cbnz	r5, 800a4f4 <prvCheckForValidListAndQueue+0x3c>
		{
			vListInitialise( &xActiveTimerList1 );
 800a4c4:	4f0f      	ldr	r7, [pc, #60]	; (800a504 <prvCheckForValidListAndQueue+0x4c>)
			vListInitialise( &xActiveTimerList2 );
 800a4c6:	4e10      	ldr	r6, [pc, #64]	; (800a508 <prvCheckForValidListAndQueue+0x50>)
			vListInitialise( &xActiveTimerList1 );
 800a4c8:	4638      	mov	r0, r7
 800a4ca:	f7fe fb9d 	bl	8008c08 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 800a4ce:	4630      	mov	r0, r6
 800a4d0:	f7fe fb9a 	bl	8008c08 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 800a4d4:	4b0d      	ldr	r3, [pc, #52]	; (800a50c <prvCheckForValidListAndQueue+0x54>)
				/* The timer queue is allocated statically in case
				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800a4d6:	4a0e      	ldr	r2, [pc, #56]	; (800a510 <prvCheckForValidListAndQueue+0x58>)
			pxCurrentTimerList = &xActiveTimerList1;
 800a4d8:	601f      	str	r7, [r3, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 800a4da:	4b0e      	ldr	r3, [pc, #56]	; (800a514 <prvCheckForValidListAndQueue+0x5c>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800a4dc:	2110      	movs	r1, #16
			pxOverflowTimerList = &xActiveTimerList2;
 800a4de:	601e      	str	r6, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800a4e0:	200a      	movs	r0, #10
 800a4e2:	4b0d      	ldr	r3, [pc, #52]	; (800a518 <prvCheckForValidListAndQueue+0x60>)
 800a4e4:	9500      	str	r5, [sp, #0]
 800a4e6:	f7fe fe4e 	bl	8009186 <xQueueGenericCreateStatic>
 800a4ea:	6020      	str	r0, [r4, #0]
			}
			#endif

			#if ( configQUEUE_REGISTRY_SIZE > 0 )
			{
				if( xTimerQueue != NULL )
 800a4ec:	b110      	cbz	r0, 800a4f4 <prvCheckForValidListAndQueue+0x3c>
				{
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 800a4ee:	490b      	ldr	r1, [pc, #44]	; (800a51c <prvCheckForValidListAndQueue+0x64>)
 800a4f0:	f7ff fa18 	bl	8009924 <vQueueAddToRegistry>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
}
 800a4f4:	b003      	add	sp, #12
 800a4f6:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	taskEXIT_CRITICAL();
 800a4fa:	f7fe bc53 	b.w	8008da4 <vPortExitCritical>
 800a4fe:	bf00      	nop
 800a500:	200155f0 	.word	0x200155f0
 800a504:	20015574 	.word	0x20015574
 800a508:	20015588 	.word	0x20015588
 800a50c:	200154cc 	.word	0x200154cc
 800a510:	200154d4 	.word	0x200154d4
 800a514:	200154d0 	.word	0x200154d0
 800a518:	200155a0 	.word	0x200155a0
 800a51c:	08023759 	.word	0x08023759

0800a520 <prvInsertTimerInActiveList>:
	if( xNextExpiryTime <= xTimeNow )
 800a520:	4291      	cmp	r1, r2
{
 800a522:	b508      	push	{r3, lr}
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800a524:	6041      	str	r1, [r0, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800a526:	6100      	str	r0, [r0, #16]
	if( xNextExpiryTime <= xTimeNow )
 800a528:	d80a      	bhi.n	800a540 <prvInsertTimerInActiveList+0x20>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a52a:	1ad2      	subs	r2, r2, r3
 800a52c:	6983      	ldr	r3, [r0, #24]
 800a52e:	429a      	cmp	r2, r3
 800a530:	d20d      	bcs.n	800a54e <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 800a532:	4b08      	ldr	r3, [pc, #32]	; (800a554 <prvInsertTimerInActiveList+0x34>)
 800a534:	1d01      	adds	r1, r0, #4
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800a536:	6818      	ldr	r0, [r3, #0]
 800a538:	f7fe fb80 	bl	8008c3c <vListInsert>
BaseType_t xProcessTimerNow = pdFALSE;
 800a53c:	2000      	movs	r0, #0
}
 800a53e:	bd08      	pop	{r3, pc}
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 800a540:	429a      	cmp	r2, r3
 800a542:	d201      	bcs.n	800a548 <prvInsertTimerInActiveList+0x28>
 800a544:	4299      	cmp	r1, r3
 800a546:	d202      	bcs.n	800a54e <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800a548:	4b03      	ldr	r3, [pc, #12]	; (800a558 <prvInsertTimerInActiveList+0x38>)
 800a54a:	1d01      	adds	r1, r0, #4
 800a54c:	e7f3      	b.n	800a536 <prvInsertTimerInActiveList+0x16>
			xProcessTimerNow = pdTRUE;
 800a54e:	2001      	movs	r0, #1
	return xProcessTimerNow;
 800a550:	e7f5      	b.n	800a53e <prvInsertTimerInActiveList+0x1e>
 800a552:	bf00      	nop
 800a554:	200154d0 	.word	0x200154d0
 800a558:	200154cc 	.word	0x200154cc

0800a55c <xTimerCreateTimerTask>:
{
 800a55c:	b510      	push	{r4, lr}
 800a55e:	b088      	sub	sp, #32
	prvCheckForValidListAndQueue();
 800a560:	f7ff ffaa 	bl	800a4b8 <prvCheckForValidListAndQueue>
	if( xTimerQueue != NULL )
 800a564:	4b12      	ldr	r3, [pc, #72]	; (800a5b0 <xTimerCreateTimerTask+0x54>)
 800a566:	681b      	ldr	r3, [r3, #0]
 800a568:	b1b3      	cbz	r3, 800a598 <xTimerCreateTimerTask+0x3c>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 800a56a:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800a56c:	aa07      	add	r2, sp, #28
 800a56e:	a906      	add	r1, sp, #24
 800a570:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 800a572:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800a576:	f7fe fa4d 	bl	8008a14 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 800a57a:	9b05      	ldr	r3, [sp, #20]
 800a57c:	9302      	str	r3, [sp, #8]
 800a57e:	9b06      	ldr	r3, [sp, #24]
 800a580:	9301      	str	r3, [sp, #4]
 800a582:	2302      	movs	r3, #2
 800a584:	9300      	str	r3, [sp, #0]
 800a586:	9a07      	ldr	r2, [sp, #28]
 800a588:	490a      	ldr	r1, [pc, #40]	; (800a5b4 <xTimerCreateTimerTask+0x58>)
 800a58a:	480b      	ldr	r0, [pc, #44]	; (800a5b8 <xTimerCreateTimerTask+0x5c>)
 800a58c:	4623      	mov	r3, r4
 800a58e:	f7ff fba3 	bl	8009cd8 <xTaskCreateStatic>
 800a592:	4b0a      	ldr	r3, [pc, #40]	; (800a5bc <xTimerCreateTimerTask+0x60>)
 800a594:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 800a596:	b940      	cbnz	r0, 800a5aa <xTimerCreateTimerTask+0x4e>
 800a598:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a59c:	f383 8811 	msr	BASEPRI, r3
 800a5a0:	f3bf 8f6f 	isb	sy
 800a5a4:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 800a5a8:	e7fe      	b.n	800a5a8 <xTimerCreateTimerTask+0x4c>
}
 800a5aa:	2001      	movs	r0, #1
 800a5ac:	b008      	add	sp, #32
 800a5ae:	bd10      	pop	{r4, pc}
 800a5b0:	200155f0 	.word	0x200155f0
 800a5b4:	0802375e 	.word	0x0802375e
 800a5b8:	0800a6c5 	.word	0x0800a6c5
 800a5bc:	200155f4 	.word	0x200155f4

0800a5c0 <xTimerGenericCommand>:
{
 800a5c0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800a5c2:	4616      	mov	r6, r2
	configASSERT( xTimer );
 800a5c4:	4604      	mov	r4, r0
{
 800a5c6:	461a      	mov	r2, r3
	configASSERT( xTimer );
 800a5c8:	b940      	cbnz	r0, 800a5dc <xTimerGenericCommand+0x1c>
 800a5ca:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a5ce:	f383 8811 	msr	BASEPRI, r3
 800a5d2:	f3bf 8f6f 	isb	sy
 800a5d6:	f3bf 8f4f 	dsb	sy
 800a5da:	e7fe      	b.n	800a5da <xTimerGenericCommand+0x1a>
	if( xTimerQueue != NULL )
 800a5dc:	4d0d      	ldr	r5, [pc, #52]	; (800a614 <xTimerGenericCommand+0x54>)
 800a5de:	6828      	ldr	r0, [r5, #0]
 800a5e0:	b180      	cbz	r0, 800a604 <xTimerGenericCommand+0x44>
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800a5e2:	2905      	cmp	r1, #5
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 800a5e4:	e9cd 1600 	strd	r1, r6, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800a5e8:	9402      	str	r4, [sp, #8]
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800a5ea:	dc0d      	bgt.n	800a608 <xTimerGenericCommand+0x48>
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800a5ec:	f7ff fe70 	bl	800a2d0 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800a5f0:	2300      	movs	r3, #0
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800a5f2:	2802      	cmp	r0, #2
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800a5f4:	bf08      	it	eq
 800a5f6:	9a08      	ldreq	r2, [sp, #32]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 800a5f8:	6828      	ldr	r0, [r5, #0]
 800a5fa:	bf18      	it	ne
 800a5fc:	461a      	movne	r2, r3
 800a5fe:	4669      	mov	r1, sp
 800a600:	f7fe fe76 	bl	80092f0 <xQueueGenericSend>
}
 800a604:	b004      	add	sp, #16
 800a606:	bd70      	pop	{r4, r5, r6, pc}
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 800a608:	2300      	movs	r3, #0
 800a60a:	4669      	mov	r1, sp
 800a60c:	f7fe ff23 	bl	8009456 <xQueueGenericSendFromISR>
 800a610:	e7f8      	b.n	800a604 <xTimerGenericCommand+0x44>
 800a612:	bf00      	nop
 800a614:	200155f0 	.word	0x200155f0

0800a618 <prvSampleTimeNow>:
{
 800a618:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
	if( xTimeNow < xLastTime )
 800a61c:	f8df 80a0 	ldr.w	r8, [pc, #160]	; 800a6c0 <prvSampleTimeNow+0xa8>
{
 800a620:	4606      	mov	r6, r0
	xTimeNow = xTaskGetTickCount();
 800a622:	f7ff fc17 	bl	8009e54 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800a626:	f8d8 3000 	ldr.w	r3, [r8]
 800a62a:	4283      	cmp	r3, r0
	xTimeNow = xTaskGetTickCount();
 800a62c:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
 800a62e:	d940      	bls.n	800a6b2 <prvSampleTimeNow+0x9a>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800a630:	4f21      	ldr	r7, [pc, #132]	; (800a6b8 <prvSampleTimeNow+0xa0>)
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800a632:	f04f 0900 	mov.w	r9, #0
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800a636:	683b      	ldr	r3, [r7, #0]
 800a638:	681a      	ldr	r2, [r3, #0]
 800a63a:	b95a      	cbnz	r2, 800a654 <prvSampleTimeNow+0x3c>
	pxCurrentTimerList = pxOverflowTimerList;
 800a63c:	4a1f      	ldr	r2, [pc, #124]	; (800a6bc <prvSampleTimeNow+0xa4>)
 800a63e:	6811      	ldr	r1, [r2, #0]
 800a640:	6039      	str	r1, [r7, #0]
	pxOverflowTimerList = pxTemp;
 800a642:	6013      	str	r3, [r2, #0]
		*pxTimerListsWereSwitched = pdTRUE;
 800a644:	2301      	movs	r3, #1
}
 800a646:	4628      	mov	r0, r5
		*pxTimerListsWereSwitched = pdFALSE;
 800a648:	6033      	str	r3, [r6, #0]
	xLastTime = xTimeNow;
 800a64a:	f8c8 5000 	str.w	r5, [r8]
}
 800a64e:	b004      	add	sp, #16
 800a650:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800a654:	68db      	ldr	r3, [r3, #12]
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a656:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800a658:	f8d3 a000 	ldr.w	sl, [r3]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800a65c:	1d21      	adds	r1, r4, #4
 800a65e:	4608      	mov	r0, r1
 800a660:	9103      	str	r1, [sp, #12]
 800a662:	f7fe fb02 	bl	8008c6a <uxListRemove>
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800a666:	6a23      	ldr	r3, [r4, #32]
 800a668:	4620      	mov	r0, r4
 800a66a:	4798      	blx	r3
		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800a66c:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800a670:	9903      	ldr	r1, [sp, #12]
 800a672:	f013 0f04 	tst.w	r3, #4
 800a676:	d0de      	beq.n	800a636 <prvSampleTimeNow+0x1e>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 800a678:	69a3      	ldr	r3, [r4, #24]
 800a67a:	4453      	add	r3, sl
			if( xReloadTime > xNextExpireTime )
 800a67c:	459a      	cmp	sl, r3
 800a67e:	d205      	bcs.n	800a68c <prvSampleTimeNow+0x74>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800a680:	6838      	ldr	r0, [r7, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 800a682:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800a684:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800a686:	f7fe fad9 	bl	8008c3c <vListInsert>
 800a68a:	e7d4      	b.n	800a636 <prvSampleTimeNow+0x1e>
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800a68c:	2300      	movs	r3, #0
 800a68e:	f8cd 9000 	str.w	r9, [sp]
 800a692:	4652      	mov	r2, sl
 800a694:	4619      	mov	r1, r3
 800a696:	4620      	mov	r0, r4
 800a698:	f7ff ff92 	bl	800a5c0 <xTimerGenericCommand>
				configASSERT( xResult );
 800a69c:	2800      	cmp	r0, #0
 800a69e:	d1ca      	bne.n	800a636 <prvSampleTimeNow+0x1e>
 800a6a0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a6a4:	f383 8811 	msr	BASEPRI, r3
 800a6a8:	f3bf 8f6f 	isb	sy
 800a6ac:	f3bf 8f4f 	dsb	sy
 800a6b0:	e7fe      	b.n	800a6b0 <prvSampleTimeNow+0x98>
		*pxTimerListsWereSwitched = pdFALSE;
 800a6b2:	2300      	movs	r3, #0
 800a6b4:	e7c7      	b.n	800a646 <prvSampleTimeNow+0x2e>
 800a6b6:	bf00      	nop
 800a6b8:	200154cc 	.word	0x200154cc
 800a6bc:	200154d0 	.word	0x200154d0
 800a6c0:	2001559c 	.word	0x2001559c

0800a6c4 <prvTimerTask>:
{
 800a6c4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800a6c8:	4d6e      	ldr	r5, [pc, #440]	; (800a884 <prvTimerTask+0x1c0>)
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800a6ca:	4e6f      	ldr	r6, [pc, #444]	; (800a888 <prvTimerTask+0x1c4>)
{
 800a6cc:	b089      	sub	sp, #36	; 0x24
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800a6ce:	682b      	ldr	r3, [r5, #0]
 800a6d0:	f8d3 8000 	ldr.w	r8, [r3]
 800a6d4:	f1b8 0f00 	cmp.w	r8, #0
 800a6d8:	d035      	beq.n	800a746 <prvTimerTask+0x82>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800a6da:	68db      	ldr	r3, [r3, #12]
 800a6dc:	f8d3 8000 	ldr.w	r8, [r3]
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800a6e0:	2400      	movs	r4, #0
	vTaskSuspendAll();
 800a6e2:	f7ff fbaf 	bl	8009e44 <vTaskSuspendAll>
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a6e6:	a804      	add	r0, sp, #16
 800a6e8:	f7ff ff96 	bl	800a618 <prvSampleTimeNow>
		if( xTimerListsWereSwitched == pdFALSE )
 800a6ec:	9b04      	ldr	r3, [sp, #16]
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a6ee:	4681      	mov	r9, r0
		if( xTimerListsWereSwitched == pdFALSE )
 800a6f0:	2b00      	cmp	r3, #0
 800a6f2:	d169      	bne.n	800a7c8 <prvTimerTask+0x104>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800a6f4:	2c00      	cmp	r4, #0
 800a6f6:	d14c      	bne.n	800a792 <prvTimerTask+0xce>
 800a6f8:	4540      	cmp	r0, r8
 800a6fa:	d350      	bcc.n	800a79e <prvTimerTask+0xda>
				( void ) xTaskResumeAll();
 800a6fc:	f7ff fc46 	bl	8009f8c <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a700:	682b      	ldr	r3, [r5, #0]
 800a702:	68db      	ldr	r3, [r3, #12]
 800a704:	68df      	ldr	r7, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800a706:	1d38      	adds	r0, r7, #4
 800a708:	f7fe faaf 	bl	8008c6a <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800a70c:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800a710:	0758      	lsls	r0, r3, #29
 800a712:	d51a      	bpl.n	800a74a <prvTimerTask+0x86>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 800a714:	69b9      	ldr	r1, [r7, #24]
 800a716:	4643      	mov	r3, r8
 800a718:	464a      	mov	r2, r9
 800a71a:	4441      	add	r1, r8
 800a71c:	4638      	mov	r0, r7
 800a71e:	f7ff feff 	bl	800a520 <prvInsertTimerInActiveList>
 800a722:	b1b0      	cbz	r0, 800a752 <prvTimerTask+0x8e>
			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800a724:	9400      	str	r4, [sp, #0]
 800a726:	4623      	mov	r3, r4
 800a728:	4642      	mov	r2, r8
 800a72a:	4621      	mov	r1, r4
 800a72c:	4638      	mov	r0, r7
 800a72e:	f7ff ff47 	bl	800a5c0 <xTimerGenericCommand>
			configASSERT( xResult );
 800a732:	b970      	cbnz	r0, 800a752 <prvTimerTask+0x8e>
 800a734:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a738:	f383 8811 	msr	BASEPRI, r3
 800a73c:	f3bf 8f6f 	isb	sy
 800a740:	f3bf 8f4f 	dsb	sy
 800a744:	e7fe      	b.n	800a744 <prvTimerTask+0x80>
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800a746:	2401      	movs	r4, #1
 800a748:	e7cb      	b.n	800a6e2 <prvTimerTask+0x1e>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800a74a:	f023 0301 	bic.w	r3, r3, #1
 800a74e:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800a752:	6a3b      	ldr	r3, [r7, #32]
 800a754:	4638      	mov	r0, r7
 800a756:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 800a758:	6830      	ldr	r0, [r6, #0]
 800a75a:	2200      	movs	r2, #0
 800a75c:	a904      	add	r1, sp, #16
 800a75e:	f7fe ff2f 	bl	80095c0 <xQueueReceive>
 800a762:	2800      	cmp	r0, #0
 800a764:	d0b3      	beq.n	800a6ce <prvTimerTask+0xa>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800a766:	9b04      	ldr	r3, [sp, #16]
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800a768:	9806      	ldr	r0, [sp, #24]
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800a76a:	2b00      	cmp	r3, #0
 800a76c:	db2f      	blt.n	800a7ce <prvTimerTask+0x10a>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 800a76e:	9c06      	ldr	r4, [sp, #24]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 800a770:	6963      	ldr	r3, [r4, #20]
 800a772:	2b00      	cmp	r3, #0
 800a774:	d132      	bne.n	800a7dc <prvTimerTask+0x118>
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a776:	a803      	add	r0, sp, #12
 800a778:	f7ff ff4e 	bl	800a618 <prvSampleTimeNow>
			switch( xMessage.xMessageID )
 800a77c:	9b04      	ldr	r3, [sp, #16]
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a77e:	4602      	mov	r2, r0
			switch( xMessage.xMessageID )
 800a780:	2b09      	cmp	r3, #9
 800a782:	d8e9      	bhi.n	800a758 <prvTimerTask+0x94>
 800a784:	e8df f003 	tbb	[pc, r3]
 800a788:	572e2e2e 	.word	0x572e2e2e
 800a78c:	2e2e765e 	.word	0x2e2e765e
 800a790:	5e57      	.short	0x5e57
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 800a792:	4b3e      	ldr	r3, [pc, #248]	; (800a88c <prvTimerTask+0x1c8>)
 800a794:	681b      	ldr	r3, [r3, #0]
 800a796:	681c      	ldr	r4, [r3, #0]
 800a798:	fab4 f484 	clz	r4, r4
 800a79c:	0964      	lsrs	r4, r4, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800a79e:	6830      	ldr	r0, [r6, #0]
 800a7a0:	4622      	mov	r2, r4
 800a7a2:	eba8 0109 	sub.w	r1, r8, r9
 800a7a6:	f7ff f8fa 	bl	800999e <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 800a7aa:	f7ff fbef 	bl	8009f8c <xTaskResumeAll>
 800a7ae:	2800      	cmp	r0, #0
 800a7b0:	d1d2      	bne.n	800a758 <prvTimerTask+0x94>
					portYIELD_WITHIN_API();
 800a7b2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800a7b6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800a7ba:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800a7be:	f3bf 8f4f 	dsb	sy
 800a7c2:	f3bf 8f6f 	isb	sy
 800a7c6:	e7c7      	b.n	800a758 <prvTimerTask+0x94>
			( void ) xTaskResumeAll();
 800a7c8:	f7ff fbe0 	bl	8009f8c <xTaskResumeAll>
}
 800a7cc:	e7c4      	b.n	800a758 <prvTimerTask+0x94>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800a7ce:	9b05      	ldr	r3, [sp, #20]
 800a7d0:	9907      	ldr	r1, [sp, #28]
 800a7d2:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 800a7d4:	9b04      	ldr	r3, [sp, #16]
 800a7d6:	2b00      	cmp	r3, #0
 800a7d8:	dbbe      	blt.n	800a758 <prvTimerTask+0x94>
 800a7da:	e7c8      	b.n	800a76e <prvTimerTask+0xaa>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800a7dc:	1d20      	adds	r0, r4, #4
 800a7de:	f7fe fa44 	bl	8008c6a <uxListRemove>
 800a7e2:	e7c8      	b.n	800a776 <prvTimerTask+0xb2>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800a7e4:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800a7e8:	69a1      	ldr	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800a7ea:	f043 0301 	orr.w	r3, r3, #1
 800a7ee:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800a7f2:	9b05      	ldr	r3, [sp, #20]
 800a7f4:	4620      	mov	r0, r4
 800a7f6:	4419      	add	r1, r3
 800a7f8:	f7ff fe92 	bl	800a520 <prvInsertTimerInActiveList>
 800a7fc:	2800      	cmp	r0, #0
 800a7fe:	d0ab      	beq.n	800a758 <prvTimerTask+0x94>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800a800:	6a23      	ldr	r3, [r4, #32]
 800a802:	4620      	mov	r0, r4
 800a804:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800a806:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800a80a:	0759      	lsls	r1, r3, #29
 800a80c:	d5a4      	bpl.n	800a758 <prvTimerTask+0x94>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 800a80e:	69a2      	ldr	r2, [r4, #24]
 800a810:	9905      	ldr	r1, [sp, #20]
 800a812:	2300      	movs	r3, #0
 800a814:	440a      	add	r2, r1
 800a816:	9300      	str	r3, [sp, #0]
 800a818:	4619      	mov	r1, r3
 800a81a:	4620      	mov	r0, r4
 800a81c:	f7ff fed0 	bl	800a5c0 <xTimerGenericCommand>
							configASSERT( xResult );
 800a820:	2800      	cmp	r0, #0
 800a822:	d199      	bne.n	800a758 <prvTimerTask+0x94>
 800a824:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a828:	f383 8811 	msr	BASEPRI, r3
 800a82c:	f3bf 8f6f 	isb	sy
 800a830:	f3bf 8f4f 	dsb	sy
 800a834:	e7fe      	b.n	800a834 <prvTimerTask+0x170>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800a836:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800a83a:	f023 0301 	bic.w	r3, r3, #1
 800a83e:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
 800a842:	e789      	b.n	800a758 <prvTimerTask+0x94>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800a844:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800a848:	f043 0301 	orr.w	r3, r3, #1
 800a84c:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 800a850:	9905      	ldr	r1, [sp, #20]
 800a852:	61a1      	str	r1, [r4, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 800a854:	b941      	cbnz	r1, 800a868 <prvTimerTask+0x1a4>
 800a856:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a85a:	f383 8811 	msr	BASEPRI, r3
 800a85e:	f3bf 8f6f 	isb	sy
 800a862:	f3bf 8f4f 	dsb	sy
 800a866:	e7fe      	b.n	800a866 <prvTimerTask+0x1a2>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 800a868:	4603      	mov	r3, r0
 800a86a:	4401      	add	r1, r0
 800a86c:	4620      	mov	r0, r4
 800a86e:	f7ff fe57 	bl	800a520 <prvInsertTimerInActiveList>
					break;
 800a872:	e771      	b.n	800a758 <prvTimerTask+0x94>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 800a874:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800a878:	079a      	lsls	r2, r3, #30
 800a87a:	d4de      	bmi.n	800a83a <prvTimerTask+0x176>
							vPortFree( pxTimer );
 800a87c:	4620      	mov	r0, r4
 800a87e:	f7fe f98b 	bl	8008b98 <vPortFree>
 800a882:	e769      	b.n	800a758 <prvTimerTask+0x94>
 800a884:	200154cc 	.word	0x200154cc
 800a888:	200155f0 	.word	0x200155f0
 800a88c:	200154d0 	.word	0x200154d0

0800a890 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 800a890:	8880      	ldrh	r0, [r0, #4]
 800a892:	4770      	bx	lr

0800a894 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 800a894:	b570      	push	{r4, r5, r6, lr}
 800a896:	6803      	ldr	r3, [r0, #0]
 800a898:	4605      	mov	r5, r0
 800a89a:	460c      	mov	r4, r1
 800a89c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a89e:	2100      	movs	r1, #0
 800a8a0:	4798      	blx	r3
 800a8a2:	682b      	ldr	r3, [r5, #0]
 800a8a4:	4606      	mov	r6, r0
 800a8a6:	6a1b      	ldr	r3, [r3, #32]
 800a8a8:	4628      	mov	r0, r5
 800a8aa:	4798      	blx	r3
 800a8ac:	1ba4      	subs	r4, r4, r6
 800a8ae:	b2a4      	uxth	r4, r4
 800a8b0:	fbb4 f0f0 	udiv	r0, r4, r0
 800a8b4:	bd70      	pop	{r4, r5, r6, pc}

0800a8b6 <_ZN8touchgfx17AbstractPartition5clearEv>:
 800a8b6:	2300      	movs	r3, #0
 800a8b8:	8083      	strh	r3, [r0, #4]
 800a8ba:	4770      	bx	lr

0800a8bc <_ZN8touchgfx17AbstractPartition8allocateEt>:
 800a8bc:	b510      	push	{r4, lr}
 800a8be:	6803      	ldr	r3, [r0, #0]
 800a8c0:	8881      	ldrh	r1, [r0, #4]
 800a8c2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a8c4:	4604      	mov	r4, r0
 800a8c6:	4798      	blx	r3
 800a8c8:	88a3      	ldrh	r3, [r4, #4]
 800a8ca:	3301      	adds	r3, #1
 800a8cc:	80a3      	strh	r3, [r4, #4]
 800a8ce:	bd10      	pop	{r4, pc}

0800a8d0 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 800a8d0:	6803      	ldr	r3, [r0, #0]
 800a8d2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a8d4:	4718      	bx	r3

0800a8d6 <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800a8d6:	4770      	bx	lr

0800a8d8 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800a8d8:	4a02      	ldr	r2, [pc, #8]	; (800a8e4 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800a8da:	6002      	str	r2, [r0, #0]
 800a8dc:	2200      	movs	r2, #0
 800a8de:	8082      	strh	r2, [r0, #4]
 800a8e0:	4770      	bx	lr
 800a8e2:	bf00      	nop
 800a8e4:	08023770 	.word	0x08023770

0800a8e8 <_ZNK8touchgfx11ModalWindow18getBackgroundWidthEv>:
 800a8e8:	f8b0 008c 	ldrh.w	r0, [r0, #140]	; 0x8c
 800a8ec:	4770      	bx	lr

0800a8ee <_ZNK8touchgfx11ModalWindow19getBackgroundHeightEv>:
 800a8ee:	f8b0 008e 	ldrh.w	r0, [r0, #142]	; 0x8e
 800a8f2:	4770      	bx	lr

0800a8f4 <_ZNK8touchgfx11ModalWindow13getShadeAlphaEv>:
 800a8f4:	f890 0052 	ldrb.w	r0, [r0, #82]	; 0x52
 800a8f8:	4770      	bx	lr

0800a8fa <_ZNK8touchgfx11ModalWindow13getShadeColorEv>:
 800a8fa:	6d40      	ldr	r0, [r0, #84]	; 0x54
 800a8fc:	4770      	bx	lr

0800a8fe <_ZN8touchgfx11ModalWindow4showEv>:
 800a8fe:	2201      	movs	r2, #1
 800a900:	6803      	ldr	r3, [r0, #0]
 800a902:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
 800a906:	695b      	ldr	r3, [r3, #20]
 800a908:	4718      	bx	r3

0800a90a <_ZN8touchgfx11ModalWindow4hideEv>:
 800a90a:	b510      	push	{r4, lr}
 800a90c:	6803      	ldr	r3, [r0, #0]
 800a90e:	4604      	mov	r4, r0
 800a910:	695b      	ldr	r3, [r3, #20]
 800a912:	4798      	blx	r3
 800a914:	2300      	movs	r3, #0
 800a916:	f884 3025 	strb.w	r3, [r4, #37]	; 0x25
 800a91a:	bd10      	pop	{r4, pc}

0800a91c <_ZN8touchgfx11ModalWindowD1Ev>:
 800a91c:	4770      	bx	lr

0800a91e <_ZN8touchgfx11ModalWindow3addERNS_8DrawableE>:
 800a91e:	3058      	adds	r0, #88	; 0x58
 800a920:	f000 b904 	b.w	800ab2c <_ZN8touchgfx9Container3addERNS_8DrawableE>

0800a924 <_ZN8touchgfx11ModalWindow13setShadeColorENS_9colortypeE>:
 800a924:	6541      	str	r1, [r0, #84]	; 0x54
 800a926:	302c      	adds	r0, #44	; 0x2c
 800a928:	f007 bbb9 	b.w	801209e <_ZNK8touchgfx8Drawable10invalidateEv>

0800a92c <_ZN8touchgfx11ModalWindow13setShadeAlphaEh>:
 800a92c:	f880 1052 	strb.w	r1, [r0, #82]	; 0x52
 800a930:	302c      	adds	r0, #44	; 0x2c
 800a932:	f007 bbb4 	b.w	801209e <_ZNK8touchgfx8Drawable10invalidateEv>

0800a936 <_ZN8touchgfx11ModalWindow6removeERNS_8DrawableE>:
 800a936:	3058      	adds	r0, #88	; 0x58
 800a938:	f000 b943 	b.w	800abc2 <_ZN8touchgfx9Container6removeERNS_8DrawableE>

0800a93c <_ZN8touchgfx11ModalWindowD0Ev>:
 800a93c:	b510      	push	{r4, lr}
 800a93e:	21b0      	movs	r1, #176	; 0xb0
 800a940:	4604      	mov	r4, r0
 800a942:	f015 ff31 	bl	80207a8 <_ZdlPvj>
 800a946:	4620      	mov	r0, r4
 800a948:	bd10      	pop	{r4, pc}
	...

0800a94c <_ZN8touchgfx8DrawableC1Ev>:
 800a94c:	4a0a      	ldr	r2, [pc, #40]	; (800a978 <_ZN8touchgfx8DrawableC1Ev+0x2c>)
 800a94e:	6002      	str	r2, [r0, #0]
 800a950:	2200      	movs	r2, #0
 800a952:	8082      	strh	r2, [r0, #4]
 800a954:	80c2      	strh	r2, [r0, #6]
 800a956:	8102      	strh	r2, [r0, #8]
 800a958:	8142      	strh	r2, [r0, #10]
 800a95a:	8182      	strh	r2, [r0, #12]
 800a95c:	81c2      	strh	r2, [r0, #14]
 800a95e:	8202      	strh	r2, [r0, #16]
 800a960:	8242      	strh	r2, [r0, #18]
 800a962:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800a966:	61c2      	str	r2, [r0, #28]
 800a968:	8402      	strh	r2, [r0, #32]
 800a96a:	8442      	strh	r2, [r0, #34]	; 0x22
 800a96c:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800a970:	2201      	movs	r2, #1
 800a972:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
 800a976:	4770      	bx	lr
 800a978:	080243ac 	.word	0x080243ac

0800a97c <_ZN8touchgfx11ModalWindow13setBackgroundERKtss>:
 800a97c:	b570      	push	{r4, r5, r6, lr}
 800a97e:	4604      	mov	r4, r0
 800a980:	461e      	mov	r6, r3
 800a982:	f854 3b58 	ldr.w	r3, [r4], #88
 800a986:	4615      	mov	r5, r2
 800a988:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800a98c:	4798      	blx	r3
 800a98e:	4632      	mov	r2, r6
 800a990:	4629      	mov	r1, r5
 800a992:	4620      	mov	r0, r4
 800a994:	f7f8 f9ba 	bl	8002d0c <_ZN8touchgfx8Drawable5setXYEss>
 800a998:	bd70      	pop	{r4, r5, r6, pc}

0800a99a <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 800a99a:	b570      	push	{r4, r5, r6, lr}
 800a99c:	6803      	ldr	r3, [r0, #0]
 800a99e:	4604      	mov	r4, r0
 800a9a0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a9a2:	4615      	mov	r5, r2
 800a9a4:	4798      	blx	r3
 800a9a6:	6823      	ldr	r3, [r4, #0]
 800a9a8:	4629      	mov	r1, r5
 800a9aa:	4620      	mov	r0, r4
 800a9ac:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800a9ae:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a9b2:	4718      	bx	r3

0800a9b4 <_ZN8touchgfx11ModalWindow13setBackgroundERKt>:
 800a9b4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800a9b6:	880b      	ldrh	r3, [r1, #0]
 800a9b8:	a902      	add	r1, sp, #8
 800a9ba:	f100 0584 	add.w	r5, r0, #132	; 0x84
 800a9be:	4604      	mov	r4, r0
 800a9c0:	f821 3d04 	strh.w	r3, [r1, #-4]!
 800a9c4:	4628      	mov	r0, r5
 800a9c6:	f003 ff25 	bl	800e814 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800a9ca:	2200      	movs	r2, #0
 800a9cc:	4611      	mov	r1, r2
 800a9ce:	4628      	mov	r0, r5
 800a9d0:	f7f8 f99c 	bl	8002d0c <_ZN8touchgfx8Drawable5setXYEss>
 800a9d4:	f9b4 608c 	ldrsh.w	r6, [r4, #140]	; 0x8c
 800a9d8:	f9b4 708e 	ldrsh.w	r7, [r4, #142]	; 0x8e
 800a9dc:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 800a9e0:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800a9e4:	f104 0558 	add.w	r5, r4, #88	; 0x58
 800a9e8:	2302      	movs	r3, #2
 800a9ea:	4628      	mov	r0, r5
 800a9ec:	1bd2      	subs	r2, r2, r7
 800a9ee:	1b89      	subs	r1, r1, r6
 800a9f0:	fb92 f2f3 	sdiv	r2, r2, r3
 800a9f4:	fb91 f1f3 	sdiv	r1, r1, r3
 800a9f8:	b212      	sxth	r2, r2
 800a9fa:	b209      	sxth	r1, r1
 800a9fc:	f7f8 f986 	bl	8002d0c <_ZN8touchgfx8Drawable5setXYEss>
 800aa00:	463a      	mov	r2, r7
 800aa02:	4631      	mov	r1, r6
 800aa04:	4628      	mov	r0, r5
 800aa06:	f7ff ffc8 	bl	800a99a <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800aa0a:	6823      	ldr	r3, [r4, #0]
 800aa0c:	4620      	mov	r0, r4
 800aa0e:	695b      	ldr	r3, [r3, #20]
 800aa10:	4798      	blx	r3
 800aa12:	b003      	add	sp, #12
 800aa14:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

0800aa18 <_ZN8touchgfx11ModalWindowC1Ev>:
 800aa18:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800aa1c:	4604      	mov	r4, r0
 800aa1e:	4625      	mov	r5, r4
 800aa20:	f7ff ff94 	bl	800a94c <_ZN8touchgfx8DrawableC1Ev>
 800aa24:	2600      	movs	r6, #0
 800aa26:	4b36      	ldr	r3, [pc, #216]	; (800ab00 <_ZN8touchgfx11ModalWindowC1Ev+0xe8>)
 800aa28:	62a6      	str	r6, [r4, #40]	; 0x28
 800aa2a:	f845 3b2c 	str.w	r3, [r5], #44
 800aa2e:	f04f 0a26 	mov.w	sl, #38	; 0x26
 800aa32:	4652      	mov	r2, sl
 800aa34:	4631      	mov	r1, r6
 800aa36:	4628      	mov	r0, r5
 800aa38:	f016 f8f0 	bl	8020c1c <memset>
 800aa3c:	4628      	mov	r0, r5
 800aa3e:	f7ff ff85 	bl	800a94c <_ZN8touchgfx8DrawableC1Ev>
 800aa42:	f104 0858 	add.w	r8, r4, #88	; 0x58
 800aa46:	4b2f      	ldr	r3, [pc, #188]	; (800ab04 <_ZN8touchgfx11ModalWindowC1Ev+0xec>)
 800aa48:	62e3      	str	r3, [r4, #44]	; 0x2c
 800aa4a:	f04f 09ff 	mov.w	r9, #255	; 0xff
 800aa4e:	f884 9052 	strb.w	r9, [r4, #82]	; 0x52
 800aa52:	6566      	str	r6, [r4, #84]	; 0x54
 800aa54:	4640      	mov	r0, r8
 800aa56:	f7ff ff79 	bl	800a94c <_ZN8touchgfx8DrawableC1Ev>
 800aa5a:	f104 0784 	add.w	r7, r4, #132	; 0x84
 800aa5e:	4b2a      	ldr	r3, [pc, #168]	; (800ab08 <_ZN8touchgfx11ModalWindowC1Ev+0xf0>)
 800aa60:	65a3      	str	r3, [r4, #88]	; 0x58
 800aa62:	4652      	mov	r2, sl
 800aa64:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800aa68:	4631      	mov	r1, r6
 800aa6a:	f8c4 6080 	str.w	r6, [r4, #128]	; 0x80
 800aa6e:	4638      	mov	r0, r7
 800aa70:	f8ad 3004 	strh.w	r3, [sp, #4]
 800aa74:	f016 f8d2 	bl	8020c1c <memset>
 800aa78:	4638      	mov	r0, r7
 800aa7a:	f7ff ff67 	bl	800a94c <_ZN8touchgfx8DrawableC1Ev>
 800aa7e:	a902      	add	r1, sp, #8
 800aa80:	4b22      	ldr	r3, [pc, #136]	; (800ab0c <_ZN8touchgfx11ModalWindowC1Ev+0xf4>)
 800aa82:	f8c4 3084 	str.w	r3, [r4, #132]	; 0x84
 800aa86:	f831 3d04 	ldrh.w	r3, [r1, #-4]!
 800aa8a:	f8a4 30aa 	strh.w	r3, [r4, #170]	; 0xaa
 800aa8e:	f884 90ac 	strb.w	r9, [r4, #172]	; 0xac
 800aa92:	4638      	mov	r0, r7
 800aa94:	f003 febe 	bl	800e814 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800aa98:	4b1d      	ldr	r3, [pc, #116]	; (800ab10 <_ZN8touchgfx11ModalWindowC1Ev+0xf8>)
 800aa9a:	f9b3 2000 	ldrsh.w	r2, [r3]
 800aa9e:	4b1d      	ldr	r3, [pc, #116]	; (800ab14 <_ZN8touchgfx11ModalWindowC1Ev+0xfc>)
 800aaa0:	4620      	mov	r0, r4
 800aaa2:	f9b3 1000 	ldrsh.w	r1, [r3]
 800aaa6:	f7ff ff78 	bl	800a99a <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800aaaa:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
 800aaae:	f9b4 a00a 	ldrsh.w	sl, [r4, #10]
 800aab2:	4632      	mov	r2, r6
 800aab4:	4631      	mov	r1, r6
 800aab6:	4628      	mov	r0, r5
 800aab8:	f7f8 f928 	bl	8002d0c <_ZN8touchgfx8Drawable5setXYEss>
 800aabc:	4652      	mov	r2, sl
 800aabe:	4649      	mov	r1, r9
 800aac0:	4628      	mov	r0, r5
 800aac2:	f7ff ff6a 	bl	800a99a <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800aac6:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800aaca:	6563      	str	r3, [r4, #84]	; 0x54
 800aacc:	2301      	movs	r3, #1
 800aace:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
 800aad2:	2360      	movs	r3, #96	; 0x60
 800aad4:	f884 3052 	strb.w	r3, [r4, #82]	; 0x52
 800aad8:	4628      	mov	r0, r5
 800aada:	f007 fae0 	bl	801209e <_ZNK8touchgfx8Drawable10invalidateEv>
 800aade:	4629      	mov	r1, r5
 800aae0:	4620      	mov	r0, r4
 800aae2:	f000 f823 	bl	800ab2c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800aae6:	4641      	mov	r1, r8
 800aae8:	4620      	mov	r0, r4
 800aaea:	f000 f81f 	bl	800ab2c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800aaee:	4640      	mov	r0, r8
 800aaf0:	4639      	mov	r1, r7
 800aaf2:	f000 f81b 	bl	800ab2c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800aaf6:	4620      	mov	r0, r4
 800aaf8:	b002      	add	sp, #8
 800aafa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800aafe:	bf00      	nop
 800ab00:	080237a4 	.word	0x080237a4
 800ab04:	0802412c 	.word	0x0802412c
 800ab08:	0802385c 	.word	0x0802385c
 800ab0c:	08024270 	.word	0x08024270
 800ab10:	200155fa 	.word	0x200155fa
 800ab14:	200155f8 	.word	0x200155f8

0800ab18 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 800ab18:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800ab1a:	2000      	movs	r0, #0
 800ab1c:	b12b      	cbz	r3, 800ab2a <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800ab1e:	b920      	cbnz	r0, 800ab2a <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800ab20:	1a5a      	subs	r2, r3, r1
 800ab22:	4250      	negs	r0, r2
 800ab24:	4150      	adcs	r0, r2
 800ab26:	699b      	ldr	r3, [r3, #24]
 800ab28:	e7f8      	b.n	800ab1c <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 800ab2a:	4770      	bx	lr

0800ab2c <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 800ab2c:	2300      	movs	r3, #0
 800ab2e:	6148      	str	r0, [r1, #20]
 800ab30:	618b      	str	r3, [r1, #24]
 800ab32:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800ab34:	b913      	cbnz	r3, 800ab3c <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 800ab36:	6281      	str	r1, [r0, #40]	; 0x28
 800ab38:	4770      	bx	lr
 800ab3a:	4613      	mov	r3, r2
 800ab3c:	699a      	ldr	r2, [r3, #24]
 800ab3e:	2a00      	cmp	r2, #0
 800ab40:	d1fb      	bne.n	800ab3a <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 800ab42:	6199      	str	r1, [r3, #24]
 800ab44:	4770      	bx	lr

0800ab46 <_ZN8touchgfx9Container9removeAllEv>:
 800ab46:	2200      	movs	r2, #0
 800ab48:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800ab4a:	b123      	cbz	r3, 800ab56 <_ZN8touchgfx9Container9removeAllEv+0x10>
 800ab4c:	6999      	ldr	r1, [r3, #24]
 800ab4e:	6281      	str	r1, [r0, #40]	; 0x28
 800ab50:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800ab54:	e7f8      	b.n	800ab48 <_ZN8touchgfx9Container9removeAllEv+0x2>
 800ab56:	4770      	bx	lr

0800ab58 <_ZN8touchgfx9Container6unlinkEv>:
 800ab58:	2300      	movs	r3, #0
 800ab5a:	6283      	str	r3, [r0, #40]	; 0x28
 800ab5c:	4770      	bx	lr

0800ab5e <_ZNK8touchgfx9Container12getSolidRectEv>:
 800ab5e:	2200      	movs	r2, #0
 800ab60:	8002      	strh	r2, [r0, #0]
 800ab62:	8042      	strh	r2, [r0, #2]
 800ab64:	8082      	strh	r2, [r0, #4]
 800ab66:	80c2      	strh	r2, [r0, #6]
 800ab68:	4770      	bx	lr

0800ab6a <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 800ab6a:	b570      	push	{r4, r5, r6, lr}
 800ab6c:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800ab6e:	460d      	mov	r5, r1
 800ab70:	4616      	mov	r6, r2
 800ab72:	b13c      	cbz	r4, 800ab84 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 800ab74:	6823      	ldr	r3, [r4, #0]
 800ab76:	4620      	mov	r0, r4
 800ab78:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800ab7a:	4632      	mov	r2, r6
 800ab7c:	4629      	mov	r1, r5
 800ab7e:	4798      	blx	r3
 800ab80:	69a4      	ldr	r4, [r4, #24]
 800ab82:	e7f6      	b.n	800ab72 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 800ab84:	bd70      	pop	{r4, r5, r6, pc}

0800ab86 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 800ab86:	b538      	push	{r3, r4, r5, lr}
 800ab88:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800ab8a:	460d      	mov	r5, r1
 800ab8c:	b134      	cbz	r4, 800ab9c <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 800ab8e:	682b      	ldr	r3, [r5, #0]
 800ab90:	4621      	mov	r1, r4
 800ab92:	689b      	ldr	r3, [r3, #8]
 800ab94:	4628      	mov	r0, r5
 800ab96:	4798      	blx	r3
 800ab98:	69a4      	ldr	r4, [r4, #24]
 800ab9a:	e7f7      	b.n	800ab8c <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 800ab9c:	bd38      	pop	{r3, r4, r5, pc}

0800ab9e <_ZNK8touchgfx9Container17invalidateContentEv>:
 800ab9e:	b510      	push	{r4, lr}
 800aba0:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800aba2:	b12c      	cbz	r4, 800abb0 <_ZNK8touchgfx9Container17invalidateContentEv+0x12>
 800aba4:	6823      	ldr	r3, [r4, #0]
 800aba6:	4620      	mov	r0, r4
 800aba8:	699b      	ldr	r3, [r3, #24]
 800abaa:	4798      	blx	r3
 800abac:	69a4      	ldr	r4, [r4, #24]
 800abae:	e7f8      	b.n	800aba2 <_ZNK8touchgfx9Container17invalidateContentEv+0x4>
 800abb0:	bd10      	pop	{r4, pc}

0800abb2 <_ZN8touchgfx9ContainerD1Ev>:
 800abb2:	4770      	bx	lr

0800abb4 <_ZN8touchgfx9ContainerD0Ev>:
 800abb4:	b510      	push	{r4, lr}
 800abb6:	212c      	movs	r1, #44	; 0x2c
 800abb8:	4604      	mov	r4, r0
 800abba:	f015 fdf5 	bl	80207a8 <_ZdlPvj>
 800abbe:	4620      	mov	r0, r4
 800abc0:	bd10      	pop	{r4, pc}

0800abc2 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 800abc2:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800abc4:	b19b      	cbz	r3, 800abee <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800abc6:	428b      	cmp	r3, r1
 800abc8:	d109      	bne.n	800abde <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800abca:	699a      	ldr	r2, [r3, #24]
 800abcc:	2100      	movs	r1, #0
 800abce:	6159      	str	r1, [r3, #20]
 800abd0:	6282      	str	r2, [r0, #40]	; 0x28
 800abd2:	b902      	cbnz	r2, 800abd6 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 800abd4:	4770      	bx	lr
 800abd6:	6199      	str	r1, [r3, #24]
 800abd8:	4770      	bx	lr
 800abda:	4613      	mov	r3, r2
 800abdc:	b13a      	cbz	r2, 800abee <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800abde:	699a      	ldr	r2, [r3, #24]
 800abe0:	428a      	cmp	r2, r1
 800abe2:	d1fa      	bne.n	800abda <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 800abe4:	698a      	ldr	r2, [r1, #24]
 800abe6:	619a      	str	r2, [r3, #24]
 800abe8:	2300      	movs	r3, #0
 800abea:	e9c1 3305 	strd	r3, r3, [r1, #20]
 800abee:	4770      	bx	lr

0800abf0 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 800abf0:	b410      	push	{r4}
 800abf2:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800abf4:	4604      	mov	r4, r0
 800abf6:	b92b      	cbnz	r3, 800ac04 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 800abf8:	6803      	ldr	r3, [r0, #0]
 800abfa:	f85d 4b04 	ldr.w	r4, [sp], #4
 800abfe:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800ac00:	4611      	mov	r1, r2
 800ac02:	4718      	bx	r3
 800ac04:	b941      	cbnz	r1, 800ac18 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 800ac06:	6193      	str	r3, [r2, #24]
 800ac08:	6282      	str	r2, [r0, #40]	; 0x28
 800ac0a:	6154      	str	r4, [r2, #20]
 800ac0c:	f85d 4b04 	ldr.w	r4, [sp], #4
 800ac10:	4770      	bx	lr
 800ac12:	4603      	mov	r3, r0
 800ac14:	2800      	cmp	r0, #0
 800ac16:	d0f9      	beq.n	800ac0c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800ac18:	4299      	cmp	r1, r3
 800ac1a:	6998      	ldr	r0, [r3, #24]
 800ac1c:	d1f9      	bne.n	800ac12 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 800ac1e:	6190      	str	r0, [r2, #24]
 800ac20:	618a      	str	r2, [r1, #24]
 800ac22:	e7f2      	b.n	800ac0a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

0800ac24 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 800ac24:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ac28:	461f      	mov	r7, r3
 800ac2a:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 800ac2e:	460d      	mov	r5, r1
 800ac30:	4616      	mov	r6, r2
 800ac32:	b103      	cbz	r3, 800ac36 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 800ac34:	6038      	str	r0, [r7, #0]
 800ac36:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800ac38:	b314      	cbz	r4, 800ac80 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800ac3a:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800ac3e:	b1eb      	cbz	r3, 800ac7c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800ac40:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800ac44:	428d      	cmp	r5, r1
 800ac46:	db19      	blt.n	800ac7c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800ac48:	8923      	ldrh	r3, [r4, #8]
 800ac4a:	b289      	uxth	r1, r1
 800ac4c:	440b      	add	r3, r1
 800ac4e:	b21b      	sxth	r3, r3
 800ac50:	429d      	cmp	r5, r3
 800ac52:	da13      	bge.n	800ac7c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800ac54:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800ac58:	4296      	cmp	r6, r2
 800ac5a:	db0f      	blt.n	800ac7c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800ac5c:	8963      	ldrh	r3, [r4, #10]
 800ac5e:	b292      	uxth	r2, r2
 800ac60:	4413      	add	r3, r2
 800ac62:	b21b      	sxth	r3, r3
 800ac64:	429e      	cmp	r6, r3
 800ac66:	da09      	bge.n	800ac7c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800ac68:	6823      	ldr	r3, [r4, #0]
 800ac6a:	1ab2      	subs	r2, r6, r2
 800ac6c:	1a69      	subs	r1, r5, r1
 800ac6e:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
 800ac72:	b212      	sxth	r2, r2
 800ac74:	463b      	mov	r3, r7
 800ac76:	b209      	sxth	r1, r1
 800ac78:	4620      	mov	r0, r4
 800ac7a:	47c0      	blx	r8
 800ac7c:	69a4      	ldr	r4, [r4, #24]
 800ac7e:	e7db      	b.n	800ac38 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 800ac80:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800ac84 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 800ac84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ac88:	4c6e      	ldr	r4, [pc, #440]	; (800ae44 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 800ac8a:	b0a1      	sub	sp, #132	; 0x84
 800ac8c:	6824      	ldr	r4, [r4, #0]
 800ac8e:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 800ac90:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 800ac94:	9303      	str	r3, [sp, #12]
 800ac96:	2400      	movs	r4, #0
 800ac98:	802c      	strh	r4, [r5, #0]
 800ac9a:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 800ac9c:	802c      	strh	r4, [r5, #0]
 800ac9e:	601c      	str	r4, [r3, #0]
 800aca0:	4606      	mov	r6, r0
 800aca2:	e9cd 1201 	strd	r1, r2, [sp, #4]
 800aca6:	f7ff ffbd 	bl	800ac24 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800acaa:	f1b9 0f03 	cmp.w	r9, #3
 800acae:	f340 80c2 	ble.w	800ae36 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 800acb2:	4631      	mov	r1, r6
 800acb4:	a80c      	add	r0, sp, #48	; 0x30
 800acb6:	f007 fa8d 	bl	80121d4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800acba:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 800acbe:	9306      	str	r3, [sp, #24]
 800acc0:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 800acc4:	9307      	str	r3, [sp, #28]
 800acc6:	9b03      	ldr	r3, [sp, #12]
 800acc8:	f8d3 a000 	ldr.w	sl, [r3]
 800accc:	f1ba 0f00 	cmp.w	sl, #0
 800acd0:	f000 80b4 	beq.w	800ae3c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 800acd4:	4651      	mov	r1, sl
 800acd6:	a810      	add	r0, sp, #64	; 0x40
 800acd8:	f007 fa7c 	bl	80121d4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800acdc:	9b01      	ldr	r3, [sp, #4]
 800acde:	9a06      	ldr	r2, [sp, #24]
 800ace0:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 800ace4:	189d      	adds	r5, r3, r2
 800ace6:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 800acea:	9a07      	ldr	r2, [sp, #28]
 800acec:	2002      	movs	r0, #2
 800acee:	fb91 f1f0 	sdiv	r1, r1, r0
 800acf2:	4419      	add	r1, r3
 800acf4:	1a6d      	subs	r5, r5, r1
 800acf6:	9b02      	ldr	r3, [sp, #8]
 800acf8:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 800acfc:	4413      	add	r3, r2
 800acfe:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 800ad02:	fb92 f2f0 	sdiv	r2, r2, r0
 800ad06:	440a      	add	r2, r1
 800ad08:	1a9b      	subs	r3, r3, r2
 800ad0a:	435b      	muls	r3, r3
 800ad0c:	fb05 3505 	mla	r5, r5, r5, r3
 800ad10:	4f4d      	ldr	r7, [pc, #308]	; (800ae48 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 800ad12:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800ad14:	ac10      	add	r4, sp, #64	; 0x40
 800ad16:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800ad18:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800ad1a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800ad1c:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800ad1e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800ad20:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 800ad24:	f1b9 0f0c 	cmp.w	r9, #12
 800ad28:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800ad2c:	f04f 0303 	mov.w	r3, #3
 800ad30:	bfc8      	it	gt
 800ad32:	4698      	movgt	r8, r3
 800ad34:	f8cd 9000 	str.w	r9, [sp]
 800ad38:	f04f 0400 	mov.w	r4, #0
 800ad3c:	bfdc      	itt	le
 800ad3e:	f109 32ff 	addle.w	r2, r9, #4294967295
 800ad42:	fb92 f8f3 	sdivle	r8, r2, r3
 800ad46:	1c63      	adds	r3, r4, #1
 800ad48:	aa10      	add	r2, sp, #64	; 0x40
 800ad4a:	f004 0401 	and.w	r4, r4, #1
 800ad4e:	9308      	str	r3, [sp, #32]
 800ad50:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 800ad54:	9b00      	ldr	r3, [sp, #0]
 800ad56:	fb93 f3f8 	sdiv	r3, r3, r8
 800ad5a:	b29b      	uxth	r3, r3
 800ad5c:	3404      	adds	r4, #4
 800ad5e:	f04f 0b00 	mov.w	fp, #0
 800ad62:	9304      	str	r3, [sp, #16]
 800ad64:	9a04      	ldr	r2, [sp, #16]
 800ad66:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800ad6a:	fb13 f302 	smulbb	r3, r3, r2
 800ad6e:	9a01      	ldr	r2, [sp, #4]
 800ad70:	b29b      	uxth	r3, r3
 800ad72:	1899      	adds	r1, r3, r2
 800ad74:	9305      	str	r3, [sp, #20]
 800ad76:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800ad7a:	b209      	sxth	r1, r1
 800ad7c:	4299      	cmp	r1, r3
 800ad7e:	db4d      	blt.n	800ae1c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800ad80:	8932      	ldrh	r2, [r6, #8]
 800ad82:	4413      	add	r3, r2
 800ad84:	b21b      	sxth	r3, r3
 800ad86:	4299      	cmp	r1, r3
 800ad88:	da48      	bge.n	800ae1c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800ad8a:	9b04      	ldr	r3, [sp, #16]
 800ad8c:	6827      	ldr	r7, [r4, #0]
 800ad8e:	fb17 f703 	smulbb	r7, r7, r3
 800ad92:	9b02      	ldr	r3, [sp, #8]
 800ad94:	b2bf      	uxth	r7, r7
 800ad96:	18fa      	adds	r2, r7, r3
 800ad98:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800ad9c:	b212      	sxth	r2, r2
 800ad9e:	429a      	cmp	r2, r3
 800ada0:	db3c      	blt.n	800ae1c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800ada2:	8970      	ldrh	r0, [r6, #10]
 800ada4:	4403      	add	r3, r0
 800ada6:	b21b      	sxth	r3, r3
 800ada8:	429a      	cmp	r2, r3
 800adaa:	da37      	bge.n	800ae1c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800adac:	2300      	movs	r3, #0
 800adae:	930b      	str	r3, [sp, #44]	; 0x2c
 800adb0:	4630      	mov	r0, r6
 800adb2:	ab0b      	add	r3, sp, #44	; 0x2c
 800adb4:	f7ff ff36 	bl	800ac24 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800adb8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800adba:	b37a      	cbz	r2, 800ae1c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800adbc:	4552      	cmp	r2, sl
 800adbe:	d02d      	beq.n	800ae1c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800adc0:	4611      	mov	r1, r2
 800adc2:	a80e      	add	r0, sp, #56	; 0x38
 800adc4:	9209      	str	r2, [sp, #36]	; 0x24
 800adc6:	f007 fa05 	bl	80121d4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800adca:	9a06      	ldr	r2, [sp, #24]
 800adcc:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 800add0:	9b01      	ldr	r3, [sp, #4]
 800add2:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 800add6:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 800adda:	4413      	add	r3, r2
 800addc:	f04f 0e02 	mov.w	lr, #2
 800ade0:	fb91 f1fe 	sdiv	r1, r1, lr
 800ade4:	4401      	add	r1, r0
 800ade6:	1a58      	subs	r0, r3, r1
 800ade8:	9a07      	ldr	r2, [sp, #28]
 800adea:	9b02      	ldr	r3, [sp, #8]
 800adec:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 800adf0:	fb9c fcfe 	sdiv	ip, ip, lr
 800adf4:	4413      	add	r3, r2
 800adf6:	448c      	add	ip, r1
 800adf8:	eba3 030c 	sub.w	r3, r3, ip
 800adfc:	435b      	muls	r3, r3
 800adfe:	fb00 3300 	mla	r3, r0, r0, r3
 800ae02:	42ab      	cmp	r3, r5
 800ae04:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800ae06:	d208      	bcs.n	800ae1a <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 800ae08:	9803      	ldr	r0, [sp, #12]
 800ae0a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800ae0c:	6001      	str	r1, [r0, #0]
 800ae0e:	992a      	ldr	r1, [sp, #168]	; 0xa8
 800ae10:	9805      	ldr	r0, [sp, #20]
 800ae12:	8008      	strh	r0, [r1, #0]
 800ae14:	992b      	ldr	r1, [sp, #172]	; 0xac
 800ae16:	461d      	mov	r5, r3
 800ae18:	800f      	strh	r7, [r1, #0]
 800ae1a:	4692      	mov	sl, r2
 800ae1c:	f10b 0b01 	add.w	fp, fp, #1
 800ae20:	f1bb 0f04 	cmp.w	fp, #4
 800ae24:	f104 0408 	add.w	r4, r4, #8
 800ae28:	d19c      	bne.n	800ad64 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 800ae2a:	9b00      	ldr	r3, [sp, #0]
 800ae2c:	9c08      	ldr	r4, [sp, #32]
 800ae2e:	444b      	add	r3, r9
 800ae30:	4544      	cmp	r4, r8
 800ae32:	9300      	str	r3, [sp, #0]
 800ae34:	d187      	bne.n	800ad46 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 800ae36:	b021      	add	sp, #132	; 0x84
 800ae38:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ae3c:	f04f 35ff 	mov.w	r5, #4294967295
 800ae40:	e766      	b.n	800ad10 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 800ae42:	bf00      	nop
 800ae44:	20015604 	.word	0x20015604
 800ae48:	08021b60 	.word	0x08021b60

0800ae4c <_ZN8touchgfx4RectaNERKS0_>:
 800ae4c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ae50:	f9b1 7000 	ldrsh.w	r7, [r1]
 800ae54:	888c      	ldrh	r4, [r1, #4]
 800ae56:	f9b0 9000 	ldrsh.w	r9, [r0]
 800ae5a:	443c      	add	r4, r7
 800ae5c:	b2a4      	uxth	r4, r4
 800ae5e:	fa0f f884 	sxth.w	r8, r4
 800ae62:	45c1      	cmp	r9, r8
 800ae64:	da2f      	bge.n	800aec6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800ae66:	8882      	ldrh	r2, [r0, #4]
 800ae68:	444a      	add	r2, r9
 800ae6a:	b292      	uxth	r2, r2
 800ae6c:	fa0f fe82 	sxth.w	lr, r2
 800ae70:	4577      	cmp	r7, lr
 800ae72:	da28      	bge.n	800aec6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800ae74:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800ae78:	88cb      	ldrh	r3, [r1, #6]
 800ae7a:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800ae7e:	442b      	add	r3, r5
 800ae80:	b21b      	sxth	r3, r3
 800ae82:	429e      	cmp	r6, r3
 800ae84:	da1f      	bge.n	800aec6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800ae86:	88c3      	ldrh	r3, [r0, #6]
 800ae88:	4433      	add	r3, r6
 800ae8a:	b29b      	uxth	r3, r3
 800ae8c:	fa0f fc83 	sxth.w	ip, r3
 800ae90:	4565      	cmp	r5, ip
 800ae92:	da18      	bge.n	800aec6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800ae94:	454f      	cmp	r7, r9
 800ae96:	bfb8      	it	lt
 800ae98:	464f      	movlt	r7, r9
 800ae9a:	42b5      	cmp	r5, r6
 800ae9c:	bfb8      	it	lt
 800ae9e:	4635      	movlt	r5, r6
 800aea0:	45f0      	cmp	r8, lr
 800aea2:	bfd8      	it	le
 800aea4:	4622      	movle	r2, r4
 800aea6:	1bd2      	subs	r2, r2, r7
 800aea8:	8082      	strh	r2, [r0, #4]
 800aeaa:	884a      	ldrh	r2, [r1, #2]
 800aeac:	88c9      	ldrh	r1, [r1, #6]
 800aeae:	8007      	strh	r7, [r0, #0]
 800aeb0:	440a      	add	r2, r1
 800aeb2:	b292      	uxth	r2, r2
 800aeb4:	b211      	sxth	r1, r2
 800aeb6:	458c      	cmp	ip, r1
 800aeb8:	bfa8      	it	ge
 800aeba:	4613      	movge	r3, r2
 800aebc:	1b5b      	subs	r3, r3, r5
 800aebe:	80c3      	strh	r3, [r0, #6]
 800aec0:	8045      	strh	r5, [r0, #2]
 800aec2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800aec6:	2300      	movs	r3, #0
 800aec8:	8003      	strh	r3, [r0, #0]
 800aeca:	8043      	strh	r3, [r0, #2]
 800aecc:	8083      	strh	r3, [r0, #4]
 800aece:	80c3      	strh	r3, [r0, #6]
 800aed0:	e7f7      	b.n	800aec2 <_ZN8touchgfx4RectaNERKS0_+0x76>

0800aed2 <_ZNK8touchgfx4Rect7isEmptyEv>:
 800aed2:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800aed6:	2b00      	cmp	r3, #0
 800aed8:	dd06      	ble.n	800aee8 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 800aeda:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800aede:	2800      	cmp	r0, #0
 800aee0:	bfcc      	ite	gt
 800aee2:	2000      	movgt	r0, #0
 800aee4:	2001      	movle	r0, #1
 800aee6:	4770      	bx	lr
 800aee8:	2001      	movs	r0, #1
 800aeea:	4770      	bx	lr

0800aeec <_ZNK8touchgfx9Container16getContainedAreaEv>:
 800aeec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800aef0:	2300      	movs	r3, #0
 800aef2:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 800aef4:	8003      	strh	r3, [r0, #0]
 800aef6:	4604      	mov	r4, r0
 800aef8:	8043      	strh	r3, [r0, #2]
 800aefa:	8083      	strh	r3, [r0, #4]
 800aefc:	80c3      	strh	r3, [r0, #6]
 800aefe:	2d00      	cmp	r5, #0
 800af00:	d040      	beq.n	800af84 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 800af02:	1d28      	adds	r0, r5, #4
 800af04:	f7ff ffe5 	bl	800aed2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800af08:	b988      	cbnz	r0, 800af2e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800af0a:	4620      	mov	r0, r4
 800af0c:	f7ff ffe1 	bl	800aed2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800af10:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800af14:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800af18:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 800af1c:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 800af20:	b138      	cbz	r0, 800af32 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 800af22:	8022      	strh	r2, [r4, #0]
 800af24:	8063      	strh	r3, [r4, #2]
 800af26:	f8a4 e004 	strh.w	lr, [r4, #4]
 800af2a:	f8a4 c006 	strh.w	ip, [r4, #6]
 800af2e:	69ad      	ldr	r5, [r5, #24]
 800af30:	e7e5      	b.n	800aefe <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 800af32:	f9b4 0000 	ldrsh.w	r0, [r4]
 800af36:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800af3a:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 800af3e:	4290      	cmp	r0, r2
 800af40:	4607      	mov	r7, r0
 800af42:	bfa8      	it	ge
 800af44:	4617      	movge	r7, r2
 800af46:	4472      	add	r2, lr
 800af48:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 800af4c:	8027      	strh	r7, [r4, #0]
 800af4e:	4299      	cmp	r1, r3
 800af50:	460e      	mov	r6, r1
 800af52:	4440      	add	r0, r8
 800af54:	bfa8      	it	ge
 800af56:	461e      	movge	r6, r3
 800af58:	4471      	add	r1, lr
 800af5a:	4463      	add	r3, ip
 800af5c:	b200      	sxth	r0, r0
 800af5e:	b212      	sxth	r2, r2
 800af60:	b209      	sxth	r1, r1
 800af62:	b21b      	sxth	r3, r3
 800af64:	4290      	cmp	r0, r2
 800af66:	bfac      	ite	ge
 800af68:	ebc7 0200 	rsbge	r2, r7, r0
 800af6c:	ebc7 0202 	rsblt	r2, r7, r2
 800af70:	4299      	cmp	r1, r3
 800af72:	bfac      	ite	ge
 800af74:	ebc6 0301 	rsbge	r3, r6, r1
 800af78:	ebc6 0303 	rsblt	r3, r6, r3
 800af7c:	8066      	strh	r6, [r4, #2]
 800af7e:	80a2      	strh	r2, [r4, #4]
 800af80:	80e3      	strh	r3, [r4, #6]
 800af82:	e7d4      	b.n	800af2e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800af84:	4620      	mov	r0, r4
 800af86:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800af8a <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 800af8a:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800af8e:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800af92:	b383      	cbz	r3, 800aff6 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800af94:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800af96:	b374      	cbz	r4, 800aff6 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800af98:	f9b1 5000 	ldrsh.w	r5, [r1]
 800af9c:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 800afa0:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 800afa4:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 800afa8:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800afac:	b303      	cbz	r3, 800aff0 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800afae:	4668      	mov	r0, sp
 800afb0:	1d21      	adds	r1, r4, #4
 800afb2:	f8ad 5000 	strh.w	r5, [sp]
 800afb6:	f8ad 6002 	strh.w	r6, [sp, #2]
 800afba:	f8ad 7004 	strh.w	r7, [sp, #4]
 800afbe:	f8ad 8006 	strh.w	r8, [sp, #6]
 800afc2:	f7ff ff43 	bl	800ae4c <_ZN8touchgfx4RectaNERKS0_>
 800afc6:	4668      	mov	r0, sp
 800afc8:	f7ff ff83 	bl	800aed2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800afcc:	b980      	cbnz	r0, 800aff0 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800afce:	f8bd 3000 	ldrh.w	r3, [sp]
 800afd2:	88a2      	ldrh	r2, [r4, #4]
 800afd4:	1a9b      	subs	r3, r3, r2
 800afd6:	f8ad 3000 	strh.w	r3, [sp]
 800afda:	88e2      	ldrh	r2, [r4, #6]
 800afdc:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800afe0:	1a9b      	subs	r3, r3, r2
 800afe2:	f8ad 3002 	strh.w	r3, [sp, #2]
 800afe6:	6823      	ldr	r3, [r4, #0]
 800afe8:	4669      	mov	r1, sp
 800afea:	689b      	ldr	r3, [r3, #8]
 800afec:	4620      	mov	r0, r4
 800afee:	4798      	blx	r3
 800aff0:	69a4      	ldr	r4, [r4, #24]
 800aff2:	2c00      	cmp	r4, #0
 800aff4:	d1d8      	bne.n	800afa8 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 800aff6:	b002      	add	sp, #8
 800aff8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800affc <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 800affc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800affe:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800b002:	460d      	mov	r5, r1
 800b004:	4616      	mov	r6, r2
 800b006:	b323      	cbz	r3, 800b052 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800b008:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800b00a:	b314      	cbz	r4, 800b052 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800b00c:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800b010:	b1eb      	cbz	r3, 800b04e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800b012:	6828      	ldr	r0, [r5, #0]
 800b014:	6869      	ldr	r1, [r5, #4]
 800b016:	466b      	mov	r3, sp
 800b018:	c303      	stmia	r3!, {r0, r1}
 800b01a:	4668      	mov	r0, sp
 800b01c:	1d21      	adds	r1, r4, #4
 800b01e:	f7ff ff15 	bl	800ae4c <_ZN8touchgfx4RectaNERKS0_>
 800b022:	4668      	mov	r0, sp
 800b024:	f7ff ff55 	bl	800aed2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800b028:	b988      	cbnz	r0, 800b04e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800b02a:	f8bd 3000 	ldrh.w	r3, [sp]
 800b02e:	88a2      	ldrh	r2, [r4, #4]
 800b030:	1a9b      	subs	r3, r3, r2
 800b032:	f8ad 3000 	strh.w	r3, [sp]
 800b036:	88e2      	ldrh	r2, [r4, #6]
 800b038:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800b03c:	1a9b      	subs	r3, r3, r2
 800b03e:	f8ad 3002 	strh.w	r3, [sp, #2]
 800b042:	6823      	ldr	r3, [r4, #0]
 800b044:	4632      	mov	r2, r6
 800b046:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800b048:	4669      	mov	r1, sp
 800b04a:	4620      	mov	r0, r4
 800b04c:	4798      	blx	r3
 800b04e:	69a4      	ldr	r4, [r4, #24]
 800b050:	e7db      	b.n	800b00a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 800b052:	b002      	add	sp, #8
 800b054:	bd70      	pop	{r4, r5, r6, pc}

0800b056 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 800b056:	b513      	push	{r0, r1, r4, lr}
 800b058:	6803      	ldr	r3, [r0, #0]
 800b05a:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
 800b05e:	2300      	movs	r3, #0
 800b060:	e9cd 3300 	strd	r3, r3, [sp]
 800b064:	466b      	mov	r3, sp
 800b066:	47a0      	blx	r4
 800b068:	b002      	add	sp, #8
 800b06a:	bd10      	pop	{r4, pc}

0800b06c <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 800b06c:	2301      	movs	r3, #1
 800b06e:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800b072:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 800b076:	4770      	bx	lr

0800b078 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 800b078:	2301      	movs	r3, #1
 800b07a:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800b07e:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 800b082:	4770      	bx	lr

0800b084 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 800b084:	6843      	ldr	r3, [r0, #4]
 800b086:	2201      	movs	r2, #1
 800b088:	725a      	strb	r2, [r3, #9]
 800b08a:	6840      	ldr	r0, [r0, #4]
 800b08c:	6803      	ldr	r3, [r0, #0]
 800b08e:	691b      	ldr	r3, [r3, #16]
 800b090:	4718      	bx	r3

0800b092 <_ZN8touchgfx3HAL8flushDMAEv>:
 800b092:	6840      	ldr	r0, [r0, #4]
 800b094:	6803      	ldr	r3, [r0, #0]
 800b096:	689b      	ldr	r3, [r3, #8]
 800b098:	4718      	bx	r3

0800b09a <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 800b09a:	b530      	push	{r4, r5, lr}
 800b09c:	b08b      	sub	sp, #44	; 0x2c
 800b09e:	6804      	ldr	r4, [r0, #0]
 800b0a0:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 800b0a4:	9509      	str	r5, [sp, #36]	; 0x24
 800b0a6:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 800b0aa:	9508      	str	r5, [sp, #32]
 800b0ac:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 800b0b0:	9507      	str	r5, [sp, #28]
 800b0b2:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 800b0b6:	9506      	str	r5, [sp, #24]
 800b0b8:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 800b0bc:	9505      	str	r5, [sp, #20]
 800b0be:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 800b0c2:	9504      	str	r5, [sp, #16]
 800b0c4:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 800b0c8:	9503      	str	r5, [sp, #12]
 800b0ca:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 800b0ce:	9502      	str	r5, [sp, #8]
 800b0d0:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 800b0d4:	e9cd 3500 	strd	r3, r5, [sp]
 800b0d8:	4613      	mov	r3, r2
 800b0da:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 800b0dc:	2200      	movs	r2, #0
 800b0de:	47a0      	blx	r4
 800b0e0:	b00b      	add	sp, #44	; 0x2c
 800b0e2:	bd30      	pop	{r4, r5, pc}

0800b0e4 <_ZN8touchgfx3HAL10beginFrameEv>:
 800b0e4:	4b04      	ldr	r3, [pc, #16]	; (800b0f8 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 800b0e6:	781b      	ldrb	r3, [r3, #0]
 800b0e8:	b123      	cbz	r3, 800b0f4 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 800b0ea:	f890 006a 	ldrb.w	r0, [r0, #106]	; 0x6a
 800b0ee:	f080 0001 	eor.w	r0, r0, #1
 800b0f2:	4770      	bx	lr
 800b0f4:	2001      	movs	r0, #1
 800b0f6:	4770      	bx	lr
 800b0f8:	20015602 	.word	0x20015602

0800b0fc <_ZN8touchgfx3HAL8endFrameEv>:
 800b0fc:	b510      	push	{r4, lr}
 800b0fe:	4604      	mov	r4, r0
 800b100:	6840      	ldr	r0, [r0, #4]
 800b102:	6803      	ldr	r3, [r0, #0]
 800b104:	689b      	ldr	r3, [r3, #8]
 800b106:	4798      	blx	r3
 800b108:	f894 3069 	ldrb.w	r3, [r4, #105]	; 0x69
 800b10c:	b113      	cbz	r3, 800b114 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 800b10e:	2301      	movs	r3, #1
 800b110:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 800b114:	bd10      	pop	{r4, pc}

0800b116 <_ZN8touchgfx3HAL10initializeEv>:
 800b116:	b510      	push	{r4, lr}
 800b118:	4604      	mov	r4, r0
 800b11a:	f7f5 fbe5 	bl	80008e8 <_ZN8touchgfx10OSWrappers10initializeEv>
 800b11e:	6860      	ldr	r0, [r4, #4]
 800b120:	6803      	ldr	r3, [r0, #0]
 800b122:	68db      	ldr	r3, [r3, #12]
 800b124:	4798      	blx	r3
 800b126:	68e0      	ldr	r0, [r4, #12]
 800b128:	6803      	ldr	r3, [r0, #0]
 800b12a:	689b      	ldr	r3, [r3, #8]
 800b12c:	4798      	blx	r3
 800b12e:	6823      	ldr	r3, [r4, #0]
 800b130:	4620      	mov	r0, r4
 800b132:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800b134:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b138:	4718      	bx	r3
	...

0800b13c <_ZN8touchgfx3HAL4tickEv>:
 800b13c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800b13e:	6803      	ldr	r3, [r0, #0]
 800b140:	4d5b      	ldr	r5, [pc, #364]	; (800b2b0 <_ZN8touchgfx3HAL4tickEv+0x174>)
 800b142:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800b146:	4604      	mov	r4, r0
 800b148:	4798      	blx	r3
 800b14a:	2800      	cmp	r0, #0
 800b14c:	f000 8095 	beq.w	800b27a <_ZN8touchgfx3HAL4tickEv+0x13e>
 800b150:	2001      	movs	r0, #1
 800b152:	f7f5 faf5 	bl	8000740 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800b156:	f894 3066 	ldrb.w	r3, [r4, #102]	; 0x66
 800b15a:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 800b15e:	f894 3075 	ldrb.w	r3, [r4, #117]	; 0x75
 800b162:	2600      	movs	r6, #0
 800b164:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800b168:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 800b16c:	b133      	cbz	r3, 800b17c <_ZN8touchgfx3HAL4tickEv+0x40>
 800b16e:	6823      	ldr	r3, [r4, #0]
 800b170:	4620      	mov	r0, r4
 800b172:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 800b176:	4798      	blx	r3
 800b178:	f884 6075 	strb.w	r6, [r4, #117]	; 0x75
 800b17c:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 800b180:	6862      	ldr	r2, [r4, #4]
 800b182:	f083 0301 	eor.w	r3, r3, #1
 800b186:	7253      	strb	r3, [r2, #9]
 800b188:	2601      	movs	r6, #1
 800b18a:	702e      	strb	r6, [r5, #0]
 800b18c:	f005 fff0 	bl	8011170 <_ZN8touchgfx11Application11getInstanceEv>
 800b190:	6803      	ldr	r3, [r0, #0]
 800b192:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800b194:	4798      	blx	r3
 800b196:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 800b19a:	b90b      	cbnz	r3, 800b1a0 <_ZN8touchgfx3HAL4tickEv+0x64>
 800b19c:	f884 6067 	strb.w	r6, [r4, #103]	; 0x67
 800b1a0:	f005 ffe6 	bl	8011170 <_ZN8touchgfx11Application11getInstanceEv>
 800b1a4:	6803      	ldr	r3, [r0, #0]
 800b1a6:	695b      	ldr	r3, [r3, #20]
 800b1a8:	4798      	blx	r3
 800b1aa:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800b1ac:	6803      	ldr	r3, [r0, #0]
 800b1ae:	691b      	ldr	r3, [r3, #16]
 800b1b0:	4798      	blx	r3
 800b1b2:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 800b1b6:	f894 2068 	ldrb.w	r2, [r4, #104]	; 0x68
 800b1ba:	3b01      	subs	r3, #1
 800b1bc:	b2db      	uxtb	r3, r3
 800b1be:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 800b1c2:	b10a      	cbz	r2, 800b1c8 <_ZN8touchgfx3HAL4tickEv+0x8c>
 800b1c4:	2b00      	cmp	r3, #0
 800b1c6:	d1eb      	bne.n	800b1a0 <_ZN8touchgfx3HAL4tickEv+0x64>
 800b1c8:	4a3a      	ldr	r2, [pc, #232]	; (800b2b4 <_ZN8touchgfx3HAL4tickEv+0x178>)
 800b1ca:	f994 1064 	ldrsb.w	r1, [r4, #100]	; 0x64
 800b1ce:	7813      	ldrb	r3, [r2, #0]
 800b1d0:	3301      	adds	r3, #1
 800b1d2:	b25b      	sxtb	r3, r3
 800b1d4:	4299      	cmp	r1, r3
 800b1d6:	7013      	strb	r3, [r2, #0]
 800b1d8:	dc10      	bgt.n	800b1fc <_ZN8touchgfx3HAL4tickEv+0xc0>
 800b1da:	68e0      	ldr	r0, [r4, #12]
 800b1dc:	2300      	movs	r3, #0
 800b1de:	7013      	strb	r3, [r2, #0]
 800b1e0:	6803      	ldr	r3, [r0, #0]
 800b1e2:	aa03      	add	r2, sp, #12
 800b1e4:	68db      	ldr	r3, [r3, #12]
 800b1e6:	a902      	add	r1, sp, #8
 800b1e8:	4798      	blx	r3
 800b1ea:	6823      	ldr	r3, [r4, #0]
 800b1ec:	2800      	cmp	r0, #0
 800b1ee:	d050      	beq.n	800b292 <_ZN8touchgfx3HAL4tickEv+0x156>
 800b1f0:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800b1f4:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800b1f8:	4620      	mov	r0, r4
 800b1fa:	4798      	blx	r3
 800b1fc:	6960      	ldr	r0, [r4, #20]
 800b1fe:	2300      	movs	r3, #0
 800b200:	f88d 3007 	strb.w	r3, [sp, #7]
 800b204:	b158      	cbz	r0, 800b21e <_ZN8touchgfx3HAL4tickEv+0xe2>
 800b206:	6803      	ldr	r3, [r0, #0]
 800b208:	f10d 0107 	add.w	r1, sp, #7
 800b20c:	68db      	ldr	r3, [r3, #12]
 800b20e:	4798      	blx	r3
 800b210:	b128      	cbz	r0, 800b21e <_ZN8touchgfx3HAL4tickEv+0xe2>
 800b212:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800b214:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800b218:	6803      	ldr	r3, [r0, #0]
 800b21a:	68db      	ldr	r3, [r3, #12]
 800b21c:	4798      	blx	r3
 800b21e:	f104 001c 	add.w	r0, r4, #28
 800b222:	f014 fef9 	bl	8020018 <_ZN8touchgfx8Gestures4tickEv>
 800b226:	f894 306c 	ldrb.w	r3, [r4, #108]	; 0x6c
 800b22a:	b30b      	cbz	r3, 800b270 <_ZN8touchgfx3HAL4tickEv+0x134>
 800b22c:	6920      	ldr	r0, [r4, #16]
 800b22e:	6803      	ldr	r3, [r0, #0]
 800b230:	691b      	ldr	r3, [r3, #16]
 800b232:	4798      	blx	r3
 800b234:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800b236:	4606      	mov	r6, r0
 800b238:	b903      	cbnz	r3, 800b23c <_ZN8touchgfx3HAL4tickEv+0x100>
 800b23a:	6720      	str	r0, [r4, #112]	; 0x70
 800b23c:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800b23e:	4a1e      	ldr	r2, [pc, #120]	; (800b2b8 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 800b240:	1af3      	subs	r3, r6, r3
 800b242:	4293      	cmp	r3, r2
 800b244:	d914      	bls.n	800b270 <_ZN8touchgfx3HAL4tickEv+0x134>
 800b246:	6920      	ldr	r0, [r4, #16]
 800b248:	6803      	ldr	r3, [r0, #0]
 800b24a:	699b      	ldr	r3, [r3, #24]
 800b24c:	4798      	blx	r3
 800b24e:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800b250:	2264      	movs	r2, #100	; 0x64
 800b252:	1af3      	subs	r3, r6, r3
 800b254:	fbb3 f3f2 	udiv	r3, r3, r2
 800b258:	fbb0 f0f3 	udiv	r0, r0, r3
 800b25c:	2800      	cmp	r0, #0
 800b25e:	dc1d      	bgt.n	800b29c <_ZN8touchgfx3HAL4tickEv+0x160>
 800b260:	f884 2065 	strb.w	r2, [r4, #101]	; 0x65
 800b264:	6920      	ldr	r0, [r4, #16]
 800b266:	6803      	ldr	r3, [r0, #0]
 800b268:	2100      	movs	r1, #0
 800b26a:	69db      	ldr	r3, [r3, #28]
 800b26c:	4798      	blx	r3
 800b26e:	6726      	str	r6, [r4, #112]	; 0x70
 800b270:	f005 ff7e 	bl	8011170 <_ZN8touchgfx11Application11getInstanceEv>
 800b274:	6803      	ldr	r3, [r0, #0]
 800b276:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b278:	4798      	blx	r3
 800b27a:	6823      	ldr	r3, [r4, #0]
 800b27c:	4620      	mov	r0, r4
 800b27e:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 800b282:	4798      	blx	r3
 800b284:	2001      	movs	r0, #1
 800b286:	f7f5 fa5c 	bl	8000742 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800b28a:	2300      	movs	r3, #0
 800b28c:	702b      	strb	r3, [r5, #0]
 800b28e:	b004      	add	sp, #16
 800b290:	bd70      	pop	{r4, r5, r6, pc}
 800b292:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 800b296:	4620      	mov	r0, r4
 800b298:	4798      	blx	r3
 800b29a:	e7af      	b.n	800b1fc <_ZN8touchgfx3HAL4tickEv+0xc0>
 800b29c:	2863      	cmp	r0, #99	; 0x63
 800b29e:	bfcb      	itete	gt
 800b2a0:	2300      	movgt	r3, #0
 800b2a2:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 800b2a6:	f884 3065 	strbgt.w	r3, [r4, #101]	; 0x65
 800b2aa:	f884 0065 	strble.w	r0, [r4, #101]	; 0x65
 800b2ae:	e7d9      	b.n	800b264 <_ZN8touchgfx3HAL4tickEv+0x128>
 800b2b0:	20015608 	.word	0x20015608
 800b2b4:	20015609 	.word	0x20015609
 800b2b8:	05f5e100 	.word	0x05f5e100

0800b2bc <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 800b2bc:	f7f5 bb44 	b.w	8000948 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800b2c0 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 800b2c0:	6581      	str	r1, [r0, #88]	; 0x58
 800b2c2:	301c      	adds	r0, #28
 800b2c4:	f014 bea6 	b.w	8020014 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

0800b2c8 <_ZN8touchgfx3HAL5touchEll>:
 800b2c8:	b530      	push	{r4, r5, lr}
 800b2ca:	b087      	sub	sp, #28
 800b2cc:	4604      	mov	r4, r0
 800b2ce:	a804      	add	r0, sp, #16
 800b2d0:	e9cd 1204 	strd	r1, r2, [sp, #16]
 800b2d4:	f005 fd0e 	bl	8010cf4 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 800b2d8:	9b04      	ldr	r3, [sp, #16]
 800b2da:	f8ad 300c 	strh.w	r3, [sp, #12]
 800b2de:	a906      	add	r1, sp, #24
 800b2e0:	9b05      	ldr	r3, [sp, #20]
 800b2e2:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 800b2e6:	a803      	add	r0, sp, #12
 800b2e8:	f005 fd56 	bl	8010d98 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 800b2ec:	f894 106b 	ldrb.w	r1, [r4, #107]	; 0x6b
 800b2f0:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800b2f4:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800b2f8:	f104 001c 	add.w	r0, r4, #28
 800b2fc:	b189      	cbz	r1, 800b322 <_ZN8touchgfx3HAL5touchEll+0x5a>
 800b2fe:	f8b4 5060 	ldrh.w	r5, [r4, #96]	; 0x60
 800b302:	9300      	str	r3, [sp, #0]
 800b304:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 800b308:	4613      	mov	r3, r2
 800b30a:	462a      	mov	r2, r5
 800b30c:	f014 fe92 	bl	8020034 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 800b310:	b128      	cbz	r0, 800b31e <_ZN8touchgfx3HAL5touchEll+0x56>
 800b312:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800b316:	65e3      	str	r3, [r4, #92]	; 0x5c
 800b318:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800b31c:	6623      	str	r3, [r4, #96]	; 0x60
 800b31e:	b007      	add	sp, #28
 800b320:	bd30      	pop	{r4, r5, pc}
 800b322:	f014 fec7 	bl	80200b4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800b326:	2301      	movs	r3, #1
 800b328:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800b32c:	e7f1      	b.n	800b312 <_ZN8touchgfx3HAL5touchEll+0x4a>

0800b32e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 800b32e:	b510      	push	{r4, lr}
 800b330:	2b00      	cmp	r3, #0
 800b332:	d046      	beq.n	800b3c2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800b334:	ea81 0002 	eor.w	r0, r1, r2
 800b338:	07c4      	lsls	r4, r0, #31
 800b33a:	d508      	bpl.n	800b34e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 800b33c:	440b      	add	r3, r1
 800b33e:	3a01      	subs	r2, #1
 800b340:	428b      	cmp	r3, r1
 800b342:	d93e      	bls.n	800b3c2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800b344:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800b348:	f801 0b01 	strb.w	r0, [r1], #1
 800b34c:	e7f8      	b.n	800b340 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 800b34e:	07d0      	lsls	r0, r2, #31
 800b350:	bf42      	ittt	mi
 800b352:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 800b356:	f801 0b01 	strbmi.w	r0, [r1], #1
 800b35a:	f103 33ff 	addmi.w	r3, r3, #4294967295
 800b35e:	2b01      	cmp	r3, #1
 800b360:	d911      	bls.n	800b386 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800b362:	ea81 0402 	eor.w	r4, r1, r2
 800b366:	07a4      	lsls	r4, r4, #30
 800b368:	4610      	mov	r0, r2
 800b36a:	d022      	beq.n	800b3b2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 800b36c:	f023 0401 	bic.w	r4, r3, #1
 800b370:	440c      	add	r4, r1
 800b372:	428c      	cmp	r4, r1
 800b374:	4602      	mov	r2, r0
 800b376:	d904      	bls.n	800b382 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 800b378:	8812      	ldrh	r2, [r2, #0]
 800b37a:	f821 2b02 	strh.w	r2, [r1], #2
 800b37e:	3002      	adds	r0, #2
 800b380:	e7f7      	b.n	800b372 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 800b382:	f003 0301 	and.w	r3, r3, #1
 800b386:	f023 0003 	bic.w	r0, r3, #3
 800b38a:	4408      	add	r0, r1
 800b38c:	4288      	cmp	r0, r1
 800b38e:	4614      	mov	r4, r2
 800b390:	d904      	bls.n	800b39c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 800b392:	6824      	ldr	r4, [r4, #0]
 800b394:	f841 4b04 	str.w	r4, [r1], #4
 800b398:	3204      	adds	r2, #4
 800b39a:	e7f7      	b.n	800b38c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 800b39c:	f003 0303 	and.w	r3, r3, #3
 800b3a0:	440b      	add	r3, r1
 800b3a2:	3a01      	subs	r2, #1
 800b3a4:	428b      	cmp	r3, r1
 800b3a6:	d90c      	bls.n	800b3c2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800b3a8:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800b3ac:	f801 0b01 	strb.w	r0, [r1], #1
 800b3b0:	e7f8      	b.n	800b3a4 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 800b3b2:	0790      	lsls	r0, r2, #30
 800b3b4:	d0e7      	beq.n	800b386 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800b3b6:	f832 0b02 	ldrh.w	r0, [r2], #2
 800b3ba:	f821 0b02 	strh.w	r0, [r1], #2
 800b3be:	3b02      	subs	r3, #2
 800b3c0:	e7e1      	b.n	800b386 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800b3c2:	2001      	movs	r0, #1
 800b3c4:	bd10      	pop	{r4, pc}

0800b3c6 <_ZN8touchgfx3HAL7noTouchEv>:
 800b3c6:	b510      	push	{r4, lr}
 800b3c8:	f890 306b 	ldrb.w	r3, [r0, #107]	; 0x6b
 800b3cc:	4604      	mov	r4, r0
 800b3ce:	b153      	cbz	r3, 800b3e6 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 800b3d0:	f8b0 3060 	ldrh.w	r3, [r0, #96]	; 0x60
 800b3d4:	f8b0 205c 	ldrh.w	r2, [r0, #92]	; 0x5c
 800b3d8:	2101      	movs	r1, #1
 800b3da:	301c      	adds	r0, #28
 800b3dc:	f014 fe6a 	bl	80200b4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800b3e0:	2300      	movs	r3, #0
 800b3e2:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800b3e6:	bd10      	pop	{r4, pc}

0800b3e8 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 800b3e8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b3ec:	b085      	sub	sp, #20
 800b3ee:	ad04      	add	r5, sp, #16
 800b3f0:	4604      	mov	r4, r0
 800b3f2:	2000      	movs	r0, #0
 800b3f4:	f845 0d04 	str.w	r0, [r5, #-4]!
 800b3f8:	69a0      	ldr	r0, [r4, #24]
 800b3fa:	6806      	ldr	r6, [r0, #0]
 800b3fc:	9501      	str	r5, [sp, #4]
 800b3fe:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 800b402:	9500      	str	r5, [sp, #0]
 800b404:	6835      	ldr	r5, [r6, #0]
 800b406:	4699      	mov	r9, r3
 800b408:	460f      	mov	r7, r1
 800b40a:	4690      	mov	r8, r2
 800b40c:	47a8      	blx	r5
 800b40e:	4d10      	ldr	r5, [pc, #64]	; (800b450 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 800b410:	4606      	mov	r6, r0
 800b412:	f8a5 9000 	strh.w	r9, [r5]
 800b416:	f7f7 f9d7 	bl	80027c8 <_ZN8touchgfx3HAL3lcdEv>
 800b41a:	6803      	ldr	r3, [r0, #0]
 800b41c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b41e:	4798      	blx	r3
 800b420:	b128      	cbz	r0, 800b42e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 800b422:	2801      	cmp	r0, #1
 800b424:	d00b      	beq.n	800b43e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 800b426:	4630      	mov	r0, r6
 800b428:	b005      	add	sp, #20
 800b42a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b42e:	882b      	ldrh	r3, [r5, #0]
 800b430:	fb08 7203 	mla	r2, r8, r3, r7
 800b434:	9b03      	ldr	r3, [sp, #12]
 800b436:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 800b43a:	63e3      	str	r3, [r4, #60]	; 0x3c
 800b43c:	e7f3      	b.n	800b426 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800b43e:	882a      	ldrh	r2, [r5, #0]
 800b440:	9b03      	ldr	r3, [sp, #12]
 800b442:	fb08 7202 	mla	r2, r8, r2, r7
 800b446:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800b44a:	1a9a      	subs	r2, r3, r2
 800b44c:	63e2      	str	r2, [r4, #60]	; 0x3c
 800b44e:	e7ea      	b.n	800b426 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800b450:	200155fe 	.word	0x200155fe

0800b454 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 800b454:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b456:	b08b      	sub	sp, #44	; 0x2c
 800b458:	4617      	mov	r7, r2
 800b45a:	4604      	mov	r4, r0
 800b45c:	460e      	mov	r6, r1
 800b45e:	461d      	mov	r5, r3
 800b460:	f7f7 f9b2 	bl	80027c8 <_ZN8touchgfx3HAL3lcdEv>
 800b464:	6803      	ldr	r3, [r0, #0]
 800b466:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b468:	4798      	blx	r3
 800b46a:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 800b46e:	9007      	str	r0, [sp, #28]
 800b470:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800b474:	4b0d      	ldr	r3, [pc, #52]	; (800b4ac <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 800b476:	6822      	ldr	r2, [r4, #0]
 800b478:	881b      	ldrh	r3, [r3, #0]
 800b47a:	9306      	str	r3, [sp, #24]
 800b47c:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 800b480:	9305      	str	r3, [sp, #20]
 800b482:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 800b486:	9304      	str	r3, [sp, #16]
 800b488:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800b48c:	9303      	str	r3, [sp, #12]
 800b48e:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800b492:	9302      	str	r3, [sp, #8]
 800b494:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800b498:	e9cd 5300 	strd	r5, r3, [sp]
 800b49c:	4631      	mov	r1, r6
 800b49e:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 800b4a0:	463b      	mov	r3, r7
 800b4a2:	2200      	movs	r2, #0
 800b4a4:	4620      	mov	r0, r4
 800b4a6:	47a8      	blx	r5
 800b4a8:	b00b      	add	sp, #44	; 0x2c
 800b4aa:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b4ac:	200155fe 	.word	0x200155fe

0800b4b0 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 800b4b0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b4b4:	4698      	mov	r8, r3
 800b4b6:	6803      	ldr	r3, [r0, #0]
 800b4b8:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 800b4ba:	4b15      	ldr	r3, [pc, #84]	; (800b510 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 800b4bc:	b08b      	sub	sp, #44	; 0x2c
 800b4be:	4617      	mov	r7, r2
 800b4c0:	f8b3 9000 	ldrh.w	r9, [r3]
 800b4c4:	460e      	mov	r6, r1
 800b4c6:	4604      	mov	r4, r0
 800b4c8:	f7f7 f97e 	bl	80027c8 <_ZN8touchgfx3HAL3lcdEv>
 800b4cc:	6803      	ldr	r3, [r0, #0]
 800b4ce:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b4d0:	4798      	blx	r3
 800b4d2:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800b4d6:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800b4da:	2302      	movs	r3, #2
 800b4dc:	e9cd 9306 	strd	r9, r3, [sp, #24]
 800b4e0:	2301      	movs	r3, #1
 800b4e2:	9305      	str	r3, [sp, #20]
 800b4e4:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 800b4e8:	9304      	str	r3, [sp, #16]
 800b4ea:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800b4ee:	9303      	str	r3, [sp, #12]
 800b4f0:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800b4f4:	9302      	str	r3, [sp, #8]
 800b4f6:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800b4fa:	2200      	movs	r2, #0
 800b4fc:	e9cd 8300 	strd	r8, r3, [sp]
 800b500:	4631      	mov	r1, r6
 800b502:	463b      	mov	r3, r7
 800b504:	4620      	mov	r0, r4
 800b506:	47a8      	blx	r5
 800b508:	b00b      	add	sp, #44	; 0x2c
 800b50a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b50e:	bf00      	nop
 800b510:	200155fe 	.word	0x200155fe

0800b514 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 800b514:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b518:	4698      	mov	r8, r3
 800b51a:	6803      	ldr	r3, [r0, #0]
 800b51c:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 800b51e:	4b11      	ldr	r3, [pc, #68]	; (800b564 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 800b520:	b087      	sub	sp, #28
 800b522:	f8b3 9000 	ldrh.w	r9, [r3]
 800b526:	460e      	mov	r6, r1
 800b528:	4617      	mov	r7, r2
 800b52a:	4604      	mov	r4, r0
 800b52c:	f7f7 f94c 	bl	80027c8 <_ZN8touchgfx3HAL3lcdEv>
 800b530:	6803      	ldr	r3, [r0, #0]
 800b532:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b534:	4798      	blx	r3
 800b536:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 800b53a:	f8cd 900c 	str.w	r9, [sp, #12]
 800b53e:	e9cd 0304 	strd	r0, r3, [sp, #16]
 800b542:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 800b546:	9302      	str	r3, [sp, #8]
 800b548:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 800b54c:	9301      	str	r3, [sp, #4]
 800b54e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800b552:	9300      	str	r3, [sp, #0]
 800b554:	463a      	mov	r2, r7
 800b556:	4643      	mov	r3, r8
 800b558:	4631      	mov	r1, r6
 800b55a:	4620      	mov	r0, r4
 800b55c:	47a8      	blx	r5
 800b55e:	b007      	add	sp, #28
 800b560:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b564:	200155fe 	.word	0x200155fe

0800b568 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 800b568:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b56c:	4604      	mov	r4, r0
 800b56e:	b08f      	sub	sp, #60	; 0x3c
 800b570:	4610      	mov	r0, r2
 800b572:	460d      	mov	r5, r1
 800b574:	4691      	mov	r9, r2
 800b576:	461e      	mov	r6, r3
 800b578:	f008 ff96 	bl	80144a8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800b57c:	2800      	cmp	r0, #0
 800b57e:	f000 809d 	beq.w	800b6bc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 800b582:	6823      	ldr	r3, [r4, #0]
 800b584:	f8df b198 	ldr.w	fp, [pc, #408]	; 800b720 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 800b588:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b58a:	f8df a198 	ldr.w	sl, [pc, #408]	; 800b724 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 800b58e:	4f61      	ldr	r7, [pc, #388]	; (800b714 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800b590:	4620      	mov	r0, r4
 800b592:	4798      	blx	r3
 800b594:	6823      	ldr	r3, [r4, #0]
 800b596:	4620      	mov	r0, r4
 800b598:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b59a:	4798      	blx	r3
 800b59c:	f8bb 3000 	ldrh.w	r3, [fp]
 800b5a0:	9301      	str	r3, [sp, #4]
 800b5a2:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 800b5a6:	f8ba 3000 	ldrh.w	r3, [sl]
 800b5aa:	9302      	str	r3, [sp, #8]
 800b5ac:	883b      	ldrh	r3, [r7, #0]
 800b5ae:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 800b5b2:	9303      	str	r3, [sp, #12]
 800b5b4:	4b58      	ldr	r3, [pc, #352]	; (800b718 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800b5b6:	9305      	str	r3, [sp, #20]
 800b5b8:	881a      	ldrh	r2, [r3, #0]
 800b5ba:	9204      	str	r2, [sp, #16]
 800b5bc:	4640      	mov	r0, r8
 800b5be:	f009 f807 	bl	80145d0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800b5c2:	8038      	strh	r0, [r7, #0]
 800b5c4:	4640      	mov	r0, r8
 800b5c6:	f009 f837 	bl	8014638 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800b5ca:	9b05      	ldr	r3, [sp, #20]
 800b5cc:	b280      	uxth	r0, r0
 800b5ce:	8018      	strh	r0, [r3, #0]
 800b5d0:	4b52      	ldr	r3, [pc, #328]	; (800b71c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 800b5d2:	781b      	ldrb	r3, [r3, #0]
 800b5d4:	2b00      	cmp	r3, #0
 800b5d6:	d174      	bne.n	800b6c2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 800b5d8:	883b      	ldrh	r3, [r7, #0]
 800b5da:	f8ab 3000 	strh.w	r3, [fp]
 800b5de:	f8aa 0000 	strh.w	r0, [sl]
 800b5e2:	4648      	mov	r0, r9
 800b5e4:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 800b5e8:	f008 ff5e 	bl	80144a8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800b5ec:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 800b5f0:	2200      	movs	r2, #0
 800b5f2:	4611      	mov	r1, r2
 800b5f4:	4628      	mov	r0, r5
 800b5f6:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 800b5fa:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 800b5fe:	f7f7 fb85 	bl	8002d0c <_ZN8touchgfx8Drawable5setXYEss>
 800b602:	2301      	movs	r3, #1
 800b604:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 800b608:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 800b60c:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800b610:	2b00      	cmp	r3, #0
 800b612:	dd5c      	ble.n	800b6ce <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800b614:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800b618:	2b00      	cmp	r3, #0
 800b61a:	dd58      	ble.n	800b6ce <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800b61c:	462a      	mov	r2, r5
 800b61e:	ab0a      	add	r3, sp, #40	; 0x28
 800b620:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800b624:	6851      	ldr	r1, [r2, #4]
 800b626:	c303      	stmia	r3!, {r0, r1}
 800b628:	4631      	mov	r1, r6
 800b62a:	a80a      	add	r0, sp, #40	; 0x28
 800b62c:	f7ff fc0e 	bl	800ae4c <_ZN8touchgfx4RectaNERKS0_>
 800b630:	4b38      	ldr	r3, [pc, #224]	; (800b714 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800b632:	f9b3 2000 	ldrsh.w	r2, [r3]
 800b636:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 800b63a:	2100      	movs	r1, #0
 800b63c:	aa0a      	add	r2, sp, #40	; 0x28
 800b63e:	4b36      	ldr	r3, [pc, #216]	; (800b718 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800b640:	910c      	str	r1, [sp, #48]	; 0x30
 800b642:	e892 0003 	ldmia.w	r2, {r0, r1}
 800b646:	f9b3 3000 	ldrsh.w	r3, [r3]
 800b64a:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800b64e:	ab08      	add	r3, sp, #32
 800b650:	e883 0003 	stmia.w	r3, {r0, r1}
 800b654:	4618      	mov	r0, r3
 800b656:	a90c      	add	r1, sp, #48	; 0x30
 800b658:	f7ff fbf8 	bl	800ae4c <_ZN8touchgfx4RectaNERKS0_>
 800b65c:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 800b65e:	2b00      	cmp	r3, #0
 800b660:	d13c      	bne.n	800b6dc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 800b662:	2000      	movs	r0, #0
 800b664:	f884 0076 	strb.w	r0, [r4, #118]	; 0x76
 800b668:	2600      	movs	r6, #0
 800b66a:	682a      	ldr	r2, [r5, #0]
 800b66c:	696b      	ldr	r3, [r5, #20]
 800b66e:	616e      	str	r6, [r5, #20]
 800b670:	9305      	str	r3, [sp, #20]
 800b672:	6892      	ldr	r2, [r2, #8]
 800b674:	a908      	add	r1, sp, #32
 800b676:	4628      	mov	r0, r5
 800b678:	4790      	blx	r2
 800b67a:	9b05      	ldr	r3, [sp, #20]
 800b67c:	616b      	str	r3, [r5, #20]
 800b67e:	4652      	mov	r2, sl
 800b680:	f884 6076 	strb.w	r6, [r4, #118]	; 0x76
 800b684:	4649      	mov	r1, r9
 800b686:	4628      	mov	r0, r5
 800b688:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 800b68c:	f7f7 fb3e 	bl	8002d0c <_ZN8touchgfx8Drawable5setXYEss>
 800b690:	4b23      	ldr	r3, [pc, #140]	; (800b720 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 800b692:	9a01      	ldr	r2, [sp, #4]
 800b694:	801a      	strh	r2, [r3, #0]
 800b696:	4b23      	ldr	r3, [pc, #140]	; (800b724 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 800b698:	9a02      	ldr	r2, [sp, #8]
 800b69a:	801a      	strh	r2, [r3, #0]
 800b69c:	4b1d      	ldr	r3, [pc, #116]	; (800b714 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800b69e:	9a03      	ldr	r2, [sp, #12]
 800b6a0:	801a      	strh	r2, [r3, #0]
 800b6a2:	4b1d      	ldr	r3, [pc, #116]	; (800b718 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800b6a4:	9a04      	ldr	r2, [sp, #16]
 800b6a6:	801a      	strh	r2, [r3, #0]
 800b6a8:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 800b6ac:	6823      	ldr	r3, [r4, #0]
 800b6ae:	4620      	mov	r0, r4
 800b6b0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b6b2:	4798      	blx	r3
 800b6b4:	6823      	ldr	r3, [r4, #0]
 800b6b6:	4620      	mov	r0, r4
 800b6b8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b6ba:	4798      	blx	r3
 800b6bc:	b00f      	add	sp, #60	; 0x3c
 800b6be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b6c2:	883b      	ldrh	r3, [r7, #0]
 800b6c4:	f8ab 0000 	strh.w	r0, [fp]
 800b6c8:	f8aa 3000 	strh.w	r3, [sl]
 800b6cc:	e789      	b.n	800b5e2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 800b6ce:	462a      	mov	r2, r5
 800b6d0:	ab0a      	add	r3, sp, #40	; 0x28
 800b6d2:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800b6d6:	6851      	ldr	r1, [r2, #4]
 800b6d8:	c303      	stmia	r3!, {r0, r1}
 800b6da:	e7a9      	b.n	800b630 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 800b6dc:	a807      	add	r0, sp, #28
 800b6de:	f009 f8e7 	bl	80148b0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800b6e2:	4606      	mov	r6, r0
 800b6e4:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 800b6e6:	6803      	ldr	r3, [r0, #0]
 800b6e8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b6ea:	4798      	blx	r3
 800b6ec:	4286      	cmp	r6, r0
 800b6ee:	d1b8      	bne.n	800b662 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 800b6f0:	f7f7 f86a 	bl	80027c8 <_ZN8touchgfx3HAL3lcdEv>
 800b6f4:	6803      	ldr	r3, [r0, #0]
 800b6f6:	4606      	mov	r6, r0
 800b6f8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800b6fa:	9305      	str	r3, [sp, #20]
 800b6fc:	a807      	add	r0, sp, #28
 800b6fe:	f009 f8d7 	bl	80148b0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800b702:	9b05      	ldr	r3, [sp, #20]
 800b704:	4601      	mov	r1, r0
 800b706:	4630      	mov	r0, r6
 800b708:	4798      	blx	r3
 800b70a:	f080 0001 	eor.w	r0, r0, #1
 800b70e:	b2c0      	uxtb	r0, r0
 800b710:	e7a8      	b.n	800b664 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 800b712:	bf00      	nop
 800b714:	200155f8 	.word	0x200155f8
 800b718:	200155fa 	.word	0x200155fa
 800b71c:	200155fc 	.word	0x200155fc
 800b720:	200155fe 	.word	0x200155fe
 800b724:	20015600 	.word	0x20015600

0800b728 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 800b728:	b510      	push	{r4, lr}
 800b72a:	4b07      	ldr	r3, [pc, #28]	; (800b748 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 800b72c:	781b      	ldrb	r3, [r3, #0]
 800b72e:	4604      	mov	r4, r0
 800b730:	b13b      	cbz	r3, 800b742 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800b732:	6803      	ldr	r3, [r0, #0]
 800b734:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b736:	4798      	blx	r3
 800b738:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800b73a:	4283      	cmp	r3, r0
 800b73c:	d101      	bne.n	800b742 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800b73e:	6c20      	ldr	r0, [r4, #64]	; 0x40
 800b740:	bd10      	pop	{r4, pc}
 800b742:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 800b744:	e7fc      	b.n	800b740 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 800b746:	bf00      	nop
 800b748:	20015602 	.word	0x20015602

0800b74c <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 800b74c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b750:	b08a      	sub	sp, #40	; 0x28
 800b752:	461d      	mov	r5, r3
 800b754:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800b758:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800b75c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800b760:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b764:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800b768:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b76c:	2400      	movs	r4, #0
 800b76e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800b772:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 800b776:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b77a:	4690      	mov	r8, r2
 800b77c:	4607      	mov	r7, r0
 800b77e:	9404      	str	r4, [sp, #16]
 800b780:	f88d 4020 	strb.w	r4, [sp, #32]
 800b784:	f7ff ffd0 	bl	800b728 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b788:	fb06 8505 	mla	r5, r6, r5, r8
 800b78c:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800b790:	6878      	ldr	r0, [r7, #4]
 800b792:	9505      	str	r5, [sp, #20]
 800b794:	f8ad 601e 	strh.w	r6, [sp, #30]
 800b798:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800b79c:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
 800b7a0:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 800b7a4:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 800b7a8:	6803      	ldr	r3, [r0, #0]
 800b7aa:	a901      	add	r1, sp, #4
 800b7ac:	685b      	ldr	r3, [r3, #4]
 800b7ae:	4798      	blx	r3
 800b7b0:	b00a      	add	sp, #40	; 0x28
 800b7b2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800b7b6 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 800b7b6:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b7ba:	b08b      	sub	sp, #44	; 0x2c
 800b7bc:	2400      	movs	r4, #0
 800b7be:	461d      	mov	r5, r3
 800b7c0:	f44f 6300 	mov.w	r3, #2048	; 0x800
 800b7c4:	4688      	mov	r8, r1
 800b7c6:	4691      	mov	r9, r2
 800b7c8:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
 800b7cc:	9404      	str	r4, [sp, #16]
 800b7ce:	4607      	mov	r7, r0
 800b7d0:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800b7d4:	f7ff ffa8 	bl	800b728 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b7d8:	fb06 9505 	mla	r5, r6, r5, r9
 800b7dc:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800b7e0:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b7e4:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800b7e8:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800b7ec:	6878      	ldr	r0, [r7, #4]
 800b7ee:	9505      	str	r5, [sp, #20]
 800b7f0:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b7f4:	f8ad 401c 	strh.w	r4, [sp, #28]
 800b7f8:	f8ad 601e 	strh.w	r6, [sp, #30]
 800b7fc:	f8cd 8010 	str.w	r8, [sp, #16]
 800b800:	f8ad 4020 	strh.w	r4, [sp, #32]
 800b804:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800b808:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 800b80c:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 800b810:	6803      	ldr	r3, [r0, #0]
 800b812:	a901      	add	r1, sp, #4
 800b814:	685b      	ldr	r3, [r3, #4]
 800b816:	4798      	blx	r3
 800b818:	b00b      	add	sp, #44	; 0x2c
 800b81a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

0800b820 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 800b820:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b824:	b08a      	sub	sp, #40	; 0x28
 800b826:	4698      	mov	r8, r3
 800b828:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
 800b82c:	f89d c054 	ldrb.w	ip, [sp, #84]	; 0x54
 800b830:	f8bd 7058 	ldrh.w	r7, [sp, #88]	; 0x58
 800b834:	f89d 4060 	ldrb.w	r4, [sp, #96]	; 0x60
 800b838:	2300      	movs	r3, #0
 800b83a:	2d0b      	cmp	r5, #11
 800b83c:	4606      	mov	r6, r0
 800b83e:	9304      	str	r3, [sp, #16]
 800b840:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 800b844:	d138      	bne.n	800b8b8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 800b846:	2380      	movs	r3, #128	; 0x80
 800b848:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800b84c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800b850:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b854:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800b858:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b85c:	f88d 0020 	strb.w	r0, [sp, #32]
 800b860:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800b864:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b868:	4630      	mov	r0, r6
 800b86a:	9203      	str	r2, [sp, #12]
 800b86c:	f7ff ff5c 	bl	800b728 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b870:	2c0b      	cmp	r4, #11
 800b872:	bf98      	it	ls
 800b874:	4b1b      	ldrls	r3, [pc, #108]	; (800b8e4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 800b876:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 800b87a:	bf98      	it	ls
 800b87c:	5d19      	ldrbls	r1, [r3, r4]
 800b87e:	f8ad 701e 	strh.w	r7, [sp, #30]
 800b882:	bf88      	it	hi
 800b884:	2100      	movhi	r1, #0
 800b886:	fb02 8307 	mla	r3, r2, r7, r8
 800b88a:	10c9      	asrs	r1, r1, #3
 800b88c:	fb01 0003 	mla	r0, r1, r3, r0
 800b890:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
 800b894:	9005      	str	r0, [sp, #20]
 800b896:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 800b89a:	6870      	ldr	r0, [r6, #4]
 800b89c:	f88d 5021 	strb.w	r5, [sp, #33]	; 0x21
 800b8a0:	2300      	movs	r3, #0
 800b8a2:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800b8a6:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800b8aa:	6803      	ldr	r3, [r0, #0]
 800b8ac:	a901      	add	r1, sp, #4
 800b8ae:	685b      	ldr	r3, [r3, #4]
 800b8b0:	4798      	blx	r3
 800b8b2:	b00a      	add	sp, #40	; 0x28
 800b8b4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b8b8:	2d02      	cmp	r5, #2
 800b8ba:	d109      	bne.n	800b8d0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 800b8bc:	28ff      	cmp	r0, #255	; 0xff
 800b8be:	d105      	bne.n	800b8cc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 800b8c0:	f1bc 0f00 	cmp.w	ip, #0
 800b8c4:	bf14      	ite	ne
 800b8c6:	2340      	movne	r3, #64	; 0x40
 800b8c8:	2320      	moveq	r3, #32
 800b8ca:	e7bd      	b.n	800b848 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800b8cc:	2340      	movs	r3, #64	; 0x40
 800b8ce:	e7bb      	b.n	800b848 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800b8d0:	28ff      	cmp	r0, #255	; 0xff
 800b8d2:	d105      	bne.n	800b8e0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 800b8d4:	f1bc 0f00 	cmp.w	ip, #0
 800b8d8:	bf14      	ite	ne
 800b8da:	2304      	movne	r3, #4
 800b8dc:	2301      	moveq	r3, #1
 800b8de:	e7b3      	b.n	800b848 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800b8e0:	2304      	movs	r3, #4
 800b8e2:	e7b1      	b.n	800b848 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800b8e4:	080238e4 	.word	0x080238e4

0800b8e8 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 800b8e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b8ec:	b08b      	sub	sp, #44	; 0x2c
 800b8ee:	461d      	mov	r5, r3
 800b8f0:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 800b8f4:	f89d 6060 	ldrb.w	r6, [sp, #96]	; 0x60
 800b8f8:	f8bd a05c 	ldrh.w	sl, [sp, #92]	; 0x5c
 800b8fc:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 800b900:	bf14      	ite	ne
 800b902:	2308      	movne	r3, #8
 800b904:	2302      	moveq	r3, #2
 800b906:	2400      	movs	r4, #0
 800b908:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800b90c:	4688      	mov	r8, r1
 800b90e:	4693      	mov	fp, r2
 800b910:	9404      	str	r4, [sp, #16]
 800b912:	4607      	mov	r7, r0
 800b914:	f7ff ff08 	bl	800b728 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b918:	2e0b      	cmp	r6, #11
 800b91a:	bf98      	it	ls
 800b91c:	4b15      	ldrls	r3, [pc, #84]	; (800b974 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 800b91e:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 800b922:	bf98      	it	ls
 800b924:	5d9c      	ldrbls	r4, [r3, r6]
 800b926:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800b92a:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b92e:	fb05 b50a 	mla	r5, r5, sl, fp
 800b932:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 800b936:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b93a:	10e4      	asrs	r4, r4, #3
 800b93c:	fb04 0405 	mla	r4, r4, r5, r0
 800b940:	2300      	movs	r3, #0
 800b942:	6878      	ldr	r0, [r7, #4]
 800b944:	9405      	str	r4, [sp, #20]
 800b946:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b94a:	f8ad a01e 	strh.w	sl, [sp, #30]
 800b94e:	f8cd 8010 	str.w	r8, [sp, #16]
 800b952:	f88d 9020 	strb.w	r9, [sp, #32]
 800b956:	f88d 2023 	strb.w	r2, [sp, #35]	; 0x23
 800b95a:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800b95e:	f88d 6021 	strb.w	r6, [sp, #33]	; 0x21
 800b962:	f88d 6022 	strb.w	r6, [sp, #34]	; 0x22
 800b966:	6803      	ldr	r3, [r0, #0]
 800b968:	a901      	add	r1, sp, #4
 800b96a:	685b      	ldr	r3, [r3, #4]
 800b96c:	4798      	blx	r3
 800b96e:	b00b      	add	sp, #44	; 0x2c
 800b970:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b974:	080238e4 	.word	0x080238e4

0800b978 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 800b978:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b97c:	461e      	mov	r6, r3
 800b97e:	4b0a      	ldr	r3, [pc, #40]	; (800b9a8 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 800b980:	460f      	mov	r7, r1
 800b982:	881d      	ldrh	r5, [r3, #0]
 800b984:	4690      	mov	r8, r2
 800b986:	f7f6 ff1f 	bl	80027c8 <_ZN8touchgfx3HAL3lcdEv>
 800b98a:	6803      	ldr	r3, [r0, #0]
 800b98c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b98e:	4798      	blx	r3
 800b990:	280b      	cmp	r0, #11
 800b992:	bf9a      	itte	ls
 800b994:	4b05      	ldrls	r3, [pc, #20]	; (800b9ac <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 800b996:	5c1c      	ldrbls	r4, [r3, r0]
 800b998:	2400      	movhi	r4, #0
 800b99a:	fb08 7005 	mla	r0, r8, r5, r7
 800b99e:	10e4      	asrs	r4, r4, #3
 800b9a0:	fb04 6000 	mla	r0, r4, r0, r6
 800b9a4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b9a8:	200155fe 	.word	0x200155fe
 800b9ac:	080238e4 	.word	0x080238e4

0800b9b0 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 800b9b0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b9b2:	b08b      	sub	sp, #44	; 0x2c
 800b9b4:	461f      	mov	r7, r3
 800b9b6:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 800b9ba:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800b9be:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800b9c2:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b9c6:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800b9ca:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b9ce:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800b9d2:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b9d6:	2500      	movs	r5, #0
 800b9d8:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 800b9dc:	f88d 3020 	strb.w	r3, [sp, #32]
 800b9e0:	4604      	mov	r4, r0
 800b9e2:	4616      	mov	r6, r2
 800b9e4:	9504      	str	r5, [sp, #16]
 800b9e6:	f7ff fe9f 	bl	800b728 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b9ea:	463a      	mov	r2, r7
 800b9ec:	4631      	mov	r1, r6
 800b9ee:	4603      	mov	r3, r0
 800b9f0:	4620      	mov	r0, r4
 800b9f2:	f7ff ffc1 	bl	800b978 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b9f6:	4b0e      	ldr	r3, [pc, #56]	; (800ba30 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 800b9f8:	9005      	str	r0, [sp, #20]
 800b9fa:	881b      	ldrh	r3, [r3, #0]
 800b9fc:	f8ad 301e 	strh.w	r3, [sp, #30]
 800ba00:	f7f6 fee2 	bl	80027c8 <_ZN8touchgfx3HAL3lcdEv>
 800ba04:	6803      	ldr	r3, [r0, #0]
 800ba06:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ba08:	4798      	blx	r3
 800ba0a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800ba0c:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 800ba10:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 800ba14:	9304      	str	r3, [sp, #16]
 800ba16:	6860      	ldr	r0, [r4, #4]
 800ba18:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800ba1c:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 800ba20:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
 800ba24:	6803      	ldr	r3, [r0, #0]
 800ba26:	a901      	add	r1, sp, #4
 800ba28:	685b      	ldr	r3, [r3, #4]
 800ba2a:	4798      	blx	r3
 800ba2c:	b00b      	add	sp, #44	; 0x2c
 800ba2e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ba30:	200155fe 	.word	0x200155fe

0800ba34 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 800ba34:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ba36:	b08d      	sub	sp, #52	; 0x34
 800ba38:	466b      	mov	r3, sp
 800ba3a:	e883 0006 	stmia.w	r3, {r1, r2}
 800ba3e:	2300      	movs	r3, #0
 800ba40:	9306      	str	r3, [sp, #24]
 800ba42:	6803      	ldr	r3, [r0, #0]
 800ba44:	f8bd 6000 	ldrh.w	r6, [sp]
 800ba48:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800ba4a:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 800ba4e:	2501      	movs	r5, #1
 800ba50:	9503      	str	r5, [sp, #12]
 800ba52:	4604      	mov	r4, r0
 800ba54:	4798      	blx	r3
 800ba56:	463a      	mov	r2, r7
 800ba58:	4631      	mov	r1, r6
 800ba5a:	4603      	mov	r3, r0
 800ba5c:	4620      	mov	r0, r4
 800ba5e:	f7ff ff8b 	bl	800b978 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800ba62:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800ba64:	9307      	str	r3, [sp, #28]
 800ba66:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800ba6a:	f8ad 3020 	strh.w	r3, [sp, #32]
 800ba6e:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800ba72:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800ba76:	4b0f      	ldr	r3, [pc, #60]	; (800bab4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 800ba78:	9004      	str	r0, [sp, #16]
 800ba7a:	881b      	ldrh	r3, [r3, #0]
 800ba7c:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800ba80:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800ba84:	f7f6 fea0 	bl	80027c8 <_ZN8touchgfx3HAL3lcdEv>
 800ba88:	6803      	ldr	r3, [r0, #0]
 800ba8a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ba8c:	4798      	blx	r3
 800ba8e:	23ff      	movs	r3, #255	; 0xff
 800ba90:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 800ba94:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800ba98:	6860      	ldr	r0, [r4, #4]
 800ba9a:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 800ba9e:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 800baa2:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800baa6:	6803      	ldr	r3, [r0, #0]
 800baa8:	a903      	add	r1, sp, #12
 800baaa:	685b      	ldr	r3, [r3, #4]
 800baac:	4798      	blx	r3
 800baae:	6c60      	ldr	r0, [r4, #68]	; 0x44
 800bab0:	b00d      	add	sp, #52	; 0x34
 800bab2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800bab4:	200155fe 	.word	0x200155fe

0800bab8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 800bab8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800babc:	b08c      	sub	sp, #48	; 0x30
 800babe:	461e      	mov	r6, r3
 800bac0:	466d      	mov	r5, sp
 800bac2:	2300      	movs	r3, #0
 800bac4:	e885 0006 	stmia.w	r5, {r1, r2}
 800bac8:	9306      	str	r3, [sp, #24]
 800baca:	6803      	ldr	r3, [r0, #0]
 800bacc:	f8bd 7000 	ldrh.w	r7, [sp]
 800bad0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800bad2:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 800bad6:	2501      	movs	r5, #1
 800bad8:	9503      	str	r5, [sp, #12]
 800bada:	4604      	mov	r4, r0
 800badc:	4798      	blx	r3
 800bade:	4642      	mov	r2, r8
 800bae0:	4639      	mov	r1, r7
 800bae2:	4603      	mov	r3, r0
 800bae4:	4620      	mov	r0, r4
 800bae6:	f7ff ff47 	bl	800b978 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800baea:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800baee:	f8ad 3020 	strh.w	r3, [sp, #32]
 800baf2:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800baf6:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800bafa:	4b11      	ldr	r3, [pc, #68]	; (800bb40 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 800bafc:	9004      	str	r0, [sp, #16]
 800bafe:	881b      	ldrh	r3, [r3, #0]
 800bb00:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800bb04:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800bb06:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800bb0a:	9607      	str	r6, [sp, #28]
 800bb0c:	f7f6 fe5c 	bl	80027c8 <_ZN8touchgfx3HAL3lcdEv>
 800bb10:	6803      	ldr	r3, [r0, #0]
 800bb12:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800bb14:	4798      	blx	r3
 800bb16:	23ff      	movs	r3, #255	; 0xff
 800bb18:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 800bb1c:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800bb20:	6860      	ldr	r0, [r4, #4]
 800bb22:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 800bb26:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 800bb2a:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800bb2e:	6803      	ldr	r3, [r0, #0]
 800bb30:	a903      	add	r1, sp, #12
 800bb32:	685b      	ldr	r3, [r3, #4]
 800bb34:	4798      	blx	r3
 800bb36:	4630      	mov	r0, r6
 800bb38:	b00c      	add	sp, #48	; 0x30
 800bb3a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800bb3e:	bf00      	nop
 800bb40:	200155fe 	.word	0x200155fe

0800bb44 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 800bb44:	b5f0      	push	{r4, r5, r6, r7, lr}
 800bb46:	b085      	sub	sp, #20
 800bb48:	ac02      	add	r4, sp, #8
 800bb4a:	e884 0006 	stmia.w	r4, {r1, r2}
 800bb4e:	4605      	mov	r5, r0
 800bb50:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 800bb54:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 800bb58:	f7ff fde6 	bl	800b728 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800bb5c:	463a      	mov	r2, r7
 800bb5e:	4603      	mov	r3, r0
 800bb60:	4631      	mov	r1, r6
 800bb62:	4628      	mov	r0, r5
 800bb64:	f7ff ff08 	bl	800b978 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800bb68:	4a05      	ldr	r2, [pc, #20]	; (800bb80 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 800bb6a:	682b      	ldr	r3, [r5, #0]
 800bb6c:	8812      	ldrh	r2, [r2, #0]
 800bb6e:	9200      	str	r2, [sp, #0]
 800bb70:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 800bb72:	e894 0006 	ldmia.w	r4, {r1, r2}
 800bb76:	4603      	mov	r3, r0
 800bb78:	4628      	mov	r0, r5
 800bb7a:	47b0      	blx	r6
 800bb7c:	b005      	add	sp, #20
 800bb7e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800bb80:	200155fe 	.word	0x200155fe

0800bb84 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 800bb84:	b570      	push	{r4, r5, r6, lr}
 800bb86:	f890 306a 	ldrb.w	r3, [r0, #106]	; 0x6a
 800bb8a:	4604      	mov	r4, r0
 800bb8c:	b19b      	cbz	r3, 800bbb6 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 800bb8e:	2002      	movs	r0, #2
 800bb90:	f7f4 fdd8 	bl	8000744 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 800bb94:	2300      	movs	r3, #0
 800bb96:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 800bb9a:	f884 3069 	strb.w	r3, [r4, #105]	; 0x69
 800bb9e:	6823      	ldr	r3, [r4, #0]
 800bba0:	4620      	mov	r0, r4
 800bba2:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 800bba6:	f7ff fdbf 	bl	800b728 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800bbaa:	462b      	mov	r3, r5
 800bbac:	4601      	mov	r1, r0
 800bbae:	4620      	mov	r0, r4
 800bbb0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bbb4:	4718      	bx	r3
 800bbb6:	bd70      	pop	{r4, r5, r6, pc}

0800bbb8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 800bbb8:	b538      	push	{r3, r4, r5, lr}
 800bbba:	f890 3078 	ldrb.w	r3, [r0, #120]	; 0x78
 800bbbe:	428b      	cmp	r3, r1
 800bbc0:	4604      	mov	r4, r0
 800bbc2:	460d      	mov	r5, r1
 800bbc4:	d006      	beq.n	800bbd4 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 800bbc6:	6803      	ldr	r3, [r0, #0]
 800bbc8:	b929      	cbnz	r1, 800bbd6 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 800bbca:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 800bbce:	4798      	blx	r3
 800bbd0:	f884 5078 	strb.w	r5, [r4, #120]	; 0x78
 800bbd4:	bd38      	pop	{r3, r4, r5, pc}
 800bbd6:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 800bbda:	e7f8      	b.n	800bbce <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

0800bbdc <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 800bbdc:	b510      	push	{r4, lr}
 800bbde:	4b0d      	ldr	r3, [pc, #52]	; (800bc14 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 800bbe0:	781b      	ldrb	r3, [r3, #0]
 800bbe2:	4604      	mov	r4, r0
 800bbe4:	b95b      	cbnz	r3, 800bbfe <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800bbe6:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 800bbea:	2b02      	cmp	r3, #2
 800bbec:	d007      	beq.n	800bbfe <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800bbee:	6840      	ldr	r0, [r0, #4]
 800bbf0:	f000 f92a 	bl	800be48 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 800bbf4:	b118      	cbz	r0, 800bbfe <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800bbf6:	6862      	ldr	r2, [r4, #4]
 800bbf8:	7a53      	ldrb	r3, [r2, #9]
 800bbfa:	2b00      	cmp	r3, #0
 800bbfc:	d0fc      	beq.n	800bbf8 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 800bbfe:	f7f4 fe9b 	bl	8000938 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800bc02:	4620      	mov	r0, r4
 800bc04:	2100      	movs	r1, #0
 800bc06:	f7ff ffd7 	bl	800bbb8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800bc0a:	4620      	mov	r0, r4
 800bc0c:	f7ff fd8c 	bl	800b728 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800bc10:	bd10      	pop	{r4, pc}
 800bc12:	bf00      	nop
 800bc14:	20015602 	.word	0x20015602

0800bc18 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
 800bc18:	b570      	push	{r4, r5, r6, lr}
 800bc1a:	4604      	mov	r4, r0
 800bc1c:	6803      	ldr	r3, [r0, #0]
 800bc1e:	b919      	cbnz	r1, 800bc28 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
 800bc20:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800bc22:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bc26:	4718      	bx	r3
 800bc28:	2200      	movs	r2, #0
 800bc2a:	f890 6078 	ldrb.w	r6, [r0, #120]	; 0x78
 800bc2e:	f880 2078 	strb.w	r2, [r0, #120]	; 0x78
 800bc32:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800bc34:	4798      	blx	r3
 800bc36:	f884 6078 	strb.w	r6, [r4, #120]	; 0x78
 800bc3a:	4605      	mov	r5, r0
 800bc3c:	2101      	movs	r1, #1
 800bc3e:	4620      	mov	r0, r4
 800bc40:	f7ff ffba 	bl	800bbb8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800bc44:	4628      	mov	r0, r5
 800bc46:	bd70      	pop	{r4, r5, r6, pc}

0800bc48 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 800bc48:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 800bc4c:	1a13      	subs	r3, r2, r0
 800bc4e:	4258      	negs	r0, r3
 800bc50:	4158      	adcs	r0, r3
 800bc52:	4770      	bx	lr

0800bc54 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 800bc54:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 800bc58:	1a9b      	subs	r3, r3, r2
 800bc5a:	2b00      	cmp	r3, #0
 800bc5c:	bfdc      	itt	le
 800bc5e:	6882      	ldrle	r2, [r0, #8]
 800bc60:	189b      	addle	r3, r3, r2
 800bc62:	2b01      	cmp	r3, #1
 800bc64:	bfcc      	ite	gt
 800bc66:	2000      	movgt	r0, #0
 800bc68:	2001      	movle	r0, #1
 800bc6a:	4770      	bx	lr

0800bc6c <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 800bc6c:	6902      	ldr	r2, [r0, #16]
 800bc6e:	6843      	ldr	r3, [r0, #4]
 800bc70:	2024      	movs	r0, #36	; 0x24
 800bc72:	fb00 3002 	mla	r0, r0, r2, r3
 800bc76:	4770      	bx	lr

0800bc78 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 800bc78:	6803      	ldr	r3, [r0, #0]
 800bc7a:	691b      	ldr	r3, [r3, #16]
 800bc7c:	4718      	bx	r3

0800bc7e <_ZN8touchgfx13DMA_Interface7executeEv>:
 800bc7e:	b570      	push	{r4, r5, r6, lr}
 800bc80:	2301      	movs	r3, #1
 800bc82:	7203      	strb	r3, [r0, #8]
 800bc84:	4604      	mov	r4, r0
 800bc86:	6840      	ldr	r0, [r0, #4]
 800bc88:	6803      	ldr	r3, [r0, #0]
 800bc8a:	699b      	ldr	r3, [r3, #24]
 800bc8c:	4798      	blx	r3
 800bc8e:	6803      	ldr	r3, [r0, #0]
 800bc90:	2b40      	cmp	r3, #64	; 0x40
 800bc92:	4605      	mov	r5, r0
 800bc94:	d00c      	beq.n	800bcb0 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800bc96:	d810      	bhi.n	800bcba <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 800bc98:	2b04      	cmp	r3, #4
 800bc9a:	d01d      	beq.n	800bcd8 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 800bc9c:	d804      	bhi.n	800bca8 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 800bc9e:	2b01      	cmp	r3, #1
 800bca0:	d006      	beq.n	800bcb0 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800bca2:	2b02      	cmp	r3, #2
 800bca4:	d02c      	beq.n	800bd00 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 800bca6:	bd70      	pop	{r4, r5, r6, pc}
 800bca8:	2b08      	cmp	r3, #8
 800bcaa:	d01d      	beq.n	800bce8 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 800bcac:	2b20      	cmp	r3, #32
 800bcae:	d1fa      	bne.n	800bca6 <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 800bcb0:	6823      	ldr	r3, [r4, #0]
 800bcb2:	4620      	mov	r0, r4
 800bcb4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800bcb6:	4798      	blx	r3
 800bcb8:	e013      	b.n	800bce2 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 800bcba:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800bcbe:	d0f7      	beq.n	800bcb0 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800bcc0:	d804      	bhi.n	800bccc <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 800bcc2:	2b80      	cmp	r3, #128	; 0x80
 800bcc4:	d0f4      	beq.n	800bcb0 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800bcc6:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800bcca:	e7f0      	b.n	800bcae <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 800bccc:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800bcd0:	d0ee      	beq.n	800bcb0 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800bcd2:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800bcd6:	e7e5      	b.n	800bca4 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 800bcd8:	6823      	ldr	r3, [r4, #0]
 800bcda:	7f01      	ldrb	r1, [r0, #28]
 800bcdc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800bcde:	4620      	mov	r0, r4
 800bce0:	4798      	blx	r3
 800bce2:	6823      	ldr	r3, [r4, #0]
 800bce4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800bce6:	e006      	b.n	800bcf6 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800bce8:	6823      	ldr	r3, [r4, #0]
 800bcea:	7f01      	ldrb	r1, [r0, #28]
 800bcec:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800bcee:	4620      	mov	r0, r4
 800bcf0:	4798      	blx	r3
 800bcf2:	6823      	ldr	r3, [r4, #0]
 800bcf4:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800bcf6:	4629      	mov	r1, r5
 800bcf8:	4620      	mov	r0, r4
 800bcfa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bcfe:	4718      	bx	r3
 800bd00:	6823      	ldr	r3, [r4, #0]
 800bd02:	4620      	mov	r0, r4
 800bd04:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800bd06:	4798      	blx	r3
 800bd08:	e7f3      	b.n	800bcf2 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

0800bd0a <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 800bd0a:	4770      	bx	lr

0800bd0c <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 800bd0c:	4770      	bx	lr

0800bd0e <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 800bd0e:	4770      	bx	lr

0800bd10 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 800bd10:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 800bd14:	1ad2      	subs	r2, r2, r3
 800bd16:	2a00      	cmp	r2, #0
 800bd18:	b510      	push	{r4, lr}
 800bd1a:	bfdc      	itt	le
 800bd1c:	6884      	ldrle	r4, [r0, #8]
 800bd1e:	1912      	addle	r2, r2, r4
 800bd20:	2a01      	cmp	r2, #1
 800bd22:	dd16      	ble.n	800bd52 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 800bd24:	6842      	ldr	r2, [r0, #4]
 800bd26:	2424      	movs	r4, #36	; 0x24
 800bd28:	fb04 2303 	mla	r3, r4, r3, r2
 800bd2c:	f101 0220 	add.w	r2, r1, #32
 800bd30:	f851 4b04 	ldr.w	r4, [r1], #4
 800bd34:	f843 4b04 	str.w	r4, [r3], #4
 800bd38:	4291      	cmp	r1, r2
 800bd3a:	d1f9      	bne.n	800bd30 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 800bd3c:	780a      	ldrb	r2, [r1, #0]
 800bd3e:	701a      	strb	r2, [r3, #0]
 800bd40:	68c3      	ldr	r3, [r0, #12]
 800bd42:	6882      	ldr	r2, [r0, #8]
 800bd44:	f3bf 8f5b 	dmb	ish
 800bd48:	3301      	adds	r3, #1
 800bd4a:	429a      	cmp	r2, r3
 800bd4c:	bfd8      	it	le
 800bd4e:	1a9b      	suble	r3, r3, r2
 800bd50:	60c3      	str	r3, [r0, #12]
 800bd52:	bd10      	pop	{r4, pc}

0800bd54 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 800bd54:	6903      	ldr	r3, [r0, #16]
 800bd56:	6882      	ldr	r2, [r0, #8]
 800bd58:	f3bf 8f5b 	dmb	ish
 800bd5c:	3301      	adds	r3, #1
 800bd5e:	429a      	cmp	r2, r3
 800bd60:	bfd8      	it	le
 800bd62:	1a9b      	suble	r3, r3, r2
 800bd64:	6103      	str	r3, [r0, #16]
 800bd66:	4770      	bx	lr

0800bd68 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 800bd68:	b570      	push	{r4, r5, r6, lr}
 800bd6a:	4604      	mov	r4, r0
 800bd6c:	460e      	mov	r6, r1
 800bd6e:	6860      	ldr	r0, [r4, #4]
 800bd70:	6803      	ldr	r3, [r0, #0]
 800bd72:	685b      	ldr	r3, [r3, #4]
 800bd74:	4798      	blx	r3
 800bd76:	2800      	cmp	r0, #0
 800bd78:	d1f9      	bne.n	800bd6e <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 800bd7a:	4d0d      	ldr	r5, [pc, #52]	; (800bdb0 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 800bd7c:	6828      	ldr	r0, [r5, #0]
 800bd7e:	6803      	ldr	r3, [r0, #0]
 800bd80:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800bd82:	4798      	blx	r3
 800bd84:	f7f4 fde6 	bl	8000954 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 800bd88:	6828      	ldr	r0, [r5, #0]
 800bd8a:	2101      	movs	r1, #1
 800bd8c:	f7ff ff14 	bl	800bbb8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800bd90:	6860      	ldr	r0, [r4, #4]
 800bd92:	6803      	ldr	r3, [r0, #0]
 800bd94:	4631      	mov	r1, r6
 800bd96:	689b      	ldr	r3, [r3, #8]
 800bd98:	4798      	blx	r3
 800bd9a:	6823      	ldr	r3, [r4, #0]
 800bd9c:	4620      	mov	r0, r4
 800bd9e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800bda0:	4798      	blx	r3
 800bda2:	6828      	ldr	r0, [r5, #0]
 800bda4:	6803      	ldr	r3, [r0, #0]
 800bda6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bdaa:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800bdac:	4718      	bx	r3
 800bdae:	bf00      	nop
 800bdb0:	20015604 	.word	0x20015604

0800bdb4 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800bdb4:	b508      	push	{r3, lr}
 800bdb6:	f7f4 fdbf 	bl	8000938 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800bdba:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800bdbe:	f7f4 bdc3 	b.w	8000948 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800bdc2 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800bdc2:	b510      	push	{r4, lr}
 800bdc4:	2114      	movs	r1, #20
 800bdc6:	4604      	mov	r4, r0
 800bdc8:	f014 fcee 	bl	80207a8 <_ZdlPvj>
 800bdcc:	4620      	mov	r0, r4
 800bdce:	bd10      	pop	{r4, pc}

0800bdd0 <_ZN8touchgfx13DMA_Interface5startEv>:
 800bdd0:	b510      	push	{r4, lr}
 800bdd2:	4604      	mov	r4, r0
 800bdd4:	6840      	ldr	r0, [r0, #4]
 800bdd6:	6803      	ldr	r3, [r0, #0]
 800bdd8:	681b      	ldr	r3, [r3, #0]
 800bdda:	4798      	blx	r3
 800bddc:	b948      	cbnz	r0, 800bdf2 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800bdde:	7a63      	ldrb	r3, [r4, #9]
 800bde0:	b13b      	cbz	r3, 800bdf2 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800bde2:	7a23      	ldrb	r3, [r4, #8]
 800bde4:	b92b      	cbnz	r3, 800bdf2 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800bde6:	6823      	ldr	r3, [r4, #0]
 800bde8:	4620      	mov	r0, r4
 800bdea:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800bdec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800bdf0:	4718      	bx	r3
 800bdf2:	bd10      	pop	{r4, pc}

0800bdf4 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 800bdf4:	b570      	push	{r4, r5, r6, lr}
 800bdf6:	4604      	mov	r4, r0
 800bdf8:	6840      	ldr	r0, [r0, #4]
 800bdfa:	6803      	ldr	r3, [r0, #0]
 800bdfc:	681b      	ldr	r3, [r3, #0]
 800bdfe:	4798      	blx	r3
 800be00:	4605      	mov	r5, r0
 800be02:	b930      	cbnz	r0, 800be12 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800be04:	7a23      	ldrb	r3, [r4, #8]
 800be06:	b123      	cbz	r3, 800be12 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800be08:	6860      	ldr	r0, [r4, #4]
 800be0a:	6803      	ldr	r3, [r0, #0]
 800be0c:	695b      	ldr	r3, [r3, #20]
 800be0e:	4798      	blx	r3
 800be10:	7225      	strb	r5, [r4, #8]
 800be12:	6860      	ldr	r0, [r4, #4]
 800be14:	6803      	ldr	r3, [r0, #0]
 800be16:	681b      	ldr	r3, [r3, #0]
 800be18:	4798      	blx	r3
 800be1a:	b928      	cbnz	r0, 800be28 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 800be1c:	6823      	ldr	r3, [r4, #0]
 800be1e:	4620      	mov	r0, r4
 800be20:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800be22:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800be26:	4718      	bx	r3
 800be28:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800be2c:	f7f4 bd9a 	b.w	8000964 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

0800be30 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 800be30:	b510      	push	{r4, lr}
 800be32:	4c04      	ldr	r4, [pc, #16]	; (800be44 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800be34:	6082      	str	r2, [r0, #8]
 800be36:	2200      	movs	r2, #0
 800be38:	e9c0 4100 	strd	r4, r1, [r0]
 800be3c:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800be40:	bd10      	pop	{r4, pc}
 800be42:	bf00      	nop
 800be44:	080238f8 	.word	0x080238f8

0800be48 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800be48:	6840      	ldr	r0, [r0, #4]
 800be4a:	6803      	ldr	r3, [r0, #0]
 800be4c:	681b      	ldr	r3, [r3, #0]
 800be4e:	4718      	bx	r3

0800be50 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 800be50:	4b06      	ldr	r3, [pc, #24]	; (800be6c <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
 800be52:	60c1      	str	r1, [r0, #12]
 800be54:	094a      	lsrs	r2, r1, #5
 800be56:	ea03 2311 	and.w	r3, r3, r1, lsr #8
 800be5a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 800be5e:	4313      	orrs	r3, r2
 800be60:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 800be64:	4319      	orrs	r1, r3
 800be66:	8201      	strh	r1, [r0, #16]
 800be68:	4770      	bx	lr
 800be6a:	bf00      	nop
 800be6c:	fffff800 	.word	0xfffff800

0800be70 <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 800be70:	f1a0 0008 	sub.w	r0, r0, #8
 800be74:	e7ec      	b.n	800be50 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
 800be76:	bf00      	nop

0800be78 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
 800be78:	b508      	push	{r3, lr}
 800be7a:	4b05      	ldr	r3, [pc, #20]	; (800be90 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
 800be7c:	6818      	ldr	r0, [r3, #0]
 800be7e:	6803      	ldr	r3, [r0, #0]
 800be80:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 800be84:	4798      	blx	r3
 800be86:	1e43      	subs	r3, r0, #1
 800be88:	4258      	negs	r0, r3
 800be8a:	4158      	adcs	r0, r3
 800be8c:	bd08      	pop	{r3, pc}
 800be8e:	bf00      	nop
 800be90:	20015604 	.word	0x20015604

0800be94 <_ZN8touchgfx13PainterRGB565D1Ev>:
 800be94:	4770      	bx	lr

0800be96 <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
 800be96:	3808      	subs	r0, #8
 800be98:	4770      	bx	lr

0800be9a <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
 800be9a:	b430      	push	{r4, r5}
 800be9c:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 800bea0:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
 800bea4:	8a02      	ldrh	r2, [r0, #16]
 800bea6:	9202      	str	r2, [sp, #8]
 800bea8:	f89d 3010 	ldrb.w	r3, [sp, #16]
 800beac:	68c2      	ldr	r2, [r0, #12]
 800beae:	4629      	mov	r1, r5
 800beb0:	4620      	mov	r0, r4
 800beb2:	bc30      	pop	{r4, r5}
 800beb4:	f7f4 bf14 	b.w	8000ce0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

0800beb8 <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
 800beb8:	f7f4 bf08 	b.w	8000ccc <_ZN8touchgfx5paint6rgb5658tearDownEv>

0800bebc <_ZN8touchgfx13PainterRGB565D0Ev>:
 800bebc:	b510      	push	{r4, lr}
 800bebe:	2114      	movs	r1, #20
 800bec0:	4604      	mov	r4, r0
 800bec2:	f014 fc71 	bl	80207a8 <_ZdlPvj>
 800bec6:	4620      	mov	r0, r4
 800bec8:	bd10      	pop	{r4, pc}

0800beca <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
 800beca:	f1a0 0008 	sub.w	r0, r0, #8
 800bece:	e7f5      	b.n	800bebc <_ZN8touchgfx13PainterRGB565D0Ev>

0800bed0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 800bed0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800bed2:	6803      	ldr	r3, [r0, #0]
 800bed4:	460d      	mov	r5, r1
 800bed6:	4604      	mov	r4, r0
 800bed8:	4601      	mov	r1, r0
 800beda:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800bedc:	a802      	add	r0, sp, #8
 800bede:	4798      	blx	r3
 800bee0:	6828      	ldr	r0, [r5, #0]
 800bee2:	6869      	ldr	r1, [r5, #4]
 800bee4:	466b      	mov	r3, sp
 800bee6:	c303      	stmia	r3!, {r0, r1}
 800bee8:	4668      	mov	r0, sp
 800beea:	4619      	mov	r1, r3
 800beec:	f7fe ffae 	bl	800ae4c <_ZN8touchgfx4RectaNERKS0_>
 800bef0:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800bef2:	b1a8      	cbz	r0, 800bf20 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x50>
 800bef4:	6803      	ldr	r3, [r0, #0]
 800bef6:	1d21      	adds	r1, r4, #4
 800bef8:	68db      	ldr	r3, [r3, #12]
 800befa:	4798      	blx	r3
 800befc:	b180      	cbz	r0, 800bf20 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x50>
 800befe:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 800bf02:	2b00      	cmp	r3, #0
 800bf04:	dd0c      	ble.n	800bf20 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x50>
 800bf06:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
 800bf0a:	2d00      	cmp	r5, #0
 800bf0c:	dd08      	ble.n	800bf20 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x50>
 800bf0e:	4a2d      	ldr	r2, [pc, #180]	; (800bfc4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xf4>)
 800bf10:	7812      	ldrb	r2, [r2, #0]
 800bf12:	b13a      	cbz	r2, 800bf24 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x54>
 800bf14:	2a01      	cmp	r2, #1
 800bf16:	d02d      	beq.n	800bf74 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa4>
 800bf18:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800bf1a:	6803      	ldr	r3, [r0, #0]
 800bf1c:	691b      	ldr	r3, [r3, #16]
 800bf1e:	4798      	blx	r3
 800bf20:	b004      	add	sp, #16
 800bf22:	bd70      	pop	{r4, r5, r6, pc}
 800bf24:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800bf28:	441d      	add	r5, r3
 800bf2a:	b2ad      	uxth	r5, r5
 800bf2c:	b22e      	sxth	r6, r5
 800bf2e:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 800bf32:	42b3      	cmp	r3, r6
 800bf34:	daf0      	bge.n	800bf18 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800bf36:	6823      	ldr	r3, [r4, #0]
 800bf38:	4669      	mov	r1, sp
 800bf3a:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800bf3c:	4620      	mov	r0, r4
 800bf3e:	4798      	blx	r3
 800bf40:	b940      	cbnz	r0, 800bf54 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x84>
 800bf42:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 800bf46:	2b01      	cmp	r3, #1
 800bf48:	d004      	beq.n	800bf54 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x84>
 800bf4a:	3301      	adds	r3, #1
 800bf4c:	105b      	asrs	r3, r3, #1
 800bf4e:	f8ad 3006 	strh.w	r3, [sp, #6]
 800bf52:	e7f0      	b.n	800bf36 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x66>
 800bf54:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800bf58:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800bf5c:	4413      	add	r3, r2
 800bf5e:	b29b      	uxth	r3, r3
 800bf60:	441a      	add	r2, r3
 800bf62:	b212      	sxth	r2, r2
 800bf64:	4296      	cmp	r6, r2
 800bf66:	f8ad 3002 	strh.w	r3, [sp, #2]
 800bf6a:	dae0      	bge.n	800bf2e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 800bf6c:	1aeb      	subs	r3, r5, r3
 800bf6e:	f8ad 3006 	strh.w	r3, [sp, #6]
 800bf72:	e7dc      	b.n	800bf2e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 800bf74:	f8bd 5000 	ldrh.w	r5, [sp]
 800bf78:	441d      	add	r5, r3
 800bf7a:	b2ad      	uxth	r5, r5
 800bf7c:	b22e      	sxth	r6, r5
 800bf7e:	f9bd 3000 	ldrsh.w	r3, [sp]
 800bf82:	42b3      	cmp	r3, r6
 800bf84:	dac8      	bge.n	800bf18 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800bf86:	6823      	ldr	r3, [r4, #0]
 800bf88:	4669      	mov	r1, sp
 800bf8a:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800bf8c:	4620      	mov	r0, r4
 800bf8e:	4798      	blx	r3
 800bf90:	b940      	cbnz	r0, 800bfa4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xd4>
 800bf92:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 800bf96:	2b01      	cmp	r3, #1
 800bf98:	d004      	beq.n	800bfa4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xd4>
 800bf9a:	3301      	adds	r3, #1
 800bf9c:	105b      	asrs	r3, r3, #1
 800bf9e:	f8ad 3004 	strh.w	r3, [sp, #4]
 800bfa2:	e7f0      	b.n	800bf86 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xb6>
 800bfa4:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 800bfa8:	f8bd 3000 	ldrh.w	r3, [sp]
 800bfac:	4413      	add	r3, r2
 800bfae:	b29b      	uxth	r3, r3
 800bfb0:	441a      	add	r2, r3
 800bfb2:	b212      	sxth	r2, r2
 800bfb4:	4296      	cmp	r6, r2
 800bfb6:	f8ad 3000 	strh.w	r3, [sp]
 800bfba:	dae0      	bge.n	800bf7e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 800bfbc:	1aeb      	subs	r3, r5, r3
 800bfbe:	f8ad 3004 	strh.w	r3, [sp, #4]
 800bfc2:	e7dc      	b.n	800bf7e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 800bfc4:	200155fc 	.word	0x200155fc

0800bfc8 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 800bfc8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800bfca:	6803      	ldr	r3, [r0, #0]
 800bfcc:	4604      	mov	r4, r0
 800bfce:	4601      	mov	r1, r0
 800bfd0:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800bfd2:	4668      	mov	r0, sp
 800bfd4:	4798      	blx	r3
 800bfd6:	2100      	movs	r1, #0
 800bfd8:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800bfdc:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800bfe0:	9102      	str	r1, [sp, #8]
 800bfe2:	4668      	mov	r0, sp
 800bfe4:	a902      	add	r1, sp, #8
 800bfe6:	f8ad 200c 	strh.w	r2, [sp, #12]
 800bfea:	f8ad 300e 	strh.w	r3, [sp, #14]
 800bfee:	f7fe ff2d 	bl	800ae4c <_ZN8touchgfx4RectaNERKS0_>
 800bff2:	6823      	ldr	r3, [r4, #0]
 800bff4:	4669      	mov	r1, sp
 800bff6:	691b      	ldr	r3, [r3, #16]
 800bff8:	4620      	mov	r0, r4
 800bffa:	4798      	blx	r3
 800bffc:	b004      	add	sp, #16
 800bffe:	bd10      	pop	{r4, pc}

0800c000 <_ZN8touchgfx12CanvasWidgetC1Ev>:
 800c000:	2101      	movs	r1, #1
 800c002:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 800c006:	490b      	ldr	r1, [pc, #44]	; (800c034 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
 800c008:	6001      	str	r1, [r0, #0]
 800c00a:	2200      	movs	r2, #0
 800c00c:	21ff      	movs	r1, #255	; 0xff
 800c00e:	8082      	strh	r2, [r0, #4]
 800c010:	80c2      	strh	r2, [r0, #6]
 800c012:	8102      	strh	r2, [r0, #8]
 800c014:	8142      	strh	r2, [r0, #10]
 800c016:	8182      	strh	r2, [r0, #12]
 800c018:	81c2      	strh	r2, [r0, #14]
 800c01a:	8202      	strh	r2, [r0, #16]
 800c01c:	8242      	strh	r2, [r0, #18]
 800c01e:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800c022:	61c2      	str	r2, [r0, #28]
 800c024:	8402      	strh	r2, [r0, #32]
 800c026:	8442      	strh	r2, [r0, #34]	; 0x22
 800c028:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800c02c:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
 800c030:	6282      	str	r2, [r0, #40]	; 0x28
 800c032:	4770      	bx	lr
 800c034:	08023954 	.word	0x08023954

0800c038 <_ZN8touchgfx17AbstractDataGraph9setScaleXEib>:
 800c038:	6301      	str	r1, [r0, #48]	; 0x30
 800c03a:	4770      	bx	lr

0800c03c <_ZNK8touchgfx17AbstractDataGraph9getScaleXEv>:
 800c03c:	6b00      	ldr	r0, [r0, #48]	; 0x30
 800c03e:	4770      	bx	lr

0800c040 <_ZN8touchgfx17AbstractDataGraph9setScaleYEib>:
 800c040:	6341      	str	r1, [r0, #52]	; 0x34
 800c042:	4770      	bx	lr

0800c044 <_ZNK8touchgfx17AbstractDataGraph9getScaleYEv>:
 800c044:	6b40      	ldr	r0, [r0, #52]	; 0x34
 800c046:	4770      	bx	lr

0800c048 <_ZN8touchgfx16DynamicDataGraph14beforeAddValueEv>:
 800c048:	4770      	bx	lr

0800c04a <_ZNK8touchgfx16DynamicDataGraph9dataIndexEs>:
 800c04a:	4608      	mov	r0, r1
 800c04c:	4770      	bx	lr

0800c04e <_ZNK8touchgfx16DynamicDataGraph18indexToGlobalIndexEs>:
 800c04e:	4608      	mov	r0, r1
 800c050:	4770      	bx	lr

0800c052 <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE>:
 800c052:	b530      	push	{r4, r5, lr}
 800c054:	460d      	mov	r5, r1
 800c056:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 800c058:	8949      	ldrh	r1, [r1, #10]
 800c05a:	1ac9      	subs	r1, r1, r3
 800c05c:	6803      	ldr	r3, [r0, #0]
 800c05e:	b085      	sub	sp, #20
 800c060:	f8d3 3104 	ldr.w	r3, [r3, #260]	; 0x104
 800c064:	f10d 0206 	add.w	r2, sp, #6
 800c068:	b209      	sxth	r1, r1
 800c06a:	4604      	mov	r4, r0
 800c06c:	4798      	blx	r3
 800c06e:	b1a0      	cbz	r0, 800c09a <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 800c070:	792b      	ldrb	r3, [r5, #4]
 800c072:	b993      	cbnz	r3, 800c09a <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 800c074:	f8d4 0128 	ldr.w	r0, [r4, #296]	; 0x128
 800c078:	b178      	cbz	r0, 800c09a <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 800c07a:	6803      	ldr	r3, [r0, #0]
 800c07c:	68db      	ldr	r3, [r3, #12]
 800c07e:	4798      	blx	r3
 800c080:	b158      	cbz	r0, 800c09a <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 800c082:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 800c086:	f8d4 0128 	ldr.w	r0, [r4, #296]	; 0x128
 800c08a:	f8ad 3008 	strh.w	r3, [sp, #8]
 800c08e:	9503      	str	r5, [sp, #12]
 800c090:	6803      	ldr	r3, [r0, #0]
 800c092:	aa02      	add	r2, sp, #8
 800c094:	689b      	ldr	r3, [r3, #8]
 800c096:	4621      	mov	r1, r4
 800c098:	4798      	blx	r3
 800c09a:	b005      	add	sp, #20
 800c09c:	bd30      	pop	{r4, r5, pc}

0800c09e <_ZN8touchgfx17AbstractDataGraph20setGraphRangeXScaledEii>:
 800c09e:	b510      	push	{r4, lr}
 800c0a0:	428a      	cmp	r2, r1
 800c0a2:	bfbe      	ittt	lt
 800c0a4:	460b      	movlt	r3, r1
 800c0a6:	4611      	movlt	r1, r2
 800c0a8:	461a      	movlt	r2, r3
 800c0aa:	f8d0 312c 	ldr.w	r3, [r0, #300]	; 0x12c
 800c0ae:	428b      	cmp	r3, r1
 800c0b0:	4604      	mov	r4, r0
 800c0b2:	d103      	bne.n	800c0bc <_ZN8touchgfx17AbstractDataGraph20setGraphRangeXScaledEii+0x1e>
 800c0b4:	f8d0 3130 	ldr.w	r3, [r0, #304]	; 0x130
 800c0b8:	4293      	cmp	r3, r2
 800c0ba:	d011      	beq.n	800c0e0 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeXScaledEii+0x42>
 800c0bc:	f8c4 112c 	str.w	r1, [r4, #300]	; 0x12c
 800c0c0:	f8c4 2130 	str.w	r2, [r4, #304]	; 0x130
 800c0c4:	f104 00bc 	add.w	r0, r4, #188	; 0xbc
 800c0c8:	f005 ffe9 	bl	801209e <_ZNK8touchgfx8Drawable10invalidateEv>
 800c0cc:	f104 0038 	add.w	r0, r4, #56	; 0x38
 800c0d0:	f005 ffe5 	bl	801209e <_ZNK8touchgfx8Drawable10invalidateEv>
 800c0d4:	f104 00e8 	add.w	r0, r4, #232	; 0xe8
 800c0d8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c0dc:	f005 bfdf 	b.w	801209e <_ZNK8touchgfx8Drawable10invalidateEv>
 800c0e0:	bd10      	pop	{r4, pc}

0800c0e2 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeYScaledEii>:
 800c0e2:	b510      	push	{r4, lr}
 800c0e4:	428a      	cmp	r2, r1
 800c0e6:	bfbe      	ittt	lt
 800c0e8:	460b      	movlt	r3, r1
 800c0ea:	4611      	movlt	r1, r2
 800c0ec:	461a      	movlt	r2, r3
 800c0ee:	f8d0 3134 	ldr.w	r3, [r0, #308]	; 0x134
 800c0f2:	428b      	cmp	r3, r1
 800c0f4:	4604      	mov	r4, r0
 800c0f6:	d103      	bne.n	800c100 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeYScaledEii+0x1e>
 800c0f8:	f8d0 3138 	ldr.w	r3, [r0, #312]	; 0x138
 800c0fc:	4293      	cmp	r3, r2
 800c0fe:	d011      	beq.n	800c124 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeYScaledEii+0x42>
 800c100:	f8c4 1134 	str.w	r1, [r4, #308]	; 0x134
 800c104:	f8c4 2138 	str.w	r2, [r4, #312]	; 0x138
 800c108:	f104 0064 	add.w	r0, r4, #100	; 0x64
 800c10c:	f005 ffc7 	bl	801209e <_ZNK8touchgfx8Drawable10invalidateEv>
 800c110:	f104 0038 	add.w	r0, r4, #56	; 0x38
 800c114:	f005 ffc3 	bl	801209e <_ZNK8touchgfx8Drawable10invalidateEv>
 800c118:	f104 0090 	add.w	r0, r4, #144	; 0x90
 800c11c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c120:	f005 bfbd 	b.w	801209e <_ZNK8touchgfx8Drawable10invalidateEv>
 800c124:	bd10      	pop	{r4, pc}

0800c126 <_ZN8touchgfx17AbstractDataGraph5clearEv>:
 800c126:	2300      	movs	r3, #0
 800c128:	f8a0 311e 	strh.w	r3, [r0, #286]	; 0x11e
 800c12c:	3038      	adds	r0, #56	; 0x38
 800c12e:	f005 bfb6 	b.w	801209e <_ZNK8touchgfx8Drawable10invalidateEv>

0800c132 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi>:
 800c132:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c136:	f9b0 311e 	ldrsh.w	r3, [r0, #286]	; 0x11e
 800c13a:	4605      	mov	r5, r0
 800c13c:	4688      	mov	r8, r1
 800c13e:	4617      	mov	r7, r2
 800c140:	2b00      	cmp	r3, #0
 800c142:	d03f      	beq.n	800c1c4 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x92>
 800c144:	6803      	ldr	r3, [r0, #0]
 800c146:	f8d3 3130 	ldr.w	r3, [r3, #304]	; 0x130
 800c14a:	4798      	blx	r3
 800c14c:	682b      	ldr	r3, [r5, #0]
 800c14e:	4604      	mov	r4, r0
 800c150:	f8d3 3134 	ldr.w	r3, [r3, #308]	; 0x134
 800c154:	4628      	mov	r0, r5
 800c156:	4798      	blx	r3
 800c158:	4284      	cmp	r4, r0
 800c15a:	bfc8      	it	gt
 800c15c:	4623      	movgt	r3, r4
 800c15e:	f9b5 611e 	ldrsh.w	r6, [r5, #286]	; 0x11e
 800c162:	bfc4      	itt	gt
 800c164:	4604      	movgt	r4, r0
 800c166:	4618      	movgt	r0, r3
 800c168:	ea24 73e4 	bic.w	r3, r4, r4, asr #31
 800c16c:	42b3      	cmp	r3, r6
 800c16e:	da29      	bge.n	800c1c4 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x92>
 800c170:	42b0      	cmp	r0, r6
 800c172:	bfa8      	it	ge
 800c174:	4630      	movge	r0, r6
 800c176:	2800      	cmp	r0, #0
 800c178:	db24      	blt.n	800c1c4 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x92>
 800c17a:	f1b8 0f00 	cmp.w	r8, #0
 800c17e:	d11e      	bne.n	800c1be <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x8c>
 800c180:	f8d5 2144 	ldr.w	r2, [r5, #324]	; 0x144
 800c184:	f852 1023 	ldr.w	r1, [r2, r3, lsl #2]
 800c188:	460c      	mov	r4, r1
 800c18a:	009a      	lsls	r2, r3, #2
 800c18c:	4298      	cmp	r0, r3
 800c18e:	dd0b      	ble.n	800c1a8 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x76>
 800c190:	f8d5 6144 	ldr.w	r6, [r5, #324]	; 0x144
 800c194:	58b6      	ldr	r6, [r6, r2]
 800c196:	42b1      	cmp	r1, r6
 800c198:	bfa8      	it	ge
 800c19a:	4631      	movge	r1, r6
 800c19c:	42b4      	cmp	r4, r6
 800c19e:	bfb8      	it	lt
 800c1a0:	4634      	movlt	r4, r6
 800c1a2:	3301      	adds	r3, #1
 800c1a4:	3204      	adds	r2, #4
 800c1a6:	e7f1      	b.n	800c18c <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x5a>
 800c1a8:	1bc9      	subs	r1, r1, r7
 800c1aa:	193a      	adds	r2, r7, r4
 800c1ac:	4291      	cmp	r1, r2
 800c1ae:	d009      	beq.n	800c1c4 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x92>
 800c1b0:	682b      	ldr	r3, [r5, #0]
 800c1b2:	4628      	mov	r0, r5
 800c1b4:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800c1b8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800c1bc:	4718      	bx	r3
 800c1be:	427c      	negs	r4, r7
 800c1c0:	4639      	mov	r1, r7
 800c1c2:	e7e2      	b.n	800c18a <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x58>
 800c1c4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800c1c8 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE>:
 800c1c8:	b530      	push	{r4, r5, lr}
 800c1ca:	790b      	ldrb	r3, [r1, #4]
 800c1cc:	2b02      	cmp	r3, #2
 800c1ce:	b085      	sub	sp, #20
 800c1d0:	4604      	mov	r4, r0
 800c1d2:	460d      	mov	r5, r1
 800c1d4:	d020      	beq.n	800c218 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 800c1d6:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 800c1d8:	88c9      	ldrh	r1, [r1, #6]
 800c1da:	1ac9      	subs	r1, r1, r3
 800c1dc:	6803      	ldr	r3, [r0, #0]
 800c1de:	f10d 0206 	add.w	r2, sp, #6
 800c1e2:	f8d3 3104 	ldr.w	r3, [r3, #260]	; 0x104
 800c1e6:	b209      	sxth	r1, r1
 800c1e8:	4798      	blx	r3
 800c1ea:	b1a8      	cbz	r0, 800c218 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 800c1ec:	792b      	ldrb	r3, [r5, #4]
 800c1ee:	2b01      	cmp	r3, #1
 800c1f0:	d812      	bhi.n	800c218 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 800c1f2:	f8d4 0124 	ldr.w	r0, [r4, #292]	; 0x124
 800c1f6:	b178      	cbz	r0, 800c218 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 800c1f8:	6803      	ldr	r3, [r0, #0]
 800c1fa:	68db      	ldr	r3, [r3, #12]
 800c1fc:	4798      	blx	r3
 800c1fe:	b158      	cbz	r0, 800c218 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 800c200:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 800c204:	f8d4 0124 	ldr.w	r0, [r4, #292]	; 0x124
 800c208:	f8ad 3008 	strh.w	r3, [sp, #8]
 800c20c:	9503      	str	r5, [sp, #12]
 800c20e:	6803      	ldr	r3, [r0, #0]
 800c210:	aa02      	add	r2, sp, #8
 800c212:	689b      	ldr	r3, [r3, #8]
 800c214:	4621      	mov	r1, r4
 800c216:	4798      	blx	r3
 800c218:	b005      	add	sp, #20
 800c21a:	bd30      	pop	{r4, r5, pc}

0800c21c <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_>:
 800c21c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c220:	4604      	mov	r4, r0
 800c222:	f9b0 011e 	ldrsh.w	r0, [r0, #286]	; 0x11e
 800c226:	9e06      	ldr	r6, [sp, #24]
 800c228:	4690      	mov	r8, r2
 800c22a:	461f      	mov	r7, r3
 800c22c:	b928      	cbnz	r0, 800c23a <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x1e>
 800c22e:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800c232:	8033      	strh	r3, [r6, #0]
 800c234:	803b      	strh	r3, [r7, #0]
 800c236:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c23a:	f8b4 2118 	ldrh.w	r2, [r4, #280]	; 0x118
 800c23e:	f9b4 0116 	ldrsh.w	r0, [r4, #278]	; 0x116
 800c242:	1883      	adds	r3, r0, r2
 800c244:	f8b4 2040 	ldrh.w	r2, [r4, #64]	; 0x40
 800c248:	1ad2      	subs	r2, r2, r3
 800c24a:	b212      	sxth	r2, r2
 800c24c:	2a01      	cmp	r2, #1
 800c24e:	dc07      	bgt.n	800c260 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x44>
 800c250:	2300      	movs	r3, #0
 800c252:	803b      	strh	r3, [r7, #0]
 800c254:	f8b4 311e 	ldrh.w	r3, [r4, #286]	; 0x11e
 800c258:	3b01      	subs	r3, #1
 800c25a:	8033      	strh	r3, [r6, #0]
 800c25c:	2001      	movs	r0, #1
 800c25e:	e7ea      	b.n	800c236 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x1a>
 800c260:	1a08      	subs	r0, r1, r0
 800c262:	f8d4 3130 	ldr.w	r3, [r4, #304]	; 0x130
 800c266:	f8d4 112c 	ldr.w	r1, [r4, #300]	; 0x12c
 800c26a:	6b25      	ldr	r5, [r4, #48]	; 0x30
 800c26c:	1a5b      	subs	r3, r3, r1
 800c26e:	ea4f 1040 	mov.w	r0, r0, lsl #5
 800c272:	d45b      	bmi.n	800c32c <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x110>
 800c274:	eb05 0343 	add.w	r3, r5, r3, lsl #1
 800c278:	fb93 f1f5 	sdiv	r1, r3, r5
 800c27c:	2302      	movs	r3, #2
 800c27e:	fb91 f1f3 	sdiv	r1, r1, r3
 800c282:	3a01      	subs	r2, #1
 800c284:	f006 f8cc 	bl	8012420 <_ZN8touchgfx6muldivElll>
 800c288:	f8d4 112c 	ldr.w	r1, [r4, #300]	; 0x12c
 800c28c:	f8d4 c030 	ldr.w	ip, [r4, #48]	; 0x30
 800c290:	2900      	cmp	r1, #0
 800c292:	db57      	blt.n	800c344 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x128>
 800c294:	eb0c 0341 	add.w	r3, ip, r1, lsl #1
 800c298:	2502      	movs	r5, #2
 800c29a:	fb93 f3fc 	sdiv	r3, r3, ip
 800c29e:	fb93 f3f5 	sdiv	r3, r3, r5
 800c2a2:	eb00 1543 	add.w	r5, r0, r3, lsl #5
 800c2a6:	f8d4 2130 	ldr.w	r2, [r4, #304]	; 0x130
 800c2aa:	f9b4 3116 	ldrsh.w	r3, [r4, #278]	; 0x116
 800c2ae:	1a52      	subs	r2, r2, r1
 800c2b0:	eba8 0003 	sub.w	r0, r8, r3
 800c2b4:	ea4f 1040 	mov.w	r0, r0, lsl #5
 800c2b8:	d450      	bmi.n	800c35c <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x140>
 800c2ba:	eb0c 0242 	add.w	r2, ip, r2, lsl #1
 800c2be:	fb92 f1fc 	sdiv	r1, r2, ip
 800c2c2:	2202      	movs	r2, #2
 800c2c4:	fb91 f1f2 	sdiv	r1, r1, r2
 800c2c8:	f8b4 2118 	ldrh.w	r2, [r4, #280]	; 0x118
 800c2cc:	4413      	add	r3, r2
 800c2ce:	f8b4 2040 	ldrh.w	r2, [r4, #64]	; 0x40
 800c2d2:	1ad2      	subs	r2, r2, r3
 800c2d4:	b212      	sxth	r2, r2
 800c2d6:	3a01      	subs	r2, #1
 800c2d8:	f006 f8a2 	bl	8012420 <_ZN8touchgfx6muldivElll>
 800c2dc:	f8d4 312c 	ldr.w	r3, [r4, #300]	; 0x12c
 800c2e0:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800c2e2:	2b00      	cmp	r3, #0
 800c2e4:	db46      	blt.n	800c374 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x158>
 800c2e6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 800c2ea:	fb93 f3f2 	sdiv	r3, r3, r2
 800c2ee:	2202      	movs	r2, #2
 800c2f0:	fb93 f3f2 	sdiv	r3, r3, r2
 800c2f4:	eb00 1343 	add.w	r3, r0, r3, lsl #5
 800c2f8:	429d      	cmp	r5, r3
 800c2fa:	bfde      	ittt	le
 800c2fc:	461a      	movle	r2, r3
 800c2fe:	462b      	movle	r3, r5
 800c300:	4615      	movle	r5, r2
 800c302:	2d00      	cmp	r5, #0
 800c304:	bfa4      	itt	ge
 800c306:	351f      	addge	r5, #31
 800c308:	116d      	asrge	r5, r5, #5
 800c30a:	f04f 0020 	mov.w	r0, #32
 800c30e:	bfb8      	it	lt
 800c310:	fb95 f5f0 	sdivlt	r5, r5, r0
 800c314:	b22d      	sxth	r5, r5
 800c316:	2d00      	cmp	r5, #0
 800c318:	b21b      	sxth	r3, r3
 800c31a:	fb93 f3f0 	sdiv	r3, r3, r0
 800c31e:	803b      	strh	r3, [r7, #0]
 800c320:	8035      	strh	r5, [r6, #0]
 800c322:	da33      	bge.n	800c38c <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x170>
 800c324:	2000      	movs	r0, #0
 800c326:	8030      	strh	r0, [r6, #0]
 800c328:	8038      	strh	r0, [r7, #0]
 800c32a:	e784      	b.n	800c236 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x1a>
 800c32c:	f06f 0101 	mvn.w	r1, #1
 800c330:	fb01 5303 	mla	r3, r1, r3, r5
 800c334:	1e59      	subs	r1, r3, #1
 800c336:	2302      	movs	r3, #2
 800c338:	fb91 f1f5 	sdiv	r1, r1, r5
 800c33c:	fb91 f1f3 	sdiv	r1, r1, r3
 800c340:	4249      	negs	r1, r1
 800c342:	e79e      	b.n	800c282 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x66>
 800c344:	f06f 0301 	mvn.w	r3, #1
 800c348:	fb03 c301 	mla	r3, r3, r1, ip
 800c34c:	3b01      	subs	r3, #1
 800c34e:	2502      	movs	r5, #2
 800c350:	fb93 f3fc 	sdiv	r3, r3, ip
 800c354:	fb93 f3f5 	sdiv	r3, r3, r5
 800c358:	425b      	negs	r3, r3
 800c35a:	e7a2      	b.n	800c2a2 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x86>
 800c35c:	f06f 0101 	mvn.w	r1, #1
 800c360:	fb01 c202 	mla	r2, r1, r2, ip
 800c364:	1e51      	subs	r1, r2, #1
 800c366:	2202      	movs	r2, #2
 800c368:	fb91 f1fc 	sdiv	r1, r1, ip
 800c36c:	fb91 f1f2 	sdiv	r1, r1, r2
 800c370:	4249      	negs	r1, r1
 800c372:	e7a9      	b.n	800c2c8 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0xac>
 800c374:	f06f 0101 	mvn.w	r1, #1
 800c378:	fb01 2303 	mla	r3, r1, r3, r2
 800c37c:	3b01      	subs	r3, #1
 800c37e:	fb93 f3f2 	sdiv	r3, r3, r2
 800c382:	2202      	movs	r2, #2
 800c384:	fb93 f3f2 	sdiv	r3, r3, r2
 800c388:	425b      	negs	r3, r3
 800c38a:	e7b3      	b.n	800c2f4 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0xd8>
 800c38c:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800c390:	f9b7 2000 	ldrsh.w	r2, [r7]
 800c394:	4293      	cmp	r3, r2
 800c396:	dc05      	bgt.n	800c3a4 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x188>
 800c398:	3b01      	subs	r3, #1
 800c39a:	b21b      	sxth	r3, r3
 800c39c:	8033      	strh	r3, [r6, #0]
 800c39e:	2000      	movs	r0, #0
 800c3a0:	803b      	strh	r3, [r7, #0]
 800c3a2:	e748      	b.n	800c236 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x1a>
 800c3a4:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 800c3a8:	803a      	strh	r2, [r7, #0]
 800c3aa:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800c3ae:	f9b6 2000 	ldrsh.w	r2, [r6]
 800c3b2:	4293      	cmp	r3, r2
 800c3b4:	bfdc      	itt	le
 800c3b6:	f103 33ff 	addle.w	r3, r3, #4294967295
 800c3ba:	b21a      	sxthle	r2, r3
 800c3bc:	8032      	strh	r2, [r6, #0]
 800c3be:	e74d      	b.n	800c25c <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x40>

0800c3c0 <_ZN8touchgfx9ContainerC1Ev>:
 800c3c0:	2101      	movs	r1, #1
 800c3c2:	2200      	movs	r2, #0
 800c3c4:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 800c3c8:	4909      	ldr	r1, [pc, #36]	; (800c3f0 <_ZN8touchgfx9ContainerC1Ev+0x30>)
 800c3ca:	8082      	strh	r2, [r0, #4]
 800c3cc:	80c2      	strh	r2, [r0, #6]
 800c3ce:	8102      	strh	r2, [r0, #8]
 800c3d0:	8142      	strh	r2, [r0, #10]
 800c3d2:	8182      	strh	r2, [r0, #12]
 800c3d4:	81c2      	strh	r2, [r0, #14]
 800c3d6:	8202      	strh	r2, [r0, #16]
 800c3d8:	8242      	strh	r2, [r0, #18]
 800c3da:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800c3de:	61c2      	str	r2, [r0, #28]
 800c3e0:	8402      	strh	r2, [r0, #32]
 800c3e2:	8442      	strh	r2, [r0, #34]	; 0x22
 800c3e4:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800c3e8:	6001      	str	r1, [r0, #0]
 800c3ea:	6282      	str	r2, [r0, #40]	; 0x28
 800c3ec:	4770      	bx	lr
 800c3ee:	bf00      	nop
 800c3f0:	0802385c 	.word	0x0802385c

0800c3f4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>:
 800c3f4:	6800      	ldr	r0, [r0, #0]
 800c3f6:	2800      	cmp	r0, #0
 800c3f8:	bfbd      	ittte	lt
 800c3fa:	380f      	sublt	r0, #15
 800c3fc:	2320      	movlt	r3, #32
 800c3fe:	fb90 f0f3 	sdivlt	r0, r0, r3
 800c402:	3010      	addge	r0, #16
 800c404:	bfa8      	it	ge
 800c406:	1140      	asrge	r0, r0, #5
 800c408:	4770      	bx	lr

0800c40a <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs>:
 800c40a:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c40e:	4605      	mov	r5, r0
 800c410:	f9b0 011e 	ldrsh.w	r0, [r0, #286]	; 0x11e
 800c414:	4688      	mov	r8, r1
 800c416:	4691      	mov	r9, r2
 800c418:	469a      	mov	sl, r3
 800c41a:	b360      	cbz	r0, 800c476 <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs+0x6c>
 800c41c:	2700      	movs	r7, #0
 800c41e:	f04f 3bff 	mov.w	fp, #4294967295
 800c422:	f9b5 311e 	ldrsh.w	r3, [r5, #286]	; 0x11e
 800c426:	b23e      	sxth	r6, r7
 800c428:	42b3      	cmp	r3, r6
 800c42a:	dd23      	ble.n	800c474 <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs+0x6a>
 800c42c:	682b      	ldr	r3, [r5, #0]
 800c42e:	4631      	mov	r1, r6
 800c430:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800c434:	4628      	mov	r0, r5
 800c436:	4798      	blx	r3
 800c438:	9001      	str	r0, [sp, #4]
 800c43a:	a801      	add	r0, sp, #4
 800c43c:	f7ff ffda 	bl	800c3f4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c440:	682b      	ldr	r3, [r5, #0]
 800c442:	eba0 0008 	sub.w	r0, r0, r8
 800c446:	b204      	sxth	r4, r0
 800c448:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 800c44c:	4631      	mov	r1, r6
 800c44e:	4628      	mov	r0, r5
 800c450:	4798      	blx	r3
 800c452:	9001      	str	r0, [sp, #4]
 800c454:	a801      	add	r0, sp, #4
 800c456:	f7ff ffcd 	bl	800c3f4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c45a:	eba0 0009 	sub.w	r0, r0, r9
 800c45e:	fb10 f000 	smulbb	r0, r0, r0
 800c462:	fb04 0404 	mla	r4, r4, r4, r0
 800c466:	455c      	cmp	r4, fp
 800c468:	bf3c      	itt	cc
 800c46a:	f8aa 6000 	strhcc.w	r6, [sl]
 800c46e:	46a3      	movcc	fp, r4
 800c470:	3701      	adds	r7, #1
 800c472:	e7d6      	b.n	800c422 <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs+0x18>
 800c474:	2001      	movs	r0, #1
 800c476:	b003      	add	sp, #12
 800c478:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800c47c <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs>:
 800c47c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800c480:	4604      	mov	r4, r0
 800c482:	f9b0 011e 	ldrsh.w	r0, [r0, #286]	; 0x11e
 800c486:	4688      	mov	r8, r1
 800c488:	4691      	mov	r9, r2
 800c48a:	b1f8      	cbz	r0, 800c4cc <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs+0x50>
 800c48c:	2500      	movs	r5, #0
 800c48e:	f04f 37ff 	mov.w	r7, #4294967295
 800c492:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800c496:	b22e      	sxth	r6, r5
 800c498:	42b3      	cmp	r3, r6
 800c49a:	dd16      	ble.n	800c4ca <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs+0x4e>
 800c49c:	6823      	ldr	r3, [r4, #0]
 800c49e:	4631      	mov	r1, r6
 800c4a0:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800c4a4:	4620      	mov	r0, r4
 800c4a6:	4798      	blx	r3
 800c4a8:	9001      	str	r0, [sp, #4]
 800c4aa:	a801      	add	r0, sp, #4
 800c4ac:	f7ff ffa2 	bl	800c3f4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c4b0:	b200      	sxth	r0, r0
 800c4b2:	eba0 0008 	sub.w	r0, r0, r8
 800c4b6:	2800      	cmp	r0, #0
 800c4b8:	bfb8      	it	lt
 800c4ba:	4240      	neglt	r0, r0
 800c4bc:	42b8      	cmp	r0, r7
 800c4be:	bf3c      	itt	cc
 800c4c0:	f8a9 6000 	strhcc.w	r6, [r9]
 800c4c4:	4607      	movcc	r7, r0
 800c4c6:	3501      	adds	r5, #1
 800c4c8:	e7e3      	b.n	800c492 <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs+0x16>
 800c4ca:	2001      	movs	r0, #1
 800c4cc:	b003      	add	sp, #12
 800c4ce:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800c4d2 <_ZN8touchgfx17AbstractDataGraph19setGraphAreaPaddingEssss>:
 800c4d2:	f8a0 3118 	strh.w	r3, [r0, #280]	; 0x118
 800c4d6:	f9bd 3000 	ldrsh.w	r3, [sp]
 800c4da:	f8a0 1114 	strh.w	r1, [r0, #276]	; 0x114
 800c4de:	f8a0 2116 	strh.w	r2, [r0, #278]	; 0x116
 800c4e2:	f8a0 311a 	strh.w	r3, [r0, #282]	; 0x11a
 800c4e6:	4770      	bx	lr

0800c4e8 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>:
 800c4e8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c4ea:	4604      	mov	r4, r0
 800c4ec:	3038      	adds	r0, #56	; 0x38
 800c4ee:	460d      	mov	r5, r1
 800c4f0:	f7fe fb1c 	bl	800ab2c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800c4f4:	f9b4 2042 	ldrsh.w	r2, [r4, #66]	; 0x42
 800c4f8:	9200      	str	r2, [sp, #0]
 800c4fa:	2200      	movs	r2, #0
 800c4fc:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 800c500:	4611      	mov	r1, r2
 800c502:	4628      	mov	r0, r5
 800c504:	f7f6 fc41 	bl	8002d8a <_ZN8touchgfx8Drawable11setPositionEssss>
 800c508:	b003      	add	sp, #12
 800c50a:	bd30      	pop	{r4, r5, pc}

0800c50c <_ZN8touchgfx17AbstractDataGraph14addLeftElementERNS_23AbstractGraphDecorationE>:
 800c50c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c50e:	4604      	mov	r4, r0
 800c510:	3064      	adds	r0, #100	; 0x64
 800c512:	460d      	mov	r5, r1
 800c514:	f7fe fb0a 	bl	800ab2c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800c518:	f9b4 206e 	ldrsh.w	r2, [r4, #110]	; 0x6e
 800c51c:	9200      	str	r2, [sp, #0]
 800c51e:	2200      	movs	r2, #0
 800c520:	f9b4 306c 	ldrsh.w	r3, [r4, #108]	; 0x6c
 800c524:	4611      	mov	r1, r2
 800c526:	4628      	mov	r0, r5
 800c528:	f7f6 fc2f 	bl	8002d8a <_ZN8touchgfx8Drawable11setPositionEssss>
 800c52c:	b003      	add	sp, #12
 800c52e:	bd30      	pop	{r4, r5, pc}

0800c530 <_ZN8touchgfx17AbstractDataGraph16addBottomElementERNS_23AbstractGraphDecorationE>:
 800c530:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c532:	4604      	mov	r4, r0
 800c534:	30e8      	adds	r0, #232	; 0xe8
 800c536:	460d      	mov	r5, r1
 800c538:	f7fe faf8 	bl	800ab2c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800c53c:	f9b4 20f2 	ldrsh.w	r2, [r4, #242]	; 0xf2
 800c540:	9200      	str	r2, [sp, #0]
 800c542:	2200      	movs	r2, #0
 800c544:	f9b4 30f0 	ldrsh.w	r3, [r4, #240]	; 0xf0
 800c548:	4611      	mov	r1, r2
 800c54a:	4628      	mov	r0, r5
 800c54c:	f7f6 fc1d 	bl	8002d8a <_ZN8touchgfx8Drawable11setPositionEssss>
 800c550:	b003      	add	sp, #12
 800c552:	bd30      	pop	{r4, r5, pc}

0800c554 <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs>:
 800c554:	b538      	push	{r3, r4, r5, lr}
 800c556:	f9b0 311e 	ldrsh.w	r3, [r0, #286]	; 0x11e
 800c55a:	428b      	cmp	r3, r1
 800c55c:	460d      	mov	r5, r1
 800c55e:	dd08      	ble.n	800c572 <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs+0x1e>
 800c560:	6e04      	ldr	r4, [r0, #96]	; 0x60
 800c562:	b134      	cbz	r4, 800c572 <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs+0x1e>
 800c564:	6823      	ldr	r3, [r4, #0]
 800c566:	4620      	mov	r0, r4
 800c568:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800c56a:	4629      	mov	r1, r5
 800c56c:	4798      	blx	r3
 800c56e:	69a4      	ldr	r4, [r4, #24]
 800c570:	e7f7      	b.n	800c562 <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs+0xe>
 800c572:	bd38      	pop	{r3, r4, r5, pc}

0800c574 <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs>:
 800c574:	b570      	push	{r4, r5, r6, lr}
 800c576:	f8d0 40e4 	ldr.w	r4, [r0, #228]	; 0xe4
 800c57a:	4606      	mov	r6, r0
 800c57c:	460d      	mov	r5, r1
 800c57e:	b134      	cbz	r4, 800c58e <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs+0x1a>
 800c580:	6823      	ldr	r3, [r4, #0]
 800c582:	4620      	mov	r0, r4
 800c584:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800c586:	4629      	mov	r1, r5
 800c588:	4798      	blx	r3
 800c58a:	69a4      	ldr	r4, [r4, #24]
 800c58c:	e7f7      	b.n	800c57e <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs+0xa>
 800c58e:	f8d6 4110 	ldr.w	r4, [r6, #272]	; 0x110
 800c592:	b134      	cbz	r4, 800c5a2 <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs+0x2e>
 800c594:	6823      	ldr	r3, [r4, #0]
 800c596:	4620      	mov	r0, r4
 800c598:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800c59a:	4629      	mov	r1, r5
 800c59c:	4798      	blx	r3
 800c59e:	69a4      	ldr	r4, [r4, #24]
 800c5a0:	e7f7      	b.n	800c592 <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs+0x1e>
 800c5a2:	bd70      	pop	{r4, r5, r6, pc}

0800c5a4 <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv>:
 800c5a4:	b538      	push	{r3, r4, r5, lr}
 800c5a6:	4604      	mov	r4, r0
 800c5a8:	2500      	movs	r5, #0
 800c5aa:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800c5ae:	42ab      	cmp	r3, r5
 800c5b0:	db05      	blt.n	800c5be <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv+0x1a>
 800c5b2:	b229      	sxth	r1, r5
 800c5b4:	4620      	mov	r0, r4
 800c5b6:	f7ff ffdd 	bl	800c574 <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs>
 800c5ba:	3501      	adds	r5, #1
 800c5bc:	e7f5      	b.n	800c5aa <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv+0x6>
 800c5be:	f104 00bc 	add.w	r0, r4, #188	; 0xbc
 800c5c2:	f005 fd6c 	bl	801209e <_ZNK8touchgfx8Drawable10invalidateEv>
 800c5c6:	f104 00e8 	add.w	r0, r4, #232	; 0xe8
 800c5ca:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800c5ce:	f005 bd66 	b.w	801209e <_ZNK8touchgfx8Drawable10invalidateEv>

0800c5d2 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>:
 800c5d2:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c5d4:	6e05      	ldr	r5, [r0, #96]	; 0x60
 800c5d6:	4604      	mov	r4, r0
 800c5d8:	b15d      	cbz	r5, 800c5f2 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x20>
 800c5da:	f9b4 2042 	ldrsh.w	r2, [r4, #66]	; 0x42
 800c5de:	9200      	str	r2, [sp, #0]
 800c5e0:	2200      	movs	r2, #0
 800c5e2:	4628      	mov	r0, r5
 800c5e4:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 800c5e8:	4611      	mov	r1, r2
 800c5ea:	f7f6 fbce 	bl	8002d8a <_ZN8touchgfx8Drawable11setPositionEssss>
 800c5ee:	69ad      	ldr	r5, [r5, #24]
 800c5f0:	e7f2      	b.n	800c5d8 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x6>
 800c5f2:	f8d4 50e4 	ldr.w	r5, [r4, #228]	; 0xe4
 800c5f6:	b15d      	cbz	r5, 800c610 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x3e>
 800c5f8:	f9b4 20c6 	ldrsh.w	r2, [r4, #198]	; 0xc6
 800c5fc:	9200      	str	r2, [sp, #0]
 800c5fe:	2200      	movs	r2, #0
 800c600:	4628      	mov	r0, r5
 800c602:	f9b4 30c4 	ldrsh.w	r3, [r4, #196]	; 0xc4
 800c606:	4611      	mov	r1, r2
 800c608:	f7f6 fbbf 	bl	8002d8a <_ZN8touchgfx8Drawable11setPositionEssss>
 800c60c:	69ad      	ldr	r5, [r5, #24]
 800c60e:	e7f2      	b.n	800c5f6 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x24>
 800c610:	f8d4 508c 	ldr.w	r5, [r4, #140]	; 0x8c
 800c614:	b15d      	cbz	r5, 800c62e <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x5c>
 800c616:	f9b4 206e 	ldrsh.w	r2, [r4, #110]	; 0x6e
 800c61a:	9200      	str	r2, [sp, #0]
 800c61c:	2200      	movs	r2, #0
 800c61e:	4628      	mov	r0, r5
 800c620:	f9b4 306c 	ldrsh.w	r3, [r4, #108]	; 0x6c
 800c624:	4611      	mov	r1, r2
 800c626:	f7f6 fbb0 	bl	8002d8a <_ZN8touchgfx8Drawable11setPositionEssss>
 800c62a:	69ad      	ldr	r5, [r5, #24]
 800c62c:	e7f2      	b.n	800c614 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x42>
 800c62e:	f8d4 50b8 	ldr.w	r5, [r4, #184]	; 0xb8
 800c632:	b15d      	cbz	r5, 800c64c <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x7a>
 800c634:	f9b4 209a 	ldrsh.w	r2, [r4, #154]	; 0x9a
 800c638:	9200      	str	r2, [sp, #0]
 800c63a:	2200      	movs	r2, #0
 800c63c:	4628      	mov	r0, r5
 800c63e:	f9b4 3098 	ldrsh.w	r3, [r4, #152]	; 0x98
 800c642:	4611      	mov	r1, r2
 800c644:	f7f6 fba1 	bl	8002d8a <_ZN8touchgfx8Drawable11setPositionEssss>
 800c648:	69ad      	ldr	r5, [r5, #24]
 800c64a:	e7f2      	b.n	800c632 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x60>
 800c64c:	f8d4 5110 	ldr.w	r5, [r4, #272]	; 0x110
 800c650:	b15d      	cbz	r5, 800c66a <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x98>
 800c652:	f9b4 20f2 	ldrsh.w	r2, [r4, #242]	; 0xf2
 800c656:	9200      	str	r2, [sp, #0]
 800c658:	2200      	movs	r2, #0
 800c65a:	4628      	mov	r0, r5
 800c65c:	f9b4 30f0 	ldrsh.w	r3, [r4, #240]	; 0xf0
 800c660:	4611      	mov	r1, r2
 800c662:	f7f6 fb92 	bl	8002d8a <_ZN8touchgfx8Drawable11setPositionEssss>
 800c666:	69ad      	ldr	r5, [r5, #24]
 800c668:	e7f2      	b.n	800c650 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x7e>
 800c66a:	6823      	ldr	r3, [r4, #0]
 800c66c:	695b      	ldr	r3, [r3, #20]
 800c66e:	4620      	mov	r0, r4
 800c670:	b003      	add	sp, #12
 800c672:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800c676:	4718      	bx	r3

0800c678 <_ZN8touchgfx17AbstractDataGraph8setWidthEs>:
 800c678:	b430      	push	{r4, r5}
 800c67a:	f8b0 4098 	ldrh.w	r4, [r0, #152]	; 0x98
 800c67e:	f8a0 10c4 	strh.w	r1, [r0, #196]	; 0xc4
 800c682:	b28a      	uxth	r2, r1
 800c684:	1b15      	subs	r5, r2, r4
 800c686:	f8a0 5094 	strh.w	r5, [r0, #148]	; 0x94
 800c68a:	f8b0 506c 	ldrh.w	r5, [r0, #108]	; 0x6c
 800c68e:	f8a0 10f0 	strh.w	r1, [r0, #240]	; 0xf0
 800c692:	442c      	add	r4, r5
 800c694:	1b12      	subs	r2, r2, r4
 800c696:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 800c69a:	8101      	strh	r1, [r0, #8]
 800c69c:	bc30      	pop	{r4, r5}
 800c69e:	f7ff bf98 	b.w	800c5d2 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>

0800c6a2 <_ZN8touchgfx17AbstractDataGraph9setHeightEs>:
 800c6a2:	b430      	push	{r4, r5}
 800c6a4:	f8b0 40f2 	ldrh.w	r4, [r0, #242]	; 0xf2
 800c6a8:	f8a0 106e 	strh.w	r1, [r0, #110]	; 0x6e
 800c6ac:	b28a      	uxth	r2, r1
 800c6ae:	1b15      	subs	r5, r2, r4
 800c6b0:	f8a0 50ee 	strh.w	r5, [r0, #238]	; 0xee
 800c6b4:	f8b0 50c6 	ldrh.w	r5, [r0, #198]	; 0xc6
 800c6b8:	f8a0 109a 	strh.w	r1, [r0, #154]	; 0x9a
 800c6bc:	442c      	add	r4, r5
 800c6be:	1b12      	subs	r2, r2, r4
 800c6c0:	f8a0 2042 	strh.w	r2, [r0, #66]	; 0x42
 800c6c4:	8141      	strh	r1, [r0, #10]
 800c6c6:	bc30      	pop	{r4, r5}
 800c6c8:	f7ff bf83 	b.w	800c5d2 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>

0800c6cc <_ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss>:
 800c6cc:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800c6d0:	f9bd 7028 	ldrsh.w	r7, [sp, #40]	; 0x28
 800c6d4:	fa1f fa83 	uxth.w	sl, r3
 800c6d8:	4699      	mov	r9, r3
 800c6da:	8903      	ldrh	r3, [r0, #8]
 800c6dc:	4604      	mov	r4, r0
 800c6de:	4615      	mov	r5, r2
 800c6e0:	fa1f f887 	uxth.w	r8, r7
 800c6e4:	4452      	add	r2, sl
 800c6e6:	8940      	ldrh	r0, [r0, #10]
 800c6e8:	1a9b      	subs	r3, r3, r2
 800c6ea:	eb08 0201 	add.w	r2, r8, r1
 800c6ee:	1a80      	subs	r0, r0, r2
 800c6f0:	b200      	sxth	r0, r0
 800c6f2:	460e      	mov	r6, r1
 800c6f4:	9000      	str	r0, [sp, #0]
 800c6f6:	460a      	mov	r2, r1
 800c6f8:	f104 0038 	add.w	r0, r4, #56	; 0x38
 800c6fc:	4629      	mov	r1, r5
 800c6fe:	b21b      	sxth	r3, r3
 800c700:	f7f6 fb43 	bl	8002d8a <_ZN8touchgfx8Drawable11setPositionEssss>
 800c704:	2200      	movs	r2, #0
 800c706:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800c70a:	9600      	str	r6, [sp, #0]
 800c70c:	4611      	mov	r1, r2
 800c70e:	f104 00bc 	add.w	r0, r4, #188	; 0xbc
 800c712:	f7f6 fb3a 	bl	8002d8a <_ZN8touchgfx8Drawable11setPositionEssss>
 800c716:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800c71a:	9300      	str	r3, [sp, #0]
 800c71c:	2200      	movs	r2, #0
 800c71e:	462b      	mov	r3, r5
 800c720:	4611      	mov	r1, r2
 800c722:	f104 0064 	add.w	r0, r4, #100	; 0x64
 800c726:	f7f6 fb30 	bl	8002d8a <_ZN8touchgfx8Drawable11setPositionEssss>
 800c72a:	8921      	ldrh	r1, [r4, #8]
 800c72c:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800c730:	9300      	str	r3, [sp, #0]
 800c732:	eba1 010a 	sub.w	r1, r1, sl
 800c736:	464b      	mov	r3, r9
 800c738:	f104 0090 	add.w	r0, r4, #144	; 0x90
 800c73c:	2200      	movs	r2, #0
 800c73e:	b209      	sxth	r1, r1
 800c740:	f7f6 fb23 	bl	8002d8a <_ZN8touchgfx8Drawable11setPositionEssss>
 800c744:	8962      	ldrh	r2, [r4, #10]
 800c746:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800c74a:	9700      	str	r7, [sp, #0]
 800c74c:	eba2 0208 	sub.w	r2, r2, r8
 800c750:	f104 00e8 	add.w	r0, r4, #232	; 0xe8
 800c754:	b212      	sxth	r2, r2
 800c756:	2100      	movs	r1, #0
 800c758:	f7f6 fb17 	bl	8002d8a <_ZN8touchgfx8Drawable11setPositionEssss>
 800c75c:	4620      	mov	r0, r4
 800c75e:	b002      	add	sp, #8
 800c760:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800c764:	f7ff bf35 	b.w	800c5d2 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>

0800c768 <_ZN8touchgfx17AbstractDataGraphC1Es>:
 800c768:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c76c:	b085      	sub	sp, #20
 800c76e:	4604      	mov	r4, r0
 800c770:	9103      	str	r1, [sp, #12]
 800c772:	f7ff fe25 	bl	800c3c0 <_ZN8touchgfx9ContainerC1Ev>
 800c776:	4b2d      	ldr	r3, [pc, #180]	; (800c82c <_ZN8touchgfx17AbstractDataGraphC1Es+0xc4>)
 800c778:	6023      	str	r3, [r4, #0]
 800c77a:	2601      	movs	r6, #1
 800c77c:	23ff      	movs	r3, #255	; 0xff
 800c77e:	f104 0b38 	add.w	fp, r4, #56	; 0x38
 800c782:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 800c786:	f104 0964 	add.w	r9, r4, #100	; 0x64
 800c78a:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 800c78e:	4658      	mov	r0, fp
 800c790:	f7ff fe16 	bl	800c3c0 <_ZN8touchgfx9ContainerC1Ev>
 800c794:	f104 0890 	add.w	r8, r4, #144	; 0x90
 800c798:	4648      	mov	r0, r9
 800c79a:	f7ff fe11 	bl	800c3c0 <_ZN8touchgfx9ContainerC1Ev>
 800c79e:	f104 0abc 	add.w	sl, r4, #188	; 0xbc
 800c7a2:	4640      	mov	r0, r8
 800c7a4:	f7ff fe0c 	bl	800c3c0 <_ZN8touchgfx9ContainerC1Ev>
 800c7a8:	f104 07e8 	add.w	r7, r4, #232	; 0xe8
 800c7ac:	4650      	mov	r0, sl
 800c7ae:	f7ff fe07 	bl	800c3c0 <_ZN8touchgfx9ContainerC1Ev>
 800c7b2:	4638      	mov	r0, r7
 800c7b4:	f7ff fe04 	bl	800c3c0 <_ZN8touchgfx9ContainerC1Ev>
 800c7b8:	2500      	movs	r5, #0
 800c7ba:	9903      	ldr	r1, [sp, #12]
 800c7bc:	f8a4 111c 	strh.w	r1, [r4, #284]	; 0x11c
 800c7c0:	4620      	mov	r0, r4
 800c7c2:	4659      	mov	r1, fp
 800c7c4:	f8c4 5114 	str.w	r5, [r4, #276]	; 0x114
 800c7c8:	f8c4 5118 	str.w	r5, [r4, #280]	; 0x118
 800c7cc:	f8a4 511e 	strh.w	r5, [r4, #286]	; 0x11e
 800c7d0:	f8a4 5120 	strh.w	r5, [r4, #288]	; 0x120
 800c7d4:	f8c4 5124 	str.w	r5, [r4, #292]	; 0x124
 800c7d8:	f8c4 5128 	str.w	r5, [r4, #296]	; 0x128
 800c7dc:	f8c4 512c 	str.w	r5, [r4, #300]	; 0x12c
 800c7e0:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 800c7e4:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
 800c7e8:	f8c4 5138 	str.w	r5, [r4, #312]	; 0x138
 800c7ec:	f7fe f99e 	bl	800ab2c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800c7f0:	4651      	mov	r1, sl
 800c7f2:	4620      	mov	r0, r4
 800c7f4:	f7fe f99a 	bl	800ab2c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800c7f8:	4649      	mov	r1, r9
 800c7fa:	4620      	mov	r0, r4
 800c7fc:	f7fe f996 	bl	800ab2c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800c800:	4641      	mov	r1, r8
 800c802:	4620      	mov	r0, r4
 800c804:	f7fe f992 	bl	800ab2c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800c808:	4639      	mov	r1, r7
 800c80a:	4620      	mov	r0, r4
 800c80c:	f7fe f98e 	bl	800ab2c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800c810:	4620      	mov	r0, r4
 800c812:	9500      	str	r5, [sp, #0]
 800c814:	462b      	mov	r3, r5
 800c816:	462a      	mov	r2, r5
 800c818:	4629      	mov	r1, r5
 800c81a:	f7ff ff57 	bl	800c6cc <_ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss>
 800c81e:	4620      	mov	r0, r4
 800c820:	f884 6024 	strb.w	r6, [r4, #36]	; 0x24
 800c824:	b005      	add	sp, #20
 800c826:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c82a:	bf00      	nop
 800c82c:	08023b64 	.word	0x08023b64

0800c830 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>:
 800c830:	4291      	cmp	r1, r2
 800c832:	4613      	mov	r3, r2
 800c834:	d003      	beq.n	800c83e <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii+0xe>
 800c836:	460a      	mov	r2, r1
 800c838:	4619      	mov	r1, r3
 800c83a:	f005 bdf1 	b.w	8012420 <_ZN8touchgfx6muldivElll>
 800c83e:	4770      	bx	lr

0800c840 <_ZN8touchgfx16DynamicDataGraph9setScaleXEib>:
 800c840:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c844:	6803      	ldr	r3, [r0, #0]
 800c846:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800c84a:	460d      	mov	r5, r1
 800c84c:	4604      	mov	r4, r0
 800c84e:	4798      	blx	r3
 800c850:	42a8      	cmp	r0, r5
 800c852:	4606      	mov	r6, r0
 800c854:	d024      	beq.n	800c8a0 <_ZN8touchgfx16DynamicDataGraph9setScaleXEib+0x60>
 800c856:	6823      	ldr	r3, [r4, #0]
 800c858:	4601      	mov	r1, r0
 800c85a:	462a      	mov	r2, r5
 800c85c:	f8d4 012c 	ldr.w	r0, [r4, #300]	; 0x12c
 800c860:	f8d3 70a4 	ldr.w	r7, [r3, #164]	; 0xa4
 800c864:	f7ff ffe4 	bl	800c830 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 800c868:	462a      	mov	r2, r5
 800c86a:	4680      	mov	r8, r0
 800c86c:	4631      	mov	r1, r6
 800c86e:	f8d4 0130 	ldr.w	r0, [r4, #304]	; 0x130
 800c872:	f7ff ffdd 	bl	800c830 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 800c876:	4641      	mov	r1, r8
 800c878:	4602      	mov	r2, r0
 800c87a:	4620      	mov	r0, r4
 800c87c:	47b8      	blx	r7
 800c87e:	462a      	mov	r2, r5
 800c880:	4631      	mov	r1, r6
 800c882:	f8d4 013c 	ldr.w	r0, [r4, #316]	; 0x13c
 800c886:	f7ff ffd3 	bl	800c830 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 800c88a:	462a      	mov	r2, r5
 800c88c:	f8c4 013c 	str.w	r0, [r4, #316]	; 0x13c
 800c890:	4631      	mov	r1, r6
 800c892:	f8d4 0140 	ldr.w	r0, [r4, #320]	; 0x140
 800c896:	f7ff ffcb 	bl	800c830 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 800c89a:	6325      	str	r5, [r4, #48]	; 0x30
 800c89c:	f8c4 0140 	str.w	r0, [r4, #320]	; 0x140
 800c8a0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800c8a4 <_ZN8touchgfx16DynamicDataGraph9setScaleYEib>:
 800c8a4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800c8a8:	4604      	mov	r4, r0
 800c8aa:	460f      	mov	r7, r1
 800c8ac:	b1ba      	cbz	r2, 800c8de <_ZN8touchgfx16DynamicDataGraph9setScaleYEib+0x3a>
 800c8ae:	6803      	ldr	r3, [r0, #0]
 800c8b0:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 800c8b4:	4798      	blx	r3
 800c8b6:	2600      	movs	r6, #0
 800c8b8:	4681      	mov	r9, r0
 800c8ba:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800c8be:	b235      	sxth	r5, r6
 800c8c0:	42ab      	cmp	r3, r5
 800c8c2:	f106 0601 	add.w	r6, r6, #1
 800c8c6:	dd0a      	ble.n	800c8de <_ZN8touchgfx16DynamicDataGraph9setScaleYEib+0x3a>
 800c8c8:	f8d4 8144 	ldr.w	r8, [r4, #324]	; 0x144
 800c8cc:	463a      	mov	r2, r7
 800c8ce:	4649      	mov	r1, r9
 800c8d0:	f858 0025 	ldr.w	r0, [r8, r5, lsl #2]
 800c8d4:	f7ff ffac 	bl	800c830 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 800c8d8:	f848 0025 	str.w	r0, [r8, r5, lsl #2]
 800c8dc:	e7ed      	b.n	800c8ba <_ZN8touchgfx16DynamicDataGraph9setScaleYEib+0x16>
 800c8de:	6367      	str	r7, [r4, #52]	; 0x34
 800c8e0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

0800c8e4 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>:
 800c8e4:	b570      	push	{r4, r5, r6, lr}
 800c8e6:	6803      	ldr	r3, [r0, #0]
 800c8e8:	4604      	mov	r4, r0
 800c8ea:	f8d3 3178 	ldr.w	r3, [r3, #376]	; 0x178
 800c8ee:	460d      	mov	r5, r1
 800c8f0:	4798      	blx	r3
 800c8f2:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 800c8f6:	3301      	adds	r3, #1
 800c8f8:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
 800c8fc:	6823      	ldr	r3, [r4, #0]
 800c8fe:	4629      	mov	r1, r5
 800c900:	4620      	mov	r0, r4
 800c902:	f8d3 317c 	ldr.w	r3, [r3, #380]	; 0x17c
 800c906:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c90a:	4718      	bx	r3

0800c90c <_ZN8touchgfx16GraphElementLineD1Ev>:
 800c90c:	4770      	bx	lr

0800c90e <_ZN8touchgfx16GraphElementLineD0Ev>:
 800c90e:	b510      	push	{r4, lr}
 800c910:	2130      	movs	r1, #48	; 0x30
 800c912:	4604      	mov	r4, r0
 800c914:	f013 ff48 	bl	80207a8 <_ZdlPvj>
 800c918:	4620      	mov	r0, r4
 800c91a:	bd10      	pop	{r4, pc}

0800c91c <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 800c91c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c91e:	4604      	mov	r4, r0
 800c920:	4608      	mov	r0, r1
 800c922:	460d      	mov	r5, r1
 800c924:	f7fe fad5 	bl	800aed2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800c928:	b978      	cbnz	r0, 800c94a <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 800c92a:	4620      	mov	r0, r4
 800c92c:	f7fe fad1 	bl	800aed2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800c930:	f9b5 6000 	ldrsh.w	r6, [r5]
 800c934:	b150      	cbz	r0, 800c94c <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 800c936:	8026      	strh	r6, [r4, #0]
 800c938:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800c93c:	8063      	strh	r3, [r4, #2]
 800c93e:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 800c942:	80a3      	strh	r3, [r4, #4]
 800c944:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800c948:	80e3      	strh	r3, [r4, #6]
 800c94a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800c94c:	f9b4 1000 	ldrsh.w	r1, [r4]
 800c950:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800c954:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 800c958:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 800c95c:	88ed      	ldrh	r5, [r5, #6]
 800c95e:	42b1      	cmp	r1, r6
 800c960:	460f      	mov	r7, r1
 800c962:	bfa8      	it	ge
 800c964:	4637      	movge	r7, r6
 800c966:	4293      	cmp	r3, r2
 800c968:	4618      	mov	r0, r3
 800c96a:	4466      	add	r6, ip
 800c96c:	bfa8      	it	ge
 800c96e:	4610      	movge	r0, r2
 800c970:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800c974:	8027      	strh	r7, [r4, #0]
 800c976:	442a      	add	r2, r5
 800c978:	88e5      	ldrh	r5, [r4, #6]
 800c97a:	8060      	strh	r0, [r4, #2]
 800c97c:	4461      	add	r1, ip
 800c97e:	442b      	add	r3, r5
 800c980:	b236      	sxth	r6, r6
 800c982:	b209      	sxth	r1, r1
 800c984:	b212      	sxth	r2, r2
 800c986:	b21b      	sxth	r3, r3
 800c988:	428e      	cmp	r6, r1
 800c98a:	bfac      	ite	ge
 800c98c:	ebc7 0106 	rsbge	r1, r7, r6
 800c990:	ebc7 0101 	rsblt	r1, r7, r1
 800c994:	429a      	cmp	r2, r3
 800c996:	bfac      	ite	ge
 800c998:	ebc0 0202 	rsbge	r2, r0, r2
 800c99c:	ebc0 0203 	rsblt	r2, r0, r3
 800c9a0:	80a1      	strh	r1, [r4, #4]
 800c9a2:	80e2      	strh	r2, [r4, #6]
 800c9a4:	e7d1      	b.n	800c94a <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>

0800c9a6 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>:
 800c9a6:	6800      	ldr	r0, [r0, #0]
 800c9a8:	2800      	cmp	r0, #0
 800c9aa:	bfb9      	ittee	lt
 800c9ac:	2320      	movlt	r3, #32
 800c9ae:	fb90 f0f3 	sdivlt	r0, r0, r3
 800c9b2:	301f      	addge	r0, #31
 800c9b4:	1140      	asrge	r0, r0, #5
 800c9b6:	4770      	bx	lr

0800c9b8 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE>:
 800c9b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c9bc:	6803      	ldr	r3, [r0, #0]
 800c9be:	6945      	ldr	r5, [r0, #20]
 800c9c0:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800c9c2:	b093      	sub	sp, #76	; 0x4c
 800c9c4:	4604      	mov	r4, r0
 800c9c6:	460f      	mov	r7, r1
 800c9c8:	2d00      	cmp	r5, #0
 800c9ca:	f000 81ad 	beq.w	800cd28 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x370>
 800c9ce:	696d      	ldr	r5, [r5, #20]
 800c9d0:	4798      	blx	r3
 800c9d2:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800c9d6:	2b00      	cmp	r3, #0
 800c9d8:	d077      	beq.n	800caca <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800c9da:	f895 302c 	ldrb.w	r3, [r5, #44]	; 0x2c
 800c9de:	fb13 f000 	smulbb	r0, r3, r0
 800c9e2:	b283      	uxth	r3, r0
 800c9e4:	1c58      	adds	r0, r3, #1
 800c9e6:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 800c9ea:	1200      	asrs	r0, r0, #8
 800c9ec:	d06d      	beq.n	800caca <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800c9ee:	b2c3      	uxtb	r3, r0
 800c9f0:	9308      	str	r3, [sp, #32]
 800c9f2:	6823      	ldr	r3, [r4, #0]
 800c9f4:	f10d 0840 	add.w	r8, sp, #64	; 0x40
 800c9f8:	462a      	mov	r2, r5
 800c9fa:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800c9fe:	4621      	mov	r1, r4
 800ca00:	4640      	mov	r0, r8
 800ca02:	4798      	blx	r3
 800ca04:	e898 0003 	ldmia.w	r8, {r0, r1}
 800ca08:	ae0e      	add	r6, sp, #56	; 0x38
 800ca0a:	e886 0003 	stmia.w	r6, {r0, r1}
 800ca0e:	4639      	mov	r1, r7
 800ca10:	4630      	mov	r0, r6
 800ca12:	f7fe fa1b 	bl	800ae4c <_ZN8touchgfx4RectaNERKS0_>
 800ca16:	6823      	ldr	r3, [r4, #0]
 800ca18:	4629      	mov	r1, r5
 800ca1a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800ca1e:	4620      	mov	r0, r4
 800ca20:	4798      	blx	r3
 800ca22:	6823      	ldr	r3, [r4, #0]
 800ca24:	4607      	mov	r7, r0
 800ca26:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800ca2a:	4629      	mov	r1, r5
 800ca2c:	4620      	mov	r0, r4
 800ca2e:	4798      	blx	r3
 800ca30:	4681      	mov	r9, r0
 800ca32:	f894 0038 	ldrb.w	r0, [r4, #56]	; 0x38
 800ca36:	0103      	lsls	r3, r0, #4
 800ca38:	9309      	str	r3, [sp, #36]	; 0x24
 800ca3a:	6823      	ldr	r3, [r4, #0]
 800ca3c:	4629      	mov	r1, r5
 800ca3e:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 800ca42:	4620      	mov	r0, r4
 800ca44:	4798      	blx	r3
 800ca46:	b203      	sxth	r3, r0
 800ca48:	9306      	str	r3, [sp, #24]
 800ca4a:	6823      	ldr	r3, [r4, #0]
 800ca4c:	4629      	mov	r1, r5
 800ca4e:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 800ca52:	4620      	mov	r0, r4
 800ca54:	4798      	blx	r3
 800ca56:	2f00      	cmp	r7, #0
 800ca58:	b203      	sxth	r3, r0
 800ca5a:	9307      	str	r3, [sp, #28]
 800ca5c:	d138      	bne.n	800cad0 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x118>
 800ca5e:	f1b9 0f00 	cmp.w	r9, #0
 800ca62:	d132      	bne.n	800caca <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800ca64:	6823      	ldr	r3, [r4, #0]
 800ca66:	464a      	mov	r2, r9
 800ca68:	4629      	mov	r1, r5
 800ca6a:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800ca6e:	4620      	mov	r0, r4
 800ca70:	4798      	blx	r3
 800ca72:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800ca74:	1ac0      	subs	r0, r0, r3
 800ca76:	9010      	str	r0, [sp, #64]	; 0x40
 800ca78:	4640      	mov	r0, r8
 800ca7a:	f7ff fcbb 	bl	800c3f4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800ca7e:	6823      	ldr	r3, [r4, #0]
 800ca80:	4607      	mov	r7, r0
 800ca82:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 800ca86:	4629      	mov	r1, r5
 800ca88:	4620      	mov	r0, r4
 800ca8a:	4798      	blx	r3
 800ca8c:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800ca90:	1a38      	subs	r0, r7, r0
 800ca92:	fa0f f880 	sxth.w	r8, r0
 800ca96:	eb13 0f08 	cmn.w	r3, r8
 800ca9a:	d416      	bmi.n	800caca <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800ca9c:	6823      	ldr	r3, [r4, #0]
 800ca9e:	4629      	mov	r1, r5
 800caa0:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 800caa4:	4620      	mov	r0, r4
 800caa6:	4798      	blx	r3
 800caa8:	4580      	cmp	r8, r0
 800caaa:	da0e      	bge.n	800caca <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800caac:	9a08      	ldr	r2, [sp, #32]
 800caae:	6823      	ldr	r3, [r4, #0]
 800cab0:	9202      	str	r2, [sp, #8]
 800cab2:	b23f      	sxth	r7, r7
 800cab4:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 800cab8:	9201      	str	r2, [sp, #4]
 800caba:	9700      	str	r7, [sp, #0]
 800cabc:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 800cac0:	4631      	mov	r1, r6
 800cac2:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800cac6:	4620      	mov	r0, r4
 800cac8:	47a8      	blx	r5
 800caca:	b013      	add	sp, #76	; 0x4c
 800cacc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cad0:	ddfb      	ble.n	800caca <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800cad2:	6823      	ldr	r3, [r4, #0]
 800cad4:	4629      	mov	r1, r5
 800cad6:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 800cada:	4620      	mov	r0, r4
 800cadc:	4798      	blx	r3
 800cade:	6823      	ldr	r3, [r4, #0]
 800cae0:	4683      	mov	fp, r0
 800cae2:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 800cae6:	4629      	mov	r1, r5
 800cae8:	4620      	mov	r0, r4
 800caea:	4798      	blx	r3
 800caec:	eba0 030b 	sub.w	r3, r0, fp
 800caf0:	2b00      	cmp	r3, #0
 800caf2:	bfb8      	it	lt
 800caf4:	425b      	neglt	r3, r3
 800caf6:	fb93 f3f7 	sdiv	r3, r3, r7
 800cafa:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 800cafe:	4680      	mov	r8, r0
 800cb00:	dce3      	bgt.n	800caca <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800cb02:	6823      	ldr	r3, [r4, #0]
 800cb04:	465a      	mov	r2, fp
 800cb06:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800cb0a:	4629      	mov	r1, r5
 800cb0c:	4620      	mov	r0, r4
 800cb0e:	4798      	blx	r3
 800cb10:	6823      	ldr	r3, [r4, #0]
 800cb12:	4606      	mov	r6, r0
 800cb14:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800cb18:	4642      	mov	r2, r8
 800cb1a:	4629      	mov	r1, r5
 800cb1c:	4620      	mov	r0, r4
 800cb1e:	4798      	blx	r3
 800cb20:	42b0      	cmp	r0, r6
 800cb22:	bfa2      	ittt	ge
 800cb24:	4643      	movge	r3, r8
 800cb26:	46d8      	movge	r8, fp
 800cb28:	469b      	movge	fp, r3
 800cb2a:	45d8      	cmp	r8, fp
 800cb2c:	bfac      	ite	ge
 800cb2e:	f04f 33ff 	movge.w	r3, #4294967295
 800cb32:	2301      	movlt	r3, #1
 800cb34:	fb98 f6f7 	sdiv	r6, r8, r7
 800cb38:	fb9b f2f7 	sdiv	r2, fp, r7
 800cb3c:	1af6      	subs	r6, r6, r3
 800cb3e:	441a      	add	r2, r3
 800cb40:	4296      	cmp	r6, r2
 800cb42:	bfac      	ite	ge
 800cb44:	f04f 3aff 	movge.w	sl, #4294967295
 800cb48:	f04f 0a01 	movlt.w	sl, #1
 800cb4c:	f1b9 0f00 	cmp.w	r9, #0
 800cb50:	d13e      	bne.n	800cbd0 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x218>
 800cb52:	fb07 fb0a 	mul.w	fp, r7, sl
 800cb56:	eb0a 0802 	add.w	r8, sl, r2
 800cb5a:	4377      	muls	r7, r6
 800cb5c:	45b0      	cmp	r8, r6
 800cb5e:	d0b4      	beq.n	800caca <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800cb60:	6823      	ldr	r3, [r4, #0]
 800cb62:	463a      	mov	r2, r7
 800cb64:	4629      	mov	r1, r5
 800cb66:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800cb6a:	4620      	mov	r0, r4
 800cb6c:	4798      	blx	r3
 800cb6e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800cb70:	1ac0      	subs	r0, r0, r3
 800cb72:	9010      	str	r0, [sp, #64]	; 0x40
 800cb74:	a810      	add	r0, sp, #64	; 0x40
 800cb76:	f7ff fc3d 	bl	800c3f4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800cb7a:	6823      	ldr	r3, [r4, #0]
 800cb7c:	4681      	mov	r9, r0
 800cb7e:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 800cb82:	4629      	mov	r1, r5
 800cb84:	4620      	mov	r0, r4
 800cb86:	4798      	blx	r3
 800cb88:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 800cb8c:	eba9 0000 	sub.w	r0, r9, r0
 800cb90:	b203      	sxth	r3, r0
 800cb92:	42da      	cmn	r2, r3
 800cb94:	9304      	str	r3, [sp, #16]
 800cb96:	d418      	bmi.n	800cbca <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x212>
 800cb98:	6822      	ldr	r2, [r4, #0]
 800cb9a:	4629      	mov	r1, r5
 800cb9c:	f8d2 20a8 	ldr.w	r2, [r2, #168]	; 0xa8
 800cba0:	4620      	mov	r0, r4
 800cba2:	4790      	blx	r2
 800cba4:	9b04      	ldr	r3, [sp, #16]
 800cba6:	4283      	cmp	r3, r0
 800cba8:	da0f      	bge.n	800cbca <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x212>
 800cbaa:	9b08      	ldr	r3, [sp, #32]
 800cbac:	9302      	str	r3, [sp, #8]
 800cbae:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800cbb2:	6822      	ldr	r2, [r4, #0]
 800cbb4:	9301      	str	r3, [sp, #4]
 800cbb6:	fa0f f389 	sxth.w	r3, r9
 800cbba:	9300      	str	r3, [sp, #0]
 800cbbc:	f8d2 9088 	ldr.w	r9, [r2, #136]	; 0x88
 800cbc0:	a90e      	add	r1, sp, #56	; 0x38
 800cbc2:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800cbc6:	4620      	mov	r0, r4
 800cbc8:	47c8      	blx	r9
 800cbca:	4456      	add	r6, sl
 800cbcc:	445f      	add	r7, fp
 800cbce:	e7c5      	b.n	800cb5c <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x1a4>
 800cbd0:	fb98 f8f9 	sdiv	r8, r8, r9
 800cbd4:	eba8 0203 	sub.w	r2, r8, r3
 800cbd8:	fb9b f8f9 	sdiv	r8, fp, r9
 800cbdc:	4498      	add	r8, r3
 800cbde:	4542      	cmp	r2, r8
 800cbe0:	bfac      	ite	ge
 800cbe2:	f04f 33ff 	movge.w	r3, #4294967295
 800cbe6:	2301      	movlt	r3, #1
 800cbe8:	930a      	str	r3, [sp, #40]	; 0x28
 800cbea:	6823      	ldr	r3, [r4, #0]
 800cbec:	9204      	str	r2, [sp, #16]
 800cbee:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800cbf2:	fb02 f209 	mul.w	r2, r2, r9
 800cbf6:	4629      	mov	r1, r5
 800cbf8:	4620      	mov	r0, r4
 800cbfa:	4798      	blx	r3
 800cbfc:	f10d 0b48 	add.w	fp, sp, #72	; 0x48
 800cc00:	f84b 0d08 	str.w	r0, [fp, #-8]!
 800cc04:	4658      	mov	r0, fp
 800cc06:	f7ff fbf5 	bl	800c3f4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800cc0a:	b203      	sxth	r3, r0
 800cc0c:	9305      	str	r3, [sp, #20]
 800cc0e:	6823      	ldr	r3, [r4, #0]
 800cc10:	fb06 f207 	mul.w	r2, r6, r7
 800cc14:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800cc18:	4629      	mov	r1, r5
 800cc1a:	4620      	mov	r0, r4
 800cc1c:	4798      	blx	r3
 800cc1e:	9010      	str	r0, [sp, #64]	; 0x40
 800cc20:	4658      	mov	r0, fp
 800cc22:	f7ff fbe7 	bl	800c3f4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800cc26:	fb07 f20a 	mul.w	r2, r7, sl
 800cc2a:	920b      	str	r2, [sp, #44]	; 0x2c
 800cc2c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800cc2e:	4442      	add	r2, r8
 800cc30:	b203      	sxth	r3, r0
 800cc32:	920c      	str	r2, [sp, #48]	; 0x30
 800cc34:	9a05      	ldr	r2, [sp, #20]
 800cc36:	429a      	cmp	r2, r3
 800cc38:	dc16      	bgt.n	800cc68 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x2b0>
 800cc3a:	eb06 080a 	add.w	r8, r6, sl
 800cc3e:	fb07 f808 	mul.w	r8, r7, r8
 800cc42:	9a05      	ldr	r2, [sp, #20]
 800cc44:	429a      	cmp	r2, r3
 800cc46:	db54      	blt.n	800ccf2 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x33a>
 800cc48:	6823      	ldr	r3, [r4, #0]
 800cc4a:	4642      	mov	r2, r8
 800cc4c:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800cc50:	4629      	mov	r1, r5
 800cc52:	4620      	mov	r0, r4
 800cc54:	4798      	blx	r3
 800cc56:	9010      	str	r0, [sp, #64]	; 0x40
 800cc58:	4658      	mov	r0, fp
 800cc5a:	f7ff fbcb 	bl	800c3f4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800cc5e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800cc60:	4456      	add	r6, sl
 800cc62:	b203      	sxth	r3, r0
 800cc64:	4490      	add	r8, r2
 800cc66:	e7ec      	b.n	800cc42 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x28a>
 800cc68:	6823      	ldr	r3, [r4, #0]
 800cc6a:	fb07 f206 	mul.w	r2, r7, r6
 800cc6e:	4629      	mov	r1, r5
 800cc70:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800cc74:	4620      	mov	r0, r4
 800cc76:	4798      	blx	r3
 800cc78:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800cc7a:	1ac0      	subs	r0, r0, r3
 800cc7c:	9010      	str	r0, [sp, #64]	; 0x40
 800cc7e:	4658      	mov	r0, fp
 800cc80:	f7ff fbb8 	bl	800c3f4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800cc84:	6823      	ldr	r3, [r4, #0]
 800cc86:	4680      	mov	r8, r0
 800cc88:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 800cc8c:	4629      	mov	r1, r5
 800cc8e:	4620      	mov	r0, r4
 800cc90:	4798      	blx	r3
 800cc92:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 800cc96:	eba8 0000 	sub.w	r0, r8, r0
 800cc9a:	b203      	sxth	r3, r0
 800cc9c:	42da      	cmn	r2, r3
 800cc9e:	930d      	str	r3, [sp, #52]	; 0x34
 800cca0:	d418      	bmi.n	800ccd4 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x31c>
 800cca2:	6822      	ldr	r2, [r4, #0]
 800cca4:	4629      	mov	r1, r5
 800cca6:	f8d2 20a8 	ldr.w	r2, [r2, #168]	; 0xa8
 800ccaa:	4620      	mov	r0, r4
 800ccac:	4790      	blx	r2
 800ccae:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800ccb0:	4283      	cmp	r3, r0
 800ccb2:	da0f      	bge.n	800ccd4 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x31c>
 800ccb4:	9b08      	ldr	r3, [sp, #32]
 800ccb6:	9302      	str	r3, [sp, #8]
 800ccb8:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800ccbc:	6822      	ldr	r2, [r4, #0]
 800ccbe:	9301      	str	r3, [sp, #4]
 800ccc0:	fa0f f388 	sxth.w	r3, r8
 800ccc4:	9300      	str	r3, [sp, #0]
 800ccc6:	f8d2 8088 	ldr.w	r8, [r2, #136]	; 0x88
 800ccca:	a90e      	add	r1, sp, #56	; 0x38
 800cccc:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800ccd0:	4620      	mov	r0, r4
 800ccd2:	47c0      	blx	r8
 800ccd4:	6823      	ldr	r3, [r4, #0]
 800ccd6:	4456      	add	r6, sl
 800ccd8:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800ccdc:	fb06 f207 	mul.w	r2, r6, r7
 800cce0:	4629      	mov	r1, r5
 800cce2:	4620      	mov	r0, r4
 800cce4:	4798      	blx	r3
 800cce6:	9010      	str	r0, [sp, #64]	; 0x40
 800cce8:	4658      	mov	r0, fp
 800ccea:	f7ff fb83 	bl	800c3f4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800ccee:	b203      	sxth	r3, r0
 800ccf0:	e7a0      	b.n	800cc34 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x27c>
 800ccf2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800ccf4:	930d      	str	r3, [sp, #52]	; 0x34
 800ccf6:	9b04      	ldr	r3, [sp, #16]
 800ccf8:	4413      	add	r3, r2
 800ccfa:	9304      	str	r3, [sp, #16]
 800ccfc:	9a04      	ldr	r2, [sp, #16]
 800ccfe:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800cd00:	4293      	cmp	r3, r2
 800cd02:	f43f aee2 	beq.w	800caca <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800cd06:	9b04      	ldr	r3, [sp, #16]
 800cd08:	6822      	ldr	r2, [r4, #0]
 800cd0a:	4629      	mov	r1, r5
 800cd0c:	f8d2 80ac 	ldr.w	r8, [r2, #172]	; 0xac
 800cd10:	4620      	mov	r0, r4
 800cd12:	fb03 f209 	mul.w	r2, r3, r9
 800cd16:	47c0      	blx	r8
 800cd18:	9010      	str	r0, [sp, #64]	; 0x40
 800cd1a:	4658      	mov	r0, fp
 800cd1c:	f7ff fb6a 	bl	800c3f4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800cd20:	b203      	sxth	r3, r0
 800cd22:	9305      	str	r3, [sp, #20]
 800cd24:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800cd26:	e785      	b.n	800cc34 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x27c>
 800cd28:	4798      	blx	r3
 800cd2a:	f895 302c 	ldrb.w	r3, [r5, #44]	; 0x2c
 800cd2e:	deff      	udf	#255	; 0xff

0800cd30 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>:
 800cd30:	b510      	push	{r4, lr}
 800cd32:	ea80 73e0 	eor.w	r3, r0, r0, asr #31
 800cd36:	ea81 74e1 	eor.w	r4, r1, r1, asr #31
 800cd3a:	eba4 74e1 	sub.w	r4, r4, r1, asr #31
 800cd3e:	eba3 73e0 	sub.w	r3, r3, r0, asr #31
 800cd42:	13a4      	asrs	r4, r4, #14
 800cd44:	139b      	asrs	r3, r3, #14
 800cd46:	429c      	cmp	r4, r3
 800cd48:	bfb8      	it	lt
 800cd4a:	461c      	movlt	r4, r3
 800cd4c:	2c01      	cmp	r4, #1
 800cd4e:	dd07      	ble.n	800cd60 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x30>
 800cd50:	fb91 f1f4 	sdiv	r1, r1, r4
 800cd54:	fb90 f0f4 	sdiv	r0, r0, r4
 800cd58:	f7ff ffea 	bl	800cd30 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 800cd5c:	4360      	muls	r0, r4
 800cd5e:	bd10      	pop	{r4, pc}
 800cd60:	4340      	muls	r0, r0
 800cd62:	fb01 0101 	mla	r1, r1, r1, r0
 800cd66:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
 800cd6a:	bfb4      	ite	lt
 800cd6c:	f44f 4380 	movlt.w	r3, #16384	; 0x4000
 800cd70:	f04f 4380 	movge.w	r3, #1073741824	; 0x40000000
 800cd74:	2000      	movs	r0, #0
 800cd76:	18c2      	adds	r2, r0, r3
 800cd78:	428a      	cmp	r2, r1
 800cd7a:	bf9c      	itt	ls
 800cd7c:	1898      	addls	r0, r3, r2
 800cd7e:	1a89      	subls	r1, r1, r2
 800cd80:	089b      	lsrs	r3, r3, #2
 800cd82:	ea4f 0050 	mov.w	r0, r0, lsr #1
 800cd86:	d1f6      	bne.n	800cd76 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x46>
 800cd88:	e7e9      	b.n	800cd5e <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x2e>

0800cd8a <_ZNK8touchgfx20AbstractGraphElement21rectFromQ5CoordinatesENS_7CWRUtil2Q5ES2_S2_S2_>:
 800cd8a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800cd8c:	9906      	ldr	r1, [sp, #24]
 800cd8e:	4291      	cmp	r1, r2
 800cd90:	bfbc      	itt	lt
 800cd92:	9206      	strlt	r2, [sp, #24]
 800cd94:	460a      	movlt	r2, r1
 800cd96:	9907      	ldr	r1, [sp, #28]
 800cd98:	428b      	cmp	r3, r1
 800cd9a:	4606      	mov	r6, r0
 800cd9c:	461c      	mov	r4, r3
 800cd9e:	f04f 0020 	mov.w	r0, #32
 800cda2:	bfc8      	it	gt
 800cda4:	460c      	movgt	r4, r1
 800cda6:	fb92 f5f0 	sdiv	r5, r2, r0
 800cdaa:	fb94 f4f0 	sdiv	r4, r4, r0
 800cdae:	a806      	add	r0, sp, #24
 800cdb0:	bfc8      	it	gt
 800cdb2:	9307      	strgt	r3, [sp, #28]
 800cdb4:	f7ff fdf7 	bl	800c9a6 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 800cdb8:	4607      	mov	r7, r0
 800cdba:	a807      	add	r0, sp, #28
 800cdbc:	f7ff fdf3 	bl	800c9a6 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 800cdc0:	1b7a      	subs	r2, r7, r5
 800cdc2:	1b00      	subs	r0, r0, r4
 800cdc4:	80f0      	strh	r0, [r6, #6]
 800cdc6:	8035      	strh	r5, [r6, #0]
 800cdc8:	8074      	strh	r4, [r6, #2]
 800cdca:	80b2      	strh	r2, [r6, #4]
 800cdcc:	4630      	mov	r0, r6
 800cdce:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800cdd0 <_ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_>:
 800cdd0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800cdd2:	9c08      	ldr	r4, [sp, #32]
 800cdd4:	2602      	movs	r6, #2
 800cdd6:	3401      	adds	r4, #1
 800cdd8:	fb94 f4f6 	sdiv	r4, r4, r6
 800cddc:	18a6      	adds	r6, r4, r2
 800cdde:	191f      	adds	r7, r3, r4
 800cde0:	e9cd 6700 	strd	r6, r7, [sp]
 800cde4:	1b1b      	subs	r3, r3, r4
 800cde6:	1b12      	subs	r2, r2, r4
 800cde8:	4605      	mov	r5, r0
 800cdea:	f7ff ffce 	bl	800cd8a <_ZNK8touchgfx20AbstractGraphElement21rectFromQ5CoordinatesENS_7CWRUtil2Q5ES2_S2_S2_>
 800cdee:	4628      	mov	r0, r5
 800cdf0:	b003      	add	sp, #12
 800cdf2:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800cdf4 <_ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs>:
 800cdf4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800cdf8:	6943      	ldr	r3, [r0, #20]
 800cdfa:	b087      	sub	sp, #28
 800cdfc:	4606      	mov	r6, r0
 800cdfe:	460d      	mov	r5, r1
 800ce00:	2b00      	cmp	r3, #0
 800ce02:	d072      	beq.n	800ceea <_ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs+0xf6>
 800ce04:	695c      	ldr	r4, [r3, #20]
 800ce06:	f890 702c 	ldrb.w	r7, [r0, #44]	; 0x2c
 800ce0a:	6823      	ldr	r3, [r4, #0]
 800ce0c:	4620      	mov	r0, r4
 800ce0e:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800ce12:	4798      	blx	r3
 800ce14:	6823      	ldr	r3, [r4, #0]
 800ce16:	4680      	mov	r8, r0
 800ce18:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 800ce1c:	4629      	mov	r1, r5
 800ce1e:	4620      	mov	r0, r4
 800ce20:	4798      	blx	r3
 800ce22:	017f      	lsls	r7, r7, #5
 800ce24:	4603      	mov	r3, r0
 800ce26:	9700      	str	r7, [sp, #0]
 800ce28:	4642      	mov	r2, r8
 800ce2a:	4631      	mov	r1, r6
 800ce2c:	a802      	add	r0, sp, #8
 800ce2e:	f7ff ffcf 	bl	800cdd0 <_ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_>
 800ce32:	2d00      	cmp	r5, #0
 800ce34:	dd1b      	ble.n	800ce6e <_ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs+0x7a>
 800ce36:	6823      	ldr	r3, [r4, #0]
 800ce38:	f105 38ff 	add.w	r8, r5, #4294967295
 800ce3c:	fa0f f888 	sxth.w	r8, r8
 800ce40:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800ce44:	4641      	mov	r1, r8
 800ce46:	4620      	mov	r0, r4
 800ce48:	4798      	blx	r3
 800ce4a:	6823      	ldr	r3, [r4, #0]
 800ce4c:	4681      	mov	r9, r0
 800ce4e:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 800ce52:	4641      	mov	r1, r8
 800ce54:	4620      	mov	r0, r4
 800ce56:	4798      	blx	r3
 800ce58:	4631      	mov	r1, r6
 800ce5a:	4603      	mov	r3, r0
 800ce5c:	9700      	str	r7, [sp, #0]
 800ce5e:	a804      	add	r0, sp, #16
 800ce60:	464a      	mov	r2, r9
 800ce62:	f7ff ffb5 	bl	800cdd0 <_ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_>
 800ce66:	a904      	add	r1, sp, #16
 800ce68:	a802      	add	r0, sp, #8
 800ce6a:	f7ff fd57 	bl	800c91c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800ce6e:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800ce72:	3b01      	subs	r3, #1
 800ce74:	429d      	cmp	r5, r3
 800ce76:	da19      	bge.n	800ceac <_ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs+0xb8>
 800ce78:	6823      	ldr	r3, [r4, #0]
 800ce7a:	3501      	adds	r5, #1
 800ce7c:	b22d      	sxth	r5, r5
 800ce7e:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800ce82:	4629      	mov	r1, r5
 800ce84:	4620      	mov	r0, r4
 800ce86:	4798      	blx	r3
 800ce88:	6823      	ldr	r3, [r4, #0]
 800ce8a:	4680      	mov	r8, r0
 800ce8c:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 800ce90:	4629      	mov	r1, r5
 800ce92:	4620      	mov	r0, r4
 800ce94:	4798      	blx	r3
 800ce96:	4631      	mov	r1, r6
 800ce98:	4603      	mov	r3, r0
 800ce9a:	9700      	str	r7, [sp, #0]
 800ce9c:	a804      	add	r0, sp, #16
 800ce9e:	4642      	mov	r2, r8
 800cea0:	f7ff ff96 	bl	800cdd0 <_ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_>
 800cea4:	a904      	add	r1, sp, #16
 800cea6:	a802      	add	r0, sp, #8
 800cea8:	f7ff fd38 	bl	800c91c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800ceac:	f9b4 1114 	ldrsh.w	r1, [r4, #276]	; 0x114
 800ceb0:	f8b4 311a 	ldrh.w	r3, [r4, #282]	; 0x11a
 800ceb4:	f9b4 0040 	ldrsh.w	r0, [r4, #64]	; 0x40
 800ceb8:	18ca      	adds	r2, r1, r3
 800ceba:	f8b4 3042 	ldrh.w	r3, [r4, #66]	; 0x42
 800cebe:	f8ad 1012 	strh.w	r1, [sp, #18]
 800cec2:	1a9b      	subs	r3, r3, r2
 800cec4:	f8ad 0014 	strh.w	r0, [sp, #20]
 800cec8:	2200      	movs	r2, #0
 800ceca:	a904      	add	r1, sp, #16
 800cecc:	a802      	add	r0, sp, #8
 800cece:	f8ad 2010 	strh.w	r2, [sp, #16]
 800ced2:	f8ad 3016 	strh.w	r3, [sp, #22]
 800ced6:	f7fd ffb9 	bl	800ae4c <_ZN8touchgfx4RectaNERKS0_>
 800ceda:	6833      	ldr	r3, [r6, #0]
 800cedc:	a902      	add	r1, sp, #8
 800cede:	691b      	ldr	r3, [r3, #16]
 800cee0:	4630      	mov	r0, r6
 800cee2:	4798      	blx	r3
 800cee4:	b007      	add	sp, #28
 800cee6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800ceea:	681b      	ldr	r3, [r3, #0]
 800ceec:	deff      	udf	#255	; 0xff

0800ceee <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE>:
 800ceee:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 800cef2:	2b00      	cmp	r3, #0
 800cef4:	da05      	bge.n	800cf02 <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE+0x14>
 800cef6:	880a      	ldrh	r2, [r1, #0]
 800cef8:	b29b      	uxth	r3, r3
 800cefa:	441a      	add	r2, r3
 800cefc:	425b      	negs	r3, r3
 800cefe:	800a      	strh	r2, [r1, #0]
 800cf00:	808b      	strh	r3, [r1, #4]
 800cf02:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 800cf06:	2b00      	cmp	r3, #0
 800cf08:	da05      	bge.n	800cf16 <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE+0x28>
 800cf0a:	884a      	ldrh	r2, [r1, #2]
 800cf0c:	b29b      	uxth	r3, r3
 800cf0e:	441a      	add	r2, r3
 800cf10:	425b      	negs	r3, r3
 800cf12:	804a      	strh	r2, [r1, #2]
 800cf14:	80cb      	strh	r3, [r1, #6]
 800cf16:	4770      	bx	lr

0800cf18 <_ZNK8touchgfx20GraphElementGridBase8drawLineERKNS_4RectEssssh>:
 800cf18:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800cf1a:	4604      	mov	r4, r0
 800cf1c:	460d      	mov	r5, r1
 800cf1e:	6801      	ldr	r1, [r0, #0]
 800cf20:	f9bd 0024 	ldrsh.w	r0, [sp, #36]	; 0x24
 800cf24:	9001      	str	r0, [sp, #4]
 800cf26:	f9bd 0020 	ldrsh.w	r0, [sp, #32]
 800cf2a:	9000      	str	r0, [sp, #0]
 800cf2c:	f8d1 6090 	ldr.w	r6, [r1, #144]	; 0x90
 800cf30:	a802      	add	r0, sp, #8
 800cf32:	4621      	mov	r1, r4
 800cf34:	47b0      	blx	r6
 800cf36:	a902      	add	r1, sp, #8
 800cf38:	4620      	mov	r0, r4
 800cf3a:	f7ff ffd8 	bl	800ceee <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE>
 800cf3e:	a802      	add	r0, sp, #8
 800cf40:	4629      	mov	r1, r5
 800cf42:	f7fd ff83 	bl	800ae4c <_ZN8touchgfx4RectaNERKS0_>
 800cf46:	a802      	add	r0, sp, #8
 800cf48:	f7fd ffc3 	bl	800aed2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800cf4c:	b968      	cbnz	r0, 800cf6a <_ZNK8touchgfx20GraphElementGridBase8drawLineERKNS_4RectEssssh+0x52>
 800cf4e:	6823      	ldr	r3, [r4, #0]
 800cf50:	a902      	add	r1, sp, #8
 800cf52:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800cf54:	4620      	mov	r0, r4
 800cf56:	4798      	blx	r3
 800cf58:	f7f5 fc36 	bl	80027c8 <_ZN8touchgfx3HAL3lcdEv>
 800cf5c:	6803      	ldr	r3, [r0, #0]
 800cf5e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800cf60:	6a1d      	ldr	r5, [r3, #32]
 800cf62:	f89d 3028 	ldrb.w	r3, [sp, #40]	; 0x28
 800cf66:	a902      	add	r1, sp, #8
 800cf68:	47a8      	blx	r5
 800cf6a:	b004      	add	sp, #16
 800cf6c:	bd70      	pop	{r4, r5, r6, pc}

0800cf6e <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss>:
 800cf6e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cf72:	b08b      	sub	sp, #44	; 0x2c
 800cf74:	461e      	mov	r6, r3
 800cf76:	f9bd 3050 	ldrsh.w	r3, [sp, #80]	; 0x50
 800cf7a:	9304      	str	r3, [sp, #16]
 800cf7c:	429e      	cmp	r6, r3
 800cf7e:	4689      	mov	r9, r1
 800cf80:	4615      	mov	r5, r2
 800cf82:	d072      	beq.n	800d06a <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss+0xfc>
 800cf84:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800cf88:	015b      	lsls	r3, r3, #5
 800cf8a:	9303      	str	r3, [sp, #12]
 800cf8c:	6813      	ldr	r3, [r2, #0]
 800cf8e:	4610      	mov	r0, r2
 800cf90:	4631      	mov	r1, r6
 800cf92:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800cf96:	4798      	blx	r3
 800cf98:	ab0a      	add	r3, sp, #40	; 0x28
 800cf9a:	4634      	mov	r4, r6
 800cf9c:	f843 0d10 	str.w	r0, [r3, #-16]!
 800cfa0:	4618      	mov	r0, r3
 800cfa2:	f7ff fa27 	bl	800c3f4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800cfa6:	682b      	ldr	r3, [r5, #0]
 800cfa8:	4631      	mov	r1, r6
 800cfaa:	0147      	lsls	r7, r0, #5
 800cfac:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 800cfb0:	4628      	mov	r0, r5
 800cfb2:	4798      	blx	r3
 800cfb4:	ab0a      	add	r3, sp, #40	; 0x28
 800cfb6:	f843 0d0c 	str.w	r0, [r3, #-12]!
 800cfba:	4618      	mov	r0, r3
 800cfbc:	f7ff fa1a 	bl	800c3f4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800cfc0:	ea4f 1840 	mov.w	r8, r0, lsl #5
 800cfc4:	4642      	mov	r2, r8
 800cfc6:	4639      	mov	r1, r7
 800cfc8:	4648      	mov	r0, r9
 800cfca:	f013 fb9b 	bl	8020704 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 800cfce:	2301      	movs	r3, #1
 800cfd0:	9300      	str	r3, [sp, #0]
 800cfd2:	9b00      	ldr	r3, [sp, #0]
 800cfd4:	441c      	add	r4, r3
 800cfd6:	682b      	ldr	r3, [r5, #0]
 800cfd8:	b224      	sxth	r4, r4
 800cfda:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800cfde:	4621      	mov	r1, r4
 800cfe0:	4628      	mov	r0, r5
 800cfe2:	4798      	blx	r3
 800cfe4:	9008      	str	r0, [sp, #32]
 800cfe6:	a808      	add	r0, sp, #32
 800cfe8:	f7ff fa04 	bl	800c3f4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800cfec:	0143      	lsls	r3, r0, #5
 800cfee:	9301      	str	r3, [sp, #4]
 800cff0:	682b      	ldr	r3, [r5, #0]
 800cff2:	4621      	mov	r1, r4
 800cff4:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 800cff8:	4628      	mov	r0, r5
 800cffa:	4798      	blx	r3
 800cffc:	9009      	str	r0, [sp, #36]	; 0x24
 800cffe:	a809      	add	r0, sp, #36	; 0x24
 800d000:	f7ff f9f8 	bl	800c3f4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800d004:	0143      	lsls	r3, r0, #5
 800d006:	9302      	str	r3, [sp, #8]
 800d008:	9b01      	ldr	r3, [sp, #4]
 800d00a:	eba3 0b07 	sub.w	fp, r3, r7
 800d00e:	9b02      	ldr	r3, [sp, #8]
 800d010:	eba3 0a08 	sub.w	sl, r3, r8
 800d014:	4651      	mov	r1, sl
 800d016:	4658      	mov	r0, fp
 800d018:	f7ff fe8a 	bl	800cd30 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 800d01c:	b318      	cbz	r0, 800d066 <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss+0xf8>
 800d01e:	4602      	mov	r2, r0
 800d020:	4651      	mov	r1, sl
 800d022:	9005      	str	r0, [sp, #20]
 800d024:	9803      	ldr	r0, [sp, #12]
 800d026:	f005 f9fb 	bl	8012420 <_ZN8touchgfx6muldivElll>
 800d02a:	2302      	movs	r3, #2
 800d02c:	fb90 faf3 	sdiv	sl, r0, r3
 800d030:	9b05      	ldr	r3, [sp, #20]
 800d032:	9803      	ldr	r0, [sp, #12]
 800d034:	461a      	mov	r2, r3
 800d036:	4659      	mov	r1, fp
 800d038:	f005 f9f2 	bl	8012420 <_ZN8touchgfx6muldivElll>
 800d03c:	2302      	movs	r3, #2
 800d03e:	eba7 010a 	sub.w	r1, r7, sl
 800d042:	fb90 fbf3 	sdiv	fp, r0, r3
 800d046:	4648      	mov	r0, r9
 800d048:	eb0b 0208 	add.w	r2, fp, r8
 800d04c:	f013 fa30 	bl	80204b0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800d050:	9b02      	ldr	r3, [sp, #8]
 800d052:	eb03 020b 	add.w	r2, r3, fp
 800d056:	9b01      	ldr	r3, [sp, #4]
 800d058:	4648      	mov	r0, r9
 800d05a:	eba3 010a 	sub.w	r1, r3, sl
 800d05e:	f013 fa27 	bl	80204b0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800d062:	e9dd 7801 	ldrd	r7, r8, [sp, #4]
 800d066:	42a6      	cmp	r6, r4
 800d068:	db02      	blt.n	800d070 <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss+0x102>
 800d06a:	b00b      	add	sp, #44	; 0x2c
 800d06c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d070:	9b00      	ldr	r3, [sp, #0]
 800d072:	9a04      	ldr	r2, [sp, #16]
 800d074:	42a2      	cmp	r2, r4
 800d076:	bf08      	it	eq
 800d078:	f04f 33ff 	moveq.w	r3, #4294967295
 800d07c:	e7a8      	b.n	800cfd0 <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss+0x62>
	...

0800d080 <_ZN8touchgfx6CanvasD1Ev>:
 800d080:	b510      	push	{r4, lr}
 800d082:	4b04      	ldr	r3, [pc, #16]	; (800d094 <_ZN8touchgfx6CanvasD1Ev+0x14>)
 800d084:	4604      	mov	r4, r0
 800d086:	f840 3b20 	str.w	r3, [r0], #32
 800d08a:	f001 fd23 	bl	800ead4 <_ZN8touchgfx7OutlineD1Ev>
 800d08e:	4620      	mov	r0, r4
 800d090:	bd10      	pop	{r4, pc}
 800d092:	bf00      	nop
 800d094:	08023c94 	.word	0x08023c94

0800d098 <_ZN8touchgfx6CanvasD0Ev>:
 800d098:	b510      	push	{r4, lr}
 800d09a:	4604      	mov	r4, r0
 800d09c:	f7ff fff0 	bl	800d080 <_ZN8touchgfx6CanvasD1Ev>
 800d0a0:	4620      	mov	r0, r4
 800d0a2:	2170      	movs	r1, #112	; 0x70
 800d0a4:	f013 fb80 	bl	80207a8 <_ZdlPvj>
 800d0a8:	4620      	mov	r0, r4
 800d0aa:	bd10      	pop	{r4, pc}

0800d0ac <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE>:
 800d0ac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d0b0:	6943      	ldr	r3, [r0, #20]
 800d0b2:	b0a2      	sub	sp, #136	; 0x88
 800d0b4:	4606      	mov	r6, r0
 800d0b6:	460f      	mov	r7, r1
 800d0b8:	2b00      	cmp	r3, #0
 800d0ba:	d06a      	beq.n	800d192 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xe6>
 800d0bc:	695c      	ldr	r4, [r3, #20]
 800d0be:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800d0c2:	2b01      	cmp	r3, #1
 800d0c4:	dc04      	bgt.n	800d0d0 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0x24>
 800d0c6:	2401      	movs	r4, #1
 800d0c8:	4620      	mov	r0, r4
 800d0ca:	b022      	add	sp, #136	; 0x88
 800d0cc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d0d0:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800d0d4:	ad22      	add	r5, sp, #136	; 0x88
 800d0d6:	011b      	lsls	r3, r3, #4
 800d0d8:	f845 3d70 	str.w	r3, [r5, #-112]!
 800d0dc:	4628      	mov	r0, r5
 800d0de:	f7ff fc62 	bl	800c9a6 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 800d0e2:	8839      	ldrh	r1, [r7, #0]
 800d0e4:	88ba      	ldrh	r2, [r7, #4]
 800d0e6:	6823      	ldr	r3, [r4, #0]
 800d0e8:	b280      	uxth	r0, r0
 800d0ea:	440a      	add	r2, r1
 800d0ec:	4402      	add	r2, r0
 800d0ee:	1a09      	subs	r1, r1, r0
 800d0f0:	f10d 000e 	add.w	r0, sp, #14
 800d0f4:	9000      	str	r0, [sp, #0]
 800d0f6:	f8d3 8124 	ldr.w	r8, [r3, #292]	; 0x124
 800d0fa:	b212      	sxth	r2, r2
 800d0fc:	ab03      	add	r3, sp, #12
 800d0fe:	b209      	sxth	r1, r1
 800d100:	4620      	mov	r0, r4
 800d102:	47c0      	blx	r8
 800d104:	2800      	cmp	r0, #0
 800d106:	d0de      	beq.n	800d0c6 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0x1a>
 800d108:	f9b4 1114 	ldrsh.w	r1, [r4, #276]	; 0x114
 800d10c:	f8b4 311a 	ldrh.w	r3, [r4, #282]	; 0x11a
 800d110:	f9b4 0040 	ldrsh.w	r0, [r4, #64]	; 0x40
 800d114:	f8ad 1012 	strh.w	r1, [sp, #18]
 800d118:	18ca      	adds	r2, r1, r3
 800d11a:	f8b4 3042 	ldrh.w	r3, [r4, #66]	; 0x42
 800d11e:	f8ad 0014 	strh.w	r0, [sp, #20]
 800d122:	1a9b      	subs	r3, r3, r2
 800d124:	4639      	mov	r1, r7
 800d126:	2200      	movs	r2, #0
 800d128:	a804      	add	r0, sp, #16
 800d12a:	f8ad 3016 	strh.w	r3, [sp, #22]
 800d12e:	f8ad 2010 	strh.w	r2, [sp, #16]
 800d132:	f7fd fe8b 	bl	800ae4c <_ZN8touchgfx4RectaNERKS0_>
 800d136:	aa04      	add	r2, sp, #16
 800d138:	4631      	mov	r1, r6
 800d13a:	4628      	mov	r0, r5
 800d13c:	f013 f90a 	bl	8020354 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 800d140:	f9b4 7120 	ldrsh.w	r7, [r4, #288]	; 0x120
 800d144:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800d148:	f9bd 200e 	ldrsh.w	r2, [sp, #14]
 800d14c:	2f00      	cmp	r7, #0
 800d14e:	dd03      	ble.n	800d158 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xac>
 800d150:	42bb      	cmp	r3, r7
 800d152:	da01      	bge.n	800d158 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xac>
 800d154:	42ba      	cmp	r2, r7
 800d156:	da0f      	bge.n	800d178 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xcc>
 800d158:	9200      	str	r2, [sp, #0]
 800d15a:	4622      	mov	r2, r4
 800d15c:	4629      	mov	r1, r5
 800d15e:	4630      	mov	r0, r6
 800d160:	f7ff ff05 	bl	800cf6e <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss>
 800d164:	f894 102c 	ldrb.w	r1, [r4, #44]	; 0x2c
 800d168:	4628      	mov	r0, r5
 800d16a:	f013 fa1d 	bl	80205a8 <_ZN8touchgfx6Canvas6renderEh>
 800d16e:	4604      	mov	r4, r0
 800d170:	4628      	mov	r0, r5
 800d172:	f7ff ff85 	bl	800d080 <_ZN8touchgfx6CanvasD1Ev>
 800d176:	e7a7      	b.n	800d0c8 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0x1c>
 800d178:	1e7a      	subs	r2, r7, #1
 800d17a:	b212      	sxth	r2, r2
 800d17c:	9200      	str	r2, [sp, #0]
 800d17e:	4629      	mov	r1, r5
 800d180:	4622      	mov	r2, r4
 800d182:	4630      	mov	r0, r6
 800d184:	f7ff fef3 	bl	800cf6e <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss>
 800d188:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800d18c:	9300      	str	r3, [sp, #0]
 800d18e:	463b      	mov	r3, r7
 800d190:	e7e3      	b.n	800d15a <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xae>
 800d192:	f8b3 311e 	ldrh.w	r3, [r3, #286]	; 0x11e
 800d196:	deff      	udf	#255	; 0xff

0800d198 <_ZN8touchgfx15GraphLabelsBase22invalidateGraphPointAtEs>:
 800d198:	4770      	bx	lr

0800d19a <_ZNK8touchgfx15GraphLabelsBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE>:
 800d19a:	6c80      	ldr	r0, [r0, #72]	; 0x48
 800d19c:	b118      	cbz	r0, 800d1a6 <_ZNK8touchgfx15GraphLabelsBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE+0xc>
 800d19e:	6803      	ldr	r3, [r0, #0]
 800d1a0:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800d1a4:	4718      	bx	r3
 800d1a6:	4770      	bx	lr

0800d1a8 <_ZNK8touchgfx12GraphLabelsX22getGraphRangeMinScaledEPKNS_17AbstractDataGraphE>:
 800d1a8:	680b      	ldr	r3, [r1, #0]
 800d1aa:	4608      	mov	r0, r1
 800d1ac:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
 800d1b0:	4718      	bx	r3

0800d1b2 <_ZNK8touchgfx12GraphLabelsX22getGraphRangeMaxScaledEPKNS_17AbstractDataGraphE>:
 800d1b2:	680b      	ldr	r3, [r1, #0]
 800d1b4:	4608      	mov	r0, r1
 800d1b6:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 800d1ba:	4718      	bx	r3

0800d1bc <_ZNK8touchgfx12GraphLabelsY22getGraphRangeMinScaledEPKNS_17AbstractDataGraphE>:
 800d1bc:	680b      	ldr	r3, [r1, #0]
 800d1be:	4608      	mov	r0, r1
 800d1c0:	f8d3 30ec 	ldr.w	r3, [r3, #236]	; 0xec
 800d1c4:	4718      	bx	r3

0800d1c6 <_ZNK8touchgfx12GraphLabelsY22getGraphRangeMaxScaledEPKNS_17AbstractDataGraphE>:
 800d1c6:	680b      	ldr	r3, [r1, #0]
 800d1c8:	4608      	mov	r0, r1
 800d1ca:	f8d3 30f8 	ldr.w	r3, [r3, #248]	; 0xf8
 800d1ce:	4718      	bx	r3

0800d1d0 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE>:
 800d1d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d1d4:	4a37      	ldr	r2, [pc, #220]	; (800d2b4 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0xe4>)
 800d1d6:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 800d1d8:	8812      	ldrh	r2, [r2, #0]
 800d1da:	429a      	cmp	r2, r3
 800d1dc:	b087      	sub	sp, #28
 800d1de:	4604      	mov	r4, r0
 800d1e0:	4689      	mov	r9, r1
 800d1e2:	d937      	bls.n	800d254 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800d1e4:	4a34      	ldr	r2, [pc, #208]	; (800d2b8 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0xe8>)
 800d1e6:	6812      	ldr	r2, [r2, #0]
 800d1e8:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800d1ec:	4b33      	ldr	r3, [pc, #204]	; (800d2bc <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0xec>)
 800d1ee:	681b      	ldr	r3, [r3, #0]
 800d1f0:	f853 8022 	ldr.w	r8, [r3, r2, lsl #2]
 800d1f4:	f1b8 0f00 	cmp.w	r8, #0
 800d1f8:	d02c      	beq.n	800d254 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800d1fa:	6803      	ldr	r3, [r0, #0]
 800d1fc:	6945      	ldr	r5, [r0, #20]
 800d1fe:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800d200:	2d00      	cmp	r5, #0
 800d202:	d052      	beq.n	800d2aa <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0xda>
 800d204:	696f      	ldr	r7, [r5, #20]
 800d206:	4798      	blx	r3
 800d208:	f897 502c 	ldrb.w	r5, [r7, #44]	; 0x2c
 800d20c:	fb15 f000 	smulbb	r0, r5, r0
 800d210:	b280      	uxth	r0, r0
 800d212:	1c45      	adds	r5, r0, #1
 800d214:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 800d218:	122d      	asrs	r5, r5, #8
 800d21a:	d01b      	beq.n	800d254 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800d21c:	6823      	ldr	r3, [r4, #0]
 800d21e:	4639      	mov	r1, r7
 800d220:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800d224:	4620      	mov	r0, r4
 800d226:	4798      	blx	r3
 800d228:	6823      	ldr	r3, [r4, #0]
 800d22a:	4606      	mov	r6, r0
 800d22c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800d230:	4639      	mov	r1, r7
 800d232:	4620      	mov	r0, r4
 800d234:	4798      	blx	r3
 800d236:	b2ed      	uxtb	r5, r5
 800d238:	4683      	mov	fp, r0
 800d23a:	b970      	cbnz	r0, 800d25a <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x8a>
 800d23c:	b96e      	cbnz	r6, 800d25a <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x8a>
 800d23e:	e9cd 6501 	strd	r6, r5, [sp, #4]
 800d242:	6823      	ldr	r3, [r4, #0]
 800d244:	9600      	str	r6, [sp, #0]
 800d246:	f8d3 508c 	ldr.w	r5, [r3, #140]	; 0x8c
 800d24a:	4642      	mov	r2, r8
 800d24c:	463b      	mov	r3, r7
 800d24e:	4649      	mov	r1, r9
 800d250:	4620      	mov	r0, r4
 800d252:	47a8      	blx	r5
 800d254:	b007      	add	sp, #28
 800d256:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d25a:	2e00      	cmp	r6, #0
 800d25c:	ddfa      	ble.n	800d254 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800d25e:	6823      	ldr	r3, [r4, #0]
 800d260:	4639      	mov	r1, r7
 800d262:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800d266:	4620      	mov	r0, r4
 800d268:	4798      	blx	r3
 800d26a:	6823      	ldr	r3, [r4, #0]
 800d26c:	4682      	mov	sl, r0
 800d26e:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 800d272:	4639      	mov	r1, r7
 800d274:	4620      	mov	r0, r4
 800d276:	4798      	blx	r3
 800d278:	4582      	cmp	sl, r0
 800d27a:	bfde      	ittt	le
 800d27c:	4603      	movle	r3, r0
 800d27e:	4650      	movle	r0, sl
 800d280:	469a      	movle	sl, r3
 800d282:	ebaa 0300 	sub.w	r3, sl, r0
 800d286:	fb93 f3f6 	sdiv	r3, r3, r6
 800d28a:	2b64      	cmp	r3, #100	; 0x64
 800d28c:	dce2      	bgt.n	800d254 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800d28e:	e9cd b503 	strd	fp, r5, [sp, #12]
 800d292:	e9cd a601 	strd	sl, r6, [sp, #4]
 800d296:	6823      	ldr	r3, [r4, #0]
 800d298:	9000      	str	r0, [sp, #0]
 800d29a:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 800d29e:	4642      	mov	r2, r8
 800d2a0:	463b      	mov	r3, r7
 800d2a2:	4649      	mov	r1, r9
 800d2a4:	4620      	mov	r0, r4
 800d2a6:	47a8      	blx	r5
 800d2a8:	e7d4      	b.n	800d254 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800d2aa:	4798      	blx	r3
 800d2ac:	f895 302c 	ldrb.w	r3, [r5, #44]	; 0x2c
 800d2b0:	deff      	udf	#255	; 0xff
 800d2b2:	bf00      	nop
 800d2b4:	20015660 	.word	0x20015660
 800d2b8:	2001565c 	.word	0x2001565c
 800d2bc:	20015664 	.word	0x20015664

0800d2c0 <_ZN8touchgfx12GraphLabelsYD1Ev>:
 800d2c0:	4770      	bx	lr

0800d2c2 <_ZN8touchgfx12GraphLabelsXD1Ev>:
 800d2c2:	4770      	bx	lr

0800d2c4 <_ZNK8touchgfx12GraphLabelsX31getCorrectlyScaledLabelIntervalEPKNS_17AbstractDataGraphE>:
 800d2c4:	b538      	push	{r3, r4, r5, lr}
 800d2c6:	680a      	ldr	r2, [r1, #0]
 800d2c8:	e9d0 540c 	ldrd	r5, r4, [r0, #48]	; 0x30
 800d2cc:	f8d2 208c 	ldr.w	r2, [r2, #140]	; 0x8c
 800d2d0:	4608      	mov	r0, r1
 800d2d2:	4790      	blx	r2
 800d2d4:	4629      	mov	r1, r5
 800d2d6:	4602      	mov	r2, r0
 800d2d8:	4620      	mov	r0, r4
 800d2da:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800d2de:	f7ff baa7 	b.w	800c830 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>

0800d2e2 <_ZNK8touchgfx12GraphLabelsY31getCorrectlyScaledLabelIntervalEPKNS_17AbstractDataGraphE>:
 800d2e2:	b538      	push	{r3, r4, r5, lr}
 800d2e4:	680a      	ldr	r2, [r1, #0]
 800d2e6:	e9d0 540c 	ldrd	r5, r4, [r0, #48]	; 0x30
 800d2ea:	f8d2 2094 	ldr.w	r2, [r2, #148]	; 0x94
 800d2ee:	4608      	mov	r0, r1
 800d2f0:	4790      	blx	r2
 800d2f2:	4629      	mov	r1, r5
 800d2f4:	4602      	mov	r2, r0
 800d2f6:	4620      	mov	r0, r4
 800d2f8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800d2fc:	f7ff ba98 	b.w	800c830 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>

0800d300 <_ZN8touchgfx12GraphLabelsYD0Ev>:
 800d300:	b510      	push	{r4, lr}
 800d302:	214c      	movs	r1, #76	; 0x4c
 800d304:	4604      	mov	r4, r0
 800d306:	f013 fa4f 	bl	80207a8 <_ZdlPvj>
 800d30a:	4620      	mov	r0, r4
 800d30c:	bd10      	pop	{r4, pc}

0800d30e <_ZN8touchgfx12GraphLabelsXD0Ev>:
 800d30e:	b510      	push	{r4, lr}
 800d310:	214c      	movs	r1, #76	; 0x4c
 800d312:	4604      	mov	r4, r0
 800d314:	f013 fa48 	bl	80207a8 <_ZdlPvj>
 800d318:	4620      	mov	r0, r4
 800d31a:	bd10      	pop	{r4, pc}

0800d31c <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih>:
 800d31c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d320:	b08d      	sub	sp, #52	; 0x34
 800d322:	e9dd 9a18 	ldrd	r9, sl, [sp, #96]	; 0x60
 800d326:	9309      	str	r3, [sp, #36]	; 0x24
 800d328:	f89d 3068 	ldrb.w	r3, [sp, #104]	; 0x68
 800d32c:	930a      	str	r3, [sp, #40]	; 0x28
 800d32e:	4606      	mov	r6, r0
 800d330:	e9cd 1207 	strd	r1, r2, [sp, #28]
 800d334:	e9dd 7816 	ldrd	r7, r8, [sp, #88]	; 0x58
 800d338:	f1b9 0f00 	cmp.w	r9, #0
 800d33c:	d117      	bne.n	800d36e <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x52>
 800d33e:	2f00      	cmp	r7, #0
 800d340:	dc7c      	bgt.n	800d43c <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x120>
 800d342:	f1b8 0f00 	cmp.w	r8, #0
 800d346:	da01      	bge.n	800d34c <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x30>
 800d348:	2f00      	cmp	r7, #0
 800d34a:	d17a      	bne.n	800d442 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x126>
 800d34c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800d34e:	9318      	str	r3, [sp, #96]	; 0x60
 800d350:	2300      	movs	r3, #0
 800d352:	e9cd 3316 	strd	r3, r3, [sp, #88]	; 0x58
 800d356:	6832      	ldr	r2, [r6, #0]
 800d358:	9907      	ldr	r1, [sp, #28]
 800d35a:	f8d2 408c 	ldr.w	r4, [r2, #140]	; 0x8c
 800d35e:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800d362:	4630      	mov	r0, r6
 800d364:	46a4      	mov	ip, r4
 800d366:	b00d      	add	sp, #52	; 0x34
 800d368:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d36c:	4760      	bx	ip
 800d36e:	fb97 f4f9 	sdiv	r4, r7, r9
 800d372:	1e63      	subs	r3, r4, #1
 800d374:	9305      	str	r3, [sp, #20]
 800d376:	f1ba 0f00 	cmp.w	sl, #0
 800d37a:	d122      	bne.n	800d3c2 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xa6>
 800d37c:	fb98 faf9 	sdiv	sl, r8, r9
 800d380:	fb03 f509 	mul.w	r5, r3, r9
 800d384:	f10a 0a02 	add.w	sl, sl, #2
 800d388:	9b05      	ldr	r3, [sp, #20]
 800d38a:	459a      	cmp	sl, r3
 800d38c:	d059      	beq.n	800d442 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x126>
 800d38e:	42af      	cmp	r7, r5
 800d390:	dc5a      	bgt.n	800d448 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x12c>
 800d392:	45a8      	cmp	r8, r5
 800d394:	da01      	bge.n	800d39a <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x7e>
 800d396:	42af      	cmp	r7, r5
 800d398:	db0e      	blt.n	800d3b8 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x9c>
 800d39a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800d39c:	9302      	str	r3, [sp, #8]
 800d39e:	9905      	ldr	r1, [sp, #20]
 800d3a0:	6b73      	ldr	r3, [r6, #52]	; 0x34
 800d3a2:	6832      	ldr	r2, [r6, #0]
 800d3a4:	434b      	muls	r3, r1
 800d3a6:	e9cd 5300 	strd	r5, r3, [sp]
 800d3aa:	9907      	ldr	r1, [sp, #28]
 800d3ac:	f8d2 b08c 	ldr.w	fp, [r2, #140]	; 0x8c
 800d3b0:	4630      	mov	r0, r6
 800d3b2:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800d3b6:	47d8      	blx	fp
 800d3b8:	9b05      	ldr	r3, [sp, #20]
 800d3ba:	3301      	adds	r3, #1
 800d3bc:	9305      	str	r3, [sp, #20]
 800d3be:	444d      	add	r5, r9
 800d3c0:	e7e2      	b.n	800d388 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x6c>
 800d3c2:	fb97 f3fa 	sdiv	r3, r7, sl
 800d3c6:	3b01      	subs	r3, #1
 800d3c8:	9306      	str	r3, [sp, #24]
 800d3ca:	9a06      	ldr	r2, [sp, #24]
 800d3cc:	fb98 f3fa 	sdiv	r3, r8, sl
 800d3d0:	fb02 fb0a 	mul.w	fp, r2, sl
 800d3d4:	9a05      	ldr	r2, [sp, #20]
 800d3d6:	3302      	adds	r3, #2
 800d3d8:	fb02 f509 	mul.w	r5, r2, r9
 800d3dc:	930b      	str	r3, [sp, #44]	; 0x2c
 800d3de:	45ab      	cmp	fp, r5
 800d3e0:	dd1d      	ble.n	800d41e <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x102>
 800d3e2:	42af      	cmp	r7, r5
 800d3e4:	dc08      	bgt.n	800d3f8 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xdc>
 800d3e6:	45a8      	cmp	r8, r5
 800d3e8:	da08      	bge.n	800d3fc <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xe0>
 800d3ea:	42af      	cmp	r7, r5
 800d3ec:	da06      	bge.n	800d3fc <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xe0>
 800d3ee:	9b05      	ldr	r3, [sp, #20]
 800d3f0:	3301      	adds	r3, #1
 800d3f2:	9305      	str	r3, [sp, #20]
 800d3f4:	444d      	add	r5, r9
 800d3f6:	e7f2      	b.n	800d3de <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xc2>
 800d3f8:	45a8      	cmp	r8, r5
 800d3fa:	dcf8      	bgt.n	800d3ee <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xd2>
 800d3fc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800d3fe:	9302      	str	r3, [sp, #8]
 800d400:	9905      	ldr	r1, [sp, #20]
 800d402:	6b73      	ldr	r3, [r6, #52]	; 0x34
 800d404:	6832      	ldr	r2, [r6, #0]
 800d406:	434b      	muls	r3, r1
 800d408:	e9cd 5300 	strd	r5, r3, [sp]
 800d40c:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 800d410:	9907      	ldr	r1, [sp, #28]
 800d412:	461c      	mov	r4, r3
 800d414:	4630      	mov	r0, r6
 800d416:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800d41a:	47a0      	blx	r4
 800d41c:	e7e7      	b.n	800d3ee <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xd2>
 800d41e:	45ab      	cmp	fp, r5
 800d420:	db04      	blt.n	800d42c <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x110>
 800d422:	9b05      	ldr	r3, [sp, #20]
 800d424:	3301      	adds	r3, #1
 800d426:	9305      	str	r3, [sp, #20]
 800d428:	444d      	add	r5, r9
 800d42a:	e7f8      	b.n	800d41e <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x102>
 800d42c:	9b06      	ldr	r3, [sp, #24]
 800d42e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800d430:	3301      	adds	r3, #1
 800d432:	4293      	cmp	r3, r2
 800d434:	9306      	str	r3, [sp, #24]
 800d436:	d004      	beq.n	800d442 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x126>
 800d438:	44d3      	add	fp, sl
 800d43a:	e7d0      	b.n	800d3de <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xc2>
 800d43c:	f1b8 0f00 	cmp.w	r8, #0
 800d440:	dd84      	ble.n	800d34c <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x30>
 800d442:	b00d      	add	sp, #52	; 0x34
 800d444:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d448:	45a8      	cmp	r8, r5
 800d44a:	dcb5      	bgt.n	800d3b8 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x9c>
 800d44c:	e7a5      	b.n	800d39a <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x7e>

0800d44e <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih>:
 800d44e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d452:	f9b3 4120 	ldrsh.w	r4, [r3, #288]	; 0x120
 800d456:	b089      	sub	sp, #36	; 0x24
 800d458:	2c00      	cmp	r4, #0
 800d45a:	9007      	str	r0, [sp, #28]
 800d45c:	468a      	mov	sl, r1
 800d45e:	4693      	mov	fp, r2
 800d460:	461d      	mov	r5, r3
 800d462:	e9dd c612 	ldrd	ip, r6, [sp, #72]	; 0x48
 800d466:	e9dd 7814 	ldrd	r7, r8, [sp, #80]	; 0x50
 800d46a:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 800d46e:	dd03      	ble.n	800d478 <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x2a>
 800d470:	4564      	cmp	r4, ip
 800d472:	dd01      	ble.n	800d478 <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x2a>
 800d474:	42b4      	cmp	r4, r6
 800d476:	dd0e      	ble.n	800d496 <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x48>
 800d478:	e9cd 8915 	strd	r8, r9, [sp, #84]	; 0x54
 800d47c:	e9cd 6713 	strd	r6, r7, [sp, #76]	; 0x4c
 800d480:	f8cd c048 	str.w	ip, [sp, #72]	; 0x48
 800d484:	9807      	ldr	r0, [sp, #28]
 800d486:	462b      	mov	r3, r5
 800d488:	465a      	mov	r2, fp
 800d48a:	4651      	mov	r1, sl
 800d48c:	b009      	add	sp, #36	; 0x24
 800d48e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d492:	f7ff bf43 	b.w	800d31c <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih>
 800d496:	f104 3eff 	add.w	lr, r4, #4294967295
 800d49a:	e9cd 8903 	strd	r8, r9, [sp, #12]
 800d49e:	9702      	str	r7, [sp, #8]
 800d4a0:	e9cd ce00 	strd	ip, lr, [sp]
 800d4a4:	f7ff ff3a 	bl	800d31c <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih>
 800d4a8:	e9cd 8915 	strd	r8, r9, [sp, #84]	; 0x54
 800d4ac:	e9cd 6713 	strd	r6, r7, [sp, #76]	; 0x4c
 800d4b0:	9412      	str	r4, [sp, #72]	; 0x48
 800d4b2:	e7e7      	b.n	800d484 <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x36>

0800d4b4 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti>:
 800d4b4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d4b8:	f1b3 0900 	subs.w	r9, r3, #0
 800d4bc:	460d      	mov	r5, r1
 800d4be:	4690      	mov	r8, r2
 800d4c0:	9f08      	ldr	r7, [sp, #32]
 800d4c2:	f8bd a024 	ldrh.w	sl, [sp, #36]	; 0x24
 800d4c6:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 800d4c8:	da18      	bge.n	800d4fc <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x48>
 800d4ca:	2a01      	cmp	r2, #1
 800d4cc:	dd16      	ble.n	800d4fc <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x48>
 800d4ce:	232d      	movs	r3, #45	; 0x2d
 800d4d0:	800b      	strh	r3, [r1, #0]
 800d4d2:	f1c9 0900 	rsb	r9, r9, #0
 800d4d6:	2001      	movs	r0, #1
 800d4d8:	2f00      	cmp	r7, #0
 800d4da:	d111      	bne.n	800d500 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x4c>
 800d4dc:	eba8 0100 	sub.w	r1, r8, r0
 800d4e0:	2302      	movs	r3, #2
 800d4e2:	eb05 0040 	add.w	r0, r5, r0, lsl #1
 800d4e6:	fb96 f3f3 	sdiv	r3, r6, r3
 800d4ea:	4a24      	ldr	r2, [pc, #144]	; (800d57c <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc8>)
 800d4ec:	444b      	add	r3, r9
 800d4ee:	b289      	uxth	r1, r1
 800d4f0:	fb93 f3f6 	sdiv	r3, r3, r6
 800d4f4:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d4f8:	f006 bdf8 	b.w	80140ec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 800d4fc:	2000      	movs	r0, #0
 800d4fe:	e7eb      	b.n	800d4d8 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x24>
 800d500:	dd39      	ble.n	800d576 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc2>
 800d502:	fb99 f4f6 	sdiv	r4, r9, r6
 800d506:	eba8 0100 	sub.w	r1, r8, r0
 800d50a:	4623      	mov	r3, r4
 800d50c:	4a1b      	ldr	r2, [pc, #108]	; (800d57c <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc8>)
 800d50e:	b289      	uxth	r1, r1
 800d510:	eb05 0040 	add.w	r0, r5, r0, lsl #1
 800d514:	f006 fdea 	bl	80140ec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 800d518:	4628      	mov	r0, r5
 800d51a:	f006 fa73 	bl	8013a04 <_ZN8touchgfx7Unicode6strlenEPKt>
 800d51e:	f108 38ff 	add.w	r8, r8, #4294967295
 800d522:	4580      	cmp	r8, r0
 800d524:	dd27      	ble.n	800d576 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc2>
 800d526:	f825 a010 	strh.w	sl, [r5, r0, lsl #1]
 800d52a:	fb06 9314 	mls	r3, r6, r4, r9
 800d52e:	3001      	adds	r0, #1
 800d530:	2200      	movs	r2, #0
 800d532:	f04f 090a 	mov.w	r9, #10
 800d536:	f107 3aff 	add.w	sl, r7, #4294967295
 800d53a:	f04f 0e02 	mov.w	lr, #2
 800d53e:	fb96 fefe 	sdiv	lr, r6, lr
 800d542:	4580      	cmp	r8, r0
 800d544:	4684      	mov	ip, r0
 800d546:	dd13      	ble.n	800d570 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xbc>
 800d548:	fb09 f303 	mul.w	r3, r9, r3
 800d54c:	4592      	cmp	sl, r2
 800d54e:	f102 0201 	add.w	r2, r2, #1
 800d552:	bf08      	it	eq
 800d554:	4473      	addeq	r3, lr
 800d556:	f100 0c01 	add.w	ip, r0, #1
 800d55a:	fb93 f4f6 	sdiv	r4, r3, r6
 800d55e:	4297      	cmp	r7, r2
 800d560:	f104 0130 	add.w	r1, r4, #48	; 0x30
 800d564:	f825 1010 	strh.w	r1, [r5, r0, lsl #1]
 800d568:	fb06 3314 	mls	r3, r6, r4, r3
 800d56c:	4660      	mov	r0, ip
 800d56e:	d1e8      	bne.n	800d542 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x8e>
 800d570:	2300      	movs	r3, #0
 800d572:	f825 301c 	strh.w	r3, [r5, ip, lsl #1]
 800d576:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800d57a:	bf00      	nop
 800d57c:	08023620 	.word	0x08023620

0800d580 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs>:
 800d580:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d584:	4a6b      	ldr	r2, [pc, #428]	; (800d734 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1b4>)
 800d586:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 800d588:	8812      	ldrh	r2, [r2, #0]
 800d58a:	429a      	cmp	r2, r3
 800d58c:	b092      	sub	sp, #72	; 0x48
 800d58e:	4604      	mov	r4, r0
 800d590:	460e      	mov	r6, r1
 800d592:	d93a      	bls.n	800d60a <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800d594:	4a68      	ldr	r2, [pc, #416]	; (800d738 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1b8>)
 800d596:	6812      	ldr	r2, [r2, #0]
 800d598:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800d59c:	4b67      	ldr	r3, [pc, #412]	; (800d73c <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1bc>)
 800d59e:	681b      	ldr	r3, [r3, #0]
 800d5a0:	f853 8022 	ldr.w	r8, [r3, r2, lsl #2]
 800d5a4:	f1b8 0f00 	cmp.w	r8, #0
 800d5a8:	d02f      	beq.n	800d60a <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800d5aa:	6803      	ldr	r3, [r0, #0]
 800d5ac:	6945      	ldr	r5, [r0, #20]
 800d5ae:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800d5b0:	2d00      	cmp	r5, #0
 800d5b2:	f000 80ba 	beq.w	800d72a <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1aa>
 800d5b6:	696f      	ldr	r7, [r5, #20]
 800d5b8:	4798      	blx	r3
 800d5ba:	f897 302c 	ldrb.w	r3, [r7, #44]	; 0x2c
 800d5be:	fb13 f000 	smulbb	r0, r3, r0
 800d5c2:	b280      	uxth	r0, r0
 800d5c4:	1c43      	adds	r3, r0, #1
 800d5c6:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 800d5ca:	0a03      	lsrs	r3, r0, #8
 800d5cc:	d01d      	beq.n	800d60a <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800d5ce:	6b39      	ldr	r1, [r7, #48]	; 0x30
 800d5d0:	6823      	ldr	r3, [r4, #0]
 800d5d2:	434e      	muls	r6, r1
 800d5d4:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800d5d8:	4639      	mov	r1, r7
 800d5da:	4620      	mov	r0, r4
 800d5dc:	4798      	blx	r3
 800d5de:	6823      	ldr	r3, [r4, #0]
 800d5e0:	4605      	mov	r5, r0
 800d5e2:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800d5e6:	4639      	mov	r1, r7
 800d5e8:	4620      	mov	r0, r4
 800d5ea:	4798      	blx	r3
 800d5ec:	2d00      	cmp	r5, #0
 800d5ee:	dd0f      	ble.n	800d610 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x90>
 800d5f0:	fb96 f3f5 	sdiv	r3, r6, r5
 800d5f4:	436b      	muls	r3, r5
 800d5f6:	1b9a      	subs	r2, r3, r6
 800d5f8:	4253      	negs	r3, r2
 800d5fa:	4153      	adcs	r3, r2
 800d5fc:	2800      	cmp	r0, #0
 800d5fe:	dd09      	ble.n	800d614 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x94>
 800d600:	fb96 f2f0 	sdiv	r2, r6, r0
 800d604:	4350      	muls	r0, r2
 800d606:	42b0      	cmp	r0, r6
 800d608:	d10e      	bne.n	800d628 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xa8>
 800d60a:	b012      	add	sp, #72	; 0x48
 800d60c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800d610:	2300      	movs	r3, #0
 800d612:	e7f3      	b.n	800d5fc <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x7c>
 800d614:	d108      	bne.n	800d628 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xa8>
 800d616:	2d00      	cmp	r5, #0
 800d618:	f040 8084 	bne.w	800d724 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1a4>
 800d61c:	2e00      	cmp	r6, #0
 800d61e:	d055      	beq.n	800d6cc <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x14c>
 800d620:	2b00      	cmp	r3, #0
 800d622:	d0f2      	beq.n	800d60a <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800d624:	462a      	mov	r2, r5
 800d626:	e007      	b.n	800d638 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xb8>
 800d628:	2b00      	cmp	r3, #0
 800d62a:	d0ee      	beq.n	800d60a <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800d62c:	2d00      	cmp	r5, #0
 800d62e:	d0f9      	beq.n	800d624 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xa4>
 800d630:	fb96 f2f5 	sdiv	r2, r6, r5
 800d634:	6b65      	ldr	r5, [r4, #52]	; 0x34
 800d636:	436a      	muls	r2, r5
 800d638:	683b      	ldr	r3, [r7, #0]
 800d63a:	f8df 9104 	ldr.w	r9, [pc, #260]	; 800d740 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1c0>
 800d63e:	f8d3 3110 	ldr.w	r3, [r3, #272]	; 0x110
 800d642:	4631      	mov	r1, r6
 800d644:	4638      	mov	r0, r7
 800d646:	4798      	blx	r3
 800d648:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800d64a:	9302      	str	r3, [sp, #8]
 800d64c:	f8b4 3044 	ldrh.w	r3, [r4, #68]	; 0x44
 800d650:	9301      	str	r3, [sp, #4]
 800d652:	f8b4 3042 	ldrh.w	r3, [r4, #66]	; 0x42
 800d656:	9300      	str	r3, [sp, #0]
 800d658:	a908      	add	r1, sp, #32
 800d65a:	4603      	mov	r3, r0
 800d65c:	2214      	movs	r2, #20
 800d65e:	4620      	mov	r0, r4
 800d660:	f7ff ff28 	bl	800d4b4 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti>
 800d664:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800d668:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800d66a:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800d66e:	f8d8 3000 	ldr.w	r3, [r8]
 800d672:	d12d      	bne.n	800d6d0 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x150>
 800d674:	f8d9 0000 	ldr.w	r0, [r9]
 800d678:	699d      	ldr	r5, [r3, #24]
 800d67a:	f7f7 fc0d 	bl	8004e98 <_ZNK8touchgfx5Texts7getTextEt>
 800d67e:	aa08      	add	r2, sp, #32
 800d680:	4601      	mov	r1, r0
 800d682:	4640      	mov	r0, r8
 800d684:	47a8      	blx	r5
 800d686:	4605      	mov	r5, r0
 800d688:	683b      	ldr	r3, [r7, #0]
 800d68a:	f8b7 806c 	ldrh.w	r8, [r7, #108]	; 0x6c
 800d68e:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 800d692:	4631      	mov	r1, r6
 800d694:	4638      	mov	r0, r7
 800d696:	4798      	blx	r3
 800d698:	ab12      	add	r3, sp, #72	; 0x48
 800d69a:	f843 0d34 	str.w	r0, [r3, #-52]!
 800d69e:	4618      	mov	r0, r3
 800d6a0:	f7fe fea8 	bl	800c3f4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800d6a4:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800d6a8:	f8ad 301e 	strh.w	r3, [sp, #30]
 800d6ac:	4440      	add	r0, r8
 800d6ae:	6823      	ldr	r3, [r4, #0]
 800d6b0:	f8ad 501c 	strh.w	r5, [sp, #28]
 800d6b4:	eba0 0055 	sub.w	r0, r0, r5, lsr #1
 800d6b8:	2200      	movs	r2, #0
 800d6ba:	f8ad 0018 	strh.w	r0, [sp, #24]
 800d6be:	f8ad 201a 	strh.w	r2, [sp, #26]
 800d6c2:	691b      	ldr	r3, [r3, #16]
 800d6c4:	a906      	add	r1, sp, #24
 800d6c6:	4620      	mov	r0, r4
 800d6c8:	4798      	blx	r3
 800d6ca:	e79e      	b.n	800d60a <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800d6cc:	4632      	mov	r2, r6
 800d6ce:	e7b3      	b.n	800d638 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xb8>
 800d6d0:	f8d9 0000 	ldr.w	r0, [r9]
 800d6d4:	6a9d      	ldr	r5, [r3, #40]	; 0x28
 800d6d6:	f7f7 fbdf 	bl	8004e98 <_ZNK8touchgfx5Texts7getTextEt>
 800d6da:	aa08      	add	r2, sp, #32
 800d6dc:	4601      	mov	r1, r0
 800d6de:	4640      	mov	r0, r8
 800d6e0:	47a8      	blx	r5
 800d6e2:	f8d8 3000 	ldr.w	r3, [r8]
 800d6e6:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800d6e8:	f8d3 a040 	ldr.w	sl, [r3, #64]	; 0x40
 800d6ec:	4605      	mov	r5, r0
 800d6ee:	f8d9 0000 	ldr.w	r0, [r9]
 800d6f2:	f7f7 fbd1 	bl	8004e98 <_ZNK8touchgfx5Texts7getTextEt>
 800d6f6:	aa08      	add	r2, sp, #32
 800d6f8:	4601      	mov	r1, r0
 800d6fa:	4640      	mov	r0, r8
 800d6fc:	47d0      	blx	sl
 800d6fe:	f8d8 3000 	ldr.w	r3, [r8]
 800d702:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800d704:	f8d3 a024 	ldr.w	sl, [r3, #36]	; 0x24
 800d708:	fb15 f500 	smulbb	r5, r5, r0
 800d70c:	f8d9 0000 	ldr.w	r0, [r9]
 800d710:	f7f7 fbc2 	bl	8004e98 <_ZNK8touchgfx5Texts7getTextEt>
 800d714:	aa08      	add	r2, sp, #32
 800d716:	4601      	mov	r1, r0
 800d718:	4640      	mov	r0, r8
 800d71a:	47d0      	blx	sl
 800d71c:	b2ad      	uxth	r5, r5
 800d71e:	4405      	add	r5, r0
 800d720:	b2ad      	uxth	r5, r5
 800d722:	e7b1      	b.n	800d688 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x108>
 800d724:	2b00      	cmp	r3, #0
 800d726:	d183      	bne.n	800d630 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xb0>
 800d728:	e76f      	b.n	800d60a <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800d72a:	4798      	blx	r3
 800d72c:	f895 302c 	ldrb.w	r3, [r5, #44]	; 0x2c
 800d730:	deff      	udf	#255	; 0xff
 800d732:	bf00      	nop
 800d734:	20015660 	.word	0x20015660
 800d738:	2001565c 	.word	0x2001565c
 800d73c:	20015664 	.word	0x20015664
 800d740:	20015668 	.word	0x20015668

0800d744 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih>:
 800d744:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d748:	461d      	mov	r5, r3
 800d74a:	b099      	sub	sp, #100	; 0x64
 800d74c:	681b      	ldr	r3, [r3, #0]
 800d74e:	4604      	mov	r4, r0
 800d750:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 800d754:	4689      	mov	r9, r1
 800d756:	4628      	mov	r0, r5
 800d758:	9922      	ldr	r1, [sp, #136]	; 0x88
 800d75a:	4690      	mov	r8, r2
 800d75c:	4798      	blx	r3
 800d75e:	af18      	add	r7, sp, #96	; 0x60
 800d760:	f847 0d28 	str.w	r0, [r7, #-40]!
 800d764:	4638      	mov	r0, r7
 800d766:	f7fe fe45 	bl	800c3f4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800d76a:	f8b5 3116 	ldrh.w	r3, [r5, #278]	; 0x116
 800d76e:	1ac0      	subs	r0, r0, r3
 800d770:	b200      	sxth	r0, r0
 800d772:	2800      	cmp	r0, #0
 800d774:	f2c0 80b0 	blt.w	800d8d8 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x194>
 800d778:	f8b5 2118 	ldrh.w	r2, [r5, #280]	; 0x118
 800d77c:	441a      	add	r2, r3
 800d77e:	f8b5 3040 	ldrh.w	r3, [r5, #64]	; 0x40
 800d782:	1a9b      	subs	r3, r3, r2
 800d784:	b21b      	sxth	r3, r3
 800d786:	4298      	cmp	r0, r3
 800d788:	f280 80a6 	bge.w	800d8d8 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x194>
 800d78c:	682b      	ldr	r3, [r5, #0]
 800d78e:	e9dd 1222 	ldrd	r1, r2, [sp, #136]	; 0x88
 800d792:	f8d3 3110 	ldr.w	r3, [r3, #272]	; 0x110
 800d796:	4628      	mov	r0, r5
 800d798:	4798      	blx	r3
 800d79a:	682b      	ldr	r3, [r5, #0]
 800d79c:	f8b4 a042 	ldrh.w	sl, [r4, #66]	; 0x42
 800d7a0:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800d7a4:	f8b4 b044 	ldrh.w	fp, [r4, #68]	; 0x44
 800d7a8:	4606      	mov	r6, r0
 800d7aa:	4628      	mov	r0, r5
 800d7ac:	4798      	blx	r3
 800d7ae:	f8cd a000 	str.w	sl, [sp]
 800d7b2:	e9cd b001 	strd	fp, r0, [sp, #4]
 800d7b6:	4633      	mov	r3, r6
 800d7b8:	4639      	mov	r1, r7
 800d7ba:	2214      	movs	r2, #20
 800d7bc:	4620      	mov	r0, r4
 800d7be:	f7ff fe79 	bl	800d4b4 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti>
 800d7c2:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800d7c6:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800d7c8:	f8df a16c 	ldr.w	sl, [pc, #364]	; 800d938 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1f4>
 800d7cc:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800d7d0:	f8d8 3000 	ldr.w	r3, [r8]
 800d7d4:	f040 8083 	bne.w	800d8de <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x19a>
 800d7d8:	f8da 0000 	ldr.w	r0, [sl]
 800d7dc:	699e      	ldr	r6, [r3, #24]
 800d7de:	f7f7 fb5b 	bl	8004e98 <_ZNK8touchgfx5Texts7getTextEt>
 800d7e2:	463a      	mov	r2, r7
 800d7e4:	4601      	mov	r1, r0
 800d7e6:	4640      	mov	r0, r8
 800d7e8:	47b0      	blx	r6
 800d7ea:	4606      	mov	r6, r0
 800d7ec:	682b      	ldr	r3, [r5, #0]
 800d7ee:	9922      	ldr	r1, [sp, #136]	; 0x88
 800d7f0:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 800d7f4:	f8b5 a06c 	ldrh.w	sl, [r5, #108]	; 0x6c
 800d7f8:	4628      	mov	r0, r5
 800d7fa:	4798      	blx	r3
 800d7fc:	f10d 0b60 	add.w	fp, sp, #96	; 0x60
 800d800:	ad05      	add	r5, sp, #20
 800d802:	f84b 0d3c 	str.w	r0, [fp, #-60]!
 800d806:	4658      	mov	r0, fp
 800d808:	f7fe fdf4 	bl	800c3f4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800d80c:	4450      	add	r0, sl
 800d80e:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800d812:	f8ad 6018 	strh.w	r6, [sp, #24]
 800d816:	eba0 0056 	sub.w	r0, r0, r6, lsr #1
 800d81a:	f04f 0a00 	mov.w	sl, #0
 800d81e:	f8ad 301a 	strh.w	r3, [sp, #26]
 800d822:	f8ad 0014 	strh.w	r0, [sp, #20]
 800d826:	f8ad a016 	strh.w	sl, [sp, #22]
 800d82a:	e895 0003 	ldmia.w	r5, {r0, r1}
 800d82e:	ae07      	add	r6, sp, #28
 800d830:	e886 0003 	stmia.w	r6, {r0, r1}
 800d834:	4649      	mov	r1, r9
 800d836:	4630      	mov	r0, r6
 800d838:	f7fd fb08 	bl	800ae4c <_ZN8touchgfx4RectaNERKS0_>
 800d83c:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 800d840:	4553      	cmp	r3, sl
 800d842:	dd49      	ble.n	800d8d8 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x194>
 800d844:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 800d848:	4553      	cmp	r3, sl
 800d84a:	dd45      	ble.n	800d8d8 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x194>
 800d84c:	f8bd 301c 	ldrh.w	r3, [sp, #28]
 800d850:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800d854:	1a9b      	subs	r3, r3, r2
 800d856:	f8ad 301c 	strh.w	r3, [sp, #28]
 800d85a:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 800d85e:	f8bd 301e 	ldrh.w	r3, [sp, #30]
 800d862:	1a9b      	subs	r3, r3, r2
 800d864:	f8ad 301e 	strh.w	r3, [sp, #30]
 800d868:	6823      	ldr	r3, [r4, #0]
 800d86a:	4620      	mov	r0, r4
 800d86c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d86e:	4629      	mov	r1, r5
 800d870:	4798      	blx	r3
 800d872:	4b30      	ldr	r3, [pc, #192]	; (800d934 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1f0>)
 800d874:	f8b4 903c 	ldrh.w	r9, [r4, #60]	; 0x3c
 800d878:	681b      	ldr	r3, [r3, #0]
 800d87a:	f894 1040 	ldrb.w	r1, [r4, #64]	; 0x40
 800d87e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800d880:	eb03 0349 	add.w	r3, r3, r9, lsl #1
 800d884:	785b      	ldrb	r3, [r3, #1]
 800d886:	920b      	str	r2, [sp, #44]	; 0x2c
 800d888:	f3c3 0001 	ubfx	r0, r3, #0, #2
 800d88c:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800d890:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800d894:	f89d 3090 	ldrb.w	r3, [sp, #144]	; 0x90
 800d898:	f88d 102a 	strb.w	r1, [sp, #42]	; 0x2a
 800d89c:	f88d 3032 	strb.w	r3, [sp, #50]	; 0x32
 800d8a0:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 800d8a4:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 800d8a8:	f8ad a030 	strh.w	sl, [sp, #48]	; 0x30
 800d8ac:	f88d a033 	strb.w	sl, [sp, #51]	; 0x33
 800d8b0:	f88d a034 	strb.w	sl, [sp, #52]	; 0x34
 800d8b4:	f7f4 ff88 	bl	80027c8 <_ZN8touchgfx3HAL3lcdEv>
 800d8b8:	4b1f      	ldr	r3, [pc, #124]	; (800d938 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1f4>)
 800d8ba:	4604      	mov	r4, r0
 800d8bc:	4649      	mov	r1, r9
 800d8be:	6818      	ldr	r0, [r3, #0]
 800d8c0:	f7f7 faea 	bl	8004e98 <_ZNK8touchgfx5Texts7getTextEt>
 800d8c4:	e9cd 7a02 	strd	r7, sl, [sp, #8]
 800d8c8:	e9cd b000 	strd	fp, r0, [sp]
 800d8cc:	4633      	mov	r3, r6
 800d8ce:	e895 0006 	ldmia.w	r5, {r1, r2}
 800d8d2:	4620      	mov	r0, r4
 800d8d4:	f7f7 fa92 	bl	8004dfc <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800d8d8:	b019      	add	sp, #100	; 0x64
 800d8da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d8de:	f8da 0000 	ldr.w	r0, [sl]
 800d8e2:	6a9e      	ldr	r6, [r3, #40]	; 0x28
 800d8e4:	f7f7 fad8 	bl	8004e98 <_ZNK8touchgfx5Texts7getTextEt>
 800d8e8:	463a      	mov	r2, r7
 800d8ea:	4601      	mov	r1, r0
 800d8ec:	4640      	mov	r0, r8
 800d8ee:	47b0      	blx	r6
 800d8f0:	f8d8 3000 	ldr.w	r3, [r8]
 800d8f4:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800d8f6:	f8d3 b040 	ldr.w	fp, [r3, #64]	; 0x40
 800d8fa:	4606      	mov	r6, r0
 800d8fc:	f8da 0000 	ldr.w	r0, [sl]
 800d900:	f7f7 faca 	bl	8004e98 <_ZNK8touchgfx5Texts7getTextEt>
 800d904:	463a      	mov	r2, r7
 800d906:	4601      	mov	r1, r0
 800d908:	4640      	mov	r0, r8
 800d90a:	47d8      	blx	fp
 800d90c:	f8d8 3000 	ldr.w	r3, [r8]
 800d910:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800d912:	f8d3 b024 	ldr.w	fp, [r3, #36]	; 0x24
 800d916:	fb16 f600 	smulbb	r6, r6, r0
 800d91a:	f8da 0000 	ldr.w	r0, [sl]
 800d91e:	f7f7 fabb 	bl	8004e98 <_ZNK8touchgfx5Texts7getTextEt>
 800d922:	463a      	mov	r2, r7
 800d924:	4601      	mov	r1, r0
 800d926:	4640      	mov	r0, r8
 800d928:	47d8      	blx	fp
 800d92a:	b2b6      	uxth	r6, r6
 800d92c:	4406      	add	r6, r0
 800d92e:	b2b6      	uxth	r6, r6
 800d930:	e75c      	b.n	800d7ec <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0xa8>
 800d932:	bf00      	nop
 800d934:	2001565c 	.word	0x2001565c
 800d938:	20015668 	.word	0x20015668

0800d93c <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih>:
 800d93c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d940:	4698      	mov	r8, r3
 800d942:	b099      	sub	sp, #100	; 0x64
 800d944:	681b      	ldr	r3, [r3, #0]
 800d946:	4604      	mov	r4, r0
 800d948:	f8d3 3118 	ldr.w	r3, [r3, #280]	; 0x118
 800d94c:	4689      	mov	r9, r1
 800d94e:	4640      	mov	r0, r8
 800d950:	9922      	ldr	r1, [sp, #136]	; 0x88
 800d952:	4617      	mov	r7, r2
 800d954:	4798      	blx	r3
 800d956:	ae18      	add	r6, sp, #96	; 0x60
 800d958:	f846 0d28 	str.w	r0, [r6, #-40]!
 800d95c:	4630      	mov	r0, r6
 800d95e:	f7fe fd49 	bl	800c3f4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800d962:	f8b8 3114 	ldrh.w	r3, [r8, #276]	; 0x114
 800d966:	1ac0      	subs	r0, r0, r3
 800d968:	b200      	sxth	r0, r0
 800d96a:	2800      	cmp	r0, #0
 800d96c:	f2c0 80c0 	blt.w	800daf0 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1b4>
 800d970:	f8b8 211a 	ldrh.w	r2, [r8, #282]	; 0x11a
 800d974:	441a      	add	r2, r3
 800d976:	f8b8 3042 	ldrh.w	r3, [r8, #66]	; 0x42
 800d97a:	1a9b      	subs	r3, r3, r2
 800d97c:	b21b      	sxth	r3, r3
 800d97e:	4298      	cmp	r0, r3
 800d980:	f280 80b6 	bge.w	800daf0 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1b4>
 800d984:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800d986:	9302      	str	r3, [sp, #8]
 800d988:	f8b4 3044 	ldrh.w	r3, [r4, #68]	; 0x44
 800d98c:	9301      	str	r3, [sp, #4]
 800d98e:	f8b4 3042 	ldrh.w	r3, [r4, #66]	; 0x42
 800d992:	9300      	str	r3, [sp, #0]
 800d994:	4631      	mov	r1, r6
 800d996:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800d998:	f8df a174 	ldr.w	sl, [pc, #372]	; 800db10 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1d4>
 800d99c:	2214      	movs	r2, #20
 800d99e:	4620      	mov	r0, r4
 800d9a0:	f7ff fd88 	bl	800d4b4 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti>
 800d9a4:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800d9a8:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800d9aa:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800d9ae:	683b      	ldr	r3, [r7, #0]
 800d9b0:	f040 80a1 	bne.w	800daf6 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1ba>
 800d9b4:	f8da 0000 	ldr.w	r0, [sl]
 800d9b8:	6a9d      	ldr	r5, [r3, #40]	; 0x28
 800d9ba:	f7f7 fa6d 	bl	8004e98 <_ZNK8touchgfx5Texts7getTextEt>
 800d9be:	4632      	mov	r2, r6
 800d9c0:	4601      	mov	r1, r0
 800d9c2:	4638      	mov	r0, r7
 800d9c4:	47a8      	blx	r5
 800d9c6:	683b      	ldr	r3, [r7, #0]
 800d9c8:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800d9ca:	f8d3 b040 	ldr.w	fp, [r3, #64]	; 0x40
 800d9ce:	4605      	mov	r5, r0
 800d9d0:	f8da 0000 	ldr.w	r0, [sl]
 800d9d4:	f7f7 fa60 	bl	8004e98 <_ZNK8touchgfx5Texts7getTextEt>
 800d9d8:	4632      	mov	r2, r6
 800d9da:	4601      	mov	r1, r0
 800d9dc:	4638      	mov	r0, r7
 800d9de:	47d8      	blx	fp
 800d9e0:	683b      	ldr	r3, [r7, #0]
 800d9e2:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800d9e4:	f8d3 b024 	ldr.w	fp, [r3, #36]	; 0x24
 800d9e8:	fb15 f500 	smulbb	r5, r5, r0
 800d9ec:	f8da 0000 	ldr.w	r0, [sl]
 800d9f0:	f7f7 fa52 	bl	8004e98 <_ZNK8touchgfx5Texts7getTextEt>
 800d9f4:	4632      	mov	r2, r6
 800d9f6:	4601      	mov	r1, r0
 800d9f8:	4638      	mov	r0, r7
 800d9fa:	47d8      	blx	fp
 800d9fc:	b2ad      	uxth	r5, r5
 800d9fe:	4405      	add	r5, r0
 800da00:	b2ad      	uxth	r5, r5
 800da02:	f8d8 3000 	ldr.w	r3, [r8]
 800da06:	9922      	ldr	r1, [sp, #136]	; 0x88
 800da08:	f8d3 3118 	ldr.w	r3, [r3, #280]	; 0x118
 800da0c:	f8b8 a0c6 	ldrh.w	sl, [r8, #198]	; 0xc6
 800da10:	4640      	mov	r0, r8
 800da12:	4798      	blx	r3
 800da14:	f10d 0b60 	add.w	fp, sp, #96	; 0x60
 800da18:	f04f 0800 	mov.w	r8, #0
 800da1c:	f84b 0d3c 	str.w	r0, [fp, #-60]!
 800da20:	4658      	mov	r0, fp
 800da22:	f7fe fce7 	bl	800c3f4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800da26:	4450      	add	r0, sl
 800da28:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800da2c:	f8ad 3018 	strh.w	r3, [sp, #24]
 800da30:	eba0 0055 	sub.w	r0, r0, r5, lsr #1
 800da34:	f8ad 501a 	strh.w	r5, [sp, #26]
 800da38:	f8ad 8014 	strh.w	r8, [sp, #20]
 800da3c:	f8ad 0016 	strh.w	r0, [sp, #22]
 800da40:	ad05      	add	r5, sp, #20
 800da42:	e895 0003 	ldmia.w	r5, {r0, r1}
 800da46:	f10d 0a1c 	add.w	sl, sp, #28
 800da4a:	e88a 0003 	stmia.w	sl, {r0, r1}
 800da4e:	4649      	mov	r1, r9
 800da50:	4650      	mov	r0, sl
 800da52:	f7fd f9fb 	bl	800ae4c <_ZN8touchgfx4RectaNERKS0_>
 800da56:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 800da5a:	4543      	cmp	r3, r8
 800da5c:	dd48      	ble.n	800daf0 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1b4>
 800da5e:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 800da62:	4543      	cmp	r3, r8
 800da64:	dd44      	ble.n	800daf0 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1b4>
 800da66:	f8bd 301c 	ldrh.w	r3, [sp, #28]
 800da6a:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800da6e:	1a9b      	subs	r3, r3, r2
 800da70:	f8ad 301c 	strh.w	r3, [sp, #28]
 800da74:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 800da78:	f8bd 301e 	ldrh.w	r3, [sp, #30]
 800da7c:	1a9b      	subs	r3, r3, r2
 800da7e:	f8ad 301e 	strh.w	r3, [sp, #30]
 800da82:	6823      	ldr	r3, [r4, #0]
 800da84:	4620      	mov	r0, r4
 800da86:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800da88:	4629      	mov	r1, r5
 800da8a:	4798      	blx	r3
 800da8c:	4b1f      	ldr	r3, [pc, #124]	; (800db0c <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1d0>)
 800da8e:	f8b4 903c 	ldrh.w	r9, [r4, #60]	; 0x3c
 800da92:	681b      	ldr	r3, [r3, #0]
 800da94:	f894 1040 	ldrb.w	r1, [r4, #64]	; 0x40
 800da98:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800da9a:	eb03 0349 	add.w	r3, r3, r9, lsl #1
 800da9e:	785b      	ldrb	r3, [r3, #1]
 800daa0:	920b      	str	r2, [sp, #44]	; 0x2c
 800daa2:	f3c3 0001 	ubfx	r0, r3, #0, #2
 800daa6:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800daaa:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800daae:	f89d 3090 	ldrb.w	r3, [sp, #144]	; 0x90
 800dab2:	f88d 102a 	strb.w	r1, [sp, #42]	; 0x2a
 800dab6:	f88d 3032 	strb.w	r3, [sp, #50]	; 0x32
 800daba:	9709      	str	r7, [sp, #36]	; 0x24
 800dabc:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 800dac0:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
 800dac4:	f88d 8033 	strb.w	r8, [sp, #51]	; 0x33
 800dac8:	f88d 8034 	strb.w	r8, [sp, #52]	; 0x34
 800dacc:	f7f4 fe7c 	bl	80027c8 <_ZN8touchgfx3HAL3lcdEv>
 800dad0:	4b0f      	ldr	r3, [pc, #60]	; (800db10 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1d4>)
 800dad2:	4604      	mov	r4, r0
 800dad4:	4649      	mov	r1, r9
 800dad6:	6818      	ldr	r0, [r3, #0]
 800dad8:	f7f7 f9de 	bl	8004e98 <_ZNK8touchgfx5Texts7getTextEt>
 800dadc:	e9cd 6802 	strd	r6, r8, [sp, #8]
 800dae0:	e9cd b000 	strd	fp, r0, [sp]
 800dae4:	4653      	mov	r3, sl
 800dae6:	e895 0006 	ldmia.w	r5, {r1, r2}
 800daea:	4620      	mov	r0, r4
 800daec:	f7f7 f986 	bl	8004dfc <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800daf0:	b019      	add	sp, #100	; 0x64
 800daf2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800daf6:	f8da 0000 	ldr.w	r0, [sl]
 800dafa:	699d      	ldr	r5, [r3, #24]
 800dafc:	f7f7 f9cc 	bl	8004e98 <_ZNK8touchgfx5Texts7getTextEt>
 800db00:	4632      	mov	r2, r6
 800db02:	4601      	mov	r1, r0
 800db04:	4638      	mov	r0, r7
 800db06:	47a8      	blx	r5
 800db08:	4605      	mov	r5, r0
 800db0a:	e77a      	b.n	800da02 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0xc6>
 800db0c:	2001565c 	.word	0x2001565c
 800db10:	20015668 	.word	0x20015668

0800db14 <_ZN8touchgfx15GraphScrollData5clearEv>:
 800db14:	b510      	push	{r4, lr}
 800db16:	4604      	mov	r4, r0
 800db18:	f7fe fb05 	bl	800c126 <_ZN8touchgfx17AbstractDataGraph5clearEv>
 800db1c:	2300      	movs	r3, #0
 800db1e:	f8a4 314c 	strh.w	r3, [r4, #332]	; 0x14c
 800db22:	bd10      	pop	{r4, pc}

0800db24 <_ZN8touchgfx15GraphScrollData14beforeAddValueEv>:
 800db24:	f9b0 211e 	ldrsh.w	r2, [r0, #286]	; 0x11e
 800db28:	f9b0 311c 	ldrsh.w	r3, [r0, #284]	; 0x11c
 800db2c:	429a      	cmp	r2, r3
 800db2e:	d101      	bne.n	800db34 <_ZN8touchgfx15GraphScrollData14beforeAddValueEv+0x10>
 800db30:	f7fe bd38 	b.w	800c5a4 <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv>
 800db34:	4770      	bx	lr

0800db36 <_ZNK8touchgfx15GraphScrollData18indexToGlobalIndexEs>:
 800db36:	b538      	push	{r3, r4, r5, lr}
 800db38:	f9b0 411c 	ldrsh.w	r4, [r0, #284]	; 0x11c
 800db3c:	f9b0 511e 	ldrsh.w	r5, [r0, #286]	; 0x11e
 800db40:	42a5      	cmp	r5, r4
 800db42:	da04      	bge.n	800db4e <_ZNK8touchgfx15GraphScrollData18indexToGlobalIndexEs+0x18>
 800db44:	6803      	ldr	r3, [r0, #0]
 800db46:	f8d3 3180 	ldr.w	r3, [r3, #384]	; 0x180
 800db4a:	4798      	blx	r3
 800db4c:	bd38      	pop	{r3, r4, r5, pc}
 800db4e:	f8d0 0148 	ldr.w	r0, [r0, #328]	; 0x148
 800db52:	4408      	add	r0, r1
 800db54:	1b00      	subs	r0, r0, r4
 800db56:	e7f9      	b.n	800db4c <_ZNK8touchgfx15GraphScrollData18indexToGlobalIndexEs+0x16>

0800db58 <_ZN8touchgfx15GraphScrollData8addValueEi>:
 800db58:	b570      	push	{r4, r5, r6, lr}
 800db5a:	f9b0 514c 	ldrsh.w	r5, [r0, #332]	; 0x14c
 800db5e:	f9b0 611e 	ldrsh.w	r6, [r0, #286]	; 0x11e
 800db62:	f9b0 211c 	ldrsh.w	r2, [r0, #284]	; 0x11c
 800db66:	4604      	mov	r4, r0
 800db68:	1c6b      	adds	r3, r5, #1
 800db6a:	b21b      	sxth	r3, r3
 800db6c:	42ae      	cmp	r6, r5
 800db6e:	bf08      	it	eq
 800db70:	f8a4 311e 	strheq.w	r3, [r4, #286]	; 0x11e
 800db74:	fb93 f0f2 	sdiv	r0, r3, r2
 800db78:	fb02 3010 	mls	r0, r2, r0, r3
 800db7c:	f8d4 3144 	ldr.w	r3, [r4, #324]	; 0x144
 800db80:	f8a4 014c 	strh.w	r0, [r4, #332]	; 0x14c
 800db84:	4296      	cmp	r6, r2
 800db86:	f843 1025 	str.w	r1, [r3, r5, lsl #2]
 800db8a:	d108      	bne.n	800db9e <_ZN8touchgfx15GraphScrollData8addValueEi+0x46>
 800db8c:	f104 0038 	add.w	r0, r4, #56	; 0x38
 800db90:	f004 fa85 	bl	801209e <_ZNK8touchgfx8Drawable10invalidateEv>
 800db94:	4620      	mov	r0, r4
 800db96:	f7fe fd05 	bl	800c5a4 <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv>
 800db9a:	4628      	mov	r0, r5
 800db9c:	bd70      	pop	{r4, r5, r6, pc}
 800db9e:	4629      	mov	r1, r5
 800dba0:	4620      	mov	r0, r4
 800dba2:	f7fe fcd7 	bl	800c554 <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs>
 800dba6:	e7f8      	b.n	800db9a <_ZN8touchgfx15GraphScrollData8addValueEi+0x42>

0800dba8 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 800dba8:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 800dbac:	4770      	bx	lr

0800dbae <_ZN8touchgfx14AbstractButton13executeActionEv>:
 800dbae:	b510      	push	{r4, lr}
 800dbb0:	4604      	mov	r4, r0
 800dbb2:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800dbb4:	b150      	cbz	r0, 800dbcc <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800dbb6:	6803      	ldr	r3, [r0, #0]
 800dbb8:	68db      	ldr	r3, [r3, #12]
 800dbba:	4798      	blx	r3
 800dbbc:	b130      	cbz	r0, 800dbcc <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800dbbe:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800dbc0:	6803      	ldr	r3, [r0, #0]
 800dbc2:	4621      	mov	r1, r4
 800dbc4:	689b      	ldr	r3, [r3, #8]
 800dbc6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800dbca:	4718      	bx	r3
 800dbcc:	bd10      	pop	{r4, pc}

0800dbce <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 800dbce:	b570      	push	{r4, r5, r6, lr}
 800dbd0:	790b      	ldrb	r3, [r1, #4]
 800dbd2:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 800dbd6:	2b00      	cmp	r3, #0
 800dbd8:	bf0c      	ite	eq
 800dbda:	2301      	moveq	r3, #1
 800dbdc:	2300      	movne	r3, #0
 800dbde:	4604      	mov	r4, r0
 800dbe0:	460e      	mov	r6, r1
 800dbe2:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 800dbe6:	d109      	bne.n	800dbfc <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 800dbe8:	b14d      	cbz	r5, 800dbfe <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 800dbea:	7933      	ldrb	r3, [r6, #4]
 800dbec:	2b01      	cmp	r3, #1
 800dbee:	d10c      	bne.n	800dc0a <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 800dbf0:	6823      	ldr	r3, [r4, #0]
 800dbf2:	4620      	mov	r0, r4
 800dbf4:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800dbf6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800dbfa:	4718      	bx	r3
 800dbfc:	b12d      	cbz	r5, 800dc0a <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 800dbfe:	6823      	ldr	r3, [r4, #0]
 800dc00:	4620      	mov	r0, r4
 800dc02:	695b      	ldr	r3, [r3, #20]
 800dc04:	4798      	blx	r3
 800dc06:	2d00      	cmp	r5, #0
 800dc08:	d1ef      	bne.n	800dbea <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 800dc0a:	bd70      	pop	{r4, r5, r6, pc}

0800dc0c <_ZN8touchgfx12ToggleButtonD1Ev>:
 800dc0c:	4770      	bx	lr

0800dc0e <_ZN8touchgfx12ToggleButton16handleClickEventERKNS_10ClickEventE>:
 800dc0e:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800dc12:	b133      	cbz	r3, 800dc22 <_ZN8touchgfx12ToggleButton16handleClickEventERKNS_10ClickEventE+0x14>
 800dc14:	790b      	ldrb	r3, [r1, #4]
 800dc16:	2b01      	cmp	r3, #1
 800dc18:	bf01      	itttt	eq
 800dc1a:	8dc3      	ldrheq	r3, [r0, #46]	; 0x2e
 800dc1c:	8e02      	ldrheq	r2, [r0, #48]	; 0x30
 800dc1e:	85c2      	strheq	r2, [r0, #46]	; 0x2e
 800dc20:	8603      	strheq	r3, [r0, #48]	; 0x30
 800dc22:	f7ff bfd4 	b.w	800dbce <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>

0800dc26 <_ZN8touchgfx12ToggleButton10setBitmapsERKNS_6BitmapES3_>:
 800dc26:	8813      	ldrh	r3, [r2, #0]
 800dc28:	8683      	strh	r3, [r0, #52]	; 0x34
 800dc2a:	f000 bbd0 	b.w	800e3ce <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>

0800dc2e <_ZN8touchgfx12ToggleButtonD0Ev>:
 800dc2e:	b510      	push	{r4, lr}
 800dc30:	2138      	movs	r1, #56	; 0x38
 800dc32:	4604      	mov	r4, r0
 800dc34:	f012 fdb8 	bl	80207a8 <_ZdlPvj>
 800dc38:	4620      	mov	r0, r4
 800dc3a:	bd10      	pop	{r4, pc}

0800dc3c <_ZNK8touchgfx6Button17invalidateContentEv>:
 800dc3c:	f890 2032 	ldrb.w	r2, [r0, #50]	; 0x32
 800dc40:	b12a      	cbz	r2, 800dc4e <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 800dc42:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800dc46:	b112      	cbz	r2, 800dc4e <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 800dc48:	6803      	ldr	r3, [r0, #0]
 800dc4a:	695b      	ldr	r3, [r3, #20]
 800dc4c:	4718      	bx	r3
 800dc4e:	4770      	bx	lr

0800dc50 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 800dc50:	2000      	movs	r0, #0
 800dc52:	4770      	bx	lr

0800dc54 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 800dc54:	4b07      	ldr	r3, [pc, #28]	; (800dc74 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 800dc56:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800dc58:	881b      	ldrh	r3, [r3, #0]
 800dc5a:	4293      	cmp	r3, r2
 800dc5c:	bf81      	itttt	hi
 800dc5e:	4b06      	ldrhi	r3, [pc, #24]	; (800dc78 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 800dc60:	681b      	ldrhi	r3, [r3, #0]
 800dc62:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 800dc66:	7858      	ldrbhi	r0, [r3, #1]
 800dc68:	bf8c      	ite	hi
 800dc6a:	f000 0003 	andhi.w	r0, r0, #3
 800dc6e:	2000      	movls	r0, #0
 800dc70:	4770      	bx	lr
 800dc72:	bf00      	nop
 800dc74:	20015660 	.word	0x20015660
 800dc78:	2001565c 	.word	0x2001565c

0800dc7c <_ZN8touchgfx8TextAreaD1Ev>:
 800dc7c:	4770      	bx	lr
	...

0800dc80 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 800dc80:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800dc84:	4b10      	ldr	r3, [pc, #64]	; (800dcc8 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 800dc86:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800dc88:	881b      	ldrh	r3, [r3, #0]
 800dc8a:	428b      	cmp	r3, r1
 800dc8c:	4604      	mov	r4, r0
 800dc8e:	d918      	bls.n	800dcc2 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 800dc90:	6803      	ldr	r3, [r0, #0]
 800dc92:	6f9d      	ldr	r5, [r3, #120]	; 0x78
 800dc94:	4b0d      	ldr	r3, [pc, #52]	; (800dccc <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 800dc96:	6818      	ldr	r0, [r3, #0]
 800dc98:	f7f7 f8fe 	bl	8004e98 <_ZNK8touchgfx5Texts7getTextEt>
 800dc9c:	6823      	ldr	r3, [r4, #0]
 800dc9e:	4606      	mov	r6, r0
 800dca0:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800dca2:	4620      	mov	r0, r4
 800dca4:	4798      	blx	r3
 800dca6:	6823      	ldr	r3, [r4, #0]
 800dca8:	4607      	mov	r7, r0
 800dcaa:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800dcae:	4620      	mov	r0, r4
 800dcb0:	4798      	blx	r3
 800dcb2:	463a      	mov	r2, r7
 800dcb4:	4603      	mov	r3, r0
 800dcb6:	4631      	mov	r1, r6
 800dcb8:	4620      	mov	r0, r4
 800dcba:	46ac      	mov	ip, r5
 800dcbc:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800dcc0:	4760      	bx	ip
 800dcc2:	2000      	movs	r0, #0
 800dcc4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800dcc8:	20015660 	.word	0x20015660
 800dccc:	20015668 	.word	0x20015668

0800dcd0 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 800dcd0:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800dcd4:	4b17      	ldr	r3, [pc, #92]	; (800dd34 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 800dcd6:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800dcd8:	881b      	ldrh	r3, [r3, #0]
 800dcda:	428b      	cmp	r3, r1
 800dcdc:	4604      	mov	r4, r0
 800dcde:	d926      	bls.n	800dd2e <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 800dce0:	4b15      	ldr	r3, [pc, #84]	; (800dd38 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 800dce2:	681b      	ldr	r3, [r3, #0]
 800dce4:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 800dce8:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 800dcec:	4b13      	ldr	r3, [pc, #76]	; (800dd3c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 800dcee:	7855      	ldrb	r5, [r2, #1]
 800dcf0:	681b      	ldr	r3, [r3, #0]
 800dcf2:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 800dcf6:	6833      	ldr	r3, [r6, #0]
 800dcf8:	69df      	ldr	r7, [r3, #28]
 800dcfa:	4b11      	ldr	r3, [pc, #68]	; (800dd40 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 800dcfc:	6818      	ldr	r0, [r3, #0]
 800dcfe:	f7f7 f8cb 	bl	8004e98 <_ZNK8touchgfx5Texts7getTextEt>
 800dd02:	6823      	ldr	r3, [r4, #0]
 800dd04:	4680      	mov	r8, r0
 800dd06:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800dd08:	4620      	mov	r0, r4
 800dd0a:	4798      	blx	r3
 800dd0c:	6823      	ldr	r3, [r4, #0]
 800dd0e:	4681      	mov	r9, r0
 800dd10:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800dd14:	4620      	mov	r0, r4
 800dd16:	4798      	blx	r3
 800dd18:	f3c5 0581 	ubfx	r5, r5, #2, #2
 800dd1c:	9000      	str	r0, [sp, #0]
 800dd1e:	464b      	mov	r3, r9
 800dd20:	4642      	mov	r2, r8
 800dd22:	4629      	mov	r1, r5
 800dd24:	4630      	mov	r0, r6
 800dd26:	47b8      	blx	r7
 800dd28:	b003      	add	sp, #12
 800dd2a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800dd2e:	2000      	movs	r0, #0
 800dd30:	e7fa      	b.n	800dd28 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 800dd32:	bf00      	nop
 800dd34:	20015660 	.word	0x20015660
 800dd38:	2001565c 	.word	0x2001565c
 800dd3c:	20015664 	.word	0x20015664
 800dd40:	20015668 	.word	0x20015668

0800dd44 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 800dd44:	b40e      	push	{r1, r2, r3}
 800dd46:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800dd4a:	4b2f      	ldr	r3, [pc, #188]	; (800de08 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 800dd4c:	881a      	ldrh	r2, [r3, #0]
 800dd4e:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 800dd50:	429a      	cmp	r2, r3
 800dd52:	b09d      	sub	sp, #116	; 0x74
 800dd54:	4604      	mov	r4, r0
 800dd56:	d954      	bls.n	800de02 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 800dd58:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 800de0c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 800dd5c:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 800de10 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 800dd60:	aa26      	add	r2, sp, #152	; 0x98
 800dd62:	9202      	str	r2, [sp, #8]
 800dd64:	f8d9 2000 	ldr.w	r2, [r9]
 800dd68:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800dd6c:	f8d8 3000 	ldr.w	r3, [r8]
 800dd70:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800dd74:	682b      	ldr	r3, [r5, #0]
 800dd76:	4628      	mov	r0, r5
 800dd78:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800dd7a:	4798      	blx	r3
 800dd7c:	b207      	sxth	r7, r0
 800dd7e:	4606      	mov	r6, r0
 800dd80:	a803      	add	r0, sp, #12
 800dd82:	f004 fedc 	bl	8012b3e <_ZN8touchgfx12TextProviderC1Ev>
 800dd86:	682b      	ldr	r3, [r5, #0]
 800dd88:	4628      	mov	r0, r5
 800dd8a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800dd8c:	4798      	blx	r3
 800dd8e:	682b      	ldr	r3, [r5, #0]
 800dd90:	4682      	mov	sl, r0
 800dd92:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800dd94:	4628      	mov	r0, r5
 800dd96:	4798      	blx	r3
 800dd98:	4653      	mov	r3, sl
 800dd9a:	9000      	str	r0, [sp, #0]
 800dd9c:	9a02      	ldr	r2, [sp, #8]
 800dd9e:	9925      	ldr	r1, [sp, #148]	; 0x94
 800dda0:	a803      	add	r0, sp, #12
 800dda2:	f004 ff27 	bl	8012bf4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800dda6:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800dda8:	f8d9 3000 	ldr.w	r3, [r9]
 800ddac:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 800ddb0:	8925      	ldrh	r5, [r4, #8]
 800ddb2:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 800ddb6:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 800ddba:	eba5 050c 	sub.w	r5, r5, ip
 800ddbe:	784a      	ldrb	r2, [r1, #1]
 800ddc0:	f8d8 3000 	ldr.w	r3, [r8]
 800ddc4:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 800ddc8:	b22d      	sxth	r5, r5
 800ddca:	9500      	str	r5, [sp, #0]
 800ddcc:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 800ddd0:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800ddd4:	a803      	add	r0, sp, #12
 800ddd6:	f002 fd21 	bl	801081c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 800ddda:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 800ddde:	18b9      	adds	r1, r7, r2
 800dde0:	2900      	cmp	r1, #0
 800dde2:	b203      	sxth	r3, r0
 800dde4:	dd0b      	ble.n	800ddfe <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 800dde6:	3b01      	subs	r3, #1
 800dde8:	fb13 f302 	smulbb	r3, r3, r2
 800ddec:	fb16 3300 	smlabb	r3, r6, r0, r3
 800ddf0:	b21f      	sxth	r7, r3
 800ddf2:	4638      	mov	r0, r7
 800ddf4:	b01d      	add	sp, #116	; 0x74
 800ddf6:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800ddfa:	b003      	add	sp, #12
 800ddfc:	4770      	bx	lr
 800ddfe:	2b00      	cmp	r3, #0
 800de00:	dcf7      	bgt.n	800ddf2 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 800de02:	2700      	movs	r7, #0
 800de04:	e7f5      	b.n	800ddf2 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 800de06:	bf00      	nop
 800de08:	20015660 	.word	0x20015660
 800de0c:	2001565c 	.word	0x2001565c
 800de10:	20015664 	.word	0x20015664

0800de14 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 800de14:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800de18:	4bbb      	ldr	r3, [pc, #748]	; (800e108 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f4>)
 800de1a:	460c      	mov	r4, r1
 800de1c:	881b      	ldrh	r3, [r3, #0]
 800de1e:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
 800de20:	428b      	cmp	r3, r1
 800de22:	b0a9      	sub	sp, #164	; 0xa4
 800de24:	4681      	mov	r9, r0
 800de26:	d809      	bhi.n	800de3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 800de28:	2300      	movs	r3, #0
 800de2a:	f04f 32ff 	mov.w	r2, #4294967295
 800de2e:	e9c0 3200 	strd	r3, r2, [r0]
 800de32:	6083      	str	r3, [r0, #8]
 800de34:	4648      	mov	r0, r9
 800de36:	b029      	add	sp, #164	; 0xa4
 800de38:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800de3c:	f8df b2d0 	ldr.w	fp, [pc, #720]	; 800e110 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 800de40:	f8df 82d0 	ldr.w	r8, [pc, #720]	; 800e114 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>
 800de44:	f8db 3000 	ldr.w	r3, [fp]
 800de48:	f8d8 0000 	ldr.w	r0, [r8]
 800de4c:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 800de50:	4bae      	ldr	r3, [pc, #696]	; (800e10c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 800de52:	681b      	ldr	r3, [r3, #0]
 800de54:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800de58:	f7f7 f81e 	bl	8004e98 <_ZNK8touchgfx5Texts7getTextEt>
 800de5c:	682b      	ldr	r3, [r5, #0]
 800de5e:	4607      	mov	r7, r0
 800de60:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800de62:	4628      	mov	r0, r5
 800de64:	4798      	blx	r3
 800de66:	8ea6      	ldrh	r6, [r4, #52]	; 0x34
 800de68:	f8cd 800c 	str.w	r8, [sp, #12]
 800de6c:	4430      	add	r0, r6
 800de6e:	f894 6039 	ldrb.w	r6, [r4, #57]	; 0x39
 800de72:	b283      	uxth	r3, r0
 800de74:	f10d 0a3c 	add.w	sl, sp, #60	; 0x3c
 800de78:	9302      	str	r3, [sp, #8]
 800de7a:	4650      	mov	r0, sl
 800de7c:	2e00      	cmp	r6, #0
 800de7e:	f040 8091 	bne.w	800dfa4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 800de82:	f004 fe5c 	bl	8012b3e <_ZN8touchgfx12TextProviderC1Ev>
 800de86:	682b      	ldr	r3, [r5, #0]
 800de88:	4628      	mov	r0, r5
 800de8a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800de8c:	4798      	blx	r3
 800de8e:	682b      	ldr	r3, [r5, #0]
 800de90:	9005      	str	r0, [sp, #20]
 800de92:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800de94:	4628      	mov	r0, r5
 800de96:	4798      	blx	r3
 800de98:	6823      	ldr	r3, [r4, #0]
 800de9a:	4680      	mov	r8, r0
 800de9c:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800de9e:	4620      	mov	r0, r4
 800dea0:	4798      	blx	r3
 800dea2:	6822      	ldr	r2, [r4, #0]
 800dea4:	9004      	str	r0, [sp, #16]
 800dea6:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 800deaa:	4620      	mov	r0, r4
 800deac:	4790      	blx	r2
 800deae:	9905      	ldr	r1, [sp, #20]
 800deb0:	9b04      	ldr	r3, [sp, #16]
 800deb2:	9001      	str	r0, [sp, #4]
 800deb4:	9300      	str	r3, [sp, #0]
 800deb6:	460a      	mov	r2, r1
 800deb8:	4643      	mov	r3, r8
 800deba:	4639      	mov	r1, r7
 800debc:	4650      	mov	r0, sl
 800debe:	f004 feae 	bl	8012c1e <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800dec2:	4637      	mov	r7, r6
 800dec4:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800dec6:	f8db 3000 	ldr.w	r3, [fp]
 800deca:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800dece:	4629      	mov	r1, r5
 800ded0:	785b      	ldrb	r3, [r3, #1]
 800ded2:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800ded6:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800deda:	4650      	mov	r0, sl
 800dedc:	f002 f9f0 	bl	80102c0 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 800dee0:	4287      	cmp	r7, r0
 800dee2:	bfb8      	it	lt
 800dee4:	b207      	sxthlt	r7, r0
 800dee6:	3601      	adds	r6, #1
 800dee8:	4650      	mov	r0, sl
 800deea:	b2b6      	uxth	r6, r6
 800deec:	f004 fe4e 	bl	8012b8c <_ZN8touchgfx12TextProvider11endOfStringEv>
 800def0:	2800      	cmp	r0, #0
 800def2:	d0e7      	beq.n	800dec4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xb0>
 800def4:	9b02      	ldr	r3, [sp, #8]
 800def6:	f8b4 8034 	ldrh.w	r8, [r4, #52]	; 0x34
 800defa:	fb13 f606 	smulbb	r6, r3, r6
 800defe:	eba6 0608 	sub.w	r6, r6, r8
 800df02:	b2b6      	uxth	r6, r6
 800df04:	fa0f f886 	sxth.w	r8, r6
 800df08:	f1b8 0f00 	cmp.w	r8, #0
 800df0c:	dd06      	ble.n	800df1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x108>
 800df0e:	682b      	ldr	r3, [r5, #0]
 800df10:	4628      	mov	r0, r5
 800df12:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800df14:	4798      	blx	r3
 800df16:	4430      	add	r0, r6
 800df18:	fa0f f880 	sxth.w	r8, r0
 800df1c:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800df20:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800df24:	6823      	ldr	r3, [r4, #0]
 800df26:	bf08      	it	eq
 800df28:	f9b4 6008 	ldrsheq.w	r6, [r4, #8]
 800df2c:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800df2e:	bf18      	it	ne
 800df30:	f9b4 600a 	ldrshne.w	r6, [r4, #10]
 800df34:	4620      	mov	r0, r4
 800df36:	4798      	blx	r3
 800df38:	2801      	cmp	r0, #1
 800df3a:	b2ba      	uxth	r2, r7
 800df3c:	f000 80d1 	beq.w	800e0e2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ce>
 800df40:	2802      	cmp	r0, #2
 800df42:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 800df46:	f000 80d2 	beq.w	800e0ee <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2da>
 800df4a:	b21e      	sxth	r6, r3
 800df4c:	7a29      	ldrb	r1, [r5, #8]
 800df4e:	7a6d      	ldrb	r5, [r5, #9]
 800df50:	1a76      	subs	r6, r6, r1
 800df52:	4429      	add	r1, r5
 800df54:	440a      	add	r2, r1
 800df56:	f894 1038 	ldrb.w	r1, [r4, #56]	; 0x38
 800df5a:	b2b3      	uxth	r3, r6
 800df5c:	b292      	uxth	r2, r2
 800df5e:	2902      	cmp	r1, #2
 800df60:	b21f      	sxth	r7, r3
 800df62:	b216      	sxth	r6, r2
 800df64:	f000 80c6 	beq.w	800e0f4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2e0>
 800df68:	2903      	cmp	r1, #3
 800df6a:	f000 80d5 	beq.w	800e118 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>
 800df6e:	2901      	cmp	r1, #1
 800df70:	f040 80db 	bne.w	800e12a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x316>
 800df74:	8923      	ldrh	r3, [r4, #8]
 800df76:	4632      	mov	r2, r6
 800df78:	eba3 0308 	sub.w	r3, r3, r8
 800df7c:	4646      	mov	r6, r8
 800df7e:	463d      	mov	r5, r7
 800df80:	4690      	mov	r8, r2
 800df82:	b21f      	sxth	r7, r3
 800df84:	9b03      	ldr	r3, [sp, #12]
 800df86:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800df88:	6818      	ldr	r0, [r3, #0]
 800df8a:	f7f6 ff85 	bl	8004e98 <_ZNK8touchgfx5Texts7getTextEt>
 800df8e:	f8a9 7000 	strh.w	r7, [r9]
 800df92:	f8a9 5002 	strh.w	r5, [r9, #2]
 800df96:	f8a9 6004 	strh.w	r6, [r9, #4]
 800df9a:	f8a9 8006 	strh.w	r8, [r9, #6]
 800df9e:	f8c9 0008 	str.w	r0, [r9, #8]
 800dfa2:	e747      	b.n	800de34 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 800dfa4:	f004 fdcb 	bl	8012b3e <_ZN8touchgfx12TextProviderC1Ev>
 800dfa8:	682b      	ldr	r3, [r5, #0]
 800dfaa:	4628      	mov	r0, r5
 800dfac:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800dfae:	4798      	blx	r3
 800dfb0:	682b      	ldr	r3, [r5, #0]
 800dfb2:	4606      	mov	r6, r0
 800dfb4:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800dfb6:	4628      	mov	r0, r5
 800dfb8:	4798      	blx	r3
 800dfba:	6823      	ldr	r3, [r4, #0]
 800dfbc:	4680      	mov	r8, r0
 800dfbe:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800dfc0:	4620      	mov	r0, r4
 800dfc2:	4798      	blx	r3
 800dfc4:	6822      	ldr	r2, [r4, #0]
 800dfc6:	9004      	str	r0, [sp, #16]
 800dfc8:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 800dfcc:	4620      	mov	r0, r4
 800dfce:	4790      	blx	r2
 800dfd0:	9b04      	ldr	r3, [sp, #16]
 800dfd2:	9001      	str	r0, [sp, #4]
 800dfd4:	4632      	mov	r2, r6
 800dfd6:	9300      	str	r3, [sp, #0]
 800dfd8:	4639      	mov	r1, r7
 800dfda:	4643      	mov	r3, r8
 800dfdc:	4650      	mov	r0, sl
 800dfde:	f004 fe1e 	bl	8012c1e <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800dfe2:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800dfe6:	f9b4 8008 	ldrsh.w	r8, [r4, #8]
 800dfea:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800dfec:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
 800dff0:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800dff4:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800dff8:	bf0a      	itet	eq
 800dffa:	4642      	moveq	r2, r8
 800dffc:	461a      	movne	r2, r3
 800dffe:	4698      	moveq	r8, r3
 800e000:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 800e004:	1ad2      	subs	r2, r2, r3
 800e006:	f8db 3000 	ldr.w	r3, [fp]
 800e00a:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 800e00e:	7859      	ldrb	r1, [r3, #1]
 800e010:	f8cd a020 	str.w	sl, [sp, #32]
 800e014:	2300      	movs	r3, #0
 800e016:	f3c1 0181 	ubfx	r1, r1, #2, #2
 800e01a:	f8ad 301c 	strh.w	r3, [sp, #28]
 800e01e:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 800e022:	f88d 0025 	strb.w	r0, [sp, #37]	; 0x25
 800e026:	950a      	str	r5, [sp, #40]	; 0x28
 800e028:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800e02c:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 800e030:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 800e034:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 800e038:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 800e03c:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800e040:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 800e044:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
 800e048:	b350      	cbz	r0, 800e0a0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28c>
 800e04a:	682b      	ldr	r3, [r5, #0]
 800e04c:	4628      	mov	r0, r5
 800e04e:	695b      	ldr	r3, [r3, #20]
 800e050:	4798      	blx	r3
 800e052:	4607      	mov	r7, r0
 800e054:	b320      	cbz	r0, 800e0a0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28c>
 800e056:	980a      	ldr	r0, [sp, #40]	; 0x28
 800e058:	6803      	ldr	r3, [r0, #0]
 800e05a:	4639      	mov	r1, r7
 800e05c:	68db      	ldr	r3, [r3, #12]
 800e05e:	4798      	blx	r3
 800e060:	4606      	mov	r6, r0
 800e062:	b1e8      	cbz	r0, 800e0a0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28c>
 800e064:	7b43      	ldrb	r3, [r0, #13]
 800e066:	7a82      	ldrb	r2, [r0, #10]
 800e068:	005b      	lsls	r3, r3, #1
 800e06a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800e06e:	4313      	orrs	r3, r2
 800e070:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 800e074:	f89d 3025 	ldrb.w	r3, [sp, #37]	; 0x25
 800e078:	2b04      	cmp	r3, #4
 800e07a:	d111      	bne.n	800e0a0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28c>
 800e07c:	980a      	ldr	r0, [sp, #40]	; 0x28
 800e07e:	6803      	ldr	r3, [r0, #0]
 800e080:	4632      	mov	r2, r6
 800e082:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800e084:	4639      	mov	r1, r7
 800e086:	4798      	blx	r3
 800e088:	7b73      	ldrb	r3, [r6, #13]
 800e08a:	005b      	lsls	r3, r3, #1
 800e08c:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800e090:	7ab3      	ldrb	r3, [r6, #10]
 800e092:	4313      	orrs	r3, r2
 800e094:	4418      	add	r0, r3
 800e096:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800e09a:	4418      	add	r0, r3
 800e09c:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
 800e0a0:	f9bd a008 	ldrsh.w	sl, [sp, #8]
 800e0a4:	2600      	movs	r6, #0
 800e0a6:	ea4f 0b4a 	mov.w	fp, sl, lsl #1
 800e0aa:	4637      	mov	r7, r6
 800e0ac:	45c3      	cmp	fp, r8
 800e0ae:	bfd4      	ite	le
 800e0b0:	2100      	movle	r1, #0
 800e0b2:	2101      	movgt	r1, #1
 800e0b4:	a807      	add	r0, sp, #28
 800e0b6:	f002 fae2 	bl	801067e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800e0ba:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 800e0be:	429f      	cmp	r7, r3
 800e0c0:	bfb8      	it	lt
 800e0c2:	b21f      	sxthlt	r7, r3
 800e0c4:	9b02      	ldr	r3, [sp, #8]
 800e0c6:	eba8 0803 	sub.w	r8, r8, r3
 800e0ca:	f8bd 301c 	ldrh.w	r3, [sp, #28]
 800e0ce:	3601      	adds	r6, #1
 800e0d0:	b2b6      	uxth	r6, r6
 800e0d2:	fa0f f888 	sxth.w	r8, r8
 800e0d6:	2b00      	cmp	r3, #0
 800e0d8:	f43f af0c 	beq.w	800def4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xe0>
 800e0dc:	45c2      	cmp	sl, r8
 800e0de:	dbe5      	blt.n	800e0ac <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x298>
 800e0e0:	e708      	b.n	800def4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xe0>
 800e0e2:	1bf6      	subs	r6, r6, r7
 800e0e4:	2702      	movs	r7, #2
 800e0e6:	fb96 f6f7 	sdiv	r6, r6, r7
 800e0ea:	b236      	sxth	r6, r6
 800e0ec:	e72e      	b.n	800df4c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x138>
 800e0ee:	4413      	add	r3, r2
 800e0f0:	1af6      	subs	r6, r6, r3
 800e0f2:	e7fa      	b.n	800e0ea <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2d6>
 800e0f4:	8925      	ldrh	r5, [r4, #8]
 800e0f6:	1aad      	subs	r5, r5, r2
 800e0f8:	1aed      	subs	r5, r5, r3
 800e0fa:	b22f      	sxth	r7, r5
 800e0fc:	8965      	ldrh	r5, [r4, #10]
 800e0fe:	eba5 0508 	sub.w	r5, r5, r8
 800e102:	b22d      	sxth	r5, r5
 800e104:	e73e      	b.n	800df84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x170>
 800e106:	bf00      	nop
 800e108:	20015660 	.word	0x20015660
 800e10c:	20015664 	.word	0x20015664
 800e110:	2001565c 	.word	0x2001565c
 800e114:	20015668 	.word	0x20015668
 800e118:	8965      	ldrh	r5, [r4, #10]
 800e11a:	1aad      	subs	r5, r5, r2
 800e11c:	1aed      	subs	r5, r5, r3
 800e11e:	4633      	mov	r3, r6
 800e120:	b22d      	sxth	r5, r5
 800e122:	4646      	mov	r6, r8
 800e124:	2700      	movs	r7, #0
 800e126:	4698      	mov	r8, r3
 800e128:	e72c      	b.n	800df84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x170>
 800e12a:	2500      	movs	r5, #0
 800e12c:	e72a      	b.n	800df84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x170>
 800e12e:	bf00      	nop

0800e130 <_ZN8touchgfx8TextAreaD0Ev>:
 800e130:	b510      	push	{r4, lr}
 800e132:	2148      	movs	r1, #72	; 0x48
 800e134:	4604      	mov	r4, r0
 800e136:	f012 fb37 	bl	80207a8 <_ZdlPvj>
 800e13a:	4620      	mov	r0, r4
 800e13c:	bd10      	pop	{r4, pc}
	...

0800e140 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 800e140:	b513      	push	{r0, r1, r4, lr}
 800e142:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 800e146:	4604      	mov	r4, r0
 800e148:	b1fb      	cbz	r3, 800e18a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800e14a:	4b16      	ldr	r3, [pc, #88]	; (800e1a4 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 800e14c:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800e14e:	881b      	ldrh	r3, [r3, #0]
 800e150:	428b      	cmp	r3, r1
 800e152:	d91a      	bls.n	800e18a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800e154:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800e158:	2b00      	cmp	r3, #0
 800e15a:	dd16      	ble.n	800e18a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800e15c:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800e160:	2b00      	cmp	r3, #0
 800e162:	dd12      	ble.n	800e18a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800e164:	4b10      	ldr	r3, [pc, #64]	; (800e1a8 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 800e166:	6818      	ldr	r0, [r3, #0]
 800e168:	f7f6 fe96 	bl	8004e98 <_ZNK8touchgfx5Texts7getTextEt>
 800e16c:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 800e170:	6822      	ldr	r2, [r4, #0]
 800e172:	2b00      	cmp	r3, #0
 800e174:	db06      	blt.n	800e184 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 800e176:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 800e17a:	2b00      	cmp	r3, #0
 800e17c:	db02      	blt.n	800e184 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 800e17e:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800e180:	4298      	cmp	r0, r3
 800e182:	d004      	beq.n	800e18e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 800e184:	6953      	ldr	r3, [r2, #20]
 800e186:	4620      	mov	r0, r4
 800e188:	4798      	blx	r3
 800e18a:	b002      	add	sp, #8
 800e18c:	bd10      	pop	{r4, pc}
 800e18e:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 800e192:	c903      	ldmia	r1, {r0, r1}
 800e194:	466b      	mov	r3, sp
 800e196:	e883 0003 	stmia.w	r3, {r0, r1}
 800e19a:	6912      	ldr	r2, [r2, #16]
 800e19c:	4619      	mov	r1, r3
 800e19e:	4620      	mov	r0, r4
 800e1a0:	4790      	blx	r2
 800e1a2:	e7f2      	b.n	800e18a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800e1a4:	20015660 	.word	0x20015660
 800e1a8:	20015668 	.word	0x20015668

0800e1ac <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 800e1ac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e1b0:	4b44      	ldr	r3, [pc, #272]	; (800e2c4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 800e1b2:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800e1b4:	881b      	ldrh	r3, [r3, #0]
 800e1b6:	4293      	cmp	r3, r2
 800e1b8:	b08e      	sub	sp, #56	; 0x38
 800e1ba:	4604      	mov	r4, r0
 800e1bc:	d97e      	bls.n	800e2bc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800e1be:	6808      	ldr	r0, [r1, #0]
 800e1c0:	4d41      	ldr	r5, [pc, #260]	; (800e2c8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 800e1c2:	6849      	ldr	r1, [r1, #4]
 800e1c4:	ab05      	add	r3, sp, #20
 800e1c6:	c303      	stmia	r3!, {r0, r1}
 800e1c8:	4611      	mov	r1, r2
 800e1ca:	6828      	ldr	r0, [r5, #0]
 800e1cc:	f7f6 fe64 	bl	8004e98 <_ZNK8touchgfx5Texts7getTextEt>
 800e1d0:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 800e1d4:	2b00      	cmp	r3, #0
 800e1d6:	db11      	blt.n	800e1fc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800e1d8:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 800e1dc:	2b00      	cmp	r3, #0
 800e1de:	db0d      	blt.n	800e1fc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800e1e0:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800e1e2:	4298      	cmp	r0, r3
 800e1e4:	d10a      	bne.n	800e1fc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800e1e6:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 800e1ea:	e892 0003 	ldmia.w	r2, {r0, r1}
 800e1ee:	ab09      	add	r3, sp, #36	; 0x24
 800e1f0:	e883 0003 	stmia.w	r3, {r0, r1}
 800e1f4:	4619      	mov	r1, r3
 800e1f6:	a805      	add	r0, sp, #20
 800e1f8:	f7fc fe28 	bl	800ae4c <_ZN8touchgfx4RectaNERKS0_>
 800e1fc:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800e200:	2b00      	cmp	r3, #0
 800e202:	dd5b      	ble.n	800e2bc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800e204:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 800e208:	2b00      	cmp	r3, #0
 800e20a:	dd57      	ble.n	800e2bc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800e20c:	4f2f      	ldr	r7, [pc, #188]	; (800e2cc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 800e20e:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800e210:	683b      	ldr	r3, [r7, #0]
 800e212:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800e216:	4b2e      	ldr	r3, [pc, #184]	; (800e2d0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 800e218:	681b      	ldr	r3, [r3, #0]
 800e21a:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 800e21e:	2e00      	cmp	r6, #0
 800e220:	d04c      	beq.n	800e2bc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800e222:	6823      	ldr	r3, [r4, #0]
 800e224:	f894 8036 	ldrb.w	r8, [r4, #54]	; 0x36
 800e228:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800e22a:	4620      	mov	r0, r4
 800e22c:	4798      	blx	r3
 800e22e:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800e230:	683b      	ldr	r3, [r7, #0]
 800e232:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	; 0x34
 800e236:	f894 e038 	ldrb.w	lr, [r4, #56]	; 0x38
 800e23a:	f894 7037 	ldrb.w	r7, [r4, #55]	; 0x37
 800e23e:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800e240:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800e244:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
 800e248:	785b      	ldrb	r3, [r3, #1]
 800e24a:	9609      	str	r6, [sp, #36]	; 0x24
 800e24c:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800e250:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800e254:	4b1f      	ldr	r3, [pc, #124]	; (800e2d4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 800e256:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 800e25a:	681b      	ldr	r3, [r3, #0]
 800e25c:	f88d e02a 	strb.w	lr, [sp, #42]	; 0x2a
 800e260:	910b      	str	r1, [sp, #44]	; 0x2c
 800e262:	f8ad c030 	strh.w	ip, [sp, #48]	; 0x30
 800e266:	f88d 8032 	strb.w	r8, [sp, #50]	; 0x32
 800e26a:	f88d 7033 	strb.w	r7, [sp, #51]	; 0x33
 800e26e:	f88d 2034 	strb.w	r2, [sp, #52]	; 0x34
 800e272:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800e276:	b10a      	cbz	r2, 800e27c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 800e278:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 800e27a:	b906      	cbnz	r6, 800e27e <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 800e27c:	689e      	ldr	r6, [r3, #8]
 800e27e:	af07      	add	r7, sp, #28
 800e280:	4621      	mov	r1, r4
 800e282:	4638      	mov	r0, r7
 800e284:	f003 ffa6 	bl	80121d4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e288:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800e28a:	6828      	ldr	r0, [r5, #0]
 800e28c:	f7f6 fe04 	bl	8004e98 <_ZNK8touchgfx5Texts7getTextEt>
 800e290:	6823      	ldr	r3, [r4, #0]
 800e292:	4605      	mov	r5, r0
 800e294:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800e296:	4620      	mov	r0, r4
 800e298:	4798      	blx	r3
 800e29a:	6823      	ldr	r3, [r4, #0]
 800e29c:	4680      	mov	r8, r0
 800e29e:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800e2a2:	4620      	mov	r0, r4
 800e2a4:	4798      	blx	r3
 800e2a6:	e9cd 8002 	strd	r8, r0, [sp, #8]
 800e2aa:	ab09      	add	r3, sp, #36	; 0x24
 800e2ac:	9300      	str	r3, [sp, #0]
 800e2ae:	9501      	str	r5, [sp, #4]
 800e2b0:	ab05      	add	r3, sp, #20
 800e2b2:	e897 0006 	ldmia.w	r7, {r1, r2}
 800e2b6:	4630      	mov	r0, r6
 800e2b8:	f7f6 fda0 	bl	8004dfc <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800e2bc:	b00e      	add	sp, #56	; 0x38
 800e2be:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e2c2:	bf00      	nop
 800e2c4:	20015660 	.word	0x20015660
 800e2c8:	20015668 	.word	0x20015668
 800e2cc:	2001565c 	.word	0x2001565c
 800e2d0:	20015664 	.word	0x20015664
 800e2d4:	20015604 	.word	0x20015604

0800e2d8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 800e2d8:	b538      	push	{r3, r4, r5, lr}
 800e2da:	4b0e      	ldr	r3, [pc, #56]	; (800e314 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 800e2dc:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800e2de:	881b      	ldrh	r3, [r3, #0]
 800e2e0:	429a      	cmp	r2, r3
 800e2e2:	4604      	mov	r4, r0
 800e2e4:	d214      	bcs.n	800e310 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 800e2e6:	6803      	ldr	r3, [r0, #0]
 800e2e8:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800e2ea:	4798      	blx	r3
 800e2ec:	6823      	ldr	r3, [r4, #0]
 800e2ee:	4605      	mov	r5, r0
 800e2f0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800e2f2:	4620      	mov	r0, r4
 800e2f4:	4798      	blx	r3
 800e2f6:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800e2fa:	b22d      	sxth	r5, r5
 800e2fc:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800e300:	4601      	mov	r1, r0
 800e302:	bf06      	itte	eq
 800e304:	4602      	moveq	r2, r0
 800e306:	4629      	moveq	r1, r5
 800e308:	462a      	movne	r2, r5
 800e30a:	4620      	mov	r0, r4
 800e30c:	f7fc fb45 	bl	800a99a <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800e310:	bd38      	pop	{r3, r4, r5, pc}
 800e312:	bf00      	nop
 800e314:	20015660 	.word	0x20015660

0800e318 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 800e318:	b530      	push	{r4, r5, lr}
 800e31a:	888b      	ldrh	r3, [r1, #4]
 800e31c:	8583      	strh	r3, [r0, #44]	; 0x2c
 800e31e:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800e322:	b085      	sub	sp, #20
 800e324:	4604      	mov	r4, r0
 800e326:	b923      	cbnz	r3, 800e332 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 800e328:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800e32c:	b90b      	cbnz	r3, 800e332 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 800e32e:	f7ff ffd3 	bl	800e2d8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 800e332:	6823      	ldr	r3, [r4, #0]
 800e334:	466d      	mov	r5, sp
 800e336:	4621      	mov	r1, r4
 800e338:	4628      	mov	r0, r5
 800e33a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800e33e:	4798      	blx	r3
 800e340:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800e344:	343c      	adds	r4, #60	; 0x3c
 800e346:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 800e34a:	b005      	add	sp, #20
 800e34c:	bd30      	pop	{r4, r5, pc}

0800e34e <_ZNK8touchgfx3Box12getSolidRectEv>:
 800e34e:	2300      	movs	r3, #0
 800e350:	8083      	strh	r3, [r0, #4]
 800e352:	80c3      	strh	r3, [r0, #6]
 800e354:	8003      	strh	r3, [r0, #0]
 800e356:	8043      	strh	r3, [r0, #2]
 800e358:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 800e35c:	2bff      	cmp	r3, #255	; 0xff
 800e35e:	bf01      	itttt	eq
 800e360:	890b      	ldrheq	r3, [r1, #8]
 800e362:	8083      	strheq	r3, [r0, #4]
 800e364:	894b      	ldrheq	r3, [r1, #10]
 800e366:	80c3      	strheq	r3, [r0, #6]
 800e368:	4770      	bx	lr
	...

0800e36c <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 800e36c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e36e:	4604      	mov	r4, r0
 800e370:	6808      	ldr	r0, [r1, #0]
 800e372:	6849      	ldr	r1, [r1, #4]
 800e374:	466b      	mov	r3, sp
 800e376:	c303      	stmia	r3!, {r0, r1}
 800e378:	6823      	ldr	r3, [r4, #0]
 800e37a:	4669      	mov	r1, sp
 800e37c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e37e:	4620      	mov	r0, r4
 800e380:	4798      	blx	r3
 800e382:	4b08      	ldr	r3, [pc, #32]	; (800e3a4 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 800e384:	681b      	ldr	r3, [r3, #0]
 800e386:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800e38a:	b10a      	cbz	r2, 800e390 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 800e38c:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800e38e:	b900      	cbnz	r0, 800e392 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 800e390:	6898      	ldr	r0, [r3, #8]
 800e392:	6803      	ldr	r3, [r0, #0]
 800e394:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800e396:	6a1d      	ldr	r5, [r3, #32]
 800e398:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800e39c:	4669      	mov	r1, sp
 800e39e:	47a8      	blx	r5
 800e3a0:	b003      	add	sp, #12
 800e3a2:	bd30      	pop	{r4, r5, pc}
 800e3a4:	20015604 	.word	0x20015604

0800e3a8 <_ZN8touchgfx3BoxD1Ev>:
 800e3a8:	4770      	bx	lr

0800e3aa <_ZN8touchgfx3BoxD0Ev>:
 800e3aa:	b510      	push	{r4, lr}
 800e3ac:	212c      	movs	r1, #44	; 0x2c
 800e3ae:	4604      	mov	r4, r0
 800e3b0:	f012 f9fa 	bl	80207a8 <_ZdlPvj>
 800e3b4:	4620      	mov	r0, r4
 800e3b6:	bd10      	pop	{r4, pc}

0800e3b8 <_ZNK8touchgfx3Box17invalidateContentEv>:
 800e3b8:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
 800e3bc:	b12a      	cbz	r2, 800e3ca <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800e3be:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800e3c2:	b112      	cbz	r2, 800e3ca <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800e3c4:	6803      	ldr	r3, [r0, #0]
 800e3c6:	695b      	ldr	r3, [r3, #20]
 800e3c8:	4718      	bx	r3
 800e3ca:	4770      	bx	lr

0800e3cc <_ZN8touchgfx6ButtonD1Ev>:
 800e3cc:	4770      	bx	lr

0800e3ce <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 800e3ce:	b570      	push	{r4, r5, r6, lr}
 800e3d0:	880b      	ldrh	r3, [r1, #0]
 800e3d2:	85c3      	strh	r3, [r0, #46]	; 0x2e
 800e3d4:	4605      	mov	r5, r0
 800e3d6:	8813      	ldrh	r3, [r2, #0]
 800e3d8:	f825 3f30 	strh.w	r3, [r5, #48]!
 800e3dc:	4604      	mov	r4, r0
 800e3de:	4628      	mov	r0, r5
 800e3e0:	f006 f8f6 	bl	80145d0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800e3e4:	4606      	mov	r6, r0
 800e3e6:	4628      	mov	r0, r5
 800e3e8:	f006 f926 	bl	8014638 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800e3ec:	6823      	ldr	r3, [r4, #0]
 800e3ee:	4605      	mov	r5, r0
 800e3f0:	4631      	mov	r1, r6
 800e3f2:	4620      	mov	r0, r4
 800e3f4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800e3f6:	4798      	blx	r3
 800e3f8:	6823      	ldr	r3, [r4, #0]
 800e3fa:	4629      	mov	r1, r5
 800e3fc:	4620      	mov	r0, r4
 800e3fe:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800e400:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e404:	4718      	bx	r3

0800e406 <_ZN8touchgfx6ButtonD0Ev>:
 800e406:	b510      	push	{r4, lr}
 800e408:	2134      	movs	r1, #52	; 0x34
 800e40a:	4604      	mov	r4, r0
 800e40c:	f012 f9cc 	bl	80207a8 <_ZdlPvj>
 800e410:	4620      	mov	r0, r4
 800e412:	bd10      	pop	{r4, pc}

0800e414 <_ZNK8touchgfx6Button12getSolidRectEv>:
 800e414:	b510      	push	{r4, lr}
 800e416:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 800e41a:	2bff      	cmp	r3, #255	; 0xff
 800e41c:	4604      	mov	r4, r0
 800e41e:	d006      	beq.n	800e42e <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 800e420:	2300      	movs	r3, #0
 800e422:	8003      	strh	r3, [r0, #0]
 800e424:	8043      	strh	r3, [r0, #2]
 800e426:	8083      	strh	r3, [r0, #4]
 800e428:	80c3      	strh	r3, [r0, #6]
 800e42a:	4620      	mov	r0, r4
 800e42c:	bd10      	pop	{r4, pc}
 800e42e:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 800e432:	b11b      	cbz	r3, 800e43c <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 800e434:	3130      	adds	r1, #48	; 0x30
 800e436:	f006 f933 	bl	80146a0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800e43a:	e7f6      	b.n	800e42a <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 800e43c:	312e      	adds	r1, #46	; 0x2e
 800e43e:	e7fa      	b.n	800e436 <_ZNK8touchgfx6Button12getSolidRectEv+0x22>

0800e440 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 800e440:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e444:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800e448:	b08a      	sub	sp, #40	; 0x28
 800e44a:	4604      	mov	r4, r0
 800e44c:	4688      	mov	r8, r1
 800e44e:	2b00      	cmp	r3, #0
 800e450:	d066      	beq.n	800e520 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 800e452:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800e454:	f8ad 3014 	strh.w	r3, [sp, #20]
 800e458:	a805      	add	r0, sp, #20
 800e45a:	f006 f8b9 	bl	80145d0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800e45e:	4607      	mov	r7, r0
 800e460:	a805      	add	r0, sp, #20
 800e462:	f006 f8e9 	bl	8014638 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800e466:	f9b8 6000 	ldrsh.w	r6, [r8]
 800e46a:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 800e46e:	4432      	add	r2, r6
 800e470:	b292      	uxth	r2, r2
 800e472:	2300      	movs	r3, #0
 800e474:	fa0f fc82 	sxth.w	ip, r2
 800e478:	459c      	cmp	ip, r3
 800e47a:	9306      	str	r3, [sp, #24]
 800e47c:	dd52      	ble.n	800e524 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800e47e:	42b7      	cmp	r7, r6
 800e480:	dd50      	ble.n	800e524 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800e482:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 800e486:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 800e48a:	442b      	add	r3, r5
 800e48c:	b29b      	uxth	r3, r3
 800e48e:	b219      	sxth	r1, r3
 800e490:	2900      	cmp	r1, #0
 800e492:	dd47      	ble.n	800e524 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800e494:	42a8      	cmp	r0, r5
 800e496:	dd45      	ble.n	800e524 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800e498:	4567      	cmp	r7, ip
 800e49a:	bfb8      	it	lt
 800e49c:	b2ba      	uxthlt	r2, r7
 800e49e:	4288      	cmp	r0, r1
 800e4a0:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 800e4a4:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 800e4a8:	bfb8      	it	lt
 800e4aa:	b283      	uxthlt	r3, r0
 800e4ac:	1b92      	subs	r2, r2, r6
 800e4ae:	1b5b      	subs	r3, r3, r5
 800e4b0:	f8ad 201c 	strh.w	r2, [sp, #28]
 800e4b4:	f8ad 301e 	strh.w	r3, [sp, #30]
 800e4b8:	f8ad 6018 	strh.w	r6, [sp, #24]
 800e4bc:	f8ad 501a 	strh.w	r5, [sp, #26]
 800e4c0:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800e4c4:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800e4c8:	429a      	cmp	r2, r3
 800e4ca:	d026      	beq.n	800e51a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800e4cc:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800e4d0:	2b00      	cmp	r3, #0
 800e4d2:	dd22      	ble.n	800e51a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800e4d4:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800e4d8:	2b00      	cmp	r3, #0
 800e4da:	dd1e      	ble.n	800e51a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800e4dc:	2300      	movs	r3, #0
 800e4de:	e9cd 3308 	strd	r3, r3, [sp, #32]
 800e4e2:	6823      	ldr	r3, [r4, #0]
 800e4e4:	a908      	add	r1, sp, #32
 800e4e6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e4e8:	4620      	mov	r0, r4
 800e4ea:	4798      	blx	r3
 800e4ec:	4b0f      	ldr	r3, [pc, #60]	; (800e52c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 800e4ee:	681b      	ldr	r3, [r3, #0]
 800e4f0:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800e4f4:	b10a      	cbz	r2, 800e4fa <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 800e4f6:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800e4f8:	b900      	cbnz	r0, 800e4fc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 800e4fa:	6898      	ldr	r0, [r3, #8]
 800e4fc:	6801      	ldr	r1, [r0, #0]
 800e4fe:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 800e502:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 800e506:	2501      	movs	r5, #1
 800e508:	9502      	str	r5, [sp, #8]
 800e50a:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 800e50e:	9401      	str	r4, [sp, #4]
 800e510:	ac06      	add	r4, sp, #24
 800e512:	9400      	str	r4, [sp, #0]
 800e514:	688c      	ldr	r4, [r1, #8]
 800e516:	a905      	add	r1, sp, #20
 800e518:	47a0      	blx	r4
 800e51a:	b00a      	add	sp, #40	; 0x28
 800e51c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e520:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800e522:	e797      	b.n	800e454 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 800e524:	2300      	movs	r3, #0
 800e526:	9307      	str	r3, [sp, #28]
 800e528:	e7ca      	b.n	800e4c0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 800e52a:	bf00      	nop
 800e52c:	20015604 	.word	0x20015604

0800e530 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 800e530:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e534:	4b2f      	ldr	r3, [pc, #188]	; (800e5f4 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 800e536:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800e538:	881b      	ldrh	r3, [r3, #0]
 800e53a:	4293      	cmp	r3, r2
 800e53c:	b08d      	sub	sp, #52	; 0x34
 800e53e:	4604      	mov	r4, r0
 800e540:	460f      	mov	r7, r1
 800e542:	d954      	bls.n	800e5ee <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 800e544:	4b2c      	ldr	r3, [pc, #176]	; (800e5f8 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 800e546:	6819      	ldr	r1, [r3, #0]
 800e548:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 800e54c:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 800e550:	4a2a      	ldr	r2, [pc, #168]	; (800e5fc <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 800e552:	6812      	ldr	r2, [r2, #0]
 800e554:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 800e558:	2900      	cmp	r1, #0
 800e55a:	d048      	beq.n	800e5ee <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 800e55c:	785a      	ldrb	r2, [r3, #1]
 800e55e:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 800e562:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 800e566:	4b26      	ldr	r3, [pc, #152]	; (800e600 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 800e568:	f890 5036 	ldrb.w	r5, [r0, #54]	; 0x36
 800e56c:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
 800e570:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
 800e574:	6b26      	ldr	r6, [r4, #48]	; 0x30
 800e576:	f890 0037 	ldrb.w	r0, [r0, #55]	; 0x37
 800e57a:	9107      	str	r1, [sp, #28]
 800e57c:	f3c2 0801 	ubfx	r8, r2, #0, #2
 800e580:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800e584:	f88d 2021 	strb.w	r2, [sp, #33]	; 0x21
 800e588:	681a      	ldr	r2, [r3, #0]
 800e58a:	f88d 8020 	strb.w	r8, [sp, #32]
 800e58e:	f892 3076 	ldrb.w	r3, [r2, #118]	; 0x76
 800e592:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
 800e596:	9609      	str	r6, [sp, #36]	; 0x24
 800e598:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
 800e59c:	f88d 502a 	strb.w	r5, [sp, #42]	; 0x2a
 800e5a0:	f88d 002b 	strb.w	r0, [sp, #43]	; 0x2b
 800e5a4:	b10b      	cbz	r3, 800e5aa <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 800e5a6:	6cd5      	ldr	r5, [r2, #76]	; 0x4c
 800e5a8:	b905      	cbnz	r5, 800e5ac <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 800e5aa:	6895      	ldr	r5, [r2, #8]
 800e5ac:	ae05      	add	r6, sp, #20
 800e5ae:	4621      	mov	r1, r4
 800e5b0:	4630      	mov	r0, r6
 800e5b2:	f003 fe0f 	bl	80121d4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e5b6:	4b13      	ldr	r3, [pc, #76]	; (800e604 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 800e5b8:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800e5ba:	6818      	ldr	r0, [r3, #0]
 800e5bc:	f7f6 fc6c 	bl	8004e98 <_ZNK8touchgfx5Texts7getTextEt>
 800e5c0:	6823      	ldr	r3, [r4, #0]
 800e5c2:	4680      	mov	r8, r0
 800e5c4:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800e5c6:	4620      	mov	r0, r4
 800e5c8:	4798      	blx	r3
 800e5ca:	6823      	ldr	r3, [r4, #0]
 800e5cc:	4681      	mov	r9, r0
 800e5ce:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800e5d2:	4620      	mov	r0, r4
 800e5d4:	4798      	blx	r3
 800e5d6:	e9cd 9002 	strd	r9, r0, [sp, #8]
 800e5da:	ab07      	add	r3, sp, #28
 800e5dc:	9300      	str	r3, [sp, #0]
 800e5de:	f8cd 8004 	str.w	r8, [sp, #4]
 800e5e2:	463b      	mov	r3, r7
 800e5e4:	e896 0006 	ldmia.w	r6, {r1, r2}
 800e5e8:	4628      	mov	r0, r5
 800e5ea:	f7f6 fc07 	bl	8004dfc <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800e5ee:	b00d      	add	sp, #52	; 0x34
 800e5f0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e5f4:	20015660 	.word	0x20015660
 800e5f8:	2001565c 	.word	0x2001565c
 800e5fc:	20015664 	.word	0x20015664
 800e600:	20015604 	.word	0x20015604
 800e604:	20015668 	.word	0x20015668

0800e608 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
 800e608:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e60c:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 800e610:	b0a0      	sub	sp, #128	; 0x80
 800e612:	4604      	mov	r4, r0
 800e614:	b193      	cbz	r3, 800e63c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 800e616:	4b30      	ldr	r3, [pc, #192]	; (800e6d8 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xd0>)
 800e618:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800e61a:	881b      	ldrh	r3, [r3, #0]
 800e61c:	428b      	cmp	r3, r1
 800e61e:	d90d      	bls.n	800e63c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 800e620:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800e624:	2b00      	cmp	r3, #0
 800e626:	dd09      	ble.n	800e63c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 800e628:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800e62c:	2b00      	cmp	r3, #0
 800e62e:	dd05      	ble.n	800e63c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 800e630:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 800e634:	b12b      	cbz	r3, 800e642 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x3a>
 800e636:	6803      	ldr	r3, [r0, #0]
 800e638:	695b      	ldr	r3, [r3, #20]
 800e63a:	4798      	blx	r3
 800e63c:	b020      	add	sp, #128	; 0x80
 800e63e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e642:	4b26      	ldr	r3, [pc, #152]	; (800e6dc <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xd4>)
 800e644:	681b      	ldr	r3, [r3, #0]
 800e646:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 800e64a:	4b25      	ldr	r3, [pc, #148]	; (800e6e0 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xd8>)
 800e64c:	681b      	ldr	r3, [r3, #0]
 800e64e:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800e652:	4b24      	ldr	r3, [pc, #144]	; (800e6e4 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xdc>)
 800e654:	6818      	ldr	r0, [r3, #0]
 800e656:	f7f6 fc1f 	bl	8004e98 <_ZNK8touchgfx5Texts7getTextEt>
 800e65a:	4606      	mov	r6, r0
 800e65c:	a807      	add	r0, sp, #28
 800e65e:	f004 fa6e 	bl	8012b3e <_ZN8touchgfx12TextProviderC1Ev>
 800e662:	682b      	ldr	r3, [r5, #0]
 800e664:	4628      	mov	r0, r5
 800e666:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800e668:	4798      	blx	r3
 800e66a:	682b      	ldr	r3, [r5, #0]
 800e66c:	4607      	mov	r7, r0
 800e66e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800e670:	4628      	mov	r0, r5
 800e672:	4798      	blx	r3
 800e674:	6823      	ldr	r3, [r4, #0]
 800e676:	4605      	mov	r5, r0
 800e678:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800e67a:	4620      	mov	r0, r4
 800e67c:	4798      	blx	r3
 800e67e:	6823      	ldr	r3, [r4, #0]
 800e680:	4680      	mov	r8, r0
 800e682:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800e686:	4620      	mov	r0, r4
 800e688:	4798      	blx	r3
 800e68a:	462b      	mov	r3, r5
 800e68c:	e9cd 8000 	strd	r8, r0, [sp]
 800e690:	463a      	mov	r2, r7
 800e692:	a807      	add	r0, sp, #28
 800e694:	4631      	mov	r1, r6
 800e696:	f004 fac2 	bl	8012c1e <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800e69a:	a807      	add	r0, sp, #28
 800e69c:	f004 fe7a 	bl	8013394 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800e6a0:	280a      	cmp	r0, #10
 800e6a2:	d103      	bne.n	800e6ac <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xa4>
 800e6a4:	6823      	ldr	r3, [r4, #0]
 800e6a6:	4620      	mov	r0, r4
 800e6a8:	695b      	ldr	r3, [r3, #20]
 800e6aa:	e7c6      	b.n	800e63a <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x32>
 800e6ac:	a807      	add	r0, sp, #28
 800e6ae:	f004 fe71 	bl	8013394 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800e6b2:	2800      	cmp	r0, #0
 800e6b4:	d1f4      	bne.n	800e6a0 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x98>
 800e6b6:	ad04      	add	r5, sp, #16
 800e6b8:	4621      	mov	r1, r4
 800e6ba:	4628      	mov	r0, r5
 800e6bc:	f7ff fbaa 	bl	800de14 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800e6c0:	e895 0003 	ldmia.w	r5, {r0, r1}
 800e6c4:	6822      	ldr	r2, [r4, #0]
 800e6c6:	ab02      	add	r3, sp, #8
 800e6c8:	e883 0003 	stmia.w	r3, {r0, r1}
 800e6cc:	6912      	ldr	r2, [r2, #16]
 800e6ce:	4619      	mov	r1, r3
 800e6d0:	4620      	mov	r0, r4
 800e6d2:	4790      	blx	r2
 800e6d4:	e7b2      	b.n	800e63c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 800e6d6:	bf00      	nop
 800e6d8:	20015660 	.word	0x20015660
 800e6dc:	2001565c 	.word	0x2001565c
 800e6e0:	20015664 	.word	0x20015664
 800e6e4:	20015668 	.word	0x20015668

0800e6e8 <_ZN8touchgfx13BoxWithBorderD1Ev>:
 800e6e8:	4770      	bx	lr

0800e6ea <_ZN8touchgfx13BoxWithBorderD0Ev>:
 800e6ea:	b510      	push	{r4, lr}
 800e6ec:	2134      	movs	r1, #52	; 0x34
 800e6ee:	4604      	mov	r4, r0
 800e6f0:	f012 f85a 	bl	80207a8 <_ZdlPvj>
 800e6f4:	4620      	mov	r0, r4
 800e6f6:	bd10      	pop	{r4, pc}

0800e6f8 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE>:
 800e6f8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e6fc:	4604      	mov	r4, r0
 800e6fe:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800e700:	8962      	ldrh	r2, [r4, #10]
 800e702:	b218      	sxth	r0, r3
 800e704:	460e      	mov	r6, r1
 800e706:	005b      	lsls	r3, r3, #1
 800e708:	8921      	ldrh	r1, [r4, #8]
 800e70a:	b29b      	uxth	r3, r3
 800e70c:	1ac9      	subs	r1, r1, r3
 800e70e:	b08e      	sub	sp, #56	; 0x38
 800e710:	b209      	sxth	r1, r1
 800e712:	1ad3      	subs	r3, r2, r3
 800e714:	b21b      	sxth	r3, r3
 800e716:	2900      	cmp	r1, #0
 800e718:	f8ad 0000 	strh.w	r0, [sp]
 800e71c:	f8ad 0002 	strh.w	r0, [sp, #2]
 800e720:	f8ad 1004 	strh.w	r1, [sp, #4]
 800e724:	f8ad 3006 	strh.w	r3, [sp, #6]
 800e728:	dd5e      	ble.n	800e7e8 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 800e72a:	2b00      	cmp	r3, #0
 800e72c:	dd5c      	ble.n	800e7e8 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 800e72e:	6830      	ldr	r0, [r6, #0]
 800e730:	6871      	ldr	r1, [r6, #4]
 800e732:	ab02      	add	r3, sp, #8
 800e734:	c303      	stmia	r3!, {r0, r1}
 800e736:	4669      	mov	r1, sp
 800e738:	a802      	add	r0, sp, #8
 800e73a:	f7fc fb87 	bl	800ae4c <_ZN8touchgfx4RectaNERKS0_>
 800e73e:	4620      	mov	r0, r4
 800e740:	a902      	add	r1, sp, #8
 800e742:	f7ff fe13 	bl	800e36c <_ZNK8touchgfx3Box4drawERKNS_4RectE>
 800e746:	8e20      	ldrh	r0, [r4, #48]	; 0x30
 800e748:	2800      	cmp	r0, #0
 800e74a:	d05f      	beq.n	800e80c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 800e74c:	8963      	ldrh	r3, [r4, #10]
 800e74e:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800e752:	f8ad 101c 	strh.w	r1, [sp, #28]
 800e756:	1a1f      	subs	r7, r3, r0
 800e758:	eba3 0340 	sub.w	r3, r3, r0, lsl #1
 800e75c:	b202      	sxth	r2, r0
 800e75e:	2500      	movs	r5, #0
 800e760:	b21b      	sxth	r3, r3
 800e762:	f8ad 1024 	strh.w	r1, [sp, #36]	; 0x24
 800e766:	1a09      	subs	r1, r1, r0
 800e768:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 800e76c:	9506      	str	r5, [sp, #24]
 800e76e:	f8ad 201e 	strh.w	r2, [sp, #30]
 800e772:	f8ad 5020 	strh.w	r5, [sp, #32]
 800e776:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 800e77a:	f8ad 5028 	strh.w	r5, [sp, #40]	; 0x28
 800e77e:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 800e782:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800e786:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 800e78a:	f8ad 1030 	strh.w	r1, [sp, #48]	; 0x30
 800e78e:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 800e792:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 800e796:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800e79a:	af04      	add	r7, sp, #16
 800e79c:	ab06      	add	r3, sp, #24
 800e79e:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800e7a2:	e893 0003 	ldmia.w	r3, {r0, r1}
 800e7a6:	e887 0003 	stmia.w	r7, {r0, r1}
 800e7aa:	4631      	mov	r1, r6
 800e7ac:	4638      	mov	r0, r7
 800e7ae:	f7fc fb4d 	bl	800ae4c <_ZN8touchgfx4RectaNERKS0_>
 800e7b2:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 800e7b6:	2b00      	cmp	r3, #0
 800e7b8:	dd12      	ble.n	800e7e0 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 800e7ba:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800e7be:	2b00      	cmp	r3, #0
 800e7c0:	dd0e      	ble.n	800e7e0 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 800e7c2:	6823      	ldr	r3, [r4, #0]
 800e7c4:	4639      	mov	r1, r7
 800e7c6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e7c8:	4620      	mov	r0, r4
 800e7ca:	4798      	blx	r3
 800e7cc:	f7f3 fffc 	bl	80027c8 <_ZN8touchgfx3HAL3lcdEv>
 800e7d0:	6803      	ldr	r3, [r0, #0]
 800e7d2:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800e7d4:	f8d3 8020 	ldr.w	r8, [r3, #32]
 800e7d8:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800e7dc:	4639      	mov	r1, r7
 800e7de:	47c0      	blx	r8
 800e7e0:	3501      	adds	r5, #1
 800e7e2:	2d04      	cmp	r5, #4
 800e7e4:	d1da      	bne.n	800e79c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xa4>
 800e7e6:	e011      	b.n	800e80c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 800e7e8:	6830      	ldr	r0, [r6, #0]
 800e7ea:	6871      	ldr	r1, [r6, #4]
 800e7ec:	ab06      	add	r3, sp, #24
 800e7ee:	c303      	stmia	r3!, {r0, r1}
 800e7f0:	6823      	ldr	r3, [r4, #0]
 800e7f2:	a906      	add	r1, sp, #24
 800e7f4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e7f6:	4620      	mov	r0, r4
 800e7f8:	4798      	blx	r3
 800e7fa:	f7f3 ffe5 	bl	80027c8 <_ZN8touchgfx3HAL3lcdEv>
 800e7fe:	6803      	ldr	r3, [r0, #0]
 800e800:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800e802:	6a1d      	ldr	r5, [r3, #32]
 800e804:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800e808:	a906      	add	r1, sp, #24
 800e80a:	47a8      	blx	r5
 800e80c:	b00e      	add	sp, #56	; 0x38
 800e80e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800e812 <_ZN8touchgfx5ImageD1Ev>:
 800e812:	4770      	bx	lr

0800e814 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 800e814:	b570      	push	{r4, r5, r6, lr}
 800e816:	880b      	ldrh	r3, [r1, #0]
 800e818:	84c3      	strh	r3, [r0, #38]	; 0x26
 800e81a:	4604      	mov	r4, r0
 800e81c:	4608      	mov	r0, r1
 800e81e:	460d      	mov	r5, r1
 800e820:	f005 fed6 	bl	80145d0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800e824:	4606      	mov	r6, r0
 800e826:	4628      	mov	r0, r5
 800e828:	f005 ff06 	bl	8014638 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800e82c:	6823      	ldr	r3, [r4, #0]
 800e82e:	4605      	mov	r5, r0
 800e830:	4631      	mov	r1, r6
 800e832:	4620      	mov	r0, r4
 800e834:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800e836:	4798      	blx	r3
 800e838:	6823      	ldr	r3, [r4, #0]
 800e83a:	4629      	mov	r1, r5
 800e83c:	4620      	mov	r0, r4
 800e83e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800e840:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e844:	4718      	bx	r3

0800e846 <_ZN8touchgfx5ImageD0Ev>:
 800e846:	b510      	push	{r4, lr}
 800e848:	212c      	movs	r1, #44	; 0x2c
 800e84a:	4604      	mov	r4, r0
 800e84c:	f011 ffac 	bl	80207a8 <_ZdlPvj>
 800e850:	4620      	mov	r0, r4
 800e852:	bd10      	pop	{r4, pc}

0800e854 <_ZNK8touchgfx5Image12getSolidRectEv>:
 800e854:	b510      	push	{r4, lr}
 800e856:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 800e85a:	2bff      	cmp	r3, #255	; 0xff
 800e85c:	4604      	mov	r4, r0
 800e85e:	d006      	beq.n	800e86e <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 800e860:	2300      	movs	r3, #0
 800e862:	8003      	strh	r3, [r0, #0]
 800e864:	8043      	strh	r3, [r0, #2]
 800e866:	8083      	strh	r3, [r0, #4]
 800e868:	80c3      	strh	r3, [r0, #6]
 800e86a:	4620      	mov	r0, r4
 800e86c:	bd10      	pop	{r4, pc}
 800e86e:	3126      	adds	r1, #38	; 0x26
 800e870:	f005 ff16 	bl	80146a0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800e874:	e7f9      	b.n	800e86a <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

0800e876 <_ZNK8touchgfx5Image17invalidateContentEv>:
 800e876:	f890 2028 	ldrb.w	r2, [r0, #40]	; 0x28
 800e87a:	b12a      	cbz	r2, 800e888 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 800e87c:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800e880:	b112      	cbz	r2, 800e888 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 800e882:	6803      	ldr	r3, [r0, #0]
 800e884:	695b      	ldr	r3, [r3, #20]
 800e886:	4718      	bx	r3
 800e888:	4770      	bx	lr
	...

0800e88c <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 800e88c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e890:	4604      	mov	r4, r0
 800e892:	b088      	sub	sp, #32
 800e894:	f854 3b26 	ldr.w	r3, [r4], #38
 800e898:	2500      	movs	r5, #0
 800e89a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e89c:	460f      	mov	r7, r1
 800e89e:	e9cd 5504 	strd	r5, r5, [sp, #16]
 800e8a2:	a904      	add	r1, sp, #16
 800e8a4:	4606      	mov	r6, r0
 800e8a6:	4798      	blx	r3
 800e8a8:	4620      	mov	r0, r4
 800e8aa:	f005 fe91 	bl	80145d0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800e8ae:	4680      	mov	r8, r0
 800e8b0:	4620      	mov	r0, r4
 800e8b2:	f005 fec1 	bl	8014638 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800e8b6:	9506      	str	r5, [sp, #24]
 800e8b8:	ad06      	add	r5, sp, #24
 800e8ba:	f8ad 001e 	strh.w	r0, [sp, #30]
 800e8be:	4639      	mov	r1, r7
 800e8c0:	4628      	mov	r0, r5
 800e8c2:	f8ad 801c 	strh.w	r8, [sp, #28]
 800e8c6:	f7fc fac1 	bl	800ae4c <_ZN8touchgfx4RectaNERKS0_>
 800e8ca:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800e8ce:	2b00      	cmp	r3, #0
 800e8d0:	dd19      	ble.n	800e906 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800e8d2:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800e8d6:	2b00      	cmp	r3, #0
 800e8d8:	dd15      	ble.n	800e906 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800e8da:	4b0c      	ldr	r3, [pc, #48]	; (800e90c <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 800e8dc:	681b      	ldr	r3, [r3, #0]
 800e8de:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800e8e2:	b10a      	cbz	r2, 800e8e8 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 800e8e4:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800e8e6:	b900      	cbnz	r0, 800e8ea <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 800e8e8:	6898      	ldr	r0, [r3, #8]
 800e8ea:	6801      	ldr	r1, [r0, #0]
 800e8ec:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 800e8f0:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 800e8f4:	2701      	movs	r7, #1
 800e8f6:	9702      	str	r7, [sp, #8]
 800e8f8:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 800e8fc:	e9cd 5600 	strd	r5, r6, [sp]
 800e900:	688d      	ldr	r5, [r1, #8]
 800e902:	4621      	mov	r1, r4
 800e904:	47a8      	blx	r5
 800e906:	b008      	add	sp, #32
 800e908:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e90c:	20015604 	.word	0x20015604

0800e910 <_ZN8touchgfx15ButtonWithLabelD1Ev>:
 800e910:	4770      	bx	lr

0800e912 <_ZN8touchgfx15ButtonWithLabelD0Ev>:
 800e912:	b510      	push	{r4, lr}
 800e914:	2148      	movs	r1, #72	; 0x48
 800e916:	4604      	mov	r4, r0
 800e918:	f011 ff46 	bl	80207a8 <_ZdlPvj>
 800e91c:	4620      	mov	r0, r4
 800e91e:	bd10      	pop	{r4, pc}

0800e920 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
 800e920:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e924:	b08d      	sub	sp, #52	; 0x34
 800e926:	4604      	mov	r4, r0
 800e928:	4688      	mov	r8, r1
 800e92a:	f7ff fd89 	bl	800e440 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 800e92e:	4a4d      	ldr	r2, [pc, #308]	; (800ea64 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x144>)
 800e930:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 800e932:	8812      	ldrh	r2, [r2, #0]
 800e934:	429a      	cmp	r2, r3
 800e936:	f240 8081 	bls.w	800ea3c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11c>
 800e93a:	4e4b      	ldr	r6, [pc, #300]	; (800ea68 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x148>)
 800e93c:	6832      	ldr	r2, [r6, #0]
 800e93e:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800e942:	4b4a      	ldr	r3, [pc, #296]	; (800ea6c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x14c>)
 800e944:	681b      	ldr	r3, [r3, #0]
 800e946:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 800e94a:	f894 2045 	ldrb.w	r2, [r4, #69]	; 0x45
 800e94e:	2300      	movs	r3, #0
 800e950:	e9cd 3303 	strd	r3, r3, [sp, #12]
 800e954:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e958:	2b03      	cmp	r3, #3
 800e95a:	d811      	bhi.n	800e980 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 800e95c:	e8df f003 	tbb	[pc, r3]
 800e960:	71027102 	.word	0x71027102
 800e964:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800e968:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800e96c:	f8ad 1010 	strh.w	r1, [sp, #16]
 800e970:	1a9b      	subs	r3, r3, r2
 800e972:	2002      	movs	r0, #2
 800e974:	f8ad 2012 	strh.w	r2, [sp, #18]
 800e978:	fb93 f3f0 	sdiv	r3, r3, r0
 800e97c:	f8ad 300e 	strh.w	r3, [sp, #14]
 800e980:	ad03      	add	r5, sp, #12
 800e982:	e895 0003 	ldmia.w	r5, {r0, r1}
 800e986:	f10d 0914 	add.w	r9, sp, #20
 800e98a:	e889 0003 	stmia.w	r9, {r0, r1}
 800e98e:	4641      	mov	r1, r8
 800e990:	4648      	mov	r0, r9
 800e992:	f7fc fa5b 	bl	800ae4c <_ZN8touchgfx4RectaNERKS0_>
 800e996:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800e99a:	2b00      	cmp	r3, #0
 800e99c:	dd4e      	ble.n	800ea3c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11c>
 800e99e:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 800e9a2:	2b00      	cmp	r3, #0
 800e9a4:	dd4a      	ble.n	800ea3c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11c>
 800e9a6:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 800e9aa:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800e9ae:	1a9b      	subs	r3, r3, r2
 800e9b0:	f8ad 3014 	strh.w	r3, [sp, #20]
 800e9b4:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 800e9b8:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800e9bc:	1a9b      	subs	r3, r3, r2
 800e9be:	f8ad 3016 	strh.w	r3, [sp, #22]
 800e9c2:	6823      	ldr	r3, [r4, #0]
 800e9c4:	4629      	mov	r1, r5
 800e9c6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e9c8:	4620      	mov	r0, r4
 800e9ca:	4798      	blx	r3
 800e9cc:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 800e9d0:	2b00      	cmp	r3, #0
 800e9d2:	d045      	beq.n	800ea60 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x140>
 800e9d4:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800e9d6:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 800e9d8:	6833      	ldr	r3, [r6, #0]
 800e9da:	f894 0032 	ldrb.w	r0, [r4, #50]	; 0x32
 800e9de:	f894 4044 	ldrb.w	r4, [r4, #68]	; 0x44
 800e9e2:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 800e9e6:	785b      	ldrb	r3, [r3, #1]
 800e9e8:	9209      	str	r2, [sp, #36]	; 0x24
 800e9ea:	f3c3 0601 	ubfx	r6, r3, #0, #2
 800e9ee:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800e9f2:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 800e9f6:	2300      	movs	r3, #0
 800e9f8:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800e9fc:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 800ea00:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 800ea04:	4b1a      	ldr	r3, [pc, #104]	; (800ea70 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x150>)
 800ea06:	9707      	str	r7, [sp, #28]
 800ea08:	681b      	ldr	r3, [r3, #0]
 800ea0a:	f88d 6020 	strb.w	r6, [sp, #32]
 800ea0e:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800ea12:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800ea16:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800ea1a:	b10a      	cbz	r2, 800ea20 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x100>
 800ea1c:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 800ea1e:	b904      	cbnz	r4, 800ea22 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x102>
 800ea20:	689c      	ldr	r4, [r3, #8]
 800ea22:	4b14      	ldr	r3, [pc, #80]	; (800ea74 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x154>)
 800ea24:	6818      	ldr	r0, [r3, #0]
 800ea26:	f7f6 fa37 	bl	8004e98 <_ZNK8touchgfx5Texts7getTextEt>
 800ea2a:	ab07      	add	r3, sp, #28
 800ea2c:	9001      	str	r0, [sp, #4]
 800ea2e:	9300      	str	r3, [sp, #0]
 800ea30:	e895 0006 	ldmia.w	r5, {r1, r2}
 800ea34:	464b      	mov	r3, r9
 800ea36:	4620      	mov	r0, r4
 800ea38:	f7f6 f9e0 	bl	8004dfc <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800ea3c:	b00d      	add	sp, #52	; 0x34
 800ea3e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800ea42:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800ea46:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 800ea4a:	f8ad 2010 	strh.w	r2, [sp, #16]
 800ea4e:	1a9b      	subs	r3, r3, r2
 800ea50:	2002      	movs	r0, #2
 800ea52:	f8ad 1012 	strh.w	r1, [sp, #18]
 800ea56:	fb93 f3f0 	sdiv	r3, r3, r0
 800ea5a:	f8ad 300c 	strh.w	r3, [sp, #12]
 800ea5e:	e78f      	b.n	800e980 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 800ea60:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 800ea62:	e7b8      	b.n	800e9d6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xb6>
 800ea64:	20015660 	.word	0x20015660
 800ea68:	2001565c 	.word	0x2001565c
 800ea6c:	20015664 	.word	0x20015664
 800ea70:	20015604 	.word	0x20015604
 800ea74:	20015668 	.word	0x20015668

0800ea78 <_ZN8touchgfx15ButtonWithLabelC1Ev>:
 800ea78:	b510      	push	{r4, lr}
 800ea7a:	2101      	movs	r1, #1
 800ea7c:	4c13      	ldr	r4, [pc, #76]	; (800eacc <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
 800ea7e:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 800ea82:	2200      	movs	r2, #0
 800ea84:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 800ea88:	6004      	str	r4, [r0, #0]
 800ea8a:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800ea8e:	4c10      	ldr	r4, [pc, #64]	; (800ead0 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
 800ea90:	8082      	strh	r2, [r0, #4]
 800ea92:	80c2      	strh	r2, [r0, #6]
 800ea94:	8102      	strh	r2, [r0, #8]
 800ea96:	8142      	strh	r2, [r0, #10]
 800ea98:	8182      	strh	r2, [r0, #12]
 800ea9a:	81c2      	strh	r2, [r0, #14]
 800ea9c:	8202      	strh	r2, [r0, #16]
 800ea9e:	8242      	strh	r2, [r0, #18]
 800eaa0:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800eaa4:	61c2      	str	r2, [r0, #28]
 800eaa6:	8402      	strh	r2, [r0, #32]
 800eaa8:	8442      	strh	r2, [r0, #34]	; 0x22
 800eaaa:	6282      	str	r2, [r0, #40]	; 0x28
 800eaac:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 800eab0:	85c1      	strh	r1, [r0, #46]	; 0x2e
 800eab2:	8601      	strh	r1, [r0, #48]	; 0x30
 800eab4:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 800eab8:	6344      	str	r4, [r0, #52]	; 0x34
 800eaba:	8701      	strh	r1, [r0, #56]	; 0x38
 800eabc:	e9c0 220f 	strd	r2, r2, [r0, #60]	; 0x3c
 800eac0:	f880 2044 	strb.w	r2, [r0, #68]	; 0x44
 800eac4:	f880 2045 	strb.w	r2, [r0, #69]	; 0x45
 800eac8:	bd10      	pop	{r4, pc}
 800eaca:	bf00      	nop
 800eacc:	080242dc 	.word	0x080242dc
 800ead0:	080222dc 	.word	0x080222dc

0800ead4 <_ZN8touchgfx7OutlineD1Ev>:
 800ead4:	4770      	bx	lr

0800ead6 <_ZN8touchgfx7OutlineD0Ev>:
 800ead6:	b510      	push	{r4, lr}
 800ead8:	2130      	movs	r1, #48	; 0x30
 800eada:	4604      	mov	r4, r0
 800eadc:	f011 fe64 	bl	80207a8 <_ZdlPvj>
 800eae0:	4620      	mov	r0, r4
 800eae2:	bd10      	pop	{r4, pc}

0800eae4 <_ZN8touchgfx7Outline5resetEv>:
 800eae4:	b510      	push	{r4, lr}
 800eae6:	4604      	mov	r4, r0
 800eae8:	f000 fe8c 	bl	800f804 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 800eaec:	60e0      	str	r0, [r4, #12]
 800eaee:	f000 fe8f 	bl	800f810 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 800eaf2:	68e3      	ldr	r3, [r4, #12]
 800eaf4:	6123      	str	r3, [r4, #16]
 800eaf6:	08c0      	lsrs	r0, r0, #3
 800eaf8:	2200      	movs	r2, #0
 800eafa:	f647 71ff 	movw	r1, #32767	; 0x7fff
 800eafe:	3801      	subs	r0, #1
 800eb00:	6060      	str	r0, [r4, #4]
 800eb02:	60a2      	str	r2, [r4, #8]
 800eb04:	8019      	strh	r1, [r3, #0]
 800eb06:	8059      	strh	r1, [r3, #2]
 800eb08:	809a      	strh	r2, [r3, #4]
 800eb0a:	80da      	strh	r2, [r3, #6]
 800eb0c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800eb0e:	f023 0301 	bic.w	r3, r3, #1
 800eb12:	f043 0302 	orr.w	r3, r3, #2
 800eb16:	6263      	str	r3, [r4, #36]	; 0x24
 800eb18:	bd10      	pop	{r4, pc}
	...

0800eb1c <_ZN8touchgfx7OutlineC1Ev>:
 800eb1c:	b510      	push	{r4, lr}
 800eb1e:	4b0a      	ldr	r3, [pc, #40]	; (800eb48 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
 800eb20:	6003      	str	r3, [r0, #0]
 800eb22:	2300      	movs	r3, #0
 800eb24:	e9c0 3301 	strd	r3, r3, [r0, #4]
 800eb28:	e9c0 3303 	strd	r3, r3, [r0, #12]
 800eb2c:	e9c0 3305 	strd	r3, r3, [r0, #20]
 800eb30:	e9c0 3307 	strd	r3, r3, [r0, #28]
 800eb34:	6243      	str	r3, [r0, #36]	; 0x24
 800eb36:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 800eb3a:	4604      	mov	r4, r0
 800eb3c:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
 800eb40:	f7ff ffd0 	bl	800eae4 <_ZN8touchgfx7Outline5resetEv>
 800eb44:	4620      	mov	r0, r4
 800eb46:	bd10      	pop	{r4, pc}
 800eb48:	08024350 	.word	0x08024350

0800eb4c <_ZN8touchgfx7Outline10renderLineEiiii>:
 800eb4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800eb50:	b093      	sub	sp, #76	; 0x4c
 800eb52:	1156      	asrs	r6, r2, #5
 800eb54:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 800eb56:	9305      	str	r3, [sp, #20]
 800eb58:	f004 051f 	and.w	r5, r4, #31
 800eb5c:	1153      	asrs	r3, r2, #5
 800eb5e:	9504      	str	r5, [sp, #16]
 800eb60:	1165      	asrs	r5, r4, #5
 800eb62:	9303      	str	r3, [sp, #12]
 800eb64:	42ae      	cmp	r6, r5
 800eb66:	ea4f 1364 	mov.w	r3, r4, asr #5
 800eb6a:	9306      	str	r3, [sp, #24]
 800eb6c:	f002 031f 	and.w	r3, r2, #31
 800eb70:	f040 80f8 	bne.w	800ed64 <_ZN8touchgfx7Outline10renderLineEiiii+0x218>
 800eb74:	9c04      	ldr	r4, [sp, #16]
 800eb76:	9a05      	ldr	r2, [sp, #20]
 800eb78:	42a3      	cmp	r3, r4
 800eb7a:	ea4f 1e62 	mov.w	lr, r2, asr #5
 800eb7e:	6902      	ldr	r2, [r0, #16]
 800eb80:	d125      	bne.n	800ebce <_ZN8touchgfx7Outline10renderLineEiiii+0x82>
 800eb82:	f9b2 3000 	ldrsh.w	r3, [r2]
 800eb86:	459e      	cmp	lr, r3
 800eb88:	d103      	bne.n	800eb92 <_ZN8touchgfx7Outline10renderLineEiiii+0x46>
 800eb8a:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 800eb8e:	429e      	cmp	r6, r3
 800eb90:	d035      	beq.n	800ebfe <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800eb92:	88d1      	ldrh	r1, [r2, #6]
 800eb94:	8893      	ldrh	r3, [r2, #4]
 800eb96:	430b      	orrs	r3, r1
 800eb98:	d010      	beq.n	800ebbc <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 800eb9a:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 800eb9e:	2b00      	cmp	r3, #0
 800eba0:	db0c      	blt.n	800ebbc <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 800eba2:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 800eba4:	428b      	cmp	r3, r1
 800eba6:	da09      	bge.n	800ebbc <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 800eba8:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 800ebac:	428b      	cmp	r3, r1
 800ebae:	bf38      	it	cc
 800ebb0:	3208      	addcc	r2, #8
 800ebb2:	f103 0301 	add.w	r3, r3, #1
 800ebb6:	bf38      	it	cc
 800ebb8:	6102      	strcc	r2, [r0, #16]
 800ebba:	6083      	str	r3, [r0, #8]
 800ebbc:	6903      	ldr	r3, [r0, #16]
 800ebbe:	9a03      	ldr	r2, [sp, #12]
 800ebc0:	f8a3 e000 	strh.w	lr, [r3]
 800ebc4:	805a      	strh	r2, [r3, #2]
 800ebc6:	2200      	movs	r2, #0
 800ebc8:	809a      	strh	r2, [r3, #4]
 800ebca:	80da      	strh	r2, [r3, #6]
 800ebcc:	e017      	b.n	800ebfe <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800ebce:	9c05      	ldr	r4, [sp, #20]
 800ebd0:	f8b2 8004 	ldrh.w	r8, [r2, #4]
 800ebd4:	f8b2 a006 	ldrh.w	sl, [r2, #6]
 800ebd8:	f004 041f 	and.w	r4, r4, #31
 800ebdc:	114e      	asrs	r6, r1, #5
 800ebde:	9402      	str	r4, [sp, #8]
 800ebe0:	9c04      	ldr	r4, [sp, #16]
 800ebe2:	4576      	cmp	r6, lr
 800ebe4:	f001 0c1f 	and.w	ip, r1, #31
 800ebe8:	eba4 0403 	sub.w	r4, r4, r3
 800ebec:	d10a      	bne.n	800ec04 <_ZN8touchgfx7Outline10renderLineEiiii+0xb8>
 800ebee:	9b02      	ldr	r3, [sp, #8]
 800ebf0:	449c      	add	ip, r3
 800ebf2:	44a0      	add	r8, r4
 800ebf4:	fb04 a40c 	mla	r4, r4, ip, sl
 800ebf8:	f8a2 8004 	strh.w	r8, [r2, #4]
 800ebfc:	80d4      	strh	r4, [r2, #6]
 800ebfe:	b013      	add	sp, #76	; 0x4c
 800ec00:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ec04:	9d05      	ldr	r5, [sp, #20]
 800ec06:	1a69      	subs	r1, r5, r1
 800ec08:	bf5b      	ittet	pl
 800ec0a:	f1cc 0520 	rsbpl	r5, ip, #32
 800ec0e:	436c      	mulpl	r4, r5
 800ec10:	2500      	movmi	r5, #0
 800ec12:	2520      	movpl	r5, #32
 800ec14:	bf44      	itt	mi
 800ec16:	fb04 f40c 	mulmi.w	r4, r4, ip
 800ec1a:	4249      	negmi	r1, r1
 800ec1c:	9501      	str	r5, [sp, #4]
 800ec1e:	9f01      	ldr	r7, [sp, #4]
 800ec20:	fb94 f5f1 	sdiv	r5, r4, r1
 800ec24:	fb01 4415 	mls	r4, r1, r5, r4
 800ec28:	bf54      	ite	pl
 800ec2a:	f04f 0901 	movpl.w	r9, #1
 800ec2e:	f04f 39ff 	movmi.w	r9, #4294967295
 800ec32:	2c00      	cmp	r4, #0
 800ec34:	bfb8      	it	lt
 800ec36:	f105 35ff 	addlt.w	r5, r5, #4294967295
 800ec3a:	44bc      	add	ip, r7
 800ec3c:	44a8      	add	r8, r5
 800ec3e:	fb05 ac0c 	mla	ip, r5, ip, sl
 800ec42:	f8a2 8004 	strh.w	r8, [r2, #4]
 800ec46:	f8a2 c006 	strh.w	ip, [r2, #6]
 800ec4a:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800ec4e:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 800ec52:	f8bc 2004 	ldrh.w	r2, [ip, #4]
 800ec56:	bfb8      	it	lt
 800ec58:	1864      	addlt	r4, r4, r1
 800ec5a:	ea58 0202 	orrs.w	r2, r8, r2
 800ec5e:	444e      	add	r6, r9
 800ec60:	d011      	beq.n	800ec86 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 800ec62:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 800ec66:	f1b8 0f00 	cmp.w	r8, #0
 800ec6a:	db0c      	blt.n	800ec86 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 800ec6c:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 800ec6e:	4590      	cmp	r8, r2
 800ec70:	da09      	bge.n	800ec86 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 800ec72:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
 800ec76:	4590      	cmp	r8, r2
 800ec78:	bf3c      	itt	cc
 800ec7a:	f10c 0208 	addcc.w	r2, ip, #8
 800ec7e:	6102      	strcc	r2, [r0, #16]
 800ec80:	f108 0201 	add.w	r2, r8, #1
 800ec84:	6082      	str	r2, [r0, #8]
 800ec86:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800ec8a:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 800ec8e:	f8ac 6000 	strh.w	r6, [ip]
 800ec92:	2700      	movs	r7, #0
 800ec94:	45b6      	cmp	lr, r6
 800ec96:	f8ac 2002 	strh.w	r2, [ip, #2]
 800ec9a:	f8ac 7004 	strh.w	r7, [ip, #4]
 800ec9e:	f8ac 7006 	strh.w	r7, [ip, #6]
 800eca2:	442b      	add	r3, r5
 800eca4:	d04d      	beq.n	800ed42 <_ZN8touchgfx7Outline10renderLineEiiii+0x1f6>
 800eca6:	9f04      	ldr	r7, [sp, #16]
 800eca8:	1aff      	subs	r7, r7, r3
 800ecaa:	443d      	add	r5, r7
 800ecac:	016d      	lsls	r5, r5, #5
 800ecae:	fb95 f8f1 	sdiv	r8, r5, r1
 800ecb2:	fb01 5518 	mls	r5, r1, r8, r5
 800ecb6:	2d00      	cmp	r5, #0
 800ecb8:	bfb8      	it	lt
 800ecba:	f108 38ff 	addlt.w	r8, r8, #4294967295
 800ecbe:	f108 0701 	add.w	r7, r8, #1
 800ecc2:	bfb8      	it	lt
 800ecc4:	186d      	addlt	r5, r5, r1
 800ecc6:	1a64      	subs	r4, r4, r1
 800ecc8:	9703      	str	r7, [sp, #12]
 800ecca:	f04f 0a00 	mov.w	sl, #0
 800ecce:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800ecd2:	1964      	adds	r4, r4, r5
 800ecd4:	bf58      	it	pl
 800ecd6:	9f03      	ldrpl	r7, [sp, #12]
 800ecd8:	f8bc b004 	ldrh.w	fp, [ip, #4]
 800ecdc:	bf48      	it	mi
 800ecde:	4647      	movmi	r7, r8
 800ece0:	44bb      	add	fp, r7
 800ece2:	f8ac b004 	strh.w	fp, [ip, #4]
 800ece6:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800ecea:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 800ecee:	f8ac b006 	strh.w	fp, [ip, #6]
 800ecf2:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800ecf6:	443b      	add	r3, r7
 800ecf8:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800ecfc:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800ed00:	bf58      	it	pl
 800ed02:	1a64      	subpl	r4, r4, r1
 800ed04:	ea5b 0707 	orrs.w	r7, fp, r7
 800ed08:	444e      	add	r6, r9
 800ed0a:	d011      	beq.n	800ed30 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 800ed0c:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 800ed10:	f1bb 0f00 	cmp.w	fp, #0
 800ed14:	db0c      	blt.n	800ed30 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 800ed16:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800ed18:	45bb      	cmp	fp, r7
 800ed1a:	da09      	bge.n	800ed30 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 800ed1c:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 800ed20:	45bb      	cmp	fp, r7
 800ed22:	bf3c      	itt	cc
 800ed24:	f10c 0708 	addcc.w	r7, ip, #8
 800ed28:	6107      	strcc	r7, [r0, #16]
 800ed2a:	f10b 0701 	add.w	r7, fp, #1
 800ed2e:	6087      	str	r7, [r0, #8]
 800ed30:	6907      	ldr	r7, [r0, #16]
 800ed32:	45b6      	cmp	lr, r6
 800ed34:	803e      	strh	r6, [r7, #0]
 800ed36:	807a      	strh	r2, [r7, #2]
 800ed38:	f8a7 a004 	strh.w	sl, [r7, #4]
 800ed3c:	f8a7 a006 	strh.w	sl, [r7, #6]
 800ed40:	d1c5      	bne.n	800ecce <_ZN8touchgfx7Outline10renderLineEiiii+0x182>
 800ed42:	9a04      	ldr	r2, [sp, #16]
 800ed44:	1ad3      	subs	r3, r2, r3
 800ed46:	6902      	ldr	r2, [r0, #16]
 800ed48:	8891      	ldrh	r1, [r2, #4]
 800ed4a:	88d6      	ldrh	r6, [r2, #6]
 800ed4c:	4419      	add	r1, r3
 800ed4e:	8091      	strh	r1, [r2, #4]
 800ed50:	9902      	ldr	r1, [sp, #8]
 800ed52:	f101 0c20 	add.w	ip, r1, #32
 800ed56:	9901      	ldr	r1, [sp, #4]
 800ed58:	ebac 0c01 	sub.w	ip, ip, r1
 800ed5c:	fb03 630c 	mla	r3, r3, ip, r6
 800ed60:	80d3      	strh	r3, [r2, #6]
 800ed62:	e74c      	b.n	800ebfe <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800ed64:	9d05      	ldr	r5, [sp, #20]
 800ed66:	1aa2      	subs	r2, r4, r2
 800ed68:	eba5 0501 	sub.w	r5, r5, r1
 800ed6c:	9508      	str	r5, [sp, #32]
 800ed6e:	9202      	str	r2, [sp, #8]
 800ed70:	f140 8128 	bpl.w	800efc4 <_ZN8touchgfx7Outline10renderLineEiiii+0x478>
 800ed74:	9a03      	ldr	r2, [sp, #12]
 800ed76:	2a00      	cmp	r2, #0
 800ed78:	f6ff af41 	blt.w	800ebfe <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800ed7c:	9a02      	ldr	r2, [sp, #8]
 800ed7e:	4252      	negs	r2, r2
 800ed80:	9202      	str	r2, [sp, #8]
 800ed82:	9a06      	ldr	r2, [sp, #24]
 800ed84:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
 800ed88:	f04f 34ff 	mov.w	r4, #4294967295
 800ed8c:	9206      	str	r2, [sp, #24]
 800ed8e:	462a      	mov	r2, r5
 800ed90:	940b      	str	r4, [sp, #44]	; 0x2c
 800ed92:	435a      	muls	r2, r3
 800ed94:	2400      	movs	r4, #0
 800ed96:	9d02      	ldr	r5, [sp, #8]
 800ed98:	9401      	str	r4, [sp, #4]
 800ed9a:	9c02      	ldr	r4, [sp, #8]
 800ed9c:	fb92 f4f4 	sdiv	r4, r2, r4
 800eda0:	fb05 2214 	mls	r2, r5, r4, r2
 800eda4:	2a00      	cmp	r2, #0
 800eda6:	9207      	str	r2, [sp, #28]
 800eda8:	bfbc      	itt	lt
 800edaa:	1952      	addlt	r2, r2, r5
 800edac:	9207      	strlt	r2, [sp, #28]
 800edae:	9a01      	ldr	r2, [sp, #4]
 800edb0:	6905      	ldr	r5, [r0, #16]
 800edb2:	bfb8      	it	lt
 800edb4:	f104 34ff 	addlt.w	r4, r4, #4294967295
 800edb8:	eb04 0901 	add.w	r9, r4, r1
 800edbc:	429a      	cmp	r2, r3
 800edbe:	ea4f 1669 	mov.w	r6, r9, asr #5
 800edc2:	f040 8112 	bne.w	800efea <_ZN8touchgfx7Outline10renderLineEiiii+0x49e>
 800edc6:	f9b5 3000 	ldrsh.w	r3, [r5]
 800edca:	429e      	cmp	r6, r3
 800edcc:	d104      	bne.n	800edd8 <_ZN8touchgfx7Outline10renderLineEiiii+0x28c>
 800edce:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800edd2:	9a03      	ldr	r2, [sp, #12]
 800edd4:	429a      	cmp	r2, r3
 800edd6:	d01b      	beq.n	800ee10 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 800edd8:	88ea      	ldrh	r2, [r5, #6]
 800edda:	88ab      	ldrh	r3, [r5, #4]
 800eddc:	4313      	orrs	r3, r2
 800edde:	d010      	beq.n	800ee02 <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 800ede0:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800ede4:	2a00      	cmp	r2, #0
 800ede6:	db0c      	blt.n	800ee02 <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 800ede8:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800edea:	429a      	cmp	r2, r3
 800edec:	da09      	bge.n	800ee02 <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 800edee:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
 800edf2:	429a      	cmp	r2, r3
 800edf4:	bf38      	it	cc
 800edf6:	3508      	addcc	r5, #8
 800edf8:	f102 0201 	add.w	r2, r2, #1
 800edfc:	bf38      	it	cc
 800edfe:	6105      	strcc	r5, [r0, #16]
 800ee00:	6082      	str	r2, [r0, #8]
 800ee02:	6903      	ldr	r3, [r0, #16]
 800ee04:	9a03      	ldr	r2, [sp, #12]
 800ee06:	805a      	strh	r2, [r3, #2]
 800ee08:	2200      	movs	r2, #0
 800ee0a:	801e      	strh	r6, [r3, #0]
 800ee0c:	809a      	strh	r2, [r3, #4]
 800ee0e:	80da      	strh	r2, [r3, #6]
 800ee10:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800ee12:	9a03      	ldr	r2, [sp, #12]
 800ee14:	6901      	ldr	r1, [r0, #16]
 800ee16:	441a      	add	r2, r3
 800ee18:	f9b1 3000 	ldrsh.w	r3, [r1]
 800ee1c:	42b3      	cmp	r3, r6
 800ee1e:	d103      	bne.n	800ee28 <_ZN8touchgfx7Outline10renderLineEiiii+0x2dc>
 800ee20:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800ee24:	429a      	cmp	r2, r3
 800ee26:	d01a      	beq.n	800ee5e <_ZN8touchgfx7Outline10renderLineEiiii+0x312>
 800ee28:	88cc      	ldrh	r4, [r1, #6]
 800ee2a:	888b      	ldrh	r3, [r1, #4]
 800ee2c:	4323      	orrs	r3, r4
 800ee2e:	d010      	beq.n	800ee52 <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 800ee30:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 800ee34:	2c00      	cmp	r4, #0
 800ee36:	db0c      	blt.n	800ee52 <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 800ee38:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800ee3a:	429c      	cmp	r4, r3
 800ee3c:	da09      	bge.n	800ee52 <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 800ee3e:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 800ee42:	429c      	cmp	r4, r3
 800ee44:	bf38      	it	cc
 800ee46:	3108      	addcc	r1, #8
 800ee48:	f104 0401 	add.w	r4, r4, #1
 800ee4c:	bf38      	it	cc
 800ee4e:	6101      	strcc	r1, [r0, #16]
 800ee50:	6084      	str	r4, [r0, #8]
 800ee52:	6903      	ldr	r3, [r0, #16]
 800ee54:	2100      	movs	r1, #0
 800ee56:	801e      	strh	r6, [r3, #0]
 800ee58:	805a      	strh	r2, [r3, #2]
 800ee5a:	8099      	strh	r1, [r3, #4]
 800ee5c:	80d9      	strh	r1, [r3, #6]
 800ee5e:	9b06      	ldr	r3, [sp, #24]
 800ee60:	4293      	cmp	r3, r2
 800ee62:	f000 8082 	beq.w	800ef6a <_ZN8touchgfx7Outline10renderLineEiiii+0x41e>
 800ee66:	9b08      	ldr	r3, [sp, #32]
 800ee68:	9c02      	ldr	r4, [sp, #8]
 800ee6a:	9902      	ldr	r1, [sp, #8]
 800ee6c:	015b      	lsls	r3, r3, #5
 800ee6e:	fb93 f1f1 	sdiv	r1, r3, r1
 800ee72:	fb04 3311 	mls	r3, r4, r1, r3
 800ee76:	2b00      	cmp	r3, #0
 800ee78:	9103      	str	r1, [sp, #12]
 800ee7a:	9308      	str	r3, [sp, #32]
 800ee7c:	da04      	bge.n	800ee88 <_ZN8touchgfx7Outline10renderLineEiiii+0x33c>
 800ee7e:	1e4b      	subs	r3, r1, #1
 800ee80:	9303      	str	r3, [sp, #12]
 800ee82:	9b08      	ldr	r3, [sp, #32]
 800ee84:	4423      	add	r3, r4
 800ee86:	9308      	str	r3, [sp, #32]
 800ee88:	9b07      	ldr	r3, [sp, #28]
 800ee8a:	9902      	ldr	r1, [sp, #8]
 800ee8c:	1a5b      	subs	r3, r3, r1
 800ee8e:	9307      	str	r3, [sp, #28]
 800ee90:	9b01      	ldr	r3, [sp, #4]
 800ee92:	f1c3 0320 	rsb	r3, r3, #32
 800ee96:	930e      	str	r3, [sp, #56]	; 0x38
 800ee98:	990e      	ldr	r1, [sp, #56]	; 0x38
 800ee9a:	9b01      	ldr	r3, [sp, #4]
 800ee9c:	1a5b      	subs	r3, r3, r1
 800ee9e:	464f      	mov	r7, r9
 800eea0:	930a      	str	r3, [sp, #40]	; 0x28
 800eea2:	2600      	movs	r6, #0
 800eea4:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
 800eea8:	185b      	adds	r3, r3, r1
 800eeaa:	bf58      	it	pl
 800eeac:	9902      	ldrpl	r1, [sp, #8]
 800eeae:	9307      	str	r3, [sp, #28]
 800eeb0:	bf5d      	ittte	pl
 800eeb2:	1a5b      	subpl	r3, r3, r1
 800eeb4:	9307      	strpl	r3, [sp, #28]
 800eeb6:	9b03      	ldrpl	r3, [sp, #12]
 800eeb8:	9903      	ldrmi	r1, [sp, #12]
 800eeba:	bf58      	it	pl
 800eebc:	1c59      	addpl	r1, r3, #1
 800eebe:	4489      	add	r9, r1
 800eec0:	2a00      	cmp	r2, #0
 800eec2:	ea4f 1a69 	mov.w	sl, r9, asr #5
 800eec6:	db2e      	blt.n	800ef26 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800eec8:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800eeca:	4293      	cmp	r3, r2
 800eecc:	dd2b      	ble.n	800ef26 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800eece:	9c01      	ldr	r4, [sp, #4]
 800eed0:	6905      	ldr	r5, [r0, #16]
 800eed2:	46a0      	mov	r8, r4
 800eed4:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 800eed6:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
 800eeda:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
 800eede:	45a0      	cmp	r8, r4
 800eee0:	f040 814f 	bne.w	800f182 <_ZN8touchgfx7Outline10renderLineEiiii+0x636>
 800eee4:	f9b5 1000 	ldrsh.w	r1, [r5]
 800eee8:	4551      	cmp	r1, sl
 800eeea:	d103      	bne.n	800eef4 <_ZN8touchgfx7Outline10renderLineEiiii+0x3a8>
 800eeec:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 800eef0:	4291      	cmp	r1, r2
 800eef2:	d018      	beq.n	800ef26 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800eef4:	ea5c 010e 	orrs.w	r1, ip, lr
 800eef8:	d00f      	beq.n	800ef1a <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 800eefa:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 800eefe:	2900      	cmp	r1, #0
 800ef00:	db0b      	blt.n	800ef1a <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 800ef02:	428b      	cmp	r3, r1
 800ef04:	dd09      	ble.n	800ef1a <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 800ef06:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
 800ef0a:	4299      	cmp	r1, r3
 800ef0c:	bf38      	it	cc
 800ef0e:	3508      	addcc	r5, #8
 800ef10:	f101 0101 	add.w	r1, r1, #1
 800ef14:	bf38      	it	cc
 800ef16:	6105      	strcc	r5, [r0, #16]
 800ef18:	6081      	str	r1, [r0, #8]
 800ef1a:	6903      	ldr	r3, [r0, #16]
 800ef1c:	f8a3 a000 	strh.w	sl, [r3]
 800ef20:	805a      	strh	r2, [r3, #2]
 800ef22:	809e      	strh	r6, [r3, #4]
 800ef24:	80de      	strh	r6, [r3, #6]
 800ef26:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800ef28:	6901      	ldr	r1, [r0, #16]
 800ef2a:	441a      	add	r2, r3
 800ef2c:	88cc      	ldrh	r4, [r1, #6]
 800ef2e:	888b      	ldrh	r3, [r1, #4]
 800ef30:	4323      	orrs	r3, r4
 800ef32:	d010      	beq.n	800ef56 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 800ef34:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 800ef38:	2c00      	cmp	r4, #0
 800ef3a:	db0c      	blt.n	800ef56 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 800ef3c:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800ef3e:	429c      	cmp	r4, r3
 800ef40:	da09      	bge.n	800ef56 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 800ef42:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 800ef46:	429c      	cmp	r4, r3
 800ef48:	bf38      	it	cc
 800ef4a:	3108      	addcc	r1, #8
 800ef4c:	f104 0401 	add.w	r4, r4, #1
 800ef50:	bf38      	it	cc
 800ef52:	6101      	strcc	r1, [r0, #16]
 800ef54:	6084      	str	r4, [r0, #8]
 800ef56:	6903      	ldr	r3, [r0, #16]
 800ef58:	f8a3 a000 	strh.w	sl, [r3]
 800ef5c:	805a      	strh	r2, [r3, #2]
 800ef5e:	809e      	strh	r6, [r3, #4]
 800ef60:	80de      	strh	r6, [r3, #6]
 800ef62:	9b06      	ldr	r3, [sp, #24]
 800ef64:	4293      	cmp	r3, r2
 800ef66:	464f      	mov	r7, r9
 800ef68:	d19c      	bne.n	800eea4 <_ZN8touchgfx7Outline10renderLineEiiii+0x358>
 800ef6a:	9b01      	ldr	r3, [sp, #4]
 800ef6c:	6907      	ldr	r7, [r0, #16]
 800ef6e:	f1c3 0620 	rsb	r6, r3, #32
 800ef72:	9b05      	ldr	r3, [sp, #20]
 800ef74:	ea4f 1e63 	mov.w	lr, r3, asr #5
 800ef78:	9b04      	ldr	r3, [sp, #16]
 800ef7a:	429e      	cmp	r6, r3
 800ef7c:	f040 81cc 	bne.w	800f318 <_ZN8touchgfx7Outline10renderLineEiiii+0x7cc>
 800ef80:	f9b7 3000 	ldrsh.w	r3, [r7]
 800ef84:	459e      	cmp	lr, r3
 800ef86:	d104      	bne.n	800ef92 <_ZN8touchgfx7Outline10renderLineEiiii+0x446>
 800ef88:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800ef8c:	429a      	cmp	r2, r3
 800ef8e:	f43f ae36 	beq.w	800ebfe <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800ef92:	88f9      	ldrh	r1, [r7, #6]
 800ef94:	88bb      	ldrh	r3, [r7, #4]
 800ef96:	430b      	orrs	r3, r1
 800ef98:	d010      	beq.n	800efbc <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 800ef9a:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800ef9e:	2b00      	cmp	r3, #0
 800efa0:	db0c      	blt.n	800efbc <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 800efa2:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 800efa4:	428b      	cmp	r3, r1
 800efa6:	da09      	bge.n	800efbc <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 800efa8:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 800efac:	428b      	cmp	r3, r1
 800efae:	bf38      	it	cc
 800efb0:	3708      	addcc	r7, #8
 800efb2:	f103 0301 	add.w	r3, r3, #1
 800efb6:	bf38      	it	cc
 800efb8:	6107      	strcc	r7, [r0, #16]
 800efba:	6083      	str	r3, [r0, #8]
 800efbc:	6903      	ldr	r3, [r0, #16]
 800efbe:	f8a3 e000 	strh.w	lr, [r3]
 800efc2:	e5ff      	b.n	800ebc4 <_ZN8touchgfx7Outline10renderLineEiiii+0x78>
 800efc4:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 800efc6:	9c03      	ldr	r4, [sp, #12]
 800efc8:	42a2      	cmp	r2, r4
 800efca:	f6ff ae18 	blt.w	800ebfe <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800efce:	9c06      	ldr	r4, [sp, #24]
 800efd0:	42a2      	cmp	r2, r4
 800efd2:	bfb8      	it	lt
 800efd4:	3201      	addlt	r2, #1
 800efd6:	9c08      	ldr	r4, [sp, #32]
 800efd8:	bfb8      	it	lt
 800efda:	9206      	strlt	r2, [sp, #24]
 800efdc:	f1c3 0220 	rsb	r2, r3, #32
 800efe0:	4362      	muls	r2, r4
 800efe2:	2401      	movs	r4, #1
 800efe4:	940b      	str	r4, [sp, #44]	; 0x2c
 800efe6:	2420      	movs	r4, #32
 800efe8:	e6d5      	b.n	800ed96 <_ZN8touchgfx7Outline10renderLineEiiii+0x24a>
 800efea:	f009 021f 	and.w	r2, r9, #31
 800efee:	ea4f 1861 	mov.w	r8, r1, asr #5
 800eff2:	920c      	str	r2, [sp, #48]	; 0x30
 800eff4:	9a01      	ldr	r2, [sp, #4]
 800eff6:	f8b5 e004 	ldrh.w	lr, [r5, #4]
 800effa:	f8b5 a006 	ldrh.w	sl, [r5, #6]
 800effe:	45b0      	cmp	r8, r6
 800f000:	f001 011f 	and.w	r1, r1, #31
 800f004:	eba2 0203 	sub.w	r2, r2, r3
 800f008:	d108      	bne.n	800f01c <_ZN8touchgfx7Outline10renderLineEiiii+0x4d0>
 800f00a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800f00c:	4419      	add	r1, r3
 800f00e:	4496      	add	lr, r2
 800f010:	fb02 a101 	mla	r1, r2, r1, sl
 800f014:	f8a5 e004 	strh.w	lr, [r5, #4]
 800f018:	80e9      	strh	r1, [r5, #6]
 800f01a:	e6f9      	b.n	800ee10 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 800f01c:	2c00      	cmp	r4, #0
 800f01e:	f2c0 80a9 	blt.w	800f174 <_ZN8touchgfx7Outline10renderLineEiiii+0x628>
 800f022:	2701      	movs	r7, #1
 800f024:	f1c1 0c20 	rsb	ip, r1, #32
 800f028:	970a      	str	r7, [sp, #40]	; 0x28
 800f02a:	fb02 f20c 	mul.w	r2, r2, ip
 800f02e:	2720      	movs	r7, #32
 800f030:	9709      	str	r7, [sp, #36]	; 0x24
 800f032:	fb92 fcf4 	sdiv	ip, r2, r4
 800f036:	9f09      	ldr	r7, [sp, #36]	; 0x24
 800f038:	fb04 221c 	mls	r2, r4, ip, r2
 800f03c:	2a00      	cmp	r2, #0
 800f03e:	bfb8      	it	lt
 800f040:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 800f044:	4439      	add	r1, r7
 800f046:	fb0c a101 	mla	r1, ip, r1, sl
 800f04a:	80e9      	strh	r1, [r5, #6]
 800f04c:	44e6      	add	lr, ip
 800f04e:	990a      	ldr	r1, [sp, #40]	; 0x28
 800f050:	f8a5 e004 	strh.w	lr, [r5, #4]
 800f054:	eb08 0501 	add.w	r5, r8, r1
 800f058:	6901      	ldr	r1, [r0, #16]
 800f05a:	f8b1 8006 	ldrh.w	r8, [r1, #6]
 800f05e:	f8b1 e004 	ldrh.w	lr, [r1, #4]
 800f062:	bfb8      	it	lt
 800f064:	1912      	addlt	r2, r2, r4
 800f066:	ea58 070e 	orrs.w	r7, r8, lr
 800f06a:	d010      	beq.n	800f08e <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 800f06c:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
 800f070:	f1be 0f00 	cmp.w	lr, #0
 800f074:	db0b      	blt.n	800f08e <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 800f076:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800f078:	45be      	cmp	lr, r7
 800f07a:	da08      	bge.n	800f08e <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 800f07c:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 800f080:	45be      	cmp	lr, r7
 800f082:	bf3c      	itt	cc
 800f084:	3108      	addcc	r1, #8
 800f086:	6101      	strcc	r1, [r0, #16]
 800f088:	f10e 0101 	add.w	r1, lr, #1
 800f08c:	6081      	str	r1, [r0, #8]
 800f08e:	6901      	ldr	r1, [r0, #16]
 800f090:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 800f094:	800d      	strh	r5, [r1, #0]
 800f096:	f04f 0e00 	mov.w	lr, #0
 800f09a:	42ae      	cmp	r6, r5
 800f09c:	f8a1 8002 	strh.w	r8, [r1, #2]
 800f0a0:	f8a1 e004 	strh.w	lr, [r1, #4]
 800f0a4:	f8a1 e006 	strh.w	lr, [r1, #6]
 800f0a8:	4463      	add	r3, ip
 800f0aa:	d054      	beq.n	800f156 <_ZN8touchgfx7Outline10renderLineEiiii+0x60a>
 800f0ac:	9901      	ldr	r1, [sp, #4]
 800f0ae:	1ac9      	subs	r1, r1, r3
 800f0b0:	4461      	add	r1, ip
 800f0b2:	0149      	lsls	r1, r1, #5
 800f0b4:	fb91 fef4 	sdiv	lr, r1, r4
 800f0b8:	fb04 111e 	mls	r1, r4, lr, r1
 800f0bc:	2900      	cmp	r1, #0
 800f0be:	bfb8      	it	lt
 800f0c0:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 800f0c4:	f10e 0701 	add.w	r7, lr, #1
 800f0c8:	bfb8      	it	lt
 800f0ca:	1909      	addlt	r1, r1, r4
 800f0cc:	1b12      	subs	r2, r2, r4
 800f0ce:	970d      	str	r7, [sp, #52]	; 0x34
 800f0d0:	f8d0 a010 	ldr.w	sl, [r0, #16]
 800f0d4:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 800f0d6:	f8ba b004 	ldrh.w	fp, [sl, #4]
 800f0da:	1852      	adds	r2, r2, r1
 800f0dc:	bf54      	ite	pl
 800f0de:	f8dd c034 	ldrpl.w	ip, [sp, #52]	; 0x34
 800f0e2:	46f4      	movmi	ip, lr
 800f0e4:	44e3      	add	fp, ip
 800f0e6:	f8aa b004 	strh.w	fp, [sl, #4]
 800f0ea:	f8ba b006 	ldrh.w	fp, [sl, #6]
 800f0ee:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
 800f0f2:	f8aa b006 	strh.w	fp, [sl, #6]
 800f0f6:	4463      	add	r3, ip
 800f0f8:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800f0fc:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800f100:	f8bc a004 	ldrh.w	sl, [ip, #4]
 800f104:	bf58      	it	pl
 800f106:	1b12      	subpl	r2, r2, r4
 800f108:	443d      	add	r5, r7
 800f10a:	ea5b 070a 	orrs.w	r7, fp, sl
 800f10e:	d014      	beq.n	800f13a <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 800f110:	f9bc a002 	ldrsh.w	sl, [ip, #2]
 800f114:	f1ba 0f00 	cmp.w	sl, #0
 800f118:	db0f      	blt.n	800f13a <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 800f11a:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800f11c:	45ba      	cmp	sl, r7
 800f11e:	da0c      	bge.n	800f13a <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 800f120:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
 800f124:	45ba      	cmp	sl, r7
 800f126:	bf38      	it	cc
 800f128:	f10c 0c08 	addcc.w	ip, ip, #8
 800f12c:	f10a 0a01 	add.w	sl, sl, #1
 800f130:	bf38      	it	cc
 800f132:	f8c0 c010 	strcc.w	ip, [r0, #16]
 800f136:	f8c0 a008 	str.w	sl, [r0, #8]
 800f13a:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800f13e:	f04f 0700 	mov.w	r7, #0
 800f142:	42ae      	cmp	r6, r5
 800f144:	f8ac 5000 	strh.w	r5, [ip]
 800f148:	f8ac 8002 	strh.w	r8, [ip, #2]
 800f14c:	f8ac 7004 	strh.w	r7, [ip, #4]
 800f150:	f8ac 7006 	strh.w	r7, [ip, #6]
 800f154:	d1bc      	bne.n	800f0d0 <_ZN8touchgfx7Outline10renderLineEiiii+0x584>
 800f156:	6904      	ldr	r4, [r0, #16]
 800f158:	9a01      	ldr	r2, [sp, #4]
 800f15a:	990c      	ldr	r1, [sp, #48]	; 0x30
 800f15c:	1ad3      	subs	r3, r2, r3
 800f15e:	88a2      	ldrh	r2, [r4, #4]
 800f160:	441a      	add	r2, r3
 800f162:	80a2      	strh	r2, [r4, #4]
 800f164:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800f166:	3120      	adds	r1, #32
 800f168:	1a89      	subs	r1, r1, r2
 800f16a:	88e2      	ldrh	r2, [r4, #6]
 800f16c:	fb03 2301 	mla	r3, r3, r1, r2
 800f170:	80e3      	strh	r3, [r4, #6]
 800f172:	e64d      	b.n	800ee10 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 800f174:	f04f 37ff 	mov.w	r7, #4294967295
 800f178:	970a      	str	r7, [sp, #40]	; 0x28
 800f17a:	434a      	muls	r2, r1
 800f17c:	4264      	negs	r4, r4
 800f17e:	2700      	movs	r7, #0
 800f180:	e756      	b.n	800f030 <_ZN8touchgfx7Outline10renderLineEiiii+0x4e4>
 800f182:	ea4f 1867 	mov.w	r8, r7, asr #5
 800f186:	f009 031f 	and.w	r3, r9, #31
 800f18a:	45d0      	cmp	r8, sl
 800f18c:	f007 071f 	and.w	r7, r7, #31
 800f190:	930f      	str	r3, [sp, #60]	; 0x3c
 800f192:	fa1f fc8c 	uxth.w	ip, ip
 800f196:	fa1f fe8e 	uxth.w	lr, lr
 800f19a:	d10a      	bne.n	800f1b2 <_ZN8touchgfx7Outline10renderLineEiiii+0x666>
 800f19c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800f19e:	449c      	add	ip, r3
 800f1a0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800f1a2:	f8a5 c004 	strh.w	ip, [r5, #4]
 800f1a6:	441f      	add	r7, r3
 800f1a8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800f1aa:	fb03 e707 	mla	r7, r3, r7, lr
 800f1ae:	80ef      	strh	r7, [r5, #6]
 800f1b0:	e6b9      	b.n	800ef26 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800f1b2:	2900      	cmp	r1, #0
 800f1b4:	f2c0 80a8 	blt.w	800f308 <_ZN8touchgfx7Outline10renderLineEiiii+0x7bc>
 800f1b8:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800f1ba:	f1c7 0320 	rsb	r3, r7, #32
 800f1be:	4363      	muls	r3, r4
 800f1c0:	2401      	movs	r4, #1
 800f1c2:	940d      	str	r4, [sp, #52]	; 0x34
 800f1c4:	2420      	movs	r4, #32
 800f1c6:	940c      	str	r4, [sp, #48]	; 0x30
 800f1c8:	fb93 f4f1 	sdiv	r4, r3, r1
 800f1cc:	fb01 3b14 	mls	fp, r1, r4, r3
 800f1d0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800f1d2:	f1bb 0f00 	cmp.w	fp, #0
 800f1d6:	bfb8      	it	lt
 800f1d8:	f104 34ff 	addlt.w	r4, r4, #4294967295
 800f1dc:	441f      	add	r7, r3
 800f1de:	fb04 e707 	mla	r7, r4, r7, lr
 800f1e2:	44a4      	add	ip, r4
 800f1e4:	f8a5 c004 	strh.w	ip, [r5, #4]
 800f1e8:	80ef      	strh	r7, [r5, #6]
 800f1ea:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800f1ee:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800f1f0:	f8bc e006 	ldrh.w	lr, [ip, #6]
 800f1f4:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800f1f8:	bfb8      	it	lt
 800f1fa:	448b      	addlt	fp, r1
 800f1fc:	eb08 0503 	add.w	r5, r8, r3
 800f200:	ea5e 0307 	orrs.w	r3, lr, r7
 800f204:	d011      	beq.n	800f22a <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 800f206:	f9bc e002 	ldrsh.w	lr, [ip, #2]
 800f20a:	f1be 0f00 	cmp.w	lr, #0
 800f20e:	db0c      	blt.n	800f22a <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 800f210:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800f212:	45be      	cmp	lr, r7
 800f214:	da09      	bge.n	800f22a <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 800f216:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 800f21a:	45be      	cmp	lr, r7
 800f21c:	bf3c      	itt	cc
 800f21e:	f10c 0708 	addcc.w	r7, ip, #8
 800f222:	6107      	strcc	r7, [r0, #16]
 800f224:	f10e 0701 	add.w	r7, lr, #1
 800f228:	6087      	str	r7, [r0, #8]
 800f22a:	6907      	ldr	r7, [r0, #16]
 800f22c:	b213      	sxth	r3, r2
 800f22e:	9310      	str	r3, [sp, #64]	; 0x40
 800f230:	807b      	strh	r3, [r7, #2]
 800f232:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800f234:	803d      	strh	r5, [r7, #0]
 800f236:	4555      	cmp	r5, sl
 800f238:	80be      	strh	r6, [r7, #4]
 800f23a:	80fe      	strh	r6, [r7, #6]
 800f23c:	eb04 0c03 	add.w	ip, r4, r3
 800f240:	d051      	beq.n	800f2e6 <_ZN8touchgfx7Outline10renderLineEiiii+0x79a>
 800f242:	9b01      	ldr	r3, [sp, #4]
 800f244:	eba3 070c 	sub.w	r7, r3, ip
 800f248:	443c      	add	r4, r7
 800f24a:	0164      	lsls	r4, r4, #5
 800f24c:	fb94 f8f1 	sdiv	r8, r4, r1
 800f250:	fb01 4418 	mls	r4, r1, r8, r4
 800f254:	2c00      	cmp	r4, #0
 800f256:	bfb8      	it	lt
 800f258:	f108 38ff 	addlt.w	r8, r8, #4294967295
 800f25c:	ebab 0301 	sub.w	r3, fp, r1
 800f260:	f108 0701 	add.w	r7, r8, #1
 800f264:	bfb8      	it	lt
 800f266:	1864      	addlt	r4, r4, r1
 800f268:	9309      	str	r3, [sp, #36]	; 0x24
 800f26a:	9711      	str	r7, [sp, #68]	; 0x44
 800f26c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800f26e:	f8d0 e010 	ldr.w	lr, [r0, #16]
 800f272:	191b      	adds	r3, r3, r4
 800f274:	bf58      	it	pl
 800f276:	9f11      	ldrpl	r7, [sp, #68]	; 0x44
 800f278:	f8be b004 	ldrh.w	fp, [lr, #4]
 800f27c:	9309      	str	r3, [sp, #36]	; 0x24
 800f27e:	bf48      	it	mi
 800f280:	4647      	movmi	r7, r8
 800f282:	44bb      	add	fp, r7
 800f284:	f8ae b004 	strh.w	fp, [lr, #4]
 800f288:	f8be b006 	ldrh.w	fp, [lr, #6]
 800f28c:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 800f290:	f8ae b006 	strh.w	fp, [lr, #6]
 800f294:	f8d0 e010 	ldr.w	lr, [r0, #16]
 800f298:	44bc      	add	ip, r7
 800f29a:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 800f29c:	f8be b006 	ldrh.w	fp, [lr, #6]
 800f2a0:	443d      	add	r5, r7
 800f2a2:	f8be 7004 	ldrh.w	r7, [lr, #4]
 800f2a6:	bf5c      	itt	pl
 800f2a8:	1a5b      	subpl	r3, r3, r1
 800f2aa:	9309      	strpl	r3, [sp, #36]	; 0x24
 800f2ac:	ea5b 0307 	orrs.w	r3, fp, r7
 800f2b0:	d011      	beq.n	800f2d6 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 800f2b2:	f9be b002 	ldrsh.w	fp, [lr, #2]
 800f2b6:	f1bb 0f00 	cmp.w	fp, #0
 800f2ba:	db0c      	blt.n	800f2d6 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 800f2bc:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800f2be:	45bb      	cmp	fp, r7
 800f2c0:	da09      	bge.n	800f2d6 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 800f2c2:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 800f2c6:	45bb      	cmp	fp, r7
 800f2c8:	bf3c      	itt	cc
 800f2ca:	f10e 0708 	addcc.w	r7, lr, #8
 800f2ce:	6107      	strcc	r7, [r0, #16]
 800f2d0:	f10b 0701 	add.w	r7, fp, #1
 800f2d4:	6087      	str	r7, [r0, #8]
 800f2d6:	6907      	ldr	r7, [r0, #16]
 800f2d8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f2da:	803d      	strh	r5, [r7, #0]
 800f2dc:	4555      	cmp	r5, sl
 800f2de:	807b      	strh	r3, [r7, #2]
 800f2e0:	80be      	strh	r6, [r7, #4]
 800f2e2:	80fe      	strh	r6, [r7, #6]
 800f2e4:	d1c2      	bne.n	800f26c <_ZN8touchgfx7Outline10renderLineEiiii+0x720>
 800f2e6:	9b01      	ldr	r3, [sp, #4]
 800f2e8:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 800f2ea:	eba3 0c0c 	sub.w	ip, r3, ip
 800f2ee:	6903      	ldr	r3, [r0, #16]
 800f2f0:	8899      	ldrh	r1, [r3, #4]
 800f2f2:	4461      	add	r1, ip
 800f2f4:	8099      	strh	r1, [r3, #4]
 800f2f6:	990c      	ldr	r1, [sp, #48]	; 0x30
 800f2f8:	3720      	adds	r7, #32
 800f2fa:	1a7f      	subs	r7, r7, r1
 800f2fc:	88d9      	ldrh	r1, [r3, #6]
 800f2fe:	fb0c 1c07 	mla	ip, ip, r7, r1
 800f302:	f8a3 c006 	strh.w	ip, [r3, #6]
 800f306:	e60e      	b.n	800ef26 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800f308:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800f30a:	f04f 34ff 	mov.w	r4, #4294967295
 800f30e:	940d      	str	r4, [sp, #52]	; 0x34
 800f310:	437b      	muls	r3, r7
 800f312:	4249      	negs	r1, r1
 800f314:	2400      	movs	r4, #0
 800f316:	e756      	b.n	800f1c6 <_ZN8touchgfx7Outline10renderLineEiiii+0x67a>
 800f318:	9905      	ldr	r1, [sp, #20]
 800f31a:	f8b7 8004 	ldrh.w	r8, [r7, #4]
 800f31e:	f8b7 a006 	ldrh.w	sl, [r7, #6]
 800f322:	f001 011f 	and.w	r1, r1, #31
 800f326:	ea4f 1b69 	mov.w	fp, r9, asr #5
 800f32a:	9102      	str	r1, [sp, #8]
 800f32c:	9904      	ldr	r1, [sp, #16]
 800f32e:	45f3      	cmp	fp, lr
 800f330:	f009 0c1f 	and.w	ip, r9, #31
 800f334:	eba1 0406 	sub.w	r4, r1, r6
 800f338:	d108      	bne.n	800f34c <_ZN8touchgfx7Outline10renderLineEiiii+0x800>
 800f33a:	9b02      	ldr	r3, [sp, #8]
 800f33c:	449c      	add	ip, r3
 800f33e:	44a0      	add	r8, r4
 800f340:	fb04 a40c 	mla	r4, r4, ip, sl
 800f344:	f8a7 8004 	strh.w	r8, [r7, #4]
 800f348:	80fc      	strh	r4, [r7, #6]
 800f34a:	e458      	b.n	800ebfe <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800f34c:	9905      	ldr	r1, [sp, #20]
 800f34e:	ebb1 0109 	subs.w	r1, r1, r9
 800f352:	bf5b      	ittet	pl
 800f354:	f1cc 0520 	rsbpl	r5, ip, #32
 800f358:	436c      	mulpl	r4, r5
 800f35a:	2500      	movmi	r5, #0
 800f35c:	2520      	movpl	r5, #32
 800f35e:	bf44      	itt	mi
 800f360:	fb04 f40c 	mulmi.w	r4, r4, ip
 800f364:	4249      	negmi	r1, r1
 800f366:	9501      	str	r5, [sp, #4]
 800f368:	9b01      	ldr	r3, [sp, #4]
 800f36a:	fb94 f5f1 	sdiv	r5, r4, r1
 800f36e:	fb01 4415 	mls	r4, r1, r5, r4
 800f372:	bf54      	ite	pl
 800f374:	f04f 0901 	movpl.w	r9, #1
 800f378:	f04f 39ff 	movmi.w	r9, #4294967295
 800f37c:	2c00      	cmp	r4, #0
 800f37e:	bfb8      	it	lt
 800f380:	f105 35ff 	addlt.w	r5, r5, #4294967295
 800f384:	449c      	add	ip, r3
 800f386:	44a8      	add	r8, r5
 800f388:	fb05 ac0c 	mla	ip, r5, ip, sl
 800f38c:	f8a7 8004 	strh.w	r8, [r7, #4]
 800f390:	f8a7 c006 	strh.w	ip, [r7, #6]
 800f394:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800f398:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 800f39c:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800f3a0:	bfb8      	it	lt
 800f3a2:	1864      	addlt	r4, r4, r1
 800f3a4:	ea58 0707 	orrs.w	r7, r8, r7
 800f3a8:	eb0b 0309 	add.w	r3, fp, r9
 800f3ac:	d011      	beq.n	800f3d2 <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 800f3ae:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 800f3b2:	f1b8 0f00 	cmp.w	r8, #0
 800f3b6:	db0c      	blt.n	800f3d2 <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 800f3b8:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800f3ba:	45b8      	cmp	r8, r7
 800f3bc:	da09      	bge.n	800f3d2 <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 800f3be:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
 800f3c2:	45b8      	cmp	r8, r7
 800f3c4:	bf3c      	itt	cc
 800f3c6:	f10c 0708 	addcc.w	r7, ip, #8
 800f3ca:	6107      	strcc	r7, [r0, #16]
 800f3cc:	f108 0701 	add.w	r7, r8, #1
 800f3d0:	6087      	str	r7, [r0, #8]
 800f3d2:	6907      	ldr	r7, [r0, #16]
 800f3d4:	f04f 0c00 	mov.w	ip, #0
 800f3d8:	b212      	sxth	r2, r2
 800f3da:	459e      	cmp	lr, r3
 800f3dc:	803b      	strh	r3, [r7, #0]
 800f3de:	807a      	strh	r2, [r7, #2]
 800f3e0:	f8a7 c004 	strh.w	ip, [r7, #4]
 800f3e4:	f8a7 c006 	strh.w	ip, [r7, #6]
 800f3e8:	442e      	add	r6, r5
 800f3ea:	d04d      	beq.n	800f488 <_ZN8touchgfx7Outline10renderLineEiiii+0x93c>
 800f3ec:	9f04      	ldr	r7, [sp, #16]
 800f3ee:	1bbf      	subs	r7, r7, r6
 800f3f0:	443d      	add	r5, r7
 800f3f2:	016d      	lsls	r5, r5, #5
 800f3f4:	fb95 f8f1 	sdiv	r8, r5, r1
 800f3f8:	fb01 5518 	mls	r5, r1, r8, r5
 800f3fc:	4565      	cmp	r5, ip
 800f3fe:	bfb8      	it	lt
 800f400:	f108 38ff 	addlt.w	r8, r8, #4294967295
 800f404:	f108 0701 	add.w	r7, r8, #1
 800f408:	bfb8      	it	lt
 800f40a:	186d      	addlt	r5, r5, r1
 800f40c:	1a64      	subs	r4, r4, r1
 800f40e:	9703      	str	r7, [sp, #12]
 800f410:	f04f 0a00 	mov.w	sl, #0
 800f414:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800f418:	1964      	adds	r4, r4, r5
 800f41a:	bf58      	it	pl
 800f41c:	9f03      	ldrpl	r7, [sp, #12]
 800f41e:	f8bc b004 	ldrh.w	fp, [ip, #4]
 800f422:	bf48      	it	mi
 800f424:	4647      	movmi	r7, r8
 800f426:	44bb      	add	fp, r7
 800f428:	f8ac b004 	strh.w	fp, [ip, #4]
 800f42c:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800f430:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 800f434:	f8ac b006 	strh.w	fp, [ip, #6]
 800f438:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800f43c:	443e      	add	r6, r7
 800f43e:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800f442:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800f446:	bf58      	it	pl
 800f448:	1a64      	subpl	r4, r4, r1
 800f44a:	ea5b 0707 	orrs.w	r7, fp, r7
 800f44e:	444b      	add	r3, r9
 800f450:	d011      	beq.n	800f476 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 800f452:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 800f456:	f1bb 0f00 	cmp.w	fp, #0
 800f45a:	db0c      	blt.n	800f476 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 800f45c:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800f45e:	45bb      	cmp	fp, r7
 800f460:	da09      	bge.n	800f476 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 800f462:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 800f466:	45bb      	cmp	fp, r7
 800f468:	bf3c      	itt	cc
 800f46a:	f10c 0708 	addcc.w	r7, ip, #8
 800f46e:	6107      	strcc	r7, [r0, #16]
 800f470:	f10b 0701 	add.w	r7, fp, #1
 800f474:	6087      	str	r7, [r0, #8]
 800f476:	6907      	ldr	r7, [r0, #16]
 800f478:	459e      	cmp	lr, r3
 800f47a:	803b      	strh	r3, [r7, #0]
 800f47c:	807a      	strh	r2, [r7, #2]
 800f47e:	f8a7 a004 	strh.w	sl, [r7, #4]
 800f482:	f8a7 a006 	strh.w	sl, [r7, #6]
 800f486:	d1c5      	bne.n	800f414 <_ZN8touchgfx7Outline10renderLineEiiii+0x8c8>
 800f488:	9b04      	ldr	r3, [sp, #16]
 800f48a:	1b9e      	subs	r6, r3, r6
 800f48c:	6903      	ldr	r3, [r0, #16]
 800f48e:	889a      	ldrh	r2, [r3, #4]
 800f490:	4432      	add	r2, r6
 800f492:	809a      	strh	r2, [r3, #4]
 800f494:	9a02      	ldr	r2, [sp, #8]
 800f496:	f102 0c20 	add.w	ip, r2, #32
 800f49a:	9a01      	ldr	r2, [sp, #4]
 800f49c:	ebac 0c02 	sub.w	ip, ip, r2
 800f4a0:	88da      	ldrh	r2, [r3, #6]
 800f4a2:	fb06 260c 	mla	r6, r6, ip, r2
 800f4a6:	80de      	strh	r6, [r3, #6]
 800f4a8:	f7ff bba9 	b.w	800ebfe <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>

0800f4ac <_ZN8touchgfx7Outline6lineToEii>:
 800f4ac:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800f4ae:	079b      	lsls	r3, r3, #30
 800f4b0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800f4b2:	460e      	mov	r6, r1
 800f4b4:	4615      	mov	r5, r2
 800f4b6:	d511      	bpl.n	800f4dc <_ZN8touchgfx7Outline6lineToEii+0x30>
 800f4b8:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 800f4bc:	ea86 0701 	eor.w	r7, r6, r1
 800f4c0:	ea85 0302 	eor.w	r3, r5, r2
 800f4c4:	433b      	orrs	r3, r7
 800f4c6:	d009      	beq.n	800f4dc <_ZN8touchgfx7Outline6lineToEii+0x30>
 800f4c8:	4633      	mov	r3, r6
 800f4ca:	9500      	str	r5, [sp, #0]
 800f4cc:	f7ff fb3e 	bl	800eb4c <_ZN8touchgfx7Outline10renderLineEiiii>
 800f4d0:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800f4d2:	e9c0 6505 	strd	r6, r5, [r0, #20]
 800f4d6:	f043 0301 	orr.w	r3, r3, #1
 800f4da:	6243      	str	r3, [r0, #36]	; 0x24
 800f4dc:	b003      	add	sp, #12
 800f4de:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800f4e0 <_ZN8touchgfx7Outline6moveToEii>:
 800f4e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f4e2:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800f4e4:	4615      	mov	r5, r2
 800f4e6:	079a      	lsls	r2, r3, #30
 800f4e8:	4604      	mov	r4, r0
 800f4ea:	460e      	mov	r6, r1
 800f4ec:	d401      	bmi.n	800f4f2 <_ZN8touchgfx7Outline6moveToEii+0x12>
 800f4ee:	f7ff faf9 	bl	800eae4 <_ZN8touchgfx7Outline5resetEv>
 800f4f2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800f4f4:	07db      	lsls	r3, r3, #31
 800f4f6:	d504      	bpl.n	800f502 <_ZN8touchgfx7Outline6moveToEii+0x22>
 800f4f8:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
 800f4fc:	4620      	mov	r0, r4
 800f4fe:	f7ff ffd5 	bl	800f4ac <_ZN8touchgfx7Outline6lineToEii>
 800f502:	6923      	ldr	r3, [r4, #16]
 800f504:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f508:	1170      	asrs	r0, r6, #5
 800f50a:	4290      	cmp	r0, r2
 800f50c:	ea4f 1165 	mov.w	r1, r5, asr #5
 800f510:	d103      	bne.n	800f51a <_ZN8touchgfx7Outline6moveToEii+0x3a>
 800f512:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800f516:	4291      	cmp	r1, r2
 800f518:	d01a      	beq.n	800f550 <_ZN8touchgfx7Outline6moveToEii+0x70>
 800f51a:	88df      	ldrh	r7, [r3, #6]
 800f51c:	889a      	ldrh	r2, [r3, #4]
 800f51e:	433a      	orrs	r2, r7
 800f520:	d010      	beq.n	800f544 <_ZN8touchgfx7Outline6moveToEii+0x64>
 800f522:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800f526:	2a00      	cmp	r2, #0
 800f528:	db0c      	blt.n	800f544 <_ZN8touchgfx7Outline6moveToEii+0x64>
 800f52a:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 800f52c:	42ba      	cmp	r2, r7
 800f52e:	da09      	bge.n	800f544 <_ZN8touchgfx7Outline6moveToEii+0x64>
 800f530:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
 800f534:	42ba      	cmp	r2, r7
 800f536:	bf38      	it	cc
 800f538:	3308      	addcc	r3, #8
 800f53a:	f102 0201 	add.w	r2, r2, #1
 800f53e:	bf38      	it	cc
 800f540:	6123      	strcc	r3, [r4, #16]
 800f542:	60a2      	str	r2, [r4, #8]
 800f544:	6923      	ldr	r3, [r4, #16]
 800f546:	2200      	movs	r2, #0
 800f548:	8018      	strh	r0, [r3, #0]
 800f54a:	8059      	strh	r1, [r3, #2]
 800f54c:	809a      	strh	r2, [r3, #4]
 800f54e:	80da      	strh	r2, [r3, #6]
 800f550:	6166      	str	r6, [r4, #20]
 800f552:	e9c4 5606 	strd	r5, r6, [r4, #24]
 800f556:	6225      	str	r5, [r4, #32]
 800f558:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800f55a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 800f55a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f55e:	b0d0      	sub	sp, #320	; 0x140
 800f560:	466c      	mov	r4, sp
 800f562:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 800f566:	4627      	mov	r7, r4
 800f568:	1a0d      	subs	r5, r1, r0
 800f56a:	2d48      	cmp	r5, #72	; 0x48
 800f56c:	f100 0308 	add.w	r3, r0, #8
 800f570:	f340 80d5 	ble.w	800f71e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 800f574:	112d      	asrs	r5, r5, #4
 800f576:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
 800f57a:	f9b0 9000 	ldrsh.w	r9, [r0]
 800f57e:	6816      	ldr	r6, [r2, #0]
 800f580:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
 800f584:	6006      	str	r6, [r0, #0]
 800f586:	6856      	ldr	r6, [r2, #4]
 800f588:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 800f58c:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 800f590:	6046      	str	r6, [r0, #4]
 800f592:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 800f596:	f8a2 8002 	strh.w	r8, [r2, #2]
 800f59a:	f8a2 e004 	strh.w	lr, [r2, #4]
 800f59e:	f8a2 c006 	strh.w	ip, [r2, #6]
 800f5a2:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 800f5a6:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
 800f5aa:	4565      	cmp	r5, ip
 800f5ac:	f1a1 0208 	sub.w	r2, r1, #8
 800f5b0:	db06      	blt.n	800f5c0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
 800f5b2:	d119      	bne.n	800f5e8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 800f5b4:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 800f5b8:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 800f5bc:	42ae      	cmp	r6, r5
 800f5be:	dd13      	ble.n	800f5e8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 800f5c0:	460e      	mov	r6, r1
 800f5c2:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
 800f5c6:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 800f5ca:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
 800f5ce:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
 800f5d2:	601d      	str	r5, [r3, #0]
 800f5d4:	6875      	ldr	r5, [r6, #4]
 800f5d6:	605d      	str	r5, [r3, #4]
 800f5d8:	f821 9c08 	strh.w	r9, [r1, #-8]
 800f5dc:	f821 cc06 	strh.w	ip, [r1, #-6]
 800f5e0:	f821 8c04 	strh.w	r8, [r1, #-4]
 800f5e4:	f821 ec02 	strh.w	lr, [r1, #-2]
 800f5e8:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800f5ec:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
 800f5f0:	42ae      	cmp	r6, r5
 800f5f2:	db06      	blt.n	800f602 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
 800f5f4:	d116      	bne.n	800f624 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 800f5f6:	f9b0 c000 	ldrsh.w	ip, [r0]
 800f5fa:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 800f5fe:	45ac      	cmp	ip, r5
 800f600:	da10      	bge.n	800f624 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 800f602:	681d      	ldr	r5, [r3, #0]
 800f604:	f9b0 8000 	ldrsh.w	r8, [r0]
 800f608:	6005      	str	r5, [r0, #0]
 800f60a:	685d      	ldr	r5, [r3, #4]
 800f60c:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 800f610:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 800f614:	f8a0 8008 	strh.w	r8, [r0, #8]
 800f618:	6045      	str	r5, [r0, #4]
 800f61a:	8146      	strh	r6, [r0, #10]
 800f61c:	f8a0 e00c 	strh.w	lr, [r0, #12]
 800f620:	f8a0 c00e 	strh.w	ip, [r0, #14]
 800f624:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 800f628:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 800f62c:	4565      	cmp	r5, ip
 800f62e:	db06      	blt.n	800f63e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
 800f630:	d119      	bne.n	800f666 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800f632:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
 800f636:	f9b0 5000 	ldrsh.w	r5, [r0]
 800f63a:	42ae      	cmp	r6, r5
 800f63c:	da13      	bge.n	800f666 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800f63e:	460e      	mov	r6, r1
 800f640:	f9b0 9000 	ldrsh.w	r9, [r0]
 800f644:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 800f648:	6005      	str	r5, [r0, #0]
 800f64a:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 800f64e:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
 800f652:	6875      	ldr	r5, [r6, #4]
 800f654:	6045      	str	r5, [r0, #4]
 800f656:	f821 9c08 	strh.w	r9, [r1, #-8]
 800f65a:	f821 cc06 	strh.w	ip, [r1, #-6]
 800f65e:	f821 8c04 	strh.w	r8, [r1, #-4]
 800f662:	f821 ec02 	strh.w	lr, [r1, #-2]
 800f666:	3308      	adds	r3, #8
 800f668:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 800f66c:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 800f670:	45e6      	cmp	lr, ip
 800f672:	dbf8      	blt.n	800f666 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800f674:	d105      	bne.n	800f682 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 800f676:	f9b3 6000 	ldrsh.w	r6, [r3]
 800f67a:	f9b0 5000 	ldrsh.w	r5, [r0]
 800f67e:	42ae      	cmp	r6, r5
 800f680:	dbf1      	blt.n	800f666 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800f682:	4615      	mov	r5, r2
 800f684:	3a08      	subs	r2, #8
 800f686:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
 800f68a:	45b4      	cmp	ip, r6
 800f68c:	dbf9      	blt.n	800f682 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 800f68e:	d105      	bne.n	800f69c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
 800f690:	f9b0 8000 	ldrsh.w	r8, [r0]
 800f694:	f9b2 6000 	ldrsh.w	r6, [r2]
 800f698:	45b0      	cmp	r8, r6
 800f69a:	dbf2      	blt.n	800f682 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 800f69c:	4293      	cmp	r3, r2
 800f69e:	f1a5 0608 	sub.w	r6, r5, #8
 800f6a2:	d816      	bhi.n	800f6d2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
 800f6a4:	f8d6 c000 	ldr.w	ip, [r6]
 800f6a8:	f9b3 a000 	ldrsh.w	sl, [r3]
 800f6ac:	f8c3 c000 	str.w	ip, [r3]
 800f6b0:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
 800f6b4:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
 800f6b8:	f8d6 c004 	ldr.w	ip, [r6, #4]
 800f6bc:	f8c3 c004 	str.w	ip, [r3, #4]
 800f6c0:	f825 ac08 	strh.w	sl, [r5, #-8]
 800f6c4:	f825 ec06 	strh.w	lr, [r5, #-6]
 800f6c8:	f825 9c04 	strh.w	r9, [r5, #-4]
 800f6cc:	f825 8c02 	strh.w	r8, [r5, #-2]
 800f6d0:	e7c9      	b.n	800f666 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800f6d2:	f8d6 e000 	ldr.w	lr, [r6]
 800f6d6:	f9b0 a000 	ldrsh.w	sl, [r0]
 800f6da:	f8c0 e000 	str.w	lr, [r0]
 800f6de:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
 800f6e2:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
 800f6e6:	f8d6 e004 	ldr.w	lr, [r6, #4]
 800f6ea:	f8c0 e004 	str.w	lr, [r0, #4]
 800f6ee:	f825 ac08 	strh.w	sl, [r5, #-8]
 800f6f2:	f825 cc06 	strh.w	ip, [r5, #-6]
 800f6f6:	f825 9c04 	strh.w	r9, [r5, #-4]
 800f6fa:	f825 8c02 	strh.w	r8, [r5, #-2]
 800f6fe:	1acd      	subs	r5, r1, r3
 800f700:	1a16      	subs	r6, r2, r0
 800f702:	10ed      	asrs	r5, r5, #3
 800f704:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
 800f708:	bfb5      	itete	lt
 800f70a:	e9c4 0200 	strdlt	r0, r2, [r4]
 800f70e:	e9c4 3100 	strdge	r3, r1, [r4]
 800f712:	460a      	movlt	r2, r1
 800f714:	4603      	movge	r3, r0
 800f716:	3408      	adds	r4, #8
 800f718:	4618      	mov	r0, r3
 800f71a:	4611      	mov	r1, r2
 800f71c:	e724      	b.n	800f568 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 800f71e:	4299      	cmp	r1, r3
 800f720:	d928      	bls.n	800f774 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x21a>
 800f722:	f1a3 0210 	sub.w	r2, r3, #16
 800f726:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
 800f72a:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
 800f72e:	45ac      	cmp	ip, r5
 800f730:	db06      	blt.n	800f740 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
 800f732:	d11d      	bne.n	800f770 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 800f734:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
 800f738:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
 800f73c:	42ae      	cmp	r6, r5
 800f73e:	da17      	bge.n	800f770 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 800f740:	4615      	mov	r5, r2
 800f742:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
 800f746:	f855 6f08 	ldr.w	r6, [r5, #8]!
 800f74a:	6116      	str	r6, [r2, #16]
 800f74c:	686e      	ldr	r6, [r5, #4]
 800f74e:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
 800f752:	f9b2 e016 	ldrsh.w	lr, [r2, #22]
 800f756:	f8a2 9008 	strh.w	r9, [r2, #8]
 800f75a:	42a8      	cmp	r0, r5
 800f75c:	6156      	str	r6, [r2, #20]
 800f75e:	f8a2 c00a 	strh.w	ip, [r2, #10]
 800f762:	f8a2 800c 	strh.w	r8, [r2, #12]
 800f766:	f8a2 e00e 	strh.w	lr, [r2, #14]
 800f76a:	f1a2 0208 	sub.w	r2, r2, #8
 800f76e:	d1da      	bne.n	800f726 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
 800f770:	3308      	adds	r3, #8
 800f772:	e7d4      	b.n	800f71e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 800f774:	42bc      	cmp	r4, r7
 800f776:	d903      	bls.n	800f780 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x226>
 800f778:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 800f77c:	3c08      	subs	r4, #8
 800f77e:	e6f3      	b.n	800f568 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 800f780:	b050      	add	sp, #320	; 0x140
 800f782:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0800f786 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
 800f786:	b510      	push	{r4, lr}
 800f788:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800f78a:	07da      	lsls	r2, r3, #31
 800f78c:	4604      	mov	r4, r0
 800f78e:	d507      	bpl.n	800f7a0 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
 800f790:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 800f794:	f7ff fe8a 	bl	800f4ac <_ZN8touchgfx7Outline6lineToEii>
 800f798:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800f79a:	f023 0301 	bic.w	r3, r3, #1
 800f79e:	6243      	str	r3, [r0, #36]	; 0x24
 800f7a0:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800f7a2:	079b      	lsls	r3, r3, #30
 800f7a4:	d521      	bpl.n	800f7ea <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
 800f7a6:	6923      	ldr	r3, [r4, #16]
 800f7a8:	88d9      	ldrh	r1, [r3, #6]
 800f7aa:	889a      	ldrh	r2, [r3, #4]
 800f7ac:	430a      	orrs	r2, r1
 800f7ae:	d010      	beq.n	800f7d2 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 800f7b0:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800f7b4:	2a00      	cmp	r2, #0
 800f7b6:	db0c      	blt.n	800f7d2 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 800f7b8:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800f7ba:	428a      	cmp	r2, r1
 800f7bc:	da09      	bge.n	800f7d2 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 800f7be:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 800f7c2:	4291      	cmp	r1, r2
 800f7c4:	bf88      	it	hi
 800f7c6:	3308      	addhi	r3, #8
 800f7c8:	f102 0201 	add.w	r2, r2, #1
 800f7cc:	bf88      	it	hi
 800f7ce:	6123      	strhi	r3, [r4, #16]
 800f7d0:	60a2      	str	r2, [r4, #8]
 800f7d2:	68a1      	ldr	r1, [r4, #8]
 800f7d4:	b129      	cbz	r1, 800f7e2 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 800f7d6:	6863      	ldr	r3, [r4, #4]
 800f7d8:	4299      	cmp	r1, r3
 800f7da:	d802      	bhi.n	800f7e2 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 800f7dc:	68e0      	ldr	r0, [r4, #12]
 800f7de:	f7ff febc 	bl	800f55a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 800f7e2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800f7e4:	f023 0302 	bic.w	r3, r3, #2
 800f7e8:	6263      	str	r3, [r4, #36]	; 0x24
 800f7ea:	68e0      	ldr	r0, [r4, #12]
 800f7ec:	bd10      	pop	{r4, pc}
	...

0800f7f0 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
 800f7f0:	4b02      	ldr	r3, [pc, #8]	; (800f7fc <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
 800f7f2:	6018      	str	r0, [r3, #0]
 800f7f4:	4b02      	ldr	r3, [pc, #8]	; (800f800 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
 800f7f6:	6019      	str	r1, [r3, #0]
 800f7f8:	4770      	bx	lr
 800f7fa:	bf00      	nop
 800f7fc:	2001560c 	.word	0x2001560c
 800f800:	20015610 	.word	0x20015610

0800f804 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 800f804:	4b01      	ldr	r3, [pc, #4]	; (800f80c <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 800f806:	6818      	ldr	r0, [r3, #0]
 800f808:	4770      	bx	lr
 800f80a:	bf00      	nop
 800f80c:	2001560c 	.word	0x2001560c

0800f810 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 800f810:	4b01      	ldr	r3, [pc, #4]	; (800f818 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 800f812:	6818      	ldr	r0, [r3, #0]
 800f814:	4770      	bx	lr
 800f816:	bf00      	nop
 800f818:	20015610 	.word	0x20015610

0800f81c <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 800f81c:	b510      	push	{r4, lr}
 800f81e:	6803      	ldr	r3, [r0, #0]
 800f820:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f822:	460c      	mov	r4, r1
 800f824:	4798      	blx	r3
 800f826:	1b03      	subs	r3, r0, r4
 800f828:	4258      	negs	r0, r3
 800f82a:	4158      	adcs	r0, r3
 800f82c:	bd10      	pop	{r4, pc}
	...

0800f830 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 800f830:	4b01      	ldr	r3, [pc, #4]	; (800f838 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 800f832:	6019      	str	r1, [r3, #0]
 800f834:	4770      	bx	lr
 800f836:	bf00      	nop
 800f838:	20015614 	.word	0x20015614

0800f83c <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800f83c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f840:	4696      	mov	lr, r2
 800f842:	4605      	mov	r5, r0
 800f844:	4614      	mov	r4, r2
 800f846:	460e      	mov	r6, r1
 800f848:	461f      	mov	r7, r3
 800f84a:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800f84e:	b097      	sub	sp, #92	; 0x5c
 800f850:	f10d 0c1c 	add.w	ip, sp, #28
 800f854:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800f858:	f8de 3000 	ldr.w	r3, [lr]
 800f85c:	f8cc 3000 	str.w	r3, [ip]
 800f860:	f104 0e14 	add.w	lr, r4, #20
 800f864:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800f868:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 800f86c:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800f870:	f8de 3000 	ldr.w	r3, [lr]
 800f874:	f8cc 3000 	str.w	r3, [ip]
 800f878:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 800f87c:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800f880:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 800f884:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800f888:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 800f88c:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 800f890:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 800f894:	f8de 3000 	ldr.w	r3, [lr]
 800f898:	f8cc 3000 	str.w	r3, [ip]
 800f89c:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800f89e:	682b      	ldr	r3, [r5, #0]
 800f8a0:	9201      	str	r2, [sp, #4]
 800f8a2:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800f8a6:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800f8a8:	9200      	str	r2, [sp, #0]
 800f8aa:	f8cd 8008 	str.w	r8, [sp, #8]
 800f8ae:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
 800f8b2:	aa07      	add	r2, sp, #28
 800f8b4:	463b      	mov	r3, r7
 800f8b6:	4631      	mov	r1, r6
 800f8b8:	4628      	mov	r0, r5
 800f8ba:	47d8      	blx	fp
 800f8bc:	46a6      	mov	lr, r4
 800f8be:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800f8c2:	f10d 0c1c 	add.w	ip, sp, #28
 800f8c6:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800f8ca:	f8de 3000 	ldr.w	r3, [lr]
 800f8ce:	f8cc 3000 	str.w	r3, [ip]
 800f8d2:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 800f8d6:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800f8da:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 800f8de:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800f8e2:	343c      	adds	r4, #60	; 0x3c
 800f8e4:	f8de 3000 	ldr.w	r3, [lr]
 800f8e8:	f8cc 3000 	str.w	r3, [ip]
 800f8ec:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800f8ee:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 800f8f2:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800f8f6:	6823      	ldr	r3, [r4, #0]
 800f8f8:	f8cc 3000 	str.w	r3, [ip]
 800f8fc:	682b      	ldr	r3, [r5, #0]
 800f8fe:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800f902:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800f904:	9201      	str	r2, [sp, #4]
 800f906:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800f908:	9200      	str	r2, [sp, #0]
 800f90a:	f8cd 8008 	str.w	r8, [sp, #8]
 800f90e:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 800f910:	aa07      	add	r2, sp, #28
 800f912:	463b      	mov	r3, r7
 800f914:	4631      	mov	r1, r6
 800f916:	4628      	mov	r0, r5
 800f918:	47a0      	blx	r4
 800f91a:	b017      	add	sp, #92	; 0x5c
 800f91c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800f920 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 800f920:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f924:	b08d      	sub	sp, #52	; 0x34
 800f926:	4688      	mov	r8, r1
 800f928:	9916      	ldr	r1, [sp, #88]	; 0x58
 800f92a:	f8d3 c000 	ldr.w	ip, [r3]
 800f92e:	680f      	ldr	r7, [r1, #0]
 800f930:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 800f934:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 800f938:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 800f93c:	edd3 6a07 	vldr	s13, [r3, #28]
 800f940:	9918      	ldr	r1, [sp, #96]	; 0x60
 800f942:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 800f946:	f9b1 9000 	ldrsh.w	r9, [r1]
 800f94a:	f9ba 1000 	ldrsh.w	r1, [sl]
 800f94e:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 800f952:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 800f956:	eba7 070c 	sub.w	r7, r7, ip
 800f95a:	42bc      	cmp	r4, r7
 800f95c:	bfa8      	it	ge
 800f95e:	463c      	movge	r4, r7
 800f960:	ee07 4a90 	vmov	s15, r4
 800f964:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 800f968:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 800f96c:	ee25 4a04 	vmul.f32	s8, s10, s8
 800f970:	ee65 4a24 	vmul.f32	s9, s10, s9
 800f974:	ee25 5a27 	vmul.f32	s10, s10, s15
 800f978:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 800f97c:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800f980:	eb09 0e0c 	add.w	lr, r9, ip
 800f984:	4571      	cmp	r1, lr
 800f986:	ee71 0aa4 	vadd.f32	s1, s3, s9
 800f98a:	ee32 1a05 	vadd.f32	s2, s4, s10
 800f98e:	ee36 0a84 	vadd.f32	s0, s13, s8
 800f992:	ee61 1a87 	vmul.f32	s3, s3, s14
 800f996:	ee22 2a07 	vmul.f32	s4, s4, s14
 800f99a:	f340 808d 	ble.w	800fab8 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 800f99e:	eba1 060e 	sub.w	r6, r1, lr
 800f9a2:	fb96 f5f4 	sdiv	r5, r6, r4
 800f9a6:	ee07 5a10 	vmov	s14, r5
 800f9aa:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800f9ae:	2d00      	cmp	r5, #0
 800f9b0:	fb04 6615 	mls	r6, r4, r5, r6
 800f9b4:	eea7 0a04 	vfma.f32	s0, s14, s8
 800f9b8:	eee7 0a24 	vfma.f32	s1, s14, s9
 800f9bc:	eea7 1a05 	vfma.f32	s2, s14, s10
 800f9c0:	dd13      	ble.n	800f9ea <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 800f9c2:	ee70 6a44 	vsub.f32	s13, s0, s8
 800f9c6:	ee70 1ae4 	vsub.f32	s3, s1, s9
 800f9ca:	eef5 6a40 	vcmp.f32	s13, #0.0
 800f9ce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f9d2:	bf18      	it	ne
 800f9d4:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 800f9d8:	ee31 2a45 	vsub.f32	s4, s2, s10
 800f9dc:	bf08      	it	eq
 800f9de:	eeb0 7a67 	vmoveq.f32	s14, s15
 800f9e2:	ee61 1a87 	vmul.f32	s3, s3, s14
 800f9e6:	ee22 2a07 	vmul.f32	s4, s4, s14
 800f9ea:	fb05 f204 	mul.w	r2, r5, r4
 800f9ee:	1abf      	subs	r7, r7, r2
 800f9f0:	4494      	add	ip, r2
 800f9f2:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 800f9f6:	4411      	add	r1, r2
 800f9f8:	eb09 020c 	add.w	r2, r9, ip
 800f9fc:	443a      	add	r2, r7
 800f9fe:	b209      	sxth	r1, r1
 800fa00:	428a      	cmp	r2, r1
 800fa02:	bfc4      	itt	gt
 800fa04:	eba1 0209 	subgt.w	r2, r1, r9
 800fa08:	eba2 070c 	subgt.w	r7, r2, ip
 800fa0c:	2f00      	cmp	r7, #0
 800fa0e:	dd50      	ble.n	800fab2 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 800fa10:	fb97 f1f4 	sdiv	r1, r7, r4
 800fa14:	fb04 7211 	mls	r2, r4, r1, r7
 800fa18:	b90a      	cbnz	r2, 800fa1e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 800fa1a:	3901      	subs	r1, #1
 800fa1c:	4622      	mov	r2, r4
 800fa1e:	eec7 3a80 	vdiv.f32	s7, s15, s0
 800fa22:	6840      	ldr	r0, [r0, #4]
 800fa24:	900b      	str	r0, [sp, #44]	; 0x2c
 800fa26:	f8d0 a000 	ldr.w	sl, [r0]
 800fa2a:	9817      	ldr	r0, [sp, #92]	; 0x5c
 800fa2c:	9008      	str	r0, [sp, #32]
 800fa2e:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 800fa32:	9818      	ldr	r0, [sp, #96]	; 0x60
 800fa34:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 800fa38:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 800fa3c:	695b      	ldr	r3, [r3, #20]
 800fa3e:	980b      	ldr	r0, [sp, #44]	; 0x2c
 800fa40:	445b      	add	r3, fp
 800fa42:	eef0 6a42 	vmov.f32	s13, s4
 800fa46:	ee60 2aa3 	vmul.f32	s5, s1, s7
 800fa4a:	ee21 3a23 	vmul.f32	s6, s2, s7
 800fa4e:	ee72 7ae1 	vsub.f32	s15, s5, s3
 800fa52:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800fa56:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800fa5a:	9307      	str	r3, [sp, #28]
 800fa5c:	ee17 7a90 	vmov	r7, s15
 800fa60:	ee73 7a42 	vsub.f32	s15, s6, s4
 800fa64:	eeb0 7a61 	vmov.f32	s14, s3
 800fa68:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800fa6c:	ee16 3a90 	vmov	r3, s13
 800fa70:	fb97 f7f4 	sdiv	r7, r7, r4
 800fa74:	ee17 ca90 	vmov	ip, s15
 800fa78:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 800fa7c:	fb9c fcf4 	sdiv	ip, ip, r4
 800fa80:	fb0c 3306 	mla	r3, ip, r6, r3
 800fa84:	9302      	str	r3, [sp, #8]
 800fa86:	ee17 3a10 	vmov	r3, s14
 800fa8a:	44b6      	add	lr, r6
 800fa8c:	fb04 e505 	mla	r5, r4, r5, lr
 800fa90:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 800fa94:	fb07 3706 	mla	r7, r7, r6, r3
 800fa98:	e9cd 8505 	strd	r8, r5, [sp, #20]
 800fa9c:	e9cd 4700 	strd	r4, r7, [sp]
 800faa0:	2900      	cmp	r1, #0
 800faa2:	bfcc      	ite	gt
 800faa4:	46a1      	movgt	r9, r4
 800faa6:	4691      	movle	r9, r2
 800faa8:	eba9 0306 	sub.w	r3, r9, r6
 800faac:	f8da 4008 	ldr.w	r4, [sl, #8]
 800fab0:	47a0      	blx	r4
 800fab2:	b00d      	add	sp, #52	; 0x34
 800fab4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fab8:	2500      	movs	r5, #0
 800faba:	462e      	mov	r6, r5
 800fabc:	e799      	b.n	800f9f2 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

0800fac0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800fac0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fac4:	b0db      	sub	sp, #364	; 0x16c
 800fac6:	461d      	mov	r5, r3
 800fac8:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 800facc:	930a      	str	r3, [sp, #40]	; 0x28
 800face:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 800fad2:	930b      	str	r3, [sp, #44]	; 0x2c
 800fad4:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 800fad8:	9310      	str	r3, [sp, #64]	; 0x40
 800fada:	6803      	ldr	r3, [r0, #0]
 800fadc:	910f      	str	r1, [sp, #60]	; 0x3c
 800fade:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 800fae0:	9009      	str	r0, [sp, #36]	; 0x24
 800fae2:	4614      	mov	r4, r2
 800fae4:	4629      	mov	r1, r5
 800fae6:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 800faea:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 800faee:	47b8      	blx	r7
 800faf0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800faf2:	6058      	str	r0, [r3, #4]
 800faf4:	2800      	cmp	r0, #0
 800faf6:	f000 83a1 	beq.w	801023c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800fafa:	682b      	ldr	r3, [r5, #0]
 800fafc:	9314      	str	r3, [sp, #80]	; 0x50
 800fafe:	686b      	ldr	r3, [r5, #4]
 800fb00:	9315      	str	r3, [sp, #84]	; 0x54
 800fb02:	4bc4      	ldr	r3, [pc, #784]	; (800fe14 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 800fb04:	ed94 7a02 	vldr	s14, [r4, #8]
 800fb08:	7819      	ldrb	r1, [r3, #0]
 800fb0a:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 800fb0e:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 800fb12:	2900      	cmp	r1, #0
 800fb14:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800fb18:	bf16      	itet	ne
 800fb1a:	4619      	movne	r1, r3
 800fb1c:	4611      	moveq	r1, r2
 800fb1e:	4613      	movne	r3, r2
 800fb20:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800fb24:	9116      	str	r1, [sp, #88]	; 0x58
 800fb26:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 800fb2a:	f240 8387 	bls.w	801023c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800fb2e:	ed94 7a07 	vldr	s14, [r4, #28]
 800fb32:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800fb36:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800fb3a:	f240 837f 	bls.w	801023c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800fb3e:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 800fb42:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800fb46:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800fb4a:	f240 8377 	bls.w	801023c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800fb4e:	6822      	ldr	r2, [r4, #0]
 800fb50:	4bb1      	ldr	r3, [pc, #708]	; (800fe18 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 800fb52:	429a      	cmp	r2, r3
 800fb54:	f2c0 8372 	blt.w	801023c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800fb58:	49b0      	ldr	r1, [pc, #704]	; (800fe1c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 800fb5a:	6963      	ldr	r3, [r4, #20]
 800fb5c:	428a      	cmp	r2, r1
 800fb5e:	f300 836d 	bgt.w	801023c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800fb62:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 800fb66:	48ae      	ldr	r0, [pc, #696]	; (800fe20 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 800fb68:	33ff      	adds	r3, #255	; 0xff
 800fb6a:	4283      	cmp	r3, r0
 800fb6c:	f200 8366 	bhi.w	801023c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800fb70:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800fb72:	4dac      	ldr	r5, [pc, #688]	; (800fe24 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 800fb74:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 800fb78:	33ff      	adds	r3, #255	; 0xff
 800fb7a:	42ab      	cmp	r3, r5
 800fb7c:	f200 835e 	bhi.w	801023c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800fb80:	6862      	ldr	r2, [r4, #4]
 800fb82:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 800fb86:	33ff      	adds	r3, #255	; 0xff
 800fb88:	4283      	cmp	r3, r0
 800fb8a:	f200 8357 	bhi.w	801023c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800fb8e:	69a1      	ldr	r1, [r4, #24]
 800fb90:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 800fb94:	33ff      	adds	r3, #255	; 0xff
 800fb96:	4283      	cmp	r3, r0
 800fb98:	f200 8350 	bhi.w	801023c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800fb9c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800fb9e:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 800fba2:	30ff      	adds	r0, #255	; 0xff
 800fba4:	42a8      	cmp	r0, r5
 800fba6:	f200 8349 	bhi.w	801023c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800fbaa:	428a      	cmp	r2, r1
 800fbac:	f280 8110 	bge.w	800fdd0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 800fbb0:	429a      	cmp	r2, r3
 800fbb2:	f300 8119 	bgt.w	800fde8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 800fbb6:	4299      	cmp	r1, r3
 800fbb8:	f280 811d 	bge.w	800fdf6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 800fbbc:	2502      	movs	r5, #2
 800fbbe:	2701      	movs	r7, #1
 800fbc0:	46a9      	mov	r9, r5
 800fbc2:	46b8      	mov	r8, r7
 800fbc4:	f04f 0a00 	mov.w	sl, #0
 800fbc8:	4621      	mov	r1, r4
 800fbca:	a849      	add	r0, sp, #292	; 0x124
 800fbcc:	f003 fcfe 	bl	80135cc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 800fbd0:	4622      	mov	r2, r4
 800fbd2:	4653      	mov	r3, sl
 800fbd4:	a949      	add	r1, sp, #292	; 0x124
 800fbd6:	f8cd 9000 	str.w	r9, [sp]
 800fbda:	a819      	add	r0, sp, #100	; 0x64
 800fbdc:	f003 fe26 	bl	801382c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800fbe0:	4622      	mov	r2, r4
 800fbe2:	4653      	mov	r3, sl
 800fbe4:	a949      	add	r1, sp, #292	; 0x124
 800fbe6:	f8cd 8000 	str.w	r8, [sp]
 800fbea:	a829      	add	r0, sp, #164	; 0xa4
 800fbec:	f003 fe1e 	bl	801382c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800fbf0:	4643      	mov	r3, r8
 800fbf2:	4622      	mov	r2, r4
 800fbf4:	a949      	add	r1, sp, #292	; 0x124
 800fbf6:	f8cd 9000 	str.w	r9, [sp]
 800fbfa:	a839      	add	r0, sp, #228	; 0xe4
 800fbfc:	f003 fe16 	bl	801382c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800fc00:	42af      	cmp	r7, r5
 800fc02:	bfb5      	itete	lt
 800fc04:	2300      	movlt	r3, #0
 800fc06:	2301      	movge	r3, #1
 800fc08:	930e      	strlt	r3, [sp, #56]	; 0x38
 800fc0a:	930e      	strge	r3, [sp, #56]	; 0x38
 800fc0c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800fc0e:	e893 0003 	ldmia.w	r3, {r0, r1}
 800fc12:	af12      	add	r7, sp, #72	; 0x48
 800fc14:	bfb9      	ittee	lt
 800fc16:	ad29      	addlt	r5, sp, #164	; 0xa4
 800fc18:	ac19      	addlt	r4, sp, #100	; 0x64
 800fc1a:	ad19      	addge	r5, sp, #100	; 0x64
 800fc1c:	ac29      	addge	r4, sp, #164	; 0xa4
 800fc1e:	e887 0003 	stmia.w	r7, {r0, r1}
 800fc22:	b928      	cbnz	r0, 800fc30 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 800fc24:	4b80      	ldr	r3, [pc, #512]	; (800fe28 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 800fc26:	6818      	ldr	r0, [r3, #0]
 800fc28:	6803      	ldr	r3, [r0, #0]
 800fc2a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800fc2c:	4798      	blx	r3
 800fc2e:	6038      	str	r0, [r7, #0]
 800fc30:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800fc32:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800fc36:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800fc3a:	930c      	str	r3, [sp, #48]	; 0x30
 800fc3c:	990c      	ldr	r1, [sp, #48]	; 0x30
 800fc3e:	6963      	ldr	r3, [r4, #20]
 800fc40:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 800fc42:	440b      	add	r3, r1
 800fc44:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800fc48:	4408      	add	r0, r1
 800fc4a:	b200      	sxth	r0, r0
 800fc4c:	4283      	cmp	r3, r0
 800fc4e:	900d      	str	r0, [sp, #52]	; 0x34
 800fc50:	f280 80dd 	bge.w	800fe0e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 800fc54:	428b      	cmp	r3, r1
 800fc56:	da08      	bge.n	800fc6a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800fc58:	2a00      	cmp	r2, #0
 800fc5a:	dd06      	ble.n	800fc6a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800fc5c:	1acb      	subs	r3, r1, r3
 800fc5e:	429a      	cmp	r2, r3
 800fc60:	f2c0 80e4 	blt.w	800fe2c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 800fc64:	2b00      	cmp	r3, #0
 800fc66:	f300 80e2 	bgt.w	800fe2e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 800fc6a:	6967      	ldr	r7, [r4, #20]
 800fc6c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800fc6e:	443b      	add	r3, r7
 800fc70:	461f      	mov	r7, r3
 800fc72:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800fc74:	1bdf      	subs	r7, r3, r7
 800fc76:	4297      	cmp	r7, r2
 800fc78:	bfa8      	it	ge
 800fc7a:	4617      	movge	r7, r2
 800fc7c:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 800fc80:	2f00      	cmp	r7, #0
 800fc82:	f340 8166 	ble.w	800ff52 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 800fc86:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800fc88:	6829      	ldr	r1, [r5, #0]
 800fc8a:	f9b3 2000 	ldrsh.w	r2, [r3]
 800fc8e:	f9bb 3000 	ldrsh.w	r3, [fp]
 800fc92:	6820      	ldr	r0, [r4, #0]
 800fc94:	4411      	add	r1, r2
 800fc96:	4299      	cmp	r1, r3
 800fc98:	dd1a      	ble.n	800fcd0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800fc9a:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800fc9e:	440b      	add	r3, r1
 800fca0:	4402      	add	r2, r0
 800fca2:	b21b      	sxth	r3, r3
 800fca4:	429a      	cmp	r2, r3
 800fca6:	dc13      	bgt.n	800fcd0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800fca8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800fcaa:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800fcac:	681b      	ldr	r3, [r3, #0]
 800fcae:	9206      	str	r2, [sp, #24]
 800fcb0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800fcb2:	9205      	str	r2, [sp, #20]
 800fcb4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800fcb6:	9500      	str	r5, [sp, #0]
 800fcb8:	e9cd b203 	strd	fp, r2, [sp, #12]
 800fcbc:	9a64      	ldr	r2, [sp, #400]	; 0x190
 800fcbe:	9809      	ldr	r0, [sp, #36]	; 0x24
 800fcc0:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800fcc4:	a912      	add	r1, sp, #72	; 0x48
 800fcc6:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 800fcca:	aa49      	add	r2, sp, #292	; 0x124
 800fccc:	4623      	mov	r3, r4
 800fcce:	47c8      	blx	r9
 800fcd0:	e9d4 2300 	ldrd	r2, r3, [r4]
 800fcd4:	441a      	add	r2, r3
 800fcd6:	6963      	ldr	r3, [r4, #20]
 800fcd8:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 800fcdc:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 800fce0:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 800fce4:	68a1      	ldr	r1, [r4, #8]
 800fce6:	ed94 6a08 	vldr	s12, [r4, #32]
 800fcea:	6022      	str	r2, [r4, #0]
 800fcec:	3301      	adds	r3, #1
 800fcee:	6163      	str	r3, [r4, #20]
 800fcf0:	69a3      	ldr	r3, [r4, #24]
 800fcf2:	ee37 7a27 	vadd.f32	s14, s14, s15
 800fcf6:	3b01      	subs	r3, #1
 800fcf8:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 800fcfc:	61a3      	str	r3, [r4, #24]
 800fcfe:	6923      	ldr	r3, [r4, #16]
 800fd00:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800fd04:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800fd08:	edd4 6a07 	vldr	s13, [r4, #28]
 800fd0c:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800fd10:	440b      	add	r3, r1
 800fd12:	68e1      	ldr	r1, [r4, #12]
 800fd14:	6123      	str	r3, [r4, #16]
 800fd16:	ee76 6a86 	vadd.f32	s13, s13, s12
 800fd1a:	428b      	cmp	r3, r1
 800fd1c:	edc4 6a07 	vstr	s13, [r4, #28]
 800fd20:	db15      	blt.n	800fd4e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 800fd22:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 800fd26:	ee76 6a26 	vadd.f32	s13, s12, s13
 800fd2a:	3201      	adds	r2, #1
 800fd2c:	edc4 6a07 	vstr	s13, [r4, #28]
 800fd30:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 800fd34:	6022      	str	r2, [r4, #0]
 800fd36:	ee36 7a87 	vadd.f32	s14, s13, s14
 800fd3a:	1a5b      	subs	r3, r3, r1
 800fd3c:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800fd40:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 800fd44:	6123      	str	r3, [r4, #16]
 800fd46:	ee77 7a27 	vadd.f32	s15, s14, s15
 800fd4a:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800fd4e:	e9d5 2300 	ldrd	r2, r3, [r5]
 800fd52:	441a      	add	r2, r3
 800fd54:	696b      	ldr	r3, [r5, #20]
 800fd56:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 800fd5a:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 800fd5e:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 800fd62:	68a9      	ldr	r1, [r5, #8]
 800fd64:	ed95 6a08 	vldr	s12, [r5, #32]
 800fd68:	602a      	str	r2, [r5, #0]
 800fd6a:	3301      	adds	r3, #1
 800fd6c:	616b      	str	r3, [r5, #20]
 800fd6e:	69ab      	ldr	r3, [r5, #24]
 800fd70:	ee37 7a27 	vadd.f32	s14, s14, s15
 800fd74:	3b01      	subs	r3, #1
 800fd76:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 800fd7a:	61ab      	str	r3, [r5, #24]
 800fd7c:	692b      	ldr	r3, [r5, #16]
 800fd7e:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800fd82:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800fd86:	edd5 6a07 	vldr	s13, [r5, #28]
 800fd8a:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800fd8e:	440b      	add	r3, r1
 800fd90:	68e9      	ldr	r1, [r5, #12]
 800fd92:	612b      	str	r3, [r5, #16]
 800fd94:	ee76 6a86 	vadd.f32	s13, s13, s12
 800fd98:	428b      	cmp	r3, r1
 800fd9a:	edc5 6a07 	vstr	s13, [r5, #28]
 800fd9e:	db15      	blt.n	800fdcc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 800fda0:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 800fda4:	ee76 6a26 	vadd.f32	s13, s12, s13
 800fda8:	3201      	adds	r2, #1
 800fdaa:	edc5 6a07 	vstr	s13, [r5, #28]
 800fdae:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 800fdb2:	602a      	str	r2, [r5, #0]
 800fdb4:	ee36 7a87 	vadd.f32	s14, s13, s14
 800fdb8:	1a5b      	subs	r3, r3, r1
 800fdba:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800fdbe:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 800fdc2:	612b      	str	r3, [r5, #16]
 800fdc4:	ee77 7a27 	vadd.f32	s15, s14, s15
 800fdc8:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800fdcc:	3f01      	subs	r7, #1
 800fdce:	e757      	b.n	800fc80 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 800fdd0:	4299      	cmp	r1, r3
 800fdd2:	dc13      	bgt.n	800fdfc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 800fdd4:	429a      	cmp	r2, r3
 800fdd6:	da14      	bge.n	800fe02 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 800fdd8:	2502      	movs	r5, #2
 800fdda:	2703      	movs	r7, #3
 800fddc:	46a9      	mov	r9, r5
 800fdde:	f04f 0800 	mov.w	r8, #0
 800fde2:	f04f 0a01 	mov.w	sl, #1
 800fde6:	e6ef      	b.n	800fbc8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800fde8:	2501      	movs	r5, #1
 800fdea:	2700      	movs	r7, #0
 800fdec:	46a9      	mov	r9, r5
 800fdee:	46b8      	mov	r8, r7
 800fdf0:	f04f 0a02 	mov.w	sl, #2
 800fdf4:	e6e8      	b.n	800fbc8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800fdf6:	2501      	movs	r5, #1
 800fdf8:	2702      	movs	r7, #2
 800fdfa:	e6e1      	b.n	800fbc0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 800fdfc:	2500      	movs	r5, #0
 800fdfe:	2701      	movs	r7, #1
 800fe00:	e7f4      	b.n	800fdec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 800fe02:	2702      	movs	r7, #2
 800fe04:	2503      	movs	r5, #3
 800fe06:	f04f 0900 	mov.w	r9, #0
 800fe0a:	46b8      	mov	r8, r7
 800fe0c:	e7e9      	b.n	800fde2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 800fe0e:	4613      	mov	r3, r2
 800fe10:	e728      	b.n	800fc64 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 800fe12:	bf00      	nop
 800fe14:	200155fc 	.word	0x200155fc
 800fe18:	fffd8f01 	.word	0xfffd8f01
 800fe1c:	00027100 	.word	0x00027100
 800fe20:	0004e1ff 	.word	0x0004e1ff
 800fe24:	0004e1fe 	.word	0x0004e1fe
 800fe28:	20015604 	.word	0x20015604
 800fe2c:	4613      	mov	r3, r2
 800fe2e:	992b      	ldr	r1, [sp, #172]	; 0xac
 800fe30:	9111      	str	r1, [sp, #68]	; 0x44
 800fe32:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 800fe36:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 800fe3a:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 800fe3c:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 800fe40:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 800fe44:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 800fe48:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 800fe4c:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 800fe50:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 800fe54:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 800fe58:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 800fe5c:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 800fe60:	469e      	mov	lr, r3
 800fe62:	469c      	mov	ip, r3
 800fe64:	f04f 0900 	mov.w	r9, #0
 800fe68:	f1bc 0f00 	cmp.w	ip, #0
 800fe6c:	d147      	bne.n	800fefe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 800fe6e:	eb03 0c07 	add.w	ip, r3, r7
 800fe72:	1ad7      	subs	r7, r2, r3
 800fe74:	f1b9 0f00 	cmp.w	r9, #0
 800fe78:	d009      	beq.n	800fe8e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 800fe7a:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 800fe7e:	9029      	str	r0, [sp, #164]	; 0xa4
 800fe80:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 800fe84:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 800fe88:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 800fe8c:	912d      	str	r1, [sp, #180]	; 0xb4
 800fe8e:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800fe90:	9111      	str	r1, [sp, #68]	; 0x44
 800fe92:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 800fe96:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 800fe9a:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 800fe9e:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 800fea2:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 800fea6:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 800feaa:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 800feae:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 800feb2:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 800feb6:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 800feba:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 800febe:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 800fec2:	f04f 0800 	mov.w	r8, #0
 800fec6:	f1be 0f00 	cmp.w	lr, #0
 800feca:	d031      	beq.n	800ff30 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 800fecc:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800fece:	4431      	add	r1, r6
 800fed0:	4549      	cmp	r1, r9
 800fed2:	4450      	add	r0, sl
 800fed4:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800fed8:	ee37 7a04 	vadd.f32	s14, s14, s8
 800fedc:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800fee0:	db08      	blt.n	800fef4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 800fee2:	ee77 7a85 	vadd.f32	s15, s15, s10
 800fee6:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800feea:	ee37 7a06 	vadd.f32	s14, s14, s12
 800feee:	3001      	adds	r0, #1
 800fef0:	eba1 0109 	sub.w	r1, r1, r9
 800fef4:	f10e 3eff 	add.w	lr, lr, #4294967295
 800fef8:	f04f 0801 	mov.w	r8, #1
 800fefc:	e7e3      	b.n	800fec6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 800fefe:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800ff00:	4431      	add	r1, r6
 800ff02:	4541      	cmp	r1, r8
 800ff04:	4450      	add	r0, sl
 800ff06:	ee37 7a24 	vadd.f32	s14, s14, s9
 800ff0a:	ee77 7a84 	vadd.f32	s15, s15, s8
 800ff0e:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800ff12:	db08      	blt.n	800ff26 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 800ff14:	ee76 6a85 	vadd.f32	s13, s13, s10
 800ff18:	ee37 7a25 	vadd.f32	s14, s14, s11
 800ff1c:	ee77 7a86 	vadd.f32	s15, s15, s12
 800ff20:	3001      	adds	r0, #1
 800ff22:	eba1 0108 	sub.w	r1, r1, r8
 800ff26:	f10c 3cff 	add.w	ip, ip, #4294967295
 800ff2a:	f04f 0901 	mov.w	r9, #1
 800ff2e:	e79b      	b.n	800fe68 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 800ff30:	449c      	add	ip, r3
 800ff32:	1aff      	subs	r7, r7, r3
 800ff34:	f1b8 0f00 	cmp.w	r8, #0
 800ff38:	d009      	beq.n	800ff4e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 800ff3a:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 800ff3e:	9019      	str	r0, [sp, #100]	; 0x64
 800ff40:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 800ff44:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 800ff48:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 800ff4c:	911d      	str	r1, [sp, #116]	; 0x74
 800ff4e:	1ad2      	subs	r2, r2, r3
 800ff50:	e68b      	b.n	800fc6a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800ff52:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800ff54:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 800ff56:	2b00      	cmp	r3, #0
 800ff58:	f000 80d1 	beq.w	80100fe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 800ff5c:	ad19      	add	r5, sp, #100	; 0x64
 800ff5e:	ac39      	add	r4, sp, #228	; 0xe4
 800ff60:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800ff62:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800ff66:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800ff6a:	930c      	str	r3, [sp, #48]	; 0x30
 800ff6c:	990c      	ldr	r1, [sp, #48]	; 0x30
 800ff6e:	6963      	ldr	r3, [r4, #20]
 800ff70:	440b      	add	r3, r1
 800ff72:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800ff76:	4408      	add	r0, r1
 800ff78:	b200      	sxth	r0, r0
 800ff7a:	4283      	cmp	r3, r0
 800ff7c:	900d      	str	r0, [sp, #52]	; 0x34
 800ff7e:	f280 80c1 	bge.w	8010104 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 800ff82:	428b      	cmp	r3, r1
 800ff84:	da08      	bge.n	800ff98 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800ff86:	2a00      	cmp	r2, #0
 800ff88:	dd06      	ble.n	800ff98 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800ff8a:	1acb      	subs	r3, r1, r3
 800ff8c:	429a      	cmp	r2, r3
 800ff8e:	f2c0 80bb 	blt.w	8010108 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 800ff92:	2b00      	cmp	r3, #0
 800ff94:	f300 80b9 	bgt.w	801010a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 800ff98:	6967      	ldr	r7, [r4, #20]
 800ff9a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800ff9c:	443b      	add	r3, r7
 800ff9e:	461f      	mov	r7, r3
 800ffa0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800ffa2:	1bdf      	subs	r7, r3, r7
 800ffa4:	4297      	cmp	r7, r2
 800ffa6:	bfa8      	it	ge
 800ffa8:	4617      	movge	r7, r2
 800ffaa:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 800ffae:	2f00      	cmp	r7, #0
 800ffb0:	f340 813c 	ble.w	801022c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 800ffb4:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800ffb6:	6829      	ldr	r1, [r5, #0]
 800ffb8:	f9b3 2000 	ldrsh.w	r2, [r3]
 800ffbc:	f9bb 3000 	ldrsh.w	r3, [fp]
 800ffc0:	6820      	ldr	r0, [r4, #0]
 800ffc2:	4411      	add	r1, r2
 800ffc4:	4299      	cmp	r1, r3
 800ffc6:	dd1a      	ble.n	800fffe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800ffc8:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800ffcc:	440b      	add	r3, r1
 800ffce:	4402      	add	r2, r0
 800ffd0:	b21b      	sxth	r3, r3
 800ffd2:	429a      	cmp	r2, r3
 800ffd4:	dc13      	bgt.n	800fffe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800ffd6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800ffd8:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800ffda:	681b      	ldr	r3, [r3, #0]
 800ffdc:	9206      	str	r2, [sp, #24]
 800ffde:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800ffe0:	9205      	str	r2, [sp, #20]
 800ffe2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800ffe4:	9500      	str	r5, [sp, #0]
 800ffe6:	e9cd b203 	strd	fp, r2, [sp, #12]
 800ffea:	9a64      	ldr	r2, [sp, #400]	; 0x190
 800ffec:	9809      	ldr	r0, [sp, #36]	; 0x24
 800ffee:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800fff2:	a912      	add	r1, sp, #72	; 0x48
 800fff4:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 800fff8:	aa49      	add	r2, sp, #292	; 0x124
 800fffa:	4623      	mov	r3, r4
 800fffc:	47c8      	blx	r9
 800fffe:	e9d4 2300 	ldrd	r2, r3, [r4]
 8010002:	441a      	add	r2, r3
 8010004:	6963      	ldr	r3, [r4, #20]
 8010006:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 801000a:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 801000e:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 8010012:	68a1      	ldr	r1, [r4, #8]
 8010014:	ed94 6a08 	vldr	s12, [r4, #32]
 8010018:	6022      	str	r2, [r4, #0]
 801001a:	3301      	adds	r3, #1
 801001c:	6163      	str	r3, [r4, #20]
 801001e:	69a3      	ldr	r3, [r4, #24]
 8010020:	ee37 7a27 	vadd.f32	s14, s14, s15
 8010024:	3b01      	subs	r3, #1
 8010026:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 801002a:	61a3      	str	r3, [r4, #24]
 801002c:	6923      	ldr	r3, [r4, #16]
 801002e:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8010032:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8010036:	edd4 6a07 	vldr	s13, [r4, #28]
 801003a:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 801003e:	440b      	add	r3, r1
 8010040:	68e1      	ldr	r1, [r4, #12]
 8010042:	6123      	str	r3, [r4, #16]
 8010044:	ee76 6a86 	vadd.f32	s13, s13, s12
 8010048:	428b      	cmp	r3, r1
 801004a:	edc4 6a07 	vstr	s13, [r4, #28]
 801004e:	db15      	blt.n	801007c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 8010050:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 8010054:	ee76 6a26 	vadd.f32	s13, s12, s13
 8010058:	3201      	adds	r2, #1
 801005a:	edc4 6a07 	vstr	s13, [r4, #28]
 801005e:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8010062:	6022      	str	r2, [r4, #0]
 8010064:	ee36 7a87 	vadd.f32	s14, s13, s14
 8010068:	1a5b      	subs	r3, r3, r1
 801006a:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 801006e:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 8010072:	6123      	str	r3, [r4, #16]
 8010074:	ee77 7a27 	vadd.f32	s15, s14, s15
 8010078:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 801007c:	e9d5 2300 	ldrd	r2, r3, [r5]
 8010080:	441a      	add	r2, r3
 8010082:	696b      	ldr	r3, [r5, #20]
 8010084:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 8010088:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 801008c:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 8010090:	68a9      	ldr	r1, [r5, #8]
 8010092:	ed95 6a08 	vldr	s12, [r5, #32]
 8010096:	602a      	str	r2, [r5, #0]
 8010098:	3301      	adds	r3, #1
 801009a:	616b      	str	r3, [r5, #20]
 801009c:	69ab      	ldr	r3, [r5, #24]
 801009e:	ee37 7a27 	vadd.f32	s14, s14, s15
 80100a2:	3b01      	subs	r3, #1
 80100a4:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 80100a8:	61ab      	str	r3, [r5, #24]
 80100aa:	692b      	ldr	r3, [r5, #16]
 80100ac:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 80100b0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80100b4:	edd5 6a07 	vldr	s13, [r5, #28]
 80100b8:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 80100bc:	440b      	add	r3, r1
 80100be:	68e9      	ldr	r1, [r5, #12]
 80100c0:	612b      	str	r3, [r5, #16]
 80100c2:	ee76 6a86 	vadd.f32	s13, s13, s12
 80100c6:	428b      	cmp	r3, r1
 80100c8:	edc5 6a07 	vstr	s13, [r5, #28]
 80100cc:	db15      	blt.n	80100fa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 80100ce:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 80100d2:	ee76 6a26 	vadd.f32	s13, s12, s13
 80100d6:	3201      	adds	r2, #1
 80100d8:	edc5 6a07 	vstr	s13, [r5, #28]
 80100dc:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 80100e0:	602a      	str	r2, [r5, #0]
 80100e2:	ee36 7a87 	vadd.f32	s14, s13, s14
 80100e6:	1a5b      	subs	r3, r3, r1
 80100e8:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 80100ec:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 80100f0:	612b      	str	r3, [r5, #16]
 80100f2:	ee77 7a27 	vadd.f32	s15, s14, s15
 80100f6:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 80100fa:	3f01      	subs	r7, #1
 80100fc:	e757      	b.n	800ffae <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 80100fe:	ad39      	add	r5, sp, #228	; 0xe4
 8010100:	ac19      	add	r4, sp, #100	; 0x64
 8010102:	e72d      	b.n	800ff60 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 8010104:	4613      	mov	r3, r2
 8010106:	e744      	b.n	800ff92 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 8010108:	4613      	mov	r3, r2
 801010a:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 801010e:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 8010110:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 8010114:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 8010118:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 801011c:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 8010120:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 8010124:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 8010128:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 801012c:	993d      	ldr	r1, [sp, #244]	; 0xf4
 801012e:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 8010132:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 8010136:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 801013a:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 801013e:	960e      	str	r6, [sp, #56]	; 0x38
 8010140:	469e      	mov	lr, r3
 8010142:	461f      	mov	r7, r3
 8010144:	f04f 0900 	mov.w	r9, #0
 8010148:	2f00      	cmp	r7, #0
 801014a:	d146      	bne.n	80101da <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 801014c:	449c      	add	ip, r3
 801014e:	1ad7      	subs	r7, r2, r3
 8010150:	f1b9 0f00 	cmp.w	r9, #0
 8010154:	d009      	beq.n	801016a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 8010156:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 801015a:	9039      	str	r0, [sp, #228]	; 0xe4
 801015c:	913d      	str	r1, [sp, #244]	; 0xf4
 801015e:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 8010162:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 8010166:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 801016a:	991b      	ldr	r1, [sp, #108]	; 0x6c
 801016c:	910e      	str	r1, [sp, #56]	; 0x38
 801016e:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 8010172:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8010176:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 801017a:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 801017e:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 8010182:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8010186:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 801018a:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 801018e:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 8010192:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8010196:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 801019a:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 801019e:	f04f 0800 	mov.w	r8, #0
 80101a2:	f1be 0f00 	cmp.w	lr, #0
 80101a6:	d030      	beq.n	801020a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 80101a8:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 80101aa:	4431      	add	r1, r6
 80101ac:	4549      	cmp	r1, r9
 80101ae:	4450      	add	r0, sl
 80101b0:	ee76 6aa4 	vadd.f32	s13, s13, s9
 80101b4:	ee37 7a04 	vadd.f32	s14, s14, s8
 80101b8:	ee77 7aa3 	vadd.f32	s15, s15, s7
 80101bc:	db08      	blt.n	80101d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 80101be:	ee77 7a85 	vadd.f32	s15, s15, s10
 80101c2:	ee76 6aa5 	vadd.f32	s13, s13, s11
 80101c6:	ee37 7a06 	vadd.f32	s14, s14, s12
 80101ca:	3001      	adds	r0, #1
 80101cc:	eba1 0109 	sub.w	r1, r1, r9
 80101d0:	f10e 3eff 	add.w	lr, lr, #4294967295
 80101d4:	f04f 0801 	mov.w	r8, #1
 80101d8:	e7e3      	b.n	80101a2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 80101da:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 80101dc:	4431      	add	r1, r6
 80101de:	4541      	cmp	r1, r8
 80101e0:	4450      	add	r0, sl
 80101e2:	ee37 7a24 	vadd.f32	s14, s14, s9
 80101e6:	ee77 7a84 	vadd.f32	s15, s15, s8
 80101ea:	ee76 6aa3 	vadd.f32	s13, s13, s7
 80101ee:	db08      	blt.n	8010202 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 80101f0:	ee76 6a85 	vadd.f32	s13, s13, s10
 80101f4:	ee37 7a25 	vadd.f32	s14, s14, s11
 80101f8:	ee77 7a86 	vadd.f32	s15, s15, s12
 80101fc:	3001      	adds	r0, #1
 80101fe:	eba1 0108 	sub.w	r1, r1, r8
 8010202:	3f01      	subs	r7, #1
 8010204:	f04f 0901 	mov.w	r9, #1
 8010208:	e79e      	b.n	8010148 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 801020a:	449c      	add	ip, r3
 801020c:	1aff      	subs	r7, r7, r3
 801020e:	f1b8 0f00 	cmp.w	r8, #0
 8010212:	d009      	beq.n	8010228 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 8010214:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 8010218:	9019      	str	r0, [sp, #100]	; 0x64
 801021a:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 801021e:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 8010222:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8010226:	911d      	str	r1, [sp, #116]	; 0x74
 8010228:	1ad2      	subs	r2, r2, r3
 801022a:	e6b5      	b.n	800ff98 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 801022c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801022e:	681b      	ldr	r3, [r3, #0]
 8010230:	b923      	cbnz	r3, 801023c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8010232:	4b04      	ldr	r3, [pc, #16]	; (8010244 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 8010234:	6818      	ldr	r0, [r3, #0]
 8010236:	6803      	ldr	r3, [r0, #0]
 8010238:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801023a:	4798      	blx	r3
 801023c:	b05b      	add	sp, #364	; 0x16c
 801023e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010242:	bf00      	nop
 8010244:	20015604 	.word	0x20015604

08010248 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>:
 8010248:	b570      	push	{r4, r5, r6, lr}
 801024a:	4604      	mov	r4, r0
 801024c:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8010250:	9804      	ldr	r0, [sp, #16]
 8010252:	6061      	str	r1, [r4, #4]
 8010254:	2500      	movs	r5, #0
 8010256:	8025      	strh	r5, [r4, #0]
 8010258:	7223      	strb	r3, [r4, #8]
 801025a:	7266      	strb	r6, [r4, #9]
 801025c:	60e0      	str	r0, [r4, #12]
 801025e:	8222      	strh	r2, [r4, #16]
 8010260:	8265      	strh	r5, [r4, #18]
 8010262:	82a5      	strh	r5, [r4, #20]
 8010264:	82e5      	strh	r5, [r4, #22]
 8010266:	8325      	strh	r5, [r4, #24]
 8010268:	8365      	strh	r5, [r4, #26]
 801026a:	83a5      	strh	r5, [r4, #28]
 801026c:	77a5      	strb	r5, [r4, #30]
 801026e:	b32e      	cbz	r6, 80102bc <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 8010270:	6803      	ldr	r3, [r0, #0]
 8010272:	695b      	ldr	r3, [r3, #20]
 8010274:	4798      	blx	r3
 8010276:	4606      	mov	r6, r0
 8010278:	b300      	cbz	r0, 80102bc <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 801027a:	68e0      	ldr	r0, [r4, #12]
 801027c:	6803      	ldr	r3, [r0, #0]
 801027e:	4631      	mov	r1, r6
 8010280:	68db      	ldr	r3, [r3, #12]
 8010282:	4798      	blx	r3
 8010284:	4605      	mov	r5, r0
 8010286:	b1c8      	cbz	r0, 80102bc <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 8010288:	7b43      	ldrb	r3, [r0, #13]
 801028a:	7a82      	ldrb	r2, [r0, #10]
 801028c:	005b      	lsls	r3, r3, #1
 801028e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8010292:	4313      	orrs	r3, r2
 8010294:	83a3      	strh	r3, [r4, #28]
 8010296:	7a63      	ldrb	r3, [r4, #9]
 8010298:	2b04      	cmp	r3, #4
 801029a:	d10f      	bne.n	80102bc <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 801029c:	68e0      	ldr	r0, [r4, #12]
 801029e:	6803      	ldr	r3, [r0, #0]
 80102a0:	462a      	mov	r2, r5
 80102a2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80102a4:	4631      	mov	r1, r6
 80102a6:	4798      	blx	r3
 80102a8:	7b6b      	ldrb	r3, [r5, #13]
 80102aa:	005b      	lsls	r3, r3, #1
 80102ac:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80102b0:	7aab      	ldrb	r3, [r5, #10]
 80102b2:	4313      	orrs	r3, r2
 80102b4:	4418      	add	r0, r3
 80102b6:	8ba3      	ldrh	r3, [r4, #28]
 80102b8:	4418      	add	r0, r3
 80102ba:	83a0      	strh	r0, [r4, #28]
 80102bc:	4620      	mov	r0, r4
 80102be:	bd70      	pop	{r4, r5, r6, pc}

080102c0 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 80102c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80102c4:	2400      	movs	r4, #0
 80102c6:	b085      	sub	sp, #20
 80102c8:	4681      	mov	r9, r0
 80102ca:	4688      	mov	r8, r1
 80102cc:	4692      	mov	sl, r2
 80102ce:	469b      	mov	fp, r3
 80102d0:	4627      	mov	r7, r4
 80102d2:	4625      	mov	r5, r4
 80102d4:	4626      	mov	r6, r4
 80102d6:	4554      	cmp	r4, sl
 80102d8:	da2a      	bge.n	8010330 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 80102da:	2300      	movs	r3, #0
 80102dc:	9303      	str	r3, [sp, #12]
 80102de:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 80102e2:	429d      	cmp	r5, r3
 80102e4:	d004      	beq.n	80102f0 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 80102e6:	f242 030b 	movw	r3, #8203	; 0x200b
 80102ea:	429d      	cmp	r5, r3
 80102ec:	bf18      	it	ne
 80102ee:	462f      	movne	r7, r5
 80102f0:	ab03      	add	r3, sp, #12
 80102f2:	4642      	mov	r2, r8
 80102f4:	4659      	mov	r1, fp
 80102f6:	4648      	mov	r0, r9
 80102f8:	f002 ff7e 	bl	80131f8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80102fc:	4605      	mov	r5, r0
 80102fe:	b1b8      	cbz	r0, 8010330 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8010300:	280a      	cmp	r0, #10
 8010302:	d015      	beq.n	8010330 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8010304:	9a03      	ldr	r2, [sp, #12]
 8010306:	b18a      	cbz	r2, 801032c <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 8010308:	7b50      	ldrb	r0, [r2, #13]
 801030a:	7a93      	ldrb	r3, [r2, #10]
 801030c:	8895      	ldrh	r5, [r2, #4]
 801030e:	0040      	lsls	r0, r0, #1
 8010310:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8010314:	4303      	orrs	r3, r0
 8010316:	9301      	str	r3, [sp, #4]
 8010318:	f8d8 3000 	ldr.w	r3, [r8]
 801031c:	4639      	mov	r1, r7
 801031e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8010320:	4640      	mov	r0, r8
 8010322:	4798      	blx	r3
 8010324:	9b01      	ldr	r3, [sp, #4]
 8010326:	4418      	add	r0, r3
 8010328:	4406      	add	r6, r0
 801032a:	b2b6      	uxth	r6, r6
 801032c:	3401      	adds	r4, #1
 801032e:	e7d2      	b.n	80102d6 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 8010330:	4630      	mov	r0, r6
 8010332:	b005      	add	sp, #20
 8010334:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08010338 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 8010338:	2a02      	cmp	r2, #2
 801033a:	b530      	push	{r4, r5, lr}
 801033c:	d011      	beq.n	8010362 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 801033e:	2a03      	cmp	r2, #3
 8010340:	d01c      	beq.n	801037c <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 8010342:	2a01      	cmp	r2, #1
 8010344:	d10c      	bne.n	8010360 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8010346:	888b      	ldrh	r3, [r1, #4]
 8010348:	8801      	ldrh	r1, [r0, #0]
 801034a:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 801034e:	8844      	ldrh	r4, [r0, #2]
 8010350:	8004      	strh	r4, [r0, #0]
 8010352:	1a5b      	subs	r3, r3, r1
 8010354:	1a9b      	subs	r3, r3, r2
 8010356:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 801035a:	8043      	strh	r3, [r0, #2]
 801035c:	8081      	strh	r1, [r0, #4]
 801035e:	80c2      	strh	r2, [r0, #6]
 8010360:	bd30      	pop	{r4, r5, pc}
 8010362:	88cb      	ldrh	r3, [r1, #6]
 8010364:	8842      	ldrh	r2, [r0, #2]
 8010366:	1a9b      	subs	r3, r3, r2
 8010368:	88c2      	ldrh	r2, [r0, #6]
 801036a:	1a9b      	subs	r3, r3, r2
 801036c:	888a      	ldrh	r2, [r1, #4]
 801036e:	8801      	ldrh	r1, [r0, #0]
 8010370:	8043      	strh	r3, [r0, #2]
 8010372:	1a52      	subs	r2, r2, r1
 8010374:	8881      	ldrh	r1, [r0, #4]
 8010376:	1a52      	subs	r2, r2, r1
 8010378:	8002      	strh	r2, [r0, #0]
 801037a:	e7f1      	b.n	8010360 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 801037c:	88cb      	ldrh	r3, [r1, #6]
 801037e:	8841      	ldrh	r1, [r0, #2]
 8010380:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 8010384:	f9b0 5000 	ldrsh.w	r5, [r0]
 8010388:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 801038c:	8045      	strh	r5, [r0, #2]
 801038e:	1a5b      	subs	r3, r3, r1
 8010390:	1a9b      	subs	r3, r3, r2
 8010392:	8003      	strh	r3, [r0, #0]
 8010394:	8082      	strh	r2, [r0, #4]
 8010396:	80c4      	strh	r4, [r0, #6]
 8010398:	e7e2      	b.n	8010360 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

0801039a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 801039a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801039e:	b09f      	sub	sp, #124	; 0x7c
 80103a0:	9116      	str	r1, [sp, #88]	; 0x58
 80103a2:	9317      	str	r3, [sp, #92]	; 0x5c
 80103a4:	9929      	ldr	r1, [sp, #164]	; 0xa4
 80103a6:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80103a8:	8809      	ldrh	r1, [r1, #0]
 80103aa:	889b      	ldrh	r3, [r3, #4]
 80103ac:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 80103b0:	9212      	str	r2, [sp, #72]	; 0x48
 80103b2:	440b      	add	r3, r1
 80103b4:	b21b      	sxth	r3, r3
 80103b6:	9310      	str	r3, [sp, #64]	; 0x40
 80103b8:	f8d8 3000 	ldr.w	r3, [r8]
 80103bc:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 80103c0:	7a59      	ldrb	r1, [r3, #9]
 80103c2:	7a1b      	ldrb	r3, [r3, #8]
 80103c4:	9011      	str	r0, [sp, #68]	; 0x44
 80103c6:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 80103ca:	9114      	str	r1, [sp, #80]	; 0x50
 80103cc:	9315      	str	r3, [sp, #84]	; 0x54
 80103ce:	f9bd 50a0 	ldrsh.w	r5, [sp, #160]	; 0xa0
 80103d2:	2a00      	cmp	r2, #0
 80103d4:	d06a      	beq.n	80104ac <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 80103d6:	f898 3010 	ldrb.w	r3, [r8, #16]
 80103da:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 80103dc:	2b04      	cmp	r3, #4
 80103de:	bf14      	ite	ne
 80103e0:	2301      	movne	r3, #1
 80103e2:	2302      	moveq	r3, #2
 80103e4:	4413      	add	r3, r2
 80103e6:	f04f 0900 	mov.w	r9, #0
 80103ea:	930f      	str	r3, [sp, #60]	; 0x3c
 80103ec:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 80103f0:	464c      	mov	r4, r9
 80103f2:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 80103f6:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 80103fa:	4293      	cmp	r3, r2
 80103fc:	f280 808f 	bge.w	801051e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 8010400:	2300      	movs	r3, #0
 8010402:	e9cd 331c 	strd	r3, r3, [sp, #112]	; 0x70
 8010406:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
 801040a:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 801040e:	429c      	cmp	r4, r3
 8010410:	d006      	beq.n	8010420 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x86>
 8010412:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8010414:	f242 020b 	movw	r2, #8203	; 0x200b
 8010418:	4294      	cmp	r4, r2
 801041a:	bf18      	it	ne
 801041c:	4623      	movne	r3, r4
 801041e:	930d      	str	r3, [sp, #52]	; 0x34
 8010420:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010422:	992d      	ldr	r1, [sp, #180]	; 0xb4
 8010424:	f8d8 2000 	ldr.w	r2, [r8]
 8010428:	428b      	cmp	r3, r1
 801042a:	db41      	blt.n	80104b0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 801042c:	6813      	ldr	r3, [r2, #0]
 801042e:	4610      	mov	r0, r2
 8010430:	695b      	ldr	r3, [r3, #20]
 8010432:	4798      	blx	r3
 8010434:	4604      	mov	r4, r0
 8010436:	f8d8 0000 	ldr.w	r0, [r8]
 801043a:	6803      	ldr	r3, [r0, #0]
 801043c:	aa1d      	add	r2, sp, #116	; 0x74
 801043e:	689e      	ldr	r6, [r3, #8]
 8010440:	4621      	mov	r1, r4
 8010442:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8010446:	47b0      	blx	r6
 8010448:	901c      	str	r0, [sp, #112]	; 0x70
 801044a:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 801044e:	429c      	cmp	r4, r3
 8010450:	f000 80e9 	beq.w	8010626 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 8010454:	f242 030b 	movw	r3, #8203	; 0x200b
 8010458:	429c      	cmp	r4, r3
 801045a:	f000 80e4 	beq.w	8010626 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 801045e:	2c00      	cmp	r4, #0
 8010460:	f000 80f6 	beq.w	8010650 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b6>
 8010464:	2c0a      	cmp	r4, #10
 8010466:	d060      	beq.n	801052a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 8010468:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 801046a:	b36a      	cbz	r2, 80104c8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 801046c:	8894      	ldrh	r4, [r2, #4]
 801046e:	f1bb 0f00 	cmp.w	fp, #0
 8010472:	d03b      	beq.n	80104ec <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 8010474:	f892 900d 	ldrb.w	r9, [r2, #13]
 8010478:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801047c:	f409 7380 	and.w	r3, r9, #256	; 0x100
 8010480:	f892 900a 	ldrb.w	r9, [r2, #10]
 8010484:	f1bb 0f01 	cmp.w	fp, #1
 8010488:	ea49 0903 	orr.w	r9, r9, r3
 801048c:	d134      	bne.n	80104f8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15e>
 801048e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8010490:	eba5 0509 	sub.w	r5, r5, r9
 8010494:	2b00      	cmp	r3, #0
 8010496:	d14f      	bne.n	8010538 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 8010498:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801049a:	eb09 0305 	add.w	r3, r9, r5
 801049e:	4413      	add	r3, r2
 80104a0:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80104a2:	f9b2 2000 	ldrsh.w	r2, [r2]
 80104a6:	4293      	cmp	r3, r2
 80104a8:	da51      	bge.n	801054e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 80104aa:	e038      	b.n	801051e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 80104ac:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 80104ae:	e79a      	b.n	80103e6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
 80104b0:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 80104b4:	9301      	str	r3, [sp, #4]
 80104b6:	ab1d      	add	r3, sp, #116	; 0x74
 80104b8:	9300      	str	r3, [sp, #0]
 80104ba:	4659      	mov	r1, fp
 80104bc:	ab1c      	add	r3, sp, #112	; 0x70
 80104be:	982c      	ldr	r0, [sp, #176]	; 0xb0
 80104c0:	f002 fee3 	bl	801328a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 80104c4:	4604      	mov	r4, r0
 80104c6:	e7c0      	b.n	801044a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 80104c8:	f8d8 0000 	ldr.w	r0, [r8]
 80104cc:	6803      	ldr	r3, [r0, #0]
 80104ce:	691b      	ldr	r3, [r3, #16]
 80104d0:	4798      	blx	r3
 80104d2:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 80104d6:	4298      	cmp	r0, r3
 80104d8:	f000 80a5 	beq.w	8010626 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 80104dc:	f242 030b 	movw	r3, #8203	; 0x200b
 80104e0:	4298      	cmp	r0, r3
 80104e2:	f000 80a0 	beq.w	8010626 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 80104e6:	f1bb 0f00 	cmp.w	fp, #0
 80104ea:	d100      	bne.n	80104ee <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
 80104ec:	444d      	add	r5, r9
 80104ee:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 80104f0:	2a00      	cmp	r2, #0
 80104f2:	d1bf      	bne.n	8010474 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 80104f4:	4691      	mov	r9, r2
 80104f6:	e096      	b.n	8010626 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 80104f8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80104fa:	2b00      	cmp	r3, #0
 80104fc:	f000 80aa 	beq.w	8010654 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8010500:	f1bb 0f00 	cmp.w	fp, #0
 8010504:	d118      	bne.n	8010538 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 8010506:	f8d8 0000 	ldr.w	r0, [r8]
 801050a:	990d      	ldr	r1, [sp, #52]	; 0x34
 801050c:	6803      	ldr	r3, [r0, #0]
 801050e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8010510:	4798      	blx	r3
 8010512:	4405      	add	r5, r0
 8010514:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8010516:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8010518:	1aeb      	subs	r3, r5, r3
 801051a:	4293      	cmp	r3, r2
 801051c:	dd17      	ble.n	801054e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 801051e:	2c00      	cmp	r4, #0
 8010520:	f000 8096 	beq.w	8010650 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b6>
 8010524:	2c0a      	cmp	r4, #10
 8010526:	f040 8084 	bne.w	8010632 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
 801052a:	240a      	movs	r4, #10
 801052c:	fab4 f084 	clz	r0, r4
 8010530:	0940      	lsrs	r0, r0, #5
 8010532:	b01f      	add	sp, #124	; 0x7c
 8010534:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010538:	f8d8 0000 	ldr.w	r0, [r8]
 801053c:	990d      	ldr	r1, [sp, #52]	; 0x34
 801053e:	6803      	ldr	r3, [r0, #0]
 8010540:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8010542:	4798      	blx	r3
 8010544:	f1bb 0f01 	cmp.w	fp, #1
 8010548:	eba5 0500 	sub.w	r5, r5, r0
 801054c:	d0a4      	beq.n	8010498 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 801054e:	981c      	ldr	r0, [sp, #112]	; 0x70
 8010550:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8010552:	f990 1009 	ldrsb.w	r1, [r0, #9]
 8010556:	f9b3 6000 	ldrsh.w	r6, [r3]
 801055a:	7b43      	ldrb	r3, [r0, #13]
 801055c:	015b      	lsls	r3, r3, #5
 801055e:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8010562:	7983      	ldrb	r3, [r0, #6]
 8010564:	4429      	add	r1, r5
 8010566:	4313      	orrs	r3, r2
 8010568:	440b      	add	r3, r1
 801056a:	42b3      	cmp	r3, r6
 801056c:	db5b      	blt.n	8010626 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 801056e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010570:	4299      	cmp	r1, r3
 8010572:	da58      	bge.n	8010626 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 8010574:	f8d8 0000 	ldr.w	r0, [r8]
 8010578:	6803      	ldr	r3, [r0, #0]
 801057a:	42ae      	cmp	r6, r5
 801057c:	bfc8      	it	gt
 801057e:	1b76      	subgt	r6, r6, r5
 8010580:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010582:	bfcc      	ite	gt
 8010584:	b2b6      	uxthgt	r6, r6
 8010586:	2600      	movle	r6, #0
 8010588:	4798      	blx	r3
 801058a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801058c:	7b5a      	ldrb	r2, [r3, #13]
 801058e:	00d1      	lsls	r1, r2, #3
 8010590:	f401 7780 	and.w	r7, r1, #256	; 0x100
 8010594:	7a19      	ldrb	r1, [r3, #8]
 8010596:	4339      	orrs	r1, r7
 8010598:	0657      	lsls	r7, r2, #25
 801059a:	9f17      	ldr	r7, [sp, #92]	; 0x5c
 801059c:	bf44      	itt	mi
 801059e:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 80105a2:	b209      	sxthmi	r1, r1
 80105a4:	19c7      	adds	r7, r0, r7
 80105a6:	1a7f      	subs	r7, r7, r1
 80105a8:	9929      	ldr	r1, [sp, #164]	; 0xa4
 80105aa:	b2bf      	uxth	r7, r7
 80105ac:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 80105b0:	fa0f fa87 	sxth.w	sl, r7
 80105b4:	4551      	cmp	r1, sl
 80105b6:	dd3a      	ble.n	801062e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x294>
 80105b8:	0112      	lsls	r2, r2, #4
 80105ba:	79d8      	ldrb	r0, [r3, #7]
 80105bc:	f402 7280 	and.w	r2, r2, #256	; 0x100
 80105c0:	4302      	orrs	r2, r0
 80105c2:	4492      	add	sl, r2
 80105c4:	4551      	cmp	r1, sl
 80105c6:	dc2e      	bgt.n	8010626 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 80105c8:	1bcf      	subs	r7, r1, r7
 80105ca:	b2bf      	uxth	r7, r7
 80105cc:	468a      	mov	sl, r1
 80105ce:	9319      	str	r3, [sp, #100]	; 0x64
 80105d0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80105d2:	f8d8 0000 	ldr.w	r0, [r8]
 80105d6:	681a      	ldr	r2, [r3, #0]
 80105d8:	6801      	ldr	r1, [r0, #0]
 80105da:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 80105dc:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 80105de:	9313      	str	r3, [sp, #76]	; 0x4c
 80105e0:	9218      	str	r2, [sp, #96]	; 0x60
 80105e2:	6b89      	ldr	r1, [r1, #56]	; 0x38
 80105e4:	4788      	blx	r1
 80105e6:	f898 1006 	ldrb.w	r1, [r8, #6]
 80105ea:	910b      	str	r1, [sp, #44]	; 0x2c
 80105ec:	f898 100e 	ldrb.w	r1, [r8, #14]
 80105f0:	910a      	str	r1, [sp, #40]	; 0x28
 80105f2:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 80105f6:	9109      	str	r1, [sp, #36]	; 0x24
 80105f8:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80105fa:	f8d8 1008 	ldr.w	r1, [r8, #8]
 80105fe:	9305      	str	r3, [sp, #20]
 8010600:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8010602:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8010604:	9206      	str	r2, [sp, #24]
 8010606:	e9cd 0107 	strd	r0, r1, [sp, #28]
 801060a:	e9cd 7303 	strd	r7, r3, [sp, #12]
 801060e:	e9cd a601 	strd	sl, r6, [sp, #4]
 8010612:	442e      	add	r6, r5
 8010614:	b236      	sxth	r6, r6
 8010616:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8010618:	9600      	str	r6, [sp, #0]
 801061a:	681a      	ldr	r2, [r3, #0]
 801061c:	9916      	ldr	r1, [sp, #88]	; 0x58
 801061e:	685b      	ldr	r3, [r3, #4]
 8010620:	9811      	ldr	r0, [sp, #68]	; 0x44
 8010622:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8010624:	47b0      	blx	r6
 8010626:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010628:	3301      	adds	r3, #1
 801062a:	930e      	str	r3, [sp, #56]	; 0x38
 801062c:	e6e3      	b.n	80103f6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
 801062e:	2700      	movs	r7, #0
 8010630:	e7cd      	b.n	80105ce <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
 8010632:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8010634:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8010636:	3501      	adds	r5, #1
 8010638:	429d      	cmp	r5, r3
 801063a:	f6bf af77 	bge.w	801052c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 801063e:	4659      	mov	r1, fp
 8010640:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8010642:	f7f4 fb97 	bl	8004d74 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8010646:	4604      	mov	r4, r0
 8010648:	b110      	cbz	r0, 8010650 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b6>
 801064a:	280a      	cmp	r0, #10
 801064c:	d1f2      	bne.n	8010634 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29a>
 801064e:	e76c      	b.n	801052a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 8010650:	2400      	movs	r4, #0
 8010652:	e76b      	b.n	801052c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 8010654:	f1bb 0f00 	cmp.w	fp, #0
 8010658:	f43f af5c 	beq.w	8010514 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17a>
 801065c:	e777      	b.n	801054e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>

0801065e <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 801065e:	b530      	push	{r4, r5, lr}
 8010660:	8a44      	ldrh	r4, [r0, #18]
 8010662:	8ac5      	ldrh	r5, [r0, #22]
 8010664:	82c3      	strh	r3, [r0, #22]
 8010666:	442c      	add	r4, r5
 8010668:	1ae4      	subs	r4, r4, r3
 801066a:	8244      	strh	r4, [r0, #18]
 801066c:	8b03      	ldrh	r3, [r0, #24]
 801066e:	8a84      	ldrh	r4, [r0, #20]
 8010670:	4422      	add	r2, r4
 8010672:	440c      	add	r4, r1
 8010674:	1a59      	subs	r1, r3, r1
 8010676:	8342      	strh	r2, [r0, #26]
 8010678:	8284      	strh	r4, [r0, #20]
 801067a:	8301      	strh	r1, [r0, #24]
 801067c:	bd30      	pop	{r4, r5, pc}

0801067e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>:
 801067e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010682:	7a43      	ldrb	r3, [r0, #9]
 8010684:	1eda      	subs	r2, r3, #3
 8010686:	b087      	sub	sp, #28
 8010688:	4604      	mov	r4, r0
 801068a:	b2d2      	uxtb	r2, r2
 801068c:	460f      	mov	r7, r1
 801068e:	2900      	cmp	r1, #0
 8010690:	d036      	beq.n	8010700 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x82>
 8010692:	2a01      	cmp	r2, #1
 8010694:	d932      	bls.n	80106fc <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x7e>
 8010696:	1e58      	subs	r0, r3, #1
 8010698:	f1d0 0b00 	rsbs	fp, r0, #0
 801069c:	eb4b 0b00 	adc.w	fp, fp, r0
 80106a0:	1e99      	subs	r1, r3, #2
 80106a2:	424b      	negs	r3, r1
 80106a4:	414b      	adcs	r3, r1
 80106a6:	9303      	str	r3, [sp, #12]
 80106a8:	2300      	movs	r3, #0
 80106aa:	e9cd 3301 	strd	r3, r3, [sp, #4]
 80106ae:	2500      	movs	r5, #0
 80106b0:	8265      	strh	r5, [r4, #18]
 80106b2:	82a5      	strh	r5, [r4, #20]
 80106b4:	46a9      	mov	r9, r5
 80106b6:	f242 0a0b 	movw	sl, #8203	; 0x200b
 80106ba:	2300      	movs	r3, #0
 80106bc:	9305      	str	r3, [sp, #20]
 80106be:	8823      	ldrh	r3, [r4, #0]
 80106c0:	2b20      	cmp	r3, #32
 80106c2:	d02b      	beq.n	801071c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x9e>
 80106c4:	eba3 020a 	sub.w	r2, r3, sl
 80106c8:	4256      	negs	r6, r2
 80106ca:	4156      	adcs	r6, r2
 80106cc:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 80106d0:	4293      	cmp	r3, r2
 80106d2:	d004      	beq.n	80106de <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 80106d4:	4553      	cmp	r3, sl
 80106d6:	bf16      	itet	ne
 80106d8:	4699      	movne	r9, r3
 80106da:	2601      	moveq	r6, #1
 80106dc:	2600      	movne	r6, #0
 80106de:	ab05      	add	r3, sp, #20
 80106e0:	68e2      	ldr	r2, [r4, #12]
 80106e2:	7a21      	ldrb	r1, [r4, #8]
 80106e4:	6860      	ldr	r0, [r4, #4]
 80106e6:	f002 fd87 	bl	80131f8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80106ea:	8020      	strh	r0, [r4, #0]
 80106ec:	b9c8      	cbnz	r0, 8010722 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xa4>
 80106ee:	8b22      	ldrh	r2, [r4, #24]
 80106f0:	2300      	movs	r3, #0
 80106f2:	4611      	mov	r1, r2
 80106f4:	4620      	mov	r0, r4
 80106f6:	f7ff ffb2 	bl	801065e <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 80106fa:	e066      	b.n	80107ca <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 80106fc:	468b      	mov	fp, r1
 80106fe:	e7cf      	b.n	80106a0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x22>
 8010700:	3b01      	subs	r3, #1
 8010702:	2a01      	cmp	r2, #1
 8010704:	bf8c      	ite	hi
 8010706:	2200      	movhi	r2, #0
 8010708:	2201      	movls	r2, #1
 801070a:	2b01      	cmp	r3, #1
 801070c:	bf8c      	ite	hi
 801070e:	2300      	movhi	r3, #0
 8010710:	2301      	movls	r3, #1
 8010712:	9202      	str	r2, [sp, #8]
 8010714:	9301      	str	r3, [sp, #4]
 8010716:	9103      	str	r1, [sp, #12]
 8010718:	468b      	mov	fp, r1
 801071a:	e7c8      	b.n	80106ae <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x30>
 801071c:	4699      	mov	r9, r3
 801071e:	2601      	movs	r6, #1
 8010720:	e7dd      	b.n	80106de <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 8010722:	8ae3      	ldrh	r3, [r4, #22]
 8010724:	280a      	cmp	r0, #10
 8010726:	f103 0301 	add.w	r3, r3, #1
 801072a:	82e3      	strh	r3, [r4, #22]
 801072c:	d0df      	beq.n	80106ee <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x70>
 801072e:	9a05      	ldr	r2, [sp, #20]
 8010730:	bb42      	cbnz	r2, 8010784 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x106>
 8010732:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8010736:	4298      	cmp	r0, r3
 8010738:	d001      	beq.n	801073e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 801073a:	4550      	cmp	r0, sl
 801073c:	d1bd      	bne.n	80106ba <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 801073e:	8823      	ldrh	r3, [r4, #0]
 8010740:	8b21      	ldrh	r1, [r4, #24]
 8010742:	2b20      	cmp	r3, #32
 8010744:	d001      	beq.n	801074a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xcc>
 8010746:	4553      	cmp	r3, sl
 8010748:	d131      	bne.n	80107ae <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x130>
 801074a:	2e00      	cmp	r6, #0
 801074c:	bf0a      	itet	eq
 801074e:	460d      	moveq	r5, r1
 8010750:	4630      	movne	r0, r6
 8010752:	2001      	moveq	r0, #1
 8010754:	440a      	add	r2, r1
 8010756:	8aa3      	ldrh	r3, [r4, #20]
 8010758:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 801075c:	b292      	uxth	r2, r2
 801075e:	8322      	strh	r2, [r4, #24]
 8010760:	4413      	add	r3, r2
 8010762:	2f00      	cmp	r7, #0
 8010764:	d03a      	beq.n	80107dc <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x15e>
 8010766:	f1bb 0f00 	cmp.w	fp, #0
 801076a:	d102      	bne.n	8010772 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xf4>
 801076c:	9903      	ldr	r1, [sp, #12]
 801076e:	b301      	cbz	r1, 80107b2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 8010770:	b1f8      	cbz	r0, 80107b2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 8010772:	8ba1      	ldrh	r1, [r4, #28]
 8010774:	4419      	add	r1, r3
 8010776:	458c      	cmp	ip, r1
 8010778:	da2a      	bge.n	80107d0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 801077a:	8a61      	ldrh	r1, [r4, #18]
 801077c:	b341      	cbz	r1, 80107d0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 801077e:	4563      	cmp	r3, ip
 8010780:	dd9b      	ble.n	80106ba <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8010782:	e01c      	b.n	80107be <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x140>
 8010784:	8893      	ldrh	r3, [r2, #4]
 8010786:	8023      	strh	r3, [r4, #0]
 8010788:	f892 800d 	ldrb.w	r8, [r2, #13]
 801078c:	ea4f 0848 	mov.w	r8, r8, lsl #1
 8010790:	f408 7080 	and.w	r0, r8, #256	; 0x100
 8010794:	f892 800a 	ldrb.w	r8, [r2, #10]
 8010798:	ea48 0800 	orr.w	r8, r8, r0
 801079c:	68e0      	ldr	r0, [r4, #12]
 801079e:	6803      	ldr	r3, [r0, #0]
 80107a0:	4649      	mov	r1, r9
 80107a2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80107a4:	4798      	blx	r3
 80107a6:	eb08 0200 	add.w	r2, r8, r0
 80107aa:	b292      	uxth	r2, r2
 80107ac:	e7c7      	b.n	801073e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 80107ae:	2000      	movs	r0, #0
 80107b0:	e7d0      	b.n	8010754 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xd6>
 80107b2:	4563      	cmp	r3, ip
 80107b4:	dd81      	ble.n	80106ba <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 80107b6:	8a63      	ldrh	r3, [r4, #18]
 80107b8:	2b00      	cmp	r3, #0
 80107ba:	f43f af7e 	beq.w	80106ba <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 80107be:	2301      	movs	r3, #1
 80107c0:	77a3      	strb	r3, [r4, #30]
 80107c2:	8ba2      	ldrh	r2, [r4, #28]
 80107c4:	8b63      	ldrh	r3, [r4, #26]
 80107c6:	4413      	add	r3, r2
 80107c8:	8363      	strh	r3, [r4, #26]
 80107ca:	b007      	add	sp, #28
 80107cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80107d0:	2300      	movs	r3, #0
 80107d2:	4611      	mov	r1, r2
 80107d4:	4620      	mov	r0, r4
 80107d6:	f7ff ff42 	bl	801065e <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 80107da:	e76e      	b.n	80106ba <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 80107dc:	4563      	cmp	r3, ip
 80107de:	dd14      	ble.n	801080a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x18c>
 80107e0:	9b02      	ldr	r3, [sp, #8]
 80107e2:	b113      	cbz	r3, 80107ea <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x16c>
 80107e4:	2301      	movs	r3, #1
 80107e6:	460a      	mov	r2, r1
 80107e8:	e783      	b.n	80106f2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x74>
 80107ea:	9b01      	ldr	r3, [sp, #4]
 80107ec:	2b00      	cmp	r3, #0
 80107ee:	f43f af64 	beq.w	80106ba <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 80107f2:	2800      	cmp	r0, #0
 80107f4:	f47f af61 	bne.w	80106ba <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 80107f8:	b116      	cbz	r6, 8010800 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x182>
 80107fa:	2301      	movs	r3, #1
 80107fc:	462a      	mov	r2, r5
 80107fe:	e779      	b.n	80106f4 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x76>
 8010800:	8a63      	ldrh	r3, [r4, #18]
 8010802:	2b00      	cmp	r3, #0
 8010804:	f43f af59 	beq.w	80106ba <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8010808:	e7df      	b.n	80107ca <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 801080a:	2800      	cmp	r0, #0
 801080c:	f47f af55 	bne.w	80106ba <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8010810:	2e00      	cmp	r6, #0
 8010812:	f43f af52 	beq.w	80106ba <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8010816:	2301      	movs	r3, #1
 8010818:	462a      	mov	r2, r5
 801081a:	e7db      	b.n	80107d4 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x156>

0801081c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 801081c:	b530      	push	{r4, r5, lr}
 801081e:	4605      	mov	r5, r0
 8010820:	b08b      	sub	sp, #44	; 0x2c
 8010822:	b191      	cbz	r1, 801084a <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x2e>
 8010824:	e9cd 3100 	strd	r3, r1, [sp]
 8010828:	4613      	mov	r3, r2
 801082a:	4601      	mov	r1, r0
 801082c:	f8bd 2038 	ldrh.w	r2, [sp, #56]	; 0x38
 8010830:	a802      	add	r0, sp, #8
 8010832:	f7ff fd09 	bl	8010248 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 8010836:	2401      	movs	r4, #1
 8010838:	2100      	movs	r1, #0
 801083a:	a802      	add	r0, sp, #8
 801083c:	f7ff ff1f 	bl	801067e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 8010840:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8010844:	b163      	cbz	r3, 8010860 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 8010846:	3401      	adds	r4, #1
 8010848:	e7f6      	b.n	8010838 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x1c>
 801084a:	f002 fda3 	bl	8013394 <_ZN8touchgfx12TextProvider11getNextCharEv>
 801084e:	2401      	movs	r4, #1
 8010850:	280a      	cmp	r0, #10
 8010852:	4628      	mov	r0, r5
 8010854:	bf08      	it	eq
 8010856:	3401      	addeq	r4, #1
 8010858:	f002 fd9c 	bl	8013394 <_ZN8touchgfx12TextProvider11getNextCharEv>
 801085c:	2800      	cmp	r0, #0
 801085e:	d1f7      	bne.n	8010850 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 8010860:	b2a0      	uxth	r0, r4
 8010862:	b00b      	add	sp, #44	; 0x2c
 8010864:	bd30      	pop	{r4, r5, pc}

08010866 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 8010866:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801086a:	b0e5      	sub	sp, #404	; 0x194
 801086c:	4689      	mov	r9, r1
 801086e:	f8dd a1b8 	ldr.w	sl, [sp, #440]	; 0x1b8
 8010872:	900a      	str	r0, [sp, #40]	; 0x28
 8010874:	461c      	mov	r4, r3
 8010876:	f1ba 0f00 	cmp.w	sl, #0
 801087a:	f000 80b4 	beq.w	80109e6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 801087e:	681b      	ldr	r3, [r3, #0]
 8010880:	2b00      	cmp	r3, #0
 8010882:	f000 80b0 	beq.w	80109e6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 8010886:	7ba3      	ldrb	r3, [r4, #14]
 8010888:	2b00      	cmp	r3, #0
 801088a:	f000 80ac 	beq.w	80109e6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 801088e:	6810      	ldr	r0, [r2, #0]
 8010890:	6851      	ldr	r1, [r2, #4]
 8010892:	f9b9 2004 	ldrsh.w	r2, [r9, #4]
 8010896:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 801089a:	f10d 0834 	add.w	r8, sp, #52	; 0x34
 801089e:	4643      	mov	r3, r8
 80108a0:	c303      	stmia	r3!, {r0, r1}
 80108a2:	2500      	movs	r5, #0
 80108a4:	f9b9 3006 	ldrsh.w	r3, [r9, #6]
 80108a8:	79a2      	ldrb	r2, [r4, #6]
 80108aa:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 80108ae:	a90f      	add	r1, sp, #60	; 0x3c
 80108b0:	4640      	mov	r0, r8
 80108b2:	950f      	str	r5, [sp, #60]	; 0x3c
 80108b4:	f7ff fd40 	bl	8010338 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 80108b8:	a90f      	add	r1, sp, #60	; 0x3c
 80108ba:	4608      	mov	r0, r1
 80108bc:	79a2      	ldrb	r2, [r4, #6]
 80108be:	af19      	add	r7, sp, #100	; 0x64
 80108c0:	f7ff fd3a 	bl	8010338 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 80108c4:	4638      	mov	r0, r7
 80108c6:	f002 f93a 	bl	8012b3e <_ZN8touchgfx12TextProviderC1Ev>
 80108ca:	6820      	ldr	r0, [r4, #0]
 80108cc:	6803      	ldr	r3, [r0, #0]
 80108ce:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80108d0:	4798      	blx	r3
 80108d2:	4606      	mov	r6, r0
 80108d4:	6820      	ldr	r0, [r4, #0]
 80108d6:	6803      	ldr	r3, [r0, #0]
 80108d8:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80108da:	4798      	blx	r3
 80108dc:	4633      	mov	r3, r6
 80108de:	9000      	str	r0, [sp, #0]
 80108e0:	9a6f      	ldr	r2, [sp, #444]	; 0x1bc
 80108e2:	4651      	mov	r1, sl
 80108e4:	4638      	mov	r0, r7
 80108e6:	f002 f985 	bl	8012bf4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80108ea:	6820      	ldr	r0, [r4, #0]
 80108ec:	7923      	ldrb	r3, [r4, #4]
 80108ee:	9308      	str	r3, [sp, #32]
 80108f0:	6803      	ldr	r3, [r0, #0]
 80108f2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80108f4:	4798      	blx	r3
 80108f6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80108fa:	181e      	adds	r6, r3, r0
 80108fc:	42ae      	cmp	r6, r5
 80108fe:	dd06      	ble.n	801090e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xa8>
 8010900:	f9b8 2002 	ldrsh.w	r2, [r8, #2]
 8010904:	4282      	cmp	r2, r0
 8010906:	bfa4      	itt	ge
 8010908:	189d      	addge	r5, r3, r2
 801090a:	fb95 f5f6 	sdivge	r5, r5, r6
 801090e:	a832      	add	r0, sp, #200	; 0xc8
 8010910:	f002 f915 	bl	8012b3e <_ZN8touchgfx12TextProviderC1Ev>
 8010914:	7c23      	ldrb	r3, [r4, #16]
 8010916:	b17b      	cbz	r3, 8010938 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xd2>
 8010918:	6820      	ldr	r0, [r4, #0]
 801091a:	6803      	ldr	r3, [r0, #0]
 801091c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801091e:	4798      	blx	r3
 8010920:	4683      	mov	fp, r0
 8010922:	6820      	ldr	r0, [r4, #0]
 8010924:	6803      	ldr	r3, [r0, #0]
 8010926:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8010928:	4798      	blx	r3
 801092a:	465b      	mov	r3, fp
 801092c:	9000      	str	r0, [sp, #0]
 801092e:	9a6f      	ldr	r2, [sp, #444]	; 0x1bc
 8010930:	4651      	mov	r1, sl
 8010932:	a832      	add	r0, sp, #200	; 0xc8
 8010934:	f002 f95e 	bl	8012bf4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8010938:	7be1      	ldrb	r1, [r4, #15]
 801093a:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 801093e:	7963      	ldrb	r3, [r4, #5]
 8010940:	1a52      	subs	r2, r2, r1
 8010942:	7c21      	ldrb	r1, [r4, #16]
 8010944:	9101      	str	r1, [sp, #4]
 8010946:	6821      	ldr	r1, [r4, #0]
 8010948:	9100      	str	r1, [sp, #0]
 801094a:	b292      	uxth	r2, r2
 801094c:	a932      	add	r1, sp, #200	; 0xc8
 801094e:	a811      	add	r0, sp, #68	; 0x44
 8010950:	f7ff fc7a 	bl	8010248 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 8010954:	7c23      	ldrb	r3, [r4, #16]
 8010956:	b9bb      	cbnz	r3, 8010988 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>
 8010958:	fa1f fa86 	uxth.w	sl, r6
 801095c:	2d00      	cmp	r5, #0
 801095e:	dd45      	ble.n	80109ec <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x186>
 8010960:	4638      	mov	r0, r7
 8010962:	f002 fd17 	bl	8013394 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8010966:	2800      	cmp	r0, #0
 8010968:	d03d      	beq.n	80109e6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 801096a:	280a      	cmp	r0, #10
 801096c:	d1f6      	bne.n	801095c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf6>
 801096e:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 8010972:	4453      	add	r3, sl
 8010974:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 8010978:	f8bd 3042 	ldrh.w	r3, [sp, #66]	; 0x42
 801097c:	eba3 030a 	sub.w	r3, r3, sl
 8010980:	3d01      	subs	r5, #1
 8010982:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 8010986:	e7e9      	b.n	801095c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf6>
 8010988:	0073      	lsls	r3, r6, #1
 801098a:	9309      	str	r3, [sp, #36]	; 0x24
 801098c:	f64f 7bff 	movw	fp, #65535	; 0xffff
 8010990:	fa1f fa86 	uxth.w	sl, r6
 8010994:	2d00      	cmp	r5, #0
 8010996:	dd29      	ble.n	80109ec <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x186>
 8010998:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 801099c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801099e:	428b      	cmp	r3, r1
 80109a0:	bfd4      	ite	le
 80109a2:	2100      	movle	r1, #0
 80109a4:	2101      	movgt	r1, #1
 80109a6:	a811      	add	r0, sp, #68	; 0x44
 80109a8:	f7ff fe69 	bl	801067e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 80109ac:	f8bd 3056 	ldrh.w	r3, [sp, #86]	; 0x56
 80109b0:	3b01      	subs	r3, #1
 80109b2:	b29b      	uxth	r3, r3
 80109b4:	455b      	cmp	r3, fp
 80109b6:	930b      	str	r3, [sp, #44]	; 0x2c
 80109b8:	d005      	beq.n	80109c6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x160>
 80109ba:	7961      	ldrb	r1, [r4, #5]
 80109bc:	4638      	mov	r0, r7
 80109be:	f7f4 f9d9 	bl	8004d74 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 80109c2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80109c4:	e7f4      	b.n	80109b0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x14a>
 80109c6:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 80109ca:	4453      	add	r3, sl
 80109cc:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 80109d0:	f8bd 3042 	ldrh.w	r3, [sp, #66]	; 0x42
 80109d4:	eba3 030a 	sub.w	r3, r3, sl
 80109d8:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 80109dc:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 80109e0:	3d01      	subs	r5, #1
 80109e2:	2b00      	cmp	r3, #0
 80109e4:	d1d6      	bne.n	8010994 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x12e>
 80109e6:	b065      	add	sp, #404	; 0x194
 80109e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80109ec:	0075      	lsls	r5, r6, #1
 80109ee:	f04f 0a00 	mov.w	sl, #0
 80109f2:	7c23      	ldrb	r3, [r4, #16]
 80109f4:	2b00      	cmp	r3, #0
 80109f6:	d066      	beq.n	8010ac6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x260>
 80109f8:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 80109fc:	428d      	cmp	r5, r1
 80109fe:	bfd4      	ite	le
 8010a00:	2100      	movle	r1, #0
 8010a02:	2101      	movgt	r1, #1
 8010a04:	a811      	add	r0, sp, #68	; 0x44
 8010a06:	f7ff fe3a 	bl	801067e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 8010a0a:	9b08      	ldr	r3, [sp, #32]
 8010a0c:	2b00      	cmp	r3, #0
 8010a0e:	d055      	beq.n	8010abc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 8010a10:	f894 b010 	ldrb.w	fp, [r4, #16]
 8010a14:	2264      	movs	r2, #100	; 0x64
 8010a16:	4639      	mov	r1, r7
 8010a18:	a84b      	add	r0, sp, #300	; 0x12c
 8010a1a:	f010 f8f1 	bl	8020c00 <memcpy>
 8010a1e:	f1bb 0f00 	cmp.w	fp, #0
 8010a22:	d058      	beq.n	8010ad6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x270>
 8010a24:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 8010a28:	7922      	ldrb	r2, [r4, #4]
 8010a2a:	2a01      	cmp	r2, #1
 8010a2c:	d13c      	bne.n	8010aa8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x242>
 8010a2e:	f9bd 0040 	ldrsh.w	r0, [sp, #64]	; 0x40
 8010a32:	1ac0      	subs	r0, r0, r3
 8010a34:	2302      	movs	r3, #2
 8010a36:	fb90 f0f3 	sdiv	r0, r0, r3
 8010a3a:	b200      	sxth	r0, r0
 8010a3c:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8010a40:	4418      	add	r0, r3
 8010a42:	7c23      	ldrb	r3, [r4, #16]
 8010a44:	b200      	sxth	r0, r0
 8010a46:	2b00      	cmp	r3, #0
 8010a48:	d03a      	beq.n	8010ac0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25a>
 8010a4a:	f8bd 2056 	ldrh.w	r2, [sp, #86]	; 0x56
 8010a4e:	f89d 1062 	ldrb.w	r1, [sp, #98]	; 0x62
 8010a52:	9000      	str	r0, [sp, #0]
 8010a54:	e9cd 2105 	strd	r2, r1, [sp, #20]
 8010a58:	f9bd 303e 	ldrsh.w	r3, [sp, #62]	; 0x3e
 8010a5c:	980a      	ldr	r0, [sp, #40]	; 0x28
 8010a5e:	e9cd a703 	strd	sl, r7, [sp, #12]
 8010a62:	e9cd 8401 	strd	r8, r4, [sp, #4]
 8010a66:	464a      	mov	r2, r9
 8010a68:	2100      	movs	r1, #0
 8010a6a:	f7ff fc96 	bl	801039a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 8010a6e:	2800      	cmp	r0, #0
 8010a70:	d1b9      	bne.n	80109e6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 8010a72:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 8010a76:	b2b2      	uxth	r2, r6
 8010a78:	4611      	mov	r1, r2
 8010a7a:	4413      	add	r3, r2
 8010a7c:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 8010a80:	1a52      	subs	r2, r2, r1
 8010a82:	7c21      	ldrb	r1, [r4, #16]
 8010a84:	b21b      	sxth	r3, r3
 8010a86:	b212      	sxth	r2, r2
 8010a88:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 8010a8c:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 8010a90:	b109      	cbz	r1, 8010a96 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x230>
 8010a92:	42b2      	cmp	r2, r6
 8010a94:	dba7      	blt.n	80109e6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 8010a96:	f8b8 2006 	ldrh.w	r2, [r8, #6]
 8010a9a:	f8b8 1002 	ldrh.w	r1, [r8, #2]
 8010a9e:	440a      	add	r2, r1
 8010aa0:	b212      	sxth	r2, r2
 8010aa2:	4293      	cmp	r3, r2
 8010aa4:	dda5      	ble.n	80109f2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x18c>
 8010aa6:	e79e      	b.n	80109e6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 8010aa8:	2a02      	cmp	r2, #2
 8010aaa:	d105      	bne.n	8010ab8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 8010aac:	7be2      	ldrb	r2, [r4, #15]
 8010aae:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
 8010ab2:	1a80      	subs	r0, r0, r2
 8010ab4:	1ac0      	subs	r0, r0, r3
 8010ab6:	e7c0      	b.n	8010a3a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d4>
 8010ab8:	2000      	movs	r0, #0
 8010aba:	e7bf      	b.n	8010a3c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d6>
 8010abc:	7be0      	ldrb	r0, [r4, #15]
 8010abe:	e7bd      	b.n	8010a3c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d6>
 8010ac0:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8010ac4:	e7c3      	b.n	8010a4e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e8>
 8010ac6:	9b08      	ldr	r3, [sp, #32]
 8010ac8:	2b00      	cmp	r3, #0
 8010aca:	d0f7      	beq.n	8010abc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 8010acc:	2264      	movs	r2, #100	; 0x64
 8010ace:	4639      	mov	r1, r7
 8010ad0:	a84b      	add	r0, sp, #300	; 0x12c
 8010ad2:	f010 f895 	bl	8020c00 <memcpy>
 8010ad6:	2300      	movs	r3, #0
 8010ad8:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8010adc:	6821      	ldr	r1, [r4, #0]
 8010ade:	a84b      	add	r0, sp, #300	; 0x12c
 8010ae0:	f7ff fbee 	bl	80102c0 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 8010ae4:	b203      	sxth	r3, r0
 8010ae6:	e79f      	b.n	8010a28 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c2>

08010ae8 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 8010ae8:	2b03      	cmp	r3, #3
 8010aea:	d818      	bhi.n	8010b1e <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 8010aec:	e8df f003 	tbb	[pc, r3]
 8010af0:	130d0602 	.word	0x130d0602
 8010af4:	f9b0 2000 	ldrsh.w	r2, [r0]
 8010af8:	1850      	adds	r0, r2, r1
 8010afa:	4770      	bx	lr
 8010afc:	8803      	ldrh	r3, [r0, #0]
 8010afe:	8880      	ldrh	r0, [r0, #4]
 8010b00:	4418      	add	r0, r3
 8010b02:	b200      	sxth	r0, r0
 8010b04:	1a80      	subs	r0, r0, r2
 8010b06:	3801      	subs	r0, #1
 8010b08:	4770      	bx	lr
 8010b0a:	8803      	ldrh	r3, [r0, #0]
 8010b0c:	8880      	ldrh	r0, [r0, #4]
 8010b0e:	4418      	add	r0, r3
 8010b10:	b200      	sxth	r0, r0
 8010b12:	1a40      	subs	r0, r0, r1
 8010b14:	e7f7      	b.n	8010b06 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 8010b16:	f9b0 0000 	ldrsh.w	r0, [r0]
 8010b1a:	4410      	add	r0, r2
 8010b1c:	4770      	bx	lr
 8010b1e:	2000      	movs	r0, #0
 8010b20:	4770      	bx	lr

08010b22 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 8010b22:	2b03      	cmp	r3, #3
 8010b24:	d817      	bhi.n	8010b56 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 8010b26:	e8df f003 	tbb	[pc, r3]
 8010b2a:	0602      	.short	0x0602
 8010b2c:	1009      	.short	0x1009
 8010b2e:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8010b32:	1850      	adds	r0, r2, r1
 8010b34:	4770      	bx	lr
 8010b36:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8010b3a:	e7fa      	b.n	8010b32 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 8010b3c:	8843      	ldrh	r3, [r0, #2]
 8010b3e:	88c0      	ldrh	r0, [r0, #6]
 8010b40:	4418      	add	r0, r3
 8010b42:	b200      	sxth	r0, r0
 8010b44:	1a80      	subs	r0, r0, r2
 8010b46:	3801      	subs	r0, #1
 8010b48:	4770      	bx	lr
 8010b4a:	8843      	ldrh	r3, [r0, #2]
 8010b4c:	88c0      	ldrh	r0, [r0, #6]
 8010b4e:	4418      	add	r0, r3
 8010b50:	b200      	sxth	r0, r0
 8010b52:	1a40      	subs	r0, r0, r1
 8010b54:	e7f7      	b.n	8010b46 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 8010b56:	2000      	movs	r0, #0
 8010b58:	4770      	bx	lr
	...

08010b5c <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 8010b5c:	4b01      	ldr	r3, [pc, #4]	; (8010b64 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 8010b5e:	2200      	movs	r2, #0
 8010b60:	601a      	str	r2, [r3, #0]
 8010b62:	4770      	bx	lr
 8010b64:	20015614 	.word	0x20015614

08010b68 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 8010b68:	4603      	mov	r3, r0
 8010b6a:	b1c8      	cbz	r0, 8010ba0 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 8010b6c:	0c02      	lsrs	r2, r0, #16
 8010b6e:	0412      	lsls	r2, r2, #16
 8010b70:	b9a2      	cbnz	r2, 8010b9c <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 8010b72:	0403      	lsls	r3, r0, #16
 8010b74:	2010      	movs	r0, #16
 8010b76:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8010b7a:	bf04      	itt	eq
 8010b7c:	021b      	lsleq	r3, r3, #8
 8010b7e:	3008      	addeq	r0, #8
 8010b80:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8010b84:	bf04      	itt	eq
 8010b86:	011b      	lsleq	r3, r3, #4
 8010b88:	3004      	addeq	r0, #4
 8010b8a:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8010b8e:	bf04      	itt	eq
 8010b90:	009b      	lsleq	r3, r3, #2
 8010b92:	3002      	addeq	r0, #2
 8010b94:	2b00      	cmp	r3, #0
 8010b96:	db04      	blt.n	8010ba2 <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 8010b98:	3001      	adds	r0, #1
 8010b9a:	4770      	bx	lr
 8010b9c:	2000      	movs	r0, #0
 8010b9e:	e7ea      	b.n	8010b76 <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 8010ba0:	2020      	movs	r0, #32
 8010ba2:	4770      	bx	lr

08010ba4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 8010ba4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010ba8:	b087      	sub	sp, #28
 8010baa:	4681      	mov	r9, r0
 8010bac:	4698      	mov	r8, r3
 8010bae:	4610      	mov	r0, r2
 8010bb0:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 8010bb4:	460d      	mov	r5, r1
 8010bb6:	b981      	cbnz	r1, 8010bda <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x36>
 8010bb8:	b14b      	cbz	r3, 8010bce <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x2a>
 8010bba:	460b      	mov	r3, r1
 8010bbc:	e9cd 4700 	strd	r4, r7, [sp]
 8010bc0:	464a      	mov	r2, r9
 8010bc2:	4641      	mov	r1, r8
 8010bc4:	f7ff ffee 	bl	8010ba4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8010bc8:	b007      	add	sp, #28
 8010bca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010bce:	f04f 33ff 	mov.w	r3, #4294967295
 8010bd2:	603b      	str	r3, [r7, #0]
 8010bd4:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8010bd8:	e7f6      	b.n	8010bc8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 8010bda:	fa32 fa01 	lsrs.w	sl, r2, r1
 8010bde:	d107      	bne.n	8010bf0 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4c>
 8010be0:	fb09 f602 	mul.w	r6, r9, r2
 8010be4:	fbb6 f0f4 	udiv	r0, r6, r4
 8010be8:	fb04 6610 	mls	r6, r4, r0, r6
 8010bec:	603e      	str	r6, [r7, #0]
 8010bee:	e7eb      	b.n	8010bc8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 8010bf0:	2601      	movs	r6, #1
 8010bf2:	408e      	lsls	r6, r1
 8010bf4:	3e01      	subs	r6, #1
 8010bf6:	4016      	ands	r6, r2
 8010bf8:	fa09 fb01 	lsl.w	fp, r9, r1
 8010bfc:	4630      	mov	r0, r6
 8010bfe:	fbbb f3f4 	udiv	r3, fp, r4
 8010c02:	9302      	str	r3, [sp, #8]
 8010c04:	fb0a f303 	mul.w	r3, sl, r3
 8010c08:	9303      	str	r3, [sp, #12]
 8010c0a:	f7ff ffad 	bl	8010b68 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8010c0e:	464a      	mov	r2, r9
 8010c10:	460b      	mov	r3, r1
 8010c12:	e9cd 4700 	strd	r4, r7, [sp]
 8010c16:	4601      	mov	r1, r0
 8010c18:	4630      	mov	r0, r6
 8010c1a:	f7ff ffc3 	bl	8010ba4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8010c1e:	9b02      	ldr	r3, [sp, #8]
 8010c20:	fb04 bb13 	mls	fp, r4, r3, fp
 8010c24:	4606      	mov	r6, r0
 8010c26:	4658      	mov	r0, fp
 8010c28:	eb05 0108 	add.w	r1, r5, r8
 8010c2c:	f7ff ff9c 	bl	8010b68 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8010c30:	ab05      	add	r3, sp, #20
 8010c32:	e9cd 4300 	strd	r4, r3, [sp]
 8010c36:	465a      	mov	r2, fp
 8010c38:	4603      	mov	r3, r0
 8010c3a:	4650      	mov	r0, sl
 8010c3c:	f7ff ffb2 	bl	8010ba4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8010c40:	6839      	ldr	r1, [r7, #0]
 8010c42:	9a05      	ldr	r2, [sp, #20]
 8010c44:	9b03      	ldr	r3, [sp, #12]
 8010c46:	4411      	add	r1, r2
 8010c48:	fbb1 f2f4 	udiv	r2, r1, r4
 8010c4c:	18d3      	adds	r3, r2, r3
 8010c4e:	441e      	add	r6, r3
 8010c50:	fb04 1412 	mls	r4, r4, r2, r1
 8010c54:	4430      	add	r0, r6
 8010c56:	603c      	str	r4, [r7, #0]
 8010c58:	e7b6      	b.n	8010bc8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>

08010c5a <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 8010c5a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010c5e:	b085      	sub	sp, #20
 8010c60:	f1b0 0900 	subs.w	r9, r0, #0
 8010c64:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8010c66:	461d      	mov	r5, r3
 8010c68:	bfbf      	itttt	lt
 8010c6a:	6823      	ldrlt	r3, [r4, #0]
 8010c6c:	425b      	neglt	r3, r3
 8010c6e:	f1c9 0900 	rsblt	r9, r9, #0
 8010c72:	6023      	strlt	r3, [r4, #0]
 8010c74:	bfb4      	ite	lt
 8010c76:	f04f 36ff 	movlt.w	r6, #4294967295
 8010c7a:	2601      	movge	r6, #1
 8010c7c:	2a00      	cmp	r2, #0
 8010c7e:	4617      	mov	r7, r2
 8010c80:	da04      	bge.n	8010c8c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 8010c82:	6823      	ldr	r3, [r4, #0]
 8010c84:	425b      	negs	r3, r3
 8010c86:	4257      	negs	r7, r2
 8010c88:	4276      	negs	r6, r6
 8010c8a:	6023      	str	r3, [r4, #0]
 8010c8c:	2d00      	cmp	r5, #0
 8010c8e:	4638      	mov	r0, r7
 8010c90:	bfba      	itte	lt
 8010c92:	426d      	neglt	r5, r5
 8010c94:	f04f 38ff 	movlt.w	r8, #4294967295
 8010c98:	f04f 0801 	movge.w	r8, #1
 8010c9c:	f7ff ff64 	bl	8010b68 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8010ca0:	ab03      	add	r3, sp, #12
 8010ca2:	e9cd 5300 	strd	r5, r3, [sp]
 8010ca6:	463a      	mov	r2, r7
 8010ca8:	4603      	mov	r3, r0
 8010caa:	4648      	mov	r0, r9
 8010cac:	f7ff ff7a 	bl	8010ba4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8010cb0:	6823      	ldr	r3, [r4, #0]
 8010cb2:	9a03      	ldr	r2, [sp, #12]
 8010cb4:	4546      	cmp	r6, r8
 8010cb6:	441a      	add	r2, r3
 8010cb8:	fb92 f3f5 	sdiv	r3, r2, r5
 8010cbc:	4418      	add	r0, r3
 8010cbe:	bf18      	it	ne
 8010cc0:	4240      	negne	r0, r0
 8010cc2:	fb05 2313 	mls	r3, r5, r3, r2
 8010cc6:	1c72      	adds	r2, r6, #1
 8010cc8:	6023      	str	r3, [r4, #0]
 8010cca:	d105      	bne.n	8010cd8 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 8010ccc:	2b00      	cmp	r3, #0
 8010cce:	f1c3 0200 	rsb	r2, r3, #0
 8010cd2:	db0b      	blt.n	8010cec <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 8010cd4:	6022      	str	r2, [r4, #0]
 8010cd6:	e006      	b.n	8010ce6 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8010cd8:	2e01      	cmp	r6, #1
 8010cda:	d104      	bne.n	8010ce6 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8010cdc:	2b00      	cmp	r3, #0
 8010cde:	da02      	bge.n	8010ce6 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8010ce0:	442b      	add	r3, r5
 8010ce2:	3801      	subs	r0, #1
 8010ce4:	6023      	str	r3, [r4, #0]
 8010ce6:	b005      	add	sp, #20
 8010ce8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010cec:	3801      	subs	r0, #1
 8010cee:	1b52      	subs	r2, r2, r5
 8010cf0:	e7f0      	b.n	8010cd4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>
	...

08010cf4 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 8010cf4:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8010cf8:	4c1c      	ldr	r4, [pc, #112]	; (8010d6c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 8010cfa:	6807      	ldr	r7, [r0, #0]
 8010cfc:	69a3      	ldr	r3, [r4, #24]
 8010cfe:	4605      	mov	r5, r0
 8010d00:	b92b      	cbnz	r3, 8010d0e <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 8010d02:	6840      	ldr	r0, [r0, #4]
 8010d04:	e9c5 7000 	strd	r7, r0, [r5]
 8010d08:	b004      	add	sp, #16
 8010d0a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010d0e:	68a2      	ldr	r2, [r4, #8]
 8010d10:	6820      	ldr	r0, [r4, #0]
 8010d12:	ae04      	add	r6, sp, #16
 8010d14:	f04f 0802 	mov.w	r8, #2
 8010d18:	fb93 f1f8 	sdiv	r1, r3, r8
 8010d1c:	440a      	add	r2, r1
 8010d1e:	f846 2d04 	str.w	r2, [r6, #-4]!
 8010d22:	69e1      	ldr	r1, [r4, #28]
 8010d24:	9600      	str	r6, [sp, #0]
 8010d26:	463a      	mov	r2, r7
 8010d28:	f7ff ff97 	bl	8010c5a <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8010d2c:	69a3      	ldr	r3, [r4, #24]
 8010d2e:	686a      	ldr	r2, [r5, #4]
 8010d30:	6a21      	ldr	r1, [r4, #32]
 8010d32:	9600      	str	r6, [sp, #0]
 8010d34:	4607      	mov	r7, r0
 8010d36:	6860      	ldr	r0, [r4, #4]
 8010d38:	f7ff ff8f 	bl	8010c5a <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8010d3c:	6962      	ldr	r2, [r4, #20]
 8010d3e:	69a3      	ldr	r3, [r4, #24]
 8010d40:	fb93 f8f8 	sdiv	r8, r3, r8
 8010d44:	4442      	add	r2, r8
 8010d46:	9203      	str	r2, [sp, #12]
 8010d48:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8010d4a:	682a      	ldr	r2, [r5, #0]
 8010d4c:	9600      	str	r6, [sp, #0]
 8010d4e:	4407      	add	r7, r0
 8010d50:	68e0      	ldr	r0, [r4, #12]
 8010d52:	f7ff ff82 	bl	8010c5a <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8010d56:	9600      	str	r6, [sp, #0]
 8010d58:	4680      	mov	r8, r0
 8010d5a:	69a3      	ldr	r3, [r4, #24]
 8010d5c:	686a      	ldr	r2, [r5, #4]
 8010d5e:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 8010d60:	6920      	ldr	r0, [r4, #16]
 8010d62:	f7ff ff7a 	bl	8010c5a <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8010d66:	4440      	add	r0, r8
 8010d68:	e7cc      	b.n	8010d04 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 8010d6a:	bf00      	nop
 8010d6c:	20015618 	.word	0x20015618

08010d70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 8010d70:	4b07      	ldr	r3, [pc, #28]	; (8010d90 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 8010d72:	781b      	ldrb	r3, [r3, #0]
 8010d74:	2b01      	cmp	r3, #1
 8010d76:	d109      	bne.n	8010d8c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 8010d78:	f9b1 3000 	ldrsh.w	r3, [r1]
 8010d7c:	f9b0 2000 	ldrsh.w	r2, [r0]
 8010d80:	8003      	strh	r3, [r0, #0]
 8010d82:	4b04      	ldr	r3, [pc, #16]	; (8010d94 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 8010d84:	881b      	ldrh	r3, [r3, #0]
 8010d86:	3b01      	subs	r3, #1
 8010d88:	1a9b      	subs	r3, r3, r2
 8010d8a:	800b      	strh	r3, [r1, #0]
 8010d8c:	4770      	bx	lr
 8010d8e:	bf00      	nop
 8010d90:	200155fc 	.word	0x200155fc
 8010d94:	200155f8 	.word	0x200155f8

08010d98 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 8010d98:	b510      	push	{r4, lr}
 8010d9a:	4b07      	ldr	r3, [pc, #28]	; (8010db8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 8010d9c:	781b      	ldrb	r3, [r3, #0]
 8010d9e:	2b01      	cmp	r3, #1
 8010da0:	d108      	bne.n	8010db4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 8010da2:	4b06      	ldr	r3, [pc, #24]	; (8010dbc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 8010da4:	880c      	ldrh	r4, [r1, #0]
 8010da6:	881b      	ldrh	r3, [r3, #0]
 8010da8:	f9b0 2000 	ldrsh.w	r2, [r0]
 8010dac:	3b01      	subs	r3, #1
 8010dae:	1b1b      	subs	r3, r3, r4
 8010db0:	8003      	strh	r3, [r0, #0]
 8010db2:	800a      	strh	r2, [r1, #0]
 8010db4:	bd10      	pop	{r4, pc}
 8010db6:	bf00      	nop
 8010db8:	200155fc 	.word	0x200155fc
 8010dbc:	200155f8 	.word	0x200155f8

08010dc0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 8010dc0:	b510      	push	{r4, lr}
 8010dc2:	4b0a      	ldr	r3, [pc, #40]	; (8010dec <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 8010dc4:	781b      	ldrb	r3, [r3, #0]
 8010dc6:	2b01      	cmp	r3, #1
 8010dc8:	d10e      	bne.n	8010de8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 8010dca:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8010dce:	8843      	ldrh	r3, [r0, #2]
 8010dd0:	f9b0 4000 	ldrsh.w	r4, [r0]
 8010dd4:	8044      	strh	r4, [r0, #2]
 8010dd6:	18ca      	adds	r2, r1, r3
 8010dd8:	4b05      	ldr	r3, [pc, #20]	; (8010df0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 8010dda:	881b      	ldrh	r3, [r3, #0]
 8010ddc:	1a9b      	subs	r3, r3, r2
 8010dde:	8003      	strh	r3, [r0, #0]
 8010de0:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8010de4:	80c3      	strh	r3, [r0, #6]
 8010de6:	8081      	strh	r1, [r0, #4]
 8010de8:	bd10      	pop	{r4, pc}
 8010dea:	bf00      	nop
 8010dec:	200155fc 	.word	0x200155fc
 8010df0:	200155f8 	.word	0x200155f8

08010df4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 8010df4:	4b08      	ldr	r3, [pc, #32]	; (8010e18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 8010df6:	781b      	ldrb	r3, [r3, #0]
 8010df8:	2b01      	cmp	r3, #1
 8010dfa:	d10c      	bne.n	8010e16 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 8010dfc:	8803      	ldrh	r3, [r0, #0]
 8010dfe:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 8010e02:	8842      	ldrh	r2, [r0, #2]
 8010e04:	8002      	strh	r2, [r0, #0]
 8010e06:	185a      	adds	r2, r3, r1
 8010e08:	4b04      	ldr	r3, [pc, #16]	; (8010e1c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 8010e0a:	881b      	ldrh	r3, [r3, #0]
 8010e0c:	1a9b      	subs	r3, r3, r2
 8010e0e:	8043      	strh	r3, [r0, #2]
 8010e10:	88c3      	ldrh	r3, [r0, #6]
 8010e12:	8083      	strh	r3, [r0, #4]
 8010e14:	80c1      	strh	r1, [r0, #6]
 8010e16:	4770      	bx	lr
 8010e18:	200155fc 	.word	0x200155fc
 8010e1c:	200155f8 	.word	0x200155f8

08010e20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 8010e20:	b510      	push	{r4, lr}
 8010e22:	4b07      	ldr	r3, [pc, #28]	; (8010e40 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 8010e24:	781b      	ldrb	r3, [r3, #0]
 8010e26:	2b01      	cmp	r3, #1
 8010e28:	d108      	bne.n	8010e3c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 8010e2a:	f9b1 3000 	ldrsh.w	r3, [r1]
 8010e2e:	f9b0 4000 	ldrsh.w	r4, [r0]
 8010e32:	8003      	strh	r3, [r0, #0]
 8010e34:	8893      	ldrh	r3, [r2, #4]
 8010e36:	3b01      	subs	r3, #1
 8010e38:	1b1b      	subs	r3, r3, r4
 8010e3a:	800b      	strh	r3, [r1, #0]
 8010e3c:	bd10      	pop	{r4, pc}
 8010e3e:	bf00      	nop
 8010e40:	200155fc 	.word	0x200155fc

08010e44 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 8010e44:	b510      	push	{r4, lr}
 8010e46:	4b0a      	ldr	r3, [pc, #40]	; (8010e70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 8010e48:	781b      	ldrb	r3, [r3, #0]
 8010e4a:	2b01      	cmp	r3, #1
 8010e4c:	460a      	mov	r2, r1
 8010e4e:	d10d      	bne.n	8010e6c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 8010e50:	8881      	ldrh	r1, [r0, #4]
 8010e52:	8803      	ldrh	r3, [r0, #0]
 8010e54:	440b      	add	r3, r1
 8010e56:	4601      	mov	r1, r0
 8010e58:	3b01      	subs	r3, #1
 8010e5a:	f821 3b02 	strh.w	r3, [r1], #2
 8010e5e:	f7ff ffdf 	bl	8010e20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 8010e62:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8010e66:	88c2      	ldrh	r2, [r0, #6]
 8010e68:	8082      	strh	r2, [r0, #4]
 8010e6a:	80c3      	strh	r3, [r0, #6]
 8010e6c:	bd10      	pop	{r4, pc}
 8010e6e:	bf00      	nop
 8010e70:	200155fc 	.word	0x200155fc

08010e74 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 8010e74:	b570      	push	{r4, r5, r6, lr}
 8010e76:	4c0b      	ldr	r4, [pc, #44]	; (8010ea4 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 8010e78:	2300      	movs	r3, #0
 8010e7a:	4605      	mov	r5, r0
 8010e7c:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 8010e80:	6820      	ldr	r0, [r4, #0]
 8010e82:	460e      	mov	r6, r1
 8010e84:	b110      	cbz	r0, 8010e8c <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x18>
 8010e86:	6803      	ldr	r3, [r0, #0]
 8010e88:	695b      	ldr	r3, [r3, #20]
 8010e8a:	4798      	blx	r3
 8010e8c:	6026      	str	r6, [r4, #0]
 8010e8e:	6833      	ldr	r3, [r6, #0]
 8010e90:	4630      	mov	r0, r6
 8010e92:	68db      	ldr	r3, [r3, #12]
 8010e94:	4798      	blx	r3
 8010e96:	682b      	ldr	r3, [r5, #0]
 8010e98:	4628      	mov	r0, r5
 8010e9a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8010e9c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010ea0:	4718      	bx	r3
 8010ea2:	bf00      	nop
 8010ea4:	20015648 	.word	0x20015648

08010ea8 <_ZN8touchgfx11Application13requestRedrawEv>:
 8010ea8:	4b06      	ldr	r3, [pc, #24]	; (8010ec4 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 8010eaa:	f9b3 2000 	ldrsh.w	r2, [r3]
 8010eae:	4b06      	ldr	r3, [pc, #24]	; (8010ec8 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 8010eb0:	f8a0 2130 	strh.w	r2, [r0, #304]	; 0x130
 8010eb4:	f9b3 3000 	ldrsh.w	r3, [r3]
 8010eb8:	f8a0 3132 	strh.w	r3, [r0, #306]	; 0x132
 8010ebc:	2100      	movs	r1, #0
 8010ebe:	f8c0 112c 	str.w	r1, [r0, #300]	; 0x12c
 8010ec2:	4770      	bx	lr
 8010ec4:	200155f8 	.word	0x200155f8
 8010ec8:	200155fa 	.word	0x200155fa

08010ecc <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 8010ecc:	4b03      	ldr	r3, [pc, #12]	; (8010edc <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 8010ece:	6818      	ldr	r0, [r3, #0]
 8010ed0:	b110      	cbz	r0, 8010ed8 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 8010ed2:	6803      	ldr	r3, [r0, #0]
 8010ed4:	699b      	ldr	r3, [r3, #24]
 8010ed6:	4718      	bx	r3
 8010ed8:	4770      	bx	lr
 8010eda:	bf00      	nop
 8010edc:	20015648 	.word	0x20015648

08010ee0 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 8010ee0:	4770      	bx	lr
	...

08010ee4 <_ZN8touchgfx11Application4drawEv>:
 8010ee4:	b507      	push	{r0, r1, r2, lr}
 8010ee6:	4b09      	ldr	r3, [pc, #36]	; (8010f0c <_ZN8touchgfx11Application4drawEv+0x28>)
 8010ee8:	f9b3 2000 	ldrsh.w	r2, [r3]
 8010eec:	4b08      	ldr	r3, [pc, #32]	; (8010f10 <_ZN8touchgfx11Application4drawEv+0x2c>)
 8010eee:	f8ad 2004 	strh.w	r2, [sp, #4]
 8010ef2:	f9b3 3000 	ldrsh.w	r3, [r3]
 8010ef6:	f8ad 3006 	strh.w	r3, [sp, #6]
 8010efa:	6803      	ldr	r3, [r0, #0]
 8010efc:	2100      	movs	r1, #0
 8010efe:	9100      	str	r1, [sp, #0]
 8010f00:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8010f02:	4669      	mov	r1, sp
 8010f04:	4798      	blx	r3
 8010f06:	b003      	add	sp, #12
 8010f08:	f85d fb04 	ldr.w	pc, [sp], #4
 8010f0c:	200155f8 	.word	0x200155f8
 8010f10:	200155fa 	.word	0x200155fa

08010f14 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 8010f14:	4b03      	ldr	r3, [pc, #12]	; (8010f24 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 8010f16:	6818      	ldr	r0, [r3, #0]
 8010f18:	b110      	cbz	r0, 8010f20 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 8010f1a:	6803      	ldr	r3, [r0, #0]
 8010f1c:	69db      	ldr	r3, [r3, #28]
 8010f1e:	4718      	bx	r3
 8010f20:	4770      	bx	lr
 8010f22:	bf00      	nop
 8010f24:	20015648 	.word	0x20015648

08010f28 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 8010f28:	4b03      	ldr	r3, [pc, #12]	; (8010f38 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 8010f2a:	6818      	ldr	r0, [r3, #0]
 8010f2c:	b110      	cbz	r0, 8010f34 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 8010f2e:	6803      	ldr	r3, [r0, #0]
 8010f30:	6a1b      	ldr	r3, [r3, #32]
 8010f32:	4718      	bx	r3
 8010f34:	4770      	bx	lr
 8010f36:	bf00      	nop
 8010f38:	20015648 	.word	0x20015648

08010f3c <_ZN8touchgfx11Application16clearCachedAreasEv>:
 8010f3c:	2300      	movs	r3, #0
 8010f3e:	f8a0 30e8 	strh.w	r3, [r0, #232]	; 0xe8
 8010f42:	4770      	bx	lr

08010f44 <_ZN8touchgfx11Application14handleKeyEventEh>:
 8010f44:	4b03      	ldr	r3, [pc, #12]	; (8010f54 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 8010f46:	6818      	ldr	r0, [r3, #0]
 8010f48:	b110      	cbz	r0, 8010f50 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 8010f4a:	6803      	ldr	r3, [r0, #0]
 8010f4c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8010f4e:	4718      	bx	r3
 8010f50:	4770      	bx	lr
 8010f52:	bf00      	nop
 8010f54:	20015648 	.word	0x20015648

08010f58 <_ZN8touchgfx11Application15handleTickEventEv>:
 8010f58:	b570      	push	{r4, r5, r6, lr}
 8010f5a:	4d32      	ldr	r5, [pc, #200]	; (8011024 <_ZN8touchgfx11Application15handleTickEventEv+0xcc>)
 8010f5c:	4604      	mov	r4, r0
 8010f5e:	6828      	ldr	r0, [r5, #0]
 8010f60:	b140      	cbz	r0, 8010f74 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8010f62:	7a03      	ldrb	r3, [r0, #8]
 8010f64:	b933      	cbnz	r3, 8010f74 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8010f66:	f884 3134 	strb.w	r3, [r4, #308]	; 0x134
 8010f6a:	6803      	ldr	r3, [r0, #0]
 8010f6c:	689b      	ldr	r3, [r3, #8]
 8010f6e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010f72:	4718      	bx	r3
 8010f74:	f894 3134 	ldrb.w	r3, [r4, #308]	; 0x134
 8010f78:	b97b      	cbnz	r3, 8010f9a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8010f7a:	b170      	cbz	r0, 8010f9a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8010f7c:	7a03      	ldrb	r3, [r0, #8]
 8010f7e:	b163      	cbz	r3, 8010f9a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8010f80:	4b29      	ldr	r3, [pc, #164]	; (8011028 <_ZN8touchgfx11Application15handleTickEventEv+0xd0>)
 8010f82:	6818      	ldr	r0, [r3, #0]
 8010f84:	b110      	cbz	r0, 8010f8c <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 8010f86:	6803      	ldr	r3, [r0, #0]
 8010f88:	691b      	ldr	r3, [r3, #16]
 8010f8a:	4798      	blx	r3
 8010f8c:	6828      	ldr	r0, [r5, #0]
 8010f8e:	6803      	ldr	r3, [r0, #0]
 8010f90:	68db      	ldr	r3, [r3, #12]
 8010f92:	4798      	blx	r3
 8010f94:	2301      	movs	r3, #1
 8010f96:	f884 3134 	strb.w	r3, [r4, #308]	; 0x134
 8010f9a:	2500      	movs	r5, #0
 8010f9c:	f8b4 0084 	ldrh.w	r0, [r4, #132]	; 0x84
 8010fa0:	42a8      	cmp	r0, r5
 8010fa2:	dd0c      	ble.n	8010fbe <_ZN8touchgfx11Application15handleTickEventEv+0x66>
 8010fa4:	1963      	adds	r3, r4, r5
 8010fa6:	f893 2088 	ldrb.w	r2, [r3, #136]	; 0x88
 8010faa:	b132      	cbz	r2, 8010fba <_ZN8touchgfx11Application15handleTickEventEv+0x62>
 8010fac:	eb05 0245 	add.w	r2, r5, r5, lsl #1
 8010fb0:	4413      	add	r3, r2
 8010fb2:	6858      	ldr	r0, [r3, #4]
 8010fb4:	6803      	ldr	r3, [r0, #0]
 8010fb6:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8010fb8:	4798      	blx	r3
 8010fba:	3501      	adds	r5, #1
 8010fbc:	e7ee      	b.n	8010f9c <_ZN8touchgfx11Application15handleTickEventEv+0x44>
 8010fbe:	2300      	movs	r3, #0
 8010fc0:	461a      	mov	r2, r3
 8010fc2:	4298      	cmp	r0, r3
 8010fc4:	d015      	beq.n	8010ff2 <_ZN8touchgfx11Application15handleTickEventEv+0x9a>
 8010fc6:	18e1      	adds	r1, r4, r3
 8010fc8:	f891 5088 	ldrb.w	r5, [r1, #136]	; 0x88
 8010fcc:	b16d      	cbz	r5, 8010fea <_ZN8touchgfx11Application15handleTickEventEv+0x92>
 8010fce:	429a      	cmp	r2, r3
 8010fd0:	d00a      	beq.n	8010fe8 <_ZN8touchgfx11Application15handleTickEventEv+0x90>
 8010fd2:	eb03 0643 	add.w	r6, r3, r3, lsl #1
 8010fd6:	4431      	add	r1, r6
 8010fd8:	684e      	ldr	r6, [r1, #4]
 8010fda:	b291      	uxth	r1, r2
 8010fdc:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 8010fe0:	604e      	str	r6, [r1, #4]
 8010fe2:	18a1      	adds	r1, r4, r2
 8010fe4:	f881 5088 	strb.w	r5, [r1, #136]	; 0x88
 8010fe8:	3201      	adds	r2, #1
 8010fea:	3301      	adds	r3, #1
 8010fec:	e7e9      	b.n	8010fc2 <_ZN8touchgfx11Application15handleTickEventEv+0x6a>
 8010fee:	f8a4 3084 	strh.w	r3, [r4, #132]	; 0x84
 8010ff2:	f8b4 5084 	ldrh.w	r5, [r4, #132]	; 0x84
 8010ff6:	4295      	cmp	r5, r2
 8010ff8:	dd0d      	ble.n	8011016 <_ZN8touchgfx11Application15handleTickEventEv+0xbe>
 8010ffa:	1e6b      	subs	r3, r5, #1
 8010ffc:	b29b      	uxth	r3, r3
 8010ffe:	eb04 0183 	add.w	r1, r4, r3, lsl #2
 8011002:	4618      	mov	r0, r3
 8011004:	3104      	adds	r1, #4
 8011006:	4285      	cmp	r5, r0
 8011008:	ddf1      	ble.n	8010fee <_ZN8touchgfx11Application15handleTickEventEv+0x96>
 801100a:	f851 6f04 	ldr.w	r6, [r1, #4]!
 801100e:	f841 6c04 	str.w	r6, [r1, #-4]
 8011012:	3001      	adds	r0, #1
 8011014:	e7f7      	b.n	8011006 <_ZN8touchgfx11Application15handleTickEventEv+0xae>
 8011016:	4b04      	ldr	r3, [pc, #16]	; (8011028 <_ZN8touchgfx11Application15handleTickEventEv+0xd0>)
 8011018:	6818      	ldr	r0, [r3, #0]
 801101a:	b110      	cbz	r0, 8011022 <_ZN8touchgfx11Application15handleTickEventEv+0xca>
 801101c:	6803      	ldr	r3, [r0, #0]
 801101e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011020:	e7a5      	b.n	8010f6e <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 8011022:	bd70      	pop	{r4, r5, r6, pc}
 8011024:	2001564c 	.word	0x2001564c
 8011028:	20015648 	.word	0x20015648

0801102c <_ZN8touchgfx11ApplicationD1Ev>:
 801102c:	4770      	bx	lr

0801102e <_ZN8touchgfx11ApplicationD0Ev>:
 801102e:	b510      	push	{r4, lr}
 8011030:	f44f 719c 	mov.w	r1, #312	; 0x138
 8011034:	4604      	mov	r4, r0
 8011036:	f00f fbb7 	bl	80207a8 <_ZdlPvj>
 801103a:	4620      	mov	r0, r4
 801103c:	bd10      	pop	{r4, pc}

0801103e <_ZNK8touchgfx4Rect9intersectERKS0_>:
 801103e:	b510      	push	{r4, lr}
 8011040:	f9b1 4000 	ldrsh.w	r4, [r1]
 8011044:	888a      	ldrh	r2, [r1, #4]
 8011046:	f9b0 3000 	ldrsh.w	r3, [r0]
 801104a:	4422      	add	r2, r4
 801104c:	b212      	sxth	r2, r2
 801104e:	4293      	cmp	r3, r2
 8011050:	da15      	bge.n	801107e <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8011052:	8882      	ldrh	r2, [r0, #4]
 8011054:	4413      	add	r3, r2
 8011056:	b21b      	sxth	r3, r3
 8011058:	429c      	cmp	r4, r3
 801105a:	da10      	bge.n	801107e <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 801105c:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 8011060:	88c9      	ldrh	r1, [r1, #6]
 8011062:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8011066:	4419      	add	r1, r3
 8011068:	b209      	sxth	r1, r1
 801106a:	428a      	cmp	r2, r1
 801106c:	da07      	bge.n	801107e <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 801106e:	88c0      	ldrh	r0, [r0, #6]
 8011070:	4410      	add	r0, r2
 8011072:	b200      	sxth	r0, r0
 8011074:	4283      	cmp	r3, r0
 8011076:	bfac      	ite	ge
 8011078:	2000      	movge	r0, #0
 801107a:	2001      	movlt	r0, #1
 801107c:	bd10      	pop	{r4, pc}
 801107e:	2000      	movs	r0, #0
 8011080:	e7fc      	b.n	801107c <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

08011082 <_ZN8touchgfx4Rect10restrictToEss>:
 8011082:	f9b0 3000 	ldrsh.w	r3, [r0]
 8011086:	2b00      	cmp	r3, #0
 8011088:	b510      	push	{r4, lr}
 801108a:	da04      	bge.n	8011096 <_ZN8touchgfx4Rect10restrictToEss+0x14>
 801108c:	8884      	ldrh	r4, [r0, #4]
 801108e:	4423      	add	r3, r4
 8011090:	8083      	strh	r3, [r0, #4]
 8011092:	2300      	movs	r3, #0
 8011094:	8003      	strh	r3, [r0, #0]
 8011096:	f9b0 4000 	ldrsh.w	r4, [r0]
 801109a:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 801109e:	1b09      	subs	r1, r1, r4
 80110a0:	428b      	cmp	r3, r1
 80110a2:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 80110a6:	bfc8      	it	gt
 80110a8:	8081      	strhgt	r1, [r0, #4]
 80110aa:	2b00      	cmp	r3, #0
 80110ac:	da04      	bge.n	80110b8 <_ZN8touchgfx4Rect10restrictToEss+0x36>
 80110ae:	88c1      	ldrh	r1, [r0, #6]
 80110b0:	440b      	add	r3, r1
 80110b2:	80c3      	strh	r3, [r0, #6]
 80110b4:	2300      	movs	r3, #0
 80110b6:	8043      	strh	r3, [r0, #2]
 80110b8:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 80110bc:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 80110c0:	1a52      	subs	r2, r2, r1
 80110c2:	4293      	cmp	r3, r2
 80110c4:	bfc8      	it	gt
 80110c6:	80c2      	strhgt	r2, [r0, #6]
 80110c8:	bd10      	pop	{r4, pc}
	...

080110cc <_ZN8touchgfx11Application4drawERNS_4RectE>:
 80110cc:	b510      	push	{r4, lr}
 80110ce:	4b10      	ldr	r3, [pc, #64]	; (8011110 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 80110d0:	f9b3 2000 	ldrsh.w	r2, [r3]
 80110d4:	4b0f      	ldr	r3, [pc, #60]	; (8011114 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 80110d6:	460c      	mov	r4, r1
 80110d8:	4620      	mov	r0, r4
 80110da:	f9b3 1000 	ldrsh.w	r1, [r3]
 80110de:	f7ff ffd0 	bl	8011082 <_ZN8touchgfx4Rect10restrictToEss>
 80110e2:	4b0d      	ldr	r3, [pc, #52]	; (8011118 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 80110e4:	6818      	ldr	r0, [r3, #0]
 80110e6:	b190      	cbz	r0, 801110e <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 80110e8:	6803      	ldr	r3, [r0, #0]
 80110ea:	4621      	mov	r1, r4
 80110ec:	689b      	ldr	r3, [r3, #8]
 80110ee:	4798      	blx	r3
 80110f0:	4b0a      	ldr	r3, [pc, #40]	; (801111c <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 80110f2:	6818      	ldr	r0, [r3, #0]
 80110f4:	b118      	cbz	r0, 80110fe <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 80110f6:	6803      	ldr	r3, [r0, #0]
 80110f8:	4621      	mov	r1, r4
 80110fa:	689b      	ldr	r3, [r3, #8]
 80110fc:	4798      	blx	r3
 80110fe:	4b08      	ldr	r3, [pc, #32]	; (8011120 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 8011100:	6818      	ldr	r0, [r3, #0]
 8011102:	6803      	ldr	r3, [r0, #0]
 8011104:	4621      	mov	r1, r4
 8011106:	69db      	ldr	r3, [r3, #28]
 8011108:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801110c:	4718      	bx	r3
 801110e:	bd10      	pop	{r4, pc}
 8011110:	200155fa 	.word	0x200155fa
 8011114:	200155f8 	.word	0x200155f8
 8011118:	20015648 	.word	0x20015648
 801111c:	20015644 	.word	0x20015644
 8011120:	20015604 	.word	0x20015604

08011124 <_ZNK8touchgfx4Rect8includesERKS0_>:
 8011124:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8011126:	4606      	mov	r6, r0
 8011128:	4608      	mov	r0, r1
 801112a:	460f      	mov	r7, r1
 801112c:	f7f9 fed1 	bl	800aed2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011130:	b9e8      	cbnz	r0, 801116e <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8011132:	f9b7 5000 	ldrsh.w	r5, [r7]
 8011136:	f9b6 4000 	ldrsh.w	r4, [r6]
 801113a:	42a5      	cmp	r5, r4
 801113c:	db17      	blt.n	801116e <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 801113e:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 8011142:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 8011146:	429a      	cmp	r2, r3
 8011148:	db11      	blt.n	801116e <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 801114a:	88b9      	ldrh	r1, [r7, #4]
 801114c:	440d      	add	r5, r1
 801114e:	88b1      	ldrh	r1, [r6, #4]
 8011150:	440c      	add	r4, r1
 8011152:	b22d      	sxth	r5, r5
 8011154:	b224      	sxth	r4, r4
 8011156:	42a5      	cmp	r5, r4
 8011158:	dc09      	bgt.n	801116e <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 801115a:	88f8      	ldrh	r0, [r7, #6]
 801115c:	4410      	add	r0, r2
 801115e:	88f2      	ldrh	r2, [r6, #6]
 8011160:	4413      	add	r3, r2
 8011162:	b200      	sxth	r0, r0
 8011164:	b21b      	sxth	r3, r3
 8011166:	4298      	cmp	r0, r3
 8011168:	bfcc      	ite	gt
 801116a:	2000      	movgt	r0, #0
 801116c:	2001      	movle	r0, #1
 801116e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08011170 <_ZN8touchgfx11Application11getInstanceEv>:
 8011170:	4b01      	ldr	r3, [pc, #4]	; (8011178 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 8011172:	6818      	ldr	r0, [r3, #0]
 8011174:	4770      	bx	lr
 8011176:	bf00      	nop
 8011178:	20015658 	.word	0x20015658

0801117c <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>:
 801117c:	2300      	movs	r3, #0
 801117e:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 8011182:	f100 0288 	add.w	r2, r0, #136	; 0x88
 8011186:	30a8      	adds	r0, #168	; 0xa8
 8011188:	f802 3b01 	strb.w	r3, [r2], #1
 801118c:	4282      	cmp	r2, r0
 801118e:	d1fb      	bne.n	8011188 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv+0xc>
 8011190:	4770      	bx	lr

08011192 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 8011192:	4603      	mov	r3, r0
 8011194:	f100 0140 	add.w	r1, r0, #64	; 0x40
 8011198:	2200      	movs	r2, #0
 801119a:	801a      	strh	r2, [r3, #0]
 801119c:	805a      	strh	r2, [r3, #2]
 801119e:	809a      	strh	r2, [r3, #4]
 80111a0:	80da      	strh	r2, [r3, #6]
 80111a2:	3308      	adds	r3, #8
 80111a4:	428b      	cmp	r3, r1
 80111a6:	d1f8      	bne.n	801119a <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 80111a8:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 80111ac:	4770      	bx	lr
	...

080111b0 <_ZN8touchgfx11ApplicationC1Ev>:
 80111b0:	b570      	push	{r4, r5, r6, lr}
 80111b2:	4b19      	ldr	r3, [pc, #100]	; (8011218 <_ZN8touchgfx11ApplicationC1Ev+0x68>)
 80111b4:	6003      	str	r3, [r0, #0]
 80111b6:	2500      	movs	r5, #0
 80111b8:	4604      	mov	r4, r0
 80111ba:	f8a0 5084 	strh.w	r5, [r0, #132]	; 0x84
 80111be:	30a8      	adds	r0, #168	; 0xa8
 80111c0:	f7ff ffe7 	bl	8011192 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 80111c4:	f104 00ea 	add.w	r0, r4, #234	; 0xea
 80111c8:	f7ff ffe3 	bl	8011192 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 80111cc:	f8a4 512c 	strh.w	r5, [r4, #300]	; 0x12c
 80111d0:	f8a4 512e 	strh.w	r5, [r4, #302]	; 0x12e
 80111d4:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 80111d8:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 80111dc:	f884 5134 	strb.w	r5, [r4, #308]	; 0x134
 80111e0:	490e      	ldr	r1, [pc, #56]	; (801121c <_ZN8touchgfx11ApplicationC1Ev+0x6c>)
 80111e2:	480f      	ldr	r0, [pc, #60]	; (8011220 <_ZN8touchgfx11ApplicationC1Ev+0x70>)
 80111e4:	4e0f      	ldr	r6, [pc, #60]	; (8011224 <_ZN8touchgfx11ApplicationC1Ev+0x74>)
 80111e6:	f00e fec3 	bl	801ff70 <CRC_Lock>
 80111ea:	4b0f      	ldr	r3, [pc, #60]	; (8011228 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 80111ec:	b158      	cbz	r0, 8011206 <_ZN8touchgfx11ApplicationC1Ev+0x56>
 80111ee:	801d      	strh	r5, [r3, #0]
 80111f0:	4a0e      	ldr	r2, [pc, #56]	; (801122c <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 80111f2:	2300      	movs	r3, #0
 80111f4:	6013      	str	r3, [r2, #0]
 80111f6:	4a0e      	ldr	r2, [pc, #56]	; (8011230 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 80111f8:	6033      	str	r3, [r6, #0]
 80111fa:	4620      	mov	r0, r4
 80111fc:	6013      	str	r3, [r2, #0]
 80111fe:	f7ff ffbd 	bl	801117c <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
 8011202:	4620      	mov	r0, r4
 8011204:	bd70      	pop	{r4, r5, r6, pc}
 8011206:	f44f 6280 	mov.w	r2, #1024	; 0x400
 801120a:	2002      	movs	r0, #2
 801120c:	801a      	strh	r2, [r3, #0]
 801120e:	6030      	str	r0, [r6, #0]
 8011210:	f001 fae8 	bl	80127e4 <_ZN8touchgfx6Screen4drawEv>
 8011214:	e7ec      	b.n	80111f0 <_ZN8touchgfx11ApplicationC1Ev+0x40>
 8011216:	bf00      	nop
 8011218:	08024360 	.word	0x08024360
 801121c:	b5e8b5cd 	.word	0xb5e8b5cd
 8011220:	f407a5c2 	.word	0xf407a5c2
 8011224:	20015648 	.word	0x20015648
 8011228:	2000008c 	.word	0x2000008c
 801122c:	20015658 	.word	0x20015658
 8011230:	2001564c 	.word	0x2001564c

08011234 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 8011234:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 8011238:	3b01      	subs	r3, #1
 801123a:	b29b      	uxth	r3, r3
 801123c:	428b      	cmp	r3, r1
 801123e:	b510      	push	{r4, lr}
 8011240:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 8011244:	d908      	bls.n	8011258 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 8011246:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 801124a:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 801124e:	681a      	ldr	r2, [r3, #0]
 8011250:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 8011254:	685a      	ldr	r2, [r3, #4]
 8011256:	6062      	str	r2, [r4, #4]
 8011258:	bd10      	pop	{r4, pc}
	...

0801125c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 801125c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011260:	4b94      	ldr	r3, [pc, #592]	; (80114b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>)
 8011262:	b08f      	sub	sp, #60	; 0x3c
 8011264:	ac0a      	add	r4, sp, #40	; 0x28
 8011266:	e884 0006 	stmia.w	r4, {r1, r2}
 801126a:	f9b3 2000 	ldrsh.w	r2, [r3]
 801126e:	4b92      	ldr	r3, [pc, #584]	; (80114b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x25c>)
 8011270:	4683      	mov	fp, r0
 8011272:	f9b3 1000 	ldrsh.w	r1, [r3]
 8011276:	4620      	mov	r0, r4
 8011278:	f7ff ff03 	bl	8011082 <_ZN8touchgfx4Rect10restrictToEss>
 801127c:	4620      	mov	r0, r4
 801127e:	f7f9 fe28 	bl	800aed2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011282:	2800      	cmp	r0, #0
 8011284:	d16a      	bne.n	801135c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8011286:	9403      	str	r4, [sp, #12]
 8011288:	f8bb 50e8 	ldrh.w	r5, [fp, #232]	; 0xe8
 801128c:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 8011290:	eb0b 06c5 	add.w	r6, fp, r5, lsl #3
 8011294:	2400      	movs	r4, #0
 8011296:	9301      	str	r3, [sp, #4]
 8011298:	36a0      	adds	r6, #160	; 0xa0
 801129a:	42a5      	cmp	r5, r4
 801129c:	d00d      	beq.n	80112ba <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5e>
 801129e:	eba6 01c4 	sub.w	r1, r6, r4, lsl #3
 80112a2:	9803      	ldr	r0, [sp, #12]
 80112a4:	f7ff ff3e 	bl	8011124 <_ZNK8touchgfx4Rect8includesERKS0_>
 80112a8:	b128      	cbz	r0, 80112b6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a>
 80112aa:	1e69      	subs	r1, r5, #1
 80112ac:	1b09      	subs	r1, r1, r4
 80112ae:	b289      	uxth	r1, r1
 80112b0:	9801      	ldr	r0, [sp, #4]
 80112b2:	f7ff ffbf 	bl	8011234 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80112b6:	3401      	adds	r4, #1
 80112b8:	e7ef      	b.n	801129a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3e>
 80112ba:	f8bb 70e8 	ldrh.w	r7, [fp, #232]	; 0xe8
 80112be:	9704      	str	r7, [sp, #16]
 80112c0:	1e7b      	subs	r3, r7, #1
 80112c2:	9302      	str	r3, [sp, #8]
 80112c4:	eb0b 0ac7 	add.w	sl, fp, r7, lsl #3
 80112c8:	2400      	movs	r4, #0
 80112ca:	4655      	mov	r5, sl
 80112cc:	9705      	str	r7, [sp, #20]
 80112ce:	4626      	mov	r6, r4
 80112d0:	9b05      	ldr	r3, [sp, #20]
 80112d2:	2b00      	cmp	r3, #0
 80112d4:	d078      	beq.n	80113c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x16c>
 80112d6:	9903      	ldr	r1, [sp, #12]
 80112d8:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 80112dc:	f7ff feaf 	bl	801103e <_ZNK8touchgfx4Rect9intersectERKS0_>
 80112e0:	b360      	cbz	r0, 801133c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 80112e2:	f9bd e028 	ldrsh.w	lr, [sp, #40]	; 0x28
 80112e6:	f9b5 c0a0 	ldrsh.w	ip, [r5, #160]	; 0xa0
 80112ea:	f9bd 902a 	ldrsh.w	r9, [sp, #42]	; 0x2a
 80112ee:	f9b5 80a2 	ldrsh.w	r8, [r5, #162]	; 0xa2
 80112f2:	45e6      	cmp	lr, ip
 80112f4:	db35      	blt.n	8011362 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 80112f6:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 80112fa:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 80112fe:	4472      	add	r2, lr
 8011300:	4463      	add	r3, ip
 8011302:	b212      	sxth	r2, r2
 8011304:	b21b      	sxth	r3, r3
 8011306:	429a      	cmp	r2, r3
 8011308:	dc2b      	bgt.n	8011362 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 801130a:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 801130e:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8011312:	fa1f f288 	uxth.w	r2, r8
 8011316:	4413      	add	r3, r2
 8011318:	b29b      	uxth	r3, r3
 801131a:	45c1      	cmp	r9, r8
 801131c:	fa0f fe83 	sxth.w	lr, r3
 8011320:	fa1f fc89 	uxth.w	ip, r9
 8011324:	db0f      	blt.n	8011346 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 8011326:	eba3 030c 	sub.w	r3, r3, ip
 801132a:	1ac9      	subs	r1, r1, r3
 801132c:	b209      	sxth	r1, r1
 801132e:	2900      	cmp	r1, #0
 8011330:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8011334:	dd12      	ble.n	801135c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8011336:	f8ad e02a 	strh.w	lr, [sp, #42]	; 0x2a
 801133a:	4604      	mov	r4, r0
 801133c:	9b05      	ldr	r3, [sp, #20]
 801133e:	3b01      	subs	r3, #1
 8011340:	9305      	str	r3, [sp, #20]
 8011342:	3d08      	subs	r5, #8
 8011344:	e7c4      	b.n	80112d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x74>
 8011346:	4461      	add	r1, ip
 8011348:	b209      	sxth	r1, r1
 801134a:	4571      	cmp	r1, lr
 801134c:	dc3a      	bgt.n	80113c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 801134e:	eba2 020c 	sub.w	r2, r2, ip
 8011352:	b212      	sxth	r2, r2
 8011354:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 8011358:	2a00      	cmp	r2, #0
 801135a:	dcee      	bgt.n	801133a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 801135c:	b00f      	add	sp, #60	; 0x3c
 801135e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011362:	45c1      	cmp	r9, r8
 8011364:	db2e      	blt.n	80113c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 8011366:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 801136a:	4499      	add	r9, r3
 801136c:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 8011370:	4498      	add	r8, r3
 8011372:	fa0f f989 	sxth.w	r9, r9
 8011376:	fa0f f888 	sxth.w	r8, r8
 801137a:	45c1      	cmp	r9, r8
 801137c:	dc22      	bgt.n	80113c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 801137e:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 8011382:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8011386:	fa1f f28c 	uxth.w	r2, ip
 801138a:	4413      	add	r3, r2
 801138c:	b29b      	uxth	r3, r3
 801138e:	45e6      	cmp	lr, ip
 8011390:	fa1f f88e 	uxth.w	r8, lr
 8011394:	fa0f f983 	sxth.w	r9, r3
 8011398:	db0a      	blt.n	80113b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x154>
 801139a:	eba3 0308 	sub.w	r3, r3, r8
 801139e:	1ac9      	subs	r1, r1, r3
 80113a0:	b209      	sxth	r1, r1
 80113a2:	2900      	cmp	r1, #0
 80113a4:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 80113a8:	ddd8      	ble.n	801135c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80113aa:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 80113ae:	e7c4      	b.n	801133a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 80113b0:	4441      	add	r1, r8
 80113b2:	b209      	sxth	r1, r1
 80113b4:	4549      	cmp	r1, r9
 80113b6:	dc05      	bgt.n	80113c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 80113b8:	eba2 0208 	sub.w	r2, r2, r8
 80113bc:	b212      	sxth	r2, r2
 80113be:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 80113c2:	e7c9      	b.n	8011358 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 80113c4:	4606      	mov	r6, r0
 80113c6:	e7b9      	b.n	801133c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 80113c8:	2c00      	cmp	r4, #0
 80113ca:	f47f af7d 	bne.w	80112c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c>
 80113ce:	2e00      	cmp	r6, #0
 80113d0:	f000 81e1 	beq.w	8011796 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53a>
 80113d4:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	; 0x2a
 80113d8:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	; 0x28
 80113dc:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 80113e0:	b2b9      	uxth	r1, r7
 80113e2:	9105      	str	r1, [sp, #20]
 80113e4:	9805      	ldr	r0, [sp, #20]
 80113e6:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 80113ea:	4401      	add	r1, r0
 80113ec:	b2b3      	uxth	r3, r6
 80113ee:	b289      	uxth	r1, r1
 80113f0:	441a      	add	r2, r3
 80113f2:	9106      	str	r1, [sp, #24]
 80113f4:	b292      	uxth	r2, r2
 80113f6:	f9bd 9018 	ldrsh.w	r9, [sp, #24]
 80113fa:	fa0f f882 	sxth.w	r8, r2
 80113fe:	4655      	mov	r5, sl
 8011400:	e9cd 2307 	strd	r2, r3, [sp, #28]
 8011404:	9b04      	ldr	r3, [sp, #16]
 8011406:	2b00      	cmp	r3, #0
 8011408:	d058      	beq.n	80114bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x260>
 801140a:	9903      	ldr	r1, [sp, #12]
 801140c:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 8011410:	f7ff fe15 	bl	801103e <_ZNK8touchgfx4Rect9intersectERKS0_>
 8011414:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 8011418:	b1d8      	cbz	r0, 8011452 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 801141a:	f9b5 e0a0 	ldrsh.w	lr, [r5, #160]	; 0xa0
 801141e:	f9b5 10a2 	ldrsh.w	r1, [r5, #162]	; 0xa2
 8011422:	4576      	cmp	r6, lr
 8011424:	dc26      	bgt.n	8011474 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x218>
 8011426:	f8b5 c0a4 	ldrh.w	ip, [r5, #164]	; 0xa4
 801142a:	44f4      	add	ip, lr
 801142c:	fa0f fc8c 	sxth.w	ip, ip
 8011430:	45e0      	cmp	r8, ip
 8011432:	db1f      	blt.n	8011474 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x218>
 8011434:	428f      	cmp	r7, r1
 8011436:	fa1f fc81 	uxth.w	ip, r1
 801143a:	f8b5 10a6 	ldrh.w	r1, [r5, #166]	; 0xa6
 801143e:	dc0f      	bgt.n	8011460 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x204>
 8011440:	9806      	ldr	r0, [sp, #24]
 8011442:	f8a5 90a2 	strh.w	r9, [r5, #162]	; 0xa2
 8011446:	eba0 0c0c 	sub.w	ip, r0, ip
 801144a:	eba1 010c 	sub.w	r1, r1, ip
 801144e:	f8a5 10a6 	strh.w	r1, [r5, #166]	; 0xa6
 8011452:	4620      	mov	r0, r4
 8011454:	9904      	ldr	r1, [sp, #16]
 8011456:	3901      	subs	r1, #1
 8011458:	9104      	str	r1, [sp, #16]
 801145a:	3d08      	subs	r5, #8
 801145c:	4604      	mov	r4, r0
 801145e:	e7cf      	b.n	8011400 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a4>
 8011460:	4461      	add	r1, ip
 8011462:	b209      	sxth	r1, r1
 8011464:	4549      	cmp	r1, r9
 8011466:	dcf5      	bgt.n	8011454 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 8011468:	9905      	ldr	r1, [sp, #20]
 801146a:	eba1 0c0c 	sub.w	ip, r1, ip
 801146e:	f8a5 c0a6 	strh.w	ip, [r5, #166]	; 0xa6
 8011472:	e7ee      	b.n	8011452 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 8011474:	428f      	cmp	r7, r1
 8011476:	dced      	bgt.n	8011454 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 8011478:	f8b5 c0a6 	ldrh.w	ip, [r5, #166]	; 0xa6
 801147c:	4461      	add	r1, ip
 801147e:	b209      	sxth	r1, r1
 8011480:	4589      	cmp	r9, r1
 8011482:	dbe7      	blt.n	8011454 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 8011484:	4576      	cmp	r6, lr
 8011486:	fa1f fc8e 	uxth.w	ip, lr
 801148a:	f8b5 10a4 	ldrh.w	r1, [r5, #164]	; 0xa4
 801148e:	dc08      	bgt.n	80114a2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x246>
 8011490:	eba2 0c0c 	sub.w	ip, r2, ip
 8011494:	eba1 010c 	sub.w	r1, r1, ip
 8011498:	f8a5 80a0 	strh.w	r8, [r5, #160]	; 0xa0
 801149c:	f8a5 10a4 	strh.w	r1, [r5, #164]	; 0xa4
 80114a0:	e7d7      	b.n	8011452 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 80114a2:	4461      	add	r1, ip
 80114a4:	b209      	sxth	r1, r1
 80114a6:	4588      	cmp	r8, r1
 80114a8:	dbd4      	blt.n	8011454 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 80114aa:	eba3 0c0c 	sub.w	ip, r3, ip
 80114ae:	f8a5 c0a4 	strh.w	ip, [r5, #164]	; 0xa4
 80114b2:	e7ce      	b.n	8011452 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 80114b4:	200155fa 	.word	0x200155fa
 80114b8:	200155f8 	.word	0x200155f8
 80114bc:	2c00      	cmp	r4, #0
 80114be:	f000 816a 	beq.w	8011796 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53a>
 80114c2:	9b02      	ldr	r3, [sp, #8]
 80114c4:	3301      	adds	r3, #1
 80114c6:	f000 8166 	beq.w	8011796 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53a>
 80114ca:	f10a 04a0 	add.w	r4, sl, #160	; 0xa0
 80114ce:	4621      	mov	r1, r4
 80114d0:	9803      	ldr	r0, [sp, #12]
 80114d2:	f7ff fe27 	bl	8011124 <_ZNK8touchgfx4Rect8includesERKS0_>
 80114d6:	b120      	cbz	r0, 80114e2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x286>
 80114d8:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 80114dc:	9801      	ldr	r0, [sp, #4]
 80114de:	f7ff fea9 	bl	8011234 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80114e2:	9903      	ldr	r1, [sp, #12]
 80114e4:	4620      	mov	r0, r4
 80114e6:	f7ff fdaa 	bl	801103e <_ZNK8touchgfx4Rect9intersectERKS0_>
 80114ea:	2800      	cmp	r0, #0
 80114ec:	f000 809b 	beq.w	8011626 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ca>
 80114f0:	f9ba 00a0 	ldrsh.w	r0, [sl, #160]	; 0xa0
 80114f4:	f9ba 30a4 	ldrsh.w	r3, [sl, #164]	; 0xa4
 80114f8:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 80114fc:	9309      	str	r3, [sp, #36]	; 0x24
 80114fe:	b281      	uxth	r1, r0
 8011500:	eb01 0c03 	add.w	ip, r1, r3
 8011504:	fa1f f98c 	uxth.w	r9, ip
 8011508:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 801150c:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	; 0x2a
 8011510:	f9ba 20a2 	ldrsh.w	r2, [sl, #162]	; 0xa2
 8011514:	b2ab      	uxth	r3, r5
 8011516:	eb03 040c 	add.w	r4, r3, ip
 801151a:	b2a4      	uxth	r4, r4
 801151c:	9405      	str	r4, [sp, #20]
 801151e:	f9bd 4014 	ldrsh.w	r4, [sp, #20]
 8011522:	9404      	str	r4, [sp, #16]
 8011524:	4285      	cmp	r5, r0
 8011526:	f8bb 40e8 	ldrh.w	r4, [fp, #232]	; 0xe8
 801152a:	f340 809a 	ble.w	8011662 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x406>
 801152e:	1a5b      	subs	r3, r3, r1
 8011530:	b29b      	uxth	r3, r3
 8011532:	4596      	cmp	lr, r2
 8011534:	fa0f f589 	sxth.w	r5, r9
 8011538:	b21e      	sxth	r6, r3
 801153a:	dd2e      	ble.n	801159a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x33e>
 801153c:	9f02      	ldr	r7, [sp, #8]
 801153e:	f8bd 002e 	ldrh.w	r0, [sp, #46]	; 0x2e
 8011542:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 8011546:	9f04      	ldr	r7, [sp, #16]
 8011548:	1b7f      	subs	r7, r7, r5
 801154a:	f8b8 50ae 	ldrh.w	r5, [r8, #174]	; 0xae
 801154e:	fa1f fe8e 	uxth.w	lr, lr
 8011552:	b292      	uxth	r2, r2
 8011554:	ebae 0102 	sub.w	r1, lr, r2
 8011558:	4486      	add	lr, r0
 801155a:	442a      	add	r2, r5
 801155c:	b289      	uxth	r1, r1
 801155e:	fa0f fe8e 	sxth.w	lr, lr
 8011562:	b212      	sxth	r2, r2
 8011564:	b20c      	sxth	r4, r1
 8011566:	ebae 0202 	sub.w	r2, lr, r2
 801156a:	4367      	muls	r7, r4
 801156c:	4372      	muls	r2, r6
 801156e:	4297      	cmp	r7, r2
 8011570:	db09      	blt.n	8011586 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x32a>
 8011572:	f8b8 20a8 	ldrh.w	r2, [r8, #168]	; 0xa8
 8011576:	f8a8 40ae 	strh.w	r4, [r8, #174]	; 0xae
 801157a:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801157e:	449c      	add	ip, r3
 8011580:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8011584:	e680      	b.n	8011288 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8011586:	4401      	add	r1, r0
 8011588:	f8b8 30aa 	ldrh.w	r3, [r8, #170]	; 0xaa
 801158c:	f8a8 60ac 	strh.w	r6, [r8, #172]	; 0xac
 8011590:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8011594:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8011598:	e676      	b.n	8011288 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 801159a:	9f04      	ldr	r7, [sp, #16]
 801159c:	42bd      	cmp	r5, r7
 801159e:	da27      	bge.n	80115f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x394>
 80115a0:	9902      	ldr	r1, [sp, #8]
 80115a2:	f8bd 402e 	ldrh.w	r4, [sp, #46]	; 0x2e
 80115a6:	eb0b 00c1 	add.w	r0, fp, r1, lsl #3
 80115aa:	eb04 010e 	add.w	r1, r4, lr
 80115ae:	fa1f f881 	uxth.w	r8, r1
 80115b2:	f8b0 10ae 	ldrh.w	r1, [r0, #174]	; 0xae
 80115b6:	4411      	add	r1, r2
 80115b8:	eba1 0108 	sub.w	r1, r1, r8
 80115bc:	b289      	uxth	r1, r1
 80115be:	fa0f f988 	sxth.w	r9, r8
 80115c2:	eba2 020e 	sub.w	r2, r2, lr
 80115c6:	fa0f f881 	sxth.w	r8, r1
 80115ca:	1b7f      	subs	r7, r7, r5
 80115cc:	4372      	muls	r2, r6
 80115ce:	fb08 f707 	mul.w	r7, r8, r7
 80115d2:	42ba      	cmp	r2, r7
 80115d4:	dc06      	bgt.n	80115e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 80115d6:	f8a0 90aa 	strh.w	r9, [r0, #170]	; 0xaa
 80115da:	f8a0 80ae 	strh.w	r8, [r0, #174]	; 0xae
 80115de:	f8b0 20a8 	ldrh.w	r2, [r0, #168]	; 0xa8
 80115e2:	e7ca      	b.n	801157a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 80115e4:	f8a0 60ac 	strh.w	r6, [r0, #172]	; 0xac
 80115e8:	4421      	add	r1, r4
 80115ea:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 80115ee:	e64b      	b.n	8011288 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80115f0:	9d05      	ldr	r5, [sp, #20]
 80115f2:	eba9 0505 	sub.w	r5, r9, r5
 80115f6:	b2ad      	uxth	r5, r5
 80115f8:	2c06      	cmp	r4, #6
 80115fa:	fa0f fe85 	sxth.w	lr, r5
 80115fe:	d818      	bhi.n	8011632 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3d6>
 8011600:	9b04      	ldr	r3, [sp, #16]
 8011602:	f8aa 30a0 	strh.w	r3, [sl, #160]	; 0xa0
 8011606:	1c63      	adds	r3, r4, #1
 8011608:	f9ba 10a6 	ldrsh.w	r1, [sl, #166]	; 0xa6
 801160c:	f8aa e0a4 	strh.w	lr, [sl, #164]	; 0xa4
 8011610:	f8ab 30e8 	strh.w	r3, [fp, #232]	; 0xe8
 8011614:	9b01      	ldr	r3, [sp, #4]
 8011616:	9d01      	ldr	r5, [sp, #4]
 8011618:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 801161c:	f825 0034 	strh.w	r0, [r5, r4, lsl #3]
 8011620:	805a      	strh	r2, [r3, #2]
 8011622:	809e      	strh	r6, [r3, #4]
 8011624:	80d9      	strh	r1, [r3, #6]
 8011626:	9b02      	ldr	r3, [sp, #8]
 8011628:	3b01      	subs	r3, #1
 801162a:	9302      	str	r3, [sp, #8]
 801162c:	f1aa 0a08 	sub.w	sl, sl, #8
 8011630:	e747      	b.n	80114c2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x266>
 8011632:	9a02      	ldr	r2, [sp, #8]
 8011634:	45b6      	cmp	lr, r6
 8011636:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 801163a:	db0d      	blt.n	8011658 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3fc>
 801163c:	449c      	add	ip, r3
 801163e:	fa1f fc8c 	uxth.w	ip, ip
 8011642:	445a      	add	r2, fp
 8011644:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8011648:	448c      	add	ip, r1
 801164a:	f8ad 0028 	strh.w	r0, [sp, #40]	; 0x28
 801164e:	f8a2 c0a8 	strh.w	ip, [r2, #168]	; 0xa8
 8011652:	f8a2 e0ac 	strh.w	lr, [r2, #172]	; 0xac
 8011656:	e617      	b.n	8011288 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8011658:	445a      	add	r2, fp
 801165a:	44ac      	add	ip, r5
 801165c:	f8a2 60ac 	strh.w	r6, [r2, #172]	; 0xac
 8011660:	e78e      	b.n	8011580 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x324>
 8011662:	f8bd 602e 	ldrh.w	r6, [sp, #46]	; 0x2e
 8011666:	fa1f f18e 	uxth.w	r1, lr
 801166a:	eb01 0806 	add.w	r8, r1, r6
 801166e:	b293      	uxth	r3, r2
 8011670:	fa1f f888 	uxth.w	r8, r8
 8011674:	9306      	str	r3, [sp, #24]
 8011676:	fa0f f388 	sxth.w	r3, r8
 801167a:	9307      	str	r3, [sp, #28]
 801167c:	9f06      	ldr	r7, [sp, #24]
 801167e:	f8ba 30a6 	ldrh.w	r3, [sl, #166]	; 0xa6
 8011682:	443b      	add	r3, r7
 8011684:	b29b      	uxth	r3, r3
 8011686:	4596      	cmp	lr, r2
 8011688:	9308      	str	r3, [sp, #32]
 801168a:	da25      	bge.n	80116d8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x47c>
 801168c:	9905      	ldr	r1, [sp, #20]
 801168e:	eba3 0308 	sub.w	r3, r3, r8
 8011692:	eba9 0401 	sub.w	r4, r9, r1
 8011696:	b2a4      	uxth	r4, r4
 8011698:	b29b      	uxth	r3, r3
 801169a:	fa0f f984 	sxth.w	r9, r4
 801169e:	b219      	sxth	r1, r3
 80116a0:	eba2 020e 	sub.w	r2, r2, lr
 80116a4:	1b40      	subs	r0, r0, r5
 80116a6:	fb09 f202 	mul.w	r2, r9, r2
 80116aa:	4348      	muls	r0, r1
 80116ac:	4282      	cmp	r2, r0
 80116ae:	9a02      	ldr	r2, [sp, #8]
 80116b0:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 80116b4:	445a      	add	r2, fp
 80116b6:	dc06      	bgt.n	80116c6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46a>
 80116b8:	9b07      	ldr	r3, [sp, #28]
 80116ba:	f8a2 10ae 	strh.w	r1, [r2, #174]	; 0xae
 80116be:	f8a2 30aa 	strh.w	r3, [r2, #170]	; 0xaa
 80116c2:	44a4      	add	ip, r4
 80116c4:	e75c      	b.n	8011580 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x324>
 80116c6:	9904      	ldr	r1, [sp, #16]
 80116c8:	f8a2 90ac 	strh.w	r9, [r2, #172]	; 0xac
 80116cc:	f8a2 10a8 	strh.w	r1, [r2, #168]	; 0xa8
 80116d0:	4433      	add	r3, r6
 80116d2:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 80116d6:	e5d7      	b.n	8011288 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80116d8:	9f06      	ldr	r7, [sp, #24]
 80116da:	9b04      	ldr	r3, [sp, #16]
 80116dc:	1bc9      	subs	r1, r1, r7
 80116de:	fa0f f789 	sxth.w	r7, r9
 80116e2:	b289      	uxth	r1, r1
 80116e4:	429f      	cmp	r7, r3
 80116e6:	fa0f fe81 	sxth.w	lr, r1
 80116ea:	dd22      	ble.n	8011732 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4d6>
 80116ec:	9a05      	ldr	r2, [sp, #20]
 80116ee:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 80116f2:	1b40      	subs	r0, r0, r5
 80116f4:	eba9 0202 	sub.w	r2, r9, r2
 80116f8:	9d07      	ldr	r5, [sp, #28]
 80116fa:	b292      	uxth	r2, r2
 80116fc:	eba5 0a03 	sub.w	sl, r5, r3
 8011700:	b214      	sxth	r4, r2
 8011702:	9b02      	ldr	r3, [sp, #8]
 8011704:	fb0e f000 	mul.w	r0, lr, r0
 8011708:	fb04 fa0a 	mul.w	sl, r4, sl
 801170c:	00db      	lsls	r3, r3, #3
 801170e:	4550      	cmp	r0, sl
 8011710:	445b      	add	r3, fp
 8011712:	db03      	blt.n	801171c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c0>
 8011714:	f8a3 e0ae 	strh.w	lr, [r3, #174]	; 0xae
 8011718:	4494      	add	ip, r2
 801171a:	e731      	b.n	8011580 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x324>
 801171c:	9a04      	ldr	r2, [sp, #16]
 801171e:	f8a3 20a8 	strh.w	r2, [r3, #168]	; 0xa8
 8011722:	f8a3 40ac 	strh.w	r4, [r3, #172]	; 0xac
 8011726:	f8b3 30aa 	ldrh.w	r3, [r3, #170]	; 0xaa
 801172a:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801172e:	4431      	add	r1, r6
 8011730:	e75b      	b.n	80115ea <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38e>
 8011732:	9b08      	ldr	r3, [sp, #32]
 8011734:	eba3 0308 	sub.w	r3, r3, r8
 8011738:	b29b      	uxth	r3, r3
 801173a:	2c06      	cmp	r4, #6
 801173c:	b21d      	sxth	r5, r3
 801173e:	d813      	bhi.n	8011768 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x50c>
 8011740:	9b07      	ldr	r3, [sp, #28]
 8011742:	f8aa 30a2 	strh.w	r3, [sl, #162]	; 0xa2
 8011746:	1c63      	adds	r3, r4, #1
 8011748:	f8aa 50a6 	strh.w	r5, [sl, #166]	; 0xa6
 801174c:	f8ab 30e8 	strh.w	r3, [fp, #232]	; 0xe8
 8011750:	9b01      	ldr	r3, [sp, #4]
 8011752:	9901      	ldr	r1, [sp, #4]
 8011754:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8011758:	f821 0034 	strh.w	r0, [r1, r4, lsl #3]
 801175c:	805a      	strh	r2, [r3, #2]
 801175e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8011760:	809a      	strh	r2, [r3, #4]
 8011762:	f8a3 e006 	strh.w	lr, [r3, #6]
 8011766:	e75e      	b.n	8011626 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ca>
 8011768:	9802      	ldr	r0, [sp, #8]
 801176a:	4575      	cmp	r5, lr
 801176c:	ea4f 00c0 	mov.w	r0, r0, lsl #3
 8011770:	db0d      	blt.n	801178e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x532>
 8011772:	4431      	add	r1, r6
 8011774:	9b06      	ldr	r3, [sp, #24]
 8011776:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 801177a:	b289      	uxth	r1, r1
 801177c:	4458      	add	r0, fp
 801177e:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8011782:	4419      	add	r1, r3
 8011784:	f8a0 10aa 	strh.w	r1, [r0, #170]	; 0xaa
 8011788:	f8a0 50ae 	strh.w	r5, [r0, #174]	; 0xae
 801178c:	e57c      	b.n	8011288 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 801178e:	4458      	add	r0, fp
 8011790:	f8a0 e0ae 	strh.w	lr, [r0, #174]	; 0xae
 8011794:	e79c      	b.n	80116d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x474>
 8011796:	f8bb 60e8 	ldrh.w	r6, [fp, #232]	; 0xe8
 801179a:	2e07      	cmp	r6, #7
 801179c:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 80117a0:	d812      	bhi.n	80117c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56c>
 80117a2:	1c75      	adds	r5, r6, #1
 80117a4:	f8ab 50e8 	strh.w	r5, [fp, #232]	; 0xe8
 80117a8:	9d01      	ldr	r5, [sp, #4]
 80117aa:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 80117ae:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 80117b2:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 80117b6:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 80117ba:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 80117be:	442c      	add	r4, r5
 80117c0:	8061      	strh	r1, [r4, #2]
 80117c2:	80a2      	strh	r2, [r4, #4]
 80117c4:	80e3      	strh	r3, [r4, #6]
 80117c6:	e5c9      	b.n	801135c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80117c8:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 80117cc:	3e01      	subs	r6, #1
 80117ce:	445c      	add	r4, fp
 80117d0:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 80117d4:	f04f 37ff 	mov.w	r7, #4294967295
 80117d8:	2500      	movs	r5, #0
 80117da:	9305      	str	r3, [sp, #20]
 80117dc:	f9b4 30a4 	ldrsh.w	r3, [r4, #164]	; 0xa4
 80117e0:	9302      	str	r3, [sp, #8]
 80117e2:	1e72      	subs	r2, r6, #1
 80117e4:	f9b4 30a6 	ldrsh.w	r3, [r4, #166]	; 0xa6
 80117e8:	9304      	str	r3, [sp, #16]
 80117ea:	4691      	mov	r9, r2
 80117ec:	f104 03a0 	add.w	r3, r4, #160	; 0xa0
 80117f0:	f1b9 3fff 	cmp.w	r9, #4294967295
 80117f4:	bf14      	ite	ne
 80117f6:	9905      	ldrne	r1, [sp, #20]
 80117f8:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 80117fc:	6818      	ldr	r0, [r3, #0]
 80117fe:	9207      	str	r2, [sp, #28]
 8011800:	bf18      	it	ne
 8011802:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 8011806:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 801180a:	f8be 1006 	ldrh.w	r1, [lr, #6]
 801180e:	f8be 8004 	ldrh.w	r8, [lr, #4]
 8011812:	9306      	str	r3, [sp, #24]
 8011814:	fb18 f801 	smulbb	r8, r8, r1
 8011818:	6859      	ldr	r1, [r3, #4]
 801181a:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 801181e:	4671      	mov	r1, lr
 8011820:	a80c      	add	r0, sp, #48	; 0x30
 8011822:	f7fb f87b 	bl	800c91c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8011826:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 801182a:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 801182e:	9b04      	ldr	r3, [sp, #16]
 8011830:	9a02      	ldr	r2, [sp, #8]
 8011832:	fb10 f001 	smulbb	r0, r0, r1
 8011836:	fb02 8803 	mla	r8, r2, r3, r8
 801183a:	eba0 0108 	sub.w	r1, r0, r8
 801183e:	f04f 0c08 	mov.w	ip, #8
 8011842:	fb90 f0fc 	sdiv	r0, r0, ip
 8011846:	4288      	cmp	r0, r1
 8011848:	dc20      	bgt.n	801188c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x630>
 801184a:	4551      	cmp	r1, sl
 801184c:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 8011850:	da03      	bge.n	801185a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fe>
 8011852:	b1d9      	cbz	r1, 801188c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x630>
 8011854:	468a      	mov	sl, r1
 8011856:	464f      	mov	r7, r9
 8011858:	4635      	mov	r5, r6
 801185a:	f109 39ff 	add.w	r9, r9, #4294967295
 801185e:	f119 0f02 	cmn.w	r9, #2
 8011862:	d1c5      	bne.n	80117f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8011864:	4616      	mov	r6, r2
 8011866:	3201      	adds	r2, #1
 8011868:	f1a4 0408 	sub.w	r4, r4, #8
 801186c:	d1b6      	bne.n	80117dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x580>
 801186e:	9b01      	ldr	r3, [sp, #4]
 8011870:	b2ac      	uxth	r4, r5
 8011872:	00ed      	lsls	r5, r5, #3
 8011874:	1958      	adds	r0, r3, r5
 8011876:	1c7b      	adds	r3, r7, #1
 8011878:	d10b      	bne.n	8011892 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x636>
 801187a:	4601      	mov	r1, r0
 801187c:	9803      	ldr	r0, [sp, #12]
 801187e:	f7fb f84d 	bl	800c91c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8011882:	4621      	mov	r1, r4
 8011884:	9801      	ldr	r0, [sp, #4]
 8011886:	f7ff fcd5 	bl	8011234 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801188a:	e4fd      	b.n	8011288 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 801188c:	464f      	mov	r7, r9
 801188e:	4635      	mov	r5, r6
 8011890:	e7ed      	b.n	801186e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x612>
 8011892:	9b01      	ldr	r3, [sp, #4]
 8011894:	00ff      	lsls	r7, r7, #3
 8011896:	19d9      	adds	r1, r3, r7
 8011898:	f7fb f840 	bl	800c91c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 801189c:	9b03      	ldr	r3, [sp, #12]
 801189e:	cb03      	ldmia	r3!, {r0, r1}
 80118a0:	445f      	add	r7, fp
 80118a2:	445d      	add	r5, fp
 80118a4:	f8c7 00a8 	str.w	r0, [r7, #168]	; 0xa8
 80118a8:	f8c7 10ac 	str.w	r1, [r7, #172]	; 0xac
 80118ac:	f855 0fa8 	ldr.w	r0, [r5, #168]!
 80118b0:	9b03      	ldr	r3, [sp, #12]
 80118b2:	6869      	ldr	r1, [r5, #4]
 80118b4:	c303      	stmia	r3!, {r0, r1}
 80118b6:	e7e4      	b.n	8011882 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x626>

080118b8 <_ZN8touchgfx11Application10invalidateEv>:
 80118b8:	4b09      	ldr	r3, [pc, #36]	; (80118e0 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 80118ba:	f9b3 2000 	ldrsh.w	r2, [r3]
 80118be:	4b09      	ldr	r3, [pc, #36]	; (80118e4 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 80118c0:	b082      	sub	sp, #8
 80118c2:	f9b3 3000 	ldrsh.w	r3, [r3]
 80118c6:	f8ad 3006 	strh.w	r3, [sp, #6]
 80118ca:	2100      	movs	r1, #0
 80118cc:	9100      	str	r1, [sp, #0]
 80118ce:	f8ad 2004 	strh.w	r2, [sp, #4]
 80118d2:	ab02      	add	r3, sp, #8
 80118d4:	e913 0006 	ldmdb	r3, {r1, r2}
 80118d8:	b002      	add	sp, #8
 80118da:	f7ff bcbf 	b.w	801125c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 80118de:	bf00      	nop
 80118e0:	200155f8 	.word	0x200155f8
 80118e4:	200155fa 	.word	0x200155fa

080118e8 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 80118e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80118ec:	f500 7696 	add.w	r6, r0, #300	; 0x12c
 80118f0:	b09b      	sub	sp, #108	; 0x6c
 80118f2:	4604      	mov	r4, r0
 80118f4:	4630      	mov	r0, r6
 80118f6:	f7f9 faec 	bl	800aed2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80118fa:	4605      	mov	r5, r0
 80118fc:	b940      	cbnz	r0, 8011910 <_ZN8touchgfx11Application15drawCachedAreasEv+0x28>
 80118fe:	e896 0006 	ldmia.w	r6, {r1, r2}
 8011902:	4620      	mov	r0, r4
 8011904:	f7ff fcaa 	bl	801125c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 8011908:	f8c4 512c 	str.w	r5, [r4, #300]	; 0x12c
 801190c:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 8011910:	4bc9      	ldr	r3, [pc, #804]	; (8011c38 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8011912:	681b      	ldr	r3, [r3, #0]
 8011914:	2b00      	cmp	r3, #0
 8011916:	d03e      	beq.n	8011996 <_ZN8touchgfx11Application15drawCachedAreasEv+0xae>
 8011918:	4dc8      	ldr	r5, [pc, #800]	; (8011c3c <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 801191a:	4628      	mov	r0, r5
 801191c:	f7f9 fad9 	bl	800aed2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011920:	4606      	mov	r6, r0
 8011922:	2800      	cmp	r0, #0
 8011924:	d137      	bne.n	8011996 <_ZN8touchgfx11Application15drawCachedAreasEv+0xae>
 8011926:	4628      	mov	r0, r5
 8011928:	f7ff fa4a 	bl	8010dc0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 801192c:	6829      	ldr	r1, [r5, #0]
 801192e:	686a      	ldr	r2, [r5, #4]
 8011930:	4620      	mov	r0, r4
 8011932:	f7ff fc93 	bl	801125c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 8011936:	802e      	strh	r6, [r5, #0]
 8011938:	806e      	strh	r6, [r5, #2]
 801193a:	80ae      	strh	r6, [r5, #4]
 801193c:	80ee      	strh	r6, [r5, #6]
 801193e:	ae09      	add	r6, sp, #36	; 0x24
 8011940:	4630      	mov	r0, r6
 8011942:	f7ff fc26 	bl	8011192 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8011946:	4abe      	ldr	r2, [pc, #760]	; (8011c40 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 8011948:	f8b4 70e8 	ldrh.w	r7, [r4, #232]	; 0xe8
 801194c:	8815      	ldrh	r5, [r2, #0]
 801194e:	9202      	str	r2, [sp, #8]
 8011950:	462b      	mov	r3, r5
 8011952:	f104 00a8 	add.w	r0, r4, #168	; 0xa8
 8011956:	429f      	cmp	r7, r3
 8011958:	d924      	bls.n	80119a4 <_ZN8touchgfx11Application15drawCachedAreasEv+0xbc>
 801195a:	f8bd 1064 	ldrh.w	r1, [sp, #100]	; 0x64
 801195e:	2907      	cmp	r1, #7
 8011960:	d816      	bhi.n	8011990 <_ZN8touchgfx11Application15drawCachedAreasEv+0xa8>
 8011962:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 8011966:	f930 8033 	ldrsh.w	r8, [r0, r3, lsl #3]
 801196a:	f9b2 9002 	ldrsh.w	r9, [r2, #2]
 801196e:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 8011972:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 8011976:	1c4a      	adds	r2, r1, #1
 8011978:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
 801197c:	eb06 02c1 	add.w	r2, r6, r1, lsl #3
 8011980:	f826 8031 	strh.w	r8, [r6, r1, lsl #3]
 8011984:	f8a2 9002 	strh.w	r9, [r2, #2]
 8011988:	f8a2 e004 	strh.w	lr, [r2, #4]
 801198c:	f8a2 c006 	strh.w	ip, [r2, #6]
 8011990:	3301      	adds	r3, #1
 8011992:	b29b      	uxth	r3, r3
 8011994:	e7df      	b.n	8011956 <_ZN8touchgfx11Application15drawCachedAreasEv+0x6e>
 8011996:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 801199a:	2b00      	cmp	r3, #0
 801199c:	d1cf      	bne.n	801193e <_ZN8touchgfx11Application15drawCachedAreasEv+0x56>
 801199e:	b01b      	add	sp, #108	; 0x6c
 80119a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80119a4:	462f      	mov	r7, r5
 80119a6:	f8b4 312a 	ldrh.w	r3, [r4, #298]	; 0x12a
 80119aa:	42bb      	cmp	r3, r7
 80119ac:	d90b      	bls.n	80119c6 <_ZN8touchgfx11Application15drawCachedAreasEv+0xde>
 80119ae:	eb04 03c7 	add.w	r3, r4, r7, lsl #3
 80119b2:	4620      	mov	r0, r4
 80119b4:	f8d3 10ea 	ldr.w	r1, [r3, #234]	; 0xea
 80119b8:	f8d3 20ee 	ldr.w	r2, [r3, #238]	; 0xee
 80119bc:	3701      	adds	r7, #1
 80119be:	f7ff fc4d 	bl	801125c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 80119c2:	b2bf      	uxth	r7, r7
 80119c4:	e7ef      	b.n	80119a6 <_ZN8touchgfx11Application15drawCachedAreasEv+0xbe>
 80119c6:	4a9f      	ldr	r2, [pc, #636]	; (8011c44 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 80119c8:	6813      	ldr	r3, [r2, #0]
 80119ca:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 80119ce:	2b01      	cmp	r3, #1
 80119d0:	4690      	mov	r8, r2
 80119d2:	f040 80e6 	bne.w	8011ba2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ba>
 80119d6:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
 80119da:	f8b4 70e8 	ldrh.w	r7, [r4, #232]	; 0xe8
 80119de:	4629      	mov	r1, r5
 80119e0:	33aa      	adds	r3, #170	; 0xaa
 80119e2:	2500      	movs	r5, #0
 80119e4:	428f      	cmp	r7, r1
 80119e6:	f103 0308 	add.w	r3, r3, #8
 80119ea:	dd0a      	ble.n	8011a02 <_ZN8touchgfx11Application15drawCachedAreasEv+0x11a>
 80119ec:	f833 2c08 	ldrh.w	r2, [r3, #-8]
 80119f0:	f833 0c04 	ldrh.w	r0, [r3, #-4]
 80119f4:	4402      	add	r2, r0
 80119f6:	b212      	sxth	r2, r2
 80119f8:	4295      	cmp	r5, r2
 80119fa:	bfb8      	it	lt
 80119fc:	4615      	movlt	r5, r2
 80119fe:	3101      	adds	r1, #1
 8011a00:	e7f0      	b.n	80119e4 <_ZN8touchgfx11Application15drawCachedAreasEv+0xfc>
 8011a02:	4b91      	ldr	r3, [pc, #580]	; (8011c48 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 8011a04:	f8df b23c 	ldr.w	fp, [pc, #572]	; 8011c44 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>
 8011a08:	881b      	ldrh	r3, [r3, #0]
 8011a0a:	2b0f      	cmp	r3, #15
 8011a0c:	bf88      	it	hi
 8011a0e:	ea4f 0ad3 	movhi.w	sl, r3, lsr #3
 8011a12:	f04f 0300 	mov.w	r3, #0
 8011a16:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8011a1a:	bf98      	it	ls
 8011a1c:	f04f 0a01 	movls.w	sl, #1
 8011a20:	46d8      	mov	r8, fp
 8011a22:	f8bd 701a 	ldrh.w	r7, [sp, #26]
 8011a26:	f8bd 0016 	ldrh.w	r0, [sp, #22]
 8011a2a:	4438      	add	r0, r7
 8011a2c:	b207      	sxth	r7, r0
 8011a2e:	f8db 0000 	ldr.w	r0, [fp]
 8011a32:	42bd      	cmp	r5, r7
 8011a34:	6803      	ldr	r3, [r0, #0]
 8011a36:	f340 8084 	ble.w	8011b42 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 8011a3a:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 8011a3e:	4798      	blx	r3
 8011a40:	eb07 030a 	add.w	r3, r7, sl
 8011a44:	4298      	cmp	r0, r3
 8011a46:	da07      	bge.n	8011a58 <_ZN8touchgfx11Application15drawCachedAreasEv+0x170>
 8011a48:	4285      	cmp	r5, r0
 8011a4a:	dd05      	ble.n	8011a58 <_ZN8touchgfx11Application15drawCachedAreasEv+0x170>
 8011a4c:	4287      	cmp	r7, r0
 8011a4e:	dd6d      	ble.n	8011b2c <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 8011a50:	2f00      	cmp	r7, #0
 8011a52:	dd6b      	ble.n	8011b2c <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 8011a54:	4628      	mov	r0, r5
 8011a56:	e004      	b.n	8011a62 <_ZN8touchgfx11Application15drawCachedAreasEv+0x17a>
 8011a58:	4287      	cmp	r7, r0
 8011a5a:	dcfb      	bgt.n	8011a54 <_ZN8touchgfx11Application15drawCachedAreasEv+0x16c>
 8011a5c:	42a8      	cmp	r0, r5
 8011a5e:	bfa8      	it	ge
 8011a60:	4628      	movge	r0, r5
 8011a62:	4b7a      	ldr	r3, [pc, #488]	; (8011c4c <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>)
 8011a64:	f8ad 7016 	strh.w	r7, [sp, #22]
 8011a68:	f9b3 3000 	ldrsh.w	r3, [r3]
 8011a6c:	f8ad 3018 	strh.w	r3, [sp, #24]
 8011a70:	9b02      	ldr	r3, [sp, #8]
 8011a72:	1bc0      	subs	r0, r0, r7
 8011a74:	2200      	movs	r2, #0
 8011a76:	881f      	ldrh	r7, [r3, #0]
 8011a78:	f8ad 2014 	strh.w	r2, [sp, #20]
 8011a7c:	f8ad 001a 	strh.w	r0, [sp, #26]
 8011a80:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 8011a84:	42bb      	cmp	r3, r7
 8011a86:	d9cc      	bls.n	8011a22 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13a>
 8011a88:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 8011a8c:	ab07      	add	r3, sp, #28
 8011a8e:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 8011a92:	6851      	ldr	r1, [r2, #4]
 8011a94:	c303      	stmia	r3!, {r0, r1}
 8011a96:	a905      	add	r1, sp, #20
 8011a98:	a807      	add	r0, sp, #28
 8011a9a:	f7ff fad0 	bl	801103e <_ZNK8touchgfx4Rect9intersectERKS0_>
 8011a9e:	2800      	cmp	r0, #0
 8011aa0:	d04c      	beq.n	8011b3c <_ZN8touchgfx11Application15drawCachedAreasEv+0x254>
 8011aa2:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 8011aa6:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 8011aaa:	f8bd 9020 	ldrh.w	r9, [sp, #32]
 8011aae:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 8011ab2:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8011ab6:	9303      	str	r3, [sp, #12]
 8011ab8:	4686      	mov	lr, r0
 8011aba:	4290      	cmp	r0, r2
 8011abc:	4448      	add	r0, r9
 8011abe:	f8bd 9018 	ldrh.w	r9, [sp, #24]
 8011ac2:	bfb8      	it	lt
 8011ac4:	4696      	movlt	lr, r2
 8011ac6:	444a      	add	r2, r9
 8011ac8:	4299      	cmp	r1, r3
 8011aca:	b280      	uxth	r0, r0
 8011acc:	b292      	uxth	r2, r2
 8011ace:	468c      	mov	ip, r1
 8011ad0:	fa0f f982 	sxth.w	r9, r2
 8011ad4:	bfb8      	it	lt
 8011ad6:	469c      	movlt	ip, r3
 8011ad8:	b203      	sxth	r3, r0
 8011ada:	454b      	cmp	r3, r9
 8011adc:	bfb8      	it	lt
 8011ade:	4602      	movlt	r2, r0
 8011ae0:	eba2 020e 	sub.w	r2, r2, lr
 8011ae4:	f8ad 2020 	strh.w	r2, [sp, #32]
 8011ae8:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8011aec:	9b03      	ldr	r3, [sp, #12]
 8011aee:	f8ad e01c 	strh.w	lr, [sp, #28]
 8011af2:	4411      	add	r1, r2
 8011af4:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8011af8:	f8ad c01e 	strh.w	ip, [sp, #30]
 8011afc:	4413      	add	r3, r2
 8011afe:	b289      	uxth	r1, r1
 8011b00:	b29b      	uxth	r3, r3
 8011b02:	b208      	sxth	r0, r1
 8011b04:	b21a      	sxth	r2, r3
 8011b06:	4290      	cmp	r0, r2
 8011b08:	bfb8      	it	lt
 8011b0a:	460b      	movlt	r3, r1
 8011b0c:	eba3 030c 	sub.w	r3, r3, ip
 8011b10:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8011b14:	a807      	add	r0, sp, #28
 8011b16:	f7f9 f9dc 	bl	800aed2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011b1a:	b920      	cbnz	r0, 8011b26 <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 8011b1c:	6823      	ldr	r3, [r4, #0]
 8011b1e:	a907      	add	r1, sp, #28
 8011b20:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8011b22:	4620      	mov	r0, r4
 8011b24:	4798      	blx	r3
 8011b26:	3701      	adds	r7, #1
 8011b28:	b2bf      	uxth	r7, r7
 8011b2a:	e7a9      	b.n	8011a80 <_ZN8touchgfx11Application15drawCachedAreasEv+0x198>
 8011b2c:	f8d8 0000 	ldr.w	r0, [r8]
 8011b30:	6803      	ldr	r3, [r0, #0]
 8011b32:	2101      	movs	r1, #1
 8011b34:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8011b38:	4798      	blx	r3
 8011b3a:	e772      	b.n	8011a22 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13a>
 8011b3c:	e9cd 0007 	strd	r0, r0, [sp, #28]
 8011b40:	e7e8      	b.n	8011b14 <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
 8011b42:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011b44:	4798      	blx	r3
 8011b46:	4b42      	ldr	r3, [pc, #264]	; (8011c50 <_ZN8touchgfx11Application15drawCachedAreasEv+0x368>)
 8011b48:	781b      	ldrb	r3, [r3, #0]
 8011b4a:	2b00      	cmp	r3, #0
 8011b4c:	f43f af27 	beq.w	801199e <_ZN8touchgfx11Application15drawCachedAreasEv+0xb6>
 8011b50:	2300      	movs	r3, #0
 8011b52:	f8a4 312a 	strh.w	r3, [r4, #298]	; 0x12a
 8011b56:	9b02      	ldr	r3, [sp, #8]
 8011b58:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 8011b5c:	881b      	ldrh	r3, [r3, #0]
 8011b5e:	f104 00ea 	add.w	r0, r4, #234	; 0xea
 8011b62:	429d      	cmp	r5, r3
 8011b64:	f67f af1b 	bls.w	801199e <_ZN8touchgfx11Application15drawCachedAreasEv+0xb6>
 8011b68:	f8b4 112a 	ldrh.w	r1, [r4, #298]	; 0x12a
 8011b6c:	2907      	cmp	r1, #7
 8011b6e:	d815      	bhi.n	8011b9c <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b4>
 8011b70:	eb06 02c3 	add.w	r2, r6, r3, lsl #3
 8011b74:	f936 8033 	ldrsh.w	r8, [r6, r3, lsl #3]
 8011b78:	f9b2 e002 	ldrsh.w	lr, [r2, #2]
 8011b7c:	f9b2 c004 	ldrsh.w	ip, [r2, #4]
 8011b80:	f9b2 7006 	ldrsh.w	r7, [r2, #6]
 8011b84:	1c4a      	adds	r2, r1, #1
 8011b86:	f8a4 212a 	strh.w	r2, [r4, #298]	; 0x12a
 8011b8a:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 8011b8e:	f820 8031 	strh.w	r8, [r0, r1, lsl #3]
 8011b92:	f8a2 e002 	strh.w	lr, [r2, #2]
 8011b96:	f8a2 c004 	strh.w	ip, [r2, #4]
 8011b9a:	80d7      	strh	r7, [r2, #6]
 8011b9c:	3301      	adds	r3, #1
 8011b9e:	b29b      	uxth	r3, r3
 8011ba0:	e7df      	b.n	8011b62 <_ZN8touchgfx11Application15drawCachedAreasEv+0x27a>
 8011ba2:	2b02      	cmp	r3, #2
 8011ba4:	f040 8136 	bne.w	8011e14 <_ZN8touchgfx11Application15drawCachedAreasEv+0x52c>
 8011ba8:	4b2a      	ldr	r3, [pc, #168]	; (8011c54 <_ZN8touchgfx11Application15drawCachedAreasEv+0x36c>)
 8011baa:	781b      	ldrb	r3, [r3, #0]
 8011bac:	2b01      	cmp	r3, #1
 8011bae:	f104 09a8 	add.w	r9, r4, #168	; 0xa8
 8011bb2:	f000 809c 	beq.w	8011cee <_ZN8touchgfx11Application15drawCachedAreasEv+0x406>
 8011bb6:	9b02      	ldr	r3, [sp, #8]
 8011bb8:	f8b4 20e8 	ldrh.w	r2, [r4, #232]	; 0xe8
 8011bbc:	f8b3 b000 	ldrh.w	fp, [r3]
 8011bc0:	f10b 0b01 	add.w	fp, fp, #1
 8011bc4:	fa1f fb8b 	uxth.w	fp, fp
 8011bc8:	2a00      	cmp	r2, #0
 8011bca:	d0bc      	beq.n	8011b46 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8011bcc:	f8b4 50aa 	ldrh.w	r5, [r4, #170]	; 0xaa
 8011bd0:	f8b4 30ae 	ldrh.w	r3, [r4, #174]	; 0xae
 8011bd4:	441d      	add	r5, r3
 8011bd6:	b22d      	sxth	r5, r5
 8011bd8:	4659      	mov	r1, fp
 8011bda:	f04f 0800 	mov.w	r8, #0
 8011bde:	b28b      	uxth	r3, r1
 8011be0:	429a      	cmp	r2, r3
 8011be2:	ea4f 07c8 	mov.w	r7, r8, lsl #3
 8011be6:	f240 80c1 	bls.w	8011d6c <_ZN8touchgfx11Application15drawCachedAreasEv+0x484>
 8011bea:	4427      	add	r7, r4
 8011bec:	eb04 0ec1 	add.w	lr, r4, r1, lsl #3
 8011bf0:	f9b7 30aa 	ldrsh.w	r3, [r7, #170]	; 0xaa
 8011bf4:	f9be c0aa 	ldrsh.w	ip, [lr, #170]	; 0xaa
 8011bf8:	4563      	cmp	r3, ip
 8011bfa:	4608      	mov	r0, r1
 8011bfc:	f340 80a3 	ble.w	8011d46 <_ZN8touchgfx11Application15drawCachedAreasEv+0x45e>
 8011c00:	f8be 50ae 	ldrh.w	r5, [lr, #174]	; 0xae
 8011c04:	4465      	add	r5, ip
 8011c06:	b22d      	sxth	r5, r5
 8011c08:	429d      	cmp	r5, r3
 8011c0a:	bfa8      	it	ge
 8011c0c:	461d      	movge	r5, r3
 8011c0e:	3101      	adds	r1, #1
 8011c10:	4680      	mov	r8, r0
 8011c12:	e7e4      	b.n	8011bde <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f6>
 8011c14:	d10b      	bne.n	8011c2e <_ZN8touchgfx11Application15drawCachedAreasEv+0x346>
 8011c16:	f9b5 c0ae 	ldrsh.w	ip, [r5, #174]	; 0xae
 8011c1a:	f9ba 10ae 	ldrsh.w	r1, [sl, #174]	; 0xae
 8011c1e:	458c      	cmp	ip, r1
 8011c20:	bfb4      	ite	lt
 8011c22:	469c      	movlt	ip, r3
 8011c24:	46bc      	movge	ip, r7
 8011c26:	4572      	cmp	r2, lr
 8011c28:	bfb8      	it	lt
 8011c2a:	4672      	movlt	r2, lr
 8011c2c:	e088      	b.n	8011d40 <_ZN8touchgfx11Application15drawCachedAreasEv+0x458>
 8011c2e:	428a      	cmp	r2, r1
 8011c30:	bfb8      	it	lt
 8011c32:	460a      	movlt	r2, r1
 8011c34:	46bc      	mov	ip, r7
 8011c36:	e083      	b.n	8011d40 <_ZN8touchgfx11Application15drawCachedAreasEv+0x458>
 8011c38:	20015644 	.word	0x20015644
 8011c3c:	20015650 	.word	0x20015650
 8011c40:	2000008c 	.word	0x2000008c
 8011c44:	20015604 	.word	0x20015604
 8011c48:	200155fa 	.word	0x200155fa
 8011c4c:	200155f8 	.word	0x200155f8
 8011c50:	20015602 	.word	0x20015602
 8011c54:	200155fc 	.word	0x200155fc
 8011c58:	1961      	adds	r1, r4, r5
 8011c5a:	ab07      	add	r3, sp, #28
 8011c5c:	f851 0fa8 	ldr.w	r0, [r1, #168]!
 8011c60:	6849      	ldr	r1, [r1, #4]
 8011c62:	c303      	stmia	r3!, {r0, r1}
 8011c64:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8011c68:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8011c6c:	2b13      	cmp	r3, #19
 8011c6e:	bfd8      	it	le
 8011c70:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 8011c74:	f8ad 201c 	strh.w	r2, [sp, #28]
 8011c78:	440b      	add	r3, r1
 8011c7a:	1a9b      	subs	r3, r3, r2
 8011c7c:	a807      	add	r0, sp, #28
 8011c7e:	f8ad 3020 	strh.w	r3, [sp, #32]
 8011c82:	f7ff f8b7 	bl	8010df4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8011c86:	a807      	add	r0, sp, #28
 8011c88:	f7f9 f923 	bl	800aed2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011c8c:	bb78      	cbnz	r0, 8011cee <_ZN8touchgfx11Application15drawCachedAreasEv+0x406>
 8011c8e:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 8011c92:	f8d8 0000 	ldr.w	r0, [r8]
 8011c96:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8011c9a:	f8d0 e000 	ldr.w	lr, [r0]
 8011c9e:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 8011ca2:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8011ca6:	f1bc 0f14 	cmp.w	ip, #20
 8011caa:	bfa8      	it	ge
 8011cac:	f04f 0c14 	movge.w	ip, #20
 8011cb0:	fa1f fc8c 	uxth.w	ip, ip
 8011cb4:	f8cd c000 	str.w	ip, [sp]
 8011cb8:	f8de a090 	ldr.w	sl, [lr, #144]	; 0x90
 8011cbc:	47d0      	blx	sl
 8011cbe:	4682      	mov	sl, r0
 8011cc0:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8011cc4:	a807      	add	r0, sp, #28
 8011cc6:	f7ff f87b 	bl	8010dc0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8011cca:	6823      	ldr	r3, [r4, #0]
 8011ccc:	4425      	add	r5, r4
 8011cce:	4620      	mov	r0, r4
 8011cd0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8011cd2:	a907      	add	r1, sp, #28
 8011cd4:	4798      	blx	r3
 8011cd6:	f8b5 00ac 	ldrh.w	r0, [r5, #172]	; 0xac
 8011cda:	eba0 000a 	sub.w	r0, r0, sl
 8011cde:	b200      	sxth	r0, r0
 8011ce0:	f8a5 00ac 	strh.w	r0, [r5, #172]	; 0xac
 8011ce4:	b918      	cbnz	r0, 8011cee <_ZN8touchgfx11Application15drawCachedAreasEv+0x406>
 8011ce6:	b2b9      	uxth	r1, r7
 8011ce8:	4648      	mov	r0, r9
 8011cea:	f7ff faa3 	bl	8011234 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8011cee:	f8b4 b0e8 	ldrh.w	fp, [r4, #232]	; 0xe8
 8011cf2:	f1bb 0f00 	cmp.w	fp, #0
 8011cf6:	f43f af26 	beq.w	8011b46 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8011cfa:	9b02      	ldr	r3, [sp, #8]
 8011cfc:	f9b4 20a8 	ldrsh.w	r2, [r4, #168]	; 0xa8
 8011d00:	881b      	ldrh	r3, [r3, #0]
 8011d02:	3301      	adds	r3, #1
 8011d04:	b29b      	uxth	r3, r3
 8011d06:	2700      	movs	r7, #0
 8011d08:	b299      	uxth	r1, r3
 8011d0a:	458b      	cmp	fp, r1
 8011d0c:	ea4f 05c7 	mov.w	r5, r7, lsl #3
 8011d10:	d9a2      	bls.n	8011c58 <_ZN8touchgfx11Application15drawCachedAreasEv+0x370>
 8011d12:	4425      	add	r5, r4
 8011d14:	eb04 0ac3 	add.w	sl, r4, r3, lsl #3
 8011d18:	f8b5 10ac 	ldrh.w	r1, [r5, #172]	; 0xac
 8011d1c:	f8b5 00a8 	ldrh.w	r0, [r5, #168]	; 0xa8
 8011d20:	f9ba e0a8 	ldrsh.w	lr, [sl, #168]	; 0xa8
 8011d24:	4408      	add	r0, r1
 8011d26:	f8ba 10ac 	ldrh.w	r1, [sl, #172]	; 0xac
 8011d2a:	4471      	add	r1, lr
 8011d2c:	b200      	sxth	r0, r0
 8011d2e:	b209      	sxth	r1, r1
 8011d30:	4288      	cmp	r0, r1
 8011d32:	469c      	mov	ip, r3
 8011d34:	f6bf af6e 	bge.w	8011c14 <_ZN8touchgfx11Application15drawCachedAreasEv+0x32c>
 8011d38:	4586      	cmp	lr, r0
 8011d3a:	4672      	mov	r2, lr
 8011d3c:	bfb8      	it	lt
 8011d3e:	4602      	movlt	r2, r0
 8011d40:	3301      	adds	r3, #1
 8011d42:	4667      	mov	r7, ip
 8011d44:	e7e0      	b.n	8011d08 <_ZN8touchgfx11Application15drawCachedAreasEv+0x420>
 8011d46:	d10c      	bne.n	8011d62 <_ZN8touchgfx11Application15drawCachedAreasEv+0x47a>
 8011d48:	f9b7 70ac 	ldrsh.w	r7, [r7, #172]	; 0xac
 8011d4c:	f9be 00ac 	ldrsh.w	r0, [lr, #172]	; 0xac
 8011d50:	4287      	cmp	r7, r0
 8011d52:	bfb4      	ite	lt
 8011d54:	4608      	movlt	r0, r1
 8011d56:	4640      	movge	r0, r8
 8011d58:	f8be 70ae 	ldrh.w	r7, [lr, #174]	; 0xae
 8011d5c:	443b      	add	r3, r7
 8011d5e:	b21b      	sxth	r3, r3
 8011d60:	e752      	b.n	8011c08 <_ZN8touchgfx11Application15drawCachedAreasEv+0x320>
 8011d62:	4565      	cmp	r5, ip
 8011d64:	bfa8      	it	ge
 8011d66:	4665      	movge	r5, ip
 8011d68:	4640      	mov	r0, r8
 8011d6a:	e750      	b.n	8011c0e <_ZN8touchgfx11Application15drawCachedAreasEv+0x326>
 8011d6c:	eb09 0007 	add.w	r0, r9, r7
 8011d70:	4427      	add	r7, r4
 8011d72:	9203      	str	r2, [sp, #12]
 8011d74:	f9b7 a0ae 	ldrsh.w	sl, [r7, #174]	; 0xae
 8011d78:	f1ba 0f13 	cmp.w	sl, #19
 8011d7c:	bfde      	ittt	le
 8011d7e:	f8b7 50aa 	ldrhle.w	r5, [r7, #170]	; 0xaa
 8011d82:	4455      	addle	r5, sl
 8011d84:	b22d      	sxthle	r5, r5
 8011d86:	f7f9 f8a4 	bl	800aed2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011d8a:	9a03      	ldr	r2, [sp, #12]
 8011d8c:	2800      	cmp	r0, #0
 8011d8e:	f47f af1b 	bne.w	8011bc8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2e0>
 8011d92:	f9b7 20aa 	ldrsh.w	r2, [r7, #170]	; 0xaa
 8011d96:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8011d9a:	482a      	ldr	r0, [pc, #168]	; (8011e44 <_ZN8touchgfx11Application15drawCachedAreasEv+0x55c>)
 8011d9c:	f9b7 10a8 	ldrsh.w	r1, [r7, #168]	; 0xa8
 8011da0:	f9b7 30ac 	ldrsh.w	r3, [r7, #172]	; 0xac
 8011da4:	6800      	ldr	r0, [r0, #0]
 8011da6:	f8ad 101c 	strh.w	r1, [sp, #28]
 8011daa:	1aad      	subs	r5, r5, r2
 8011dac:	2d14      	cmp	r5, #20
 8011dae:	f8ad 201e 	strh.w	r2, [sp, #30]
 8011db2:	f8ad 3020 	strh.w	r3, [sp, #32]
 8011db6:	bfa8      	it	ge
 8011db8:	2514      	movge	r5, #20
 8011dba:	f8d0 c000 	ldr.w	ip, [r0]
 8011dbe:	b2ad      	uxth	r5, r5
 8011dc0:	fa1f fa8a 	uxth.w	sl, sl
 8011dc4:	4555      	cmp	r5, sl
 8011dc6:	bf94      	ite	ls
 8011dc8:	9500      	strls	r5, [sp, #0]
 8011dca:	f8cd a000 	strhi.w	sl, [sp]
 8011dce:	b292      	uxth	r2, r2
 8011dd0:	f8dc 5090 	ldr.w	r5, [ip, #144]	; 0x90
 8011dd4:	b29b      	uxth	r3, r3
 8011dd6:	b289      	uxth	r1, r1
 8011dd8:	47a8      	blx	r5
 8011dda:	6823      	ldr	r3, [r4, #0]
 8011ddc:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8011de0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8011de2:	a907      	add	r1, sp, #28
 8011de4:	4620      	mov	r0, r4
 8011de6:	4798      	blx	r3
 8011de8:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 8011dec:	f8b7 30ae 	ldrh.w	r3, [r7, #174]	; 0xae
 8011df0:	f8b7 20aa 	ldrh.w	r2, [r7, #170]	; 0xaa
 8011df4:	1a5b      	subs	r3, r3, r1
 8011df6:	440a      	add	r2, r1
 8011df8:	b21b      	sxth	r3, r3
 8011dfa:	f8a7 20aa 	strh.w	r2, [r7, #170]	; 0xaa
 8011dfe:	f8a7 30ae 	strh.w	r3, [r7, #174]	; 0xae
 8011e02:	2b00      	cmp	r3, #0
 8011e04:	f47f aed7 	bne.w	8011bb6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ce>
 8011e08:	fa1f f188 	uxth.w	r1, r8
 8011e0c:	4648      	mov	r0, r9
 8011e0e:	f7ff fa11 	bl	8011234 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8011e12:	e6d0      	b.n	8011bb6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ce>
 8011e14:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 8011e18:	42ab      	cmp	r3, r5
 8011e1a:	f67f ae94 	bls.w	8011b46 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8011e1e:	eb04 02c5 	add.w	r2, r4, r5, lsl #3
 8011e22:	ab07      	add	r3, sp, #28
 8011e24:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 8011e28:	6851      	ldr	r1, [r2, #4]
 8011e2a:	c303      	stmia	r3!, {r0, r1}
 8011e2c:	a807      	add	r0, sp, #28
 8011e2e:	f7f9 f850 	bl	800aed2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011e32:	b920      	cbnz	r0, 8011e3e <_ZN8touchgfx11Application15drawCachedAreasEv+0x556>
 8011e34:	6823      	ldr	r3, [r4, #0]
 8011e36:	a907      	add	r1, sp, #28
 8011e38:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8011e3a:	4620      	mov	r0, r4
 8011e3c:	4798      	blx	r3
 8011e3e:	3501      	adds	r5, #1
 8011e40:	b2ad      	uxth	r5, r5
 8011e42:	e7e7      	b.n	8011e14 <_ZN8touchgfx11Application15drawCachedAreasEv+0x52c>
 8011e44:	20015604 	.word	0x20015604

08011e48 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 8011e48:	4b03      	ldr	r3, [pc, #12]	; (8011e58 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 8011e4a:	2200      	movs	r2, #0
 8011e4c:	801a      	strh	r2, [r3, #0]
 8011e4e:	805a      	strh	r2, [r3, #2]
 8011e50:	809a      	strh	r2, [r3, #4]
 8011e52:	80da      	strh	r2, [r3, #6]
 8011e54:	4770      	bx	lr
 8011e56:	bf00      	nop
 8011e58:	20015650 	.word	0x20015650

08011e5c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 8011e5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011e60:	4606      	mov	r6, r0
 8011e62:	b09d      	sub	sp, #116	; 0x74
 8011e64:	a803      	add	r0, sp, #12
 8011e66:	4614      	mov	r4, r2
 8011e68:	468a      	mov	sl, r1
 8011e6a:	461d      	mov	r5, r3
 8011e6c:	f000 fe67 	bl	8012b3e <_ZN8touchgfx12TextProviderC1Ev>
 8011e70:	6833      	ldr	r3, [r6, #0]
 8011e72:	4630      	mov	r0, r6
 8011e74:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8011e76:	4798      	blx	r3
 8011e78:	6833      	ldr	r3, [r6, #0]
 8011e7a:	4607      	mov	r7, r0
 8011e7c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8011e7e:	4630      	mov	r0, r6
 8011e80:	4798      	blx	r3
 8011e82:	462a      	mov	r2, r5
 8011e84:	9000      	str	r0, [sp, #0]
 8011e86:	4621      	mov	r1, r4
 8011e88:	463b      	mov	r3, r7
 8011e8a:	a803      	add	r0, sp, #12
 8011e8c:	f000 feb2 	bl	8012bf4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8011e90:	2500      	movs	r5, #0
 8011e92:	462c      	mov	r4, r5
 8011e94:	46a9      	mov	r9, r5
 8011e96:	46a8      	mov	r8, r5
 8011e98:	f242 0b0b 	movw	fp, #8203	; 0x200b
 8011e9c:	2300      	movs	r3, #0
 8011e9e:	9302      	str	r3, [sp, #8]
 8011ea0:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8011ea4:	429c      	cmp	r4, r3
 8011ea6:	d002      	beq.n	8011eae <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 8011ea8:	455c      	cmp	r4, fp
 8011eaa:	bf18      	it	ne
 8011eac:	4625      	movne	r5, r4
 8011eae:	ab02      	add	r3, sp, #8
 8011eb0:	4632      	mov	r2, r6
 8011eb2:	4651      	mov	r1, sl
 8011eb4:	a803      	add	r0, sp, #12
 8011eb6:	f001 f99f 	bl	80131f8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8011eba:	4604      	mov	r4, r0
 8011ebc:	b108      	cbz	r0, 8011ec2 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 8011ebe:	280a      	cmp	r0, #10
 8011ec0:	d10a      	bne.n	8011ed8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 8011ec2:	45c1      	cmp	r9, r8
 8011ec4:	bf38      	it	cc
 8011ec6:	46c1      	movcc	r9, r8
 8011ec8:	f04f 0800 	mov.w	r8, #0
 8011ecc:	2c00      	cmp	r4, #0
 8011ece:	d1e5      	bne.n	8011e9c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8011ed0:	4648      	mov	r0, r9
 8011ed2:	b01d      	add	sp, #116	; 0x74
 8011ed4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011ed8:	9a02      	ldr	r2, [sp, #8]
 8011eda:	2a00      	cmp	r2, #0
 8011edc:	d0de      	beq.n	8011e9c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8011ede:	7b57      	ldrb	r7, [r2, #13]
 8011ee0:	6833      	ldr	r3, [r6, #0]
 8011ee2:	8894      	ldrh	r4, [r2, #4]
 8011ee4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8011ee6:	007f      	lsls	r7, r7, #1
 8011ee8:	f407 7080 	and.w	r0, r7, #256	; 0x100
 8011eec:	7a97      	ldrb	r7, [r2, #10]
 8011eee:	4629      	mov	r1, r5
 8011ef0:	4307      	orrs	r7, r0
 8011ef2:	4630      	mov	r0, r6
 8011ef4:	4798      	blx	r3
 8011ef6:	4438      	add	r0, r7
 8011ef8:	4480      	add	r8, r0
 8011efa:	fa1f f888 	uxth.w	r8, r8
 8011efe:	e7e5      	b.n	8011ecc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

08011f00 <_ZNK8touchgfx4Font12getCharWidthEt>:
 8011f00:	b508      	push	{r3, lr}
 8011f02:	6803      	ldr	r3, [r0, #0]
 8011f04:	68db      	ldr	r3, [r3, #12]
 8011f06:	4798      	blx	r3
 8011f08:	b128      	cbz	r0, 8011f16 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 8011f0a:	7b43      	ldrb	r3, [r0, #13]
 8011f0c:	7a80      	ldrb	r0, [r0, #10]
 8011f0e:	005b      	lsls	r3, r3, #1
 8011f10:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8011f14:	4318      	orrs	r0, r3
 8011f16:	bd08      	pop	{r3, pc}

08011f18 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 8011f18:	b40e      	push	{r1, r2, r3}
 8011f1a:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011f1c:	b09e      	sub	sp, #120	; 0x78
 8011f1e:	ab23      	add	r3, sp, #140	; 0x8c
 8011f20:	4605      	mov	r5, r0
 8011f22:	f853 4b04 	ldr.w	r4, [r3], #4
 8011f26:	9303      	str	r3, [sp, #12]
 8011f28:	a805      	add	r0, sp, #20
 8011f2a:	f000 fe08 	bl	8012b3e <_ZN8touchgfx12TextProviderC1Ev>
 8011f2e:	682b      	ldr	r3, [r5, #0]
 8011f30:	4628      	mov	r0, r5
 8011f32:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8011f34:	4798      	blx	r3
 8011f36:	682b      	ldr	r3, [r5, #0]
 8011f38:	4606      	mov	r6, r0
 8011f3a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8011f3c:	4628      	mov	r0, r5
 8011f3e:	4798      	blx	r3
 8011f40:	4633      	mov	r3, r6
 8011f42:	ae1e      	add	r6, sp, #120	; 0x78
 8011f44:	4621      	mov	r1, r4
 8011f46:	9000      	str	r0, [sp, #0]
 8011f48:	9a03      	ldr	r2, [sp, #12]
 8011f4a:	2400      	movs	r4, #0
 8011f4c:	a805      	add	r0, sp, #20
 8011f4e:	f000 fe51 	bl	8012bf4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8011f52:	f846 4d68 	str.w	r4, [r6, #-104]!
 8011f56:	462a      	mov	r2, r5
 8011f58:	4633      	mov	r3, r6
 8011f5a:	4621      	mov	r1, r4
 8011f5c:	a805      	add	r0, sp, #20
 8011f5e:	f001 f94b 	bl	80131f8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8011f62:	b1f0      	cbz	r0, 8011fa2 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 8011f64:	280a      	cmp	r0, #10
 8011f66:	d018      	beq.n	8011f9a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8011f68:	9f04      	ldr	r7, [sp, #16]
 8011f6a:	b1b7      	cbz	r7, 8011f9a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8011f6c:	7b78      	ldrb	r0, [r7, #13]
 8011f6e:	7a3b      	ldrb	r3, [r7, #8]
 8011f70:	88aa      	ldrh	r2, [r5, #4]
 8011f72:	00c1      	lsls	r1, r0, #3
 8011f74:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8011f78:	4319      	orrs	r1, r3
 8011f7a:	0643      	lsls	r3, r0, #25
 8011f7c:	bf44      	itt	mi
 8011f7e:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 8011f82:	b219      	sxthmi	r1, r3
 8011f84:	0100      	lsls	r0, r0, #4
 8011f86:	79fb      	ldrb	r3, [r7, #7]
 8011f88:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8011f8c:	4303      	orrs	r3, r0
 8011f8e:	4413      	add	r3, r2
 8011f90:	1a5b      	subs	r3, r3, r1
 8011f92:	b29b      	uxth	r3, r3
 8011f94:	42a3      	cmp	r3, r4
 8011f96:	bfc8      	it	gt
 8011f98:	b21c      	sxthgt	r4, r3
 8011f9a:	4633      	mov	r3, r6
 8011f9c:	462a      	mov	r2, r5
 8011f9e:	2100      	movs	r1, #0
 8011fa0:	e7dc      	b.n	8011f5c <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 8011fa2:	b2a0      	uxth	r0, r4
 8011fa4:	b01e      	add	sp, #120	; 0x78
 8011fa6:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8011faa:	b003      	add	sp, #12
 8011fac:	4770      	bx	lr

08011fae <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 8011fae:	b40e      	push	{r1, r2, r3}
 8011fb0:	b570      	push	{r4, r5, r6, lr}
 8011fb2:	b09d      	sub	sp, #116	; 0x74
 8011fb4:	ab21      	add	r3, sp, #132	; 0x84
 8011fb6:	4604      	mov	r4, r0
 8011fb8:	f853 5b04 	ldr.w	r5, [r3], #4
 8011fbc:	9302      	str	r3, [sp, #8]
 8011fbe:	a803      	add	r0, sp, #12
 8011fc0:	f000 fdbd 	bl	8012b3e <_ZN8touchgfx12TextProviderC1Ev>
 8011fc4:	6823      	ldr	r3, [r4, #0]
 8011fc6:	4620      	mov	r0, r4
 8011fc8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8011fca:	4798      	blx	r3
 8011fcc:	6823      	ldr	r3, [r4, #0]
 8011fce:	4606      	mov	r6, r0
 8011fd0:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8011fd2:	4620      	mov	r0, r4
 8011fd4:	4798      	blx	r3
 8011fd6:	4633      	mov	r3, r6
 8011fd8:	9000      	str	r0, [sp, #0]
 8011fda:	9a02      	ldr	r2, [sp, #8]
 8011fdc:	4629      	mov	r1, r5
 8011fde:	a803      	add	r0, sp, #12
 8011fe0:	f000 fe08 	bl	8012bf4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8011fe4:	a803      	add	r0, sp, #12
 8011fe6:	f001 f9d5 	bl	8013394 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8011fea:	2401      	movs	r4, #1
 8011fec:	b2a3      	uxth	r3, r4
 8011fee:	b140      	cbz	r0, 8012002 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 8011ff0:	280a      	cmp	r0, #10
 8011ff2:	bf08      	it	eq
 8011ff4:	3301      	addeq	r3, #1
 8011ff6:	a803      	add	r0, sp, #12
 8011ff8:	bf08      	it	eq
 8011ffa:	b21c      	sxtheq	r4, r3
 8011ffc:	f001 f9ca 	bl	8013394 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8012000:	e7f4      	b.n	8011fec <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 8012002:	4618      	mov	r0, r3
 8012004:	b01d      	add	sp, #116	; 0x74
 8012006:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801200a:	b003      	add	sp, #12
 801200c:	4770      	bx	lr

0801200e <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 801200e:	b40e      	push	{r1, r2, r3}
 8012010:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012012:	b09e      	sub	sp, #120	; 0x78
 8012014:	ab23      	add	r3, sp, #140	; 0x8c
 8012016:	4604      	mov	r4, r0
 8012018:	f853 5b04 	ldr.w	r5, [r3], #4
 801201c:	9303      	str	r3, [sp, #12]
 801201e:	a805      	add	r0, sp, #20
 8012020:	f000 fd8d 	bl	8012b3e <_ZN8touchgfx12TextProviderC1Ev>
 8012024:	6823      	ldr	r3, [r4, #0]
 8012026:	4620      	mov	r0, r4
 8012028:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801202a:	4798      	blx	r3
 801202c:	6823      	ldr	r3, [r4, #0]
 801202e:	4606      	mov	r6, r0
 8012030:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8012032:	4620      	mov	r0, r4
 8012034:	4798      	blx	r3
 8012036:	4633      	mov	r3, r6
 8012038:	4629      	mov	r1, r5
 801203a:	9000      	str	r0, [sp, #0]
 801203c:	9a03      	ldr	r2, [sp, #12]
 801203e:	a805      	add	r0, sp, #20
 8012040:	ad1e      	add	r5, sp, #120	; 0x78
 8012042:	f000 fdd7 	bl	8012bf4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8012046:	2100      	movs	r1, #0
 8012048:	f845 1d68 	str.w	r1, [r5, #-104]!
 801204c:	4622      	mov	r2, r4
 801204e:	462b      	mov	r3, r5
 8012050:	a805      	add	r0, sp, #20
 8012052:	f001 f8d1 	bl	80131f8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8012056:	26ff      	movs	r6, #255	; 0xff
 8012058:	b1d8      	cbz	r0, 8012092 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x84>
 801205a:	280a      	cmp	r0, #10
 801205c:	d012      	beq.n	8012084 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x76>
 801205e:	9804      	ldr	r0, [sp, #16]
 8012060:	b180      	cbz	r0, 8012084 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x76>
 8012062:	7b47      	ldrb	r7, [r0, #13]
 8012064:	7922      	ldrb	r2, [r4, #4]
 8012066:	00fb      	lsls	r3, r7, #3
 8012068:	f403 7180 	and.w	r1, r3, #256	; 0x100
 801206c:	7a03      	ldrb	r3, [r0, #8]
 801206e:	430b      	orrs	r3, r1
 8012070:	0679      	lsls	r1, r7, #25
 8012072:	bf44      	itt	mi
 8012074:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8012078:	b21b      	sxthmi	r3, r3
 801207a:	1ad3      	subs	r3, r2, r3
 801207c:	b2db      	uxtb	r3, r3
 801207e:	429e      	cmp	r6, r3
 8012080:	bf28      	it	cs
 8012082:	461e      	movcs	r6, r3
 8012084:	462b      	mov	r3, r5
 8012086:	4622      	mov	r2, r4
 8012088:	2100      	movs	r1, #0
 801208a:	a805      	add	r0, sp, #20
 801208c:	f001 f8b4 	bl	80131f8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8012090:	e7e2      	b.n	8012058 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4a>
 8012092:	4630      	mov	r0, r6
 8012094:	b01e      	add	sp, #120	; 0x78
 8012096:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 801209a:	b003      	add	sp, #12
 801209c:	4770      	bx	lr

0801209e <_ZNK8touchgfx8Drawable10invalidateEv>:
 801209e:	b513      	push	{r0, r1, r4, lr}
 80120a0:	6803      	ldr	r3, [r0, #0]
 80120a2:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 80120a6:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80120aa:	f8ad 1004 	strh.w	r1, [sp, #4]
 80120ae:	2400      	movs	r4, #0
 80120b0:	9400      	str	r4, [sp, #0]
 80120b2:	f8ad 2006 	strh.w	r2, [sp, #6]
 80120b6:	691b      	ldr	r3, [r3, #16]
 80120b8:	4669      	mov	r1, sp
 80120ba:	4798      	blx	r3
 80120bc:	b002      	add	sp, #8
 80120be:	bd10      	pop	{r4, pc}

080120c0 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 80120c0:	b538      	push	{r3, r4, r5, lr}
 80120c2:	680b      	ldr	r3, [r1, #0]
 80120c4:	460c      	mov	r4, r1
 80120c6:	68db      	ldr	r3, [r3, #12]
 80120c8:	4605      	mov	r5, r0
 80120ca:	4798      	blx	r3
 80120cc:	6823      	ldr	r3, [r4, #0]
 80120ce:	4620      	mov	r0, r4
 80120d0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80120d2:	4629      	mov	r1, r5
 80120d4:	4798      	blx	r3
 80120d6:	4628      	mov	r0, r5
 80120d8:	bd38      	pop	{r3, r4, r5, pc}

080120da <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 80120da:	b410      	push	{r4}
 80120dc:	880a      	ldrh	r2, [r1, #0]
 80120de:	8884      	ldrh	r4, [r0, #4]
 80120e0:	4422      	add	r2, r4
 80120e2:	800a      	strh	r2, [r1, #0]
 80120e4:	88c4      	ldrh	r4, [r0, #6]
 80120e6:	884a      	ldrh	r2, [r1, #2]
 80120e8:	4422      	add	r2, r4
 80120ea:	804a      	strh	r2, [r1, #2]
 80120ec:	6940      	ldr	r0, [r0, #20]
 80120ee:	b120      	cbz	r0, 80120fa <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 80120f0:	6803      	ldr	r3, [r0, #0]
 80120f2:	f85d 4b04 	ldr.w	r4, [sp], #4
 80120f6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80120f8:	4718      	bx	r3
 80120fa:	f85d 4b04 	ldr.w	r4, [sp], #4
 80120fe:	4770      	bx	lr

08012100 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 8012100:	b570      	push	{r4, r5, r6, lr}
 8012102:	8882      	ldrh	r2, [r0, #4]
 8012104:	880b      	ldrh	r3, [r1, #0]
 8012106:	4413      	add	r3, r2
 8012108:	800b      	strh	r3, [r1, #0]
 801210a:	88c2      	ldrh	r2, [r0, #6]
 801210c:	884b      	ldrh	r3, [r1, #2]
 801210e:	460c      	mov	r4, r1
 8012110:	4413      	add	r3, r2
 8012112:	804b      	strh	r3, [r1, #2]
 8012114:	4605      	mov	r5, r0
 8012116:	1d01      	adds	r1, r0, #4
 8012118:	4620      	mov	r0, r4
 801211a:	f7f8 fe97 	bl	800ae4c <_ZN8touchgfx4RectaNERKS0_>
 801211e:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8012122:	2b00      	cmp	r3, #0
 8012124:	dd0b      	ble.n	801213e <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8012126:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801212a:	2b00      	cmp	r3, #0
 801212c:	dd07      	ble.n	801213e <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 801212e:	6968      	ldr	r0, [r5, #20]
 8012130:	b128      	cbz	r0, 801213e <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8012132:	6803      	ldr	r3, [r0, #0]
 8012134:	4621      	mov	r1, r4
 8012136:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8012138:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801213c:	4718      	bx	r3
 801213e:	bd70      	pop	{r4, r5, r6, pc}

08012140 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 8012140:	b570      	push	{r4, r5, r6, lr}
 8012142:	8882      	ldrh	r2, [r0, #4]
 8012144:	880b      	ldrh	r3, [r1, #0]
 8012146:	4413      	add	r3, r2
 8012148:	800b      	strh	r3, [r1, #0]
 801214a:	88c2      	ldrh	r2, [r0, #6]
 801214c:	884b      	ldrh	r3, [r1, #2]
 801214e:	460c      	mov	r4, r1
 8012150:	4413      	add	r3, r2
 8012152:	804b      	strh	r3, [r1, #2]
 8012154:	4605      	mov	r5, r0
 8012156:	1d01      	adds	r1, r0, #4
 8012158:	4620      	mov	r0, r4
 801215a:	f7f8 fe77 	bl	800ae4c <_ZN8touchgfx4RectaNERKS0_>
 801215e:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8012162:	2b00      	cmp	r3, #0
 8012164:	dd18      	ble.n	8012198 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 8012166:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801216a:	2b00      	cmp	r3, #0
 801216c:	dd14      	ble.n	8012198 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 801216e:	6968      	ldr	r0, [r5, #20]
 8012170:	b128      	cbz	r0, 801217e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 8012172:	6803      	ldr	r3, [r0, #0]
 8012174:	4621      	mov	r1, r4
 8012176:	691b      	ldr	r3, [r3, #16]
 8012178:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801217c:	4718      	bx	r3
 801217e:	4b07      	ldr	r3, [pc, #28]	; (801219c <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 8012180:	681b      	ldr	r3, [r3, #0]
 8012182:	3304      	adds	r3, #4
 8012184:	429d      	cmp	r5, r3
 8012186:	d107      	bne.n	8012198 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 8012188:	f7fe fff2 	bl	8011170 <_ZN8touchgfx11Application11getInstanceEv>
 801218c:	6821      	ldr	r1, [r4, #0]
 801218e:	6862      	ldr	r2, [r4, #4]
 8012190:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012194:	f7ff b862 	b.w	801125c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 8012198:	bd70      	pop	{r4, r5, r6, pc}
 801219a:	bf00      	nop
 801219c:	20015648 	.word	0x20015648

080121a0 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 80121a0:	b570      	push	{r4, r5, r6, lr}
 80121a2:	4604      	mov	r4, r0
 80121a4:	4616      	mov	r6, r2
 80121a6:	460d      	mov	r5, r1
 80121a8:	b901      	cbnz	r1, 80121ac <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 80121aa:	b192      	cbz	r2, 80121d2 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 80121ac:	6823      	ldr	r3, [r4, #0]
 80121ae:	4620      	mov	r0, r4
 80121b0:	699b      	ldr	r3, [r3, #24]
 80121b2:	4798      	blx	r3
 80121b4:	88e2      	ldrh	r2, [r4, #6]
 80121b6:	88a1      	ldrh	r1, [r4, #4]
 80121b8:	4432      	add	r2, r6
 80121ba:	4429      	add	r1, r5
 80121bc:	4620      	mov	r0, r4
 80121be:	b212      	sxth	r2, r2
 80121c0:	b209      	sxth	r1, r1
 80121c2:	f7f0 fda3 	bl	8002d0c <_ZN8touchgfx8Drawable5setXYEss>
 80121c6:	6823      	ldr	r3, [r4, #0]
 80121c8:	4620      	mov	r0, r4
 80121ca:	699b      	ldr	r3, [r3, #24]
 80121cc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80121d0:	4718      	bx	r3
 80121d2:	bd70      	pop	{r4, r5, r6, pc}

080121d4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 80121d4:	b510      	push	{r4, lr}
 80121d6:	4604      	mov	r4, r0
 80121d8:	4608      	mov	r0, r1
 80121da:	2300      	movs	r3, #0
 80121dc:	8023      	strh	r3, [r4, #0]
 80121de:	8063      	strh	r3, [r4, #2]
 80121e0:	6803      	ldr	r3, [r0, #0]
 80121e2:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80121e6:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 80121ea:	80a1      	strh	r1, [r4, #4]
 80121ec:	80e2      	strh	r2, [r4, #6]
 80121ee:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80121f0:	4621      	mov	r1, r4
 80121f2:	4798      	blx	r3
 80121f4:	4620      	mov	r0, r4
 80121f6:	bd10      	pop	{r4, pc}

080121f8 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>:
 80121f8:	b530      	push	{r4, r5, lr}
 80121fa:	8083      	strh	r3, [r0, #4]
 80121fc:	f89d 300c 	ldrb.w	r3, [sp, #12]
 8012200:	f89d 5010 	ldrb.w	r5, [sp, #16]
 8012204:	7183      	strb	r3, [r0, #6]
 8012206:	79c3      	ldrb	r3, [r0, #7]
 8012208:	6101      	str	r1, [r0, #16]
 801220a:	f365 0306 	bfi	r3, r5, #0, #7
 801220e:	f89d 5014 	ldrb.w	r5, [sp, #20]
 8012212:	8282      	strh	r2, [r0, #20]
 8012214:	f365 13c7 	bfi	r3, r5, #7, #1
 8012218:	71c3      	strb	r3, [r0, #7]
 801221a:	f89d 3018 	ldrb.w	r3, [sp, #24]
 801221e:	7203      	strb	r3, [r0, #8]
 8012220:	f89d 301c 	ldrb.w	r3, [sp, #28]
 8012224:	7243      	strb	r3, [r0, #9]
 8012226:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 801222a:	8143      	strh	r3, [r0, #10]
 801222c:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 8012230:	8183      	strh	r3, [r0, #12]
 8012232:	4b01      	ldr	r3, [pc, #4]	; (8012238 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt+0x40>)
 8012234:	6003      	str	r3, [r0, #0]
 8012236:	bd30      	pop	{r4, r5, pc}
 8012238:	08024414 	.word	0x08024414

0801223c <_ZNK8touchgfx9ConstFont4findEt>:
 801223c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801223e:	6904      	ldr	r4, [r0, #16]
 8012240:	b3bc      	cbz	r4, 80122b2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8012242:	88a3      	ldrh	r3, [r4, #4]
 8012244:	8a82      	ldrh	r2, [r0, #20]
 8012246:	1acb      	subs	r3, r1, r3
 8012248:	f102 32ff 	add.w	r2, r2, #4294967295
 801224c:	d431      	bmi.n	80122b2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801224e:	4293      	cmp	r3, r2
 8012250:	dd0c      	ble.n	801226c <_ZNK8touchgfx9ConstFont4findEt+0x30>
 8012252:	230e      	movs	r3, #14
 8012254:	fb03 4302 	mla	r3, r3, r2, r4
 8012258:	889b      	ldrh	r3, [r3, #4]
 801225a:	1a5b      	subs	r3, r3, r1
 801225c:	1ad3      	subs	r3, r2, r3
 801225e:	429a      	cmp	r2, r3
 8012260:	db27      	blt.n	80122b2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8012262:	2b00      	cmp	r3, #0
 8012264:	bfbc      	itt	lt
 8012266:	2302      	movlt	r3, #2
 8012268:	fb92 f3f3 	sdivlt	r3, r2, r3
 801226c:	2500      	movs	r5, #0
 801226e:	260e      	movs	r6, #14
 8012270:	4295      	cmp	r5, r2
 8012272:	dc1e      	bgt.n	80122b2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8012274:	fb06 4003 	mla	r0, r6, r3, r4
 8012278:	8887      	ldrh	r7, [r0, #4]
 801227a:	42b9      	cmp	r1, r7
 801227c:	d01a      	beq.n	80122b4 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 801227e:	d20d      	bcs.n	801229c <_ZNK8touchgfx9ConstFont4findEt+0x60>
 8012280:	1e5a      	subs	r2, r3, #1
 8012282:	4295      	cmp	r5, r2
 8012284:	dc15      	bgt.n	80122b2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8012286:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 801228a:	1a5b      	subs	r3, r3, r1
 801228c:	1ad3      	subs	r3, r2, r3
 801228e:	429a      	cmp	r2, r3
 8012290:	db0f      	blt.n	80122b2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8012292:	429d      	cmp	r5, r3
 8012294:	ddec      	ble.n	8012270 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8012296:	1953      	adds	r3, r2, r5
 8012298:	105b      	asrs	r3, r3, #1
 801229a:	e7e9      	b.n	8012270 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 801229c:	1c5d      	adds	r5, r3, #1
 801229e:	42aa      	cmp	r2, r5
 80122a0:	db07      	blt.n	80122b2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80122a2:	8a43      	ldrh	r3, [r0, #18]
 80122a4:	1acb      	subs	r3, r1, r3
 80122a6:	442b      	add	r3, r5
 80122a8:	429d      	cmp	r5, r3
 80122aa:	dc02      	bgt.n	80122b2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80122ac:	429a      	cmp	r2, r3
 80122ae:	dadf      	bge.n	8012270 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 80122b0:	e7f1      	b.n	8012296 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 80122b2:	2000      	movs	r0, #0
 80122b4:	bdf0      	pop	{r4, r5, r6, r7, pc}

080122b6 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 80122b6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80122b8:	4604      	mov	r4, r0
 80122ba:	4617      	mov	r7, r2
 80122bc:	461e      	mov	r6, r3
 80122be:	b911      	cbnz	r1, 80122c6 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 80122c0:	2500      	movs	r5, #0
 80122c2:	4628      	mov	r0, r5
 80122c4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80122c6:	290a      	cmp	r1, #10
 80122c8:	d0fa      	beq.n	80122c0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80122ca:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 80122ce:	4291      	cmp	r1, r2
 80122d0:	d0f6      	beq.n	80122c0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80122d2:	f242 020b 	movw	r2, #8203	; 0x200b
 80122d6:	4291      	cmp	r1, r2
 80122d8:	d0f2      	beq.n	80122c0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80122da:	f7ff ffaf 	bl	801223c <_ZNK8touchgfx9ConstFont4findEt>
 80122de:	4605      	mov	r5, r0
 80122e0:	b950      	cbnz	r0, 80122f8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 80122e2:	6823      	ldr	r3, [r4, #0]
 80122e4:	4620      	mov	r0, r4
 80122e6:	691b      	ldr	r3, [r3, #16]
 80122e8:	4798      	blx	r3
 80122ea:	4601      	mov	r1, r0
 80122ec:	4620      	mov	r0, r4
 80122ee:	f7ff ffa5 	bl	801223c <_ZNK8touchgfx9ConstFont4findEt>
 80122f2:	4605      	mov	r5, r0
 80122f4:	2800      	cmp	r0, #0
 80122f6:	d0e3      	beq.n	80122c0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80122f8:	6823      	ldr	r3, [r4, #0]
 80122fa:	4629      	mov	r1, r5
 80122fc:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80122fe:	4620      	mov	r0, r4
 8012300:	4798      	blx	r3
 8012302:	6038      	str	r0, [r7, #0]
 8012304:	6823      	ldr	r3, [r4, #0]
 8012306:	4620      	mov	r0, r4
 8012308:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801230a:	4798      	blx	r3
 801230c:	7030      	strb	r0, [r6, #0]
 801230e:	e7d8      	b.n	80122c2 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

08012310 <_ZN8touchgfx4clzuEm>:
 8012310:	4603      	mov	r3, r0
 8012312:	b1c8      	cbz	r0, 8012348 <_ZN8touchgfx4clzuEm+0x38>
 8012314:	0c02      	lsrs	r2, r0, #16
 8012316:	0412      	lsls	r2, r2, #16
 8012318:	b9a2      	cbnz	r2, 8012344 <_ZN8touchgfx4clzuEm+0x34>
 801231a:	0403      	lsls	r3, r0, #16
 801231c:	2010      	movs	r0, #16
 801231e:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8012322:	bf04      	itt	eq
 8012324:	021b      	lsleq	r3, r3, #8
 8012326:	3008      	addeq	r0, #8
 8012328:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 801232c:	bf04      	itt	eq
 801232e:	011b      	lsleq	r3, r3, #4
 8012330:	3004      	addeq	r0, #4
 8012332:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8012336:	bf04      	itt	eq
 8012338:	009b      	lsleq	r3, r3, #2
 801233a:	3002      	addeq	r0, #2
 801233c:	2b00      	cmp	r3, #0
 801233e:	db04      	blt.n	801234a <_ZN8touchgfx4clzuEm+0x3a>
 8012340:	3001      	adds	r0, #1
 8012342:	4770      	bx	lr
 8012344:	2000      	movs	r0, #0
 8012346:	e7ea      	b.n	801231e <_ZN8touchgfx4clzuEm+0xe>
 8012348:	2020      	movs	r0, #32
 801234a:	4770      	bx	lr

0801234c <_ZN8touchgfx7muldivuEmmmRm>:
 801234c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012350:	4680      	mov	r8, r0
 8012352:	460f      	mov	r7, r1
 8012354:	4615      	mov	r5, r2
 8012356:	461e      	mov	r6, r3
 8012358:	f7ff ffda 	bl	8012310 <_ZN8touchgfx4clzuEm>
 801235c:	b998      	cbnz	r0, 8012386 <_ZN8touchgfx7muldivuEmmmRm+0x3a>
 801235e:	4608      	mov	r0, r1
 8012360:	f7ff ffd6 	bl	8012310 <_ZN8touchgfx4clzuEm>
 8012364:	2800      	cmp	r0, #0
 8012366:	dd08      	ble.n	801237a <_ZN8touchgfx7muldivuEmmmRm+0x2e>
 8012368:	4633      	mov	r3, r6
 801236a:	462a      	mov	r2, r5
 801236c:	4641      	mov	r1, r8
 801236e:	4638      	mov	r0, r7
 8012370:	f7ff ffec 	bl	801234c <_ZN8touchgfx7muldivuEmmmRm>
 8012374:	b003      	add	sp, #12
 8012376:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801237a:	f04f 33ff 	mov.w	r3, #4294967295
 801237e:	6033      	str	r3, [r6, #0]
 8012380:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8012384:	e7f6      	b.n	8012374 <_ZN8touchgfx7muldivuEmmmRm+0x28>
 8012386:	fa31 f900 	lsrs.w	r9, r1, r0
 801238a:	fb01 f308 	mul.w	r3, r1, r8
 801238e:	d105      	bne.n	801239c <_ZN8touchgfx7muldivuEmmmRm+0x50>
 8012390:	fbb3 f0f5 	udiv	r0, r3, r5
 8012394:	fb05 3510 	mls	r5, r5, r0, r3
 8012398:	6035      	str	r5, [r6, #0]
 801239a:	e7eb      	b.n	8012374 <_ZN8touchgfx7muldivuEmmmRm+0x28>
 801239c:	2301      	movs	r3, #1
 801239e:	fa08 fb00 	lsl.w	fp, r8, r0
 80123a2:	fa03 f000 	lsl.w	r0, r3, r0
 80123a6:	3801      	subs	r0, #1
 80123a8:	462a      	mov	r2, r5
 80123aa:	4633      	mov	r3, r6
 80123ac:	4641      	mov	r1, r8
 80123ae:	4038      	ands	r0, r7
 80123b0:	f7ff ffcc 	bl	801234c <_ZN8touchgfx7muldivuEmmmRm>
 80123b4:	fbbb faf5 	udiv	sl, fp, r5
 80123b8:	462a      	mov	r2, r5
 80123ba:	4607      	mov	r7, r0
 80123bc:	ab01      	add	r3, sp, #4
 80123be:	fb05 b11a 	mls	r1, r5, sl, fp
 80123c2:	4648      	mov	r0, r9
 80123c4:	f7ff ffc2 	bl	801234c <_ZN8touchgfx7muldivuEmmmRm>
 80123c8:	9b01      	ldr	r3, [sp, #4]
 80123ca:	6832      	ldr	r2, [r6, #0]
 80123cc:	fb09 f40a 	mul.w	r4, r9, sl
 80123d0:	441a      	add	r2, r3
 80123d2:	fbb2 f3f5 	udiv	r3, r2, r5
 80123d6:	441c      	add	r4, r3
 80123d8:	443c      	add	r4, r7
 80123da:	4420      	add	r0, r4
 80123dc:	fb05 2513 	mls	r5, r5, r3, r2
 80123e0:	e7da      	b.n	8012398 <_ZN8touchgfx7muldivuEmmmRm+0x4c>

080123e2 <_ZN8touchgfx6muldivElllRl>:
 80123e2:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80123e4:	2800      	cmp	r0, #0
 80123e6:	bfba      	itte	lt
 80123e8:	4240      	neglt	r0, r0
 80123ea:	f04f 34ff 	movlt.w	r4, #4294967295
 80123ee:	2401      	movge	r4, #1
 80123f0:	2900      	cmp	r1, #0
 80123f2:	bfbc      	itt	lt
 80123f4:	4249      	neglt	r1, r1
 80123f6:	4264      	neglt	r4, r4
 80123f8:	2a00      	cmp	r2, #0
 80123fa:	bfb6      	itet	lt
 80123fc:	4265      	neglt	r5, r4
 80123fe:	4625      	movge	r5, r4
 8012400:	4252      	neglt	r2, r2
 8012402:	4288      	cmp	r0, r1
 8012404:	461e      	mov	r6, r3
 8012406:	bfc2      	ittt	gt
 8012408:	4603      	movgt	r3, r0
 801240a:	4608      	movgt	r0, r1
 801240c:	4619      	movgt	r1, r3
 801240e:	ab01      	add	r3, sp, #4
 8012410:	f7ff ff9c 	bl	801234c <_ZN8touchgfx7muldivuEmmmRm>
 8012414:	9b01      	ldr	r3, [sp, #4]
 8012416:	4368      	muls	r0, r5
 8012418:	435c      	muls	r4, r3
 801241a:	6034      	str	r4, [r6, #0]
 801241c:	b002      	add	sp, #8
 801241e:	bd70      	pop	{r4, r5, r6, pc}

08012420 <_ZN8touchgfx6muldivElll>:
 8012420:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8012422:	4606      	mov	r6, r0
 8012424:	ab01      	add	r3, sp, #4
 8012426:	460d      	mov	r5, r1
 8012428:	4614      	mov	r4, r2
 801242a:	f7ff ffda 	bl	80123e2 <_ZN8touchgfx6muldivElllRl>
 801242e:	2e00      	cmp	r6, #0
 8012430:	db20      	blt.n	8012474 <_ZN8touchgfx6muldivElll+0x54>
 8012432:	bf14      	ite	ne
 8012434:	2301      	movne	r3, #1
 8012436:	2300      	moveq	r3, #0
 8012438:	2d00      	cmp	r5, #0
 801243a:	db1e      	blt.n	801247a <_ZN8touchgfx6muldivElll+0x5a>
 801243c:	bf14      	ite	ne
 801243e:	2201      	movne	r2, #1
 8012440:	2200      	moveq	r2, #0
 8012442:	2c00      	cmp	r4, #0
 8012444:	fb03 f202 	mul.w	r2, r3, r2
 8012448:	db1a      	blt.n	8012480 <_ZN8touchgfx6muldivElll+0x60>
 801244a:	bf14      	ite	ne
 801244c:	2301      	movne	r3, #1
 801244e:	2300      	moveq	r3, #0
 8012450:	4353      	muls	r3, r2
 8012452:	2b01      	cmp	r3, #1
 8012454:	d117      	bne.n	8012486 <_ZN8touchgfx6muldivElll+0x66>
 8012456:	9b01      	ldr	r3, [sp, #4]
 8012458:	2c00      	cmp	r4, #0
 801245a:	bfb8      	it	lt
 801245c:	4264      	neglt	r4, r4
 801245e:	2b00      	cmp	r3, #0
 8012460:	f104 0401 	add.w	r4, r4, #1
 8012464:	bfb8      	it	lt
 8012466:	425b      	neglt	r3, r3
 8012468:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 801246c:	db00      	blt.n	8012470 <_ZN8touchgfx6muldivElll+0x50>
 801246e:	3001      	adds	r0, #1
 8012470:	b002      	add	sp, #8
 8012472:	bd70      	pop	{r4, r5, r6, pc}
 8012474:	f04f 33ff 	mov.w	r3, #4294967295
 8012478:	e7de      	b.n	8012438 <_ZN8touchgfx6muldivElll+0x18>
 801247a:	f04f 32ff 	mov.w	r2, #4294967295
 801247e:	e7e0      	b.n	8012442 <_ZN8touchgfx6muldivElll+0x22>
 8012480:	f04f 33ff 	mov.w	r3, #4294967295
 8012484:	e7e4      	b.n	8012450 <_ZN8touchgfx6muldivElll+0x30>
 8012486:	3301      	adds	r3, #1
 8012488:	d1f2      	bne.n	8012470 <_ZN8touchgfx6muldivElll+0x50>
 801248a:	9b01      	ldr	r3, [sp, #4]
 801248c:	2c00      	cmp	r4, #0
 801248e:	bfb8      	it	lt
 8012490:	4264      	neglt	r4, r4
 8012492:	2b00      	cmp	r3, #0
 8012494:	bfb8      	it	lt
 8012496:	425b      	neglt	r3, r3
 8012498:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 801249c:	bfc8      	it	gt
 801249e:	f100 30ff 	addgt.w	r0, r0, #4294967295
 80124a2:	e7e5      	b.n	8012470 <_ZN8touchgfx6muldivElll+0x50>

080124a4 <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 80124a4:	2000      	movs	r0, #0
 80124a6:	4770      	bx	lr

080124a8 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 80124a8:	2001      	movs	r0, #1
 80124aa:	4770      	bx	lr

080124ac <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 80124ac:	2002      	movs	r0, #2
 80124ae:	4770      	bx	lr

080124b0 <_ZN8touchgfx6ScreenD1Ev>:
 80124b0:	4770      	bx	lr

080124b2 <_ZN8touchgfx12GestureEventD1Ev>:
 80124b2:	4770      	bx	lr

080124b4 <_ZN8touchgfx9DragEventD1Ev>:
 80124b4:	4770      	bx	lr

080124b6 <_ZN8touchgfx10ClickEventD1Ev>:
 80124b6:	4770      	bx	lr

080124b8 <_ZN8touchgfx10ClickEventD0Ev>:
 80124b8:	b510      	push	{r4, lr}
 80124ba:	210c      	movs	r1, #12
 80124bc:	4604      	mov	r4, r0
 80124be:	f00e f973 	bl	80207a8 <_ZdlPvj>
 80124c2:	4620      	mov	r0, r4
 80124c4:	bd10      	pop	{r4, pc}

080124c6 <_ZN8touchgfx9DragEventD0Ev>:
 80124c6:	b510      	push	{r4, lr}
 80124c8:	2110      	movs	r1, #16
 80124ca:	4604      	mov	r4, r0
 80124cc:	f00e f96c 	bl	80207a8 <_ZdlPvj>
 80124d0:	4620      	mov	r0, r4
 80124d2:	bd10      	pop	{r4, pc}

080124d4 <_ZN8touchgfx12GestureEventD0Ev>:
 80124d4:	b510      	push	{r4, lr}
 80124d6:	210c      	movs	r1, #12
 80124d8:	4604      	mov	r4, r0
 80124da:	f00e f965 	bl	80207a8 <_ZdlPvj>
 80124de:	4620      	mov	r0, r4
 80124e0:	bd10      	pop	{r4, pc}

080124e2 <_ZN8touchgfx6ScreenD0Ev>:
 80124e2:	b510      	push	{r4, lr}
 80124e4:	213c      	movs	r1, #60	; 0x3c
 80124e6:	4604      	mov	r4, r0
 80124e8:	f00e f95e 	bl	80207a8 <_ZdlPvj>
 80124ec:	4620      	mov	r0, r4
 80124ee:	bd10      	pop	{r4, pc}

080124f0 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 80124f0:	b530      	push	{r4, r5, lr}
 80124f2:	460d      	mov	r5, r1
 80124f4:	6b01      	ldr	r1, [r0, #48]	; 0x30
 80124f6:	b087      	sub	sp, #28
 80124f8:	4604      	mov	r4, r0
 80124fa:	b301      	cbz	r1, 801253e <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 80124fc:	a801      	add	r0, sp, #4
 80124fe:	f7ff fe69 	bl	80121d4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012502:	892a      	ldrh	r2, [r5, #8]
 8012504:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8012508:	7928      	ldrb	r0, [r5, #4]
 801250a:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 801250e:	f88d 0010 	strb.w	r0, [sp, #16]
 8012512:	1ad2      	subs	r2, r2, r3
 8012514:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8012516:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8012518:	f8ad 1012 	strh.w	r1, [sp, #18]
 801251c:	441a      	add	r2, r3
 801251e:	896b      	ldrh	r3, [r5, #10]
 8012520:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 8012524:	f8ad 2014 	strh.w	r2, [sp, #20]
 8012528:	1b5b      	subs	r3, r3, r5
 801252a:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 801252c:	442b      	add	r3, r5
 801252e:	4d05      	ldr	r5, [pc, #20]	; (8012544 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 8012530:	9503      	str	r5, [sp, #12]
 8012532:	f8ad 3016 	strh.w	r3, [sp, #22]
 8012536:	6803      	ldr	r3, [r0, #0]
 8012538:	a903      	add	r1, sp, #12
 801253a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801253c:	4798      	blx	r3
 801253e:	b007      	add	sp, #28
 8012540:	bd30      	pop	{r4, r5, pc}
 8012542:	bf00      	nop
 8012544:	08024494 	.word	0x08024494

08012548 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 8012548:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801254c:	6b03      	ldr	r3, [r0, #48]	; 0x30
 801254e:	b08a      	sub	sp, #40	; 0x28
 8012550:	4604      	mov	r4, r0
 8012552:	460d      	mov	r5, r1
 8012554:	b113      	cbz	r3, 801255c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 8012556:	790b      	ldrb	r3, [r1, #4]
 8012558:	2b00      	cmp	r3, #0
 801255a:	d044      	beq.n	80125e6 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 801255c:	f104 0804 	add.w	r8, r4, #4
 8012560:	4641      	mov	r1, r8
 8012562:	a803      	add	r0, sp, #12
 8012564:	f7ff fe36 	bl	80121d4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012568:	792b      	ldrb	r3, [r5, #4]
 801256a:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801256e:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 8012572:	b983      	cbnz	r3, 8012596 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 8012574:	892a      	ldrh	r2, [r5, #8]
 8012576:	88e9      	ldrh	r1, [r5, #6]
 8012578:	f104 0336 	add.w	r3, r4, #54	; 0x36
 801257c:	1b92      	subs	r2, r2, r6
 801257e:	1bc9      	subs	r1, r1, r7
 8012580:	9301      	str	r3, [sp, #4]
 8012582:	f104 0334 	add.w	r3, r4, #52	; 0x34
 8012586:	9300      	str	r3, [sp, #0]
 8012588:	b212      	sxth	r2, r2
 801258a:	f104 0330 	add.w	r3, r4, #48	; 0x30
 801258e:	b209      	sxth	r1, r1
 8012590:	4640      	mov	r0, r8
 8012592:	f7f8 fb77 	bl	800ac84 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 8012596:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8012598:	b329      	cbz	r1, 80125e6 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 801259a:	a805      	add	r0, sp, #20
 801259c:	f7ff fe1a 	bl	80121d4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80125a0:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 80125a4:	792b      	ldrb	r3, [r5, #4]
 80125a6:	6b20      	ldr	r0, [r4, #48]	; 0x30
 80125a8:	f88d 3020 	strb.w	r3, [sp, #32]
 80125ac:	1abf      	subs	r7, r7, r2
 80125ae:	88ea      	ldrh	r2, [r5, #6]
 80125b0:	4417      	add	r7, r2
 80125b2:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 80125b4:	4417      	add	r7, r2
 80125b6:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 80125ba:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 80125be:	1ab6      	subs	r6, r6, r2
 80125c0:	892a      	ldrh	r2, [r5, #8]
 80125c2:	4416      	add	r6, r2
 80125c4:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 80125c6:	4416      	add	r6, r2
 80125c8:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 80125cc:	4a07      	ldr	r2, [pc, #28]	; (80125ec <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 80125ce:	9207      	str	r2, [sp, #28]
 80125d0:	2600      	movs	r6, #0
 80125d2:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 80125d6:	6803      	ldr	r3, [r0, #0]
 80125d8:	a907      	add	r1, sp, #28
 80125da:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80125dc:	4798      	blx	r3
 80125de:	792b      	ldrb	r3, [r5, #4]
 80125e0:	b10b      	cbz	r3, 80125e6 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 80125e2:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 80125e6:	b00a      	add	sp, #40	; 0x28
 80125e8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80125ec:	0802446c 	.word	0x0802446c

080125f0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 80125f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80125f4:	460c      	mov	r4, r1
 80125f6:	6b01      	ldr	r1, [r0, #48]	; 0x30
 80125f8:	b088      	sub	sp, #32
 80125fa:	4605      	mov	r5, r0
 80125fc:	2900      	cmp	r1, #0
 80125fe:	d06d      	beq.n	80126dc <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 8012600:	4668      	mov	r0, sp
 8012602:	f7ff fde7 	bl	80121d4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012606:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 8012608:	88e3      	ldrh	r3, [r4, #6]
 801260a:	f9bd 8000 	ldrsh.w	r8, [sp]
 801260e:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 8012612:	440b      	add	r3, r1
 8012614:	b21b      	sxth	r3, r3
 8012616:	4543      	cmp	r3, r8
 8012618:	db31      	blt.n	801267e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801261a:	f8bd c004 	ldrh.w	ip, [sp, #4]
 801261e:	44c4      	add	ip, r8
 8012620:	fa0f fc8c 	sxth.w	ip, ip
 8012624:	4563      	cmp	r3, ip
 8012626:	da2a      	bge.n	801267e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8012628:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 801262a:	8926      	ldrh	r6, [r4, #8]
 801262c:	4416      	add	r6, r2
 801262e:	b236      	sxth	r6, r6
 8012630:	42be      	cmp	r6, r7
 8012632:	db24      	blt.n	801267e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8012634:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8012638:	4438      	add	r0, r7
 801263a:	b200      	sxth	r0, r0
 801263c:	4286      	cmp	r6, r0
 801263e:	da1e      	bge.n	801267e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8012640:	8963      	ldrh	r3, [r4, #10]
 8012642:	4419      	add	r1, r3
 8012644:	b209      	sxth	r1, r1
 8012646:	4541      	cmp	r1, r8
 8012648:	db08      	blt.n	801265c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801264a:	4561      	cmp	r1, ip
 801264c:	da06      	bge.n	801265c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801264e:	89a3      	ldrh	r3, [r4, #12]
 8012650:	441a      	add	r2, r3
 8012652:	b212      	sxth	r2, r2
 8012654:	42ba      	cmp	r2, r7
 8012656:	db01      	blt.n	801265c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8012658:	4282      	cmp	r2, r0
 801265a:	db10      	blt.n	801267e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801265c:	4b21      	ldr	r3, [pc, #132]	; (80126e4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 801265e:	9304      	str	r3, [sp, #16]
 8012660:	2302      	movs	r3, #2
 8012662:	f88d 3014 	strb.w	r3, [sp, #20]
 8012666:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8012668:	2300      	movs	r3, #0
 801266a:	f8ad 3016 	strh.w	r3, [sp, #22]
 801266e:	f8ad 3018 	strh.w	r3, [sp, #24]
 8012672:	f8ad 301a 	strh.w	r3, [sp, #26]
 8012676:	6803      	ldr	r3, [r0, #0]
 8012678:	a904      	add	r1, sp, #16
 801267a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801267c:	4798      	blx	r3
 801267e:	1d29      	adds	r1, r5, #4
 8012680:	a802      	add	r0, sp, #8
 8012682:	f7ff fda7 	bl	80121d4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012686:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801268a:	88e0      	ldrh	r0, [r4, #6]
 801268c:	7921      	ldrb	r1, [r4, #4]
 801268e:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 8012692:	8922      	ldrh	r2, [r4, #8]
 8012694:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 8012696:	f88d 1014 	strb.w	r1, [sp, #20]
 801269a:	eba3 0808 	sub.w	r8, r3, r8
 801269e:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 80126a2:	1bdf      	subs	r7, r3, r7
 80126a4:	b2bb      	uxth	r3, r7
 80126a6:	fa1f f888 	uxth.w	r8, r8
 80126aa:	8967      	ldrh	r7, [r4, #10]
 80126ac:	89a4      	ldrh	r4, [r4, #12]
 80126ae:	4440      	add	r0, r8
 80126b0:	4460      	add	r0, ip
 80126b2:	441a      	add	r2, r3
 80126b4:	44b8      	add	r8, r7
 80126b6:	4423      	add	r3, r4
 80126b8:	f8ad 0016 	strh.w	r0, [sp, #22]
 80126bc:	4433      	add	r3, r6
 80126be:	4432      	add	r2, r6
 80126c0:	44e0      	add	r8, ip
 80126c2:	4c09      	ldr	r4, [pc, #36]	; (80126e8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 80126c4:	6b28      	ldr	r0, [r5, #48]	; 0x30
 80126c6:	9404      	str	r4, [sp, #16]
 80126c8:	f8ad 2018 	strh.w	r2, [sp, #24]
 80126cc:	f8ad 801a 	strh.w	r8, [sp, #26]
 80126d0:	f8ad 301c 	strh.w	r3, [sp, #28]
 80126d4:	6803      	ldr	r3, [r0, #0]
 80126d6:	a904      	add	r1, sp, #16
 80126d8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80126da:	4798      	blx	r3
 80126dc:	b008      	add	sp, #32
 80126de:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80126e2:	bf00      	nop
 80126e4:	0802446c 	.word	0x0802446c
 80126e8:	08024480 	.word	0x08024480

080126ec <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 80126ec:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80126ee:	4604      	mov	r4, r0
 80126f0:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 80126f4:	3201      	adds	r2, #1
 80126f6:	d112      	bne.n	801271e <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 80126f8:	6803      	ldr	r3, [r0, #0]
 80126fa:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 80126fe:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8012702:	f8ad 1004 	strh.w	r1, [sp, #4]
 8012706:	2500      	movs	r5, #0
 8012708:	9500      	str	r5, [sp, #0]
 801270a:	466d      	mov	r5, sp
 801270c:	4629      	mov	r1, r5
 801270e:	f8ad 2006 	strh.w	r2, [sp, #6]
 8012712:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8012714:	4798      	blx	r3
 8012716:	e895 0003 	ldmia.w	r5, {r0, r1}
 801271a:	e884 0003 	stmia.w	r4, {r0, r1}
 801271e:	4620      	mov	r0, r4
 8012720:	b003      	add	sp, #12
 8012722:	bd30      	pop	{r4, r5, pc}

08012724 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 8012724:	b513      	push	{r0, r1, r4, lr}
 8012726:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 801272a:	3301      	adds	r3, #1
 801272c:	4604      	mov	r4, r0
 801272e:	d109      	bne.n	8012744 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 8012730:	4601      	mov	r1, r0
 8012732:	4668      	mov	r0, sp
 8012734:	f7ff fd4e 	bl	80121d4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012738:	f8bd 3000 	ldrh.w	r3, [sp]
 801273c:	8423      	strh	r3, [r4, #32]
 801273e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8012742:	8463      	strh	r3, [r4, #34]	; 0x22
 8012744:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 8012748:	b002      	add	sp, #8
 801274a:	bd10      	pop	{r4, pc}

0801274c <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 801274c:	b513      	push	{r0, r1, r4, lr}
 801274e:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 8012752:	3301      	adds	r3, #1
 8012754:	4604      	mov	r4, r0
 8012756:	d109      	bne.n	801276c <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 8012758:	4601      	mov	r1, r0
 801275a:	4668      	mov	r0, sp
 801275c:	f7ff fd3a 	bl	80121d4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012760:	f8bd 3000 	ldrh.w	r3, [sp]
 8012764:	8423      	strh	r3, [r4, #32]
 8012766:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801276a:	8463      	strh	r3, [r4, #34]	; 0x22
 801276c:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 8012770:	b002      	add	sp, #8
 8012772:	bd10      	pop	{r4, pc}

08012774 <_ZN8touchgfx6ScreenC1Ev>:
 8012774:	b570      	push	{r4, r5, r6, lr}
 8012776:	4605      	mov	r5, r0
 8012778:	4b16      	ldr	r3, [pc, #88]	; (80127d4 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 801277a:	f845 3b04 	str.w	r3, [r5], #4
 801277e:	2300      	movs	r3, #0
 8012780:	8103      	strh	r3, [r0, #8]
 8012782:	8143      	strh	r3, [r0, #10]
 8012784:	8183      	strh	r3, [r0, #12]
 8012786:	81c3      	strh	r3, [r0, #14]
 8012788:	8203      	strh	r3, [r0, #16]
 801278a:	8243      	strh	r3, [r0, #18]
 801278c:	8283      	strh	r3, [r0, #20]
 801278e:	82c3      	strh	r3, [r0, #22]
 8012790:	e9c0 3306 	strd	r3, r3, [r0, #24]
 8012794:	6203      	str	r3, [r0, #32]
 8012796:	8483      	strh	r3, [r0, #36]	; 0x24
 8012798:	84c3      	strh	r3, [r0, #38]	; 0x26
 801279a:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 801279e:	4a0e      	ldr	r2, [pc, #56]	; (80127d8 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 80127a0:	6343      	str	r3, [r0, #52]	; 0x34
 80127a2:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 80127a6:	4b0d      	ldr	r3, [pc, #52]	; (80127dc <_ZN8touchgfx6ScreenC1Ev+0x68>)
 80127a8:	6042      	str	r2, [r0, #4]
 80127aa:	f9b3 6000 	ldrsh.w	r6, [r3]
 80127ae:	6b93      	ldr	r3, [r2, #56]	; 0x38
 80127b0:	4a0b      	ldr	r2, [pc, #44]	; (80127e0 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 80127b2:	4604      	mov	r4, r0
 80127b4:	2101      	movs	r1, #1
 80127b6:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 80127ba:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 80127be:	f9b2 1000 	ldrsh.w	r1, [r2]
 80127c2:	4628      	mov	r0, r5
 80127c4:	4798      	blx	r3
 80127c6:	6863      	ldr	r3, [r4, #4]
 80127c8:	4628      	mov	r0, r5
 80127ca:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80127cc:	4631      	mov	r1, r6
 80127ce:	4798      	blx	r3
 80127d0:	4620      	mov	r0, r4
 80127d2:	bd70      	pop	{r4, r5, r6, pc}
 80127d4:	080244a8 	.word	0x080244a8
 80127d8:	0802385c 	.word	0x0802385c
 80127dc:	200155fa 	.word	0x200155fa
 80127e0:	200155f8 	.word	0x200155f8

080127e4 <_ZN8touchgfx6Screen4drawEv>:
 80127e4:	b507      	push	{r0, r1, r2, lr}
 80127e6:	4b09      	ldr	r3, [pc, #36]	; (801280c <_ZN8touchgfx6Screen4drawEv+0x28>)
 80127e8:	f9b3 2000 	ldrsh.w	r2, [r3]
 80127ec:	4b08      	ldr	r3, [pc, #32]	; (8012810 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 80127ee:	f8ad 2004 	strh.w	r2, [sp, #4]
 80127f2:	f9b3 3000 	ldrsh.w	r3, [r3]
 80127f6:	f8ad 3006 	strh.w	r3, [sp, #6]
 80127fa:	6803      	ldr	r3, [r0, #0]
 80127fc:	2100      	movs	r1, #0
 80127fe:	9100      	str	r1, [sp, #0]
 8012800:	689b      	ldr	r3, [r3, #8]
 8012802:	4669      	mov	r1, sp
 8012804:	4798      	blx	r3
 8012806:	b003      	add	sp, #12
 8012808:	f85d fb04 	ldr.w	pc, [sp], #4
 801280c:	200155f8 	.word	0x200155f8
 8012810:	200155fa 	.word	0x200155fa

08012814 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 8012814:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012818:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 801281c:	2b00      	cmp	r3, #0
 801281e:	b089      	sub	sp, #36	; 0x24
 8012820:	4680      	mov	r8, r0
 8012822:	460c      	mov	r4, r1
 8012824:	4615      	mov	r5, r2
 8012826:	dd0e      	ble.n	8012846 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8012828:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 801282c:	2b00      	cmp	r3, #0
 801282e:	dd0a      	ble.n	8012846 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8012830:	4628      	mov	r0, r5
 8012832:	f7ff ff5b 	bl	80126ec <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8012836:	4621      	mov	r1, r4
 8012838:	f7fe fc01 	bl	801103e <_ZNK8touchgfx4Rect9intersectERKS0_>
 801283c:	69eb      	ldr	r3, [r5, #28]
 801283e:	b928      	cbnz	r0, 801284c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 8012840:	461d      	mov	r5, r3
 8012842:	2b00      	cmp	r3, #0
 8012844:	d1f4      	bne.n	8012830 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 8012846:	b009      	add	sp, #36	; 0x24
 8012848:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801284c:	ae04      	add	r6, sp, #16
 801284e:	2b00      	cmp	r3, #0
 8012850:	f000 80b5 	beq.w	80129be <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8012854:	682b      	ldr	r3, [r5, #0]
 8012856:	4629      	mov	r1, r5
 8012858:	68db      	ldr	r3, [r3, #12]
 801285a:	a802      	add	r0, sp, #8
 801285c:	4798      	blx	r3
 801285e:	4628      	mov	r0, r5
 8012860:	f7ff ff60 	bl	8012724 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8012864:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 8012868:	4407      	add	r7, r0
 801286a:	4628      	mov	r0, r5
 801286c:	f7ff ff6e 	bl	801274c <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8012870:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8012874:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8012878:	f8ad 2014 	strh.w	r2, [sp, #20]
 801287c:	4418      	add	r0, r3
 801287e:	4621      	mov	r1, r4
 8012880:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8012884:	f8ad 0012 	strh.w	r0, [sp, #18]
 8012888:	b23f      	sxth	r7, r7
 801288a:	4630      	mov	r0, r6
 801288c:	f8ad 3016 	strh.w	r3, [sp, #22]
 8012890:	f8ad 7010 	strh.w	r7, [sp, #16]
 8012894:	f7f8 fada 	bl	800ae4c <_ZN8touchgfx4RectaNERKS0_>
 8012898:	4628      	mov	r0, r5
 801289a:	f7ff ff27 	bl	80126ec <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 801289e:	4602      	mov	r2, r0
 80128a0:	e896 0003 	ldmia.w	r6, {r0, r1}
 80128a4:	ab06      	add	r3, sp, #24
 80128a6:	e883 0003 	stmia.w	r3, {r0, r1}
 80128aa:	4611      	mov	r1, r2
 80128ac:	4618      	mov	r0, r3
 80128ae:	f7f8 facd 	bl	800ae4c <_ZN8touchgfx4RectaNERKS0_>
 80128b2:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80128b6:	f9b4 1000 	ldrsh.w	r1, [r4]
 80128ba:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 80128be:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 80128c2:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 80128c6:	4299      	cmp	r1, r3
 80128c8:	d10b      	bne.n	80128e2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80128ca:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80128ce:	4552      	cmp	r2, sl
 80128d0:	d107      	bne.n	80128e2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80128d2:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 80128d6:	455a      	cmp	r2, fp
 80128d8:	d103      	bne.n	80128e2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80128da:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 80128de:	454a      	cmp	r2, r9
 80128e0:	d06d      	beq.n	80129be <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 80128e2:	f1bb 0f00 	cmp.w	fp, #0
 80128e6:	dd65      	ble.n	80129b4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 80128e8:	f1b9 0f00 	cmp.w	r9, #0
 80128ec:	dd62      	ble.n	80129b4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 80128ee:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80128f2:	fa1f f08a 	uxth.w	r0, sl
 80128f6:	4552      	cmp	r2, sl
 80128f8:	9000      	str	r0, [sp, #0]
 80128fa:	da12      	bge.n	8012922 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 80128fc:	9301      	str	r3, [sp, #4]
 80128fe:	9b00      	ldr	r3, [sp, #0]
 8012900:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8012904:	f8ad 2012 	strh.w	r2, [sp, #18]
 8012908:	1a9a      	subs	r2, r3, r2
 801290a:	f8ad 1010 	strh.w	r1, [sp, #16]
 801290e:	f8ad 0014 	strh.w	r0, [sp, #20]
 8012912:	f8ad 2016 	strh.w	r2, [sp, #22]
 8012916:	69ea      	ldr	r2, [r5, #28]
 8012918:	4631      	mov	r1, r6
 801291a:	4640      	mov	r0, r8
 801291c:	f7ff ff7a 	bl	8012814 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8012920:	9b01      	ldr	r3, [sp, #4]
 8012922:	f9b4 2000 	ldrsh.w	r2, [r4]
 8012926:	429a      	cmp	r2, r3
 8012928:	b29f      	uxth	r7, r3
 801292a:	da0d      	bge.n	8012948 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 801292c:	f8ad 2010 	strh.w	r2, [sp, #16]
 8012930:	1aba      	subs	r2, r7, r2
 8012932:	f8ad a012 	strh.w	sl, [sp, #18]
 8012936:	f8ad 2014 	strh.w	r2, [sp, #20]
 801293a:	f8ad 9016 	strh.w	r9, [sp, #22]
 801293e:	69ea      	ldr	r2, [r5, #28]
 8012940:	4631      	mov	r1, r6
 8012942:	4640      	mov	r0, r8
 8012944:	f7ff ff66 	bl	8012814 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8012948:	8822      	ldrh	r2, [r4, #0]
 801294a:	88a3      	ldrh	r3, [r4, #4]
 801294c:	445f      	add	r7, fp
 801294e:	4413      	add	r3, r2
 8012950:	b29b      	uxth	r3, r3
 8012952:	b2bf      	uxth	r7, r7
 8012954:	b23a      	sxth	r2, r7
 8012956:	b219      	sxth	r1, r3
 8012958:	4291      	cmp	r1, r2
 801295a:	dd0d      	ble.n	8012978 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 801295c:	1bdb      	subs	r3, r3, r7
 801295e:	f8ad 2010 	strh.w	r2, [sp, #16]
 8012962:	f8ad a012 	strh.w	sl, [sp, #18]
 8012966:	f8ad 3014 	strh.w	r3, [sp, #20]
 801296a:	f8ad 9016 	strh.w	r9, [sp, #22]
 801296e:	69ea      	ldr	r2, [r5, #28]
 8012970:	4631      	mov	r1, r6
 8012972:	4640      	mov	r0, r8
 8012974:	f7ff ff4e 	bl	8012814 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8012978:	88e2      	ldrh	r2, [r4, #6]
 801297a:	8863      	ldrh	r3, [r4, #2]
 801297c:	4413      	add	r3, r2
 801297e:	9a00      	ldr	r2, [sp, #0]
 8012980:	444a      	add	r2, r9
 8012982:	b29b      	uxth	r3, r3
 8012984:	fa1f f982 	uxth.w	r9, r2
 8012988:	fa0f f289 	sxth.w	r2, r9
 801298c:	b219      	sxth	r1, r3
 801298e:	428a      	cmp	r2, r1
 8012990:	da15      	bge.n	80129be <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8012992:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8012996:	f9b4 0000 	ldrsh.w	r0, [r4]
 801299a:	f8ad 1014 	strh.w	r1, [sp, #20]
 801299e:	eba3 0309 	sub.w	r3, r3, r9
 80129a2:	f8ad 0010 	strh.w	r0, [sp, #16]
 80129a6:	f8ad 2012 	strh.w	r2, [sp, #18]
 80129aa:	f8ad 3016 	strh.w	r3, [sp, #22]
 80129ae:	69ea      	ldr	r2, [r5, #28]
 80129b0:	4631      	mov	r1, r6
 80129b2:	e001      	b.n	80129b8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 80129b4:	69ea      	ldr	r2, [r5, #28]
 80129b6:	4621      	mov	r1, r4
 80129b8:	4640      	mov	r0, r8
 80129ba:	f7ff ff2b 	bl	8012814 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80129be:	4628      	mov	r0, r5
 80129c0:	f7ff fe94 	bl	80126ec <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 80129c4:	6861      	ldr	r1, [r4, #4]
 80129c6:	4602      	mov	r2, r0
 80129c8:	6820      	ldr	r0, [r4, #0]
 80129ca:	4633      	mov	r3, r6
 80129cc:	c303      	stmia	r3!, {r0, r1}
 80129ce:	4611      	mov	r1, r2
 80129d0:	4630      	mov	r0, r6
 80129d2:	f7f8 fa3b 	bl	800ae4c <_ZN8touchgfx4RectaNERKS0_>
 80129d6:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 80129da:	2b00      	cmp	r3, #0
 80129dc:	f77f af33 	ble.w	8012846 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80129e0:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 80129e4:	2b00      	cmp	r3, #0
 80129e6:	f77f af2e 	ble.w	8012846 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80129ea:	4628      	mov	r0, r5
 80129ec:	f7ff fe9a 	bl	8012724 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 80129f0:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 80129f4:	1a18      	subs	r0, r3, r0
 80129f6:	f8ad 0010 	strh.w	r0, [sp, #16]
 80129fa:	4628      	mov	r0, r5
 80129fc:	f7ff fea6 	bl	801274c <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8012a00:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8012a04:	1a18      	subs	r0, r3, r0
 8012a06:	f8ad 0012 	strh.w	r0, [sp, #18]
 8012a0a:	682b      	ldr	r3, [r5, #0]
 8012a0c:	4631      	mov	r1, r6
 8012a0e:	689b      	ldr	r3, [r3, #8]
 8012a10:	4628      	mov	r0, r5
 8012a12:	4798      	blx	r3
 8012a14:	e717      	b.n	8012846 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

08012a16 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 8012a16:	b570      	push	{r4, r5, r6, lr}
 8012a18:	460c      	mov	r4, r1
 8012a1a:	b086      	sub	sp, #24
 8012a1c:	1d06      	adds	r6, r0, #4
 8012a1e:	2300      	movs	r3, #0
 8012a20:	4631      	mov	r1, r6
 8012a22:	4605      	mov	r5, r0
 8012a24:	a802      	add	r0, sp, #8
 8012a26:	9301      	str	r3, [sp, #4]
 8012a28:	f7ff fbd4 	bl	80121d4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012a2c:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8012a30:	8822      	ldrh	r2, [r4, #0]
 8012a32:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 8012a36:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8012a3a:	f8ad 0014 	strh.w	r0, [sp, #20]
 8012a3e:	1ad2      	subs	r2, r2, r3
 8012a40:	8863      	ldrh	r3, [r4, #2]
 8012a42:	f8ad 2010 	strh.w	r2, [sp, #16]
 8012a46:	1a5b      	subs	r3, r3, r1
 8012a48:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8012a4c:	f8ad 1016 	strh.w	r1, [sp, #22]
 8012a50:	aa01      	add	r2, sp, #4
 8012a52:	a904      	add	r1, sp, #16
 8012a54:	4630      	mov	r0, r6
 8012a56:	f8ad 3012 	strh.w	r3, [sp, #18]
 8012a5a:	f7f8 facf 	bl	800affc <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 8012a5e:	9a01      	ldr	r2, [sp, #4]
 8012a60:	b11a      	cbz	r2, 8012a6a <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 8012a62:	4621      	mov	r1, r4
 8012a64:	4628      	mov	r0, r5
 8012a66:	f7ff fed5 	bl	8012814 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8012a6a:	b006      	add	sp, #24
 8012a6c:	bd70      	pop	{r4, r5, r6, pc}

08012a6e <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 8012a6e:	b530      	push	{r4, r5, lr}
 8012a70:	4602      	mov	r2, r0
 8012a72:	4604      	mov	r4, r0
 8012a74:	f852 0f08 	ldr.w	r0, [r2, #8]!
 8012a78:	b085      	sub	sp, #20
 8012a7a:	460d      	mov	r5, r1
 8012a7c:	6851      	ldr	r1, [r2, #4]
 8012a7e:	466b      	mov	r3, sp
 8012a80:	c303      	stmia	r3!, {r0, r1}
 8012a82:	4629      	mov	r1, r5
 8012a84:	4668      	mov	r0, sp
 8012a86:	f7f8 f9e1 	bl	800ae4c <_ZN8touchgfx4RectaNERKS0_>
 8012a8a:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8012a8e:	b12b      	cbz	r3, 8012a9c <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 8012a90:	4669      	mov	r1, sp
 8012a92:	4620      	mov	r0, r4
 8012a94:	f7ff ffbf 	bl	8012a16 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 8012a98:	b005      	add	sp, #20
 8012a9a:	bd30      	pop	{r4, r5, pc}
 8012a9c:	3404      	adds	r4, #4
 8012a9e:	4621      	mov	r1, r4
 8012aa0:	a802      	add	r0, sp, #8
 8012aa2:	f7ff fb97 	bl	80121d4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012aa6:	f8bd 3000 	ldrh.w	r3, [sp]
 8012aaa:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 8012aae:	1a9b      	subs	r3, r3, r2
 8012ab0:	f8ad 3000 	strh.w	r3, [sp]
 8012ab4:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8012ab8:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8012abc:	4669      	mov	r1, sp
 8012abe:	1a9b      	subs	r3, r3, r2
 8012ac0:	4620      	mov	r0, r4
 8012ac2:	f8ad 3002 	strh.w	r3, [sp, #2]
 8012ac6:	f7f8 fa60 	bl	800af8a <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 8012aca:	e7e5      	b.n	8012a98 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

08012acc <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 8012acc:	680a      	ldr	r2, [r1, #0]
 8012ace:	460b      	mov	r3, r1
 8012ad0:	6992      	ldr	r2, [r2, #24]
 8012ad2:	1d01      	adds	r1, r0, #4
 8012ad4:	4618      	mov	r0, r3
 8012ad6:	4710      	bx	r2

08012ad8 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
 8012ad8:	4298      	cmp	r0, r3
 8012ada:	d200      	bcs.n	8012ade <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
 8012adc:	b913      	cbnz	r3, 8012ae4 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
 8012ade:	440a      	add	r2, r1
 8012ae0:	b210      	sxth	r0, r2
 8012ae2:	4770      	bx	lr
 8012ae4:	ee07 0a90 	vmov	s15, r0
 8012ae8:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8012aec:	ee07 3a90 	vmov	s15, r3
 8012af0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012af4:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8012af8:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8012afc:	ee37 7a66 	vsub.f32	s14, s14, s13
 8012b00:	ee07 2a90 	vmov	s15, r2
 8012b04:	ee67 5a07 	vmul.f32	s11, s14, s14
 8012b08:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 8012b0c:	eee5 6a87 	vfma.f32	s13, s11, s14
 8012b10:	ee07 1a90 	vmov	s15, r1
 8012b14:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012b18:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8012b1c:	eee6 7a26 	vfma.f32	s15, s12, s13
 8012b20:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8012b24:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012b28:	bfcc      	ite	gt
 8012b2a:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 8012b2e:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 8012b32:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8012b36:	ee17 3a90 	vmov	r3, s15
 8012b3a:	b218      	sxth	r0, r3
 8012b3c:	4770      	bx	lr

08012b3e <_ZN8touchgfx12TextProviderC1Ev>:
 8012b3e:	b538      	push	{r3, r4, r5, lr}
 8012b40:	2500      	movs	r5, #0
 8012b42:	2302      	movs	r3, #2
 8012b44:	4604      	mov	r4, r0
 8012b46:	e9c0 5500 	strd	r5, r5, [r0]
 8012b4a:	7403      	strb	r3, [r0, #16]
 8012b4c:	6145      	str	r5, [r0, #20]
 8012b4e:	7605      	strb	r5, [r0, #24]
 8012b50:	83c5      	strh	r5, [r0, #30]
 8012b52:	8405      	strh	r5, [r0, #32]
 8012b54:	86c5      	strh	r5, [r0, #54]	; 0x36
 8012b56:	8705      	strh	r5, [r0, #56]	; 0x38
 8012b58:	87c5      	strh	r5, [r0, #62]	; 0x3e
 8012b5a:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 8012b5e:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 8012b62:	220e      	movs	r2, #14
 8012b64:	4629      	mov	r1, r5
 8012b66:	304c      	adds	r0, #76	; 0x4c
 8012b68:	f00e f858 	bl	8020c1c <memset>
 8012b6c:	2301      	movs	r3, #1
 8012b6e:	4620      	mov	r0, r4
 8012b70:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 8012b74:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8012b78:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 8012b7c:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 8012b80:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 8012b84:	f7f2 f938 	bl	8004df8 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 8012b88:	4620      	mov	r0, r4
 8012b8a:	bd38      	pop	{r3, r4, r5, pc}

08012b8c <_ZN8touchgfx12TextProvider11endOfStringEv>:
 8012b8c:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8012b8e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8012b92:	8c40      	ldrh	r0, [r0, #34]	; 0x22
 8012b94:	fab0 f080 	clz	r0, r0
 8012b98:	0940      	lsrs	r0, r0, #5
 8012b9a:	4770      	bx	lr

08012b9c <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 8012b9c:	b530      	push	{r4, r5, lr}
 8012b9e:	2500      	movs	r5, #0
 8012ba0:	2401      	movs	r4, #1
 8012ba2:	6843      	ldr	r3, [r0, #4]
 8012ba4:	b913      	cbnz	r3, 8012bac <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 8012ba6:	6803      	ldr	r3, [r0, #0]
 8012ba8:	b313      	cbz	r3, 8012bf0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8012baa:	6043      	str	r3, [r0, #4]
 8012bac:	7e03      	ldrb	r3, [r0, #24]
 8012bae:	b143      	cbz	r3, 8012bc2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 8012bb0:	6943      	ldr	r3, [r0, #20]
 8012bb2:	b12b      	cbz	r3, 8012bc0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8012bb4:	881a      	ldrh	r2, [r3, #0]
 8012bb6:	b11a      	cbz	r2, 8012bc0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8012bb8:	1c9a      	adds	r2, r3, #2
 8012bba:	6142      	str	r2, [r0, #20]
 8012bbc:	8818      	ldrh	r0, [r3, #0]
 8012bbe:	bd30      	pop	{r4, r5, pc}
 8012bc0:	7605      	strb	r5, [r0, #24]
 8012bc2:	6843      	ldr	r3, [r0, #4]
 8012bc4:	8819      	ldrh	r1, [r3, #0]
 8012bc6:	b199      	cbz	r1, 8012bf0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8012bc8:	1c9a      	adds	r2, r3, #2
 8012bca:	2902      	cmp	r1, #2
 8012bcc:	6042      	str	r2, [r0, #4]
 8012bce:	d1f5      	bne.n	8012bbc <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 8012bd0:	7c03      	ldrb	r3, [r0, #16]
 8012bd2:	2b01      	cmp	r3, #1
 8012bd4:	d8e5      	bhi.n	8012ba2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8012bd6:	1c5a      	adds	r2, r3, #1
 8012bd8:	3302      	adds	r3, #2
 8012bda:	7402      	strb	r2, [r0, #16]
 8012bdc:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8012be0:	6143      	str	r3, [r0, #20]
 8012be2:	2b00      	cmp	r3, #0
 8012be4:	d0dd      	beq.n	8012ba2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8012be6:	881b      	ldrh	r3, [r3, #0]
 8012be8:	2b00      	cmp	r3, #0
 8012bea:	d0da      	beq.n	8012ba2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8012bec:	7604      	strb	r4, [r0, #24]
 8012bee:	e7d8      	b.n	8012ba2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8012bf0:	2000      	movs	r0, #0
 8012bf2:	e7e4      	b.n	8012bbe <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

08012bf4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 8012bf4:	b430      	push	{r4, r5}
 8012bf6:	6001      	str	r1, [r0, #0]
 8012bf8:	2100      	movs	r1, #0
 8012bfa:	6041      	str	r1, [r0, #4]
 8012bfc:	6815      	ldr	r5, [r2, #0]
 8012bfe:	6085      	str	r5, [r0, #8]
 8012c00:	6852      	ldr	r2, [r2, #4]
 8012c02:	6443      	str	r3, [r0, #68]	; 0x44
 8012c04:	9b02      	ldr	r3, [sp, #8]
 8012c06:	60c2      	str	r2, [r0, #12]
 8012c08:	7401      	strb	r1, [r0, #16]
 8012c0a:	6141      	str	r1, [r0, #20]
 8012c0c:	7601      	strb	r1, [r0, #24]
 8012c0e:	8701      	strh	r1, [r0, #56]	; 0x38
 8012c10:	8401      	strh	r1, [r0, #32]
 8012c12:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 8012c16:	6483      	str	r3, [r0, #72]	; 0x48
 8012c18:	bc30      	pop	{r4, r5}
 8012c1a:	f7f2 b8ed 	b.w	8004df8 <_ZN8touchgfx12TextProvider18initializeInternalEv>

08012c1e <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 8012c1e:	b408      	push	{r3}
 8012c20:	b510      	push	{r4, lr}
 8012c22:	b085      	sub	sp, #20
 8012c24:	ac07      	add	r4, sp, #28
 8012c26:	f854 3b04 	ldr.w	r3, [r4], #4
 8012c2a:	9300      	str	r3, [sp, #0]
 8012c2c:	4613      	mov	r3, r2
 8012c2e:	4622      	mov	r2, r4
 8012c30:	9403      	str	r4, [sp, #12]
 8012c32:	f7ff ffdf 	bl	8012bf4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8012c36:	b005      	add	sp, #20
 8012c38:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012c3c:	b001      	add	sp, #4
 8012c3e:	4770      	bx	lr

08012c40 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 8012c40:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012c42:	4605      	mov	r5, r0
 8012c44:	4608      	mov	r0, r1
 8012c46:	b1e9      	cbz	r1, 8012c84 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 8012c48:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 8012c4c:	460b      	mov	r3, r1
 8012c4e:	f101 0708 	add.w	r7, r1, #8
 8012c52:	4622      	mov	r2, r4
 8012c54:	6818      	ldr	r0, [r3, #0]
 8012c56:	6859      	ldr	r1, [r3, #4]
 8012c58:	4626      	mov	r6, r4
 8012c5a:	c603      	stmia	r6!, {r0, r1}
 8012c5c:	3308      	adds	r3, #8
 8012c5e:	42bb      	cmp	r3, r7
 8012c60:	4634      	mov	r4, r6
 8012c62:	d1f7      	bne.n	8012c54 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 8012c64:	6818      	ldr	r0, [r3, #0]
 8012c66:	6030      	str	r0, [r6, #0]
 8012c68:	889b      	ldrh	r3, [r3, #4]
 8012c6a:	80b3      	strh	r3, [r6, #4]
 8012c6c:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 8012c70:	015b      	lsls	r3, r3, #5
 8012c72:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8012c76:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 8012c7a:	430b      	orrs	r3, r1
 8012c7c:	425b      	negs	r3, r3
 8012c7e:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 8012c82:	4610      	mov	r0, r2
 8012c84:	bdf0      	pop	{r4, r5, r6, r7, pc}

08012c86 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 8012c86:	b538      	push	{r3, r4, r5, lr}
 8012c88:	460c      	mov	r4, r1
 8012c8a:	6811      	ldr	r1, [r2, #0]
 8012c8c:	4610      	mov	r0, r2
 8012c8e:	68cd      	ldr	r5, [r1, #12]
 8012c90:	4619      	mov	r1, r3
 8012c92:	47a8      	blx	r5
 8012c94:	2800      	cmp	r0, #0
 8012c96:	bf08      	it	eq
 8012c98:	4620      	moveq	r0, r4
 8012c9a:	bd38      	pop	{r3, r4, r5, pc}

08012c9c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 8012c9c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8012c9e:	4604      	mov	r4, r0
 8012ca0:	4615      	mov	r5, r2
 8012ca2:	4608      	mov	r0, r1
 8012ca4:	b93a      	cbnz	r2, 8012cb6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 8012ca6:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8012caa:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 8012cae:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 8012cb2:	4628      	mov	r0, r5
 8012cb4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8012cb6:	f892 c00d 	ldrb.w	ip, [r2, #13]
 8012cba:	8893      	ldrh	r3, [r2, #4]
 8012cbc:	ea4f 160c 	mov.w	r6, ip, lsl #4
 8012cc0:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8012cc4:	79ee      	ldrb	r6, [r5, #7]
 8012cc6:	f46f 6763 	mvn.w	r7, #3632	; 0xe30
 8012cca:	4316      	orrs	r6, r2
 8012ccc:	19da      	adds	r2, r3, r7
 8012cce:	b291      	uxth	r1, r2
 8012cd0:	291d      	cmp	r1, #29
 8012cd2:	b2b7      	uxth	r7, r6
 8012cd4:	d87a      	bhi.n	8012dcc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 8012cd6:	2201      	movs	r2, #1
 8012cd8:	408a      	lsls	r2, r1
 8012cda:	4975      	ldr	r1, [pc, #468]	; (8012eb0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
 8012cdc:	420a      	tst	r2, r1
 8012cde:	ea4f 06e6 	mov.w	r6, r6, asr #3
 8012ce2:	d12d      	bne.n	8012d40 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 8012ce4:	f412 7f60 	tst.w	r2, #896	; 0x380
 8012ce8:	d070      	beq.n	8012dcc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 8012cea:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 8012cee:	462b      	mov	r3, r5
 8012cf0:	f105 0e08 	add.w	lr, r5, #8
 8012cf4:	4615      	mov	r5, r2
 8012cf6:	6818      	ldr	r0, [r3, #0]
 8012cf8:	6859      	ldr	r1, [r3, #4]
 8012cfa:	4694      	mov	ip, r2
 8012cfc:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8012d00:	3308      	adds	r3, #8
 8012d02:	4573      	cmp	r3, lr
 8012d04:	4662      	mov	r2, ip
 8012d06:	d1f6      	bne.n	8012cf6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 8012d08:	6818      	ldr	r0, [r3, #0]
 8012d0a:	f8cc 0000 	str.w	r0, [ip]
 8012d0e:	889b      	ldrh	r3, [r3, #4]
 8012d10:	f8ac 3004 	strh.w	r3, [ip, #4]
 8012d14:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 8012d18:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 8012d1c:	b2b3      	uxth	r3, r6
 8012d1e:	1aca      	subs	r2, r1, r3
 8012d20:	b292      	uxth	r2, r2
 8012d22:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 8012d26:	10d2      	asrs	r2, r2, #3
 8012d28:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 8012d2c:	f002 0260 	and.w	r2, r2, #96	; 0x60
 8012d30:	4302      	orrs	r2, r0
 8012d32:	1bcf      	subs	r7, r1, r7
 8012d34:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 8012d38:	1afb      	subs	r3, r7, r3
 8012d3a:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8012d3e:	e7b8      	b.n	8012cb2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8012d40:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8012d42:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8012d46:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 8012d48:	f640 6333 	movw	r3, #3635	; 0xe33
 8012d4c:	4299      	cmp	r1, r3
 8012d4e:	d110      	bne.n	8012d72 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
 8012d50:	6803      	ldr	r3, [r0, #0]
 8012d52:	68db      	ldr	r3, [r3, #12]
 8012d54:	4798      	blx	r3
 8012d56:	7b41      	ldrb	r1, [r0, #13]
 8012d58:	00cb      	lsls	r3, r1, #3
 8012d5a:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8012d5e:	7a03      	ldrb	r3, [r0, #8]
 8012d60:	0648      	lsls	r0, r1, #25
 8012d62:	ea43 0302 	orr.w	r3, r3, r2
 8012d66:	bf44      	itt	mi
 8012d68:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8012d6c:	b21b      	sxthmi	r3, r3
 8012d6e:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8012d72:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 8012d76:	443b      	add	r3, r7
 8012d78:	4433      	add	r3, r6
 8012d7a:	b29b      	uxth	r3, r3
 8012d7c:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 8012d80:	462a      	mov	r2, r5
 8012d82:	f105 0c08 	add.w	ip, r5, #8
 8012d86:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8012d8a:	4635      	mov	r5, r6
 8012d8c:	6810      	ldr	r0, [r2, #0]
 8012d8e:	6851      	ldr	r1, [r2, #4]
 8012d90:	4637      	mov	r7, r6
 8012d92:	c703      	stmia	r7!, {r0, r1}
 8012d94:	3208      	adds	r2, #8
 8012d96:	4562      	cmp	r2, ip
 8012d98:	463e      	mov	r6, r7
 8012d9a:	d1f7      	bne.n	8012d8c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
 8012d9c:	6810      	ldr	r0, [r2, #0]
 8012d9e:	6038      	str	r0, [r7, #0]
 8012da0:	8892      	ldrh	r2, [r2, #4]
 8012da2:	80ba      	strh	r2, [r7, #4]
 8012da4:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8012da8:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8012dac:	10db      	asrs	r3, r3, #3
 8012dae:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8012db2:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8012db6:	4313      	orrs	r3, r2
 8012db8:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8012dbc:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 8012dc0:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 8012dc4:	1a9b      	subs	r3, r3, r2
 8012dc6:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 8012dca:	e772      	b.n	8012cb2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8012dcc:	f023 0204 	bic.w	r2, r3, #4
 8012dd0:	f640 611b 	movw	r1, #3611	; 0xe1b
 8012dd4:	428a      	cmp	r2, r1
 8012dd6:	d003      	beq.n	8012de0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x144>
 8012dd8:	f640 621d 	movw	r2, #3613	; 0xe1d
 8012ddc:	4293      	cmp	r3, r2
 8012dde:	d120      	bne.n	8012e22 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x186>
 8012de0:	3b01      	subs	r3, #1
 8012de2:	4602      	mov	r2, r0
 8012de4:	b29b      	uxth	r3, r3
 8012de6:	4629      	mov	r1, r5
 8012de8:	4620      	mov	r0, r4
 8012dea:	f7ff ff4c 	bl	8012c86 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8012dee:	7b41      	ldrb	r1, [r0, #13]
 8012df0:	00cb      	lsls	r3, r1, #3
 8012df2:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8012df6:	7a03      	ldrb	r3, [r0, #8]
 8012df8:	0649      	lsls	r1, r1, #25
 8012dfa:	ea43 0302 	orr.w	r3, r3, r2
 8012dfe:	bf44      	itt	mi
 8012e00:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8012e04:	b21b      	sxthmi	r3, r3
 8012e06:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8012e0a:	7b6b      	ldrb	r3, [r5, #13]
 8012e0c:	7aaa      	ldrb	r2, [r5, #10]
 8012e0e:	005b      	lsls	r3, r3, #1
 8012e10:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8012e14:	4313      	orrs	r3, r2
 8012e16:	115a      	asrs	r2, r3, #5
 8012e18:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 8012e1c:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8012e20:	e036      	b.n	8012e90 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
 8012e22:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 8012e26:	f402 7180 	and.w	r1, r2, #256	; 0x100
 8012e2a:	7a2a      	ldrb	r2, [r5, #8]
 8012e2c:	f01c 0f40 	tst.w	ip, #64	; 0x40
 8012e30:	ea42 0201 	orr.w	r2, r2, r1
 8012e34:	bf1c      	itt	ne
 8012e36:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 8012e3a:	b212      	sxthne	r2, r2
 8012e3c:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8012e40:	f640 6109 	movw	r1, #3593	; 0xe09
 8012e44:	f023 0210 	bic.w	r2, r3, #16
 8012e48:	428a      	cmp	r2, r1
 8012e4a:	d003      	beq.n	8012e54 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b8>
 8012e4c:	f640 6213 	movw	r2, #3603	; 0xe13
 8012e50:	4293      	cmp	r3, r2
 8012e52:	d12a      	bne.n	8012eaa <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
 8012e54:	7b6e      	ldrb	r6, [r5, #13]
 8012e56:	0076      	lsls	r6, r6, #1
 8012e58:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8012e5c:	7aae      	ldrb	r6, [r5, #10]
 8012e5e:	4316      	orrs	r6, r2
 8012e60:	f640 6213 	movw	r2, #3603	; 0xe13
 8012e64:	4293      	cmp	r3, r2
 8012e66:	bf18      	it	ne
 8012e68:	f103 33ff 	addne.w	r3, r3, #4294967295
 8012e6c:	4602      	mov	r2, r0
 8012e6e:	bf14      	ite	ne
 8012e70:	b29b      	uxthne	r3, r3
 8012e72:	f640 630c 	movweq	r3, #3596	; 0xe0c
 8012e76:	4629      	mov	r1, r5
 8012e78:	4620      	mov	r0, r4
 8012e7a:	f7ff ff04 	bl	8012c86 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8012e7e:	7b43      	ldrb	r3, [r0, #13]
 8012e80:	7a82      	ldrb	r2, [r0, #10]
 8012e82:	005b      	lsls	r3, r3, #1
 8012e84:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8012e88:	4313      	orrs	r3, r2
 8012e8a:	1af6      	subs	r6, r6, r3
 8012e8c:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 8012e90:	7b69      	ldrb	r1, [r5, #13]
 8012e92:	00cb      	lsls	r3, r1, #3
 8012e94:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8012e98:	7a2b      	ldrb	r3, [r5, #8]
 8012e9a:	4313      	orrs	r3, r2
 8012e9c:	064a      	lsls	r2, r1, #25
 8012e9e:	bf44      	itt	mi
 8012ea0:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8012ea4:	b21b      	sxthmi	r3, r3
 8012ea6:	1bdb      	subs	r3, r3, r7
 8012ea8:	e747      	b.n	8012d3a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 8012eaa:	2300      	movs	r3, #0
 8012eac:	e7b6      	b.n	8012e1c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x180>
 8012eae:	bf00      	nop
 8012eb0:	3fc00079 	.word	0x3fc00079

08012eb4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 8012eb4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012eb8:	4604      	mov	r4, r0
 8012eba:	b942      	cbnz	r2, 8012ece <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 8012ebc:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8012ec0:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 8012ec4:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 8012ec8:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8012ecc:	e047      	b.n	8012f5e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8012ece:	7b51      	ldrb	r1, [r2, #13]
 8012ed0:	8893      	ldrh	r3, [r2, #4]
 8012ed2:	010d      	lsls	r5, r1, #4
 8012ed4:	f405 7080 	and.w	r0, r5, #256	; 0x100
 8012ed8:	79d5      	ldrb	r5, [r2, #7]
 8012eda:	4305      	orrs	r5, r0
 8012edc:	2d04      	cmp	r5, #4
 8012ede:	bfcc      	ite	gt
 8012ee0:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 8012ee4:	f04f 0e01 	movle.w	lr, #1
 8012ee8:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 8012eec:	f200 80ab 	bhi.w	8013046 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 8012ef0:	f240 60e7 	movw	r0, #1767	; 0x6e7
 8012ef4:	4283      	cmp	r3, r0
 8012ef6:	d216      	bcs.n	8012f26 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012ef8:	f240 605b 	movw	r0, #1627	; 0x65b
 8012efc:	4283      	cmp	r3, r0
 8012efe:	d859      	bhi.n	8012fb4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 8012f00:	f240 6057 	movw	r0, #1623	; 0x657
 8012f04:	4283      	cmp	r3, r0
 8012f06:	d20e      	bcs.n	8012f26 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012f08:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8012f0c:	d24a      	bcs.n	8012fa4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 8012f0e:	f240 604e 	movw	r0, #1614	; 0x64e
 8012f12:	4283      	cmp	r3, r0
 8012f14:	d207      	bcs.n	8012f26 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012f16:	f240 601a 	movw	r0, #1562	; 0x61a
 8012f1a:	4283      	cmp	r3, r0
 8012f1c:	d02a      	beq.n	8012f74 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012f1e:	d821      	bhi.n	8012f64 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 8012f20:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 8012f24:	d35b      	bcc.n	8012fde <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8012f26:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 8012f2a:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8012f2e:	f040 80d0 	bne.w	80130d2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8012f32:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 8012f36:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8012f3a:	f040 80ca 	bne.w	80130d2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8012f3e:	00cb      	lsls	r3, r1, #3
 8012f40:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8012f44:	7a13      	ldrb	r3, [r2, #8]
 8012f46:	0649      	lsls	r1, r1, #25
 8012f48:	ea43 0300 	orr.w	r3, r3, r0
 8012f4c:	bf44      	itt	mi
 8012f4e:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8012f52:	b21b      	sxthmi	r3, r3
 8012f54:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8012f58:	1b5d      	subs	r5, r3, r5
 8012f5a:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8012f5e:	4610      	mov	r0, r2
 8012f60:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8012f64:	f240 604b 	movw	r0, #1611	; 0x64b
 8012f68:	4283      	cmp	r3, r0
 8012f6a:	d338      	bcc.n	8012fde <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8012f6c:	f240 604c 	movw	r0, #1612	; 0x64c
 8012f70:	4283      	cmp	r3, r0
 8012f72:	d9d8      	bls.n	8012f26 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012f74:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 8012f78:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 8012f7c:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8012f80:	f040 80f2 	bne.w	8013168 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8012f84:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8012f88:	f040 80ee 	bne.w	8013168 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8012f8c:	00cb      	lsls	r3, r1, #3
 8012f8e:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8012f92:	7a13      	ldrb	r3, [r2, #8]
 8012f94:	064e      	lsls	r6, r1, #25
 8012f96:	ea43 0300 	orr.w	r3, r3, r0
 8012f9a:	bf44      	itt	mi
 8012f9c:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8012fa0:	b21b      	sxthmi	r3, r3
 8012fa2:	e7d9      	b.n	8012f58 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 8012fa4:	f240 6054 	movw	r0, #1620	; 0x654
 8012fa8:	4283      	cmp	r3, r0
 8012faa:	d8e3      	bhi.n	8012f74 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012fac:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8012fb0:	d9e0      	bls.n	8012f74 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012fb2:	e7b8      	b.n	8012f26 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012fb4:	f240 6074 	movw	r0, #1652	; 0x674
 8012fb8:	4283      	cmp	r3, r0
 8012fba:	d0b4      	beq.n	8012f26 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012fbc:	d82d      	bhi.n	801301a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 8012fbe:	f240 605e 	movw	r0, #1630	; 0x65e
 8012fc2:	4283      	cmp	r3, r0
 8012fc4:	d804      	bhi.n	8012fd0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 8012fc6:	f240 605d 	movw	r0, #1629	; 0x65d
 8012fca:	4283      	cmp	r3, r0
 8012fcc:	d3d2      	bcc.n	8012f74 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012fce:	e7aa      	b.n	8012f26 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012fd0:	f240 605f 	movw	r0, #1631	; 0x65f
 8012fd4:	4283      	cmp	r3, r0
 8012fd6:	d0cd      	beq.n	8012f74 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012fd8:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 8012fdc:	d0a3      	beq.n	8012f26 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012fde:	00cb      	lsls	r3, r1, #3
 8012fe0:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8012fe4:	7a13      	ldrb	r3, [r2, #8]
 8012fe6:	0649      	lsls	r1, r1, #25
 8012fe8:	ea43 0300 	orr.w	r3, r3, r0
 8012fec:	bf44      	itt	mi
 8012fee:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8012ff2:	b21b      	sxthmi	r3, r3
 8012ff4:	1b5d      	subs	r5, r3, r5
 8012ff6:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8012ffa:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8012ffe:	7b53      	ldrb	r3, [r2, #13]
 8013000:	015b      	lsls	r3, r3, #5
 8013002:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8013006:	7993      	ldrb	r3, [r2, #6]
 8013008:	430b      	orrs	r3, r1
 801300a:	005b      	lsls	r3, r3, #1
 801300c:	2105      	movs	r1, #5
 801300e:	fb93 f3f1 	sdiv	r3, r3, r1
 8013012:	f992 1009 	ldrsb.w	r1, [r2, #9]
 8013016:	440b      	add	r3, r1
 8013018:	e756      	b.n	8012ec8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 801301a:	f240 60e2 	movw	r0, #1762	; 0x6e2
 801301e:	4283      	cmp	r3, r0
 8013020:	d809      	bhi.n	8013036 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 8013022:	f240 60df 	movw	r0, #1759	; 0x6df
 8013026:	4283      	cmp	r3, r0
 8013028:	f4bf af7d 	bcs.w	8012f26 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801302c:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 8013030:	2b05      	cmp	r3, #5
 8013032:	d8d4      	bhi.n	8012fde <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8013034:	e777      	b.n	8012f26 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8013036:	f240 60e3 	movw	r0, #1763	; 0x6e3
 801303a:	4283      	cmp	r3, r0
 801303c:	d09a      	beq.n	8012f74 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801303e:	f240 60e4 	movw	r0, #1764	; 0x6e4
 8013042:	4283      	cmp	r3, r0
 8013044:	e7ca      	b.n	8012fdc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 8013046:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 801304a:	d22b      	bcs.n	80130a4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 801304c:	f640 00ed 	movw	r0, #2285	; 0x8ed
 8013050:	4283      	cmp	r3, r0
 8013052:	d28f      	bcs.n	8012f74 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8013054:	f640 00e5 	movw	r0, #2277	; 0x8e5
 8013058:	4283      	cmp	r3, r0
 801305a:	d816      	bhi.n	801308a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 801305c:	f640 00e4 	movw	r0, #2276	; 0x8e4
 8013060:	4283      	cmp	r3, r0
 8013062:	f4bf af60 	bcs.w	8012f26 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8013066:	f240 60ec 	movw	r0, #1772	; 0x6ec
 801306a:	4283      	cmp	r3, r0
 801306c:	d80a      	bhi.n	8013084 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 801306e:	f240 60eb 	movw	r0, #1771	; 0x6eb
 8013072:	4283      	cmp	r3, r0
 8013074:	f4bf af57 	bcs.w	8012f26 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8013078:	f240 60ea 	movw	r0, #1770	; 0x6ea
 801307c:	4283      	cmp	r3, r0
 801307e:	f43f af79 	beq.w	8012f74 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8013082:	e7ac      	b.n	8012fde <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8013084:	f240 60ed 	movw	r0, #1773	; 0x6ed
 8013088:	e7f8      	b.n	801307c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 801308a:	f640 00e8 	movw	r0, #2280	; 0x8e8
 801308e:	4283      	cmp	r3, r0
 8013090:	d802      	bhi.n	8013098 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 8013092:	f640 00e7 	movw	r0, #2279	; 0x8e7
 8013096:	e798      	b.n	8012fca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 8013098:	f640 00e9 	movw	r0, #2281	; 0x8e9
 801309c:	4283      	cmp	r3, r0
 801309e:	f47f af42 	bne.w	8012f26 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80130a2:	e767      	b.n	8012f74 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80130a4:	f640 00f6 	movw	r0, #2294	; 0x8f6
 80130a8:	4283      	cmp	r3, r0
 80130aa:	f43f af63 	beq.w	8012f74 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80130ae:	d802      	bhi.n	80130b6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 80130b0:	f640 00f2 	movw	r0, #2290	; 0x8f2
 80130b4:	e7f2      	b.n	801309c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 80130b6:	f640 00fa 	movw	r0, #2298	; 0x8fa
 80130ba:	4283      	cmp	r3, r0
 80130bc:	d805      	bhi.n	80130ca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 80130be:	f640 00f9 	movw	r0, #2297	; 0x8f9
 80130c2:	4283      	cmp	r3, r0
 80130c4:	f4ff af2f 	bcc.w	8012f26 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80130c8:	e754      	b.n	8012f74 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80130ca:	f640 00fe 	movw	r0, #2302	; 0x8fe
 80130ce:	4283      	cmp	r3, r0
 80130d0:	e7af      	b.n	8013032 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 80130d2:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 80130d6:	4617      	mov	r7, r2
 80130d8:	f102 0808 	add.w	r8, r2, #8
 80130dc:	4666      	mov	r6, ip
 80130de:	6838      	ldr	r0, [r7, #0]
 80130e0:	6879      	ldr	r1, [r7, #4]
 80130e2:	46e6      	mov	lr, ip
 80130e4:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 80130e8:	3708      	adds	r7, #8
 80130ea:	4547      	cmp	r7, r8
 80130ec:	46f4      	mov	ip, lr
 80130ee:	d1f6      	bne.n	80130de <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 80130f0:	6838      	ldr	r0, [r7, #0]
 80130f2:	f8ce 0000 	str.w	r0, [lr]
 80130f6:	88b9      	ldrh	r1, [r7, #4]
 80130f8:	f8ae 1004 	strh.w	r1, [lr, #4]
 80130fc:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 8013100:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8013104:	d009      	beq.n	801311a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 8013106:	7b51      	ldrb	r1, [r2, #13]
 8013108:	7992      	ldrb	r2, [r2, #6]
 801310a:	0149      	lsls	r1, r1, #5
 801310c:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8013110:	4311      	orrs	r1, r2
 8013112:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8013116:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 801311a:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 801311e:	b2ad      	uxth	r5, r5
 8013120:	d00d      	beq.n	801313e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 8013122:	442b      	add	r3, r5
 8013124:	b29b      	uxth	r3, r3
 8013126:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 801312a:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 801312e:	10db      	asrs	r3, r3, #3
 8013130:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8013134:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8013138:	4313      	orrs	r3, r2
 801313a:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 801313e:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 8013142:	00cb      	lsls	r3, r1, #3
 8013144:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8013148:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 801314c:	064f      	lsls	r7, r1, #25
 801314e:	ea43 0302 	orr.w	r3, r3, r2
 8013152:	bf44      	itt	mi
 8013154:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8013158:	b21b      	sxthmi	r3, r3
 801315a:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801315e:	1b5b      	subs	r3, r3, r5
 8013160:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8013164:	4632      	mov	r2, r6
 8013166:	e6fa      	b.n	8012f5e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8013168:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 801316c:	4617      	mov	r7, r2
 801316e:	f102 0908 	add.w	r9, r2, #8
 8013172:	4666      	mov	r6, ip
 8013174:	6838      	ldr	r0, [r7, #0]
 8013176:	6879      	ldr	r1, [r7, #4]
 8013178:	46e0      	mov	r8, ip
 801317a:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 801317e:	3708      	adds	r7, #8
 8013180:	454f      	cmp	r7, r9
 8013182:	46c4      	mov	ip, r8
 8013184:	d1f6      	bne.n	8013174 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 8013186:	6838      	ldr	r0, [r7, #0]
 8013188:	f8c8 0000 	str.w	r0, [r8]
 801318c:	88b9      	ldrh	r1, [r7, #4]
 801318e:	f8a8 1004 	strh.w	r1, [r8, #4]
 8013192:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 8013196:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801319a:	d009      	beq.n	80131b0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 801319c:	7b51      	ldrb	r1, [r2, #13]
 801319e:	7992      	ldrb	r2, [r2, #6]
 80131a0:	0149      	lsls	r1, r1, #5
 80131a2:	f401 7180 	and.w	r1, r1, #256	; 0x100
 80131a6:	4311      	orrs	r1, r2
 80131a8:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 80131ac:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 80131b0:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 80131b4:	d00e      	beq.n	80131d4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 80131b6:	eba3 030e 	sub.w	r3, r3, lr
 80131ba:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 80131be:	b29b      	uxth	r3, r3
 80131c0:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 80131c4:	10db      	asrs	r3, r3, #3
 80131c6:	f003 0360 	and.w	r3, r3, #96	; 0x60
 80131ca:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 80131ce:	4313      	orrs	r3, r2
 80131d0:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 80131d4:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 80131d8:	00cb      	lsls	r3, r1, #3
 80131da:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80131de:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 80131e2:	0648      	lsls	r0, r1, #25
 80131e4:	ea43 0302 	orr.w	r3, r3, r2
 80131e8:	bf44      	itt	mi
 80131ea:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80131ee:	b21b      	sxthmi	r3, r3
 80131f0:	1b5d      	subs	r5, r3, r5
 80131f2:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 80131f6:	e7b5      	b.n	8013164 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

080131f8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 80131f8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80131fc:	461e      	mov	r6, r3
 80131fe:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8013200:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8013204:	4604      	mov	r4, r0
 8013206:	4617      	mov	r7, r2
 8013208:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 801320c:	f7f1 fdb2 	bl	8004d74 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8013210:	4605      	mov	r5, r0
 8013212:	b918      	cbnz	r0, 801321c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 8013214:	6030      	str	r0, [r6, #0]
 8013216:	4628      	mov	r0, r5
 8013218:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801321c:	683b      	ldr	r3, [r7, #0]
 801321e:	4601      	mov	r1, r0
 8013220:	68db      	ldr	r3, [r3, #12]
 8013222:	4638      	mov	r0, r7
 8013224:	4798      	blx	r3
 8013226:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 801322a:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 801322e:	4602      	mov	r2, r0
 8013230:	6030      	str	r0, [r6, #0]
 8013232:	d213      	bcs.n	801325c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 8013234:	4643      	mov	r3, r8
 8013236:	4639      	mov	r1, r7
 8013238:	4620      	mov	r0, r4
 801323a:	f7ff fe3b 	bl	8012eb4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 801323e:	6030      	str	r0, [r6, #0]
 8013240:	6833      	ldr	r3, [r6, #0]
 8013242:	b143      	cbz	r3, 8013256 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 8013244:	7b5a      	ldrb	r2, [r3, #13]
 8013246:	7a9b      	ldrb	r3, [r3, #10]
 8013248:	0052      	lsls	r2, r2, #1
 801324a:	f402 7280 	and.w	r2, r2, #256	; 0x100
 801324e:	4313      	orrs	r3, r2
 8013250:	bf0c      	ite	eq
 8013252:	2301      	moveq	r3, #1
 8013254:	2300      	movne	r3, #0
 8013256:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 801325a:	e7dc      	b.n	8013216 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 801325c:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8013260:	b29b      	uxth	r3, r3
 8013262:	2b7f      	cmp	r3, #127	; 0x7f
 8013264:	d804      	bhi.n	8013270 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 8013266:	4639      	mov	r1, r7
 8013268:	4620      	mov	r0, r4
 801326a:	f7ff fd17 	bl	8012c9c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 801326e:	e7e6      	b.n	801323e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 8013270:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8013274:	2b00      	cmp	r3, #0
 8013276:	d0e3      	beq.n	8013240 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8013278:	f640 1302 	movw	r3, #2306	; 0x902
 801327c:	429d      	cmp	r5, r3
 801327e:	d1df      	bne.n	8013240 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8013280:	4601      	mov	r1, r0
 8013282:	4620      	mov	r0, r4
 8013284:	f7ff fcdc 	bl	8012c40 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8013288:	e7d9      	b.n	801323e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

0801328a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 801328a:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801328e:	461e      	mov	r6, r3
 8013290:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8013292:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8013296:	4604      	mov	r4, r0
 8013298:	4617      	mov	r7, r2
 801329a:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 801329e:	f7f1 fd69 	bl	8004d74 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 80132a2:	4605      	mov	r5, r0
 80132a4:	b918      	cbnz	r0, 80132ae <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 80132a6:	6030      	str	r0, [r6, #0]
 80132a8:	4628      	mov	r0, r5
 80132aa:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80132ae:	683b      	ldr	r3, [r7, #0]
 80132b0:	4601      	mov	r1, r0
 80132b2:	f8d3 9008 	ldr.w	r9, [r3, #8]
 80132b6:	4638      	mov	r0, r7
 80132b8:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 80132bc:	47c8      	blx	r9
 80132be:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 80132c2:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 80132c6:	4602      	mov	r2, r0
 80132c8:	6030      	str	r0, [r6, #0]
 80132ca:	d213      	bcs.n	80132f4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 80132cc:	4643      	mov	r3, r8
 80132ce:	4639      	mov	r1, r7
 80132d0:	4620      	mov	r0, r4
 80132d2:	f7ff fdef 	bl	8012eb4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 80132d6:	6030      	str	r0, [r6, #0]
 80132d8:	6833      	ldr	r3, [r6, #0]
 80132da:	b143      	cbz	r3, 80132ee <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 80132dc:	7b5a      	ldrb	r2, [r3, #13]
 80132de:	7a9b      	ldrb	r3, [r3, #10]
 80132e0:	0052      	lsls	r2, r2, #1
 80132e2:	f402 7280 	and.w	r2, r2, #256	; 0x100
 80132e6:	4313      	orrs	r3, r2
 80132e8:	bf0c      	ite	eq
 80132ea:	2301      	moveq	r3, #1
 80132ec:	2300      	movne	r3, #0
 80132ee:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 80132f2:	e7d9      	b.n	80132a8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 80132f4:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 80132f8:	b29b      	uxth	r3, r3
 80132fa:	2b7f      	cmp	r3, #127	; 0x7f
 80132fc:	d804      	bhi.n	8013308 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 80132fe:	4639      	mov	r1, r7
 8013300:	4620      	mov	r0, r4
 8013302:	f7ff fccb 	bl	8012c9c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8013306:	e7e6      	b.n	80132d6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 8013308:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 801330c:	2b00      	cmp	r3, #0
 801330e:	d0e3      	beq.n	80132d8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8013310:	f640 1302 	movw	r3, #2306	; 0x902
 8013314:	429d      	cmp	r5, r3
 8013316:	d1df      	bne.n	80132d8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8013318:	4601      	mov	r1, r0
 801331a:	4620      	mov	r0, r4
 801331c:	f7ff fc90 	bl	8012c40 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8013320:	e7d9      	b.n	80132d6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

08013322 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 8013322:	b510      	push	{r4, lr}
 8013324:	4604      	mov	r4, r0
 8013326:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 801332a:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801332c:	b1f1      	cbz	r1, 801336c <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 801332e:	2b0a      	cmp	r3, #10
 8013330:	d02f      	beq.n	8013392 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 8013332:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 8013334:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 8013338:	3901      	subs	r1, #1
 801333a:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 801333c:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 8013340:	1c51      	adds	r1, r2, #1
 8013342:	b289      	uxth	r1, r1
 8013344:	2901      	cmp	r1, #1
 8013346:	bf84      	itt	hi
 8013348:	f102 32ff 	addhi.w	r2, r2, #4294967295
 801334c:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 801334e:	f103 0201 	add.w	r2, r3, #1
 8013352:	8722      	strh	r2, [r4, #56]	; 0x38
 8013354:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8013356:	bf98      	it	ls
 8013358:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 801335a:	4413      	add	r3, r2
 801335c:	b29b      	uxth	r3, r3
 801335e:	2b09      	cmp	r3, #9
 8013360:	bf88      	it	hi
 8013362:	3b0a      	subhi	r3, #10
 8013364:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8013368:	8458      	strh	r0, [r3, #34]	; 0x22
 801336a:	e7dc      	b.n	8013326 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 801336c:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801336e:	2b0a      	cmp	r3, #10
 8013370:	d00f      	beq.n	8013392 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 8013372:	4620      	mov	r0, r4
 8013374:	f7ff fc12 	bl	8012b9c <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 8013378:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801337a:	1c5a      	adds	r2, r3, #1
 801337c:	8722      	strh	r2, [r4, #56]	; 0x38
 801337e:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8013380:	4413      	add	r3, r2
 8013382:	b29b      	uxth	r3, r3
 8013384:	2b09      	cmp	r3, #9
 8013386:	bf88      	it	hi
 8013388:	3b0a      	subhi	r3, #10
 801338a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801338e:	8458      	strh	r0, [r3, #34]	; 0x22
 8013390:	e7ec      	b.n	801336c <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 8013392:	bd10      	pop	{r4, pc}

08013394 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 8013394:	b538      	push	{r3, r4, r5, lr}
 8013396:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8013398:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 801339c:	4604      	mov	r4, r0
 801339e:	8c55      	ldrh	r5, [r2, #34]	; 0x22
 80133a0:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 80133a2:	3a01      	subs	r2, #1
 80133a4:	8702      	strh	r2, [r0, #56]	; 0x38
 80133a6:	1c5a      	adds	r2, r3, #1
 80133a8:	b292      	uxth	r2, r2
 80133aa:	2a09      	cmp	r2, #9
 80133ac:	bf86      	itte	hi
 80133ae:	3b09      	subhi	r3, #9
 80133b0:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 80133b2:	86c2      	strhls	r2, [r0, #54]	; 0x36
 80133b4:	f7ff ffb5 	bl	8013322 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 80133b8:	8c23      	ldrh	r3, [r4, #32]
 80133ba:	2b01      	cmp	r3, #1
 80133bc:	bf9c      	itt	ls
 80133be:	3301      	addls	r3, #1
 80133c0:	8423      	strhls	r3, [r4, #32]
 80133c2:	8be3      	ldrh	r3, [r4, #30]
 80133c4:	b90b      	cbnz	r3, 80133ca <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 80133c6:	2302      	movs	r3, #2
 80133c8:	83e3      	strh	r3, [r4, #30]
 80133ca:	8be3      	ldrh	r3, [r4, #30]
 80133cc:	3b01      	subs	r3, #1
 80133ce:	b29b      	uxth	r3, r3
 80133d0:	83e3      	strh	r3, [r4, #30]
 80133d2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80133d6:	4628      	mov	r0, r5
 80133d8:	8365      	strh	r5, [r4, #26]
 80133da:	bd38      	pop	{r3, r4, r5, pc}

080133dc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 80133dc:	428a      	cmp	r2, r1
 80133de:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80133e2:	8ec7      	ldrh	r7, [r0, #54]	; 0x36
 80133e4:	d931      	bls.n	801344a <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 80133e6:	8f05      	ldrh	r5, [r0, #56]	; 0x38
 80133e8:	f8b0 8040 	ldrh.w	r8, [r0, #64]	; 0x40
 80133ec:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	; 0x3e
 80133f0:	19ee      	adds	r6, r5, r7
 80133f2:	1a54      	subs	r4, r2, r1
 80133f4:	3e01      	subs	r6, #1
 80133f6:	fa1f fe84 	uxth.w	lr, r4
 80133fa:	b2b4      	uxth	r4, r6
 80133fc:	eba4 090e 	sub.w	r9, r4, lr
 8013400:	fa1f f989 	uxth.w	r9, r9
 8013404:	2c09      	cmp	r4, #9
 8013406:	4626      	mov	r6, r4
 8013408:	bf88      	it	hi
 801340a:	f1a4 060a 	subhi.w	r6, r4, #10
 801340e:	f1bc 0f00 	cmp.w	ip, #0
 8013412:	bf08      	it	eq
 8013414:	f04f 0c02 	moveq.w	ip, #2
 8013418:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801341c:	f10c 3cff 	add.w	ip, ip, #4294967295
 8013420:	fa1f fc8c 	uxth.w	ip, ip
 8013424:	3c01      	subs	r4, #1
 8013426:	f8b6 a022 	ldrh.w	sl, [r6, #34]	; 0x22
 801342a:	b2a4      	uxth	r4, r4
 801342c:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 8013430:	454c      	cmp	r4, r9
 8013432:	f8a6 a03a 	strh.w	sl, [r6, #58]	; 0x3a
 8013436:	d1e5      	bne.n	8013404 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 8013438:	eba5 050e 	sub.w	r5, r5, lr
 801343c:	eb0e 0408 	add.w	r4, lr, r8
 8013440:	8705      	strh	r5, [r0, #56]	; 0x38
 8013442:	f8a0 4040 	strh.w	r4, [r0, #64]	; 0x40
 8013446:	f8a0 c03e 	strh.w	ip, [r0, #62]	; 0x3e
 801344a:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 801344c:	1a64      	subs	r4, r4, r1
 801344e:	4439      	add	r1, r7
 8013450:	b289      	uxth	r1, r1
 8013452:	2909      	cmp	r1, #9
 8013454:	bf88      	it	hi
 8013456:	390a      	subhi	r1, #10
 8013458:	8704      	strh	r4, [r0, #56]	; 0x38
 801345a:	86c1      	strh	r1, [r0, #54]	; 0x36
 801345c:	250a      	movs	r5, #10
 801345e:	b18a      	cbz	r2, 8013484 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 8013460:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 8013462:	3a01      	subs	r2, #1
 8013464:	b292      	uxth	r2, r2
 8013466:	3101      	adds	r1, #1
 8013468:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 801346c:	8701      	strh	r1, [r0, #56]	; 0x38
 801346e:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 8013470:	b901      	cbnz	r1, 8013474 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 8013472:	86c5      	strh	r5, [r0, #54]	; 0x36
 8013474:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 8013476:	3901      	subs	r1, #1
 8013478:	b289      	uxth	r1, r1
 801347a:	86c1      	strh	r1, [r0, #54]	; 0x36
 801347c:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 8013480:	844c      	strh	r4, [r1, #34]	; 0x22
 8013482:	e7ec      	b.n	801345e <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 8013484:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8013488:	f7ff bf4b 	b.w	8013322 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

0801348c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 801348c:	b570      	push	{r4, r5, r6, lr}
 801348e:	2500      	movs	r5, #0
 8013490:	4295      	cmp	r5, r2
 8013492:	d011      	beq.n	80134b8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 8013494:	8bc4      	ldrh	r4, [r0, #30]
 8013496:	f831 6b02 	ldrh.w	r6, [r1], #2
 801349a:	4414      	add	r4, r2
 801349c:	3c01      	subs	r4, #1
 801349e:	1b64      	subs	r4, r4, r5
 80134a0:	b2a4      	uxth	r4, r4
 80134a2:	2c01      	cmp	r4, #1
 80134a4:	bf88      	it	hi
 80134a6:	3c02      	subhi	r4, #2
 80134a8:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80134ac:	8b64      	ldrh	r4, [r4, #26]
 80134ae:	42b4      	cmp	r4, r6
 80134b0:	d117      	bne.n	80134e2 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 80134b2:	3501      	adds	r5, #1
 80134b4:	b2ad      	uxth	r5, r5
 80134b6:	e7eb      	b.n	8013490 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 80134b8:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80134bc:	2400      	movs	r4, #0
 80134be:	4413      	add	r3, r2
 80134c0:	b2a2      	uxth	r2, r4
 80134c2:	429a      	cmp	r2, r3
 80134c4:	da0f      	bge.n	80134e6 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 80134c6:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 80134c8:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 80134cc:	4432      	add	r2, r6
 80134ce:	b292      	uxth	r2, r2
 80134d0:	2a09      	cmp	r2, #9
 80134d2:	bf88      	it	hi
 80134d4:	3a0a      	subhi	r2, #10
 80134d6:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 80134da:	3401      	adds	r4, #1
 80134dc:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 80134de:	42aa      	cmp	r2, r5
 80134e0:	d0ee      	beq.n	80134c0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 80134e2:	2000      	movs	r0, #0
 80134e4:	bd70      	pop	{r4, r5, r6, pc}
 80134e6:	2001      	movs	r0, #1
 80134e8:	e7fc      	b.n	80134e4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

080134ea <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 80134ea:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80134ee:	4605      	mov	r5, r0
 80134f0:	4616      	mov	r6, r2
 80134f2:	1c8c      	adds	r4, r1, #2
 80134f4:	8809      	ldrh	r1, [r1, #0]
 80134f6:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 80134fa:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 80134fe:	42b3      	cmp	r3, r6
 8013500:	d124      	bne.n	801354c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 8013502:	f3c1 2903 	ubfx	r9, r1, #8, #4
 8013506:	f3c1 1803 	ubfx	r8, r1, #4, #4
 801350a:	f001 070f 	and.w	r7, r1, #15
 801350e:	f8cd 8000 	str.w	r8, [sp]
 8013512:	464b      	mov	r3, r9
 8013514:	4652      	mov	r2, sl
 8013516:	4621      	mov	r1, r4
 8013518:	4628      	mov	r0, r5
 801351a:	f7ff ffb7 	bl	801348c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 801351e:	4683      	mov	fp, r0
 8013520:	b168      	cbz	r0, 801353e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 8013522:	eb0a 0109 	add.w	r1, sl, r9
 8013526:	4441      	add	r1, r8
 8013528:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 801352c:	463a      	mov	r2, r7
 801352e:	4649      	mov	r1, r9
 8013530:	4628      	mov	r0, r5
 8013532:	f7ff ff53 	bl	80133dc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 8013536:	4658      	mov	r0, fp
 8013538:	b003      	add	sp, #12
 801353a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801353e:	eb07 010a 	add.w	r1, r7, sl
 8013542:	4449      	add	r1, r9
 8013544:	4441      	add	r1, r8
 8013546:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 801354a:	e7d2      	b.n	80134f2 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 801354c:	f04f 0b00 	mov.w	fp, #0
 8013550:	e7f1      	b.n	8013536 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

08013552 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 8013552:	b570      	push	{r4, r5, r6, lr}
 8013554:	8810      	ldrh	r0, [r2, #0]
 8013556:	4298      	cmp	r0, r3
 8013558:	d817      	bhi.n	801358a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801355a:	1e48      	subs	r0, r1, #1
 801355c:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 8013560:	4298      	cmp	r0, r3
 8013562:	d312      	bcc.n	801358a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8013564:	2400      	movs	r4, #0
 8013566:	428c      	cmp	r4, r1
 8013568:	d20f      	bcs.n	801358a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801356a:	1860      	adds	r0, r4, r1
 801356c:	1040      	asrs	r0, r0, #1
 801356e:	0085      	lsls	r5, r0, #2
 8013570:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 8013574:	42b3      	cmp	r3, r6
 8013576:	d902      	bls.n	801357e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 8013578:	3001      	adds	r0, #1
 801357a:	b284      	uxth	r4, r0
 801357c:	e7f3      	b.n	8013566 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 801357e:	d201      	bcs.n	8013584 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 8013580:	b281      	uxth	r1, r0
 8013582:	e7f0      	b.n	8013566 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8013584:	442a      	add	r2, r5
 8013586:	8850      	ldrh	r0, [r2, #2]
 8013588:	bd70      	pop	{r4, r5, r6, pc}
 801358a:	2000      	movs	r0, #0
 801358c:	e7fc      	b.n	8013588 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

0801358e <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 801358e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013592:	6c45      	ldr	r5, [r0, #68]	; 0x44
 8013594:	886f      	ldrh	r7, [r5, #2]
 8013596:	4604      	mov	r4, r0
 8013598:	087f      	lsrs	r7, r7, #1
 801359a:	260b      	movs	r6, #11
 801359c:	3e01      	subs	r6, #1
 801359e:	d013      	beq.n	80135c8 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 80135a0:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80135a2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80135a6:	462a      	mov	r2, r5
 80135a8:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 80135ac:	4639      	mov	r1, r7
 80135ae:	4643      	mov	r3, r8
 80135b0:	4620      	mov	r0, r4
 80135b2:	f7ff ffce 	bl	8013552 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 80135b6:	b138      	cbz	r0, 80135c8 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 80135b8:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 80135bc:	4642      	mov	r2, r8
 80135be:	4620      	mov	r0, r4
 80135c0:	f7ff ff93 	bl	80134ea <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 80135c4:	2800      	cmp	r0, #0
 80135c6:	d1e9      	bne.n	801359c <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 80135c8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080135cc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 80135cc:	b570      	push	{r4, r5, r6, lr}
 80135ce:	694a      	ldr	r2, [r1, #20]
 80135d0:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 80135d2:	684b      	ldr	r3, [r1, #4]
 80135d4:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 80135d6:	1b54      	subs	r4, r2, r5
 80135d8:	f000 8106 	beq.w	80137e8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 80135dc:	1b9b      	subs	r3, r3, r6
 80135de:	d003      	beq.n	80135e8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 80135e0:	4363      	muls	r3, r4
 80135e2:	2210      	movs	r2, #16
 80135e4:	fb93 f3f2 	sdiv	r3, r3, r2
 80135e8:	680c      	ldr	r4, [r1, #0]
 80135ea:	698a      	ldr	r2, [r1, #24]
 80135ec:	1b65      	subs	r5, r4, r5
 80135ee:	f000 80fd 	beq.w	80137ec <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 80135f2:	1b92      	subs	r2, r2, r6
 80135f4:	d003      	beq.n	80135fe <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 80135f6:	436a      	muls	r2, r5
 80135f8:	2410      	movs	r4, #16
 80135fa:	fb92 f2f4 	sdiv	r2, r2, r4
 80135fe:	1a9b      	subs	r3, r3, r2
 8013600:	ee07 3a90 	vmov	s15, r3
 8013604:	ed9f 4a88 	vldr	s8, [pc, #544]	; 8013828 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 8013608:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801360c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8013610:	ee67 7a84 	vmul.f32	s15, s15, s8
 8013614:	460a      	mov	r2, r1
 8013616:	ee87 3a27 	vdiv.f32	s6, s14, s15
 801361a:	4603      	mov	r3, r0
 801361c:	f100 040c 	add.w	r4, r0, #12
 8013620:	eeb1 6a43 	vneg.f32	s12, s6
 8013624:	edd2 7a02 	vldr	s15, [r2, #8]
 8013628:	eec7 6a27 	vdiv.f32	s13, s14, s15
 801362c:	3214      	adds	r2, #20
 801362e:	ece3 6a01 	vstmia	r3!, {s13}
 8013632:	ed52 7a02 	vldr	s15, [r2, #-8]
 8013636:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801363a:	429c      	cmp	r4, r3
 801363c:	edc3 7a02 	vstr	s15, [r3, #8]
 8013640:	ed52 7a01 	vldr	s15, [r2, #-4]
 8013644:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8013648:	edc3 7a05 	vstr	s15, [r3, #20]
 801364c:	d1ea      	bne.n	8013624 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 801364e:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8013650:	698b      	ldr	r3, [r1, #24]
 8013652:	edd0 4a02 	vldr	s9, [r0, #8]
 8013656:	edd0 3a00 	vldr	s7, [r0]
 801365a:	edd0 6a01 	vldr	s13, [r0, #4]
 801365e:	ed90 5a05 	vldr	s10, [r0, #20]
 8013662:	ed90 2a03 	vldr	s4, [r0, #12]
 8013666:	edd0 5a04 	vldr	s11, [r0, #16]
 801366a:	ed90 1a07 	vldr	s2, [r0, #28]
 801366e:	edd0 2a06 	vldr	s5, [r0, #24]
 8013672:	1a9b      	subs	r3, r3, r2
 8013674:	ee07 3a90 	vmov	s15, r3
 8013678:	684b      	ldr	r3, [r1, #4]
 801367a:	1a9b      	subs	r3, r3, r2
 801367c:	ee07 3a10 	vmov	s14, r3
 8013680:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8013684:	ee76 6ae4 	vsub.f32	s13, s13, s9
 8013688:	ee67 7a84 	vmul.f32	s15, s15, s8
 801368c:	ee73 4ae4 	vsub.f32	s9, s7, s9
 8013690:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013694:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 8013698:	ee27 7a04 	vmul.f32	s14, s14, s8
 801369c:	ee75 5ac5 	vsub.f32	s11, s11, s10
 80136a0:	eee6 7a87 	vfma.f32	s15, s13, s14
 80136a4:	ee32 5a45 	vsub.f32	s10, s4, s10
 80136a8:	ee67 7a83 	vmul.f32	s15, s15, s6
 80136ac:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 80136b0:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 80136b2:	694a      	ldr	r2, [r1, #20]
 80136b4:	1b13      	subs	r3, r2, r4
 80136b6:	ee07 3a10 	vmov	s14, r3
 80136ba:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80136be:	680b      	ldr	r3, [r1, #0]
 80136c0:	ee27 7a04 	vmul.f32	s14, s14, s8
 80136c4:	1b1b      	subs	r3, r3, r4
 80136c6:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 80136ca:	ee07 3a10 	vmov	s14, r3
 80136ce:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80136d2:	ee27 7a04 	vmul.f32	s14, s14, s8
 80136d6:	eee6 4a87 	vfma.f32	s9, s13, s14
 80136da:	ee64 4a86 	vmul.f32	s9, s9, s12
 80136de:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 80136e2:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 80136e4:	698b      	ldr	r3, [r1, #24]
 80136e6:	1a9b      	subs	r3, r3, r2
 80136e8:	ee06 3a90 	vmov	s13, r3
 80136ec:	684b      	ldr	r3, [r1, #4]
 80136ee:	1a9b      	subs	r3, r3, r2
 80136f0:	ee07 3a10 	vmov	s14, r3
 80136f4:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 80136f8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80136fc:	ee66 6a84 	vmul.f32	s13, s13, s8
 8013700:	ee27 7a04 	vmul.f32	s14, s14, s8
 8013704:	ee65 6a66 	vnmul.f32	s13, s10, s13
 8013708:	eee5 6a87 	vfma.f32	s13, s11, s14
 801370c:	ee66 6a83 	vmul.f32	s13, s13, s6
 8013710:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 8013714:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8013716:	694a      	ldr	r2, [r1, #20]
 8013718:	1b13      	subs	r3, r2, r4
 801371a:	ee07 3a10 	vmov	s14, r3
 801371e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013722:	680b      	ldr	r3, [r1, #0]
 8013724:	ee27 7a04 	vmul.f32	s14, s14, s8
 8013728:	1b1b      	subs	r3, r3, r4
 801372a:	ee25 5a47 	vnmul.f32	s10, s10, s14
 801372e:	ee07 3a10 	vmov	s14, r3
 8013732:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013736:	ee27 7a04 	vmul.f32	s14, s14, s8
 801373a:	eea5 5a87 	vfma.f32	s10, s11, s14
 801373e:	edd0 5a08 	vldr	s11, [r0, #32]
 8013742:	ee25 5a06 	vmul.f32	s10, s10, s12
 8013746:	ee31 1a65 	vsub.f32	s2, s2, s11
 801374a:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 801374e:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8013750:	698b      	ldr	r3, [r1, #24]
 8013752:	1a9b      	subs	r3, r3, r2
 8013754:	ee07 3a10 	vmov	s14, r3
 8013758:	684b      	ldr	r3, [r1, #4]
 801375a:	1a9b      	subs	r3, r3, r2
 801375c:	ee01 3a90 	vmov	s3, r3
 8013760:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013764:	ee72 5ae5 	vsub.f32	s11, s5, s11
 8013768:	ee27 7a04 	vmul.f32	s14, s14, s8
 801376c:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 8013770:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 8013774:	ee61 1a84 	vmul.f32	s3, s3, s8
 8013778:	eea1 7a21 	vfma.f32	s14, s2, s3
 801377c:	ee27 7a03 	vmul.f32	s14, s14, s6
 8013780:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8013784:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8013786:	694a      	ldr	r2, [r1, #20]
 8013788:	1b13      	subs	r3, r2, r4
 801378a:	ee03 3a10 	vmov	s6, r3
 801378e:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8013792:	680b      	ldr	r3, [r1, #0]
 8013794:	ee23 3a04 	vmul.f32	s6, s6, s8
 8013798:	1b1b      	subs	r3, r3, r4
 801379a:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 801379e:	ee03 3a10 	vmov	s6, r3
 80137a2:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 80137a6:	ee23 4a04 	vmul.f32	s8, s6, s8
 80137aa:	eee1 5a04 	vfma.f32	s11, s2, s8
 80137ae:	ee25 6a86 	vmul.f32	s12, s11, s12
 80137b2:	ee62 5a67 	vnmul.f32	s11, s4, s15
 80137b6:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 80137ba:	eee3 5aa6 	vfma.f32	s11, s7, s13
 80137be:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 80137c2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80137c6:	dd13      	ble.n	80137f0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 80137c8:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80137cc:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 80137d0:	63c3      	str	r3, [r0, #60]	; 0x3c
 80137d2:	eee3 7a87 	vfma.f32	s15, s7, s14
 80137d6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80137da:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80137de:	dd15      	ble.n	801380c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 80137e0:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80137e4:	6403      	str	r3, [r0, #64]	; 0x40
 80137e6:	bd70      	pop	{r4, r5, r6, pc}
 80137e8:	4623      	mov	r3, r4
 80137ea:	e6fd      	b.n	80135e8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 80137ec:	462a      	mov	r2, r5
 80137ee:	e706      	b.n	80135fe <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 80137f0:	d502      	bpl.n	80137f8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 80137f2:	f647 73ff 	movw	r3, #32767	; 0x7fff
 80137f6:	e7e9      	b.n	80137cc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 80137f8:	ee22 2a64 	vnmul.f32	s4, s4, s9
 80137fc:	eea3 2a85 	vfma.f32	s4, s7, s10
 8013800:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 8013804:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013808:	dade      	bge.n	80137c8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 801380a:	e7f2      	b.n	80137f2 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 801380c:	d502      	bpl.n	8013814 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 801380e:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8013812:	e7e7      	b.n	80137e4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 8013814:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 8013818:	eee3 4a86 	vfma.f32	s9, s7, s12
 801381c:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 8013820:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013824:	dadc      	bge.n	80137e0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 8013826:	e7f2      	b.n	801380e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 8013828:	3d800000 	.word	0x3d800000

0801382c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 801382c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8013830:	2714      	movs	r7, #20
 8013832:	435f      	muls	r7, r3
 8013834:	eb02 0c07 	add.w	ip, r2, r7
 8013838:	f8dc 5004 	ldr.w	r5, [ip, #4]
 801383c:	f115 0e0f 	adds.w	lr, r5, #15
 8013840:	f100 80a2 	bmi.w	8013988 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 8013844:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 8013848:	9c08      	ldr	r4, [sp, #32]
 801384a:	f8c0 e014 	str.w	lr, [r0, #20]
 801384e:	2614      	movs	r6, #20
 8013850:	4366      	muls	r6, r4
 8013852:	eb02 0806 	add.w	r8, r2, r6
 8013856:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801385a:	f115 040f 	adds.w	r4, r5, #15
 801385e:	f100 809f 	bmi.w	80139a0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 8013862:	1124      	asrs	r4, r4, #4
 8013864:	eba4 040e 	sub.w	r4, r4, lr
 8013868:	6184      	str	r4, [r0, #24]
 801386a:	2c00      	cmp	r4, #0
 801386c:	f000 808a 	beq.w	8013984 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 8013870:	f8dc 9004 	ldr.w	r9, [ip, #4]
 8013874:	f8d8 4004 	ldr.w	r4, [r8, #4]
 8013878:	5995      	ldr	r5, [r2, r6]
 801387a:	eba4 0809 	sub.w	r8, r4, r9
 801387e:	59d4      	ldr	r4, [r2, r7]
 8013880:	eba5 0a04 	sub.w	sl, r5, r4
 8013884:	ea4f 150a 	mov.w	r5, sl, lsl #4
 8013888:	fb0e fe05 	mul.w	lr, lr, r5
 801388c:	fb0a ee19 	mls	lr, sl, r9, lr
 8013890:	fb08 e404 	mla	r4, r8, r4, lr
 8013894:	ea4f 1608 	mov.w	r6, r8, lsl #4
 8013898:	3c01      	subs	r4, #1
 801389a:	19a4      	adds	r4, r4, r6
 801389c:	f100 808c 	bmi.w	80139b8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 80138a0:	fb94 fef6 	sdiv	lr, r4, r6
 80138a4:	f8c0 e000 	str.w	lr, [r0]
 80138a8:	fb06 441e 	mls	r4, r6, lr, r4
 80138ac:	6104      	str	r4, [r0, #16]
 80138ae:	2d00      	cmp	r5, #0
 80138b0:	f2c0 8095 	blt.w	80139de <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 80138b4:	fb95 f4f6 	sdiv	r4, r5, r6
 80138b8:	6044      	str	r4, [r0, #4]
 80138ba:	fb06 5514 	mls	r5, r6, r4, r5
 80138be:	6085      	str	r5, [r0, #8]
 80138c0:	60c6      	str	r6, [r0, #12]
 80138c2:	f8dc 4004 	ldr.w	r4, [ip, #4]
 80138c6:	6945      	ldr	r5, [r0, #20]
 80138c8:	59d2      	ldr	r2, [r2, r7]
 80138ca:	eddf 6a4d 	vldr	s13, [pc, #308]	; 8013a00 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 80138ce:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 80138d2:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 80138d6:	ee07 4a10 	vmov	s14, r4
 80138da:	6804      	ldr	r4, [r0, #0]
 80138dc:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 80138e0:	ee07 2a90 	vmov	s15, r2
 80138e4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80138e8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80138ec:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 80138f0:	ee27 7a26 	vmul.f32	s14, s14, s13
 80138f4:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80138f8:	edd3 6a00 	vldr	s13, [r3]
 80138fc:	eee6 6a07 	vfma.f32	s13, s12, s14
 8013900:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
 8013904:	eee6 6a27 	vfma.f32	s13, s12, s15
 8013908:	edc0 6a07 	vstr	s13, [r0, #28]
 801390c:	edd0 6a01 	vldr	s13, [r0, #4]
 8013910:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
 8013914:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 8013918:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 801391c:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8013920:	ed80 6a08 	vstr	s12, [r0, #32]
 8013924:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 8013926:	6242      	str	r2, [r0, #36]	; 0x24
 8013928:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
 801392c:	ed93 6a03 	vldr	s12, [r3, #12]
 8013930:	eea5 6a87 	vfma.f32	s12, s11, s14
 8013934:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8013938:	eea5 6aa7 	vfma.f32	s12, s11, s15
 801393c:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
 8013940:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8013944:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
 8013948:	eea6 6aa5 	vfma.f32	s12, s13, s11
 801394c:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
 8013950:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8013952:	6302      	str	r2, [r0, #48]	; 0x30
 8013954:	ed93 6a06 	vldr	s12, [r3, #24]
 8013958:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
 801395c:	eea5 6a87 	vfma.f32	s12, s11, s14
 8013960:	eeb0 7a46 	vmov.f32	s14, s12
 8013964:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
 8013968:	eea6 7a27 	vfma.f32	s14, s12, s15
 801396c:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8013970:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
 8013974:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
 8013978:	eee6 7a87 	vfma.f32	s15, s13, s14
 801397c:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
 8013980:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 8013982:	63c3      	str	r3, [r0, #60]	; 0x3c
 8013984:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8013988:	f1c5 0501 	rsb	r5, r5, #1
 801398c:	f015 050f 	ands.w	r5, r5, #15
 8013990:	bf18      	it	ne
 8013992:	2501      	movne	r5, #1
 8013994:	2410      	movs	r4, #16
 8013996:	fb9e fef4 	sdiv	lr, lr, r4
 801399a:	ebae 0e05 	sub.w	lr, lr, r5
 801399e:	e753      	b.n	8013848 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 80139a0:	f1c5 0501 	rsb	r5, r5, #1
 80139a4:	f015 050f 	ands.w	r5, r5, #15
 80139a8:	bf18      	it	ne
 80139aa:	2501      	movne	r5, #1
 80139ac:	f04f 0910 	mov.w	r9, #16
 80139b0:	fb94 f4f9 	sdiv	r4, r4, r9
 80139b4:	1b64      	subs	r4, r4, r5
 80139b6:	e755      	b.n	8013864 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 80139b8:	4264      	negs	r4, r4
 80139ba:	fb94 fef6 	sdiv	lr, r4, r6
 80139be:	f1ce 0800 	rsb	r8, lr, #0
 80139c2:	fb06 441e 	mls	r4, r6, lr, r4
 80139c6:	f8c0 8000 	str.w	r8, [r0]
 80139ca:	6104      	str	r4, [r0, #16]
 80139cc:	2c00      	cmp	r4, #0
 80139ce:	f43f af6e 	beq.w	80138ae <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 80139d2:	ea6f 0e0e 	mvn.w	lr, lr
 80139d6:	f8c0 e000 	str.w	lr, [r0]
 80139da:	1b34      	subs	r4, r6, r4
 80139dc:	e766      	b.n	80138ac <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 80139de:	426d      	negs	r5, r5
 80139e0:	fb95 f4f6 	sdiv	r4, r5, r6
 80139e4:	f1c4 0e00 	rsb	lr, r4, #0
 80139e8:	fb06 5514 	mls	r5, r6, r4, r5
 80139ec:	f8c0 e004 	str.w	lr, [r0, #4]
 80139f0:	6085      	str	r5, [r0, #8]
 80139f2:	2d00      	cmp	r5, #0
 80139f4:	f43f af64 	beq.w	80138c0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 80139f8:	43e4      	mvns	r4, r4
 80139fa:	6044      	str	r4, [r0, #4]
 80139fc:	1b75      	subs	r5, r6, r5
 80139fe:	e75e      	b.n	80138be <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 8013a00:	3d800000 	.word	0x3d800000

08013a04 <_ZN8touchgfx7Unicode6strlenEPKt>:
 8013a04:	4602      	mov	r2, r0
 8013a06:	b148      	cbz	r0, 8013a1c <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 8013a08:	2300      	movs	r3, #0
 8013a0a:	b298      	uxth	r0, r3
 8013a0c:	3301      	adds	r3, #1
 8013a0e:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 8013a12:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 8013a16:	2900      	cmp	r1, #0
 8013a18:	d1f7      	bne.n	8013a0a <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 8013a1a:	4770      	bx	lr
 8013a1c:	4770      	bx	lr

08013a1e <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 8013a1e:	b530      	push	{r4, r5, lr}
 8013a20:	4604      	mov	r4, r0
 8013a22:	b159      	cbz	r1, 8013a3c <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 8013a24:	b148      	cbz	r0, 8013a3a <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8013a26:	2300      	movs	r3, #0
 8013a28:	b298      	uxth	r0, r3
 8013a2a:	4282      	cmp	r2, r0
 8013a2c:	d905      	bls.n	8013a3a <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8013a2e:	5ccd      	ldrb	r5, [r1, r3]
 8013a30:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 8013a34:	3301      	adds	r3, #1
 8013a36:	2d00      	cmp	r5, #0
 8013a38:	d1f6      	bne.n	8013a28 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 8013a3a:	bd30      	pop	{r4, r5, pc}
 8013a3c:	4608      	mov	r0, r1
 8013a3e:	e7fc      	b.n	8013a3a <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

08013a40 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>:
 8013a40:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013a42:	b08b      	sub	sp, #44	; 0x2c
 8013a44:	468c      	mov	ip, r1
 8013a46:	2100      	movs	r1, #0
 8013a48:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 8013a4c:	ae01      	add	r6, sp, #4
 8013a4e:	211f      	movs	r1, #31
 8013a50:	fbb0 f7f3 	udiv	r7, r0, r3
 8013a54:	fb03 0517 	mls	r5, r3, r7, r0
 8013a58:	b2ec      	uxtb	r4, r5
 8013a5a:	2d09      	cmp	r5, #9
 8013a5c:	bfd4      	ite	le
 8013a5e:	3430      	addle	r4, #48	; 0x30
 8013a60:	3457      	addgt	r4, #87	; 0x57
 8013a62:	b2e4      	uxtb	r4, r4
 8013a64:	558c      	strb	r4, [r1, r6]
 8013a66:	4638      	mov	r0, r7
 8013a68:	1e4c      	subs	r4, r1, #1
 8013a6a:	b92f      	cbnz	r7, 8013a78 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2+0x38>
 8013a6c:	4431      	add	r1, r6
 8013a6e:	4660      	mov	r0, ip
 8013a70:	f7ff ffd5 	bl	8013a1e <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8013a74:	b00b      	add	sp, #44	; 0x2c
 8013a76:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013a78:	4621      	mov	r1, r4
 8013a7a:	e7e9      	b.n	8013a50 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2+0x10>

08013a7c <_ZN8touchgfx7Unicode4itoaElPtti>:
 8013a7c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013a7e:	4607      	mov	r7, r0
 8013a80:	b08b      	sub	sp, #44	; 0x2c
 8013a82:	4608      	mov	r0, r1
 8013a84:	b341      	cbz	r1, 8013ad8 <_ZN8touchgfx7Unicode4itoaElPtti+0x5c>
 8013a86:	1e99      	subs	r1, r3, #2
 8013a88:	2922      	cmp	r1, #34	; 0x22
 8013a8a:	d825      	bhi.n	8013ad8 <_ZN8touchgfx7Unicode4itoaElPtti+0x5c>
 8013a8c:	2100      	movs	r1, #0
 8013a8e:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 8013a92:	463c      	mov	r4, r7
 8013a94:	261f      	movs	r6, #31
 8013a96:	f10d 0c04 	add.w	ip, sp, #4
 8013a9a:	fb94 fef3 	sdiv	lr, r4, r3
 8013a9e:	fb03 441e 	mls	r4, r3, lr, r4
 8013aa2:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 8013aa6:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 8013aaa:	b2ec      	uxtb	r4, r5
 8013aac:	2d09      	cmp	r5, #9
 8013aae:	bfd4      	ite	le
 8013ab0:	3430      	addle	r4, #48	; 0x30
 8013ab2:	3457      	addgt	r4, #87	; 0x57
 8013ab4:	b2e4      	uxtb	r4, r4
 8013ab6:	f80c 4006 	strb.w	r4, [ip, r6]
 8013aba:	4674      	mov	r4, lr
 8013abc:	1e71      	subs	r1, r6, #1
 8013abe:	b96c      	cbnz	r4, 8013adc <_ZN8touchgfx7Unicode4itoaElPtti+0x60>
 8013ac0:	2f00      	cmp	r7, #0
 8013ac2:	da05      	bge.n	8013ad0 <_ZN8touchgfx7Unicode4itoaElPtti+0x54>
 8013ac4:	ab0a      	add	r3, sp, #40	; 0x28
 8013ac6:	4419      	add	r1, r3
 8013ac8:	232d      	movs	r3, #45	; 0x2d
 8013aca:	f801 3c24 	strb.w	r3, [r1, #-36]
 8013ace:	1eb1      	subs	r1, r6, #2
 8013ad0:	3101      	adds	r1, #1
 8013ad2:	4461      	add	r1, ip
 8013ad4:	f7ff ffa3 	bl	8013a1e <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8013ad8:	b00b      	add	sp, #44	; 0x2c
 8013ada:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013adc:	460e      	mov	r6, r1
 8013ade:	e7dc      	b.n	8013a9a <_ZN8touchgfx7Unicode4itoaElPtti+0x1e>

08013ae0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 8013ae0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013ae4:	4691      	mov	r9, r2
 8013ae6:	b085      	sub	sp, #20
 8013ae8:	6802      	ldr	r2, [r0, #0]
 8013aea:	9201      	str	r2, [sp, #4]
 8013aec:	4688      	mov	r8, r1
 8013aee:	4683      	mov	fp, r0
 8013af0:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 8013af4:	9103      	str	r1, [sp, #12]
 8013af6:	4610      	mov	r0, r2
 8013af8:	461c      	mov	r4, r3
 8013afa:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 8013afe:	9302      	str	r3, [sp, #8]
 8013b00:	f7ff ff80 	bl	8013a04 <_ZN8touchgfx7Unicode6strlenEPKt>
 8013b04:	f1b8 0f00 	cmp.w	r8, #0
 8013b08:	bf0c      	ite	eq
 8013b0a:	4684      	moveq	ip, r0
 8013b0c:	f100 0c01 	addne.w	ip, r0, #1
 8013b10:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
 8013b14:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 8013b18:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8013b1a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8013b1c:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
 8013b20:	9903      	ldr	r1, [sp, #12]
 8013b22:	fa1f fc8c 	uxth.w	ip, ip
 8013b26:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 8013b2a:	d041      	beq.n	8013bb0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8013b2c:	d834      	bhi.n	8013b98 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 8013b2e:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
 8013b32:	d059      	beq.n	8013be8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 8013b34:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 8013b38:	d03a      	beq.n	8013bb0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8013b3a:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
 8013b3e:	d034      	beq.n	8013baa <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8013b40:	2400      	movs	r4, #0
 8013b42:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 8013b46:	3a01      	subs	r2, #1
 8013b48:	b169      	cbz	r1, 8013b66 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8013b4a:	9911      	ldr	r1, [sp, #68]	; 0x44
 8013b4c:	458c      	cmp	ip, r1
 8013b4e:	da09      	bge.n	8013b64 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8013b50:	eba1 010c 	sub.w	r1, r1, ip
 8013b54:	b289      	uxth	r1, r1
 8013b56:	b933      	cbnz	r3, 8013b66 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8013b58:	2e00      	cmp	r6, #0
 8013b5a:	d051      	beq.n	8013c00 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8013b5c:	2800      	cmp	r0, #0
 8013b5e:	d04f      	beq.n	8013c00 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8013b60:	440c      	add	r4, r1
 8013b62:	b2a4      	uxth	r4, r4
 8013b64:	2100      	movs	r1, #0
 8013b66:	682b      	ldr	r3, [r5, #0]
 8013b68:	4293      	cmp	r3, r2
 8013b6a:	da07      	bge.n	8013b7c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8013b6c:	f1b8 0f00 	cmp.w	r8, #0
 8013b70:	d004      	beq.n	8013b7c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8013b72:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 8013b76:	682b      	ldr	r3, [r5, #0]
 8013b78:	3301      	adds	r3, #1
 8013b7a:	602b      	str	r3, [r5, #0]
 8013b7c:	2730      	movs	r7, #48	; 0x30
 8013b7e:	2c00      	cmp	r4, #0
 8013b80:	d04e      	beq.n	8013c20 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8013b82:	682e      	ldr	r6, [r5, #0]
 8013b84:	3c01      	subs	r4, #1
 8013b86:	42b2      	cmp	r2, r6
 8013b88:	b2a4      	uxth	r4, r4
 8013b8a:	dd49      	ble.n	8013c20 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8013b8c:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8013b90:	682b      	ldr	r3, [r5, #0]
 8013b92:	3301      	adds	r3, #1
 8013b94:	602b      	str	r3, [r5, #0]
 8013b96:	e7f2      	b.n	8013b7e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 8013b98:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
 8013b9c:	d01d      	beq.n	8013bda <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 8013b9e:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
 8013ba2:	d002      	beq.n	8013baa <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8013ba4:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
 8013ba8:	e7c9      	b.n	8013b3e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 8013baa:	4684      	mov	ip, r0
 8013bac:	f04f 0800 	mov.w	r8, #0
 8013bb0:	2c00      	cmp	r4, #0
 8013bb2:	d0c6      	beq.n	8013b42 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8013bb4:	b947      	cbnz	r7, 8013bc8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8013bb6:	2801      	cmp	r0, #1
 8013bb8:	d106      	bne.n	8013bc8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8013bba:	8814      	ldrh	r4, [r2, #0]
 8013bbc:	2c30      	cmp	r4, #48	; 0x30
 8013bbe:	bf02      	ittt	eq
 8013bc0:	3202      	addeq	r2, #2
 8013bc2:	f8cb 2000 	streq.w	r2, [fp]
 8013bc6:	4638      	moveq	r0, r7
 8013bc8:	45bc      	cmp	ip, r7
 8013bca:	da14      	bge.n	8013bf6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 8013bcc:	b2bf      	uxth	r7, r7
 8013bce:	eba7 040c 	sub.w	r4, r7, ip
 8013bd2:	b2a4      	uxth	r4, r4
 8013bd4:	46bc      	mov	ip, r7
 8013bd6:	2600      	movs	r6, #0
 8013bd8:	e7b3      	b.n	8013b42 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8013bda:	4684      	mov	ip, r0
 8013bdc:	b16c      	cbz	r4, 8013bfa <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 8013bde:	42b8      	cmp	r0, r7
 8013be0:	dd00      	ble.n	8013be4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 8013be2:	b2b8      	uxth	r0, r7
 8013be4:	2400      	movs	r4, #0
 8013be6:	e003      	b.n	8013bf0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 8013be8:	f04f 0c01 	mov.w	ip, #1
 8013bec:	2400      	movs	r4, #0
 8013bee:	4660      	mov	r0, ip
 8013bf0:	4626      	mov	r6, r4
 8013bf2:	46a0      	mov	r8, r4
 8013bf4:	e7a5      	b.n	8013b42 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8013bf6:	2400      	movs	r4, #0
 8013bf8:	e7ed      	b.n	8013bd6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 8013bfa:	4626      	mov	r6, r4
 8013bfc:	46a0      	mov	r8, r4
 8013bfe:	e7a0      	b.n	8013b42 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8013c00:	2900      	cmp	r1, #0
 8013c02:	d0b0      	beq.n	8013b66 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8013c04:	2720      	movs	r7, #32
 8013c06:	682e      	ldr	r6, [r5, #0]
 8013c08:	2900      	cmp	r1, #0
 8013c0a:	d0ac      	beq.n	8013b66 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8013c0c:	3901      	subs	r1, #1
 8013c0e:	4296      	cmp	r6, r2
 8013c10:	b289      	uxth	r1, r1
 8013c12:	daa7      	bge.n	8013b64 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8013c14:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8013c18:	682b      	ldr	r3, [r5, #0]
 8013c1a:	3301      	adds	r3, #1
 8013c1c:	602b      	str	r3, [r5, #0]
 8013c1e:	e7f2      	b.n	8013c06 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 8013c20:	b188      	cbz	r0, 8013c46 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8013c22:	682b      	ldr	r3, [r5, #0]
 8013c24:	3801      	subs	r0, #1
 8013c26:	429a      	cmp	r2, r3
 8013c28:	b280      	uxth	r0, r0
 8013c2a:	dd0c      	ble.n	8013c46 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8013c2c:	f8db 3000 	ldr.w	r3, [fp]
 8013c30:	1c9c      	adds	r4, r3, #2
 8013c32:	f8cb 4000 	str.w	r4, [fp]
 8013c36:	881c      	ldrh	r4, [r3, #0]
 8013c38:	682b      	ldr	r3, [r5, #0]
 8013c3a:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 8013c3e:	682b      	ldr	r3, [r5, #0]
 8013c40:	3301      	adds	r3, #1
 8013c42:	602b      	str	r3, [r5, #0]
 8013c44:	e7ec      	b.n	8013c20 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8013c46:	2620      	movs	r6, #32
 8013c48:	b151      	cbz	r1, 8013c60 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8013c4a:	6828      	ldr	r0, [r5, #0]
 8013c4c:	3901      	subs	r1, #1
 8013c4e:	4282      	cmp	r2, r0
 8013c50:	b289      	uxth	r1, r1
 8013c52:	dd05      	ble.n	8013c60 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8013c54:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 8013c58:	682b      	ldr	r3, [r5, #0]
 8013c5a:	3301      	adds	r3, #1
 8013c5c:	602b      	str	r3, [r5, #0]
 8013c5e:	e7f3      	b.n	8013c48 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 8013c60:	b005      	add	sp, #20
 8013c62:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08013c66 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 8013c66:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013c6a:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 8013c6e:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
 8013c72:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
 8013c76:	2400      	movs	r4, #0
 8013c78:	8014      	strh	r4, [r2, #0]
 8013c7a:	701c      	strb	r4, [r3, #0]
 8013c7c:	f888 4000 	strb.w	r4, [r8]
 8013c80:	f88c 4000 	strb.w	r4, [ip]
 8013c84:	f88e 4000 	strb.w	r4, [lr]
 8013c88:	703c      	strb	r4, [r7, #0]
 8013c8a:	6804      	ldr	r4, [r0, #0]
 8013c8c:	b1a4      	cbz	r4, 8013cb8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 8013c8e:	8824      	ldrh	r4, [r4, #0]
 8013c90:	f04f 0901 	mov.w	r9, #1
 8013c94:	b314      	cbz	r4, 8013cdc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8013c96:	2c2b      	cmp	r4, #43	; 0x2b
 8013c98:	d001      	beq.n	8013c9e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 8013c9a:	2c20      	cmp	r4, #32
 8013c9c:	d110      	bne.n	8013cc0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 8013c9e:	8014      	strh	r4, [r2, #0]
 8013ca0:	6804      	ldr	r4, [r0, #0]
 8013ca2:	b10c      	cbz	r4, 8013ca8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 8013ca4:	3402      	adds	r4, #2
 8013ca6:	6004      	str	r4, [r0, #0]
 8013ca8:	680c      	ldr	r4, [r1, #0]
 8013caa:	b10c      	cbz	r4, 8013cb0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 8013cac:	3401      	adds	r4, #1
 8013cae:	600c      	str	r4, [r1, #0]
 8013cb0:	6804      	ldr	r4, [r0, #0]
 8013cb2:	b17c      	cbz	r4, 8013cd4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 8013cb4:	8824      	ldrh	r4, [r4, #0]
 8013cb6:	e7ed      	b.n	8013c94 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8013cb8:	680c      	ldr	r4, [r1, #0]
 8013cba:	b17c      	cbz	r4, 8013cdc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8013cbc:	7824      	ldrb	r4, [r4, #0]
 8013cbe:	e7e7      	b.n	8013c90 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 8013cc0:	2c2d      	cmp	r4, #45	; 0x2d
 8013cc2:	d102      	bne.n	8013cca <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 8013cc4:	f883 9000 	strb.w	r9, [r3]
 8013cc8:	e7ea      	b.n	8013ca0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8013cca:	2c23      	cmp	r4, #35	; 0x23
 8013ccc:	d107      	bne.n	8013cde <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 8013cce:	f888 9000 	strb.w	r9, [r8]
 8013cd2:	e7e5      	b.n	8013ca0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8013cd4:	680c      	ldr	r4, [r1, #0]
 8013cd6:	b10c      	cbz	r4, 8013cdc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8013cd8:	7824      	ldrb	r4, [r4, #0]
 8013cda:	e7db      	b.n	8013c94 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8013cdc:	2400      	movs	r4, #0
 8013cde:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8013ce2:	2b09      	cmp	r3, #9
 8013ce4:	d901      	bls.n	8013cea <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 8013ce6:	2c2a      	cmp	r4, #42	; 0x2a
 8013ce8:	d122      	bne.n	8013d30 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8013cea:	2301      	movs	r3, #1
 8013cec:	2c30      	cmp	r4, #48	; 0x30
 8013cee:	f88e 3000 	strb.w	r3, [lr]
 8013cf2:	d10d      	bne.n	8013d10 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8013cf4:	f88c 3000 	strb.w	r3, [ip]
 8013cf8:	6803      	ldr	r3, [r0, #0]
 8013cfa:	b10b      	cbz	r3, 8013d00 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 8013cfc:	3302      	adds	r3, #2
 8013cfe:	6003      	str	r3, [r0, #0]
 8013d00:	680b      	ldr	r3, [r1, #0]
 8013d02:	b10b      	cbz	r3, 8013d08 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 8013d04:	3301      	adds	r3, #1
 8013d06:	600b      	str	r3, [r1, #0]
 8013d08:	6803      	ldr	r3, [r0, #0]
 8013d0a:	2b00      	cmp	r3, #0
 8013d0c:	d02f      	beq.n	8013d6e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 8013d0e:	881c      	ldrh	r4, [r3, #0]
 8013d10:	2c2a      	cmp	r4, #42	; 0x2a
 8013d12:	d135      	bne.n	8013d80 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8013d14:	f04f 33ff 	mov.w	r3, #4294967295
 8013d18:	6033      	str	r3, [r6, #0]
 8013d1a:	6803      	ldr	r3, [r0, #0]
 8013d1c:	b10b      	cbz	r3, 8013d22 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 8013d1e:	3302      	adds	r3, #2
 8013d20:	6003      	str	r3, [r0, #0]
 8013d22:	680b      	ldr	r3, [r1, #0]
 8013d24:	b10b      	cbz	r3, 8013d2a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 8013d26:	3301      	adds	r3, #1
 8013d28:	600b      	str	r3, [r1, #0]
 8013d2a:	6803      	ldr	r3, [r0, #0]
 8013d2c:	b31b      	cbz	r3, 8013d76 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 8013d2e:	881c      	ldrh	r4, [r3, #0]
 8013d30:	2c2e      	cmp	r4, #46	; 0x2e
 8013d32:	d11a      	bne.n	8013d6a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8013d34:	2301      	movs	r3, #1
 8013d36:	703b      	strb	r3, [r7, #0]
 8013d38:	6803      	ldr	r3, [r0, #0]
 8013d3a:	b10b      	cbz	r3, 8013d40 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 8013d3c:	3302      	adds	r3, #2
 8013d3e:	6003      	str	r3, [r0, #0]
 8013d40:	680b      	ldr	r3, [r1, #0]
 8013d42:	b10b      	cbz	r3, 8013d48 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 8013d44:	3301      	adds	r3, #1
 8013d46:	600b      	str	r3, [r1, #0]
 8013d48:	6803      	ldr	r3, [r0, #0]
 8013d4a:	2b00      	cmp	r3, #0
 8013d4c:	d036      	beq.n	8013dbc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 8013d4e:	881b      	ldrh	r3, [r3, #0]
 8013d50:	2b2a      	cmp	r3, #42	; 0x2a
 8013d52:	d137      	bne.n	8013dc4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8013d54:	f04f 33ff 	mov.w	r3, #4294967295
 8013d58:	602b      	str	r3, [r5, #0]
 8013d5a:	6803      	ldr	r3, [r0, #0]
 8013d5c:	b10b      	cbz	r3, 8013d62 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 8013d5e:	3302      	adds	r3, #2
 8013d60:	6003      	str	r3, [r0, #0]
 8013d62:	680b      	ldr	r3, [r1, #0]
 8013d64:	b10b      	cbz	r3, 8013d6a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8013d66:	3301      	adds	r3, #1
 8013d68:	600b      	str	r3, [r1, #0]
 8013d6a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8013d6e:	680c      	ldr	r4, [r1, #0]
 8013d70:	b134      	cbz	r4, 8013d80 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8013d72:	7824      	ldrb	r4, [r4, #0]
 8013d74:	e7cc      	b.n	8013d10 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8013d76:	680b      	ldr	r3, [r1, #0]
 8013d78:	2b00      	cmp	r3, #0
 8013d7a:	d0f6      	beq.n	8013d6a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8013d7c:	781c      	ldrb	r4, [r3, #0]
 8013d7e:	e7d7      	b.n	8013d30 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8013d80:	2300      	movs	r3, #0
 8013d82:	6033      	str	r3, [r6, #0]
 8013d84:	220a      	movs	r2, #10
 8013d86:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 8013d8a:	fa1f f38c 	uxth.w	r3, ip
 8013d8e:	2b09      	cmp	r3, #9
 8013d90:	d8ce      	bhi.n	8013d30 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8013d92:	6833      	ldr	r3, [r6, #0]
 8013d94:	fb02 c303 	mla	r3, r2, r3, ip
 8013d98:	6033      	str	r3, [r6, #0]
 8013d9a:	6803      	ldr	r3, [r0, #0]
 8013d9c:	b10b      	cbz	r3, 8013da2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 8013d9e:	3302      	adds	r3, #2
 8013da0:	6003      	str	r3, [r0, #0]
 8013da2:	680b      	ldr	r3, [r1, #0]
 8013da4:	b10b      	cbz	r3, 8013daa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 8013da6:	3301      	adds	r3, #1
 8013da8:	600b      	str	r3, [r1, #0]
 8013daa:	6803      	ldr	r3, [r0, #0]
 8013dac:	b10b      	cbz	r3, 8013db2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 8013dae:	881c      	ldrh	r4, [r3, #0]
 8013db0:	e7e9      	b.n	8013d86 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8013db2:	680c      	ldr	r4, [r1, #0]
 8013db4:	2c00      	cmp	r4, #0
 8013db6:	d0e6      	beq.n	8013d86 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8013db8:	7824      	ldrb	r4, [r4, #0]
 8013dba:	e7e4      	b.n	8013d86 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8013dbc:	680b      	ldr	r3, [r1, #0]
 8013dbe:	b10b      	cbz	r3, 8013dc4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8013dc0:	781b      	ldrb	r3, [r3, #0]
 8013dc2:	e7c5      	b.n	8013d50 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 8013dc4:	2200      	movs	r2, #0
 8013dc6:	602a      	str	r2, [r5, #0]
 8013dc8:	240a      	movs	r4, #10
 8013dca:	3b30      	subs	r3, #48	; 0x30
 8013dcc:	b29e      	uxth	r6, r3
 8013dce:	2e09      	cmp	r6, #9
 8013dd0:	682a      	ldr	r2, [r5, #0]
 8013dd2:	d813      	bhi.n	8013dfc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 8013dd4:	fb04 3302 	mla	r3, r4, r2, r3
 8013dd8:	602b      	str	r3, [r5, #0]
 8013dda:	6803      	ldr	r3, [r0, #0]
 8013ddc:	b10b      	cbz	r3, 8013de2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 8013dde:	3302      	adds	r3, #2
 8013de0:	6003      	str	r3, [r0, #0]
 8013de2:	680b      	ldr	r3, [r1, #0]
 8013de4:	b10b      	cbz	r3, 8013dea <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 8013de6:	3301      	adds	r3, #1
 8013de8:	600b      	str	r3, [r1, #0]
 8013dea:	6803      	ldr	r3, [r0, #0]
 8013dec:	b10b      	cbz	r3, 8013df2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 8013dee:	881b      	ldrh	r3, [r3, #0]
 8013df0:	e7eb      	b.n	8013dca <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8013df2:	680b      	ldr	r3, [r1, #0]
 8013df4:	2b00      	cmp	r3, #0
 8013df6:	d0e8      	beq.n	8013dca <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8013df8:	781b      	ldrb	r3, [r3, #0]
 8013dfa:	e7e6      	b.n	8013dca <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8013dfc:	2a06      	cmp	r2, #6
 8013dfe:	bfa8      	it	ge
 8013e00:	2206      	movge	r2, #6
 8013e02:	602a      	str	r2, [r5, #0]
 8013e04:	e7b1      	b.n	8013d6a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

08013e06 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 8013e06:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013e0a:	b0a3      	sub	sp, #140	; 0x8c
 8013e0c:	2600      	movs	r6, #0
 8013e0e:	f10d 0944 	add.w	r9, sp, #68	; 0x44
 8013e12:	4607      	mov	r7, r0
 8013e14:	4688      	mov	r8, r1
 8013e16:	e9cd 3208 	strd	r3, r2, [sp, #32]
 8013e1a:	4631      	mov	r1, r6
 8013e1c:	2242      	movs	r2, #66	; 0x42
 8013e1e:	4648      	mov	r0, r9
 8013e20:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 8013e22:	960d      	str	r6, [sp, #52]	; 0x34
 8013e24:	f00c fefa 	bl	8020c1c <memset>
 8013e28:	b15f      	cbz	r7, 8013e42 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 8013e2a:	f108 3aff 	add.w	sl, r8, #4294967295
 8013e2e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8013e30:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013e32:	b152      	cbz	r2, 8013e4a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 8013e34:	8812      	ldrh	r2, [r2, #0]
 8013e36:	b10a      	cbz	r2, 8013e3c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8013e38:	459a      	cmp	sl, r3
 8013e3a:	dc2e      	bgt.n	8013e9a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 8013e3c:	2200      	movs	r2, #0
 8013e3e:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8013e42:	4638      	mov	r0, r7
 8013e44:	b023      	add	sp, #140	; 0x8c
 8013e46:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013e4a:	9a08      	ldr	r2, [sp, #32]
 8013e4c:	2a00      	cmp	r2, #0
 8013e4e:	d0f5      	beq.n	8013e3c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8013e50:	7812      	ldrb	r2, [r2, #0]
 8013e52:	e7f0      	b.n	8013e36 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 8013e54:	2d00      	cmp	r5, #0
 8013e56:	d0ea      	beq.n	8013e2e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8013e58:	782a      	ldrb	r2, [r5, #0]
 8013e5a:	b142      	cbz	r2, 8013e6e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 8013e5c:	2a25      	cmp	r2, #37	; 0x25
 8013e5e:	d001      	beq.n	8013e64 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 8013e60:	459a      	cmp	sl, r3
 8013e62:	dc08      	bgt.n	8013e76 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 8013e64:	f1bb 0f00 	cmp.w	fp, #0
 8013e68:	d121      	bne.n	8013eae <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 8013e6a:	2d00      	cmp	r5, #0
 8013e6c:	d0df      	beq.n	8013e2e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8013e6e:	782a      	ldrb	r2, [r5, #0]
 8013e70:	f04f 0b00 	mov.w	fp, #0
 8013e74:	e01d      	b.n	8013eb2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 8013e76:	f1bb 0f00 	cmp.w	fp, #0
 8013e7a:	d078      	beq.n	8013f6e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 8013e7c:	f8bb 2000 	ldrh.w	r2, [fp]
 8013e80:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8013e84:	f1bb 0f00 	cmp.w	fp, #0
 8013e88:	d002      	beq.n	8013e90 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 8013e8a:	f10b 0202 	add.w	r2, fp, #2
 8013e8e:	9209      	str	r2, [sp, #36]	; 0x24
 8013e90:	b10d      	cbz	r5, 8013e96 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 8013e92:	3501      	adds	r5, #1
 8013e94:	9508      	str	r5, [sp, #32]
 8013e96:	3301      	adds	r3, #1
 8013e98:	930d      	str	r3, [sp, #52]	; 0x34
 8013e9a:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 8013e9e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013ea0:	f1bb 0f00 	cmp.w	fp, #0
 8013ea4:	d0d6      	beq.n	8013e54 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 8013ea6:	f8bb 2000 	ldrh.w	r2, [fp]
 8013eaa:	2a00      	cmp	r2, #0
 8013eac:	d1d6      	bne.n	8013e5c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 8013eae:	f8bb 2000 	ldrh.w	r2, [fp]
 8013eb2:	2a00      	cmp	r2, #0
 8013eb4:	d0bb      	beq.n	8013e2e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8013eb6:	459a      	cmp	sl, r3
 8013eb8:	ddb9      	ble.n	8013e2e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8013eba:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
 8013ebe:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
 8013ec2:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 8013ec6:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
 8013eca:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
 8013ece:	960e      	str	r6, [sp, #56]	; 0x38
 8013ed0:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
 8013ed4:	960f      	str	r6, [sp, #60]	; 0x3c
 8013ed6:	f1bb 0f00 	cmp.w	fp, #0
 8013eda:	d002      	beq.n	8013ee2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 8013edc:	f10b 0302 	add.w	r3, fp, #2
 8013ee0:	9309      	str	r3, [sp, #36]	; 0x24
 8013ee2:	b10d      	cbz	r5, 8013ee8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 8013ee4:	1c6b      	adds	r3, r5, #1
 8013ee6:	9308      	str	r3, [sp, #32]
 8013ee8:	ab0f      	add	r3, sp, #60	; 0x3c
 8013eea:	9305      	str	r3, [sp, #20]
 8013eec:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 8013ef0:	9304      	str	r3, [sp, #16]
 8013ef2:	ab0e      	add	r3, sp, #56	; 0x38
 8013ef4:	9303      	str	r3, [sp, #12]
 8013ef6:	ab0c      	add	r3, sp, #48	; 0x30
 8013ef8:	9302      	str	r3, [sp, #8]
 8013efa:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 8013efe:	9301      	str	r3, [sp, #4]
 8013f00:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 8013f04:	9300      	str	r3, [sp, #0]
 8013f06:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 8013f0a:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 8013f0e:	a908      	add	r1, sp, #32
 8013f10:	a809      	add	r0, sp, #36	; 0x24
 8013f12:	f7ff fea8 	bl	8013c66 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 8013f16:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013f18:	2b00      	cmp	r3, #0
 8013f1a:	bfbe      	ittt	lt
 8013f1c:	6823      	ldrlt	r3, [r4, #0]
 8013f1e:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8013f22:	930e      	strlt	r3, [sp, #56]	; 0x38
 8013f24:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8013f26:	bfb8      	it	lt
 8013f28:	3404      	addlt	r4, #4
 8013f2a:	2b00      	cmp	r3, #0
 8013f2c:	bfb8      	it	lt
 8013f2e:	6823      	ldrlt	r3, [r4, #0]
 8013f30:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8013f34:	bfbe      	ittt	lt
 8013f36:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8013f3a:	930f      	strlt	r3, [sp, #60]	; 0x3c
 8013f3c:	3404      	addlt	r4, #4
 8013f3e:	b1d9      	cbz	r1, 8013f78 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 8013f40:	880b      	ldrh	r3, [r1, #0]
 8013f42:	2b69      	cmp	r3, #105	; 0x69
 8013f44:	d01f      	beq.n	8013f86 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8013f46:	d82f      	bhi.n	8013fa8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 8013f48:	2b58      	cmp	r3, #88	; 0x58
 8013f4a:	d01c      	beq.n	8013f86 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8013f4c:	d818      	bhi.n	8013f80 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 8013f4e:	2b25      	cmp	r3, #37	; 0x25
 8013f50:	d034      	beq.n	8013fbc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 8013f52:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 8013f56:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013f58:	f1bb 0f00 	cmp.w	fp, #0
 8013f5c:	f000 80b8 	beq.w	80140d0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 8013f60:	f8bb 5000 	ldrh.w	r5, [fp]
 8013f64:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 8013f68:	3301      	adds	r3, #1
 8013f6a:	930d      	str	r3, [sp, #52]	; 0x34
 8013f6c:	e029      	b.n	8013fc2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8013f6e:	b10d      	cbz	r5, 8013f74 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 8013f70:	782a      	ldrb	r2, [r5, #0]
 8013f72:	e785      	b.n	8013e80 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8013f74:	462a      	mov	r2, r5
 8013f76:	e783      	b.n	8013e80 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8013f78:	2a00      	cmp	r2, #0
 8013f7a:	d0ea      	beq.n	8013f52 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8013f7c:	7813      	ldrb	r3, [r2, #0]
 8013f7e:	e7e0      	b.n	8013f42 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 8013f80:	3b63      	subs	r3, #99	; 0x63
 8013f82:	2b01      	cmp	r3, #1
 8013f84:	d8e5      	bhi.n	8013f52 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8013f86:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 8013f8a:	b329      	cbz	r1, 8013fd8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 8013f8c:	880b      	ldrh	r3, [r1, #0]
 8013f8e:	2b69      	cmp	r3, #105	; 0x69
 8013f90:	d063      	beq.n	801405a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8013f92:	d825      	bhi.n	8013fe0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 8013f94:	2b63      	cmp	r3, #99	; 0x63
 8013f96:	d038      	beq.n	801400a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 8013f98:	2b64      	cmp	r3, #100	; 0x64
 8013f9a:	d05e      	beq.n	801405a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8013f9c:	2b58      	cmp	r3, #88	; 0x58
 8013f9e:	d07b      	beq.n	8014098 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 8013fa0:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 8013fa4:	4625      	mov	r5, r4
 8013fa6:	e036      	b.n	8014016 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8013fa8:	2b73      	cmp	r3, #115	; 0x73
 8013faa:	d0ec      	beq.n	8013f86 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8013fac:	d802      	bhi.n	8013fb4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 8013fae:	2b6f      	cmp	r3, #111	; 0x6f
 8013fb0:	d1cf      	bne.n	8013f52 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8013fb2:	e7e8      	b.n	8013f86 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8013fb4:	2b75      	cmp	r3, #117	; 0x75
 8013fb6:	d0e6      	beq.n	8013f86 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8013fb8:	2b78      	cmp	r3, #120	; 0x78
 8013fba:	e7f9      	b.n	8013fb0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 8013fbc:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8013fbe:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 8013fc2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013fc4:	b10b      	cbz	r3, 8013fca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 8013fc6:	3302      	adds	r3, #2
 8013fc8:	9309      	str	r3, [sp, #36]	; 0x24
 8013fca:	9b08      	ldr	r3, [sp, #32]
 8013fcc:	2b00      	cmp	r3, #0
 8013fce:	f43f af2e 	beq.w	8013e2e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8013fd2:	3301      	adds	r3, #1
 8013fd4:	9308      	str	r3, [sp, #32]
 8013fd6:	e72a      	b.n	8013e2e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8013fd8:	2a00      	cmp	r2, #0
 8013fda:	d0e1      	beq.n	8013fa0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8013fdc:	7813      	ldrb	r3, [r2, #0]
 8013fde:	e7d6      	b.n	8013f8e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 8013fe0:	2b73      	cmp	r3, #115	; 0x73
 8013fe2:	d036      	beq.n	8014052 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 8013fe4:	d807      	bhi.n	8013ff6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 8013fe6:	2b6f      	cmp	r3, #111	; 0x6f
 8013fe8:	d1da      	bne.n	8013fa0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8013fea:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8013fec:	1d25      	adds	r5, r4, #4
 8013fee:	eba8 0202 	sub.w	r2, r8, r2
 8013ff2:	2308      	movs	r3, #8
 8013ff4:	e04a      	b.n	801408c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 8013ff6:	2b75      	cmp	r3, #117	; 0x75
 8013ff8:	d043      	beq.n	8014082 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 8013ffa:	2b78      	cmp	r3, #120	; 0x78
 8013ffc:	d1d0      	bne.n	8013fa0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8013ffe:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8014000:	1d25      	adds	r5, r4, #4
 8014002:	eba8 0202 	sub.w	r2, r8, r2
 8014006:	2310      	movs	r3, #16
 8014008:	e040      	b.n	801408c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 801400a:	6823      	ldr	r3, [r4, #0]
 801400c:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 8014010:	1d25      	adds	r5, r4, #4
 8014012:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 8014016:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014018:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 801401c:	2b00      	cmp	r3, #0
 801401e:	d052      	beq.n	80140c6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 8014020:	881a      	ldrh	r2, [r3, #0]
 8014022:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 8014026:	a80d      	add	r0, sp, #52	; 0x34
 8014028:	9005      	str	r0, [sp, #20]
 801402a:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 801402e:	9004      	str	r0, [sp, #16]
 8014030:	980e      	ldr	r0, [sp, #56]	; 0x38
 8014032:	9003      	str	r0, [sp, #12]
 8014034:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 8014038:	9002      	str	r0, [sp, #8]
 801403a:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801403c:	9001      	str	r0, [sp, #4]
 801403e:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 8014042:	9000      	str	r0, [sp, #0]
 8014044:	e9cd 8706 	strd	r8, r7, [sp, #24]
 8014048:	a810      	add	r0, sp, #64	; 0x40
 801404a:	f7ff fd49 	bl	8013ae0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 801404e:	462c      	mov	r4, r5
 8014050:	e7b7      	b.n	8013fc2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8014052:	6823      	ldr	r3, [r4, #0]
 8014054:	1d25      	adds	r5, r4, #4
 8014056:	9310      	str	r3, [sp, #64]	; 0x40
 8014058:	e7dd      	b.n	8014016 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801405a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801405c:	6820      	ldr	r0, [r4, #0]
 801405e:	eba8 0202 	sub.w	r2, r8, r2
 8014062:	230a      	movs	r3, #10
 8014064:	b292      	uxth	r2, r2
 8014066:	4649      	mov	r1, r9
 8014068:	f7ff fd08 	bl	8013a7c <_ZN8touchgfx7Unicode4itoaElPtti>
 801406c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8014070:	2b2d      	cmp	r3, #45	; 0x2d
 8014072:	f104 0504 	add.w	r5, r4, #4
 8014076:	d1ce      	bne.n	8014016 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8014078:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801407c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801407e:	3302      	adds	r3, #2
 8014080:	e7e9      	b.n	8014056 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 8014082:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8014084:	1d25      	adds	r5, r4, #4
 8014086:	eba8 0202 	sub.w	r2, r8, r2
 801408a:	230a      	movs	r3, #10
 801408c:	b292      	uxth	r2, r2
 801408e:	4649      	mov	r1, r9
 8014090:	6820      	ldr	r0, [r4, #0]
 8014092:	f7ff fcd5 	bl	8013a40 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>
 8014096:	e7be      	b.n	8014016 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8014098:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801409a:	6820      	ldr	r0, [r4, #0]
 801409c:	eba8 0202 	sub.w	r2, r8, r2
 80140a0:	b292      	uxth	r2, r2
 80140a2:	2310      	movs	r3, #16
 80140a4:	4649      	mov	r1, r9
 80140a6:	f7ff fccb 	bl	8013a40 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>
 80140aa:	1d25      	adds	r5, r4, #4
 80140ac:	f10d 0242 	add.w	r2, sp, #66	; 0x42
 80140b0:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 80140b4:	2b00      	cmp	r3, #0
 80140b6:	d0ae      	beq.n	8014016 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 80140b8:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 80140bc:	2919      	cmp	r1, #25
 80140be:	d8f7      	bhi.n	80140b0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 80140c0:	3b20      	subs	r3, #32
 80140c2:	8013      	strh	r3, [r2, #0]
 80140c4:	e7f4      	b.n	80140b0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 80140c6:	9a08      	ldr	r2, [sp, #32]
 80140c8:	2a00      	cmp	r2, #0
 80140ca:	d0aa      	beq.n	8014022 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 80140cc:	7812      	ldrb	r2, [r2, #0]
 80140ce:	e7a8      	b.n	8014022 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 80140d0:	2d00      	cmp	r5, #0
 80140d2:	f43f af47 	beq.w	8013f64 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 80140d6:	782d      	ldrb	r5, [r5, #0]
 80140d8:	e744      	b.n	8013f64 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

080140da <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 80140da:	b507      	push	{r0, r1, r2, lr}
 80140dc:	9300      	str	r3, [sp, #0]
 80140de:	4613      	mov	r3, r2
 80140e0:	2200      	movs	r2, #0
 80140e2:	f7ff fe90 	bl	8013e06 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 80140e6:	b003      	add	sp, #12
 80140e8:	f85d fb04 	ldr.w	pc, [sp], #4

080140ec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 80140ec:	b40c      	push	{r2, r3}
 80140ee:	b507      	push	{r0, r1, r2, lr}
 80140f0:	ab04      	add	r3, sp, #16
 80140f2:	f853 2b04 	ldr.w	r2, [r3], #4
 80140f6:	9301      	str	r3, [sp, #4]
 80140f8:	f7ff ffef 	bl	80140da <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 80140fc:	b003      	add	sp, #12
 80140fe:	f85d eb04 	ldr.w	lr, [sp], #4
 8014102:	b002      	add	sp, #8
 8014104:	4770      	bx	lr
	...

08014108 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>:
 8014108:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801410c:	b0c3      	sub	sp, #268	; 0x10c
 801410e:	2600      	movs	r6, #0
 8014110:	f10d 0840 	add.w	r8, sp, #64	; 0x40
 8014114:	4607      	mov	r7, r0
 8014116:	4689      	mov	r9, r1
 8014118:	e9cd 3208 	strd	r3, r2, [sp, #32]
 801411c:	4631      	mov	r1, r6
 801411e:	22c8      	movs	r2, #200	; 0xc8
 8014120:	4640      	mov	r0, r8
 8014122:	f8dd a130 	ldr.w	sl, [sp, #304]	; 0x130
 8014126:	960c      	str	r6, [sp, #48]	; 0x30
 8014128:	f00c fd78 	bl	8020c1c <memset>
 801412c:	b17f      	cbz	r7, 801414e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x46>
 801412e:	eddf 5aa4 	vldr	s11, [pc, #656]	; 80143c0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2b8>
 8014132:	f8df b298 	ldr.w	fp, [pc, #664]	; 80143cc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2c4>
 8014136:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8014138:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801413a:	b162      	cbz	r2, 8014156 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x4e>
 801413c:	8812      	ldrh	r2, [r2, #0]
 801413e:	b11a      	cbz	r2, 8014148 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x40>
 8014140:	f109 31ff 	add.w	r1, r9, #4294967295
 8014144:	4299      	cmp	r1, r3
 8014146:	dc26      	bgt.n	8014196 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x8e>
 8014148:	2200      	movs	r2, #0
 801414a:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 801414e:	4638      	mov	r0, r7
 8014150:	b043      	add	sp, #268	; 0x10c
 8014152:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014156:	9a08      	ldr	r2, [sp, #32]
 8014158:	2a00      	cmp	r2, #0
 801415a:	d0f5      	beq.n	8014148 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x40>
 801415c:	7812      	ldrb	r2, [r2, #0]
 801415e:	e7ee      	b.n	801413e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36>
 8014160:	2c00      	cmp	r4, #0
 8014162:	d0e8      	beq.n	8014136 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 8014164:	7822      	ldrb	r2, [r4, #0]
 8014166:	b132      	cbz	r2, 8014176 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x6e>
 8014168:	2a25      	cmp	r2, #37	; 0x25
 801416a:	d001      	beq.n	8014170 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x68>
 801416c:	4299      	cmp	r1, r3
 801416e:	dc05      	bgt.n	801417c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x74>
 8014170:	b9cd      	cbnz	r5, 80141a6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x9e>
 8014172:	2c00      	cmp	r4, #0
 8014174:	d0df      	beq.n	8014136 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 8014176:	7822      	ldrb	r2, [r4, #0]
 8014178:	2500      	movs	r5, #0
 801417a:	e015      	b.n	80141a8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xa0>
 801417c:	2d00      	cmp	r5, #0
 801417e:	d073      	beq.n	8014268 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x160>
 8014180:	882a      	ldrh	r2, [r5, #0]
 8014182:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8014186:	b10d      	cbz	r5, 801418c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x84>
 8014188:	3502      	adds	r5, #2
 801418a:	9509      	str	r5, [sp, #36]	; 0x24
 801418c:	b10c      	cbz	r4, 8014192 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x8a>
 801418e:	3401      	adds	r4, #1
 8014190:	9408      	str	r4, [sp, #32]
 8014192:	3301      	adds	r3, #1
 8014194:	930c      	str	r3, [sp, #48]	; 0x30
 8014196:	e9dd 4508 	ldrd	r4, r5, [sp, #32]
 801419a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801419c:	2d00      	cmp	r5, #0
 801419e:	d0df      	beq.n	8014160 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x58>
 80141a0:	882a      	ldrh	r2, [r5, #0]
 80141a2:	2a00      	cmp	r2, #0
 80141a4:	d1e0      	bne.n	8014168 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x60>
 80141a6:	882a      	ldrh	r2, [r5, #0]
 80141a8:	2a00      	cmp	r2, #0
 80141aa:	d0c4      	beq.n	8014136 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 80141ac:	4299      	cmp	r1, r3
 80141ae:	ddc2      	ble.n	8014136 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 80141b0:	2300      	movs	r3, #0
 80141b2:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 80141b6:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80141ba:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 80141be:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 80141c2:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 80141c6:	930d      	str	r3, [sp, #52]	; 0x34
 80141c8:	f88d 302d 	strb.w	r3, [sp, #45]	; 0x2d
 80141cc:	930e      	str	r3, [sp, #56]	; 0x38
 80141ce:	b10d      	cbz	r5, 80141d4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xcc>
 80141d0:	1cab      	adds	r3, r5, #2
 80141d2:	9309      	str	r3, [sp, #36]	; 0x24
 80141d4:	b10c      	cbz	r4, 80141da <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xd2>
 80141d6:	1c63      	adds	r3, r4, #1
 80141d8:	9308      	str	r3, [sp, #32]
 80141da:	ab0e      	add	r3, sp, #56	; 0x38
 80141dc:	9305      	str	r3, [sp, #20]
 80141de:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 80141e2:	9304      	str	r3, [sp, #16]
 80141e4:	ab0d      	add	r3, sp, #52	; 0x34
 80141e6:	9303      	str	r3, [sp, #12]
 80141e8:	ab0b      	add	r3, sp, #44	; 0x2c
 80141ea:	9302      	str	r3, [sp, #8]
 80141ec:	f10d 032b 	add.w	r3, sp, #43	; 0x2b
 80141f0:	9301      	str	r3, [sp, #4]
 80141f2:	f10d 032a 	add.w	r3, sp, #42	; 0x2a
 80141f6:	9300      	str	r3, [sp, #0]
 80141f8:	f10d 022e 	add.w	r2, sp, #46	; 0x2e
 80141fc:	f10d 0329 	add.w	r3, sp, #41	; 0x29
 8014200:	a908      	add	r1, sp, #32
 8014202:	a809      	add	r0, sp, #36	; 0x24
 8014204:	f7ff fd2f 	bl	8013c66 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 8014208:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801420a:	2b00      	cmp	r3, #0
 801420c:	da0b      	bge.n	8014226 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x11e>
 801420e:	eb0a 0386 	add.w	r3, sl, r6, lsl #2
 8014212:	edd3 7a00 	vldr	s15, [r3]
 8014216:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801421a:	3601      	adds	r6, #1
 801421c:	ee17 3a90 	vmov	r3, s15
 8014220:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014224:	930d      	str	r3, [sp, #52]	; 0x34
 8014226:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014228:	2b00      	cmp	r3, #0
 801422a:	da0b      	bge.n	8014244 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x13c>
 801422c:	eb0a 0386 	add.w	r3, sl, r6, lsl #2
 8014230:	edd3 7a00 	vldr	s15, [r3]
 8014234:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8014238:	3601      	adds	r6, #1
 801423a:	ee17 3a90 	vmov	r3, s15
 801423e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014242:	930e      	str	r3, [sp, #56]	; 0x38
 8014244:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014246:	b1a3      	cbz	r3, 8014272 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x16a>
 8014248:	881a      	ldrh	r2, [r3, #0]
 801424a:	2a25      	cmp	r2, #37	; 0x25
 801424c:	d016      	beq.n	801427c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x174>
 801424e:	2a66      	cmp	r2, #102	; 0x66
 8014250:	d01a      	beq.n	8014288 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x180>
 8014252:	e9cd 4508 	strd	r4, r5, [sp, #32]
 8014256:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014258:	2d00      	cmp	r5, #0
 801425a:	f000 80fe 	beq.w	801445a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x352>
 801425e:	882c      	ldrh	r4, [r5, #0]
 8014260:	f827 4013 	strh.w	r4, [r7, r3, lsl #1]
 8014264:	3301      	adds	r3, #1
 8014266:	e00d      	b.n	8014284 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x17c>
 8014268:	b10c      	cbz	r4, 801426e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x166>
 801426a:	7822      	ldrb	r2, [r4, #0]
 801426c:	e789      	b.n	8014182 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7a>
 801426e:	4622      	mov	r2, r4
 8014270:	e787      	b.n	8014182 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7a>
 8014272:	9b08      	ldr	r3, [sp, #32]
 8014274:	2b00      	cmp	r3, #0
 8014276:	d0ec      	beq.n	8014252 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x14a>
 8014278:	781a      	ldrb	r2, [r3, #0]
 801427a:	e7e6      	b.n	801424a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x142>
 801427c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801427e:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8014282:	3302      	adds	r3, #2
 8014284:	930c      	str	r3, [sp, #48]	; 0x30
 8014286:	e042      	b.n	801430e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x206>
 8014288:	eb0a 0386 	add.w	r3, sl, r6, lsl #2
 801428c:	edd3 7a00 	vldr	s15, [r3]
 8014290:	f89d 302d 	ldrb.w	r3, [sp, #45]	; 0x2d
 8014294:	f8cd 803c 	str.w	r8, [sp, #60]	; 0x3c
 8014298:	3601      	adds	r6, #1
 801429a:	b923      	cbnz	r3, 80142a6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x19e>
 801429c:	2301      	movs	r3, #1
 801429e:	f88d 302d 	strb.w	r3, [sp, #45]	; 0x2d
 80142a2:	2306      	movs	r3, #6
 80142a4:	930e      	str	r3, [sp, #56]	; 0x38
 80142a6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80142aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80142ae:	bf48      	it	mi
 80142b0:	eef1 7a67 	vnegmi.f32	s15, s15
 80142b4:	eeb0 7ae7 	vabs.f32	s14, s15
 80142b8:	bf48      	it	mi
 80142ba:	232d      	movmi	r3, #45	; 0x2d
 80142bc:	eeb4 7a65 	vcmp.f32	s14, s11
 80142c0:	bf48      	it	mi
 80142c2:	f8ad 302e 	strhmi.w	r3, [sp, #46]	; 0x2e
 80142c6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80142ca:	dd2b      	ble.n	8014324 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x21c>
 80142cc:	f8cd b040 	str.w	fp, [sp, #64]	; 0x40
 80142d0:	2366      	movs	r3, #102	; 0x66
 80142d2:	9311      	str	r3, [sp, #68]	; 0x44
 80142d4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80142d6:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 80142da:	2b00      	cmp	r3, #0
 80142dc:	f000 80b7 	beq.w	801444e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x346>
 80142e0:	881a      	ldrh	r2, [r3, #0]
 80142e2:	f89d 302d 	ldrb.w	r3, [sp, #45]	; 0x2d
 80142e6:	a80c      	add	r0, sp, #48	; 0x30
 80142e8:	9005      	str	r0, [sp, #20]
 80142ea:	f89d 0029 	ldrb.w	r0, [sp, #41]	; 0x29
 80142ee:	9004      	str	r0, [sp, #16]
 80142f0:	980d      	ldr	r0, [sp, #52]	; 0x34
 80142f2:	9003      	str	r0, [sp, #12]
 80142f4:	f89d 002c 	ldrb.w	r0, [sp, #44]	; 0x2c
 80142f8:	9002      	str	r0, [sp, #8]
 80142fa:	980e      	ldr	r0, [sp, #56]	; 0x38
 80142fc:	9001      	str	r0, [sp, #4]
 80142fe:	f89d 002b 	ldrb.w	r0, [sp, #43]	; 0x2b
 8014302:	9000      	str	r0, [sp, #0]
 8014304:	e9cd 9706 	strd	r9, r7, [sp, #24]
 8014308:	a80f      	add	r0, sp, #60	; 0x3c
 801430a:	f7ff fbe9 	bl	8013ae0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 801430e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014310:	b10b      	cbz	r3, 8014316 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x20e>
 8014312:	3302      	adds	r3, #2
 8014314:	9309      	str	r3, [sp, #36]	; 0x24
 8014316:	9b08      	ldr	r3, [sp, #32]
 8014318:	2b00      	cmp	r3, #0
 801431a:	f43f af0c 	beq.w	8014136 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 801431e:	3301      	adds	r3, #1
 8014320:	9308      	str	r3, [sp, #32]
 8014322:	e708      	b.n	8014136 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 8014324:	eef4 7a67 	vcmp.f32	s15, s15
 8014328:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801432c:	d60b      	bvs.n	8014346 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x23e>
 801432e:	980e      	ldr	r0, [sp, #56]	; 0x38
 8014330:	ed9f 7a24 	vldr	s14, [pc, #144]	; 80143c4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2bc>
 8014334:	2300      	movs	r3, #0
 8014336:	eeb2 6a04 	vmov.f32	s12, #36	; 0x41200000  10.0
 801433a:	4283      	cmp	r3, r0
 801433c:	da07      	bge.n	801434e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x246>
 801433e:	ee87 7a06 	vdiv.f32	s14, s14, s12
 8014342:	3301      	adds	r3, #1
 8014344:	e7f9      	b.n	801433a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x232>
 8014346:	4b20      	ldr	r3, [pc, #128]	; (80143c8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2c0>)
 8014348:	9310      	str	r3, [sp, #64]	; 0x40
 801434a:	236e      	movs	r3, #110	; 0x6e
 801434c:	e7c1      	b.n	80142d2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1ca>
 801434e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8014352:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8014356:	eeb0 7a67 	vmov.f32	s14, s15
 801435a:	eeb4 7ac6 	vcmpe.f32	s14, s12
 801435e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014362:	da27      	bge.n	80143b4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2ac>
 8014364:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8014366:	2100      	movs	r1, #0
 8014368:	eeb6 5a00 	vmov.f32	s10, #96	; 0x3f000000  0.5
 801436c:	eba9 0202 	sub.w	r2, r9, r2
 8014370:	eef4 6ac5 	vcmpe.f32	s13, s10
 8014374:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014378:	b28c      	uxth	r4, r1
 801437a:	db2a      	blt.n	80143d2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2ca>
 801437c:	1a53      	subs	r3, r2, r1
 801437e:	2b00      	cmp	r3, #0
 8014380:	dd27      	ble.n	80143d2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2ca>
 8014382:	2963      	cmp	r1, #99	; 0x63
 8014384:	d024      	beq.n	80143d0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2c8>
 8014386:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 801438a:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 801438e:	ee17 3a10 	vmov	r3, s14
 8014392:	2b09      	cmp	r3, #9
 8014394:	bfa8      	it	ge
 8014396:	2309      	movge	r3, #9
 8014398:	ee07 3a10 	vmov	s14, r3
 801439c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80143a0:	f103 0430 	add.w	r4, r3, #48	; 0x30
 80143a4:	f828 4011 	strh.w	r4, [r8, r1, lsl #1]
 80143a8:	eee7 7a66 	vfms.f32	s15, s14, s13
 80143ac:	3101      	adds	r1, #1
 80143ae:	eec6 6a86 	vdiv.f32	s13, s13, s12
 80143b2:	e7dd      	b.n	8014370 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x268>
 80143b4:	ee66 6a86 	vmul.f32	s13, s13, s12
 80143b8:	ee87 7a06 	vdiv.f32	s14, s14, s12
 80143bc:	e7cd      	b.n	801435a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x252>
 80143be:	bf00      	nop
 80143c0:	7f7fffff 	.word	0x7f7fffff
 80143c4:	3f000002 	.word	0x3f000002
 80143c8:	0061006e 	.word	0x0061006e
 80143cc:	006e0069 	.word	0x006e0069
 80143d0:	460c      	mov	r4, r1
 80143d2:	2a63      	cmp	r2, #99	; 0x63
 80143d4:	bfd4      	ite	le
 80143d6:	ebc4 0202 	rsble	r2, r4, r2
 80143da:	f1c4 0263 	rsbgt	r2, r4, #99	; 0x63
 80143de:	2a00      	cmp	r2, #0
 80143e0:	dd30      	ble.n	8014444 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x33c>
 80143e2:	4603      	mov	r3, r0
 80143e4:	2501      	movs	r5, #1
 80143e6:	210a      	movs	r1, #10
 80143e8:	2b00      	cmp	r3, #0
 80143ea:	dd0d      	ble.n	8014408 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x300>
 80143ec:	ee67 7a86 	vmul.f32	s15, s15, s12
 80143f0:	3b01      	subs	r3, #1
 80143f2:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80143f6:	ee17 ca10 	vmov	ip, s14
 80143fa:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80143fe:	fb01 c505 	mla	r5, r1, r5, ip
 8014402:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8014406:	e7ef      	b.n	80143e8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e0>
 8014408:	2800      	cmp	r0, #0
 801440a:	f100 33ff 	add.w	r3, r0, #4294967295
 801440e:	bfac      	ite	ge
 8014410:	1a18      	subge	r0, r3, r0
 8014412:	4618      	movlt	r0, r3
 8014414:	0064      	lsls	r4, r4, #1
 8014416:	900e      	str	r0, [sp, #56]	; 0x38
 8014418:	230a      	movs	r3, #10
 801441a:	b292      	uxth	r2, r2
 801441c:	eb08 0104 	add.w	r1, r8, r4
 8014420:	4628      	mov	r0, r5
 8014422:	f7ff fb2b 	bl	8013a7c <_ZN8touchgfx7Unicode4itoaElPtti>
 8014426:	2d01      	cmp	r5, #1
 8014428:	dc0a      	bgt.n	8014440 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x338>
 801442a:	f89d 302a 	ldrb.w	r3, [sp, #42]	; 0x2a
 801442e:	2b00      	cmp	r3, #0
 8014430:	bf0c      	ite	eq
 8014432:	2300      	moveq	r3, #0
 8014434:	232e      	movne	r3, #46	; 0x2e
 8014436:	aa42      	add	r2, sp, #264	; 0x108
 8014438:	4414      	add	r4, r2
 801443a:	f824 3cc8 	strh.w	r3, [r4, #-200]
 801443e:	e749      	b.n	80142d4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1cc>
 8014440:	232e      	movs	r3, #46	; 0x2e
 8014442:	e7f8      	b.n	8014436 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x32e>
 8014444:	ab42      	add	r3, sp, #264	; 0x108
 8014446:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 801444a:	2300      	movs	r3, #0
 801444c:	e7f5      	b.n	801443a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x332>
 801444e:	9a08      	ldr	r2, [sp, #32]
 8014450:	2a00      	cmp	r2, #0
 8014452:	f43f af46 	beq.w	80142e2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1da>
 8014456:	7812      	ldrb	r2, [r2, #0]
 8014458:	e743      	b.n	80142e2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1da>
 801445a:	2c00      	cmp	r4, #0
 801445c:	f43f af00 	beq.w	8014260 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x158>
 8014460:	7824      	ldrb	r4, [r4, #0]
 8014462:	e6fd      	b.n	8014260 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x158>

08014464 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>:
 8014464:	b507      	push	{r0, r1, r2, lr}
 8014466:	9300      	str	r3, [sp, #0]
 8014468:	4613      	mov	r3, r2
 801446a:	2200      	movs	r2, #0
 801446c:	f7ff fe4c 	bl	8014108 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>
 8014470:	b003      	add	sp, #12
 8014472:	f85d fb04 	ldr.w	pc, [sp], #4
	...

08014478 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 8014478:	4b01      	ldr	r3, [pc, #4]	; (8014480 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 801447a:	6018      	str	r0, [r3, #0]
 801447c:	4770      	bx	lr
 801447e:	bf00      	nop
 8014480:	2001566c 	.word	0x2001566c

08014484 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 8014484:	4b06      	ldr	r3, [pc, #24]	; (80144a0 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 8014486:	881a      	ldrh	r2, [r3, #0]
 8014488:	4282      	cmp	r2, r0
 801448a:	d807      	bhi.n	801449c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 801448c:	4b05      	ldr	r3, [pc, #20]	; (80144a4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 801448e:	881b      	ldrh	r3, [r3, #0]
 8014490:	4413      	add	r3, r2
 8014492:	4298      	cmp	r0, r3
 8014494:	bfac      	ite	ge
 8014496:	2000      	movge	r0, #0
 8014498:	2001      	movlt	r0, #1
 801449a:	4770      	bx	lr
 801449c:	2000      	movs	r0, #0
 801449e:	4770      	bx	lr
 80144a0:	2001568c 	.word	0x2001568c
 80144a4:	20015690 	.word	0x20015690

080144a8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 80144a8:	b508      	push	{r3, lr}
 80144aa:	4601      	mov	r1, r0
 80144ac:	f7ff ffea 	bl	8014484 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 80144b0:	b118      	cbz	r0, 80144ba <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 80144b2:	4b02      	ldr	r3, [pc, #8]	; (80144bc <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 80144b4:	681b      	ldr	r3, [r3, #0]
 80144b6:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 80144ba:	bd08      	pop	{r3, pc}
 80144bc:	20015670 	.word	0x20015670

080144c0 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 80144c0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80144c2:	4c24      	ldr	r4, [pc, #144]	; (8014554 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 80144c4:	6823      	ldr	r3, [r4, #0]
 80144c6:	2b00      	cmp	r3, #0
 80144c8:	d042      	beq.n	8014550 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 80144ca:	4a23      	ldr	r2, [pc, #140]	; (8014558 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 80144cc:	4d23      	ldr	r5, [pc, #140]	; (801455c <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 80144ce:	8811      	ldrh	r1, [r2, #0]
 80144d0:	f8b5 c000 	ldrh.w	ip, [r5]
 80144d4:	4822      	ldr	r0, [pc, #136]	; (8014560 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 80144d6:	4461      	add	r1, ip
 80144d8:	1c4a      	adds	r2, r1, #1
 80144da:	f022 0201 	bic.w	r2, r2, #1
 80144de:	008f      	lsls	r7, r1, #2
 80144e0:	0412      	lsls	r2, r2, #16
 80144e2:	19de      	adds	r6, r3, r7
 80144e4:	0c12      	lsrs	r2, r2, #16
 80144e6:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 80144ea:	6006      	str	r6, [r0, #0]
 80144ec:	4e1d      	ldr	r6, [pc, #116]	; (8014564 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 80144ee:	19da      	adds	r2, r3, r7
 80144f0:	6032      	str	r2, [r6, #0]
 80144f2:	220e      	movs	r2, #14
 80144f4:	fb02 f20c 	mul.w	r2, r2, ip
 80144f8:	3203      	adds	r2, #3
 80144fa:	f022 0203 	bic.w	r2, r2, #3
 80144fe:	443a      	add	r2, r7
 8014500:	4f19      	ldr	r7, [pc, #100]	; (8014568 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 8014502:	4413      	add	r3, r2
 8014504:	603b      	str	r3, [r7, #0]
 8014506:	4f19      	ldr	r7, [pc, #100]	; (801456c <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 8014508:	2300      	movs	r3, #0
 801450a:	803b      	strh	r3, [r7, #0]
 801450c:	4f18      	ldr	r7, [pc, #96]	; (8014570 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 801450e:	683f      	ldr	r7, [r7, #0]
 8014510:	1aba      	subs	r2, r7, r2
 8014512:	4f18      	ldr	r7, [pc, #96]	; (8014574 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 8014514:	603a      	str	r2, [r7, #0]
 8014516:	4a18      	ldr	r2, [pc, #96]	; (8014578 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 8014518:	469c      	mov	ip, r3
 801451a:	8013      	strh	r3, [r2, #0]
 801451c:	f64f 77ff 	movw	r7, #65535	; 0xffff
 8014520:	428b      	cmp	r3, r1
 8014522:	d10d      	bne.n	8014540 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 8014524:	882d      	ldrh	r5, [r5, #0]
 8014526:	6830      	ldr	r0, [r6, #0]
 8014528:	2300      	movs	r3, #0
 801452a:	240e      	movs	r4, #14
 801452c:	429d      	cmp	r5, r3
 801452e:	d90f      	bls.n	8014550 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8014530:	fb04 0203 	mla	r2, r4, r3, r0
 8014534:	3301      	adds	r3, #1
 8014536:	7b11      	ldrb	r1, [r2, #12]
 8014538:	f36f 1145 	bfc	r1, #5, #1
 801453c:	7311      	strb	r1, [r2, #12]
 801453e:	e7f5      	b.n	801452c <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 8014540:	6822      	ldr	r2, [r4, #0]
 8014542:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 8014546:	6802      	ldr	r2, [r0, #0]
 8014548:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 801454c:	3301      	adds	r3, #1
 801454e:	e7e7      	b.n	8014520 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 8014550:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8014552:	bf00      	nop
 8014554:	20015670 	.word	0x20015670
 8014558:	2001568c 	.word	0x2001568c
 801455c:	20015690 	.word	0x20015690
 8014560:	20015684 	.word	0x20015684
 8014564:	20015674 	.word	0x20015674
 8014568:	2001567c 	.word	0x2001567c
 801456c:	2001568e 	.word	0x2001568e
 8014570:	20015678 	.word	0x20015678
 8014574:	20015688 	.word	0x20015688
 8014578:	20015680 	.word	0x20015680

0801457c <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 801457c:	4b06      	ldr	r3, [pc, #24]	; (8014598 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 801457e:	681b      	ldr	r3, [r3, #0]
 8014580:	b943      	cbnz	r3, 8014594 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8014582:	b139      	cbz	r1, 8014594 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8014584:	4b05      	ldr	r3, [pc, #20]	; (801459c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 8014586:	801a      	strh	r2, [r3, #0]
 8014588:	4b05      	ldr	r3, [pc, #20]	; (80145a0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 801458a:	6019      	str	r1, [r3, #0]
 801458c:	4b05      	ldr	r3, [pc, #20]	; (80145a4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 801458e:	6018      	str	r0, [r3, #0]
 8014590:	f7ff bf96 	b.w	80144c0 <_ZN8touchgfx6Bitmap10clearCacheEv>
 8014594:	4770      	bx	lr
 8014596:	bf00      	nop
 8014598:	2001567c 	.word	0x2001567c
 801459c:	20015690 	.word	0x20015690
 80145a0:	20015678 	.word	0x20015678
 80145a4:	20015670 	.word	0x20015670

080145a8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 80145a8:	b470      	push	{r4, r5, r6}
 80145aa:	4c07      	ldr	r4, [pc, #28]	; (80145c8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 80145ac:	6826      	ldr	r6, [r4, #0]
 80145ae:	4605      	mov	r5, r0
 80145b0:	4610      	mov	r0, r2
 80145b2:	9a03      	ldr	r2, [sp, #12]
 80145b4:	b936      	cbnz	r6, 80145c4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 80145b6:	6025      	str	r5, [r4, #0]
 80145b8:	4c04      	ldr	r4, [pc, #16]	; (80145cc <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 80145ba:	8021      	strh	r1, [r4, #0]
 80145bc:	bc70      	pop	{r4, r5, r6}
 80145be:	4619      	mov	r1, r3
 80145c0:	f7ff bfdc 	b.w	801457c <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 80145c4:	bc70      	pop	{r4, r5, r6}
 80145c6:	4770      	bx	lr
 80145c8:	20015694 	.word	0x20015694
 80145cc:	2001568c 	.word	0x2001568c

080145d0 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 80145d0:	4a12      	ldr	r2, [pc, #72]	; (801461c <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 80145d2:	8803      	ldrh	r3, [r0, #0]
 80145d4:	8812      	ldrh	r2, [r2, #0]
 80145d6:	4293      	cmp	r3, r2
 80145d8:	d207      	bcs.n	80145ea <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 80145da:	4a11      	ldr	r2, [pc, #68]	; (8014620 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 80145dc:	6812      	ldr	r2, [r2, #0]
 80145de:	2114      	movs	r1, #20
 80145e0:	fb01 2303 	mla	r3, r1, r3, r2
 80145e4:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 80145e8:	4770      	bx	lr
 80145ea:	490e      	ldr	r1, [pc, #56]	; (8014624 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 80145ec:	8809      	ldrh	r1, [r1, #0]
 80145ee:	4411      	add	r1, r2
 80145f0:	428b      	cmp	r3, r1
 80145f2:	da04      	bge.n	80145fe <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 80145f4:	1a9b      	subs	r3, r3, r2
 80145f6:	4a0c      	ldr	r2, [pc, #48]	; (8014628 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 80145f8:	210e      	movs	r1, #14
 80145fa:	6812      	ldr	r2, [r2, #0]
 80145fc:	e7f0      	b.n	80145e0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 80145fe:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8014602:	4293      	cmp	r3, r2
 8014604:	d108      	bne.n	8014618 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 8014606:	4b09      	ldr	r3, [pc, #36]	; (801462c <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 8014608:	781b      	ldrb	r3, [r3, #0]
 801460a:	b91b      	cbnz	r3, 8014614 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 801460c:	4b08      	ldr	r3, [pc, #32]	; (8014630 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 801460e:	f9b3 0000 	ldrsh.w	r0, [r3]
 8014612:	4770      	bx	lr
 8014614:	4b07      	ldr	r3, [pc, #28]	; (8014634 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 8014616:	e7fa      	b.n	801460e <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 8014618:	2000      	movs	r0, #0
 801461a:	4770      	bx	lr
 801461c:	2001568c 	.word	0x2001568c
 8014620:	20015694 	.word	0x20015694
 8014624:	20015690 	.word	0x20015690
 8014628:	20015674 	.word	0x20015674
 801462c:	200155fc 	.word	0x200155fc
 8014630:	200155fe 	.word	0x200155fe
 8014634:	20015600 	.word	0x20015600

08014638 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 8014638:	4a12      	ldr	r2, [pc, #72]	; (8014684 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 801463a:	8803      	ldrh	r3, [r0, #0]
 801463c:	8812      	ldrh	r2, [r2, #0]
 801463e:	4293      	cmp	r3, r2
 8014640:	d207      	bcs.n	8014652 <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 8014642:	4a11      	ldr	r2, [pc, #68]	; (8014688 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 8014644:	6812      	ldr	r2, [r2, #0]
 8014646:	2114      	movs	r1, #20
 8014648:	fb01 2303 	mla	r3, r1, r3, r2
 801464c:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 8014650:	4770      	bx	lr
 8014652:	490e      	ldr	r1, [pc, #56]	; (801468c <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 8014654:	8809      	ldrh	r1, [r1, #0]
 8014656:	4411      	add	r1, r2
 8014658:	428b      	cmp	r3, r1
 801465a:	da04      	bge.n	8014666 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 801465c:	1a9b      	subs	r3, r3, r2
 801465e:	4a0c      	ldr	r2, [pc, #48]	; (8014690 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 8014660:	210e      	movs	r1, #14
 8014662:	6812      	ldr	r2, [r2, #0]
 8014664:	e7f0      	b.n	8014648 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 8014666:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801466a:	4293      	cmp	r3, r2
 801466c:	d108      	bne.n	8014680 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 801466e:	4b09      	ldr	r3, [pc, #36]	; (8014694 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 8014670:	781b      	ldrb	r3, [r3, #0]
 8014672:	b91b      	cbnz	r3, 801467c <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 8014674:	4b08      	ldr	r3, [pc, #32]	; (8014698 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 8014676:	f9b3 0000 	ldrsh.w	r0, [r3]
 801467a:	4770      	bx	lr
 801467c:	4b07      	ldr	r3, [pc, #28]	; (801469c <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 801467e:	e7fa      	b.n	8014676 <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 8014680:	2000      	movs	r0, #0
 8014682:	4770      	bx	lr
 8014684:	2001568c 	.word	0x2001568c
 8014688:	20015694 	.word	0x20015694
 801468c:	20015690 	.word	0x20015690
 8014690:	20015674 	.word	0x20015674
 8014694:	200155fc 	.word	0x200155fc
 8014698:	20015600 	.word	0x20015600
 801469c:	200155fe 	.word	0x200155fe

080146a0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 80146a0:	b510      	push	{r4, lr}
 80146a2:	4a1f      	ldr	r2, [pc, #124]	; (8014720 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
 80146a4:	880b      	ldrh	r3, [r1, #0]
 80146a6:	8812      	ldrh	r2, [r2, #0]
 80146a8:	4293      	cmp	r3, r2
 80146aa:	d213      	bcs.n	80146d4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 80146ac:	4a1d      	ldr	r2, [pc, #116]	; (8014724 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
 80146ae:	6812      	ldr	r2, [r2, #0]
 80146b0:	2114      	movs	r1, #20
 80146b2:	fb01 2303 	mla	r3, r1, r3, r2
 80146b6:	8a1a      	ldrh	r2, [r3, #16]
 80146b8:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 80146bc:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 80146c0:	8a5b      	ldrh	r3, [r3, #18]
 80146c2:	8004      	strh	r4, [r0, #0]
 80146c4:	f3c2 020c 	ubfx	r2, r2, #0, #13
 80146c8:	f3c3 030c 	ubfx	r3, r3, #0, #13
 80146cc:	8041      	strh	r1, [r0, #2]
 80146ce:	8082      	strh	r2, [r0, #4]
 80146d0:	80c3      	strh	r3, [r0, #6]
 80146d2:	e00e      	b.n	80146f2 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 80146d4:	4914      	ldr	r1, [pc, #80]	; (8014728 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
 80146d6:	8809      	ldrh	r1, [r1, #0]
 80146d8:	4411      	add	r1, r2
 80146da:	428b      	cmp	r3, r1
 80146dc:	da0a      	bge.n	80146f4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
 80146de:	1a9b      	subs	r3, r3, r2
 80146e0:	4a12      	ldr	r2, [pc, #72]	; (801472c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 80146e2:	6812      	ldr	r2, [r2, #0]
 80146e4:	210e      	movs	r1, #14
 80146e6:	fb01 2303 	mla	r3, r1, r3, r2
 80146ea:	681a      	ldr	r2, [r3, #0]
 80146ec:	6002      	str	r2, [r0, #0]
 80146ee:	685a      	ldr	r2, [r3, #4]
 80146f0:	6042      	str	r2, [r0, #4]
 80146f2:	bd10      	pop	{r4, pc}
 80146f4:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80146f8:	4293      	cmp	r3, r2
 80146fa:	d10b      	bne.n	8014714 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
 80146fc:	4b0c      	ldr	r3, [pc, #48]	; (8014730 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 80146fe:	f9b3 1000 	ldrsh.w	r1, [r3]
 8014702:	4b0c      	ldr	r3, [pc, #48]	; (8014734 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 8014704:	8081      	strh	r1, [r0, #4]
 8014706:	f9b3 2000 	ldrsh.w	r2, [r3]
 801470a:	80c2      	strh	r2, [r0, #6]
 801470c:	2300      	movs	r3, #0
 801470e:	8003      	strh	r3, [r0, #0]
 8014710:	8043      	strh	r3, [r0, #2]
 8014712:	e7ee      	b.n	80146f2 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 8014714:	2300      	movs	r3, #0
 8014716:	8003      	strh	r3, [r0, #0]
 8014718:	8043      	strh	r3, [r0, #2]
 801471a:	8083      	strh	r3, [r0, #4]
 801471c:	e7d8      	b.n	80146d0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 801471e:	bf00      	nop
 8014720:	2001568c 	.word	0x2001568c
 8014724:	20015694 	.word	0x20015694
 8014728:	20015690 	.word	0x20015690
 801472c:	20015674 	.word	0x20015674
 8014730:	200155f8 	.word	0x200155f8
 8014734:	200155fa 	.word	0x200155fa

08014738 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 8014738:	4a17      	ldr	r2, [pc, #92]	; (8014798 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 801473a:	8803      	ldrh	r3, [r0, #0]
 801473c:	8812      	ldrh	r2, [r2, #0]
 801473e:	4293      	cmp	r3, r2
 8014740:	d213      	bcs.n	801476a <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 8014742:	4a16      	ldr	r2, [pc, #88]	; (801479c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 8014744:	6812      	ldr	r2, [r2, #0]
 8014746:	2114      	movs	r1, #20
 8014748:	fb01 2303 	mla	r3, r1, r3, r2
 801474c:	8a1a      	ldrh	r2, [r3, #16]
 801474e:	8919      	ldrh	r1, [r3, #8]
 8014750:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8014754:	428a      	cmp	r2, r1
 8014756:	db1d      	blt.n	8014794 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8014758:	8a58      	ldrh	r0, [r3, #18]
 801475a:	f3c0 000c 	ubfx	r0, r0, #0, #13
 801475e:	895b      	ldrh	r3, [r3, #10]
 8014760:	4298      	cmp	r0, r3
 8014762:	bfac      	ite	ge
 8014764:	2000      	movge	r0, #0
 8014766:	2001      	movlt	r0, #1
 8014768:	4770      	bx	lr
 801476a:	490d      	ldr	r1, [pc, #52]	; (80147a0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 801476c:	8809      	ldrh	r1, [r1, #0]
 801476e:	4411      	add	r1, r2
 8014770:	428b      	cmp	r3, r1
 8014772:	da0d      	bge.n	8014790 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 8014774:	1a9b      	subs	r3, r3, r2
 8014776:	4a0b      	ldr	r2, [pc, #44]	; (80147a4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 8014778:	6812      	ldr	r2, [r2, #0]
 801477a:	210e      	movs	r1, #14
 801477c:	fb01 2303 	mla	r3, r1, r3, r2
 8014780:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 8014784:	891a      	ldrh	r2, [r3, #8]
 8014786:	4291      	cmp	r1, r2
 8014788:	db04      	blt.n	8014794 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 801478a:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 801478e:	e7e6      	b.n	801475e <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 8014790:	2000      	movs	r0, #0
 8014792:	4770      	bx	lr
 8014794:	2001      	movs	r0, #1
 8014796:	4770      	bx	lr
 8014798:	2001568c 	.word	0x2001568c
 801479c:	20015694 	.word	0x20015694
 80147a0:	20015690 	.word	0x20015690
 80147a4:	20015674 	.word	0x20015674

080147a8 <_ZNK8touchgfx6Bitmap7getDataEv>:
 80147a8:	4a12      	ldr	r2, [pc, #72]	; (80147f4 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 80147aa:	8803      	ldrh	r3, [r0, #0]
 80147ac:	8811      	ldrh	r1, [r2, #0]
 80147ae:	428b      	cmp	r3, r1
 80147b0:	d20b      	bcs.n	80147ca <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 80147b2:	4a11      	ldr	r2, [pc, #68]	; (80147f8 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 80147b4:	6812      	ldr	r2, [r2, #0]
 80147b6:	b112      	cbz	r2, 80147be <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 80147b8:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 80147bc:	b9c0      	cbnz	r0, 80147f0 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 80147be:	4a0f      	ldr	r2, [pc, #60]	; (80147fc <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 80147c0:	6811      	ldr	r1, [r2, #0]
 80147c2:	2214      	movs	r2, #20
 80147c4:	4353      	muls	r3, r2
 80147c6:	58c8      	ldr	r0, [r1, r3]
 80147c8:	4770      	bx	lr
 80147ca:	4a0d      	ldr	r2, [pc, #52]	; (8014800 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 80147cc:	8812      	ldrh	r2, [r2, #0]
 80147ce:	440a      	add	r2, r1
 80147d0:	4293      	cmp	r3, r2
 80147d2:	da04      	bge.n	80147de <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 80147d4:	4a08      	ldr	r2, [pc, #32]	; (80147f8 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 80147d6:	6812      	ldr	r2, [r2, #0]
 80147d8:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 80147dc:	4770      	bx	lr
 80147de:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80147e2:	4293      	cmp	r3, r2
 80147e4:	d103      	bne.n	80147ee <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 80147e6:	4b07      	ldr	r3, [pc, #28]	; (8014804 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 80147e8:	681b      	ldr	r3, [r3, #0]
 80147ea:	6c58      	ldr	r0, [r3, #68]	; 0x44
 80147ec:	4770      	bx	lr
 80147ee:	2000      	movs	r0, #0
 80147f0:	4770      	bx	lr
 80147f2:	bf00      	nop
 80147f4:	2001568c 	.word	0x2001568c
 80147f8:	20015670 	.word	0x20015670
 80147fc:	20015694 	.word	0x20015694
 8014800:	20015690 	.word	0x20015690
 8014804:	20015604 	.word	0x20015604

08014808 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 8014808:	4b24      	ldr	r3, [pc, #144]	; (801489c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 801480a:	8802      	ldrh	r2, [r0, #0]
 801480c:	8818      	ldrh	r0, [r3, #0]
 801480e:	4282      	cmp	r2, r0
 8014810:	d221      	bcs.n	8014856 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 8014812:	4b23      	ldr	r3, [pc, #140]	; (80148a0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 8014814:	6819      	ldr	r1, [r3, #0]
 8014816:	2314      	movs	r3, #20
 8014818:	fb03 1302 	mla	r3, r3, r2, r1
 801481c:	6858      	ldr	r0, [r3, #4]
 801481e:	2800      	cmp	r0, #0
 8014820:	d03a      	beq.n	8014898 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8014822:	4920      	ldr	r1, [pc, #128]	; (80148a4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8014824:	6809      	ldr	r1, [r1, #0]
 8014826:	2900      	cmp	r1, #0
 8014828:	d036      	beq.n	8014898 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801482a:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 801482e:	2900      	cmp	r1, #0
 8014830:	d032      	beq.n	8014898 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8014832:	891a      	ldrh	r2, [r3, #8]
 8014834:	8958      	ldrh	r0, [r3, #10]
 8014836:	4350      	muls	r0, r2
 8014838:	7c5a      	ldrb	r2, [r3, #17]
 801483a:	7cdb      	ldrb	r3, [r3, #19]
 801483c:	0952      	lsrs	r2, r2, #5
 801483e:	f3c3 1342 	ubfx	r3, r3, #5, #3
 8014842:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8014846:	2b0b      	cmp	r3, #11
 8014848:	bf18      	it	ne
 801484a:	0040      	lslne	r0, r0, #1
 801484c:	3003      	adds	r0, #3
 801484e:	f020 0003 	bic.w	r0, r0, #3
 8014852:	4408      	add	r0, r1
 8014854:	4770      	bx	lr
 8014856:	4b14      	ldr	r3, [pc, #80]	; (80148a8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 8014858:	881b      	ldrh	r3, [r3, #0]
 801485a:	4403      	add	r3, r0
 801485c:	429a      	cmp	r2, r3
 801485e:	da1a      	bge.n	8014896 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8014860:	4b12      	ldr	r3, [pc, #72]	; (80148ac <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 8014862:	681b      	ldr	r3, [r3, #0]
 8014864:	1a10      	subs	r0, r2, r0
 8014866:	210e      	movs	r1, #14
 8014868:	fb01 3000 	mla	r0, r1, r0, r3
 801486c:	7b03      	ldrb	r3, [r0, #12]
 801486e:	f003 031f 	and.w	r3, r3, #31
 8014872:	2b0b      	cmp	r3, #11
 8014874:	d10b      	bne.n	801488e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 8014876:	8903      	ldrh	r3, [r0, #8]
 8014878:	8940      	ldrh	r0, [r0, #10]
 801487a:	4358      	muls	r0, r3
 801487c:	4b09      	ldr	r3, [pc, #36]	; (80148a4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 801487e:	6819      	ldr	r1, [r3, #0]
 8014880:	3003      	adds	r0, #3
 8014882:	f020 0303 	bic.w	r3, r0, #3
 8014886:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 801488a:	4418      	add	r0, r3
 801488c:	4770      	bx	lr
 801488e:	2b0d      	cmp	r3, #13
 8014890:	d101      	bne.n	8014896 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8014892:	300d      	adds	r0, #13
 8014894:	4770      	bx	lr
 8014896:	2000      	movs	r0, #0
 8014898:	4770      	bx	lr
 801489a:	bf00      	nop
 801489c:	2001568c 	.word	0x2001568c
 80148a0:	20015694 	.word	0x20015694
 80148a4:	20015670 	.word	0x20015670
 80148a8:	20015690 	.word	0x20015690
 80148ac:	20015674 	.word	0x20015674

080148b0 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 80148b0:	b510      	push	{r4, lr}
 80148b2:	4a17      	ldr	r2, [pc, #92]	; (8014910 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 80148b4:	8803      	ldrh	r3, [r0, #0]
 80148b6:	8812      	ldrh	r2, [r2, #0]
 80148b8:	4293      	cmp	r3, r2
 80148ba:	d20c      	bcs.n	80148d6 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 80148bc:	4a15      	ldr	r2, [pc, #84]	; (8014914 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 80148be:	6812      	ldr	r2, [r2, #0]
 80148c0:	2114      	movs	r1, #20
 80148c2:	fb01 2303 	mla	r3, r1, r3, r2
 80148c6:	7c58      	ldrb	r0, [r3, #17]
 80148c8:	0942      	lsrs	r2, r0, #5
 80148ca:	7cd8      	ldrb	r0, [r3, #19]
 80148cc:	f3c0 1042 	ubfx	r0, r0, #5, #3
 80148d0:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 80148d4:	bd10      	pop	{r4, pc}
 80148d6:	4910      	ldr	r1, [pc, #64]	; (8014918 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 80148d8:	8809      	ldrh	r1, [r1, #0]
 80148da:	4411      	add	r1, r2
 80148dc:	428b      	cmp	r3, r1
 80148de:	da09      	bge.n	80148f4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 80148e0:	1a9b      	subs	r3, r3, r2
 80148e2:	4a0e      	ldr	r2, [pc, #56]	; (801491c <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 80148e4:	6812      	ldr	r2, [r2, #0]
 80148e6:	210e      	movs	r1, #14
 80148e8:	fb01 2303 	mla	r3, r1, r3, r2
 80148ec:	7b18      	ldrb	r0, [r3, #12]
 80148ee:	f000 001f 	and.w	r0, r0, #31
 80148f2:	e7ef      	b.n	80148d4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 80148f4:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80148f8:	4293      	cmp	r3, r2
 80148fa:	d106      	bne.n	801490a <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 80148fc:	f7ed ff64 	bl	80027c8 <_ZN8touchgfx3HAL3lcdEv>
 8014900:	6803      	ldr	r3, [r0, #0]
 8014902:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014906:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014908:	4718      	bx	r3
 801490a:	2000      	movs	r0, #0
 801490c:	e7e2      	b.n	80148d4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 801490e:	bf00      	nop
 8014910:	2001568c 	.word	0x2001568c
 8014914:	20015694 	.word	0x20015694
 8014918:	20015690 	.word	0x20015690
 801491c:	20015674 	.word	0x20015674

08014920 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 8014920:	2010      	movs	r0, #16
 8014922:	4770      	bx	lr

08014924 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 8014924:	2000      	movs	r0, #0
 8014926:	4770      	bx	lr

08014928 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 8014928:	4b02      	ldr	r3, [pc, #8]	; (8014934 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 801492a:	8818      	ldrh	r0, [r3, #0]
 801492c:	0040      	lsls	r0, r0, #1
 801492e:	b280      	uxth	r0, r0
 8014930:	4770      	bx	lr
 8014932:	bf00      	nop
 8014934:	200155fe 	.word	0x200155fe

08014938 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 8014938:	2bff      	cmp	r3, #255	; 0xff
 801493a:	d050      	beq.n	80149de <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 801493c:	2a0b      	cmp	r2, #11
 801493e:	d04a      	beq.n	80149d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8014940:	d80e      	bhi.n	8014960 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 8014942:	2a03      	cmp	r2, #3
 8014944:	d03f      	beq.n	80149c6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 8014946:	d804      	bhi.n	8014952 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 8014948:	2a01      	cmp	r2, #1
 801494a:	d03e      	beq.n	80149ca <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 801494c:	d93f      	bls.n	80149ce <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 801494e:	6b80      	ldr	r0, [r0, #56]	; 0x38
 8014950:	4770      	bx	lr
 8014952:	2a09      	cmp	r2, #9
 8014954:	d03f      	beq.n	80149d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8014956:	d83c      	bhi.n	80149d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8014958:	2a08      	cmp	r2, #8
 801495a:	d03a      	beq.n	80149d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 801495c:	2000      	movs	r0, #0
 801495e:	4770      	bx	lr
 8014960:	2a2f      	cmp	r2, #47	; 0x2f
 8014962:	d024      	beq.n	80149ae <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 8014964:	d80d      	bhi.n	8014982 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 8014966:	2a2d      	cmp	r2, #45	; 0x2d
 8014968:	d014      	beq.n	8014994 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 801496a:	d826      	bhi.n	80149ba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 801496c:	2a2c      	cmp	r2, #44	; 0x2c
 801496e:	d1f5      	bne.n	801495c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014970:	684b      	ldr	r3, [r1, #4]
 8014972:	781b      	ldrb	r3, [r3, #0]
 8014974:	2b01      	cmp	r3, #1
 8014976:	d018      	beq.n	80149aa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 8014978:	d323      	bcc.n	80149c2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 801497a:	2b02      	cmp	r3, #2
 801497c:	d1ee      	bne.n	801495c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801497e:	6880      	ldr	r0, [r0, #8]
 8014980:	4770      	bx	lr
 8014982:	2a31      	cmp	r2, #49	; 0x31
 8014984:	d004      	beq.n	8014990 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 8014986:	d328      	bcc.n	80149da <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8014988:	2a32      	cmp	r2, #50	; 0x32
 801498a:	d026      	beq.n	80149da <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 801498c:	2a33      	cmp	r2, #51	; 0x33
 801498e:	d1e5      	bne.n	801495c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014990:	6f00      	ldr	r0, [r0, #112]	; 0x70
 8014992:	4770      	bx	lr
 8014994:	684b      	ldr	r3, [r1, #4]
 8014996:	781b      	ldrb	r3, [r3, #0]
 8014998:	2b01      	cmp	r3, #1
 801499a:	d004      	beq.n	80149a6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 801499c:	d30b      	bcc.n	80149b6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801499e:	2b02      	cmp	r3, #2
 80149a0:	d1dc      	bne.n	801495c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80149a2:	6900      	ldr	r0, [r0, #16]
 80149a4:	4770      	bx	lr
 80149a6:	6a00      	ldr	r0, [r0, #32]
 80149a8:	4770      	bx	lr
 80149aa:	6980      	ldr	r0, [r0, #24]
 80149ac:	4770      	bx	lr
 80149ae:	684b      	ldr	r3, [r1, #4]
 80149b0:	781b      	ldrb	r3, [r3, #0]
 80149b2:	2b00      	cmp	r3, #0
 80149b4:	d1d2      	bne.n	801495c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80149b6:	6b00      	ldr	r0, [r0, #48]	; 0x30
 80149b8:	4770      	bx	lr
 80149ba:	684b      	ldr	r3, [r1, #4]
 80149bc:	781b      	ldrb	r3, [r3, #0]
 80149be:	2b00      	cmp	r3, #0
 80149c0:	d1cc      	bne.n	801495c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80149c2:	6a80      	ldr	r0, [r0, #40]	; 0x28
 80149c4:	4770      	bx	lr
 80149c6:	6c80      	ldr	r0, [r0, #72]	; 0x48
 80149c8:	4770      	bx	lr
 80149ca:	6d00      	ldr	r0, [r0, #80]	; 0x50
 80149cc:	4770      	bx	lr
 80149ce:	6c00      	ldr	r0, [r0, #64]	; 0x40
 80149d0:	4770      	bx	lr
 80149d2:	6d80      	ldr	r0, [r0, #88]	; 0x58
 80149d4:	4770      	bx	lr
 80149d6:	6e00      	ldr	r0, [r0, #96]	; 0x60
 80149d8:	4770      	bx	lr
 80149da:	6e80      	ldr	r0, [r0, #104]	; 0x68
 80149dc:	4770      	bx	lr
 80149de:	2a0b      	cmp	r2, #11
 80149e0:	d049      	beq.n	8014a76 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 80149e2:	d80e      	bhi.n	8014a02 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 80149e4:	2a03      	cmp	r2, #3
 80149e6:	d040      	beq.n	8014a6a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 80149e8:	d804      	bhi.n	80149f4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 80149ea:	2a01      	cmp	r2, #1
 80149ec:	d03f      	beq.n	8014a6e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 80149ee:	d940      	bls.n	8014a72 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 80149f0:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 80149f2:	4770      	bx	lr
 80149f4:	2a09      	cmp	r2, #9
 80149f6:	d03e      	beq.n	8014a76 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 80149f8:	d801      	bhi.n	80149fe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 80149fa:	2a08      	cmp	r2, #8
 80149fc:	d1ae      	bne.n	801495c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80149fe:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 8014a00:	4770      	bx	lr
 8014a02:	2a2f      	cmp	r2, #47	; 0x2f
 8014a04:	d024      	beq.n	8014a50 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 8014a06:	d80d      	bhi.n	8014a24 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 8014a08:	2a2d      	cmp	r2, #45	; 0x2d
 8014a0a:	d014      	beq.n	8014a36 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 8014a0c:	d826      	bhi.n	8014a5c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 8014a0e:	2a2c      	cmp	r2, #44	; 0x2c
 8014a10:	d1a4      	bne.n	801495c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014a12:	684b      	ldr	r3, [r1, #4]
 8014a14:	781b      	ldrb	r3, [r3, #0]
 8014a16:	2b01      	cmp	r3, #1
 8014a18:	d018      	beq.n	8014a4c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 8014a1a:	d324      	bcc.n	8014a66 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 8014a1c:	2b02      	cmp	r3, #2
 8014a1e:	d19d      	bne.n	801495c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014a20:	68c0      	ldr	r0, [r0, #12]
 8014a22:	4770      	bx	lr
 8014a24:	2a31      	cmp	r2, #49	; 0x31
 8014a26:	d004      	beq.n	8014a32 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 8014a28:	d327      	bcc.n	8014a7a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8014a2a:	2a32      	cmp	r2, #50	; 0x32
 8014a2c:	d025      	beq.n	8014a7a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8014a2e:	2a33      	cmp	r2, #51	; 0x33
 8014a30:	d194      	bne.n	801495c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014a32:	6f40      	ldr	r0, [r0, #116]	; 0x74
 8014a34:	4770      	bx	lr
 8014a36:	684b      	ldr	r3, [r1, #4]
 8014a38:	781b      	ldrb	r3, [r3, #0]
 8014a3a:	2b01      	cmp	r3, #1
 8014a3c:	d004      	beq.n	8014a48 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 8014a3e:	d30b      	bcc.n	8014a58 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 8014a40:	2b02      	cmp	r3, #2
 8014a42:	d18b      	bne.n	801495c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014a44:	6940      	ldr	r0, [r0, #20]
 8014a46:	4770      	bx	lr
 8014a48:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8014a4a:	4770      	bx	lr
 8014a4c:	69c0      	ldr	r0, [r0, #28]
 8014a4e:	4770      	bx	lr
 8014a50:	684b      	ldr	r3, [r1, #4]
 8014a52:	781b      	ldrb	r3, [r3, #0]
 8014a54:	2b00      	cmp	r3, #0
 8014a56:	d181      	bne.n	801495c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014a58:	6b40      	ldr	r0, [r0, #52]	; 0x34
 8014a5a:	4770      	bx	lr
 8014a5c:	684b      	ldr	r3, [r1, #4]
 8014a5e:	781b      	ldrb	r3, [r3, #0]
 8014a60:	2b00      	cmp	r3, #0
 8014a62:	f47f af7b 	bne.w	801495c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014a66:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 8014a68:	4770      	bx	lr
 8014a6a:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8014a6c:	4770      	bx	lr
 8014a6e:	6d40      	ldr	r0, [r0, #84]	; 0x54
 8014a70:	4770      	bx	lr
 8014a72:	6c40      	ldr	r0, [r0, #68]	; 0x44
 8014a74:	4770      	bx	lr
 8014a76:	6e40      	ldr	r0, [r0, #100]	; 0x64
 8014a78:	4770      	bx	lr
 8014a7a:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 8014a7c:	4770      	bx	lr

08014a7e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014a7e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014a82:	b087      	sub	sp, #28
 8014a84:	9815      	ldr	r0, [sp, #84]	; 0x54
 8014a86:	9205      	str	r2, [sp, #20]
 8014a88:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8014a8c:	9202      	str	r2, [sp, #8]
 8014a8e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8014a92:	9101      	str	r1, [sp, #4]
 8014a94:	6841      	ldr	r1, [r0, #4]
 8014a96:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 8014a9a:	fb01 2404 	mla	r4, r1, r4, r2
 8014a9e:	6802      	ldr	r2, [r0, #0]
 8014aa0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8014aa4:	f8de 2000 	ldr.w	r2, [lr]
 8014aa8:	9203      	str	r2, [sp, #12]
 8014aaa:	f8de 2004 	ldr.w	r2, [lr, #4]
 8014aae:	3204      	adds	r2, #4
 8014ab0:	9204      	str	r2, [sp, #16]
 8014ab2:	9a02      	ldr	r2, [sp, #8]
 8014ab4:	43d6      	mvns	r6, r2
 8014ab6:	b2f6      	uxtb	r6, r6
 8014ab8:	9a01      	ldr	r2, [sp, #4]
 8014aba:	2a00      	cmp	r2, #0
 8014abc:	dc03      	bgt.n	8014ac6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8014abe:	9a05      	ldr	r2, [sp, #20]
 8014ac0:	2a00      	cmp	r2, #0
 8014ac2:	f340 8129 	ble.w	8014d18 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8014ac6:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8014ac8:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8014acc:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8014ad0:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8014ad4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8014ad6:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8014ada:	2b00      	cmp	r3, #0
 8014adc:	dd0e      	ble.n	8014afc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8014ade:	1408      	asrs	r0, r1, #16
 8014ae0:	d405      	bmi.n	8014aee <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8014ae2:	4560      	cmp	r0, ip
 8014ae4:	da03      	bge.n	8014aee <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8014ae6:	1410      	asrs	r0, r2, #16
 8014ae8:	d401      	bmi.n	8014aee <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8014aea:	42b8      	cmp	r0, r7
 8014aec:	db07      	blt.n	8014afe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8014aee:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8014af0:	4401      	add	r1, r0
 8014af2:	9814      	ldr	r0, [sp, #80]	; 0x50
 8014af4:	3b01      	subs	r3, #1
 8014af6:	4402      	add	r2, r0
 8014af8:	3402      	adds	r4, #2
 8014afa:	e7ee      	b.n	8014ada <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8014afc:	d071      	beq.n	8014be2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8014afe:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8014b00:	1e58      	subs	r0, r3, #1
 8014b02:	fb05 1500 	mla	r5, r5, r0, r1
 8014b06:	142d      	asrs	r5, r5, #16
 8014b08:	d45f      	bmi.n	8014bca <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8014b0a:	4565      	cmp	r5, ip
 8014b0c:	da5d      	bge.n	8014bca <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8014b0e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8014b10:	fb05 2000 	mla	r0, r5, r0, r2
 8014b14:	1400      	asrs	r0, r0, #16
 8014b16:	d458      	bmi.n	8014bca <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8014b18:	42b8      	cmp	r0, r7
 8014b1a:	da56      	bge.n	8014bca <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8014b1c:	f8bd b008 	ldrh.w	fp, [sp, #8]
 8014b20:	4699      	mov	r9, r3
 8014b22:	46a2      	mov	sl, r4
 8014b24:	f1b9 0f00 	cmp.w	r9, #0
 8014b28:	dd57      	ble.n	8014bda <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 8014b2a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8014b2e:	9803      	ldr	r0, [sp, #12]
 8014b30:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8014b34:	140d      	asrs	r5, r1, #16
 8014b36:	fb07 000c 	mla	r0, r7, ip, r0
 8014b3a:	f109 39ff 	add.w	r9, r9, #4294967295
 8014b3e:	5d40      	ldrb	r0, [r0, r5]
 8014b40:	9d04      	ldr	r5, [sp, #16]
 8014b42:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8014b46:	f8ba 5000 	ldrh.w	r5, [sl]
 8014b4a:	122f      	asrs	r7, r5, #8
 8014b4c:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8014b50:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8014b54:	fb17 f706 	smulbb	r7, r7, r6
 8014b58:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8014b5c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8014b60:	00ed      	lsls	r5, r5, #3
 8014b62:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8014b66:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8014b6a:	10c7      	asrs	r7, r0, #3
 8014b6c:	b2ed      	uxtb	r5, r5
 8014b6e:	00c0      	lsls	r0, r0, #3
 8014b70:	fb18 f806 	smulbb	r8, r8, r6
 8014b74:	fb15 f506 	smulbb	r5, r5, r6
 8014b78:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8014b7c:	b2c0      	uxtb	r0, r0
 8014b7e:	fa1f fc8c 	uxth.w	ip, ip
 8014b82:	fb07 870b 	mla	r7, r7, fp, r8
 8014b86:	fb00 500b 	mla	r0, r0, fp, r5
 8014b8a:	b280      	uxth	r0, r0
 8014b8c:	b2bf      	uxth	r7, r7
 8014b8e:	f10c 0501 	add.w	r5, ip, #1
 8014b92:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8014b96:	f107 0801 	add.w	r8, r7, #1
 8014b9a:	1c45      	adds	r5, r0, #1
 8014b9c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8014ba0:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8014ba4:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8014ba6:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8014baa:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8014bae:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8014bb2:	ea45 0c0c 	orr.w	ip, r5, ip
 8014bb6:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8014bba:	4401      	add	r1, r0
 8014bbc:	9814      	ldr	r0, [sp, #80]	; 0x50
 8014bbe:	ea4c 0c08 	orr.w	ip, ip, r8
 8014bc2:	f82a cb02 	strh.w	ip, [sl], #2
 8014bc6:	4402      	add	r2, r0
 8014bc8:	e7ac      	b.n	8014b24 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8014bca:	f8bd a008 	ldrh.w	sl, [sp, #8]
 8014bce:	f04f 0800 	mov.w	r8, #0
 8014bd2:	eb03 0008 	add.w	r0, r3, r8
 8014bd6:	2800      	cmp	r0, #0
 8014bd8:	dc41      	bgt.n	8014c5e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8014bda:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014bde:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014be2:	9b01      	ldr	r3, [sp, #4]
 8014be4:	2b00      	cmp	r3, #0
 8014be6:	f340 8097 	ble.w	8014d18 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8014bea:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014bee:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8014bf2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8014bf6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014bf8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014bfc:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014c00:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014c04:	eef0 6a62 	vmov.f32	s13, s5
 8014c08:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014c0c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014c10:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014c14:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8014c18:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014c1c:	eef0 6a43 	vmov.f32	s13, s6
 8014c20:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014c24:	ee12 2a90 	vmov	r2, s5
 8014c28:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014c2c:	fb92 f3f3 	sdiv	r3, r2, r3
 8014c30:	ee13 2a10 	vmov	r2, s6
 8014c34:	9313      	str	r3, [sp, #76]	; 0x4c
 8014c36:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014c38:	fb92 f3f3 	sdiv	r3, r2, r3
 8014c3c:	9314      	str	r3, [sp, #80]	; 0x50
 8014c3e:	9b01      	ldr	r3, [sp, #4]
 8014c40:	9a05      	ldr	r2, [sp, #20]
 8014c42:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014c46:	3b01      	subs	r3, #1
 8014c48:	9301      	str	r3, [sp, #4]
 8014c4a:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 8014c4e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014c50:	eeb0 3a67 	vmov.f32	s6, s15
 8014c54:	bf08      	it	eq
 8014c56:	4613      	moveq	r3, r2
 8014c58:	eef0 2a47 	vmov.f32	s5, s14
 8014c5c:	e72c      	b.n	8014ab8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8014c5e:	140f      	asrs	r7, r1, #16
 8014c60:	d453      	bmi.n	8014d0a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8014c62:	f8de 5008 	ldr.w	r5, [lr, #8]
 8014c66:	42bd      	cmp	r5, r7
 8014c68:	dd4f      	ble.n	8014d0a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8014c6a:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8014c6e:	d44c      	bmi.n	8014d0a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8014c70:	f8de 000c 	ldr.w	r0, [lr, #12]
 8014c74:	4560      	cmp	r0, ip
 8014c76:	dd48      	ble.n	8014d0a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8014c78:	9803      	ldr	r0, [sp, #12]
 8014c7a:	b22d      	sxth	r5, r5
 8014c7c:	fb0c 0505 	mla	r5, ip, r5, r0
 8014c80:	5de8      	ldrb	r0, [r5, r7]
 8014c82:	9d04      	ldr	r5, [sp, #16]
 8014c84:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8014c88:	f06f 0501 	mvn.w	r5, #1
 8014c8c:	fb05 fb08 	mul.w	fp, r5, r8
 8014c90:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8014c94:	f834 500b 	ldrh.w	r5, [r4, fp]
 8014c98:	122f      	asrs	r7, r5, #8
 8014c9a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8014c9e:	fb17 f706 	smulbb	r7, r7, r6
 8014ca2:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8014ca6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8014caa:	00ed      	lsls	r5, r5, #3
 8014cac:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8014cb0:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8014cb4:	10c7      	asrs	r7, r0, #3
 8014cb6:	b2ed      	uxtb	r5, r5
 8014cb8:	00c0      	lsls	r0, r0, #3
 8014cba:	fb19 f906 	smulbb	r9, r9, r6
 8014cbe:	fb15 f506 	smulbb	r5, r5, r6
 8014cc2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8014cc6:	b2c0      	uxtb	r0, r0
 8014cc8:	fa1f fc8c 	uxth.w	ip, ip
 8014ccc:	fb07 970a 	mla	r7, r7, sl, r9
 8014cd0:	fb00 500a 	mla	r0, r0, sl, r5
 8014cd4:	b2bf      	uxth	r7, r7
 8014cd6:	b280      	uxth	r0, r0
 8014cd8:	f10c 0501 	add.w	r5, ip, #1
 8014cdc:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8014ce0:	f107 0901 	add.w	r9, r7, #1
 8014ce4:	1c45      	adds	r5, r0, #1
 8014ce6:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8014cea:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8014cee:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8014cf2:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8014cf6:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8014cfa:	ea45 0c0c 	orr.w	ip, r5, ip
 8014cfe:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8014d02:	ea4c 0c09 	orr.w	ip, ip, r9
 8014d06:	f824 c00b 	strh.w	ip, [r4, fp]
 8014d0a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8014d0c:	4401      	add	r1, r0
 8014d0e:	9814      	ldr	r0, [sp, #80]	; 0x50
 8014d10:	f108 38ff 	add.w	r8, r8, #4294967295
 8014d14:	4402      	add	r2, r0
 8014d16:	e75c      	b.n	8014bd2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8014d18:	b007      	add	sp, #28
 8014d1a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014d1e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014d1e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014d22:	b085      	sub	sp, #20
 8014d24:	4693      	mov	fp, r2
 8014d26:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8014d28:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8014d2a:	6870      	ldr	r0, [r6, #4]
 8014d2c:	9100      	str	r1, [sp, #0]
 8014d2e:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8014d32:	fb00 2404 	mla	r4, r0, r4, r2
 8014d36:	6832      	ldr	r2, [r6, #0]
 8014d38:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8014d3c:	682a      	ldr	r2, [r5, #0]
 8014d3e:	9201      	str	r2, [sp, #4]
 8014d40:	686a      	ldr	r2, [r5, #4]
 8014d42:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 8014d46:	3204      	adds	r2, #4
 8014d48:	9202      	str	r2, [sp, #8]
 8014d4a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8014d4e:	9a00      	ldr	r2, [sp, #0]
 8014d50:	2a00      	cmp	r2, #0
 8014d52:	dc03      	bgt.n	8014d5c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8014d54:	f1bb 0f00 	cmp.w	fp, #0
 8014d58:	f340 80a0 	ble.w	8014e9c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8014d5c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8014d5e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8014d62:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8014d66:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8014d6a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8014d6c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8014d70:	2b00      	cmp	r3, #0
 8014d72:	dd0c      	ble.n	8014d8e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8014d74:	1406      	asrs	r6, r0, #16
 8014d76:	d405      	bmi.n	8014d84 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8014d78:	454e      	cmp	r6, r9
 8014d7a:	da03      	bge.n	8014d84 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8014d7c:	1416      	asrs	r6, r2, #16
 8014d7e:	d401      	bmi.n	8014d84 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8014d80:	4546      	cmp	r6, r8
 8014d82:	db05      	blt.n	8014d90 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8014d84:	4470      	add	r0, lr
 8014d86:	4462      	add	r2, ip
 8014d88:	3b01      	subs	r3, #1
 8014d8a:	3402      	adds	r4, #2
 8014d8c:	e7f0      	b.n	8014d70 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8014d8e:	d00f      	beq.n	8014db0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8014d90:	1e5e      	subs	r6, r3, #1
 8014d92:	fb0e 0706 	mla	r7, lr, r6, r0
 8014d96:	143f      	asrs	r7, r7, #16
 8014d98:	d541      	bpl.n	8014e1e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 8014d9a:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8014d9e:	4698      	mov	r8, r3
 8014da0:	9603      	str	r6, [sp, #12]
 8014da2:	f1b8 0f00 	cmp.w	r8, #0
 8014da6:	dc59      	bgt.n	8014e5c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8014da8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014dac:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014db0:	9b00      	ldr	r3, [sp, #0]
 8014db2:	2b00      	cmp	r3, #0
 8014db4:	dd72      	ble.n	8014e9c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8014db6:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014dba:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014dbe:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8014dc2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014dc4:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014dc8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014dcc:	eeb0 6a62 	vmov.f32	s12, s5
 8014dd0:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014dd4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014dd8:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014ddc:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8014de0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014de4:	eeb0 6a43 	vmov.f32	s12, s6
 8014de8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014dec:	ee12 2a90 	vmov	r2, s5
 8014df0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014df4:	fb92 fef3 	sdiv	lr, r2, r3
 8014df8:	ee13 2a10 	vmov	r2, s6
 8014dfc:	fb92 fcf3 	sdiv	ip, r2, r3
 8014e00:	9b00      	ldr	r3, [sp, #0]
 8014e02:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014e06:	3b01      	subs	r3, #1
 8014e08:	9300      	str	r3, [sp, #0]
 8014e0a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8014e0e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014e10:	eeb0 3a67 	vmov.f32	s6, s15
 8014e14:	bf08      	it	eq
 8014e16:	465b      	moveq	r3, fp
 8014e18:	eef0 2a47 	vmov.f32	s5, s14
 8014e1c:	e797      	b.n	8014d4e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8014e1e:	454f      	cmp	r7, r9
 8014e20:	dabb      	bge.n	8014d9a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8014e22:	fb0c 2606 	mla	r6, ip, r6, r2
 8014e26:	1436      	asrs	r6, r6, #16
 8014e28:	d4b7      	bmi.n	8014d9a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8014e2a:	4546      	cmp	r6, r8
 8014e2c:	dab5      	bge.n	8014d9a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8014e2e:	461e      	mov	r6, r3
 8014e30:	46a0      	mov	r8, r4
 8014e32:	2e00      	cmp	r6, #0
 8014e34:	ddb8      	ble.n	8014da8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8014e36:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8014e3a:	9901      	ldr	r1, [sp, #4]
 8014e3c:	1417      	asrs	r7, r2, #16
 8014e3e:	ea4f 4920 	mov.w	r9, r0, asr #16
 8014e42:	fb0a 1707 	mla	r7, sl, r7, r1
 8014e46:	9902      	ldr	r1, [sp, #8]
 8014e48:	f817 7009 	ldrb.w	r7, [r7, r9]
 8014e4c:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8014e50:	f828 7b02 	strh.w	r7, [r8], #2
 8014e54:	4470      	add	r0, lr
 8014e56:	4462      	add	r2, ip
 8014e58:	3e01      	subs	r6, #1
 8014e5a:	e7ea      	b.n	8014e32 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8014e5c:	ea5f 4920 	movs.w	r9, r0, asr #16
 8014e60:	d417      	bmi.n	8014e92 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8014e62:	68ae      	ldr	r6, [r5, #8]
 8014e64:	454e      	cmp	r6, r9
 8014e66:	dd14      	ble.n	8014e92 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8014e68:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8014e6c:	d411      	bmi.n	8014e92 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8014e6e:	68ef      	ldr	r7, [r5, #12]
 8014e70:	4557      	cmp	r7, sl
 8014e72:	dd0e      	ble.n	8014e92 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8014e74:	9f01      	ldr	r7, [sp, #4]
 8014e76:	b236      	sxth	r6, r6
 8014e78:	fb0a 7606 	mla	r6, sl, r6, r7
 8014e7c:	9f02      	ldr	r7, [sp, #8]
 8014e7e:	f816 6009 	ldrb.w	r6, [r6, r9]
 8014e82:	f06f 0101 	mvn.w	r1, #1
 8014e86:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8014e8a:	fb01 f608 	mul.w	r6, r1, r8
 8014e8e:	9903      	ldr	r1, [sp, #12]
 8014e90:	538f      	strh	r7, [r1, r6]
 8014e92:	4470      	add	r0, lr
 8014e94:	4462      	add	r2, ip
 8014e96:	f108 38ff 	add.w	r8, r8, #4294967295
 8014e9a:	e782      	b.n	8014da2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8014e9c:	b005      	add	sp, #20
 8014e9e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014ea2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014ea2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014ea6:	b087      	sub	sp, #28
 8014ea8:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8014eaa:	9205      	str	r2, [sp, #20]
 8014eac:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8014eb0:	9203      	str	r2, [sp, #12]
 8014eb2:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 8014eb6:	9102      	str	r1, [sp, #8]
 8014eb8:	6861      	ldr	r1, [r4, #4]
 8014eba:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8014ebe:	fb01 2000 	mla	r0, r1, r0, r2
 8014ec2:	6822      	ldr	r2, [r4, #0]
 8014ec4:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 8014ec8:	9200      	str	r2, [sp, #0]
 8014eca:	f8dc 2000 	ldr.w	r2, [ip]
 8014ece:	9204      	str	r2, [sp, #16]
 8014ed0:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8014ed4:	3204      	adds	r2, #4
 8014ed6:	9201      	str	r2, [sp, #4]
 8014ed8:	9a03      	ldr	r2, [sp, #12]
 8014eda:	43d5      	mvns	r5, r2
 8014edc:	b2ed      	uxtb	r5, r5
 8014ede:	9a02      	ldr	r2, [sp, #8]
 8014ee0:	2a00      	cmp	r2, #0
 8014ee2:	dc03      	bgt.n	8014eec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8014ee4:	9a05      	ldr	r2, [sp, #20]
 8014ee6:	2a00      	cmp	r2, #0
 8014ee8:	f340 812c 	ble.w	8015144 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8014eec:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8014eee:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 8014ef2:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 8014ef6:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8014efa:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8014efc:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8014f00:	2b00      	cmp	r3, #0
 8014f02:	dd10      	ble.n	8014f26 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8014f04:	140c      	asrs	r4, r1, #16
 8014f06:	d405      	bmi.n	8014f14 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8014f08:	4574      	cmp	r4, lr
 8014f0a:	da03      	bge.n	8014f14 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8014f0c:	1414      	asrs	r4, r2, #16
 8014f0e:	d401      	bmi.n	8014f14 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8014f10:	42bc      	cmp	r4, r7
 8014f12:	db09      	blt.n	8014f28 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8014f14:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8014f16:	9800      	ldr	r0, [sp, #0]
 8014f18:	4421      	add	r1, r4
 8014f1a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8014f1c:	3002      	adds	r0, #2
 8014f1e:	4422      	add	r2, r4
 8014f20:	3b01      	subs	r3, #1
 8014f22:	9000      	str	r0, [sp, #0]
 8014f24:	e7ec      	b.n	8014f00 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8014f26:	d071      	beq.n	801500c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 8014f28:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8014f2a:	1e5c      	subs	r4, r3, #1
 8014f2c:	fb06 1604 	mla	r6, r6, r4, r1
 8014f30:	1436      	asrs	r6, r6, #16
 8014f32:	d45d      	bmi.n	8014ff0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8014f34:	4576      	cmp	r6, lr
 8014f36:	da5b      	bge.n	8014ff0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8014f38:	9e14      	ldr	r6, [sp, #80]	; 0x50
 8014f3a:	fb06 2404 	mla	r4, r6, r4, r2
 8014f3e:	1424      	asrs	r4, r4, #16
 8014f40:	d456      	bmi.n	8014ff0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8014f42:	42bc      	cmp	r4, r7
 8014f44:	da54      	bge.n	8014ff0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8014f46:	f8dd 9000 	ldr.w	r9, [sp]
 8014f4a:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 8014f4e:	4698      	mov	r8, r3
 8014f50:	f1b8 0f00 	cmp.w	r8, #0
 8014f54:	dd54      	ble.n	8015000 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8014f56:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8014f5a:	9804      	ldr	r0, [sp, #16]
 8014f5c:	1414      	asrs	r4, r2, #16
 8014f5e:	fb07 0404 	mla	r4, r7, r4, r0
 8014f62:	140e      	asrs	r6, r1, #16
 8014f64:	9801      	ldr	r0, [sp, #4]
 8014f66:	f814 e006 	ldrb.w	lr, [r4, r6]
 8014f6a:	f8b9 4000 	ldrh.w	r4, [r9]
 8014f6e:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8014f72:	eb00 0b0e 	add.w	fp, r0, lr
 8014f76:	1227      	asrs	r7, r4, #8
 8014f78:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8014f7c:	f89b b001 	ldrb.w	fp, [fp, #1]
 8014f80:	f810 e00e 	ldrb.w	lr, [r0, lr]
 8014f84:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8014f86:	fb16 f60a 	smulbb	r6, r6, sl
 8014f8a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8014f8e:	fb07 6705 	mla	r7, r7, r5, r6
 8014f92:	10e6      	asrs	r6, r4, #3
 8014f94:	00e4      	lsls	r4, r4, #3
 8014f96:	b2e4      	uxtb	r4, r4
 8014f98:	fb1b fb0a 	smulbb	fp, fp, sl
 8014f9c:	fb14 f405 	smulbb	r4, r4, r5
 8014fa0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8014fa4:	b2bf      	uxth	r7, r7
 8014fa6:	fb06 b605 	mla	r6, r6, r5, fp
 8014faa:	fb0e 4e0a 	mla	lr, lr, sl, r4
 8014fae:	b2b6      	uxth	r6, r6
 8014fb0:	fa1f fe8e 	uxth.w	lr, lr
 8014fb4:	1c7c      	adds	r4, r7, #1
 8014fb6:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8014fba:	f106 0b01 	add.w	fp, r6, #1
 8014fbe:	f10e 0401 	add.w	r4, lr, #1
 8014fc2:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 8014fc6:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8014fca:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8014fce:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8014fd2:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8014fd6:	4327      	orrs	r7, r4
 8014fd8:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8014fdc:	4401      	add	r1, r0
 8014fde:	9814      	ldr	r0, [sp, #80]	; 0x50
 8014fe0:	ea47 070b 	orr.w	r7, r7, fp
 8014fe4:	f829 7b02 	strh.w	r7, [r9], #2
 8014fe8:	4402      	add	r2, r0
 8014fea:	f108 38ff 	add.w	r8, r8, #4294967295
 8014fee:	e7af      	b.n	8014f50 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8014ff0:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 8014ff4:	f04f 0e00 	mov.w	lr, #0
 8014ff8:	eb03 040e 	add.w	r4, r3, lr
 8014ffc:	2c00      	cmp	r4, #0
 8014ffe:	dc43      	bgt.n	8015088 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8015000:	9a00      	ldr	r2, [sp, #0]
 8015002:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015006:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801500a:	9300      	str	r3, [sp, #0]
 801500c:	9b02      	ldr	r3, [sp, #8]
 801500e:	2b00      	cmp	r3, #0
 8015010:	f340 8098 	ble.w	8015144 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8015014:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015018:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801501c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8015020:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015022:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015026:	ee31 1a05 	vadd.f32	s2, s2, s10
 801502a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801502e:	eef0 6a62 	vmov.f32	s13, s5
 8015032:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015036:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801503a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801503e:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8015042:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015046:	eef0 6a43 	vmov.f32	s13, s6
 801504a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801504e:	ee12 2a90 	vmov	r2, s5
 8015052:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015056:	fb92 f3f3 	sdiv	r3, r2, r3
 801505a:	ee13 2a10 	vmov	r2, s6
 801505e:	9313      	str	r3, [sp, #76]	; 0x4c
 8015060:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015062:	fb92 f3f3 	sdiv	r3, r2, r3
 8015066:	9314      	str	r3, [sp, #80]	; 0x50
 8015068:	9b02      	ldr	r3, [sp, #8]
 801506a:	9a05      	ldr	r2, [sp, #20]
 801506c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015070:	3b01      	subs	r3, #1
 8015072:	9302      	str	r3, [sp, #8]
 8015074:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 8015078:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801507a:	eeb0 3a67 	vmov.f32	s6, s15
 801507e:	bf08      	it	eq
 8015080:	4613      	moveq	r3, r2
 8015082:	eef0 2a47 	vmov.f32	s5, s14
 8015086:	e72a      	b.n	8014ede <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8015088:	140f      	asrs	r7, r1, #16
 801508a:	d454      	bmi.n	8015136 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801508c:	f8dc 6008 	ldr.w	r6, [ip, #8]
 8015090:	42be      	cmp	r6, r7
 8015092:	dd50      	ble.n	8015136 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8015094:	ea5f 4822 	movs.w	r8, r2, asr #16
 8015098:	d44d      	bmi.n	8015136 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801509a:	f8dc 400c 	ldr.w	r4, [ip, #12]
 801509e:	4544      	cmp	r4, r8
 80150a0:	dd49      	ble.n	8015136 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80150a2:	9c04      	ldr	r4, [sp, #16]
 80150a4:	b236      	sxth	r6, r6
 80150a6:	fb08 4606 	mla	r6, r8, r6, r4
 80150aa:	f06f 0001 	mvn.w	r0, #1
 80150ae:	f816 8007 	ldrb.w	r8, [r6, r7]
 80150b2:	9c01      	ldr	r4, [sp, #4]
 80150b4:	fb00 fa0e 	mul.w	sl, r0, lr
 80150b8:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 80150bc:	9800      	ldr	r0, [sp, #0]
 80150be:	eb04 0b08 	add.w	fp, r4, r8
 80150c2:	f830 400a 	ldrh.w	r4, [r0, sl]
 80150c6:	f89b 6002 	ldrb.w	r6, [fp, #2]
 80150ca:	9801      	ldr	r0, [sp, #4]
 80150cc:	f89b b001 	ldrb.w	fp, [fp, #1]
 80150d0:	f810 8008 	ldrb.w	r8, [r0, r8]
 80150d4:	9800      	ldr	r0, [sp, #0]
 80150d6:	1227      	asrs	r7, r4, #8
 80150d8:	fb16 f609 	smulbb	r6, r6, r9
 80150dc:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80150e0:	fb07 6705 	mla	r7, r7, r5, r6
 80150e4:	10e6      	asrs	r6, r4, #3
 80150e6:	00e4      	lsls	r4, r4, #3
 80150e8:	b2e4      	uxtb	r4, r4
 80150ea:	fb1b fb09 	smulbb	fp, fp, r9
 80150ee:	fb14 f405 	smulbb	r4, r4, r5
 80150f2:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80150f6:	b2bf      	uxth	r7, r7
 80150f8:	fb06 b605 	mla	r6, r6, r5, fp
 80150fc:	fb08 4809 	mla	r8, r8, r9, r4
 8015100:	b2b6      	uxth	r6, r6
 8015102:	fa1f f888 	uxth.w	r8, r8
 8015106:	1c7c      	adds	r4, r7, #1
 8015108:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801510c:	f106 0b01 	add.w	fp, r6, #1
 8015110:	f108 0401 	add.w	r4, r8, #1
 8015114:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 8015118:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801511c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8015120:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8015124:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8015128:	4327      	orrs	r7, r4
 801512a:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801512e:	ea47 070b 	orr.w	r7, r7, fp
 8015132:	f820 700a 	strh.w	r7, [r0, sl]
 8015136:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8015138:	4401      	add	r1, r0
 801513a:	9814      	ldr	r0, [sp, #80]	; 0x50
 801513c:	f10e 3eff 	add.w	lr, lr, #4294967295
 8015140:	4402      	add	r2, r0
 8015142:	e759      	b.n	8014ff8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8015144:	b007      	add	sp, #28
 8015146:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0801514c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801514c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015150:	b085      	sub	sp, #20
 8015152:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8015156:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8015158:	9203      	str	r2, [sp, #12]
 801515a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801515e:	6870      	ldr	r0, [r6, #4]
 8015160:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8015162:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 8015166:	686f      	ldr	r7, [r5, #4]
 8015168:	9101      	str	r1, [sp, #4]
 801516a:	fb00 2404 	mla	r4, r0, r4, r2
 801516e:	6832      	ldr	r2, [r6, #0]
 8015170:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8015174:	682a      	ldr	r2, [r5, #0]
 8015176:	9202      	str	r2, [sp, #8]
 8015178:	3704      	adds	r7, #4
 801517a:	9a01      	ldr	r2, [sp, #4]
 801517c:	2a00      	cmp	r2, #0
 801517e:	dc03      	bgt.n	8015188 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8015180:	9a03      	ldr	r2, [sp, #12]
 8015182:	2a00      	cmp	r2, #0
 8015184:	f340 80cc 	ble.w	8015320 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8015188:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801518a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801518e:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8015192:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8015196:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8015198:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801519c:	2b00      	cmp	r3, #0
 801519e:	dd0d      	ble.n	80151bc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80151a0:	1406      	asrs	r6, r0, #16
 80151a2:	d405      	bmi.n	80151b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 80151a4:	454e      	cmp	r6, r9
 80151a6:	da03      	bge.n	80151b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 80151a8:	1416      	asrs	r6, r2, #16
 80151aa:	d401      	bmi.n	80151b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 80151ac:	4546      	cmp	r6, r8
 80151ae:	db06      	blt.n	80151be <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80151b0:	9e12      	ldr	r6, [sp, #72]	; 0x48
 80151b2:	4460      	add	r0, ip
 80151b4:	4432      	add	r2, r6
 80151b6:	3b01      	subs	r3, #1
 80151b8:	3402      	adds	r4, #2
 80151ba:	e7ef      	b.n	801519c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 80151bc:	d00f      	beq.n	80151de <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80151be:	1e5e      	subs	r6, r3, #1
 80151c0:	fb0c 0e06 	mla	lr, ip, r6, r0
 80151c4:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 80151c8:	d543      	bpl.n	8015252 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 80151ca:	4698      	mov	r8, r3
 80151cc:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 80151d0:	f1b8 0f00 	cmp.w	r8, #0
 80151d4:	dc71      	bgt.n	80152ba <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 80151d6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80151da:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80151de:	9b01      	ldr	r3, [sp, #4]
 80151e0:	2b00      	cmp	r3, #0
 80151e2:	f340 809d 	ble.w	8015320 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80151e6:	ee30 0a04 	vadd.f32	s0, s0, s8
 80151ea:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80151ee:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80151f2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80151f4:	ee31 1a05 	vadd.f32	s2, s2, s10
 80151f8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80151fc:	eeb0 6a62 	vmov.f32	s12, s5
 8015200:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015204:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015208:	ee77 2a62 	vsub.f32	s5, s14, s5
 801520c:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8015210:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015214:	eeb0 6a43 	vmov.f32	s12, s6
 8015218:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801521c:	ee12 2a90 	vmov	r2, s5
 8015220:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015224:	fb92 fcf3 	sdiv	ip, r2, r3
 8015228:	ee13 2a10 	vmov	r2, s6
 801522c:	fb92 f3f3 	sdiv	r3, r2, r3
 8015230:	9312      	str	r3, [sp, #72]	; 0x48
 8015232:	9b01      	ldr	r3, [sp, #4]
 8015234:	9a03      	ldr	r2, [sp, #12]
 8015236:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801523a:	3b01      	subs	r3, #1
 801523c:	9301      	str	r3, [sp, #4]
 801523e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8015242:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015244:	eeb0 3a67 	vmov.f32	s6, s15
 8015248:	bf08      	it	eq
 801524a:	4613      	moveq	r3, r2
 801524c:	eef0 2a47 	vmov.f32	s5, s14
 8015250:	e793      	b.n	801517a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8015252:	45ce      	cmp	lr, r9
 8015254:	dab9      	bge.n	80151ca <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8015256:	9912      	ldr	r1, [sp, #72]	; 0x48
 8015258:	fb01 2606 	mla	r6, r1, r6, r2
 801525c:	1436      	asrs	r6, r6, #16
 801525e:	d4b4      	bmi.n	80151ca <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8015260:	4546      	cmp	r6, r8
 8015262:	dab2      	bge.n	80151ca <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8015264:	4698      	mov	r8, r3
 8015266:	46a2      	mov	sl, r4
 8015268:	f1b8 0f00 	cmp.w	r8, #0
 801526c:	ddb3      	ble.n	80151d6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801526e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8015272:	9902      	ldr	r1, [sp, #8]
 8015274:	1416      	asrs	r6, r2, #16
 8015276:	fb09 1606 	mla	r6, r9, r6, r1
 801527a:	ea4f 4e20 	mov.w	lr, r0, asr #16
 801527e:	492a      	ldr	r1, [pc, #168]	; (8015328 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 8015280:	f816 e00e 	ldrb.w	lr, [r6, lr]
 8015284:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8015288:	eb07 0b0e 	add.w	fp, r7, lr
 801528c:	4460      	add	r0, ip
 801528e:	f89b 6001 	ldrb.w	r6, [fp, #1]
 8015292:	f89b 9002 	ldrb.w	r9, [fp, #2]
 8015296:	00f6      	lsls	r6, r6, #3
 8015298:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 801529c:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80152a0:	ea49 0606 	orr.w	r6, r9, r6
 80152a4:	f817 900e 	ldrb.w	r9, [r7, lr]
 80152a8:	9912      	ldr	r1, [sp, #72]	; 0x48
 80152aa:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 80152ae:	f82a 6b02 	strh.w	r6, [sl], #2
 80152b2:	440a      	add	r2, r1
 80152b4:	f108 38ff 	add.w	r8, r8, #4294967295
 80152b8:	e7d6      	b.n	8015268 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80152ba:	ea5f 4920 	movs.w	r9, r0, asr #16
 80152be:	d429      	bmi.n	8015314 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80152c0:	68ae      	ldr	r6, [r5, #8]
 80152c2:	454e      	cmp	r6, r9
 80152c4:	dd26      	ble.n	8015314 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80152c6:	ea5f 4b22 	movs.w	fp, r2, asr #16
 80152ca:	d423      	bmi.n	8015314 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80152cc:	68e9      	ldr	r1, [r5, #12]
 80152ce:	4559      	cmp	r1, fp
 80152d0:	dd20      	ble.n	8015314 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80152d2:	9902      	ldr	r1, [sp, #8]
 80152d4:	fa0f fe86 	sxth.w	lr, r6
 80152d8:	fb0b 1e0e 	mla	lr, fp, lr, r1
 80152dc:	f06f 0101 	mvn.w	r1, #1
 80152e0:	f81e e009 	ldrb.w	lr, [lr, r9]
 80152e4:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 80152e8:	eb07 060e 	add.w	r6, r7, lr
 80152ec:	fb01 f908 	mul.w	r9, r1, r8
 80152f0:	f896 b002 	ldrb.w	fp, [r6, #2]
 80152f4:	7876      	ldrb	r6, [r6, #1]
 80152f6:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 80152fa:	00f6      	lsls	r6, r6, #3
 80152fc:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 8015300:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8015304:	ea4b 0606 	orr.w	r6, fp, r6
 8015308:	f817 b00e 	ldrb.w	fp, [r7, lr]
 801530c:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 8015310:	f82a 6009 	strh.w	r6, [sl, r9]
 8015314:	9912      	ldr	r1, [sp, #72]	; 0x48
 8015316:	4460      	add	r0, ip
 8015318:	440a      	add	r2, r1
 801531a:	f108 38ff 	add.w	r8, r8, #4294967295
 801531e:	e757      	b.n	80151d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8015320:	b005      	add	sp, #20
 8015322:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015326:	bf00      	nop
 8015328:	fffff800 	.word	0xfffff800

0801532c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801532c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015330:	b087      	sub	sp, #28
 8015332:	468b      	mov	fp, r1
 8015334:	9815      	ldr	r0, [sp, #84]	; 0x54
 8015336:	9204      	str	r2, [sp, #16]
 8015338:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801533c:	9205      	str	r2, [sp, #20]
 801533e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8015342:	6841      	ldr	r1, [r0, #4]
 8015344:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8015348:	fb01 2404 	mla	r4, r1, r4, r2
 801534c:	6802      	ldr	r2, [r0, #0]
 801534e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8015352:	f8dc 2000 	ldr.w	r2, [ip]
 8015356:	9201      	str	r2, [sp, #4]
 8015358:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801535c:	3204      	adds	r2, #4
 801535e:	9202      	str	r2, [sp, #8]
 8015360:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8015364:	f1bb 0f00 	cmp.w	fp, #0
 8015368:	dc03      	bgt.n	8015372 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801536a:	9a04      	ldr	r2, [sp, #16]
 801536c:	2a00      	cmp	r2, #0
 801536e:	f340 8138 	ble.w	80155e2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8015372:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8015374:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8015378:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 801537c:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8015380:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8015382:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8015386:	2b00      	cmp	r3, #0
 8015388:	dd0e      	ble.n	80153a8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801538a:	1402      	asrs	r2, r0, #16
 801538c:	d405      	bmi.n	801539a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801538e:	42ba      	cmp	r2, r7
 8015390:	da03      	bge.n	801539a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8015392:	140a      	asrs	r2, r1, #16
 8015394:	d401      	bmi.n	801539a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8015396:	42b2      	cmp	r2, r6
 8015398:	db07      	blt.n	80153aa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801539a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801539c:	4410      	add	r0, r2
 801539e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80153a0:	3b01      	subs	r3, #1
 80153a2:	4411      	add	r1, r2
 80153a4:	3402      	adds	r4, #2
 80153a6:	e7ee      	b.n	8015386 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 80153a8:	d019      	beq.n	80153de <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 80153aa:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80153ac:	1e5a      	subs	r2, r3, #1
 80153ae:	fb05 0502 	mla	r5, r5, r2, r0
 80153b2:	142d      	asrs	r5, r5, #16
 80153b4:	d409      	bmi.n	80153ca <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80153b6:	42bd      	cmp	r5, r7
 80153b8:	da07      	bge.n	80153ca <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80153ba:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80153bc:	fb05 1202 	mla	r2, r5, r2, r1
 80153c0:	1412      	asrs	r2, r2, #16
 80153c2:	d402      	bmi.n	80153ca <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80153c4:	42b2      	cmp	r2, r6
 80153c6:	f2c0 80ac 	blt.w	8015522 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 80153ca:	f04f 0e00 	mov.w	lr, #0
 80153ce:	eb03 020e 	add.w	r2, r3, lr
 80153d2:	2a00      	cmp	r2, #0
 80153d4:	dc3e      	bgt.n	8015454 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 80153d6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80153da:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80153de:	f1bb 0f00 	cmp.w	fp, #0
 80153e2:	f340 80fe 	ble.w	80155e2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 80153e6:	ee30 0a04 	vadd.f32	s0, s0, s8
 80153ea:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80153ee:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80153f2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80153f4:	f1bb 0b01 	subs.w	fp, fp, #1
 80153f8:	ee31 1a05 	vadd.f32	s2, s2, s10
 80153fc:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015400:	eeb0 6a62 	vmov.f32	s12, s5
 8015404:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015408:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801540c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015410:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8015414:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015418:	eeb0 6a43 	vmov.f32	s12, s6
 801541c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015420:	ee12 2a90 	vmov	r2, s5
 8015424:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015428:	fb92 f3f3 	sdiv	r3, r2, r3
 801542c:	ee13 2a10 	vmov	r2, s6
 8015430:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015434:	9313      	str	r3, [sp, #76]	; 0x4c
 8015436:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015438:	fb92 f3f3 	sdiv	r3, r2, r3
 801543c:	9a04      	ldr	r2, [sp, #16]
 801543e:	9314      	str	r3, [sp, #80]	; 0x50
 8015440:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8015444:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015446:	eeb0 3a67 	vmov.f32	s6, s15
 801544a:	bf08      	it	eq
 801544c:	4613      	moveq	r3, r2
 801544e:	eef0 2a47 	vmov.f32	s5, s14
 8015452:	e787      	b.n	8015364 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8015454:	1406      	asrs	r6, r0, #16
 8015456:	d45d      	bmi.n	8015514 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8015458:	f8dc 5008 	ldr.w	r5, [ip, #8]
 801545c:	42b5      	cmp	r5, r6
 801545e:	dd59      	ble.n	8015514 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8015460:	140f      	asrs	r7, r1, #16
 8015462:	d457      	bmi.n	8015514 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8015464:	f8dc 200c 	ldr.w	r2, [ip, #12]
 8015468:	42ba      	cmp	r2, r7
 801546a:	dd53      	ble.n	8015514 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801546c:	9a01      	ldr	r2, [sp, #4]
 801546e:	b22d      	sxth	r5, r5
 8015470:	fb07 2505 	mla	r5, r7, r5, r2
 8015474:	5daa      	ldrb	r2, [r5, r6]
 8015476:	9d02      	ldr	r5, [sp, #8]
 8015478:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801547c:	0e2e      	lsrs	r6, r5, #24
 801547e:	d049      	beq.n	8015514 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8015480:	f06f 0201 	mvn.w	r2, #1
 8015484:	fb02 f20e 	mul.w	r2, r2, lr
 8015488:	9203      	str	r2, [sp, #12]
 801548a:	f834 8002 	ldrh.w	r8, [r4, r2]
 801548e:	9a05      	ldr	r2, [sp, #20]
 8015490:	4356      	muls	r6, r2
 8015492:	1c72      	adds	r2, r6, #1
 8015494:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8015498:	1212      	asrs	r2, r2, #8
 801549a:	fa1f f982 	uxth.w	r9, r2
 801549e:	ea4f 2728 	mov.w	r7, r8, asr #8
 80154a2:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80154a6:	43d2      	mvns	r2, r2
 80154a8:	b2d2      	uxtb	r2, r2
 80154aa:	fb16 f609 	smulbb	r6, r6, r9
 80154ae:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80154b2:	fb07 6702 	mla	r7, r7, r2, r6
 80154b6:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80154ba:	ea4f 06e8 	mov.w	r6, r8, asr #3
 80154be:	b2ed      	uxtb	r5, r5
 80154c0:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80154c4:	fa5f f888 	uxtb.w	r8, r8
 80154c8:	fb15 f509 	smulbb	r5, r5, r9
 80154cc:	fb08 5502 	mla	r5, r8, r2, r5
 80154d0:	b2bf      	uxth	r7, r7
 80154d2:	fb1a fa09 	smulbb	sl, sl, r9
 80154d6:	b2ad      	uxth	r5, r5
 80154d8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80154dc:	fb06 a602 	mla	r6, r6, r2, sl
 80154e0:	1c7a      	adds	r2, r7, #1
 80154e2:	f105 0a01 	add.w	sl, r5, #1
 80154e6:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80154ea:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80154ee:	b2b6      	uxth	r6, r6
 80154f0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80154f4:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80154f8:	ea4a 0707 	orr.w	r7, sl, r7
 80154fc:	f106 0a01 	add.w	sl, r6, #1
 8015500:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8015504:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015508:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801550c:	9a03      	ldr	r2, [sp, #12]
 801550e:	ea47 070a 	orr.w	r7, r7, sl
 8015512:	52a7      	strh	r7, [r4, r2]
 8015514:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8015516:	4410      	add	r0, r2
 8015518:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801551a:	f10e 3eff 	add.w	lr, lr, #4294967295
 801551e:	4411      	add	r1, r2
 8015520:	e755      	b.n	80153ce <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8015522:	f04f 0800 	mov.w	r8, #0
 8015526:	eba3 0208 	sub.w	r2, r3, r8
 801552a:	2a00      	cmp	r2, #0
 801552c:	f77f af53 	ble.w	80153d6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8015530:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 8015534:	9f01      	ldr	r7, [sp, #4]
 8015536:	140a      	asrs	r2, r1, #16
 8015538:	1405      	asrs	r5, r0, #16
 801553a:	fb06 7202 	mla	r2, r6, r2, r7
 801553e:	5d52      	ldrb	r2, [r2, r5]
 8015540:	9d02      	ldr	r5, [sp, #8]
 8015542:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8015546:	0e2e      	lsrs	r6, r5, #24
 8015548:	d044      	beq.n	80155d4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801554a:	9a05      	ldr	r2, [sp, #20]
 801554c:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8015550:	4356      	muls	r6, r2
 8015552:	1c72      	adds	r2, r6, #1
 8015554:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8015558:	1212      	asrs	r2, r2, #8
 801555a:	fa1f f982 	uxth.w	r9, r2
 801555e:	ea4f 272e 	mov.w	r7, lr, asr #8
 8015562:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8015566:	43d2      	mvns	r2, r2
 8015568:	b2d2      	uxtb	r2, r2
 801556a:	fb16 f609 	smulbb	r6, r6, r9
 801556e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8015572:	fb07 6702 	mla	r7, r7, r2, r6
 8015576:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801557a:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801557e:	b2ed      	uxtb	r5, r5
 8015580:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8015584:	fa5f fe8e 	uxtb.w	lr, lr
 8015588:	fb15 f509 	smulbb	r5, r5, r9
 801558c:	fb0e 5502 	mla	r5, lr, r2, r5
 8015590:	b2bf      	uxth	r7, r7
 8015592:	fb1a fa09 	smulbb	sl, sl, r9
 8015596:	b2ad      	uxth	r5, r5
 8015598:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801559c:	fb06 a602 	mla	r6, r6, r2, sl
 80155a0:	1c7a      	adds	r2, r7, #1
 80155a2:	f105 0a01 	add.w	sl, r5, #1
 80155a6:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80155aa:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80155ae:	b2b6      	uxth	r6, r6
 80155b0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80155b4:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80155b8:	ea4a 0707 	orr.w	r7, sl, r7
 80155bc:	f106 0a01 	add.w	sl, r6, #1
 80155c0:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80155c4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80155c8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80155cc:	ea47 070a 	orr.w	r7, r7, sl
 80155d0:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 80155d4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80155d6:	4410      	add	r0, r2
 80155d8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80155da:	f108 0801 	add.w	r8, r8, #1
 80155de:	4411      	add	r1, r2
 80155e0:	e7a1      	b.n	8015526 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 80155e2:	b007      	add	sp, #28
 80155e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080155e8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80155e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80155ec:	b085      	sub	sp, #20
 80155ee:	468b      	mov	fp, r1
 80155f0:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80155f2:	9203      	str	r2, [sp, #12]
 80155f4:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 80155f8:	6841      	ldr	r1, [r0, #4]
 80155fa:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 80155fe:	fb01 2404 	mla	r4, r1, r4, r2
 8015602:	6802      	ldr	r2, [r0, #0]
 8015604:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8015608:	f8de 2000 	ldr.w	r2, [lr]
 801560c:	9200      	str	r2, [sp, #0]
 801560e:	f8de 2004 	ldr.w	r2, [lr, #4]
 8015612:	3204      	adds	r2, #4
 8015614:	9201      	str	r2, [sp, #4]
 8015616:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801561a:	f1bb 0f00 	cmp.w	fp, #0
 801561e:	dc03      	bgt.n	8015628 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8015620:	9a03      	ldr	r2, [sp, #12]
 8015622:	2a00      	cmp	r2, #0
 8015624:	f340 8153 	ble.w	80158ce <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8015628:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801562a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801562e:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8015632:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8015636:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8015638:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801563c:	2b00      	cmp	r3, #0
 801563e:	dd0e      	ble.n	801565e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8015640:	1408      	asrs	r0, r1, #16
 8015642:	d405      	bmi.n	8015650 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8015644:	42b8      	cmp	r0, r7
 8015646:	da03      	bge.n	8015650 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8015648:	1410      	asrs	r0, r2, #16
 801564a:	d401      	bmi.n	8015650 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801564c:	42b0      	cmp	r0, r6
 801564e:	db07      	blt.n	8015660 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8015650:	9811      	ldr	r0, [sp, #68]	; 0x44
 8015652:	4401      	add	r1, r0
 8015654:	9812      	ldr	r0, [sp, #72]	; 0x48
 8015656:	3b01      	subs	r3, #1
 8015658:	4402      	add	r2, r0
 801565a:	3402      	adds	r4, #2
 801565c:	e7ee      	b.n	801563c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801565e:	d017      	beq.n	8015690 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8015660:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8015662:	1e58      	subs	r0, r3, #1
 8015664:	fb05 1500 	mla	r5, r5, r0, r1
 8015668:	142d      	asrs	r5, r5, #16
 801566a:	d409      	bmi.n	8015680 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801566c:	42bd      	cmp	r5, r7
 801566e:	da07      	bge.n	8015680 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8015670:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8015672:	fb05 2000 	mla	r0, r5, r0, r2
 8015676:	1400      	asrs	r0, r0, #16
 8015678:	d402      	bmi.n	8015680 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801567a:	42b0      	cmp	r0, r6
 801567c:	f2c0 80bc 	blt.w	80157f8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 8015680:	2600      	movs	r6, #0
 8015682:	1998      	adds	r0, r3, r6
 8015684:	2800      	cmp	r0, #0
 8015686:	dc3e      	bgt.n	8015706 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 8015688:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801568c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015690:	f1bb 0f00 	cmp.w	fp, #0
 8015694:	f340 811b 	ble.w	80158ce <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8015698:	ee30 0a04 	vadd.f32	s0, s0, s8
 801569c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80156a0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80156a4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80156a6:	f1bb 0b01 	subs.w	fp, fp, #1
 80156aa:	ee31 1a05 	vadd.f32	s2, s2, s10
 80156ae:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80156b2:	eeb0 6a62 	vmov.f32	s12, s5
 80156b6:	ee61 7a27 	vmul.f32	s15, s2, s15
 80156ba:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80156be:	ee77 2a62 	vsub.f32	s5, s14, s5
 80156c2:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 80156c6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80156ca:	eeb0 6a43 	vmov.f32	s12, s6
 80156ce:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80156d2:	ee12 2a90 	vmov	r2, s5
 80156d6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80156da:	fb92 f3f3 	sdiv	r3, r2, r3
 80156de:	ee13 2a10 	vmov	r2, s6
 80156e2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80156e6:	9311      	str	r3, [sp, #68]	; 0x44
 80156e8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80156ea:	fb92 f3f3 	sdiv	r3, r2, r3
 80156ee:	9a03      	ldr	r2, [sp, #12]
 80156f0:	9312      	str	r3, [sp, #72]	; 0x48
 80156f2:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80156f6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80156f8:	eeb0 3a67 	vmov.f32	s6, s15
 80156fc:	bf08      	it	eq
 80156fe:	4613      	moveq	r3, r2
 8015700:	eef0 2a47 	vmov.f32	s5, s14
 8015704:	e789      	b.n	801561a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8015706:	140f      	asrs	r7, r1, #16
 8015708:	d426      	bmi.n	8015758 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801570a:	f8de 5008 	ldr.w	r5, [lr, #8]
 801570e:	42bd      	cmp	r5, r7
 8015710:	dd22      	ble.n	8015758 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8015712:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8015716:	d41f      	bmi.n	8015758 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8015718:	f8de 000c 	ldr.w	r0, [lr, #12]
 801571c:	4560      	cmp	r0, ip
 801571e:	dd1b      	ble.n	8015758 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8015720:	9800      	ldr	r0, [sp, #0]
 8015722:	b22d      	sxth	r5, r5
 8015724:	fb0c 0505 	mla	r5, ip, r5, r0
 8015728:	5de8      	ldrb	r0, [r5, r7]
 801572a:	9d01      	ldr	r5, [sp, #4]
 801572c:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 8015730:	0e07      	lsrs	r7, r0, #24
 8015732:	2fff      	cmp	r7, #255	; 0xff
 8015734:	d116      	bne.n	8015764 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8015736:	f06f 0501 	mvn.w	r5, #1
 801573a:	fb05 f706 	mul.w	r7, r5, r6
 801573e:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 8015742:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8015746:	0945      	lsrs	r5, r0, #5
 8015748:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801574c:	ea4c 0505 	orr.w	r5, ip, r5
 8015750:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8015754:	4305      	orrs	r5, r0
 8015756:	53e5      	strh	r5, [r4, r7]
 8015758:	9811      	ldr	r0, [sp, #68]	; 0x44
 801575a:	4401      	add	r1, r0
 801575c:	9812      	ldr	r0, [sp, #72]	; 0x48
 801575e:	3e01      	subs	r6, #1
 8015760:	4402      	add	r2, r0
 8015762:	e78e      	b.n	8015682 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8015764:	b2fd      	uxtb	r5, r7
 8015766:	2f00      	cmp	r7, #0
 8015768:	d0f6      	beq.n	8015758 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801576a:	f06f 0701 	mvn.w	r7, #1
 801576e:	4377      	muls	r7, r6
 8015770:	fa1f f985 	uxth.w	r9, r5
 8015774:	f834 8007 	ldrh.w	r8, [r4, r7]
 8015778:	9702      	str	r7, [sp, #8]
 801577a:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801577e:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8015782:	43ed      	mvns	r5, r5
 8015784:	b2ed      	uxtb	r5, r5
 8015786:	fb17 f709 	smulbb	r7, r7, r9
 801578a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801578e:	fb0c 7c05 	mla	ip, ip, r5, r7
 8015792:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8015796:	ea4f 07e8 	mov.w	r7, r8, asr #3
 801579a:	b2c0      	uxtb	r0, r0
 801579c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80157a0:	fa5f f888 	uxtb.w	r8, r8
 80157a4:	fb10 f009 	smulbb	r0, r0, r9
 80157a8:	fb08 0005 	mla	r0, r8, r5, r0
 80157ac:	b280      	uxth	r0, r0
 80157ae:	fa1f fc8c 	uxth.w	ip, ip
 80157b2:	fb1a fa09 	smulbb	sl, sl, r9
 80157b6:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80157ba:	fb07 a705 	mla	r7, r7, r5, sl
 80157be:	f100 0a01 	add.w	sl, r0, #1
 80157c2:	f10c 0501 	add.w	r5, ip, #1
 80157c6:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 80157ca:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80157ce:	b2bf      	uxth	r7, r7
 80157d0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80157d4:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80157d8:	ea4a 0c0c 	orr.w	ip, sl, ip
 80157dc:	f107 0a01 	add.w	sl, r7, #1
 80157e0:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 80157e4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80157e8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80157ec:	9802      	ldr	r0, [sp, #8]
 80157ee:	ea4c 0c0a 	orr.w	ip, ip, sl
 80157f2:	f824 c000 	strh.w	ip, [r4, r0]
 80157f6:	e7af      	b.n	8015758 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80157f8:	f04f 0800 	mov.w	r8, #0
 80157fc:	eba3 0008 	sub.w	r0, r3, r8
 8015800:	2800      	cmp	r0, #0
 8015802:	f77f af41 	ble.w	8015688 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8015806:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801580a:	9f00      	ldr	r7, [sp, #0]
 801580c:	1410      	asrs	r0, r2, #16
 801580e:	140d      	asrs	r5, r1, #16
 8015810:	fb06 7000 	mla	r0, r6, r0, r7
 8015814:	5d40      	ldrb	r0, [r0, r5]
 8015816:	9d01      	ldr	r5, [sp, #4]
 8015818:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801581c:	0e2e      	lsrs	r6, r5, #24
 801581e:	2eff      	cmp	r6, #255	; 0xff
 8015820:	d112      	bne.n	8015848 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 8015822:	482c      	ldr	r0, [pc, #176]	; (80158d4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 8015824:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8015828:	0968      	lsrs	r0, r5, #5
 801582a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801582e:	4330      	orrs	r0, r6
 8015830:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8015834:	4328      	orrs	r0, r5
 8015836:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 801583a:	9811      	ldr	r0, [sp, #68]	; 0x44
 801583c:	4401      	add	r1, r0
 801583e:	9812      	ldr	r0, [sp, #72]	; 0x48
 8015840:	f108 0801 	add.w	r8, r8, #1
 8015844:	4402      	add	r2, r0
 8015846:	e7d9      	b.n	80157fc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8015848:	b2f0      	uxtb	r0, r6
 801584a:	2e00      	cmp	r6, #0
 801584c:	d0f5      	beq.n	801583a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801584e:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 8015852:	fa1f f980 	uxth.w	r9, r0
 8015856:	ea4f 272c 	mov.w	r7, ip, asr #8
 801585a:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801585e:	43c0      	mvns	r0, r0
 8015860:	b2c0      	uxtb	r0, r0
 8015862:	fb16 f609 	smulbb	r6, r6, r9
 8015866:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801586a:	fb07 6700 	mla	r7, r7, r0, r6
 801586e:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8015872:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8015876:	b2ed      	uxtb	r5, r5
 8015878:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801587c:	fa5f fc8c 	uxtb.w	ip, ip
 8015880:	fb15 f509 	smulbb	r5, r5, r9
 8015884:	fb0c 5500 	mla	r5, ip, r0, r5
 8015888:	b2bf      	uxth	r7, r7
 801588a:	fb1a fa09 	smulbb	sl, sl, r9
 801588e:	b2ad      	uxth	r5, r5
 8015890:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8015894:	fb06 a600 	mla	r6, r6, r0, sl
 8015898:	1c78      	adds	r0, r7, #1
 801589a:	f105 0a01 	add.w	sl, r5, #1
 801589e:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 80158a2:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80158a6:	b2b6      	uxth	r6, r6
 80158a8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80158ac:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80158b0:	ea4a 0707 	orr.w	r7, sl, r7
 80158b4:	f106 0a01 	add.w	sl, r6, #1
 80158b8:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80158bc:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80158c0:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80158c4:	ea47 070a 	orr.w	r7, r7, sl
 80158c8:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 80158cc:	e7b5      	b.n	801583a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 80158ce:	b005      	add	sp, #20
 80158d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80158d4:	fffff800 	.word	0xfffff800

080158d8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80158d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80158dc:	b087      	sub	sp, #28
 80158de:	468b      	mov	fp, r1
 80158e0:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80158e2:	9204      	str	r2, [sp, #16]
 80158e4:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80158e8:	9205      	str	r2, [sp, #20]
 80158ea:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 80158ee:	6861      	ldr	r1, [r4, #4]
 80158f0:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 80158f4:	fb01 2000 	mla	r0, r1, r0, r2
 80158f8:	6822      	ldr	r2, [r4, #0]
 80158fa:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 80158fe:	f8de 2000 	ldr.w	r2, [lr]
 8015902:	9201      	str	r2, [sp, #4]
 8015904:	f8de 2004 	ldr.w	r2, [lr, #4]
 8015908:	9202      	str	r2, [sp, #8]
 801590a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801590e:	f1bb 0f00 	cmp.w	fp, #0
 8015912:	dc03      	bgt.n	801591c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 8015914:	9a04      	ldr	r2, [sp, #16]
 8015916:	2a00      	cmp	r2, #0
 8015918:	f340 8142 	ble.w	8015ba0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801591c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801591e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8015922:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8015926:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801592a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801592c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8015930:	2b00      	cmp	r3, #0
 8015932:	dd0e      	ble.n	8015952 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8015934:	140c      	asrs	r4, r1, #16
 8015936:	d405      	bmi.n	8015944 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8015938:	42bc      	cmp	r4, r7
 801593a:	da03      	bge.n	8015944 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801593c:	1414      	asrs	r4, r2, #16
 801593e:	d401      	bmi.n	8015944 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8015940:	42b4      	cmp	r4, r6
 8015942:	db07      	blt.n	8015954 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8015944:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8015946:	4421      	add	r1, r4
 8015948:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801594a:	3b01      	subs	r3, #1
 801594c:	4422      	add	r2, r4
 801594e:	3002      	adds	r0, #2
 8015950:	e7ee      	b.n	8015930 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8015952:	d019      	beq.n	8015988 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8015954:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8015956:	1e5c      	subs	r4, r3, #1
 8015958:	fb05 1504 	mla	r5, r5, r4, r1
 801595c:	142d      	asrs	r5, r5, #16
 801595e:	d409      	bmi.n	8015974 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8015960:	42bd      	cmp	r5, r7
 8015962:	da07      	bge.n	8015974 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8015964:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8015966:	fb05 2404 	mla	r4, r5, r4, r2
 801596a:	1424      	asrs	r4, r4, #16
 801596c:	d402      	bmi.n	8015974 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801596e:	42b4      	cmp	r4, r6
 8015970:	f2c0 80b1 	blt.w	8015ad6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8015974:	f04f 0800 	mov.w	r8, #0
 8015978:	eb03 0408 	add.w	r4, r3, r8
 801597c:	2c00      	cmp	r4, #0
 801597e:	dc3e      	bgt.n	80159fe <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8015980:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015984:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8015988:	f1bb 0f00 	cmp.w	fp, #0
 801598c:	f340 8108 	ble.w	8015ba0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8015990:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015994:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015998:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801599c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801599e:	f1bb 0b01 	subs.w	fp, fp, #1
 80159a2:	ee31 1a05 	vadd.f32	s2, s2, s10
 80159a6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80159aa:	eeb0 6a62 	vmov.f32	s12, s5
 80159ae:	ee61 7a27 	vmul.f32	s15, s2, s15
 80159b2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80159b6:	ee77 2a62 	vsub.f32	s5, s14, s5
 80159ba:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 80159be:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80159c2:	eeb0 6a43 	vmov.f32	s12, s6
 80159c6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80159ca:	ee12 2a90 	vmov	r2, s5
 80159ce:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80159d2:	fb92 f3f3 	sdiv	r3, r2, r3
 80159d6:	ee13 2a10 	vmov	r2, s6
 80159da:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80159de:	9313      	str	r3, [sp, #76]	; 0x4c
 80159e0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80159e2:	fb92 f3f3 	sdiv	r3, r2, r3
 80159e6:	9a04      	ldr	r2, [sp, #16]
 80159e8:	9314      	str	r3, [sp, #80]	; 0x50
 80159ea:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 80159ee:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80159f0:	eeb0 3a67 	vmov.f32	s6, s15
 80159f4:	bf08      	it	eq
 80159f6:	4613      	moveq	r3, r2
 80159f8:	eef0 2a47 	vmov.f32	s5, s14
 80159fc:	e787      	b.n	801590e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 80159fe:	140e      	asrs	r6, r1, #16
 8015a00:	d462      	bmi.n	8015ac8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8015a02:	f8de 5008 	ldr.w	r5, [lr, #8]
 8015a06:	42b5      	cmp	r5, r6
 8015a08:	dd5e      	ble.n	8015ac8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8015a0a:	1417      	asrs	r7, r2, #16
 8015a0c:	d45c      	bmi.n	8015ac8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8015a0e:	f8de 400c 	ldr.w	r4, [lr, #12]
 8015a12:	42bc      	cmp	r4, r7
 8015a14:	dd58      	ble.n	8015ac8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8015a16:	b22d      	sxth	r5, r5
 8015a18:	fb07 6505 	mla	r5, r7, r5, r6
 8015a1c:	9c02      	ldr	r4, [sp, #8]
 8015a1e:	5d66      	ldrb	r6, [r4, r5]
 8015a20:	2e00      	cmp	r6, #0
 8015a22:	d051      	beq.n	8015ac8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8015a24:	9c01      	ldr	r4, [sp, #4]
 8015a26:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 8015a2a:	f06f 0401 	mvn.w	r4, #1
 8015a2e:	fb04 f408 	mul.w	r4, r4, r8
 8015a32:	9403      	str	r4, [sp, #12]
 8015a34:	5b05      	ldrh	r5, [r0, r4]
 8015a36:	9c05      	ldr	r4, [sp, #20]
 8015a38:	4366      	muls	r6, r4
 8015a3a:	1c74      	adds	r4, r6, #1
 8015a3c:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8015a40:	1224      	asrs	r4, r4, #8
 8015a42:	b2a7      	uxth	r7, r4
 8015a44:	122e      	asrs	r6, r5, #8
 8015a46:	43e4      	mvns	r4, r4
 8015a48:	b2e4      	uxtb	r4, r4
 8015a4a:	ea4f 2c29 	mov.w	ip, r9, asr #8
 8015a4e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8015a52:	fb16 f604 	smulbb	r6, r6, r4
 8015a56:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8015a5a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8015a5e:	00ed      	lsls	r5, r5, #3
 8015a60:	fb0c 6c07 	mla	ip, ip, r7, r6
 8015a64:	b2ed      	uxtb	r5, r5
 8015a66:	ea4f 06e9 	mov.w	r6, r9, asr #3
 8015a6a:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8015a6e:	fb15 f504 	smulbb	r5, r5, r4
 8015a72:	fa5f f989 	uxtb.w	r9, r9
 8015a76:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8015a7a:	fb09 5507 	mla	r5, r9, r7, r5
 8015a7e:	fb1a fa04 	smulbb	sl, sl, r4
 8015a82:	fa1f fc8c 	uxth.w	ip, ip
 8015a86:	b2ad      	uxth	r5, r5
 8015a88:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8015a8c:	fb06 a607 	mla	r6, r6, r7, sl
 8015a90:	f10c 0401 	add.w	r4, ip, #1
 8015a94:	f105 0a01 	add.w	sl, r5, #1
 8015a98:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8015a9c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8015aa0:	b2b6      	uxth	r6, r6
 8015aa2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015aa6:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8015aaa:	ea4a 0c0c 	orr.w	ip, sl, ip
 8015aae:	f106 0a01 	add.w	sl, r6, #1
 8015ab2:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8015ab6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015aba:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015abe:	9c03      	ldr	r4, [sp, #12]
 8015ac0:	ea4c 0c0a 	orr.w	ip, ip, sl
 8015ac4:	f820 c004 	strh.w	ip, [r0, r4]
 8015ac8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8015aca:	4421      	add	r1, r4
 8015acc:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8015ace:	f108 38ff 	add.w	r8, r8, #4294967295
 8015ad2:	4422      	add	r2, r4
 8015ad4:	e750      	b.n	8015978 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8015ad6:	f04f 0900 	mov.w	r9, #0
 8015ada:	eba3 0409 	sub.w	r4, r3, r9
 8015ade:	2c00      	cmp	r4, #0
 8015ae0:	f77f af4e 	ble.w	8015980 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8015ae4:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8015ae8:	140d      	asrs	r5, r1, #16
 8015aea:	1414      	asrs	r4, r2, #16
 8015aec:	fb06 5404 	mla	r4, r6, r4, r5
 8015af0:	9d02      	ldr	r5, [sp, #8]
 8015af2:	5d2e      	ldrb	r6, [r5, r4]
 8015af4:	2e00      	cmp	r6, #0
 8015af6:	d04c      	beq.n	8015b92 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 8015af8:	9d01      	ldr	r5, [sp, #4]
 8015afa:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 8015afe:	9c05      	ldr	r4, [sp, #20]
 8015b00:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8015b04:	4366      	muls	r6, r4
 8015b06:	1c74      	adds	r4, r6, #1
 8015b08:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8015b0c:	1224      	asrs	r4, r4, #8
 8015b0e:	b2a7      	uxth	r7, r4
 8015b10:	122e      	asrs	r6, r5, #8
 8015b12:	43e4      	mvns	r4, r4
 8015b14:	b2e4      	uxtb	r4, r4
 8015b16:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8015b1a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8015b1e:	fb16 f604 	smulbb	r6, r6, r4
 8015b22:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8015b26:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8015b2a:	00ed      	lsls	r5, r5, #3
 8015b2c:	fb0c 6c07 	mla	ip, ip, r7, r6
 8015b30:	b2ed      	uxtb	r5, r5
 8015b32:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8015b36:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8015b3a:	fb15 f504 	smulbb	r5, r5, r4
 8015b3e:	fa5f f888 	uxtb.w	r8, r8
 8015b42:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8015b46:	fb08 5507 	mla	r5, r8, r7, r5
 8015b4a:	fb1a fa04 	smulbb	sl, sl, r4
 8015b4e:	fa1f fc8c 	uxth.w	ip, ip
 8015b52:	b2ad      	uxth	r5, r5
 8015b54:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8015b58:	fb06 a607 	mla	r6, r6, r7, sl
 8015b5c:	f10c 0401 	add.w	r4, ip, #1
 8015b60:	f105 0a01 	add.w	sl, r5, #1
 8015b64:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8015b68:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8015b6c:	b2b6      	uxth	r6, r6
 8015b6e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015b72:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8015b76:	ea4a 0c0c 	orr.w	ip, sl, ip
 8015b7a:	f106 0a01 	add.w	sl, r6, #1
 8015b7e:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8015b82:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015b86:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015b8a:	ea4c 0c0a 	orr.w	ip, ip, sl
 8015b8e:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8015b92:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8015b94:	4421      	add	r1, r4
 8015b96:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8015b98:	f109 0901 	add.w	r9, r9, #1
 8015b9c:	4422      	add	r2, r4
 8015b9e:	e79c      	b.n	8015ada <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8015ba0:	b007      	add	sp, #28
 8015ba2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015ba6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015ba6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015baa:	b085      	sub	sp, #20
 8015bac:	468b      	mov	fp, r1
 8015bae:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8015bb0:	9203      	str	r2, [sp, #12]
 8015bb2:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 8015bb6:	6861      	ldr	r1, [r4, #4]
 8015bb8:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 8015bbc:	fb01 2000 	mla	r0, r1, r0, r2
 8015bc0:	6822      	ldr	r2, [r4, #0]
 8015bc2:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8015bc6:	f8d8 2000 	ldr.w	r2, [r8]
 8015bca:	9200      	str	r2, [sp, #0]
 8015bcc:	f8d8 2004 	ldr.w	r2, [r8, #4]
 8015bd0:	9201      	str	r2, [sp, #4]
 8015bd2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8015bd6:	f1bb 0f00 	cmp.w	fp, #0
 8015bda:	dc03      	bgt.n	8015be4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8015bdc:	9a03      	ldr	r2, [sp, #12]
 8015bde:	2a00      	cmp	r2, #0
 8015be0:	f340 8146 	ble.w	8015e70 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8015be4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8015be6:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8015bea:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8015bee:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8015bf2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8015bf4:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8015bf8:	2b00      	cmp	r3, #0
 8015bfa:	dd0e      	ble.n	8015c1a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8015bfc:	140c      	asrs	r4, r1, #16
 8015bfe:	d405      	bmi.n	8015c0c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8015c00:	42bc      	cmp	r4, r7
 8015c02:	da03      	bge.n	8015c0c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8015c04:	1414      	asrs	r4, r2, #16
 8015c06:	d401      	bmi.n	8015c0c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8015c08:	42b4      	cmp	r4, r6
 8015c0a:	db07      	blt.n	8015c1c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8015c0c:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8015c0e:	4421      	add	r1, r4
 8015c10:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8015c12:	3b01      	subs	r3, #1
 8015c14:	4422      	add	r2, r4
 8015c16:	3002      	adds	r0, #2
 8015c18:	e7ee      	b.n	8015bf8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8015c1a:	d017      	beq.n	8015c4c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8015c1c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8015c1e:	1e5c      	subs	r4, r3, #1
 8015c20:	fb05 1504 	mla	r5, r5, r4, r1
 8015c24:	142d      	asrs	r5, r5, #16
 8015c26:	d409      	bmi.n	8015c3c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8015c28:	42bd      	cmp	r5, r7
 8015c2a:	da07      	bge.n	8015c3c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8015c2c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8015c2e:	fb05 2404 	mla	r4, r5, r4, r2
 8015c32:	1424      	asrs	r4, r4, #16
 8015c34:	d402      	bmi.n	8015c3c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8015c36:	42b4      	cmp	r4, r6
 8015c38:	f2c0 80b3 	blt.w	8015da2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8015c3c:	2600      	movs	r6, #0
 8015c3e:	199c      	adds	r4, r3, r6
 8015c40:	2c00      	cmp	r4, #0
 8015c42:	dc3e      	bgt.n	8015cc2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8015c44:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015c48:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8015c4c:	f1bb 0f00 	cmp.w	fp, #0
 8015c50:	f340 810e 	ble.w	8015e70 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8015c54:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015c58:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015c5c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8015c60:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015c62:	f1bb 0b01 	subs.w	fp, fp, #1
 8015c66:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015c6a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015c6e:	eeb0 6a62 	vmov.f32	s12, s5
 8015c72:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015c76:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015c7a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015c7e:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8015c82:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015c86:	eeb0 6a43 	vmov.f32	s12, s6
 8015c8a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015c8e:	ee12 2a90 	vmov	r2, s5
 8015c92:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015c96:	fb92 f3f3 	sdiv	r3, r2, r3
 8015c9a:	ee13 2a10 	vmov	r2, s6
 8015c9e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015ca2:	9311      	str	r3, [sp, #68]	; 0x44
 8015ca4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015ca6:	fb92 f3f3 	sdiv	r3, r2, r3
 8015caa:	9a03      	ldr	r2, [sp, #12]
 8015cac:	9312      	str	r3, [sp, #72]	; 0x48
 8015cae:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8015cb2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015cb4:	eeb0 3a67 	vmov.f32	s6, s15
 8015cb8:	bf08      	it	eq
 8015cba:	4613      	moveq	r3, r2
 8015cbc:	eef0 2a47 	vmov.f32	s5, s14
 8015cc0:	e789      	b.n	8015bd6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8015cc2:	140f      	asrs	r7, r1, #16
 8015cc4:	d418      	bmi.n	8015cf8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8015cc6:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8015cca:	42bd      	cmp	r5, r7
 8015ccc:	dd14      	ble.n	8015cf8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8015cce:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8015cd2:	d411      	bmi.n	8015cf8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8015cd4:	f8d8 400c 	ldr.w	r4, [r8, #12]
 8015cd8:	4564      	cmp	r4, ip
 8015cda:	dd0d      	ble.n	8015cf8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8015cdc:	b22d      	sxth	r5, r5
 8015cde:	fb0c 7505 	mla	r5, ip, r5, r7
 8015ce2:	9c01      	ldr	r4, [sp, #4]
 8015ce4:	5d64      	ldrb	r4, [r4, r5]
 8015ce6:	2cff      	cmp	r4, #255	; 0xff
 8015ce8:	d10c      	bne.n	8015d04 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8015cea:	9c00      	ldr	r4, [sp, #0]
 8015cec:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 8015cf0:	f06f 0401 	mvn.w	r4, #1
 8015cf4:	4374      	muls	r4, r6
 8015cf6:	5305      	strh	r5, [r0, r4]
 8015cf8:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8015cfa:	4421      	add	r1, r4
 8015cfc:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8015cfe:	3e01      	subs	r6, #1
 8015d00:	4422      	add	r2, r4
 8015d02:	e79c      	b.n	8015c3e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8015d04:	2c00      	cmp	r4, #0
 8015d06:	d0f7      	beq.n	8015cf8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8015d08:	9f00      	ldr	r7, [sp, #0]
 8015d0a:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 8015d0e:	f06f 0501 	mvn.w	r5, #1
 8015d12:	4375      	muls	r5, r6
 8015d14:	9502      	str	r5, [sp, #8]
 8015d16:	5b45      	ldrh	r5, [r0, r5]
 8015d18:	fa1f fc84 	uxth.w	ip, r4
 8015d1c:	122f      	asrs	r7, r5, #8
 8015d1e:	43e4      	mvns	r4, r4
 8015d20:	b2e4      	uxtb	r4, r4
 8015d22:	ea4f 2e29 	mov.w	lr, r9, asr #8
 8015d26:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8015d2a:	fb17 f704 	smulbb	r7, r7, r4
 8015d2e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8015d32:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8015d36:	00ed      	lsls	r5, r5, #3
 8015d38:	fb0e 7e0c 	mla	lr, lr, ip, r7
 8015d3c:	b2ed      	uxtb	r5, r5
 8015d3e:	ea4f 07e9 	mov.w	r7, r9, asr #3
 8015d42:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8015d46:	fb15 f504 	smulbb	r5, r5, r4
 8015d4a:	fa5f f989 	uxtb.w	r9, r9
 8015d4e:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8015d52:	fb09 550c 	mla	r5, r9, ip, r5
 8015d56:	fb1a fa04 	smulbb	sl, sl, r4
 8015d5a:	fa1f fe8e 	uxth.w	lr, lr
 8015d5e:	b2ad      	uxth	r5, r5
 8015d60:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8015d64:	fb07 a70c 	mla	r7, r7, ip, sl
 8015d68:	f10e 0401 	add.w	r4, lr, #1
 8015d6c:	f105 0a01 	add.w	sl, r5, #1
 8015d70:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 8015d74:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8015d78:	b2bf      	uxth	r7, r7
 8015d7a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015d7e:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8015d82:	ea4a 0e0e 	orr.w	lr, sl, lr
 8015d86:	f107 0a01 	add.w	sl, r7, #1
 8015d8a:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8015d8e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015d92:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015d96:	9c02      	ldr	r4, [sp, #8]
 8015d98:	ea4e 0e0a 	orr.w	lr, lr, sl
 8015d9c:	f820 e004 	strh.w	lr, [r0, r4]
 8015da0:	e7aa      	b.n	8015cf8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8015da2:	f04f 0900 	mov.w	r9, #0
 8015da6:	eba3 0409 	sub.w	r4, r3, r9
 8015daa:	2c00      	cmp	r4, #0
 8015dac:	f77f af4a 	ble.w	8015c44 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8015db0:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8015db4:	1414      	asrs	r4, r2, #16
 8015db6:	140d      	asrs	r5, r1, #16
 8015db8:	fb06 5504 	mla	r5, r6, r4, r5
 8015dbc:	9c01      	ldr	r4, [sp, #4]
 8015dbe:	5d64      	ldrb	r4, [r4, r5]
 8015dc0:	2cff      	cmp	r4, #255	; 0xff
 8015dc2:	d10b      	bne.n	8015ddc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8015dc4:	9c00      	ldr	r4, [sp, #0]
 8015dc6:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 8015dca:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 8015dce:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8015dd0:	4421      	add	r1, r4
 8015dd2:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8015dd4:	f109 0901 	add.w	r9, r9, #1
 8015dd8:	4422      	add	r2, r4
 8015dda:	e7e4      	b.n	8015da6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8015ddc:	2c00      	cmp	r4, #0
 8015dde:	d0f6      	beq.n	8015dce <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8015de0:	9e00      	ldr	r6, [sp, #0]
 8015de2:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 8015de6:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8015dea:	b2a7      	uxth	r7, r4
 8015dec:	122e      	asrs	r6, r5, #8
 8015dee:	43e4      	mvns	r4, r4
 8015df0:	b2e4      	uxtb	r4, r4
 8015df2:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8015df6:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8015dfa:	fb16 f604 	smulbb	r6, r6, r4
 8015dfe:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8015e02:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8015e06:	00ed      	lsls	r5, r5, #3
 8015e08:	fb0c 6c07 	mla	ip, ip, r7, r6
 8015e0c:	b2ed      	uxtb	r5, r5
 8015e0e:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8015e12:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8015e16:	fb15 f504 	smulbb	r5, r5, r4
 8015e1a:	fa5f fe8e 	uxtb.w	lr, lr
 8015e1e:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8015e22:	fb0e 5507 	mla	r5, lr, r7, r5
 8015e26:	fb1a fa04 	smulbb	sl, sl, r4
 8015e2a:	fa1f fc8c 	uxth.w	ip, ip
 8015e2e:	b2ad      	uxth	r5, r5
 8015e30:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8015e34:	fb06 a607 	mla	r6, r6, r7, sl
 8015e38:	f10c 0401 	add.w	r4, ip, #1
 8015e3c:	f105 0a01 	add.w	sl, r5, #1
 8015e40:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8015e44:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8015e48:	b2b6      	uxth	r6, r6
 8015e4a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015e4e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8015e52:	ea4a 0c0c 	orr.w	ip, sl, ip
 8015e56:	f106 0a01 	add.w	sl, r6, #1
 8015e5a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8015e5e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015e62:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015e66:	ea4c 0c0a 	orr.w	ip, ip, sl
 8015e6a:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8015e6e:	e7ae      	b.n	8015dce <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8015e70:	b005      	add	sp, #20
 8015e72:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015e76 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015e76:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015e7a:	b085      	sub	sp, #20
 8015e7c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8015e7e:	9203      	str	r2, [sp, #12]
 8015e80:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 8015e84:	9201      	str	r2, [sp, #4]
 8015e86:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8015e8a:	9100      	str	r1, [sp, #0]
 8015e8c:	6841      	ldr	r1, [r0, #4]
 8015e8e:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 8015e92:	fb01 2404 	mla	r4, r1, r4, r2
 8015e96:	6802      	ldr	r2, [r0, #0]
 8015e98:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8015e9c:	f8de 2000 	ldr.w	r2, [lr]
 8015ea0:	9202      	str	r2, [sp, #8]
 8015ea2:	9a01      	ldr	r2, [sp, #4]
 8015ea4:	43d6      	mvns	r6, r2
 8015ea6:	b2f6      	uxtb	r6, r6
 8015ea8:	9a00      	ldr	r2, [sp, #0]
 8015eaa:	2a00      	cmp	r2, #0
 8015eac:	dc03      	bgt.n	8015eb6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8015eae:	9a03      	ldr	r2, [sp, #12]
 8015eb0:	2a00      	cmp	r2, #0
 8015eb2:	f340 8124 	ble.w	80160fe <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8015eb6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8015eb8:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8015ebc:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8015ec0:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8015ec4:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8015ec6:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8015eca:	2b00      	cmp	r3, #0
 8015ecc:	dd0e      	ble.n	8015eec <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8015ece:	1408      	asrs	r0, r1, #16
 8015ed0:	d405      	bmi.n	8015ede <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8015ed2:	4560      	cmp	r0, ip
 8015ed4:	da03      	bge.n	8015ede <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8015ed6:	1410      	asrs	r0, r2, #16
 8015ed8:	d401      	bmi.n	8015ede <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8015eda:	42b8      	cmp	r0, r7
 8015edc:	db07      	blt.n	8015eee <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8015ede:	9811      	ldr	r0, [sp, #68]	; 0x44
 8015ee0:	4401      	add	r1, r0
 8015ee2:	9812      	ldr	r0, [sp, #72]	; 0x48
 8015ee4:	3b01      	subs	r3, #1
 8015ee6:	4402      	add	r2, r0
 8015ee8:	3402      	adds	r4, #2
 8015eea:	e7ee      	b.n	8015eca <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8015eec:	d06e      	beq.n	8015fcc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8015eee:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8015ef0:	1e58      	subs	r0, r3, #1
 8015ef2:	fb05 1500 	mla	r5, r5, r0, r1
 8015ef6:	142d      	asrs	r5, r5, #16
 8015ef8:	d45c      	bmi.n	8015fb4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8015efa:	4565      	cmp	r5, ip
 8015efc:	da5a      	bge.n	8015fb4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8015efe:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8015f00:	fb05 2000 	mla	r0, r5, r0, r2
 8015f04:	1400      	asrs	r0, r0, #16
 8015f06:	d455      	bmi.n	8015fb4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8015f08:	42b8      	cmp	r0, r7
 8015f0a:	da53      	bge.n	8015fb4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8015f0c:	f8bd b004 	ldrh.w	fp, [sp, #4]
 8015f10:	4699      	mov	r9, r3
 8015f12:	46a2      	mov	sl, r4
 8015f14:	f1b9 0f00 	cmp.w	r9, #0
 8015f18:	dd54      	ble.n	8015fc4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8015f1a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8015f1e:	140d      	asrs	r5, r1, #16
 8015f20:	1410      	asrs	r0, r2, #16
 8015f22:	fb07 5000 	mla	r0, r7, r0, r5
 8015f26:	9d02      	ldr	r5, [sp, #8]
 8015f28:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8015f2c:	f8ba 5000 	ldrh.w	r5, [sl]
 8015f30:	122f      	asrs	r7, r5, #8
 8015f32:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8015f36:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8015f3a:	fb17 f706 	smulbb	r7, r7, r6
 8015f3e:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8015f42:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8015f46:	00ed      	lsls	r5, r5, #3
 8015f48:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8015f4c:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8015f50:	10c7      	asrs	r7, r0, #3
 8015f52:	b2ed      	uxtb	r5, r5
 8015f54:	00c0      	lsls	r0, r0, #3
 8015f56:	fb18 f806 	smulbb	r8, r8, r6
 8015f5a:	fb15 f506 	smulbb	r5, r5, r6
 8015f5e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8015f62:	b2c0      	uxtb	r0, r0
 8015f64:	fa1f fc8c 	uxth.w	ip, ip
 8015f68:	fb07 870b 	mla	r7, r7, fp, r8
 8015f6c:	fb00 500b 	mla	r0, r0, fp, r5
 8015f70:	b280      	uxth	r0, r0
 8015f72:	b2bf      	uxth	r7, r7
 8015f74:	f10c 0501 	add.w	r5, ip, #1
 8015f78:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8015f7c:	f107 0801 	add.w	r8, r7, #1
 8015f80:	1c45      	adds	r5, r0, #1
 8015f82:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8015f86:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8015f8a:	9811      	ldr	r0, [sp, #68]	; 0x44
 8015f8c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8015f90:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8015f94:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8015f98:	ea45 0c0c 	orr.w	ip, r5, ip
 8015f9c:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8015fa0:	4401      	add	r1, r0
 8015fa2:	9812      	ldr	r0, [sp, #72]	; 0x48
 8015fa4:	ea4c 0c08 	orr.w	ip, ip, r8
 8015fa8:	f82a cb02 	strh.w	ip, [sl], #2
 8015fac:	4402      	add	r2, r0
 8015fae:	f109 39ff 	add.w	r9, r9, #4294967295
 8015fb2:	e7af      	b.n	8015f14 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8015fb4:	f8bd a004 	ldrh.w	sl, [sp, #4]
 8015fb8:	f04f 0800 	mov.w	r8, #0
 8015fbc:	eb03 0008 	add.w	r0, r3, r8
 8015fc0:	2800      	cmp	r0, #0
 8015fc2:	dc41      	bgt.n	8016048 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8015fc4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015fc8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015fcc:	9b00      	ldr	r3, [sp, #0]
 8015fce:	2b00      	cmp	r3, #0
 8015fd0:	f340 8095 	ble.w	80160fe <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8015fd4:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015fd8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8015fdc:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8015fe0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015fe2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015fe6:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015fea:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015fee:	eef0 6a62 	vmov.f32	s13, s5
 8015ff2:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015ff6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015ffa:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015ffe:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 8016002:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016006:	eef0 6a43 	vmov.f32	s13, s6
 801600a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801600e:	ee12 2a90 	vmov	r2, s5
 8016012:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016016:	fb92 f3f3 	sdiv	r3, r2, r3
 801601a:	ee13 2a10 	vmov	r2, s6
 801601e:	9311      	str	r3, [sp, #68]	; 0x44
 8016020:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016022:	fb92 f3f3 	sdiv	r3, r2, r3
 8016026:	9312      	str	r3, [sp, #72]	; 0x48
 8016028:	9b00      	ldr	r3, [sp, #0]
 801602a:	9a03      	ldr	r2, [sp, #12]
 801602c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016030:	3b01      	subs	r3, #1
 8016032:	9300      	str	r3, [sp, #0]
 8016034:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 8016038:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801603a:	eeb0 3a67 	vmov.f32	s6, s15
 801603e:	bf08      	it	eq
 8016040:	4613      	moveq	r3, r2
 8016042:	eef0 2a47 	vmov.f32	s5, s14
 8016046:	e72f      	b.n	8015ea8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8016048:	140f      	asrs	r7, r1, #16
 801604a:	d451      	bmi.n	80160f0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801604c:	f8de 5008 	ldr.w	r5, [lr, #8]
 8016050:	42bd      	cmp	r5, r7
 8016052:	dd4d      	ble.n	80160f0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8016054:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8016058:	d44a      	bmi.n	80160f0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801605a:	f8de 000c 	ldr.w	r0, [lr, #12]
 801605e:	4560      	cmp	r0, ip
 8016060:	dd46      	ble.n	80160f0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8016062:	b22d      	sxth	r5, r5
 8016064:	fb0c 7505 	mla	r5, ip, r5, r7
 8016068:	9802      	ldr	r0, [sp, #8]
 801606a:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 801606e:	f06f 0501 	mvn.w	r5, #1
 8016072:	fb05 fb08 	mul.w	fp, r5, r8
 8016076:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801607a:	f834 500b 	ldrh.w	r5, [r4, fp]
 801607e:	122f      	asrs	r7, r5, #8
 8016080:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8016084:	fb17 f706 	smulbb	r7, r7, r6
 8016088:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801608c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8016090:	00ed      	lsls	r5, r5, #3
 8016092:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8016096:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801609a:	10c7      	asrs	r7, r0, #3
 801609c:	b2ed      	uxtb	r5, r5
 801609e:	00c0      	lsls	r0, r0, #3
 80160a0:	fb19 f906 	smulbb	r9, r9, r6
 80160a4:	fb15 f506 	smulbb	r5, r5, r6
 80160a8:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80160ac:	b2c0      	uxtb	r0, r0
 80160ae:	fa1f fc8c 	uxth.w	ip, ip
 80160b2:	fb07 970a 	mla	r7, r7, sl, r9
 80160b6:	fb00 500a 	mla	r0, r0, sl, r5
 80160ba:	b2bf      	uxth	r7, r7
 80160bc:	b280      	uxth	r0, r0
 80160be:	f10c 0501 	add.w	r5, ip, #1
 80160c2:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80160c6:	f107 0901 	add.w	r9, r7, #1
 80160ca:	1c45      	adds	r5, r0, #1
 80160cc:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80160d0:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 80160d4:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80160d8:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80160dc:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80160e0:	ea45 0c0c 	orr.w	ip, r5, ip
 80160e4:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80160e8:	ea4c 0c09 	orr.w	ip, ip, r9
 80160ec:	f824 c00b 	strh.w	ip, [r4, fp]
 80160f0:	9811      	ldr	r0, [sp, #68]	; 0x44
 80160f2:	4401      	add	r1, r0
 80160f4:	9812      	ldr	r0, [sp, #72]	; 0x48
 80160f6:	f108 38ff 	add.w	r8, r8, #4294967295
 80160fa:	4402      	add	r2, r0
 80160fc:	e75e      	b.n	8015fbc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 80160fe:	b005      	add	sp, #20
 8016100:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016104 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016104:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016108:	b085      	sub	sp, #20
 801610a:	4693      	mov	fp, r2
 801610c:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801610e:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8016110:	6870      	ldr	r0, [r6, #4]
 8016112:	9101      	str	r1, [sp, #4]
 8016114:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8016118:	fb00 2404 	mla	r4, r0, r4, r2
 801611c:	6832      	ldr	r2, [r6, #0]
 801611e:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 8016122:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8016126:	682a      	ldr	r2, [r5, #0]
 8016128:	9202      	str	r2, [sp, #8]
 801612a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801612e:	9a01      	ldr	r2, [sp, #4]
 8016130:	2a00      	cmp	r2, #0
 8016132:	dc03      	bgt.n	801613c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8016134:	f1bb 0f00 	cmp.w	fp, #0
 8016138:	f340 809a 	ble.w	8016270 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801613c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801613e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8016142:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8016146:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801614a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801614c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8016150:	2b00      	cmp	r3, #0
 8016152:	dd0c      	ble.n	801616e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8016154:	1406      	asrs	r6, r0, #16
 8016156:	d405      	bmi.n	8016164 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8016158:	454e      	cmp	r6, r9
 801615a:	da03      	bge.n	8016164 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801615c:	1416      	asrs	r6, r2, #16
 801615e:	d401      	bmi.n	8016164 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8016160:	4546      	cmp	r6, r8
 8016162:	db05      	blt.n	8016170 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8016164:	4470      	add	r0, lr
 8016166:	4462      	add	r2, ip
 8016168:	3b01      	subs	r3, #1
 801616a:	3402      	adds	r4, #2
 801616c:	e7f0      	b.n	8016150 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801616e:	d00f      	beq.n	8016190 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8016170:	1e5e      	subs	r6, r3, #1
 8016172:	fb0e 0706 	mla	r7, lr, r6, r0
 8016176:	143f      	asrs	r7, r7, #16
 8016178:	d541      	bpl.n	80161fe <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 801617a:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801617e:	4698      	mov	r8, r3
 8016180:	9603      	str	r6, [sp, #12]
 8016182:	f1b8 0f00 	cmp.w	r8, #0
 8016186:	dc56      	bgt.n	8016236 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 8016188:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801618c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8016190:	9b01      	ldr	r3, [sp, #4]
 8016192:	2b00      	cmp	r3, #0
 8016194:	dd6c      	ble.n	8016270 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8016196:	ee30 0a04 	vadd.f32	s0, s0, s8
 801619a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801619e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80161a2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80161a4:	ee31 1a05 	vadd.f32	s2, s2, s10
 80161a8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80161ac:	eeb0 6a62 	vmov.f32	s12, s5
 80161b0:	ee61 7a27 	vmul.f32	s15, s2, s15
 80161b4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80161b8:	ee77 2a62 	vsub.f32	s5, s14, s5
 80161bc:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 80161c0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80161c4:	eeb0 6a43 	vmov.f32	s12, s6
 80161c8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80161cc:	ee12 2a90 	vmov	r2, s5
 80161d0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80161d4:	fb92 fef3 	sdiv	lr, r2, r3
 80161d8:	ee13 2a10 	vmov	r2, s6
 80161dc:	fb92 fcf3 	sdiv	ip, r2, r3
 80161e0:	9b01      	ldr	r3, [sp, #4]
 80161e2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80161e6:	3b01      	subs	r3, #1
 80161e8:	9301      	str	r3, [sp, #4]
 80161ea:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80161ee:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80161f0:	eeb0 3a67 	vmov.f32	s6, s15
 80161f4:	bf08      	it	eq
 80161f6:	465b      	moveq	r3, fp
 80161f8:	eef0 2a47 	vmov.f32	s5, s14
 80161fc:	e797      	b.n	801612e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 80161fe:	454f      	cmp	r7, r9
 8016200:	dabb      	bge.n	801617a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8016202:	fb0c 2606 	mla	r6, ip, r6, r2
 8016206:	1436      	asrs	r6, r6, #16
 8016208:	d4b7      	bmi.n	801617a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801620a:	4546      	cmp	r6, r8
 801620c:	dab5      	bge.n	801617a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801620e:	461e      	mov	r6, r3
 8016210:	46a0      	mov	r8, r4
 8016212:	2e00      	cmp	r6, #0
 8016214:	ddb8      	ble.n	8016188 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8016216:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801621a:	9902      	ldr	r1, [sp, #8]
 801621c:	1417      	asrs	r7, r2, #16
 801621e:	ea4f 4920 	mov.w	r9, r0, asr #16
 8016222:	fb0a 9707 	mla	r7, sl, r7, r9
 8016226:	4470      	add	r0, lr
 8016228:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801622c:	f828 7b02 	strh.w	r7, [r8], #2
 8016230:	4462      	add	r2, ip
 8016232:	3e01      	subs	r6, #1
 8016234:	e7ed      	b.n	8016212 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 8016236:	ea5f 4920 	movs.w	r9, r0, asr #16
 801623a:	d414      	bmi.n	8016266 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801623c:	68ae      	ldr	r6, [r5, #8]
 801623e:	454e      	cmp	r6, r9
 8016240:	dd11      	ble.n	8016266 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8016242:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8016246:	d40e      	bmi.n	8016266 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8016248:	68ef      	ldr	r7, [r5, #12]
 801624a:	4557      	cmp	r7, sl
 801624c:	dd0b      	ble.n	8016266 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801624e:	b236      	sxth	r6, r6
 8016250:	fb0a 9606 	mla	r6, sl, r6, r9
 8016254:	9f02      	ldr	r7, [sp, #8]
 8016256:	f06f 0101 	mvn.w	r1, #1
 801625a:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801625e:	fb01 f608 	mul.w	r6, r1, r8
 8016262:	9903      	ldr	r1, [sp, #12]
 8016264:	538f      	strh	r7, [r1, r6]
 8016266:	4470      	add	r0, lr
 8016268:	4462      	add	r2, ip
 801626a:	f108 38ff 	add.w	r8, r8, #4294967295
 801626e:	e788      	b.n	8016182 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8016270:	b005      	add	sp, #20
 8016272:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016276 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016276:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801627a:	b087      	sub	sp, #28
 801627c:	468b      	mov	fp, r1
 801627e:	9815      	ldr	r0, [sp, #84]	; 0x54
 8016280:	9203      	str	r2, [sp, #12]
 8016282:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8016286:	9204      	str	r2, [sp, #16]
 8016288:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 801628c:	6841      	ldr	r1, [r0, #4]
 801628e:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 8016292:	fb01 2505 	mla	r5, r1, r5, r2
 8016296:	6802      	ldr	r2, [r0, #0]
 8016298:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 801629c:	f8d9 2000 	ldr.w	r2, [r9]
 80162a0:	9201      	str	r2, [sp, #4]
 80162a2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80162a6:	f1bb 0f00 	cmp.w	fp, #0
 80162aa:	dc03      	bgt.n	80162b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80162ac:	9a03      	ldr	r2, [sp, #12]
 80162ae:	2a00      	cmp	r2, #0
 80162b0:	f340 8159 	ble.w	8016566 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 80162b4:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80162b6:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 80162ba:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 80162be:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80162c2:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80162c4:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80162c8:	2b00      	cmp	r3, #0
 80162ca:	dd0e      	ble.n	80162ea <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80162cc:	1402      	asrs	r2, r0, #16
 80162ce:	d405      	bmi.n	80162dc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80162d0:	42ba      	cmp	r2, r7
 80162d2:	da03      	bge.n	80162dc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80162d4:	140a      	asrs	r2, r1, #16
 80162d6:	d401      	bmi.n	80162dc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80162d8:	42b2      	cmp	r2, r6
 80162da:	db07      	blt.n	80162ec <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80162dc:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80162de:	4410      	add	r0, r2
 80162e0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80162e2:	3b01      	subs	r3, #1
 80162e4:	4411      	add	r1, r2
 80162e6:	3502      	adds	r5, #2
 80162e8:	e7ee      	b.n	80162c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80162ea:	d017      	beq.n	801631c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 80162ec:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80162ee:	1e5a      	subs	r2, r3, #1
 80162f0:	fb04 0402 	mla	r4, r4, r2, r0
 80162f4:	1424      	asrs	r4, r4, #16
 80162f6:	d409      	bmi.n	801630c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80162f8:	42bc      	cmp	r4, r7
 80162fa:	da07      	bge.n	801630c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80162fc:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80162fe:	fb04 1202 	mla	r2, r4, r2, r1
 8016302:	1412      	asrs	r2, r2, #16
 8016304:	d402      	bmi.n	801630c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8016306:	42b2      	cmp	r2, r6
 8016308:	f2c0 80bf 	blt.w	801648a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801630c:	2700      	movs	r7, #0
 801630e:	19da      	adds	r2, r3, r7
 8016310:	2a00      	cmp	r2, #0
 8016312:	dc3e      	bgt.n	8016392 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8016314:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8016318:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801631c:	f1bb 0f00 	cmp.w	fp, #0
 8016320:	f340 8121 	ble.w	8016566 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8016324:	ee30 0a04 	vadd.f32	s0, s0, s8
 8016328:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801632c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8016330:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016332:	f1bb 0b01 	subs.w	fp, fp, #1
 8016336:	ee31 1a05 	vadd.f32	s2, s2, s10
 801633a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801633e:	eeb0 6a62 	vmov.f32	s12, s5
 8016342:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016346:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801634a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801634e:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8016352:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016356:	eeb0 6a43 	vmov.f32	s12, s6
 801635a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801635e:	ee12 2a90 	vmov	r2, s5
 8016362:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016366:	fb92 f3f3 	sdiv	r3, r2, r3
 801636a:	ee13 2a10 	vmov	r2, s6
 801636e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016372:	9313      	str	r3, [sp, #76]	; 0x4c
 8016374:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016376:	fb92 f3f3 	sdiv	r3, r2, r3
 801637a:	9a03      	ldr	r2, [sp, #12]
 801637c:	9314      	str	r3, [sp, #80]	; 0x50
 801637e:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8016382:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016384:	eeb0 3a67 	vmov.f32	s6, s15
 8016388:	bf08      	it	eq
 801638a:	4613      	moveq	r3, r2
 801638c:	eef0 2a47 	vmov.f32	s5, s14
 8016390:	e789      	b.n	80162a6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8016392:	1406      	asrs	r6, r0, #16
 8016394:	d42d      	bmi.n	80163f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8016396:	f8d9 4008 	ldr.w	r4, [r9, #8]
 801639a:	42b4      	cmp	r4, r6
 801639c:	dd29      	ble.n	80163f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801639e:	ea5f 4c21 	movs.w	ip, r1, asr #16
 80163a2:	d426      	bmi.n	80163f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80163a4:	f8d9 200c 	ldr.w	r2, [r9, #12]
 80163a8:	4562      	cmp	r2, ip
 80163aa:	dd22      	ble.n	80163f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80163ac:	b224      	sxth	r4, r4
 80163ae:	9a01      	ldr	r2, [sp, #4]
 80163b0:	fb0c 6404 	mla	r4, ip, r4, r6
 80163b4:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 80163b8:	0e22      	lsrs	r2, r4, #24
 80163ba:	d01a      	beq.n	80163f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80163bc:	9e04      	ldr	r6, [sp, #16]
 80163be:	4372      	muls	r2, r6
 80163c0:	1c56      	adds	r6, r2, #1
 80163c2:	eb06 2222 	add.w	r2, r6, r2, asr #8
 80163c6:	1212      	asrs	r2, r2, #8
 80163c8:	0a26      	lsrs	r6, r4, #8
 80163ca:	2aff      	cmp	r2, #255	; 0xff
 80163cc:	9605      	str	r6, [sp, #20]
 80163ce:	d116      	bne.n	80163fe <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 80163d0:	f06f 0201 	mvn.w	r2, #1
 80163d4:	fb02 fc07 	mul.w	ip, r2, r7
 80163d8:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 80163dc:	0962      	lsrs	r2, r4, #5
 80163de:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80163e2:	f026 0607 	bic.w	r6, r6, #7
 80163e6:	4316      	orrs	r6, r2
 80163e8:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 80163ec:	4326      	orrs	r6, r4
 80163ee:	f825 600c 	strh.w	r6, [r5, ip]
 80163f2:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80163f4:	4410      	add	r0, r2
 80163f6:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80163f8:	3f01      	subs	r7, #1
 80163fa:	4411      	add	r1, r2
 80163fc:	e787      	b.n	801630e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80163fe:	f06f 0601 	mvn.w	r6, #1
 8016402:	437e      	muls	r6, r7
 8016404:	fa1f fa82 	uxth.w	sl, r2
 8016408:	f835 8006 	ldrh.w	r8, [r5, r6]
 801640c:	9602      	str	r6, [sp, #8]
 801640e:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8016412:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 8016416:	43d2      	mvns	r2, r2
 8016418:	b2d2      	uxtb	r2, r2
 801641a:	fb1c fc0a 	smulbb	ip, ip, sl
 801641e:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8016422:	fb0e ce02 	mla	lr, lr, r2, ip
 8016426:	b2e4      	uxtb	r4, r4
 8016428:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801642c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8016430:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8016434:	fa5f f888 	uxtb.w	r8, r8
 8016438:	fb14 f40a 	smulbb	r4, r4, sl
 801643c:	fb08 4402 	mla	r4, r8, r2, r4
 8016440:	fa1f fe8e 	uxth.w	lr, lr
 8016444:	fb16 f60a 	smulbb	r6, r6, sl
 8016448:	b2a4      	uxth	r4, r4
 801644a:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801644e:	fb0c 6c02 	mla	ip, ip, r2, r6
 8016452:	f10e 0201 	add.w	r2, lr, #1
 8016456:	1c66      	adds	r6, r4, #1
 8016458:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801645c:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8016460:	fa1f fc8c 	uxth.w	ip, ip
 8016464:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8016468:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801646c:	ea46 0e0e 	orr.w	lr, r6, lr
 8016470:	f10c 0601 	add.w	r6, ip, #1
 8016474:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8016478:	0976      	lsrs	r6, r6, #5
 801647a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801647e:	9a02      	ldr	r2, [sp, #8]
 8016480:	ea4e 0e06 	orr.w	lr, lr, r6
 8016484:	f825 e002 	strh.w	lr, [r5, r2]
 8016488:	e7b3      	b.n	80163f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801648a:	f04f 0800 	mov.w	r8, #0
 801648e:	eba3 0208 	sub.w	r2, r3, r8
 8016492:	2a00      	cmp	r2, #0
 8016494:	f77f af3e 	ble.w	8016314 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8016498:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 801649c:	1404      	asrs	r4, r0, #16
 801649e:	140a      	asrs	r2, r1, #16
 80164a0:	fb06 4202 	mla	r2, r6, r2, r4
 80164a4:	9c01      	ldr	r4, [sp, #4]
 80164a6:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 80164aa:	0e22      	lsrs	r2, r4, #24
 80164ac:	d016      	beq.n	80164dc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 80164ae:	9e04      	ldr	r6, [sp, #16]
 80164b0:	4372      	muls	r2, r6
 80164b2:	1c56      	adds	r6, r2, #1
 80164b4:	eb06 2222 	add.w	r2, r6, r2, asr #8
 80164b8:	1212      	asrs	r2, r2, #8
 80164ba:	2aff      	cmp	r2, #255	; 0xff
 80164bc:	ea4f 2614 	mov.w	r6, r4, lsr #8
 80164c0:	d113      	bne.n	80164ea <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 80164c2:	0962      	lsrs	r2, r4, #5
 80164c4:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 80164c8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80164cc:	f026 0607 	bic.w	r6, r6, #7
 80164d0:	4316      	orrs	r6, r2
 80164d2:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 80164d6:	4326      	orrs	r6, r4
 80164d8:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 80164dc:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80164de:	4410      	add	r0, r2
 80164e0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80164e2:	f108 0801 	add.w	r8, r8, #1
 80164e6:	4411      	add	r1, r2
 80164e8:	e7d1      	b.n	801648e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 80164ea:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 80164ee:	fa1f fa82 	uxth.w	sl, r2
 80164f2:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80164f6:	f3c4 4707 	ubfx	r7, r4, #16, #8
 80164fa:	43d2      	mvns	r2, r2
 80164fc:	b2d2      	uxtb	r2, r2
 80164fe:	fb17 f70a 	smulbb	r7, r7, sl
 8016502:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8016506:	fb0c 7c02 	mla	ip, ip, r2, r7
 801650a:	b2e4      	uxtb	r4, r4
 801650c:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8016510:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8016514:	fa5f fe8e 	uxtb.w	lr, lr
 8016518:	fb14 f40a 	smulbb	r4, r4, sl
 801651c:	fb0e 4402 	mla	r4, lr, r2, r4
 8016520:	b2f6      	uxtb	r6, r6
 8016522:	fa1f fc8c 	uxth.w	ip, ip
 8016526:	fb16 f60a 	smulbb	r6, r6, sl
 801652a:	b2a4      	uxth	r4, r4
 801652c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8016530:	fb07 6702 	mla	r7, r7, r2, r6
 8016534:	f10c 0201 	add.w	r2, ip, #1
 8016538:	1c66      	adds	r6, r4, #1
 801653a:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801653e:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8016542:	b2bf      	uxth	r7, r7
 8016544:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8016548:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801654c:	ea46 0c0c 	orr.w	ip, r6, ip
 8016550:	1c7e      	adds	r6, r7, #1
 8016552:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8016556:	0976      	lsrs	r6, r6, #5
 8016558:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801655c:	ea4c 0c06 	orr.w	ip, ip, r6
 8016560:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 8016564:	e7ba      	b.n	80164dc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 8016566:	b007      	add	sp, #28
 8016568:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801656c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801656c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016570:	b085      	sub	sp, #20
 8016572:	468b      	mov	fp, r1
 8016574:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8016576:	9203      	str	r2, [sp, #12]
 8016578:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801657c:	6841      	ldr	r1, [r0, #4]
 801657e:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 8016582:	fb01 2404 	mla	r4, r1, r4, r2
 8016586:	6802      	ldr	r2, [r0, #0]
 8016588:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801658c:	f8d8 2000 	ldr.w	r2, [r8]
 8016590:	9201      	str	r2, [sp, #4]
 8016592:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8016596:	f1bb 0f00 	cmp.w	fp, #0
 801659a:	dc03      	bgt.n	80165a4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801659c:	9a03      	ldr	r2, [sp, #12]
 801659e:	2a00      	cmp	r2, #0
 80165a0:	f340 814f 	ble.w	8016842 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 80165a4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80165a6:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 80165aa:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 80165ae:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80165b2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80165b4:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80165b8:	2b00      	cmp	r3, #0
 80165ba:	dd0e      	ble.n	80165da <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80165bc:	1408      	asrs	r0, r1, #16
 80165be:	d405      	bmi.n	80165cc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80165c0:	42b8      	cmp	r0, r7
 80165c2:	da03      	bge.n	80165cc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80165c4:	1410      	asrs	r0, r2, #16
 80165c6:	d401      	bmi.n	80165cc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80165c8:	42b0      	cmp	r0, r6
 80165ca:	db07      	blt.n	80165dc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80165cc:	9811      	ldr	r0, [sp, #68]	; 0x44
 80165ce:	4401      	add	r1, r0
 80165d0:	9812      	ldr	r0, [sp, #72]	; 0x48
 80165d2:	3b01      	subs	r3, #1
 80165d4:	4402      	add	r2, r0
 80165d6:	3402      	adds	r4, #2
 80165d8:	e7ee      	b.n	80165b8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 80165da:	d017      	beq.n	801660c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80165dc:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80165de:	1e58      	subs	r0, r3, #1
 80165e0:	fb05 1500 	mla	r5, r5, r0, r1
 80165e4:	142d      	asrs	r5, r5, #16
 80165e6:	d409      	bmi.n	80165fc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80165e8:	42bd      	cmp	r5, r7
 80165ea:	da07      	bge.n	80165fc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80165ec:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80165ee:	fb05 2000 	mla	r0, r5, r0, r2
 80165f2:	1400      	asrs	r0, r0, #16
 80165f4:	d402      	bmi.n	80165fc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80165f6:	42b0      	cmp	r0, r6
 80165f8:	f2c0 80ba 	blt.w	8016770 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80165fc:	2600      	movs	r6, #0
 80165fe:	1998      	adds	r0, r3, r6
 8016600:	2800      	cmp	r0, #0
 8016602:	dc3e      	bgt.n	8016682 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8016604:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8016608:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801660c:	f1bb 0f00 	cmp.w	fp, #0
 8016610:	f340 8117 	ble.w	8016842 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8016614:	ee30 0a04 	vadd.f32	s0, s0, s8
 8016618:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801661c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8016620:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016622:	f1bb 0b01 	subs.w	fp, fp, #1
 8016626:	ee31 1a05 	vadd.f32	s2, s2, s10
 801662a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801662e:	eeb0 6a62 	vmov.f32	s12, s5
 8016632:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016636:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801663a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801663e:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8016642:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016646:	eeb0 6a43 	vmov.f32	s12, s6
 801664a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801664e:	ee12 2a90 	vmov	r2, s5
 8016652:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016656:	fb92 f3f3 	sdiv	r3, r2, r3
 801665a:	ee13 2a10 	vmov	r2, s6
 801665e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016662:	9311      	str	r3, [sp, #68]	; 0x44
 8016664:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016666:	fb92 f3f3 	sdiv	r3, r2, r3
 801666a:	9a03      	ldr	r2, [sp, #12]
 801666c:	9312      	str	r3, [sp, #72]	; 0x48
 801666e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8016672:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016674:	eeb0 3a67 	vmov.f32	s6, s15
 8016678:	bf08      	it	eq
 801667a:	4613      	moveq	r3, r2
 801667c:	eef0 2a47 	vmov.f32	s5, s14
 8016680:	e789      	b.n	8016596 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8016682:	140f      	asrs	r7, r1, #16
 8016684:	d424      	bmi.n	80166d0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8016686:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801668a:	42bd      	cmp	r5, r7
 801668c:	dd20      	ble.n	80166d0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801668e:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8016692:	d41d      	bmi.n	80166d0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8016694:	f8d8 000c 	ldr.w	r0, [r8, #12]
 8016698:	4560      	cmp	r0, ip
 801669a:	dd19      	ble.n	80166d0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801669c:	b22d      	sxth	r5, r5
 801669e:	fb0c 7505 	mla	r5, ip, r5, r7
 80166a2:	9801      	ldr	r0, [sp, #4]
 80166a4:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 80166a8:	0e07      	lsrs	r7, r0, #24
 80166aa:	2fff      	cmp	r7, #255	; 0xff
 80166ac:	d116      	bne.n	80166dc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80166ae:	f06f 0501 	mvn.w	r5, #1
 80166b2:	fb05 f706 	mul.w	r7, r5, r6
 80166b6:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 80166ba:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 80166be:	0945      	lsrs	r5, r0, #5
 80166c0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80166c4:	ea4c 0505 	orr.w	r5, ip, r5
 80166c8:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 80166cc:	4305      	orrs	r5, r0
 80166ce:	53e5      	strh	r5, [r4, r7]
 80166d0:	9811      	ldr	r0, [sp, #68]	; 0x44
 80166d2:	4401      	add	r1, r0
 80166d4:	9812      	ldr	r0, [sp, #72]	; 0x48
 80166d6:	3e01      	subs	r6, #1
 80166d8:	4402      	add	r2, r0
 80166da:	e790      	b.n	80165fe <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80166dc:	b2fd      	uxtb	r5, r7
 80166de:	2f00      	cmp	r7, #0
 80166e0:	d0f6      	beq.n	80166d0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80166e2:	f06f 0701 	mvn.w	r7, #1
 80166e6:	4377      	muls	r7, r6
 80166e8:	fa1f f985 	uxth.w	r9, r5
 80166ec:	f834 e007 	ldrh.w	lr, [r4, r7]
 80166f0:	9702      	str	r7, [sp, #8]
 80166f2:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80166f6:	f3c0 4707 	ubfx	r7, r0, #16, #8
 80166fa:	43ed      	mvns	r5, r5
 80166fc:	b2ed      	uxtb	r5, r5
 80166fe:	fb17 f709 	smulbb	r7, r7, r9
 8016702:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8016706:	fb0c 7c05 	mla	ip, ip, r5, r7
 801670a:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801670e:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8016712:	b2c0      	uxtb	r0, r0
 8016714:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8016718:	fa5f fe8e 	uxtb.w	lr, lr
 801671c:	fb10 f009 	smulbb	r0, r0, r9
 8016720:	fb0e 0005 	mla	r0, lr, r5, r0
 8016724:	b280      	uxth	r0, r0
 8016726:	fa1f fc8c 	uxth.w	ip, ip
 801672a:	fb1a fa09 	smulbb	sl, sl, r9
 801672e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8016732:	fb07 a705 	mla	r7, r7, r5, sl
 8016736:	f100 0a01 	add.w	sl, r0, #1
 801673a:	f10c 0501 	add.w	r5, ip, #1
 801673e:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8016742:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8016746:	b2bf      	uxth	r7, r7
 8016748:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801674c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8016750:	ea4a 0c0c 	orr.w	ip, sl, ip
 8016754:	f107 0a01 	add.w	sl, r7, #1
 8016758:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801675c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016760:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8016764:	9802      	ldr	r0, [sp, #8]
 8016766:	ea4c 0c0a 	orr.w	ip, ip, sl
 801676a:	f824 c000 	strh.w	ip, [r4, r0]
 801676e:	e7af      	b.n	80166d0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8016770:	f04f 0e00 	mov.w	lr, #0
 8016774:	eba3 000e 	sub.w	r0, r3, lr
 8016778:	2800      	cmp	r0, #0
 801677a:	f77f af43 	ble.w	8016604 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801677e:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8016782:	140d      	asrs	r5, r1, #16
 8016784:	1410      	asrs	r0, r2, #16
 8016786:	fb06 5000 	mla	r0, r6, r0, r5
 801678a:	9d01      	ldr	r5, [sp, #4]
 801678c:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8016790:	0e2e      	lsrs	r6, r5, #24
 8016792:	2eff      	cmp	r6, #255	; 0xff
 8016794:	d112      	bne.n	80167bc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 8016796:	482c      	ldr	r0, [pc, #176]	; (8016848 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 8016798:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801679c:	0968      	lsrs	r0, r5, #5
 801679e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80167a2:	4330      	orrs	r0, r6
 80167a4:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 80167a8:	4328      	orrs	r0, r5
 80167aa:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 80167ae:	9811      	ldr	r0, [sp, #68]	; 0x44
 80167b0:	4401      	add	r1, r0
 80167b2:	9812      	ldr	r0, [sp, #72]	; 0x48
 80167b4:	f10e 0e01 	add.w	lr, lr, #1
 80167b8:	4402      	add	r2, r0
 80167ba:	e7db      	b.n	8016774 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 80167bc:	b2f0      	uxtb	r0, r6
 80167be:	2e00      	cmp	r6, #0
 80167c0:	d0f5      	beq.n	80167ae <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 80167c2:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 80167c6:	fa1f f980 	uxth.w	r9, r0
 80167ca:	ea4f 272c 	mov.w	r7, ip, asr #8
 80167ce:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80167d2:	43c0      	mvns	r0, r0
 80167d4:	b2c0      	uxtb	r0, r0
 80167d6:	fb16 f609 	smulbb	r6, r6, r9
 80167da:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80167de:	fb07 6700 	mla	r7, r7, r0, r6
 80167e2:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80167e6:	ea4f 06ec 	mov.w	r6, ip, asr #3
 80167ea:	b2ed      	uxtb	r5, r5
 80167ec:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80167f0:	fa5f fc8c 	uxtb.w	ip, ip
 80167f4:	fb15 f509 	smulbb	r5, r5, r9
 80167f8:	fb0c 5500 	mla	r5, ip, r0, r5
 80167fc:	b2bf      	uxth	r7, r7
 80167fe:	fb1a fa09 	smulbb	sl, sl, r9
 8016802:	b2ad      	uxth	r5, r5
 8016804:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8016808:	fb06 a600 	mla	r6, r6, r0, sl
 801680c:	1c78      	adds	r0, r7, #1
 801680e:	f105 0a01 	add.w	sl, r5, #1
 8016812:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8016816:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801681a:	b2b6      	uxth	r6, r6
 801681c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8016820:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8016824:	ea4a 0707 	orr.w	r7, sl, r7
 8016828:	f106 0a01 	add.w	sl, r6, #1
 801682c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8016830:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016834:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8016838:	ea47 070a 	orr.w	r7, r7, sl
 801683c:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 8016840:	e7b5      	b.n	80167ae <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8016842:	b005      	add	sp, #20
 8016844:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016848:	fffff800 	.word	0xfffff800

0801684c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801684c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016850:	b087      	sub	sp, #28
 8016852:	468b      	mov	fp, r1
 8016854:	9815      	ldr	r0, [sp, #84]	; 0x54
 8016856:	9203      	str	r2, [sp, #12]
 8016858:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801685c:	9204      	str	r2, [sp, #16]
 801685e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8016862:	6841      	ldr	r1, [r0, #4]
 8016864:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 8016868:	fb01 2404 	mla	r4, r1, r4, r2
 801686c:	6802      	ldr	r2, [r0, #0]
 801686e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8016872:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8016876:	3201      	adds	r2, #1
 8016878:	f022 0201 	bic.w	r2, r2, #1
 801687c:	9200      	str	r2, [sp, #0]
 801687e:	f8d9 2000 	ldr.w	r2, [r9]
 8016882:	9201      	str	r2, [sp, #4]
 8016884:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8016888:	f1bb 0f00 	cmp.w	fp, #0
 801688c:	dc03      	bgt.n	8016896 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801688e:	9a03      	ldr	r2, [sp, #12]
 8016890:	2a00      	cmp	r2, #0
 8016892:	f340 8169 	ble.w	8016b68 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8016896:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8016898:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801689c:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 80168a0:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80168a4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80168a6:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80168aa:	2b00      	cmp	r3, #0
 80168ac:	dd0e      	ble.n	80168cc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80168ae:	1402      	asrs	r2, r0, #16
 80168b0:	d405      	bmi.n	80168be <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80168b2:	42ba      	cmp	r2, r7
 80168b4:	da03      	bge.n	80168be <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80168b6:	140a      	asrs	r2, r1, #16
 80168b8:	d401      	bmi.n	80168be <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80168ba:	42b2      	cmp	r2, r6
 80168bc:	db07      	blt.n	80168ce <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 80168be:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80168c0:	4410      	add	r0, r2
 80168c2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80168c4:	3b01      	subs	r3, #1
 80168c6:	4411      	add	r1, r2
 80168c8:	3402      	adds	r4, #2
 80168ca:	e7ee      	b.n	80168aa <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 80168cc:	d017      	beq.n	80168fe <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 80168ce:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80168d0:	1e5a      	subs	r2, r3, #1
 80168d2:	fb05 0502 	mla	r5, r5, r2, r0
 80168d6:	142d      	asrs	r5, r5, #16
 80168d8:	d409      	bmi.n	80168ee <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80168da:	42bd      	cmp	r5, r7
 80168dc:	da07      	bge.n	80168ee <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80168de:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80168e0:	fb05 1202 	mla	r2, r5, r2, r1
 80168e4:	1412      	asrs	r2, r2, #16
 80168e6:	d402      	bmi.n	80168ee <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80168e8:	42b2      	cmp	r2, r6
 80168ea:	f2c0 80c7 	blt.w	8016a7c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 80168ee:	2700      	movs	r7, #0
 80168f0:	19da      	adds	r2, r3, r7
 80168f2:	2a00      	cmp	r2, #0
 80168f4:	dc3e      	bgt.n	8016974 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 80168f6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80168fa:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80168fe:	f1bb 0f00 	cmp.w	fp, #0
 8016902:	f340 8131 	ble.w	8016b68 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8016906:	ee30 0a04 	vadd.f32	s0, s0, s8
 801690a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801690e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8016912:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016914:	f1bb 0b01 	subs.w	fp, fp, #1
 8016918:	ee31 1a05 	vadd.f32	s2, s2, s10
 801691c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8016920:	eeb0 6a62 	vmov.f32	s12, s5
 8016924:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016928:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801692c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8016930:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8016934:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016938:	eeb0 6a43 	vmov.f32	s12, s6
 801693c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8016940:	ee12 2a90 	vmov	r2, s5
 8016944:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016948:	fb92 f3f3 	sdiv	r3, r2, r3
 801694c:	ee13 2a10 	vmov	r2, s6
 8016950:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016954:	9313      	str	r3, [sp, #76]	; 0x4c
 8016956:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016958:	fb92 f3f3 	sdiv	r3, r2, r3
 801695c:	9a03      	ldr	r2, [sp, #12]
 801695e:	9314      	str	r3, [sp, #80]	; 0x50
 8016960:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8016964:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016966:	eeb0 3a67 	vmov.f32	s6, s15
 801696a:	bf08      	it	eq
 801696c:	4613      	moveq	r3, r2
 801696e:	eef0 2a47 	vmov.f32	s5, s14
 8016972:	e789      	b.n	8016888 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8016974:	1405      	asrs	r5, r0, #16
 8016976:	d435      	bmi.n	80169e4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8016978:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801697c:	42aa      	cmp	r2, r5
 801697e:	dd31      	ble.n	80169e4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8016980:	140e      	asrs	r6, r1, #16
 8016982:	d42f      	bmi.n	80169e4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8016984:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8016988:	42b2      	cmp	r2, r6
 801698a:	dd2b      	ble.n	80169e4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801698c:	9a00      	ldr	r2, [sp, #0]
 801698e:	fb06 5502 	mla	r5, r6, r2, r5
 8016992:	086a      	lsrs	r2, r5, #1
 8016994:	9e01      	ldr	r6, [sp, #4]
 8016996:	5cb2      	ldrb	r2, [r6, r2]
 8016998:	07ee      	lsls	r6, r5, #31
 801699a:	bf54      	ite	pl
 801699c:	f002 020f 	andpl.w	r2, r2, #15
 80169a0:	1112      	asrmi	r2, r2, #4
 80169a2:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80169a6:	b2d2      	uxtb	r2, r2
 80169a8:	b1e2      	cbz	r2, 80169e4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80169aa:	9d04      	ldr	r5, [sp, #16]
 80169ac:	436a      	muls	r2, r5
 80169ae:	1c55      	adds	r5, r2, #1
 80169b0:	eb05 2222 	add.w	r2, r5, r2, asr #8
 80169b4:	4d6e      	ldr	r5, [pc, #440]	; (8016b70 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 80169b6:	682d      	ldr	r5, [r5, #0]
 80169b8:	1212      	asrs	r2, r2, #8
 80169ba:	0a2e      	lsrs	r6, r5, #8
 80169bc:	2aff      	cmp	r2, #255	; 0xff
 80169be:	9605      	str	r6, [sp, #20]
 80169c0:	d116      	bne.n	80169f0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80169c2:	f06f 0201 	mvn.w	r2, #1
 80169c6:	fb02 fc07 	mul.w	ip, r2, r7
 80169ca:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 80169ce:	096a      	lsrs	r2, r5, #5
 80169d0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80169d4:	f026 0607 	bic.w	r6, r6, #7
 80169d8:	4316      	orrs	r6, r2
 80169da:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 80169de:	432e      	orrs	r6, r5
 80169e0:	f824 600c 	strh.w	r6, [r4, ip]
 80169e4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80169e6:	4410      	add	r0, r2
 80169e8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80169ea:	3f01      	subs	r7, #1
 80169ec:	4411      	add	r1, r2
 80169ee:	e77f      	b.n	80168f0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 80169f0:	f06f 0601 	mvn.w	r6, #1
 80169f4:	437e      	muls	r6, r7
 80169f6:	fa1f fa82 	uxth.w	sl, r2
 80169fa:	f834 8006 	ldrh.w	r8, [r4, r6]
 80169fe:	9602      	str	r6, [sp, #8]
 8016a00:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8016a04:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 8016a08:	43d2      	mvns	r2, r2
 8016a0a:	b2d2      	uxtb	r2, r2
 8016a0c:	fb1c fc0a 	smulbb	ip, ip, sl
 8016a10:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8016a14:	fb0e ce02 	mla	lr, lr, r2, ip
 8016a18:	b2ed      	uxtb	r5, r5
 8016a1a:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8016a1e:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8016a22:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8016a26:	fa5f f888 	uxtb.w	r8, r8
 8016a2a:	fb15 f50a 	smulbb	r5, r5, sl
 8016a2e:	fb08 5502 	mla	r5, r8, r2, r5
 8016a32:	fa1f fe8e 	uxth.w	lr, lr
 8016a36:	fb16 f60a 	smulbb	r6, r6, sl
 8016a3a:	b2ad      	uxth	r5, r5
 8016a3c:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8016a40:	fb0c 6c02 	mla	ip, ip, r2, r6
 8016a44:	f10e 0201 	add.w	r2, lr, #1
 8016a48:	1c6e      	adds	r6, r5, #1
 8016a4a:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8016a4e:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 8016a52:	fa1f fc8c 	uxth.w	ip, ip
 8016a56:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8016a5a:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8016a5e:	ea46 0e0e 	orr.w	lr, r6, lr
 8016a62:	f10c 0601 	add.w	r6, ip, #1
 8016a66:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8016a6a:	0976      	lsrs	r6, r6, #5
 8016a6c:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8016a70:	9a02      	ldr	r2, [sp, #8]
 8016a72:	ea4e 0e06 	orr.w	lr, lr, r6
 8016a76:	f824 e002 	strh.w	lr, [r4, r2]
 8016a7a:	e7b3      	b.n	80169e4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8016a7c:	f04f 0800 	mov.w	r8, #0
 8016a80:	eba3 0208 	sub.w	r2, r3, r8
 8016a84:	2a00      	cmp	r2, #0
 8016a86:	f77f af36 	ble.w	80168f6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8016a8a:	9e00      	ldr	r6, [sp, #0]
 8016a8c:	1402      	asrs	r2, r0, #16
 8016a8e:	140d      	asrs	r5, r1, #16
 8016a90:	fb06 2505 	mla	r5, r6, r5, r2
 8016a94:	086a      	lsrs	r2, r5, #1
 8016a96:	9e01      	ldr	r6, [sp, #4]
 8016a98:	5cb2      	ldrb	r2, [r6, r2]
 8016a9a:	07ed      	lsls	r5, r5, #31
 8016a9c:	bf54      	ite	pl
 8016a9e:	f002 020f 	andpl.w	r2, r2, #15
 8016aa2:	1112      	asrmi	r2, r2, #4
 8016aa4:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8016aa8:	b2d2      	uxtb	r2, r2
 8016aaa:	b1c2      	cbz	r2, 8016ade <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8016aac:	9d04      	ldr	r5, [sp, #16]
 8016aae:	436a      	muls	r2, r5
 8016ab0:	1c55      	adds	r5, r2, #1
 8016ab2:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8016ab6:	4d2e      	ldr	r5, [pc, #184]	; (8016b70 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 8016ab8:	1212      	asrs	r2, r2, #8
 8016aba:	682e      	ldr	r6, [r5, #0]
 8016abc:	2aff      	cmp	r2, #255	; 0xff
 8016abe:	ea4f 2516 	mov.w	r5, r6, lsr #8
 8016ac2:	d113      	bne.n	8016aec <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8016ac4:	0972      	lsrs	r2, r6, #5
 8016ac6:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 8016aca:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8016ace:	f025 0507 	bic.w	r5, r5, #7
 8016ad2:	4315      	orrs	r5, r2
 8016ad4:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8016ad8:	4335      	orrs	r5, r6
 8016ada:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 8016ade:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8016ae0:	4410      	add	r0, r2
 8016ae2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8016ae4:	f108 0801 	add.w	r8, r8, #1
 8016ae8:	4411      	add	r1, r2
 8016aea:	e7c9      	b.n	8016a80 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8016aec:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8016af0:	fa1f fa82 	uxth.w	sl, r2
 8016af4:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8016af8:	f3c6 4707 	ubfx	r7, r6, #16, #8
 8016afc:	43d2      	mvns	r2, r2
 8016afe:	b2d2      	uxtb	r2, r2
 8016b00:	fb17 f70a 	smulbb	r7, r7, sl
 8016b04:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8016b08:	fb0c 7c02 	mla	ip, ip, r2, r7
 8016b0c:	b2f6      	uxtb	r6, r6
 8016b0e:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8016b12:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8016b16:	fa5f fe8e 	uxtb.w	lr, lr
 8016b1a:	fb16 f60a 	smulbb	r6, r6, sl
 8016b1e:	fb0e 6602 	mla	r6, lr, r2, r6
 8016b22:	b2ed      	uxtb	r5, r5
 8016b24:	fa1f fc8c 	uxth.w	ip, ip
 8016b28:	fb15 f50a 	smulbb	r5, r5, sl
 8016b2c:	b2b6      	uxth	r6, r6
 8016b2e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8016b32:	fb07 5702 	mla	r7, r7, r2, r5
 8016b36:	f10c 0201 	add.w	r2, ip, #1
 8016b3a:	1c75      	adds	r5, r6, #1
 8016b3c:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8016b40:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 8016b44:	b2bf      	uxth	r7, r7
 8016b46:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8016b4a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8016b4e:	ea45 0c0c 	orr.w	ip, r5, ip
 8016b52:	1c7d      	adds	r5, r7, #1
 8016b54:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 8016b58:	096d      	lsrs	r5, r5, #5
 8016b5a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8016b5e:	ea4c 0c05 	orr.w	ip, ip, r5
 8016b62:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 8016b66:	e7ba      	b.n	8016ade <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8016b68:	b007      	add	sp, #28
 8016b6a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016b6e:	bf00      	nop
 8016b70:	20015614 	.word	0x20015614

08016b74 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016b74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016b78:	b087      	sub	sp, #28
 8016b7a:	f8df 830c 	ldr.w	r8, [pc, #780]	; 8016e88 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 8016b7e:	9815      	ldr	r0, [sp, #84]	; 0x54
 8016b80:	9205      	str	r2, [sp, #20]
 8016b82:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8016b86:	9101      	str	r1, [sp, #4]
 8016b88:	6841      	ldr	r1, [r0, #4]
 8016b8a:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 8016b8e:	fb01 2404 	mla	r4, r1, r4, r2
 8016b92:	6802      	ldr	r2, [r0, #0]
 8016b94:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8016b98:	f8db 2008 	ldr.w	r2, [fp, #8]
 8016b9c:	3201      	adds	r2, #1
 8016b9e:	f022 0201 	bic.w	r2, r2, #1
 8016ba2:	9202      	str	r2, [sp, #8]
 8016ba4:	f8db 2000 	ldr.w	r2, [fp]
 8016ba8:	9203      	str	r2, [sp, #12]
 8016baa:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8016bae:	9a01      	ldr	r2, [sp, #4]
 8016bb0:	2a00      	cmp	r2, #0
 8016bb2:	dc03      	bgt.n	8016bbc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8016bb4:	9a05      	ldr	r2, [sp, #20]
 8016bb6:	2a00      	cmp	r2, #0
 8016bb8:	f340 8162 	ble.w	8016e80 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8016bbc:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8016bbe:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 8016bc2:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 8016bc6:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8016bca:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8016bcc:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8016bd0:	2b00      	cmp	r3, #0
 8016bd2:	dd0e      	ble.n	8016bf2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8016bd4:	1402      	asrs	r2, r0, #16
 8016bd6:	d405      	bmi.n	8016be4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8016bd8:	42ba      	cmp	r2, r7
 8016bda:	da03      	bge.n	8016be4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8016bdc:	140a      	asrs	r2, r1, #16
 8016bde:	d401      	bmi.n	8016be4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8016be0:	42b2      	cmp	r2, r6
 8016be2:	db07      	blt.n	8016bf4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8016be4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8016be6:	4410      	add	r0, r2
 8016be8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8016bea:	3b01      	subs	r3, #1
 8016bec:	4411      	add	r1, r2
 8016bee:	3402      	adds	r4, #2
 8016bf0:	e7ee      	b.n	8016bd0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8016bf2:	d017      	beq.n	8016c24 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8016bf4:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8016bf6:	1e5a      	subs	r2, r3, #1
 8016bf8:	fb05 0502 	mla	r5, r5, r2, r0
 8016bfc:	142d      	asrs	r5, r5, #16
 8016bfe:	d409      	bmi.n	8016c14 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8016c00:	42bd      	cmp	r5, r7
 8016c02:	da07      	bge.n	8016c14 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8016c04:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8016c06:	fb05 1202 	mla	r2, r5, r2, r1
 8016c0a:	1412      	asrs	r2, r2, #16
 8016c0c:	d402      	bmi.n	8016c14 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8016c0e:	42b2      	cmp	r2, r6
 8016c10:	f2c0 80c3 	blt.w	8016d9a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 8016c14:	2500      	movs	r5, #0
 8016c16:	195a      	adds	r2, r3, r5
 8016c18:	2a00      	cmp	r2, #0
 8016c1a:	dc3f      	bgt.n	8016c9c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8016c1c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8016c20:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8016c24:	9b01      	ldr	r3, [sp, #4]
 8016c26:	2b00      	cmp	r3, #0
 8016c28:	f340 812a 	ble.w	8016e80 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8016c2c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8016c30:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8016c34:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8016c38:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016c3a:	ee31 1a05 	vadd.f32	s2, s2, s10
 8016c3e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8016c42:	eeb0 6a62 	vmov.f32	s12, s5
 8016c46:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016c4a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016c4e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8016c52:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8016c56:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016c5a:	eeb0 6a43 	vmov.f32	s12, s6
 8016c5e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8016c62:	ee12 2a90 	vmov	r2, s5
 8016c66:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016c6a:	fb92 f3f3 	sdiv	r3, r2, r3
 8016c6e:	ee13 2a10 	vmov	r2, s6
 8016c72:	9313      	str	r3, [sp, #76]	; 0x4c
 8016c74:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016c76:	fb92 f3f3 	sdiv	r3, r2, r3
 8016c7a:	9314      	str	r3, [sp, #80]	; 0x50
 8016c7c:	9b01      	ldr	r3, [sp, #4]
 8016c7e:	9a05      	ldr	r2, [sp, #20]
 8016c80:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016c84:	3b01      	subs	r3, #1
 8016c86:	9301      	str	r3, [sp, #4]
 8016c88:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8016c8c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016c8e:	eeb0 3a67 	vmov.f32	s6, s15
 8016c92:	bf08      	it	eq
 8016c94:	4613      	moveq	r3, r2
 8016c96:	eef0 2a47 	vmov.f32	s5, s14
 8016c9a:	e788      	b.n	8016bae <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8016c9c:	1406      	asrs	r6, r0, #16
 8016c9e:	d42c      	bmi.n	8016cfa <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016ca0:	f8db 2008 	ldr.w	r2, [fp, #8]
 8016ca4:	42b2      	cmp	r2, r6
 8016ca6:	dd28      	ble.n	8016cfa <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016ca8:	140f      	asrs	r7, r1, #16
 8016caa:	d426      	bmi.n	8016cfa <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016cac:	f8db 200c 	ldr.w	r2, [fp, #12]
 8016cb0:	42ba      	cmp	r2, r7
 8016cb2:	dd22      	ble.n	8016cfa <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016cb4:	9a02      	ldr	r2, [sp, #8]
 8016cb6:	fb07 6602 	mla	r6, r7, r2, r6
 8016cba:	0872      	lsrs	r2, r6, #1
 8016cbc:	9f03      	ldr	r7, [sp, #12]
 8016cbe:	5cba      	ldrb	r2, [r7, r2]
 8016cc0:	07f6      	lsls	r6, r6, #31
 8016cc2:	bf54      	ite	pl
 8016cc4:	f002 020f 	andpl.w	r2, r2, #15
 8016cc8:	1112      	asrmi	r2, r2, #4
 8016cca:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8016cce:	b2d2      	uxtb	r2, r2
 8016cd0:	2aff      	cmp	r2, #255	; 0xff
 8016cd2:	d118      	bne.n	8016d06 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 8016cd4:	f8d8 2000 	ldr.w	r2, [r8]
 8016cd8:	f06f 0601 	mvn.w	r6, #1
 8016cdc:	fb06 f705 	mul.w	r7, r6, r5
 8016ce0:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
 8016ce4:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 8016ce8:	0956      	lsrs	r6, r2, #5
 8016cea:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8016cee:	ea4c 0606 	orr.w	r6, ip, r6
 8016cf2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8016cf6:	4316      	orrs	r6, r2
 8016cf8:	53e6      	strh	r6, [r4, r7]
 8016cfa:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8016cfc:	4410      	add	r0, r2
 8016cfe:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8016d00:	3d01      	subs	r5, #1
 8016d02:	4411      	add	r1, r2
 8016d04:	e787      	b.n	8016c16 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8016d06:	2a00      	cmp	r2, #0
 8016d08:	d0f7      	beq.n	8016cfa <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016d0a:	f06f 0601 	mvn.w	r6, #1
 8016d0e:	436e      	muls	r6, r5
 8016d10:	f8d8 c000 	ldr.w	ip, [r8]
 8016d14:	f834 e006 	ldrh.w	lr, [r4, r6]
 8016d18:	9604      	str	r6, [sp, #16]
 8016d1a:	fa1f f982 	uxth.w	r9, r2
 8016d1e:	ea4f 272e 	mov.w	r7, lr, asr #8
 8016d22:	f3cc 4607 	ubfx	r6, ip, #16, #8
 8016d26:	43d2      	mvns	r2, r2
 8016d28:	b2d2      	uxtb	r2, r2
 8016d2a:	fb16 f609 	smulbb	r6, r6, r9
 8016d2e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8016d32:	fb07 6702 	mla	r7, r7, r2, r6
 8016d36:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 8016d3a:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8016d3e:	fa5f fc8c 	uxtb.w	ip, ip
 8016d42:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8016d46:	fa5f fe8e 	uxtb.w	lr, lr
 8016d4a:	fb1c fc09 	smulbb	ip, ip, r9
 8016d4e:	fb0e cc02 	mla	ip, lr, r2, ip
 8016d52:	b2bf      	uxth	r7, r7
 8016d54:	fb1a fa09 	smulbb	sl, sl, r9
 8016d58:	fa1f fc8c 	uxth.w	ip, ip
 8016d5c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8016d60:	fb06 a602 	mla	r6, r6, r2, sl
 8016d64:	1c7a      	adds	r2, r7, #1
 8016d66:	f10c 0a01 	add.w	sl, ip, #1
 8016d6a:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8016d6e:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 8016d72:	b2b6      	uxth	r6, r6
 8016d74:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8016d78:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8016d7c:	ea4a 0707 	orr.w	r7, sl, r7
 8016d80:	f106 0a01 	add.w	sl, r6, #1
 8016d84:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8016d88:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016d8c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8016d90:	9a04      	ldr	r2, [sp, #16]
 8016d92:	ea47 070a 	orr.w	r7, r7, sl
 8016d96:	52a7      	strh	r7, [r4, r2]
 8016d98:	e7af      	b.n	8016cfa <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016d9a:	f04f 0e00 	mov.w	lr, #0
 8016d9e:	eba3 020e 	sub.w	r2, r3, lr
 8016da2:	2a00      	cmp	r2, #0
 8016da4:	f77f af3a 	ble.w	8016c1c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8016da8:	9e02      	ldr	r6, [sp, #8]
 8016daa:	1402      	asrs	r2, r0, #16
 8016dac:	140d      	asrs	r5, r1, #16
 8016dae:	fb06 2505 	mla	r5, r6, r5, r2
 8016db2:	086a      	lsrs	r2, r5, #1
 8016db4:	9e03      	ldr	r6, [sp, #12]
 8016db6:	5cb2      	ldrb	r2, [r6, r2]
 8016db8:	07ed      	lsls	r5, r5, #31
 8016dba:	bf54      	ite	pl
 8016dbc:	f002 020f 	andpl.w	r2, r2, #15
 8016dc0:	1112      	asrmi	r2, r2, #4
 8016dc2:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8016dc6:	b2d2      	uxtb	r2, r2
 8016dc8:	2aff      	cmp	r2, #255	; 0xff
 8016dca:	d115      	bne.n	8016df8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 8016dcc:	f8d8 5000 	ldr.w	r5, [r8]
 8016dd0:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
 8016dd4:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 8016dd8:	096a      	lsrs	r2, r5, #5
 8016dda:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8016dde:	4332      	orrs	r2, r6
 8016de0:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8016de4:	432a      	orrs	r2, r5
 8016de6:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 8016dea:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8016dec:	4410      	add	r0, r2
 8016dee:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8016df0:	f10e 0e01 	add.w	lr, lr, #1
 8016df4:	4411      	add	r1, r2
 8016df6:	e7d2      	b.n	8016d9e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8016df8:	2a00      	cmp	r2, #0
 8016dfa:	d0f6      	beq.n	8016dea <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8016dfc:	f8d8 7000 	ldr.w	r7, [r8]
 8016e00:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8016e04:	fa1f f982 	uxth.w	r9, r2
 8016e08:	ea4f 262c 	mov.w	r6, ip, asr #8
 8016e0c:	f3c7 4507 	ubfx	r5, r7, #16, #8
 8016e10:	43d2      	mvns	r2, r2
 8016e12:	b2d2      	uxtb	r2, r2
 8016e14:	fb15 f509 	smulbb	r5, r5, r9
 8016e18:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8016e1c:	fb06 5602 	mla	r6, r6, r2, r5
 8016e20:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 8016e24:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8016e28:	b2ff      	uxtb	r7, r7
 8016e2a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8016e2e:	fa5f fc8c 	uxtb.w	ip, ip
 8016e32:	fb17 f709 	smulbb	r7, r7, r9
 8016e36:	fb0c 7702 	mla	r7, ip, r2, r7
 8016e3a:	b2b6      	uxth	r6, r6
 8016e3c:	fb1a fa09 	smulbb	sl, sl, r9
 8016e40:	b2bf      	uxth	r7, r7
 8016e42:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8016e46:	fb05 a502 	mla	r5, r5, r2, sl
 8016e4a:	1c72      	adds	r2, r6, #1
 8016e4c:	f107 0a01 	add.w	sl, r7, #1
 8016e50:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8016e54:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8016e58:	b2ad      	uxth	r5, r5
 8016e5a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8016e5e:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8016e62:	ea4a 0606 	orr.w	r6, sl, r6
 8016e66:	f105 0a01 	add.w	sl, r5, #1
 8016e6a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8016e6e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016e72:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8016e76:	ea46 060a 	orr.w	r6, r6, sl
 8016e7a:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 8016e7e:	e7b4      	b.n	8016dea <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8016e80:	b007      	add	sp, #28
 8016e82:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016e86:	bf00      	nop
 8016e88:	20015614 	.word	0x20015614

08016e8c <_ZN8touchgfx8LCD16bppD1Ev>:
 8016e8c:	4770      	bx	lr

08016e8e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 8016e8e:	4770      	bx	lr

08016e90 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 8016e90:	4770      	bx	lr

08016e92 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 8016e92:	4770      	bx	lr

08016e94 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 8016e94:	4770      	bx	lr

08016e96 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8016e96:	4770      	bx	lr

08016e98 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8016e98:	4770      	bx	lr

08016e9a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8016e9a:	4770      	bx	lr

08016e9c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8016e9c:	4770      	bx	lr

08016e9e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8016e9e:	4770      	bx	lr

08016ea0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8016ea0:	4770      	bx	lr

08016ea2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8016ea2:	4770      	bx	lr

08016ea4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8016ea4:	4770      	bx	lr

08016ea6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8016ea6:	4770      	bx	lr

08016ea8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8016ea8:	4770      	bx	lr

08016eaa <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8016eaa:	4770      	bx	lr

08016eac <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 8016eac:	4770      	bx	lr

08016eae <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8016eae:	4770      	bx	lr

08016eb0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8016eb0:	4770      	bx	lr

08016eb2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8016eb2:	4770      	bx	lr

08016eb4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8016eb4:	4770      	bx	lr

08016eb6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8016eb6:	4770      	bx	lr

08016eb8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 8016eb8:	4770      	bx	lr

08016eba <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 8016eba:	4770      	bx	lr

08016ebc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 8016ebc:	4770      	bx	lr

08016ebe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8016ebe:	4770      	bx	lr

08016ec0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8016ec0:	4770      	bx	lr

08016ec2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8016ec2:	4770      	bx	lr

08016ec4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8016ec4:	4770      	bx	lr

08016ec6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 8016ec6:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8016eca:	b088      	sub	sp, #32
 8016ecc:	ac08      	add	r4, sp, #32
 8016ece:	4606      	mov	r6, r0
 8016ed0:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 8016ed4:	4620      	mov	r0, r4
 8016ed6:	4688      	mov	r8, r1
 8016ed8:	4691      	mov	r9, r2
 8016eda:	f7fd fc65 	bl	80147a8 <_ZNK8touchgfx6Bitmap7getDataEv>
 8016ede:	6833      	ldr	r3, [r6, #0]
 8016ee0:	4605      	mov	r5, r0
 8016ee2:	4620      	mov	r0, r4
 8016ee4:	699f      	ldr	r7, [r3, #24]
 8016ee6:	f7fd fb73 	bl	80145d0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8016eea:	4682      	mov	sl, r0
 8016eec:	4620      	mov	r0, r4
 8016eee:	f7fd fba3 	bl	8014638 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8016ef2:	9500      	str	r5, [sp, #0]
 8016ef4:	e9cd a001 	strd	sl, r0, [sp, #4]
 8016ef8:	464b      	mov	r3, r9
 8016efa:	a806      	add	r0, sp, #24
 8016efc:	4642      	mov	r2, r8
 8016efe:	4631      	mov	r1, r6
 8016f00:	47b8      	blx	r7
 8016f02:	4628      	mov	r0, r5
 8016f04:	b008      	add	sp, #32
 8016f06:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

08016f0c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 8016f0c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8016f10:	2300      	movs	r3, #0
 8016f12:	9300      	str	r3, [sp, #0]
 8016f14:	4b3d      	ldr	r3, [pc, #244]	; (801700c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 8016f16:	781b      	ldrb	r3, [r3, #0]
 8016f18:	2b00      	cmp	r3, #0
 8016f1a:	d137      	bne.n	8016f8c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 8016f1c:	4a3c      	ldr	r2, [pc, #240]	; (8017010 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8016f1e:	f9b2 2000 	ldrsh.w	r2, [r2]
 8016f22:	f8ad 2004 	strh.w	r2, [sp, #4]
 8016f26:	2b00      	cmp	r3, #0
 8016f28:	d132      	bne.n	8016f90 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 8016f2a:	4b3a      	ldr	r3, [pc, #232]	; (8017014 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 8016f2c:	f9b3 3000 	ldrsh.w	r3, [r3]
 8016f30:	6808      	ldr	r0, [r1, #0]
 8016f32:	6849      	ldr	r1, [r1, #4]
 8016f34:	f8ad 3006 	strh.w	r3, [sp, #6]
 8016f38:	ac02      	add	r4, sp, #8
 8016f3a:	ab02      	add	r3, sp, #8
 8016f3c:	c303      	stmia	r3!, {r0, r1}
 8016f3e:	4669      	mov	r1, sp
 8016f40:	4620      	mov	r0, r4
 8016f42:	f7f9 ff7f 	bl	8010e44 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8016f46:	4668      	mov	r0, sp
 8016f48:	f7f9 ff54 	bl	8010df4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016f4c:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8016f50:	f8bd 2000 	ldrh.w	r2, [sp]
 8016f54:	4d30      	ldr	r5, [pc, #192]	; (8017018 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 8016f56:	4413      	add	r3, r2
 8016f58:	f8ad 3008 	strh.w	r3, [sp, #8]
 8016f5c:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8016f60:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8016f64:	6828      	ldr	r0, [r5, #0]
 8016f66:	4413      	add	r3, r2
 8016f68:	f8ad 300a 	strh.w	r3, [sp, #10]
 8016f6c:	6803      	ldr	r3, [r0, #0]
 8016f6e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8016f70:	4798      	blx	r3
 8016f72:	f010 0f01 	tst.w	r0, #1
 8016f76:	462f      	mov	r7, r5
 8016f78:	d00c      	beq.n	8016f94 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 8016f7a:	6828      	ldr	r0, [r5, #0]
 8016f7c:	6803      	ldr	r3, [r0, #0]
 8016f7e:	e894 0006 	ldmia.w	r4, {r1, r2}
 8016f82:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8016f84:	4798      	blx	r3
 8016f86:	b004      	add	sp, #16
 8016f88:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8016f8c:	4a21      	ldr	r2, [pc, #132]	; (8017014 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 8016f8e:	e7c6      	b.n	8016f1e <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 8016f90:	4b1f      	ldr	r3, [pc, #124]	; (8017010 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8016f92:	e7cb      	b.n	8016f2c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 8016f94:	6838      	ldr	r0, [r7, #0]
 8016f96:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 8016f9a:	6803      	ldr	r3, [r0, #0]
 8016f9c:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 8016fa0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8016fa2:	4798      	blx	r3
 8016fa4:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 8016fa8:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8016fac:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 8016fb0:	fb16 3602 	smlabb	r6, r6, r2, r3
 8016fb4:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8016fb8:	6838      	ldr	r0, [r7, #0]
 8016fba:	6803      	ldr	r3, [r0, #0]
 8016fbc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8016fbe:	4798      	blx	r3
 8016fc0:	4a13      	ldr	r2, [pc, #76]	; (8017010 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8016fc2:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 8016fc6:	8813      	ldrh	r3, [r2, #0]
 8016fc8:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8016fcc:	fb03 1404 	mla	r4, r3, r4, r1
 8016fd0:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8016fd4:	435d      	muls	r5, r3
 8016fd6:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8016fda:	ea4f 0848 	mov.w	r8, r8, lsl #1
 8016fde:	4691      	mov	r9, r2
 8016fe0:	6838      	ldr	r0, [r7, #0]
 8016fe2:	42ac      	cmp	r4, r5
 8016fe4:	6803      	ldr	r3, [r0, #0]
 8016fe6:	d20e      	bcs.n	8017006 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 8016fe8:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
 8016fec:	4632      	mov	r2, r6
 8016fee:	4643      	mov	r3, r8
 8016ff0:	4621      	mov	r1, r4
 8016ff2:	47d0      	blx	sl
 8016ff4:	f8b9 3000 	ldrh.w	r3, [r9]
 8016ff8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8016ffc:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8017000:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8017004:	e7ec      	b.n	8016fe0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 8017006:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017008:	4798      	blx	r3
 801700a:	e7bc      	b.n	8016f86 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 801700c:	200155fc 	.word	0x200155fc
 8017010:	200155fe 	.word	0x200155fe
 8017014:	20015600 	.word	0x20015600
 8017018:	20015604 	.word	0x20015604

0801701c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 801701c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017020:	b08b      	sub	sp, #44	; 0x2c
 8017022:	460f      	mov	r7, r1
 8017024:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 8017028:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 801702c:	4616      	mov	r6, r2
 801702e:	f1bb 0f00 	cmp.w	fp, #0
 8017032:	d049      	beq.n	80170c8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 8017034:	6810      	ldr	r0, [r2, #0]
 8017036:	6851      	ldr	r1, [r2, #4]
 8017038:	ad06      	add	r5, sp, #24
 801703a:	c503      	stmia	r5!, {r0, r1}
 801703c:	6818      	ldr	r0, [r3, #0]
 801703e:	6859      	ldr	r1, [r3, #4]
 8017040:	ad08      	add	r5, sp, #32
 8017042:	c503      	stmia	r5!, {r0, r1}
 8017044:	a806      	add	r0, sp, #24
 8017046:	f7f9 fed5 	bl	8010df4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801704a:	4631      	mov	r1, r6
 801704c:	a808      	add	r0, sp, #32
 801704e:	f7f9 fef9 	bl	8010e44 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017052:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8017056:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 801705a:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 801705e:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 8017062:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 8017066:	fb16 2103 	smlabb	r1, r6, r3, r2
 801706a:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 801706e:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 8017072:	4f5f      	ldr	r7, [pc, #380]	; (80171f0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 8017074:	440a      	add	r2, r1
 8017076:	f8ad 2020 	strh.w	r2, [sp, #32]
 801707a:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 801707e:	6838      	ldr	r0, [r7, #0]
 8017080:	4413      	add	r3, r2
 8017082:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8017086:	6803      	ldr	r3, [r0, #0]
 8017088:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801708a:	4798      	blx	r3
 801708c:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8017090:	46b9      	mov	r9, r7
 8017092:	d01c      	beq.n	80170ce <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb2>
 8017094:	f010 0f04 	tst.w	r0, #4
 8017098:	d01d      	beq.n	80170d6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801709a:	f8d9 0000 	ldr.w	r0, [r9]
 801709e:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 80170a2:	6801      	ldr	r1, [r0, #0]
 80170a4:	f8cd b00c 	str.w	fp, [sp, #12]
 80170a8:	2700      	movs	r7, #0
 80170aa:	e9cd 4704 	strd	r4, r7, [sp, #16]
 80170ae:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 80170b2:	9402      	str	r4, [sp, #8]
 80170b4:	b2ad      	uxth	r5, r5
 80170b6:	fa1f f488 	uxth.w	r4, r8
 80170ba:	9501      	str	r5, [sp, #4]
 80170bc:	9400      	str	r4, [sp, #0]
 80170be:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 80170c0:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 80170c4:	4631      	mov	r1, r6
 80170c6:	47a0      	blx	r4
 80170c8:	b00b      	add	sp, #44	; 0x2c
 80170ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80170ce:	b914      	cbnz	r4, 80170d6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 80170d0:	f010 0f01 	tst.w	r0, #1
 80170d4:	e7e0      	b.n	8017098 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7c>
 80170d6:	f8d9 0000 	ldr.w	r0, [r9]
 80170da:	6803      	ldr	r3, [r0, #0]
 80170dc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80170de:	4798      	blx	r3
 80170e0:	4b44      	ldr	r3, [pc, #272]	; (80171f4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 80170e2:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 80170e6:	881a      	ldrh	r2, [r3, #0]
 80170e8:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 80170ec:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 80170f0:	fb02 1404 	mla	r4, r2, r4, r1
 80170f4:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80170f8:	469a      	mov	sl, r3
 80170fa:	fb05 f502 	mul.w	r5, r5, r2
 80170fe:	ea4f 0748 	mov.w	r7, r8, lsl #1
 8017102:	d059      	beq.n	80171b8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 8017104:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 8017108:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801710c:	fa1f f28b 	uxth.w	r2, fp
 8017110:	fa1f f989 	uxth.w	r9, r9
 8017114:	469e      	mov	lr, r3
 8017116:	42ac      	cmp	r4, r5
 8017118:	d264      	bcs.n	80171e4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801711a:	eb04 0a07 	add.w	sl, r4, r7
 801711e:	4554      	cmp	r4, sl
 8017120:	d23d      	bcs.n	801719e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 8017122:	8821      	ldrh	r1, [r4, #0]
 8017124:	f836 3b02 	ldrh.w	r3, [r6], #2
 8017128:	1208      	asrs	r0, r1, #8
 801712a:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801712e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8017132:	fb10 f009 	smulbb	r0, r0, r9
 8017136:	ea4f 0be1 	mov.w	fp, r1, asr #3
 801713a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801713e:	00c9      	lsls	r1, r1, #3
 8017140:	fb0c 0c02 	mla	ip, ip, r2, r0
 8017144:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8017148:	10d8      	asrs	r0, r3, #3
 801714a:	b2c9      	uxtb	r1, r1
 801714c:	00db      	lsls	r3, r3, #3
 801714e:	fa1f fc8c 	uxth.w	ip, ip
 8017152:	fb1b fb09 	smulbb	fp, fp, r9
 8017156:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801715a:	b2db      	uxtb	r3, r3
 801715c:	fb11 f109 	smulbb	r1, r1, r9
 8017160:	fb00 b002 	mla	r0, r0, r2, fp
 8017164:	fb03 1302 	mla	r3, r3, r2, r1
 8017168:	f10c 0b01 	add.w	fp, ip, #1
 801716c:	b29b      	uxth	r3, r3
 801716e:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 8017172:	b280      	uxth	r0, r0
 8017174:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 8017178:	f103 0c01 	add.w	ip, r3, #1
 801717c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8017180:	1c43      	adds	r3, r0, #1
 8017182:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8017186:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801718a:	0940      	lsrs	r0, r0, #5
 801718c:	ea4c 0c0b 	orr.w	ip, ip, fp
 8017190:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8017194:	ea4c 0c00 	orr.w	ip, ip, r0
 8017198:	f824 cb02 	strh.w	ip, [r4], #2
 801719c:	e7bf      	b.n	801711e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 801719e:	f8be 3000 	ldrh.w	r3, [lr]
 80171a2:	eba3 0308 	sub.w	r3, r3, r8
 80171a6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80171aa:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 80171ae:	eba3 0308 	sub.w	r3, r3, r8
 80171b2:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 80171b6:	e7ae      	b.n	8017116 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 80171b8:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 80171bc:	f8d9 0000 	ldr.w	r0, [r9]
 80171c0:	42ac      	cmp	r4, r5
 80171c2:	6803      	ldr	r3, [r0, #0]
 80171c4:	d20e      	bcs.n	80171e4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 80171c6:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
 80171ca:	4632      	mov	r2, r6
 80171cc:	463b      	mov	r3, r7
 80171ce:	4621      	mov	r1, r4
 80171d0:	47c0      	blx	r8
 80171d2:	f8ba 3000 	ldrh.w	r3, [sl]
 80171d6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80171da:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 80171de:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 80171e2:	e7eb      	b.n	80171bc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 80171e4:	4b02      	ldr	r3, [pc, #8]	; (80171f0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 80171e6:	6818      	ldr	r0, [r3, #0]
 80171e8:	6803      	ldr	r3, [r0, #0]
 80171ea:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80171ec:	4798      	blx	r3
 80171ee:	e76b      	b.n	80170c8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 80171f0:	20015604 	.word	0x20015604
 80171f4:	200155fe 	.word	0x200155fe

080171f8 <_ZN8touchgfx8LCD16bppD0Ev>:
 80171f8:	b510      	push	{r4, lr}
 80171fa:	2178      	movs	r1, #120	; 0x78
 80171fc:	4604      	mov	r4, r0
 80171fe:	f009 fad3 	bl	80207a8 <_ZdlPvj>
 8017202:	4620      	mov	r0, r4
 8017204:	bd10      	pop	{r4, pc}

08017206 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8017206:	b510      	push	{r4, lr}
 8017208:	2104      	movs	r1, #4
 801720a:	4604      	mov	r4, r0
 801720c:	f009 facc 	bl	80207a8 <_ZdlPvj>
 8017210:	4620      	mov	r0, r4
 8017212:	bd10      	pop	{r4, pc}

08017214 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8017214:	b510      	push	{r4, lr}
 8017216:	2104      	movs	r1, #4
 8017218:	4604      	mov	r4, r0
 801721a:	f009 fac5 	bl	80207a8 <_ZdlPvj>
 801721e:	4620      	mov	r0, r4
 8017220:	bd10      	pop	{r4, pc}

08017222 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8017222:	b510      	push	{r4, lr}
 8017224:	2104      	movs	r1, #4
 8017226:	4604      	mov	r4, r0
 8017228:	f009 fabe 	bl	80207a8 <_ZdlPvj>
 801722c:	4620      	mov	r0, r4
 801722e:	bd10      	pop	{r4, pc}

08017230 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8017230:	b510      	push	{r4, lr}
 8017232:	2104      	movs	r1, #4
 8017234:	4604      	mov	r4, r0
 8017236:	f009 fab7 	bl	80207a8 <_ZdlPvj>
 801723a:	4620      	mov	r0, r4
 801723c:	bd10      	pop	{r4, pc}

0801723e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801723e:	b510      	push	{r4, lr}
 8017240:	2104      	movs	r1, #4
 8017242:	4604      	mov	r4, r0
 8017244:	f009 fab0 	bl	80207a8 <_ZdlPvj>
 8017248:	4620      	mov	r0, r4
 801724a:	bd10      	pop	{r4, pc}

0801724c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 801724c:	b510      	push	{r4, lr}
 801724e:	2104      	movs	r1, #4
 8017250:	4604      	mov	r4, r0
 8017252:	f009 faa9 	bl	80207a8 <_ZdlPvj>
 8017256:	4620      	mov	r0, r4
 8017258:	bd10      	pop	{r4, pc}

0801725a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 801725a:	b510      	push	{r4, lr}
 801725c:	2104      	movs	r1, #4
 801725e:	4604      	mov	r4, r0
 8017260:	f009 faa2 	bl	80207a8 <_ZdlPvj>
 8017264:	4620      	mov	r0, r4
 8017266:	bd10      	pop	{r4, pc}

08017268 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 8017268:	b510      	push	{r4, lr}
 801726a:	2104      	movs	r1, #4
 801726c:	4604      	mov	r4, r0
 801726e:	f009 fa9b 	bl	80207a8 <_ZdlPvj>
 8017272:	4620      	mov	r0, r4
 8017274:	bd10      	pop	{r4, pc}

08017276 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8017276:	b510      	push	{r4, lr}
 8017278:	2104      	movs	r1, #4
 801727a:	4604      	mov	r4, r0
 801727c:	f009 fa94 	bl	80207a8 <_ZdlPvj>
 8017280:	4620      	mov	r0, r4
 8017282:	bd10      	pop	{r4, pc}

08017284 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8017284:	b510      	push	{r4, lr}
 8017286:	2104      	movs	r1, #4
 8017288:	4604      	mov	r4, r0
 801728a:	f009 fa8d 	bl	80207a8 <_ZdlPvj>
 801728e:	4620      	mov	r0, r4
 8017290:	bd10      	pop	{r4, pc}

08017292 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8017292:	b510      	push	{r4, lr}
 8017294:	2104      	movs	r1, #4
 8017296:	4604      	mov	r4, r0
 8017298:	f009 fa86 	bl	80207a8 <_ZdlPvj>
 801729c:	4620      	mov	r0, r4
 801729e:	bd10      	pop	{r4, pc}

080172a0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 80172a0:	b510      	push	{r4, lr}
 80172a2:	2104      	movs	r1, #4
 80172a4:	4604      	mov	r4, r0
 80172a6:	f009 fa7f 	bl	80207a8 <_ZdlPvj>
 80172aa:	4620      	mov	r0, r4
 80172ac:	bd10      	pop	{r4, pc}

080172ae <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 80172ae:	b510      	push	{r4, lr}
 80172b0:	2104      	movs	r1, #4
 80172b2:	4604      	mov	r4, r0
 80172b4:	f009 fa78 	bl	80207a8 <_ZdlPvj>
 80172b8:	4620      	mov	r0, r4
 80172ba:	bd10      	pop	{r4, pc}

080172bc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 80172bc:	b510      	push	{r4, lr}
 80172be:	2104      	movs	r1, #4
 80172c0:	4604      	mov	r4, r0
 80172c2:	f009 fa71 	bl	80207a8 <_ZdlPvj>
 80172c6:	4620      	mov	r0, r4
 80172c8:	bd10      	pop	{r4, pc}

080172ca <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 80172ca:	b510      	push	{r4, lr}
 80172cc:	2104      	movs	r1, #4
 80172ce:	4604      	mov	r4, r0
 80172d0:	f009 fa6a 	bl	80207a8 <_ZdlPvj>
 80172d4:	4620      	mov	r0, r4
 80172d6:	bd10      	pop	{r4, pc}

080172d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 80172d8:	b510      	push	{r4, lr}
 80172da:	2104      	movs	r1, #4
 80172dc:	4604      	mov	r4, r0
 80172de:	f009 fa63 	bl	80207a8 <_ZdlPvj>
 80172e2:	4620      	mov	r0, r4
 80172e4:	bd10      	pop	{r4, pc}

080172e6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 80172e6:	b510      	push	{r4, lr}
 80172e8:	2104      	movs	r1, #4
 80172ea:	4604      	mov	r4, r0
 80172ec:	f009 fa5c 	bl	80207a8 <_ZdlPvj>
 80172f0:	4620      	mov	r0, r4
 80172f2:	bd10      	pop	{r4, pc}

080172f4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 80172f4:	b510      	push	{r4, lr}
 80172f6:	2104      	movs	r1, #4
 80172f8:	4604      	mov	r4, r0
 80172fa:	f009 fa55 	bl	80207a8 <_ZdlPvj>
 80172fe:	4620      	mov	r0, r4
 8017300:	bd10      	pop	{r4, pc}

08017302 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8017302:	b510      	push	{r4, lr}
 8017304:	2104      	movs	r1, #4
 8017306:	4604      	mov	r4, r0
 8017308:	f009 fa4e 	bl	80207a8 <_ZdlPvj>
 801730c:	4620      	mov	r0, r4
 801730e:	bd10      	pop	{r4, pc}

08017310 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 8017310:	b510      	push	{r4, lr}
 8017312:	2104      	movs	r1, #4
 8017314:	4604      	mov	r4, r0
 8017316:	f009 fa47 	bl	80207a8 <_ZdlPvj>
 801731a:	4620      	mov	r0, r4
 801731c:	bd10      	pop	{r4, pc}

0801731e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801731e:	b510      	push	{r4, lr}
 8017320:	2104      	movs	r1, #4
 8017322:	4604      	mov	r4, r0
 8017324:	f009 fa40 	bl	80207a8 <_ZdlPvj>
 8017328:	4620      	mov	r0, r4
 801732a:	bd10      	pop	{r4, pc}

0801732c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801732c:	b510      	push	{r4, lr}
 801732e:	2104      	movs	r1, #4
 8017330:	4604      	mov	r4, r0
 8017332:	f009 fa39 	bl	80207a8 <_ZdlPvj>
 8017336:	4620      	mov	r0, r4
 8017338:	bd10      	pop	{r4, pc}

0801733a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801733a:	b510      	push	{r4, lr}
 801733c:	2104      	movs	r1, #4
 801733e:	4604      	mov	r4, r0
 8017340:	f009 fa32 	bl	80207a8 <_ZdlPvj>
 8017344:	4620      	mov	r0, r4
 8017346:	bd10      	pop	{r4, pc}

08017348 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8017348:	b510      	push	{r4, lr}
 801734a:	2104      	movs	r1, #4
 801734c:	4604      	mov	r4, r0
 801734e:	f009 fa2b 	bl	80207a8 <_ZdlPvj>
 8017352:	4620      	mov	r0, r4
 8017354:	bd10      	pop	{r4, pc}

08017356 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 8017356:	b510      	push	{r4, lr}
 8017358:	2104      	movs	r1, #4
 801735a:	4604      	mov	r4, r0
 801735c:	f009 fa24 	bl	80207a8 <_ZdlPvj>
 8017360:	4620      	mov	r0, r4
 8017362:	bd10      	pop	{r4, pc}

08017364 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 8017364:	b510      	push	{r4, lr}
 8017366:	2104      	movs	r1, #4
 8017368:	4604      	mov	r4, r0
 801736a:	f009 fa1d 	bl	80207a8 <_ZdlPvj>
 801736e:	4620      	mov	r0, r4
 8017370:	bd10      	pop	{r4, pc}

08017372 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 8017372:	b510      	push	{r4, lr}
 8017374:	2104      	movs	r1, #4
 8017376:	4604      	mov	r4, r0
 8017378:	f009 fa16 	bl	80207a8 <_ZdlPvj>
 801737c:	4620      	mov	r0, r4
 801737e:	bd10      	pop	{r4, pc}

08017380 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 8017380:	b510      	push	{r4, lr}
 8017382:	2104      	movs	r1, #4
 8017384:	4604      	mov	r4, r0
 8017386:	f009 fa0f 	bl	80207a8 <_ZdlPvj>
 801738a:	4620      	mov	r0, r4
 801738c:	bd10      	pop	{r4, pc}
	...

08017390 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 8017390:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017394:	b091      	sub	sp, #68	; 0x44
 8017396:	469b      	mov	fp, r3
 8017398:	f10d 0828 	add.w	r8, sp, #40	; 0x28
 801739c:	4616      	mov	r6, r2
 801739e:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	; 0x6c
 80173a2:	f9b3 2000 	ldrsh.w	r2, [r3]
 80173a6:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 80173aa:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80173ae:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 80173b2:	4604      	mov	r4, r0
 80173b4:	460d      	mov	r5, r1
 80173b6:	4640      	mov	r0, r8
 80173b8:	4659      	mov	r1, fp
 80173ba:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 80173be:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 80173c2:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
 80173c6:	f7f3 fd41 	bl	800ae4c <_ZN8touchgfx4RectaNERKS0_>
 80173ca:	4631      	mov	r1, r6
 80173cc:	4640      	mov	r0, r8
 80173ce:	f7f3 fd3d 	bl	800ae4c <_ZN8touchgfx4RectaNERKS0_>
 80173d2:	4b74      	ldr	r3, [pc, #464]	; (80175a4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 80173d4:	8818      	ldrh	r0, [r3, #0]
 80173d6:	4b74      	ldr	r3, [pc, #464]	; (80175a8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 80173d8:	8819      	ldrh	r1, [r3, #0]
 80173da:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 80173de:	2b00      	cmp	r3, #0
 80173e0:	b202      	sxth	r2, r0
 80173e2:	b20e      	sxth	r6, r1
 80173e4:	da07      	bge.n	80173f6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 80173e6:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 80173ea:	4463      	add	r3, ip
 80173ec:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80173f0:	2300      	movs	r3, #0
 80173f2:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80173f6:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 80173fa:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 80173fe:	1ad2      	subs	r2, r2, r3
 8017400:	4594      	cmp	ip, r2
 8017402:	bfc4      	itt	gt
 8017404:	1ac2      	subgt	r2, r0, r3
 8017406:	f8ad 202c 	strhgt.w	r2, [sp, #44]	; 0x2c
 801740a:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801740e:	2a00      	cmp	r2, #0
 8017410:	da07      	bge.n	8017422 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 8017412:	f8bd c02e 	ldrh.w	ip, [sp, #46]	; 0x2e
 8017416:	4462      	add	r2, ip
 8017418:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 801741c:	2200      	movs	r2, #0
 801741e:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 8017422:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
 8017426:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801742a:	eba6 060a 	sub.w	r6, r6, sl
 801742e:	42b2      	cmp	r2, r6
 8017430:	bfc4      	itt	gt
 8017432:	eba1 020a 	subgt.w	r2, r1, sl
 8017436:	f8ad 202e 	strhgt.w	r2, [sp, #46]	; 0x2e
 801743a:	4a5c      	ldr	r2, [pc, #368]	; (80175ac <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 801743c:	7812      	ldrb	r2, [r2, #0]
 801743e:	b9a2      	cbnz	r2, 801746a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 8017440:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 8017444:	4286      	cmp	r6, r0
 8017446:	4640      	mov	r0, r8
 8017448:	9303      	str	r3, [sp, #12]
 801744a:	bf14      	ite	ne
 801744c:	2600      	movne	r6, #0
 801744e:	2601      	moveq	r6, #1
 8017450:	f7f3 fd3f 	bl	800aed2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8017454:	9b03      	ldr	r3, [sp, #12]
 8017456:	b160      	cbz	r0, 8017472 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 8017458:	2300      	movs	r3, #0
 801745a:	8023      	strh	r3, [r4, #0]
 801745c:	8063      	strh	r3, [r4, #2]
 801745e:	80a3      	strh	r3, [r4, #4]
 8017460:	4620      	mov	r0, r4
 8017462:	80e3      	strh	r3, [r4, #6]
 8017464:	b011      	add	sp, #68	; 0x44
 8017466:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801746a:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801746e:	428e      	cmp	r6, r1
 8017470:	e7e9      	b.n	8017446 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 8017472:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8017476:	9205      	str	r2, [sp, #20]
 8017478:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801747c:	9206      	str	r2, [sp, #24]
 801747e:	f8bb 2000 	ldrh.w	r2, [fp]
 8017482:	900e      	str	r0, [sp, #56]	; 0x38
 8017484:	1a9b      	subs	r3, r3, r2
 8017486:	b21b      	sxth	r3, r3
 8017488:	9303      	str	r3, [sp, #12]
 801748a:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801748e:	f8ad 903c 	strh.w	r9, [sp, #60]	; 0x3c
 8017492:	ebaa 0a03 	sub.w	sl, sl, r3
 8017496:	fa0f f38a 	sxth.w	r3, sl
 801749a:	9304      	str	r3, [sp, #16]
 801749c:	9b03      	ldr	r3, [sp, #12]
 801749e:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 80174a2:	9b04      	ldr	r3, [sp, #16]
 80174a4:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 80174a8:	9b05      	ldr	r3, [sp, #20]
 80174aa:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 80174ae:	a90e      	add	r1, sp, #56	; 0x38
 80174b0:	9b06      	ldr	r3, [sp, #24]
 80174b2:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80174b6:	a80c      	add	r0, sp, #48	; 0x30
 80174b8:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
 80174bc:	f7f9 fcc2 	bl	8010e44 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80174c0:	4640      	mov	r0, r8
 80174c2:	f7f9 fc97 	bl	8010df4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80174c6:	a80e      	add	r0, sp, #56	; 0x38
 80174c8:	f7f9 fc94 	bl	8010df4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80174cc:	4b38      	ldr	r3, [pc, #224]	; (80175b0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 80174ce:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
 80174d2:	881b      	ldrh	r3, [r3, #0]
 80174d4:	9307      	str	r3, [sp, #28]
 80174d6:	682b      	ldr	r3, [r5, #0]
 80174d8:	f8df b0d8 	ldr.w	fp, [pc, #216]	; 80175b4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 80174dc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80174de:	4628      	mov	r0, r5
 80174e0:	4798      	blx	r3
 80174e2:	f8bd 5032 	ldrh.w	r5, [sp, #50]	; 0x32
 80174e6:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 80174ea:	4681      	mov	r9, r0
 80174ec:	fb1a 3305 	smlabb	r3, sl, r5, r3
 80174f0:	f8db 0000 	ldr.w	r0, [fp]
 80174f4:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 80174f6:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 80174fa:	6803      	ldr	r3, [r0, #0]
 80174fc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80174fe:	4798      	blx	r3
 8017500:	4607      	mov	r7, r0
 8017502:	f8db 0000 	ldr.w	r0, [fp]
 8017506:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 801750a:	6803      	ldr	r3, [r0, #0]
 801750c:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8017510:	9109      	str	r1, [sp, #36]	; 0x24
 8017512:	9208      	str	r2, [sp, #32]
 8017514:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017516:	4798      	blx	r3
 8017518:	f010 0f01 	tst.w	r0, #1
 801751c:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8017520:	d012      	beq.n	8017548 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 8017522:	f8db 0000 	ldr.w	r0, [fp]
 8017526:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 801752a:	6803      	ldr	r3, [r0, #0]
 801752c:	9200      	str	r2, [sp, #0]
 801752e:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 8017530:	e898 0006 	ldmia.w	r8, {r1, r2}
 8017534:	462b      	mov	r3, r5
 8017536:	47b0      	blx	r6
 8017538:	9b03      	ldr	r3, [sp, #12]
 801753a:	8023      	strh	r3, [r4, #0]
 801753c:	9b04      	ldr	r3, [sp, #16]
 801753e:	8063      	strh	r3, [r4, #2]
 8017540:	9b05      	ldr	r3, [sp, #20]
 8017542:	80a3      	strh	r3, [r4, #4]
 8017544:	9b06      	ldr	r3, [sp, #24]
 8017546:	e78b      	b.n	8017460 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 8017548:	fb09 f202 	mul.w	r2, r9, r2
 801754c:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 8017550:	440f      	add	r7, r1
 8017552:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 8017556:	b166      	cbz	r6, 8017572 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 8017558:	9a07      	ldr	r2, [sp, #28]
 801755a:	4592      	cmp	sl, r2
 801755c:	d109      	bne.n	8017572 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801755e:	f8db 0000 	ldr.w	r0, [fp]
 8017562:	6802      	ldr	r2, [r0, #0]
 8017564:	fb09 f303 	mul.w	r3, r9, r3
 8017568:	6b56      	ldr	r6, [r2, #52]	; 0x34
 801756a:	4629      	mov	r1, r5
 801756c:	463a      	mov	r2, r7
 801756e:	47b0      	blx	r6
 8017570:	e7e2      	b.n	8017538 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 8017572:	fb0a f303 	mul.w	r3, sl, r3
 8017576:	f8df b03c 	ldr.w	fp, [pc, #60]	; 80175b4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801757a:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 801757e:	ea4f 064a 	mov.w	r6, sl, lsl #1
 8017582:	4545      	cmp	r5, r8
 8017584:	d2d8      	bcs.n	8017538 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 8017586:	f8db 0000 	ldr.w	r0, [fp]
 801758a:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801758e:	6802      	ldr	r2, [r0, #0]
 8017590:	4629      	mov	r1, r5
 8017592:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
 8017596:	005b      	lsls	r3, r3, #1
 8017598:	463a      	mov	r2, r7
 801759a:	47d0      	blx	sl
 801759c:	444f      	add	r7, r9
 801759e:	4435      	add	r5, r6
 80175a0:	e7ef      	b.n	8017582 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 80175a2:	bf00      	nop
 80175a4:	200155f8 	.word	0x200155f8
 80175a8:	200155fa 	.word	0x200155fa
 80175ac:	200155fc 	.word	0x200155fc
 80175b0:	200155fe 	.word	0x200155fe
 80175b4:	20015604 	.word	0x20015604

080175b8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 80175b8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80175ba:	4606      	mov	r6, r0
 80175bc:	b087      	sub	sp, #28
 80175be:	460c      	mov	r4, r1
 80175c0:	4617      	mov	r7, r2
 80175c2:	461d      	mov	r5, r3
 80175c4:	b333      	cbz	r3, 8017614 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 80175c6:	4608      	mov	r0, r1
 80175c8:	f7f3 fc83 	bl	800aed2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80175cc:	bb10      	cbnz	r0, 8017614 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 80175ce:	6820      	ldr	r0, [r4, #0]
 80175d0:	6861      	ldr	r1, [r4, #4]
 80175d2:	4c1c      	ldr	r4, [pc, #112]	; (8017644 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 80175d4:	ab04      	add	r3, sp, #16
 80175d6:	c303      	stmia	r3!, {r0, r1}
 80175d8:	a804      	add	r0, sp, #16
 80175da:	f7f9 fc0b 	bl	8010df4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80175de:	6820      	ldr	r0, [r4, #0]
 80175e0:	6803      	ldr	r3, [r0, #0]
 80175e2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80175e4:	4798      	blx	r3
 80175e6:	2dff      	cmp	r5, #255	; 0xff
 80175e8:	d016      	beq.n	8017618 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 80175ea:	f010 0f08 	tst.w	r0, #8
 80175ee:	6820      	ldr	r0, [r4, #0]
 80175f0:	d015      	beq.n	801761e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 80175f2:	2400      	movs	r4, #0
 80175f4:	6801      	ldr	r1, [r0, #0]
 80175f6:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 80175fa:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80175fe:	e9cd 5402 	strd	r5, r4, [sp, #8]
 8017602:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 8017606:	9401      	str	r4, [sp, #4]
 8017608:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 801760c:	9400      	str	r4, [sp, #0]
 801760e:	6e0c      	ldr	r4, [r1, #96]	; 0x60
 8017610:	4639      	mov	r1, r7
 8017612:	47a0      	blx	r4
 8017614:	b007      	add	sp, #28
 8017616:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8017618:	f010 0f02 	tst.w	r0, #2
 801761c:	e7e7      	b.n	80175ee <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 801761e:	6803      	ldr	r3, [r0, #0]
 8017620:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017622:	4798      	blx	r3
 8017624:	4b08      	ldr	r3, [pc, #32]	; (8017648 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 8017626:	881a      	ldrh	r2, [r3, #0]
 8017628:	6833      	ldr	r3, [r6, #0]
 801762a:	e9cd 7500 	strd	r7, r5, [sp]
 801762e:	4601      	mov	r1, r0
 8017630:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 8017632:	4630      	mov	r0, r6
 8017634:	ab04      	add	r3, sp, #16
 8017636:	47a8      	blx	r5
 8017638:	6820      	ldr	r0, [r4, #0]
 801763a:	6803      	ldr	r3, [r0, #0]
 801763c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801763e:	4798      	blx	r3
 8017640:	e7e8      	b.n	8017614 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8017642:	bf00      	nop
 8017644:	20015604 	.word	0x20015604
 8017648:	200155fe 	.word	0x200155fe

0801764c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 801764c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8017650:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 8017654:	9e08      	ldr	r6, [sp, #32]
 8017656:	4688      	mov	r8, r1
 8017658:	4614      	mov	r4, r2
 801765a:	461d      	mov	r5, r3
 801765c:	2f00      	cmp	r7, #0
 801765e:	f000 80a9 	beq.w	80177b4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8017662:	4618      	mov	r0, r3
 8017664:	f7f3 fc35 	bl	800aed2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8017668:	2800      	cmp	r0, #0
 801766a:	f040 80a3 	bne.w	80177b4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801766e:	f9b5 1000 	ldrsh.w	r1, [r5]
 8017672:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8017676:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 801767a:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 801767e:	fb04 1303 	mla	r3, r4, r3, r1
 8017682:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 8017686:	4365      	muls	r5, r4
 8017688:	2fff      	cmp	r7, #255	; 0xff
 801768a:	eba4 0200 	sub.w	r2, r4, r0
 801768e:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 8017692:	ea4f 2816 	mov.w	r8, r6, lsr #8
 8017696:	d04a      	beq.n	801772e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 8017698:	b2bc      	uxth	r4, r7
 801769a:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 801769e:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 80176a2:	fa5f f788 	uxtb.w	r7, r8
 80176a6:	b2f3      	uxtb	r3, r6
 80176a8:	0040      	lsls	r0, r0, #1
 80176aa:	fb0e fe04 	mul.w	lr, lr, r4
 80176ae:	4367      	muls	r7, r4
 80176b0:	4363      	muls	r3, r4
 80176b2:	ea4f 0842 	mov.w	r8, r2, lsl #1
 80176b6:	fa1f fc8c 	uxth.w	ip, ip
 80176ba:	42a9      	cmp	r1, r5
 80176bc:	d27a      	bcs.n	80177b4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 80176be:	eb01 0900 	add.w	r9, r1, r0
 80176c2:	4549      	cmp	r1, r9
 80176c4:	d231      	bcs.n	801772a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 80176c6:	880a      	ldrh	r2, [r1, #0]
 80176c8:	1214      	asrs	r4, r2, #8
 80176ca:	10d6      	asrs	r6, r2, #3
 80176cc:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 80176d0:	00d2      	lsls	r2, r2, #3
 80176d2:	b2d2      	uxtb	r2, r2
 80176d4:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 80176d8:	fb14 f40c 	smulbb	r4, r4, ip
 80176dc:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 80176e0:	4474      	add	r4, lr
 80176e2:	fb12 f20c 	smulbb	r2, r2, ip
 80176e6:	b2a4      	uxth	r4, r4
 80176e8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80176ec:	441a      	add	r2, r3
 80176ee:	b292      	uxth	r2, r2
 80176f0:	f104 0a01 	add.w	sl, r4, #1
 80176f4:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 80176f8:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 80176fc:	fb16 f60c 	smulbb	r6, r6, ip
 8017700:	f102 0a01 	add.w	sl, r2, #1
 8017704:	443e      	add	r6, r7
 8017706:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 801770a:	b2b6      	uxth	r6, r6
 801770c:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8017710:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8017714:	4322      	orrs	r2, r4
 8017716:	1c74      	adds	r4, r6, #1
 8017718:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 801771c:	0976      	lsrs	r6, r6, #5
 801771e:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8017722:	4332      	orrs	r2, r6
 8017724:	f821 2b02 	strh.w	r2, [r1], #2
 8017728:	e7cb      	b.n	80176c2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 801772a:	4441      	add	r1, r8
 801772c:	e7c5      	b.n	80176ba <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 801772e:	4f22      	ldr	r7, [pc, #136]	; (80177b8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 8017730:	0973      	lsrs	r3, r6, #5
 8017732:	ea08 0707 	and.w	r7, r8, r7
 8017736:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801773a:	433b      	orrs	r3, r7
 801773c:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8017740:	4333      	orrs	r3, r6
 8017742:	07e7      	lsls	r7, r4, #31
 8017744:	b29b      	uxth	r3, r3
 8017746:	d50b      	bpl.n	8017760 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 8017748:	0040      	lsls	r0, r0, #1
 801774a:	0052      	lsls	r2, r2, #1
 801774c:	42a9      	cmp	r1, r5
 801774e:	d231      	bcs.n	80177b4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8017750:	180c      	adds	r4, r1, r0
 8017752:	42a1      	cmp	r1, r4
 8017754:	d202      	bcs.n	801775c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 8017756:	f821 3b02 	strh.w	r3, [r1], #2
 801775a:	e7fa      	b.n	8017752 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 801775c:	4411      	add	r1, r2
 801775e:	e7f5      	b.n	801774c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 8017760:	078e      	lsls	r6, r1, #30
 8017762:	d008      	beq.n	8017776 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 8017764:	0066      	lsls	r6, r4, #1
 8017766:	460a      	mov	r2, r1
 8017768:	42aa      	cmp	r2, r5
 801776a:	d202      	bcs.n	8017772 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 801776c:	8013      	strh	r3, [r2, #0]
 801776e:	4432      	add	r2, r6
 8017770:	e7fa      	b.n	8017768 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 8017772:	3102      	adds	r1, #2
 8017774:	3801      	subs	r0, #1
 8017776:	07c2      	lsls	r2, r0, #31
 8017778:	d50b      	bpl.n	8017792 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 801777a:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 801777e:	3a01      	subs	r2, #1
 8017780:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 8017784:	0066      	lsls	r6, r4, #1
 8017786:	42aa      	cmp	r2, r5
 8017788:	d202      	bcs.n	8017790 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 801778a:	8013      	strh	r3, [r2, #0]
 801778c:	4432      	add	r2, r6
 801778e:	e7fa      	b.n	8017786 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 8017790:	3801      	subs	r0, #1
 8017792:	b178      	cbz	r0, 80177b4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8017794:	1040      	asrs	r0, r0, #1
 8017796:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 801779a:	0080      	lsls	r0, r0, #2
 801779c:	0064      	lsls	r4, r4, #1
 801779e:	42a9      	cmp	r1, r5
 80177a0:	d208      	bcs.n	80177b4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 80177a2:	180e      	adds	r6, r1, r0
 80177a4:	460a      	mov	r2, r1
 80177a6:	42b2      	cmp	r2, r6
 80177a8:	d202      	bcs.n	80177b0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 80177aa:	f842 3b04 	str.w	r3, [r2], #4
 80177ae:	e7fa      	b.n	80177a6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 80177b0:	4421      	add	r1, r4
 80177b2:	e7f4      	b.n	801779e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 80177b4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80177b8:	00fff800 	.word	0x00fff800

080177bc <_ZN8touchgfx8LCD16bppC1Ev>:
 80177bc:	2200      	movs	r2, #0
 80177be:	4910      	ldr	r1, [pc, #64]	; (8017800 <_ZN8touchgfx8LCD16bppC1Ev+0x44>)
 80177c0:	6042      	str	r2, [r0, #4]
 80177c2:	6001      	str	r1, [r0, #0]
 80177c4:	e9c0 2202 	strd	r2, r2, [r0, #8]
 80177c8:	e9c0 2204 	strd	r2, r2, [r0, #16]
 80177cc:	e9c0 2206 	strd	r2, r2, [r0, #24]
 80177d0:	e9c0 2208 	strd	r2, r2, [r0, #32]
 80177d4:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 80177d8:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 80177dc:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 80177e0:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 80177e4:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 80177e8:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 80177ec:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 80177f0:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 80177f4:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 80177f8:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 80177fc:	4770      	bx	lr
 80177fe:	bf00      	nop
 8017800:	0802470c 	.word	0x0802470c

08017804 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 8017804:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017808:	460d      	mov	r5, r1
 801780a:	b08d      	sub	sp, #52	; 0x34
 801780c:	4604      	mov	r4, r0
 801780e:	6808      	ldr	r0, [r1, #0]
 8017810:	6849      	ldr	r1, [r1, #4]
 8017812:	4699      	mov	r9, r3
 8017814:	ab08      	add	r3, sp, #32
 8017816:	c303      	stmia	r3!, {r0, r1}
 8017818:	6810      	ldr	r0, [r2, #0]
 801781a:	6851      	ldr	r1, [r2, #4]
 801781c:	ab0a      	add	r3, sp, #40	; 0x28
 801781e:	c303      	stmia	r3!, {r0, r1}
 8017820:	a808      	add	r0, sp, #32
 8017822:	f7f9 fae7 	bl	8010df4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017826:	4629      	mov	r1, r5
 8017828:	a80a      	add	r0, sp, #40	; 0x28
 801782a:	f7f9 fb0b 	bl	8010e44 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801782e:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 8017832:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 8017836:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 801783a:	4d63      	ldr	r5, [pc, #396]	; (80179c8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801783c:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 8017840:	6828      	ldr	r0, [r5, #0]
 8017842:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 8017846:	fb11 2103 	smlabb	r1, r1, r3, r2
 801784a:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801784e:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 8017852:	440a      	add	r2, r1
 8017854:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8017858:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 801785c:	4413      	add	r3, r2
 801785e:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8017862:	6803      	ldr	r3, [r0, #0]
 8017864:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017866:	4798      	blx	r3
 8017868:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801786c:	d119      	bne.n	80178a2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 801786e:	f010 0f20 	tst.w	r0, #32
 8017872:	6828      	ldr	r0, [r5, #0]
 8017874:	d018      	beq.n	80178a8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 8017876:	2500      	movs	r5, #0
 8017878:	6801      	ldr	r1, [r0, #0]
 801787a:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801787e:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 8017882:	e9cd 9503 	strd	r9, r5, [sp, #12]
 8017886:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 801788a:	9502      	str	r5, [sp, #8]
 801788c:	b2b6      	uxth	r6, r6
 801788e:	fa1f f588 	uxth.w	r5, r8
 8017892:	9601      	str	r6, [sp, #4]
 8017894:	9500      	str	r5, [sp, #0]
 8017896:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 8017898:	4621      	mov	r1, r4
 801789a:	47a8      	blx	r5
 801789c:	b00d      	add	sp, #52	; 0x34
 801789e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80178a2:	f010 0f40 	tst.w	r0, #64	; 0x40
 80178a6:	e7e4      	b.n	8017872 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 80178a8:	6803      	ldr	r3, [r0, #0]
 80178aa:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80178ac:	4798      	blx	r3
 80178ae:	4947      	ldr	r1, [pc, #284]	; (80179cc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 80178b0:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 80178b4:	880b      	ldrh	r3, [r1, #0]
 80178b6:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 80178ba:	fb03 5202 	mla	r2, r3, r2, r5
 80178be:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80178c2:	4373      	muls	r3, r6
 80178c4:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80178c8:	9307      	str	r3, [sp, #28]
 80178ca:	ea4f 0348 	mov.w	r3, r8, lsl #1
 80178ce:	9306      	str	r3, [sp, #24]
 80178d0:	468a      	mov	sl, r1
 80178d2:	9b07      	ldr	r3, [sp, #28]
 80178d4:	4298      	cmp	r0, r3
 80178d6:	d270      	bcs.n	80179ba <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 80178d8:	9b06      	ldr	r3, [sp, #24]
 80178da:	4621      	mov	r1, r4
 80178dc:	eb00 0b03 	add.w	fp, r0, r3
 80178e0:	4558      	cmp	r0, fp
 80178e2:	d25d      	bcs.n	80179a0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 80178e4:	f851 4b04 	ldr.w	r4, [r1], #4
 80178e8:	0e23      	lsrs	r3, r4, #24
 80178ea:	d014      	beq.n	8017916 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 80178ec:	2bff      	cmp	r3, #255	; 0xff
 80178ee:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 80178f2:	d112      	bne.n	801791a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 80178f4:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80178f8:	d10f      	bne.n	801791a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 80178fa:	0963      	lsrs	r3, r4, #5
 80178fc:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8017900:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017904:	f02c 0c07 	bic.w	ip, ip, #7
 8017908:	ea43 0c0c 	orr.w	ip, r3, ip
 801790c:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8017910:	ea4c 0404 	orr.w	r4, ip, r4
 8017914:	8004      	strh	r4, [r0, #0]
 8017916:	3002      	adds	r0, #2
 8017918:	e7e2      	b.n	80178e0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 801791a:	fb09 f303 	mul.w	r3, r9, r3
 801791e:	8807      	ldrh	r7, [r0, #0]
 8017920:	1c5a      	adds	r2, r3, #1
 8017922:	eb02 2223 	add.w	r2, r2, r3, asr #8
 8017926:	1212      	asrs	r2, r2, #8
 8017928:	123e      	asrs	r6, r7, #8
 801792a:	b293      	uxth	r3, r2
 801792c:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 8017930:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8017934:	43d2      	mvns	r2, r2
 8017936:	b2d2      	uxtb	r2, r2
 8017938:	10fd      	asrs	r5, r7, #3
 801793a:	fb1e fe03 	smulbb	lr, lr, r3
 801793e:	00ff      	lsls	r7, r7, #3
 8017940:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8017944:	fb06 e602 	mla	r6, r6, r2, lr
 8017948:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801794c:	b2ff      	uxtb	r7, r7
 801794e:	fa5f fc8c 	uxtb.w	ip, ip
 8017952:	b2e4      	uxtb	r4, r4
 8017954:	b2b6      	uxth	r6, r6
 8017956:	fb1c fc03 	smulbb	ip, ip, r3
 801795a:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801795e:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 8017962:	fb14 f403 	smulbb	r4, r4, r3
 8017966:	fb05 c502 	mla	r5, r5, r2, ip
 801796a:	f106 0e01 	add.w	lr, r6, #1
 801796e:	fb07 4702 	mla	r7, r7, r2, r4
 8017972:	b2ad      	uxth	r5, r5
 8017974:	b2bf      	uxth	r7, r7
 8017976:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 801797a:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
 801797e:	f105 0c01 	add.w	ip, r5, #1
 8017982:	1c7e      	adds	r6, r7, #1
 8017984:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8017988:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801798c:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8017990:	096d      	lsrs	r5, r5, #5
 8017992:	ea46 060e 	orr.w	r6, r6, lr
 8017996:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801799a:	432e      	orrs	r6, r5
 801799c:	8006      	strh	r6, [r0, #0]
 801799e:	e7ba      	b.n	8017916 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 80179a0:	f8ba 3000 	ldrh.w	r3, [sl]
 80179a4:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
 80179a8:	eba3 0308 	sub.w	r3, r3, r8
 80179ac:	eba4 0408 	sub.w	r4, r4, r8
 80179b0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80179b4:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 80179b8:	e78b      	b.n	80178d2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 80179ba:	4b03      	ldr	r3, [pc, #12]	; (80179c8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 80179bc:	6818      	ldr	r0, [r3, #0]
 80179be:	6803      	ldr	r3, [r0, #0]
 80179c0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80179c2:	4798      	blx	r3
 80179c4:	e76a      	b.n	801789c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 80179c6:	bf00      	nop
 80179c8:	20015604 	.word	0x20015604
 80179cc:	200155fe 	.word	0x200155fe

080179d0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 80179d0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80179d4:	460c      	mov	r4, r1
 80179d6:	b085      	sub	sp, #20
 80179d8:	6810      	ldr	r0, [r2, #0]
 80179da:	6851      	ldr	r1, [r2, #4]
 80179dc:	466d      	mov	r5, sp
 80179de:	c503      	stmia	r5!, {r0, r1}
 80179e0:	6818      	ldr	r0, [r3, #0]
 80179e2:	6859      	ldr	r1, [r3, #4]
 80179e4:	4616      	mov	r6, r2
 80179e6:	c503      	stmia	r5!, {r0, r1}
 80179e8:	4668      	mov	r0, sp
 80179ea:	f7f9 fa03 	bl	8010df4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80179ee:	4631      	mov	r1, r6
 80179f0:	a802      	add	r0, sp, #8
 80179f2:	f7f9 fa27 	bl	8010e44 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80179f6:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 80179fa:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 80179fe:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8017a02:	4d28      	ldr	r5, [pc, #160]	; (8017aa4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 8017a04:	4e28      	ldr	r6, [pc, #160]	; (8017aa8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 8017a06:	6828      	ldr	r0, [r5, #0]
 8017a08:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8017a0c:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 8017a10:	fb11 2103 	smlabb	r1, r1, r3, r2
 8017a14:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8017a18:	f8bd 1000 	ldrh.w	r1, [sp]
 8017a1c:	440a      	add	r2, r1
 8017a1e:	f8ad 2008 	strh.w	r2, [sp, #8]
 8017a22:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8017a26:	4413      	add	r3, r2
 8017a28:	f8ad 300a 	strh.w	r3, [sp, #10]
 8017a2c:	6803      	ldr	r3, [r0, #0]
 8017a2e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017a30:	4798      	blx	r3
 8017a32:	8833      	ldrh	r3, [r6, #0]
 8017a34:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 8017a38:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8017a3c:	f8df e06c 	ldr.w	lr, [pc, #108]	; 8017aac <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 8017a40:	fb03 1202 	mla	r2, r3, r2, r1
 8017a44:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8017a48:	fb08 f303 	mul.w	r3, r8, r3
 8017a4c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8017a50:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 8017a54:	4298      	cmp	r0, r3
 8017a56:	d21d      	bcs.n	8017a94 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 8017a58:	eb00 080c 	add.w	r8, r0, ip
 8017a5c:	4540      	cmp	r0, r8
 8017a5e:	d20f      	bcs.n	8017a80 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 8017a60:	f854 1b04 	ldr.w	r1, [r4], #4
 8017a64:	ea4f 1951 	mov.w	r9, r1, lsr #5
 8017a68:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 8017a6c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8017a70:	ea42 0209 	orr.w	r2, r2, r9
 8017a74:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8017a78:	430a      	orrs	r2, r1
 8017a7a:	f820 2b02 	strh.w	r2, [r0], #2
 8017a7e:	e7ed      	b.n	8017a5c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 8017a80:	8832      	ldrh	r2, [r6, #0]
 8017a82:	1bd2      	subs	r2, r2, r7
 8017a84:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8017a88:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 8017a8c:	1bd2      	subs	r2, r2, r7
 8017a8e:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 8017a92:	e7df      	b.n	8017a54 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 8017a94:	6828      	ldr	r0, [r5, #0]
 8017a96:	6803      	ldr	r3, [r0, #0]
 8017a98:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017a9a:	4798      	blx	r3
 8017a9c:	b005      	add	sp, #20
 8017a9e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8017aa2:	bf00      	nop
 8017aa4:	20015604 	.word	0x20015604
 8017aa8:	200155fe 	.word	0x200155fe
 8017aac:	fffff800 	.word	0xfffff800

08017ab0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 8017ab0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8017ab4:	460e      	mov	r6, r1
 8017ab6:	b08e      	sub	sp, #56	; 0x38
 8017ab8:	4604      	mov	r4, r0
 8017aba:	6808      	ldr	r0, [r1, #0]
 8017abc:	6849      	ldr	r1, [r1, #4]
 8017abe:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 8017c98 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 8017ac2:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 8017c9c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 8017ac6:	461d      	mov	r5, r3
 8017ac8:	ab0a      	add	r3, sp, #40	; 0x28
 8017aca:	c303      	stmia	r3!, {r0, r1}
 8017acc:	6810      	ldr	r0, [r2, #0]
 8017ace:	6851      	ldr	r1, [r2, #4]
 8017ad0:	ab0c      	add	r3, sp, #48	; 0x30
 8017ad2:	c303      	stmia	r3!, {r0, r1}
 8017ad4:	a80a      	add	r0, sp, #40	; 0x28
 8017ad6:	f7f9 f98d 	bl	8010df4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017ada:	4631      	mov	r1, r6
 8017adc:	a80c      	add	r0, sp, #48	; 0x30
 8017ade:	f7f9 f9b1 	bl	8010e44 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017ae2:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 8017ae6:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8017aea:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8017aee:	f8d8 0000 	ldr.w	r0, [r8]
 8017af2:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 8017af6:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 8017afa:	fb11 2103 	smlabb	r1, r1, r3, r2
 8017afe:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8017b02:	440c      	add	r4, r1
 8017b04:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 8017b08:	440a      	add	r2, r1
 8017b0a:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8017b0e:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 8017b12:	4413      	add	r3, r2
 8017b14:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8017b18:	6803      	ldr	r3, [r0, #0]
 8017b1a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017b1c:	4798      	blx	r3
 8017b1e:	2dff      	cmp	r5, #255	; 0xff
 8017b20:	d124      	bne.n	8017b6c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 8017b22:	f010 0f01 	tst.w	r0, #1
 8017b26:	f8d8 0000 	ldr.w	r0, [r8]
 8017b2a:	d022      	beq.n	8017b72 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 8017b2c:	2100      	movs	r1, #0
 8017b2e:	f8d0 c000 	ldr.w	ip, [r0]
 8017b32:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8017b36:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 8017b3a:	e9cd 1107 	strd	r1, r1, [sp, #28]
 8017b3e:	f04f 0e01 	mov.w	lr, #1
 8017b42:	f8cd e018 	str.w	lr, [sp, #24]
 8017b46:	f8b9 e000 	ldrh.w	lr, [r9]
 8017b4a:	9503      	str	r5, [sp, #12]
 8017b4c:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 8017b50:	b2b6      	uxth	r6, r6
 8017b52:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8017b56:	9102      	str	r1, [sp, #8]
 8017b58:	b2bf      	uxth	r7, r7
 8017b5a:	9601      	str	r6, [sp, #4]
 8017b5c:	9700      	str	r7, [sp, #0]
 8017b5e:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
 8017b62:	4621      	mov	r1, r4
 8017b64:	47a8      	blx	r5
 8017b66:	b00e      	add	sp, #56	; 0x38
 8017b68:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8017b6c:	f010 0f04 	tst.w	r0, #4
 8017b70:	e7d9      	b.n	8017b26 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 8017b72:	6803      	ldr	r3, [r0, #0]
 8017b74:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017b76:	4798      	blx	r3
 8017b78:	f8b9 3000 	ldrh.w	r3, [r9]
 8017b7c:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 8017b80:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 8017b84:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 8017b88:	fb03 1202 	mla	r2, r3, r2, r1
 8017b8c:	ebac 0c07 	sub.w	ip, ip, r7
 8017b90:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8017b94:	435e      	muls	r6, r3
 8017b96:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 8017b9a:	2dff      	cmp	r5, #255	; 0xff
 8017b9c:	eba3 0707 	sub.w	r7, r3, r7
 8017ba0:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8017ba4:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8017ba8:	ea4f 0747 	mov.w	r7, r7, lsl #1
 8017bac:	d049      	beq.n	8017c42 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 8017bae:	43eb      	mvns	r3, r5
 8017bb0:	fa1f f985 	uxth.w	r9, r5
 8017bb4:	b2db      	uxtb	r3, r3
 8017bb6:	42b0      	cmp	r0, r6
 8017bb8:	d266      	bcs.n	8017c88 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8017bba:	eb00 0a0e 	add.w	sl, r0, lr
 8017bbe:	4550      	cmp	r0, sl
 8017bc0:	4621      	mov	r1, r4
 8017bc2:	f104 0403 	add.w	r4, r4, #3
 8017bc6:	d25b      	bcs.n	8017c80 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 8017bc8:	8802      	ldrh	r2, [r0, #0]
 8017bca:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8017bce:	ea4f 2822 	mov.w	r8, r2, asr #8
 8017bd2:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 8017bd6:	fb11 f109 	smulbb	r1, r1, r9
 8017bda:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 8017bde:	10d5      	asrs	r5, r2, #3
 8017be0:	fb08 1803 	mla	r8, r8, r3, r1
 8017be4:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 8017be8:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8017bec:	fb11 f109 	smulbb	r1, r1, r9
 8017bf0:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8017bf4:	fb05 1503 	mla	r5, r5, r3, r1
 8017bf8:	00d2      	lsls	r2, r2, #3
 8017bfa:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8017bfe:	b2d2      	uxtb	r2, r2
 8017c00:	fb11 f109 	smulbb	r1, r1, r9
 8017c04:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8017c08:	fa1f f888 	uxth.w	r8, r8
 8017c0c:	fb02 1203 	mla	r2, r2, r3, r1
 8017c10:	b292      	uxth	r2, r2
 8017c12:	f108 0101 	add.w	r1, r8, #1
 8017c16:	b2ad      	uxth	r5, r5
 8017c18:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 8017c1c:	1c51      	adds	r1, r2, #1
 8017c1e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8017c22:	1c69      	adds	r1, r5, #1
 8017c24:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8017c28:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 8017c2c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8017c30:	096d      	lsrs	r5, r5, #5
 8017c32:	ea42 0208 	orr.w	r2, r2, r8
 8017c36:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8017c3a:	432a      	orrs	r2, r5
 8017c3c:	f820 2b02 	strh.w	r2, [r0], #2
 8017c40:	e7bd      	b.n	8017bbe <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 8017c42:	4a14      	ldr	r2, [pc, #80]	; (8017c94 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 8017c44:	42b0      	cmp	r0, r6
 8017c46:	d21f      	bcs.n	8017c88 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8017c48:	eb00 050e 	add.w	r5, r0, lr
 8017c4c:	42a8      	cmp	r0, r5
 8017c4e:	4621      	mov	r1, r4
 8017c50:	f104 0403 	add.w	r4, r4, #3
 8017c54:	d210      	bcs.n	8017c78 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 8017c56:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 8017c5a:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8017c5e:	00db      	lsls	r3, r3, #3
 8017c60:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 8017c64:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017c68:	430b      	orrs	r3, r1
 8017c6a:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8017c6e:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 8017c72:	f820 3b02 	strh.w	r3, [r0], #2
 8017c76:	e7e9      	b.n	8017c4c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 8017c78:	4438      	add	r0, r7
 8017c7a:	eb01 040c 	add.w	r4, r1, ip
 8017c7e:	e7e1      	b.n	8017c44 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 8017c80:	4438      	add	r0, r7
 8017c82:	eb01 040c 	add.w	r4, r1, ip
 8017c86:	e796      	b.n	8017bb6 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 8017c88:	4b03      	ldr	r3, [pc, #12]	; (8017c98 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 8017c8a:	6818      	ldr	r0, [r3, #0]
 8017c8c:	6803      	ldr	r3, [r0, #0]
 8017c8e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017c90:	4798      	blx	r3
 8017c92:	e768      	b.n	8017b66 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 8017c94:	fffff800 	.word	0xfffff800
 8017c98:	20015604 	.word	0x20015604
 8017c9c:	200155fe 	.word	0x200155fe

08017ca0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 8017ca0:	b4f0      	push	{r4, r5, r6, r7}
 8017ca2:	4616      	mov	r6, r2
 8017ca4:	2e01      	cmp	r6, #1
 8017ca6:	461c      	mov	r4, r3
 8017ca8:	460d      	mov	r5, r1
 8017caa:	9a04      	ldr	r2, [sp, #16]
 8017cac:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8017cb0:	f89d 7018 	ldrb.w	r7, [sp, #24]
 8017cb4:	d012      	beq.n	8017cdc <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 8017cb6:	d303      	bcc.n	8017cc0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 8017cb8:	2e02      	cmp	r6, #2
 8017cba:	d00a      	beq.n	8017cd2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 8017cbc:	bcf0      	pop	{r4, r5, r6, r7}
 8017cbe:	4770      	bx	lr
 8017cc0:	6805      	ldr	r5, [r0, #0]
 8017cc2:	e9cd 3704 	strd	r3, r7, [sp, #16]
 8017cc6:	68ed      	ldr	r5, [r5, #12]
 8017cc8:	4613      	mov	r3, r2
 8017cca:	46ac      	mov	ip, r5
 8017ccc:	4622      	mov	r2, r4
 8017cce:	bcf0      	pop	{r4, r5, r6, r7}
 8017cd0:	4760      	bx	ip
 8017cd2:	4621      	mov	r1, r4
 8017cd4:	4628      	mov	r0, r5
 8017cd6:	bcf0      	pop	{r4, r5, r6, r7}
 8017cd8:	f7ff bd94 	b.w	8017804 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8017cdc:	4621      	mov	r1, r4
 8017cde:	4628      	mov	r0, r5
 8017ce0:	bcf0      	pop	{r4, r5, r6, r7}
 8017ce2:	f7ff bee5 	b.w	8017ab0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

08017ce8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 8017ce8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017cec:	4681      	mov	r9, r0
 8017cee:	b093      	sub	sp, #76	; 0x4c
 8017cf0:	6810      	ldr	r0, [r2, #0]
 8017cf2:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 8017cf6:	4f6d      	ldr	r7, [pc, #436]	; (8017eac <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 8017cf8:	4688      	mov	r8, r1
 8017cfa:	6851      	ldr	r1, [r2, #4]
 8017cfc:	ac0e      	add	r4, sp, #56	; 0x38
 8017cfe:	c403      	stmia	r4!, {r0, r1}
 8017d00:	6818      	ldr	r0, [r3, #0]
 8017d02:	6859      	ldr	r1, [r3, #4]
 8017d04:	ac10      	add	r4, sp, #64	; 0x40
 8017d06:	4616      	mov	r6, r2
 8017d08:	c403      	stmia	r4!, {r0, r1}
 8017d0a:	a80e      	add	r0, sp, #56	; 0x38
 8017d0c:	f7f9 f872 	bl	8010df4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017d10:	4631      	mov	r1, r6
 8017d12:	a810      	add	r0, sp, #64	; 0x40
 8017d14:	f7f9 f896 	bl	8010e44 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017d18:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 8017d1c:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 8017d20:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 8017d24:	4e62      	ldr	r6, [pc, #392]	; (8017eb0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8017d26:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 8017d2a:	6830      	ldr	r0, [r6, #0]
 8017d2c:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 8017d30:	fb11 2103 	smlabb	r1, r1, r3, r2
 8017d34:	4489      	add	r9, r1
 8017d36:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 8017d3a:	440a      	add	r2, r1
 8017d3c:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 8017d40:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8017d44:	4413      	add	r3, r2
 8017d46:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 8017d4a:	6803      	ldr	r3, [r0, #0]
 8017d4c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017d4e:	4798      	blx	r3
 8017d50:	f010 0f80 	tst.w	r0, #128	; 0x80
 8017d54:	6830      	ldr	r0, [r6, #0]
 8017d56:	d01d      	beq.n	8017d94 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 8017d58:	2200      	movs	r2, #0
 8017d5a:	6801      	ldr	r1, [r0, #0]
 8017d5c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8017d60:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8017d64:	220b      	movs	r2, #11
 8017d66:	9207      	str	r2, [sp, #28]
 8017d68:	883a      	ldrh	r2, [r7, #0]
 8017d6a:	9206      	str	r2, [sp, #24]
 8017d6c:	2201      	movs	r2, #1
 8017d6e:	e9cd a204 	strd	sl, r2, [sp, #16]
 8017d72:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 8017d76:	9203      	str	r2, [sp, #12]
 8017d78:	b2a4      	uxth	r4, r4
 8017d7a:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 8017d7e:	9200      	str	r2, [sp, #0]
 8017d80:	b2ad      	uxth	r5, r5
 8017d82:	9502      	str	r5, [sp, #8]
 8017d84:	9401      	str	r4, [sp, #4]
 8017d86:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 8017d88:	4642      	mov	r2, r8
 8017d8a:	4649      	mov	r1, r9
 8017d8c:	47a0      	blx	r4
 8017d8e:	b013      	add	sp, #76	; 0x4c
 8017d90:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017d94:	6803      	ldr	r3, [r0, #0]
 8017d96:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017d98:	4798      	blx	r3
 8017d9a:	883b      	ldrh	r3, [r7, #0]
 8017d9c:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 8017da0:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 8017da4:	fb03 1202 	mla	r2, r3, r2, r1
 8017da8:	435d      	muls	r5, r3
 8017daa:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8017dae:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 8017db2:	920c      	str	r2, [sp, #48]	; 0x30
 8017db4:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 8017db8:	1b12      	subs	r2, r2, r4
 8017dba:	920d      	str	r2, [sp, #52]	; 0x34
 8017dbc:	0062      	lsls	r2, r4, #1
 8017dbe:	1b1c      	subs	r4, r3, r4
 8017dc0:	0063      	lsls	r3, r4, #1
 8017dc2:	920a      	str	r2, [sp, #40]	; 0x28
 8017dc4:	930b      	str	r3, [sp, #44]	; 0x2c
 8017dc6:	f04f 0e04 	mov.w	lr, #4
 8017dca:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8017dcc:	4298      	cmp	r0, r3
 8017dce:	d266      	bcs.n	8017e9e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 8017dd0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8017dd2:	eb00 0b03 	add.w	fp, r0, r3
 8017dd6:	4558      	cmp	r0, fp
 8017dd8:	d25c      	bcs.n	8017e94 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 8017dda:	f819 3b01 	ldrb.w	r3, [r9], #1
 8017dde:	fb1e e303 	smlabb	r3, lr, r3, lr
 8017de2:	f858 2003 	ldr.w	r2, [r8, r3]
 8017de6:	0e11      	lsrs	r1, r2, #24
 8017de8:	d012      	beq.n	8017e10 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8017dea:	29ff      	cmp	r1, #255	; 0xff
 8017dec:	ea4f 2712 	mov.w	r7, r2, lsr #8
 8017df0:	d110      	bne.n	8017e14 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8017df2:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8017df6:	d10d      	bne.n	8017e14 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8017df8:	0953      	lsrs	r3, r2, #5
 8017dfa:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 8017dfe:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017e02:	f027 0707 	bic.w	r7, r7, #7
 8017e06:	431f      	orrs	r7, r3
 8017e08:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8017e0c:	433a      	orrs	r2, r7
 8017e0e:	8002      	strh	r2, [r0, #0]
 8017e10:	3002      	adds	r0, #2
 8017e12:	e7e0      	b.n	8017dd6 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 8017e14:	fb0a f101 	mul.w	r1, sl, r1
 8017e18:	8806      	ldrh	r6, [r0, #0]
 8017e1a:	1c4b      	adds	r3, r1, #1
 8017e1c:	eb03 2321 	add.w	r3, r3, r1, asr #8
 8017e20:	1235      	asrs	r5, r6, #8
 8017e22:	10f4      	asrs	r4, r6, #3
 8017e24:	121b      	asrs	r3, r3, #8
 8017e26:	00f6      	lsls	r6, r6, #3
 8017e28:	b299      	uxth	r1, r3
 8017e2a:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 8017e2e:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8017e32:	b2f6      	uxtb	r6, r6
 8017e34:	43db      	mvns	r3, r3
 8017e36:	b2d2      	uxtb	r2, r2
 8017e38:	b2db      	uxtb	r3, r3
 8017e3a:	fb1c fc01 	smulbb	ip, ip, r1
 8017e3e:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 8017e42:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8017e46:	fb12 f201 	smulbb	r2, r2, r1
 8017e4a:	fb05 c503 	mla	r5, r5, r3, ip
 8017e4e:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8017e52:	b2ff      	uxtb	r7, r7
 8017e54:	fb06 2203 	mla	r2, r6, r3, r2
 8017e58:	b2ad      	uxth	r5, r5
 8017e5a:	fb17 f701 	smulbb	r7, r7, r1
 8017e5e:	b292      	uxth	r2, r2
 8017e60:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 8017e64:	fb04 7403 	mla	r4, r4, r3, r7
 8017e68:	f105 0c01 	add.w	ip, r5, #1
 8017e6c:	1c57      	adds	r7, r2, #1
 8017e6e:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8017e72:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8017e76:	b2a4      	uxth	r4, r4
 8017e78:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8017e7c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8017e80:	433d      	orrs	r5, r7
 8017e82:	1c67      	adds	r7, r4, #1
 8017e84:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 8017e88:	0964      	lsrs	r4, r4, #5
 8017e8a:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8017e8e:	4325      	orrs	r5, r4
 8017e90:	8005      	strh	r5, [r0, #0]
 8017e92:	e7bd      	b.n	8017e10 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8017e94:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8017e96:	4418      	add	r0, r3
 8017e98:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017e9a:	4499      	add	r9, r3
 8017e9c:	e795      	b.n	8017dca <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 8017e9e:	4b04      	ldr	r3, [pc, #16]	; (8017eb0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8017ea0:	6818      	ldr	r0, [r3, #0]
 8017ea2:	6803      	ldr	r3, [r0, #0]
 8017ea4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017ea6:	4798      	blx	r3
 8017ea8:	e771      	b.n	8017d8e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 8017eaa:	bf00      	nop
 8017eac:	200155fe 	.word	0x200155fe
 8017eb0:	20015604 	.word	0x20015604

08017eb4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 8017eb4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017eb8:	b087      	sub	sp, #28
 8017eba:	4680      	mov	r8, r0
 8017ebc:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 8017ec0:	460d      	mov	r5, r1
 8017ec2:	4614      	mov	r4, r2
 8017ec4:	2e00      	cmp	r6, #0
 8017ec6:	f000 80b9 	beq.w	801803c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 8017eca:	6810      	ldr	r0, [r2, #0]
 8017ecc:	6851      	ldr	r1, [r2, #4]
 8017ece:	af02      	add	r7, sp, #8
 8017ed0:	c703      	stmia	r7!, {r0, r1}
 8017ed2:	6818      	ldr	r0, [r3, #0]
 8017ed4:	6859      	ldr	r1, [r3, #4]
 8017ed6:	af04      	add	r7, sp, #16
 8017ed8:	c703      	stmia	r7!, {r0, r1}
 8017eda:	a802      	add	r0, sp, #8
 8017edc:	f7f8 ff8a 	bl	8010df4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017ee0:	4621      	mov	r1, r4
 8017ee2:	a804      	add	r0, sp, #16
 8017ee4:	f7f8 ffae 	bl	8010e44 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017ee8:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8017eec:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8017ef0:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 8017ef4:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 8017ef8:	fb14 2103 	smlabb	r1, r4, r3, r2
 8017efc:	eb08 0401 	add.w	r4, r8, r1
 8017f00:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8017f04:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8017f08:	440a      	add	r2, r1
 8017f0a:	f8ad 2010 	strh.w	r2, [sp, #16]
 8017f0e:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8017f12:	4413      	add	r3, r2
 8017f14:	f8ad 3012 	strh.w	r3, [sp, #18]
 8017f18:	4b4a      	ldr	r3, [pc, #296]	; (8018044 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 8017f1a:	6818      	ldr	r0, [r3, #0]
 8017f1c:	6803      	ldr	r3, [r0, #0]
 8017f1e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017f20:	4798      	blx	r3
 8017f22:	4b49      	ldr	r3, [pc, #292]	; (8018048 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 8017f24:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 8017f28:	881a      	ldrh	r2, [r3, #0]
 8017f2a:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 8017f2e:	2eff      	cmp	r6, #255	; 0xff
 8017f30:	fb02 c101 	mla	r1, r2, r1, ip
 8017f34:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8017f38:	fb02 f207 	mul.w	r2, r2, r7
 8017f3c:	f105 0104 	add.w	r1, r5, #4
 8017f40:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 8017f44:	461d      	mov	r5, r3
 8017f46:	d05a      	beq.n	8017ffe <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 8017f48:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 8017f4c:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8017f50:	b2b6      	uxth	r6, r6
 8017f52:	fa1f fe8e 	uxth.w	lr, lr
 8017f56:	9301      	str	r3, [sp, #4]
 8017f58:	4282      	cmp	r2, r0
 8017f5a:	d96a      	bls.n	8018032 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 8017f5c:	eb00 0b0a 	add.w	fp, r0, sl
 8017f60:	4583      	cmp	fp, r0
 8017f62:	d940      	bls.n	8017fe6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 8017f64:	f814 3b01 	ldrb.w	r3, [r4], #1
 8017f68:	8805      	ldrh	r5, [r0, #0]
 8017f6a:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8017f6e:	122f      	asrs	r7, r5, #8
 8017f70:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8017f74:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8017f78:	fb17 f70e 	smulbb	r7, r7, lr
 8017f7c:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8017f80:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8017f84:	00ed      	lsls	r5, r5, #3
 8017f86:	fb0c 7c06 	mla	ip, ip, r6, r7
 8017f8a:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8017f8e:	10df      	asrs	r7, r3, #3
 8017f90:	b2ed      	uxtb	r5, r5
 8017f92:	00db      	lsls	r3, r3, #3
 8017f94:	fa1f fc8c 	uxth.w	ip, ip
 8017f98:	fb19 f90e 	smulbb	r9, r9, lr
 8017f9c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8017fa0:	b2db      	uxtb	r3, r3
 8017fa2:	fb15 f50e 	smulbb	r5, r5, lr
 8017fa6:	fb07 9706 	mla	r7, r7, r6, r9
 8017faa:	fb03 5306 	mla	r3, r3, r6, r5
 8017fae:	f10c 0901 	add.w	r9, ip, #1
 8017fb2:	b29b      	uxth	r3, r3
 8017fb4:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 8017fb8:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 8017fbc:	f103 0c01 	add.w	ip, r3, #1
 8017fc0:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8017fc4:	b2bf      	uxth	r7, r7
 8017fc6:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8017fca:	ea4c 0c09 	orr.w	ip, ip, r9
 8017fce:	f107 0901 	add.w	r9, r7, #1
 8017fd2:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 8017fd6:	097f      	lsrs	r7, r7, #5
 8017fd8:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8017fdc:	ea4c 0c07 	orr.w	ip, ip, r7
 8017fe0:	f820 cb02 	strh.w	ip, [r0], #2
 8017fe4:	e7bc      	b.n	8017f60 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 8017fe6:	9b01      	ldr	r3, [sp, #4]
 8017fe8:	881b      	ldrh	r3, [r3, #0]
 8017fea:	eba3 0308 	sub.w	r3, r3, r8
 8017fee:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017ff2:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8017ff6:	eba3 0308 	sub.w	r3, r3, r8
 8017ffa:	441c      	add	r4, r3
 8017ffc:	e7ac      	b.n	8017f58 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 8017ffe:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8018002:	4282      	cmp	r2, r0
 8018004:	d915      	bls.n	8018032 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 8018006:	eb00 060a 	add.w	r6, r0, sl
 801800a:	4286      	cmp	r6, r0
 801800c:	d906      	bls.n	801801c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 801800e:	f814 3b01 	ldrb.w	r3, [r4], #1
 8018012:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8018016:	f820 3b02 	strh.w	r3, [r0], #2
 801801a:	e7f6      	b.n	801800a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 801801c:	882b      	ldrh	r3, [r5, #0]
 801801e:	eba3 0308 	sub.w	r3, r3, r8
 8018022:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018026:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801802a:	eba3 0308 	sub.w	r3, r3, r8
 801802e:	441c      	add	r4, r3
 8018030:	e7e7      	b.n	8018002 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 8018032:	4b04      	ldr	r3, [pc, #16]	; (8018044 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 8018034:	6818      	ldr	r0, [r3, #0]
 8018036:	6803      	ldr	r3, [r0, #0]
 8018038:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801803a:	4798      	blx	r3
 801803c:	b007      	add	sp, #28
 801803e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018042:	bf00      	nop
 8018044:	20015604 	.word	0x20015604
 8018048:	200155fe 	.word	0x200155fe

0801804c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 801804c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018050:	b091      	sub	sp, #68	; 0x44
 8018052:	4680      	mov	r8, r0
 8018054:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 8018058:	460f      	mov	r7, r1
 801805a:	4614      	mov	r4, r2
 801805c:	2d00      	cmp	r5, #0
 801805e:	d051      	beq.n	8018104 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 8018060:	6810      	ldr	r0, [r2, #0]
 8018062:	6851      	ldr	r1, [r2, #4]
 8018064:	f8df 9200 	ldr.w	r9, [pc, #512]	; 8018268 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 8018068:	ae0c      	add	r6, sp, #48	; 0x30
 801806a:	c603      	stmia	r6!, {r0, r1}
 801806c:	6818      	ldr	r0, [r3, #0]
 801806e:	6859      	ldr	r1, [r3, #4]
 8018070:	ae0e      	add	r6, sp, #56	; 0x38
 8018072:	c603      	stmia	r6!, {r0, r1}
 8018074:	a80c      	add	r0, sp, #48	; 0x30
 8018076:	f7f8 febd 	bl	8010df4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801807a:	4621      	mov	r1, r4
 801807c:	a80e      	add	r0, sp, #56	; 0x38
 801807e:	f7f8 fee1 	bl	8010e44 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8018082:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 8018086:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801808a:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 801808e:	f8d9 0000 	ldr.w	r0, [r9]
 8018092:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 8018096:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 801809a:	fb11 2103 	smlabb	r1, r1, r3, r2
 801809e:	eb08 0401 	add.w	r4, r8, r1
 80180a2:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 80180a6:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 801826c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 80180aa:	440a      	add	r2, r1
 80180ac:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 80180b0:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 80180b4:	4413      	add	r3, r2
 80180b6:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 80180ba:	6803      	ldr	r3, [r0, #0]
 80180bc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80180be:	4798      	blx	r3
 80180c0:	f010 0f80 	tst.w	r0, #128	; 0x80
 80180c4:	f8d9 0000 	ldr.w	r0, [r9]
 80180c8:	d01f      	beq.n	801810a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 80180ca:	2200      	movs	r2, #0
 80180cc:	6801      	ldr	r1, [r0, #0]
 80180ce:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 80180d2:	e9cd 2208 	strd	r2, r2, [sp, #32]
 80180d6:	220b      	movs	r2, #11
 80180d8:	9207      	str	r2, [sp, #28]
 80180da:	f8b8 2000 	ldrh.w	r2, [r8]
 80180de:	9206      	str	r2, [sp, #24]
 80180e0:	2201      	movs	r2, #1
 80180e2:	e9cd 5204 	strd	r5, r2, [sp, #16]
 80180e6:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 80180ea:	9203      	str	r2, [sp, #12]
 80180ec:	fa1f f28a 	uxth.w	r2, sl
 80180f0:	9202      	str	r2, [sp, #8]
 80180f2:	b2b6      	uxth	r6, r6
 80180f4:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 80180f8:	9200      	str	r2, [sp, #0]
 80180fa:	9601      	str	r6, [sp, #4]
 80180fc:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 80180fe:	463a      	mov	r2, r7
 8018100:	4621      	mov	r1, r4
 8018102:	47a8      	blx	r5
 8018104:	b011      	add	sp, #68	; 0x44
 8018106:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801810a:	6803      	ldr	r3, [r0, #0]
 801810c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801810e:	4798      	blx	r3
 8018110:	f8b8 2000 	ldrh.w	r2, [r8]
 8018114:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 8018118:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 801811c:	2dff      	cmp	r5, #255	; 0xff
 801811e:	fb02 1303 	mla	r3, r2, r3, r1
 8018122:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018126:	ea4f 0946 	mov.w	r9, r6, lsl #1
 801812a:	fb0a fa02 	mul.w	sl, sl, r2
 801812e:	d062      	beq.n	80181f6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 8018130:	ea6f 0c05 	mvn.w	ip, r5
 8018134:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 8018138:	930a      	str	r3, [sp, #40]	; 0x28
 801813a:	b2ad      	uxth	r5, r5
 801813c:	fa5f fc8c 	uxtb.w	ip, ip
 8018140:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 8018144:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018146:	4298      	cmp	r0, r3
 8018148:	f080 8085 	bcs.w	8018256 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801814c:	eb00 0b09 	add.w	fp, r0, r9
 8018150:	4558      	cmp	r0, fp
 8018152:	d246      	bcs.n	80181e2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 8018154:	f814 eb01 	ldrb.w	lr, [r4], #1
 8018158:	2303      	movs	r3, #3
 801815a:	2204      	movs	r2, #4
 801815c:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 8018160:	eb07 0a0e 	add.w	sl, r7, lr
 8018164:	8803      	ldrh	r3, [r0, #0]
 8018166:	f89a 8002 	ldrb.w	r8, [sl, #2]
 801816a:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801816e:	1219      	asrs	r1, r3, #8
 8018170:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8018174:	fb18 f805 	smulbb	r8, r8, r5
 8018178:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 801817c:	10da      	asrs	r2, r3, #3
 801817e:	fb01 810c 	mla	r1, r1, ip, r8
 8018182:	00db      	lsls	r3, r3, #3
 8018184:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8018188:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801818c:	b2db      	uxtb	r3, r3
 801818e:	fb18 f805 	smulbb	r8, r8, r5
 8018192:	fb1e fe05 	smulbb	lr, lr, r5
 8018196:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 801819a:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 801819e:	b289      	uxth	r1, r1
 80181a0:	fb02 820c 	mla	r2, r2, ip, r8
 80181a4:	fb03 e30c 	mla	r3, r3, ip, lr
 80181a8:	b292      	uxth	r2, r2
 80181aa:	b29b      	uxth	r3, r3
 80181ac:	f101 0801 	add.w	r8, r1, #1
 80181b0:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 80181b4:	f103 0e01 	add.w	lr, r3, #1
 80181b8:	f102 0801 	add.w	r8, r2, #1
 80181bc:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 80181c0:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 80181c4:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 80181c8:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 80181cc:	ea4f 1858 	mov.w	r8, r8, lsr #5
 80181d0:	ea4e 0101 	orr.w	r1, lr, r1
 80181d4:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80181d8:	ea41 0108 	orr.w	r1, r1, r8
 80181dc:	f820 1b02 	strh.w	r1, [r0], #2
 80181e0:	e7b6      	b.n	8018150 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 80181e2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80181e4:	881b      	ldrh	r3, [r3, #0]
 80181e6:	1b9b      	subs	r3, r3, r6
 80181e8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80181ec:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 80181f0:	1b9b      	subs	r3, r3, r6
 80181f2:	441c      	add	r4, r3
 80181f4:	e7a6      	b.n	8018144 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 80181f6:	491b      	ldr	r1, [pc, #108]	; (8018264 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 80181f8:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 80181fc:	2203      	movs	r2, #3
 80181fe:	2504      	movs	r5, #4
 8018200:	4550      	cmp	r0, sl
 8018202:	d228      	bcs.n	8018256 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 8018204:	eb00 0c09 	add.w	ip, r0, r9
 8018208:	4560      	cmp	r0, ip
 801820a:	4623      	mov	r3, r4
 801820c:	d219      	bcs.n	8018242 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 801820e:	f893 e000 	ldrb.w	lr, [r3]
 8018212:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 8018216:	eb07 0b0e 	add.w	fp, r7, lr
 801821a:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801821e:	f89b 3002 	ldrb.w	r3, [fp, #2]
 8018222:	f89b b001 	ldrb.w	fp, [fp, #1]
 8018226:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 801822a:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 801822e:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8018232:	ea43 030b 	orr.w	r3, r3, fp
 8018236:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 801823a:	3401      	adds	r4, #1
 801823c:	f820 3b02 	strh.w	r3, [r0], #2
 8018240:	e7e2      	b.n	8018208 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 8018242:	f8b8 3000 	ldrh.w	r3, [r8]
 8018246:	1b9b      	subs	r3, r3, r6
 8018248:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801824c:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8018250:	1b9b      	subs	r3, r3, r6
 8018252:	441c      	add	r4, r3
 8018254:	e7d4      	b.n	8018200 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 8018256:	4b04      	ldr	r3, [pc, #16]	; (8018268 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 8018258:	6818      	ldr	r0, [r3, #0]
 801825a:	6803      	ldr	r3, [r0, #0]
 801825c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801825e:	4798      	blx	r3
 8018260:	e750      	b.n	8018104 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 8018262:	bf00      	nop
 8018264:	fffff800 	.word	0xfffff800
 8018268:	20015604 	.word	0x20015604
 801826c:	200155fe 	.word	0x200155fe

08018270 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 8018270:	b430      	push	{r4, r5}
 8018272:	780d      	ldrb	r5, [r1, #0]
 8018274:	f89d 4008 	ldrb.w	r4, [sp, #8]
 8018278:	2d01      	cmp	r5, #1
 801827a:	d00a      	beq.n	8018292 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x22>
 801827c:	d305      	bcc.n	801828a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1a>
 801827e:	2d02      	cmp	r5, #2
 8018280:	d10b      	bne.n	801829a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x2a>
 8018282:	9402      	str	r4, [sp, #8]
 8018284:	bc30      	pop	{r4, r5}
 8018286:	f7ff be15 	b.w	8017eb4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 801828a:	9402      	str	r4, [sp, #8]
 801828c:	bc30      	pop	{r4, r5}
 801828e:	f7ff bd2b 	b.w	8017ce8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 8018292:	9402      	str	r4, [sp, #8]
 8018294:	bc30      	pop	{r4, r5}
 8018296:	f7ff bed9 	b.w	801804c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 801829a:	bc30      	pop	{r4, r5}
 801829c:	4770      	bx	lr
	...

080182a0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 80182a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80182a4:	4604      	mov	r4, r0
 80182a6:	b087      	sub	sp, #28
 80182a8:	6810      	ldr	r0, [r2, #0]
 80182aa:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 80182ae:	f8df 9238 	ldr.w	r9, [pc, #568]	; 80184e8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 80182b2:	460e      	mov	r6, r1
 80182b4:	6851      	ldr	r1, [r2, #4]
 80182b6:	ad02      	add	r5, sp, #8
 80182b8:	c503      	stmia	r5!, {r0, r1}
 80182ba:	6818      	ldr	r0, [r3, #0]
 80182bc:	6859      	ldr	r1, [r3, #4]
 80182be:	ad04      	add	r5, sp, #16
 80182c0:	4617      	mov	r7, r2
 80182c2:	c503      	stmia	r5!, {r0, r1}
 80182c4:	a802      	add	r0, sp, #8
 80182c6:	f7f8 fd95 	bl	8010df4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80182ca:	4639      	mov	r1, r7
 80182cc:	a804      	add	r0, sp, #16
 80182ce:	f7f8 fdb9 	bl	8010e44 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80182d2:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 80182d6:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80182da:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 80182de:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 80182e2:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 80182e6:	fb11 2103 	smlabb	r1, r1, r3, r2
 80182ea:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 80182ee:	440e      	add	r6, r1
 80182f0:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 80182f4:	440a      	add	r2, r1
 80182f6:	f8ad 2010 	strh.w	r2, [sp, #16]
 80182fa:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 80182fe:	4413      	add	r3, r2
 8018300:	f8ad 3012 	strh.w	r3, [sp, #18]
 8018304:	4b77      	ldr	r3, [pc, #476]	; (80184e4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 8018306:	6818      	ldr	r0, [r3, #0]
 8018308:	6803      	ldr	r3, [r0, #0]
 801830a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801830c:	4798      	blx	r3
 801830e:	f8b9 b000 	ldrh.w	fp, [r9]
 8018312:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8018316:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801831a:	fb0b 2303 	mla	r3, fp, r3, r2
 801831e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018322:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8018326:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801832a:	fb05 f50b 	mul.w	r5, r5, fp
 801832e:	9300      	str	r3, [sp, #0]
 8018330:	d069      	beq.n	8018406 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 8018332:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 8018336:	4558      	cmp	r0, fp
 8018338:	f080 80cc 	bcs.w	80184d4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801833c:	9b00      	ldr	r3, [sp, #0]
 801833e:	18c3      	adds	r3, r0, r3
 8018340:	9301      	str	r3, [sp, #4]
 8018342:	4631      	mov	r1, r6
 8018344:	9b01      	ldr	r3, [sp, #4]
 8018346:	4298      	cmp	r0, r3
 8018348:	d24f      	bcs.n	80183ea <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 801834a:	f811 2b01 	ldrb.w	r2, [r1], #1
 801834e:	2a00      	cmp	r2, #0
 8018350:	d048      	beq.n	80183e4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 8018352:	fb0a f202 	mul.w	r2, sl, r2
 8018356:	1c53      	adds	r3, r2, #1
 8018358:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801835c:	121b      	asrs	r3, r3, #8
 801835e:	d041      	beq.n	80183e4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 8018360:	8802      	ldrh	r2, [r0, #0]
 8018362:	f8b4 c000 	ldrh.w	ip, [r4]
 8018366:	b29e      	uxth	r6, r3
 8018368:	1215      	asrs	r5, r2, #8
 801836a:	43db      	mvns	r3, r3
 801836c:	b2db      	uxtb	r3, r3
 801836e:	ea4f 272c 	mov.w	r7, ip, asr #8
 8018372:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8018376:	fb15 f503 	smulbb	r5, r5, r3
 801837a:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 801837e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8018382:	00d2      	lsls	r2, r2, #3
 8018384:	fb07 5706 	mla	r7, r7, r6, r5
 8018388:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801838c:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8018390:	b2d2      	uxtb	r2, r2
 8018392:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8018396:	b2bf      	uxth	r7, r7
 8018398:	fb1e fe03 	smulbb	lr, lr, r3
 801839c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80183a0:	fa5f fc8c 	uxtb.w	ip, ip
 80183a4:	fb12 f203 	smulbb	r2, r2, r3
 80183a8:	fb05 e506 	mla	r5, r5, r6, lr
 80183ac:	fb0c 2c06 	mla	ip, ip, r6, r2
 80183b0:	f107 0e01 	add.w	lr, r7, #1
 80183b4:	fa1f fc8c 	uxth.w	ip, ip
 80183b8:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 80183bc:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 80183c0:	f10c 0701 	add.w	r7, ip, #1
 80183c4:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80183c8:	b2ad      	uxth	r5, r5
 80183ca:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80183ce:	ea47 070e 	orr.w	r7, r7, lr
 80183d2:	f105 0e01 	add.w	lr, r5, #1
 80183d6:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 80183da:	096d      	lsrs	r5, r5, #5
 80183dc:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80183e0:	432f      	orrs	r7, r5
 80183e2:	8007      	strh	r7, [r0, #0]
 80183e4:	3002      	adds	r0, #2
 80183e6:	3402      	adds	r4, #2
 80183e8:	e7ac      	b.n	8018344 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 80183ea:	f8b9 3000 	ldrh.w	r3, [r9]
 80183ee:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 80183f2:	eba3 0308 	sub.w	r3, r3, r8
 80183f6:	eba6 0608 	sub.w	r6, r6, r8
 80183fa:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 80183fe:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018402:	440e      	add	r6, r1
 8018404:	e797      	b.n	8018336 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 8018406:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 801840a:	42a8      	cmp	r0, r5
 801840c:	d262      	bcs.n	80184d4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801840e:	9b00      	ldr	r3, [sp, #0]
 8018410:	4631      	mov	r1, r6
 8018412:	eb00 0b03 	add.w	fp, r0, r3
 8018416:	4558      	cmp	r0, fp
 8018418:	d24e      	bcs.n	80184b8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 801841a:	f811 3b01 	ldrb.w	r3, [r1], #1
 801841e:	b12b      	cbz	r3, 801842c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 8018420:	2bff      	cmp	r3, #255	; 0xff
 8018422:	f8b4 e000 	ldrh.w	lr, [r4]
 8018426:	d104      	bne.n	8018432 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 8018428:	f8a0 e000 	strh.w	lr, [r0]
 801842c:	3002      	adds	r0, #2
 801842e:	3402      	adds	r4, #2
 8018430:	e7f1      	b.n	8018416 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 8018432:	8802      	ldrh	r2, [r0, #0]
 8018434:	b29f      	uxth	r7, r3
 8018436:	1216      	asrs	r6, r2, #8
 8018438:	43db      	mvns	r3, r3
 801843a:	b2db      	uxtb	r3, r3
 801843c:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8018440:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8018444:	fb16 f603 	smulbb	r6, r6, r3
 8018448:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 801844c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8018450:	00d2      	lsls	r2, r2, #3
 8018452:	fb0c 6c07 	mla	ip, ip, r7, r6
 8018456:	b2d2      	uxtb	r2, r2
 8018458:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801845c:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8018460:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8018464:	fb1a fa03 	smulbb	sl, sl, r3
 8018468:	fa1f fc8c 	uxth.w	ip, ip
 801846c:	fb12 f303 	smulbb	r3, r2, r3
 8018470:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8018474:	fa5f fe8e 	uxtb.w	lr, lr
 8018478:	fb06 a607 	mla	r6, r6, r7, sl
 801847c:	f10c 0201 	add.w	r2, ip, #1
 8018480:	fb0e 3307 	mla	r3, lr, r7, r3
 8018484:	b2b6      	uxth	r6, r6
 8018486:	b29b      	uxth	r3, r3
 8018488:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801848c:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 8018490:	f106 0a01 	add.w	sl, r6, #1
 8018494:	f103 0c01 	add.w	ip, r3, #1
 8018498:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801849c:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 80184a0:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80184a4:	0976      	lsrs	r6, r6, #5
 80184a6:	ea4c 0c02 	orr.w	ip, ip, r2
 80184aa:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80184ae:	ea4c 0c06 	orr.w	ip, ip, r6
 80184b2:	f8a0 c000 	strh.w	ip, [r0]
 80184b6:	e7b9      	b.n	801842c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 80184b8:	f8b9 3000 	ldrh.w	r3, [r9]
 80184bc:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 80184c0:	eba3 0308 	sub.w	r3, r3, r8
 80184c4:	eba6 0608 	sub.w	r6, r6, r8
 80184c8:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 80184cc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80184d0:	440e      	add	r6, r1
 80184d2:	e79a      	b.n	801840a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 80184d4:	4b03      	ldr	r3, [pc, #12]	; (80184e4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 80184d6:	6818      	ldr	r0, [r3, #0]
 80184d8:	6803      	ldr	r3, [r0, #0]
 80184da:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80184dc:	4798      	blx	r3
 80184de:	b007      	add	sp, #28
 80184e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80184e4:	20015604 	.word	0x20015604
 80184e8:	200155fe 	.word	0x200155fe

080184ec <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 80184ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80184f0:	b089      	sub	sp, #36	; 0x24
 80184f2:	4682      	mov	sl, r0
 80184f4:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 80184f8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80184fa:	460f      	mov	r7, r1
 80184fc:	4691      	mov	r9, r2
 80184fe:	4698      	mov	r8, r3
 8018500:	2e00      	cmp	r6, #0
 8018502:	d036      	beq.n	8018572 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 8018504:	4608      	mov	r0, r1
 8018506:	f7fc f863 	bl	80145d0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801850a:	4605      	mov	r5, r0
 801850c:	4638      	mov	r0, r7
 801850e:	f7fc f893 	bl	8014638 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8018512:	f8ad 000e 	strh.w	r0, [sp, #14]
 8018516:	4638      	mov	r0, r7
 8018518:	f8ad 9008 	strh.w	r9, [sp, #8]
 801851c:	f8ad 500c 	strh.w	r5, [sp, #12]
 8018520:	f8ad 800a 	strh.w	r8, [sp, #10]
 8018524:	f7fc f940 	bl	80147a8 <_ZNK8touchgfx6Bitmap7getDataEv>
 8018528:	4605      	mov	r5, r0
 801852a:	4638      	mov	r0, r7
 801852c:	f7fc f96c 	bl	8014808 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 8018530:	4681      	mov	r9, r0
 8018532:	4638      	mov	r0, r7
 8018534:	f7fc f9bc 	bl	80148b0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8018538:	280b      	cmp	r0, #11
 801853a:	d81a      	bhi.n	8018572 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 801853c:	e8df f000 	tbb	[pc, r0]
 8018540:	1906aebd 	.word	0x1906aebd
 8018544:	19191919 	.word	0x19191919
 8018548:	b5191919 	.word	0xb5191919
 801854c:	4bb0      	ldr	r3, [pc, #704]	; (8018810 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
 801854e:	6818      	ldr	r0, [r3, #0]
 8018550:	6803      	ldr	r3, [r0, #0]
 8018552:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8018554:	4798      	blx	r3
 8018556:	2eff      	cmp	r6, #255	; 0xff
 8018558:	d121      	bne.n	801859e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb2>
 801855a:	0683      	lsls	r3, r0, #26
 801855c:	d41f      	bmi.n	801859e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb2>
 801855e:	4638      	mov	r0, r7
 8018560:	f7fc f8ea 	bl	8014738 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8018564:	b940      	cbnz	r0, 8018578 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x8c>
 8018566:	4623      	mov	r3, r4
 8018568:	aa02      	add	r2, sp, #8
 801856a:	4629      	mov	r1, r5
 801856c:	4650      	mov	r0, sl
 801856e:	f7ff fa2f 	bl	80179d0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 8018572:	b009      	add	sp, #36	; 0x24
 8018574:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018578:	f10d 0818 	add.w	r8, sp, #24
 801857c:	4639      	mov	r1, r7
 801857e:	4640      	mov	r0, r8
 8018580:	f7fc f88e 	bl	80146a0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8018584:	e898 0003 	ldmia.w	r8, {r0, r1}
 8018588:	af04      	add	r7, sp, #16
 801858a:	e887 0003 	stmia.w	r7, {r0, r1}
 801858e:	4638      	mov	r0, r7
 8018590:	4621      	mov	r1, r4
 8018592:	f7f2 fc5b 	bl	800ae4c <_ZN8touchgfx4RectaNERKS0_>
 8018596:	4638      	mov	r0, r7
 8018598:	f7f2 fc9b 	bl	800aed2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801859c:	b130      	cbz	r0, 80185ac <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc0>
 801859e:	4633      	mov	r3, r6
 80185a0:	4622      	mov	r2, r4
 80185a2:	a902      	add	r1, sp, #8
 80185a4:	4628      	mov	r0, r5
 80185a6:	f7ff f92d 	bl	8017804 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80185aa:	e7e2      	b.n	8018572 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 80185ac:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80185b0:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80185b4:	4293      	cmp	r3, r2
 80185b6:	dd12      	ble.n	80185de <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf2>
 80185b8:	1a9b      	subs	r3, r3, r2
 80185ba:	f9b4 0000 	ldrsh.w	r0, [r4]
 80185be:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80185c2:	f8ad 0018 	strh.w	r0, [sp, #24]
 80185c6:	f8ad 201a 	strh.w	r2, [sp, #26]
 80185ca:	f8ad 101c 	strh.w	r1, [sp, #28]
 80185ce:	f8ad 301e 	strh.w	r3, [sp, #30]
 80185d2:	4642      	mov	r2, r8
 80185d4:	4633      	mov	r3, r6
 80185d6:	a902      	add	r1, sp, #8
 80185d8:	4628      	mov	r0, r5
 80185da:	f7ff f913 	bl	8017804 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80185de:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 80185e2:	f9b4 2000 	ldrsh.w	r2, [r4]
 80185e6:	4293      	cmp	r3, r2
 80185e8:	dd12      	ble.n	8018610 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x124>
 80185ea:	1a9b      	subs	r3, r3, r2
 80185ec:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 80185f0:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 80185f4:	f8ad 2018 	strh.w	r2, [sp, #24]
 80185f8:	f8ad 001a 	strh.w	r0, [sp, #26]
 80185fc:	f8ad 301c 	strh.w	r3, [sp, #28]
 8018600:	f8ad 101e 	strh.w	r1, [sp, #30]
 8018604:	23ff      	movs	r3, #255	; 0xff
 8018606:	4642      	mov	r2, r8
 8018608:	a902      	add	r1, sp, #8
 801860a:	4628      	mov	r0, r5
 801860c:	f7ff f8fa 	bl	8017804 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8018610:	463b      	mov	r3, r7
 8018612:	aa02      	add	r2, sp, #8
 8018614:	4629      	mov	r1, r5
 8018616:	4650      	mov	r0, sl
 8018618:	f7ff f9da 	bl	80179d0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801861c:	88a2      	ldrh	r2, [r4, #4]
 801861e:	8823      	ldrh	r3, [r4, #0]
 8018620:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8018624:	4413      	add	r3, r2
 8018626:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801862a:	440a      	add	r2, r1
 801862c:	b29b      	uxth	r3, r3
 801862e:	b292      	uxth	r2, r2
 8018630:	b211      	sxth	r1, r2
 8018632:	b218      	sxth	r0, r3
 8018634:	4288      	cmp	r0, r1
 8018636:	dd12      	ble.n	801865e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x172>
 8018638:	1a9b      	subs	r3, r3, r2
 801863a:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801863e:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 8018642:	f8ad 1018 	strh.w	r1, [sp, #24]
 8018646:	f8ad 301c 	strh.w	r3, [sp, #28]
 801864a:	f8ad 001e 	strh.w	r0, [sp, #30]
 801864e:	23ff      	movs	r3, #255	; 0xff
 8018650:	4642      	mov	r2, r8
 8018652:	a902      	add	r1, sp, #8
 8018654:	4628      	mov	r0, r5
 8018656:	f8ad 601a 	strh.w	r6, [sp, #26]
 801865a:	f7ff f8d3 	bl	8017804 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801865e:	88e2      	ldrh	r2, [r4, #6]
 8018660:	8863      	ldrh	r3, [r4, #2]
 8018662:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8018666:	4413      	add	r3, r2
 8018668:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801866c:	440a      	add	r2, r1
 801866e:	b29b      	uxth	r3, r3
 8018670:	b292      	uxth	r2, r2
 8018672:	b211      	sxth	r1, r2
 8018674:	b218      	sxth	r0, r3
 8018676:	4288      	cmp	r0, r1
 8018678:	f77f af7b 	ble.w	8018572 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 801867c:	1a9b      	subs	r3, r3, r2
 801867e:	f9b4 6000 	ldrsh.w	r6, [r4]
 8018682:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8018686:	f8ad 301e 	strh.w	r3, [sp, #30]
 801868a:	f8ad 6018 	strh.w	r6, [sp, #24]
 801868e:	f8ad 101a 	strh.w	r1, [sp, #26]
 8018692:	f8ad 001c 	strh.w	r0, [sp, #28]
 8018696:	23ff      	movs	r3, #255	; 0xff
 8018698:	4642      	mov	r2, r8
 801869a:	e782      	b.n	80185a2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb6>
 801869c:	4633      	mov	r3, r6
 801869e:	4622      	mov	r2, r4
 80186a0:	a902      	add	r1, sp, #8
 80186a2:	4628      	mov	r0, r5
 80186a4:	f7ff fa04 	bl	8017ab0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 80186a8:	e763      	b.n	8018572 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 80186aa:	9600      	str	r6, [sp, #0]
 80186ac:	4623      	mov	r3, r4
 80186ae:	aa02      	add	r2, sp, #8
 80186b0:	4649      	mov	r1, r9
 80186b2:	4628      	mov	r0, r5
 80186b4:	f7ff fddc 	bl	8018270 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 80186b8:	e75b      	b.n	8018572 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 80186ba:	4638      	mov	r0, r7
 80186bc:	f7fc f83c 	bl	8014738 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 80186c0:	b950      	cbnz	r0, 80186d8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ec>
 80186c2:	e9cd 6000 	strd	r6, r0, [sp]
 80186c6:	f8da 3000 	ldr.w	r3, [sl]
 80186ca:	aa02      	add	r2, sp, #8
 80186cc:	68de      	ldr	r6, [r3, #12]
 80186ce:	4629      	mov	r1, r5
 80186d0:	4623      	mov	r3, r4
 80186d2:	4650      	mov	r0, sl
 80186d4:	47b0      	blx	r6
 80186d6:	e74c      	b.n	8018572 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 80186d8:	f10d 0818 	add.w	r8, sp, #24
 80186dc:	4639      	mov	r1, r7
 80186de:	4640      	mov	r0, r8
 80186e0:	f7fb ffde 	bl	80146a0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 80186e4:	e898 0003 	ldmia.w	r8, {r0, r1}
 80186e8:	af04      	add	r7, sp, #16
 80186ea:	e887 0003 	stmia.w	r7, {r0, r1}
 80186ee:	4638      	mov	r0, r7
 80186f0:	4621      	mov	r1, r4
 80186f2:	f7f2 fbab 	bl	800ae4c <_ZN8touchgfx4RectaNERKS0_>
 80186f6:	4638      	mov	r0, r7
 80186f8:	f7f2 fbeb 	bl	800aed2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80186fc:	b138      	cbz	r0, 801870e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x222>
 80186fe:	9600      	str	r6, [sp, #0]
 8018700:	4623      	mov	r3, r4
 8018702:	aa02      	add	r2, sp, #8
 8018704:	4649      	mov	r1, r9
 8018706:	4628      	mov	r0, r5
 8018708:	f7ff fdca 	bl	80182a0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801870c:	e731      	b.n	8018572 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 801870e:	e9cd 6000 	strd	r6, r0, [sp]
 8018712:	f8da 3000 	ldr.w	r3, [sl]
 8018716:	aa02      	add	r2, sp, #8
 8018718:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 801871c:	4629      	mov	r1, r5
 801871e:	463b      	mov	r3, r7
 8018720:	4650      	mov	r0, sl
 8018722:	47d8      	blx	fp
 8018724:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8018728:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801872c:	4293      	cmp	r3, r2
 801872e:	dd13      	ble.n	8018758 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26c>
 8018730:	f9b4 0000 	ldrsh.w	r0, [r4]
 8018734:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8018738:	f8ad 0018 	strh.w	r0, [sp, #24]
 801873c:	1a9b      	subs	r3, r3, r2
 801873e:	f8ad 201a 	strh.w	r2, [sp, #26]
 8018742:	f8ad 101c 	strh.w	r1, [sp, #28]
 8018746:	f8ad 301e 	strh.w	r3, [sp, #30]
 801874a:	9600      	str	r6, [sp, #0]
 801874c:	4643      	mov	r3, r8
 801874e:	aa02      	add	r2, sp, #8
 8018750:	4649      	mov	r1, r9
 8018752:	4628      	mov	r0, r5
 8018754:	f7ff fda4 	bl	80182a0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8018758:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801875c:	f9b4 2000 	ldrsh.w	r2, [r4]
 8018760:	4293      	cmp	r3, r2
 8018762:	dd13      	ble.n	801878c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a0>
 8018764:	1a9b      	subs	r3, r3, r2
 8018766:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801876a:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801876e:	f8ad 2018 	strh.w	r2, [sp, #24]
 8018772:	f8ad 001a 	strh.w	r0, [sp, #26]
 8018776:	f8ad 301c 	strh.w	r3, [sp, #28]
 801877a:	f8ad 101e 	strh.w	r1, [sp, #30]
 801877e:	9600      	str	r6, [sp, #0]
 8018780:	4643      	mov	r3, r8
 8018782:	aa02      	add	r2, sp, #8
 8018784:	4649      	mov	r1, r9
 8018786:	4628      	mov	r0, r5
 8018788:	f7ff fd8a 	bl	80182a0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801878c:	88a2      	ldrh	r2, [r4, #4]
 801878e:	8823      	ldrh	r3, [r4, #0]
 8018790:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8018794:	4413      	add	r3, r2
 8018796:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801879a:	440a      	add	r2, r1
 801879c:	b29b      	uxth	r3, r3
 801879e:	b292      	uxth	r2, r2
 80187a0:	b211      	sxth	r1, r2
 80187a2:	b218      	sxth	r0, r3
 80187a4:	4288      	cmp	r0, r1
 80187a6:	dd13      	ble.n	80187d0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e4>
 80187a8:	1a9b      	subs	r3, r3, r2
 80187aa:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 80187ae:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 80187b2:	f8ad 1018 	strh.w	r1, [sp, #24]
 80187b6:	f8ad 301c 	strh.w	r3, [sp, #28]
 80187ba:	f8ad 001e 	strh.w	r0, [sp, #30]
 80187be:	9600      	str	r6, [sp, #0]
 80187c0:	4643      	mov	r3, r8
 80187c2:	aa02      	add	r2, sp, #8
 80187c4:	4649      	mov	r1, r9
 80187c6:	4628      	mov	r0, r5
 80187c8:	f8ad 701a 	strh.w	r7, [sp, #26]
 80187cc:	f7ff fd68 	bl	80182a0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 80187d0:	88e2      	ldrh	r2, [r4, #6]
 80187d2:	8863      	ldrh	r3, [r4, #2]
 80187d4:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 80187d8:	4413      	add	r3, r2
 80187da:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 80187de:	440a      	add	r2, r1
 80187e0:	b29b      	uxth	r3, r3
 80187e2:	b292      	uxth	r2, r2
 80187e4:	b211      	sxth	r1, r2
 80187e6:	b218      	sxth	r0, r3
 80187e8:	4288      	cmp	r0, r1
 80187ea:	f77f aec2 	ble.w	8018572 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 80187ee:	f9b4 7000 	ldrsh.w	r7, [r4]
 80187f2:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80187f6:	f8ad 7018 	strh.w	r7, [sp, #24]
 80187fa:	1a9b      	subs	r3, r3, r2
 80187fc:	f8ad 301e 	strh.w	r3, [sp, #30]
 8018800:	f8ad 101a 	strh.w	r1, [sp, #26]
 8018804:	f8ad 001c 	strh.w	r0, [sp, #28]
 8018808:	9600      	str	r6, [sp, #0]
 801880a:	4643      	mov	r3, r8
 801880c:	e779      	b.n	8018702 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x216>
 801880e:	bf00      	nop
 8018810:	20015604 	.word	0x20015604

08018814 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 8018814:	b180      	cbz	r0, 8018838 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 8018816:	2903      	cmp	r1, #3
 8018818:	d81c      	bhi.n	8018854 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801881a:	e8df f001 	tbb	[pc, r1]
 801881e:	1d02      	.short	0x1d02
 8018820:	1f08      	.short	0x1f08
 8018822:	4b10      	ldr	r3, [pc, #64]	; (8018864 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8018824:	8818      	ldrh	r0, [r3, #0]
 8018826:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801882a:	4240      	negs	r0, r0
 801882c:	4770      	bx	lr
 801882e:	4b0d      	ldr	r3, [pc, #52]	; (8018864 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8018830:	8818      	ldrh	r0, [r3, #0]
 8018832:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8018836:	4770      	bx	lr
 8018838:	2903      	cmp	r1, #3
 801883a:	d80b      	bhi.n	8018854 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801883c:	a301      	add	r3, pc, #4	; (adr r3, 8018844 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 801883e:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 8018842:	bf00      	nop
 8018844:	08018859 	.word	0x08018859
 8018848:	0801882f 	.word	0x0801882f
 801884c:	0801885d 	.word	0x0801885d
 8018850:	08018823 	.word	0x08018823
 8018854:	2000      	movs	r0, #0
 8018856:	4770      	bx	lr
 8018858:	2001      	movs	r0, #1
 801885a:	4770      	bx	lr
 801885c:	f04f 30ff 	mov.w	r0, #4294967295
 8018860:	4770      	bx	lr
 8018862:	bf00      	nop
 8018864:	200155fe 	.word	0x200155fe

08018868 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 8018868:	b180      	cbz	r0, 801888c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 801886a:	2903      	cmp	r1, #3
 801886c:	d81c      	bhi.n	80188a8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801886e:	e8df f001 	tbb	[pc, r1]
 8018872:	021d      	.short	0x021d
 8018874:	071f      	.short	0x071f
 8018876:	4b10      	ldr	r3, [pc, #64]	; (80188b8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8018878:	8818      	ldrh	r0, [r3, #0]
 801887a:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801887e:	4770      	bx	lr
 8018880:	4b0d      	ldr	r3, [pc, #52]	; (80188b8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8018882:	8818      	ldrh	r0, [r3, #0]
 8018884:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8018888:	4240      	negs	r0, r0
 801888a:	4770      	bx	lr
 801888c:	2903      	cmp	r1, #3
 801888e:	d80b      	bhi.n	80188a8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 8018890:	a301      	add	r3, pc, #4	; (adr r3, 8018898 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 8018892:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 8018896:	bf00      	nop
 8018898:	08018877 	.word	0x08018877
 801889c:	080188b1 	.word	0x080188b1
 80188a0:	08018881 	.word	0x08018881
 80188a4:	080188ad 	.word	0x080188ad
 80188a8:	2000      	movs	r0, #0
 80188aa:	4770      	bx	lr
 80188ac:	2001      	movs	r0, #1
 80188ae:	4770      	bx	lr
 80188b0:	f04f 30ff 	mov.w	r0, #4294967295
 80188b4:	4770      	bx	lr
 80188b6:	bf00      	nop
 80188b8:	200155fe 	.word	0x200155fe

080188bc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 80188bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80188c0:	b099      	sub	sp, #100	; 0x64
 80188c2:	910b      	str	r1, [sp, #44]	; 0x2c
 80188c4:	a914      	add	r1, sp, #80	; 0x50
 80188c6:	e881 000c 	stmia.w	r1, {r2, r3}
 80188ca:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 80188ce:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 80188d2:	f891 900d 	ldrb.w	r9, [r1, #13]
 80188d6:	9309      	str	r3, [sp, #36]	; 0x24
 80188d8:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 80188dc:	9310      	str	r3, [sp, #64]	; 0x40
 80188de:	ea4f 1749 	mov.w	r7, r9, lsl #5
 80188e2:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
 80188e6:	930c      	str	r3, [sp, #48]	; 0x30
 80188e8:	f407 7380 	and.w	r3, r7, #256	; 0x100
 80188ec:	798f      	ldrb	r7, [r1, #6]
 80188ee:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	; 0x88
 80188f2:	f8bd 5090 	ldrh.w	r5, [sp, #144]	; 0x90
 80188f6:	f8bd 6094 	ldrh.w	r6, [sp, #148]	; 0x94
 80188fa:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 80188fe:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 8018902:	431f      	orrs	r7, r3
 8018904:	f000 8195 	beq.w	8018c32 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8018908:	ea4f 1909 	mov.w	r9, r9, lsl #4
 801890c:	f409 7380 	and.w	r3, r9, #256	; 0x100
 8018910:	f891 9007 	ldrb.w	r9, [r1, #7]
 8018914:	ea59 0903 	orrs.w	r9, r9, r3
 8018918:	f000 818b 	beq.w	8018c32 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801891c:	f991 3009 	ldrsb.w	r3, [r1, #9]
 8018920:	b29b      	uxth	r3, r3
 8018922:	2d00      	cmp	r5, #0
 8018924:	f000 812e 	beq.w	8018b84 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 8018928:	1aed      	subs	r5, r5, r3
 801892a:	b2ad      	uxth	r5, r5
 801892c:	042b      	lsls	r3, r5, #16
 801892e:	d502      	bpl.n	8018936 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 8018930:	1b64      	subs	r4, r4, r5
 8018932:	b224      	sxth	r4, r4
 8018934:	2500      	movs	r5, #0
 8018936:	f9b2 1000 	ldrsh.w	r1, [r2]
 801893a:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 801893e:	428c      	cmp	r4, r1
 8018940:	b28b      	uxth	r3, r1
 8018942:	bfbf      	itttt	lt
 8018944:	18ed      	addlt	r5, r5, r3
 8018946:	1b2c      	sublt	r4, r5, r4
 8018948:	b2a5      	uxthlt	r5, r4
 801894a:	460c      	movlt	r4, r1
 801894c:	8891      	ldrh	r1, [r2, #4]
 801894e:	440b      	add	r3, r1
 8018950:	b21b      	sxth	r3, r3
 8018952:	930f      	str	r3, [sp, #60]	; 0x3c
 8018954:	88d3      	ldrh	r3, [r2, #6]
 8018956:	8852      	ldrh	r2, [r2, #2]
 8018958:	4413      	add	r3, r2
 801895a:	b21b      	sxth	r3, r3
 801895c:	930d      	str	r3, [sp, #52]	; 0x34
 801895e:	4bbe      	ldr	r3, [pc, #760]	; (8018c58 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 8018960:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8018962:	f893 b000 	ldrb.w	fp, [r3]
 8018966:	f10b 3cff 	add.w	ip, fp, #4294967295
 801896a:	f1dc 0300 	rsbs	r3, ip, #0
 801896e:	eb43 030c 	adc.w	r3, r3, ip
 8018972:	930e      	str	r3, [sp, #56]	; 0x38
 8018974:	4621      	mov	r1, r4
 8018976:	4653      	mov	r3, sl
 8018978:	a814      	add	r0, sp, #80	; 0x50
 801897a:	f7f8 f8b5 	bl	8010ae8 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 801897e:	4621      	mov	r1, r4
 8018980:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 8018984:	4653      	mov	r3, sl
 8018986:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8018988:	a814      	add	r0, sp, #80	; 0x50
 801898a:	f7f8 f8ca 	bl	8010b22 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 801898e:	a918      	add	r1, sp, #96	; 0x60
 8018990:	f821 0d02 	strh.w	r0, [r1, #-2]!
 8018994:	a817      	add	r0, sp, #92	; 0x5c
 8018996:	f7f8 f9eb 	bl	8010d70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 801899a:	f1ba 0f00 	cmp.w	sl, #0
 801899e:	f040 80f4 	bne.w	8018b8a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 80189a2:	f1bb 0f01 	cmp.w	fp, #1
 80189a6:	f040 80f8 	bne.w	8018b9a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 80189aa:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80189ac:	2b00      	cmp	r3, #0
 80189ae:	f040 8145 	bne.w	8018c3c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 80189b2:	b2ba      	uxth	r2, r7
 80189b4:	b905      	cbnz	r5, 80189b8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 80189b6:	b16e      	cbz	r6, 80189d4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 80189b8:	fb06 5302 	mla	r3, r6, r2, r5
 80189bc:	9828      	ldr	r0, [sp, #160]	; 0xa0
 80189be:	fb08 f303 	mul.w	r3, r8, r3
 80189c2:	4631      	mov	r1, r6
 80189c4:	f003 0607 	and.w	r6, r3, #7
 80189c8:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 80189cc:	9328      	str	r3, [sp, #160]	; 0xa0
 80189ce:	eba9 0301 	sub.w	r3, r9, r1
 80189d2:	930a      	str	r3, [sp, #40]	; 0x28
 80189d4:	4651      	mov	r1, sl
 80189d6:	980e      	ldr	r0, [sp, #56]	; 0x38
 80189d8:	f7ff ff1c 	bl	8018814 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 80189dc:	4681      	mov	r9, r0
 80189de:	980e      	ldr	r0, [sp, #56]	; 0x38
 80189e0:	f7ff ff42 	bl	8018868 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 80189e4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80189e6:	9909      	ldr	r1, [sp, #36]	; 0x24
 80189e8:	eba3 0a01 	sub.w	sl, r3, r1
 80189ec:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80189ee:	459a      	cmp	sl, r3
 80189f0:	bfa8      	it	ge
 80189f2:	469a      	movge	sl, r3
 80189f4:	f1ba 0f00 	cmp.w	sl, #0
 80189f8:	4683      	mov	fp, r0
 80189fa:	f340 811a 	ble.w	8018c32 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 80189fe:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8018a00:	1b64      	subs	r4, r4, r5
 8018a02:	1b1c      	subs	r4, r3, r4
 8018a04:	42bc      	cmp	r4, r7
 8018a06:	bfd4      	ite	le
 8018a08:	ebc5 0504 	rsble	r5, r5, r4
 8018a0c:	ebc5 0507 	rsbgt	r5, r5, r7
 8018a10:	2d00      	cmp	r5, #0
 8018a12:	f340 810e 	ble.w	8018c32 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8018a16:	1b52      	subs	r2, r2, r5
 8018a18:	fb08 f302 	mul.w	r3, r8, r2
 8018a1c:	930f      	str	r3, [sp, #60]	; 0x3c
 8018a1e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8018a20:	2b00      	cmp	r3, #0
 8018a22:	f040 8116 	bne.w	8018c52 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 8018a26:	4b8d      	ldr	r3, [pc, #564]	; (8018c5c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 8018a28:	6818      	ldr	r0, [r3, #0]
 8018a2a:	6803      	ldr	r3, [r0, #0]
 8018a2c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8018a2e:	4798      	blx	r3
 8018a30:	2301      	movs	r3, #1
 8018a32:	fa03 f308 	lsl.w	r3, r3, r8
 8018a36:	4a8a      	ldr	r2, [pc, #552]	; (8018c60 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 8018a38:	3b01      	subs	r3, #1
 8018a3a:	b2db      	uxtb	r3, r3
 8018a3c:	8811      	ldrh	r1, [r2, #0]
 8018a3e:	930e      	str	r3, [sp, #56]	; 0x38
 8018a40:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 8018a44:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 8018a48:	fb01 2303 	mla	r3, r1, r3, r2
 8018a4c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8018a50:	930a      	str	r3, [sp, #40]	; 0x28
 8018a52:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018a54:	f3c3 4307 	ubfx	r3, r3, #16, #8
 8018a58:	9313      	str	r3, [sp, #76]	; 0x4c
 8018a5a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018a5c:	0a19      	lsrs	r1, r3, #8
 8018a5e:	b2cb      	uxtb	r3, r1
 8018a60:	9312      	str	r3, [sp, #72]	; 0x48
 8018a62:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018a64:	b2db      	uxtb	r3, r3
 8018a66:	9311      	str	r3, [sp, #68]	; 0x44
 8018a68:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018a6a:	095a      	lsrs	r2, r3, #5
 8018a6c:	4b7d      	ldr	r3, [pc, #500]	; (8018c64 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 8018a6e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018a72:	400b      	ands	r3, r1
 8018a74:	4313      	orrs	r3, r2
 8018a76:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8018a78:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8018a7c:	4313      	orrs	r3, r2
 8018a7e:	b29b      	uxth	r3, r3
 8018a80:	9310      	str	r3, [sp, #64]	; 0x40
 8018a82:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018a84:	781a      	ldrb	r2, [r3, #0]
 8018a86:	ea4f 0349 	mov.w	r3, r9, lsl #1
 8018a8a:	4132      	asrs	r2, r6
 8018a8c:	fb05 b919 	mls	r9, r5, r9, fp
 8018a90:	fb03 fb05 	mul.w	fp, r3, r5
 8018a94:	b2d2      	uxtb	r2, r2
 8018a96:	930d      	str	r3, [sp, #52]	; 0x34
 8018a98:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 8018a9c:	f11a 3aff 	adds.w	sl, sl, #4294967295
 8018aa0:	f0c0 80f5 	bcc.w	8018c8e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 8018aa4:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 8018aa8:	46ae      	mov	lr, r5
 8018aaa:	f11e 3eff 	adds.w	lr, lr, #4294967295
 8018aae:	f0c0 80dd 	bcc.w	8018c6c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 8018ab2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018ab4:	4013      	ands	r3, r2
 8018ab6:	d055      	beq.n	8018b64 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 8018ab8:	20ff      	movs	r0, #255	; 0xff
 8018aba:	990e      	ldr	r1, [sp, #56]	; 0x38
 8018abc:	fb90 f1f1 	sdiv	r1, r0, r1
 8018ac0:	434b      	muls	r3, r1
 8018ac2:	2bfe      	cmp	r3, #254	; 0xfe
 8018ac4:	dd03      	ble.n	8018ace <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 8018ac6:	990c      	ldr	r1, [sp, #48]	; 0x30
 8018ac8:	4281      	cmp	r1, r0
 8018aca:	f000 80cd 	beq.w	8018c68 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 8018ace:	990c      	ldr	r1, [sp, #48]	; 0x30
 8018ad0:	f8bc 4000 	ldrh.w	r4, [ip]
 8018ad4:	fb11 f303 	smulbb	r3, r1, r3
 8018ad8:	b29b      	uxth	r3, r3
 8018ada:	1c59      	adds	r1, r3, #1
 8018adc:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8018ae0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8018ae4:	b29f      	uxth	r7, r3
 8018ae6:	43db      	mvns	r3, r3
 8018ae8:	b2db      	uxtb	r3, r3
 8018aea:	9309      	str	r3, [sp, #36]	; 0x24
 8018aec:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8018aee:	1220      	asrs	r0, r4, #8
 8018af0:	fb13 f907 	smulbb	r9, r3, r7
 8018af4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8018af8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018afa:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 8018afe:	fb00 9003 	mla	r0, r0, r3, r9
 8018b02:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8018b04:	10e1      	asrs	r1, r4, #3
 8018b06:	fb13 f907 	smulbb	r9, r3, r7
 8018b0a:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8018b0e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018b10:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 8018b14:	fb01 9103 	mla	r1, r1, r3, r9
 8018b18:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8018b1a:	00e4      	lsls	r4, r4, #3
 8018b1c:	fb13 f707 	smulbb	r7, r3, r7
 8018b20:	b2e4      	uxtb	r4, r4
 8018b22:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018b24:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8018b28:	fb04 7403 	mla	r4, r4, r3, r7
 8018b2c:	b280      	uxth	r0, r0
 8018b2e:	b2a4      	uxth	r4, r4
 8018b30:	1c43      	adds	r3, r0, #1
 8018b32:	f104 0901 	add.w	r9, r4, #1
 8018b36:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8018b3a:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 8018b3e:	b289      	uxth	r1, r1
 8018b40:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 8018b44:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8018b48:	ea49 0000 	orr.w	r0, r9, r0
 8018b4c:	f101 0901 	add.w	r9, r1, #1
 8018b50:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 8018b54:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8018b58:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8018b5c:	ea40 0009 	orr.w	r0, r0, r9
 8018b60:	f8ac 0000 	strh.w	r0, [ip]
 8018b64:	4446      	add	r6, r8
 8018b66:	b2b6      	uxth	r6, r6
 8018b68:	2e07      	cmp	r6, #7
 8018b6a:	bf81      	itttt	hi
 8018b6c:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 8018b6e:	785a      	ldrbhi	r2, [r3, #1]
 8018b70:	3301      	addhi	r3, #1
 8018b72:	9328      	strhi	r3, [sp, #160]	; 0xa0
 8018b74:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018b76:	bf9a      	itte	ls
 8018b78:	fa42 f208 	asrls.w	r2, r2, r8
 8018b7c:	b2d2      	uxtbls	r2, r2
 8018b7e:	2600      	movhi	r6, #0
 8018b80:	449c      	add	ip, r3
 8018b82:	e792      	b.n	8018aaa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 8018b84:	441c      	add	r4, r3
 8018b86:	b224      	sxth	r4, r4
 8018b88:	e6d5      	b.n	8018936 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 8018b8a:	f1ba 0f01 	cmp.w	sl, #1
 8018b8e:	f47f af0c 	bne.w	80189aa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8018b92:	f1bb 0f01 	cmp.w	fp, #1
 8018b96:	f47f af08 	bne.w	80189aa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8018b9a:	f8df b0c0 	ldr.w	fp, [pc, #192]	; 8018c5c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 8018b9e:	f8db 0000 	ldr.w	r0, [fp]
 8018ba2:	6803      	ldr	r3, [r0, #0]
 8018ba4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8018ba6:	4798      	blx	r3
 8018ba8:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 8018bac:	465a      	mov	r2, fp
 8018bae:	d006      	beq.n	8018bbe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 8018bb0:	f1b8 0f04 	cmp.w	r8, #4
 8018bb4:	d140      	bne.n	8018c38 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 8018bb6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018bb8:	3300      	adds	r3, #0
 8018bba:	bf18      	it	ne
 8018bbc:	2301      	movne	r3, #1
 8018bbe:	0580      	lsls	r0, r0, #22
 8018bc0:	d56e      	bpl.n	8018ca0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 8018bc2:	f1b8 0f08 	cmp.w	r8, #8
 8018bc6:	d16b      	bne.n	8018ca0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 8018bc8:	2b00      	cmp	r3, #0
 8018bca:	bf0c      	ite	eq
 8018bcc:	f44f 7100 	moveq.w	r1, #512	; 0x200
 8018bd0:	f44f 7180 	movne.w	r1, #256	; 0x100
 8018bd4:	2d00      	cmp	r5, #0
 8018bd6:	f47f aee8 	bne.w	80189aa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8018bda:	2e00      	cmp	r6, #0
 8018bdc:	f47f aee5 	bne.w	80189aa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8018be0:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8018be2:	19e3      	adds	r3, r4, r7
 8018be4:	4283      	cmp	r3, r0
 8018be6:	f73f aee0 	bgt.w	80189aa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8018bea:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018bec:	980d      	ldr	r0, [sp, #52]	; 0x34
 8018bee:	444b      	add	r3, r9
 8018bf0:	4283      	cmp	r3, r0
 8018bf2:	f73f aeda 	bgt.w	80189aa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8018bf6:	6810      	ldr	r0, [r2, #0]
 8018bf8:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 8018bfc:	6804      	ldr	r4, [r0, #0]
 8018bfe:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 8018c02:	b2bf      	uxth	r7, r7
 8018c04:	f1b8 0f08 	cmp.w	r8, #8
 8018c08:	f04f 0500 	mov.w	r5, #0
 8018c0c:	bf18      	it	ne
 8018c0e:	3701      	addne	r7, #1
 8018c10:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8018c14:	990c      	ldr	r1, [sp, #48]	; 0x30
 8018c16:	9104      	str	r1, [sp, #16]
 8018c18:	bf18      	it	ne
 8018c1a:	f027 0701 	bicne.w	r7, r7, #1
 8018c1e:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8018c20:	bf18      	it	ne
 8018c22:	b2bf      	uxthne	r7, r7
 8018c24:	e9cd 7102 	strd	r7, r1, [sp, #8]
 8018c28:	e9cd 7900 	strd	r7, r9, [sp]
 8018c2c:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8018c2e:	6d64      	ldr	r4, [r4, #84]	; 0x54
 8018c30:	47a0      	blx	r4
 8018c32:	b019      	add	sp, #100	; 0x64
 8018c34:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018c38:	2300      	movs	r3, #0
 8018c3a:	e7c0      	b.n	8018bbe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 8018c3c:	2208      	movs	r2, #8
 8018c3e:	fb92 f3f8 	sdiv	r3, r2, r8
 8018c42:	1e5a      	subs	r2, r3, #1
 8018c44:	443a      	add	r2, r7
 8018c46:	fb92 f2f3 	sdiv	r2, r2, r3
 8018c4a:	fb12 f203 	smulbb	r2, r2, r3
 8018c4e:	b292      	uxth	r2, r2
 8018c50:	e6b0      	b.n	80189b4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 8018c52:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8018c54:	e6ec      	b.n	8018a30 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 8018c56:	bf00      	nop
 8018c58:	200155fc 	.word	0x200155fc
 8018c5c:	20015604 	.word	0x20015604
 8018c60:	200155fe 	.word	0x200155fe
 8018c64:	00fff800 	.word	0x00fff800
 8018c68:	9810      	ldr	r0, [sp, #64]	; 0x40
 8018c6a:	e779      	b.n	8018b60 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 8018c6c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8018c6e:	b153      	cbz	r3, 8018c86 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 8018c70:	441e      	add	r6, r3
 8018c72:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018c74:	b2b6      	uxth	r6, r6
 8018c76:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 8018c7a:	f006 0607 	and.w	r6, r6, #7
 8018c7e:	781a      	ldrb	r2, [r3, #0]
 8018c80:	9328      	str	r3, [sp, #160]	; 0xa0
 8018c82:	4132      	asrs	r2, r6
 8018c84:	b2d2      	uxtb	r2, r2
 8018c86:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018c88:	445b      	add	r3, fp
 8018c8a:	930a      	str	r3, [sp, #40]	; 0x28
 8018c8c:	e706      	b.n	8018a9c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 8018c8e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8018c90:	2b00      	cmp	r3, #0
 8018c92:	d1ce      	bne.n	8018c32 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8018c94:	4b05      	ldr	r3, [pc, #20]	; (8018cac <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 8018c96:	6818      	ldr	r0, [r3, #0]
 8018c98:	6803      	ldr	r3, [r0, #0]
 8018c9a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8018c9c:	4798      	blx	r3
 8018c9e:	e7c8      	b.n	8018c32 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8018ca0:	2b00      	cmp	r3, #0
 8018ca2:	f43f ae82 	beq.w	80189aa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8018ca6:	f44f 7180 	mov.w	r1, #256	; 0x100
 8018caa:	e793      	b.n	8018bd4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 8018cac:	20015604 	.word	0x20015604

08018cb0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 8018cb0:	b538      	push	{r3, r4, r5, lr}
 8018cb2:	4c15      	ldr	r4, [pc, #84]	; (8018d08 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 8018cb4:	7823      	ldrb	r3, [r4, #0]
 8018cb6:	f3bf 8f5b 	dmb	ish
 8018cba:	07da      	lsls	r2, r3, #31
 8018cbc:	4605      	mov	r5, r0
 8018cbe:	d40b      	bmi.n	8018cd8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8018cc0:	4620      	mov	r0, r4
 8018cc2:	f007 fd73 	bl	80207ac <__cxa_guard_acquire>
 8018cc6:	b138      	cbz	r0, 8018cd8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8018cc8:	4620      	mov	r0, r4
 8018cca:	f007 fd7b 	bl	80207c4 <__cxa_guard_release>
 8018cce:	4a0f      	ldr	r2, [pc, #60]	; (8018d0c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8018cd0:	490f      	ldr	r1, [pc, #60]	; (8018d10 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 8018cd2:	4810      	ldr	r0, [pc, #64]	; (8018d14 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8018cd4:	f007 fd63 	bl	802079e <__aeabi_atexit>
 8018cd8:	4c0f      	ldr	r4, [pc, #60]	; (8018d18 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 8018cda:	7823      	ldrb	r3, [r4, #0]
 8018cdc:	f3bf 8f5b 	dmb	ish
 8018ce0:	07db      	lsls	r3, r3, #31
 8018ce2:	d40b      	bmi.n	8018cfc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8018ce4:	4620      	mov	r0, r4
 8018ce6:	f007 fd61 	bl	80207ac <__cxa_guard_acquire>
 8018cea:	b138      	cbz	r0, 8018cfc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8018cec:	4620      	mov	r0, r4
 8018cee:	f007 fd69 	bl	80207c4 <__cxa_guard_release>
 8018cf2:	4a06      	ldr	r2, [pc, #24]	; (8018d0c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8018cf4:	4909      	ldr	r1, [pc, #36]	; (8018d1c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 8018cf6:	480a      	ldr	r0, [pc, #40]	; (8018d20 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8018cf8:	f007 fd51 	bl	802079e <__aeabi_atexit>
 8018cfc:	4b05      	ldr	r3, [pc, #20]	; (8018d14 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8018cfe:	612b      	str	r3, [r5, #16]
 8018d00:	4b07      	ldr	r3, [pc, #28]	; (8018d20 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8018d02:	616b      	str	r3, [r5, #20]
 8018d04:	bd38      	pop	{r3, r4, r5, pc}
 8018d06:	bf00      	nop
 8018d08:	200156d8 	.word	0x200156d8
 8018d0c:	20000000 	.word	0x20000000
 8018d10:	08016ec1 	.word	0x08016ec1
 8018d14:	200000d0 	.word	0x200000d0
 8018d18:	200156dc 	.word	0x200156dc
 8018d1c:	08016ebf 	.word	0x08016ebf
 8018d20:	200000d4 	.word	0x200000d4

08018d24 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 8018d24:	b538      	push	{r3, r4, r5, lr}
 8018d26:	4c15      	ldr	r4, [pc, #84]	; (8018d7c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 8018d28:	7823      	ldrb	r3, [r4, #0]
 8018d2a:	f3bf 8f5b 	dmb	ish
 8018d2e:	07da      	lsls	r2, r3, #31
 8018d30:	4605      	mov	r5, r0
 8018d32:	d40b      	bmi.n	8018d4c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8018d34:	4620      	mov	r0, r4
 8018d36:	f007 fd39 	bl	80207ac <__cxa_guard_acquire>
 8018d3a:	b138      	cbz	r0, 8018d4c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8018d3c:	4620      	mov	r0, r4
 8018d3e:	f007 fd41 	bl	80207c4 <__cxa_guard_release>
 8018d42:	4a0f      	ldr	r2, [pc, #60]	; (8018d80 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8018d44:	490f      	ldr	r1, [pc, #60]	; (8018d84 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 8018d46:	4810      	ldr	r0, [pc, #64]	; (8018d88 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8018d48:	f007 fd29 	bl	802079e <__aeabi_atexit>
 8018d4c:	4c0f      	ldr	r4, [pc, #60]	; (8018d8c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 8018d4e:	7823      	ldrb	r3, [r4, #0]
 8018d50:	f3bf 8f5b 	dmb	ish
 8018d54:	07db      	lsls	r3, r3, #31
 8018d56:	d40b      	bmi.n	8018d70 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8018d58:	4620      	mov	r0, r4
 8018d5a:	f007 fd27 	bl	80207ac <__cxa_guard_acquire>
 8018d5e:	b138      	cbz	r0, 8018d70 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8018d60:	4620      	mov	r0, r4
 8018d62:	f007 fd2f 	bl	80207c4 <__cxa_guard_release>
 8018d66:	4a06      	ldr	r2, [pc, #24]	; (8018d80 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8018d68:	4909      	ldr	r1, [pc, #36]	; (8018d90 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 8018d6a:	480a      	ldr	r0, [pc, #40]	; (8018d94 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8018d6c:	f007 fd17 	bl	802079e <__aeabi_atexit>
 8018d70:	4b05      	ldr	r3, [pc, #20]	; (8018d88 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8018d72:	60ab      	str	r3, [r5, #8]
 8018d74:	4b07      	ldr	r3, [pc, #28]	; (8018d94 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8018d76:	60eb      	str	r3, [r5, #12]
 8018d78:	bd38      	pop	{r3, r4, r5, pc}
 8018d7a:	bf00      	nop
 8018d7c:	200156b0 	.word	0x200156b0
 8018d80:	20000000 	.word	0x20000000
 8018d84:	08016ec5 	.word	0x08016ec5
 8018d88:	200000a8 	.word	0x200000a8
 8018d8c:	200156b4 	.word	0x200156b4
 8018d90:	08016ec3 	.word	0x08016ec3
 8018d94:	200000ac 	.word	0x200000ac

08018d98 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 8018d98:	b510      	push	{r4, lr}
 8018d9a:	4604      	mov	r4, r0
 8018d9c:	f7ff ff88 	bl	8018cb0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 8018da0:	4620      	mov	r0, r4
 8018da2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8018da6:	f7ff bfbd 	b.w	8018d24 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

08018dac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 8018dac:	b538      	push	{r3, r4, r5, lr}
 8018dae:	4c15      	ldr	r4, [pc, #84]	; (8018e04 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 8018db0:	7823      	ldrb	r3, [r4, #0]
 8018db2:	f3bf 8f5b 	dmb	ish
 8018db6:	07da      	lsls	r2, r3, #31
 8018db8:	4605      	mov	r5, r0
 8018dba:	d40b      	bmi.n	8018dd4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8018dbc:	4620      	mov	r0, r4
 8018dbe:	f007 fcf5 	bl	80207ac <__cxa_guard_acquire>
 8018dc2:	b138      	cbz	r0, 8018dd4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8018dc4:	4620      	mov	r0, r4
 8018dc6:	f007 fcfd 	bl	80207c4 <__cxa_guard_release>
 8018dca:	4a0f      	ldr	r2, [pc, #60]	; (8018e08 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8018dcc:	490f      	ldr	r1, [pc, #60]	; (8018e0c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 8018dce:	4810      	ldr	r0, [pc, #64]	; (8018e10 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8018dd0:	f007 fce5 	bl	802079e <__aeabi_atexit>
 8018dd4:	4c0f      	ldr	r4, [pc, #60]	; (8018e14 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 8018dd6:	7823      	ldrb	r3, [r4, #0]
 8018dd8:	f3bf 8f5b 	dmb	ish
 8018ddc:	07db      	lsls	r3, r3, #31
 8018dde:	d40b      	bmi.n	8018df8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8018de0:	4620      	mov	r0, r4
 8018de2:	f007 fce3 	bl	80207ac <__cxa_guard_acquire>
 8018de6:	b138      	cbz	r0, 8018df8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8018de8:	4620      	mov	r0, r4
 8018dea:	f007 fceb 	bl	80207c4 <__cxa_guard_release>
 8018dee:	4a06      	ldr	r2, [pc, #24]	; (8018e08 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8018df0:	4909      	ldr	r1, [pc, #36]	; (8018e18 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 8018df2:	480a      	ldr	r0, [pc, #40]	; (8018e1c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8018df4:	f007 fcd3 	bl	802079e <__aeabi_atexit>
 8018df8:	4b05      	ldr	r3, [pc, #20]	; (8018e10 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8018dfa:	622b      	str	r3, [r5, #32]
 8018dfc:	4b07      	ldr	r3, [pc, #28]	; (8018e1c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8018dfe:	626b      	str	r3, [r5, #36]	; 0x24
 8018e00:	bd38      	pop	{r3, r4, r5, pc}
 8018e02:	bf00      	nop
 8018e04:	200156e0 	.word	0x200156e0
 8018e08:	20000000 	.word	0x20000000
 8018e0c:	08016eb9 	.word	0x08016eb9
 8018e10:	200000d8 	.word	0x200000d8
 8018e14:	200156e4 	.word	0x200156e4
 8018e18:	08016eb7 	.word	0x08016eb7
 8018e1c:	200000dc 	.word	0x200000dc

08018e20 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 8018e20:	b538      	push	{r3, r4, r5, lr}
 8018e22:	4c15      	ldr	r4, [pc, #84]	; (8018e78 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 8018e24:	7823      	ldrb	r3, [r4, #0]
 8018e26:	f3bf 8f5b 	dmb	ish
 8018e2a:	07da      	lsls	r2, r3, #31
 8018e2c:	4605      	mov	r5, r0
 8018e2e:	d40b      	bmi.n	8018e48 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8018e30:	4620      	mov	r0, r4
 8018e32:	f007 fcbb 	bl	80207ac <__cxa_guard_acquire>
 8018e36:	b138      	cbz	r0, 8018e48 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8018e38:	4620      	mov	r0, r4
 8018e3a:	f007 fcc3 	bl	80207c4 <__cxa_guard_release>
 8018e3e:	4a0f      	ldr	r2, [pc, #60]	; (8018e7c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8018e40:	490f      	ldr	r1, [pc, #60]	; (8018e80 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 8018e42:	4810      	ldr	r0, [pc, #64]	; (8018e84 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8018e44:	f007 fcab 	bl	802079e <__aeabi_atexit>
 8018e48:	4c0f      	ldr	r4, [pc, #60]	; (8018e88 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 8018e4a:	7823      	ldrb	r3, [r4, #0]
 8018e4c:	f3bf 8f5b 	dmb	ish
 8018e50:	07db      	lsls	r3, r3, #31
 8018e52:	d40b      	bmi.n	8018e6c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8018e54:	4620      	mov	r0, r4
 8018e56:	f007 fca9 	bl	80207ac <__cxa_guard_acquire>
 8018e5a:	b138      	cbz	r0, 8018e6c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8018e5c:	4620      	mov	r0, r4
 8018e5e:	f007 fcb1 	bl	80207c4 <__cxa_guard_release>
 8018e62:	4a06      	ldr	r2, [pc, #24]	; (8018e7c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8018e64:	4909      	ldr	r1, [pc, #36]	; (8018e8c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 8018e66:	480a      	ldr	r0, [pc, #40]	; (8018e90 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8018e68:	f007 fc99 	bl	802079e <__aeabi_atexit>
 8018e6c:	4b05      	ldr	r3, [pc, #20]	; (8018e84 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8018e6e:	61ab      	str	r3, [r5, #24]
 8018e70:	4b07      	ldr	r3, [pc, #28]	; (8018e90 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8018e72:	61eb      	str	r3, [r5, #28]
 8018e74:	bd38      	pop	{r3, r4, r5, pc}
 8018e76:	bf00      	nop
 8018e78:	200156b8 	.word	0x200156b8
 8018e7c:	20000000 	.word	0x20000000
 8018e80:	08016ebd 	.word	0x08016ebd
 8018e84:	200000b0 	.word	0x200000b0
 8018e88:	200156bc 	.word	0x200156bc
 8018e8c:	08016ebb 	.word	0x08016ebb
 8018e90:	200000b4 	.word	0x200000b4

08018e94 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 8018e94:	b510      	push	{r4, lr}
 8018e96:	4604      	mov	r4, r0
 8018e98:	f7ff ff88 	bl	8018dac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 8018e9c:	4620      	mov	r0, r4
 8018e9e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8018ea2:	f7ff bfbd 	b.w	8018e20 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

08018ea8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 8018ea8:	b538      	push	{r3, r4, r5, lr}
 8018eaa:	4c15      	ldr	r4, [pc, #84]	; (8018f00 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 8018eac:	7823      	ldrb	r3, [r4, #0]
 8018eae:	f3bf 8f5b 	dmb	ish
 8018eb2:	07da      	lsls	r2, r3, #31
 8018eb4:	4605      	mov	r5, r0
 8018eb6:	d40b      	bmi.n	8018ed0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8018eb8:	4620      	mov	r0, r4
 8018eba:	f007 fc77 	bl	80207ac <__cxa_guard_acquire>
 8018ebe:	b138      	cbz	r0, 8018ed0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8018ec0:	4620      	mov	r0, r4
 8018ec2:	f007 fc7f 	bl	80207c4 <__cxa_guard_release>
 8018ec6:	4a0f      	ldr	r2, [pc, #60]	; (8018f04 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8018ec8:	490f      	ldr	r1, [pc, #60]	; (8018f08 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 8018eca:	4810      	ldr	r0, [pc, #64]	; (8018f0c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8018ecc:	f007 fc67 	bl	802079e <__aeabi_atexit>
 8018ed0:	4c0f      	ldr	r4, [pc, #60]	; (8018f10 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 8018ed2:	7823      	ldrb	r3, [r4, #0]
 8018ed4:	f3bf 8f5b 	dmb	ish
 8018ed8:	07db      	lsls	r3, r3, #31
 8018eda:	d40b      	bmi.n	8018ef4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8018edc:	4620      	mov	r0, r4
 8018ede:	f007 fc65 	bl	80207ac <__cxa_guard_acquire>
 8018ee2:	b138      	cbz	r0, 8018ef4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8018ee4:	4620      	mov	r0, r4
 8018ee6:	f007 fc6d 	bl	80207c4 <__cxa_guard_release>
 8018eea:	4a06      	ldr	r2, [pc, #24]	; (8018f04 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8018eec:	4909      	ldr	r1, [pc, #36]	; (8018f14 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 8018eee:	480a      	ldr	r0, [pc, #40]	; (8018f18 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8018ef0:	f007 fc55 	bl	802079e <__aeabi_atexit>
 8018ef4:	4b05      	ldr	r3, [pc, #20]	; (8018f0c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8018ef6:	632b      	str	r3, [r5, #48]	; 0x30
 8018ef8:	4b07      	ldr	r3, [pc, #28]	; (8018f18 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8018efa:	636b      	str	r3, [r5, #52]	; 0x34
 8018efc:	bd38      	pop	{r3, r4, r5, pc}
 8018efe:	bf00      	nop
 8018f00:	200156f0 	.word	0x200156f0
 8018f04:	20000000 	.word	0x20000000
 8018f08:	08016eb1 	.word	0x08016eb1
 8018f0c:	200000e8 	.word	0x200000e8
 8018f10:	200156f4 	.word	0x200156f4
 8018f14:	08016eaf 	.word	0x08016eaf
 8018f18:	200000ec 	.word	0x200000ec

08018f1c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 8018f1c:	b538      	push	{r3, r4, r5, lr}
 8018f1e:	4c15      	ldr	r4, [pc, #84]	; (8018f74 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 8018f20:	7823      	ldrb	r3, [r4, #0]
 8018f22:	f3bf 8f5b 	dmb	ish
 8018f26:	07da      	lsls	r2, r3, #31
 8018f28:	4605      	mov	r5, r0
 8018f2a:	d40b      	bmi.n	8018f44 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8018f2c:	4620      	mov	r0, r4
 8018f2e:	f007 fc3d 	bl	80207ac <__cxa_guard_acquire>
 8018f32:	b138      	cbz	r0, 8018f44 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8018f34:	4620      	mov	r0, r4
 8018f36:	f007 fc45 	bl	80207c4 <__cxa_guard_release>
 8018f3a:	4a0f      	ldr	r2, [pc, #60]	; (8018f78 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8018f3c:	490f      	ldr	r1, [pc, #60]	; (8018f7c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 8018f3e:	4810      	ldr	r0, [pc, #64]	; (8018f80 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8018f40:	f007 fc2d 	bl	802079e <__aeabi_atexit>
 8018f44:	4c0f      	ldr	r4, [pc, #60]	; (8018f84 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 8018f46:	7823      	ldrb	r3, [r4, #0]
 8018f48:	f3bf 8f5b 	dmb	ish
 8018f4c:	07db      	lsls	r3, r3, #31
 8018f4e:	d40b      	bmi.n	8018f68 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8018f50:	4620      	mov	r0, r4
 8018f52:	f007 fc2b 	bl	80207ac <__cxa_guard_acquire>
 8018f56:	b138      	cbz	r0, 8018f68 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8018f58:	4620      	mov	r0, r4
 8018f5a:	f007 fc33 	bl	80207c4 <__cxa_guard_release>
 8018f5e:	4a06      	ldr	r2, [pc, #24]	; (8018f78 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8018f60:	4909      	ldr	r1, [pc, #36]	; (8018f88 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 8018f62:	480a      	ldr	r0, [pc, #40]	; (8018f8c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8018f64:	f007 fc1b 	bl	802079e <__aeabi_atexit>
 8018f68:	4b05      	ldr	r3, [pc, #20]	; (8018f80 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8018f6a:	62ab      	str	r3, [r5, #40]	; 0x28
 8018f6c:	4b07      	ldr	r3, [pc, #28]	; (8018f8c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8018f6e:	62eb      	str	r3, [r5, #44]	; 0x2c
 8018f70:	bd38      	pop	{r3, r4, r5, pc}
 8018f72:	bf00      	nop
 8018f74:	200156c0 	.word	0x200156c0
 8018f78:	20000000 	.word	0x20000000
 8018f7c:	08016eb5 	.word	0x08016eb5
 8018f80:	200000b8 	.word	0x200000b8
 8018f84:	200156c4 	.word	0x200156c4
 8018f88:	08016eb3 	.word	0x08016eb3
 8018f8c:	200000bc 	.word	0x200000bc

08018f90 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 8018f90:	b510      	push	{r4, lr}
 8018f92:	4604      	mov	r4, r0
 8018f94:	f7ff ff88 	bl	8018ea8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 8018f98:	4620      	mov	r0, r4
 8018f9a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8018f9e:	f7ff bfbd 	b.w	8018f1c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

08018fa4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 8018fa4:	b538      	push	{r3, r4, r5, lr}
 8018fa6:	4c15      	ldr	r4, [pc, #84]	; (8018ffc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 8018fa8:	7823      	ldrb	r3, [r4, #0]
 8018faa:	f3bf 8f5b 	dmb	ish
 8018fae:	07da      	lsls	r2, r3, #31
 8018fb0:	4605      	mov	r5, r0
 8018fb2:	d40b      	bmi.n	8018fcc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8018fb4:	4620      	mov	r0, r4
 8018fb6:	f007 fbf9 	bl	80207ac <__cxa_guard_acquire>
 8018fba:	b138      	cbz	r0, 8018fcc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8018fbc:	4620      	mov	r0, r4
 8018fbe:	f007 fc01 	bl	80207c4 <__cxa_guard_release>
 8018fc2:	4a0f      	ldr	r2, [pc, #60]	; (8019000 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8018fc4:	490f      	ldr	r1, [pc, #60]	; (8019004 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 8018fc6:	4810      	ldr	r0, [pc, #64]	; (8019008 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8018fc8:	f007 fbe9 	bl	802079e <__aeabi_atexit>
 8018fcc:	4c0f      	ldr	r4, [pc, #60]	; (801900c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 8018fce:	7823      	ldrb	r3, [r4, #0]
 8018fd0:	f3bf 8f5b 	dmb	ish
 8018fd4:	07db      	lsls	r3, r3, #31
 8018fd6:	d40b      	bmi.n	8018ff0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8018fd8:	4620      	mov	r0, r4
 8018fda:	f007 fbe7 	bl	80207ac <__cxa_guard_acquire>
 8018fde:	b138      	cbz	r0, 8018ff0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8018fe0:	4620      	mov	r0, r4
 8018fe2:	f007 fbef 	bl	80207c4 <__cxa_guard_release>
 8018fe6:	4a06      	ldr	r2, [pc, #24]	; (8019000 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8018fe8:	4909      	ldr	r1, [pc, #36]	; (8019010 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 8018fea:	480a      	ldr	r0, [pc, #40]	; (8019014 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8018fec:	f007 fbd7 	bl	802079e <__aeabi_atexit>
 8018ff0:	4b05      	ldr	r3, [pc, #20]	; (8019008 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8018ff2:	652b      	str	r3, [r5, #80]	; 0x50
 8018ff4:	4b07      	ldr	r3, [pc, #28]	; (8019014 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8018ff6:	656b      	str	r3, [r5, #84]	; 0x54
 8018ff8:	bd38      	pop	{r3, r4, r5, pc}
 8018ffa:	bf00      	nop
 8018ffc:	200156f8 	.word	0x200156f8
 8019000:	20000000 	.word	0x20000000
 8019004:	08016ea1 	.word	0x08016ea1
 8019008:	200000f0 	.word	0x200000f0
 801900c:	200156fc 	.word	0x200156fc
 8019010:	08016e9f 	.word	0x08016e9f
 8019014:	200000f4 	.word	0x200000f4

08019018 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 8019018:	b538      	push	{r3, r4, r5, lr}
 801901a:	4c15      	ldr	r4, [pc, #84]	; (8019070 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 801901c:	7823      	ldrb	r3, [r4, #0]
 801901e:	f3bf 8f5b 	dmb	ish
 8019022:	07da      	lsls	r2, r3, #31
 8019024:	4605      	mov	r5, r0
 8019026:	d40b      	bmi.n	8019040 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8019028:	4620      	mov	r0, r4
 801902a:	f007 fbbf 	bl	80207ac <__cxa_guard_acquire>
 801902e:	b138      	cbz	r0, 8019040 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8019030:	4620      	mov	r0, r4
 8019032:	f007 fbc7 	bl	80207c4 <__cxa_guard_release>
 8019036:	4a0f      	ldr	r2, [pc, #60]	; (8019074 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8019038:	490f      	ldr	r1, [pc, #60]	; (8019078 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 801903a:	4810      	ldr	r0, [pc, #64]	; (801907c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801903c:	f007 fbaf 	bl	802079e <__aeabi_atexit>
 8019040:	4c0f      	ldr	r4, [pc, #60]	; (8019080 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 8019042:	7823      	ldrb	r3, [r4, #0]
 8019044:	f3bf 8f5b 	dmb	ish
 8019048:	07db      	lsls	r3, r3, #31
 801904a:	d40b      	bmi.n	8019064 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801904c:	4620      	mov	r0, r4
 801904e:	f007 fbad 	bl	80207ac <__cxa_guard_acquire>
 8019052:	b138      	cbz	r0, 8019064 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8019054:	4620      	mov	r0, r4
 8019056:	f007 fbb5 	bl	80207c4 <__cxa_guard_release>
 801905a:	4a06      	ldr	r2, [pc, #24]	; (8019074 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801905c:	4909      	ldr	r1, [pc, #36]	; (8019084 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 801905e:	480a      	ldr	r0, [pc, #40]	; (8019088 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8019060:	f007 fb9d 	bl	802079e <__aeabi_atexit>
 8019064:	4b05      	ldr	r3, [pc, #20]	; (801907c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8019066:	64ab      	str	r3, [r5, #72]	; 0x48
 8019068:	4b07      	ldr	r3, [pc, #28]	; (8019088 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801906a:	64eb      	str	r3, [r5, #76]	; 0x4c
 801906c:	bd38      	pop	{r3, r4, r5, pc}
 801906e:	bf00      	nop
 8019070:	20015700 	.word	0x20015700
 8019074:	20000000 	.word	0x20000000
 8019078:	08016ea5 	.word	0x08016ea5
 801907c:	200000f8 	.word	0x200000f8
 8019080:	20015704 	.word	0x20015704
 8019084:	08016ea3 	.word	0x08016ea3
 8019088:	200000fc 	.word	0x200000fc

0801908c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 801908c:	b538      	push	{r3, r4, r5, lr}
 801908e:	4c15      	ldr	r4, [pc, #84]	; (80190e4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 8019090:	7823      	ldrb	r3, [r4, #0]
 8019092:	f3bf 8f5b 	dmb	ish
 8019096:	07da      	lsls	r2, r3, #31
 8019098:	4605      	mov	r5, r0
 801909a:	d40b      	bmi.n	80190b4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801909c:	4620      	mov	r0, r4
 801909e:	f007 fb85 	bl	80207ac <__cxa_guard_acquire>
 80190a2:	b138      	cbz	r0, 80190b4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 80190a4:	4620      	mov	r0, r4
 80190a6:	f007 fb8d 	bl	80207c4 <__cxa_guard_release>
 80190aa:	4a0f      	ldr	r2, [pc, #60]	; (80190e8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 80190ac:	490f      	ldr	r1, [pc, #60]	; (80190ec <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 80190ae:	4810      	ldr	r0, [pc, #64]	; (80190f0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 80190b0:	f007 fb75 	bl	802079e <__aeabi_atexit>
 80190b4:	4c0f      	ldr	r4, [pc, #60]	; (80190f4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 80190b6:	7823      	ldrb	r3, [r4, #0]
 80190b8:	f3bf 8f5b 	dmb	ish
 80190bc:	07db      	lsls	r3, r3, #31
 80190be:	d40b      	bmi.n	80190d8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 80190c0:	4620      	mov	r0, r4
 80190c2:	f007 fb73 	bl	80207ac <__cxa_guard_acquire>
 80190c6:	b138      	cbz	r0, 80190d8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 80190c8:	4620      	mov	r0, r4
 80190ca:	f007 fb7b 	bl	80207c4 <__cxa_guard_release>
 80190ce:	4a06      	ldr	r2, [pc, #24]	; (80190e8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 80190d0:	4909      	ldr	r1, [pc, #36]	; (80190f8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 80190d2:	480a      	ldr	r0, [pc, #40]	; (80190fc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 80190d4:	f007 fb63 	bl	802079e <__aeabi_atexit>
 80190d8:	4b05      	ldr	r3, [pc, #20]	; (80190f0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 80190da:	642b      	str	r3, [r5, #64]	; 0x40
 80190dc:	4b07      	ldr	r3, [pc, #28]	; (80190fc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 80190de:	646b      	str	r3, [r5, #68]	; 0x44
 80190e0:	bd38      	pop	{r3, r4, r5, pc}
 80190e2:	bf00      	nop
 80190e4:	200156c8 	.word	0x200156c8
 80190e8:	20000000 	.word	0x20000000
 80190ec:	08016ea9 	.word	0x08016ea9
 80190f0:	200000c0 	.word	0x200000c0
 80190f4:	200156cc 	.word	0x200156cc
 80190f8:	08016ea7 	.word	0x08016ea7
 80190fc:	200000c4 	.word	0x200000c4

08019100 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 8019100:	b538      	push	{r3, r4, r5, lr}
 8019102:	4c15      	ldr	r4, [pc, #84]	; (8019158 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 8019104:	7823      	ldrb	r3, [r4, #0]
 8019106:	f3bf 8f5b 	dmb	ish
 801910a:	07da      	lsls	r2, r3, #31
 801910c:	4605      	mov	r5, r0
 801910e:	d40b      	bmi.n	8019128 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8019110:	4620      	mov	r0, r4
 8019112:	f007 fb4b 	bl	80207ac <__cxa_guard_acquire>
 8019116:	b138      	cbz	r0, 8019128 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8019118:	4620      	mov	r0, r4
 801911a:	f007 fb53 	bl	80207c4 <__cxa_guard_release>
 801911e:	4a0f      	ldr	r2, [pc, #60]	; (801915c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8019120:	490f      	ldr	r1, [pc, #60]	; (8019160 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 8019122:	4810      	ldr	r0, [pc, #64]	; (8019164 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8019124:	f007 fb3b 	bl	802079e <__aeabi_atexit>
 8019128:	4c0f      	ldr	r4, [pc, #60]	; (8019168 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 801912a:	7823      	ldrb	r3, [r4, #0]
 801912c:	f3bf 8f5b 	dmb	ish
 8019130:	07db      	lsls	r3, r3, #31
 8019132:	d40b      	bmi.n	801914c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8019134:	4620      	mov	r0, r4
 8019136:	f007 fb39 	bl	80207ac <__cxa_guard_acquire>
 801913a:	b138      	cbz	r0, 801914c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801913c:	4620      	mov	r0, r4
 801913e:	f007 fb41 	bl	80207c4 <__cxa_guard_release>
 8019142:	4a06      	ldr	r2, [pc, #24]	; (801915c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8019144:	4909      	ldr	r1, [pc, #36]	; (801916c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 8019146:	480a      	ldr	r0, [pc, #40]	; (8019170 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8019148:	f007 fb29 	bl	802079e <__aeabi_atexit>
 801914c:	4b05      	ldr	r3, [pc, #20]	; (8019164 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801914e:	63ab      	str	r3, [r5, #56]	; 0x38
 8019150:	4b07      	ldr	r3, [pc, #28]	; (8019170 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8019152:	63eb      	str	r3, [r5, #60]	; 0x3c
 8019154:	bd38      	pop	{r3, r4, r5, pc}
 8019156:	bf00      	nop
 8019158:	200156e8 	.word	0x200156e8
 801915c:	20000000 	.word	0x20000000
 8019160:	08016ead 	.word	0x08016ead
 8019164:	200000e0 	.word	0x200000e0
 8019168:	200156ec 	.word	0x200156ec
 801916c:	08016eab 	.word	0x08016eab
 8019170:	200000e4 	.word	0x200000e4

08019174 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 8019174:	b510      	push	{r4, lr}
 8019176:	4604      	mov	r4, r0
 8019178:	f7ff ff14 	bl	8018fa4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 801917c:	4620      	mov	r0, r4
 801917e:	f7ff ff85 	bl	801908c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 8019182:	4620      	mov	r0, r4
 8019184:	f7ff ff48 	bl	8019018 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 8019188:	4620      	mov	r0, r4
 801918a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801918e:	f7ff bfb7 	b.w	8019100 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

08019194 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 8019194:	b538      	push	{r3, r4, r5, lr}
 8019196:	4c15      	ldr	r4, [pc, #84]	; (80191ec <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 8019198:	7823      	ldrb	r3, [r4, #0]
 801919a:	f3bf 8f5b 	dmb	ish
 801919e:	07da      	lsls	r2, r3, #31
 80191a0:	4605      	mov	r5, r0
 80191a2:	d40b      	bmi.n	80191bc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 80191a4:	4620      	mov	r0, r4
 80191a6:	f007 fb01 	bl	80207ac <__cxa_guard_acquire>
 80191aa:	b138      	cbz	r0, 80191bc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 80191ac:	4620      	mov	r0, r4
 80191ae:	f007 fb09 	bl	80207c4 <__cxa_guard_release>
 80191b2:	4a0f      	ldr	r2, [pc, #60]	; (80191f0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 80191b4:	490f      	ldr	r1, [pc, #60]	; (80191f4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 80191b6:	4810      	ldr	r0, [pc, #64]	; (80191f8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 80191b8:	f007 faf1 	bl	802079e <__aeabi_atexit>
 80191bc:	4c0f      	ldr	r4, [pc, #60]	; (80191fc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 80191be:	7823      	ldrb	r3, [r4, #0]
 80191c0:	f3bf 8f5b 	dmb	ish
 80191c4:	07db      	lsls	r3, r3, #31
 80191c6:	d40b      	bmi.n	80191e0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 80191c8:	4620      	mov	r0, r4
 80191ca:	f007 faef 	bl	80207ac <__cxa_guard_acquire>
 80191ce:	b138      	cbz	r0, 80191e0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 80191d0:	4620      	mov	r0, r4
 80191d2:	f007 faf7 	bl	80207c4 <__cxa_guard_release>
 80191d6:	4a06      	ldr	r2, [pc, #24]	; (80191f0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 80191d8:	4909      	ldr	r1, [pc, #36]	; (8019200 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 80191da:	480a      	ldr	r0, [pc, #40]	; (8019204 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 80191dc:	f007 fadf 	bl	802079e <__aeabi_atexit>
 80191e0:	4b05      	ldr	r3, [pc, #20]	; (80191f8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 80191e2:	662b      	str	r3, [r5, #96]	; 0x60
 80191e4:	4b07      	ldr	r3, [pc, #28]	; (8019204 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 80191e6:	666b      	str	r3, [r5, #100]	; 0x64
 80191e8:	bd38      	pop	{r3, r4, r5, pc}
 80191ea:	bf00      	nop
 80191ec:	200156d0 	.word	0x200156d0
 80191f0:	20000000 	.word	0x20000000
 80191f4:	08016e99 	.word	0x08016e99
 80191f8:	200000c8 	.word	0x200000c8
 80191fc:	200156d4 	.word	0x200156d4
 8019200:	08016e97 	.word	0x08016e97
 8019204:	200000cc 	.word	0x200000cc

08019208 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 8019208:	b538      	push	{r3, r4, r5, lr}
 801920a:	4c15      	ldr	r4, [pc, #84]	; (8019260 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 801920c:	7823      	ldrb	r3, [r4, #0]
 801920e:	f3bf 8f5b 	dmb	ish
 8019212:	07da      	lsls	r2, r3, #31
 8019214:	4605      	mov	r5, r0
 8019216:	d40b      	bmi.n	8019230 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8019218:	4620      	mov	r0, r4
 801921a:	f007 fac7 	bl	80207ac <__cxa_guard_acquire>
 801921e:	b138      	cbz	r0, 8019230 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8019220:	4620      	mov	r0, r4
 8019222:	f007 facf 	bl	80207c4 <__cxa_guard_release>
 8019226:	4a0f      	ldr	r2, [pc, #60]	; (8019264 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8019228:	490f      	ldr	r1, [pc, #60]	; (8019268 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 801922a:	4810      	ldr	r0, [pc, #64]	; (801926c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801922c:	f007 fab7 	bl	802079e <__aeabi_atexit>
 8019230:	4c0f      	ldr	r4, [pc, #60]	; (8019270 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 8019232:	7823      	ldrb	r3, [r4, #0]
 8019234:	f3bf 8f5b 	dmb	ish
 8019238:	07db      	lsls	r3, r3, #31
 801923a:	d40b      	bmi.n	8019254 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801923c:	4620      	mov	r0, r4
 801923e:	f007 fab5 	bl	80207ac <__cxa_guard_acquire>
 8019242:	b138      	cbz	r0, 8019254 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8019244:	4620      	mov	r0, r4
 8019246:	f007 fabd 	bl	80207c4 <__cxa_guard_release>
 801924a:	4a06      	ldr	r2, [pc, #24]	; (8019264 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801924c:	4909      	ldr	r1, [pc, #36]	; (8019274 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 801924e:	480a      	ldr	r0, [pc, #40]	; (8019278 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8019250:	f007 faa5 	bl	802079e <__aeabi_atexit>
 8019254:	4b05      	ldr	r3, [pc, #20]	; (801926c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8019256:	65ab      	str	r3, [r5, #88]	; 0x58
 8019258:	4b07      	ldr	r3, [pc, #28]	; (8019278 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801925a:	65eb      	str	r3, [r5, #92]	; 0x5c
 801925c:	bd38      	pop	{r3, r4, r5, pc}
 801925e:	bf00      	nop
 8019260:	200156a8 	.word	0x200156a8
 8019264:	20000000 	.word	0x20000000
 8019268:	08016e9d 	.word	0x08016e9d
 801926c:	200000a0 	.word	0x200000a0
 8019270:	200156ac 	.word	0x200156ac
 8019274:	08016e9b 	.word	0x08016e9b
 8019278:	200000a4 	.word	0x200000a4

0801927c <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 801927c:	b510      	push	{r4, lr}
 801927e:	4604      	mov	r4, r0
 8019280:	f7ff ff88 	bl	8019194 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 8019284:	4620      	mov	r0, r4
 8019286:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801928a:	f7ff bfbd 	b.w	8019208 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

08019290 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 8019290:	b538      	push	{r3, r4, r5, lr}
 8019292:	4c15      	ldr	r4, [pc, #84]	; (80192e8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 8019294:	7823      	ldrb	r3, [r4, #0]
 8019296:	f3bf 8f5b 	dmb	ish
 801929a:	07da      	lsls	r2, r3, #31
 801929c:	4605      	mov	r5, r0
 801929e:	d40b      	bmi.n	80192b8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 80192a0:	4620      	mov	r0, r4
 80192a2:	f007 fa83 	bl	80207ac <__cxa_guard_acquire>
 80192a6:	b138      	cbz	r0, 80192b8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 80192a8:	4620      	mov	r0, r4
 80192aa:	f007 fa8b 	bl	80207c4 <__cxa_guard_release>
 80192ae:	4a0f      	ldr	r2, [pc, #60]	; (80192ec <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 80192b0:	490f      	ldr	r1, [pc, #60]	; (80192f0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 80192b2:	4810      	ldr	r0, [pc, #64]	; (80192f4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 80192b4:	f007 fa73 	bl	802079e <__aeabi_atexit>
 80192b8:	4c0f      	ldr	r4, [pc, #60]	; (80192f8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 80192ba:	7823      	ldrb	r3, [r4, #0]
 80192bc:	f3bf 8f5b 	dmb	ish
 80192c0:	07db      	lsls	r3, r3, #31
 80192c2:	d40b      	bmi.n	80192dc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 80192c4:	4620      	mov	r0, r4
 80192c6:	f007 fa71 	bl	80207ac <__cxa_guard_acquire>
 80192ca:	b138      	cbz	r0, 80192dc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 80192cc:	4620      	mov	r0, r4
 80192ce:	f007 fa79 	bl	80207c4 <__cxa_guard_release>
 80192d2:	4a06      	ldr	r2, [pc, #24]	; (80192ec <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 80192d4:	4909      	ldr	r1, [pc, #36]	; (80192fc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 80192d6:	480a      	ldr	r0, [pc, #40]	; (8019300 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 80192d8:	f007 fa61 	bl	802079e <__aeabi_atexit>
 80192dc:	4b05      	ldr	r3, [pc, #20]	; (80192f4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 80192de:	672b      	str	r3, [r5, #112]	; 0x70
 80192e0:	4b07      	ldr	r3, [pc, #28]	; (8019300 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 80192e2:	676b      	str	r3, [r5, #116]	; 0x74
 80192e4:	bd38      	pop	{r3, r4, r5, pc}
 80192e6:	bf00      	nop
 80192e8:	200156a0 	.word	0x200156a0
 80192ec:	20000000 	.word	0x20000000
 80192f0:	08016e91 	.word	0x08016e91
 80192f4:	20000098 	.word	0x20000098
 80192f8:	200156a4 	.word	0x200156a4
 80192fc:	08016e8f 	.word	0x08016e8f
 8019300:	2000009c 	.word	0x2000009c

08019304 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 8019304:	b538      	push	{r3, r4, r5, lr}
 8019306:	4c15      	ldr	r4, [pc, #84]	; (801935c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 8019308:	7823      	ldrb	r3, [r4, #0]
 801930a:	f3bf 8f5b 	dmb	ish
 801930e:	07da      	lsls	r2, r3, #31
 8019310:	4605      	mov	r5, r0
 8019312:	d40b      	bmi.n	801932c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8019314:	4620      	mov	r0, r4
 8019316:	f007 fa49 	bl	80207ac <__cxa_guard_acquire>
 801931a:	b138      	cbz	r0, 801932c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801931c:	4620      	mov	r0, r4
 801931e:	f007 fa51 	bl	80207c4 <__cxa_guard_release>
 8019322:	4a0f      	ldr	r2, [pc, #60]	; (8019360 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8019324:	490f      	ldr	r1, [pc, #60]	; (8019364 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 8019326:	4810      	ldr	r0, [pc, #64]	; (8019368 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8019328:	f007 fa39 	bl	802079e <__aeabi_atexit>
 801932c:	4c0f      	ldr	r4, [pc, #60]	; (801936c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 801932e:	7823      	ldrb	r3, [r4, #0]
 8019330:	f3bf 8f5b 	dmb	ish
 8019334:	07db      	lsls	r3, r3, #31
 8019336:	d40b      	bmi.n	8019350 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8019338:	4620      	mov	r0, r4
 801933a:	f007 fa37 	bl	80207ac <__cxa_guard_acquire>
 801933e:	b138      	cbz	r0, 8019350 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8019340:	4620      	mov	r0, r4
 8019342:	f007 fa3f 	bl	80207c4 <__cxa_guard_release>
 8019346:	4a06      	ldr	r2, [pc, #24]	; (8019360 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8019348:	4909      	ldr	r1, [pc, #36]	; (8019370 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 801934a:	480a      	ldr	r0, [pc, #40]	; (8019374 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801934c:	f007 fa27 	bl	802079e <__aeabi_atexit>
 8019350:	4b05      	ldr	r3, [pc, #20]	; (8019368 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8019352:	66ab      	str	r3, [r5, #104]	; 0x68
 8019354:	4b07      	ldr	r3, [pc, #28]	; (8019374 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8019356:	66eb      	str	r3, [r5, #108]	; 0x6c
 8019358:	bd38      	pop	{r3, r4, r5, pc}
 801935a:	bf00      	nop
 801935c:	20015698 	.word	0x20015698
 8019360:	20000000 	.word	0x20000000
 8019364:	08016e95 	.word	0x08016e95
 8019368:	20000090 	.word	0x20000090
 801936c:	2001569c 	.word	0x2001569c
 8019370:	08016e93 	.word	0x08016e93
 8019374:	20000094 	.word	0x20000094

08019378 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 8019378:	b510      	push	{r4, lr}
 801937a:	4604      	mov	r4, r0
 801937c:	f7ff ff88 	bl	8019290 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 8019380:	4620      	mov	r0, r4
 8019382:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8019386:	f7ff bfbd 	b.w	8019304 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

0801938a <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 801938a:	b510      	push	{r4, lr}
 801938c:	4604      	mov	r4, r0
 801938e:	f7ff fff3 	bl	8019378 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 8019392:	4620      	mov	r0, r4
 8019394:	f7ff ff72 	bl	801927c <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 8019398:	4620      	mov	r0, r4
 801939a:	f7ff fdf9 	bl	8018f90 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 801939e:	4620      	mov	r0, r4
 80193a0:	f7ff fcfa 	bl	8018d98 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 80193a4:	4620      	mov	r0, r4
 80193a6:	f7ff fd75 	bl	8018e94 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 80193aa:	4620      	mov	r0, r4
 80193ac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80193b0:	f7ff bee0 	b.w	8019174 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

080193b4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 80193b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80193b8:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	; 0x2c
 80193bc:	f9bd e024 	ldrsh.w	lr, [sp, #36]	; 0x24
 80193c0:	f9bd b028 	ldrsh.w	fp, [sp, #40]	; 0x28
 80193c4:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 80193c8:	f89d 7038 	ldrb.w	r7, [sp, #56]	; 0x38
 80193cc:	f89d 603c 	ldrb.w	r6, [sp, #60]	; 0x3c
 80193d0:	8808      	ldrh	r0, [r1, #0]
 80193d2:	fb05 4c0e 	mla	ip, r5, lr, r4
 80193d6:	2d00      	cmp	r5, #0
 80193d8:	eb02 0a0c 	add.w	sl, r2, ip
 80193dc:	f2c0 80b0 	blt.w	8019540 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 80193e0:	45ab      	cmp	fp, r5
 80193e2:	f340 80ad 	ble.w	8019540 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 80193e6:	2c00      	cmp	r4, #0
 80193e8:	f2c0 80a8 	blt.w	801953c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 80193ec:	45a6      	cmp	lr, r4
 80193ee:	f340 80a5 	ble.w	801953c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 80193f2:	f812 200c 	ldrb.w	r2, [r2, ip]
 80193f6:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 80193fa:	1c62      	adds	r2, r4, #1
 80193fc:	f100 80a3 	bmi.w	8019546 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8019400:	4596      	cmp	lr, r2
 8019402:	f340 80a0 	ble.w	8019546 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8019406:	f1b9 0f00 	cmp.w	r9, #0
 801940a:	f000 809c 	beq.w	8019546 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801940e:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8019412:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 8019416:	3501      	adds	r5, #1
 8019418:	f100 8099 	bmi.w	801954e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801941c:	45ab      	cmp	fp, r5
 801941e:	f340 8096 	ble.w	801954e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8019422:	2f00      	cmp	r7, #0
 8019424:	f000 8093 	beq.w	801954e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8019428:	2c00      	cmp	r4, #0
 801942a:	f2c0 808e 	blt.w	801954a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801942e:	45a6      	cmp	lr, r4
 8019430:	f340 808b 	ble.w	801954a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 8019434:	f81a 200e 	ldrb.w	r2, [sl, lr]
 8019438:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 801943c:	3401      	adds	r4, #1
 801943e:	f100 8089 	bmi.w	8019554 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8019442:	45a6      	cmp	lr, r4
 8019444:	f340 8086 	ble.w	8019554 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8019448:	f1b9 0f00 	cmp.w	r9, #0
 801944c:	f000 8082 	beq.w	8019554 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8019450:	44d6      	add	lr, sl
 8019452:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8019456:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 801945a:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801945e:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8019462:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 8019466:	fb19 fe07 	smulbb	lr, r9, r7
 801946a:	ea44 0808 	orr.w	r8, r4, r8
 801946e:	ea4f 440c 	mov.w	r4, ip, lsl #16
 8019472:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 8019476:	f1c7 0210 	rsb	r2, r7, #16
 801947a:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801947e:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8019482:	ea44 0c0c 	orr.w	ip, r4, ip
 8019486:	eba2 0209 	sub.w	r2, r2, r9
 801948a:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801948e:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 8019492:	fb04 f40c 	mul.w	r4, r4, ip
 8019496:	fb02 4808 	mla	r8, r2, r8, r4
 801949a:	041a      	lsls	r2, r3, #16
 801949c:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80194a0:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80194a4:	4313      	orrs	r3, r2
 80194a6:	042a      	lsls	r2, r5, #16
 80194a8:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80194ac:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 80194b0:	fb0e 8303 	mla	r3, lr, r3, r8
 80194b4:	432a      	orrs	r2, r5
 80194b6:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 80194ba:	fb07 3202 	mla	r2, r7, r2, r3
 80194be:	0d53      	lsrs	r3, r2, #21
 80194c0:	0952      	lsrs	r2, r2, #5
 80194c2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80194c6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80194ca:	431a      	orrs	r2, r3
 80194cc:	b293      	uxth	r3, r2
 80194ce:	b2b4      	uxth	r4, r6
 80194d0:	1202      	asrs	r2, r0, #8
 80194d2:	43f6      	mvns	r6, r6
 80194d4:	b2f6      	uxtb	r6, r6
 80194d6:	121d      	asrs	r5, r3, #8
 80194d8:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80194dc:	fb12 f206 	smulbb	r2, r2, r6
 80194e0:	10c7      	asrs	r7, r0, #3
 80194e2:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80194e6:	00c0      	lsls	r0, r0, #3
 80194e8:	fb05 2504 	mla	r5, r5, r4, r2
 80194ec:	b2c0      	uxtb	r0, r0
 80194ee:	10da      	asrs	r2, r3, #3
 80194f0:	00db      	lsls	r3, r3, #3
 80194f2:	b2db      	uxtb	r3, r3
 80194f4:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80194f8:	fb10 f006 	smulbb	r0, r0, r6
 80194fc:	b2ad      	uxth	r5, r5
 80194fe:	fb03 0004 	mla	r0, r3, r4, r0
 8019502:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8019506:	fb17 f706 	smulbb	r7, r7, r6
 801950a:	b280      	uxth	r0, r0
 801950c:	1c6b      	adds	r3, r5, #1
 801950e:	fb02 7204 	mla	r2, r2, r4, r7
 8019512:	b292      	uxth	r2, r2
 8019514:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8019518:	1c43      	adds	r3, r0, #1
 801951a:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801951e:	1c50      	adds	r0, r2, #1
 8019520:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8019524:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8019528:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801952c:	0952      	lsrs	r2, r2, #5
 801952e:	432b      	orrs	r3, r5
 8019530:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019534:	4313      	orrs	r3, r2
 8019536:	800b      	strh	r3, [r1, #0]
 8019538:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801953c:	4680      	mov	r8, r0
 801953e:	e75c      	b.n	80193fa <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 8019540:	4684      	mov	ip, r0
 8019542:	4680      	mov	r8, r0
 8019544:	e767      	b.n	8019416 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 8019546:	4684      	mov	ip, r0
 8019548:	e765      	b.n	8019416 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801954a:	4605      	mov	r5, r0
 801954c:	e776      	b.n	801943c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 801954e:	4603      	mov	r3, r0
 8019550:	4605      	mov	r5, r0
 8019552:	e782      	b.n	801945a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 8019554:	4603      	mov	r3, r0
 8019556:	e780      	b.n	801945a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

08019558 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019558:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801955c:	b099      	sub	sp, #100	; 0x64
 801955e:	e9dd a523 	ldrd	sl, r5, [sp, #140]	; 0x8c
 8019562:	9215      	str	r2, [sp, #84]	; 0x54
 8019564:	9309      	str	r3, [sp, #36]	; 0x24
 8019566:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8019568:	f89d 30ac 	ldrb.w	r3, [sp, #172]	; 0xac
 801956c:	930d      	str	r3, [sp, #52]	; 0x34
 801956e:	910c      	str	r1, [sp, #48]	; 0x30
 8019570:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	; 0xa0
 8019574:	9016      	str	r0, [sp, #88]	; 0x58
 8019576:	6850      	ldr	r0, [r2, #4]
 8019578:	6812      	ldr	r2, [r2, #0]
 801957a:	fb00 1303 	mla	r3, r0, r3, r1
 801957e:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 8019582:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8019584:	681b      	ldr	r3, [r3, #0]
 8019586:	930b      	str	r3, [sp, #44]	; 0x2c
 8019588:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801958a:	685e      	ldr	r6, [r3, #4]
 801958c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801958e:	43db      	mvns	r3, r3
 8019590:	b2db      	uxtb	r3, r3
 8019592:	3604      	adds	r6, #4
 8019594:	930a      	str	r3, [sp, #40]	; 0x28
 8019596:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8019598:	2b00      	cmp	r3, #0
 801959a:	dc03      	bgt.n	80195a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801959c:	9b15      	ldr	r3, [sp, #84]	; 0x54
 801959e:	2b00      	cmp	r3, #0
 80195a0:	f340 8225 	ble.w	80199ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 80195a4:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80195a6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80195aa:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80195ae:	1e48      	subs	r0, r1, #1
 80195b0:	1e57      	subs	r7, r2, #1
 80195b2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80195b4:	2b00      	cmp	r3, #0
 80195b6:	f340 80e3 	ble.w	8019780 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 80195ba:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 80195be:	ea4f 4325 	mov.w	r3, r5, asr #16
 80195c2:	d406      	bmi.n	80195d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80195c4:	4584      	cmp	ip, r0
 80195c6:	da04      	bge.n	80195d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80195c8:	2b00      	cmp	r3, #0
 80195ca:	db02      	blt.n	80195d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80195cc:	42bb      	cmp	r3, r7
 80195ce:	f2c0 80d8 	blt.w	8019782 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 80195d2:	f11c 0c01 	adds.w	ip, ip, #1
 80195d6:	f100 80c9 	bmi.w	801976c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80195da:	4561      	cmp	r1, ip
 80195dc:	f2c0 80c6 	blt.w	801976c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80195e0:	3301      	adds	r3, #1
 80195e2:	f100 80c3 	bmi.w	801976c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80195e6:	429a      	cmp	r2, r3
 80195e8:	f2c0 80c0 	blt.w	801976c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80195ec:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 80195f0:	4647      	mov	r7, r8
 80195f2:	f1bb 0f00 	cmp.w	fp, #0
 80195f6:	f340 80e3 	ble.w	80197c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 80195fa:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 80195fc:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80195fe:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8019602:	689b      	ldr	r3, [r3, #8]
 8019604:	ea5f 422a 	movs.w	r2, sl, asr #16
 8019608:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801960c:	f3ca 3003 	ubfx	r0, sl, #12, #4
 8019610:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8019614:	f100 8121 	bmi.w	801985a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8019618:	f103 39ff 	add.w	r9, r3, #4294967295
 801961c:	454a      	cmp	r2, r9
 801961e:	f280 811c 	bge.w	801985a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8019622:	f1bc 0f00 	cmp.w	ip, #0
 8019626:	f2c0 8118 	blt.w	801985a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801962a:	f10e 39ff 	add.w	r9, lr, #4294967295
 801962e:	45cc      	cmp	ip, r9
 8019630:	f280 8113 	bge.w	801985a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8019634:	b21b      	sxth	r3, r3
 8019636:	fb0c 2203 	mla	r2, ip, r3, r2
 801963a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801963c:	eb04 0902 	add.w	r9, r4, r2
 8019640:	5ca2      	ldrb	r2, [r4, r2]
 8019642:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 8019646:	2800      	cmp	r0, #0
 8019648:	f000 80fe 	beq.w	8019848 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801964c:	f899 2001 	ldrb.w	r2, [r9, #1]
 8019650:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8019654:	9211      	str	r2, [sp, #68]	; 0x44
 8019656:	b151      	cbz	r1, 801966e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8019658:	eb09 0203 	add.w	r2, r9, r3
 801965c:	f819 3003 	ldrb.w	r3, [r9, r3]
 8019660:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8019664:	930f      	str	r3, [sp, #60]	; 0x3c
 8019666:	7853      	ldrb	r3, [r2, #1]
 8019668:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801966c:	9312      	str	r3, [sp, #72]	; 0x48
 801966e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8019670:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8019672:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8019676:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801967a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801967e:	ea4c 0c03 	orr.w	ip, ip, r3
 8019682:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8019684:	041b      	lsls	r3, r3, #16
 8019686:	fb10 f201 	smulbb	r2, r0, r1
 801968a:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801968e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8019692:	10d2      	asrs	r2, r2, #3
 8019694:	4323      	orrs	r3, r4
 8019696:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 801969a:	4353      	muls	r3, r2
 801969c:	fb09 330c 	mla	r3, r9, ip, r3
 80196a0:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 80196a4:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80196a8:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80196ac:	ea4c 0e0e 	orr.w	lr, ip, lr
 80196b0:	f1c1 0c10 	rsb	ip, r1, #16
 80196b4:	ebac 0c00 	sub.w	ip, ip, r0
 80196b8:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 80196bc:	fb0c 3c0e 	mla	ip, ip, lr, r3
 80196c0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80196c2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80196c4:	0418      	lsls	r0, r3, #16
 80196c6:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80196ca:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80196ce:	4318      	orrs	r0, r3
 80196d0:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 80196d4:	fb02 c200 	mla	r2, r2, r0, ip
 80196d8:	0d53      	lsrs	r3, r2, #21
 80196da:	0952      	lsrs	r2, r2, #5
 80196dc:	8838      	ldrh	r0, [r7, #0]
 80196de:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80196e2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80196e6:	431a      	orrs	r2, r3
 80196e8:	b292      	uxth	r2, r2
 80196ea:	1201      	asrs	r1, r0, #8
 80196ec:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 80196f0:	ea4f 2c22 	mov.w	ip, r2, asr #8
 80196f4:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80196f8:	fb11 f104 	smulbb	r1, r1, r4
 80196fc:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8019700:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019704:	00c0      	lsls	r0, r0, #3
 8019706:	fb0c 1c03 	mla	ip, ip, r3, r1
 801970a:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801970e:	10d1      	asrs	r1, r2, #3
 8019710:	b2c0      	uxtb	r0, r0
 8019712:	00d2      	lsls	r2, r2, #3
 8019714:	b2d2      	uxtb	r2, r2
 8019716:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801971a:	fb1e fe04 	smulbb	lr, lr, r4
 801971e:	fb10 f004 	smulbb	r0, r0, r4
 8019722:	fa1f fc8c 	uxth.w	ip, ip
 8019726:	fb01 e103 	mla	r1, r1, r3, lr
 801972a:	fb02 0303 	mla	r3, r2, r3, r0
 801972e:	b29a      	uxth	r2, r3
 8019730:	f10c 0301 	add.w	r3, ip, #1
 8019734:	b289      	uxth	r1, r1
 8019736:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801973a:	1c53      	adds	r3, r2, #1
 801973c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8019740:	1c4a      	adds	r2, r1, #1
 8019742:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8019746:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801974a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801974e:	0949      	lsrs	r1, r1, #5
 8019750:	ea43 030c 	orr.w	r3, r3, ip
 8019754:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8019758:	430b      	orrs	r3, r1
 801975a:	803b      	strh	r3, [r7, #0]
 801975c:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801975e:	449a      	add	sl, r3
 8019760:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8019762:	3702      	adds	r7, #2
 8019764:	441d      	add	r5, r3
 8019766:	f10b 3bff 	add.w	fp, fp, #4294967295
 801976a:	e742      	b.n	80195f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801976c:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801976e:	449a      	add	sl, r3
 8019770:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8019772:	441d      	add	r5, r3
 8019774:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019776:	3b01      	subs	r3, #1
 8019778:	9309      	str	r3, [sp, #36]	; 0x24
 801977a:	f108 0802 	add.w	r8, r8, #2
 801977e:	e718      	b.n	80195b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8019780:	d023      	beq.n	80197ca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 8019782:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019784:	9825      	ldr	r0, [sp, #148]	; 0x94
 8019786:	3b01      	subs	r3, #1
 8019788:	fb00 a003 	mla	r0, r0, r3, sl
 801978c:	1400      	asrs	r0, r0, #16
 801978e:	f53f af2d 	bmi.w	80195ec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8019792:	3901      	subs	r1, #1
 8019794:	4288      	cmp	r0, r1
 8019796:	f6bf af29 	bge.w	80195ec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801979a:	9926      	ldr	r1, [sp, #152]	; 0x98
 801979c:	fb01 5303 	mla	r3, r1, r3, r5
 80197a0:	141b      	asrs	r3, r3, #16
 80197a2:	f53f af23 	bmi.w	80195ec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80197a6:	3a01      	subs	r2, #1
 80197a8:	4293      	cmp	r3, r2
 80197aa:	f6bf af1f 	bge.w	80195ec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80197ae:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 80197b2:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 80197b6:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 80197ba:	f1be 0f00 	cmp.w	lr, #0
 80197be:	dc6c      	bgt.n	801989a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 80197c0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80197c2:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80197c6:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 80197ca:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80197cc:	2b00      	cmp	r3, #0
 80197ce:	f340 810e 	ble.w	80199ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 80197d2:	ee30 0a04 	vadd.f32	s0, s0, s8
 80197d6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80197da:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80197de:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80197e0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80197e4:	ee31 1a05 	vadd.f32	s2, s2, s10
 80197e8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80197ec:	eef0 6a62 	vmov.f32	s13, s5
 80197f0:	ee61 7a27 	vmul.f32	s15, s2, s15
 80197f4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80197f8:	ee77 2a62 	vsub.f32	s5, s14, s5
 80197fc:	ee16 aa90 	vmov	sl, s13
 8019800:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019804:	eef0 6a43 	vmov.f32	s13, s6
 8019808:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801980c:	ee12 2a90 	vmov	r2, s5
 8019810:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019814:	fb92 f3f3 	sdiv	r3, r2, r3
 8019818:	ee13 2a10 	vmov	r2, s6
 801981c:	9325      	str	r3, [sp, #148]	; 0x94
 801981e:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8019820:	fb92 f3f3 	sdiv	r3, r2, r3
 8019824:	9326      	str	r3, [sp, #152]	; 0x98
 8019826:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8019828:	9a15      	ldr	r2, [sp, #84]	; 0x54
 801982a:	3b01      	subs	r3, #1
 801982c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019830:	930c      	str	r3, [sp, #48]	; 0x30
 8019832:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8019834:	bf08      	it	eq
 8019836:	4613      	moveq	r3, r2
 8019838:	ee16 5a90 	vmov	r5, s13
 801983c:	9309      	str	r3, [sp, #36]	; 0x24
 801983e:	eeb0 3a67 	vmov.f32	s6, s15
 8019842:	eef0 2a47 	vmov.f32	s5, s14
 8019846:	e6a6      	b.n	8019596 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8019848:	2900      	cmp	r1, #0
 801984a:	f43f af10 	beq.w	801966e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801984e:	f819 3003 	ldrb.w	r3, [r9, r3]
 8019852:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8019856:	930f      	str	r3, [sp, #60]	; 0x3c
 8019858:	e709      	b.n	801966e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801985a:	f112 0901 	adds.w	r9, r2, #1
 801985e:	f53f af7d 	bmi.w	801975c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8019862:	454b      	cmp	r3, r9
 8019864:	f6ff af7a 	blt.w	801975c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8019868:	f11c 0901 	adds.w	r9, ip, #1
 801986c:	f53f af76 	bmi.w	801975c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8019870:	45ce      	cmp	lr, r9
 8019872:	f6ff af73 	blt.w	801975c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8019876:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8019878:	9202      	str	r2, [sp, #8]
 801987a:	b21b      	sxth	r3, r3
 801987c:	fa0f f28e 	sxth.w	r2, lr
 8019880:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8019884:	e9cd c003 	strd	ip, r0, [sp, #12]
 8019888:	9201      	str	r2, [sp, #4]
 801988a:	9300      	str	r3, [sp, #0]
 801988c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801988e:	9816      	ldr	r0, [sp, #88]	; 0x58
 8019890:	4633      	mov	r3, r6
 8019892:	4639      	mov	r1, r7
 8019894:	f7ff fd8e 	bl	80193b4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 8019898:	e760      	b.n	801975c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801989a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801989c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801989e:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 80198a2:	ea4f 422a 	mov.w	r2, sl, asr #16
 80198a6:	1429      	asrs	r1, r5, #16
 80198a8:	fb03 2101 	mla	r1, r3, r1, r2
 80198ac:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80198ae:	440a      	add	r2, r1
 80198b0:	5c61      	ldrb	r1, [r4, r1]
 80198b2:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 80198b6:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80198ba:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 80198be:	f1bc 0f00 	cmp.w	ip, #0
 80198c2:	f000 808c 	beq.w	80199de <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 80198c6:	7857      	ldrb	r7, [r2, #1]
 80198c8:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 80198cc:	9413      	str	r4, [sp, #76]	; 0x4c
 80198ce:	b140      	cbz	r0, 80198e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 80198d0:	18d7      	adds	r7, r2, r3
 80198d2:	5cd3      	ldrb	r3, [r2, r3]
 80198d4:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80198d8:	9310      	str	r3, [sp, #64]	; 0x40
 80198da:	787b      	ldrb	r3, [r7, #1]
 80198dc:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80198e0:	9314      	str	r3, [sp, #80]	; 0x50
 80198e2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80198e4:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80198e6:	fb1c f200 	smulbb	r2, ip, r0
 80198ea:	041f      	lsls	r7, r3, #16
 80198ec:	10d2      	asrs	r2, r2, #3
 80198ee:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80198f2:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 80198f6:	431f      	orrs	r7, r3
 80198f8:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 80198fc:	9317      	str	r3, [sp, #92]	; 0x5c
 80198fe:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8019900:	041b      	lsls	r3, r3, #16
 8019902:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 8019906:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801990a:	ea43 030b 	orr.w	r3, r3, fp
 801990e:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8019910:	4353      	muls	r3, r2
 8019912:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8019916:	fb04 3707 	mla	r7, r4, r7, r3
 801991a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801991e:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8019922:	ea43 0b01 	orr.w	fp, r3, r1
 8019926:	f1c0 0110 	rsb	r1, r0, #16
 801992a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801992c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801992e:	eba1 0c0c 	sub.w	ip, r1, ip
 8019932:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8019936:	fb0c 770b 	mla	r7, ip, fp, r7
 801993a:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801993e:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 8019942:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8019946:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801994a:	ea4c 0c0b 	orr.w	ip, ip, fp
 801994e:	fb02 770c 	mla	r7, r2, ip, r7
 8019952:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8019954:	0d79      	lsrs	r1, r7, #21
 8019956:	097f      	lsrs	r7, r7, #5
 8019958:	8812      	ldrh	r2, [r2, #0]
 801995a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801995e:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8019962:	430f      	orrs	r7, r1
 8019964:	b2bb      	uxth	r3, r7
 8019966:	1211      	asrs	r1, r2, #8
 8019968:	1218      	asrs	r0, r3, #8
 801996a:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801996e:	fb11 f104 	smulbb	r1, r1, r4
 8019972:	10d7      	asrs	r7, r2, #3
 8019974:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8019978:	00d2      	lsls	r2, r2, #3
 801997a:	fb00 1009 	mla	r0, r0, r9, r1
 801997e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019982:	10d9      	asrs	r1, r3, #3
 8019984:	b2d2      	uxtb	r2, r2
 8019986:	00db      	lsls	r3, r3, #3
 8019988:	fb17 f704 	smulbb	r7, r7, r4
 801998c:	fb12 f204 	smulbb	r2, r2, r4
 8019990:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8019994:	b2db      	uxtb	r3, r3
 8019996:	b280      	uxth	r0, r0
 8019998:	fb01 7109 	mla	r1, r1, r9, r7
 801999c:	fb03 2309 	mla	r3, r3, r9, r2
 80199a0:	b29b      	uxth	r3, r3
 80199a2:	b289      	uxth	r1, r1
 80199a4:	1c42      	adds	r2, r0, #1
 80199a6:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80199aa:	1c4f      	adds	r7, r1, #1
 80199ac:	1c5a      	adds	r2, r3, #1
 80199ae:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 80199b2:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 80199b6:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 80199ba:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80199be:	0949      	lsrs	r1, r1, #5
 80199c0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80199c2:	4310      	orrs	r0, r2
 80199c4:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80199c8:	4308      	orrs	r0, r1
 80199ca:	f823 0b02 	strh.w	r0, [r3], #2
 80199ce:	930e      	str	r3, [sp, #56]	; 0x38
 80199d0:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80199d2:	449a      	add	sl, r3
 80199d4:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80199d6:	f10e 3eff 	add.w	lr, lr, #4294967295
 80199da:	441d      	add	r5, r3
 80199dc:	e6ed      	b.n	80197ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 80199de:	2800      	cmp	r0, #0
 80199e0:	f43f af7f 	beq.w	80198e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 80199e4:	5cd3      	ldrb	r3, [r2, r3]
 80199e6:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80199ea:	9310      	str	r3, [sp, #64]	; 0x40
 80199ec:	e779      	b.n	80198e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 80199ee:	b019      	add	sp, #100	; 0x64
 80199f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080199f4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 80199f4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80199f8:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	; 0x28
 80199fc:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 8019a00:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
 8019a04:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 8019a08:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 8019a0c:	8808      	ldrh	r0, [r1, #0]
 8019a0e:	fb08 470e 	mla	r7, r8, lr, r4
 8019a12:	f1b8 0f00 	cmp.w	r8, #0
 8019a16:	eb02 0907 	add.w	r9, r2, r7
 8019a1a:	db67      	blt.n	8019aec <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 8019a1c:	45c2      	cmp	sl, r8
 8019a1e:	dd65      	ble.n	8019aec <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 8019a20:	2c00      	cmp	r4, #0
 8019a22:	db61      	blt.n	8019ae8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 8019a24:	45a6      	cmp	lr, r4
 8019a26:	dd5f      	ble.n	8019ae8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 8019a28:	5dd2      	ldrb	r2, [r2, r7]
 8019a2a:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 8019a2e:	1c62      	adds	r2, r4, #1
 8019a30:	d45f      	bmi.n	8019af2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8019a32:	4596      	cmp	lr, r2
 8019a34:	dd5d      	ble.n	8019af2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8019a36:	2d00      	cmp	r5, #0
 8019a38:	d05b      	beq.n	8019af2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8019a3a:	f899 2001 	ldrb.w	r2, [r9, #1]
 8019a3e:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 8019a42:	f118 0801 	adds.w	r8, r8, #1
 8019a46:	d458      	bmi.n	8019afa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8019a48:	45c2      	cmp	sl, r8
 8019a4a:	dd56      	ble.n	8019afa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8019a4c:	2e00      	cmp	r6, #0
 8019a4e:	d054      	beq.n	8019afa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8019a50:	2c00      	cmp	r4, #0
 8019a52:	db50      	blt.n	8019af6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8019a54:	45a6      	cmp	lr, r4
 8019a56:	dd4e      	ble.n	8019af6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8019a58:	f819 200e 	ldrb.w	r2, [r9, lr]
 8019a5c:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 8019a60:	3401      	adds	r4, #1
 8019a62:	d407      	bmi.n	8019a74 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8019a64:	45a6      	cmp	lr, r4
 8019a66:	dd05      	ble.n	8019a74 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8019a68:	b125      	cbz	r5, 8019a74 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8019a6a:	44ce      	add	lr, r9
 8019a6c:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8019a70:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8019a74:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8019a78:	fb15 f406 	smulbb	r4, r5, r6
 8019a7c:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8019a80:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8019a84:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8019a88:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8019a8c:	ea43 0c0c 	orr.w	ip, r3, ip
 8019a90:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8019a94:	f1c6 0310 	rsb	r3, r6, #16
 8019a98:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8019a9c:	1b5b      	subs	r3, r3, r5
 8019a9e:	ea4e 0707 	orr.w	r7, lr, r7
 8019aa2:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 8019aa6:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8019aaa:	437d      	muls	r5, r7
 8019aac:	fb03 5c0c 	mla	ip, r3, ip, r5
 8019ab0:	0403      	lsls	r3, r0, #16
 8019ab2:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8019ab6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8019aba:	4318      	orrs	r0, r3
 8019abc:	0413      	lsls	r3, r2, #16
 8019abe:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8019ac2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8019ac6:	4313      	orrs	r3, r2
 8019ac8:	fb04 c000 	mla	r0, r4, r0, ip
 8019acc:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8019ad0:	fb06 0003 	mla	r0, r6, r3, r0
 8019ad4:	0d43      	lsrs	r3, r0, #21
 8019ad6:	0940      	lsrs	r0, r0, #5
 8019ad8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019adc:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8019ae0:	4318      	orrs	r0, r3
 8019ae2:	8008      	strh	r0, [r1, #0]
 8019ae4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8019ae8:	4684      	mov	ip, r0
 8019aea:	e7a0      	b.n	8019a2e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 8019aec:	4607      	mov	r7, r0
 8019aee:	4684      	mov	ip, r0
 8019af0:	e7a7      	b.n	8019a42 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 8019af2:	4607      	mov	r7, r0
 8019af4:	e7a5      	b.n	8019a42 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 8019af6:	4602      	mov	r2, r0
 8019af8:	e7b2      	b.n	8019a60 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 8019afa:	4602      	mov	r2, r0
 8019afc:	e7ba      	b.n	8019a74 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

08019afe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019afe:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019b02:	b093      	sub	sp, #76	; 0x4c
 8019b04:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8019b08:	920f      	str	r2, [sp, #60]	; 0x3c
 8019b0a:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8019b0c:	9108      	str	r1, [sp, #32]
 8019b0e:	9306      	str	r3, [sp, #24]
 8019b10:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8019b14:	9010      	str	r0, [sp, #64]	; 0x40
 8019b16:	6850      	ldr	r0, [r2, #4]
 8019b18:	6812      	ldr	r2, [r2, #0]
 8019b1a:	fb00 1303 	mla	r3, r0, r3, r1
 8019b1e:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8019b22:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019b24:	681b      	ldr	r3, [r3, #0]
 8019b26:	9307      	str	r3, [sp, #28]
 8019b28:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019b2a:	685f      	ldr	r7, [r3, #4]
 8019b2c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8019b30:	3704      	adds	r7, #4
 8019b32:	9b08      	ldr	r3, [sp, #32]
 8019b34:	2b00      	cmp	r3, #0
 8019b36:	dc03      	bgt.n	8019b40 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8019b38:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8019b3a:	2b00      	cmp	r3, #0
 8019b3c:	f340 81b2 	ble.w	8019ea4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8019b40:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019b42:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019b46:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8019b4a:	1e48      	subs	r0, r1, #1
 8019b4c:	f102 3cff 	add.w	ip, r2, #4294967295
 8019b50:	9b06      	ldr	r3, [sp, #24]
 8019b52:	2b00      	cmp	r3, #0
 8019b54:	f340 80a9 	ble.w	8019caa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 8019b58:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8019b5c:	ea4f 4326 	mov.w	r3, r6, asr #16
 8019b60:	d406      	bmi.n	8019b70 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019b62:	4586      	cmp	lr, r0
 8019b64:	da04      	bge.n	8019b70 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019b66:	2b00      	cmp	r3, #0
 8019b68:	db02      	blt.n	8019b70 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019b6a:	4563      	cmp	r3, ip
 8019b6c:	f2c0 809e 	blt.w	8019cac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8019b70:	f11e 0e01 	adds.w	lr, lr, #1
 8019b74:	f100 808f 	bmi.w	8019c96 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8019b78:	4571      	cmp	r1, lr
 8019b7a:	f2c0 808c 	blt.w	8019c96 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8019b7e:	3301      	adds	r3, #1
 8019b80:	f100 8089 	bmi.w	8019c96 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8019b84:	429a      	cmp	r2, r3
 8019b86:	f2c0 8086 	blt.w	8019c96 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8019b8a:	f8dd b018 	ldr.w	fp, [sp, #24]
 8019b8e:	46c8      	mov	r8, r9
 8019b90:	f1bb 0f00 	cmp.w	fp, #0
 8019b94:	f340 80a6 	ble.w	8019ce4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8019b98:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8019b9a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019b9c:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8019ba0:	689b      	ldr	r3, [r3, #8]
 8019ba2:	1422      	asrs	r2, r4, #16
 8019ba4:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8019ba8:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8019bac:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8019bb0:	f100 80e3 	bmi.w	8019d7a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8019bb4:	f103 3aff 	add.w	sl, r3, #4294967295
 8019bb8:	4552      	cmp	r2, sl
 8019bba:	f280 80de 	bge.w	8019d7a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8019bbe:	f1bc 0f00 	cmp.w	ip, #0
 8019bc2:	f2c0 80da 	blt.w	8019d7a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8019bc6:	f10e 3aff 	add.w	sl, lr, #4294967295
 8019bca:	45d4      	cmp	ip, sl
 8019bcc:	f280 80d5 	bge.w	8019d7a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8019bd0:	b21b      	sxth	r3, r3
 8019bd2:	fb0c 2203 	mla	r2, ip, r3, r2
 8019bd6:	9d07      	ldr	r5, [sp, #28]
 8019bd8:	eb05 0a02 	add.w	sl, r5, r2
 8019bdc:	5caa      	ldrb	r2, [r5, r2]
 8019bde:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 8019be2:	2800      	cmp	r0, #0
 8019be4:	f000 80c0 	beq.w	8019d68 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 8019be8:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8019bec:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 8019bf0:	920b      	str	r2, [sp, #44]	; 0x2c
 8019bf2:	b151      	cbz	r1, 8019c0a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8019bf4:	eb0a 0203 	add.w	r2, sl, r3
 8019bf8:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8019bfc:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8019c00:	9309      	str	r3, [sp, #36]	; 0x24
 8019c02:	7853      	ldrb	r3, [r2, #1]
 8019c04:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8019c08:	930c      	str	r3, [sp, #48]	; 0x30
 8019c0a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8019c0c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8019c0e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8019c12:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8019c16:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8019c1a:	ea4c 0c03 	orr.w	ip, ip, r3
 8019c1e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8019c20:	041b      	lsls	r3, r3, #16
 8019c22:	fb10 f201 	smulbb	r2, r0, r1
 8019c26:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8019c2a:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8019c2e:	10d2      	asrs	r2, r2, #3
 8019c30:	432b      	orrs	r3, r5
 8019c32:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 8019c36:	4353      	muls	r3, r2
 8019c38:	fb0a 330c 	mla	r3, sl, ip, r3
 8019c3c:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8019c40:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8019c44:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8019c48:	ea4c 0e0e 	orr.w	lr, ip, lr
 8019c4c:	f1c1 0c10 	rsb	ip, r1, #16
 8019c50:	ebac 0c00 	sub.w	ip, ip, r0
 8019c54:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8019c58:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8019c5c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019c5e:	0418      	lsls	r0, r3, #16
 8019c60:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8019c64:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8019c68:	4318      	orrs	r0, r3
 8019c6a:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8019c6e:	fb02 c200 	mla	r2, r2, r0, ip
 8019c72:	0d53      	lsrs	r3, r2, #21
 8019c74:	0952      	lsrs	r2, r2, #5
 8019c76:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019c7a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8019c7e:	431a      	orrs	r2, r3
 8019c80:	f8a8 2000 	strh.w	r2, [r8]
 8019c84:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8019c86:	441c      	add	r4, r3
 8019c88:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8019c8a:	f108 0802 	add.w	r8, r8, #2
 8019c8e:	441e      	add	r6, r3
 8019c90:	f10b 3bff 	add.w	fp, fp, #4294967295
 8019c94:	e77c      	b.n	8019b90 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8019c96:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8019c98:	441c      	add	r4, r3
 8019c9a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8019c9c:	441e      	add	r6, r3
 8019c9e:	9b06      	ldr	r3, [sp, #24]
 8019ca0:	3b01      	subs	r3, #1
 8019ca2:	9306      	str	r3, [sp, #24]
 8019ca4:	f109 0902 	add.w	r9, r9, #2
 8019ca8:	e752      	b.n	8019b50 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8019caa:	d020      	beq.n	8019cee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8019cac:	9b06      	ldr	r3, [sp, #24]
 8019cae:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8019cb0:	3b01      	subs	r3, #1
 8019cb2:	fb00 4003 	mla	r0, r0, r3, r4
 8019cb6:	1400      	asrs	r0, r0, #16
 8019cb8:	f53f af67 	bmi.w	8019b8a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8019cbc:	3901      	subs	r1, #1
 8019cbe:	4288      	cmp	r0, r1
 8019cc0:	f6bf af63 	bge.w	8019b8a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8019cc4:	9920      	ldr	r1, [sp, #128]	; 0x80
 8019cc6:	fb01 6303 	mla	r3, r1, r3, r6
 8019cca:	141b      	asrs	r3, r3, #16
 8019ccc:	f53f af5d 	bmi.w	8019b8a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8019cd0:	3a01      	subs	r2, #1
 8019cd2:	4293      	cmp	r3, r2
 8019cd4:	f6bf af59 	bge.w	8019b8a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8019cd8:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8019cdc:	46ca      	mov	sl, r9
 8019cde:	f1b8 0f00 	cmp.w	r8, #0
 8019ce2:	dc67      	bgt.n	8019db4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8019ce4:	9b06      	ldr	r3, [sp, #24]
 8019ce6:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8019cea:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8019cee:	9b08      	ldr	r3, [sp, #32]
 8019cf0:	2b00      	cmp	r3, #0
 8019cf2:	f340 80d7 	ble.w	8019ea4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8019cf6:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019cfa:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019cfe:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019d02:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8019d04:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019d08:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019d0c:	eeb0 6a62 	vmov.f32	s12, s5
 8019d10:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019d14:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019d18:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019d1c:	ee16 4a10 	vmov	r4, s12
 8019d20:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019d24:	eeb0 6a43 	vmov.f32	s12, s6
 8019d28:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019d2c:	ee12 2a90 	vmov	r2, s5
 8019d30:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019d34:	fb92 f3f3 	sdiv	r3, r2, r3
 8019d38:	ee13 2a10 	vmov	r2, s6
 8019d3c:	931f      	str	r3, [sp, #124]	; 0x7c
 8019d3e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8019d40:	fb92 f3f3 	sdiv	r3, r2, r3
 8019d44:	9320      	str	r3, [sp, #128]	; 0x80
 8019d46:	9b08      	ldr	r3, [sp, #32]
 8019d48:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019d4a:	3b01      	subs	r3, #1
 8019d4c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019d50:	9308      	str	r3, [sp, #32]
 8019d52:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8019d54:	bf08      	it	eq
 8019d56:	4613      	moveq	r3, r2
 8019d58:	ee16 6a10 	vmov	r6, s12
 8019d5c:	9306      	str	r3, [sp, #24]
 8019d5e:	eeb0 3a67 	vmov.f32	s6, s15
 8019d62:	eef0 2a47 	vmov.f32	s5, s14
 8019d66:	e6e4      	b.n	8019b32 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8019d68:	2900      	cmp	r1, #0
 8019d6a:	f43f af4e 	beq.w	8019c0a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8019d6e:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8019d72:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8019d76:	9309      	str	r3, [sp, #36]	; 0x24
 8019d78:	e747      	b.n	8019c0a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8019d7a:	f112 0a01 	adds.w	sl, r2, #1
 8019d7e:	d481      	bmi.n	8019c84 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019d80:	4553      	cmp	r3, sl
 8019d82:	f6ff af7f 	blt.w	8019c84 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019d86:	f11c 0a01 	adds.w	sl, ip, #1
 8019d8a:	f53f af7b 	bmi.w	8019c84 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019d8e:	45d6      	cmp	lr, sl
 8019d90:	f6ff af78 	blt.w	8019c84 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019d94:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 8019d98:	b21b      	sxth	r3, r3
 8019d9a:	fa0f f28e 	sxth.w	r2, lr
 8019d9e:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8019da2:	9201      	str	r2, [sp, #4]
 8019da4:	9300      	str	r3, [sp, #0]
 8019da6:	9a07      	ldr	r2, [sp, #28]
 8019da8:	9810      	ldr	r0, [sp, #64]	; 0x40
 8019daa:	463b      	mov	r3, r7
 8019dac:	4641      	mov	r1, r8
 8019dae:	f7ff fe21 	bl	80199f4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8019db2:	e767      	b.n	8019c84 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019db4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019db6:	9d07      	ldr	r5, [sp, #28]
 8019db8:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8019dbc:	1422      	asrs	r2, r4, #16
 8019dbe:	1431      	asrs	r1, r6, #16
 8019dc0:	fb03 2101 	mla	r1, r3, r1, r2
 8019dc4:	9a07      	ldr	r2, [sp, #28]
 8019dc6:	440a      	add	r2, r1
 8019dc8:	5c69      	ldrb	r1, [r5, r1]
 8019dca:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 8019dce:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8019dd2:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 8019dd6:	f1be 0f00 	cmp.w	lr, #0
 8019dda:	d05c      	beq.n	8019e96 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 8019ddc:	f892 c001 	ldrb.w	ip, [r2, #1]
 8019de0:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 8019de4:	950d      	str	r5, [sp, #52]	; 0x34
 8019de6:	b150      	cbz	r0, 8019dfe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8019de8:	eb02 0c03 	add.w	ip, r2, r3
 8019dec:	5cd3      	ldrb	r3, [r2, r3]
 8019dee:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8019df2:	930a      	str	r3, [sp, #40]	; 0x28
 8019df4:	f89c 3001 	ldrb.w	r3, [ip, #1]
 8019df8:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8019dfc:	930e      	str	r3, [sp, #56]	; 0x38
 8019dfe:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019e00:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8019e02:	fb1e f200 	smulbb	r2, lr, r0
 8019e06:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8019e0a:	10d2      	asrs	r2, r2, #3
 8019e0c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8019e10:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8019e14:	ea4c 0c03 	orr.w	ip, ip, r3
 8019e18:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 8019e1c:	9311      	str	r3, [sp, #68]	; 0x44
 8019e1e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019e20:	041b      	lsls	r3, r3, #16
 8019e22:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 8019e26:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8019e2a:	ea43 030b 	orr.w	r3, r3, fp
 8019e2e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8019e30:	4353      	muls	r3, r2
 8019e32:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8019e36:	fb05 3c0c 	mla	ip, r5, ip, r3
 8019e3a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8019e3e:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8019e42:	ea43 0b01 	orr.w	fp, r3, r1
 8019e46:	f1c0 0110 	rsb	r1, r0, #16
 8019e4a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019e4c:	eba1 0e0e 	sub.w	lr, r1, lr
 8019e50:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 8019e54:	fb0e cc0b 	mla	ip, lr, fp, ip
 8019e58:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8019e5c:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 8019e60:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8019e64:	ea4b 0e0e 	orr.w	lr, fp, lr
 8019e68:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8019e6c:	fb02 cc0e 	mla	ip, r2, lr, ip
 8019e70:	ea4f 535c 	mov.w	r3, ip, lsr #21
 8019e74:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8019e78:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019e7c:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8019e80:	ea43 0c0c 	orr.w	ip, r3, ip
 8019e84:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8019e86:	f82a cb02 	strh.w	ip, [sl], #2
 8019e8a:	441c      	add	r4, r3
 8019e8c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8019e8e:	f108 38ff 	add.w	r8, r8, #4294967295
 8019e92:	441e      	add	r6, r3
 8019e94:	e723      	b.n	8019cde <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8019e96:	2800      	cmp	r0, #0
 8019e98:	d0b1      	beq.n	8019dfe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8019e9a:	5cd3      	ldrb	r3, [r2, r3]
 8019e9c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8019ea0:	930a      	str	r3, [sp, #40]	; 0x28
 8019ea2:	e7ac      	b.n	8019dfe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8019ea4:	b013      	add	sp, #76	; 0x4c
 8019ea6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019eaa <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 8019eaa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019eae:	880d      	ldrh	r5, [r1, #0]
 8019eb0:	b087      	sub	sp, #28
 8019eb2:	10ef      	asrs	r7, r5, #3
 8019eb4:	ea4f 2a25 	mov.w	sl, r5, asr #8
 8019eb8:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019ebc:	00ed      	lsls	r5, r5, #3
 8019ebe:	9701      	str	r7, [sp, #4]
 8019ec0:	b2ed      	uxtb	r5, r5
 8019ec2:	9502      	str	r5, [sp, #8]
 8019ec4:	9d01      	ldr	r5, [sp, #4]
 8019ec6:	9103      	str	r1, [sp, #12]
 8019ec8:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
 8019ecc:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	; 0x40
 8019ed0:	9902      	ldr	r1, [sp, #8]
 8019ed2:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 8019ed6:	f89d 4050 	ldrb.w	r4, [sp, #80]	; 0x50
 8019eda:	f89d e054 	ldrb.w	lr, [sp, #84]	; 0x54
 8019ede:	f89d 8058 	ldrb.w	r8, [sp, #88]	; 0x58
 8019ee2:	f00a 0af8 	and.w	sl, sl, #248	; 0xf8
 8019ee6:	022d      	lsls	r5, r5, #8
 8019ee8:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 8019eec:	fb06 0709 	mla	r7, r6, r9, r0
 8019ef0:	430d      	orrs	r5, r1
 8019ef2:	2e00      	cmp	r6, #0
 8019ef4:	eb02 0c07 	add.w	ip, r2, r7
 8019ef8:	9505      	str	r5, [sp, #20]
 8019efa:	f2c0 80b6 	blt.w	801a06a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 8019efe:	45b3      	cmp	fp, r6
 8019f00:	f340 80b3 	ble.w	801a06a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 8019f04:	2800      	cmp	r0, #0
 8019f06:	f2c0 80ae 	blt.w	801a066 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 8019f0a:	4581      	cmp	r9, r0
 8019f0c:	f340 80ab 	ble.w	801a066 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 8019f10:	5dd7      	ldrb	r7, [r2, r7]
 8019f12:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8019f16:	441f      	add	r7, r3
 8019f18:	1c42      	adds	r2, r0, #1
 8019f1a:	f100 80a9 	bmi.w	801a070 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8019f1e:	4591      	cmp	r9, r2
 8019f20:	f340 80a6 	ble.w	801a070 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8019f24:	2c00      	cmp	r4, #0
 8019f26:	f000 80a3 	beq.w	801a070 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8019f2a:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8019f2e:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8019f32:	441d      	add	r5, r3
 8019f34:	3601      	adds	r6, #1
 8019f36:	f100 809f 	bmi.w	801a078 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8019f3a:	45b3      	cmp	fp, r6
 8019f3c:	f340 809c 	ble.w	801a078 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8019f40:	f1be 0f00 	cmp.w	lr, #0
 8019f44:	f000 8098 	beq.w	801a078 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8019f48:	2800      	cmp	r0, #0
 8019f4a:	f2c0 8093 	blt.w	801a074 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 8019f4e:	4581      	cmp	r9, r0
 8019f50:	f340 8090 	ble.w	801a074 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 8019f54:	f81c 6009 	ldrb.w	r6, [ip, r9]
 8019f58:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8019f5c:	441e      	add	r6, r3
 8019f5e:	3001      	adds	r0, #1
 8019f60:	f100 808d 	bmi.w	801a07e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8019f64:	4581      	cmp	r9, r0
 8019f66:	f340 808a 	ble.w	801a07e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8019f6a:	2c00      	cmp	r4, #0
 8019f6c:	f000 8087 	beq.w	801a07e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8019f70:	44e1      	add	r9, ip
 8019f72:	f899 2001 	ldrb.w	r2, [r9, #1]
 8019f76:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8019f7a:	4413      	add	r3, r2
 8019f7c:	b2a4      	uxth	r4, r4
 8019f7e:	fa1f fe8e 	uxth.w	lr, lr
 8019f82:	fb04 fb0e 	mul.w	fp, r4, lr
 8019f86:	0124      	lsls	r4, r4, #4
 8019f88:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 8019f8c:	f5c4 7980 	rsb	r9, r4, #256	; 0x100
 8019f90:	eba4 040b 	sub.w	r4, r4, fp
 8019f94:	fa1f f08e 	uxth.w	r0, lr
 8019f98:	b2a2      	uxth	r2, r4
 8019f9a:	78ac      	ldrb	r4, [r5, #2]
 8019f9c:	f897 c002 	ldrb.w	ip, [r7, #2]
 8019fa0:	9901      	ldr	r1, [sp, #4]
 8019fa2:	eba9 0900 	sub.w	r9, r9, r0
 8019fa6:	fa1f f989 	uxth.w	r9, r9
 8019faa:	4354      	muls	r4, r2
 8019fac:	fb09 440c 	mla	r4, r9, ip, r4
 8019fb0:	f896 c002 	ldrb.w	ip, [r6, #2]
 8019fb4:	fb00 440c 	mla	r4, r0, ip, r4
 8019fb8:	f893 c002 	ldrb.w	ip, [r3, #2]
 8019fbc:	fa1f fe88 	uxth.w	lr, r8
 8019fc0:	ea6f 0808 	mvn.w	r8, r8
 8019fc4:	fa5f f888 	uxtb.w	r8, r8
 8019fc8:	fb0b 4c0c 	mla	ip, fp, ip, r4
 8019fcc:	fb1a fa08 	smulbb	sl, sl, r8
 8019fd0:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8019fd4:	fb0c ac0e 	mla	ip, ip, lr, sl
 8019fd8:	f895 a001 	ldrb.w	sl, [r5, #1]
 8019fdc:	787c      	ldrb	r4, [r7, #1]
 8019fde:	782d      	ldrb	r5, [r5, #0]
 8019fe0:	783f      	ldrb	r7, [r7, #0]
 8019fe2:	fb02 fa0a 	mul.w	sl, r2, sl
 8019fe6:	fb09 aa04 	mla	sl, r9, r4, sl
 8019fea:	7874      	ldrb	r4, [r6, #1]
 8019fec:	436a      	muls	r2, r5
 8019fee:	7835      	ldrb	r5, [r6, #0]
 8019ff0:	fb00 aa04 	mla	sl, r0, r4, sl
 8019ff4:	fb09 2207 	mla	r2, r9, r7, r2
 8019ff8:	785c      	ldrb	r4, [r3, #1]
 8019ffa:	781b      	ldrb	r3, [r3, #0]
 8019ffc:	fb00 2005 	mla	r0, r0, r5, r2
 801a000:	fb0b a404 	mla	r4, fp, r4, sl
 801a004:	fb0b 0b03 	mla	fp, fp, r3, r0
 801a008:	9b02      	ldr	r3, [sp, #8]
 801a00a:	fb11 fa08 	smulbb	sl, r1, r8
 801a00e:	fa1f fc8c 	uxth.w	ip, ip
 801a012:	fb13 f808 	smulbb	r8, r3, r8
 801a016:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 801a01a:	f3c4 2407 	ubfx	r4, r4, #8, #8
 801a01e:	fb04 a40e 	mla	r4, r4, lr, sl
 801a022:	f10c 0301 	add.w	r3, ip, #1
 801a026:	fb0b 8e0e 	mla	lr, fp, lr, r8
 801a02a:	fa1f fe8e 	uxth.w	lr, lr
 801a02e:	b2a4      	uxth	r4, r4
 801a030:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801a034:	f40c 4378 	and.w	r3, ip, #63488	; 0xf800
 801a038:	f104 0a01 	add.w	sl, r4, #1
 801a03c:	f10e 0c01 	add.w	ip, lr, #1
 801a040:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801a044:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801a048:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801a04c:	0964      	lsrs	r4, r4, #5
 801a04e:	ea4c 0c03 	orr.w	ip, ip, r3
 801a052:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801a056:	9b03      	ldr	r3, [sp, #12]
 801a058:	ea4c 0c04 	orr.w	ip, ip, r4
 801a05c:	f8a3 c000 	strh.w	ip, [r3]
 801a060:	b007      	add	sp, #28
 801a062:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a066:	af05      	add	r7, sp, #20
 801a068:	e756      	b.n	8019f18 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 801a06a:	ad05      	add	r5, sp, #20
 801a06c:	462f      	mov	r7, r5
 801a06e:	e761      	b.n	8019f34 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801a070:	ad05      	add	r5, sp, #20
 801a072:	e75f      	b.n	8019f34 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801a074:	ae05      	add	r6, sp, #20
 801a076:	e772      	b.n	8019f5e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 801a078:	ab05      	add	r3, sp, #20
 801a07a:	461e      	mov	r6, r3
 801a07c:	e77e      	b.n	8019f7c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 801a07e:	ab05      	add	r3, sp, #20
 801a080:	e77c      	b.n	8019f7c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

0801a082 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a082:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a086:	b095      	sub	sp, #84	; 0x54
 801a088:	9212      	str	r2, [sp, #72]	; 0x48
 801a08a:	9309      	str	r3, [sp, #36]	; 0x24
 801a08c:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 801a08e:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 801a092:	930f      	str	r3, [sp, #60]	; 0x3c
 801a094:	910e      	str	r1, [sp, #56]	; 0x38
 801a096:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	; 0x90
 801a09a:	9013      	str	r0, [sp, #76]	; 0x4c
 801a09c:	6850      	ldr	r0, [r2, #4]
 801a09e:	6812      	ldr	r2, [r2, #0]
 801a0a0:	fb00 1303 	mla	r3, r0, r3, r1
 801a0a4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801a0a8:	930a      	str	r3, [sp, #40]	; 0x28
 801a0aa:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801a0ac:	681b      	ldr	r3, [r3, #0]
 801a0ae:	930d      	str	r3, [sp, #52]	; 0x34
 801a0b0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801a0b2:	685c      	ldr	r4, [r3, #4]
 801a0b4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801a0b6:	43db      	mvns	r3, r3
 801a0b8:	b2db      	uxtb	r3, r3
 801a0ba:	3404      	adds	r4, #4
 801a0bc:	930b      	str	r3, [sp, #44]	; 0x2c
 801a0be:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a0c0:	2b00      	cmp	r3, #0
 801a0c2:	dc03      	bgt.n	801a0cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801a0c4:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801a0c6:	2b00      	cmp	r3, #0
 801a0c8:	f340 8255 	ble.w	801a576 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801a0cc:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801a0ce:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a0d2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801a0d6:	1e48      	subs	r0, r1, #1
 801a0d8:	1e55      	subs	r5, r2, #1
 801a0da:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a0dc:	2b00      	cmp	r3, #0
 801a0de:	f340 80f9 	ble.w	801a2d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801a0e2:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 801a0e4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a0e6:	1436      	asrs	r6, r6, #16
 801a0e8:	ea4f 4323 	mov.w	r3, r3, asr #16
 801a0ec:	d406      	bmi.n	801a0fc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801a0ee:	4286      	cmp	r6, r0
 801a0f0:	da04      	bge.n	801a0fc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801a0f2:	2b00      	cmp	r3, #0
 801a0f4:	db02      	blt.n	801a0fc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801a0f6:	42ab      	cmp	r3, r5
 801a0f8:	f2c0 80ed 	blt.w	801a2d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 801a0fc:	3601      	adds	r6, #1
 801a0fe:	f100 80da 	bmi.w	801a2b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801a102:	42b1      	cmp	r1, r6
 801a104:	f2c0 80d7 	blt.w	801a2b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801a108:	3301      	adds	r3, #1
 801a10a:	f100 80d4 	bmi.w	801a2b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801a10e:	429a      	cmp	r2, r3
 801a110:	f2c0 80d1 	blt.w	801a2b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801a114:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a116:	9311      	str	r3, [sp, #68]	; 0x44
 801a118:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a11a:	930c      	str	r3, [sp, #48]	; 0x30
 801a11c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801a11e:	2b00      	cmp	r3, #0
 801a120:	f340 80fa 	ble.w	801a318 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 801a124:	9826      	ldr	r0, [sp, #152]	; 0x98
 801a126:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a128:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801a12a:	68c6      	ldr	r6, [r0, #12]
 801a12c:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801a12e:	141d      	asrs	r5, r3, #16
 801a130:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801a134:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801a136:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801a138:	1400      	asrs	r0, r0, #16
 801a13a:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801a13e:	6892      	ldr	r2, [r2, #8]
 801a140:	f100 813e 	bmi.w	801a3c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801a144:	1e57      	subs	r7, r2, #1
 801a146:	42b8      	cmp	r0, r7
 801a148:	f280 813a 	bge.w	801a3c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801a14c:	2d00      	cmp	r5, #0
 801a14e:	f2c0 8137 	blt.w	801a3c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801a152:	1e77      	subs	r7, r6, #1
 801a154:	42bd      	cmp	r5, r7
 801a156:	f280 8133 	bge.w	801a3c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801a15a:	b212      	sxth	r2, r2
 801a15c:	fb05 0002 	mla	r0, r5, r2, r0
 801a160:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801a162:	f815 a000 	ldrb.w	sl, [r5, r0]
 801a166:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 801a16a:	182e      	adds	r6, r5, r0
 801a16c:	eb04 050a 	add.w	r5, r4, sl
 801a170:	2b00      	cmp	r3, #0
 801a172:	f000 8117 	beq.w	801a3a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 801a176:	f896 c001 	ldrb.w	ip, [r6, #1]
 801a17a:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801a17e:	44a4      	add	ip, r4
 801a180:	2900      	cmp	r1, #0
 801a182:	f000 8117 	beq.w	801a3b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 801a186:	18b0      	adds	r0, r6, r2
 801a188:	5cb2      	ldrb	r2, [r6, r2]
 801a18a:	7840      	ldrb	r0, [r0, #1]
 801a18c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a190:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801a194:	4422      	add	r2, r4
 801a196:	4420      	add	r0, r4
 801a198:	b29b      	uxth	r3, r3
 801a19a:	b289      	uxth	r1, r1
 801a19c:	fb03 f901 	mul.w	r9, r3, r1
 801a1a0:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801a1a4:	011b      	lsls	r3, r3, #4
 801a1a6:	b289      	uxth	r1, r1
 801a1a8:	f89c 7002 	ldrb.w	r7, [ip, #2]
 801a1ac:	f895 b002 	ldrb.w	fp, [r5, #2]
 801a1b0:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801a1b2:	f814 a00a 	ldrb.w	sl, [r4, sl]
 801a1b6:	f8b6 e000 	ldrh.w	lr, [r6]
 801a1ba:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 801a1be:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 801a1c2:	eba3 0309 	sub.w	r3, r3, r9
 801a1c6:	b29b      	uxth	r3, r3
 801a1c8:	eba8 0801 	sub.w	r8, r8, r1
 801a1cc:	fa1f f888 	uxth.w	r8, r8
 801a1d0:	435f      	muls	r7, r3
 801a1d2:	fb08 770b 	mla	r7, r8, fp, r7
 801a1d6:	f892 b002 	ldrb.w	fp, [r2, #2]
 801a1da:	9310      	str	r3, [sp, #64]	; 0x40
 801a1dc:	fb01 770b 	mla	r7, r1, fp, r7
 801a1e0:	f890 b002 	ldrb.w	fp, [r0, #2]
 801a1e4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a1e6:	fb09 770b 	mla	r7, r9, fp, r7
 801a1ea:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 801a1ee:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801a1f2:	fb1b fb03 	smulbb	fp, fp, r3
 801a1f6:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801a1fa:	fb07 b706 	mla	r7, r7, r6, fp
 801a1fe:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a200:	f895 b001 	ldrb.w	fp, [r5, #1]
 801a204:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801a208:	f89c c000 	ldrb.w	ip, [ip]
 801a20c:	435d      	muls	r5, r3
 801a20e:	fb08 550b 	mla	r5, r8, fp, r5
 801a212:	f892 b001 	ldrb.w	fp, [r2, #1]
 801a216:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a218:	fb01 550b 	mla	r5, r1, fp, r5
 801a21c:	f890 b001 	ldrb.w	fp, [r0, #1]
 801a220:	fb09 550b 	mla	r5, r9, fp, r5
 801a224:	ea4f 0bee 	mov.w	fp, lr, asr #3
 801a228:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801a22c:	fb1b fb03 	smulbb	fp, fp, r3
 801a230:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a232:	fb03 f30c 	mul.w	r3, r3, ip
 801a236:	f892 c000 	ldrb.w	ip, [r2]
 801a23a:	fb08 330a 	mla	r3, r8, sl, r3
 801a23e:	fb01 330c 	mla	r3, r1, ip, r3
 801a242:	f890 c000 	ldrb.w	ip, [r0]
 801a246:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801a24a:	fb09 3c0c 	mla	ip, r9, ip, r3
 801a24e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a250:	fa5f fe8e 	uxtb.w	lr, lr
 801a254:	b2bf      	uxth	r7, r7
 801a256:	fb1e fe03 	smulbb	lr, lr, r3
 801a25a:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801a25e:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801a262:	fb05 b506 	mla	r5, r5, r6, fp
 801a266:	1c7b      	adds	r3, r7, #1
 801a268:	fb0c e606 	mla	r6, ip, r6, lr
 801a26c:	b2ad      	uxth	r5, r5
 801a26e:	b2b6      	uxth	r6, r6
 801a270:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801a274:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 801a278:	f105 0b01 	add.w	fp, r5, #1
 801a27c:	1c77      	adds	r7, r6, #1
 801a27e:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 801a282:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801a286:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801a28a:	096d      	lsrs	r5, r5, #5
 801a28c:	431f      	orrs	r7, r3
 801a28e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801a292:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801a294:	433d      	orrs	r5, r7
 801a296:	801d      	strh	r5, [r3, #0]
 801a298:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801a29a:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801a29c:	3302      	adds	r3, #2
 801a29e:	930c      	str	r3, [sp, #48]	; 0x30
 801a2a0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801a2a2:	4413      	add	r3, r2
 801a2a4:	931f      	str	r3, [sp, #124]	; 0x7c
 801a2a6:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801a2a8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a2aa:	4413      	add	r3, r2
 801a2ac:	9320      	str	r3, [sp, #128]	; 0x80
 801a2ae:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801a2b0:	3b01      	subs	r3, #1
 801a2b2:	9311      	str	r3, [sp, #68]	; 0x44
 801a2b4:	e732      	b.n	801a11c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801a2b6:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801a2b8:	9e21      	ldr	r6, [sp, #132]	; 0x84
 801a2ba:	4433      	add	r3, r6
 801a2bc:	931f      	str	r3, [sp, #124]	; 0x7c
 801a2be:	9e22      	ldr	r6, [sp, #136]	; 0x88
 801a2c0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a2c2:	4433      	add	r3, r6
 801a2c4:	9320      	str	r3, [sp, #128]	; 0x80
 801a2c6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a2c8:	3b01      	subs	r3, #1
 801a2ca:	9309      	str	r3, [sp, #36]	; 0x24
 801a2cc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a2ce:	3302      	adds	r3, #2
 801a2d0:	930a      	str	r3, [sp, #40]	; 0x28
 801a2d2:	e702      	b.n	801a0da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801a2d4:	d027      	beq.n	801a326 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 801a2d6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a2d8:	9821      	ldr	r0, [sp, #132]	; 0x84
 801a2da:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 801a2dc:	3b01      	subs	r3, #1
 801a2de:	fb00 5003 	mla	r0, r0, r3, r5
 801a2e2:	1400      	asrs	r0, r0, #16
 801a2e4:	f53f af16 	bmi.w	801a114 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a2e8:	3901      	subs	r1, #1
 801a2ea:	4288      	cmp	r0, r1
 801a2ec:	f6bf af12 	bge.w	801a114 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a2f0:	9922      	ldr	r1, [sp, #136]	; 0x88
 801a2f2:	9820      	ldr	r0, [sp, #128]	; 0x80
 801a2f4:	fb01 0303 	mla	r3, r1, r3, r0
 801a2f8:	141b      	asrs	r3, r3, #16
 801a2fa:	f53f af0b 	bmi.w	801a114 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a2fe:	3a01      	subs	r2, #1
 801a300:	4293      	cmp	r3, r2
 801a302:	f6bf af07 	bge.w	801a114 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a306:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a308:	9311      	str	r3, [sp, #68]	; 0x44
 801a30a:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 801a30e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a310:	930c      	str	r3, [sp, #48]	; 0x30
 801a312:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801a314:	2b00      	cmp	r3, #0
 801a316:	dc70      	bgt.n	801a3fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801a318:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a31a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801a31c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a320:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801a324:	930a      	str	r3, [sp, #40]	; 0x28
 801a326:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a328:	2b00      	cmp	r3, #0
 801a32a:	f340 8124 	ble.w	801a576 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801a32e:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a332:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801a336:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801a33a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801a33c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a340:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a344:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a348:	eef0 6a62 	vmov.f32	s13, s5
 801a34c:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a350:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a354:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a358:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 801a35c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a360:	eef0 6a43 	vmov.f32	s13, s6
 801a364:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a368:	ee12 2a90 	vmov	r2, s5
 801a36c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a370:	fb92 f3f3 	sdiv	r3, r2, r3
 801a374:	ee13 2a10 	vmov	r2, s6
 801a378:	9321      	str	r3, [sp, #132]	; 0x84
 801a37a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801a37c:	fb92 f3f3 	sdiv	r3, r2, r3
 801a380:	9322      	str	r3, [sp, #136]	; 0x88
 801a382:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a384:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801a386:	3b01      	subs	r3, #1
 801a388:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a38c:	930e      	str	r3, [sp, #56]	; 0x38
 801a38e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801a390:	edcd 6a20 	vstr	s13, [sp, #128]	; 0x80
 801a394:	bf08      	it	eq
 801a396:	4613      	moveq	r3, r2
 801a398:	9309      	str	r3, [sp, #36]	; 0x24
 801a39a:	eeb0 3a67 	vmov.f32	s6, s15
 801a39e:	eef0 2a47 	vmov.f32	s5, s14
 801a3a2:	e68c      	b.n	801a0be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801a3a4:	b149      	cbz	r1, 801a3ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 801a3a6:	5cb2      	ldrb	r2, [r6, r2]
 801a3a8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a3ac:	4422      	add	r2, r4
 801a3ae:	4628      	mov	r0, r5
 801a3b0:	46ac      	mov	ip, r5
 801a3b2:	e6f1      	b.n	801a198 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801a3b4:	4628      	mov	r0, r5
 801a3b6:	462a      	mov	r2, r5
 801a3b8:	e6ee      	b.n	801a198 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801a3ba:	4628      	mov	r0, r5
 801a3bc:	462a      	mov	r2, r5
 801a3be:	e7f7      	b.n	801a3b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 801a3c0:	1c47      	adds	r7, r0, #1
 801a3c2:	f53f af69 	bmi.w	801a298 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801a3c6:	42ba      	cmp	r2, r7
 801a3c8:	f6ff af66 	blt.w	801a298 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801a3cc:	1c6f      	adds	r7, r5, #1
 801a3ce:	f53f af63 	bmi.w	801a298 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801a3d2:	42be      	cmp	r6, r7
 801a3d4:	f6ff af60 	blt.w	801a298 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801a3d8:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801a3da:	9002      	str	r0, [sp, #8]
 801a3dc:	b236      	sxth	r6, r6
 801a3de:	b212      	sxth	r2, r2
 801a3e0:	e9cd 1705 	strd	r1, r7, [sp, #20]
 801a3e4:	e9cd 5303 	strd	r5, r3, [sp, #12]
 801a3e8:	9200      	str	r2, [sp, #0]
 801a3ea:	9601      	str	r6, [sp, #4]
 801a3ec:	4623      	mov	r3, r4
 801a3ee:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 801a3f2:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801a3f4:	f7ff fd59 	bl	8019eaa <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 801a3f8:	e74e      	b.n	801a298 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801a3fa:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801a3fc:	9820      	ldr	r0, [sp, #128]	; 0x80
 801a3fe:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 801a400:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801a402:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801a406:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801a408:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801a40c:	142d      	asrs	r5, r5, #16
 801a40e:	1400      	asrs	r0, r0, #16
 801a410:	fb02 5000 	mla	r0, r2, r0, r5
 801a414:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801a416:	f815 9000 	ldrb.w	r9, [r5, r0]
 801a41a:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801a41e:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 801a422:	182e      	adds	r6, r5, r0
 801a424:	eb04 0509 	add.w	r5, r4, r9
 801a428:	2b00      	cmp	r3, #0
 801a42a:	f000 8096 	beq.w	801a55a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801a42e:	7877      	ldrb	r7, [r6, #1]
 801a430:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801a434:	4427      	add	r7, r4
 801a436:	2900      	cmp	r1, #0
 801a438:	f000 8097 	beq.w	801a56a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 801a43c:	18b0      	adds	r0, r6, r2
 801a43e:	5cb2      	ldrb	r2, [r6, r2]
 801a440:	7840      	ldrb	r0, [r0, #1]
 801a442:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a446:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801a44a:	4422      	add	r2, r4
 801a44c:	4420      	add	r0, r4
 801a44e:	b29b      	uxth	r3, r3
 801a450:	b289      	uxth	r1, r1
 801a452:	fb03 f801 	mul.w	r8, r3, r1
 801a456:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801a458:	f895 b002 	ldrb.w	fp, [r5, #2]
 801a45c:	f8b6 c000 	ldrh.w	ip, [r6]
 801a460:	78be      	ldrb	r6, [r7, #2]
 801a462:	f814 9009 	ldrb.w	r9, [r4, r9]
 801a466:	011b      	lsls	r3, r3, #4
 801a468:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 801a46c:	b289      	uxth	r1, r1
 801a46e:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801a472:	eba3 0308 	sub.w	r3, r3, r8
 801a476:	b29b      	uxth	r3, r3
 801a478:	ebae 0e01 	sub.w	lr, lr, r1
 801a47c:	fa1f fe8e 	uxth.w	lr, lr
 801a480:	435e      	muls	r6, r3
 801a482:	fb0e 660b 	mla	r6, lr, fp, r6
 801a486:	f892 b002 	ldrb.w	fp, [r2, #2]
 801a48a:	9310      	str	r3, [sp, #64]	; 0x40
 801a48c:	fb01 660b 	mla	r6, r1, fp, r6
 801a490:	f890 b002 	ldrb.w	fp, [r0, #2]
 801a494:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a496:	fb08 660b 	mla	r6, r8, fp, r6
 801a49a:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 801a49e:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801a4a2:	fb1b fb03 	smulbb	fp, fp, r3
 801a4a6:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801a4aa:	fb06 b60a 	mla	r6, r6, sl, fp
 801a4ae:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a4b0:	f895 b001 	ldrb.w	fp, [r5, #1]
 801a4b4:	787d      	ldrb	r5, [r7, #1]
 801a4b6:	783f      	ldrb	r7, [r7, #0]
 801a4b8:	435d      	muls	r5, r3
 801a4ba:	fb0e 550b 	mla	r5, lr, fp, r5
 801a4be:	f892 b001 	ldrb.w	fp, [r2, #1]
 801a4c2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a4c4:	fb01 550b 	mla	r5, r1, fp, r5
 801a4c8:	f890 b001 	ldrb.w	fp, [r0, #1]
 801a4cc:	fb08 550b 	mla	r5, r8, fp, r5
 801a4d0:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801a4d4:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801a4d8:	fb1b fb03 	smulbb	fp, fp, r3
 801a4dc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a4de:	437b      	muls	r3, r7
 801a4e0:	7817      	ldrb	r7, [r2, #0]
 801a4e2:	fb0e 3309 	mla	r3, lr, r9, r3
 801a4e6:	fb01 3307 	mla	r3, r1, r7, r3
 801a4ea:	7807      	ldrb	r7, [r0, #0]
 801a4ec:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801a4f0:	fb08 3707 	mla	r7, r8, r7, r3
 801a4f4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a4f6:	fa5f fc8c 	uxtb.w	ip, ip
 801a4fa:	fb1c fc03 	smulbb	ip, ip, r3
 801a4fe:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801a502:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801a506:	fb05 b50a 	mla	r5, r5, sl, fp
 801a50a:	fb07 c70a 	mla	r7, r7, sl, ip
 801a50e:	b2b6      	uxth	r6, r6
 801a510:	b2ad      	uxth	r5, r5
 801a512:	b2bf      	uxth	r7, r7
 801a514:	1c73      	adds	r3, r6, #1
 801a516:	1c7a      	adds	r2, r7, #1
 801a518:	f105 0b01 	add.w	fp, r5, #1
 801a51c:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801a520:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801a524:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801a528:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801a52c:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801a530:	096d      	lsrs	r5, r5, #5
 801a532:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801a534:	4316      	orrs	r6, r2
 801a536:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801a53a:	432e      	orrs	r6, r5
 801a53c:	f823 6b02 	strh.w	r6, [r3], #2
 801a540:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801a542:	930c      	str	r3, [sp, #48]	; 0x30
 801a544:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801a546:	4413      	add	r3, r2
 801a548:	931f      	str	r3, [sp, #124]	; 0x7c
 801a54a:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801a54c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a54e:	4413      	add	r3, r2
 801a550:	9320      	str	r3, [sp, #128]	; 0x80
 801a552:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801a554:	3b01      	subs	r3, #1
 801a556:	9311      	str	r3, [sp, #68]	; 0x44
 801a558:	e6db      	b.n	801a312 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 801a55a:	b149      	cbz	r1, 801a570 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801a55c:	5cb2      	ldrb	r2, [r6, r2]
 801a55e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a562:	4422      	add	r2, r4
 801a564:	4628      	mov	r0, r5
 801a566:	462f      	mov	r7, r5
 801a568:	e771      	b.n	801a44e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801a56a:	4628      	mov	r0, r5
 801a56c:	462a      	mov	r2, r5
 801a56e:	e76e      	b.n	801a44e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801a570:	4628      	mov	r0, r5
 801a572:	462a      	mov	r2, r5
 801a574:	e7f7      	b.n	801a566 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801a576:	b015      	add	sp, #84	; 0x54
 801a578:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a57c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 801a57c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a580:	880f      	ldrh	r7, [r1, #0]
 801a582:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 801a586:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 801a58a:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 801a58e:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 801a592:	023c      	lsls	r4, r7, #8
 801a594:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	; 0x38
 801a598:	f404 0b78 	and.w	fp, r4, #16252928	; 0xf80000
 801a59c:	017c      	lsls	r4, r7, #5
 801a59e:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
 801a5a2:	00ff      	lsls	r7, r7, #3
 801a5a4:	ea4b 0404 	orr.w	r4, fp, r4
 801a5a8:	b2ff      	uxtb	r7, r7
 801a5aa:	fb05 ca0e 	mla	sl, r5, lr, ip
 801a5ae:	4327      	orrs	r7, r4
 801a5b0:	2d00      	cmp	r5, #0
 801a5b2:	eb02 080a 	add.w	r8, r2, sl
 801a5b6:	9701      	str	r7, [sp, #4]
 801a5b8:	db7e      	blt.n	801a6b8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801a5ba:	45a9      	cmp	r9, r5
 801a5bc:	dd7c      	ble.n	801a6b8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801a5be:	f1bc 0f00 	cmp.w	ip, #0
 801a5c2:	db77      	blt.n	801a6b4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801a5c4:	45e6      	cmp	lr, ip
 801a5c6:	dd75      	ble.n	801a6b4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801a5c8:	f812 700a 	ldrb.w	r7, [r2, sl]
 801a5cc:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801a5d0:	441f      	add	r7, r3
 801a5d2:	f11c 0201 	adds.w	r2, ip, #1
 801a5d6:	d472      	bmi.n	801a6be <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801a5d8:	4596      	cmp	lr, r2
 801a5da:	dd70      	ble.n	801a6be <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801a5dc:	2800      	cmp	r0, #0
 801a5de:	d06e      	beq.n	801a6be <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801a5e0:	f898 4001 	ldrb.w	r4, [r8, #1]
 801a5e4:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801a5e8:	441c      	add	r4, r3
 801a5ea:	3501      	adds	r5, #1
 801a5ec:	d46b      	bmi.n	801a6c6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801a5ee:	45a9      	cmp	r9, r5
 801a5f0:	dd69      	ble.n	801a6c6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801a5f2:	2e00      	cmp	r6, #0
 801a5f4:	d067      	beq.n	801a6c6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801a5f6:	f1bc 0f00 	cmp.w	ip, #0
 801a5fa:	db62      	blt.n	801a6c2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801a5fc:	45e6      	cmp	lr, ip
 801a5fe:	dd60      	ble.n	801a6c2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801a600:	f818 500e 	ldrb.w	r5, [r8, lr]
 801a604:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801a608:	441d      	add	r5, r3
 801a60a:	f11c 0201 	adds.w	r2, ip, #1
 801a60e:	d45d      	bmi.n	801a6cc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801a610:	4596      	cmp	lr, r2
 801a612:	dd5b      	ble.n	801a6cc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801a614:	2800      	cmp	r0, #0
 801a616:	d059      	beq.n	801a6cc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801a618:	44c6      	add	lr, r8
 801a61a:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801a61e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a622:	4413      	add	r3, r2
 801a624:	b280      	uxth	r0, r0
 801a626:	b2b2      	uxth	r2, r6
 801a628:	fb00 f602 	mul.w	r6, r0, r2
 801a62c:	0100      	lsls	r0, r0, #4
 801a62e:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 801a632:	f5c0 7880 	rsb	r8, r0, #256	; 0x100
 801a636:	1b80      	subs	r0, r0, r6
 801a638:	fa1f fc82 	uxth.w	ip, r2
 801a63c:	b282      	uxth	r2, r0
 801a63e:	78a0      	ldrb	r0, [r4, #2]
 801a640:	f897 e002 	ldrb.w	lr, [r7, #2]
 801a644:	f897 9000 	ldrb.w	r9, [r7]
 801a648:	787f      	ldrb	r7, [r7, #1]
 801a64a:	eba8 080c 	sub.w	r8, r8, ip
 801a64e:	fa1f f888 	uxth.w	r8, r8
 801a652:	4350      	muls	r0, r2
 801a654:	fb08 0e0e 	mla	lr, r8, lr, r0
 801a658:	78a8      	ldrb	r0, [r5, #2]
 801a65a:	fb0c e000 	mla	r0, ip, r0, lr
 801a65e:	f893 e002 	ldrb.w	lr, [r3, #2]
 801a662:	fb06 0e0e 	mla	lr, r6, lr, r0
 801a666:	f40e 4078 	and.w	r0, lr, #63488	; 0xf800
 801a66a:	f894 e000 	ldrb.w	lr, [r4]
 801a66e:	fb02 fe0e 	mul.w	lr, r2, lr
 801a672:	fb08 e909 	mla	r9, r8, r9, lr
 801a676:	f895 e000 	ldrb.w	lr, [r5]
 801a67a:	fb0c 990e 	mla	r9, ip, lr, r9
 801a67e:	f893 e000 	ldrb.w	lr, [r3]
 801a682:	785b      	ldrb	r3, [r3, #1]
 801a684:	fb06 9e0e 	mla	lr, r6, lr, r9
 801a688:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801a68c:	ea4e 0e00 	orr.w	lr, lr, r0
 801a690:	7860      	ldrb	r0, [r4, #1]
 801a692:	4350      	muls	r0, r2
 801a694:	786a      	ldrb	r2, [r5, #1]
 801a696:	fb08 0007 	mla	r0, r8, r7, r0
 801a69a:	fb0c 0202 	mla	r2, ip, r2, r0
 801a69e:	fb06 2303 	mla	r3, r6, r3, r2
 801a6a2:	095b      	lsrs	r3, r3, #5
 801a6a4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801a6a8:	ea4e 0303 	orr.w	r3, lr, r3
 801a6ac:	800b      	strh	r3, [r1, #0]
 801a6ae:	b003      	add	sp, #12
 801a6b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a6b4:	af01      	add	r7, sp, #4
 801a6b6:	e78c      	b.n	801a5d2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 801a6b8:	ac01      	add	r4, sp, #4
 801a6ba:	4627      	mov	r7, r4
 801a6bc:	e795      	b.n	801a5ea <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801a6be:	ac01      	add	r4, sp, #4
 801a6c0:	e793      	b.n	801a5ea <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801a6c2:	ad01      	add	r5, sp, #4
 801a6c4:	e7a1      	b.n	801a60a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 801a6c6:	ab01      	add	r3, sp, #4
 801a6c8:	461d      	mov	r5, r3
 801a6ca:	e7ab      	b.n	801a624 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 801a6cc:	ab01      	add	r3, sp, #4
 801a6ce:	e7a9      	b.n	801a624 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

0801a6d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a6d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a6d4:	b08f      	sub	sp, #60	; 0x3c
 801a6d6:	e9dd b519 	ldrd	fp, r5, [sp, #100]	; 0x64
 801a6da:	920c      	str	r2, [sp, #48]	; 0x30
 801a6dc:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 801a6de:	910a      	str	r1, [sp, #40]	; 0x28
 801a6e0:	9306      	str	r3, [sp, #24]
 801a6e2:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	; 0x78
 801a6e6:	900d      	str	r0, [sp, #52]	; 0x34
 801a6e8:	6850      	ldr	r0, [r2, #4]
 801a6ea:	6812      	ldr	r2, [r2, #0]
 801a6ec:	fb00 1303 	mla	r3, r0, r3, r1
 801a6f0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801a6f4:	9307      	str	r3, [sp, #28]
 801a6f6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a6f8:	681b      	ldr	r3, [r3, #0]
 801a6fa:	9308      	str	r3, [sp, #32]
 801a6fc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a6fe:	685c      	ldr	r4, [r3, #4]
 801a700:	3404      	adds	r4, #4
 801a702:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a704:	2b00      	cmp	r3, #0
 801a706:	dc03      	bgt.n	801a710 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801a708:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801a70a:	2b00      	cmp	r3, #0
 801a70c:	f340 81d6 	ble.w	801aabc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801a710:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a712:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a716:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801a71a:	1e48      	subs	r0, r1, #1
 801a71c:	1e56      	subs	r6, r2, #1
 801a71e:	9b06      	ldr	r3, [sp, #24]
 801a720:	2b00      	cmp	r3, #0
 801a722:	f340 80b7 	ble.w	801a894 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 801a726:	ea5f 472b 	movs.w	r7, fp, asr #16
 801a72a:	ea4f 4325 	mov.w	r3, r5, asr #16
 801a72e:	d406      	bmi.n	801a73e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a730:	4287      	cmp	r7, r0
 801a732:	da04      	bge.n	801a73e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a734:	2b00      	cmp	r3, #0
 801a736:	db02      	blt.n	801a73e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a738:	42b3      	cmp	r3, r6
 801a73a:	f2c0 80ac 	blt.w	801a896 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801a73e:	3701      	adds	r7, #1
 801a740:	f100 809d 	bmi.w	801a87e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801a744:	42b9      	cmp	r1, r7
 801a746:	f2c0 809a 	blt.w	801a87e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801a74a:	3301      	adds	r3, #1
 801a74c:	f100 8097 	bmi.w	801a87e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801a750:	429a      	cmp	r2, r3
 801a752:	f2c0 8094 	blt.w	801a87e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801a756:	9b06      	ldr	r3, [sp, #24]
 801a758:	930b      	str	r3, [sp, #44]	; 0x2c
 801a75a:	9b07      	ldr	r3, [sp, #28]
 801a75c:	9309      	str	r3, [sp, #36]	; 0x24
 801a75e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a760:	2b00      	cmp	r3, #0
 801a762:	f340 80b5 	ble.w	801a8d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801a766:	9820      	ldr	r0, [sp, #128]	; 0x80
 801a768:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801a76a:	68c7      	ldr	r7, [r0, #12]
 801a76c:	6892      	ldr	r2, [r2, #8]
 801a76e:	ea5f 402b 	movs.w	r0, fp, asr #16
 801a772:	ea4f 4625 	mov.w	r6, r5, asr #16
 801a776:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801a77a:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801a77e:	f100 80fb 	bmi.w	801a978 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801a782:	f102 3cff 	add.w	ip, r2, #4294967295
 801a786:	4560      	cmp	r0, ip
 801a788:	f280 80f6 	bge.w	801a978 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801a78c:	2e00      	cmp	r6, #0
 801a78e:	f2c0 80f3 	blt.w	801a978 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801a792:	f107 3cff 	add.w	ip, r7, #4294967295
 801a796:	4566      	cmp	r6, ip
 801a798:	f280 80ee 	bge.w	801a978 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801a79c:	b212      	sxth	r2, r2
 801a79e:	fb06 0002 	mla	r0, r6, r2, r0
 801a7a2:	9e08      	ldr	r6, [sp, #32]
 801a7a4:	1837      	adds	r7, r6, r0
 801a7a6:	5c30      	ldrb	r0, [r6, r0]
 801a7a8:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 801a7ac:	eb04 0c08 	add.w	ip, r4, r8
 801a7b0:	2b00      	cmp	r3, #0
 801a7b2:	f000 80d3 	beq.w	801a95c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801a7b6:	787e      	ldrb	r6, [r7, #1]
 801a7b8:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801a7bc:	4426      	add	r6, r4
 801a7be:	2900      	cmp	r1, #0
 801a7c0:	f000 80d4 	beq.w	801a96c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 801a7c4:	18b8      	adds	r0, r7, r2
 801a7c6:	5cba      	ldrb	r2, [r7, r2]
 801a7c8:	7840      	ldrb	r0, [r0, #1]
 801a7ca:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a7ce:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801a7d2:	4422      	add	r2, r4
 801a7d4:	4420      	add	r0, r4
 801a7d6:	b29b      	uxth	r3, r3
 801a7d8:	b289      	uxth	r1, r1
 801a7da:	fb03 f901 	mul.w	r9, r3, r1
 801a7de:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801a7e2:	011b      	lsls	r3, r3, #4
 801a7e4:	b289      	uxth	r1, r1
 801a7e6:	78b7      	ldrb	r7, [r6, #2]
 801a7e8:	f89c a002 	ldrb.w	sl, [ip, #2]
 801a7ec:	f89c c001 	ldrb.w	ip, [ip, #1]
 801a7f0:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801a7f4:	eba3 0309 	sub.w	r3, r3, r9
 801a7f8:	b29b      	uxth	r3, r3
 801a7fa:	ebae 0e01 	sub.w	lr, lr, r1
 801a7fe:	fa1f fe8e 	uxth.w	lr, lr
 801a802:	435f      	muls	r7, r3
 801a804:	fb0e 770a 	mla	r7, lr, sl, r7
 801a808:	f892 a002 	ldrb.w	sl, [r2, #2]
 801a80c:	fb01 770a 	mla	r7, r1, sl, r7
 801a810:	f890 a002 	ldrb.w	sl, [r0, #2]
 801a814:	fb09 7a0a 	mla	sl, r9, sl, r7
 801a818:	f814 7008 	ldrb.w	r7, [r4, r8]
 801a81c:	f896 8000 	ldrb.w	r8, [r6]
 801a820:	7876      	ldrb	r6, [r6, #1]
 801a822:	fb03 f808 	mul.w	r8, r3, r8
 801a826:	fb0e 8807 	mla	r8, lr, r7, r8
 801a82a:	7817      	ldrb	r7, [r2, #0]
 801a82c:	fb01 8807 	mla	r8, r1, r7, r8
 801a830:	7807      	ldrb	r7, [r0, #0]
 801a832:	fb09 8707 	mla	r7, r9, r7, r8
 801a836:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 801a83a:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801a83e:	ea47 070a 	orr.w	r7, r7, sl
 801a842:	4373      	muls	r3, r6
 801a844:	f892 a001 	ldrb.w	sl, [r2, #1]
 801a848:	fb0e 330c 	mla	r3, lr, ip, r3
 801a84c:	fb01 310a 	mla	r1, r1, sl, r3
 801a850:	f890 a001 	ldrb.w	sl, [r0, #1]
 801a854:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a856:	fb09 1a0a 	mla	sl, r9, sl, r1
 801a85a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a85e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a862:	ea47 070a 	orr.w	r7, r7, sl
 801a866:	801f      	strh	r7, [r3, #0]
 801a868:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a86a:	3302      	adds	r3, #2
 801a86c:	9309      	str	r3, [sp, #36]	; 0x24
 801a86e:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801a870:	449b      	add	fp, r3
 801a872:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801a874:	441d      	add	r5, r3
 801a876:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a878:	3b01      	subs	r3, #1
 801a87a:	930b      	str	r3, [sp, #44]	; 0x2c
 801a87c:	e76f      	b.n	801a75e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801a87e:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801a880:	449b      	add	fp, r3
 801a882:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801a884:	441d      	add	r5, r3
 801a886:	9b06      	ldr	r3, [sp, #24]
 801a888:	3b01      	subs	r3, #1
 801a88a:	9306      	str	r3, [sp, #24]
 801a88c:	9b07      	ldr	r3, [sp, #28]
 801a88e:	3302      	adds	r3, #2
 801a890:	9307      	str	r3, [sp, #28]
 801a892:	e744      	b.n	801a71e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 801a894:	d023      	beq.n	801a8de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 801a896:	9b06      	ldr	r3, [sp, #24]
 801a898:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801a89a:	3b01      	subs	r3, #1
 801a89c:	fb00 b003 	mla	r0, r0, r3, fp
 801a8a0:	1400      	asrs	r0, r0, #16
 801a8a2:	f53f af58 	bmi.w	801a756 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801a8a6:	3901      	subs	r1, #1
 801a8a8:	4288      	cmp	r0, r1
 801a8aa:	f6bf af54 	bge.w	801a756 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801a8ae:	991c      	ldr	r1, [sp, #112]	; 0x70
 801a8b0:	fb01 5303 	mla	r3, r1, r3, r5
 801a8b4:	141b      	asrs	r3, r3, #16
 801a8b6:	f53f af4e 	bmi.w	801a756 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801a8ba:	3a01      	subs	r2, #1
 801a8bc:	4293      	cmp	r3, r2
 801a8be:	f6bf af4a 	bge.w	801a756 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801a8c2:	9b06      	ldr	r3, [sp, #24]
 801a8c4:	9309      	str	r3, [sp, #36]	; 0x24
 801a8c6:	9b07      	ldr	r3, [sp, #28]
 801a8c8:	930b      	str	r3, [sp, #44]	; 0x2c
 801a8ca:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a8cc:	2b00      	cmp	r3, #0
 801a8ce:	dc70      	bgt.n	801a9b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 801a8d0:	9b06      	ldr	r3, [sp, #24]
 801a8d2:	9a07      	ldr	r2, [sp, #28]
 801a8d4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a8d8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801a8dc:	9307      	str	r3, [sp, #28]
 801a8de:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a8e0:	2b00      	cmp	r3, #0
 801a8e2:	f340 80eb 	ble.w	801aabc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801a8e6:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a8ea:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801a8ee:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801a8f2:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801a8f4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a8f8:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a8fc:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a900:	eef0 6a62 	vmov.f32	s13, s5
 801a904:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a908:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a90c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a910:	ee16 ba90 	vmov	fp, s13
 801a914:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a918:	eef0 6a43 	vmov.f32	s13, s6
 801a91c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a920:	ee12 2a90 	vmov	r2, s5
 801a924:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a928:	fb92 f3f3 	sdiv	r3, r2, r3
 801a92c:	ee13 2a10 	vmov	r2, s6
 801a930:	931b      	str	r3, [sp, #108]	; 0x6c
 801a932:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801a934:	fb92 f3f3 	sdiv	r3, r2, r3
 801a938:	931c      	str	r3, [sp, #112]	; 0x70
 801a93a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a93c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801a93e:	3b01      	subs	r3, #1
 801a940:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a944:	930a      	str	r3, [sp, #40]	; 0x28
 801a946:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801a948:	bf08      	it	eq
 801a94a:	4613      	moveq	r3, r2
 801a94c:	ee16 5a90 	vmov	r5, s13
 801a950:	9306      	str	r3, [sp, #24]
 801a952:	eeb0 3a67 	vmov.f32	s6, s15
 801a956:	eef0 2a47 	vmov.f32	s5, s14
 801a95a:	e6d2      	b.n	801a702 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801a95c:	b149      	cbz	r1, 801a972 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801a95e:	5cba      	ldrb	r2, [r7, r2]
 801a960:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a964:	4422      	add	r2, r4
 801a966:	4660      	mov	r0, ip
 801a968:	4666      	mov	r6, ip
 801a96a:	e734      	b.n	801a7d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801a96c:	4660      	mov	r0, ip
 801a96e:	4662      	mov	r2, ip
 801a970:	e731      	b.n	801a7d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801a972:	4660      	mov	r0, ip
 801a974:	4662      	mov	r2, ip
 801a976:	e7f7      	b.n	801a968 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 801a978:	f110 0c01 	adds.w	ip, r0, #1
 801a97c:	f53f af74 	bmi.w	801a868 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a980:	4562      	cmp	r2, ip
 801a982:	f6ff af71 	blt.w	801a868 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a986:	f116 0c01 	adds.w	ip, r6, #1
 801a98a:	f53f af6d 	bmi.w	801a868 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a98e:	4567      	cmp	r7, ip
 801a990:	f6ff af6a 	blt.w	801a868 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a994:	b23f      	sxth	r7, r7
 801a996:	b212      	sxth	r2, r2
 801a998:	e9cd 3104 	strd	r3, r1, [sp, #16]
 801a99c:	e9cd 0602 	strd	r0, r6, [sp, #8]
 801a9a0:	9200      	str	r2, [sp, #0]
 801a9a2:	9701      	str	r7, [sp, #4]
 801a9a4:	4623      	mov	r3, r4
 801a9a6:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801a9aa:	980d      	ldr	r0, [sp, #52]	; 0x34
 801a9ac:	f7ff fde6 	bl	801a57c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 801a9b0:	e75a      	b.n	801a868 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a9b2:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801a9b4:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801a9b8:	ea4f 462b 	mov.w	r6, fp, asr #16
 801a9bc:	1428      	asrs	r0, r5, #16
 801a9be:	fb02 6000 	mla	r0, r2, r0, r6
 801a9c2:	9e08      	ldr	r6, [sp, #32]
 801a9c4:	f816 8000 	ldrb.w	r8, [r6, r0]
 801a9c8:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801a9cc:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801a9d0:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801a9d4:	1837      	adds	r7, r6, r0
 801a9d6:	eb04 0c08 	add.w	ip, r4, r8
 801a9da:	2b00      	cmp	r3, #0
 801a9dc:	d060      	beq.n	801aaa0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 801a9de:	787e      	ldrb	r6, [r7, #1]
 801a9e0:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801a9e4:	4426      	add	r6, r4
 801a9e6:	2900      	cmp	r1, #0
 801a9e8:	d062      	beq.n	801aab0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 801a9ea:	18b8      	adds	r0, r7, r2
 801a9ec:	5cba      	ldrb	r2, [r7, r2]
 801a9ee:	7840      	ldrb	r0, [r0, #1]
 801a9f0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a9f4:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801a9f8:	4422      	add	r2, r4
 801a9fa:	4420      	add	r0, r4
 801a9fc:	b29b      	uxth	r3, r3
 801a9fe:	b289      	uxth	r1, r1
 801aa00:	fb03 f901 	mul.w	r9, r3, r1
 801aa04:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801aa08:	011b      	lsls	r3, r3, #4
 801aa0a:	b289      	uxth	r1, r1
 801aa0c:	78b7      	ldrb	r7, [r6, #2]
 801aa0e:	f89c a002 	ldrb.w	sl, [ip, #2]
 801aa12:	f89c c001 	ldrb.w	ip, [ip, #1]
 801aa16:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801aa1a:	eba3 0309 	sub.w	r3, r3, r9
 801aa1e:	b29b      	uxth	r3, r3
 801aa20:	ebae 0e01 	sub.w	lr, lr, r1
 801aa24:	fa1f fe8e 	uxth.w	lr, lr
 801aa28:	435f      	muls	r7, r3
 801aa2a:	fb0e 770a 	mla	r7, lr, sl, r7
 801aa2e:	f892 a002 	ldrb.w	sl, [r2, #2]
 801aa32:	fb01 770a 	mla	r7, r1, sl, r7
 801aa36:	f890 a002 	ldrb.w	sl, [r0, #2]
 801aa3a:	fb09 7a0a 	mla	sl, r9, sl, r7
 801aa3e:	f814 7008 	ldrb.w	r7, [r4, r8]
 801aa42:	f896 8000 	ldrb.w	r8, [r6]
 801aa46:	7876      	ldrb	r6, [r6, #1]
 801aa48:	fb03 f808 	mul.w	r8, r3, r8
 801aa4c:	fb0e 8807 	mla	r8, lr, r7, r8
 801aa50:	7817      	ldrb	r7, [r2, #0]
 801aa52:	fb01 8807 	mla	r8, r1, r7, r8
 801aa56:	7807      	ldrb	r7, [r0, #0]
 801aa58:	fb09 8707 	mla	r7, r9, r7, r8
 801aa5c:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 801aa60:	4373      	muls	r3, r6
 801aa62:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801aa66:	7856      	ldrb	r6, [r2, #1]
 801aa68:	ea47 070a 	orr.w	r7, r7, sl
 801aa6c:	fb0e 330c 	mla	r3, lr, ip, r3
 801aa70:	f890 a001 	ldrb.w	sl, [r0, #1]
 801aa74:	fb01 3306 	mla	r3, r1, r6, r3
 801aa78:	fb09 3a0a 	mla	sl, r9, sl, r3
 801aa7c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801aa80:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801aa82:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801aa86:	ea47 070a 	orr.w	r7, r7, sl
 801aa8a:	f823 7b02 	strh.w	r7, [r3], #2
 801aa8e:	930b      	str	r3, [sp, #44]	; 0x2c
 801aa90:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801aa92:	449b      	add	fp, r3
 801aa94:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801aa96:	441d      	add	r5, r3
 801aa98:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801aa9a:	3b01      	subs	r3, #1
 801aa9c:	9309      	str	r3, [sp, #36]	; 0x24
 801aa9e:	e714      	b.n	801a8ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801aaa0:	b149      	cbz	r1, 801aab6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801aaa2:	5cba      	ldrb	r2, [r7, r2]
 801aaa4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801aaa8:	4422      	add	r2, r4
 801aaaa:	4660      	mov	r0, ip
 801aaac:	4666      	mov	r6, ip
 801aaae:	e7a5      	b.n	801a9fc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801aab0:	4660      	mov	r0, ip
 801aab2:	4662      	mov	r2, ip
 801aab4:	e7a2      	b.n	801a9fc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801aab6:	4660      	mov	r0, ip
 801aab8:	4662      	mov	r2, ip
 801aaba:	e7f7      	b.n	801aaac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 801aabc:	b00f      	add	sp, #60	; 0x3c
 801aabe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801aac2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 801aac2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801aac6:	b085      	sub	sp, #20
 801aac8:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	; 0x40
 801aacc:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 801aad0:	9102      	str	r1, [sp, #8]
 801aad2:	2c00      	cmp	r4, #0
 801aad4:	fb04 710c 	mla	r1, r4, ip, r7
 801aad8:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 801aadc:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
 801aae0:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 801aae4:	eb02 0e01 	add.w	lr, r2, r1
 801aae8:	f2c0 8122 	blt.w	801ad30 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801aaec:	45a0      	cmp	r8, r4
 801aaee:	f340 811f 	ble.w	801ad30 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801aaf2:	2f00      	cmp	r7, #0
 801aaf4:	f2c0 811a 	blt.w	801ad2c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801aaf8:	45bc      	cmp	ip, r7
 801aafa:	f340 8117 	ble.w	801ad2c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801aafe:	5c52      	ldrb	r2, [r2, r1]
 801ab00:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 801ab04:	1c7a      	adds	r2, r7, #1
 801ab06:	f100 8116 	bmi.w	801ad36 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801ab0a:	4594      	cmp	ip, r2
 801ab0c:	f340 8113 	ble.w	801ad36 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801ab10:	2e00      	cmp	r6, #0
 801ab12:	f000 8112 	beq.w	801ad3a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 801ab16:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801ab1a:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801ab1e:	3401      	adds	r4, #1
 801ab20:	f100 810f 	bmi.w	801ad42 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801ab24:	45a0      	cmp	r8, r4
 801ab26:	f340 810c 	ble.w	801ad42 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801ab2a:	2800      	cmp	r0, #0
 801ab2c:	f000 810c 	beq.w	801ad48 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 801ab30:	2f00      	cmp	r7, #0
 801ab32:	f2c0 8104 	blt.w	801ad3e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801ab36:	45bc      	cmp	ip, r7
 801ab38:	f340 8101 	ble.w	801ad3e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801ab3c:	f81e 200c 	ldrb.w	r2, [lr, ip]
 801ab40:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 801ab44:	3701      	adds	r7, #1
 801ab46:	f100 8102 	bmi.w	801ad4e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801ab4a:	45bc      	cmp	ip, r7
 801ab4c:	f340 80ff 	ble.w	801ad4e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801ab50:	2e00      	cmp	r6, #0
 801ab52:	f000 80fe 	beq.w	801ad52 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 801ab56:	44f4      	add	ip, lr
 801ab58:	f89c 2001 	ldrb.w	r2, [ip, #1]
 801ab5c:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 801ab60:	b2b6      	uxth	r6, r6
 801ab62:	b280      	uxth	r0, r0
 801ab64:	fb00 fe06 	mul.w	lr, r0, r6
 801ab68:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801ab6c:	0136      	lsls	r6, r6, #4
 801ab6e:	eba6 070e 	sub.w	r7, r6, lr
 801ab72:	b280      	uxth	r0, r0
 801ab74:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 801ab78:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801ab7c:	b2bf      	uxth	r7, r7
 801ab7e:	1a1b      	subs	r3, r3, r0
 801ab80:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801ab84:	b29b      	uxth	r3, r3
 801ab86:	fb0a f607 	mul.w	r6, sl, r7
 801ab8a:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801ab8e:	fb0b 6603 	mla	r6, fp, r3, r6
 801ab92:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801ab96:	fb00 6609 	mla	r6, r0, r9, r6
 801ab9a:	fb0e 6608 	mla	r6, lr, r8, r6
 801ab9e:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801aba2:	9600      	str	r6, [sp, #0]
 801aba4:	2e00      	cmp	r6, #0
 801aba6:	f000 80be 	beq.w	801ad26 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 801abaa:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801abae:	fb0b fc0c 	mul.w	ip, fp, ip
 801abb2:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801abb6:	fb0b f505 	mul.w	r5, fp, r5
 801abba:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801abbe:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 801abc2:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801abc6:	44dc      	add	ip, fp
 801abc8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801abcc:	9501      	str	r5, [sp, #4]
 801abce:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 801abd2:	9503      	str	r5, [sp, #12]
 801abd4:	9d01      	ldr	r5, [sp, #4]
 801abd6:	9e02      	ldr	r6, [sp, #8]
 801abd8:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 801abdc:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801abe0:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 801abe4:	fb0a fc0c 	mul.w	ip, sl, ip
 801abe8:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801abec:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801abf0:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801abf4:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801abf8:	4465      	add	r5, ip
 801abfa:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801abfe:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801ac02:	fb09 fc0c 	mul.w	ip, r9, ip
 801ac06:	fb09 f904 	mul.w	r9, r9, r4
 801ac0a:	f509 7480 	add.w	r4, r9, #256	; 0x100
 801ac0e:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801ac12:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 801ac16:	fb08 f404 	mul.w	r4, r8, r4
 801ac1a:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801ac1e:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801ac22:	fb08 f802 	mul.w	r8, r8, r2
 801ac26:	fb0a fa01 	mul.w	sl, sl, r1
 801ac2a:	0a22      	lsrs	r2, r4, #8
 801ac2c:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 801ac30:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801ac34:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 801ac38:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801ac3c:	4414      	add	r4, r2
 801ac3e:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801ac42:	f508 7280 	add.w	r2, r8, #256	; 0x100
 801ac46:	0a2d      	lsrs	r5, r5, #8
 801ac48:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801ac4c:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801ac50:	9a03      	ldr	r2, [sp, #12]
 801ac52:	8836      	ldrh	r6, [r6, #0]
 801ac54:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801ac58:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801ac5c:	437d      	muls	r5, r7
 801ac5e:	4461      	add	r1, ip
 801ac60:	0a24      	lsrs	r4, r4, #8
 801ac62:	fb02 5503 	mla	r5, r2, r3, r5
 801ac66:	0a09      	lsrs	r1, r1, #8
 801ac68:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801ac6c:	fb04 540e 	mla	r4, r4, lr, r5
 801ac70:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801ac74:	fb01 4100 	mla	r1, r1, r0, r4
 801ac78:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ac7c:	0a09      	lsrs	r1, r1, #8
 801ac7e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ac82:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 801ac86:	fb07 f70a 	mul.w	r7, r7, sl
 801ac8a:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801ac8e:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 801ac92:	fb03 7101 	mla	r1, r3, r1, r7
 801ac96:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801ac9a:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801ac9e:	fb0e 1e08 	mla	lr, lr, r8, r1
 801aca2:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 801aca6:	fb00 e101 	mla	r1, r0, r1, lr
 801acaa:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 801acae:	9a00      	ldr	r2, [sp, #0]
 801acb0:	b287      	uxth	r7, r0
 801acb2:	437a      	muls	r2, r7
 801acb4:	0a09      	lsrs	r1, r1, #8
 801acb6:	1c53      	adds	r3, r2, #1
 801acb8:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801acbc:	4321      	orrs	r1, r4
 801acbe:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801acc2:	1235      	asrs	r5, r6, #8
 801acc4:	0c0a      	lsrs	r2, r1, #16
 801acc6:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801acca:	b2db      	uxtb	r3, r3
 801accc:	fb12 f207 	smulbb	r2, r2, r7
 801acd0:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801acd4:	fb05 2503 	mla	r5, r5, r3, r2
 801acd8:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801acdc:	10f2      	asrs	r2, r6, #3
 801acde:	b2c8      	uxtb	r0, r1
 801ace0:	00f6      	lsls	r6, r6, #3
 801ace2:	fb14 f407 	smulbb	r4, r4, r7
 801ace6:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801acea:	b2f6      	uxtb	r6, r6
 801acec:	fb10 f007 	smulbb	r0, r0, r7
 801acf0:	fb02 4203 	mla	r2, r2, r3, r4
 801acf4:	b2ad      	uxth	r5, r5
 801acf6:	fb06 0303 	mla	r3, r6, r3, r0
 801acfa:	b299      	uxth	r1, r3
 801acfc:	b294      	uxth	r4, r2
 801acfe:	1c6b      	adds	r3, r5, #1
 801ad00:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801ad04:	1c62      	adds	r2, r4, #1
 801ad06:	1c4b      	adds	r3, r1, #1
 801ad08:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801ad0c:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801ad10:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801ad14:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801ad18:	0952      	lsrs	r2, r2, #5
 801ad1a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ad1e:	432b      	orrs	r3, r5
 801ad20:	4313      	orrs	r3, r2
 801ad22:	9a02      	ldr	r2, [sp, #8]
 801ad24:	8013      	strh	r3, [r2, #0]
 801ad26:	b005      	add	sp, #20
 801ad28:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ad2c:	2500      	movs	r5, #0
 801ad2e:	e6e9      	b.n	801ab04 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 801ad30:	2100      	movs	r1, #0
 801ad32:	460d      	mov	r5, r1
 801ad34:	e6f3      	b.n	801ab1e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801ad36:	2100      	movs	r1, #0
 801ad38:	e6f1      	b.n	801ab1e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801ad3a:	4631      	mov	r1, r6
 801ad3c:	e6ef      	b.n	801ab1e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801ad3e:	2400      	movs	r4, #0
 801ad40:	e700      	b.n	801ab44 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 801ad42:	2200      	movs	r2, #0
 801ad44:	4614      	mov	r4, r2
 801ad46:	e70b      	b.n	801ab60 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801ad48:	4602      	mov	r2, r0
 801ad4a:	4604      	mov	r4, r0
 801ad4c:	e708      	b.n	801ab60 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801ad4e:	2200      	movs	r2, #0
 801ad50:	e706      	b.n	801ab60 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801ad52:	4632      	mov	r2, r6
 801ad54:	e704      	b.n	801ab60 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

0801ad56 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ad56:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ad5a:	b09f      	sub	sp, #124	; 0x7c
 801ad5c:	921b      	str	r2, [sp, #108]	; 0x6c
 801ad5e:	9309      	str	r3, [sp, #36]	; 0x24
 801ad60:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801ad62:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 801ad66:	931c      	str	r3, [sp, #112]	; 0x70
 801ad68:	9119      	str	r1, [sp, #100]	; 0x64
 801ad6a:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 801ad6e:	901d      	str	r0, [sp, #116]	; 0x74
 801ad70:	6850      	ldr	r0, [r2, #4]
 801ad72:	6812      	ldr	r2, [r2, #0]
 801ad74:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 801ad76:	fb00 1303 	mla	r3, r0, r3, r1
 801ad7a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801ad7e:	930c      	str	r3, [sp, #48]	; 0x30
 801ad80:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801ad82:	681b      	ldr	r3, [r3, #0]
 801ad84:	9312      	str	r3, [sp, #72]	; 0x48
 801ad86:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801ad88:	685e      	ldr	r6, [r3, #4]
 801ad8a:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 801ad8e:	930d      	str	r3, [sp, #52]	; 0x34
 801ad90:	3604      	adds	r6, #4
 801ad92:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801ad94:	2b00      	cmp	r3, #0
 801ad96:	dc03      	bgt.n	801ada0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801ad98:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801ad9a:	2b00      	cmp	r3, #0
 801ad9c:	f340 8388 	ble.w	801b4b0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 801ada0:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801ada2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ada6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801adaa:	1e48      	subs	r0, r1, #1
 801adac:	1e57      	subs	r7, r2, #1
 801adae:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801adb0:	2b00      	cmp	r3, #0
 801adb2:	f340 8195 	ble.w	801b0e0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801adb6:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801adb8:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801adbc:	ea4f 4325 	mov.w	r3, r5, asr #16
 801adc0:	d406      	bmi.n	801add0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801adc2:	4584      	cmp	ip, r0
 801adc4:	da04      	bge.n	801add0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801adc6:	2b00      	cmp	r3, #0
 801adc8:	db02      	blt.n	801add0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801adca:	42bb      	cmp	r3, r7
 801adcc:	f2c0 8189 	blt.w	801b0e2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 801add0:	f11c 0c01 	adds.w	ip, ip, #1
 801add4:	f100 8177 	bmi.w	801b0c6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801add8:	4561      	cmp	r1, ip
 801adda:	f2c0 8174 	blt.w	801b0c6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801adde:	3301      	adds	r3, #1
 801ade0:	f100 8171 	bmi.w	801b0c6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801ade4:	429a      	cmp	r2, r3
 801ade6:	f2c0 816e 	blt.w	801b0c6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801adea:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801adec:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801adee:	931a      	str	r3, [sp, #104]	; 0x68
 801adf0:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 801adf2:	2b00      	cmp	r3, #0
 801adf4:	f340 8193 	ble.w	801b11e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 801adf8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801adfa:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801adfe:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801ae00:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 801ae04:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801ae06:	141b      	asrs	r3, r3, #16
 801ae08:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801ae0c:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801ae10:	f100 81d6 	bmi.w	801b1c0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801ae14:	f100 38ff 	add.w	r8, r0, #4294967295
 801ae18:	4543      	cmp	r3, r8
 801ae1a:	f280 81d1 	bge.w	801b1c0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801ae1e:	f1bc 0f00 	cmp.w	ip, #0
 801ae22:	f2c0 81cd 	blt.w	801b1c0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801ae26:	f10e 38ff 	add.w	r8, lr, #4294967295
 801ae2a:	45c4      	cmp	ip, r8
 801ae2c:	f280 81c8 	bge.w	801b1c0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801ae30:	b200      	sxth	r0, r0
 801ae32:	fb0c 3300 	mla	r3, ip, r0, r3
 801ae36:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801ae38:	eb04 0803 	add.w	r8, r4, r3
 801ae3c:	5ce3      	ldrb	r3, [r4, r3]
 801ae3e:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801ae42:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801ae46:	2a00      	cmp	r2, #0
 801ae48:	f000 81af 	beq.w	801b1aa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801ae4c:	f898 c001 	ldrb.w	ip, [r8, #1]
 801ae50:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801ae54:	940e      	str	r4, [sp, #56]	; 0x38
 801ae56:	0e24      	lsrs	r4, r4, #24
 801ae58:	9415      	str	r4, [sp, #84]	; 0x54
 801ae5a:	b179      	cbz	r1, 801ae7c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801ae5c:	eb08 0c00 	add.w	ip, r8, r0
 801ae60:	f818 0000 	ldrb.w	r0, [r8, r0]
 801ae64:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801ae68:	900a      	str	r0, [sp, #40]	; 0x28
 801ae6a:	0e00      	lsrs	r0, r0, #24
 801ae6c:	9013      	str	r0, [sp, #76]	; 0x4c
 801ae6e:	f89c 0001 	ldrb.w	r0, [ip, #1]
 801ae72:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801ae76:	900f      	str	r0, [sp, #60]	; 0x3c
 801ae78:	0e00      	lsrs	r0, r0, #24
 801ae7a:	9016      	str	r0, [sp, #88]	; 0x58
 801ae7c:	b292      	uxth	r2, r2
 801ae7e:	b289      	uxth	r1, r1
 801ae80:	fb02 f901 	mul.w	r9, r2, r1
 801ae84:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801ae88:	0112      	lsls	r2, r2, #4
 801ae8a:	eba2 0809 	sub.w	r8, r2, r9
 801ae8e:	b289      	uxth	r1, r1
 801ae90:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801ae94:	9815      	ldr	r0, [sp, #84]	; 0x54
 801ae96:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801ae98:	fa1f f888 	uxth.w	r8, r8
 801ae9c:	1a52      	subs	r2, r2, r1
 801ae9e:	b292      	uxth	r2, r2
 801aea0:	fb08 f000 	mul.w	r0, r8, r0
 801aea4:	fb02 000e 	mla	r0, r2, lr, r0
 801aea8:	fb01 0004 	mla	r0, r1, r4, r0
 801aeac:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801aeae:	fb09 0004 	mla	r0, r9, r4, r0
 801aeb2:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801aeb6:	2800      	cmp	r0, #0
 801aeb8:	f000 80fa 	beq.w	801b0b0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801aebc:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801aec0:	d01b      	beq.n	801aefa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801aec2:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801aec6:	fb0e fa0a 	mul.w	sl, lr, sl
 801aeca:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801aece:	fb0e fe03 	mul.w	lr, lr, r3
 801aed2:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801aed6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801aeda:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801aede:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801aee2:	4453      	add	r3, sl
 801aee4:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801aee8:	0a1b      	lsrs	r3, r3, #8
 801aeea:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801aeee:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801aef2:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801aef6:	ea43 030c 	orr.w	r3, r3, ip
 801aefa:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801aefc:	2cff      	cmp	r4, #255	; 0xff
 801aefe:	d021      	beq.n	801af44 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801af00:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801af02:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801af06:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801af08:	fb04 fb0b 	mul.w	fp, r4, fp
 801af0c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801af0e:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801af12:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801af14:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801af18:	fb04 fa0a 	mul.w	sl, r4, sl
 801af1c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801af20:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801af24:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801af28:	44de      	add	lr, fp
 801af2a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801af2e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801af32:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801af36:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801af3a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801af3e:	ea4e 040a 	orr.w	r4, lr, sl
 801af42:	940e      	str	r4, [sp, #56]	; 0x38
 801af44:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801af46:	2cff      	cmp	r4, #255	; 0xff
 801af48:	d021      	beq.n	801af8e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 801af4a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801af4c:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801af50:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801af52:	fb04 fb0b 	mul.w	fp, r4, fp
 801af56:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801af58:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801af5c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801af5e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801af62:	fb04 fa0a 	mul.w	sl, r4, sl
 801af66:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801af6a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801af6e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801af72:	44de      	add	lr, fp
 801af74:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801af78:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801af7c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801af80:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801af84:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801af88:	ea4e 040a 	orr.w	r4, lr, sl
 801af8c:	940a      	str	r4, [sp, #40]	; 0x28
 801af8e:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801af90:	2cff      	cmp	r4, #255	; 0xff
 801af92:	d021      	beq.n	801afd8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 801af94:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801af96:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801af9a:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801af9c:	fb04 fb0b 	mul.w	fp, r4, fp
 801afa0:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801afa2:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801afa6:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801afa8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801afac:	fb04 fa0a 	mul.w	sl, r4, sl
 801afb0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801afb4:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801afb8:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801afbc:	44de      	add	lr, fp
 801afbe:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801afc2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801afc6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801afca:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801afce:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801afd2:	ea4e 040a 	orr.w	r4, lr, sl
 801afd6:	940f      	str	r4, [sp, #60]	; 0x3c
 801afd8:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801afda:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801afde:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801afe0:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 801afe4:	fb08 fc0c 	mul.w	ip, r8, ip
 801afe8:	fb02 cc0e 	mla	ip, r2, lr, ip
 801afec:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801aff0:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801aff2:	fb01 cc0e 	mla	ip, r1, lr, ip
 801aff6:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801affa:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801affc:	fb09 cc0e 	mla	ip, r9, lr, ip
 801b000:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 801b004:	fb08 f80e 	mul.w	r8, r8, lr
 801b008:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b00c:	fb02 8303 	mla	r3, r2, r3, r8
 801b010:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801b012:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801b014:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801b018:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801b01a:	fb01 330a 	mla	r3, r1, sl, r3
 801b01e:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 801b022:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801b024:	fb09 3901 	mla	r9, r9, r1, r3
 801b028:	4342      	muls	r2, r0
 801b02a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b02e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801b032:	883b      	ldrh	r3, [r7, #0]
 801b034:	1c50      	adds	r0, r2, #1
 801b036:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b03a:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801b03e:	ea4c 0c09 	orr.w	ip, ip, r9
 801b042:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801b046:	1219      	asrs	r1, r3, #8
 801b048:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801b04c:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801b050:	b2c0      	uxtb	r0, r0
 801b052:	fb12 f204 	smulbb	r2, r2, r4
 801b056:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801b05a:	fb01 2100 	mla	r1, r1, r0, r2
 801b05e:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801b062:	10da      	asrs	r2, r3, #3
 801b064:	fa5f fc8c 	uxtb.w	ip, ip
 801b068:	00db      	lsls	r3, r3, #3
 801b06a:	fb1c fc04 	smulbb	ip, ip, r4
 801b06e:	b2db      	uxtb	r3, r3
 801b070:	b289      	uxth	r1, r1
 801b072:	fb03 c300 	mla	r3, r3, r0, ip
 801b076:	fa1f fc83 	uxth.w	ip, r3
 801b07a:	1c4b      	adds	r3, r1, #1
 801b07c:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801b080:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801b084:	fb1e fe04 	smulbb	lr, lr, r4
 801b088:	f10c 0301 	add.w	r3, ip, #1
 801b08c:	fb02 e200 	mla	r2, r2, r0, lr
 801b090:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801b094:	b292      	uxth	r2, r2
 801b096:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801b09a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801b09e:	430b      	orrs	r3, r1
 801b0a0:	1c51      	adds	r1, r2, #1
 801b0a2:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801b0a6:	0952      	lsrs	r2, r2, #5
 801b0a8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b0ac:	4313      	orrs	r3, r2
 801b0ae:	803b      	strh	r3, [r7, #0]
 801b0b0:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801b0b2:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801b0b4:	441a      	add	r2, r3
 801b0b6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b0b8:	9229      	str	r2, [sp, #164]	; 0xa4
 801b0ba:	441d      	add	r5, r3
 801b0bc:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 801b0be:	3b01      	subs	r3, #1
 801b0c0:	3702      	adds	r7, #2
 801b0c2:	931a      	str	r3, [sp, #104]	; 0x68
 801b0c4:	e694      	b.n	801adf0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801b0c6:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801b0c8:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801b0ca:	441c      	add	r4, r3
 801b0cc:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b0ce:	9429      	str	r4, [sp, #164]	; 0xa4
 801b0d0:	441d      	add	r5, r3
 801b0d2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b0d4:	3b01      	subs	r3, #1
 801b0d6:	9309      	str	r3, [sp, #36]	; 0x24
 801b0d8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801b0da:	3302      	adds	r3, #2
 801b0dc:	930c      	str	r3, [sp, #48]	; 0x30
 801b0de:	e666      	b.n	801adae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801b0e0:	d024      	beq.n	801b12c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 801b0e2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b0e4:	982b      	ldr	r0, [sp, #172]	; 0xac
 801b0e6:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801b0e8:	3b01      	subs	r3, #1
 801b0ea:	fb00 4003 	mla	r0, r0, r3, r4
 801b0ee:	1400      	asrs	r0, r0, #16
 801b0f0:	f53f ae7b 	bmi.w	801adea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801b0f4:	3901      	subs	r1, #1
 801b0f6:	4288      	cmp	r0, r1
 801b0f8:	f6bf ae77 	bge.w	801adea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801b0fc:	992c      	ldr	r1, [sp, #176]	; 0xb0
 801b0fe:	fb01 5303 	mla	r3, r1, r3, r5
 801b102:	141b      	asrs	r3, r3, #16
 801b104:	f53f ae71 	bmi.w	801adea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801b108:	3a01      	subs	r2, #1
 801b10a:	4293      	cmp	r3, r2
 801b10c:	f6bf ae6d 	bge.w	801adea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801b110:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801b114:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 801b118:	f1bb 0f00 	cmp.w	fp, #0
 801b11c:	dc70      	bgt.n	801b200 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 801b11e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b120:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801b124:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801b126:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801b12a:	930c      	str	r3, [sp, #48]	; 0x30
 801b12c:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801b12e:	2b00      	cmp	r3, #0
 801b130:	f340 81be 	ble.w	801b4b0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 801b134:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b138:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801b13c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801b140:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b142:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b146:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b14a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b14e:	eef0 6a62 	vmov.f32	s13, s5
 801b152:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b156:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b15a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b15e:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 801b162:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b166:	eef0 6a43 	vmov.f32	s13, s6
 801b16a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b16e:	ee12 2a90 	vmov	r2, s5
 801b172:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b176:	fb92 f3f3 	sdiv	r3, r2, r3
 801b17a:	ee13 2a10 	vmov	r2, s6
 801b17e:	932b      	str	r3, [sp, #172]	; 0xac
 801b180:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b182:	fb92 f3f3 	sdiv	r3, r2, r3
 801b186:	932c      	str	r3, [sp, #176]	; 0xb0
 801b188:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801b18a:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 801b18c:	3b01      	subs	r3, #1
 801b18e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b192:	9319      	str	r3, [sp, #100]	; 0x64
 801b194:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b196:	bf08      	it	eq
 801b198:	4613      	moveq	r3, r2
 801b19a:	ee16 5a90 	vmov	r5, s13
 801b19e:	9309      	str	r3, [sp, #36]	; 0x24
 801b1a0:	eeb0 3a67 	vmov.f32	s6, s15
 801b1a4:	eef0 2a47 	vmov.f32	s5, s14
 801b1a8:	e5f3      	b.n	801ad92 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801b1aa:	2900      	cmp	r1, #0
 801b1ac:	f43f ae66 	beq.w	801ae7c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801b1b0:	f818 0000 	ldrb.w	r0, [r8, r0]
 801b1b4:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801b1b8:	900a      	str	r0, [sp, #40]	; 0x28
 801b1ba:	0e00      	lsrs	r0, r0, #24
 801b1bc:	9013      	str	r0, [sp, #76]	; 0x4c
 801b1be:	e65d      	b.n	801ae7c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801b1c0:	f113 0801 	adds.w	r8, r3, #1
 801b1c4:	f53f af74 	bmi.w	801b0b0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b1c8:	4540      	cmp	r0, r8
 801b1ca:	f6ff af71 	blt.w	801b0b0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b1ce:	f11c 0801 	adds.w	r8, ip, #1
 801b1d2:	f53f af6d 	bmi.w	801b0b0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b1d6:	45c6      	cmp	lr, r8
 801b1d8:	f6ff af6a 	blt.w	801b0b0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b1dc:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 801b1de:	9302      	str	r3, [sp, #8]
 801b1e0:	b200      	sxth	r0, r0
 801b1e2:	fa0f f38e 	sxth.w	r3, lr
 801b1e6:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801b1ea:	e9cd c203 	strd	ip, r2, [sp, #12]
 801b1ee:	9301      	str	r3, [sp, #4]
 801b1f0:	9000      	str	r0, [sp, #0]
 801b1f2:	4633      	mov	r3, r6
 801b1f4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801b1f6:	981d      	ldr	r0, [sp, #116]	; 0x74
 801b1f8:	4639      	mov	r1, r7
 801b1fa:	f7ff fc62 	bl	801aac2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 801b1fe:	e757      	b.n	801b0b0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b200:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801b202:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801b204:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801b208:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801b20a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b20e:	1427      	asrs	r7, r4, #16
 801b210:	142b      	asrs	r3, r5, #16
 801b212:	fb01 7303 	mla	r3, r1, r3, r7
 801b216:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801b218:	18e7      	adds	r7, r4, r3
 801b21a:	5ce3      	ldrb	r3, [r4, r3]
 801b21c:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801b220:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801b224:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801b228:	2a00      	cmp	r2, #0
 801b22a:	f000 8137 	beq.w	801b49c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801b22e:	f897 e001 	ldrb.w	lr, [r7, #1]
 801b232:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801b236:	9410      	str	r4, [sp, #64]	; 0x40
 801b238:	0e24      	lsrs	r4, r4, #24
 801b23a:	9417      	str	r4, [sp, #92]	; 0x5c
 801b23c:	b170      	cbz	r0, 801b25c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801b23e:	eb07 0e01 	add.w	lr, r7, r1
 801b242:	5c79      	ldrb	r1, [r7, r1]
 801b244:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b248:	910b      	str	r1, [sp, #44]	; 0x2c
 801b24a:	0e09      	lsrs	r1, r1, #24
 801b24c:	9114      	str	r1, [sp, #80]	; 0x50
 801b24e:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801b252:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b256:	9111      	str	r1, [sp, #68]	; 0x44
 801b258:	0e09      	lsrs	r1, r1, #24
 801b25a:	9118      	str	r1, [sp, #96]	; 0x60
 801b25c:	b292      	uxth	r2, r2
 801b25e:	b280      	uxth	r0, r0
 801b260:	fb02 f800 	mul.w	r8, r2, r0
 801b264:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801b268:	0112      	lsls	r2, r2, #4
 801b26a:	eba2 0e08 	sub.w	lr, r2, r8
 801b26e:	b280      	uxth	r0, r0
 801b270:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801b274:	9917      	ldr	r1, [sp, #92]	; 0x5c
 801b276:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b278:	fa1f fe8e 	uxth.w	lr, lr
 801b27c:	1a12      	subs	r2, r2, r0
 801b27e:	b292      	uxth	r2, r2
 801b280:	fb0e f101 	mul.w	r1, lr, r1
 801b284:	fb02 110c 	mla	r1, r2, ip, r1
 801b288:	fb00 1104 	mla	r1, r0, r4, r1
 801b28c:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801b28e:	fb08 1104 	mla	r1, r8, r4, r1
 801b292:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801b296:	2900      	cmp	r1, #0
 801b298:	f000 80f5 	beq.w	801b486 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801b29c:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801b2a0:	d019      	beq.n	801b2d6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 801b2a2:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801b2a6:	fb0c fa0a 	mul.w	sl, ip, sl
 801b2aa:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b2ae:	fb0c fc03 	mul.w	ip, ip, r3
 801b2b2:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801b2b6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801b2ba:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801b2be:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801b2c2:	4453      	add	r3, sl
 801b2c4:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801b2c8:	0a1b      	lsrs	r3, r3, #8
 801b2ca:	0a3f      	lsrs	r7, r7, #8
 801b2cc:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801b2d0:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801b2d4:	433b      	orrs	r3, r7
 801b2d6:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801b2d8:	2cff      	cmp	r4, #255	; 0xff
 801b2da:	d020      	beq.n	801b31e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 801b2dc:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801b2de:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801b2e2:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801b2e4:	4367      	muls	r7, r4
 801b2e6:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801b2e8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b2ec:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801b2ee:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b2f2:	fb04 fa0a 	mul.w	sl, r4, sl
 801b2f6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801b2fa:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b2fe:	44bc      	add	ip, r7
 801b300:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801b304:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b308:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b30c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b310:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b314:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b318:	ea4c 040a 	orr.w	r4, ip, sl
 801b31c:	9410      	str	r4, [sp, #64]	; 0x40
 801b31e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b320:	2cff      	cmp	r4, #255	; 0xff
 801b322:	d020      	beq.n	801b366 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 801b324:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801b326:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801b32a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b32c:	4367      	muls	r7, r4
 801b32e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801b330:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b334:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b336:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b33a:	fb04 fa0a 	mul.w	sl, r4, sl
 801b33e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801b342:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b346:	44bc      	add	ip, r7
 801b348:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801b34c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b350:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b354:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b358:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b35c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b360:	ea4c 040a 	orr.w	r4, ip, sl
 801b364:	940b      	str	r4, [sp, #44]	; 0x2c
 801b366:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801b368:	2cff      	cmp	r4, #255	; 0xff
 801b36a:	d020      	beq.n	801b3ae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 801b36c:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801b36e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801b372:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801b374:	4367      	muls	r7, r4
 801b376:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801b378:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b37c:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801b37e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b382:	fb04 fa0a 	mul.w	sl, r4, sl
 801b386:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801b38a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b38e:	44bc      	add	ip, r7
 801b390:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801b394:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b398:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b39c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b3a0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b3a4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b3a8:	ea4c 040a 	orr.w	r4, ip, sl
 801b3ac:	9411      	str	r4, [sp, #68]	; 0x44
 801b3ae:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801b3b0:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801b3b4:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801b3b6:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801b3ba:	fb0e f707 	mul.w	r7, lr, r7
 801b3be:	fb02 770c 	mla	r7, r2, ip, r7
 801b3c2:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801b3c6:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801b3c8:	fb00 770c 	mla	r7, r0, ip, r7
 801b3cc:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801b3d0:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801b3d2:	fb08 770c 	mla	r7, r8, ip, r7
 801b3d6:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 801b3da:	fb0e fe0c 	mul.w	lr, lr, ip
 801b3de:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b3e2:	fb02 e303 	mla	r3, r2, r3, lr
 801b3e6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801b3e8:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801b3ea:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801b3ee:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801b3f0:	fb00 330a 	mla	r3, r0, sl, r3
 801b3f4:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 801b3f8:	fb08 3c0c 	mla	ip, r8, ip, r3
 801b3fc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801b3fe:	f8b9 0000 	ldrh.w	r0, [r9]
 801b402:	434b      	muls	r3, r1
 801b404:	0a3f      	lsrs	r7, r7, #8
 801b406:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b40a:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801b40e:	1c59      	adds	r1, r3, #1
 801b410:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801b414:	ea47 070c 	orr.w	r7, r7, ip
 801b418:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801b41c:	1202      	asrs	r2, r0, #8
 801b41e:	0c3b      	lsrs	r3, r7, #16
 801b420:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801b424:	b2c9      	uxtb	r1, r1
 801b426:	fb13 f304 	smulbb	r3, r3, r4
 801b42a:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801b42e:	fb02 3201 	mla	r2, r2, r1, r3
 801b432:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801b436:	10c3      	asrs	r3, r0, #3
 801b438:	b2ff      	uxtb	r7, r7
 801b43a:	00c0      	lsls	r0, r0, #3
 801b43c:	b292      	uxth	r2, r2
 801b43e:	fb1c fc04 	smulbb	ip, ip, r4
 801b442:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801b446:	b2c0      	uxtb	r0, r0
 801b448:	fb17 f704 	smulbb	r7, r7, r4
 801b44c:	fb03 c301 	mla	r3, r3, r1, ip
 801b450:	fb00 7001 	mla	r0, r0, r1, r7
 801b454:	f102 0c01 	add.w	ip, r2, #1
 801b458:	b280      	uxth	r0, r0
 801b45a:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 801b45e:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 801b462:	1c42      	adds	r2, r0, #1
 801b464:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801b468:	b29b      	uxth	r3, r3
 801b46a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801b46e:	ea42 020c 	orr.w	r2, r2, ip
 801b472:	f103 0c01 	add.w	ip, r3, #1
 801b476:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801b47a:	095b      	lsrs	r3, r3, #5
 801b47c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801b480:	431a      	orrs	r2, r3
 801b482:	f8a9 2000 	strh.w	r2, [r9]
 801b486:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801b488:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801b48a:	441a      	add	r2, r3
 801b48c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b48e:	9229      	str	r2, [sp, #164]	; 0xa4
 801b490:	f109 0902 	add.w	r9, r9, #2
 801b494:	441d      	add	r5, r3
 801b496:	f10b 3bff 	add.w	fp, fp, #4294967295
 801b49a:	e63d      	b.n	801b118 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 801b49c:	2800      	cmp	r0, #0
 801b49e:	f43f aedd 	beq.w	801b25c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801b4a2:	5c79      	ldrb	r1, [r7, r1]
 801b4a4:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b4a8:	910b      	str	r1, [sp, #44]	; 0x2c
 801b4aa:	0e09      	lsrs	r1, r1, #24
 801b4ac:	9114      	str	r1, [sp, #80]	; 0x50
 801b4ae:	e6d5      	b.n	801b25c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801b4b0:	b01f      	add	sp, #124	; 0x7c
 801b4b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b4b6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 801b4b6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b4ba:	b089      	sub	sp, #36	; 0x24
 801b4bc:	9101      	str	r1, [sp, #4]
 801b4be:	9801      	ldr	r0, [sp, #4]
 801b4c0:	f9bd c048 	ldrsh.w	ip, [sp, #72]	; 0x48
 801b4c4:	8800      	ldrh	r0, [r0, #0]
 801b4c6:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	; 0x4c
 801b4ca:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 801b4ce:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
 801b4d2:	1206      	asrs	r6, r0, #8
 801b4d4:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	; 0x50
 801b4d8:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801b4dc:	9602      	str	r6, [sp, #8]
 801b4de:	10c6      	asrs	r6, r0, #3
 801b4e0:	00c0      	lsls	r0, r0, #3
 801b4e2:	b2c0      	uxtb	r0, r0
 801b4e4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801b4e8:	9004      	str	r0, [sp, #16]
 801b4ea:	2f00      	cmp	r7, #0
 801b4ec:	fb07 100c 	mla	r0, r7, ip, r1
 801b4f0:	9603      	str	r6, [sp, #12]
 801b4f2:	eb02 0e00 	add.w	lr, r2, r0
 801b4f6:	f2c0 810a 	blt.w	801b70e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801b4fa:	45b8      	cmp	r8, r7
 801b4fc:	f340 8107 	ble.w	801b70e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801b500:	2900      	cmp	r1, #0
 801b502:	f2c0 8102 	blt.w	801b70a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801b506:	458c      	cmp	ip, r1
 801b508:	f340 80ff 	ble.w	801b70a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801b50c:	5c12      	ldrb	r2, [r2, r0]
 801b50e:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 801b512:	1c4a      	adds	r2, r1, #1
 801b514:	f100 80fe 	bmi.w	801b714 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801b518:	4594      	cmp	ip, r2
 801b51a:	f340 80fb 	ble.w	801b714 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801b51e:	2d00      	cmp	r5, #0
 801b520:	f000 80fa 	beq.w	801b718 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 801b524:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801b528:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 801b52c:	3701      	adds	r7, #1
 801b52e:	f100 80f7 	bmi.w	801b720 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801b532:	45b8      	cmp	r8, r7
 801b534:	f340 80f4 	ble.w	801b720 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801b538:	2c00      	cmp	r4, #0
 801b53a:	f000 80f4 	beq.w	801b726 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 801b53e:	2900      	cmp	r1, #0
 801b540:	eb0e 020c 	add.w	r2, lr, ip
 801b544:	f2c0 80ea 	blt.w	801b71c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801b548:	458c      	cmp	ip, r1
 801b54a:	f340 80e7 	ble.w	801b71c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801b54e:	f81e 700c 	ldrb.w	r7, [lr, ip]
 801b552:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 801b556:	3101      	adds	r1, #1
 801b558:	f100 80e8 	bmi.w	801b72c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801b55c:	458c      	cmp	ip, r1
 801b55e:	f340 80e5 	ble.w	801b72c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801b562:	2d00      	cmp	r5, #0
 801b564:	f000 80e4 	beq.w	801b730 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 801b568:	7852      	ldrb	r2, [r2, #1]
 801b56a:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801b56e:	0e0b      	lsrs	r3, r1, #24
 801b570:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 801b574:	9300      	str	r3, [sp, #0]
 801b576:	b2a4      	uxth	r4, r4
 801b578:	b2ab      	uxth	r3, r5
 801b57a:	f000 15ff 	and.w	r5, r0, #16711935	; 0xff00ff
 801b57e:	fb03 f904 	mul.w	r9, r3, r4
 801b582:	fb0a f505 	mul.w	r5, sl, r5
 801b586:	011b      	lsls	r3, r3, #4
 801b588:	eba3 0e09 	sub.w	lr, r3, r9
 801b58c:	f5c3 7280 	rsb	r2, r3, #256	; 0x100
 801b590:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 801b594:	0a28      	lsrs	r0, r5, #8
 801b596:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801b59a:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
 801b59e:	4405      	add	r5, r0
 801b5a0:	0a2d      	lsrs	r5, r5, #8
 801b5a2:	fb0a f303 	mul.w	r3, sl, r3
 801b5a6:	f005 10ff 	and.w	r0, r5, #16711935	; 0xff00ff
 801b5aa:	9005      	str	r0, [sp, #20]
 801b5ac:	f503 7080 	add.w	r0, r3, #256	; 0x100
 801b5b0:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801b5b4:	0a1b      	lsrs	r3, r3, #8
 801b5b6:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 801b5ba:	9306      	str	r3, [sp, #24]
 801b5bc:	f006 13ff 	and.w	r3, r6, #16711935	; 0xff00ff
 801b5c0:	fb0b f303 	mul.w	r3, fp, r3
 801b5c4:	0a1d      	lsrs	r5, r3, #8
 801b5c6:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801b5ca:	ea4f 6817 	mov.w	r8, r7, lsr #24
 801b5ce:	fb0b f606 	mul.w	r6, fp, r6
 801b5d2:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 801b5d6:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 801b5da:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801b5de:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801b5e2:	fb08 f707 	mul.w	r7, r8, r7
 801b5e6:	441d      	add	r5, r3
 801b5e8:	f506 7380 	add.w	r3, r6, #256	; 0x100
 801b5ec:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801b5f0:	f507 7380 	add.w	r3, r7, #256	; 0x100
 801b5f4:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 801b5f8:	fb08 fc0c 	mul.w	ip, r8, ip
 801b5fc:	0a1b      	lsrs	r3, r3, #8
 801b5fe:	9307      	str	r3, [sp, #28]
 801b600:	ea4f 201c 	mov.w	r0, ip, lsr #8
 801b604:	0e0b      	lsrs	r3, r1, #24
 801b606:	f001 17ff 	and.w	r7, r1, #16711935	; 0xff00ff
 801b60a:	435f      	muls	r7, r3
 801b60c:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801b610:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801b614:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 801b618:	4460      	add	r0, ip
 801b61a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b61e:	b2a4      	uxth	r4, r4
 801b620:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801b624:	0a2d      	lsrs	r5, r5, #8
 801b626:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801b62a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b62e:	fa1f fe8e 	uxth.w	lr, lr
 801b632:	4359      	muls	r1, r3
 801b634:	1b12      	subs	r2, r2, r4
 801b636:	9b05      	ldr	r3, [sp, #20]
 801b638:	44bc      	add	ip, r7
 801b63a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801b63e:	b292      	uxth	r2, r2
 801b640:	fb05 f50e 	mul.w	r5, r5, lr
 801b644:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b648:	fb03 5502 	mla	r5, r3, r2, r5
 801b64c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b650:	9b06      	ldr	r3, [sp, #24]
 801b652:	f501 7780 	add.w	r7, r1, #256	; 0x100
 801b656:	0a36      	lsrs	r6, r6, #8
 801b658:	0a00      	lsrs	r0, r0, #8
 801b65a:	fb0c 5509 	mla	r5, ip, r9, r5
 801b65e:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801b662:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801b666:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801b66a:	fb00 5504 	mla	r5, r0, r4, r5
 801b66e:	fb0e f606 	mul.w	r6, lr, r6
 801b672:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 801b676:	0a09      	lsrs	r1, r1, #8
 801b678:	9b07      	ldr	r3, [sp, #28]
 801b67a:	fb02 6000 	mla	r0, r2, r0, r6
 801b67e:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801b682:	fb09 0001 	mla	r0, r9, r1, r0
 801b686:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b68a:	fb0e fe0b 	mul.w	lr, lr, fp
 801b68e:	fb04 0003 	mla	r0, r4, r3, r0
 801b692:	fb02 e20a 	mla	r2, r2, sl, lr
 801b696:	9b00      	ldr	r3, [sp, #0]
 801b698:	fb04 2408 	mla	r4, r4, r8, r2
 801b69c:	fb09 4903 	mla	r9, r9, r3, r4
 801b6a0:	ea6f 2929 	mvn.w	r9, r9, asr #8
 801b6a4:	9b02      	ldr	r3, [sp, #8]
 801b6a6:	9a04      	ldr	r2, [sp, #16]
 801b6a8:	fa5f f989 	uxtb.w	r9, r9
 801b6ac:	fb03 f109 	mul.w	r1, r3, r9
 801b6b0:	9b03      	ldr	r3, [sp, #12]
 801b6b2:	0a2d      	lsrs	r5, r5, #8
 801b6b4:	0a00      	lsrs	r0, r0, #8
 801b6b6:	fb03 f309 	mul.w	r3, r3, r9
 801b6ba:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801b6be:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801b6c2:	4305      	orrs	r5, r0
 801b6c4:	fb02 f909 	mul.w	r9, r2, r9
 801b6c8:	1c58      	adds	r0, r3, #1
 801b6ca:	1c4a      	adds	r2, r1, #1
 801b6cc:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801b6d0:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801b6d4:	0a2b      	lsrs	r3, r5, #8
 801b6d6:	0c2a      	lsrs	r2, r5, #16
 801b6d8:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801b6dc:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 801b6e0:	00db      	lsls	r3, r3, #3
 801b6e2:	0212      	lsls	r2, r2, #8
 801b6e4:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 801b6e8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801b6ec:	4313      	orrs	r3, r2
 801b6ee:	f109 0201 	add.w	r2, r9, #1
 801b6f2:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 801b6f6:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 801b6fa:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801b6fe:	431d      	orrs	r5, r3
 801b700:	9b01      	ldr	r3, [sp, #4]
 801b702:	801d      	strh	r5, [r3, #0]
 801b704:	b009      	add	sp, #36	; 0x24
 801b706:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b70a:	2000      	movs	r0, #0
 801b70c:	e701      	b.n	801b512 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 801b70e:	2600      	movs	r6, #0
 801b710:	4630      	mov	r0, r6
 801b712:	e70b      	b.n	801b52c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801b714:	2600      	movs	r6, #0
 801b716:	e709      	b.n	801b52c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801b718:	462e      	mov	r6, r5
 801b71a:	e707      	b.n	801b52c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801b71c:	2700      	movs	r7, #0
 801b71e:	e71a      	b.n	801b556 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 801b720:	2100      	movs	r1, #0
 801b722:	460f      	mov	r7, r1
 801b724:	e723      	b.n	801b56e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801b726:	4621      	mov	r1, r4
 801b728:	4627      	mov	r7, r4
 801b72a:	e720      	b.n	801b56e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801b72c:	2100      	movs	r1, #0
 801b72e:	e71e      	b.n	801b56e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801b730:	4629      	mov	r1, r5
 801b732:	e71c      	b.n	801b56e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

0801b734 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b734:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b738:	b09b      	sub	sp, #108	; 0x6c
 801b73a:	9218      	str	r2, [sp, #96]	; 0x60
 801b73c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801b73e:	9116      	str	r1, [sp, #88]	; 0x58
 801b740:	9307      	str	r3, [sp, #28]
 801b742:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 801b746:	9019      	str	r0, [sp, #100]	; 0x64
 801b748:	6850      	ldr	r0, [r2, #4]
 801b74a:	6812      	ldr	r2, [r2, #0]
 801b74c:	9d26      	ldr	r5, [sp, #152]	; 0x98
 801b74e:	fb00 1303 	mla	r3, r0, r3, r1
 801b752:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801b756:	930a      	str	r3, [sp, #40]	; 0x28
 801b758:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b75a:	681b      	ldr	r3, [r3, #0]
 801b75c:	930f      	str	r3, [sp, #60]	; 0x3c
 801b75e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b760:	685e      	ldr	r6, [r3, #4]
 801b762:	3604      	adds	r6, #4
 801b764:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801b766:	2b00      	cmp	r3, #0
 801b768:	dc03      	bgt.n	801b772 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801b76a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801b76c:	2b00      	cmp	r3, #0
 801b76e:	f340 8373 	ble.w	801be58 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801b772:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b774:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b778:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801b77c:	1e48      	subs	r0, r1, #1
 801b77e:	1e57      	subs	r7, r2, #1
 801b780:	9b07      	ldr	r3, [sp, #28]
 801b782:	2b00      	cmp	r3, #0
 801b784:	f340 8190 	ble.w	801baa8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801b788:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801b78a:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801b78e:	ea4f 4325 	mov.w	r3, r5, asr #16
 801b792:	d406      	bmi.n	801b7a2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801b794:	4584      	cmp	ip, r0
 801b796:	da04      	bge.n	801b7a2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801b798:	2b00      	cmp	r3, #0
 801b79a:	db02      	blt.n	801b7a2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801b79c:	42bb      	cmp	r3, r7
 801b79e:	f2c0 8184 	blt.w	801baaa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 801b7a2:	f11c 0c01 	adds.w	ip, ip, #1
 801b7a6:	f100 8172 	bmi.w	801ba8e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b7aa:	4561      	cmp	r1, ip
 801b7ac:	f2c0 816f 	blt.w	801ba8e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b7b0:	3301      	adds	r3, #1
 801b7b2:	f100 816c 	bmi.w	801ba8e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b7b6:	429a      	cmp	r2, r3
 801b7b8:	f2c0 8169 	blt.w	801ba8e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b7bc:	9b07      	ldr	r3, [sp, #28]
 801b7be:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801b7c0:	9317      	str	r3, [sp, #92]	; 0x5c
 801b7c2:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801b7c4:	2b00      	cmp	r3, #0
 801b7c6:	f340 818e 	ble.w	801bae6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 801b7ca:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801b7cc:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801b7d0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b7d2:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 801b7d6:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801b7d8:	141b      	asrs	r3, r3, #16
 801b7da:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801b7de:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801b7e2:	f100 81d1 	bmi.w	801bb88 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801b7e6:	f101 38ff 	add.w	r8, r1, #4294967295
 801b7ea:	4543      	cmp	r3, r8
 801b7ec:	f280 81cc 	bge.w	801bb88 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801b7f0:	f1bc 0f00 	cmp.w	ip, #0
 801b7f4:	f2c0 81c8 	blt.w	801bb88 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801b7f8:	f10e 38ff 	add.w	r8, lr, #4294967295
 801b7fc:	45c4      	cmp	ip, r8
 801b7fe:	f280 81c3 	bge.w	801bb88 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801b802:	b209      	sxth	r1, r1
 801b804:	fb0c 3301 	mla	r3, ip, r1, r3
 801b808:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801b80a:	eb04 0803 	add.w	r8, r4, r3
 801b80e:	5ce3      	ldrb	r3, [r4, r3]
 801b810:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801b814:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801b818:	2a00      	cmp	r2, #0
 801b81a:	f000 81aa 	beq.w	801bb72 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 801b81e:	f898 c001 	ldrb.w	ip, [r8, #1]
 801b822:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801b826:	940b      	str	r4, [sp, #44]	; 0x2c
 801b828:	0e24      	lsrs	r4, r4, #24
 801b82a:	9412      	str	r4, [sp, #72]	; 0x48
 801b82c:	b178      	cbz	r0, 801b84e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801b82e:	eb08 0c01 	add.w	ip, r8, r1
 801b832:	f818 1001 	ldrb.w	r1, [r8, r1]
 801b836:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b83a:	9108      	str	r1, [sp, #32]
 801b83c:	0e09      	lsrs	r1, r1, #24
 801b83e:	9110      	str	r1, [sp, #64]	; 0x40
 801b840:	f89c 1001 	ldrb.w	r1, [ip, #1]
 801b844:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b848:	910c      	str	r1, [sp, #48]	; 0x30
 801b84a:	0e09      	lsrs	r1, r1, #24
 801b84c:	9113      	str	r1, [sp, #76]	; 0x4c
 801b84e:	b292      	uxth	r2, r2
 801b850:	b280      	uxth	r0, r0
 801b852:	fb02 f900 	mul.w	r9, r2, r0
 801b856:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801b85a:	0112      	lsls	r2, r2, #4
 801b85c:	eba2 0809 	sub.w	r8, r2, r9
 801b860:	b280      	uxth	r0, r0
 801b862:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801b866:	9912      	ldr	r1, [sp, #72]	; 0x48
 801b868:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801b86a:	fa1f f888 	uxth.w	r8, r8
 801b86e:	1a12      	subs	r2, r2, r0
 801b870:	b292      	uxth	r2, r2
 801b872:	fb08 f101 	mul.w	r1, r8, r1
 801b876:	fb02 110e 	mla	r1, r2, lr, r1
 801b87a:	fb00 1104 	mla	r1, r0, r4, r1
 801b87e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b880:	fb09 1104 	mla	r1, r9, r4, r1
 801b884:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801b888:	2900      	cmp	r1, #0
 801b88a:	f000 80f5 	beq.w	801ba78 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801b88e:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801b892:	d01b      	beq.n	801b8cc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b894:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801b898:	fb0e fa0a 	mul.w	sl, lr, sl
 801b89c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b8a0:	fb0e fe03 	mul.w	lr, lr, r3
 801b8a4:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801b8a8:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801b8ac:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801b8b0:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801b8b4:	4453      	add	r3, sl
 801b8b6:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801b8ba:	0a1b      	lsrs	r3, r3, #8
 801b8bc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b8c0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801b8c4:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801b8c8:	ea43 030c 	orr.w	r3, r3, ip
 801b8cc:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801b8ce:	2cff      	cmp	r4, #255	; 0xff
 801b8d0:	d021      	beq.n	801b916 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 801b8d2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801b8d4:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801b8d8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801b8da:	fb04 fb0b 	mul.w	fp, r4, fp
 801b8de:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801b8e0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b8e4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801b8e6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b8ea:	fb04 fa0a 	mul.w	sl, r4, sl
 801b8ee:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b8f2:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801b8f6:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801b8fa:	44de      	add	lr, fp
 801b8fc:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b900:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b904:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b908:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b90c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b910:	ea4e 040a 	orr.w	r4, lr, sl
 801b914:	940b      	str	r4, [sp, #44]	; 0x2c
 801b916:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801b918:	2cff      	cmp	r4, #255	; 0xff
 801b91a:	d021      	beq.n	801b960 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 801b91c:	9c08      	ldr	r4, [sp, #32]
 801b91e:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801b922:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801b924:	fb04 fb0b 	mul.w	fp, r4, fp
 801b928:	9c08      	ldr	r4, [sp, #32]
 801b92a:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b92e:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801b930:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b934:	fb04 fa0a 	mul.w	sl, r4, sl
 801b938:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b93c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801b940:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801b944:	44de      	add	lr, fp
 801b946:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b94a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b94e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b952:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b956:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b95a:	ea4e 040a 	orr.w	r4, lr, sl
 801b95e:	9408      	str	r4, [sp, #32]
 801b960:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b962:	2cff      	cmp	r4, #255	; 0xff
 801b964:	d021      	beq.n	801b9aa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801b966:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801b968:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801b96c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b96e:	fb04 fb0b 	mul.w	fp, r4, fp
 801b972:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801b974:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b978:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b97a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b97e:	fb04 fa0a 	mul.w	sl, r4, sl
 801b982:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b986:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801b98a:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801b98e:	44de      	add	lr, fp
 801b990:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b994:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b998:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b99c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b9a0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b9a4:	ea4e 040a 	orr.w	r4, lr, sl
 801b9a8:	940c      	str	r4, [sp, #48]	; 0x30
 801b9aa:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801b9ac:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801b9b0:	9c08      	ldr	r4, [sp, #32]
 801b9b2:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 801b9b6:	fb08 fc0c 	mul.w	ip, r8, ip
 801b9ba:	fb02 cc0e 	mla	ip, r2, lr, ip
 801b9be:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801b9c2:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801b9c4:	fb00 cc0e 	mla	ip, r0, lr, ip
 801b9c8:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801b9cc:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801b9ce:	fb09 cc0e 	mla	ip, r9, lr, ip
 801b9d2:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 801b9d6:	fb08 f80e 	mul.w	r8, r8, lr
 801b9da:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b9de:	fb02 8303 	mla	r3, r2, r3, r8
 801b9e2:	9a08      	ldr	r2, [sp, #32]
 801b9e4:	f8b7 8000 	ldrh.w	r8, [r7]
 801b9e8:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801b9ec:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801b9ee:	fb00 330a 	mla	r3, r0, sl, r3
 801b9f2:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 801b9f6:	fb09 3900 	mla	r9, r9, r0, r3
 801b9fa:	43c9      	mvns	r1, r1
 801b9fc:	ea4f 2228 	mov.w	r2, r8, asr #8
 801ba00:	fa5f fe81 	uxtb.w	lr, r1
 801ba04:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ba08:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801ba0c:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801ba10:	fb02 f20e 	mul.w	r2, r2, lr
 801ba14:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ba18:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801ba1c:	ea4c 0c09 	orr.w	ip, ip, r9
 801ba20:	1c53      	adds	r3, r2, #1
 801ba22:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 801ba26:	ea4f 00e8 	mov.w	r0, r8, asr #3
 801ba2a:	ea4f 431c 	mov.w	r3, ip, lsr #16
 801ba2e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801ba32:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801ba36:	4a63      	ldr	r2, [pc, #396]	; (801bbc4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 801ba38:	fb00 f00e 	mul.w	r0, r0, lr
 801ba3c:	b2db      	uxtb	r3, r3
 801ba3e:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 801ba42:	1c43      	adds	r3, r0, #1
 801ba44:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801ba48:	ea4f 231c 	mov.w	r3, ip, lsr #8
 801ba4c:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 801ba50:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801ba54:	b2c9      	uxtb	r1, r1
 801ba56:	00db      	lsls	r3, r3, #3
 801ba58:	fb01 f10e 	mul.w	r1, r1, lr
 801ba5c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ba60:	4313      	orrs	r3, r2
 801ba62:	1c4a      	adds	r2, r1, #1
 801ba64:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801ba68:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801ba6c:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801ba70:	ea4c 0c03 	orr.w	ip, ip, r3
 801ba74:	f8a7 c000 	strh.w	ip, [r7]
 801ba78:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801ba7a:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801ba7c:	441a      	add	r2, r3
 801ba7e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ba80:	9225      	str	r2, [sp, #148]	; 0x94
 801ba82:	441d      	add	r5, r3
 801ba84:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801ba86:	3b01      	subs	r3, #1
 801ba88:	3702      	adds	r7, #2
 801ba8a:	9317      	str	r3, [sp, #92]	; 0x5c
 801ba8c:	e699      	b.n	801b7c2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801ba8e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801ba90:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801ba92:	441c      	add	r4, r3
 801ba94:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ba96:	9425      	str	r4, [sp, #148]	; 0x94
 801ba98:	441d      	add	r5, r3
 801ba9a:	9b07      	ldr	r3, [sp, #28]
 801ba9c:	3b01      	subs	r3, #1
 801ba9e:	9307      	str	r3, [sp, #28]
 801baa0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801baa2:	3302      	adds	r3, #2
 801baa4:	930a      	str	r3, [sp, #40]	; 0x28
 801baa6:	e66b      	b.n	801b780 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801baa8:	d024      	beq.n	801baf4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 801baaa:	9b07      	ldr	r3, [sp, #28]
 801baac:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801baae:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801bab0:	3b01      	subs	r3, #1
 801bab2:	fb00 4003 	mla	r0, r0, r3, r4
 801bab6:	1400      	asrs	r0, r0, #16
 801bab8:	f53f ae80 	bmi.w	801b7bc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801babc:	3901      	subs	r1, #1
 801babe:	4288      	cmp	r0, r1
 801bac0:	f6bf ae7c 	bge.w	801b7bc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801bac4:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801bac6:	fb01 5303 	mla	r3, r1, r3, r5
 801baca:	141b      	asrs	r3, r3, #16
 801bacc:	f53f ae76 	bmi.w	801b7bc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801bad0:	3a01      	subs	r2, #1
 801bad2:	4293      	cmp	r3, r2
 801bad4:	f6bf ae72 	bge.w	801b7bc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801bad8:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801badc:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 801bae0:	f1bb 0f00 	cmp.w	fp, #0
 801bae4:	dc70      	bgt.n	801bbc8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801bae6:	9b07      	ldr	r3, [sp, #28]
 801bae8:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801baec:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801baee:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801baf2:	930a      	str	r3, [sp, #40]	; 0x28
 801baf4:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801baf6:	2b00      	cmp	r3, #0
 801baf8:	f340 81ae 	ble.w	801be58 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801bafc:	ee30 0a04 	vadd.f32	s0, s0, s8
 801bb00:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801bb04:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801bb08:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801bb0a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801bb0e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801bb12:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801bb16:	eef0 6a62 	vmov.f32	s13, s5
 801bb1a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801bb1e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801bb22:	ee77 2a62 	vsub.f32	s5, s14, s5
 801bb26:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 801bb2a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801bb2e:	eef0 6a43 	vmov.f32	s13, s6
 801bb32:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801bb36:	ee12 2a90 	vmov	r2, s5
 801bb3a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801bb3e:	fb92 f3f3 	sdiv	r3, r2, r3
 801bb42:	ee13 2a10 	vmov	r2, s6
 801bb46:	9327      	str	r3, [sp, #156]	; 0x9c
 801bb48:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801bb4a:	fb92 f3f3 	sdiv	r3, r2, r3
 801bb4e:	9328      	str	r3, [sp, #160]	; 0xa0
 801bb50:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801bb52:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801bb54:	3b01      	subs	r3, #1
 801bb56:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801bb5a:	9316      	str	r3, [sp, #88]	; 0x58
 801bb5c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801bb5e:	bf08      	it	eq
 801bb60:	4613      	moveq	r3, r2
 801bb62:	ee16 5a90 	vmov	r5, s13
 801bb66:	9307      	str	r3, [sp, #28]
 801bb68:	eeb0 3a67 	vmov.f32	s6, s15
 801bb6c:	eef0 2a47 	vmov.f32	s5, s14
 801bb70:	e5f8      	b.n	801b764 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801bb72:	2800      	cmp	r0, #0
 801bb74:	f43f ae6b 	beq.w	801b84e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801bb78:	f818 1001 	ldrb.w	r1, [r8, r1]
 801bb7c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801bb80:	9108      	str	r1, [sp, #32]
 801bb82:	0e09      	lsrs	r1, r1, #24
 801bb84:	9110      	str	r1, [sp, #64]	; 0x40
 801bb86:	e662      	b.n	801b84e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801bb88:	f113 0801 	adds.w	r8, r3, #1
 801bb8c:	f53f af74 	bmi.w	801ba78 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801bb90:	4541      	cmp	r1, r8
 801bb92:	f6ff af71 	blt.w	801ba78 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801bb96:	f11c 0801 	adds.w	r8, ip, #1
 801bb9a:	f53f af6d 	bmi.w	801ba78 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801bb9e:	45c6      	cmp	lr, r8
 801bba0:	f6ff af6a 	blt.w	801ba78 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801bba4:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 801bba8:	b209      	sxth	r1, r1
 801bbaa:	fa0f f38e 	sxth.w	r3, lr
 801bbae:	e9cd 2004 	strd	r2, r0, [sp, #16]
 801bbb2:	9301      	str	r3, [sp, #4]
 801bbb4:	9100      	str	r1, [sp, #0]
 801bbb6:	4633      	mov	r3, r6
 801bbb8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801bbba:	9819      	ldr	r0, [sp, #100]	; 0x64
 801bbbc:	4639      	mov	r1, r7
 801bbbe:	f7ff fc7a 	bl	801b4b6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 801bbc2:	e759      	b.n	801ba78 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801bbc4:	fffff800 	.word	0xfffff800
 801bbc8:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801bbca:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801bbcc:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801bbd0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801bbd2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801bbd6:	1427      	asrs	r7, r4, #16
 801bbd8:	142b      	asrs	r3, r5, #16
 801bbda:	fb01 7303 	mla	r3, r1, r3, r7
 801bbde:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801bbe0:	18e7      	adds	r7, r4, r3
 801bbe2:	5ce3      	ldrb	r3, [r4, r3]
 801bbe4:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801bbe8:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801bbec:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801bbf0:	2a00      	cmp	r2, #0
 801bbf2:	f000 8127 	beq.w	801be44 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801bbf6:	f897 e001 	ldrb.w	lr, [r7, #1]
 801bbfa:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801bbfe:	940d      	str	r4, [sp, #52]	; 0x34
 801bc00:	0e24      	lsrs	r4, r4, #24
 801bc02:	9414      	str	r4, [sp, #80]	; 0x50
 801bc04:	b170      	cbz	r0, 801bc24 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801bc06:	eb07 0e01 	add.w	lr, r7, r1
 801bc0a:	5c79      	ldrb	r1, [r7, r1]
 801bc0c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801bc10:	9109      	str	r1, [sp, #36]	; 0x24
 801bc12:	0e09      	lsrs	r1, r1, #24
 801bc14:	9111      	str	r1, [sp, #68]	; 0x44
 801bc16:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801bc1a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801bc1e:	910e      	str	r1, [sp, #56]	; 0x38
 801bc20:	0e09      	lsrs	r1, r1, #24
 801bc22:	9115      	str	r1, [sp, #84]	; 0x54
 801bc24:	b292      	uxth	r2, r2
 801bc26:	b280      	uxth	r0, r0
 801bc28:	fb02 f800 	mul.w	r8, r2, r0
 801bc2c:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801bc30:	0112      	lsls	r2, r2, #4
 801bc32:	eba2 0e08 	sub.w	lr, r2, r8
 801bc36:	b280      	uxth	r0, r0
 801bc38:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 801bc3c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801bc3e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801bc40:	fa1f fe8e 	uxth.w	lr, lr
 801bc44:	1a09      	subs	r1, r1, r0
 801bc46:	b289      	uxth	r1, r1
 801bc48:	fb0e f202 	mul.w	r2, lr, r2
 801bc4c:	fb01 220c 	mla	r2, r1, ip, r2
 801bc50:	fb00 2204 	mla	r2, r0, r4, r2
 801bc54:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801bc56:	fb08 2204 	mla	r2, r8, r4, r2
 801bc5a:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801bc5e:	2a00      	cmp	r2, #0
 801bc60:	f000 80e5 	beq.w	801be2e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 801bc64:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801bc68:	d019      	beq.n	801bc9e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 801bc6a:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801bc6e:	fb0c fa0a 	mul.w	sl, ip, sl
 801bc72:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801bc76:	fb0c fc03 	mul.w	ip, ip, r3
 801bc7a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801bc7e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801bc82:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801bc86:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801bc8a:	4453      	add	r3, sl
 801bc8c:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801bc90:	0a1b      	lsrs	r3, r3, #8
 801bc92:	0a3f      	lsrs	r7, r7, #8
 801bc94:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801bc98:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801bc9c:	433b      	orrs	r3, r7
 801bc9e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801bca0:	2cff      	cmp	r4, #255	; 0xff
 801bca2:	d020      	beq.n	801bce6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 801bca4:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801bca6:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801bcaa:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801bcac:	4367      	muls	r7, r4
 801bcae:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801bcb0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801bcb4:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801bcb6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801bcba:	fb04 fa0a 	mul.w	sl, r4, sl
 801bcbe:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801bcc2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801bcc6:	44bc      	add	ip, r7
 801bcc8:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801bccc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801bcd0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bcd4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bcd8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801bcdc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801bce0:	ea4c 040a 	orr.w	r4, ip, sl
 801bce4:	940d      	str	r4, [sp, #52]	; 0x34
 801bce6:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801bce8:	2cff      	cmp	r4, #255	; 0xff
 801bcea:	d020      	beq.n	801bd2e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 801bcec:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801bcee:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801bcf2:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801bcf4:	4367      	muls	r7, r4
 801bcf6:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801bcf8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801bcfc:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801bcfe:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801bd02:	fb04 fa0a 	mul.w	sl, r4, sl
 801bd06:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801bd0a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801bd0e:	44bc      	add	ip, r7
 801bd10:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801bd14:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801bd18:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bd1c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bd20:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801bd24:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801bd28:	ea4c 040a 	orr.w	r4, ip, sl
 801bd2c:	9409      	str	r4, [sp, #36]	; 0x24
 801bd2e:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801bd30:	2cff      	cmp	r4, #255	; 0xff
 801bd32:	d020      	beq.n	801bd76 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 801bd34:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801bd36:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801bd3a:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801bd3c:	4367      	muls	r7, r4
 801bd3e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801bd40:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801bd44:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801bd46:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801bd4a:	fb04 fa0a 	mul.w	sl, r4, sl
 801bd4e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801bd52:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801bd56:	44bc      	add	ip, r7
 801bd58:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801bd5c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801bd60:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bd64:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bd68:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801bd6c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801bd70:	ea4c 040a 	orr.w	r4, ip, sl
 801bd74:	940e      	str	r4, [sp, #56]	; 0x38
 801bd76:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801bd78:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801bd7c:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801bd7e:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801bd82:	fb0e f707 	mul.w	r7, lr, r7
 801bd86:	fb01 770c 	mla	r7, r1, ip, r7
 801bd8a:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801bd8e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801bd90:	fb00 770c 	mla	r7, r0, ip, r7
 801bd94:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801bd98:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801bd9a:	fb08 770c 	mla	r7, r8, ip, r7
 801bd9e:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 801bda2:	fb0e fe0c 	mul.w	lr, lr, ip
 801bda6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801bdaa:	fb01 e303 	mla	r3, r1, r3, lr
 801bdae:	9909      	ldr	r1, [sp, #36]	; 0x24
 801bdb0:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801bdb4:	990e      	ldr	r1, [sp, #56]	; 0x38
 801bdb6:	fb00 330a 	mla	r3, r0, sl, r3
 801bdba:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 801bdbe:	fb08 3c0c 	mla	ip, r8, ip, r3
 801bdc2:	f8b9 3000 	ldrh.w	r3, [r9]
 801bdc6:	43d2      	mvns	r2, r2
 801bdc8:	1218      	asrs	r0, r3, #8
 801bdca:	b2d2      	uxtb	r2, r2
 801bdcc:	10d9      	asrs	r1, r3, #3
 801bdce:	0a3f      	lsrs	r7, r7, #8
 801bdd0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bdd4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801bdd8:	00db      	lsls	r3, r3, #3
 801bdda:	4350      	muls	r0, r2
 801bddc:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801bde0:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801bde4:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801bde8:	b2db      	uxtb	r3, r3
 801bdea:	ea47 070c 	orr.w	r7, r7, ip
 801bdee:	4351      	muls	r1, r2
 801bdf0:	4353      	muls	r3, r2
 801bdf2:	1c42      	adds	r2, r0, #1
 801bdf4:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801bdf8:	0c3a      	lsrs	r2, r7, #16
 801bdfa:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801bdfe:	4a18      	ldr	r2, [pc, #96]	; (801be60 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 801be00:	b2c0      	uxtb	r0, r0
 801be02:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 801be06:	1c4a      	adds	r2, r1, #1
 801be08:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801be0c:	0a3a      	lsrs	r2, r7, #8
 801be0e:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801be12:	00c9      	lsls	r1, r1, #3
 801be14:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801be18:	4301      	orrs	r1, r0
 801be1a:	1c58      	adds	r0, r3, #1
 801be1c:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801be20:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801be24:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 801be28:	4308      	orrs	r0, r1
 801be2a:	f8a9 0000 	strh.w	r0, [r9]
 801be2e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801be30:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801be32:	441a      	add	r2, r3
 801be34:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801be36:	9225      	str	r2, [sp, #148]	; 0x94
 801be38:	f109 0902 	add.w	r9, r9, #2
 801be3c:	441d      	add	r5, r3
 801be3e:	f10b 3bff 	add.w	fp, fp, #4294967295
 801be42:	e64d      	b.n	801bae0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 801be44:	2800      	cmp	r0, #0
 801be46:	f43f aeed 	beq.w	801bc24 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801be4a:	5c79      	ldrb	r1, [r7, r1]
 801be4c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801be50:	9109      	str	r1, [sp, #36]	; 0x24
 801be52:	0e09      	lsrs	r1, r1, #24
 801be54:	9111      	str	r1, [sp, #68]	; 0x44
 801be56:	e6e5      	b.n	801bc24 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801be58:	b01b      	add	sp, #108	; 0x6c
 801be5a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801be5e:	bf00      	nop
 801be60:	fffff800 	.word	0xfffff800

0801be64 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 801be64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801be68:	b085      	sub	sp, #20
 801be6a:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 801be6e:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 801be72:	9103      	str	r1, [sp, #12]
 801be74:	fb00 7406 	mla	r4, r0, r6, r7
 801be78:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 801be7c:	2800      	cmp	r0, #0
 801be7e:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 801be82:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 801be86:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 801be8a:	9501      	str	r5, [sp, #4]
 801be8c:	eb03 0904 	add.w	r9, r3, r4
 801be90:	f2c0 8150 	blt.w	801c134 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801be94:	4583      	cmp	fp, r0
 801be96:	f340 814d 	ble.w	801c134 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801be9a:	2f00      	cmp	r7, #0
 801be9c:	f2c0 8146 	blt.w	801c12c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801bea0:	42be      	cmp	r6, r7
 801bea2:	f340 8143 	ble.w	801c12c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801bea6:	f813 c004 	ldrb.w	ip, [r3, r4]
 801beaa:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 801beae:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801beb2:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 801beb6:	4355      	muls	r5, r2
 801beb8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801bebc:	f64f 041f 	movw	r4, #63519	; 0xf81f
 801bec0:	fb0c f203 	mul.w	r2, ip, r3
 801bec4:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801bec8:	f605 0501 	addw	r5, r5, #2049	; 0x801
 801becc:	441d      	add	r5, r3
 801bece:	f102 0320 	add.w	r3, r2, #32
 801bed2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801bed6:	0a1b      	lsrs	r3, r3, #8
 801bed8:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801bedc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801bee0:	431c      	orrs	r4, r3
 801bee2:	1c7b      	adds	r3, r7, #1
 801bee4:	f100 812b 	bmi.w	801c13e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801bee8:	429e      	cmp	r6, r3
 801beea:	f340 8128 	ble.w	801c13e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801beee:	2900      	cmp	r1, #0
 801bef0:	f000 8128 	beq.w	801c144 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 801bef4:	9a01      	ldr	r2, [sp, #4]
 801bef6:	f899 3001 	ldrb.w	r3, [r9, #1]
 801befa:	8855      	ldrh	r5, [r2, #2]
 801befc:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801bf00:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 801bf04:	fb08 f802 	mul.w	r8, r8, r2
 801bf08:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801bf0c:	f64f 021f 	movw	r2, #63519	; 0xf81f
 801bf10:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801bf14:	435d      	muls	r5, r3
 801bf16:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801bf1a:	44d0      	add	r8, sl
 801bf1c:	f105 0a20 	add.w	sl, r5, #32
 801bf20:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801bf24:	0a2d      	lsrs	r5, r5, #8
 801bf26:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801bf2a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801bf2e:	432a      	orrs	r2, r5
 801bf30:	3001      	adds	r0, #1
 801bf32:	f100 810d 	bmi.w	801c150 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 801bf36:	4583      	cmp	fp, r0
 801bf38:	f340 810a 	ble.w	801c150 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 801bf3c:	f1be 0f00 	cmp.w	lr, #0
 801bf40:	f000 810b 	beq.w	801c15a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 801bf44:	2f00      	cmp	r7, #0
 801bf46:	f2c0 8100 	blt.w	801c14a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 801bf4a:	42be      	cmp	r6, r7
 801bf4c:	f340 80fd 	ble.w	801c14a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 801bf50:	9801      	ldr	r0, [sp, #4]
 801bf52:	f819 5006 	ldrb.w	r5, [r9, r6]
 801bf56:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801bf5a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801bf5e:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 801bf62:	fb0a fa00 	mul.w	sl, sl, r0
 801bf66:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 801bf6a:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801bf6e:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 801bf72:	fb05 f808 	mul.w	r8, r5, r8
 801bf76:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 801bf7a:	4482      	add	sl, r0
 801bf7c:	f108 0020 	add.w	r0, r8, #32
 801bf80:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801bf84:	0a00      	lsrs	r0, r0, #8
 801bf86:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801bf8a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801bf8e:	ea4b 0b00 	orr.w	fp, fp, r0
 801bf92:	3701      	adds	r7, #1
 801bf94:	f100 80e6 	bmi.w	801c164 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801bf98:	42be      	cmp	r6, r7
 801bf9a:	f340 80e3 	ble.w	801c164 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801bf9e:	2900      	cmp	r1, #0
 801bfa0:	f000 80e3 	beq.w	801c16a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 801bfa4:	3601      	adds	r6, #1
 801bfa6:	9801      	ldr	r0, [sp, #4]
 801bfa8:	f819 7006 	ldrb.w	r7, [r9, r6]
 801bfac:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801bfb0:	ea4f 09e7 	mov.w	r9, r7, asr #3
 801bfb4:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 801bfb8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801bfbc:	fb09 f906 	mul.w	r9, r9, r6
 801bfc0:	fb07 f800 	mul.w	r8, r7, r0
 801bfc4:	f64f 001f 	movw	r0, #63519	; 0xf81f
 801bfc8:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801bfcc:	f609 0901 	addw	r9, r9, #2049	; 0x801
 801bfd0:	44d1      	add	r9, sl
 801bfd2:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801bfd6:	f108 0020 	add.w	r0, r8, #32
 801bfda:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801bfde:	0a00      	lsrs	r0, r0, #8
 801bfe0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801bfe4:	4330      	orrs	r0, r6
 801bfe6:	b28e      	uxth	r6, r1
 801bfe8:	fa1f f98e 	uxth.w	r9, lr
 801bfec:	fb06 f809 	mul.w	r8, r6, r9
 801bff0:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 801bff4:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801bff8:	0136      	lsls	r6, r6, #4
 801bffa:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801bffe:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801c002:	9601      	str	r6, [sp, #4]
 801c004:	ea4a 0404 	orr.w	r4, sl, r4
 801c008:	fa1f f689 	uxth.w	r6, r9
 801c00c:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801c010:	fb11 f90e 	smulbb	r9, r1, lr
 801c014:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 801c018:	9602      	str	r6, [sp, #8]
 801c01a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c01e:	4626      	mov	r6, r4
 801c020:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801c024:	f1ce 0410 	rsb	r4, lr, #16
 801c028:	1a64      	subs	r4, r4, r1
 801c02a:	ea4a 0202 	orr.w	r2, sl, r2
 801c02e:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801c032:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801c036:	434a      	muls	r2, r1
 801c038:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801c03c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c040:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801c044:	fb04 2406 	mla	r4, r4, r6, r2
 801c048:	ea4a 0000 	orr.w	r0, sl, r0
 801c04c:	fb09 4200 	mla	r2, r9, r0, r4
 801c050:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801c054:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801c058:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801c05c:	ea44 0b0b 	orr.w	fp, r4, fp
 801c060:	9c01      	ldr	r4, [sp, #4]
 801c062:	9e02      	ldr	r6, [sp, #8]
 801c064:	9903      	ldr	r1, [sp, #12]
 801c066:	f5c4 7480 	rsb	r4, r4, #256	; 0x100
 801c06a:	1ba4      	subs	r4, r4, r6
 801c06c:	9e01      	ldr	r6, [sp, #4]
 801c06e:	8808      	ldrh	r0, [r1, #0]
 801c070:	f89d 1050 	ldrb.w	r1, [sp, #80]	; 0x50
 801c074:	eba6 0608 	sub.w	r6, r6, r8
 801c078:	b2b6      	uxth	r6, r6
 801c07a:	b2a4      	uxth	r4, r4
 801c07c:	4373      	muls	r3, r6
 801c07e:	fb0c 3304 	mla	r3, ip, r4, r3
 801c082:	9c02      	ldr	r4, [sp, #8]
 801c084:	fb04 3505 	mla	r5, r4, r5, r3
 801c088:	fb08 5707 	mla	r7, r8, r7, r5
 801c08c:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801c090:	b289      	uxth	r1, r1
 801c092:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801c096:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801c09a:	434f      	muls	r7, r1
 801c09c:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801c0a0:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801c0a4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c0a8:	1c7b      	adds	r3, r7, #1
 801c0aa:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801c0ae:	ea42 0e0e 	orr.w	lr, r2, lr
 801c0b2:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801c0b6:	fa1f f28e 	uxth.w	r2, lr
 801c0ba:	1203      	asrs	r3, r0, #8
 801c0bc:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 801c0c0:	b2ff      	uxtb	r7, r7
 801c0c2:	1215      	asrs	r5, r2, #8
 801c0c4:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801c0c8:	fb13 f307 	smulbb	r3, r3, r7
 801c0cc:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801c0d0:	fb05 3501 	mla	r5, r5, r1, r3
 801c0d4:	10c3      	asrs	r3, r0, #3
 801c0d6:	10d4      	asrs	r4, r2, #3
 801c0d8:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801c0dc:	fb13 f307 	smulbb	r3, r3, r7
 801c0e0:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 801c0e4:	fb04 3401 	mla	r4, r4, r1, r3
 801c0e8:	00c3      	lsls	r3, r0, #3
 801c0ea:	00d2      	lsls	r2, r2, #3
 801c0ec:	b2db      	uxtb	r3, r3
 801c0ee:	fb13 f307 	smulbb	r3, r3, r7
 801c0f2:	b2d2      	uxtb	r2, r2
 801c0f4:	fb02 3101 	mla	r1, r2, r1, r3
 801c0f8:	b2ad      	uxth	r5, r5
 801c0fa:	b289      	uxth	r1, r1
 801c0fc:	b2a4      	uxth	r4, r4
 801c0fe:	1c6b      	adds	r3, r5, #1
 801c100:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801c104:	1c62      	adds	r2, r4, #1
 801c106:	1c4b      	adds	r3, r1, #1
 801c108:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801c10c:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801c110:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801c114:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801c118:	0964      	lsrs	r4, r4, #5
 801c11a:	432b      	orrs	r3, r5
 801c11c:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801c120:	9a03      	ldr	r2, [sp, #12]
 801c122:	4323      	orrs	r3, r4
 801c124:	8013      	strh	r3, [r2, #0]
 801c126:	b005      	add	sp, #20
 801c128:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c12c:	f04f 0c00 	mov.w	ip, #0
 801c130:	4664      	mov	r4, ip
 801c132:	e6d6      	b.n	801bee2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 801c134:	2300      	movs	r3, #0
 801c136:	469c      	mov	ip, r3
 801c138:	461a      	mov	r2, r3
 801c13a:	461c      	mov	r4, r3
 801c13c:	e6f8      	b.n	801bf30 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801c13e:	2300      	movs	r3, #0
 801c140:	461a      	mov	r2, r3
 801c142:	e6f5      	b.n	801bf30 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801c144:	460b      	mov	r3, r1
 801c146:	460a      	mov	r2, r1
 801c148:	e6f2      	b.n	801bf30 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801c14a:	2500      	movs	r5, #0
 801c14c:	46ab      	mov	fp, r5
 801c14e:	e720      	b.n	801bf92 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 801c150:	2700      	movs	r7, #0
 801c152:	463d      	mov	r5, r7
 801c154:	4638      	mov	r0, r7
 801c156:	46bb      	mov	fp, r7
 801c158:	e745      	b.n	801bfe6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801c15a:	4677      	mov	r7, lr
 801c15c:	4675      	mov	r5, lr
 801c15e:	4670      	mov	r0, lr
 801c160:	46f3      	mov	fp, lr
 801c162:	e740      	b.n	801bfe6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801c164:	2700      	movs	r7, #0
 801c166:	4638      	mov	r0, r7
 801c168:	e73d      	b.n	801bfe6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801c16a:	460f      	mov	r7, r1
 801c16c:	4608      	mov	r0, r1
 801c16e:	e73a      	b.n	801bfe6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

0801c170 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c170:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c174:	b097      	sub	sp, #92	; 0x5c
 801c176:	9214      	str	r2, [sp, #80]	; 0x50
 801c178:	9308      	str	r3, [sp, #32]
 801c17a:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801c17c:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801c180:	9312      	str	r3, [sp, #72]	; 0x48
 801c182:	9111      	str	r1, [sp, #68]	; 0x44
 801c184:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 801c188:	9015      	str	r0, [sp, #84]	; 0x54
 801c18a:	6850      	ldr	r0, [r2, #4]
 801c18c:	6812      	ldr	r2, [r2, #0]
 801c18e:	fb00 1303 	mla	r3, r0, r3, r1
 801c192:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801c196:	9309      	str	r3, [sp, #36]	; 0x24
 801c198:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c19a:	681b      	ldr	r3, [r3, #0]
 801c19c:	930b      	str	r3, [sp, #44]	; 0x2c
 801c19e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c1a0:	685b      	ldr	r3, [r3, #4]
 801c1a2:	930c      	str	r3, [sp, #48]	; 0x30
 801c1a4:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 801c1a8:	930a      	str	r3, [sp, #40]	; 0x28
 801c1aa:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801c1ac:	2b00      	cmp	r3, #0
 801c1ae:	dc03      	bgt.n	801c1b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801c1b0:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801c1b2:	2b00      	cmp	r3, #0
 801c1b4:	f340 83cb 	ble.w	801c94e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 801c1b8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c1ba:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c1be:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801c1c2:	1e48      	subs	r0, r1, #1
 801c1c4:	1e55      	subs	r5, r2, #1
 801c1c6:	9b08      	ldr	r3, [sp, #32]
 801c1c8:	2b00      	cmp	r3, #0
 801c1ca:	f340 81a3 	ble.w	801c514 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 801c1ce:	9e21      	ldr	r6, [sp, #132]	; 0x84
 801c1d0:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801c1d2:	1436      	asrs	r6, r6, #16
 801c1d4:	ea4f 4323 	mov.w	r3, r3, asr #16
 801c1d8:	d406      	bmi.n	801c1e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801c1da:	4286      	cmp	r6, r0
 801c1dc:	da04      	bge.n	801c1e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801c1de:	2b00      	cmp	r3, #0
 801c1e0:	db02      	blt.n	801c1e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801c1e2:	42ab      	cmp	r3, r5
 801c1e4:	f2c0 8197 	blt.w	801c516 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801c1e8:	3601      	adds	r6, #1
 801c1ea:	f100 8184 	bmi.w	801c4f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801c1ee:	42b1      	cmp	r1, r6
 801c1f0:	f2c0 8181 	blt.w	801c4f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801c1f4:	3301      	adds	r3, #1
 801c1f6:	f100 817e 	bmi.w	801c4f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801c1fa:	429a      	cmp	r2, r3
 801c1fc:	f2c0 817b 	blt.w	801c4f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801c200:	9b08      	ldr	r3, [sp, #32]
 801c202:	9f09      	ldr	r7, [sp, #36]	; 0x24
 801c204:	9313      	str	r3, [sp, #76]	; 0x4c
 801c206:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801c20a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801c20c:	2b00      	cmp	r3, #0
 801c20e:	f340 81a4 	ble.w	801c55a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801c212:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801c214:	9d21      	ldr	r5, [sp, #132]	; 0x84
 801c216:	1418      	asrs	r0, r3, #16
 801c218:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801c21a:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801c21e:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801c220:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801c224:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c226:	142d      	asrs	r5, r5, #16
 801c228:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801c22c:	f100 81f8 	bmi.w	801c620 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801c230:	f102 3eff 	add.w	lr, r2, #4294967295
 801c234:	4575      	cmp	r5, lr
 801c236:	f280 81f3 	bge.w	801c620 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801c23a:	2800      	cmp	r0, #0
 801c23c:	f2c0 81f0 	blt.w	801c620 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801c240:	f103 3eff 	add.w	lr, r3, #4294967295
 801c244:	4570      	cmp	r0, lr
 801c246:	f280 81eb 	bge.w	801c620 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801c24a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801c24c:	b212      	sxth	r2, r2
 801c24e:	fb00 5002 	mla	r0, r0, r2, r5
 801c252:	fa1f fe81 	uxth.w	lr, r1
 801c256:	eb03 0a00 	add.w	sl, r3, r0
 801c25a:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801c25e:	f813 9000 	ldrb.w	r9, [r3, r0]
 801c262:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801c266:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 801c26a:	b29b      	uxth	r3, r3
 801c26c:	f1bc 0f00 	cmp.w	ip, #0
 801c270:	f000 81b9 	beq.w	801c5e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 801c274:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801c278:	940d      	str	r4, [sp, #52]	; 0x34
 801c27a:	eb0a 0b02 	add.w	fp, sl, r2
 801c27e:	fa1f fa8c 	uxth.w	sl, ip
 801c282:	fb0a fe0e 	mul.w	lr, sl, lr
 801c286:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801c28a:	fa1f fa8a 	uxth.w	sl, sl
 801c28e:	eba5 050e 	sub.w	r5, r5, lr
 801c292:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801c296:	940e      	str	r4, [sp, #56]	; 0x38
 801c298:	eba3 030a 	sub.w	r3, r3, sl
 801c29c:	b2ad      	uxth	r5, r5
 801c29e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801c2a0:	b29b      	uxth	r3, r3
 801c2a2:	fb08 f505 	mul.w	r5, r8, r5
 801c2a6:	fb09 5303 	mla	r3, r9, r3, r5
 801c2aa:	fb0a 3304 	mla	r3, sl, r4, r3
 801c2ae:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801c2b0:	fb0e 3304 	mla	r3, lr, r4, r3
 801c2b4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801c2b8:	2b00      	cmp	r3, #0
 801c2ba:	f000 810f 	beq.w	801c4dc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801c2be:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801c2c0:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801c2c4:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801c2c8:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801c2cc:	f000 8190 	beq.w	801c5f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 801c2d0:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801c2d4:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801c2d8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c2dc:	fb09 f000 	mul.w	r0, r9, r0
 801c2e0:	fb0a fe0e 	mul.w	lr, sl, lr
 801c2e4:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801c2e8:	f100 0b20 	add.w	fp, r0, #32
 801c2ec:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801c2f0:	44ce      	add	lr, r9
 801c2f2:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801c2f6:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801c2fa:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801c2fe:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801c302:	ea4e 0909 	orr.w	r9, lr, r9
 801c306:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801c30a:	8868      	ldrh	r0, [r5, #2]
 801c30c:	d019      	beq.n	801c342 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801c30e:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801c312:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801c316:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c31a:	fb08 f800 	mul.w	r8, r8, r0
 801c31e:	fb0a fe0e 	mul.w	lr, sl, lr
 801c322:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801c326:	f108 0b20 	add.w	fp, r8, #32
 801c32a:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801c32e:	4486      	add	lr, r0
 801c330:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801c334:	0a00      	lsrs	r0, r0, #8
 801c336:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801c33a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c33e:	ea4e 0000 	orr.w	r0, lr, r0
 801c342:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801c346:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801c34a:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801c34e:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801c352:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c356:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801c35a:	ea4e 0909 	orr.w	r9, lr, r9
 801c35e:	ea4a 0000 	orr.w	r0, sl, r0
 801c362:	f1bc 0f00 	cmp.w	ip, #0
 801c366:	f000 8145 	beq.w	801c5f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 801c36a:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 801c36e:	3a01      	subs	r2, #1
 801c370:	0052      	lsls	r2, r2, #1
 801c372:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801c374:	3202      	adds	r2, #2
 801c376:	2cff      	cmp	r4, #255	; 0xff
 801c378:	eb05 0e02 	add.w	lr, r5, r2
 801c37c:	5aaa      	ldrh	r2, [r5, r2]
 801c37e:	d018      	beq.n	801c3b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801c380:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 801c384:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c388:	fb04 fa02 	mul.w	sl, r4, r2
 801c38c:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801c390:	fb08 f805 	mul.w	r8, r8, r5
 801c394:	f10a 0520 	add.w	r5, sl, #32
 801c398:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801c39c:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801c3a0:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801c3a4:	4442      	add	r2, r8
 801c3a6:	0a2d      	lsrs	r5, r5, #8
 801c3a8:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801c3ac:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c3b0:	432a      	orrs	r2, r5
 801c3b2:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801c3b4:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801c3b8:	2cff      	cmp	r4, #255	; 0xff
 801c3ba:	d01a      	beq.n	801c3f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 801c3bc:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 801c3c0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c3c4:	fb04 fa05 	mul.w	sl, r4, r5
 801c3c8:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801c3cc:	fb08 f80e 	mul.w	r8, r8, lr
 801c3d0:	f10a 0e20 	add.w	lr, sl, #32
 801c3d4:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801c3d8:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801c3dc:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801c3e0:	4445      	add	r5, r8
 801c3e2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801c3e6:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801c3ea:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 801c3ee:	ea45 050e 	orr.w	r5, r5, lr
 801c3f2:	fb1c fe01 	smulbb	lr, ip, r1
 801c3f6:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801c3fa:	f1cc 0810 	rsb	r8, ip, #16
 801c3fe:	eba8 0801 	sub.w	r8, r8, r1
 801c402:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801c406:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801c40a:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801c40e:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801c412:	4341      	muls	r1, r0
 801c414:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c418:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801c41c:	ea4a 0202 	orr.w	r2, sl, r2
 801c420:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801c424:	fb09 1108 	mla	r1, r9, r8, r1
 801c428:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801c42c:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801c430:	fb0c 1102 	mla	r1, ip, r2, r1
 801c434:	ea4b 0505 	orr.w	r5, fp, r5
 801c438:	fb0e 1e05 	mla	lr, lr, r5, r1
 801c43c:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801c440:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801c444:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c448:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801c44c:	ea42 0e0e 	orr.w	lr, r2, lr
 801c450:	fa1f f28e 	uxth.w	r2, lr
 801c454:	2bff      	cmp	r3, #255	; 0xff
 801c456:	d103      	bne.n	801c460 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801c458:	9912      	ldr	r1, [sp, #72]	; 0x48
 801c45a:	29ff      	cmp	r1, #255	; 0xff
 801c45c:	f000 80de 	beq.w	801c61c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 801c460:	990a      	ldr	r1, [sp, #40]	; 0x28
 801c462:	8838      	ldrh	r0, [r7, #0]
 801c464:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801c466:	434b      	muls	r3, r1
 801c468:	f103 0c01 	add.w	ip, r3, #1
 801c46c:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 801c470:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801c474:	fa5f fc83 	uxtb.w	ip, r3
 801c478:	1203      	asrs	r3, r0, #8
 801c47a:	1215      	asrs	r5, r2, #8
 801c47c:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801c480:	fb13 f30c 	smulbb	r3, r3, ip
 801c484:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801c488:	fb05 3501 	mla	r5, r5, r1, r3
 801c48c:	10c3      	asrs	r3, r0, #3
 801c48e:	10d1      	asrs	r1, r2, #3
 801c490:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801c494:	fb13 f30c 	smulbb	r3, r3, ip
 801c498:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801c49c:	fb01 3104 	mla	r1, r1, r4, r3
 801c4a0:	00c3      	lsls	r3, r0, #3
 801c4a2:	00d2      	lsls	r2, r2, #3
 801c4a4:	b2db      	uxtb	r3, r3
 801c4a6:	b2d2      	uxtb	r2, r2
 801c4a8:	fb13 f30c 	smulbb	r3, r3, ip
 801c4ac:	b2ad      	uxth	r5, r5
 801c4ae:	fb02 3304 	mla	r3, r2, r4, r3
 801c4b2:	b29a      	uxth	r2, r3
 801c4b4:	1c6b      	adds	r3, r5, #1
 801c4b6:	b289      	uxth	r1, r1
 801c4b8:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801c4bc:	1c53      	adds	r3, r2, #1
 801c4be:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801c4c2:	1c4a      	adds	r2, r1, #1
 801c4c4:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801c4c8:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801c4cc:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801c4d0:	0949      	lsrs	r1, r1, #5
 801c4d2:	432b      	orrs	r3, r5
 801c4d4:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801c4d8:	430b      	orrs	r3, r1
 801c4da:	803b      	strh	r3, [r7, #0]
 801c4dc:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801c4de:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 801c4e0:	4413      	add	r3, r2
 801c4e2:	9321      	str	r3, [sp, #132]	; 0x84
 801c4e4:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801c4e6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c4e8:	441a      	add	r2, r3
 801c4ea:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801c4ec:	9222      	str	r2, [sp, #136]	; 0x88
 801c4ee:	3b01      	subs	r3, #1
 801c4f0:	3702      	adds	r7, #2
 801c4f2:	9313      	str	r3, [sp, #76]	; 0x4c
 801c4f4:	e689      	b.n	801c20a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801c4f6:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801c4f8:	9e23      	ldr	r6, [sp, #140]	; 0x8c
 801c4fa:	9c22      	ldr	r4, [sp, #136]	; 0x88
 801c4fc:	4433      	add	r3, r6
 801c4fe:	9321      	str	r3, [sp, #132]	; 0x84
 801c500:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c502:	441c      	add	r4, r3
 801c504:	9b08      	ldr	r3, [sp, #32]
 801c506:	9422      	str	r4, [sp, #136]	; 0x88
 801c508:	3b01      	subs	r3, #1
 801c50a:	9308      	str	r3, [sp, #32]
 801c50c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c50e:	3302      	adds	r3, #2
 801c510:	9309      	str	r3, [sp, #36]	; 0x24
 801c512:	e658      	b.n	801c1c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 801c514:	d028      	beq.n	801c568 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801c516:	9b08      	ldr	r3, [sp, #32]
 801c518:	9823      	ldr	r0, [sp, #140]	; 0x8c
 801c51a:	9d21      	ldr	r5, [sp, #132]	; 0x84
 801c51c:	3b01      	subs	r3, #1
 801c51e:	fb00 5003 	mla	r0, r0, r3, r5
 801c522:	1400      	asrs	r0, r0, #16
 801c524:	f53f ae6c 	bmi.w	801c200 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801c528:	3901      	subs	r1, #1
 801c52a:	4288      	cmp	r0, r1
 801c52c:	f6bf ae68 	bge.w	801c200 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801c530:	9924      	ldr	r1, [sp, #144]	; 0x90
 801c532:	9822      	ldr	r0, [sp, #136]	; 0x88
 801c534:	fb01 0303 	mla	r3, r1, r3, r0
 801c538:	141b      	asrs	r3, r3, #16
 801c53a:	f53f ae61 	bmi.w	801c200 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801c53e:	3a01      	subs	r2, #1
 801c540:	4293      	cmp	r3, r2
 801c542:	f6bf ae5d 	bge.w	801c200 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801c546:	9b08      	ldr	r3, [sp, #32]
 801c548:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 801c54c:	9313      	str	r3, [sp, #76]	; 0x4c
 801c54e:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801c552:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801c554:	2b00      	cmp	r3, #0
 801c556:	f300 8082 	bgt.w	801c65e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801c55a:	9b08      	ldr	r3, [sp, #32]
 801c55c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801c560:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c562:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801c566:	9309      	str	r3, [sp, #36]	; 0x24
 801c568:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801c56a:	2b00      	cmp	r3, #0
 801c56c:	f340 81ef 	ble.w	801c94e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 801c570:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c574:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801c578:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801c57c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801c57e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c582:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c586:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c58a:	eef0 6a62 	vmov.f32	s13, s5
 801c58e:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c592:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c596:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c59a:	edcd 6a21 	vstr	s13, [sp, #132]	; 0x84
 801c59e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c5a2:	eef0 6a43 	vmov.f32	s13, s6
 801c5a6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c5aa:	ee12 2a90 	vmov	r2, s5
 801c5ae:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c5b2:	fb92 f3f3 	sdiv	r3, r2, r3
 801c5b6:	ee13 2a10 	vmov	r2, s6
 801c5ba:	9323      	str	r3, [sp, #140]	; 0x8c
 801c5bc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801c5be:	fb92 f3f3 	sdiv	r3, r2, r3
 801c5c2:	9324      	str	r3, [sp, #144]	; 0x90
 801c5c4:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801c5c6:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c5c8:	3b01      	subs	r3, #1
 801c5ca:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c5ce:	9311      	str	r3, [sp, #68]	; 0x44
 801c5d0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801c5d2:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
 801c5d6:	bf08      	it	eq
 801c5d8:	4613      	moveq	r3, r2
 801c5da:	9308      	str	r3, [sp, #32]
 801c5dc:	eeb0 3a67 	vmov.f32	s6, s15
 801c5e0:	eef0 2a47 	vmov.f32	s5, s14
 801c5e4:	e5e1      	b.n	801c1aa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801c5e6:	fb08 f505 	mul.w	r5, r8, r5
 801c5ea:	fb09 5303 	mla	r3, r9, r3, r5
 801c5ee:	e661      	b.n	801c2b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 801c5f0:	4681      	mov	r9, r0
 801c5f2:	e688      	b.n	801c306 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801c5f4:	f1c1 0210 	rsb	r2, r1, #16
 801c5f8:	4341      	muls	r1, r0
 801c5fa:	fb09 1902 	mla	r9, r9, r2, r1
 801c5fe:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801c602:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801c606:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801c60a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c60e:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801c612:	ea42 0909 	orr.w	r9, r2, r9
 801c616:	fa1f f289 	uxth.w	r2, r9
 801c61a:	e71b      	b.n	801c454 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801c61c:	803a      	strh	r2, [r7, #0]
 801c61e:	e75d      	b.n	801c4dc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801c620:	f115 0e01 	adds.w	lr, r5, #1
 801c624:	f53f af5a 	bmi.w	801c4dc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801c628:	4572      	cmp	r2, lr
 801c62a:	f6ff af57 	blt.w	801c4dc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801c62e:	f110 0e01 	adds.w	lr, r0, #1
 801c632:	f53f af53 	bmi.w	801c4dc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801c636:	4573      	cmp	r3, lr
 801c638:	f6ff af50 	blt.w	801c4dc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801c63c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801c63e:	9502      	str	r5, [sp, #8]
 801c640:	b21b      	sxth	r3, r3
 801c642:	b212      	sxth	r2, r2
 801c644:	e9cd 0103 	strd	r0, r1, [sp, #12]
 801c648:	9301      	str	r3, [sp, #4]
 801c64a:	9200      	str	r2, [sp, #0]
 801c64c:	e9cd c405 	strd	ip, r4, [sp, #20]
 801c650:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 801c654:	4639      	mov	r1, r7
 801c656:	9815      	ldr	r0, [sp, #84]	; 0x54
 801c658:	f7ff fc04 	bl	801be64 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 801c65c:	e73e      	b.n	801c4dc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801c65e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801c660:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801c664:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801c666:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801c66a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c66c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c670:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801c672:	141f      	asrs	r7, r3, #16
 801c674:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801c676:	141b      	asrs	r3, r3, #16
 801c678:	fb01 3707 	mla	r7, r1, r7, r3
 801c67c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801c67e:	fa1f fc82 	uxth.w	ip, r2
 801c682:	eb03 0a07 	add.w	sl, r3, r7
 801c686:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801c68a:	f813 9007 	ldrb.w	r9, [r3, r7]
 801c68e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801c692:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801c696:	b29b      	uxth	r3, r3
 801c698:	2d00      	cmp	r5, #0
 801c69a:	f000 813d 	beq.w	801c918 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 801c69e:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801c6a2:	940f      	str	r4, [sp, #60]	; 0x3c
 801c6a4:	eb0a 0b01 	add.w	fp, sl, r1
 801c6a8:	fa1f fa85 	uxth.w	sl, r5
 801c6ac:	fb0a fc0c 	mul.w	ip, sl, ip
 801c6b0:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801c6b4:	fa1f fa8a 	uxth.w	sl, sl
 801c6b8:	eba0 000c 	sub.w	r0, r0, ip
 801c6bc:	eba3 030a 	sub.w	r3, r3, sl
 801c6c0:	b280      	uxth	r0, r0
 801c6c2:	fb08 f000 	mul.w	r0, r8, r0
 801c6c6:	b29b      	uxth	r3, r3
 801c6c8:	fb09 0303 	mla	r3, r9, r3, r0
 801c6cc:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801c6ce:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801c6d2:	9410      	str	r4, [sp, #64]	; 0x40
 801c6d4:	fb0a 3300 	mla	r3, sl, r0, r3
 801c6d8:	fb0c 3304 	mla	r3, ip, r4, r3
 801c6dc:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801c6e0:	2b00      	cmp	r3, #0
 801c6e2:	f000 810b 	beq.w	801c8fc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 801c6e6:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801c6e8:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801c6ea:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801c6ee:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801c6f2:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801c6f6:	f000 8114 	beq.w	801c922 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 801c6fa:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801c6fe:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801c702:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801c706:	fb09 f707 	mul.w	r7, r9, r7
 801c70a:	fb0a fc0c 	mul.w	ip, sl, ip
 801c70e:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801c712:	f107 0b20 	add.w	fp, r7, #32
 801c716:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801c71a:	44cc      	add	ip, r9
 801c71c:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801c720:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801c724:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801c728:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801c72c:	ea4c 0909 	orr.w	r9, ip, r9
 801c730:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801c734:	8847      	ldrh	r7, [r0, #2]
 801c736:	d019      	beq.n	801c76c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 801c738:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801c73c:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801c740:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801c744:	fb08 f807 	mul.w	r8, r8, r7
 801c748:	fb0a fc0c 	mul.w	ip, sl, ip
 801c74c:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801c750:	f108 0b20 	add.w	fp, r8, #32
 801c754:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801c758:	44bc      	add	ip, r7
 801c75a:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801c75e:	0a3f      	lsrs	r7, r7, #8
 801c760:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801c764:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801c768:	ea4c 0707 	orr.w	r7, ip, r7
 801c76c:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801c770:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801c774:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801c778:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801c77c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c780:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801c784:	ea4c 0909 	orr.w	r9, ip, r9
 801c788:	ea4a 0707 	orr.w	r7, sl, r7
 801c78c:	2d00      	cmp	r5, #0
 801c78e:	f000 80ca 	beq.w	801c926 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 801c792:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801c796:	3901      	subs	r1, #1
 801c798:	0049      	lsls	r1, r1, #1
 801c79a:	3102      	adds	r1, #2
 801c79c:	eb00 0c01 	add.w	ip, r0, r1
 801c7a0:	5a41      	ldrh	r1, [r0, r1]
 801c7a2:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801c7a4:	28ff      	cmp	r0, #255	; 0xff
 801c7a6:	d019      	beq.n	801c7dc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 801c7a8:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801c7aa:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 801c7ae:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801c7b2:	fb04 fa01 	mul.w	sl, r4, r1
 801c7b6:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801c7ba:	fb08 f800 	mul.w	r8, r8, r0
 801c7be:	f10a 0020 	add.w	r0, sl, #32
 801c7c2:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801c7c6:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801c7ca:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801c7ce:	4441      	add	r1, r8
 801c7d0:	0a00      	lsrs	r0, r0, #8
 801c7d2:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801c7d6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c7da:	4301      	orrs	r1, r0
 801c7dc:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801c7de:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801c7e2:	2cff      	cmp	r4, #255	; 0xff
 801c7e4:	d01a      	beq.n	801c81c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 801c7e6:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 801c7ea:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c7ee:	fb04 fa00 	mul.w	sl, r4, r0
 801c7f2:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801c7f6:	fb08 f80c 	mul.w	r8, r8, ip
 801c7fa:	f10a 0c20 	add.w	ip, sl, #32
 801c7fe:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801c802:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801c806:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801c80a:	4440      	add	r0, r8
 801c80c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c810:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801c814:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801c818:	ea40 000c 	orr.w	r0, r0, ip
 801c81c:	fb15 fc02 	smulbb	ip, r5, r2
 801c820:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801c824:	f1c5 0810 	rsb	r8, r5, #16
 801c828:	eba8 0802 	sub.w	r8, r8, r2
 801c82c:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801c830:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801c834:	437a      	muls	r2, r7
 801c836:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801c83a:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801c83e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c842:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801c846:	fb09 2208 	mla	r2, r9, r8, r2
 801c84a:	ea4a 0101 	orr.w	r1, sl, r1
 801c84e:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801c852:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801c856:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801c85a:	fb05 2201 	mla	r2, r5, r1, r2
 801c85e:	ea4b 0000 	orr.w	r0, fp, r0
 801c862:	fb0c 2200 	mla	r2, ip, r0, r2
 801c866:	0d57      	lsrs	r7, r2, #21
 801c868:	0952      	lsrs	r2, r2, #5
 801c86a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801c86e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801c872:	433a      	orrs	r2, r7
 801c874:	2bff      	cmp	r3, #255	; 0xff
 801c876:	b292      	uxth	r2, r2
 801c878:	d102      	bne.n	801c880 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801c87a:	9912      	ldr	r1, [sp, #72]	; 0x48
 801c87c:	29ff      	cmp	r1, #255	; 0xff
 801c87e:	d063      	beq.n	801c948 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 801c880:	980a      	ldr	r0, [sp, #40]	; 0x28
 801c882:	f8be 1000 	ldrh.w	r1, [lr]
 801c886:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801c888:	4343      	muls	r3, r0
 801c88a:	1c58      	adds	r0, r3, #1
 801c88c:	eb00 2323 	add.w	r3, r0, r3, asr #8
 801c890:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801c894:	1208      	asrs	r0, r1, #8
 801c896:	b2db      	uxtb	r3, r3
 801c898:	1215      	asrs	r5, r2, #8
 801c89a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801c89e:	fb10 f003 	smulbb	r0, r0, r3
 801c8a2:	10cf      	asrs	r7, r1, #3
 801c8a4:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801c8a8:	00c9      	lsls	r1, r1, #3
 801c8aa:	fb05 0504 	mla	r5, r5, r4, r0
 801c8ae:	b2c9      	uxtb	r1, r1
 801c8b0:	10d0      	asrs	r0, r2, #3
 801c8b2:	00d2      	lsls	r2, r2, #3
 801c8b4:	fb11 f103 	smulbb	r1, r1, r3
 801c8b8:	b2d2      	uxtb	r2, r2
 801c8ba:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801c8be:	fb02 1204 	mla	r2, r2, r4, r1
 801c8c2:	fb17 f703 	smulbb	r7, r7, r3
 801c8c6:	b2ad      	uxth	r5, r5
 801c8c8:	b292      	uxth	r2, r2
 801c8ca:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801c8ce:	fb00 7004 	mla	r0, r0, r4, r7
 801c8d2:	1c6b      	adds	r3, r5, #1
 801c8d4:	1c57      	adds	r7, r2, #1
 801c8d6:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801c8da:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801c8de:	b280      	uxth	r0, r0
 801c8e0:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801c8e4:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801c8e8:	433d      	orrs	r5, r7
 801c8ea:	1c47      	adds	r7, r0, #1
 801c8ec:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801c8f0:	097f      	lsrs	r7, r7, #5
 801c8f2:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801c8f6:	433d      	orrs	r5, r7
 801c8f8:	f8ae 5000 	strh.w	r5, [lr]
 801c8fc:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801c8fe:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 801c900:	4413      	add	r3, r2
 801c902:	9321      	str	r3, [sp, #132]	; 0x84
 801c904:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801c906:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c908:	441a      	add	r2, r3
 801c90a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801c90c:	9222      	str	r2, [sp, #136]	; 0x88
 801c90e:	3b01      	subs	r3, #1
 801c910:	f10e 0e02 	add.w	lr, lr, #2
 801c914:	9313      	str	r3, [sp, #76]	; 0x4c
 801c916:	e61c      	b.n	801c552 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 801c918:	fb08 f000 	mul.w	r0, r8, r0
 801c91c:	fb09 0303 	mla	r3, r9, r3, r0
 801c920:	e6dc      	b.n	801c6dc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 801c922:	46b9      	mov	r9, r7
 801c924:	e704      	b.n	801c730 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 801c926:	f1c2 0110 	rsb	r1, r2, #16
 801c92a:	437a      	muls	r2, r7
 801c92c:	fb09 2901 	mla	r9, r9, r1, r2
 801c930:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801c934:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801c938:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801c93c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c940:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801c944:	4302      	orrs	r2, r0
 801c946:	e795      	b.n	801c874 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 801c948:	f8ae 2000 	strh.w	r2, [lr]
 801c94c:	e7d6      	b.n	801c8fc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 801c94e:	b017      	add	sp, #92	; 0x5c
 801c950:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801c954 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801c954:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c958:	b085      	sub	sp, #20
 801c95a:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 801c95e:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 801c962:	9103      	str	r1, [sp, #12]
 801c964:	fb00 7406 	mla	r4, r0, r6, r7
 801c968:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 801c96c:	2800      	cmp	r0, #0
 801c96e:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 801c972:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 801c976:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 801c97a:	9501      	str	r5, [sp, #4]
 801c97c:	eb02 0904 	add.w	r9, r2, r4
 801c980:	f2c0 8141 	blt.w	801cc06 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801c984:	4583      	cmp	fp, r0
 801c986:	f340 813e 	ble.w	801cc06 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801c98a:	2f00      	cmp	r7, #0
 801c98c:	f2c0 8137 	blt.w	801cbfe <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801c990:	42be      	cmp	r6, r7
 801c992:	f340 8134 	ble.w	801cbfe <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801c996:	f812 c004 	ldrb.w	ip, [r2, r4]
 801c99a:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 801c99e:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801c9a2:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 801c9a6:	4355      	muls	r5, r2
 801c9a8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801c9ac:	f64f 041f 	movw	r4, #63519	; 0xf81f
 801c9b0:	fb0c f203 	mul.w	r2, ip, r3
 801c9b4:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801c9b8:	f605 0501 	addw	r5, r5, #2049	; 0x801
 801c9bc:	441d      	add	r5, r3
 801c9be:	f102 0320 	add.w	r3, r2, #32
 801c9c2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801c9c6:	0a1b      	lsrs	r3, r3, #8
 801c9c8:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801c9cc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801c9d0:	431c      	orrs	r4, r3
 801c9d2:	1c7b      	adds	r3, r7, #1
 801c9d4:	f100 811c 	bmi.w	801cc10 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801c9d8:	429e      	cmp	r6, r3
 801c9da:	f340 8119 	ble.w	801cc10 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801c9de:	2900      	cmp	r1, #0
 801c9e0:	f000 8119 	beq.w	801cc16 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 801c9e4:	9a01      	ldr	r2, [sp, #4]
 801c9e6:	f899 3001 	ldrb.w	r3, [r9, #1]
 801c9ea:	8855      	ldrh	r5, [r2, #2]
 801c9ec:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801c9f0:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 801c9f4:	fb08 f802 	mul.w	r8, r8, r2
 801c9f8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c9fc:	f64f 021f 	movw	r2, #63519	; 0xf81f
 801ca00:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801ca04:	435d      	muls	r5, r3
 801ca06:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801ca0a:	44d0      	add	r8, sl
 801ca0c:	f105 0a20 	add.w	sl, r5, #32
 801ca10:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801ca14:	0a2d      	lsrs	r5, r5, #8
 801ca16:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801ca1a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801ca1e:	432a      	orrs	r2, r5
 801ca20:	3001      	adds	r0, #1
 801ca22:	f100 80fe 	bmi.w	801cc22 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801ca26:	4583      	cmp	fp, r0
 801ca28:	f340 80fb 	ble.w	801cc22 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801ca2c:	f1be 0f00 	cmp.w	lr, #0
 801ca30:	f000 80fc 	beq.w	801cc2c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 801ca34:	2f00      	cmp	r7, #0
 801ca36:	f2c0 80f1 	blt.w	801cc1c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801ca3a:	42be      	cmp	r6, r7
 801ca3c:	f340 80ee 	ble.w	801cc1c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801ca40:	9801      	ldr	r0, [sp, #4]
 801ca42:	f819 5006 	ldrb.w	r5, [r9, r6]
 801ca46:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801ca4a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801ca4e:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 801ca52:	fb0a fa00 	mul.w	sl, sl, r0
 801ca56:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 801ca5a:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801ca5e:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 801ca62:	fb05 f808 	mul.w	r8, r5, r8
 801ca66:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 801ca6a:	4482      	add	sl, r0
 801ca6c:	f108 0020 	add.w	r0, r8, #32
 801ca70:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801ca74:	0a00      	lsrs	r0, r0, #8
 801ca76:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801ca7a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801ca7e:	ea4b 0b00 	orr.w	fp, fp, r0
 801ca82:	3701      	adds	r7, #1
 801ca84:	f100 80d7 	bmi.w	801cc36 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801ca88:	42be      	cmp	r6, r7
 801ca8a:	f340 80d4 	ble.w	801cc36 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801ca8e:	2900      	cmp	r1, #0
 801ca90:	f000 80d4 	beq.w	801cc3c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 801ca94:	3601      	adds	r6, #1
 801ca96:	9801      	ldr	r0, [sp, #4]
 801ca98:	f819 7006 	ldrb.w	r7, [r9, r6]
 801ca9c:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801caa0:	ea4f 09e7 	mov.w	r9, r7, asr #3
 801caa4:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 801caa8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801caac:	fb09 f906 	mul.w	r9, r9, r6
 801cab0:	fb07 f800 	mul.w	r8, r7, r0
 801cab4:	f64f 001f 	movw	r0, #63519	; 0xf81f
 801cab8:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801cabc:	f609 0901 	addw	r9, r9, #2049	; 0x801
 801cac0:	44d1      	add	r9, sl
 801cac2:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801cac6:	f108 0020 	add.w	r0, r8, #32
 801caca:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801cace:	0a00      	lsrs	r0, r0, #8
 801cad0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801cad4:	4330      	orrs	r0, r6
 801cad6:	b28e      	uxth	r6, r1
 801cad8:	fa1f f98e 	uxth.w	r9, lr
 801cadc:	fb06 f809 	mul.w	r8, r6, r9
 801cae0:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 801cae4:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801cae8:	0136      	lsls	r6, r6, #4
 801caea:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801caee:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801caf2:	9601      	str	r6, [sp, #4]
 801caf4:	ea4a 0404 	orr.w	r4, sl, r4
 801caf8:	fa1f f689 	uxth.w	r6, r9
 801cafc:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801cb00:	fb11 f90e 	smulbb	r9, r1, lr
 801cb04:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 801cb08:	9602      	str	r6, [sp, #8]
 801cb0a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801cb0e:	4626      	mov	r6, r4
 801cb10:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801cb14:	f1ce 0410 	rsb	r4, lr, #16
 801cb18:	1a64      	subs	r4, r4, r1
 801cb1a:	ea4a 0202 	orr.w	r2, sl, r2
 801cb1e:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801cb22:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801cb26:	434a      	muls	r2, r1
 801cb28:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801cb2c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801cb30:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801cb34:	fb04 2406 	mla	r4, r4, r6, r2
 801cb38:	ea4a 0000 	orr.w	r0, sl, r0
 801cb3c:	fb09 4200 	mla	r2, r9, r0, r4
 801cb40:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801cb44:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801cb48:	9801      	ldr	r0, [sp, #4]
 801cb4a:	9903      	ldr	r1, [sp, #12]
 801cb4c:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801cb50:	ea44 0b0b 	orr.w	fp, r4, fp
 801cb54:	9c02      	ldr	r4, [sp, #8]
 801cb56:	8809      	ldrh	r1, [r1, #0]
 801cb58:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 801cb5c:	1b00      	subs	r0, r0, r4
 801cb5e:	9c01      	ldr	r4, [sp, #4]
 801cb60:	eba4 0608 	sub.w	r6, r4, r8
 801cb64:	b2b6      	uxth	r6, r6
 801cb66:	b280      	uxth	r0, r0
 801cb68:	4373      	muls	r3, r6
 801cb6a:	fb0c 3300 	mla	r3, ip, r0, r3
 801cb6e:	9802      	ldr	r0, [sp, #8]
 801cb70:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801cb74:	fb00 3505 	mla	r5, r0, r5, r3
 801cb78:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801cb7c:	fb08 5707 	mla	r7, r8, r7, r5
 801cb80:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801cb84:	120b      	asrs	r3, r1, #8
 801cb86:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801cb8a:	ea6f 2727 	mvn.w	r7, r7, asr #8
 801cb8e:	b2ff      	uxtb	r7, r7
 801cb90:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801cb94:	10c8      	asrs	r0, r1, #3
 801cb96:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801cb9a:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801cb9e:	00c9      	lsls	r1, r1, #3
 801cba0:	437b      	muls	r3, r7
 801cba2:	ea42 0e0e 	orr.w	lr, r2, lr
 801cba6:	b2c9      	uxtb	r1, r1
 801cba8:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801cbac:	fa1f f28e 	uxth.w	r2, lr
 801cbb0:	4378      	muls	r0, r7
 801cbb2:	434f      	muls	r7, r1
 801cbb4:	1c59      	adds	r1, r3, #1
 801cbb6:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801cbba:	1213      	asrs	r3, r2, #8
 801cbbc:	f023 0307 	bic.w	r3, r3, #7
 801cbc0:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801cbc4:	1c41      	adds	r1, r0, #1
 801cbc6:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801cbca:	10d1      	asrs	r1, r2, #3
 801cbcc:	f021 0103 	bic.w	r1, r1, #3
 801cbd0:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801cbd4:	021b      	lsls	r3, r3, #8
 801cbd6:	00c9      	lsls	r1, r1, #3
 801cbd8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801cbdc:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801cbe0:	430b      	orrs	r3, r1
 801cbe2:	1c79      	adds	r1, r7, #1
 801cbe4:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 801cbe8:	00d2      	lsls	r2, r2, #3
 801cbea:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801cbee:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801cbf2:	431a      	orrs	r2, r3
 801cbf4:	9b03      	ldr	r3, [sp, #12]
 801cbf6:	801a      	strh	r2, [r3, #0]
 801cbf8:	b005      	add	sp, #20
 801cbfa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cbfe:	f04f 0c00 	mov.w	ip, #0
 801cc02:	4664      	mov	r4, ip
 801cc04:	e6e5      	b.n	801c9d2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 801cc06:	2300      	movs	r3, #0
 801cc08:	469c      	mov	ip, r3
 801cc0a:	461a      	mov	r2, r3
 801cc0c:	461c      	mov	r4, r3
 801cc0e:	e707      	b.n	801ca20 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801cc10:	2300      	movs	r3, #0
 801cc12:	461a      	mov	r2, r3
 801cc14:	e704      	b.n	801ca20 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801cc16:	460b      	mov	r3, r1
 801cc18:	460a      	mov	r2, r1
 801cc1a:	e701      	b.n	801ca20 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801cc1c:	2500      	movs	r5, #0
 801cc1e:	46ab      	mov	fp, r5
 801cc20:	e72f      	b.n	801ca82 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 801cc22:	2700      	movs	r7, #0
 801cc24:	463d      	mov	r5, r7
 801cc26:	4638      	mov	r0, r7
 801cc28:	46bb      	mov	fp, r7
 801cc2a:	e754      	b.n	801cad6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801cc2c:	4677      	mov	r7, lr
 801cc2e:	4675      	mov	r5, lr
 801cc30:	4670      	mov	r0, lr
 801cc32:	46f3      	mov	fp, lr
 801cc34:	e74f      	b.n	801cad6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801cc36:	2700      	movs	r7, #0
 801cc38:	4638      	mov	r0, r7
 801cc3a:	e74c      	b.n	801cad6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801cc3c:	460f      	mov	r7, r1
 801cc3e:	4608      	mov	r0, r1
 801cc40:	e749      	b.n	801cad6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

0801cc44 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801cc44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cc48:	b093      	sub	sp, #76	; 0x4c
 801cc4a:	9210      	str	r2, [sp, #64]	; 0x40
 801cc4c:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801cc4e:	910e      	str	r1, [sp, #56]	; 0x38
 801cc50:	9306      	str	r3, [sp, #24]
 801cc52:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 801cc56:	9011      	str	r0, [sp, #68]	; 0x44
 801cc58:	6850      	ldr	r0, [r2, #4]
 801cc5a:	6812      	ldr	r2, [r2, #0]
 801cc5c:	fb00 1303 	mla	r3, r0, r3, r1
 801cc60:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801cc64:	9307      	str	r3, [sp, #28]
 801cc66:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801cc68:	681b      	ldr	r3, [r3, #0]
 801cc6a:	9308      	str	r3, [sp, #32]
 801cc6c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801cc6e:	685b      	ldr	r3, [r3, #4]
 801cc70:	9309      	str	r3, [sp, #36]	; 0x24
 801cc72:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801cc74:	2b00      	cmp	r3, #0
 801cc76:	dc03      	bgt.n	801cc80 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801cc78:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801cc7a:	2b00      	cmp	r3, #0
 801cc7c:	f340 83b4 	ble.w	801d3e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 801cc80:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801cc82:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801cc86:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801cc8a:	1e48      	subs	r0, r1, #1
 801cc8c:	1e55      	subs	r5, r2, #1
 801cc8e:	9b06      	ldr	r3, [sp, #24]
 801cc90:	2b00      	cmp	r3, #0
 801cc92:	f340 8163 	ble.w	801cf5c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 801cc96:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 801cc98:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801cc9a:	1436      	asrs	r6, r6, #16
 801cc9c:	ea4f 4323 	mov.w	r3, r3, asr #16
 801cca0:	d406      	bmi.n	801ccb0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801cca2:	4286      	cmp	r6, r0
 801cca4:	da04      	bge.n	801ccb0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801cca6:	2b00      	cmp	r3, #0
 801cca8:	db02      	blt.n	801ccb0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801ccaa:	42ab      	cmp	r3, r5
 801ccac:	f2c0 8157 	blt.w	801cf5e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 801ccb0:	3601      	adds	r6, #1
 801ccb2:	f100 8144 	bmi.w	801cf3e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801ccb6:	42b1      	cmp	r1, r6
 801ccb8:	f2c0 8141 	blt.w	801cf3e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801ccbc:	3301      	adds	r3, #1
 801ccbe:	f100 813e 	bmi.w	801cf3e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801ccc2:	429a      	cmp	r2, r3
 801ccc4:	f2c0 813b 	blt.w	801cf3e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801ccc8:	9b06      	ldr	r3, [sp, #24]
 801ccca:	9f07      	ldr	r7, [sp, #28]
 801cccc:	930f      	str	r3, [sp, #60]	; 0x3c
 801ccce:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801ccd2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801ccd4:	2b00      	cmp	r3, #0
 801ccd6:	f340 8164 	ble.w	801cfa2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 801ccda:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801ccdc:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 801ccde:	1418      	asrs	r0, r3, #16
 801cce0:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801cce2:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801cce6:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801cce8:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801ccec:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ccee:	142d      	asrs	r5, r5, #16
 801ccf0:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801ccf4:	f100 81ee 	bmi.w	801d0d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801ccf8:	f102 3eff 	add.w	lr, r2, #4294967295
 801ccfc:	4575      	cmp	r5, lr
 801ccfe:	f280 81e9 	bge.w	801d0d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801cd02:	2800      	cmp	r0, #0
 801cd04:	f2c0 81e6 	blt.w	801d0d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801cd08:	f103 3eff 	add.w	lr, r3, #4294967295
 801cd0c:	4570      	cmp	r0, lr
 801cd0e:	f280 81e1 	bge.w	801d0d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801cd12:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801cd14:	b212      	sxth	r2, r2
 801cd16:	fb00 5002 	mla	r0, r0, r2, r5
 801cd1a:	fa1f fe81 	uxth.w	lr, r1
 801cd1e:	eb03 0a00 	add.w	sl, r3, r0
 801cd22:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801cd26:	f813 9000 	ldrb.w	r9, [r3, r0]
 801cd2a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801cd2e:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 801cd32:	b29b      	uxth	r3, r3
 801cd34:	f1bc 0f00 	cmp.w	ip, #0
 801cd38:	f000 8179 	beq.w	801d02e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801cd3c:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801cd40:	940a      	str	r4, [sp, #40]	; 0x28
 801cd42:	eb0a 0b02 	add.w	fp, sl, r2
 801cd46:	fa1f fa8c 	uxth.w	sl, ip
 801cd4a:	fb0a fe0e 	mul.w	lr, sl, lr
 801cd4e:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801cd52:	fa1f fa8a 	uxth.w	sl, sl
 801cd56:	eba5 050e 	sub.w	r5, r5, lr
 801cd5a:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801cd5e:	940b      	str	r4, [sp, #44]	; 0x2c
 801cd60:	eba3 030a 	sub.w	r3, r3, sl
 801cd64:	b2ad      	uxth	r5, r5
 801cd66:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801cd68:	b29b      	uxth	r3, r3
 801cd6a:	fb08 f505 	mul.w	r5, r8, r5
 801cd6e:	fb09 5303 	mla	r3, r9, r3, r5
 801cd72:	fb0a 3304 	mla	r3, sl, r4, r3
 801cd76:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801cd78:	fb0e 3304 	mla	r3, lr, r4, r3
 801cd7c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801cd80:	2b00      	cmp	r3, #0
 801cd82:	f000 80cf 	beq.w	801cf24 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801cd86:	9c08      	ldr	r4, [sp, #32]
 801cd88:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801cd8c:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801cd90:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801cd94:	f000 8150 	beq.w	801d038 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 801cd98:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801cd9c:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801cda0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801cda4:	fb09 f000 	mul.w	r0, r9, r0
 801cda8:	fb0a fe0e 	mul.w	lr, sl, lr
 801cdac:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801cdb0:	f100 0b20 	add.w	fp, r0, #32
 801cdb4:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801cdb8:	44ce      	add	lr, r9
 801cdba:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801cdbe:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801cdc2:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801cdc6:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801cdca:	ea4e 0909 	orr.w	r9, lr, r9
 801cdce:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801cdd2:	8868      	ldrh	r0, [r5, #2]
 801cdd4:	d019      	beq.n	801ce0a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801cdd6:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801cdda:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801cdde:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801cde2:	fb08 f800 	mul.w	r8, r8, r0
 801cde6:	fb0a fe0e 	mul.w	lr, sl, lr
 801cdea:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801cdee:	f108 0b20 	add.w	fp, r8, #32
 801cdf2:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801cdf6:	4486      	add	lr, r0
 801cdf8:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801cdfc:	0a00      	lsrs	r0, r0, #8
 801cdfe:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801ce02:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801ce06:	ea4e 0000 	orr.w	r0, lr, r0
 801ce0a:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801ce0e:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801ce12:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801ce16:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801ce1a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801ce1e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801ce22:	ea4e 0909 	orr.w	r9, lr, r9
 801ce26:	ea4a 0000 	orr.w	r0, sl, r0
 801ce2a:	f1bc 0f00 	cmp.w	ip, #0
 801ce2e:	f000 8105 	beq.w	801d03c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801ce32:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 801ce36:	3a01      	subs	r2, #1
 801ce38:	0052      	lsls	r2, r2, #1
 801ce3a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801ce3c:	3202      	adds	r2, #2
 801ce3e:	2cff      	cmp	r4, #255	; 0xff
 801ce40:	eb05 0e02 	add.w	lr, r5, r2
 801ce44:	5aaa      	ldrh	r2, [r5, r2]
 801ce46:	d018      	beq.n	801ce7a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801ce48:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 801ce4c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ce50:	fb04 fa02 	mul.w	sl, r4, r2
 801ce54:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801ce58:	fb08 f805 	mul.w	r8, r8, r5
 801ce5c:	f10a 0520 	add.w	r5, sl, #32
 801ce60:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801ce64:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801ce68:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801ce6c:	4442      	add	r2, r8
 801ce6e:	0a2d      	lsrs	r5, r5, #8
 801ce70:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801ce74:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801ce78:	432a      	orrs	r2, r5
 801ce7a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801ce7c:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801ce80:	2cff      	cmp	r4, #255	; 0xff
 801ce82:	d01a      	beq.n	801ceba <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801ce84:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 801ce88:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801ce8c:	fb04 fa05 	mul.w	sl, r4, r5
 801ce90:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801ce94:	fb08 f80e 	mul.w	r8, r8, lr
 801ce98:	f10a 0e20 	add.w	lr, sl, #32
 801ce9c:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801cea0:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801cea4:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801cea8:	4445      	add	r5, r8
 801ceaa:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801ceae:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801ceb2:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 801ceb6:	ea45 050e 	orr.w	r5, r5, lr
 801ceba:	fb1c fe01 	smulbb	lr, ip, r1
 801cebe:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801cec2:	f1cc 0810 	rsb	r8, ip, #16
 801cec6:	eba8 0801 	sub.w	r8, r8, r1
 801ceca:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801cece:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801ced2:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801ced6:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801ceda:	4341      	muls	r1, r0
 801cedc:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801cee0:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801cee4:	ea4a 0202 	orr.w	r2, sl, r2
 801cee8:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801ceec:	fb09 1108 	mla	r1, r9, r8, r1
 801cef0:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801cef4:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801cef8:	fb0c 1102 	mla	r1, ip, r2, r1
 801cefc:	ea4b 0505 	orr.w	r5, fp, r5
 801cf00:	fb0e 1e05 	mla	lr, lr, r5, r1
 801cf04:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801cf08:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801cf0c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801cf10:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801cf14:	ea42 0e0e 	orr.w	lr, r2, lr
 801cf18:	fa1f f28e 	uxth.w	r2, lr
 801cf1c:	2bff      	cmp	r3, #255	; 0xff
 801cf1e:	f040 80a1 	bne.w	801d064 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 801cf22:	803a      	strh	r2, [r7, #0]
 801cf24:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801cf26:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 801cf28:	4413      	add	r3, r2
 801cf2a:	931d      	str	r3, [sp, #116]	; 0x74
 801cf2c:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 801cf2e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801cf30:	441a      	add	r2, r3
 801cf32:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801cf34:	921e      	str	r2, [sp, #120]	; 0x78
 801cf36:	3b01      	subs	r3, #1
 801cf38:	3702      	adds	r7, #2
 801cf3a:	930f      	str	r3, [sp, #60]	; 0x3c
 801cf3c:	e6c9      	b.n	801ccd2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801cf3e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801cf40:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 801cf42:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 801cf44:	4433      	add	r3, r6
 801cf46:	931d      	str	r3, [sp, #116]	; 0x74
 801cf48:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801cf4a:	441c      	add	r4, r3
 801cf4c:	9b06      	ldr	r3, [sp, #24]
 801cf4e:	941e      	str	r4, [sp, #120]	; 0x78
 801cf50:	3b01      	subs	r3, #1
 801cf52:	9306      	str	r3, [sp, #24]
 801cf54:	9b07      	ldr	r3, [sp, #28]
 801cf56:	3302      	adds	r3, #2
 801cf58:	9307      	str	r3, [sp, #28]
 801cf5a:	e698      	b.n	801cc8e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801cf5c:	d028      	beq.n	801cfb0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801cf5e:	9b06      	ldr	r3, [sp, #24]
 801cf60:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801cf62:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 801cf64:	3b01      	subs	r3, #1
 801cf66:	fb00 5003 	mla	r0, r0, r3, r5
 801cf6a:	1400      	asrs	r0, r0, #16
 801cf6c:	f53f aeac 	bmi.w	801ccc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801cf70:	3901      	subs	r1, #1
 801cf72:	4288      	cmp	r0, r1
 801cf74:	f6bf aea8 	bge.w	801ccc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801cf78:	9920      	ldr	r1, [sp, #128]	; 0x80
 801cf7a:	981e      	ldr	r0, [sp, #120]	; 0x78
 801cf7c:	fb01 0303 	mla	r3, r1, r3, r0
 801cf80:	141b      	asrs	r3, r3, #16
 801cf82:	f53f aea1 	bmi.w	801ccc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801cf86:	3a01      	subs	r2, #1
 801cf88:	4293      	cmp	r3, r2
 801cf8a:	f6bf ae9d 	bge.w	801ccc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801cf8e:	9b06      	ldr	r3, [sp, #24]
 801cf90:	f8dd e01c 	ldr.w	lr, [sp, #28]
 801cf94:	930f      	str	r3, [sp, #60]	; 0x3c
 801cf96:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801cf9a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801cf9c:	2b00      	cmp	r3, #0
 801cf9e:	f300 80b6 	bgt.w	801d10e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 801cfa2:	9b06      	ldr	r3, [sp, #24]
 801cfa4:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801cfa8:	9b07      	ldr	r3, [sp, #28]
 801cfaa:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801cfae:	9307      	str	r3, [sp, #28]
 801cfb0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801cfb2:	2b00      	cmp	r3, #0
 801cfb4:	f340 8218 	ble.w	801d3e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 801cfb8:	ee30 0a04 	vadd.f32	s0, s0, s8
 801cfbc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801cfc0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801cfc4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801cfc6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801cfca:	ee31 1a05 	vadd.f32	s2, s2, s10
 801cfce:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801cfd2:	eef0 6a62 	vmov.f32	s13, s5
 801cfd6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801cfda:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801cfde:	ee77 2a62 	vsub.f32	s5, s14, s5
 801cfe2:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 801cfe6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801cfea:	eef0 6a43 	vmov.f32	s13, s6
 801cfee:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801cff2:	ee12 2a90 	vmov	r2, s5
 801cff6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801cffa:	fb92 f3f3 	sdiv	r3, r2, r3
 801cffe:	ee13 2a10 	vmov	r2, s6
 801d002:	931f      	str	r3, [sp, #124]	; 0x7c
 801d004:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801d006:	fb92 f3f3 	sdiv	r3, r2, r3
 801d00a:	9320      	str	r3, [sp, #128]	; 0x80
 801d00c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d00e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801d010:	3b01      	subs	r3, #1
 801d012:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d016:	930e      	str	r3, [sp, #56]	; 0x38
 801d018:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801d01a:	edcd 6a1e 	vstr	s13, [sp, #120]	; 0x78
 801d01e:	bf08      	it	eq
 801d020:	4613      	moveq	r3, r2
 801d022:	9306      	str	r3, [sp, #24]
 801d024:	eeb0 3a67 	vmov.f32	s6, s15
 801d028:	eef0 2a47 	vmov.f32	s5, s14
 801d02c:	e621      	b.n	801cc72 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801d02e:	fb08 f505 	mul.w	r5, r8, r5
 801d032:	fb09 5303 	mla	r3, r9, r3, r5
 801d036:	e6a1      	b.n	801cd7c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 801d038:	4681      	mov	r9, r0
 801d03a:	e6c8      	b.n	801cdce <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 801d03c:	f1c1 0210 	rsb	r2, r1, #16
 801d040:	4341      	muls	r1, r0
 801d042:	fb09 1902 	mla	r9, r9, r2, r1
 801d046:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801d04a:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801d04e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801d052:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d056:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801d05a:	ea42 0909 	orr.w	r9, r2, r9
 801d05e:	fa1f f289 	uxth.w	r2, r9
 801d062:	e75b      	b.n	801cf1c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801d064:	f8b7 c000 	ldrh.w	ip, [r7]
 801d068:	43db      	mvns	r3, r3
 801d06a:	ea4f 202c 	mov.w	r0, ip, asr #8
 801d06e:	fa5f fe83 	uxtb.w	lr, r3
 801d072:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801d076:	fb00 f00e 	mul.w	r0, r0, lr
 801d07a:	1c41      	adds	r1, r0, #1
 801d07c:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801d080:	1211      	asrs	r1, r2, #8
 801d082:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801d086:	f021 0107 	bic.w	r1, r1, #7
 801d08a:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801d08e:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801d092:	48d7      	ldr	r0, [pc, #860]	; (801d3f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 801d094:	fb05 f50e 	mul.w	r5, r5, lr
 801d098:	b2c9      	uxtb	r1, r1
 801d09a:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 801d09e:	1c69      	adds	r1, r5, #1
 801d0a0:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801d0a4:	10d1      	asrs	r1, r2, #3
 801d0a6:	f021 0103 	bic.w	r1, r1, #3
 801d0aa:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 801d0ae:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801d0b2:	b2db      	uxtb	r3, r3
 801d0b4:	00c9      	lsls	r1, r1, #3
 801d0b6:	fb03 f30e 	mul.w	r3, r3, lr
 801d0ba:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801d0be:	4301      	orrs	r1, r0
 801d0c0:	1c58      	adds	r0, r3, #1
 801d0c2:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801d0c6:	00d2      	lsls	r2, r2, #3
 801d0c8:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801d0cc:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801d0d0:	430a      	orrs	r2, r1
 801d0d2:	e726      	b.n	801cf22 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 801d0d4:	f115 0e01 	adds.w	lr, r5, #1
 801d0d8:	f53f af24 	bmi.w	801cf24 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801d0dc:	4572      	cmp	r2, lr
 801d0de:	f6ff af21 	blt.w	801cf24 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801d0e2:	f110 0e01 	adds.w	lr, r0, #1
 801d0e6:	f53f af1d 	bmi.w	801cf24 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801d0ea:	4573      	cmp	r3, lr
 801d0ec:	f6ff af1a 	blt.w	801cf24 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801d0f0:	b21b      	sxth	r3, r3
 801d0f2:	b212      	sxth	r2, r2
 801d0f4:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 801d0f8:	e9cd 5002 	strd	r5, r0, [sp, #8]
 801d0fc:	9301      	str	r3, [sp, #4]
 801d0fe:	9200      	str	r2, [sp, #0]
 801d100:	4639      	mov	r1, r7
 801d102:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 801d106:	9811      	ldr	r0, [sp, #68]	; 0x44
 801d108:	f7ff fc24 	bl	801c954 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801d10c:	e70a      	b.n	801cf24 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801d10e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801d110:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801d114:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801d116:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801d11a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d11c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d120:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801d122:	141f      	asrs	r7, r3, #16
 801d124:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801d126:	141b      	asrs	r3, r3, #16
 801d128:	fb01 3707 	mla	r7, r1, r7, r3
 801d12c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d12e:	fa1f fc82 	uxth.w	ip, r2
 801d132:	eb03 0a07 	add.w	sl, r3, r7
 801d136:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801d13a:	f813 9007 	ldrb.w	r9, [r3, r7]
 801d13e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801d142:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801d146:	b29b      	uxth	r3, r3
 801d148:	2d00      	cmp	r5, #0
 801d14a:	f000 80fe 	beq.w	801d34a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 801d14e:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801d152:	940c      	str	r4, [sp, #48]	; 0x30
 801d154:	eb0a 0b01 	add.w	fp, sl, r1
 801d158:	fa1f fa85 	uxth.w	sl, r5
 801d15c:	fb0a fc0c 	mul.w	ip, sl, ip
 801d160:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801d164:	fa1f fa8a 	uxth.w	sl, sl
 801d168:	eba0 000c 	sub.w	r0, r0, ip
 801d16c:	eba3 030a 	sub.w	r3, r3, sl
 801d170:	b280      	uxth	r0, r0
 801d172:	fb08 f000 	mul.w	r0, r8, r0
 801d176:	b29b      	uxth	r3, r3
 801d178:	fb09 0303 	mla	r3, r9, r3, r0
 801d17c:	980c      	ldr	r0, [sp, #48]	; 0x30
 801d17e:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801d182:	940d      	str	r4, [sp, #52]	; 0x34
 801d184:	fb0a 3300 	mla	r3, sl, r0, r3
 801d188:	fb0c 3304 	mla	r3, ip, r4, r3
 801d18c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801d190:	2b00      	cmp	r3, #0
 801d192:	f000 80cc 	beq.w	801d32e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 801d196:	9808      	ldr	r0, [sp, #32]
 801d198:	9c08      	ldr	r4, [sp, #32]
 801d19a:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801d19e:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801d1a2:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801d1a6:	f000 80d5 	beq.w	801d354 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801d1aa:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801d1ae:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801d1b2:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801d1b6:	fb09 f707 	mul.w	r7, r9, r7
 801d1ba:	fb0a fc0c 	mul.w	ip, sl, ip
 801d1be:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801d1c2:	f107 0b20 	add.w	fp, r7, #32
 801d1c6:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801d1ca:	44cc      	add	ip, r9
 801d1cc:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801d1d0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801d1d4:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801d1d8:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801d1dc:	ea4c 0909 	orr.w	r9, ip, r9
 801d1e0:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801d1e4:	8847      	ldrh	r7, [r0, #2]
 801d1e6:	d019      	beq.n	801d21c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 801d1e8:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801d1ec:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801d1f0:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801d1f4:	fb08 f807 	mul.w	r8, r8, r7
 801d1f8:	fb0a fc0c 	mul.w	ip, sl, ip
 801d1fc:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801d200:	f108 0b20 	add.w	fp, r8, #32
 801d204:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801d208:	44bc      	add	ip, r7
 801d20a:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801d20e:	0a3f      	lsrs	r7, r7, #8
 801d210:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801d214:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801d218:	ea4c 0707 	orr.w	r7, ip, r7
 801d21c:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801d220:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801d224:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801d228:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801d22c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801d230:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801d234:	ea4c 0909 	orr.w	r9, ip, r9
 801d238:	ea4a 0707 	orr.w	r7, sl, r7
 801d23c:	2d00      	cmp	r5, #0
 801d23e:	f000 808b 	beq.w	801d358 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 801d242:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801d246:	3901      	subs	r1, #1
 801d248:	0049      	lsls	r1, r1, #1
 801d24a:	3102      	adds	r1, #2
 801d24c:	eb00 0c01 	add.w	ip, r0, r1
 801d250:	5a41      	ldrh	r1, [r0, r1]
 801d252:	980c      	ldr	r0, [sp, #48]	; 0x30
 801d254:	28ff      	cmp	r0, #255	; 0xff
 801d256:	d019      	beq.n	801d28c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 801d258:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801d25a:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 801d25e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801d262:	fb04 fa01 	mul.w	sl, r4, r1
 801d266:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801d26a:	fb08 f800 	mul.w	r8, r8, r0
 801d26e:	f10a 0020 	add.w	r0, sl, #32
 801d272:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801d276:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801d27a:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801d27e:	4441      	add	r1, r8
 801d280:	0a00      	lsrs	r0, r0, #8
 801d282:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801d286:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801d28a:	4301      	orrs	r1, r0
 801d28c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801d28e:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801d292:	2cff      	cmp	r4, #255	; 0xff
 801d294:	d01a      	beq.n	801d2cc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 801d296:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 801d29a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801d29e:	fb04 fa00 	mul.w	sl, r4, r0
 801d2a2:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801d2a6:	fb08 f80c 	mul.w	r8, r8, ip
 801d2aa:	f10a 0c20 	add.w	ip, sl, #32
 801d2ae:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801d2b2:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801d2b6:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801d2ba:	4440      	add	r0, r8
 801d2bc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d2c0:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801d2c4:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801d2c8:	ea40 000c 	orr.w	r0, r0, ip
 801d2cc:	fb15 fc02 	smulbb	ip, r5, r2
 801d2d0:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801d2d4:	f1c5 0810 	rsb	r8, r5, #16
 801d2d8:	eba8 0802 	sub.w	r8, r8, r2
 801d2dc:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801d2e0:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801d2e4:	437a      	muls	r2, r7
 801d2e6:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801d2ea:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801d2ee:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801d2f2:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801d2f6:	fb09 2208 	mla	r2, r9, r8, r2
 801d2fa:	ea4a 0101 	orr.w	r1, sl, r1
 801d2fe:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801d302:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801d306:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801d30a:	fb05 2201 	mla	r2, r5, r1, r2
 801d30e:	ea4b 0000 	orr.w	r0, fp, r0
 801d312:	fb0c 2200 	mla	r2, ip, r0, r2
 801d316:	0d57      	lsrs	r7, r2, #21
 801d318:	0952      	lsrs	r2, r2, #5
 801d31a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801d31e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801d322:	433a      	orrs	r2, r7
 801d324:	2bff      	cmp	r3, #255	; 0xff
 801d326:	b292      	uxth	r2, r2
 801d328:	d127      	bne.n	801d37a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 801d32a:	f8ae 2000 	strh.w	r2, [lr]
 801d32e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801d330:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 801d332:	4413      	add	r3, r2
 801d334:	931d      	str	r3, [sp, #116]	; 0x74
 801d336:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 801d338:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d33a:	441a      	add	r2, r3
 801d33c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801d33e:	921e      	str	r2, [sp, #120]	; 0x78
 801d340:	3b01      	subs	r3, #1
 801d342:	f10e 0e02 	add.w	lr, lr, #2
 801d346:	930f      	str	r3, [sp, #60]	; 0x3c
 801d348:	e627      	b.n	801cf9a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801d34a:	fb08 f000 	mul.w	r0, r8, r0
 801d34e:	fb09 0303 	mla	r3, r9, r3, r0
 801d352:	e71b      	b.n	801d18c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 801d354:	46b9      	mov	r9, r7
 801d356:	e743      	b.n	801d1e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 801d358:	f1c2 0110 	rsb	r1, r2, #16
 801d35c:	437a      	muls	r2, r7
 801d35e:	fb09 2901 	mla	r9, r9, r1, r2
 801d362:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801d366:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801d36a:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801d36e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801d372:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801d376:	4302      	orrs	r2, r0
 801d378:	e7d4      	b.n	801d324 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 801d37a:	f8be 7000 	ldrh.w	r7, [lr]
 801d37e:	4c1c      	ldr	r4, [pc, #112]	; (801d3f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 801d380:	43db      	mvns	r3, r3
 801d382:	1238      	asrs	r0, r7, #8
 801d384:	fa5f fc83 	uxtb.w	ip, r3
 801d388:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801d38c:	10fd      	asrs	r5, r7, #3
 801d38e:	fb00 f00c 	mul.w	r0, r0, ip
 801d392:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801d396:	fb05 f10c 	mul.w	r1, r5, ip
 801d39a:	1c45      	adds	r5, r0, #1
 801d39c:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801d3a0:	1215      	asrs	r5, r2, #8
 801d3a2:	f025 0507 	bic.w	r5, r5, #7
 801d3a6:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801d3aa:	1c4d      	adds	r5, r1, #1
 801d3ac:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 801d3b0:	10d1      	asrs	r1, r2, #3
 801d3b2:	f021 0103 	bic.w	r1, r1, #3
 801d3b6:	00fb      	lsls	r3, r7, #3
 801d3b8:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801d3bc:	b2db      	uxtb	r3, r3
 801d3be:	b2c0      	uxtb	r0, r0
 801d3c0:	00c9      	lsls	r1, r1, #3
 801d3c2:	fb03 f30c 	mul.w	r3, r3, ip
 801d3c6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801d3ca:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 801d3ce:	4308      	orrs	r0, r1
 801d3d0:	1c59      	adds	r1, r3, #1
 801d3d2:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801d3d6:	00d2      	lsls	r2, r2, #3
 801d3d8:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801d3dc:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 801d3e0:	4318      	orrs	r0, r3
 801d3e2:	f8ae 0000 	strh.w	r0, [lr]
 801d3e6:	e7a2      	b.n	801d32e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 801d3e8:	b013      	add	sp, #76	; 0x4c
 801d3ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d3ee:	bf00      	nop
 801d3f0:	fffff800 	.word	0xfffff800

0801d3f4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 801d3f4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801d3f8:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	; 0x24
 801d3fc:	fb05 4c03 	mla	ip, r5, r3, r4
 801d400:	2d00      	cmp	r5, #0
 801d402:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 801d406:	f89d 902c 	ldrb.w	r9, [sp, #44]	; 0x2c
 801d40a:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 801d40e:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 801d412:	8808      	ldrh	r0, [r1, #0]
 801d414:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 801d418:	f2c0 80a7 	blt.w	801d56a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 801d41c:	45aa      	cmp	sl, r5
 801d41e:	f340 80a4 	ble.w	801d56a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 801d422:	2c00      	cmp	r4, #0
 801d424:	f2c0 809f 	blt.w	801d566 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 801d428:	42a3      	cmp	r3, r4
 801d42a:	f340 809c 	ble.w	801d566 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 801d42e:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 801d432:	1c62      	adds	r2, r4, #1
 801d434:	f100 809c 	bmi.w	801d570 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801d438:	4293      	cmp	r3, r2
 801d43a:	f340 8099 	ble.w	801d570 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801d43e:	f1b9 0f00 	cmp.w	r9, #0
 801d442:	f000 8095 	beq.w	801d570 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801d446:	f8be c002 	ldrh.w	ip, [lr, #2]
 801d44a:	3501      	adds	r5, #1
 801d44c:	f100 8094 	bmi.w	801d578 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801d450:	45aa      	cmp	sl, r5
 801d452:	f340 8091 	ble.w	801d578 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801d456:	2f00      	cmp	r7, #0
 801d458:	f000 808e 	beq.w	801d578 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801d45c:	2c00      	cmp	r4, #0
 801d45e:	f2c0 8089 	blt.w	801d574 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 801d462:	42a3      	cmp	r3, r4
 801d464:	f340 8086 	ble.w	801d574 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 801d468:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 801d46c:	3401      	adds	r4, #1
 801d46e:	f100 8086 	bmi.w	801d57e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801d472:	42a3      	cmp	r3, r4
 801d474:	f340 8083 	ble.w	801d57e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801d478:	f1b9 0f00 	cmp.w	r9, #0
 801d47c:	d07f      	beq.n	801d57e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801d47e:	3301      	adds	r3, #1
 801d480:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 801d484:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801d488:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801d48c:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 801d490:	fb19 fe07 	smulbb	lr, r9, r7
 801d494:	ea44 0808 	orr.w	r8, r4, r8
 801d498:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801d49c:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801d4a0:	f1c7 0210 	rsb	r2, r7, #16
 801d4a4:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801d4a8:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801d4ac:	ea44 0c0c 	orr.w	ip, r4, ip
 801d4b0:	eba2 0209 	sub.w	r2, r2, r9
 801d4b4:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801d4b8:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801d4bc:	fb04 f40c 	mul.w	r4, r4, ip
 801d4c0:	fb02 4808 	mla	r8, r2, r8, r4
 801d4c4:	041a      	lsls	r2, r3, #16
 801d4c6:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801d4ca:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801d4ce:	4313      	orrs	r3, r2
 801d4d0:	042a      	lsls	r2, r5, #16
 801d4d2:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801d4d6:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801d4da:	fb0e 8303 	mla	r3, lr, r3, r8
 801d4de:	432a      	orrs	r2, r5
 801d4e0:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801d4e4:	fb07 3202 	mla	r2, r7, r2, r3
 801d4e8:	0d53      	lsrs	r3, r2, #21
 801d4ea:	0952      	lsrs	r2, r2, #5
 801d4ec:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801d4f0:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801d4f4:	431a      	orrs	r2, r3
 801d4f6:	b293      	uxth	r3, r2
 801d4f8:	b2b4      	uxth	r4, r6
 801d4fa:	1202      	asrs	r2, r0, #8
 801d4fc:	43f6      	mvns	r6, r6
 801d4fe:	b2f6      	uxtb	r6, r6
 801d500:	121d      	asrs	r5, r3, #8
 801d502:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801d506:	fb12 f206 	smulbb	r2, r2, r6
 801d50a:	10c7      	asrs	r7, r0, #3
 801d50c:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801d510:	00c0      	lsls	r0, r0, #3
 801d512:	fb05 2504 	mla	r5, r5, r4, r2
 801d516:	b2c0      	uxtb	r0, r0
 801d518:	10da      	asrs	r2, r3, #3
 801d51a:	00db      	lsls	r3, r3, #3
 801d51c:	b2db      	uxtb	r3, r3
 801d51e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801d522:	fb10 f006 	smulbb	r0, r0, r6
 801d526:	b2ad      	uxth	r5, r5
 801d528:	fb03 0004 	mla	r0, r3, r4, r0
 801d52c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801d530:	fb17 f706 	smulbb	r7, r7, r6
 801d534:	b280      	uxth	r0, r0
 801d536:	1c6b      	adds	r3, r5, #1
 801d538:	fb02 7204 	mla	r2, r2, r4, r7
 801d53c:	b292      	uxth	r2, r2
 801d53e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801d542:	1c43      	adds	r3, r0, #1
 801d544:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801d548:	1c50      	adds	r0, r2, #1
 801d54a:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801d54e:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801d552:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801d556:	0952      	lsrs	r2, r2, #5
 801d558:	432b      	orrs	r3, r5
 801d55a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d55e:	4313      	orrs	r3, r2
 801d560:	800b      	strh	r3, [r1, #0]
 801d562:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801d566:	4680      	mov	r8, r0
 801d568:	e763      	b.n	801d432 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 801d56a:	4684      	mov	ip, r0
 801d56c:	4680      	mov	r8, r0
 801d56e:	e76c      	b.n	801d44a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 801d570:	4684      	mov	ip, r0
 801d572:	e76a      	b.n	801d44a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 801d574:	4605      	mov	r5, r0
 801d576:	e779      	b.n	801d46c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 801d578:	4603      	mov	r3, r0
 801d57a:	4605      	mov	r5, r0
 801d57c:	e782      	b.n	801d484 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 801d57e:	4603      	mov	r3, r0
 801d580:	e780      	b.n	801d484 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

0801d582 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d582:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d586:	b093      	sub	sp, #76	; 0x4c
 801d588:	461d      	mov	r5, r3
 801d58a:	9210      	str	r2, [sp, #64]	; 0x40
 801d58c:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801d58e:	f89d 2094 	ldrb.w	r2, [sp, #148]	; 0x94
 801d592:	920b      	str	r2, [sp, #44]	; 0x2c
 801d594:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	; 0x88
 801d598:	910a      	str	r1, [sp, #40]	; 0x28
 801d59a:	6859      	ldr	r1, [r3, #4]
 801d59c:	681b      	ldr	r3, [r3, #0]
 801d59e:	9011      	str	r0, [sp, #68]	; 0x44
 801d5a0:	fb01 2707 	mla	r7, r1, r7, r2
 801d5a4:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 801d5a8:	9307      	str	r3, [sp, #28]
 801d5aa:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d5ac:	681b      	ldr	r3, [r3, #0]
 801d5ae:	9309      	str	r3, [sp, #36]	; 0x24
 801d5b0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801d5b2:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 801d5b6:	43db      	mvns	r3, r3
 801d5b8:	b2db      	uxtb	r3, r3
 801d5ba:	9308      	str	r3, [sp, #32]
 801d5bc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d5be:	2b00      	cmp	r3, #0
 801d5c0:	dc03      	bgt.n	801d5ca <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801d5c2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d5c4:	2b00      	cmp	r3, #0
 801d5c6:	f340 8203 	ble.w	801d9d0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801d5ca:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d5cc:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d5d0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801d5d4:	1e48      	subs	r0, r1, #1
 801d5d6:	f102 3cff 	add.w	ip, r2, #4294967295
 801d5da:	2d00      	cmp	r5, #0
 801d5dc:	f340 80da 	ble.w	801d794 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 801d5e0:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801d5e4:	ea4f 4326 	mov.w	r3, r6, asr #16
 801d5e8:	d406      	bmi.n	801d5f8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801d5ea:	4586      	cmp	lr, r0
 801d5ec:	da04      	bge.n	801d5f8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801d5ee:	2b00      	cmp	r3, #0
 801d5f0:	db02      	blt.n	801d5f8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801d5f2:	4563      	cmp	r3, ip
 801d5f4:	f2c0 80cf 	blt.w	801d796 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801d5f8:	f11e 0e01 	adds.w	lr, lr, #1
 801d5fc:	f100 80c1 	bmi.w	801d782 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801d600:	4571      	cmp	r1, lr
 801d602:	f2c0 80be 	blt.w	801d782 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801d606:	3301      	adds	r3, #1
 801d608:	f100 80bb 	bmi.w	801d782 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801d60c:	429a      	cmp	r2, r3
 801d60e:	f2c0 80b8 	blt.w	801d782 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801d612:	f8dd 801c 	ldr.w	r8, [sp, #28]
 801d616:	46a9      	mov	r9, r5
 801d618:	f1b9 0f00 	cmp.w	r9, #0
 801d61c:	f340 80d8 	ble.w	801d7d0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 801d620:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d622:	1421      	asrs	r1, r4, #16
 801d624:	ea4f 4026 	mov.w	r0, r6, asr #16
 801d628:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801d62c:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801d630:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801d634:	f100 8111 	bmi.w	801d85a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801d638:	f10e 3aff 	add.w	sl, lr, #4294967295
 801d63c:	4551      	cmp	r1, sl
 801d63e:	f280 810c 	bge.w	801d85a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801d642:	2800      	cmp	r0, #0
 801d644:	f2c0 8109 	blt.w	801d85a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801d648:	f103 3aff 	add.w	sl, r3, #4294967295
 801d64c:	4550      	cmp	r0, sl
 801d64e:	f280 8104 	bge.w	801d85a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801d652:	fa0f f38e 	sxth.w	r3, lr
 801d656:	fb00 1103 	mla	r1, r0, r3, r1
 801d65a:	9809      	ldr	r0, [sp, #36]	; 0x24
 801d65c:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 801d660:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 801d664:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 801d668:	f1bc 0f00 	cmp.w	ip, #0
 801d66c:	d007      	beq.n	801d67e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 801d66e:	005b      	lsls	r3, r3, #1
 801d670:	eb0a 0003 	add.w	r0, sl, r3
 801d674:	f83a 3003 	ldrh.w	r3, [sl, r3]
 801d678:	930c      	str	r3, [sp, #48]	; 0x30
 801d67a:	8843      	ldrh	r3, [r0, #2]
 801d67c:	930d      	str	r3, [sp, #52]	; 0x34
 801d67e:	ea4f 400e 	mov.w	r0, lr, lsl #16
 801d682:	fb12 f30c 	smulbb	r3, r2, ip
 801d686:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801d68a:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801d68e:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801d692:	10db      	asrs	r3, r3, #3
 801d694:	ea40 000e 	orr.w	r0, r0, lr
 801d698:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801d69c:	f1cc 0e10 	rsb	lr, ip, #16
 801d6a0:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801d6a4:	ebae 0e02 	sub.w	lr, lr, r2
 801d6a8:	ea4a 0101 	orr.w	r1, sl, r1
 801d6ac:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801d6b0:	4351      	muls	r1, r2
 801d6b2:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801d6b4:	9f08      	ldr	r7, [sp, #32]
 801d6b6:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801d6ba:	fb0e 1e00 	mla	lr, lr, r0, r1
 801d6be:	0410      	lsls	r0, r2, #16
 801d6c0:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801d6c4:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801d6c8:	4310      	orrs	r0, r2
 801d6ca:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801d6cc:	990c      	ldr	r1, [sp, #48]	; 0x30
 801d6ce:	0412      	lsls	r2, r2, #16
 801d6d0:	fb03 e000 	mla	r0, r3, r0, lr
 801d6d4:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801d6d8:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 801d6dc:	ea42 020e 	orr.w	r2, r2, lr
 801d6e0:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801d6e4:	fb03 0302 	mla	r3, r3, r2, r0
 801d6e8:	0d5a      	lsrs	r2, r3, #21
 801d6ea:	095b      	lsrs	r3, r3, #5
 801d6ec:	f8b8 0000 	ldrh.w	r0, [r8]
 801d6f0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d6f4:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801d6f8:	4313      	orrs	r3, r2
 801d6fa:	b29b      	uxth	r3, r3
 801d6fc:	1201      	asrs	r1, r0, #8
 801d6fe:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 801d702:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801d706:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801d70a:	fb11 f107 	smulbb	r1, r1, r7
 801d70e:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801d712:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801d716:	00c0      	lsls	r0, r0, #3
 801d718:	fb0c 1c02 	mla	ip, ip, r2, r1
 801d71c:	b2c0      	uxtb	r0, r0
 801d71e:	10d9      	asrs	r1, r3, #3
 801d720:	00db      	lsls	r3, r3, #3
 801d722:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801d726:	b2db      	uxtb	r3, r3
 801d728:	fb10 f007 	smulbb	r0, r0, r7
 801d72c:	fa1f fc8c 	uxth.w	ip, ip
 801d730:	fb03 0302 	mla	r3, r3, r2, r0
 801d734:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801d738:	fb1e fe07 	smulbb	lr, lr, r7
 801d73c:	fb01 e102 	mla	r1, r1, r2, lr
 801d740:	b29a      	uxth	r2, r3
 801d742:	f10c 0301 	add.w	r3, ip, #1
 801d746:	b289      	uxth	r1, r1
 801d748:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801d74c:	1c53      	adds	r3, r2, #1
 801d74e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801d752:	1c4a      	adds	r2, r1, #1
 801d754:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801d758:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801d75c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801d760:	0949      	lsrs	r1, r1, #5
 801d762:	ea43 030c 	orr.w	r3, r3, ip
 801d766:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801d76a:	430b      	orrs	r3, r1
 801d76c:	f8a8 3000 	strh.w	r3, [r8]
 801d770:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801d772:	441c      	add	r4, r3
 801d774:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d776:	f108 0802 	add.w	r8, r8, #2
 801d77a:	441e      	add	r6, r3
 801d77c:	f109 39ff 	add.w	r9, r9, #4294967295
 801d780:	e74a      	b.n	801d618 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801d782:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801d784:	441c      	add	r4, r3
 801d786:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d788:	441e      	add	r6, r3
 801d78a:	9b07      	ldr	r3, [sp, #28]
 801d78c:	3302      	adds	r3, #2
 801d78e:	3d01      	subs	r5, #1
 801d790:	9307      	str	r3, [sp, #28]
 801d792:	e722      	b.n	801d5da <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801d794:	d022      	beq.n	801d7dc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 801d796:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801d798:	1e6b      	subs	r3, r5, #1
 801d79a:	fb00 4003 	mla	r0, r0, r3, r4
 801d79e:	1400      	asrs	r0, r0, #16
 801d7a0:	f53f af37 	bmi.w	801d612 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801d7a4:	3901      	subs	r1, #1
 801d7a6:	4288      	cmp	r0, r1
 801d7a8:	f6bf af33 	bge.w	801d612 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801d7ac:	9920      	ldr	r1, [sp, #128]	; 0x80
 801d7ae:	fb01 6303 	mla	r3, r1, r3, r6
 801d7b2:	141b      	asrs	r3, r3, #16
 801d7b4:	f53f af2d 	bmi.w	801d612 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801d7b8:	3a01      	subs	r2, #1
 801d7ba:	4293      	cmp	r3, r2
 801d7bc:	f6bf af29 	bge.w	801d612 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801d7c0:	f8dd 901c 	ldr.w	r9, [sp, #28]
 801d7c4:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 801d7c8:	46a8      	mov	r8, r5
 801d7ca:	f1b8 0f00 	cmp.w	r8, #0
 801d7ce:	dc5e      	bgt.n	801d88e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801d7d0:	9b07      	ldr	r3, [sp, #28]
 801d7d2:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801d7d6:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801d7da:	9307      	str	r3, [sp, #28]
 801d7dc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d7de:	2b00      	cmp	r3, #0
 801d7e0:	f340 80f6 	ble.w	801d9d0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801d7e4:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d7e8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801d7ec:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801d7f0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801d7f2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d7f6:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d7fa:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d7fe:	eef0 6a62 	vmov.f32	s13, s5
 801d802:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d806:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d80a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d80e:	ee16 4a90 	vmov	r4, s13
 801d812:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d816:	eef0 6a43 	vmov.f32	s13, s6
 801d81a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d81e:	ee12 2a90 	vmov	r2, s5
 801d822:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d826:	fb92 f3f3 	sdiv	r3, r2, r3
 801d82a:	ee13 2a10 	vmov	r2, s6
 801d82e:	931f      	str	r3, [sp, #124]	; 0x7c
 801d830:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801d832:	fb92 f3f3 	sdiv	r3, r2, r3
 801d836:	9320      	str	r3, [sp, #128]	; 0x80
 801d838:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d83a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801d83c:	3b01      	subs	r3, #1
 801d83e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d842:	930a      	str	r3, [sp, #40]	; 0x28
 801d844:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801d846:	ee16 6a90 	vmov	r6, s13
 801d84a:	bf14      	ite	ne
 801d84c:	461d      	movne	r5, r3
 801d84e:	4615      	moveq	r5, r2
 801d850:	eeb0 3a67 	vmov.f32	s6, s15
 801d854:	eef0 2a47 	vmov.f32	s5, s14
 801d858:	e6b0      	b.n	801d5bc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801d85a:	f111 0a01 	adds.w	sl, r1, #1
 801d85e:	d487      	bmi.n	801d770 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801d860:	45d6      	cmp	lr, sl
 801d862:	db85      	blt.n	801d770 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801d864:	f110 0a01 	adds.w	sl, r0, #1
 801d868:	d482      	bmi.n	801d770 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801d86a:	4553      	cmp	r3, sl
 801d86c:	db80      	blt.n	801d770 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801d86e:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801d870:	9101      	str	r1, [sp, #4]
 801d872:	b21b      	sxth	r3, r3
 801d874:	e9cd 0202 	strd	r0, r2, [sp, #8]
 801d878:	9300      	str	r3, [sp, #0]
 801d87a:	e9cd c704 	strd	ip, r7, [sp, #16]
 801d87e:	fa0f f38e 	sxth.w	r3, lr
 801d882:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801d884:	9811      	ldr	r0, [sp, #68]	; 0x44
 801d886:	4641      	mov	r1, r8
 801d888:	f7ff fdb4 	bl	801d3f4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 801d88c:	e770      	b.n	801d770 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801d88e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d890:	9f09      	ldr	r7, [sp, #36]	; 0x24
 801d892:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d896:	1430      	asrs	r0, r6, #16
 801d898:	1423      	asrs	r3, r4, #16
 801d89a:	fb01 3000 	mla	r0, r1, r0, r3
 801d89e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d8a0:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 801d8a4:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 801d8a8:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801d8ac:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801d8b0:	8858      	ldrh	r0, [r3, #2]
 801d8b2:	f1be 0f00 	cmp.w	lr, #0
 801d8b6:	d00b      	beq.n	801d8d0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 801d8b8:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801d8bc:	3901      	subs	r1, #1
 801d8be:	0049      	lsls	r1, r1, #1
 801d8c0:	3102      	adds	r1, #2
 801d8c2:	eb03 0b01 	add.w	fp, r3, r1
 801d8c6:	5a5b      	ldrh	r3, [r3, r1]
 801d8c8:	930e      	str	r3, [sp, #56]	; 0x38
 801d8ca:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801d8ce:	930f      	str	r3, [sp, #60]	; 0x3c
 801d8d0:	ea4f 410c 	mov.w	r1, ip, lsl #16
 801d8d4:	fb12 f30e 	smulbb	r3, r2, lr
 801d8d8:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801d8dc:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801d8e0:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 801d8e4:	10db      	asrs	r3, r3, #3
 801d8e6:	ea41 010c 	orr.w	r1, r1, ip
 801d8ea:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801d8ee:	f1ce 0c10 	rsb	ip, lr, #16
 801d8f2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801d8f6:	ebac 0c02 	sub.w	ip, ip, r2
 801d8fa:	ea4b 0000 	orr.w	r0, fp, r0
 801d8fe:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801d902:	4350      	muls	r0, r2
 801d904:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801d906:	9f08      	ldr	r7, [sp, #32]
 801d908:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801d90c:	fb0c 0c01 	mla	ip, ip, r1, r0
 801d910:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801d914:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 801d918:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801d91a:	980e      	ldr	r0, [sp, #56]	; 0x38
 801d91c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801d920:	0412      	lsls	r2, r2, #16
 801d922:	ea4b 0101 	orr.w	r1, fp, r1
 801d926:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801d92a:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801d92e:	fb03 c101 	mla	r1, r3, r1, ip
 801d932:	4302      	orrs	r2, r0
 801d934:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801d938:	fb03 1202 	mla	r2, r3, r2, r1
 801d93c:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 801d940:	0952      	lsrs	r2, r2, #5
 801d942:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 801d946:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801d94a:	f8b9 2000 	ldrh.w	r2, [r9]
 801d94e:	ea4b 0303 	orr.w	r3, fp, r3
 801d952:	b29b      	uxth	r3, r3
 801d954:	1211      	asrs	r1, r2, #8
 801d956:	1218      	asrs	r0, r3, #8
 801d958:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801d95c:	fb11 f107 	smulbb	r1, r1, r7
 801d960:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 801d964:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801d968:	00d2      	lsls	r2, r2, #3
 801d96a:	fb00 100a 	mla	r0, r0, sl, r1
 801d96e:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801d972:	10d9      	asrs	r1, r3, #3
 801d974:	b2d2      	uxtb	r2, r2
 801d976:	00db      	lsls	r3, r3, #3
 801d978:	fb1c fc07 	smulbb	ip, ip, r7
 801d97c:	fb12 f207 	smulbb	r2, r2, r7
 801d980:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801d984:	b2db      	uxtb	r3, r3
 801d986:	b280      	uxth	r0, r0
 801d988:	fb01 c10a 	mla	r1, r1, sl, ip
 801d98c:	fb03 230a 	mla	r3, r3, sl, r2
 801d990:	b29b      	uxth	r3, r3
 801d992:	b289      	uxth	r1, r1
 801d994:	1c42      	adds	r2, r0, #1
 801d996:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801d99a:	f101 0c01 	add.w	ip, r1, #1
 801d99e:	1c5a      	adds	r2, r3, #1
 801d9a0:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801d9a4:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801d9a8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801d9aa:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801d9ae:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801d9b2:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801d9b6:	4310      	orrs	r0, r2
 801d9b8:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801d9bc:	441c      	add	r4, r3
 801d9be:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d9c0:	ea40 000c 	orr.w	r0, r0, ip
 801d9c4:	f829 0b02 	strh.w	r0, [r9], #2
 801d9c8:	441e      	add	r6, r3
 801d9ca:	f108 38ff 	add.w	r8, r8, #4294967295
 801d9ce:	e6fc      	b.n	801d7ca <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 801d9d0:	b013      	add	sp, #76	; 0x4c
 801d9d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801d9d6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 801d9d6:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801d9da:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 801d9de:	fb0e 4703 	mla	r7, lr, r3, r4
 801d9e2:	f1be 0f00 	cmp.w	lr, #0
 801d9e6:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 801d9ea:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
 801d9ee:	f89d 602c 	ldrb.w	r6, [sp, #44]	; 0x2c
 801d9f2:	8808      	ldrh	r0, [r1, #0]
 801d9f4:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 801d9f8:	db60      	blt.n	801dabc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 801d9fa:	45f1      	cmp	r9, lr
 801d9fc:	dd5e      	ble.n	801dabc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 801d9fe:	2c00      	cmp	r4, #0
 801da00:	db5a      	blt.n	801dab8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 801da02:	42a3      	cmp	r3, r4
 801da04:	dd58      	ble.n	801dab8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 801da06:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 801da0a:	1c62      	adds	r2, r4, #1
 801da0c:	d459      	bmi.n	801dac2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801da0e:	4293      	cmp	r3, r2
 801da10:	dd57      	ble.n	801dac2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801da12:	2d00      	cmp	r5, #0
 801da14:	d055      	beq.n	801dac2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801da16:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 801da1a:	f11e 0e01 	adds.w	lr, lr, #1
 801da1e:	d454      	bmi.n	801daca <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801da20:	45f1      	cmp	r9, lr
 801da22:	dd52      	ble.n	801daca <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801da24:	2e00      	cmp	r6, #0
 801da26:	d050      	beq.n	801daca <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801da28:	2c00      	cmp	r4, #0
 801da2a:	db4c      	blt.n	801dac6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 801da2c:	42a3      	cmp	r3, r4
 801da2e:	dd4a      	ble.n	801dac6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 801da30:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 801da34:	3401      	adds	r4, #1
 801da36:	d405      	bmi.n	801da44 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801da38:	42a3      	cmp	r3, r4
 801da3a:	dd03      	ble.n	801da44 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801da3c:	b115      	cbz	r5, 801da44 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801da3e:	3301      	adds	r3, #1
 801da40:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 801da44:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801da48:	fb15 f406 	smulbb	r4, r5, r6
 801da4c:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801da50:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801da54:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801da58:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801da5c:	ea43 0c0c 	orr.w	ip, r3, ip
 801da60:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801da64:	f1c6 0310 	rsb	r3, r6, #16
 801da68:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801da6c:	1b5b      	subs	r3, r3, r5
 801da6e:	ea4e 0707 	orr.w	r7, lr, r7
 801da72:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801da76:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801da7a:	437d      	muls	r5, r7
 801da7c:	fb03 5c0c 	mla	ip, r3, ip, r5
 801da80:	0403      	lsls	r3, r0, #16
 801da82:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801da86:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801da8a:	4318      	orrs	r0, r3
 801da8c:	0413      	lsls	r3, r2, #16
 801da8e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801da92:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801da96:	4313      	orrs	r3, r2
 801da98:	fb04 c000 	mla	r0, r4, r0, ip
 801da9c:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801daa0:	fb06 0003 	mla	r0, r6, r3, r0
 801daa4:	0d43      	lsrs	r3, r0, #21
 801daa6:	0940      	lsrs	r0, r0, #5
 801daa8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801daac:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801dab0:	4318      	orrs	r0, r3
 801dab2:	8008      	strh	r0, [r1, #0]
 801dab4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801dab8:	4684      	mov	ip, r0
 801daba:	e7a6      	b.n	801da0a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 801dabc:	4607      	mov	r7, r0
 801dabe:	4684      	mov	ip, r0
 801dac0:	e7ab      	b.n	801da1a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801dac2:	4607      	mov	r7, r0
 801dac4:	e7a9      	b.n	801da1a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801dac6:	4602      	mov	r2, r0
 801dac8:	e7b4      	b.n	801da34 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 801daca:	4602      	mov	r2, r0
 801dacc:	e7ba      	b.n	801da44 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

0801dace <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801dace:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dad2:	b08f      	sub	sp, #60	; 0x3c
 801dad4:	461d      	mov	r5, r3
 801dad6:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801dad8:	920c      	str	r2, [sp, #48]	; 0x30
 801dada:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	; 0x78
 801dade:	9107      	str	r1, [sp, #28]
 801dae0:	6859      	ldr	r1, [r3, #4]
 801dae2:	681b      	ldr	r3, [r3, #0]
 801dae4:	900d      	str	r0, [sp, #52]	; 0x34
 801dae6:	fb01 2707 	mla	r7, r1, r7, r2
 801daea:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 801daee:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801daf0:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	; 0x64
 801daf4:	f8d3 8000 	ldr.w	r8, [r3]
 801daf8:	9b07      	ldr	r3, [sp, #28]
 801dafa:	2b00      	cmp	r3, #0
 801dafc:	dc03      	bgt.n	801db06 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801dafe:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801db00:	2b00      	cmp	r3, #0
 801db02:	f340 8181 	ble.w	801de08 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 801db06:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801db08:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801db0c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801db10:	1e48      	subs	r0, r1, #1
 801db12:	f102 3cff 	add.w	ip, r2, #4294967295
 801db16:	2d00      	cmp	r5, #0
 801db18:	f340 809b 	ble.w	801dc52 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 801db1c:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801db20:	ea4f 4326 	mov.w	r3, r6, asr #16
 801db24:	d406      	bmi.n	801db34 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801db26:	4586      	cmp	lr, r0
 801db28:	da04      	bge.n	801db34 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801db2a:	2b00      	cmp	r3, #0
 801db2c:	db02      	blt.n	801db34 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801db2e:	4563      	cmp	r3, ip
 801db30:	f2c0 8090 	blt.w	801dc54 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801db34:	f11e 0e01 	adds.w	lr, lr, #1
 801db38:	f100 8084 	bmi.w	801dc44 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801db3c:	4571      	cmp	r1, lr
 801db3e:	f2c0 8081 	blt.w	801dc44 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801db42:	3301      	adds	r3, #1
 801db44:	d47e      	bmi.n	801dc44 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801db46:	429a      	cmp	r2, r3
 801db48:	db7c      	blt.n	801dc44 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801db4a:	46aa      	mov	sl, r5
 801db4c:	46b9      	mov	r9, r7
 801db4e:	f1ba 0f00 	cmp.w	sl, #0
 801db52:	f340 8099 	ble.w	801dc88 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 801db56:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801db58:	1421      	asrs	r1, r4, #16
 801db5a:	ea4f 4026 	mov.w	r0, r6, asr #16
 801db5e:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801db62:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801db66:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801db6a:	f100 80d0 	bmi.w	801dd0e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801db6e:	f10e 3bff 	add.w	fp, lr, #4294967295
 801db72:	4559      	cmp	r1, fp
 801db74:	f280 80cb 	bge.w	801dd0e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801db78:	2800      	cmp	r0, #0
 801db7a:	f2c0 80c8 	blt.w	801dd0e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801db7e:	f103 3bff 	add.w	fp, r3, #4294967295
 801db82:	4558      	cmp	r0, fp
 801db84:	f280 80c3 	bge.w	801dd0e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801db88:	fa0f fe8e 	sxth.w	lr, lr
 801db8c:	fb00 110e 	mla	r1, r0, lr, r1
 801db90:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801db94:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 801db98:	8841      	ldrh	r1, [r0, #2]
 801db9a:	f1bc 0f00 	cmp.w	ip, #0
 801db9e:	d00b      	beq.n	801dbb8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 801dba0:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 801dba4:	3b01      	subs	r3, #1
 801dba6:	005b      	lsls	r3, r3, #1
 801dba8:	3302      	adds	r3, #2
 801dbaa:	eb00 0e03 	add.w	lr, r0, r3
 801dbae:	5ac3      	ldrh	r3, [r0, r3]
 801dbb0:	9308      	str	r3, [sp, #32]
 801dbb2:	f8be 3002 	ldrh.w	r3, [lr, #2]
 801dbb6:	9309      	str	r3, [sp, #36]	; 0x24
 801dbb8:	ea4f 400b 	mov.w	r0, fp, lsl #16
 801dbbc:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801dbc0:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801dbc4:	ea40 000b 	orr.w	r0, r0, fp
 801dbc8:	fb12 f30c 	smulbb	r3, r2, ip
 801dbcc:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801dbd0:	10db      	asrs	r3, r3, #3
 801dbd2:	f1cc 0e10 	rsb	lr, ip, #16
 801dbd6:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801dbda:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801dbde:	ebae 0e02 	sub.w	lr, lr, r2
 801dbe2:	ea4b 0101 	orr.w	r1, fp, r1
 801dbe6:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801dbea:	4351      	muls	r1, r2
 801dbec:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801dbee:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801dbf2:	fb0e 1e00 	mla	lr, lr, r0, r1
 801dbf6:	0410      	lsls	r0, r2, #16
 801dbf8:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801dbfc:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801dc00:	4310      	orrs	r0, r2
 801dc02:	9a08      	ldr	r2, [sp, #32]
 801dc04:	9908      	ldr	r1, [sp, #32]
 801dc06:	0412      	lsls	r2, r2, #16
 801dc08:	fb03 e000 	mla	r0, r3, r0, lr
 801dc0c:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801dc10:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 801dc14:	ea42 020e 	orr.w	r2, r2, lr
 801dc18:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801dc1c:	fb03 0302 	mla	r3, r3, r2, r0
 801dc20:	0d5a      	lsrs	r2, r3, #21
 801dc22:	095b      	lsrs	r3, r3, #5
 801dc24:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801dc28:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801dc2c:	4313      	orrs	r3, r2
 801dc2e:	f8a9 3000 	strh.w	r3, [r9]
 801dc32:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801dc34:	441c      	add	r4, r3
 801dc36:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801dc38:	f109 0902 	add.w	r9, r9, #2
 801dc3c:	441e      	add	r6, r3
 801dc3e:	f10a 3aff 	add.w	sl, sl, #4294967295
 801dc42:	e784      	b.n	801db4e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801dc44:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801dc46:	441c      	add	r4, r3
 801dc48:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801dc4a:	3d01      	subs	r5, #1
 801dc4c:	441e      	add	r6, r3
 801dc4e:	3702      	adds	r7, #2
 801dc50:	e761      	b.n	801db16 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801dc52:	d01d      	beq.n	801dc90 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801dc54:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801dc56:	1e6b      	subs	r3, r5, #1
 801dc58:	fb00 4003 	mla	r0, r0, r3, r4
 801dc5c:	1400      	asrs	r0, r0, #16
 801dc5e:	f53f af74 	bmi.w	801db4a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801dc62:	3901      	subs	r1, #1
 801dc64:	4288      	cmp	r0, r1
 801dc66:	f6bf af70 	bge.w	801db4a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801dc6a:	991c      	ldr	r1, [sp, #112]	; 0x70
 801dc6c:	fb01 6303 	mla	r3, r1, r3, r6
 801dc70:	141b      	asrs	r3, r3, #16
 801dc72:	f53f af6a 	bmi.w	801db4a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801dc76:	3a01      	subs	r2, #1
 801dc78:	4293      	cmp	r3, r2
 801dc7a:	f6bf af66 	bge.w	801db4a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801dc7e:	46a9      	mov	r9, r5
 801dc80:	46ba      	mov	sl, r7
 801dc82:	f1b9 0f00 	cmp.w	r9, #0
 801dc86:	dc5a      	bgt.n	801dd3e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 801dc88:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801dc8c:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 801dc90:	9b07      	ldr	r3, [sp, #28]
 801dc92:	2b00      	cmp	r3, #0
 801dc94:	f340 80b8 	ble.w	801de08 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 801dc98:	ee30 0a04 	vadd.f32	s0, s0, s8
 801dc9c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801dca0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801dca4:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801dca6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801dcaa:	ee31 1a05 	vadd.f32	s2, s2, s10
 801dcae:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801dcb2:	eef0 6a62 	vmov.f32	s13, s5
 801dcb6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801dcba:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801dcbe:	ee77 2a62 	vsub.f32	s5, s14, s5
 801dcc2:	ee16 4a90 	vmov	r4, s13
 801dcc6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801dcca:	eef0 6a43 	vmov.f32	s13, s6
 801dcce:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801dcd2:	ee12 2a90 	vmov	r2, s5
 801dcd6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801dcda:	fb92 f3f3 	sdiv	r3, r2, r3
 801dcde:	ee13 2a10 	vmov	r2, s6
 801dce2:	931b      	str	r3, [sp, #108]	; 0x6c
 801dce4:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801dce6:	fb92 f3f3 	sdiv	r3, r2, r3
 801dcea:	931c      	str	r3, [sp, #112]	; 0x70
 801dcec:	9b07      	ldr	r3, [sp, #28]
 801dcee:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801dcf0:	3b01      	subs	r3, #1
 801dcf2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801dcf6:	9307      	str	r3, [sp, #28]
 801dcf8:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801dcfa:	ee16 6a90 	vmov	r6, s13
 801dcfe:	bf14      	ite	ne
 801dd00:	461d      	movne	r5, r3
 801dd02:	4615      	moveq	r5, r2
 801dd04:	eeb0 3a67 	vmov.f32	s6, s15
 801dd08:	eef0 2a47 	vmov.f32	s5, s14
 801dd0c:	e6f4      	b.n	801daf8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801dd0e:	f111 0b01 	adds.w	fp, r1, #1
 801dd12:	d48e      	bmi.n	801dc32 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801dd14:	45de      	cmp	lr, fp
 801dd16:	db8c      	blt.n	801dc32 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801dd18:	f110 0b01 	adds.w	fp, r0, #1
 801dd1c:	d489      	bmi.n	801dc32 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801dd1e:	455b      	cmp	r3, fp
 801dd20:	db87      	blt.n	801dc32 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801dd22:	b21b      	sxth	r3, r3
 801dd24:	e9cd 1001 	strd	r1, r0, [sp, #4]
 801dd28:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 801dd2c:	9300      	str	r3, [sp, #0]
 801dd2e:	4642      	mov	r2, r8
 801dd30:	fa0f f38e 	sxth.w	r3, lr
 801dd34:	4649      	mov	r1, r9
 801dd36:	980d      	ldr	r0, [sp, #52]	; 0x34
 801dd38:	f7ff fe4d 	bl	801d9d6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 801dd3c:	e779      	b.n	801dc32 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801dd3e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801dd40:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801dd44:	1420      	asrs	r0, r4, #16
 801dd46:	1431      	asrs	r1, r6, #16
 801dd48:	fb03 0101 	mla	r1, r3, r1, r0
 801dd4c:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801dd50:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801dd54:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 801dd58:	8841      	ldrh	r1, [r0, #2]
 801dd5a:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801dd5e:	f1be 0f00 	cmp.w	lr, #0
 801dd62:	d00b      	beq.n	801dd7c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 801dd64:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 801dd68:	3b01      	subs	r3, #1
 801dd6a:	005b      	lsls	r3, r3, #1
 801dd6c:	3302      	adds	r3, #2
 801dd6e:	eb00 0b03 	add.w	fp, r0, r3
 801dd72:	5ac3      	ldrh	r3, [r0, r3]
 801dd74:	930a      	str	r3, [sp, #40]	; 0x28
 801dd76:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801dd7a:	930b      	str	r3, [sp, #44]	; 0x2c
 801dd7c:	ea4f 400c 	mov.w	r0, ip, lsl #16
 801dd80:	fb12 f30e 	smulbb	r3, r2, lr
 801dd84:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801dd88:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801dd8c:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801dd90:	10db      	asrs	r3, r3, #3
 801dd92:	ea40 000c 	orr.w	r0, r0, ip
 801dd96:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801dd9a:	f1ce 0c10 	rsb	ip, lr, #16
 801dd9e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801dda2:	ebac 0c02 	sub.w	ip, ip, r2
 801dda6:	ea4b 0101 	orr.w	r1, fp, r1
 801ddaa:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801ddae:	4351      	muls	r1, r2
 801ddb0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801ddb2:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801ddb6:	fb0c 1c00 	mla	ip, ip, r0, r1
 801ddba:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801ddbe:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 801ddc2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801ddc4:	990a      	ldr	r1, [sp, #40]	; 0x28
 801ddc6:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801ddca:	0412      	lsls	r2, r2, #16
 801ddcc:	ea4b 0000 	orr.w	r0, fp, r0
 801ddd0:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801ddd4:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 801ddd8:	fb03 c000 	mla	r0, r3, r0, ip
 801dddc:	ea42 0b0b 	orr.w	fp, r2, fp
 801dde0:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801dde4:	fb03 000b 	mla	r0, r3, fp, r0
 801dde8:	0d43      	lsrs	r3, r0, #21
 801ddea:	0940      	lsrs	r0, r0, #5
 801ddec:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ddf0:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801ddf4:	4318      	orrs	r0, r3
 801ddf6:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801ddf8:	f82a 0b02 	strh.w	r0, [sl], #2
 801ddfc:	441c      	add	r4, r3
 801ddfe:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801de00:	f109 39ff 	add.w	r9, r9, #4294967295
 801de04:	441e      	add	r6, r3
 801de06:	e73c      	b.n	801dc82 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 801de08:	b00f      	add	sp, #60	; 0x3c
 801de0a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801de0e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 801de0e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801de12:	b085      	sub	sp, #20
 801de14:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 801de18:	9102      	str	r1, [sp, #8]
 801de1a:	2c00      	cmp	r4, #0
 801de1c:	fb04 7103 	mla	r1, r4, r3, r7
 801de20:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 801de24:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 801de28:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 801de2c:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 801de30:	f2c0 811b 	blt.w	801e06a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 801de34:	45a6      	cmp	lr, r4
 801de36:	f340 8118 	ble.w	801e06a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 801de3a:	2f00      	cmp	r7, #0
 801de3c:	f2c0 8113 	blt.w	801e066 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 801de40:	42bb      	cmp	r3, r7
 801de42:	f340 8110 	ble.w	801e066 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 801de46:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 801de4a:	1c7a      	adds	r2, r7, #1
 801de4c:	f100 8110 	bmi.w	801e070 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 801de50:	4293      	cmp	r3, r2
 801de52:	f340 810d 	ble.w	801e070 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 801de56:	2e00      	cmp	r6, #0
 801de58:	f000 810c 	beq.w	801e074 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 801de5c:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801de60:	3401      	adds	r4, #1
 801de62:	f100 810b 	bmi.w	801e07c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 801de66:	45a6      	cmp	lr, r4
 801de68:	f340 8108 	ble.w	801e07c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 801de6c:	2800      	cmp	r0, #0
 801de6e:	f000 8108 	beq.w	801e082 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 801de72:	2f00      	cmp	r7, #0
 801de74:	f2c0 8100 	blt.w	801e078 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 801de78:	42bb      	cmp	r3, r7
 801de7a:	f340 80fd 	ble.w	801e078 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 801de7e:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801de82:	3701      	adds	r7, #1
 801de84:	f100 8100 	bmi.w	801e088 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 801de88:	42bb      	cmp	r3, r7
 801de8a:	f340 80fd 	ble.w	801e088 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 801de8e:	2e00      	cmp	r6, #0
 801de90:	f000 80fc 	beq.w	801e08c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 801de94:	3301      	adds	r3, #1
 801de96:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 801de9a:	b2b6      	uxth	r6, r6
 801de9c:	b280      	uxth	r0, r0
 801de9e:	fb00 fe06 	mul.w	lr, r0, r6
 801dea2:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801dea6:	0136      	lsls	r6, r6, #4
 801dea8:	eba6 070e 	sub.w	r7, r6, lr
 801deac:	b280      	uxth	r0, r0
 801deae:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 801deb2:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801deb6:	b2bf      	uxth	r7, r7
 801deb8:	1a1b      	subs	r3, r3, r0
 801deba:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801debe:	b29b      	uxth	r3, r3
 801dec0:	fb0a f607 	mul.w	r6, sl, r7
 801dec4:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801dec8:	fb0b 6603 	mla	r6, fp, r3, r6
 801decc:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801ded0:	fb00 6609 	mla	r6, r0, r9, r6
 801ded4:	fb0e 6608 	mla	r6, lr, r8, r6
 801ded8:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801dedc:	9600      	str	r6, [sp, #0]
 801dede:	2e00      	cmp	r6, #0
 801dee0:	f000 80be 	beq.w	801e060 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 801dee4:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801dee8:	fb0b fc0c 	mul.w	ip, fp, ip
 801deec:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801def0:	fb0b f505 	mul.w	r5, fp, r5
 801def4:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801def8:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 801defc:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801df00:	44dc      	add	ip, fp
 801df02:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801df06:	9501      	str	r5, [sp, #4]
 801df08:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 801df0c:	9503      	str	r5, [sp, #12]
 801df0e:	9d01      	ldr	r5, [sp, #4]
 801df10:	9e02      	ldr	r6, [sp, #8]
 801df12:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 801df16:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801df1a:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 801df1e:	fb0a fc0c 	mul.w	ip, sl, ip
 801df22:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801df26:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801df2a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801df2e:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801df32:	4465      	add	r5, ip
 801df34:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801df38:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801df3c:	fb09 fc0c 	mul.w	ip, r9, ip
 801df40:	fb09 f904 	mul.w	r9, r9, r4
 801df44:	f509 7480 	add.w	r4, r9, #256	; 0x100
 801df48:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801df4c:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 801df50:	fb08 f404 	mul.w	r4, r8, r4
 801df54:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801df58:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801df5c:	fb08 f802 	mul.w	r8, r8, r2
 801df60:	fb0a fa01 	mul.w	sl, sl, r1
 801df64:	0a22      	lsrs	r2, r4, #8
 801df66:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 801df6a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801df6e:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 801df72:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801df76:	4414      	add	r4, r2
 801df78:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801df7c:	f508 7280 	add.w	r2, r8, #256	; 0x100
 801df80:	0a2d      	lsrs	r5, r5, #8
 801df82:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801df86:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801df8a:	9a03      	ldr	r2, [sp, #12]
 801df8c:	8836      	ldrh	r6, [r6, #0]
 801df8e:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801df92:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801df96:	437d      	muls	r5, r7
 801df98:	4461      	add	r1, ip
 801df9a:	0a24      	lsrs	r4, r4, #8
 801df9c:	fb02 5503 	mla	r5, r2, r3, r5
 801dfa0:	0a09      	lsrs	r1, r1, #8
 801dfa2:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801dfa6:	fb04 540e 	mla	r4, r4, lr, r5
 801dfaa:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801dfae:	fb01 4100 	mla	r1, r1, r0, r4
 801dfb2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801dfb6:	0a09      	lsrs	r1, r1, #8
 801dfb8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801dfbc:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 801dfc0:	fb07 f70a 	mul.w	r7, r7, sl
 801dfc4:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801dfc8:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 801dfcc:	fb03 7101 	mla	r1, r3, r1, r7
 801dfd0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801dfd4:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801dfd8:	fb0e 1e08 	mla	lr, lr, r8, r1
 801dfdc:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 801dfe0:	fb00 e101 	mla	r1, r0, r1, lr
 801dfe4:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 801dfe8:	9a00      	ldr	r2, [sp, #0]
 801dfea:	b287      	uxth	r7, r0
 801dfec:	437a      	muls	r2, r7
 801dfee:	0a09      	lsrs	r1, r1, #8
 801dff0:	1c53      	adds	r3, r2, #1
 801dff2:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801dff6:	4321      	orrs	r1, r4
 801dff8:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801dffc:	1235      	asrs	r5, r6, #8
 801dffe:	0c0a      	lsrs	r2, r1, #16
 801e000:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801e004:	b2db      	uxtb	r3, r3
 801e006:	fb12 f207 	smulbb	r2, r2, r7
 801e00a:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801e00e:	fb05 2503 	mla	r5, r5, r3, r2
 801e012:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801e016:	10f2      	asrs	r2, r6, #3
 801e018:	b2c8      	uxtb	r0, r1
 801e01a:	00f6      	lsls	r6, r6, #3
 801e01c:	fb14 f407 	smulbb	r4, r4, r7
 801e020:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801e024:	b2f6      	uxtb	r6, r6
 801e026:	fb10 f007 	smulbb	r0, r0, r7
 801e02a:	fb02 4203 	mla	r2, r2, r3, r4
 801e02e:	b2ad      	uxth	r5, r5
 801e030:	fb06 0303 	mla	r3, r6, r3, r0
 801e034:	b299      	uxth	r1, r3
 801e036:	b294      	uxth	r4, r2
 801e038:	1c6b      	adds	r3, r5, #1
 801e03a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801e03e:	1c62      	adds	r2, r4, #1
 801e040:	1c4b      	adds	r3, r1, #1
 801e042:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801e046:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801e04a:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801e04e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801e052:	0952      	lsrs	r2, r2, #5
 801e054:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e058:	432b      	orrs	r3, r5
 801e05a:	4313      	orrs	r3, r2
 801e05c:	9a02      	ldr	r2, [sp, #8]
 801e05e:	8013      	strh	r3, [r2, #0]
 801e060:	b005      	add	sp, #20
 801e062:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e066:	2500      	movs	r5, #0
 801e068:	e6ef      	b.n	801de4a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 801e06a:	2100      	movs	r1, #0
 801e06c:	460d      	mov	r5, r1
 801e06e:	e6f7      	b.n	801de60 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801e070:	2100      	movs	r1, #0
 801e072:	e6f5      	b.n	801de60 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801e074:	4631      	mov	r1, r6
 801e076:	e6f3      	b.n	801de60 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801e078:	2400      	movs	r4, #0
 801e07a:	e702      	b.n	801de82 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 801e07c:	2200      	movs	r2, #0
 801e07e:	4614      	mov	r4, r2
 801e080:	e70b      	b.n	801de9a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801e082:	4602      	mov	r2, r0
 801e084:	4604      	mov	r4, r0
 801e086:	e708      	b.n	801de9a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801e088:	2200      	movs	r2, #0
 801e08a:	e706      	b.n	801de9a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801e08c:	4632      	mov	r2, r6
 801e08e:	e704      	b.n	801de9a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

0801e090 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e090:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e094:	b09d      	sub	sp, #116	; 0x74
 801e096:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 801e09a:	9219      	str	r2, [sp, #100]	; 0x64
 801e09c:	9307      	str	r3, [sp, #28]
 801e09e:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801e0a0:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 801e0a4:	931a      	str	r3, [sp, #104]	; 0x68
 801e0a6:	9117      	str	r1, [sp, #92]	; 0x5c
 801e0a8:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 801e0ac:	901b      	str	r0, [sp, #108]	; 0x6c
 801e0ae:	6850      	ldr	r0, [r2, #4]
 801e0b0:	6812      	ldr	r2, [r2, #0]
 801e0b2:	fb00 1303 	mla	r3, r0, r3, r1
 801e0b6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801e0ba:	930a      	str	r3, [sp, #40]	; 0x28
 801e0bc:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801e0be:	681b      	ldr	r3, [r3, #0]
 801e0c0:	9310      	str	r3, [sp, #64]	; 0x40
 801e0c2:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801e0c6:	930b      	str	r3, [sp, #44]	; 0x2c
 801e0c8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801e0ca:	2b00      	cmp	r3, #0
 801e0cc:	dc03      	bgt.n	801e0d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801e0ce:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801e0d0:	2b00      	cmp	r3, #0
 801e0d2:	f340 8375 	ble.w	801e7c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801e0d6:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801e0d8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e0dc:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801e0e0:	1e48      	subs	r0, r1, #1
 801e0e2:	1e57      	subs	r7, r2, #1
 801e0e4:	9b07      	ldr	r3, [sp, #28]
 801e0e6:	2b00      	cmp	r3, #0
 801e0e8:	f340 818e 	ble.w	801e408 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801e0ec:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801e0f0:	ea4f 4326 	mov.w	r3, r6, asr #16
 801e0f4:	d406      	bmi.n	801e104 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801e0f6:	4584      	cmp	ip, r0
 801e0f8:	da04      	bge.n	801e104 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801e0fa:	2b00      	cmp	r3, #0
 801e0fc:	db02      	blt.n	801e104 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801e0fe:	42bb      	cmp	r3, r7
 801e100:	f2c0 8183 	blt.w	801e40a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 801e104:	f11c 0c01 	adds.w	ip, ip, #1
 801e108:	f100 8173 	bmi.w	801e3f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801e10c:	4561      	cmp	r1, ip
 801e10e:	f2c0 8170 	blt.w	801e3f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801e112:	3301      	adds	r3, #1
 801e114:	f100 816d 	bmi.w	801e3f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801e118:	429a      	cmp	r2, r3
 801e11a:	f2c0 816a 	blt.w	801e3f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801e11e:	9b07      	ldr	r3, [sp, #28]
 801e120:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801e122:	9318      	str	r3, [sp, #96]	; 0x60
 801e124:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801e126:	2b00      	cmp	r3, #0
 801e128:	f340 818c 	ble.w	801e444 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 801e12c:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 801e12e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801e130:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801e134:	689b      	ldr	r3, [r3, #8]
 801e136:	1422      	asrs	r2, r4, #16
 801e138:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801e13c:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801e140:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801e144:	f100 81cd 	bmi.w	801e4e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801e148:	f103 38ff 	add.w	r8, r3, #4294967295
 801e14c:	4542      	cmp	r2, r8
 801e14e:	f280 81c8 	bge.w	801e4e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801e152:	f1bc 0f00 	cmp.w	ip, #0
 801e156:	f2c0 81c4 	blt.w	801e4e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801e15a:	f10e 38ff 	add.w	r8, lr, #4294967295
 801e15e:	45c4      	cmp	ip, r8
 801e160:	f280 81bf 	bge.w	801e4e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801e164:	b21b      	sxth	r3, r3
 801e166:	fb0c 2203 	mla	r2, ip, r3, r2
 801e16a:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801e16c:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801e170:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801e174:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801e178:	2800      	cmp	r0, #0
 801e17a:	f000 81a9 	beq.w	801e4d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 801e17e:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801e182:	950c      	str	r5, [sp, #48]	; 0x30
 801e184:	0e2d      	lsrs	r5, r5, #24
 801e186:	9513      	str	r5, [sp, #76]	; 0x4c
 801e188:	b181      	cbz	r1, 801e1ac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801e18a:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 801e18e:	3b01      	subs	r3, #1
 801e190:	009b      	lsls	r3, r3, #2
 801e192:	3304      	adds	r3, #4
 801e194:	eb08 0c03 	add.w	ip, r8, r3
 801e198:	f858 3003 	ldr.w	r3, [r8, r3]
 801e19c:	9308      	str	r3, [sp, #32]
 801e19e:	0e1b      	lsrs	r3, r3, #24
 801e1a0:	9311      	str	r3, [sp, #68]	; 0x44
 801e1a2:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801e1a6:	930d      	str	r3, [sp, #52]	; 0x34
 801e1a8:	0e1b      	lsrs	r3, r3, #24
 801e1aa:	9314      	str	r3, [sp, #80]	; 0x50
 801e1ac:	b280      	uxth	r0, r0
 801e1ae:	b289      	uxth	r1, r1
 801e1b0:	fb00 f901 	mul.w	r9, r0, r1
 801e1b4:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801e1b8:	0100      	lsls	r0, r0, #4
 801e1ba:	eba0 0809 	sub.w	r8, r0, r9
 801e1be:	b289      	uxth	r1, r1
 801e1c0:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801e1c4:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801e1c6:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801e1c8:	fa1f f888 	uxth.w	r8, r8
 801e1cc:	1a5b      	subs	r3, r3, r1
 801e1ce:	b29b      	uxth	r3, r3
 801e1d0:	fb08 f000 	mul.w	r0, r8, r0
 801e1d4:	fb03 000e 	mla	r0, r3, lr, r0
 801e1d8:	fb01 0005 	mla	r0, r1, r5, r0
 801e1dc:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801e1de:	fb09 0005 	mla	r0, r9, r5, r0
 801e1e2:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801e1e6:	2800      	cmp	r0, #0
 801e1e8:	f000 80fa 	beq.w	801e3e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e1ec:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801e1f0:	d01b      	beq.n	801e22a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801e1f2:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 801e1f6:	fb0e fa0a 	mul.w	sl, lr, sl
 801e1fa:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801e1fe:	fb0e fe02 	mul.w	lr, lr, r2
 801e202:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801e206:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801e20a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801e20e:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801e212:	4452      	add	r2, sl
 801e214:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801e218:	0a12      	lsrs	r2, r2, #8
 801e21a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e21e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801e222:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801e226:	ea42 020c 	orr.w	r2, r2, ip
 801e22a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801e22c:	2dff      	cmp	r5, #255	; 0xff
 801e22e:	d021      	beq.n	801e274 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801e230:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801e232:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801e236:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801e238:	fb05 fb0b 	mul.w	fp, r5, fp
 801e23c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801e23e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801e242:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801e244:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801e248:	fb05 fa0a 	mul.w	sl, r5, sl
 801e24c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e250:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801e254:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801e258:	44de      	add	lr, fp
 801e25a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801e25e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e262:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e266:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e26a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e26e:	ea4e 050a 	orr.w	r5, lr, sl
 801e272:	950c      	str	r5, [sp, #48]	; 0x30
 801e274:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801e276:	2dff      	cmp	r5, #255	; 0xff
 801e278:	d021      	beq.n	801e2be <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 801e27a:	9d08      	ldr	r5, [sp, #32]
 801e27c:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801e280:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801e282:	fb05 fb0b 	mul.w	fp, r5, fp
 801e286:	9d08      	ldr	r5, [sp, #32]
 801e288:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801e28c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801e28e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801e292:	fb05 fa0a 	mul.w	sl, r5, sl
 801e296:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e29a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801e29e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801e2a2:	44de      	add	lr, fp
 801e2a4:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801e2a8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e2ac:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e2b0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e2b4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e2b8:	ea4e 050a 	orr.w	r5, lr, sl
 801e2bc:	9508      	str	r5, [sp, #32]
 801e2be:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801e2c0:	2dff      	cmp	r5, #255	; 0xff
 801e2c2:	d021      	beq.n	801e308 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 801e2c4:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801e2c6:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801e2ca:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801e2cc:	fb05 fb0b 	mul.w	fp, r5, fp
 801e2d0:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801e2d2:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801e2d6:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801e2d8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801e2dc:	fb05 fa0a 	mul.w	sl, r5, sl
 801e2e0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e2e4:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801e2e8:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801e2ec:	44de      	add	lr, fp
 801e2ee:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801e2f2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e2f6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e2fa:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e2fe:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e302:	ea4e 050a 	orr.w	r5, lr, sl
 801e306:	950d      	str	r5, [sp, #52]	; 0x34
 801e308:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801e30a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801e30e:	9d08      	ldr	r5, [sp, #32]
 801e310:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 801e314:	fb08 fc0c 	mul.w	ip, r8, ip
 801e318:	fb03 cc0e 	mla	ip, r3, lr, ip
 801e31c:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801e320:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801e322:	fb01 cc0e 	mla	ip, r1, lr, ip
 801e326:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801e32a:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801e32c:	fb09 cc0e 	mla	ip, r9, lr, ip
 801e330:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801e334:	fb08 f80e 	mul.w	r8, r8, lr
 801e338:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801e33c:	fb03 8202 	mla	r2, r3, r2, r8
 801e340:	9b08      	ldr	r3, [sp, #32]
 801e342:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801e344:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 801e348:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801e34a:	fb01 220a 	mla	r2, r1, sl, r2
 801e34e:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 801e352:	fb09 2901 	mla	r9, r9, r1, r2
 801e356:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801e358:	883b      	ldrh	r3, [r7, #0]
 801e35a:	4342      	muls	r2, r0
 801e35c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e360:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801e364:	1c50      	adds	r0, r2, #1
 801e366:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e36a:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801e36e:	ea4c 0c09 	orr.w	ip, ip, r9
 801e372:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801e376:	1219      	asrs	r1, r3, #8
 801e378:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801e37c:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801e380:	b2c0      	uxtb	r0, r0
 801e382:	fb12 f205 	smulbb	r2, r2, r5
 801e386:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801e38a:	fb01 2100 	mla	r1, r1, r0, r2
 801e38e:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801e392:	10da      	asrs	r2, r3, #3
 801e394:	fa5f fc8c 	uxtb.w	ip, ip
 801e398:	00db      	lsls	r3, r3, #3
 801e39a:	fb1c fc05 	smulbb	ip, ip, r5
 801e39e:	b2db      	uxtb	r3, r3
 801e3a0:	b289      	uxth	r1, r1
 801e3a2:	fb03 c300 	mla	r3, r3, r0, ip
 801e3a6:	fa1f fc83 	uxth.w	ip, r3
 801e3aa:	1c4b      	adds	r3, r1, #1
 801e3ac:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801e3b0:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801e3b4:	fb1e fe05 	smulbb	lr, lr, r5
 801e3b8:	f10c 0301 	add.w	r3, ip, #1
 801e3bc:	fb02 e200 	mla	r2, r2, r0, lr
 801e3c0:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801e3c4:	b292      	uxth	r2, r2
 801e3c6:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801e3ca:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801e3ce:	430b      	orrs	r3, r1
 801e3d0:	1c51      	adds	r1, r2, #1
 801e3d2:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801e3d6:	0952      	lsrs	r2, r2, #5
 801e3d8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e3dc:	4313      	orrs	r3, r2
 801e3de:	803b      	strh	r3, [r7, #0]
 801e3e0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801e3e2:	441c      	add	r4, r3
 801e3e4:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e3e6:	441e      	add	r6, r3
 801e3e8:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801e3ea:	3b01      	subs	r3, #1
 801e3ec:	3702      	adds	r7, #2
 801e3ee:	9318      	str	r3, [sp, #96]	; 0x60
 801e3f0:	e698      	b.n	801e124 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801e3f2:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801e3f4:	441c      	add	r4, r3
 801e3f6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e3f8:	441e      	add	r6, r3
 801e3fa:	9b07      	ldr	r3, [sp, #28]
 801e3fc:	3b01      	subs	r3, #1
 801e3fe:	9307      	str	r3, [sp, #28]
 801e400:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e402:	3302      	adds	r3, #2
 801e404:	930a      	str	r3, [sp, #40]	; 0x28
 801e406:	e66d      	b.n	801e0e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801e408:	d023      	beq.n	801e452 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 801e40a:	9b07      	ldr	r3, [sp, #28]
 801e40c:	9829      	ldr	r0, [sp, #164]	; 0xa4
 801e40e:	3b01      	subs	r3, #1
 801e410:	fb00 4003 	mla	r0, r0, r3, r4
 801e414:	1400      	asrs	r0, r0, #16
 801e416:	f53f ae82 	bmi.w	801e11e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801e41a:	3901      	subs	r1, #1
 801e41c:	4288      	cmp	r0, r1
 801e41e:	f6bf ae7e 	bge.w	801e11e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801e422:	992a      	ldr	r1, [sp, #168]	; 0xa8
 801e424:	fb01 6303 	mla	r3, r1, r3, r6
 801e428:	141b      	asrs	r3, r3, #16
 801e42a:	f53f ae78 	bmi.w	801e11e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801e42e:	3a01      	subs	r2, #1
 801e430:	4293      	cmp	r3, r2
 801e432:	f6bf ae74 	bge.w	801e11e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801e436:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801e43a:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 801e43e:	f1bb 0f00 	cmp.w	fp, #0
 801e442:	dc6c      	bgt.n	801e51e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801e444:	9b07      	ldr	r3, [sp, #28]
 801e446:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801e44a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e44c:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801e450:	930a      	str	r3, [sp, #40]	; 0x28
 801e452:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801e454:	2b00      	cmp	r3, #0
 801e456:	f340 81b3 	ble.w	801e7c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801e45a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e45e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801e462:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801e466:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801e468:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e46c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e470:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e474:	eef0 6a62 	vmov.f32	s13, s5
 801e478:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e47c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e480:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e484:	ee16 4a90 	vmov	r4, s13
 801e488:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e48c:	eef0 6a43 	vmov.f32	s13, s6
 801e490:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e494:	ee12 2a90 	vmov	r2, s5
 801e498:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e49c:	fb92 f3f3 	sdiv	r3, r2, r3
 801e4a0:	ee13 2a10 	vmov	r2, s6
 801e4a4:	9329      	str	r3, [sp, #164]	; 0xa4
 801e4a6:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801e4a8:	fb92 f3f3 	sdiv	r3, r2, r3
 801e4ac:	932a      	str	r3, [sp, #168]	; 0xa8
 801e4ae:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801e4b0:	9a19      	ldr	r2, [sp, #100]	; 0x64
 801e4b2:	3b01      	subs	r3, #1
 801e4b4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e4b8:	9317      	str	r3, [sp, #92]	; 0x5c
 801e4ba:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801e4bc:	bf08      	it	eq
 801e4be:	4613      	moveq	r3, r2
 801e4c0:	ee16 6a90 	vmov	r6, s13
 801e4c4:	9307      	str	r3, [sp, #28]
 801e4c6:	eeb0 3a67 	vmov.f32	s6, s15
 801e4ca:	eef0 2a47 	vmov.f32	s5, s14
 801e4ce:	e5fb      	b.n	801e0c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801e4d0:	2900      	cmp	r1, #0
 801e4d2:	f43f ae6b 	beq.w	801e1ac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801e4d6:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801e4da:	9308      	str	r3, [sp, #32]
 801e4dc:	0e1b      	lsrs	r3, r3, #24
 801e4de:	9311      	str	r3, [sp, #68]	; 0x44
 801e4e0:	e664      	b.n	801e1ac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801e4e2:	f112 0801 	adds.w	r8, r2, #1
 801e4e6:	f53f af7b 	bmi.w	801e3e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e4ea:	4543      	cmp	r3, r8
 801e4ec:	f6ff af78 	blt.w	801e3e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e4f0:	f11c 0801 	adds.w	r8, ip, #1
 801e4f4:	f53f af74 	bmi.w	801e3e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e4f8:	45c6      	cmp	lr, r8
 801e4fa:	f6ff af71 	blt.w	801e3e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e4fe:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 801e500:	9201      	str	r2, [sp, #4]
 801e502:	fa0f f28e 	sxth.w	r2, lr
 801e506:	e9cd 1504 	strd	r1, r5, [sp, #16]
 801e50a:	e9cd c002 	strd	ip, r0, [sp, #8]
 801e50e:	9200      	str	r2, [sp, #0]
 801e510:	b21b      	sxth	r3, r3
 801e512:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801e514:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801e516:	4639      	mov	r1, r7
 801e518:	f7ff fc79 	bl	801de0e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 801e51c:	e760      	b.n	801e3e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e51e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801e520:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801e522:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e526:	1427      	asrs	r7, r4, #16
 801e528:	1433      	asrs	r3, r6, #16
 801e52a:	fb01 7303 	mla	r3, r1, r3, r7
 801e52e:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 801e532:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801e536:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801e53a:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801e53e:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801e542:	2a00      	cmp	r2, #0
 801e544:	f000 8133 	beq.w	801e7ae <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 801e548:	687d      	ldr	r5, [r7, #4]
 801e54a:	950e      	str	r5, [sp, #56]	; 0x38
 801e54c:	0e2d      	lsrs	r5, r5, #24
 801e54e:	9515      	str	r5, [sp, #84]	; 0x54
 801e550:	b178      	cbz	r0, 801e572 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801e552:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 801e556:	3901      	subs	r1, #1
 801e558:	0089      	lsls	r1, r1, #2
 801e55a:	3104      	adds	r1, #4
 801e55c:	eb07 0e01 	add.w	lr, r7, r1
 801e560:	5879      	ldr	r1, [r7, r1]
 801e562:	9109      	str	r1, [sp, #36]	; 0x24
 801e564:	0e09      	lsrs	r1, r1, #24
 801e566:	9112      	str	r1, [sp, #72]	; 0x48
 801e568:	f8de 1004 	ldr.w	r1, [lr, #4]
 801e56c:	910f      	str	r1, [sp, #60]	; 0x3c
 801e56e:	0e09      	lsrs	r1, r1, #24
 801e570:	9116      	str	r1, [sp, #88]	; 0x58
 801e572:	b292      	uxth	r2, r2
 801e574:	b280      	uxth	r0, r0
 801e576:	fb02 f800 	mul.w	r8, r2, r0
 801e57a:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801e57e:	0112      	lsls	r2, r2, #4
 801e580:	eba2 0e08 	sub.w	lr, r2, r8
 801e584:	b280      	uxth	r0, r0
 801e586:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801e58a:	9915      	ldr	r1, [sp, #84]	; 0x54
 801e58c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801e58e:	fa1f fe8e 	uxth.w	lr, lr
 801e592:	1a12      	subs	r2, r2, r0
 801e594:	b292      	uxth	r2, r2
 801e596:	fb0e f101 	mul.w	r1, lr, r1
 801e59a:	fb02 110c 	mla	r1, r2, ip, r1
 801e59e:	fb00 1105 	mla	r1, r0, r5, r1
 801e5a2:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801e5a4:	fb08 1105 	mla	r1, r8, r5, r1
 801e5a8:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801e5ac:	2900      	cmp	r1, #0
 801e5ae:	f000 80f5 	beq.w	801e79c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 801e5b2:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801e5b6:	d019      	beq.n	801e5ec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 801e5b8:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801e5bc:	fb0c fa0a 	mul.w	sl, ip, sl
 801e5c0:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801e5c4:	fb0c fc03 	mul.w	ip, ip, r3
 801e5c8:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801e5cc:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801e5d0:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801e5d4:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801e5d8:	4453      	add	r3, sl
 801e5da:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801e5de:	0a1b      	lsrs	r3, r3, #8
 801e5e0:	0a3f      	lsrs	r7, r7, #8
 801e5e2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801e5e6:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801e5ea:	433b      	orrs	r3, r7
 801e5ec:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801e5ee:	2dff      	cmp	r5, #255	; 0xff
 801e5f0:	d020      	beq.n	801e634 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 801e5f2:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801e5f4:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801e5f8:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801e5fa:	436f      	muls	r7, r5
 801e5fc:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801e5fe:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801e602:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801e604:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801e608:	fb05 fa0a 	mul.w	sl, r5, sl
 801e60c:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801e610:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e614:	44bc      	add	ip, r7
 801e616:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801e61a:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801e61e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e622:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e626:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e62a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e62e:	ea4c 050a 	orr.w	r5, ip, sl
 801e632:	950e      	str	r5, [sp, #56]	; 0x38
 801e634:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801e636:	2dff      	cmp	r5, #255	; 0xff
 801e638:	d020      	beq.n	801e67c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 801e63a:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801e63c:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801e640:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801e642:	436f      	muls	r7, r5
 801e644:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801e646:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801e64a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801e64c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801e650:	fb05 fa0a 	mul.w	sl, r5, sl
 801e654:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801e658:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e65c:	44bc      	add	ip, r7
 801e65e:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801e662:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801e666:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e66a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e66e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e672:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e676:	ea4c 050a 	orr.w	r5, ip, sl
 801e67a:	9509      	str	r5, [sp, #36]	; 0x24
 801e67c:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801e67e:	2dff      	cmp	r5, #255	; 0xff
 801e680:	d020      	beq.n	801e6c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 801e682:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801e684:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801e688:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801e68a:	436f      	muls	r7, r5
 801e68c:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801e68e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801e692:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801e694:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801e698:	fb05 fa0a 	mul.w	sl, r5, sl
 801e69c:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801e6a0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e6a4:	44bc      	add	ip, r7
 801e6a6:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801e6aa:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801e6ae:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e6b2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e6b6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e6ba:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e6be:	ea4c 050a 	orr.w	r5, ip, sl
 801e6c2:	950f      	str	r5, [sp, #60]	; 0x3c
 801e6c4:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801e6c6:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801e6ca:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801e6cc:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801e6d0:	fb0e f707 	mul.w	r7, lr, r7
 801e6d4:	fb02 770c 	mla	r7, r2, ip, r7
 801e6d8:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801e6dc:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801e6de:	fb00 770c 	mla	r7, r0, ip, r7
 801e6e2:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801e6e6:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801e6e8:	fb08 770c 	mla	r7, r8, ip, r7
 801e6ec:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801e6f0:	fb0e fe0c 	mul.w	lr, lr, ip
 801e6f4:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801e6f8:	fb02 e303 	mla	r3, r2, r3, lr
 801e6fc:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801e6fe:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801e700:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801e704:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801e706:	fb00 330a 	mla	r3, r0, sl, r3
 801e70a:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 801e70e:	fb08 3c0c 	mla	ip, r8, ip, r3
 801e712:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e714:	f8b9 0000 	ldrh.w	r0, [r9]
 801e718:	4359      	muls	r1, r3
 801e71a:	0a3f      	lsrs	r7, r7, #8
 801e71c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e720:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801e724:	1c4b      	adds	r3, r1, #1
 801e726:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801e72a:	ea47 070c 	orr.w	r7, r7, ip
 801e72e:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801e732:	1202      	asrs	r2, r0, #8
 801e734:	0c3b      	lsrs	r3, r7, #16
 801e736:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801e73a:	b2c9      	uxtb	r1, r1
 801e73c:	fb13 f305 	smulbb	r3, r3, r5
 801e740:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801e744:	fb02 3201 	mla	r2, r2, r1, r3
 801e748:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801e74c:	10c3      	asrs	r3, r0, #3
 801e74e:	b2ff      	uxtb	r7, r7
 801e750:	00c0      	lsls	r0, r0, #3
 801e752:	b2c0      	uxtb	r0, r0
 801e754:	fb17 f705 	smulbb	r7, r7, r5
 801e758:	fb00 7001 	mla	r0, r0, r1, r7
 801e75c:	b292      	uxth	r2, r2
 801e75e:	fb1c fc05 	smulbb	ip, ip, r5
 801e762:	b280      	uxth	r0, r0
 801e764:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801e768:	fb03 c301 	mla	r3, r3, r1, ip
 801e76c:	1c51      	adds	r1, r2, #1
 801e76e:	f100 0c01 	add.w	ip, r0, #1
 801e772:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801e776:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 801e77a:	b29b      	uxth	r3, r3
 801e77c:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801e780:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 801e784:	ea4c 0202 	orr.w	r2, ip, r2
 801e788:	f103 0c01 	add.w	ip, r3, #1
 801e78c:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801e790:	095b      	lsrs	r3, r3, #5
 801e792:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801e796:	431a      	orrs	r2, r3
 801e798:	f8a9 2000 	strh.w	r2, [r9]
 801e79c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801e79e:	441c      	add	r4, r3
 801e7a0:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e7a2:	f109 0902 	add.w	r9, r9, #2
 801e7a6:	441e      	add	r6, r3
 801e7a8:	f10b 3bff 	add.w	fp, fp, #4294967295
 801e7ac:	e647      	b.n	801e43e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 801e7ae:	2800      	cmp	r0, #0
 801e7b0:	f43f aedf 	beq.w	801e572 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801e7b4:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 801e7b8:	9109      	str	r1, [sp, #36]	; 0x24
 801e7ba:	0e09      	lsrs	r1, r1, #24
 801e7bc:	9112      	str	r1, [sp, #72]	; 0x48
 801e7be:	e6d8      	b.n	801e572 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801e7c0:	b01d      	add	sp, #116	; 0x74
 801e7c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801e7c6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 801e7c6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e7ca:	b085      	sub	sp, #20
 801e7cc:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 801e7d0:	9102      	str	r1, [sp, #8]
 801e7d2:	2c00      	cmp	r4, #0
 801e7d4:	fb04 7103 	mla	r1, r4, r3, r7
 801e7d8:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 801e7dc:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 801e7e0:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 801e7e4:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 801e7e8:	f2c0 810c 	blt.w	801ea04 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 801e7ec:	45a6      	cmp	lr, r4
 801e7ee:	f340 8109 	ble.w	801ea04 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 801e7f2:	2f00      	cmp	r7, #0
 801e7f4:	f2c0 8104 	blt.w	801ea00 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 801e7f8:	42bb      	cmp	r3, r7
 801e7fa:	f340 8101 	ble.w	801ea00 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 801e7fe:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 801e802:	1c7a      	adds	r2, r7, #1
 801e804:	f100 8101 	bmi.w	801ea0a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 801e808:	4293      	cmp	r3, r2
 801e80a:	f340 80fe 	ble.w	801ea0a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 801e80e:	2e00      	cmp	r6, #0
 801e810:	f000 80fd 	beq.w	801ea0e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 801e814:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801e818:	3401      	adds	r4, #1
 801e81a:	f100 80fc 	bmi.w	801ea16 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 801e81e:	45a6      	cmp	lr, r4
 801e820:	f340 80f9 	ble.w	801ea16 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 801e824:	2800      	cmp	r0, #0
 801e826:	f000 80f9 	beq.w	801ea1c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 801e82a:	2f00      	cmp	r7, #0
 801e82c:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 801e830:	f2c0 80ef 	blt.w	801ea12 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 801e834:	42bb      	cmp	r3, r7
 801e836:	f340 80ec 	ble.w	801ea12 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 801e83a:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801e83e:	3701      	adds	r7, #1
 801e840:	f100 80ef 	bmi.w	801ea22 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 801e844:	42bb      	cmp	r3, r7
 801e846:	f340 80ec 	ble.w	801ea22 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 801e84a:	2e00      	cmp	r6, #0
 801e84c:	f000 80eb 	beq.w	801ea26 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 801e850:	6852      	ldr	r2, [r2, #4]
 801e852:	b2b6      	uxth	r6, r6
 801e854:	b280      	uxth	r0, r0
 801e856:	fb00 fe06 	mul.w	lr, r0, r6
 801e85a:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801e85e:	0136      	lsls	r6, r6, #4
 801e860:	eba6 070e 	sub.w	r7, r6, lr
 801e864:	b280      	uxth	r0, r0
 801e866:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 801e86a:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801e86e:	b2bf      	uxth	r7, r7
 801e870:	1a1b      	subs	r3, r3, r0
 801e872:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801e876:	b29b      	uxth	r3, r3
 801e878:	fb07 f60a 	mul.w	r6, r7, sl
 801e87c:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801e880:	fb0b 6603 	mla	r6, fp, r3, r6
 801e884:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801e888:	fb00 6609 	mla	r6, r0, r9, r6
 801e88c:	fb0e 6608 	mla	r6, lr, r8, r6
 801e890:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801e894:	9600      	str	r6, [sp, #0]
 801e896:	2e00      	cmp	r6, #0
 801e898:	f000 80af 	beq.w	801e9fa <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 801e89c:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801e8a0:	fb0b fc0c 	mul.w	ip, fp, ip
 801e8a4:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801e8a8:	fb0b f505 	mul.w	r5, fp, r5
 801e8ac:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801e8b0:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 801e8b4:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801e8b8:	44dc      	add	ip, fp
 801e8ba:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e8be:	9501      	str	r5, [sp, #4]
 801e8c0:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 801e8c4:	9503      	str	r5, [sp, #12]
 801e8c6:	9d01      	ldr	r5, [sp, #4]
 801e8c8:	9e02      	ldr	r6, [sp, #8]
 801e8ca:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 801e8ce:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801e8d2:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 801e8d6:	fb0a fc0c 	mul.w	ip, sl, ip
 801e8da:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801e8de:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801e8e2:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801e8e6:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801e8ea:	4465      	add	r5, ip
 801e8ec:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801e8f0:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801e8f4:	fb09 fc0c 	mul.w	ip, r9, ip
 801e8f8:	fb09 f904 	mul.w	r9, r9, r4
 801e8fc:	f509 7480 	add.w	r4, r9, #256	; 0x100
 801e900:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801e904:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 801e908:	fb08 f404 	mul.w	r4, r8, r4
 801e90c:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801e910:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801e914:	fb08 f802 	mul.w	r8, r8, r2
 801e918:	fb0a fa01 	mul.w	sl, sl, r1
 801e91c:	0a22      	lsrs	r2, r4, #8
 801e91e:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 801e922:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801e926:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 801e92a:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801e92e:	4414      	add	r4, r2
 801e930:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801e934:	f508 7280 	add.w	r2, r8, #256	; 0x100
 801e938:	0a2d      	lsrs	r5, r5, #8
 801e93a:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801e93e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801e942:	9a03      	ldr	r2, [sp, #12]
 801e944:	8836      	ldrh	r6, [r6, #0]
 801e946:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801e94a:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801e94e:	437d      	muls	r5, r7
 801e950:	4461      	add	r1, ip
 801e952:	0a24      	lsrs	r4, r4, #8
 801e954:	fb02 5503 	mla	r5, r2, r3, r5
 801e958:	0a09      	lsrs	r1, r1, #8
 801e95a:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801e95e:	fb04 540e 	mla	r4, r4, lr, r5
 801e962:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801e966:	fb01 4100 	mla	r1, r1, r0, r4
 801e96a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e96e:	0a09      	lsrs	r1, r1, #8
 801e970:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e974:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 801e978:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801e97c:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 801e980:	fb07 f70a 	mul.w	r7, r7, sl
 801e984:	fb03 7101 	mla	r1, r3, r1, r7
 801e988:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801e98c:	9b00      	ldr	r3, [sp, #0]
 801e98e:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801e992:	fb0e 1e08 	mla	lr, lr, r8, r1
 801e996:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 801e99a:	fb00 e101 	mla	r1, r0, r1, lr
 801e99e:	43da      	mvns	r2, r3
 801e9a0:	1233      	asrs	r3, r6, #8
 801e9a2:	b2d2      	uxtb	r2, r2
 801e9a4:	10f0      	asrs	r0, r6, #3
 801e9a6:	0a09      	lsrs	r1, r1, #8
 801e9a8:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801e9ac:	00f6      	lsls	r6, r6, #3
 801e9ae:	4353      	muls	r3, r2
 801e9b0:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801e9b4:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801e9b8:	b2f6      	uxtb	r6, r6
 801e9ba:	4321      	orrs	r1, r4
 801e9bc:	4350      	muls	r0, r2
 801e9be:	4356      	muls	r6, r2
 801e9c0:	1c5a      	adds	r2, r3, #1
 801e9c2:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801e9c6:	0c0b      	lsrs	r3, r1, #16
 801e9c8:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801e9cc:	1c42      	adds	r2, r0, #1
 801e9ce:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801e9d2:	0a0a      	lsrs	r2, r1, #8
 801e9d4:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801e9d8:	021b      	lsls	r3, r3, #8
 801e9da:	00d2      	lsls	r2, r2, #3
 801e9dc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e9e0:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801e9e4:	4313      	orrs	r3, r2
 801e9e6:	1c72      	adds	r2, r6, #1
 801e9e8:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801e9ec:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 801e9f0:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801e9f4:	4319      	orrs	r1, r3
 801e9f6:	9b02      	ldr	r3, [sp, #8]
 801e9f8:	8019      	strh	r1, [r3, #0]
 801e9fa:	b005      	add	sp, #20
 801e9fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ea00:	2500      	movs	r5, #0
 801ea02:	e6fe      	b.n	801e802 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 801ea04:	2100      	movs	r1, #0
 801ea06:	460d      	mov	r5, r1
 801ea08:	e706      	b.n	801e818 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801ea0a:	2100      	movs	r1, #0
 801ea0c:	e704      	b.n	801e818 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801ea0e:	4631      	mov	r1, r6
 801ea10:	e702      	b.n	801e818 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801ea12:	2400      	movs	r4, #0
 801ea14:	e713      	b.n	801e83e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 801ea16:	2200      	movs	r2, #0
 801ea18:	4614      	mov	r4, r2
 801ea1a:	e71a      	b.n	801e852 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801ea1c:	4602      	mov	r2, r0
 801ea1e:	4604      	mov	r4, r0
 801ea20:	e717      	b.n	801e852 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801ea22:	2200      	movs	r2, #0
 801ea24:	e715      	b.n	801e852 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801ea26:	4632      	mov	r2, r6
 801ea28:	e713      	b.n	801e852 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

0801ea2c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ea2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ea30:	b09b      	sub	sp, #108	; 0x6c
 801ea32:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 801ea36:	9218      	str	r2, [sp, #96]	; 0x60
 801ea38:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801ea3a:	9116      	str	r1, [sp, #88]	; 0x58
 801ea3c:	9307      	str	r3, [sp, #28]
 801ea3e:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 801ea42:	9019      	str	r0, [sp, #100]	; 0x64
 801ea44:	6850      	ldr	r0, [r2, #4]
 801ea46:	6812      	ldr	r2, [r2, #0]
 801ea48:	fb00 1303 	mla	r3, r0, r3, r1
 801ea4c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801ea50:	930a      	str	r3, [sp, #40]	; 0x28
 801ea52:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801ea54:	681b      	ldr	r3, [r3, #0]
 801ea56:	930f      	str	r3, [sp, #60]	; 0x3c
 801ea58:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801ea5a:	2b00      	cmp	r3, #0
 801ea5c:	dc03      	bgt.n	801ea66 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801ea5e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801ea60:	2b00      	cmp	r3, #0
 801ea62:	f340 8386 	ble.w	801f172 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801ea66:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801ea68:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ea6c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801ea70:	1e48      	subs	r0, r1, #1
 801ea72:	1e57      	subs	r7, r2, #1
 801ea74:	9b07      	ldr	r3, [sp, #28]
 801ea76:	2b00      	cmp	r3, #0
 801ea78:	f340 8166 	ble.w	801ed48 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801ea7c:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801ea80:	ea4f 4326 	mov.w	r3, r6, asr #16
 801ea84:	d406      	bmi.n	801ea94 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801ea86:	4584      	cmp	ip, r0
 801ea88:	da04      	bge.n	801ea94 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801ea8a:	2b00      	cmp	r3, #0
 801ea8c:	db02      	blt.n	801ea94 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801ea8e:	42bb      	cmp	r3, r7
 801ea90:	f2c0 815b 	blt.w	801ed4a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 801ea94:	f11c 0c01 	adds.w	ip, ip, #1
 801ea98:	f100 814b 	bmi.w	801ed32 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801ea9c:	4561      	cmp	r1, ip
 801ea9e:	f2c0 8148 	blt.w	801ed32 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801eaa2:	3301      	adds	r3, #1
 801eaa4:	f100 8145 	bmi.w	801ed32 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801eaa8:	429a      	cmp	r2, r3
 801eaaa:	f2c0 8142 	blt.w	801ed32 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801eaae:	9b07      	ldr	r3, [sp, #28]
 801eab0:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801eab2:	9317      	str	r3, [sp, #92]	; 0x5c
 801eab4:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801eab6:	2b00      	cmp	r3, #0
 801eab8:	f340 8165 	ble.w	801ed86 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801eabc:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 801eabe:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801eac0:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801eac4:	689b      	ldr	r3, [r3, #8]
 801eac6:	1422      	asrs	r2, r4, #16
 801eac8:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801eacc:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801ead0:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801ead4:	f100 81d5 	bmi.w	801ee82 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801ead8:	f103 38ff 	add.w	r8, r3, #4294967295
 801eadc:	4542      	cmp	r2, r8
 801eade:	f280 81d0 	bge.w	801ee82 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801eae2:	f1bc 0f00 	cmp.w	ip, #0
 801eae6:	f2c0 81cc 	blt.w	801ee82 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801eaea:	f10e 38ff 	add.w	r8, lr, #4294967295
 801eaee:	45c4      	cmp	ip, r8
 801eaf0:	f280 81c7 	bge.w	801ee82 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801eaf4:	b21b      	sxth	r3, r3
 801eaf6:	fb0c 2203 	mla	r2, ip, r3, r2
 801eafa:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801eafc:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801eb00:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801eb04:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801eb08:	2900      	cmp	r1, #0
 801eb0a:	f000 8182 	beq.w	801ee12 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801eb0e:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801eb12:	950b      	str	r5, [sp, #44]	; 0x2c
 801eb14:	0e2d      	lsrs	r5, r5, #24
 801eb16:	9512      	str	r5, [sp, #72]	; 0x48
 801eb18:	b180      	cbz	r0, 801eb3c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801eb1a:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 801eb1e:	3b01      	subs	r3, #1
 801eb20:	009b      	lsls	r3, r3, #2
 801eb22:	3304      	adds	r3, #4
 801eb24:	eb08 0c03 	add.w	ip, r8, r3
 801eb28:	f858 3003 	ldr.w	r3, [r8, r3]
 801eb2c:	9308      	str	r3, [sp, #32]
 801eb2e:	0e1b      	lsrs	r3, r3, #24
 801eb30:	9310      	str	r3, [sp, #64]	; 0x40
 801eb32:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801eb36:	930c      	str	r3, [sp, #48]	; 0x30
 801eb38:	0e1b      	lsrs	r3, r3, #24
 801eb3a:	9313      	str	r3, [sp, #76]	; 0x4c
 801eb3c:	b289      	uxth	r1, r1
 801eb3e:	b280      	uxth	r0, r0
 801eb40:	fb01 f900 	mul.w	r9, r1, r0
 801eb44:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801eb48:	0109      	lsls	r1, r1, #4
 801eb4a:	eba1 0809 	sub.w	r8, r1, r9
 801eb4e:	b280      	uxth	r0, r0
 801eb50:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 801eb54:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801eb56:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801eb58:	fa1f f888 	uxth.w	r8, r8
 801eb5c:	1a09      	subs	r1, r1, r0
 801eb5e:	b289      	uxth	r1, r1
 801eb60:	fb08 f303 	mul.w	r3, r8, r3
 801eb64:	fb01 330e 	mla	r3, r1, lr, r3
 801eb68:	fb00 3305 	mla	r3, r0, r5, r3
 801eb6c:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801eb6e:	fb09 3305 	mla	r3, r9, r5, r3
 801eb72:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801eb76:	2b00      	cmp	r3, #0
 801eb78:	f000 80d2 	beq.w	801ed20 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801eb7c:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801eb80:	d01b      	beq.n	801ebba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 801eb82:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 801eb86:	fb0e fa0a 	mul.w	sl, lr, sl
 801eb8a:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801eb8e:	fb0e fe02 	mul.w	lr, lr, r2
 801eb92:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801eb96:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801eb9a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801eb9e:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801eba2:	4452      	add	r2, sl
 801eba4:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801eba8:	0a12      	lsrs	r2, r2, #8
 801ebaa:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ebae:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801ebb2:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801ebb6:	ea42 020c 	orr.w	r2, r2, ip
 801ebba:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801ebbc:	2dff      	cmp	r5, #255	; 0xff
 801ebbe:	d021      	beq.n	801ec04 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 801ebc0:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801ebc2:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801ebc6:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801ebc8:	fb05 fb0b 	mul.w	fp, r5, fp
 801ebcc:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801ebce:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801ebd2:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801ebd4:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801ebd8:	fb05 fa0a 	mul.w	sl, r5, sl
 801ebdc:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ebe0:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801ebe4:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801ebe8:	44de      	add	lr, fp
 801ebea:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801ebee:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801ebf2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ebf6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ebfa:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ebfe:	ea4e 050a 	orr.w	r5, lr, sl
 801ec02:	950b      	str	r5, [sp, #44]	; 0x2c
 801ec04:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801ec06:	2dff      	cmp	r5, #255	; 0xff
 801ec08:	d021      	beq.n	801ec4e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 801ec0a:	9d08      	ldr	r5, [sp, #32]
 801ec0c:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801ec10:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801ec12:	fb05 fb0b 	mul.w	fp, r5, fp
 801ec16:	9d08      	ldr	r5, [sp, #32]
 801ec18:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801ec1c:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801ec1e:	fb05 fa0e 	mul.w	sl, r5, lr
 801ec22:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801ec26:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ec2a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801ec2e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801ec32:	44de      	add	lr, fp
 801ec34:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801ec38:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801ec3c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ec40:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ec44:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ec48:	ea4e 050a 	orr.w	r5, lr, sl
 801ec4c:	9508      	str	r5, [sp, #32]
 801ec4e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801ec50:	2dff      	cmp	r5, #255	; 0xff
 801ec52:	d021      	beq.n	801ec98 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 801ec54:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801ec56:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801ec5a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801ec5c:	fb05 fb0b 	mul.w	fp, r5, fp
 801ec60:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801ec62:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801ec66:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801ec68:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801ec6c:	fb05 fa0a 	mul.w	sl, r5, sl
 801ec70:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ec74:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801ec78:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801ec7c:	44de      	add	lr, fp
 801ec7e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801ec82:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801ec86:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ec8a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ec8e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ec92:	ea4e 050a 	orr.w	r5, lr, sl
 801ec96:	950c      	str	r5, [sp, #48]	; 0x30
 801ec98:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801ec9a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801ec9e:	9d08      	ldr	r5, [sp, #32]
 801eca0:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 801eca4:	fb08 fc0c 	mul.w	ip, r8, ip
 801eca8:	fb01 cc0e 	mla	ip, r1, lr, ip
 801ecac:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801ecb0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801ecb2:	fb00 cc0e 	mla	ip, r0, lr, ip
 801ecb6:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801ecba:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801ecbc:	fb09 cc0e 	mla	ip, r9, lr, ip
 801ecc0:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801ecc4:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801ecc8:	fb08 f80e 	mul.w	r8, r8, lr
 801eccc:	fb01 8202 	mla	r2, r1, r2, r8
 801ecd0:	9908      	ldr	r1, [sp, #32]
 801ecd2:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801ecd6:	990c      	ldr	r1, [sp, #48]	; 0x30
 801ecd8:	fb00 220a 	mla	r2, r0, sl, r2
 801ecdc:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 801ece0:	fb09 2900 	mla	r9, r9, r0, r2
 801ece4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ece8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801ecec:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ecf0:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801ecf4:	ea4c 0c09 	orr.w	ip, ip, r9
 801ecf8:	2bff      	cmp	r3, #255	; 0xff
 801ecfa:	ea4f 221c 	mov.w	r2, ip, lsr #8
 801ecfe:	f040 8091 	bne.w	801ee24 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801ed02:	ea4f 135c 	mov.w	r3, ip, lsr #5
 801ed06:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 801ed0a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ed0e:	f022 0207 	bic.w	r2, r2, #7
 801ed12:	431a      	orrs	r2, r3
 801ed14:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801ed18:	ea4c 0c02 	orr.w	ip, ip, r2
 801ed1c:	f8a7 c000 	strh.w	ip, [r7]
 801ed20:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801ed22:	441c      	add	r4, r3
 801ed24:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ed26:	441e      	add	r6, r3
 801ed28:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801ed2a:	3b01      	subs	r3, #1
 801ed2c:	3702      	adds	r7, #2
 801ed2e:	9317      	str	r3, [sp, #92]	; 0x5c
 801ed30:	e6c0      	b.n	801eab4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801ed32:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801ed34:	441c      	add	r4, r3
 801ed36:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ed38:	441e      	add	r6, r3
 801ed3a:	9b07      	ldr	r3, [sp, #28]
 801ed3c:	3b01      	subs	r3, #1
 801ed3e:	9307      	str	r3, [sp, #28]
 801ed40:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ed42:	3302      	adds	r3, #2
 801ed44:	930a      	str	r3, [sp, #40]	; 0x28
 801ed46:	e695      	b.n	801ea74 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801ed48:	d024      	beq.n	801ed94 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 801ed4a:	9b07      	ldr	r3, [sp, #28]
 801ed4c:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801ed4e:	3b01      	subs	r3, #1
 801ed50:	fb00 4003 	mla	r0, r0, r3, r4
 801ed54:	1400      	asrs	r0, r0, #16
 801ed56:	f53f aeaa 	bmi.w	801eaae <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801ed5a:	3901      	subs	r1, #1
 801ed5c:	4288      	cmp	r0, r1
 801ed5e:	f6bf aea6 	bge.w	801eaae <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801ed62:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801ed64:	fb01 6303 	mla	r3, r1, r3, r6
 801ed68:	141b      	asrs	r3, r3, #16
 801ed6a:	f53f aea0 	bmi.w	801eaae <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801ed6e:	3a01      	subs	r2, #1
 801ed70:	4293      	cmp	r3, r2
 801ed72:	f6bf ae9c 	bge.w	801eaae <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801ed76:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801ed7a:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 801ed7e:	f1bb 0f00 	cmp.w	fp, #0
 801ed82:	f300 809a 	bgt.w	801eeba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801ed86:	9b07      	ldr	r3, [sp, #28]
 801ed88:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801ed8c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ed8e:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801ed92:	930a      	str	r3, [sp, #40]	; 0x28
 801ed94:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801ed96:	2b00      	cmp	r3, #0
 801ed98:	f340 81eb 	ble.w	801f172 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801ed9c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801eda0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801eda4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801eda8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801edaa:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801edae:	ee31 1a05 	vadd.f32	s2, s2, s10
 801edb2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801edb6:	eef0 6a62 	vmov.f32	s13, s5
 801edba:	ee61 7a27 	vmul.f32	s15, s2, s15
 801edbe:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801edc2:	ee77 2a62 	vsub.f32	s5, s14, s5
 801edc6:	ee16 4a90 	vmov	r4, s13
 801edca:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801edce:	eef0 6a43 	vmov.f32	s13, s6
 801edd2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801edd6:	ee12 2a90 	vmov	r2, s5
 801edda:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801edde:	fb92 f3f3 	sdiv	r3, r2, r3
 801ede2:	ee13 2a10 	vmov	r2, s6
 801ede6:	9327      	str	r3, [sp, #156]	; 0x9c
 801ede8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801edea:	fb92 f3f3 	sdiv	r3, r2, r3
 801edee:	9328      	str	r3, [sp, #160]	; 0xa0
 801edf0:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801edf2:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801edf4:	3b01      	subs	r3, #1
 801edf6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801edfa:	9316      	str	r3, [sp, #88]	; 0x58
 801edfc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801edfe:	bf08      	it	eq
 801ee00:	4613      	moveq	r3, r2
 801ee02:	ee16 6a90 	vmov	r6, s13
 801ee06:	9307      	str	r3, [sp, #28]
 801ee08:	eeb0 3a67 	vmov.f32	s6, s15
 801ee0c:	eef0 2a47 	vmov.f32	s5, s14
 801ee10:	e622      	b.n	801ea58 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 801ee12:	2800      	cmp	r0, #0
 801ee14:	f43f ae92 	beq.w	801eb3c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801ee18:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801ee1c:	9308      	str	r3, [sp, #32]
 801ee1e:	0e1b      	lsrs	r3, r3, #24
 801ee20:	9310      	str	r3, [sp, #64]	; 0x40
 801ee22:	e68b      	b.n	801eb3c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801ee24:	8839      	ldrh	r1, [r7, #0]
 801ee26:	4dd4      	ldr	r5, [pc, #848]	; (801f178 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 801ee28:	43db      	mvns	r3, r3
 801ee2a:	ea4f 2e21 	mov.w	lr, r1, asr #8
 801ee2e:	fa5f f883 	uxtb.w	r8, r3
 801ee32:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801ee36:	fb0e fe08 	mul.w	lr, lr, r8
 801ee3a:	10c8      	asrs	r0, r1, #3
 801ee3c:	00cb      	lsls	r3, r1, #3
 801ee3e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801ee42:	f10e 0101 	add.w	r1, lr, #1
 801ee46:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 801ee4a:	fb00 f008 	mul.w	r0, r0, r8
 801ee4e:	ea4f 411c 	mov.w	r1, ip, lsr #16
 801ee52:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 801ee56:	f100 0e01 	add.w	lr, r0, #1
 801ee5a:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 801ee5e:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801ee62:	b2db      	uxtb	r3, r3
 801ee64:	b2c9      	uxtb	r1, r1
 801ee66:	00d2      	lsls	r2, r2, #3
 801ee68:	fb03 f308 	mul.w	r3, r3, r8
 801ee6c:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 801ee70:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ee74:	430a      	orrs	r2, r1
 801ee76:	1c59      	adds	r1, r3, #1
 801ee78:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801ee7c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801ee80:	e748      	b.n	801ed14 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 801ee82:	f112 0801 	adds.w	r8, r2, #1
 801ee86:	f53f af4b 	bmi.w	801ed20 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801ee8a:	4543      	cmp	r3, r8
 801ee8c:	f6ff af48 	blt.w	801ed20 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801ee90:	f11c 0801 	adds.w	r8, ip, #1
 801ee94:	f53f af44 	bmi.w	801ed20 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801ee98:	45c6      	cmp	lr, r8
 801ee9a:	f6ff af41 	blt.w	801ed20 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801ee9e:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 801eea2:	fa0f f28e 	sxth.w	r2, lr
 801eea6:	e9cd 1003 	strd	r1, r0, [sp, #12]
 801eeaa:	9200      	str	r2, [sp, #0]
 801eeac:	b21b      	sxth	r3, r3
 801eeae:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801eeb0:	9819      	ldr	r0, [sp, #100]	; 0x64
 801eeb2:	4639      	mov	r1, r7
 801eeb4:	f7ff fc87 	bl	801e7c6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 801eeb8:	e732      	b.n	801ed20 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801eeba:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801eebc:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801eebe:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 801eec2:	1421      	asrs	r1, r4, #16
 801eec4:	1433      	asrs	r3, r6, #16
 801eec6:	fb07 1303 	mla	r3, r7, r3, r1
 801eeca:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801eecc:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 801eed0:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801eed4:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801eed8:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801eedc:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801eee0:	2a00      	cmp	r2, #0
 801eee2:	f000 8107 	beq.w	801f0f4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 801eee6:	684d      	ldr	r5, [r1, #4]
 801eee8:	950d      	str	r5, [sp, #52]	; 0x34
 801eeea:	0e2d      	lsrs	r5, r5, #24
 801eeec:	9514      	str	r5, [sp, #80]	; 0x50
 801eeee:	b178      	cbz	r0, 801ef10 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801eef0:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 801eef4:	3f01      	subs	r7, #1
 801eef6:	00bf      	lsls	r7, r7, #2
 801eef8:	3704      	adds	r7, #4
 801eefa:	eb01 0e07 	add.w	lr, r1, r7
 801eefe:	59c9      	ldr	r1, [r1, r7]
 801ef00:	9109      	str	r1, [sp, #36]	; 0x24
 801ef02:	0e09      	lsrs	r1, r1, #24
 801ef04:	9111      	str	r1, [sp, #68]	; 0x44
 801ef06:	f8de 1004 	ldr.w	r1, [lr, #4]
 801ef0a:	910e      	str	r1, [sp, #56]	; 0x38
 801ef0c:	0e09      	lsrs	r1, r1, #24
 801ef0e:	9115      	str	r1, [sp, #84]	; 0x54
 801ef10:	b292      	uxth	r2, r2
 801ef12:	b280      	uxth	r0, r0
 801ef14:	fb02 f900 	mul.w	r9, r2, r0
 801ef18:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801ef1c:	0112      	lsls	r2, r2, #4
 801ef1e:	eba2 0e09 	sub.w	lr, r2, r9
 801ef22:	b280      	uxth	r0, r0
 801ef24:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 801ef28:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801ef2a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801ef2c:	fa1f fe8e 	uxth.w	lr, lr
 801ef30:	1a09      	subs	r1, r1, r0
 801ef32:	b289      	uxth	r1, r1
 801ef34:	fb0e f202 	mul.w	r2, lr, r2
 801ef38:	fb01 220c 	mla	r2, r1, ip, r2
 801ef3c:	fb00 2205 	mla	r2, r0, r5, r2
 801ef40:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801ef42:	fb09 2205 	mla	r2, r9, r5, r2
 801ef46:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801ef4a:	2a00      	cmp	r2, #0
 801ef4c:	f000 80c9 	beq.w	801f0e2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 801ef50:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801ef54:	d019      	beq.n	801ef8a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 801ef56:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801ef5a:	fb0c fa0a 	mul.w	sl, ip, sl
 801ef5e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801ef62:	fb0c fc03 	mul.w	ip, ip, r3
 801ef66:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801ef6a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801ef6e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801ef72:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801ef76:	4453      	add	r3, sl
 801ef78:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801ef7c:	0a1b      	lsrs	r3, r3, #8
 801ef7e:	0a3f      	lsrs	r7, r7, #8
 801ef80:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801ef84:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801ef88:	433b      	orrs	r3, r7
 801ef8a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801ef8c:	2dff      	cmp	r5, #255	; 0xff
 801ef8e:	d020      	beq.n	801efd2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 801ef90:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801ef92:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801ef96:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801ef98:	436f      	muls	r7, r5
 801ef9a:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801ef9c:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801efa0:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801efa2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801efa6:	fb05 fa0a 	mul.w	sl, r5, sl
 801efaa:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801efae:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801efb2:	44bc      	add	ip, r7
 801efb4:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801efb8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801efbc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801efc0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801efc4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801efc8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801efcc:	ea4c 050a 	orr.w	r5, ip, sl
 801efd0:	950d      	str	r5, [sp, #52]	; 0x34
 801efd2:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801efd4:	2dff      	cmp	r5, #255	; 0xff
 801efd6:	d020      	beq.n	801f01a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 801efd8:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801efda:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801efde:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801efe0:	436f      	muls	r7, r5
 801efe2:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801efe4:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801efe8:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801efea:	fb05 fa0c 	mul.w	sl, r5, ip
 801efee:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801eff2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801eff6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801effa:	44bc      	add	ip, r7
 801effc:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801f000:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801f004:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f008:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f00c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801f010:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801f014:	ea4c 050a 	orr.w	r5, ip, sl
 801f018:	9509      	str	r5, [sp, #36]	; 0x24
 801f01a:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801f01c:	2dff      	cmp	r5, #255	; 0xff
 801f01e:	d020      	beq.n	801f062 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 801f020:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801f022:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801f026:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801f028:	436f      	muls	r7, r5
 801f02a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801f02c:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801f030:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801f032:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801f036:	fb05 fa0a 	mul.w	sl, r5, sl
 801f03a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801f03e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801f042:	44bc      	add	ip, r7
 801f044:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801f048:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801f04c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f050:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f054:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801f058:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801f05c:	ea4c 050a 	orr.w	r5, ip, sl
 801f060:	950e      	str	r5, [sp, #56]	; 0x38
 801f062:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801f064:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801f068:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801f06a:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801f06e:	fb0e f707 	mul.w	r7, lr, r7
 801f072:	fb01 770c 	mla	r7, r1, ip, r7
 801f076:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801f07a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801f07c:	fb00 770c 	mla	r7, r0, ip, r7
 801f080:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801f084:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801f086:	fb09 770c 	mla	r7, r9, ip, r7
 801f08a:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801f08e:	fb0e fe0c 	mul.w	lr, lr, ip
 801f092:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801f096:	fb01 e303 	mla	r3, r1, r3, lr
 801f09a:	9909      	ldr	r1, [sp, #36]	; 0x24
 801f09c:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801f0a0:	990e      	ldr	r1, [sp, #56]	; 0x38
 801f0a2:	fb00 330a 	mla	r3, r0, sl, r3
 801f0a6:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 801f0aa:	fb09 3c0c 	mla	ip, r9, ip, r3
 801f0ae:	0a3f      	lsrs	r7, r7, #8
 801f0b0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f0b4:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801f0b8:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801f0bc:	ea47 070c 	orr.w	r7, r7, ip
 801f0c0:	2aff      	cmp	r2, #255	; 0xff
 801f0c2:	ea4f 2317 	mov.w	r3, r7, lsr #8
 801f0c6:	d11e      	bne.n	801f106 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 801f0c8:	097a      	lsrs	r2, r7, #5
 801f0ca:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 801f0ce:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801f0d2:	f023 0307 	bic.w	r3, r3, #7
 801f0d6:	4313      	orrs	r3, r2
 801f0d8:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801f0dc:	431f      	orrs	r7, r3
 801f0de:	f8a8 7000 	strh.w	r7, [r8]
 801f0e2:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801f0e4:	441c      	add	r4, r3
 801f0e6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f0e8:	f108 0802 	add.w	r8, r8, #2
 801f0ec:	441e      	add	r6, r3
 801f0ee:	f10b 3bff 	add.w	fp, fp, #4294967295
 801f0f2:	e644      	b.n	801ed7e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 801f0f4:	2800      	cmp	r0, #0
 801f0f6:	f43f af0b 	beq.w	801ef10 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801f0fa:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 801f0fe:	9109      	str	r1, [sp, #36]	; 0x24
 801f100:	0e09      	lsrs	r1, r1, #24
 801f102:	9111      	str	r1, [sp, #68]	; 0x44
 801f104:	e704      	b.n	801ef10 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801f106:	f8b8 1000 	ldrh.w	r1, [r8]
 801f10a:	43d2      	mvns	r2, r2
 801f10c:	ea4f 2c21 	mov.w	ip, r1, asr #8
 801f110:	fa5f fe82 	uxtb.w	lr, r2
 801f114:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801f118:	fb0c fc0e 	mul.w	ip, ip, lr
 801f11c:	10c8      	asrs	r0, r1, #3
 801f11e:	00ca      	lsls	r2, r1, #3
 801f120:	f10c 0101 	add.w	r1, ip, #1
 801f124:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801f128:	0c39      	lsrs	r1, r7, #16
 801f12a:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801f12e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801f132:	4911      	ldr	r1, [pc, #68]	; (801f178 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 801f134:	fb00 f00e 	mul.w	r0, r0, lr
 801f138:	fa5f fc8c 	uxtb.w	ip, ip
 801f13c:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 801f140:	b2d2      	uxtb	r2, r2
 801f142:	1c41      	adds	r1, r0, #1
 801f144:	fb02 f20e 	mul.w	r2, r2, lr
 801f148:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801f14c:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801f150:	1c51      	adds	r1, r2, #1
 801f152:	00c0      	lsls	r0, r0, #3
 801f154:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801f158:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801f15c:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801f160:	ea4c 0c00 	orr.w	ip, ip, r0
 801f164:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801f168:	ea47 0c0c 	orr.w	ip, r7, ip
 801f16c:	f8a8 c000 	strh.w	ip, [r8]
 801f170:	e7b7      	b.n	801f0e2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 801f172:	b01b      	add	sp, #108	; 0x6c
 801f174:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f178:	fffff800 	.word	0xfffff800

0801f17c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 801f17c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801f180:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 801f184:	2d00      	cmp	r5, #0
 801f186:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801f18a:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801f18e:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 801f192:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 801f196:	fb05 0e03 	mla	lr, r5, r3, r0
 801f19a:	f2c0 808c 	blt.w	801f2b6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 801f19e:	45a9      	cmp	r9, r5
 801f1a0:	f340 8089 	ble.w	801f2b6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 801f1a4:	2800      	cmp	r0, #0
 801f1a6:	f2c0 8084 	blt.w	801f2b2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 801f1aa:	4580      	cmp	r8, r0
 801f1ac:	f340 8081 	ble.w	801f2b2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 801f1b0:	ea4f 045e 	mov.w	r4, lr, lsr #1
 801f1b4:	f01e 0f01 	tst.w	lr, #1
 801f1b8:	5d16      	ldrb	r6, [r2, r4]
 801f1ba:	bf0c      	ite	eq
 801f1bc:	f006 060f 	andeq.w	r6, r6, #15
 801f1c0:	1136      	asrne	r6, r6, #4
 801f1c2:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801f1c6:	b2f6      	uxtb	r6, r6
 801f1c8:	1c44      	adds	r4, r0, #1
 801f1ca:	d477      	bmi.n	801f2bc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 801f1cc:	45a0      	cmp	r8, r4
 801f1ce:	dd75      	ble.n	801f2bc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 801f1d0:	2f00      	cmp	r7, #0
 801f1d2:	d075      	beq.n	801f2c0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 801f1d4:	f10e 0a01 	add.w	sl, lr, #1
 801f1d8:	ea4f 045a 	mov.w	r4, sl, lsr #1
 801f1dc:	f01a 0f01 	tst.w	sl, #1
 801f1e0:	5d14      	ldrb	r4, [r2, r4]
 801f1e2:	bf0c      	ite	eq
 801f1e4:	f004 040f 	andeq.w	r4, r4, #15
 801f1e8:	1124      	asrne	r4, r4, #4
 801f1ea:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801f1ee:	b2e4      	uxtb	r4, r4
 801f1f0:	3501      	adds	r5, #1
 801f1f2:	d469      	bmi.n	801f2c8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 801f1f4:	45a9      	cmp	r9, r5
 801f1f6:	dd67      	ble.n	801f2c8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 801f1f8:	f1bc 0f00 	cmp.w	ip, #0
 801f1fc:	d067      	beq.n	801f2ce <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 801f1fe:	2800      	cmp	r0, #0
 801f200:	db60      	blt.n	801f2c4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 801f202:	4580      	cmp	r8, r0
 801f204:	dd5e      	ble.n	801f2c4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 801f206:	eb03 090e 	add.w	r9, r3, lr
 801f20a:	ea4f 0559 	mov.w	r5, r9, lsr #1
 801f20e:	f019 0f01 	tst.w	r9, #1
 801f212:	5d55      	ldrb	r5, [r2, r5]
 801f214:	bf0c      	ite	eq
 801f216:	f005 050f 	andeq.w	r5, r5, #15
 801f21a:	112d      	asrne	r5, r5, #4
 801f21c:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 801f220:	b2ed      	uxtb	r5, r5
 801f222:	3001      	adds	r0, #1
 801f224:	d456      	bmi.n	801f2d4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 801f226:	4580      	cmp	r8, r0
 801f228:	dd54      	ble.n	801f2d4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 801f22a:	2f00      	cmp	r7, #0
 801f22c:	d054      	beq.n	801f2d8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 801f22e:	3301      	adds	r3, #1
 801f230:	449e      	add	lr, r3
 801f232:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801f236:	f01e 0f01 	tst.w	lr, #1
 801f23a:	5cd0      	ldrb	r0, [r2, r3]
 801f23c:	bf0c      	ite	eq
 801f23e:	f000 000f 	andeq.w	r0, r0, #15
 801f242:	1100      	asrne	r0, r0, #4
 801f244:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801f248:	b2c3      	uxtb	r3, r0
 801f24a:	b2ba      	uxth	r2, r7
 801f24c:	fa1f fc8c 	uxth.w	ip, ip
 801f250:	fb02 f00c 	mul.w	r0, r2, ip
 801f254:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 801f258:	0112      	lsls	r2, r2, #4
 801f25a:	fa1f fc8c 	uxth.w	ip, ip
 801f25e:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 801f262:	1a12      	subs	r2, r2, r0
 801f264:	eba7 070c 	sub.w	r7, r7, ip
 801f268:	b292      	uxth	r2, r2
 801f26a:	b2bf      	uxth	r7, r7
 801f26c:	4362      	muls	r2, r4
 801f26e:	fb06 2207 	mla	r2, r6, r7, r2
 801f272:	fb0c 2505 	mla	r5, ip, r5, r2
 801f276:	fb00 5303 	mla	r3, r0, r3, r5
 801f27a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f27e:	b1b3      	cbz	r3, 801f2ae <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 801f280:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 801f284:	435a      	muls	r2, r3
 801f286:	1c53      	adds	r3, r2, #1
 801f288:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801f28c:	4a2d      	ldr	r2, [pc, #180]	; (801f344 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 801f28e:	121b      	asrs	r3, r3, #8
 801f290:	6812      	ldr	r2, [r2, #0]
 801f292:	2bff      	cmp	r3, #255	; 0xff
 801f294:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801f298:	d120      	bne.n	801f2dc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 801f29a:	4b2b      	ldr	r3, [pc, #172]	; (801f348 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 801f29c:	0950      	lsrs	r0, r2, #5
 801f29e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801f2a2:	4033      	ands	r3, r6
 801f2a4:	4318      	orrs	r0, r3
 801f2a6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801f2aa:	4302      	orrs	r2, r0
 801f2ac:	800a      	strh	r2, [r1, #0]
 801f2ae:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801f2b2:	2600      	movs	r6, #0
 801f2b4:	e788      	b.n	801f1c8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 801f2b6:	2400      	movs	r4, #0
 801f2b8:	4626      	mov	r6, r4
 801f2ba:	e799      	b.n	801f1f0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801f2bc:	2400      	movs	r4, #0
 801f2be:	e797      	b.n	801f1f0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801f2c0:	463c      	mov	r4, r7
 801f2c2:	e795      	b.n	801f1f0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801f2c4:	2500      	movs	r5, #0
 801f2c6:	e7ac      	b.n	801f222 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 801f2c8:	2300      	movs	r3, #0
 801f2ca:	461d      	mov	r5, r3
 801f2cc:	e7bd      	b.n	801f24a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801f2ce:	4663      	mov	r3, ip
 801f2d0:	4665      	mov	r5, ip
 801f2d2:	e7ba      	b.n	801f24a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801f2d4:	2300      	movs	r3, #0
 801f2d6:	e7b8      	b.n	801f24a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801f2d8:	463b      	mov	r3, r7
 801f2da:	e7b6      	b.n	801f24a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801f2dc:	880d      	ldrh	r5, [r1, #0]
 801f2de:	b29f      	uxth	r7, r3
 801f2e0:	122c      	asrs	r4, r5, #8
 801f2e2:	f3c2 4007 	ubfx	r0, r2, #16, #8
 801f2e6:	43db      	mvns	r3, r3
 801f2e8:	b2db      	uxtb	r3, r3
 801f2ea:	fb10 f007 	smulbb	r0, r0, r7
 801f2ee:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801f2f2:	fb04 0403 	mla	r4, r4, r3, r0
 801f2f6:	b2f6      	uxtb	r6, r6
 801f2f8:	10e8      	asrs	r0, r5, #3
 801f2fa:	b2d2      	uxtb	r2, r2
 801f2fc:	00ed      	lsls	r5, r5, #3
 801f2fe:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801f302:	fb12 f207 	smulbb	r2, r2, r7
 801f306:	fb16 f607 	smulbb	r6, r6, r7
 801f30a:	b2ed      	uxtb	r5, r5
 801f30c:	b2a4      	uxth	r4, r4
 801f30e:	fb00 6603 	mla	r6, r0, r3, r6
 801f312:	fb05 2303 	mla	r3, r5, r3, r2
 801f316:	b29a      	uxth	r2, r3
 801f318:	1c63      	adds	r3, r4, #1
 801f31a:	b2b0      	uxth	r0, r6
 801f31c:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801f320:	1c53      	adds	r3, r2, #1
 801f322:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801f326:	1c42      	adds	r2, r0, #1
 801f328:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801f32c:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801f330:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801f334:	0940      	lsrs	r0, r0, #5
 801f336:	4323      	orrs	r3, r4
 801f338:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801f33c:	4303      	orrs	r3, r0
 801f33e:	800b      	strh	r3, [r1, #0]
 801f340:	e7b5      	b.n	801f2ae <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 801f342:	bf00      	nop
 801f344:	20015614 	.word	0x20015614
 801f348:	00fff800 	.word	0x00fff800

0801f34c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f34c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f350:	b097      	sub	sp, #92	; 0x5c
 801f352:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 801f356:	9214      	str	r2, [sp, #80]	; 0x50
 801f358:	9309      	str	r3, [sp, #36]	; 0x24
 801f35a:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801f35c:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801f360:	910d      	str	r1, [sp, #52]	; 0x34
 801f362:	930f      	str	r3, [sp, #60]	; 0x3c
 801f364:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 801f368:	9015      	str	r0, [sp, #84]	; 0x54
 801f36a:	6850      	ldr	r0, [r2, #4]
 801f36c:	6812      	ldr	r2, [r2, #0]
 801f36e:	fb00 1303 	mla	r3, r0, r3, r1
 801f372:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801f376:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f378:	689b      	ldr	r3, [r3, #8]
 801f37a:	3301      	adds	r3, #1
 801f37c:	f023 0301 	bic.w	r3, r3, #1
 801f380:	930a      	str	r3, [sp, #40]	; 0x28
 801f382:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f384:	681f      	ldr	r7, [r3, #0]
 801f386:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f388:	2b00      	cmp	r3, #0
 801f38a:	dc03      	bgt.n	801f394 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801f38c:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801f38e:	2b00      	cmp	r3, #0
 801f390:	f340 8287 	ble.w	801f8a2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 801f394:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f396:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f39a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f39e:	1e48      	subs	r0, r1, #1
 801f3a0:	f102 3cff 	add.w	ip, r2, #4294967295
 801f3a4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f3a6:	2b00      	cmp	r3, #0
 801f3a8:	f340 80c4 	ble.w	801f534 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801f3ac:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801f3b0:	ea4f 4326 	mov.w	r3, r6, asr #16
 801f3b4:	d406      	bmi.n	801f3c4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801f3b6:	4586      	cmp	lr, r0
 801f3b8:	da04      	bge.n	801f3c4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801f3ba:	2b00      	cmp	r3, #0
 801f3bc:	db02      	blt.n	801f3c4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801f3be:	4563      	cmp	r3, ip
 801f3c0:	f2c0 80b9 	blt.w	801f536 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 801f3c4:	f11e 0e01 	adds.w	lr, lr, #1
 801f3c8:	f100 80aa 	bmi.w	801f520 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801f3cc:	4571      	cmp	r1, lr
 801f3ce:	f2c0 80a7 	blt.w	801f520 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801f3d2:	3301      	adds	r3, #1
 801f3d4:	f100 80a4 	bmi.w	801f520 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801f3d8:	429a      	cmp	r2, r3
 801f3da:	f2c0 80a1 	blt.w	801f520 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801f3de:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f3e0:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
 801f3e4:	930e      	str	r3, [sp, #56]	; 0x38
 801f3e6:	46c8      	mov	r8, r9
 801f3e8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f3ea:	2b00      	cmp	r3, #0
 801f3ec:	f340 80c3 	ble.w	801f576 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801f3f0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f3f2:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801f3f6:	1423      	asrs	r3, r4, #16
 801f3f8:	ea4f 4026 	mov.w	r0, r6, asr #16
 801f3fc:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801f400:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801f404:	f100 814d 	bmi.w	801f6a2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801f408:	f10c 3bff 	add.w	fp, ip, #4294967295
 801f40c:	455b      	cmp	r3, fp
 801f40e:	f280 8148 	bge.w	801f6a2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801f412:	2800      	cmp	r0, #0
 801f414:	f2c0 8145 	blt.w	801f6a2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801f418:	f10e 3bff 	add.w	fp, lr, #4294967295
 801f41c:	4558      	cmp	r0, fp
 801f41e:	f280 8140 	bge.w	801f6a2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801f422:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801f424:	fb00 3305 	mla	r3, r0, r5, r3
 801f428:	0858      	lsrs	r0, r3, #1
 801f42a:	07dd      	lsls	r5, r3, #31
 801f42c:	f817 c000 	ldrb.w	ip, [r7, r0]
 801f430:	bf54      	ite	pl
 801f432:	f00c 0c0f 	andpl.w	ip, ip, #15
 801f436:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801f43a:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801f43e:	fa5f fc8c 	uxtb.w	ip, ip
 801f442:	2a00      	cmp	r2, #0
 801f444:	f000 80db 	beq.w	801f5fe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 801f448:	1c58      	adds	r0, r3, #1
 801f44a:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801f44e:	07c0      	lsls	r0, r0, #31
 801f450:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801f454:	bf54      	ite	pl
 801f456:	f00e 0e0f 	andpl.w	lr, lr, #15
 801f45a:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801f45e:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801f462:	fa5f f08e 	uxtb.w	r0, lr
 801f466:	9010      	str	r0, [sp, #64]	; 0x40
 801f468:	b1c9      	cbz	r1, 801f49e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801f46a:	4453      	add	r3, sl
 801f46c:	0858      	lsrs	r0, r3, #1
 801f46e:	07dd      	lsls	r5, r3, #31
 801f470:	5c38      	ldrb	r0, [r7, r0]
 801f472:	bf54      	ite	pl
 801f474:	f000 000f 	andpl.w	r0, r0, #15
 801f478:	1100      	asrmi	r0, r0, #4
 801f47a:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801f47e:	3301      	adds	r3, #1
 801f480:	b2c0      	uxtb	r0, r0
 801f482:	900b      	str	r0, [sp, #44]	; 0x2c
 801f484:	0858      	lsrs	r0, r3, #1
 801f486:	07dd      	lsls	r5, r3, #31
 801f488:	f817 e000 	ldrb.w	lr, [r7, r0]
 801f48c:	bf54      	ite	pl
 801f48e:	f00e 030f 	andpl.w	r3, lr, #15
 801f492:	ea4f 132e 	movmi.w	r3, lr, asr #4
 801f496:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801f49a:	b2db      	uxtb	r3, r3
 801f49c:	9311      	str	r3, [sp, #68]	; 0x44
 801f49e:	b292      	uxth	r2, r2
 801f4a0:	b289      	uxth	r1, r1
 801f4a2:	fb02 f301 	mul.w	r3, r2, r1
 801f4a6:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801f4aa:	0112      	lsls	r2, r2, #4
 801f4ac:	b289      	uxth	r1, r1
 801f4ae:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 801f4b2:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801f4b4:	1ad2      	subs	r2, r2, r3
 801f4b6:	1a40      	subs	r0, r0, r1
 801f4b8:	b292      	uxth	r2, r2
 801f4ba:	436a      	muls	r2, r5
 801f4bc:	b280      	uxth	r0, r0
 801f4be:	fb0c 2c00 	mla	ip, ip, r0, r2
 801f4c2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801f4c4:	fb01 c102 	mla	r1, r1, r2, ip
 801f4c8:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801f4ca:	fb03 1302 	mla	r3, r3, r2, r1
 801f4ce:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f4d2:	b1db      	cbz	r3, 801f50c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801f4d4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801f4d6:	4353      	muls	r3, r2
 801f4d8:	1c5a      	adds	r2, r3, #1
 801f4da:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801f4de:	4ac6      	ldr	r2, [pc, #792]	; (801f7f8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 801f4e0:	121b      	asrs	r3, r3, #8
 801f4e2:	6812      	ldr	r2, [r2, #0]
 801f4e4:	2bff      	cmp	r3, #255	; 0xff
 801f4e6:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 801f4ea:	f040 8099 	bne.w	801f620 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 801f4ee:	0953      	lsrs	r3, r2, #5
 801f4f0:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801f4f4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f4f8:	f02c 0c07 	bic.w	ip, ip, #7
 801f4fc:	ea43 0c0c 	orr.w	ip, r3, ip
 801f500:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801f504:	ea4c 0202 	orr.w	r2, ip, r2
 801f508:	f8a8 2000 	strh.w	r2, [r8]
 801f50c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801f50e:	441c      	add	r4, r3
 801f510:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f512:	441e      	add	r6, r3
 801f514:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f516:	3b01      	subs	r3, #1
 801f518:	f108 0802 	add.w	r8, r8, #2
 801f51c:	930e      	str	r3, [sp, #56]	; 0x38
 801f51e:	e763      	b.n	801f3e8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801f520:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801f522:	441c      	add	r4, r3
 801f524:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f526:	441e      	add	r6, r3
 801f528:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f52a:	3b01      	subs	r3, #1
 801f52c:	9309      	str	r3, [sp, #36]	; 0x24
 801f52e:	f109 0902 	add.w	r9, r9, #2
 801f532:	e737      	b.n	801f3a4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801f534:	d024      	beq.n	801f580 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801f536:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f538:	9823      	ldr	r0, [sp, #140]	; 0x8c
 801f53a:	3b01      	subs	r3, #1
 801f53c:	fb00 4003 	mla	r0, r0, r3, r4
 801f540:	1400      	asrs	r0, r0, #16
 801f542:	f53f af4c 	bmi.w	801f3de <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f546:	3901      	subs	r1, #1
 801f548:	4288      	cmp	r0, r1
 801f54a:	f6bf af48 	bge.w	801f3de <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f54e:	9924      	ldr	r1, [sp, #144]	; 0x90
 801f550:	fb01 6303 	mla	r3, r1, r3, r6
 801f554:	141b      	asrs	r3, r3, #16
 801f556:	f53f af42 	bmi.w	801f3de <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f55a:	3a01      	subs	r2, #1
 801f55c:	4293      	cmp	r3, r2
 801f55e:	f6bf af3e 	bge.w	801f3de <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f562:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801f566:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801f56a:	930e      	str	r3, [sp, #56]	; 0x38
 801f56c:	46c8      	mov	r8, r9
 801f56e:	f1bb 0f00 	cmp.w	fp, #0
 801f572:	f300 80b7 	bgt.w	801f6e4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 801f576:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f578:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801f57c:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801f580:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f582:	2b00      	cmp	r3, #0
 801f584:	f340 818d 	ble.w	801f8a2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 801f588:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f58c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801f590:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801f594:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f596:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f59a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f59e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f5a2:	eef0 6a62 	vmov.f32	s13, s5
 801f5a6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f5aa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f5ae:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f5b2:	ee16 4a90 	vmov	r4, s13
 801f5b6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f5ba:	eef0 6a43 	vmov.f32	s13, s6
 801f5be:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f5c2:	ee12 2a90 	vmov	r2, s5
 801f5c6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f5ca:	fb92 f3f3 	sdiv	r3, r2, r3
 801f5ce:	ee13 2a10 	vmov	r2, s6
 801f5d2:	9323      	str	r3, [sp, #140]	; 0x8c
 801f5d4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f5d6:	fb92 f3f3 	sdiv	r3, r2, r3
 801f5da:	9324      	str	r3, [sp, #144]	; 0x90
 801f5dc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f5de:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801f5e0:	3b01      	subs	r3, #1
 801f5e2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f5e6:	930d      	str	r3, [sp, #52]	; 0x34
 801f5e8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f5ea:	bf08      	it	eq
 801f5ec:	4613      	moveq	r3, r2
 801f5ee:	ee16 6a90 	vmov	r6, s13
 801f5f2:	9309      	str	r3, [sp, #36]	; 0x24
 801f5f4:	eeb0 3a67 	vmov.f32	s6, s15
 801f5f8:	eef0 2a47 	vmov.f32	s5, s14
 801f5fc:	e6c3      	b.n	801f386 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801f5fe:	2900      	cmp	r1, #0
 801f600:	f43f af4d 	beq.w	801f49e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801f604:	eb0a 0003 	add.w	r0, sl, r3
 801f608:	0843      	lsrs	r3, r0, #1
 801f60a:	07c0      	lsls	r0, r0, #31
 801f60c:	5cfb      	ldrb	r3, [r7, r3]
 801f60e:	bf54      	ite	pl
 801f610:	f003 030f 	andpl.w	r3, r3, #15
 801f614:	111b      	asrmi	r3, r3, #4
 801f616:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801f61a:	b2db      	uxtb	r3, r3
 801f61c:	930b      	str	r3, [sp, #44]	; 0x2c
 801f61e:	e73e      	b.n	801f49e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801f620:	f8b8 e000 	ldrh.w	lr, [r8]
 801f624:	fa1f fb83 	uxth.w	fp, r3
 801f628:	ea4f 202e 	mov.w	r0, lr, asr #8
 801f62c:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801f630:	43db      	mvns	r3, r3
 801f632:	b2db      	uxtb	r3, r3
 801f634:	fb11 f10b 	smulbb	r1, r1, fp
 801f638:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801f63c:	fb00 1003 	mla	r0, r0, r3, r1
 801f640:	fa5f fc8c 	uxtb.w	ip, ip
 801f644:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801f648:	b2d2      	uxtb	r2, r2
 801f64a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801f64e:	b280      	uxth	r0, r0
 801f650:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801f654:	fb1c fc0b 	smulbb	ip, ip, fp
 801f658:	fa5f fe8e 	uxtb.w	lr, lr
 801f65c:	fb12 fb0b 	smulbb	fp, r2, fp
 801f660:	fb01 cc03 	mla	ip, r1, r3, ip
 801f664:	fb0e bb03 	mla	fp, lr, r3, fp
 801f668:	1c43      	adds	r3, r0, #1
 801f66a:	fa1f fc8c 	uxth.w	ip, ip
 801f66e:	fa1f fb8b 	uxth.w	fp, fp
 801f672:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801f676:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
 801f67a:	f10c 0101 	add.w	r1, ip, #1
 801f67e:	f10b 0001 	add.w	r0, fp, #1
 801f682:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 801f686:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801f68a:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801f68e:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801f692:	4318      	orrs	r0, r3
 801f694:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801f698:	ea40 000c 	orr.w	r0, r0, ip
 801f69c:	f8a8 0000 	strh.w	r0, [r8]
 801f6a0:	e734      	b.n	801f50c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801f6a2:	f113 0b01 	adds.w	fp, r3, #1
 801f6a6:	f53f af31 	bmi.w	801f50c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801f6aa:	45dc      	cmp	ip, fp
 801f6ac:	f6ff af2e 	blt.w	801f50c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801f6b0:	f110 0b01 	adds.w	fp, r0, #1
 801f6b4:	f53f af2a 	bmi.w	801f50c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801f6b8:	45de      	cmp	lr, fp
 801f6ba:	f6ff af27 	blt.w	801f50c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801f6be:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801f6c0:	9302      	str	r3, [sp, #8]
 801f6c2:	fa0f f38e 	sxth.w	r3, lr
 801f6c6:	9301      	str	r3, [sp, #4]
 801f6c8:	fa0f f38c 	sxth.w	r3, ip
 801f6cc:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801f6d0:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801f6d4:	9300      	str	r3, [sp, #0]
 801f6d6:	463a      	mov	r2, r7
 801f6d8:	4653      	mov	r3, sl
 801f6da:	4641      	mov	r1, r8
 801f6dc:	9815      	ldr	r0, [sp, #84]	; 0x54
 801f6de:	f7ff fd4d 	bl	801f17c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 801f6e2:	e713      	b.n	801f50c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801f6e4:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801f6e6:	1422      	asrs	r2, r4, #16
 801f6e8:	1433      	asrs	r3, r6, #16
 801f6ea:	fb05 2303 	mla	r3, r5, r3, r2
 801f6ee:	085a      	lsrs	r2, r3, #1
 801f6f0:	07dd      	lsls	r5, r3, #31
 801f6f2:	5cba      	ldrb	r2, [r7, r2]
 801f6f4:	bf54      	ite	pl
 801f6f6:	f002 020f 	andpl.w	r2, r2, #15
 801f6fa:	1112      	asrmi	r2, r2, #4
 801f6fc:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801f700:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801f704:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801f708:	b2d2      	uxtb	r2, r2
 801f70a:	2900      	cmp	r1, #0
 801f70c:	d076      	beq.n	801f7fc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801f70e:	f103 0e01 	add.w	lr, r3, #1
 801f712:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 801f716:	f01e 0f01 	tst.w	lr, #1
 801f71a:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801f71e:	bf0c      	ite	eq
 801f720:	f00c 0c0f 	andeq.w	ip, ip, #15
 801f724:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 801f728:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801f72c:	fa5f f58c 	uxtb.w	r5, ip
 801f730:	9512      	str	r5, [sp, #72]	; 0x48
 801f732:	b300      	cbz	r0, 801f776 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 801f734:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801f736:	442b      	add	r3, r5
 801f738:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801f73c:	07dd      	lsls	r5, r3, #31
 801f73e:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801f742:	bf54      	ite	pl
 801f744:	f00c 0c0f 	andpl.w	ip, ip, #15
 801f748:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801f74c:	3301      	adds	r3, #1
 801f74e:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801f752:	fa5f f58c 	uxtb.w	r5, ip
 801f756:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801f75a:	950c      	str	r5, [sp, #48]	; 0x30
 801f75c:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801f760:	07dd      	lsls	r5, r3, #31
 801f762:	bf54      	ite	pl
 801f764:	f00c 0c0f 	andpl.w	ip, ip, #15
 801f768:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801f76c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801f770:	fa5f f38c 	uxtb.w	r3, ip
 801f774:	9313      	str	r3, [sp, #76]	; 0x4c
 801f776:	b289      	uxth	r1, r1
 801f778:	b280      	uxth	r0, r0
 801f77a:	fb01 f300 	mul.w	r3, r1, r0
 801f77e:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 801f782:	0109      	lsls	r1, r1, #4
 801f784:	b280      	uxth	r0, r0
 801f786:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 801f78a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801f78c:	1ac9      	subs	r1, r1, r3
 801f78e:	ebac 0c00 	sub.w	ip, ip, r0
 801f792:	b289      	uxth	r1, r1
 801f794:	4369      	muls	r1, r5
 801f796:	fa1f fc8c 	uxth.w	ip, ip
 801f79a:	fb02 120c 	mla	r2, r2, ip, r1
 801f79e:	990c      	ldr	r1, [sp, #48]	; 0x30
 801f7a0:	fb00 2001 	mla	r0, r0, r1, r2
 801f7a4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801f7a6:	fb03 0302 	mla	r3, r3, r2, r0
 801f7aa:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f7ae:	b1d3      	cbz	r3, 801f7e6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 801f7b0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801f7b2:	4353      	muls	r3, r2
 801f7b4:	1c5a      	adds	r2, r3, #1
 801f7b6:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801f7ba:	4a0f      	ldr	r2, [pc, #60]	; (801f7f8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 801f7bc:	121b      	asrs	r3, r3, #8
 801f7be:	6812      	ldr	r2, [r2, #0]
 801f7c0:	2bff      	cmp	r3, #255	; 0xff
 801f7c2:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 801f7c6:	d12d      	bne.n	801f824 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801f7c8:	0953      	lsrs	r3, r2, #5
 801f7ca:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801f7ce:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f7d2:	f02c 0c07 	bic.w	ip, ip, #7
 801f7d6:	ea43 0c0c 	orr.w	ip, r3, ip
 801f7da:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801f7de:	ea4c 0202 	orr.w	r2, ip, r2
 801f7e2:	f8a8 2000 	strh.w	r2, [r8]
 801f7e6:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801f7e8:	441c      	add	r4, r3
 801f7ea:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f7ec:	f108 0802 	add.w	r8, r8, #2
 801f7f0:	441e      	add	r6, r3
 801f7f2:	f10b 3bff 	add.w	fp, fp, #4294967295
 801f7f6:	e6ba      	b.n	801f56e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 801f7f8:	20015614 	.word	0x20015614
 801f7fc:	2800      	cmp	r0, #0
 801f7fe:	d0ba      	beq.n	801f776 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 801f800:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801f802:	442b      	add	r3, r5
 801f804:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801f808:	07db      	lsls	r3, r3, #31
 801f80a:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801f80e:	bf54      	ite	pl
 801f810:	f00c 0c0f 	andpl.w	ip, ip, #15
 801f814:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801f818:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801f81c:	fa5f f38c 	uxtb.w	r3, ip
 801f820:	930c      	str	r3, [sp, #48]	; 0x30
 801f822:	e7a8      	b.n	801f776 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 801f824:	f8b8 e000 	ldrh.w	lr, [r8]
 801f828:	fa1f fa83 	uxth.w	sl, r3
 801f82c:	ea4f 202e 	mov.w	r0, lr, asr #8
 801f830:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801f834:	43db      	mvns	r3, r3
 801f836:	b2db      	uxtb	r3, r3
 801f838:	fb11 f10a 	smulbb	r1, r1, sl
 801f83c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801f840:	fb00 1003 	mla	r0, r0, r3, r1
 801f844:	b2d2      	uxtb	r2, r2
 801f846:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801f84a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801f84e:	fa5f fe8e 	uxtb.w	lr, lr
 801f852:	fb12 f20a 	smulbb	r2, r2, sl
 801f856:	fb0e 2203 	mla	r2, lr, r3, r2
 801f85a:	fa5f fc8c 	uxtb.w	ip, ip
 801f85e:	b280      	uxth	r0, r0
 801f860:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801f864:	b292      	uxth	r2, r2
 801f866:	fb1c fc0a 	smulbb	ip, ip, sl
 801f86a:	fb01 cc03 	mla	ip, r1, r3, ip
 801f86e:	1c43      	adds	r3, r0, #1
 801f870:	1c51      	adds	r1, r2, #1
 801f872:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801f876:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 801f87a:	fa1f fc8c 	uxth.w	ip, ip
 801f87e:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801f882:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801f886:	4308      	orrs	r0, r1
 801f888:	f10c 0101 	add.w	r1, ip, #1
 801f88c:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801f890:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801f894:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801f898:	ea40 000c 	orr.w	r0, r0, ip
 801f89c:	f8a8 0000 	strh.w	r0, [r8]
 801f8a0:	e7a1      	b.n	801f7e6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 801f8a2:	b017      	add	sp, #92	; 0x5c
 801f8a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801f8a8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 801f8a8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801f8ac:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 801f8b0:	2d00      	cmp	r5, #0
 801f8b2:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801f8b6:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801f8ba:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 801f8be:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 801f8c2:	fb05 0e03 	mla	lr, r5, r3, r0
 801f8c6:	f2c0 80b0 	blt.w	801fa2a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 801f8ca:	45a9      	cmp	r9, r5
 801f8cc:	f340 80ad 	ble.w	801fa2a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 801f8d0:	2800      	cmp	r0, #0
 801f8d2:	f2c0 80a8 	blt.w	801fa26 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 801f8d6:	4580      	cmp	r8, r0
 801f8d8:	f340 80a5 	ble.w	801fa26 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 801f8dc:	ea4f 045e 	mov.w	r4, lr, lsr #1
 801f8e0:	f01e 0f01 	tst.w	lr, #1
 801f8e4:	5d16      	ldrb	r6, [r2, r4]
 801f8e6:	bf0c      	ite	eq
 801f8e8:	f006 060f 	andeq.w	r6, r6, #15
 801f8ec:	1136      	asrne	r6, r6, #4
 801f8ee:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801f8f2:	b2f6      	uxtb	r6, r6
 801f8f4:	1c44      	adds	r4, r0, #1
 801f8f6:	f100 809b 	bmi.w	801fa30 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 801f8fa:	45a0      	cmp	r8, r4
 801f8fc:	f340 8098 	ble.w	801fa30 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 801f900:	2f00      	cmp	r7, #0
 801f902:	f000 8097 	beq.w	801fa34 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 801f906:	f10e 0a01 	add.w	sl, lr, #1
 801f90a:	ea4f 045a 	mov.w	r4, sl, lsr #1
 801f90e:	f01a 0f01 	tst.w	sl, #1
 801f912:	5d14      	ldrb	r4, [r2, r4]
 801f914:	bf0c      	ite	eq
 801f916:	f004 040f 	andeq.w	r4, r4, #15
 801f91a:	1124      	asrne	r4, r4, #4
 801f91c:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801f920:	b2e4      	uxtb	r4, r4
 801f922:	3501      	adds	r5, #1
 801f924:	f100 808a 	bmi.w	801fa3c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 801f928:	45a9      	cmp	r9, r5
 801f92a:	f340 8087 	ble.w	801fa3c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 801f92e:	f1bc 0f00 	cmp.w	ip, #0
 801f932:	f000 8086 	beq.w	801fa42 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 801f936:	2800      	cmp	r0, #0
 801f938:	db7e      	blt.n	801fa38 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 801f93a:	4580      	cmp	r8, r0
 801f93c:	dd7c      	ble.n	801fa38 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 801f93e:	eb03 090e 	add.w	r9, r3, lr
 801f942:	ea4f 0559 	mov.w	r5, r9, lsr #1
 801f946:	f019 0f01 	tst.w	r9, #1
 801f94a:	5d55      	ldrb	r5, [r2, r5]
 801f94c:	bf0c      	ite	eq
 801f94e:	f005 050f 	andeq.w	r5, r5, #15
 801f952:	112d      	asrne	r5, r5, #4
 801f954:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 801f958:	b2ed      	uxtb	r5, r5
 801f95a:	3001      	adds	r0, #1
 801f95c:	d474      	bmi.n	801fa48 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 801f95e:	4580      	cmp	r8, r0
 801f960:	dd72      	ble.n	801fa48 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 801f962:	2f00      	cmp	r7, #0
 801f964:	d072      	beq.n	801fa4c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 801f966:	3301      	adds	r3, #1
 801f968:	449e      	add	lr, r3
 801f96a:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801f96e:	f01e 0f01 	tst.w	lr, #1
 801f972:	5cd0      	ldrb	r0, [r2, r3]
 801f974:	bf0c      	ite	eq
 801f976:	f000 000f 	andeq.w	r0, r0, #15
 801f97a:	1100      	asrne	r0, r0, #4
 801f97c:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801f980:	b2c3      	uxtb	r3, r0
 801f982:	b2ba      	uxth	r2, r7
 801f984:	fa1f fc8c 	uxth.w	ip, ip
 801f988:	fb02 f00c 	mul.w	r0, r2, ip
 801f98c:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 801f990:	0112      	lsls	r2, r2, #4
 801f992:	fa1f fc8c 	uxth.w	ip, ip
 801f996:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 801f99a:	1a12      	subs	r2, r2, r0
 801f99c:	eba7 070c 	sub.w	r7, r7, ip
 801f9a0:	b292      	uxth	r2, r2
 801f9a2:	b2bf      	uxth	r7, r7
 801f9a4:	4362      	muls	r2, r4
 801f9a6:	fb06 2207 	mla	r2, r6, r7, r2
 801f9aa:	fb0c 2505 	mla	r5, ip, r5, r2
 801f9ae:	fb00 5303 	mla	r3, r0, r3, r5
 801f9b2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f9b6:	b3a3      	cbz	r3, 801fa22 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 801f9b8:	4a25      	ldr	r2, [pc, #148]	; (801fa50 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 801f9ba:	880e      	ldrh	r6, [r1, #0]
 801f9bc:	6815      	ldr	r5, [r2, #0]
 801f9be:	1234      	asrs	r4, r6, #8
 801f9c0:	b29a      	uxth	r2, r3
 801f9c2:	f3c5 4007 	ubfx	r0, r5, #16, #8
 801f9c6:	43db      	mvns	r3, r3
 801f9c8:	b2db      	uxtb	r3, r3
 801f9ca:	fb10 f002 	smulbb	r0, r0, r2
 801f9ce:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801f9d2:	fb04 0403 	mla	r4, r4, r3, r0
 801f9d6:	f3c5 2707 	ubfx	r7, r5, #8, #8
 801f9da:	10f0      	asrs	r0, r6, #3
 801f9dc:	b2ed      	uxtb	r5, r5
 801f9de:	00f6      	lsls	r6, r6, #3
 801f9e0:	fb17 f702 	smulbb	r7, r7, r2
 801f9e4:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801f9e8:	fb15 f202 	smulbb	r2, r5, r2
 801f9ec:	b2f6      	uxtb	r6, r6
 801f9ee:	b2a4      	uxth	r4, r4
 801f9f0:	fb00 7003 	mla	r0, r0, r3, r7
 801f9f4:	fb06 2303 	mla	r3, r6, r3, r2
 801f9f8:	b29a      	uxth	r2, r3
 801f9fa:	1c63      	adds	r3, r4, #1
 801f9fc:	b280      	uxth	r0, r0
 801f9fe:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801fa02:	1c53      	adds	r3, r2, #1
 801fa04:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801fa08:	1c42      	adds	r2, r0, #1
 801fa0a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801fa0e:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801fa12:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801fa16:	0940      	lsrs	r0, r0, #5
 801fa18:	4323      	orrs	r3, r4
 801fa1a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801fa1e:	4303      	orrs	r3, r0
 801fa20:	800b      	strh	r3, [r1, #0]
 801fa22:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801fa26:	2600      	movs	r6, #0
 801fa28:	e764      	b.n	801f8f4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 801fa2a:	2400      	movs	r4, #0
 801fa2c:	4626      	mov	r6, r4
 801fa2e:	e778      	b.n	801f922 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801fa30:	2400      	movs	r4, #0
 801fa32:	e776      	b.n	801f922 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801fa34:	463c      	mov	r4, r7
 801fa36:	e774      	b.n	801f922 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801fa38:	2500      	movs	r5, #0
 801fa3a:	e78e      	b.n	801f95a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 801fa3c:	2300      	movs	r3, #0
 801fa3e:	461d      	mov	r5, r3
 801fa40:	e79f      	b.n	801f982 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801fa42:	4663      	mov	r3, ip
 801fa44:	4665      	mov	r5, ip
 801fa46:	e79c      	b.n	801f982 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801fa48:	2300      	movs	r3, #0
 801fa4a:	e79a      	b.n	801f982 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801fa4c:	463b      	mov	r3, r7
 801fa4e:	e798      	b.n	801f982 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801fa50:	20015614 	.word	0x20015614

0801fa54 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801fa54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fa58:	b093      	sub	sp, #76	; 0x4c
 801fa5a:	461d      	mov	r5, r3
 801fa5c:	920c      	str	r2, [sp, #48]	; 0x30
 801fa5e:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801fa60:	9107      	str	r1, [sp, #28]
 801fa62:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 801fa66:	9011      	str	r0, [sp, #68]	; 0x44
 801fa68:	6850      	ldr	r0, [r2, #4]
 801fa6a:	6812      	ldr	r2, [r2, #0]
 801fa6c:	fb00 1303 	mla	r3, r0, r3, r1
 801fa70:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801fa74:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801fa76:	689b      	ldr	r3, [r3, #8]
 801fa78:	3301      	adds	r3, #1
 801fa7a:	f023 0301 	bic.w	r3, r3, #1
 801fa7e:	9306      	str	r3, [sp, #24]
 801fa80:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801fa82:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 801fa86:	681f      	ldr	r7, [r3, #0]
 801fa88:	9b07      	ldr	r3, [sp, #28]
 801fa8a:	2b00      	cmp	r3, #0
 801fa8c:	dc03      	bgt.n	801fa96 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 801fa8e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801fa90:	2b00      	cmp	r3, #0
 801fa92:	f340 8267 	ble.w	801ff64 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 801fa96:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801fa98:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801fa9c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801faa0:	1e48      	subs	r0, r1, #1
 801faa2:	f102 3cff 	add.w	ip, r2, #4294967295
 801faa6:	2d00      	cmp	r5, #0
 801faa8:	f340 80b8 	ble.w	801fc1c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801faac:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801fab0:	ea4f 4326 	mov.w	r3, r6, asr #16
 801fab4:	d406      	bmi.n	801fac4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801fab6:	4586      	cmp	lr, r0
 801fab8:	da04      	bge.n	801fac4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801faba:	2b00      	cmp	r3, #0
 801fabc:	db02      	blt.n	801fac4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801fabe:	4563      	cmp	r3, ip
 801fac0:	f2c0 80ad 	blt.w	801fc1e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 801fac4:	f11e 0e01 	adds.w	lr, lr, #1
 801fac8:	f100 80a0 	bmi.w	801fc0c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801facc:	4571      	cmp	r1, lr
 801face:	f2c0 809d 	blt.w	801fc0c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801fad2:	3301      	adds	r3, #1
 801fad4:	f100 809a 	bmi.w	801fc0c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801fad8:	429a      	cmp	r2, r3
 801fada:	f2c0 8097 	blt.w	801fc0c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801fade:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 801fae2:	9509      	str	r5, [sp, #36]	; 0x24
 801fae4:	46c8      	mov	r8, r9
 801fae6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fae8:	2b00      	cmp	r3, #0
 801faea:	f340 80b6 	ble.w	801fc5a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 801faee:	f3c4 3303 	ubfx	r3, r4, #12, #4
 801faf2:	9308      	str	r3, [sp, #32]
 801faf4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801faf6:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801fafa:	1423      	asrs	r3, r4, #16
 801fafc:	ea4f 4026 	mov.w	r0, r6, asr #16
 801fb00:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801fb04:	f100 813e 	bmi.w	801fd84 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801fb08:	f10c 3bff 	add.w	fp, ip, #4294967295
 801fb0c:	455b      	cmp	r3, fp
 801fb0e:	f280 8139 	bge.w	801fd84 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801fb12:	2800      	cmp	r0, #0
 801fb14:	f2c0 8136 	blt.w	801fd84 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801fb18:	f10e 3bff 	add.w	fp, lr, #4294967295
 801fb1c:	4558      	cmp	r0, fp
 801fb1e:	f280 8131 	bge.w	801fd84 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801fb22:	9a06      	ldr	r2, [sp, #24]
 801fb24:	fb00 3302 	mla	r3, r0, r2, r3
 801fb28:	0858      	lsrs	r0, r3, #1
 801fb2a:	07da      	lsls	r2, r3, #31
 801fb2c:	f817 c000 	ldrb.w	ip, [r7, r0]
 801fb30:	9a08      	ldr	r2, [sp, #32]
 801fb32:	bf54      	ite	pl
 801fb34:	f00c 0c0f 	andpl.w	ip, ip, #15
 801fb38:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801fb3c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801fb40:	fa5f fc8c 	uxtb.w	ip, ip
 801fb44:	2a00      	cmp	r2, #0
 801fb46:	f000 80cb 	beq.w	801fce0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801fb4a:	1c58      	adds	r0, r3, #1
 801fb4c:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801fb50:	07c0      	lsls	r0, r0, #31
 801fb52:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801fb56:	bf54      	ite	pl
 801fb58:	f00e 0e0f 	andpl.w	lr, lr, #15
 801fb5c:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801fb60:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801fb64:	fa5f fe8e 	uxtb.w	lr, lr
 801fb68:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 801fb6c:	b1b9      	cbz	r1, 801fb9e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 801fb6e:	4453      	add	r3, sl
 801fb70:	0858      	lsrs	r0, r3, #1
 801fb72:	07da      	lsls	r2, r3, #31
 801fb74:	5c38      	ldrb	r0, [r7, r0]
 801fb76:	bf54      	ite	pl
 801fb78:	f000 000f 	andpl.w	r0, r0, #15
 801fb7c:	1100      	asrmi	r0, r0, #4
 801fb7e:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801fb82:	b2c0      	uxtb	r0, r0
 801fb84:	900a      	str	r0, [sp, #40]	; 0x28
 801fb86:	1c58      	adds	r0, r3, #1
 801fb88:	0843      	lsrs	r3, r0, #1
 801fb8a:	07c2      	lsls	r2, r0, #31
 801fb8c:	5cfb      	ldrb	r3, [r7, r3]
 801fb8e:	bf54      	ite	pl
 801fb90:	f003 030f 	andpl.w	r3, r3, #15
 801fb94:	111b      	asrmi	r3, r3, #4
 801fb96:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801fb9a:	b2db      	uxtb	r3, r3
 801fb9c:	930e      	str	r3, [sp, #56]	; 0x38
 801fb9e:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801fba2:	b289      	uxth	r1, r1
 801fba4:	fb02 f301 	mul.w	r3, r2, r1
 801fba8:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801fbac:	0112      	lsls	r2, r2, #4
 801fbae:	b289      	uxth	r1, r1
 801fbb0:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 801fbb4:	1a40      	subs	r0, r0, r1
 801fbb6:	fa1f fe80 	uxth.w	lr, r0
 801fbba:	1ad2      	subs	r2, r2, r3
 801fbbc:	980d      	ldr	r0, [sp, #52]	; 0x34
 801fbbe:	b292      	uxth	r2, r2
 801fbc0:	4342      	muls	r2, r0
 801fbc2:	fb0c 2c0e 	mla	ip, ip, lr, r2
 801fbc6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801fbc8:	fb01 c102 	mla	r1, r1, r2, ip
 801fbcc:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801fbce:	fb03 1302 	mla	r3, r3, r2, r1
 801fbd2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801fbd6:	2bff      	cmp	r3, #255	; 0xff
 801fbd8:	f040 8093 	bne.w	801fd02 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 801fbdc:	4bbe      	ldr	r3, [pc, #760]	; (801fed8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 801fbde:	681a      	ldr	r2, [r3, #0]
 801fbe0:	4bbe      	ldr	r3, [pc, #760]	; (801fedc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 801fbe2:	0951      	lsrs	r1, r2, #5
 801fbe4:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 801fbe8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801fbec:	430b      	orrs	r3, r1
 801fbee:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801fbf2:	4313      	orrs	r3, r2
 801fbf4:	f8a8 3000 	strh.w	r3, [r8]
 801fbf8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801fbfa:	441c      	add	r4, r3
 801fbfc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801fbfe:	441e      	add	r6, r3
 801fc00:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fc02:	3b01      	subs	r3, #1
 801fc04:	f108 0802 	add.w	r8, r8, #2
 801fc08:	9309      	str	r3, [sp, #36]	; 0x24
 801fc0a:	e76c      	b.n	801fae6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801fc0c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801fc0e:	441c      	add	r4, r3
 801fc10:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801fc12:	3d01      	subs	r5, #1
 801fc14:	441e      	add	r6, r3
 801fc16:	f109 0902 	add.w	r9, r9, #2
 801fc1a:	e744      	b.n	801faa6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801fc1c:	d021      	beq.n	801fc62 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 801fc1e:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801fc20:	1e6b      	subs	r3, r5, #1
 801fc22:	fb00 4003 	mla	r0, r0, r3, r4
 801fc26:	1400      	asrs	r0, r0, #16
 801fc28:	f53f af59 	bmi.w	801fade <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801fc2c:	3901      	subs	r1, #1
 801fc2e:	4288      	cmp	r0, r1
 801fc30:	f6bf af55 	bge.w	801fade <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801fc34:	9920      	ldr	r1, [sp, #128]	; 0x80
 801fc36:	fb01 6303 	mla	r3, r1, r3, r6
 801fc3a:	141b      	asrs	r3, r3, #16
 801fc3c:	f53f af4f 	bmi.w	801fade <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801fc40:	3a01      	subs	r2, #1
 801fc42:	4293      	cmp	r3, r2
 801fc44:	f6bf af4b 	bge.w	801fade <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801fc48:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801fc4c:	9308      	str	r3, [sp, #32]
 801fc4e:	46a8      	mov	r8, r5
 801fc50:	46ce      	mov	lr, r9
 801fc52:	f1b8 0f00 	cmp.w	r8, #0
 801fc56:	f300 80b5 	bgt.w	801fdc4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801fc5a:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801fc5e:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801fc62:	9b07      	ldr	r3, [sp, #28]
 801fc64:	2b00      	cmp	r3, #0
 801fc66:	f340 817d 	ble.w	801ff64 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 801fc6a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801fc6e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801fc72:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801fc76:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801fc78:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801fc7c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801fc80:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801fc84:	eef0 6a62 	vmov.f32	s13, s5
 801fc88:	ee61 7a27 	vmul.f32	s15, s2, s15
 801fc8c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fc90:	ee77 2a62 	vsub.f32	s5, s14, s5
 801fc94:	ee16 4a90 	vmov	r4, s13
 801fc98:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801fc9c:	eef0 6a43 	vmov.f32	s13, s6
 801fca0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801fca4:	ee12 2a90 	vmov	r2, s5
 801fca8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801fcac:	fb92 f3f3 	sdiv	r3, r2, r3
 801fcb0:	ee13 2a10 	vmov	r2, s6
 801fcb4:	931f      	str	r3, [sp, #124]	; 0x7c
 801fcb6:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801fcb8:	fb92 f3f3 	sdiv	r3, r2, r3
 801fcbc:	9320      	str	r3, [sp, #128]	; 0x80
 801fcbe:	9b07      	ldr	r3, [sp, #28]
 801fcc0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801fcc2:	3b01      	subs	r3, #1
 801fcc4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fcc8:	9307      	str	r3, [sp, #28]
 801fcca:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801fccc:	ee16 6a90 	vmov	r6, s13
 801fcd0:	bf14      	ite	ne
 801fcd2:	461d      	movne	r5, r3
 801fcd4:	4615      	moveq	r5, r2
 801fcd6:	eeb0 3a67 	vmov.f32	s6, s15
 801fcda:	eef0 2a47 	vmov.f32	s5, s14
 801fcde:	e6d3      	b.n	801fa88 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 801fce0:	2900      	cmp	r1, #0
 801fce2:	f43f af5c 	beq.w	801fb9e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 801fce6:	eb0a 0003 	add.w	r0, sl, r3
 801fcea:	0843      	lsrs	r3, r0, #1
 801fcec:	07c0      	lsls	r0, r0, #31
 801fcee:	5cfb      	ldrb	r3, [r7, r3]
 801fcf0:	bf54      	ite	pl
 801fcf2:	f003 030f 	andpl.w	r3, r3, #15
 801fcf6:	111b      	asrmi	r3, r3, #4
 801fcf8:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801fcfc:	b2db      	uxtb	r3, r3
 801fcfe:	930a      	str	r3, [sp, #40]	; 0x28
 801fd00:	e74d      	b.n	801fb9e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 801fd02:	2b00      	cmp	r3, #0
 801fd04:	f43f af78 	beq.w	801fbf8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801fd08:	4a73      	ldr	r2, [pc, #460]	; (801fed8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 801fd0a:	f8b8 c000 	ldrh.w	ip, [r8]
 801fd0e:	6810      	ldr	r0, [r2, #0]
 801fd10:	fa1f fe83 	uxth.w	lr, r3
 801fd14:	ea4f 212c 	mov.w	r1, ip, asr #8
 801fd18:	f3c0 4207 	ubfx	r2, r0, #16, #8
 801fd1c:	43db      	mvns	r3, r3
 801fd1e:	b2db      	uxtb	r3, r3
 801fd20:	fb12 f20e 	smulbb	r2, r2, lr
 801fd24:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801fd28:	fb01 2103 	mla	r1, r1, r3, r2
 801fd2c:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 801fd30:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801fd34:	b2c0      	uxtb	r0, r0
 801fd36:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801fd3a:	fb1b fb0e 	smulbb	fp, fp, lr
 801fd3e:	b289      	uxth	r1, r1
 801fd40:	fb10 fe0e 	smulbb	lr, r0, lr
 801fd44:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801fd48:	fa5f fc8c 	uxtb.w	ip, ip
 801fd4c:	fb02 b203 	mla	r2, r2, r3, fp
 801fd50:	1c48      	adds	r0, r1, #1
 801fd52:	fb0c e303 	mla	r3, ip, r3, lr
 801fd56:	b292      	uxth	r2, r2
 801fd58:	b29b      	uxth	r3, r3
 801fd5a:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 801fd5e:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 801fd62:	f102 0b01 	add.w	fp, r2, #1
 801fd66:	1c59      	adds	r1, r3, #1
 801fd68:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801fd6c:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 801fd70:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801fd74:	0952      	lsrs	r2, r2, #5
 801fd76:	4301      	orrs	r1, r0
 801fd78:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801fd7c:	4311      	orrs	r1, r2
 801fd7e:	f8a8 1000 	strh.w	r1, [r8]
 801fd82:	e739      	b.n	801fbf8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801fd84:	f113 0b01 	adds.w	fp, r3, #1
 801fd88:	f53f af36 	bmi.w	801fbf8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801fd8c:	45dc      	cmp	ip, fp
 801fd8e:	f6ff af33 	blt.w	801fbf8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801fd92:	f110 0b01 	adds.w	fp, r0, #1
 801fd96:	f53f af2f 	bmi.w	801fbf8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801fd9a:	45de      	cmp	lr, fp
 801fd9c:	f6ff af2c 	blt.w	801fbf8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801fda0:	9a08      	ldr	r2, [sp, #32]
 801fda2:	9302      	str	r3, [sp, #8]
 801fda4:	fa0f f38e 	sxth.w	r3, lr
 801fda8:	9301      	str	r3, [sp, #4]
 801fdaa:	fa0f f38c 	sxth.w	r3, ip
 801fdae:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801fdb2:	9105      	str	r1, [sp, #20]
 801fdb4:	9300      	str	r3, [sp, #0]
 801fdb6:	463a      	mov	r2, r7
 801fdb8:	4653      	mov	r3, sl
 801fdba:	4641      	mov	r1, r8
 801fdbc:	9811      	ldr	r0, [sp, #68]	; 0x44
 801fdbe:	f7ff fd73 	bl	801f8a8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 801fdc2:	e719      	b.n	801fbf8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801fdc4:	9906      	ldr	r1, [sp, #24]
 801fdc6:	1422      	asrs	r2, r4, #16
 801fdc8:	1433      	asrs	r3, r6, #16
 801fdca:	fb01 2303 	mla	r3, r1, r3, r2
 801fdce:	085a      	lsrs	r2, r3, #1
 801fdd0:	07d9      	lsls	r1, r3, #31
 801fdd2:	5cba      	ldrb	r2, [r7, r2]
 801fdd4:	bf54      	ite	pl
 801fdd6:	f002 020f 	andpl.w	r2, r2, #15
 801fdda:	1112      	asrmi	r2, r2, #4
 801fddc:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801fde0:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801fde4:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801fde8:	b2d2      	uxtb	r2, r2
 801fdea:	2800      	cmp	r0, #0
 801fdec:	d062      	beq.n	801feb4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 801fdee:	f103 0a01 	add.w	sl, r3, #1
 801fdf2:	ea4f 015a 	mov.w	r1, sl, lsr #1
 801fdf6:	f01a 0f01 	tst.w	sl, #1
 801fdfa:	5c79      	ldrb	r1, [r7, r1]
 801fdfc:	bf0c      	ite	eq
 801fdfe:	f001 010f 	andeq.w	r1, r1, #15
 801fe02:	1109      	asrne	r1, r1, #4
 801fe04:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801fe08:	b2c9      	uxtb	r1, r1
 801fe0a:	910f      	str	r1, [sp, #60]	; 0x3c
 801fe0c:	f1bc 0f00 	cmp.w	ip, #0
 801fe10:	d019      	beq.n	801fe46 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 801fe12:	9908      	ldr	r1, [sp, #32]
 801fe14:	440b      	add	r3, r1
 801fe16:	0859      	lsrs	r1, r3, #1
 801fe18:	f013 0f01 	tst.w	r3, #1
 801fe1c:	5c79      	ldrb	r1, [r7, r1]
 801fe1e:	bf0c      	ite	eq
 801fe20:	f001 010f 	andeq.w	r1, r1, #15
 801fe24:	1109      	asrne	r1, r1, #4
 801fe26:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801fe2a:	b2c9      	uxtb	r1, r1
 801fe2c:	3301      	adds	r3, #1
 801fe2e:	910b      	str	r1, [sp, #44]	; 0x2c
 801fe30:	0859      	lsrs	r1, r3, #1
 801fe32:	07db      	lsls	r3, r3, #31
 801fe34:	5c79      	ldrb	r1, [r7, r1]
 801fe36:	bf54      	ite	pl
 801fe38:	f001 010f 	andpl.w	r1, r1, #15
 801fe3c:	1109      	asrmi	r1, r1, #4
 801fe3e:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801fe42:	b2c9      	uxtb	r1, r1
 801fe44:	9110      	str	r1, [sp, #64]	; 0x40
 801fe46:	b280      	uxth	r0, r0
 801fe48:	fa1f fc8c 	uxth.w	ip, ip
 801fe4c:	fb00 f30c 	mul.w	r3, r0, ip
 801fe50:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 801fe54:	0100      	lsls	r0, r0, #4
 801fe56:	fa1f fc8c 	uxth.w	ip, ip
 801fe5a:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 801fe5e:	eba1 010c 	sub.w	r1, r1, ip
 801fe62:	fa1f fa81 	uxth.w	sl, r1
 801fe66:	1ac0      	subs	r0, r0, r3
 801fe68:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801fe6a:	b280      	uxth	r0, r0
 801fe6c:	4348      	muls	r0, r1
 801fe6e:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801fe70:	fb02 020a 	mla	r2, r2, sl, r0
 801fe74:	fb0c 2c01 	mla	ip, ip, r1, r2
 801fe78:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801fe7a:	fb03 c302 	mla	r3, r3, r2, ip
 801fe7e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801fe82:	2bff      	cmp	r3, #255	; 0xff
 801fe84:	d12c      	bne.n	801fee0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 801fe86:	4b14      	ldr	r3, [pc, #80]	; (801fed8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 801fe88:	681a      	ldr	r2, [r3, #0]
 801fe8a:	4b14      	ldr	r3, [pc, #80]	; (801fedc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 801fe8c:	0951      	lsrs	r1, r2, #5
 801fe8e:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 801fe92:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801fe96:	430b      	orrs	r3, r1
 801fe98:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801fe9c:	4313      	orrs	r3, r2
 801fe9e:	f8ae 3000 	strh.w	r3, [lr]
 801fea2:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801fea4:	441c      	add	r4, r3
 801fea6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801fea8:	f10e 0e02 	add.w	lr, lr, #2
 801feac:	441e      	add	r6, r3
 801feae:	f108 38ff 	add.w	r8, r8, #4294967295
 801feb2:	e6ce      	b.n	801fc52 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 801feb4:	f1bc 0f00 	cmp.w	ip, #0
 801feb8:	d0c5      	beq.n	801fe46 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 801feba:	9908      	ldr	r1, [sp, #32]
 801febc:	440b      	add	r3, r1
 801febe:	0859      	lsrs	r1, r3, #1
 801fec0:	07db      	lsls	r3, r3, #31
 801fec2:	5c79      	ldrb	r1, [r7, r1]
 801fec4:	bf54      	ite	pl
 801fec6:	f001 010f 	andpl.w	r1, r1, #15
 801feca:	1109      	asrmi	r1, r1, #4
 801fecc:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801fed0:	b2c9      	uxtb	r1, r1
 801fed2:	910b      	str	r1, [sp, #44]	; 0x2c
 801fed4:	e7b7      	b.n	801fe46 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 801fed6:	bf00      	nop
 801fed8:	20015614 	.word	0x20015614
 801fedc:	fffff800 	.word	0xfffff800
 801fee0:	2b00      	cmp	r3, #0
 801fee2:	d0de      	beq.n	801fea2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801fee4:	4a21      	ldr	r2, [pc, #132]	; (801ff6c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 801fee6:	f8be c000 	ldrh.w	ip, [lr]
 801feea:	6810      	ldr	r0, [r2, #0]
 801feec:	fa1f fa83 	uxth.w	sl, r3
 801fef0:	ea4f 212c 	mov.w	r1, ip, asr #8
 801fef4:	f3c0 4207 	ubfx	r2, r0, #16, #8
 801fef8:	43db      	mvns	r3, r3
 801fefa:	b2db      	uxtb	r3, r3
 801fefc:	fb12 f20a 	smulbb	r2, r2, sl
 801ff00:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801ff04:	fb01 2103 	mla	r1, r1, r3, r2
 801ff08:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 801ff0c:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801ff10:	b2c0      	uxtb	r0, r0
 801ff12:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801ff16:	fa5f fc8c 	uxtb.w	ip, ip
 801ff1a:	fb10 f00a 	smulbb	r0, r0, sl
 801ff1e:	fb0c 0003 	mla	r0, ip, r3, r0
 801ff22:	b289      	uxth	r1, r1
 801ff24:	fb1b fb0a 	smulbb	fp, fp, sl
 801ff28:	b280      	uxth	r0, r0
 801ff2a:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801ff2e:	fb02 b203 	mla	r2, r2, r3, fp
 801ff32:	1c4b      	adds	r3, r1, #1
 801ff34:	f100 0b01 	add.w	fp, r0, #1
 801ff38:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801ff3c:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 801ff40:	b292      	uxth	r2, r2
 801ff42:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 801ff46:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801ff4a:	ea4b 0101 	orr.w	r1, fp, r1
 801ff4e:	f102 0b01 	add.w	fp, r2, #1
 801ff52:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 801ff56:	0952      	lsrs	r2, r2, #5
 801ff58:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ff5c:	4311      	orrs	r1, r2
 801ff5e:	f8ae 1000 	strh.w	r1, [lr]
 801ff62:	e79e      	b.n	801fea2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801ff64:	b013      	add	sp, #76	; 0x4c
 801ff66:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ff6a:	bf00      	nop
 801ff6c:	20015614 	.word	0x20015614

0801ff70 <CRC_Lock>:
 801ff70:	b530      	push	{r4, r5, lr}
 801ff72:	4a20      	ldr	r2, [pc, #128]	; (801fff4 <CRC_Lock+0x84>)
 801ff74:	6813      	ldr	r3, [r2, #0]
 801ff76:	f023 0301 	bic.w	r3, r3, #1
 801ff7a:	6013      	str	r3, [r2, #0]
 801ff7c:	4b1e      	ldr	r3, [pc, #120]	; (801fff8 <CRC_Lock+0x88>)
 801ff7e:	681a      	ldr	r2, [r3, #0]
 801ff80:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 801ff84:	4022      	ands	r2, r4
 801ff86:	f24c 2540 	movw	r5, #49728	; 0xc240
 801ff8a:	42aa      	cmp	r2, r5
 801ff8c:	d005      	beq.n	801ff9a <CRC_Lock+0x2a>
 801ff8e:	681b      	ldr	r3, [r3, #0]
 801ff90:	f24c 2270 	movw	r2, #49776	; 0xc270
 801ff94:	4023      	ands	r3, r4
 801ff96:	4293      	cmp	r3, r2
 801ff98:	d124      	bne.n	801ffe4 <CRC_Lock+0x74>
 801ff9a:	4b18      	ldr	r3, [pc, #96]	; (801fffc <CRC_Lock+0x8c>)
 801ff9c:	681b      	ldr	r3, [r3, #0]
 801ff9e:	bb0b      	cbnz	r3, 801ffe4 <CRC_Lock+0x74>
 801ffa0:	4b17      	ldr	r3, [pc, #92]	; (8020000 <CRC_Lock+0x90>)
 801ffa2:	681a      	ldr	r2, [r3, #0]
 801ffa4:	f3c2 020b 	ubfx	r2, r2, #0, #12
 801ffa8:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 801ffac:	d00d      	beq.n	801ffca <CRC_Lock+0x5a>
 801ffae:	681a      	ldr	r2, [r3, #0]
 801ffb0:	f240 4483 	movw	r4, #1155	; 0x483
 801ffb4:	f3c2 020b 	ubfx	r2, r2, #0, #12
 801ffb8:	42a2      	cmp	r2, r4
 801ffba:	d006      	beq.n	801ffca <CRC_Lock+0x5a>
 801ffbc:	681b      	ldr	r3, [r3, #0]
 801ffbe:	f240 4285 	movw	r2, #1157	; 0x485
 801ffc2:	f3c3 030b 	ubfx	r3, r3, #0, #12
 801ffc6:	4293      	cmp	r3, r2
 801ffc8:	d10c      	bne.n	801ffe4 <CRC_Lock+0x74>
 801ffca:	4b0e      	ldr	r3, [pc, #56]	; (8020004 <CRC_Lock+0x94>)
 801ffcc:	2201      	movs	r2, #1
 801ffce:	601a      	str	r2, [r3, #0]
 801ffd0:	681a      	ldr	r2, [r3, #0]
 801ffd2:	2a00      	cmp	r2, #0
 801ffd4:	d1fc      	bne.n	801ffd0 <CRC_Lock+0x60>
 801ffd6:	4b0c      	ldr	r3, [pc, #48]	; (8020008 <CRC_Lock+0x98>)
 801ffd8:	6018      	str	r0, [r3, #0]
 801ffda:	6818      	ldr	r0, [r3, #0]
 801ffdc:	1a43      	subs	r3, r0, r1
 801ffde:	4258      	negs	r0, r3
 801ffe0:	4158      	adcs	r0, r3
 801ffe2:	bd30      	pop	{r4, r5, pc}
 801ffe4:	4b09      	ldr	r3, [pc, #36]	; (802000c <CRC_Lock+0x9c>)
 801ffe6:	2201      	movs	r2, #1
 801ffe8:	601a      	str	r2, [r3, #0]
 801ffea:	681a      	ldr	r2, [r3, #0]
 801ffec:	2a00      	cmp	r2, #0
 801ffee:	d1fc      	bne.n	801ffea <CRC_Lock+0x7a>
 801fff0:	4b07      	ldr	r3, [pc, #28]	; (8020010 <CRC_Lock+0xa0>)
 801fff2:	e7f1      	b.n	801ffd8 <CRC_Lock+0x68>
 801fff4:	e0002000 	.word	0xe0002000
 801fff8:	e000ed00 	.word	0xe000ed00
 801fffc:	e0042000 	.word	0xe0042000
 8020000:	5c001000 	.word	0x5c001000
 8020004:	58024c08 	.word	0x58024c08
 8020008:	58024c00 	.word	0x58024c00
 802000c:	40023008 	.word	0x40023008
 8020010:	40023000 	.word	0x40023000

08020014 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 8020014:	6101      	str	r1, [r0, #16]
 8020016:	4770      	bx	lr

08020018 <_ZN8touchgfx8Gestures4tickEv>:
 8020018:	7b83      	ldrb	r3, [r0, #14]
 802001a:	b14b      	cbz	r3, 8020030 <_ZN8touchgfx8Gestures4tickEv+0x18>
 802001c:	8903      	ldrh	r3, [r0, #8]
 802001e:	3301      	adds	r3, #1
 8020020:	b29b      	uxth	r3, r3
 8020022:	2b07      	cmp	r3, #7
 8020024:	8103      	strh	r3, [r0, #8]
 8020026:	bf81      	itttt	hi
 8020028:	2300      	movhi	r3, #0
 802002a:	8143      	strhhi	r3, [r0, #10]
 802002c:	8183      	strhhi	r3, [r0, #12]
 802002e:	7383      	strbhi	r3, [r0, #14]
 8020030:	4770      	bx	lr
	...

08020034 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 8020034:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8020038:	4698      	mov	r8, r3
 802003a:	8883      	ldrh	r3, [r0, #4]
 802003c:	f8ad 3006 	strh.w	r3, [sp, #6]
 8020040:	eba8 0303 	sub.w	r3, r8, r3
 8020044:	b21b      	sxth	r3, r3
 8020046:	4604      	mov	r4, r0
 8020048:	2b00      	cmp	r3, #0
 802004a:	4617      	mov	r7, r2
 802004c:	4a18      	ldr	r2, [pc, #96]	; (80200b0 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 802004e:	9200      	str	r2, [sp, #0]
 8020050:	bfb8      	it	lt
 8020052:	425b      	neglt	r3, r3
 8020054:	8aa2      	ldrh	r2, [r4, #20]
 8020056:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 802005a:	f8ad 800a 	strh.w	r8, [sp, #10]
 802005e:	b21b      	sxth	r3, r3
 8020060:	460e      	mov	r6, r1
 8020062:	4293      	cmp	r3, r2
 8020064:	88c1      	ldrh	r1, [r0, #6]
 8020066:	f8ad 1008 	strh.w	r1, [sp, #8]
 802006a:	f04f 0000 	mov.w	r0, #0
 802006e:	f88d 0004 	strb.w	r0, [sp, #4]
 8020072:	f8ad 500c 	strh.w	r5, [sp, #12]
 8020076:	dc07      	bgt.n	8020088 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 8020078:	1a69      	subs	r1, r5, r1
 802007a:	b209      	sxth	r1, r1
 802007c:	2900      	cmp	r1, #0
 802007e:	bfb8      	it	lt
 8020080:	4249      	neglt	r1, r1
 8020082:	b209      	sxth	r1, r1
 8020084:	428a      	cmp	r2, r1
 8020086:	da10      	bge.n	80200aa <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 8020088:	6920      	ldr	r0, [r4, #16]
 802008a:	6803      	ldr	r3, [r0, #0]
 802008c:	4669      	mov	r1, sp
 802008e:	685b      	ldr	r3, [r3, #4]
 8020090:	4798      	blx	r3
 8020092:	eba8 0606 	sub.w	r6, r8, r6
 8020096:	2300      	movs	r3, #0
 8020098:	1bef      	subs	r7, r5, r7
 802009a:	2001      	movs	r0, #1
 802009c:	8123      	strh	r3, [r4, #8]
 802009e:	8166      	strh	r6, [r4, #10]
 80200a0:	81a7      	strh	r7, [r4, #12]
 80200a2:	f8a4 8004 	strh.w	r8, [r4, #4]
 80200a6:	80e5      	strh	r5, [r4, #6]
 80200a8:	73a0      	strb	r0, [r4, #14]
 80200aa:	b004      	add	sp, #16
 80200ac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80200b0:	08024480 	.word	0x08024480

080200b4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 80200b4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80200b6:	461e      	mov	r6, r3
 80200b8:	1e4b      	subs	r3, r1, #1
 80200ba:	2b01      	cmp	r3, #1
 80200bc:	b085      	sub	sp, #20
 80200be:	4604      	mov	r4, r0
 80200c0:	460d      	mov	r5, r1
 80200c2:	4617      	mov	r7, r2
 80200c4:	d84b      	bhi.n	802015e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 80200c6:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80200ca:	1cd3      	adds	r3, r2, #3
 80200cc:	b29b      	uxth	r3, r3
 80200ce:	2b06      	cmp	r3, #6
 80200d0:	d916      	bls.n	8020100 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 80200d2:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 8020174 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 80200d6:	f8cd c004 	str.w	ip, [sp, #4]
 80200da:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80200de:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80200e2:	6900      	ldr	r0, [r0, #16]
 80200e4:	f8ad 100c 	strh.w	r1, [sp, #12]
 80200e8:	f04f 0c00 	mov.w	ip, #0
 80200ec:	f88d c008 	strb.w	ip, [sp, #8]
 80200f0:	f8ad 200a 	strh.w	r2, [sp, #10]
 80200f4:	f8ad 300e 	strh.w	r3, [sp, #14]
 80200f8:	6803      	ldr	r3, [r0, #0]
 80200fa:	a901      	add	r1, sp, #4
 80200fc:	689b      	ldr	r3, [r3, #8]
 80200fe:	4798      	blx	r3
 8020100:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8020104:	1cd3      	adds	r3, r2, #3
 8020106:	b29b      	uxth	r3, r3
 8020108:	2b06      	cmp	r3, #6
 802010a:	d916      	bls.n	802013a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 802010c:	f8df c064 	ldr.w	ip, [pc, #100]	; 8020174 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8020110:	f8cd c004 	str.w	ip, [sp, #4]
 8020114:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8020118:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 802011c:	6920      	ldr	r0, [r4, #16]
 802011e:	f8ad 100c 	strh.w	r1, [sp, #12]
 8020122:	f04f 0c01 	mov.w	ip, #1
 8020126:	f88d c008 	strb.w	ip, [sp, #8]
 802012a:	f8ad 200a 	strh.w	r2, [sp, #10]
 802012e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8020132:	6803      	ldr	r3, [r0, #0]
 8020134:	a901      	add	r1, sp, #4
 8020136:	689b      	ldr	r3, [r3, #8]
 8020138:	4798      	blx	r3
 802013a:	4b0d      	ldr	r3, [pc, #52]	; (8020170 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 802013c:	9301      	str	r3, [sp, #4]
 802013e:	6920      	ldr	r0, [r4, #16]
 8020140:	f88d 5008 	strb.w	r5, [sp, #8]
 8020144:	2300      	movs	r3, #0
 8020146:	f8ad 700a 	strh.w	r7, [sp, #10]
 802014a:	f8ad 600c 	strh.w	r6, [sp, #12]
 802014e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8020152:	6803      	ldr	r3, [r0, #0]
 8020154:	a901      	add	r1, sp, #4
 8020156:	681b      	ldr	r3, [r3, #0]
 8020158:	4798      	blx	r3
 802015a:	b005      	add	sp, #20
 802015c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802015e:	2900      	cmp	r1, #0
 8020160:	d1eb      	bne.n	802013a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8020162:	80a2      	strh	r2, [r4, #4]
 8020164:	80c6      	strh	r6, [r0, #6]
 8020166:	60a1      	str	r1, [r4, #8]
 8020168:	81a1      	strh	r1, [r4, #12]
 802016a:	73a1      	strb	r1, [r4, #14]
 802016c:	e7e5      	b.n	802013a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 802016e:	bf00      	nop
 8020170:	0802446c 	.word	0x0802446c
 8020174:	08024494 	.word	0x08024494

08020178 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>:
 8020178:	10c9      	asrs	r1, r1, #3
 802017a:	2900      	cmp	r1, #0
 802017c:	bfb8      	it	lt
 802017e:	4249      	neglt	r1, r1
 8020180:	2801      	cmp	r0, #1
 8020182:	d108      	bne.n	8020196 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 8020184:	f3c1 0008 	ubfx	r0, r1, #0, #9
 8020188:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 802018c:	4601      	mov	r1, r0
 802018e:	dd02      	ble.n	8020196 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 8020190:	f5c0 7000 	rsb	r0, r0, #512	; 0x200
 8020194:	4770      	bx	lr
 8020196:	29ff      	cmp	r1, #255	; 0xff
 8020198:	bfa8      	it	ge
 802019a:	21ff      	movge	r1, #255	; 0xff
 802019c:	4608      	mov	r0, r1
 802019e:	4770      	bx	lr

080201a0 <_ZN8touchgfx10Rasterizer6lineToEii>:
 80201a0:	b410      	push	{r4}
 80201a2:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 80201a6:	429c      	cmp	r4, r3
 80201a8:	d803      	bhi.n	80201b2 <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
 80201aa:	f85d 4b04 	ldr.w	r4, [sp], #4
 80201ae:	f7ef b97d 	b.w	800f4ac <_ZN8touchgfx7Outline6lineToEii>
 80201b2:	f85d 4b04 	ldr.w	r4, [sp], #4
 80201b6:	4770      	bx	lr

080201b8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
 80201b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80201bc:	b08b      	sub	sp, #44	; 0x2c
 80201be:	e9cd 2306 	strd	r2, r3, [sp, #24]
 80201c2:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 80201c6:	9308      	str	r3, [sp, #32]
 80201c8:	4606      	mov	r6, r0
 80201ca:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 80201ce:	9309      	str	r3, [sp, #36]	; 0x24
 80201d0:	468a      	mov	sl, r1
 80201d2:	f7ef fad8 	bl	800f786 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
 80201d6:	68b5      	ldr	r5, [r6, #8]
 80201d8:	4604      	mov	r4, r0
 80201da:	2d00      	cmp	r5, #0
 80201dc:	d044      	beq.n	8020268 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 80201de:	6873      	ldr	r3, [r6, #4]
 80201e0:	42ab      	cmp	r3, r5
 80201e2:	d33d      	bcc.n	8020260 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
 80201e4:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 80201e8:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	; 0x34
 80201ec:	eb02 0b03 	add.w	fp, r2, r3
 80201f0:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 80201f4:	fb02 1203 	mla	r2, r2, r3, r1
 80201f8:	9205      	str	r2, [sp, #20]
 80201fa:	1e6a      	subs	r2, r5, #1
 80201fc:	9204      	str	r2, [sp, #16]
 80201fe:	f04f 0800 	mov.w	r8, #0
 8020202:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
 8020206:	f9b4 7000 	ldrsh.w	r7, [r4]
 802020a:	454b      	cmp	r3, r9
 802020c:	463a      	mov	r2, r7
 802020e:	d008      	beq.n	8020222 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
 8020210:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	; 0x34
 8020214:	eb03 0b09 	add.w	fp, r3, r9
 8020218:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
 802021c:	fb03 1309 	mla	r3, r3, r9, r1
 8020220:	9305      	str	r3, [sp, #20]
 8020222:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8020226:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 802022a:	4498      	add	r8, r3
 802022c:	9b04      	ldr	r3, [sp, #16]
 802022e:	3b01      	subs	r3, #1
 8020230:	9304      	str	r3, [sp, #16]
 8020232:	9b04      	ldr	r3, [sp, #16]
 8020234:	3301      	adds	r3, #1
 8020236:	d015      	beq.n	8020264 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
 8020238:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
 802023c:	42bb      	cmp	r3, r7
 802023e:	d117      	bne.n	8020270 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
 8020240:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 8020244:	9b04      	ldr	r3, [sp, #16]
 8020246:	4548      	cmp	r0, r9
 8020248:	f103 33ff 	add.w	r3, r3, #4294967295
 802024c:	d17f      	bne.n	802034e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x196>
 802024e:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 8020252:	4401      	add	r1, r0
 8020254:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8020258:	4480      	add	r8, r0
 802025a:	e7e9      	b.n	8020230 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
 802025c:	461f      	mov	r7, r3
 802025e:	e044      	b.n	80202ea <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x132>
 8020260:	2000      	movs	r0, #0
 8020262:	e002      	b.n	802026a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
 8020264:	2900      	cmp	r1, #0
 8020266:	d16f      	bne.n	8020348 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x190>
 8020268:	2001      	movs	r0, #1
 802026a:	b00b      	add	sp, #44	; 0x2c
 802026c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020270:	2900      	cmp	r1, #0
 8020272:	d030      	beq.n	80202d6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11e>
 8020274:	2f00      	cmp	r7, #0
 8020276:	db29      	blt.n	80202cc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8020278:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 802027c:	42bb      	cmp	r3, r7
 802027e:	dd25      	ble.n	80202cc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8020280:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
 8020284:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 8020288:	f7ff ff76 	bl	8020178 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 802028c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802028e:	fb10 f003 	smulbb	r0, r0, r3
 8020292:	b280      	uxth	r0, r0
 8020294:	1c41      	adds	r1, r0, #1
 8020296:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 802029a:	1209      	asrs	r1, r1, #8
 802029c:	f011 0fff 	tst.w	r1, #255	; 0xff
 80202a0:	d014      	beq.n	80202cc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 80202a2:	9808      	ldr	r0, [sp, #32]
 80202a4:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 80202a6:	b2c9      	uxtb	r1, r1
 80202a8:	b2ba      	uxth	r2, r7
 80202aa:	9102      	str	r1, [sp, #8]
 80202ac:	2101      	movs	r1, #1
 80202ae:	4413      	add	r3, r2
 80202b0:	9101      	str	r1, [sp, #4]
 80202b2:	4402      	add	r2, r0
 80202b4:	fa0f f18b 	sxth.w	r1, fp
 80202b8:	f8da 0000 	ldr.w	r0, [sl]
 80202bc:	9100      	str	r1, [sp, #0]
 80202be:	6941      	ldr	r1, [r0, #20]
 80202c0:	b21b      	sxth	r3, r3
 80202c2:	460d      	mov	r5, r1
 80202c4:	b212      	sxth	r2, r2
 80202c6:	9905      	ldr	r1, [sp, #20]
 80202c8:	4650      	mov	r0, sl
 80202ca:	47a8      	blx	r5
 80202cc:	9b04      	ldr	r3, [sp, #16]
 80202ce:	3301      	adds	r3, #1
 80202d0:	f107 0201 	add.w	r2, r7, #1
 80202d4:	d0c8      	beq.n	8020268 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 80202d6:	f9b4 7000 	ldrsh.w	r7, [r4]
 80202da:	1abb      	subs	r3, r7, r2
 80202dc:	2b00      	cmp	r3, #0
 80202de:	dd31      	ble.n	8020344 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 80202e0:	2a00      	cmp	r2, #0
 80202e2:	dabb      	bge.n	802025c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
 80202e4:	2f00      	cmp	r7, #0
 80202e6:	dd2d      	ble.n	8020344 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 80202e8:	2200      	movs	r2, #0
 80202ea:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 80202ee:	19d1      	adds	r1, r2, r7
 80202f0:	4299      	cmp	r1, r3
 80202f2:	db02      	blt.n	80202fa <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x142>
 80202f4:	1a9f      	subs	r7, r3, r2
 80202f6:	2f00      	cmp	r7, #0
 80202f8:	dd24      	ble.n	8020344 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 80202fa:	ea4f 1188 	mov.w	r1, r8, lsl #6
 80202fe:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 8020302:	f7ff ff39 	bl	8020178 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 8020306:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020308:	fb10 f003 	smulbb	r0, r0, r3
 802030c:	b280      	uxth	r0, r0
 802030e:	1c41      	adds	r1, r0, #1
 8020310:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8020314:	1209      	asrs	r1, r1, #8
 8020316:	f011 0fff 	tst.w	r1, #255	; 0xff
 802031a:	d013      	beq.n	8020344 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 802031c:	9808      	ldr	r0, [sp, #32]
 802031e:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 8020320:	b292      	uxth	r2, r2
 8020322:	b2c9      	uxtb	r1, r1
 8020324:	4413      	add	r3, r2
 8020326:	9102      	str	r1, [sp, #8]
 8020328:	4402      	add	r2, r0
 802032a:	b23f      	sxth	r7, r7
 802032c:	f8da 0000 	ldr.w	r0, [sl]
 8020330:	9701      	str	r7, [sp, #4]
 8020332:	fa0f f18b 	sxth.w	r1, fp
 8020336:	9100      	str	r1, [sp, #0]
 8020338:	6947      	ldr	r7, [r0, #20]
 802033a:	9905      	ldr	r1, [sp, #20]
 802033c:	b21b      	sxth	r3, r3
 802033e:	b212      	sxth	r2, r2
 8020340:	4650      	mov	r0, sl
 8020342:	47b8      	blx	r7
 8020344:	464b      	mov	r3, r9
 8020346:	e75c      	b.n	8020202 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
 8020348:	2f00      	cmp	r7, #0
 802034a:	da95      	bge.n	8020278 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xc0>
 802034c:	e78c      	b.n	8020268 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 802034e:	2900      	cmp	r1, #0
 8020350:	d0f8      	beq.n	8020344 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8020352:	e78f      	b.n	8020274 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbc>

08020354 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>:
 8020354:	4b4c      	ldr	r3, [pc, #304]	; (8020488 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x134>)
 8020356:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 802035a:	2500      	movs	r5, #0
 802035c:	f100 0620 	add.w	r6, r0, #32
 8020360:	4604      	mov	r4, r0
 8020362:	e9c0 3100 	strd	r3, r1, [r0]
 8020366:	e9c0 5502 	strd	r5, r5, [r0, #8]
 802036a:	e9c0 5504 	strd	r5, r5, [r0, #16]
 802036e:	e9c0 5506 	strd	r5, r5, [r0, #24]
 8020372:	f100 0718 	add.w	r7, r0, #24
 8020376:	4630      	mov	r0, r6
 8020378:	4690      	mov	r8, r2
 802037a:	f7ee fbcf 	bl	800eb1c <_ZN8touchgfx7OutlineC1Ev>
 802037e:	e9c4 5517 	strd	r5, r5, [r4, #92]	; 0x5c
 8020382:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 8020386:	2301      	movs	r3, #1
 8020388:	f884 5050 	strb.w	r5, [r4, #80]	; 0x50
 802038c:	f8a4 5052 	strh.w	r5, [r4, #82]	; 0x52
 8020390:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
 8020394:	f8a4 5056 	strh.w	r5, [r4, #86]	; 0x56
 8020398:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 802039c:	f884 5059 	strb.w	r5, [r4, #89]	; 0x59
 80203a0:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 80203a4:	f9b8 2000 	ldrsh.w	r2, [r8]
 80203a8:	f8b8 0004 	ldrh.w	r0, [r8, #4]
 80203ac:	f8d4 c004 	ldr.w	ip, [r4, #4]
 80203b0:	9500      	str	r5, [sp, #0]
 80203b2:	4410      	add	r0, r2
 80203b4:	b280      	uxth	r0, r0
 80203b6:	fa0f fa80 	sxth.w	sl, r0
 80203ba:	45aa      	cmp	sl, r5
 80203bc:	f9bc 9008 	ldrsh.w	r9, [ip, #8]
 80203c0:	f9bc e00a 	ldrsh.w	lr, [ip, #10]
 80203c4:	dd5c      	ble.n	8020480 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12c>
 80203c6:	4591      	cmp	r9, r2
 80203c8:	dd5a      	ble.n	8020480 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12c>
 80203ca:	f9b8 1002 	ldrsh.w	r1, [r8, #2]
 80203ce:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 80203d2:	440b      	add	r3, r1
 80203d4:	b29b      	uxth	r3, r3
 80203d6:	b21d      	sxth	r5, r3
 80203d8:	2d00      	cmp	r5, #0
 80203da:	dd51      	ble.n	8020480 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12c>
 80203dc:	458e      	cmp	lr, r1
 80203de:	dd4f      	ble.n	8020480 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12c>
 80203e0:	45d1      	cmp	r9, sl
 80203e2:	bfb8      	it	lt
 80203e4:	fa1f f089 	uxthlt.w	r0, r9
 80203e8:	45ae      	cmp	lr, r5
 80203ea:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 80203ee:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
 80203f2:	bfb8      	it	lt
 80203f4:	fa1f f38e 	uxthlt.w	r3, lr
 80203f8:	1a80      	subs	r0, r0, r2
 80203fa:	1a5b      	subs	r3, r3, r1
 80203fc:	f8ad 0004 	strh.w	r0, [sp, #4]
 8020400:	f8ad 3006 	strh.w	r3, [sp, #6]
 8020404:	f8ad 2000 	strh.w	r2, [sp]
 8020408:	f8ad 1002 	strh.w	r1, [sp, #2]
 802040c:	466d      	mov	r5, sp
 802040e:	e895 0003 	ldmia.w	r5, {r0, r1}
 8020412:	e887 0003 	stmia.w	r7, {r0, r1}
 8020416:	f8dc 3000 	ldr.w	r3, [ip]
 802041a:	4660      	mov	r0, ip
 802041c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 802041e:	4639      	mov	r1, r7
 8020420:	4798      	blx	r3
 8020422:	6861      	ldr	r1, [r4, #4]
 8020424:	4628      	mov	r0, r5
 8020426:	3104      	adds	r1, #4
 8020428:	f7f0 fd0c 	bl	8010e44 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802042c:	4638      	mov	r0, r7
 802042e:	f7f0 fce1 	bl	8010df4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8020432:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8020436:	f8bd 2000 	ldrh.w	r2, [sp]
 802043a:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 802043e:	f8a4 3054 	strh.w	r3, [r4, #84]	; 0x54
 8020442:	4630      	mov	r0, r6
 8020444:	f7ee fb4e 	bl	800eae4 <_ZN8touchgfx7Outline5resetEv>
 8020448:	f9bd 3000 	ldrsh.w	r3, [sp]
 802044c:	f9b4 201e 	ldrsh.w	r2, [r4, #30]
 8020450:	015b      	lsls	r3, r3, #5
 8020452:	60a3      	str	r3, [r4, #8]
 8020454:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8020458:	015b      	lsls	r3, r3, #5
 802045a:	60e3      	str	r3, [r4, #12]
 802045c:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8020460:	015b      	lsls	r3, r3, #5
 8020462:	6123      	str	r3, [r4, #16]
 8020464:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8020468:	015b      	lsls	r3, r3, #5
 802046a:	6163      	str	r3, [r4, #20]
 802046c:	f9b4 301c 	ldrsh.w	r3, [r4, #28]
 8020470:	f8a4 3056 	strh.w	r3, [r4, #86]	; 0x56
 8020474:	4620      	mov	r0, r4
 8020476:	e9c4 3212 	strd	r3, r2, [r4, #72]	; 0x48
 802047a:	b002      	add	sp, #8
 802047c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8020480:	2300      	movs	r3, #0
 8020482:	9301      	str	r3, [sp, #4]
 8020484:	e7c2      	b.n	802040c <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0xb8>
 8020486:	bf00      	nop
 8020488:	08023c94 	.word	0x08023c94

0802048c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 802048c:	b510      	push	{r4, lr}
 802048e:	4b07      	ldr	r3, [pc, #28]	; (80204ac <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x20>)
 8020490:	781b      	ldrb	r3, [r3, #0]
 8020492:	2b01      	cmp	r3, #1
 8020494:	d108      	bne.n	80204a8 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>
 8020496:	6843      	ldr	r3, [r0, #4]
 8020498:	6814      	ldr	r4, [r2, #0]
 802049a:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 802049e:	680b      	ldr	r3, [r1, #0]
 80204a0:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 80204a4:	6013      	str	r3, [r2, #0]
 80204a6:	600c      	str	r4, [r1, #0]
 80204a8:	bd10      	pop	{r4, pc}
 80204aa:	bf00      	nop
 80204ac:	200155fc 	.word	0x200155fc

080204b0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 80204b0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80204b2:	ab02      	add	r3, sp, #8
 80204b4:	4604      	mov	r4, r0
 80204b6:	f843 2d08 	str.w	r2, [r3, #-8]!
 80204ba:	9101      	str	r1, [sp, #4]
 80204bc:	461a      	mov	r2, r3
 80204be:	a901      	add	r1, sp, #4
 80204c0:	f7ff ffe4 	bl	802048c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 80204c4:	68a3      	ldr	r3, [r4, #8]
 80204c6:	9901      	ldr	r1, [sp, #4]
 80204c8:	9a00      	ldr	r2, [sp, #0]
 80204ca:	1ac9      	subs	r1, r1, r3
 80204cc:	68e3      	ldr	r3, [r4, #12]
 80204ce:	9101      	str	r1, [sp, #4]
 80204d0:	1ad2      	subs	r2, r2, r3
 80204d2:	2a00      	cmp	r2, #0
 80204d4:	9200      	str	r2, [sp, #0]
 80204d6:	db1c      	blt.n	8020512 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
 80204d8:	6963      	ldr	r3, [r4, #20]
 80204da:	429a      	cmp	r2, r3
 80204dc:	bfac      	ite	ge
 80204de:	2002      	movge	r0, #2
 80204e0:	2000      	movlt	r0, #0
 80204e2:	2900      	cmp	r1, #0
 80204e4:	db17      	blt.n	8020516 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
 80204e6:	6923      	ldr	r3, [r4, #16]
 80204e8:	4299      	cmp	r1, r3
 80204ea:	bfac      	ite	ge
 80204ec:	2308      	movge	r3, #8
 80204ee:	2300      	movlt	r3, #0
 80204f0:	4303      	orrs	r3, r0
 80204f2:	f894 0064 	ldrb.w	r0, [r4, #100]	; 0x64
 80204f6:	b2dd      	uxtb	r5, r3
 80204f8:	b978      	cbnz	r0, 802051a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
 80204fa:	f104 0020 	add.w	r0, r4, #32
 80204fe:	f7ff fe4f 	bl	80201a0 <_ZN8touchgfx10Rasterizer6lineToEii>
 8020502:	9b01      	ldr	r3, [sp, #4]
 8020504:	65e3      	str	r3, [r4, #92]	; 0x5c
 8020506:	9b00      	ldr	r3, [sp, #0]
 8020508:	6623      	str	r3, [r4, #96]	; 0x60
 802050a:	f884 5064 	strb.w	r5, [r4, #100]	; 0x64
 802050e:	b002      	add	sp, #8
 8020510:	bd70      	pop	{r4, r5, r6, pc}
 8020512:	2001      	movs	r0, #1
 8020514:	e7e5      	b.n	80204e2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
 8020516:	2304      	movs	r3, #4
 8020518:	e7ea      	b.n	80204f0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
 802051a:	b113      	cbz	r3, 8020522 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
 802051c:	ea10 0305 	ands.w	r3, r0, r5
 8020520:	d11d      	bne.n	802055e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xae>
 8020522:	f894 3058 	ldrb.w	r3, [r4, #88]	; 0x58
 8020526:	f104 0620 	add.w	r6, r4, #32
 802052a:	e9d4 1217 	ldrd	r1, r2, [r4, #92]	; 0x5c
 802052e:	b193      	cbz	r3, 8020556 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa6>
 8020530:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 8020534:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 8020538:	4298      	cmp	r0, r3
 802053a:	d802      	bhi.n	8020542 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
 802053c:	4630      	mov	r0, r6
 802053e:	f7ee ffcf 	bl	800f4e0 <_ZN8touchgfx7Outline6moveToEii>
 8020542:	2300      	movs	r3, #0
 8020544:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8020548:	2301      	movs	r3, #1
 802054a:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 802054e:	e9dd 2100 	ldrd	r2, r1, [sp]
 8020552:	4630      	mov	r0, r6
 8020554:	e7d3      	b.n	80204fe <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
 8020556:	4630      	mov	r0, r6
 8020558:	f7ff fe22 	bl	80201a0 <_ZN8touchgfx10Rasterizer6lineToEii>
 802055c:	e7f7      	b.n	802054e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9e>
 802055e:	461d      	mov	r5, r3
 8020560:	e7cf      	b.n	8020502 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>

08020562 <_ZN8touchgfx6Canvas5closeEv>:
 8020562:	b538      	push	{r3, r4, r5, lr}
 8020564:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 8020568:	4604      	mov	r4, r0
 802056a:	b993      	cbnz	r3, 8020592 <_ZN8touchgfx6Canvas5closeEv+0x30>
 802056c:	f890 3064 	ldrb.w	r3, [r0, #100]	; 0x64
 8020570:	f890 2065 	ldrb.w	r2, [r0, #101]	; 0x65
 8020574:	4213      	tst	r3, r2
 8020576:	d10c      	bne.n	8020592 <_ZN8touchgfx6Canvas5closeEv+0x30>
 8020578:	f100 0520 	add.w	r5, r0, #32
 802057c:	b123      	cbz	r3, 8020588 <_ZN8touchgfx6Canvas5closeEv+0x26>
 802057e:	e9d0 1217 	ldrd	r1, r2, [r0, #92]	; 0x5c
 8020582:	4628      	mov	r0, r5
 8020584:	f7ff fe0c 	bl	80201a0 <_ZN8touchgfx10Rasterizer6lineToEii>
 8020588:	e9d4 121a 	ldrd	r1, r2, [r4, #104]	; 0x68
 802058c:	4628      	mov	r0, r5
 802058e:	f7ff fe07 	bl	80201a0 <_ZN8touchgfx10Rasterizer6lineToEii>
 8020592:	2300      	movs	r3, #0
 8020594:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8020598:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
 802059c:	4298      	cmp	r0, r3
 802059e:	bf34      	ite	cc
 80205a0:	2000      	movcc	r0, #0
 80205a2:	2001      	movcs	r0, #1
 80205a4:	bd38      	pop	{r3, r4, r5, pc}
	...

080205a8 <_ZN8touchgfx6Canvas6renderEh>:
 80205a8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80205ac:	4604      	mov	r4, r0
 80205ae:	6840      	ldr	r0, [r0, #4]
 80205b0:	6803      	ldr	r3, [r0, #0]
 80205b2:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80205b4:	460d      	mov	r5, r1
 80205b6:	4798      	blx	r3
 80205b8:	fb10 f105 	smulbb	r1, r0, r5
 80205bc:	b289      	uxth	r1, r1
 80205be:	1c4d      	adds	r5, r1, #1
 80205c0:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 80205c4:	122d      	asrs	r5, r5, #8
 80205c6:	f000 8098 	beq.w	80206fa <_ZN8touchgfx6Canvas6renderEh+0x152>
 80205ca:	f894 3059 	ldrb.w	r3, [r4, #89]	; 0x59
 80205ce:	2b00      	cmp	r3, #0
 80205d0:	f000 8093 	beq.w	80206fa <_ZN8touchgfx6Canvas6renderEh+0x152>
 80205d4:	4620      	mov	r0, r4
 80205d6:	f7ff ffc4 	bl	8020562 <_ZN8touchgfx6Canvas5closeEv>
 80205da:	4607      	mov	r7, r0
 80205dc:	2800      	cmp	r0, #0
 80205de:	d043      	beq.n	8020668 <_ZN8touchgfx6Canvas6renderEh+0xc0>
 80205e0:	6863      	ldr	r3, [r4, #4]
 80205e2:	4e47      	ldr	r6, [pc, #284]	; (8020700 <_ZN8touchgfx6Canvas6renderEh+0x158>)
 80205e4:	6a98      	ldr	r0, [r3, #40]	; 0x28
 80205e6:	6837      	ldr	r7, [r6, #0]
 80205e8:	6803      	ldr	r3, [r0, #0]
 80205ea:	689b      	ldr	r3, [r3, #8]
 80205ec:	4798      	blx	r3
 80205ee:	4601      	mov	r1, r0
 80205f0:	4638      	mov	r0, r7
 80205f2:	f7eb fb11 	bl	800bc18 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
 80205f6:	4607      	mov	r7, r0
 80205f8:	f7e2 f8e6 	bl	80027c8 <_ZN8touchgfx3HAL3lcdEv>
 80205fc:	6803      	ldr	r3, [r0, #0]
 80205fe:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8020600:	4798      	blx	r3
 8020602:	4680      	mov	r8, r0
 8020604:	f7e2 f8e0 	bl	80027c8 <_ZN8touchgfx3HAL3lcdEv>
 8020608:	6803      	ldr	r3, [r0, #0]
 802060a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 802060c:	4798      	blx	r3
 802060e:	280b      	cmp	r0, #11
 8020610:	d858      	bhi.n	80206c4 <_ZN8touchgfx6Canvas6renderEh+0x11c>
 8020612:	e8df f000 	tbb	[pc, r0]
 8020616:	594e      	.short	0x594e
 8020618:	2d570669 	.word	0x2d570669
 802061c:	6262623d 	.word	0x6262623d
 8020620:	6262      	.short	0x6262
 8020622:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8020626:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 802062a:	2208      	movs	r2, #8
 802062c:	fb91 f2f2 	sdiv	r2, r1, r2
 8020630:	fb08 2303 	mla	r3, r8, r3, r2
 8020634:	441f      	add	r7, r3
 8020636:	424b      	negs	r3, r1
 8020638:	f003 0307 	and.w	r3, r3, #7
 802063c:	f001 0107 	and.w	r1, r1, #7
 8020640:	bf58      	it	pl
 8020642:	4259      	negpl	r1, r3
 8020644:	b2c9      	uxtb	r1, r1
 8020646:	b2ed      	uxtb	r5, r5
 8020648:	e9cd 1500 	strd	r1, r5, [sp]
 802064c:	6860      	ldr	r0, [r4, #4]
 802064e:	fa0f f388 	sxth.w	r3, r8
 8020652:	463a      	mov	r2, r7
 8020654:	6a81      	ldr	r1, [r0, #40]	; 0x28
 8020656:	f104 0020 	add.w	r0, r4, #32
 802065a:	f7ff fdad 	bl	80201b8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
 802065e:	4607      	mov	r7, r0
 8020660:	6830      	ldr	r0, [r6, #0]
 8020662:	6803      	ldr	r3, [r0, #0]
 8020664:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8020666:	4798      	blx	r3
 8020668:	4638      	mov	r0, r7
 802066a:	b002      	add	sp, #8
 802066c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8020670:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8020674:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8020678:	2204      	movs	r2, #4
 802067a:	fb91 f2f2 	sdiv	r2, r1, r2
 802067e:	fb08 2303 	mla	r3, r8, r3, r2
 8020682:	441f      	add	r7, r3
 8020684:	424b      	negs	r3, r1
 8020686:	f003 0303 	and.w	r3, r3, #3
 802068a:	f001 0103 	and.w	r1, r1, #3
 802068e:	e7d7      	b.n	8020640 <_ZN8touchgfx6Canvas6renderEh+0x98>
 8020690:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8020694:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8020698:	2900      	cmp	r1, #0
 802069a:	f04f 0202 	mov.w	r2, #2
 802069e:	fb91 f2f2 	sdiv	r2, r1, r2
 80206a2:	f001 0101 	and.w	r1, r1, #1
 80206a6:	fb08 2303 	mla	r3, r8, r3, r2
 80206aa:	441f      	add	r7, r3
 80206ac:	bfb8      	it	lt
 80206ae:	4249      	neglt	r1, r1
 80206b0:	e7c8      	b.n	8020644 <_ZN8touchgfx6Canvas6renderEh+0x9c>
 80206b2:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80206b6:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 80206ba:	fb08 f303 	mul.w	r3, r8, r3
 80206be:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 80206c2:	441f      	add	r7, r3
 80206c4:	2100      	movs	r1, #0
 80206c6:	e7be      	b.n	8020646 <_ZN8touchgfx6Canvas6renderEh+0x9e>
 80206c8:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80206cc:	fb08 f203 	mul.w	r2, r8, r3
 80206d0:	8b23      	ldrh	r3, [r4, #24]
 80206d2:	2103      	movs	r1, #3
 80206d4:	fb13 2301 	smlabb	r3, r3, r1, r2
 80206d8:	e7f3      	b.n	80206c2 <_ZN8touchgfx6Canvas6renderEh+0x11a>
 80206da:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80206de:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 80206e2:	fb08 2303 	mla	r3, r8, r3, r2
 80206e6:	e7ec      	b.n	80206c2 <_ZN8touchgfx6Canvas6renderEh+0x11a>
 80206e8:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80206ec:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 80206f0:	fb08 f303 	mul.w	r3, r8, r3
 80206f4:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 80206f8:	e7e3      	b.n	80206c2 <_ZN8touchgfx6Canvas6renderEh+0x11a>
 80206fa:	2701      	movs	r7, #1
 80206fc:	e7b4      	b.n	8020668 <_ZN8touchgfx6Canvas6renderEh+0xc0>
 80206fe:	bf00      	nop
 8020700:	20015604 	.word	0x20015604

08020704 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 8020704:	b513      	push	{r0, r1, r4, lr}
 8020706:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 802070a:	4604      	mov	r4, r0
 802070c:	e9cd 2100 	strd	r2, r1, [sp]
 8020710:	b1a3      	cbz	r3, 802073c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
 8020712:	466a      	mov	r2, sp
 8020714:	a901      	add	r1, sp, #4
 8020716:	4620      	mov	r0, r4
 8020718:	f7ff feb8 	bl	802048c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 802071c:	68a3      	ldr	r3, [r4, #8]
 802071e:	9901      	ldr	r1, [sp, #4]
 8020720:	9a00      	ldr	r2, [sp, #0]
 8020722:	1ac9      	subs	r1, r1, r3
 8020724:	68e3      	ldr	r3, [r4, #12]
 8020726:	9101      	str	r1, [sp, #4]
 8020728:	1ad2      	subs	r2, r2, r3
 802072a:	2a00      	cmp	r2, #0
 802072c:	9200      	str	r2, [sp, #0]
 802072e:	da0b      	bge.n	8020748 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
 8020730:	2301      	movs	r3, #1
 8020732:	2900      	cmp	r1, #0
 8020734:	da0e      	bge.n	8020754 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
 8020736:	f043 0304 	orr.w	r3, r3, #4
 802073a:	e013      	b.n	8020764 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
 802073c:	f7ff ff11 	bl	8020562 <_ZN8touchgfx6Canvas5closeEv>
 8020740:	2800      	cmp	r0, #0
 8020742:	d1e6      	bne.n	8020712 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
 8020744:	b002      	add	sp, #8
 8020746:	bd10      	pop	{r4, pc}
 8020748:	6963      	ldr	r3, [r4, #20]
 802074a:	429a      	cmp	r2, r3
 802074c:	bfac      	ite	ge
 802074e:	2302      	movge	r3, #2
 8020750:	2300      	movlt	r3, #0
 8020752:	e7ee      	b.n	8020732 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
 8020754:	6920      	ldr	r0, [r4, #16]
 8020756:	4281      	cmp	r1, r0
 8020758:	bfac      	ite	ge
 802075a:	2008      	movge	r0, #8
 802075c:	2000      	movlt	r0, #0
 802075e:	4318      	orrs	r0, r3
 8020760:	b2c3      	uxtb	r3, r0
 8020762:	b158      	cbz	r0, 802077c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
 8020764:	2201      	movs	r2, #1
 8020766:	f884 2058 	strb.w	r2, [r4, #88]	; 0x58
 802076a:	9901      	ldr	r1, [sp, #4]
 802076c:	9a00      	ldr	r2, [sp, #0]
 802076e:	66a1      	str	r1, [r4, #104]	; 0x68
 8020770:	66e2      	str	r2, [r4, #108]	; 0x6c
 8020772:	e9c4 1217 	strd	r1, r2, [r4, #92]	; 0x5c
 8020776:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 802077a:	e7e3      	b.n	8020744 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
 802077c:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 8020780:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 8020784:	4298      	cmp	r0, r3
 8020786:	d803      	bhi.n	8020790 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
 8020788:	f104 0020 	add.w	r0, r4, #32
 802078c:	f7ee fea8 	bl	800f4e0 <_ZN8touchgfx7Outline6moveToEii>
 8020790:	2300      	movs	r3, #0
 8020792:	2201      	movs	r2, #1
 8020794:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8020798:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 802079c:	e7e5      	b.n	802076a <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

0802079e <__aeabi_atexit>:
 802079e:	460b      	mov	r3, r1
 80207a0:	4601      	mov	r1, r0
 80207a2:	4618      	mov	r0, r3
 80207a4:	f000 b8d8 	b.w	8020958 <__cxa_atexit>

080207a8 <_ZdlPvj>:
 80207a8:	f000 b812 	b.w	80207d0 <_ZdlPv>

080207ac <__cxa_guard_acquire>:
 80207ac:	6803      	ldr	r3, [r0, #0]
 80207ae:	07db      	lsls	r3, r3, #31
 80207b0:	d406      	bmi.n	80207c0 <__cxa_guard_acquire+0x14>
 80207b2:	7843      	ldrb	r3, [r0, #1]
 80207b4:	b103      	cbz	r3, 80207b8 <__cxa_guard_acquire+0xc>
 80207b6:	deff      	udf	#255	; 0xff
 80207b8:	2301      	movs	r3, #1
 80207ba:	7043      	strb	r3, [r0, #1]
 80207bc:	4618      	mov	r0, r3
 80207be:	4770      	bx	lr
 80207c0:	2000      	movs	r0, #0
 80207c2:	4770      	bx	lr

080207c4 <__cxa_guard_release>:
 80207c4:	2301      	movs	r3, #1
 80207c6:	6003      	str	r3, [r0, #0]
 80207c8:	4770      	bx	lr

080207ca <__cxa_pure_virtual>:
 80207ca:	b508      	push	{r3, lr}
 80207cc:	f000 f80e 	bl	80207ec <_ZSt9terminatev>

080207d0 <_ZdlPv>:
 80207d0:	f000 ba0e 	b.w	8020bf0 <free>

080207d4 <_ZN10__cxxabiv111__terminateEPFvvE>:
 80207d4:	b508      	push	{r3, lr}
 80207d6:	4780      	blx	r0
 80207d8:	f000 f892 	bl	8020900 <abort>

080207dc <_ZSt13get_terminatev>:
 80207dc:	4b02      	ldr	r3, [pc, #8]	; (80207e8 <_ZSt13get_terminatev+0xc>)
 80207de:	6818      	ldr	r0, [r3, #0]
 80207e0:	f3bf 8f5b 	dmb	ish
 80207e4:	4770      	bx	lr
 80207e6:	bf00      	nop
 80207e8:	20000100 	.word	0x20000100

080207ec <_ZSt9terminatev>:
 80207ec:	b508      	push	{r3, lr}
 80207ee:	f7ff fff5 	bl	80207dc <_ZSt13get_terminatev>
 80207f2:	f7ff ffef 	bl	80207d4 <_ZN10__cxxabiv111__terminateEPFvvE>
	...

080207f8 <ceilf>:
 80207f8:	ee10 3a10 	vmov	r3, s0
 80207fc:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 8020800:	3a7f      	subs	r2, #127	; 0x7f
 8020802:	2a16      	cmp	r2, #22
 8020804:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 8020808:	dc2a      	bgt.n	8020860 <ceilf+0x68>
 802080a:	2a00      	cmp	r2, #0
 802080c:	da11      	bge.n	8020832 <ceilf+0x3a>
 802080e:	eddf 7a19 	vldr	s15, [pc, #100]	; 8020874 <ceilf+0x7c>
 8020812:	ee30 0a27 	vadd.f32	s0, s0, s15
 8020816:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802081a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802081e:	dd05      	ble.n	802082c <ceilf+0x34>
 8020820:	2b00      	cmp	r3, #0
 8020822:	db23      	blt.n	802086c <ceilf+0x74>
 8020824:	2900      	cmp	r1, #0
 8020826:	bf18      	it	ne
 8020828:	f04f 537e 	movne.w	r3, #1065353216	; 0x3f800000
 802082c:	ee00 3a10 	vmov	s0, r3
 8020830:	4770      	bx	lr
 8020832:	4911      	ldr	r1, [pc, #68]	; (8020878 <ceilf+0x80>)
 8020834:	4111      	asrs	r1, r2
 8020836:	420b      	tst	r3, r1
 8020838:	d0fa      	beq.n	8020830 <ceilf+0x38>
 802083a:	eddf 7a0e 	vldr	s15, [pc, #56]	; 8020874 <ceilf+0x7c>
 802083e:	ee30 0a27 	vadd.f32	s0, s0, s15
 8020842:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8020846:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802084a:	ddef      	ble.n	802082c <ceilf+0x34>
 802084c:	2b00      	cmp	r3, #0
 802084e:	bfc2      	ittt	gt
 8020850:	f44f 0000 	movgt.w	r0, #8388608	; 0x800000
 8020854:	fa40 f202 	asrgt.w	r2, r0, r2
 8020858:	189b      	addgt	r3, r3, r2
 802085a:	ea23 0301 	bic.w	r3, r3, r1
 802085e:	e7e5      	b.n	802082c <ceilf+0x34>
 8020860:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 8020864:	d3e4      	bcc.n	8020830 <ceilf+0x38>
 8020866:	ee30 0a00 	vadd.f32	s0, s0, s0
 802086a:	4770      	bx	lr
 802086c:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 8020870:	e7dc      	b.n	802082c <ceilf+0x34>
 8020872:	bf00      	nop
 8020874:	7149f2ca 	.word	0x7149f2ca
 8020878:	007fffff 	.word	0x007fffff

0802087c <floorf>:
 802087c:	ee10 3a10 	vmov	r3, s0
 8020880:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 8020884:	3a7f      	subs	r2, #127	; 0x7f
 8020886:	2a16      	cmp	r2, #22
 8020888:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 802088c:	dc2a      	bgt.n	80208e4 <floorf+0x68>
 802088e:	2a00      	cmp	r2, #0
 8020890:	da11      	bge.n	80208b6 <floorf+0x3a>
 8020892:	eddf 7a18 	vldr	s15, [pc, #96]	; 80208f4 <floorf+0x78>
 8020896:	ee30 0a27 	vadd.f32	s0, s0, s15
 802089a:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802089e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80208a2:	dd05      	ble.n	80208b0 <floorf+0x34>
 80208a4:	2b00      	cmp	r3, #0
 80208a6:	da23      	bge.n	80208f0 <floorf+0x74>
 80208a8:	4a13      	ldr	r2, [pc, #76]	; (80208f8 <floorf+0x7c>)
 80208aa:	2900      	cmp	r1, #0
 80208ac:	bf18      	it	ne
 80208ae:	4613      	movne	r3, r2
 80208b0:	ee00 3a10 	vmov	s0, r3
 80208b4:	4770      	bx	lr
 80208b6:	4911      	ldr	r1, [pc, #68]	; (80208fc <floorf+0x80>)
 80208b8:	4111      	asrs	r1, r2
 80208ba:	420b      	tst	r3, r1
 80208bc:	d0fa      	beq.n	80208b4 <floorf+0x38>
 80208be:	eddf 7a0d 	vldr	s15, [pc, #52]	; 80208f4 <floorf+0x78>
 80208c2:	ee30 0a27 	vadd.f32	s0, s0, s15
 80208c6:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80208ca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80208ce:	ddef      	ble.n	80208b0 <floorf+0x34>
 80208d0:	2b00      	cmp	r3, #0
 80208d2:	bfbe      	ittt	lt
 80208d4:	f44f 0000 	movlt.w	r0, #8388608	; 0x800000
 80208d8:	fa40 f202 	asrlt.w	r2, r0, r2
 80208dc:	189b      	addlt	r3, r3, r2
 80208de:	ea23 0301 	bic.w	r3, r3, r1
 80208e2:	e7e5      	b.n	80208b0 <floorf+0x34>
 80208e4:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 80208e8:	d3e4      	bcc.n	80208b4 <floorf+0x38>
 80208ea:	ee30 0a00 	vadd.f32	s0, s0, s0
 80208ee:	4770      	bx	lr
 80208f0:	2300      	movs	r3, #0
 80208f2:	e7dd      	b.n	80208b0 <floorf+0x34>
 80208f4:	7149f2ca 	.word	0x7149f2ca
 80208f8:	bf800000 	.word	0xbf800000
 80208fc:	007fffff 	.word	0x007fffff

08020900 <abort>:
 8020900:	b508      	push	{r3, lr}
 8020902:	2006      	movs	r0, #6
 8020904:	f000 fe02 	bl	802150c <raise>
 8020908:	2001      	movs	r0, #1
 802090a:	f7e1 fc85 	bl	8002218 <_exit>
	...

08020910 <__assert_func>:
 8020910:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8020912:	4614      	mov	r4, r2
 8020914:	461a      	mov	r2, r3
 8020916:	4b09      	ldr	r3, [pc, #36]	; (802093c <__assert_func+0x2c>)
 8020918:	681b      	ldr	r3, [r3, #0]
 802091a:	4605      	mov	r5, r0
 802091c:	68d8      	ldr	r0, [r3, #12]
 802091e:	b14c      	cbz	r4, 8020934 <__assert_func+0x24>
 8020920:	4b07      	ldr	r3, [pc, #28]	; (8020940 <__assert_func+0x30>)
 8020922:	9100      	str	r1, [sp, #0]
 8020924:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8020928:	4906      	ldr	r1, [pc, #24]	; (8020944 <__assert_func+0x34>)
 802092a:	462b      	mov	r3, r5
 802092c:	f000 f8fe 	bl	8020b2c <fiprintf>
 8020930:	f7ff ffe6 	bl	8020900 <abort>
 8020934:	4b04      	ldr	r3, [pc, #16]	; (8020948 <__assert_func+0x38>)
 8020936:	461c      	mov	r4, r3
 8020938:	e7f3      	b.n	8020922 <__assert_func+0x12>
 802093a:	bf00      	nop
 802093c:	20000104 	.word	0x20000104
 8020940:	0802475c 	.word	0x0802475c
 8020944:	08024769 	.word	0x08024769
 8020948:	080236df 	.word	0x080236df

0802094c <atexit>:
 802094c:	2300      	movs	r3, #0
 802094e:	4601      	mov	r1, r0
 8020950:	461a      	mov	r2, r3
 8020952:	4618      	mov	r0, r3
 8020954:	f000 bf0c 	b.w	8021770 <__register_exitproc>

08020958 <__cxa_atexit>:
 8020958:	b510      	push	{r4, lr}
 802095a:	4c05      	ldr	r4, [pc, #20]	; (8020970 <__cxa_atexit+0x18>)
 802095c:	4613      	mov	r3, r2
 802095e:	b12c      	cbz	r4, 802096c <__cxa_atexit+0x14>
 8020960:	460a      	mov	r2, r1
 8020962:	4601      	mov	r1, r0
 8020964:	2002      	movs	r0, #2
 8020966:	f000 ff03 	bl	8021770 <__register_exitproc>
 802096a:	bd10      	pop	{r4, pc}
 802096c:	4620      	mov	r0, r4
 802096e:	e7fc      	b.n	802096a <__cxa_atexit+0x12>
 8020970:	08021771 	.word	0x08021771

08020974 <__errno>:
 8020974:	4b01      	ldr	r3, [pc, #4]	; (802097c <__errno+0x8>)
 8020976:	6818      	ldr	r0, [r3, #0]
 8020978:	4770      	bx	lr
 802097a:	bf00      	nop
 802097c:	20000104 	.word	0x20000104

08020980 <std>:
 8020980:	2300      	movs	r3, #0
 8020982:	b510      	push	{r4, lr}
 8020984:	4604      	mov	r4, r0
 8020986:	e9c0 3300 	strd	r3, r3, [r0]
 802098a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 802098e:	6083      	str	r3, [r0, #8]
 8020990:	8181      	strh	r1, [r0, #12]
 8020992:	6643      	str	r3, [r0, #100]	; 0x64
 8020994:	81c2      	strh	r2, [r0, #14]
 8020996:	6183      	str	r3, [r0, #24]
 8020998:	4619      	mov	r1, r3
 802099a:	2208      	movs	r2, #8
 802099c:	305c      	adds	r0, #92	; 0x5c
 802099e:	f000 f93d 	bl	8020c1c <memset>
 80209a2:	4b05      	ldr	r3, [pc, #20]	; (80209b8 <std+0x38>)
 80209a4:	6263      	str	r3, [r4, #36]	; 0x24
 80209a6:	4b05      	ldr	r3, [pc, #20]	; (80209bc <std+0x3c>)
 80209a8:	62a3      	str	r3, [r4, #40]	; 0x28
 80209aa:	4b05      	ldr	r3, [pc, #20]	; (80209c0 <std+0x40>)
 80209ac:	62e3      	str	r3, [r4, #44]	; 0x2c
 80209ae:	4b05      	ldr	r3, [pc, #20]	; (80209c4 <std+0x44>)
 80209b0:	6224      	str	r4, [r4, #32]
 80209b2:	6323      	str	r3, [r4, #48]	; 0x30
 80209b4:	bd10      	pop	{r4, pc}
 80209b6:	bf00      	nop
 80209b8:	08021545 	.word	0x08021545
 80209bc:	08021567 	.word	0x08021567
 80209c0:	0802159f 	.word	0x0802159f
 80209c4:	080215c3 	.word	0x080215c3

080209c8 <_cleanup_r>:
 80209c8:	4901      	ldr	r1, [pc, #4]	; (80209d0 <_cleanup_r+0x8>)
 80209ca:	f000 b8c1 	b.w	8020b50 <_fwalk_reent>
 80209ce:	bf00      	nop
 80209d0:	08021961 	.word	0x08021961

080209d4 <__sfmoreglue>:
 80209d4:	b570      	push	{r4, r5, r6, lr}
 80209d6:	2268      	movs	r2, #104	; 0x68
 80209d8:	1e4d      	subs	r5, r1, #1
 80209da:	4355      	muls	r5, r2
 80209dc:	460e      	mov	r6, r1
 80209de:	f105 0174 	add.w	r1, r5, #116	; 0x74
 80209e2:	f000 f98f 	bl	8020d04 <_malloc_r>
 80209e6:	4604      	mov	r4, r0
 80209e8:	b140      	cbz	r0, 80209fc <__sfmoreglue+0x28>
 80209ea:	2100      	movs	r1, #0
 80209ec:	e9c0 1600 	strd	r1, r6, [r0]
 80209f0:	300c      	adds	r0, #12
 80209f2:	60a0      	str	r0, [r4, #8]
 80209f4:	f105 0268 	add.w	r2, r5, #104	; 0x68
 80209f8:	f000 f910 	bl	8020c1c <memset>
 80209fc:	4620      	mov	r0, r4
 80209fe:	bd70      	pop	{r4, r5, r6, pc}

08020a00 <__sfp_lock_acquire>:
 8020a00:	4801      	ldr	r0, [pc, #4]	; (8020a08 <__sfp_lock_acquire+0x8>)
 8020a02:	f000 b8ea 	b.w	8020bda <__retarget_lock_acquire_recursive>
 8020a06:	bf00      	nop
 8020a08:	2001570a 	.word	0x2001570a

08020a0c <__sfp_lock_release>:
 8020a0c:	4801      	ldr	r0, [pc, #4]	; (8020a14 <__sfp_lock_release+0x8>)
 8020a0e:	f000 b8e6 	b.w	8020bde <__retarget_lock_release_recursive>
 8020a12:	bf00      	nop
 8020a14:	2001570a 	.word	0x2001570a

08020a18 <__sinit_lock_acquire>:
 8020a18:	4801      	ldr	r0, [pc, #4]	; (8020a20 <__sinit_lock_acquire+0x8>)
 8020a1a:	f000 b8de 	b.w	8020bda <__retarget_lock_acquire_recursive>
 8020a1e:	bf00      	nop
 8020a20:	2001570b 	.word	0x2001570b

08020a24 <__sinit_lock_release>:
 8020a24:	4801      	ldr	r0, [pc, #4]	; (8020a2c <__sinit_lock_release+0x8>)
 8020a26:	f000 b8da 	b.w	8020bde <__retarget_lock_release_recursive>
 8020a2a:	bf00      	nop
 8020a2c:	2001570b 	.word	0x2001570b

08020a30 <__sinit>:
 8020a30:	b510      	push	{r4, lr}
 8020a32:	4604      	mov	r4, r0
 8020a34:	f7ff fff0 	bl	8020a18 <__sinit_lock_acquire>
 8020a38:	69a3      	ldr	r3, [r4, #24]
 8020a3a:	b11b      	cbz	r3, 8020a44 <__sinit+0x14>
 8020a3c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8020a40:	f7ff bff0 	b.w	8020a24 <__sinit_lock_release>
 8020a44:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8020a48:	6523      	str	r3, [r4, #80]	; 0x50
 8020a4a:	4b13      	ldr	r3, [pc, #76]	; (8020a98 <__sinit+0x68>)
 8020a4c:	4a13      	ldr	r2, [pc, #76]	; (8020a9c <__sinit+0x6c>)
 8020a4e:	681b      	ldr	r3, [r3, #0]
 8020a50:	62a2      	str	r2, [r4, #40]	; 0x28
 8020a52:	42a3      	cmp	r3, r4
 8020a54:	bf04      	itt	eq
 8020a56:	2301      	moveq	r3, #1
 8020a58:	61a3      	streq	r3, [r4, #24]
 8020a5a:	4620      	mov	r0, r4
 8020a5c:	f000 f820 	bl	8020aa0 <__sfp>
 8020a60:	6060      	str	r0, [r4, #4]
 8020a62:	4620      	mov	r0, r4
 8020a64:	f000 f81c 	bl	8020aa0 <__sfp>
 8020a68:	60a0      	str	r0, [r4, #8]
 8020a6a:	4620      	mov	r0, r4
 8020a6c:	f000 f818 	bl	8020aa0 <__sfp>
 8020a70:	2200      	movs	r2, #0
 8020a72:	60e0      	str	r0, [r4, #12]
 8020a74:	2104      	movs	r1, #4
 8020a76:	6860      	ldr	r0, [r4, #4]
 8020a78:	f7ff ff82 	bl	8020980 <std>
 8020a7c:	68a0      	ldr	r0, [r4, #8]
 8020a7e:	2201      	movs	r2, #1
 8020a80:	2109      	movs	r1, #9
 8020a82:	f7ff ff7d 	bl	8020980 <std>
 8020a86:	68e0      	ldr	r0, [r4, #12]
 8020a88:	2202      	movs	r2, #2
 8020a8a:	2112      	movs	r1, #18
 8020a8c:	f7ff ff78 	bl	8020980 <std>
 8020a90:	2301      	movs	r3, #1
 8020a92:	61a3      	str	r3, [r4, #24]
 8020a94:	e7d2      	b.n	8020a3c <__sinit+0xc>
 8020a96:	bf00      	nop
 8020a98:	080247f8 	.word	0x080247f8
 8020a9c:	080209c9 	.word	0x080209c9

08020aa0 <__sfp>:
 8020aa0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8020aa2:	4607      	mov	r7, r0
 8020aa4:	f7ff ffac 	bl	8020a00 <__sfp_lock_acquire>
 8020aa8:	4b1e      	ldr	r3, [pc, #120]	; (8020b24 <__sfp+0x84>)
 8020aaa:	681e      	ldr	r6, [r3, #0]
 8020aac:	69b3      	ldr	r3, [r6, #24]
 8020aae:	b913      	cbnz	r3, 8020ab6 <__sfp+0x16>
 8020ab0:	4630      	mov	r0, r6
 8020ab2:	f7ff ffbd 	bl	8020a30 <__sinit>
 8020ab6:	3648      	adds	r6, #72	; 0x48
 8020ab8:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8020abc:	3b01      	subs	r3, #1
 8020abe:	d503      	bpl.n	8020ac8 <__sfp+0x28>
 8020ac0:	6833      	ldr	r3, [r6, #0]
 8020ac2:	b30b      	cbz	r3, 8020b08 <__sfp+0x68>
 8020ac4:	6836      	ldr	r6, [r6, #0]
 8020ac6:	e7f7      	b.n	8020ab8 <__sfp+0x18>
 8020ac8:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8020acc:	b9d5      	cbnz	r5, 8020b04 <__sfp+0x64>
 8020ace:	4b16      	ldr	r3, [pc, #88]	; (8020b28 <__sfp+0x88>)
 8020ad0:	60e3      	str	r3, [r4, #12]
 8020ad2:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8020ad6:	6665      	str	r5, [r4, #100]	; 0x64
 8020ad8:	f000 f87e 	bl	8020bd8 <__retarget_lock_init_recursive>
 8020adc:	f7ff ff96 	bl	8020a0c <__sfp_lock_release>
 8020ae0:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8020ae4:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8020ae8:	6025      	str	r5, [r4, #0]
 8020aea:	61a5      	str	r5, [r4, #24]
 8020aec:	2208      	movs	r2, #8
 8020aee:	4629      	mov	r1, r5
 8020af0:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8020af4:	f000 f892 	bl	8020c1c <memset>
 8020af8:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8020afc:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8020b00:	4620      	mov	r0, r4
 8020b02:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8020b04:	3468      	adds	r4, #104	; 0x68
 8020b06:	e7d9      	b.n	8020abc <__sfp+0x1c>
 8020b08:	2104      	movs	r1, #4
 8020b0a:	4638      	mov	r0, r7
 8020b0c:	f7ff ff62 	bl	80209d4 <__sfmoreglue>
 8020b10:	4604      	mov	r4, r0
 8020b12:	6030      	str	r0, [r6, #0]
 8020b14:	2800      	cmp	r0, #0
 8020b16:	d1d5      	bne.n	8020ac4 <__sfp+0x24>
 8020b18:	f7ff ff78 	bl	8020a0c <__sfp_lock_release>
 8020b1c:	230c      	movs	r3, #12
 8020b1e:	603b      	str	r3, [r7, #0]
 8020b20:	e7ee      	b.n	8020b00 <__sfp+0x60>
 8020b22:	bf00      	nop
 8020b24:	080247f8 	.word	0x080247f8
 8020b28:	ffff0001 	.word	0xffff0001

08020b2c <fiprintf>:
 8020b2c:	b40e      	push	{r1, r2, r3}
 8020b2e:	b503      	push	{r0, r1, lr}
 8020b30:	4601      	mov	r1, r0
 8020b32:	ab03      	add	r3, sp, #12
 8020b34:	4805      	ldr	r0, [pc, #20]	; (8020b4c <fiprintf+0x20>)
 8020b36:	f853 2b04 	ldr.w	r2, [r3], #4
 8020b3a:	6800      	ldr	r0, [r0, #0]
 8020b3c:	9301      	str	r3, [sp, #4]
 8020b3e:	f000 f97f 	bl	8020e40 <_vfiprintf_r>
 8020b42:	b002      	add	sp, #8
 8020b44:	f85d eb04 	ldr.w	lr, [sp], #4
 8020b48:	b003      	add	sp, #12
 8020b4a:	4770      	bx	lr
 8020b4c:	20000104 	.word	0x20000104

08020b50 <_fwalk_reent>:
 8020b50:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8020b54:	4606      	mov	r6, r0
 8020b56:	4688      	mov	r8, r1
 8020b58:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8020b5c:	2700      	movs	r7, #0
 8020b5e:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8020b62:	f1b9 0901 	subs.w	r9, r9, #1
 8020b66:	d505      	bpl.n	8020b74 <_fwalk_reent+0x24>
 8020b68:	6824      	ldr	r4, [r4, #0]
 8020b6a:	2c00      	cmp	r4, #0
 8020b6c:	d1f7      	bne.n	8020b5e <_fwalk_reent+0xe>
 8020b6e:	4638      	mov	r0, r7
 8020b70:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8020b74:	89ab      	ldrh	r3, [r5, #12]
 8020b76:	2b01      	cmp	r3, #1
 8020b78:	d907      	bls.n	8020b8a <_fwalk_reent+0x3a>
 8020b7a:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8020b7e:	3301      	adds	r3, #1
 8020b80:	d003      	beq.n	8020b8a <_fwalk_reent+0x3a>
 8020b82:	4629      	mov	r1, r5
 8020b84:	4630      	mov	r0, r6
 8020b86:	47c0      	blx	r8
 8020b88:	4307      	orrs	r7, r0
 8020b8a:	3568      	adds	r5, #104	; 0x68
 8020b8c:	e7e9      	b.n	8020b62 <_fwalk_reent+0x12>
	...

08020b90 <__libc_init_array>:
 8020b90:	b570      	push	{r4, r5, r6, lr}
 8020b92:	4d0d      	ldr	r5, [pc, #52]	; (8020bc8 <__libc_init_array+0x38>)
 8020b94:	4c0d      	ldr	r4, [pc, #52]	; (8020bcc <__libc_init_array+0x3c>)
 8020b96:	1b64      	subs	r4, r4, r5
 8020b98:	10a4      	asrs	r4, r4, #2
 8020b9a:	2600      	movs	r6, #0
 8020b9c:	42a6      	cmp	r6, r4
 8020b9e:	d109      	bne.n	8020bb4 <__libc_init_array+0x24>
 8020ba0:	4d0b      	ldr	r5, [pc, #44]	; (8020bd0 <__libc_init_array+0x40>)
 8020ba2:	4c0c      	ldr	r4, [pc, #48]	; (8020bd4 <__libc_init_array+0x44>)
 8020ba4:	f000 ffd0 	bl	8021b48 <_init>
 8020ba8:	1b64      	subs	r4, r4, r5
 8020baa:	10a4      	asrs	r4, r4, #2
 8020bac:	2600      	movs	r6, #0
 8020bae:	42a6      	cmp	r6, r4
 8020bb0:	d105      	bne.n	8020bbe <__libc_init_array+0x2e>
 8020bb2:	bd70      	pop	{r4, r5, r6, pc}
 8020bb4:	f855 3b04 	ldr.w	r3, [r5], #4
 8020bb8:	4798      	blx	r3
 8020bba:	3601      	adds	r6, #1
 8020bbc:	e7ee      	b.n	8020b9c <__libc_init_array+0xc>
 8020bbe:	f855 3b04 	ldr.w	r3, [r5], #4
 8020bc2:	4798      	blx	r3
 8020bc4:	3601      	adds	r6, #1
 8020bc6:	e7f2      	b.n	8020bae <__libc_init_array+0x1e>
 8020bc8:	080c33cc 	.word	0x080c33cc
 8020bcc:	080c33cc 	.word	0x080c33cc
 8020bd0:	080c33cc 	.word	0x080c33cc
 8020bd4:	080c33e0 	.word	0x080c33e0

08020bd8 <__retarget_lock_init_recursive>:
 8020bd8:	4770      	bx	lr

08020bda <__retarget_lock_acquire_recursive>:
 8020bda:	4770      	bx	lr

08020bdc <__retarget_lock_release>:
 8020bdc:	4770      	bx	lr

08020bde <__retarget_lock_release_recursive>:
 8020bde:	4770      	bx	lr

08020be0 <malloc>:
 8020be0:	4b02      	ldr	r3, [pc, #8]	; (8020bec <malloc+0xc>)
 8020be2:	4601      	mov	r1, r0
 8020be4:	6818      	ldr	r0, [r3, #0]
 8020be6:	f000 b88d 	b.w	8020d04 <_malloc_r>
 8020bea:	bf00      	nop
 8020bec:	20000104 	.word	0x20000104

08020bf0 <free>:
 8020bf0:	4b02      	ldr	r3, [pc, #8]	; (8020bfc <free+0xc>)
 8020bf2:	4601      	mov	r1, r0
 8020bf4:	6818      	ldr	r0, [r3, #0]
 8020bf6:	f000 b819 	b.w	8020c2c <_free_r>
 8020bfa:	bf00      	nop
 8020bfc:	20000104 	.word	0x20000104

08020c00 <memcpy>:
 8020c00:	440a      	add	r2, r1
 8020c02:	4291      	cmp	r1, r2
 8020c04:	f100 33ff 	add.w	r3, r0, #4294967295
 8020c08:	d100      	bne.n	8020c0c <memcpy+0xc>
 8020c0a:	4770      	bx	lr
 8020c0c:	b510      	push	{r4, lr}
 8020c0e:	f811 4b01 	ldrb.w	r4, [r1], #1
 8020c12:	f803 4f01 	strb.w	r4, [r3, #1]!
 8020c16:	4291      	cmp	r1, r2
 8020c18:	d1f9      	bne.n	8020c0e <memcpy+0xe>
 8020c1a:	bd10      	pop	{r4, pc}

08020c1c <memset>:
 8020c1c:	4402      	add	r2, r0
 8020c1e:	4603      	mov	r3, r0
 8020c20:	4293      	cmp	r3, r2
 8020c22:	d100      	bne.n	8020c26 <memset+0xa>
 8020c24:	4770      	bx	lr
 8020c26:	f803 1b01 	strb.w	r1, [r3], #1
 8020c2a:	e7f9      	b.n	8020c20 <memset+0x4>

08020c2c <_free_r>:
 8020c2c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8020c2e:	2900      	cmp	r1, #0
 8020c30:	d044      	beq.n	8020cbc <_free_r+0x90>
 8020c32:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8020c36:	9001      	str	r0, [sp, #4]
 8020c38:	2b00      	cmp	r3, #0
 8020c3a:	f1a1 0404 	sub.w	r4, r1, #4
 8020c3e:	bfb8      	it	lt
 8020c40:	18e4      	addlt	r4, r4, r3
 8020c42:	f000 ff41 	bl	8021ac8 <__malloc_lock>
 8020c46:	4a1e      	ldr	r2, [pc, #120]	; (8020cc0 <_free_r+0x94>)
 8020c48:	9801      	ldr	r0, [sp, #4]
 8020c4a:	6813      	ldr	r3, [r2, #0]
 8020c4c:	b933      	cbnz	r3, 8020c5c <_free_r+0x30>
 8020c4e:	6063      	str	r3, [r4, #4]
 8020c50:	6014      	str	r4, [r2, #0]
 8020c52:	b003      	add	sp, #12
 8020c54:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8020c58:	f000 bf3c 	b.w	8021ad4 <__malloc_unlock>
 8020c5c:	42a3      	cmp	r3, r4
 8020c5e:	d908      	bls.n	8020c72 <_free_r+0x46>
 8020c60:	6825      	ldr	r5, [r4, #0]
 8020c62:	1961      	adds	r1, r4, r5
 8020c64:	428b      	cmp	r3, r1
 8020c66:	bf01      	itttt	eq
 8020c68:	6819      	ldreq	r1, [r3, #0]
 8020c6a:	685b      	ldreq	r3, [r3, #4]
 8020c6c:	1949      	addeq	r1, r1, r5
 8020c6e:	6021      	streq	r1, [r4, #0]
 8020c70:	e7ed      	b.n	8020c4e <_free_r+0x22>
 8020c72:	461a      	mov	r2, r3
 8020c74:	685b      	ldr	r3, [r3, #4]
 8020c76:	b10b      	cbz	r3, 8020c7c <_free_r+0x50>
 8020c78:	42a3      	cmp	r3, r4
 8020c7a:	d9fa      	bls.n	8020c72 <_free_r+0x46>
 8020c7c:	6811      	ldr	r1, [r2, #0]
 8020c7e:	1855      	adds	r5, r2, r1
 8020c80:	42a5      	cmp	r5, r4
 8020c82:	d10b      	bne.n	8020c9c <_free_r+0x70>
 8020c84:	6824      	ldr	r4, [r4, #0]
 8020c86:	4421      	add	r1, r4
 8020c88:	1854      	adds	r4, r2, r1
 8020c8a:	42a3      	cmp	r3, r4
 8020c8c:	6011      	str	r1, [r2, #0]
 8020c8e:	d1e0      	bne.n	8020c52 <_free_r+0x26>
 8020c90:	681c      	ldr	r4, [r3, #0]
 8020c92:	685b      	ldr	r3, [r3, #4]
 8020c94:	6053      	str	r3, [r2, #4]
 8020c96:	4421      	add	r1, r4
 8020c98:	6011      	str	r1, [r2, #0]
 8020c9a:	e7da      	b.n	8020c52 <_free_r+0x26>
 8020c9c:	d902      	bls.n	8020ca4 <_free_r+0x78>
 8020c9e:	230c      	movs	r3, #12
 8020ca0:	6003      	str	r3, [r0, #0]
 8020ca2:	e7d6      	b.n	8020c52 <_free_r+0x26>
 8020ca4:	6825      	ldr	r5, [r4, #0]
 8020ca6:	1961      	adds	r1, r4, r5
 8020ca8:	428b      	cmp	r3, r1
 8020caa:	bf04      	itt	eq
 8020cac:	6819      	ldreq	r1, [r3, #0]
 8020cae:	685b      	ldreq	r3, [r3, #4]
 8020cb0:	6063      	str	r3, [r4, #4]
 8020cb2:	bf04      	itt	eq
 8020cb4:	1949      	addeq	r1, r1, r5
 8020cb6:	6021      	streq	r1, [r4, #0]
 8020cb8:	6054      	str	r4, [r2, #4]
 8020cba:	e7ca      	b.n	8020c52 <_free_r+0x26>
 8020cbc:	b003      	add	sp, #12
 8020cbe:	bd30      	pop	{r4, r5, pc}
 8020cc0:	2001570c 	.word	0x2001570c

08020cc4 <sbrk_aligned>:
 8020cc4:	b570      	push	{r4, r5, r6, lr}
 8020cc6:	4e0e      	ldr	r6, [pc, #56]	; (8020d00 <sbrk_aligned+0x3c>)
 8020cc8:	460c      	mov	r4, r1
 8020cca:	6831      	ldr	r1, [r6, #0]
 8020ccc:	4605      	mov	r5, r0
 8020cce:	b911      	cbnz	r1, 8020cd6 <sbrk_aligned+0x12>
 8020cd0:	f000 fbe4 	bl	802149c <_sbrk_r>
 8020cd4:	6030      	str	r0, [r6, #0]
 8020cd6:	4621      	mov	r1, r4
 8020cd8:	4628      	mov	r0, r5
 8020cda:	f000 fbdf 	bl	802149c <_sbrk_r>
 8020cde:	1c43      	adds	r3, r0, #1
 8020ce0:	d00a      	beq.n	8020cf8 <sbrk_aligned+0x34>
 8020ce2:	1cc4      	adds	r4, r0, #3
 8020ce4:	f024 0403 	bic.w	r4, r4, #3
 8020ce8:	42a0      	cmp	r0, r4
 8020cea:	d007      	beq.n	8020cfc <sbrk_aligned+0x38>
 8020cec:	1a21      	subs	r1, r4, r0
 8020cee:	4628      	mov	r0, r5
 8020cf0:	f000 fbd4 	bl	802149c <_sbrk_r>
 8020cf4:	3001      	adds	r0, #1
 8020cf6:	d101      	bne.n	8020cfc <sbrk_aligned+0x38>
 8020cf8:	f04f 34ff 	mov.w	r4, #4294967295
 8020cfc:	4620      	mov	r0, r4
 8020cfe:	bd70      	pop	{r4, r5, r6, pc}
 8020d00:	20015710 	.word	0x20015710

08020d04 <_malloc_r>:
 8020d04:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8020d08:	1ccd      	adds	r5, r1, #3
 8020d0a:	f025 0503 	bic.w	r5, r5, #3
 8020d0e:	3508      	adds	r5, #8
 8020d10:	2d0c      	cmp	r5, #12
 8020d12:	bf38      	it	cc
 8020d14:	250c      	movcc	r5, #12
 8020d16:	2d00      	cmp	r5, #0
 8020d18:	4607      	mov	r7, r0
 8020d1a:	db01      	blt.n	8020d20 <_malloc_r+0x1c>
 8020d1c:	42a9      	cmp	r1, r5
 8020d1e:	d905      	bls.n	8020d2c <_malloc_r+0x28>
 8020d20:	230c      	movs	r3, #12
 8020d22:	603b      	str	r3, [r7, #0]
 8020d24:	2600      	movs	r6, #0
 8020d26:	4630      	mov	r0, r6
 8020d28:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8020d2c:	4e2e      	ldr	r6, [pc, #184]	; (8020de8 <_malloc_r+0xe4>)
 8020d2e:	f000 fecb 	bl	8021ac8 <__malloc_lock>
 8020d32:	6833      	ldr	r3, [r6, #0]
 8020d34:	461c      	mov	r4, r3
 8020d36:	bb34      	cbnz	r4, 8020d86 <_malloc_r+0x82>
 8020d38:	4629      	mov	r1, r5
 8020d3a:	4638      	mov	r0, r7
 8020d3c:	f7ff ffc2 	bl	8020cc4 <sbrk_aligned>
 8020d40:	1c43      	adds	r3, r0, #1
 8020d42:	4604      	mov	r4, r0
 8020d44:	d14d      	bne.n	8020de2 <_malloc_r+0xde>
 8020d46:	6834      	ldr	r4, [r6, #0]
 8020d48:	4626      	mov	r6, r4
 8020d4a:	2e00      	cmp	r6, #0
 8020d4c:	d140      	bne.n	8020dd0 <_malloc_r+0xcc>
 8020d4e:	6823      	ldr	r3, [r4, #0]
 8020d50:	4631      	mov	r1, r6
 8020d52:	4638      	mov	r0, r7
 8020d54:	eb04 0803 	add.w	r8, r4, r3
 8020d58:	f000 fba0 	bl	802149c <_sbrk_r>
 8020d5c:	4580      	cmp	r8, r0
 8020d5e:	d13a      	bne.n	8020dd6 <_malloc_r+0xd2>
 8020d60:	6821      	ldr	r1, [r4, #0]
 8020d62:	3503      	adds	r5, #3
 8020d64:	1a6d      	subs	r5, r5, r1
 8020d66:	f025 0503 	bic.w	r5, r5, #3
 8020d6a:	3508      	adds	r5, #8
 8020d6c:	2d0c      	cmp	r5, #12
 8020d6e:	bf38      	it	cc
 8020d70:	250c      	movcc	r5, #12
 8020d72:	4629      	mov	r1, r5
 8020d74:	4638      	mov	r0, r7
 8020d76:	f7ff ffa5 	bl	8020cc4 <sbrk_aligned>
 8020d7a:	3001      	adds	r0, #1
 8020d7c:	d02b      	beq.n	8020dd6 <_malloc_r+0xd2>
 8020d7e:	6823      	ldr	r3, [r4, #0]
 8020d80:	442b      	add	r3, r5
 8020d82:	6023      	str	r3, [r4, #0]
 8020d84:	e00e      	b.n	8020da4 <_malloc_r+0xa0>
 8020d86:	6822      	ldr	r2, [r4, #0]
 8020d88:	1b52      	subs	r2, r2, r5
 8020d8a:	d41e      	bmi.n	8020dca <_malloc_r+0xc6>
 8020d8c:	2a0b      	cmp	r2, #11
 8020d8e:	d916      	bls.n	8020dbe <_malloc_r+0xba>
 8020d90:	1961      	adds	r1, r4, r5
 8020d92:	42a3      	cmp	r3, r4
 8020d94:	6025      	str	r5, [r4, #0]
 8020d96:	bf18      	it	ne
 8020d98:	6059      	strne	r1, [r3, #4]
 8020d9a:	6863      	ldr	r3, [r4, #4]
 8020d9c:	bf08      	it	eq
 8020d9e:	6031      	streq	r1, [r6, #0]
 8020da0:	5162      	str	r2, [r4, r5]
 8020da2:	604b      	str	r3, [r1, #4]
 8020da4:	4638      	mov	r0, r7
 8020da6:	f104 060b 	add.w	r6, r4, #11
 8020daa:	f000 fe93 	bl	8021ad4 <__malloc_unlock>
 8020dae:	f026 0607 	bic.w	r6, r6, #7
 8020db2:	1d23      	adds	r3, r4, #4
 8020db4:	1af2      	subs	r2, r6, r3
 8020db6:	d0b6      	beq.n	8020d26 <_malloc_r+0x22>
 8020db8:	1b9b      	subs	r3, r3, r6
 8020dba:	50a3      	str	r3, [r4, r2]
 8020dbc:	e7b3      	b.n	8020d26 <_malloc_r+0x22>
 8020dbe:	6862      	ldr	r2, [r4, #4]
 8020dc0:	42a3      	cmp	r3, r4
 8020dc2:	bf0c      	ite	eq
 8020dc4:	6032      	streq	r2, [r6, #0]
 8020dc6:	605a      	strne	r2, [r3, #4]
 8020dc8:	e7ec      	b.n	8020da4 <_malloc_r+0xa0>
 8020dca:	4623      	mov	r3, r4
 8020dcc:	6864      	ldr	r4, [r4, #4]
 8020dce:	e7b2      	b.n	8020d36 <_malloc_r+0x32>
 8020dd0:	4634      	mov	r4, r6
 8020dd2:	6876      	ldr	r6, [r6, #4]
 8020dd4:	e7b9      	b.n	8020d4a <_malloc_r+0x46>
 8020dd6:	230c      	movs	r3, #12
 8020dd8:	603b      	str	r3, [r7, #0]
 8020dda:	4638      	mov	r0, r7
 8020ddc:	f000 fe7a 	bl	8021ad4 <__malloc_unlock>
 8020de0:	e7a1      	b.n	8020d26 <_malloc_r+0x22>
 8020de2:	6025      	str	r5, [r4, #0]
 8020de4:	e7de      	b.n	8020da4 <_malloc_r+0xa0>
 8020de6:	bf00      	nop
 8020de8:	2001570c 	.word	0x2001570c

08020dec <__sfputc_r>:
 8020dec:	6893      	ldr	r3, [r2, #8]
 8020dee:	3b01      	subs	r3, #1
 8020df0:	2b00      	cmp	r3, #0
 8020df2:	b410      	push	{r4}
 8020df4:	6093      	str	r3, [r2, #8]
 8020df6:	da08      	bge.n	8020e0a <__sfputc_r+0x1e>
 8020df8:	6994      	ldr	r4, [r2, #24]
 8020dfa:	42a3      	cmp	r3, r4
 8020dfc:	db01      	blt.n	8020e02 <__sfputc_r+0x16>
 8020dfe:	290a      	cmp	r1, #10
 8020e00:	d103      	bne.n	8020e0a <__sfputc_r+0x1e>
 8020e02:	f85d 4b04 	ldr.w	r4, [sp], #4
 8020e06:	f000 bbe1 	b.w	80215cc <__swbuf_r>
 8020e0a:	6813      	ldr	r3, [r2, #0]
 8020e0c:	1c58      	adds	r0, r3, #1
 8020e0e:	6010      	str	r0, [r2, #0]
 8020e10:	7019      	strb	r1, [r3, #0]
 8020e12:	4608      	mov	r0, r1
 8020e14:	f85d 4b04 	ldr.w	r4, [sp], #4
 8020e18:	4770      	bx	lr

08020e1a <__sfputs_r>:
 8020e1a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8020e1c:	4606      	mov	r6, r0
 8020e1e:	460f      	mov	r7, r1
 8020e20:	4614      	mov	r4, r2
 8020e22:	18d5      	adds	r5, r2, r3
 8020e24:	42ac      	cmp	r4, r5
 8020e26:	d101      	bne.n	8020e2c <__sfputs_r+0x12>
 8020e28:	2000      	movs	r0, #0
 8020e2a:	e007      	b.n	8020e3c <__sfputs_r+0x22>
 8020e2c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8020e30:	463a      	mov	r2, r7
 8020e32:	4630      	mov	r0, r6
 8020e34:	f7ff ffda 	bl	8020dec <__sfputc_r>
 8020e38:	1c43      	adds	r3, r0, #1
 8020e3a:	d1f3      	bne.n	8020e24 <__sfputs_r+0xa>
 8020e3c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08020e40 <_vfiprintf_r>:
 8020e40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020e44:	460d      	mov	r5, r1
 8020e46:	b09d      	sub	sp, #116	; 0x74
 8020e48:	4614      	mov	r4, r2
 8020e4a:	4698      	mov	r8, r3
 8020e4c:	4606      	mov	r6, r0
 8020e4e:	b118      	cbz	r0, 8020e58 <_vfiprintf_r+0x18>
 8020e50:	6983      	ldr	r3, [r0, #24]
 8020e52:	b90b      	cbnz	r3, 8020e58 <_vfiprintf_r+0x18>
 8020e54:	f7ff fdec 	bl	8020a30 <__sinit>
 8020e58:	4b89      	ldr	r3, [pc, #548]	; (8021080 <_vfiprintf_r+0x240>)
 8020e5a:	429d      	cmp	r5, r3
 8020e5c:	d11b      	bne.n	8020e96 <_vfiprintf_r+0x56>
 8020e5e:	6875      	ldr	r5, [r6, #4]
 8020e60:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8020e62:	07d9      	lsls	r1, r3, #31
 8020e64:	d405      	bmi.n	8020e72 <_vfiprintf_r+0x32>
 8020e66:	89ab      	ldrh	r3, [r5, #12]
 8020e68:	059a      	lsls	r2, r3, #22
 8020e6a:	d402      	bmi.n	8020e72 <_vfiprintf_r+0x32>
 8020e6c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8020e6e:	f7ff feb4 	bl	8020bda <__retarget_lock_acquire_recursive>
 8020e72:	89ab      	ldrh	r3, [r5, #12]
 8020e74:	071b      	lsls	r3, r3, #28
 8020e76:	d501      	bpl.n	8020e7c <_vfiprintf_r+0x3c>
 8020e78:	692b      	ldr	r3, [r5, #16]
 8020e7a:	b9eb      	cbnz	r3, 8020eb8 <_vfiprintf_r+0x78>
 8020e7c:	4629      	mov	r1, r5
 8020e7e:	4630      	mov	r0, r6
 8020e80:	f000 fc08 	bl	8021694 <__swsetup_r>
 8020e84:	b1c0      	cbz	r0, 8020eb8 <_vfiprintf_r+0x78>
 8020e86:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8020e88:	07dc      	lsls	r4, r3, #31
 8020e8a:	d50e      	bpl.n	8020eaa <_vfiprintf_r+0x6a>
 8020e8c:	f04f 30ff 	mov.w	r0, #4294967295
 8020e90:	b01d      	add	sp, #116	; 0x74
 8020e92:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020e96:	4b7b      	ldr	r3, [pc, #492]	; (8021084 <_vfiprintf_r+0x244>)
 8020e98:	429d      	cmp	r5, r3
 8020e9a:	d101      	bne.n	8020ea0 <_vfiprintf_r+0x60>
 8020e9c:	68b5      	ldr	r5, [r6, #8]
 8020e9e:	e7df      	b.n	8020e60 <_vfiprintf_r+0x20>
 8020ea0:	4b79      	ldr	r3, [pc, #484]	; (8021088 <_vfiprintf_r+0x248>)
 8020ea2:	429d      	cmp	r5, r3
 8020ea4:	bf08      	it	eq
 8020ea6:	68f5      	ldreq	r5, [r6, #12]
 8020ea8:	e7da      	b.n	8020e60 <_vfiprintf_r+0x20>
 8020eaa:	89ab      	ldrh	r3, [r5, #12]
 8020eac:	0598      	lsls	r0, r3, #22
 8020eae:	d4ed      	bmi.n	8020e8c <_vfiprintf_r+0x4c>
 8020eb0:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8020eb2:	f7ff fe94 	bl	8020bde <__retarget_lock_release_recursive>
 8020eb6:	e7e9      	b.n	8020e8c <_vfiprintf_r+0x4c>
 8020eb8:	2300      	movs	r3, #0
 8020eba:	9309      	str	r3, [sp, #36]	; 0x24
 8020ebc:	2320      	movs	r3, #32
 8020ebe:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8020ec2:	f8cd 800c 	str.w	r8, [sp, #12]
 8020ec6:	2330      	movs	r3, #48	; 0x30
 8020ec8:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 802108c <_vfiprintf_r+0x24c>
 8020ecc:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8020ed0:	f04f 0901 	mov.w	r9, #1
 8020ed4:	4623      	mov	r3, r4
 8020ed6:	469a      	mov	sl, r3
 8020ed8:	f813 2b01 	ldrb.w	r2, [r3], #1
 8020edc:	b10a      	cbz	r2, 8020ee2 <_vfiprintf_r+0xa2>
 8020ede:	2a25      	cmp	r2, #37	; 0x25
 8020ee0:	d1f9      	bne.n	8020ed6 <_vfiprintf_r+0x96>
 8020ee2:	ebba 0b04 	subs.w	fp, sl, r4
 8020ee6:	d00b      	beq.n	8020f00 <_vfiprintf_r+0xc0>
 8020ee8:	465b      	mov	r3, fp
 8020eea:	4622      	mov	r2, r4
 8020eec:	4629      	mov	r1, r5
 8020eee:	4630      	mov	r0, r6
 8020ef0:	f7ff ff93 	bl	8020e1a <__sfputs_r>
 8020ef4:	3001      	adds	r0, #1
 8020ef6:	f000 80aa 	beq.w	802104e <_vfiprintf_r+0x20e>
 8020efa:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8020efc:	445a      	add	r2, fp
 8020efe:	9209      	str	r2, [sp, #36]	; 0x24
 8020f00:	f89a 3000 	ldrb.w	r3, [sl]
 8020f04:	2b00      	cmp	r3, #0
 8020f06:	f000 80a2 	beq.w	802104e <_vfiprintf_r+0x20e>
 8020f0a:	2300      	movs	r3, #0
 8020f0c:	f04f 32ff 	mov.w	r2, #4294967295
 8020f10:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8020f14:	f10a 0a01 	add.w	sl, sl, #1
 8020f18:	9304      	str	r3, [sp, #16]
 8020f1a:	9307      	str	r3, [sp, #28]
 8020f1c:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8020f20:	931a      	str	r3, [sp, #104]	; 0x68
 8020f22:	4654      	mov	r4, sl
 8020f24:	2205      	movs	r2, #5
 8020f26:	f814 1b01 	ldrb.w	r1, [r4], #1
 8020f2a:	4858      	ldr	r0, [pc, #352]	; (802108c <_vfiprintf_r+0x24c>)
 8020f2c:	f7df f960 	bl	80001f0 <memchr>
 8020f30:	9a04      	ldr	r2, [sp, #16]
 8020f32:	b9d8      	cbnz	r0, 8020f6c <_vfiprintf_r+0x12c>
 8020f34:	06d1      	lsls	r1, r2, #27
 8020f36:	bf44      	itt	mi
 8020f38:	2320      	movmi	r3, #32
 8020f3a:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8020f3e:	0713      	lsls	r3, r2, #28
 8020f40:	bf44      	itt	mi
 8020f42:	232b      	movmi	r3, #43	; 0x2b
 8020f44:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8020f48:	f89a 3000 	ldrb.w	r3, [sl]
 8020f4c:	2b2a      	cmp	r3, #42	; 0x2a
 8020f4e:	d015      	beq.n	8020f7c <_vfiprintf_r+0x13c>
 8020f50:	9a07      	ldr	r2, [sp, #28]
 8020f52:	4654      	mov	r4, sl
 8020f54:	2000      	movs	r0, #0
 8020f56:	f04f 0c0a 	mov.w	ip, #10
 8020f5a:	4621      	mov	r1, r4
 8020f5c:	f811 3b01 	ldrb.w	r3, [r1], #1
 8020f60:	3b30      	subs	r3, #48	; 0x30
 8020f62:	2b09      	cmp	r3, #9
 8020f64:	d94e      	bls.n	8021004 <_vfiprintf_r+0x1c4>
 8020f66:	b1b0      	cbz	r0, 8020f96 <_vfiprintf_r+0x156>
 8020f68:	9207      	str	r2, [sp, #28]
 8020f6a:	e014      	b.n	8020f96 <_vfiprintf_r+0x156>
 8020f6c:	eba0 0308 	sub.w	r3, r0, r8
 8020f70:	fa09 f303 	lsl.w	r3, r9, r3
 8020f74:	4313      	orrs	r3, r2
 8020f76:	9304      	str	r3, [sp, #16]
 8020f78:	46a2      	mov	sl, r4
 8020f7a:	e7d2      	b.n	8020f22 <_vfiprintf_r+0xe2>
 8020f7c:	9b03      	ldr	r3, [sp, #12]
 8020f7e:	1d19      	adds	r1, r3, #4
 8020f80:	681b      	ldr	r3, [r3, #0]
 8020f82:	9103      	str	r1, [sp, #12]
 8020f84:	2b00      	cmp	r3, #0
 8020f86:	bfbb      	ittet	lt
 8020f88:	425b      	neglt	r3, r3
 8020f8a:	f042 0202 	orrlt.w	r2, r2, #2
 8020f8e:	9307      	strge	r3, [sp, #28]
 8020f90:	9307      	strlt	r3, [sp, #28]
 8020f92:	bfb8      	it	lt
 8020f94:	9204      	strlt	r2, [sp, #16]
 8020f96:	7823      	ldrb	r3, [r4, #0]
 8020f98:	2b2e      	cmp	r3, #46	; 0x2e
 8020f9a:	d10c      	bne.n	8020fb6 <_vfiprintf_r+0x176>
 8020f9c:	7863      	ldrb	r3, [r4, #1]
 8020f9e:	2b2a      	cmp	r3, #42	; 0x2a
 8020fa0:	d135      	bne.n	802100e <_vfiprintf_r+0x1ce>
 8020fa2:	9b03      	ldr	r3, [sp, #12]
 8020fa4:	1d1a      	adds	r2, r3, #4
 8020fa6:	681b      	ldr	r3, [r3, #0]
 8020fa8:	9203      	str	r2, [sp, #12]
 8020faa:	2b00      	cmp	r3, #0
 8020fac:	bfb8      	it	lt
 8020fae:	f04f 33ff 	movlt.w	r3, #4294967295
 8020fb2:	3402      	adds	r4, #2
 8020fb4:	9305      	str	r3, [sp, #20]
 8020fb6:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 802109c <_vfiprintf_r+0x25c>
 8020fba:	7821      	ldrb	r1, [r4, #0]
 8020fbc:	2203      	movs	r2, #3
 8020fbe:	4650      	mov	r0, sl
 8020fc0:	f7df f916 	bl	80001f0 <memchr>
 8020fc4:	b140      	cbz	r0, 8020fd8 <_vfiprintf_r+0x198>
 8020fc6:	2340      	movs	r3, #64	; 0x40
 8020fc8:	eba0 000a 	sub.w	r0, r0, sl
 8020fcc:	fa03 f000 	lsl.w	r0, r3, r0
 8020fd0:	9b04      	ldr	r3, [sp, #16]
 8020fd2:	4303      	orrs	r3, r0
 8020fd4:	3401      	adds	r4, #1
 8020fd6:	9304      	str	r3, [sp, #16]
 8020fd8:	f814 1b01 	ldrb.w	r1, [r4], #1
 8020fdc:	482c      	ldr	r0, [pc, #176]	; (8021090 <_vfiprintf_r+0x250>)
 8020fde:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8020fe2:	2206      	movs	r2, #6
 8020fe4:	f7df f904 	bl	80001f0 <memchr>
 8020fe8:	2800      	cmp	r0, #0
 8020fea:	d03f      	beq.n	802106c <_vfiprintf_r+0x22c>
 8020fec:	4b29      	ldr	r3, [pc, #164]	; (8021094 <_vfiprintf_r+0x254>)
 8020fee:	bb1b      	cbnz	r3, 8021038 <_vfiprintf_r+0x1f8>
 8020ff0:	9b03      	ldr	r3, [sp, #12]
 8020ff2:	3307      	adds	r3, #7
 8020ff4:	f023 0307 	bic.w	r3, r3, #7
 8020ff8:	3308      	adds	r3, #8
 8020ffa:	9303      	str	r3, [sp, #12]
 8020ffc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020ffe:	443b      	add	r3, r7
 8021000:	9309      	str	r3, [sp, #36]	; 0x24
 8021002:	e767      	b.n	8020ed4 <_vfiprintf_r+0x94>
 8021004:	fb0c 3202 	mla	r2, ip, r2, r3
 8021008:	460c      	mov	r4, r1
 802100a:	2001      	movs	r0, #1
 802100c:	e7a5      	b.n	8020f5a <_vfiprintf_r+0x11a>
 802100e:	2300      	movs	r3, #0
 8021010:	3401      	adds	r4, #1
 8021012:	9305      	str	r3, [sp, #20]
 8021014:	4619      	mov	r1, r3
 8021016:	f04f 0c0a 	mov.w	ip, #10
 802101a:	4620      	mov	r0, r4
 802101c:	f810 2b01 	ldrb.w	r2, [r0], #1
 8021020:	3a30      	subs	r2, #48	; 0x30
 8021022:	2a09      	cmp	r2, #9
 8021024:	d903      	bls.n	802102e <_vfiprintf_r+0x1ee>
 8021026:	2b00      	cmp	r3, #0
 8021028:	d0c5      	beq.n	8020fb6 <_vfiprintf_r+0x176>
 802102a:	9105      	str	r1, [sp, #20]
 802102c:	e7c3      	b.n	8020fb6 <_vfiprintf_r+0x176>
 802102e:	fb0c 2101 	mla	r1, ip, r1, r2
 8021032:	4604      	mov	r4, r0
 8021034:	2301      	movs	r3, #1
 8021036:	e7f0      	b.n	802101a <_vfiprintf_r+0x1da>
 8021038:	ab03      	add	r3, sp, #12
 802103a:	9300      	str	r3, [sp, #0]
 802103c:	462a      	mov	r2, r5
 802103e:	4b16      	ldr	r3, [pc, #88]	; (8021098 <_vfiprintf_r+0x258>)
 8021040:	a904      	add	r1, sp, #16
 8021042:	4630      	mov	r0, r6
 8021044:	f3af 8000 	nop.w
 8021048:	4607      	mov	r7, r0
 802104a:	1c78      	adds	r0, r7, #1
 802104c:	d1d6      	bne.n	8020ffc <_vfiprintf_r+0x1bc>
 802104e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8021050:	07d9      	lsls	r1, r3, #31
 8021052:	d405      	bmi.n	8021060 <_vfiprintf_r+0x220>
 8021054:	89ab      	ldrh	r3, [r5, #12]
 8021056:	059a      	lsls	r2, r3, #22
 8021058:	d402      	bmi.n	8021060 <_vfiprintf_r+0x220>
 802105a:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802105c:	f7ff fdbf 	bl	8020bde <__retarget_lock_release_recursive>
 8021060:	89ab      	ldrh	r3, [r5, #12]
 8021062:	065b      	lsls	r3, r3, #25
 8021064:	f53f af12 	bmi.w	8020e8c <_vfiprintf_r+0x4c>
 8021068:	9809      	ldr	r0, [sp, #36]	; 0x24
 802106a:	e711      	b.n	8020e90 <_vfiprintf_r+0x50>
 802106c:	ab03      	add	r3, sp, #12
 802106e:	9300      	str	r3, [sp, #0]
 8021070:	462a      	mov	r2, r5
 8021072:	4b09      	ldr	r3, [pc, #36]	; (8021098 <_vfiprintf_r+0x258>)
 8021074:	a904      	add	r1, sp, #16
 8021076:	4630      	mov	r0, r6
 8021078:	f000 f880 	bl	802117c <_printf_i>
 802107c:	e7e4      	b.n	8021048 <_vfiprintf_r+0x208>
 802107e:	bf00      	nop
 8021080:	080247b8 	.word	0x080247b8
 8021084:	080247d8 	.word	0x080247d8
 8021088:	08024798 	.word	0x08024798
 802108c:	080247fc 	.word	0x080247fc
 8021090:	08024806 	.word	0x08024806
 8021094:	00000000 	.word	0x00000000
 8021098:	08020e1b 	.word	0x08020e1b
 802109c:	08024802 	.word	0x08024802

080210a0 <_printf_common>:
 80210a0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80210a4:	4616      	mov	r6, r2
 80210a6:	4699      	mov	r9, r3
 80210a8:	688a      	ldr	r2, [r1, #8]
 80210aa:	690b      	ldr	r3, [r1, #16]
 80210ac:	f8dd 8020 	ldr.w	r8, [sp, #32]
 80210b0:	4293      	cmp	r3, r2
 80210b2:	bfb8      	it	lt
 80210b4:	4613      	movlt	r3, r2
 80210b6:	6033      	str	r3, [r6, #0]
 80210b8:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 80210bc:	4607      	mov	r7, r0
 80210be:	460c      	mov	r4, r1
 80210c0:	b10a      	cbz	r2, 80210c6 <_printf_common+0x26>
 80210c2:	3301      	adds	r3, #1
 80210c4:	6033      	str	r3, [r6, #0]
 80210c6:	6823      	ldr	r3, [r4, #0]
 80210c8:	0699      	lsls	r1, r3, #26
 80210ca:	bf42      	ittt	mi
 80210cc:	6833      	ldrmi	r3, [r6, #0]
 80210ce:	3302      	addmi	r3, #2
 80210d0:	6033      	strmi	r3, [r6, #0]
 80210d2:	6825      	ldr	r5, [r4, #0]
 80210d4:	f015 0506 	ands.w	r5, r5, #6
 80210d8:	d106      	bne.n	80210e8 <_printf_common+0x48>
 80210da:	f104 0a19 	add.w	sl, r4, #25
 80210de:	68e3      	ldr	r3, [r4, #12]
 80210e0:	6832      	ldr	r2, [r6, #0]
 80210e2:	1a9b      	subs	r3, r3, r2
 80210e4:	42ab      	cmp	r3, r5
 80210e6:	dc26      	bgt.n	8021136 <_printf_common+0x96>
 80210e8:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 80210ec:	1e13      	subs	r3, r2, #0
 80210ee:	6822      	ldr	r2, [r4, #0]
 80210f0:	bf18      	it	ne
 80210f2:	2301      	movne	r3, #1
 80210f4:	0692      	lsls	r2, r2, #26
 80210f6:	d42b      	bmi.n	8021150 <_printf_common+0xb0>
 80210f8:	f104 0243 	add.w	r2, r4, #67	; 0x43
 80210fc:	4649      	mov	r1, r9
 80210fe:	4638      	mov	r0, r7
 8021100:	47c0      	blx	r8
 8021102:	3001      	adds	r0, #1
 8021104:	d01e      	beq.n	8021144 <_printf_common+0xa4>
 8021106:	6823      	ldr	r3, [r4, #0]
 8021108:	68e5      	ldr	r5, [r4, #12]
 802110a:	6832      	ldr	r2, [r6, #0]
 802110c:	f003 0306 	and.w	r3, r3, #6
 8021110:	2b04      	cmp	r3, #4
 8021112:	bf08      	it	eq
 8021114:	1aad      	subeq	r5, r5, r2
 8021116:	68a3      	ldr	r3, [r4, #8]
 8021118:	6922      	ldr	r2, [r4, #16]
 802111a:	bf0c      	ite	eq
 802111c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8021120:	2500      	movne	r5, #0
 8021122:	4293      	cmp	r3, r2
 8021124:	bfc4      	itt	gt
 8021126:	1a9b      	subgt	r3, r3, r2
 8021128:	18ed      	addgt	r5, r5, r3
 802112a:	2600      	movs	r6, #0
 802112c:	341a      	adds	r4, #26
 802112e:	42b5      	cmp	r5, r6
 8021130:	d11a      	bne.n	8021168 <_printf_common+0xc8>
 8021132:	2000      	movs	r0, #0
 8021134:	e008      	b.n	8021148 <_printf_common+0xa8>
 8021136:	2301      	movs	r3, #1
 8021138:	4652      	mov	r2, sl
 802113a:	4649      	mov	r1, r9
 802113c:	4638      	mov	r0, r7
 802113e:	47c0      	blx	r8
 8021140:	3001      	adds	r0, #1
 8021142:	d103      	bne.n	802114c <_printf_common+0xac>
 8021144:	f04f 30ff 	mov.w	r0, #4294967295
 8021148:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802114c:	3501      	adds	r5, #1
 802114e:	e7c6      	b.n	80210de <_printf_common+0x3e>
 8021150:	18e1      	adds	r1, r4, r3
 8021152:	1c5a      	adds	r2, r3, #1
 8021154:	2030      	movs	r0, #48	; 0x30
 8021156:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 802115a:	4422      	add	r2, r4
 802115c:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8021160:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8021164:	3302      	adds	r3, #2
 8021166:	e7c7      	b.n	80210f8 <_printf_common+0x58>
 8021168:	2301      	movs	r3, #1
 802116a:	4622      	mov	r2, r4
 802116c:	4649      	mov	r1, r9
 802116e:	4638      	mov	r0, r7
 8021170:	47c0      	blx	r8
 8021172:	3001      	adds	r0, #1
 8021174:	d0e6      	beq.n	8021144 <_printf_common+0xa4>
 8021176:	3601      	adds	r6, #1
 8021178:	e7d9      	b.n	802112e <_printf_common+0x8e>
	...

0802117c <_printf_i>:
 802117c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8021180:	7e0f      	ldrb	r7, [r1, #24]
 8021182:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8021184:	2f78      	cmp	r7, #120	; 0x78
 8021186:	4691      	mov	r9, r2
 8021188:	4680      	mov	r8, r0
 802118a:	460c      	mov	r4, r1
 802118c:	469a      	mov	sl, r3
 802118e:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8021192:	d807      	bhi.n	80211a4 <_printf_i+0x28>
 8021194:	2f62      	cmp	r7, #98	; 0x62
 8021196:	d80a      	bhi.n	80211ae <_printf_i+0x32>
 8021198:	2f00      	cmp	r7, #0
 802119a:	f000 80d8 	beq.w	802134e <_printf_i+0x1d2>
 802119e:	2f58      	cmp	r7, #88	; 0x58
 80211a0:	f000 80a3 	beq.w	80212ea <_printf_i+0x16e>
 80211a4:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80211a8:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 80211ac:	e03a      	b.n	8021224 <_printf_i+0xa8>
 80211ae:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 80211b2:	2b15      	cmp	r3, #21
 80211b4:	d8f6      	bhi.n	80211a4 <_printf_i+0x28>
 80211b6:	a101      	add	r1, pc, #4	; (adr r1, 80211bc <_printf_i+0x40>)
 80211b8:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 80211bc:	08021215 	.word	0x08021215
 80211c0:	08021229 	.word	0x08021229
 80211c4:	080211a5 	.word	0x080211a5
 80211c8:	080211a5 	.word	0x080211a5
 80211cc:	080211a5 	.word	0x080211a5
 80211d0:	080211a5 	.word	0x080211a5
 80211d4:	08021229 	.word	0x08021229
 80211d8:	080211a5 	.word	0x080211a5
 80211dc:	080211a5 	.word	0x080211a5
 80211e0:	080211a5 	.word	0x080211a5
 80211e4:	080211a5 	.word	0x080211a5
 80211e8:	08021335 	.word	0x08021335
 80211ec:	08021259 	.word	0x08021259
 80211f0:	08021317 	.word	0x08021317
 80211f4:	080211a5 	.word	0x080211a5
 80211f8:	080211a5 	.word	0x080211a5
 80211fc:	08021357 	.word	0x08021357
 8021200:	080211a5 	.word	0x080211a5
 8021204:	08021259 	.word	0x08021259
 8021208:	080211a5 	.word	0x080211a5
 802120c:	080211a5 	.word	0x080211a5
 8021210:	0802131f 	.word	0x0802131f
 8021214:	682b      	ldr	r3, [r5, #0]
 8021216:	1d1a      	adds	r2, r3, #4
 8021218:	681b      	ldr	r3, [r3, #0]
 802121a:	602a      	str	r2, [r5, #0]
 802121c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8021220:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8021224:	2301      	movs	r3, #1
 8021226:	e0a3      	b.n	8021370 <_printf_i+0x1f4>
 8021228:	6820      	ldr	r0, [r4, #0]
 802122a:	6829      	ldr	r1, [r5, #0]
 802122c:	0606      	lsls	r6, r0, #24
 802122e:	f101 0304 	add.w	r3, r1, #4
 8021232:	d50a      	bpl.n	802124a <_printf_i+0xce>
 8021234:	680e      	ldr	r6, [r1, #0]
 8021236:	602b      	str	r3, [r5, #0]
 8021238:	2e00      	cmp	r6, #0
 802123a:	da03      	bge.n	8021244 <_printf_i+0xc8>
 802123c:	232d      	movs	r3, #45	; 0x2d
 802123e:	4276      	negs	r6, r6
 8021240:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8021244:	485e      	ldr	r0, [pc, #376]	; (80213c0 <_printf_i+0x244>)
 8021246:	230a      	movs	r3, #10
 8021248:	e019      	b.n	802127e <_printf_i+0x102>
 802124a:	680e      	ldr	r6, [r1, #0]
 802124c:	602b      	str	r3, [r5, #0]
 802124e:	f010 0f40 	tst.w	r0, #64	; 0x40
 8021252:	bf18      	it	ne
 8021254:	b236      	sxthne	r6, r6
 8021256:	e7ef      	b.n	8021238 <_printf_i+0xbc>
 8021258:	682b      	ldr	r3, [r5, #0]
 802125a:	6820      	ldr	r0, [r4, #0]
 802125c:	1d19      	adds	r1, r3, #4
 802125e:	6029      	str	r1, [r5, #0]
 8021260:	0601      	lsls	r1, r0, #24
 8021262:	d501      	bpl.n	8021268 <_printf_i+0xec>
 8021264:	681e      	ldr	r6, [r3, #0]
 8021266:	e002      	b.n	802126e <_printf_i+0xf2>
 8021268:	0646      	lsls	r6, r0, #25
 802126a:	d5fb      	bpl.n	8021264 <_printf_i+0xe8>
 802126c:	881e      	ldrh	r6, [r3, #0]
 802126e:	4854      	ldr	r0, [pc, #336]	; (80213c0 <_printf_i+0x244>)
 8021270:	2f6f      	cmp	r7, #111	; 0x6f
 8021272:	bf0c      	ite	eq
 8021274:	2308      	moveq	r3, #8
 8021276:	230a      	movne	r3, #10
 8021278:	2100      	movs	r1, #0
 802127a:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 802127e:	6865      	ldr	r5, [r4, #4]
 8021280:	60a5      	str	r5, [r4, #8]
 8021282:	2d00      	cmp	r5, #0
 8021284:	bfa2      	ittt	ge
 8021286:	6821      	ldrge	r1, [r4, #0]
 8021288:	f021 0104 	bicge.w	r1, r1, #4
 802128c:	6021      	strge	r1, [r4, #0]
 802128e:	b90e      	cbnz	r6, 8021294 <_printf_i+0x118>
 8021290:	2d00      	cmp	r5, #0
 8021292:	d04d      	beq.n	8021330 <_printf_i+0x1b4>
 8021294:	4615      	mov	r5, r2
 8021296:	fbb6 f1f3 	udiv	r1, r6, r3
 802129a:	fb03 6711 	mls	r7, r3, r1, r6
 802129e:	5dc7      	ldrb	r7, [r0, r7]
 80212a0:	f805 7d01 	strb.w	r7, [r5, #-1]!
 80212a4:	4637      	mov	r7, r6
 80212a6:	42bb      	cmp	r3, r7
 80212a8:	460e      	mov	r6, r1
 80212aa:	d9f4      	bls.n	8021296 <_printf_i+0x11a>
 80212ac:	2b08      	cmp	r3, #8
 80212ae:	d10b      	bne.n	80212c8 <_printf_i+0x14c>
 80212b0:	6823      	ldr	r3, [r4, #0]
 80212b2:	07de      	lsls	r6, r3, #31
 80212b4:	d508      	bpl.n	80212c8 <_printf_i+0x14c>
 80212b6:	6923      	ldr	r3, [r4, #16]
 80212b8:	6861      	ldr	r1, [r4, #4]
 80212ba:	4299      	cmp	r1, r3
 80212bc:	bfde      	ittt	le
 80212be:	2330      	movle	r3, #48	; 0x30
 80212c0:	f805 3c01 	strble.w	r3, [r5, #-1]
 80212c4:	f105 35ff 	addle.w	r5, r5, #4294967295
 80212c8:	1b52      	subs	r2, r2, r5
 80212ca:	6122      	str	r2, [r4, #16]
 80212cc:	f8cd a000 	str.w	sl, [sp]
 80212d0:	464b      	mov	r3, r9
 80212d2:	aa03      	add	r2, sp, #12
 80212d4:	4621      	mov	r1, r4
 80212d6:	4640      	mov	r0, r8
 80212d8:	f7ff fee2 	bl	80210a0 <_printf_common>
 80212dc:	3001      	adds	r0, #1
 80212de:	d14c      	bne.n	802137a <_printf_i+0x1fe>
 80212e0:	f04f 30ff 	mov.w	r0, #4294967295
 80212e4:	b004      	add	sp, #16
 80212e6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80212ea:	4835      	ldr	r0, [pc, #212]	; (80213c0 <_printf_i+0x244>)
 80212ec:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 80212f0:	6829      	ldr	r1, [r5, #0]
 80212f2:	6823      	ldr	r3, [r4, #0]
 80212f4:	f851 6b04 	ldr.w	r6, [r1], #4
 80212f8:	6029      	str	r1, [r5, #0]
 80212fa:	061d      	lsls	r5, r3, #24
 80212fc:	d514      	bpl.n	8021328 <_printf_i+0x1ac>
 80212fe:	07df      	lsls	r7, r3, #31
 8021300:	bf44      	itt	mi
 8021302:	f043 0320 	orrmi.w	r3, r3, #32
 8021306:	6023      	strmi	r3, [r4, #0]
 8021308:	b91e      	cbnz	r6, 8021312 <_printf_i+0x196>
 802130a:	6823      	ldr	r3, [r4, #0]
 802130c:	f023 0320 	bic.w	r3, r3, #32
 8021310:	6023      	str	r3, [r4, #0]
 8021312:	2310      	movs	r3, #16
 8021314:	e7b0      	b.n	8021278 <_printf_i+0xfc>
 8021316:	6823      	ldr	r3, [r4, #0]
 8021318:	f043 0320 	orr.w	r3, r3, #32
 802131c:	6023      	str	r3, [r4, #0]
 802131e:	2378      	movs	r3, #120	; 0x78
 8021320:	4828      	ldr	r0, [pc, #160]	; (80213c4 <_printf_i+0x248>)
 8021322:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8021326:	e7e3      	b.n	80212f0 <_printf_i+0x174>
 8021328:	0659      	lsls	r1, r3, #25
 802132a:	bf48      	it	mi
 802132c:	b2b6      	uxthmi	r6, r6
 802132e:	e7e6      	b.n	80212fe <_printf_i+0x182>
 8021330:	4615      	mov	r5, r2
 8021332:	e7bb      	b.n	80212ac <_printf_i+0x130>
 8021334:	682b      	ldr	r3, [r5, #0]
 8021336:	6826      	ldr	r6, [r4, #0]
 8021338:	6961      	ldr	r1, [r4, #20]
 802133a:	1d18      	adds	r0, r3, #4
 802133c:	6028      	str	r0, [r5, #0]
 802133e:	0635      	lsls	r5, r6, #24
 8021340:	681b      	ldr	r3, [r3, #0]
 8021342:	d501      	bpl.n	8021348 <_printf_i+0x1cc>
 8021344:	6019      	str	r1, [r3, #0]
 8021346:	e002      	b.n	802134e <_printf_i+0x1d2>
 8021348:	0670      	lsls	r0, r6, #25
 802134a:	d5fb      	bpl.n	8021344 <_printf_i+0x1c8>
 802134c:	8019      	strh	r1, [r3, #0]
 802134e:	2300      	movs	r3, #0
 8021350:	6123      	str	r3, [r4, #16]
 8021352:	4615      	mov	r5, r2
 8021354:	e7ba      	b.n	80212cc <_printf_i+0x150>
 8021356:	682b      	ldr	r3, [r5, #0]
 8021358:	1d1a      	adds	r2, r3, #4
 802135a:	602a      	str	r2, [r5, #0]
 802135c:	681d      	ldr	r5, [r3, #0]
 802135e:	6862      	ldr	r2, [r4, #4]
 8021360:	2100      	movs	r1, #0
 8021362:	4628      	mov	r0, r5
 8021364:	f7de ff44 	bl	80001f0 <memchr>
 8021368:	b108      	cbz	r0, 802136e <_printf_i+0x1f2>
 802136a:	1b40      	subs	r0, r0, r5
 802136c:	6060      	str	r0, [r4, #4]
 802136e:	6863      	ldr	r3, [r4, #4]
 8021370:	6123      	str	r3, [r4, #16]
 8021372:	2300      	movs	r3, #0
 8021374:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8021378:	e7a8      	b.n	80212cc <_printf_i+0x150>
 802137a:	6923      	ldr	r3, [r4, #16]
 802137c:	462a      	mov	r2, r5
 802137e:	4649      	mov	r1, r9
 8021380:	4640      	mov	r0, r8
 8021382:	47d0      	blx	sl
 8021384:	3001      	adds	r0, #1
 8021386:	d0ab      	beq.n	80212e0 <_printf_i+0x164>
 8021388:	6823      	ldr	r3, [r4, #0]
 802138a:	079b      	lsls	r3, r3, #30
 802138c:	d413      	bmi.n	80213b6 <_printf_i+0x23a>
 802138e:	68e0      	ldr	r0, [r4, #12]
 8021390:	9b03      	ldr	r3, [sp, #12]
 8021392:	4298      	cmp	r0, r3
 8021394:	bfb8      	it	lt
 8021396:	4618      	movlt	r0, r3
 8021398:	e7a4      	b.n	80212e4 <_printf_i+0x168>
 802139a:	2301      	movs	r3, #1
 802139c:	4632      	mov	r2, r6
 802139e:	4649      	mov	r1, r9
 80213a0:	4640      	mov	r0, r8
 80213a2:	47d0      	blx	sl
 80213a4:	3001      	adds	r0, #1
 80213a6:	d09b      	beq.n	80212e0 <_printf_i+0x164>
 80213a8:	3501      	adds	r5, #1
 80213aa:	68e3      	ldr	r3, [r4, #12]
 80213ac:	9903      	ldr	r1, [sp, #12]
 80213ae:	1a5b      	subs	r3, r3, r1
 80213b0:	42ab      	cmp	r3, r5
 80213b2:	dcf2      	bgt.n	802139a <_printf_i+0x21e>
 80213b4:	e7eb      	b.n	802138e <_printf_i+0x212>
 80213b6:	2500      	movs	r5, #0
 80213b8:	f104 0619 	add.w	r6, r4, #25
 80213bc:	e7f5      	b.n	80213aa <_printf_i+0x22e>
 80213be:	bf00      	nop
 80213c0:	0802480d 	.word	0x0802480d
 80213c4:	0802481e 	.word	0x0802481e

080213c8 <cleanup_glue>:
 80213c8:	b538      	push	{r3, r4, r5, lr}
 80213ca:	460c      	mov	r4, r1
 80213cc:	6809      	ldr	r1, [r1, #0]
 80213ce:	4605      	mov	r5, r0
 80213d0:	b109      	cbz	r1, 80213d6 <cleanup_glue+0xe>
 80213d2:	f7ff fff9 	bl	80213c8 <cleanup_glue>
 80213d6:	4621      	mov	r1, r4
 80213d8:	4628      	mov	r0, r5
 80213da:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80213de:	f7ff bc25 	b.w	8020c2c <_free_r>
	...

080213e4 <_reclaim_reent>:
 80213e4:	4b2c      	ldr	r3, [pc, #176]	; (8021498 <_reclaim_reent+0xb4>)
 80213e6:	681b      	ldr	r3, [r3, #0]
 80213e8:	4283      	cmp	r3, r0
 80213ea:	b570      	push	{r4, r5, r6, lr}
 80213ec:	4604      	mov	r4, r0
 80213ee:	d051      	beq.n	8021494 <_reclaim_reent+0xb0>
 80213f0:	6a43      	ldr	r3, [r0, #36]	; 0x24
 80213f2:	b143      	cbz	r3, 8021406 <_reclaim_reent+0x22>
 80213f4:	68db      	ldr	r3, [r3, #12]
 80213f6:	2b00      	cmp	r3, #0
 80213f8:	d14a      	bne.n	8021490 <_reclaim_reent+0xac>
 80213fa:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80213fc:	6819      	ldr	r1, [r3, #0]
 80213fe:	b111      	cbz	r1, 8021406 <_reclaim_reent+0x22>
 8021400:	4620      	mov	r0, r4
 8021402:	f7ff fc13 	bl	8020c2c <_free_r>
 8021406:	6961      	ldr	r1, [r4, #20]
 8021408:	b111      	cbz	r1, 8021410 <_reclaim_reent+0x2c>
 802140a:	4620      	mov	r0, r4
 802140c:	f7ff fc0e 	bl	8020c2c <_free_r>
 8021410:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8021412:	b111      	cbz	r1, 802141a <_reclaim_reent+0x36>
 8021414:	4620      	mov	r0, r4
 8021416:	f7ff fc09 	bl	8020c2c <_free_r>
 802141a:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 802141c:	b111      	cbz	r1, 8021424 <_reclaim_reent+0x40>
 802141e:	4620      	mov	r0, r4
 8021420:	f7ff fc04 	bl	8020c2c <_free_r>
 8021424:	6be1      	ldr	r1, [r4, #60]	; 0x3c
 8021426:	b111      	cbz	r1, 802142e <_reclaim_reent+0x4a>
 8021428:	4620      	mov	r0, r4
 802142a:	f7ff fbff 	bl	8020c2c <_free_r>
 802142e:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8021430:	b111      	cbz	r1, 8021438 <_reclaim_reent+0x54>
 8021432:	4620      	mov	r0, r4
 8021434:	f7ff fbfa 	bl	8020c2c <_free_r>
 8021438:	6de1      	ldr	r1, [r4, #92]	; 0x5c
 802143a:	b111      	cbz	r1, 8021442 <_reclaim_reent+0x5e>
 802143c:	4620      	mov	r0, r4
 802143e:	f7ff fbf5 	bl	8020c2c <_free_r>
 8021442:	6da1      	ldr	r1, [r4, #88]	; 0x58
 8021444:	b111      	cbz	r1, 802144c <_reclaim_reent+0x68>
 8021446:	4620      	mov	r0, r4
 8021448:	f7ff fbf0 	bl	8020c2c <_free_r>
 802144c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802144e:	b111      	cbz	r1, 8021456 <_reclaim_reent+0x72>
 8021450:	4620      	mov	r0, r4
 8021452:	f7ff fbeb 	bl	8020c2c <_free_r>
 8021456:	69a3      	ldr	r3, [r4, #24]
 8021458:	b1e3      	cbz	r3, 8021494 <_reclaim_reent+0xb0>
 802145a:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 802145c:	4620      	mov	r0, r4
 802145e:	4798      	blx	r3
 8021460:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8021462:	b1b9      	cbz	r1, 8021494 <_reclaim_reent+0xb0>
 8021464:	4620      	mov	r0, r4
 8021466:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 802146a:	f7ff bfad 	b.w	80213c8 <cleanup_glue>
 802146e:	5949      	ldr	r1, [r1, r5]
 8021470:	b941      	cbnz	r1, 8021484 <_reclaim_reent+0xa0>
 8021472:	3504      	adds	r5, #4
 8021474:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8021476:	2d80      	cmp	r5, #128	; 0x80
 8021478:	68d9      	ldr	r1, [r3, #12]
 802147a:	d1f8      	bne.n	802146e <_reclaim_reent+0x8a>
 802147c:	4620      	mov	r0, r4
 802147e:	f7ff fbd5 	bl	8020c2c <_free_r>
 8021482:	e7ba      	b.n	80213fa <_reclaim_reent+0x16>
 8021484:	680e      	ldr	r6, [r1, #0]
 8021486:	4620      	mov	r0, r4
 8021488:	f7ff fbd0 	bl	8020c2c <_free_r>
 802148c:	4631      	mov	r1, r6
 802148e:	e7ef      	b.n	8021470 <_reclaim_reent+0x8c>
 8021490:	2500      	movs	r5, #0
 8021492:	e7ef      	b.n	8021474 <_reclaim_reent+0x90>
 8021494:	bd70      	pop	{r4, r5, r6, pc}
 8021496:	bf00      	nop
 8021498:	20000104 	.word	0x20000104

0802149c <_sbrk_r>:
 802149c:	b538      	push	{r3, r4, r5, lr}
 802149e:	4d06      	ldr	r5, [pc, #24]	; (80214b8 <_sbrk_r+0x1c>)
 80214a0:	2300      	movs	r3, #0
 80214a2:	4604      	mov	r4, r0
 80214a4:	4608      	mov	r0, r1
 80214a6:	602b      	str	r3, [r5, #0]
 80214a8:	f7e0 fee4 	bl	8002274 <_sbrk>
 80214ac:	1c43      	adds	r3, r0, #1
 80214ae:	d102      	bne.n	80214b6 <_sbrk_r+0x1a>
 80214b0:	682b      	ldr	r3, [r5, #0]
 80214b2:	b103      	cbz	r3, 80214b6 <_sbrk_r+0x1a>
 80214b4:	6023      	str	r3, [r4, #0]
 80214b6:	bd38      	pop	{r3, r4, r5, pc}
 80214b8:	2001581c 	.word	0x2001581c

080214bc <_raise_r>:
 80214bc:	291f      	cmp	r1, #31
 80214be:	b538      	push	{r3, r4, r5, lr}
 80214c0:	4604      	mov	r4, r0
 80214c2:	460d      	mov	r5, r1
 80214c4:	d904      	bls.n	80214d0 <_raise_r+0x14>
 80214c6:	2316      	movs	r3, #22
 80214c8:	6003      	str	r3, [r0, #0]
 80214ca:	f04f 30ff 	mov.w	r0, #4294967295
 80214ce:	bd38      	pop	{r3, r4, r5, pc}
 80214d0:	6c42      	ldr	r2, [r0, #68]	; 0x44
 80214d2:	b112      	cbz	r2, 80214da <_raise_r+0x1e>
 80214d4:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 80214d8:	b94b      	cbnz	r3, 80214ee <_raise_r+0x32>
 80214da:	4620      	mov	r0, r4
 80214dc:	f000 f830 	bl	8021540 <_getpid_r>
 80214e0:	462a      	mov	r2, r5
 80214e2:	4601      	mov	r1, r0
 80214e4:	4620      	mov	r0, r4
 80214e6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80214ea:	f000 b817 	b.w	802151c <_kill_r>
 80214ee:	2b01      	cmp	r3, #1
 80214f0:	d00a      	beq.n	8021508 <_raise_r+0x4c>
 80214f2:	1c59      	adds	r1, r3, #1
 80214f4:	d103      	bne.n	80214fe <_raise_r+0x42>
 80214f6:	2316      	movs	r3, #22
 80214f8:	6003      	str	r3, [r0, #0]
 80214fa:	2001      	movs	r0, #1
 80214fc:	e7e7      	b.n	80214ce <_raise_r+0x12>
 80214fe:	2400      	movs	r4, #0
 8021500:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 8021504:	4628      	mov	r0, r5
 8021506:	4798      	blx	r3
 8021508:	2000      	movs	r0, #0
 802150a:	e7e0      	b.n	80214ce <_raise_r+0x12>

0802150c <raise>:
 802150c:	4b02      	ldr	r3, [pc, #8]	; (8021518 <raise+0xc>)
 802150e:	4601      	mov	r1, r0
 8021510:	6818      	ldr	r0, [r3, #0]
 8021512:	f7ff bfd3 	b.w	80214bc <_raise_r>
 8021516:	bf00      	nop
 8021518:	20000104 	.word	0x20000104

0802151c <_kill_r>:
 802151c:	b538      	push	{r3, r4, r5, lr}
 802151e:	4d07      	ldr	r5, [pc, #28]	; (802153c <_kill_r+0x20>)
 8021520:	2300      	movs	r3, #0
 8021522:	4604      	mov	r4, r0
 8021524:	4608      	mov	r0, r1
 8021526:	4611      	mov	r1, r2
 8021528:	602b      	str	r3, [r5, #0]
 802152a:	f7e0 fe6d 	bl	8002208 <_kill>
 802152e:	1c43      	adds	r3, r0, #1
 8021530:	d102      	bne.n	8021538 <_kill_r+0x1c>
 8021532:	682b      	ldr	r3, [r5, #0]
 8021534:	b103      	cbz	r3, 8021538 <_kill_r+0x1c>
 8021536:	6023      	str	r3, [r4, #0]
 8021538:	bd38      	pop	{r3, r4, r5, pc}
 802153a:	bf00      	nop
 802153c:	2001581c 	.word	0x2001581c

08021540 <_getpid_r>:
 8021540:	f7e0 be60 	b.w	8002204 <_getpid>

08021544 <__sread>:
 8021544:	b510      	push	{r4, lr}
 8021546:	460c      	mov	r4, r1
 8021548:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802154c:	f000 fac8 	bl	8021ae0 <_read_r>
 8021550:	2800      	cmp	r0, #0
 8021552:	bfab      	itete	ge
 8021554:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8021556:	89a3      	ldrhlt	r3, [r4, #12]
 8021558:	181b      	addge	r3, r3, r0
 802155a:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 802155e:	bfac      	ite	ge
 8021560:	6563      	strge	r3, [r4, #84]	; 0x54
 8021562:	81a3      	strhlt	r3, [r4, #12]
 8021564:	bd10      	pop	{r4, pc}

08021566 <__swrite>:
 8021566:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802156a:	461f      	mov	r7, r3
 802156c:	898b      	ldrh	r3, [r1, #12]
 802156e:	05db      	lsls	r3, r3, #23
 8021570:	4605      	mov	r5, r0
 8021572:	460c      	mov	r4, r1
 8021574:	4616      	mov	r6, r2
 8021576:	d505      	bpl.n	8021584 <__swrite+0x1e>
 8021578:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802157c:	2302      	movs	r3, #2
 802157e:	2200      	movs	r2, #0
 8021580:	f000 fa2a 	bl	80219d8 <_lseek_r>
 8021584:	89a3      	ldrh	r3, [r4, #12]
 8021586:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802158a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 802158e:	81a3      	strh	r3, [r4, #12]
 8021590:	4632      	mov	r2, r6
 8021592:	463b      	mov	r3, r7
 8021594:	4628      	mov	r0, r5
 8021596:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802159a:	f000 b869 	b.w	8021670 <_write_r>

0802159e <__sseek>:
 802159e:	b510      	push	{r4, lr}
 80215a0:	460c      	mov	r4, r1
 80215a2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80215a6:	f000 fa17 	bl	80219d8 <_lseek_r>
 80215aa:	1c43      	adds	r3, r0, #1
 80215ac:	89a3      	ldrh	r3, [r4, #12]
 80215ae:	bf15      	itete	ne
 80215b0:	6560      	strne	r0, [r4, #84]	; 0x54
 80215b2:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 80215b6:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 80215ba:	81a3      	strheq	r3, [r4, #12]
 80215bc:	bf18      	it	ne
 80215be:	81a3      	strhne	r3, [r4, #12]
 80215c0:	bd10      	pop	{r4, pc}

080215c2 <__sclose>:
 80215c2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80215c6:	f000 b935 	b.w	8021834 <_close_r>
	...

080215cc <__swbuf_r>:
 80215cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80215ce:	460e      	mov	r6, r1
 80215d0:	4614      	mov	r4, r2
 80215d2:	4605      	mov	r5, r0
 80215d4:	b118      	cbz	r0, 80215de <__swbuf_r+0x12>
 80215d6:	6983      	ldr	r3, [r0, #24]
 80215d8:	b90b      	cbnz	r3, 80215de <__swbuf_r+0x12>
 80215da:	f7ff fa29 	bl	8020a30 <__sinit>
 80215de:	4b21      	ldr	r3, [pc, #132]	; (8021664 <__swbuf_r+0x98>)
 80215e0:	429c      	cmp	r4, r3
 80215e2:	d12b      	bne.n	802163c <__swbuf_r+0x70>
 80215e4:	686c      	ldr	r4, [r5, #4]
 80215e6:	69a3      	ldr	r3, [r4, #24]
 80215e8:	60a3      	str	r3, [r4, #8]
 80215ea:	89a3      	ldrh	r3, [r4, #12]
 80215ec:	071a      	lsls	r2, r3, #28
 80215ee:	d52f      	bpl.n	8021650 <__swbuf_r+0x84>
 80215f0:	6923      	ldr	r3, [r4, #16]
 80215f2:	b36b      	cbz	r3, 8021650 <__swbuf_r+0x84>
 80215f4:	6923      	ldr	r3, [r4, #16]
 80215f6:	6820      	ldr	r0, [r4, #0]
 80215f8:	1ac0      	subs	r0, r0, r3
 80215fa:	6963      	ldr	r3, [r4, #20]
 80215fc:	b2f6      	uxtb	r6, r6
 80215fe:	4283      	cmp	r3, r0
 8021600:	4637      	mov	r7, r6
 8021602:	dc04      	bgt.n	802160e <__swbuf_r+0x42>
 8021604:	4621      	mov	r1, r4
 8021606:	4628      	mov	r0, r5
 8021608:	f000 f9aa 	bl	8021960 <_fflush_r>
 802160c:	bb30      	cbnz	r0, 802165c <__swbuf_r+0x90>
 802160e:	68a3      	ldr	r3, [r4, #8]
 8021610:	3b01      	subs	r3, #1
 8021612:	60a3      	str	r3, [r4, #8]
 8021614:	6823      	ldr	r3, [r4, #0]
 8021616:	1c5a      	adds	r2, r3, #1
 8021618:	6022      	str	r2, [r4, #0]
 802161a:	701e      	strb	r6, [r3, #0]
 802161c:	6963      	ldr	r3, [r4, #20]
 802161e:	3001      	adds	r0, #1
 8021620:	4283      	cmp	r3, r0
 8021622:	d004      	beq.n	802162e <__swbuf_r+0x62>
 8021624:	89a3      	ldrh	r3, [r4, #12]
 8021626:	07db      	lsls	r3, r3, #31
 8021628:	d506      	bpl.n	8021638 <__swbuf_r+0x6c>
 802162a:	2e0a      	cmp	r6, #10
 802162c:	d104      	bne.n	8021638 <__swbuf_r+0x6c>
 802162e:	4621      	mov	r1, r4
 8021630:	4628      	mov	r0, r5
 8021632:	f000 f995 	bl	8021960 <_fflush_r>
 8021636:	b988      	cbnz	r0, 802165c <__swbuf_r+0x90>
 8021638:	4638      	mov	r0, r7
 802163a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 802163c:	4b0a      	ldr	r3, [pc, #40]	; (8021668 <__swbuf_r+0x9c>)
 802163e:	429c      	cmp	r4, r3
 8021640:	d101      	bne.n	8021646 <__swbuf_r+0x7a>
 8021642:	68ac      	ldr	r4, [r5, #8]
 8021644:	e7cf      	b.n	80215e6 <__swbuf_r+0x1a>
 8021646:	4b09      	ldr	r3, [pc, #36]	; (802166c <__swbuf_r+0xa0>)
 8021648:	429c      	cmp	r4, r3
 802164a:	bf08      	it	eq
 802164c:	68ec      	ldreq	r4, [r5, #12]
 802164e:	e7ca      	b.n	80215e6 <__swbuf_r+0x1a>
 8021650:	4621      	mov	r1, r4
 8021652:	4628      	mov	r0, r5
 8021654:	f000 f81e 	bl	8021694 <__swsetup_r>
 8021658:	2800      	cmp	r0, #0
 802165a:	d0cb      	beq.n	80215f4 <__swbuf_r+0x28>
 802165c:	f04f 37ff 	mov.w	r7, #4294967295
 8021660:	e7ea      	b.n	8021638 <__swbuf_r+0x6c>
 8021662:	bf00      	nop
 8021664:	080247b8 	.word	0x080247b8
 8021668:	080247d8 	.word	0x080247d8
 802166c:	08024798 	.word	0x08024798

08021670 <_write_r>:
 8021670:	b538      	push	{r3, r4, r5, lr}
 8021672:	4d07      	ldr	r5, [pc, #28]	; (8021690 <_write_r+0x20>)
 8021674:	4604      	mov	r4, r0
 8021676:	4608      	mov	r0, r1
 8021678:	4611      	mov	r1, r2
 802167a:	2200      	movs	r2, #0
 802167c:	602a      	str	r2, [r5, #0]
 802167e:	461a      	mov	r2, r3
 8021680:	f7e0 fdde 	bl	8002240 <_write>
 8021684:	1c43      	adds	r3, r0, #1
 8021686:	d102      	bne.n	802168e <_write_r+0x1e>
 8021688:	682b      	ldr	r3, [r5, #0]
 802168a:	b103      	cbz	r3, 802168e <_write_r+0x1e>
 802168c:	6023      	str	r3, [r4, #0]
 802168e:	bd38      	pop	{r3, r4, r5, pc}
 8021690:	2001581c 	.word	0x2001581c

08021694 <__swsetup_r>:
 8021694:	4b32      	ldr	r3, [pc, #200]	; (8021760 <__swsetup_r+0xcc>)
 8021696:	b570      	push	{r4, r5, r6, lr}
 8021698:	681d      	ldr	r5, [r3, #0]
 802169a:	4606      	mov	r6, r0
 802169c:	460c      	mov	r4, r1
 802169e:	b125      	cbz	r5, 80216aa <__swsetup_r+0x16>
 80216a0:	69ab      	ldr	r3, [r5, #24]
 80216a2:	b913      	cbnz	r3, 80216aa <__swsetup_r+0x16>
 80216a4:	4628      	mov	r0, r5
 80216a6:	f7ff f9c3 	bl	8020a30 <__sinit>
 80216aa:	4b2e      	ldr	r3, [pc, #184]	; (8021764 <__swsetup_r+0xd0>)
 80216ac:	429c      	cmp	r4, r3
 80216ae:	d10f      	bne.n	80216d0 <__swsetup_r+0x3c>
 80216b0:	686c      	ldr	r4, [r5, #4]
 80216b2:	89a3      	ldrh	r3, [r4, #12]
 80216b4:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80216b8:	0719      	lsls	r1, r3, #28
 80216ba:	d42c      	bmi.n	8021716 <__swsetup_r+0x82>
 80216bc:	06dd      	lsls	r5, r3, #27
 80216be:	d411      	bmi.n	80216e4 <__swsetup_r+0x50>
 80216c0:	2309      	movs	r3, #9
 80216c2:	6033      	str	r3, [r6, #0]
 80216c4:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 80216c8:	81a3      	strh	r3, [r4, #12]
 80216ca:	f04f 30ff 	mov.w	r0, #4294967295
 80216ce:	e03e      	b.n	802174e <__swsetup_r+0xba>
 80216d0:	4b25      	ldr	r3, [pc, #148]	; (8021768 <__swsetup_r+0xd4>)
 80216d2:	429c      	cmp	r4, r3
 80216d4:	d101      	bne.n	80216da <__swsetup_r+0x46>
 80216d6:	68ac      	ldr	r4, [r5, #8]
 80216d8:	e7eb      	b.n	80216b2 <__swsetup_r+0x1e>
 80216da:	4b24      	ldr	r3, [pc, #144]	; (802176c <__swsetup_r+0xd8>)
 80216dc:	429c      	cmp	r4, r3
 80216de:	bf08      	it	eq
 80216e0:	68ec      	ldreq	r4, [r5, #12]
 80216e2:	e7e6      	b.n	80216b2 <__swsetup_r+0x1e>
 80216e4:	0758      	lsls	r0, r3, #29
 80216e6:	d512      	bpl.n	802170e <__swsetup_r+0x7a>
 80216e8:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80216ea:	b141      	cbz	r1, 80216fe <__swsetup_r+0x6a>
 80216ec:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80216f0:	4299      	cmp	r1, r3
 80216f2:	d002      	beq.n	80216fa <__swsetup_r+0x66>
 80216f4:	4630      	mov	r0, r6
 80216f6:	f7ff fa99 	bl	8020c2c <_free_r>
 80216fa:	2300      	movs	r3, #0
 80216fc:	6363      	str	r3, [r4, #52]	; 0x34
 80216fe:	89a3      	ldrh	r3, [r4, #12]
 8021700:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8021704:	81a3      	strh	r3, [r4, #12]
 8021706:	2300      	movs	r3, #0
 8021708:	6063      	str	r3, [r4, #4]
 802170a:	6923      	ldr	r3, [r4, #16]
 802170c:	6023      	str	r3, [r4, #0]
 802170e:	89a3      	ldrh	r3, [r4, #12]
 8021710:	f043 0308 	orr.w	r3, r3, #8
 8021714:	81a3      	strh	r3, [r4, #12]
 8021716:	6923      	ldr	r3, [r4, #16]
 8021718:	b94b      	cbnz	r3, 802172e <__swsetup_r+0x9a>
 802171a:	89a3      	ldrh	r3, [r4, #12]
 802171c:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8021720:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8021724:	d003      	beq.n	802172e <__swsetup_r+0x9a>
 8021726:	4621      	mov	r1, r4
 8021728:	4630      	mov	r0, r6
 802172a:	f000 f98d 	bl	8021a48 <__smakebuf_r>
 802172e:	89a0      	ldrh	r0, [r4, #12]
 8021730:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8021734:	f010 0301 	ands.w	r3, r0, #1
 8021738:	d00a      	beq.n	8021750 <__swsetup_r+0xbc>
 802173a:	2300      	movs	r3, #0
 802173c:	60a3      	str	r3, [r4, #8]
 802173e:	6963      	ldr	r3, [r4, #20]
 8021740:	425b      	negs	r3, r3
 8021742:	61a3      	str	r3, [r4, #24]
 8021744:	6923      	ldr	r3, [r4, #16]
 8021746:	b943      	cbnz	r3, 802175a <__swsetup_r+0xc6>
 8021748:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 802174c:	d1ba      	bne.n	80216c4 <__swsetup_r+0x30>
 802174e:	bd70      	pop	{r4, r5, r6, pc}
 8021750:	0781      	lsls	r1, r0, #30
 8021752:	bf58      	it	pl
 8021754:	6963      	ldrpl	r3, [r4, #20]
 8021756:	60a3      	str	r3, [r4, #8]
 8021758:	e7f4      	b.n	8021744 <__swsetup_r+0xb0>
 802175a:	2000      	movs	r0, #0
 802175c:	e7f7      	b.n	802174e <__swsetup_r+0xba>
 802175e:	bf00      	nop
 8021760:	20000104 	.word	0x20000104
 8021764:	080247b8 	.word	0x080247b8
 8021768:	080247d8 	.word	0x080247d8
 802176c:	08024798 	.word	0x08024798

08021770 <__register_exitproc>:
 8021770:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8021774:	f8df 80b8 	ldr.w	r8, [pc, #184]	; 8021830 <__register_exitproc+0xc0>
 8021778:	4606      	mov	r6, r0
 802177a:	f8d8 0000 	ldr.w	r0, [r8]
 802177e:	461f      	mov	r7, r3
 8021780:	460d      	mov	r5, r1
 8021782:	4691      	mov	r9, r2
 8021784:	f7ff fa29 	bl	8020bda <__retarget_lock_acquire_recursive>
 8021788:	4b25      	ldr	r3, [pc, #148]	; (8021820 <__register_exitproc+0xb0>)
 802178a:	681c      	ldr	r4, [r3, #0]
 802178c:	b934      	cbnz	r4, 802179c <__register_exitproc+0x2c>
 802178e:	4c25      	ldr	r4, [pc, #148]	; (8021824 <__register_exitproc+0xb4>)
 8021790:	601c      	str	r4, [r3, #0]
 8021792:	4b25      	ldr	r3, [pc, #148]	; (8021828 <__register_exitproc+0xb8>)
 8021794:	b113      	cbz	r3, 802179c <__register_exitproc+0x2c>
 8021796:	681b      	ldr	r3, [r3, #0]
 8021798:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 802179c:	6863      	ldr	r3, [r4, #4]
 802179e:	2b1f      	cmp	r3, #31
 80217a0:	dd07      	ble.n	80217b2 <__register_exitproc+0x42>
 80217a2:	f8d8 0000 	ldr.w	r0, [r8]
 80217a6:	f7ff fa1a 	bl	8020bde <__retarget_lock_release_recursive>
 80217aa:	f04f 30ff 	mov.w	r0, #4294967295
 80217ae:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80217b2:	b34e      	cbz	r6, 8021808 <__register_exitproc+0x98>
 80217b4:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 80217b8:	b988      	cbnz	r0, 80217de <__register_exitproc+0x6e>
 80217ba:	4b1c      	ldr	r3, [pc, #112]	; (802182c <__register_exitproc+0xbc>)
 80217bc:	b923      	cbnz	r3, 80217c8 <__register_exitproc+0x58>
 80217be:	f8d8 0000 	ldr.w	r0, [r8]
 80217c2:	f7ff fa0b 	bl	8020bdc <__retarget_lock_release>
 80217c6:	e7f0      	b.n	80217aa <__register_exitproc+0x3a>
 80217c8:	f44f 7084 	mov.w	r0, #264	; 0x108
 80217cc:	f7ff fa08 	bl	8020be0 <malloc>
 80217d0:	2800      	cmp	r0, #0
 80217d2:	d0f4      	beq.n	80217be <__register_exitproc+0x4e>
 80217d4:	2300      	movs	r3, #0
 80217d6:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 80217da:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 80217de:	6863      	ldr	r3, [r4, #4]
 80217e0:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 80217e4:	2201      	movs	r2, #1
 80217e6:	409a      	lsls	r2, r3
 80217e8:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 80217ec:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 80217f0:	4313      	orrs	r3, r2
 80217f2:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 80217f6:	2e02      	cmp	r6, #2
 80217f8:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 80217fc:	bf02      	ittt	eq
 80217fe:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 8021802:	4313      	orreq	r3, r2
 8021804:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 8021808:	6863      	ldr	r3, [r4, #4]
 802180a:	f8d8 0000 	ldr.w	r0, [r8]
 802180e:	1c5a      	adds	r2, r3, #1
 8021810:	3302      	adds	r3, #2
 8021812:	6062      	str	r2, [r4, #4]
 8021814:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 8021818:	f7ff f9e1 	bl	8020bde <__retarget_lock_release_recursive>
 802181c:	2000      	movs	r0, #0
 802181e:	e7c6      	b.n	80217ae <__register_exitproc+0x3e>
 8021820:	200158ac 	.word	0x200158ac
 8021824:	20015820 	.word	0x20015820
 8021828:	08024830 	.word	0x08024830
 802182c:	08020be1 	.word	0x08020be1
 8021830:	20000168 	.word	0x20000168

08021834 <_close_r>:
 8021834:	b538      	push	{r3, r4, r5, lr}
 8021836:	4d06      	ldr	r5, [pc, #24]	; (8021850 <_close_r+0x1c>)
 8021838:	2300      	movs	r3, #0
 802183a:	4604      	mov	r4, r0
 802183c:	4608      	mov	r0, r1
 802183e:	602b      	str	r3, [r5, #0]
 8021840:	f7e0 fd0c 	bl	800225c <_close>
 8021844:	1c43      	adds	r3, r0, #1
 8021846:	d102      	bne.n	802184e <_close_r+0x1a>
 8021848:	682b      	ldr	r3, [r5, #0]
 802184a:	b103      	cbz	r3, 802184e <_close_r+0x1a>
 802184c:	6023      	str	r3, [r4, #0]
 802184e:	bd38      	pop	{r3, r4, r5, pc}
 8021850:	2001581c 	.word	0x2001581c

08021854 <__sflush_r>:
 8021854:	898a      	ldrh	r2, [r1, #12]
 8021856:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802185a:	4605      	mov	r5, r0
 802185c:	0710      	lsls	r0, r2, #28
 802185e:	460c      	mov	r4, r1
 8021860:	d458      	bmi.n	8021914 <__sflush_r+0xc0>
 8021862:	684b      	ldr	r3, [r1, #4]
 8021864:	2b00      	cmp	r3, #0
 8021866:	dc05      	bgt.n	8021874 <__sflush_r+0x20>
 8021868:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 802186a:	2b00      	cmp	r3, #0
 802186c:	dc02      	bgt.n	8021874 <__sflush_r+0x20>
 802186e:	2000      	movs	r0, #0
 8021870:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8021874:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8021876:	2e00      	cmp	r6, #0
 8021878:	d0f9      	beq.n	802186e <__sflush_r+0x1a>
 802187a:	2300      	movs	r3, #0
 802187c:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8021880:	682f      	ldr	r7, [r5, #0]
 8021882:	602b      	str	r3, [r5, #0]
 8021884:	d032      	beq.n	80218ec <__sflush_r+0x98>
 8021886:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8021888:	89a3      	ldrh	r3, [r4, #12]
 802188a:	075a      	lsls	r2, r3, #29
 802188c:	d505      	bpl.n	802189a <__sflush_r+0x46>
 802188e:	6863      	ldr	r3, [r4, #4]
 8021890:	1ac0      	subs	r0, r0, r3
 8021892:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8021894:	b10b      	cbz	r3, 802189a <__sflush_r+0x46>
 8021896:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8021898:	1ac0      	subs	r0, r0, r3
 802189a:	2300      	movs	r3, #0
 802189c:	4602      	mov	r2, r0
 802189e:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80218a0:	6a21      	ldr	r1, [r4, #32]
 80218a2:	4628      	mov	r0, r5
 80218a4:	47b0      	blx	r6
 80218a6:	1c43      	adds	r3, r0, #1
 80218a8:	89a3      	ldrh	r3, [r4, #12]
 80218aa:	d106      	bne.n	80218ba <__sflush_r+0x66>
 80218ac:	6829      	ldr	r1, [r5, #0]
 80218ae:	291d      	cmp	r1, #29
 80218b0:	d82c      	bhi.n	802190c <__sflush_r+0xb8>
 80218b2:	4a2a      	ldr	r2, [pc, #168]	; (802195c <__sflush_r+0x108>)
 80218b4:	40ca      	lsrs	r2, r1
 80218b6:	07d6      	lsls	r6, r2, #31
 80218b8:	d528      	bpl.n	802190c <__sflush_r+0xb8>
 80218ba:	2200      	movs	r2, #0
 80218bc:	6062      	str	r2, [r4, #4]
 80218be:	04d9      	lsls	r1, r3, #19
 80218c0:	6922      	ldr	r2, [r4, #16]
 80218c2:	6022      	str	r2, [r4, #0]
 80218c4:	d504      	bpl.n	80218d0 <__sflush_r+0x7c>
 80218c6:	1c42      	adds	r2, r0, #1
 80218c8:	d101      	bne.n	80218ce <__sflush_r+0x7a>
 80218ca:	682b      	ldr	r3, [r5, #0]
 80218cc:	b903      	cbnz	r3, 80218d0 <__sflush_r+0x7c>
 80218ce:	6560      	str	r0, [r4, #84]	; 0x54
 80218d0:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80218d2:	602f      	str	r7, [r5, #0]
 80218d4:	2900      	cmp	r1, #0
 80218d6:	d0ca      	beq.n	802186e <__sflush_r+0x1a>
 80218d8:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80218dc:	4299      	cmp	r1, r3
 80218de:	d002      	beq.n	80218e6 <__sflush_r+0x92>
 80218e0:	4628      	mov	r0, r5
 80218e2:	f7ff f9a3 	bl	8020c2c <_free_r>
 80218e6:	2000      	movs	r0, #0
 80218e8:	6360      	str	r0, [r4, #52]	; 0x34
 80218ea:	e7c1      	b.n	8021870 <__sflush_r+0x1c>
 80218ec:	6a21      	ldr	r1, [r4, #32]
 80218ee:	2301      	movs	r3, #1
 80218f0:	4628      	mov	r0, r5
 80218f2:	47b0      	blx	r6
 80218f4:	1c41      	adds	r1, r0, #1
 80218f6:	d1c7      	bne.n	8021888 <__sflush_r+0x34>
 80218f8:	682b      	ldr	r3, [r5, #0]
 80218fa:	2b00      	cmp	r3, #0
 80218fc:	d0c4      	beq.n	8021888 <__sflush_r+0x34>
 80218fe:	2b1d      	cmp	r3, #29
 8021900:	d001      	beq.n	8021906 <__sflush_r+0xb2>
 8021902:	2b16      	cmp	r3, #22
 8021904:	d101      	bne.n	802190a <__sflush_r+0xb6>
 8021906:	602f      	str	r7, [r5, #0]
 8021908:	e7b1      	b.n	802186e <__sflush_r+0x1a>
 802190a:	89a3      	ldrh	r3, [r4, #12]
 802190c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8021910:	81a3      	strh	r3, [r4, #12]
 8021912:	e7ad      	b.n	8021870 <__sflush_r+0x1c>
 8021914:	690f      	ldr	r7, [r1, #16]
 8021916:	2f00      	cmp	r7, #0
 8021918:	d0a9      	beq.n	802186e <__sflush_r+0x1a>
 802191a:	0793      	lsls	r3, r2, #30
 802191c:	680e      	ldr	r6, [r1, #0]
 802191e:	bf08      	it	eq
 8021920:	694b      	ldreq	r3, [r1, #20]
 8021922:	600f      	str	r7, [r1, #0]
 8021924:	bf18      	it	ne
 8021926:	2300      	movne	r3, #0
 8021928:	eba6 0807 	sub.w	r8, r6, r7
 802192c:	608b      	str	r3, [r1, #8]
 802192e:	f1b8 0f00 	cmp.w	r8, #0
 8021932:	dd9c      	ble.n	802186e <__sflush_r+0x1a>
 8021934:	6a21      	ldr	r1, [r4, #32]
 8021936:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8021938:	4643      	mov	r3, r8
 802193a:	463a      	mov	r2, r7
 802193c:	4628      	mov	r0, r5
 802193e:	47b0      	blx	r6
 8021940:	2800      	cmp	r0, #0
 8021942:	dc06      	bgt.n	8021952 <__sflush_r+0xfe>
 8021944:	89a3      	ldrh	r3, [r4, #12]
 8021946:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802194a:	81a3      	strh	r3, [r4, #12]
 802194c:	f04f 30ff 	mov.w	r0, #4294967295
 8021950:	e78e      	b.n	8021870 <__sflush_r+0x1c>
 8021952:	4407      	add	r7, r0
 8021954:	eba8 0800 	sub.w	r8, r8, r0
 8021958:	e7e9      	b.n	802192e <__sflush_r+0xda>
 802195a:	bf00      	nop
 802195c:	20400001 	.word	0x20400001

08021960 <_fflush_r>:
 8021960:	b538      	push	{r3, r4, r5, lr}
 8021962:	690b      	ldr	r3, [r1, #16]
 8021964:	4605      	mov	r5, r0
 8021966:	460c      	mov	r4, r1
 8021968:	b913      	cbnz	r3, 8021970 <_fflush_r+0x10>
 802196a:	2500      	movs	r5, #0
 802196c:	4628      	mov	r0, r5
 802196e:	bd38      	pop	{r3, r4, r5, pc}
 8021970:	b118      	cbz	r0, 802197a <_fflush_r+0x1a>
 8021972:	6983      	ldr	r3, [r0, #24]
 8021974:	b90b      	cbnz	r3, 802197a <_fflush_r+0x1a>
 8021976:	f7ff f85b 	bl	8020a30 <__sinit>
 802197a:	4b14      	ldr	r3, [pc, #80]	; (80219cc <_fflush_r+0x6c>)
 802197c:	429c      	cmp	r4, r3
 802197e:	d11b      	bne.n	80219b8 <_fflush_r+0x58>
 8021980:	686c      	ldr	r4, [r5, #4]
 8021982:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8021986:	2b00      	cmp	r3, #0
 8021988:	d0ef      	beq.n	802196a <_fflush_r+0xa>
 802198a:	6e62      	ldr	r2, [r4, #100]	; 0x64
 802198c:	07d0      	lsls	r0, r2, #31
 802198e:	d404      	bmi.n	802199a <_fflush_r+0x3a>
 8021990:	0599      	lsls	r1, r3, #22
 8021992:	d402      	bmi.n	802199a <_fflush_r+0x3a>
 8021994:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8021996:	f7ff f920 	bl	8020bda <__retarget_lock_acquire_recursive>
 802199a:	4628      	mov	r0, r5
 802199c:	4621      	mov	r1, r4
 802199e:	f7ff ff59 	bl	8021854 <__sflush_r>
 80219a2:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80219a4:	07da      	lsls	r2, r3, #31
 80219a6:	4605      	mov	r5, r0
 80219a8:	d4e0      	bmi.n	802196c <_fflush_r+0xc>
 80219aa:	89a3      	ldrh	r3, [r4, #12]
 80219ac:	059b      	lsls	r3, r3, #22
 80219ae:	d4dd      	bmi.n	802196c <_fflush_r+0xc>
 80219b0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80219b2:	f7ff f914 	bl	8020bde <__retarget_lock_release_recursive>
 80219b6:	e7d9      	b.n	802196c <_fflush_r+0xc>
 80219b8:	4b05      	ldr	r3, [pc, #20]	; (80219d0 <_fflush_r+0x70>)
 80219ba:	429c      	cmp	r4, r3
 80219bc:	d101      	bne.n	80219c2 <_fflush_r+0x62>
 80219be:	68ac      	ldr	r4, [r5, #8]
 80219c0:	e7df      	b.n	8021982 <_fflush_r+0x22>
 80219c2:	4b04      	ldr	r3, [pc, #16]	; (80219d4 <_fflush_r+0x74>)
 80219c4:	429c      	cmp	r4, r3
 80219c6:	bf08      	it	eq
 80219c8:	68ec      	ldreq	r4, [r5, #12]
 80219ca:	e7da      	b.n	8021982 <_fflush_r+0x22>
 80219cc:	080247b8 	.word	0x080247b8
 80219d0:	080247d8 	.word	0x080247d8
 80219d4:	08024798 	.word	0x08024798

080219d8 <_lseek_r>:
 80219d8:	b538      	push	{r3, r4, r5, lr}
 80219da:	4d07      	ldr	r5, [pc, #28]	; (80219f8 <_lseek_r+0x20>)
 80219dc:	4604      	mov	r4, r0
 80219de:	4608      	mov	r0, r1
 80219e0:	4611      	mov	r1, r2
 80219e2:	2200      	movs	r2, #0
 80219e4:	602a      	str	r2, [r5, #0]
 80219e6:	461a      	mov	r2, r3
 80219e8:	f7e0 fc42 	bl	8002270 <_lseek>
 80219ec:	1c43      	adds	r3, r0, #1
 80219ee:	d102      	bne.n	80219f6 <_lseek_r+0x1e>
 80219f0:	682b      	ldr	r3, [r5, #0]
 80219f2:	b103      	cbz	r3, 80219f6 <_lseek_r+0x1e>
 80219f4:	6023      	str	r3, [r4, #0]
 80219f6:	bd38      	pop	{r3, r4, r5, pc}
 80219f8:	2001581c 	.word	0x2001581c

080219fc <__swhatbuf_r>:
 80219fc:	b570      	push	{r4, r5, r6, lr}
 80219fe:	460e      	mov	r6, r1
 8021a00:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8021a04:	2900      	cmp	r1, #0
 8021a06:	b096      	sub	sp, #88	; 0x58
 8021a08:	4614      	mov	r4, r2
 8021a0a:	461d      	mov	r5, r3
 8021a0c:	da08      	bge.n	8021a20 <__swhatbuf_r+0x24>
 8021a0e:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 8021a12:	2200      	movs	r2, #0
 8021a14:	602a      	str	r2, [r5, #0]
 8021a16:	061a      	lsls	r2, r3, #24
 8021a18:	d410      	bmi.n	8021a3c <__swhatbuf_r+0x40>
 8021a1a:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8021a1e:	e00e      	b.n	8021a3e <__swhatbuf_r+0x42>
 8021a20:	466a      	mov	r2, sp
 8021a22:	f000 f86f 	bl	8021b04 <_fstat_r>
 8021a26:	2800      	cmp	r0, #0
 8021a28:	dbf1      	blt.n	8021a0e <__swhatbuf_r+0x12>
 8021a2a:	9a01      	ldr	r2, [sp, #4]
 8021a2c:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8021a30:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8021a34:	425a      	negs	r2, r3
 8021a36:	415a      	adcs	r2, r3
 8021a38:	602a      	str	r2, [r5, #0]
 8021a3a:	e7ee      	b.n	8021a1a <__swhatbuf_r+0x1e>
 8021a3c:	2340      	movs	r3, #64	; 0x40
 8021a3e:	2000      	movs	r0, #0
 8021a40:	6023      	str	r3, [r4, #0]
 8021a42:	b016      	add	sp, #88	; 0x58
 8021a44:	bd70      	pop	{r4, r5, r6, pc}
	...

08021a48 <__smakebuf_r>:
 8021a48:	898b      	ldrh	r3, [r1, #12]
 8021a4a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8021a4c:	079d      	lsls	r5, r3, #30
 8021a4e:	4606      	mov	r6, r0
 8021a50:	460c      	mov	r4, r1
 8021a52:	d507      	bpl.n	8021a64 <__smakebuf_r+0x1c>
 8021a54:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8021a58:	6023      	str	r3, [r4, #0]
 8021a5a:	6123      	str	r3, [r4, #16]
 8021a5c:	2301      	movs	r3, #1
 8021a5e:	6163      	str	r3, [r4, #20]
 8021a60:	b002      	add	sp, #8
 8021a62:	bd70      	pop	{r4, r5, r6, pc}
 8021a64:	ab01      	add	r3, sp, #4
 8021a66:	466a      	mov	r2, sp
 8021a68:	f7ff ffc8 	bl	80219fc <__swhatbuf_r>
 8021a6c:	9900      	ldr	r1, [sp, #0]
 8021a6e:	4605      	mov	r5, r0
 8021a70:	4630      	mov	r0, r6
 8021a72:	f7ff f947 	bl	8020d04 <_malloc_r>
 8021a76:	b948      	cbnz	r0, 8021a8c <__smakebuf_r+0x44>
 8021a78:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8021a7c:	059a      	lsls	r2, r3, #22
 8021a7e:	d4ef      	bmi.n	8021a60 <__smakebuf_r+0x18>
 8021a80:	f023 0303 	bic.w	r3, r3, #3
 8021a84:	f043 0302 	orr.w	r3, r3, #2
 8021a88:	81a3      	strh	r3, [r4, #12]
 8021a8a:	e7e3      	b.n	8021a54 <__smakebuf_r+0xc>
 8021a8c:	4b0d      	ldr	r3, [pc, #52]	; (8021ac4 <__smakebuf_r+0x7c>)
 8021a8e:	62b3      	str	r3, [r6, #40]	; 0x28
 8021a90:	89a3      	ldrh	r3, [r4, #12]
 8021a92:	6020      	str	r0, [r4, #0]
 8021a94:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8021a98:	81a3      	strh	r3, [r4, #12]
 8021a9a:	9b00      	ldr	r3, [sp, #0]
 8021a9c:	6163      	str	r3, [r4, #20]
 8021a9e:	9b01      	ldr	r3, [sp, #4]
 8021aa0:	6120      	str	r0, [r4, #16]
 8021aa2:	b15b      	cbz	r3, 8021abc <__smakebuf_r+0x74>
 8021aa4:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8021aa8:	4630      	mov	r0, r6
 8021aaa:	f000 f83d 	bl	8021b28 <_isatty_r>
 8021aae:	b128      	cbz	r0, 8021abc <__smakebuf_r+0x74>
 8021ab0:	89a3      	ldrh	r3, [r4, #12]
 8021ab2:	f023 0303 	bic.w	r3, r3, #3
 8021ab6:	f043 0301 	orr.w	r3, r3, #1
 8021aba:	81a3      	strh	r3, [r4, #12]
 8021abc:	89a0      	ldrh	r0, [r4, #12]
 8021abe:	4305      	orrs	r5, r0
 8021ac0:	81a5      	strh	r5, [r4, #12]
 8021ac2:	e7cd      	b.n	8021a60 <__smakebuf_r+0x18>
 8021ac4:	080209c9 	.word	0x080209c9

08021ac8 <__malloc_lock>:
 8021ac8:	4801      	ldr	r0, [pc, #4]	; (8021ad0 <__malloc_lock+0x8>)
 8021aca:	f7ff b886 	b.w	8020bda <__retarget_lock_acquire_recursive>
 8021ace:	bf00      	nop
 8021ad0:	20015709 	.word	0x20015709

08021ad4 <__malloc_unlock>:
 8021ad4:	4801      	ldr	r0, [pc, #4]	; (8021adc <__malloc_unlock+0x8>)
 8021ad6:	f7ff b882 	b.w	8020bde <__retarget_lock_release_recursive>
 8021ada:	bf00      	nop
 8021adc:	20015709 	.word	0x20015709

08021ae0 <_read_r>:
 8021ae0:	b538      	push	{r3, r4, r5, lr}
 8021ae2:	4d07      	ldr	r5, [pc, #28]	; (8021b00 <_read_r+0x20>)
 8021ae4:	4604      	mov	r4, r0
 8021ae6:	4608      	mov	r0, r1
 8021ae8:	4611      	mov	r1, r2
 8021aea:	2200      	movs	r2, #0
 8021aec:	602a      	str	r2, [r5, #0]
 8021aee:	461a      	mov	r2, r3
 8021af0:	f7e0 fb98 	bl	8002224 <_read>
 8021af4:	1c43      	adds	r3, r0, #1
 8021af6:	d102      	bne.n	8021afe <_read_r+0x1e>
 8021af8:	682b      	ldr	r3, [r5, #0]
 8021afa:	b103      	cbz	r3, 8021afe <_read_r+0x1e>
 8021afc:	6023      	str	r3, [r4, #0]
 8021afe:	bd38      	pop	{r3, r4, r5, pc}
 8021b00:	2001581c 	.word	0x2001581c

08021b04 <_fstat_r>:
 8021b04:	b538      	push	{r3, r4, r5, lr}
 8021b06:	4d07      	ldr	r5, [pc, #28]	; (8021b24 <_fstat_r+0x20>)
 8021b08:	2300      	movs	r3, #0
 8021b0a:	4604      	mov	r4, r0
 8021b0c:	4608      	mov	r0, r1
 8021b0e:	4611      	mov	r1, r2
 8021b10:	602b      	str	r3, [r5, #0]
 8021b12:	f7e0 fba6 	bl	8002262 <_fstat>
 8021b16:	1c43      	adds	r3, r0, #1
 8021b18:	d102      	bne.n	8021b20 <_fstat_r+0x1c>
 8021b1a:	682b      	ldr	r3, [r5, #0]
 8021b1c:	b103      	cbz	r3, 8021b20 <_fstat_r+0x1c>
 8021b1e:	6023      	str	r3, [r4, #0]
 8021b20:	bd38      	pop	{r3, r4, r5, pc}
 8021b22:	bf00      	nop
 8021b24:	2001581c 	.word	0x2001581c

08021b28 <_isatty_r>:
 8021b28:	b538      	push	{r3, r4, r5, lr}
 8021b2a:	4d06      	ldr	r5, [pc, #24]	; (8021b44 <_isatty_r+0x1c>)
 8021b2c:	2300      	movs	r3, #0
 8021b2e:	4604      	mov	r4, r0
 8021b30:	4608      	mov	r0, r1
 8021b32:	602b      	str	r3, [r5, #0]
 8021b34:	f7e0 fb9a 	bl	800226c <_isatty>
 8021b38:	1c43      	adds	r3, r0, #1
 8021b3a:	d102      	bne.n	8021b42 <_isatty_r+0x1a>
 8021b3c:	682b      	ldr	r3, [r5, #0]
 8021b3e:	b103      	cbz	r3, 8021b42 <_isatty_r+0x1a>
 8021b40:	6023      	str	r3, [r4, #0]
 8021b42:	bd38      	pop	{r3, r4, r5, pc}
 8021b44:	2001581c 	.word	0x2001581c

08021b48 <_init>:
 8021b48:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8021b4a:	bf00      	nop
 8021b4c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8021b4e:	bc08      	pop	{r3}
 8021b50:	469e      	mov	lr, r3
 8021b52:	4770      	bx	lr

08021b54 <_fini>:
 8021b54:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8021b56:	bf00      	nop
 8021b58:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8021b5a:	bc08      	pop	{r3}
 8021b5c:	469e      	mov	lr, r3
 8021b5e:	4770      	bx	lr
