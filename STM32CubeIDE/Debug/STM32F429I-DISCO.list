
STM32F429I-DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000205b4  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00002904  08020764  08020764  00030764  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 0000103a  08023068  08023068  00033068  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 0000003c  080240a4  080240a4  000340a4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 000000ac  080240e0  080240e0  000340e0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 ExtFlashSection 0003f6b8  0802418c  0802418c  0003418c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  08063844  08063844  0008016c  2**0
                  CONTENTS
  8 .ARM          00000008  08063844  08063844  00073844  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  0806384c  0806384c  0008016c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000014  0806384c  0806384c  0007384c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   00000008  08063860  08063860  00073860  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         0000016c  20000000  08063868  00080000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss          00017598  2000016c  080639d4  0008016c  2**2
                  ALLOC
 14 ._user_heap_stack 00001404  20017704  080639d4  00087704  2**0
                  ALLOC
 15 .ARM.attributes 00000030  00000000  00000000  0008016c  2**0
                  CONTENTS, READONLY
 16 TouchGFX_Framebuffer 0004b000  d0000000  d0000000  00090000  2**2
                  ALLOC
 17 .debug_line   0004d095  00000000  00000000  0008019c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_info   000dd2ab  00000000  00000000  000cd231  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_abbrev 00014c16  00000000  00000000  001aa4dc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_aranges 00002eb0  00000000  00000000  001bf0f8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_str    00117aeb  00000000  00000000  001c1fa8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_ranges 00005d40  00000000  00000000  002d9a98  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_loc    0002e358  00000000  00000000  002df7d8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_macro  000303d2  00000000  00000000  0030db30  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .comment      000000cf  00000000  00000000  0033df02  2**0
                  CONTENTS, READONLY
 26 .debug_frame  000089d4  00000000  00000000  0033dfd4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	2000016c 	.word	0x2000016c
 80001cc:	00000000 	.word	0x00000000
 80001d0:	0802074c 	.word	0x0802074c

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000170 	.word	0x20000170
 80001ec:	0802074c 	.word	0x0802074c

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <__aeabi_uldivmod>:
 8000290:	b953      	cbnz	r3, 80002a8 <__aeabi_uldivmod+0x18>
 8000292:	b94a      	cbnz	r2, 80002a8 <__aeabi_uldivmod+0x18>
 8000294:	2900      	cmp	r1, #0
 8000296:	bf08      	it	eq
 8000298:	2800      	cmpeq	r0, #0
 800029a:	bf1c      	itt	ne
 800029c:	f04f 31ff 	movne.w	r1, #4294967295
 80002a0:	f04f 30ff 	movne.w	r0, #4294967295
 80002a4:	f000 b974 	b.w	8000590 <__aeabi_idiv0>
 80002a8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002ac:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002b0:	f000 f806 	bl	80002c0 <__udivmoddi4>
 80002b4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002b8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002bc:	b004      	add	sp, #16
 80002be:	4770      	bx	lr

080002c0 <__udivmoddi4>:
 80002c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002c4:	9d08      	ldr	r5, [sp, #32]
 80002c6:	4604      	mov	r4, r0
 80002c8:	468e      	mov	lr, r1
 80002ca:	2b00      	cmp	r3, #0
 80002cc:	d14d      	bne.n	800036a <__udivmoddi4+0xaa>
 80002ce:	428a      	cmp	r2, r1
 80002d0:	4694      	mov	ip, r2
 80002d2:	d969      	bls.n	80003a8 <__udivmoddi4+0xe8>
 80002d4:	fab2 f282 	clz	r2, r2
 80002d8:	b152      	cbz	r2, 80002f0 <__udivmoddi4+0x30>
 80002da:	fa01 f302 	lsl.w	r3, r1, r2
 80002de:	f1c2 0120 	rsb	r1, r2, #32
 80002e2:	fa20 f101 	lsr.w	r1, r0, r1
 80002e6:	fa0c fc02 	lsl.w	ip, ip, r2
 80002ea:	ea41 0e03 	orr.w	lr, r1, r3
 80002ee:	4094      	lsls	r4, r2
 80002f0:	ea4f 481c 	mov.w	r8, ip, lsr #16
 80002f4:	0c21      	lsrs	r1, r4, #16
 80002f6:	fbbe f6f8 	udiv	r6, lr, r8
 80002fa:	fa1f f78c 	uxth.w	r7, ip
 80002fe:	fb08 e316 	mls	r3, r8, r6, lr
 8000302:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8000306:	fb06 f107 	mul.w	r1, r6, r7
 800030a:	4299      	cmp	r1, r3
 800030c:	d90a      	bls.n	8000324 <__udivmoddi4+0x64>
 800030e:	eb1c 0303 	adds.w	r3, ip, r3
 8000312:	f106 30ff 	add.w	r0, r6, #4294967295
 8000316:	f080 811f 	bcs.w	8000558 <__udivmoddi4+0x298>
 800031a:	4299      	cmp	r1, r3
 800031c:	f240 811c 	bls.w	8000558 <__udivmoddi4+0x298>
 8000320:	3e02      	subs	r6, #2
 8000322:	4463      	add	r3, ip
 8000324:	1a5b      	subs	r3, r3, r1
 8000326:	b2a4      	uxth	r4, r4
 8000328:	fbb3 f0f8 	udiv	r0, r3, r8
 800032c:	fb08 3310 	mls	r3, r8, r0, r3
 8000330:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000334:	fb00 f707 	mul.w	r7, r0, r7
 8000338:	42a7      	cmp	r7, r4
 800033a:	d90a      	bls.n	8000352 <__udivmoddi4+0x92>
 800033c:	eb1c 0404 	adds.w	r4, ip, r4
 8000340:	f100 33ff 	add.w	r3, r0, #4294967295
 8000344:	f080 810a 	bcs.w	800055c <__udivmoddi4+0x29c>
 8000348:	42a7      	cmp	r7, r4
 800034a:	f240 8107 	bls.w	800055c <__udivmoddi4+0x29c>
 800034e:	4464      	add	r4, ip
 8000350:	3802      	subs	r0, #2
 8000352:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000356:	1be4      	subs	r4, r4, r7
 8000358:	2600      	movs	r6, #0
 800035a:	b11d      	cbz	r5, 8000364 <__udivmoddi4+0xa4>
 800035c:	40d4      	lsrs	r4, r2
 800035e:	2300      	movs	r3, #0
 8000360:	e9c5 4300 	strd	r4, r3, [r5]
 8000364:	4631      	mov	r1, r6
 8000366:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800036a:	428b      	cmp	r3, r1
 800036c:	d909      	bls.n	8000382 <__udivmoddi4+0xc2>
 800036e:	2d00      	cmp	r5, #0
 8000370:	f000 80ef 	beq.w	8000552 <__udivmoddi4+0x292>
 8000374:	2600      	movs	r6, #0
 8000376:	e9c5 0100 	strd	r0, r1, [r5]
 800037a:	4630      	mov	r0, r6
 800037c:	4631      	mov	r1, r6
 800037e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000382:	fab3 f683 	clz	r6, r3
 8000386:	2e00      	cmp	r6, #0
 8000388:	d14a      	bne.n	8000420 <__udivmoddi4+0x160>
 800038a:	428b      	cmp	r3, r1
 800038c:	d302      	bcc.n	8000394 <__udivmoddi4+0xd4>
 800038e:	4282      	cmp	r2, r0
 8000390:	f200 80f9 	bhi.w	8000586 <__udivmoddi4+0x2c6>
 8000394:	1a84      	subs	r4, r0, r2
 8000396:	eb61 0303 	sbc.w	r3, r1, r3
 800039a:	2001      	movs	r0, #1
 800039c:	469e      	mov	lr, r3
 800039e:	2d00      	cmp	r5, #0
 80003a0:	d0e0      	beq.n	8000364 <__udivmoddi4+0xa4>
 80003a2:	e9c5 4e00 	strd	r4, lr, [r5]
 80003a6:	e7dd      	b.n	8000364 <__udivmoddi4+0xa4>
 80003a8:	b902      	cbnz	r2, 80003ac <__udivmoddi4+0xec>
 80003aa:	deff      	udf	#255	; 0xff
 80003ac:	fab2 f282 	clz	r2, r2
 80003b0:	2a00      	cmp	r2, #0
 80003b2:	f040 8092 	bne.w	80004da <__udivmoddi4+0x21a>
 80003b6:	eba1 010c 	sub.w	r1, r1, ip
 80003ba:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80003be:	fa1f fe8c 	uxth.w	lr, ip
 80003c2:	2601      	movs	r6, #1
 80003c4:	0c20      	lsrs	r0, r4, #16
 80003c6:	fbb1 f3f7 	udiv	r3, r1, r7
 80003ca:	fb07 1113 	mls	r1, r7, r3, r1
 80003ce:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 80003d2:	fb0e f003 	mul.w	r0, lr, r3
 80003d6:	4288      	cmp	r0, r1
 80003d8:	d908      	bls.n	80003ec <__udivmoddi4+0x12c>
 80003da:	eb1c 0101 	adds.w	r1, ip, r1
 80003de:	f103 38ff 	add.w	r8, r3, #4294967295
 80003e2:	d202      	bcs.n	80003ea <__udivmoddi4+0x12a>
 80003e4:	4288      	cmp	r0, r1
 80003e6:	f200 80cb 	bhi.w	8000580 <__udivmoddi4+0x2c0>
 80003ea:	4643      	mov	r3, r8
 80003ec:	1a09      	subs	r1, r1, r0
 80003ee:	b2a4      	uxth	r4, r4
 80003f0:	fbb1 f0f7 	udiv	r0, r1, r7
 80003f4:	fb07 1110 	mls	r1, r7, r0, r1
 80003f8:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 80003fc:	fb0e fe00 	mul.w	lr, lr, r0
 8000400:	45a6      	cmp	lr, r4
 8000402:	d908      	bls.n	8000416 <__udivmoddi4+0x156>
 8000404:	eb1c 0404 	adds.w	r4, ip, r4
 8000408:	f100 31ff 	add.w	r1, r0, #4294967295
 800040c:	d202      	bcs.n	8000414 <__udivmoddi4+0x154>
 800040e:	45a6      	cmp	lr, r4
 8000410:	f200 80bb 	bhi.w	800058a <__udivmoddi4+0x2ca>
 8000414:	4608      	mov	r0, r1
 8000416:	eba4 040e 	sub.w	r4, r4, lr
 800041a:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 800041e:	e79c      	b.n	800035a <__udivmoddi4+0x9a>
 8000420:	f1c6 0720 	rsb	r7, r6, #32
 8000424:	40b3      	lsls	r3, r6
 8000426:	fa22 fc07 	lsr.w	ip, r2, r7
 800042a:	ea4c 0c03 	orr.w	ip, ip, r3
 800042e:	fa20 f407 	lsr.w	r4, r0, r7
 8000432:	fa01 f306 	lsl.w	r3, r1, r6
 8000436:	431c      	orrs	r4, r3
 8000438:	40f9      	lsrs	r1, r7
 800043a:	ea4f 491c 	mov.w	r9, ip, lsr #16
 800043e:	fa00 f306 	lsl.w	r3, r0, r6
 8000442:	fbb1 f8f9 	udiv	r8, r1, r9
 8000446:	0c20      	lsrs	r0, r4, #16
 8000448:	fa1f fe8c 	uxth.w	lr, ip
 800044c:	fb09 1118 	mls	r1, r9, r8, r1
 8000450:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000454:	fb08 f00e 	mul.w	r0, r8, lr
 8000458:	4288      	cmp	r0, r1
 800045a:	fa02 f206 	lsl.w	r2, r2, r6
 800045e:	d90b      	bls.n	8000478 <__udivmoddi4+0x1b8>
 8000460:	eb1c 0101 	adds.w	r1, ip, r1
 8000464:	f108 3aff 	add.w	sl, r8, #4294967295
 8000468:	f080 8088 	bcs.w	800057c <__udivmoddi4+0x2bc>
 800046c:	4288      	cmp	r0, r1
 800046e:	f240 8085 	bls.w	800057c <__udivmoddi4+0x2bc>
 8000472:	f1a8 0802 	sub.w	r8, r8, #2
 8000476:	4461      	add	r1, ip
 8000478:	1a09      	subs	r1, r1, r0
 800047a:	b2a4      	uxth	r4, r4
 800047c:	fbb1 f0f9 	udiv	r0, r1, r9
 8000480:	fb09 1110 	mls	r1, r9, r0, r1
 8000484:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
 8000488:	fb00 fe0e 	mul.w	lr, r0, lr
 800048c:	458e      	cmp	lr, r1
 800048e:	d908      	bls.n	80004a2 <__udivmoddi4+0x1e2>
 8000490:	eb1c 0101 	adds.w	r1, ip, r1
 8000494:	f100 34ff 	add.w	r4, r0, #4294967295
 8000498:	d26c      	bcs.n	8000574 <__udivmoddi4+0x2b4>
 800049a:	458e      	cmp	lr, r1
 800049c:	d96a      	bls.n	8000574 <__udivmoddi4+0x2b4>
 800049e:	3802      	subs	r0, #2
 80004a0:	4461      	add	r1, ip
 80004a2:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 80004a6:	fba0 9402 	umull	r9, r4, r0, r2
 80004aa:	eba1 010e 	sub.w	r1, r1, lr
 80004ae:	42a1      	cmp	r1, r4
 80004b0:	46c8      	mov	r8, r9
 80004b2:	46a6      	mov	lr, r4
 80004b4:	d356      	bcc.n	8000564 <__udivmoddi4+0x2a4>
 80004b6:	d053      	beq.n	8000560 <__udivmoddi4+0x2a0>
 80004b8:	b15d      	cbz	r5, 80004d2 <__udivmoddi4+0x212>
 80004ba:	ebb3 0208 	subs.w	r2, r3, r8
 80004be:	eb61 010e 	sbc.w	r1, r1, lr
 80004c2:	fa01 f707 	lsl.w	r7, r1, r7
 80004c6:	fa22 f306 	lsr.w	r3, r2, r6
 80004ca:	40f1      	lsrs	r1, r6
 80004cc:	431f      	orrs	r7, r3
 80004ce:	e9c5 7100 	strd	r7, r1, [r5]
 80004d2:	2600      	movs	r6, #0
 80004d4:	4631      	mov	r1, r6
 80004d6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80004da:	f1c2 0320 	rsb	r3, r2, #32
 80004de:	40d8      	lsrs	r0, r3
 80004e0:	fa0c fc02 	lsl.w	ip, ip, r2
 80004e4:	fa21 f303 	lsr.w	r3, r1, r3
 80004e8:	4091      	lsls	r1, r2
 80004ea:	4301      	orrs	r1, r0
 80004ec:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80004f0:	fa1f fe8c 	uxth.w	lr, ip
 80004f4:	fbb3 f0f7 	udiv	r0, r3, r7
 80004f8:	fb07 3610 	mls	r6, r7, r0, r3
 80004fc:	0c0b      	lsrs	r3, r1, #16
 80004fe:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
 8000502:	fb00 f60e 	mul.w	r6, r0, lr
 8000506:	429e      	cmp	r6, r3
 8000508:	fa04 f402 	lsl.w	r4, r4, r2
 800050c:	d908      	bls.n	8000520 <__udivmoddi4+0x260>
 800050e:	eb1c 0303 	adds.w	r3, ip, r3
 8000512:	f100 38ff 	add.w	r8, r0, #4294967295
 8000516:	d22f      	bcs.n	8000578 <__udivmoddi4+0x2b8>
 8000518:	429e      	cmp	r6, r3
 800051a:	d92d      	bls.n	8000578 <__udivmoddi4+0x2b8>
 800051c:	3802      	subs	r0, #2
 800051e:	4463      	add	r3, ip
 8000520:	1b9b      	subs	r3, r3, r6
 8000522:	b289      	uxth	r1, r1
 8000524:	fbb3 f6f7 	udiv	r6, r3, r7
 8000528:	fb07 3316 	mls	r3, r7, r6, r3
 800052c:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000530:	fb06 f30e 	mul.w	r3, r6, lr
 8000534:	428b      	cmp	r3, r1
 8000536:	d908      	bls.n	800054a <__udivmoddi4+0x28a>
 8000538:	eb1c 0101 	adds.w	r1, ip, r1
 800053c:	f106 38ff 	add.w	r8, r6, #4294967295
 8000540:	d216      	bcs.n	8000570 <__udivmoddi4+0x2b0>
 8000542:	428b      	cmp	r3, r1
 8000544:	d914      	bls.n	8000570 <__udivmoddi4+0x2b0>
 8000546:	3e02      	subs	r6, #2
 8000548:	4461      	add	r1, ip
 800054a:	1ac9      	subs	r1, r1, r3
 800054c:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
 8000550:	e738      	b.n	80003c4 <__udivmoddi4+0x104>
 8000552:	462e      	mov	r6, r5
 8000554:	4628      	mov	r0, r5
 8000556:	e705      	b.n	8000364 <__udivmoddi4+0xa4>
 8000558:	4606      	mov	r6, r0
 800055a:	e6e3      	b.n	8000324 <__udivmoddi4+0x64>
 800055c:	4618      	mov	r0, r3
 800055e:	e6f8      	b.n	8000352 <__udivmoddi4+0x92>
 8000560:	454b      	cmp	r3, r9
 8000562:	d2a9      	bcs.n	80004b8 <__udivmoddi4+0x1f8>
 8000564:	ebb9 0802 	subs.w	r8, r9, r2
 8000568:	eb64 0e0c 	sbc.w	lr, r4, ip
 800056c:	3801      	subs	r0, #1
 800056e:	e7a3      	b.n	80004b8 <__udivmoddi4+0x1f8>
 8000570:	4646      	mov	r6, r8
 8000572:	e7ea      	b.n	800054a <__udivmoddi4+0x28a>
 8000574:	4620      	mov	r0, r4
 8000576:	e794      	b.n	80004a2 <__udivmoddi4+0x1e2>
 8000578:	4640      	mov	r0, r8
 800057a:	e7d1      	b.n	8000520 <__udivmoddi4+0x260>
 800057c:	46d0      	mov	r8, sl
 800057e:	e77b      	b.n	8000478 <__udivmoddi4+0x1b8>
 8000580:	3b02      	subs	r3, #2
 8000582:	4461      	add	r1, ip
 8000584:	e732      	b.n	80003ec <__udivmoddi4+0x12c>
 8000586:	4630      	mov	r0, r6
 8000588:	e709      	b.n	800039e <__udivmoddi4+0xde>
 800058a:	4464      	add	r4, ip
 800058c:	3802      	subs	r0, #2
 800058e:	e742      	b.n	8000416 <__udivmoddi4+0x156>

08000590 <__aeabi_idiv0>:
 8000590:	4770      	bx	lr
 8000592:	bf00      	nop

08000594 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 8000594:	f8df d034 	ldr.w	sp, [pc, #52]	; 80005cc <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8000598:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 800059a:	e003      	b.n	80005a4 <LoopCopyDataInit>

0800059c <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 800059c:	4b0c      	ldr	r3, [pc, #48]	; (80005d0 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 800059e:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 80005a0:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 80005a2:	3104      	adds	r1, #4

080005a4 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 80005a4:	480b      	ldr	r0, [pc, #44]	; (80005d4 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 80005a6:	4b0c      	ldr	r3, [pc, #48]	; (80005d8 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 80005a8:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 80005aa:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 80005ac:	d3f6      	bcc.n	800059c <CopyDataInit>
  ldr  r2, =_sbss
 80005ae:	4a0b      	ldr	r2, [pc, #44]	; (80005dc <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 80005b0:	e002      	b.n	80005b8 <LoopFillZerobss>

080005b2 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 80005b2:	2300      	movs	r3, #0
  str  r3, [r2], #4
 80005b4:	f842 3b04 	str.w	r3, [r2], #4

080005b8 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 80005b8:	4b09      	ldr	r3, [pc, #36]	; (80005e0 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 80005ba:	429a      	cmp	r2, r3
  bcc  FillZerobss
 80005bc:	d3f9      	bcc.n	80005b2 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 80005be:	f004 fb3b 	bl	8004c38 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80005c2:	f01f f8e7 	bl	801f794 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80005c6:	f000 febf 	bl	8001348 <main>
  bx  lr    
 80005ca:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 80005cc:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 80005d0:	08063868 	.word	0x08063868
  ldr  r0, =_sdata
 80005d4:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 80005d8:	2000016c 	.word	0x2000016c
  ldr  r2, =_sbss
 80005dc:	2000016c 	.word	0x2000016c
  ldr  r3, = _ebss
 80005e0:	20017704 	.word	0x20017704

080005e4 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80005e4:	e7fe      	b.n	80005e4 <ADC_IRQHandler>

080005e6 <MX_TouchGFX_Init>:
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_init();
 80005e6:	f000 bc39 	b.w	8000e5c <touchgfx_init>

080005ea <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 80005ea:	f000 bca9 	b.w	8000f40 <touchgfx_taskEntry>

080005ee <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 80005ee:	4770      	bx	lr

080005f0 <_ZN20STM32TouchControllerD0Ev>:
 80005f0:	b510      	push	{r4, lr}
 80005f2:	2104      	movs	r1, #4
 80005f4:	4604      	mov	r4, r0
 80005f6:	f01e ff5e 	bl	801f4b6 <_ZdlPvj>
 80005fa:	4620      	mov	r0, r4
 80005fc:	bd10      	pop	{r4, pc}
	...

08000600 <_Z11BSP_TS_Inittt>:
  * @param  XSize: The maximum X size of the TS area on LCD
  * @param  YSize: The maximum Y size of the TS area on LCD
  * @retval TS_OK: if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize)
{
 8000600:	b538      	push	{r3, r4, r5, lr}
    uint8_t ret = TS_ERROR;

    /* Initialize x and y positions boundaries */
    TsXBoundary = XSize;
 8000602:	4b0c      	ldr	r3, [pc, #48]	; (8000634 <_Z11BSP_TS_Inittt+0x34>)
    TsYBoundary = YSize;

    /* Read ID and verify if the IO expander is ready */
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8000604:	4c0c      	ldr	r4, [pc, #48]	; (8000638 <_Z11BSP_TS_Inittt+0x38>)
    TsXBoundary = XSize;
 8000606:	8018      	strh	r0, [r3, #0]
    TsYBoundary = YSize;
 8000608:	4b0c      	ldr	r3, [pc, #48]	; (800063c <_Z11BSP_TS_Inittt+0x3c>)
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 800060a:	2082      	movs	r0, #130	; 0x82
    TsYBoundary = YSize;
 800060c:	8019      	strh	r1, [r3, #0]
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 800060e:	6863      	ldr	r3, [r4, #4]
 8000610:	4798      	blx	r3
 8000612:	f640 0311 	movw	r3, #2065	; 0x811
 8000616:	4298      	cmp	r0, r3
 8000618:	d10a      	bne.n	8000630 <_Z11BSP_TS_Inittt+0x30>
    {
        /* Initialize the TS driver structure */
        TsDrv = &stmpe811_ts_drv;
 800061a:	4d09      	ldr	r5, [pc, #36]	; (8000640 <_Z11BSP_TS_Inittt+0x40>)
    }

    if (ret == TS_OK)
    {
        /* Initialize the LL TS Driver */
        TsDrv->Init(TS_I2C_ADDRESS);
 800061c:	6823      	ldr	r3, [r4, #0]
        TsDrv = &stmpe811_ts_drv;
 800061e:	602c      	str	r4, [r5, #0]
        TsDrv->Init(TS_I2C_ADDRESS);
 8000620:	2082      	movs	r0, #130	; 0x82
 8000622:	4798      	blx	r3
        TsDrv->Start(TS_I2C_ADDRESS);
 8000624:	682b      	ldr	r3, [r5, #0]
 8000626:	2082      	movs	r0, #130	; 0x82
 8000628:	68db      	ldr	r3, [r3, #12]
 800062a:	4798      	blx	r3
 800062c:	2000      	movs	r0, #0
    }

    return ret;
}
 800062e:	bd38      	pop	{r3, r4, r5, pc}
    uint8_t ret = TS_ERROR;
 8000630:	2001      	movs	r0, #1
 8000632:	e7fc      	b.n	800062e <_Z11BSP_TS_Inittt+0x2e>
 8000634:	20000188 	.word	0x20000188
 8000638:	20000054 	.word	0x20000054
 800063c:	2000018a 	.word	0x2000018a
 8000640:	2000018c 	.word	0x2000018c

08000644 <_ZN20STM32TouchController4initEv>:
    BSP_TS_Init(240, 320);
 8000644:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8000648:	20f0      	movs	r0, #240	; 0xf0
 800064a:	f7ff bfd9 	b.w	8000600 <_Z11BSP_TS_Inittt>
	...

08000650 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>:
/**
  * @brief  Returns status and positions of the touch screen.
  * @param  TsState: Pointer to touch screen current state structure
  */
void BSP_TS_GetState(TS_StateTypeDef* TsState)
{
 8000650:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    static uint32_t _x = 0, _y = 0;
    uint16_t xDiff, yDiff, x, y, xr, yr;

    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8000652:	4d2d      	ldr	r5, [pc, #180]	; (8000708 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb8>)
 8000654:	682b      	ldr	r3, [r5, #0]
{
 8000656:	4604      	mov	r4, r0
    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8000658:	691b      	ldr	r3, [r3, #16]
 800065a:	2082      	movs	r0, #130	; 0x82
 800065c:	4798      	blx	r3
 800065e:	b280      	uxth	r0, r0
 8000660:	8020      	strh	r0, [r4, #0]

    if (TsState->TouchDetected)
 8000662:	2800      	cmp	r0, #0
 8000664:	d043      	beq.n	80006ee <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x9e>
    {
        TsDrv->GetXY(TS_I2C_ADDRESS, &x, &y);
 8000666:	682b      	ldr	r3, [r5, #0]
 8000668:	f10d 0206 	add.w	r2, sp, #6
 800066c:	695b      	ldr	r3, [r3, #20]
 800066e:	a901      	add	r1, sp, #4
 8000670:	2082      	movs	r0, #130	; 0x82
 8000672:	4798      	blx	r3

        /* Y value first correction */
        y -= 360;
 8000674:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8000678:	f5a2 72b4 	sub.w	r2, r2, #360	; 0x168
 800067c:	b292      	uxth	r2, r2

        /* Y value second correction */
        yr = y / 11;

        /* Return y position value */
        if (yr <= 0)
 800067e:	2a0a      	cmp	r2, #10
 8000680:	d937      	bls.n	80006f2 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xa2>
        yr = y / 11;
 8000682:	230b      	movs	r3, #11
 8000684:	fbb2 f2f3 	udiv	r2, r2, r3
        {
            yr = 0;
        }
        else if (yr > TsYBoundary)
 8000688:	4b20      	ldr	r3, [pc, #128]	; (800070c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xbc>)
 800068a:	881b      	ldrh	r3, [r3, #0]
 800068c:	429a      	cmp	r2, r3
 800068e:	d901      	bls.n	8000694 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x44>
        {
            yr = TsYBoundary - 1;
 8000690:	3b01      	subs	r3, #1
 8000692:	b29a      	uxth	r2, r3
        else
        {}
        y = yr;

        /* X value first correction */
        if (x <= 3000)
 8000694:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8000698:	f640 31b8 	movw	r1, #3000	; 0xbb8
 800069c:	428b      	cmp	r3, r1
 800069e:	d82a      	bhi.n	80006f6 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xa6>
        {
            x = 3870 - x;
 80006a0:	f5c3 6371 	rsb	r3, r3, #3856	; 0xf10
 80006a4:	330e      	adds	r3, #14
 80006a6:	b29b      	uxth	r3, r3
        {
            x = 3800 - x;
        }

        /* X value second correction */
        xr = x / 15;
 80006a8:	210f      	movs	r1, #15
 80006aa:	fbb3 f3f1 	udiv	r3, r3, r1
        /* Return X position value */
        if (xr <= 0)
        {
            xr = 0;
        }
        else if (xr > TsXBoundary)
 80006ae:	4918      	ldr	r1, [pc, #96]	; (8000710 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc0>)
 80006b0:	8809      	ldrh	r1, [r1, #0]
 80006b2:	428b      	cmp	r3, r1
 80006b4:	d901      	bls.n	80006ba <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x6a>
        {
            xr = TsXBoundary - 1;
 80006b6:	1e4b      	subs	r3, r1, #1
 80006b8:	b29b      	uxth	r3, r3
        }
        else
        {}

        x = xr;
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006ba:	4e16      	ldr	r6, [pc, #88]	; (8000714 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc4>)
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006bc:	4d16      	ldr	r5, [pc, #88]	; (8000718 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc8>)
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006be:	6830      	ldr	r0, [r6, #0]
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006c0:	682f      	ldr	r7, [r5, #0]
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006c2:	4283      	cmp	r3, r0
 80006c4:	b281      	uxth	r1, r0
 80006c6:	bf8c      	ite	hi
 80006c8:	1a59      	subhi	r1, r3, r1
 80006ca:	1ac9      	subls	r1, r1, r3
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006cc:	b2b8      	uxth	r0, r7
 80006ce:	42ba      	cmp	r2, r7
 80006d0:	bf8c      	ite	hi
 80006d2:	1a10      	subhi	r0, r2, r0
 80006d4:	1a80      	subls	r0, r0, r2
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006d6:	b289      	uxth	r1, r1
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006d8:	b280      	uxth	r0, r0

        if (xDiff + yDiff > 5)
 80006da:	4401      	add	r1, r0
 80006dc:	2905      	cmp	r1, #5
        {
            _x = x;
 80006de:	bfc8      	it	gt
 80006e0:	6033      	strgt	r3, [r6, #0]
            _y = y;
        }

        /* Update the X position */
        TsState->X = _x;
 80006e2:	6833      	ldr	r3, [r6, #0]
            _y = y;
 80006e4:	bfc8      	it	gt
 80006e6:	602a      	strgt	r2, [r5, #0]
        TsState->X = _x;
 80006e8:	8063      	strh	r3, [r4, #2]

        /* Update the Y position */
        TsState->Y = _y;
 80006ea:	682b      	ldr	r3, [r5, #0]
 80006ec:	80a3      	strh	r3, [r4, #4]
    }
}
 80006ee:	b003      	add	sp, #12
 80006f0:	bdf0      	pop	{r4, r5, r6, r7, pc}
            yr = 0;
 80006f2:	2200      	movs	r2, #0
 80006f4:	e7ce      	b.n	8000694 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x44>
            x = 3800 - x;
 80006f6:	f5c3 636d 	rsb	r3, r3, #3792	; 0xed0
 80006fa:	3308      	adds	r3, #8
 80006fc:	b29b      	uxth	r3, r3
        if (xr <= 0)
 80006fe:	2b0e      	cmp	r3, #14
 8000700:	d8d2      	bhi.n	80006a8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x58>
            xr = 0;
 8000702:	2300      	movs	r3, #0
 8000704:	e7d9      	b.n	80006ba <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x6a>
 8000706:	bf00      	nop
 8000708:	2000018c 	.word	0x2000018c
 800070c:	2000018a 	.word	0x2000018a
 8000710:	20000188 	.word	0x20000188
 8000714:	20000190 	.word	0x20000190
 8000718:	20000194 	.word	0x20000194

0800071c <_ZN20STM32TouchController11sampleTouchERlS0_>:
{
 800071c:	b537      	push	{r0, r1, r2, r4, r5, lr}
    BSP_TS_GetState(&state);
 800071e:	4668      	mov	r0, sp
{
 8000720:	460d      	mov	r5, r1
 8000722:	4614      	mov	r4, r2
    BSP_TS_GetState(&state);
 8000724:	f7ff ff94 	bl	8000650 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>
    if (state.TouchDetected)
 8000728:	f8bd 0000 	ldrh.w	r0, [sp]
 800072c:	b130      	cbz	r0, 800073c <_ZN20STM32TouchController11sampleTouchERlS0_+0x20>
        x = state.X;
 800072e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8000732:	602b      	str	r3, [r5, #0]
        y = state.Y;
 8000734:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8000738:	6023      	str	r3, [r4, #0]
        return true;
 800073a:	2001      	movs	r0, #1
}
 800073c:	b003      	add	sp, #12
 800073e:	bd30      	pop	{r4, r5, pc}

08000740 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{

}
 8000740:	4770      	bx	lr

08000742 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
 8000742:	4770      	bx	lr

08000744 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
 8000744:	4770      	bx	lr

08000746 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 8000746:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 8000748:	f880 1074 	strb.w	r1, [r0, #116]	; 0x74
        displayOrientationChangeRequested = true;
 800074c:	f880 3075 	strb.w	r3, [r0, #117]	; 0x75
    }
 8000750:	4770      	bx	lr

08000752 <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 8000752:	2000      	movs	r0, #0
 8000754:	4770      	bx	lr
	...

08000758 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8000758:	4b03      	ldr	r3, [pc, #12]	; (8000768 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 800075a:	6441      	str	r1, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 800075c:	3900      	subs	r1, #0
 800075e:	bf18      	it	ne
 8000760:	2101      	movne	r1, #1
 8000762:	7019      	strb	r1, [r3, #0]
    }
 8000764:	4770      	bx	lr
 8000766:	bf00      	nop
 8000768:	20017457 	.word	0x20017457

0800076c <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 800076c:	2000      	movs	r0, #0
 800076e:	4770      	bx	lr

08000770 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 8000770:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8000772:	b10b      	cbz	r3, 8000778 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 8000774:	4608      	mov	r0, r1
 8000776:	4718      	bx	r3
        }
    }
 8000778:	4770      	bx	lr

0800077a <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 800077a:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800077e:	4770      	bx	lr

08000780 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 8000780:	6840      	ldr	r0, [r0, #4]
 8000782:	6803      	ldr	r3, [r0, #0]
 8000784:	699b      	ldr	r3, [r3, #24]
 8000786:	4718      	bx	r3

08000788 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 8000788:	4770      	bx	lr

0800078a <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 800078a:	4770      	bx	lr

0800078c <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 800078c:	4770      	bx	lr

0800078e <_ZN11TouchGFXHAL10initializeEv>:
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 800078e:	f000 bc77 	b.w	8001080 <_ZN20TouchGFXGeneratedHAL10initializeEv>

08000792 <_ZN11TouchGFXHAL9taskEntryEv>:
}

void TouchGFXHAL::taskEntry()
{
 8000792:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 8000794:	6803      	ldr	r3, [r0, #0]
{
 8000796:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 8000798:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800079c:	4798      	blx	r3
    enableInterrupts();
 800079e:	6823      	ldr	r3, [r4, #0]
 80007a0:	4620      	mov	r0, r4
 80007a2:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 80007a4:	4798      	blx	r3

    OSWrappers::waitForVSync();
 80007a6:	f000 f8eb 	bl	8000980 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 80007aa:	6823      	ldr	r3, [r4, #0]
 80007ac:	4620      	mov	r0, r4
 80007ae:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80007b0:	4798      	blx	r3

    LCD_IO_WriteReg(0x29);
 80007b2:	2029      	movs	r0, #41	; 0x29
 80007b4:	f001 f868 	bl	8001888 <LCD_IO_WriteReg>

    for (;;)
    {
        OSWrappers::waitForVSync();
 80007b8:	f000 f8e2 	bl	8000980 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 80007bc:	6823      	ldr	r3, [r4, #0]
 80007be:	4620      	mov	r0, r4
 80007c0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80007c2:	4798      	blx	r3
    for (;;)
 80007c4:	e7f8      	b.n	80007b8 <_ZN11TouchGFXHAL9taskEntryEv+0x26>

080007c6 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 80007c6:	b510      	push	{r4, lr}
 80007c8:	4604      	mov	r4, r0
        swapFrameBuffers();
 80007ca:	f00a f86b 	bl	800a8a4 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 80007ce:	6823      	ldr	r3, [r4, #0]
 80007d0:	4620      	mov	r0, r4
 80007d2:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    }
 80007d6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 80007da:	4718      	bx	r3

080007dc <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 80007dc:	f000 bc42 	b.w	8001064 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

080007e0 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 80007e0:	f000 bc46 	b.w	8001070 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

080007e4 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 80007e4:	f000 bc72 	b.w	80010cc <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

080007e8 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 80007e8:	f000 bc18 	b.w	800101c <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

080007ec <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 80007ec:	f000 bc72 	b.w	80010d4 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

080007f0 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 80007f0:	f000 bc7a 	b.w	80010e8 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

080007f4 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 80007f4:	f000 bc1c 	b.w	8001030 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

080007f8 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 80007f8:	f009 bac8 	b.w	8009d8c <_ZN8touchgfx3HAL16flushFrameBufferEv>

080007fc <_ZN11TouchGFXHALD0Ev>:
 80007fc:	b510      	push	{r4, lr}
 80007fe:	217c      	movs	r1, #124	; 0x7c
 8000800:	4604      	mov	r4, r0
 8000802:	f01e fe58 	bl	801f4b6 <_ZdlPvj>
 8000806:	4620      	mov	r0, r4
 8000808:	bd10      	pop	{r4, pc}

0800080a <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 800080a:	f890 3077 	ldrb.w	r3, [r0, #119]	; 0x77
 800080e:	b11b      	cbz	r3, 8000818 <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 8000810:	6840      	ldr	r0, [r0, #4]
 8000812:	6803      	ldr	r3, [r0, #0]
 8000814:	681b      	ldr	r3, [r3, #0]
 8000816:	4718      	bx	r3
    }
 8000818:	4618      	mov	r0, r3
 800081a:	4770      	bx	lr

0800081c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 800081c:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 800081e:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 8000822:	f890 4074 	ldrb.w	r4, [r0, #116]	; 0x74
            if (DISPLAY_ROTATION == rotate0)
 8000826:	4b0c      	ldr	r3, [pc, #48]	; (8000858 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 8000828:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 800082a:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 800082c:	d009      	beq.n	8000842 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 800082e:	b93a      	cbnz	r2, 8000840 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000830:	4a0a      	ldr	r2, [pc, #40]	; (800085c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 8000832:	490b      	ldr	r1, [pc, #44]	; (8000860 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000834:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 8000836:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 8000838:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800083a:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 800083c:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 800083e:	701a      	strb	r2, [r3, #0]
    }
 8000840:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 8000842:	2a00      	cmp	r2, #0
 8000844:	d0fc      	beq.n	8000840 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000846:	4a05      	ldr	r2, [pc, #20]	; (800085c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 8000848:	4905      	ldr	r1, [pc, #20]	; (8000860 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800084a:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 800084c:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 800084e:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000850:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 8000852:	2200      	movs	r2, #0
 8000854:	e7f3      	b.n	800083e <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 8000856:	bf00      	nop
 8000858:	20017450 	.word	0x20017450
 800085c:	2001744c 	.word	0x2001744c
 8000860:	2001744e 	.word	0x2001744e

08000864 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 8000864:	b570      	push	{r4, r5, r6, lr}
 8000866:	460d      	mov	r5, r1
 8000868:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 800086a:	b935      	cbnz	r5, 800087a <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 800086c:	4b09      	ldr	r3, [pc, #36]	; (8000894 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 800086e:	4a0a      	ldr	r2, [pc, #40]	; (8000898 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 8000870:	480a      	ldr	r0, [pc, #40]	; (800089c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 8000872:	f240 21d2 	movw	r1, #722	; 0x2d2
 8000876:	f01e fe4d 	bl	801f514 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 800087a:	e9c0 520f 	strd	r5, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 800087e:	4b08      	ldr	r3, [pc, #32]	; (80008a0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 8000880:	3a00      	subs	r2, #0
 8000882:	bf18      	it	ne
 8000884:	2201      	movne	r2, #1
 8000886:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 8000888:	6803      	ldr	r3, [r0, #0]
    }
 800088a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setAnimationStorage(animationStorage);
 800088e:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8000892:	4718      	bx	r3
 8000894:	080207bc 	.word	0x080207bc
 8000898:	080207f4 	.word	0x080207f4
 800089c:	08020842 	.word	0x08020842
 80008a0:	20017456 	.word	0x20017456

080008a4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 80008a4:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 80008a6:	4b09      	ldr	r3, [pc, #36]	; (80008cc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 80008a8:	881b      	ldrh	r3, [r3, #0]
 80008aa:	428b      	cmp	r3, r1
 80008ac:	d803      	bhi.n	80008b6 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 80008ae:	4b08      	ldr	r3, [pc, #32]	; (80008d0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 80008b0:	881b      	ldrh	r3, [r3, #0]
 80008b2:	4293      	cmp	r3, r2
 80008b4:	d905      	bls.n	80008c2 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 80008b6:	4b07      	ldr	r3, [pc, #28]	; (80008d4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 80008b8:	4a07      	ldr	r2, [pc, #28]	; (80008d8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 80008ba:	4808      	ldr	r0, [pc, #32]	; (80008dc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 80008bc:	219e      	movs	r1, #158	; 0x9e
 80008be:	f01e fe29 	bl	801f514 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 80008c2:	4b07      	ldr	r3, [pc, #28]	; (80008e0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 80008c4:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 80008c6:	4b07      	ldr	r3, [pc, #28]	; (80008e4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 80008c8:	801a      	strh	r2, [r3, #0]
    }
 80008ca:	bd08      	pop	{r3, pc}
 80008cc:	2001744c 	.word	0x2001744c
 80008d0:	2001744e 	.word	0x2001744e
 80008d4:	08020887 	.word	0x08020887
 80008d8:	080208ea 	.word	0x080208ea
 80008dc:	08020842 	.word	0x08020842
 80008e0:	20017452 	.word	0x20017452
 80008e4:	20017454 	.word	0x20017454

080008e8 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 80008e8:	2101      	movs	r1, #1
{
 80008ea:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 80008ec:	2200      	movs	r2, #0
 80008ee:	4608      	mov	r0, r1
 80008f0:	f006 fea2 	bl	8007638 <osSemaphoreNew>
 80008f4:	4b0a      	ldr	r3, [pc, #40]	; (8000920 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 80008f6:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 80008f8:	b928      	cbnz	r0, 8000906 <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 80008fa:	4b0a      	ldr	r3, [pc, #40]	; (8000924 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 80008fc:	4a0a      	ldr	r2, [pc, #40]	; (8000928 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 80008fe:	2129      	movs	r1, #41	; 0x29

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000900:	480a      	ldr	r0, [pc, #40]	; (800092c <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8000902:	f01e fe07 	bl	801f514 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8000906:	2200      	movs	r2, #0
 8000908:	2104      	movs	r1, #4
 800090a:	2001      	movs	r0, #1
 800090c:	f006 ff5a 	bl	80077c4 <osMessageQueueNew>
 8000910:	4b07      	ldr	r3, [pc, #28]	; (8000930 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8000912:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000914:	b918      	cbnz	r0, 800091e <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8000916:	4b07      	ldr	r3, [pc, #28]	; (8000934 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8000918:	4a03      	ldr	r2, [pc, #12]	; (8000928 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 800091a:	212d      	movs	r1, #45	; 0x2d
 800091c:	e7f0      	b.n	8000900 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 800091e:	bd08      	pop	{r3, pc}
 8000920:	2000019c 	.word	0x2000019c
 8000924:	08020a08 	.word	0x08020a08
 8000928:	08020a51 	.word	0x08020a51
 800092c:	08020a80 	.word	0x08020a80
 8000930:	20000198 	.word	0x20000198
 8000934:	08020ace 	.word	0x08020ace

08000938 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8000938:	4b02      	ldr	r3, [pc, #8]	; (8000944 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 800093a:	f04f 31ff 	mov.w	r1, #4294967295
 800093e:	6818      	ldr	r0, [r3, #0]
 8000940:	f006 bed0 	b.w	80076e4 <osSemaphoreAcquire>
 8000944:	2000019c 	.word	0x2000019c

08000948 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8000948:	4b01      	ldr	r3, [pc, #4]	; (8000950 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 800094a:	6818      	ldr	r0, [r3, #0]
 800094c:	f006 bf04 	b.w	8007758 <osSemaphoreRelease>
 8000950:	2000019c 	.word	0x2000019c

08000954 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8000954:	4b02      	ldr	r3, [pc, #8]	; (8000960 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8000956:	2100      	movs	r1, #0
 8000958:	6818      	ldr	r0, [r3, #0]
 800095a:	f006 bec3 	b.w	80076e4 <osSemaphoreAcquire>
 800095e:	bf00      	nop
 8000960:	2000019c 	.word	0x2000019c

08000964 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 8000964:	f7ff bff0 	b.w	8000948 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08000968 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8000968:	4803      	ldr	r0, [pc, #12]	; (8000978 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 800096a:	4904      	ldr	r1, [pc, #16]	; (800097c <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 800096c:	6800      	ldr	r0, [r0, #0]
 800096e:	2300      	movs	r3, #0
 8000970:	461a      	mov	r2, r3
 8000972:	f006 bf6d 	b.w	8007850 <osMessageQueuePut>
 8000976:	bf00      	nop
 8000978:	20000198 	.word	0x20000198
 800097c:	20000004 	.word	0x20000004

08000980 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8000980:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8000982:	4c08      	ldr	r4, [pc, #32]	; (80009a4 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8000984:	2300      	movs	r3, #0
 8000986:	461a      	mov	r2, r3
 8000988:	a901      	add	r1, sp, #4
 800098a:	6820      	ldr	r0, [r4, #0]
 800098c:	f006 ffa2 	bl	80078d4 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8000990:	6820      	ldr	r0, [r4, #0]
 8000992:	f04f 33ff 	mov.w	r3, #4294967295
 8000996:	2200      	movs	r2, #0
 8000998:	a901      	add	r1, sp, #4
 800099a:	f006 ff9b 	bl	80078d4 <osMessageQueueGet>
}
 800099e:	b002      	add	sp, #8
 80009a0:	bd10      	pop	{r4, pc}
 80009a2:	bf00      	nop
 80009a4:	20000198 	.word	0x20000198

080009a8 <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 80009a8:	6803      	ldr	r3, [r0, #0]
 80009aa:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80009ac:	4718      	bx	r3

080009ae <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
 80009ae:	2001      	movs	r0, #1
 80009b0:	4770      	bx	lr

080009b2 <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 80009b2:	6803      	ldr	r3, [r0, #0]
 80009b4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80009b6:	4718      	bx	r3

080009b8 <_ZN8STM32DMA10initializeEv>:
    /* Disable DMA2D global Interrupt */
    NVIC_DisableIRQ(DMA2D_IRQn);
}

void STM32DMA::initialize()
{
 80009b8:	b082      	sub	sp, #8
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 80009ba:	2300      	movs	r3, #0
 80009bc:	9301      	str	r3, [sp, #4]
 80009be:	4b0d      	ldr	r3, [pc, #52]	; (80009f4 <_ZN8STM32DMA10initializeEv+0x3c>)
 80009c0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80009c2:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 80009c6:	631a      	str	r2, [r3, #48]	; 0x30
 80009c8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80009ca:	f402 0200 	and.w	r2, r2, #8388608	; 0x800000
 80009ce:	9201      	str	r2, [sp, #4]
 80009d0:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
 80009d2:	691a      	ldr	r2, [r3, #16]
 80009d4:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 80009d8:	611a      	str	r2, [r3, #16]
    __HAL_RCC_DMA2D_RELEASE_RESET();
 80009da:	691a      	ldr	r2, [r3, #16]
 80009dc:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 80009e0:	611a      	str	r2, [r3, #16]

    /* Add transfer complete callback function */
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 80009e2:	4b05      	ldr	r3, [pc, #20]	; (80009f8 <_ZN8STM32DMA10initializeEv+0x40>)
 80009e4:	4a05      	ldr	r2, [pc, #20]	; (80009fc <_ZN8STM32DMA10initializeEv+0x44>)
 80009e6:	611a      	str	r2, [r3, #16]
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80009e8:	4b05      	ldr	r3, [pc, #20]	; (8000a00 <_ZN8STM32DMA10initializeEv+0x48>)
 80009ea:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80009ee:	609a      	str	r2, [r3, #8]

    /* Enable DMA2D global Interrupt */
    NVIC_EnableIRQ(DMA2D_IRQn);
}
 80009f0:	b002      	add	sp, #8
 80009f2:	4770      	bx	lr
 80009f4:	40023800 	.word	0x40023800
 80009f8:	20006344 	.word	0x20006344
 80009fc:	08000a45 	.word	0x08000a45
 8000a00:	e000e100 	.word	0xe000e100

08000a04 <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 8000a04:	f240 30ef 	movw	r0, #1007	; 0x3ef
 8000a08:	4770      	bx	lr
	...

08000a0c <_ZN8STM32DMAD1Ev>:
STM32DMA::~STM32DMA()
 8000a0c:	4b05      	ldr	r3, [pc, #20]	; (8000a24 <_ZN8STM32DMAD1Ev+0x18>)
 8000a0e:	6003      	str	r3, [r0, #0]
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000a10:	4b05      	ldr	r3, [pc, #20]	; (8000a28 <_ZN8STM32DMAD1Ev+0x1c>)
 8000a12:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8000a16:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8000a1a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8000a1e:	f3bf 8f6f 	isb	sy
}
 8000a22:	4770      	bx	lr
 8000a24:	08020c6c 	.word	0x08020c6c
 8000a28:	e000e100 	.word	0xe000e100

08000a2c <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
 8000a2c:	b510      	push	{r4, lr}
 8000a2e:	4604      	mov	r4, r0
}
 8000a30:	f44f 615a 	mov.w	r1, #3488	; 0xda0
 8000a34:	f7ff ffea 	bl	8000a0c <_ZN8STM32DMAD1Ev>
 8000a38:	4620      	mov	r0, r4
 8000a3a:	f01e fd3c 	bl	801f4b6 <_ZdlPvj>
 8000a3e:	4620      	mov	r0, r4
 8000a40:	bd10      	pop	{r4, pc}
	...

08000a44 <DMA2D_XferCpltCallback>:
        return instance;
 8000a44:	4b02      	ldr	r3, [pc, #8]	; (8000a50 <DMA2D_XferCpltCallback+0xc>)
 8000a46:	681b      	ldr	r3, [r3, #0]
 8000a48:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 8000a4a:	6803      	ldr	r3, [r0, #0]
 8000a4c:	695b      	ldr	r3, [r3, #20]
 8000a4e:	4718      	bx	r3
 8000a50:	20017458 	.word	0x20017458

08000a54 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8000a54:	b570      	push	{r4, r5, r6, lr}
 8000a56:	4604      	mov	r4, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 8000a58:	4625      	mov	r5, r4
 8000a5a:	4b0a      	ldr	r3, [pc, #40]	; (8000a84 <_ZN8STM32DMAC1Ev+0x30>)
 8000a5c:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8000a5e:	2600      	movs	r6, #0
 8000a60:	6060      	str	r0, [r4, #4]
 8000a62:	7226      	strb	r6, [r4, #8]
 8000a64:	7266      	strb	r6, [r4, #9]
 8000a66:	f845 3b20 	str.w	r3, [r5], #32
 8000a6a:	2260      	movs	r2, #96	; 0x60
 8000a6c:	4629      	mov	r1, r5
 8000a6e:	f00a f86f 	bl	800ab50 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 8000a72:	f504 635a 	add.w	r3, r4, #3488	; 0xda0
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 8000a76:	60ee      	str	r6, [r5, #12]
 8000a78:	3524      	adds	r5, #36	; 0x24
 8000a7a:	42ab      	cmp	r3, r5
 8000a7c:	d1fb      	bne.n	8000a76 <_ZN8STM32DMAC1Ev+0x22>
}
 8000a7e:	4620      	mov	r0, r4
 8000a80:	bd70      	pop	{r4, r5, r6, pc}
 8000a82:	bf00      	nop
 8000a84:	08020c6c 	.word	0x08020c6c

08000a88 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 8000a88:	b508      	push	{r3, lr}
    switch (format)
 8000a8a:	290b      	cmp	r1, #11
 8000a8c:	d80b      	bhi.n	8000aa6 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1e>
 8000a8e:	e8df f001 	tbb	[pc, r1]
 8000a92:	0612      	.short	0x0612
 8000a94:	0a0a0a10 	.word	0x0a0a0a10
 8000a98:	0808080a 	.word	0x0808080a
 8000a9c:	0808      	.short	0x0808
 8000a9e:	2001      	movs	r0, #1
}
 8000aa0:	bd08      	pop	{r3, pc}
        dma2dColorMode = DMA2D_INPUT_L8;
 8000aa2:	2005      	movs	r0, #5
        break;
 8000aa4:	e7fc      	b.n	8000aa0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        assert(0 && "Unsupported Format!");
 8000aa6:	4b05      	ldr	r3, [pc, #20]	; (8000abc <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 8000aa8:	4a05      	ldr	r2, [pc, #20]	; (8000ac0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 8000aaa:	4806      	ldr	r0, [pc, #24]	; (8000ac4 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x3c>)
 8000aac:	2167      	movs	r1, #103	; 0x67
 8000aae:	f01e fd31 	bl	801f514 <__assert_func>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 8000ab2:	2000      	movs	r0, #0
 8000ab4:	e7f4      	b.n	8000aa0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_INPUT_RGB565;
 8000ab6:	2002      	movs	r0, #2
    return dma2dColorMode;
 8000ab8:	e7f2      	b.n	8000aa0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 8000aba:	bf00      	nop
 8000abc:	08020b10 	.word	0x08020b10
 8000ac0:	08020b2b 	.word	0x08020b2b
 8000ac4:	08020b75 	.word	0x08020b75

08000ac8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 8000ac8:	b508      	push	{r3, lr}
    switch (format)
 8000aca:	290a      	cmp	r1, #10
 8000acc:	d809      	bhi.n	8000ae2 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1a>
 8000ace:	e8df f001 	tbb	[pc, r1]
 8000ad2:	0610      	.short	0x0610
 8000ad4:	0808080e 	.word	0x0808080e
 8000ad8:	06060608 	.word	0x06060608
 8000adc:	06          	.byte	0x06
 8000add:	00          	.byte	0x00
 8000ade:	2001      	movs	r0, #1
}
 8000ae0:	bd08      	pop	{r3, pc}
        assert(0 && "Unsupported Format!");
 8000ae2:	4b05      	ldr	r3, [pc, #20]	; (8000af8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x30>)
 8000ae4:	4a05      	ldr	r2, [pc, #20]	; (8000afc <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 8000ae6:	4806      	ldr	r0, [pc, #24]	; (8000b00 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 8000ae8:	2188      	movs	r1, #136	; 0x88
 8000aea:	f01e fd13 	bl	801f514 <__assert_func>
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 8000aee:	2000      	movs	r0, #0
 8000af0:	e7f6      	b.n	8000ae0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 8000af2:	2002      	movs	r0, #2
    return dma2dColorMode;
 8000af4:	e7f4      	b.n	8000ae0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 8000af6:	bf00      	nop
 8000af8:	08020b10 	.word	0x08020b10
 8000afc:	08020bc1 	.word	0x08020bc1
 8000b00:	08020b75 	.word	0x08020b75

08000b04 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
 * BLIT_OP_COPY_ARGB8888_WITH_ALPHA
 * BLIT_OP_COPY_A4
 * BLIT_OP_COPY_A8
 */
void STM32DMA::setupDataCopy(const BlitOp& blitOp)
{
 8000b04:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000b08:	7f4f      	ldrb	r7, [r1, #29]
{
 8000b0a:	460c      	mov	r4, r1
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000b0c:	4639      	mov	r1, r7
{
 8000b0e:	4681      	mov	r9, r0
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000b10:	f7ff ffba 	bl	8000a88 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000b14:	f894 801e 	ldrb.w	r8, [r4, #30]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000b18:	4605      	mov	r5, r0
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000b1a:	4641      	mov	r1, r8
 8000b1c:	4648      	mov	r0, r9
 8000b1e:	f7ff ffb3 	bl	8000a88 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000b22:	4641      	mov	r1, r8
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000b24:	4606      	mov	r6, r0
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000b26:	4648      	mov	r0, r9
 8000b28:	f7ff ffce 	bl	8000ac8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000b2c:	8aa1      	ldrh	r1, [r4, #20]
 8000b2e:	8b62      	ldrh	r2, [r4, #26]
 8000b30:	4b42      	ldr	r3, [pc, #264]	; (8000c3c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000b32:	1a52      	subs	r2, r2, r1
 8000b34:	641a      	str	r2, [r3, #64]	; 0x40

    /* DMA2D BGOR register configuration */
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000b36:	619a      	str	r2, [r3, #24]

    /* DMA2D FGOR register configuration */
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 8000b38:	8b22      	ldrh	r2, [r4, #24]
 8000b3a:	1a52      	subs	r2, r2, r1
 8000b3c:	611a      	str	r2, [r3, #16]

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000b3e:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000b40:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000b42:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000b46:	645a      	str	r2, [r3, #68]	; 0x44

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000b48:	6920      	ldr	r0, [r4, #16]

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000b4a:	6862      	ldr	r2, [r4, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000b4c:	63d8      	str	r0, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000b4e:	60da      	str	r2, [r3, #12]

    switch (blitOp.operation)
 8000b50:	6821      	ldr	r1, [r4, #0]
    {
    case BLIT_OP_COPY_A4:
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b52:	f894 c01c 	ldrb.w	ip, [r4, #28]
    switch (blitOp.operation)
 8000b56:	2980      	cmp	r1, #128	; 0x80
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b58:	ea4f 620c 	mov.w	r2, ip, lsl #24
    switch (blitOp.operation)
 8000b5c:	d026      	beq.n	8000bac <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa8>
 8000b5e:	d810      	bhi.n	8000b82 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x7e>
 8000b60:	2920      	cmp	r1, #32
 8000b62:	ea45 0402 	orr.w	r4, r5, r2
 8000b66:	d061      	beq.n	8000c2c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
 8000b68:	2940      	cmp	r1, #64	; 0x40
 8000b6a:	d05f      	beq.n	8000c2c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
 8000b6c:	2904      	cmp	r1, #4
 8000b6e:	d05d      	beq.n	8000c2c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
        break;
    default: /* BLIT_OP_COPY */
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b70:	4b32      	ldr	r3, [pc, #200]	; (8000c3c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000b72:	432a      	orrs	r2, r5
 8000b74:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000

        /* Perform pixel-format-conversion (PFC) If Bitmap format is not same format as framebuffer format */
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000b78:	4547      	cmp	r7, r8
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b7a:	61da      	str	r2, [r3, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000b7c:	d05a      	beq.n	8000c34 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x130>
        {
            /* Start DMA2D : PFC Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
 8000b7e:	4a30      	ldr	r2, [pc, #192]	; (8000c40 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 8000b80:	e040      	b.n	8000c04 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
    switch (blitOp.operation)
 8000b82:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
 8000b86:	d007      	beq.n	8000b98 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x94>
 8000b88:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 8000b8c:	d1f0      	bne.n	8000b70 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x6c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b8e:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8000b92:	f042 0209 	orr.w	r2, r2, #9
 8000b96:	e003      	b.n	8000ba0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b98:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8000b9c:	f042 020a 	orr.w	r2, r2, #10
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000ba0:	61da      	str	r2, [r3, #28]
     *
     * @return The result of the operation.
     */
    operator uint32_t() const
    {
        return color;
 8000ba2:	68e2      	ldr	r2, [r4, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8000ba4:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000ba6:	625e      	str	r6, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000ba8:	6158      	str	r0, [r3, #20]
 8000baa:	e02a      	b.n	8000c02 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfe>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 8000bac:	68a4      	ldr	r4, [r4, #8]
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000bae:	432a      	orrs	r2, r5
 8000bb0:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 8000bb4:	1d21      	adds	r1, r4, #4
 8000bb6:	62d9      	str	r1, [r3, #44]	; 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000bb8:	61da      	str	r2, [r3, #28]
            switch ((Bitmap::ClutFormat)palette->format)
 8000bba:	7822      	ldrb	r2, [r4, #0]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000bbc:	625e      	str	r6, [r3, #36]	; 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000bbe:	6158      	str	r0, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
 8000bc0:	b142      	cbz	r2, 8000bd4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd0>
 8000bc2:	2a01      	cmp	r2, #1
 8000bc4:	d021      	beq.n	8000c0a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x106>
                assert(0 && "Unsupported format");
 8000bc6:	4b1f      	ldr	r3, [pc, #124]	; (8000c44 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x140>)
 8000bc8:	4a1f      	ldr	r2, [pc, #124]	; (8000c48 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x144>)
 8000bca:	4820      	ldr	r0, [pc, #128]	; (8000c4c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x148>)
 8000bcc:	f44f 7189 	mov.w	r1, #274	; 0x112
 8000bd0:	f01e fca0 	bl	801f514 <__assert_func>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000bd4:	69da      	ldr	r2, [r3, #28]
 8000bd6:	8861      	ldrh	r1, [r4, #2]
 8000bd8:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 8000bdc:	3901      	subs	r1, #1
 8000bde:	f022 0210 	bic.w	r2, r2, #16
 8000be2:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8000be6:	61da      	str	r2, [r3, #28]
            bool blend = true;
 8000be8:	2001      	movs	r0, #1
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 8000bea:	4b14      	ldr	r3, [pc, #80]	; (8000c3c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000bec:	69da      	ldr	r2, [r3, #28]
 8000bee:	f042 0220 	orr.w	r2, r2, #32
 8000bf2:	61da      	str	r2, [r3, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 8000bf4:	69da      	ldr	r2, [r3, #28]
 8000bf6:	0692      	lsls	r2, r2, #26
 8000bf8:	d4fc      	bmi.n	8000bf4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf0>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 8000bfa:	2210      	movs	r2, #16
 8000bfc:	609a      	str	r2, [r3, #8]
            if(blend)
 8000bfe:	2800      	cmp	r0, #0
 8000c00:	d0bd      	beq.n	8000b7e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x7a>
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 8000c02:	4a13      	ldr	r2, [pc, #76]	; (8000c50 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14c>)
        }
        else
        {
            /* Start DMA2D : M2M Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8000c04:	601a      	str	r2, [r3, #0]
        }
        break;
    }
}
 8000c06:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000c0a:	8862      	ldrh	r2, [r4, #2]
 8000c0c:	69d9      	ldr	r1, [r3, #28]
 8000c0e:	1e54      	subs	r4, r2, #1
 8000c10:	f421 427f 	bic.w	r2, r1, #65280	; 0xff00
 8000c14:	f022 0210 	bic.w	r2, r2, #16
 8000c18:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
                if(blitOp.alpha == 255)
 8000c1c:	f1bc 00ff 	subs.w	r0, ip, #255	; 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000c20:	f042 0210 	orr.w	r2, r2, #16
                if(blitOp.alpha == 255)
 8000c24:	bf18      	it	ne
 8000c26:	2001      	movne	r0, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000c28:	61da      	str	r2, [r3, #28]
                break;
 8000c2a:	e7de      	b.n	8000bea <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe6>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000c2c:	f444 3400 	orr.w	r4, r4, #131072	; 0x20000
 8000c30:	61dc      	str	r4, [r3, #28]
 8000c32:	e7b8      	b.n	8000ba6 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa2>
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8000c34:	f240 2201 	movw	r2, #513	; 0x201
 8000c38:	e7e4      	b.n	8000c04 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
 8000c3a:	bf00      	nop
 8000c3c:	4002b000 	.word	0x4002b000
 8000c40:	00010201 	.word	0x00010201
 8000c44:	08020c0c 	.word	0x08020c0c
 8000c48:	08020c26 	.word	0x08020c26
 8000c4c:	08020b75 	.word	0x08020b75
 8000c50:	00020201 	.word	0x00020201

08000c54 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
 8000c54:	b570      	push	{r4, r5, r6, lr}
 8000c56:	460c      	mov	r4, r1
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000c58:	7f89      	ldrb	r1, [r1, #30]
 8000c5a:	f7ff ff35 	bl	8000ac8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000c5e:	8aa6      	ldrh	r6, [r4, #20]
 8000c60:	8ae1      	ldrh	r1, [r4, #22]

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c62:	8b62      	ldrh	r2, [r4, #26]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000c64:	4b15      	ldr	r3, [pc, #84]	; (8000cbc <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x68>)
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c66:	6925      	ldr	r5, [r4, #16]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000c68:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000c6a:	ea41 4106 	orr.w	r1, r1, r6, lsl #16
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c6e:	1b92      	subs	r2, r2, r6
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000c70:	6459      	str	r1, [r3, #68]	; 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c72:	63dd      	str	r5, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c74:	641a      	str	r2, [r3, #64]	; 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 8000c76:	6826      	ldr	r6, [r4, #0]
 8000c78:	68e1      	ldr	r1, [r4, #12]
 8000c7a:	2e08      	cmp	r6, #8
 8000c7c:	d10d      	bne.n	8000c9a <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x46>
    {
        /* DMA2D BGOR register configuration */
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c7e:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c80:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000c82:	6258      	str	r0, [r3, #36]	; 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8000c84:	7f20      	ldrb	r0, [r4, #28]
 8000c86:	4a0e      	ldr	r2, [pc, #56]	; (8000cc0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x6c>)
 8000c88:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 8000c8c:	61da      	str	r2, [r3, #28]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
 8000c8e:	4a0d      	ldr	r2, [pc, #52]	; (8000cc4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x70>)
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8000c90:	6219      	str	r1, [r3, #32]
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c92:	615d      	str	r5, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c94:	60dd      	str	r5, [r3, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8000c96:	601a      	str	r2, [r3, #0]
    }
}
 8000c98:	bd70      	pop	{r4, r5, r6, pc}
        WRITE_REG(DMA2D->FGOR, 0);
 8000c9a:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8000c9c:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 8000c9e:	611a      	str	r2, [r3, #16]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
 8000ca0:	0948      	lsrs	r0, r1, #5
 8000ca2:	0a0a      	lsrs	r2, r1, #8
 8000ca4:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8000ca8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8000cac:	4302      	orrs	r2, r0
 8000cae:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8000cb2:	430a      	orrs	r2, r1
 8000cb4:	639a      	str	r2, [r3, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8000cb6:	4a04      	ldr	r2, [pc, #16]	; (8000cc8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x74>)
 8000cb8:	e7ed      	b.n	8000c96 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x42>
 8000cba:	bf00      	nop
 8000cbc:	4002b000 	.word	0x4002b000
 8000cc0:	00010009 	.word	0x00010009
 8000cc4:	00020201 	.word	0x00020201
 8000cc8:	00030201 	.word	0x00030201

08000ccc <_ZN8touchgfx5paint6rgb5658tearDownEv>:
    * @brief Waits until previous DMA drawing operation has finished
    */
    void tearDown()
    {
        /* Wait for DMA2D to finish last run */
        while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8000ccc:	4b03      	ldr	r3, [pc, #12]	; (8000cdc <_ZN8touchgfx5paint6rgb5658tearDownEv+0x10>)
 8000cce:	681a      	ldr	r2, [r3, #0]
 8000cd0:	07d2      	lsls	r2, r2, #31
 8000cd2:	d4fc      	bmi.n	8000cce <_ZN8touchgfx5paint6rgb5658tearDownEv+0x2>

        /* Clear transfer flags */
        WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC|DMA2D_FLAG_CE|DMA2D_FLAG_TE);
 8000cd4:	2223      	movs	r2, #35	; 0x23
 8000cd6:	609a      	str	r2, [r3, #8]
    }
 8000cd8:	4770      	bx	lr
 8000cda:	bf00      	nop
 8000cdc:	4002b000 	.word	0x4002b000

08000ce0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
    *
    * @brief Renders Canvas Widget chunks using DMA.
    * This functions will not generate an interrupt, and will not affect the DMA queue.
    */
    void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
    {
 8000ce0:	b530      	push	{r4, r5, lr}
        /* Wait for DMA2D to finish last run */
        while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8000ce2:	4c0f      	ldr	r4, [pc, #60]	; (8000d20 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x40>)
 8000ce4:	6825      	ldr	r5, [r4, #0]
 8000ce6:	07ed      	lsls	r5, r5, #31
 8000ce8:	d4fc      	bmi.n	8000ce4 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4>

        /* Clear transfer flags */
        WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC|DMA2D_FLAG_CE|DMA2D_FLAG_TE);
 8000cea:	2523      	movs	r5, #35	; 0x23

        /* DMA2D OPFCCR register configuration */
        WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

        /* Configure DMA2D data size */
        WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000cec:	0409      	lsls	r1, r1, #16
        WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC|DMA2D_FLAG_CE|DMA2D_FLAG_TE);
 8000cee:	60a5      	str	r5, [r4, #8]
        WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000cf0:	f041 0101 	orr.w	r1, r1, #1
        WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8000cf4:	2502      	movs	r5, #2

        /* Configure DMA2D destination address */
        WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

        if (alpha < 0xFF)
 8000cf6:	2bff      	cmp	r3, #255	; 0xff
        WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8000cf8:	6365      	str	r5, [r4, #52]	; 0x34
        WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000cfa:	6461      	str	r1, [r4, #68]	; 0x44
        WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 8000cfc:	63e0      	str	r0, [r4, #60]	; 0x3c
        if (alpha < 0xFF)
 8000cfe:	d00a      	beq.n	8000d16 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x36>
        {
            /* Write DMA2D BGPFCCR register */
            WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));

            /* Write DMA2D FGPFCCR register */
            WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8000d00:	4908      	ldr	r1, [pc, #32]	; (8000d24 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x44>)
            WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000d02:	6265      	str	r5, [r4, #36]	; 0x24
            WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8000d04:	ea41 6303 	orr.w	r3, r1, r3, lsl #24
 8000d08:	61e3      	str	r3, [r4, #28]

            /* Configure DMA2D source address */
            WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);

            /* Enable the Peripheral and Enable the transfer complete interrupt */
            WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
 8000d0a:	4b07      	ldr	r3, [pc, #28]	; (8000d28 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x48>)
            WRITE_REG(DMA2D->FGCOLR, color);
 8000d0c:	6222      	str	r2, [r4, #32]
            WRITE_REG(DMA2D->BGMAR, (uint32_t)ptr);
 8000d0e:	6160      	str	r0, [r4, #20]
            WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);
 8000d10:	60e0      	str	r0, [r4, #12]

            /* Set color */
            WRITE_REG(DMA2D->OCOLR, color565);

            /* Enable the Peripheral and Enable the transfer complete interrupt */
            WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 8000d12:	6023      	str	r3, [r4, #0]
        }
    }
 8000d14:	bd30      	pop	{r4, r5, pc}
            WRITE_REG(DMA2D->FGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8000d16:	61e5      	str	r5, [r4, #28]
            WRITE_REG(DMA2D->OCOLR, color565);
 8000d18:	9b03      	ldr	r3, [sp, #12]
 8000d1a:	63a3      	str	r3, [r4, #56]	; 0x38
            WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 8000d1c:	4b03      	ldr	r3, [pc, #12]	; (8000d2c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4c>)
 8000d1e:	e7f8      	b.n	8000d12 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x32>
 8000d20:	4002b000 	.word	0x4002b000
 8000d24:	00010009 	.word	0x00010009
 8000d28:	00020001 	.word	0x00020001
 8000d2c:	00030001 	.word	0x00030001

08000d30 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8000d30:	2001      	movs	r0, #1
 8000d32:	4770      	bx	lr

08000d34 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8000d34:	2038      	movs	r0, #56	; 0x38
 8000d36:	4770      	bx	lr

08000d38 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 8000d38:	2338      	movs	r3, #56	; 0x38
 8000d3a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000d3e:	3008      	adds	r0, #8
 8000d40:	4770      	bx	lr

08000d42 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 8000d42:	2338      	movs	r3, #56	; 0x38
 8000d44:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000d48:	3008      	adds	r0, #8
 8000d4a:	4770      	bx	lr

08000d4c <_ZNK8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8000d4c:	2001      	movs	r0, #1
 8000d4e:	4770      	bx	lr

08000d50 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8000d50:	f241 7078 	movw	r0, #6008	; 0x1778
 8000d54:	4770      	bx	lr

08000d56 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000d56:	f241 7378 	movw	r3, #6008	; 0x1778
 8000d5a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000d5e:	3008      	adds	r0, #8
 8000d60:	4770      	bx	lr

08000d62 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000d62:	f241 7378 	movw	r3, #6008	; 0x1778
 8000d66:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000d6a:	3008      	adds	r0, #8
 8000d6c:	4770      	bx	lr

08000d6e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8000d6e:	2001      	movs	r0, #1
 8000d70:	4770      	bx	lr

08000d72 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8000d72:	2010      	movs	r0, #16
 8000d74:	4770      	bx	lr

08000d76 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000d76:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8000d7a:	3008      	adds	r0, #8
 8000d7c:	4770      	bx	lr

08000d7e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000d7e:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8000d82:	3008      	adds	r0, #8
 8000d84:	4770      	bx	lr

08000d86 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoScreen1ScreenNoTransition();
 8000d86:	4608      	mov	r0, r1
 8000d88:	f001 bb98 	b.w	80024bc <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>

08000d8c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8000d8c:	b510      	push	{r4, lr}
 8000d8e:	4b03      	ldr	r3, [pc, #12]	; (8000d9c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
 8000d90:	6003      	str	r3, [r0, #0]
 8000d92:	4604      	mov	r4, r0
 8000d94:	f008 fd47 	bl	8009826 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000d98:	4620      	mov	r0, r4
 8000d9a:	bd10      	pop	{r4, pc}
 8000d9c:	08020d24 	.word	0x08020d24

08000da0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
 8000da0:	b510      	push	{r4, lr}
 8000da2:	4604      	mov	r4, r0
 8000da4:	f7ff fff2 	bl	8000d8c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8000da8:	4620      	mov	r0, r4
 8000daa:	2140      	movs	r1, #64	; 0x40
 8000dac:	f01e fb83 	bl	801f4b6 <_ZdlPvj>
 8000db0:	4620      	mov	r0, r4
 8000db2:	bd10      	pop	{r4, pc}

08000db4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8000db4:	b510      	push	{r4, lr}
 8000db6:	4b03      	ldr	r3, [pc, #12]	; (8000dc4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000db8:	6003      	str	r3, [r0, #0]
 8000dba:	4604      	mov	r4, r0
 8000dbc:	f008 fd33 	bl	8009826 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000dc0:	4620      	mov	r0, r4
 8000dc2:	bd10      	pop	{r4, pc}
 8000dc4:	08020cf0 	.word	0x08020cf0

08000dc8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000dc8:	b510      	push	{r4, lr}
 8000dca:	4604      	mov	r4, r0
 8000dcc:	f7ff fff2 	bl	8000db4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000dd0:	4620      	mov	r0, r4
 8000dd2:	f44f 51bc 	mov.w	r1, #6016	; 0x1780
 8000dd6:	f01e fb6e 	bl	801f4b6 <_ZdlPvj>
 8000dda:	4620      	mov	r0, r4
 8000ddc:	bd10      	pop	{r4, pc}
	...

08000de0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8000de0:	b510      	push	{r4, lr}
 8000de2:	4b03      	ldr	r3, [pc, #12]	; (8000df0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000de4:	6003      	str	r3, [r0, #0]
 8000de6:	4604      	mov	r4, r0
 8000de8:	f008 fd1d 	bl	8009826 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000dec:	4620      	mov	r0, r4
 8000dee:	bd10      	pop	{r4, pc}
 8000df0:	08020cbc 	.word	0x08020cbc

08000df4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000df4:	b510      	push	{r4, lr}
 8000df6:	4604      	mov	r4, r0
 8000df8:	f7ff fff2 	bl	8000de0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000dfc:	4620      	mov	r0, r4
 8000dfe:	2118      	movs	r1, #24
 8000e00:	f01e fb59 	bl	801f4b6 <_ZdlPvj>
 8000e04:	4620      	mov	r0, r4
 8000e06:	bd10      	pop	{r4, pc}

08000e08 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8000e08:	b510      	push	{r4, lr}
 8000e0a:	4b09      	ldr	r3, [pc, #36]	; (8000e30 <_ZN12FrontendHeapD1Ev+0x28>)
 8000e0c:	6003      	str	r3, [r0, #0]
 8000e0e:	4604      	mov	r4, r0
 8000e10:	f500 50bd 	add.w	r0, r0, #6048	; 0x17a0
 8000e14:	300c      	adds	r0, #12
 8000e16:	f7ff ffb9 	bl	8000d8c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8000e1a:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 8000e1e:	f7ff ffc9 	bl	8000db4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000e22:	f104 0014 	add.w	r0, r4, #20
 8000e26:	f7ff ffdb 	bl	8000de0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000e2a:	4620      	mov	r0, r4
 8000e2c:	bd10      	pop	{r4, pc}
 8000e2e:	bf00      	nop
 8000e30:	08020d58 	.word	0x08020d58

08000e34 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8000e34:	b508      	push	{r3, lr}
 8000e36:	4802      	ldr	r0, [pc, #8]	; (8000e40 <__tcf_0+0xc>)
 8000e38:	f7ff ffe6 	bl	8000e08 <_ZN12FrontendHeapD1Ev>
 8000e3c:	bd08      	pop	{r3, pc}
 8000e3e:	bf00      	nop
 8000e40:	200001a4 	.word	0x200001a4

08000e44 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 8000e44:	b510      	push	{r4, lr}
 8000e46:	4604      	mov	r4, r0
 8000e48:	f7ff ffde 	bl	8000e08 <_ZN12FrontendHeapD1Ev>
 8000e4c:	4620      	mov	r0, r4
 8000e4e:	f641 1148 	movw	r1, #6472	; 0x1948
 8000e52:	f01e fb30 	bl	801f4b6 <_ZdlPvj>
 8000e56:	4620      	mov	r0, r4
 8000e58:	bd10      	pop	{r4, pc}
	...

08000e5c <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 8000e5c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8000e60:	f001 f8e6 	bl	8002030 <_ZN14BitmapDatabase11getInstanceEv>
 8000e64:	4605      	mov	r5, r0
 8000e66:	f001 f8e7 	bl	8002038 <_ZN14BitmapDatabase15getInstanceSizeEv>
 8000e6a:	2400      	movs	r4, #0
 8000e6c:	4601      	mov	r1, r0
 8000e6e:	4623      	mov	r3, r4
 8000e70:	4628      	mov	r0, r5
 8000e72:	4622      	mov	r2, r4
 8000e74:	9400      	str	r4, [sp, #0]
 8000e76:	f012 f9ff 	bl	8013278 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 8000e7a:	4b26      	ldr	r3, [pc, #152]	; (8000f14 <touchgfx_init+0xb8>)
 8000e7c:	4a26      	ldr	r2, [pc, #152]	; (8000f18 <touchgfx_init+0xbc>)
        static FrontendHeap instance;
 8000e7e:	4d27      	ldr	r5, [pc, #156]	; (8000f1c <touchgfx_init+0xc0>)
 8000e80:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 8000e82:	4620      	mov	r0, r4
 8000e84:	f003 fa02 	bl	800428c <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 8000e88:	4825      	ldr	r0, [pc, #148]	; (8000f20 <touchgfx_init+0xc4>)
 8000e8a:	f012 f95d 	bl	8013148 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8000e8e:	782b      	ldrb	r3, [r5, #0]
 8000e90:	f3bf 8f5b 	dmb	ish
 8000e94:	07db      	lsls	r3, r3, #31
 8000e96:	d437      	bmi.n	8000f08 <touchgfx_init+0xac>
 8000e98:	4628      	mov	r0, r5
 8000e9a:	f01e fb0e 	bl	801f4ba <__cxa_guard_acquire>
 8000e9e:	b398      	cbz	r0, 8000f08 <touchgfx_init+0xac>
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 8000ea0:	4c20      	ldr	r4, [pc, #128]	; (8000f24 <touchgfx_init+0xc8>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 8000ea2:	4b21      	ldr	r3, [pc, #132]	; (8000f28 <touchgfx_init+0xcc>)
 8000ea4:	6023      	str	r3, [r4, #0]
 8000ea6:	f104 082c 	add.w	r8, r4, #44	; 0x2c
 8000eaa:	f508 57bc 	add.w	r7, r8, #6016	; 0x1780
 8000eae:	f107 0644 	add.w	r6, r7, #68	; 0x44
 8000eb2:	f104 0014 	add.w	r0, r4, #20
 8000eb6:	6060      	str	r0, [r4, #4]
 8000eb8:	f8c4 8008 	str.w	r8, [r4, #8]
 8000ebc:	60e7      	str	r7, [r4, #12]
 8000ebe:	6126      	str	r6, [r4, #16]
 8000ec0:	f008 fcb2 	bl	8009828 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000ec4:	4b19      	ldr	r3, [pc, #100]	; (8000f2c <touchgfx_init+0xd0>)
 8000ec6:	6163      	str	r3, [r4, #20]
 8000ec8:	4640      	mov	r0, r8
 8000eca:	f008 fcad 	bl	8009828 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000ece:	4b18      	ldr	r3, [pc, #96]	; (8000f30 <touchgfx_init+0xd4>)
 8000ed0:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000ed2:	4638      	mov	r0, r7
 8000ed4:	f008 fca8 	bl	8009828 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000ed8:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8000edc:	4a15      	ldr	r2, [pc, #84]	; (8000f34 <touchgfx_init+0xd8>)
 8000ede:	f8c3 27ac 	str.w	r2, [r3, #1964]	; 0x7ac
 8000ee2:	f203 70ec 	addw	r0, r3, #2028	; 0x7ec
 8000ee6:	f003 fa4d 	bl	8004384 <_ZN5ModelC1Ev>
 8000eea:	4622      	mov	r2, r4
 8000eec:	f508 51be 	add.w	r1, r8, #6080	; 0x17c0
 8000ef0:	4630      	mov	r0, r6
 8000ef2:	f003 fa3d 	bl	8004370 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 8000ef6:	4630      	mov	r0, r6
 8000ef8:	f001 fae0 	bl	80024bc <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
        static FrontendHeap instance;
 8000efc:	480e      	ldr	r0, [pc, #56]	; (8000f38 <touchgfx_init+0xdc>)
 8000efe:	f01e fb27 	bl	801f550 <atexit>
 8000f02:	4628      	mov	r0, r5
 8000f04:	f01e fae5 	bl	801f4d2 <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 8000f08:	480c      	ldr	r0, [pc, #48]	; (8000f3c <touchgfx_init+0xe0>)
}
 8000f0a:	b002      	add	sp, #8
 8000f0c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8000f10:	f7ff bc3d 	b.w	800078e <_ZN11TouchGFXHAL10initializeEv>
 8000f14:	200174bc 	.word	0x200174bc
 8000f18:	2000290c 	.word	0x2000290c
 8000f1c:	200001a0 	.word	0x200001a0
 8000f20:	20000008 	.word	0x20000008
 8000f24:	200001a4 	.word	0x200001a4
 8000f28:	08020d58 	.word	0x08020d58
 8000f2c:	08020cbc 	.word	0x08020cbc
 8000f30:	08020cf0 	.word	0x08020cf0
 8000f34:	08020d24 	.word	0x08020d24
 8000f38:	08000e35 	.word	0x08000e35
 8000f3c:	20002890 	.word	0x20002890

08000f40 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 8000f40:	4801      	ldr	r0, [pc, #4]	; (8000f48 <touchgfx_taskEntry+0x8>)
 8000f42:	f7ff bc26 	b.w	8000792 <_ZN11TouchGFXHAL9taskEntryEv>
 8000f46:	bf00      	nop
 8000f48:	20002890 	.word	0x20002890

08000f4c <_GLOBAL__sub_I_touchgfx_init>:
}
 8000f4c:	b570      	push	{r4, r5, r6, lr}
{
public:

    STM32TouchController() {}
 8000f4e:	4c23      	ldr	r4, [pc, #140]	; (8000fdc <_GLOBAL__sub_I_touchgfx_init+0x90>)
static STM32DMA dma;
 8000f50:	4e23      	ldr	r6, [pc, #140]	; (8000fe0 <_GLOBAL__sub_I_touchgfx_init+0x94>)
 8000f52:	4b24      	ldr	r3, [pc, #144]	; (8000fe4 <_GLOBAL__sub_I_touchgfx_init+0x98>)
static LCD16bpp display;
 8000f54:	4d24      	ldr	r5, [pc, #144]	; (8000fe8 <_GLOBAL__sub_I_touchgfx_init+0x9c>)
 8000f56:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 8000f58:	4630      	mov	r0, r6
 8000f5a:	f7ff fd7b 	bl	8000a54 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 8000f5e:	4628      	mov	r0, r5
 8000f60:	f015 fa94 	bl	801648c <_ZN8touchgfx8LCD16bppC1Ev>
          lastRenderMethod(HARDWARE)
 8000f64:	4b21      	ldr	r3, [pc, #132]	; (8000fec <_GLOBAL__sub_I_touchgfx_init+0xa0>)
        instance = this;
 8000f66:	4822      	ldr	r0, [pc, #136]	; (8000ff0 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
          lastRenderMethod(HARDWARE)
 8000f68:	60dc      	str	r4, [r3, #12]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000f6a:	4c22      	ldr	r4, [pc, #136]	; (8000ff4 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
        instance = this;
 8000f6c:	6003      	str	r3, [r0, #0]
          lastRenderMethod(HARDWARE)
 8000f6e:	2200      	movs	r2, #0
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000f70:	20f0      	movs	r0, #240	; 0xf0
          lastRenderMethod(HARDWARE)
 8000f72:	f44f 7180 	mov.w	r1, #256	; 0x100
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000f76:	8020      	strh	r0, [r4, #0]
          lastRenderMethod(HARDWARE)
 8000f78:	e9c3 1212 	strd	r1, r2, [r3, #72]	; 0x48
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000f7c:	4c1e      	ldr	r4, [pc, #120]	; (8000ff8 <_GLOBAL__sub_I_touchgfx_init+0xac>)
          lastRenderMethod(HARDWARE)
 8000f7e:	491f      	ldr	r1, [pc, #124]	; (8000ffc <_GLOBAL__sub_I_touchgfx_init+0xb0>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000f80:	8020      	strh	r0, [r4, #0]
          lastRenderMethod(HARDWARE)
 8000f82:	e9c3 1219 	strd	r1, r2, [r3, #100]	; 0x64
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000f86:	4c1e      	ldr	r4, [pc, #120]	; (8001000 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 8000f88:	861a      	strh	r2, [r3, #48]	; 0x30
          lastRenderMethod(HARDWARE)
 8000f8a:	f04f 7180 	mov.w	r1, #16777216	; 0x1000000
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000f8e:	f44f 70a0 	mov.w	r0, #320	; 0x140
          lastRenderMethod(HARDWARE)
 8000f92:	6759      	str	r1, [r3, #116]	; 0x74
 8000f94:	2101      	movs	r1, #1
 8000f96:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8000f9a:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8000f9e:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8000fa2:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
 8000fa6:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
 8000faa:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 8000fae:	e9c3 2214 	strd	r2, r2, [r3, #80]	; 0x50
 8000fb2:	e9c3 2216 	strd	r2, r2, [r3, #88]	; 0x58
 8000fb6:	661a      	str	r2, [r3, #96]	; 0x60
 8000fb8:	f883 206c 	strb.w	r2, [r3, #108]	; 0x6c
 8000fbc:	671a      	str	r2, [r3, #112]	; 0x70
 8000fbe:	e9c3 6501 	strd	r6, r5, [r3, #4]
 8000fc2:	f883 1078 	strb.w	r1, [r3, #120]	; 0x78
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000fc6:	8020      	strh	r0, [r4, #0]
 8000fc8:	4c0e      	ldr	r4, [pc, #56]	; (8001004 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8000fca:	f883 1034 	strb.w	r1, [r3, #52]	; 0x34
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000fce:	8020      	strh	r0, [r4, #0]
        DISPLAY_ROTATION = rotate0;
 8000fd0:	480d      	ldr	r0, [pc, #52]	; (8001008 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
 8000fd2:	7002      	strb	r2, [r0, #0]
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 8000fd4:	4a0d      	ldr	r2, [pc, #52]	; (800100c <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 8000fd6:	601a      	str	r2, [r3, #0]
}
 8000fd8:	bd70      	pop	{r4, r5, r6, pc}
 8000fda:	bf00      	nop
 8000fdc:	20001aec 	.word	0x20001aec
 8000fe0:	20001af0 	.word	0x20001af0
 8000fe4:	080207ac 	.word	0x080207ac
 8000fe8:	20002910 	.word	0x20002910
 8000fec:	20002890 	.word	0x20002890
 8000ff0:	20017458 	.word	0x20017458
 8000ff4:	2001744c 	.word	0x2001744c
 8000ff8:	20017452 	.word	0x20017452
 8000ffc:	01000001 	.word	0x01000001
 8001000:	2001744e 	.word	0x2001744e
 8001004:	20017454 	.word	0x20017454
 8001008:	20017450 	.word	0x20017450
 800100c:	08020938 	.word	0x08020938

08001010 <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
 8001010:	4801      	ldr	r0, [pc, #4]	; (8001018 <_GLOBAL__sub_D_touchgfx_init+0x8>)
 8001012:	f7ff bcfb 	b.w	8000a0c <_ZN8STM32DMAD1Ev>
 8001016:	bf00      	nop
 8001018:	20001af0 	.word	0x20001af0

0800101c <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800101c:	4b03      	ldr	r3, [pc, #12]	; (800102c <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
 800101e:	2290      	movs	r2, #144	; 0x90
 8001020:	f883 235a 	strb.w	r2, [r3, #858]	; 0x35a
 8001024:	f883 2358 	strb.w	r2, [r3, #856]	; 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 8001028:	4770      	bx	lr
 800102a:	bf00      	nop
 800102c:	e000e100 	.word	0xe000e100

08001030 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8001030:	4a09      	ldr	r2, [pc, #36]	; (8001058 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 8001032:	490a      	ldr	r1, [pc, #40]	; (800105c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 8001034:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 8001036:	480a      	ldr	r0, [pc, #40]	; (8001060 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8001038:	f3c3 030a 	ubfx	r3, r3, #0, #11
 800103c:	3b01      	subs	r3, #1
 800103e:	b29b      	uxth	r3, r3
 8001040:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 8001042:	6911      	ldr	r1, [r2, #16]
 8001044:	f3c1 010a 	ubfx	r1, r1, #0, #11
 8001048:	3901      	subs	r1, #1
 800104a:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 800104c:	6413      	str	r3, [r2, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 800104e:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8001050:	f043 0301 	orr.w	r3, r3, #1
 8001054:	6353      	str	r3, [r2, #52]	; 0x34
}
 8001056:	4770      	bx	lr
 8001058:	40016800 	.word	0x40016800
 800105c:	2000298c 	.word	0x2000298c
 8001060:	2000298a 	.word	0x2000298a

08001064 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 8001064:	4b01      	ldr	r3, [pc, #4]	; (800106c <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 8001066:	f8d3 00ac 	ldr.w	r0, [r3, #172]	; 0xac
}
 800106a:	4770      	bx	lr
 800106c:	40016800 	.word	0x40016800

08001070 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001070:	4b02      	ldr	r3, [pc, #8]	; (800107c <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8001072:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001074:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8001078:	625a      	str	r2, [r3, #36]	; 0x24
}
 800107a:	4770      	bx	lr
 800107c:	40016800 	.word	0x40016800

08001080 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 8001080:	b570      	push	{r4, r5, r6, lr}
 8001082:	4604      	mov	r4, r0
    HAL::initialize();
 8001084:	f008 fed7 	bl	8009e36 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 8001088:	6823      	ldr	r3, [r4, #0]
 800108a:	6e5d      	ldr	r5, [r3, #100]	; 0x64
 800108c:	f00e fed8 	bl	800fe40 <_ZN8touchgfx11Application11getInstanceEv>
 8001090:	4601      	mov	r1, r0
 8001092:	4620      	mov	r0, r4
 8001094:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 8001096:	6823      	ldr	r3, [r4, #0]
 8001098:	4a05      	ldr	r2, [pc, #20]	; (80010b0 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 800109a:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 800109e:	4620      	mov	r0, r4
 80010a0:	46ac      	mov	ip, r5
 80010a2:	2300      	movs	r3, #0
}
 80010a4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 80010a8:	f5a2 3116 	sub.w	r1, r2, #153600	; 0x25800
 80010ac:	4760      	bx	ip
 80010ae:	bf00      	nop
 80010b0:	d0025800 	.word	0xd0025800

080010b4 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 80010b4:	f008 bea6 	b.w	8009e04 <_ZN8touchgfx3HAL10beginFrameEv>

080010b8 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    if (frameBufferUpdatedThisFrame)
 80010b8:	f890 304b 	ldrb.w	r3, [r0, #75]	; 0x4b
 80010bc:	b113      	cbz	r3, 80010c4 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0xc>
        refreshRequested = true;
 80010be:	4b02      	ldr	r3, [pc, #8]	; (80010c8 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x10>)
 80010c0:	2201      	movs	r2, #1
 80010c2:	701a      	strb	r2, [r3, #0]
    HAL::endFrame();
 80010c4:	f008 beaa 	b.w	8009e1c <_ZN8touchgfx3HAL8endFrameEv>
 80010c8:	20002988 	.word	0x20002988

080010cc <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 80010cc:	f008 be64 	b.w	8009d98 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

080010d0 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 80010d0:	f008 bfbd 	b.w	800a04e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

080010d4 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80010d4:	4b03      	ldr	r3, [pc, #12]	; (80010e4 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
 80010d6:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80010da:	609a      	str	r2, [r3, #8]
 80010dc:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 80010e0:	609a      	str	r2, [r3, #8]
}
 80010e2:	4770      	bx	lr
 80010e4:	e000e100 	.word	0xe000e100

080010e8 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80010e8:	4b08      	ldr	r3, [pc, #32]	; (800110c <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
 80010ea:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80010ee:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 80010f2:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80010f6:	f3bf 8f6f 	isb	sy
 80010fa:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 80010fe:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 8001102:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001106:	f3bf 8f6f 	isb	sy
}
 800110a:	4770      	bx	lr
 800110c:	e000e100 	.word	0xe000e100

08001110 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 8001110:	b510      	push	{r4, lr}
        return instance;
 8001112:	4c14      	ldr	r4, [pc, #80]	; (8001164 <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
 8001114:	6823      	ldr	r3, [r4, #0]
 8001116:	b323      	cbz	r3, 8001162 <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 8001118:	4b13      	ldr	r3, [pc, #76]	; (8001168 <HAL_LTDC_LineEventCallback+0x58>)
 800111a:	4a14      	ldr	r2, [pc, #80]	; (800116c <HAL_LTDC_LineEventCallback+0x5c>)
 800111c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800111e:	8811      	ldrh	r1, [r2, #0]
 8001120:	428b      	cmp	r3, r1
 8001122:	d113      	bne.n	800114c <HAL_LTDC_LineEventCallback+0x3c>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 8001124:	4b12      	ldr	r3, [pc, #72]	; (8001170 <HAL_LTDC_LineEventCallback+0x60>)
 8001126:	8819      	ldrh	r1, [r3, #0]
 8001128:	f005 f874 	bl	8006214 <HAL_LTDC_ProgramLineEvent>
 800112c:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 800112e:	f892 3066 	ldrb.w	r3, [r2, #102]	; 0x66
 8001132:	3301      	adds	r3, #1
 8001134:	f882 3066 	strb.w	r3, [r2, #102]	; 0x66
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 8001138:	f7ff fc16 	bl	8000968 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 800113c:	6820      	ldr	r0, [r4, #0]
 800113e:	f009 fbb1 	bl	800a8a4 <_ZN8touchgfx3HAL16swapFrameBuffersEv>

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 8001142:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 8001146:	2000      	movs	r0, #0
 8001148:	f7ff bafa 	b.w	8000740 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 800114c:	f005 f862 	bl	8006214 <HAL_LTDC_ProgramLineEvent>
        return instance;
 8001150:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
 8001152:	6803      	ldr	r3, [r0, #0]
 8001154:	6a1b      	ldr	r3, [r3, #32]
 8001156:	4798      	blx	r3
    }
 8001158:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 800115c:	2000      	movs	r0, #0
 800115e:	f7ff baf0 	b.w	8000742 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 8001162:	bd10      	pop	{r4, pc}
 8001164:	20017458 	.word	0x20017458
 8001168:	40016800 	.word	0x40016800
 800116c:	2000298c 	.word	0x2000298c
 8001170:	2000298a 	.word	0x2000298a

08001174 <SPI5_Write>:
/**
  * @brief  Writes a byte to device.
  * @param  Value: value to be written
  */
static void SPI5_Write(uint16_t Value)
{
 8001174:	b507      	push	{r0, r1, r2, lr}
  HAL_StatusTypeDef status = HAL_OK;
  
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001176:	4b06      	ldr	r3, [pc, #24]	; (8001190 <SPI5_Write+0x1c>)
{
 8001178:	f8ad 0006 	strh.w	r0, [sp, #6]
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 800117c:	681b      	ldr	r3, [r3, #0]
 800117e:	4805      	ldr	r0, [pc, #20]	; (8001194 <SPI5_Write+0x20>)
 8001180:	2201      	movs	r2, #1
 8001182:	f10d 0106 	add.w	r1, sp, #6
 8001186:	f005 fd56 	bl	8006c36 <HAL_SPI_Transmit>
  if(status != HAL_OK)
  {
    /* Re-Initialize the BUS */
    SPI5_Error();
  }
}
 800118a:	b003      	add	sp, #12
 800118c:	f85d fb04 	ldr.w	pc, [sp], #4
 8001190:	20000014 	.word	0x20000014
 8001194:	200064b4 	.word	0x200064b4

08001198 <ZadanieDwa>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_ZadanieDwa */
 void ZadanieDwa(void *argument)
{
 8001198:	b583      	push	{r0, r1, r7, lr}
  /* USER CODE BEGIN ZadanieDwa */

  /* Infinite loop */
  for(;;)
  {
		if(Minelasekunda){ //jesli zostalo wykryte przerwanie z liniczka7
 800119a:	4d30      	ldr	r5, [pc, #192]	; (800125c <ZadanieDwa+0xc4>)

					//pomiar napiecia
					HAL_ADC_Start(&hadc1);
					HAL_ADC_PollForConversion(&hadc1, HAL_MAX_DELAY);
					volatile uint32_t value = HAL_ADC_GetValue(&hadc1);
					BatteryVoltage= 2.84f *value / 4096.0f;
 800119c:	4c30      	ldr	r4, [pc, #192]	; (8001260 <ZadanieDwa+0xc8>)
		if(Minelasekunda){ //jesli zostalo wykryte przerwanie z liniczka7
 800119e:	782b      	ldrb	r3, [r5, #0]
 80011a0:	2b00      	cmp	r3, #0
 80011a2:	d056      	beq.n	8001252 <ZadanieDwa+0xba>
			Minelasekunda=0; //kasuj flage
 80011a4:	2300      	movs	r3, #0
					HAL_ADC_Start(&hadc1);
 80011a6:	482f      	ldr	r0, [pc, #188]	; (8001264 <ZadanieDwa+0xcc>)
			Minelasekunda=0; //kasuj flage
 80011a8:	702b      	strb	r3, [r5, #0]
					HAL_ADC_Start(&hadc1);
 80011aa:	f003 fe39 	bl	8004e20 <HAL_ADC_Start>
					HAL_ADC_PollForConversion(&hadc1, HAL_MAX_DELAY);
 80011ae:	f04f 31ff 	mov.w	r1, #4294967295
 80011b2:	482c      	ldr	r0, [pc, #176]	; (8001264 <ZadanieDwa+0xcc>)
 80011b4:	f003 fea8 	bl	8004f08 <HAL_ADC_PollForConversion>
					volatile uint32_t value = HAL_ADC_GetValue(&hadc1);
 80011b8:	482a      	ldr	r0, [pc, #168]	; (8001264 <ZadanieDwa+0xcc>)
 80011ba:	f003 fef4 	bl	8004fa6 <HAL_ADC_GetValue>
 80011be:	9001      	str	r0, [sp, #4]
					BatteryVoltage= 2.84f *value / 4096.0f;
 80011c0:	eddd 7a01 	vldr	s15, [sp, #4]
 80011c4:	ed9f 7a28 	vldr	s14, [pc, #160]	; 8001268 <ZadanieDwa+0xd0>
					narysujPunktNaWykresie=1; //zezwul na narysowanie danej na wykresie
 80011c8:	4b28      	ldr	r3, [pc, #160]	; (800126c <ZadanieDwa+0xd4>)



					if (ChargeStarted) { //jesli zostal kliniety button na GUI, i chcemy ladowac baterie.
 80011ca:	4929      	ldr	r1, [pc, #164]	; (8001270 <ZadanieDwa+0xd8>)
					BatteryVoltage= 2.84f *value / 4096.0f;
 80011cc:	eef8 7a67 	vcvt.f32.u32	s15, s15
					narysujPunktNaWykresie=1; //zezwul na narysowanie danej na wykresie
 80011d0:	2201      	movs	r2, #1
					BatteryVoltage= 2.84f *value / 4096.0f;
 80011d2:	ee67 7a87 	vmul.f32	s15, s15, s14
 80011d6:	ed9f 7a27 	vldr	s14, [pc, #156]	; 8001274 <ZadanieDwa+0xdc>
 80011da:	ee67 7a87 	vmul.f32	s15, s15, s14
 80011de:	edc4 7a00 	vstr	s15, [r4]
					narysujPunktNaWykresie=1; //zezwul na narysowanie danej na wykresie
 80011e2:	601a      	str	r2, [r3, #0]
					if (ChargeStarted) { //jesli zostal kliniety button na GUI, i chcemy ladowac baterie.
 80011e4:	680a      	ldr	r2, [r1, #0]
 80011e6:	4b24      	ldr	r3, [pc, #144]	; (8001278 <ZadanieDwa+0xe0>)
 80011e8:	b1a2      	cbz	r2, 8001214 <ZadanieDwa+0x7c>
						NapiecieBateriilast60Sec[CzsasLadowaniaWSec] =BatteryVoltage;
 80011ea:	881a      	ldrh	r2, [r3, #0]
 80011ec:	6826      	ldr	r6, [r4, #0]
 80011ee:	b290      	uxth	r0, r2
 80011f0:	4a22      	ldr	r2, [pc, #136]	; (800127c <ZadanieDwa+0xe4>)
 80011f2:	eb02 0280 	add.w	r2, r2, r0, lsl #2
 80011f6:	6016      	str	r6, [r2, #0]
						if (CzsasLadowaniaWMin==0 && CzsasLadowaniaWSec==0)NapiecieBaterii[0]=BatteryVoltage; //jesli dopiero co rozpoczety pomiar dodaj pierwsza wartosc do tabeli minut
 80011f8:	4a21      	ldr	r2, [pc, #132]	; (8001280 <ZadanieDwa+0xe8>)
 80011fa:	8812      	ldrh	r2, [r2, #0]
 80011fc:	b292      	uxth	r2, r2
 80011fe:	b92a      	cbnz	r2, 800120c <ZadanieDwa+0x74>
 8001200:	881a      	ldrh	r2, [r3, #0]
 8001202:	b292      	uxth	r2, r2
 8001204:	b912      	cbnz	r2, 800120c <ZadanieDwa+0x74>
 8001206:	4a1f      	ldr	r2, [pc, #124]	; (8001284 <ZadanieDwa+0xec>)
 8001208:	6820      	ldr	r0, [r4, #0]
 800120a:	6010      	str	r0, [r2, #0]
						CzsasLadowaniaWSec++;
 800120c:	881a      	ldrh	r2, [r3, #0]
 800120e:	3201      	adds	r2, #1
 8001210:	b292      	uxth	r2, r2
 8001212:	801a      	strh	r2, [r3, #0]
					}

					//jesli uplynela minuta dodaj dane do tabel
					if (CzsasLadowaniaWSec >59 ) {
 8001214:	881a      	ldrh	r2, [r3, #0]
 8001216:	b292      	uxth	r2, r2
 8001218:	2a3b      	cmp	r2, #59	; 0x3b
 800121a:	d90d      	bls.n	8001238 <ZadanieDwa+0xa0>
						CzsasLadowaniaWSec=0;
 800121c:	2200      	movs	r2, #0
 800121e:	801a      	strh	r2, [r3, #0]
						CzsasLadowaniaWMin++;
 8001220:	4a17      	ldr	r2, [pc, #92]	; (8001280 <ZadanieDwa+0xe8>)
 8001222:	8813      	ldrh	r3, [r2, #0]
 8001224:	3301      	adds	r3, #1
 8001226:	b29b      	uxth	r3, r3
 8001228:	8013      	strh	r3, [r2, #0]
						NapiecieBaterii[CzsasLadowaniaWMin]=BatteryVoltage; //napiecie aktaalizowane co min jest odczytem ostatniego napiecia
 800122a:	8813      	ldrh	r3, [r2, #0]
 800122c:	6820      	ldr	r0, [r4, #0]
 800122e:	b29a      	uxth	r2, r3
 8001230:	4b14      	ldr	r3, [pc, #80]	; (8001284 <ZadanieDwa+0xec>)
 8001232:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8001236:	6018      	str	r0, [r3, #0]
					}
					//generowanie napiecia
					if(ChargeStarted==1 && UstawioneNapiecieNaopAmpie==0 ) { //jesli kliknieto przycik na GUI START   i nie ustawiono jeszce napiecia na op ampie
 8001238:	680f      	ldr	r7, [r1, #0]
 800123a:	2f01      	cmp	r7, #1
 800123c:	d109      	bne.n	8001252 <ZadanieDwa+0xba>
 800123e:	4e12      	ldr	r6, [pc, #72]	; (8001288 <ZadanieDwa+0xf0>)
 8001240:	6832      	ldr	r2, [r6, #0]
 8001242:	b932      	cbnz	r2, 8001252 <ZadanieDwa+0xba>
							HAL_DAC_SetValue(&hdac, DAC_CHANNEL_2, DAC_ALIGN_12B_R, 4095/2);  //ustaw poprawne napiece tutaj
 8001244:	4811      	ldr	r0, [pc, #68]	; (800128c <ZadanieDwa+0xf4>)
 8001246:	f240 73ff 	movw	r3, #2047	; 0x7ff
 800124a:	2110      	movs	r1, #16
 800124c:	f004 f80d 	bl	800526a <HAL_DAC_SetValue>
							UstawioneNapiecieNaopAmpie=1;
 8001250:	6037      	str	r7, [r6, #0]
					}

		}

    osDelay(1); //to chyba ma zostac?
 8001252:	2001      	movs	r0, #1
 8001254:	f006 f9d6 	bl	8007604 <osDelay>
		if(Minelasekunda){ //jesli zostalo wykryte przerwanie z liniczka7
 8001258:	e7a1      	b.n	800119e <ZadanieDwa+0x6>
 800125a:	bf00      	nop
 800125c:	200029a4 	.word	0x200029a4
 8001260:	2000000c 	.word	0x2000000c
 8001264:	200062e0 	.word	0x200062e0
 8001268:	4035c28f 	.word	0x4035c28f
 800126c:	2000654c 	.word	0x2000654c
 8001270:	20002990 	.word	0x20002990
 8001274:	39800000 	.word	0x39800000
 8001278:	20002996 	.word	0x20002996
 800127c:	200061e8 	.word	0x200061e8
 8001280:	20002994 	.word	0x20002994
 8001284:	200029a8 	.word	0x200029a8
 8001288:	200062dc 	.word	0x200062dc
 800128c:	20006330 	.word	0x20006330

08001290 <SystemClock_Config>:
{
 8001290:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001292:	b0a1      	sub	sp, #132	; 0x84
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001294:	2210      	movs	r2, #16
 8001296:	2100      	movs	r1, #0
 8001298:	a80a      	add	r0, sp, #40	; 0x28
 800129a:	f01e fac1 	bl	801f820 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 800129e:	2214      	movs	r2, #20
 80012a0:	2100      	movs	r1, #0
 80012a2:	a803      	add	r0, sp, #12
 80012a4:	f01e fabc 	bl	801f820 <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 80012a8:	2100      	movs	r1, #0
 80012aa:	2230      	movs	r2, #48	; 0x30
 80012ac:	a814      	add	r0, sp, #80	; 0x50
 80012ae:	f01e fab7 	bl	801f820 <memset>
  __HAL_RCC_PWR_CLK_ENABLE();
 80012b2:	2400      	movs	r4, #0
 80012b4:	4b22      	ldr	r3, [pc, #136]	; (8001340 <SystemClock_Config+0xb0>)
 80012b6:	9401      	str	r4, [sp, #4]
 80012b8:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80012ba:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 80012be:	641a      	str	r2, [r3, #64]	; 0x40
 80012c0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80012c2:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80012c6:	9301      	str	r3, [sp, #4]
 80012c8:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80012ca:	4b1e      	ldr	r3, [pc, #120]	; (8001344 <SystemClock_Config+0xb4>)
 80012cc:	9402      	str	r4, [sp, #8]
 80012ce:	681a      	ldr	r2, [r3, #0]
 80012d0:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 80012d4:	601a      	str	r2, [r3, #0]
 80012d6:	681b      	ldr	r3, [r3, #0]
 80012d8:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 80012dc:	9302      	str	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 80012de:	2201      	movs	r2, #1
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80012e0:	9b02      	ldr	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 80012e2:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 80012e6:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 80012ea:	2502      	movs	r5, #2
 80012ec:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 80012f0:	e9cd 530e 	strd	r5, r3, [sp, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLN = 336;
 80012f4:	2708      	movs	r7, #8
 80012f6:	f44f 73a8 	mov.w	r3, #336	; 0x150
  RCC_OscInitStruct.PLL.PLLQ = 4;
 80012fa:	2604      	movs	r6, #4
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80012fc:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLN = 336;
 80012fe:	e9cd 7310 	strd	r7, r3, [sp, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8001302:	9512      	str	r5, [sp, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLQ = 4;
 8001304:	9613      	str	r6, [sp, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001306:	f004 ffa3 	bl	8006250 <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 800130a:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 800130c:	e9cd 3503 	strd	r3, r5, [sp, #12]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8001310:	f44f 51a0 	mov.w	r1, #5120	; 0x1400
 8001314:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8001318:	e9cd 1306 	strd	r1, r3, [sp, #24]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 800131c:	a803      	add	r0, sp, #12
 800131e:	2105      	movs	r1, #5
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8001320:	9405      	str	r4, [sp, #20]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001322:	f005 f96d 	bl	8006600 <HAL_RCC_ClockConfig>
  PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 8001326:	23c0      	movs	r3, #192	; 0xc0
 8001328:	9318      	str	r3, [sp, #96]	; 0x60
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 800132a:	a814      	add	r0, sp, #80	; 0x50
  PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 800132c:	f44f 3300 	mov.w	r3, #131072	; 0x20000
  PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8001330:	9714      	str	r7, [sp, #80]	; 0x50
  PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 8001332:	961a      	str	r6, [sp, #104]	; 0x68
  PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8001334:	931d      	str	r3, [sp, #116]	; 0x74
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001336:	f005 fa3d 	bl	80067b4 <HAL_RCCEx_PeriphCLKConfig>
}
 800133a:	b021      	add	sp, #132	; 0x84
 800133c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800133e:	bf00      	nop
 8001340:	40023800 	.word	0x40023800
 8001344:	40007000 	.word	0x40007000

08001348 <main>:
{
 8001348:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
 800134c:	b09b      	sub	sp, #108	; 0x6c
  HAL_Init();
 800134e:	f003 fc81 	bl	8004c54 <HAL_Init>
  SystemClock_Config();
 8001352:	f7ff ff9d 	bl	8001290 <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001356:	2214      	movs	r2, #20
 8001358:	2100      	movs	r1, #0
 800135a:	a80d      	add	r0, sp, #52	; 0x34
  __HAL_RCC_GPIOF_CLK_ENABLE();
 800135c:	2400      	movs	r4, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800135e:	f01e fa5f 	bl	801f820 <memset>
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001362:	4bc4      	ldr	r3, [pc, #784]	; (8001674 <main+0x32c>)
 8001364:	9400      	str	r4, [sp, #0]
 8001366:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001368:	48c3      	ldr	r0, [pc, #780]	; (8001678 <main+0x330>)
  hi2c3.Instance = I2C3;
 800136a:	4dc4      	ldr	r5, [pc, #784]	; (800167c <main+0x334>)
  __HAL_RCC_GPIOF_CLK_ENABLE();
 800136c:	f042 0220 	orr.w	r2, r2, #32
 8001370:	631a      	str	r2, [r3, #48]	; 0x30
 8001372:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001374:	f002 0220 	and.w	r2, r2, #32
 8001378:	9200      	str	r2, [sp, #0]
 800137a:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 800137c:	9401      	str	r4, [sp, #4]
 800137e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001380:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8001384:	631a      	str	r2, [r3, #48]	; 0x30
 8001386:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001388:	f002 0280 	and.w	r2, r2, #128	; 0x80
 800138c:	9201      	str	r2, [sp, #4]
 800138e:	9a01      	ldr	r2, [sp, #4]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8001390:	9402      	str	r4, [sp, #8]
 8001392:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001394:	f042 0204 	orr.w	r2, r2, #4
 8001398:	631a      	str	r2, [r3, #48]	; 0x30
 800139a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800139c:	f002 0204 	and.w	r2, r2, #4
 80013a0:	9202      	str	r2, [sp, #8]
 80013a2:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80013a4:	9403      	str	r4, [sp, #12]
 80013a6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80013a8:	f042 0201 	orr.w	r2, r2, #1
 80013ac:	631a      	str	r2, [r3, #48]	; 0x30
 80013ae:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80013b0:	f002 0201 	and.w	r2, r2, #1
 80013b4:	9203      	str	r2, [sp, #12]
 80013b6:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80013b8:	9404      	str	r4, [sp, #16]
 80013ba:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80013bc:	f042 0202 	orr.w	r2, r2, #2
 80013c0:	631a      	str	r2, [r3, #48]	; 0x30
 80013c2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80013c4:	f002 0202 	and.w	r2, r2, #2
 80013c8:	9204      	str	r2, [sp, #16]
 80013ca:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 80013cc:	9405      	str	r4, [sp, #20]
 80013ce:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80013d0:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 80013d4:	631a      	str	r2, [r3, #48]	; 0x30
 80013d6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80013d8:	f002 0240 	and.w	r2, r2, #64	; 0x40
 80013dc:	9205      	str	r2, [sp, #20]
 80013de:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80013e0:	9406      	str	r4, [sp, #24]
 80013e2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80013e4:	f042 0210 	orr.w	r2, r2, #16
 80013e8:	631a      	str	r2, [r3, #48]	; 0x30
 80013ea:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80013ec:	f002 0210 	and.w	r2, r2, #16
 80013f0:	9206      	str	r2, [sp, #24]
 80013f2:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80013f4:	9407      	str	r4, [sp, #28]
 80013f6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80013f8:	f042 0208 	orr.w	r2, r2, #8
 80013fc:	631a      	str	r2, [r3, #48]	; 0x30
 80013fe:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001400:	f003 0308 	and.w	r3, r3, #8
 8001404:	9307      	str	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001406:	4622      	mov	r2, r4
 8001408:	2104      	movs	r1, #4
  __HAL_RCC_GPIOD_CLK_ENABLE();
 800140a:	9b07      	ldr	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800140c:	f004 f924 	bl	8005658 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_12, GPIO_PIN_RESET);
 8001410:	489b      	ldr	r0, [pc, #620]	; (8001680 <main+0x338>)
 8001412:	4622      	mov	r2, r4
 8001414:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8001418:	f004 f91e 	bl	8005658 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 800141c:	4622      	mov	r2, r4
 800141e:	4899      	ldr	r0, [pc, #612]	; (8001684 <main+0x33c>)
 8001420:	f44f 5140 	mov.w	r1, #12288	; 0x3000
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001424:	2601      	movs	r6, #1
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 8001426:	f004 f917 	bl	8005658 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800142a:	2702      	movs	r7, #2
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800142c:	f04f 0b04 	mov.w	fp, #4
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001430:	4891      	ldr	r0, [pc, #580]	; (8001678 <main+0x330>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001432:	940f      	str	r4, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001434:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001436:	e9cd b60d 	strd	fp, r6, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800143a:	9710      	str	r7, [sp, #64]	; 0x40
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800143c:	f004 f824 	bl	8005488 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12;
 8001440:	f44f 5280 	mov.w	r2, #4096	; 0x1000
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001444:	488e      	ldr	r0, [pc, #568]	; (8001680 <main+0x338>)
 8001446:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001448:	e9cd 260d 	strd	r2, r6, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800144c:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001450:	f004 f81a 	bl	8005488 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001454:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 8001456:	f44f 5240 	mov.w	r2, #12288	; 0x3000
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800145a:	488a      	ldr	r0, [pc, #552]	; (8001684 <main+0x33c>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800145c:	e9cd 260d 	strd	r2, r6, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001460:	e9cd 470f 	strd	r4, r7, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001464:	f004 f810 	bl	8005488 <HAL_GPIO_Init>
  hcrc.Instance = CRC;
 8001468:	4887      	ldr	r0, [pc, #540]	; (8001688 <main+0x340>)
 800146a:	4a88      	ldr	r2, [pc, #544]	; (800168c <main+0x344>)
 800146c:	6002      	str	r2, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 800146e:	f003 fe8b 	bl	8005188 <HAL_CRC_Init>
  hi2c3.Init.ClockSpeed = 100000;
 8001472:	4b87      	ldr	r3, [pc, #540]	; (8001690 <main+0x348>)
 8001474:	4a87      	ldr	r2, [pc, #540]	; (8001694 <main+0x34c>)
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8001476:	622c      	str	r4, [r5, #32]
  hi2c3.Init.ClockSpeed = 100000;
 8001478:	e9c5 3200 	strd	r3, r2, [r5]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 800147c:	4628      	mov	r0, r5
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 800147e:	f44f 4280 	mov.w	r2, #16384	; 0x4000
  hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8001482:	e9c5 2404 	strd	r2, r4, [r5, #16]
  hi2c3.Init.OwnAddress1 = 0;
 8001486:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 800148a:	e9c5 4406 	strd	r4, r4, [r5, #24]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 800148e:	f004 fac5 	bl	8005a1c <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_DISABLE) != HAL_OK)
 8001492:	2110      	movs	r1, #16
 8001494:	4628      	mov	r0, r5
 8001496:	f004 fd01 	bl	8005e9c <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 800149a:	4621      	mov	r1, r4
 800149c:	4628      	mov	r0, r5
 800149e:	f004 fd1c 	bl	8005eda <HAL_I2CEx_ConfigDigitalFilter>
  hspi5.Instance = SPI5;
 80014a2:	487d      	ldr	r0, [pc, #500]	; (8001698 <main+0x350>)
  hspi5.Init.Mode = SPI_MODE_MASTER;
 80014a4:	497d      	ldr	r1, [pc, #500]	; (800169c <main+0x354>)
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 80014a6:	6284      	str	r4, [r0, #40]	; 0x28
  hspi5.Init.Mode = SPI_MODE_MASTER;
 80014a8:	f44f 7282 	mov.w	r2, #260	; 0x104
 80014ac:	e9c0 1200 	strd	r1, r2, [r0]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 80014b0:	f44f 7500 	mov.w	r5, #512	; 0x200
 80014b4:	2218      	movs	r2, #24
 80014b6:	e9c0 5206 	strd	r5, r2, [r0, #24]
  hspi5.Init.CRCPolynomial = 10;
 80014ba:	220a      	movs	r2, #10
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 80014bc:	4d78      	ldr	r5, [pc, #480]	; (80016a0 <main+0x358>)
  hspi5.Init.CRCPolynomial = 10;
 80014be:	62c2      	str	r2, [r0, #44]	; 0x2c
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 80014c0:	e9c0 4402 	strd	r4, r4, [r0, #8]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 80014c4:	e9c0 4404 	strd	r4, r4, [r0, #16]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 80014c8:	e9c0 4408 	strd	r4, r4, [r0, #32]
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 80014cc:	f005 fb76 	bl	8006bbc <HAL_SPI_Init>
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 80014d0:	4a74      	ldr	r2, [pc, #464]	; (80016a4 <main+0x35c>)
  SdramTiming.LoadToActiveDelay = 2;
 80014d2:	970d      	str	r7, [sp, #52]	; 0x34
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 80014d4:	f04f 0810 	mov.w	r8, #16
  hsdram1.Init.SDBank = FMC_SDRAM_BANK2;
 80014d8:	e9c5 2600 	strd	r2, r6, [r5]
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 80014dc:	2240      	movs	r2, #64	; 0x40
 80014de:	e9c5 8204 	strd	r8, r2, [r5, #16]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 80014e2:	f44f 72c0 	mov.w	r2, #384	; 0x180
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 80014e6:	e9c5 2406 	strd	r2, r4, [r5, #24]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 80014ea:	f44f 6200 	mov.w	r2, #2048	; 0x800
  SdramTiming.WriteRecoveryTime = 3;
 80014ee:	2303      	movs	r3, #3
  SdramTiming.ExitSelfRefreshDelay = 7;
 80014f0:	f04f 0907 	mov.w	r9, #7
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 80014f4:	e9c5 2408 	strd	r2, r4, [r5, #32]
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80014f8:	a90d      	add	r1, sp, #52	; 0x34
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 80014fa:	f44f 5200 	mov.w	r2, #8192	; 0x2000
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80014fe:	4628      	mov	r0, r5
  SdramTiming.RPDelay = 2;
 8001500:	e9cd 3711 	strd	r3, r7, [sp, #68]	; 0x44
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001504:	f04f 0a08 	mov.w	sl, #8
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 8001508:	e9c5 4b02 	strd	r4, fp, [r5, #8]
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 800150c:	62aa      	str	r2, [r5, #40]	; 0x28
  SdramTiming.SelfRefreshTime = 4;
 800150e:	e9cd 9b0e 	strd	r9, fp, [sp, #56]	; 0x38
  SdramTiming.RowCycleDelay = 7;
 8001512:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
  SdramTiming.RCDDelay = 2;
 8001516:	9713      	str	r7, [sp, #76]	; 0x4c
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001518:	f005 fa76 	bl	8006a08 <HAL_SDRAM_Init>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 800151c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001520:	a909      	add	r1, sp, #36	; 0x24
 8001522:	4628      	mov	r0, r5
  Command->AutoRefreshNumber       = 1;
 8001524:	e9cd a60a 	strd	sl, r6, [sp, #40]	; 0x28
  Command->CommandMode             = FMC_SDRAM_CMD_CLK_ENABLE;
 8001528:	9609      	str	r6, [sp, #36]	; 0x24
 __IO uint32_t tmpmrd =0;
 800152a:	9408      	str	r4, [sp, #32]
  Command->ModeRegisterDefinition  = 0;
 800152c:	940c      	str	r4, [sp, #48]	; 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 800152e:	f005 fa8b 	bl	8006a48 <HAL_SDRAM_SendCommand>
  HAL_Delay(1);
 8001532:	4630      	mov	r0, r6
 8001534:	f003 fbba 	bl	8004cac <HAL_Delay>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);  
 8001538:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800153c:	a909      	add	r1, sp, #36	; 0x24
 800153e:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001540:	e9cd 7a09 	strd	r7, sl, [sp, #36]	; 0x24
  Command->ModeRegisterDefinition  = 0;
 8001544:	e9cd 640b 	strd	r6, r4, [sp, #44]	; 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);  
 8001548:	f005 fa7e 	bl	8006a48 <HAL_SDRAM_SendCommand>
  Command->CommandMode             = FMC_SDRAM_CMD_AUTOREFRESH_MODE;
 800154c:	2303      	movs	r3, #3
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 800154e:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001552:	a909      	add	r1, sp, #36	; 0x24
 8001554:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001556:	e9cd 3a09 	strd	r3, sl, [sp, #36]	; 0x24
  Command->ModeRegisterDefinition  = 0;
 800155a:	e9cd b40b 	strd	fp, r4, [sp, #44]	; 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 800155e:	f005 fa73 	bl	8006a48 <HAL_SDRAM_SendCommand>
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |
 8001562:	f44f 720c 	mov.w	r2, #560	; 0x230
 8001566:	9208      	str	r2, [sp, #32]
  Command->ModeRegisterDefinition  = tmpmrd;
 8001568:	9b08      	ldr	r3, [sp, #32]
 800156a:	930c      	str	r3, [sp, #48]	; 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 800156c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001570:	a909      	add	r1, sp, #36	; 0x24
 8001572:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001574:	e9cd ba09 	strd	fp, sl, [sp, #36]	; 0x24
  Command->AutoRefreshNumber       = 1;
 8001578:	960b      	str	r6, [sp, #44]	; 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 800157a:	f005 fa65 	bl	8006a48 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT); 
 800157e:	f240 516a 	movw	r1, #1386	; 0x56a
 8001582:	4628      	mov	r0, r5
 8001584:	f005 fa77 	bl	8006a76 <HAL_SDRAM_ProgramRefreshRate>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 8001588:	2234      	movs	r2, #52	; 0x34
 800158a:	4621      	mov	r1, r4
 800158c:	eb0d 0002 	add.w	r0, sp, r2
 8001590:	f01e f946 	bl	801f820 <memset>
  hltdc.Instance = LTDC;
 8001594:	4d44      	ldr	r5, [pc, #272]	; (80016a8 <main+0x360>)
 8001596:	4b45      	ldr	r3, [pc, #276]	; (80016ac <main+0x364>)
  hltdc.Init.Backcolor.Blue = 0;
 8001598:	86ac      	strh	r4, [r5, #52]	; 0x34
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 800159a:	e9c5 3400 	strd	r3, r4, [r5]
  hltdc.Init.HorizontalSync = 9;
 800159e:	2309      	movs	r3, #9
  hltdc.Init.AccumulatedVBP = 3;
 80015a0:	f04f 0c1d 	mov.w	ip, #29
  hltdc.Init.VerticalSync = 1;
 80015a4:	e9c5 3605 	strd	r3, r6, [r5, #20]
  hltdc.Init.AccumulatedVBP = 3;
 80015a8:	2303      	movs	r3, #3
 80015aa:	e9c5 c307 	strd	ip, r3, [r5, #28]
  hltdc.Init.AccumulatedActiveH = 323;
 80015ae:	f240 1e0d 	movw	lr, #269	; 0x10d
 80015b2:	f240 1343 	movw	r3, #323	; 0x143
 80015b6:	e9c5 e309 	strd	lr, r3, [r5, #36]	; 0x24
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 80015ba:	4628      	mov	r0, r5
  hltdc.Init.TotalHeigh = 327;
 80015bc:	f240 1347 	movw	r3, #327	; 0x147
 80015c0:	f240 1a17 	movw	sl, #279	; 0x117
 80015c4:	e9c5 a30b 	strd	sl, r3, [r5, #44]	; 0x2c
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 80015c8:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 80015cc:	612c      	str	r4, [r5, #16]
  hltdc.Init.Backcolor.Red = 0;
 80015ce:	f885 4036 	strb.w	r4, [r5, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 80015d2:	f004 fd27 	bl	8006024 <HAL_LTDC_Init>
  pLayerCfg.Alpha = 255;
 80015d6:	21ff      	movs	r1, #255	; 0xff
  pLayerCfg.WindowX1 = 240;
 80015d8:	22f0      	movs	r2, #240	; 0xf0
  pLayerCfg.Alpha0 = 0;
 80015da:	e9cd 1412 	strd	r1, r4, [sp, #72]	; 0x48
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 80015de:	f44f 6b80 	mov.w	fp, #1024	; 0x400
 80015e2:	2105      	movs	r1, #5
  pLayerCfg.WindowY1 = 320;
 80015e4:	f44f 73a0 	mov.w	r3, #320	; 0x140
  pLayerCfg.WindowY0 = 0;
 80015e8:	e9cd 240e 	strd	r2, r4, [sp, #56]	; 0x38
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 80015ec:	e9cd b114 	strd	fp, r1, [sp, #80]	; 0x50
  pLayerCfg.ImageWidth = 240;
 80015f0:	e9cd 4216 	strd	r4, r2, [sp, #88]	; 0x58
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 80015f4:	a90d      	add	r1, sp, #52	; 0x34
 80015f6:	4622      	mov	r2, r4
 80015f8:	4628      	mov	r0, r5
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 80015fa:	e9cd 3710 	strd	r3, r7, [sp, #64]	; 0x40
  LcdDrv = &ili9341_drv;
 80015fe:	4d2c      	ldr	r5, [pc, #176]	; (80016b0 <main+0x368>)
  pLayerCfg.ImageHeight = 320;
 8001600:	9318      	str	r3, [sp, #96]	; 0x60
  pLayerCfg.WindowX0 = 0;
 8001602:	940d      	str	r4, [sp, #52]	; 0x34
  pLayerCfg.Backcolor.Blue = 0;
 8001604:	f8ad 4064 	strh.w	r4, [sp, #100]	; 0x64
  pLayerCfg.Backcolor.Red = 0;
 8001608:	f88d 4066 	strb.w	r4, [sp, #102]	; 0x66
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 800160c:	f004 fdd5 	bl	80061ba <HAL_LTDC_ConfigLayer>
  LcdDrv = &ili9341_drv;
 8001610:	4b28      	ldr	r3, [pc, #160]	; (80016b4 <main+0x36c>)
 8001612:	602b      	str	r3, [r5, #0]
  LcdDrv->Init();
 8001614:	681b      	ldr	r3, [r3, #0]
 8001616:	4798      	blx	r3
  LcdDrv->DisplayOff();
 8001618:	682b      	ldr	r3, [r5, #0]
  hdma2d.Instance = DMA2D;
 800161a:	4d27      	ldr	r5, [pc, #156]	; (80016b8 <main+0x370>)
  LcdDrv->DisplayOff();
 800161c:	68db      	ldr	r3, [r3, #12]
 800161e:	4798      	blx	r3
  hdma2d.Instance = DMA2D;
 8001620:	4b26      	ldr	r3, [pc, #152]	; (80016bc <main+0x374>)
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
 8001622:	e9c5 470a 	strd	r4, r7, [r5, #40]	; 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 8001626:	e9c5 440c 	strd	r4, r4, [r5, #48]	; 0x30
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 800162a:	4628      	mov	r0, r5
  hdma2d.Init.Mode = DMA2D_M2M;
 800162c:	e9c5 3400 	strd	r3, r4, [r5]
  hdma2d.Init.OutputOffset = 0;
 8001630:	e9c5 7402 	strd	r7, r4, [r5, #8]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8001634:	f003 fe2b 	bl	800528e <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 8001638:	4631      	mov	r1, r6
 800163a:	4628      	mov	r0, r5
 800163c:	f003 fee0 	bl	8005400 <HAL_DMA2D_ConfigLayer>
  ADC_ChannelConfTypeDef sConfig = {0};
 8001640:	4621      	mov	r1, r4
 8001642:	4642      	mov	r2, r8
 8001644:	a80d      	add	r0, sp, #52	; 0x34
 8001646:	f01e f8eb 	bl	801f820 <memset>
  hadc1.Instance = ADC1;
 800164a:	4d1d      	ldr	r5, [pc, #116]	; (80016c0 <main+0x378>)
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 800164c:	4a1d      	ldr	r2, [pc, #116]	; (80016c4 <main+0x37c>)
  hadc1.Init.NbrOfConversion = 1;
 800164e:	61ee      	str	r6, [r5, #28]
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 8001650:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8001654:	e9c5 2300 	strd	r2, r3, [r5]
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 8001658:	4628      	mov	r0, r5
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 800165a:	4b1b      	ldr	r3, [pc, #108]	; (80016c8 <main+0x380>)
 800165c:	62ab      	str	r3, [r5, #40]	; 0x28
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 800165e:	616e      	str	r6, [r5, #20]
  hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 8001660:	60ac      	str	r4, [r5, #8]
  hadc1.Init.ScanConvMode = DISABLE;
 8001662:	612c      	str	r4, [r5, #16]
  hadc1.Init.ContinuousConvMode = DISABLE;
 8001664:	762c      	strb	r4, [r5, #24]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 8001666:	f885 4020 	strb.w	r4, [r5, #32]
  hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 800166a:	62ec      	str	r4, [r5, #44]	; 0x2c
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 800166c:	60ec      	str	r4, [r5, #12]
  hadc1.Init.DMAContinuousRequests = DISABLE;
 800166e:	f885 4030 	strb.w	r4, [r5, #48]	; 0x30
 8001672:	e02b      	b.n	80016cc <main+0x384>
 8001674:	40023800 	.word	0x40023800
 8001678:	40020800 	.word	0x40020800
 800167c:	20006384 	.word	0x20006384
 8001680:	40020400 	.word	0x40020400
 8001684:	40020c00 	.word	0x40020c00
 8001688:	20006328 	.word	0x20006328
 800168c:	40023000 	.word	0x40023000
 8001690:	40005c00 	.word	0x40005c00
 8001694:	000186a0 	.word	0x000186a0
 8001698:	200064b4 	.word	0x200064b4
 800169c:	40015000 	.word	0x40015000
 80016a0:	20006480 	.word	0x20006480
 80016a4:	a0000140 	.word	0xa0000140
 80016a8:	200063d8 	.word	0x200063d8
 80016ac:	40016800 	.word	0x40016800
 80016b0:	2000299c 	.word	0x2000299c
 80016b4:	2000001c 	.word	0x2000001c
 80016b8:	20006344 	.word	0x20006344
 80016bc:	4002b000 	.word	0x4002b000
 80016c0:	200062e0 	.word	0x200062e0
 80016c4:	40012000 	.word	0x40012000
 80016c8:	0f000001 	.word	0x0f000001
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 80016cc:	f003 fb02 	bl	8004cd4 <HAL_ADC_Init>
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 80016d0:	a90d      	add	r1, sp, #52	; 0x34
 80016d2:	4628      	mov	r0, r5
  sConfig.Rank = 1;
 80016d4:	e9cd 960d 	strd	r9, r6, [sp, #52]	; 0x34
  htim7.Instance = TIM7;
 80016d8:	4d25      	ldr	r5, [pc, #148]	; (8001770 <main+0x428>)
  sConfig.SamplingTime = ADC_SAMPLETIME_480CYCLES;
 80016da:	f8cd 903c 	str.w	r9, [sp, #60]	; 0x3c
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 80016de:	f003 fc65 	bl	8004fac <HAL_ADC_ConfigChannel>
  htim7.Init.Prescaler = 8400-1;
 80016e2:	4924      	ldr	r1, [pc, #144]	; (8001774 <main+0x42c>)
  hdac.Instance = DAC;
 80016e4:	4e24      	ldr	r6, [pc, #144]	; (8001778 <main+0x430>)
  htim7.Init.CounterMode = TIM_COUNTERMODE_UP;
 80016e6:	60ac      	str	r4, [r5, #8]
  htim7.Init.Prescaler = 8400-1;
 80016e8:	f242 03cf 	movw	r3, #8399	; 0x20cf
 80016ec:	e9c5 1300 	strd	r1, r3, [r5]
  if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
 80016f0:	4628      	mov	r0, r5
  htim7.Init.Period = 10000-1;
 80016f2:	f242 730f 	movw	r3, #9999	; 0x270f
 80016f6:	60eb      	str	r3, [r5, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80016f8:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  htim7.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80016fc:	61ac      	str	r4, [r5, #24]
  if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
 80016fe:	f005 fdf7 	bl	80072f0 <HAL_TIM_Base_Init>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
 8001702:	a90d      	add	r1, sp, #52	; 0x34
 8001704:	4628      	mov	r0, r5
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001706:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
 800170a:	f005 fe0b 	bl	8007324 <HAL_TIMEx_MasterConfigSynchronization>
  hdac.Instance = DAC;
 800170e:	4b1b      	ldr	r3, [pc, #108]	; (800177c <main+0x434>)
 8001710:	6033      	str	r3, [r6, #0]
  if (HAL_DAC_Init(&hdac) != HAL_OK)
 8001712:	4630      	mov	r0, r6
  DAC_ChannelConfTypeDef sConfig = {0};
 8001714:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  if (HAL_DAC_Init(&hdac) != HAL_OK)
 8001718:	f003 fd46 	bl	80051a8 <HAL_DAC_Init>
  if (HAL_DAC_ConfigChannel(&hdac, &sConfig, DAC_CHANNEL_2) != HAL_OK)
 800171c:	4642      	mov	r2, r8
 800171e:	a90d      	add	r1, sp, #52	; 0x34
 8001720:	4630      	mov	r0, r6
  sConfig.DAC_OutputBuffer = DAC_OUTPUTBUFFER_ENABLE;
 8001722:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  if (HAL_DAC_ConfigChannel(&hdac, &sConfig, DAC_CHANNEL_2) != HAL_OK)
 8001726:	f003 fd7f 	bl	8005228 <HAL_DAC_ConfigChannel>
  MX_TouchGFX_Init();
 800172a:	f7fe ff5c 	bl	80005e6 <MX_TouchGFX_Init>
HAL_TIM_Base_Start_IT(&htim7); //uruchomienie timera 7 (przerwanie co 1 sek)
 800172e:	4628      	mov	r0, r5
 8001730:	f005 fcc1 	bl	80070b6 <HAL_TIM_Base_Start_IT>
HAL_DAC_Start(&hdac, DAC_CHANNEL_2);
 8001734:	4641      	mov	r1, r8
 8001736:	4630      	mov	r0, r6
 8001738:	f003 fd49 	bl	80051ce <HAL_DAC_Start>
HAL_DAC_SetValue(&hdac, DAC_CHANNEL_2, DAC_ALIGN_12B_R, 4095); //ustaw max napiecie na ADC, zeby nie plynal zaden prad
 800173c:	f640 73ff 	movw	r3, #4095	; 0xfff
 8001740:	4622      	mov	r2, r4
 8001742:	4641      	mov	r1, r8
 8001744:	4630      	mov	r0, r6
 8001746:	f003 fd90 	bl	800526a <HAL_DAC_SetValue>
  osKernelInitialize();
 800174a:	f005 fecb 	bl	80074e4 <osKernelInitialize>
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 800174e:	4a0c      	ldr	r2, [pc, #48]	; (8001780 <main+0x438>)
 8001750:	480c      	ldr	r0, [pc, #48]	; (8001784 <main+0x43c>)
 8001752:	4621      	mov	r1, r4
 8001754:	f005 ff00 	bl	8007558 <osThreadNew>
 8001758:	4b0b      	ldr	r3, [pc, #44]	; (8001788 <main+0x440>)
  TaskDwaHandle = osThreadNew(ZadanieDwa, NULL, &TaskDwa_attributes);
 800175a:	4a0c      	ldr	r2, [pc, #48]	; (800178c <main+0x444>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 800175c:	6018      	str	r0, [r3, #0]
  TaskDwaHandle = osThreadNew(ZadanieDwa, NULL, &TaskDwa_attributes);
 800175e:	4621      	mov	r1, r4
 8001760:	480b      	ldr	r0, [pc, #44]	; (8001790 <main+0x448>)
 8001762:	f005 fef9 	bl	8007558 <osThreadNew>
 8001766:	4b0b      	ldr	r3, [pc, #44]	; (8001794 <main+0x44c>)
 8001768:	6018      	str	r0, [r3, #0]
  osKernelStart();
 800176a:	f005 fed5 	bl	8007518 <osKernelStart>
  while (1)
 800176e:	e7fe      	b.n	800176e <main+0x426>
 8001770:	2000650c 	.word	0x2000650c
 8001774:	40001400 	.word	0x40001400
 8001778:	20006330 	.word	0x20006330
 800177c:	40007400 	.word	0x40007400
 8001780:	08020d78 	.word	0x08020d78
 8001784:	080005eb 	.word	0x080005eb
 8001788:	20002998 	.word	0x20002998
 800178c:	08020d9c 	.word	0x08020d9c
 8001790:	08001199 	.word	0x08001199
 8001794:	200062d8 	.word	0x200062d8

08001798 <IOE_Init>:
 8001798:	4770      	bx	lr

0800179a <IOE_ITConfig>:
 800179a:	4770      	bx	lr

0800179c <IOE_Write>:
{
 800179c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout); 
 800179e:	4b09      	ldr	r3, [pc, #36]	; (80017c4 <IOE_Write+0x28>)
 80017a0:	f88d 2017 	strb.w	r2, [sp, #23]
 80017a4:	681b      	ldr	r3, [r3, #0]
 80017a6:	9302      	str	r3, [sp, #8]
 80017a8:	f10d 0217 	add.w	r2, sp, #23
 80017ac:	2301      	movs	r3, #1
 80017ae:	9200      	str	r2, [sp, #0]
 80017b0:	9301      	str	r3, [sp, #4]
 80017b2:	460a      	mov	r2, r1
 80017b4:	4601      	mov	r1, r0
 80017b6:	4804      	ldr	r0, [pc, #16]	; (80017c8 <IOE_Write+0x2c>)
 80017b8:	f004 f9d8 	bl	8005b6c <HAL_I2C_Mem_Write>
}
 80017bc:	b007      	add	sp, #28
 80017be:	f85d fb04 	ldr.w	pc, [sp], #4
 80017c2:	bf00      	nop
 80017c4:	20000010 	.word	0x20000010
 80017c8:	20006384 	.word	0x20006384

080017cc <IOE_Read>:
{
 80017cc:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  uint8_t value = 0;
 80017ce:	2300      	movs	r3, #0
 80017d0:	f88d 3017 	strb.w	r3, [sp, #23]
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80017d4:	4b08      	ldr	r3, [pc, #32]	; (80017f8 <IOE_Read+0x2c>)
 80017d6:	681b      	ldr	r3, [r3, #0]
 80017d8:	9302      	str	r3, [sp, #8]
{
 80017da:	460a      	mov	r2, r1
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80017dc:	2301      	movs	r3, #1
 80017de:	f10d 0117 	add.w	r1, sp, #23
 80017e2:	9100      	str	r1, [sp, #0]
 80017e4:	9301      	str	r3, [sp, #4]
 80017e6:	4601      	mov	r1, r0
 80017e8:	4804      	ldr	r0, [pc, #16]	; (80017fc <IOE_Read+0x30>)
 80017ea:	f004 fa4f 	bl	8005c8c <HAL_I2C_Mem_Read>
}
 80017ee:	f89d 0017 	ldrb.w	r0, [sp, #23]
 80017f2:	b007      	add	sp, #28
 80017f4:	f85d fb04 	ldr.w	pc, [sp], #4
 80017f8:	20000010 	.word	0x20000010
 80017fc:	20006384 	.word	0x20006384

08001800 <IOE_ReadMultiple>:
{
 8001800:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 8001802:	4c08      	ldr	r4, [pc, #32]	; (8001824 <IOE_ReadMultiple+0x24>)
 8001804:	6824      	ldr	r4, [r4, #0]
 8001806:	9200      	str	r2, [sp, #0]
 8001808:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800180c:	460a      	mov	r2, r1
 800180e:	2301      	movs	r3, #1
 8001810:	4601      	mov	r1, r0
 8001812:	4805      	ldr	r0, [pc, #20]	; (8001828 <IOE_ReadMultiple+0x28>)
 8001814:	f004 fa3a 	bl	8005c8c <HAL_I2C_Mem_Read>
}
 8001818:	3800      	subs	r0, #0
 800181a:	bf18      	it	ne
 800181c:	2001      	movne	r0, #1
 800181e:	b004      	add	sp, #16
 8001820:	bd10      	pop	{r4, pc}
 8001822:	bf00      	nop
 8001824:	20000010 	.word	0x20000010
 8001828:	20006384 	.word	0x20006384

0800182c <IOE_Delay>:
 800182c:	f003 ba3e 	b.w	8004cac <HAL_Delay>

08001830 <LCD_IO_Init>:
{
 8001830:	b508      	push	{r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001832:	4806      	ldr	r0, [pc, #24]	; (800184c <LCD_IO_Init+0x1c>)
 8001834:	2200      	movs	r2, #0
 8001836:	2104      	movs	r1, #4
 8001838:	f003 ff0e 	bl	8005658 <HAL_GPIO_WritePin>
}
 800183c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001840:	4802      	ldr	r0, [pc, #8]	; (800184c <LCD_IO_Init+0x1c>)
 8001842:	2201      	movs	r2, #1
 8001844:	2104      	movs	r1, #4
 8001846:	f003 bf07 	b.w	8005658 <HAL_GPIO_WritePin>
 800184a:	bf00      	nop
 800184c:	40020800 	.word	0x40020800

08001850 <LCD_IO_WriteData>:
{
 8001850:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001852:	4d0b      	ldr	r5, [pc, #44]	; (8001880 <LCD_IO_WriteData+0x30>)
{
 8001854:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001856:	2201      	movs	r2, #1
 8001858:	480a      	ldr	r0, [pc, #40]	; (8001884 <LCD_IO_WriteData+0x34>)
 800185a:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 800185e:	f003 fefb 	bl	8005658 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001862:	2200      	movs	r2, #0
 8001864:	2104      	movs	r1, #4
 8001866:	4628      	mov	r0, r5
 8001868:	f003 fef6 	bl	8005658 <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 800186c:	4620      	mov	r0, r4
 800186e:	f7ff fc81 	bl	8001174 <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001872:	4628      	mov	r0, r5
 8001874:	2201      	movs	r2, #1
}
 8001876:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800187a:	2104      	movs	r1, #4
 800187c:	f003 beec 	b.w	8005658 <HAL_GPIO_WritePin>
 8001880:	40020800 	.word	0x40020800
 8001884:	40020c00 	.word	0x40020c00

08001888 <LCD_IO_WriteReg>:
{
 8001888:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800188a:	4d0b      	ldr	r5, [pc, #44]	; (80018b8 <LCD_IO_WriteReg+0x30>)
{
 800188c:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 800188e:	2200      	movs	r2, #0
 8001890:	480a      	ldr	r0, [pc, #40]	; (80018bc <LCD_IO_WriteReg+0x34>)
 8001892:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001896:	f003 fedf 	bl	8005658 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800189a:	2200      	movs	r2, #0
 800189c:	2104      	movs	r1, #4
 800189e:	4628      	mov	r0, r5
 80018a0:	f003 feda 	bl	8005658 <HAL_GPIO_WritePin>
  SPI5_Write(Reg);
 80018a4:	4620      	mov	r0, r4
 80018a6:	f7ff fc65 	bl	8001174 <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80018aa:	4628      	mov	r0, r5
 80018ac:	2201      	movs	r2, #1
}
 80018ae:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80018b2:	2104      	movs	r1, #4
 80018b4:	f003 bed0 	b.w	8005658 <HAL_GPIO_WritePin>
 80018b8:	40020800 	.word	0x40020800
 80018bc:	40020c00 	.word	0x40020c00

080018c0 <LCD_IO_ReadData>:
{
 80018c0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80018c2:	4e14      	ldr	r6, [pc, #80]	; (8001914 <LCD_IO_ReadData+0x54>)
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 80018c4:	4f14      	ldr	r7, [pc, #80]	; (8001918 <LCD_IO_ReadData+0x58>)
{
 80018c6:	4605      	mov	r5, r0
 80018c8:	460c      	mov	r4, r1
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80018ca:	4630      	mov	r0, r6
 80018cc:	2200      	movs	r2, #0
 80018ce:	2104      	movs	r1, #4
 80018d0:	f003 fec2 	bl	8005658 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 80018d4:	2200      	movs	r2, #0
 80018d6:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80018da:	4638      	mov	r0, r7
 80018dc:	f003 febc 	bl	8005658 <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 80018e0:	4628      	mov	r0, r5
 80018e2:	f7ff fc47 	bl	8001174 <SPI5_Write>
  status = HAL_SPI_Receive(&hspi5, (uint8_t*) &readvalue, ReadSize, Spi5Timeout);
 80018e6:	4b0d      	ldr	r3, [pc, #52]	; (800191c <LCD_IO_ReadData+0x5c>)
 80018e8:	480d      	ldr	r0, [pc, #52]	; (8001920 <LCD_IO_ReadData+0x60>)
 80018ea:	681b      	ldr	r3, [r3, #0]
 80018ec:	4622      	mov	r2, r4
 80018ee:	a901      	add	r1, sp, #4
 80018f0:	f005 fb3f 	bl	8006f72 <HAL_SPI_Receive>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 80018f4:	4638      	mov	r0, r7
 80018f6:	2201      	movs	r2, #1
 80018f8:	f44f 5100 	mov.w	r1, #8192	; 0x2000
  return readvalue;
 80018fc:	9c01      	ldr	r4, [sp, #4]
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 80018fe:	f003 feab 	bl	8005658 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001902:	4630      	mov	r0, r6
 8001904:	2201      	movs	r2, #1
 8001906:	2104      	movs	r1, #4
 8001908:	f003 fea6 	bl	8005658 <HAL_GPIO_WritePin>
}
 800190c:	4620      	mov	r0, r4
 800190e:	b003      	add	sp, #12
 8001910:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001912:	bf00      	nop
 8001914:	40020800 	.word	0x40020800
 8001918:	40020c00 	.word	0x40020c00
 800191c:	20000014 	.word	0x20000014
 8001920:	200064b4 	.word	0x200064b4

08001924 <LCD_Delay>:
  HAL_Delay(Delay);
 8001924:	f003 b9c2 	b.w	8004cac <HAL_Delay>

08001928 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM8) {
 8001928:	6802      	ldr	r2, [r0, #0]
 800192a:	4b07      	ldr	r3, [pc, #28]	; (8001948 <HAL_TIM_PeriodElapsedCallback+0x20>)
 800192c:	429a      	cmp	r2, r3
{
 800192e:	b510      	push	{r4, lr}
 8001930:	4604      	mov	r4, r0
  if (htim->Instance == TIM8) {
 8001932:	d101      	bne.n	8001938 <HAL_TIM_PeriodElapsedCallback+0x10>
    HAL_IncTick();
 8001934:	f003 f9a8 	bl	8004c88 <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */
  if (htim->Instance == TIM7){ //timer co 1000ms
 8001938:	6822      	ldr	r2, [r4, #0]
 800193a:	4b04      	ldr	r3, [pc, #16]	; (800194c <HAL_TIM_PeriodElapsedCallback+0x24>)
 800193c:	429a      	cmp	r2, r3
	  Minelasekunda=1;
 800193e:	bf02      	ittt	eq
 8001940:	4b03      	ldreq	r3, [pc, #12]	; (8001950 <HAL_TIM_PeriodElapsedCallback+0x28>)
 8001942:	2201      	moveq	r2, #1
 8001944:	701a      	strbeq	r2, [r3, #0]
  }

  /* USER CODE END Callback 1 */
}
 8001946:	bd10      	pop	{r4, pc}
 8001948:	40010400 	.word	0x40010400
 800194c:	40001400 	.word	0x40001400
 8001950:	200029a4 	.word	0x200029a4

08001954 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001954:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001956:	4b0e      	ldr	r3, [pc, #56]	; (8001990 <HAL_MspInit+0x3c>)
 8001958:	2200      	movs	r2, #0
 800195a:	9200      	str	r2, [sp, #0]
 800195c:	6c59      	ldr	r1, [r3, #68]	; 0x44
 800195e:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 8001962:	6459      	str	r1, [r3, #68]	; 0x44
 8001964:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8001966:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 800196a:	9100      	str	r1, [sp, #0]
 800196c:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 800196e:	9201      	str	r2, [sp, #4]
 8001970:	6c19      	ldr	r1, [r3, #64]	; 0x40
 8001972:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 8001976:	6419      	str	r1, [r3, #64]	; 0x40
 8001978:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800197a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800197e:	9301      	str	r3, [sp, #4]
 8001980:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001982:	210f      	movs	r1, #15
 8001984:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001988:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 800198a:	f003 bbbd 	b.w	8005108 <HAL_NVIC_SetPriority>
 800198e:	bf00      	nop
 8001990:	40023800 	.word	0x40023800

08001994 <HAL_ADC_MspInit>:
* This function configures the hardware resources used in this example
* @param hadc: ADC handle pointer
* @retval None
*/
void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
{
 8001994:	b510      	push	{r4, lr}
 8001996:	4604      	mov	r4, r0
 8001998:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800199a:	2214      	movs	r2, #20
 800199c:	2100      	movs	r1, #0
 800199e:	a803      	add	r0, sp, #12
 80019a0:	f01d ff3e 	bl	801f820 <memset>
  if(hadc->Instance==ADC1)
 80019a4:	6822      	ldr	r2, [r4, #0]
 80019a6:	4b12      	ldr	r3, [pc, #72]	; (80019f0 <HAL_ADC_MspInit+0x5c>)
 80019a8:	429a      	cmp	r2, r3
 80019aa:	d11e      	bne.n	80019ea <HAL_ADC_MspInit+0x56>
  {
  /* USER CODE BEGIN ADC1_MspInit 0 */

  /* USER CODE END ADC1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_ADC1_CLK_ENABLE();
 80019ac:	f503 338c 	add.w	r3, r3, #71680	; 0x11800
 80019b0:	2100      	movs	r1, #0
 80019b2:	9101      	str	r1, [sp, #4]
 80019b4:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    PA7     ------> ADC1_IN7
    */
    GPIO_InitStruct.Pin = GPIO_PIN_7;
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80019b6:	480f      	ldr	r0, [pc, #60]	; (80019f4 <HAL_ADC_MspInit+0x60>)
    __HAL_RCC_ADC1_CLK_ENABLE();
 80019b8:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80019bc:	645a      	str	r2, [r3, #68]	; 0x44
 80019be:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80019c0:	f402 7280 	and.w	r2, r2, #256	; 0x100
 80019c4:	9201      	str	r2, [sp, #4]
 80019c6:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80019c8:	9102      	str	r1, [sp, #8]
 80019ca:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80019cc:	f042 0201 	orr.w	r2, r2, #1
 80019d0:	631a      	str	r2, [r3, #48]	; 0x30
 80019d2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80019d4:	f003 0301 	and.w	r3, r3, #1
 80019d8:	9302      	str	r3, [sp, #8]
 80019da:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 80019dc:	2280      	movs	r2, #128	; 0x80
 80019de:	2303      	movs	r3, #3
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80019e0:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 80019e2:	e9cd 2303 	strd	r2, r3, [sp, #12]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80019e6:	f003 fd4f 	bl	8005488 <HAL_GPIO_Init>
  /* USER CODE BEGIN ADC1_MspInit 1 */

  /* USER CODE END ADC1_MspInit 1 */
  }

}
 80019ea:	b008      	add	sp, #32
 80019ec:	bd10      	pop	{r4, pc}
 80019ee:	bf00      	nop
 80019f0:	40012000 	.word	0x40012000
 80019f4:	40020000 	.word	0x40020000

080019f8 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 80019f8:	6802      	ldr	r2, [r0, #0]
 80019fa:	4b09      	ldr	r3, [pc, #36]	; (8001a20 <HAL_CRC_MspInit+0x28>)
 80019fc:	429a      	cmp	r2, r3
{
 80019fe:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 8001a00:	d10b      	bne.n	8001a1a <HAL_CRC_MspInit+0x22>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8001a02:	2300      	movs	r3, #0
 8001a04:	9301      	str	r3, [sp, #4]
 8001a06:	4b07      	ldr	r3, [pc, #28]	; (8001a24 <HAL_CRC_MspInit+0x2c>)
 8001a08:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001a0a:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8001a0e:	631a      	str	r2, [r3, #48]	; 0x30
 8001a10:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001a12:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8001a16:	9301      	str	r3, [sp, #4]
 8001a18:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8001a1a:	b002      	add	sp, #8
 8001a1c:	4770      	bx	lr
 8001a1e:	bf00      	nop
 8001a20:	40023000 	.word	0x40023000
 8001a24:	40023800 	.word	0x40023800

08001a28 <HAL_DAC_MspInit>:
* This function configures the hardware resources used in this example
* @param hdac: DAC handle pointer
* @retval None
*/
void HAL_DAC_MspInit(DAC_HandleTypeDef* hdac)
{
 8001a28:	b510      	push	{r4, lr}
 8001a2a:	4604      	mov	r4, r0
 8001a2c:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001a2e:	2214      	movs	r2, #20
 8001a30:	2100      	movs	r1, #0
 8001a32:	a803      	add	r0, sp, #12
 8001a34:	f01d fef4 	bl	801f820 <memset>
  if(hdac->Instance==DAC)
 8001a38:	6822      	ldr	r2, [r4, #0]
 8001a3a:	4b12      	ldr	r3, [pc, #72]	; (8001a84 <HAL_DAC_MspInit+0x5c>)
 8001a3c:	429a      	cmp	r2, r3
 8001a3e:	d11e      	bne.n	8001a7e <HAL_DAC_MspInit+0x56>
  {
  /* USER CODE BEGIN DAC_MspInit 0 */

  /* USER CODE END DAC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DAC_CLK_ENABLE();
 8001a40:	f503 33e2 	add.w	r3, r3, #115712	; 0x1c400
 8001a44:	2100      	movs	r1, #0
 8001a46:	9101      	str	r1, [sp, #4]
 8001a48:	6c1a      	ldr	r2, [r3, #64]	; 0x40
    PA5     ------> DAC_OUT2
    */
    GPIO_InitStruct.Pin = GPIO_PIN_5;
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001a4a:	480f      	ldr	r0, [pc, #60]	; (8001a88 <HAL_DAC_MspInit+0x60>)
    __HAL_RCC_DAC_CLK_ENABLE();
 8001a4c:	f042 5200 	orr.w	r2, r2, #536870912	; 0x20000000
 8001a50:	641a      	str	r2, [r3, #64]	; 0x40
 8001a52:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001a54:	f002 5200 	and.w	r2, r2, #536870912	; 0x20000000
 8001a58:	9201      	str	r2, [sp, #4]
 8001a5a:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001a5c:	9102      	str	r1, [sp, #8]
 8001a5e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001a60:	f042 0201 	orr.w	r2, r2, #1
 8001a64:	631a      	str	r2, [r3, #48]	; 0x30
 8001a66:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001a68:	f003 0301 	and.w	r3, r3, #1
 8001a6c:	9302      	str	r3, [sp, #8]
 8001a6e:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8001a70:	2220      	movs	r2, #32
 8001a72:	2303      	movs	r3, #3
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001a74:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8001a76:	e9cd 2303 	strd	r2, r3, [sp, #12]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001a7a:	f003 fd05 	bl	8005488 <HAL_GPIO_Init>
  /* USER CODE BEGIN DAC_MspInit 1 */

  /* USER CODE END DAC_MspInit 1 */
  }

}
 8001a7e:	b008      	add	sp, #32
 8001a80:	bd10      	pop	{r4, pc}
 8001a82:	bf00      	nop
 8001a84:	40007400 	.word	0x40007400
 8001a88:	40020000 	.word	0x40020000

08001a8c <HAL_DMA2D_MspInit>:
* This function configures the hardware resources used in this example
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
 8001a8c:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 8001a8e:	4b0f      	ldr	r3, [pc, #60]	; (8001acc <HAL_DMA2D_MspInit+0x40>)
 8001a90:	6802      	ldr	r2, [r0, #0]
 8001a92:	429a      	cmp	r2, r3
 8001a94:	d116      	bne.n	8001ac4 <HAL_DMA2D_MspInit+0x38>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001a96:	2200      	movs	r2, #0
 8001a98:	f5a3 43f0 	sub.w	r3, r3, #30720	; 0x7800
 8001a9c:	9201      	str	r2, [sp, #4]
 8001a9e:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001aa0:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8001aa4:	6319      	str	r1, [r3, #48]	; 0x30
 8001aa6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001aa8:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8001aac:	9301      	str	r3, [sp, #4]
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001aae:	2105      	movs	r1, #5
 8001ab0:	205a      	movs	r0, #90	; 0x5a
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001ab2:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001ab4:	f003 fb28 	bl	8005108 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001ab8:	205a      	movs	r0, #90	; 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 8001aba:	b003      	add	sp, #12
 8001abc:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001ac0:	f003 bb54 	b.w	800516c <HAL_NVIC_EnableIRQ>
}
 8001ac4:	b003      	add	sp, #12
 8001ac6:	f85d fb04 	ldr.w	pc, [sp], #4
 8001aca:	bf00      	nop
 8001acc:	4002b000 	.word	0x4002b000

08001ad0 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8001ad0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001ad4:	4604      	mov	r4, r0
 8001ad6:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001ad8:	2214      	movs	r2, #20
 8001ada:	2100      	movs	r1, #0
 8001adc:	a803      	add	r0, sp, #12
 8001ade:	f01d fe9f 	bl	801f820 <memset>
  if(hi2c->Instance==I2C3)
 8001ae2:	6822      	ldr	r2, [r4, #0]
 8001ae4:	4b24      	ldr	r3, [pc, #144]	; (8001b78 <HAL_I2C_MspInit+0xa8>)
 8001ae6:	429a      	cmp	r2, r3
 8001ae8:	d143      	bne.n	8001b72 <HAL_I2C_MspInit+0xa2>
  {
  /* USER CODE BEGIN I2C3_MspInit 0 */

  /* USER CODE END I2C3_MspInit 0 */

    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001aea:	4c24      	ldr	r4, [pc, #144]	; (8001b7c <HAL_I2C_MspInit+0xac>)
    GPIO_InitStruct.Pin = GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001aec:	4824      	ldr	r0, [pc, #144]	; (8001b80 <HAL_I2C_MspInit+0xb0>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001aee:	2500      	movs	r5, #0
 8001af0:	9500      	str	r5, [sp, #0]
 8001af2:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001af4:	f043 0304 	orr.w	r3, r3, #4
 8001af8:	6323      	str	r3, [r4, #48]	; 0x30
 8001afa:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001afc:	f003 0304 	and.w	r3, r3, #4
 8001b00:	9300      	str	r3, [sp, #0]
 8001b02:	9b00      	ldr	r3, [sp, #0]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001b04:	9501      	str	r5, [sp, #4]
 8001b06:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001b08:	f043 0301 	orr.w	r3, r3, #1
 8001b0c:	6323      	str	r3, [r4, #48]	; 0x30
 8001b0e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001b10:	f003 0301 	and.w	r3, r3, #1
 8001b14:	9301      	str	r3, [sp, #4]
 8001b16:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001b18:	f04f 0912 	mov.w	r9, #18
 8001b1c:	f44f 7300 	mov.w	r3, #512	; 0x200
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001b20:	f04f 0801 	mov.w	r8, #1
 8001b24:	2703      	movs	r7, #3
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001b26:	2604      	movs	r6, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001b28:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001b2a:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001b2e:	e9cd 8705 	strd	r8, r7, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001b32:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001b34:	f003 fca8 	bl	8005488 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8001b38:	f44f 7380 	mov.w	r3, #256	; 0x100
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001b3c:	4811      	ldr	r0, [pc, #68]	; (8001b84 <HAL_I2C_MspInit+0xb4>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001b3e:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001b40:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001b42:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001b46:	e9cd 8705 	strd	r8, r7, [sp, #20]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001b4a:	f003 fc9d 	bl	8005488 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001b4e:	9502      	str	r5, [sp, #8]
 8001b50:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001b52:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001b56:	6423      	str	r3, [r4, #64]	; 0x40
 8001b58:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001b5a:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8001b5e:	9302      	str	r3, [sp, #8]
 8001b60:	9b02      	ldr	r3, [sp, #8]
  /* USER CODE BEGIN I2C3_MspInit 1 */
  /* Force the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_FORCE_RESET();
 8001b62:	6a23      	ldr	r3, [r4, #32]
 8001b64:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001b68:	6223      	str	r3, [r4, #32]
      
    /* Release the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_RELEASE_RESET(); 
 8001b6a:	6a23      	ldr	r3, [r4, #32]
 8001b6c:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8001b70:	6223      	str	r3, [r4, #32]
  /* USER CODE END I2C3_MspInit 1 */
  }

}
 8001b72:	b009      	add	sp, #36	; 0x24
 8001b74:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001b78:	40005c00 	.word	0x40005c00
 8001b7c:	40023800 	.word	0x40023800
 8001b80:	40020800 	.word	0x40020800
 8001b84:	40020000 	.word	0x40020000

08001b88 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8001b88:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001b8a:	4604      	mov	r4, r0
 8001b8c:	b08d      	sub	sp, #52	; 0x34
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001b8e:	2214      	movs	r2, #20
 8001b90:	2100      	movs	r1, #0
 8001b92:	a807      	add	r0, sp, #28
 8001b94:	f01d fe44 	bl	801f820 <memset>
  if(hltdc->Instance==LTDC)
 8001b98:	6822      	ldr	r2, [r4, #0]
 8001b9a:	4b57      	ldr	r3, [pc, #348]	; (8001cf8 <HAL_LTDC_MspInit+0x170>)
 8001b9c:	429a      	cmp	r2, r3
 8001b9e:	f040 80a8 	bne.w	8001cf2 <HAL_LTDC_MspInit+0x16a>
  {
  /* USER CODE BEGIN LTDC_MspInit 0 */

  /* USER CODE END LTDC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001ba2:	f503 4350 	add.w	r3, r3, #53248	; 0xd000
 8001ba6:	2500      	movs	r5, #0
 8001ba8:	9500      	str	r5, [sp, #0]
 8001baa:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_10;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001bac:	4853      	ldr	r0, [pc, #332]	; (8001cfc <HAL_LTDC_MspInit+0x174>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001bae:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8001bb2:	645a      	str	r2, [r3, #68]	; 0x44
 8001bb4:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001bb6:	f002 6280 	and.w	r2, r2, #67108864	; 0x4000000
 8001bba:	9200      	str	r2, [sp, #0]
 8001bbc:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001bbe:	9501      	str	r5, [sp, #4]
 8001bc0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001bc2:	f042 0220 	orr.w	r2, r2, #32
 8001bc6:	631a      	str	r2, [r3, #48]	; 0x30
 8001bc8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001bca:	f002 0220 	and.w	r2, r2, #32
 8001bce:	9201      	str	r2, [sp, #4]
 8001bd0:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001bd2:	9502      	str	r5, [sp, #8]
 8001bd4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001bd6:	f042 0201 	orr.w	r2, r2, #1
 8001bda:	631a      	str	r2, [r3, #48]	; 0x30
 8001bdc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001bde:	f002 0201 	and.w	r2, r2, #1
 8001be2:	9202      	str	r2, [sp, #8]
 8001be4:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001be6:	9503      	str	r5, [sp, #12]
 8001be8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001bea:	f042 0202 	orr.w	r2, r2, #2
 8001bee:	631a      	str	r2, [r3, #48]	; 0x30
 8001bf0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001bf2:	f002 0202 	and.w	r2, r2, #2
 8001bf6:	9203      	str	r2, [sp, #12]
 8001bf8:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8001bfa:	9504      	str	r5, [sp, #16]
 8001bfc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001bfe:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8001c02:	631a      	str	r2, [r3, #48]	; 0x30
 8001c04:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c06:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8001c0a:	9204      	str	r2, [sp, #16]
 8001c0c:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001c0e:	9505      	str	r5, [sp, #20]
 8001c10:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c12:	f042 0204 	orr.w	r2, r2, #4
 8001c16:	631a      	str	r2, [r3, #48]	; 0x30
 8001c18:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c1a:	f002 0204 	and.w	r2, r2, #4
 8001c1e:	9205      	str	r2, [sp, #20]
 8001c20:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001c22:	9506      	str	r5, [sp, #24]
 8001c24:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c26:	f042 0208 	orr.w	r2, r2, #8
 8001c2a:	631a      	str	r2, [r3, #48]	; 0x30
 8001c2c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001c2e:	f003 0308 	and.w	r3, r3, #8
 8001c32:	9306      	str	r3, [sp, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c34:	2402      	movs	r4, #2
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001c36:	260e      	movs	r6, #14
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001c38:	9b06      	ldr	r3, [sp, #24]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001c3a:	940a      	str	r4, [sp, #40]	; 0x28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c3c:	f44f 6380 	mov.w	r3, #1024	; 0x400
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001c40:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c42:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001c46:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001c48:	f003 fc1e 	bl	8005488 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8001c4c:	f641 0358 	movw	r3, #6232	; 0x1858
                          |GPIO_PIN_12;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001c50:	482b      	ldr	r0, [pc, #172]	; (8001d00 <HAL_LTDC_MspInit+0x178>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001c52:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001c54:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c56:	e9cd 3407 	strd	r3, r4, [sp, #28]

    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001c5a:	2709      	movs	r7, #9
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001c5c:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001c60:	f003 fc12 	bl	8005488 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8001c64:	2303      	movs	r3, #3
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001c66:	4827      	ldr	r0, [pc, #156]	; (8001d04 <HAL_LTDC_MspInit+0x17c>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001c68:	970b      	str	r7, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001c6a:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c6c:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001c70:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001c74:	f003 fc08 	bl	8005488 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 8001c78:	f44f 6370 	mov.w	r3, #3840	; 0xf00
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001c7c:	4821      	ldr	r0, [pc, #132]	; (8001d04 <HAL_LTDC_MspInit+0x17c>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001c7e:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001c80:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c82:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001c86:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001c8a:	f003 fbfd 	bl	8005488 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 8001c8e:	f44f 630c 	mov.w	r3, #2240	; 0x8c0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001c92:	481d      	ldr	r0, [pc, #116]	; (8001d08 <HAL_LTDC_MspInit+0x180>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001c94:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001c96:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c98:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001c9c:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001ca0:	f003 fbf2 	bl	8005488 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8001ca4:	23c0      	movs	r3, #192	; 0xc0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001ca6:	4819      	ldr	r0, [pc, #100]	; (8001d0c <HAL_LTDC_MspInit+0x184>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001ca8:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001caa:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001cac:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001cb0:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001cb4:	f003 fbe8 	bl	8005488 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8001cb8:	2308      	movs	r3, #8
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001cba:	4815      	ldr	r0, [pc, #84]	; (8001d10 <HAL_LTDC_MspInit+0x188>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001cbc:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001cbe:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001cc0:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001cc4:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001cc8:	f003 fbde 	bl	8005488 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8001ccc:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001cd0:	480d      	ldr	r0, [pc, #52]	; (8001d08 <HAL_LTDC_MspInit+0x180>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001cd2:	970b      	str	r7, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001cd4:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001cd6:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001cda:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001cde:	f003 fbd3 	bl	8005488 <HAL_GPIO_Init>

    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8001ce2:	2058      	movs	r0, #88	; 0x58
 8001ce4:	462a      	mov	r2, r5
 8001ce6:	2105      	movs	r1, #5
 8001ce8:	f003 fa0e 	bl	8005108 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8001cec:	2058      	movs	r0, #88	; 0x58
 8001cee:	f003 fa3d 	bl	800516c <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8001cf2:	b00d      	add	sp, #52	; 0x34
 8001cf4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001cf6:	bf00      	nop
 8001cf8:	40016800 	.word	0x40016800
 8001cfc:	40021400 	.word	0x40021400
 8001d00:	40020000 	.word	0x40020000
 8001d04:	40020400 	.word	0x40020400
 8001d08:	40021800 	.word	0x40021800
 8001d0c:	40020800 	.word	0x40020800
 8001d10:	40020c00 	.word	0x40020c00

08001d14 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8001d14:	b510      	push	{r4, lr}
 8001d16:	4604      	mov	r4, r0
 8001d18:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001d1a:	2214      	movs	r2, #20
 8001d1c:	2100      	movs	r1, #0
 8001d1e:	a803      	add	r0, sp, #12
 8001d20:	f01d fd7e 	bl	801f820 <memset>
  if(hspi->Instance==SPI5)
 8001d24:	6822      	ldr	r2, [r4, #0]
 8001d26:	4b14      	ldr	r3, [pc, #80]	; (8001d78 <HAL_SPI_MspInit+0x64>)
 8001d28:	429a      	cmp	r2, r3
 8001d2a:	d123      	bne.n	8001d74 <HAL_SPI_MspInit+0x60>
  {
  /* USER CODE BEGIN SPI5_MspInit 0 */

  /* USER CODE END SPI5_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI5_CLK_ENABLE();
 8001d2c:	f503 4368 	add.w	r3, r3, #59392	; 0xe800
 8001d30:	2100      	movs	r1, #0
 8001d32:	9101      	str	r1, [sp, #4]
 8001d34:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001d36:	4811      	ldr	r0, [pc, #68]	; (8001d7c <HAL_SPI_MspInit+0x68>)
    __HAL_RCC_SPI5_CLK_ENABLE();
 8001d38:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 8001d3c:	645a      	str	r2, [r3, #68]	; 0x44
 8001d3e:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001d40:	f402 1280 	and.w	r2, r2, #1048576	; 0x100000
 8001d44:	9201      	str	r2, [sp, #4]
 8001d46:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001d48:	9102      	str	r1, [sp, #8]
 8001d4a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d4c:	f042 0220 	orr.w	r2, r2, #32
 8001d50:	631a      	str	r2, [r3, #48]	; 0x30
 8001d52:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001d54:	f003 0320 	and.w	r3, r3, #32
 8001d58:	9302      	str	r3, [sp, #8]
 8001d5a:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d5c:	f44f 7260 	mov.w	r2, #896	; 0x380
 8001d60:	2302      	movs	r3, #2
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8001d62:	2103      	movs	r1, #3
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d64:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8001d68:	2305      	movs	r3, #5
 8001d6a:	e9cd 1306 	strd	r1, r3, [sp, #24]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001d6e:	a903      	add	r1, sp, #12
 8001d70:	f003 fb8a 	bl	8005488 <HAL_GPIO_Init>
  /* USER CODE BEGIN SPI5_MspInit 1 */

  /* USER CODE END SPI5_MspInit 1 */
  }

}
 8001d74:	b008      	add	sp, #32
 8001d76:	bd10      	pop	{r4, pc}
 8001d78:	40015000 	.word	0x40015000
 8001d7c:	40021400 	.word	0x40021400

08001d80 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8001d80:	b507      	push	{r0, r1, r2, lr}
  if(htim_base->Instance==TIM7)
 8001d82:	4b0f      	ldr	r3, [pc, #60]	; (8001dc0 <HAL_TIM_Base_MspInit+0x40>)
 8001d84:	6802      	ldr	r2, [r0, #0]
 8001d86:	429a      	cmp	r2, r3
 8001d88:	d116      	bne.n	8001db8 <HAL_TIM_Base_MspInit+0x38>
  {
  /* USER CODE BEGIN TIM7_MspInit 0 */

  /* USER CODE END TIM7_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM7_CLK_ENABLE();
 8001d8a:	2200      	movs	r2, #0
 8001d8c:	f503 3309 	add.w	r3, r3, #140288	; 0x22400
 8001d90:	9201      	str	r2, [sp, #4]
 8001d92:	6c19      	ldr	r1, [r3, #64]	; 0x40
 8001d94:	f041 0120 	orr.w	r1, r1, #32
 8001d98:	6419      	str	r1, [r3, #64]	; 0x40
 8001d9a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001d9c:	f003 0320 	and.w	r3, r3, #32
 8001da0:	9301      	str	r3, [sp, #4]
    /* TIM7 interrupt Init */
    HAL_NVIC_SetPriority(TIM7_IRQn, 5, 0);
 8001da2:	2105      	movs	r1, #5
 8001da4:	2037      	movs	r0, #55	; 0x37
    __HAL_RCC_TIM7_CLK_ENABLE();
 8001da6:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(TIM7_IRQn, 5, 0);
 8001da8:	f003 f9ae 	bl	8005108 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM7_IRQn);
 8001dac:	2037      	movs	r0, #55	; 0x37
  /* USER CODE BEGIN TIM7_MspInit 1 */

  /* USER CODE END TIM7_MspInit 1 */
  }

}
 8001dae:	b003      	add	sp, #12
 8001db0:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(TIM7_IRQn);
 8001db4:	f003 b9da 	b.w	800516c <HAL_NVIC_EnableIRQ>
}
 8001db8:	b003      	add	sp, #12
 8001dba:	f85d fb04 	ldr.w	pc, [sp], #4
 8001dbe:	bf00      	nop
 8001dc0:	40001400 	.word	0x40001400

08001dc4 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001dc4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001dc8:	b086      	sub	sp, #24
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 8001dca:	2300      	movs	r3, #0
 8001dcc:	9303      	str	r3, [sp, #12]
  if (FMC_Initialized) {
 8001dce:	4b2b      	ldr	r3, [pc, #172]	; (8001e7c <HAL_SDRAM_MspInit+0xb8>)
 8001dd0:	681c      	ldr	r4, [r3, #0]
 8001dd2:	2c00      	cmp	r4, #0
 8001dd4:	d14f      	bne.n	8001e76 <HAL_SDRAM_MspInit+0xb2>
  FMC_Initialized = 1;
 8001dd6:	f04f 0801 	mov.w	r8, #1
 8001dda:	f8c3 8000 	str.w	r8, [r3]
  __HAL_RCC_FMC_CLK_ENABLE();
 8001dde:	4b28      	ldr	r3, [pc, #160]	; (8001e80 <HAL_SDRAM_MspInit+0xbc>)
 8001de0:	9400      	str	r4, [sp, #0]
 8001de2:	6b9a      	ldr	r2, [r3, #56]	; 0x38
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001de4:	4827      	ldr	r0, [pc, #156]	; (8001e84 <HAL_SDRAM_MspInit+0xc0>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8001de6:	ea42 0208 	orr.w	r2, r2, r8
 8001dea:	639a      	str	r2, [r3, #56]	; 0x38
 8001dec:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8001dee:	ea03 0308 	and.w	r3, r3, r8
 8001df2:	9300      	str	r3, [sp, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001df4:	2702      	movs	r7, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001df6:	2603      	movs	r6, #3
 8001df8:	250c      	movs	r5, #12
  __HAL_RCC_FMC_CLK_ENABLE();
 8001dfa:	9b00      	ldr	r3, [sp, #0]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001dfc:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001dfe:	f64f 033f 	movw	r3, #63551	; 0xf83f
 8001e02:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001e06:	e9cd 6504 	strd	r6, r5, [sp, #16]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001e0a:	f003 fb3d 	bl	8005488 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001e0e:	481e      	ldr	r0, [pc, #120]	; (8001e88 <HAL_SDRAM_MspInit+0xc4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001e10:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001e12:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e14:	e9cd 8701 	strd	r8, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001e18:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001e1c:	f003 fb34 	bl	8005488 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 8001e20:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001e24:	4819      	ldr	r0, [pc, #100]	; (8001e8c <HAL_SDRAM_MspInit+0xc8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001e26:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001e28:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e2a:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001e2e:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001e32:	f003 fb29 	bl	8005488 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 8001e36:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001e3a:	4815      	ldr	r0, [pc, #84]	; (8001e90 <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001e3c:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001e3e:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e40:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001e44:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001e48:	f003 fb1e 	bl	8005488 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 8001e4c:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001e50:	4810      	ldr	r0, [pc, #64]	; (8001e94 <HAL_SDRAM_MspInit+0xd0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001e52:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001e54:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e56:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001e5a:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001e5e:	f003 fb13 	bl	8005488 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8001e62:	2360      	movs	r3, #96	; 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001e64:	480c      	ldr	r0, [pc, #48]	; (8001e98 <HAL_SDRAM_MspInit+0xd4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001e66:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001e68:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e6a:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001e6e:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001e72:	f003 fb09 	bl	8005488 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 8001e76:	b006      	add	sp, #24
 8001e78:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001e7c:	20006550 	.word	0x20006550
 8001e80:	40023800 	.word	0x40023800
 8001e84:	40021400 	.word	0x40021400
 8001e88:	40020800 	.word	0x40020800
 8001e8c:	40021800 	.word	0x40021800
 8001e90:	40021000 	.word	0x40021000
 8001e94:	40020c00 	.word	0x40020c00
 8001e98:	40020400 	.word	0x40020400

08001e9c <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8001e9c:	b530      	push	{r4, r5, lr}
 8001e9e:	4601      	mov	r1, r0
 8001ea0:	b089      	sub	sp, #36	; 0x24
  uint32_t              uwTimclock = 0;
  uint32_t              uwPrescalerValue = 0;
  uint32_t              pFLatency;

  /*Configure the TIM8 IRQ priority */
  HAL_NVIC_SetPriority(TIM8_UP_TIM13_IRQn, TickPriority ,0);
 8001ea2:	2200      	movs	r2, #0
 8001ea4:	202c      	movs	r0, #44	; 0x2c
 8001ea6:	f003 f92f 	bl	8005108 <HAL_NVIC_SetPriority>

  /* Enable the TIM8 global Interrupt */
  HAL_NVIC_EnableIRQ(TIM8_UP_TIM13_IRQn);
 8001eaa:	202c      	movs	r0, #44	; 0x2c
 8001eac:	f003 f95e 	bl	800516c <HAL_NVIC_EnableIRQ>

  /* Enable TIM8 clock */
  __HAL_RCC_TIM8_CLK_ENABLE();
 8001eb0:	2500      	movs	r5, #0
 8001eb2:	4b15      	ldr	r3, [pc, #84]	; (8001f08 <HAL_InitTick+0x6c>)
 8001eb4:	9502      	str	r5, [sp, #8]
 8001eb6:	6c5a      	ldr	r2, [r3, #68]	; 0x44

  /* Compute the prescaler value to have TIM8 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000) - 1);

  /* Initialize TIM8 */
  htim8.Instance = TIM8;
 8001eb8:	4c14      	ldr	r4, [pc, #80]	; (8001f0c <HAL_InitTick+0x70>)
  __HAL_RCC_TIM8_CLK_ENABLE();
 8001eba:	f042 0202 	orr.w	r2, r2, #2
 8001ebe:	645a      	str	r2, [r3, #68]	; 0x44
 8001ec0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001ec2:	f003 0302 	and.w	r3, r3, #2
 8001ec6:	9302      	str	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001ec8:	a901      	add	r1, sp, #4
 8001eca:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM8_CLK_ENABLE();
 8001ecc:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001ece:	f004 fc53 	bl	8006778 <HAL_RCC_GetClockConfig>
  uwTimclock = 2*HAL_RCC_GetPCLK2Freq();
 8001ed2:	f004 fc41 	bl	8006758 <HAL_RCC_GetPCLK2Freq>
  htim8.Instance = TIM8;
 8001ed6:	4b0e      	ldr	r3, [pc, #56]	; (8001f10 <HAL_InitTick+0x74>)
 8001ed8:	6023      	str	r3, [r4, #0]
  + Period = [(TIM8CLK/1000) - 1]. to have a (1/1000) s time base.
  + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim8.Init.Period = (1000000 / 1000) - 1;
 8001eda:	f240 33e7 	movw	r3, #999	; 0x3e7
 8001ede:	60e3      	str	r3, [r4, #12]
  uwTimclock = 2*HAL_RCC_GetPCLK2Freq();
 8001ee0:	0040      	lsls	r0, r0, #1
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000) - 1);
 8001ee2:	4b0c      	ldr	r3, [pc, #48]	; (8001f14 <HAL_InitTick+0x78>)
 8001ee4:	fbb0 f0f3 	udiv	r0, r0, r3
 8001ee8:	3801      	subs	r0, #1
  htim8.Init.Prescaler = uwPrescalerValue;
 8001eea:	6060      	str	r0, [r4, #4]
  htim8.Init.ClockDivision = 0;
  htim8.Init.CounterMode = TIM_COUNTERMODE_UP;
  if(HAL_TIM_Base_Init(&htim8) == HAL_OK)
 8001eec:	4620      	mov	r0, r4
  htim8.Init.ClockDivision = 0;
 8001eee:	6125      	str	r5, [r4, #16]
  htim8.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001ef0:	60a5      	str	r5, [r4, #8]
  if(HAL_TIM_Base_Init(&htim8) == HAL_OK)
 8001ef2:	f005 f9fd 	bl	80072f0 <HAL_TIM_Base_Init>
 8001ef6:	b920      	cbnz	r0, 8001f02 <HAL_InitTick+0x66>
  {
    /* Start the TIM time Base generation in interrupt mode */
    return HAL_TIM_Base_Start_IT(&htim8);
 8001ef8:	4620      	mov	r0, r4
 8001efa:	f005 f8dc 	bl	80070b6 <HAL_TIM_Base_Start_IT>
  }

  /* Return function status */
  return HAL_ERROR;
}
 8001efe:	b009      	add	sp, #36	; 0x24
 8001f00:	bd30      	pop	{r4, r5, pc}
  return HAL_ERROR;
 8001f02:	2001      	movs	r0, #1
 8001f04:	e7fb      	b.n	8001efe <HAL_InitTick+0x62>
 8001f06:	bf00      	nop
 8001f08:	40023800 	.word	0x40023800
 8001f0c:	20006554 	.word	0x20006554
 8001f10:	40010400 	.word	0x40010400
 8001f14:	000f4240 	.word	0x000f4240

08001f18 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8001f18:	4770      	bx	lr

08001f1a <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001f1a:	e7fe      	b.n	8001f1a <HardFault_Handler>

08001f1c <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001f1c:	e7fe      	b.n	8001f1c <MemManage_Handler>

08001f1e <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001f1e:	e7fe      	b.n	8001f1e <BusFault_Handler>

08001f20 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001f20:	e7fe      	b.n	8001f20 <UsageFault_Handler>

08001f22 <DebugMon_Handler>:
 8001f22:	4770      	bx	lr

08001f24 <TIM8_UP_TIM13_IRQHandler>:
void TIM8_UP_TIM13_IRQHandler(void)
{
  /* USER CODE BEGIN TIM8_UP_TIM13_IRQn 0 */

  /* USER CODE END TIM8_UP_TIM13_IRQn 0 */
  HAL_TIM_IRQHandler(&htim8);
 8001f24:	4801      	ldr	r0, [pc, #4]	; (8001f2c <TIM8_UP_TIM13_IRQHandler+0x8>)
 8001f26:	f005 b8da 	b.w	80070de <HAL_TIM_IRQHandler>
 8001f2a:	bf00      	nop
 8001f2c:	20006554 	.word	0x20006554

08001f30 <TIM7_IRQHandler>:
void TIM7_IRQHandler(void)
{
  /* USER CODE BEGIN TIM7_IRQn 0 */

  /* USER CODE END TIM7_IRQn 0 */
  HAL_TIM_IRQHandler(&htim7);
 8001f30:	4801      	ldr	r0, [pc, #4]	; (8001f38 <TIM7_IRQHandler+0x8>)
 8001f32:	f005 b8d4 	b.w	80070de <HAL_TIM_IRQHandler>
 8001f36:	bf00      	nop
 8001f38:	2000650c 	.word	0x2000650c

08001f3c <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8001f3c:	4801      	ldr	r0, [pc, #4]	; (8001f44 <LTDC_IRQHandler+0x8>)
 8001f3e:	f004 b8df 	b.w	8006100 <HAL_LTDC_IRQHandler>
 8001f42:	bf00      	nop
 8001f44:	200063d8 	.word	0x200063d8

08001f48 <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 8001f48:	4801      	ldr	r0, [pc, #4]	; (8001f50 <DMA2D_IRQHandler+0x8>)
 8001f4a:	f003 b9ce 	b.w	80052ea <HAL_DMA2D_IRQHandler>
 8001f4e:	bf00      	nop
 8001f50:	20006344 	.word	0x20006344

08001f54 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8001f54:	2001      	movs	r0, #1
 8001f56:	4770      	bx	lr

08001f58 <_kill>:

int _kill(int pid, int sig)
{
 8001f58:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001f5a:	f01d fb0d 	bl	801f578 <__errno>
 8001f5e:	2316      	movs	r3, #22
 8001f60:	6003      	str	r3, [r0, #0]
	return -1;
}
 8001f62:	f04f 30ff 	mov.w	r0, #4294967295
 8001f66:	bd08      	pop	{r3, pc}

08001f68 <_exit>:

void _exit (int status)
{
 8001f68:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001f6a:	f01d fb05 	bl	801f578 <__errno>
 8001f6e:	2316      	movs	r3, #22
 8001f70:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 8001f72:	e7fe      	b.n	8001f72 <_exit+0xa>

08001f74 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8001f74:	b570      	push	{r4, r5, r6, lr}
 8001f76:	460d      	mov	r5, r1
 8001f78:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001f7a:	460e      	mov	r6, r1
 8001f7c:	1b73      	subs	r3, r6, r5
 8001f7e:	429c      	cmp	r4, r3
 8001f80:	dc01      	bgt.n	8001f86 <_read+0x12>
	{
		*ptr++ = __io_getchar();
	}

return len;
}
 8001f82:	4620      	mov	r0, r4
 8001f84:	bd70      	pop	{r4, r5, r6, pc}
		*ptr++ = __io_getchar();
 8001f86:	f3af 8000 	nop.w
 8001f8a:	f806 0b01 	strb.w	r0, [r6], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001f8e:	e7f5      	b.n	8001f7c <_read+0x8>

08001f90 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8001f90:	b570      	push	{r4, r5, r6, lr}
 8001f92:	460d      	mov	r5, r1
 8001f94:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001f96:	460e      	mov	r6, r1
 8001f98:	1b73      	subs	r3, r6, r5
 8001f9a:	429c      	cmp	r4, r3
 8001f9c:	dc01      	bgt.n	8001fa2 <_write+0x12>
	{
		__io_putchar(*ptr++);
	}
	return len;
}
 8001f9e:	4620      	mov	r0, r4
 8001fa0:	bd70      	pop	{r4, r5, r6, pc}
		__io_putchar(*ptr++);
 8001fa2:	f816 0b01 	ldrb.w	r0, [r6], #1
 8001fa6:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001faa:	e7f5      	b.n	8001f98 <_write+0x8>

08001fac <_close>:

int _close(int file)
{
	return -1;
}
 8001fac:	f04f 30ff 	mov.w	r0, #4294967295
 8001fb0:	4770      	bx	lr

08001fb2 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 8001fb2:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8001fb6:	604b      	str	r3, [r1, #4]
	return 0;
}
 8001fb8:	2000      	movs	r0, #0
 8001fba:	4770      	bx	lr

08001fbc <_isatty>:

int _isatty(int file)
{
	return 1;
}
 8001fbc:	2001      	movs	r0, #1
 8001fbe:	4770      	bx	lr

08001fc0 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 8001fc0:	2000      	movs	r0, #0
 8001fc2:	4770      	bx	lr

08001fc4 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8001fc4:	4a0a      	ldr	r2, [pc, #40]	; (8001ff0 <_sbrk+0x2c>)
 8001fc6:	6811      	ldr	r1, [r2, #0]
{
 8001fc8:	b508      	push	{r3, lr}
 8001fca:	4603      	mov	r3, r0
	if (heap_end == 0)
 8001fcc:	b909      	cbnz	r1, 8001fd2 <_sbrk+0xe>
		heap_end = &end;
 8001fce:	4909      	ldr	r1, [pc, #36]	; (8001ff4 <_sbrk+0x30>)
 8001fd0:	6011      	str	r1, [r2, #0]

	prev_heap_end = heap_end;
 8001fd2:	6810      	ldr	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 8001fd4:	4669      	mov	r1, sp
 8001fd6:	4403      	add	r3, r0
 8001fd8:	428b      	cmp	r3, r1
 8001fda:	d906      	bls.n	8001fea <_sbrk+0x26>
	{
		errno = ENOMEM;
 8001fdc:	f01d facc 	bl	801f578 <__errno>
 8001fe0:	230c      	movs	r3, #12
 8001fe2:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 8001fe4:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap_end += incr;

	return (caddr_t) prev_heap_end;
}
 8001fe8:	bd08      	pop	{r3, pc}
	heap_end += incr;
 8001fea:	6013      	str	r3, [r2, #0]
	return (caddr_t) prev_heap_end;
 8001fec:	e7fc      	b.n	8001fe8 <_sbrk+0x24>
 8001fee:	bf00      	nop
 8001ff0:	20006594 	.word	0x20006594
 8001ff4:	20017708 	.word	0x20017708

08001ff8 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // verdana_40_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 8001ff8:	4770      	bx	lr

08001ffa <_ZN23ApplicationFontProviderD0Ev>:
 8001ffa:	b510      	push	{r4, lr}
 8001ffc:	2104      	movs	r1, #4
 8001ffe:	4604      	mov	r4, r0
 8002000:	f01d fa59 	bl	801f4b6 <_ZdlPvj>
 8002004:	4620      	mov	r0, r4
 8002006:	bd10      	pop	{r4, pc}

08002008 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
    switch (typography)
 8002008:	2901      	cmp	r1, #1
{
 800200a:	b508      	push	{r3, lr}
    switch (typography)
 800200c:	d006      	beq.n	800201c <_ZN23ApplicationFontProvider7getFontEt+0x14>
 800200e:	2902      	cmp	r1, #2
 8002010:	d008      	beq.n	8002024 <_ZN23ApplicationFontProvider7getFontEt+0x1c>
 8002012:	b959      	cbnz	r1, 800202c <_ZN23ApplicationFontProvider7getFontEt+0x24>
    {
    case Typography::DEFAULT:
        // verdana_15_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 8002014:	f002 f986 	bl	8004324 <_ZN17TypedTextDatabase8getFontsEv>
 8002018:	6800      	ldr	r0, [r0, #0]
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
    default:
        return 0;
    }
}
 800201a:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 800201c:	f002 f982 	bl	8004324 <_ZN17TypedTextDatabase8getFontsEv>
 8002020:	6840      	ldr	r0, [r0, #4]
 8002022:	e7fa      	b.n	800201a <_ZN23ApplicationFontProvider7getFontEt+0x12>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 8002024:	f002 f97e 	bl	8004324 <_ZN17TypedTextDatabase8getFontsEv>
 8002028:	6880      	ldr	r0, [r0, #8]
 800202a:	e7f6      	b.n	800201a <_ZN23ApplicationFontProvider7getFontEt+0x12>
    switch (typography)
 800202c:	2000      	movs	r0, #0
 800202e:	e7f4      	b.n	800201a <_ZN23ApplicationFontProvider7getFontEt+0x12>

08002030 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 8002030:	4800      	ldr	r0, [pc, #0]	; (8002034 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 8002032:	4770      	bx	lr
 8002034:	08020dd4 	.word	0x08020dd4

08002038 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 8002038:	2006      	movs	r0, #6
 800203a:	4770      	bx	lr

0800203c <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 800203c:	b513      	push	{r0, r1, r4, lr}
 800203e:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 8002040:	b151      	cbz	r1, 8002058 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002042:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 8002044:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 8002046:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 800204a:	aa01      	add	r2, sp, #4
 800204c:	689c      	ldr	r4, [r3, #8]
 800204e:	f10d 0303 	add.w	r3, sp, #3
 8002052:	47a0      	blx	r4
        return glyph;
    }
 8002054:	b002      	add	sp, #8
 8002056:	bd10      	pop	{r4, pc}
            return 0;
 8002058:	4608      	mov	r0, r1
 800205a:	e7fb      	b.n	8002054 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

0800205c <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 800205c:	8940      	ldrh	r0, [r0, #10]
 800205e:	4770      	bx	lr

08002060 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 8002060:	8980      	ldrh	r0, [r0, #12]
 8002062:	4770      	bx	lr

08002064 <_ZNK8touchgfx4Font13getFontHeightEv>:
     *       getMinimumTextHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getFontHeight() const
    {
        return fontHeight;
    }
 8002064:	8880      	ldrh	r0, [r0, #4]
 8002066:	4770      	bx	lr

08002068 <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
     *
     * @return The minimum height needed for a text field that uses this font.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getMinimumTextHeight() const
    {
        return fontHeight + pixelsBelowBaseline;
 8002068:	7983      	ldrb	r3, [r0, #6]
 800206a:	8880      	ldrh	r0, [r0, #4]
 800206c:	4418      	add	r0, r3
    }
 800206e:	b280      	uxth	r0, r0
 8002070:	4770      	bx	lr

08002072 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 8002072:	79c0      	ldrb	r0, [r0, #7]
    }
 8002074:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 8002078:	4770      	bx	lr

0800207a <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 800207a:	79c0      	ldrb	r0, [r0, #7]
    }
 800207c:	09c0      	lsrs	r0, r0, #7
 800207e:	4770      	bx	lr

08002080 <_ZN8touchgfx9TypedTextD1Ev>:
    }
 8002080:	4770      	bx	lr

08002082 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 8002082:	b510      	push	{r4, lr}
    }
 8002084:	2108      	movs	r1, #8
    virtual ~TypedText()
 8002086:	4604      	mov	r4, r0
    }
 8002088:	f01d fa15 	bl	801f4b6 <_ZdlPvj>
 800208c:	4620      	mov	r0, r4
 800208e:	bd10      	pop	{r4, pc}

08002090 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 8002090:	4770      	bx	lr

08002092 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 8002092:	4770      	bx	lr

08002094 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 8002094:	f500 7396 	add.w	r3, r0, #300	; 0x12c
 8002098:	6808      	ldr	r0, [r1, #0]
 800209a:	6849      	ldr	r1, [r1, #4]
 800209c:	c303      	stmia	r3!, {r0, r1}
    }
 800209e:	4770      	bx	lr

080020a0 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 80020a0:	2000      	movs	r0, #0
 80020a2:	4770      	bx	lr

080020a4 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 80020a4:	8081      	strh	r1, [r0, #4]
    }
 80020a6:	4770      	bx	lr

080020a8 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 80020a8:	80c1      	strh	r1, [r0, #6]
    }
 80020aa:	4770      	bx	lr

080020ac <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 80020ac:	8101      	strh	r1, [r0, #8]
    }
 80020ae:	4770      	bx	lr

080020b0 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 80020b0:	8141      	strh	r1, [r0, #10]
    }
 80020b2:	4770      	bx	lr

080020b4 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 80020b4:	4770      	bx	lr

080020b6 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 80020b6:	4770      	bx	lr

080020b8 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 80020b8:	4770      	bx	lr

080020ba <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 80020ba:	4770      	bx	lr

080020bc <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 80020bc:	4770      	bx	lr

080020be <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 80020be:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 80020c0:	88c4      	ldrh	r4, [r0, #6]
 80020c2:	6803      	ldr	r3, [r0, #0]
 80020c4:	1b12      	subs	r2, r2, r4
 80020c6:	8884      	ldrh	r4, [r0, #4]
 80020c8:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80020ca:	1b09      	subs	r1, r1, r4
 80020cc:	b212      	sxth	r2, r2
    }
 80020ce:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 80020d2:	b209      	sxth	r1, r1
 80020d4:	4718      	bx	r3

080020d6 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 80020d6:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80020da:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 80020dc:	f04f 33ff 	mov.w	r3, #4294967295
 80020e0:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 80020e2:	6813      	ldr	r3, [r2, #0]
 80020e4:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 80020e6:	6010      	str	r0, [r2, #0]
    }
 80020e8:	4770      	bx	lr

080020ea <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 80020ea:	4770      	bx	lr

080020ec <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 80020ec:	4770      	bx	lr

080020ee <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 80020ee:	6041      	str	r1, [r0, #4]
    }
 80020f0:	4770      	bx	lr

080020f2 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 80020f2:	4770      	bx	lr

080020f4 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80020f4:	4b06      	ldr	r3, [pc, #24]	; (8002110 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 80020f6:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 80020fa:	2300      	movs	r3, #0
 80020fc:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
// Screen1

void FrontendApplicationBase::gotoScreen1ScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoScreen1ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8002100:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8002104:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8002108:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c

    virtual void changeToStartScreen()
    {
        gotoScreen1ScreenNoTransition();
    }
 800210c:	4770      	bx	lr
 800210e:	bf00      	nop
 8002110:	08002225 	.word	0x08002225

08002114 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 8002114:	2301      	movs	r3, #1
 8002116:	7203      	strb	r3, [r0, #8]
    }
 8002118:	4770      	bx	lr

0800211a <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 800211a:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800211e:	b11a      	cbz	r2, 8002128 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 8002120:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 8002124:	b102      	cbz	r2, 8002128 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 8002126:	6018      	str	r0, [r3, #0]
        }
    }
 8002128:	4770      	bx	lr

0800212a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRectD1Ev>:
{
public:
    /**
     * A Widget that reports solid and but does not draw anything.
     */
    class FullSolidRect : public Widget
 800212a:	4770      	bx	lr

0800212c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED1Ev>:
class WipeTransition : public Transition
 800212c:	4770      	bx	lr

0800212e <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 800212e:	4770      	bx	lr

08002130 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 8002130:	4770      	bx	lr

08002132 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE8tearDownEv>:
            // Copy rect from tft to client framebuffer
            HAL::getInstance()->lcd().blitCopy((const uint16_t*)tftFb, source, rect, 255, false);
        }
    }

    virtual void tearDown()
 8002132:	4601      	mov	r1, r0
    {
        screenContainer->remove(solid);
 8002134:	6840      	ldr	r0, [r0, #4]
 8002136:	6803      	ldr	r3, [r0, #0]
 8002138:	3110      	adds	r1, #16
 800213a:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800213c:	4718      	bx	r3

0800213e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE4initEv>:
    }

    virtual void init()
 800213e:	4601      	mov	r1, r0
    {
        Transition::init();
        // Add the solid (and not-drawing-anything) widget on top to cover the other widgets
        screenContainer->add(solid);
 8002140:	6840      	ldr	r0, [r0, #4]
 8002142:	6803      	ldr	r3, [r0, #0]
 8002144:	3110      	adds	r1, #16
 8002146:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8002148:	4718      	bx	r3

0800214a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE10invalidateEv>:
     * Wipe transition does not require an invalidation. Invalidation
     * is handled by the class. Do no invalidation initially.
     */
    virtual void invalidate()
    {
    }
 800214a:	4770      	bx	lr

0800214c <_ZNK8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRect4drawERKNS_4RectE>:
        }
 800214c:	4770      	bx	lr

0800214e <_ZNK8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRect12getSolidRectEv>:
        virtual Rect getSolidRect() const
 800214e:	b510      	push	{r4, lr}
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8002150:	2200      	movs	r2, #0
            return Rect(0U, 0U, rect.width, rect.height);
 8002152:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 8002156:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 800215a:	8002      	strh	r2, [r0, #0]
 800215c:	8042      	strh	r2, [r0, #2]
 800215e:	8084      	strh	r4, [r0, #4]
 8002160:	80c1      	strh	r1, [r0, #6]
        }
 8002162:	bd10      	pop	{r4, pc}

08002164 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 8002164:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 8002166:	68c2      	ldr	r2, [r0, #12]
 8002168:	6841      	ldr	r1, [r0, #4]
 800216a:	1054      	asrs	r4, r2, #1
    virtual void execute()
 800216c:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
 800216e:	eb01 0062 	add.w	r0, r1, r2, asr #1
 8002172:	07d2      	lsls	r2, r2, #31
 8002174:	bf48      	it	mi
 8002176:	590a      	ldrmi	r2, [r1, r4]
 8002178:	689b      	ldr	r3, [r3, #8]
    }
 800217a:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 800217e:	bf48      	it	mi
 8002180:	58d3      	ldrmi	r3, [r2, r3]
 8002182:	4718      	bx	r3

08002184 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 8002184:	6843      	ldr	r3, [r0, #4]
 8002186:	b12b      	cbz	r3, 8002194 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 8002188:	6883      	ldr	r3, [r0, #8]
 800218a:	b92b      	cbnz	r3, 8002198 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 800218c:	68c0      	ldr	r0, [r0, #12]
 800218e:	f000 0001 	and.w	r0, r0, #1
 8002192:	4770      	bx	lr
 8002194:	4618      	mov	r0, r3
 8002196:	4770      	bx	lr
 8002198:	2001      	movs	r0, #1
    }
 800219a:	4770      	bx	lr

0800219c <_ZN8touchgfx12NoTransitionD0Ev>:
 800219c:	b510      	push	{r4, lr}
 800219e:	210c      	movs	r1, #12
 80021a0:	4604      	mov	r4, r0
 80021a2:	f01d f988 	bl	801f4b6 <_ZdlPvj>
 80021a6:	4620      	mov	r0, r4
 80021a8:	bd10      	pop	{r4, pc}

080021aa <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80021aa:	b510      	push	{r4, lr}
 80021ac:	2110      	movs	r1, #16
 80021ae:	4604      	mov	r4, r0
 80021b0:	f01d f981 	bl	801f4b6 <_ZdlPvj>
 80021b4:	4620      	mov	r0, r4
 80021b6:	bd10      	pop	{r4, pc}

080021b8 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 80021b8:	b510      	push	{r4, lr}
 80021ba:	f44f 71ac 	mov.w	r1, #344	; 0x158
 80021be:	4604      	mov	r4, r0
 80021c0:	f01d f979 	bl	801f4b6 <_ZdlPvj>
 80021c4:	4620      	mov	r0, r4
 80021c6:	bd10      	pop	{r4, pc}

080021c8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED0Ev>:
class WipeTransition : public Transition
 80021c8:	b510      	push	{r4, lr}
 80021ca:	2138      	movs	r1, #56	; 0x38
 80021cc:	4604      	mov	r4, r0
 80021ce:	f01d f972 	bl	801f4b6 <_ZdlPvj>
 80021d2:	4620      	mov	r0, r4
 80021d4:	bd10      	pop	{r4, pc}

080021d6 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRectD0Ev>:
    class FullSolidRect : public Widget
 80021d6:	b510      	push	{r4, lr}
 80021d8:	2128      	movs	r1, #40	; 0x28
 80021da:	4604      	mov	r4, r0
 80021dc:	f01d f96b 	bl	801f4b6 <_ZdlPvj>
 80021e0:	4620      	mov	r0, r4
 80021e2:	bd10      	pop	{r4, pc}

080021e4 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 80021e4:	b508      	push	{r3, lr}
        Application::getInstance()->invalidate();
 80021e6:	f00d fe2b 	bl	800fe40 <_ZN8touchgfx11Application11getInstanceEv>
    }
 80021ea:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        Application::getInstance()->invalidate();
 80021ee:	f00e b9cb 	b.w	8010588 <_ZN8touchgfx11Application10invalidateEv>

080021f2 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 80021f2:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 80021f6:	b112      	cbz	r2, 80021fe <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 80021f8:	6803      	ldr	r3, [r0, #0]
 80021fa:	695b      	ldr	r3, [r3, #20]
 80021fc:	4718      	bx	r3
    }
 80021fe:	4770      	bx	lr

08002200 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 8002200:	b510      	push	{r4, lr}
 8002202:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 8002204:	f8d0 013c 	ldr.w	r0, [r0, #316]	; 0x13c
 8002208:	b158      	cbz	r0, 8002222 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 800220a:	6803      	ldr	r3, [r0, #0]
 800220c:	68db      	ldr	r3, [r3, #12]
 800220e:	4798      	blx	r3
 8002210:	b138      	cbz	r0, 8002222 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 8002212:	f8d4 013c 	ldr.w	r0, [r4, #316]	; 0x13c
 8002216:	6803      	ldr	r3, [r0, #0]
 8002218:	689b      	ldr	r3, [r3, #8]
 800221a:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 800221c:	2300      	movs	r3, #0
 800221e:	f8c4 313c 	str.w	r3, [r4, #316]	; 0x13c
    }
 8002222:	bd10      	pop	{r4, pc}

08002224 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv>:
}

void FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl()
{
 8002224:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Screen1View, Screen1Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8002228:	e9d0 5a54 	ldrd	r5, sl, [r0, #336]	; 0x150
{
 800222c:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800222e:	68a8      	ldr	r0, [r5, #8]
 8002230:	6803      	ldr	r3, [r0, #0]
 8002232:	6a1b      	ldr	r3, [r3, #32]
 8002234:	4798      	blx	r3
 8002236:	f5b0 7f7e 	cmp.w	r0, #1016	; 0x3f8
 800223a:	d205      	bcs.n	8002248 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x24>
 800223c:	4b45      	ldr	r3, [pc, #276]	; (8002354 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x130>)
 800223e:	4a46      	ldr	r2, [pc, #280]	; (8002358 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
 8002240:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002242:	4846      	ldr	r0, [pc, #280]	; (800235c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x138>)
 8002244:	f01d f966 	bl	801f514 <__assert_func>
 8002248:	6868      	ldr	r0, [r5, #4]
 800224a:	6803      	ldr	r3, [r0, #0]
 800224c:	6a1b      	ldr	r3, [r3, #32]
 800224e:	4798      	blx	r3
 8002250:	280f      	cmp	r0, #15
 8002252:	d803      	bhi.n	800225c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x38>
 8002254:	4b42      	ldr	r3, [pc, #264]	; (8002360 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x13c>)
 8002256:	4a40      	ldr	r2, [pc, #256]	; (8002358 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
 8002258:	21a4      	movs	r1, #164	; 0xa4
 800225a:	e7f2      	b.n	8002242 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800225c:	68e8      	ldr	r0, [r5, #12]
 800225e:	6803      	ldr	r3, [r0, #0]
 8002260:	6a1b      	ldr	r3, [r3, #32]
 8002262:	4798      	blx	r3
 8002264:	280b      	cmp	r0, #11
 8002266:	d803      	bhi.n	8002270 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x4c>
 8002268:	4b3e      	ldr	r3, [pc, #248]	; (8002364 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x140>)
 800226a:	4a3b      	ldr	r2, [pc, #236]	; (8002358 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
 800226c:	21a5      	movs	r1, #165	; 0xa5
 800226e:	e7e8      	b.n	8002242 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x1e>
    if (*currentTrans)
 8002270:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 800236c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x148>
    Application::getInstance()->clearAllTimerWidgets();
 8002274:	f00d fde4 	bl	800fe40 <_ZN8touchgfx11Application11getInstanceEv>
 8002278:	f00d fde8 	bl	800fe4c <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 800227c:	f8d9 0000 	ldr.w	r0, [r9]
 8002280:	b110      	cbz	r0, 8002288 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x64>
        (*currentTrans)->tearDown();
 8002282:	6803      	ldr	r3, [r0, #0]
 8002284:	68db      	ldr	r3, [r3, #12]
 8002286:	4798      	blx	r3
    if (*currentTrans)
 8002288:	f8d9 0000 	ldr.w	r0, [r9]
 800228c:	b110      	cbz	r0, 8002294 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x70>
        (*currentTrans)->~Transition();
 800228e:	6803      	ldr	r3, [r0, #0]
 8002290:	681b      	ldr	r3, [r3, #0]
 8002292:	4798      	blx	r3
    if (*currentScreen)
 8002294:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 8002370 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x14c>
 8002298:	f8d8 0000 	ldr.w	r0, [r8]
 800229c:	b110      	cbz	r0, 80022a4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 800229e:	6803      	ldr	r3, [r0, #0]
 80022a0:	695b      	ldr	r3, [r3, #20]
 80022a2:	4798      	blx	r3
    if (*currentPresenter)
 80022a4:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 80022a8:	b110      	cbz	r0, 80022b0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x8c>
        (*currentPresenter)->deactivate();
 80022aa:	6803      	ldr	r3, [r0, #0]
 80022ac:	685b      	ldr	r3, [r3, #4]
 80022ae:	4798      	blx	r3
    if (*currentScreen)
 80022b0:	f8d8 0000 	ldr.w	r0, [r8]
 80022b4:	b110      	cbz	r0, 80022bc <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x98>
        (*currentScreen)->~Screen();
 80022b6:	6803      	ldr	r3, [r0, #0]
 80022b8:	681b      	ldr	r3, [r3, #0]
 80022ba:	4798      	blx	r3
    if (*currentPresenter)
 80022bc:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 80022c0:	b110      	cbz	r0, 80022c8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 80022c2:	6803      	ldr	r3, [r0, #0]
 80022c4:	689b      	ldr	r3, [r3, #8]
 80022c6:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80022c8:	68e8      	ldr	r0, [r5, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 80022ca:	6803      	ldr	r3, [r0, #0]
 80022cc:	2100      	movs	r1, #0
 80022ce:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80022d0:	4798      	blx	r3
        : screenContainer(0), done(false)
 80022d2:	f04f 0b00 	mov.w	fp, #0
 80022d6:	4b24      	ldr	r3, [pc, #144]	; (8002368 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x144>)
 80022d8:	6003      	str	r3, [r0, #0]
 80022da:	4604      	mov	r4, r0
 80022dc:	f8c0 b004 	str.w	fp, [r0, #4]
 80022e0:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80022e4:	68a8      	ldr	r0, [r5, #8]
 80022e6:	6803      	ldr	r3, [r0, #0]
 80022e8:	4659      	mov	r1, fp
 80022ea:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80022ec:	4798      	blx	r3
 80022ee:	4606      	mov	r6, r0
 80022f0:	f002 f8ec 	bl	80044cc <_ZN11Screen1ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80022f4:	6868      	ldr	r0, [r5, #4]
 80022f6:	6803      	ldr	r3, [r0, #0]
 80022f8:	4659      	mov	r1, fp
 80022fa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80022fc:	4798      	blx	r3
 80022fe:	4631      	mov	r1, r6
 8002300:	4605      	mov	r5, r0
 8002302:	f002 f86d 	bl	80043e0 <_ZN16Screen1PresenterC1ER11Screen1View>
    *currentTrans = newTransition;
 8002306:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 800230a:	f8c7 5138 	str.w	r5, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 800230e:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8002312:	b1e5      	cbz	r5, 800234e <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x12a>
 8002314:	1d2b      	adds	r3, r5, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 8002316:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800231a:	6833      	ldr	r3, [r6, #0]
    virtual void UpdateBatteryVoltage () {};
    virtual void DrawPoint () {};

    void bind(Model* m)
    {
        model = m;
 800231c:	f8c5 a008 	str.w	sl, [r5, #8]
 8002320:	4630      	mov	r0, r6
 8002322:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 8002324:	63f5      	str	r5, [r6, #60]	; 0x3c
 8002326:	4798      	blx	r3
    newPresenter->activate();
 8002328:	682b      	ldr	r3, [r5, #0]
 800232a:	4628      	mov	r0, r5
 800232c:	681b      	ldr	r3, [r3, #0]
 800232e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8002330:	4621      	mov	r1, r4
 8002332:	4630      	mov	r0, r6
 8002334:	f00f fa32 	bl	801179c <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8002338:	6823      	ldr	r3, [r4, #0]
 800233a:	4620      	mov	r0, r4
 800233c:	691b      	ldr	r3, [r3, #16]
 800233e:	4798      	blx	r3
    newTransition->invalidate();
 8002340:	6823      	ldr	r3, [r4, #0]
 8002342:	695b      	ldr	r3, [r3, #20]
 8002344:	4620      	mov	r0, r4
}
 8002346:	b001      	add	sp, #4
 8002348:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800234c:	4718      	bx	r3
    model->bind(newPresenter);
 800234e:	462b      	mov	r3, r5
 8002350:	e7e1      	b.n	8002316 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0xf2>
 8002352:	bf00      	nop
 8002354:	08020e5c 	.word	0x08020e5c
 8002358:	08020eea 	.word	0x08020eea
 800235c:	08020fee 	.word	0x08020fee
 8002360:	08021035 	.word	0x08021035
 8002364:	080210d8 	.word	0x080210d8
 8002368:	0802141c 	.word	0x0802141c
 800236c:	200174a0 	.word	0x200174a0
 8002370:	2001749c 	.word	0x2001749c

08002374 <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8002374:	4b04      	ldr	r3, [pc, #16]	; (8002388 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 8002376:	681b      	ldr	r3, [r3, #0]
 8002378:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800237c:	b10a      	cbz	r2, 8002382 <_ZN8touchgfx3HAL3lcdEv+0xe>
 800237e:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8002380:	b900      	cbnz	r0, 8002384 <_ZN8touchgfx3HAL3lcdEv+0x10>
        return instance->lcdRef;
 8002382:	6898      	ldr	r0, [r3, #8]
    }
 8002384:	4770      	bx	lr
 8002386:	bf00      	nop
 8002388:	20017458 	.word	0x20017458

0800238c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
 800238c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800238e:	4604      	mov	r4, r0
        animationCounter++;
 8002390:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter <= (animationSteps))
 8002392:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 8002394:	3001      	adds	r0, #1
 8002396:	b2c0      	uxtb	r0, r0
        if (animationCounter <= (animationSteps))
 8002398:	4298      	cmp	r0, r3
    virtual void handleTickEvent()
 800239a:	b089      	sub	sp, #36	; 0x24
        animationCounter++;
 800239c:	72a0      	strb	r0, [r4, #10]
        if (animationCounter <= (animationSteps))
 800239e:	d850      	bhi.n	8002442 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xb6>
            calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 80023a0:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80023a4:	2100      	movs	r1, #0
 80023a6:	f00f f9ff 	bl	80117a8 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
            if (calculatedValue % 2)
 80023aa:	f010 0201 	ands.w	r2, r0, #1
 80023ae:	b283      	uxth	r3, r0
 80023b0:	d04d      	beq.n	800244e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xc2>
                calculatedValue += (calculatedValue > 0 ? 1 : -1);
 80023b2:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80023b6:	2800      	cmp	r0, #0
 80023b8:	bfd8      	it	le
 80023ba:	460a      	movle	r2, r1
 80023bc:	4413      	add	r3, r2
 80023be:	81e3      	strh	r3, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 80023c0:	4e24      	ldr	r6, [pc, #144]	; (8002454 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xc8>)
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 80023c2:	4f25      	ldr	r7, [pc, #148]	; (8002458 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xcc>)
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 80023c4:	8831      	ldrh	r1, [r6, #0]
                const uint16_t prevSolidWidth = solid.getWidth();
 80023c6:	f8b4 c018 	ldrh.w	ip, [r4, #24]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 80023ca:	89e3      	ldrh	r3, [r4, #14]
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 80023cc:	f9b7 0000 	ldrsh.w	r0, [r7]
 80023d0:	f8ad 001e 	strh.w	r0, [sp, #30]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 80023d4:	1aca      	subs	r2, r1, r3
                screenContainer->invalidateRect(r);
 80023d6:	6860      	ldr	r0, [r4, #4]
                const uint16_t delta = prevSolidWidth - solid.getWidth();
 80023d8:	4463      	add	r3, ip
 80023da:	1a5b      	subs	r3, r3, r1
 80023dc:	f8ad 301c 	strh.w	r3, [sp, #28]
                screenContainer->invalidateRect(r);
 80023e0:	6803      	ldr	r3, [r0, #0]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 80023e2:	b212      	sxth	r2, r2
 80023e4:	2500      	movs	r5, #0
                screenContainer->invalidateRect(r);
 80023e6:	691b      	ldr	r3, [r3, #16]
        rect.width = width;
 80023e8:	8322      	strh	r2, [r4, #24]
 80023ea:	f8ad 2018 	strh.w	r2, [sp, #24]
 80023ee:	f8ad 501a 	strh.w	r5, [sp, #26]
 80023f2:	a906      	add	r1, sp, #24
 80023f4:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 80023f6:	7aa3      	ldrb	r3, [r4, #10]
 80023f8:	2b01      	cmp	r3, #1
 80023fa:	d126      	bne.n	800244a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xbe>
 80023fc:	4b17      	ldr	r3, [pc, #92]	; (800245c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xd0>)
 80023fe:	781b      	ldrb	r3, [r3, #0]
 8002400:	b31b      	cbz	r3, 800244a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xbe>
            Rect rect = solid.getRect(); // Part to copy between buffers
 8002402:	69a1      	ldr	r1, [r4, #24]
 8002404:	6960      	ldr	r0, [r4, #20]
 8002406:	ab04      	add	r3, sp, #16
 8002408:	c303      	stmia	r3!, {r0, r1}
        return instance;
 800240a:	4b15      	ldr	r3, [pc, #84]	; (8002460 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xd4>)
 800240c:	6818      	ldr	r0, [r3, #0]
            uint16_t* tftFb = HAL::getInstance()->getTFTFrameBuffer();
 800240e:	6803      	ldr	r3, [r0, #0]
 8002410:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002412:	4798      	blx	r3
            source.width = HAL::DISPLAY_WIDTH;
 8002414:	8833      	ldrh	r3, [r6, #0]
 8002416:	f8ad 301c 	strh.w	r3, [sp, #28]
            source.height = HAL::DISPLAY_HEIGHT;
 800241a:	883b      	ldrh	r3, [r7, #0]
 800241c:	f8ad 301e 	strh.w	r3, [sp, #30]
            uint16_t* tftFb = HAL::getInstance()->getTFTFrameBuffer();
 8002420:	9003      	str	r0, [sp, #12]
        : x(0), y(0), width(0), height(0)
 8002422:	f8ad 5018 	strh.w	r5, [sp, #24]
 8002426:	f8ad 501a 	strh.w	r5, [sp, #26]
            HAL::getInstance()->lcd().blitCopy((const uint16_t*)tftFb, source, rect, 255, false);
 800242a:	f7ff ffa3 	bl	8002374 <_ZN8touchgfx3HAL3lcdEv>
 800242e:	22ff      	movs	r2, #255	; 0xff
 8002430:	6803      	ldr	r3, [r0, #0]
 8002432:	9200      	str	r2, [sp, #0]
 8002434:	9501      	str	r5, [sp, #4]
 8002436:	68dc      	ldr	r4, [r3, #12]
 8002438:	9903      	ldr	r1, [sp, #12]
 800243a:	ab04      	add	r3, sp, #16
 800243c:	aa06      	add	r2, sp, #24
 800243e:	47a0      	blx	r4
 8002440:	e003      	b.n	800244a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xbe>
            done = true;
 8002442:	2301      	movs	r3, #1
 8002444:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 8002446:	2300      	movs	r3, #0
 8002448:	72a3      	strb	r3, [r4, #10]
    }
 800244a:	b009      	add	sp, #36	; 0x24
 800244c:	bdf0      	pop	{r4, r5, r6, r7, pc}
            calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 800244e:	81e0      	strh	r0, [r4, #14]
 8002450:	e7b6      	b.n	80023c0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x34>
 8002452:	bf00      	nop
 8002454:	2001744c 	.word	0x2001744c
 8002458:	2001744e 	.word	0x2001744e
 800245c:	20017456 	.word	0x20017456
 8002460:	20017458 	.word	0x20017458

08002464 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 8002464:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002466:	4604      	mov	r4, r0
 8002468:	4617      	mov	r7, r2
 800246a:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 800246c:	f00d fd08 	bl	800fe80 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 8002470:	4b0e      	ldr	r3, [pc, #56]	; (80024ac <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x48>)
 8002472:	601c      	str	r4, [r3, #0]
      model(m)
 8002474:	4b0e      	ldr	r3, [pc, #56]	; (80024b0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x4c>)
 8002476:	6023      	str	r3, [r4, #0]
        : pobject(0), pmemfun(0)
 8002478:	4b0e      	ldr	r3, [pc, #56]	; (80024b4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
          pendingScreenTransitionCallback(0)
 800247a:	2500      	movs	r5, #0
 800247c:	e9c4 3550 	strd	r3, r5, [r4, #320]	; 0x140
 8002480:	4b0d      	ldr	r3, [pc, #52]	; (80024b8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
 8002482:	e9c4 5552 	strd	r5, r5, [r4, #328]	; 0x148
 8002486:	6818      	ldr	r0, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 8002488:	6803      	ldr	r3, [r0, #0]
 800248a:	4629      	mov	r1, r5
 800248c:	689b      	ldr	r3, [r3, #8]
 800248e:	e9c4 554e 	strd	r5, r5, [r4, #312]	; 0x138
      model(m)
 8002492:	e9c4 7654 	strd	r7, r6, [r4, #336]	; 0x150
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 8002496:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 8002498:	4628      	mov	r0, r5
 800249a:	f001 fef7 	bl	800428c <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 800249e:	f7ff ff69 	bl	8002374 <_ZN8touchgfx3HAL3lcdEv>
 80024a2:	f015 fdda 	bl	801805a <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
}
 80024a6:	4620      	mov	r0, r4
 80024a8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80024aa:	bf00      	nop
 80024ac:	200174ac 	.word	0x200174ac
 80024b0:	080213d0 	.word	0x080213d0
 80024b4:	080213b8 	.word	0x080213b8
 80024b8:	20017458 	.word	0x20017458

080024bc <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80024bc:	4b06      	ldr	r3, [pc, #24]	; (80024d8 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv+0x1c>)
 80024be:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 80024c2:	2300      	movs	r3, #0
 80024c4:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
    pendingScreenTransitionCallback = &transitionCallback;
 80024c8:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 80024cc:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 80024d0:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 80024d4:	4770      	bx	lr
 80024d6:	bf00      	nop
 80024d8:	08002225 	.word	0x08002225

080024dc <_ZN23FrontendApplicationBase35gotoScreen1ScreenWipeTransitionEastEv>:
 80024dc:	4b06      	ldr	r3, [pc, #24]	; (80024f8 <_ZN23FrontendApplicationBase35gotoScreen1ScreenWipeTransitionEastEv+0x1c>)
 80024de:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 80024e2:	2300      	movs	r3, #0
 80024e4:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c

void FrontendApplicationBase::gotoScreen1ScreenWipeTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoScreen1ScreenWipeTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 80024e8:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 80024ec:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 80024f0:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 80024f4:	4770      	bx	lr
 80024f6:	bf00      	nop
 80024f8:	080026c1 	.word	0x080026c1

080024fc <_ZN23FrontendApplicationBase39gotoScreenGraphScreenWipeTransitionEastEv>:
 80024fc:	4b06      	ldr	r3, [pc, #24]	; (8002518 <_ZN23FrontendApplicationBase39gotoScreenGraphScreenWipeTransitionEastEv+0x1c>)
 80024fe:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8002502:	2300      	movs	r3, #0
 8002504:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
// ScreenGraph

void FrontendApplicationBase::gotoScreenGraphScreenWipeTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoScreenGraphScreenWipeTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8002508:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 800250c:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8002510:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8002514:	4770      	bx	lr
 8002516:	bf00      	nop
 8002518:	08002581 	.word	0x08002581

0800251c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>:
    WipeTransition(const uint8_t transitionSteps = 20)
 800251c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800251e:	4604      	mov	r4, r0
 8002520:	2300      	movs	r3, #0
          solid()
 8002522:	4a13      	ldr	r2, [pc, #76]	; (8002570 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x54>)
 8002524:	6002      	str	r2, [r0, #0]
 8002526:	6043      	str	r3, [r0, #4]
 8002528:	7203      	strb	r3, [r0, #8]
 800252a:	7241      	strb	r1, [r0, #9]
 800252c:	7283      	strb	r3, [r0, #10]
 800252e:	e9c4 3305 	strd	r3, r3, [r4, #20]
 8002532:	e9c4 3307 	strd	r3, r3, [r4, #28]
 8002536:	e9c4 3309 	strd	r3, r3, [r4, #36]	; 0x24
 800253a:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 800253e:	81e3      	strh	r3, [r4, #14]
 8002540:	f44f 7380 	mov.w	r3, #256	; 0x100
 8002544:	6363      	str	r3, [r4, #52]	; 0x34
    class FullSolidRect : public Widget
 8002546:	4b0b      	ldr	r3, [pc, #44]	; (8002574 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x58>)
 8002548:	6123      	str	r3, [r4, #16]
            targetValue = HAL::DISPLAY_WIDTH;
 800254a:	4b0b      	ldr	r3, [pc, #44]	; (8002578 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x5c>)
 800254c:	f9b3 1000 	ldrsh.w	r1, [r3]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8002550:	4b0a      	ldr	r3, [pc, #40]	; (800257c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x60>)
            targetValue = HAL::DISPLAY_WIDTH;
 8002552:	81a1      	strh	r1, [r4, #12]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8002554:	f9b3 5000 	ldrsh.w	r5, [r3]
          solid()
 8002558:	3010      	adds	r0, #16
        setWidth(width);
 800255a:	9001      	str	r0, [sp, #4]
 800255c:	f7ff fda6 	bl	80020ac <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 8002560:	9801      	ldr	r0, [sp, #4]
 8002562:	4629      	mov	r1, r5
 8002564:	f7ff fda4 	bl	80020b0 <_ZN8touchgfx8Drawable9setHeightEs>
    }
 8002568:	4620      	mov	r0, r4
 800256a:	b003      	add	sp, #12
 800256c:	bd30      	pop	{r4, r5, pc}
 800256e:	bf00      	nop
 8002570:	080214a8 	.word	0x080214a8
 8002574:	08021440 	.word	0x08021440
 8002578:	2001744c 	.word	0x2001744c
 800257c:	2001744e 	.word	0x2001744e

08002580 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv>:

void FrontendApplicationBase::gotoScreenGraphScreenWipeTransitionEastImpl()
{
 8002580:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<ScreenGraphView, ScreenGraphPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8002584:	e9d0 4a54 	ldrd	r4, sl, [r0, #336]	; 0x150
{
 8002588:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800258a:	68a0      	ldr	r0, [r4, #8]
 800258c:	6803      	ldr	r3, [r0, #0]
 800258e:	6a1b      	ldr	r3, [r3, #32]
 8002590:	4798      	blx	r3
 8002592:	f241 7377 	movw	r3, #6007	; 0x1777
 8002596:	4298      	cmp	r0, r3
 8002598:	d805      	bhi.n	80025a6 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x26>
 800259a:	4b42      	ldr	r3, [pc, #264]	; (80026a4 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x124>)
 800259c:	4a42      	ldr	r2, [pc, #264]	; (80026a8 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x128>)
 800259e:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80025a0:	4842      	ldr	r0, [pc, #264]	; (80026ac <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x12c>)
 80025a2:	f01c ffb7 	bl	801f514 <__assert_func>
 80025a6:	6860      	ldr	r0, [r4, #4]
 80025a8:	6803      	ldr	r3, [r0, #0]
 80025aa:	6a1b      	ldr	r3, [r3, #32]
 80025ac:	4798      	blx	r3
 80025ae:	280f      	cmp	r0, #15
 80025b0:	d803      	bhi.n	80025ba <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x3a>
 80025b2:	4b3f      	ldr	r3, [pc, #252]	; (80026b0 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x130>)
 80025b4:	4a3c      	ldr	r2, [pc, #240]	; (80026a8 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x128>)
 80025b6:	21a4      	movs	r1, #164	; 0xa4
 80025b8:	e7f2      	b.n	80025a0 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80025ba:	68e0      	ldr	r0, [r4, #12]
 80025bc:	6803      	ldr	r3, [r0, #0]
 80025be:	6a1b      	ldr	r3, [r3, #32]
 80025c0:	4798      	blx	r3
 80025c2:	2837      	cmp	r0, #55	; 0x37
 80025c4:	d803      	bhi.n	80025ce <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x4e>
 80025c6:	4b3b      	ldr	r3, [pc, #236]	; (80026b4 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x134>)
 80025c8:	4a37      	ldr	r2, [pc, #220]	; (80026a8 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x128>)
 80025ca:	21a5      	movs	r1, #165	; 0xa5
 80025cc:	e7e8      	b.n	80025a0 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x20>
    if (*currentTrans)
 80025ce:	f8df 90e8 	ldr.w	r9, [pc, #232]	; 80026b8 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x138>
    Application::getInstance()->clearAllTimerWidgets();
 80025d2:	f00d fc35 	bl	800fe40 <_ZN8touchgfx11Application11getInstanceEv>
 80025d6:	f00d fc39 	bl	800fe4c <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 80025da:	f8d9 0000 	ldr.w	r0, [r9]
 80025de:	b110      	cbz	r0, 80025e6 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 80025e0:	6803      	ldr	r3, [r0, #0]
 80025e2:	68db      	ldr	r3, [r3, #12]
 80025e4:	4798      	blx	r3
    if (*currentTrans)
 80025e6:	f8d9 0000 	ldr.w	r0, [r9]
 80025ea:	b110      	cbz	r0, 80025f2 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 80025ec:	6803      	ldr	r3, [r0, #0]
 80025ee:	681b      	ldr	r3, [r3, #0]
 80025f0:	4798      	blx	r3
    if (*currentScreen)
 80025f2:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 80026bc <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x13c>
 80025f6:	f8d8 0000 	ldr.w	r0, [r8]
 80025fa:	b110      	cbz	r0, 8002602 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 80025fc:	6803      	ldr	r3, [r0, #0]
 80025fe:	695b      	ldr	r3, [r3, #20]
 8002600:	4798      	blx	r3
    if (*currentPresenter)
 8002602:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8002606:	b110      	cbz	r0, 800260e <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8002608:	6803      	ldr	r3, [r0, #0]
 800260a:	685b      	ldr	r3, [r3, #4]
 800260c:	4798      	blx	r3
    if (*currentScreen)
 800260e:	f8d8 0000 	ldr.w	r0, [r8]
 8002612:	b110      	cbz	r0, 800261a <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8002614:	6803      	ldr	r3, [r0, #0]
 8002616:	681b      	ldr	r3, [r3, #0]
 8002618:	4798      	blx	r3
    if (*currentPresenter)
 800261a:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 800261e:	b110      	cbz	r0, 8002626 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8002620:	6803      	ldr	r3, [r0, #0]
 8002622:	689b      	ldr	r3, [r3, #8]
 8002624:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002626:	68e0      	ldr	r0, [r4, #12]
 8002628:	6803      	ldr	r3, [r0, #0]
 800262a:	2100      	movs	r1, #0
 800262c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800262e:	4798      	blx	r3
 8002630:	2114      	movs	r1, #20
 8002632:	4605      	mov	r5, r0
 8002634:	f7ff ff72 	bl	800251c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8002638:	68a0      	ldr	r0, [r4, #8]
 800263a:	6803      	ldr	r3, [r0, #0]
 800263c:	2100      	movs	r1, #0
 800263e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002640:	4798      	blx	r3
 8002642:	4606      	mov	r6, r0
 8002644:	f002 f84e 	bl	80046e4 <_ZN15ScreenGraphViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8002648:	6860      	ldr	r0, [r4, #4]
 800264a:	6803      	ldr	r3, [r0, #0]
 800264c:	2100      	movs	r1, #0
 800264e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002650:	4798      	blx	r3
 8002652:	4631      	mov	r1, r6
 8002654:	4604      	mov	r4, r0
 8002656:	f001 ff6b 	bl	8004530 <_ZN20ScreenGraphPresenterC1ER15ScreenGraphView>
    *currentTrans = newTransition;
 800265a:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800265e:	f8c7 4138 	str.w	r4, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 8002662:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8002666:	b1dc      	cbz	r4, 80026a0 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x120>
 8002668:	1d23      	adds	r3, r4, #4
 800266a:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800266e:	6833      	ldr	r3, [r6, #0]
 8002670:	f8c4 a008 	str.w	sl, [r4, #8]
 8002674:	4630      	mov	r0, r6
 8002676:	68db      	ldr	r3, [r3, #12]
 8002678:	63f4      	str	r4, [r6, #60]	; 0x3c
 800267a:	4798      	blx	r3
    newPresenter->activate();
 800267c:	6823      	ldr	r3, [r4, #0]
 800267e:	4620      	mov	r0, r4
 8002680:	681b      	ldr	r3, [r3, #0]
 8002682:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8002684:	4629      	mov	r1, r5
 8002686:	4630      	mov	r0, r6
 8002688:	f00f f888 	bl	801179c <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800268c:	682b      	ldr	r3, [r5, #0]
 800268e:	4628      	mov	r0, r5
 8002690:	691b      	ldr	r3, [r3, #16]
 8002692:	4798      	blx	r3
    newTransition->invalidate();
 8002694:	682b      	ldr	r3, [r5, #0]
 8002696:	4628      	mov	r0, r5
 8002698:	695b      	ldr	r3, [r3, #20]
}
 800269a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800269e:	4718      	bx	r3
    model->bind(newPresenter);
 80026a0:	4623      	mov	r3, r4
 80026a2:	e7e2      	b.n	800266a <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0xea>
 80026a4:	08020e5c 	.word	0x08020e5c
 80026a8:	0802117b 	.word	0x0802117b
 80026ac:	08020fee 	.word	0x08020fee
 80026b0:	08021035 	.word	0x08021035
 80026b4:	080210d8 	.word	0x080210d8
 80026b8:	200174a0 	.word	0x200174a0
 80026bc:	2001749c 	.word	0x2001749c

080026c0 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv>:
{
 80026c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Screen1View, Screen1Presenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80026c4:	e9d0 4a54 	ldrd	r4, sl, [r0, #336]	; 0x150
{
 80026c8:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80026ca:	68a0      	ldr	r0, [r4, #8]
 80026cc:	6803      	ldr	r3, [r0, #0]
 80026ce:	6a1b      	ldr	r3, [r3, #32]
 80026d0:	4798      	blx	r3
 80026d2:	f5b0 7f7e 	cmp.w	r0, #1016	; 0x3f8
 80026d6:	d205      	bcs.n	80026e4 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x24>
 80026d8:	4b42      	ldr	r3, [pc, #264]	; (80027e4 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x124>)
 80026da:	4a43      	ldr	r2, [pc, #268]	; (80027e8 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x128>)
 80026dc:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80026de:	4843      	ldr	r0, [pc, #268]	; (80027ec <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x12c>)
 80026e0:	f01c ff18 	bl	801f514 <__assert_func>
 80026e4:	6860      	ldr	r0, [r4, #4]
 80026e6:	6803      	ldr	r3, [r0, #0]
 80026e8:	6a1b      	ldr	r3, [r3, #32]
 80026ea:	4798      	blx	r3
 80026ec:	280f      	cmp	r0, #15
 80026ee:	d803      	bhi.n	80026f8 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x38>
 80026f0:	4b3f      	ldr	r3, [pc, #252]	; (80027f0 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x130>)
 80026f2:	4a3d      	ldr	r2, [pc, #244]	; (80027e8 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x128>)
 80026f4:	21a4      	movs	r1, #164	; 0xa4
 80026f6:	e7f2      	b.n	80026de <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80026f8:	68e0      	ldr	r0, [r4, #12]
 80026fa:	6803      	ldr	r3, [r0, #0]
 80026fc:	6a1b      	ldr	r3, [r3, #32]
 80026fe:	4798      	blx	r3
 8002700:	2837      	cmp	r0, #55	; 0x37
 8002702:	d803      	bhi.n	800270c <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x4c>
 8002704:	4b3b      	ldr	r3, [pc, #236]	; (80027f4 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x134>)
 8002706:	4a38      	ldr	r2, [pc, #224]	; (80027e8 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x128>)
 8002708:	21a5      	movs	r1, #165	; 0xa5
 800270a:	e7e8      	b.n	80026de <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x1e>
    if (*currentTrans)
 800270c:	f8df 90e8 	ldr.w	r9, [pc, #232]	; 80027f8 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x138>
    Application::getInstance()->clearAllTimerWidgets();
 8002710:	f00d fb96 	bl	800fe40 <_ZN8touchgfx11Application11getInstanceEv>
 8002714:	f00d fb9a 	bl	800fe4c <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8002718:	f8d9 0000 	ldr.w	r0, [r9]
 800271c:	b110      	cbz	r0, 8002724 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x64>
        (*currentTrans)->tearDown();
 800271e:	6803      	ldr	r3, [r0, #0]
 8002720:	68db      	ldr	r3, [r3, #12]
 8002722:	4798      	blx	r3
    if (*currentTrans)
 8002724:	f8d9 0000 	ldr.w	r0, [r9]
 8002728:	b110      	cbz	r0, 8002730 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x70>
        (*currentTrans)->~Transition();
 800272a:	6803      	ldr	r3, [r0, #0]
 800272c:	681b      	ldr	r3, [r3, #0]
 800272e:	4798      	blx	r3
    if (*currentScreen)
 8002730:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 80027fc <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x13c>
 8002734:	f8d8 0000 	ldr.w	r0, [r8]
 8002738:	b110      	cbz	r0, 8002740 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 800273a:	6803      	ldr	r3, [r0, #0]
 800273c:	695b      	ldr	r3, [r3, #20]
 800273e:	4798      	blx	r3
    if (*currentPresenter)
 8002740:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8002744:	b110      	cbz	r0, 800274c <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x8c>
        (*currentPresenter)->deactivate();
 8002746:	6803      	ldr	r3, [r0, #0]
 8002748:	685b      	ldr	r3, [r3, #4]
 800274a:	4798      	blx	r3
    if (*currentScreen)
 800274c:	f8d8 0000 	ldr.w	r0, [r8]
 8002750:	b110      	cbz	r0, 8002758 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x98>
        (*currentScreen)->~Screen();
 8002752:	6803      	ldr	r3, [r0, #0]
 8002754:	681b      	ldr	r3, [r3, #0]
 8002756:	4798      	blx	r3
    if (*currentPresenter)
 8002758:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 800275c:	b110      	cbz	r0, 8002764 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 800275e:	6803      	ldr	r3, [r0, #0]
 8002760:	689b      	ldr	r3, [r3, #8]
 8002762:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002764:	68e0      	ldr	r0, [r4, #12]
 8002766:	6803      	ldr	r3, [r0, #0]
 8002768:	2100      	movs	r1, #0
 800276a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800276c:	4798      	blx	r3
 800276e:	2114      	movs	r1, #20
 8002770:	4605      	mov	r5, r0
 8002772:	f7ff fed3 	bl	800251c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8002776:	68a0      	ldr	r0, [r4, #8]
 8002778:	6803      	ldr	r3, [r0, #0]
 800277a:	2100      	movs	r1, #0
 800277c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800277e:	4798      	blx	r3
 8002780:	4606      	mov	r6, r0
 8002782:	f001 fea3 	bl	80044cc <_ZN11Screen1ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8002786:	6860      	ldr	r0, [r4, #4]
 8002788:	6803      	ldr	r3, [r0, #0]
 800278a:	2100      	movs	r1, #0
 800278c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800278e:	4798      	blx	r3
 8002790:	4631      	mov	r1, r6
 8002792:	4604      	mov	r4, r0
 8002794:	f001 fe24 	bl	80043e0 <_ZN16Screen1PresenterC1ER11Screen1View>
    *currentTrans = newTransition;
 8002798:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800279c:	f8c7 4138 	str.w	r4, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 80027a0:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80027a4:	b1dc      	cbz	r4, 80027de <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x11e>
 80027a6:	1d23      	adds	r3, r4, #4
 80027a8:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80027ac:	6833      	ldr	r3, [r6, #0]
 80027ae:	f8c4 a008 	str.w	sl, [r4, #8]
 80027b2:	4630      	mov	r0, r6
 80027b4:	68db      	ldr	r3, [r3, #12]
 80027b6:	63f4      	str	r4, [r6, #60]	; 0x3c
 80027b8:	4798      	blx	r3
    newPresenter->activate();
 80027ba:	6823      	ldr	r3, [r4, #0]
 80027bc:	4620      	mov	r0, r4
 80027be:	681b      	ldr	r3, [r3, #0]
 80027c0:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80027c2:	4629      	mov	r1, r5
 80027c4:	4630      	mov	r0, r6
 80027c6:	f00e ffe9 	bl	801179c <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80027ca:	682b      	ldr	r3, [r5, #0]
 80027cc:	4628      	mov	r0, r5
 80027ce:	691b      	ldr	r3, [r3, #16]
 80027d0:	4798      	blx	r3
    newTransition->invalidate();
 80027d2:	682b      	ldr	r3, [r5, #0]
 80027d4:	4628      	mov	r0, r5
 80027d6:	695b      	ldr	r3, [r3, #20]
}
 80027d8:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80027dc:	4718      	bx	r3
    model->bind(newPresenter);
 80027de:	4623      	mov	r3, r4
 80027e0:	e7e2      	b.n	80027a8 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0xe8>
 80027e2:	bf00      	nop
 80027e4:	08020e5c 	.word	0x08020e5c
 80027e8:	08021299 	.word	0x08021299
 80027ec:	08020fee 	.word	0x08020fee
 80027f0:	08021035 	.word	0x08021035
 80027f4:	080210d8 	.word	0x080210d8
 80027f8:	200174a0 	.word	0x200174a0
 80027fc:	2001749c 	.word	0x2001749c

08002800 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 8002800:	6a00      	ldr	r0, [r0, #32]
 8002802:	4770      	bx	lr

08002804 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 8002804:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8002806:	4770      	bx	lr

08002808 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 8002808:	4770      	bx	lr

0800280a <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 800280a:	888b      	ldrh	r3, [r1, #4]
 800280c:	6980      	ldr	r0, [r0, #24]
 800280e:	680a      	ldr	r2, [r1, #0]
 8002810:	0adb      	lsrs	r3, r3, #11
 8002812:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 8002816:	4410      	add	r0, r2
 8002818:	4770      	bx	lr

0800281a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 800281a:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 800281c:	b1c2      	cbz	r2, 8002850 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 800281e:	7b13      	ldrb	r3, [r2, #12]
 8002820:	b1b3      	cbz	r3, 8002850 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 8002822:	7b54      	ldrb	r4, [r2, #13]
 8002824:	7ad2      	ldrb	r2, [r2, #11]
 8002826:	0224      	lsls	r4, r4, #8
 8002828:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 800282c:	4314      	orrs	r4, r2
 800282e:	69c2      	ldr	r2, [r0, #28]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8002830:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8002832:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 8002836:	8813      	ldrh	r3, [r2, #0]
 8002838:	428b      	cmp	r3, r1
 800283a:	d102      	bne.n	8002842 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 800283c:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 8002840:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 8002842:	d805      	bhi.n	8002850 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8002844:	3801      	subs	r0, #1
 8002846:	b280      	uxth	r0, r0
 8002848:	3204      	adds	r2, #4
 800284a:	2800      	cmp	r0, #0
 800284c:	d1f3      	bne.n	8002836 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 800284e:	e7f7      	b.n	8002840 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 8002850:	2000      	movs	r0, #0
 8002852:	e7f5      	b.n	8002840 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

08002854 <_ZN8touchgfx13GeneratedFontD0Ev>:
 8002854:	b510      	push	{r4, lr}
 8002856:	2128      	movs	r1, #40	; 0x28
 8002858:	4604      	mov	r4, r0
 800285a:	f01c fe2c 	bl	801f4b6 <_ZdlPvj>
 800285e:	4620      	mov	r0, r4
 8002860:	bd10      	pop	{r4, pc}
	...

08002864 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* list, uint16_t size, uint16_t height, uint8_t pixBelowBase, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 8002864:	b530      	push	{r4, r5, lr}
 8002866:	b089      	sub	sp, #36	; 0x24
 8002868:	4604      	mov	r4, r0
      arabicTable(formsTable)
 800286a:	f8bd 5050 	ldrh.w	r5, [sp, #80]	; 0x50
 800286e:	9506      	str	r5, [sp, #24]
 8002870:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 8002874:	9505      	str	r5, [sp, #20]
 8002876:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 800287a:	9504      	str	r5, [sp, #16]
 800287c:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 8002880:	9503      	str	r5, [sp, #12]
 8002882:	f89d 5038 	ldrb.w	r5, [sp, #56]	; 0x38
 8002886:	9502      	str	r5, [sp, #8]
 8002888:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 800288c:	9501      	str	r5, [sp, #4]
 800288e:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 8002892:	9500      	str	r5, [sp, #0]
 8002894:	f00e fb18 	bl	8010ec8 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>
 8002898:	4b06      	ldr	r3, [pc, #24]	; (80028b4 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x50>)
 800289a:	6023      	str	r3, [r4, #0]
 800289c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800289e:	61a3      	str	r3, [r4, #24]
 80028a0:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80028a2:	61e3      	str	r3, [r4, #28]
 80028a4:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80028a6:	6223      	str	r3, [r4, #32]
 80028a8:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80028aa:	6263      	str	r3, [r4, #36]	; 0x24
}
 80028ac:	4620      	mov	r0, r4
 80028ae:	b009      	add	sp, #36	; 0x24
 80028b0:	bd30      	pop	{r4, r5, pc}
 80028b2:	bf00      	nop
 80028b4:	080214cc 	.word	0x080214cc

080028b8 <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
 80028b8:	6a80      	ldr	r0, [r0, #40]	; 0x28
 80028ba:	4770      	bx	lr

080028bc <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 80028bc:	4770      	bx	lr

080028be <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 80028be:	4770      	bx	lr

080028c0 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 80028c0:	4770      	bx	lr

080028c2 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 80028c2:	4770      	bx	lr

080028c4 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 80028c4:	4770      	bx	lr

080028c6 <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
 80028c6:	b530      	push	{r4, r5, lr}
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
 80028c8:	6803      	ldr	r3, [r0, #0]
        rect.width = width;
 80028ca:	8101      	strh	r1, [r0, #8]
    virtual void setWidth(int16_t width)
 80028cc:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 80028ce:	466d      	mov	r5, sp
 80028d0:	4601      	mov	r1, r0
 80028d2:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setWidth(int16_t width)
 80028d6:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 80028d8:	4628      	mov	r0, r5
 80028da:	4798      	blx	r3
 80028dc:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80028e0:	343c      	adds	r4, #60	; 0x3c
 80028e2:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 80028e6:	b005      	add	sp, #20
 80028e8:	bd30      	pop	{r4, r5, pc}

080028ea <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
 80028ea:	b530      	push	{r4, r5, lr}
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
 80028ec:	6803      	ldr	r3, [r0, #0]
        rect.height = height;
 80028ee:	8141      	strh	r1, [r0, #10]
    virtual void setHeight(int16_t height)
 80028f0:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 80028f2:	466d      	mov	r5, sp
 80028f4:	4601      	mov	r1, r0
 80028f6:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setHeight(int16_t height)
 80028fa:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 80028fc:	4628      	mov	r0, r5
 80028fe:	4798      	blx	r3
 8002900:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002904:	343c      	adds	r4, #60	; 0x3c
 8002906:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 800290a:	b005      	add	sp, #20
 800290c:	bd30      	pop	{r4, r5, pc}

0800290e <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 800290e:	2200      	movs	r2, #0
 8002910:	8002      	strh	r2, [r0, #0]
 8002912:	8042      	strh	r2, [r0, #2]
 8002914:	8082      	strh	r2, [r0, #4]
 8002916:	80c2      	strh	r2, [r0, #6]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8002918:	4770      	bx	lr

0800291a <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 800291a:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
    }
 800291e:	4770      	bx	lr

08002920 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
     * @param  x         The x coordinate of the TextArea.
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002920:	b570      	push	{r4, r5, r6, lr}
    {
        setX(x);
 8002922:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002924:	4604      	mov	r4, r0
        setX(x);
 8002926:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002928:	4615      	mov	r5, r2
        setX(x);
 800292a:	4798      	blx	r3
        setBaselineY(baselineY);
 800292c:	6823      	ldr	r3, [r4, #0]
 800292e:	4629      	mov	r1, r5
 8002930:	4620      	mov	r0, r4
 8002932:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    }
 8002934:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
 8002938:	4718      	bx	r3

0800293a <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
 800293a:	2000      	movs	r0, #0
 800293c:	4770      	bx	lr

0800293e <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
 800293e:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8002940:	4770      	bx	lr

08002942 <_ZN15Screen1ViewBaseD1Ev>:

class Screen1ViewBase : public touchgfx::View<Screen1Presenter>
{
public:
    Screen1ViewBase();
    virtual ~Screen1ViewBase() {}
 8002942:	4770      	bx	lr

08002944 <_ZN15Screen1ViewBase17ButtonDownClickedEv>:
     * Virtual Action Handlers
     */
    virtual void ButtonDownClicked()
    {
        // Override and implement this function in Screen1
    }
 8002944:	4770      	bx	lr

08002946 <_ZN15Screen1ViewBase15ButtonUpClickedEv>:

    virtual void ButtonUpClicked()
    {
        // Override and implement this function in Screen1
    }
 8002946:	4770      	bx	lr

08002948 <_ZN15Screen1ViewBase18ButtonStartClickedEv>:

    virtual void ButtonStartClicked()
    {
        // Override and implement this function in Screen1
    }
 8002948:	4770      	bx	lr

0800294a <_ZN15Screen1ViewBase11setupScreenEv>:
}

void Screen1ViewBase::setupScreen()
{

}
 800294a:	4770      	bx	lr

0800294c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>:
 * @tparam T Generic type parameter. Typically a AbstractButtonContainer subclass.
 *
 * @see AbstractButtonContainer, BoxWithBorder
 */
template <class T>
class BoxWithBorderButtonStyle : public T
 800294c:	4770      	bx	lr

0800294e <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>:
     *
     * @see setPressed
     */
    bool getPressed()
    {
        return pressed;
 800294e:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
    colortype borderDown;    ///< The border down

    /** @copydoc AbstractButtonContainer::handlePressedUpdated() */
    virtual void handlePressedUpdated()
    {
        borderBox.setColor(T::getPressed() ? down : up);
 8002952:	b14b      	cbz	r3, 8002968 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x1a>
 8002954:	f100 026c 	add.w	r2, r0, #108	; 0x6c
 8002958:	6812      	ldr	r2, [r2, #0]
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 800295a:	65c2      	str	r2, [r0, #92]	; 0x5c
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
 800295c:	b13b      	cbz	r3, 800296e <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x20>
 800295e:	f100 0374 	add.w	r3, r0, #116	; 0x74
 8002962:	681b      	ldr	r3, [r3, #0]
     *
     * @see setColor, getBorderColor, Color::getColorFromRGB
     */
    void setBorderColor(colortype colorBorder)
    {
        borderColor = colorBorder;
 8002964:	6603      	str	r3, [r0, #96]	; 0x60
        T::handlePressedUpdated();
    }
 8002966:	4770      	bx	lr
        borderBox.setColor(T::getPressed() ? down : up);
 8002968:	f100 0268 	add.w	r2, r0, #104	; 0x68
 800296c:	e7f4      	b.n	8002958 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0xa>
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
 800296e:	f100 0370 	add.w	r3, r0, #112	; 0x70
 8002972:	e7f6      	b.n	8002962 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x14>

08002974 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002974:	4770      	bx	lr

08002976 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
 8002976:	4770      	bx	lr

08002978 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEED1Ev>:
 * The position of the icon can be adjusted with setIconXY.
 *
 * @see AbstractButtonContainer
 */
template <class T>
class IconButtonStyle : public T
 8002978:	4770      	bx	lr

0800297a <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 800297a:	4770      	bx	lr

0800297c <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800297c:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 800297e:	68c2      	ldr	r2, [r0, #12]
 8002980:	6844      	ldr	r4, [r0, #4]
 8002982:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002984:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8002986:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800298a:	07d2      	lsls	r2, r2, #31
 800298c:	bf48      	it	mi
 800298e:	5962      	ldrmi	r2, [r4, r5]
 8002990:	689b      	ldr	r3, [r3, #8]
    }
 8002992:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002994:	bf48      	it	mi
 8002996:	58d3      	ldrmi	r3, [r2, r3]
 8002998:	4718      	bx	r3

0800299a <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 800299a:	6843      	ldr	r3, [r0, #4]
 800299c:	b12b      	cbz	r3, 80029aa <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x10>
 800299e:	6883      	ldr	r3, [r0, #8]
 80029a0:	b92b      	cbnz	r3, 80029ae <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
 80029a2:	68c0      	ldr	r0, [r0, #12]
 80029a4:	f000 0001 	and.w	r0, r0, #1
 80029a8:	4770      	bx	lr
 80029aa:	4618      	mov	r0, r3
 80029ac:	4770      	bx	lr
 80029ae:	2001      	movs	r0, #1
    }
 80029b0:	4770      	bx	lr

080029b2 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80029b2:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80029b4:	68c2      	ldr	r2, [r0, #12]
 80029b6:	6844      	ldr	r4, [r0, #4]
 80029b8:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80029ba:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80029bc:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80029c0:	07d2      	lsls	r2, r2, #31
 80029c2:	bf48      	it	mi
 80029c4:	5962      	ldrmi	r2, [r4, r5]
 80029c6:	689b      	ldr	r3, [r3, #8]
    }
 80029c8:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80029ca:	bf48      	it	mi
 80029cc:	58d3      	ldrmi	r3, [r2, r3]
 80029ce:	4718      	bx	r3

080029d0 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80029d0:	6843      	ldr	r3, [r0, #4]
 80029d2:	b12b      	cbz	r3, 80029e0 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80029d4:	6883      	ldr	r3, [r0, #8]
 80029d6:	b92b      	cbnz	r3, 80029e4 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80029d8:	68c0      	ldr	r0, [r0, #12]
 80029da:	f000 0001 	and.w	r0, r0, #1
 80029de:	4770      	bx	lr
 80029e0:	4618      	mov	r0, r3
 80029e2:	4770      	bx	lr
 80029e4:	2001      	movs	r0, #1
    }
 80029e6:	4770      	bx	lr

080029e8 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE18handleAlphaUpdatedEv>:
    }

    /** @copydoc Image::getAlpha() */
    uint8_t getAlpha() const
    {
        return alpha;
 80029e8:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
     *
     * @note The user code must call invalidate() in order to update the display.
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 80029ec:	f880 30a4 	strb.w	r3, [r0, #164]	; 0xa4
    /**
     * @copydoc Image::setAlpha
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 80029f0:	f880 305a 	strb.w	r3, [r0, #90]	; 0x5a
    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        iconImage.setAlpha(T::getAlpha());
        T::handleAlphaUpdated();
    }
 80029f4:	4770      	bx	lr

080029f6 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE18handleAlphaUpdatedEv>:
 80029f6:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
 80029fa:	f880 305a 	strb.w	r3, [r0, #90]	; 0x5a
    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        borderBox.setAlpha(T::getAlpha());
        T::handleAlphaUpdated();
    }
 80029fe:	4770      	bx	lr

08002a00 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>:
    virtual void handlePressedUpdated()
 8002a00:	b510      	push	{r4, lr}
 8002a02:	4604      	mov	r4, r0
        iconImage.setBitmap(T::getPressed() ? iconPressed : iconReleased);
 8002a04:	307c      	adds	r0, #124	; 0x7c
 8002a06:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 8002a0a:	b13b      	cbz	r3, 8002a1c <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv+0x1c>
 8002a0c:	f104 017a 	add.w	r1, r4, #122	; 0x7a
 8002a10:	f00a fd68 	bl	800d4e4 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        T::handlePressedUpdated();
 8002a14:	4620      	mov	r0, r4
 8002a16:	f7ff ff9a 	bl	800294e <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
    }
 8002a1a:	bd10      	pop	{r4, pc}
        iconImage.setBitmap(T::getPressed() ? iconPressed : iconReleased);
 8002a1c:	f104 0178 	add.w	r1, r4, #120	; 0x78
 8002a20:	e7f6      	b.n	8002a10 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv+0x10>

08002a22 <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 8002a22:	b510      	push	{r4, lr}
 8002a24:	214c      	movs	r1, #76	; 0x4c
 8002a26:	4604      	mov	r4, r0
 8002a28:	f01c fd45 	bl	801f4b6 <_ZdlPvj>
 8002a2c:	4620      	mov	r0, r4
 8002a2e:	bd10      	pop	{r4, pc}

08002a30 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED0Ev>:
class BoxWithBorderButtonStyle : public T
 8002a30:	b510      	push	{r4, lr}
 8002a32:	2178      	movs	r1, #120	; 0x78
 8002a34:	4604      	mov	r4, r0
 8002a36:	f01c fd3e 	bl	801f4b6 <_ZdlPvj>
 8002a3a:	4620      	mov	r0, r4
 8002a3c:	bd10      	pop	{r4, pc}

08002a3e <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEED0Ev>:
class IconButtonStyle : public T
 8002a3e:	b510      	push	{r4, lr}
 8002a40:	21a8      	movs	r1, #168	; 0xa8
 8002a42:	4604      	mov	r4, r0
 8002a44:	f01c fd37 	bl	801f4b6 <_ZdlPvj>
 8002a48:	4620      	mov	r0, r4
 8002a4a:	bd10      	pop	{r4, pc}

08002a4c <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002a4c:	b510      	push	{r4, lr}
 8002a4e:	2110      	movs	r1, #16
 8002a50:	4604      	mov	r4, r0
 8002a52:	f01c fd30 	bl	801f4b6 <_ZdlPvj>
 8002a56:	4620      	mov	r0, r4
 8002a58:	bd10      	pop	{r4, pc}

08002a5a <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
 8002a5a:	b510      	push	{r4, lr}
 8002a5c:	2110      	movs	r1, #16
 8002a5e:	4604      	mov	r4, r0
 8002a60:	f01c fd29 	bl	801f4b6 <_ZdlPvj>
 8002a64:	4620      	mov	r0, r4
 8002a66:	bd10      	pop	{r4, pc}

08002a68 <_ZN15Screen1ViewBaseD0Ev>:
    virtual ~Screen1ViewBase() {}
 8002a68:	b510      	push	{r4, lr}
 8002a6a:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
 8002a6e:	4604      	mov	r4, r0
 8002a70:	f01c fd21 	bl	801f4b6 <_ZdlPvj>
 8002a74:	4620      	mov	r0, r4
 8002a76:	bd10      	pop	{r4, pc}

08002a78 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv>:
    /**
     * Executes the previously set action.
     *
     * @see setAction
     */
    virtual void executeAction()
 8002a78:	b510      	push	{r4, lr}
 8002a7a:	4604      	mov	r4, r0
    {
        if (action && action->isValid())
 8002a7c:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8002a7e:	b150      	cbz	r0, 8002a96 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x1e>
 8002a80:	6803      	ldr	r3, [r0, #0]
 8002a82:	68db      	ldr	r3, [r3, #12]
 8002a84:	4798      	blx	r3
 8002a86:	b130      	cbz	r0, 8002a96 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x1e>
        {
            action->execute(*this);
 8002a88:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8002a8a:	6803      	ldr	r3, [r0, #0]
 8002a8c:	4621      	mov	r1, r4
 8002a8e:	689b      	ldr	r3, [r3, #8]
        }
    }
 8002a90:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            action->execute(*this);
 8002a94:	4718      	bx	r3
    }
 8002a96:	bd10      	pop	{r4, pc}

08002a98 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:
    }
}

void Screen1ViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &ButtonDown)
 8002a98:	f100 02c4 	add.w	r2, r0, #196	; 0xc4
 8002a9c:	4291      	cmp	r1, r2
 8002a9e:	d102      	bne.n	8002aa6 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xe>
    {
        //ButtonUpInteraction
        //When ButtonDown clicked call virtual function
        //Call ButtonDownClicked
        ButtonDownClicked();
 8002aa0:	6803      	ldr	r3, [r0, #0]
 8002aa2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    else if (&src == &ButtonUp)
    {
        //ButtownDownInteraction
        //When ButtonUp clicked call virtual function
        //Call ButtonUpClicked
        ButtonUpClicked();
 8002aa4:	4718      	bx	r3
    else if (&src == &ButtonUp)
 8002aa6:	f500 72b6 	add.w	r2, r0, #364	; 0x16c
 8002aaa:	4291      	cmp	r1, r2
 8002aac:	d102      	bne.n	8002ab4 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x1c>
        ButtonUpClicked();
 8002aae:	6803      	ldr	r3, [r0, #0]
 8002ab0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002ab2:	e7f7      	b.n	8002aa4 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xc>
    }
}
 8002ab4:	4770      	bx	lr

08002ab6 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE>:
     *
     * @return The click type of this event.
     */
    ClickEventType getType() const
    {
        return clickEventType;
 8002ab6:	790b      	ldrb	r3, [r1, #4]
     *
     * @param  event The click event.
     *
     * @see setAction, setPressed, getPressed
     */
    virtual void handleClickEvent(const ClickEvent& event)
 8002ab8:	b570      	push	{r4, r5, r6, lr}
        return pressed;
 8002aba:	f890 602c 	ldrb.w	r6, [r0, #44]	; 0x2c
 8002abe:	4604      	mov	r4, r0
 8002ac0:	460d      	mov	r5, r1
    {
        bool wasPressed = getPressed();
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 8002ac2:	b99b      	cbnz	r3, 8002aec <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x36>
 8002ac4:	b98e      	cbnz	r6, 8002aea <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x34>
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
 8002ac6:	fab3 f383 	clz	r3, r3
 8002aca:	095b      	lsrs	r3, r3, #5
 8002acc:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
        handlePressedUpdated();
 8002ad0:	6823      	ldr	r3, [r4, #0]
 8002ad2:	4620      	mov	r0, r4
 8002ad4:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8002ad8:	4798      	blx	r3
        {
            setPressed(newPressedValue);
            invalidate();
 8002ada:	6823      	ldr	r3, [r4, #0]
 8002adc:	4620      	mov	r0, r4
 8002ade:	695b      	ldr	r3, [r3, #20]
 8002ae0:	4798      	blx	r3
        }
        if (wasPressed && (event.getType() == ClickEvent::RELEASED))
 8002ae2:	b116      	cbz	r6, 8002aea <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x34>
 8002ae4:	792b      	ldrb	r3, [r5, #4]
 8002ae6:	2b01      	cmp	r3, #1
 8002ae8:	d003      	beq.n	8002af2 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x3c>
        {
            executeAction();
        }
    }
 8002aea:	bd70      	pop	{r4, r5, r6, pc}
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 8002aec:	2e00      	cmp	r6, #0
 8002aee:	d0fc      	beq.n	8002aea <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x34>
 8002af0:	e7e9      	b.n	8002ac6 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x10>
            executeAction();
 8002af2:	6823      	ldr	r3, [r4, #0]
 8002af4:	4620      	mov	r0, r4
 8002af6:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
    }
 8002afa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            executeAction();
 8002afe:	4718      	bx	r3

08002b00 <_ZN8touchgfx8TextArea12setBaselineYEs>:
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 8002b00:	6803      	ldr	r3, [r0, #0]
    virtual void setBaselineY(int16_t baselineY)
 8002b02:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 8002b04:	6b5e      	ldr	r6, [r3, #52]	; 0x34
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002b06:	4b12      	ldr	r3, [pc, #72]	; (8002b50 <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 8002b08:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
 8002b0a:	4604      	mov	r4, r0
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 8002b0c:	b28d      	uxth	r5, r1
 8002b0e:	b92b      	cbnz	r3, 8002b1c <_ZN8touchgfx8TextArea12setBaselineYEs+0x1c>
 8002b10:	4b10      	ldr	r3, [pc, #64]	; (8002b54 <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 8002b12:	4a11      	ldr	r2, [pc, #68]	; (8002b58 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8002b14:	216c      	movs	r1, #108	; 0x6c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002b16:	4811      	ldr	r0, [pc, #68]	; (8002b5c <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 8002b18:	f01c fcfc 	bl	801f514 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8002b1c:	4910      	ldr	r1, [pc, #64]	; (8002b60 <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 8002b1e:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002b20:	8809      	ldrh	r1, [r1, #0]
 8002b22:	4291      	cmp	r1, r2
 8002b24:	d803      	bhi.n	8002b2e <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 8002b26:	4b0f      	ldr	r3, [pc, #60]	; (8002b64 <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 8002b28:	4a0b      	ldr	r2, [pc, #44]	; (8002b58 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8002b2a:	216d      	movs	r1, #109	; 0x6d
 8002b2c:	e7f3      	b.n	8002b16 <_ZN8touchgfx8TextArea12setBaselineYEs+0x16>
        return fonts[typedTexts[typedTextId].fontIdx];
 8002b2e:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 8002b32:	4b0d      	ldr	r3, [pc, #52]	; (8002b68 <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 8002b34:	681b      	ldr	r3, [r3, #0]
 8002b36:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8002b3a:	6803      	ldr	r3, [r0, #0]
 8002b3c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002b3e:	4798      	blx	r3
 8002b40:	1a28      	subs	r0, r5, r0
 8002b42:	b201      	sxth	r1, r0
 8002b44:	4633      	mov	r3, r6
 8002b46:	4620      	mov	r0, r4
    }
 8002b48:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 8002b4c:	4718      	bx	r3
 8002b4e:	bf00      	nop
 8002b50:	200174b0 	.word	0x200174b0
 8002b54:	0802151c 	.word	0x0802151c
 8002b58:	0802155e 	.word	0x0802155e
 8002b5c:	08021599 	.word	0x08021599
 8002b60:	200174b4 	.word	0x200174b4
 8002b64:	080215e0 	.word	0x080215e0
 8002b68:	200174b8 	.word	0x200174b8

08002b6c <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
    if (&src == &buttonStart)
 8002b6c:	f500 732a 	add.w	r3, r0, #680	; 0x2a8
 8002b70:	428b      	cmp	r3, r1
{
 8002b72:	b510      	push	{r4, lr}
 8002b74:	4604      	mov	r4, r0
    if (&src == &buttonStart)
 8002b76:	d109      	bne.n	8002b8c <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x20>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8002b78:	f00d f962 	bl	800fe40 <_ZN8touchgfx11Application11getInstanceEv>
        application().gotoScreenGraphScreenWipeTransitionEast();
 8002b7c:	f7ff fcbe 	bl	80024fc <_ZN23FrontendApplicationBase39gotoScreenGraphScreenWipeTransitionEastEv>
        ButtonStartClicked();
 8002b80:	6823      	ldr	r3, [r4, #0]
 8002b82:	4620      	mov	r0, r4
 8002b84:	6b5b      	ldr	r3, [r3, #52]	; 0x34
}
 8002b86:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        ButtonStartClicked();
 8002b8a:	4718      	bx	r3
}
 8002b8c:	bd10      	pop	{r4, pc}

08002b8e <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:

        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 8002b8e:	2200      	movs	r2, #0
 8002b90:	f04f 31ff 	mov.w	r1, #4294967295
 8002b94:	e9c0 2100 	strd	r2, r1, [r0]
              text(0)
 8002b98:	6082      	str	r2, [r0, #8]
    }
 8002b9a:	4770      	bx	lr

08002b9c <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 8002b9c:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 8002b9e:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 8002ba0:	4604      	mov	r4, r0
        setX(x);
 8002ba2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    void setXY(int16_t x, int16_t y)
 8002ba4:	4615      	mov	r5, r2
        setX(x);
 8002ba6:	4798      	blx	r3
        setY(y);
 8002ba8:	6823      	ldr	r3, [r4, #0]
 8002baa:	4629      	mov	r1, r5
 8002bac:	4620      	mov	r0, r4
 8002bae:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    }
 8002bb0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 8002bb4:	4718      	bx	r3

08002bb6 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>:
        iconReleased = newIconReleased;
 8002bb6:	880b      	ldrh	r3, [r1, #0]
    virtual void setIconBitmaps(const Bitmap& newIconReleased, const Bitmap& newIconPressed)
 8002bb8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
        iconReleased = newIconReleased;
 8002bbc:	f8a0 3078 	strh.w	r3, [r0, #120]	; 0x78
        iconPressed = newIconPressed;
 8002bc0:	8813      	ldrh	r3, [r2, #0]
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
 8002bc2:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
        iconPressed = newIconPressed;
 8002bc6:	f8a0 307a 	strh.w	r3, [r0, #122]	; 0x7a
    virtual void setIconBitmaps(const Bitmap& newIconReleased, const Bitmap& newIconPressed)
 8002bca:	4604      	mov	r4, r0
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
 8002bcc:	4610      	mov	r0, r2
    virtual void setIconBitmaps(const Bitmap& newIconReleased, const Bitmap& newIconPressed)
 8002bce:	4690      	mov	r8, r2
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
 8002bd0:	f010 fb66 	bl	80132a0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8002bd4:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8002bd8:	4607      	mov	r7, r0
 8002bda:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8002bde:	4640      	mov	r0, r8
 8002be0:	f3c3 064f 	ubfx	r6, r3, #1, #16
 8002be4:	f010 fb90 	bl	8013308 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8002be8:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8002bec:	f3c5 054f 	ubfx	r5, r5, #1, #16
 8002bf0:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8002bf4:	eb07 77d7 	add.w	r7, r7, r7, lsr #31
 8002bf8:	eba6 0260 	sub.w	r2, r6, r0, asr #1
 8002bfc:	eba5 0767 	sub.w	r7, r5, r7, asr #1
 8002c00:	f104 007c 	add.w	r0, r4, #124	; 0x7c
 8002c04:	b239      	sxth	r1, r7
 8002c06:	b212      	sxth	r2, r2
 8002c08:	f7ff ffc8 	bl	8002b9c <_ZN8touchgfx8Drawable5setXYEss>
        handlePressedUpdated();
 8002c0c:	6823      	ldr	r3, [r4, #0]
 8002c0e:	4620      	mov	r0, r4
 8002c10:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
    }
 8002c14:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
        handlePressedUpdated();
 8002c18:	4718      	bx	r3

08002c1a <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8002c1a:	b570      	push	{r4, r5, r6, lr}
 8002c1c:	4604      	mov	r4, r0
 8002c1e:	461d      	mov	r5, r3
 8002c20:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
        setXY(x, y);
 8002c24:	f7ff ffba 	bl	8002b9c <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8002c28:	6823      	ldr	r3, [r4, #0]
 8002c2a:	4629      	mov	r1, r5
 8002c2c:	4620      	mov	r0, r4
 8002c2e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002c30:	4798      	blx	r3
        setHeight(height);
 8002c32:	6823      	ldr	r3, [r4, #0]
 8002c34:	4631      	mov	r1, r6
 8002c36:	4620      	mov	r0, r4
 8002c38:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    }
 8002c3a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 8002c3e:	4718      	bx	r3

08002c40 <_ZN8touchgfx6WidgetC1Ev>:
 8002c40:	2200      	movs	r2, #0
 8002c42:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8002c46:	e9c0 2203 	strd	r2, r2, [r0, #12]
          visible(true)
 8002c4a:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8002c4e:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8002c52:	f44f 7280 	mov.w	r2, #256	; 0x100
 8002c56:	8482      	strh	r2, [r0, #36]	; 0x24
class Widget : public Drawable
 8002c58:	4a01      	ldr	r2, [pc, #4]	; (8002c60 <_ZN8touchgfx6WidgetC1Ev+0x20>)
 8002c5a:	6002      	str	r2, [r0, #0]
 8002c5c:	4770      	bx	lr
 8002c5e:	bf00      	nop
 8002c60:	08021628 	.word	0x08021628

08002c64 <_ZN8touchgfx3BoxC1Ev>:
    Box()
 8002c64:	b510      	push	{r4, lr}
        : Widget(), alpha(255), color(0)
 8002c66:	2226      	movs	r2, #38	; 0x26
    Box()
 8002c68:	4604      	mov	r4, r0
        : Widget(), alpha(255), color(0)
 8002c6a:	2100      	movs	r1, #0
 8002c6c:	f01c fdd8 	bl	801f820 <memset>
 8002c70:	4620      	mov	r0, r4
 8002c72:	f7ff ffe5 	bl	8002c40 <_ZN8touchgfx6WidgetC1Ev>
 8002c76:	4b04      	ldr	r3, [pc, #16]	; (8002c88 <_ZN8touchgfx3BoxC1Ev+0x24>)
 8002c78:	6023      	str	r3, [r4, #0]
 8002c7a:	23ff      	movs	r3, #255	; 0xff
 8002c7c:	f884 3026 	strb.w	r3, [r4, #38]	; 0x26
        : color(col)
 8002c80:	2300      	movs	r3, #0
 8002c82:	62a3      	str	r3, [r4, #40]	; 0x28
    }
 8002c84:	4620      	mov	r0, r4
 8002c86:	bd10      	pop	{r4, pc}
 8002c88:	080229c8 	.word	0x080229c8

08002c8c <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>:
    Image(const Bitmap& bmp = Bitmap())
 8002c8c:	b538      	push	{r3, r4, r5, lr}
        : Widget(), bitmap(bmp), alpha(255)
 8002c8e:	2226      	movs	r2, #38	; 0x26
    Image(const Bitmap& bmp = Bitmap())
 8002c90:	4604      	mov	r4, r0
 8002c92:	460d      	mov	r5, r1
        : Widget(), bitmap(bmp), alpha(255)
 8002c94:	2100      	movs	r1, #0
 8002c96:	f01c fdc3 	bl	801f820 <memset>
 8002c9a:	4620      	mov	r0, r4
 8002c9c:	f7ff ffd0 	bl	8002c40 <_ZN8touchgfx6WidgetC1Ev>
 8002ca0:	4b06      	ldr	r3, [pc, #24]	; (8002cbc <_ZN8touchgfx5ImageC1ERKNS_6BitmapE+0x30>)
 8002ca2:	6023      	str	r3, [r4, #0]
 8002ca4:	882b      	ldrh	r3, [r5, #0]
 8002ca6:	84e3      	strh	r3, [r4, #38]	; 0x26
 8002ca8:	23ff      	movs	r3, #255	; 0xff
        Image::setBitmap(bmp);
 8002caa:	4620      	mov	r0, r4
        : Widget(), bitmap(bmp), alpha(255)
 8002cac:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
        Image::setBitmap(bmp);
 8002cb0:	4629      	mov	r1, r5
 8002cb2:	f00a fc17 	bl	800d4e4 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    }
 8002cb6:	4620      	mov	r0, r4
 8002cb8:	bd38      	pop	{r3, r4, r5, pc}
 8002cba:	bf00      	nop
 8002cbc:	08022b0c 	.word	0x08022b0c

08002cc0 <_ZN8touchgfx8TextAreaC1Ev>:
    TextArea()
 8002cc0:	b510      	push	{r4, lr}
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002cc2:	2226      	movs	r2, #38	; 0x26
    TextArea()
 8002cc4:	4604      	mov	r4, r0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002cc6:	2100      	movs	r1, #0
 8002cc8:	f01c fdaa 	bl	801f820 <memset>
 8002ccc:	4620      	mov	r0, r4
 8002cce:	f7ff ffb7 	bl	8002c40 <_ZN8touchgfx6WidgetC1Ev>
 8002cd2:	4b0a      	ldr	r3, [pc, #40]	; (8002cfc <_ZN8touchgfx8TextAreaC1Ev+0x3c>)
 8002cd4:	6023      	str	r3, [r4, #0]
        : typedTextId(id)
 8002cd6:	4b0a      	ldr	r3, [pc, #40]	; (8002d00 <_ZN8touchgfx8TextAreaC1Ev+0x40>)
 8002cd8:	62a3      	str	r3, [r4, #40]	; 0x28
 8002cda:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002cde:	85a3      	strh	r3, [r4, #44]	; 0x2c
 8002ce0:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 8002ce4:	2300      	movs	r3, #0
 8002ce6:	e9c4 320c 	strd	r3, r2, [r4, #48]	; 0x30
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8002cea:	f04f 32ff 	mov.w	r2, #4294967295
              text(0)
 8002cee:	e9c4 2310 	strd	r2, r3, [r4, #64]	; 0x40
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002cf2:	8723      	strh	r3, [r4, #56]	; 0x38
 8002cf4:	63e3      	str	r3, [r4, #60]	; 0x3c
    }
 8002cf6:	4620      	mov	r0, r4
 8002cf8:	bd10      	pop	{r4, pc}
 8002cfa:	bf00      	nop
 8002cfc:	08022938 	.word	0x08022938
 8002d00:	08020e54 	.word	0x08020e54

08002d04 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>:
        return typedTextId < numberOfTypedTexts;
 8002d04:	4b1b      	ldr	r3, [pc, #108]	; (8002d74 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x70>)
     * change you may need to reposition the label text by calling this function to keep the
     * text horizontally centered.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
 8002d06:	b573      	push	{r0, r1, r4, r5, r6, lr}
    {
        if (typedText.hasValidId())
 8002d08:	881b      	ldrh	r3, [r3, #0]
 8002d0a:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 8002d0c:	428b      	cmp	r3, r1
    void updateTextPosition()
 8002d0e:	4606      	mov	r6, r0
        if (typedText.hasValidId())
 8002d10:	d92b      	bls.n	8002d6a <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x66>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002d12:	4b19      	ldr	r3, [pc, #100]	; (8002d78 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x74>)
 8002d14:	681b      	ldr	r3, [r3, #0]
 8002d16:	b92b      	cbnz	r3, 8002d24 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x20>
 8002d18:	4b18      	ldr	r3, [pc, #96]	; (8002d7c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x78>)
 8002d1a:	4a19      	ldr	r2, [pc, #100]	; (8002d80 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x7c>)
 8002d1c:	4819      	ldr	r0, [pc, #100]	; (8002d84 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x80>)
 8002d1e:	216c      	movs	r1, #108	; 0x6c
 8002d20:	f01c fbf8 	bl	801f514 <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 8002d24:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8002d28:	4b17      	ldr	r3, [pc, #92]	; (8002d88 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x84>)
 8002d2a:	681b      	ldr	r3, [r3, #0]
 8002d2c:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
 8002d30:	4b16      	ldr	r3, [pc, #88]	; (8002d8c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x88>)
 8002d32:	6818      	ldr	r0, [r3, #0]
 8002d34:	f001 fae6 	bl	8004304 <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getMaxTextHeight(s) * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8002d38:	682b      	ldr	r3, [r5, #0]
 8002d3a:	9001      	str	r0, [sp, #4]
 8002d3c:	4601      	mov	r1, r0
 8002d3e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002d40:	4628      	mov	r0, r5
 8002d42:	4798      	blx	r3
 8002d44:	682b      	ldr	r3, [r5, #0]
 8002d46:	9901      	ldr	r1, [sp, #4]
 8002d48:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002d4a:	4604      	mov	r4, r0
 8002d4c:	4628      	mov	r0, r5
 8002d4e:	4798      	blx	r3
 8002d50:	682b      	ldr	r3, [r5, #0]
 8002d52:	9901      	ldr	r1, [sp, #4]
 8002d54:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002d56:	fb14 f400 	smulbb	r4, r4, r0
 8002d5a:	4628      	mov	r0, r5
 8002d5c:	4798      	blx	r3
 8002d5e:	b2e4      	uxtb	r4, r4
 8002d60:	4404      	add	r4, r0
 8002d62:	f886 4045 	strb.w	r4, [r6, #69]	; 0x45
        }
        else
        {
            textHeightIncludingSpacing = 0;
        }
    }
 8002d66:	b002      	add	sp, #8
 8002d68:	bd70      	pop	{r4, r5, r6, pc}
            textHeightIncludingSpacing = 0;
 8002d6a:	2300      	movs	r3, #0
 8002d6c:	f880 3045 	strb.w	r3, [r0, #69]	; 0x45
    }
 8002d70:	e7f9      	b.n	8002d66 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x62>
 8002d72:	bf00      	nop
 8002d74:	200174b4 	.word	0x200174b4
 8002d78:	200174b0 	.word	0x200174b0
 8002d7c:	0802151c 	.word	0x0802151c
 8002d80:	0802155e 	.word	0x0802155e
 8002d84:	08021599 	.word	0x08021599
 8002d88:	200174b8 	.word	0x200174b8
 8002d8c:	200174bc 	.word	0x200174bc

08002d90 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>:
        : pressed(false), alpha(255), action(0)
 8002d90:	f44f 437f 	mov.w	r3, #65280	; 0xff00
    IconButtonStyle()
 8002d94:	b573      	push	{r0, r1, r4, r5, r6, lr}
        : T(), up(), down()
 8002d96:	4606      	mov	r6, r0
 8002d98:	8583      	strh	r3, [r0, #44]	; 0x2c
        touchable = touch;
 8002d9a:	f240 1301 	movw	r3, #257	; 0x101
          firstChild(0)
 8002d9e:	2500      	movs	r5, #0
 8002da0:	8483      	strh	r3, [r0, #36]	; 0x24
 8002da2:	4b1d      	ldr	r3, [pc, #116]	; (8002e18 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0x88>)
 8002da4:	6285      	str	r5, [r0, #40]	; 0x28
        : x(0), y(0), width(0), height(0)
 8002da6:	e9c0 5501 	strd	r5, r5, [r0, #4]
 8002daa:	e9c0 5503 	strd	r5, r5, [r0, #12]
          visible(true)
 8002dae:	e9c0 5505 	strd	r5, r5, [r0, #20]
 8002db2:	e9c0 5507 	strd	r5, r5, [r0, #28]
 8002db6:	6305      	str	r5, [r0, #48]	; 0x30
 8002db8:	f846 3b34 	str.w	r3, [r6], #52
 8002dbc:	4604      	mov	r4, r0
        : Box(), borderColor(0), borderSize(0)
 8002dbe:	4630      	mov	r0, r6
 8002dc0:	f7ff ff50 	bl	8002c64 <_ZN8touchgfx3BoxC1Ev>
 8002dc4:	4b15      	ldr	r3, [pc, #84]	; (8002e1c <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0x8c>)
 8002dc6:	6363      	str	r3, [r4, #52]	; 0x34
        borderBox.setXY(0, 0);
 8002dc8:	462a      	mov	r2, r5
        : color(0)
 8002dca:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 8002dce:	e9c4 551c 	strd	r5, r5, [r4, #112]	; 0x70
        : color(col)
 8002dd2:	6625      	str	r5, [r4, #96]	; 0x60
 8002dd4:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 8002dd8:	4629      	mov	r1, r5
 8002dda:	4630      	mov	r0, r6
 8002ddc:	f7ff fede 	bl	8002b9c <_ZN8touchgfx8Drawable5setXYEss>
        T::add(borderBox);
 8002de0:	4631      	mov	r1, r6
 8002de2:	4620      	mov	r0, r4
 8002de4:	f006 fd32 	bl	800984c <_ZN8touchgfx9Container3addERNS_8DrawableE>
        : T()
 8002de8:	4b0d      	ldr	r3, [pc, #52]	; (8002e20 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0x90>)
 8002dea:	6023      	str	r3, [r4, #0]
 8002dec:	f104 057c 	add.w	r5, r4, #124	; 0x7c
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 8002df0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002df4:	f8a4 3078 	strh.w	r3, [r4, #120]	; 0x78
 8002df8:	f8a4 307a 	strh.w	r3, [r4, #122]	; 0x7a
 8002dfc:	a901      	add	r1, sp, #4
 8002dfe:	4628      	mov	r0, r5
 8002e00:	f8ad 3004 	strh.w	r3, [sp, #4]
 8002e04:	f7ff ff42 	bl	8002c8c <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
        T::add(iconImage);
 8002e08:	4620      	mov	r0, r4
 8002e0a:	4629      	mov	r1, r5
 8002e0c:	f006 fd1e 	bl	800984c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 8002e10:	4620      	mov	r0, r4
 8002e12:	b002      	add	sp, #8
 8002e14:	bd70      	pop	{r4, r5, r6, pc}
 8002e16:	bf00      	nop
 8002e18:	08021720 	.word	0x08021720
 8002e1c:	08022aa4 	.word	0x08022aa4
 8002e20:	080217bc 	.word	0x080217bc

08002e24 <_ZN15Screen1ViewBaseC1Ev>:
Screen1ViewBase::Screen1ViewBase() :
 8002e24:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002e28:	ed2d 8b08 	vpush	{d8-d11}
 8002e2c:	4604      	mov	r4, r0
 8002e2e:	b08b      	sub	sp, #44	; 0x2c
        : presenter(0)
 8002e30:	f00e fb08 	bl	8011444 <_ZN8touchgfx6ScreenC1Ev>
    flexButtonCallback(this, &Screen1ViewBase::flexButtonCallbackHandler)
 8002e34:	4622      	mov	r2, r4
 8002e36:	2500      	movs	r5, #0
 8002e38:	4be5      	ldr	r3, [pc, #916]	; (80031d0 <_ZN15Screen1ViewBaseC1Ev+0x3ac>)
 8002e3a:	63e5      	str	r5, [r4, #60]	; 0x3c
 8002e3c:	f842 3b40 	str.w	r3, [r2], #64
 8002e40:	4610      	mov	r0, r2
 8002e42:	ee08 2a10 	vmov	s16, r2
 8002e46:	f7ff ff0d 	bl	8002c64 <_ZN8touchgfx3BoxC1Ev>
 8002e4a:	f104 036c 	add.w	r3, r4, #108	; 0x6c
 8002e4e:	f64f 76ff 	movw	r6, #65535	; 0xffff
 8002e52:	a908      	add	r1, sp, #32
 8002e54:	4618      	mov	r0, r3
 8002e56:	ee0a 3a10 	vmov	s20, r3
 8002e5a:	f8ad 6020 	strh.w	r6, [sp, #32]
 8002e5e:	f7ff ff15 	bl	8002c8c <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8002e62:	f104 0398 	add.w	r3, r4, #152	; 0x98
 8002e66:	a908      	add	r1, sp, #32
 8002e68:	4618      	mov	r0, r3
 8002e6a:	ee0a 3a90 	vmov	s21, r3
 8002e6e:	f8ad 6020 	strh.w	r6, [sp, #32]
 8002e72:	f7ff ff0b 	bl	8002c8c <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8002e76:	f104 03c4 	add.w	r3, r4, #196	; 0xc4
 8002e7a:	4618      	mov	r0, r3
 8002e7c:	ee08 3a90 	vmov	s17, r3
 8002e80:	f7ff ff86 	bl	8002d90 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 8002e84:	f504 73b6 	add.w	r3, r4, #364	; 0x16c
 8002e88:	4618      	mov	r0, r3
 8002e8a:	ee09 3a10 	vmov	s18, r3
 8002e8e:	f7ff ff7f 	bl	8002d90 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 8002e92:	f504 7305 	add.w	r3, r4, #532	; 0x214
 8002e96:	f504 7917 	add.w	r9, r4, #604	; 0x25c
 8002e9a:	4618      	mov	r0, r3
 8002e9c:	ee09 3a90 	vmov	s19, r3
 8002ea0:	f504 782a 	add.w	r8, r4, #680	; 0x2a8
 8002ea4:	f7ff ff0c 	bl	8002cc0 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8002ea8:	4fca      	ldr	r7, [pc, #808]	; (80031d4 <_ZN15Screen1ViewBaseC1Ev+0x3b0>)
        : TextArea()
 8002eaa:	4648      	mov	r0, r9
 8002eac:	f7ff ff08 	bl	8002cc0 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8002eb0:	f8c4 725c 	str.w	r7, [r4, #604]	; 0x25c
 8002eb4:	f8c4 52a4 	str.w	r5, [r4, #676]	; 0x2a4
 8002eb8:	4640      	mov	r0, r8
 8002eba:	f00a fc45 	bl	800d748 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8002ebe:	f504 733c 	add.w	r3, r4, #752	; 0x2f0
 8002ec2:	f504 7a47 	add.w	sl, r4, #796	; 0x31c
 8002ec6:	a908      	add	r1, sp, #32
 8002ec8:	4618      	mov	r0, r3
 8002eca:	ee0b 3a10 	vmov	s22, r3
 8002ece:	f504 7b59 	add.w	fp, r4, #868	; 0x364
 8002ed2:	f8ad 6020 	strh.w	r6, [sp, #32]
 8002ed6:	f7ff fed9 	bl	8002c8c <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8002eda:	4650      	mov	r0, sl
 8002edc:	f7ff fef0 	bl	8002cc0 <_ZN8touchgfx8TextAreaC1Ev>
        : TextArea()
 8002ee0:	4658      	mov	r0, fp
 8002ee2:	f7ff feed 	bl	8002cc0 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8002ee6:	4bbc      	ldr	r3, [pc, #752]	; (80031d8 <_ZN15Screen1ViewBaseC1Ev+0x3b4>)
        : TextAreaWithWildcardBase(), wc1(0)
 8002ee8:	f8c4 7364 	str.w	r7, [r4, #868]	; 0x364
 8002eec:	e9c4 34f6 	strd	r3, r4, [r4, #984]	; 0x3d8
 8002ef0:	4bba      	ldr	r3, [pc, #744]	; (80031dc <_ZN15Screen1ViewBaseC1Ev+0x3b8>)
 8002ef2:	f8c4 53ac 	str.w	r5, [r4, #940]	; 0x3ac
 8002ef6:	e9c4 35f8 	strd	r3, r5, [r4, #992]	; 0x3e0
 8002efa:	4bb9      	ldr	r3, [pc, #740]	; (80031e0 <_ZN15Screen1ViewBaseC1Ev+0x3bc>)
 8002efc:	e9c4 34fa 	strd	r3, r4, [r4, #1000]	; 0x3e8
 8002f00:	4bb8      	ldr	r3, [pc, #736]	; (80031e4 <_ZN15Screen1ViewBaseC1Ev+0x3c0>)
 8002f02:	e9c4 35fc 	strd	r3, r5, [r4, #1008]	; 0x3f0
    __background.setPosition(0, 0, 320, 240);
 8002f06:	23f0      	movs	r3, #240	; 0xf0
 8002f08:	ee18 0a10 	vmov	r0, s16
 8002f0c:	9300      	str	r3, [sp, #0]
 8002f0e:	462a      	mov	r2, r5
 8002f10:	4629      	mov	r1, r5
 8002f12:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8002f16:	f7ff fe80 	bl	8002c1a <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8002f1a:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8002f1e:	66a3      	str	r3, [r4, #104]	; 0x68
    image2.setXY(0, 0);
 8002f20:	462a      	mov	r2, r5
 8002f22:	ee1a 0a10 	vmov	r0, s20
 8002f26:	4629      	mov	r1, r5
 8002f28:	f7ff fe38 	bl	8002b9c <_ZN8touchgfx8Drawable5setXYEss>
    image2.setBitmap(touchgfx::Bitmap(BITMAP_BG_ID));
 8002f2c:	ee1a 0a10 	vmov	r0, s20
 8002f30:	a908      	add	r1, sp, #32
 8002f32:	f8ad 5020 	strh.w	r5, [sp, #32]
 8002f36:	f00a fad5 	bl	800d4e4 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    image3.setXY(118, 25);
 8002f3a:	ee1a 0a90 	vmov	r0, s21
 8002f3e:	2219      	movs	r2, #25
 8002f40:	2176      	movs	r1, #118	; 0x76
 8002f42:	f7ff fe2b 	bl	8002b9c <_ZN8touchgfx8Drawable5setXYEss>
        borderBox.setPosition(x, y, width, height);
 8002f46:	2617      	movs	r6, #23
    image3.setBitmap(touchgfx::Bitmap(BITMAP_COUNTER_BOX_ID));
 8002f48:	ee1a 0a90 	vmov	r0, s21
 8002f4c:	f04f 0303 	mov.w	r3, #3
 8002f50:	a908      	add	r1, sp, #32
 8002f52:	f8ad 3020 	strh.w	r3, [sp, #32]
 8002f56:	f00a fac5 	bl	800d4e4 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8002f5a:	9600      	str	r6, [sp, #0]
 8002f5c:	462a      	mov	r2, r5
 8002f5e:	4629      	mov	r1, r5
 8002f60:	f104 00f8 	add.w	r0, r4, #248	; 0xf8
 8002f64:	232b      	movs	r3, #43	; 0x2b
 8002f66:	f7ff fe58 	bl	8002c1a <_ZN8touchgfx8Drawable11setPositionEssss>
     *
     * @see getBorderSize
     */
    void setBorderSize(uint16_t size)
    {
        borderSize = size;
 8002f6a:	f04f 0305 	mov.w	r3, #5
        down = colorPressed;
 8002f6e:	4a9e      	ldr	r2, [pc, #632]	; (80031e8 <_ZN15Screen1ViewBaseC1Ev+0x3c4>)
 8002f70:	f8a4 3128 	strh.w	r3, [r4, #296]	; 0x128
 8002f74:	4b9d      	ldr	r3, [pc, #628]	; (80031ec <_ZN15Screen1ViewBaseC1Ev+0x3c8>)
        borderDown = borderColorPressed;
 8002f76:	499e      	ldr	r1, [pc, #632]	; (80031f0 <_ZN15Screen1ViewBaseC1Ev+0x3cc>)
 8002f78:	489e      	ldr	r0, [pc, #632]	; (80031f4 <_ZN15Screen1ViewBaseC1Ev+0x3d0>)
        down = colorPressed;
 8002f7a:	e9c4 324b 	strd	r3, r2, [r4, #300]	; 0x12c
        handlePressedUpdated();
 8002f7e:	f8d4 30c4 	ldr.w	r3, [r4, #196]	; 0xc4
        borderDown = borderColorPressed;
 8002f82:	e9c4 104d 	strd	r1, r0, [r4, #308]	; 0x134
        handlePressedUpdated();
 8002f86:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8002f8a:	ee18 0a90 	vmov	r0, s17
 8002f8e:	4798      	blx	r3
    ButtonDown.setIconBitmaps(Bitmap(BITMAP_DARK_ICONS_DOWN_ARROW_32_ID), Bitmap(BITMAP_DARK_ICONS_DOWN_ARROW_32_ID));
 8002f90:	f10d 0e20 	add.w	lr, sp, #32
 8002f94:	4672      	mov	r2, lr
 8002f96:	f10d 0e1c 	add.w	lr, sp, #28
 8002f9a:	ee18 0a90 	vmov	r0, s17
 8002f9e:	f04f 0704 	mov.w	r7, #4
 8002fa2:	4671      	mov	r1, lr
 8002fa4:	f8ad 701c 	strh.w	r7, [sp, #28]
 8002fa8:	f8ad 7020 	strh.w	r7, [sp, #32]
 8002fac:	f7ff fe03 	bl	8002bb6 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>
        rect.x = x;
 8002fb0:	f04f 0e05 	mov.w	lr, #5
 8002fb4:	f8c4 e144 	str.w	lr, [r4, #324]	; 0x144
    ButtonDown.setAction(flexButtonCallback);
 8002fb8:	f504 777a 	add.w	r7, r4, #1000	; 0x3e8
    ButtonDown.setPosition(273, 49, 43, 23);
 8002fbc:	ee18 0a90 	vmov	r0, s17
 8002fc0:	9600      	str	r6, [sp, #0]
 8002fc2:	232b      	movs	r3, #43	; 0x2b
 8002fc4:	2231      	movs	r2, #49	; 0x31
 8002fc6:	f240 1111 	movw	r1, #273	; 0x111
 8002fca:	f7ff fe26 	bl	8002c1a <_ZN8touchgfx8Drawable11setPositionEssss>
        action = &callback;
 8002fce:	f8c4 70f4 	str.w	r7, [r4, #244]	; 0xf4
        borderBox.setPosition(x, y, width, height);
 8002fd2:	9600      	str	r6, [sp, #0]
 8002fd4:	462a      	mov	r2, r5
 8002fd6:	4629      	mov	r1, r5
 8002fd8:	f504 70d0 	add.w	r0, r4, #416	; 0x1a0
 8002fdc:	232b      	movs	r3, #43	; 0x2b
 8002fde:	f7ff fe1c 	bl	8002c1a <_ZN8touchgfx8Drawable11setPositionEssss>
        down = colorPressed;
 8002fe2:	4a81      	ldr	r2, [pc, #516]	; (80031e8 <_ZN15Screen1ViewBaseC1Ev+0x3c4>)
 8002fe4:	4b81      	ldr	r3, [pc, #516]	; (80031ec <_ZN15Screen1ViewBaseC1Ev+0x3c8>)
        borderDown = borderColorPressed;
 8002fe6:	4982      	ldr	r1, [pc, #520]	; (80031f0 <_ZN15Screen1ViewBaseC1Ev+0x3cc>)
 8002fe8:	4882      	ldr	r0, [pc, #520]	; (80031f4 <_ZN15Screen1ViewBaseC1Ev+0x3d0>)
        down = colorPressed;
 8002fea:	e9c4 3275 	strd	r3, r2, [r4, #468]	; 0x1d4
        handlePressedUpdated();
 8002fee:	f8d4 316c 	ldr.w	r3, [r4, #364]	; 0x16c
 8002ff2:	f04f 0c05 	mov.w	ip, #5
        borderDown = borderColorPressed;
 8002ff6:	e9c4 1077 	strd	r1, r0, [r4, #476]	; 0x1dc
        handlePressedUpdated();
 8002ffa:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8002ffe:	f8a4 c1d0 	strh.w	ip, [r4, #464]	; 0x1d0
 8003002:	ee19 0a10 	vmov	r0, s18
 8003006:	4798      	blx	r3
 8003008:	f04f 0c05 	mov.w	ip, #5
    ButtonUp.setIconBitmaps(Bitmap(BITMAP_DARK_ICONS_UP_ARROW_32_ID), Bitmap(BITMAP_DARK_ICONS_UP_ARROW_32_ID));
 800300c:	ee19 0a10 	vmov	r0, s18
 8003010:	aa08      	add	r2, sp, #32
 8003012:	a907      	add	r1, sp, #28
 8003014:	f8ad c01c 	strh.w	ip, [sp, #28]
 8003018:	f8ad c020 	strh.w	ip, [sp, #32]
 800301c:	f7ff fdcb 	bl	8002bb6 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>
 8003020:	2306      	movs	r3, #6
    ButtonUp.setPosition(273, 25, 43, 23);
 8003022:	ee19 0a10 	vmov	r0, s18
 8003026:	f8c4 31ec 	str.w	r3, [r4, #492]	; 0x1ec
 800302a:	9600      	str	r6, [sp, #0]
 800302c:	232b      	movs	r3, #43	; 0x2b
 800302e:	2219      	movs	r2, #25
 8003030:	f240 1111 	movw	r1, #273	; 0x111
 8003034:	f7ff fdf1 	bl	8002c1a <_ZN8touchgfx8Drawable11setPositionEssss>
        boundingArea = calculateBoundingArea();
 8003038:	ae02      	add	r6, sp, #8
    LabelPradLadowania.setXY(25, 28);
 800303a:	ee19 0a90 	vmov	r0, s19
 800303e:	f8c4 719c 	str.w	r7, [r4, #412]	; 0x19c
 8003042:	221c      	movs	r2, #28
        color = newColor;
 8003044:	f04f 37ff 	mov.w	r7, #4294967295
 8003048:	2119      	movs	r1, #25
 800304a:	f7ff fda7 	bl	8002b9c <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 800304e:	ee19 1a90 	vmov	r1, s19
        linespace = space;
 8003052:	f8a4 5248 	strh.w	r5, [r4, #584]	; 0x248
        boundingArea = calculateBoundingArea();
 8003056:	4630      	mov	r0, r6
        color = newColor;
 8003058:	f8c4 7244 	str.w	r7, [r4, #580]	; 0x244
        boundingArea = calculateBoundingArea();
 800305c:	f009 fd16 	bl	800ca8c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003060:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8003064:	f504 7314 	add.w	r3, r4, #592	; 0x250
 8003068:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 800306c:	f04f 0006 	mov.w	r0, #6
 8003070:	4b61      	ldr	r3, [pc, #388]	; (80031f8 <_ZN15Screen1ViewBaseC1Ev+0x3d4>)
 8003072:	f8ad 0024 	strh.w	r0, [sp, #36]	; 0x24
    LabelPradLadowania.setTypedText(touchgfx::TypedText(T___SINGLEUSE_OQ6C));
 8003076:	a908      	add	r1, sp, #32
 8003078:	ee19 0a90 	vmov	r0, s19
 800307c:	9308      	str	r3, [sp, #32]
 800307e:	f009 ff95 	bl	800cfac <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    txtPradLadowania.setPosition(143, 36, 124, 24);
 8003082:	2218      	movs	r2, #24
 8003084:	9200      	str	r2, [sp, #0]
 8003086:	4648      	mov	r0, r9
 8003088:	2224      	movs	r2, #36	; 0x24
 800308a:	237c      	movs	r3, #124	; 0x7c
 800308c:	218f      	movs	r1, #143	; 0x8f
 800308e:	f7ff fdc4 	bl	8002c1a <_ZN8touchgfx8Drawable11setPositionEssss>
 8003092:	f8d4 325c 	ldr.w	r3, [r4, #604]	; 0x25c
        linespace = space;
 8003096:	f8a4 5290 	strh.w	r5, [r4, #656]	; 0x290
        boundingArea = calculateBoundingArea();
 800309a:	4649      	mov	r1, r9
 800309c:	4630      	mov	r0, r6
 800309e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 80030a2:	f8c4 728c 	str.w	r7, [r4, #652]	; 0x28c
        boundingArea = calculateBoundingArea();
 80030a6:	4798      	blx	r3
 80030a8:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 80030ac:	f504 7326 	add.w	r3, r4, #664	; 0x298
 80030b0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    txtPradLadowania.setWildcard(txtPradLadowaniaBuffer);
 80030b4:	f504 736c 	add.w	r3, r4, #944	; 0x3b0
 80030b8:	f04f 0c05 	mov.w	ip, #5
    txtPradLadowaniaBuffer[0] = 0;
 80030bc:	f8a4 53b0 	strh.w	r5, [r4, #944]	; 0x3b0
        wc1 = value;
 80030c0:	f8c4 32a4 	str.w	r3, [r4, #676]	; 0x2a4
    txtPradLadowania.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9VFQ));
 80030c4:	a908      	add	r1, sp, #32
 80030c6:	4b4c      	ldr	r3, [pc, #304]	; (80031f8 <_ZN15Screen1ViewBaseC1Ev+0x3d4>)
 80030c8:	f8ad c024 	strh.w	ip, [sp, #36]	; 0x24
 80030cc:	4648      	mov	r0, r9
 80030ce:	9308      	str	r3, [sp, #32]
 80030d0:	f009 ff6c 	bl	800cfac <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    buttonStart.setXY(78, 180);
 80030d4:	4640      	mov	r0, r8
 80030d6:	22b4      	movs	r2, #180	; 0xb4
 80030d8:	214e      	movs	r1, #78	; 0x4e
 80030da:	f7ff fd5f 	bl	8002b9c <_ZN8touchgfx8Drawable5setXYEss>
 80030de:	f04f 0002 	mov.w	r0, #2
 80030e2:	2301      	movs	r3, #1
    buttonStart.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
 80030e4:	aa08      	add	r2, sp, #32
 80030e6:	f8ad 0020 	strh.w	r0, [sp, #32]
 80030ea:	a907      	add	r1, sp, #28
 80030ec:	4640      	mov	r0, r8
 80030ee:	f8ad 301c 	strh.w	r3, [sp, #28]
 80030f2:	f009 ffb9 	bl	800d068 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 80030f6:	f04f 0104 	mov.w	r1, #4
 80030fa:	f8a4 12e0 	strh.w	r1, [r4, #736]	; 0x2e0
        updateTextPosition();
 80030fe:	4640      	mov	r0, r8
 8003100:	f7ff fe00 	bl	8002d04 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonStart.setAction(buttonCallback);
 8003104:	f504 7376 	add.w	r3, r4, #984	; 0x3d8
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 8003108:	f8c4 32d0 	str.w	r3, [r4, #720]	; 0x2d0
    image3_1.setXY(118, 79);
 800310c:	ee1b 0a10 	vmov	r0, s22
        colorPressed = col;
 8003110:	e9c4 77b9 	strd	r7, r7, [r4, #740]	; 0x2e4
 8003114:	224f      	movs	r2, #79	; 0x4f
 8003116:	2176      	movs	r1, #118	; 0x76
 8003118:	f7ff fd40 	bl	8002b9c <_ZN8touchgfx8Drawable5setXYEss>
    image3_1.setBitmap(touchgfx::Bitmap(BITMAP_COUNTER_BOX_ID));
 800311c:	ee1b 0a10 	vmov	r0, s22
 8003120:	f04f 0203 	mov.w	r2, #3
 8003124:	a908      	add	r1, sp, #32
 8003126:	f8ad 2020 	strh.w	r2, [sp, #32]
 800312a:	f00a f9db 	bl	800d4e4 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    LabelNapiecieBaterii.setXY(41, 82);
 800312e:	2252      	movs	r2, #82	; 0x52
 8003130:	4650      	mov	r0, sl
 8003132:	2129      	movs	r1, #41	; 0x29
 8003134:	f7ff fd32 	bl	8002b9c <_ZN8touchgfx8Drawable5setXYEss>
        linespace = space;
 8003138:	f8a4 5350 	strh.w	r5, [r4, #848]	; 0x350
        boundingArea = calculateBoundingArea();
 800313c:	4651      	mov	r1, sl
 800313e:	4630      	mov	r0, r6
        color = newColor;
 8003140:	f8c4 734c 	str.w	r7, [r4, #844]	; 0x34c
        boundingArea = calculateBoundingArea();
 8003144:	f009 fca2 	bl	800ca8c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003148:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 800314c:	f504 7356 	add.w	r3, r4, #856	; 0x358
 8003150:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8003154:	4b28      	ldr	r3, [pc, #160]	; (80031f8 <_ZN15Screen1ViewBaseC1Ev+0x3d4>)
 8003156:	9308      	str	r3, [sp, #32]
 8003158:	f04f 0203 	mov.w	r2, #3
    LabelNapiecieBaterii.setTypedText(touchgfx::TypedText(T___SINGLEUSE_O6MQ));
 800315c:	a908      	add	r1, sp, #32
 800315e:	4650      	mov	r0, sl
 8003160:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 8003164:	f009 ff22 	bl	800cfac <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    txtNapiecieBaterii.setPosition(143, 88, 124, 24);
 8003168:	2218      	movs	r2, #24
 800316a:	9200      	str	r2, [sp, #0]
 800316c:	4658      	mov	r0, fp
 800316e:	2258      	movs	r2, #88	; 0x58
 8003170:	237c      	movs	r3, #124	; 0x7c
 8003172:	218f      	movs	r1, #143	; 0x8f
 8003174:	f7ff fd51 	bl	8002c1a <_ZN8touchgfx8Drawable11setPositionEssss>
 8003178:	f8d4 3364 	ldr.w	r3, [r4, #868]	; 0x364
        linespace = space;
 800317c:	f8a4 5398 	strh.w	r5, [r4, #920]	; 0x398
        boundingArea = calculateBoundingArea();
 8003180:	4659      	mov	r1, fp
 8003182:	4630      	mov	r0, r6
 8003184:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8003188:	f8c4 7394 	str.w	r7, [r4, #916]	; 0x394
        boundingArea = calculateBoundingArea();
 800318c:	4798      	blx	r3
 800318e:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8003192:	f504 7368 	add.w	r3, r4, #928	; 0x3a0
 8003196:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    txtNapiecieBaterii.setWildcard(txtNapiecieBateriiBuffer);
 800319a:	f504 7371 	add.w	r3, r4, #964	; 0x3c4
 800319e:	f04f 0002 	mov.w	r0, #2
    txtNapiecieBateriiBuffer[0] = 0;
 80031a2:	f8a4 53c4 	strh.w	r5, [r4, #964]	; 0x3c4
 80031a6:	f8c4 33ac 	str.w	r3, [r4, #940]	; 0x3ac
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 80031aa:	1d25      	adds	r5, r4, #4
 80031ac:	4b12      	ldr	r3, [pc, #72]	; (80031f8 <_ZN15Screen1ViewBaseC1Ev+0x3d4>)
 80031ae:	f8ad 0024 	strh.w	r0, [sp, #36]	; 0x24
    txtNapiecieBaterii.setTypedText(touchgfx::TypedText(T___SINGLEUSE_JY89));
 80031b2:	a908      	add	r1, sp, #32
 80031b4:	4658      	mov	r0, fp
 80031b6:	9308      	str	r3, [sp, #32]
 80031b8:	f009 fef8 	bl	800cfac <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80031bc:	ee18 1a10 	vmov	r1, s16
 80031c0:	4628      	mov	r0, r5
 80031c2:	f006 fb43 	bl	800984c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80031c6:	ee1a 1a10 	vmov	r1, s20
 80031ca:	4628      	mov	r0, r5
 80031cc:	e016      	b.n	80031fc <_ZN15Screen1ViewBaseC1Ev+0x3d8>
 80031ce:	bf00      	nop
 80031d0:	0802188c 	.word	0x0802188c
 80031d4:	08021690 	.word	0x08021690
 80031d8:	0802185c 	.word	0x0802185c
 80031dc:	08002b6d 	.word	0x08002b6d
 80031e0:	08021874 	.word	0x08021874
 80031e4:	08002a99 	.word	0x08002a99
 80031e8:	ff0099cc 	.word	0xff0099cc
 80031ec:	ff006699 	.word	0xff006699
 80031f0:	ff003366 	.word	0xff003366
 80031f4:	ff336699 	.word	0xff336699
 80031f8:	08020e54 	.word	0x08020e54
 80031fc:	f006 fb26 	bl	800984c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003200:	ee1a 1a90 	vmov	r1, s21
 8003204:	4628      	mov	r0, r5
 8003206:	f006 fb21 	bl	800984c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800320a:	ee18 1a90 	vmov	r1, s17
 800320e:	4628      	mov	r0, r5
 8003210:	f006 fb1c 	bl	800984c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003214:	ee19 1a10 	vmov	r1, s18
 8003218:	4628      	mov	r0, r5
 800321a:	f006 fb17 	bl	800984c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800321e:	ee19 1a90 	vmov	r1, s19
 8003222:	4628      	mov	r0, r5
 8003224:	f006 fb12 	bl	800984c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003228:	4649      	mov	r1, r9
 800322a:	4628      	mov	r0, r5
 800322c:	f006 fb0e 	bl	800984c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003230:	4641      	mov	r1, r8
 8003232:	4628      	mov	r0, r5
 8003234:	f006 fb0a 	bl	800984c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003238:	ee1b 1a10 	vmov	r1, s22
 800323c:	4628      	mov	r0, r5
 800323e:	f006 fb05 	bl	800984c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003242:	4651      	mov	r1, sl
 8003244:	4628      	mov	r0, r5
 8003246:	f006 fb01 	bl	800984c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800324a:	4628      	mov	r0, r5
 800324c:	4659      	mov	r1, fp
 800324e:	f006 fafd 	bl	800984c <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8003252:	4620      	mov	r0, r4
 8003254:	b00b      	add	sp, #44	; 0x2c
 8003256:	ecbd 8b08 	vpop	{d8-d11}
 800325a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800325e:	bf00      	nop

08003260 <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
 8003260:	2000      	movs	r0, #0
 8003262:	4770      	bx	lr

08003264 <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
    {
        widgetWidth = widgetRect.width;
 8003264:	888b      	ldrh	r3, [r1, #4]
 8003266:	8083      	strh	r3, [r0, #4]
        return true;
    }
 8003268:	2001      	movs	r0, #1
 800326a:	4770      	bx	lr

0800326c <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
 800326c:	4770      	bx	lr

0800326e <_ZN8touchgfx17AbstractDataGraph8setAlphaEh>:
     *
     * @note All graph elements have to take this alpha into consideration.
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 800326e:	f880 102c 	strb.w	r1, [r0, #44]	; 0x2c
    }
 8003272:	4770      	bx	lr

08003274 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>:
     * @param  min The minimum x value.
     * @param  max The maximum x value.
     *
     * @note The graph as well as the area above and below are automatically redrawn (invalidated).
     */
    virtual void setGraphRangeX(int min, int max)
 8003274:	b410      	push	{r4}
    {
        setGraphRangeXScaled(int2scaledX(min), int2scaledX(max));
 8003276:	6803      	ldr	r3, [r0, #0]
     *
     * @note For internal use.
     */
    FORCE_INLINE_FUNCTION int int2scaledX(int i) const
    {
        return int2scaled(i, xScale);
 8003278:	6b04      	ldr	r4, [r0, #48]	; 0x30
        setGraphRangeXScaled(int2scaledX(min), int2scaledX(max));
 800327a:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 800327e:	4362      	muls	r2, r4
 8003280:	4361      	muls	r1, r4
    }
 8003282:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeXScaled(int2scaledX(min), int2scaledX(max));
 8003286:	4718      	bx	r3

08003288 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff>:
     *
     * @return The product of the two numbers, rounded to nearest integer value.
     */
    FORCE_INLINE_FUNCTION static int float2scaled(float f, int scale)
    {
        const float fs = f * (float)scale;
 8003288:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
        setGraphRangeXScaled(float2scaledX(min), float2scaledX(max));
 800328c:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 800328e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setGraphRangeXScaled(float2scaledX(min), float2scaledX(max));
 8003292:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
        const float fs = f * (float)scale;
 8003296:	ee20 0a27 	vmul.f32	s0, s0, s15
        if (fs >= 0)
 800329a:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 800329e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80032a2:	db17      	blt.n	80032d4 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff+0x4c>
        {
            return (int)(fs + 0.5f);
 80032a4:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80032a8:	ee30 0a07 	vadd.f32	s0, s0, s14
 80032ac:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 80032b0:	ee17 1a10 	vmov	r1, s14
        const float fs = f * (float)scale;
 80032b4:	ee60 0aa7 	vmul.f32	s1, s1, s15
        if (fs >= 0)
 80032b8:	eef5 0ac0 	vcmpe.f32	s1, #0.0
 80032bc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80032c0:	db1c      	blt.n	80032fc <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff+0x74>
            return (int)(fs + 0.5f);
 80032c2:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 80032c6:	ee70 0aa7 	vadd.f32	s1, s1, s15
 80032ca:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 80032ce:	ee17 2a90 	vmov	r2, s15
        setGraphRangeXScaled(float2scaledX(min), float2scaledX(max));
 80032d2:	4718      	bx	r3
        }
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 80032d4:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 80032d8:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80032dc:	ee17 2a10 	vmov	r2, s14
 80032e0:	ee30 0a66 	vsub.f32	s0, s0, s13
 80032e4:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80032e8:	ee30 0a26 	vadd.f32	s0, s0, s13
 80032ec:	1e51      	subs	r1, r2, #1
 80032ee:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 80032f2:	ee10 2a10 	vmov	r2, s0
 80032f6:	440a      	add	r2, r1
 80032f8:	4611      	mov	r1, r2
 80032fa:	e7db      	b.n	80032b4 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff+0x2c>
 80032fc:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 8003300:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8003304:	ee17 2a90 	vmov	r2, s15
 8003308:	ee70 0ac7 	vsub.f32	s1, s1, s14
 800330c:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 8003310:	ee70 0a87 	vadd.f32	s1, s1, s14
 8003314:	3a01      	subs	r2, #1
 8003316:	eefd 0ae0 	vcvt.s32.f32	s1, s1
 800331a:	ee10 ca90 	vmov	ip, s1
 800331e:	4494      	add	ip, r2
 8003320:	4662      	mov	r2, ip
 8003322:	e7d6      	b.n	80032d2 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff+0x4a>

08003324 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbi>:
    virtual void setGraphRangeXAuto(bool showYaxis = true, int margin = 0)
 8003324:	b410      	push	{r4}
        setGraphRangeXAutoScaled(showYaxis, int2scaledX(margin));
 8003326:	6803      	ldr	r3, [r0, #0]
        return i * scale;
 8003328:	6b04      	ldr	r4, [r0, #48]	; 0x30
        setGraphRangeXAutoScaled(showYaxis, int2scaledX(margin));
 800332a:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800332e:	4362      	muls	r2, r4
    }
 8003330:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeXAutoScaled(showYaxis, int2scaledX(margin));
 8003334:	4718      	bx	r3

08003336 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbf>:
        const float fs = f * (float)scale;
 8003336:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
        setGraphRangeXAutoScaled(showYaxis, float2scaledX(margin));
 800333a:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 800333c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setGraphRangeXAutoScaled(showYaxis, float2scaledX(margin));
 8003340:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
        const float fs = f * (float)scale;
 8003344:	ee27 0a80 	vmul.f32	s0, s15, s0
        if (fs >= 0)
 8003348:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 800334c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003350:	db08      	blt.n	8003364 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbf+0x2e>
            return (int)(fs + 0.5f);
 8003352:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8003356:	ee30 0a27 	vadd.f32	s0, s0, s15
 800335a:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 800335e:	ee17 2a90 	vmov	r2, s15
        setGraphRangeXAutoScaled(showYaxis, float2scaledX(margin));
 8003362:	4718      	bx	r3
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8003364:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8003368:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800336c:	ee17 2a90 	vmov	r2, s15
 8003370:	ee30 0a47 	vsub.f32	s0, s0, s14
 8003374:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 8003378:	ee30 0a07 	vadd.f32	s0, s0, s14
 800337c:	3a01      	subs	r2, #1
 800337e:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8003382:	ee10 ca10 	vmov	ip, s0
 8003386:	4494      	add	ip, r2
 8003388:	4662      	mov	r2, ip
 800338a:	e7ea      	b.n	8003362 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbf+0x2c>

0800338c <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEii>:
    virtual void setGraphRangeY(int min, int max)
 800338c:	b410      	push	{r4}
        setGraphRangeYScaled(int2scaledY(min), int2scaledY(max));
 800338e:	6803      	ldr	r3, [r0, #0]
        return int2scaled(i, yScale);
 8003390:	6b44      	ldr	r4, [r0, #52]	; 0x34
        setGraphRangeYScaled(int2scaledY(min), int2scaledY(max));
 8003392:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8003396:	4362      	muls	r2, r4
 8003398:	4361      	muls	r1, r4
    }
 800339a:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeYScaled(int2scaledY(min), int2scaledY(max));
 800339e:	4718      	bx	r3

080033a0 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff>:
        const float fs = f * (float)scale;
 80033a0:	edd0 7a0d 	vldr	s15, [r0, #52]	; 0x34
        setGraphRangeYScaled(float2scaledY(min), float2scaledY(max));
 80033a4:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 80033a6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setGraphRangeYScaled(float2scaledY(min), float2scaledY(max));
 80033aa:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
        const float fs = f * (float)scale;
 80033ae:	ee20 0a27 	vmul.f32	s0, s0, s15
        if (fs >= 0)
 80033b2:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80033b6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80033ba:	db17      	blt.n	80033ec <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff+0x4c>
            return (int)(fs + 0.5f);
 80033bc:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80033c0:	ee30 0a07 	vadd.f32	s0, s0, s14
 80033c4:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 80033c8:	ee17 1a10 	vmov	r1, s14
        const float fs = f * (float)scale;
 80033cc:	ee60 0aa7 	vmul.f32	s1, s1, s15
        if (fs >= 0)
 80033d0:	eef5 0ac0 	vcmpe.f32	s1, #0.0
 80033d4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80033d8:	db1c      	blt.n	8003414 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff+0x74>
            return (int)(fs + 0.5f);
 80033da:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 80033de:	ee70 0aa7 	vadd.f32	s1, s1, s15
 80033e2:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 80033e6:	ee17 2a90 	vmov	r2, s15
        setGraphRangeYScaled(float2scaledY(min), float2scaledY(max));
 80033ea:	4718      	bx	r3
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 80033ec:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 80033f0:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80033f4:	ee17 2a10 	vmov	r2, s14
 80033f8:	ee30 0a66 	vsub.f32	s0, s0, s13
 80033fc:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8003400:	ee30 0a26 	vadd.f32	s0, s0, s13
 8003404:	1e51      	subs	r1, r2, #1
 8003406:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 800340a:	ee10 2a10 	vmov	r2, s0
 800340e:	440a      	add	r2, r1
 8003410:	4611      	mov	r1, r2
 8003412:	e7db      	b.n	80033cc <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff+0x2c>
 8003414:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 8003418:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800341c:	ee17 2a90 	vmov	r2, s15
 8003420:	ee70 0ac7 	vsub.f32	s1, s1, s14
 8003424:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 8003428:	ee70 0a87 	vadd.f32	s1, s1, s14
 800342c:	3a01      	subs	r2, #1
 800342e:	eefd 0ae0 	vcvt.s32.f32	s1, s1
 8003432:	ee10 ca90 	vmov	ip, s1
 8003436:	4494      	add	ip, r2
 8003438:	4662      	mov	r2, ip
 800343a:	e7d6      	b.n	80033ea <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff+0x4a>

0800343c <_ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbi>:
    virtual void setGraphRangeYAuto(bool showXaxis = true, int margin = 0)
 800343c:	b410      	push	{r4}
        setGraphRangeYAutoScaled(showXaxis, int2scaledY(margin));
 800343e:	6803      	ldr	r3, [r0, #0]
        return i * scale;
 8003440:	6b44      	ldr	r4, [r0, #52]	; 0x34
        setGraphRangeYAutoScaled(showXaxis, int2scaledY(margin));
 8003442:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 8003446:	4362      	muls	r2, r4
    }
 8003448:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeYAutoScaled(showXaxis, int2scaledY(margin));
 800344c:	4718      	bx	r3

0800344e <_ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbf>:
        const float fs = f * (float)scale;
 800344e:	edd0 7a0d 	vldr	s15, [r0, #52]	; 0x34
        setGraphRangeYAutoScaled(showXaxis, float2scaledY(margin));
 8003452:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 8003454:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setGraphRangeYAutoScaled(showXaxis, float2scaledY(margin));
 8003458:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
        const float fs = f * (float)scale;
 800345c:	ee27 0a80 	vmul.f32	s0, s15, s0
        if (fs >= 0)
 8003460:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8003464:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003468:	db08      	blt.n	800347c <_ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbf+0x2e>
            return (int)(fs + 0.5f);
 800346a:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 800346e:	ee30 0a27 	vadd.f32	s0, s0, s15
 8003472:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8003476:	ee17 2a90 	vmov	r2, s15
        setGraphRangeYAutoScaled(showXaxis, float2scaledY(margin));
 800347a:	4718      	bx	r3
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 800347c:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8003480:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8003484:	ee17 2a90 	vmov	r2, s15
 8003488:	ee30 0a47 	vsub.f32	s0, s0, s14
 800348c:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 8003490:	ee30 0a07 	vadd.f32	s0, s0, s14
 8003494:	3a01      	subs	r2, #1
 8003496:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 800349a:	ee10 ca10 	vmov	ip, s0
 800349e:	4494      	add	ip, r2
 80034a0:	4662      	mov	r2, ip
 80034a2:	e7ea      	b.n	800347a <_ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbf+0x2c>

080034a4 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMinAsIntEv>:
        return scaled2intX(graphRangeMinX);
 80034a4:	f8d0 312c 	ldr.w	r3, [r0, #300]	; 0x12c
     *
     * @note For internal use.
     */
    FORCE_INLINE_FUNCTION int scaled2intX(int i) const
    {
        return scaled2int(i, xScale);
 80034a8:	6b02      	ldr	r2, [r0, #48]	; 0x30
        if (i >= 0)
 80034aa:	2b00      	cmp	r3, #0
 80034ac:	db07      	blt.n	80034be <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMinAsIntEv+0x1a>
            return ((i * 2 + scale) / scale) / 2;
 80034ae:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80034b2:	fb93 f0f2 	sdiv	r0, r3, r2
 80034b6:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 80034ba:	1040      	asrs	r0, r0, #1
 80034bc:	4770      	bx	lr
        return -(((-i * 2 + scale - 1) / scale) / 2);
 80034be:	f06f 0001 	mvn.w	r0, #1
 80034c2:	fb00 2003 	mla	r0, r0, r3, r2
 80034c6:	3801      	subs	r0, #1
 80034c8:	fb90 f0f2 	sdiv	r0, r0, r2
 80034cc:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 80034d0:	1040      	asrs	r0, r0, #1
 80034d2:	4240      	negs	r0, r0
    }
 80034d4:	4770      	bx	lr

080034d6 <_ZNK8touchgfx17AbstractDataGraph24getGraphRangeXMinAsFloatEv>:
     *
     * @return The number divided by the scale.
     */
    FORCE_INLINE_FUNCTION static float scaled2float(int i, int scale)
    {
        return (float)i / (float)scale;
 80034d6:	edd0 7a4b 	vldr	s15, [r0, #300]	; 0x12c
 80034da:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 80034de:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
 80034e2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 80034e6:	ee80 0a27 	vdiv.f32	s0, s0, s15
 80034ea:	4770      	bx	lr

080034ec <_ZNK8touchgfx17AbstractDataGraph23getGraphRangeXMinScaledEv>:
    }
 80034ec:	f8d0 012c 	ldr.w	r0, [r0, #300]	; 0x12c
 80034f0:	4770      	bx	lr

080034f2 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMaxAsIntEv>:
        return scaled2intX(graphRangeMaxX);
 80034f2:	f8d0 3130 	ldr.w	r3, [r0, #304]	; 0x130
        return scaled2int(i, xScale);
 80034f6:	6b02      	ldr	r2, [r0, #48]	; 0x30
        if (i >= 0)
 80034f8:	2b00      	cmp	r3, #0
 80034fa:	db07      	blt.n	800350c <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMaxAsIntEv+0x1a>
            return ((i * 2 + scale) / scale) / 2;
 80034fc:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8003500:	fb93 f0f2 	sdiv	r0, r3, r2
 8003504:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003508:	1040      	asrs	r0, r0, #1
 800350a:	4770      	bx	lr
        return -(((-i * 2 + scale - 1) / scale) / 2);
 800350c:	f06f 0001 	mvn.w	r0, #1
 8003510:	fb00 2003 	mla	r0, r0, r3, r2
 8003514:	3801      	subs	r0, #1
 8003516:	fb90 f0f2 	sdiv	r0, r0, r2
 800351a:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 800351e:	1040      	asrs	r0, r0, #1
 8003520:	4240      	negs	r0, r0
    }
 8003522:	4770      	bx	lr

08003524 <_ZNK8touchgfx17AbstractDataGraph24getGraphRangeXMaxAsFloatEv>:
        return (float)i / (float)scale;
 8003524:	edd0 7a4c 	vldr	s15, [r0, #304]	; 0x130
 8003528:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 800352c:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
 8003530:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 8003534:	ee80 0a27 	vdiv.f32	s0, s0, s15
 8003538:	4770      	bx	lr

0800353a <_ZNK8touchgfx17AbstractDataGraph23getGraphRangeXMaxScaledEv>:
    }
 800353a:	f8d0 0130 	ldr.w	r0, [r0, #304]	; 0x130
 800353e:	4770      	bx	lr

08003540 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMinAsIntEv>:
        return scaled2intY(graphRangeMinY);
 8003540:	f8d0 3134 	ldr.w	r3, [r0, #308]	; 0x134
        return scaled2int(i, yScale);
 8003544:	6b42      	ldr	r2, [r0, #52]	; 0x34
        if (i >= 0)
 8003546:	2b00      	cmp	r3, #0
 8003548:	db07      	blt.n	800355a <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMinAsIntEv+0x1a>
            return ((i * 2 + scale) / scale) / 2;
 800354a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 800354e:	fb93 f0f2 	sdiv	r0, r3, r2
 8003552:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003556:	1040      	asrs	r0, r0, #1
 8003558:	4770      	bx	lr
        return -(((-i * 2 + scale - 1) / scale) / 2);
 800355a:	f06f 0001 	mvn.w	r0, #1
 800355e:	fb00 2003 	mla	r0, r0, r3, r2
 8003562:	3801      	subs	r0, #1
 8003564:	fb90 f0f2 	sdiv	r0, r0, r2
 8003568:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 800356c:	1040      	asrs	r0, r0, #1
 800356e:	4240      	negs	r0, r0
    }
 8003570:	4770      	bx	lr

08003572 <_ZNK8touchgfx17AbstractDataGraph24getGraphRangeYMinAsFloatEv>:
        return (float)i / (float)scale;
 8003572:	edd0 7a4d 	vldr	s15, [r0, #308]	; 0x134
 8003576:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 800357a:	edd0 7a0d 	vldr	s15, [r0, #52]	; 0x34
 800357e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 8003582:	ee80 0a27 	vdiv.f32	s0, s0, s15
 8003586:	4770      	bx	lr

08003588 <_ZNK8touchgfx17AbstractDataGraph23getGraphRangeYMinScaledEv>:
    }
 8003588:	f8d0 0134 	ldr.w	r0, [r0, #308]	; 0x134
 800358c:	4770      	bx	lr

0800358e <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMaxAsIntEv>:
        return scaled2intY(graphRangeMaxY);
 800358e:	f8d0 3138 	ldr.w	r3, [r0, #312]	; 0x138
        return scaled2int(i, yScale);
 8003592:	6b42      	ldr	r2, [r0, #52]	; 0x34
        if (i >= 0)
 8003594:	2b00      	cmp	r3, #0
 8003596:	db07      	blt.n	80035a8 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMaxAsIntEv+0x1a>
            return ((i * 2 + scale) / scale) / 2;
 8003598:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 800359c:	fb93 f0f2 	sdiv	r0, r3, r2
 80035a0:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 80035a4:	1040      	asrs	r0, r0, #1
 80035a6:	4770      	bx	lr
        return -(((-i * 2 + scale - 1) / scale) / 2);
 80035a8:	f06f 0001 	mvn.w	r0, #1
 80035ac:	fb00 2003 	mla	r0, r0, r3, r2
 80035b0:	3801      	subs	r0, #1
 80035b2:	fb90 f0f2 	sdiv	r0, r0, r2
 80035b6:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 80035ba:	1040      	asrs	r0, r0, #1
 80035bc:	4240      	negs	r0, r0
    }
 80035be:	4770      	bx	lr

080035c0 <_ZNK8touchgfx17AbstractDataGraph24getGraphRangeYMaxAsFloatEv>:
        return (float)i / (float)scale;
 80035c0:	edd0 7a4e 	vldr	s15, [r0, #312]	; 0x138
 80035c4:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 80035c8:	edd0 7a0d 	vldr	s15, [r0, #52]	; 0x34
 80035cc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 80035d0:	ee80 0a27 	vdiv.f32	s0, s0, s15
 80035d4:	4770      	bx	lr

080035d6 <_ZNK8touchgfx17AbstractDataGraph23getGraphRangeYMaxScaledEv>:
    }
 80035d6:	f8d0 0138 	ldr.w	r0, [r0, #312]	; 0x138
 80035da:	4770      	bx	lr

080035dc <_ZN8touchgfx16DynamicDataGraph8setScaleEib>:
     * @see getScale
     *
     * @note The current xAxisFactor, xAxisOffet and xGraphRange values are updated to reflect the
     *       new scale being set.
     */
    virtual void setScale(int scale, bool updateData = false)
 80035dc:	b570      	push	{r4, r5, r6, lr}
    {
        setScaleX(scale, updateData);
 80035de:	6803      	ldr	r3, [r0, #0]
    virtual void setScale(int scale, bool updateData = false)
 80035e0:	4604      	mov	r4, r0
        setScaleX(scale, updateData);
 80035e2:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
    virtual void setScale(int scale, bool updateData = false)
 80035e6:	460d      	mov	r5, r1
 80035e8:	4616      	mov	r6, r2
        setScaleX(scale, updateData);
 80035ea:	4798      	blx	r3
        setScaleY(scale, updateData);
 80035ec:	6823      	ldr	r3, [r4, #0]
 80035ee:	4632      	mov	r2, r6
 80035f0:	4629      	mov	r1, r5
 80035f2:	4620      	mov	r0, r4
 80035f4:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
    }
 80035f8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setScaleY(scale, updateData);
 80035fc:	4718      	bx	r3

080035fe <_ZNK8touchgfx16DynamicDataGraph8getScaleEv>:
     *
     * @see setScale
     */
    virtual int getScale() const
    {
        return getScaleY();
 80035fe:	6803      	ldr	r3, [r0, #0]
 8003600:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8003604:	4718      	bx	r3

08003606 <_ZNK8touchgfx16DynamicDataGraph17getGraphRangeXMinEv>:
     *
     * @return The minimum x coordinate .
     */
    virtual int getGraphRangeXMin() const
    {
        return getGraphRangeXMinScaled();
 8003606:	6803      	ldr	r3, [r0, #0]
 8003608:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
 800360c:	4718      	bx	r3

0800360e <_ZNK8touchgfx16DynamicDataGraph17getGraphRangeXMaxEv>:
     *
     * @return The maximum x coordinate .
     */
    virtual int getGraphRangeXMax() const
    {
        return getGraphRangeXMaxScaled();
 800360e:	6803      	ldr	r3, [r0, #0]
 8003610:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8003614:	4718      	bx	r3

08003616 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeXAutoScaledEbi>:

    virtual void setGraphRangeYAutoScaled(bool showXaxis, int margin);

    virtual void setGraphRangeXAutoScaled(bool /*showYaxis*/, int margin)
    {
        setGraphRangeXScaled(-scaled2intX(margin), (usedCapacity - 1) + scaled2intX(margin));
 8003616:	6803      	ldr	r3, [r0, #0]
        if (i >= 0)
 8003618:	2a00      	cmp	r2, #0
    virtual void setGraphRangeXAutoScaled(bool /*showYaxis*/, int margin)
 800361a:	b410      	push	{r4}
        setGraphRangeXScaled(-scaled2intX(margin), (usedCapacity - 1) + scaled2intX(margin));
 800361c:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
        return scaled2int(i, xScale);
 8003620:	6b04      	ldr	r4, [r0, #48]	; 0x30
        if (i >= 0)
 8003622:	db0e      	blt.n	8003642 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeXAutoScaledEbi+0x2c>
            return ((i * 2 + scale) / scale) / 2;
 8003624:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8003628:	fb92 f1f4 	sdiv	r1, r2, r4
 800362c:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8003630:	1049      	asrs	r1, r1, #1
        setGraphRangeXScaled(-scaled2intX(margin), (usedCapacity - 1) + scaled2intX(margin));
 8003632:	f9b0 211e 	ldrsh.w	r2, [r0, #286]	; 0x11e
    }
 8003636:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeXScaled(-scaled2intX(margin), (usedCapacity - 1) + scaled2intX(margin));
 800363a:	3a01      	subs	r2, #1
 800363c:	440a      	add	r2, r1
 800363e:	4249      	negs	r1, r1
 8003640:	4718      	bx	r3
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8003642:	f06f 0101 	mvn.w	r1, #1
 8003646:	fb01 4102 	mla	r1, r1, r2, r4
 800364a:	3901      	subs	r1, #1
 800364c:	fb91 f1f4 	sdiv	r1, r1, r4
 8003650:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8003654:	1049      	asrs	r1, r1, #1
 8003656:	4249      	negs	r1, r1
 8003658:	e7eb      	b.n	8003632 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeXAutoScaledEbi+0x1c>

0800365a <_ZN8touchgfx16DynamicDataGraph13setXAxisScaleEi>:

    /// @cond
    TOUCHGFX_DEPRECATED("Please use setXAxisFactor()", virtual void setXAxisScale(int scale))
    {
        setXAxisFactor(scale);
 800365a:	6803      	ldr	r3, [r0, #0]
 800365c:	f8d3 313c 	ldr.w	r3, [r3, #316]	; 0x13c
 8003660:	4718      	bx	r3

08003662 <_ZN8touchgfx16DynamicDataGraph14setXAxisFactorEi>:
        return i * scale;
 8003662:	6b02      	ldr	r2, [r0, #48]	; 0x30
     *
     * @param  factor The x axis factor.
     */
    virtual void setXAxisFactor(int factor)
    {
        setXAxisFactorScaled(int2scaledX(factor));
 8003664:	6803      	ldr	r3, [r0, #0]
 8003666:	4351      	muls	r1, r2
 8003668:	f8d3 3148 	ldr.w	r3, [r3, #328]	; 0x148
 800366c:	4718      	bx	r3

0800366e <_ZN8touchgfx16DynamicDataGraph13setXAxisScaleEf>:
    }

    /// @cond
    TOUCHGFX_DEPRECATED("Please use setXAxisFactor()", virtual void setXAxisScale(float scale))
    {
        setXAxisFactor(scale);
 800366e:	6803      	ldr	r3, [r0, #0]
 8003670:	f8d3 3144 	ldr.w	r3, [r3, #324]	; 0x144
 8003674:	4718      	bx	r3

08003676 <_ZN8touchgfx16DynamicDataGraph14setXAxisFactorEf>:
        const float fs = f * (float)scale;
 8003676:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
    /// @endcond

    /** @copydoc setXAxisFactor(int) */
    virtual void setXAxisFactor(float factor)
    {
        setXAxisFactorScaled(float2scaledX(factor));
 800367a:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 800367c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setXAxisFactorScaled(float2scaledX(factor));
 8003680:	f8d3 3148 	ldr.w	r3, [r3, #328]	; 0x148
        const float fs = f * (float)scale;
 8003684:	ee27 0a80 	vmul.f32	s0, s15, s0
        if (fs >= 0)
 8003688:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 800368c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003690:	db08      	blt.n	80036a4 <_ZN8touchgfx16DynamicDataGraph14setXAxisFactorEf+0x2e>
            return (int)(fs + 0.5f);
 8003692:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8003696:	ee30 0a27 	vadd.f32	s0, s0, s15
 800369a:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 800369e:	ee17 1a90 	vmov	r1, s15
        setXAxisFactorScaled(float2scaledX(factor));
 80036a2:	4718      	bx	r3
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 80036a4:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 80036a8:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80036ac:	ee17 2a90 	vmov	r2, s15
 80036b0:	ee30 0a47 	vsub.f32	s0, s0, s14
 80036b4:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 80036b8:	ee30 0a07 	vadd.f32	s0, s0, s14
 80036bc:	1e51      	subs	r1, r2, #1
 80036be:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 80036c2:	ee10 2a10 	vmov	r2, s0
 80036c6:	440a      	add	r2, r1
 80036c8:	4611      	mov	r1, r2
 80036ca:	e7ea      	b.n	80036a2 <_ZN8touchgfx16DynamicDataGraph14setXAxisFactorEf+0x2c>

080036cc <_ZN8touchgfx16DynamicDataGraph20setXAxisFactorScaledEi>:
     *
     * @see setXAxisFactorScaled,setXAxisFactor
     */
    virtual void setXAxisFactorScaled(int factor)
    {
        xAxisFactor = factor;
 80036cc:	f8c0 113c 	str.w	r1, [r0, #316]	; 0x13c
    }
 80036d0:	4770      	bx	lr

080036d2 <_ZNK8touchgfx16DynamicDataGraph18getXAxisScaleAsIntEv>:

    /// @cond
    TOUCHGFX_DEPRECATED("Please use getXAxisFactorAsInt()", virtual int getXAxisScaleAsInt() const)
    {
        return getXAxisFactorAsInt();
 80036d2:	6803      	ldr	r3, [r0, #0]
 80036d4:	f8d3 3150 	ldr.w	r3, [r3, #336]	; 0x150
 80036d8:	4718      	bx	r3

080036da <_ZNK8touchgfx16DynamicDataGraph19getXAxisFactorAsIntEv>:
     *
     * @return The x axis factor.
     */
    virtual int getXAxisFactorAsInt() const
    {
        return scaled2intX(getXAxisFactorScaled());
 80036da:	6803      	ldr	r3, [r0, #0]
    virtual int getXAxisFactorAsInt() const
 80036dc:	b510      	push	{r4, lr}
        return scaled2intX(getXAxisFactorScaled());
 80036de:	f8d3 315c 	ldr.w	r3, [r3, #348]	; 0x15c
    virtual int getXAxisFactorAsInt() const
 80036e2:	4604      	mov	r4, r0
        return scaled2intX(getXAxisFactorScaled());
 80036e4:	4798      	blx	r3
        if (i >= 0)
 80036e6:	2800      	cmp	r0, #0
        return scaled2int(i, xScale);
 80036e8:	6b23      	ldr	r3, [r4, #48]	; 0x30
        if (i >= 0)
 80036ea:	db07      	blt.n	80036fc <_ZNK8touchgfx16DynamicDataGraph19getXAxisFactorAsIntEv+0x22>
            return ((i * 2 + scale) / scale) / 2;
 80036ec:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 80036f0:	fb90 f0f3 	sdiv	r0, r0, r3
 80036f4:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 80036f8:	1040      	asrs	r0, r0, #1
    }
 80036fa:	bd10      	pop	{r4, pc}
        return -(((-i * 2 + scale - 1) / scale) / 2);
 80036fc:	f06f 0201 	mvn.w	r2, #1
 8003700:	fb02 3000 	mla	r0, r2, r0, r3
 8003704:	3801      	subs	r0, #1
 8003706:	fb90 f0f3 	sdiv	r0, r0, r3
 800370a:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 800370e:	1040      	asrs	r0, r0, #1
 8003710:	4240      	negs	r0, r0
        return scaled2intX(getXAxisFactorScaled());
 8003712:	e7f2      	b.n	80036fa <_ZNK8touchgfx16DynamicDataGraph19getXAxisFactorAsIntEv+0x20>

08003714 <_ZNK8touchgfx16DynamicDataGraph20getXAxisScaleAsFloatEv>:

    /// @cond
    TOUCHGFX_DEPRECATED("Please use getXAxisFactorAsFloat()", virtual float getXAxisScaleAsFloat() const)
    {
        return getXAxisFactorAsFloat();
 8003714:	6803      	ldr	r3, [r0, #0]
 8003716:	f8d3 3158 	ldr.w	r3, [r3, #344]	; 0x158
 800371a:	4718      	bx	r3

0800371c <_ZNK8touchgfx16DynamicDataGraph21getXAxisFactorAsFloatEv>:
    /// @endcond

    /** @copydoc getXAxisFactorAsInt() */
    virtual float getXAxisFactorAsFloat() const
    {
        return scaled2floatX(getXAxisFactorScaled());
 800371c:	6803      	ldr	r3, [r0, #0]
    virtual float getXAxisFactorAsFloat() const
 800371e:	b510      	push	{r4, lr}
        return scaled2floatX(getXAxisFactorScaled());
 8003720:	f8d3 315c 	ldr.w	r3, [r3, #348]	; 0x15c
    virtual float getXAxisFactorAsFloat() const
 8003724:	4604      	mov	r4, r0
        return scaled2floatX(getXAxisFactorScaled());
 8003726:	4798      	blx	r3
        return (float)i / (float)scale;
 8003728:	ee07 0a90 	vmov	s15, r0
 800372c:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8003730:	edd4 7a0c 	vldr	s15, [r4, #48]	; 0x30
 8003734:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 8003738:	ee80 0a27 	vdiv.f32	s0, s0, s15
 800373c:	bd10      	pop	{r4, pc}

0800373e <_ZNK8touchgfx16DynamicDataGraph20getXAxisFactorScaledEv>:
     * @see getXAxisFactorAsInt, getXAxisFactorAsFloat, setXAxisFactor
     */
    virtual int getXAxisFactorScaled() const
    {
        return xAxisFactor;
    }
 800373e:	f8d0 013c 	ldr.w	r0, [r0, #316]	; 0x13c
 8003742:	4770      	bx	lr

08003744 <_ZN8touchgfx16DynamicDataGraph14setXAxisOffsetEi>:
        return i * scale;
 8003744:	6b02      	ldr	r2, [r0, #48]	; 0x30
     *
     * @param  offset The x axis offset.
     */
    virtual void setXAxisOffset(int offset)
    {
        setXAxisOffsetScaled(int2scaledX(offset));
 8003746:	6803      	ldr	r3, [r0, #0]
 8003748:	4351      	muls	r1, r2
 800374a:	f8d3 3168 	ldr.w	r3, [r3, #360]	; 0x168
 800374e:	4718      	bx	r3

08003750 <_ZN8touchgfx16DynamicDataGraph14setXAxisOffsetEf>:
        const float fs = f * (float)scale;
 8003750:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
    }

    /** @copydoc setXAxisOffset(int) */
    virtual void setXAxisOffset(float offset)
    {
        setXAxisOffsetScaled(float2scaledX(offset));
 8003754:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 8003756:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setXAxisOffsetScaled(float2scaledX(offset));
 800375a:	f8d3 3168 	ldr.w	r3, [r3, #360]	; 0x168
        const float fs = f * (float)scale;
 800375e:	ee27 0a80 	vmul.f32	s0, s15, s0
        if (fs >= 0)
 8003762:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8003766:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800376a:	db08      	blt.n	800377e <_ZN8touchgfx16DynamicDataGraph14setXAxisOffsetEf+0x2e>
            return (int)(fs + 0.5f);
 800376c:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8003770:	ee30 0a27 	vadd.f32	s0, s0, s15
 8003774:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8003778:	ee17 1a90 	vmov	r1, s15
        setXAxisOffsetScaled(float2scaledX(offset));
 800377c:	4718      	bx	r3
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 800377e:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8003782:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8003786:	ee17 2a90 	vmov	r2, s15
 800378a:	ee30 0a47 	vsub.f32	s0, s0, s14
 800378e:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 8003792:	ee30 0a07 	vadd.f32	s0, s0, s14
 8003796:	1e51      	subs	r1, r2, #1
 8003798:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 800379c:	ee10 2a10 	vmov	r2, s0
 80037a0:	440a      	add	r2, r1
 80037a2:	4611      	mov	r1, r2
 80037a4:	e7ea      	b.n	800377c <_ZN8touchgfx16DynamicDataGraph14setXAxisOffsetEf+0x2c>

080037a6 <_ZN8touchgfx16DynamicDataGraph20setXAxisOffsetScaledEi>:
     *
     * @see setXAxisOffset, getXAxisOffsetScaled
     */
    virtual void setXAxisOffsetScaled(int offset)
    {
        xAxisOffset = offset;
 80037a6:	f8c0 1140 	str.w	r1, [r0, #320]	; 0x140
    }
 80037aa:	4770      	bx	lr

080037ac <_ZNK8touchgfx16DynamicDataGraph19getXAxisOffsetAsIntEv>:
     *
     * @return The x axis offset.
     */
    virtual int getXAxisOffsetAsInt() const
    {
        return scaled2intX(getXAxisOffsetScaled());
 80037ac:	6803      	ldr	r3, [r0, #0]
    virtual int getXAxisOffsetAsInt() const
 80037ae:	b510      	push	{r4, lr}
        return scaled2intX(getXAxisOffsetScaled());
 80037b0:	f8d3 3174 	ldr.w	r3, [r3, #372]	; 0x174
    virtual int getXAxisOffsetAsInt() const
 80037b4:	4604      	mov	r4, r0
        return scaled2intX(getXAxisOffsetScaled());
 80037b6:	4798      	blx	r3
        if (i >= 0)
 80037b8:	2800      	cmp	r0, #0
        return scaled2int(i, xScale);
 80037ba:	6b23      	ldr	r3, [r4, #48]	; 0x30
        if (i >= 0)
 80037bc:	db07      	blt.n	80037ce <_ZNK8touchgfx16DynamicDataGraph19getXAxisOffsetAsIntEv+0x22>
            return ((i * 2 + scale) / scale) / 2;
 80037be:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 80037c2:	fb90 f0f3 	sdiv	r0, r0, r3
 80037c6:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 80037ca:	1040      	asrs	r0, r0, #1
    }
 80037cc:	bd10      	pop	{r4, pc}
        return -(((-i * 2 + scale - 1) / scale) / 2);
 80037ce:	f06f 0201 	mvn.w	r2, #1
 80037d2:	fb02 3000 	mla	r0, r2, r0, r3
 80037d6:	3801      	subs	r0, #1
 80037d8:	fb90 f0f3 	sdiv	r0, r0, r3
 80037dc:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 80037e0:	1040      	asrs	r0, r0, #1
 80037e2:	4240      	negs	r0, r0
        return scaled2intX(getXAxisOffsetScaled());
 80037e4:	e7f2      	b.n	80037cc <_ZNK8touchgfx16DynamicDataGraph19getXAxisOffsetAsIntEv+0x20>

080037e6 <_ZNK8touchgfx16DynamicDataGraph21getXAxisOffsetAsFloatEv>:

    /** @copydoc getXAxisOffsetAsInt() */
    virtual float getXAxisOffsetAsFloat() const
    {
        return scaled2floatX(getXAxisOffsetScaled());
 80037e6:	6803      	ldr	r3, [r0, #0]
    virtual float getXAxisOffsetAsFloat() const
 80037e8:	b510      	push	{r4, lr}
        return scaled2floatX(getXAxisOffsetScaled());
 80037ea:	f8d3 3174 	ldr.w	r3, [r3, #372]	; 0x174
    virtual float getXAxisOffsetAsFloat() const
 80037ee:	4604      	mov	r4, r0
        return scaled2floatX(getXAxisOffsetScaled());
 80037f0:	4798      	blx	r3
        return (float)i / (float)scale;
 80037f2:	ee07 0a90 	vmov	s15, r0
 80037f6:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 80037fa:	edd4 7a0c 	vldr	s15, [r4, #48]	; 0x30
 80037fe:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 8003802:	ee80 0a27 	vdiv.f32	s0, s0, s15
 8003806:	bd10      	pop	{r4, pc}

08003808 <_ZNK8touchgfx16DynamicDataGraph20getXAxisOffsetScaledEv>:
     * @see getXAxisOffsetAsInt, getXAxisOffsetAsFloat, setXAxisOffsetScaled, setXAxisOffset
     */
    virtual int getXAxisOffsetScaled() const
    {
        return xAxisOffset;
    }
 8003808:	f8d0 0140 	ldr.w	r0, [r0, #320]	; 0x140
 800380c:	4770      	bx	lr

0800380e <_ZNK8touchgfx16DynamicDataGraph12indexToXAxisEii>:
    }

    virtual int indexToXAxis(const int valueScaled, const int /*labelScaled*/) const
    {
        // Value is also index for these types of graphs.
        return (indexToGlobalIndex(scaled2intX(valueScaled)) * xAxisFactor) + xAxisOffset;
 800380e:	6803      	ldr	r3, [r0, #0]
        return scaled2int(i, xScale);
 8003810:	6b02      	ldr	r2, [r0, #48]	; 0x30
        return (indexToGlobalIndex(scaled2intX(valueScaled)) * xAxisFactor) + xAxisOffset;
 8003812:	f8d3 3184 	ldr.w	r3, [r3, #388]	; 0x184
        if (i >= 0)
 8003816:	2900      	cmp	r1, #0
    virtual int indexToXAxis(const int valueScaled, const int /*labelScaled*/) const
 8003818:	b510      	push	{r4, lr}
 800381a:	4604      	mov	r4, r0
        if (i >= 0)
 800381c:	db0e      	blt.n	800383c <_ZNK8touchgfx16DynamicDataGraph12indexToXAxisEii+0x2e>
            return ((i * 2 + scale) / scale) / 2;
 800381e:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 8003822:	fb91 f1f2 	sdiv	r1, r1, r2
 8003826:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 800382a:	1049      	asrs	r1, r1, #1
        return (indexToGlobalIndex(scaled2intX(valueScaled)) * xAxisFactor) + xAxisOffset;
 800382c:	b209      	sxth	r1, r1
 800382e:	4620      	mov	r0, r4
 8003830:	4798      	blx	r3
 8003832:	e9d4 234f 	ldrd	r2, r3, [r4, #316]	; 0x13c
    }
 8003836:	fb02 3000 	mla	r0, r2, r0, r3
 800383a:	bd10      	pop	{r4, pc}
        return -(((-i * 2 + scale - 1) / scale) / 2);
 800383c:	f06f 0001 	mvn.w	r0, #1
 8003840:	fb00 2101 	mla	r1, r0, r1, r2
 8003844:	3901      	subs	r1, #1
 8003846:	fb91 f1f2 	sdiv	r1, r1, r2
 800384a:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 800384e:	1049      	asrs	r1, r1, #1
 8003850:	4249      	negs	r1, r1
 8003852:	e7eb      	b.n	800382c <_ZNK8touchgfx16DynamicDataGraph12indexToXAxisEii+0x1e>

08003854 <_ZNK8touchgfx16DynamicDataGraph9getScaleXEv>:
    virtual void setScaleX(int scale, bool updateData = false);

    virtual int getScaleX() const
    {
        return AbstractDataGraph::getScaleX();
    }
 8003854:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8003856:	4770      	bx	lr

08003858 <_ZNK8touchgfx16DynamicDataGraph9getScaleYEv>:
    virtual void setScaleY(int scale, bool updateData = false);

    virtual int getScaleY() const
    {
        return AbstractDataGraph::getScaleY();
    }
 8003858:	6b40      	ldr	r0, [r0, #52]	; 0x34
 800385a:	4770      	bx	lr

0800385c <_ZN8touchgfx16DynamicDataGraph19setXAxisScaleScaledEi>:

    /// @cond
    TOUCHGFX_DEPRECATED("Please use setXAxisFactorScaled()", virtual void setXAxisScaleScaled(int scale))
    {
        setXAxisFactorScaled(scale);
 800385c:	6803      	ldr	r3, [r0, #0]
 800385e:	f8d3 3148 	ldr.w	r3, [r3, #328]	; 0x148
 8003862:	4718      	bx	r3

08003864 <_ZNK8touchgfx16DynamicDataGraph19getXAxisScaleScaledEv>:
    /// @endcond

    /// @cond
    TOUCHGFX_DEPRECATED("Please use getXAxisFactorScaled()", virtual int getXAxisScaleScaled() const)
    {
        return getXAxisFactorScaled();
 8003864:	6803      	ldr	r3, [r0, #0]
 8003866:	f8d3 315c 	ldr.w	r3, [r3, #348]	; 0x15c
 800386a:	4718      	bx	r3

0800386c <_ZNK8touchgfx16DynamicDataGraph16indexToScreenXQ5Es>:
        return i * scale;
 800386c:	6b02      	ldr	r2, [r0, #48]	; 0x30
    }
    /// @endcond

    virtual CWRUtil::Q5 indexToScreenXQ5(int16_t index) const
    {
        return valueToScreenXQ5(int2scaledX(index));
 800386e:	6803      	ldr	r3, [r0, #0]
 8003870:	4351      	muls	r1, r2
 8003872:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 8003876:	4718      	bx	r3

08003878 <_ZNK8touchgfx16DynamicDataGraph16indexToScreenYQ5Es>:
    }

    virtual CWRUtil::Q5 indexToScreenYQ5(int16_t index) const
    {
        return valueToScreenYQ5(yValues[dataIndex(index)]);
 8003878:	6803      	ldr	r3, [r0, #0]
    virtual CWRUtil::Q5 indexToScreenYQ5(int16_t index) const
 800387a:	b570      	push	{r4, r5, r6, lr}
        return valueToScreenYQ5(yValues[dataIndex(index)]);
 800387c:	f8d3 5118 	ldr.w	r5, [r3, #280]	; 0x118
 8003880:	f8d3 3180 	ldr.w	r3, [r3, #384]	; 0x180
 8003884:	f8d0 6144 	ldr.w	r6, [r0, #324]	; 0x144
    virtual CWRUtil::Q5 indexToScreenYQ5(int16_t index) const
 8003888:	4604      	mov	r4, r0
        return valueToScreenYQ5(yValues[dataIndex(index)]);
 800388a:	4798      	blx	r3
 800388c:	462b      	mov	r3, r5
 800388e:	f856 1020 	ldr.w	r1, [r6, r0, lsl #2]
 8003892:	4620      	mov	r0, r4
    }
 8003894:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        return valueToScreenYQ5(yValues[dataIndex(index)]);
 8003898:	4718      	bx	r3

0800389a <_ZNK8touchgfx15GraphScrollData9dataIndexEs>:

    virtual int16_t addValue(int value);

    virtual int16_t dataIndex(int16_t screenIndex) const
    {
        return usedCapacity < maxCapacity ? screenIndex : (screenIndex + current) % maxCapacity;
 800389a:	f9b0 211c 	ldrsh.w	r2, [r0, #284]	; 0x11c
 800389e:	f9b0 311e 	ldrsh.w	r3, [r0, #286]	; 0x11e
 80038a2:	4293      	cmp	r3, r2
 80038a4:	db07      	blt.n	80038b6 <_ZNK8touchgfx15GraphScrollData9dataIndexEs+0x1c>
 80038a6:	f9b0 314c 	ldrsh.w	r3, [r0, #332]	; 0x14c
 80038aa:	4419      	add	r1, r3
 80038ac:	fb91 f0f2 	sdiv	r0, r1, r2
 80038b0:	fb02 1110 	mls	r1, r2, r0, r1
 80038b4:	b209      	sxth	r1, r1
    }
 80038b6:	4608      	mov	r0, r1
 80038b8:	4770      	bx	lr

080038ba <_ZNK8touchgfx15GraphScrollData10indexToXQ5Es>:

private:
    virtual CWRUtil::Q5 indexToXQ5(int16_t index) const
    {
        return CWRUtil::toQ5(index);
    }
 80038ba:	0148      	lsls	r0, r1, #5
 80038bc:	4770      	bx	lr

080038be <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 80038be:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
    }
 80038c2:	4770      	bx	lr

080038c4 <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
 80038c4:	f890 0026 	ldrb.w	r0, [r0, #38]	; 0x26
 80038c8:	4770      	bx	lr

080038ca <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
     * overwritten in subclasses and return the minimal rectangle containing the shape. See
     * classes such as Circle for example implementations.
     *
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
 80038ca:	b510      	push	{r4, lr}
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80038cc:	2200      	movs	r2, #0
        return rect.width;
 80038ce:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
        return rect.height;
 80038d2:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 80038d6:	8002      	strh	r2, [r0, #0]
 80038d8:	8042      	strh	r2, [r0, #2]
 80038da:	8084      	strh	r4, [r0, #4]
 80038dc:	80c1      	strh	r1, [r0, #6]
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
 80038de:	bd10      	pop	{r4, pc}

080038e0 <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
 80038e0:	2200      	movs	r2, #0
 80038e2:	8002      	strh	r2, [r0, #0]
 80038e4:	8042      	strh	r2, [r0, #2]
 80038e6:	8082      	strh	r2, [r0, #4]
 80038e8:	80c2      	strh	r2, [r0, #6]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 80038ea:	4770      	bx	lr

080038ec <_ZN8touchgfx25AbstractGraphElementNoCWR8setColorENS_9colortypeE>:
     *
     * @see getColor
     */
    virtual void setColor(colortype newColor)
    {
        color = newColor;
 80038ec:	62c1      	str	r1, [r0, #44]	; 0x2c
    }
 80038ee:	4770      	bx	lr

080038f0 <_ZNK8touchgfx25AbstractGraphElementNoCWR8getColorEv>:
     * @see setColor
     */
    virtual colortype getColor() const
    {
        return color;
    }
 80038f0:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 80038f2:	4770      	bx	lr

080038f4 <_ZNK8touchgfx25AbstractGraphElementNoCWR16drawCanvasWidgetERKNS_4RectE>:

    virtual bool drawCanvasWidget(const Rect&) const
    {
        return true;
    }
 80038f4:	2001      	movs	r0, #1
 80038f6:	4770      	bx	lr

080038f8 <_ZN8touchgfx25AbstractGraphElementNoCWR10setPainterERNS_15AbstractPainterE>:
    void normalizeRect(Rect& r) const;

private:
    virtual void setPainter(AbstractPainter& /*painter*/)
    {
    }
 80038f8:	4770      	bx	lr

080038fa <_ZN8touchgfx20GraphElementGridBase22invalidateGraphPointAtEs>:
        return lineWidth;
    }

    virtual void invalidateGraphPointAt(int16_t)
    {
    }
 80038fa:	4770      	bx	lr

080038fc <_ZNK8touchgfx20GraphElementGridBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE>:
     *
     * @return The correctly scaled major interval.
     */
    virtual int getCorrectlyScaledMajorInterval(const AbstractDataGraph* graph) const
    {
        return majorGrid == 0 ? 0 : majorGrid->getCorrectlyScaledGridInterval(graph);
 80038fc:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 80038fe:	b118      	cbz	r0, 8003908 <_ZNK8touchgfx20GraphElementGridBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE+0xc>
 8003900:	6803      	ldr	r3, [r0, #0]
 8003902:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8003906:	4718      	bx	r3
    }
 8003908:	4770      	bx	lr

0800390a <_ZNK8touchgfx17GraphElementGridX13enclosingAreaEPKNS_17AbstractDataGraphE>:
    {
        return convertToGraphScaleX(graph, gridInterval, dataScale);
    }

protected:
    virtual Rect enclosingArea(const AbstractDataGraph* graph) const
 800390a:	b530      	push	{r4, r5, lr}
        return graphArea.getHeight() - (topPadding + bottomPadding);
 800390c:	f8b2 111a 	ldrh.w	r1, [r2, #282]	; 0x11a
        return topPadding;
 8003910:	f9b2 4114 	ldrsh.w	r4, [r2, #276]	; 0x114
        return rect.width;
 8003914:	f9b2 5040 	ldrsh.w	r5, [r2, #64]	; 0x40
        return graphArea.getHeight() - (topPadding + bottomPadding);
 8003918:	f8b2 2042 	ldrh.w	r2, [r2, #66]	; 0x42
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 800391c:	8044      	strh	r4, [r0, #2]
 800391e:	4421      	add	r1, r4
 8003920:	1a52      	subs	r2, r2, r1
 8003922:	2100      	movs	r1, #0
 8003924:	8001      	strh	r1, [r0, #0]
 8003926:	8085      	strh	r5, [r0, #4]
 8003928:	80c2      	strh	r2, [r0, #6]
    {
        return Rect(0, graph->getGraphAreaPaddingTop(), graph->getGraphAreaWidthIncludingPadding(), graph->getGraphAreaHeight());
    }
 800392a:	bd30      	pop	{r4, r5, pc}

0800392c <_ZNK8touchgfx17GraphElementGridX8lineRectEssss>:

    virtual Rect lineRect(int16_t start, int16_t length, int16_t pos, int16_t width) const
 800392c:	b510      	push	{r4, lr}
 800392e:	8042      	strh	r2, [r0, #2]
 8003930:	f9bd 4008 	ldrsh.w	r4, [sp, #8]
 8003934:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8003938:	8004      	strh	r4, [r0, #0]
 800393a:	8082      	strh	r2, [r0, #4]
 800393c:	80c3      	strh	r3, [r0, #6]
    {
        return Rect(pos, start, width, length);
    }
 800393e:	bd10      	pop	{r4, pc}

08003940 <_ZNK8touchgfx17GraphElementGridX22getGraphRangeMinScaledEPKNS_17AbstractDataGraphE>:

    virtual int getGraphRangeMinScaled(const AbstractDataGraph* graph) const
    {
        return graph->getGraphRangeXMinScaled();
 8003940:	680b      	ldr	r3, [r1, #0]
    virtual int getGraphRangeMinScaled(const AbstractDataGraph* graph) const
 8003942:	4608      	mov	r0, r1
        return graph->getGraphRangeXMinScaled();
 8003944:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
 8003948:	4718      	bx	r3

0800394a <_ZNK8touchgfx17GraphElementGridX22getGraphRangeMaxScaledEPKNS_17AbstractDataGraphE>:
    }

    virtual int getGraphRangeMaxScaled(const AbstractDataGraph* graph) const
    {
        return graph->getGraphRangeXMaxScaled();
 800394a:	680b      	ldr	r3, [r1, #0]
    virtual int getGraphRangeMaxScaled(const AbstractDataGraph* graph) const
 800394c:	4608      	mov	r0, r1
        return graph->getGraphRangeXMaxScaled();
 800394e:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8003952:	4718      	bx	r3

08003954 <_ZNK8touchgfx17GraphElementGridX17getGraphAreaStartEPKNS_17AbstractDataGraphE>:
    }

    virtual int getGraphAreaStart(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaPaddingTop();
    }
 8003954:	f9b1 0114 	ldrsh.w	r0, [r1, #276]	; 0x114
 8003958:	4770      	bx	lr

0800395a <_ZNK8touchgfx17GraphElementGridX18getGraphAreaLengthEPKNS_17AbstractDataGraphE>:
 800395a:	f8b1 0114 	ldrh.w	r0, [r1, #276]	; 0x114
 800395e:	f8b1 311a 	ldrh.w	r3, [r1, #282]	; 0x11a
 8003962:	4403      	add	r3, r0
 8003964:	f8b1 0042 	ldrh.w	r0, [r1, #66]	; 0x42
 8003968:	1ac0      	subs	r0, r0, r3

    virtual int getGraphAreaLength(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaHeight();
    }
 800396a:	b200      	sxth	r0, r0
 800396c:	4770      	bx	lr

0800396e <_ZNK8touchgfx17GraphElementGridX20getGraphAreaStartPosEPKNS_17AbstractDataGraphE>:

    virtual int getGraphAreaStartPos(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaPaddingLeft();
    }
 800396e:	f9b1 0116 	ldrsh.w	r0, [r1, #278]	; 0x116
 8003972:	4770      	bx	lr

08003974 <_ZNK8touchgfx17GraphElementGridX18getGraphAreaEndPosEPKNS_17AbstractDataGraphE>:
        return graphArea.getWidth() - (leftPadding + rightPadding);
 8003974:	f8b1 0116 	ldrh.w	r0, [r1, #278]	; 0x116
 8003978:	f8b1 3118 	ldrh.w	r3, [r1, #280]	; 0x118
 800397c:	4403      	add	r3, r0
 800397e:	f8b1 0040 	ldrh.w	r0, [r1, #64]	; 0x40
 8003982:	1ac0      	subs	r0, r0, r3

    virtual int getGraphAreaEndPos(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaWidth();
    }
 8003984:	b200      	sxth	r0, r0
 8003986:	4770      	bx	lr

08003988 <_ZNK8touchgfx17GraphElementGridX15valueToScreenQ5EPKNS_17AbstractDataGraphEi>:
        return graph->valueToScreenXQ5(x);
 8003988:	680b      	ldr	r3, [r1, #0]

    virtual CWRUtil::Q5 valueToScreenQ5(const AbstractDataGraph* graph, int value) const
 800398a:	4608      	mov	r0, r1
        return graph->valueToScreenXQ5(x);
 800398c:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 8003990:	4611      	mov	r1, r2
 8003992:	4718      	bx	r3

08003994 <_ZNK8touchgfx17GraphElementGridY13enclosingAreaEPKNS_17AbstractDataGraphE>:
 8003994:	f8b2 1118 	ldrh.w	r1, [r2, #280]	; 0x118
    {
        return convertToGraphScaleY(graph, gridInterval, dataScale);
    }

protected:
    virtual Rect enclosingArea(const AbstractDataGraph* graph) const
 8003998:	b530      	push	{r4, r5, lr}
        return leftPadding;
 800399a:	f9b2 5116 	ldrsh.w	r5, [r2, #278]	; 0x116
 800399e:	8005      	strh	r5, [r0, #0]
        return graphArea.getWidth() - (leftPadding + rightPadding);
 80039a0:	186c      	adds	r4, r5, r1
 80039a2:	f8b2 1040 	ldrh.w	r1, [r2, #64]	; 0x40
        return rect.height;
 80039a6:	f9b2 2042 	ldrsh.w	r2, [r2, #66]	; 0x42
 80039aa:	80c2      	strh	r2, [r0, #6]
 80039ac:	1b09      	subs	r1, r1, r4
 80039ae:	2400      	movs	r4, #0
 80039b0:	8044      	strh	r4, [r0, #2]
 80039b2:	8081      	strh	r1, [r0, #4]
    {
        return Rect(graph->getGraphAreaPaddingLeft(), 0, graph->getGraphAreaWidth(), graph->getGraphAreaHeightIncludingPadding());
    }
 80039b4:	bd30      	pop	{r4, r5, pc}

080039b6 <_ZNK8touchgfx17GraphElementGridY8lineRectEssss>:
 80039b6:	8002      	strh	r2, [r0, #0]
 80039b8:	8083      	strh	r3, [r0, #4]
 80039ba:	f9bd 2000 	ldrsh.w	r2, [sp]
 80039be:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 80039c2:	8042      	strh	r2, [r0, #2]
 80039c4:	80c3      	strh	r3, [r0, #6]

    virtual Rect lineRect(int16_t start, int16_t length, int16_t pos, int16_t width) const
    {
        return Rect(start, pos, length, width);
    }
 80039c6:	4770      	bx	lr

080039c8 <_ZNK8touchgfx17GraphElementGridY22getGraphRangeMinScaledEPKNS_17AbstractDataGraphE>:

    virtual int getGraphRangeMinScaled(const AbstractDataGraph* graph) const
    {
        return graph->getGraphRangeYMinScaled();
 80039c8:	680b      	ldr	r3, [r1, #0]
    virtual int getGraphRangeMinScaled(const AbstractDataGraph* graph) const
 80039ca:	4608      	mov	r0, r1
        return graph->getGraphRangeYMinScaled();
 80039cc:	f8d3 30ec 	ldr.w	r3, [r3, #236]	; 0xec
 80039d0:	4718      	bx	r3

080039d2 <_ZNK8touchgfx17GraphElementGridY22getGraphRangeMaxScaledEPKNS_17AbstractDataGraphE>:
    }

    virtual int getGraphRangeMaxScaled(const AbstractDataGraph* graph) const
    {
        return graph->getGraphRangeYMaxScaled();
 80039d2:	680b      	ldr	r3, [r1, #0]
    virtual int getGraphRangeMaxScaled(const AbstractDataGraph* graph) const
 80039d4:	4608      	mov	r0, r1
        return graph->getGraphRangeYMaxScaled();
 80039d6:	f8d3 30f8 	ldr.w	r3, [r3, #248]	; 0xf8
 80039da:	4718      	bx	r3

080039dc <_ZNK8touchgfx17GraphElementGridY17getGraphAreaStartEPKNS_17AbstractDataGraphE>:
    }

    virtual int getGraphAreaStart(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaPaddingLeft();
    }
 80039dc:	f9b1 0116 	ldrsh.w	r0, [r1, #278]	; 0x116
 80039e0:	4770      	bx	lr

080039e2 <_ZNK8touchgfx17GraphElementGridY18getGraphAreaLengthEPKNS_17AbstractDataGraphE>:
 80039e2:	f8b1 0116 	ldrh.w	r0, [r1, #278]	; 0x116
 80039e6:	f8b1 3118 	ldrh.w	r3, [r1, #280]	; 0x118
 80039ea:	4403      	add	r3, r0
 80039ec:	f8b1 0040 	ldrh.w	r0, [r1, #64]	; 0x40
 80039f0:	1ac0      	subs	r0, r0, r3

    virtual int getGraphAreaLength(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaWidth();
    }
 80039f2:	b200      	sxth	r0, r0
 80039f4:	4770      	bx	lr

080039f6 <_ZNK8touchgfx17GraphElementGridY20getGraphAreaStartPosEPKNS_17AbstractDataGraphE>:

    virtual int getGraphAreaStartPos(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaPaddingTop();
    }
 80039f6:	f9b1 0114 	ldrsh.w	r0, [r1, #276]	; 0x114
 80039fa:	4770      	bx	lr

080039fc <_ZNK8touchgfx17GraphElementGridY18getGraphAreaEndPosEPKNS_17AbstractDataGraphE>:
        return graphArea.getHeight() - (topPadding + bottomPadding);
 80039fc:	f8b1 0114 	ldrh.w	r0, [r1, #276]	; 0x114
 8003a00:	f8b1 311a 	ldrh.w	r3, [r1, #282]	; 0x11a
 8003a04:	4403      	add	r3, r0
 8003a06:	f8b1 0042 	ldrh.w	r0, [r1, #66]	; 0x42
 8003a0a:	1ac0      	subs	r0, r0, r3

    virtual int getGraphAreaEndPos(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaHeight();
    }
 8003a0c:	b200      	sxth	r0, r0
 8003a0e:	4770      	bx	lr

08003a10 <_ZNK8touchgfx17GraphElementGridY15valueToScreenQ5EPKNS_17AbstractDataGraphEi>:
        return graph->valueToScreenYQ5(y);
 8003a10:	680b      	ldr	r3, [r1, #0]

    virtual CWRUtil::Q5 valueToScreenQ5(const AbstractDataGraph* graph, int value) const
 8003a12:	4608      	mov	r0, r1
        return graph->valueToScreenYQ5(y);
 8003a14:	f8d3 3118 	ldr.w	r3, [r3, #280]	; 0x118
 8003a18:	4611      	mov	r1, r2
 8003a1a:	4718      	bx	r3

08003a1c <_ZN19ScreenGraphViewBaseD1Ev>:

class ScreenGraphViewBase : public touchgfx::View<ScreenGraphPresenter>
{
public:
    ScreenGraphViewBase();
    virtual ~ScreenGraphViewBase() {}
 8003a1c:	4770      	bx	lr

08003a1e <_ZN19ScreenGraphViewBase11setupScreenEv>:
}

void ScreenGraphViewBase::setupScreen()
{

}
 8003a1e:	4770      	bx	lr

08003a20 <_ZN8touchgfx8CallbackI19ScreenGraphViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003a20:	4770      	bx	lr

08003a22 <_ZN8touchgfx11GraphScrollILs60EED1Ev>:
 * the new values added to the graph.
 *
 * @tparam CAPACITY The maximum number of data points on the graph.
 */
template <int16_t CAPACITY>
class GraphScroll : public GraphScrollData
 8003a22:	4770      	bx	lr

08003a24 <_ZN8touchgfx17GraphElementGridYD1Ev>:
class GraphElementGridY : public GraphElementGridBase
 8003a24:	4770      	bx	lr

08003a26 <_ZN8touchgfx17GraphElementGridXD1Ev>:
class GraphElementGridX : public GraphElementGridBase
 8003a26:	4770      	bx	lr

08003a28 <_ZN8touchgfx8CallbackI19ScreenGraphViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8003a28:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003a2a:	68c2      	ldr	r2, [r0, #12]
 8003a2c:	6844      	ldr	r4, [r0, #4]
 8003a2e:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8003a30:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8003a32:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8003a36:	07d2      	lsls	r2, r2, #31
 8003a38:	bf48      	it	mi
 8003a3a:	5962      	ldrmi	r2, [r4, r5]
 8003a3c:	689b      	ldr	r3, [r3, #8]
    }
 8003a3e:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003a40:	bf48      	it	mi
 8003a42:	58d3      	ldrmi	r3, [r2, r3]
 8003a44:	4718      	bx	r3

08003a46 <_ZNK8touchgfx8CallbackI19ScreenGraphViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8003a46:	6843      	ldr	r3, [r0, #4]
 8003a48:	b12b      	cbz	r3, 8003a56 <_ZNK8touchgfx8CallbackI19ScreenGraphViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8003a4a:	6883      	ldr	r3, [r0, #8]
 8003a4c:	b92b      	cbnz	r3, 8003a5a <_ZNK8touchgfx8CallbackI19ScreenGraphViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8003a4e:	68c0      	ldr	r0, [r0, #12]
 8003a50:	f000 0001 	and.w	r0, r0, #1
 8003a54:	4770      	bx	lr
 8003a56:	4618      	mov	r0, r3
 8003a58:	4770      	bx	lr
 8003a5a:	2001      	movs	r0, #1
    }
 8003a5c:	4770      	bx	lr

08003a5e <_ZN8touchgfx17GraphElementGridXD0Ev>:
 8003a5e:	b510      	push	{r4, lr}
 8003a60:	2140      	movs	r1, #64	; 0x40
 8003a62:	4604      	mov	r4, r0
 8003a64:	f01b fd27 	bl	801f4b6 <_ZdlPvj>
 8003a68:	4620      	mov	r0, r4
 8003a6a:	bd10      	pop	{r4, pc}

08003a6c <_ZN8touchgfx17GraphElementGridYD0Ev>:
class GraphElementGridY : public GraphElementGridBase
 8003a6c:	b510      	push	{r4, lr}
 8003a6e:	2140      	movs	r1, #64	; 0x40
 8003a70:	4604      	mov	r4, r0
 8003a72:	f01b fd20 	bl	801f4b6 <_ZdlPvj>
 8003a76:	4620      	mov	r0, r4
 8003a78:	bd10      	pop	{r4, pc}

08003a7a <_ZN8touchgfx11GraphScrollILs60EED0Ev>:
 8003a7a:	b510      	push	{r4, lr}
 8003a7c:	f44f 7110 	mov.w	r1, #576	; 0x240
 8003a80:	4604      	mov	r4, r0
 8003a82:	f01b fd18 	bl	801f4b6 <_ZdlPvj>
 8003a86:	4620      	mov	r0, r4
 8003a88:	bd10      	pop	{r4, pc}

08003a8a <_ZN8touchgfx8CallbackI19ScreenGraphViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003a8a:	b510      	push	{r4, lr}
 8003a8c:	2110      	movs	r1, #16
 8003a8e:	4604      	mov	r4, r0
 8003a90:	f01b fd11 	bl	801f4b6 <_ZdlPvj>
 8003a94:	4620      	mov	r0, r4
 8003a96:	bd10      	pop	{r4, pc}

08003a98 <_ZN19ScreenGraphViewBaseD0Ev>:
 8003a98:	b510      	push	{r4, lr}
 8003a9a:	f241 7178 	movw	r1, #6008	; 0x1778
 8003a9e:	4604      	mov	r4, r0
 8003aa0:	f01b fd09 	bl	801f4b6 <_ZdlPvj>
 8003aa4:	4620      	mov	r0, r4
 8003aa6:	bd10      	pop	{r4, pc}

08003aa8 <_ZNK8touchgfx17AbstractDataGraph17invalidateContentEv>:
        if (alpha > 0)
 8003aa8:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8003aac:	b10b      	cbz	r3, 8003ab2 <_ZNK8touchgfx17AbstractDataGraph17invalidateContentEv+0xa>
            Container::invalidateContent();
 8003aae:	f005 bf06 	b.w	80098be <_ZNK8touchgfx9Container17invalidateContentEv>
    }
 8003ab2:	4770      	bx	lr

08003ab4 <_ZNK8touchgfx17GraphElementGridX30getCorrectlyScaledGridIntervalEPKNS_17AbstractDataGraphE>:
    virtual int getCorrectlyScaledGridInterval(const AbstractDataGraph* graph) const
 8003ab4:	b513      	push	{r0, r1, r4, lr}
 8003ab6:	4603      	mov	r3, r0
 8003ab8:	4608      	mov	r0, r1
        return convertToGraphScaleX(graph, gridInterval, dataScale);
 8003aba:	e9d3 140c 	ldrd	r1, r4, [r3, #48]	; 0x30
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleX());
 8003abe:	6803      	ldr	r3, [r0, #0]
        return convertToGraphScaleX(graph, gridInterval, dataScale);
 8003ac0:	9101      	str	r1, [sp, #4]
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleX());
 8003ac2:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8003ac6:	4798      	blx	r3
 8003ac8:	9901      	ldr	r1, [sp, #4]
 8003aca:	4602      	mov	r2, r0
 8003acc:	4620      	mov	r0, r4
    }
 8003ace:	b002      	add	sp, #8
 8003ad0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleX());
 8003ad4:	f007 bd3c 	b.w	800b550 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>

08003ad8 <_ZNK8touchgfx17GraphElementGridY30getCorrectlyScaledGridIntervalEPKNS_17AbstractDataGraphE>:
    virtual int getCorrectlyScaledGridInterval(const AbstractDataGraph* graph) const
 8003ad8:	b513      	push	{r0, r1, r4, lr}
 8003ada:	4603      	mov	r3, r0
 8003adc:	4608      	mov	r0, r1
        return convertToGraphScaleY(graph, gridInterval, dataScale);
 8003ade:	e9d3 140c 	ldrd	r1, r4, [r3, #48]	; 0x30
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleY());
 8003ae2:	6803      	ldr	r3, [r0, #0]
        return convertToGraphScaleY(graph, gridInterval, dataScale);
 8003ae4:	9101      	str	r1, [sp, #4]
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleY());
 8003ae6:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8003aea:	4798      	blx	r3
 8003aec:	9901      	ldr	r1, [sp, #4]
 8003aee:	4602      	mov	r2, r0
 8003af0:	4620      	mov	r0, r4
    }
 8003af2:	b002      	add	sp, #8
 8003af4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleY());
 8003af8:	f007 bd2a 	b.w	800b550 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>

08003afc <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs>:
        assert(index >= 0 && index < usedCapacity);
 8003afc:	1e0a      	subs	r2, r1, #0
    virtual int indexToDataPointYScaled(int16_t index) const
 8003afe:	b510      	push	{r4, lr}
        assert(index >= 0 && index < usedCapacity);
 8003b00:	db03      	blt.n	8003b0a <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0xe>
 8003b02:	f9b0 411e 	ldrsh.w	r4, [r0, #286]	; 0x11e
 8003b06:	4294      	cmp	r4, r2
 8003b08:	dc06      	bgt.n	8003b18 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0x1c>
 8003b0a:	4b08      	ldr	r3, [pc, #32]	; (8003b2c <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0x30>)
 8003b0c:	4a08      	ldr	r2, [pc, #32]	; (8003b30 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0x34>)
 8003b0e:	4809      	ldr	r0, [pc, #36]	; (8003b34 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0x38>)
 8003b10:	f240 6133 	movw	r1, #1587	; 0x633
 8003b14:	f01b fcfe 	bl	801f514 <__assert_func>
        return yValues[dataIndex(index)];
 8003b18:	6803      	ldr	r3, [r0, #0]
 8003b1a:	f8d0 4144 	ldr.w	r4, [r0, #324]	; 0x144
 8003b1e:	f8d3 3180 	ldr.w	r3, [r3, #384]	; 0x180
 8003b22:	4798      	blx	r3
    }
 8003b24:	f854 0020 	ldr.w	r0, [r4, r0, lsl #2]
 8003b28:	bd10      	pop	{r4, pc}
 8003b2a:	bf00      	nop
 8003b2c:	080218c4 	.word	0x080218c4
 8003b30:	080218e7 	.word	0x080218e7
 8003b34:	08021936 	.word	0x08021936

08003b38 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs>:
        assert(index >= 0 && index < usedCapacity);
 8003b38:	1e0b      	subs	r3, r1, #0
    virtual int indexToDataPointXScaled(int16_t index) const
 8003b3a:	b510      	push	{r4, lr}
 8003b3c:	4604      	mov	r4, r0
        assert(index >= 0 && index < usedCapacity);
 8003b3e:	db03      	blt.n	8003b48 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x10>
 8003b40:	f9b0 211e 	ldrsh.w	r2, [r0, #286]	; 0x11e
 8003b44:	429a      	cmp	r2, r3
 8003b46:	dc06      	bgt.n	8003b56 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x1e>
 8003b48:	4b07      	ldr	r3, [pc, #28]	; (8003b68 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x30>)
 8003b4a:	4a08      	ldr	r2, [pc, #32]	; (8003b6c <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x34>)
 8003b4c:	4808      	ldr	r0, [pc, #32]	; (8003b70 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x38>)
 8003b4e:	f240 612d 	movw	r1, #1581	; 0x62d
 8003b52:	f01b fcdf 	bl	801f514 <__assert_func>
        return (indexToGlobalIndex(index) * xAxisFactor) + xAxisOffset;
 8003b56:	6803      	ldr	r3, [r0, #0]
 8003b58:	f8d3 3184 	ldr.w	r3, [r3, #388]	; 0x184
 8003b5c:	4798      	blx	r3
 8003b5e:	e9d4 234f 	ldrd	r2, r3, [r4, #316]	; 0x13c
    }
 8003b62:	fb02 3000 	mla	r0, r2, r0, r3
 8003b66:	bd10      	pop	{r4, pc}
 8003b68:	080218c4 	.word	0x080218c4
 8003b6c:	08021993 	.word	0x08021993
 8003b70:	08021936 	.word	0x08021936

08003b74 <_ZN19ScreenGraphViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

}

void ScreenGraphViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &button1)
 8003b74:	3098      	adds	r0, #152	; 0x98
 8003b76:	4288      	cmp	r0, r1
{
 8003b78:	b508      	push	{r3, lr}
    if (&src == &button1)
 8003b7a:	d105      	bne.n	8003b88 <_ZN19ScreenGraphViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
     */
    virtual void action1();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8003b7c:	f00c f960 	bl	800fe40 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When button1 clicked change screen to Screen1
        //Go to Screen1 with screen transition towards East
        application().gotoScreen1ScreenWipeTransitionEast();
    }
}
 8003b80:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoScreen1ScreenWipeTransitionEast();
 8003b84:	f7fe bcaa 	b.w	80024dc <_ZN23FrontendApplicationBase35gotoScreen1ScreenWipeTransitionEastEv>
}
 8003b88:	bd08      	pop	{r3, pc}

08003b8a <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll>:
     * @param  factor2 The second factor.
     * @param  divisor The divisor.
     *
     * @return factor1 * factor2 / divisor as a Q5
     */
    static Q5 muldiv_toQ5(int32_t factor1, int32_t factor2, int32_t divisor)
 8003b8a:	b537      	push	{r0, r1, r2, r4, r5, lr}
    {
        int32_t remainder;
        int32_t result = muldiv(factor1, factor2, divisor, remainder);
 8003b8c:	ab01      	add	r3, sp, #4
    static Q5 muldiv_toQ5(int32_t factor1, int32_t factor2, int32_t divisor)
 8003b8e:	4615      	mov	r5, r2
        int32_t result = muldiv(factor1, factor2, divisor, remainder);
 8003b90:	f00d fa8f 	bl	80110b2 <_ZN8touchgfx6muldivElllRl>
        if (result >= 0)
 8003b94:	2800      	cmp	r0, #0
 8003b96:	ea4f 1440 	mov.w	r4, r0, lsl #5
        return Q5(muldiv((int)factor1, (int)factor2, (int)divisor));
 8003b9a:	9901      	ldr	r1, [sp, #4]
 8003b9c:	462a      	mov	r2, r5
 8003b9e:	f04f 0020 	mov.w	r0, #32
        if (result >= 0)
 8003ba2:	db04      	blt.n	8003bae <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll+0x24>
        return Q5(muldiv((int)factor1, (int)factor2, (int)divisor));
 8003ba4:	f00d faa4 	bl	80110f0 <_ZN8touchgfx6muldivElll>
            return Q5(v + q5.v);
 8003ba8:	4420      	add	r0, r4
        {
            return toQ5(result) + muldivQ5(Q5(Rasterizer::POLY_BASE_SIZE), Q5(remainder), Q5(divisor));
        }
        return toQ5(result) - muldivQ5(Q5(Rasterizer::POLY_BASE_SIZE), Q5(remainder), Q5(divisor));
    }
 8003baa:	b003      	add	sp, #12
 8003bac:	bd30      	pop	{r4, r5, pc}
        return Q5(muldiv((int)factor1, (int)factor2, (int)divisor));
 8003bae:	f00d fa9f 	bl	80110f0 <_ZN8touchgfx6muldivElll>
            return Q5(v - q5.v);
 8003bb2:	1a20      	subs	r0, r4, r0
 8003bb4:	e7f9      	b.n	8003baa <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll+0x20>

08003bb6 <_ZNK8touchgfx17AbstractDataGraph16valueToScreenYQ5Ei>:
    virtual CWRUtil::Q5 valueToScreenYQ5(int y) const
 8003bb6:	b570      	push	{r4, r5, r6, lr}
        return graphArea.getHeight() - (topPadding + bottomPadding);
 8003bb8:	f9b0 4114 	ldrsh.w	r4, [r0, #276]	; 0x114
 8003bbc:	f8b0 511a 	ldrh.w	r5, [r0, #282]	; 0x11a
 8003bc0:	1963      	adds	r3, r4, r5
 8003bc2:	f8b0 5042 	ldrh.w	r5, [r0, #66]	; 0x42
 8003bc6:	1aed      	subs	r5, r5, r3
        return CWRUtil::toQ5(graphAreaHeight + topPadding - 1) - CWRUtil::muldiv_toQ5(y - graphRangeMinY, graphAreaHeight - 1, graphRangeMaxY - graphRangeMinY);
 8003bc8:	e9d0 324d 	ldrd	r3, r2, [r0, #308]	; 0x134
    virtual CWRUtil::Q5 valueToScreenYQ5(int y) const
 8003bcc:	460e      	mov	r6, r1
        return CWRUtil::toQ5(graphAreaHeight + topPadding - 1) - CWRUtil::muldiv_toQ5(y - graphRangeMinY, graphAreaHeight - 1, graphRangeMaxY - graphRangeMinY);
 8003bce:	b22d      	sxth	r5, r5
 8003bd0:	1ad2      	subs	r2, r2, r3
 8003bd2:	1e69      	subs	r1, r5, #1
 8003bd4:	1af0      	subs	r0, r6, r3
 8003bd6:	f7ff ffd8 	bl	8003b8a <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll>
 8003bda:	442c      	add	r4, r5
 8003bdc:	3c01      	subs	r4, #1
    }
 8003bde:	ebc0 1044 	rsb	r0, r0, r4, lsl #5
 8003be2:	bd70      	pop	{r4, r5, r6, pc}

08003be4 <_ZNK8touchgfx17AbstractDataGraph16valueToScreenXQ5Ei>:
    virtual CWRUtil::Q5 valueToScreenXQ5(int x) const
 8003be4:	b538      	push	{r3, r4, r5, lr}
 8003be6:	4604      	mov	r4, r0
 8003be8:	4608      	mov	r0, r1
        return graphArea.getWidth() - (leftPadding + rightPadding);
 8003bea:	f8b4 3118 	ldrh.w	r3, [r4, #280]	; 0x118
 8003bee:	f8b4 1116 	ldrh.w	r1, [r4, #278]	; 0x116
 8003bf2:	440b      	add	r3, r1
 8003bf4:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
        return CWRUtil::muldiv_toQ5(x - graphRangeMinX, getGraphAreaWidth() - 1, graphRangeMaxX - graphRangeMinX) + CWRUtil::toQ5(leftPadding);
 8003bf8:	e9d4 524b 	ldrd	r5, r2, [r4, #300]	; 0x12c
        return graphArea.getWidth() - (leftPadding + rightPadding);
 8003bfc:	1ac9      	subs	r1, r1, r3
        return CWRUtil::muldiv_toQ5(x - graphRangeMinX, getGraphAreaWidth() - 1, graphRangeMaxX - graphRangeMinX) + CWRUtil::toQ5(leftPadding);
 8003bfe:	b209      	sxth	r1, r1
 8003c00:	1b52      	subs	r2, r2, r5
 8003c02:	3901      	subs	r1, #1
 8003c04:	1b40      	subs	r0, r0, r5
 8003c06:	f7ff ffc0 	bl	8003b8a <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll>
            return Q5(v + q5.v);
 8003c0a:	f9b4 3116 	ldrsh.w	r3, [r4, #278]	; 0x116
    }
 8003c0e:	eb00 1043 	add.w	r0, r0, r3, lsl #5
 8003c12:	bd38      	pop	{r3, r4, r5, pc}

08003c14 <_ZN8touchgfx20GraphElementGridBaseC1Ev>:
    GraphElementGridBase()
 8003c14:	b510      	push	{r4, lr}
 8003c16:	4604      	mov	r4, r0
        : CanvasWidget()
 8003c18:	f007 f882 	bl	800ad20 <_ZN8touchgfx12CanvasWidgetC1Ev>
        : dataScale(1), gridInterval(10), lineWidth(1), majorGrid(0)
 8003c1c:	4a06      	ldr	r2, [pc, #24]	; (8003c38 <_ZN8touchgfx20GraphElementGridBaseC1Ev+0x24>)
 8003c1e:	6022      	str	r2, [r4, #0]
        : color(col)
 8003c20:	2300      	movs	r3, #0
 8003c22:	2201      	movs	r2, #1
 8003c24:	210a      	movs	r1, #10
 8003c26:	e9c4 210c 	strd	r2, r1, [r4, #48]	; 0x30
 8003c2a:	62e3      	str	r3, [r4, #44]	; 0x2c
 8003c2c:	f884 2038 	strb.w	r2, [r4, #56]	; 0x38
 8003c30:	63e3      	str	r3, [r4, #60]	; 0x3c
    }
 8003c32:	4620      	mov	r0, r4
 8003c34:	bd10      	pop	{r4, pc}
 8003c36:	bf00      	nop
 8003c38:	080226a0 	.word	0x080226a0

08003c3c <_ZN8touchgfx21AbstractPainterRGB565C1Ev>:
public:
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
 8003c3c:	b570      	push	{r4, r5, r6, lr}
        : widgetWidth(0)
 8003c3e:	2300      	movs	r3, #0
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8003c40:	4e12      	ldr	r6, [pc, #72]	; (8003c8c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x50>)
 8003c42:	8083      	strh	r3, [r0, #4]
        : AbstractPainter()
 8003c44:	4b12      	ldr	r3, [pc, #72]	; (8003c90 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x54>)
 8003c46:	6003      	str	r3, [r0, #0]
 8003c48:	6833      	ldr	r3, [r6, #0]
 8003c4a:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
    AbstractPainterRGB565()
 8003c4e:	4605      	mov	r5, r0
 8003c50:	b10a      	cbz	r2, 8003c56 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1a>
 8003c52:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8003c54:	b900      	cbnz	r0, 8003c58 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1c>
        return instance->lcdRef;
 8003c56:	6898      	ldr	r0, [r3, #8]
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
 8003c58:	6803      	ldr	r3, [r0, #0]
 8003c5a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003c5c:	4798      	blx	r3
        return auxiliaryLCD;
 8003c5e:	6833      	ldr	r3, [r6, #0]
 8003c60:	fab0 f480 	clz	r4, r0
 8003c64:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8003c66:	0964      	lsrs	r4, r4, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
 8003c68:	b130      	cbz	r0, 8003c78 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x3c>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
 8003c6a:	6803      	ldr	r3, [r0, #0]
 8003c6c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003c6e:	4798      	blx	r3
 8003c70:	2800      	cmp	r0, #0
 8003c72:	bf08      	it	eq
 8003c74:	f044 0401 	orreq.w	r4, r4, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
 8003c78:	b92c      	cbnz	r4, 8003c86 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x4a>
 8003c7a:	4b06      	ldr	r3, [pc, #24]	; (8003c94 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x58>)
 8003c7c:	4a06      	ldr	r2, [pc, #24]	; (8003c98 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x5c>)
 8003c7e:	4807      	ldr	r0, [pc, #28]	; (8003c9c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x60>)
 8003c80:	212c      	movs	r1, #44	; 0x2c
 8003c82:	f01b fc47 	bl	801f514 <__assert_func>
    }
 8003c86:	4628      	mov	r0, r5
 8003c88:	bd70      	pop	{r4, r5, r6, pc}
 8003c8a:	bf00      	nop
 8003c8c:	20017458 	.word	0x20017458
 8003c90:	08021c54 	.word	0x08021c54
 8003c94:	080219e2 	.word	0x080219e2
 8003c98:	08021a40 	.word	0x08021a40
 8003c9c:	08021a79 	.word	0x08021a79

08003ca0 <_ZN8touchgfx15GraphLabelsBaseC1Ev>:
 * @see GraphLabelsX, GraphLabelsY
 */
class GraphLabelsBase : public AbstractGraphDecoration
{
public:
    GraphLabelsBase()
 8003ca0:	b510      	push	{r4, lr}
 8003ca2:	4604      	mov	r4, r0
        : CanvasWidget()
 8003ca4:	f007 f83c 	bl	800ad20 <_ZN8touchgfx12CanvasWidgetC1Ev>
        : AbstractGraphDecoration(),
          dataScale(1), labelInterval(0), labelTypedText(TYPED_TEXT_INVALID), labelRotation(TEXT_ROTATE_0), labelDecimals(0), labelDecimalPoint('.'), majorLabel(0)
 8003ca8:	4a0a      	ldr	r2, [pc, #40]	; (8003cd4 <_ZN8touchgfx15GraphLabelsBaseC1Ev+0x34>)
 8003caa:	6022      	str	r2, [r4, #0]
 8003cac:	2300      	movs	r3, #0
 8003cae:	2201      	movs	r2, #1
 8003cb0:	e9c4 230c 	strd	r2, r3, [r4, #48]	; 0x30
 8003cb4:	4a08      	ldr	r2, [pc, #32]	; (8003cd8 <_ZN8touchgfx15GraphLabelsBaseC1Ev+0x38>)
 8003cb6:	63a2      	str	r2, [r4, #56]	; 0x38
 8003cb8:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8003cbc:	87a2      	strh	r2, [r4, #60]	; 0x3c
 8003cbe:	222e      	movs	r2, #46	; 0x2e
 8003cc0:	62e3      	str	r3, [r4, #44]	; 0x2c
 8003cc2:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 8003cc6:	f8a4 3042 	strh.w	r3, [r4, #66]	; 0x42
 8003cca:	f8a4 2044 	strh.w	r2, [r4, #68]	; 0x44
 8003cce:	64a3      	str	r3, [r4, #72]	; 0x48
    {
    }
 8003cd0:	4620      	mov	r0, r4
 8003cd2:	bd10      	pop	{r4, pc}
 8003cd4:	08022898 	.word	0x08022898
 8003cd8:	08020e54 	.word	0x08020e54

08003cdc <_ZN19ScreenGraphViewBaseC1Ev>:
ScreenGraphViewBase::ScreenGraphViewBase() :
 8003cdc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003ce0:	ed2d 8b08 	vpush	{d8-d11}
 8003ce4:	4604      	mov	r4, r0
 8003ce6:	b087      	sub	sp, #28
    buttonCallback(this, &ScreenGraphViewBase::buttonCallbackHandler)
 8003ce8:	46a0      	mov	r8, r4
 8003cea:	2500      	movs	r5, #0
 8003cec:	f00d fbaa 	bl	8011444 <_ZN8touchgfx6ScreenC1Ev>
 8003cf0:	4bc5      	ldr	r3, [pc, #788]	; (8004008 <_ZN19ScreenGraphViewBaseC1Ev+0x32c>)
 8003cf2:	63e5      	str	r5, [r4, #60]	; 0x3c
 8003cf4:	f848 3b40 	str.w	r3, [r8], #64
 8003cf8:	4640      	mov	r0, r8
 8003cfa:	f7fe ffb3 	bl	8002c64 <_ZN8touchgfx3BoxC1Ev>
 8003cfe:	f104 036c 	add.w	r3, r4, #108	; 0x6c
 8003d02:	4618      	mov	r0, r3
 8003d04:	ee08 3a10 	vmov	s16, r3
 8003d08:	f7fe ffac 	bl	8002c64 <_ZN8touchgfx3BoxC1Ev>
 8003d0c:	f104 0398 	add.w	r3, r4, #152	; 0x98
 8003d10:	ee08 3a90 	vmov	s17, r3
        touchable = touch;
 8003d14:	f240 1301 	movw	r3, #257	; 0x101
 8003d18:	f8a4 30bc 	strh.w	r3, [r4, #188]	; 0xbc
 */
class Button : public AbstractButton
{
public:
    Button()
        : AbstractButton(), up(), down(), alpha(255)
 8003d1c:	4bbb      	ldr	r3, [pc, #748]	; (800400c <_ZN19ScreenGraphViewBaseC1Ev+0x330>)
 8003d1e:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8003d22:	f104 06cc 	add.w	r6, r4, #204	; 0xcc
 8003d26:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8003d2a:	f8a4 30c6 	strh.w	r3, [r4, #198]	; 0xc6
 8003d2e:	f8a4 30c8 	strh.w	r3, [r4, #200]	; 0xc8
 8003d32:	f884 30ca 	strb.w	r3, [r4, #202]	; 0xca
        : x(0), y(0), width(0), height(0)
 8003d36:	e9c4 5527 	strd	r5, r5, [r4, #156]	; 0x9c
 8003d3a:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
          visible(true)
 8003d3e:	e9c4 552b 	strd	r5, r5, [r4, #172]	; 0xac
 8003d42:	e9c4 552d 	strd	r5, r5, [r4, #180]	; 0xb4
        : Widget(), action(), pressed(false)
 8003d46:	f8c4 50c0 	str.w	r5, [r4, #192]	; 0xc0
 8003d4a:	f884 50c4 	strb.w	r5, [r4, #196]	; 0xc4
        : AbstractDataGraph(capacity), xAxisFactor(1), xAxisOffset(0), yValues(values), dataCounter(0)
 8003d4e:	213c      	movs	r1, #60	; 0x3c
 8003d50:	4630      	mov	r0, r6
 8003d52:	f007 fb99 	bl	800b488 <_ZN8touchgfx17AbstractDataGraphC1Es>
 8003d56:	4bae      	ldr	r3, [pc, #696]	; (8004010 <_ZN19ScreenGraphViewBaseC1Ev+0x334>)
 8003d58:	f8c4 30cc 	str.w	r3, [r4, #204]	; 0xcc
 8003d5c:	f04f 0a01 	mov.w	sl, #1
{
public:
    GraphScroll()
        : GraphScrollData(CAPACITY, y)
 8003d60:	f504 7307 	add.w	r3, r4, #540	; 0x21c
        DynamicDataGraph::setGraphRangeX(0, capacity - 1);
 8003d64:	223b      	movs	r2, #59	; 0x3b
 8003d66:	4629      	mov	r1, r5
        : AbstractDataGraph(capacity), xAxisFactor(1), xAxisOffset(0), yValues(values), dataCounter(0)
 8003d68:	e9c4 3584 	strd	r3, r5, [r4, #528]	; 0x210
        DynamicDataGraph::setGraphRangeX(0, capacity - 1);
 8003d6c:	4630      	mov	r0, r6
        : AbstractDataGraph(capacity), xAxisFactor(1), xAxisOffset(0), yValues(values), dataCounter(0)
 8003d6e:	e9c4 a582 	strd	sl, r5, [r4, #520]	; 0x208
        DynamicDataGraph::setGraphRangeX(0, capacity - 1);
 8003d72:	f7ff fa7f 	bl	8003274 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>
 8003d76:	4ba7      	ldr	r3, [pc, #668]	; (8004014 <_ZN19ScreenGraphViewBaseC1Ev+0x338>)
 8003d78:	f8c4 30cc 	str.w	r3, [r4, #204]	; 0xcc
 8003d7c:	f504 7343 	add.w	r3, r4, #780	; 0x30c
        : DynamicDataGraph(capacity, values), current(0)
 8003d80:	f8a4 5218 	strh.w	r5, [r4, #536]	; 0x218
 8003d84:	4618      	mov	r0, r3
 8003d86:	ee09 3a90 	vmov	s19, r3
 8003d8a:	f006 ffc9 	bl	800ad20 <_ZN8touchgfx12CanvasWidgetC1Ev>
 */
class GraphElementLine : public AbstractGraphElement
{
public:
    GraphElementLine()
        : lineWidth(2)
 8003d8e:	4ba2      	ldr	r3, [pc, #648]	; (8004018 <_ZN19ScreenGraphViewBaseC1Ev+0x33c>)
 8003d90:	f8c4 330c 	str.w	r3, [r4, #780]	; 0x30c
 8003d94:	f04f 0902 	mov.w	r9, #2
 8003d98:	f504 734f 	add.w	r3, r4, #828	; 0x33c
 8003d9c:	f884 9338 	strb.w	r9, [r4, #824]	; 0x338
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8003da0:	4618      	mov	r0, r3
 8003da2:	9303      	str	r3, [sp, #12]
 8003da4:	f7ff ff4a 	bl	8003c3c <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8003da8:	4b9c      	ldr	r3, [pc, #624]	; (800401c <_ZN19ScreenGraphViewBaseC1Ev+0x340>)
 8003daa:	f8c4 333c 	str.w	r3, [r4, #828]	; 0x33c
 8003dae:	f504 7b54 	add.w	fp, r4, #848	; 0x350
 8003db2:	3324      	adds	r3, #36	; 0x24
 8003db4:	f8c4 3344 	str.w	r3, [r4, #836]	; 0x344
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
 8003db8:	f8c4 5348 	str.w	r5, [r4, #840]	; 0x348
class GraphElementGridY : public GraphElementGridBase
 8003dbc:	4658      	mov	r0, fp
 8003dbe:	f7ff ff29 	bl	8003c14 <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 8003dc2:	4f97      	ldr	r7, [pc, #604]	; (8004020 <_ZN19ScreenGraphViewBaseC1Ev+0x344>)
 8003dc4:	f8c4 7350 	str.w	r7, [r4, #848]	; 0x350
 8003dc8:	f504 7364 	add.w	r3, r4, #912	; 0x390
class GraphElementGridX : public GraphElementGridBase
 8003dcc:	4618      	mov	r0, r3
 8003dce:	ee0a 3a10 	vmov	s20, r3
 8003dd2:	f7ff ff1f 	bl	8003c14 <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 8003dd6:	4b93      	ldr	r3, [pc, #588]	; (8004024 <_ZN19ScreenGraphViewBaseC1Ev+0x348>)
 8003dd8:	f8c4 3390 	str.w	r3, [r4, #912]	; 0x390
 8003ddc:	f504 7374 	add.w	r3, r4, #976	; 0x3d0
class GraphElementGridY : public GraphElementGridBase
 8003de0:	4618      	mov	r0, r3
 8003de2:	ee09 3a10 	vmov	s18, r3
 8003de6:	f7ff ff15 	bl	8003c14 <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 8003dea:	f504 6382 	add.w	r3, r4, #1040	; 0x410
 8003dee:	f8c4 73d0 	str.w	r7, [r4, #976]	; 0x3d0

/**
 * GraphLabelsX will draw labels along the X axis at given intervals. By combining two
 * GraphLabelsX it is possible to have different appearance for major and minor y offsets.
 */
class GraphLabelsX : public GraphLabelsBase
 8003df2:	4618      	mov	r0, r3
 8003df4:	ee0a 3a90 	vmov	s21, r3
 8003df8:	f7ff ff52 	bl	8003ca0 <_ZN8touchgfx15GraphLabelsBaseC1Ev>
 8003dfc:	4b8a      	ldr	r3, [pc, #552]	; (8004028 <_ZN19ScreenGraphViewBaseC1Ev+0x34c>)
 8003dfe:	f8c4 3410 	str.w	r3, [r4, #1040]	; 0x410
 8003e02:	f204 435c 	addw	r3, r4, #1116	; 0x45c

/**
 * GraphLabelsY will draw labels along the Y axis at given intervals. By combining two
 * GraphLabelsY it is possible to have different appearance for major and minor y offsets.
 */
class GraphLabelsY : public GraphLabelsBase
 8003e06:	4618      	mov	r0, r3
 8003e08:	ee0b 3a10 	vmov	s22, r3
 8003e0c:	f7ff ff48 	bl	8003ca0 <_ZN8touchgfx15GraphLabelsBaseC1Ev>
 8003e10:	4b86      	ldr	r3, [pc, #536]	; (800402c <_ZN19ScreenGraphViewBaseC1Ev+0x350>)
 8003e12:	f8c4 345c 	str.w	r3, [r4, #1116]	; 0x45c
        : pobject(pObject), pmemfun(pmemfun_1)
 8003e16:	4b86      	ldr	r3, [pc, #536]	; (8004030 <_ZN19ScreenGraphViewBaseC1Ev+0x354>)
 8003e18:	f8c4 34a8 	str.w	r3, [r4, #1192]	; 0x4a8
 8003e1c:	4b85      	ldr	r3, [pc, #532]	; (8004034 <_ZN19ScreenGraphViewBaseC1Ev+0x358>)
 8003e1e:	f8c4 34b0 	str.w	r3, [r4, #1200]	; 0x4b0
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8003e22:	f504 6097 	add.w	r0, r4, #1208	; 0x4b8
    __background.setPosition(0, 0, 320, 240);
 8003e26:	27f0      	movs	r7, #240	; 0xf0
 8003e28:	f8c4 44ac 	str.w	r4, [r4, #1196]	; 0x4ac
 8003e2c:	f8c4 54b4 	str.w	r5, [r4, #1204]	; 0x4b4
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8003e30:	f44f 5196 	mov.w	r1, #4800	; 0x12c0
 8003e34:	f00a fb44 	bl	800e4c0 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 320, 240);
 8003e38:	9700      	str	r7, [sp, #0]
 8003e3a:	462a      	mov	r2, r5
 8003e3c:	4629      	mov	r1, r5
 8003e3e:	4640      	mov	r0, r8
 8003e40:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8003e44:	f7fe fee9 	bl	8002c1a <_ZN8touchgfx8Drawable11setPositionEssss>
 8003e48:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
    box1.setPosition(0, 0, 320, 240);
 8003e4c:	ee18 0a10 	vmov	r0, s16
 8003e50:	66a3      	str	r3, [r4, #104]	; 0x68
 8003e52:	9700      	str	r7, [sp, #0]
 8003e54:	462a      	mov	r2, r5
 8003e56:	4629      	mov	r1, r5
 8003e58:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8003e5c:	f7fe fedd 	bl	8002c1a <_ZN8touchgfx8Drawable11setPositionEssss>
 8003e60:	f04f 33ff 	mov.w	r3, #4294967295
 8003e64:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
    button1.setXY(75, 180);
 8003e68:	ee18 0a90 	vmov	r0, s17
 8003e6c:	22b4      	movs	r2, #180	; 0xb4
 8003e6e:	214b      	movs	r1, #75	; 0x4b
 8003e70:	f7fe fe94 	bl	8002b9c <_ZN8touchgfx8Drawable5setXYEss>
    button1.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
 8003e74:	ee18 0a90 	vmov	r0, s17
 8003e78:	aa05      	add	r2, sp, #20
 8003e7a:	a904      	add	r1, sp, #16
 8003e7c:	f8ad a010 	strh.w	sl, [sp, #16]
 8003e80:	f8ad 9014 	strh.w	r9, [sp, #20]
 8003e84:	f009 f8f0 	bl	800d068 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
    button1.setAction(buttonCallback);
 8003e88:	f504 6395 	add.w	r3, r4, #1192	; 0x4a8
        action = &callback;
 8003e8c:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
    dynamicGraph1.setScale(1000);
 8003e90:	462a      	mov	r2, r5
 8003e92:	4630      	mov	r0, r6
 8003e94:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8003e98:	f7ff fba0 	bl	80035dc <_ZN8touchgfx16DynamicDataGraph8setScaleEib>
    dynamicGraph1.setPosition(0, 2, 320, 178);
 8003e9c:	23b2      	movs	r3, #178	; 0xb2
 8003e9e:	9300      	str	r3, [sp, #0]
 8003ea0:	464a      	mov	r2, r9
 8003ea2:	4629      	mov	r1, r5
 8003ea4:	4630      	mov	r0, r6
 8003ea6:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8003eaa:	f7fe feb6 	bl	8002c1a <_ZN8touchgfx8Drawable11setPositionEssss>
    dynamicGraph1.setGraphAreaMargin(10, 30, 0, 20);
 8003eae:	2314      	movs	r3, #20
 8003eb0:	9300      	str	r3, [sp, #0]
 8003eb2:	4630      	mov	r0, r6
 8003eb4:	462b      	mov	r3, r5
 8003eb6:	221e      	movs	r2, #30
 8003eb8:	210a      	movs	r1, #10
 8003eba:	f007 fa97 	bl	800b3ec <_ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss>
    dynamicGraph1.setGraphAreaPadding(0, 0, 0, 0);
 8003ebe:	462b      	mov	r3, r5
 8003ec0:	462a      	mov	r2, r5
 8003ec2:	4629      	mov	r1, r5
 8003ec4:	4630      	mov	r0, r6
 8003ec6:	9500      	str	r5, [sp, #0]
 8003ec8:	f007 f993 	bl	800b1f2 <_ZN8touchgfx17AbstractDataGraph19setGraphAreaPaddingEssss>
    dynamicGraph1.setGraphRangeY(0, 3);
 8003ecc:	4629      	mov	r1, r5
 8003ece:	4630      	mov	r0, r6
 8003ed0:	2203      	movs	r2, #3
 8003ed2:	f7ff fa5b 	bl	800338c <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEii>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 8003ed6:	e9d4 10e0 	ldrd	r1, r0, [r4, #896]	; 0x380
 8003eda:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8003ede:	f007 fb37 	bl	800b550 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        color = newColor;
 8003ee2:	4b55      	ldr	r3, [pc, #340]	; (8004038 <_ZN19ScreenGraphViewBaseC1Ev+0x35c>)
        lineWidth = width;
 8003ee4:	f884 a388 	strb.w	sl, [r4, #904]	; 0x388
        color = newColor;
 8003ee8:	f44f 777a 	mov.w	r7, #1000	; 0x3e8
 8003eec:	e9c4 37df 	strd	r3, r7, [r4, #892]	; 0x37c
        gridInterval = abs(interval);
 8003ef0:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
 8003ef4:	f8c4 3384 	str.w	r3, [r4, #900]	; 0x384
    dynamicGraph1.addGraphElement(dynamicGraph1MinorYAxisGrid);
 8003ef8:	4659      	mov	r1, fp
 8003efa:	4630      	mov	r0, r6
        majorGrid = &major;
 8003efc:	ed84 9ae3 	vstr	s18, [r4, #908]	; 0x38c
 8003f00:	f007 f982 	bl	800b208 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 8003f04:	463a      	mov	r2, r7
 8003f06:	e9d4 10f0 	ldrd	r1, r0, [r4, #960]	; 0x3c0
 8003f0a:	f007 fb21 	bl	800b550 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        gridInterval = abs(interval);
 8003f0e:	f242 7b10 	movw	fp, #10000	; 0x2710
        color = newColor;
 8003f12:	4b49      	ldr	r3, [pc, #292]	; (8004038 <_ZN19ScreenGraphViewBaseC1Ev+0x35c>)
 8003f14:	f8c4 33bc 	str.w	r3, [r4, #956]	; 0x3bc
    dynamicGraph1.addGraphElement(dynamicGraph1MajorXAxisGrid);
 8003f18:	ee1a 1a10 	vmov	r1, s20
 8003f1c:	4630      	mov	r0, r6
        dataScale = scale;
 8003f1e:	f8c4 73c0 	str.w	r7, [r4, #960]	; 0x3c0
        gridInterval = abs(interval);
 8003f22:	f8c4 b3c4 	str.w	fp, [r4, #964]	; 0x3c4
        lineWidth = width;
 8003f26:	f884 a3c8 	strb.w	sl, [r4, #968]	; 0x3c8
 8003f2a:	f007 f96d 	bl	800b208 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 8003f2e:	463a      	mov	r2, r7
 8003f30:	f8d4 1400 	ldr.w	r1, [r4, #1024]	; 0x400
 8003f34:	f8d4 0404 	ldr.w	r0, [r4, #1028]	; 0x404
 8003f38:	f007 fb0a 	bl	800b550 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        color = newColor;
 8003f3c:	4b3e      	ldr	r3, [pc, #248]	; (8004038 <_ZN19ScreenGraphViewBaseC1Ev+0x35c>)
 8003f3e:	f8c4 33fc 	str.w	r3, [r4, #1020]	; 0x3fc
    dynamicGraph1.addGraphElement(dynamicGraph1MajorYAxisGrid);
 8003f42:	ee19 1a10 	vmov	r1, s18
 8003f46:	4630      	mov	r0, r6
        dataScale = scale;
 8003f48:	f8c4 7400 	str.w	r7, [r4, #1024]	; 0x400
        gridInterval = abs(interval);
 8003f4c:	f8c4 7404 	str.w	r7, [r4, #1028]	; 0x404
        lineWidth = width;
 8003f50:	f884 9408 	strb.w	r9, [r4, #1032]	; 0x408
 8003f54:	f007 f958 	bl	800b208 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        labelInterval = AbstractDataGraph::convertToNewScale(labelInterval, dataScale, scale);
 8003f58:	463a      	mov	r2, r7
 8003f5a:	f8d4 1440 	ldr.w	r1, [r4, #1088]	; 0x440
 8003f5e:	f8d4 0444 	ldr.w	r0, [r4, #1092]	; 0x444
 8003f62:	f007 faf5 	bl	800b550 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        color = newColor;
 8003f66:	4b34      	ldr	r3, [pc, #208]	; (8004038 <_ZN19ScreenGraphViewBaseC1Ev+0x35c>)
 8003f68:	f8c4 343c 	str.w	r3, [r4, #1084]	; 0x43c
    dynamicGraph1.addBottomElement(dynamicGraph1MajorXAxisLabel);
 8003f6c:	ee1a 1a90 	vmov	r1, s21
 8003f70:	4630      	mov	r0, r6
        dataScale = scale;
 8003f72:	f8c4 7440 	str.w	r7, [r4, #1088]	; 0x440
        labelInterval = abs(interval);
 8003f76:	f8c4 b444 	str.w	fp, [r4, #1092]	; 0x444
class TypedText
 8003f7a:	f8a4 a44c 	strh.w	sl, [r4, #1100]	; 0x44c
 8003f7e:	f007 f967 	bl	800b250 <_ZN8touchgfx17AbstractDataGraph16addBottomElementERNS_23AbstractGraphDecorationE>
        labelInterval = AbstractDataGraph::convertToNewScale(labelInterval, dataScale, scale);
 8003f82:	463a      	mov	r2, r7
 8003f84:	f8d4 148c 	ldr.w	r1, [r4, #1164]	; 0x48c
 8003f88:	f8d4 0490 	ldr.w	r0, [r4, #1168]	; 0x490
 8003f8c:	f007 fae0 	bl	800b550 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        labelInterval = abs(interval);
 8003f90:	2396      	movs	r3, #150	; 0x96
 8003f92:	f8c4 3490 	str.w	r3, [r4, #1168]	; 0x490
 8003f96:	4b28      	ldr	r3, [pc, #160]	; (8004038 <_ZN19ScreenGraphViewBaseC1Ev+0x35c>)
 8003f98:	f8c4 3488 	str.w	r3, [r4, #1160]	; 0x488
    dynamicGraph1.addLeftElement(dynamicGraph1MajorYAxisLabel);
 8003f9c:	ee1b 1a10 	vmov	r1, s22
 8003fa0:	4630      	mov	r0, r6
        dataScale = scale;
 8003fa2:	f8c4 748c 	str.w	r7, [r4, #1164]	; 0x48c
 8003fa6:	f8a4 5498 	strh.w	r5, [r4, #1176]	; 0x498
        labelDecimals = decimals;
 8003faa:	f8a4 a49e 	strh.w	sl, [r4, #1182]	; 0x49e
 8003fae:	f007 f93d 	bl	800b22c <_ZN8touchgfx17AbstractDataGraph14addLeftElementERNS_23AbstractGraphDecorationE>
 8003fb2:	4b22      	ldr	r3, [pc, #136]	; (800403c <_ZN19ScreenGraphViewBaseC1Ev+0x360>)
 8003fb4:	f8c4 3348 	str.w	r3, [r4, #840]	; 0x348
    }

    virtual void setColor(colortype color)
    {
        AbstractPainterColor::setColor(color);
        color565 = LCD16bpp::getNativeColor(painterColor);
 8003fb8:	f241 1338 	movw	r3, #4408	; 0x1138
 8003fbc:	f8a4 334c 	strh.w	r3, [r4, #844]	; 0x34c
        canvasPainter = &painter;
 8003fc0:	9b03      	ldr	r3, [sp, #12]
 8003fc2:	f8c4 3334 	str.w	r3, [r4, #820]	; 0x334
    dynamicGraph1.addGraphElement(dynamicGraph1Line1);
 8003fc6:	ee19 1a90 	vmov	r1, s19
 8003fca:	4630      	mov	r0, r6
     *
     * @see getLineWidth
     */
    FORCE_INLINE_FUNCTION void setLineWidth(uint8_t width)
    {
        lineWidth = width;
 8003fcc:	f884 9338 	strb.w	r9, [r4, #824]	; 0x338
 8003fd0:	f007 f91a 	bl	800b208 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
 8003fd4:	1d20      	adds	r0, r4, #4
 8003fd6:	4641      	mov	r1, r8
 8003fd8:	9003      	str	r0, [sp, #12]
 8003fda:	f005 fc37 	bl	800984c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003fde:	ee18 1a10 	vmov	r1, s16
 8003fe2:	9803      	ldr	r0, [sp, #12]
 8003fe4:	f005 fc32 	bl	800984c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003fe8:	ee18 1a90 	vmov	r1, s17
 8003fec:	9803      	ldr	r0, [sp, #12]
 8003fee:	f005 fc2d 	bl	800984c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003ff2:	9803      	ldr	r0, [sp, #12]
 8003ff4:	4631      	mov	r1, r6
 8003ff6:	f005 fc29 	bl	800984c <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8003ffa:	4620      	mov	r0, r4
 8003ffc:	b007      	add	sp, #28
 8003ffe:	ecbd 8b08 	vpop	{d8-d11}
 8004002:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004006:	bf00      	nop
 8004008:	08021e28 	.word	0x08021e28
 800400c:	08022a30 	.word	0x08022a30
 8004010:	0802234c 	.word	0x0802234c
 8004014:	08021c74 	.word	0x08021c74
 8004018:	08022624 	.word	0x08022624
 800401c:	0802229c 	.word	0x0802229c
 8004020:	08021b9c 	.word	0x08021b9c
 8004024:	08021ae4 	.word	0x08021ae4
 8004028:	08022758 	.word	0x08022758
 800402c:	080227f8 	.word	0x080227f8
 8004030:	08021e10 	.word	0x08021e10
 8004034:	08003b75 	.word	0x08003b75
 8004038:	ff1497c5 	.word	0xff1497c5
 800403c:	ff1624c4 	.word	0xff1624c4

08004040 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8004040:	4770      	bx	lr
	...

08004044 <_Z23getFont_verdana_10_4bppv>:
{
 8004044:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8004046:	4d15      	ldr	r5, [pc, #84]	; (800409c <_Z23getFont_verdana_10_4bppv+0x58>)
 8004048:	782c      	ldrb	r4, [r5, #0]
 800404a:	f3bf 8f5b 	dmb	ish
 800404e:	f014 0401 	ands.w	r4, r4, #1
{
 8004052:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8004054:	d11e      	bne.n	8004094 <_Z23getFont_verdana_10_4bppv+0x50>
 8004056:	4628      	mov	r0, r5
 8004058:	f01b fa2f 	bl	801f4ba <__cxa_guard_acquire>
 800405c:	b1d0      	cbz	r0, 8004094 <_Z23getFont_verdana_10_4bppv+0x50>
 800405e:	233f      	movs	r3, #63	; 0x3f
 8004060:	9307      	str	r3, [sp, #28]
 8004062:	4b0f      	ldr	r3, [pc, #60]	; (80040a0 <_Z23getFont_verdana_10_4bppv+0x5c>)
 8004064:	9306      	str	r3, [sp, #24]
 8004066:	4b0f      	ldr	r3, [pc, #60]	; (80040a4 <_Z23getFont_verdana_10_4bppv+0x60>)
 8004068:	490f      	ldr	r1, [pc, #60]	; (80040a8 <_Z23getFont_verdana_10_4bppv+0x64>)
 800406a:	4810      	ldr	r0, [pc, #64]	; (80040ac <_Z23getFont_verdana_10_4bppv+0x68>)
 800406c:	9408      	str	r4, [sp, #32]
 800406e:	2201      	movs	r2, #1
 8004070:	e9cd 4304 	strd	r4, r3, [sp, #16]
 8004074:	2304      	movs	r3, #4
 8004076:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800407a:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 800407e:	230a      	movs	r3, #10
 8004080:	9403      	str	r4, [sp, #12]
 8004082:	9400      	str	r4, [sp, #0]
 8004084:	f7fe fbee 	bl	8002864 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8004088:	4809      	ldr	r0, [pc, #36]	; (80040b0 <_Z23getFont_verdana_10_4bppv+0x6c>)
 800408a:	f01b fa61 	bl	801f550 <atexit>
 800408e:	4628      	mov	r0, r5
 8004090:	f01b fa1f 	bl	801f4d2 <__cxa_guard_release>
    return verdana_10_4bpp;
}
 8004094:	4805      	ldr	r0, [pc, #20]	; (80040ac <_Z23getFont_verdana_10_4bppv+0x68>)
 8004096:	b00d      	add	sp, #52	; 0x34
 8004098:	bd30      	pop	{r4, r5, pc}
 800409a:	bf00      	nop
 800409c:	20006598 	.word	0x20006598
 80040a0:	080240a4 	.word	0x080240a4
 80040a4:	080240d4 	.word	0x080240d4
 80040a8:	08023e38 	.word	0x08023e38
 80040ac:	2000659c 	.word	0x2000659c
 80040b0:	08004041 	.word	0x08004041

080040b4 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_15_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_15_4bpp();

touchgfx::GeneratedFont& getFont_verdana_15_4bpp()
{
    static touchgfx::GeneratedFont verdana_15_4bpp(glyphs_verdana_15_4bpp, 38, 15, 3, 4, 1, 0, 1, unicodes_verdana_15_4bpp, kerning_verdana_15_4bpp, 63, 0, 0, 0);
 80040b4:	4770      	bx	lr
	...

080040b8 <_Z23getFont_verdana_15_4bppv>:
{
 80040b8:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_15_4bpp(glyphs_verdana_15_4bpp, 38, 15, 3, 4, 1, 0, 1, unicodes_verdana_15_4bpp, kerning_verdana_15_4bpp, 63, 0, 0, 0);
 80040ba:	4d16      	ldr	r5, [pc, #88]	; (8004114 <_Z23getFont_verdana_15_4bppv+0x5c>)
 80040bc:	782c      	ldrb	r4, [r5, #0]
 80040be:	f3bf 8f5b 	dmb	ish
 80040c2:	f014 0401 	ands.w	r4, r4, #1
{
 80040c6:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_15_4bpp(glyphs_verdana_15_4bpp, 38, 15, 3, 4, 1, 0, 1, unicodes_verdana_15_4bpp, kerning_verdana_15_4bpp, 63, 0, 0, 0);
 80040c8:	d120      	bne.n	800410c <_Z23getFont_verdana_15_4bppv+0x54>
 80040ca:	4628      	mov	r0, r5
 80040cc:	f01b f9f5 	bl	801f4ba <__cxa_guard_acquire>
 80040d0:	b1e0      	cbz	r0, 800410c <_Z23getFont_verdana_15_4bppv+0x54>
 80040d2:	233f      	movs	r3, #63	; 0x3f
 80040d4:	9307      	str	r3, [sp, #28]
 80040d6:	4b10      	ldr	r3, [pc, #64]	; (8004118 <_Z23getFont_verdana_15_4bppv+0x60>)
 80040d8:	9306      	str	r3, [sp, #24]
 80040da:	4b10      	ldr	r3, [pc, #64]	; (800411c <_Z23getFont_verdana_15_4bppv+0x64>)
 80040dc:	9305      	str	r3, [sp, #20]
 80040de:	2301      	movs	r3, #1
 80040e0:	e9cd 4303 	strd	r4, r3, [sp, #12]
 80040e4:	9302      	str	r3, [sp, #8]
 80040e6:	2204      	movs	r2, #4
 80040e8:	2303      	movs	r3, #3
 80040ea:	e9cd 3200 	strd	r3, r2, [sp]
 80040ee:	490c      	ldr	r1, [pc, #48]	; (8004120 <_Z23getFont_verdana_15_4bppv+0x68>)
 80040f0:	480c      	ldr	r0, [pc, #48]	; (8004124 <_Z23getFont_verdana_15_4bppv+0x6c>)
 80040f2:	9408      	str	r4, [sp, #32]
 80040f4:	230f      	movs	r3, #15
 80040f6:	2226      	movs	r2, #38	; 0x26
 80040f8:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 80040fc:	f7fe fbb2 	bl	8002864 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8004100:	4809      	ldr	r0, [pc, #36]	; (8004128 <_Z23getFont_verdana_15_4bppv+0x70>)
 8004102:	f01b fa25 	bl	801f550 <atexit>
 8004106:	4628      	mov	r0, r5
 8004108:	f01b f9e3 	bl	801f4d2 <__cxa_guard_release>
    return verdana_15_4bpp;
}
 800410c:	4805      	ldr	r0, [pc, #20]	; (8004124 <_Z23getFont_verdana_15_4bppv+0x6c>)
 800410e:	b00d      	add	sp, #52	; 0x34
 8004110:	bd30      	pop	{r4, r5, pc}
 8004112:	bf00      	nop
 8004114:	200065c4 	.word	0x200065c4
 8004118:	080240a8 	.word	0x080240a8
 800411c:	080240d8 	.word	0x080240d8
 8004120:	08023e48 	.word	0x08023e48
 8004124:	200065c8 	.word	0x200065c8
 8004128:	080040b5 	.word	0x080040b5

0800412c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 5, 40, 1, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 800412c:	4770      	bx	lr
	...

08004130 <_Z23getFont_verdana_40_4bppv>:
{
 8004130:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 5, 40, 1, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8004132:	4d15      	ldr	r5, [pc, #84]	; (8004188 <_Z23getFont_verdana_40_4bppv+0x58>)
 8004134:	782c      	ldrb	r4, [r5, #0]
 8004136:	f3bf 8f5b 	dmb	ish
 800413a:	f014 0401 	ands.w	r4, r4, #1
{
 800413e:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 5, 40, 1, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8004140:	d11f      	bne.n	8004182 <_Z23getFont_verdana_40_4bppv+0x52>
 8004142:	4628      	mov	r0, r5
 8004144:	f01b f9b9 	bl	801f4ba <__cxa_guard_acquire>
 8004148:	b1d8      	cbz	r0, 8004182 <_Z23getFont_verdana_40_4bppv+0x52>
 800414a:	233f      	movs	r3, #63	; 0x3f
 800414c:	9307      	str	r3, [sp, #28]
 800414e:	4b0f      	ldr	r3, [pc, #60]	; (800418c <_Z23getFont_verdana_40_4bppv+0x5c>)
 8004150:	9306      	str	r3, [sp, #24]
 8004152:	4b0f      	ldr	r3, [pc, #60]	; (8004190 <_Z23getFont_verdana_40_4bppv+0x60>)
 8004154:	490f      	ldr	r1, [pc, #60]	; (8004194 <_Z23getFont_verdana_40_4bppv+0x64>)
 8004156:	4810      	ldr	r0, [pc, #64]	; (8004198 <_Z23getFont_verdana_40_4bppv+0x68>)
 8004158:	9408      	str	r4, [sp, #32]
 800415a:	e9cd 4304 	strd	r4, r3, [sp, #16]
 800415e:	2204      	movs	r2, #4
 8004160:	2301      	movs	r3, #1
 8004162:	e9cd 2301 	strd	r2, r3, [sp, #4]
 8004166:	9300      	str	r3, [sp, #0]
 8004168:	2205      	movs	r2, #5
 800416a:	2328      	movs	r3, #40	; 0x28
 800416c:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 8004170:	9403      	str	r4, [sp, #12]
 8004172:	f7fe fb77 	bl	8002864 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8004176:	4809      	ldr	r0, [pc, #36]	; (800419c <_Z23getFont_verdana_40_4bppv+0x6c>)
 8004178:	f01b f9ea 	bl	801f550 <atexit>
 800417c:	4628      	mov	r0, r5
 800417e:	f01b f9a8 	bl	801f4d2 <__cxa_guard_release>
    return verdana_40_4bpp;
}
 8004182:	4805      	ldr	r0, [pc, #20]	; (8004198 <_Z23getFont_verdana_40_4bppv+0x68>)
 8004184:	b00d      	add	sp, #52	; 0x34
 8004186:	bd30      	pop	{r4, r5, pc}
 8004188:	200065f0 	.word	0x200065f0
 800418c:	080240c0 	.word	0x080240c0
 8004190:	080240dc 	.word	0x080240dc
 8004194:	0802405c 	.word	0x0802405c
 8004198:	200065f4 	.word	0x200065f4
 800419c:	0800412d 	.word	0x0800412d

080041a0 <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 80041a0:	2000      	movs	r0, #0
 80041a2:	4770      	bx	lr

080041a4 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
 80041a4:	2000      	movs	r0, #0
 80041a6:	4770      	bx	lr

080041a8 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 80041a8:	b40e      	push	{r1, r2, r3}
 80041aa:	b503      	push	{r0, r1, lr}
 80041ac:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 80041ae:	2100      	movs	r1, #0
{
 80041b0:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 80041b4:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 80041b6:	f00c fcb9 	bl	8010b2c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 80041ba:	b002      	add	sp, #8
 80041bc:	f85d eb04 	ldr.w	lr, [sp], #4
 80041c0:	b003      	add	sp, #12
 80041c2:	4770      	bx	lr

080041c4 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 80041c4:	b40c      	push	{r2, r3}
 80041c6:	b507      	push	{r0, r1, r2, lr}
 80041c8:	ab04      	add	r3, sp, #16
 80041ca:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 80041ce:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 80041d0:	f00c fcac 	bl	8010b2c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 80041d4:	b003      	add	sp, #12
 80041d6:	f85d eb04 	ldr.w	lr, [sp], #4
 80041da:	b002      	add	sp, #8
 80041dc:	4770      	bx	lr
	...

080041e0 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 80041e0:	6c43      	ldr	r3, [r0, #68]	; 0x44
{
 80041e2:	b510      	push	{r4, lr}
 80041e4:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 80041e6:	b373      	cbz	r3, 8004246 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        {
            return used == size;
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 80041e8:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 80041ea:	b92b      	cbnz	r3, 80041f8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 80041ec:	4b18      	ldr	r3, [pc, #96]	; (8004250 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 80041ee:	4a19      	ldr	r2, [pc, #100]	; (8004254 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 80041f0:	21c0      	movs	r1, #192	; 0xc0
            return buffer[pos];
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 80041f2:	4819      	ldr	r0, [pc, #100]	; (8004258 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 80041f4:	f01b f98e 	bl	801f514 <__assert_func>
            return buffer[pos];
 80041f8:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 80041fa:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80041fe:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
 8004200:	b30b      	cbz	r3, 8004246 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 8004202:	f00e f82c 	bl	801225e <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 8004206:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8004208:	2b01      	cmp	r3, #1
 800420a:	d803      	bhi.n	8004214 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 800420c:	4b13      	ldr	r3, [pc, #76]	; (800425c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 800420e:	4a14      	ldr	r2, [pc, #80]	; (8004260 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 8004210:	21c5      	movs	r1, #197	; 0xc5
 8004212:	e7ee      	b.n	80041f2 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 8004214:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8004216:	1c53      	adds	r3, r2, #1
 8004218:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 800421a:	2b09      	cmp	r3, #9
 800421c:	4619      	mov	r1, r3
 800421e:	bf88      	it	hi
 8004220:	f1a3 010a 	subhi.w	r1, r3, #10
 8004224:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 8004228:	f640 103f 	movw	r0, #2367	; 0x93f
 800422c:	8c49      	ldrh	r1, [r1, #34]	; 0x22
 800422e:	4281      	cmp	r1, r0
 8004230:	d109      	bne.n	8004246 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 8004232:	2b0a      	cmp	r3, #10
 8004234:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8004238:	bf28      	it	cs
 800423a:	2300      	movcs	r3, #0
        }
        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 800423c:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 8004240:	8c50      	ldrh	r0, [r2, #34]	; 0x22
            buffer[index < size ? index : 0] = newChar;
 8004242:	8458      	strh	r0, [r3, #34]	; 0x22
            buffer[pos] = newChar;
 8004244:	8451      	strh	r1, [r2, #34]	; 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 8004246:	4620      	mov	r0, r4
}
 8004248:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 800424c:	f00d bf0a 	b.w	8012064 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8004250:	08021e58 	.word	0x08021e58
 8004254:	08021e61 	.word	0x08021e61
 8004258:	08021f0c 	.word	0x08021f0c
 800425c:	08021f56 	.word	0x08021f56
 8004260:	08021f64 	.word	0x08021f64

08004264 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 8004264:	f00d bec5 	b.w	8011ff2 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08004268 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 8004268:	b510      	push	{r4, lr}
 800426a:	b086      	sub	sp, #24
 800426c:	ac02      	add	r4, sp, #8
 800426e:	e884 0006 	stmia.w	r4, {r1, r2}
 8004272:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 8004274:	ab0a      	add	r3, sp, #40	; 0x28
 8004276:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 8004278:	9301      	str	r3, [sp, #4]
 800427a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800427c:	9300      	str	r3, [sp, #0]
 800427e:	4621      	mov	r1, r4
 8004280:	9b08      	ldr	r3, [sp, #32]
 8004282:	f00b f958 	bl	800f536 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 8004286:	b006      	add	sp, #24
 8004288:	bd10      	pop	{r4, pc}
	...

0800428c <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 800428c:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 800428e:	bb18      	cbnz	r0, 80042d8 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 8004290:	4b12      	ldr	r3, [pc, #72]	; (80042dc <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 8004292:	4813      	ldr	r0, [pc, #76]	; (80042e0 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 8004294:	681b      	ldr	r3, [r3, #0]
 8004296:	4913      	ldr	r1, [pc, #76]	; (80042e4 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 8004298:	b1b3      	cbz	r3, 80042c8 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 800429a:	681a      	ldr	r2, [r3, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 800429c:	689c      	ldr	r4, [r3, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 800429e:	441a      	add	r2, r3
 80042a0:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 80042a2:	685a      	ldr	r2, [r3, #4]
 80042a4:	441a      	add	r2, r3
 80042a6:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 80042a8:	441c      	add	r4, r3
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 80042aa:	4b0f      	ldr	r3, [pc, #60]	; (80042e8 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 80042ac:	2200      	movs	r2, #0
 80042ae:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 80042b0:	f000 f838 	bl	8004324 <_ZN17TypedTextDatabase8getFontsEv>
 80042b4:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 80042b6:	f000 f833 	bl	8004320 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 80042ba:	4b0c      	ldr	r3, [pc, #48]	; (80042ec <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 80042bc:	601c      	str	r4, [r3, #0]
        fonts = f;
 80042be:	4b0c      	ldr	r3, [pc, #48]	; (80042f0 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 80042c0:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 80042c2:	4b0c      	ldr	r3, [pc, #48]	; (80042f4 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 80042c4:	8018      	strh	r0, [r3, #0]
    }
}
 80042c6:	e007      	b.n	80042d8 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 80042c8:	4b0b      	ldr	r3, [pc, #44]	; (80042f8 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 80042ca:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 80042cc:	4b0b      	ldr	r3, [pc, #44]	; (80042fc <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 80042ce:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 80042d0:	4b0b      	ldr	r3, [pc, #44]	; (8004300 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 80042d2:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 80042d4:	2c00      	cmp	r4, #0
 80042d6:	d1e8      	bne.n	80042aa <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 80042d8:	bd38      	pop	{r3, r4, r5, pc}
 80042da:	bf00      	nop
 80042dc:	2000661c 	.word	0x2000661c
 80042e0:	20006620 	.word	0x20006620
 80042e4:	20006624 	.word	0x20006624
 80042e8:	20006628 	.word	0x20006628
 80042ec:	200174b0 	.word	0x200174b0
 80042f0:	200174b8 	.word	0x200174b8
 80042f4:	200174b4 	.word	0x200174b4
 80042f8:	080240fc 	.word	0x080240fc
 80042fc:	080240e0 	.word	0x080240e0
 8004300:	08024188 	.word	0x08024188

08004304 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 8004304:	4b04      	ldr	r3, [pc, #16]	; (8004318 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 8004306:	681b      	ldr	r3, [r3, #0]
 8004308:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 800430c:	4b03      	ldr	r3, [pc, #12]	; (800431c <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 800430e:	681b      	ldr	r3, [r3, #0]
}
 8004310:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8004314:	4770      	bx	lr
 8004316:	bf00      	nop
 8004318:	20006624 	.word	0x20006624
 800431c:	20006620 	.word	0x20006620

08004320 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 8004320:	2007      	movs	r0, #7
 8004322:	4770      	bx	lr

08004324 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 8004324:	4800      	ldr	r0, [pc, #0]	; (8004328 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 8004326:	4770      	bx	lr
 8004328:	2000662c 	.word	0x2000662c

0800432c <_GLOBAL__sub_I_touchgfx_fonts>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 800432c:	b510      	push	{r4, lr}
    &(getFont_verdana_15_4bpp()),
 800432e:	f7ff fec3 	bl	80040b8 <_Z23getFont_verdana_15_4bppv>
};
 8004332:	4c04      	ldr	r4, [pc, #16]	; (8004344 <_GLOBAL__sub_I_touchgfx_fonts+0x18>)
 8004334:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 8004336:	f7ff fefb 	bl	8004130 <_Z23getFont_verdana_40_4bppv>
};
 800433a:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp())
 800433c:	f7ff fe82 	bl	8004044 <_Z23getFont_verdana_10_4bppv>
};
 8004340:	60a0      	str	r0, [r4, #8]
} // namespace TypedTextDatabase
 8004342:	bd10      	pop	{r4, pc}
 8004344:	2000662c 	.word	0x2000662c

08004348 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 8004348:	4770      	bx	lr

0800434a <_ZN19FrontendApplicationD0Ev>:
 800434a:	b510      	push	{r4, lr}
 800434c:	f44f 71ac 	mov.w	r1, #344	; 0x158
 8004350:	4604      	mov	r4, r0
 8004352:	f01b f8b0 	bl	801f4b6 <_ZdlPvj>
 8004356:	4620      	mov	r0, r4
 8004358:	bd10      	pop	{r4, pc}

0800435a <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 800435a:	b510      	push	{r4, lr}
 800435c:	4604      	mov	r4, r0
    {
        model.tick();
 800435e:	f8d0 0154 	ldr.w	r0, [r0, #340]	; 0x154
 8004362:	f000 f813 	bl	800438c <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 8004366:	4620      	mov	r0, r4
    }
 8004368:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 800436c:	f00b bc5c 	b.w	800fc28 <_ZN8touchgfx11Application15handleTickEventEv>

08004370 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 8004370:	b510      	push	{r4, lr}
 8004372:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 8004374:	f7fe f876 	bl	8002464 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 8004378:	4b01      	ldr	r3, [pc, #4]	; (8004380 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 800437a:	6023      	str	r3, [r4, #0]
{

}
 800437c:	4620      	mov	r0, r4
 800437e:	bd10      	pop	{r4, pc}
 8004380:	08022040 	.word	0x08022040

08004384 <_ZN5ModelC1Ev>:
#include <gui/model/ModelListener.hpp>
int PradLadowania=400; //ustawienie na sztywno pradu ladowania
extern int LoadingCurrent;
extern int narysujPunktNaWykresie;
int licznik;
Model::Model() : modelListener(0)
 8004384:	2200      	movs	r2, #0
 8004386:	6002      	str	r2, [r0, #0]
{

}
 8004388:	4770      	bx	lr
	...

0800438c <_ZN5Model4tickEv>:

void Model::tick()
{
 800438c:	b538      	push	{r3, r4, r5, lr}
 800438e:	4604      	mov	r4, r0
//	licznik++;
//	if (licznik>1000 )licznik =0;
//
//	if (licznik%100) modelListener->UpdateBatteryVoltage();

modelListener->UpdateBatteryVoltage();
 8004390:	6800      	ldr	r0, [r0, #0]

if(narysujPunktNaWykresie){
 8004392:	4d06      	ldr	r5, [pc, #24]	; (80043ac <_ZN5Model4tickEv+0x20>)
modelListener->UpdateBatteryVoltage();
 8004394:	6803      	ldr	r3, [r0, #0]
 8004396:	689b      	ldr	r3, [r3, #8]
 8004398:	4798      	blx	r3
if(narysujPunktNaWykresie){
 800439a:	682b      	ldr	r3, [r5, #0]
 800439c:	b12b      	cbz	r3, 80043aa <_ZN5Model4tickEv+0x1e>
	modelListener->DrawPoint();
 800439e:	6820      	ldr	r0, [r4, #0]
 80043a0:	6803      	ldr	r3, [r0, #0]
 80043a2:	68db      	ldr	r3, [r3, #12]
 80043a4:	4798      	blx	r3
	narysujPunktNaWykresie=0;
 80043a6:	2300      	movs	r3, #0
 80043a8:	602b      	str	r3, [r5, #0]
}
}
 80043aa:	bd38      	pop	{r3, r4, r5, pc}
 80043ac:	2000654c 	.word	0x2000654c

080043b0 <_ZN13ModelListener9DrawPointEv>:
    virtual void DrawPoint () {};
 80043b0:	4770      	bx	lr

080043b2 <_ZN16Screen1PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen1Presenter() {};
 80043b2:	4770      	bx	lr

080043b4 <_ZThn4_N16Screen1PresenterD1Ev>:
 80043b4:	3804      	subs	r0, #4
 80043b6:	4770      	bx	lr

080043b8 <_ZN16Screen1Presenter10deactivateEv>:
}

void Screen1Presenter::activate()
{

}
 80043b8:	4770      	bx	lr

080043ba <_ZN16Screen1Presenter20UpdateBatteryVoltageEv>:
{

}

void Screen1Presenter:: UpdateBatteryVoltage(){
view.DisplayBatteryVoltage();
 80043ba:	68c0      	ldr	r0, [r0, #12]
 80043bc:	6803      	ldr	r3, [r0, #0]
 80043be:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80043c0:	4718      	bx	r3

080043c2 <_ZThn4_N16Screen1Presenter20UpdateBatteryVoltageEv>:
    virtual void UpdateBatteryVoltage();
 80043c2:	f1a0 0004 	sub.w	r0, r0, #4
 80043c6:	f7ff bff8 	b.w	80043ba <_ZN16Screen1Presenter20UpdateBatteryVoltageEv>

080043ca <_ZN16Screen1PresenterD0Ev>:
    virtual ~Screen1Presenter() {};
 80043ca:	b510      	push	{r4, lr}
 80043cc:	2110      	movs	r1, #16
 80043ce:	4604      	mov	r4, r0
 80043d0:	f01b f871 	bl	801f4b6 <_ZdlPvj>
 80043d4:	4620      	mov	r0, r4
 80043d6:	bd10      	pop	{r4, pc}

080043d8 <_ZThn4_N16Screen1PresenterD0Ev>:
 80043d8:	f1a0 0004 	sub.w	r0, r0, #4
 80043dc:	e7f5      	b.n	80043ca <_ZN16Screen1PresenterD0Ev>
	...

080043e0 <_ZN16Screen1PresenterC1ER11Screen1View>:
Screen1Presenter::Screen1Presenter(Screen1View& v)
 80043e0:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 80043e2:	2200      	movs	r2, #0
 80043e4:	6082      	str	r2, [r0, #8]
    : view(v)
 80043e6:	4a04      	ldr	r2, [pc, #16]	; (80043f8 <_ZN16Screen1PresenterC1ER11Screen1View+0x18>)
 80043e8:	60c1      	str	r1, [r0, #12]
 80043ea:	f102 0408 	add.w	r4, r2, #8
 80043ee:	3224      	adds	r2, #36	; 0x24
 80043f0:	6004      	str	r4, [r0, #0]
 80043f2:	6042      	str	r2, [r0, #4]
}
 80043f4:	bd10      	pop	{r4, pc}
 80043f6:	bf00      	nop
 80043f8:	08022084 	.word	0x08022084

080043fc <_ZN11Screen1ViewD1Ev>:
#include <gui/screen1_screen/Screen1Presenter.hpp>
class Screen1View : public Screen1ViewBase
{
public:
    Screen1View();
    virtual ~Screen1View() {}
 80043fc:	4770      	bx	lr

080043fe <_ZN11Screen1View14tearDownScreenEv>:
}

void Screen1View::tearDownScreen()
{
    Screen1ViewBase::tearDownScreen();
}
 80043fe:	4770      	bx	lr

08004400 <_ZN11Screen1View18ButtonStartClickedEv>:
}

void Screen1View::ButtonStartClicked()
{
#ifndef SIMULATOR
 LoadingCurrent=PradLadowania;
 8004400:	4b03      	ldr	r3, [pc, #12]	; (8004410 <_ZN11Screen1View18ButtonStartClickedEv+0x10>)
 8004402:	681a      	ldr	r2, [r3, #0]
 8004404:	4b03      	ldr	r3, [pc, #12]	; (8004414 <_ZN11Screen1View18ButtonStartClickedEv+0x14>)
 8004406:	601a      	str	r2, [r3, #0]
 ChargeStarted=1;
 8004408:	4b03      	ldr	r3, [pc, #12]	; (8004418 <_ZN11Screen1View18ButtonStartClickedEv+0x18>)
 800440a:	2201      	movs	r2, #1
 800440c:	601a      	str	r2, [r3, #0]
#endif
}
 800440e:	4770      	bx	lr
 8004410:	20000018 	.word	0x20000018
 8004414:	200029a0 	.word	0x200029a0
 8004418:	20002990 	.word	0x20002990

0800441c <_ZN11Screen1View15ButtonUpClickedEv>:
	PradLadowania=PradLadowania+10;
 800441c:	4b0b      	ldr	r3, [pc, #44]	; (800444c <_ZN11Screen1View15ButtonUpClickedEv+0x30>)
 800441e:	681a      	ldr	r2, [r3, #0]
{
 8004420:	b510      	push	{r4, lr}
	PradLadowania=PradLadowania+10;
 8004422:	320a      	adds	r2, #10
	if (PradLadowania >400){
 8004424:	f5b2 7fc8 	cmp.w	r2, #400	; 0x190
	PradLadowania=400;}
 8004428:	bfc8      	it	gt
 800442a:	f44f 72c8 	movgt.w	r2, #400	; 0x190
 800442e:	601a      	str	r2, [r3, #0]
{
 8004430:	4604      	mov	r4, r0
	Unicode::snprintf(txtPradLadowaniaBuffer,TXTPRADLADOWANIA_SIZE,"%d",PradLadowania);
 8004432:	681b      	ldr	r3, [r3, #0]
 8004434:	4a06      	ldr	r2, [pc, #24]	; (8004450 <_ZN11Screen1View15ButtonUpClickedEv+0x34>)
 8004436:	210a      	movs	r1, #10
 8004438:	f500 706c 	add.w	r0, r0, #944	; 0x3b0
 800443c:	f00e fcbe 	bl	8012dbc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	txtPradLadowania.invalidate();
 8004440:	f504 7017 	add.w	r0, r4, #604	; 0x25c
}
 8004444:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	txtPradLadowania.invalidate();
 8004448:	f00c bc91 	b.w	8010d6e <_ZNK8touchgfx8Drawable10invalidateEv>
 800444c:	20000018 	.word	0x20000018
 8004450:	080220b8 	.word	0x080220b8

08004454 <_ZN11Screen1View17ButtonDownClickedEv>:
	PradLadowania=PradLadowania-10;
 8004454:	4b0a      	ldr	r3, [pc, #40]	; (8004480 <_ZN11Screen1View17ButtonDownClickedEv+0x2c>)
 8004456:	681a      	ldr	r2, [r3, #0]
{
 8004458:	b510      	push	{r4, lr}
	PradLadowania=PradLadowania-10;
 800445a:	3a0a      	subs	r2, #10
    if (PradLadowania <10){
 800445c:	2a09      	cmp	r2, #9
	PradLadowania=10;}
 800445e:	bfd8      	it	le
 8004460:	220a      	movle	r2, #10
 8004462:	601a      	str	r2, [r3, #0]
{
 8004464:	4604      	mov	r4, r0
	Unicode::snprintf(txtPradLadowaniaBuffer,TXTPRADLADOWANIA_SIZE,"%d",PradLadowania);
 8004466:	681b      	ldr	r3, [r3, #0]
 8004468:	4a06      	ldr	r2, [pc, #24]	; (8004484 <_ZN11Screen1View17ButtonDownClickedEv+0x30>)
 800446a:	210a      	movs	r1, #10
 800446c:	f500 706c 	add.w	r0, r0, #944	; 0x3b0
 8004470:	f00e fca4 	bl	8012dbc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	txtPradLadowania.invalidate();
 8004474:	f504 7017 	add.w	r0, r4, #604	; 0x25c
}
 8004478:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	txtPradLadowania.invalidate();
 800447c:	f00c bc77 	b.w	8010d6e <_ZNK8touchgfx8Drawable10invalidateEv>
 8004480:	20000018 	.word	0x20000018
 8004484:	080220b8 	.word	0x080220b8

08004488 <_ZN11Screen1View11setupScreenEv>:
    Screen1ViewBase::setupScreen();
 8004488:	f7fe ba5f 	b.w	800294a <_ZN15Screen1ViewBase11setupScreenEv>

0800448c <_ZN11Screen1View21DisplayBatteryVoltageEv>:
void Screen1View::DisplayBatteryVoltage(){
 800448c:	b513      	push	{r0, r1, r4, lr}
	Unicode::snprintfFloat(txtNapiecieBateriiBuffer,TXTNAPIECIEBATERII_SIZE,"%.3f",BatteryVoltage);
 800448e:	4b09      	ldr	r3, [pc, #36]	; (80044b4 <_ZN11Screen1View21DisplayBatteryVoltageEv+0x28>)
     *
     * @see snprintf, snprintfFloats
     */
    static UnicodeChar* snprintfFloat(UnicodeChar* dst, uint16_t dstSize, const char* format, const float value)
    {
        return snprintfFloats(dst, dstSize, format, &value);
 8004490:	4a09      	ldr	r2, [pc, #36]	; (80044b8 <_ZN11Screen1View21DisplayBatteryVoltageEv+0x2c>)
 8004492:	681b      	ldr	r3, [r3, #0]
 8004494:	9301      	str	r3, [sp, #4]
void Screen1View::DisplayBatteryVoltage(){
 8004496:	4604      	mov	r4, r0
 8004498:	ab01      	add	r3, sp, #4
 800449a:	210a      	movs	r1, #10
 800449c:	f500 7071 	add.w	r0, r0, #964	; 0x3c4
 80044a0:	f00e fe48 	bl	8013134 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	txtNapiecieBaterii.invalidate();
 80044a4:	f504 7059 	add.w	r0, r4, #868	; 0x364
}
 80044a8:	b002      	add	sp, #8
 80044aa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	txtNapiecieBaterii.invalidate();
 80044ae:	f00c bc5e 	b.w	8010d6e <_ZNK8touchgfx8Drawable10invalidateEv>
 80044b2:	bf00      	nop
 80044b4:	2000000c 	.word	0x2000000c
 80044b8:	080220bb 	.word	0x080220bb

080044bc <_ZN11Screen1ViewD0Ev>:
 80044bc:	b510      	push	{r4, lr}
 80044be:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
 80044c2:	4604      	mov	r4, r0
 80044c4:	f01a fff7 	bl	801f4b6 <_ZdlPvj>
 80044c8:	4620      	mov	r0, r4
 80044ca:	bd10      	pop	{r4, pc}

080044cc <_ZN11Screen1ViewC1Ev>:
Screen1View::Screen1View()
 80044cc:	b510      	push	{r4, lr}
 80044ce:	4604      	mov	r4, r0
 80044d0:	f7fe fca8 	bl	8002e24 <_ZN15Screen1ViewBaseC1Ev>
 80044d4:	4b07      	ldr	r3, [pc, #28]	; (80044f4 <_ZN11Screen1ViewC1Ev+0x28>)
 80044d6:	6023      	str	r3, [r4, #0]
Unicode::snprintf(txtPradLadowaniaBuffer,TXTPRADLADOWANIA_SIZE,"%d",PradLadowania);
 80044d8:	4b07      	ldr	r3, [pc, #28]	; (80044f8 <_ZN11Screen1ViewC1Ev+0x2c>)
 80044da:	4a08      	ldr	r2, [pc, #32]	; (80044fc <_ZN11Screen1ViewC1Ev+0x30>)
 80044dc:	681b      	ldr	r3, [r3, #0]
 80044de:	210a      	movs	r1, #10
 80044e0:	f504 706c 	add.w	r0, r4, #944	; 0x3b0
 80044e4:	f00e fc6a 	bl	8012dbc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	txtPradLadowania.invalidate();
 80044e8:	f504 7017 	add.w	r0, r4, #604	; 0x25c
 80044ec:	f00c fc3f 	bl	8010d6e <_ZNK8touchgfx8Drawable10invalidateEv>
}
 80044f0:	4620      	mov	r0, r4
 80044f2:	bd10      	pop	{r4, pc}
 80044f4:	080220c8 	.word	0x080220c8
 80044f8:	20000018 	.word	0x20000018
 80044fc:	080220b8 	.word	0x080220b8

08004500 <_ZN13ModelListener20UpdateBatteryVoltageEv>:
    virtual void UpdateBatteryVoltage () {};
 8004500:	4770      	bx	lr

08004502 <_ZN20ScreenGraphPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~ScreenGraphPresenter() {};
 8004502:	4770      	bx	lr

08004504 <_ZThn4_N20ScreenGraphPresenterD1Ev>:
 8004504:	3804      	subs	r0, #4
 8004506:	4770      	bx	lr

08004508 <_ZN20ScreenGraphPresenter10deactivateEv>:
}

void ScreenGraphPresenter::activate()
{

}
 8004508:	4770      	bx	lr

0800450a <_ZN20ScreenGraphPresenter9DrawPointEv>:
{

}
void ScreenGraphPresenter::DrawPoint()
{
	view.DrawPoint2();
 800450a:	68c0      	ldr	r0, [r0, #12]
 800450c:	6803      	ldr	r3, [r0, #0]
 800450e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004510:	4718      	bx	r3

08004512 <_ZThn4_N20ScreenGraphPresenter9DrawPointEv>:
    virtual void DrawPoint();
 8004512:	f1a0 0004 	sub.w	r0, r0, #4
 8004516:	f7ff bff8 	b.w	800450a <_ZN20ScreenGraphPresenter9DrawPointEv>

0800451a <_ZN20ScreenGraphPresenterD0Ev>:
    virtual ~ScreenGraphPresenter() {};
 800451a:	b510      	push	{r4, lr}
 800451c:	2110      	movs	r1, #16
 800451e:	4604      	mov	r4, r0
 8004520:	f01a ffc9 	bl	801f4b6 <_ZdlPvj>
 8004524:	4620      	mov	r0, r4
 8004526:	bd10      	pop	{r4, pc}

08004528 <_ZThn4_N20ScreenGraphPresenterD0Ev>:
 8004528:	f1a0 0004 	sub.w	r0, r0, #4
 800452c:	e7f5      	b.n	800451a <_ZN20ScreenGraphPresenterD0Ev>
	...

08004530 <_ZN20ScreenGraphPresenterC1ER15ScreenGraphView>:
ScreenGraphPresenter::ScreenGraphPresenter(ScreenGraphView& v)
 8004530:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 8004532:	2200      	movs	r2, #0
 8004534:	6082      	str	r2, [r0, #8]
    : view(v)
 8004536:	4a04      	ldr	r2, [pc, #16]	; (8004548 <_ZN20ScreenGraphPresenterC1ER15ScreenGraphView+0x18>)
 8004538:	60c1      	str	r1, [r0, #12]
 800453a:	f102 0408 	add.w	r4, r2, #8
 800453e:	3224      	adds	r2, #36	; 0x24
 8004540:	6004      	str	r4, [r0, #0]
 8004542:	6042      	str	r2, [r0, #4]
}
 8004544:	bd10      	pop	{r4, pc}
 8004546:	bf00      	nop
 8004548:	08022104 	.word	0x08022104

0800454c <_ZN15ScreenGraphViewD1Ev>:

class ScreenGraphView : public ScreenGraphViewBase
{
public:
    ScreenGraphView();
    virtual ~ScreenGraphView() {}
 800454c:	4770      	bx	lr

0800454e <_ZN15ScreenGraphView14tearDownScreenEv>:
}

void ScreenGraphView::tearDownScreen()
{
    ScreenGraphViewBase::tearDownScreen();
}
 800454e:	4770      	bx	lr

08004550 <_ZN15ScreenGraphView10DrawPoint2Ev>:

void ScreenGraphView::DrawPoint2(){
 8004550:	4603      	mov	r3, r0
        const float fs = f * (float)scale;
 8004552:	edd3 7a40 	vldr	s15, [r3, #256]	; 0x100
	dynamicGraph1.addDataPoint(BatteryVoltage);
 8004556:	4b15      	ldr	r3, [pc, #84]	; (80045ac <_ZN15ScreenGraphView10DrawPoint2Ev+0x5c>)
 8004558:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800455c:	ed93 7a00 	vldr	s14, [r3]
 8004560:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004564:	30cc      	adds	r0, #204	; 0xcc
        if (fs >= 0)
 8004566:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800456a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800456e:	db09      	blt.n	8004584 <_ZN15ScreenGraphView10DrawPoint2Ev+0x34>
            return (int)(fs + 0.5f);
 8004570:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004574:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004578:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800457c:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004580:	f007 b840 	b.w	800b604 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8004584:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8004588:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800458c:	ee17 3a10 	vmov	r3, s14
 8004590:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8004594:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8004598:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800459c:	1e59      	subs	r1, r3, #1
 800459e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80045a2:	ee17 3a90 	vmov	r3, s15
 80045a6:	440b      	add	r3, r1
 80045a8:	4619      	mov	r1, r3
 80045aa:	e7e9      	b.n	8004580 <_ZN15ScreenGraphView10DrawPoint2Ev+0x30>
 80045ac:	2000000c 	.word	0x2000000c

080045b0 <_ZN15ScreenGraphViewD0Ev>:
 80045b0:	b510      	push	{r4, lr}
 80045b2:	f241 7178 	movw	r1, #6008	; 0x1778
 80045b6:	4604      	mov	r4, r0
 80045b8:	f01a ff7d 	bl	801f4b6 <_ZdlPvj>
 80045bc:	4620      	mov	r0, r4
 80045be:	bd10      	pop	{r4, pc}

080045c0 <_ZN15ScreenGraphView11setupScreenEv>:
{
 80045c0:	b510      	push	{r4, lr}
 80045c2:	4604      	mov	r4, r0
    ScreenGraphViewBase::setupScreen();
 80045c4:	f7ff fa2b 	bl	8003a1e <_ZN19ScreenGraphViewBase11setupScreenEv>
        const float fs = f * (float)scale;
 80045c8:	f8d4 348c 	ldr.w	r3, [r4, #1164]	; 0x48c
 80045cc:	ee07 3a90 	vmov	s15, r3
 80045d0:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80045d4:	eef6 6a00 	vmov.f32	s13, #96	; 0x3f000000  0.5
 80045d8:	ee27 7a26 	vmul.f32	s14, s14, s13
        if (fs >= 0)
 80045dc:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 80045e0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80045e4:	db40      	blt.n	8004668 <_ZN15ScreenGraphView11setupScreenEv+0xa8>
            return (int)(fs + 0.5f);
 80045e6:	ee37 7a26 	vadd.f32	s14, s14, s13
 80045ea:	eefd 7ac7 	vcvt.s32.f32	s15, s14
 80045ee:	ee17 3a90 	vmov	r3, s15
 * @return The absolute (non-negative) value of d.
 */
template <typename T>
T abs(T d)
{
    return (d < 0) ? -d : d;
 80045f2:	2b00      	cmp	r3, #0
 80045f4:	bfb8      	it	lt
 80045f6:	425b      	neglt	r3, r3
        labelInterval = abs(interval);
 80045f8:	f8c4 3490 	str.w	r3, [r4, #1168]	; 0x490
        const float fs = f * (float)scale;
 80045fc:	f8d4 3400 	ldr.w	r3, [r4, #1024]	; 0x400
 8004600:	ee07 3a90 	vmov	s15, r3
 8004604:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8004608:	ee27 7a26 	vmul.f32	s14, s14, s13
        if (fs >= 0)
 800460c:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8004610:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004614:	db3c      	blt.n	8004690 <_ZN15ScreenGraphView11setupScreenEv+0xd0>
            return (int)(fs + 0.5f);
 8004616:	ee37 7a26 	vadd.f32	s14, s14, s13
 800461a:	eefd 7ac7 	vcvt.s32.f32	s15, s14
 800461e:	ee17 3a90 	vmov	r3, s15
        const float fs = f * (float)scale;
 8004622:	edd4 7ae0 	vldr	s15, [r4, #896]	; 0x380
 8004626:	ed9f 7a2e 	vldr	s14, [pc, #184]	; 80046e0 <_ZN15ScreenGraphView11setupScreenEv+0x120>
 800462a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800462e:	2b00      	cmp	r3, #0
 8004630:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004634:	bfb8      	it	lt
 8004636:	425b      	neglt	r3, r3
        if (fs >= 0)
 8004638:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800463c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
        gridInterval = abs(interval);
 8004640:	f8c4 3404 	str.w	r3, [r4, #1028]	; 0x404
 8004644:	db38      	blt.n	80046b8 <_ZN15ScreenGraphView11setupScreenEv+0xf8>
            return (int)(fs + 0.5f);
 8004646:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800464a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800464e:	ee17 3a90 	vmov	r3, s15
 8004652:	2b00      	cmp	r3, #0
 8004654:	bfb8      	it	lt
 8004656:	425b      	neglt	r3, r3
 8004658:	f8c4 3384 	str.w	r3, [r4, #900]	; 0x384
     dynamicGraph1.invalidate();
 800465c:	f104 00cc 	add.w	r0, r4, #204	; 0xcc
}
 8004660:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
     dynamicGraph1.invalidate();
 8004664:	f00c bb83 	b.w	8010d6e <_ZNK8touchgfx8Drawable10invalidateEv>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8004668:	eefd 7ac7 	vcvt.s32.f32	s15, s14
 800466c:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 8004670:	ee17 3a90 	vmov	r3, s15
 8004674:	ee37 7a46 	vsub.f32	s14, s14, s12
 8004678:	eeb7 6a08 	vmov.f32	s12, #120	; 0x3fc00000  1.5
 800467c:	ee37 7a06 	vadd.f32	s14, s14, s12
 8004680:	3b01      	subs	r3, #1
 8004682:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 8004686:	ee17 2a10 	vmov	r2, s14
 800468a:	441a      	add	r2, r3
 800468c:	4613      	mov	r3, r2
 800468e:	e7b0      	b.n	80045f2 <_ZN15ScreenGraphView11setupScreenEv+0x32>
 8004690:	eefd 7ac7 	vcvt.s32.f32	s15, s14
 8004694:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 8004698:	ee17 3a90 	vmov	r3, s15
 800469c:	ee37 7a46 	vsub.f32	s14, s14, s12
 80046a0:	eeb7 6a08 	vmov.f32	s12, #120	; 0x3fc00000  1.5
 80046a4:	ee37 7a06 	vadd.f32	s14, s14, s12
 80046a8:	3b01      	subs	r3, #1
 80046aa:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 80046ae:	ee17 2a10 	vmov	r2, s14
 80046b2:	441a      	add	r2, r3
 80046b4:	4613      	mov	r3, r2
 80046b6:	e7b4      	b.n	8004622 <_ZN15ScreenGraphView11setupScreenEv+0x62>
 80046b8:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80046bc:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80046c0:	ee17 3a10 	vmov	r3, s14
 80046c4:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80046c8:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80046cc:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80046d0:	3b01      	subs	r3, #1
 80046d2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80046d6:	ee17 2a90 	vmov	r2, s15
 80046da:	441a      	add	r2, r3
 80046dc:	4613      	mov	r3, r2
 80046de:	e7b8      	b.n	8004652 <_ZN15ScreenGraphView11setupScreenEv+0x92>
 80046e0:	3dcccccd 	.word	0x3dcccccd

080046e4 <_ZN15ScreenGraphViewC1Ev>:
ScreenGraphView::ScreenGraphView()
 80046e4:	b510      	push	{r4, lr}
 80046e6:	4604      	mov	r4, r0
 80046e8:	f7ff faf8 	bl	8003cdc <_ZN19ScreenGraphViewBaseC1Ev>
 80046ec:	4b01      	ldr	r3, [pc, #4]	; (80046f4 <_ZN15ScreenGraphViewC1Ev+0x10>)
 80046ee:	6023      	str	r3, [r4, #0]
}
 80046f0:	4620      	mov	r0, r4
 80046f2:	bd10      	pop	{r4, pc}
 80046f4:	08022140 	.word	0x08022140

080046f8 <ili9341_GetLcdPixelWidth>:
  */
uint16_t ili9341_GetLcdPixelWidth(void)
{
  /* Return LCD PIXEL WIDTH */
  return ILI9341_LCD_PIXEL_WIDTH;
}
 80046f8:	20f0      	movs	r0, #240	; 0xf0
 80046fa:	4770      	bx	lr

080046fc <ili9341_GetLcdPixelHeight>:
  */
uint16_t ili9341_GetLcdPixelHeight(void)
{
  /* Return LCD PIXEL HEIGHT */
  return ILI9341_LCD_PIXEL_HEIGHT;
}
 80046fc:	f44f 70a0 	mov.w	r0, #320	; 0x140
 8004700:	4770      	bx	lr

08004702 <ili9341_DisplayOn>:
  LCD_IO_WriteReg(LCD_Reg);
 8004702:	2029      	movs	r0, #41	; 0x29
 8004704:	f7fd b8c0 	b.w	8001888 <LCD_IO_WriteReg>

08004708 <ili9341_DisplayOff>:
 8004708:	2028      	movs	r0, #40	; 0x28
 800470a:	f7fd b8bd 	b.w	8001888 <LCD_IO_WriteReg>

0800470e <ili9341_Init>:
{
 800470e:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8004710:	f7fd f88e 	bl	8001830 <LCD_IO_Init>
  LCD_IO_WriteReg(LCD_Reg);
 8004714:	20ca      	movs	r0, #202	; 0xca
 8004716:	f7fd f8b7 	bl	8001888 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800471a:	20c3      	movs	r0, #195	; 0xc3
 800471c:	f7fd f898 	bl	8001850 <LCD_IO_WriteData>
 8004720:	2008      	movs	r0, #8
 8004722:	f7fd f895 	bl	8001850 <LCD_IO_WriteData>
 8004726:	2050      	movs	r0, #80	; 0x50
 8004728:	f7fd f892 	bl	8001850 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800472c:	20cf      	movs	r0, #207	; 0xcf
 800472e:	f7fd f8ab 	bl	8001888 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004732:	2000      	movs	r0, #0
 8004734:	f7fd f88c 	bl	8001850 <LCD_IO_WriteData>
 8004738:	20c1      	movs	r0, #193	; 0xc1
 800473a:	f7fd f889 	bl	8001850 <LCD_IO_WriteData>
 800473e:	2030      	movs	r0, #48	; 0x30
 8004740:	f7fd f886 	bl	8001850 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004744:	20ed      	movs	r0, #237	; 0xed
 8004746:	f7fd f89f 	bl	8001888 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800474a:	2064      	movs	r0, #100	; 0x64
 800474c:	f7fd f880 	bl	8001850 <LCD_IO_WriteData>
 8004750:	2003      	movs	r0, #3
 8004752:	f7fd f87d 	bl	8001850 <LCD_IO_WriteData>
 8004756:	2012      	movs	r0, #18
 8004758:	f7fd f87a 	bl	8001850 <LCD_IO_WriteData>
 800475c:	2081      	movs	r0, #129	; 0x81
 800475e:	f7fd f877 	bl	8001850 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004762:	20e8      	movs	r0, #232	; 0xe8
 8004764:	f7fd f890 	bl	8001888 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004768:	2085      	movs	r0, #133	; 0x85
 800476a:	f7fd f871 	bl	8001850 <LCD_IO_WriteData>
 800476e:	2000      	movs	r0, #0
 8004770:	f7fd f86e 	bl	8001850 <LCD_IO_WriteData>
 8004774:	2078      	movs	r0, #120	; 0x78
 8004776:	f7fd f86b 	bl	8001850 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800477a:	20cb      	movs	r0, #203	; 0xcb
 800477c:	f7fd f884 	bl	8001888 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004780:	2039      	movs	r0, #57	; 0x39
 8004782:	f7fd f865 	bl	8001850 <LCD_IO_WriteData>
 8004786:	202c      	movs	r0, #44	; 0x2c
 8004788:	f7fd f862 	bl	8001850 <LCD_IO_WriteData>
 800478c:	2000      	movs	r0, #0
 800478e:	f7fd f85f 	bl	8001850 <LCD_IO_WriteData>
 8004792:	2034      	movs	r0, #52	; 0x34
 8004794:	f7fd f85c 	bl	8001850 <LCD_IO_WriteData>
 8004798:	2002      	movs	r0, #2
 800479a:	f7fd f859 	bl	8001850 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800479e:	20f7      	movs	r0, #247	; 0xf7
 80047a0:	f7fd f872 	bl	8001888 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80047a4:	2020      	movs	r0, #32
 80047a6:	f7fd f853 	bl	8001850 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80047aa:	20ea      	movs	r0, #234	; 0xea
 80047ac:	f7fd f86c 	bl	8001888 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80047b0:	2000      	movs	r0, #0
 80047b2:	f7fd f84d 	bl	8001850 <LCD_IO_WriteData>
 80047b6:	2000      	movs	r0, #0
 80047b8:	f7fd f84a 	bl	8001850 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80047bc:	20b1      	movs	r0, #177	; 0xb1
 80047be:	f7fd f863 	bl	8001888 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80047c2:	2000      	movs	r0, #0
 80047c4:	f7fd f844 	bl	8001850 <LCD_IO_WriteData>
 80047c8:	201b      	movs	r0, #27
 80047ca:	f7fd f841 	bl	8001850 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80047ce:	20b6      	movs	r0, #182	; 0xb6
 80047d0:	f7fd f85a 	bl	8001888 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80047d4:	200a      	movs	r0, #10
 80047d6:	f7fd f83b 	bl	8001850 <LCD_IO_WriteData>
 80047da:	20a2      	movs	r0, #162	; 0xa2
 80047dc:	f7fd f838 	bl	8001850 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80047e0:	20c0      	movs	r0, #192	; 0xc0
 80047e2:	f7fd f851 	bl	8001888 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80047e6:	2010      	movs	r0, #16
 80047e8:	f7fd f832 	bl	8001850 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80047ec:	20c1      	movs	r0, #193	; 0xc1
 80047ee:	f7fd f84b 	bl	8001888 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80047f2:	2010      	movs	r0, #16
 80047f4:	f7fd f82c 	bl	8001850 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80047f8:	20c5      	movs	r0, #197	; 0xc5
 80047fa:	f7fd f845 	bl	8001888 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80047fe:	2045      	movs	r0, #69	; 0x45
 8004800:	f7fd f826 	bl	8001850 <LCD_IO_WriteData>
 8004804:	2015      	movs	r0, #21
 8004806:	f7fd f823 	bl	8001850 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800480a:	20c7      	movs	r0, #199	; 0xc7
 800480c:	f7fd f83c 	bl	8001888 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004810:	2090      	movs	r0, #144	; 0x90
 8004812:	f7fd f81d 	bl	8001850 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004816:	2036      	movs	r0, #54	; 0x36
 8004818:	f7fd f836 	bl	8001888 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800481c:	20c8      	movs	r0, #200	; 0xc8
 800481e:	f7fd f817 	bl	8001850 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004822:	20f2      	movs	r0, #242	; 0xf2
 8004824:	f7fd f830 	bl	8001888 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004828:	2000      	movs	r0, #0
 800482a:	f7fd f811 	bl	8001850 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800482e:	20b0      	movs	r0, #176	; 0xb0
 8004830:	f7fd f82a 	bl	8001888 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004834:	20c2      	movs	r0, #194	; 0xc2
 8004836:	f7fd f80b 	bl	8001850 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800483a:	20b6      	movs	r0, #182	; 0xb6
 800483c:	f7fd f824 	bl	8001888 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8004840:	200a      	movs	r0, #10
 8004842:	f7fd f805 	bl	8001850 <LCD_IO_WriteData>
 8004846:	20a7      	movs	r0, #167	; 0xa7
 8004848:	f7fd f802 	bl	8001850 <LCD_IO_WriteData>
 800484c:	2027      	movs	r0, #39	; 0x27
 800484e:	f7fc ffff 	bl	8001850 <LCD_IO_WriteData>
 8004852:	2004      	movs	r0, #4
 8004854:	f7fc fffc 	bl	8001850 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004858:	202a      	movs	r0, #42	; 0x2a
 800485a:	f7fd f815 	bl	8001888 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800485e:	2000      	movs	r0, #0
 8004860:	f7fc fff6 	bl	8001850 <LCD_IO_WriteData>
 8004864:	2000      	movs	r0, #0
 8004866:	f7fc fff3 	bl	8001850 <LCD_IO_WriteData>
 800486a:	2000      	movs	r0, #0
 800486c:	f7fc fff0 	bl	8001850 <LCD_IO_WriteData>
 8004870:	20ef      	movs	r0, #239	; 0xef
 8004872:	f7fc ffed 	bl	8001850 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004876:	202b      	movs	r0, #43	; 0x2b
 8004878:	f7fd f806 	bl	8001888 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800487c:	2000      	movs	r0, #0
 800487e:	f7fc ffe7 	bl	8001850 <LCD_IO_WriteData>
 8004882:	2000      	movs	r0, #0
 8004884:	f7fc ffe4 	bl	8001850 <LCD_IO_WriteData>
 8004888:	2001      	movs	r0, #1
 800488a:	f7fc ffe1 	bl	8001850 <LCD_IO_WriteData>
 800488e:	203f      	movs	r0, #63	; 0x3f
 8004890:	f7fc ffde 	bl	8001850 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004894:	20f6      	movs	r0, #246	; 0xf6
 8004896:	f7fc fff7 	bl	8001888 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800489a:	2001      	movs	r0, #1
 800489c:	f7fc ffd8 	bl	8001850 <LCD_IO_WriteData>
 80048a0:	2000      	movs	r0, #0
 80048a2:	f7fc ffd5 	bl	8001850 <LCD_IO_WriteData>
 80048a6:	2006      	movs	r0, #6
 80048a8:	f7fc ffd2 	bl	8001850 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80048ac:	202c      	movs	r0, #44	; 0x2c
 80048ae:	f7fc ffeb 	bl	8001888 <LCD_IO_WriteReg>
  LCD_Delay(200);
 80048b2:	20c8      	movs	r0, #200	; 0xc8
 80048b4:	f7fd f836 	bl	8001924 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 80048b8:	2026      	movs	r0, #38	; 0x26
 80048ba:	f7fc ffe5 	bl	8001888 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80048be:	2001      	movs	r0, #1
 80048c0:	f7fc ffc6 	bl	8001850 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80048c4:	20e0      	movs	r0, #224	; 0xe0
 80048c6:	f7fc ffdf 	bl	8001888 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80048ca:	200f      	movs	r0, #15
 80048cc:	f7fc ffc0 	bl	8001850 <LCD_IO_WriteData>
 80048d0:	2029      	movs	r0, #41	; 0x29
 80048d2:	f7fc ffbd 	bl	8001850 <LCD_IO_WriteData>
 80048d6:	2024      	movs	r0, #36	; 0x24
 80048d8:	f7fc ffba 	bl	8001850 <LCD_IO_WriteData>
 80048dc:	200c      	movs	r0, #12
 80048de:	f7fc ffb7 	bl	8001850 <LCD_IO_WriteData>
 80048e2:	200e      	movs	r0, #14
 80048e4:	f7fc ffb4 	bl	8001850 <LCD_IO_WriteData>
 80048e8:	2009      	movs	r0, #9
 80048ea:	f7fc ffb1 	bl	8001850 <LCD_IO_WriteData>
 80048ee:	204e      	movs	r0, #78	; 0x4e
 80048f0:	f7fc ffae 	bl	8001850 <LCD_IO_WriteData>
 80048f4:	2078      	movs	r0, #120	; 0x78
 80048f6:	f7fc ffab 	bl	8001850 <LCD_IO_WriteData>
 80048fa:	203c      	movs	r0, #60	; 0x3c
 80048fc:	f7fc ffa8 	bl	8001850 <LCD_IO_WriteData>
 8004900:	2009      	movs	r0, #9
 8004902:	f7fc ffa5 	bl	8001850 <LCD_IO_WriteData>
 8004906:	2013      	movs	r0, #19
 8004908:	f7fc ffa2 	bl	8001850 <LCD_IO_WriteData>
 800490c:	2005      	movs	r0, #5
 800490e:	f7fc ff9f 	bl	8001850 <LCD_IO_WriteData>
 8004912:	2017      	movs	r0, #23
 8004914:	f7fc ff9c 	bl	8001850 <LCD_IO_WriteData>
 8004918:	2011      	movs	r0, #17
 800491a:	f7fc ff99 	bl	8001850 <LCD_IO_WriteData>
 800491e:	2000      	movs	r0, #0
 8004920:	f7fc ff96 	bl	8001850 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004924:	20e1      	movs	r0, #225	; 0xe1
 8004926:	f7fc ffaf 	bl	8001888 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800492a:	2000      	movs	r0, #0
 800492c:	f7fc ff90 	bl	8001850 <LCD_IO_WriteData>
 8004930:	2016      	movs	r0, #22
 8004932:	f7fc ff8d 	bl	8001850 <LCD_IO_WriteData>
 8004936:	201b      	movs	r0, #27
 8004938:	f7fc ff8a 	bl	8001850 <LCD_IO_WriteData>
 800493c:	2004      	movs	r0, #4
 800493e:	f7fc ff87 	bl	8001850 <LCD_IO_WriteData>
 8004942:	2011      	movs	r0, #17
 8004944:	f7fc ff84 	bl	8001850 <LCD_IO_WriteData>
 8004948:	2007      	movs	r0, #7
 800494a:	f7fc ff81 	bl	8001850 <LCD_IO_WriteData>
 800494e:	2031      	movs	r0, #49	; 0x31
 8004950:	f7fc ff7e 	bl	8001850 <LCD_IO_WriteData>
 8004954:	2033      	movs	r0, #51	; 0x33
 8004956:	f7fc ff7b 	bl	8001850 <LCD_IO_WriteData>
 800495a:	2042      	movs	r0, #66	; 0x42
 800495c:	f7fc ff78 	bl	8001850 <LCD_IO_WriteData>
 8004960:	2005      	movs	r0, #5
 8004962:	f7fc ff75 	bl	8001850 <LCD_IO_WriteData>
 8004966:	200c      	movs	r0, #12
 8004968:	f7fc ff72 	bl	8001850 <LCD_IO_WriteData>
 800496c:	200a      	movs	r0, #10
 800496e:	f7fc ff6f 	bl	8001850 <LCD_IO_WriteData>
 8004972:	2028      	movs	r0, #40	; 0x28
 8004974:	f7fc ff6c 	bl	8001850 <LCD_IO_WriteData>
 8004978:	202f      	movs	r0, #47	; 0x2f
 800497a:	f7fc ff69 	bl	8001850 <LCD_IO_WriteData>
 800497e:	200f      	movs	r0, #15
 8004980:	f7fc ff66 	bl	8001850 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8004984:	2011      	movs	r0, #17
 8004986:	f7fc ff7f 	bl	8001888 <LCD_IO_WriteReg>
  LCD_Delay(200);
 800498a:	20c8      	movs	r0, #200	; 0xc8
 800498c:	f7fc ffca 	bl	8001924 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8004990:	2029      	movs	r0, #41	; 0x29
 8004992:	f7fc ff79 	bl	8001888 <LCD_IO_WriteReg>
}
 8004996:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LCD_IO_WriteReg(LCD_Reg);
 800499a:	202c      	movs	r0, #44	; 0x2c
 800499c:	f7fc bf74 	b.w	8001888 <LCD_IO_WriteReg>

080049a0 <ili9341_ReadID>:
{
 80049a0:	b508      	push	{r3, lr}
  LCD_IO_Init();
 80049a2:	f7fc ff45 	bl	8001830 <LCD_IO_Init>
  return (LCD_IO_ReadData(RegValue, ReadSize));
 80049a6:	2103      	movs	r1, #3
 80049a8:	20d3      	movs	r0, #211	; 0xd3
 80049aa:	f7fc ff89 	bl	80018c0 <LCD_IO_ReadData>
}
 80049ae:	b280      	uxth	r0, r0
 80049b0:	bd08      	pop	{r3, pc}

080049b2 <stmpe811_Reset>:
  * @brief  Reset the stmpe811 by Software.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval None
  */
void stmpe811_Reset(uint16_t DeviceAddr)
{
 80049b2:	b510      	push	{r4, lr}
  /* Power Down the stmpe811 */  
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 80049b4:	b2c4      	uxtb	r4, r0
 80049b6:	2202      	movs	r2, #2
 80049b8:	2103      	movs	r1, #3
 80049ba:	4620      	mov	r0, r4
 80049bc:	f7fc feee 	bl	800179c <IOE_Write>

  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(10); 
 80049c0:	200a      	movs	r0, #10
 80049c2:	f7fc ff33 	bl	800182c <IOE_Delay>
  
  /* Power On the Codec after the power off => all registers are reinitialized */
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 80049c6:	4620      	mov	r0, r4
 80049c8:	2200      	movs	r2, #0
 80049ca:	2103      	movs	r1, #3
 80049cc:	f7fc fee6 	bl	800179c <IOE_Write>
  
  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(2); 
}
 80049d0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 80049d4:	2002      	movs	r0, #2
 80049d6:	f7fc bf29 	b.w	800182c <IOE_Delay>

080049da <stmpe811_ReadID>:
  * @brief  Read the stmpe811 IO Expander device ID.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval The Device ID (two bytes).
  */
uint16_t stmpe811_ReadID(uint16_t DeviceAddr)
{
 80049da:	b538      	push	{r3, r4, r5, lr}
 80049dc:	4604      	mov	r4, r0
  /* Initialize IO BUS layer */
  IOE_Init(); 
  
  /* Return the device ID value */
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 80049de:	b2e4      	uxtb	r4, r4
  IOE_Init(); 
 80049e0:	f7fc feda 	bl	8001798 <IOE_Init>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 80049e4:	2100      	movs	r1, #0
 80049e6:	4620      	mov	r0, r4
 80049e8:	f7fc fef0 	bl	80017cc <IOE_Read>
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 80049ec:	2101      	movs	r1, #1
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 80049ee:	4605      	mov	r5, r0
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 80049f0:	4620      	mov	r0, r4
 80049f2:	f7fc feeb 	bl	80017cc <IOE_Read>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 80049f6:	ea40 2005 	orr.w	r0, r0, r5, lsl #8
}
 80049fa:	b280      	uxth	r0, r0
 80049fc:	bd38      	pop	{r3, r4, r5, pc}

080049fe <stmpe811_TS_DetectTouch>:
  * @brief  Return if there is touch detected or not.
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Touch detected state.
  */
uint8_t stmpe811_TS_DetectTouch(uint16_t DeviceAddr)
{
 80049fe:	b510      	push	{r4, lr}
  uint8_t state;
  uint8_t ret = 0;
  
  state = ((IOE_Read(DeviceAddr, STMPE811_REG_TSC_CTRL) & (uint8_t)STMPE811_TS_CTRL_STATUS) == (uint8_t)0x80);
 8004a00:	b2c4      	uxtb	r4, r0
 8004a02:	2140      	movs	r1, #64	; 0x40
 8004a04:	4620      	mov	r0, r4
 8004a06:	f7fc fee1 	bl	80017cc <IOE_Read>
  
  if(state > 0)
 8004a0a:	0603      	lsls	r3, r0, #24
 8004a0c:	d507      	bpl.n	8004a1e <stmpe811_TS_DetectTouch+0x20>
  {
    if(IOE_Read(DeviceAddr, STMPE811_REG_FIFO_SIZE) > 0)
 8004a0e:	214c      	movs	r1, #76	; 0x4c
 8004a10:	4620      	mov	r0, r4
 8004a12:	f7fc fedb 	bl	80017cc <IOE_Read>
    {
      ret = 1;
 8004a16:	3800      	subs	r0, #0
 8004a18:	bf18      	it	ne
 8004a1a:	2001      	movne	r0, #1
    /* Enable the FIFO again */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
  }
  
  return ret;
}
 8004a1c:	bd10      	pop	{r4, pc}
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8004a1e:	2201      	movs	r2, #1
 8004a20:	214b      	movs	r1, #75	; 0x4b
 8004a22:	4620      	mov	r0, r4
 8004a24:	f7fc feba 	bl	800179c <IOE_Write>
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8004a28:	4620      	mov	r0, r4
 8004a2a:	2200      	movs	r2, #0
 8004a2c:	214b      	movs	r1, #75	; 0x4b
 8004a2e:	f7fc feb5 	bl	800179c <IOE_Write>
  uint8_t ret = 0;
 8004a32:	2000      	movs	r0, #0
 8004a34:	e7f2      	b.n	8004a1c <stmpe811_TS_DetectTouch+0x1e>

08004a36 <stmpe811_TS_GetXY>:
  * @param  X: Pointer to X position value
  * @param  Y: Pointer to Y position value   
  * @retval None.
  */
void stmpe811_TS_GetXY(uint16_t DeviceAddr, uint16_t *X, uint16_t *Y)
{
 8004a36:	b573      	push	{r0, r1, r4, r5, r6, lr}
  uint8_t  dataXYZ[4];
  uint32_t uldataXYZ;
  
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8004a38:	2304      	movs	r3, #4
 8004a3a:	b2c4      	uxtb	r4, r0
{
 8004a3c:	460e      	mov	r6, r1
 8004a3e:	4615      	mov	r5, r2
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8004a40:	21d7      	movs	r1, #215	; 0xd7
 8004a42:	eb0d 0203 	add.w	r2, sp, r3
 8004a46:	4620      	mov	r0, r4
 8004a48:	f7fc feda 	bl	8001800 <IOE_ReadMultiple>
  
  /* Calculate positions values */
  uldataXYZ = (dataXYZ[0] << 24)|(dataXYZ[1] << 16)|(dataXYZ[2] << 8)|(dataXYZ[3] << 0);     
 8004a4c:	9b01      	ldr	r3, [sp, #4]
 8004a4e:	ba1b      	rev	r3, r3
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8004a50:	0d1a      	lsrs	r2, r3, #20
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8004a52:	f3c3 230b 	ubfx	r3, r3, #8, #12
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8004a56:	8032      	strh	r2, [r6, #0]
  
  /* Reset FIFO */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8004a58:	4620      	mov	r0, r4
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8004a5a:	802b      	strh	r3, [r5, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8004a5c:	2201      	movs	r2, #1
 8004a5e:	214b      	movs	r1, #75	; 0x4b
 8004a60:	f7fc fe9c 	bl	800179c <IOE_Write>
  /* Enable the FIFO again */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8004a64:	2200      	movs	r2, #0
 8004a66:	214b      	movs	r1, #75	; 0x4b
 8004a68:	4620      	mov	r0, r4
 8004a6a:	f7fc fe97 	bl	800179c <IOE_Write>
}
 8004a6e:	b002      	add	sp, #8
 8004a70:	bd70      	pop	{r4, r5, r6, pc}
	...

08004a74 <stmpe811_Init>:
{
 8004a74:	b510      	push	{r4, lr}
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
  {
    if(stmpe811[idx] == DeviceAddr)
 8004a76:	4b0a      	ldr	r3, [pc, #40]	; (8004aa0 <stmpe811_Init+0x2c>)
 8004a78:	781a      	ldrb	r2, [r3, #0]
 8004a7a:	4290      	cmp	r0, r2
{
 8004a7c:	4604      	mov	r4, r0
    if(stmpe811[idx] == DeviceAddr)
 8004a7e:	d00d      	beq.n	8004a9c <stmpe811_Init+0x28>
 8004a80:	7859      	ldrb	r1, [r3, #1]
 8004a82:	4288      	cmp	r0, r1
 8004a84:	d00a      	beq.n	8004a9c <stmpe811_Init+0x28>
 8004a86:	b10a      	cbz	r2, 8004a8c <stmpe811_Init+0x18>
 8004a88:	b941      	cbnz	r1, 8004a9c <stmpe811_Init+0x28>
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
 8004a8a:	2201      	movs	r2, #1
      stmpe811[empty] = DeviceAddr;
 8004a8c:	549c      	strb	r4, [r3, r2]
      IOE_Init(); 
 8004a8e:	f7fc fe83 	bl	8001798 <IOE_Init>
      stmpe811_Reset(DeviceAddr);
 8004a92:	4620      	mov	r0, r4
}
 8004a94:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      stmpe811_Reset(DeviceAddr);
 8004a98:	f7ff bf8b 	b.w	80049b2 <stmpe811_Reset>
}
 8004a9c:	bd10      	pop	{r4, pc}
 8004a9e:	bf00      	nop
 8004aa0:	20006638 	.word	0x20006638

08004aa4 <stmpe811_EnableGlobalIT>:
{
 8004aa4:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8004aa6:	b2c4      	uxtb	r4, r0
 8004aa8:	2109      	movs	r1, #9
 8004aaa:	4620      	mov	r0, r4
 8004aac:	f7fc fe8e 	bl	80017cc <IOE_Read>
  tmp |= (uint8_t)STMPE811_GIT_EN;
 8004ab0:	f040 0001 	orr.w	r0, r0, #1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8004ab4:	b2c2      	uxtb	r2, r0
 8004ab6:	2109      	movs	r1, #9
 8004ab8:	4620      	mov	r0, r4
}
 8004aba:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8004abe:	f7fc be6d 	b.w	800179c <IOE_Write>

08004ac2 <stmpe811_DisableGlobalIT>:
{
 8004ac2:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8004ac4:	b2c4      	uxtb	r4, r0
 8004ac6:	2109      	movs	r1, #9
 8004ac8:	4620      	mov	r0, r4
 8004aca:	f7fc fe7f 	bl	80017cc <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 8004ace:	2109      	movs	r1, #9
 8004ad0:	f000 02fe 	and.w	r2, r0, #254	; 0xfe
 8004ad4:	4620      	mov	r0, r4
}
 8004ad6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 8004ada:	f7fc be5f 	b.w	800179c <IOE_Write>

08004ade <stmpe811_EnableITSource>:
{
 8004ade:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8004ae0:	b2c4      	uxtb	r4, r0
{
 8004ae2:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8004ae4:	4620      	mov	r0, r4
 8004ae6:	210a      	movs	r1, #10
 8004ae8:	f7fc fe70 	bl	80017cc <IOE_Read>
  tmp |= Source; 
 8004aec:	4328      	orrs	r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8004aee:	b2c2      	uxtb	r2, r0
 8004af0:	210a      	movs	r1, #10
 8004af2:	4620      	mov	r0, r4
}
 8004af4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8004af8:	f7fc be50 	b.w	800179c <IOE_Write>

08004afc <stmpe811_TS_EnableIT>:
{
 8004afc:	b507      	push	{r0, r1, r2, lr}
 8004afe:	9001      	str	r0, [sp, #4]
  IOE_ITConfig();
 8004b00:	f7fc fe4b 	bl	800179a <IOE_ITConfig>
  stmpe811_EnableITSource(DeviceAddr, STMPE811_TS_IT); 
 8004b04:	9801      	ldr	r0, [sp, #4]
 8004b06:	211f      	movs	r1, #31
 8004b08:	f7ff ffe9 	bl	8004ade <stmpe811_EnableITSource>
  stmpe811_EnableGlobalIT(DeviceAddr);
 8004b0c:	9801      	ldr	r0, [sp, #4]
}
 8004b0e:	b003      	add	sp, #12
 8004b10:	f85d eb04 	ldr.w	lr, [sp], #4
  stmpe811_EnableGlobalIT(DeviceAddr);
 8004b14:	f7ff bfc6 	b.w	8004aa4 <stmpe811_EnableGlobalIT>

08004b18 <stmpe811_DisableITSource>:
{
 8004b18:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8004b1a:	b2c4      	uxtb	r4, r0
{
 8004b1c:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8004b1e:	4620      	mov	r0, r4
 8004b20:	210a      	movs	r1, #10
 8004b22:	f7fc fe53 	bl	80017cc <IOE_Read>
  tmp &= ~Source; 
 8004b26:	ea20 0005 	bic.w	r0, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8004b2a:	b2c2      	uxtb	r2, r0
 8004b2c:	210a      	movs	r1, #10
 8004b2e:	4620      	mov	r0, r4
}
 8004b30:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8004b34:	f7fc be32 	b.w	800179c <IOE_Write>

08004b38 <stmpe811_TS_DisableIT>:
{
 8004b38:	b510      	push	{r4, lr}
 8004b3a:	4604      	mov	r4, r0
  stmpe811_DisableGlobalIT(DeviceAddr);
 8004b3c:	f7ff ffc1 	bl	8004ac2 <stmpe811_DisableGlobalIT>
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 8004b40:	4620      	mov	r0, r4
 8004b42:	211f      	movs	r1, #31
}
 8004b44:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 8004b48:	f7ff bfe6 	b.w	8004b18 <stmpe811_DisableITSource>

08004b4c <stmpe811_ReadGITStatus>:
{
 8004b4c:	b510      	push	{r4, lr}
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8004b4e:	b2c0      	uxtb	r0, r0
{
 8004b50:	460c      	mov	r4, r1
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8004b52:	210b      	movs	r1, #11
 8004b54:	f7fc fe3a 	bl	80017cc <IOE_Read>
}
 8004b58:	4020      	ands	r0, r4
 8004b5a:	bd10      	pop	{r4, pc}

08004b5c <stmpe811_TS_ITStatus>:
  return(stmpe811_ReadGITStatus(DeviceAddr, STMPE811_TS_IT));
 8004b5c:	211f      	movs	r1, #31
 8004b5e:	f7ff bff5 	b.w	8004b4c <stmpe811_ReadGITStatus>

08004b62 <stmpe811_ClearGlobalIT>:
{
 8004b62:	460a      	mov	r2, r1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, Source);
 8004b64:	b2c0      	uxtb	r0, r0
 8004b66:	210b      	movs	r1, #11
 8004b68:	f7fc be18 	b.w	800179c <IOE_Write>

08004b6c <stmpe811_TS_ClearIT>:
  stmpe811_ClearGlobalIT(DeviceAddr, STMPE811_TS_IT);
 8004b6c:	211f      	movs	r1, #31
 8004b6e:	f7ff bff8 	b.w	8004b62 <stmpe811_ClearGlobalIT>

08004b72 <stmpe811_IO_EnableAF>:
{
 8004b72:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8004b74:	b2c4      	uxtb	r4, r0
{
 8004b76:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8004b78:	4620      	mov	r0, r4
 8004b7a:	2117      	movs	r1, #23
 8004b7c:	f7fc fe26 	bl	80017cc <IOE_Read>
  tmp &= ~(uint8_t)IO_Pin;   
 8004b80:	ea20 0005 	bic.w	r0, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 8004b84:	b2c2      	uxtb	r2, r0
 8004b86:	2117      	movs	r1, #23
 8004b88:	4620      	mov	r0, r4
}
 8004b8a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 8004b8e:	f7fc be05 	b.w	800179c <IOE_Write>

08004b92 <stmpe811_TS_Start>:
{
 8004b92:	b570      	push	{r4, r5, r6, lr}
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8004b94:	b2c4      	uxtb	r4, r0
{
 8004b96:	4606      	mov	r6, r0
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8004b98:	2104      	movs	r1, #4
 8004b9a:	4620      	mov	r0, r4
 8004b9c:	f7fc fe16 	bl	80017cc <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8004ba0:	2104      	movs	r1, #4
 8004ba2:	f000 02fb 	and.w	r2, r0, #251	; 0xfb
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8004ba6:	4605      	mov	r5, r0
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8004ba8:	4620      	mov	r0, r4
 8004baa:	f7fc fdf7 	bl	800179c <IOE_Write>
  stmpe811_IO_EnableAF(DeviceAddr, STMPE811_TOUCH_IO_ALL);
 8004bae:	4630      	mov	r0, r6
 8004bb0:	21f0      	movs	r1, #240	; 0xf0
 8004bb2:	f7ff ffde 	bl	8004b72 <stmpe811_IO_EnableAF>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8004bb6:	f005 02f8 	and.w	r2, r5, #248	; 0xf8
 8004bba:	4620      	mov	r0, r4
 8004bbc:	2104      	movs	r1, #4
 8004bbe:	f7fc fded 	bl	800179c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL1, 0x49);
 8004bc2:	2249      	movs	r2, #73	; 0x49
 8004bc4:	2120      	movs	r1, #32
 8004bc6:	4620      	mov	r0, r4
 8004bc8:	f7fc fde8 	bl	800179c <IOE_Write>
  IOE_Delay(2); 
 8004bcc:	2002      	movs	r0, #2
 8004bce:	f7fc fe2d 	bl	800182c <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL2, 0x01);
 8004bd2:	4620      	mov	r0, r4
 8004bd4:	2201      	movs	r2, #1
 8004bd6:	2121      	movs	r1, #33	; 0x21
 8004bd8:	f7fc fde0 	bl	800179c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CFG, 0x9A); 
 8004bdc:	4620      	mov	r0, r4
 8004bde:	229a      	movs	r2, #154	; 0x9a
 8004be0:	2141      	movs	r1, #65	; 0x41
 8004be2:	f7fc fddb 	bl	800179c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_TH, 0x01);
 8004be6:	4620      	mov	r0, r4
 8004be8:	2201      	movs	r2, #1
 8004bea:	214a      	movs	r1, #74	; 0x4a
 8004bec:	f7fc fdd6 	bl	800179c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8004bf0:	4620      	mov	r0, r4
 8004bf2:	2201      	movs	r2, #1
 8004bf4:	214b      	movs	r1, #75	; 0x4b
 8004bf6:	f7fc fdd1 	bl	800179c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8004bfa:	4620      	mov	r0, r4
 8004bfc:	2200      	movs	r2, #0
 8004bfe:	214b      	movs	r1, #75	; 0x4b
 8004c00:	f7fc fdcc 	bl	800179c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_FRACT_XYZ, 0x01);
 8004c04:	4620      	mov	r0, r4
 8004c06:	2201      	movs	r2, #1
 8004c08:	2156      	movs	r1, #86	; 0x56
 8004c0a:	f7fc fdc7 	bl	800179c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_I_DRIVE, 0x01);
 8004c0e:	4620      	mov	r0, r4
 8004c10:	2201      	movs	r2, #1
 8004c12:	2158      	movs	r1, #88	; 0x58
 8004c14:	f7fc fdc2 	bl	800179c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CTRL, 0x01);
 8004c18:	4620      	mov	r0, r4
 8004c1a:	2201      	movs	r2, #1
 8004c1c:	2140      	movs	r1, #64	; 0x40
 8004c1e:	f7fc fdbd 	bl	800179c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, 0xFF);
 8004c22:	4620      	mov	r0, r4
 8004c24:	22ff      	movs	r2, #255	; 0xff
 8004c26:	210b      	movs	r1, #11
 8004c28:	f7fc fdb8 	bl	800179c <IOE_Write>
}
 8004c2c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  IOE_Delay(2); 
 8004c30:	2002      	movs	r0, #2
 8004c32:	f7fc bdfb 	b.w	800182c <IOE_Delay>
	...

08004c38 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8004c38:	4b05      	ldr	r3, [pc, #20]	; (8004c50 <SystemInit+0x18>)
 8004c3a:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
 8004c3e:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 8004c42:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8004c46:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8004c4a:	609a      	str	r2, [r3, #8]
#endif
}
 8004c4c:	4770      	bx	lr
 8004c4e:	bf00      	nop
 8004c50:	e000ed00 	.word	0xe000ed00

08004c54 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8004c54:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8004c56:	4b0b      	ldr	r3, [pc, #44]	; (8004c84 <HAL_Init+0x30>)
 8004c58:	681a      	ldr	r2, [r3, #0]
 8004c5a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8004c5e:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8004c60:	681a      	ldr	r2, [r3, #0]
 8004c62:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8004c66:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8004c68:	681a      	ldr	r2, [r3, #0]
 8004c6a:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8004c6e:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8004c70:	2003      	movs	r0, #3
 8004c72:	f000 fa37 	bl	80050e4 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 8004c76:	2000      	movs	r0, #0
 8004c78:	f7fd f910 	bl	8001e9c <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8004c7c:	f7fc fe6a 	bl	8001954 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 8004c80:	2000      	movs	r0, #0
 8004c82:	bd08      	pop	{r3, pc}
 8004c84:	40023c00 	.word	0x40023c00

08004c88 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 8004c88:	4a03      	ldr	r2, [pc, #12]	; (8004c98 <HAL_IncTick+0x10>)
 8004c8a:	4b04      	ldr	r3, [pc, #16]	; (8004c9c <HAL_IncTick+0x14>)
 8004c8c:	6811      	ldr	r1, [r2, #0]
 8004c8e:	781b      	ldrb	r3, [r3, #0]
 8004c90:	440b      	add	r3, r1
 8004c92:	6013      	str	r3, [r2, #0]
}
 8004c94:	4770      	bx	lr
 8004c96:	bf00      	nop
 8004c98:	2000663c 	.word	0x2000663c
 8004c9c:	20000080 	.word	0x20000080

08004ca0 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8004ca0:	4b01      	ldr	r3, [pc, #4]	; (8004ca8 <HAL_GetTick+0x8>)
 8004ca2:	6818      	ldr	r0, [r3, #0]
}
 8004ca4:	4770      	bx	lr
 8004ca6:	bf00      	nop
 8004ca8:	2000663c 	.word	0x2000663c

08004cac <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8004cac:	b538      	push	{r3, r4, r5, lr}
 8004cae:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8004cb0:	f7ff fff6 	bl	8004ca0 <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8004cb4:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 8004cb6:	bf1c      	itt	ne
 8004cb8:	4b05      	ldrne	r3, [pc, #20]	; (8004cd0 <HAL_Delay+0x24>)
 8004cba:	781b      	ldrbne	r3, [r3, #0]
  uint32_t tickstart = HAL_GetTick();
 8004cbc:	4605      	mov	r5, r0
    wait += (uint32_t)(uwTickFreq);
 8004cbe:	bf18      	it	ne
 8004cc0:	18e4      	addne	r4, r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 8004cc2:	f7ff ffed 	bl	8004ca0 <HAL_GetTick>
 8004cc6:	1b43      	subs	r3, r0, r5
 8004cc8:	42a3      	cmp	r3, r4
 8004cca:	d3fa      	bcc.n	8004cc2 <HAL_Delay+0x16>
  {
  }
}
 8004ccc:	bd38      	pop	{r3, r4, r5, pc}
 8004cce:	bf00      	nop
 8004cd0:	20000080 	.word	0x20000080

08004cd4 <HAL_ADC_Init>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.  
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_Init(ADC_HandleTypeDef* hadc)
{
 8004cd4:	b538      	push	{r3, r4, r5, lr}
  HAL_StatusTypeDef tmp_hal_status = HAL_OK;
  
  /* Check ADC handle */
  if(hadc == NULL)
 8004cd6:	4604      	mov	r4, r0
 8004cd8:	2800      	cmp	r0, #0
 8004cda:	f000 809b 	beq.w	8004e14 <HAL_ADC_Init+0x140>
  if(hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
  {
    assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
  }
  
  if(hadc->State == HAL_ADC_STATE_RESET)
 8004cde:	6c05      	ldr	r5, [r0, #64]	; 0x40
 8004ce0:	b925      	cbnz	r5, 8004cec <HAL_ADC_Init+0x18>

    /* Init the low level hardware */
    hadc->MspInitCallback(hadc);
#else
    /* Init the low level hardware */
    HAL_ADC_MspInit(hadc);
 8004ce2:	f7fc fe57 	bl	8001994 <HAL_ADC_MspInit>
#endif /* USE_HAL_ADC_REGISTER_CALLBACKS */

    /* Initialize ADC error code */
    ADC_CLEAR_ERRORCODE(hadc);
 8004ce6:	6465      	str	r5, [r4, #68]	; 0x44
    
    /* Allocate lock resource and initialize it */
    hadc->Lock = HAL_UNLOCKED;
 8004ce8:	f884 503c 	strb.w	r5, [r4, #60]	; 0x3c
  }
  
  /* Configuration of ADC parameters if previous preliminary actions are      */ 
  /* correctly completed.                                                     */
  if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
 8004cec:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8004cee:	06db      	lsls	r3, r3, #27
 8004cf0:	f100 808e 	bmi.w	8004e10 <HAL_ADC_Init+0x13c>
  {
    /* Set ADC state */
    ADC_STATE_CLR_SET(hadc->State,
 8004cf4:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8004cf6:	f423 5388 	bic.w	r3, r3, #4352	; 0x1100
 8004cfa:	f023 0302 	bic.w	r3, r3, #2
 8004cfe:	f043 0302 	orr.w	r3, r3, #2
 8004d02:	6423      	str	r3, [r4, #64]	; 0x40
  /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
  /* control register)                                                    */
  tmpADC_Common = ADC_COMMON_REGISTER(hadc);
  
  /* Set the ADC clock prescaler */
  tmpADC_Common->CCR &= ~(ADC_CCR_ADCPRE);
 8004d04:	4b44      	ldr	r3, [pc, #272]	; (8004e18 <HAL_ADC_Init+0x144>)
 8004d06:	685a      	ldr	r2, [r3, #4]
 8004d08:	f422 3240 	bic.w	r2, r2, #196608	; 0x30000
 8004d0c:	605a      	str	r2, [r3, #4]
  tmpADC_Common->CCR |=  hadc->Init.ClockPrescaler;
 8004d0e:	685a      	ldr	r2, [r3, #4]
 8004d10:	6861      	ldr	r1, [r4, #4]
 8004d12:	430a      	orrs	r2, r1
 8004d14:	605a      	str	r2, [r3, #4]
  
  /* Set ADC scan mode */
  hadc->Instance->CR1 &= ~(ADC_CR1_SCAN);
 8004d16:	6823      	ldr	r3, [r4, #0]
  hadc->Instance->CR1 |=  ADC_CR1_SCANCONV(hadc->Init.ScanConvMode);
 8004d18:	6921      	ldr	r1, [r4, #16]
  hadc->Instance->CR1 &= ~(ADC_CR1_SCAN);
 8004d1a:	685a      	ldr	r2, [r3, #4]
 8004d1c:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8004d20:	605a      	str	r2, [r3, #4]
  hadc->Instance->CR1 |=  ADC_CR1_SCANCONV(hadc->Init.ScanConvMode);
 8004d22:	685a      	ldr	r2, [r3, #4]
 8004d24:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8004d28:	605a      	str	r2, [r3, #4]
  
  /* Set ADC resolution */
  hadc->Instance->CR1 &= ~(ADC_CR1_RES);
 8004d2a:	685a      	ldr	r2, [r3, #4]
  hadc->Instance->CR1 |=  hadc->Init.Resolution;
 8004d2c:	68a1      	ldr	r1, [r4, #8]
  hadc->Instance->CR1 &= ~(ADC_CR1_RES);
 8004d2e:	f022 7240 	bic.w	r2, r2, #50331648	; 0x3000000
 8004d32:	605a      	str	r2, [r3, #4]
  hadc->Instance->CR1 |=  hadc->Init.Resolution;
 8004d34:	685a      	ldr	r2, [r3, #4]
 8004d36:	430a      	orrs	r2, r1
 8004d38:	605a      	str	r2, [r3, #4]
  
  /* Set ADC data alignment */
  hadc->Instance->CR2 &= ~(ADC_CR2_ALIGN);
 8004d3a:	689a      	ldr	r2, [r3, #8]
  hadc->Instance->CR2 |= hadc->Init.DataAlign;
 8004d3c:	68e1      	ldr	r1, [r4, #12]
  hadc->Instance->CR2 &= ~(ADC_CR2_ALIGN);
 8004d3e:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8004d42:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= hadc->Init.DataAlign;
 8004d44:	689a      	ldr	r2, [r3, #8]
 8004d46:	430a      	orrs	r2, r1
 8004d48:	609a      	str	r2, [r3, #8]
  /* Enable external trigger if trigger selection is different of software  */
  /* start.                                                                 */
  /* Note: This configuration keeps the hardware feature of parameter       */
  /*       ExternalTrigConvEdge "trigger edge none" equivalent to           */
  /*       software start.                                                  */
  if(hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 8004d4a:	4934      	ldr	r1, [pc, #208]	; (8004e1c <HAL_ADC_Init+0x148>)
 8004d4c:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8004d4e:	428a      	cmp	r2, r1
 8004d50:	d052      	beq.n	8004df8 <HAL_ADC_Init+0x124>
  {
    /* Select external trigger to start conversion */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 8004d52:	6899      	ldr	r1, [r3, #8]
 8004d54:	f021 6170 	bic.w	r1, r1, #251658240	; 0xf000000
 8004d58:	6099      	str	r1, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConv;
 8004d5a:	6899      	ldr	r1, [r3, #8]
 8004d5c:	430a      	orrs	r2, r1
 8004d5e:	609a      	str	r2, [r3, #8]
    
    /* Select external trigger polarity */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 8004d60:	689a      	ldr	r2, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConvEdge;
 8004d62:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 8004d64:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 8004d68:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConvEdge;
 8004d6a:	689a      	ldr	r2, [r3, #8]
 8004d6c:	430a      	orrs	r2, r1
  }
  else
  {
    /* Reset the external trigger */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 8004d6e:	609a      	str	r2, [r3, #8]
  }
  
  /* Enable or disable ADC continuous conversion mode */
  hadc->Instance->CR2 &= ~(ADC_CR2_CONT);
 8004d70:	689a      	ldr	r2, [r3, #8]
 8004d72:	f022 0202 	bic.w	r2, r2, #2
 8004d76:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode);
 8004d78:	689a      	ldr	r2, [r3, #8]
 8004d7a:	7e21      	ldrb	r1, [r4, #24]
 8004d7c:	ea42 0241 	orr.w	r2, r2, r1, lsl #1
 8004d80:	609a      	str	r2, [r3, #8]
  
  if(hadc->Init.DiscontinuousConvMode != DISABLE)
 8004d82:	f894 2020 	ldrb.w	r2, [r4, #32]
 8004d86:	2a00      	cmp	r2, #0
 8004d88:	d03e      	beq.n	8004e08 <HAL_ADC_Init+0x134>
  {
    assert_param(IS_ADC_REGULAR_DISC_NUMBER(hadc->Init.NbrOfDiscConversion));
  
    /* Enable the selected ADC regular discontinuous mode */
    hadc->Instance->CR1 |= (uint32_t)ADC_CR1_DISCEN;
 8004d8a:	685a      	ldr	r2, [r3, #4]
    
    /* Set the number of channels to be converted in discontinuous mode */
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCNUM);
    hadc->Instance->CR1 |=  ADC_CR1_DISCONTINUOUS(hadc->Init.NbrOfDiscConversion);
 8004d8c:	6a61      	ldr	r1, [r4, #36]	; 0x24
    hadc->Instance->CR1 |= (uint32_t)ADC_CR1_DISCEN;
 8004d8e:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8004d92:	605a      	str	r2, [r3, #4]
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCNUM);
 8004d94:	685a      	ldr	r2, [r3, #4]
 8004d96:	f422 4260 	bic.w	r2, r2, #57344	; 0xe000
 8004d9a:	605a      	str	r2, [r3, #4]
    hadc->Instance->CR1 |=  ADC_CR1_DISCONTINUOUS(hadc->Init.NbrOfDiscConversion);
 8004d9c:	685a      	ldr	r2, [r3, #4]
 8004d9e:	3901      	subs	r1, #1
 8004da0:	ea42 3241 	orr.w	r2, r2, r1, lsl #13
  }
  else
  {
    /* Disable the selected ADC regular discontinuous mode */
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCEN);
 8004da4:	605a      	str	r2, [r3, #4]
  }
  
  /* Set ADC number of conversion */
  hadc->Instance->SQR1 &= ~(ADC_SQR1_L);
 8004da6:	6ada      	ldr	r2, [r3, #44]	; 0x2c
  hadc->Instance->SQR1 |=  ADC_SQR1(hadc->Init.NbrOfConversion);
 8004da8:	69e1      	ldr	r1, [r4, #28]
  hadc->Instance->SQR1 &= ~(ADC_SQR1_L);
 8004daa:	f422 0270 	bic.w	r2, r2, #15728640	; 0xf00000
 8004dae:	62da      	str	r2, [r3, #44]	; 0x2c
  hadc->Instance->SQR1 |=  ADC_SQR1(hadc->Init.NbrOfConversion);
 8004db0:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8004db2:	3901      	subs	r1, #1
 8004db4:	ea42 5201 	orr.w	r2, r2, r1, lsl #20
 8004db8:	62da      	str	r2, [r3, #44]	; 0x2c
  
  /* Enable or disable ADC DMA continuous request */
  hadc->Instance->CR2 &= ~(ADC_CR2_DDS);
 8004dba:	689a      	ldr	r2, [r3, #8]
 8004dbc:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8004dc0:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_DMAContReq((uint32_t)hadc->Init.DMAContinuousRequests);
 8004dc2:	689a      	ldr	r2, [r3, #8]
 8004dc4:	f894 1030 	ldrb.w	r1, [r4, #48]	; 0x30
 8004dc8:	ea42 2241 	orr.w	r2, r2, r1, lsl #9
 8004dcc:	609a      	str	r2, [r3, #8]
  
  /* Enable or disable ADC end of conversion selection */
  hadc->Instance->CR2 &= ~(ADC_CR2_EOCS);
 8004dce:	689a      	ldr	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 8004dd0:	6961      	ldr	r1, [r4, #20]
  hadc->Instance->CR2 &= ~(ADC_CR2_EOCS);
 8004dd2:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8004dd6:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 8004dd8:	689a      	ldr	r2, [r3, #8]
    ADC_CLEAR_ERRORCODE(hadc);
 8004dda:	2000      	movs	r0, #0
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 8004ddc:	ea42 2281 	orr.w	r2, r2, r1, lsl #10
 8004de0:	609a      	str	r2, [r3, #8]
    ADC_CLEAR_ERRORCODE(hadc);
 8004de2:	6460      	str	r0, [r4, #68]	; 0x44
    ADC_STATE_CLR_SET(hadc->State,
 8004de4:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8004de6:	f023 0303 	bic.w	r3, r3, #3
 8004dea:	f043 0301 	orr.w	r3, r3, #1
 8004dee:	6423      	str	r3, [r4, #64]	; 0x40
  __HAL_UNLOCK(hadc);
 8004df0:	2300      	movs	r3, #0
 8004df2:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
}
 8004df6:	bd38      	pop	{r3, r4, r5, pc}
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 8004df8:	689a      	ldr	r2, [r3, #8]
 8004dfa:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 8004dfe:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 8004e00:	689a      	ldr	r2, [r3, #8]
 8004e02:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 8004e06:	e7b2      	b.n	8004d6e <HAL_ADC_Init+0x9a>
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCEN);
 8004e08:	685a      	ldr	r2, [r3, #4]
 8004e0a:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8004e0e:	e7c9      	b.n	8004da4 <HAL_ADC_Init+0xd0>
    tmp_hal_status = HAL_ERROR;
 8004e10:	2001      	movs	r0, #1
 8004e12:	e7ed      	b.n	8004df0 <HAL_ADC_Init+0x11c>
    return HAL_ERROR;
 8004e14:	2001      	movs	r0, #1
 8004e16:	e7ee      	b.n	8004df6 <HAL_ADC_Init+0x122>
 8004e18:	40012300 	.word	0x40012300
 8004e1c:	0f000001 	.word	0x0f000001

08004e20 <HAL_ADC_Start>:
{
 8004e20:	b082      	sub	sp, #8
  __IO uint32_t counter = 0U;
 8004e22:	2300      	movs	r3, #0
 8004e24:	9301      	str	r3, [sp, #4]
  __HAL_LOCK(hadc);
 8004e26:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 8004e2a:	2b01      	cmp	r3, #1
 8004e2c:	d060      	beq.n	8004ef0 <HAL_ADC_Start+0xd0>
 8004e2e:	2301      	movs	r3, #1
 8004e30:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  if((hadc->Instance->CR2 & ADC_CR2_ADON) != ADC_CR2_ADON)
 8004e34:	6803      	ldr	r3, [r0, #0]
 8004e36:	689a      	ldr	r2, [r3, #8]
 8004e38:	07d2      	lsls	r2, r2, #31
 8004e3a:	d505      	bpl.n	8004e48 <HAL_ADC_Start+0x28>
  if(HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_ADON))
 8004e3c:	689a      	ldr	r2, [r3, #8]
 8004e3e:	07d1      	lsls	r1, r2, #31
 8004e40:	d414      	bmi.n	8004e6c <HAL_ADC_Start+0x4c>
  return HAL_OK;
 8004e42:	2000      	movs	r0, #0
}
 8004e44:	b002      	add	sp, #8
 8004e46:	4770      	bx	lr
    __HAL_ADC_ENABLE(hadc);
 8004e48:	689a      	ldr	r2, [r3, #8]
    counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 8004e4a:	492a      	ldr	r1, [pc, #168]	; (8004ef4 <HAL_ADC_Start+0xd4>)
    __HAL_ADC_ENABLE(hadc);
 8004e4c:	f042 0201 	orr.w	r2, r2, #1
 8004e50:	609a      	str	r2, [r3, #8]
    counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 8004e52:	4a29      	ldr	r2, [pc, #164]	; (8004ef8 <HAL_ADC_Start+0xd8>)
 8004e54:	6812      	ldr	r2, [r2, #0]
 8004e56:	fbb2 f2f1 	udiv	r2, r2, r1
 8004e5a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
      counter--;
 8004e5e:	9201      	str	r2, [sp, #4]
    while(counter != 0U)
 8004e60:	9a01      	ldr	r2, [sp, #4]
 8004e62:	2a00      	cmp	r2, #0
 8004e64:	d0ea      	beq.n	8004e3c <HAL_ADC_Start+0x1c>
      counter--;
 8004e66:	9a01      	ldr	r2, [sp, #4]
 8004e68:	3a01      	subs	r2, #1
 8004e6a:	e7f8      	b.n	8004e5e <HAL_ADC_Start+0x3e>
    ADC_STATE_CLR_SET(hadc->State,
 8004e6c:	6c02      	ldr	r2, [r0, #64]	; 0x40
 8004e6e:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 8004e72:	f022 0201 	bic.w	r2, r2, #1
 8004e76:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8004e7a:	6402      	str	r2, [r0, #64]	; 0x40
    if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
 8004e7c:	685a      	ldr	r2, [r3, #4]
 8004e7e:	0552      	lsls	r2, r2, #21
      ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);  
 8004e80:	bf41      	itttt	mi
 8004e82:	6c02      	ldrmi	r2, [r0, #64]	; 0x40
 8004e84:	f422 5240 	bicmi.w	r2, r2, #12288	; 0x3000
 8004e88:	f442 5280 	orrmi.w	r2, r2, #4096	; 0x1000
 8004e8c:	6402      	strmi	r2, [r0, #64]	; 0x40
    if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 8004e8e:	6c02      	ldr	r2, [r0, #64]	; 0x40
 8004e90:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
      CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));         
 8004e94:	bf1c      	itt	ne
 8004e96:	6c42      	ldrne	r2, [r0, #68]	; 0x44
 8004e98:	f022 0206 	bicne.w	r2, r2, #6
      ADC_CLEAR_ERRORCODE(hadc);
 8004e9c:	6442      	str	r2, [r0, #68]	; 0x44
    __HAL_UNLOCK(hadc);
 8004e9e:	2200      	movs	r2, #0
 8004ea0:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC | ADC_FLAG_OVR);
 8004ea4:	f06f 0222 	mvn.w	r2, #34	; 0x22
 8004ea8:	601a      	str	r2, [r3, #0]
    if(HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_MULTI))
 8004eaa:	4a14      	ldr	r2, [pc, #80]	; (8004efc <HAL_ADC_Start+0xdc>)
 8004eac:	6851      	ldr	r1, [r2, #4]
 8004eae:	f011 0f1f 	tst.w	r1, #31
 8004eb2:	4913      	ldr	r1, [pc, #76]	; (8004f00 <HAL_ADC_Start+0xe0>)
 8004eb4:	d119      	bne.n	8004eea <HAL_ADC_Start+0xca>
      if((hadc->Instance == ADC1) || ((hadc->Instance == ADC2) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_0)) \
 8004eb6:	428b      	cmp	r3, r1
 8004eb8:	d007      	beq.n	8004eca <HAL_ADC_Start+0xaa>
 8004eba:	f501 7180 	add.w	r1, r1, #256	; 0x100
 8004ebe:	428b      	cmp	r3, r1
 8004ec0:	d10c      	bne.n	8004edc <HAL_ADC_Start+0xbc>
 8004ec2:	6852      	ldr	r2, [r2, #4]
 8004ec4:	f012 0f1f 	tst.w	r2, #31
                                  || ((hadc->Instance == ADC3) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_4)))
 8004ec8:	d1bb      	bne.n	8004e42 <HAL_ADC_Start+0x22>
      if((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 8004eca:	6898      	ldr	r0, [r3, #8]
 8004ecc:	f010 5040 	ands.w	r0, r0, #805306368	; 0x30000000
 8004ed0:	d1b7      	bne.n	8004e42 <HAL_ADC_Start+0x22>
          hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 8004ed2:	689a      	ldr	r2, [r3, #8]
 8004ed4:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 8004ed8:	609a      	str	r2, [r3, #8]
 8004eda:	e7b3      	b.n	8004e44 <HAL_ADC_Start+0x24>
                                  || ((hadc->Instance == ADC3) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_4)))
 8004edc:	4909      	ldr	r1, [pc, #36]	; (8004f04 <HAL_ADC_Start+0xe4>)
 8004ede:	428b      	cmp	r3, r1
 8004ee0:	d1af      	bne.n	8004e42 <HAL_ADC_Start+0x22>
 8004ee2:	6852      	ldr	r2, [r2, #4]
 8004ee4:	f012 0f10 	tst.w	r2, #16
 8004ee8:	e7ee      	b.n	8004ec8 <HAL_ADC_Start+0xa8>
      if((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 8004eea:	428b      	cmp	r3, r1
 8004eec:	d1a9      	bne.n	8004e42 <HAL_ADC_Start+0x22>
 8004eee:	e7ec      	b.n	8004eca <HAL_ADC_Start+0xaa>
  __HAL_LOCK(hadc);
 8004ef0:	2002      	movs	r0, #2
 8004ef2:	e7a7      	b.n	8004e44 <HAL_ADC_Start+0x24>
 8004ef4:	000f4240 	.word	0x000f4240
 8004ef8:	2000007c 	.word	0x2000007c
 8004efc:	40012300 	.word	0x40012300
 8004f00:	40012000 	.word	0x40012000
 8004f04:	40012200 	.word	0x40012200

08004f08 <HAL_ADC_PollForConversion>:
  if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_EOCS) &&
 8004f08:	6803      	ldr	r3, [r0, #0]
 8004f0a:	689a      	ldr	r2, [r3, #8]
 8004f0c:	0552      	lsls	r2, r2, #21
{
 8004f0e:	b570      	push	{r4, r5, r6, lr}
 8004f10:	4604      	mov	r4, r0
 8004f12:	460d      	mov	r5, r1
  if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_EOCS) &&
 8004f14:	d50b      	bpl.n	8004f2e <HAL_ADC_PollForConversion+0x26>
      HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_DMA)    )
 8004f16:	689b      	ldr	r3, [r3, #8]
  if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_EOCS) &&
 8004f18:	05de      	lsls	r6, r3, #23
 8004f1a:	d508      	bpl.n	8004f2e <HAL_ADC_PollForConversion+0x26>
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 8004f1c:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8004f1e:	f043 0320 	orr.w	r3, r3, #32
 8004f22:	6403      	str	r3, [r0, #64]	; 0x40
    __HAL_UNLOCK(hadc);
 8004f24:	2300      	movs	r3, #0
 8004f26:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
    return HAL_ERROR;
 8004f2a:	2001      	movs	r0, #1
}
 8004f2c:	bd70      	pop	{r4, r5, r6, pc}
  tickstart = HAL_GetTick();
 8004f2e:	f7ff feb7 	bl	8004ca0 <HAL_GetTick>
 8004f32:	4606      	mov	r6, r0
  while(!(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOC)))
 8004f34:	6823      	ldr	r3, [r4, #0]
 8004f36:	681a      	ldr	r2, [r3, #0]
 8004f38:	0791      	lsls	r1, r2, #30
 8004f3a:	d50c      	bpl.n	8004f56 <HAL_ADC_PollForConversion+0x4e>
  __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_STRT | ADC_FLAG_EOC);
 8004f3c:	f06f 0212 	mvn.w	r2, #18
 8004f40:	601a      	str	r2, [r3, #0]
  SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
 8004f42:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8004f44:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8004f48:	6422      	str	r2, [r4, #64]	; 0x40
  if(ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 8004f4a:	689a      	ldr	r2, [r3, #8]
 8004f4c:	f012 5f40 	tst.w	r2, #805306368	; 0x30000000
 8004f50:	d013      	beq.n	8004f7a <HAL_ADC_PollForConversion+0x72>
  return HAL_OK;
 8004f52:	2000      	movs	r0, #0
 8004f54:	e7ea      	b.n	8004f2c <HAL_ADC_PollForConversion+0x24>
    if(Timeout != HAL_MAX_DELAY)
 8004f56:	1c68      	adds	r0, r5, #1
 8004f58:	d0ed      	beq.n	8004f36 <HAL_ADC_PollForConversion+0x2e>
      if((Timeout == 0U) || ((HAL_GetTick() - tickstart ) > Timeout))
 8004f5a:	b945      	cbnz	r5, 8004f6e <HAL_ADC_PollForConversion+0x66>
        SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 8004f5c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8004f5e:	f043 0304 	orr.w	r3, r3, #4
 8004f62:	6423      	str	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hadc);
 8004f64:	2300      	movs	r3, #0
 8004f66:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        return HAL_TIMEOUT;
 8004f6a:	2003      	movs	r0, #3
 8004f6c:	e7de      	b.n	8004f2c <HAL_ADC_PollForConversion+0x24>
      if((Timeout == 0U) || ((HAL_GetTick() - tickstart ) > Timeout))
 8004f6e:	f7ff fe97 	bl	8004ca0 <HAL_GetTick>
 8004f72:	1b80      	subs	r0, r0, r6
 8004f74:	42a8      	cmp	r0, r5
 8004f76:	d9dd      	bls.n	8004f34 <HAL_ADC_PollForConversion+0x2c>
 8004f78:	e7f0      	b.n	8004f5c <HAL_ADC_PollForConversion+0x54>
     (hadc->Init.ContinuousConvMode == DISABLE)            &&
 8004f7a:	7e20      	ldrb	r0, [r4, #24]
  if(ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 8004f7c:	2800      	cmp	r0, #0
 8004f7e:	d1e8      	bne.n	8004f52 <HAL_ADC_PollForConversion+0x4a>
     (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) ||
 8004f80:	6ada      	ldr	r2, [r3, #44]	; 0x2c
     (hadc->Init.ContinuousConvMode == DISABLE)            &&
 8004f82:	f412 0f70 	tst.w	r2, #15728640	; 0xf00000
 8004f86:	d002      	beq.n	8004f8e <HAL_ADC_PollForConversion+0x86>
      HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)  )   )
 8004f88:	689b      	ldr	r3, [r3, #8]
     (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) ||
 8004f8a:	055a      	lsls	r2, r3, #21
 8004f8c:	d4e1      	bmi.n	8004f52 <HAL_ADC_PollForConversion+0x4a>
    CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);   
 8004f8e:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8004f90:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8004f94:	6423      	str	r3, [r4, #64]	; 0x40
    if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 8004f96:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8004f98:	04db      	lsls	r3, r3, #19
 8004f9a:	d4da      	bmi.n	8004f52 <HAL_ADC_PollForConversion+0x4a>
      SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 8004f9c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8004f9e:	f043 0301 	orr.w	r3, r3, #1
 8004fa2:	6423      	str	r3, [r4, #64]	; 0x40
 8004fa4:	e7c2      	b.n	8004f2c <HAL_ADC_PollForConversion+0x24>

08004fa6 <HAL_ADC_GetValue>:
  return hadc->Instance->DR;
 8004fa6:	6803      	ldr	r3, [r0, #0]
 8004fa8:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
}
 8004faa:	4770      	bx	lr

08004fac <HAL_ADC_ConfigChannel>:
{
 8004fac:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  __IO uint32_t counter = 0U;
 8004fae:	2300      	movs	r3, #0
 8004fb0:	9301      	str	r3, [sp, #4]
  __HAL_LOCK(hadc);
 8004fb2:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 8004fb6:	2b01      	cmp	r3, #1
 8004fb8:	d069      	beq.n	800508e <HAL_ADC_ConfigChannel+0xe2>
 8004fba:	2301      	movs	r3, #1
 8004fbc:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  if (sConfig->Channel > ADC_CHANNEL_9)
 8004fc0:	680d      	ldr	r5, [r1, #0]
    hadc->Instance->SMPR1 &= ~ADC_SMPR1(ADC_SMPR1_SMP10, sConfig->Channel);
 8004fc2:	6803      	ldr	r3, [r0, #0]
    hadc->Instance->SMPR1 |= ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel);
 8004fc4:	688e      	ldr	r6, [r1, #8]
  if (sConfig->Channel > ADC_CHANNEL_9)
 8004fc6:	2d09      	cmp	r5, #9
 8004fc8:	b2ac      	uxth	r4, r5
 8004fca:	d934      	bls.n	8005036 <HAL_ADC_ConfigChannel+0x8a>
    hadc->Instance->SMPR1 &= ~ADC_SMPR1(ADC_SMPR1_SMP10, sConfig->Channel);
 8004fcc:	eb04 0244 	add.w	r2, r4, r4, lsl #1
 8004fd0:	68df      	ldr	r7, [r3, #12]
 8004fd2:	3a1e      	subs	r2, #30
 8004fd4:	f04f 0c07 	mov.w	ip, #7
 8004fd8:	fa0c fc02 	lsl.w	ip, ip, r2
 8004fdc:	ea27 070c 	bic.w	r7, r7, ip
 8004fe0:	60df      	str	r7, [r3, #12]
    hadc->Instance->SMPR1 |= ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel);
 8004fe2:	68df      	ldr	r7, [r3, #12]
 8004fe4:	fa06 f202 	lsl.w	r2, r6, r2
 8004fe8:	433a      	orrs	r2, r7
 8004fea:	60da      	str	r2, [r3, #12]
  if (sConfig->Rank < 7U)
 8004fec:	6849      	ldr	r1, [r1, #4]
 8004fee:	2906      	cmp	r1, #6
    hadc->Instance->SQR3 &= ~ADC_SQR3_RK(ADC_SQR3_SQ1, sConfig->Rank);
 8004ff0:	eb01 0281 	add.w	r2, r1, r1, lsl #2
  if (sConfig->Rank < 7U)
 8004ff4:	d82f      	bhi.n	8005056 <HAL_ADC_ConfigChannel+0xaa>
    hadc->Instance->SQR3 &= ~ADC_SQR3_RK(ADC_SQR3_SQ1, sConfig->Rank);
 8004ff6:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8004ff8:	3a05      	subs	r2, #5
 8004ffa:	261f      	movs	r6, #31
 8004ffc:	4096      	lsls	r6, r2
 8004ffe:	ea21 0106 	bic.w	r1, r1, r6
 8005002:	6359      	str	r1, [r3, #52]	; 0x34
    hadc->Instance->SQR3 |= ADC_SQR3_RK(sConfig->Channel, sConfig->Rank);
 8005004:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8005006:	fa04 f202 	lsl.w	r2, r4, r2
 800500a:	430a      	orrs	r2, r1
 800500c:	635a      	str	r2, [r3, #52]	; 0x34
  if ((hadc->Instance == ADC1) && (sConfig->Channel == ADC_CHANNEL_VBAT))
 800500e:	4a30      	ldr	r2, [pc, #192]	; (80050d0 <HAL_ADC_ConfigChannel+0x124>)
 8005010:	4293      	cmp	r3, r2
 8005012:	d10a      	bne.n	800502a <HAL_ADC_ConfigChannel+0x7e>
 8005014:	2d12      	cmp	r5, #18
 8005016:	d13c      	bne.n	8005092 <HAL_ADC_ConfigChannel+0xe6>
      tmpADC_Common->CCR &= ~ADC_CCR_TSVREFE;
 8005018:	4b2e      	ldr	r3, [pc, #184]	; (80050d4 <HAL_ADC_ConfigChannel+0x128>)
 800501a:	685a      	ldr	r2, [r3, #4]
 800501c:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 8005020:	605a      	str	r2, [r3, #4]
    tmpADC_Common->CCR |= ADC_CCR_VBATE;
 8005022:	685a      	ldr	r2, [r3, #4]
 8005024:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 8005028:	605a      	str	r2, [r3, #4]
  __HAL_UNLOCK(hadc);
 800502a:	2300      	movs	r3, #0
 800502c:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  return HAL_OK;
 8005030:	4618      	mov	r0, r3
}
 8005032:	b003      	add	sp, #12
 8005034:	bdf0      	pop	{r4, r5, r6, r7, pc}
    hadc->Instance->SMPR2 &= ~ADC_SMPR2(ADC_SMPR2_SMP0, sConfig->Channel);
 8005036:	691f      	ldr	r7, [r3, #16]
 8005038:	eb05 0245 	add.w	r2, r5, r5, lsl #1
 800503c:	f04f 0c07 	mov.w	ip, #7
 8005040:	fa0c fc02 	lsl.w	ip, ip, r2
 8005044:	ea27 070c 	bic.w	r7, r7, ip
 8005048:	611f      	str	r7, [r3, #16]
    hadc->Instance->SMPR2 |= ADC_SMPR2(sConfig->SamplingTime, sConfig->Channel);
 800504a:	691f      	ldr	r7, [r3, #16]
 800504c:	fa06 f202 	lsl.w	r2, r6, r2
 8005050:	433a      	orrs	r2, r7
 8005052:	611a      	str	r2, [r3, #16]
 8005054:	e7ca      	b.n	8004fec <HAL_ADC_ConfigChannel+0x40>
  else if (sConfig->Rank < 13U)
 8005056:	290c      	cmp	r1, #12
 8005058:	f04f 011f 	mov.w	r1, #31
 800505c:	d80b      	bhi.n	8005076 <HAL_ADC_ConfigChannel+0xca>
    hadc->Instance->SQR2 &= ~ADC_SQR2_RK(ADC_SQR2_SQ7, sConfig->Rank);
 800505e:	6b1e      	ldr	r6, [r3, #48]	; 0x30
 8005060:	3a23      	subs	r2, #35	; 0x23
 8005062:	4091      	lsls	r1, r2
 8005064:	ea26 0101 	bic.w	r1, r6, r1
 8005068:	6319      	str	r1, [r3, #48]	; 0x30
    hadc->Instance->SQR2 |= ADC_SQR2_RK(sConfig->Channel, sConfig->Rank);
 800506a:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800506c:	fa04 f202 	lsl.w	r2, r4, r2
 8005070:	430a      	orrs	r2, r1
 8005072:	631a      	str	r2, [r3, #48]	; 0x30
 8005074:	e7cb      	b.n	800500e <HAL_ADC_ConfigChannel+0x62>
    hadc->Instance->SQR1 &= ~ADC_SQR1_RK(ADC_SQR1_SQ13, sConfig->Rank);
 8005076:	6ade      	ldr	r6, [r3, #44]	; 0x2c
 8005078:	3a41      	subs	r2, #65	; 0x41
 800507a:	4091      	lsls	r1, r2
 800507c:	ea26 0101 	bic.w	r1, r6, r1
 8005080:	62d9      	str	r1, [r3, #44]	; 0x2c
    hadc->Instance->SQR1 |= ADC_SQR1_RK(sConfig->Channel, sConfig->Rank);
 8005082:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8005084:	fa04 f202 	lsl.w	r2, r4, r2
 8005088:	430a      	orrs	r2, r1
 800508a:	62da      	str	r2, [r3, #44]	; 0x2c
 800508c:	e7bf      	b.n	800500e <HAL_ADC_ConfigChannel+0x62>
  __HAL_LOCK(hadc);
 800508e:	2002      	movs	r0, #2
 8005090:	e7cf      	b.n	8005032 <HAL_ADC_ConfigChannel+0x86>
  if ((hadc->Instance == ADC1) && ((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR) || (sConfig->Channel == ADC_CHANNEL_VREFINT)))
 8005092:	4b11      	ldr	r3, [pc, #68]	; (80050d8 <HAL_ADC_ConfigChannel+0x12c>)
 8005094:	429d      	cmp	r5, r3
 8005096:	d001      	beq.n	800509c <HAL_ADC_ConfigChannel+0xf0>
 8005098:	2d11      	cmp	r5, #17
 800509a:	d1c6      	bne.n	800502a <HAL_ADC_ConfigChannel+0x7e>
      tmpADC_Common->CCR &= ~ADC_CCR_VBATE;
 800509c:	4b0d      	ldr	r3, [pc, #52]	; (80050d4 <HAL_ADC_ConfigChannel+0x128>)
 800509e:	685a      	ldr	r2, [r3, #4]
 80050a0:	f422 0280 	bic.w	r2, r2, #4194304	; 0x400000
 80050a4:	605a      	str	r2, [r3, #4]
    tmpADC_Common->CCR |= ADC_CCR_TSVREFE;
 80050a6:	685a      	ldr	r2, [r3, #4]
 80050a8:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 80050ac:	605a      	str	r2, [r3, #4]
    if((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR))
 80050ae:	4b0a      	ldr	r3, [pc, #40]	; (80050d8 <HAL_ADC_ConfigChannel+0x12c>)
 80050b0:	429d      	cmp	r5, r3
 80050b2:	d1ba      	bne.n	800502a <HAL_ADC_ConfigChannel+0x7e>
      counter = (ADC_TEMPSENSOR_DELAY_US * (SystemCoreClock / 1000000U));
 80050b4:	4b09      	ldr	r3, [pc, #36]	; (80050dc <HAL_ADC_ConfigChannel+0x130>)
 80050b6:	4a0a      	ldr	r2, [pc, #40]	; (80050e0 <HAL_ADC_ConfigChannel+0x134>)
 80050b8:	681b      	ldr	r3, [r3, #0]
 80050ba:	fbb3 f3f2 	udiv	r3, r3, r2
 80050be:	220a      	movs	r2, #10
 80050c0:	4353      	muls	r3, r2
        counter--;
 80050c2:	9301      	str	r3, [sp, #4]
      while(counter != 0U)
 80050c4:	9b01      	ldr	r3, [sp, #4]
 80050c6:	2b00      	cmp	r3, #0
 80050c8:	d0af      	beq.n	800502a <HAL_ADC_ConfigChannel+0x7e>
        counter--;
 80050ca:	9b01      	ldr	r3, [sp, #4]
 80050cc:	3b01      	subs	r3, #1
 80050ce:	e7f8      	b.n	80050c2 <HAL_ADC_ConfigChannel+0x116>
 80050d0:	40012000 	.word	0x40012000
 80050d4:	40012300 	.word	0x40012300
 80050d8:	10000012 	.word	0x10000012
 80050dc:	2000007c 	.word	0x2000007c
 80050e0:	000f4240 	.word	0x000f4240

080050e4 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 80050e4:	4907      	ldr	r1, [pc, #28]	; (8005104 <HAL_NVIC_SetPriorityGrouping+0x20>)
 80050e6:	68ca      	ldr	r2, [r1, #12]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80050e8:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80050ec:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80050ee:	0412      	lsls	r2, r2, #16
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80050f0:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80050f4:	0c12      	lsrs	r2, r2, #16
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 80050f6:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 80050f8:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 80050fc:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 8005100:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 8005102:	4770      	bx	lr
 8005104:	e000ed00 	.word	0xe000ed00

08005108 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8005108:	4b16      	ldr	r3, [pc, #88]	; (8005164 <HAL_NVIC_SetPriority+0x5c>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 800510a:	b530      	push	{r4, r5, lr}
 800510c:	68dc      	ldr	r4, [r3, #12]
 800510e:	f3c4 2402 	ubfx	r4, r4, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8005112:	f1c4 0507 	rsb	r5, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8005116:	1d23      	adds	r3, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8005118:	2d04      	cmp	r5, #4
 800511a:	bf28      	it	cs
 800511c:	2504      	movcs	r5, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800511e:	2b06      	cmp	r3, #6

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8005120:	f04f 33ff 	mov.w	r3, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8005124:	bf8c      	ite	hi
 8005126:	3c03      	subhi	r4, #3
 8005128:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800512a:	fa03 f505 	lsl.w	r5, r3, r5
 800512e:	ea21 0105 	bic.w	r1, r1, r5
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8005132:	40a3      	lsls	r3, r4
 8005134:	ea22 0203 	bic.w	r2, r2, r3
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8005138:	40a1      	lsls	r1, r4
  if ((int32_t)(IRQn) >= 0)
 800513a:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800513c:	ea41 0302 	orr.w	r3, r1, r2
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8005140:	bfac      	ite	ge
 8005142:	f100 4060 	addge.w	r0, r0, #3758096384	; 0xe0000000
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8005146:	4a08      	ldrlt	r2, [pc, #32]	; (8005168 <HAL_NVIC_SetPriority+0x60>)
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8005148:	ea4f 1303 	mov.w	r3, r3, lsl #4
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800514c:	bfb8      	it	lt
 800514e:	f000 000f 	andlt.w	r0, r0, #15
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8005152:	b2db      	uxtb	r3, r3
 8005154:	bfaa      	itet	ge
 8005156:	f500 4061 	addge.w	r0, r0, #57600	; 0xe100
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800515a:	5413      	strblt	r3, [r2, r0]
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800515c:	f880 3300 	strbge.w	r3, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 8005160:	bd30      	pop	{r4, r5, pc}
 8005162:	bf00      	nop
 8005164:	e000ed00 	.word	0xe000ed00
 8005168:	e000ed14 	.word	0xe000ed14

0800516c <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 800516c:	2800      	cmp	r0, #0
 800516e:	db08      	blt.n	8005182 <HAL_NVIC_EnableIRQ+0x16>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8005170:	0942      	lsrs	r2, r0, #5
 8005172:	2301      	movs	r3, #1
 8005174:	f000 001f 	and.w	r0, r0, #31
 8005178:	fa03 f000 	lsl.w	r0, r3, r0
 800517c:	4b01      	ldr	r3, [pc, #4]	; (8005184 <HAL_NVIC_EnableIRQ+0x18>)
 800517e:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 8005182:	4770      	bx	lr
 8005184:	e000e100 	.word	0xe000e100

08005188 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8005188:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 800518a:	4604      	mov	r4, r0
 800518c:	b150      	cbz	r0, 80051a4 <HAL_CRC_Init+0x1c>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 800518e:	7943      	ldrb	r3, [r0, #5]
 8005190:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8005194:	b913      	cbnz	r3, 800519c <HAL_CRC_Init+0x14>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 8005196:	7102      	strb	r2, [r0, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 8005198:	f7fc fc2e 	bl	80019f8 <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 800519c:	2301      	movs	r3, #1
 800519e:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 80051a0:	2000      	movs	r0, #0
}
 80051a2:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 80051a4:	2001      	movs	r0, #1
 80051a6:	e7fc      	b.n	80051a2 <HAL_CRC_Init+0x1a>

080051a8 <HAL_DAC_Init>:
  * @param  hdac pointer to a DAC_HandleTypeDef structure that contains
  *         the configuration information for the specified DAC.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DAC_Init(DAC_HandleTypeDef* hdac)
{ 
 80051a8:	b510      	push	{r4, lr}
  /* Check DAC handle */
  if(hdac == NULL)
 80051aa:	4604      	mov	r4, r0
 80051ac:	b168      	cbz	r0, 80051ca <HAL_DAC_Init+0x22>
     return HAL_ERROR;
  }
  /* Check the parameters */
  assert_param(IS_DAC_ALL_INSTANCE(hdac->Instance));
  
  if(hdac->State == HAL_DAC_STATE_RESET)
 80051ae:	7903      	ldrb	r3, [r0, #4]
 80051b0:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80051b4:	b913      	cbnz	r3, 80051bc <HAL_DAC_Init+0x14>
    {
      hdac->MspInitCallback               = HAL_DAC_MspInit;
    }
#endif /* USE_HAL_DAC_REGISTER_CALLBACKS */
    /* Allocate lock resource and initialize it */
    hdac->Lock = HAL_UNLOCKED;
 80051b6:	7142      	strb	r2, [r0, #5]
#if (USE_HAL_DAC_REGISTER_CALLBACKS == 1)
    /* Init the low level hardware */
    hdac->MspInitCallback(hdac);
#else
    /* Init the low level hardware */
    HAL_DAC_MspInit(hdac);
 80051b8:	f7fc fc36 	bl	8001a28 <HAL_DAC_MspInit>
#endif /* USE_HAL_DAC_REGISTER_CALLBACKS */
  }
  
  /* Initialize the DAC state*/
  hdac->State = HAL_DAC_STATE_BUSY;
 80051bc:	2302      	movs	r3, #2
 80051be:	7123      	strb	r3, [r4, #4]
  
  /* Set DAC error code to none */
  hdac->ErrorCode = HAL_DAC_ERROR_NONE;
 80051c0:	2000      	movs	r0, #0
  
  /* Initialize the DAC state*/
  hdac->State = HAL_DAC_STATE_READY;
 80051c2:	2301      	movs	r3, #1
  hdac->ErrorCode = HAL_DAC_ERROR_NONE;
 80051c4:	6120      	str	r0, [r4, #16]
  hdac->State = HAL_DAC_STATE_READY;
 80051c6:	7123      	strb	r3, [r4, #4]
  
  /* Return function status */
  return HAL_OK;
}
 80051c8:	bd10      	pop	{r4, pc}
     return HAL_ERROR;
 80051ca:	2001      	movs	r0, #1
 80051cc:	e7fc      	b.n	80051c8 <HAL_DAC_Init+0x20>

080051ce <HAL_DAC_Start>:
  *            @arg DAC_CHANNEL_1: DAC Channel1 selected
  *            @arg DAC_CHANNEL_2: DAC Channel2 selected
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DAC_Start(DAC_HandleTypeDef* hdac, uint32_t Channel)
{
 80051ce:	b510      	push	{r4, lr}
  
  /* Check the parameters */
  assert_param(IS_DAC_CHANNEL(Channel));
  
  /* Process locked */
  __HAL_LOCK(hdac);
 80051d0:	7943      	ldrb	r3, [r0, #5]
 80051d2:	2b01      	cmp	r3, #1
 80051d4:	f04f 0302 	mov.w	r3, #2
 80051d8:	d017      	beq.n	800520a <HAL_DAC_Start+0x3c>
  
  /* Change DAC state */
  hdac->State = HAL_DAC_STATE_BUSY;
 80051da:	7103      	strb	r3, [r0, #4]
  
  /* Enable the Peripheral */
  __HAL_DAC_ENABLE(hdac, Channel);
 80051dc:	6803      	ldr	r3, [r0, #0]
 80051de:	2201      	movs	r2, #1
 80051e0:	681c      	ldr	r4, [r3, #0]
 80051e2:	408a      	lsls	r2, r1
 80051e4:	4322      	orrs	r2, r4
 80051e6:	601a      	str	r2, [r3, #0]
  
  if(Channel == DAC_CHANNEL_1)
 80051e8:	b989      	cbnz	r1, 800520e <HAL_DAC_Start+0x40>
  {
    tmp1 = hdac->Instance->CR & DAC_CR_TEN1;
 80051ea:	6819      	ldr	r1, [r3, #0]
    tmp2 = hdac->Instance->CR & DAC_CR_TSEL1;
 80051ec:	681a      	ldr	r2, [r3, #0]
    /* Check if software trigger enabled */
    if((tmp1 ==  DAC_CR_TEN1) && (tmp2 ==  DAC_CR_TSEL1))
 80051ee:	074c      	lsls	r4, r1, #29
 80051f0:	d507      	bpl.n	8005202 <HAL_DAC_Start+0x34>
    tmp2 = hdac->Instance->CR & DAC_CR_TSEL1;
 80051f2:	f002 0238 	and.w	r2, r2, #56	; 0x38
    if((tmp1 ==  DAC_CR_TEN1) && (tmp2 ==  DAC_CR_TSEL1))
 80051f6:	2a38      	cmp	r2, #56	; 0x38
 80051f8:	d103      	bne.n	8005202 <HAL_DAC_Start+0x34>
    {
      /* Enable the selected DAC software conversion */
      hdac->Instance->SWTRIGR |= (uint32_t)DAC_SWTRIGR_SWTRIG1;
 80051fa:	685a      	ldr	r2, [r3, #4]
 80051fc:	f042 0201 	orr.w	r2, r2, #1
    tmp2 = hdac->Instance->CR & DAC_CR_TSEL2;    
    /* Check if software trigger enabled */
    if((tmp1 == DAC_CR_TEN2) && (tmp2 == DAC_CR_TSEL2))
    {
      /* Enable the selected DAC software conversion*/
      hdac->Instance->SWTRIGR |= (uint32_t)DAC_SWTRIGR_SWTRIG2;
 8005200:	605a      	str	r2, [r3, #4]
    }
  }
  
  /* Change DAC state */
  hdac->State = HAL_DAC_STATE_READY;
 8005202:	2301      	movs	r3, #1
 8005204:	7103      	strb	r3, [r0, #4]
  
  /* Process unlocked */
  __HAL_UNLOCK(hdac);
 8005206:	2300      	movs	r3, #0
 8005208:	7143      	strb	r3, [r0, #5]
  __HAL_LOCK(hdac);
 800520a:	4618      	mov	r0, r3
    
  /* Return function status */
  return HAL_OK;
}
 800520c:	bd10      	pop	{r4, pc}
    tmp1 = hdac->Instance->CR & DAC_CR_TEN2;
 800520e:	6819      	ldr	r1, [r3, #0]
    tmp2 = hdac->Instance->CR & DAC_CR_TSEL2;    
 8005210:	681a      	ldr	r2, [r3, #0]
    if((tmp1 == DAC_CR_TEN2) && (tmp2 == DAC_CR_TSEL2))
 8005212:	0349      	lsls	r1, r1, #13
 8005214:	d5f5      	bpl.n	8005202 <HAL_DAC_Start+0x34>
    tmp2 = hdac->Instance->CR & DAC_CR_TSEL2;    
 8005216:	f402 1260 	and.w	r2, r2, #3670016	; 0x380000
    if((tmp1 == DAC_CR_TEN2) && (tmp2 == DAC_CR_TSEL2))
 800521a:	f5b2 1f60 	cmp.w	r2, #3670016	; 0x380000
 800521e:	d1f0      	bne.n	8005202 <HAL_DAC_Start+0x34>
      hdac->Instance->SWTRIGR |= (uint32_t)DAC_SWTRIGR_SWTRIG2;
 8005220:	685a      	ldr	r2, [r3, #4]
 8005222:	f042 0202 	orr.w	r2, r2, #2
 8005226:	e7eb      	b.n	8005200 <HAL_DAC_Start+0x32>

08005228 <HAL_DAC_ConfigChannel>:
  *            @arg DAC_CHANNEL_1: DAC Channel1 selected
  *            @arg DAC_CHANNEL_2: DAC Channel2 selected
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DAC_ConfigChannel(DAC_HandleTypeDef* hdac, DAC_ChannelConfTypeDef* sConfig, uint32_t Channel)
{
 8005228:	b530      	push	{r4, r5, lr}
  assert_param(IS_DAC_TRIGGER(sConfig->DAC_Trigger));
  assert_param(IS_DAC_OUTPUT_BUFFER_STATE(sConfig->DAC_OutputBuffer));
  assert_param(IS_DAC_CHANNEL(Channel));
  
  /* Process locked */
  __HAL_LOCK(hdac);
 800522a:	7943      	ldrb	r3, [r0, #5]
 800522c:	2b01      	cmp	r3, #1
 800522e:	f04f 0302 	mov.w	r3, #2
 8005232:	d018      	beq.n	8005266 <HAL_DAC_ConfigChannel+0x3e>
  
  /* Change DAC state */
  hdac->State = HAL_DAC_STATE_BUSY;
  
  /* Get the DAC CR value */
  tmpreg1 = hdac->Instance->CR;
 8005234:	6804      	ldr	r4, [r0, #0]
  hdac->State = HAL_DAC_STATE_BUSY;
 8005236:	7103      	strb	r3, [r0, #4]
  tmpreg1 = hdac->Instance->CR;
 8005238:	6823      	ldr	r3, [r4, #0]
  /* Clear BOFFx, TENx, TSELx, WAVEx and MAMPx bits */
  tmpreg1 &= ~(((uint32_t)(DAC_CR_MAMP1 | DAC_CR_WAVE1 | DAC_CR_TSEL1 | DAC_CR_TEN1 | DAC_CR_BOFF1)) << Channel);
 800523a:	f640 75fe 	movw	r5, #4094	; 0xffe
 800523e:	4095      	lsls	r5, r2
 8005240:	ea23 0505 	bic.w	r5, r3, r5
  /* Configure for the selected DAC channel: buffer output, trigger */
  /* Set TSELx and TENx bits according to DAC_Trigger value */
  /* Set BOFFx bit according to DAC_OutputBuffer value */   
  tmpreg2 = (sConfig->DAC_Trigger | sConfig->DAC_OutputBuffer);
 8005244:	e9d1 3100 	ldrd	r3, r1, [r1]
 8005248:	430b      	orrs	r3, r1
  /* Calculate CR register value depending on DAC_Channel */
  tmpreg1 |= tmpreg2 << Channel;
 800524a:	4093      	lsls	r3, r2
 800524c:	432b      	orrs	r3, r5
  /* Write to DAC CR */
  hdac->Instance->CR = tmpreg1;
 800524e:	6023      	str	r3, [r4, #0]
  /* Disable wave generation */
  hdac->Instance->CR &= ~(DAC_CR_WAVE1 << Channel);
 8005250:	6823      	ldr	r3, [r4, #0]
 8005252:	21c0      	movs	r1, #192	; 0xc0
 8005254:	fa01 f202 	lsl.w	r2, r1, r2
 8005258:	ea23 0202 	bic.w	r2, r3, r2
  
  /* Change DAC state */
  hdac->State = HAL_DAC_STATE_READY;
 800525c:	2301      	movs	r3, #1
  hdac->Instance->CR &= ~(DAC_CR_WAVE1 << Channel);
 800525e:	6022      	str	r2, [r4, #0]
  hdac->State = HAL_DAC_STATE_READY;
 8005260:	7103      	strb	r3, [r0, #4]
  
  /* Process unlocked */
  __HAL_UNLOCK(hdac);
 8005262:	2300      	movs	r3, #0
 8005264:	7143      	strb	r3, [r0, #5]
  __HAL_LOCK(hdac);
 8005266:	4618      	mov	r0, r3
  
  /* Return function status */
  return HAL_OK;
}
 8005268:	bd30      	pop	{r4, r5, pc}

0800526a <HAL_DAC_SetValue>:
  *            @arg DAC_ALIGN_12B_R: 12bit right data alignment selected
  * @param  Data Data to be loaded in the selected data holding register.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DAC_SetValue(DAC_HandleTypeDef* hdac, uint32_t Channel, uint32_t Alignment, uint32_t Data)
{  
 800526a:	b513      	push	{r0, r1, r4, lr}
  /* Check the parameters */
  assert_param(IS_DAC_CHANNEL(Channel));
  assert_param(IS_DAC_ALIGN(Alignment));
  assert_param(IS_DAC_DATA(Data));
  
  tmp = (uint32_t)hdac->Instance; 
 800526c:	6800      	ldr	r0, [r0, #0]
  __IO uint32_t tmp = 0U;
 800526e:	2400      	movs	r4, #0
 8005270:	9401      	str	r4, [sp, #4]
  tmp = (uint32_t)hdac->Instance; 
 8005272:	9001      	str	r0, [sp, #4]
  if(Channel == DAC_CHANNEL_1)
 8005274:	b941      	cbnz	r1, 8005288 <HAL_DAC_SetValue+0x1e>
  {
    tmp += DAC_DHR12R1_ALIGNMENT(Alignment);
 8005276:	9901      	ldr	r1, [sp, #4]
 8005278:	3108      	adds	r1, #8
  }
  else
  {
    tmp += DAC_DHR12R2_ALIGNMENT(Alignment);
 800527a:	440a      	add	r2, r1
 800527c:	9201      	str	r2, [sp, #4]
  }

  /* Set the DAC channel1 selected data holding register */
  *(__IO uint32_t *) tmp = Data;
 800527e:	9a01      	ldr	r2, [sp, #4]
  
  /* Return function status */
  return HAL_OK;
}
 8005280:	2000      	movs	r0, #0
  *(__IO uint32_t *) tmp = Data;
 8005282:	6013      	str	r3, [r2, #0]
}
 8005284:	b002      	add	sp, #8
 8005286:	bd10      	pop	{r4, pc}
    tmp += DAC_DHR12R2_ALIGNMENT(Alignment);
 8005288:	9901      	ldr	r1, [sp, #4]
 800528a:	3114      	adds	r1, #20
 800528c:	e7f5      	b.n	800527a <HAL_DAC_SetValue+0x10>

0800528e <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 800528e:	b510      	push	{r4, lr}
  /* Check the DMA2D peripheral state */
  if(hdma2d == NULL)
 8005290:	4604      	mov	r4, r0
 8005292:	b330      	cbz	r0, 80052e2 <HAL_DMA2D_Init+0x54>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if(hdma2d->State == HAL_DMA2D_STATE_RESET)
 8005294:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 8005298:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800529c:	b91b      	cbnz	r3, 80052a6 <HAL_DMA2D_Init+0x18>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 800529e:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 80052a2:	f7fc fbf3 	bl	8001a8c <HAL_DMA2D_MspInit>

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 80052a6:	6822      	ldr	r2, [r4, #0]
 80052a8:	6861      	ldr	r1, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 80052aa:	2302      	movs	r3, #2
 80052ac:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 80052b0:	6813      	ldr	r3, [r2, #0]
 80052b2:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 80052b6:	430b      	orrs	r3, r1
 80052b8:	6013      	str	r3, [r2, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 80052ba:	6b53      	ldr	r3, [r2, #52]	; 0x34
 80052bc:	68a1      	ldr	r1, [r4, #8]
 80052be:	f023 0307 	bic.w	r3, r3, #7
 80052c2:	430b      	orrs	r3, r1
 80052c4:	6353      	str	r3, [r2, #52]	; 0x34

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 80052c6:	6c13      	ldr	r3, [r2, #64]	; 0x40
 80052c8:	68e1      	ldr	r1, [r4, #12]
 80052ca:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 80052ce:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 80052d2:	430b      	orrs	r3, r1
 80052d4:	6413      	str	r3, [r2, #64]	; 0x40


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 80052d6:	2000      	movs	r0, #0

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 80052d8:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 80052da:	63e0      	str	r0, [r4, #60]	; 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 80052dc:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

  return HAL_OK;
}
 80052e0:	bd10      	pop	{r4, pc}
     return HAL_ERROR;
 80052e2:	2001      	movs	r0, #1
 80052e4:	e7fc      	b.n	80052e0 <HAL_DMA2D_Init+0x52>

080052e6 <HAL_DMA2D_LineEventCallback>:
 80052e6:	4770      	bx	lr

080052e8 <HAL_DMA2D_CLUTLoadingCpltCallback>:
 80052e8:	4770      	bx	lr

080052ea <HAL_DMA2D_IRQHandler>:
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
void HAL_DMA2D_IRQHandler(DMA2D_HandleTypeDef *hdma2d)
{
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 80052ea:	6803      	ldr	r3, [r0, #0]
{
 80052ec:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 80052ee:	685e      	ldr	r6, [r3, #4]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 80052f0:	681d      	ldr	r5, [r3, #0]

  /* Transfer Error Interrupt management ***************************************/
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 80052f2:	07f2      	lsls	r2, r6, #31
{
 80052f4:	4604      	mov	r4, r0
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 80052f6:	d514      	bpl.n	8005322 <HAL_DMA2D_IRQHandler+0x38>
  {
    if ((crflags & DMA2D_IT_TE) != 0U)
 80052f8:	05e9      	lsls	r1, r5, #23
 80052fa:	d512      	bpl.n	8005322 <HAL_DMA2D_IRQHandler+0x38>
    {
      /* Disable the transfer Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 80052fc:	681a      	ldr	r2, [r3, #0]
 80052fe:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8005302:	601a      	str	r2, [r3, #0]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 8005304:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 8005306:	f042 0201 	orr.w	r2, r2, #1
 800530a:	63c2      	str	r2, [r0, #60]	; 0x3c

      /* Clear the transfer error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 800530c:	2201      	movs	r2, #1
 800530e:	609a      	str	r2, [r3, #8]

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8005310:	2304      	movs	r3, #4
 8005312:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8005316:	2300      	movs	r3, #0
 8005318:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38

      if(hdma2d->XferErrorCallback != NULL)
 800531c:	6943      	ldr	r3, [r0, #20]
 800531e:	b103      	cbz	r3, 8005322 <HAL_DMA2D_IRQHandler+0x38>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8005320:	4798      	blx	r3
      }
    }
  }
  /* Configuration Error Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 8005322:	06b2      	lsls	r2, r6, #26
 8005324:	d516      	bpl.n	8005354 <HAL_DMA2D_IRQHandler+0x6a>
  {
    if ((crflags & DMA2D_IT_CE) != 0U)
 8005326:	04ab      	lsls	r3, r5, #18
 8005328:	d514      	bpl.n	8005354 <HAL_DMA2D_IRQHandler+0x6a>
    {
      /* Disable the Configuration Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 800532a:	6823      	ldr	r3, [r4, #0]
 800532c:	681a      	ldr	r2, [r3, #0]
 800532e:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8005332:	601a      	str	r2, [r3, #0]

      /* Clear the Configuration error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 8005334:	2220      	movs	r2, #32
 8005336:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 8005338:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800533a:	f043 0302 	orr.w	r3, r3, #2
 800533e:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8005340:	2304      	movs	r3, #4
 8005342:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8005346:	2300      	movs	r3, #0
 8005348:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if(hdma2d->XferErrorCallback != NULL)
 800534c:	6963      	ldr	r3, [r4, #20]
 800534e:	b10b      	cbz	r3, 8005354 <HAL_DMA2D_IRQHandler+0x6a>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8005350:	4620      	mov	r0, r4
 8005352:	4798      	blx	r3
      }
    }
  }
  /* CLUT access Error Interrupt management ***********************************/
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 8005354:	0730      	lsls	r0, r6, #28
 8005356:	d516      	bpl.n	8005386 <HAL_DMA2D_IRQHandler+0x9c>
  {
    if ((crflags & DMA2D_IT_CAE) != 0U)
 8005358:	0529      	lsls	r1, r5, #20
 800535a:	d514      	bpl.n	8005386 <HAL_DMA2D_IRQHandler+0x9c>
    {
      /* Disable the CLUT access error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 800535c:	6823      	ldr	r3, [r4, #0]
 800535e:	681a      	ldr	r2, [r3, #0]
 8005360:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8005364:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT access error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 8005366:	2208      	movs	r2, #8
 8005368:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 800536a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800536c:	f043 0304 	orr.w	r3, r3, #4
 8005370:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8005372:	2304      	movs	r3, #4
 8005374:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8005378:	2300      	movs	r3, #0
 800537a:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if(hdma2d->XferErrorCallback != NULL)
 800537e:	6963      	ldr	r3, [r4, #20]
 8005380:	b10b      	cbz	r3, 8005386 <HAL_DMA2D_IRQHandler+0x9c>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8005382:	4620      	mov	r0, r4
 8005384:	4798      	blx	r3
      }
    }
  }
  /* Transfer watermark Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 8005386:	0772      	lsls	r2, r6, #29
 8005388:	d50b      	bpl.n	80053a2 <HAL_DMA2D_IRQHandler+0xb8>
  {
    if ((crflags & DMA2D_IT_TW) != 0U)
 800538a:	056b      	lsls	r3, r5, #21
 800538c:	d509      	bpl.n	80053a2 <HAL_DMA2D_IRQHandler+0xb8>
    {
      /* Disable the transfer watermark interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 800538e:	6823      	ldr	r3, [r4, #0]
 8005390:	681a      	ldr	r2, [r3, #0]
 8005392:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8005396:	601a      	str	r2, [r3, #0]

      /* Clear the transfer watermark flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 8005398:	2204      	movs	r2, #4
 800539a:	609a      	str	r2, [r3, #8]

      /* Transfer watermark Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->LineEventCallback(hdma2d);
#else
      HAL_DMA2D_LineEventCallback(hdma2d);
 800539c:	4620      	mov	r0, r4
 800539e:	f7ff ffa2 	bl	80052e6 <HAL_DMA2D_LineEventCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */

    }
  }
  /* Transfer Complete Interrupt management ************************************/
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 80053a2:	07b0      	lsls	r0, r6, #30
 80053a4:	d514      	bpl.n	80053d0 <HAL_DMA2D_IRQHandler+0xe6>
  {
    if ((crflags & DMA2D_IT_TC) != 0U)
 80053a6:	05a9      	lsls	r1, r5, #22
 80053a8:	d512      	bpl.n	80053d0 <HAL_DMA2D_IRQHandler+0xe6>
    {
      /* Disable the transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 80053aa:	6823      	ldr	r3, [r4, #0]
 80053ac:	681a      	ldr	r2, [r3, #0]
 80053ae:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 80053b2:	601a      	str	r2, [r3, #0]

      /* Clear the transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 80053b4:	2202      	movs	r2, #2
 80053b6:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 80053b8:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80053ba:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 80053bc:	2301      	movs	r3, #1
 80053be:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 80053c2:	2300      	movs	r3, #0
 80053c4:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if(hdma2d->XferCpltCallback != NULL)
 80053c8:	6923      	ldr	r3, [r4, #16]
 80053ca:	b10b      	cbz	r3, 80053d0 <HAL_DMA2D_IRQHandler+0xe6>
      {
        /* Transfer complete Callback */
        hdma2d->XferCpltCallback(hdma2d);
 80053cc:	4620      	mov	r0, r4
 80053ce:	4798      	blx	r3
      }
    }
  }
  /* CLUT Transfer Complete Interrupt management ******************************/
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 80053d0:	06f2      	lsls	r2, r6, #27
 80053d2:	d513      	bpl.n	80053fc <HAL_DMA2D_IRQHandler+0x112>
  {
    if ((crflags & DMA2D_IT_CTC) != 0U)
 80053d4:	04eb      	lsls	r3, r5, #19
 80053d6:	d511      	bpl.n	80053fc <HAL_DMA2D_IRQHandler+0x112>
    {
      /* Disable the CLUT transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 80053d8:	6823      	ldr	r3, [r4, #0]
 80053da:	681a      	ldr	r2, [r3, #0]
 80053dc:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 80053e0:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 80053e2:	2210      	movs	r2, #16
 80053e4:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 80053e6:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80053e8:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 80053ea:	2301      	movs	r3, #1
 80053ec:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 80053f0:	2300      	movs	r3, #0
 80053f2:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      /* CLUT Transfer complete Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->CLUTLoadingCpltCallback(hdma2d);
#else
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 80053f6:	4620      	mov	r0, r4
 80053f8:	f7ff ff76 	bl	80052e8 <HAL_DMA2D_CLUTLoadingCpltCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
    }
  }

}
 80053fc:	bd70      	pop	{r4, r5, r6, pc}
	...

08005400 <HAL_DMA2D_ConfigLayer>:
  *                   This parameter can be one of the following values:
  *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_ConfigLayer(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
{
 8005400:	b5f0      	push	{r4, r5, r6, r7, lr}
      assert_param(IS_DMA2D_ALPHA_MODE(hdma2d->LayerCfg[LayerIdx].AlphaMode));
    }
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
 8005402:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 8005406:	2b01      	cmp	r3, #1
 8005408:	f04f 0302 	mov.w	r3, #2
 800540c:	d02b      	beq.n	8005466 <HAL_DMA2D_ConfigLayer+0x66>
 800540e:	2201      	movs	r2, #1

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8005410:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
  __HAL_LOCK(hdma2d);
 8005414:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8005418:	eb00 1301 	add.w	r3, r0, r1, lsl #4
 800541c:	e9d3 4207 	ldrd	r4, r2, [r3, #28]
 8005420:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 8005422:	4f18      	ldr	r7, [pc, #96]	; (8005484 <HAL_DMA2D_ConfigLayer+0x84>)
 8005424:	ea44 4202 	orr.w	r2, r4, r2, lsl #16
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8005428:	3c09      	subs	r4, #9
 800542a:	2c01      	cmp	r4, #1
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 800542c:	bf9c      	itt	ls
 800542e:	f005 437f 	andls.w	r3, r5, #4278190080	; 0xff000000
 8005432:	431a      	orrls	r2, r3
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8005434:	ea4f 1601 	mov.w	r6, r1, lsl #4

  /* Configure the background DMA2D layer */
  if(LayerIdx == DMA2D_BACKGROUND_LAYER)
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8005438:	6803      	ldr	r3, [r0, #0]
    regValue |=  (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 800543a:	bf88      	it	hi
 800543c:	ea42 6205 	orrhi.w	r2, r2, r5, lsl #24
  if(LayerIdx == DMA2D_BACKGROUND_LAYER)
 8005440:	b999      	cbnz	r1, 800546a <HAL_DMA2D_ConfigLayer+0x6a>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8005442:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8005444:	4039      	ands	r1, r7
 8005446:	430a      	orrs	r2, r1
 8005448:	625a      	str	r2, [r3, #36]	; 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);

    /* DMA2D BGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 800544a:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 800544c:	6982      	ldr	r2, [r0, #24]
 800544e:	619a      	str	r2, [r3, #24]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8005450:	d803      	bhi.n	800545a <HAL_DMA2D_ConfigLayer+0x5a>
    {
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE|DMA2D_BGCOLR_GREEN|DMA2D_BGCOLR_RED));
 8005452:	6a42      	ldr	r2, [r0, #36]	; 0x24
 8005454:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
 8005458:	629a      	str	r2, [r3, #40]	; 0x28
    {
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE|DMA2D_FGCOLR_GREEN|DMA2D_FGCOLR_RED));
    }
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 800545a:	2301      	movs	r3, #1
 800545c:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 8005460:	2300      	movs	r3, #0
 8005462:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
  __HAL_LOCK(hdma2d);
 8005466:	4618      	mov	r0, r3

  return HAL_OK;
}
 8005468:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 800546a:	69d9      	ldr	r1, [r3, #28]
 800546c:	4039      	ands	r1, r7
 800546e:	430a      	orrs	r2, r1
 8005470:	61da      	str	r2, [r3, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8005472:	1982      	adds	r2, r0, r6
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8005474:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8005476:	6992      	ldr	r2, [r2, #24]
 8005478:	611a      	str	r2, [r3, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE|DMA2D_FGCOLR_GREEN|DMA2D_FGCOLR_RED));
 800547a:	bf9c      	itt	ls
 800547c:	f025 457f 	bicls.w	r5, r5, #4278190080	; 0xff000000
 8005480:	621d      	strls	r5, [r3, #32]
 8005482:	e7ea      	b.n	800545a <HAL_DMA2D_ConfigLayer+0x5a>
 8005484:	00fcfff0 	.word	0x00fcfff0

08005488 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8005488:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800548c:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8005650 <HAL_GPIO_Init+0x1c8>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8005490:	4a6d      	ldr	r2, [pc, #436]	; (8005648 <HAL_GPIO_Init+0x1c0>)
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8005492:	f8df 91c0 	ldr.w	r9, [pc, #448]	; 8005654 <HAL_GPIO_Init+0x1cc>
  for(position = 0U; position < GPIO_NUMBER; position++)
 8005496:	2300      	movs	r3, #0
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8005498:	680d      	ldr	r5, [r1, #0]
    ioposition = 0x01U << position;
 800549a:	2401      	movs	r4, #1
 800549c:	409c      	lsls	r4, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800549e:	ea04 0605 	and.w	r6, r4, r5
    if(iocurrent == ioposition)
 80054a2:	43ac      	bics	r4, r5
 80054a4:	f040 80b7 	bne.w	8005616 <HAL_GPIO_Init+0x18e>
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 80054a8:	684c      	ldr	r4, [r1, #4]
 80054aa:	f024 0c10 	bic.w	ip, r4, #16
 80054ae:	ea4f 0e43 	mov.w	lr, r3, lsl #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 80054b2:	2503      	movs	r5, #3
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 80054b4:	f10c 37ff 	add.w	r7, ip, #4294967295
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 80054b8:	fa05 f50e 	lsl.w	r5, r5, lr
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 80054bc:	2f01      	cmp	r7, #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 80054be:	ea6f 0505 	mvn.w	r5, r5
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 80054c2:	d811      	bhi.n	80054e8 <HAL_GPIO_Init+0x60>
        temp = GPIOx->OSPEEDR; 
 80054c4:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 80054c6:	ea07 0a05 	and.w	sl, r7, r5
        temp |= (GPIO_Init->Speed << (position * 2U));
 80054ca:	68cf      	ldr	r7, [r1, #12]
 80054cc:	fa07 f70e 	lsl.w	r7, r7, lr
 80054d0:	ea47 070a 	orr.w	r7, r7, sl
        GPIOx->OSPEEDR = temp;
 80054d4:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 80054d6:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 80054d8:	ea27 0a06 	bic.w	sl, r7, r6
        temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4U) << position);
 80054dc:	f3c4 1700 	ubfx	r7, r4, #4, #1
 80054e0:	409f      	lsls	r7, r3
 80054e2:	ea47 070a 	orr.w	r7, r7, sl
        GPIOx->OTYPER = temp;
 80054e6:	6047      	str	r7, [r0, #4]
      temp = GPIOx->PUPDR;
 80054e8:	68c7      	ldr	r7, [r0, #12]
      temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 80054ea:	ea07 0a05 	and.w	sl, r7, r5
      temp |= ((GPIO_Init->Pull) << (position * 2U));
 80054ee:	688f      	ldr	r7, [r1, #8]
 80054f0:	fa07 f70e 	lsl.w	r7, r7, lr
 80054f4:	ea47 070a 	orr.w	r7, r7, sl
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 80054f8:	f1bc 0f02 	cmp.w	ip, #2
      GPIOx->PUPDR = temp;
 80054fc:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 80054fe:	d116      	bne.n	800552e <HAL_GPIO_Init+0xa6>
        temp = GPIOx->AFR[position >> 3U];
 8005500:	ea4f 0ad3 	mov.w	sl, r3, lsr #3
 8005504:	eb00 0a8a 	add.w	sl, r0, sl, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8005508:	f003 0b07 	and.w	fp, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 800550c:	f8da 7020 	ldr.w	r7, [sl, #32]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8005510:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
 8005514:	f04f 0c0f 	mov.w	ip, #15
 8005518:	fa0c fc0b 	lsl.w	ip, ip, fp
 800551c:	ea27 0c0c 	bic.w	ip, r7, ip
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8005520:	690f      	ldr	r7, [r1, #16]
 8005522:	fa07 f70b 	lsl.w	r7, r7, fp
 8005526:	ea47 070c 	orr.w	r7, r7, ip
        GPIOx->AFR[position >> 3U] = temp;
 800552a:	f8ca 7020 	str.w	r7, [sl, #32]
      temp = GPIOx->MODER;
 800552e:	6807      	ldr	r7, [r0, #0]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 8005530:	403d      	ands	r5, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8005532:	f004 0703 	and.w	r7, r4, #3
 8005536:	fa07 f70e 	lsl.w	r7, r7, lr
 800553a:	433d      	orrs	r5, r7
      GPIOx->MODER = temp;
 800553c:	6005      	str	r5, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 800553e:	00e5      	lsls	r5, r4, #3
 8005540:	d569      	bpl.n	8005616 <HAL_GPIO_Init+0x18e>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8005542:	f04f 0b00 	mov.w	fp, #0
 8005546:	f8cd b004 	str.w	fp, [sp, #4]
 800554a:	f8d8 7044 	ldr.w	r7, [r8, #68]	; 0x44
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800554e:	4d3f      	ldr	r5, [pc, #252]	; (800564c <HAL_GPIO_Init+0x1c4>)
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8005550:	f447 4780 	orr.w	r7, r7, #16384	; 0x4000
 8005554:	f8c8 7044 	str.w	r7, [r8, #68]	; 0x44
 8005558:	f8d8 7044 	ldr.w	r7, [r8, #68]	; 0x44
 800555c:	f407 4780 	and.w	r7, r7, #16384	; 0x4000
 8005560:	9701      	str	r7, [sp, #4]
 8005562:	9f01      	ldr	r7, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2U];
 8005564:	f023 0703 	bic.w	r7, r3, #3
 8005568:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 800556c:	f507 379c 	add.w	r7, r7, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8005570:	f003 0e03 	and.w	lr, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 8005574:	f8d7 a008 	ldr.w	sl, [r7, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8005578:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 800557c:	f04f 0c0f 	mov.w	ip, #15
 8005580:	fa0c fc0e 	lsl.w	ip, ip, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8005584:	42a8      	cmp	r0, r5
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8005586:	ea2a 0c0c 	bic.w	ip, sl, ip
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800558a:	d04b      	beq.n	8005624 <HAL_GPIO_Init+0x19c>
 800558c:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8005590:	42a8      	cmp	r0, r5
 8005592:	d049      	beq.n	8005628 <HAL_GPIO_Init+0x1a0>
 8005594:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8005598:	42a8      	cmp	r0, r5
 800559a:	d047      	beq.n	800562c <HAL_GPIO_Init+0x1a4>
 800559c:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 80055a0:	42a8      	cmp	r0, r5
 80055a2:	d045      	beq.n	8005630 <HAL_GPIO_Init+0x1a8>
 80055a4:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 80055a8:	42a8      	cmp	r0, r5
 80055aa:	d043      	beq.n	8005634 <HAL_GPIO_Init+0x1ac>
 80055ac:	4548      	cmp	r0, r9
 80055ae:	d043      	beq.n	8005638 <HAL_GPIO_Init+0x1b0>
 80055b0:	f505 6500 	add.w	r5, r5, #2048	; 0x800
 80055b4:	42a8      	cmp	r0, r5
 80055b6:	d041      	beq.n	800563c <HAL_GPIO_Init+0x1b4>
 80055b8:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 80055bc:	42a8      	cmp	r0, r5
 80055be:	d03f      	beq.n	8005640 <HAL_GPIO_Init+0x1b8>
 80055c0:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 80055c4:	42a8      	cmp	r0, r5
 80055c6:	d03d      	beq.n	8005644 <HAL_GPIO_Init+0x1bc>
 80055c8:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 80055cc:	42a8      	cmp	r0, r5
 80055ce:	bf0c      	ite	eq
 80055d0:	2509      	moveq	r5, #9
 80055d2:	250a      	movne	r5, #10
 80055d4:	fa05 f50e 	lsl.w	r5, r5, lr
 80055d8:	ea45 050c 	orr.w	r5, r5, ip
        SYSCFG->EXTICR[position >> 2U] = temp;
 80055dc:	60bd      	str	r5, [r7, #8]
        temp = EXTI->IMR;
 80055de:	6815      	ldr	r5, [r2, #0]
        temp &= ~((uint32_t)iocurrent);
 80055e0:	43f7      	mvns	r7, r6
        if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 80055e2:	f414 3f80 	tst.w	r4, #65536	; 0x10000
        temp &= ~((uint32_t)iocurrent);
 80055e6:	bf0c      	ite	eq
 80055e8:	403d      	andeq	r5, r7
        {
          temp |= iocurrent;
 80055ea:	4335      	orrne	r5, r6
        }
        EXTI->IMR = temp;
 80055ec:	6015      	str	r5, [r2, #0]

        temp = EXTI->EMR;
 80055ee:	6855      	ldr	r5, [r2, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 80055f0:	f414 3f00 	tst.w	r4, #131072	; 0x20000
        temp &= ~((uint32_t)iocurrent);
 80055f4:	bf0c      	ite	eq
 80055f6:	403d      	andeq	r5, r7
        {
          temp |= iocurrent;
 80055f8:	4335      	orrne	r5, r6
        }
        EXTI->EMR = temp;
 80055fa:	6055      	str	r5, [r2, #4]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 80055fc:	6895      	ldr	r5, [r2, #8]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 80055fe:	f414 1f80 	tst.w	r4, #1048576	; 0x100000
        temp &= ~((uint32_t)iocurrent);
 8005602:	bf0c      	ite	eq
 8005604:	403d      	andeq	r5, r7
        {
          temp |= iocurrent;
 8005606:	4335      	orrne	r5, r6
        }
        EXTI->RTSR = temp;
 8005608:	6095      	str	r5, [r2, #8]

        temp = EXTI->FTSR;
 800560a:	68d5      	ldr	r5, [r2, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 800560c:	02a4      	lsls	r4, r4, #10
        temp &= ~((uint32_t)iocurrent);
 800560e:	bf54      	ite	pl
 8005610:	403d      	andpl	r5, r7
        {
          temp |= iocurrent;
 8005612:	4335      	orrmi	r5, r6
        }
        EXTI->FTSR = temp;
 8005614:	60d5      	str	r5, [r2, #12]
  for(position = 0U; position < GPIO_NUMBER; position++)
 8005616:	3301      	adds	r3, #1
 8005618:	2b10      	cmp	r3, #16
 800561a:	f47f af3d 	bne.w	8005498 <HAL_GPIO_Init+0x10>
      }
    }
  }
}
 800561e:	b003      	add	sp, #12
 8005620:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8005624:	465d      	mov	r5, fp
 8005626:	e7d5      	b.n	80055d4 <HAL_GPIO_Init+0x14c>
 8005628:	2501      	movs	r5, #1
 800562a:	e7d3      	b.n	80055d4 <HAL_GPIO_Init+0x14c>
 800562c:	2502      	movs	r5, #2
 800562e:	e7d1      	b.n	80055d4 <HAL_GPIO_Init+0x14c>
 8005630:	2503      	movs	r5, #3
 8005632:	e7cf      	b.n	80055d4 <HAL_GPIO_Init+0x14c>
 8005634:	2504      	movs	r5, #4
 8005636:	e7cd      	b.n	80055d4 <HAL_GPIO_Init+0x14c>
 8005638:	2505      	movs	r5, #5
 800563a:	e7cb      	b.n	80055d4 <HAL_GPIO_Init+0x14c>
 800563c:	2506      	movs	r5, #6
 800563e:	e7c9      	b.n	80055d4 <HAL_GPIO_Init+0x14c>
 8005640:	2507      	movs	r5, #7
 8005642:	e7c7      	b.n	80055d4 <HAL_GPIO_Init+0x14c>
 8005644:	2508      	movs	r5, #8
 8005646:	e7c5      	b.n	80055d4 <HAL_GPIO_Init+0x14c>
 8005648:	40013c00 	.word	0x40013c00
 800564c:	40020000 	.word	0x40020000
 8005650:	40023800 	.word	0x40023800
 8005654:	40021400 	.word	0x40021400

08005658 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 8005658:	b10a      	cbz	r2, 800565e <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 800565a:	6181      	str	r1, [r0, #24]
  }
}
 800565c:	4770      	bx	lr
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 800565e:	0409      	lsls	r1, r1, #16
 8005660:	e7fb      	b.n	800565a <HAL_GPIO_WritePin+0x2>

08005662 <I2C_IsAcknowledgeFailed>:
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8005662:	6801      	ldr	r1, [r0, #0]
 8005664:	694b      	ldr	r3, [r1, #20]
 8005666:	f413 6380 	ands.w	r3, r3, #1024	; 0x400
 800566a:	f04f 0200 	mov.w	r2, #0
 800566e:	d010      	beq.n	8005692 <I2C_IsAcknowledgeFailed+0x30>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8005670:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 8005674:	614b      	str	r3, [r1, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
    hi2c->State               = HAL_I2C_STATE_READY;
 8005676:	2320      	movs	r3, #32
    hi2c->PreviousState       = I2C_STATE_NONE;
 8005678:	6302      	str	r2, [r0, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800567a:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800567e:	f880 203e 	strb.w	r2, [r0, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8005682:	6c03      	ldr	r3, [r0, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8005684:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8005688:	f043 0304 	orr.w	r3, r3, #4
 800568c:	6403      	str	r3, [r0, #64]	; 0x40

    return HAL_ERROR;
 800568e:	2001      	movs	r0, #1
 8005690:	4770      	bx	lr
  }
  return HAL_OK;
 8005692:	4618      	mov	r0, r3
}
 8005694:	4770      	bx	lr

08005696 <I2C_WaitOnFlagUntilTimeout>:
{
 8005696:	e92d 46f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r9, sl, lr}
 800569a:	4606      	mov	r6, r0
 800569c:	460f      	mov	r7, r1
 800569e:	4691      	mov	r9, r2
 80056a0:	461d      	mov	r5, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 80056a2:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 80056a6:	6833      	ldr	r3, [r6, #0]
 80056a8:	f1ba 0f01 	cmp.w	sl, #1
 80056ac:	bf0c      	ite	eq
 80056ae:	695c      	ldreq	r4, [r3, #20]
 80056b0:	699c      	ldrne	r4, [r3, #24]
 80056b2:	ea27 0404 	bic.w	r4, r7, r4
 80056b6:	b2a4      	uxth	r4, r4
 80056b8:	fab4 f484 	clz	r4, r4
 80056bc:	0964      	lsrs	r4, r4, #5
 80056be:	45a1      	cmp	r9, r4
 80056c0:	d001      	beq.n	80056c6 <I2C_WaitOnFlagUntilTimeout+0x30>
  return HAL_OK;
 80056c2:	2000      	movs	r0, #0
 80056c4:	e017      	b.n	80056f6 <I2C_WaitOnFlagUntilTimeout+0x60>
    if (Timeout != HAL_MAX_DELAY)
 80056c6:	1c6a      	adds	r2, r5, #1
 80056c8:	d0ee      	beq.n	80056a8 <I2C_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80056ca:	f7ff fae9 	bl	8004ca0 <HAL_GetTick>
 80056ce:	9b08      	ldr	r3, [sp, #32]
 80056d0:	1ac0      	subs	r0, r0, r3
 80056d2:	42a8      	cmp	r0, r5
 80056d4:	d801      	bhi.n	80056da <I2C_WaitOnFlagUntilTimeout+0x44>
 80056d6:	2d00      	cmp	r5, #0
 80056d8:	d1e5      	bne.n	80056a6 <I2C_WaitOnFlagUntilTimeout+0x10>
        hi2c->PreviousState     = I2C_STATE_NONE;
 80056da:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 80056dc:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 80056de:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 80056e0:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 80056e4:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 80056e8:	6c32      	ldr	r2, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 80056ea:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 80056ee:	f042 0220 	orr.w	r2, r2, #32
 80056f2:	6432      	str	r2, [r6, #64]	; 0x40
        return HAL_ERROR;
 80056f4:	2001      	movs	r0, #1
}
 80056f6:	e8bd 86f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r9, sl, pc}

080056fa <I2C_WaitOnMasterAddressFlagUntilTimeout>:
{
 80056fa:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80056fe:	4604      	mov	r4, r0
 8005700:	460f      	mov	r7, r1
 8005702:	4616      	mov	r6, r2
 8005704:	4698      	mov	r8, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8005706:	6825      	ldr	r5, [r4, #0]
 8005708:	6968      	ldr	r0, [r5, #20]
 800570a:	ea27 0000 	bic.w	r0, r7, r0
 800570e:	b280      	uxth	r0, r0
 8005710:	b1b8      	cbz	r0, 8005742 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x48>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8005712:	696b      	ldr	r3, [r5, #20]
 8005714:	055a      	lsls	r2, r3, #21
 8005716:	d516      	bpl.n	8005746 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4c>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005718:	682b      	ldr	r3, [r5, #0]
 800571a:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800571e:	602b      	str	r3, [r5, #0]
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8005720:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 8005724:	616b      	str	r3, [r5, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 8005726:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8005728:	2300      	movs	r3, #0
 800572a:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800572c:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8005730:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8005734:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8005736:	f042 0204 	orr.w	r2, r2, #4
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800573a:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800573c:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        return HAL_ERROR;
 8005740:	2001      	movs	r0, #1
}
 8005742:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (Timeout != HAL_MAX_DELAY)
 8005746:	1c73      	adds	r3, r6, #1
 8005748:	d0de      	beq.n	8005708 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800574a:	f7ff faa9 	bl	8004ca0 <HAL_GetTick>
 800574e:	eba0 0008 	sub.w	r0, r0, r8
 8005752:	42b0      	cmp	r0, r6
 8005754:	d801      	bhi.n	800575a <I2C_WaitOnMasterAddressFlagUntilTimeout+0x60>
 8005756:	2e00      	cmp	r6, #0
 8005758:	d1d5      	bne.n	8005706 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
        hi2c->PreviousState       = I2C_STATE_NONE;
 800575a:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 800575c:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 800575e:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8005760:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8005764:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8005768:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800576a:	f042 0220 	orr.w	r2, r2, #32
 800576e:	e7e4      	b.n	800573a <I2C_WaitOnMasterAddressFlagUntilTimeout+0x40>

08005770 <I2C_WaitOnRXNEFlagUntilTimeout>:
{
 8005770:	b570      	push	{r4, r5, r6, lr}
 8005772:	4604      	mov	r4, r0
 8005774:	460d      	mov	r5, r1
 8005776:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8005778:	6821      	ldr	r1, [r4, #0]
 800577a:	694b      	ldr	r3, [r1, #20]
 800577c:	f013 0340 	ands.w	r3, r3, #64	; 0x40
 8005780:	d001      	beq.n	8005786 <I2C_WaitOnRXNEFlagUntilTimeout+0x16>
  return HAL_OK;
 8005782:	2000      	movs	r0, #0
 8005784:	e010      	b.n	80057a8 <I2C_WaitOnRXNEFlagUntilTimeout+0x38>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 8005786:	694a      	ldr	r2, [r1, #20]
 8005788:	06d2      	lsls	r2, r2, #27
 800578a:	d50e      	bpl.n	80057aa <I2C_WaitOnRXNEFlagUntilTimeout+0x3a>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800578c:	f06f 0210 	mvn.w	r2, #16
 8005790:	614a      	str	r2, [r1, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 8005792:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8005794:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8005796:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800579a:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 800579e:	6c22      	ldr	r2, [r4, #64]	; 0x40
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80057a0:	6422      	str	r2, [r4, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 80057a2:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
      return HAL_ERROR;
 80057a6:	2001      	movs	r0, #1
}
 80057a8:	bd70      	pop	{r4, r5, r6, pc}
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80057aa:	f7ff fa79 	bl	8004ca0 <HAL_GetTick>
 80057ae:	1b80      	subs	r0, r0, r6
 80057b0:	42a8      	cmp	r0, r5
 80057b2:	d801      	bhi.n	80057b8 <I2C_WaitOnRXNEFlagUntilTimeout+0x48>
 80057b4:	2d00      	cmp	r5, #0
 80057b6:	d1df      	bne.n	8005778 <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
      hi2c->PreviousState       = I2C_STATE_NONE;
 80057b8:	2300      	movs	r3, #0
      hi2c->State               = HAL_I2C_STATE_READY;
 80057ba:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 80057bc:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 80057be:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 80057c2:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80057c6:	6c22      	ldr	r2, [r4, #64]	; 0x40
 80057c8:	f042 0220 	orr.w	r2, r2, #32
 80057cc:	e7e8      	b.n	80057a0 <I2C_WaitOnRXNEFlagUntilTimeout+0x30>

080057ce <I2C_WaitOnBTFFlagUntilTimeout>:
{
 80057ce:	b570      	push	{r4, r5, r6, lr}
 80057d0:	4604      	mov	r4, r0
 80057d2:	460d      	mov	r5, r1
 80057d4:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 80057d6:	6823      	ldr	r3, [r4, #0]
 80057d8:	695b      	ldr	r3, [r3, #20]
 80057da:	075b      	lsls	r3, r3, #29
 80057dc:	d501      	bpl.n	80057e2 <I2C_WaitOnBTFFlagUntilTimeout+0x14>
  return HAL_OK;
 80057de:	2000      	movs	r0, #0
}
 80057e0:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 80057e2:	4620      	mov	r0, r4
 80057e4:	f7ff ff3d 	bl	8005662 <I2C_IsAcknowledgeFailed>
 80057e8:	b9a8      	cbnz	r0, 8005816 <I2C_WaitOnBTFFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 80057ea:	1c6a      	adds	r2, r5, #1
 80057ec:	d0f3      	beq.n	80057d6 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80057ee:	f7ff fa57 	bl	8004ca0 <HAL_GetTick>
 80057f2:	1b80      	subs	r0, r0, r6
 80057f4:	42a8      	cmp	r0, r5
 80057f6:	d801      	bhi.n	80057fc <I2C_WaitOnBTFFlagUntilTimeout+0x2e>
 80057f8:	2d00      	cmp	r5, #0
 80057fa:	d1ec      	bne.n	80057d6 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
        hi2c->PreviousState       = I2C_STATE_NONE;
 80057fc:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 80057fe:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8005800:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8005802:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8005806:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800580a:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800580c:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8005810:	f042 0220 	orr.w	r2, r2, #32
 8005814:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 8005816:	2001      	movs	r0, #1
 8005818:	e7e2      	b.n	80057e0 <I2C_WaitOnBTFFlagUntilTimeout+0x12>

0800581a <I2C_WaitOnTXEFlagUntilTimeout>:
{
 800581a:	b570      	push	{r4, r5, r6, lr}
 800581c:	4604      	mov	r4, r0
 800581e:	460d      	mov	r5, r1
 8005820:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8005822:	6823      	ldr	r3, [r4, #0]
 8005824:	695b      	ldr	r3, [r3, #20]
 8005826:	061b      	lsls	r3, r3, #24
 8005828:	d501      	bpl.n	800582e <I2C_WaitOnTXEFlagUntilTimeout+0x14>
  return HAL_OK;
 800582a:	2000      	movs	r0, #0
}
 800582c:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 800582e:	4620      	mov	r0, r4
 8005830:	f7ff ff17 	bl	8005662 <I2C_IsAcknowledgeFailed>
 8005834:	b9a8      	cbnz	r0, 8005862 <I2C_WaitOnTXEFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 8005836:	1c6a      	adds	r2, r5, #1
 8005838:	d0f3      	beq.n	8005822 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800583a:	f7ff fa31 	bl	8004ca0 <HAL_GetTick>
 800583e:	1b80      	subs	r0, r0, r6
 8005840:	42a8      	cmp	r0, r5
 8005842:	d801      	bhi.n	8005848 <I2C_WaitOnTXEFlagUntilTimeout+0x2e>
 8005844:	2d00      	cmp	r5, #0
 8005846:	d1ec      	bne.n	8005822 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
        hi2c->PreviousState       = I2C_STATE_NONE;
 8005848:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 800584a:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 800584c:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 800584e:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8005852:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8005856:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8005858:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800585c:	f042 0220 	orr.w	r2, r2, #32
 8005860:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 8005862:	2001      	movs	r0, #1
 8005864:	e7e2      	b.n	800582c <I2C_WaitOnTXEFlagUntilTimeout+0x12>
	...

08005868 <I2C_RequestMemoryWrite>:
{
 8005868:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800586c:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800586e:	6802      	ldr	r2, [r0, #0]
{
 8005870:	b085      	sub	sp, #20
 8005872:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
 8005876:	4699      	mov	r9, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8005878:	6813      	ldr	r3, [r2, #0]
 800587a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800587e:	6013      	str	r3, [r2, #0]
{
 8005880:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8005882:	463b      	mov	r3, r7
 8005884:	f8cd 8000 	str.w	r8, [sp]
 8005888:	2200      	movs	r2, #0
 800588a:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 800588e:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8005890:	f7ff ff01 	bl	8005696 <I2C_WaitOnFlagUntilTimeout>
 8005894:	6823      	ldr	r3, [r4, #0]
 8005896:	b138      	cbz	r0, 80058a8 <I2C_RequestMemoryWrite+0x40>
    if (hi2c->Instance->CR1 & I2C_CR1_START)
 8005898:	681b      	ldr	r3, [r3, #0]
 800589a:	05db      	lsls	r3, r3, #23
 800589c:	d502      	bpl.n	80058a4 <I2C_RequestMemoryWrite+0x3c>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800589e:	f44f 7300 	mov.w	r3, #512	; 0x200
 80058a2:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 80058a4:	2003      	movs	r0, #3
 80058a6:	e00a      	b.n	80058be <I2C_RequestMemoryWrite+0x56>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 80058a8:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 80058ac:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 80058ae:	4919      	ldr	r1, [pc, #100]	; (8005914 <I2C_RequestMemoryWrite+0xac>)
 80058b0:	4643      	mov	r3, r8
 80058b2:	463a      	mov	r2, r7
 80058b4:	4620      	mov	r0, r4
 80058b6:	f7ff ff20 	bl	80056fa <I2C_WaitOnMasterAddressFlagUntilTimeout>
 80058ba:	b118      	cbz	r0, 80058c4 <I2C_RequestMemoryWrite+0x5c>
      return HAL_ERROR;
 80058bc:	2001      	movs	r0, #1
}
 80058be:	b005      	add	sp, #20
 80058c0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80058c4:	6823      	ldr	r3, [r4, #0]
 80058c6:	9003      	str	r0, [sp, #12]
 80058c8:	695a      	ldr	r2, [r3, #20]
 80058ca:	9203      	str	r2, [sp, #12]
 80058cc:	699b      	ldr	r3, [r3, #24]
 80058ce:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80058d0:	4642      	mov	r2, r8
 80058d2:	4639      	mov	r1, r7
 80058d4:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80058d6:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80058d8:	f7ff ff9f 	bl	800581a <I2C_WaitOnTXEFlagUntilTimeout>
 80058dc:	b140      	cbz	r0, 80058f0 <I2C_RequestMemoryWrite+0x88>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80058de:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80058e0:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80058e2:	bf01      	itttt	eq
 80058e4:	6822      	ldreq	r2, [r4, #0]
 80058e6:	6813      	ldreq	r3, [r2, #0]
 80058e8:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 80058ec:	6013      	streq	r3, [r2, #0]
 80058ee:	e7e5      	b.n	80058bc <I2C_RequestMemoryWrite+0x54>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 80058f0:	f1b9 0f01 	cmp.w	r9, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80058f4:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 80058f6:	d102      	bne.n	80058fe <I2C_RequestMemoryWrite+0x96>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80058f8:	b2ed      	uxtb	r5, r5
 80058fa:	611d      	str	r5, [r3, #16]
 80058fc:	e7df      	b.n	80058be <I2C_RequestMemoryWrite+0x56>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 80058fe:	0a2a      	lsrs	r2, r5, #8
 8005900:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8005902:	4639      	mov	r1, r7
 8005904:	4642      	mov	r2, r8
 8005906:	4620      	mov	r0, r4
 8005908:	f7ff ff87 	bl	800581a <I2C_WaitOnTXEFlagUntilTimeout>
 800590c:	2800      	cmp	r0, #0
 800590e:	d1e6      	bne.n	80058de <I2C_RequestMemoryWrite+0x76>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8005910:	6823      	ldr	r3, [r4, #0]
 8005912:	e7f1      	b.n	80058f8 <I2C_RequestMemoryWrite+0x90>
 8005914:	00010002 	.word	0x00010002

08005918 <I2C_RequestMemoryRead>:
{
 8005918:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800591c:	469a      	mov	sl, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800591e:	6803      	ldr	r3, [r0, #0]
{
 8005920:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8005922:	681a      	ldr	r2, [r3, #0]
 8005924:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8005928:	601a      	str	r2, [r3, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800592a:	681a      	ldr	r2, [r3, #0]
{
 800592c:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8005930:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8005934:	601a      	str	r2, [r3, #0]
{
 8005936:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8005938:	463b      	mov	r3, r7
 800593a:	f8cd 8000 	str.w	r8, [sp]
 800593e:	2200      	movs	r2, #0
 8005940:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 8005944:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8005946:	f7ff fea6 	bl	8005696 <I2C_WaitOnFlagUntilTimeout>
 800594a:	6823      	ldr	r3, [r4, #0]
 800594c:	b148      	cbz	r0, 8005962 <I2C_RequestMemoryRead+0x4a>
    if (hi2c->Instance->CR1 & I2C_CR1_START)
 800594e:	681b      	ldr	r3, [r3, #0]
    if (hi2c->Instance->CR1 & I2C_CR1_START)
 8005950:	05db      	lsls	r3, r3, #23
 8005952:	d502      	bpl.n	800595a <I2C_RequestMemoryRead+0x42>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8005954:	f44f 7300 	mov.w	r3, #512	; 0x200
 8005958:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 800595a:	2003      	movs	r0, #3
}
 800595c:	b004      	add	sp, #16
 800595e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8005962:	fa5f f986 	uxtb.w	r9, r6
 8005966:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 800596a:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 800596c:	492a      	ldr	r1, [pc, #168]	; (8005a18 <I2C_RequestMemoryRead+0x100>)
 800596e:	4643      	mov	r3, r8
 8005970:	463a      	mov	r2, r7
 8005972:	4620      	mov	r0, r4
 8005974:	f7ff fec1 	bl	80056fa <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8005978:	b108      	cbz	r0, 800597e <I2C_RequestMemoryRead+0x66>
    return HAL_ERROR;
 800597a:	2001      	movs	r0, #1
 800597c:	e7ee      	b.n	800595c <I2C_RequestMemoryRead+0x44>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800597e:	6823      	ldr	r3, [r4, #0]
 8005980:	9003      	str	r0, [sp, #12]
 8005982:	695a      	ldr	r2, [r3, #20]
 8005984:	9203      	str	r2, [sp, #12]
 8005986:	699b      	ldr	r3, [r3, #24]
 8005988:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800598a:	4642      	mov	r2, r8
 800598c:	4639      	mov	r1, r7
 800598e:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005990:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8005992:	f7ff ff42 	bl	800581a <I2C_WaitOnTXEFlagUntilTimeout>
 8005996:	b140      	cbz	r0, 80059aa <I2C_RequestMemoryRead+0x92>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8005998:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800599a:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800599c:	bf01      	itttt	eq
 800599e:	6822      	ldreq	r2, [r4, #0]
 80059a0:	6813      	ldreq	r3, [r2, #0]
 80059a2:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 80059a6:	6013      	streq	r3, [r2, #0]
 80059a8:	e7e7      	b.n	800597a <I2C_RequestMemoryRead+0x62>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 80059aa:	f1ba 0f01 	cmp.w	sl, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80059ae:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 80059b0:	d11a      	bne.n	80059e8 <I2C_RequestMemoryRead+0xd0>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80059b2:	b2ed      	uxtb	r5, r5
 80059b4:	611d      	str	r5, [r3, #16]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80059b6:	4642      	mov	r2, r8
 80059b8:	4639      	mov	r1, r7
 80059ba:	4620      	mov	r0, r4
 80059bc:	f7ff ff2d 	bl	800581a <I2C_WaitOnTXEFlagUntilTimeout>
 80059c0:	2800      	cmp	r0, #0
 80059c2:	d1e9      	bne.n	8005998 <I2C_RequestMemoryRead+0x80>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80059c4:	6822      	ldr	r2, [r4, #0]
 80059c6:	6813      	ldr	r3, [r2, #0]
 80059c8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80059cc:	6013      	str	r3, [r2, #0]
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 80059ce:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 80059d2:	4602      	mov	r2, r0
 80059d4:	f8cd 8000 	str.w	r8, [sp]
 80059d8:	463b      	mov	r3, r7
 80059da:	4620      	mov	r0, r4
 80059dc:	f7ff fe5b 	bl	8005696 <I2C_WaitOnFlagUntilTimeout>
 80059e0:	6822      	ldr	r2, [r4, #0]
 80059e2:	b160      	cbz	r0, 80059fe <I2C_RequestMemoryRead+0xe6>
    if (hi2c->Instance->CR1 & I2C_CR1_START)
 80059e4:	6813      	ldr	r3, [r2, #0]
 80059e6:	e7b3      	b.n	8005950 <I2C_RequestMemoryRead+0x38>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 80059e8:	0a2a      	lsrs	r2, r5, #8
 80059ea:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80059ec:	4639      	mov	r1, r7
 80059ee:	4642      	mov	r2, r8
 80059f0:	4620      	mov	r0, r4
 80059f2:	f7ff ff12 	bl	800581a <I2C_WaitOnTXEFlagUntilTimeout>
 80059f6:	2800      	cmp	r0, #0
 80059f8:	d1ce      	bne.n	8005998 <I2C_RequestMemoryRead+0x80>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80059fa:	6823      	ldr	r3, [r4, #0]
 80059fc:	e7d9      	b.n	80059b2 <I2C_RequestMemoryRead+0x9a>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 80059fe:	f049 0301 	orr.w	r3, r9, #1
 8005a02:	6113      	str	r3, [r2, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8005a04:	4904      	ldr	r1, [pc, #16]	; (8005a18 <I2C_RequestMemoryRead+0x100>)
 8005a06:	4643      	mov	r3, r8
 8005a08:	463a      	mov	r2, r7
 8005a0a:	4620      	mov	r0, r4
 8005a0c:	f7ff fe75 	bl	80056fa <I2C_WaitOnMasterAddressFlagUntilTimeout>
    return HAL_TIMEOUT;
 8005a10:	3800      	subs	r0, #0
 8005a12:	bf18      	it	ne
 8005a14:	2001      	movne	r0, #1
 8005a16:	e7a1      	b.n	800595c <I2C_RequestMemoryRead+0x44>
 8005a18:	00010002 	.word	0x00010002

08005a1c <HAL_I2C_Init>:
{
 8005a1c:	b570      	push	{r4, r5, r6, lr}
  if (hi2c == NULL)
 8005a1e:	4604      	mov	r4, r0
 8005a20:	b908      	cbnz	r0, 8005a26 <HAL_I2C_Init+0xa>
    return HAL_ERROR;
 8005a22:	2001      	movs	r0, #1
}
 8005a24:	bd70      	pop	{r4, r5, r6, pc}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 8005a26:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8005a2a:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8005a2e:	b91b      	cbnz	r3, 8005a38 <HAL_I2C_Init+0x1c>
    hi2c->Lock = HAL_UNLOCKED;
 8005a30:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 8005a34:	f7fc f84c 	bl	8001ad0 <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 8005a38:	2324      	movs	r3, #36	; 0x24
 8005a3a:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 8005a3e:	6823      	ldr	r3, [r4, #0]
 8005a40:	681a      	ldr	r2, [r3, #0]
 8005a42:	f022 0201 	bic.w	r2, r2, #1
 8005a46:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 8005a48:	681a      	ldr	r2, [r3, #0]
 8005a4a:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8005a4e:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 8005a50:	681a      	ldr	r2, [r3, #0]
 8005a52:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8005a56:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 8005a58:	f000 fe6e 	bl	8006738 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 8005a5c:	4b3f      	ldr	r3, [pc, #252]	; (8005b5c <HAL_I2C_Init+0x140>)
 8005a5e:	6865      	ldr	r5, [r4, #4]
 8005a60:	429d      	cmp	r5, r3
 8005a62:	bf94      	ite	ls
 8005a64:	4b3e      	ldrls	r3, [pc, #248]	; (8005b60 <HAL_I2C_Init+0x144>)
 8005a66:	4b3f      	ldrhi	r3, [pc, #252]	; (8005b64 <HAL_I2C_Init+0x148>)
 8005a68:	4298      	cmp	r0, r3
 8005a6a:	bf8c      	ite	hi
 8005a6c:	2300      	movhi	r3, #0
 8005a6e:	2301      	movls	r3, #1
 8005a70:	2b00      	cmp	r3, #0
 8005a72:	d1d6      	bne.n	8005a22 <HAL_I2C_Init+0x6>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8005a74:	6822      	ldr	r2, [r4, #0]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8005a76:	4e39      	ldr	r6, [pc, #228]	; (8005b5c <HAL_I2C_Init+0x140>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8005a78:	6853      	ldr	r3, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 8005a7a:	493b      	ldr	r1, [pc, #236]	; (8005b68 <HAL_I2C_Init+0x14c>)
 8005a7c:	fbb0 f1f1 	udiv	r1, r0, r1
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8005a80:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8005a84:	430b      	orrs	r3, r1
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8005a86:	42b5      	cmp	r5, r6
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8005a88:	6053      	str	r3, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8005a8a:	bf88      	it	hi
 8005a8c:	f44f 7696 	movhi.w	r6, #300	; 0x12c
 8005a90:	6a13      	ldr	r3, [r2, #32]
 8005a92:	bf88      	it	hi
 8005a94:	4371      	mulhi	r1, r6
 8005a96:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8005a9a:	bf84      	itt	hi
 8005a9c:	f44f 767a 	movhi.w	r6, #1000	; 0x3e8
 8005aa0:	fbb1 f1f6 	udivhi	r1, r1, r6
 8005aa4:	3101      	adds	r1, #1
 8005aa6:	4319      	orrs	r1, r3
 8005aa8:	6211      	str	r1, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8005aaa:	69d1      	ldr	r1, [r2, #28]
 8005aac:	1e43      	subs	r3, r0, #1
 8005aae:	482b      	ldr	r0, [pc, #172]	; (8005b5c <HAL_I2C_Init+0x140>)
 8005ab0:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 8005ab4:	4285      	cmp	r5, r0
 8005ab6:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8005aba:	d832      	bhi.n	8005b22 <HAL_I2C_Init+0x106>
 8005abc:	006d      	lsls	r5, r5, #1
 8005abe:	f640 70fc 	movw	r0, #4092	; 0xffc
 8005ac2:	fbb3 f3f5 	udiv	r3, r3, r5
 8005ac6:	3301      	adds	r3, #1
 8005ac8:	4203      	tst	r3, r0
 8005aca:	d042      	beq.n	8005b52 <HAL_I2C_Init+0x136>
 8005acc:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8005ad0:	430b      	orrs	r3, r1
 8005ad2:	61d3      	str	r3, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 8005ad4:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 8005ad8:	6811      	ldr	r1, [r2, #0]
 8005ada:	4303      	orrs	r3, r0
 8005adc:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 8005ae0:	430b      	orrs	r3, r1
 8005ae2:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 8005ae4:	6891      	ldr	r1, [r2, #8]
 8005ae6:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 8005aea:	f421 4103 	bic.w	r1, r1, #33536	; 0x8300
 8005aee:	4303      	orrs	r3, r0
 8005af0:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8005af4:	430b      	orrs	r3, r1
 8005af6:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 8005af8:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 8005afc:	68d1      	ldr	r1, [r2, #12]
 8005afe:	4303      	orrs	r3, r0
 8005b00:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8005b04:	430b      	orrs	r3, r1
 8005b06:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 8005b08:	6813      	ldr	r3, [r2, #0]
 8005b0a:	f043 0301 	orr.w	r3, r3, #1
 8005b0e:	6013      	str	r3, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8005b10:	2000      	movs	r0, #0
  hi2c->State = HAL_I2C_STATE_READY;
 8005b12:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8005b14:	6420      	str	r0, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 8005b16:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 8005b1a:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8005b1c:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
  return HAL_OK;
 8005b20:	e780      	b.n	8005a24 <HAL_I2C_Init+0x8>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8005b22:	68a0      	ldr	r0, [r4, #8]
 8005b24:	b950      	cbnz	r0, 8005b3c <HAL_I2C_Init+0x120>
 8005b26:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8005b2a:	fbb3 f3f5 	udiv	r3, r3, r5
 8005b2e:	3301      	adds	r3, #1
 8005b30:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8005b34:	b17b      	cbz	r3, 8005b56 <HAL_I2C_Init+0x13a>
 8005b36:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8005b3a:	e7c9      	b.n	8005ad0 <HAL_I2C_Init+0xb4>
 8005b3c:	2019      	movs	r0, #25
 8005b3e:	4345      	muls	r5, r0
 8005b40:	fbb3 f3f5 	udiv	r3, r3, r5
 8005b44:	3301      	adds	r3, #1
 8005b46:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8005b4a:	b123      	cbz	r3, 8005b56 <HAL_I2C_Init+0x13a>
 8005b4c:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8005b50:	e7be      	b.n	8005ad0 <HAL_I2C_Init+0xb4>
 8005b52:	2304      	movs	r3, #4
 8005b54:	e7bc      	b.n	8005ad0 <HAL_I2C_Init+0xb4>
 8005b56:	2301      	movs	r3, #1
 8005b58:	e7ba      	b.n	8005ad0 <HAL_I2C_Init+0xb4>
 8005b5a:	bf00      	nop
 8005b5c:	000186a0 	.word	0x000186a0
 8005b60:	001e847f 	.word	0x001e847f
 8005b64:	003d08ff 	.word	0x003d08ff
 8005b68:	000f4240 	.word	0x000f4240

08005b6c <HAL_I2C_Mem_Write>:
{
 8005b6c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8005b70:	4604      	mov	r4, r0
 8005b72:	4699      	mov	r9, r3
 8005b74:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8005b76:	460f      	mov	r7, r1
 8005b78:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8005b7a:	f7ff f891 	bl	8004ca0 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8005b7e:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8005b82:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 8005b84:	4605      	mov	r5, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8005b86:	d003      	beq.n	8005b90 <HAL_I2C_Mem_Write+0x24>
    return HAL_BUSY;
 8005b88:	2002      	movs	r0, #2
}
 8005b8a:	b003      	add	sp, #12
 8005b8c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8005b90:	9000      	str	r0, [sp, #0]
 8005b92:	493c      	ldr	r1, [pc, #240]	; (8005c84 <HAL_I2C_Mem_Write+0x118>)
 8005b94:	2319      	movs	r3, #25
 8005b96:	2201      	movs	r2, #1
 8005b98:	4620      	mov	r0, r4
 8005b9a:	f7ff fd7c 	bl	8005696 <I2C_WaitOnFlagUntilTimeout>
 8005b9e:	2800      	cmp	r0, #0
 8005ba0:	d1f2      	bne.n	8005b88 <HAL_I2C_Mem_Write+0x1c>
    __HAL_LOCK(hi2c);
 8005ba2:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8005ba6:	2b01      	cmp	r3, #1
 8005ba8:	d0ee      	beq.n	8005b88 <HAL_I2C_Mem_Write+0x1c>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8005baa:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 8005bac:	2301      	movs	r3, #1
 8005bae:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8005bb2:	6803      	ldr	r3, [r0, #0]
 8005bb4:	07d9      	lsls	r1, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 8005bb6:	bf5e      	ittt	pl
 8005bb8:	6803      	ldrpl	r3, [r0, #0]
 8005bba:	f043 0301 	orrpl.w	r3, r3, #1
 8005bbe:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8005bc0:	6803      	ldr	r3, [r0, #0]
 8005bc2:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8005bc6:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8005bc8:	2321      	movs	r3, #33	; 0x21
 8005bca:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8005bce:	2340      	movs	r3, #64	; 0x40
 8005bd0:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8005bd4:	2300      	movs	r3, #0
 8005bd6:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 8005bd8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005bda:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 8005bdc:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8005be0:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8005be2:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8005be4:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8005be6:	4b28      	ldr	r3, [pc, #160]	; (8005c88 <HAL_I2C_Mem_Write+0x11c>)
 8005be8:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8005bea:	e9cd 6500 	strd	r6, r5, [sp]
 8005bee:	464b      	mov	r3, r9
 8005bf0:	4642      	mov	r2, r8
 8005bf2:	4639      	mov	r1, r7
 8005bf4:	4620      	mov	r0, r4
 8005bf6:	f7ff fe37 	bl	8005868 <I2C_RequestMemoryWrite>
 8005bfa:	2800      	cmp	r0, #0
 8005bfc:	d02a      	beq.n	8005c54 <HAL_I2C_Mem_Write+0xe8>
      return HAL_ERROR;
 8005bfe:	2001      	movs	r0, #1
 8005c00:	e7c3      	b.n	8005b8a <HAL_I2C_Mem_Write+0x1e>
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8005c02:	f7ff fe0a 	bl	800581a <I2C_WaitOnTXEFlagUntilTimeout>
 8005c06:	b140      	cbz	r0, 8005c1a <HAL_I2C_Mem_Write+0xae>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8005c08:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8005c0a:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005c0c:	bf01      	itttt	eq
 8005c0e:	6822      	ldreq	r2, [r4, #0]
 8005c10:	6813      	ldreq	r3, [r2, #0]
 8005c12:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 8005c16:	6013      	streq	r3, [r2, #0]
 8005c18:	e7f1      	b.n	8005bfe <HAL_I2C_Mem_Write+0x92>
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8005c1a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005c1c:	6827      	ldr	r7, [r4, #0]
 8005c1e:	461a      	mov	r2, r3
 8005c20:	f812 1b01 	ldrb.w	r1, [r2], #1
 8005c24:	6139      	str	r1, [r7, #16]
      hi2c->pBuffPtr++;
 8005c26:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 8005c28:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 8005c2a:	8d21      	ldrh	r1, [r4, #40]	; 0x28
      hi2c->XferCount--;
 8005c2c:	3a01      	subs	r2, #1
 8005c2e:	b292      	uxth	r2, r2
 8005c30:	8562      	strh	r2, [r4, #42]	; 0x2a
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8005c32:	697a      	ldr	r2, [r7, #20]
      hi2c->XferSize--;
 8005c34:	1e48      	subs	r0, r1, #1
 8005c36:	b280      	uxth	r0, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8005c38:	0752      	lsls	r2, r2, #29
      hi2c->XferSize--;
 8005c3a:	8520      	strh	r0, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8005c3c:	d50a      	bpl.n	8005c54 <HAL_I2C_Mem_Write+0xe8>
 8005c3e:	b148      	cbz	r0, 8005c54 <HAL_I2C_Mem_Write+0xe8>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 8005c40:	785a      	ldrb	r2, [r3, #1]
 8005c42:	613a      	str	r2, [r7, #16]
        hi2c->pBuffPtr++;
 8005c44:	3302      	adds	r3, #2
 8005c46:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferCount--;
 8005c48:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8005c4a:	3b01      	subs	r3, #1
        hi2c->XferSize--;
 8005c4c:	3902      	subs	r1, #2
        hi2c->XferCount--;
 8005c4e:	b29b      	uxth	r3, r3
        hi2c->XferSize--;
 8005c50:	8521      	strh	r1, [r4, #40]	; 0x28
        hi2c->XferCount--;
 8005c52:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 8005c54:	8d23      	ldrh	r3, [r4, #40]	; 0x28
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8005c56:	462a      	mov	r2, r5
 8005c58:	4631      	mov	r1, r6
 8005c5a:	4620      	mov	r0, r4
    while (hi2c->XferSize > 0U)
 8005c5c:	2b00      	cmp	r3, #0
 8005c5e:	d1d0      	bne.n	8005c02 <HAL_I2C_Mem_Write+0x96>
    if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8005c60:	f7ff fdb5 	bl	80057ce <I2C_WaitOnBTFFlagUntilTimeout>
 8005c64:	2800      	cmp	r0, #0
 8005c66:	d1cf      	bne.n	8005c08 <HAL_I2C_Mem_Write+0x9c>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005c68:	6822      	ldr	r2, [r4, #0]
 8005c6a:	6813      	ldr	r3, [r2, #0]
 8005c6c:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8005c70:	6013      	str	r3, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 8005c72:	2320      	movs	r3, #32
 8005c74:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 8005c78:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8005c7c:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    return HAL_OK;
 8005c80:	e783      	b.n	8005b8a <HAL_I2C_Mem_Write+0x1e>
 8005c82:	bf00      	nop
 8005c84:	00100002 	.word	0x00100002
 8005c88:	ffff0000 	.word	0xffff0000

08005c8c <HAL_I2C_Mem_Read>:
{
 8005c8c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8005c90:	4604      	mov	r4, r0
 8005c92:	b087      	sub	sp, #28
 8005c94:	4699      	mov	r9, r3
 8005c96:	9f10      	ldr	r7, [sp, #64]	; 0x40
 8005c98:	460d      	mov	r5, r1
 8005c9a:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8005c9c:	f7ff f800 	bl	8004ca0 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8005ca0:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8005ca4:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 8005ca6:	4606      	mov	r6, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8005ca8:	d004      	beq.n	8005cb4 <HAL_I2C_Mem_Read+0x28>
    return HAL_BUSY;
 8005caa:	2502      	movs	r5, #2
}
 8005cac:	4628      	mov	r0, r5
 8005cae:	b007      	add	sp, #28
 8005cb0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8005cb4:	9000      	str	r0, [sp, #0]
 8005cb6:	4976      	ldr	r1, [pc, #472]	; (8005e90 <HAL_I2C_Mem_Read+0x204>)
 8005cb8:	2319      	movs	r3, #25
 8005cba:	2201      	movs	r2, #1
 8005cbc:	4620      	mov	r0, r4
 8005cbe:	f7ff fcea 	bl	8005696 <I2C_WaitOnFlagUntilTimeout>
 8005cc2:	2800      	cmp	r0, #0
 8005cc4:	d1f1      	bne.n	8005caa <HAL_I2C_Mem_Read+0x1e>
    __HAL_LOCK(hi2c);
 8005cc6:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8005cca:	2b01      	cmp	r3, #1
 8005ccc:	d0ed      	beq.n	8005caa <HAL_I2C_Mem_Read+0x1e>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8005cce:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 8005cd0:	2301      	movs	r3, #1
 8005cd2:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8005cd6:	6803      	ldr	r3, [r0, #0]
 8005cd8:	07db      	lsls	r3, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 8005cda:	bf5e      	ittt	pl
 8005cdc:	6803      	ldrpl	r3, [r0, #0]
 8005cde:	f043 0301 	orrpl.w	r3, r3, #1
 8005ce2:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8005ce4:	6803      	ldr	r3, [r0, #0]
 8005ce6:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8005cea:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8005cec:	2322      	movs	r3, #34	; 0x22
 8005cee:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8005cf2:	2340      	movs	r3, #64	; 0x40
 8005cf4:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8005cf8:	2300      	movs	r3, #0
 8005cfa:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 8005cfc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8005cfe:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 8005d00:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8005d04:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8005d06:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8005d08:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8005d0a:	4b62      	ldr	r3, [pc, #392]	; (8005e94 <HAL_I2C_Mem_Read+0x208>)
 8005d0c:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8005d0e:	4629      	mov	r1, r5
 8005d10:	e9cd 7600 	strd	r7, r6, [sp]
 8005d14:	464b      	mov	r3, r9
 8005d16:	4642      	mov	r2, r8
 8005d18:	4620      	mov	r0, r4
 8005d1a:	f7ff fdfd 	bl	8005918 <I2C_RequestMemoryRead>
 8005d1e:	4605      	mov	r5, r0
 8005d20:	b108      	cbz	r0, 8005d26 <HAL_I2C_Mem_Read+0x9a>
      return HAL_ERROR;
 8005d22:	2501      	movs	r5, #1
 8005d24:	e7c2      	b.n	8005cac <HAL_I2C_Mem_Read+0x20>
    if (hi2c->XferSize == 0U)
 8005d26:	8d22      	ldrh	r2, [r4, #40]	; 0x28
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005d28:	6823      	ldr	r3, [r4, #0]
    if (hi2c->XferSize == 0U)
 8005d2a:	b9b2      	cbnz	r2, 8005d5a <HAL_I2C_Mem_Read+0xce>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005d2c:	9002      	str	r0, [sp, #8]
 8005d2e:	695a      	ldr	r2, [r3, #20]
 8005d30:	9202      	str	r2, [sp, #8]
 8005d32:	699a      	ldr	r2, [r3, #24]
 8005d34:	9202      	str	r2, [sp, #8]
 8005d36:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005d38:	681a      	ldr	r2, [r3, #0]
 8005d3a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8005d3e:	601a      	str	r2, [r3, #0]
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8005d40:	f8df 8154 	ldr.w	r8, [pc, #340]	; 8005e98 <HAL_I2C_Mem_Read+0x20c>
    while (hi2c->XferSize > 0U)
 8005d44:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8005d46:	2b00      	cmp	r3, #0
 8005d48:	d12c      	bne.n	8005da4 <HAL_I2C_Mem_Read+0x118>
    hi2c->State = HAL_I2C_STATE_READY;
 8005d4a:	2220      	movs	r2, #32
 8005d4c:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 8005d50:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8005d54:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    return HAL_OK;
 8005d58:	e7a8      	b.n	8005cac <HAL_I2C_Mem_Read+0x20>
    else if (hi2c->XferSize == 1U)
 8005d5a:	2a01      	cmp	r2, #1
 8005d5c:	d10a      	bne.n	8005d74 <HAL_I2C_Mem_Read+0xe8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8005d5e:	681a      	ldr	r2, [r3, #0]
 8005d60:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8005d64:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005d66:	9003      	str	r0, [sp, #12]
 8005d68:	695a      	ldr	r2, [r3, #20]
 8005d6a:	9203      	str	r2, [sp, #12]
 8005d6c:	699a      	ldr	r2, [r3, #24]
 8005d6e:	9203      	str	r2, [sp, #12]
 8005d70:	9a03      	ldr	r2, [sp, #12]
 8005d72:	e7e1      	b.n	8005d38 <HAL_I2C_Mem_Read+0xac>
    else if (hi2c->XferSize == 2U)
 8005d74:	2a02      	cmp	r2, #2
 8005d76:	d10e      	bne.n	8005d96 <HAL_I2C_Mem_Read+0x10a>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8005d78:	681a      	ldr	r2, [r3, #0]
 8005d7a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8005d7e:	601a      	str	r2, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8005d80:	681a      	ldr	r2, [r3, #0]
 8005d82:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8005d86:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005d88:	9004      	str	r0, [sp, #16]
 8005d8a:	695a      	ldr	r2, [r3, #20]
 8005d8c:	9204      	str	r2, [sp, #16]
 8005d8e:	699b      	ldr	r3, [r3, #24]
 8005d90:	9304      	str	r3, [sp, #16]
 8005d92:	9b04      	ldr	r3, [sp, #16]
 8005d94:	e7d4      	b.n	8005d40 <HAL_I2C_Mem_Read+0xb4>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005d96:	9005      	str	r0, [sp, #20]
 8005d98:	695a      	ldr	r2, [r3, #20]
 8005d9a:	9205      	str	r2, [sp, #20]
 8005d9c:	699b      	ldr	r3, [r3, #24]
 8005d9e:	9305      	str	r3, [sp, #20]
 8005da0:	9b05      	ldr	r3, [sp, #20]
 8005da2:	e7cd      	b.n	8005d40 <HAL_I2C_Mem_Read+0xb4>
      if (hi2c->XferSize <= 3U)
 8005da4:	2b03      	cmp	r3, #3
 8005da6:	d856      	bhi.n	8005e56 <HAL_I2C_Mem_Read+0x1ca>
        if (hi2c->XferSize == 1U)
 8005da8:	2b01      	cmp	r3, #1
 8005daa:	d115      	bne.n	8005dd8 <HAL_I2C_Mem_Read+0x14c>
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8005dac:	4632      	mov	r2, r6
 8005dae:	4639      	mov	r1, r7
 8005db0:	4620      	mov	r0, r4
 8005db2:	f7ff fcdd 	bl	8005770 <I2C_WaitOnRXNEFlagUntilTimeout>
 8005db6:	2800      	cmp	r0, #0
 8005db8:	d1b3      	bne.n	8005d22 <HAL_I2C_Mem_Read+0x96>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005dba:	6823      	ldr	r3, [r4, #0]
 8005dbc:	691a      	ldr	r2, [r3, #16]
 8005dbe:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005dc0:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8005dc2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005dc4:	3301      	adds	r3, #1
 8005dc6:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8005dc8:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8005dca:	3b01      	subs	r3, #1
 8005dcc:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8005dce:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8005dd0:	3b01      	subs	r3, #1
 8005dd2:	b29b      	uxth	r3, r3
 8005dd4:	8563      	strh	r3, [r4, #42]	; 0x2a
 8005dd6:	e7b5      	b.n	8005d44 <HAL_I2C_Mem_Read+0xb8>
        else if (hi2c->XferSize == 2U)
 8005dd8:	2b02      	cmp	r3, #2
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8005dda:	9600      	str	r6, [sp, #0]
 8005ddc:	463b      	mov	r3, r7
 8005dde:	f04f 0200 	mov.w	r2, #0
 8005de2:	4641      	mov	r1, r8
 8005de4:	4620      	mov	r0, r4
        else if (hi2c->XferSize == 2U)
 8005de6:	d119      	bne.n	8005e1c <HAL_I2C_Mem_Read+0x190>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8005de8:	f7ff fc55 	bl	8005696 <I2C_WaitOnFlagUntilTimeout>
 8005dec:	2800      	cmp	r0, #0
 8005dee:	d198      	bne.n	8005d22 <HAL_I2C_Mem_Read+0x96>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005df0:	6823      	ldr	r3, [r4, #0]
 8005df2:	681a      	ldr	r2, [r3, #0]
 8005df4:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8005df8:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005dfa:	691a      	ldr	r2, [r3, #16]
 8005dfc:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005dfe:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8005e00:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8005e02:	1c53      	adds	r3, r2, #1
 8005e04:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8005e06:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8005e08:	3b01      	subs	r3, #1
 8005e0a:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8005e0c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8005e0e:	3b01      	subs	r3, #1
 8005e10:	b29b      	uxth	r3, r3
 8005e12:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005e14:	6823      	ldr	r3, [r4, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005e16:	691b      	ldr	r3, [r3, #16]
 8005e18:	7053      	strb	r3, [r2, #1]
 8005e1a:	e7d2      	b.n	8005dc2 <HAL_I2C_Mem_Read+0x136>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8005e1c:	f7ff fc3b 	bl	8005696 <I2C_WaitOnFlagUntilTimeout>
 8005e20:	2800      	cmp	r0, #0
 8005e22:	f47f af7e 	bne.w	8005d22 <HAL_I2C_Mem_Read+0x96>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8005e26:	6823      	ldr	r3, [r4, #0]
 8005e28:	681a      	ldr	r2, [r3, #0]
 8005e2a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8005e2e:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005e30:	691a      	ldr	r2, [r3, #16]
 8005e32:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005e34:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8005e36:	6a63      	ldr	r3, [r4, #36]	; 0x24
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8005e38:	9600      	str	r6, [sp, #0]
          hi2c->pBuffPtr++;
 8005e3a:	3301      	adds	r3, #1
 8005e3c:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8005e3e:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8005e40:	3b01      	subs	r3, #1
 8005e42:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8005e44:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8005e46:	3b01      	subs	r3, #1
 8005e48:	b29b      	uxth	r3, r3
 8005e4a:	8563      	strh	r3, [r4, #42]	; 0x2a
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8005e4c:	4602      	mov	r2, r0
 8005e4e:	463b      	mov	r3, r7
 8005e50:	4641      	mov	r1, r8
 8005e52:	4620      	mov	r0, r4
 8005e54:	e7c8      	b.n	8005de8 <HAL_I2C_Mem_Read+0x15c>
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8005e56:	4632      	mov	r2, r6
 8005e58:	4639      	mov	r1, r7
 8005e5a:	4620      	mov	r0, r4
 8005e5c:	f7ff fc88 	bl	8005770 <I2C_WaitOnRXNEFlagUntilTimeout>
 8005e60:	2800      	cmp	r0, #0
 8005e62:	f47f af5e 	bne.w	8005d22 <HAL_I2C_Mem_Read+0x96>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005e66:	6823      	ldr	r3, [r4, #0]
 8005e68:	691a      	ldr	r2, [r3, #16]
 8005e6a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005e6c:	701a      	strb	r2, [r3, #0]
        hi2c->pBuffPtr++;
 8005e6e:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8005e70:	1c53      	adds	r3, r2, #1
 8005e72:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferSize--;
 8005e74:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8005e76:	3b01      	subs	r3, #1
 8005e78:	8523      	strh	r3, [r4, #40]	; 0x28
        hi2c->XferCount--;
 8005e7a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8005e7c:	3b01      	subs	r3, #1
 8005e7e:	b29b      	uxth	r3, r3
 8005e80:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8005e82:	6823      	ldr	r3, [r4, #0]
 8005e84:	6959      	ldr	r1, [r3, #20]
 8005e86:	0749      	lsls	r1, r1, #29
 8005e88:	f57f af5c 	bpl.w	8005d44 <HAL_I2C_Mem_Read+0xb8>
 8005e8c:	e7c3      	b.n	8005e16 <HAL_I2C_Mem_Read+0x18a>
 8005e8e:	bf00      	nop
 8005e90:	00100002 	.word	0x00100002
 8005e94:	ffff0000 	.word	0xffff0000
 8005e98:	00010004 	.word	0x00010004

08005e9c <HAL_I2CEx_ConfigAnalogFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  AnalogFilter new state of the Analog filter.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigAnalogFilter(I2C_HandleTypeDef *hi2c, uint32_t AnalogFilter)
{
 8005e9c:	b510      	push	{r4, lr}
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8005e9e:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8005ea2:	2b20      	cmp	r3, #32
 8005ea4:	b2dc      	uxtb	r4, r3
 8005ea6:	d116      	bne.n	8005ed6 <HAL_I2CEx_ConfigAnalogFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;
 8005ea8:	2324      	movs	r3, #36	; 0x24
 8005eaa:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8005eae:	6803      	ldr	r3, [r0, #0]
 8005eb0:	681a      	ldr	r2, [r3, #0]
 8005eb2:	f022 0201 	bic.w	r2, r2, #1
 8005eb6:	601a      	str	r2, [r3, #0]

    /* Reset I2Cx ANOFF bit */
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 8005eb8:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8005eba:	f022 0210 	bic.w	r2, r2, #16
 8005ebe:	625a      	str	r2, [r3, #36]	; 0x24

    /* Disable the analog filter */
    hi2c->Instance->FLTR |= AnalogFilter;
 8005ec0:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8005ec2:	4311      	orrs	r1, r2
 8005ec4:	6259      	str	r1, [r3, #36]	; 0x24

    __HAL_I2C_ENABLE(hi2c);
 8005ec6:	681a      	ldr	r2, [r3, #0]
 8005ec8:	f042 0201 	orr.w	r2, r2, #1
 8005ecc:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 8005ece:	f880 403d 	strb.w	r4, [r0, #61]	; 0x3d

    return HAL_OK;
 8005ed2:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 8005ed4:	bd10      	pop	{r4, pc}
    return HAL_BUSY;
 8005ed6:	2002      	movs	r0, #2
 8005ed8:	e7fc      	b.n	8005ed4 <HAL_I2CEx_ConfigAnalogFilter+0x38>

08005eda <HAL_I2CEx_ConfigDigitalFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  DigitalFilter Coefficient of digital noise filter between 0x00 and 0x0F.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigDigitalFilter(I2C_HandleTypeDef *hi2c, uint32_t DigitalFilter)
{
 8005eda:	b530      	push	{r4, r5, lr}

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8005edc:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8005ee0:	2b20      	cmp	r3, #32
 8005ee2:	b2dc      	uxtb	r4, r3
 8005ee4:	d116      	bne.n	8005f14 <HAL_I2CEx_ConfigDigitalFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8005ee6:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 8005ee8:	2324      	movs	r3, #36	; 0x24
 8005eea:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 8005eee:	6813      	ldr	r3, [r2, #0]
 8005ef0:	f023 0301 	bic.w	r3, r3, #1
 8005ef4:	6013      	str	r3, [r2, #0]

    /* Get the old register value */
    tmpreg = hi2c->Instance->FLTR;
 8005ef6:	6a55      	ldr	r5, [r2, #36]	; 0x24

    /* Reset I2Cx DNF bit [3:0] */
    tmpreg &= ~(I2C_FLTR_DNF);
 8005ef8:	f64f 73f0 	movw	r3, #65520	; 0xfff0
 8005efc:	402b      	ands	r3, r5

    /* Set I2Cx DNF coefficient */
    tmpreg |= DigitalFilter;
 8005efe:	430b      	orrs	r3, r1

    /* Store the new register value */
    hi2c->Instance->FLTR = tmpreg;
 8005f00:	b29b      	uxth	r3, r3
 8005f02:	6253      	str	r3, [r2, #36]	; 0x24

    __HAL_I2C_ENABLE(hi2c);
 8005f04:	6813      	ldr	r3, [r2, #0]
 8005f06:	f043 0301 	orr.w	r3, r3, #1
 8005f0a:	6013      	str	r3, [r2, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 8005f0c:	f880 403d 	strb.w	r4, [r0, #61]	; 0x3d

    return HAL_OK;
 8005f10:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 8005f12:	bd30      	pop	{r4, r5, pc}
    return HAL_BUSY;
 8005f14:	2002      	movs	r0, #2
 8005f16:	e7fc      	b.n	8005f12 <HAL_I2CEx_ConfigDigitalFilter+0x38>

08005f18 <LTDC_SetConfig>:
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8005f18:	6800      	ldr	r0, [r0, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8005f1a:	f8d1 c000 	ldr.w	ip, [r1]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8005f1e:	01d2      	lsls	r2, r2, #7
 8005f20:	3284      	adds	r2, #132	; 0x84
 8005f22:	1883      	adds	r3, r0, r2
{
 8005f24:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8005f28:	68c6      	ldr	r6, [r0, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8005f2a:	685d      	ldr	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8005f2c:	684c      	ldr	r4, [r1, #4]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 8005f2e:	f8d1 9018 	ldr.w	r9, [r1, #24]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8005f32:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
 8005f36:	605d      	str	r5, [r3, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8005f38:	68c5      	ldr	r5, [r0, #12]
 8005f3a:	f10c 0701 	add.w	r7, ip, #1
 8005f3e:	f3c5 450b 	ubfx	r5, r5, #16, #12
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8005f42:	f3c6 460b 	ubfx	r6, r6, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8005f46:	443d      	add	r5, r7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8005f48:	4426      	add	r6, r4
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8005f4a:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
 8005f4e:	605d      	str	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 8005f50:	68c5      	ldr	r5, [r0, #12]
 8005f52:	68ce      	ldr	r6, [r1, #12]
 8005f54:	f3c5 050a 	ubfx	r5, r5, #0, #11
 8005f58:	442e      	add	r6, r5
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 8005f5a:	689d      	ldr	r5, [r3, #8]
 8005f5c:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
 8005f60:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 8005f62:	68c7      	ldr	r7, [r0, #12]
 8005f64:	688d      	ldr	r5, [r1, #8]
 8005f66:	f3c7 070a 	ubfx	r7, r7, #0, #11
 8005f6a:	3501      	adds	r5, #1
 8005f6c:	443d      	add	r5, r7
 8005f6e:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
 8005f72:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8005f74:	691d      	ldr	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8005f76:	690e      	ldr	r6, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8005f78:	f025 0507 	bic.w	r5, r5, #7
 8005f7c:	611d      	str	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 8005f7e:	f04f 0e00 	mov.w	lr, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8005f82:	611e      	str	r6, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 8005f84:	699d      	ldr	r5, [r3, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 8005f86:	f891 7032 	ldrb.w	r7, [r1, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 8005f8a:	f891 8031 	ldrb.w	r8, [r1, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 8005f8e:	f8c3 e018 	str.w	lr, [r3, #24]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 8005f92:	f891 5030 	ldrb.w	r5, [r1, #48]	; 0x30
 8005f96:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
 8005f9a:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
 8005f9e:	ea45 4507 	orr.w	r5, r5, r7, lsl #16
 8005fa2:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 8005fa4:	695d      	ldr	r5, [r3, #20]
 8005fa6:	f025 05ff 	bic.w	r5, r5, #255	; 0xff
 8005faa:	615d      	str	r5, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 8005fac:	694d      	ldr	r5, [r1, #20]
 8005fae:	615d      	str	r5, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 8005fb0:	69dd      	ldr	r5, [r3, #28]
 8005fb2:	f425 65e0 	bic.w	r5, r5, #1792	; 0x700
 8005fb6:	f025 0507 	bic.w	r5, r5, #7
 8005fba:	61dd      	str	r5, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 8005fbc:	e9d1 5707 	ldrd	r5, r7, [r1, #28]
 8005fc0:	433d      	orrs	r5, r7
 8005fc2:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8005fc4:	6a9d      	ldr	r5, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8005fc6:	6a4d      	ldr	r5, [r1, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8005fc8:	f8c3 e028 	str.w	lr, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8005fcc:	629d      	str	r5, [r3, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 8005fce:	b31e      	cbz	r6, 8006018 <LTDC_SetConfig+0x100>
  {
    tmp = 4U;
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 8005fd0:	2e01      	cmp	r6, #1
 8005fd2:	d023      	beq.n	800601c <LTDC_SetConfig+0x104>
  {
    tmp = 3U;
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 8005fd4:	1eb5      	subs	r5, r6, #2
 8005fd6:	2d02      	cmp	r5, #2
 8005fd8:	d922      	bls.n	8006020 <LTDC_SetConfig+0x108>
  {
    tmp = 2U;
  }
  else
  {
    tmp = 1U;
 8005fda:	2e07      	cmp	r6, #7
 8005fdc:	bf0c      	ite	eq
 8005fde:	2502      	moveq	r5, #2
 8005fe0:	2501      	movne	r5, #1
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 8005fe2:	6ade      	ldr	r6, [r3, #44]	; 0x2c
 8005fe4:	f006 26e0 	and.w	r6, r6, #3758153728	; 0xe000e000
 8005fe8:	62de      	str	r6, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8005fea:	eba4 040c 	sub.w	r4, r4, ip
 8005fee:	6a8e      	ldr	r6, [r1, #40]	; 0x28
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8005ff0:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8005ff2:	436c      	muls	r4, r5
 8005ff4:	436e      	muls	r6, r5
 8005ff6:	3403      	adds	r4, #3
 8005ff8:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
 8005ffc:	62dc      	str	r4, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 8005ffe:	6b1c      	ldr	r4, [r3, #48]	; 0x30
 8006000:	f424 64ff 	bic.w	r4, r4, #2040	; 0x7f8
 8006004:	f024 0407 	bic.w	r4, r4, #7
 8006008:	631c      	str	r4, [r3, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800600a:	6319      	str	r1, [r3, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800600c:	5883      	ldr	r3, [r0, r2]
 800600e:	f043 0301 	orr.w	r3, r3, #1
 8006012:	5083      	str	r3, [r0, r2]
}
 8006014:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    tmp = 4U;
 8006018:	2504      	movs	r5, #4
 800601a:	e7e2      	b.n	8005fe2 <LTDC_SetConfig+0xca>
    tmp = 3U;
 800601c:	2503      	movs	r5, #3
 800601e:	e7e0      	b.n	8005fe2 <LTDC_SetConfig+0xca>
    tmp = 2U;
 8006020:	2502      	movs	r5, #2
 8006022:	e7de      	b.n	8005fe2 <LTDC_SetConfig+0xca>

08006024 <HAL_LTDC_Init>:
{
 8006024:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 8006026:	4604      	mov	r4, r0
 8006028:	2800      	cmp	r0, #0
 800602a:	d063      	beq.n	80060f4 <HAL_LTDC_Init+0xd0>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 800602c:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 8006030:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8006034:	b91b      	cbnz	r3, 800603e <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 8006036:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 800603a:	f7fb fda5 	bl	8001b88 <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800603e:	2302      	movs	r3, #2
 8006040:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 8006044:	6823      	ldr	r3, [r4, #0]
 8006046:	699a      	ldr	r2, [r3, #24]
 8006048:	f022 4270 	bic.w	r2, r2, #4026531840	; 0xf0000000
 800604c:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800604e:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 8006052:	4302      	orrs	r2, r0
 8006054:	68e0      	ldr	r0, [r4, #12]
 8006056:	6999      	ldr	r1, [r3, #24]
 8006058:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800605a:	6920      	ldr	r0, [r4, #16]
 800605c:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800605e:	430a      	orrs	r2, r1
 8006060:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8006062:	689a      	ldr	r2, [r3, #8]
 8006064:	4924      	ldr	r1, [pc, #144]	; (80060f8 <HAL_LTDC_Init+0xd4>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 8006066:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8006068:	400a      	ands	r2, r1
 800606a:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 800606c:	689a      	ldr	r2, [r3, #8]
 800606e:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8006072:	69a0      	ldr	r0, [r4, #24]
 8006074:	4302      	orrs	r2, r0
 8006076:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8006078:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 800607a:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800607c:	400a      	ands	r2, r1
 800607e:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 8006080:	68da      	ldr	r2, [r3, #12]
 8006082:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8006086:	6a20      	ldr	r0, [r4, #32]
 8006088:	4302      	orrs	r2, r0
 800608a:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800608c:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 800608e:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8006090:	400a      	ands	r2, r1
 8006092:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 8006094:	691a      	ldr	r2, [r3, #16]
 8006096:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800609a:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800609c:	4302      	orrs	r2, r0
 800609e:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 80060a0:	695a      	ldr	r2, [r3, #20]
 80060a2:	4011      	ands	r1, r2
 80060a4:	6159      	str	r1, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 80060a6:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 80060a8:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 80060aa:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 80060ae:	6b21      	ldr	r1, [r4, #48]	; 0x30
 80060b0:	430a      	orrs	r2, r1
 80060b2:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 80060b4:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 80060b6:	f894 0036 	ldrb.w	r0, [r4, #54]	; 0x36
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 80060ba:	f894 5035 	ldrb.w	r5, [r4, #53]	; 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 80060be:	f001 417f 	and.w	r1, r1, #4278190080	; 0xff000000
 80060c2:	62d9      	str	r1, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 80060c4:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 80060c6:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 80060ca:	430a      	orrs	r2, r1
 80060cc:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 80060d0:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80060d4:	62da      	str	r2, [r3, #44]	; 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 80060d6:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80060d8:	f042 0206 	orr.w	r2, r2, #6
 80060dc:	635a      	str	r2, [r3, #52]	; 0x34
  __HAL_LTDC_ENABLE(hltdc);
 80060de:	699a      	ldr	r2, [r3, #24]
 80060e0:	f042 0201 	orr.w	r2, r2, #1
 80060e4:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 80060e6:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 80060e8:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 80060ea:	f8c4 00a4 	str.w	r0, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 80060ee:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
}
 80060f2:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 80060f4:	2001      	movs	r0, #1
 80060f6:	e7fc      	b.n	80060f2 <HAL_LTDC_Init+0xce>
 80060f8:	f000f800 	.word	0xf000f800

080060fc <HAL_LTDC_ErrorCallback>:
 80060fc:	4770      	bx	lr

080060fe <HAL_LTDC_ReloadEventCallback>:
 80060fe:	4770      	bx	lr

08006100 <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8006100:	6803      	ldr	r3, [r0, #0]
{
 8006102:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8006104:	6b9e      	ldr	r6, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 8006106:	6b5d      	ldr	r5, [r3, #52]	; 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 8006108:	0772      	lsls	r2, r6, #29
{
 800610a:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800610c:	d514      	bpl.n	8006138 <HAL_LTDC_IRQHandler+0x38>
 800610e:	0769      	lsls	r1, r5, #29
 8006110:	d512      	bpl.n	8006138 <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 8006112:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8006114:	f022 0204 	bic.w	r2, r2, #4
 8006118:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 800611a:	2204      	movs	r2, #4
 800611c:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 800611e:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 8006122:	f043 0301 	orr.w	r3, r3, #1
 8006126:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 800612a:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800612c:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8006130:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8006134:	f7ff ffe2 	bl	80060fc <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 8006138:	07b2      	lsls	r2, r6, #30
 800613a:	d516      	bpl.n	800616a <HAL_LTDC_IRQHandler+0x6a>
 800613c:	07ab      	lsls	r3, r5, #30
 800613e:	d514      	bpl.n	800616a <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 8006140:	6823      	ldr	r3, [r4, #0]
 8006142:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8006144:	f022 0202 	bic.w	r2, r2, #2
 8006148:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 800614a:	2202      	movs	r2, #2
 800614c:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 800614e:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 8006152:	4313      	orrs	r3, r2
 8006154:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8006158:	2304      	movs	r3, #4
 800615a:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800615e:	2300      	movs	r3, #0
 8006160:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8006164:	4620      	mov	r0, r4
 8006166:	f7ff ffc9 	bl	80060fc <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 800616a:	07f0      	lsls	r0, r6, #31
 800616c:	d510      	bpl.n	8006190 <HAL_LTDC_IRQHandler+0x90>
 800616e:	07e9      	lsls	r1, r5, #31
 8006170:	d50e      	bpl.n	8006190 <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8006172:	6823      	ldr	r3, [r4, #0]
 8006174:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8006176:	f022 0201 	bic.w	r2, r2, #1
 800617a:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 800617c:	2201      	movs	r2, #1
 800617e:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 8006180:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 8006182:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8006186:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 800618a:	4620      	mov	r0, r4
 800618c:	f7fa ffc0 	bl	8001110 <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 8006190:	0732      	lsls	r2, r6, #28
 8006192:	d511      	bpl.n	80061b8 <HAL_LTDC_IRQHandler+0xb8>
 8006194:	072b      	lsls	r3, r5, #28
 8006196:	d50f      	bpl.n	80061b8 <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 8006198:	6823      	ldr	r3, [r4, #0]
 800619a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800619c:	f022 0208 	bic.w	r2, r2, #8
 80061a0:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 80061a2:	2208      	movs	r2, #8
 80061a4:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 80061a6:	2301      	movs	r3, #1
 80061a8:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 80061ac:	2300      	movs	r3, #0
 80061ae:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 80061b2:	4620      	mov	r0, r4
 80061b4:	f7ff ffa3 	bl	80060fe <HAL_LTDC_ReloadEventCallback>
}
 80061b8:	bd70      	pop	{r4, r5, r6, pc}

080061ba <HAL_LTDC_ConfigLayer>:
{
 80061ba:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __HAL_LOCK(hltdc);
 80061be:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 80061c2:	2b01      	cmp	r3, #1
{
 80061c4:	4606      	mov	r6, r0
 80061c6:	460f      	mov	r7, r1
 80061c8:	4694      	mov	ip, r2
 80061ca:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 80061ce:	d01f      	beq.n	8006210 <HAL_LTDC_ConfigLayer+0x56>
 80061d0:	f04f 0801 	mov.w	r8, #1
 80061d4:	f886 80a0 	strb.w	r8, [r6, #160]	; 0xa0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 80061d8:	f886 00a1 	strb.w	r0, [r6, #161]	; 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 80061dc:	2434      	movs	r4, #52	; 0x34
 80061de:	460d      	mov	r5, r1
 80061e0:	fb04 6402 	mla	r4, r4, r2, r6
 80061e4:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80061e6:	3438      	adds	r4, #56	; 0x38
 80061e8:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80061ea:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80061ec:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80061ee:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80061f0:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80061f2:	682b      	ldr	r3, [r5, #0]
 80061f4:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 80061f6:	4630      	mov	r0, r6
 80061f8:	4662      	mov	r2, ip
 80061fa:	4639      	mov	r1, r7
 80061fc:	f7ff fe8c 	bl	8005f18 <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8006200:	6833      	ldr	r3, [r6, #0]
  __HAL_UNLOCK(hltdc);
 8006202:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8006204:	f8c3 8024 	str.w	r8, [r3, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 8006208:	f886 80a1 	strb.w	r8, [r6, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800620c:	f886 00a0 	strb.w	r0, [r6, #160]	; 0xa0
}
 8006210:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08006214 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 8006214:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 8006218:	2b01      	cmp	r3, #1
 800621a:	f04f 0302 	mov.w	r3, #2
 800621e:	d012      	beq.n	8006246 <HAL_LTDC_ProgramLineEvent+0x32>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8006220:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8006224:	6803      	ldr	r3, [r0, #0]
 8006226:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8006228:	f022 0201 	bic.w	r2, r2, #1
 800622c:	635a      	str	r2, [r3, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 800622e:	4a07      	ldr	r2, [pc, #28]	; (800624c <HAL_LTDC_ProgramLineEvent+0x38>)
 8006230:	6411      	str	r1, [r2, #64]	; 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 8006232:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8006234:	f042 0201 	orr.w	r2, r2, #1
 8006238:	635a      	str	r2, [r3, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
 800623a:	2301      	movs	r3, #1
 800623c:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 8006240:	2300      	movs	r3, #0
 8006242:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
  __HAL_LOCK(hltdc);
 8006246:	4618      	mov	r0, r3
}
 8006248:	4770      	bx	lr
 800624a:	bf00      	nop
 800624c:	40016800 	.word	0x40016800

08006250 <HAL_RCC_OscConfig>:
  *         supported by this API. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8006250:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 8006254:	4604      	mov	r4, r0
 8006256:	b340      	cbz	r0, 80062aa <HAL_RCC_OscConfig+0x5a>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8006258:	6803      	ldr	r3, [r0, #0]
 800625a:	07dd      	lsls	r5, r3, #31
 800625c:	d410      	bmi.n	8006280 <HAL_RCC_OscConfig+0x30>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 800625e:	6823      	ldr	r3, [r4, #0]
 8006260:	0798      	lsls	r0, r3, #30
 8006262:	d45e      	bmi.n	8006322 <HAL_RCC_OscConfig+0xd2>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8006264:	6823      	ldr	r3, [r4, #0]
 8006266:	071a      	lsls	r2, r3, #28
 8006268:	f100 80a0 	bmi.w	80063ac <HAL_RCC_OscConfig+0x15c>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800626c:	6823      	ldr	r3, [r4, #0]
 800626e:	075b      	lsls	r3, r3, #29
 8006270:	f100 80c0 	bmi.w	80063f4 <HAL_RCC_OscConfig+0x1a4>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8006274:	69a0      	ldr	r0, [r4, #24]
 8006276:	2800      	cmp	r0, #0
 8006278:	f040 8128 	bne.w	80064cc <HAL_RCC_OscConfig+0x27c>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 800627c:	2000      	movs	r0, #0
 800627e:	e02b      	b.n	80062d8 <HAL_RCC_OscConfig+0x88>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 8006280:	4b8f      	ldr	r3, [pc, #572]	; (80064c0 <HAL_RCC_OscConfig+0x270>)
 8006282:	689a      	ldr	r2, [r3, #8]
 8006284:	f002 020c 	and.w	r2, r2, #12
 8006288:	2a04      	cmp	r2, #4
 800628a:	d007      	beq.n	800629c <HAL_RCC_OscConfig+0x4c>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800628c:	689a      	ldr	r2, [r3, #8]
 800628e:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 8006292:	2a08      	cmp	r2, #8
 8006294:	d10b      	bne.n	80062ae <HAL_RCC_OscConfig+0x5e>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8006296:	685a      	ldr	r2, [r3, #4]
 8006298:	0251      	lsls	r1, r2, #9
 800629a:	d508      	bpl.n	80062ae <HAL_RCC_OscConfig+0x5e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800629c:	4b88      	ldr	r3, [pc, #544]	; (80064c0 <HAL_RCC_OscConfig+0x270>)
 800629e:	681b      	ldr	r3, [r3, #0]
 80062a0:	039a      	lsls	r2, r3, #14
 80062a2:	d5dc      	bpl.n	800625e <HAL_RCC_OscConfig+0xe>
 80062a4:	6863      	ldr	r3, [r4, #4]
 80062a6:	2b00      	cmp	r3, #0
 80062a8:	d1d9      	bne.n	800625e <HAL_RCC_OscConfig+0xe>
          return HAL_ERROR;
 80062aa:	2001      	movs	r0, #1
 80062ac:	e014      	b.n	80062d8 <HAL_RCC_OscConfig+0x88>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80062ae:	6862      	ldr	r2, [r4, #4]
 80062b0:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
 80062b4:	d113      	bne.n	80062de <HAL_RCC_OscConfig+0x8e>
 80062b6:	681a      	ldr	r2, [r3, #0]
 80062b8:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 80062bc:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 80062be:	f7fe fcef 	bl	8004ca0 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80062c2:	4e7f      	ldr	r6, [pc, #508]	; (80064c0 <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 80062c4:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80062c6:	6833      	ldr	r3, [r6, #0]
 80062c8:	039b      	lsls	r3, r3, #14
 80062ca:	d4c8      	bmi.n	800625e <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 80062cc:	f7fe fce8 	bl	8004ca0 <HAL_GetTick>
 80062d0:	1b40      	subs	r0, r0, r5
 80062d2:	2864      	cmp	r0, #100	; 0x64
 80062d4:	d9f7      	bls.n	80062c6 <HAL_RCC_OscConfig+0x76>
            return HAL_TIMEOUT;
 80062d6:	2003      	movs	r0, #3
}
 80062d8:	b002      	add	sp, #8
 80062da:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80062de:	4d78      	ldr	r5, [pc, #480]	; (80064c0 <HAL_RCC_OscConfig+0x270>)
 80062e0:	f5b2 2fa0 	cmp.w	r2, #327680	; 0x50000
 80062e4:	682b      	ldr	r3, [r5, #0]
 80062e6:	d107      	bne.n	80062f8 <HAL_RCC_OscConfig+0xa8>
 80062e8:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 80062ec:	602b      	str	r3, [r5, #0]
 80062ee:	682b      	ldr	r3, [r5, #0]
 80062f0:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80062f4:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 80062f6:	e7e2      	b.n	80062be <HAL_RCC_OscConfig+0x6e>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80062f8:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80062fc:	602b      	str	r3, [r5, #0]
 80062fe:	682b      	ldr	r3, [r5, #0]
 8006300:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8006304:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 8006306:	2a00      	cmp	r2, #0
 8006308:	d1d9      	bne.n	80062be <HAL_RCC_OscConfig+0x6e>
        tickstart = HAL_GetTick();
 800630a:	f7fe fcc9 	bl	8004ca0 <HAL_GetTick>
 800630e:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8006310:	682b      	ldr	r3, [r5, #0]
 8006312:	039f      	lsls	r7, r3, #14
 8006314:	d5a3      	bpl.n	800625e <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8006316:	f7fe fcc3 	bl	8004ca0 <HAL_GetTick>
 800631a:	1b80      	subs	r0, r0, r6
 800631c:	2864      	cmp	r0, #100	; 0x64
 800631e:	d9f7      	bls.n	8006310 <HAL_RCC_OscConfig+0xc0>
 8006320:	e7d9      	b.n	80062d6 <HAL_RCC_OscConfig+0x86>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 8006322:	4b67      	ldr	r3, [pc, #412]	; (80064c0 <HAL_RCC_OscConfig+0x270>)
 8006324:	689a      	ldr	r2, [r3, #8]
 8006326:	f012 0f0c 	tst.w	r2, #12
 800632a:	d007      	beq.n	800633c <HAL_RCC_OscConfig+0xec>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800632c:	689a      	ldr	r2, [r3, #8]
 800632e:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 8006332:	2a08      	cmp	r2, #8
 8006334:	d111      	bne.n	800635a <HAL_RCC_OscConfig+0x10a>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8006336:	685b      	ldr	r3, [r3, #4]
 8006338:	025e      	lsls	r6, r3, #9
 800633a:	d40e      	bmi.n	800635a <HAL_RCC_OscConfig+0x10a>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800633c:	4a60      	ldr	r2, [pc, #384]	; (80064c0 <HAL_RCC_OscConfig+0x270>)
 800633e:	6813      	ldr	r3, [r2, #0]
 8006340:	079d      	lsls	r5, r3, #30
 8006342:	d502      	bpl.n	800634a <HAL_RCC_OscConfig+0xfa>
 8006344:	68e3      	ldr	r3, [r4, #12]
 8006346:	2b01      	cmp	r3, #1
 8006348:	d1af      	bne.n	80062aa <HAL_RCC_OscConfig+0x5a>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800634a:	6813      	ldr	r3, [r2, #0]
 800634c:	6921      	ldr	r1, [r4, #16]
 800634e:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 8006352:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8006356:	6013      	str	r3, [r2, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8006358:	e784      	b.n	8006264 <HAL_RCC_OscConfig+0x14>
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 800635a:	68e2      	ldr	r2, [r4, #12]
 800635c:	4b59      	ldr	r3, [pc, #356]	; (80064c4 <HAL_RCC_OscConfig+0x274>)
 800635e:	b1b2      	cbz	r2, 800638e <HAL_RCC_OscConfig+0x13e>
        __HAL_RCC_HSI_ENABLE();
 8006360:	2201      	movs	r2, #1
 8006362:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8006364:	f7fe fc9c 	bl	8004ca0 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8006368:	4d55      	ldr	r5, [pc, #340]	; (80064c0 <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 800636a:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800636c:	682b      	ldr	r3, [r5, #0]
 800636e:	0798      	lsls	r0, r3, #30
 8006370:	d507      	bpl.n	8006382 <HAL_RCC_OscConfig+0x132>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8006372:	682b      	ldr	r3, [r5, #0]
 8006374:	6922      	ldr	r2, [r4, #16]
 8006376:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 800637a:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800637e:	602b      	str	r3, [r5, #0]
 8006380:	e770      	b.n	8006264 <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8006382:	f7fe fc8d 	bl	8004ca0 <HAL_GetTick>
 8006386:	1b80      	subs	r0, r0, r6
 8006388:	2802      	cmp	r0, #2
 800638a:	d9ef      	bls.n	800636c <HAL_RCC_OscConfig+0x11c>
 800638c:	e7a3      	b.n	80062d6 <HAL_RCC_OscConfig+0x86>
        __HAL_RCC_HSI_DISABLE();
 800638e:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8006390:	f7fe fc86 	bl	8004ca0 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8006394:	4e4a      	ldr	r6, [pc, #296]	; (80064c0 <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 8006396:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8006398:	6833      	ldr	r3, [r6, #0]
 800639a:	0799      	lsls	r1, r3, #30
 800639c:	f57f af62 	bpl.w	8006264 <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 80063a0:	f7fe fc7e 	bl	8004ca0 <HAL_GetTick>
 80063a4:	1b40      	subs	r0, r0, r5
 80063a6:	2802      	cmp	r0, #2
 80063a8:	d9f6      	bls.n	8006398 <HAL_RCC_OscConfig+0x148>
 80063aa:	e794      	b.n	80062d6 <HAL_RCC_OscConfig+0x86>
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 80063ac:	6962      	ldr	r2, [r4, #20]
 80063ae:	4b45      	ldr	r3, [pc, #276]	; (80064c4 <HAL_RCC_OscConfig+0x274>)
 80063b0:	b182      	cbz	r2, 80063d4 <HAL_RCC_OscConfig+0x184>
      __HAL_RCC_LSI_ENABLE();
 80063b2:	2201      	movs	r2, #1
 80063b4:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 80063b8:	f7fe fc72 	bl	8004ca0 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 80063bc:	4e40      	ldr	r6, [pc, #256]	; (80064c0 <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 80063be:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 80063c0:	6f73      	ldr	r3, [r6, #116]	; 0x74
 80063c2:	079f      	lsls	r7, r3, #30
 80063c4:	f53f af52 	bmi.w	800626c <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 80063c8:	f7fe fc6a 	bl	8004ca0 <HAL_GetTick>
 80063cc:	1b40      	subs	r0, r0, r5
 80063ce:	2802      	cmp	r0, #2
 80063d0:	d9f6      	bls.n	80063c0 <HAL_RCC_OscConfig+0x170>
 80063d2:	e780      	b.n	80062d6 <HAL_RCC_OscConfig+0x86>
      __HAL_RCC_LSI_DISABLE();
 80063d4:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 80063d8:	f7fe fc62 	bl	8004ca0 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 80063dc:	4e38      	ldr	r6, [pc, #224]	; (80064c0 <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 80063de:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 80063e0:	6f73      	ldr	r3, [r6, #116]	; 0x74
 80063e2:	0798      	lsls	r0, r3, #30
 80063e4:	f57f af42 	bpl.w	800626c <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 80063e8:	f7fe fc5a 	bl	8004ca0 <HAL_GetTick>
 80063ec:	1b40      	subs	r0, r0, r5
 80063ee:	2802      	cmp	r0, #2
 80063f0:	d9f6      	bls.n	80063e0 <HAL_RCC_OscConfig+0x190>
 80063f2:	e770      	b.n	80062d6 <HAL_RCC_OscConfig+0x86>
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 80063f4:	4b32      	ldr	r3, [pc, #200]	; (80064c0 <HAL_RCC_OscConfig+0x270>)
 80063f6:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80063f8:	f012 5280 	ands.w	r2, r2, #268435456	; 0x10000000
 80063fc:	d128      	bne.n	8006450 <HAL_RCC_OscConfig+0x200>
      __HAL_RCC_PWR_CLK_ENABLE();
 80063fe:	9201      	str	r2, [sp, #4]
 8006400:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8006402:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8006406:	641a      	str	r2, [r3, #64]	; 0x40
 8006408:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800640a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800640e:	9301      	str	r3, [sp, #4]
 8006410:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 8006412:	2701      	movs	r7, #1
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8006414:	4d2c      	ldr	r5, [pc, #176]	; (80064c8 <HAL_RCC_OscConfig+0x278>)
 8006416:	682b      	ldr	r3, [r5, #0]
 8006418:	05d9      	lsls	r1, r3, #23
 800641a:	d51b      	bpl.n	8006454 <HAL_RCC_OscConfig+0x204>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800641c:	68a3      	ldr	r3, [r4, #8]
 800641e:	4d28      	ldr	r5, [pc, #160]	; (80064c0 <HAL_RCC_OscConfig+0x270>)
 8006420:	2b01      	cmp	r3, #1
 8006422:	d127      	bne.n	8006474 <HAL_RCC_OscConfig+0x224>
 8006424:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8006426:	f043 0301 	orr.w	r3, r3, #1
 800642a:	672b      	str	r3, [r5, #112]	; 0x70
      tickstart = HAL_GetTick();
 800642c:	f7fe fc38 	bl	8004ca0 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8006430:	4e23      	ldr	r6, [pc, #140]	; (80064c0 <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 8006432:	4605      	mov	r5, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8006434:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8006438:	6f33      	ldr	r3, [r6, #112]	; 0x70
 800643a:	079b      	lsls	r3, r3, #30
 800643c:	d539      	bpl.n	80064b2 <HAL_RCC_OscConfig+0x262>
    if(pwrclkchanged == SET)
 800643e:	2f00      	cmp	r7, #0
 8006440:	f43f af18 	beq.w	8006274 <HAL_RCC_OscConfig+0x24>
      __HAL_RCC_PWR_CLK_DISABLE();
 8006444:	4a1e      	ldr	r2, [pc, #120]	; (80064c0 <HAL_RCC_OscConfig+0x270>)
 8006446:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8006448:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800644c:	6413      	str	r3, [r2, #64]	; 0x40
 800644e:	e711      	b.n	8006274 <HAL_RCC_OscConfig+0x24>
    FlagStatus       pwrclkchanged = RESET;
 8006450:	2700      	movs	r7, #0
 8006452:	e7df      	b.n	8006414 <HAL_RCC_OscConfig+0x1c4>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8006454:	682b      	ldr	r3, [r5, #0]
 8006456:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800645a:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 800645c:	f7fe fc20 	bl	8004ca0 <HAL_GetTick>
 8006460:	4606      	mov	r6, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8006462:	682b      	ldr	r3, [r5, #0]
 8006464:	05da      	lsls	r2, r3, #23
 8006466:	d4d9      	bmi.n	800641c <HAL_RCC_OscConfig+0x1cc>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8006468:	f7fe fc1a 	bl	8004ca0 <HAL_GetTick>
 800646c:	1b80      	subs	r0, r0, r6
 800646e:	2802      	cmp	r0, #2
 8006470:	d9f7      	bls.n	8006462 <HAL_RCC_OscConfig+0x212>
 8006472:	e730      	b.n	80062d6 <HAL_RCC_OscConfig+0x86>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8006474:	2b05      	cmp	r3, #5
 8006476:	d104      	bne.n	8006482 <HAL_RCC_OscConfig+0x232>
 8006478:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800647a:	f043 0304 	orr.w	r3, r3, #4
 800647e:	672b      	str	r3, [r5, #112]	; 0x70
 8006480:	e7d0      	b.n	8006424 <HAL_RCC_OscConfig+0x1d4>
 8006482:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 8006484:	f022 0201 	bic.w	r2, r2, #1
 8006488:	672a      	str	r2, [r5, #112]	; 0x70
 800648a:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 800648c:	f022 0204 	bic.w	r2, r2, #4
 8006490:	672a      	str	r2, [r5, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 8006492:	2b00      	cmp	r3, #0
 8006494:	d1ca      	bne.n	800642c <HAL_RCC_OscConfig+0x1dc>
      tickstart = HAL_GetTick();
 8006496:	f7fe fc03 	bl	8004ca0 <HAL_GetTick>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800649a:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 800649e:	4606      	mov	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 80064a0:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 80064a2:	0798      	lsls	r0, r3, #30
 80064a4:	d5cb      	bpl.n	800643e <HAL_RCC_OscConfig+0x1ee>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80064a6:	f7fe fbfb 	bl	8004ca0 <HAL_GetTick>
 80064aa:	1b80      	subs	r0, r0, r6
 80064ac:	4540      	cmp	r0, r8
 80064ae:	d9f7      	bls.n	80064a0 <HAL_RCC_OscConfig+0x250>
 80064b0:	e711      	b.n	80062d6 <HAL_RCC_OscConfig+0x86>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80064b2:	f7fe fbf5 	bl	8004ca0 <HAL_GetTick>
 80064b6:	1b40      	subs	r0, r0, r5
 80064b8:	4540      	cmp	r0, r8
 80064ba:	d9bd      	bls.n	8006438 <HAL_RCC_OscConfig+0x1e8>
 80064bc:	e70b      	b.n	80062d6 <HAL_RCC_OscConfig+0x86>
 80064be:	bf00      	nop
 80064c0:	40023800 	.word	0x40023800
 80064c4:	42470000 	.word	0x42470000
 80064c8:	40007000 	.word	0x40007000
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 80064cc:	4d33      	ldr	r5, [pc, #204]	; (800659c <HAL_RCC_OscConfig+0x34c>)
 80064ce:	68ab      	ldr	r3, [r5, #8]
 80064d0:	f003 030c 	and.w	r3, r3, #12
 80064d4:	2b08      	cmp	r3, #8
 80064d6:	d03d      	beq.n	8006554 <HAL_RCC_OscConfig+0x304>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 80064d8:	4b31      	ldr	r3, [pc, #196]	; (80065a0 <HAL_RCC_OscConfig+0x350>)
 80064da:	2200      	movs	r2, #0
 80064dc:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 80064de:	661a      	str	r2, [r3, #96]	; 0x60
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 80064e0:	d12b      	bne.n	800653a <HAL_RCC_OscConfig+0x2ea>
        tickstart = HAL_GetTick();
 80064e2:	f7fe fbdd 	bl	8004ca0 <HAL_GetTick>
 80064e6:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 80064e8:	682b      	ldr	r3, [r5, #0]
 80064ea:	0199      	lsls	r1, r3, #6
 80064ec:	d41f      	bmi.n	800652e <HAL_RCC_OscConfig+0x2de>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 80064ee:	e9d4 3207 	ldrd	r3, r2, [r4, #28]
 80064f2:	4313      	orrs	r3, r2
 80064f4:	6a62      	ldr	r2, [r4, #36]	; 0x24
 80064f6:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 80064fa:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80064fc:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8006500:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8006502:	0852      	lsrs	r2, r2, #1
 8006504:	3a01      	subs	r2, #1
 8006506:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800650a:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 800650c:	4b24      	ldr	r3, [pc, #144]	; (80065a0 <HAL_RCC_OscConfig+0x350>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800650e:	4d23      	ldr	r5, [pc, #140]	; (800659c <HAL_RCC_OscConfig+0x34c>)
        __HAL_RCC_PLL_ENABLE();
 8006510:	2201      	movs	r2, #1
 8006512:	661a      	str	r2, [r3, #96]	; 0x60
        tickstart = HAL_GetTick();
 8006514:	f7fe fbc4 	bl	8004ca0 <HAL_GetTick>
 8006518:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800651a:	682b      	ldr	r3, [r5, #0]
 800651c:	019a      	lsls	r2, r3, #6
 800651e:	f53f aead 	bmi.w	800627c <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8006522:	f7fe fbbd 	bl	8004ca0 <HAL_GetTick>
 8006526:	1b00      	subs	r0, r0, r4
 8006528:	2802      	cmp	r0, #2
 800652a:	d9f6      	bls.n	800651a <HAL_RCC_OscConfig+0x2ca>
 800652c:	e6d3      	b.n	80062d6 <HAL_RCC_OscConfig+0x86>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800652e:	f7fe fbb7 	bl	8004ca0 <HAL_GetTick>
 8006532:	1b80      	subs	r0, r0, r6
 8006534:	2802      	cmp	r0, #2
 8006536:	d9d7      	bls.n	80064e8 <HAL_RCC_OscConfig+0x298>
 8006538:	e6cd      	b.n	80062d6 <HAL_RCC_OscConfig+0x86>
        tickstart = HAL_GetTick();
 800653a:	f7fe fbb1 	bl	8004ca0 <HAL_GetTick>
 800653e:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8006540:	682b      	ldr	r3, [r5, #0]
 8006542:	019b      	lsls	r3, r3, #6
 8006544:	f57f ae9a 	bpl.w	800627c <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8006548:	f7fe fbaa 	bl	8004ca0 <HAL_GetTick>
 800654c:	1b00      	subs	r0, r0, r4
 800654e:	2802      	cmp	r0, #2
 8006550:	d9f6      	bls.n	8006540 <HAL_RCC_OscConfig+0x2f0>
 8006552:	e6c0      	b.n	80062d6 <HAL_RCC_OscConfig+0x86>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 8006554:	2801      	cmp	r0, #1
 8006556:	f43f aebf 	beq.w	80062d8 <HAL_RCC_OscConfig+0x88>
        pll_config = RCC->PLLCFGR;
 800655a:	686b      	ldr	r3, [r5, #4]
        if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800655c:	69e2      	ldr	r2, [r4, #28]
 800655e:	f403 0180 	and.w	r1, r3, #4194304	; 0x400000
 8006562:	4291      	cmp	r1, r2
 8006564:	f47f aea1 	bne.w	80062aa <HAL_RCC_OscConfig+0x5a>
 8006568:	6a21      	ldr	r1, [r4, #32]
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 800656a:	f003 023f 	and.w	r2, r3, #63	; 0x3f
        if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800656e:	428a      	cmp	r2, r1
 8006570:	f47f ae9b 	bne.w	80062aa <HAL_RCC_OscConfig+0x5a>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 8006574:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8006576:	f647 72c0 	movw	r2, #32704	; 0x7fc0
 800657a:	401a      	ands	r2, r3
 800657c:	428a      	cmp	r2, r1
 800657e:	f47f ae94 	bne.w	80062aa <HAL_RCC_OscConfig+0x5a>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != RCC_OscInitStruct->PLL.PLLN) ||
 8006582:	6aa1      	ldr	r1, [r4, #40]	; 0x28
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 8006584:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != RCC_OscInitStruct->PLL.PLLN) ||
 8006588:	428a      	cmp	r2, r1
 800658a:	f47f ae8e 	bne.w	80062aa <HAL_RCC_OscConfig+0x5a>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 800658e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != RCC_OscInitStruct->PLL.PLLQ))
 8006590:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 8006594:	4293      	cmp	r3, r2
 8006596:	f43f ae71 	beq.w	800627c <HAL_RCC_OscConfig+0x2c>
 800659a:	e686      	b.n	80062aa <HAL_RCC_OscConfig+0x5a>
 800659c:	40023800 	.word	0x40023800
 80065a0:	42470000 	.word	0x42470000

080065a4 <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 80065a4:	4913      	ldr	r1, [pc, #76]	; (80065f4 <HAL_RCC_GetSysClockFreq+0x50>)
{
 80065a6:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 80065a8:	688b      	ldr	r3, [r1, #8]
 80065aa:	f003 030c 	and.w	r3, r3, #12
 80065ae:	2b04      	cmp	r3, #4
 80065b0:	d01c      	beq.n	80065ec <HAL_RCC_GetSysClockFreq+0x48>
 80065b2:	2b08      	cmp	r3, #8
 80065b4:	d11c      	bne.n	80065f0 <HAL_RCC_GetSysClockFreq+0x4c>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 80065b6:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 80065b8:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80065ba:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 80065bc:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80065c0:	bf14      	ite	ne
 80065c2:	480d      	ldrne	r0, [pc, #52]	; (80065f8 <HAL_RCC_GetSysClockFreq+0x54>)
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80065c4:	480d      	ldreq	r0, [pc, #52]	; (80065fc <HAL_RCC_GetSysClockFreq+0x58>)
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80065c6:	f3c1 1188 	ubfx	r1, r1, #6, #9
 80065ca:	bf18      	it	ne
 80065cc:	2300      	movne	r3, #0
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 80065ce:	f002 023f 	and.w	r2, r2, #63	; 0x3f
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80065d2:	fba1 0100 	umull	r0, r1, r1, r0
 80065d6:	f7f9 fe5b 	bl	8000290 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 80065da:	4b06      	ldr	r3, [pc, #24]	; (80065f4 <HAL_RCC_GetSysClockFreq+0x50>)
 80065dc:	685b      	ldr	r3, [r3, #4]
 80065de:	f3c3 4301 	ubfx	r3, r3, #16, #2
 80065e2:	3301      	adds	r3, #1
 80065e4:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 80065e6:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 80065ea:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 80065ec:	4802      	ldr	r0, [pc, #8]	; (80065f8 <HAL_RCC_GetSysClockFreq+0x54>)
 80065ee:	e7fc      	b.n	80065ea <HAL_RCC_GetSysClockFreq+0x46>
      sysclockfreq = HSI_VALUE;
 80065f0:	4802      	ldr	r0, [pc, #8]	; (80065fc <HAL_RCC_GetSysClockFreq+0x58>)
  return sysclockfreq;
 80065f2:	e7fa      	b.n	80065ea <HAL_RCC_GetSysClockFreq+0x46>
 80065f4:	40023800 	.word	0x40023800
 80065f8:	007a1200 	.word	0x007a1200
 80065fc:	00f42400 	.word	0x00f42400

08006600 <HAL_RCC_ClockConfig>:
{
 8006600:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006604:	460d      	mov	r5, r1
  if(RCC_ClkInitStruct == NULL)
 8006606:	4604      	mov	r4, r0
 8006608:	b910      	cbnz	r0, 8006610 <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 800660a:	2001      	movs	r0, #1
}
 800660c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 8006610:	4b44      	ldr	r3, [pc, #272]	; (8006724 <HAL_RCC_ClockConfig+0x124>)
 8006612:	681a      	ldr	r2, [r3, #0]
 8006614:	f002 020f 	and.w	r2, r2, #15
 8006618:	428a      	cmp	r2, r1
 800661a:	d328      	bcc.n	800666e <HAL_RCC_ClockConfig+0x6e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 800661c:	6822      	ldr	r2, [r4, #0]
 800661e:	0797      	lsls	r7, r2, #30
 8006620:	d42d      	bmi.n	800667e <HAL_RCC_ClockConfig+0x7e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8006622:	07d0      	lsls	r0, r2, #31
 8006624:	d441      	bmi.n	80066aa <HAL_RCC_ClockConfig+0xaa>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 8006626:	4b3f      	ldr	r3, [pc, #252]	; (8006724 <HAL_RCC_ClockConfig+0x124>)
 8006628:	681a      	ldr	r2, [r3, #0]
 800662a:	f002 020f 	and.w	r2, r2, #15
 800662e:	42aa      	cmp	r2, r5
 8006630:	d866      	bhi.n	8006700 <HAL_RCC_ClockConfig+0x100>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8006632:	6822      	ldr	r2, [r4, #0]
 8006634:	0751      	lsls	r1, r2, #29
 8006636:	d46c      	bmi.n	8006712 <HAL_RCC_ClockConfig+0x112>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8006638:	0713      	lsls	r3, r2, #28
 800663a:	d507      	bpl.n	800664c <HAL_RCC_ClockConfig+0x4c>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 800663c:	4a3a      	ldr	r2, [pc, #232]	; (8006728 <HAL_RCC_ClockConfig+0x128>)
 800663e:	6921      	ldr	r1, [r4, #16]
 8006640:	6893      	ldr	r3, [r2, #8]
 8006642:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 8006646:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 800664a:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800664c:	f7ff ffaa 	bl	80065a4 <HAL_RCC_GetSysClockFreq>
 8006650:	4b35      	ldr	r3, [pc, #212]	; (8006728 <HAL_RCC_ClockConfig+0x128>)
 8006652:	4a36      	ldr	r2, [pc, #216]	; (800672c <HAL_RCC_ClockConfig+0x12c>)
 8006654:	689b      	ldr	r3, [r3, #8]
 8006656:	f3c3 1303 	ubfx	r3, r3, #4, #4
 800665a:	5cd3      	ldrb	r3, [r2, r3]
 800665c:	40d8      	lsrs	r0, r3
 800665e:	4b34      	ldr	r3, [pc, #208]	; (8006730 <HAL_RCC_ClockConfig+0x130>)
 8006660:	6018      	str	r0, [r3, #0]
  HAL_InitTick (uwTickPrio);
 8006662:	4b34      	ldr	r3, [pc, #208]	; (8006734 <HAL_RCC_ClockConfig+0x134>)
 8006664:	6818      	ldr	r0, [r3, #0]
 8006666:	f7fb fc19 	bl	8001e9c <HAL_InitTick>
  return HAL_OK;
 800666a:	2000      	movs	r0, #0
 800666c:	e7ce      	b.n	800660c <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800666e:	b2ca      	uxtb	r2, r1
 8006670:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8006672:	681b      	ldr	r3, [r3, #0]
 8006674:	f003 030f 	and.w	r3, r3, #15
 8006678:	428b      	cmp	r3, r1
 800667a:	d1c6      	bne.n	800660a <HAL_RCC_ClockConfig+0xa>
 800667c:	e7ce      	b.n	800661c <HAL_RCC_ClockConfig+0x1c>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800667e:	4b2a      	ldr	r3, [pc, #168]	; (8006728 <HAL_RCC_ClockConfig+0x128>)
 8006680:	f012 0f04 	tst.w	r2, #4
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 8006684:	bf1e      	ittt	ne
 8006686:	6899      	ldrne	r1, [r3, #8]
 8006688:	f441 51e0 	orrne.w	r1, r1, #7168	; 0x1c00
 800668c:	6099      	strne	r1, [r3, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800668e:	0716      	lsls	r6, r2, #28
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 8006690:	bf42      	ittt	mi
 8006692:	6899      	ldrmi	r1, [r3, #8]
 8006694:	f441 4160 	orrmi.w	r1, r1, #57344	; 0xe000
 8006698:	6099      	strmi	r1, [r3, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 800669a:	4923      	ldr	r1, [pc, #140]	; (8006728 <HAL_RCC_ClockConfig+0x128>)
 800669c:	68a0      	ldr	r0, [r4, #8]
 800669e:	688b      	ldr	r3, [r1, #8]
 80066a0:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 80066a4:	4303      	orrs	r3, r0
 80066a6:	608b      	str	r3, [r1, #8]
 80066a8:	e7bb      	b.n	8006622 <HAL_RCC_ClockConfig+0x22>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 80066aa:	6862      	ldr	r2, [r4, #4]
 80066ac:	4b1e      	ldr	r3, [pc, #120]	; (8006728 <HAL_RCC_ClockConfig+0x128>)
 80066ae:	2a01      	cmp	r2, #1
 80066b0:	d11c      	bne.n	80066ec <HAL_RCC_ClockConfig+0xec>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80066b2:	681b      	ldr	r3, [r3, #0]
 80066b4:	f413 3f00 	tst.w	r3, #131072	; 0x20000
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80066b8:	d0a7      	beq.n	800660a <HAL_RCC_ClockConfig+0xa>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 80066ba:	4e1b      	ldr	r6, [pc, #108]	; (8006728 <HAL_RCC_ClockConfig+0x128>)
 80066bc:	68b3      	ldr	r3, [r6, #8]
 80066be:	f023 0303 	bic.w	r3, r3, #3
 80066c2:	4313      	orrs	r3, r2
 80066c4:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 80066c6:	f7fe faeb 	bl	8004ca0 <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 80066ca:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 80066ce:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 80066d0:	68b3      	ldr	r3, [r6, #8]
 80066d2:	6862      	ldr	r2, [r4, #4]
 80066d4:	f003 030c 	and.w	r3, r3, #12
 80066d8:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 80066dc:	d0a3      	beq.n	8006626 <HAL_RCC_ClockConfig+0x26>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 80066de:	f7fe fadf 	bl	8004ca0 <HAL_GetTick>
 80066e2:	1bc0      	subs	r0, r0, r7
 80066e4:	4540      	cmp	r0, r8
 80066e6:	d9f3      	bls.n	80066d0 <HAL_RCC_ClockConfig+0xd0>
        return HAL_TIMEOUT;
 80066e8:	2003      	movs	r0, #3
 80066ea:	e78f      	b.n	800660c <HAL_RCC_ClockConfig+0xc>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 80066ec:	1e91      	subs	r1, r2, #2
 80066ee:	2901      	cmp	r1, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80066f0:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 80066f2:	d802      	bhi.n	80066fa <HAL_RCC_ClockConfig+0xfa>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80066f4:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 80066f8:	e7de      	b.n	80066b8 <HAL_RCC_ClockConfig+0xb8>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80066fa:	f013 0f02 	tst.w	r3, #2
 80066fe:	e7db      	b.n	80066b8 <HAL_RCC_ClockConfig+0xb8>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8006700:	b2ea      	uxtb	r2, r5
 8006702:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8006704:	681b      	ldr	r3, [r3, #0]
 8006706:	f003 030f 	and.w	r3, r3, #15
 800670a:	42ab      	cmp	r3, r5
 800670c:	f47f af7d 	bne.w	800660a <HAL_RCC_ClockConfig+0xa>
 8006710:	e78f      	b.n	8006632 <HAL_RCC_ClockConfig+0x32>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 8006712:	4905      	ldr	r1, [pc, #20]	; (8006728 <HAL_RCC_ClockConfig+0x128>)
 8006714:	68e0      	ldr	r0, [r4, #12]
 8006716:	688b      	ldr	r3, [r1, #8]
 8006718:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 800671c:	4303      	orrs	r3, r0
 800671e:	608b      	str	r3, [r1, #8]
 8006720:	e78a      	b.n	8006638 <HAL_RCC_ClockConfig+0x38>
 8006722:	bf00      	nop
 8006724:	40023c00 	.word	0x40023c00
 8006728:	40023800 	.word	0x40023800
 800672c:	08022174 	.word	0x08022174
 8006730:	2000007c 	.word	0x2000007c
 8006734:	20000084 	.word	0x20000084

08006738 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 8006738:	4b04      	ldr	r3, [pc, #16]	; (800674c <HAL_RCC_GetPCLK1Freq+0x14>)
 800673a:	4a05      	ldr	r2, [pc, #20]	; (8006750 <HAL_RCC_GetPCLK1Freq+0x18>)
 800673c:	689b      	ldr	r3, [r3, #8]
 800673e:	f3c3 2382 	ubfx	r3, r3, #10, #3
 8006742:	5cd3      	ldrb	r3, [r2, r3]
 8006744:	4a03      	ldr	r2, [pc, #12]	; (8006754 <HAL_RCC_GetPCLK1Freq+0x1c>)
 8006746:	6810      	ldr	r0, [r2, #0]
}
 8006748:	40d8      	lsrs	r0, r3
 800674a:	4770      	bx	lr
 800674c:	40023800 	.word	0x40023800
 8006750:	08022184 	.word	0x08022184
 8006754:	2000007c 	.word	0x2000007c

08006758 <HAL_RCC_GetPCLK2Freq>:
  * @retval PCLK2 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
  /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq()>> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2)>> RCC_CFGR_PPRE2_Pos]);
 8006758:	4b04      	ldr	r3, [pc, #16]	; (800676c <HAL_RCC_GetPCLK2Freq+0x14>)
 800675a:	4a05      	ldr	r2, [pc, #20]	; (8006770 <HAL_RCC_GetPCLK2Freq+0x18>)
 800675c:	689b      	ldr	r3, [r3, #8]
 800675e:	f3c3 3342 	ubfx	r3, r3, #13, #3
 8006762:	5cd3      	ldrb	r3, [r2, r3]
 8006764:	4a03      	ldr	r2, [pc, #12]	; (8006774 <HAL_RCC_GetPCLK2Freq+0x1c>)
 8006766:	6810      	ldr	r0, [r2, #0]
}
 8006768:	40d8      	lsrs	r0, r3
 800676a:	4770      	bx	lr
 800676c:	40023800 	.word	0x40023800
 8006770:	08022184 	.word	0x08022184
 8006774:	2000007c 	.word	0x2000007c

08006778 <HAL_RCC_GetClockConfig>:
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 8006778:	230f      	movs	r3, #15
 800677a:	6003      	str	r3, [r0, #0]

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800677c:	4b0b      	ldr	r3, [pc, #44]	; (80067ac <HAL_RCC_GetClockConfig+0x34>)
 800677e:	689a      	ldr	r2, [r3, #8]
 8006780:	f002 0203 	and.w	r2, r2, #3
 8006784:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 8006786:	689a      	ldr	r2, [r3, #8]
 8006788:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 800678c:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 800678e:	689a      	ldr	r2, [r3, #8]
 8006790:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 8006794:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 8006796:	689b      	ldr	r3, [r3, #8]
 8006798:	08db      	lsrs	r3, r3, #3
 800679a:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 800679e:	6103      	str	r3, [r0, #16]

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 80067a0:	4b03      	ldr	r3, [pc, #12]	; (80067b0 <HAL_RCC_GetClockConfig+0x38>)
 80067a2:	681b      	ldr	r3, [r3, #0]
 80067a4:	f003 030f 	and.w	r3, r3, #15
 80067a8:	600b      	str	r3, [r1, #0]
}
 80067aa:	4770      	bx	lr
 80067ac:	40023800 	.word	0x40023800
 80067b0:	40023c00 	.word	0x40023c00

080067b4 <HAL_RCCEx_PeriphCLKConfig>:
  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 80067b4:	6803      	ldr	r3, [r0, #0]
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 80067b6:	f013 0f43 	tst.w	r3, #67	; 0x43
{
 80067ba:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80067bc:	4604      	mov	r4, r0
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 80067be:	f040 808c 	bne.w	80068da <HAL_RCCEx_PeriphCLKConfig+0x126>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 80067c2:	6823      	ldr	r3, [r4, #0]
 80067c4:	f013 0f0c 	tst.w	r3, #12
 80067c8:	d045      	beq.n	8006856 <HAL_RCCEx_PeriphCLKConfig+0xa2>
  {
    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 80067ca:	4b8b      	ldr	r3, [pc, #556]	; (80069f8 <HAL_RCCEx_PeriphCLKConfig+0x244>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is disabled */
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 80067cc:	4d8b      	ldr	r5, [pc, #556]	; (80069fc <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLSAI_DISABLE();
 80067ce:	2200      	movs	r2, #0
 80067d0:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 80067d2:	f7fe fa65 	bl	8004ca0 <HAL_GetTick>
 80067d6:	4606      	mov	r6, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 80067d8:	682b      	ldr	r3, [r5, #0]
 80067da:	009f      	lsls	r7, r3, #2
 80067dc:	f100 80cf 	bmi.w	800697e <HAL_RCCEx_PeriphCLKConfig+0x1ca>
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLSAI, PLLSAIQ and PLLSAI_DIVQ must
       be added only for SAI configuration */
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 80067e0:	6821      	ldr	r1, [r4, #0]
 80067e2:	074e      	lsls	r6, r1, #29
 80067e4:	d515      	bpl.n	8006812 <HAL_RCCEx_PeriphCLKConfig+0x5e>
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 80067e6:	e9d4 0304 	ldrd	r0, r3, [r4, #16]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 80067ea:	f8d5 2088 	ldr.w	r2, [r5, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 80067ee:	061b      	lsls	r3, r3, #24
 80067f0:	f002 42e0 	and.w	r2, r2, #1879048192	; 0x70000000
 80067f4:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 80067f8:	4313      	orrs	r3, r2
 80067fa:	f8c5 3088 	str.w	r3, [r5, #136]	; 0x88
      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 80067fe:	f8d5 308c 	ldr.w	r3, [r5, #140]	; 0x8c
 8006802:	6a22      	ldr	r2, [r4, #32]
 8006804:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 8006808:	3a01      	subs	r2, #1
 800680a:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 800680e:	f8c5 308c 	str.w	r3, [r5, #140]	; 0x8c
    }

    /*---------------------------- LTDC configuration ------------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 8006812:	070d      	lsls	r5, r1, #28
 8006814:	d514      	bpl.n	8006840 <HAL_RCCEx_PeriphCLKConfig+0x8c>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8006816:	4a79      	ldr	r2, [pc, #484]	; (80069fc <HAL_RCCEx_PeriphCLKConfig+0x248>)
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 8006818:	69a3      	ldr	r3, [r4, #24]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800681a:	f8d2 1088 	ldr.w	r1, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800681e:	6920      	ldr	r0, [r4, #16]
 8006820:	071b      	lsls	r3, r3, #28
 8006822:	f001 6170 	and.w	r1, r1, #251658240	; 0xf000000
 8006826:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800682a:	430b      	orrs	r3, r1
 800682c:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 8006830:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 8006834:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8006836:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 800683a:	430b      	orrs	r3, r1
 800683c:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    }
    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 8006840:	4b6d      	ldr	r3, [pc, #436]	; (80069f8 <HAL_RCCEx_PeriphCLKConfig+0x244>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is ready */
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8006842:	4e6e      	ldr	r6, [pc, #440]	; (80069fc <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLSAI_ENABLE();
 8006844:	2201      	movs	r2, #1
 8006846:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 8006848:	f7fe fa2a 	bl	8004ca0 <HAL_GetTick>
 800684c:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800684e:	6833      	ldr	r3, [r6, #0]
 8006850:	0098      	lsls	r0, r3, #2
 8006852:	f140 809b 	bpl.w	800698c <HAL_RCCEx_PeriphCLKConfig+0x1d8>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 8006856:	6823      	ldr	r3, [r4, #0]
 8006858:	069b      	lsls	r3, r3, #26
 800685a:	d533      	bpl.n	80068c4 <HAL_RCCEx_PeriphCLKConfig+0x110>
  {
    /* Check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable Power Clock*/
    __HAL_RCC_PWR_CLK_ENABLE();
 800685c:	2300      	movs	r3, #0
 800685e:	9301      	str	r3, [sp, #4]
 8006860:	4b66      	ldr	r3, [pc, #408]	; (80069fc <HAL_RCCEx_PeriphCLKConfig+0x248>)

    /* Enable write access to Backup domain */
    PWR->CR |= PWR_CR_DBP;
 8006862:	4d67      	ldr	r5, [pc, #412]	; (8006a00 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PWR_CLK_ENABLE();
 8006864:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8006866:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800686a:	641a      	str	r2, [r3, #64]	; 0x40
 800686c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800686e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8006872:	9301      	str	r3, [sp, #4]
 8006874:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 8006876:	682b      	ldr	r3, [r5, #0]
 8006878:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800687c:	602b      	str	r3, [r5, #0]

    /* Get tick */
    tickstart = HAL_GetTick();
 800687e:	f7fe fa0f 	bl	8004ca0 <HAL_GetTick>
 8006882:	4606      	mov	r6, r0

    while((PWR->CR & PWR_CR_DBP) == RESET)
 8006884:	682b      	ldr	r3, [r5, #0]
 8006886:	05d9      	lsls	r1, r3, #23
 8006888:	f140 8087 	bpl.w	800699a <HAL_RCCEx_PeriphCLKConfig+0x1e6>
      {
        return HAL_TIMEOUT;
      }
    }
    /* Reset the Backup domain only if the RTC Clock source selection is modified from reset value */
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800688c:	4d5b      	ldr	r5, [pc, #364]	; (80069fc <HAL_RCCEx_PeriphCLKConfig+0x248>)
 800688e:	6f2b      	ldr	r3, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8006890:	f413 7340 	ands.w	r3, r3, #768	; 0x300
 8006894:	f040 8088 	bne.w	80069a8 <HAL_RCCEx_PeriphCLKConfig+0x1f4>
            return HAL_TIMEOUT;
          }
        }
      }
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8006898:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800689a:	f403 7240 	and.w	r2, r3, #768	; 0x300
 800689e:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 80068a2:	4a56      	ldr	r2, [pc, #344]	; (80069fc <HAL_RCCEx_PeriphCLKConfig+0x248>)
 80068a4:	f040 80a4 	bne.w	80069f0 <HAL_RCCEx_PeriphCLKConfig+0x23c>
 80068a8:	6891      	ldr	r1, [r2, #8]
 80068aa:	f023 4070 	bic.w	r0, r3, #4026531840	; 0xf0000000
 80068ae:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 80068b2:	f420 7040 	bic.w	r0, r0, #768	; 0x300
 80068b6:	4301      	orrs	r1, r0
 80068b8:	6091      	str	r1, [r2, #8]
 80068ba:	6f11      	ldr	r1, [r2, #112]	; 0x70
 80068bc:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80068c0:	430b      	orrs	r3, r1
 80068c2:	6713      	str	r3, [r2, #112]	; 0x70
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 80068c4:	6820      	ldr	r0, [r4, #0]
 80068c6:	f010 0010 	ands.w	r0, r0, #16
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 80068ca:	bf1f      	itttt	ne
 80068cc:	4b4d      	ldrne	r3, [pc, #308]	; (8006a04 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 80068ce:	f894 202c 	ldrbne.w	r2, [r4, #44]	; 0x2c
 80068d2:	f8c3 21e0 	strne.w	r2, [r3, #480]	; 0x1e0
  }
  return HAL_OK;
 80068d6:	2000      	movne	r0, #0
 80068d8:	e04f      	b.n	800697a <HAL_RCCEx_PeriphCLKConfig+0x1c6>
    __HAL_RCC_PLLI2S_DISABLE();
 80068da:	4b47      	ldr	r3, [pc, #284]	; (80069f8 <HAL_RCCEx_PeriphCLKConfig+0x244>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 80068dc:	4e47      	ldr	r6, [pc, #284]	; (80069fc <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLI2S_DISABLE();
 80068de:	2200      	movs	r2, #0
 80068e0:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 80068e2:	f7fe f9dd 	bl	8004ca0 <HAL_GetTick>
 80068e6:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 80068e8:	6833      	ldr	r3, [r6, #0]
 80068ea:	011f      	lsls	r7, r3, #4
 80068ec:	d43f      	bmi.n	800696e <HAL_RCCEx_PeriphCLKConfig+0x1ba>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 80068ee:	6821      	ldr	r1, [r4, #0]
 80068f0:	07cd      	lsls	r5, r1, #31
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 80068f2:	bf41      	itttt	mi
 80068f4:	e9d4 2301 	ldrdmi	r2, r3, [r4, #4]
 80068f8:	071b      	lslmi	r3, r3, #28
 80068fa:	ea43 1382 	orrmi.w	r3, r3, r2, lsl #6
 80068fe:	f8c6 3084 	strmi.w	r3, [r6, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 8006902:	0788      	lsls	r0, r1, #30
 8006904:	d515      	bpl.n	8006932 <HAL_RCCEx_PeriphCLKConfig+0x17e>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8006906:	4a3d      	ldr	r2, [pc, #244]	; (80069fc <HAL_RCCEx_PeriphCLKConfig+0x248>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 8006908:	68e3      	ldr	r3, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800690a:	f8d2 0084 	ldr.w	r0, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800690e:	6865      	ldr	r5, [r4, #4]
 8006910:	061b      	lsls	r3, r3, #24
 8006912:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 8006916:	ea43 1385 	orr.w	r3, r3, r5, lsl #6
 800691a:	4303      	orrs	r3, r0
 800691c:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 8006920:	f8d2 008c 	ldr.w	r0, [r2, #140]	; 0x8c
 8006924:	69e3      	ldr	r3, [r4, #28]
 8006926:	f020 001f 	bic.w	r0, r0, #31
 800692a:	3b01      	subs	r3, #1
 800692c:	4303      	orrs	r3, r0
 800692e:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 8006932:	0649      	lsls	r1, r1, #25
 8006934:	d50a      	bpl.n	800694c <HAL_RCCEx_PeriphCLKConfig+0x198>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 8006936:	68e3      	ldr	r3, [r4, #12]
 8006938:	6862      	ldr	r2, [r4, #4]
 800693a:	061b      	lsls	r3, r3, #24
 800693c:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8006940:	68a2      	ldr	r2, [r4, #8]
 8006942:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 8006946:	4a2d      	ldr	r2, [pc, #180]	; (80069fc <HAL_RCCEx_PeriphCLKConfig+0x248>)
 8006948:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 800694c:	4b2a      	ldr	r3, [pc, #168]	; (80069f8 <HAL_RCCEx_PeriphCLKConfig+0x244>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800694e:	4e2b      	ldr	r6, [pc, #172]	; (80069fc <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLI2S_ENABLE();
 8006950:	2201      	movs	r2, #1
 8006952:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 8006954:	f7fe f9a4 	bl	8004ca0 <HAL_GetTick>
 8006958:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800695a:	6833      	ldr	r3, [r6, #0]
 800695c:	011a      	lsls	r2, r3, #4
 800695e:	f53f af30 	bmi.w	80067c2 <HAL_RCCEx_PeriphCLKConfig+0xe>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 8006962:	f7fe f99d 	bl	8004ca0 <HAL_GetTick>
 8006966:	1b40      	subs	r0, r0, r5
 8006968:	2802      	cmp	r0, #2
 800696a:	d9f6      	bls.n	800695a <HAL_RCCEx_PeriphCLKConfig+0x1a6>
 800696c:	e004      	b.n	8006978 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800696e:	f7fe f997 	bl	8004ca0 <HAL_GetTick>
 8006972:	1b40      	subs	r0, r0, r5
 8006974:	2802      	cmp	r0, #2
 8006976:	d9b7      	bls.n	80068e8 <HAL_RCCEx_PeriphCLKConfig+0x134>
        return HAL_TIMEOUT;
 8006978:	2003      	movs	r0, #3
}
 800697a:	b003      	add	sp, #12
 800697c:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800697e:	f7fe f98f 	bl	8004ca0 <HAL_GetTick>
 8006982:	1b80      	subs	r0, r0, r6
 8006984:	2802      	cmp	r0, #2
 8006986:	f67f af27 	bls.w	80067d8 <HAL_RCCEx_PeriphCLKConfig+0x24>
 800698a:	e7f5      	b.n	8006978 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800698c:	f7fe f988 	bl	8004ca0 <HAL_GetTick>
 8006990:	1b40      	subs	r0, r0, r5
 8006992:	2802      	cmp	r0, #2
 8006994:	f67f af5b 	bls.w	800684e <HAL_RCCEx_PeriphCLKConfig+0x9a>
 8006998:	e7ee      	b.n	8006978 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 800699a:	f7fe f981 	bl	8004ca0 <HAL_GetTick>
 800699e:	1b80      	subs	r0, r0, r6
 80069a0:	2802      	cmp	r0, #2
 80069a2:	f67f af6f 	bls.w	8006884 <HAL_RCCEx_PeriphCLKConfig+0xd0>
 80069a6:	e7e7      	b.n	8006978 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 80069a8:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 80069aa:	f402 7240 	and.w	r2, r2, #768	; 0x300
 80069ae:	4293      	cmp	r3, r2
 80069b0:	f43f af72 	beq.w	8006898 <HAL_RCCEx_PeriphCLKConfig+0xe4>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 80069b4:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 80069b6:	4a10      	ldr	r2, [pc, #64]	; (80069f8 <HAL_RCCEx_PeriphCLKConfig+0x244>)
 80069b8:	2101      	movs	r1, #1
 80069ba:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 80069be:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 80069c2:	2100      	movs	r1, #0
 80069c4:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      RCC->BDCR = tmpreg1;
 80069c8:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 80069ca:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 80069cc:	07da      	lsls	r2, r3, #31
 80069ce:	f57f af63 	bpl.w	8006898 <HAL_RCCEx_PeriphCLKConfig+0xe4>
        tickstart = HAL_GetTick();
 80069d2:	f7fe f965 	bl	8004ca0 <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80069d6:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 80069da:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80069dc:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 80069de:	079b      	lsls	r3, r3, #30
 80069e0:	f53f af5a 	bmi.w	8006898 <HAL_RCCEx_PeriphCLKConfig+0xe4>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80069e4:	f7fe f95c 	bl	8004ca0 <HAL_GetTick>
 80069e8:	1b80      	subs	r0, r0, r6
 80069ea:	42b8      	cmp	r0, r7
 80069ec:	d9f6      	bls.n	80069dc <HAL_RCCEx_PeriphCLKConfig+0x228>
 80069ee:	e7c3      	b.n	8006978 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 80069f0:	6891      	ldr	r1, [r2, #8]
 80069f2:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 80069f6:	e75f      	b.n	80068b8 <HAL_RCCEx_PeriphCLKConfig+0x104>
 80069f8:	42470000 	.word	0x42470000
 80069fc:	40023800 	.word	0x40023800
 8006a00:	40007000 	.word	0x40007000
 8006a04:	42471000 	.word	0x42471000

08006a08 <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure 
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{   
 8006a08:	b538      	push	{r3, r4, r5, lr}
 8006a0a:	460d      	mov	r5, r1
  /* Check the SDRAM handle parameter */
  if(hsdram == NULL)
 8006a0c:	4604      	mov	r4, r0
 8006a0e:	b1c8      	cbz	r0, 8006a44 <HAL_SDRAM_Init+0x3c>
  {
    return HAL_ERROR;
  }
  
  if(hsdram->State == HAL_SDRAM_STATE_RESET)
 8006a10:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8006a14:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8006a18:	b91b      	cbnz	r3, 8006a22 <HAL_SDRAM_Init+0x1a>
  {  
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 8006a1a:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 8006a1e:	f7fb f9d1 	bl	8001dc4 <HAL_SDRAM_MspInit>
#endif
  }
  
  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8006a22:	2302      	movs	r3, #2
 8006a24:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Initialize SDRAM control Interface */
  FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 8006a28:	1d21      	adds	r1, r4, #4
 8006a2a:	6820      	ldr	r0, [r4, #0]
 8006a2c:	f000 fcba 	bl	80073a4 <FMC_SDRAM_Init>
  
  /* Initialize SDRAM timing Interface */
  FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank); 
 8006a30:	6862      	ldr	r2, [r4, #4]
 8006a32:	6820      	ldr	r0, [r4, #0]
 8006a34:	4629      	mov	r1, r5
 8006a36:	f000 fceb 	bl	8007410 <FMC_SDRAM_Timing_Init>
  
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 8006a3a:	2301      	movs	r3, #1
 8006a3c:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  return HAL_OK;
 8006a40:	2000      	movs	r0, #0
}
 8006a42:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8006a44:	2001      	movs	r0, #1
 8006a46:	e7fc      	b.n	8006a42 <HAL_SDRAM_Init+0x3a>

08006a48 <HAL_SDRAM_SendCommand>:
  * @param  Command SDRAM command structure
  * @param  Timeout Timeout duration
  * @retval HAL status
  */  
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 8006a48:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 8006a4a:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8006a4e:	2b02      	cmp	r3, #2
{
 8006a50:	4604      	mov	r4, r0
 8006a52:	460d      	mov	r5, r1
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 8006a54:	b2d8      	uxtb	r0, r3
 8006a56:	d00d      	beq.n	8006a74 <HAL_SDRAM_SendCommand+0x2c>
  {
    return HAL_BUSY;
  }
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8006a58:	2302      	movs	r3, #2
 8006a5a:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Send SDRAM command */
  FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 8006a5e:	6820      	ldr	r0, [r4, #0]
 8006a60:	f000 fd12 	bl	8007488 <FMC_SDRAM_SendCommand>
  
  /* Update the SDRAM controller state */
  if(Command->CommandMode == FMC_SDRAM_CMD_PALL)
 8006a64:	682b      	ldr	r3, [r5, #0]
 8006a66:	2b02      	cmp	r3, #2
  {
    hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 8006a68:	bf0c      	ite	eq
 8006a6a:	2305      	moveq	r3, #5
  }
  else
  {
    hsdram->State = HAL_SDRAM_STATE_READY;
 8006a6c:	2301      	movne	r3, #1
 8006a6e:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  }
  
  return HAL_OK;  
 8006a72:	2000      	movs	r0, #0
}
 8006a74:	bd38      	pop	{r3, r4, r5, pc}

08006a76 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.  
  * @param  RefreshRate The SDRAM refresh rate value       
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 8006a76:	b510      	push	{r4, lr}
  /* Check the SDRAM controller state */
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 8006a78:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8006a7c:	2b02      	cmp	r3, #2
{
 8006a7e:	4604      	mov	r4, r0
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 8006a80:	b2d8      	uxtb	r0, r3
 8006a82:	d009      	beq.n	8006a98 <HAL_SDRAM_ProgramRefreshRate+0x22>
  {
    return HAL_BUSY;
  } 
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8006a84:	2302      	movs	r3, #2
 8006a86:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Program the refresh rate */
  FMC_SDRAM_ProgramRefreshRate(hsdram->Instance ,RefreshRate);
 8006a8a:	6820      	ldr	r0, [r4, #0]
 8006a8c:	f000 fd23 	bl	80074d6 <FMC_SDRAM_ProgramRefreshRate>
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 8006a90:	2301      	movs	r3, #1
 8006a92:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  return HAL_OK;   
 8006a96:	2000      	movs	r0, #0
}
 8006a98:	bd10      	pop	{r4, pc}

08006a9a <SPI_WaitFlagStateUntilTimeout.constprop.0>:
  * @param  State flag state to check
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
 8006a9a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006a9c:	4604      	mov	r4, r0
 8006a9e:	460e      	mov	r6, r1
 8006aa0:	4615      	mov	r5, r2
 8006aa2:	461f      	mov	r7, r3
                                                       uint32_t Timeout, uint32_t Tickstart)
{
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 8006aa4:	6822      	ldr	r2, [r4, #0]
 8006aa6:	6893      	ldr	r3, [r2, #8]
 8006aa8:	ea36 0303 	bics.w	r3, r6, r3
 8006aac:	d001      	beq.n	8006ab2 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x18>
        return HAL_TIMEOUT;
      }
    }
  }

  return HAL_OK;
 8006aae:	2000      	movs	r0, #0
 8006ab0:	e02d      	b.n	8006b0e <SPI_WaitFlagStateUntilTimeout.constprop.0+0x74>
    if (Timeout != HAL_MAX_DELAY)
 8006ab2:	1c6b      	adds	r3, r5, #1
 8006ab4:	d0f7      	beq.n	8006aa6 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xc>
      if (((HAL_GetTick() - Tickstart) >= Timeout) || (Timeout == 0U))
 8006ab6:	f7fe f8f3 	bl	8004ca0 <HAL_GetTick>
 8006aba:	1bc0      	subs	r0, r0, r7
 8006abc:	4285      	cmp	r5, r0
 8006abe:	d8f1      	bhi.n	8006aa4 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xa>
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 8006ac0:	6823      	ldr	r3, [r4, #0]
 8006ac2:	685a      	ldr	r2, [r3, #4]
 8006ac4:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 8006ac8:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006aca:	6862      	ldr	r2, [r4, #4]
 8006acc:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 8006ad0:	d10a      	bne.n	8006ae8 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x4e>
 8006ad2:	68a2      	ldr	r2, [r4, #8]
 8006ad4:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 8006ad8:	d002      	beq.n	8006ae0 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x46>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8006ada:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 8006ade:	d103      	bne.n	8006ae8 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x4e>
          __HAL_SPI_DISABLE(hspi);
 8006ae0:	681a      	ldr	r2, [r3, #0]
 8006ae2:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8006ae6:	601a      	str	r2, [r3, #0]
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 8006ae8:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8006aea:	f5b2 5f00 	cmp.w	r2, #8192	; 0x2000
 8006aee:	d107      	bne.n	8006b00 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x66>
          SPI_RESET_CRC(hspi);
 8006af0:	681a      	ldr	r2, [r3, #0]
 8006af2:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8006af6:	601a      	str	r2, [r3, #0]
 8006af8:	681a      	ldr	r2, [r3, #0]
 8006afa:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8006afe:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 8006b00:	2301      	movs	r3, #1
 8006b02:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
        __HAL_UNLOCK(hspi);
 8006b06:	2300      	movs	r3, #0
 8006b08:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
 8006b0c:	2003      	movs	r0, #3
}
 8006b0e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08006b10 <SPI_EndRxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t Tickstart)
{
 8006b10:	b538      	push	{r3, r4, r5, lr}
 8006b12:	4613      	mov	r3, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006b14:	6842      	ldr	r2, [r0, #4]
 8006b16:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 8006b1a:	4604      	mov	r4, r0
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006b1c:	d11f      	bne.n	8006b5e <SPI_EndRxTransaction+0x4e>
 8006b1e:	6882      	ldr	r2, [r0, #8]
 8006b20:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 8006b24:	d002      	beq.n	8006b2c <SPI_EndRxTransaction+0x1c>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8006b26:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 8006b2a:	d107      	bne.n	8006b3c <SPI_EndRxTransaction+0x2c>
  {
    /* Disable SPI peripheral */
    __HAL_SPI_DISABLE(hspi);
 8006b2c:	6825      	ldr	r5, [r4, #0]
 8006b2e:	6828      	ldr	r0, [r5, #0]
  }

  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
  {
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 8006b30:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
    __HAL_SPI_DISABLE(hspi);
 8006b34:	f020 0040 	bic.w	r0, r0, #64	; 0x40
 8006b38:	6028      	str	r0, [r5, #0]
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 8006b3a:	d007      	beq.n	8006b4c <SPI_EndRxTransaction+0x3c>
    {
      /* Control the BSY flag */
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8006b3c:	460a      	mov	r2, r1
 8006b3e:	2180      	movs	r1, #128	; 0x80
 8006b40:	4620      	mov	r0, r4
 8006b42:	f7ff ffaa 	bl	8006a9a <SPI_WaitFlagStateUntilTimeout.constprop.0>
 8006b46:	b920      	cbnz	r0, 8006b52 <SPI_EndRxTransaction+0x42>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
      return HAL_TIMEOUT;
    }
  }
  return HAL_OK;
 8006b48:	2000      	movs	r0, #0
}
 8006b4a:	bd38      	pop	{r3, r4, r5, pc}
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 8006b4c:	460a      	mov	r2, r1
 8006b4e:	2101      	movs	r1, #1
 8006b50:	e7f6      	b.n	8006b40 <SPI_EndRxTransaction+0x30>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8006b52:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8006b54:	f043 0320 	orr.w	r3, r3, #32
 8006b58:	6563      	str	r3, [r4, #84]	; 0x54
      return HAL_TIMEOUT;
 8006b5a:	2003      	movs	r0, #3
 8006b5c:	e7f5      	b.n	8006b4a <SPI_EndRxTransaction+0x3a>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 8006b5e:	460a      	mov	r2, r1
 8006b60:	2101      	movs	r1, #1
 8006b62:	e7ee      	b.n	8006b42 <SPI_EndRxTransaction+0x32>

08006b64 <SPI_EndRxTxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
 8006b64:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8006b66:	4613      	mov	r3, r2
  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8006b68:	4a12      	ldr	r2, [pc, #72]	; (8006bb4 <SPI_EndRxTxTransaction+0x50>)
 8006b6a:	6815      	ldr	r5, [r2, #0]
 8006b6c:	4a12      	ldr	r2, [pc, #72]	; (8006bb8 <SPI_EndRxTxTransaction+0x54>)
 8006b6e:	fbb5 f5f2 	udiv	r5, r5, r2
 8006b72:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8006b76:	4355      	muls	r5, r2
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8006b78:	6842      	ldr	r2, [r0, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8006b7a:	9501      	str	r5, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8006b7c:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 8006b80:	4604      	mov	r4, r0
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8006b82:	d10b      	bne.n	8006b9c <SPI_EndRxTxTransaction+0x38>
  {
    /* Control the BSY flag */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8006b84:	460a      	mov	r2, r1
 8006b86:	2180      	movs	r1, #128	; 0x80
 8006b88:	f7ff ff87 	bl	8006a9a <SPI_WaitFlagStateUntilTimeout.constprop.0>
 8006b8c:	b178      	cbz	r0, 8006bae <SPI_EndRxTxTransaction+0x4a>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8006b8e:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8006b90:	f043 0320 	orr.w	r3, r3, #32
 8006b94:	6563      	str	r3, [r4, #84]	; 0x54
      return HAL_TIMEOUT;
 8006b96:	2003      	movs	r0, #3
      count--;
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
  }

  return HAL_OK;
}
 8006b98:	b003      	add	sp, #12
 8006b9a:	bd30      	pop	{r4, r5, pc}
      if (count == 0U)
 8006b9c:	9b01      	ldr	r3, [sp, #4]
 8006b9e:	b133      	cbz	r3, 8006bae <SPI_EndRxTxTransaction+0x4a>
      count--;
 8006ba0:	9b01      	ldr	r3, [sp, #4]
 8006ba2:	3b01      	subs	r3, #1
 8006ba4:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 8006ba6:	6823      	ldr	r3, [r4, #0]
 8006ba8:	689b      	ldr	r3, [r3, #8]
 8006baa:	061b      	lsls	r3, r3, #24
 8006bac:	d4f6      	bmi.n	8006b9c <SPI_EndRxTxTransaction+0x38>
  return HAL_OK;
 8006bae:	2000      	movs	r0, #0
 8006bb0:	e7f2      	b.n	8006b98 <SPI_EndRxTxTransaction+0x34>
 8006bb2:	bf00      	nop
 8006bb4:	2000007c 	.word	0x2000007c
 8006bb8:	016e3600 	.word	0x016e3600

08006bbc <HAL_SPI_Init>:
{
 8006bbc:	b510      	push	{r4, lr}
  if (hspi == NULL)
 8006bbe:	4604      	mov	r4, r0
 8006bc0:	2800      	cmp	r0, #0
 8006bc2:	d036      	beq.n	8006c32 <HAL_SPI_Init+0x76>
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8006bc4:	2300      	movs	r3, #0
 8006bc6:	6283      	str	r3, [r0, #40]	; 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 8006bc8:	f890 3051 	ldrb.w	r3, [r0, #81]	; 0x51
 8006bcc:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8006bd0:	b91b      	cbnz	r3, 8006bda <HAL_SPI_Init+0x1e>
    hspi->Lock = HAL_UNLOCKED;
 8006bd2:	f880 2050 	strb.w	r2, [r0, #80]	; 0x50
    HAL_SPI_MspInit(hspi);
 8006bd6:	f7fb f89d 	bl	8001d14 <HAL_SPI_MspInit>
  __HAL_SPI_DISABLE(hspi);
 8006bda:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, (hspi->Init.Mode | hspi->Init.Direction | hspi->Init.DataSize |
 8006bdc:	69a2      	ldr	r2, [r4, #24]
  hspi->State = HAL_SPI_STATE_BUSY;
 8006bde:	2302      	movs	r3, #2
 8006be0:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_SPI_DISABLE(hspi);
 8006be4:	680b      	ldr	r3, [r1, #0]
 8006be6:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8006bea:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, (hspi->Init.Mode | hspi->Init.Direction | hspi->Init.DataSize |
 8006bec:	e9d4 3001 	ldrd	r3, r0, [r4, #4]
 8006bf0:	4303      	orrs	r3, r0
 8006bf2:	68e0      	ldr	r0, [r4, #12]
 8006bf4:	4303      	orrs	r3, r0
 8006bf6:	6920      	ldr	r0, [r4, #16]
 8006bf8:	4303      	orrs	r3, r0
 8006bfa:	6960      	ldr	r0, [r4, #20]
 8006bfc:	4303      	orrs	r3, r0
 8006bfe:	69e0      	ldr	r0, [r4, #28]
 8006c00:	4303      	orrs	r3, r0
 8006c02:	6a20      	ldr	r0, [r4, #32]
 8006c04:	4303      	orrs	r3, r0
 8006c06:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8006c08:	4303      	orrs	r3, r0
 8006c0a:	f402 7000 	and.w	r0, r2, #512	; 0x200
 8006c0e:	4303      	orrs	r3, r0
 8006c10:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | hspi->Init.TIMode));
 8006c12:	0c12      	lsrs	r2, r2, #16
 8006c14:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006c16:	f002 0204 	and.w	r2, r2, #4
 8006c1a:	431a      	orrs	r2, r3
 8006c1c:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 8006c1e:	69cb      	ldr	r3, [r1, #28]
 8006c20:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8006c24:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8006c26:	2000      	movs	r0, #0
  hspi->State     = HAL_SPI_STATE_READY;
 8006c28:	2301      	movs	r3, #1
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8006c2a:	6560      	str	r0, [r4, #84]	; 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 8006c2c:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
}
 8006c30:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8006c32:	2001      	movs	r0, #1
 8006c34:	e7fc      	b.n	8006c30 <HAL_SPI_Init+0x74>

08006c36 <HAL_SPI_Transmit>:
{
 8006c36:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8006c3a:	461e      	mov	r6, r3
  __HAL_LOCK(hspi);
 8006c3c:	f890 3050 	ldrb.w	r3, [r0, #80]	; 0x50
 8006c40:	2b01      	cmp	r3, #1
{
 8006c42:	4604      	mov	r4, r0
 8006c44:	460d      	mov	r5, r1
 8006c46:	4617      	mov	r7, r2
  __HAL_LOCK(hspi);
 8006c48:	f000 809d 	beq.w	8006d86 <HAL_SPI_Transmit+0x150>
 8006c4c:	2301      	movs	r3, #1
 8006c4e:	f880 3050 	strb.w	r3, [r0, #80]	; 0x50
  tickstart = HAL_GetTick();
 8006c52:	f7fe f825 	bl	8004ca0 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 8006c56:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 8006c5a:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 8006c5c:	4680      	mov	r8, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 8006c5e:	b2d8      	uxtb	r0, r3
 8006c60:	f040 808f 	bne.w	8006d82 <HAL_SPI_Transmit+0x14c>
  if ((pData == NULL) || (Size == 0U))
 8006c64:	2d00      	cmp	r5, #0
 8006c66:	d05a      	beq.n	8006d1e <HAL_SPI_Transmit+0xe8>
 8006c68:	2f00      	cmp	r7, #0
 8006c6a:	d058      	beq.n	8006d1e <HAL_SPI_Transmit+0xe8>
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 8006c6c:	2303      	movs	r3, #3
 8006c6e:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006c72:	68a2      	ldr	r2, [r4, #8]
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 8006c74:	6325      	str	r5, [r4, #48]	; 0x30
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8006c76:	2300      	movs	r3, #0
 8006c78:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->RxISR       = NULL;
 8006c7a:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->TxXferCount = Size;
 8006c7e:	86e7      	strh	r7, [r4, #54]	; 0x36
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 8006c80:	63a3      	str	r3, [r4, #56]	; 0x38
  hspi->RxXferCount = 0U;
 8006c82:	87e3      	strh	r3, [r4, #62]	; 0x3e
  hspi->RxXferSize  = 0U;
 8006c84:	87a3      	strh	r3, [r4, #60]	; 0x3c
    SPI_1LINE_TX(hspi);
 8006c86:	6823      	ldr	r3, [r4, #0]
  hspi->TxXferSize  = Size;
 8006c88:	86a7      	strh	r7, [r4, #52]	; 0x34
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006c8a:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
    SPI_1LINE_TX(hspi);
 8006c8e:	bf08      	it	eq
 8006c90:	681a      	ldreq	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8006c92:	68e1      	ldr	r1, [r4, #12]
    SPI_1LINE_TX(hspi);
 8006c94:	bf04      	itt	eq
 8006c96:	f442 4280 	orreq.w	r2, r2, #16384	; 0x4000
 8006c9a:	601a      	streq	r2, [r3, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8006c9c:	681a      	ldr	r2, [r3, #0]
 8006c9e:	0652      	lsls	r2, r2, #25
    __HAL_SPI_ENABLE(hspi);
 8006ca0:	bf5e      	ittt	pl
 8006ca2:	681a      	ldrpl	r2, [r3, #0]
 8006ca4:	f042 0240 	orrpl.w	r2, r2, #64	; 0x40
 8006ca8:	601a      	strpl	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8006caa:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8006cae:	6862      	ldr	r2, [r4, #4]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8006cb0:	d141      	bne.n	8006d36 <HAL_SPI_Transmit+0x100>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8006cb2:	b10a      	cbz	r2, 8006cb8 <HAL_SPI_Transmit+0x82>
 8006cb4:	2f01      	cmp	r7, #1
 8006cb6:	d107      	bne.n	8006cc8 <HAL_SPI_Transmit+0x92>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8006cb8:	f835 2b02 	ldrh.w	r2, [r5], #2
 8006cbc:	60da      	str	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8006cbe:	6325      	str	r5, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8006cc0:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8006cc2:	3b01      	subs	r3, #1
 8006cc4:	b29b      	uxth	r3, r3
 8006cc6:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 8006cc8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8006cca:	b29b      	uxth	r3, r3
 8006ccc:	b9a3      	cbnz	r3, 8006cf8 <HAL_SPI_Transmit+0xc2>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8006cce:	4642      	mov	r2, r8
 8006cd0:	4631      	mov	r1, r6
 8006cd2:	4620      	mov	r0, r4
 8006cd4:	f7ff ff46 	bl	8006b64 <SPI_EndRxTxTransaction>
 8006cd8:	2800      	cmp	r0, #0
 8006cda:	d14f      	bne.n	8006d7c <HAL_SPI_Transmit+0x146>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 8006cdc:	68a3      	ldr	r3, [r4, #8]
 8006cde:	b933      	cbnz	r3, 8006cee <HAL_SPI_Transmit+0xb8>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8006ce0:	9301      	str	r3, [sp, #4]
 8006ce2:	6823      	ldr	r3, [r4, #0]
 8006ce4:	68da      	ldr	r2, [r3, #12]
 8006ce6:	9201      	str	r2, [sp, #4]
 8006ce8:	689b      	ldr	r3, [r3, #8]
 8006cea:	9301      	str	r3, [sp, #4]
 8006cec:	9b01      	ldr	r3, [sp, #4]
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8006cee:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 8006cf0:	3800      	subs	r0, #0
 8006cf2:	bf18      	it	ne
 8006cf4:	2001      	movne	r0, #1
error:
 8006cf6:	e012      	b.n	8006d1e <HAL_SPI_Transmit+0xe8>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8006cf8:	6822      	ldr	r2, [r4, #0]
 8006cfa:	6893      	ldr	r3, [r2, #8]
 8006cfc:	0798      	lsls	r0, r3, #30
 8006cfe:	d505      	bpl.n	8006d0c <HAL_SPI_Transmit+0xd6>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8006d00:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8006d02:	f833 1b02 	ldrh.w	r1, [r3], #2
 8006d06:	60d1      	str	r1, [r2, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 8006d08:	6323      	str	r3, [r4, #48]	; 0x30
 8006d0a:	e7d9      	b.n	8006cc0 <HAL_SPI_Transmit+0x8a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8006d0c:	f7fd ffc8 	bl	8004ca0 <HAL_GetTick>
 8006d10:	eba0 0008 	sub.w	r0, r0, r8
 8006d14:	42b0      	cmp	r0, r6
 8006d16:	d30b      	bcc.n	8006d30 <HAL_SPI_Transmit+0xfa>
 8006d18:	1c71      	adds	r1, r6, #1
 8006d1a:	d0d5      	beq.n	8006cc8 <HAL_SPI_Transmit+0x92>
          errorcode = HAL_TIMEOUT;
 8006d1c:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 8006d1e:	2301      	movs	r3, #1
 8006d20:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 8006d24:	2300      	movs	r3, #0
 8006d26:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 8006d2a:	b002      	add	sp, #8
 8006d2c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8006d30:	2e00      	cmp	r6, #0
 8006d32:	d1c9      	bne.n	8006cc8 <HAL_SPI_Transmit+0x92>
 8006d34:	e7f2      	b.n	8006d1c <HAL_SPI_Transmit+0xe6>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8006d36:	b10a      	cbz	r2, 8006d3c <HAL_SPI_Transmit+0x106>
 8006d38:	2f01      	cmp	r7, #1
 8006d3a:	d108      	bne.n	8006d4e <HAL_SPI_Transmit+0x118>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8006d3c:	782a      	ldrb	r2, [r5, #0]
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8006d3e:	731a      	strb	r2, [r3, #12]
        hspi->pTxBuffPtr += sizeof(uint8_t);
 8006d40:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8006d42:	3301      	adds	r3, #1
 8006d44:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8006d46:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8006d48:	3b01      	subs	r3, #1
 8006d4a:	b29b      	uxth	r3, r3
 8006d4c:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 8006d4e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8006d50:	b29b      	uxth	r3, r3
 8006d52:	2b00      	cmp	r3, #0
 8006d54:	d0bb      	beq.n	8006cce <HAL_SPI_Transmit+0x98>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8006d56:	6823      	ldr	r3, [r4, #0]
 8006d58:	689a      	ldr	r2, [r3, #8]
 8006d5a:	0792      	lsls	r2, r2, #30
 8006d5c:	d502      	bpl.n	8006d64 <HAL_SPI_Transmit+0x12e>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8006d5e:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8006d60:	7812      	ldrb	r2, [r2, #0]
 8006d62:	e7ec      	b.n	8006d3e <HAL_SPI_Transmit+0x108>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8006d64:	f7fd ff9c 	bl	8004ca0 <HAL_GetTick>
 8006d68:	eba0 0008 	sub.w	r0, r0, r8
 8006d6c:	42b0      	cmp	r0, r6
 8006d6e:	d302      	bcc.n	8006d76 <HAL_SPI_Transmit+0x140>
 8006d70:	1c73      	adds	r3, r6, #1
 8006d72:	d0ec      	beq.n	8006d4e <HAL_SPI_Transmit+0x118>
 8006d74:	e7d2      	b.n	8006d1c <HAL_SPI_Transmit+0xe6>
 8006d76:	2e00      	cmp	r6, #0
 8006d78:	d1e9      	bne.n	8006d4e <HAL_SPI_Transmit+0x118>
 8006d7a:	e7cf      	b.n	8006d1c <HAL_SPI_Transmit+0xe6>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8006d7c:	2320      	movs	r3, #32
 8006d7e:	6563      	str	r3, [r4, #84]	; 0x54
 8006d80:	e7ac      	b.n	8006cdc <HAL_SPI_Transmit+0xa6>
    errorcode = HAL_BUSY;
 8006d82:	2002      	movs	r0, #2
 8006d84:	e7cb      	b.n	8006d1e <HAL_SPI_Transmit+0xe8>
  __HAL_LOCK(hspi);
 8006d86:	2002      	movs	r0, #2
 8006d88:	e7cf      	b.n	8006d2a <HAL_SPI_Transmit+0xf4>

08006d8a <HAL_SPI_TransmitReceive>:
{
 8006d8a:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8006d8e:	461e      	mov	r6, r3
  __HAL_LOCK(hspi);
 8006d90:	f890 3050 	ldrb.w	r3, [r0, #80]	; 0x50
{
 8006d94:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  __HAL_LOCK(hspi);
 8006d96:	2b01      	cmp	r3, #1
{
 8006d98:	4604      	mov	r4, r0
 8006d9a:	460d      	mov	r5, r1
 8006d9c:	4691      	mov	r9, r2
  __HAL_LOCK(hspi);
 8006d9e:	f000 80e6 	beq.w	8006f6e <HAL_SPI_TransmitReceive+0x1e4>
 8006da2:	2301      	movs	r3, #1
 8006da4:	f880 3050 	strb.w	r3, [r0, #80]	; 0x50
  tickstart = HAL_GetTick();
 8006da8:	f7fd ff7a 	bl	8004ca0 <HAL_GetTick>
  tmp_state           = hspi->State;
 8006dac:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  tmp_mode            = hspi->Init.Mode;
 8006db0:	6862      	ldr	r2, [r4, #4]
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 8006db2:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 8006db4:	4680      	mov	r8, r0
  tmp_state           = hspi->State;
 8006db6:	b2d9      	uxtb	r1, r3
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 8006db8:	d00a      	beq.n	8006dd0 <HAL_SPI_TransmitReceive+0x46>
 8006dba:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 8006dbe:	f040 80d4 	bne.w	8006f6a <HAL_SPI_TransmitReceive+0x1e0>
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 8006dc2:	68a3      	ldr	r3, [r4, #8]
 8006dc4:	2b00      	cmp	r3, #0
 8006dc6:	f040 80d0 	bne.w	8006f6a <HAL_SPI_TransmitReceive+0x1e0>
 8006dca:	2904      	cmp	r1, #4
 8006dcc:	f040 80cd 	bne.w	8006f6a <HAL_SPI_TransmitReceive+0x1e0>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 8006dd0:	2d00      	cmp	r5, #0
 8006dd2:	d040      	beq.n	8006e56 <HAL_SPI_TransmitReceive+0xcc>
 8006dd4:	f1b9 0f00 	cmp.w	r9, #0
 8006dd8:	d03d      	beq.n	8006e56 <HAL_SPI_TransmitReceive+0xcc>
 8006dda:	2e00      	cmp	r6, #0
 8006ddc:	d03b      	beq.n	8006e56 <HAL_SPI_TransmitReceive+0xcc>
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 8006dde:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 8006de2:	f8c4 9038 	str.w	r9, [r4, #56]	; 0x38
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 8006de6:	2b04      	cmp	r3, #4
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 8006de8:	bf1c      	itt	ne
 8006dea:	2305      	movne	r3, #5
 8006dec:	f884 3051 	strbne.w	r3, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8006df0:	2300      	movs	r3, #0
 8006df2:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->TxISR       = NULL;
 8006df4:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8006df8:	6823      	ldr	r3, [r4, #0]
  hspi->RxXferCount = Size;
 8006dfa:	87e6      	strh	r6, [r4, #62]	; 0x3e
  hspi->TxXferCount = Size;
 8006dfc:	86e6      	strh	r6, [r4, #54]	; 0x36
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8006dfe:	6819      	ldr	r1, [r3, #0]
  hspi->RxXferSize  = Size;
 8006e00:	87a6      	strh	r6, [r4, #60]	; 0x3c
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8006e02:	0649      	lsls	r1, r1, #25
    __HAL_SPI_ENABLE(hspi);
 8006e04:	bf58      	it	pl
 8006e06:	6819      	ldrpl	r1, [r3, #0]
  hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 8006e08:	6325      	str	r5, [r4, #48]	; 0x30
    __HAL_SPI_ENABLE(hspi);
 8006e0a:	bf58      	it	pl
 8006e0c:	f041 0140 	orrpl.w	r1, r1, #64	; 0x40
  hspi->TxXferSize  = Size;
 8006e10:	86a6      	strh	r6, [r4, #52]	; 0x34
    __HAL_SPI_ENABLE(hspi);
 8006e12:	bf58      	it	pl
 8006e14:	6019      	strpl	r1, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8006e16:	68e1      	ldr	r1, [r4, #12]
 8006e18:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
 8006e1c:	d152      	bne.n	8006ec4 <HAL_SPI_TransmitReceive+0x13a>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8006e1e:	b10a      	cbz	r2, 8006e24 <HAL_SPI_TransmitReceive+0x9a>
 8006e20:	2e01      	cmp	r6, #1
 8006e22:	d107      	bne.n	8006e34 <HAL_SPI_TransmitReceive+0xaa>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8006e24:	f835 2b02 	ldrh.w	r2, [r5], #2
 8006e28:	60da      	str	r2, [r3, #12]
      hspi->TxXferCount--;
 8006e2a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8006e2c:	6325      	str	r5, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 8006e2e:	3b01      	subs	r3, #1
 8006e30:	b29b      	uxth	r3, r3
 8006e32:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 1U;
 8006e34:	2501      	movs	r5, #1
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8006e36:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8006e38:	b29b      	uxth	r3, r3
 8006e3a:	b973      	cbnz	r3, 8006e5a <HAL_SPI_TransmitReceive+0xd0>
 8006e3c:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8006e3e:	b29b      	uxth	r3, r3
 8006e40:	b95b      	cbnz	r3, 8006e5a <HAL_SPI_TransmitReceive+0xd0>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8006e42:	4642      	mov	r2, r8
 8006e44:	4639      	mov	r1, r7
 8006e46:	4620      	mov	r0, r4
 8006e48:	f7ff fe8c 	bl	8006b64 <SPI_EndRxTxTransaction>
 8006e4c:	2800      	cmp	r0, #0
 8006e4e:	f000 8081 	beq.w	8006f54 <HAL_SPI_TransmitReceive+0x1ca>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8006e52:	2320      	movs	r3, #32
 8006e54:	6563      	str	r3, [r4, #84]	; 0x54
    errorcode = HAL_ERROR;
 8006e56:	2001      	movs	r0, #1
 8006e58:	e02b      	b.n	8006eb2 <HAL_SPI_TransmitReceive+0x128>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 8006e5a:	6821      	ldr	r1, [r4, #0]
 8006e5c:	688b      	ldr	r3, [r1, #8]
 8006e5e:	079e      	lsls	r6, r3, #30
 8006e60:	d50d      	bpl.n	8006e7e <HAL_SPI_TransmitReceive+0xf4>
 8006e62:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8006e64:	b29b      	uxth	r3, r3
 8006e66:	b153      	cbz	r3, 8006e7e <HAL_SPI_TransmitReceive+0xf4>
 8006e68:	b14d      	cbz	r5, 8006e7e <HAL_SPI_TransmitReceive+0xf4>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8006e6a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8006e6c:	f833 2b02 	ldrh.w	r2, [r3], #2
 8006e70:	60ca      	str	r2, [r1, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 8006e72:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8006e74:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8006e76:	3b01      	subs	r3, #1
 8006e78:	b29b      	uxth	r3, r3
 8006e7a:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 8006e7c:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 8006e7e:	688a      	ldr	r2, [r1, #8]
 8006e80:	f012 0201 	ands.w	r2, r2, #1
 8006e84:	d00c      	beq.n	8006ea0 <HAL_SPI_TransmitReceive+0x116>
 8006e86:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8006e88:	b29b      	uxth	r3, r3
 8006e8a:	b14b      	cbz	r3, 8006ea0 <HAL_SPI_TransmitReceive+0x116>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 8006e8c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8006e8e:	68c9      	ldr	r1, [r1, #12]
 8006e90:	f823 1b02 	strh.w	r1, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 8006e94:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 8006e96:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8006e98:	3b01      	subs	r3, #1
 8006e9a:	b29b      	uxth	r3, r3
 8006e9c:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 8006e9e:	4615      	mov	r5, r2
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 8006ea0:	f7fd fefe 	bl	8004ca0 <HAL_GetTick>
 8006ea4:	eba0 0008 	sub.w	r0, r0, r8
 8006ea8:	42b8      	cmp	r0, r7
 8006eaa:	d3c4      	bcc.n	8006e36 <HAL_SPI_TransmitReceive+0xac>
 8006eac:	1c78      	adds	r0, r7, #1
 8006eae:	d0c2      	beq.n	8006e36 <HAL_SPI_TransmitReceive+0xac>
        errorcode = HAL_TIMEOUT;
 8006eb0:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 8006eb2:	2301      	movs	r3, #1
 8006eb4:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 8006eb8:	2300      	movs	r3, #0
 8006eba:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 8006ebe:	b003      	add	sp, #12
 8006ec0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8006ec4:	b10a      	cbz	r2, 8006eca <HAL_SPI_TransmitReceive+0x140>
 8006ec6:	2e01      	cmp	r6, #1
 8006ec8:	d108      	bne.n	8006edc <HAL_SPI_TransmitReceive+0x152>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8006eca:	782a      	ldrb	r2, [r5, #0]
 8006ecc:	731a      	strb	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint8_t);
 8006ece:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8006ed0:	3301      	adds	r3, #1
 8006ed2:	6323      	str	r3, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 8006ed4:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8006ed6:	3b01      	subs	r3, #1
 8006ed8:	b29b      	uxth	r3, r3
 8006eda:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 1U;
 8006edc:	2501      	movs	r5, #1
 8006ede:	e02d      	b.n	8006f3c <HAL_SPI_TransmitReceive+0x1b2>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 8006ee0:	6822      	ldr	r2, [r4, #0]
 8006ee2:	6893      	ldr	r3, [r2, #8]
 8006ee4:	0799      	lsls	r1, r3, #30
 8006ee6:	d50e      	bpl.n	8006f06 <HAL_SPI_TransmitReceive+0x17c>
 8006ee8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8006eea:	b29b      	uxth	r3, r3
 8006eec:	b15b      	cbz	r3, 8006f06 <HAL_SPI_TransmitReceive+0x17c>
 8006eee:	b155      	cbz	r5, 8006f06 <HAL_SPI_TransmitReceive+0x17c>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 8006ef0:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8006ef2:	781b      	ldrb	r3, [r3, #0]
 8006ef4:	7313      	strb	r3, [r2, #12]
        hspi->pTxBuffPtr++;
 8006ef6:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8006ef8:	3301      	adds	r3, #1
 8006efa:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8006efc:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8006efe:	3b01      	subs	r3, #1
 8006f00:	b29b      	uxth	r3, r3
 8006f02:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 8006f04:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 8006f06:	6822      	ldr	r2, [r4, #0]
 8006f08:	6891      	ldr	r1, [r2, #8]
 8006f0a:	f011 0101 	ands.w	r1, r1, #1
 8006f0e:	d00d      	beq.n	8006f2c <HAL_SPI_TransmitReceive+0x1a2>
 8006f10:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8006f12:	b29b      	uxth	r3, r3
 8006f14:	b153      	cbz	r3, 8006f2c <HAL_SPI_TransmitReceive+0x1a2>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 8006f16:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8006f18:	68d2      	ldr	r2, [r2, #12]
 8006f1a:	701a      	strb	r2, [r3, #0]
        hspi->pRxBuffPtr++;
 8006f1c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8006f1e:	3301      	adds	r3, #1
 8006f20:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 8006f22:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8006f24:	3b01      	subs	r3, #1
 8006f26:	b29b      	uxth	r3, r3
 8006f28:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 8006f2a:	460d      	mov	r5, r1
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 8006f2c:	f7fd feb8 	bl	8004ca0 <HAL_GetTick>
 8006f30:	eba0 0008 	sub.w	r0, r0, r8
 8006f34:	42b8      	cmp	r0, r7
 8006f36:	d30a      	bcc.n	8006f4e <HAL_SPI_TransmitReceive+0x1c4>
 8006f38:	1c7b      	adds	r3, r7, #1
 8006f3a:	d1b9      	bne.n	8006eb0 <HAL_SPI_TransmitReceive+0x126>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8006f3c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8006f3e:	b29b      	uxth	r3, r3
 8006f40:	2b00      	cmp	r3, #0
 8006f42:	d1cd      	bne.n	8006ee0 <HAL_SPI_TransmitReceive+0x156>
 8006f44:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8006f46:	b29b      	uxth	r3, r3
 8006f48:	2b00      	cmp	r3, #0
 8006f4a:	d1c9      	bne.n	8006ee0 <HAL_SPI_TransmitReceive+0x156>
 8006f4c:	e779      	b.n	8006e42 <HAL_SPI_TransmitReceive+0xb8>
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 8006f4e:	2f00      	cmp	r7, #0
 8006f50:	d1f4      	bne.n	8006f3c <HAL_SPI_TransmitReceive+0x1b2>
 8006f52:	e7ad      	b.n	8006eb0 <HAL_SPI_TransmitReceive+0x126>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 8006f54:	68a3      	ldr	r3, [r4, #8]
 8006f56:	2b00      	cmp	r3, #0
 8006f58:	d1ab      	bne.n	8006eb2 <HAL_SPI_TransmitReceive+0x128>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8006f5a:	6823      	ldr	r3, [r4, #0]
 8006f5c:	9001      	str	r0, [sp, #4]
 8006f5e:	68da      	ldr	r2, [r3, #12]
 8006f60:	9201      	str	r2, [sp, #4]
 8006f62:	689b      	ldr	r3, [r3, #8]
 8006f64:	9301      	str	r3, [sp, #4]
 8006f66:	9b01      	ldr	r3, [sp, #4]
 8006f68:	e7a3      	b.n	8006eb2 <HAL_SPI_TransmitReceive+0x128>
    errorcode = HAL_BUSY;
 8006f6a:	2002      	movs	r0, #2
 8006f6c:	e7a1      	b.n	8006eb2 <HAL_SPI_TransmitReceive+0x128>
  __HAL_LOCK(hspi);
 8006f6e:	2002      	movs	r0, #2
 8006f70:	e7a5      	b.n	8006ebe <HAL_SPI_TransmitReceive+0x134>

08006f72 <HAL_SPI_Receive>:
{
 8006f72:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8006f76:	461d      	mov	r5, r3
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 8006f78:	6843      	ldr	r3, [r0, #4]
 8006f7a:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
{
 8006f7e:	4604      	mov	r4, r0
 8006f80:	4689      	mov	r9, r1
 8006f82:	4617      	mov	r7, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 8006f84:	d10c      	bne.n	8006fa0 <HAL_SPI_Receive+0x2e>
 8006f86:	6883      	ldr	r3, [r0, #8]
 8006f88:	b953      	cbnz	r3, 8006fa0 <HAL_SPI_Receive+0x2e>
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 8006f8a:	2304      	movs	r3, #4
 8006f8c:	f880 3051 	strb.w	r3, [r0, #81]	; 0x51
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 8006f90:	4613      	mov	r3, r2
 8006f92:	9500      	str	r5, [sp, #0]
 8006f94:	460a      	mov	r2, r1
 8006f96:	f7ff fef8 	bl	8006d8a <HAL_SPI_TransmitReceive>
}
 8006f9a:	b003      	add	sp, #12
 8006f9c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  __HAL_LOCK(hspi);
 8006fa0:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 8006fa4:	2b01      	cmp	r3, #1
 8006fa6:	f000 8084 	beq.w	80070b2 <HAL_SPI_Receive+0x140>
 8006faa:	2301      	movs	r3, #1
 8006fac:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 8006fb0:	f7fd fe76 	bl	8004ca0 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 8006fb4:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 8006fb8:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 8006fba:	4680      	mov	r8, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 8006fbc:	b2d8      	uxtb	r0, r3
 8006fbe:	d176      	bne.n	80070ae <HAL_SPI_Receive+0x13c>
  if ((pData == NULL) || (Size == 0U))
 8006fc0:	f1b9 0f00 	cmp.w	r9, #0
 8006fc4:	d05a      	beq.n	800707c <HAL_SPI_Receive+0x10a>
 8006fc6:	2f00      	cmp	r7, #0
 8006fc8:	d058      	beq.n	800707c <HAL_SPI_Receive+0x10a>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006fca:	68a2      	ldr	r2, [r4, #8]
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 8006fcc:	f8c4 9038 	str.w	r9, [r4, #56]	; 0x38
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 8006fd0:	2304      	movs	r3, #4
 8006fd2:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8006fd6:	2600      	movs	r6, #0
    SPI_1LINE_RX(hspi);
 8006fd8:	6823      	ldr	r3, [r4, #0]
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8006fda:	6566      	str	r6, [r4, #84]	; 0x54
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006fdc:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
  hspi->RxXferCount = Size;
 8006fe0:	87e7      	strh	r7, [r4, #62]	; 0x3e
  hspi->TxXferCount = 0U;
 8006fe2:	86e6      	strh	r6, [r4, #54]	; 0x36
    SPI_1LINE_RX(hspi);
 8006fe4:	bf08      	it	eq
 8006fe6:	681a      	ldreq	r2, [r3, #0]
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 8006fe8:	6326      	str	r6, [r4, #48]	; 0x30
    SPI_1LINE_RX(hspi);
 8006fea:	bf08      	it	eq
 8006fec:	f422 4280 	biceq.w	r2, r2, #16384	; 0x4000
  hspi->TxISR       = NULL;
 8006ff0:	e9c4 6610 	strd	r6, r6, [r4, #64]	; 0x40
  hspi->TxXferSize  = 0U;
 8006ff4:	86a6      	strh	r6, [r4, #52]	; 0x34
  hspi->RxXferSize  = Size;
 8006ff6:	87a7      	strh	r7, [r4, #60]	; 0x3c
    SPI_1LINE_RX(hspi);
 8006ff8:	bf08      	it	eq
 8006ffa:	601a      	streq	r2, [r3, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8006ffc:	681a      	ldr	r2, [r3, #0]
 8006ffe:	0656      	lsls	r6, r2, #25
    __HAL_SPI_ENABLE(hspi);
 8007000:	bf5e      	ittt	pl
 8007002:	681a      	ldrpl	r2, [r3, #0]
 8007004:	f042 0240 	orrpl.w	r2, r2, #64	; 0x40
 8007008:	601a      	strpl	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 800700a:	68e3      	ldr	r3, [r4, #12]
 800700c:	b1f3      	cbz	r3, 800704c <HAL_SPI_Receive+0xda>
    while (hspi->RxXferCount > 0U)
 800700e:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8007010:	b29b      	uxth	r3, r3
 8007012:	b1fb      	cbz	r3, 8007054 <HAL_SPI_Receive+0xe2>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 8007014:	6823      	ldr	r3, [r4, #0]
 8007016:	689a      	ldr	r2, [r3, #8]
 8007018:	07d2      	lsls	r2, r2, #31
 800701a:	d539      	bpl.n	8007090 <HAL_SPI_Receive+0x11e>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800701c:	68da      	ldr	r2, [r3, #12]
 800701e:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8007020:	f823 2b02 	strh.w	r2, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 8007024:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 8007026:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8007028:	3b01      	subs	r3, #1
 800702a:	b29b      	uxth	r3, r3
 800702c:	87e3      	strh	r3, [r4, #62]	; 0x3e
 800702e:	e7ee      	b.n	800700e <HAL_SPI_Receive+0x9c>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 8007030:	6823      	ldr	r3, [r4, #0]
 8007032:	689a      	ldr	r2, [r3, #8]
 8007034:	07d0      	lsls	r0, r2, #31
 8007036:	d518      	bpl.n	800706a <HAL_SPI_Receive+0xf8>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 8007038:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800703a:	7b1b      	ldrb	r3, [r3, #12]
 800703c:	7013      	strb	r3, [r2, #0]
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800703e:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8007040:	3301      	adds	r3, #1
 8007042:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 8007044:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8007046:	3b01      	subs	r3, #1
 8007048:	b29b      	uxth	r3, r3
 800704a:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800704c:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800704e:	b29b      	uxth	r3, r3
 8007050:	2b00      	cmp	r3, #0
 8007052:	d1ed      	bne.n	8007030 <HAL_SPI_Receive+0xbe>
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8007054:	4642      	mov	r2, r8
 8007056:	4629      	mov	r1, r5
 8007058:	4620      	mov	r0, r4
 800705a:	f7ff fd59 	bl	8006b10 <SPI_EndRxTransaction>
 800705e:	bb18      	cbnz	r0, 80070a8 <HAL_SPI_Receive+0x136>
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8007060:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 8007062:	3800      	subs	r0, #0
 8007064:	bf18      	it	ne
 8007066:	2001      	movne	r0, #1
error :
 8007068:	e008      	b.n	800707c <HAL_SPI_Receive+0x10a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800706a:	f7fd fe19 	bl	8004ca0 <HAL_GetTick>
 800706e:	eba0 0008 	sub.w	r0, r0, r8
 8007072:	42a8      	cmp	r0, r5
 8007074:	d309      	bcc.n	800708a <HAL_SPI_Receive+0x118>
 8007076:	1c69      	adds	r1, r5, #1
 8007078:	d0e8      	beq.n	800704c <HAL_SPI_Receive+0xda>
          errorcode = HAL_TIMEOUT;
 800707a:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 800707c:	2301      	movs	r3, #1
 800707e:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 8007082:	2300      	movs	r3, #0
 8007084:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  return errorcode;
 8007088:	e787      	b.n	8006f9a <HAL_SPI_Receive+0x28>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800708a:	2d00      	cmp	r5, #0
 800708c:	d1de      	bne.n	800704c <HAL_SPI_Receive+0xda>
 800708e:	e7f4      	b.n	800707a <HAL_SPI_Receive+0x108>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8007090:	f7fd fe06 	bl	8004ca0 <HAL_GetTick>
 8007094:	eba0 0008 	sub.w	r0, r0, r8
 8007098:	42a8      	cmp	r0, r5
 800709a:	d302      	bcc.n	80070a2 <HAL_SPI_Receive+0x130>
 800709c:	1c6b      	adds	r3, r5, #1
 800709e:	d0b6      	beq.n	800700e <HAL_SPI_Receive+0x9c>
 80070a0:	e7eb      	b.n	800707a <HAL_SPI_Receive+0x108>
 80070a2:	2d00      	cmp	r5, #0
 80070a4:	d1b3      	bne.n	800700e <HAL_SPI_Receive+0x9c>
 80070a6:	e7e8      	b.n	800707a <HAL_SPI_Receive+0x108>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 80070a8:	2320      	movs	r3, #32
 80070aa:	6563      	str	r3, [r4, #84]	; 0x54
 80070ac:	e7d8      	b.n	8007060 <HAL_SPI_Receive+0xee>
    errorcode = HAL_BUSY;
 80070ae:	2002      	movs	r0, #2
 80070b0:	e7e4      	b.n	800707c <HAL_SPI_Receive+0x10a>
  __HAL_LOCK(hspi);
 80070b2:	2002      	movs	r0, #2
 80070b4:	e771      	b.n	8006f9a <HAL_SPI_Receive+0x28>

080070b6 <HAL_TIM_Base_Start_IT>:

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 80070b6:	6803      	ldr	r3, [r0, #0]
 80070b8:	68da      	ldr	r2, [r3, #12]
 80070ba:	f042 0201 	orr.w	r2, r2, #1
 80070be:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 80070c0:	689a      	ldr	r2, [r3, #8]
 80070c2:	f002 0207 	and.w	r2, r2, #7
  if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 80070c6:	2a06      	cmp	r2, #6
  {
    __HAL_TIM_ENABLE(htim);
 80070c8:	bf1e      	ittt	ne
 80070ca:	681a      	ldrne	r2, [r3, #0]
 80070cc:	f042 0201 	orrne.w	r2, r2, #1
 80070d0:	601a      	strne	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
}
 80070d2:	2000      	movs	r0, #0
 80070d4:	4770      	bx	lr

080070d6 <HAL_TIM_OC_DelayElapsedCallback>:
 80070d6:	4770      	bx	lr

080070d8 <HAL_TIM_IC_CaptureCallback>:
 80070d8:	4770      	bx	lr

080070da <HAL_TIM_PWM_PulseFinishedCallback>:
 80070da:	4770      	bx	lr

080070dc <HAL_TIM_TriggerCallback>:
 80070dc:	4770      	bx	lr

080070de <HAL_TIM_IRQHandler>:
  * @retval None
  */
void HAL_TIM_IRQHandler(TIM_HandleTypeDef *htim)
{
  /* Capture compare 1 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 80070de:	6803      	ldr	r3, [r0, #0]
 80070e0:	691a      	ldr	r2, [r3, #16]
 80070e2:	0791      	lsls	r1, r2, #30
{
 80070e4:	b510      	push	{r4, lr}
 80070e6:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 80070e8:	d50e      	bpl.n	8007108 <HAL_TIM_IRQHandler+0x2a>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 80070ea:	68da      	ldr	r2, [r3, #12]
 80070ec:	0792      	lsls	r2, r2, #30
 80070ee:	d50b      	bpl.n	8007108 <HAL_TIM_IRQHandler+0x2a>
    {
      {
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 80070f0:	f06f 0202 	mvn.w	r2, #2
 80070f4:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 80070f6:	2201      	movs	r2, #1
 80070f8:	7702      	strb	r2, [r0, #28]

        /* Input capture event */
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 80070fa:	699b      	ldr	r3, [r3, #24]
 80070fc:	079b      	lsls	r3, r3, #30
 80070fe:	d077      	beq.n	80071f0 <HAL_TIM_IRQHandler+0x112>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->IC_CaptureCallback(htim);
#else
          HAL_TIM_IC_CaptureCallback(htim);
 8007100:	f7ff ffea 	bl	80070d8 <HAL_TIM_IC_CaptureCallback>
#else
          HAL_TIM_OC_DelayElapsedCallback(htim);
          HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
        }
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8007104:	2300      	movs	r3, #0
 8007106:	7723      	strb	r3, [r4, #28]
      }
    }
  }
  /* Capture compare 2 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 8007108:	6823      	ldr	r3, [r4, #0]
 800710a:	691a      	ldr	r2, [r3, #16]
 800710c:	0750      	lsls	r0, r2, #29
 800710e:	d510      	bpl.n	8007132 <HAL_TIM_IRQHandler+0x54>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 8007110:	68da      	ldr	r2, [r3, #12]
 8007112:	0751      	lsls	r1, r2, #29
 8007114:	d50d      	bpl.n	8007132 <HAL_TIM_IRQHandler+0x54>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 8007116:	f06f 0204 	mvn.w	r2, #4
 800711a:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800711c:	2202      	movs	r2, #2
 800711e:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 8007120:	699b      	ldr	r3, [r3, #24]
 8007122:	f413 7f40 	tst.w	r3, #768	; 0x300
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8007126:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 8007128:	d068      	beq.n	80071fc <HAL_TIM_IRQHandler+0x11e>
        HAL_TIM_IC_CaptureCallback(htim);
 800712a:	f7ff ffd5 	bl	80070d8 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800712e:	2300      	movs	r3, #0
 8007130:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 3 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 8007132:	6823      	ldr	r3, [r4, #0]
 8007134:	691a      	ldr	r2, [r3, #16]
 8007136:	0712      	lsls	r2, r2, #28
 8007138:	d50f      	bpl.n	800715a <HAL_TIM_IRQHandler+0x7c>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 800713a:	68da      	ldr	r2, [r3, #12]
 800713c:	0710      	lsls	r0, r2, #28
 800713e:	d50c      	bpl.n	800715a <HAL_TIM_IRQHandler+0x7c>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 8007140:	f06f 0208 	mvn.w	r2, #8
 8007144:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 8007146:	2204      	movs	r2, #4
 8007148:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800714a:	69db      	ldr	r3, [r3, #28]
 800714c:	0799      	lsls	r1, r3, #30
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 800714e:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8007150:	d05a      	beq.n	8007208 <HAL_TIM_IRQHandler+0x12a>
        HAL_TIM_IC_CaptureCallback(htim);
 8007152:	f7ff ffc1 	bl	80070d8 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8007156:	2300      	movs	r3, #0
 8007158:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 4 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800715a:	6823      	ldr	r3, [r4, #0]
 800715c:	691a      	ldr	r2, [r3, #16]
 800715e:	06d2      	lsls	r2, r2, #27
 8007160:	d510      	bpl.n	8007184 <HAL_TIM_IRQHandler+0xa6>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 8007162:	68da      	ldr	r2, [r3, #12]
 8007164:	06d0      	lsls	r0, r2, #27
 8007166:	d50d      	bpl.n	8007184 <HAL_TIM_IRQHandler+0xa6>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 8007168:	f06f 0210 	mvn.w	r2, #16
 800716c:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800716e:	2208      	movs	r2, #8
 8007170:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8007172:	69db      	ldr	r3, [r3, #28]
 8007174:	f413 7f40 	tst.w	r3, #768	; 0x300
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8007178:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800717a:	d04b      	beq.n	8007214 <HAL_TIM_IRQHandler+0x136>
        HAL_TIM_IC_CaptureCallback(htim);
 800717c:	f7ff ffac 	bl	80070d8 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8007180:	2300      	movs	r3, #0
 8007182:	7723      	strb	r3, [r4, #28]
    }
  }
  /* TIM Update event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 8007184:	6823      	ldr	r3, [r4, #0]
 8007186:	691a      	ldr	r2, [r3, #16]
 8007188:	07d1      	lsls	r1, r2, #31
 800718a:	d508      	bpl.n	800719e <HAL_TIM_IRQHandler+0xc0>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 800718c:	68da      	ldr	r2, [r3, #12]
 800718e:	07d2      	lsls	r2, r2, #31
 8007190:	d505      	bpl.n	800719e <HAL_TIM_IRQHandler+0xc0>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 8007192:	f06f 0201 	mvn.w	r2, #1
 8007196:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->PeriodElapsedCallback(htim);
#else
      HAL_TIM_PeriodElapsedCallback(htim);
 8007198:	4620      	mov	r0, r4
 800719a:	f7fa fbc5 	bl	8001928 <HAL_TIM_PeriodElapsedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break input event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800719e:	6823      	ldr	r3, [r4, #0]
 80071a0:	691a      	ldr	r2, [r3, #16]
 80071a2:	0610      	lsls	r0, r2, #24
 80071a4:	d508      	bpl.n	80071b8 <HAL_TIM_IRQHandler+0xda>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 80071a6:	68da      	ldr	r2, [r3, #12]
 80071a8:	0611      	lsls	r1, r2, #24
 80071aa:	d505      	bpl.n	80071b8 <HAL_TIM_IRQHandler+0xda>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 80071ac:	f06f 0280 	mvn.w	r2, #128	; 0x80
 80071b0:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->BreakCallback(htim);
#else
      HAL_TIMEx_BreakCallback(htim);
 80071b2:	4620      	mov	r0, r4
 80071b4:	f000 f8f5 	bl	80073a2 <HAL_TIMEx_BreakCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Trigger detection event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 80071b8:	6823      	ldr	r3, [r4, #0]
 80071ba:	691a      	ldr	r2, [r3, #16]
 80071bc:	0652      	lsls	r2, r2, #25
 80071be:	d508      	bpl.n	80071d2 <HAL_TIM_IRQHandler+0xf4>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 80071c0:	68da      	ldr	r2, [r3, #12]
 80071c2:	0650      	lsls	r0, r2, #25
 80071c4:	d505      	bpl.n	80071d2 <HAL_TIM_IRQHandler+0xf4>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 80071c6:	f06f 0240 	mvn.w	r2, #64	; 0x40
 80071ca:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->TriggerCallback(htim);
#else
      HAL_TIM_TriggerCallback(htim);
 80071cc:	4620      	mov	r0, r4
 80071ce:	f7ff ff85 	bl	80070dc <HAL_TIM_TriggerCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM commutation event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 80071d2:	6823      	ldr	r3, [r4, #0]
 80071d4:	691a      	ldr	r2, [r3, #16]
 80071d6:	0691      	lsls	r1, r2, #26
 80071d8:	d522      	bpl.n	8007220 <HAL_TIM_IRQHandler+0x142>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 80071da:	68da      	ldr	r2, [r3, #12]
 80071dc:	0692      	lsls	r2, r2, #26
 80071de:	d51f      	bpl.n	8007220 <HAL_TIM_IRQHandler+0x142>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 80071e0:	f06f 0220 	mvn.w	r2, #32
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->CommutationCallback(htim);
#else
      HAL_TIMEx_CommutCallback(htim);
 80071e4:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 80071e6:	611a      	str	r2, [r3, #16]
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
}
 80071e8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 80071ec:	f000 b8d8 	b.w	80073a0 <HAL_TIMEx_CommutCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 80071f0:	f7ff ff71 	bl	80070d6 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 80071f4:	4620      	mov	r0, r4
 80071f6:	f7ff ff70 	bl	80070da <HAL_TIM_PWM_PulseFinishedCallback>
 80071fa:	e783      	b.n	8007104 <HAL_TIM_IRQHandler+0x26>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80071fc:	f7ff ff6b 	bl	80070d6 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8007200:	4620      	mov	r0, r4
 8007202:	f7ff ff6a 	bl	80070da <HAL_TIM_PWM_PulseFinishedCallback>
 8007206:	e792      	b.n	800712e <HAL_TIM_IRQHandler+0x50>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8007208:	f7ff ff65 	bl	80070d6 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800720c:	4620      	mov	r0, r4
 800720e:	f7ff ff64 	bl	80070da <HAL_TIM_PWM_PulseFinishedCallback>
 8007212:	e7a0      	b.n	8007156 <HAL_TIM_IRQHandler+0x78>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8007214:	f7ff ff5f 	bl	80070d6 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8007218:	4620      	mov	r0, r4
 800721a:	f7ff ff5e 	bl	80070da <HAL_TIM_PWM_PulseFinishedCallback>
 800721e:	e7af      	b.n	8007180 <HAL_TIM_IRQHandler+0xa2>
}
 8007220:	bd10      	pop	{r4, pc}
	...

08007224 <TIM_Base_SetConfig>:
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8007224:	4a30      	ldr	r2, [pc, #192]	; (80072e8 <TIM_Base_SetConfig+0xc4>)
  tmpcr1 = TIMx->CR1;
 8007226:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8007228:	4290      	cmp	r0, r2
 800722a:	d012      	beq.n	8007252 <TIM_Base_SetConfig+0x2e>
 800722c:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8007230:	d00f      	beq.n	8007252 <TIM_Base_SetConfig+0x2e>
 8007232:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 8007236:	4290      	cmp	r0, r2
 8007238:	d00b      	beq.n	8007252 <TIM_Base_SetConfig+0x2e>
 800723a:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800723e:	4290      	cmp	r0, r2
 8007240:	d007      	beq.n	8007252 <TIM_Base_SetConfig+0x2e>
 8007242:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8007246:	4290      	cmp	r0, r2
 8007248:	d003      	beq.n	8007252 <TIM_Base_SetConfig+0x2e>
 800724a:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800724e:	4290      	cmp	r0, r2
 8007250:	d119      	bne.n	8007286 <TIM_Base_SetConfig+0x62>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
 8007252:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 8007254:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 8007258:	4313      	orrs	r3, r2
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800725a:	4a23      	ldr	r2, [pc, #140]	; (80072e8 <TIM_Base_SetConfig+0xc4>)
 800725c:	4290      	cmp	r0, r2
 800725e:	d029      	beq.n	80072b4 <TIM_Base_SetConfig+0x90>
 8007260:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8007264:	d026      	beq.n	80072b4 <TIM_Base_SetConfig+0x90>
 8007266:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 800726a:	4290      	cmp	r0, r2
 800726c:	d022      	beq.n	80072b4 <TIM_Base_SetConfig+0x90>
 800726e:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8007272:	4290      	cmp	r0, r2
 8007274:	d01e      	beq.n	80072b4 <TIM_Base_SetConfig+0x90>
 8007276:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800727a:	4290      	cmp	r0, r2
 800727c:	d01a      	beq.n	80072b4 <TIM_Base_SetConfig+0x90>
 800727e:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 8007282:	4290      	cmp	r0, r2
 8007284:	d016      	beq.n	80072b4 <TIM_Base_SetConfig+0x90>
 8007286:	4a19      	ldr	r2, [pc, #100]	; (80072ec <TIM_Base_SetConfig+0xc8>)
 8007288:	4290      	cmp	r0, r2
 800728a:	d013      	beq.n	80072b4 <TIM_Base_SetConfig+0x90>
 800728c:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8007290:	4290      	cmp	r0, r2
 8007292:	d00f      	beq.n	80072b4 <TIM_Base_SetConfig+0x90>
 8007294:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8007298:	4290      	cmp	r0, r2
 800729a:	d00b      	beq.n	80072b4 <TIM_Base_SetConfig+0x90>
 800729c:	f5a2 3298 	sub.w	r2, r2, #77824	; 0x13000
 80072a0:	4290      	cmp	r0, r2
 80072a2:	d007      	beq.n	80072b4 <TIM_Base_SetConfig+0x90>
 80072a4:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80072a8:	4290      	cmp	r0, r2
 80072aa:	d003      	beq.n	80072b4 <TIM_Base_SetConfig+0x90>
 80072ac:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80072b0:	4290      	cmp	r0, r2
 80072b2:	d103      	bne.n	80072bc <TIM_Base_SetConfig+0x98>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 80072b4:	68ca      	ldr	r2, [r1, #12]
    tmpcr1 &= ~TIM_CR1_CKD;
 80072b6:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 80072ba:	4313      	orrs	r3, r2
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 80072bc:	694a      	ldr	r2, [r1, #20]
 80072be:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80072c2:	4313      	orrs	r3, r2

  TIMx->CR1 = tmpcr1;
 80072c4:	6003      	str	r3, [r0, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 80072c6:	688b      	ldr	r3, [r1, #8]
 80072c8:	62c3      	str	r3, [r0, #44]	; 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 80072ca:	680b      	ldr	r3, [r1, #0]
 80072cc:	6283      	str	r3, [r0, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 80072ce:	4b06      	ldr	r3, [pc, #24]	; (80072e8 <TIM_Base_SetConfig+0xc4>)
 80072d0:	4298      	cmp	r0, r3
 80072d2:	d003      	beq.n	80072dc <TIM_Base_SetConfig+0xb8>
 80072d4:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80072d8:	4298      	cmp	r0, r3
 80072da:	d101      	bne.n	80072e0 <TIM_Base_SetConfig+0xbc>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 80072dc:	690b      	ldr	r3, [r1, #16]
 80072de:	6303      	str	r3, [r0, #48]	; 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 80072e0:	2301      	movs	r3, #1
 80072e2:	6143      	str	r3, [r0, #20]
}
 80072e4:	4770      	bx	lr
 80072e6:	bf00      	nop
 80072e8:	40010000 	.word	0x40010000
 80072ec:	40014000 	.word	0x40014000

080072f0 <HAL_TIM_Base_Init>:
{
 80072f0:	b510      	push	{r4, lr}
  if (htim == NULL)
 80072f2:	4604      	mov	r4, r0
 80072f4:	b1a0      	cbz	r0, 8007320 <HAL_TIM_Base_Init+0x30>
  if (htim->State == HAL_TIM_STATE_RESET)
 80072f6:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 80072fa:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80072fe:	b91b      	cbnz	r3, 8007308 <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 8007300:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 8007304:	f7fa fd3c 	bl	8001d80 <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 8007308:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800730a:	6820      	ldr	r0, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800730c:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8007310:	1d21      	adds	r1, r4, #4
 8007312:	f7ff ff87 	bl	8007224 <TIM_Base_SetConfig>
  htim->State = HAL_TIM_STATE_READY;
 8007316:	2301      	movs	r3, #1
 8007318:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 800731c:	2000      	movs	r0, #0
}
 800731e:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8007320:	2001      	movs	r0, #1
 8007322:	e7fc      	b.n	800731e <HAL_TIM_Base_Init+0x2e>

08007324 <HAL_TIMEx_MasterConfigSynchronization>:
  *         mode.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIMEx_MasterConfigSynchronization(TIM_HandleTypeDef *htim,
                                                        TIM_MasterConfigTypeDef *sMasterConfig)
{
 8007324:	b530      	push	{r4, r5, lr}
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 8007326:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800732a:	2b01      	cmp	r3, #1
 800732c:	f04f 0302 	mov.w	r3, #2
 8007330:	d032      	beq.n	8007398 <HAL_TIMEx_MasterConfigSynchronization+0x74>

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;
 8007332:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 8007336:	6803      	ldr	r3, [r0, #0]
  tmpsmcr = htim->Instance->SMCR;

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 8007338:	680d      	ldr	r5, [r1, #0]
  tmpcr2 = htim->Instance->CR2;
 800733a:	685c      	ldr	r4, [r3, #4]
  tmpsmcr = htim->Instance->SMCR;
 800733c:	689a      	ldr	r2, [r3, #8]
  tmpcr2 &= ~TIM_CR2_MMS;
 800733e:	f024 0470 	bic.w	r4, r4, #112	; 0x70
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 8007342:	432c      	orrs	r4, r5

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 8007344:	605c      	str	r4, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8007346:	4c15      	ldr	r4, [pc, #84]	; (800739c <HAL_TIMEx_MasterConfigSynchronization+0x78>)
 8007348:	42a3      	cmp	r3, r4
 800734a:	d01a      	beq.n	8007382 <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 800734c:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8007350:	d017      	beq.n	8007382 <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 8007352:	f5a4 447c 	sub.w	r4, r4, #64512	; 0xfc00
 8007356:	42a3      	cmp	r3, r4
 8007358:	d013      	beq.n	8007382 <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 800735a:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800735e:	42a3      	cmp	r3, r4
 8007360:	d00f      	beq.n	8007382 <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 8007362:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8007366:	42a3      	cmp	r3, r4
 8007368:	d00b      	beq.n	8007382 <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 800736a:	f504 4478 	add.w	r4, r4, #63488	; 0xf800
 800736e:	42a3      	cmp	r3, r4
 8007370:	d007      	beq.n	8007382 <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 8007372:	f504 5470 	add.w	r4, r4, #15360	; 0x3c00
 8007376:	42a3      	cmp	r3, r4
 8007378:	d003      	beq.n	8007382 <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 800737a:	f5a4 3494 	sub.w	r4, r4, #75776	; 0x12800
 800737e:	42a3      	cmp	r3, r4
 8007380:	d104      	bne.n	800738c <HAL_TIMEx_MasterConfigSynchronization+0x68>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 8007382:	6849      	ldr	r1, [r1, #4]
    tmpsmcr &= ~TIM_SMCR_MSM;
 8007384:	f022 0280 	bic.w	r2, r2, #128	; 0x80
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 8007388:	430a      	orrs	r2, r1

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 800738a:	609a      	str	r2, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;
 800738c:	2301      	movs	r3, #1
 800738e:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

  __HAL_UNLOCK(htim);
 8007392:	2300      	movs	r3, #0
 8007394:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  __HAL_LOCK(htim);
 8007398:	4618      	mov	r0, r3

  return HAL_OK;
}
 800739a:	bd30      	pop	{r4, r5, pc}
 800739c:	40010000 	.word	0x40010000

080073a0 <HAL_TIMEx_CommutCallback>:
 80073a0:	4770      	bx	lr

080073a2 <HAL_TIMEx_BreakCallback>:
 80073a2:	4770      	bx	lr

080073a4 <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure   
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 80073a4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
                                               Init->InternalBankNumber |\
                                               Init->CASLatency         |\
                                               Init->WriteProtection    |\
                                               Init->SDClockPeriod      |\
                                               Init->ReadBurst          |\
                                               Init->ReadPipeDelay
 80073a8:	6a4a      	ldr	r2, [r1, #36]	; 0x24
                                               Init->ReadBurst          |\
 80073aa:	e9d1 4307 	ldrd	r4, r3, [r1, #28]
                                               Init->RowBitsNumber      |\
 80073ae:	e9d1 5801 	ldrd	r5, r8, [r1, #4]
                                               Init->InternalBankNumber |\
 80073b2:	e9d1 ec03 	ldrd	lr, ip, [r1, #12]
                                               Init->WriteProtection    |\
 80073b6:	e9d1 7605 	ldrd	r7, r6, [r1, #20]
  if (Init->SDBank != FMC_SDRAM_BANK2) 
 80073ba:	6809      	ldr	r1, [r1, #0]
 80073bc:	2901      	cmp	r1, #1
 80073be:	ea43 0304 	orr.w	r3, r3, r4
 80073c2:	4912      	ldr	r1, [pc, #72]	; (800740c <FMC_SDRAM_Init+0x68>)
    tmpr1 = Device->SDCR[FMC_SDRAM_BANK1];
 80073c4:	6804      	ldr	r4, [r0, #0]
  if (Init->SDBank != FMC_SDRAM_BANK2) 
 80073c6:	d00f      	beq.n	80073e8 <FMC_SDRAM_Init+0x44>
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 80073c8:	431a      	orrs	r2, r3
 80073ca:	432a      	orrs	r2, r5
 80073cc:	ea42 0308 	orr.w	r3, r2, r8
 80073d0:	ea43 030e 	orr.w	r3, r3, lr
 80073d4:	ea43 030c 	orr.w	r3, r3, ip
 80073d8:	433b      	orrs	r3, r7
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 80073da:	4021      	ands	r1, r4
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 80073dc:	4333      	orrs	r3, r6
 80073de:	430b      	orrs	r3, r1
                                               );
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 80073e0:	6003      	str	r3, [r0, #0]
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
    Device->SDCR[FMC_SDRAM_BANK2] = tmpr2;
  }  
  
  return HAL_OK;
}
 80073e2:	2000      	movs	r0, #0
 80073e4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 80073e8:	4313      	orrs	r3, r2
    tmpr2 = Device->SDCR[FMC_SDRAM_BANK2];
 80073ea:	6842      	ldr	r2, [r0, #4]
    tmpr2 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 80073ec:	4011      	ands	r1, r2
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 80073ee:	ea45 0208 	orr.w	r2, r5, r8
 80073f2:	ea42 020e 	orr.w	r2, r2, lr
 80073f6:	ea42 020c 	orr.w	r2, r2, ip
 80073fa:	433a      	orrs	r2, r7
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_SDCLK | FMC_SDCR1_RBURST | FMC_SDCR1_RPIPE));
 80073fc:	f424 44f8 	bic.w	r4, r4, #31744	; 0x7c00
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8007400:	4332      	orrs	r2, r6
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 8007402:	4323      	orrs	r3, r4
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8007404:	430a      	orrs	r2, r1
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 8007406:	6003      	str	r3, [r0, #0]
    Device->SDCR[FMC_SDRAM_BANK2] = tmpr2;
 8007408:	6042      	str	r2, [r0, #4]
 800740a:	e7ea      	b.n	80073e2 <FMC_SDRAM_Init+0x3e>
 800740c:	ffff8000 	.word	0xffff8000

08007410 <FMC_SDRAM_Timing_Init>:
                          FMC_SDTR1_TRCD));
    
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
                       (((Timing->RowCycleDelay)-1U) << 12U)       |\
 8007410:	68cb      	ldr	r3, [r1, #12]
{
 8007412:	b5f0      	push	{r4, r5, r6, r7, lr}
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 8007414:	680c      	ldr	r4, [r1, #0]
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
 8007416:	688e      	ldr	r6, [r1, #8]
                       (((Timing->WriteRecoveryTime)-1U) <<16U)    |\
 8007418:	690d      	ldr	r5, [r1, #16]
                       (((Timing->RowCycleDelay)-1U) << 12U)       |\
 800741a:	1e5f      	subs	r7, r3, #1
                       (((Timing->RPDelay)-1U) << 20U)             |\
 800741c:	694b      	ldr	r3, [r1, #20]
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 800741e:	f104 3cff 	add.w	ip, r4, #4294967295
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
 8007422:	684c      	ldr	r4, [r1, #4]
                       (((Timing->RCDDelay)-1U) << 24U));
 8007424:	6989      	ldr	r1, [r1, #24]
                       (((Timing->RPDelay)-1U) << 20U)             |\
 8007426:	3b01      	subs	r3, #1
 8007428:	051b      	lsls	r3, r3, #20
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
 800742a:	3c01      	subs	r4, #1
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
 800742c:	3e01      	subs	r6, #1
                       (((Timing->WriteRecoveryTime)-1U) <<16U)    |\
 800742e:	3d01      	subs	r5, #1
                       (((Timing->RCDDelay)-1U) << 24U));
 8007430:	3901      	subs	r1, #1
  if (Bank != FMC_SDRAM_BANK2) 
 8007432:	2a01      	cmp	r2, #1
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
 8007434:	ea4f 1404 	mov.w	r4, r4, lsl #4
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
 8007438:	ea4f 2606 	mov.w	r6, r6, lsl #8
                       (((Timing->WriteRecoveryTime)-1U) <<16U)    |\
 800743c:	ea4f 4505 	mov.w	r5, r5, lsl #16
                       (((Timing->RCDDelay)-1U) << 24U));
 8007440:	ea4f 6101 	mov.w	r1, r1, lsl #24
 8007444:	ea43 3307 	orr.w	r3, r3, r7, lsl #12
  if (Bank != FMC_SDRAM_BANK2) 
 8007448:	d00c      	beq.n	8007464 <FMC_SDRAM_Timing_Init+0x54>
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 800744a:	ea43 030c 	orr.w	r3, r3, ip
 800744e:	4323      	orrs	r3, r4
    tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 8007450:	6882      	ldr	r2, [r0, #8]
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 8007452:	4333      	orrs	r3, r6
 8007454:	432b      	orrs	r3, r5
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 8007456:	f002 4270 	and.w	r2, r2, #4026531840	; 0xf0000000
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 800745a:	430b      	orrs	r3, r1
 800745c:	4313      	orrs	r3, r2
    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 800745e:	6083      	str	r3, [r0, #8]

    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
    Device->SDTR[FMC_SDRAM_BANK2] = tmpr2;
  }
  return HAL_OK;
}
 8007460:	2000      	movs	r0, #0
 8007462:	bdf0      	pop	{r4, r5, r6, r7, pc}
    tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 8007464:	6887      	ldr	r7, [r0, #8]
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TRC | FMC_SDTR1_TRP));
 8007466:	f427 0770 	bic.w	r7, r7, #15728640	; 0xf00000
 800746a:	f427 4770 	bic.w	r7, r7, #61440	; 0xf000
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 800746e:	4334      	orrs	r4, r6
    tmpr1 |= (uint32_t)((((Timing->RowCycleDelay)-1U) << 12U)       |\
 8007470:	433b      	orrs	r3, r7
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 8007472:	ea44 020c 	orr.w	r2, r4, ip
    tmpr2 = Device->SDTR[FMC_SDRAM_BANK2];
 8007476:	68c7      	ldr	r7, [r0, #12]
    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 8007478:	6083      	str	r3, [r0, #8]
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 800747a:	432a      	orrs	r2, r5
    tmpr2 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 800747c:	f007 4770 	and.w	r7, r7, #4026531840	; 0xf0000000
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 8007480:	430a      	orrs	r2, r1
 8007482:	433a      	orrs	r2, r7
    Device->SDTR[FMC_SDRAM_BANK2] = tmpr2;
 8007484:	60c2      	str	r2, [r0, #12]
 8007486:	e7eb      	b.n	8007460 <FMC_SDRAM_Timing_Init+0x50>

08007488 <FMC_SDRAM_SendCommand>:
  * @param  Timing Pointer to SDRAM Timing structure
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */  
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 8007488:	b573      	push	{r0, r1, r4, r5, r6, lr}
  __IO uint32_t tmpr = 0U;
 800748a:	2300      	movs	r3, #0
 800748c:	9301      	str	r3, [sp, #4]
{
 800748e:	4615      	mov	r5, r2
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));  

  /* Set command register */
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 8007490:	e9d1 3200 	ldrd	r3, r2, [r1]
 8007494:	4313      	orrs	r3, r2
                    (Command->CommandTarget)                |\
                    (((Command->AutoRefreshNumber)-1U) << 5U) |\
                    ((Command->ModeRegisterDefinition) << 9U)
 8007496:	68ca      	ldr	r2, [r1, #12]
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 8007498:	ea43 2342 	orr.w	r3, r3, r2, lsl #9
                    (((Command->AutoRefreshNumber)-1U) << 5U) |\
 800749c:	688a      	ldr	r2, [r1, #8]
 800749e:	3a01      	subs	r2, #1
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 80074a0:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 80074a4:	9301      	str	r3, [sp, #4]
                    );
    
  Device->SDCMR = tmpr;
 80074a6:	9b01      	ldr	r3, [sp, #4]
 80074a8:	6103      	str	r3, [r0, #16]
{
 80074aa:	4604      	mov	r4, r0

  /* Get tick */ 
  tickstart = HAL_GetTick();
 80074ac:	f7fd fbf8 	bl	8004ca0 <HAL_GetTick>
 80074b0:	4606      	mov	r6, r0

  /* Wait until command is send */
  while(HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 80074b2:	69a3      	ldr	r3, [r4, #24]
 80074b4:	f013 0320 	ands.w	r3, r3, #32
 80074b8:	d101      	bne.n	80074be <FMC_SDRAM_SendCommand+0x36>
        return HAL_TIMEOUT;
      }
    }
  }

  return HAL_OK;
 80074ba:	4618      	mov	r0, r3
 80074bc:	e003      	b.n	80074c6 <FMC_SDRAM_SendCommand+0x3e>
    if(Timeout != HAL_MAX_DELAY)
 80074be:	1c6b      	adds	r3, r5, #1
 80074c0:	d0f7      	beq.n	80074b2 <FMC_SDRAM_SendCommand+0x2a>
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 80074c2:	b915      	cbnz	r5, 80074ca <FMC_SDRAM_SendCommand+0x42>
        return HAL_TIMEOUT;
 80074c4:	2003      	movs	r0, #3
}
 80074c6:	b002      	add	sp, #8
 80074c8:	bd70      	pop	{r4, r5, r6, pc}
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 80074ca:	f7fd fbe9 	bl	8004ca0 <HAL_GetTick>
 80074ce:	1b80      	subs	r0, r0, r6
 80074d0:	42a8      	cmp	r0, r5
 80074d2:	d9ee      	bls.n	80074b2 <FMC_SDRAM_SendCommand+0x2a>
 80074d4:	e7f6      	b.n	80074c4 <FMC_SDRAM_SendCommand+0x3c>

080074d6 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));
  
  /* Set the refresh rate in command register */
  Device->SDRTR |= (RefreshRate<<1U);
 80074d6:	6943      	ldr	r3, [r0, #20]
 80074d8:	ea43 0141 	orr.w	r1, r3, r1, lsl #1
 80074dc:	6141      	str	r1, [r0, #20]
  
  return HAL_OK;   
}
 80074de:	2000      	movs	r0, #0
 80074e0:	4770      	bx	lr
	...

080074e4 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80074e4:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 80074e8:	b113      	cbz	r3, 80074f0 <osKernelInitialize+0xc>
    stat = osErrorISR;
 80074ea:	f06f 0005 	mvn.w	r0, #5
 80074ee:	4770      	bx	lr
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80074f0:	f3ef 8210 	mrs	r2, PRIMASK
  return(result);
 80074f4:	4b07      	ldr	r3, [pc, #28]	; (8007514 <osKernelInitialize+0x30>)
  if (IS_IRQ()) {
 80074f6:	b912      	cbnz	r2, 80074fe <osKernelInitialize+0x1a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80074f8:	f3ef 8211 	mrs	r2, BASEPRI
 80074fc:	b112      	cbz	r2, 8007504 <osKernelInitialize+0x20>
 80074fe:	681a      	ldr	r2, [r3, #0]
 8007500:	2a02      	cmp	r2, #2
 8007502:	d0f2      	beq.n	80074ea <osKernelInitialize+0x6>
  }
  else {
    if (KernelState == osKernelInactive) {
 8007504:	6818      	ldr	r0, [r3, #0]
 8007506:	b910      	cbnz	r0, 800750e <osKernelInitialize+0x2a>
      #if defined(USE_FREERTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 8007508:	2201      	movs	r2, #1
 800750a:	601a      	str	r2, [r3, #0]
      stat = osOK;
 800750c:	4770      	bx	lr
    } else {
      stat = osError;
 800750e:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 8007512:	4770      	bx	lr
 8007514:	20006900 	.word	0x20006900

08007518 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 8007518:	b508      	push	{r3, lr}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800751a:	f3ef 8305 	mrs	r3, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800751e:	b113      	cbz	r3, 8007526 <osKernelStart+0xe>
    stat = osErrorISR;
 8007520:	f06f 0005 	mvn.w	r0, #5
      stat = osError;
    }
  }

  return (stat);
}
 8007524:	bd08      	pop	{r3, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8007526:	f3ef 8210 	mrs	r2, PRIMASK
  return(result);
 800752a:	4b0a      	ldr	r3, [pc, #40]	; (8007554 <osKernelStart+0x3c>)
  if (IS_IRQ()) {
 800752c:	b912      	cbnz	r2, 8007534 <osKernelStart+0x1c>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 800752e:	f3ef 8211 	mrs	r2, BASEPRI
 8007532:	b112      	cbz	r2, 800753a <osKernelStart+0x22>
 8007534:	681a      	ldr	r2, [r3, #0]
 8007536:	2a02      	cmp	r2, #2
 8007538:	d0f2      	beq.n	8007520 <osKernelStart+0x8>
    if (KernelState == osKernelReady) {
 800753a:	681a      	ldr	r2, [r3, #0]
 800753c:	2a01      	cmp	r2, #1
 800753e:	d105      	bne.n	800754c <osKernelStart+0x34>
      KernelState = osKernelRunning;
 8007540:	2202      	movs	r2, #2
 8007542:	601a      	str	r2, [r3, #0]
      vTaskStartScheduler();
 8007544:	f001 fbd6 	bl	8008cf4 <vTaskStartScheduler>
      stat = osOK;
 8007548:	2000      	movs	r0, #0
 800754a:	e7eb      	b.n	8007524 <osKernelStart+0xc>
      stat = osError;
 800754c:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 8007550:	e7e8      	b.n	8007524 <osKernelStart+0xc>
 8007552:	bf00      	nop
 8007554:	20006900 	.word	0x20006900

08007558 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 8007558:	b5f0      	push	{r4, r5, r6, r7, lr}
 800755a:	b087      	sub	sp, #28
 800755c:	4614      	mov	r4, r2
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 800755e:	2200      	movs	r2, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 8007560:	460b      	mov	r3, r1
  hTask = NULL;
 8007562:	9205      	str	r2, [sp, #20]
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8007564:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 8007568:	bb22      	cbnz	r2, 80075b4 <osThreadNew+0x5c>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800756a:	f3ef 8210 	mrs	r2, PRIMASK
 800756e:	b912      	cbnz	r2, 8007576 <osThreadNew+0x1e>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8007570:	f3ef 8211 	mrs	r2, BASEPRI
 8007574:	b11a      	cbz	r2, 800757e <osThreadNew+0x26>
 8007576:	4a22      	ldr	r2, [pc, #136]	; (8007600 <osThreadNew+0xa8>)
 8007578:	6812      	ldr	r2, [r2, #0]
 800757a:	2a02      	cmp	r2, #2
 800757c:	d01a      	beq.n	80075b4 <osThreadNew+0x5c>
 800757e:	b1c8      	cbz	r0, 80075b4 <osThreadNew+0x5c>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 8007580:	2c00      	cmp	r4, #0
 8007582:	d02f      	beq.n	80075e4 <osThreadNew+0x8c>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 8007584:	69a5      	ldr	r5, [r4, #24]
 8007586:	2d00      	cmp	r5, #0
 8007588:	bf08      	it	eq
 800758a:	2518      	moveq	r5, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800758c:	1e6a      	subs	r2, r5, #1
 800758e:	2a37      	cmp	r2, #55	; 0x37
 8007590:	46ac      	mov	ip, r5
 8007592:	d82b      	bhi.n	80075ec <osThreadNew+0x94>
 8007594:	6862      	ldr	r2, [r4, #4]
 8007596:	07d2      	lsls	r2, r2, #31
 8007598:	d428      	bmi.n	80075ec <osThreadNew+0x94>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 800759a:	6966      	ldr	r6, [r4, #20]
 800759c:	b16e      	cbz	r6, 80075ba <osThreadNew+0x62>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 800759e:	08b2      	lsrs	r2, r6, #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 80075a0:	e9d4 7e02 	ldrd	r7, lr, [r4, #8]
      if (attr->name != NULL) {
 80075a4:	6821      	ldr	r1, [r4, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 80075a6:	b157      	cbz	r7, 80075be <osThreadNew+0x66>
 80075a8:	f1be 0fbf 	cmp.w	lr, #191	; 0xbf
 80075ac:	d902      	bls.n	80075b4 <osThreadNew+0x5c>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 80075ae:	6924      	ldr	r4, [r4, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 80075b0:	b104      	cbz	r4, 80075b4 <osThreadNew+0x5c>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 80075b2:	b9ee      	cbnz	r6, 80075f0 <osThreadNew+0x98>
        }
      }
    }
  }

  return ((osThreadId_t)hTask);
 80075b4:	9805      	ldr	r0, [sp, #20]
}
 80075b6:	b007      	add	sp, #28
 80075b8:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 80075ba:	2280      	movs	r2, #128	; 0x80
 80075bc:	e7f0      	b.n	80075a0 <osThreadNew+0x48>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 80075be:	f1be 0f00 	cmp.w	lr, #0
 80075c2:	d1f7      	bne.n	80075b4 <osThreadNew+0x5c>
      if (mem == 0) {
 80075c4:	6924      	ldr	r4, [r4, #16]
 80075c6:	2c00      	cmp	r4, #0
 80075c8:	d1f4      	bne.n	80075b4 <osThreadNew+0x5c>
 80075ca:	460c      	mov	r4, r1
        if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 80075cc:	a905      	add	r1, sp, #20
 80075ce:	e9cd c100 	strd	ip, r1, [sp]
 80075d2:	b292      	uxth	r2, r2
 80075d4:	4621      	mov	r1, r4
 80075d6:	f001 fb5f 	bl	8008c98 <xTaskCreate>
 80075da:	2801      	cmp	r0, #1
          hTask = NULL;
 80075dc:	bf1c      	itt	ne
 80075de:	2300      	movne	r3, #0
 80075e0:	9305      	strne	r3, [sp, #20]
 80075e2:	e7e7      	b.n	80075b4 <osThreadNew+0x5c>
    prio  = (UBaseType_t)osPriorityNormal;
 80075e4:	f04f 0c18 	mov.w	ip, #24
    stack = configMINIMAL_STACK_SIZE;
 80075e8:	2280      	movs	r2, #128	; 0x80
 80075ea:	e7ef      	b.n	80075cc <osThreadNew+0x74>
        return (NULL);
 80075ec:	2000      	movs	r0, #0
 80075ee:	e7e2      	b.n	80075b6 <osThreadNew+0x5e>
      hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 80075f0:	e9cd 4701 	strd	r4, r7, [sp, #4]
 80075f4:	9500      	str	r5, [sp, #0]
 80075f6:	f001 fb17 	bl	8008c28 <xTaskCreateStatic>
 80075fa:	9005      	str	r0, [sp, #20]
 80075fc:	e7da      	b.n	80075b4 <osThreadNew+0x5c>
 80075fe:	bf00      	nop
 8007600:	20006900 	.word	0x20006900

08007604 <osDelay>:

  /* Return flags before clearing */
  return (rflags);
}

osStatus_t osDelay (uint32_t ticks) {
 8007604:	b508      	push	{r3, lr}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8007606:	f3ef 8305 	mrs	r3, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800760a:	b113      	cbz	r3, 8007612 <osDelay+0xe>
    stat = osErrorISR;
 800760c:	f06f 0005 	mvn.w	r0, #5
      vTaskDelay(ticks);
    }
  }

  return (stat);
}
 8007610:	bd08      	pop	{r3, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8007612:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 8007616:	b913      	cbnz	r3, 800761e <osDelay+0x1a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8007618:	f3ef 8311 	mrs	r3, BASEPRI
 800761c:	b11b      	cbz	r3, 8007626 <osDelay+0x22>
 800761e:	4b05      	ldr	r3, [pc, #20]	; (8007634 <osDelay+0x30>)
 8007620:	681b      	ldr	r3, [r3, #0]
 8007622:	2b02      	cmp	r3, #2
 8007624:	d0f2      	beq.n	800760c <osDelay+0x8>
    if (ticks != 0U) {
 8007626:	2800      	cmp	r0, #0
 8007628:	d0f2      	beq.n	8007610 <osDelay+0xc>
      vTaskDelay(ticks);
 800762a:	f001 fccb 	bl	8008fc4 <vTaskDelay>
    stat = osOK;
 800762e:	2000      	movs	r0, #0
 8007630:	e7ee      	b.n	8007610 <osDelay+0xc>
 8007632:	bf00      	nop
 8007634:	20006900 	.word	0x20006900

08007638 <osSemaphoreNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 8007638:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800763a:	460e      	mov	r6, r1
 800763c:	4615      	mov	r5, r2
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800763e:	f3ef 8305 	mrs	r3, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 8007642:	b11b      	cbz	r3, 800764c <osSemaphoreNew+0x14>
        }

        if ((hSemaphore != NULL) && (initial_count != 0U)) {
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
            vSemaphoreDelete (hSemaphore);
            hSemaphore = NULL;
 8007644:	2400      	movs	r4, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 8007646:	4620      	mov	r0, r4
 8007648:	b002      	add	sp, #8
 800764a:	bd70      	pop	{r4, r5, r6, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800764c:	f3ef 8310 	mrs	r3, PRIMASK
  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 8007650:	b913      	cbnz	r3, 8007658 <osSemaphoreNew+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8007652:	f3ef 8311 	mrs	r3, BASEPRI
 8007656:	b11b      	cbz	r3, 8007660 <osSemaphoreNew+0x28>
 8007658:	4b21      	ldr	r3, [pc, #132]	; (80076e0 <osSemaphoreNew+0xa8>)
 800765a:	681b      	ldr	r3, [r3, #0]
 800765c:	2b02      	cmp	r3, #2
 800765e:	d0f1      	beq.n	8007644 <osSemaphoreNew+0xc>
 8007660:	2800      	cmp	r0, #0
 8007662:	d0ef      	beq.n	8007644 <osSemaphoreNew+0xc>
 8007664:	42b0      	cmp	r0, r6
 8007666:	d3ed      	bcc.n	8007644 <osSemaphoreNew+0xc>
    if (attr != NULL) {
 8007668:	b1ed      	cbz	r5, 80076a6 <osSemaphoreNew+0x6e>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 800766a:	e9d5 3202 	ldrd	r3, r2, [r5, #8]
 800766e:	b1c3      	cbz	r3, 80076a2 <osSemaphoreNew+0x6a>
 8007670:	2a4f      	cmp	r2, #79	; 0x4f
 8007672:	d9e7      	bls.n	8007644 <osSemaphoreNew+0xc>
      if (max_count == 1U) {
 8007674:	2801      	cmp	r0, #1
 8007676:	d129      	bne.n	80076cc <osSemaphoreNew+0x94>
          hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 8007678:	2203      	movs	r2, #3
 800767a:	9200      	str	r2, [sp, #0]
 800767c:	2200      	movs	r2, #0
 800767e:	4611      	mov	r1, r2
 8007680:	f000 fd29 	bl	80080d6 <xQueueGenericCreateStatic>
          hSemaphore = xSemaphoreCreateBinary();
 8007684:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 8007686:	2800      	cmp	r0, #0
 8007688:	d0dc      	beq.n	8007644 <osSemaphoreNew+0xc>
 800768a:	b1ce      	cbz	r6, 80076c0 <osSemaphoreNew+0x88>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800768c:	2300      	movs	r3, #0
 800768e:	461a      	mov	r2, r3
 8007690:	4619      	mov	r1, r3
 8007692:	f000 fdd5 	bl	8008240 <xQueueGenericSend>
 8007696:	2801      	cmp	r0, #1
 8007698:	d012      	beq.n	80076c0 <osSemaphoreNew+0x88>
            vSemaphoreDelete (hSemaphore);
 800769a:	4620      	mov	r0, r4
 800769c:	f001 f910 	bl	80088c0 <vQueueDelete>
 80076a0:	e7d0      	b.n	8007644 <osSemaphoreNew+0xc>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 80076a2:	2a00      	cmp	r2, #0
 80076a4:	d1ce      	bne.n	8007644 <osSemaphoreNew+0xc>
      if (max_count == 1U) {
 80076a6:	2801      	cmp	r0, #1
 80076a8:	d104      	bne.n	80076b4 <osSemaphoreNew+0x7c>
          hSemaphore = xSemaphoreCreateBinary();
 80076aa:	2203      	movs	r2, #3
 80076ac:	2100      	movs	r1, #0
 80076ae:	f000 fd60 	bl	8008172 <xQueueGenericCreate>
 80076b2:	e7e7      	b.n	8007684 <osSemaphoreNew+0x4c>
          hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 80076b4:	4631      	mov	r1, r6
 80076b6:	f000 fda5 	bl	8008204 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 80076ba:	4604      	mov	r4, r0
 80076bc:	2800      	cmp	r0, #0
 80076be:	d0c1      	beq.n	8007644 <osSemaphoreNew+0xc>
        if (attr != NULL) {
 80076c0:	b95d      	cbnz	r5, 80076da <osSemaphoreNew+0xa2>
        vQueueAddToRegistry (hSemaphore, name);
 80076c2:	4629      	mov	r1, r5
 80076c4:	4620      	mov	r0, r4
 80076c6:	f001 f8d5 	bl	8008874 <vQueueAddToRegistry>
  return ((osSemaphoreId_t)hSemaphore);
 80076ca:	e7bc      	b.n	8007646 <osSemaphoreNew+0xe>
          hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 80076cc:	461a      	mov	r2, r3
 80076ce:	4631      	mov	r1, r6
 80076d0:	f000 fd76 	bl	80081c0 <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 80076d4:	4604      	mov	r4, r0
 80076d6:	2800      	cmp	r0, #0
 80076d8:	d0b4      	beq.n	8007644 <osSemaphoreNew+0xc>
          name = attr->name;
 80076da:	682d      	ldr	r5, [r5, #0]
 80076dc:	e7f1      	b.n	80076c2 <osSemaphoreNew+0x8a>
 80076de:	bf00      	nop
 80076e0:	20006900 	.word	0x20006900

080076e4 <osSemaphoreAcquire>:

osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 80076e4:	b513      	push	{r0, r1, r4, lr}
 80076e6:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 80076e8:	b918      	cbnz	r0, 80076f2 <osSemaphoreAcquire+0xe>
    stat = osErrorParameter;
 80076ea:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 80076ee:	b002      	add	sp, #8
 80076f0:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80076f2:	f3ef 8305 	mrs	r3, IPSR
  else if (IS_IRQ()) {
 80076f6:	b163      	cbz	r3, 8007712 <osSemaphoreAcquire+0x2e>
    if (timeout != 0U) {
 80076f8:	2c00      	cmp	r4, #0
 80076fa:	d1f6      	bne.n	80076ea <osSemaphoreAcquire+0x6>
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 80076fc:	aa01      	add	r2, sp, #4
 80076fe:	4621      	mov	r1, r4
      yield = pdFALSE;
 8007700:	9401      	str	r4, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8007702:	f001 f867 	bl	80087d4 <xQueueReceiveFromISR>
 8007706:	2801      	cmp	r0, #1
 8007708:	d113      	bne.n	8007732 <osSemaphoreAcquire+0x4e>
        portYIELD_FROM_ISR (yield);
 800770a:	9b01      	ldr	r3, [sp, #4]
 800770c:	b9a3      	cbnz	r3, 8007738 <osSemaphoreAcquire+0x54>
  stat = osOK;
 800770e:	2000      	movs	r0, #0
 8007710:	e7ed      	b.n	80076ee <osSemaphoreAcquire+0xa>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8007712:	f3ef 8310 	mrs	r3, PRIMASK
  else if (IS_IRQ()) {
 8007716:	b913      	cbnz	r3, 800771e <osSemaphoreAcquire+0x3a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8007718:	f3ef 8311 	mrs	r3, BASEPRI
 800771c:	b11b      	cbz	r3, 8007726 <osSemaphoreAcquire+0x42>
 800771e:	4b0d      	ldr	r3, [pc, #52]	; (8007754 <osSemaphoreAcquire+0x70>)
 8007720:	681b      	ldr	r3, [r3, #0]
 8007722:	2b02      	cmp	r3, #2
 8007724:	d0e8      	beq.n	80076f8 <osSemaphoreAcquire+0x14>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 8007726:	4621      	mov	r1, r4
 8007728:	f000 ff91 	bl	800864e <xQueueSemaphoreTake>
 800772c:	2801      	cmp	r0, #1
 800772e:	d0ee      	beq.n	800770e <osSemaphoreAcquire+0x2a>
      if (timeout != 0U) {
 8007730:	b96c      	cbnz	r4, 800774e <osSemaphoreAcquire+0x6a>
        stat = osErrorResource;
 8007732:	f06f 0002 	mvn.w	r0, #2
 8007736:	e7da      	b.n	80076ee <osSemaphoreAcquire+0xa>
        portYIELD_FROM_ISR (yield);
 8007738:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800773c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007740:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8007744:	f3bf 8f4f 	dsb	sy
 8007748:	f3bf 8f6f 	isb	sy
 800774c:	e7df      	b.n	800770e <osSemaphoreAcquire+0x2a>
        stat = osErrorTimeout;
 800774e:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8007752:	e7cc      	b.n	80076ee <osSemaphoreAcquire+0xa>
 8007754:	20006900 	.word	0x20006900

08007758 <osSemaphoreRelease>:

osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 8007758:	b513      	push	{r0, r1, r4, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800775a:	b370      	cbz	r0, 80077ba <osSemaphoreRelease+0x62>
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800775c:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 8007760:	b14b      	cbz	r3, 8007776 <osSemaphoreRelease+0x1e>
    yield = pdFALSE;
 8007762:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8007764:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 8007766:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8007768:	f000 fe7e 	bl	8008468 <xQueueGiveFromISR>
 800776c:	2801      	cmp	r0, #1
 800776e:	d014      	beq.n	800779a <osSemaphoreRelease+0x42>
      portYIELD_FROM_ISR (yield);
    }
  }
  else {
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
      stat = osErrorResource;
 8007770:	f06f 0002 	mvn.w	r0, #2
 8007774:	e014      	b.n	80077a0 <osSemaphoreRelease+0x48>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8007776:	f3ef 8310 	mrs	r3, PRIMASK
  else if (IS_IRQ()) {
 800777a:	b913      	cbnz	r3, 8007782 <osSemaphoreRelease+0x2a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 800777c:	f3ef 8311 	mrs	r3, BASEPRI
 8007780:	b11b      	cbz	r3, 800778a <osSemaphoreRelease+0x32>
 8007782:	4b0f      	ldr	r3, [pc, #60]	; (80077c0 <osSemaphoreRelease+0x68>)
 8007784:	681b      	ldr	r3, [r3, #0]
 8007786:	2b02      	cmp	r3, #2
 8007788:	d0eb      	beq.n	8007762 <osSemaphoreRelease+0xa>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800778a:	2300      	movs	r3, #0
 800778c:	461a      	mov	r2, r3
 800778e:	4619      	mov	r1, r3
 8007790:	f000 fd56 	bl	8008240 <xQueueGenericSend>
 8007794:	2801      	cmp	r0, #1
 8007796:	d002      	beq.n	800779e <osSemaphoreRelease+0x46>
 8007798:	e7ea      	b.n	8007770 <osSemaphoreRelease+0x18>
      portYIELD_FROM_ISR (yield);
 800779a:	9b01      	ldr	r3, [sp, #4]
 800779c:	b913      	cbnz	r3, 80077a4 <osSemaphoreRelease+0x4c>
  stat = osOK;
 800779e:	2000      	movs	r0, #0
    }
  }

  return (stat);
}
 80077a0:	b002      	add	sp, #8
 80077a2:	bd10      	pop	{r4, pc}
      portYIELD_FROM_ISR (yield);
 80077a4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80077a8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80077ac:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80077b0:	f3bf 8f4f 	dsb	sy
 80077b4:	f3bf 8f6f 	isb	sy
 80077b8:	e7f1      	b.n	800779e <osSemaphoreRelease+0x46>
    stat = osErrorParameter;
 80077ba:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 80077be:	e7ef      	b.n	80077a0 <osSemaphoreRelease+0x48>
 80077c0:	20006900 	.word	0x20006900

080077c4 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 80077c4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80077c6:	4614      	mov	r4, r2
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80077c8:	f3ef 8305 	mrs	r3, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 80077cc:	b11b      	cbz	r3, 80077d6 <osMessageQueueNew+0x12>
  hQueue = NULL;
 80077ce:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 80077d0:	4628      	mov	r0, r5
 80077d2:	b002      	add	sp, #8
 80077d4:	bd70      	pop	{r4, r5, r6, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80077d6:	f3ef 8310 	mrs	r3, PRIMASK
  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 80077da:	b913      	cbnz	r3, 80077e2 <osMessageQueueNew+0x1e>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80077dc:	f3ef 8311 	mrs	r3, BASEPRI
 80077e0:	b11b      	cbz	r3, 80077ea <osMessageQueueNew+0x26>
 80077e2:	4b1a      	ldr	r3, [pc, #104]	; (800784c <osMessageQueueNew+0x88>)
 80077e4:	681b      	ldr	r3, [r3, #0]
 80077e6:	2b02      	cmp	r3, #2
 80077e8:	d0f1      	beq.n	80077ce <osMessageQueueNew+0xa>
 80077ea:	2800      	cmp	r0, #0
 80077ec:	d0ef      	beq.n	80077ce <osMessageQueueNew+0xa>
 80077ee:	2900      	cmp	r1, #0
 80077f0:	d0ed      	beq.n	80077ce <osMessageQueueNew+0xa>
    if (attr != NULL) {
 80077f2:	b1ec      	cbz	r4, 8007830 <osMessageQueueNew+0x6c>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 80077f4:	e9d4 3202 	ldrd	r3, r2, [r4, #8]
 80077f8:	b193      	cbz	r3, 8007820 <osMessageQueueNew+0x5c>
 80077fa:	2a4f      	cmp	r2, #79	; 0x4f
 80077fc:	d9e7      	bls.n	80077ce <osMessageQueueNew+0xa>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 80077fe:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8007800:	2a00      	cmp	r2, #0
 8007802:	d0e4      	beq.n	80077ce <osMessageQueueNew+0xa>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8007804:	6966      	ldr	r6, [r4, #20]
 8007806:	fb01 f500 	mul.w	r5, r1, r0
 800780a:	42ae      	cmp	r6, r5
 800780c:	d3df      	bcc.n	80077ce <osMessageQueueNew+0xa>
      hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 800780e:	2500      	movs	r5, #0
 8007810:	9500      	str	r5, [sp, #0]
 8007812:	f000 fc60 	bl	80080d6 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 8007816:	4605      	mov	r5, r0
 8007818:	2800      	cmp	r0, #0
 800781a:	d0d8      	beq.n	80077ce <osMessageQueueNew+0xa>
        name = attr->name;
 800781c:	6824      	ldr	r4, [r4, #0]
 800781e:	e00f      	b.n	8007840 <osMessageQueueNew+0x7c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 8007820:	2a00      	cmp	r2, #0
 8007822:	d1d4      	bne.n	80077ce <osMessageQueueNew+0xa>
 8007824:	6923      	ldr	r3, [r4, #16]
 8007826:	2b00      	cmp	r3, #0
 8007828:	d1d1      	bne.n	80077ce <osMessageQueueNew+0xa>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 800782a:	6963      	ldr	r3, [r4, #20]
 800782c:	2b00      	cmp	r3, #0
 800782e:	d1ce      	bne.n	80077ce <osMessageQueueNew+0xa>
        hQueue = xQueueCreate (msg_count, msg_size);
 8007830:	2200      	movs	r2, #0
 8007832:	f000 fc9e 	bl	8008172 <xQueueGenericCreate>
    if (hQueue != NULL) {
 8007836:	4605      	mov	r5, r0
 8007838:	2800      	cmp	r0, #0
 800783a:	d0c8      	beq.n	80077ce <osMessageQueueNew+0xa>
      if (attr != NULL) {
 800783c:	2c00      	cmp	r4, #0
 800783e:	d1ed      	bne.n	800781c <osMessageQueueNew+0x58>
      vQueueAddToRegistry (hQueue, name);
 8007840:	4621      	mov	r1, r4
 8007842:	4628      	mov	r0, r5
 8007844:	f001 f816 	bl	8008874 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 8007848:	e7c2      	b.n	80077d0 <osMessageQueueNew+0xc>
 800784a:	bf00      	nop
 800784c:	20006900 	.word	0x20006900

08007850 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 8007850:	b513      	push	{r0, r1, r4, lr}
 8007852:	461c      	mov	r4, r3
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8007854:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8007858:	b123      	cbz	r3, 8007864 <osMessageQueuePut+0x14>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800785a:	b9d8      	cbnz	r0, 8007894 <osMessageQueuePut+0x44>
      stat = osErrorParameter;
 800785c:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 8007860:	b002      	add	sp, #8
 8007862:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8007864:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 8007868:	b913      	cbnz	r3, 8007870 <osMessageQueuePut+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 800786a:	f3ef 8311 	mrs	r3, BASEPRI
 800786e:	b11b      	cbz	r3, 8007878 <osMessageQueuePut+0x28>
 8007870:	4b17      	ldr	r3, [pc, #92]	; (80078d0 <osMessageQueuePut+0x80>)
 8007872:	681b      	ldr	r3, [r3, #0]
 8007874:	2b02      	cmp	r3, #2
 8007876:	d0f0      	beq.n	800785a <osMessageQueuePut+0xa>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8007878:	2800      	cmp	r0, #0
 800787a:	d0ef      	beq.n	800785c <osMessageQueuePut+0xc>
 800787c:	2900      	cmp	r1, #0
 800787e:	d0ed      	beq.n	800785c <osMessageQueuePut+0xc>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8007880:	2300      	movs	r3, #0
 8007882:	4622      	mov	r2, r4
 8007884:	f000 fcdc 	bl	8008240 <xQueueGenericSend>
 8007888:	2801      	cmp	r0, #1
 800788a:	d010      	beq.n	80078ae <osMessageQueuePut+0x5e>
        if (timeout != 0U) {
 800788c:	b9e4      	cbnz	r4, 80078c8 <osMessageQueuePut+0x78>
          stat = osErrorResource;
 800788e:	f06f 0002 	mvn.w	r0, #2
 8007892:	e7e5      	b.n	8007860 <osMessageQueuePut+0x10>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8007894:	2900      	cmp	r1, #0
 8007896:	d0e1      	beq.n	800785c <osMessageQueuePut+0xc>
 8007898:	2c00      	cmp	r4, #0
 800789a:	d1df      	bne.n	800785c <osMessageQueuePut+0xc>
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800789c:	4623      	mov	r3, r4
 800789e:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 80078a0:	9401      	str	r4, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 80078a2:	f000 fd80 	bl	80083a6 <xQueueGenericSendFromISR>
 80078a6:	2801      	cmp	r0, #1
 80078a8:	d1f1      	bne.n	800788e <osMessageQueuePut+0x3e>
        portYIELD_FROM_ISR (yield);
 80078aa:	9b01      	ldr	r3, [sp, #4]
 80078ac:	b90b      	cbnz	r3, 80078b2 <osMessageQueuePut+0x62>
  stat = osOK;
 80078ae:	2000      	movs	r0, #0
 80078b0:	e7d6      	b.n	8007860 <osMessageQueuePut+0x10>
        portYIELD_FROM_ISR (yield);
 80078b2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80078b6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80078ba:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80078be:	f3bf 8f4f 	dsb	sy
 80078c2:	f3bf 8f6f 	isb	sy
 80078c6:	e7f2      	b.n	80078ae <osMessageQueuePut+0x5e>
          stat = osErrorTimeout;
 80078c8:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 80078cc:	e7c8      	b.n	8007860 <osMessageQueuePut+0x10>
 80078ce:	bf00      	nop
 80078d0:	20006900 	.word	0x20006900

080078d4 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 80078d4:	b513      	push	{r0, r1, r4, lr}
 80078d6:	461c      	mov	r4, r3
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80078d8:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 80078dc:	b123      	cbz	r3, 80078e8 <osMessageQueueGet+0x14>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 80078de:	b9d0      	cbnz	r0, 8007916 <osMessageQueueGet+0x42>
      stat = osErrorParameter;
 80078e0:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 80078e4:	b002      	add	sp, #8
 80078e6:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80078e8:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 80078ec:	b913      	cbnz	r3, 80078f4 <osMessageQueueGet+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80078ee:	f3ef 8311 	mrs	r3, BASEPRI
 80078f2:	b11b      	cbz	r3, 80078fc <osMessageQueueGet+0x28>
 80078f4:	4b16      	ldr	r3, [pc, #88]	; (8007950 <osMessageQueueGet+0x7c>)
 80078f6:	681b      	ldr	r3, [r3, #0]
 80078f8:	2b02      	cmp	r3, #2
 80078fa:	d0f0      	beq.n	80078de <osMessageQueueGet+0xa>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 80078fc:	2800      	cmp	r0, #0
 80078fe:	d0ef      	beq.n	80078e0 <osMessageQueueGet+0xc>
 8007900:	2900      	cmp	r1, #0
 8007902:	d0ed      	beq.n	80078e0 <osMessageQueueGet+0xc>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8007904:	4622      	mov	r2, r4
 8007906:	f000 fe03 	bl	8008510 <xQueueReceive>
 800790a:	2801      	cmp	r0, #1
 800790c:	d00f      	beq.n	800792e <osMessageQueueGet+0x5a>
        if (timeout != 0U) {
 800790e:	b9dc      	cbnz	r4, 8007948 <osMessageQueueGet+0x74>
          stat = osErrorResource;
 8007910:	f06f 0002 	mvn.w	r0, #2
 8007914:	e7e6      	b.n	80078e4 <osMessageQueueGet+0x10>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8007916:	2900      	cmp	r1, #0
 8007918:	d0e2      	beq.n	80078e0 <osMessageQueueGet+0xc>
 800791a:	2c00      	cmp	r4, #0
 800791c:	d1e0      	bne.n	80078e0 <osMessageQueueGet+0xc>
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800791e:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8007920:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 8007922:	f000 ff57 	bl	80087d4 <xQueueReceiveFromISR>
 8007926:	2801      	cmp	r0, #1
 8007928:	d1f2      	bne.n	8007910 <osMessageQueueGet+0x3c>
        portYIELD_FROM_ISR (yield);
 800792a:	9b01      	ldr	r3, [sp, #4]
 800792c:	b90b      	cbnz	r3, 8007932 <osMessageQueueGet+0x5e>
  stat = osOK;
 800792e:	2000      	movs	r0, #0
 8007930:	e7d8      	b.n	80078e4 <osMessageQueueGet+0x10>
        portYIELD_FROM_ISR (yield);
 8007932:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8007936:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800793a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800793e:	f3bf 8f4f 	dsb	sy
 8007942:	f3bf 8f6f 	isb	sy
 8007946:	e7f2      	b.n	800792e <osMessageQueueGet+0x5a>
          stat = osErrorTimeout;
 8007948:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 800794c:	e7ca      	b.n	80078e4 <osMessageQueueGet+0x10>
 800794e:	bf00      	nop
 8007950:	20006900 	.word	0x20006900

08007954 <vApplicationGetIdleTaskMemory>:
/*
  vApplicationGetIdleTaskMemory gets called when configSUPPORT_STATIC_ALLOCATION
  equals to 1 and is required for static memory allocation support.
*/
void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 8007954:	4b03      	ldr	r3, [pc, #12]	; (8007964 <vApplicationGetIdleTaskMemory+0x10>)
 8007956:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 8007958:	4b03      	ldr	r3, [pc, #12]	; (8007968 <vApplicationGetIdleTaskMemory+0x14>)
 800795a:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800795c:	2380      	movs	r3, #128	; 0x80
 800795e:	6013      	str	r3, [r2, #0]
}
 8007960:	4770      	bx	lr
 8007962:	bf00      	nop
 8007964:	20006840 	.word	0x20006840
 8007968:	20006640 	.word	0x20006640

0800796c <vApplicationGetTimerTaskMemory>:
/*
  vApplicationGetTimerTaskMemory gets called when configSUPPORT_STATIC_ALLOCATION
  equals to 1 and is required for static memory allocation support.
*/
void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 800796c:	4b03      	ldr	r3, [pc, #12]	; (800797c <vApplicationGetTimerTaskMemory+0x10>)
 800796e:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 8007970:	4b03      	ldr	r3, [pc, #12]	; (8007980 <vApplicationGetTimerTaskMemory+0x14>)
 8007972:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 8007974:	f44f 7380 	mov.w	r3, #256	; 0x100
 8007978:	6013      	str	r3, [r2, #0]
}
 800797a:	4770      	bx	lr
 800797c:	20006d04 	.word	0x20006d04
 8007980:	20006904 	.word	0x20006904

08007984 <prvInsertBlockIntoFreeList>:
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
}
/*-----------------------------------------------------------*/

static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert )
{
 8007984:	b510      	push	{r4, lr}
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 8007986:	4b0f      	ldr	r3, [pc, #60]	; (80079c4 <prvInsertBlockIntoFreeList+0x40>)
 8007988:	461a      	mov	r2, r3
 800798a:	681b      	ldr	r3, [r3, #0]
 800798c:	4283      	cmp	r3, r0
 800798e:	d3fb      	bcc.n	8007988 <prvInsertBlockIntoFreeList+0x4>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 8007990:	6854      	ldr	r4, [r2, #4]
 8007992:	1911      	adds	r1, r2, r4
 8007994:	4288      	cmp	r0, r1
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 8007996:	bf01      	itttt	eq
 8007998:	6841      	ldreq	r1, [r0, #4]
 800799a:	4610      	moveq	r0, r2
 800799c:	1909      	addeq	r1, r1, r4
 800799e:	6051      	streq	r1, [r2, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 80079a0:	6844      	ldr	r4, [r0, #4]
 80079a2:	1901      	adds	r1, r0, r4
 80079a4:	428b      	cmp	r3, r1
 80079a6:	d107      	bne.n	80079b8 <prvInsertBlockIntoFreeList+0x34>
	{
		if( pxIterator->pxNextFreeBlock != pxEnd )
 80079a8:	4907      	ldr	r1, [pc, #28]	; (80079c8 <prvInsertBlockIntoFreeList+0x44>)
 80079aa:	6809      	ldr	r1, [r1, #0]
 80079ac:	428b      	cmp	r3, r1
		{
			/* Form one big block from the two blocks. */
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 80079ae:	bf1f      	itttt	ne
 80079b0:	6859      	ldrne	r1, [r3, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 80079b2:	681b      	ldrne	r3, [r3, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 80079b4:	1909      	addne	r1, r1, r4
 80079b6:	6041      	strne	r1, [r0, #4]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 80079b8:	4290      	cmp	r0, r2
		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
 80079ba:	6003      	str	r3, [r0, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 80079bc:	bf18      	it	ne
 80079be:	6010      	strne	r0, [r2, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 80079c0:	bd10      	pop	{r4, pc}
 80079c2:	bf00      	nop
 80079c4:	20016dd4 	.word	0x20016dd4
 80079c8:	20006dc4 	.word	0x20006dc4

080079cc <pvPortMalloc>:
{
 80079cc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80079d0:	4604      	mov	r4, r0
	vTaskSuspendAll();
 80079d2:	f001 f9df 	bl	8008d94 <vTaskSuspendAll>
		if( pxEnd == NULL )
 80079d6:	4840      	ldr	r0, [pc, #256]	; (8007ad8 <pvPortMalloc+0x10c>)
 80079d8:	4d40      	ldr	r5, [pc, #256]	; (8007adc <pvPortMalloc+0x110>)
 80079da:	6803      	ldr	r3, [r0, #0]
 80079dc:	bb0b      	cbnz	r3, 8007a22 <pvPortMalloc+0x56>
	uxAddress = ( size_t ) ucHeap;
 80079de:	4940      	ldr	r1, [pc, #256]	; (8007ae0 <pvPortMalloc+0x114>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 80079e0:	074e      	lsls	r6, r1, #29
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 80079e2:	bf1f      	itttt	ne
 80079e4:	1dcb      	addne	r3, r1, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 80079e6:	f023 0307 	bicne.w	r3, r3, #7
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 80079ea:	f501 3280 	addne.w	r2, r1, #65536	; 0x10000
 80079ee:	1ad2      	subne	r2, r2, r3
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 80079f0:	bf14      	ite	ne
 80079f2:	4619      	movne	r1, r3
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
 80079f4:	f44f 3280 	moveq.w	r2, #65536	; 0x10000
	uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
 80079f8:	440a      	add	r2, r1
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 80079fa:	4e3a      	ldr	r6, [pc, #232]	; (8007ae4 <pvPortMalloc+0x118>)
	uxAddress -= xHeapStructSize;
 80079fc:	3a08      	subs	r2, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 80079fe:	f022 0207 	bic.w	r2, r2, #7
	xStart.xBlockSize = ( size_t ) 0;
 8007a02:	2300      	movs	r3, #0
 8007a04:	6073      	str	r3, [r6, #4]
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 8007a06:	6031      	str	r1, [r6, #0]
	pxEnd->pxNextFreeBlock = NULL;
 8007a08:	e9c2 3300 	strd	r3, r3, [r2]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 8007a0c:	1a53      	subs	r3, r2, r1
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 8007a0e:	e9c1 2300 	strd	r2, r3, [r1]
	pxEnd = ( void * ) uxAddress;
 8007a12:	6002      	str	r2, [r0, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8007a14:	4a34      	ldr	r2, [pc, #208]	; (8007ae8 <pvPortMalloc+0x11c>)
 8007a16:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8007a18:	4a34      	ldr	r2, [pc, #208]	; (8007aec <pvPortMalloc+0x120>)
 8007a1a:	6013      	str	r3, [r2, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 8007a1c:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 8007a20:	602b      	str	r3, [r5, #0]
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 8007a22:	682f      	ldr	r7, [r5, #0]
 8007a24:	4227      	tst	r7, r4
 8007a26:	d151      	bne.n	8007acc <pvPortMalloc+0x100>
			if( xWantedSize > 0 )
 8007a28:	2c00      	cmp	r4, #0
 8007a2a:	d042      	beq.n	8007ab2 <pvPortMalloc+0xe6>
				xWantedSize += xHeapStructSize;
 8007a2c:	f104 0308 	add.w	r3, r4, #8
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 8007a30:	0761      	lsls	r1, r4, #29
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 8007a32:	bf1c      	itt	ne
 8007a34:	f023 0307 	bicne.w	r3, r3, #7
 8007a38:	3308      	addne	r3, #8
			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 8007a3a:	2b00      	cmp	r3, #0
 8007a3c:	d046      	beq.n	8007acc <pvPortMalloc+0x100>
 8007a3e:	4c2b      	ldr	r4, [pc, #172]	; (8007aec <pvPortMalloc+0x120>)
 8007a40:	6826      	ldr	r6, [r4, #0]
 8007a42:	429e      	cmp	r6, r3
 8007a44:	d342      	bcc.n	8007acc <pvPortMalloc+0x100>
				pxBlock = xStart.pxNextFreeBlock;
 8007a46:	4a27      	ldr	r2, [pc, #156]	; (8007ae4 <pvPortMalloc+0x118>)
 8007a48:	6815      	ldr	r5, [r2, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 8007a4a:	6869      	ldr	r1, [r5, #4]
 8007a4c:	4299      	cmp	r1, r3
 8007a4e:	d204      	bcs.n	8007a5a <pvPortMalloc+0x8e>
 8007a50:	f8d5 c000 	ldr.w	ip, [r5]
 8007a54:	f1bc 0f00 	cmp.w	ip, #0
 8007a58:	d115      	bne.n	8007a86 <pvPortMalloc+0xba>
				if( pxBlock != pxEnd )
 8007a5a:	6800      	ldr	r0, [r0, #0]
 8007a5c:	42a8      	cmp	r0, r5
 8007a5e:	d035      	beq.n	8007acc <pvPortMalloc+0x100>
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 8007a60:	1ac9      	subs	r1, r1, r3
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 8007a62:	6828      	ldr	r0, [r5, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8007a64:	f8d2 8000 	ldr.w	r8, [r2]
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 8007a68:	6010      	str	r0, [r2, #0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 8007a6a:	2910      	cmp	r1, #16
 8007a6c:	d912      	bls.n	8007a94 <pvPortMalloc+0xc8>
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 8007a6e:	18e8      	adds	r0, r5, r3
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 8007a70:	0742      	lsls	r2, r0, #29
 8007a72:	d00b      	beq.n	8007a8c <pvPortMalloc+0xc0>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 8007a74:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007a78:	f383 8811 	msr	BASEPRI, r3
 8007a7c:	f3bf 8f6f 	isb	sy
 8007a80:	f3bf 8f4f 	dsb	sy
 8007a84:	e7fe      	b.n	8007a84 <pvPortMalloc+0xb8>
 8007a86:	462a      	mov	r2, r5
 8007a88:	4665      	mov	r5, ip
 8007a8a:	e7de      	b.n	8007a4a <pvPortMalloc+0x7e>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 8007a8c:	6041      	str	r1, [r0, #4]
						pxBlock->xBlockSize = xWantedSize;
 8007a8e:	606b      	str	r3, [r5, #4]
						prvInsertBlockIntoFreeList( pxNewBlockLink );
 8007a90:	f7ff ff78 	bl	8007984 <prvInsertBlockIntoFreeList>
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8007a94:	4914      	ldr	r1, [pc, #80]	; (8007ae8 <pvPortMalloc+0x11c>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8007a96:	686b      	ldr	r3, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8007a98:	6808      	ldr	r0, [r1, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8007a9a:	1af6      	subs	r6, r6, r3
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 8007a9c:	431f      	orrs	r7, r3
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8007a9e:	4286      	cmp	r6, r0
					pxBlock->pxNextFreeBlock = NULL;
 8007aa0:	f04f 0300 	mov.w	r3, #0
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8007aa4:	6026      	str	r6, [r4, #0]
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 8007aa6:	bf38      	it	cc
 8007aa8:	600e      	strcc	r6, [r1, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8007aaa:	f108 0408 	add.w	r4, r8, #8
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 8007aae:	606f      	str	r7, [r5, #4]
					pxBlock->pxNextFreeBlock = NULL;
 8007ab0:	602b      	str	r3, [r5, #0]
	( void ) xTaskResumeAll();
 8007ab2:	f001 fa13 	bl	8008edc <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 8007ab6:	0763      	lsls	r3, r4, #29
 8007ab8:	d00a      	beq.n	8007ad0 <pvPortMalloc+0x104>
 8007aba:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007abe:	f383 8811 	msr	BASEPRI, r3
 8007ac2:	f3bf 8f6f 	isb	sy
 8007ac6:	f3bf 8f4f 	dsb	sy
 8007aca:	e7fe      	b.n	8007aca <pvPortMalloc+0xfe>
void *pvReturn = NULL;
 8007acc:	2400      	movs	r4, #0
 8007ace:	e7f0      	b.n	8007ab2 <pvPortMalloc+0xe6>
}
 8007ad0:	4620      	mov	r0, r4
 8007ad2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8007ad6:	bf00      	nop
 8007ad8:	20006dc4 	.word	0x20006dc4
 8007adc:	20016dc8 	.word	0x20016dc8
 8007ae0:	20006dc8 	.word	0x20006dc8
 8007ae4:	20016dd4 	.word	0x20016dd4
 8007ae8:	20016dd0 	.word	0x20016dd0
 8007aec:	20016dcc 	.word	0x20016dcc

08007af0 <vPortFree>:
{
 8007af0:	b510      	push	{r4, lr}
	if( pv != NULL )
 8007af2:	4604      	mov	r4, r0
 8007af4:	b370      	cbz	r0, 8007b54 <vPortFree+0x64>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 8007af6:	4a18      	ldr	r2, [pc, #96]	; (8007b58 <vPortFree+0x68>)
 8007af8:	f850 3c04 	ldr.w	r3, [r0, #-4]
 8007afc:	6812      	ldr	r2, [r2, #0]
 8007afe:	4213      	tst	r3, r2
 8007b00:	d108      	bne.n	8007b14 <vPortFree+0x24>
 8007b02:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007b06:	f383 8811 	msr	BASEPRI, r3
 8007b0a:	f3bf 8f6f 	isb	sy
 8007b0e:	f3bf 8f4f 	dsb	sy
 8007b12:	e7fe      	b.n	8007b12 <vPortFree+0x22>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 8007b14:	f850 1c08 	ldr.w	r1, [r0, #-8]
 8007b18:	b141      	cbz	r1, 8007b2c <vPortFree+0x3c>
 8007b1a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007b1e:	f383 8811 	msr	BASEPRI, r3
 8007b22:	f3bf 8f6f 	isb	sy
 8007b26:	f3bf 8f4f 	dsb	sy
 8007b2a:	e7fe      	b.n	8007b2a <vPortFree+0x3a>
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 8007b2c:	ea23 0302 	bic.w	r3, r3, r2
 8007b30:	f840 3c04 	str.w	r3, [r0, #-4]
				vTaskSuspendAll();
 8007b34:	f001 f92e 	bl	8008d94 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 8007b38:	4a08      	ldr	r2, [pc, #32]	; (8007b5c <vPortFree+0x6c>)
 8007b3a:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8007b3e:	6811      	ldr	r1, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8007b40:	f1a4 0008 	sub.w	r0, r4, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 8007b44:	440b      	add	r3, r1
 8007b46:	6013      	str	r3, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8007b48:	f7ff ff1c 	bl	8007984 <prvInsertBlockIntoFreeList>
}
 8007b4c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				( void ) xTaskResumeAll();
 8007b50:	f001 b9c4 	b.w	8008edc <xTaskResumeAll>
}
 8007b54:	bd10      	pop	{r4, pc}
 8007b56:	bf00      	nop
 8007b58:	20016dc8 	.word	0x20016dc8
 8007b5c:	20016dcc 	.word	0x20016dcc

08007b60 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8007b60:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 8007b64:	f04f 32ff 	mov.w	r2, #4294967295

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8007b68:	e9c0 2302 	strd	r2, r3, [r0, #8]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8007b6c:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8007b6e:	6103      	str	r3, [r0, #16]

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 8007b70:	2300      	movs	r3, #0
 8007b72:	6003      	str	r3, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 8007b74:	4770      	bx	lr

08007b76 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 8007b76:	2300      	movs	r3, #0
 8007b78:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 8007b7a:	4770      	bx	lr

08007b7c <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 8007b7c:	6843      	ldr	r3, [r0, #4]
	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
 8007b7e:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 8007b80:	689a      	ldr	r2, [r3, #8]
 8007b82:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
 8007b84:	689a      	ldr	r2, [r3, #8]
 8007b86:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious = pxNewListItem;
 8007b88:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 8007b8a:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 8007b8c:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8007b8e:	3301      	adds	r3, #1
 8007b90:	6003      	str	r3, [r0, #0]
}
 8007b92:	4770      	bx	lr

08007b94 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 8007b94:	b530      	push	{r4, r5, lr}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 8007b96:	680c      	ldr	r4, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 8007b98:	1c63      	adds	r3, r4, #1
 8007b9a:	d10a      	bne.n	8007bb2 <vListInsert+0x1e>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
 8007b9c:	6903      	ldr	r3, [r0, #16]
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
 8007b9e:	685a      	ldr	r2, [r3, #4]
 8007ba0:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 8007ba2:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
 8007ba4:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 8007ba6:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 8007ba8:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 8007baa:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8007bac:	3301      	adds	r3, #1
 8007bae:	6003      	str	r3, [r0, #0]
}
 8007bb0:	bd30      	pop	{r4, r5, pc}
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 8007bb2:	f100 0208 	add.w	r2, r0, #8
 8007bb6:	4613      	mov	r3, r2
 8007bb8:	6852      	ldr	r2, [r2, #4]
 8007bba:	6815      	ldr	r5, [r2, #0]
 8007bbc:	42a5      	cmp	r5, r4
 8007bbe:	d9fa      	bls.n	8007bb6 <vListInsert+0x22>
 8007bc0:	e7ed      	b.n	8007b9e <vListInsert+0xa>

08007bc2 <uxListRemove>:
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8007bc2:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
List_t * const pxList = pxItemToRemove->pxContainer;
 8007bc6:	6903      	ldr	r3, [r0, #16]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8007bc8:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 8007bca:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 8007bcc:	6859      	ldr	r1, [r3, #4]
 8007bce:	4281      	cmp	r1, r0
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 8007bd0:	bf08      	it	eq
 8007bd2:	605a      	streq	r2, [r3, #4]
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
 8007bd4:	2200      	movs	r2, #0
 8007bd6:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
 8007bd8:	681a      	ldr	r2, [r3, #0]
 8007bda:	3a01      	subs	r2, #1
 8007bdc:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
 8007bde:	6818      	ldr	r0, [r3, #0]
}
 8007be0:	4770      	bx	lr
	...

08007be4 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 8007be4:	4808      	ldr	r0, [pc, #32]	; (8007c08 <prvPortStartFirstTask+0x24>)
 8007be6:	6800      	ldr	r0, [r0, #0]
 8007be8:	6800      	ldr	r0, [r0, #0]
 8007bea:	f380 8808 	msr	MSP, r0
 8007bee:	f04f 0000 	mov.w	r0, #0
 8007bf2:	f380 8814 	msr	CONTROL, r0
 8007bf6:	b662      	cpsie	i
 8007bf8:	b661      	cpsie	f
 8007bfa:	f3bf 8f4f 	dsb	sy
 8007bfe:	f3bf 8f6f 	isb	sy
 8007c02:	df00      	svc	0
 8007c04:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 8007c06:	0000      	.short	0x0000
 8007c08:	e000ed08 	.word	0xe000ed08

08007c0c <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 8007c0c:	f8df 000c 	ldr.w	r0, [pc, #12]	; 8007c1c <vPortEnableVFP+0x10>
 8007c10:	6801      	ldr	r1, [r0, #0]
 8007c12:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8007c16:	6001      	str	r1, [r0, #0]
 8007c18:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 8007c1a:	0000      	.short	0x0000
 8007c1c:	e000ed88 	.word	0xe000ed88

08007c20 <prvTaskExitError>:
{
 8007c20:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 8007c22:	2300      	movs	r3, #0
 8007c24:	9301      	str	r3, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 8007c26:	4b0d      	ldr	r3, [pc, #52]	; (8007c5c <prvTaskExitError+0x3c>)
 8007c28:	681b      	ldr	r3, [r3, #0]
 8007c2a:	3301      	adds	r3, #1
 8007c2c:	d008      	beq.n	8007c40 <prvTaskExitError+0x20>
 8007c2e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007c32:	f383 8811 	msr	BASEPRI, r3
 8007c36:	f3bf 8f6f 	isb	sy
 8007c3a:	f3bf 8f4f 	dsb	sy
 8007c3e:	e7fe      	b.n	8007c3e <prvTaskExitError+0x1e>
 8007c40:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007c44:	f383 8811 	msr	BASEPRI, r3
 8007c48:	f3bf 8f6f 	isb	sy
 8007c4c:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 8007c50:	9b01      	ldr	r3, [sp, #4]
 8007c52:	2b00      	cmp	r3, #0
 8007c54:	d0fc      	beq.n	8007c50 <prvTaskExitError+0x30>
}
 8007c56:	b002      	add	sp, #8
 8007c58:	4770      	bx	lr
 8007c5a:	bf00      	nop
 8007c5c:	20000088 	.word	0x20000088

08007c60 <pxPortInitialiseStack>:
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 8007c60:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8007c64:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 8007c68:	4b07      	ldr	r3, [pc, #28]	; (8007c88 <pxPortInitialiseStack+0x28>)
 8007c6a:	f840 3c0c 	str.w	r3, [r0, #-12]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 8007c6e:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 8007c72:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 8007c76:	f840 1c08 	str.w	r1, [r0, #-8]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 8007c7a:	f840 2c20 	str.w	r2, [r0, #-32]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 8007c7e:	f840 3c24 	str.w	r3, [r0, #-36]
}
 8007c82:	3844      	subs	r0, #68	; 0x44
 8007c84:	4770      	bx	lr
 8007c86:	bf00      	nop
 8007c88:	08007c21 	.word	0x08007c21
 8007c8c:	00000000 	.word	0x00000000

08007c90 <SVC_Handler>:
	__asm volatile (
 8007c90:	4b07      	ldr	r3, [pc, #28]	; (8007cb0 <pxCurrentTCBConst2>)
 8007c92:	6819      	ldr	r1, [r3, #0]
 8007c94:	6808      	ldr	r0, [r1, #0]
 8007c96:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007c9a:	f380 8809 	msr	PSP, r0
 8007c9e:	f3bf 8f6f 	isb	sy
 8007ca2:	f04f 0000 	mov.w	r0, #0
 8007ca6:	f380 8811 	msr	BASEPRI, r0
 8007caa:	4770      	bx	lr
 8007cac:	f3af 8000 	nop.w

08007cb0 <pxCurrentTCBConst2>:
 8007cb0:	20016e24 	.word	0x20016e24

08007cb4 <vPortEnterCritical>:
 8007cb4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007cb8:	f383 8811 	msr	BASEPRI, r3
 8007cbc:	f3bf 8f6f 	isb	sy
 8007cc0:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 8007cc4:	4a0a      	ldr	r2, [pc, #40]	; (8007cf0 <vPortEnterCritical+0x3c>)
 8007cc6:	6813      	ldr	r3, [r2, #0]
 8007cc8:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 8007cca:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 8007ccc:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 8007cce:	d10e      	bne.n	8007cee <vPortEnterCritical+0x3a>
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 8007cd0:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8007cd4:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	; 0xd04
 8007cd8:	b2db      	uxtb	r3, r3
 8007cda:	b143      	cbz	r3, 8007cee <vPortEnterCritical+0x3a>
 8007cdc:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007ce0:	f383 8811 	msr	BASEPRI, r3
 8007ce4:	f3bf 8f6f 	isb	sy
 8007ce8:	f3bf 8f4f 	dsb	sy
 8007cec:	e7fe      	b.n	8007cec <vPortEnterCritical+0x38>
}
 8007cee:	4770      	bx	lr
 8007cf0:	20000088 	.word	0x20000088

08007cf4 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 8007cf4:	4a08      	ldr	r2, [pc, #32]	; (8007d18 <vPortExitCritical+0x24>)
 8007cf6:	6813      	ldr	r3, [r2, #0]
 8007cf8:	b943      	cbnz	r3, 8007d0c <vPortExitCritical+0x18>
 8007cfa:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007cfe:	f383 8811 	msr	BASEPRI, r3
 8007d02:	f3bf 8f6f 	isb	sy
 8007d06:	f3bf 8f4f 	dsb	sy
 8007d0a:	e7fe      	b.n	8007d0a <vPortExitCritical+0x16>
	uxCriticalNesting--;
 8007d0c:	3b01      	subs	r3, #1
 8007d0e:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 8007d10:	b90b      	cbnz	r3, 8007d16 <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 8007d12:	f383 8811 	msr	BASEPRI, r3
}
 8007d16:	4770      	bx	lr
 8007d18:	20000088 	.word	0x20000088
 8007d1c:	00000000 	.word	0x00000000

08007d20 <PendSV_Handler>:
	__asm volatile
 8007d20:	f3ef 8009 	mrs	r0, PSP
 8007d24:	f3bf 8f6f 	isb	sy
 8007d28:	4b15      	ldr	r3, [pc, #84]	; (8007d80 <pxCurrentTCBConst>)
 8007d2a:	681a      	ldr	r2, [r3, #0]
 8007d2c:	f01e 0f10 	tst.w	lr, #16
 8007d30:	bf08      	it	eq
 8007d32:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 8007d36:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007d3a:	6010      	str	r0, [r2, #0]
 8007d3c:	e92d 0009 	stmdb	sp!, {r0, r3}
 8007d40:	f04f 0050 	mov.w	r0, #80	; 0x50
 8007d44:	f380 8811 	msr	BASEPRI, r0
 8007d48:	f3bf 8f4f 	dsb	sy
 8007d4c:	f3bf 8f6f 	isb	sy
 8007d50:	f001 f95c 	bl	800900c <vTaskSwitchContext>
 8007d54:	f04f 0000 	mov.w	r0, #0
 8007d58:	f380 8811 	msr	BASEPRI, r0
 8007d5c:	bc09      	pop	{r0, r3}
 8007d5e:	6819      	ldr	r1, [r3, #0]
 8007d60:	6808      	ldr	r0, [r1, #0]
 8007d62:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007d66:	f01e 0f10 	tst.w	lr, #16
 8007d6a:	bf08      	it	eq
 8007d6c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 8007d70:	f380 8809 	msr	PSP, r0
 8007d74:	f3bf 8f6f 	isb	sy
 8007d78:	4770      	bx	lr
 8007d7a:	bf00      	nop
 8007d7c:	f3af 8000 	nop.w

08007d80 <pxCurrentTCBConst>:
 8007d80:	20016e24 	.word	0x20016e24

08007d84 <SysTick_Handler>:
{
 8007d84:	b508      	push	{r3, lr}
	__asm volatile
 8007d86:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007d8a:	f383 8811 	msr	BASEPRI, r3
 8007d8e:	f3bf 8f6f 	isb	sy
 8007d92:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 8007d96:	f001 f80b 	bl	8008db0 <xTaskIncrementTick>
 8007d9a:	b128      	cbz	r0, 8007da8 <SysTick_Handler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 8007d9c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8007da0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007da4:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
	__asm volatile
 8007da8:	2300      	movs	r3, #0
 8007daa:	f383 8811 	msr	BASEPRI, r3
}
 8007dae:	bd08      	pop	{r3, pc}

08007db0 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 8007db0:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 8007db4:	2300      	movs	r3, #0
 8007db6:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 8007db8:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 8007dba:	4b05      	ldr	r3, [pc, #20]	; (8007dd0 <vPortSetupTimerInterrupt+0x20>)
 8007dbc:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8007dc0:	681b      	ldr	r3, [r3, #0]
 8007dc2:	fbb3 f3f1 	udiv	r3, r3, r1
 8007dc6:	3b01      	subs	r3, #1
 8007dc8:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 8007dca:	2307      	movs	r3, #7
 8007dcc:	6113      	str	r3, [r2, #16]
}
 8007dce:	4770      	bx	lr
 8007dd0:	2000007c 	.word	0x2000007c

08007dd4 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 8007dd4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
{
 8007dd8:	b537      	push	{r0, r1, r2, r4, r5, lr}
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 8007dda:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	; 0xd00
 8007dde:	4a3a      	ldr	r2, [pc, #232]	; (8007ec8 <xPortStartScheduler+0xf4>)
 8007de0:	4291      	cmp	r1, r2
 8007de2:	d108      	bne.n	8007df6 <xPortStartScheduler+0x22>
	__asm volatile
 8007de4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007de8:	f383 8811 	msr	BASEPRI, r3
 8007dec:	f3bf 8f6f 	isb	sy
 8007df0:	f3bf 8f4f 	dsb	sy
 8007df4:	e7fe      	b.n	8007df4 <xPortStartScheduler+0x20>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 8007df6:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	; 0xd00
 8007dfa:	4b34      	ldr	r3, [pc, #208]	; (8007ecc <xPortStartScheduler+0xf8>)
 8007dfc:	429a      	cmp	r2, r3
 8007dfe:	d108      	bne.n	8007e12 <xPortStartScheduler+0x3e>
 8007e00:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007e04:	f383 8811 	msr	BASEPRI, r3
 8007e08:	f3bf 8f6f 	isb	sy
 8007e0c:	f3bf 8f4f 	dsb	sy
 8007e10:	e7fe      	b.n	8007e10 <xPortStartScheduler+0x3c>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 8007e12:	4b2f      	ldr	r3, [pc, #188]	; (8007ed0 <xPortStartScheduler+0xfc>)
 8007e14:	781a      	ldrb	r2, [r3, #0]
 8007e16:	b2d2      	uxtb	r2, r2
 8007e18:	9201      	str	r2, [sp, #4]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 8007e1a:	22ff      	movs	r2, #255	; 0xff
 8007e1c:	701a      	strb	r2, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 8007e1e:	781b      	ldrb	r3, [r3, #0]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8007e20:	4a2c      	ldr	r2, [pc, #176]	; (8007ed4 <xPortStartScheduler+0x100>)
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 8007e22:	b2db      	uxtb	r3, r3
 8007e24:	f88d 3003 	strb.w	r3, [sp, #3]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8007e28:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8007e2c:	f003 0350 	and.w	r3, r3, #80	; 0x50
 8007e30:	7013      	strb	r3, [r2, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 8007e32:	4a29      	ldr	r2, [pc, #164]	; (8007ed8 <xPortStartScheduler+0x104>)
 8007e34:	2307      	movs	r3, #7
 8007e36:	6013      	str	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 8007e38:	2100      	movs	r1, #0
 8007e3a:	f89d 0003 	ldrb.w	r0, [sp, #3]
 8007e3e:	0600      	lsls	r0, r0, #24
 8007e40:	f103 34ff 	add.w	r4, r3, #4294967295
 8007e44:	d40c      	bmi.n	8007e60 <xPortStartScheduler+0x8c>
 8007e46:	b111      	cbz	r1, 8007e4e <xPortStartScheduler+0x7a>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 8007e48:	2b03      	cmp	r3, #3
 8007e4a:	6013      	str	r3, [r2, #0]
 8007e4c:	d011      	beq.n	8007e72 <xPortStartScheduler+0x9e>
 8007e4e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007e52:	f383 8811 	msr	BASEPRI, r3
 8007e56:	f3bf 8f6f 	isb	sy
 8007e5a:	f3bf 8f4f 	dsb	sy
 8007e5e:	e7fe      	b.n	8007e5e <xPortStartScheduler+0x8a>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 8007e60:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8007e64:	005b      	lsls	r3, r3, #1
 8007e66:	b2db      	uxtb	r3, r3
 8007e68:	f88d 3003 	strb.w	r3, [sp, #3]
 8007e6c:	2101      	movs	r1, #1
 8007e6e:	4623      	mov	r3, r4
 8007e70:	e7e3      	b.n	8007e3a <xPortStartScheduler+0x66>
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 8007e72:	f44f 7340 	mov.w	r3, #768	; 0x300
 8007e76:	6013      	str	r3, [r2, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 8007e78:	9b01      	ldr	r3, [sp, #4]
 8007e7a:	4a15      	ldr	r2, [pc, #84]	; (8007ed0 <xPortStartScheduler+0xfc>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 8007e7c:	f04f 24e0 	mov.w	r4, #3758153728	; 0xe000e000
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 8007e80:	b2db      	uxtb	r3, r3
 8007e82:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 8007e84:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	; 0xd20
 8007e88:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8007e8c:	f8c4 3d20 	str.w	r3, [r4, #3360]	; 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 8007e90:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	; 0xd20
 8007e94:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 8007e98:	f8c4 3d20 	str.w	r3, [r4, #3360]	; 0xd20
	vPortSetupTimerInterrupt();
 8007e9c:	f7ff ff88 	bl	8007db0 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 8007ea0:	4b0e      	ldr	r3, [pc, #56]	; (8007edc <xPortStartScheduler+0x108>)
 8007ea2:	2500      	movs	r5, #0
 8007ea4:	601d      	str	r5, [r3, #0]
	vPortEnableVFP();
 8007ea6:	f7ff feb1 	bl	8007c0c <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 8007eaa:	f8d4 3f34 	ldr.w	r3, [r4, #3892]	; 0xf34
 8007eae:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 8007eb2:	f8c4 3f34 	str.w	r3, [r4, #3892]	; 0xf34
	prvPortStartFirstTask();
 8007eb6:	f7ff fe95 	bl	8007be4 <prvPortStartFirstTask>
	vTaskSwitchContext();
 8007eba:	f001 f8a7 	bl	800900c <vTaskSwitchContext>
	prvTaskExitError();
 8007ebe:	f7ff feaf 	bl	8007c20 <prvTaskExitError>
}
 8007ec2:	4628      	mov	r0, r5
 8007ec4:	b003      	add	sp, #12
 8007ec6:	bd30      	pop	{r4, r5, pc}
 8007ec8:	410fc271 	.word	0x410fc271
 8007ecc:	410fc270 	.word	0x410fc270
 8007ed0:	e000e400 	.word	0xe000e400
 8007ed4:	20016ddc 	.word	0x20016ddc
 8007ed8:	20016de0 	.word	0x20016de0
 8007edc:	20000088 	.word	0x20000088

08007ee0 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 8007ee0:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 8007ee4:	2b0f      	cmp	r3, #15
 8007ee6:	d90e      	bls.n	8007f06 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 8007ee8:	4a11      	ldr	r2, [pc, #68]	; (8007f30 <vPortValidateInterruptPriority+0x50>)
 8007eea:	5c9b      	ldrb	r3, [r3, r2]
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 8007eec:	4a11      	ldr	r2, [pc, #68]	; (8007f34 <vPortValidateInterruptPriority+0x54>)
 8007eee:	7812      	ldrb	r2, [r2, #0]
 8007ef0:	429a      	cmp	r2, r3
 8007ef2:	d908      	bls.n	8007f06 <vPortValidateInterruptPriority+0x26>
 8007ef4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007ef8:	f383 8811 	msr	BASEPRI, r3
 8007efc:	f3bf 8f6f 	isb	sy
 8007f00:	f3bf 8f4f 	dsb	sy
 8007f04:	e7fe      	b.n	8007f04 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 8007f06:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8007f0a:	4a0b      	ldr	r2, [pc, #44]	; (8007f38 <vPortValidateInterruptPriority+0x58>)
 8007f0c:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	; 0xd0c
 8007f10:	6812      	ldr	r2, [r2, #0]
 8007f12:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8007f16:	4293      	cmp	r3, r2
 8007f18:	d908      	bls.n	8007f2c <vPortValidateInterruptPriority+0x4c>
 8007f1a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007f1e:	f383 8811 	msr	BASEPRI, r3
 8007f22:	f3bf 8f6f 	isb	sy
 8007f26:	f3bf 8f4f 	dsb	sy
 8007f2a:	e7fe      	b.n	8007f2a <vPortValidateInterruptPriority+0x4a>
	}
 8007f2c:	4770      	bx	lr
 8007f2e:	bf00      	nop
 8007f30:	e000e3f0 	.word	0xe000e3f0
 8007f34:	20016ddc 	.word	0x20016ddc
 8007f38:	20016de0 	.word	0x20016de0

08007f3c <prvIsQueueEmpty>:
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
 8007f3c:	b510      	push	{r4, lr}
 8007f3e:	4604      	mov	r4, r0
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8007f40:	f7ff feb8 	bl	8007cb4 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 8007f44:	6ba4      	ldr	r4, [r4, #56]	; 0x38
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 8007f46:	f7ff fed5 	bl	8007cf4 <vPortExitCritical>

	return xReturn;
}
 8007f4a:	fab4 f084 	clz	r0, r4
 8007f4e:	0940      	lsrs	r0, r0, #5
 8007f50:	bd10      	pop	{r4, pc}

08007f52 <prvCopyDataToQueue>:
{
 8007f52:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007f54:	4615      	mov	r5, r2
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 8007f56:	6c02      	ldr	r2, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8007f58:	6b86      	ldr	r6, [r0, #56]	; 0x38
{
 8007f5a:	4604      	mov	r4, r0
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 8007f5c:	b952      	cbnz	r2, 8007f74 <prvCopyDataToQueue+0x22>
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8007f5e:	6807      	ldr	r7, [r0, #0]
 8007f60:	bb47      	cbnz	r7, 8007fb4 <prvCopyDataToQueue+0x62>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 8007f62:	6880      	ldr	r0, [r0, #8]
 8007f64:	f001 f9ae 	bl	80092c4 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 8007f68:	60a7      	str	r7, [r4, #8]
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 8007f6a:	4605      	mov	r5, r0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8007f6c:	3601      	adds	r6, #1
 8007f6e:	63a6      	str	r6, [r4, #56]	; 0x38
}
 8007f70:	4628      	mov	r0, r5
 8007f72:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	else if( xPosition == queueSEND_TO_BACK )
 8007f74:	b965      	cbnz	r5, 8007f90 <prvCopyDataToQueue+0x3e>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8007f76:	6840      	ldr	r0, [r0, #4]
 8007f78:	f017 fc44 	bl	801f804 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007f7c:	6863      	ldr	r3, [r4, #4]
 8007f7e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8007f80:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8007f82:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007f84:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8007f86:	4293      	cmp	r3, r2
 8007f88:	d3f0      	bcc.n	8007f6c <prvCopyDataToQueue+0x1a>
			pxQueue->pcWriteTo = pxQueue->pcHead;
 8007f8a:	6823      	ldr	r3, [r4, #0]
 8007f8c:	6063      	str	r3, [r4, #4]
 8007f8e:	e7ed      	b.n	8007f6c <prvCopyDataToQueue+0x1a>
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 8007f90:	68c0      	ldr	r0, [r0, #12]
 8007f92:	f017 fc37 	bl	801f804 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8007f96:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8007f98:	68e3      	ldr	r3, [r4, #12]
 8007f9a:	4251      	negs	r1, r2
 8007f9c:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8007f9e:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8007fa0:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8007fa2:	4293      	cmp	r3, r2
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 8007fa4:	bf3e      	ittt	cc
 8007fa6:	68a3      	ldrcc	r3, [r4, #8]
 8007fa8:	185b      	addcc	r3, r3, r1
 8007faa:	60e3      	strcc	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 8007fac:	2d02      	cmp	r5, #2
 8007fae:	d101      	bne.n	8007fb4 <prvCopyDataToQueue+0x62>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8007fb0:	b116      	cbz	r6, 8007fb8 <prvCopyDataToQueue+0x66>
				--uxMessagesWaiting;
 8007fb2:	3e01      	subs	r6, #1
BaseType_t xReturn = pdFALSE;
 8007fb4:	2500      	movs	r5, #0
 8007fb6:	e7d9      	b.n	8007f6c <prvCopyDataToQueue+0x1a>
 8007fb8:	4635      	mov	r5, r6
 8007fba:	e7d7      	b.n	8007f6c <prvCopyDataToQueue+0x1a>

08007fbc <prvCopyDataFromQueue>:
{
 8007fbc:	4603      	mov	r3, r0
 8007fbe:	b410      	push	{r4}
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8007fc0:	6c1a      	ldr	r2, [r3, #64]	; 0x40
{
 8007fc2:	4608      	mov	r0, r1
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8007fc4:	b16a      	cbz	r2, 8007fe2 <prvCopyDataFromQueue+0x26>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007fc6:	68dc      	ldr	r4, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8007fc8:	6899      	ldr	r1, [r3, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007fca:	4414      	add	r4, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8007fcc:	428c      	cmp	r4, r1
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8007fce:	bf28      	it	cs
 8007fd0:	6819      	ldrcs	r1, [r3, #0]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007fd2:	60dc      	str	r4, [r3, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8007fd4:	bf28      	it	cs
 8007fd6:	60d9      	strcs	r1, [r3, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8007fd8:	68d9      	ldr	r1, [r3, #12]
}
 8007fda:	f85d 4b04 	ldr.w	r4, [sp], #4
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8007fde:	f017 bc11 	b.w	801f804 <memcpy>
}
 8007fe2:	f85d 4b04 	ldr.w	r4, [sp], #4
 8007fe6:	4770      	bx	lr

08007fe8 <prvUnlockQueue>:
{
 8007fe8:	b570      	push	{r4, r5, r6, lr}
 8007fea:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 8007fec:	f7ff fe62 	bl	8007cb4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8007ff0:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8007ff4:	f104 0624 	add.w	r6, r4, #36	; 0x24
		int8_t cTxLock = pxQueue->cTxLock;
 8007ff8:	b26d      	sxtb	r5, r5
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8007ffa:	2d00      	cmp	r5, #0
 8007ffc:	dc14      	bgt.n	8008028 <prvUnlockQueue+0x40>
		pxQueue->cTxLock = queueUNLOCKED;
 8007ffe:	23ff      	movs	r3, #255	; 0xff
 8008000:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 8008004:	f7ff fe76 	bl	8007cf4 <vPortExitCritical>
	taskENTER_CRITICAL();
 8008008:	f7ff fe54 	bl	8007cb4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800800c:	f894 5044 	ldrb.w	r5, [r4, #68]	; 0x44
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008010:	f104 0610 	add.w	r6, r4, #16
		int8_t cRxLock = pxQueue->cRxLock;
 8008014:	b26d      	sxtb	r5, r5
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8008016:	2d00      	cmp	r5, #0
 8008018:	dc12      	bgt.n	8008040 <prvUnlockQueue+0x58>
		pxQueue->cRxLock = queueUNLOCKED;
 800801a:	23ff      	movs	r3, #255	; 0xff
 800801c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
}
 8008020:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 8008024:	f7ff be66 	b.w	8007cf4 <vPortExitCritical>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8008028:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800802a:	2b00      	cmp	r3, #0
 800802c:	d0e7      	beq.n	8007ffe <prvUnlockQueue+0x16>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800802e:	4630      	mov	r0, r6
 8008030:	f001 f864 	bl	80090fc <xTaskRemoveFromEventList>
 8008034:	b108      	cbz	r0, 800803a <prvUnlockQueue+0x52>
						vTaskMissedYield();
 8008036:	f001 f8ed 	bl	8009214 <vTaskMissedYield>
			--cTxLock;
 800803a:	3d01      	subs	r5, #1
 800803c:	b26d      	sxtb	r5, r5
 800803e:	e7dc      	b.n	8007ffa <prvUnlockQueue+0x12>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8008040:	6923      	ldr	r3, [r4, #16]
 8008042:	2b00      	cmp	r3, #0
 8008044:	d0e9      	beq.n	800801a <prvUnlockQueue+0x32>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008046:	4630      	mov	r0, r6
 8008048:	f001 f858 	bl	80090fc <xTaskRemoveFromEventList>
 800804c:	b108      	cbz	r0, 8008052 <prvUnlockQueue+0x6a>
					vTaskMissedYield();
 800804e:	f001 f8e1 	bl	8009214 <vTaskMissedYield>
				--cRxLock;
 8008052:	3d01      	subs	r5, #1
 8008054:	b26d      	sxtb	r5, r5
 8008056:	e7de      	b.n	8008016 <prvUnlockQueue+0x2e>

08008058 <xQueueGenericReset>:
{
 8008058:	b538      	push	{r3, r4, r5, lr}
 800805a:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 800805c:	4604      	mov	r4, r0
 800805e:	b940      	cbnz	r0, 8008072 <xQueueGenericReset+0x1a>
 8008060:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008064:	f383 8811 	msr	BASEPRI, r3
 8008068:	f3bf 8f6f 	isb	sy
 800806c:	f3bf 8f4f 	dsb	sy
 8008070:	e7fe      	b.n	8008070 <xQueueGenericReset+0x18>
	taskENTER_CRITICAL();
 8008072:	f7ff fe1f 	bl	8007cb4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8008076:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	; 0x3c
 800807a:	6822      	ldr	r2, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800807c:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800807e:	434b      	muls	r3, r1
 8008080:	18d0      	adds	r0, r2, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8008082:	1a5b      	subs	r3, r3, r1
 8008084:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8008086:	60a0      	str	r0, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8008088:	60e3      	str	r3, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800808a:	2000      	movs	r0, #0
		pxQueue->cRxLock = queueUNLOCKED;
 800808c:	23ff      	movs	r3, #255	; 0xff
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800808e:	63a0      	str	r0, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 8008090:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
 8008094:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
		if( xNewQueue == pdFALSE )
 8008098:	b9a5      	cbnz	r5, 80080c4 <xQueueGenericReset+0x6c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800809a:	6923      	ldr	r3, [r4, #16]
 800809c:	b173      	cbz	r3, 80080bc <xQueueGenericReset+0x64>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800809e:	f104 0010 	add.w	r0, r4, #16
 80080a2:	f001 f82b 	bl	80090fc <xTaskRemoveFromEventList>
 80080a6:	b148      	cbz	r0, 80080bc <xQueueGenericReset+0x64>
					queueYIELD_IF_USING_PREEMPTION();
 80080a8:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80080ac:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80080b0:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80080b4:	f3bf 8f4f 	dsb	sy
 80080b8:	f3bf 8f6f 	isb	sy
	taskEXIT_CRITICAL();
 80080bc:	f7ff fe1a 	bl	8007cf4 <vPortExitCritical>
}
 80080c0:	2001      	movs	r0, #1
 80080c2:	bd38      	pop	{r3, r4, r5, pc}
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 80080c4:	f104 0010 	add.w	r0, r4, #16
 80080c8:	f7ff fd4a 	bl	8007b60 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 80080cc:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80080d0:	f7ff fd46 	bl	8007b60 <vListInitialise>
 80080d4:	e7f2      	b.n	80080bc <xQueueGenericReset+0x64>

080080d6 <xQueueGenericCreateStatic>:
	{
 80080d6:	b513      	push	{r0, r1, r4, lr}
 80080d8:	461c      	mov	r4, r3
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 80080da:	b940      	cbnz	r0, 80080ee <xQueueGenericCreateStatic+0x18>
 80080dc:	f04f 0350 	mov.w	r3, #80	; 0x50
 80080e0:	f383 8811 	msr	BASEPRI, r3
 80080e4:	f3bf 8f6f 	isb	sy
 80080e8:	f3bf 8f4f 	dsb	sy
 80080ec:	e7fe      	b.n	80080ec <xQueueGenericCreateStatic+0x16>
		configASSERT( pxStaticQueue != NULL );
 80080ee:	b943      	cbnz	r3, 8008102 <xQueueGenericCreateStatic+0x2c>
 80080f0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80080f4:	f383 8811 	msr	BASEPRI, r3
 80080f8:	f3bf 8f6f 	isb	sy
 80080fc:	f3bf 8f4f 	dsb	sy
 8008100:	e7fe      	b.n	8008100 <xQueueGenericCreateStatic+0x2a>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 8008102:	b14a      	cbz	r2, 8008118 <xQueueGenericCreateStatic+0x42>
 8008104:	b991      	cbnz	r1, 800812c <xQueueGenericCreateStatic+0x56>
 8008106:	f04f 0350 	mov.w	r3, #80	; 0x50
 800810a:	f383 8811 	msr	BASEPRI, r3
 800810e:	f3bf 8f6f 	isb	sy
 8008112:	f3bf 8f4f 	dsb	sy
 8008116:	e7fe      	b.n	8008116 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 8008118:	b141      	cbz	r1, 800812c <xQueueGenericCreateStatic+0x56>
 800811a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800811e:	f383 8811 	msr	BASEPRI, r3
 8008122:	f3bf 8f6f 	isb	sy
 8008126:	f3bf 8f4f 	dsb	sy
 800812a:	e7fe      	b.n	800812a <xQueueGenericCreateStatic+0x54>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800812c:	2350      	movs	r3, #80	; 0x50
 800812e:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 8008130:	9b01      	ldr	r3, [sp, #4]
 8008132:	2b50      	cmp	r3, #80	; 0x50
 8008134:	d008      	beq.n	8008148 <xQueueGenericCreateStatic+0x72>
 8008136:	f04f 0350 	mov.w	r3, #80	; 0x50
 800813a:	f383 8811 	msr	BASEPRI, r3
 800813e:	f3bf 8f6f 	isb	sy
 8008142:	f3bf 8f4f 	dsb	sy
 8008146:	e7fe      	b.n	8008146 <xQueueGenericCreateStatic+0x70>
	if( uxItemSize == ( UBaseType_t ) 0 )
 8008148:	2900      	cmp	r1, #0
 800814a:	bf08      	it	eq
 800814c:	4622      	moveq	r2, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800814e:	9b01      	ldr	r3, [sp, #4]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8008150:	6022      	str	r2, [r4, #0]
 8008152:	2301      	movs	r3, #1
	pxNewQueue->uxItemSize = uxItemSize;
 8008154:	e9c4 010f 	strd	r0, r1, [r4, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8008158:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800815c:	4619      	mov	r1, r3
 800815e:	4620      	mov	r0, r4
 8008160:	f7ff ff7a 	bl	8008058 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8008164:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8008168:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
	}
 800816c:	4620      	mov	r0, r4
 800816e:	b002      	add	sp, #8
 8008170:	bd10      	pop	{r4, pc}

08008172 <xQueueGenericCreate>:
	{
 8008172:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008174:	460d      	mov	r5, r1
 8008176:	4617      	mov	r7, r2
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8008178:	4606      	mov	r6, r0
 800817a:	b940      	cbnz	r0, 800818e <xQueueGenericCreate+0x1c>
 800817c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008180:	f383 8811 	msr	BASEPRI, r3
 8008184:	f3bf 8f6f 	isb	sy
 8008188:	f3bf 8f4f 	dsb	sy
 800818c:	e7fe      	b.n	800818c <xQueueGenericCreate+0x1a>
			xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800818e:	4348      	muls	r0, r1
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 8008190:	3050      	adds	r0, #80	; 0x50
 8008192:	f7ff fc1b 	bl	80079cc <pvPortMalloc>
		if( pxNewQueue != NULL )
 8008196:	4604      	mov	r4, r0
 8008198:	b170      	cbz	r0, 80081b8 <xQueueGenericCreate+0x46>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800819a:	2300      	movs	r3, #0
 800819c:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 80081a0:	b165      	cbz	r5, 80081bc <xQueueGenericCreate+0x4a>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80081a2:	f100 0350 	add.w	r3, r0, #80	; 0x50
	pxNewQueue->uxItemSize = uxItemSize;
 80081a6:	e9c4 650f 	strd	r6, r5, [r4, #60]	; 0x3c
 80081aa:	6023      	str	r3, [r4, #0]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 80081ac:	2101      	movs	r1, #1
 80081ae:	4620      	mov	r0, r4
 80081b0:	f7ff ff52 	bl	8008058 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 80081b4:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 80081b8:	4620      	mov	r0, r4
 80081ba:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80081bc:	4603      	mov	r3, r0
 80081be:	e7f2      	b.n	80081a6 <xQueueGenericCreate+0x34>

080081c0 <xQueueCreateCountingSemaphoreStatic>:
	{
 80081c0:	b513      	push	{r0, r1, r4, lr}
 80081c2:	4613      	mov	r3, r2
 80081c4:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 80081c6:	b940      	cbnz	r0, 80081da <xQueueCreateCountingSemaphoreStatic+0x1a>
 80081c8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80081cc:	f383 8811 	msr	BASEPRI, r3
 80081d0:	f3bf 8f6f 	isb	sy
 80081d4:	f3bf 8f4f 	dsb	sy
 80081d8:	e7fe      	b.n	80081d8 <xQueueCreateCountingSemaphoreStatic+0x18>
		configASSERT( uxInitialCount <= uxMaxCount );
 80081da:	4288      	cmp	r0, r1
 80081dc:	d208      	bcs.n	80081f0 <xQueueCreateCountingSemaphoreStatic+0x30>
 80081de:	f04f 0350 	mov.w	r3, #80	; 0x50
 80081e2:	f383 8811 	msr	BASEPRI, r3
 80081e6:	f3bf 8f6f 	isb	sy
 80081ea:	f3bf 8f4f 	dsb	sy
 80081ee:	e7fe      	b.n	80081ee <xQueueCreateCountingSemaphoreStatic+0x2e>
		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 80081f0:	2202      	movs	r2, #2
 80081f2:	9200      	str	r2, [sp, #0]
 80081f4:	2200      	movs	r2, #0
 80081f6:	4611      	mov	r1, r2
 80081f8:	f7ff ff6d 	bl	80080d6 <xQueueGenericCreateStatic>
		if( xHandle != NULL )
 80081fc:	b100      	cbz	r0, 8008200 <xQueueCreateCountingSemaphoreStatic+0x40>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 80081fe:	6384      	str	r4, [r0, #56]	; 0x38
	}
 8008200:	b002      	add	sp, #8
 8008202:	bd10      	pop	{r4, pc}

08008204 <xQueueCreateCountingSemaphore>:
	{
 8008204:	b510      	push	{r4, lr}
 8008206:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8008208:	b940      	cbnz	r0, 800821c <xQueueCreateCountingSemaphore+0x18>
 800820a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800820e:	f383 8811 	msr	BASEPRI, r3
 8008212:	f3bf 8f6f 	isb	sy
 8008216:	f3bf 8f4f 	dsb	sy
 800821a:	e7fe      	b.n	800821a <xQueueCreateCountingSemaphore+0x16>
		configASSERT( uxInitialCount <= uxMaxCount );
 800821c:	4288      	cmp	r0, r1
 800821e:	d208      	bcs.n	8008232 <xQueueCreateCountingSemaphore+0x2e>
 8008220:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008224:	f383 8811 	msr	BASEPRI, r3
 8008228:	f3bf 8f6f 	isb	sy
 800822c:	f3bf 8f4f 	dsb	sy
 8008230:	e7fe      	b.n	8008230 <xQueueCreateCountingSemaphore+0x2c>
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8008232:	2202      	movs	r2, #2
 8008234:	2100      	movs	r1, #0
 8008236:	f7ff ff9c 	bl	8008172 <xQueueGenericCreate>
		if( xHandle != NULL )
 800823a:	b100      	cbz	r0, 800823e <xQueueCreateCountingSemaphore+0x3a>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800823c:	6384      	str	r4, [r0, #56]	; 0x38
	}
 800823e:	bd10      	pop	{r4, pc}

08008240 <xQueueGenericSend>:
{
 8008240:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8008244:	b085      	sub	sp, #20
 8008246:	4688      	mov	r8, r1
 8008248:	9201      	str	r2, [sp, #4]
 800824a:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 800824c:	4604      	mov	r4, r0
 800824e:	b940      	cbnz	r0, 8008262 <xQueueGenericSend+0x22>
 8008250:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008254:	f383 8811 	msr	BASEPRI, r3
 8008258:	f3bf 8f6f 	isb	sy
 800825c:	f3bf 8f4f 	dsb	sy
 8008260:	e7fe      	b.n	8008260 <xQueueGenericSend+0x20>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8008262:	b951      	cbnz	r1, 800827a <xQueueGenericSend+0x3a>
 8008264:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8008266:	b143      	cbz	r3, 800827a <xQueueGenericSend+0x3a>
 8008268:	f04f 0350 	mov.w	r3, #80	; 0x50
 800826c:	f383 8811 	msr	BASEPRI, r3
 8008270:	f3bf 8f6f 	isb	sy
 8008274:	f3bf 8f4f 	dsb	sy
 8008278:	e7fe      	b.n	8008278 <xQueueGenericSend+0x38>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800827a:	2f02      	cmp	r7, #2
 800827c:	d10b      	bne.n	8008296 <xQueueGenericSend+0x56>
 800827e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8008280:	2b01      	cmp	r3, #1
 8008282:	d008      	beq.n	8008296 <xQueueGenericSend+0x56>
 8008284:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008288:	f383 8811 	msr	BASEPRI, r3
 800828c:	f3bf 8f6f 	isb	sy
 8008290:	f3bf 8f4f 	dsb	sy
 8008294:	e7fe      	b.n	8008294 <xQueueGenericSend+0x54>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8008296:	f000 ffc3 	bl	8009220 <xTaskGetSchedulerState>
 800829a:	4606      	mov	r6, r0
 800829c:	b950      	cbnz	r0, 80082b4 <xQueueGenericSend+0x74>
 800829e:	9b01      	ldr	r3, [sp, #4]
 80082a0:	b14b      	cbz	r3, 80082b6 <xQueueGenericSend+0x76>
 80082a2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80082a6:	f383 8811 	msr	BASEPRI, r3
 80082aa:	f3bf 8f6f 	isb	sy
 80082ae:	f3bf 8f4f 	dsb	sy
 80082b2:	e7fe      	b.n	80082b2 <xQueueGenericSend+0x72>
 80082b4:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 80082b6:	f04f 0900 	mov.w	r9, #0
 80082ba:	e037      	b.n	800832c <xQueueGenericSend+0xec>
				if( xTicksToWait == ( TickType_t ) 0 )
 80082bc:	9d01      	ldr	r5, [sp, #4]
 80082be:	b91d      	cbnz	r5, 80082c8 <xQueueGenericSend+0x88>
					taskEXIT_CRITICAL();
 80082c0:	f7ff fd18 	bl	8007cf4 <vPortExitCritical>
			return errQUEUE_FULL;
 80082c4:	2000      	movs	r0, #0
 80082c6:	e052      	b.n	800836e <xQueueGenericSend+0x12e>
				else if( xEntryTimeSet == pdFALSE )
 80082c8:	b916      	cbnz	r6, 80082d0 <xQueueGenericSend+0x90>
					vTaskInternalSetTimeOutState( &xTimeOut );
 80082ca:	a802      	add	r0, sp, #8
 80082cc:	f000 ff5a 	bl	8009184 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 80082d0:	f7ff fd10 	bl	8007cf4 <vPortExitCritical>
		vTaskSuspendAll();
 80082d4:	f000 fd5e 	bl	8008d94 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 80082d8:	f7ff fcec 	bl	8007cb4 <vPortEnterCritical>
 80082dc:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 80082e0:	2bff      	cmp	r3, #255	; 0xff
 80082e2:	bf08      	it	eq
 80082e4:	f884 9044 	strbeq.w	r9, [r4, #68]	; 0x44
 80082e8:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 80082ec:	2bff      	cmp	r3, #255	; 0xff
 80082ee:	bf08      	it	eq
 80082f0:	f884 9045 	strbeq.w	r9, [r4, #69]	; 0x45
 80082f4:	f7ff fcfe 	bl	8007cf4 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 80082f8:	a901      	add	r1, sp, #4
 80082fa:	a802      	add	r0, sp, #8
 80082fc:	f000 ff4e 	bl	800919c <xTaskCheckForTimeOut>
 8008300:	2800      	cmp	r0, #0
 8008302:	d14a      	bne.n	800839a <xQueueGenericSend+0x15a>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8008304:	f7ff fcd6 	bl	8007cb4 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 8008308:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800830a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800830c:	429a      	cmp	r2, r3
 800830e:	d131      	bne.n	8008374 <xQueueGenericSend+0x134>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 8008310:	f7ff fcf0 	bl	8007cf4 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 8008314:	9901      	ldr	r1, [sp, #4]
 8008316:	f104 0010 	add.w	r0, r4, #16
 800831a:	f000 feb7 	bl	800908c <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800831e:	4620      	mov	r0, r4
 8008320:	f7ff fe62 	bl	8007fe8 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8008324:	f000 fdda 	bl	8008edc <xTaskResumeAll>
 8008328:	b360      	cbz	r0, 8008384 <xQueueGenericSend+0x144>
 800832a:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 800832c:	f7ff fcc2 	bl	8007cb4 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8008330:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8008332:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8008334:	429a      	cmp	r2, r3
 8008336:	d301      	bcc.n	800833c <xQueueGenericSend+0xfc>
 8008338:	2f02      	cmp	r7, #2
 800833a:	d1bf      	bne.n	80082bc <xQueueGenericSend+0x7c>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800833c:	463a      	mov	r2, r7
 800833e:	4641      	mov	r1, r8
 8008340:	4620      	mov	r0, r4
 8008342:	f7ff fe06 	bl	8007f52 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8008346:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8008348:	b11b      	cbz	r3, 8008352 <xQueueGenericSend+0x112>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800834a:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800834e:	f000 fed5 	bl	80090fc <xTaskRemoveFromEventList>
					else if( xYieldRequired != pdFALSE )
 8008352:	b148      	cbz	r0, 8008368 <xQueueGenericSend+0x128>
						queueYIELD_IF_USING_PREEMPTION();
 8008354:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008358:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800835c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008360:	f3bf 8f4f 	dsb	sy
 8008364:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8008368:	f7ff fcc4 	bl	8007cf4 <vPortExitCritical>
				return pdPASS;
 800836c:	2001      	movs	r0, #1
}
 800836e:	b005      	add	sp, #20
 8008370:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
 8008374:	f7ff fcbe 	bl	8007cf4 <vPortExitCritical>
				prvUnlockQueue( pxQueue );
 8008378:	4620      	mov	r0, r4
 800837a:	f7ff fe35 	bl	8007fe8 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800837e:	f000 fdad 	bl	8008edc <xTaskResumeAll>
 8008382:	e7d2      	b.n	800832a <xQueueGenericSend+0xea>
					portYIELD_WITHIN_API();
 8008384:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008388:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800838c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008390:	f3bf 8f4f 	dsb	sy
 8008394:	f3bf 8f6f 	isb	sy
 8008398:	e7c7      	b.n	800832a <xQueueGenericSend+0xea>
			prvUnlockQueue( pxQueue );
 800839a:	4620      	mov	r0, r4
 800839c:	f7ff fe24 	bl	8007fe8 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 80083a0:	f000 fd9c 	bl	8008edc <xTaskResumeAll>
 80083a4:	e78e      	b.n	80082c4 <xQueueGenericSend+0x84>

080083a6 <xQueueGenericSendFromISR>:
{
 80083a6:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80083aa:	4689      	mov	r9, r1
 80083ac:	4690      	mov	r8, r2
 80083ae:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 80083b0:	4604      	mov	r4, r0
 80083b2:	b940      	cbnz	r0, 80083c6 <xQueueGenericSendFromISR+0x20>
 80083b4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80083b8:	f383 8811 	msr	BASEPRI, r3
 80083bc:	f3bf 8f6f 	isb	sy
 80083c0:	f3bf 8f4f 	dsb	sy
 80083c4:	e7fe      	b.n	80083c4 <xQueueGenericSendFromISR+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 80083c6:	b951      	cbnz	r1, 80083de <xQueueGenericSendFromISR+0x38>
 80083c8:	6c03      	ldr	r3, [r0, #64]	; 0x40
 80083ca:	b143      	cbz	r3, 80083de <xQueueGenericSendFromISR+0x38>
 80083cc:	f04f 0350 	mov.w	r3, #80	; 0x50
 80083d0:	f383 8811 	msr	BASEPRI, r3
 80083d4:	f3bf 8f6f 	isb	sy
 80083d8:	f3bf 8f4f 	dsb	sy
 80083dc:	e7fe      	b.n	80083dc <xQueueGenericSendFromISR+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 80083de:	2f02      	cmp	r7, #2
 80083e0:	d10b      	bne.n	80083fa <xQueueGenericSendFromISR+0x54>
 80083e2:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80083e4:	2b01      	cmp	r3, #1
 80083e6:	d008      	beq.n	80083fa <xQueueGenericSendFromISR+0x54>
 80083e8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80083ec:	f383 8811 	msr	BASEPRI, r3
 80083f0:	f3bf 8f6f 	isb	sy
 80083f4:	f3bf 8f4f 	dsb	sy
 80083f8:	e7fe      	b.n	80083f8 <xQueueGenericSendFromISR+0x52>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 80083fa:	f7ff fd71 	bl	8007ee0 <vPortValidateInterruptPriority>
	__asm volatile
 80083fe:	f3ef 8611 	mrs	r6, BASEPRI
 8008402:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008406:	f383 8811 	msr	BASEPRI, r3
 800840a:	f3bf 8f6f 	isb	sy
 800840e:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8008412:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8008414:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8008416:	429a      	cmp	r2, r3
 8008418:	d301      	bcc.n	800841e <xQueueGenericSendFromISR+0x78>
 800841a:	2f02      	cmp	r7, #2
 800841c:	d122      	bne.n	8008464 <xQueueGenericSendFromISR+0xbe>
			const int8_t cTxLock = pxQueue->cTxLock;
 800841e:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8008422:	463a      	mov	r2, r7
			const int8_t cTxLock = pxQueue->cTxLock;
 8008424:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8008426:	4649      	mov	r1, r9
 8008428:	4620      	mov	r0, r4
 800842a:	f7ff fd92 	bl	8007f52 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 800842e:	1c6b      	adds	r3, r5, #1
 8008430:	d113      	bne.n	800845a <xQueueGenericSendFromISR+0xb4>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8008432:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8008434:	b90b      	cbnz	r3, 800843a <xQueueGenericSendFromISR+0x94>
			xReturn = pdPASS;
 8008436:	2001      	movs	r0, #1
 8008438:	e00b      	b.n	8008452 <xQueueGenericSendFromISR+0xac>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800843a:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800843e:	f000 fe5d 	bl	80090fc <xTaskRemoveFromEventList>
 8008442:	2800      	cmp	r0, #0
 8008444:	d0f7      	beq.n	8008436 <xQueueGenericSendFromISR+0x90>
							if( pxHigherPriorityTaskWoken != NULL )
 8008446:	f1b8 0f00 	cmp.w	r8, #0
 800844a:	d0f4      	beq.n	8008436 <xQueueGenericSendFromISR+0x90>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800844c:	2001      	movs	r0, #1
 800844e:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 8008452:	f386 8811 	msr	BASEPRI, r6
}
 8008456:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800845a:	3501      	adds	r5, #1
 800845c:	b26d      	sxtb	r5, r5
 800845e:	f884 5045 	strb.w	r5, [r4, #69]	; 0x45
 8008462:	e7e8      	b.n	8008436 <xQueueGenericSendFromISR+0x90>
			xReturn = errQUEUE_FULL;
 8008464:	2000      	movs	r0, #0
 8008466:	e7f4      	b.n	8008452 <xQueueGenericSendFromISR+0xac>

08008468 <xQueueGiveFromISR>:
{
 8008468:	b570      	push	{r4, r5, r6, lr}
 800846a:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 800846c:	4604      	mov	r4, r0
 800846e:	b940      	cbnz	r0, 8008482 <xQueueGiveFromISR+0x1a>
	__asm volatile
 8008470:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008474:	f383 8811 	msr	BASEPRI, r3
 8008478:	f3bf 8f6f 	isb	sy
 800847c:	f3bf 8f4f 	dsb	sy
 8008480:	e7fe      	b.n	8008480 <xQueueGiveFromISR+0x18>
	configASSERT( pxQueue->uxItemSize == 0 );
 8008482:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8008484:	b143      	cbz	r3, 8008498 <xQueueGiveFromISR+0x30>
 8008486:	f04f 0350 	mov.w	r3, #80	; 0x50
 800848a:	f383 8811 	msr	BASEPRI, r3
 800848e:	f3bf 8f6f 	isb	sy
 8008492:	f3bf 8f4f 	dsb	sy
 8008496:	e7fe      	b.n	8008496 <xQueueGiveFromISR+0x2e>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 8008498:	6803      	ldr	r3, [r0, #0]
 800849a:	b953      	cbnz	r3, 80084b2 <xQueueGiveFromISR+0x4a>
 800849c:	6883      	ldr	r3, [r0, #8]
 800849e:	b143      	cbz	r3, 80084b2 <xQueueGiveFromISR+0x4a>
 80084a0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80084a4:	f383 8811 	msr	BASEPRI, r3
 80084a8:	f3bf 8f6f 	isb	sy
 80084ac:	f3bf 8f4f 	dsb	sy
 80084b0:	e7fe      	b.n	80084b0 <xQueueGiveFromISR+0x48>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 80084b2:	f7ff fd15 	bl	8007ee0 <vPortValidateInterruptPriority>
	__asm volatile
 80084b6:	f3ef 8611 	mrs	r6, BASEPRI
 80084ba:	f04f 0350 	mov.w	r3, #80	; 0x50
 80084be:	f383 8811 	msr	BASEPRI, r3
 80084c2:	f3bf 8f6f 	isb	sy
 80084c6:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 80084ca:	6ba2      	ldr	r2, [r4, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 80084cc:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80084ce:	4293      	cmp	r3, r2
 80084d0:	d91c      	bls.n	800850c <xQueueGiveFromISR+0xa4>
			const int8_t cTxLock = pxQueue->cTxLock;
 80084d2:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 80084d6:	3201      	adds	r2, #1
			if( cTxLock == queueUNLOCKED )
 80084d8:	29ff      	cmp	r1, #255	; 0xff
			const int8_t cTxLock = pxQueue->cTxLock;
 80084da:	b24b      	sxtb	r3, r1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 80084dc:	63a2      	str	r2, [r4, #56]	; 0x38
			if( cTxLock == queueUNLOCKED )
 80084de:	d110      	bne.n	8008502 <xQueueGiveFromISR+0x9a>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80084e0:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80084e2:	b90b      	cbnz	r3, 80084e8 <xQueueGiveFromISR+0x80>
			xReturn = pdPASS;
 80084e4:	2001      	movs	r0, #1
 80084e6:	e009      	b.n	80084fc <xQueueGiveFromISR+0x94>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80084e8:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80084ec:	f000 fe06 	bl	80090fc <xTaskRemoveFromEventList>
 80084f0:	2800      	cmp	r0, #0
 80084f2:	d0f7      	beq.n	80084e4 <xQueueGiveFromISR+0x7c>
							if( pxHigherPriorityTaskWoken != NULL )
 80084f4:	2d00      	cmp	r5, #0
 80084f6:	d0f5      	beq.n	80084e4 <xQueueGiveFromISR+0x7c>
								*pxHigherPriorityTaskWoken = pdTRUE;
 80084f8:	2001      	movs	r0, #1
 80084fa:	6028      	str	r0, [r5, #0]
	__asm volatile
 80084fc:	f386 8811 	msr	BASEPRI, r6
}
 8008500:	bd70      	pop	{r4, r5, r6, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8008502:	3301      	adds	r3, #1
 8008504:	b25b      	sxtb	r3, r3
 8008506:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 800850a:	e7eb      	b.n	80084e4 <xQueueGiveFromISR+0x7c>
			xReturn = errQUEUE_FULL;
 800850c:	2000      	movs	r0, #0
 800850e:	e7f5      	b.n	80084fc <xQueueGiveFromISR+0x94>

08008510 <xQueueReceive>:
{
 8008510:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8008514:	460f      	mov	r7, r1
 8008516:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 8008518:	4604      	mov	r4, r0
 800851a:	b940      	cbnz	r0, 800852e <xQueueReceive+0x1e>
	__asm volatile
 800851c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008520:	f383 8811 	msr	BASEPRI, r3
 8008524:	f3bf 8f6f 	isb	sy
 8008528:	f3bf 8f4f 	dsb	sy
 800852c:	e7fe      	b.n	800852c <xQueueReceive+0x1c>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800852e:	b951      	cbnz	r1, 8008546 <xQueueReceive+0x36>
 8008530:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8008532:	b143      	cbz	r3, 8008546 <xQueueReceive+0x36>
 8008534:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008538:	f383 8811 	msr	BASEPRI, r3
 800853c:	f3bf 8f6f 	isb	sy
 8008540:	f3bf 8f4f 	dsb	sy
 8008544:	e7fe      	b.n	8008544 <xQueueReceive+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8008546:	f000 fe6b 	bl	8009220 <xTaskGetSchedulerState>
 800854a:	4606      	mov	r6, r0
 800854c:	b950      	cbnz	r0, 8008564 <xQueueReceive+0x54>
 800854e:	9b01      	ldr	r3, [sp, #4]
 8008550:	b14b      	cbz	r3, 8008566 <xQueueReceive+0x56>
 8008552:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008556:	f383 8811 	msr	BASEPRI, r3
 800855a:	f3bf 8f6f 	isb	sy
 800855e:	f3bf 8f4f 	dsb	sy
 8008562:	e7fe      	b.n	8008562 <xQueueReceive+0x52>
 8008564:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 8008566:	f04f 0800 	mov.w	r8, #0
 800856a:	e03d      	b.n	80085e8 <xQueueReceive+0xd8>
				if( xTicksToWait == ( TickType_t ) 0 )
 800856c:	9d01      	ldr	r5, [sp, #4]
 800856e:	b91d      	cbnz	r5, 8008578 <xQueueReceive+0x68>
					taskEXIT_CRITICAL();
 8008570:	f7ff fbc0 	bl	8007cf4 <vPortExitCritical>
				return errQUEUE_EMPTY;
 8008574:	2000      	movs	r0, #0
 8008576:	e056      	b.n	8008626 <xQueueReceive+0x116>
				else if( xEntryTimeSet == pdFALSE )
 8008578:	b916      	cbnz	r6, 8008580 <xQueueReceive+0x70>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800857a:	a802      	add	r0, sp, #8
 800857c:	f000 fe02 	bl	8009184 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8008580:	f7ff fbb8 	bl	8007cf4 <vPortExitCritical>
		vTaskSuspendAll();
 8008584:	f000 fc06 	bl	8008d94 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8008588:	f7ff fb94 	bl	8007cb4 <vPortEnterCritical>
 800858c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8008590:	2bff      	cmp	r3, #255	; 0xff
 8008592:	bf08      	it	eq
 8008594:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 8008598:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800859c:	2bff      	cmp	r3, #255	; 0xff
 800859e:	bf08      	it	eq
 80085a0:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 80085a4:	f7ff fba6 	bl	8007cf4 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 80085a8:	a901      	add	r1, sp, #4
 80085aa:	a802      	add	r0, sp, #8
 80085ac:	f000 fdf6 	bl	800919c <xTaskCheckForTimeOut>
 80085b0:	2800      	cmp	r0, #0
 80085b2:	d141      	bne.n	8008638 <xQueueReceive+0x128>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 80085b4:	4620      	mov	r0, r4
 80085b6:	f7ff fcc1 	bl	8007f3c <prvIsQueueEmpty>
 80085ba:	b3b8      	cbz	r0, 800862c <xQueueReceive+0x11c>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 80085bc:	9901      	ldr	r1, [sp, #4]
 80085be:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80085c2:	f000 fd63 	bl	800908c <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 80085c6:	4620      	mov	r0, r4
 80085c8:	f7ff fd0e 	bl	8007fe8 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 80085cc:	f000 fc86 	bl	8008edc <xTaskResumeAll>
 80085d0:	b948      	cbnz	r0, 80085e6 <xQueueReceive+0xd6>
					portYIELD_WITHIN_API();
 80085d2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80085d6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80085da:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80085de:	f3bf 8f4f 	dsb	sy
 80085e2:	f3bf 8f6f 	isb	sy
 80085e6:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 80085e8:	f7ff fb64 	bl	8007cb4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 80085ec:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 80085ee:	2d00      	cmp	r5, #0
 80085f0:	d0bc      	beq.n	800856c <xQueueReceive+0x5c>
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 80085f2:	4639      	mov	r1, r7
 80085f4:	4620      	mov	r0, r4
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 80085f6:	3d01      	subs	r5, #1
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 80085f8:	f7ff fce0 	bl	8007fbc <prvCopyDataFromQueue>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 80085fc:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80085fe:	6923      	ldr	r3, [r4, #16]
 8008600:	b173      	cbz	r3, 8008620 <xQueueReceive+0x110>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008602:	f104 0010 	add.w	r0, r4, #16
 8008606:	f000 fd79 	bl	80090fc <xTaskRemoveFromEventList>
 800860a:	b148      	cbz	r0, 8008620 <xQueueReceive+0x110>
						queueYIELD_IF_USING_PREEMPTION();
 800860c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008610:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008614:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008618:	f3bf 8f4f 	dsb	sy
 800861c:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8008620:	f7ff fb68 	bl	8007cf4 <vPortExitCritical>
				return pdPASS;
 8008624:	2001      	movs	r0, #1
}
 8008626:	b004      	add	sp, #16
 8008628:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
				prvUnlockQueue( pxQueue );
 800862c:	4620      	mov	r0, r4
 800862e:	f7ff fcdb 	bl	8007fe8 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8008632:	f000 fc53 	bl	8008edc <xTaskResumeAll>
 8008636:	e7d6      	b.n	80085e6 <xQueueReceive+0xd6>
			prvUnlockQueue( pxQueue );
 8008638:	4620      	mov	r0, r4
 800863a:	f7ff fcd5 	bl	8007fe8 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 800863e:	f000 fc4d 	bl	8008edc <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8008642:	4620      	mov	r0, r4
 8008644:	f7ff fc7a 	bl	8007f3c <prvIsQueueEmpty>
 8008648:	2800      	cmp	r0, #0
 800864a:	d0cc      	beq.n	80085e6 <xQueueReceive+0xd6>
 800864c:	e792      	b.n	8008574 <xQueueReceive+0x64>

0800864e <xQueueSemaphoreTake>:
{
 800864e:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008650:	b085      	sub	sp, #20
	configASSERT( ( pxQueue ) );
 8008652:	4604      	mov	r4, r0
{
 8008654:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 8008656:	b940      	cbnz	r0, 800866a <xQueueSemaphoreTake+0x1c>
 8008658:	f04f 0350 	mov.w	r3, #80	; 0x50
 800865c:	f383 8811 	msr	BASEPRI, r3
 8008660:	f3bf 8f6f 	isb	sy
 8008664:	f3bf 8f4f 	dsb	sy
 8008668:	e7fe      	b.n	8008668 <xQueueSemaphoreTake+0x1a>
	configASSERT( pxQueue->uxItemSize == 0 );
 800866a:	6c05      	ldr	r5, [r0, #64]	; 0x40
 800866c:	b145      	cbz	r5, 8008680 <xQueueSemaphoreTake+0x32>
 800866e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008672:	f383 8811 	msr	BASEPRI, r3
 8008676:	f3bf 8f6f 	isb	sy
 800867a:	f3bf 8f4f 	dsb	sy
 800867e:	e7fe      	b.n	800867e <xQueueSemaphoreTake+0x30>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8008680:	f000 fdce 	bl	8009220 <xTaskGetSchedulerState>
 8008684:	4606      	mov	r6, r0
 8008686:	b950      	cbnz	r0, 800869e <xQueueSemaphoreTake+0x50>
 8008688:	9b01      	ldr	r3, [sp, #4]
 800868a:	b15b      	cbz	r3, 80086a4 <xQueueSemaphoreTake+0x56>
 800868c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008690:	f383 8811 	msr	BASEPRI, r3
 8008694:	f3bf 8f6f 	isb	sy
 8008698:	f3bf 8f4f 	dsb	sy
 800869c:	e7fe      	b.n	800869c <xQueueSemaphoreTake+0x4e>
 800869e:	462e      	mov	r6, r5
		prvLockQueue( pxQueue );
 80086a0:	2700      	movs	r7, #0
 80086a2:	e053      	b.n	800874c <xQueueSemaphoreTake+0xfe>
 80086a4:	4605      	mov	r5, r0
 80086a6:	e7fb      	b.n	80086a0 <xQueueSemaphoreTake+0x52>
				if( xTicksToWait == ( TickType_t ) 0 )
 80086a8:	9b01      	ldr	r3, [sp, #4]
 80086aa:	b963      	cbnz	r3, 80086c6 <xQueueSemaphoreTake+0x78>
						configASSERT( xInheritanceOccurred == pdFALSE );
 80086ac:	b145      	cbz	r5, 80086c0 <xQueueSemaphoreTake+0x72>
 80086ae:	f04f 0350 	mov.w	r3, #80	; 0x50
 80086b2:	f383 8811 	msr	BASEPRI, r3
 80086b6:	f3bf 8f6f 	isb	sy
 80086ba:	f3bf 8f4f 	dsb	sy
 80086be:	e7fe      	b.n	80086be <xQueueSemaphoreTake+0x70>
					taskEXIT_CRITICAL();
 80086c0:	f7ff fb18 	bl	8007cf4 <vPortExitCritical>
					return errQUEUE_EMPTY;
 80086c4:	e062      	b.n	800878c <xQueueSemaphoreTake+0x13e>
				else if( xEntryTimeSet == pdFALSE )
 80086c6:	b916      	cbnz	r6, 80086ce <xQueueSemaphoreTake+0x80>
					vTaskInternalSetTimeOutState( &xTimeOut );
 80086c8:	a802      	add	r0, sp, #8
 80086ca:	f000 fd5b 	bl	8009184 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 80086ce:	f7ff fb11 	bl	8007cf4 <vPortExitCritical>
		vTaskSuspendAll();
 80086d2:	f000 fb5f 	bl	8008d94 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 80086d6:	f7ff faed 	bl	8007cb4 <vPortEnterCritical>
 80086da:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 80086de:	2bff      	cmp	r3, #255	; 0xff
 80086e0:	bf08      	it	eq
 80086e2:	f884 7044 	strbeq.w	r7, [r4, #68]	; 0x44
 80086e6:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 80086ea:	2bff      	cmp	r3, #255	; 0xff
 80086ec:	bf08      	it	eq
 80086ee:	f884 7045 	strbeq.w	r7, [r4, #69]	; 0x45
 80086f2:	f7ff faff 	bl	8007cf4 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 80086f6:	a901      	add	r1, sp, #4
 80086f8:	a802      	add	r0, sp, #8
 80086fa:	f000 fd4f 	bl	800919c <xTaskCheckForTimeOut>
 80086fe:	2800      	cmp	r0, #0
 8008700:	d14d      	bne.n	800879e <xQueueSemaphoreTake+0x150>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8008702:	4620      	mov	r0, r4
 8008704:	f7ff fc1a 	bl	8007f3c <prvIsQueueEmpty>
 8008708:	2800      	cmp	r0, #0
 800870a:	d042      	beq.n	8008792 <xQueueSemaphoreTake+0x144>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800870c:	6823      	ldr	r3, [r4, #0]
 800870e:	b93b      	cbnz	r3, 8008720 <xQueueSemaphoreTake+0xd2>
						taskENTER_CRITICAL();
 8008710:	f7ff fad0 	bl	8007cb4 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 8008714:	68a0      	ldr	r0, [r4, #8]
 8008716:	f000 fd93 	bl	8009240 <xTaskPriorityInherit>
 800871a:	4605      	mov	r5, r0
						taskEXIT_CRITICAL();
 800871c:	f7ff faea 	bl	8007cf4 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8008720:	9901      	ldr	r1, [sp, #4]
 8008722:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8008726:	f000 fcb1 	bl	800908c <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800872a:	4620      	mov	r0, r4
 800872c:	f7ff fc5c 	bl	8007fe8 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8008730:	f000 fbd4 	bl	8008edc <xTaskResumeAll>
 8008734:	b948      	cbnz	r0, 800874a <xQueueSemaphoreTake+0xfc>
					portYIELD_WITHIN_API();
 8008736:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800873a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800873e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008742:	f3bf 8f4f 	dsb	sy
 8008746:	f3bf 8f6f 	isb	sy
 800874a:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 800874c:	f7ff fab2 	bl	8007cb4 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 8008750:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 8008752:	2b00      	cmp	r3, #0
 8008754:	d0a8      	beq.n	80086a8 <xQueueSemaphoreTake+0x5a>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 8008756:	3b01      	subs	r3, #1
 8008758:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800875a:	6823      	ldr	r3, [r4, #0]
 800875c:	b913      	cbnz	r3, 8008764 <xQueueSemaphoreTake+0x116>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 800875e:	f000 fe47 	bl	80093f0 <pvTaskIncrementMutexHeldCount>
 8008762:	60a0      	str	r0, [r4, #8]
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8008764:	6923      	ldr	r3, [r4, #16]
 8008766:	b173      	cbz	r3, 8008786 <xQueueSemaphoreTake+0x138>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008768:	f104 0010 	add.w	r0, r4, #16
 800876c:	f000 fcc6 	bl	80090fc <xTaskRemoveFromEventList>
 8008770:	b148      	cbz	r0, 8008786 <xQueueSemaphoreTake+0x138>
						queueYIELD_IF_USING_PREEMPTION();
 8008772:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008776:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800877a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800877e:	f3bf 8f4f 	dsb	sy
 8008782:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8008786:	f7ff fab5 	bl	8007cf4 <vPortExitCritical>
				return pdPASS;
 800878a:	2501      	movs	r5, #1
}
 800878c:	4628      	mov	r0, r5
 800878e:	b005      	add	sp, #20
 8008790:	bdf0      	pop	{r4, r5, r6, r7, pc}
				prvUnlockQueue( pxQueue );
 8008792:	4620      	mov	r0, r4
 8008794:	f7ff fc28 	bl	8007fe8 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8008798:	f000 fba0 	bl	8008edc <xTaskResumeAll>
 800879c:	e7d5      	b.n	800874a <xQueueSemaphoreTake+0xfc>
			prvUnlockQueue( pxQueue );
 800879e:	4620      	mov	r0, r4
 80087a0:	f7ff fc22 	bl	8007fe8 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 80087a4:	f000 fb9a 	bl	8008edc <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 80087a8:	4620      	mov	r0, r4
 80087aa:	f7ff fbc7 	bl	8007f3c <prvIsQueueEmpty>
 80087ae:	2800      	cmp	r0, #0
 80087b0:	d0cb      	beq.n	800874a <xQueueSemaphoreTake+0xfc>
					if( xInheritanceOccurred != pdFALSE )
 80087b2:	2d00      	cmp	r5, #0
 80087b4:	d0ea      	beq.n	800878c <xQueueSemaphoreTake+0x13e>
						taskENTER_CRITICAL();
 80087b6:	f7ff fa7d 	bl	8007cb4 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 80087ba:	6a61      	ldr	r1, [r4, #36]	; 0x24
 80087bc:	b119      	cbz	r1, 80087c6 <xQueueSemaphoreTake+0x178>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 80087be:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80087c0:	6819      	ldr	r1, [r3, #0]
 80087c2:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 80087c6:	68a0      	ldr	r0, [r4, #8]
 80087c8:	f000 fdc0 	bl	800934c <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 80087cc:	2500      	movs	r5, #0
						taskEXIT_CRITICAL();
 80087ce:	f7ff fa91 	bl	8007cf4 <vPortExitCritical>
 80087d2:	e7db      	b.n	800878c <xQueueSemaphoreTake+0x13e>

080087d4 <xQueueReceiveFromISR>:
{
 80087d4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80087d8:	4689      	mov	r9, r1
 80087da:	4690      	mov	r8, r2
	configASSERT( pxQueue );
 80087dc:	4605      	mov	r5, r0
 80087de:	b940      	cbnz	r0, 80087f2 <xQueueReceiveFromISR+0x1e>
 80087e0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80087e4:	f383 8811 	msr	BASEPRI, r3
 80087e8:	f3bf 8f6f 	isb	sy
 80087ec:	f3bf 8f4f 	dsb	sy
 80087f0:	e7fe      	b.n	80087f0 <xQueueReceiveFromISR+0x1c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 80087f2:	b951      	cbnz	r1, 800880a <xQueueReceiveFromISR+0x36>
 80087f4:	6c03      	ldr	r3, [r0, #64]	; 0x40
 80087f6:	b143      	cbz	r3, 800880a <xQueueReceiveFromISR+0x36>
 80087f8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80087fc:	f383 8811 	msr	BASEPRI, r3
 8008800:	f3bf 8f6f 	isb	sy
 8008804:	f3bf 8f4f 	dsb	sy
 8008808:	e7fe      	b.n	8008808 <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800880a:	f7ff fb69 	bl	8007ee0 <vPortValidateInterruptPriority>
	__asm volatile
 800880e:	f3ef 8711 	mrs	r7, BASEPRI
 8008812:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008816:	f383 8811 	msr	BASEPRI, r3
 800881a:	f3bf 8f6f 	isb	sy
 800881e:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8008822:	6bac      	ldr	r4, [r5, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8008824:	b31c      	cbz	r4, 800886e <xQueueReceiveFromISR+0x9a>
			const int8_t cRxLock = pxQueue->cRxLock;
 8008826:	f895 6044 	ldrb.w	r6, [r5, #68]	; 0x44
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 800882a:	4649      	mov	r1, r9
			const int8_t cRxLock = pxQueue->cRxLock;
 800882c:	b276      	sxtb	r6, r6
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 800882e:	4628      	mov	r0, r5
 8008830:	f7ff fbc4 	bl	8007fbc <prvCopyDataFromQueue>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8008834:	3c01      	subs	r4, #1
			if( cRxLock == queueUNLOCKED )
 8008836:	1c73      	adds	r3, r6, #1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8008838:	63ac      	str	r4, [r5, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 800883a:	d113      	bne.n	8008864 <xQueueReceiveFromISR+0x90>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800883c:	692b      	ldr	r3, [r5, #16]
 800883e:	b90b      	cbnz	r3, 8008844 <xQueueReceiveFromISR+0x70>
			xReturn = pdPASS;
 8008840:	2001      	movs	r0, #1
 8008842:	e00b      	b.n	800885c <xQueueReceiveFromISR+0x88>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008844:	f105 0010 	add.w	r0, r5, #16
 8008848:	f000 fc58 	bl	80090fc <xTaskRemoveFromEventList>
 800884c:	2800      	cmp	r0, #0
 800884e:	d0f7      	beq.n	8008840 <xQueueReceiveFromISR+0x6c>
						if( pxHigherPriorityTaskWoken != NULL )
 8008850:	f1b8 0f00 	cmp.w	r8, #0
 8008854:	d0f4      	beq.n	8008840 <xQueueReceiveFromISR+0x6c>
							*pxHigherPriorityTaskWoken = pdTRUE;
 8008856:	2001      	movs	r0, #1
 8008858:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 800885c:	f387 8811 	msr	BASEPRI, r7
}
 8008860:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 8008864:	3601      	adds	r6, #1
 8008866:	b276      	sxtb	r6, r6
 8008868:	f885 6044 	strb.w	r6, [r5, #68]	; 0x44
 800886c:	e7e8      	b.n	8008840 <xQueueReceiveFromISR+0x6c>
			xReturn = pdFAIL;
 800886e:	4620      	mov	r0, r4
 8008870:	e7f4      	b.n	800885c <xQueueReceiveFromISR+0x88>
	...

08008874 <vQueueAddToRegistry>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified char types are allowed for strings and single characters only. */
	{
 8008874:	b510      	push	{r4, lr}

		/* See if there is an empty space in the registry.  A NULL name denotes
		a free slot. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 8008876:	4a07      	ldr	r2, [pc, #28]	; (8008894 <vQueueAddToRegistry+0x20>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8008878:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800887a:	f852 4033 	ldr.w	r4, [r2, r3, lsl #3]
 800887e:	b92c      	cbnz	r4, 800888c <vQueueAddToRegistry+0x18>
			{
				/* Store the information on this queue. */
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 8008880:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 8008884:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 8008888:	6058      	str	r0, [r3, #4]
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	}
 800888a:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800888c:	3301      	adds	r3, #1
 800888e:	2b08      	cmp	r3, #8
 8008890:	d1f3      	bne.n	800887a <vQueueAddToRegistry+0x6>
 8008892:	e7fa      	b.n	800888a <vQueueAddToRegistry+0x16>
 8008894:	20016de4 	.word	0x20016de4

08008898 <vQueueUnregisterQueue>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueUnregisterQueue( QueueHandle_t xQueue )
	{
 8008898:	b510      	push	{r4, lr}

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800889a:	4a08      	ldr	r2, [pc, #32]	; (80088bc <vQueueUnregisterQueue+0x24>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800889c:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800889e:	eb02 01c3 	add.w	r1, r2, r3, lsl #3
 80088a2:	684c      	ldr	r4, [r1, #4]
 80088a4:	4284      	cmp	r4, r0
 80088a6:	d104      	bne.n	80088b2 <vQueueUnregisterQueue+0x1a>
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 80088a8:	2000      	movs	r0, #0
 80088aa:	f842 0033 	str.w	r0, [r2, r3, lsl #3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 80088ae:	6048      	str	r0, [r1, #4]
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 80088b0:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 80088b2:	3301      	adds	r3, #1
 80088b4:	2b08      	cmp	r3, #8
 80088b6:	d1f2      	bne.n	800889e <vQueueUnregisterQueue+0x6>
 80088b8:	e7fa      	b.n	80088b0 <vQueueUnregisterQueue+0x18>
 80088ba:	bf00      	nop
 80088bc:	20016de4 	.word	0x20016de4

080088c0 <vQueueDelete>:
{
 80088c0:	b510      	push	{r4, lr}
	configASSERT( pxQueue );
 80088c2:	4604      	mov	r4, r0
 80088c4:	b940      	cbnz	r0, 80088d8 <vQueueDelete+0x18>
	__asm volatile
 80088c6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80088ca:	f383 8811 	msr	BASEPRI, r3
 80088ce:	f3bf 8f6f 	isb	sy
 80088d2:	f3bf 8f4f 	dsb	sy
 80088d6:	e7fe      	b.n	80088d6 <vQueueDelete+0x16>
		vQueueUnregisterQueue( pxQueue );
 80088d8:	f7ff ffde 	bl	8008898 <vQueueUnregisterQueue>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 80088dc:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
 80088e0:	b923      	cbnz	r3, 80088ec <vQueueDelete+0x2c>
			vPortFree( pxQueue );
 80088e2:	4620      	mov	r0, r4
}
 80088e4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
			vPortFree( pxQueue );
 80088e8:	f7ff b902 	b.w	8007af0 <vPortFree>
}
 80088ec:	bd10      	pop	{r4, pc}

080088ee <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 80088ee:	b570      	push	{r4, r5, r6, lr}
 80088f0:	4604      	mov	r4, r0
 80088f2:	460d      	mov	r5, r1
 80088f4:	4616      	mov	r6, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 80088f6:	f7ff f9dd 	bl	8007cb4 <vPortEnterCritical>
 80088fa:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 80088fe:	2bff      	cmp	r3, #255	; 0xff
 8008900:	bf04      	itt	eq
 8008902:	2300      	moveq	r3, #0
 8008904:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 8008908:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800890c:	2bff      	cmp	r3, #255	; 0xff
 800890e:	bf04      	itt	eq
 8008910:	2300      	moveq	r3, #0
 8008912:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 8008916:	f7ff f9ed 	bl	8007cf4 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 800891a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800891c:	b92b      	cbnz	r3, 800892a <vQueueWaitForMessageRestricted+0x3c>
		{
			/* There is nothing in the queue, block for the specified period. */
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 800891e:	4632      	mov	r2, r6
 8008920:	4629      	mov	r1, r5
 8008922:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8008926:	f000 fbcb 	bl	80090c0 <vTaskPlaceOnEventListRestricted>
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
 800892a:	4620      	mov	r0, r4
	}
 800892c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		prvUnlockQueue( pxQueue );
 8008930:	f7ff bb5a 	b.w	8007fe8 <prvUnlockQueue>

08008934 <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 8008934:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008938:	4604      	mov	r4, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 800893a:	f7ff f9bb 	bl	8007cb4 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 800893e:	4b30      	ldr	r3, [pc, #192]	; (8008a00 <prvAddNewTaskToReadyList+0xcc>)
		if( pxCurrentTCB == NULL )
 8008940:	4e30      	ldr	r6, [pc, #192]	; (8008a04 <prvAddNewTaskToReadyList+0xd0>)
		uxCurrentNumberOfTasks++;
 8008942:	681a      	ldr	r2, [r3, #0]
 8008944:	4f30      	ldr	r7, [pc, #192]	; (8008a08 <prvAddNewTaskToReadyList+0xd4>)
 8008946:	3201      	adds	r2, #1
 8008948:	601a      	str	r2, [r3, #0]
		if( pxCurrentTCB == NULL )
 800894a:	6835      	ldr	r5, [r6, #0]
 800894c:	2d00      	cmp	r5, #0
 800894e:	d14b      	bne.n	80089e8 <prvAddNewTaskToReadyList+0xb4>
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
 8008950:	6034      	str	r4, [r6, #0]

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 8008952:	681b      	ldr	r3, [r3, #0]
 8008954:	2b01      	cmp	r3, #1
 8008956:	d11f      	bne.n	8008998 <prvAddNewTaskToReadyList+0x64>
 8008958:	46b8      	mov	r8, r7
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800895a:	4640      	mov	r0, r8
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800895c:	3501      	adds	r5, #1
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800895e:	f7ff f8ff 	bl	8007b60 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 8008962:	2d38      	cmp	r5, #56	; 0x38
 8008964:	f108 0814 	add.w	r8, r8, #20
 8008968:	d1f7      	bne.n	800895a <prvAddNewTaskToReadyList+0x26>
	}

	vListInitialise( &xDelayedTaskList1 );
 800896a:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8008a30 <prvAddNewTaskToReadyList+0xfc>
	vListInitialise( &xDelayedTaskList2 );
 800896e:	4d27      	ldr	r5, [pc, #156]	; (8008a0c <prvAddNewTaskToReadyList+0xd8>)
	vListInitialise( &xDelayedTaskList1 );
 8008970:	4640      	mov	r0, r8
 8008972:	f7ff f8f5 	bl	8007b60 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 8008976:	4628      	mov	r0, r5
 8008978:	f7ff f8f2 	bl	8007b60 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 800897c:	4824      	ldr	r0, [pc, #144]	; (8008a10 <prvAddNewTaskToReadyList+0xdc>)
 800897e:	f7ff f8ef 	bl	8007b60 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 8008982:	4824      	ldr	r0, [pc, #144]	; (8008a14 <prvAddNewTaskToReadyList+0xe0>)
 8008984:	f7ff f8ec 	bl	8007b60 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 8008988:	4823      	ldr	r0, [pc, #140]	; (8008a18 <prvAddNewTaskToReadyList+0xe4>)
 800898a:	f7ff f8e9 	bl	8007b60 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 800898e:	4b23      	ldr	r3, [pc, #140]	; (8008a1c <prvAddNewTaskToReadyList+0xe8>)
 8008990:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 8008994:	4b22      	ldr	r3, [pc, #136]	; (8008a20 <prvAddNewTaskToReadyList+0xec>)
 8008996:	601d      	str	r5, [r3, #0]
		uxTaskNumber++;
 8008998:	4a22      	ldr	r2, [pc, #136]	; (8008a24 <prvAddNewTaskToReadyList+0xf0>)
 800899a:	6813      	ldr	r3, [r2, #0]
 800899c:	3301      	adds	r3, #1
 800899e:	6013      	str	r3, [r2, #0]
		prvAddTaskToReadyList( pxNewTCB );
 80089a0:	4a21      	ldr	r2, [pc, #132]	; (8008a28 <prvAddNewTaskToReadyList+0xf4>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 80089a2:	6463      	str	r3, [r4, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 80089a4:	6811      	ldr	r1, [r2, #0]
 80089a6:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80089a8:	2014      	movs	r0, #20
 80089aa:	428b      	cmp	r3, r1
 80089ac:	fb00 7003 	mla	r0, r0, r3, r7
 80089b0:	f104 0104 	add.w	r1, r4, #4
 80089b4:	bf88      	it	hi
 80089b6:	6013      	strhi	r3, [r2, #0]
 80089b8:	f7ff f8e0 	bl	8007b7c <vListInsertEnd>
	taskEXIT_CRITICAL();
 80089bc:	f7ff f99a 	bl	8007cf4 <vPortExitCritical>
	if( xSchedulerRunning != pdFALSE )
 80089c0:	4b1a      	ldr	r3, [pc, #104]	; (8008a2c <prvAddNewTaskToReadyList+0xf8>)
 80089c2:	681b      	ldr	r3, [r3, #0]
 80089c4:	b173      	cbz	r3, 80089e4 <prvAddNewTaskToReadyList+0xb0>
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 80089c6:	6833      	ldr	r3, [r6, #0]
 80089c8:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80089ca:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80089cc:	429a      	cmp	r2, r3
 80089ce:	d209      	bcs.n	80089e4 <prvAddNewTaskToReadyList+0xb0>
			taskYIELD_IF_USING_PREEMPTION();
 80089d0:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80089d4:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80089d8:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80089dc:	f3bf 8f4f 	dsb	sy
 80089e0:	f3bf 8f6f 	isb	sy
}
 80089e4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( xSchedulerRunning == pdFALSE )
 80089e8:	4b10      	ldr	r3, [pc, #64]	; (8008a2c <prvAddNewTaskToReadyList+0xf8>)
 80089ea:	681b      	ldr	r3, [r3, #0]
 80089ec:	2b00      	cmp	r3, #0
 80089ee:	d1d3      	bne.n	8008998 <prvAddNewTaskToReadyList+0x64>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 80089f0:	6833      	ldr	r3, [r6, #0]
 80089f2:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80089f4:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80089f6:	429a      	cmp	r2, r3
					pxCurrentTCB = pxNewTCB;
 80089f8:	bf98      	it	ls
 80089fa:	6034      	strls	r4, [r6, #0]
 80089fc:	e7cc      	b.n	8008998 <prvAddNewTaskToReadyList+0x64>
 80089fe:	bf00      	nop
 8008a00:	20017290 	.word	0x20017290
 8008a04:	20016e24 	.word	0x20016e24
 8008a08:	20016e30 	.word	0x20016e30
 8008a0c:	200172bc 	.word	0x200172bc
 8008a10:	200172d8 	.word	0x200172d8
 8008a14:	20017304 	.word	0x20017304
 8008a18:	200172f0 	.word	0x200172f0
 8008a1c:	20016e28 	.word	0x20016e28
 8008a20:	20016e2c 	.word	0x20016e2c
 8008a24:	200172a0 	.word	0x200172a0
 8008a28:	200172a4 	.word	0x200172a4
 8008a2c:	200172ec 	.word	0x200172ec
 8008a30:	200172a8 	.word	0x200172a8

08008a34 <prvAddCurrentTaskToDelayedList>:
	}
#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
 8008a34:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 8008a36:	4b15      	ldr	r3, [pc, #84]	; (8008a8c <prvAddCurrentTaskToDelayedList+0x58>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8008a38:	4e15      	ldr	r6, [pc, #84]	; (8008a90 <prvAddCurrentTaskToDelayedList+0x5c>)
const TickType_t xConstTickCount = xTickCount;
 8008a3a:	681d      	ldr	r5, [r3, #0]
{
 8008a3c:	4604      	mov	r4, r0
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8008a3e:	6830      	ldr	r0, [r6, #0]
 8008a40:	3004      	adds	r0, #4
{
 8008a42:	460f      	mov	r7, r1
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8008a44:	f7ff f8bd 	bl	8007bc2 <uxListRemove>
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 8008a48:	1c63      	adds	r3, r4, #1
 8008a4a:	d107      	bne.n	8008a5c <prvAddCurrentTaskToDelayedList+0x28>
 8008a4c:	b137      	cbz	r7, 8008a5c <prvAddCurrentTaskToDelayedList+0x28>
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8008a4e:	6831      	ldr	r1, [r6, #0]
 8008a50:	4810      	ldr	r0, [pc, #64]	; (8008a94 <prvAddCurrentTaskToDelayedList+0x60>)

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
 8008a52:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8008a56:	3104      	adds	r1, #4
 8008a58:	f7ff b890 	b.w	8007b7c <vListInsertEnd>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 8008a5c:	6833      	ldr	r3, [r6, #0]
 8008a5e:	192c      	adds	r4, r5, r4
 8008a60:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 8008a62:	d307      	bcc.n	8008a74 <prvAddCurrentTaskToDelayedList+0x40>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8008a64:	4b0c      	ldr	r3, [pc, #48]	; (8008a98 <prvAddCurrentTaskToDelayedList+0x64>)
 8008a66:	6818      	ldr	r0, [r3, #0]
 8008a68:	6831      	ldr	r1, [r6, #0]
}
 8008a6a:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8008a6e:	3104      	adds	r1, #4
 8008a70:	f7ff b890 	b.w	8007b94 <vListInsert>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8008a74:	4b09      	ldr	r3, [pc, #36]	; (8008a9c <prvAddCurrentTaskToDelayedList+0x68>)
 8008a76:	6818      	ldr	r0, [r3, #0]
 8008a78:	6831      	ldr	r1, [r6, #0]
 8008a7a:	3104      	adds	r1, #4
 8008a7c:	f7ff f88a 	bl	8007b94 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 8008a80:	4b07      	ldr	r3, [pc, #28]	; (8008aa0 <prvAddCurrentTaskToDelayedList+0x6c>)
 8008a82:	681a      	ldr	r2, [r3, #0]
 8008a84:	42a2      	cmp	r2, r4
					xNextTaskUnblockTime = xTimeToWake;
 8008a86:	bf88      	it	hi
 8008a88:	601c      	strhi	r4, [r3, #0]
}
 8008a8a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8008a8c:	20017318 	.word	0x20017318
 8008a90:	20016e24 	.word	0x20016e24
 8008a94:	200172f0 	.word	0x200172f0
 8008a98:	20016e2c 	.word	0x20016e2c
 8008a9c:	20016e28 	.word	0x20016e28
 8008aa0:	200172d0 	.word	0x200172d0

08008aa4 <prvResetNextTaskUnblockTime>:
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8008aa4:	4a06      	ldr	r2, [pc, #24]	; (8008ac0 <prvResetNextTaskUnblockTime+0x1c>)
 8008aa6:	6813      	ldr	r3, [r2, #0]
 8008aa8:	6819      	ldr	r1, [r3, #0]
 8008aaa:	4b06      	ldr	r3, [pc, #24]	; (8008ac4 <prvResetNextTaskUnblockTime+0x20>)
 8008aac:	b919      	cbnz	r1, 8008ab6 <prvResetNextTaskUnblockTime+0x12>
		xNextTaskUnblockTime = portMAX_DELAY;
 8008aae:	f04f 32ff 	mov.w	r2, #4294967295
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 8008ab2:	601a      	str	r2, [r3, #0]
}
 8008ab4:	4770      	bx	lr
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008ab6:	6812      	ldr	r2, [r2, #0]
 8008ab8:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 8008aba:	68d2      	ldr	r2, [r2, #12]
 8008abc:	6852      	ldr	r2, [r2, #4]
 8008abe:	e7f8      	b.n	8008ab2 <prvResetNextTaskUnblockTime+0xe>
 8008ac0:	20016e28 	.word	0x20016e28
 8008ac4:	200172d0 	.word	0x200172d0

08008ac8 <prvDeleteTCB>:
	{
 8008ac8:	b510      	push	{r4, lr}
 8008aca:	4604      	mov	r4, r0
			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
 8008acc:	3058      	adds	r0, #88	; 0x58
 8008ace:	f017 fa8b 	bl	801ffe8 <_reclaim_reent>
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 8008ad2:	f894 30bd 	ldrb.w	r3, [r4, #189]	; 0xbd
 8008ad6:	b93b      	cbnz	r3, 8008ae8 <prvDeleteTCB+0x20>
				vPortFree( pxTCB->pxStack );
 8008ad8:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8008ada:	f7ff f809 	bl	8007af0 <vPortFree>
				vPortFree( pxTCB );
 8008ade:	4620      	mov	r0, r4
	}
 8008ae0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				vPortFree( pxTCB );
 8008ae4:	f7ff b804 	b.w	8007af0 <vPortFree>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 8008ae8:	2b01      	cmp	r3, #1
 8008aea:	d0f8      	beq.n	8008ade <prvDeleteTCB+0x16>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 8008aec:	2b02      	cmp	r3, #2
 8008aee:	d008      	beq.n	8008b02 <prvDeleteTCB+0x3a>
 8008af0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008af4:	f383 8811 	msr	BASEPRI, r3
 8008af8:	f3bf 8f6f 	isb	sy
 8008afc:	f3bf 8f4f 	dsb	sy
 8008b00:	e7fe      	b.n	8008b00 <prvDeleteTCB+0x38>
	}
 8008b02:	bd10      	pop	{r4, pc}

08008b04 <prvIdleTask>:
{
 8008b04:	b580      	push	{r7, lr}
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8008b06:	4c13      	ldr	r4, [pc, #76]	; (8008b54 <prvIdleTask+0x50>)
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008b08:	4f13      	ldr	r7, [pc, #76]	; (8008b58 <prvIdleTask+0x54>)
				--uxCurrentNumberOfTasks;
 8008b0a:	4d14      	ldr	r5, [pc, #80]	; (8008b5c <prvIdleTask+0x58>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8008b0c:	6823      	ldr	r3, [r4, #0]
 8008b0e:	b973      	cbnz	r3, 8008b2e <prvIdleTask+0x2a>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 8008b10:	4b13      	ldr	r3, [pc, #76]	; (8008b60 <prvIdleTask+0x5c>)
 8008b12:	681b      	ldr	r3, [r3, #0]
 8008b14:	2b01      	cmp	r3, #1
 8008b16:	d9f8      	bls.n	8008b0a <prvIdleTask+0x6>
				taskYIELD();
 8008b18:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008b1c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008b20:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008b24:	f3bf 8f4f 	dsb	sy
 8008b28:	f3bf 8f6f 	isb	sy
 8008b2c:	e7ed      	b.n	8008b0a <prvIdleTask+0x6>
			taskENTER_CRITICAL();
 8008b2e:	f7ff f8c1 	bl	8007cb4 <vPortEnterCritical>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008b32:	68fb      	ldr	r3, [r7, #12]
 8008b34:	68de      	ldr	r6, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8008b36:	1d30      	adds	r0, r6, #4
 8008b38:	f7ff f843 	bl	8007bc2 <uxListRemove>
				--uxCurrentNumberOfTasks;
 8008b3c:	682b      	ldr	r3, [r5, #0]
 8008b3e:	3b01      	subs	r3, #1
 8008b40:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
 8008b42:	6823      	ldr	r3, [r4, #0]
 8008b44:	3b01      	subs	r3, #1
 8008b46:	6023      	str	r3, [r4, #0]
			taskEXIT_CRITICAL();
 8008b48:	f7ff f8d4 	bl	8007cf4 <vPortExitCritical>
			prvDeleteTCB( pxTCB );
 8008b4c:	4630      	mov	r0, r6
 8008b4e:	f7ff ffbb 	bl	8008ac8 <prvDeleteTCB>
 8008b52:	e7db      	b.n	8008b0c <prvIdleTask+0x8>
 8008b54:	20017294 	.word	0x20017294
 8008b58:	20017304 	.word	0x20017304
 8008b5c:	20017290 	.word	0x20017290
 8008b60:	20016e30 	.word	0x20016e30

08008b64 <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8008b64:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8008b68:	e9dd 8409 	ldrd	r8, r4, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8008b6c:	ea4f 0982 	mov.w	r9, r2, lsl #2
 8008b70:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8008b72:	4606      	mov	r6, r0
 8008b74:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8008b76:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8008b78:	21a5      	movs	r1, #165	; 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8008b7a:	461f      	mov	r7, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8008b7c:	f016 fe50 	bl	801f820 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 8008b80:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8008b82:	f1a9 0904 	sub.w	r9, r9, #4
 8008b86:	4491      	add	r9, r2
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 8008b88:	f029 0907 	bic.w	r9, r9, #7
	if( pcName != NULL )
 8008b8c:	2d00      	cmp	r5, #0
 8008b8e:	d042      	beq.n	8008c16 <prvInitialiseNewTask.constprop.0+0xb2>
 8008b90:	1e6b      	subs	r3, r5, #1
 8008b92:	f104 0234 	add.w	r2, r4, #52	; 0x34
 8008b96:	350f      	adds	r5, #15
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8008b98:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 8008b9c:	f802 0b01 	strb.w	r0, [r2], #1
			if( pcName[ x ] == ( char ) 0x00 )
 8008ba0:	b108      	cbz	r0, 8008ba6 <prvInitialiseNewTask.constprop.0+0x42>
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 8008ba2:	42ab      	cmp	r3, r5
 8008ba4:	d1f8      	bne.n	8008b98 <prvInitialiseNewTask.constprop.0+0x34>
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 8008ba6:	2300      	movs	r3, #0
 8008ba8:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 8008bac:	9d08      	ldr	r5, [sp, #32]
 8008bae:	2d37      	cmp	r5, #55	; 0x37
 8008bb0:	bf28      	it	cs
 8008bb2:	2537      	movcs	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 8008bb4:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 8008bb8:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 8008bba:	64e5      	str	r5, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8008bbc:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 8008bbe:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8008bc2:	f7fe ffd8 	bl	8007b76 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008bc6:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 8008bca:	f104 0018 	add.w	r0, r4, #24
 8008bce:	f7fe ffd2 	bl	8007b76 <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
 8008bd2:	f8c4 a0b8 	str.w	sl, [r4, #184]	; 0xb8
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 8008bd6:	2260      	movs	r2, #96	; 0x60
 8008bd8:	4651      	mov	r1, sl
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 8008bda:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008bdc:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 8008bde:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 8008be0:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 8008be4:	f884 a0bc 	strb.w	sl, [r4, #188]	; 0xbc
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 8008be8:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8008bec:	f016 fe18 	bl	801f820 <memset>
 8008bf0:	4b0a      	ldr	r3, [pc, #40]	; (8008c1c <prvInitialiseNewTask.constprop.0+0xb8>)
 8008bf2:	65e3      	str	r3, [r4, #92]	; 0x5c
 8008bf4:	4b0a      	ldr	r3, [pc, #40]	; (8008c20 <prvInitialiseNewTask.constprop.0+0xbc>)
 8008bf6:	6623      	str	r3, [r4, #96]	; 0x60
 8008bf8:	4b0a      	ldr	r3, [pc, #40]	; (8008c24 <prvInitialiseNewTask.constprop.0+0xc0>)
 8008bfa:	6663      	str	r3, [r4, #100]	; 0x64
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 8008bfc:	463a      	mov	r2, r7
 8008bfe:	4631      	mov	r1, r6
 8008c00:	4648      	mov	r0, r9
 8008c02:	f7ff f82d 	bl	8007c60 <pxPortInitialiseStack>
 8008c06:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 8008c08:	f1b8 0f00 	cmp.w	r8, #0
 8008c0c:	d001      	beq.n	8008c12 <prvInitialiseNewTask.constprop.0+0xae>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 8008c0e:	f8c8 4000 	str.w	r4, [r8]
}
 8008c12:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 8008c16:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 8008c1a:	e7c7      	b.n	8008bac <prvInitialiseNewTask.constprop.0+0x48>
 8008c1c:	08022fec 	.word	0x08022fec
 8008c20:	0802300c 	.word	0x0802300c
 8008c24:	08022fcc 	.word	0x08022fcc

08008c28 <xTaskCreateStatic>:
	{
 8008c28:	b570      	push	{r4, r5, r6, lr}
 8008c2a:	b086      	sub	sp, #24
 8008c2c:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 8008c30:	b945      	cbnz	r5, 8008c44 <xTaskCreateStatic+0x1c>
 8008c32:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008c36:	f383 8811 	msr	BASEPRI, r3
 8008c3a:	f3bf 8f6f 	isb	sy
 8008c3e:	f3bf 8f4f 	dsb	sy
 8008c42:	e7fe      	b.n	8008c42 <xTaskCreateStatic+0x1a>
		configASSERT( pxTaskBuffer != NULL );
 8008c44:	b944      	cbnz	r4, 8008c58 <xTaskCreateStatic+0x30>
 8008c46:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008c4a:	f383 8811 	msr	BASEPRI, r3
 8008c4e:	f3bf 8f6f 	isb	sy
 8008c52:	f3bf 8f4f 	dsb	sy
 8008c56:	e7fe      	b.n	8008c56 <xTaskCreateStatic+0x2e>
			volatile size_t xSize = sizeof( StaticTask_t );
 8008c58:	26c0      	movs	r6, #192	; 0xc0
 8008c5a:	9605      	str	r6, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 8008c5c:	9e05      	ldr	r6, [sp, #20]
 8008c5e:	2ec0      	cmp	r6, #192	; 0xc0
 8008c60:	d008      	beq.n	8008c74 <xTaskCreateStatic+0x4c>
 8008c62:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008c66:	f383 8811 	msr	BASEPRI, r3
 8008c6a:	f3bf 8f6f 	isb	sy
 8008c6e:	f3bf 8f4f 	dsb	sy
 8008c72:	e7fe      	b.n	8008c72 <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 8008c74:	6325      	str	r5, [r4, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 8008c76:	2502      	movs	r5, #2
 8008c78:	f884 50bd 	strb.w	r5, [r4, #189]	; 0xbd
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8008c7c:	ad04      	add	r5, sp, #16
 8008c7e:	9501      	str	r5, [sp, #4]
 8008c80:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8008c82:	9402      	str	r4, [sp, #8]
 8008c84:	9500      	str	r5, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 8008c86:	9e05      	ldr	r6, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8008c88:	f7ff ff6c 	bl	8008b64 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 8008c8c:	4620      	mov	r0, r4
 8008c8e:	f7ff fe51 	bl	8008934 <prvAddNewTaskToReadyList>
	}
 8008c92:	9804      	ldr	r0, [sp, #16]
 8008c94:	b006      	add	sp, #24
 8008c96:	bd70      	pop	{r4, r5, r6, pc}

08008c98 <xTaskCreate>:
	{
 8008c98:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8008c9c:	4607      	mov	r7, r0
 8008c9e:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8008ca0:	0090      	lsls	r0, r2, #2
	{
 8008ca2:	4688      	mov	r8, r1
 8008ca4:	4616      	mov	r6, r2
 8008ca6:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8008ca8:	f7fe fe90 	bl	80079cc <pvPortMalloc>
			if( pxStack != NULL )
 8008cac:	4605      	mov	r5, r0
 8008cae:	b1e8      	cbz	r0, 8008cec <xTaskCreate+0x54>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 8008cb0:	20c0      	movs	r0, #192	; 0xc0
 8008cb2:	f7fe fe8b 	bl	80079cc <pvPortMalloc>
				if( pxNewTCB != NULL )
 8008cb6:	4604      	mov	r4, r0
 8008cb8:	b1a8      	cbz	r0, 8008ce6 <xTaskCreate+0x4e>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 8008cba:	2300      	movs	r3, #0
 8008cbc:	f880 30bd 	strb.w	r3, [r0, #189]	; 0xbd
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8008cc0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
					pxNewTCB->pxStack = pxStack;
 8008cc2:	6305      	str	r5, [r0, #48]	; 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8008cc4:	9301      	str	r3, [sp, #4]
 8008cc6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8008cc8:	9002      	str	r0, [sp, #8]
 8008cca:	9300      	str	r3, [sp, #0]
 8008ccc:	4632      	mov	r2, r6
 8008cce:	464b      	mov	r3, r9
 8008cd0:	4641      	mov	r1, r8
 8008cd2:	4638      	mov	r0, r7
 8008cd4:	f7ff ff46 	bl	8008b64 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 8008cd8:	4620      	mov	r0, r4
 8008cda:	f7ff fe2b 	bl	8008934 <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 8008cde:	2001      	movs	r0, #1
	}
 8008ce0:	b005      	add	sp, #20
 8008ce2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 8008ce6:	4628      	mov	r0, r5
 8008ce8:	f7fe ff02 	bl	8007af0 <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 8008cec:	f04f 30ff 	mov.w	r0, #4294967295
		return xReturn;
 8008cf0:	e7f6      	b.n	8008ce0 <xTaskCreate+0x48>
	...

08008cf4 <vTaskStartScheduler>:
{
 8008cf4:	b510      	push	{r4, lr}
 8008cf6:	b088      	sub	sp, #32
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 8008cf8:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8008cfa:	aa07      	add	r2, sp, #28
 8008cfc:	a906      	add	r1, sp, #24
 8008cfe:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 8008d00:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8008d04:	f7fe fe26 	bl	8007954 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 8008d08:	9b05      	ldr	r3, [sp, #20]
 8008d0a:	9302      	str	r3, [sp, #8]
 8008d0c:	9b06      	ldr	r3, [sp, #24]
 8008d0e:	9a07      	ldr	r2, [sp, #28]
 8008d10:	4919      	ldr	r1, [pc, #100]	; (8008d78 <vTaskStartScheduler+0x84>)
 8008d12:	481a      	ldr	r0, [pc, #104]	; (8008d7c <vTaskStartScheduler+0x88>)
 8008d14:	e9cd 4300 	strd	r4, r3, [sp]
 8008d18:	4623      	mov	r3, r4
 8008d1a:	f7ff ff85 	bl	8008c28 <xTaskCreateStatic>
		if( xIdleTaskHandle != NULL )
 8008d1e:	b340      	cbz	r0, 8008d72 <vTaskStartScheduler+0x7e>
			xReturn = xTimerCreateTimerTask();
 8008d20:	f000 fbc4 	bl	80094ac <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 8008d24:	2801      	cmp	r0, #1
 8008d26:	d119      	bne.n	8008d5c <vTaskStartScheduler+0x68>
 8008d28:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008d2c:	f383 8811 	msr	BASEPRI, r3
 8008d30:	f3bf 8f6f 	isb	sy
 8008d34:	f3bf 8f4f 	dsb	sy
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 8008d38:	4b11      	ldr	r3, [pc, #68]	; (8008d80 <vTaskStartScheduler+0x8c>)
 8008d3a:	4a12      	ldr	r2, [pc, #72]	; (8008d84 <vTaskStartScheduler+0x90>)
 8008d3c:	681b      	ldr	r3, [r3, #0]
 8008d3e:	3358      	adds	r3, #88	; 0x58
 8008d40:	6013      	str	r3, [r2, #0]
		xNextTaskUnblockTime = portMAX_DELAY;
 8008d42:	4b11      	ldr	r3, [pc, #68]	; (8008d88 <vTaskStartScheduler+0x94>)
 8008d44:	f04f 32ff 	mov.w	r2, #4294967295
 8008d48:	601a      	str	r2, [r3, #0]
		xSchedulerRunning = pdTRUE;
 8008d4a:	4b10      	ldr	r3, [pc, #64]	; (8008d8c <vTaskStartScheduler+0x98>)
 8008d4c:	6018      	str	r0, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 8008d4e:	4b10      	ldr	r3, [pc, #64]	; (8008d90 <vTaskStartScheduler+0x9c>)
 8008d50:	601c      	str	r4, [r3, #0]
}
 8008d52:	b008      	add	sp, #32
 8008d54:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		if( xPortStartScheduler() != pdFALSE )
 8008d58:	f7ff b83c 	b.w	8007dd4 <xPortStartScheduler>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 8008d5c:	3001      	adds	r0, #1
 8008d5e:	d108      	bne.n	8008d72 <vTaskStartScheduler+0x7e>
 8008d60:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008d64:	f383 8811 	msr	BASEPRI, r3
 8008d68:	f3bf 8f6f 	isb	sy
 8008d6c:	f3bf 8f4f 	dsb	sy
 8008d70:	e7fe      	b.n	8008d70 <vTaskStartScheduler+0x7c>
}
 8008d72:	b008      	add	sp, #32
 8008d74:	bd10      	pop	{r4, pc}
 8008d76:	bf00      	nop
 8008d78:	0802218c 	.word	0x0802218c
 8008d7c:	08008b05 	.word	0x08008b05
 8008d80:	20016e24 	.word	0x20016e24
 8008d84:	20000104 	.word	0x20000104
 8008d88:	200172d0 	.word	0x200172d0
 8008d8c:	200172ec 	.word	0x200172ec
 8008d90:	20017318 	.word	0x20017318

08008d94 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 8008d94:	4a02      	ldr	r2, [pc, #8]	; (8008da0 <vTaskSuspendAll+0xc>)
 8008d96:	6813      	ldr	r3, [r2, #0]
 8008d98:	3301      	adds	r3, #1
 8008d9a:	6013      	str	r3, [r2, #0]
}
 8008d9c:	4770      	bx	lr
 8008d9e:	bf00      	nop
 8008da0:	2001729c 	.word	0x2001729c

08008da4 <xTaskGetTickCount>:
		xTicks = xTickCount;
 8008da4:	4b01      	ldr	r3, [pc, #4]	; (8008dac <xTaskGetTickCount+0x8>)
 8008da6:	6818      	ldr	r0, [r3, #0]
}
 8008da8:	4770      	bx	lr
 8008daa:	bf00      	nop
 8008dac:	20017318 	.word	0x20017318

08008db0 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8008db0:	4b3f      	ldr	r3, [pc, #252]	; (8008eb0 <xTaskIncrementTick+0x100>)
 8008db2:	681b      	ldr	r3, [r3, #0]
{
 8008db4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8008db8:	2b00      	cmp	r3, #0
 8008dba:	d173      	bne.n	8008ea4 <xTaskIncrementTick+0xf4>
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 8008dbc:	4b3d      	ldr	r3, [pc, #244]	; (8008eb4 <xTaskIncrementTick+0x104>)
 8008dbe:	681d      	ldr	r5, [r3, #0]
 8008dc0:	3501      	adds	r5, #1
		xTickCount = xConstTickCount;
 8008dc2:	601d      	str	r5, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 8008dc4:	b9bd      	cbnz	r5, 8008df6 <xTaskIncrementTick+0x46>
			taskSWITCH_DELAYED_LISTS();
 8008dc6:	4b3c      	ldr	r3, [pc, #240]	; (8008eb8 <xTaskIncrementTick+0x108>)
 8008dc8:	681a      	ldr	r2, [r3, #0]
 8008dca:	6812      	ldr	r2, [r2, #0]
 8008dcc:	b142      	cbz	r2, 8008de0 <xTaskIncrementTick+0x30>
 8008dce:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008dd2:	f383 8811 	msr	BASEPRI, r3
 8008dd6:	f3bf 8f6f 	isb	sy
 8008dda:	f3bf 8f4f 	dsb	sy
 8008dde:	e7fe      	b.n	8008dde <xTaskIncrementTick+0x2e>
 8008de0:	4a36      	ldr	r2, [pc, #216]	; (8008ebc <xTaskIncrementTick+0x10c>)
 8008de2:	6819      	ldr	r1, [r3, #0]
 8008de4:	6810      	ldr	r0, [r2, #0]
 8008de6:	6018      	str	r0, [r3, #0]
 8008de8:	6011      	str	r1, [r2, #0]
 8008dea:	4a35      	ldr	r2, [pc, #212]	; (8008ec0 <xTaskIncrementTick+0x110>)
 8008dec:	6813      	ldr	r3, [r2, #0]
 8008dee:	3301      	adds	r3, #1
 8008df0:	6013      	str	r3, [r2, #0]
 8008df2:	f7ff fe57 	bl	8008aa4 <prvResetNextTaskUnblockTime>
		if( xConstTickCount >= xNextTaskUnblockTime )
 8008df6:	4e33      	ldr	r6, [pc, #204]	; (8008ec4 <xTaskIncrementTick+0x114>)
 8008df8:	4f33      	ldr	r7, [pc, #204]	; (8008ec8 <xTaskIncrementTick+0x118>)
 8008dfa:	6833      	ldr	r3, [r6, #0]
 8008dfc:	f8df 80d4 	ldr.w	r8, [pc, #212]	; 8008ed4 <xTaskIncrementTick+0x124>
 8008e00:	42ab      	cmp	r3, r5
BaseType_t xSwitchRequired = pdFALSE;
 8008e02:	f04f 0400 	mov.w	r4, #0
		if( xConstTickCount >= xNextTaskUnblockTime )
 8008e06:	d911      	bls.n	8008e2c <xTaskIncrementTick+0x7c>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 8008e08:	f8d8 3000 	ldr.w	r3, [r8]
 8008e0c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008e0e:	2214      	movs	r2, #20
 8008e10:	4353      	muls	r3, r2
 8008e12:	58fb      	ldr	r3, [r7, r3]
				xSwitchRequired = pdTRUE;
 8008e14:	2b02      	cmp	r3, #2
 8008e16:	bf28      	it	cs
 8008e18:	2401      	movcs	r4, #1
		if( xYieldPending != pdFALSE )
 8008e1a:	4b2c      	ldr	r3, [pc, #176]	; (8008ecc <xTaskIncrementTick+0x11c>)
 8008e1c:	681b      	ldr	r3, [r3, #0]
			xSwitchRequired = pdTRUE;
 8008e1e:	2b00      	cmp	r3, #0
}
 8008e20:	bf0c      	ite	eq
 8008e22:	4620      	moveq	r0, r4
 8008e24:	2001      	movne	r0, #1
 8008e26:	b003      	add	sp, #12
 8008e28:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8008e2c:	f8df 9088 	ldr.w	r9, [pc, #136]	; 8008eb8 <xTaskIncrementTick+0x108>
					prvAddTaskToReadyList( pxTCB );
 8008e30:	f8df a0a4 	ldr.w	sl, [pc, #164]	; 8008ed8 <xTaskIncrementTick+0x128>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8008e34:	f8d9 3000 	ldr.w	r3, [r9]
 8008e38:	681b      	ldr	r3, [r3, #0]
 8008e3a:	b91b      	cbnz	r3, 8008e44 <xTaskIncrementTick+0x94>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008e3c:	f04f 33ff 	mov.w	r3, #4294967295
 8008e40:	6033      	str	r3, [r6, #0]
					break;
 8008e42:	e7e1      	b.n	8008e08 <xTaskIncrementTick+0x58>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008e44:	f8d9 3000 	ldr.w	r3, [r9]
 8008e48:	68db      	ldr	r3, [r3, #12]
 8008e4a:	f8d3 b00c 	ldr.w	fp, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 8008e4e:	f8db 2004 	ldr.w	r2, [fp, #4]
					if( xConstTickCount < xItemValue )
 8008e52:	4295      	cmp	r5, r2
 8008e54:	d201      	bcs.n	8008e5a <xTaskIncrementTick+0xaa>
						xNextTaskUnblockTime = xItemValue;
 8008e56:	6032      	str	r2, [r6, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 8008e58:	e7d6      	b.n	8008e08 <xTaskIncrementTick+0x58>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8008e5a:	f10b 0104 	add.w	r1, fp, #4
 8008e5e:	4608      	mov	r0, r1
 8008e60:	9101      	str	r1, [sp, #4]
 8008e62:	f7fe feae 	bl	8007bc2 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 8008e66:	f8db 2028 	ldr.w	r2, [fp, #40]	; 0x28
 8008e6a:	9901      	ldr	r1, [sp, #4]
 8008e6c:	b122      	cbz	r2, 8008e78 <xTaskIncrementTick+0xc8>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8008e6e:	f10b 0018 	add.w	r0, fp, #24
 8008e72:	f7fe fea6 	bl	8007bc2 <uxListRemove>
 8008e76:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
 8008e78:	f8db 002c 	ldr.w	r0, [fp, #44]	; 0x2c
 8008e7c:	f8da 2000 	ldr.w	r2, [sl]
 8008e80:	2314      	movs	r3, #20
 8008e82:	4290      	cmp	r0, r2
 8008e84:	bf88      	it	hi
 8008e86:	f8ca 0000 	strhi.w	r0, [sl]
 8008e8a:	fb03 7000 	mla	r0, r3, r0, r7
 8008e8e:	f7fe fe75 	bl	8007b7c <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8008e92:	f8d8 1000 	ldr.w	r1, [r8]
 8008e96:	f8db 202c 	ldr.w	r2, [fp, #44]	; 0x2c
 8008e9a:	6acb      	ldr	r3, [r1, #44]	; 0x2c
							xSwitchRequired = pdTRUE;
 8008e9c:	429a      	cmp	r2, r3
 8008e9e:	bf28      	it	cs
 8008ea0:	2401      	movcs	r4, #1
 8008ea2:	e7c7      	b.n	8008e34 <xTaskIncrementTick+0x84>
		++uxPendedTicks;
 8008ea4:	4a0a      	ldr	r2, [pc, #40]	; (8008ed0 <xTaskIncrementTick+0x120>)
 8008ea6:	6813      	ldr	r3, [r2, #0]
 8008ea8:	3301      	adds	r3, #1
 8008eaa:	6013      	str	r3, [r2, #0]
BaseType_t xSwitchRequired = pdFALSE;
 8008eac:	2400      	movs	r4, #0
 8008eae:	e7b4      	b.n	8008e1a <xTaskIncrementTick+0x6a>
 8008eb0:	2001729c 	.word	0x2001729c
 8008eb4:	20017318 	.word	0x20017318
 8008eb8:	20016e28 	.word	0x20016e28
 8008ebc:	20016e2c 	.word	0x20016e2c
 8008ec0:	200172d4 	.word	0x200172d4
 8008ec4:	200172d0 	.word	0x200172d0
 8008ec8:	20016e30 	.word	0x20016e30
 8008ecc:	2001731c 	.word	0x2001731c
 8008ed0:	20017298 	.word	0x20017298
 8008ed4:	20016e24 	.word	0x20016e24
 8008ed8:	200172a4 	.word	0x200172a4

08008edc <xTaskResumeAll>:
{
 8008edc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	configASSERT( uxSchedulerSuspended );
 8008ede:	4c31      	ldr	r4, [pc, #196]	; (8008fa4 <xTaskResumeAll+0xc8>)
 8008ee0:	6823      	ldr	r3, [r4, #0]
 8008ee2:	b943      	cbnz	r3, 8008ef6 <xTaskResumeAll+0x1a>
 8008ee4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008ee8:	f383 8811 	msr	BASEPRI, r3
 8008eec:	f3bf 8f6f 	isb	sy
 8008ef0:	f3bf 8f4f 	dsb	sy
 8008ef4:	e7fe      	b.n	8008ef4 <xTaskResumeAll+0x18>
	taskENTER_CRITICAL();
 8008ef6:	f7fe fedd 	bl	8007cb4 <vPortEnterCritical>
		--uxSchedulerSuspended;
 8008efa:	6823      	ldr	r3, [r4, #0]
 8008efc:	3b01      	subs	r3, #1
 8008efe:	6023      	str	r3, [r4, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8008f00:	6824      	ldr	r4, [r4, #0]
 8008f02:	b12c      	cbz	r4, 8008f10 <xTaskResumeAll+0x34>
BaseType_t xAlreadyYielded = pdFALSE;
 8008f04:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 8008f06:	f7fe fef5 	bl	8007cf4 <vPortExitCritical>
}
 8008f0a:	4620      	mov	r0, r4
 8008f0c:	b003      	add	sp, #12
 8008f0e:	bdf0      	pop	{r4, r5, r6, r7, pc}
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 8008f10:	4b25      	ldr	r3, [pc, #148]	; (8008fa8 <xTaskResumeAll+0xcc>)
 8008f12:	681b      	ldr	r3, [r3, #0]
 8008f14:	2b00      	cmp	r3, #0
 8008f16:	d0f5      	beq.n	8008f04 <xTaskResumeAll+0x28>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8008f18:	4d24      	ldr	r5, [pc, #144]	; (8008fac <xTaskResumeAll+0xd0>)
					prvAddTaskToReadyList( pxTCB );
 8008f1a:	4e25      	ldr	r6, [pc, #148]	; (8008fb0 <xTaskResumeAll+0xd4>)
 8008f1c:	4f25      	ldr	r7, [pc, #148]	; (8008fb4 <xTaskResumeAll+0xd8>)
 8008f1e:	e01e      	b.n	8008f5e <xTaskResumeAll+0x82>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008f20:	68eb      	ldr	r3, [r5, #12]
 8008f22:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8008f24:	f104 0018 	add.w	r0, r4, #24
 8008f28:	f7fe fe4b 	bl	8007bc2 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8008f2c:	1d21      	adds	r1, r4, #4
 8008f2e:	4608      	mov	r0, r1
 8008f30:	9101      	str	r1, [sp, #4]
 8008f32:	f7fe fe46 	bl	8007bc2 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 8008f36:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8008f38:	6832      	ldr	r2, [r6, #0]
 8008f3a:	9901      	ldr	r1, [sp, #4]
 8008f3c:	2014      	movs	r0, #20
 8008f3e:	4293      	cmp	r3, r2
 8008f40:	fb00 7003 	mla	r0, r0, r3, r7
 8008f44:	bf88      	it	hi
 8008f46:	6033      	strhi	r3, [r6, #0]
 8008f48:	f7fe fe18 	bl	8007b7c <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8008f4c:	4b1a      	ldr	r3, [pc, #104]	; (8008fb8 <xTaskResumeAll+0xdc>)
 8008f4e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8008f50:	681b      	ldr	r3, [r3, #0]
 8008f52:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008f54:	429a      	cmp	r2, r3
 8008f56:	d302      	bcc.n	8008f5e <xTaskResumeAll+0x82>
						xYieldPending = pdTRUE;
 8008f58:	4b18      	ldr	r3, [pc, #96]	; (8008fbc <xTaskResumeAll+0xe0>)
 8008f5a:	2201      	movs	r2, #1
 8008f5c:	601a      	str	r2, [r3, #0]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8008f5e:	682b      	ldr	r3, [r5, #0]
 8008f60:	2b00      	cmp	r3, #0
 8008f62:	d1dd      	bne.n	8008f20 <xTaskResumeAll+0x44>
				if( pxTCB != NULL )
 8008f64:	b10c      	cbz	r4, 8008f6a <xTaskResumeAll+0x8e>
					prvResetNextTaskUnblockTime();
 8008f66:	f7ff fd9d 	bl	8008aa4 <prvResetNextTaskUnblockTime>
					UBaseType_t uxPendedCounts = uxPendedTicks; /* Non-volatile copy. */
 8008f6a:	4d15      	ldr	r5, [pc, #84]	; (8008fc0 <xTaskResumeAll+0xe4>)
 8008f6c:	682c      	ldr	r4, [r5, #0]
					if( uxPendedCounts > ( UBaseType_t ) 0U )
 8008f6e:	b144      	cbz	r4, 8008f82 <xTaskResumeAll+0xa6>
								xYieldPending = pdTRUE;
 8008f70:	4e12      	ldr	r6, [pc, #72]	; (8008fbc <xTaskResumeAll+0xe0>)
 8008f72:	2701      	movs	r7, #1
							if( xTaskIncrementTick() != pdFALSE )
 8008f74:	f7ff ff1c 	bl	8008db0 <xTaskIncrementTick>
 8008f78:	b100      	cbz	r0, 8008f7c <xTaskResumeAll+0xa0>
								xYieldPending = pdTRUE;
 8008f7a:	6037      	str	r7, [r6, #0]
						} while( uxPendedCounts > ( UBaseType_t ) 0U );
 8008f7c:	3c01      	subs	r4, #1
 8008f7e:	d1f9      	bne.n	8008f74 <xTaskResumeAll+0x98>
						uxPendedTicks = 0;
 8008f80:	602c      	str	r4, [r5, #0]
				if( xYieldPending != pdFALSE )
 8008f82:	4b0e      	ldr	r3, [pc, #56]	; (8008fbc <xTaskResumeAll+0xe0>)
 8008f84:	681b      	ldr	r3, [r3, #0]
 8008f86:	2b00      	cmp	r3, #0
 8008f88:	d0bc      	beq.n	8008f04 <xTaskResumeAll+0x28>
					taskYIELD_IF_USING_PREEMPTION();
 8008f8a:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008f8e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008f92:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008f96:	f3bf 8f4f 	dsb	sy
 8008f9a:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 8008f9e:	2401      	movs	r4, #1
 8008fa0:	e7b1      	b.n	8008f06 <xTaskResumeAll+0x2a>
 8008fa2:	bf00      	nop
 8008fa4:	2001729c 	.word	0x2001729c
 8008fa8:	20017290 	.word	0x20017290
 8008fac:	200172d8 	.word	0x200172d8
 8008fb0:	200172a4 	.word	0x200172a4
 8008fb4:	20016e30 	.word	0x20016e30
 8008fb8:	20016e24 	.word	0x20016e24
 8008fbc:	2001731c 	.word	0x2001731c
 8008fc0:	20017298 	.word	0x20017298

08008fc4 <vTaskDelay>:
	{
 8008fc4:	b508      	push	{r3, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 8008fc6:	b950      	cbnz	r0, 8008fde <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 8008fc8:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008fcc:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008fd0:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008fd4:	f3bf 8f4f 	dsb	sy
 8008fd8:	f3bf 8f6f 	isb	sy
	}
 8008fdc:	bd08      	pop	{r3, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 8008fde:	4b0a      	ldr	r3, [pc, #40]	; (8009008 <vTaskDelay+0x44>)
 8008fe0:	6819      	ldr	r1, [r3, #0]
 8008fe2:	b141      	cbz	r1, 8008ff6 <vTaskDelay+0x32>
 8008fe4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008fe8:	f383 8811 	msr	BASEPRI, r3
 8008fec:	f3bf 8f6f 	isb	sy
 8008ff0:	f3bf 8f4f 	dsb	sy
 8008ff4:	e7fe      	b.n	8008ff4 <vTaskDelay+0x30>
			vTaskSuspendAll();
 8008ff6:	f7ff fecd 	bl	8008d94 <vTaskSuspendAll>
				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
 8008ffa:	f7ff fd1b 	bl	8008a34 <prvAddCurrentTaskToDelayedList>
			xAlreadyYielded = xTaskResumeAll();
 8008ffe:	f7ff ff6d 	bl	8008edc <xTaskResumeAll>
		if( xAlreadyYielded == pdFALSE )
 8009002:	2800      	cmp	r0, #0
 8009004:	d0e0      	beq.n	8008fc8 <vTaskDelay+0x4>
 8009006:	e7e9      	b.n	8008fdc <vTaskDelay+0x18>
 8009008:	2001729c 	.word	0x2001729c

0800900c <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 800900c:	4b19      	ldr	r3, [pc, #100]	; (8009074 <vTaskSwitchContext+0x68>)
 800900e:	681a      	ldr	r2, [r3, #0]
 8009010:	4b19      	ldr	r3, [pc, #100]	; (8009078 <vTaskSwitchContext+0x6c>)
{
 8009012:	b570      	push	{r4, r5, r6, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 8009014:	b112      	cbz	r2, 800901c <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
 8009016:	2201      	movs	r2, #1
 8009018:	601a      	str	r2, [r3, #0]
}
 800901a:	bd70      	pop	{r4, r5, r6, pc}
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800901c:	4d17      	ldr	r5, [pc, #92]	; (800907c <vTaskSwitchContext+0x70>)
		xYieldPending = pdFALSE;
 800901e:	601a      	str	r2, [r3, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009020:	682a      	ldr	r2, [r5, #0]
 8009022:	4917      	ldr	r1, [pc, #92]	; (8009080 <vTaskSwitchContext+0x74>)
 8009024:	2614      	movs	r6, #20
 8009026:	fb06 f302 	mul.w	r3, r6, r2
 800902a:	18c8      	adds	r0, r1, r3
 800902c:	58cc      	ldr	r4, [r1, r3]
 800902e:	b1ac      	cbz	r4, 800905c <vTaskSwitchContext+0x50>
 8009030:	6844      	ldr	r4, [r0, #4]
 8009032:	3308      	adds	r3, #8
 8009034:	6864      	ldr	r4, [r4, #4]
 8009036:	6044      	str	r4, [r0, #4]
 8009038:	440b      	add	r3, r1
 800903a:	429c      	cmp	r4, r3
 800903c:	bf04      	itt	eq
 800903e:	6863      	ldreq	r3, [r4, #4]
 8009040:	6043      	streq	r3, [r0, #4]
 8009042:	2314      	movs	r3, #20
 8009044:	fb03 1102 	mla	r1, r3, r2, r1
 8009048:	684b      	ldr	r3, [r1, #4]
 800904a:	68d9      	ldr	r1, [r3, #12]
 800904c:	4b0d      	ldr	r3, [pc, #52]	; (8009084 <vTaskSwitchContext+0x78>)
 800904e:	6019      	str	r1, [r3, #0]
 8009050:	602a      	str	r2, [r5, #0]
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 8009052:	681b      	ldr	r3, [r3, #0]
 8009054:	4a0c      	ldr	r2, [pc, #48]	; (8009088 <vTaskSwitchContext+0x7c>)
 8009056:	3358      	adds	r3, #88	; 0x58
 8009058:	6013      	str	r3, [r2, #0]
}
 800905a:	e7de      	b.n	800901a <vTaskSwitchContext+0xe>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800905c:	b942      	cbnz	r2, 8009070 <vTaskSwitchContext+0x64>
 800905e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009062:	f383 8811 	msr	BASEPRI, r3
 8009066:	f3bf 8f6f 	isb	sy
 800906a:	f3bf 8f4f 	dsb	sy
 800906e:	e7fe      	b.n	800906e <vTaskSwitchContext+0x62>
 8009070:	3a01      	subs	r2, #1
 8009072:	e7d8      	b.n	8009026 <vTaskSwitchContext+0x1a>
 8009074:	2001729c 	.word	0x2001729c
 8009078:	2001731c 	.word	0x2001731c
 800907c:	200172a4 	.word	0x200172a4
 8009080:	20016e30 	.word	0x20016e30
 8009084:	20016e24 	.word	0x20016e24
 8009088:	20000104 	.word	0x20000104

0800908c <vTaskPlaceOnEventList>:
{
 800908c:	b510      	push	{r4, lr}
 800908e:	460c      	mov	r4, r1
	configASSERT( pxEventList );
 8009090:	b940      	cbnz	r0, 80090a4 <vTaskPlaceOnEventList+0x18>
 8009092:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009096:	f383 8811 	msr	BASEPRI, r3
 800909a:	f3bf 8f6f 	isb	sy
 800909e:	f3bf 8f4f 	dsb	sy
 80090a2:	e7fe      	b.n	80090a2 <vTaskPlaceOnEventList+0x16>
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 80090a4:	4b05      	ldr	r3, [pc, #20]	; (80090bc <vTaskPlaceOnEventList+0x30>)
 80090a6:	6819      	ldr	r1, [r3, #0]
 80090a8:	3118      	adds	r1, #24
 80090aa:	f7fe fd73 	bl	8007b94 <vListInsert>
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 80090ae:	4620      	mov	r0, r4
 80090b0:	2101      	movs	r1, #1
}
 80090b2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 80090b6:	f7ff bcbd 	b.w	8008a34 <prvAddCurrentTaskToDelayedList>
 80090ba:	bf00      	nop
 80090bc:	20016e24 	.word	0x20016e24

080090c0 <vTaskPlaceOnEventListRestricted>:
	{
 80090c0:	b538      	push	{r3, r4, r5, lr}
 80090c2:	460d      	mov	r5, r1
 80090c4:	4614      	mov	r4, r2
		configASSERT( pxEventList );
 80090c6:	b940      	cbnz	r0, 80090da <vTaskPlaceOnEventListRestricted+0x1a>
 80090c8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80090cc:	f383 8811 	msr	BASEPRI, r3
 80090d0:	f3bf 8f6f 	isb	sy
 80090d4:	f3bf 8f4f 	dsb	sy
 80090d8:	e7fe      	b.n	80090d8 <vTaskPlaceOnEventListRestricted+0x18>
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 80090da:	4b07      	ldr	r3, [pc, #28]	; (80090f8 <vTaskPlaceOnEventListRestricted+0x38>)
 80090dc:	6819      	ldr	r1, [r3, #0]
 80090de:	3118      	adds	r1, #24
 80090e0:	f7fe fd4c 	bl	8007b7c <vListInsertEnd>
			xTicksToWait = portMAX_DELAY;
 80090e4:	2c00      	cmp	r4, #0
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 80090e6:	4621      	mov	r1, r4
 80090e8:	bf0c      	ite	eq
 80090ea:	4628      	moveq	r0, r5
 80090ec:	f04f 30ff 	movne.w	r0, #4294967295
	}
 80090f0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 80090f4:	f7ff bc9e 	b.w	8008a34 <prvAddCurrentTaskToDelayedList>
 80090f8:	20016e24 	.word	0x20016e24

080090fc <xTaskRemoveFromEventList>:
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80090fc:	68c3      	ldr	r3, [r0, #12]
{
 80090fe:	b513      	push	{r0, r1, r4, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009100:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
 8009102:	b944      	cbnz	r4, 8009116 <xTaskRemoveFromEventList+0x1a>
 8009104:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009108:	f383 8811 	msr	BASEPRI, r3
 800910c:	f3bf 8f6f 	isb	sy
 8009110:	f3bf 8f4f 	dsb	sy
 8009114:	e7fe      	b.n	8009114 <xTaskRemoveFromEventList+0x18>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 8009116:	f104 0118 	add.w	r1, r4, #24
 800911a:	4608      	mov	r0, r1
 800911c:	9101      	str	r1, [sp, #4]
 800911e:	f7fe fd50 	bl	8007bc2 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009122:	4b12      	ldr	r3, [pc, #72]	; (800916c <xTaskRemoveFromEventList+0x70>)
 8009124:	9901      	ldr	r1, [sp, #4]
 8009126:	681b      	ldr	r3, [r3, #0]
 8009128:	b9eb      	cbnz	r3, 8009166 <xTaskRemoveFromEventList+0x6a>
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 800912a:	1d21      	adds	r1, r4, #4
 800912c:	4608      	mov	r0, r1
 800912e:	9101      	str	r1, [sp, #4]
 8009130:	f7fe fd47 	bl	8007bc2 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 8009134:	4a0e      	ldr	r2, [pc, #56]	; (8009170 <xTaskRemoveFromEventList+0x74>)
 8009136:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8009138:	6810      	ldr	r0, [r2, #0]
 800913a:	9901      	ldr	r1, [sp, #4]
 800913c:	4283      	cmp	r3, r0
 800913e:	bf88      	it	hi
 8009140:	6013      	strhi	r3, [r2, #0]
 8009142:	4a0c      	ldr	r2, [pc, #48]	; (8009174 <xTaskRemoveFromEventList+0x78>)
 8009144:	2014      	movs	r0, #20
 8009146:	fb00 2003 	mla	r0, r0, r3, r2
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800914a:	f7fe fd17 	bl	8007b7c <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 800914e:	4b0a      	ldr	r3, [pc, #40]	; (8009178 <xTaskRemoveFromEventList+0x7c>)
 8009150:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8009152:	681b      	ldr	r3, [r3, #0]
 8009154:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009156:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 8009158:	bf85      	ittet	hi
 800915a:	4b08      	ldrhi	r3, [pc, #32]	; (800917c <xTaskRemoveFromEventList+0x80>)
 800915c:	2001      	movhi	r0, #1
		xReturn = pdFALSE;
 800915e:	2000      	movls	r0, #0
		xYieldPending = pdTRUE;
 8009160:	6018      	strhi	r0, [r3, #0]
}
 8009162:	b002      	add	sp, #8
 8009164:	bd10      	pop	{r4, pc}
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 8009166:	4806      	ldr	r0, [pc, #24]	; (8009180 <xTaskRemoveFromEventList+0x84>)
 8009168:	e7ef      	b.n	800914a <xTaskRemoveFromEventList+0x4e>
 800916a:	bf00      	nop
 800916c:	2001729c 	.word	0x2001729c
 8009170:	200172a4 	.word	0x200172a4
 8009174:	20016e30 	.word	0x20016e30
 8009178:	20016e24 	.word	0x20016e24
 800917c:	2001731c 	.word	0x2001731c
 8009180:	200172d8 	.word	0x200172d8

08009184 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 8009184:	4b03      	ldr	r3, [pc, #12]	; (8009194 <vTaskInternalSetTimeOutState+0x10>)
 8009186:	681b      	ldr	r3, [r3, #0]
 8009188:	6003      	str	r3, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800918a:	4b03      	ldr	r3, [pc, #12]	; (8009198 <vTaskInternalSetTimeOutState+0x14>)
 800918c:	681b      	ldr	r3, [r3, #0]
 800918e:	6043      	str	r3, [r0, #4]
}
 8009190:	4770      	bx	lr
 8009192:	bf00      	nop
 8009194:	200172d4 	.word	0x200172d4
 8009198:	20017318 	.word	0x20017318

0800919c <xTaskCheckForTimeOut>:
{
 800919c:	b570      	push	{r4, r5, r6, lr}
 800919e:	460c      	mov	r4, r1
	configASSERT( pxTimeOut );
 80091a0:	4605      	mov	r5, r0
 80091a2:	b940      	cbnz	r0, 80091b6 <xTaskCheckForTimeOut+0x1a>
 80091a4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80091a8:	f383 8811 	msr	BASEPRI, r3
 80091ac:	f3bf 8f6f 	isb	sy
 80091b0:	f3bf 8f4f 	dsb	sy
 80091b4:	e7fe      	b.n	80091b4 <xTaskCheckForTimeOut+0x18>
	configASSERT( pxTicksToWait );
 80091b6:	b941      	cbnz	r1, 80091ca <xTaskCheckForTimeOut+0x2e>
 80091b8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80091bc:	f383 8811 	msr	BASEPRI, r3
 80091c0:	f3bf 8f6f 	isb	sy
 80091c4:	f3bf 8f4f 	dsb	sy
 80091c8:	e7fe      	b.n	80091c8 <xTaskCheckForTimeOut+0x2c>
	taskENTER_CRITICAL();
 80091ca:	f7fe fd73 	bl	8007cb4 <vPortEnterCritical>
		const TickType_t xConstTickCount = xTickCount;
 80091ce:	4b0f      	ldr	r3, [pc, #60]	; (800920c <xTaskCheckForTimeOut+0x70>)
 80091d0:	6819      	ldr	r1, [r3, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 80091d2:	6823      	ldr	r3, [r4, #0]
 80091d4:	1c5a      	adds	r2, r3, #1
 80091d6:	d010      	beq.n	80091fa <xTaskCheckForTimeOut+0x5e>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 80091d8:	480d      	ldr	r0, [pc, #52]	; (8009210 <xTaskCheckForTimeOut+0x74>)
 80091da:	682e      	ldr	r6, [r5, #0]
 80091dc:	6800      	ldr	r0, [r0, #0]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 80091de:	686a      	ldr	r2, [r5, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 80091e0:	4286      	cmp	r6, r0
 80091e2:	d001      	beq.n	80091e8 <xTaskCheckForTimeOut+0x4c>
 80091e4:	428a      	cmp	r2, r1
 80091e6:	d90f      	bls.n	8009208 <xTaskCheckForTimeOut+0x6c>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 80091e8:	1a88      	subs	r0, r1, r2
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 80091ea:	4283      	cmp	r3, r0
 80091ec:	d90a      	bls.n	8009204 <xTaskCheckForTimeOut+0x68>
			*pxTicksToWait -= xElapsedTime;
 80091ee:	1a5b      	subs	r3, r3, r1
 80091f0:	4413      	add	r3, r2
 80091f2:	6023      	str	r3, [r4, #0]
			vTaskInternalSetTimeOutState( pxTimeOut );
 80091f4:	4628      	mov	r0, r5
 80091f6:	f7ff ffc5 	bl	8009184 <vTaskInternalSetTimeOutState>
				xReturn = pdFALSE;
 80091fa:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 80091fc:	f7fe fd7a 	bl	8007cf4 <vPortExitCritical>
}
 8009200:	4620      	mov	r0, r4
 8009202:	bd70      	pop	{r4, r5, r6, pc}
			*pxTicksToWait = 0;
 8009204:	2300      	movs	r3, #0
 8009206:	6023      	str	r3, [r4, #0]
			xReturn = pdTRUE;
 8009208:	2401      	movs	r4, #1
 800920a:	e7f7      	b.n	80091fc <xTaskCheckForTimeOut+0x60>
 800920c:	20017318 	.word	0x20017318
 8009210:	200172d4 	.word	0x200172d4

08009214 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 8009214:	4b01      	ldr	r3, [pc, #4]	; (800921c <vTaskMissedYield+0x8>)
 8009216:	2201      	movs	r2, #1
 8009218:	601a      	str	r2, [r3, #0]
}
 800921a:	4770      	bx	lr
 800921c:	2001731c 	.word	0x2001731c

08009220 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 8009220:	4b05      	ldr	r3, [pc, #20]	; (8009238 <xTaskGetSchedulerState+0x18>)
 8009222:	681b      	ldr	r3, [r3, #0]
 8009224:	b133      	cbz	r3, 8009234 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009226:	4b05      	ldr	r3, [pc, #20]	; (800923c <xTaskGetSchedulerState+0x1c>)
 8009228:	681b      	ldr	r3, [r3, #0]
				xReturn = taskSCHEDULER_SUSPENDED;
 800922a:	2b00      	cmp	r3, #0
 800922c:	bf0c      	ite	eq
 800922e:	2002      	moveq	r0, #2
 8009230:	2000      	movne	r0, #0
 8009232:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 8009234:	2001      	movs	r0, #1
	}
 8009236:	4770      	bx	lr
 8009238:	200172ec 	.word	0x200172ec
 800923c:	2001729c 	.word	0x2001729c

08009240 <xTaskPriorityInherit>:
	{
 8009240:	b573      	push	{r0, r1, r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 8009242:	4604      	mov	r4, r0
 8009244:	b348      	cbz	r0, 800929a <xTaskPriorityInherit+0x5a>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 8009246:	4d1c      	ldr	r5, [pc, #112]	; (80092b8 <xTaskPriorityInherit+0x78>)
 8009248:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800924a:	682a      	ldr	r2, [r5, #0]
 800924c:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800924e:	4293      	cmp	r3, r2
 8009250:	d229      	bcs.n	80092a6 <xTaskPriorityInherit+0x66>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8009252:	6982      	ldr	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 8009254:	4e19      	ldr	r6, [pc, #100]	; (80092bc <xTaskPriorityInherit+0x7c>)
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8009256:	2a00      	cmp	r2, #0
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009258:	bfa1      	itttt	ge
 800925a:	682a      	ldrge	r2, [r5, #0]
 800925c:	6ad2      	ldrge	r2, [r2, #44]	; 0x2c
 800925e:	f1c2 0238 	rsbge	r2, r2, #56	; 0x38
 8009262:	6182      	strge	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 8009264:	2214      	movs	r2, #20
 8009266:	fb02 6303 	mla	r3, r2, r3, r6
 800926a:	6942      	ldr	r2, [r0, #20]
 800926c:	429a      	cmp	r2, r3
 800926e:	d116      	bne.n	800929e <xTaskPriorityInherit+0x5e>
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009270:	1d01      	adds	r1, r0, #4
 8009272:	4608      	mov	r0, r1
 8009274:	9101      	str	r1, [sp, #4]
 8009276:	f7fe fca4 	bl	8007bc2 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800927a:	682b      	ldr	r3, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800927c:	4a10      	ldr	r2, [pc, #64]	; (80092c0 <xTaskPriorityInherit+0x80>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800927e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8009280:	6810      	ldr	r0, [r2, #0]
 8009282:	9901      	ldr	r1, [sp, #4]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8009284:	62e3      	str	r3, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8009286:	4283      	cmp	r3, r0
 8009288:	f04f 0014 	mov.w	r0, #20
 800928c:	fb00 6003 	mla	r0, r0, r3, r6
 8009290:	bf88      	it	hi
 8009292:	6013      	strhi	r3, [r2, #0]
 8009294:	f7fe fc72 	bl	8007b7c <vListInsertEnd>
				xReturn = pdTRUE;
 8009298:	2001      	movs	r0, #1
	}
 800929a:	b002      	add	sp, #8
 800929c:	bd70      	pop	{r4, r5, r6, pc}
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800929e:	682b      	ldr	r3, [r5, #0]
 80092a0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80092a2:	62c3      	str	r3, [r0, #44]	; 0x2c
 80092a4:	e7f8      	b.n	8009298 <xTaskPriorityInherit+0x58>
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 80092a6:	682b      	ldr	r3, [r5, #0]
 80092a8:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 80092aa:	6adc      	ldr	r4, [r3, #44]	; 0x2c
 80092ac:	42a0      	cmp	r0, r4
 80092ae:	bf2c      	ite	cs
 80092b0:	2000      	movcs	r0, #0
 80092b2:	2001      	movcc	r0, #1
 80092b4:	e7f1      	b.n	800929a <xTaskPriorityInherit+0x5a>
 80092b6:	bf00      	nop
 80092b8:	20016e24 	.word	0x20016e24
 80092bc:	20016e30 	.word	0x20016e30
 80092c0:	200172a4 	.word	0x200172a4

080092c4 <xTaskPriorityDisinherit>:
	{
 80092c4:	b513      	push	{r0, r1, r4, lr}
		if( pxMutexHolder != NULL )
 80092c6:	b910      	cbnz	r0, 80092ce <xTaskPriorityDisinherit+0xa>
	BaseType_t xReturn = pdFALSE;
 80092c8:	2000      	movs	r0, #0
	}
 80092ca:	b002      	add	sp, #8
 80092cc:	bd10      	pop	{r4, pc}
			configASSERT( pxTCB == pxCurrentTCB );
 80092ce:	4b1c      	ldr	r3, [pc, #112]	; (8009340 <xTaskPriorityDisinherit+0x7c>)
 80092d0:	681c      	ldr	r4, [r3, #0]
 80092d2:	4284      	cmp	r4, r0
 80092d4:	d008      	beq.n	80092e8 <xTaskPriorityDisinherit+0x24>
 80092d6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80092da:	f383 8811 	msr	BASEPRI, r3
 80092de:	f3bf 8f6f 	isb	sy
 80092e2:	f3bf 8f4f 	dsb	sy
 80092e6:	e7fe      	b.n	80092e6 <xTaskPriorityDisinherit+0x22>
			configASSERT( pxTCB->uxMutexesHeld );
 80092e8:	6d23      	ldr	r3, [r4, #80]	; 0x50
 80092ea:	b943      	cbnz	r3, 80092fe <xTaskPriorityDisinherit+0x3a>
 80092ec:	f04f 0350 	mov.w	r3, #80	; 0x50
 80092f0:	f383 8811 	msr	BASEPRI, r3
 80092f4:	f3bf 8f6f 	isb	sy
 80092f8:	f3bf 8f4f 	dsb	sy
 80092fc:	e7fe      	b.n	80092fc <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 80092fe:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8009300:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 8009302:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8009304:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 8009306:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8009308:	d0de      	beq.n	80092c8 <xTaskPriorityDisinherit+0x4>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 800930a:	2b00      	cmp	r3, #0
 800930c:	d1dc      	bne.n	80092c8 <xTaskPriorityDisinherit+0x4>
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800930e:	1d21      	adds	r1, r4, #4
 8009310:	4608      	mov	r0, r1
 8009312:	9101      	str	r1, [sp, #4]
 8009314:	f7fe fc55 	bl	8007bc2 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 8009318:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
 800931a:	9901      	ldr	r1, [sp, #4]
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800931c:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800931e:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
 8009322:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 8009324:	4a07      	ldr	r2, [pc, #28]	; (8009344 <xTaskPriorityDisinherit+0x80>)
 8009326:	6810      	ldr	r0, [r2, #0]
 8009328:	4283      	cmp	r3, r0
 800932a:	bf88      	it	hi
 800932c:	6013      	strhi	r3, [r2, #0]
 800932e:	4a06      	ldr	r2, [pc, #24]	; (8009348 <xTaskPriorityDisinherit+0x84>)
 8009330:	2014      	movs	r0, #20
 8009332:	fb00 2003 	mla	r0, r0, r3, r2
 8009336:	f7fe fc21 	bl	8007b7c <vListInsertEnd>
					xReturn = pdTRUE;
 800933a:	2001      	movs	r0, #1
		return xReturn;
 800933c:	e7c5      	b.n	80092ca <xTaskPriorityDisinherit+0x6>
 800933e:	bf00      	nop
 8009340:	20016e24 	.word	0x20016e24
 8009344:	200172a4 	.word	0x200172a4
 8009348:	20016e30 	.word	0x20016e30

0800934c <vTaskPriorityDisinheritAfterTimeout>:
	{
 800934c:	b537      	push	{r0, r1, r2, r4, r5, lr}
		if( pxMutexHolder != NULL )
 800934e:	4604      	mov	r4, r0
 8009350:	2800      	cmp	r0, #0
 8009352:	d044      	beq.n	80093de <vTaskPriorityDisinheritAfterTimeout+0x92>
			configASSERT( pxTCB->uxMutexesHeld );
 8009354:	6d02      	ldr	r2, [r0, #80]	; 0x50
 8009356:	b942      	cbnz	r2, 800936a <vTaskPriorityDisinheritAfterTimeout+0x1e>
 8009358:	f04f 0350 	mov.w	r3, #80	; 0x50
 800935c:	f383 8811 	msr	BASEPRI, r3
 8009360:	f3bf 8f6f 	isb	sy
 8009364:	f3bf 8f4f 	dsb	sy
 8009368:	e7fe      	b.n	8009368 <vTaskPriorityDisinheritAfterTimeout+0x1c>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 800936a:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 800936c:	4299      	cmp	r1, r3
 800936e:	bf38      	it	cc
 8009370:	4619      	movcc	r1, r3
			if( pxTCB->uxPriority != uxPriorityToUse )
 8009372:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8009374:	428b      	cmp	r3, r1
 8009376:	d032      	beq.n	80093de <vTaskPriorityDisinheritAfterTimeout+0x92>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 8009378:	2a01      	cmp	r2, #1
 800937a:	d130      	bne.n	80093de <vTaskPriorityDisinheritAfterTimeout+0x92>
					configASSERT( pxTCB != pxCurrentTCB );
 800937c:	4a19      	ldr	r2, [pc, #100]	; (80093e4 <vTaskPriorityDisinheritAfterTimeout+0x98>)
 800937e:	6812      	ldr	r2, [r2, #0]
 8009380:	4282      	cmp	r2, r0
 8009382:	d108      	bne.n	8009396 <vTaskPriorityDisinheritAfterTimeout+0x4a>
 8009384:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009388:	f383 8811 	msr	BASEPRI, r3
 800938c:	f3bf 8f6f 	isb	sy
 8009390:	f3bf 8f4f 	dsb	sy
 8009394:	e7fe      	b.n	8009394 <vTaskPriorityDisinheritAfterTimeout+0x48>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8009396:	6982      	ldr	r2, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8009398:	4d13      	ldr	r5, [pc, #76]	; (80093e8 <vTaskPriorityDisinheritAfterTimeout+0x9c>)
					pxTCB->uxPriority = uxPriorityToUse;
 800939a:	62c1      	str	r1, [r0, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800939c:	2a00      	cmp	r2, #0
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800939e:	f04f 0214 	mov.w	r2, #20
 80093a2:	fb02 5303 	mla	r3, r2, r3, r5
 80093a6:	6942      	ldr	r2, [r0, #20]
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80093a8:	bfa4      	itt	ge
 80093aa:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
 80093ae:	6181      	strge	r1, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 80093b0:	429a      	cmp	r2, r3
 80093b2:	d114      	bne.n	80093de <vTaskPriorityDisinheritAfterTimeout+0x92>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80093b4:	1d01      	adds	r1, r0, #4
 80093b6:	4608      	mov	r0, r1
 80093b8:	9101      	str	r1, [sp, #4]
 80093ba:	f7fe fc02 	bl	8007bc2 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 80093be:	4a0b      	ldr	r2, [pc, #44]	; (80093ec <vTaskPriorityDisinheritAfterTimeout+0xa0>)
 80093c0:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80093c2:	6810      	ldr	r0, [r2, #0]
 80093c4:	9901      	ldr	r1, [sp, #4]
 80093c6:	4283      	cmp	r3, r0
 80093c8:	f04f 0014 	mov.w	r0, #20
 80093cc:	fb00 5003 	mla	r0, r0, r3, r5
 80093d0:	bf88      	it	hi
 80093d2:	6013      	strhi	r3, [r2, #0]
	}
 80093d4:	b003      	add	sp, #12
 80093d6:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
 80093da:	f7fe bbcf 	b.w	8007b7c <vListInsertEnd>
	}
 80093de:	b003      	add	sp, #12
 80093e0:	bd30      	pop	{r4, r5, pc}
 80093e2:	bf00      	nop
 80093e4:	20016e24 	.word	0x20016e24
 80093e8:	20016e30 	.word	0x20016e30
 80093ec:	200172a4 	.word	0x200172a4

080093f0 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 80093f0:	4b04      	ldr	r3, [pc, #16]	; (8009404 <pvTaskIncrementMutexHeldCount+0x14>)
 80093f2:	681a      	ldr	r2, [r3, #0]
 80093f4:	b11a      	cbz	r2, 80093fe <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 80093f6:	6819      	ldr	r1, [r3, #0]
 80093f8:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 80093fa:	3201      	adds	r2, #1
 80093fc:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 80093fe:	6818      	ldr	r0, [r3, #0]
	}
 8009400:	4770      	bx	lr
 8009402:	bf00      	nop
 8009404:	20016e24 	.word	0x20016e24

08009408 <prvCheckForValidListAndQueue>:
	pxOverflowTimerList = pxTemp;
}
/*-----------------------------------------------------------*/

static void prvCheckForValidListAndQueue( void )
{
 8009408:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 800940a:	4c11      	ldr	r4, [pc, #68]	; (8009450 <prvCheckForValidListAndQueue+0x48>)
	taskENTER_CRITICAL();
 800940c:	f7fe fc52 	bl	8007cb4 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 8009410:	6825      	ldr	r5, [r4, #0]
 8009412:	b9bd      	cbnz	r5, 8009444 <prvCheckForValidListAndQueue+0x3c>
		{
			vListInitialise( &xActiveTimerList1 );
 8009414:	4f0f      	ldr	r7, [pc, #60]	; (8009454 <prvCheckForValidListAndQueue+0x4c>)
			vListInitialise( &xActiveTimerList2 );
 8009416:	4e10      	ldr	r6, [pc, #64]	; (8009458 <prvCheckForValidListAndQueue+0x50>)
			vListInitialise( &xActiveTimerList1 );
 8009418:	4638      	mov	r0, r7
 800941a:	f7fe fba1 	bl	8007b60 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 800941e:	4630      	mov	r0, r6
 8009420:	f7fe fb9e 	bl	8007b60 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 8009424:	4b0d      	ldr	r3, [pc, #52]	; (800945c <prvCheckForValidListAndQueue+0x54>)
				/* The timer queue is allocated statically in case
				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8009426:	4a0e      	ldr	r2, [pc, #56]	; (8009460 <prvCheckForValidListAndQueue+0x58>)
			pxCurrentTimerList = &xActiveTimerList1;
 8009428:	601f      	str	r7, [r3, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 800942a:	4b0e      	ldr	r3, [pc, #56]	; (8009464 <prvCheckForValidListAndQueue+0x5c>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800942c:	2110      	movs	r1, #16
			pxOverflowTimerList = &xActiveTimerList2;
 800942e:	601e      	str	r6, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8009430:	200a      	movs	r0, #10
 8009432:	4b0d      	ldr	r3, [pc, #52]	; (8009468 <prvCheckForValidListAndQueue+0x60>)
 8009434:	9500      	str	r5, [sp, #0]
 8009436:	f7fe fe4e 	bl	80080d6 <xQueueGenericCreateStatic>
 800943a:	6020      	str	r0, [r4, #0]
			}
			#endif

			#if ( configQUEUE_REGISTRY_SIZE > 0 )
			{
				if( xTimerQueue != NULL )
 800943c:	b110      	cbz	r0, 8009444 <prvCheckForValidListAndQueue+0x3c>
				{
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 800943e:	490b      	ldr	r1, [pc, #44]	; (800946c <prvCheckForValidListAndQueue+0x64>)
 8009440:	f7ff fa18 	bl	8008874 <vQueueAddToRegistry>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
}
 8009444:	b003      	add	sp, #12
 8009446:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	taskEXIT_CRITICAL();
 800944a:	f7fe bc53 	b.w	8007cf4 <vPortExitCritical>
 800944e:	bf00      	nop
 8009450:	20017444 	.word	0x20017444
 8009454:	200173c8 	.word	0x200173c8
 8009458:	200173dc 	.word	0x200173dc
 800945c:	20017320 	.word	0x20017320
 8009460:	20017328 	.word	0x20017328
 8009464:	20017324 	.word	0x20017324
 8009468:	200173f4 	.word	0x200173f4
 800946c:	08022191 	.word	0x08022191

08009470 <prvInsertTimerInActiveList>:
	if( xNextExpiryTime <= xTimeNow )
 8009470:	4291      	cmp	r1, r2
{
 8009472:	b508      	push	{r3, lr}
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 8009474:	6041      	str	r1, [r0, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 8009476:	6100      	str	r0, [r0, #16]
	if( xNextExpiryTime <= xTimeNow )
 8009478:	d80a      	bhi.n	8009490 <prvInsertTimerInActiveList+0x20>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800947a:	1ad2      	subs	r2, r2, r3
 800947c:	6983      	ldr	r3, [r0, #24]
 800947e:	429a      	cmp	r2, r3
 8009480:	d20d      	bcs.n	800949e <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 8009482:	4b08      	ldr	r3, [pc, #32]	; (80094a4 <prvInsertTimerInActiveList+0x34>)
 8009484:	1d01      	adds	r1, r0, #4
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8009486:	6818      	ldr	r0, [r3, #0]
 8009488:	f7fe fb84 	bl	8007b94 <vListInsert>
BaseType_t xProcessTimerNow = pdFALSE;
 800948c:	2000      	movs	r0, #0
}
 800948e:	bd08      	pop	{r3, pc}
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 8009490:	429a      	cmp	r2, r3
 8009492:	d201      	bcs.n	8009498 <prvInsertTimerInActiveList+0x28>
 8009494:	4299      	cmp	r1, r3
 8009496:	d202      	bcs.n	800949e <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8009498:	4b03      	ldr	r3, [pc, #12]	; (80094a8 <prvInsertTimerInActiveList+0x38>)
 800949a:	1d01      	adds	r1, r0, #4
 800949c:	e7f3      	b.n	8009486 <prvInsertTimerInActiveList+0x16>
			xProcessTimerNow = pdTRUE;
 800949e:	2001      	movs	r0, #1
	return xProcessTimerNow;
 80094a0:	e7f5      	b.n	800948e <prvInsertTimerInActiveList+0x1e>
 80094a2:	bf00      	nop
 80094a4:	20017324 	.word	0x20017324
 80094a8:	20017320 	.word	0x20017320

080094ac <xTimerCreateTimerTask>:
{
 80094ac:	b510      	push	{r4, lr}
 80094ae:	b088      	sub	sp, #32
	prvCheckForValidListAndQueue();
 80094b0:	f7ff ffaa 	bl	8009408 <prvCheckForValidListAndQueue>
	if( xTimerQueue != NULL )
 80094b4:	4b12      	ldr	r3, [pc, #72]	; (8009500 <xTimerCreateTimerTask+0x54>)
 80094b6:	681b      	ldr	r3, [r3, #0]
 80094b8:	b1b3      	cbz	r3, 80094e8 <xTimerCreateTimerTask+0x3c>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 80094ba:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 80094bc:	aa07      	add	r2, sp, #28
 80094be:	a906      	add	r1, sp, #24
 80094c0:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 80094c2:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 80094c6:	f7fe fa51 	bl	800796c <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 80094ca:	9b05      	ldr	r3, [sp, #20]
 80094cc:	9302      	str	r3, [sp, #8]
 80094ce:	9b06      	ldr	r3, [sp, #24]
 80094d0:	9301      	str	r3, [sp, #4]
 80094d2:	2302      	movs	r3, #2
 80094d4:	9300      	str	r3, [sp, #0]
 80094d6:	9a07      	ldr	r2, [sp, #28]
 80094d8:	490a      	ldr	r1, [pc, #40]	; (8009504 <xTimerCreateTimerTask+0x58>)
 80094da:	480b      	ldr	r0, [pc, #44]	; (8009508 <xTimerCreateTimerTask+0x5c>)
 80094dc:	4623      	mov	r3, r4
 80094de:	f7ff fba3 	bl	8008c28 <xTaskCreateStatic>
 80094e2:	4b0a      	ldr	r3, [pc, #40]	; (800950c <xTimerCreateTimerTask+0x60>)
 80094e4:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 80094e6:	b940      	cbnz	r0, 80094fa <xTimerCreateTimerTask+0x4e>
 80094e8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80094ec:	f383 8811 	msr	BASEPRI, r3
 80094f0:	f3bf 8f6f 	isb	sy
 80094f4:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 80094f8:	e7fe      	b.n	80094f8 <xTimerCreateTimerTask+0x4c>
}
 80094fa:	2001      	movs	r0, #1
 80094fc:	b008      	add	sp, #32
 80094fe:	bd10      	pop	{r4, pc}
 8009500:	20017444 	.word	0x20017444
 8009504:	08022196 	.word	0x08022196
 8009508:	08009615 	.word	0x08009615
 800950c:	20017448 	.word	0x20017448

08009510 <xTimerGenericCommand>:
{
 8009510:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8009512:	4616      	mov	r6, r2
	configASSERT( xTimer );
 8009514:	4604      	mov	r4, r0
{
 8009516:	461a      	mov	r2, r3
	configASSERT( xTimer );
 8009518:	b940      	cbnz	r0, 800952c <xTimerGenericCommand+0x1c>
 800951a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800951e:	f383 8811 	msr	BASEPRI, r3
 8009522:	f3bf 8f6f 	isb	sy
 8009526:	f3bf 8f4f 	dsb	sy
 800952a:	e7fe      	b.n	800952a <xTimerGenericCommand+0x1a>
	if( xTimerQueue != NULL )
 800952c:	4d0d      	ldr	r5, [pc, #52]	; (8009564 <xTimerGenericCommand+0x54>)
 800952e:	6828      	ldr	r0, [r5, #0]
 8009530:	b180      	cbz	r0, 8009554 <xTimerGenericCommand+0x44>
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 8009532:	2905      	cmp	r1, #5
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 8009534:	e9cd 1600 	strd	r1, r6, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 8009538:	9402      	str	r4, [sp, #8]
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800953a:	dc0d      	bgt.n	8009558 <xTimerGenericCommand+0x48>
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800953c:	f7ff fe70 	bl	8009220 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 8009540:	2300      	movs	r3, #0
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8009542:	2802      	cmp	r0, #2
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 8009544:	bf08      	it	eq
 8009546:	9a08      	ldreq	r2, [sp, #32]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 8009548:	6828      	ldr	r0, [r5, #0]
 800954a:	bf18      	it	ne
 800954c:	461a      	movne	r2, r3
 800954e:	4669      	mov	r1, sp
 8009550:	f7fe fe76 	bl	8008240 <xQueueGenericSend>
}
 8009554:	b004      	add	sp, #16
 8009556:	bd70      	pop	{r4, r5, r6, pc}
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 8009558:	2300      	movs	r3, #0
 800955a:	4669      	mov	r1, sp
 800955c:	f7fe ff23 	bl	80083a6 <xQueueGenericSendFromISR>
 8009560:	e7f8      	b.n	8009554 <xTimerGenericCommand+0x44>
 8009562:	bf00      	nop
 8009564:	20017444 	.word	0x20017444

08009568 <prvSampleTimeNow>:
{
 8009568:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
	if( xTimeNow < xLastTime )
 800956c:	f8df 80a0 	ldr.w	r8, [pc, #160]	; 8009610 <prvSampleTimeNow+0xa8>
{
 8009570:	4606      	mov	r6, r0
	xTimeNow = xTaskGetTickCount();
 8009572:	f7ff fc17 	bl	8008da4 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 8009576:	f8d8 3000 	ldr.w	r3, [r8]
 800957a:	4283      	cmp	r3, r0
	xTimeNow = xTaskGetTickCount();
 800957c:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
 800957e:	d940      	bls.n	8009602 <prvSampleTimeNow+0x9a>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 8009580:	4f21      	ldr	r7, [pc, #132]	; (8009608 <prvSampleTimeNow+0xa0>)
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 8009582:	f04f 0900 	mov.w	r9, #0
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 8009586:	683b      	ldr	r3, [r7, #0]
 8009588:	681a      	ldr	r2, [r3, #0]
 800958a:	b95a      	cbnz	r2, 80095a4 <prvSampleTimeNow+0x3c>
	pxCurrentTimerList = pxOverflowTimerList;
 800958c:	4a1f      	ldr	r2, [pc, #124]	; (800960c <prvSampleTimeNow+0xa4>)
 800958e:	6811      	ldr	r1, [r2, #0]
 8009590:	6039      	str	r1, [r7, #0]
	pxOverflowTimerList = pxTemp;
 8009592:	6013      	str	r3, [r2, #0]
		*pxTimerListsWereSwitched = pdTRUE;
 8009594:	2301      	movs	r3, #1
}
 8009596:	4628      	mov	r0, r5
		*pxTimerListsWereSwitched = pdFALSE;
 8009598:	6033      	str	r3, [r6, #0]
	xLastTime = xTimeNow;
 800959a:	f8c8 5000 	str.w	r5, [r8]
}
 800959e:	b004      	add	sp, #16
 80095a0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 80095a4:	68db      	ldr	r3, [r3, #12]
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80095a6:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 80095a8:	f8d3 a000 	ldr.w	sl, [r3]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 80095ac:	1d21      	adds	r1, r4, #4
 80095ae:	4608      	mov	r0, r1
 80095b0:	9103      	str	r1, [sp, #12]
 80095b2:	f7fe fb06 	bl	8007bc2 <uxListRemove>
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 80095b6:	6a23      	ldr	r3, [r4, #32]
 80095b8:	4620      	mov	r0, r4
 80095ba:	4798      	blx	r3
		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 80095bc:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 80095c0:	9903      	ldr	r1, [sp, #12]
 80095c2:	f013 0f04 	tst.w	r3, #4
 80095c6:	d0de      	beq.n	8009586 <prvSampleTimeNow+0x1e>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 80095c8:	69a3      	ldr	r3, [r4, #24]
 80095ca:	4453      	add	r3, sl
			if( xReloadTime > xNextExpireTime )
 80095cc:	459a      	cmp	sl, r3
 80095ce:	d205      	bcs.n	80095dc <prvSampleTimeNow+0x74>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 80095d0:	6838      	ldr	r0, [r7, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 80095d2:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 80095d4:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 80095d6:	f7fe fadd 	bl	8007b94 <vListInsert>
 80095da:	e7d4      	b.n	8009586 <prvSampleTimeNow+0x1e>
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 80095dc:	2300      	movs	r3, #0
 80095de:	f8cd 9000 	str.w	r9, [sp]
 80095e2:	4652      	mov	r2, sl
 80095e4:	4619      	mov	r1, r3
 80095e6:	4620      	mov	r0, r4
 80095e8:	f7ff ff92 	bl	8009510 <xTimerGenericCommand>
				configASSERT( xResult );
 80095ec:	2800      	cmp	r0, #0
 80095ee:	d1ca      	bne.n	8009586 <prvSampleTimeNow+0x1e>
 80095f0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80095f4:	f383 8811 	msr	BASEPRI, r3
 80095f8:	f3bf 8f6f 	isb	sy
 80095fc:	f3bf 8f4f 	dsb	sy
 8009600:	e7fe      	b.n	8009600 <prvSampleTimeNow+0x98>
		*pxTimerListsWereSwitched = pdFALSE;
 8009602:	2300      	movs	r3, #0
 8009604:	e7c7      	b.n	8009596 <prvSampleTimeNow+0x2e>
 8009606:	bf00      	nop
 8009608:	20017320 	.word	0x20017320
 800960c:	20017324 	.word	0x20017324
 8009610:	200173f0 	.word	0x200173f0

08009614 <prvTimerTask>:
{
 8009614:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8009618:	4d6e      	ldr	r5, [pc, #440]	; (80097d4 <prvTimerTask+0x1c0>)
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800961a:	4e6f      	ldr	r6, [pc, #444]	; (80097d8 <prvTimerTask+0x1c4>)
{
 800961c:	b089      	sub	sp, #36	; 0x24
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800961e:	682b      	ldr	r3, [r5, #0]
 8009620:	f8d3 8000 	ldr.w	r8, [r3]
 8009624:	f1b8 0f00 	cmp.w	r8, #0
 8009628:	d035      	beq.n	8009696 <prvTimerTask+0x82>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800962a:	68db      	ldr	r3, [r3, #12]
 800962c:	f8d3 8000 	ldr.w	r8, [r3]
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8009630:	2400      	movs	r4, #0
	vTaskSuspendAll();
 8009632:	f7ff fbaf 	bl	8008d94 <vTaskSuspendAll>
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 8009636:	a804      	add	r0, sp, #16
 8009638:	f7ff ff96 	bl	8009568 <prvSampleTimeNow>
		if( xTimerListsWereSwitched == pdFALSE )
 800963c:	9b04      	ldr	r3, [sp, #16]
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800963e:	4681      	mov	r9, r0
		if( xTimerListsWereSwitched == pdFALSE )
 8009640:	2b00      	cmp	r3, #0
 8009642:	d169      	bne.n	8009718 <prvTimerTask+0x104>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 8009644:	2c00      	cmp	r4, #0
 8009646:	d14c      	bne.n	80096e2 <prvTimerTask+0xce>
 8009648:	4540      	cmp	r0, r8
 800964a:	d350      	bcc.n	80096ee <prvTimerTask+0xda>
				( void ) xTaskResumeAll();
 800964c:	f7ff fc46 	bl	8008edc <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009650:	682b      	ldr	r3, [r5, #0]
 8009652:	68db      	ldr	r3, [r3, #12]
 8009654:	68df      	ldr	r7, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8009656:	1d38      	adds	r0, r7, #4
 8009658:	f7fe fab3 	bl	8007bc2 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800965c:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 8009660:	0758      	lsls	r0, r3, #29
 8009662:	d51a      	bpl.n	800969a <prvTimerTask+0x86>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 8009664:	69b9      	ldr	r1, [r7, #24]
 8009666:	4643      	mov	r3, r8
 8009668:	464a      	mov	r2, r9
 800966a:	4441      	add	r1, r8
 800966c:	4638      	mov	r0, r7
 800966e:	f7ff feff 	bl	8009470 <prvInsertTimerInActiveList>
 8009672:	b1b0      	cbz	r0, 80096a2 <prvTimerTask+0x8e>
			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 8009674:	9400      	str	r4, [sp, #0]
 8009676:	4623      	mov	r3, r4
 8009678:	4642      	mov	r2, r8
 800967a:	4621      	mov	r1, r4
 800967c:	4638      	mov	r0, r7
 800967e:	f7ff ff47 	bl	8009510 <xTimerGenericCommand>
			configASSERT( xResult );
 8009682:	b970      	cbnz	r0, 80096a2 <prvTimerTask+0x8e>
 8009684:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009688:	f383 8811 	msr	BASEPRI, r3
 800968c:	f3bf 8f6f 	isb	sy
 8009690:	f3bf 8f4f 	dsb	sy
 8009694:	e7fe      	b.n	8009694 <prvTimerTask+0x80>
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8009696:	2401      	movs	r4, #1
 8009698:	e7cb      	b.n	8009632 <prvTimerTask+0x1e>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800969a:	f023 0301 	bic.w	r3, r3, #1
 800969e:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 80096a2:	6a3b      	ldr	r3, [r7, #32]
 80096a4:	4638      	mov	r0, r7
 80096a6:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 80096a8:	6830      	ldr	r0, [r6, #0]
 80096aa:	2200      	movs	r2, #0
 80096ac:	a904      	add	r1, sp, #16
 80096ae:	f7fe ff2f 	bl	8008510 <xQueueReceive>
 80096b2:	2800      	cmp	r0, #0
 80096b4:	d0b3      	beq.n	800961e <prvTimerTask+0xa>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 80096b6:	9b04      	ldr	r3, [sp, #16]
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 80096b8:	9806      	ldr	r0, [sp, #24]
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 80096ba:	2b00      	cmp	r3, #0
 80096bc:	db2f      	blt.n	800971e <prvTimerTask+0x10a>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 80096be:	9c06      	ldr	r4, [sp, #24]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 80096c0:	6963      	ldr	r3, [r4, #20]
 80096c2:	2b00      	cmp	r3, #0
 80096c4:	d132      	bne.n	800972c <prvTimerTask+0x118>
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 80096c6:	a803      	add	r0, sp, #12
 80096c8:	f7ff ff4e 	bl	8009568 <prvSampleTimeNow>
			switch( xMessage.xMessageID )
 80096cc:	9b04      	ldr	r3, [sp, #16]
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 80096ce:	4602      	mov	r2, r0
			switch( xMessage.xMessageID )
 80096d0:	2b09      	cmp	r3, #9
 80096d2:	d8e9      	bhi.n	80096a8 <prvTimerTask+0x94>
 80096d4:	e8df f003 	tbb	[pc, r3]
 80096d8:	572e2e2e 	.word	0x572e2e2e
 80096dc:	2e2e765e 	.word	0x2e2e765e
 80096e0:	5e57      	.short	0x5e57
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 80096e2:	4b3e      	ldr	r3, [pc, #248]	; (80097dc <prvTimerTask+0x1c8>)
 80096e4:	681b      	ldr	r3, [r3, #0]
 80096e6:	681c      	ldr	r4, [r3, #0]
 80096e8:	fab4 f484 	clz	r4, r4
 80096ec:	0964      	lsrs	r4, r4, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 80096ee:	6830      	ldr	r0, [r6, #0]
 80096f0:	4622      	mov	r2, r4
 80096f2:	eba8 0109 	sub.w	r1, r8, r9
 80096f6:	f7ff f8fa 	bl	80088ee <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 80096fa:	f7ff fbef 	bl	8008edc <xTaskResumeAll>
 80096fe:	2800      	cmp	r0, #0
 8009700:	d1d2      	bne.n	80096a8 <prvTimerTask+0x94>
					portYIELD_WITHIN_API();
 8009702:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009706:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800970a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800970e:	f3bf 8f4f 	dsb	sy
 8009712:	f3bf 8f6f 	isb	sy
 8009716:	e7c7      	b.n	80096a8 <prvTimerTask+0x94>
			( void ) xTaskResumeAll();
 8009718:	f7ff fbe0 	bl	8008edc <xTaskResumeAll>
}
 800971c:	e7c4      	b.n	80096a8 <prvTimerTask+0x94>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800971e:	9b05      	ldr	r3, [sp, #20]
 8009720:	9907      	ldr	r1, [sp, #28]
 8009722:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 8009724:	9b04      	ldr	r3, [sp, #16]
 8009726:	2b00      	cmp	r3, #0
 8009728:	dbbe      	blt.n	80096a8 <prvTimerTask+0x94>
 800972a:	e7c8      	b.n	80096be <prvTimerTask+0xaa>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800972c:	1d20      	adds	r0, r4, #4
 800972e:	f7fe fa48 	bl	8007bc2 <uxListRemove>
 8009732:	e7c8      	b.n	80096c6 <prvTimerTask+0xb2>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8009734:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 8009738:	69a1      	ldr	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800973a:	f043 0301 	orr.w	r3, r3, #1
 800973e:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 8009742:	9b05      	ldr	r3, [sp, #20]
 8009744:	4620      	mov	r0, r4
 8009746:	4419      	add	r1, r3
 8009748:	f7ff fe92 	bl	8009470 <prvInsertTimerInActiveList>
 800974c:	2800      	cmp	r0, #0
 800974e:	d0ab      	beq.n	80096a8 <prvTimerTask+0x94>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8009750:	6a23      	ldr	r3, [r4, #32]
 8009752:	4620      	mov	r0, r4
 8009754:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8009756:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800975a:	0759      	lsls	r1, r3, #29
 800975c:	d5a4      	bpl.n	80096a8 <prvTimerTask+0x94>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 800975e:	69a2      	ldr	r2, [r4, #24]
 8009760:	9905      	ldr	r1, [sp, #20]
 8009762:	2300      	movs	r3, #0
 8009764:	440a      	add	r2, r1
 8009766:	9300      	str	r3, [sp, #0]
 8009768:	4619      	mov	r1, r3
 800976a:	4620      	mov	r0, r4
 800976c:	f7ff fed0 	bl	8009510 <xTimerGenericCommand>
							configASSERT( xResult );
 8009770:	2800      	cmp	r0, #0
 8009772:	d199      	bne.n	80096a8 <prvTimerTask+0x94>
 8009774:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009778:	f383 8811 	msr	BASEPRI, r3
 800977c:	f3bf 8f6f 	isb	sy
 8009780:	f3bf 8f4f 	dsb	sy
 8009784:	e7fe      	b.n	8009784 <prvTimerTask+0x170>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8009786:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800978a:	f023 0301 	bic.w	r3, r3, #1
 800978e:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
 8009792:	e789      	b.n	80096a8 <prvTimerTask+0x94>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8009794:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8009798:	f043 0301 	orr.w	r3, r3, #1
 800979c:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 80097a0:	9905      	ldr	r1, [sp, #20]
 80097a2:	61a1      	str	r1, [r4, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 80097a4:	b941      	cbnz	r1, 80097b8 <prvTimerTask+0x1a4>
 80097a6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80097aa:	f383 8811 	msr	BASEPRI, r3
 80097ae:	f3bf 8f6f 	isb	sy
 80097b2:	f3bf 8f4f 	dsb	sy
 80097b6:	e7fe      	b.n	80097b6 <prvTimerTask+0x1a2>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 80097b8:	4603      	mov	r3, r0
 80097ba:	4401      	add	r1, r0
 80097bc:	4620      	mov	r0, r4
 80097be:	f7ff fe57 	bl	8009470 <prvInsertTimerInActiveList>
					break;
 80097c2:	e771      	b.n	80096a8 <prvTimerTask+0x94>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 80097c4:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 80097c8:	079a      	lsls	r2, r3, #30
 80097ca:	d4de      	bmi.n	800978a <prvTimerTask+0x176>
							vPortFree( pxTimer );
 80097cc:	4620      	mov	r0, r4
 80097ce:	f7fe f98f 	bl	8007af0 <vPortFree>
 80097d2:	e769      	b.n	80096a8 <prvTimerTask+0x94>
 80097d4:	20017320 	.word	0x20017320
 80097d8:	20017444 	.word	0x20017444
 80097dc:	20017324 	.word	0x20017324

080097e0 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 80097e0:	8880      	ldrh	r0, [r0, #4]
 80097e2:	4770      	bx	lr

080097e4 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 80097e4:	b570      	push	{r4, r5, r6, lr}
 80097e6:	6803      	ldr	r3, [r0, #0]
 80097e8:	4605      	mov	r5, r0
 80097ea:	460c      	mov	r4, r1
 80097ec:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80097ee:	2100      	movs	r1, #0
 80097f0:	4798      	blx	r3
 80097f2:	682b      	ldr	r3, [r5, #0]
 80097f4:	4606      	mov	r6, r0
 80097f6:	6a1b      	ldr	r3, [r3, #32]
 80097f8:	4628      	mov	r0, r5
 80097fa:	4798      	blx	r3
 80097fc:	1ba4      	subs	r4, r4, r6
 80097fe:	b2a4      	uxth	r4, r4
 8009800:	fbb4 f0f0 	udiv	r0, r4, r0
 8009804:	bd70      	pop	{r4, r5, r6, pc}

08009806 <_ZN8touchgfx17AbstractPartition5clearEv>:
 8009806:	2300      	movs	r3, #0
 8009808:	8083      	strh	r3, [r0, #4]
 800980a:	4770      	bx	lr

0800980c <_ZN8touchgfx17AbstractPartition8allocateEt>:
 800980c:	b510      	push	{r4, lr}
 800980e:	6803      	ldr	r3, [r0, #0]
 8009810:	8881      	ldrh	r1, [r0, #4]
 8009812:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009814:	4604      	mov	r4, r0
 8009816:	4798      	blx	r3
 8009818:	88a3      	ldrh	r3, [r4, #4]
 800981a:	3301      	adds	r3, #1
 800981c:	80a3      	strh	r3, [r4, #4]
 800981e:	bd10      	pop	{r4, pc}

08009820 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 8009820:	6803      	ldr	r3, [r0, #0]
 8009822:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009824:	4718      	bx	r3

08009826 <_ZN8touchgfx17AbstractPartitionD1Ev>:
 8009826:	4770      	bx	lr

08009828 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 8009828:	4a02      	ldr	r2, [pc, #8]	; (8009834 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800982a:	6002      	str	r2, [r0, #0]
 800982c:	2200      	movs	r2, #0
 800982e:	8082      	strh	r2, [r0, #4]
 8009830:	4770      	bx	lr
 8009832:	bf00      	nop
 8009834:	080221a8 	.word	0x080221a8

08009838 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 8009838:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800983a:	2000      	movs	r0, #0
 800983c:	b12b      	cbz	r3, 800984a <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800983e:	b920      	cbnz	r0, 800984a <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8009840:	1a5a      	subs	r2, r3, r1
 8009842:	4250      	negs	r0, r2
 8009844:	4150      	adcs	r0, r2
 8009846:	699b      	ldr	r3, [r3, #24]
 8009848:	e7f8      	b.n	800983c <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 800984a:	4770      	bx	lr

0800984c <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 800984c:	2300      	movs	r3, #0
 800984e:	6148      	str	r0, [r1, #20]
 8009850:	618b      	str	r3, [r1, #24]
 8009852:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8009854:	b913      	cbnz	r3, 800985c <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 8009856:	6281      	str	r1, [r0, #40]	; 0x28
 8009858:	4770      	bx	lr
 800985a:	4613      	mov	r3, r2
 800985c:	699a      	ldr	r2, [r3, #24]
 800985e:	2a00      	cmp	r2, #0
 8009860:	d1fb      	bne.n	800985a <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 8009862:	6199      	str	r1, [r3, #24]
 8009864:	4770      	bx	lr

08009866 <_ZN8touchgfx9Container9removeAllEv>:
 8009866:	2200      	movs	r2, #0
 8009868:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800986a:	b123      	cbz	r3, 8009876 <_ZN8touchgfx9Container9removeAllEv+0x10>
 800986c:	6999      	ldr	r1, [r3, #24]
 800986e:	6281      	str	r1, [r0, #40]	; 0x28
 8009870:	e9c3 2205 	strd	r2, r2, [r3, #20]
 8009874:	e7f8      	b.n	8009868 <_ZN8touchgfx9Container9removeAllEv+0x2>
 8009876:	4770      	bx	lr

08009878 <_ZN8touchgfx9Container6unlinkEv>:
 8009878:	2300      	movs	r3, #0
 800987a:	6283      	str	r3, [r0, #40]	; 0x28
 800987c:	4770      	bx	lr

0800987e <_ZNK8touchgfx9Container12getSolidRectEv>:
 800987e:	2200      	movs	r2, #0
 8009880:	8002      	strh	r2, [r0, #0]
 8009882:	8042      	strh	r2, [r0, #2]
 8009884:	8082      	strh	r2, [r0, #4]
 8009886:	80c2      	strh	r2, [r0, #6]
 8009888:	4770      	bx	lr

0800988a <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 800988a:	b570      	push	{r4, r5, r6, lr}
 800988c:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800988e:	460d      	mov	r5, r1
 8009890:	4616      	mov	r6, r2
 8009892:	b13c      	cbz	r4, 80098a4 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 8009894:	6823      	ldr	r3, [r4, #0]
 8009896:	4620      	mov	r0, r4
 8009898:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800989a:	4632      	mov	r2, r6
 800989c:	4629      	mov	r1, r5
 800989e:	4798      	blx	r3
 80098a0:	69a4      	ldr	r4, [r4, #24]
 80098a2:	e7f6      	b.n	8009892 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 80098a4:	bd70      	pop	{r4, r5, r6, pc}

080098a6 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 80098a6:	b538      	push	{r3, r4, r5, lr}
 80098a8:	6a84      	ldr	r4, [r0, #40]	; 0x28
 80098aa:	460d      	mov	r5, r1
 80098ac:	b134      	cbz	r4, 80098bc <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 80098ae:	682b      	ldr	r3, [r5, #0]
 80098b0:	4621      	mov	r1, r4
 80098b2:	689b      	ldr	r3, [r3, #8]
 80098b4:	4628      	mov	r0, r5
 80098b6:	4798      	blx	r3
 80098b8:	69a4      	ldr	r4, [r4, #24]
 80098ba:	e7f7      	b.n	80098ac <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 80098bc:	bd38      	pop	{r3, r4, r5, pc}

080098be <_ZNK8touchgfx9Container17invalidateContentEv>:
 80098be:	b510      	push	{r4, lr}
 80098c0:	6a84      	ldr	r4, [r0, #40]	; 0x28
 80098c2:	b12c      	cbz	r4, 80098d0 <_ZNK8touchgfx9Container17invalidateContentEv+0x12>
 80098c4:	6823      	ldr	r3, [r4, #0]
 80098c6:	4620      	mov	r0, r4
 80098c8:	699b      	ldr	r3, [r3, #24]
 80098ca:	4798      	blx	r3
 80098cc:	69a4      	ldr	r4, [r4, #24]
 80098ce:	e7f8      	b.n	80098c2 <_ZNK8touchgfx9Container17invalidateContentEv+0x4>
 80098d0:	bd10      	pop	{r4, pc}

080098d2 <_ZN8touchgfx9ContainerD1Ev>:
 80098d2:	4770      	bx	lr

080098d4 <_ZN8touchgfx9ContainerD0Ev>:
 80098d4:	b510      	push	{r4, lr}
 80098d6:	212c      	movs	r1, #44	; 0x2c
 80098d8:	4604      	mov	r4, r0
 80098da:	f015 fdec 	bl	801f4b6 <_ZdlPvj>
 80098de:	4620      	mov	r0, r4
 80098e0:	bd10      	pop	{r4, pc}

080098e2 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 80098e2:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80098e4:	b19b      	cbz	r3, 800990e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 80098e6:	428b      	cmp	r3, r1
 80098e8:	d109      	bne.n	80098fe <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 80098ea:	699a      	ldr	r2, [r3, #24]
 80098ec:	2100      	movs	r1, #0
 80098ee:	6159      	str	r1, [r3, #20]
 80098f0:	6282      	str	r2, [r0, #40]	; 0x28
 80098f2:	b902      	cbnz	r2, 80098f6 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 80098f4:	4770      	bx	lr
 80098f6:	6199      	str	r1, [r3, #24]
 80098f8:	4770      	bx	lr
 80098fa:	4613      	mov	r3, r2
 80098fc:	b13a      	cbz	r2, 800990e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 80098fe:	699a      	ldr	r2, [r3, #24]
 8009900:	428a      	cmp	r2, r1
 8009902:	d1fa      	bne.n	80098fa <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 8009904:	698a      	ldr	r2, [r1, #24]
 8009906:	619a      	str	r2, [r3, #24]
 8009908:	2300      	movs	r3, #0
 800990a:	e9c1 3305 	strd	r3, r3, [r1, #20]
 800990e:	4770      	bx	lr

08009910 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 8009910:	b410      	push	{r4}
 8009912:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8009914:	4604      	mov	r4, r0
 8009916:	b92b      	cbnz	r3, 8009924 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 8009918:	6803      	ldr	r3, [r0, #0]
 800991a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800991e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8009920:	4611      	mov	r1, r2
 8009922:	4718      	bx	r3
 8009924:	b941      	cbnz	r1, 8009938 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 8009926:	6193      	str	r3, [r2, #24]
 8009928:	6282      	str	r2, [r0, #40]	; 0x28
 800992a:	6154      	str	r4, [r2, #20]
 800992c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8009930:	4770      	bx	lr
 8009932:	4603      	mov	r3, r0
 8009934:	2800      	cmp	r0, #0
 8009936:	d0f9      	beq.n	800992c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 8009938:	4299      	cmp	r1, r3
 800993a:	6998      	ldr	r0, [r3, #24]
 800993c:	d1f9      	bne.n	8009932 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 800993e:	6190      	str	r0, [r2, #24]
 8009940:	618a      	str	r2, [r1, #24]
 8009942:	e7f2      	b.n	800992a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

08009944 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 8009944:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009948:	461f      	mov	r7, r3
 800994a:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 800994e:	460d      	mov	r5, r1
 8009950:	4616      	mov	r6, r2
 8009952:	b103      	cbz	r3, 8009956 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 8009954:	6038      	str	r0, [r7, #0]
 8009956:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8009958:	b314      	cbz	r4, 80099a0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800995a:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800995e:	b1eb      	cbz	r3, 800999c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8009960:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8009964:	428d      	cmp	r5, r1
 8009966:	db19      	blt.n	800999c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8009968:	8923      	ldrh	r3, [r4, #8]
 800996a:	b289      	uxth	r1, r1
 800996c:	440b      	add	r3, r1
 800996e:	b21b      	sxth	r3, r3
 8009970:	429d      	cmp	r5, r3
 8009972:	da13      	bge.n	800999c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8009974:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8009978:	4296      	cmp	r6, r2
 800997a:	db0f      	blt.n	800999c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800997c:	8963      	ldrh	r3, [r4, #10]
 800997e:	b292      	uxth	r2, r2
 8009980:	4413      	add	r3, r2
 8009982:	b21b      	sxth	r3, r3
 8009984:	429e      	cmp	r6, r3
 8009986:	da09      	bge.n	800999c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8009988:	6823      	ldr	r3, [r4, #0]
 800998a:	1ab2      	subs	r2, r6, r2
 800998c:	1a69      	subs	r1, r5, r1
 800998e:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
 8009992:	b212      	sxth	r2, r2
 8009994:	463b      	mov	r3, r7
 8009996:	b209      	sxth	r1, r1
 8009998:	4620      	mov	r0, r4
 800999a:	47c0      	blx	r8
 800999c:	69a4      	ldr	r4, [r4, #24]
 800999e:	e7db      	b.n	8009958 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 80099a0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080099a4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 80099a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80099a8:	4c6e      	ldr	r4, [pc, #440]	; (8009b64 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 80099aa:	b0a1      	sub	sp, #132	; 0x84
 80099ac:	6824      	ldr	r4, [r4, #0]
 80099ae:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 80099b0:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 80099b4:	9303      	str	r3, [sp, #12]
 80099b6:	2400      	movs	r4, #0
 80099b8:	802c      	strh	r4, [r5, #0]
 80099ba:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 80099bc:	802c      	strh	r4, [r5, #0]
 80099be:	601c      	str	r4, [r3, #0]
 80099c0:	4606      	mov	r6, r0
 80099c2:	e9cd 1201 	strd	r1, r2, [sp, #4]
 80099c6:	f7ff ffbd 	bl	8009944 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 80099ca:	f1b9 0f03 	cmp.w	r9, #3
 80099ce:	f340 80c2 	ble.w	8009b56 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 80099d2:	4631      	mov	r1, r6
 80099d4:	a80c      	add	r0, sp, #48	; 0x30
 80099d6:	f007 fa65 	bl	8010ea4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80099da:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 80099de:	9306      	str	r3, [sp, #24]
 80099e0:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 80099e4:	9307      	str	r3, [sp, #28]
 80099e6:	9b03      	ldr	r3, [sp, #12]
 80099e8:	f8d3 a000 	ldr.w	sl, [r3]
 80099ec:	f1ba 0f00 	cmp.w	sl, #0
 80099f0:	f000 80b4 	beq.w	8009b5c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 80099f4:	4651      	mov	r1, sl
 80099f6:	a810      	add	r0, sp, #64	; 0x40
 80099f8:	f007 fa54 	bl	8010ea4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80099fc:	9b01      	ldr	r3, [sp, #4]
 80099fe:	9a06      	ldr	r2, [sp, #24]
 8009a00:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 8009a04:	189d      	adds	r5, r3, r2
 8009a06:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 8009a0a:	9a07      	ldr	r2, [sp, #28]
 8009a0c:	2002      	movs	r0, #2
 8009a0e:	fb91 f1f0 	sdiv	r1, r1, r0
 8009a12:	4419      	add	r1, r3
 8009a14:	1a6d      	subs	r5, r5, r1
 8009a16:	9b02      	ldr	r3, [sp, #8]
 8009a18:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 8009a1c:	4413      	add	r3, r2
 8009a1e:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 8009a22:	fb92 f2f0 	sdiv	r2, r2, r0
 8009a26:	440a      	add	r2, r1
 8009a28:	1a9b      	subs	r3, r3, r2
 8009a2a:	435b      	muls	r3, r3
 8009a2c:	fb05 3505 	mla	r5, r5, r5, r3
 8009a30:	4f4d      	ldr	r7, [pc, #308]	; (8009b68 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 8009a32:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8009a34:	ac10      	add	r4, sp, #64	; 0x40
 8009a36:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8009a38:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8009a3a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8009a3c:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8009a3e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8009a40:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 8009a44:	f1b9 0f0c 	cmp.w	r9, #12
 8009a48:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8009a4c:	f04f 0303 	mov.w	r3, #3
 8009a50:	bfc8      	it	gt
 8009a52:	4698      	movgt	r8, r3
 8009a54:	f8cd 9000 	str.w	r9, [sp]
 8009a58:	f04f 0400 	mov.w	r4, #0
 8009a5c:	bfdc      	itt	le
 8009a5e:	f109 32ff 	addle.w	r2, r9, #4294967295
 8009a62:	fb92 f8f3 	sdivle	r8, r2, r3
 8009a66:	1c63      	adds	r3, r4, #1
 8009a68:	aa10      	add	r2, sp, #64	; 0x40
 8009a6a:	f004 0401 	and.w	r4, r4, #1
 8009a6e:	9308      	str	r3, [sp, #32]
 8009a70:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 8009a74:	9b00      	ldr	r3, [sp, #0]
 8009a76:	fb93 f3f8 	sdiv	r3, r3, r8
 8009a7a:	b29b      	uxth	r3, r3
 8009a7c:	3404      	adds	r4, #4
 8009a7e:	f04f 0b00 	mov.w	fp, #0
 8009a82:	9304      	str	r3, [sp, #16]
 8009a84:	9a04      	ldr	r2, [sp, #16]
 8009a86:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8009a8a:	fb13 f302 	smulbb	r3, r3, r2
 8009a8e:	9a01      	ldr	r2, [sp, #4]
 8009a90:	b29b      	uxth	r3, r3
 8009a92:	1899      	adds	r1, r3, r2
 8009a94:	9305      	str	r3, [sp, #20]
 8009a96:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 8009a9a:	b209      	sxth	r1, r1
 8009a9c:	4299      	cmp	r1, r3
 8009a9e:	db4d      	blt.n	8009b3c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8009aa0:	8932      	ldrh	r2, [r6, #8]
 8009aa2:	4413      	add	r3, r2
 8009aa4:	b21b      	sxth	r3, r3
 8009aa6:	4299      	cmp	r1, r3
 8009aa8:	da48      	bge.n	8009b3c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8009aaa:	9b04      	ldr	r3, [sp, #16]
 8009aac:	6827      	ldr	r7, [r4, #0]
 8009aae:	fb17 f703 	smulbb	r7, r7, r3
 8009ab2:	9b02      	ldr	r3, [sp, #8]
 8009ab4:	b2bf      	uxth	r7, r7
 8009ab6:	18fa      	adds	r2, r7, r3
 8009ab8:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8009abc:	b212      	sxth	r2, r2
 8009abe:	429a      	cmp	r2, r3
 8009ac0:	db3c      	blt.n	8009b3c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8009ac2:	8970      	ldrh	r0, [r6, #10]
 8009ac4:	4403      	add	r3, r0
 8009ac6:	b21b      	sxth	r3, r3
 8009ac8:	429a      	cmp	r2, r3
 8009aca:	da37      	bge.n	8009b3c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8009acc:	2300      	movs	r3, #0
 8009ace:	930b      	str	r3, [sp, #44]	; 0x2c
 8009ad0:	4630      	mov	r0, r6
 8009ad2:	ab0b      	add	r3, sp, #44	; 0x2c
 8009ad4:	f7ff ff36 	bl	8009944 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 8009ad8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8009ada:	b37a      	cbz	r2, 8009b3c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8009adc:	4552      	cmp	r2, sl
 8009ade:	d02d      	beq.n	8009b3c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8009ae0:	4611      	mov	r1, r2
 8009ae2:	a80e      	add	r0, sp, #56	; 0x38
 8009ae4:	9209      	str	r2, [sp, #36]	; 0x24
 8009ae6:	f007 f9dd 	bl	8010ea4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8009aea:	9a06      	ldr	r2, [sp, #24]
 8009aec:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 8009af0:	9b01      	ldr	r3, [sp, #4]
 8009af2:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 8009af6:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 8009afa:	4413      	add	r3, r2
 8009afc:	f04f 0e02 	mov.w	lr, #2
 8009b00:	fb91 f1fe 	sdiv	r1, r1, lr
 8009b04:	4401      	add	r1, r0
 8009b06:	1a58      	subs	r0, r3, r1
 8009b08:	9a07      	ldr	r2, [sp, #28]
 8009b0a:	9b02      	ldr	r3, [sp, #8]
 8009b0c:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 8009b10:	fb9c fcfe 	sdiv	ip, ip, lr
 8009b14:	4413      	add	r3, r2
 8009b16:	448c      	add	ip, r1
 8009b18:	eba3 030c 	sub.w	r3, r3, ip
 8009b1c:	435b      	muls	r3, r3
 8009b1e:	fb00 3300 	mla	r3, r0, r0, r3
 8009b22:	42ab      	cmp	r3, r5
 8009b24:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8009b26:	d208      	bcs.n	8009b3a <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 8009b28:	9803      	ldr	r0, [sp, #12]
 8009b2a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8009b2c:	6001      	str	r1, [r0, #0]
 8009b2e:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8009b30:	9805      	ldr	r0, [sp, #20]
 8009b32:	8008      	strh	r0, [r1, #0]
 8009b34:	992b      	ldr	r1, [sp, #172]	; 0xac
 8009b36:	461d      	mov	r5, r3
 8009b38:	800f      	strh	r7, [r1, #0]
 8009b3a:	4692      	mov	sl, r2
 8009b3c:	f10b 0b01 	add.w	fp, fp, #1
 8009b40:	f1bb 0f04 	cmp.w	fp, #4
 8009b44:	f104 0408 	add.w	r4, r4, #8
 8009b48:	d19c      	bne.n	8009a84 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 8009b4a:	9b00      	ldr	r3, [sp, #0]
 8009b4c:	9c08      	ldr	r4, [sp, #32]
 8009b4e:	444b      	add	r3, r9
 8009b50:	4544      	cmp	r4, r8
 8009b52:	9300      	str	r3, [sp, #0]
 8009b54:	d187      	bne.n	8009a66 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 8009b56:	b021      	add	sp, #132	; 0x84
 8009b58:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009b5c:	f04f 35ff 	mov.w	r5, #4294967295
 8009b60:	e766      	b.n	8009a30 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 8009b62:	bf00      	nop
 8009b64:	20017458 	.word	0x20017458
 8009b68:	08020764 	.word	0x08020764

08009b6c <_ZN8touchgfx4RectaNERKS0_>:
 8009b6c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009b70:	f9b1 7000 	ldrsh.w	r7, [r1]
 8009b74:	888c      	ldrh	r4, [r1, #4]
 8009b76:	f9b0 9000 	ldrsh.w	r9, [r0]
 8009b7a:	443c      	add	r4, r7
 8009b7c:	b2a4      	uxth	r4, r4
 8009b7e:	fa0f f884 	sxth.w	r8, r4
 8009b82:	45c1      	cmp	r9, r8
 8009b84:	da2f      	bge.n	8009be6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8009b86:	8882      	ldrh	r2, [r0, #4]
 8009b88:	444a      	add	r2, r9
 8009b8a:	b292      	uxth	r2, r2
 8009b8c:	fa0f fe82 	sxth.w	lr, r2
 8009b90:	4577      	cmp	r7, lr
 8009b92:	da28      	bge.n	8009be6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8009b94:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 8009b98:	88cb      	ldrh	r3, [r1, #6]
 8009b9a:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 8009b9e:	442b      	add	r3, r5
 8009ba0:	b21b      	sxth	r3, r3
 8009ba2:	429e      	cmp	r6, r3
 8009ba4:	da1f      	bge.n	8009be6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8009ba6:	88c3      	ldrh	r3, [r0, #6]
 8009ba8:	4433      	add	r3, r6
 8009baa:	b29b      	uxth	r3, r3
 8009bac:	fa0f fc83 	sxth.w	ip, r3
 8009bb0:	4565      	cmp	r5, ip
 8009bb2:	da18      	bge.n	8009be6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8009bb4:	454f      	cmp	r7, r9
 8009bb6:	bfb8      	it	lt
 8009bb8:	464f      	movlt	r7, r9
 8009bba:	42b5      	cmp	r5, r6
 8009bbc:	bfb8      	it	lt
 8009bbe:	4635      	movlt	r5, r6
 8009bc0:	45f0      	cmp	r8, lr
 8009bc2:	bfd8      	it	le
 8009bc4:	4622      	movle	r2, r4
 8009bc6:	1bd2      	subs	r2, r2, r7
 8009bc8:	8082      	strh	r2, [r0, #4]
 8009bca:	884a      	ldrh	r2, [r1, #2]
 8009bcc:	88c9      	ldrh	r1, [r1, #6]
 8009bce:	8007      	strh	r7, [r0, #0]
 8009bd0:	440a      	add	r2, r1
 8009bd2:	b292      	uxth	r2, r2
 8009bd4:	b211      	sxth	r1, r2
 8009bd6:	458c      	cmp	ip, r1
 8009bd8:	bfa8      	it	ge
 8009bda:	4613      	movge	r3, r2
 8009bdc:	1b5b      	subs	r3, r3, r5
 8009bde:	80c3      	strh	r3, [r0, #6]
 8009be0:	8045      	strh	r5, [r0, #2]
 8009be2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8009be6:	2300      	movs	r3, #0
 8009be8:	8003      	strh	r3, [r0, #0]
 8009bea:	8043      	strh	r3, [r0, #2]
 8009bec:	8083      	strh	r3, [r0, #4]
 8009bee:	80c3      	strh	r3, [r0, #6]
 8009bf0:	e7f7      	b.n	8009be2 <_ZN8touchgfx4RectaNERKS0_+0x76>

08009bf2 <_ZNK8touchgfx4Rect7isEmptyEv>:
 8009bf2:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8009bf6:	2b00      	cmp	r3, #0
 8009bf8:	dd06      	ble.n	8009c08 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 8009bfa:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 8009bfe:	2800      	cmp	r0, #0
 8009c00:	bfcc      	ite	gt
 8009c02:	2000      	movgt	r0, #0
 8009c04:	2001      	movle	r0, #1
 8009c06:	4770      	bx	lr
 8009c08:	2001      	movs	r0, #1
 8009c0a:	4770      	bx	lr

08009c0c <_ZNK8touchgfx9Container16getContainedAreaEv>:
 8009c0c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009c10:	2300      	movs	r3, #0
 8009c12:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8009c14:	8003      	strh	r3, [r0, #0]
 8009c16:	4604      	mov	r4, r0
 8009c18:	8043      	strh	r3, [r0, #2]
 8009c1a:	8083      	strh	r3, [r0, #4]
 8009c1c:	80c3      	strh	r3, [r0, #6]
 8009c1e:	2d00      	cmp	r5, #0
 8009c20:	d040      	beq.n	8009ca4 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 8009c22:	1d28      	adds	r0, r5, #4
 8009c24:	f7ff ffe5 	bl	8009bf2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8009c28:	b988      	cbnz	r0, 8009c4e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8009c2a:	4620      	mov	r0, r4
 8009c2c:	f7ff ffe1 	bl	8009bf2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8009c30:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 8009c34:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8009c38:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 8009c3c:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 8009c40:	b138      	cbz	r0, 8009c52 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 8009c42:	8022      	strh	r2, [r4, #0]
 8009c44:	8063      	strh	r3, [r4, #2]
 8009c46:	f8a4 e004 	strh.w	lr, [r4, #4]
 8009c4a:	f8a4 c006 	strh.w	ip, [r4, #6]
 8009c4e:	69ad      	ldr	r5, [r5, #24]
 8009c50:	e7e5      	b.n	8009c1e <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 8009c52:	f9b4 0000 	ldrsh.w	r0, [r4]
 8009c56:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8009c5a:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 8009c5e:	4290      	cmp	r0, r2
 8009c60:	4607      	mov	r7, r0
 8009c62:	bfa8      	it	ge
 8009c64:	4617      	movge	r7, r2
 8009c66:	4472      	add	r2, lr
 8009c68:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 8009c6c:	8027      	strh	r7, [r4, #0]
 8009c6e:	4299      	cmp	r1, r3
 8009c70:	460e      	mov	r6, r1
 8009c72:	4440      	add	r0, r8
 8009c74:	bfa8      	it	ge
 8009c76:	461e      	movge	r6, r3
 8009c78:	4471      	add	r1, lr
 8009c7a:	4463      	add	r3, ip
 8009c7c:	b200      	sxth	r0, r0
 8009c7e:	b212      	sxth	r2, r2
 8009c80:	b209      	sxth	r1, r1
 8009c82:	b21b      	sxth	r3, r3
 8009c84:	4290      	cmp	r0, r2
 8009c86:	bfac      	ite	ge
 8009c88:	ebc7 0200 	rsbge	r2, r7, r0
 8009c8c:	ebc7 0202 	rsblt	r2, r7, r2
 8009c90:	4299      	cmp	r1, r3
 8009c92:	bfac      	ite	ge
 8009c94:	ebc6 0301 	rsbge	r3, r6, r1
 8009c98:	ebc6 0303 	rsblt	r3, r6, r3
 8009c9c:	8066      	strh	r6, [r4, #2]
 8009c9e:	80a2      	strh	r2, [r4, #4]
 8009ca0:	80e3      	strh	r3, [r4, #6]
 8009ca2:	e7d4      	b.n	8009c4e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8009ca4:	4620      	mov	r0, r4
 8009ca6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08009caa <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 8009caa:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8009cae:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 8009cb2:	b383      	cbz	r3, 8009d16 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8009cb4:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8009cb6:	b374      	cbz	r4, 8009d16 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8009cb8:	f9b1 5000 	ldrsh.w	r5, [r1]
 8009cbc:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 8009cc0:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 8009cc4:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 8009cc8:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8009ccc:	b303      	cbz	r3, 8009d10 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8009cce:	4668      	mov	r0, sp
 8009cd0:	1d21      	adds	r1, r4, #4
 8009cd2:	f8ad 5000 	strh.w	r5, [sp]
 8009cd6:	f8ad 6002 	strh.w	r6, [sp, #2]
 8009cda:	f8ad 7004 	strh.w	r7, [sp, #4]
 8009cde:	f8ad 8006 	strh.w	r8, [sp, #6]
 8009ce2:	f7ff ff43 	bl	8009b6c <_ZN8touchgfx4RectaNERKS0_>
 8009ce6:	4668      	mov	r0, sp
 8009ce8:	f7ff ff83 	bl	8009bf2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8009cec:	b980      	cbnz	r0, 8009d10 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8009cee:	f8bd 3000 	ldrh.w	r3, [sp]
 8009cf2:	88a2      	ldrh	r2, [r4, #4]
 8009cf4:	1a9b      	subs	r3, r3, r2
 8009cf6:	f8ad 3000 	strh.w	r3, [sp]
 8009cfa:	88e2      	ldrh	r2, [r4, #6]
 8009cfc:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8009d00:	1a9b      	subs	r3, r3, r2
 8009d02:	f8ad 3002 	strh.w	r3, [sp, #2]
 8009d06:	6823      	ldr	r3, [r4, #0]
 8009d08:	4669      	mov	r1, sp
 8009d0a:	689b      	ldr	r3, [r3, #8]
 8009d0c:	4620      	mov	r0, r4
 8009d0e:	4798      	blx	r3
 8009d10:	69a4      	ldr	r4, [r4, #24]
 8009d12:	2c00      	cmp	r4, #0
 8009d14:	d1d8      	bne.n	8009cc8 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 8009d16:	b002      	add	sp, #8
 8009d18:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08009d1c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 8009d1c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8009d1e:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 8009d22:	460d      	mov	r5, r1
 8009d24:	4616      	mov	r6, r2
 8009d26:	b323      	cbz	r3, 8009d72 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8009d28:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8009d2a:	b314      	cbz	r4, 8009d72 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8009d2c:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8009d30:	b1eb      	cbz	r3, 8009d6e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8009d32:	6828      	ldr	r0, [r5, #0]
 8009d34:	6869      	ldr	r1, [r5, #4]
 8009d36:	466b      	mov	r3, sp
 8009d38:	c303      	stmia	r3!, {r0, r1}
 8009d3a:	4668      	mov	r0, sp
 8009d3c:	1d21      	adds	r1, r4, #4
 8009d3e:	f7ff ff15 	bl	8009b6c <_ZN8touchgfx4RectaNERKS0_>
 8009d42:	4668      	mov	r0, sp
 8009d44:	f7ff ff55 	bl	8009bf2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8009d48:	b988      	cbnz	r0, 8009d6e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8009d4a:	f8bd 3000 	ldrh.w	r3, [sp]
 8009d4e:	88a2      	ldrh	r2, [r4, #4]
 8009d50:	1a9b      	subs	r3, r3, r2
 8009d52:	f8ad 3000 	strh.w	r3, [sp]
 8009d56:	88e2      	ldrh	r2, [r4, #6]
 8009d58:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8009d5c:	1a9b      	subs	r3, r3, r2
 8009d5e:	f8ad 3002 	strh.w	r3, [sp, #2]
 8009d62:	6823      	ldr	r3, [r4, #0]
 8009d64:	4632      	mov	r2, r6
 8009d66:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8009d68:	4669      	mov	r1, sp
 8009d6a:	4620      	mov	r0, r4
 8009d6c:	4798      	blx	r3
 8009d6e:	69a4      	ldr	r4, [r4, #24]
 8009d70:	e7db      	b.n	8009d2a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 8009d72:	b002      	add	sp, #8
 8009d74:	bd70      	pop	{r4, r5, r6, pc}

08009d76 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 8009d76:	b513      	push	{r0, r1, r4, lr}
 8009d78:	6803      	ldr	r3, [r0, #0]
 8009d7a:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
 8009d7e:	2300      	movs	r3, #0
 8009d80:	e9cd 3300 	strd	r3, r3, [sp]
 8009d84:	466b      	mov	r3, sp
 8009d86:	47a0      	blx	r4
 8009d88:	b002      	add	sp, #8
 8009d8a:	bd10      	pop	{r4, pc}

08009d8c <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 8009d8c:	2301      	movs	r3, #1
 8009d8e:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 8009d92:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 8009d96:	4770      	bx	lr

08009d98 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 8009d98:	2301      	movs	r3, #1
 8009d9a:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 8009d9e:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 8009da2:	4770      	bx	lr

08009da4 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 8009da4:	6843      	ldr	r3, [r0, #4]
 8009da6:	2201      	movs	r2, #1
 8009da8:	725a      	strb	r2, [r3, #9]
 8009daa:	6840      	ldr	r0, [r0, #4]
 8009dac:	6803      	ldr	r3, [r0, #0]
 8009dae:	691b      	ldr	r3, [r3, #16]
 8009db0:	4718      	bx	r3

08009db2 <_ZN8touchgfx3HAL8flushDMAEv>:
 8009db2:	6840      	ldr	r0, [r0, #4]
 8009db4:	6803      	ldr	r3, [r0, #0]
 8009db6:	689b      	ldr	r3, [r3, #8]
 8009db8:	4718      	bx	r3

08009dba <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 8009dba:	b530      	push	{r4, r5, lr}
 8009dbc:	b08b      	sub	sp, #44	; 0x2c
 8009dbe:	6804      	ldr	r4, [r0, #0]
 8009dc0:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 8009dc4:	9509      	str	r5, [sp, #36]	; 0x24
 8009dc6:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 8009dca:	9508      	str	r5, [sp, #32]
 8009dcc:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8009dd0:	9507      	str	r5, [sp, #28]
 8009dd2:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 8009dd6:	9506      	str	r5, [sp, #24]
 8009dd8:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 8009ddc:	9505      	str	r5, [sp, #20]
 8009dde:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8009de2:	9504      	str	r5, [sp, #16]
 8009de4:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 8009de8:	9503      	str	r5, [sp, #12]
 8009dea:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 8009dee:	9502      	str	r5, [sp, #8]
 8009df0:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 8009df4:	e9cd 3500 	strd	r3, r5, [sp]
 8009df8:	4613      	mov	r3, r2
 8009dfa:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 8009dfc:	2200      	movs	r2, #0
 8009dfe:	47a0      	blx	r4
 8009e00:	b00b      	add	sp, #44	; 0x2c
 8009e02:	bd30      	pop	{r4, r5, pc}

08009e04 <_ZN8touchgfx3HAL10beginFrameEv>:
 8009e04:	4b04      	ldr	r3, [pc, #16]	; (8009e18 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 8009e06:	781b      	ldrb	r3, [r3, #0]
 8009e08:	b123      	cbz	r3, 8009e14 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 8009e0a:	f890 006a 	ldrb.w	r0, [r0, #106]	; 0x6a
 8009e0e:	f080 0001 	eor.w	r0, r0, #1
 8009e12:	4770      	bx	lr
 8009e14:	2001      	movs	r0, #1
 8009e16:	4770      	bx	lr
 8009e18:	20017456 	.word	0x20017456

08009e1c <_ZN8touchgfx3HAL8endFrameEv>:
 8009e1c:	b510      	push	{r4, lr}
 8009e1e:	4604      	mov	r4, r0
 8009e20:	6840      	ldr	r0, [r0, #4]
 8009e22:	6803      	ldr	r3, [r0, #0]
 8009e24:	689b      	ldr	r3, [r3, #8]
 8009e26:	4798      	blx	r3
 8009e28:	f894 3069 	ldrb.w	r3, [r4, #105]	; 0x69
 8009e2c:	b113      	cbz	r3, 8009e34 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 8009e2e:	2301      	movs	r3, #1
 8009e30:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 8009e34:	bd10      	pop	{r4, pc}

08009e36 <_ZN8touchgfx3HAL10initializeEv>:
 8009e36:	b510      	push	{r4, lr}
 8009e38:	4604      	mov	r4, r0
 8009e3a:	f7f6 fd55 	bl	80008e8 <_ZN8touchgfx10OSWrappers10initializeEv>
 8009e3e:	6860      	ldr	r0, [r4, #4]
 8009e40:	6803      	ldr	r3, [r0, #0]
 8009e42:	68db      	ldr	r3, [r3, #12]
 8009e44:	4798      	blx	r3
 8009e46:	68e0      	ldr	r0, [r4, #12]
 8009e48:	6803      	ldr	r3, [r0, #0]
 8009e4a:	689b      	ldr	r3, [r3, #8]
 8009e4c:	4798      	blx	r3
 8009e4e:	6823      	ldr	r3, [r4, #0]
 8009e50:	4620      	mov	r0, r4
 8009e52:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8009e54:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8009e58:	4718      	bx	r3
	...

08009e5c <_ZN8touchgfx3HAL4tickEv>:
 8009e5c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8009e5e:	6803      	ldr	r3, [r0, #0]
 8009e60:	4d5b      	ldr	r5, [pc, #364]	; (8009fd0 <_ZN8touchgfx3HAL4tickEv+0x174>)
 8009e62:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8009e66:	4604      	mov	r4, r0
 8009e68:	4798      	blx	r3
 8009e6a:	2800      	cmp	r0, #0
 8009e6c:	f000 8095 	beq.w	8009f9a <_ZN8touchgfx3HAL4tickEv+0x13e>
 8009e70:	2001      	movs	r0, #1
 8009e72:	f7f6 fc65 	bl	8000740 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 8009e76:	f894 3066 	ldrb.w	r3, [r4, #102]	; 0x66
 8009e7a:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 8009e7e:	f894 3075 	ldrb.w	r3, [r4, #117]	; 0x75
 8009e82:	2600      	movs	r6, #0
 8009e84:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8009e88:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 8009e8c:	b133      	cbz	r3, 8009e9c <_ZN8touchgfx3HAL4tickEv+0x40>
 8009e8e:	6823      	ldr	r3, [r4, #0]
 8009e90:	4620      	mov	r0, r4
 8009e92:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 8009e96:	4798      	blx	r3
 8009e98:	f884 6075 	strb.w	r6, [r4, #117]	; 0x75
 8009e9c:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 8009ea0:	6862      	ldr	r2, [r4, #4]
 8009ea2:	f083 0301 	eor.w	r3, r3, #1
 8009ea6:	7253      	strb	r3, [r2, #9]
 8009ea8:	2601      	movs	r6, #1
 8009eaa:	702e      	strb	r6, [r5, #0]
 8009eac:	f005 ffc8 	bl	800fe40 <_ZN8touchgfx11Application11getInstanceEv>
 8009eb0:	6803      	ldr	r3, [r0, #0]
 8009eb2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8009eb4:	4798      	blx	r3
 8009eb6:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 8009eba:	b90b      	cbnz	r3, 8009ec0 <_ZN8touchgfx3HAL4tickEv+0x64>
 8009ebc:	f884 6067 	strb.w	r6, [r4, #103]	; 0x67
 8009ec0:	f005 ffbe 	bl	800fe40 <_ZN8touchgfx11Application11getInstanceEv>
 8009ec4:	6803      	ldr	r3, [r0, #0]
 8009ec6:	695b      	ldr	r3, [r3, #20]
 8009ec8:	4798      	blx	r3
 8009eca:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8009ecc:	6803      	ldr	r3, [r0, #0]
 8009ece:	691b      	ldr	r3, [r3, #16]
 8009ed0:	4798      	blx	r3
 8009ed2:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 8009ed6:	f894 2068 	ldrb.w	r2, [r4, #104]	; 0x68
 8009eda:	3b01      	subs	r3, #1
 8009edc:	b2db      	uxtb	r3, r3
 8009ede:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 8009ee2:	b10a      	cbz	r2, 8009ee8 <_ZN8touchgfx3HAL4tickEv+0x8c>
 8009ee4:	2b00      	cmp	r3, #0
 8009ee6:	d1eb      	bne.n	8009ec0 <_ZN8touchgfx3HAL4tickEv+0x64>
 8009ee8:	4a3a      	ldr	r2, [pc, #232]	; (8009fd4 <_ZN8touchgfx3HAL4tickEv+0x178>)
 8009eea:	f994 1064 	ldrsb.w	r1, [r4, #100]	; 0x64
 8009eee:	7813      	ldrb	r3, [r2, #0]
 8009ef0:	3301      	adds	r3, #1
 8009ef2:	b25b      	sxtb	r3, r3
 8009ef4:	4299      	cmp	r1, r3
 8009ef6:	7013      	strb	r3, [r2, #0]
 8009ef8:	dc10      	bgt.n	8009f1c <_ZN8touchgfx3HAL4tickEv+0xc0>
 8009efa:	68e0      	ldr	r0, [r4, #12]
 8009efc:	2300      	movs	r3, #0
 8009efe:	7013      	strb	r3, [r2, #0]
 8009f00:	6803      	ldr	r3, [r0, #0]
 8009f02:	aa03      	add	r2, sp, #12
 8009f04:	68db      	ldr	r3, [r3, #12]
 8009f06:	a902      	add	r1, sp, #8
 8009f08:	4798      	blx	r3
 8009f0a:	6823      	ldr	r3, [r4, #0]
 8009f0c:	2800      	cmp	r0, #0
 8009f0e:	d050      	beq.n	8009fb2 <_ZN8touchgfx3HAL4tickEv+0x156>
 8009f10:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8009f14:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 8009f18:	4620      	mov	r0, r4
 8009f1a:	4798      	blx	r3
 8009f1c:	6960      	ldr	r0, [r4, #20]
 8009f1e:	2300      	movs	r3, #0
 8009f20:	f88d 3007 	strb.w	r3, [sp, #7]
 8009f24:	b158      	cbz	r0, 8009f3e <_ZN8touchgfx3HAL4tickEv+0xe2>
 8009f26:	6803      	ldr	r3, [r0, #0]
 8009f28:	f10d 0107 	add.w	r1, sp, #7
 8009f2c:	68db      	ldr	r3, [r3, #12]
 8009f2e:	4798      	blx	r3
 8009f30:	b128      	cbz	r0, 8009f3e <_ZN8touchgfx3HAL4tickEv+0xe2>
 8009f32:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8009f34:	f89d 1007 	ldrb.w	r1, [sp, #7]
 8009f38:	6803      	ldr	r3, [r0, #0]
 8009f3a:	68db      	ldr	r3, [r3, #12]
 8009f3c:	4798      	blx	r3
 8009f3e:	f104 001c 	add.w	r0, r4, #28
 8009f42:	f014 fed1 	bl	801ece8 <_ZN8touchgfx8Gestures4tickEv>
 8009f46:	f894 306c 	ldrb.w	r3, [r4, #108]	; 0x6c
 8009f4a:	b30b      	cbz	r3, 8009f90 <_ZN8touchgfx3HAL4tickEv+0x134>
 8009f4c:	6920      	ldr	r0, [r4, #16]
 8009f4e:	6803      	ldr	r3, [r0, #0]
 8009f50:	691b      	ldr	r3, [r3, #16]
 8009f52:	4798      	blx	r3
 8009f54:	6f23      	ldr	r3, [r4, #112]	; 0x70
 8009f56:	4606      	mov	r6, r0
 8009f58:	b903      	cbnz	r3, 8009f5c <_ZN8touchgfx3HAL4tickEv+0x100>
 8009f5a:	6720      	str	r0, [r4, #112]	; 0x70
 8009f5c:	6f23      	ldr	r3, [r4, #112]	; 0x70
 8009f5e:	4a1e      	ldr	r2, [pc, #120]	; (8009fd8 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 8009f60:	1af3      	subs	r3, r6, r3
 8009f62:	4293      	cmp	r3, r2
 8009f64:	d914      	bls.n	8009f90 <_ZN8touchgfx3HAL4tickEv+0x134>
 8009f66:	6920      	ldr	r0, [r4, #16]
 8009f68:	6803      	ldr	r3, [r0, #0]
 8009f6a:	699b      	ldr	r3, [r3, #24]
 8009f6c:	4798      	blx	r3
 8009f6e:	6f23      	ldr	r3, [r4, #112]	; 0x70
 8009f70:	2264      	movs	r2, #100	; 0x64
 8009f72:	1af3      	subs	r3, r6, r3
 8009f74:	fbb3 f3f2 	udiv	r3, r3, r2
 8009f78:	fbb0 f0f3 	udiv	r0, r0, r3
 8009f7c:	2800      	cmp	r0, #0
 8009f7e:	dc1d      	bgt.n	8009fbc <_ZN8touchgfx3HAL4tickEv+0x160>
 8009f80:	f884 2065 	strb.w	r2, [r4, #101]	; 0x65
 8009f84:	6920      	ldr	r0, [r4, #16]
 8009f86:	6803      	ldr	r3, [r0, #0]
 8009f88:	2100      	movs	r1, #0
 8009f8a:	69db      	ldr	r3, [r3, #28]
 8009f8c:	4798      	blx	r3
 8009f8e:	6726      	str	r6, [r4, #112]	; 0x70
 8009f90:	f005 ff56 	bl	800fe40 <_ZN8touchgfx11Application11getInstanceEv>
 8009f94:	6803      	ldr	r3, [r0, #0]
 8009f96:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009f98:	4798      	blx	r3
 8009f9a:	6823      	ldr	r3, [r4, #0]
 8009f9c:	4620      	mov	r0, r4
 8009f9e:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 8009fa2:	4798      	blx	r3
 8009fa4:	2001      	movs	r0, #1
 8009fa6:	f7f6 fbcc 	bl	8000742 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 8009faa:	2300      	movs	r3, #0
 8009fac:	702b      	strb	r3, [r5, #0]
 8009fae:	b004      	add	sp, #16
 8009fb0:	bd70      	pop	{r4, r5, r6, pc}
 8009fb2:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 8009fb6:	4620      	mov	r0, r4
 8009fb8:	4798      	blx	r3
 8009fba:	e7af      	b.n	8009f1c <_ZN8touchgfx3HAL4tickEv+0xc0>
 8009fbc:	2863      	cmp	r0, #99	; 0x63
 8009fbe:	bfcb      	itete	gt
 8009fc0:	2300      	movgt	r3, #0
 8009fc2:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 8009fc6:	f884 3065 	strbgt.w	r3, [r4, #101]	; 0x65
 8009fca:	f884 0065 	strble.w	r0, [r4, #101]	; 0x65
 8009fce:	e7d9      	b.n	8009f84 <_ZN8touchgfx3HAL4tickEv+0x128>
 8009fd0:	2001745c 	.word	0x2001745c
 8009fd4:	2001745d 	.word	0x2001745d
 8009fd8:	05f5e100 	.word	0x05f5e100

08009fdc <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 8009fdc:	f7f6 bcb4 	b.w	8000948 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08009fe0 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 8009fe0:	6581      	str	r1, [r0, #88]	; 0x58
 8009fe2:	301c      	adds	r0, #28
 8009fe4:	f014 be7e 	b.w	801ece4 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

08009fe8 <_ZN8touchgfx3HAL5touchEll>:
 8009fe8:	b530      	push	{r4, r5, lr}
 8009fea:	b087      	sub	sp, #28
 8009fec:	4604      	mov	r4, r0
 8009fee:	a804      	add	r0, sp, #16
 8009ff0:	e9cd 1204 	strd	r1, r2, [sp, #16]
 8009ff4:	f005 fce6 	bl	800f9c4 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 8009ff8:	9b04      	ldr	r3, [sp, #16]
 8009ffa:	f8ad 300c 	strh.w	r3, [sp, #12]
 8009ffe:	a906      	add	r1, sp, #24
 800a000:	9b05      	ldr	r3, [sp, #20]
 800a002:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 800a006:	a803      	add	r0, sp, #12
 800a008:	f005 fd2e 	bl	800fa68 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 800a00c:	f894 106b 	ldrb.w	r1, [r4, #107]	; 0x6b
 800a010:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800a014:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800a018:	f104 001c 	add.w	r0, r4, #28
 800a01c:	b189      	cbz	r1, 800a042 <_ZN8touchgfx3HAL5touchEll+0x5a>
 800a01e:	f8b4 5060 	ldrh.w	r5, [r4, #96]	; 0x60
 800a022:	9300      	str	r3, [sp, #0]
 800a024:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 800a028:	4613      	mov	r3, r2
 800a02a:	462a      	mov	r2, r5
 800a02c:	f014 fe6a 	bl	801ed04 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 800a030:	b128      	cbz	r0, 800a03e <_ZN8touchgfx3HAL5touchEll+0x56>
 800a032:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800a036:	65e3      	str	r3, [r4, #92]	; 0x5c
 800a038:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800a03c:	6623      	str	r3, [r4, #96]	; 0x60
 800a03e:	b007      	add	sp, #28
 800a040:	bd30      	pop	{r4, r5, pc}
 800a042:	f014 fe9f 	bl	801ed84 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800a046:	2301      	movs	r3, #1
 800a048:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800a04c:	e7f1      	b.n	800a032 <_ZN8touchgfx3HAL5touchEll+0x4a>

0800a04e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 800a04e:	b510      	push	{r4, lr}
 800a050:	2b00      	cmp	r3, #0
 800a052:	d046      	beq.n	800a0e2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800a054:	ea81 0002 	eor.w	r0, r1, r2
 800a058:	07c4      	lsls	r4, r0, #31
 800a05a:	d508      	bpl.n	800a06e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 800a05c:	440b      	add	r3, r1
 800a05e:	3a01      	subs	r2, #1
 800a060:	428b      	cmp	r3, r1
 800a062:	d93e      	bls.n	800a0e2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800a064:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800a068:	f801 0b01 	strb.w	r0, [r1], #1
 800a06c:	e7f8      	b.n	800a060 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 800a06e:	07d0      	lsls	r0, r2, #31
 800a070:	bf42      	ittt	mi
 800a072:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 800a076:	f801 0b01 	strbmi.w	r0, [r1], #1
 800a07a:	f103 33ff 	addmi.w	r3, r3, #4294967295
 800a07e:	2b01      	cmp	r3, #1
 800a080:	d911      	bls.n	800a0a6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800a082:	ea81 0402 	eor.w	r4, r1, r2
 800a086:	07a4      	lsls	r4, r4, #30
 800a088:	4610      	mov	r0, r2
 800a08a:	d022      	beq.n	800a0d2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 800a08c:	f023 0401 	bic.w	r4, r3, #1
 800a090:	440c      	add	r4, r1
 800a092:	428c      	cmp	r4, r1
 800a094:	4602      	mov	r2, r0
 800a096:	d904      	bls.n	800a0a2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 800a098:	8812      	ldrh	r2, [r2, #0]
 800a09a:	f821 2b02 	strh.w	r2, [r1], #2
 800a09e:	3002      	adds	r0, #2
 800a0a0:	e7f7      	b.n	800a092 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 800a0a2:	f003 0301 	and.w	r3, r3, #1
 800a0a6:	f023 0003 	bic.w	r0, r3, #3
 800a0aa:	4408      	add	r0, r1
 800a0ac:	4288      	cmp	r0, r1
 800a0ae:	4614      	mov	r4, r2
 800a0b0:	d904      	bls.n	800a0bc <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 800a0b2:	6824      	ldr	r4, [r4, #0]
 800a0b4:	f841 4b04 	str.w	r4, [r1], #4
 800a0b8:	3204      	adds	r2, #4
 800a0ba:	e7f7      	b.n	800a0ac <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 800a0bc:	f003 0303 	and.w	r3, r3, #3
 800a0c0:	440b      	add	r3, r1
 800a0c2:	3a01      	subs	r2, #1
 800a0c4:	428b      	cmp	r3, r1
 800a0c6:	d90c      	bls.n	800a0e2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800a0c8:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800a0cc:	f801 0b01 	strb.w	r0, [r1], #1
 800a0d0:	e7f8      	b.n	800a0c4 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 800a0d2:	0790      	lsls	r0, r2, #30
 800a0d4:	d0e7      	beq.n	800a0a6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800a0d6:	f832 0b02 	ldrh.w	r0, [r2], #2
 800a0da:	f821 0b02 	strh.w	r0, [r1], #2
 800a0de:	3b02      	subs	r3, #2
 800a0e0:	e7e1      	b.n	800a0a6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800a0e2:	2001      	movs	r0, #1
 800a0e4:	bd10      	pop	{r4, pc}

0800a0e6 <_ZN8touchgfx3HAL7noTouchEv>:
 800a0e6:	b510      	push	{r4, lr}
 800a0e8:	f890 306b 	ldrb.w	r3, [r0, #107]	; 0x6b
 800a0ec:	4604      	mov	r4, r0
 800a0ee:	b153      	cbz	r3, 800a106 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 800a0f0:	f8b0 3060 	ldrh.w	r3, [r0, #96]	; 0x60
 800a0f4:	f8b0 205c 	ldrh.w	r2, [r0, #92]	; 0x5c
 800a0f8:	2101      	movs	r1, #1
 800a0fa:	301c      	adds	r0, #28
 800a0fc:	f014 fe42 	bl	801ed84 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800a100:	2300      	movs	r3, #0
 800a102:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800a106:	bd10      	pop	{r4, pc}

0800a108 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 800a108:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800a10c:	b085      	sub	sp, #20
 800a10e:	ad04      	add	r5, sp, #16
 800a110:	4604      	mov	r4, r0
 800a112:	2000      	movs	r0, #0
 800a114:	f845 0d04 	str.w	r0, [r5, #-4]!
 800a118:	69a0      	ldr	r0, [r4, #24]
 800a11a:	6806      	ldr	r6, [r0, #0]
 800a11c:	9501      	str	r5, [sp, #4]
 800a11e:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 800a122:	9500      	str	r5, [sp, #0]
 800a124:	6835      	ldr	r5, [r6, #0]
 800a126:	4699      	mov	r9, r3
 800a128:	460f      	mov	r7, r1
 800a12a:	4690      	mov	r8, r2
 800a12c:	47a8      	blx	r5
 800a12e:	4d10      	ldr	r5, [pc, #64]	; (800a170 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 800a130:	4606      	mov	r6, r0
 800a132:	f8a5 9000 	strh.w	r9, [r5]
 800a136:	f7f8 f91d 	bl	8002374 <_ZN8touchgfx3HAL3lcdEv>
 800a13a:	6803      	ldr	r3, [r0, #0]
 800a13c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a13e:	4798      	blx	r3
 800a140:	b128      	cbz	r0, 800a14e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 800a142:	2801      	cmp	r0, #1
 800a144:	d00b      	beq.n	800a15e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 800a146:	4630      	mov	r0, r6
 800a148:	b005      	add	sp, #20
 800a14a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800a14e:	882b      	ldrh	r3, [r5, #0]
 800a150:	fb08 7203 	mla	r2, r8, r3, r7
 800a154:	9b03      	ldr	r3, [sp, #12]
 800a156:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 800a15a:	63e3      	str	r3, [r4, #60]	; 0x3c
 800a15c:	e7f3      	b.n	800a146 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800a15e:	882a      	ldrh	r2, [r5, #0]
 800a160:	9b03      	ldr	r3, [sp, #12]
 800a162:	fb08 7202 	mla	r2, r8, r2, r7
 800a166:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800a16a:	1a9a      	subs	r2, r3, r2
 800a16c:	63e2      	str	r2, [r4, #60]	; 0x3c
 800a16e:	e7ea      	b.n	800a146 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800a170:	20017452 	.word	0x20017452

0800a174 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 800a174:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a176:	b08b      	sub	sp, #44	; 0x2c
 800a178:	4617      	mov	r7, r2
 800a17a:	4604      	mov	r4, r0
 800a17c:	460e      	mov	r6, r1
 800a17e:	461d      	mov	r5, r3
 800a180:	f7f8 f8f8 	bl	8002374 <_ZN8touchgfx3HAL3lcdEv>
 800a184:	6803      	ldr	r3, [r0, #0]
 800a186:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a188:	4798      	blx	r3
 800a18a:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 800a18e:	9007      	str	r0, [sp, #28]
 800a190:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800a194:	4b0d      	ldr	r3, [pc, #52]	; (800a1cc <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 800a196:	6822      	ldr	r2, [r4, #0]
 800a198:	881b      	ldrh	r3, [r3, #0]
 800a19a:	9306      	str	r3, [sp, #24]
 800a19c:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 800a1a0:	9305      	str	r3, [sp, #20]
 800a1a2:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 800a1a6:	9304      	str	r3, [sp, #16]
 800a1a8:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800a1ac:	9303      	str	r3, [sp, #12]
 800a1ae:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800a1b2:	9302      	str	r3, [sp, #8]
 800a1b4:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800a1b8:	e9cd 5300 	strd	r5, r3, [sp]
 800a1bc:	4631      	mov	r1, r6
 800a1be:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 800a1c0:	463b      	mov	r3, r7
 800a1c2:	2200      	movs	r2, #0
 800a1c4:	4620      	mov	r0, r4
 800a1c6:	47a8      	blx	r5
 800a1c8:	b00b      	add	sp, #44	; 0x2c
 800a1ca:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a1cc:	20017452 	.word	0x20017452

0800a1d0 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 800a1d0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800a1d4:	4698      	mov	r8, r3
 800a1d6:	6803      	ldr	r3, [r0, #0]
 800a1d8:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 800a1da:	4b15      	ldr	r3, [pc, #84]	; (800a230 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 800a1dc:	b08b      	sub	sp, #44	; 0x2c
 800a1de:	4617      	mov	r7, r2
 800a1e0:	f8b3 9000 	ldrh.w	r9, [r3]
 800a1e4:	460e      	mov	r6, r1
 800a1e6:	4604      	mov	r4, r0
 800a1e8:	f7f8 f8c4 	bl	8002374 <_ZN8touchgfx3HAL3lcdEv>
 800a1ec:	6803      	ldr	r3, [r0, #0]
 800a1ee:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a1f0:	4798      	blx	r3
 800a1f2:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800a1f6:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800a1fa:	2302      	movs	r3, #2
 800a1fc:	e9cd 9306 	strd	r9, r3, [sp, #24]
 800a200:	2301      	movs	r3, #1
 800a202:	9305      	str	r3, [sp, #20]
 800a204:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 800a208:	9304      	str	r3, [sp, #16]
 800a20a:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800a20e:	9303      	str	r3, [sp, #12]
 800a210:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800a214:	9302      	str	r3, [sp, #8]
 800a216:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800a21a:	2200      	movs	r2, #0
 800a21c:	e9cd 8300 	strd	r8, r3, [sp]
 800a220:	4631      	mov	r1, r6
 800a222:	463b      	mov	r3, r7
 800a224:	4620      	mov	r0, r4
 800a226:	47a8      	blx	r5
 800a228:	b00b      	add	sp, #44	; 0x2c
 800a22a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800a22e:	bf00      	nop
 800a230:	20017452 	.word	0x20017452

0800a234 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 800a234:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800a238:	4698      	mov	r8, r3
 800a23a:	6803      	ldr	r3, [r0, #0]
 800a23c:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 800a23e:	4b11      	ldr	r3, [pc, #68]	; (800a284 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 800a240:	b087      	sub	sp, #28
 800a242:	f8b3 9000 	ldrh.w	r9, [r3]
 800a246:	460e      	mov	r6, r1
 800a248:	4617      	mov	r7, r2
 800a24a:	4604      	mov	r4, r0
 800a24c:	f7f8 f892 	bl	8002374 <_ZN8touchgfx3HAL3lcdEv>
 800a250:	6803      	ldr	r3, [r0, #0]
 800a252:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a254:	4798      	blx	r3
 800a256:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 800a25a:	f8cd 900c 	str.w	r9, [sp, #12]
 800a25e:	e9cd 0304 	strd	r0, r3, [sp, #16]
 800a262:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 800a266:	9302      	str	r3, [sp, #8]
 800a268:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 800a26c:	9301      	str	r3, [sp, #4]
 800a26e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800a272:	9300      	str	r3, [sp, #0]
 800a274:	463a      	mov	r2, r7
 800a276:	4643      	mov	r3, r8
 800a278:	4631      	mov	r1, r6
 800a27a:	4620      	mov	r0, r4
 800a27c:	47a8      	blx	r5
 800a27e:	b007      	add	sp, #28
 800a280:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800a284:	20017452 	.word	0x20017452

0800a288 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 800a288:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a28c:	4604      	mov	r4, r0
 800a28e:	b08f      	sub	sp, #60	; 0x3c
 800a290:	4610      	mov	r0, r2
 800a292:	460d      	mov	r5, r1
 800a294:	4691      	mov	r9, r2
 800a296:	461e      	mov	r6, r3
 800a298:	f008 ff6e 	bl	8013178 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800a29c:	2800      	cmp	r0, #0
 800a29e:	f000 809d 	beq.w	800a3dc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 800a2a2:	6823      	ldr	r3, [r4, #0]
 800a2a4:	f8df b198 	ldr.w	fp, [pc, #408]	; 800a440 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 800a2a8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a2aa:	f8df a198 	ldr.w	sl, [pc, #408]	; 800a444 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 800a2ae:	4f61      	ldr	r7, [pc, #388]	; (800a434 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800a2b0:	4620      	mov	r0, r4
 800a2b2:	4798      	blx	r3
 800a2b4:	6823      	ldr	r3, [r4, #0]
 800a2b6:	4620      	mov	r0, r4
 800a2b8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a2ba:	4798      	blx	r3
 800a2bc:	f8bb 3000 	ldrh.w	r3, [fp]
 800a2c0:	9301      	str	r3, [sp, #4]
 800a2c2:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 800a2c6:	f8ba 3000 	ldrh.w	r3, [sl]
 800a2ca:	9302      	str	r3, [sp, #8]
 800a2cc:	883b      	ldrh	r3, [r7, #0]
 800a2ce:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 800a2d2:	9303      	str	r3, [sp, #12]
 800a2d4:	4b58      	ldr	r3, [pc, #352]	; (800a438 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800a2d6:	9305      	str	r3, [sp, #20]
 800a2d8:	881a      	ldrh	r2, [r3, #0]
 800a2da:	9204      	str	r2, [sp, #16]
 800a2dc:	4640      	mov	r0, r8
 800a2de:	f008 ffdf 	bl	80132a0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800a2e2:	8038      	strh	r0, [r7, #0]
 800a2e4:	4640      	mov	r0, r8
 800a2e6:	f009 f80f 	bl	8013308 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800a2ea:	9b05      	ldr	r3, [sp, #20]
 800a2ec:	b280      	uxth	r0, r0
 800a2ee:	8018      	strh	r0, [r3, #0]
 800a2f0:	4b52      	ldr	r3, [pc, #328]	; (800a43c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 800a2f2:	781b      	ldrb	r3, [r3, #0]
 800a2f4:	2b00      	cmp	r3, #0
 800a2f6:	d174      	bne.n	800a3e2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 800a2f8:	883b      	ldrh	r3, [r7, #0]
 800a2fa:	f8ab 3000 	strh.w	r3, [fp]
 800a2fe:	f8aa 0000 	strh.w	r0, [sl]
 800a302:	4648      	mov	r0, r9
 800a304:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 800a308:	f008 ff36 	bl	8013178 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800a30c:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 800a310:	2200      	movs	r2, #0
 800a312:	4611      	mov	r1, r2
 800a314:	4628      	mov	r0, r5
 800a316:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 800a31a:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 800a31e:	f7f8 fc3d 	bl	8002b9c <_ZN8touchgfx8Drawable5setXYEss>
 800a322:	2301      	movs	r3, #1
 800a324:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 800a328:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 800a32c:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800a330:	2b00      	cmp	r3, #0
 800a332:	dd5c      	ble.n	800a3ee <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800a334:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800a338:	2b00      	cmp	r3, #0
 800a33a:	dd58      	ble.n	800a3ee <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800a33c:	462a      	mov	r2, r5
 800a33e:	ab0a      	add	r3, sp, #40	; 0x28
 800a340:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800a344:	6851      	ldr	r1, [r2, #4]
 800a346:	c303      	stmia	r3!, {r0, r1}
 800a348:	4631      	mov	r1, r6
 800a34a:	a80a      	add	r0, sp, #40	; 0x28
 800a34c:	f7ff fc0e 	bl	8009b6c <_ZN8touchgfx4RectaNERKS0_>
 800a350:	4b38      	ldr	r3, [pc, #224]	; (800a434 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800a352:	f9b3 2000 	ldrsh.w	r2, [r3]
 800a356:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 800a35a:	2100      	movs	r1, #0
 800a35c:	aa0a      	add	r2, sp, #40	; 0x28
 800a35e:	4b36      	ldr	r3, [pc, #216]	; (800a438 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800a360:	910c      	str	r1, [sp, #48]	; 0x30
 800a362:	e892 0003 	ldmia.w	r2, {r0, r1}
 800a366:	f9b3 3000 	ldrsh.w	r3, [r3]
 800a36a:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800a36e:	ab08      	add	r3, sp, #32
 800a370:	e883 0003 	stmia.w	r3, {r0, r1}
 800a374:	4618      	mov	r0, r3
 800a376:	a90c      	add	r1, sp, #48	; 0x30
 800a378:	f7ff fbf8 	bl	8009b6c <_ZN8touchgfx4RectaNERKS0_>
 800a37c:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 800a37e:	2b00      	cmp	r3, #0
 800a380:	d13c      	bne.n	800a3fc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 800a382:	2000      	movs	r0, #0
 800a384:	f884 0076 	strb.w	r0, [r4, #118]	; 0x76
 800a388:	2600      	movs	r6, #0
 800a38a:	682a      	ldr	r2, [r5, #0]
 800a38c:	696b      	ldr	r3, [r5, #20]
 800a38e:	616e      	str	r6, [r5, #20]
 800a390:	9305      	str	r3, [sp, #20]
 800a392:	6892      	ldr	r2, [r2, #8]
 800a394:	a908      	add	r1, sp, #32
 800a396:	4628      	mov	r0, r5
 800a398:	4790      	blx	r2
 800a39a:	9b05      	ldr	r3, [sp, #20]
 800a39c:	616b      	str	r3, [r5, #20]
 800a39e:	4652      	mov	r2, sl
 800a3a0:	f884 6076 	strb.w	r6, [r4, #118]	; 0x76
 800a3a4:	4649      	mov	r1, r9
 800a3a6:	4628      	mov	r0, r5
 800a3a8:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 800a3ac:	f7f8 fbf6 	bl	8002b9c <_ZN8touchgfx8Drawable5setXYEss>
 800a3b0:	4b23      	ldr	r3, [pc, #140]	; (800a440 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 800a3b2:	9a01      	ldr	r2, [sp, #4]
 800a3b4:	801a      	strh	r2, [r3, #0]
 800a3b6:	4b23      	ldr	r3, [pc, #140]	; (800a444 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 800a3b8:	9a02      	ldr	r2, [sp, #8]
 800a3ba:	801a      	strh	r2, [r3, #0]
 800a3bc:	4b1d      	ldr	r3, [pc, #116]	; (800a434 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800a3be:	9a03      	ldr	r2, [sp, #12]
 800a3c0:	801a      	strh	r2, [r3, #0]
 800a3c2:	4b1d      	ldr	r3, [pc, #116]	; (800a438 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800a3c4:	9a04      	ldr	r2, [sp, #16]
 800a3c6:	801a      	strh	r2, [r3, #0]
 800a3c8:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 800a3cc:	6823      	ldr	r3, [r4, #0]
 800a3ce:	4620      	mov	r0, r4
 800a3d0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a3d2:	4798      	blx	r3
 800a3d4:	6823      	ldr	r3, [r4, #0]
 800a3d6:	4620      	mov	r0, r4
 800a3d8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a3da:	4798      	blx	r3
 800a3dc:	b00f      	add	sp, #60	; 0x3c
 800a3de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a3e2:	883b      	ldrh	r3, [r7, #0]
 800a3e4:	f8ab 0000 	strh.w	r0, [fp]
 800a3e8:	f8aa 3000 	strh.w	r3, [sl]
 800a3ec:	e789      	b.n	800a302 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 800a3ee:	462a      	mov	r2, r5
 800a3f0:	ab0a      	add	r3, sp, #40	; 0x28
 800a3f2:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800a3f6:	6851      	ldr	r1, [r2, #4]
 800a3f8:	c303      	stmia	r3!, {r0, r1}
 800a3fa:	e7a9      	b.n	800a350 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 800a3fc:	a807      	add	r0, sp, #28
 800a3fe:	f009 f8bf 	bl	8013580 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800a402:	4606      	mov	r6, r0
 800a404:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 800a406:	6803      	ldr	r3, [r0, #0]
 800a408:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a40a:	4798      	blx	r3
 800a40c:	4286      	cmp	r6, r0
 800a40e:	d1b8      	bne.n	800a382 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 800a410:	f7f7 ffb0 	bl	8002374 <_ZN8touchgfx3HAL3lcdEv>
 800a414:	6803      	ldr	r3, [r0, #0]
 800a416:	4606      	mov	r6, r0
 800a418:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800a41a:	9305      	str	r3, [sp, #20]
 800a41c:	a807      	add	r0, sp, #28
 800a41e:	f009 f8af 	bl	8013580 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800a422:	9b05      	ldr	r3, [sp, #20]
 800a424:	4601      	mov	r1, r0
 800a426:	4630      	mov	r0, r6
 800a428:	4798      	blx	r3
 800a42a:	f080 0001 	eor.w	r0, r0, #1
 800a42e:	b2c0      	uxtb	r0, r0
 800a430:	e7a8      	b.n	800a384 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 800a432:	bf00      	nop
 800a434:	2001744c 	.word	0x2001744c
 800a438:	2001744e 	.word	0x2001744e
 800a43c:	20017450 	.word	0x20017450
 800a440:	20017452 	.word	0x20017452
 800a444:	20017454 	.word	0x20017454

0800a448 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 800a448:	b510      	push	{r4, lr}
 800a44a:	4b07      	ldr	r3, [pc, #28]	; (800a468 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 800a44c:	781b      	ldrb	r3, [r3, #0]
 800a44e:	4604      	mov	r4, r0
 800a450:	b13b      	cbz	r3, 800a462 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800a452:	6803      	ldr	r3, [r0, #0]
 800a454:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a456:	4798      	blx	r3
 800a458:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800a45a:	4283      	cmp	r3, r0
 800a45c:	d101      	bne.n	800a462 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800a45e:	6c20      	ldr	r0, [r4, #64]	; 0x40
 800a460:	bd10      	pop	{r4, pc}
 800a462:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 800a464:	e7fc      	b.n	800a460 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 800a466:	bf00      	nop
 800a468:	20017456 	.word	0x20017456

0800a46c <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 800a46c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a470:	b08a      	sub	sp, #40	; 0x28
 800a472:	461d      	mov	r5, r3
 800a474:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800a478:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800a47c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800a480:	f8ad 3018 	strh.w	r3, [sp, #24]
 800a484:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800a488:	f8ad 301a 	strh.w	r3, [sp, #26]
 800a48c:	2400      	movs	r4, #0
 800a48e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800a492:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 800a496:	f8ad 301c 	strh.w	r3, [sp, #28]
 800a49a:	4690      	mov	r8, r2
 800a49c:	4607      	mov	r7, r0
 800a49e:	9404      	str	r4, [sp, #16]
 800a4a0:	f88d 4020 	strb.w	r4, [sp, #32]
 800a4a4:	f7ff ffd0 	bl	800a448 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a4a8:	fb06 8505 	mla	r5, r6, r5, r8
 800a4ac:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800a4b0:	6878      	ldr	r0, [r7, #4]
 800a4b2:	9505      	str	r5, [sp, #20]
 800a4b4:	f8ad 601e 	strh.w	r6, [sp, #30]
 800a4b8:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800a4bc:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
 800a4c0:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 800a4c4:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 800a4c8:	6803      	ldr	r3, [r0, #0]
 800a4ca:	a901      	add	r1, sp, #4
 800a4cc:	685b      	ldr	r3, [r3, #4]
 800a4ce:	4798      	blx	r3
 800a4d0:	b00a      	add	sp, #40	; 0x28
 800a4d2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800a4d6 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 800a4d6:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800a4da:	b08b      	sub	sp, #44	; 0x2c
 800a4dc:	2400      	movs	r4, #0
 800a4de:	461d      	mov	r5, r3
 800a4e0:	f44f 6300 	mov.w	r3, #2048	; 0x800
 800a4e4:	4688      	mov	r8, r1
 800a4e6:	4691      	mov	r9, r2
 800a4e8:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
 800a4ec:	9404      	str	r4, [sp, #16]
 800a4ee:	4607      	mov	r7, r0
 800a4f0:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800a4f4:	f7ff ffa8 	bl	800a448 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a4f8:	fb06 9505 	mla	r5, r6, r5, r9
 800a4fc:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800a500:	f8ad 3018 	strh.w	r3, [sp, #24]
 800a504:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800a508:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800a50c:	6878      	ldr	r0, [r7, #4]
 800a50e:	9505      	str	r5, [sp, #20]
 800a510:	f8ad 301a 	strh.w	r3, [sp, #26]
 800a514:	f8ad 401c 	strh.w	r4, [sp, #28]
 800a518:	f8ad 601e 	strh.w	r6, [sp, #30]
 800a51c:	f8cd 8010 	str.w	r8, [sp, #16]
 800a520:	f8ad 4020 	strh.w	r4, [sp, #32]
 800a524:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800a528:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 800a52c:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 800a530:	6803      	ldr	r3, [r0, #0]
 800a532:	a901      	add	r1, sp, #4
 800a534:	685b      	ldr	r3, [r3, #4]
 800a536:	4798      	blx	r3
 800a538:	b00b      	add	sp, #44	; 0x2c
 800a53a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

0800a540 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 800a540:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a544:	b08a      	sub	sp, #40	; 0x28
 800a546:	4698      	mov	r8, r3
 800a548:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
 800a54c:	f89d c054 	ldrb.w	ip, [sp, #84]	; 0x54
 800a550:	f8bd 7058 	ldrh.w	r7, [sp, #88]	; 0x58
 800a554:	f89d 4060 	ldrb.w	r4, [sp, #96]	; 0x60
 800a558:	2300      	movs	r3, #0
 800a55a:	2d0b      	cmp	r5, #11
 800a55c:	4606      	mov	r6, r0
 800a55e:	9304      	str	r3, [sp, #16]
 800a560:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 800a564:	d138      	bne.n	800a5d8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 800a566:	2380      	movs	r3, #128	; 0x80
 800a568:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800a56c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800a570:	f8ad 3018 	strh.w	r3, [sp, #24]
 800a574:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800a578:	f8ad 301a 	strh.w	r3, [sp, #26]
 800a57c:	f88d 0020 	strb.w	r0, [sp, #32]
 800a580:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800a584:	f8ad 301c 	strh.w	r3, [sp, #28]
 800a588:	4630      	mov	r0, r6
 800a58a:	9203      	str	r2, [sp, #12]
 800a58c:	f7ff ff5c 	bl	800a448 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a590:	2c0b      	cmp	r4, #11
 800a592:	bf98      	it	ls
 800a594:	4b1b      	ldrls	r3, [pc, #108]	; (800a604 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 800a596:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 800a59a:	bf98      	it	ls
 800a59c:	5d19      	ldrbls	r1, [r3, r4]
 800a59e:	f8ad 701e 	strh.w	r7, [sp, #30]
 800a5a2:	bf88      	it	hi
 800a5a4:	2100      	movhi	r1, #0
 800a5a6:	fb02 8307 	mla	r3, r2, r7, r8
 800a5aa:	10c9      	asrs	r1, r1, #3
 800a5ac:	fb01 0003 	mla	r0, r1, r3, r0
 800a5b0:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
 800a5b4:	9005      	str	r0, [sp, #20]
 800a5b6:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 800a5ba:	6870      	ldr	r0, [r6, #4]
 800a5bc:	f88d 5021 	strb.w	r5, [sp, #33]	; 0x21
 800a5c0:	2300      	movs	r3, #0
 800a5c2:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800a5c6:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800a5ca:	6803      	ldr	r3, [r0, #0]
 800a5cc:	a901      	add	r1, sp, #4
 800a5ce:	685b      	ldr	r3, [r3, #4]
 800a5d0:	4798      	blx	r3
 800a5d2:	b00a      	add	sp, #40	; 0x28
 800a5d4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a5d8:	2d02      	cmp	r5, #2
 800a5da:	d109      	bne.n	800a5f0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 800a5dc:	28ff      	cmp	r0, #255	; 0xff
 800a5de:	d105      	bne.n	800a5ec <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 800a5e0:	f1bc 0f00 	cmp.w	ip, #0
 800a5e4:	bf14      	ite	ne
 800a5e6:	2340      	movne	r3, #64	; 0x40
 800a5e8:	2320      	moveq	r3, #32
 800a5ea:	e7bd      	b.n	800a568 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800a5ec:	2340      	movs	r3, #64	; 0x40
 800a5ee:	e7bb      	b.n	800a568 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800a5f0:	28ff      	cmp	r0, #255	; 0xff
 800a5f2:	d105      	bne.n	800a600 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 800a5f4:	f1bc 0f00 	cmp.w	ip, #0
 800a5f8:	bf14      	ite	ne
 800a5fa:	2304      	movne	r3, #4
 800a5fc:	2301      	moveq	r3, #1
 800a5fe:	e7b3      	b.n	800a568 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800a600:	2304      	movs	r3, #4
 800a602:	e7b1      	b.n	800a568 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800a604:	08022264 	.word	0x08022264

0800a608 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 800a608:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a60c:	b08b      	sub	sp, #44	; 0x2c
 800a60e:	461d      	mov	r5, r3
 800a610:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 800a614:	f89d 6060 	ldrb.w	r6, [sp, #96]	; 0x60
 800a618:	f8bd a05c 	ldrh.w	sl, [sp, #92]	; 0x5c
 800a61c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 800a620:	bf14      	ite	ne
 800a622:	2308      	movne	r3, #8
 800a624:	2302      	moveq	r3, #2
 800a626:	2400      	movs	r4, #0
 800a628:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800a62c:	4688      	mov	r8, r1
 800a62e:	4693      	mov	fp, r2
 800a630:	9404      	str	r4, [sp, #16]
 800a632:	4607      	mov	r7, r0
 800a634:	f7ff ff08 	bl	800a448 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a638:	2e0b      	cmp	r6, #11
 800a63a:	bf98      	it	ls
 800a63c:	4b15      	ldrls	r3, [pc, #84]	; (800a694 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 800a63e:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 800a642:	bf98      	it	ls
 800a644:	5d9c      	ldrbls	r4, [r3, r6]
 800a646:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800a64a:	f8ad 3018 	strh.w	r3, [sp, #24]
 800a64e:	fb05 b50a 	mla	r5, r5, sl, fp
 800a652:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 800a656:	f8ad 301a 	strh.w	r3, [sp, #26]
 800a65a:	10e4      	asrs	r4, r4, #3
 800a65c:	fb04 0405 	mla	r4, r4, r5, r0
 800a660:	2300      	movs	r3, #0
 800a662:	6878      	ldr	r0, [r7, #4]
 800a664:	9405      	str	r4, [sp, #20]
 800a666:	f8ad 301c 	strh.w	r3, [sp, #28]
 800a66a:	f8ad a01e 	strh.w	sl, [sp, #30]
 800a66e:	f8cd 8010 	str.w	r8, [sp, #16]
 800a672:	f88d 9020 	strb.w	r9, [sp, #32]
 800a676:	f88d 2023 	strb.w	r2, [sp, #35]	; 0x23
 800a67a:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800a67e:	f88d 6021 	strb.w	r6, [sp, #33]	; 0x21
 800a682:	f88d 6022 	strb.w	r6, [sp, #34]	; 0x22
 800a686:	6803      	ldr	r3, [r0, #0]
 800a688:	a901      	add	r1, sp, #4
 800a68a:	685b      	ldr	r3, [r3, #4]
 800a68c:	4798      	blx	r3
 800a68e:	b00b      	add	sp, #44	; 0x2c
 800a690:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a694:	08022264 	.word	0x08022264

0800a698 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 800a698:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a69c:	461e      	mov	r6, r3
 800a69e:	4b0a      	ldr	r3, [pc, #40]	; (800a6c8 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 800a6a0:	460f      	mov	r7, r1
 800a6a2:	881d      	ldrh	r5, [r3, #0]
 800a6a4:	4690      	mov	r8, r2
 800a6a6:	f7f7 fe65 	bl	8002374 <_ZN8touchgfx3HAL3lcdEv>
 800a6aa:	6803      	ldr	r3, [r0, #0]
 800a6ac:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a6ae:	4798      	blx	r3
 800a6b0:	280b      	cmp	r0, #11
 800a6b2:	bf9a      	itte	ls
 800a6b4:	4b05      	ldrls	r3, [pc, #20]	; (800a6cc <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 800a6b6:	5c1c      	ldrbls	r4, [r3, r0]
 800a6b8:	2400      	movhi	r4, #0
 800a6ba:	fb08 7005 	mla	r0, r8, r5, r7
 800a6be:	10e4      	asrs	r4, r4, #3
 800a6c0:	fb04 6000 	mla	r0, r4, r0, r6
 800a6c4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a6c8:	20017452 	.word	0x20017452
 800a6cc:	08022264 	.word	0x08022264

0800a6d0 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 800a6d0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a6d2:	b08b      	sub	sp, #44	; 0x2c
 800a6d4:	461f      	mov	r7, r3
 800a6d6:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 800a6da:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800a6de:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800a6e2:	f8ad 3018 	strh.w	r3, [sp, #24]
 800a6e6:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800a6ea:	f8ad 301a 	strh.w	r3, [sp, #26]
 800a6ee:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800a6f2:	f8ad 301c 	strh.w	r3, [sp, #28]
 800a6f6:	2500      	movs	r5, #0
 800a6f8:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 800a6fc:	f88d 3020 	strb.w	r3, [sp, #32]
 800a700:	4604      	mov	r4, r0
 800a702:	4616      	mov	r6, r2
 800a704:	9504      	str	r5, [sp, #16]
 800a706:	f7ff fe9f 	bl	800a448 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a70a:	463a      	mov	r2, r7
 800a70c:	4631      	mov	r1, r6
 800a70e:	4603      	mov	r3, r0
 800a710:	4620      	mov	r0, r4
 800a712:	f7ff ffc1 	bl	800a698 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800a716:	4b0e      	ldr	r3, [pc, #56]	; (800a750 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 800a718:	9005      	str	r0, [sp, #20]
 800a71a:	881b      	ldrh	r3, [r3, #0]
 800a71c:	f8ad 301e 	strh.w	r3, [sp, #30]
 800a720:	f7f7 fe28 	bl	8002374 <_ZN8touchgfx3HAL3lcdEv>
 800a724:	6803      	ldr	r3, [r0, #0]
 800a726:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a728:	4798      	blx	r3
 800a72a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800a72c:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 800a730:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 800a734:	9304      	str	r3, [sp, #16]
 800a736:	6860      	ldr	r0, [r4, #4]
 800a738:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800a73c:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 800a740:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
 800a744:	6803      	ldr	r3, [r0, #0]
 800a746:	a901      	add	r1, sp, #4
 800a748:	685b      	ldr	r3, [r3, #4]
 800a74a:	4798      	blx	r3
 800a74c:	b00b      	add	sp, #44	; 0x2c
 800a74e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a750:	20017452 	.word	0x20017452

0800a754 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 800a754:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a756:	b08d      	sub	sp, #52	; 0x34
 800a758:	466b      	mov	r3, sp
 800a75a:	e883 0006 	stmia.w	r3, {r1, r2}
 800a75e:	2300      	movs	r3, #0
 800a760:	9306      	str	r3, [sp, #24]
 800a762:	6803      	ldr	r3, [r0, #0]
 800a764:	f8bd 6000 	ldrh.w	r6, [sp]
 800a768:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a76a:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 800a76e:	2501      	movs	r5, #1
 800a770:	9503      	str	r5, [sp, #12]
 800a772:	4604      	mov	r4, r0
 800a774:	4798      	blx	r3
 800a776:	463a      	mov	r2, r7
 800a778:	4631      	mov	r1, r6
 800a77a:	4603      	mov	r3, r0
 800a77c:	4620      	mov	r0, r4
 800a77e:	f7ff ff8b 	bl	800a698 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800a782:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800a784:	9307      	str	r3, [sp, #28]
 800a786:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800a78a:	f8ad 3020 	strh.w	r3, [sp, #32]
 800a78e:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800a792:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800a796:	4b0f      	ldr	r3, [pc, #60]	; (800a7d4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 800a798:	9004      	str	r0, [sp, #16]
 800a79a:	881b      	ldrh	r3, [r3, #0]
 800a79c:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800a7a0:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800a7a4:	f7f7 fde6 	bl	8002374 <_ZN8touchgfx3HAL3lcdEv>
 800a7a8:	6803      	ldr	r3, [r0, #0]
 800a7aa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a7ac:	4798      	blx	r3
 800a7ae:	23ff      	movs	r3, #255	; 0xff
 800a7b0:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 800a7b4:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800a7b8:	6860      	ldr	r0, [r4, #4]
 800a7ba:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 800a7be:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 800a7c2:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800a7c6:	6803      	ldr	r3, [r0, #0]
 800a7c8:	a903      	add	r1, sp, #12
 800a7ca:	685b      	ldr	r3, [r3, #4]
 800a7cc:	4798      	blx	r3
 800a7ce:	6c60      	ldr	r0, [r4, #68]	; 0x44
 800a7d0:	b00d      	add	sp, #52	; 0x34
 800a7d2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a7d4:	20017452 	.word	0x20017452

0800a7d8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 800a7d8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a7dc:	b08c      	sub	sp, #48	; 0x30
 800a7de:	461e      	mov	r6, r3
 800a7e0:	466d      	mov	r5, sp
 800a7e2:	2300      	movs	r3, #0
 800a7e4:	e885 0006 	stmia.w	r5, {r1, r2}
 800a7e8:	9306      	str	r3, [sp, #24]
 800a7ea:	6803      	ldr	r3, [r0, #0]
 800a7ec:	f8bd 7000 	ldrh.w	r7, [sp]
 800a7f0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a7f2:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 800a7f6:	2501      	movs	r5, #1
 800a7f8:	9503      	str	r5, [sp, #12]
 800a7fa:	4604      	mov	r4, r0
 800a7fc:	4798      	blx	r3
 800a7fe:	4642      	mov	r2, r8
 800a800:	4639      	mov	r1, r7
 800a802:	4603      	mov	r3, r0
 800a804:	4620      	mov	r0, r4
 800a806:	f7ff ff47 	bl	800a698 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800a80a:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800a80e:	f8ad 3020 	strh.w	r3, [sp, #32]
 800a812:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800a816:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800a81a:	4b11      	ldr	r3, [pc, #68]	; (800a860 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 800a81c:	9004      	str	r0, [sp, #16]
 800a81e:	881b      	ldrh	r3, [r3, #0]
 800a820:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800a824:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800a826:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800a82a:	9607      	str	r6, [sp, #28]
 800a82c:	f7f7 fda2 	bl	8002374 <_ZN8touchgfx3HAL3lcdEv>
 800a830:	6803      	ldr	r3, [r0, #0]
 800a832:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a834:	4798      	blx	r3
 800a836:	23ff      	movs	r3, #255	; 0xff
 800a838:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 800a83c:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800a840:	6860      	ldr	r0, [r4, #4]
 800a842:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 800a846:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 800a84a:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800a84e:	6803      	ldr	r3, [r0, #0]
 800a850:	a903      	add	r1, sp, #12
 800a852:	685b      	ldr	r3, [r3, #4]
 800a854:	4798      	blx	r3
 800a856:	4630      	mov	r0, r6
 800a858:	b00c      	add	sp, #48	; 0x30
 800a85a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a85e:	bf00      	nop
 800a860:	20017452 	.word	0x20017452

0800a864 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 800a864:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a866:	b085      	sub	sp, #20
 800a868:	ac02      	add	r4, sp, #8
 800a86a:	e884 0006 	stmia.w	r4, {r1, r2}
 800a86e:	4605      	mov	r5, r0
 800a870:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 800a874:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 800a878:	f7ff fde6 	bl	800a448 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a87c:	463a      	mov	r2, r7
 800a87e:	4603      	mov	r3, r0
 800a880:	4631      	mov	r1, r6
 800a882:	4628      	mov	r0, r5
 800a884:	f7ff ff08 	bl	800a698 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800a888:	4a05      	ldr	r2, [pc, #20]	; (800a8a0 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 800a88a:	682b      	ldr	r3, [r5, #0]
 800a88c:	8812      	ldrh	r2, [r2, #0]
 800a88e:	9200      	str	r2, [sp, #0]
 800a890:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 800a892:	e894 0006 	ldmia.w	r4, {r1, r2}
 800a896:	4603      	mov	r3, r0
 800a898:	4628      	mov	r0, r5
 800a89a:	47b0      	blx	r6
 800a89c:	b005      	add	sp, #20
 800a89e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a8a0:	20017452 	.word	0x20017452

0800a8a4 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 800a8a4:	b570      	push	{r4, r5, r6, lr}
 800a8a6:	f890 306a 	ldrb.w	r3, [r0, #106]	; 0x6a
 800a8aa:	4604      	mov	r4, r0
 800a8ac:	b19b      	cbz	r3, 800a8d6 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 800a8ae:	2002      	movs	r0, #2
 800a8b0:	f7f5 ff48 	bl	8000744 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 800a8b4:	2300      	movs	r3, #0
 800a8b6:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 800a8ba:	f884 3069 	strb.w	r3, [r4, #105]	; 0x69
 800a8be:	6823      	ldr	r3, [r4, #0]
 800a8c0:	4620      	mov	r0, r4
 800a8c2:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 800a8c6:	f7ff fdbf 	bl	800a448 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a8ca:	462b      	mov	r3, r5
 800a8cc:	4601      	mov	r1, r0
 800a8ce:	4620      	mov	r0, r4
 800a8d0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a8d4:	4718      	bx	r3
 800a8d6:	bd70      	pop	{r4, r5, r6, pc}

0800a8d8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 800a8d8:	b538      	push	{r3, r4, r5, lr}
 800a8da:	f890 3078 	ldrb.w	r3, [r0, #120]	; 0x78
 800a8de:	428b      	cmp	r3, r1
 800a8e0:	4604      	mov	r4, r0
 800a8e2:	460d      	mov	r5, r1
 800a8e4:	d006      	beq.n	800a8f4 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 800a8e6:	6803      	ldr	r3, [r0, #0]
 800a8e8:	b929      	cbnz	r1, 800a8f6 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 800a8ea:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 800a8ee:	4798      	blx	r3
 800a8f0:	f884 5078 	strb.w	r5, [r4, #120]	; 0x78
 800a8f4:	bd38      	pop	{r3, r4, r5, pc}
 800a8f6:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 800a8fa:	e7f8      	b.n	800a8ee <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

0800a8fc <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 800a8fc:	b510      	push	{r4, lr}
 800a8fe:	4b0d      	ldr	r3, [pc, #52]	; (800a934 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 800a900:	781b      	ldrb	r3, [r3, #0]
 800a902:	4604      	mov	r4, r0
 800a904:	b95b      	cbnz	r3, 800a91e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800a906:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 800a90a:	2b02      	cmp	r3, #2
 800a90c:	d007      	beq.n	800a91e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800a90e:	6840      	ldr	r0, [r0, #4]
 800a910:	f000 f92a 	bl	800ab68 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 800a914:	b118      	cbz	r0, 800a91e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800a916:	6862      	ldr	r2, [r4, #4]
 800a918:	7a53      	ldrb	r3, [r2, #9]
 800a91a:	2b00      	cmp	r3, #0
 800a91c:	d0fc      	beq.n	800a918 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 800a91e:	f7f6 f80b 	bl	8000938 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800a922:	4620      	mov	r0, r4
 800a924:	2100      	movs	r1, #0
 800a926:	f7ff ffd7 	bl	800a8d8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800a92a:	4620      	mov	r0, r4
 800a92c:	f7ff fd8c 	bl	800a448 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a930:	bd10      	pop	{r4, pc}
 800a932:	bf00      	nop
 800a934:	20017456 	.word	0x20017456

0800a938 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
 800a938:	b570      	push	{r4, r5, r6, lr}
 800a93a:	4604      	mov	r4, r0
 800a93c:	6803      	ldr	r3, [r0, #0]
 800a93e:	b919      	cbnz	r1, 800a948 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
 800a940:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a942:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a946:	4718      	bx	r3
 800a948:	2200      	movs	r2, #0
 800a94a:	f890 6078 	ldrb.w	r6, [r0, #120]	; 0x78
 800a94e:	f880 2078 	strb.w	r2, [r0, #120]	; 0x78
 800a952:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a954:	4798      	blx	r3
 800a956:	f884 6078 	strb.w	r6, [r4, #120]	; 0x78
 800a95a:	4605      	mov	r5, r0
 800a95c:	2101      	movs	r1, #1
 800a95e:	4620      	mov	r0, r4
 800a960:	f7ff ffba 	bl	800a8d8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800a964:	4628      	mov	r0, r5
 800a966:	bd70      	pop	{r4, r5, r6, pc}

0800a968 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 800a968:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 800a96c:	1a13      	subs	r3, r2, r0
 800a96e:	4258      	negs	r0, r3
 800a970:	4158      	adcs	r0, r3
 800a972:	4770      	bx	lr

0800a974 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 800a974:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 800a978:	1a9b      	subs	r3, r3, r2
 800a97a:	2b00      	cmp	r3, #0
 800a97c:	bfdc      	itt	le
 800a97e:	6882      	ldrle	r2, [r0, #8]
 800a980:	189b      	addle	r3, r3, r2
 800a982:	2b01      	cmp	r3, #1
 800a984:	bfcc      	ite	gt
 800a986:	2000      	movgt	r0, #0
 800a988:	2001      	movle	r0, #1
 800a98a:	4770      	bx	lr

0800a98c <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 800a98c:	6902      	ldr	r2, [r0, #16]
 800a98e:	6843      	ldr	r3, [r0, #4]
 800a990:	2024      	movs	r0, #36	; 0x24
 800a992:	fb00 3002 	mla	r0, r0, r2, r3
 800a996:	4770      	bx	lr

0800a998 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 800a998:	6803      	ldr	r3, [r0, #0]
 800a99a:	691b      	ldr	r3, [r3, #16]
 800a99c:	4718      	bx	r3

0800a99e <_ZN8touchgfx13DMA_Interface7executeEv>:
 800a99e:	b570      	push	{r4, r5, r6, lr}
 800a9a0:	2301      	movs	r3, #1
 800a9a2:	7203      	strb	r3, [r0, #8]
 800a9a4:	4604      	mov	r4, r0
 800a9a6:	6840      	ldr	r0, [r0, #4]
 800a9a8:	6803      	ldr	r3, [r0, #0]
 800a9aa:	699b      	ldr	r3, [r3, #24]
 800a9ac:	4798      	blx	r3
 800a9ae:	6803      	ldr	r3, [r0, #0]
 800a9b0:	2b40      	cmp	r3, #64	; 0x40
 800a9b2:	4605      	mov	r5, r0
 800a9b4:	d00c      	beq.n	800a9d0 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800a9b6:	d810      	bhi.n	800a9da <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 800a9b8:	2b04      	cmp	r3, #4
 800a9ba:	d01d      	beq.n	800a9f8 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 800a9bc:	d804      	bhi.n	800a9c8 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 800a9be:	2b01      	cmp	r3, #1
 800a9c0:	d006      	beq.n	800a9d0 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800a9c2:	2b02      	cmp	r3, #2
 800a9c4:	d02c      	beq.n	800aa20 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 800a9c6:	bd70      	pop	{r4, r5, r6, pc}
 800a9c8:	2b08      	cmp	r3, #8
 800a9ca:	d01d      	beq.n	800aa08 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 800a9cc:	2b20      	cmp	r3, #32
 800a9ce:	d1fa      	bne.n	800a9c6 <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 800a9d0:	6823      	ldr	r3, [r4, #0]
 800a9d2:	4620      	mov	r0, r4
 800a9d4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800a9d6:	4798      	blx	r3
 800a9d8:	e013      	b.n	800aa02 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 800a9da:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800a9de:	d0f7      	beq.n	800a9d0 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800a9e0:	d804      	bhi.n	800a9ec <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 800a9e2:	2b80      	cmp	r3, #128	; 0x80
 800a9e4:	d0f4      	beq.n	800a9d0 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800a9e6:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800a9ea:	e7f0      	b.n	800a9ce <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 800a9ec:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800a9f0:	d0ee      	beq.n	800a9d0 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800a9f2:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800a9f6:	e7e5      	b.n	800a9c4 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 800a9f8:	6823      	ldr	r3, [r4, #0]
 800a9fa:	7f01      	ldrb	r1, [r0, #28]
 800a9fc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a9fe:	4620      	mov	r0, r4
 800aa00:	4798      	blx	r3
 800aa02:	6823      	ldr	r3, [r4, #0]
 800aa04:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800aa06:	e006      	b.n	800aa16 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800aa08:	6823      	ldr	r3, [r4, #0]
 800aa0a:	7f01      	ldrb	r1, [r0, #28]
 800aa0c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800aa0e:	4620      	mov	r0, r4
 800aa10:	4798      	blx	r3
 800aa12:	6823      	ldr	r3, [r4, #0]
 800aa14:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800aa16:	4629      	mov	r1, r5
 800aa18:	4620      	mov	r0, r4
 800aa1a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800aa1e:	4718      	bx	r3
 800aa20:	6823      	ldr	r3, [r4, #0]
 800aa22:	4620      	mov	r0, r4
 800aa24:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800aa26:	4798      	blx	r3
 800aa28:	e7f3      	b.n	800aa12 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

0800aa2a <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 800aa2a:	4770      	bx	lr

0800aa2c <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 800aa2c:	4770      	bx	lr

0800aa2e <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 800aa2e:	4770      	bx	lr

0800aa30 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 800aa30:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 800aa34:	1ad2      	subs	r2, r2, r3
 800aa36:	2a00      	cmp	r2, #0
 800aa38:	b510      	push	{r4, lr}
 800aa3a:	bfdc      	itt	le
 800aa3c:	6884      	ldrle	r4, [r0, #8]
 800aa3e:	1912      	addle	r2, r2, r4
 800aa40:	2a01      	cmp	r2, #1
 800aa42:	dd16      	ble.n	800aa72 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 800aa44:	6842      	ldr	r2, [r0, #4]
 800aa46:	2424      	movs	r4, #36	; 0x24
 800aa48:	fb04 2303 	mla	r3, r4, r3, r2
 800aa4c:	f101 0220 	add.w	r2, r1, #32
 800aa50:	f851 4b04 	ldr.w	r4, [r1], #4
 800aa54:	f843 4b04 	str.w	r4, [r3], #4
 800aa58:	4291      	cmp	r1, r2
 800aa5a:	d1f9      	bne.n	800aa50 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 800aa5c:	780a      	ldrb	r2, [r1, #0]
 800aa5e:	701a      	strb	r2, [r3, #0]
 800aa60:	68c3      	ldr	r3, [r0, #12]
 800aa62:	6882      	ldr	r2, [r0, #8]
 800aa64:	f3bf 8f5b 	dmb	ish
 800aa68:	3301      	adds	r3, #1
 800aa6a:	429a      	cmp	r2, r3
 800aa6c:	bfd8      	it	le
 800aa6e:	1a9b      	suble	r3, r3, r2
 800aa70:	60c3      	str	r3, [r0, #12]
 800aa72:	bd10      	pop	{r4, pc}

0800aa74 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 800aa74:	6903      	ldr	r3, [r0, #16]
 800aa76:	6882      	ldr	r2, [r0, #8]
 800aa78:	f3bf 8f5b 	dmb	ish
 800aa7c:	3301      	adds	r3, #1
 800aa7e:	429a      	cmp	r2, r3
 800aa80:	bfd8      	it	le
 800aa82:	1a9b      	suble	r3, r3, r2
 800aa84:	6103      	str	r3, [r0, #16]
 800aa86:	4770      	bx	lr

0800aa88 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 800aa88:	b570      	push	{r4, r5, r6, lr}
 800aa8a:	4604      	mov	r4, r0
 800aa8c:	460e      	mov	r6, r1
 800aa8e:	6860      	ldr	r0, [r4, #4]
 800aa90:	6803      	ldr	r3, [r0, #0]
 800aa92:	685b      	ldr	r3, [r3, #4]
 800aa94:	4798      	blx	r3
 800aa96:	2800      	cmp	r0, #0
 800aa98:	d1f9      	bne.n	800aa8e <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 800aa9a:	4d0d      	ldr	r5, [pc, #52]	; (800aad0 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 800aa9c:	6828      	ldr	r0, [r5, #0]
 800aa9e:	6803      	ldr	r3, [r0, #0]
 800aaa0:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800aaa2:	4798      	blx	r3
 800aaa4:	f7f5 ff56 	bl	8000954 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 800aaa8:	6828      	ldr	r0, [r5, #0]
 800aaaa:	2101      	movs	r1, #1
 800aaac:	f7ff ff14 	bl	800a8d8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800aab0:	6860      	ldr	r0, [r4, #4]
 800aab2:	6803      	ldr	r3, [r0, #0]
 800aab4:	4631      	mov	r1, r6
 800aab6:	689b      	ldr	r3, [r3, #8]
 800aab8:	4798      	blx	r3
 800aaba:	6823      	ldr	r3, [r4, #0]
 800aabc:	4620      	mov	r0, r4
 800aabe:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800aac0:	4798      	blx	r3
 800aac2:	6828      	ldr	r0, [r5, #0]
 800aac4:	6803      	ldr	r3, [r0, #0]
 800aac6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800aaca:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800aacc:	4718      	bx	r3
 800aace:	bf00      	nop
 800aad0:	20017458 	.word	0x20017458

0800aad4 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800aad4:	b508      	push	{r3, lr}
 800aad6:	f7f5 ff2f 	bl	8000938 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800aada:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800aade:	f7f5 bf33 	b.w	8000948 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800aae2 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800aae2:	b510      	push	{r4, lr}
 800aae4:	2114      	movs	r1, #20
 800aae6:	4604      	mov	r4, r0
 800aae8:	f014 fce5 	bl	801f4b6 <_ZdlPvj>
 800aaec:	4620      	mov	r0, r4
 800aaee:	bd10      	pop	{r4, pc}

0800aaf0 <_ZN8touchgfx13DMA_Interface5startEv>:
 800aaf0:	b510      	push	{r4, lr}
 800aaf2:	4604      	mov	r4, r0
 800aaf4:	6840      	ldr	r0, [r0, #4]
 800aaf6:	6803      	ldr	r3, [r0, #0]
 800aaf8:	681b      	ldr	r3, [r3, #0]
 800aafa:	4798      	blx	r3
 800aafc:	b948      	cbnz	r0, 800ab12 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800aafe:	7a63      	ldrb	r3, [r4, #9]
 800ab00:	b13b      	cbz	r3, 800ab12 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800ab02:	7a23      	ldrb	r3, [r4, #8]
 800ab04:	b92b      	cbnz	r3, 800ab12 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800ab06:	6823      	ldr	r3, [r4, #0]
 800ab08:	4620      	mov	r0, r4
 800ab0a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ab0c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ab10:	4718      	bx	r3
 800ab12:	bd10      	pop	{r4, pc}

0800ab14 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 800ab14:	b570      	push	{r4, r5, r6, lr}
 800ab16:	4604      	mov	r4, r0
 800ab18:	6840      	ldr	r0, [r0, #4]
 800ab1a:	6803      	ldr	r3, [r0, #0]
 800ab1c:	681b      	ldr	r3, [r3, #0]
 800ab1e:	4798      	blx	r3
 800ab20:	4605      	mov	r5, r0
 800ab22:	b930      	cbnz	r0, 800ab32 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800ab24:	7a23      	ldrb	r3, [r4, #8]
 800ab26:	b123      	cbz	r3, 800ab32 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800ab28:	6860      	ldr	r0, [r4, #4]
 800ab2a:	6803      	ldr	r3, [r0, #0]
 800ab2c:	695b      	ldr	r3, [r3, #20]
 800ab2e:	4798      	blx	r3
 800ab30:	7225      	strb	r5, [r4, #8]
 800ab32:	6860      	ldr	r0, [r4, #4]
 800ab34:	6803      	ldr	r3, [r0, #0]
 800ab36:	681b      	ldr	r3, [r3, #0]
 800ab38:	4798      	blx	r3
 800ab3a:	b928      	cbnz	r0, 800ab48 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 800ab3c:	6823      	ldr	r3, [r4, #0]
 800ab3e:	4620      	mov	r0, r4
 800ab40:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ab42:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ab46:	4718      	bx	r3
 800ab48:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ab4c:	f7f5 bf0a 	b.w	8000964 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

0800ab50 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 800ab50:	b510      	push	{r4, lr}
 800ab52:	4c04      	ldr	r4, [pc, #16]	; (800ab64 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800ab54:	6082      	str	r2, [r0, #8]
 800ab56:	2200      	movs	r2, #0
 800ab58:	e9c0 4100 	strd	r4, r1, [r0]
 800ab5c:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800ab60:	bd10      	pop	{r4, pc}
 800ab62:	bf00      	nop
 800ab64:	08022278 	.word	0x08022278

0800ab68 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800ab68:	6840      	ldr	r0, [r0, #4]
 800ab6a:	6803      	ldr	r3, [r0, #0]
 800ab6c:	681b      	ldr	r3, [r3, #0]
 800ab6e:	4718      	bx	r3

0800ab70 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 800ab70:	4b06      	ldr	r3, [pc, #24]	; (800ab8c <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
 800ab72:	60c1      	str	r1, [r0, #12]
 800ab74:	094a      	lsrs	r2, r1, #5
 800ab76:	ea03 2311 	and.w	r3, r3, r1, lsr #8
 800ab7a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 800ab7e:	4313      	orrs	r3, r2
 800ab80:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 800ab84:	4319      	orrs	r1, r3
 800ab86:	8201      	strh	r1, [r0, #16]
 800ab88:	4770      	bx	lr
 800ab8a:	bf00      	nop
 800ab8c:	fffff800 	.word	0xfffff800

0800ab90 <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 800ab90:	f1a0 0008 	sub.w	r0, r0, #8
 800ab94:	e7ec      	b.n	800ab70 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
 800ab96:	bf00      	nop

0800ab98 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
 800ab98:	b508      	push	{r3, lr}
 800ab9a:	4b05      	ldr	r3, [pc, #20]	; (800abb0 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
 800ab9c:	6818      	ldr	r0, [r3, #0]
 800ab9e:	6803      	ldr	r3, [r0, #0]
 800aba0:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 800aba4:	4798      	blx	r3
 800aba6:	1e43      	subs	r3, r0, #1
 800aba8:	4258      	negs	r0, r3
 800abaa:	4158      	adcs	r0, r3
 800abac:	bd08      	pop	{r3, pc}
 800abae:	bf00      	nop
 800abb0:	20017458 	.word	0x20017458

0800abb4 <_ZN8touchgfx13PainterRGB565D1Ev>:
 800abb4:	4770      	bx	lr

0800abb6 <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
 800abb6:	3808      	subs	r0, #8
 800abb8:	4770      	bx	lr

0800abba <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
 800abba:	b430      	push	{r4, r5}
 800abbc:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 800abc0:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
 800abc4:	8a02      	ldrh	r2, [r0, #16]
 800abc6:	9202      	str	r2, [sp, #8]
 800abc8:	f89d 3010 	ldrb.w	r3, [sp, #16]
 800abcc:	68c2      	ldr	r2, [r0, #12]
 800abce:	4629      	mov	r1, r5
 800abd0:	4620      	mov	r0, r4
 800abd2:	bc30      	pop	{r4, r5}
 800abd4:	f7f6 b884 	b.w	8000ce0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

0800abd8 <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
 800abd8:	f7f6 b878 	b.w	8000ccc <_ZN8touchgfx5paint6rgb5658tearDownEv>

0800abdc <_ZN8touchgfx13PainterRGB565D0Ev>:
 800abdc:	b510      	push	{r4, lr}
 800abde:	2114      	movs	r1, #20
 800abe0:	4604      	mov	r4, r0
 800abe2:	f014 fc68 	bl	801f4b6 <_ZdlPvj>
 800abe6:	4620      	mov	r0, r4
 800abe8:	bd10      	pop	{r4, pc}

0800abea <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
 800abea:	f1a0 0008 	sub.w	r0, r0, #8
 800abee:	e7f5      	b.n	800abdc <_ZN8touchgfx13PainterRGB565D0Ev>

0800abf0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 800abf0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800abf2:	6803      	ldr	r3, [r0, #0]
 800abf4:	460d      	mov	r5, r1
 800abf6:	4604      	mov	r4, r0
 800abf8:	4601      	mov	r1, r0
 800abfa:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800abfc:	a802      	add	r0, sp, #8
 800abfe:	4798      	blx	r3
 800ac00:	6828      	ldr	r0, [r5, #0]
 800ac02:	6869      	ldr	r1, [r5, #4]
 800ac04:	466b      	mov	r3, sp
 800ac06:	c303      	stmia	r3!, {r0, r1}
 800ac08:	4668      	mov	r0, sp
 800ac0a:	4619      	mov	r1, r3
 800ac0c:	f7fe ffae 	bl	8009b6c <_ZN8touchgfx4RectaNERKS0_>
 800ac10:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800ac12:	b1a8      	cbz	r0, 800ac40 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x50>
 800ac14:	6803      	ldr	r3, [r0, #0]
 800ac16:	1d21      	adds	r1, r4, #4
 800ac18:	68db      	ldr	r3, [r3, #12]
 800ac1a:	4798      	blx	r3
 800ac1c:	b180      	cbz	r0, 800ac40 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x50>
 800ac1e:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 800ac22:	2b00      	cmp	r3, #0
 800ac24:	dd0c      	ble.n	800ac40 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x50>
 800ac26:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
 800ac2a:	2d00      	cmp	r5, #0
 800ac2c:	dd08      	ble.n	800ac40 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x50>
 800ac2e:	4a2d      	ldr	r2, [pc, #180]	; (800ace4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xf4>)
 800ac30:	7812      	ldrb	r2, [r2, #0]
 800ac32:	b13a      	cbz	r2, 800ac44 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x54>
 800ac34:	2a01      	cmp	r2, #1
 800ac36:	d02d      	beq.n	800ac94 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa4>
 800ac38:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800ac3a:	6803      	ldr	r3, [r0, #0]
 800ac3c:	691b      	ldr	r3, [r3, #16]
 800ac3e:	4798      	blx	r3
 800ac40:	b004      	add	sp, #16
 800ac42:	bd70      	pop	{r4, r5, r6, pc}
 800ac44:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800ac48:	441d      	add	r5, r3
 800ac4a:	b2ad      	uxth	r5, r5
 800ac4c:	b22e      	sxth	r6, r5
 800ac4e:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 800ac52:	42b3      	cmp	r3, r6
 800ac54:	daf0      	bge.n	800ac38 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800ac56:	6823      	ldr	r3, [r4, #0]
 800ac58:	4669      	mov	r1, sp
 800ac5a:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800ac5c:	4620      	mov	r0, r4
 800ac5e:	4798      	blx	r3
 800ac60:	b940      	cbnz	r0, 800ac74 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x84>
 800ac62:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 800ac66:	2b01      	cmp	r3, #1
 800ac68:	d004      	beq.n	800ac74 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x84>
 800ac6a:	3301      	adds	r3, #1
 800ac6c:	105b      	asrs	r3, r3, #1
 800ac6e:	f8ad 3006 	strh.w	r3, [sp, #6]
 800ac72:	e7f0      	b.n	800ac56 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x66>
 800ac74:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800ac78:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800ac7c:	4413      	add	r3, r2
 800ac7e:	b29b      	uxth	r3, r3
 800ac80:	441a      	add	r2, r3
 800ac82:	b212      	sxth	r2, r2
 800ac84:	4296      	cmp	r6, r2
 800ac86:	f8ad 3002 	strh.w	r3, [sp, #2]
 800ac8a:	dae0      	bge.n	800ac4e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 800ac8c:	1aeb      	subs	r3, r5, r3
 800ac8e:	f8ad 3006 	strh.w	r3, [sp, #6]
 800ac92:	e7dc      	b.n	800ac4e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 800ac94:	f8bd 5000 	ldrh.w	r5, [sp]
 800ac98:	441d      	add	r5, r3
 800ac9a:	b2ad      	uxth	r5, r5
 800ac9c:	b22e      	sxth	r6, r5
 800ac9e:	f9bd 3000 	ldrsh.w	r3, [sp]
 800aca2:	42b3      	cmp	r3, r6
 800aca4:	dac8      	bge.n	800ac38 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800aca6:	6823      	ldr	r3, [r4, #0]
 800aca8:	4669      	mov	r1, sp
 800acaa:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800acac:	4620      	mov	r0, r4
 800acae:	4798      	blx	r3
 800acb0:	b940      	cbnz	r0, 800acc4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xd4>
 800acb2:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 800acb6:	2b01      	cmp	r3, #1
 800acb8:	d004      	beq.n	800acc4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xd4>
 800acba:	3301      	adds	r3, #1
 800acbc:	105b      	asrs	r3, r3, #1
 800acbe:	f8ad 3004 	strh.w	r3, [sp, #4]
 800acc2:	e7f0      	b.n	800aca6 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xb6>
 800acc4:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 800acc8:	f8bd 3000 	ldrh.w	r3, [sp]
 800accc:	4413      	add	r3, r2
 800acce:	b29b      	uxth	r3, r3
 800acd0:	441a      	add	r2, r3
 800acd2:	b212      	sxth	r2, r2
 800acd4:	4296      	cmp	r6, r2
 800acd6:	f8ad 3000 	strh.w	r3, [sp]
 800acda:	dae0      	bge.n	800ac9e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 800acdc:	1aeb      	subs	r3, r5, r3
 800acde:	f8ad 3004 	strh.w	r3, [sp, #4]
 800ace2:	e7dc      	b.n	800ac9e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 800ace4:	20017450 	.word	0x20017450

0800ace8 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 800ace8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800acea:	6803      	ldr	r3, [r0, #0]
 800acec:	4604      	mov	r4, r0
 800acee:	4601      	mov	r1, r0
 800acf0:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800acf2:	4668      	mov	r0, sp
 800acf4:	4798      	blx	r3
 800acf6:	2100      	movs	r1, #0
 800acf8:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800acfc:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800ad00:	9102      	str	r1, [sp, #8]
 800ad02:	4668      	mov	r0, sp
 800ad04:	a902      	add	r1, sp, #8
 800ad06:	f8ad 200c 	strh.w	r2, [sp, #12]
 800ad0a:	f8ad 300e 	strh.w	r3, [sp, #14]
 800ad0e:	f7fe ff2d 	bl	8009b6c <_ZN8touchgfx4RectaNERKS0_>
 800ad12:	6823      	ldr	r3, [r4, #0]
 800ad14:	4669      	mov	r1, sp
 800ad16:	691b      	ldr	r3, [r3, #16]
 800ad18:	4620      	mov	r0, r4
 800ad1a:	4798      	blx	r3
 800ad1c:	b004      	add	sp, #16
 800ad1e:	bd10      	pop	{r4, pc}

0800ad20 <_ZN8touchgfx12CanvasWidgetC1Ev>:
 800ad20:	2101      	movs	r1, #1
 800ad22:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 800ad26:	490b      	ldr	r1, [pc, #44]	; (800ad54 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
 800ad28:	6001      	str	r1, [r0, #0]
 800ad2a:	2200      	movs	r2, #0
 800ad2c:	21ff      	movs	r1, #255	; 0xff
 800ad2e:	8082      	strh	r2, [r0, #4]
 800ad30:	80c2      	strh	r2, [r0, #6]
 800ad32:	8102      	strh	r2, [r0, #8]
 800ad34:	8142      	strh	r2, [r0, #10]
 800ad36:	8182      	strh	r2, [r0, #12]
 800ad38:	81c2      	strh	r2, [r0, #14]
 800ad3a:	8202      	strh	r2, [r0, #16]
 800ad3c:	8242      	strh	r2, [r0, #18]
 800ad3e:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800ad42:	61c2      	str	r2, [r0, #28]
 800ad44:	8402      	strh	r2, [r0, #32]
 800ad46:	8442      	strh	r2, [r0, #34]	; 0x22
 800ad48:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800ad4c:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
 800ad50:	6282      	str	r2, [r0, #40]	; 0x28
 800ad52:	4770      	bx	lr
 800ad54:	080222d4 	.word	0x080222d4

0800ad58 <_ZN8touchgfx17AbstractDataGraph9setScaleXEib>:
 800ad58:	6301      	str	r1, [r0, #48]	; 0x30
 800ad5a:	4770      	bx	lr

0800ad5c <_ZNK8touchgfx17AbstractDataGraph9getScaleXEv>:
 800ad5c:	6b00      	ldr	r0, [r0, #48]	; 0x30
 800ad5e:	4770      	bx	lr

0800ad60 <_ZN8touchgfx17AbstractDataGraph9setScaleYEib>:
 800ad60:	6341      	str	r1, [r0, #52]	; 0x34
 800ad62:	4770      	bx	lr

0800ad64 <_ZNK8touchgfx17AbstractDataGraph9getScaleYEv>:
 800ad64:	6b40      	ldr	r0, [r0, #52]	; 0x34
 800ad66:	4770      	bx	lr

0800ad68 <_ZN8touchgfx16DynamicDataGraph14beforeAddValueEv>:
 800ad68:	4770      	bx	lr

0800ad6a <_ZNK8touchgfx16DynamicDataGraph9dataIndexEs>:
 800ad6a:	4608      	mov	r0, r1
 800ad6c:	4770      	bx	lr

0800ad6e <_ZNK8touchgfx16DynamicDataGraph18indexToGlobalIndexEs>:
 800ad6e:	4608      	mov	r0, r1
 800ad70:	4770      	bx	lr

0800ad72 <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE>:
 800ad72:	b530      	push	{r4, r5, lr}
 800ad74:	460d      	mov	r5, r1
 800ad76:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 800ad78:	8949      	ldrh	r1, [r1, #10]
 800ad7a:	1ac9      	subs	r1, r1, r3
 800ad7c:	6803      	ldr	r3, [r0, #0]
 800ad7e:	b085      	sub	sp, #20
 800ad80:	f8d3 3104 	ldr.w	r3, [r3, #260]	; 0x104
 800ad84:	f10d 0206 	add.w	r2, sp, #6
 800ad88:	b209      	sxth	r1, r1
 800ad8a:	4604      	mov	r4, r0
 800ad8c:	4798      	blx	r3
 800ad8e:	b1a0      	cbz	r0, 800adba <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 800ad90:	792b      	ldrb	r3, [r5, #4]
 800ad92:	b993      	cbnz	r3, 800adba <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 800ad94:	f8d4 0128 	ldr.w	r0, [r4, #296]	; 0x128
 800ad98:	b178      	cbz	r0, 800adba <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 800ad9a:	6803      	ldr	r3, [r0, #0]
 800ad9c:	68db      	ldr	r3, [r3, #12]
 800ad9e:	4798      	blx	r3
 800ada0:	b158      	cbz	r0, 800adba <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 800ada2:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 800ada6:	f8d4 0128 	ldr.w	r0, [r4, #296]	; 0x128
 800adaa:	f8ad 3008 	strh.w	r3, [sp, #8]
 800adae:	9503      	str	r5, [sp, #12]
 800adb0:	6803      	ldr	r3, [r0, #0]
 800adb2:	aa02      	add	r2, sp, #8
 800adb4:	689b      	ldr	r3, [r3, #8]
 800adb6:	4621      	mov	r1, r4
 800adb8:	4798      	blx	r3
 800adba:	b005      	add	sp, #20
 800adbc:	bd30      	pop	{r4, r5, pc}

0800adbe <_ZN8touchgfx17AbstractDataGraph20setGraphRangeXScaledEii>:
 800adbe:	b510      	push	{r4, lr}
 800adc0:	428a      	cmp	r2, r1
 800adc2:	bfbe      	ittt	lt
 800adc4:	460b      	movlt	r3, r1
 800adc6:	4611      	movlt	r1, r2
 800adc8:	461a      	movlt	r2, r3
 800adca:	f8d0 312c 	ldr.w	r3, [r0, #300]	; 0x12c
 800adce:	428b      	cmp	r3, r1
 800add0:	4604      	mov	r4, r0
 800add2:	d103      	bne.n	800addc <_ZN8touchgfx17AbstractDataGraph20setGraphRangeXScaledEii+0x1e>
 800add4:	f8d0 3130 	ldr.w	r3, [r0, #304]	; 0x130
 800add8:	4293      	cmp	r3, r2
 800adda:	d011      	beq.n	800ae00 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeXScaledEii+0x42>
 800addc:	f8c4 112c 	str.w	r1, [r4, #300]	; 0x12c
 800ade0:	f8c4 2130 	str.w	r2, [r4, #304]	; 0x130
 800ade4:	f104 00bc 	add.w	r0, r4, #188	; 0xbc
 800ade8:	f005 ffc1 	bl	8010d6e <_ZNK8touchgfx8Drawable10invalidateEv>
 800adec:	f104 0038 	add.w	r0, r4, #56	; 0x38
 800adf0:	f005 ffbd 	bl	8010d6e <_ZNK8touchgfx8Drawable10invalidateEv>
 800adf4:	f104 00e8 	add.w	r0, r4, #232	; 0xe8
 800adf8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800adfc:	f005 bfb7 	b.w	8010d6e <_ZNK8touchgfx8Drawable10invalidateEv>
 800ae00:	bd10      	pop	{r4, pc}

0800ae02 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeYScaledEii>:
 800ae02:	b510      	push	{r4, lr}
 800ae04:	428a      	cmp	r2, r1
 800ae06:	bfbe      	ittt	lt
 800ae08:	460b      	movlt	r3, r1
 800ae0a:	4611      	movlt	r1, r2
 800ae0c:	461a      	movlt	r2, r3
 800ae0e:	f8d0 3134 	ldr.w	r3, [r0, #308]	; 0x134
 800ae12:	428b      	cmp	r3, r1
 800ae14:	4604      	mov	r4, r0
 800ae16:	d103      	bne.n	800ae20 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeYScaledEii+0x1e>
 800ae18:	f8d0 3138 	ldr.w	r3, [r0, #312]	; 0x138
 800ae1c:	4293      	cmp	r3, r2
 800ae1e:	d011      	beq.n	800ae44 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeYScaledEii+0x42>
 800ae20:	f8c4 1134 	str.w	r1, [r4, #308]	; 0x134
 800ae24:	f8c4 2138 	str.w	r2, [r4, #312]	; 0x138
 800ae28:	f104 0064 	add.w	r0, r4, #100	; 0x64
 800ae2c:	f005 ff9f 	bl	8010d6e <_ZNK8touchgfx8Drawable10invalidateEv>
 800ae30:	f104 0038 	add.w	r0, r4, #56	; 0x38
 800ae34:	f005 ff9b 	bl	8010d6e <_ZNK8touchgfx8Drawable10invalidateEv>
 800ae38:	f104 0090 	add.w	r0, r4, #144	; 0x90
 800ae3c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ae40:	f005 bf95 	b.w	8010d6e <_ZNK8touchgfx8Drawable10invalidateEv>
 800ae44:	bd10      	pop	{r4, pc}

0800ae46 <_ZN8touchgfx17AbstractDataGraph5clearEv>:
 800ae46:	2300      	movs	r3, #0
 800ae48:	f8a0 311e 	strh.w	r3, [r0, #286]	; 0x11e
 800ae4c:	3038      	adds	r0, #56	; 0x38
 800ae4e:	f005 bf8e 	b.w	8010d6e <_ZNK8touchgfx8Drawable10invalidateEv>

0800ae52 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi>:
 800ae52:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ae56:	f9b0 311e 	ldrsh.w	r3, [r0, #286]	; 0x11e
 800ae5a:	4605      	mov	r5, r0
 800ae5c:	4688      	mov	r8, r1
 800ae5e:	4617      	mov	r7, r2
 800ae60:	2b00      	cmp	r3, #0
 800ae62:	d03f      	beq.n	800aee4 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x92>
 800ae64:	6803      	ldr	r3, [r0, #0]
 800ae66:	f8d3 3130 	ldr.w	r3, [r3, #304]	; 0x130
 800ae6a:	4798      	blx	r3
 800ae6c:	682b      	ldr	r3, [r5, #0]
 800ae6e:	4604      	mov	r4, r0
 800ae70:	f8d3 3134 	ldr.w	r3, [r3, #308]	; 0x134
 800ae74:	4628      	mov	r0, r5
 800ae76:	4798      	blx	r3
 800ae78:	4284      	cmp	r4, r0
 800ae7a:	bfc8      	it	gt
 800ae7c:	4623      	movgt	r3, r4
 800ae7e:	f9b5 611e 	ldrsh.w	r6, [r5, #286]	; 0x11e
 800ae82:	bfc4      	itt	gt
 800ae84:	4604      	movgt	r4, r0
 800ae86:	4618      	movgt	r0, r3
 800ae88:	ea24 73e4 	bic.w	r3, r4, r4, asr #31
 800ae8c:	42b3      	cmp	r3, r6
 800ae8e:	da29      	bge.n	800aee4 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x92>
 800ae90:	42b0      	cmp	r0, r6
 800ae92:	bfa8      	it	ge
 800ae94:	4630      	movge	r0, r6
 800ae96:	2800      	cmp	r0, #0
 800ae98:	db24      	blt.n	800aee4 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x92>
 800ae9a:	f1b8 0f00 	cmp.w	r8, #0
 800ae9e:	d11e      	bne.n	800aede <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x8c>
 800aea0:	f8d5 2144 	ldr.w	r2, [r5, #324]	; 0x144
 800aea4:	f852 1023 	ldr.w	r1, [r2, r3, lsl #2]
 800aea8:	460c      	mov	r4, r1
 800aeaa:	009a      	lsls	r2, r3, #2
 800aeac:	4298      	cmp	r0, r3
 800aeae:	dd0b      	ble.n	800aec8 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x76>
 800aeb0:	f8d5 6144 	ldr.w	r6, [r5, #324]	; 0x144
 800aeb4:	58b6      	ldr	r6, [r6, r2]
 800aeb6:	42b1      	cmp	r1, r6
 800aeb8:	bfa8      	it	ge
 800aeba:	4631      	movge	r1, r6
 800aebc:	42b4      	cmp	r4, r6
 800aebe:	bfb8      	it	lt
 800aec0:	4634      	movlt	r4, r6
 800aec2:	3301      	adds	r3, #1
 800aec4:	3204      	adds	r2, #4
 800aec6:	e7f1      	b.n	800aeac <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x5a>
 800aec8:	1bc9      	subs	r1, r1, r7
 800aeca:	193a      	adds	r2, r7, r4
 800aecc:	4291      	cmp	r1, r2
 800aece:	d009      	beq.n	800aee4 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x92>
 800aed0:	682b      	ldr	r3, [r5, #0]
 800aed2:	4628      	mov	r0, r5
 800aed4:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800aed8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800aedc:	4718      	bx	r3
 800aede:	427c      	negs	r4, r7
 800aee0:	4639      	mov	r1, r7
 800aee2:	e7e2      	b.n	800aeaa <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x58>
 800aee4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800aee8 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE>:
 800aee8:	b530      	push	{r4, r5, lr}
 800aeea:	790b      	ldrb	r3, [r1, #4]
 800aeec:	2b02      	cmp	r3, #2
 800aeee:	b085      	sub	sp, #20
 800aef0:	4604      	mov	r4, r0
 800aef2:	460d      	mov	r5, r1
 800aef4:	d020      	beq.n	800af38 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 800aef6:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 800aef8:	88c9      	ldrh	r1, [r1, #6]
 800aefa:	1ac9      	subs	r1, r1, r3
 800aefc:	6803      	ldr	r3, [r0, #0]
 800aefe:	f10d 0206 	add.w	r2, sp, #6
 800af02:	f8d3 3104 	ldr.w	r3, [r3, #260]	; 0x104
 800af06:	b209      	sxth	r1, r1
 800af08:	4798      	blx	r3
 800af0a:	b1a8      	cbz	r0, 800af38 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 800af0c:	792b      	ldrb	r3, [r5, #4]
 800af0e:	2b01      	cmp	r3, #1
 800af10:	d812      	bhi.n	800af38 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 800af12:	f8d4 0124 	ldr.w	r0, [r4, #292]	; 0x124
 800af16:	b178      	cbz	r0, 800af38 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 800af18:	6803      	ldr	r3, [r0, #0]
 800af1a:	68db      	ldr	r3, [r3, #12]
 800af1c:	4798      	blx	r3
 800af1e:	b158      	cbz	r0, 800af38 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 800af20:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 800af24:	f8d4 0124 	ldr.w	r0, [r4, #292]	; 0x124
 800af28:	f8ad 3008 	strh.w	r3, [sp, #8]
 800af2c:	9503      	str	r5, [sp, #12]
 800af2e:	6803      	ldr	r3, [r0, #0]
 800af30:	aa02      	add	r2, sp, #8
 800af32:	689b      	ldr	r3, [r3, #8]
 800af34:	4621      	mov	r1, r4
 800af36:	4798      	blx	r3
 800af38:	b005      	add	sp, #20
 800af3a:	bd30      	pop	{r4, r5, pc}

0800af3c <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_>:
 800af3c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800af40:	4604      	mov	r4, r0
 800af42:	f9b0 011e 	ldrsh.w	r0, [r0, #286]	; 0x11e
 800af46:	9e06      	ldr	r6, [sp, #24]
 800af48:	4690      	mov	r8, r2
 800af4a:	461f      	mov	r7, r3
 800af4c:	b928      	cbnz	r0, 800af5a <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x1e>
 800af4e:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800af52:	8033      	strh	r3, [r6, #0]
 800af54:	803b      	strh	r3, [r7, #0]
 800af56:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800af5a:	f8b4 2118 	ldrh.w	r2, [r4, #280]	; 0x118
 800af5e:	f9b4 0116 	ldrsh.w	r0, [r4, #278]	; 0x116
 800af62:	1883      	adds	r3, r0, r2
 800af64:	f8b4 2040 	ldrh.w	r2, [r4, #64]	; 0x40
 800af68:	1ad2      	subs	r2, r2, r3
 800af6a:	b212      	sxth	r2, r2
 800af6c:	2a01      	cmp	r2, #1
 800af6e:	dc07      	bgt.n	800af80 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x44>
 800af70:	2300      	movs	r3, #0
 800af72:	803b      	strh	r3, [r7, #0]
 800af74:	f8b4 311e 	ldrh.w	r3, [r4, #286]	; 0x11e
 800af78:	3b01      	subs	r3, #1
 800af7a:	8033      	strh	r3, [r6, #0]
 800af7c:	2001      	movs	r0, #1
 800af7e:	e7ea      	b.n	800af56 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x1a>
 800af80:	1a08      	subs	r0, r1, r0
 800af82:	f8d4 3130 	ldr.w	r3, [r4, #304]	; 0x130
 800af86:	f8d4 112c 	ldr.w	r1, [r4, #300]	; 0x12c
 800af8a:	6b25      	ldr	r5, [r4, #48]	; 0x30
 800af8c:	1a5b      	subs	r3, r3, r1
 800af8e:	ea4f 1040 	mov.w	r0, r0, lsl #5
 800af92:	d45b      	bmi.n	800b04c <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x110>
 800af94:	eb05 0343 	add.w	r3, r5, r3, lsl #1
 800af98:	fb93 f1f5 	sdiv	r1, r3, r5
 800af9c:	2302      	movs	r3, #2
 800af9e:	fb91 f1f3 	sdiv	r1, r1, r3
 800afa2:	3a01      	subs	r2, #1
 800afa4:	f006 f8a4 	bl	80110f0 <_ZN8touchgfx6muldivElll>
 800afa8:	f8d4 112c 	ldr.w	r1, [r4, #300]	; 0x12c
 800afac:	f8d4 c030 	ldr.w	ip, [r4, #48]	; 0x30
 800afb0:	2900      	cmp	r1, #0
 800afb2:	db57      	blt.n	800b064 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x128>
 800afb4:	eb0c 0341 	add.w	r3, ip, r1, lsl #1
 800afb8:	2502      	movs	r5, #2
 800afba:	fb93 f3fc 	sdiv	r3, r3, ip
 800afbe:	fb93 f3f5 	sdiv	r3, r3, r5
 800afc2:	eb00 1543 	add.w	r5, r0, r3, lsl #5
 800afc6:	f8d4 2130 	ldr.w	r2, [r4, #304]	; 0x130
 800afca:	f9b4 3116 	ldrsh.w	r3, [r4, #278]	; 0x116
 800afce:	1a52      	subs	r2, r2, r1
 800afd0:	eba8 0003 	sub.w	r0, r8, r3
 800afd4:	ea4f 1040 	mov.w	r0, r0, lsl #5
 800afd8:	d450      	bmi.n	800b07c <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x140>
 800afda:	eb0c 0242 	add.w	r2, ip, r2, lsl #1
 800afde:	fb92 f1fc 	sdiv	r1, r2, ip
 800afe2:	2202      	movs	r2, #2
 800afe4:	fb91 f1f2 	sdiv	r1, r1, r2
 800afe8:	f8b4 2118 	ldrh.w	r2, [r4, #280]	; 0x118
 800afec:	4413      	add	r3, r2
 800afee:	f8b4 2040 	ldrh.w	r2, [r4, #64]	; 0x40
 800aff2:	1ad2      	subs	r2, r2, r3
 800aff4:	b212      	sxth	r2, r2
 800aff6:	3a01      	subs	r2, #1
 800aff8:	f006 f87a 	bl	80110f0 <_ZN8touchgfx6muldivElll>
 800affc:	f8d4 312c 	ldr.w	r3, [r4, #300]	; 0x12c
 800b000:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800b002:	2b00      	cmp	r3, #0
 800b004:	db46      	blt.n	800b094 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x158>
 800b006:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 800b00a:	fb93 f3f2 	sdiv	r3, r3, r2
 800b00e:	2202      	movs	r2, #2
 800b010:	fb93 f3f2 	sdiv	r3, r3, r2
 800b014:	eb00 1343 	add.w	r3, r0, r3, lsl #5
 800b018:	429d      	cmp	r5, r3
 800b01a:	bfde      	ittt	le
 800b01c:	461a      	movle	r2, r3
 800b01e:	462b      	movle	r3, r5
 800b020:	4615      	movle	r5, r2
 800b022:	2d00      	cmp	r5, #0
 800b024:	bfa4      	itt	ge
 800b026:	351f      	addge	r5, #31
 800b028:	116d      	asrge	r5, r5, #5
 800b02a:	f04f 0020 	mov.w	r0, #32
 800b02e:	bfb8      	it	lt
 800b030:	fb95 f5f0 	sdivlt	r5, r5, r0
 800b034:	b22d      	sxth	r5, r5
 800b036:	2d00      	cmp	r5, #0
 800b038:	b21b      	sxth	r3, r3
 800b03a:	fb93 f3f0 	sdiv	r3, r3, r0
 800b03e:	803b      	strh	r3, [r7, #0]
 800b040:	8035      	strh	r5, [r6, #0]
 800b042:	da33      	bge.n	800b0ac <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x170>
 800b044:	2000      	movs	r0, #0
 800b046:	8030      	strh	r0, [r6, #0]
 800b048:	8038      	strh	r0, [r7, #0]
 800b04a:	e784      	b.n	800af56 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x1a>
 800b04c:	f06f 0101 	mvn.w	r1, #1
 800b050:	fb01 5303 	mla	r3, r1, r3, r5
 800b054:	1e59      	subs	r1, r3, #1
 800b056:	2302      	movs	r3, #2
 800b058:	fb91 f1f5 	sdiv	r1, r1, r5
 800b05c:	fb91 f1f3 	sdiv	r1, r1, r3
 800b060:	4249      	negs	r1, r1
 800b062:	e79e      	b.n	800afa2 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x66>
 800b064:	f06f 0301 	mvn.w	r3, #1
 800b068:	fb03 c301 	mla	r3, r3, r1, ip
 800b06c:	3b01      	subs	r3, #1
 800b06e:	2502      	movs	r5, #2
 800b070:	fb93 f3fc 	sdiv	r3, r3, ip
 800b074:	fb93 f3f5 	sdiv	r3, r3, r5
 800b078:	425b      	negs	r3, r3
 800b07a:	e7a2      	b.n	800afc2 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x86>
 800b07c:	f06f 0101 	mvn.w	r1, #1
 800b080:	fb01 c202 	mla	r2, r1, r2, ip
 800b084:	1e51      	subs	r1, r2, #1
 800b086:	2202      	movs	r2, #2
 800b088:	fb91 f1fc 	sdiv	r1, r1, ip
 800b08c:	fb91 f1f2 	sdiv	r1, r1, r2
 800b090:	4249      	negs	r1, r1
 800b092:	e7a9      	b.n	800afe8 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0xac>
 800b094:	f06f 0101 	mvn.w	r1, #1
 800b098:	fb01 2303 	mla	r3, r1, r3, r2
 800b09c:	3b01      	subs	r3, #1
 800b09e:	fb93 f3f2 	sdiv	r3, r3, r2
 800b0a2:	2202      	movs	r2, #2
 800b0a4:	fb93 f3f2 	sdiv	r3, r3, r2
 800b0a8:	425b      	negs	r3, r3
 800b0aa:	e7b3      	b.n	800b014 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0xd8>
 800b0ac:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800b0b0:	f9b7 2000 	ldrsh.w	r2, [r7]
 800b0b4:	4293      	cmp	r3, r2
 800b0b6:	dc05      	bgt.n	800b0c4 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x188>
 800b0b8:	3b01      	subs	r3, #1
 800b0ba:	b21b      	sxth	r3, r3
 800b0bc:	8033      	strh	r3, [r6, #0]
 800b0be:	2000      	movs	r0, #0
 800b0c0:	803b      	strh	r3, [r7, #0]
 800b0c2:	e748      	b.n	800af56 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x1a>
 800b0c4:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 800b0c8:	803a      	strh	r2, [r7, #0]
 800b0ca:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800b0ce:	f9b6 2000 	ldrsh.w	r2, [r6]
 800b0d2:	4293      	cmp	r3, r2
 800b0d4:	bfdc      	itt	le
 800b0d6:	f103 33ff 	addle.w	r3, r3, #4294967295
 800b0da:	b21a      	sxthle	r2, r3
 800b0dc:	8032      	strh	r2, [r6, #0]
 800b0de:	e74d      	b.n	800af7c <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x40>

0800b0e0 <_ZN8touchgfx9ContainerC1Ev>:
 800b0e0:	2101      	movs	r1, #1
 800b0e2:	2200      	movs	r2, #0
 800b0e4:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 800b0e8:	4909      	ldr	r1, [pc, #36]	; (800b110 <_ZN8touchgfx9ContainerC1Ev+0x30>)
 800b0ea:	8082      	strh	r2, [r0, #4]
 800b0ec:	80c2      	strh	r2, [r0, #6]
 800b0ee:	8102      	strh	r2, [r0, #8]
 800b0f0:	8142      	strh	r2, [r0, #10]
 800b0f2:	8182      	strh	r2, [r0, #12]
 800b0f4:	81c2      	strh	r2, [r0, #14]
 800b0f6:	8202      	strh	r2, [r0, #16]
 800b0f8:	8242      	strh	r2, [r0, #18]
 800b0fa:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800b0fe:	61c2      	str	r2, [r0, #28]
 800b100:	8402      	strh	r2, [r0, #32]
 800b102:	8442      	strh	r2, [r0, #34]	; 0x22
 800b104:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800b108:	6001      	str	r1, [r0, #0]
 800b10a:	6282      	str	r2, [r0, #40]	; 0x28
 800b10c:	4770      	bx	lr
 800b10e:	bf00      	nop
 800b110:	080221dc 	.word	0x080221dc

0800b114 <_ZNK8touchgfx7CWRUtil2Q55roundEv>:
 800b114:	6800      	ldr	r0, [r0, #0]
 800b116:	2800      	cmp	r0, #0
 800b118:	bfbd      	ittte	lt
 800b11a:	380f      	sublt	r0, #15
 800b11c:	2320      	movlt	r3, #32
 800b11e:	fb90 f0f3 	sdivlt	r0, r0, r3
 800b122:	3010      	addge	r0, #16
 800b124:	bfa8      	it	ge
 800b126:	1140      	asrge	r0, r0, #5
 800b128:	4770      	bx	lr

0800b12a <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs>:
 800b12a:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b12e:	4605      	mov	r5, r0
 800b130:	f9b0 011e 	ldrsh.w	r0, [r0, #286]	; 0x11e
 800b134:	4688      	mov	r8, r1
 800b136:	4691      	mov	r9, r2
 800b138:	469a      	mov	sl, r3
 800b13a:	b360      	cbz	r0, 800b196 <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs+0x6c>
 800b13c:	2700      	movs	r7, #0
 800b13e:	f04f 3bff 	mov.w	fp, #4294967295
 800b142:	f9b5 311e 	ldrsh.w	r3, [r5, #286]	; 0x11e
 800b146:	b23e      	sxth	r6, r7
 800b148:	42b3      	cmp	r3, r6
 800b14a:	dd23      	ble.n	800b194 <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs+0x6a>
 800b14c:	682b      	ldr	r3, [r5, #0]
 800b14e:	4631      	mov	r1, r6
 800b150:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800b154:	4628      	mov	r0, r5
 800b156:	4798      	blx	r3
 800b158:	9001      	str	r0, [sp, #4]
 800b15a:	a801      	add	r0, sp, #4
 800b15c:	f7ff ffda 	bl	800b114 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800b160:	682b      	ldr	r3, [r5, #0]
 800b162:	eba0 0008 	sub.w	r0, r0, r8
 800b166:	b204      	sxth	r4, r0
 800b168:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 800b16c:	4631      	mov	r1, r6
 800b16e:	4628      	mov	r0, r5
 800b170:	4798      	blx	r3
 800b172:	9001      	str	r0, [sp, #4]
 800b174:	a801      	add	r0, sp, #4
 800b176:	f7ff ffcd 	bl	800b114 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800b17a:	eba0 0009 	sub.w	r0, r0, r9
 800b17e:	fb10 f000 	smulbb	r0, r0, r0
 800b182:	fb04 0404 	mla	r4, r4, r4, r0
 800b186:	455c      	cmp	r4, fp
 800b188:	bf3c      	itt	cc
 800b18a:	f8aa 6000 	strhcc.w	r6, [sl]
 800b18e:	46a3      	movcc	fp, r4
 800b190:	3701      	adds	r7, #1
 800b192:	e7d6      	b.n	800b142 <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs+0x18>
 800b194:	2001      	movs	r0, #1
 800b196:	b003      	add	sp, #12
 800b198:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800b19c <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs>:
 800b19c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800b1a0:	4604      	mov	r4, r0
 800b1a2:	f9b0 011e 	ldrsh.w	r0, [r0, #286]	; 0x11e
 800b1a6:	4688      	mov	r8, r1
 800b1a8:	4691      	mov	r9, r2
 800b1aa:	b1f8      	cbz	r0, 800b1ec <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs+0x50>
 800b1ac:	2500      	movs	r5, #0
 800b1ae:	f04f 37ff 	mov.w	r7, #4294967295
 800b1b2:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800b1b6:	b22e      	sxth	r6, r5
 800b1b8:	42b3      	cmp	r3, r6
 800b1ba:	dd16      	ble.n	800b1ea <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs+0x4e>
 800b1bc:	6823      	ldr	r3, [r4, #0]
 800b1be:	4631      	mov	r1, r6
 800b1c0:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800b1c4:	4620      	mov	r0, r4
 800b1c6:	4798      	blx	r3
 800b1c8:	9001      	str	r0, [sp, #4]
 800b1ca:	a801      	add	r0, sp, #4
 800b1cc:	f7ff ffa2 	bl	800b114 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800b1d0:	b200      	sxth	r0, r0
 800b1d2:	eba0 0008 	sub.w	r0, r0, r8
 800b1d6:	2800      	cmp	r0, #0
 800b1d8:	bfb8      	it	lt
 800b1da:	4240      	neglt	r0, r0
 800b1dc:	42b8      	cmp	r0, r7
 800b1de:	bf3c      	itt	cc
 800b1e0:	f8a9 6000 	strhcc.w	r6, [r9]
 800b1e4:	4607      	movcc	r7, r0
 800b1e6:	3501      	adds	r5, #1
 800b1e8:	e7e3      	b.n	800b1b2 <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs+0x16>
 800b1ea:	2001      	movs	r0, #1
 800b1ec:	b003      	add	sp, #12
 800b1ee:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800b1f2 <_ZN8touchgfx17AbstractDataGraph19setGraphAreaPaddingEssss>:
 800b1f2:	f8a0 3118 	strh.w	r3, [r0, #280]	; 0x118
 800b1f6:	f9bd 3000 	ldrsh.w	r3, [sp]
 800b1fa:	f8a0 1114 	strh.w	r1, [r0, #276]	; 0x114
 800b1fe:	f8a0 2116 	strh.w	r2, [r0, #278]	; 0x116
 800b202:	f8a0 311a 	strh.w	r3, [r0, #282]	; 0x11a
 800b206:	4770      	bx	lr

0800b208 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>:
 800b208:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800b20a:	4604      	mov	r4, r0
 800b20c:	3038      	adds	r0, #56	; 0x38
 800b20e:	460d      	mov	r5, r1
 800b210:	f7fe fb1c 	bl	800984c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800b214:	f9b4 2042 	ldrsh.w	r2, [r4, #66]	; 0x42
 800b218:	9200      	str	r2, [sp, #0]
 800b21a:	2200      	movs	r2, #0
 800b21c:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 800b220:	4611      	mov	r1, r2
 800b222:	4628      	mov	r0, r5
 800b224:	f7f7 fcf9 	bl	8002c1a <_ZN8touchgfx8Drawable11setPositionEssss>
 800b228:	b003      	add	sp, #12
 800b22a:	bd30      	pop	{r4, r5, pc}

0800b22c <_ZN8touchgfx17AbstractDataGraph14addLeftElementERNS_23AbstractGraphDecorationE>:
 800b22c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800b22e:	4604      	mov	r4, r0
 800b230:	3064      	adds	r0, #100	; 0x64
 800b232:	460d      	mov	r5, r1
 800b234:	f7fe fb0a 	bl	800984c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800b238:	f9b4 206e 	ldrsh.w	r2, [r4, #110]	; 0x6e
 800b23c:	9200      	str	r2, [sp, #0]
 800b23e:	2200      	movs	r2, #0
 800b240:	f9b4 306c 	ldrsh.w	r3, [r4, #108]	; 0x6c
 800b244:	4611      	mov	r1, r2
 800b246:	4628      	mov	r0, r5
 800b248:	f7f7 fce7 	bl	8002c1a <_ZN8touchgfx8Drawable11setPositionEssss>
 800b24c:	b003      	add	sp, #12
 800b24e:	bd30      	pop	{r4, r5, pc}

0800b250 <_ZN8touchgfx17AbstractDataGraph16addBottomElementERNS_23AbstractGraphDecorationE>:
 800b250:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800b252:	4604      	mov	r4, r0
 800b254:	30e8      	adds	r0, #232	; 0xe8
 800b256:	460d      	mov	r5, r1
 800b258:	f7fe faf8 	bl	800984c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800b25c:	f9b4 20f2 	ldrsh.w	r2, [r4, #242]	; 0xf2
 800b260:	9200      	str	r2, [sp, #0]
 800b262:	2200      	movs	r2, #0
 800b264:	f9b4 30f0 	ldrsh.w	r3, [r4, #240]	; 0xf0
 800b268:	4611      	mov	r1, r2
 800b26a:	4628      	mov	r0, r5
 800b26c:	f7f7 fcd5 	bl	8002c1a <_ZN8touchgfx8Drawable11setPositionEssss>
 800b270:	b003      	add	sp, #12
 800b272:	bd30      	pop	{r4, r5, pc}

0800b274 <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs>:
 800b274:	b538      	push	{r3, r4, r5, lr}
 800b276:	f9b0 311e 	ldrsh.w	r3, [r0, #286]	; 0x11e
 800b27a:	428b      	cmp	r3, r1
 800b27c:	460d      	mov	r5, r1
 800b27e:	dd08      	ble.n	800b292 <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs+0x1e>
 800b280:	6e04      	ldr	r4, [r0, #96]	; 0x60
 800b282:	b134      	cbz	r4, 800b292 <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs+0x1e>
 800b284:	6823      	ldr	r3, [r4, #0]
 800b286:	4620      	mov	r0, r4
 800b288:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800b28a:	4629      	mov	r1, r5
 800b28c:	4798      	blx	r3
 800b28e:	69a4      	ldr	r4, [r4, #24]
 800b290:	e7f7      	b.n	800b282 <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs+0xe>
 800b292:	bd38      	pop	{r3, r4, r5, pc}

0800b294 <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs>:
 800b294:	b570      	push	{r4, r5, r6, lr}
 800b296:	f8d0 40e4 	ldr.w	r4, [r0, #228]	; 0xe4
 800b29a:	4606      	mov	r6, r0
 800b29c:	460d      	mov	r5, r1
 800b29e:	b134      	cbz	r4, 800b2ae <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs+0x1a>
 800b2a0:	6823      	ldr	r3, [r4, #0]
 800b2a2:	4620      	mov	r0, r4
 800b2a4:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800b2a6:	4629      	mov	r1, r5
 800b2a8:	4798      	blx	r3
 800b2aa:	69a4      	ldr	r4, [r4, #24]
 800b2ac:	e7f7      	b.n	800b29e <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs+0xa>
 800b2ae:	f8d6 4110 	ldr.w	r4, [r6, #272]	; 0x110
 800b2b2:	b134      	cbz	r4, 800b2c2 <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs+0x2e>
 800b2b4:	6823      	ldr	r3, [r4, #0]
 800b2b6:	4620      	mov	r0, r4
 800b2b8:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800b2ba:	4629      	mov	r1, r5
 800b2bc:	4798      	blx	r3
 800b2be:	69a4      	ldr	r4, [r4, #24]
 800b2c0:	e7f7      	b.n	800b2b2 <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs+0x1e>
 800b2c2:	bd70      	pop	{r4, r5, r6, pc}

0800b2c4 <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv>:
 800b2c4:	b538      	push	{r3, r4, r5, lr}
 800b2c6:	4604      	mov	r4, r0
 800b2c8:	2500      	movs	r5, #0
 800b2ca:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800b2ce:	42ab      	cmp	r3, r5
 800b2d0:	db05      	blt.n	800b2de <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv+0x1a>
 800b2d2:	b229      	sxth	r1, r5
 800b2d4:	4620      	mov	r0, r4
 800b2d6:	f7ff ffdd 	bl	800b294 <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs>
 800b2da:	3501      	adds	r5, #1
 800b2dc:	e7f5      	b.n	800b2ca <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv+0x6>
 800b2de:	f104 00bc 	add.w	r0, r4, #188	; 0xbc
 800b2e2:	f005 fd44 	bl	8010d6e <_ZNK8touchgfx8Drawable10invalidateEv>
 800b2e6:	f104 00e8 	add.w	r0, r4, #232	; 0xe8
 800b2ea:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800b2ee:	f005 bd3e 	b.w	8010d6e <_ZNK8touchgfx8Drawable10invalidateEv>

0800b2f2 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>:
 800b2f2:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800b2f4:	6e05      	ldr	r5, [r0, #96]	; 0x60
 800b2f6:	4604      	mov	r4, r0
 800b2f8:	b15d      	cbz	r5, 800b312 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x20>
 800b2fa:	f9b4 2042 	ldrsh.w	r2, [r4, #66]	; 0x42
 800b2fe:	9200      	str	r2, [sp, #0]
 800b300:	2200      	movs	r2, #0
 800b302:	4628      	mov	r0, r5
 800b304:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 800b308:	4611      	mov	r1, r2
 800b30a:	f7f7 fc86 	bl	8002c1a <_ZN8touchgfx8Drawable11setPositionEssss>
 800b30e:	69ad      	ldr	r5, [r5, #24]
 800b310:	e7f2      	b.n	800b2f8 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x6>
 800b312:	f8d4 50e4 	ldr.w	r5, [r4, #228]	; 0xe4
 800b316:	b15d      	cbz	r5, 800b330 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x3e>
 800b318:	f9b4 20c6 	ldrsh.w	r2, [r4, #198]	; 0xc6
 800b31c:	9200      	str	r2, [sp, #0]
 800b31e:	2200      	movs	r2, #0
 800b320:	4628      	mov	r0, r5
 800b322:	f9b4 30c4 	ldrsh.w	r3, [r4, #196]	; 0xc4
 800b326:	4611      	mov	r1, r2
 800b328:	f7f7 fc77 	bl	8002c1a <_ZN8touchgfx8Drawable11setPositionEssss>
 800b32c:	69ad      	ldr	r5, [r5, #24]
 800b32e:	e7f2      	b.n	800b316 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x24>
 800b330:	f8d4 508c 	ldr.w	r5, [r4, #140]	; 0x8c
 800b334:	b15d      	cbz	r5, 800b34e <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x5c>
 800b336:	f9b4 206e 	ldrsh.w	r2, [r4, #110]	; 0x6e
 800b33a:	9200      	str	r2, [sp, #0]
 800b33c:	2200      	movs	r2, #0
 800b33e:	4628      	mov	r0, r5
 800b340:	f9b4 306c 	ldrsh.w	r3, [r4, #108]	; 0x6c
 800b344:	4611      	mov	r1, r2
 800b346:	f7f7 fc68 	bl	8002c1a <_ZN8touchgfx8Drawable11setPositionEssss>
 800b34a:	69ad      	ldr	r5, [r5, #24]
 800b34c:	e7f2      	b.n	800b334 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x42>
 800b34e:	f8d4 50b8 	ldr.w	r5, [r4, #184]	; 0xb8
 800b352:	b15d      	cbz	r5, 800b36c <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x7a>
 800b354:	f9b4 209a 	ldrsh.w	r2, [r4, #154]	; 0x9a
 800b358:	9200      	str	r2, [sp, #0]
 800b35a:	2200      	movs	r2, #0
 800b35c:	4628      	mov	r0, r5
 800b35e:	f9b4 3098 	ldrsh.w	r3, [r4, #152]	; 0x98
 800b362:	4611      	mov	r1, r2
 800b364:	f7f7 fc59 	bl	8002c1a <_ZN8touchgfx8Drawable11setPositionEssss>
 800b368:	69ad      	ldr	r5, [r5, #24]
 800b36a:	e7f2      	b.n	800b352 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x60>
 800b36c:	f8d4 5110 	ldr.w	r5, [r4, #272]	; 0x110
 800b370:	b15d      	cbz	r5, 800b38a <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x98>
 800b372:	f9b4 20f2 	ldrsh.w	r2, [r4, #242]	; 0xf2
 800b376:	9200      	str	r2, [sp, #0]
 800b378:	2200      	movs	r2, #0
 800b37a:	4628      	mov	r0, r5
 800b37c:	f9b4 30f0 	ldrsh.w	r3, [r4, #240]	; 0xf0
 800b380:	4611      	mov	r1, r2
 800b382:	f7f7 fc4a 	bl	8002c1a <_ZN8touchgfx8Drawable11setPositionEssss>
 800b386:	69ad      	ldr	r5, [r5, #24]
 800b388:	e7f2      	b.n	800b370 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x7e>
 800b38a:	6823      	ldr	r3, [r4, #0]
 800b38c:	695b      	ldr	r3, [r3, #20]
 800b38e:	4620      	mov	r0, r4
 800b390:	b003      	add	sp, #12
 800b392:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800b396:	4718      	bx	r3

0800b398 <_ZN8touchgfx17AbstractDataGraph8setWidthEs>:
 800b398:	b430      	push	{r4, r5}
 800b39a:	f8b0 4098 	ldrh.w	r4, [r0, #152]	; 0x98
 800b39e:	f8a0 10c4 	strh.w	r1, [r0, #196]	; 0xc4
 800b3a2:	b28a      	uxth	r2, r1
 800b3a4:	1b15      	subs	r5, r2, r4
 800b3a6:	f8a0 5094 	strh.w	r5, [r0, #148]	; 0x94
 800b3aa:	f8b0 506c 	ldrh.w	r5, [r0, #108]	; 0x6c
 800b3ae:	f8a0 10f0 	strh.w	r1, [r0, #240]	; 0xf0
 800b3b2:	442c      	add	r4, r5
 800b3b4:	1b12      	subs	r2, r2, r4
 800b3b6:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 800b3ba:	8101      	strh	r1, [r0, #8]
 800b3bc:	bc30      	pop	{r4, r5}
 800b3be:	f7ff bf98 	b.w	800b2f2 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>

0800b3c2 <_ZN8touchgfx17AbstractDataGraph9setHeightEs>:
 800b3c2:	b430      	push	{r4, r5}
 800b3c4:	f8b0 40f2 	ldrh.w	r4, [r0, #242]	; 0xf2
 800b3c8:	f8a0 106e 	strh.w	r1, [r0, #110]	; 0x6e
 800b3cc:	b28a      	uxth	r2, r1
 800b3ce:	1b15      	subs	r5, r2, r4
 800b3d0:	f8a0 50ee 	strh.w	r5, [r0, #238]	; 0xee
 800b3d4:	f8b0 50c6 	ldrh.w	r5, [r0, #198]	; 0xc6
 800b3d8:	f8a0 109a 	strh.w	r1, [r0, #154]	; 0x9a
 800b3dc:	442c      	add	r4, r5
 800b3de:	1b12      	subs	r2, r2, r4
 800b3e0:	f8a0 2042 	strh.w	r2, [r0, #66]	; 0x42
 800b3e4:	8141      	strh	r1, [r0, #10]
 800b3e6:	bc30      	pop	{r4, r5}
 800b3e8:	f7ff bf83 	b.w	800b2f2 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>

0800b3ec <_ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss>:
 800b3ec:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800b3f0:	f9bd 7028 	ldrsh.w	r7, [sp, #40]	; 0x28
 800b3f4:	fa1f fa83 	uxth.w	sl, r3
 800b3f8:	4699      	mov	r9, r3
 800b3fa:	8903      	ldrh	r3, [r0, #8]
 800b3fc:	4604      	mov	r4, r0
 800b3fe:	4615      	mov	r5, r2
 800b400:	fa1f f887 	uxth.w	r8, r7
 800b404:	4452      	add	r2, sl
 800b406:	8940      	ldrh	r0, [r0, #10]
 800b408:	1a9b      	subs	r3, r3, r2
 800b40a:	eb08 0201 	add.w	r2, r8, r1
 800b40e:	1a80      	subs	r0, r0, r2
 800b410:	b200      	sxth	r0, r0
 800b412:	460e      	mov	r6, r1
 800b414:	9000      	str	r0, [sp, #0]
 800b416:	460a      	mov	r2, r1
 800b418:	f104 0038 	add.w	r0, r4, #56	; 0x38
 800b41c:	4629      	mov	r1, r5
 800b41e:	b21b      	sxth	r3, r3
 800b420:	f7f7 fbfb 	bl	8002c1a <_ZN8touchgfx8Drawable11setPositionEssss>
 800b424:	2200      	movs	r2, #0
 800b426:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800b42a:	9600      	str	r6, [sp, #0]
 800b42c:	4611      	mov	r1, r2
 800b42e:	f104 00bc 	add.w	r0, r4, #188	; 0xbc
 800b432:	f7f7 fbf2 	bl	8002c1a <_ZN8touchgfx8Drawable11setPositionEssss>
 800b436:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800b43a:	9300      	str	r3, [sp, #0]
 800b43c:	2200      	movs	r2, #0
 800b43e:	462b      	mov	r3, r5
 800b440:	4611      	mov	r1, r2
 800b442:	f104 0064 	add.w	r0, r4, #100	; 0x64
 800b446:	f7f7 fbe8 	bl	8002c1a <_ZN8touchgfx8Drawable11setPositionEssss>
 800b44a:	8921      	ldrh	r1, [r4, #8]
 800b44c:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800b450:	9300      	str	r3, [sp, #0]
 800b452:	eba1 010a 	sub.w	r1, r1, sl
 800b456:	464b      	mov	r3, r9
 800b458:	f104 0090 	add.w	r0, r4, #144	; 0x90
 800b45c:	2200      	movs	r2, #0
 800b45e:	b209      	sxth	r1, r1
 800b460:	f7f7 fbdb 	bl	8002c1a <_ZN8touchgfx8Drawable11setPositionEssss>
 800b464:	8962      	ldrh	r2, [r4, #10]
 800b466:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800b46a:	9700      	str	r7, [sp, #0]
 800b46c:	eba2 0208 	sub.w	r2, r2, r8
 800b470:	f104 00e8 	add.w	r0, r4, #232	; 0xe8
 800b474:	b212      	sxth	r2, r2
 800b476:	2100      	movs	r1, #0
 800b478:	f7f7 fbcf 	bl	8002c1a <_ZN8touchgfx8Drawable11setPositionEssss>
 800b47c:	4620      	mov	r0, r4
 800b47e:	b002      	add	sp, #8
 800b480:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800b484:	f7ff bf35 	b.w	800b2f2 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>

0800b488 <_ZN8touchgfx17AbstractDataGraphC1Es>:
 800b488:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b48c:	b085      	sub	sp, #20
 800b48e:	4604      	mov	r4, r0
 800b490:	9103      	str	r1, [sp, #12]
 800b492:	f7ff fe25 	bl	800b0e0 <_ZN8touchgfx9ContainerC1Ev>
 800b496:	4b2d      	ldr	r3, [pc, #180]	; (800b54c <_ZN8touchgfx17AbstractDataGraphC1Es+0xc4>)
 800b498:	6023      	str	r3, [r4, #0]
 800b49a:	2601      	movs	r6, #1
 800b49c:	23ff      	movs	r3, #255	; 0xff
 800b49e:	f104 0b38 	add.w	fp, r4, #56	; 0x38
 800b4a2:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 800b4a6:	f104 0964 	add.w	r9, r4, #100	; 0x64
 800b4aa:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 800b4ae:	4658      	mov	r0, fp
 800b4b0:	f7ff fe16 	bl	800b0e0 <_ZN8touchgfx9ContainerC1Ev>
 800b4b4:	f104 0890 	add.w	r8, r4, #144	; 0x90
 800b4b8:	4648      	mov	r0, r9
 800b4ba:	f7ff fe11 	bl	800b0e0 <_ZN8touchgfx9ContainerC1Ev>
 800b4be:	f104 0abc 	add.w	sl, r4, #188	; 0xbc
 800b4c2:	4640      	mov	r0, r8
 800b4c4:	f7ff fe0c 	bl	800b0e0 <_ZN8touchgfx9ContainerC1Ev>
 800b4c8:	f104 07e8 	add.w	r7, r4, #232	; 0xe8
 800b4cc:	4650      	mov	r0, sl
 800b4ce:	f7ff fe07 	bl	800b0e0 <_ZN8touchgfx9ContainerC1Ev>
 800b4d2:	4638      	mov	r0, r7
 800b4d4:	f7ff fe04 	bl	800b0e0 <_ZN8touchgfx9ContainerC1Ev>
 800b4d8:	2500      	movs	r5, #0
 800b4da:	9903      	ldr	r1, [sp, #12]
 800b4dc:	f8a4 111c 	strh.w	r1, [r4, #284]	; 0x11c
 800b4e0:	4620      	mov	r0, r4
 800b4e2:	4659      	mov	r1, fp
 800b4e4:	f8c4 5114 	str.w	r5, [r4, #276]	; 0x114
 800b4e8:	f8c4 5118 	str.w	r5, [r4, #280]	; 0x118
 800b4ec:	f8a4 511e 	strh.w	r5, [r4, #286]	; 0x11e
 800b4f0:	f8a4 5120 	strh.w	r5, [r4, #288]	; 0x120
 800b4f4:	f8c4 5124 	str.w	r5, [r4, #292]	; 0x124
 800b4f8:	f8c4 5128 	str.w	r5, [r4, #296]	; 0x128
 800b4fc:	f8c4 512c 	str.w	r5, [r4, #300]	; 0x12c
 800b500:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 800b504:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
 800b508:	f8c4 5138 	str.w	r5, [r4, #312]	; 0x138
 800b50c:	f7fe f99e 	bl	800984c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800b510:	4651      	mov	r1, sl
 800b512:	4620      	mov	r0, r4
 800b514:	f7fe f99a 	bl	800984c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800b518:	4649      	mov	r1, r9
 800b51a:	4620      	mov	r0, r4
 800b51c:	f7fe f996 	bl	800984c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800b520:	4641      	mov	r1, r8
 800b522:	4620      	mov	r0, r4
 800b524:	f7fe f992 	bl	800984c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800b528:	4639      	mov	r1, r7
 800b52a:	4620      	mov	r0, r4
 800b52c:	f7fe f98e 	bl	800984c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800b530:	4620      	mov	r0, r4
 800b532:	9500      	str	r5, [sp, #0]
 800b534:	462b      	mov	r3, r5
 800b536:	462a      	mov	r2, r5
 800b538:	4629      	mov	r1, r5
 800b53a:	f7ff ff57 	bl	800b3ec <_ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss>
 800b53e:	4620      	mov	r0, r4
 800b540:	f884 6024 	strb.w	r6, [r4, #36]	; 0x24
 800b544:	b005      	add	sp, #20
 800b546:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b54a:	bf00      	nop
 800b54c:	080224e4 	.word	0x080224e4

0800b550 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>:
 800b550:	4291      	cmp	r1, r2
 800b552:	4613      	mov	r3, r2
 800b554:	d003      	beq.n	800b55e <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii+0xe>
 800b556:	460a      	mov	r2, r1
 800b558:	4619      	mov	r1, r3
 800b55a:	f005 bdc9 	b.w	80110f0 <_ZN8touchgfx6muldivElll>
 800b55e:	4770      	bx	lr

0800b560 <_ZN8touchgfx16DynamicDataGraph9setScaleXEib>:
 800b560:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b564:	6803      	ldr	r3, [r0, #0]
 800b566:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800b56a:	460d      	mov	r5, r1
 800b56c:	4604      	mov	r4, r0
 800b56e:	4798      	blx	r3
 800b570:	42a8      	cmp	r0, r5
 800b572:	4606      	mov	r6, r0
 800b574:	d024      	beq.n	800b5c0 <_ZN8touchgfx16DynamicDataGraph9setScaleXEib+0x60>
 800b576:	6823      	ldr	r3, [r4, #0]
 800b578:	4601      	mov	r1, r0
 800b57a:	462a      	mov	r2, r5
 800b57c:	f8d4 012c 	ldr.w	r0, [r4, #300]	; 0x12c
 800b580:	f8d3 70a4 	ldr.w	r7, [r3, #164]	; 0xa4
 800b584:	f7ff ffe4 	bl	800b550 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 800b588:	462a      	mov	r2, r5
 800b58a:	4680      	mov	r8, r0
 800b58c:	4631      	mov	r1, r6
 800b58e:	f8d4 0130 	ldr.w	r0, [r4, #304]	; 0x130
 800b592:	f7ff ffdd 	bl	800b550 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 800b596:	4641      	mov	r1, r8
 800b598:	4602      	mov	r2, r0
 800b59a:	4620      	mov	r0, r4
 800b59c:	47b8      	blx	r7
 800b59e:	462a      	mov	r2, r5
 800b5a0:	4631      	mov	r1, r6
 800b5a2:	f8d4 013c 	ldr.w	r0, [r4, #316]	; 0x13c
 800b5a6:	f7ff ffd3 	bl	800b550 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 800b5aa:	462a      	mov	r2, r5
 800b5ac:	f8c4 013c 	str.w	r0, [r4, #316]	; 0x13c
 800b5b0:	4631      	mov	r1, r6
 800b5b2:	f8d4 0140 	ldr.w	r0, [r4, #320]	; 0x140
 800b5b6:	f7ff ffcb 	bl	800b550 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 800b5ba:	6325      	str	r5, [r4, #48]	; 0x30
 800b5bc:	f8c4 0140 	str.w	r0, [r4, #320]	; 0x140
 800b5c0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800b5c4 <_ZN8touchgfx16DynamicDataGraph9setScaleYEib>:
 800b5c4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800b5c8:	4604      	mov	r4, r0
 800b5ca:	460f      	mov	r7, r1
 800b5cc:	b1ba      	cbz	r2, 800b5fe <_ZN8touchgfx16DynamicDataGraph9setScaleYEib+0x3a>
 800b5ce:	6803      	ldr	r3, [r0, #0]
 800b5d0:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 800b5d4:	4798      	blx	r3
 800b5d6:	2600      	movs	r6, #0
 800b5d8:	4681      	mov	r9, r0
 800b5da:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800b5de:	b235      	sxth	r5, r6
 800b5e0:	42ab      	cmp	r3, r5
 800b5e2:	f106 0601 	add.w	r6, r6, #1
 800b5e6:	dd0a      	ble.n	800b5fe <_ZN8touchgfx16DynamicDataGraph9setScaleYEib+0x3a>
 800b5e8:	f8d4 8144 	ldr.w	r8, [r4, #324]	; 0x144
 800b5ec:	463a      	mov	r2, r7
 800b5ee:	4649      	mov	r1, r9
 800b5f0:	f858 0025 	ldr.w	r0, [r8, r5, lsl #2]
 800b5f4:	f7ff ffac 	bl	800b550 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 800b5f8:	f848 0025 	str.w	r0, [r8, r5, lsl #2]
 800b5fc:	e7ed      	b.n	800b5da <_ZN8touchgfx16DynamicDataGraph9setScaleYEib+0x16>
 800b5fe:	6367      	str	r7, [r4, #52]	; 0x34
 800b600:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

0800b604 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>:
 800b604:	b570      	push	{r4, r5, r6, lr}
 800b606:	6803      	ldr	r3, [r0, #0]
 800b608:	4604      	mov	r4, r0
 800b60a:	f8d3 3178 	ldr.w	r3, [r3, #376]	; 0x178
 800b60e:	460d      	mov	r5, r1
 800b610:	4798      	blx	r3
 800b612:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 800b616:	3301      	adds	r3, #1
 800b618:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
 800b61c:	6823      	ldr	r3, [r4, #0]
 800b61e:	4629      	mov	r1, r5
 800b620:	4620      	mov	r0, r4
 800b622:	f8d3 317c 	ldr.w	r3, [r3, #380]	; 0x17c
 800b626:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b62a:	4718      	bx	r3

0800b62c <_ZN8touchgfx16GraphElementLineD1Ev>:
 800b62c:	4770      	bx	lr

0800b62e <_ZN8touchgfx16GraphElementLineD0Ev>:
 800b62e:	b510      	push	{r4, lr}
 800b630:	2130      	movs	r1, #48	; 0x30
 800b632:	4604      	mov	r4, r0
 800b634:	f013 ff3f 	bl	801f4b6 <_ZdlPvj>
 800b638:	4620      	mov	r0, r4
 800b63a:	bd10      	pop	{r4, pc}

0800b63c <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 800b63c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800b63e:	4604      	mov	r4, r0
 800b640:	4608      	mov	r0, r1
 800b642:	460d      	mov	r5, r1
 800b644:	f7fe fad5 	bl	8009bf2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800b648:	b978      	cbnz	r0, 800b66a <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 800b64a:	4620      	mov	r0, r4
 800b64c:	f7fe fad1 	bl	8009bf2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800b650:	f9b5 6000 	ldrsh.w	r6, [r5]
 800b654:	b150      	cbz	r0, 800b66c <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 800b656:	8026      	strh	r6, [r4, #0]
 800b658:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800b65c:	8063      	strh	r3, [r4, #2]
 800b65e:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 800b662:	80a3      	strh	r3, [r4, #4]
 800b664:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800b668:	80e3      	strh	r3, [r4, #6]
 800b66a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800b66c:	f9b4 1000 	ldrsh.w	r1, [r4]
 800b670:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800b674:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 800b678:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 800b67c:	88ed      	ldrh	r5, [r5, #6]
 800b67e:	42b1      	cmp	r1, r6
 800b680:	460f      	mov	r7, r1
 800b682:	bfa8      	it	ge
 800b684:	4637      	movge	r7, r6
 800b686:	4293      	cmp	r3, r2
 800b688:	4618      	mov	r0, r3
 800b68a:	4466      	add	r6, ip
 800b68c:	bfa8      	it	ge
 800b68e:	4610      	movge	r0, r2
 800b690:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800b694:	8027      	strh	r7, [r4, #0]
 800b696:	442a      	add	r2, r5
 800b698:	88e5      	ldrh	r5, [r4, #6]
 800b69a:	8060      	strh	r0, [r4, #2]
 800b69c:	4461      	add	r1, ip
 800b69e:	442b      	add	r3, r5
 800b6a0:	b236      	sxth	r6, r6
 800b6a2:	b209      	sxth	r1, r1
 800b6a4:	b212      	sxth	r2, r2
 800b6a6:	b21b      	sxth	r3, r3
 800b6a8:	428e      	cmp	r6, r1
 800b6aa:	bfac      	ite	ge
 800b6ac:	ebc7 0106 	rsbge	r1, r7, r6
 800b6b0:	ebc7 0101 	rsblt	r1, r7, r1
 800b6b4:	429a      	cmp	r2, r3
 800b6b6:	bfac      	ite	ge
 800b6b8:	ebc0 0202 	rsbge	r2, r0, r2
 800b6bc:	ebc0 0203 	rsblt	r2, r0, r3
 800b6c0:	80a1      	strh	r1, [r4, #4]
 800b6c2:	80e2      	strh	r2, [r4, #6]
 800b6c4:	e7d1      	b.n	800b66a <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>

0800b6c6 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>:
 800b6c6:	6800      	ldr	r0, [r0, #0]
 800b6c8:	2800      	cmp	r0, #0
 800b6ca:	bfb9      	ittee	lt
 800b6cc:	2320      	movlt	r3, #32
 800b6ce:	fb90 f0f3 	sdivlt	r0, r0, r3
 800b6d2:	301f      	addge	r0, #31
 800b6d4:	1140      	asrge	r0, r0, #5
 800b6d6:	4770      	bx	lr

0800b6d8 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE>:
 800b6d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b6dc:	6803      	ldr	r3, [r0, #0]
 800b6de:	6945      	ldr	r5, [r0, #20]
 800b6e0:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800b6e2:	b093      	sub	sp, #76	; 0x4c
 800b6e4:	4604      	mov	r4, r0
 800b6e6:	460f      	mov	r7, r1
 800b6e8:	2d00      	cmp	r5, #0
 800b6ea:	f000 81ad 	beq.w	800ba48 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x370>
 800b6ee:	696d      	ldr	r5, [r5, #20]
 800b6f0:	4798      	blx	r3
 800b6f2:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800b6f6:	2b00      	cmp	r3, #0
 800b6f8:	d077      	beq.n	800b7ea <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800b6fa:	f895 302c 	ldrb.w	r3, [r5, #44]	; 0x2c
 800b6fe:	fb13 f000 	smulbb	r0, r3, r0
 800b702:	b283      	uxth	r3, r0
 800b704:	1c58      	adds	r0, r3, #1
 800b706:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 800b70a:	1200      	asrs	r0, r0, #8
 800b70c:	d06d      	beq.n	800b7ea <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800b70e:	b2c3      	uxtb	r3, r0
 800b710:	9308      	str	r3, [sp, #32]
 800b712:	6823      	ldr	r3, [r4, #0]
 800b714:	f10d 0840 	add.w	r8, sp, #64	; 0x40
 800b718:	462a      	mov	r2, r5
 800b71a:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800b71e:	4621      	mov	r1, r4
 800b720:	4640      	mov	r0, r8
 800b722:	4798      	blx	r3
 800b724:	e898 0003 	ldmia.w	r8, {r0, r1}
 800b728:	ae0e      	add	r6, sp, #56	; 0x38
 800b72a:	e886 0003 	stmia.w	r6, {r0, r1}
 800b72e:	4639      	mov	r1, r7
 800b730:	4630      	mov	r0, r6
 800b732:	f7fe fa1b 	bl	8009b6c <_ZN8touchgfx4RectaNERKS0_>
 800b736:	6823      	ldr	r3, [r4, #0]
 800b738:	4629      	mov	r1, r5
 800b73a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800b73e:	4620      	mov	r0, r4
 800b740:	4798      	blx	r3
 800b742:	6823      	ldr	r3, [r4, #0]
 800b744:	4607      	mov	r7, r0
 800b746:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800b74a:	4629      	mov	r1, r5
 800b74c:	4620      	mov	r0, r4
 800b74e:	4798      	blx	r3
 800b750:	4681      	mov	r9, r0
 800b752:	f894 0038 	ldrb.w	r0, [r4, #56]	; 0x38
 800b756:	0103      	lsls	r3, r0, #4
 800b758:	9309      	str	r3, [sp, #36]	; 0x24
 800b75a:	6823      	ldr	r3, [r4, #0]
 800b75c:	4629      	mov	r1, r5
 800b75e:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 800b762:	4620      	mov	r0, r4
 800b764:	4798      	blx	r3
 800b766:	b203      	sxth	r3, r0
 800b768:	9306      	str	r3, [sp, #24]
 800b76a:	6823      	ldr	r3, [r4, #0]
 800b76c:	4629      	mov	r1, r5
 800b76e:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 800b772:	4620      	mov	r0, r4
 800b774:	4798      	blx	r3
 800b776:	2f00      	cmp	r7, #0
 800b778:	b203      	sxth	r3, r0
 800b77a:	9307      	str	r3, [sp, #28]
 800b77c:	d138      	bne.n	800b7f0 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x118>
 800b77e:	f1b9 0f00 	cmp.w	r9, #0
 800b782:	d132      	bne.n	800b7ea <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800b784:	6823      	ldr	r3, [r4, #0]
 800b786:	464a      	mov	r2, r9
 800b788:	4629      	mov	r1, r5
 800b78a:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800b78e:	4620      	mov	r0, r4
 800b790:	4798      	blx	r3
 800b792:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800b794:	1ac0      	subs	r0, r0, r3
 800b796:	9010      	str	r0, [sp, #64]	; 0x40
 800b798:	4640      	mov	r0, r8
 800b79a:	f7ff fcbb 	bl	800b114 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800b79e:	6823      	ldr	r3, [r4, #0]
 800b7a0:	4607      	mov	r7, r0
 800b7a2:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 800b7a6:	4629      	mov	r1, r5
 800b7a8:	4620      	mov	r0, r4
 800b7aa:	4798      	blx	r3
 800b7ac:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800b7b0:	1a38      	subs	r0, r7, r0
 800b7b2:	fa0f f880 	sxth.w	r8, r0
 800b7b6:	eb13 0f08 	cmn.w	r3, r8
 800b7ba:	d416      	bmi.n	800b7ea <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800b7bc:	6823      	ldr	r3, [r4, #0]
 800b7be:	4629      	mov	r1, r5
 800b7c0:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 800b7c4:	4620      	mov	r0, r4
 800b7c6:	4798      	blx	r3
 800b7c8:	4580      	cmp	r8, r0
 800b7ca:	da0e      	bge.n	800b7ea <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800b7cc:	9a08      	ldr	r2, [sp, #32]
 800b7ce:	6823      	ldr	r3, [r4, #0]
 800b7d0:	9202      	str	r2, [sp, #8]
 800b7d2:	b23f      	sxth	r7, r7
 800b7d4:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 800b7d8:	9201      	str	r2, [sp, #4]
 800b7da:	9700      	str	r7, [sp, #0]
 800b7dc:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 800b7e0:	4631      	mov	r1, r6
 800b7e2:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800b7e6:	4620      	mov	r0, r4
 800b7e8:	47a8      	blx	r5
 800b7ea:	b013      	add	sp, #76	; 0x4c
 800b7ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b7f0:	ddfb      	ble.n	800b7ea <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800b7f2:	6823      	ldr	r3, [r4, #0]
 800b7f4:	4629      	mov	r1, r5
 800b7f6:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 800b7fa:	4620      	mov	r0, r4
 800b7fc:	4798      	blx	r3
 800b7fe:	6823      	ldr	r3, [r4, #0]
 800b800:	4683      	mov	fp, r0
 800b802:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 800b806:	4629      	mov	r1, r5
 800b808:	4620      	mov	r0, r4
 800b80a:	4798      	blx	r3
 800b80c:	eba0 030b 	sub.w	r3, r0, fp
 800b810:	2b00      	cmp	r3, #0
 800b812:	bfb8      	it	lt
 800b814:	425b      	neglt	r3, r3
 800b816:	fb93 f3f7 	sdiv	r3, r3, r7
 800b81a:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 800b81e:	4680      	mov	r8, r0
 800b820:	dce3      	bgt.n	800b7ea <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800b822:	6823      	ldr	r3, [r4, #0]
 800b824:	465a      	mov	r2, fp
 800b826:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800b82a:	4629      	mov	r1, r5
 800b82c:	4620      	mov	r0, r4
 800b82e:	4798      	blx	r3
 800b830:	6823      	ldr	r3, [r4, #0]
 800b832:	4606      	mov	r6, r0
 800b834:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800b838:	4642      	mov	r2, r8
 800b83a:	4629      	mov	r1, r5
 800b83c:	4620      	mov	r0, r4
 800b83e:	4798      	blx	r3
 800b840:	42b0      	cmp	r0, r6
 800b842:	bfa2      	ittt	ge
 800b844:	4643      	movge	r3, r8
 800b846:	46d8      	movge	r8, fp
 800b848:	469b      	movge	fp, r3
 800b84a:	45d8      	cmp	r8, fp
 800b84c:	bfac      	ite	ge
 800b84e:	f04f 33ff 	movge.w	r3, #4294967295
 800b852:	2301      	movlt	r3, #1
 800b854:	fb98 f6f7 	sdiv	r6, r8, r7
 800b858:	fb9b f2f7 	sdiv	r2, fp, r7
 800b85c:	1af6      	subs	r6, r6, r3
 800b85e:	441a      	add	r2, r3
 800b860:	4296      	cmp	r6, r2
 800b862:	bfac      	ite	ge
 800b864:	f04f 3aff 	movge.w	sl, #4294967295
 800b868:	f04f 0a01 	movlt.w	sl, #1
 800b86c:	f1b9 0f00 	cmp.w	r9, #0
 800b870:	d13e      	bne.n	800b8f0 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x218>
 800b872:	fb07 fb0a 	mul.w	fp, r7, sl
 800b876:	eb0a 0802 	add.w	r8, sl, r2
 800b87a:	4377      	muls	r7, r6
 800b87c:	45b0      	cmp	r8, r6
 800b87e:	d0b4      	beq.n	800b7ea <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800b880:	6823      	ldr	r3, [r4, #0]
 800b882:	463a      	mov	r2, r7
 800b884:	4629      	mov	r1, r5
 800b886:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800b88a:	4620      	mov	r0, r4
 800b88c:	4798      	blx	r3
 800b88e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800b890:	1ac0      	subs	r0, r0, r3
 800b892:	9010      	str	r0, [sp, #64]	; 0x40
 800b894:	a810      	add	r0, sp, #64	; 0x40
 800b896:	f7ff fc3d 	bl	800b114 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800b89a:	6823      	ldr	r3, [r4, #0]
 800b89c:	4681      	mov	r9, r0
 800b89e:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 800b8a2:	4629      	mov	r1, r5
 800b8a4:	4620      	mov	r0, r4
 800b8a6:	4798      	blx	r3
 800b8a8:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 800b8ac:	eba9 0000 	sub.w	r0, r9, r0
 800b8b0:	b203      	sxth	r3, r0
 800b8b2:	42da      	cmn	r2, r3
 800b8b4:	9304      	str	r3, [sp, #16]
 800b8b6:	d418      	bmi.n	800b8ea <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x212>
 800b8b8:	6822      	ldr	r2, [r4, #0]
 800b8ba:	4629      	mov	r1, r5
 800b8bc:	f8d2 20a8 	ldr.w	r2, [r2, #168]	; 0xa8
 800b8c0:	4620      	mov	r0, r4
 800b8c2:	4790      	blx	r2
 800b8c4:	9b04      	ldr	r3, [sp, #16]
 800b8c6:	4283      	cmp	r3, r0
 800b8c8:	da0f      	bge.n	800b8ea <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x212>
 800b8ca:	9b08      	ldr	r3, [sp, #32]
 800b8cc:	9302      	str	r3, [sp, #8]
 800b8ce:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800b8d2:	6822      	ldr	r2, [r4, #0]
 800b8d4:	9301      	str	r3, [sp, #4]
 800b8d6:	fa0f f389 	sxth.w	r3, r9
 800b8da:	9300      	str	r3, [sp, #0]
 800b8dc:	f8d2 9088 	ldr.w	r9, [r2, #136]	; 0x88
 800b8e0:	a90e      	add	r1, sp, #56	; 0x38
 800b8e2:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800b8e6:	4620      	mov	r0, r4
 800b8e8:	47c8      	blx	r9
 800b8ea:	4456      	add	r6, sl
 800b8ec:	445f      	add	r7, fp
 800b8ee:	e7c5      	b.n	800b87c <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x1a4>
 800b8f0:	fb98 f8f9 	sdiv	r8, r8, r9
 800b8f4:	eba8 0203 	sub.w	r2, r8, r3
 800b8f8:	fb9b f8f9 	sdiv	r8, fp, r9
 800b8fc:	4498      	add	r8, r3
 800b8fe:	4542      	cmp	r2, r8
 800b900:	bfac      	ite	ge
 800b902:	f04f 33ff 	movge.w	r3, #4294967295
 800b906:	2301      	movlt	r3, #1
 800b908:	930a      	str	r3, [sp, #40]	; 0x28
 800b90a:	6823      	ldr	r3, [r4, #0]
 800b90c:	9204      	str	r2, [sp, #16]
 800b90e:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800b912:	fb02 f209 	mul.w	r2, r2, r9
 800b916:	4629      	mov	r1, r5
 800b918:	4620      	mov	r0, r4
 800b91a:	4798      	blx	r3
 800b91c:	f10d 0b48 	add.w	fp, sp, #72	; 0x48
 800b920:	f84b 0d08 	str.w	r0, [fp, #-8]!
 800b924:	4658      	mov	r0, fp
 800b926:	f7ff fbf5 	bl	800b114 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800b92a:	b203      	sxth	r3, r0
 800b92c:	9305      	str	r3, [sp, #20]
 800b92e:	6823      	ldr	r3, [r4, #0]
 800b930:	fb06 f207 	mul.w	r2, r6, r7
 800b934:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800b938:	4629      	mov	r1, r5
 800b93a:	4620      	mov	r0, r4
 800b93c:	4798      	blx	r3
 800b93e:	9010      	str	r0, [sp, #64]	; 0x40
 800b940:	4658      	mov	r0, fp
 800b942:	f7ff fbe7 	bl	800b114 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800b946:	fb07 f20a 	mul.w	r2, r7, sl
 800b94a:	920b      	str	r2, [sp, #44]	; 0x2c
 800b94c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800b94e:	4442      	add	r2, r8
 800b950:	b203      	sxth	r3, r0
 800b952:	920c      	str	r2, [sp, #48]	; 0x30
 800b954:	9a05      	ldr	r2, [sp, #20]
 800b956:	429a      	cmp	r2, r3
 800b958:	dc16      	bgt.n	800b988 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x2b0>
 800b95a:	eb06 080a 	add.w	r8, r6, sl
 800b95e:	fb07 f808 	mul.w	r8, r7, r8
 800b962:	9a05      	ldr	r2, [sp, #20]
 800b964:	429a      	cmp	r2, r3
 800b966:	db54      	blt.n	800ba12 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x33a>
 800b968:	6823      	ldr	r3, [r4, #0]
 800b96a:	4642      	mov	r2, r8
 800b96c:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800b970:	4629      	mov	r1, r5
 800b972:	4620      	mov	r0, r4
 800b974:	4798      	blx	r3
 800b976:	9010      	str	r0, [sp, #64]	; 0x40
 800b978:	4658      	mov	r0, fp
 800b97a:	f7ff fbcb 	bl	800b114 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800b97e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800b980:	4456      	add	r6, sl
 800b982:	b203      	sxth	r3, r0
 800b984:	4490      	add	r8, r2
 800b986:	e7ec      	b.n	800b962 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x28a>
 800b988:	6823      	ldr	r3, [r4, #0]
 800b98a:	fb07 f206 	mul.w	r2, r7, r6
 800b98e:	4629      	mov	r1, r5
 800b990:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800b994:	4620      	mov	r0, r4
 800b996:	4798      	blx	r3
 800b998:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800b99a:	1ac0      	subs	r0, r0, r3
 800b99c:	9010      	str	r0, [sp, #64]	; 0x40
 800b99e:	4658      	mov	r0, fp
 800b9a0:	f7ff fbb8 	bl	800b114 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800b9a4:	6823      	ldr	r3, [r4, #0]
 800b9a6:	4680      	mov	r8, r0
 800b9a8:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 800b9ac:	4629      	mov	r1, r5
 800b9ae:	4620      	mov	r0, r4
 800b9b0:	4798      	blx	r3
 800b9b2:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 800b9b6:	eba8 0000 	sub.w	r0, r8, r0
 800b9ba:	b203      	sxth	r3, r0
 800b9bc:	42da      	cmn	r2, r3
 800b9be:	930d      	str	r3, [sp, #52]	; 0x34
 800b9c0:	d418      	bmi.n	800b9f4 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x31c>
 800b9c2:	6822      	ldr	r2, [r4, #0]
 800b9c4:	4629      	mov	r1, r5
 800b9c6:	f8d2 20a8 	ldr.w	r2, [r2, #168]	; 0xa8
 800b9ca:	4620      	mov	r0, r4
 800b9cc:	4790      	blx	r2
 800b9ce:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800b9d0:	4283      	cmp	r3, r0
 800b9d2:	da0f      	bge.n	800b9f4 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x31c>
 800b9d4:	9b08      	ldr	r3, [sp, #32]
 800b9d6:	9302      	str	r3, [sp, #8]
 800b9d8:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800b9dc:	6822      	ldr	r2, [r4, #0]
 800b9de:	9301      	str	r3, [sp, #4]
 800b9e0:	fa0f f388 	sxth.w	r3, r8
 800b9e4:	9300      	str	r3, [sp, #0]
 800b9e6:	f8d2 8088 	ldr.w	r8, [r2, #136]	; 0x88
 800b9ea:	a90e      	add	r1, sp, #56	; 0x38
 800b9ec:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800b9f0:	4620      	mov	r0, r4
 800b9f2:	47c0      	blx	r8
 800b9f4:	6823      	ldr	r3, [r4, #0]
 800b9f6:	4456      	add	r6, sl
 800b9f8:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800b9fc:	fb06 f207 	mul.w	r2, r6, r7
 800ba00:	4629      	mov	r1, r5
 800ba02:	4620      	mov	r0, r4
 800ba04:	4798      	blx	r3
 800ba06:	9010      	str	r0, [sp, #64]	; 0x40
 800ba08:	4658      	mov	r0, fp
 800ba0a:	f7ff fb83 	bl	800b114 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800ba0e:	b203      	sxth	r3, r0
 800ba10:	e7a0      	b.n	800b954 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x27c>
 800ba12:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800ba14:	930d      	str	r3, [sp, #52]	; 0x34
 800ba16:	9b04      	ldr	r3, [sp, #16]
 800ba18:	4413      	add	r3, r2
 800ba1a:	9304      	str	r3, [sp, #16]
 800ba1c:	9a04      	ldr	r2, [sp, #16]
 800ba1e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800ba20:	4293      	cmp	r3, r2
 800ba22:	f43f aee2 	beq.w	800b7ea <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800ba26:	9b04      	ldr	r3, [sp, #16]
 800ba28:	6822      	ldr	r2, [r4, #0]
 800ba2a:	4629      	mov	r1, r5
 800ba2c:	f8d2 80ac 	ldr.w	r8, [r2, #172]	; 0xac
 800ba30:	4620      	mov	r0, r4
 800ba32:	fb03 f209 	mul.w	r2, r3, r9
 800ba36:	47c0      	blx	r8
 800ba38:	9010      	str	r0, [sp, #64]	; 0x40
 800ba3a:	4658      	mov	r0, fp
 800ba3c:	f7ff fb6a 	bl	800b114 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800ba40:	b203      	sxth	r3, r0
 800ba42:	9305      	str	r3, [sp, #20]
 800ba44:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800ba46:	e785      	b.n	800b954 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x27c>
 800ba48:	4798      	blx	r3
 800ba4a:	f895 302c 	ldrb.w	r3, [r5, #44]	; 0x2c
 800ba4e:	deff      	udf	#255	; 0xff

0800ba50 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>:
 800ba50:	b510      	push	{r4, lr}
 800ba52:	ea80 73e0 	eor.w	r3, r0, r0, asr #31
 800ba56:	ea81 74e1 	eor.w	r4, r1, r1, asr #31
 800ba5a:	eba4 74e1 	sub.w	r4, r4, r1, asr #31
 800ba5e:	eba3 73e0 	sub.w	r3, r3, r0, asr #31
 800ba62:	13a4      	asrs	r4, r4, #14
 800ba64:	139b      	asrs	r3, r3, #14
 800ba66:	429c      	cmp	r4, r3
 800ba68:	bfb8      	it	lt
 800ba6a:	461c      	movlt	r4, r3
 800ba6c:	2c01      	cmp	r4, #1
 800ba6e:	dd07      	ble.n	800ba80 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x30>
 800ba70:	fb91 f1f4 	sdiv	r1, r1, r4
 800ba74:	fb90 f0f4 	sdiv	r0, r0, r4
 800ba78:	f7ff ffea 	bl	800ba50 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 800ba7c:	4360      	muls	r0, r4
 800ba7e:	bd10      	pop	{r4, pc}
 800ba80:	4340      	muls	r0, r0
 800ba82:	fb01 0101 	mla	r1, r1, r1, r0
 800ba86:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
 800ba8a:	bfb4      	ite	lt
 800ba8c:	f44f 4380 	movlt.w	r3, #16384	; 0x4000
 800ba90:	f04f 4380 	movge.w	r3, #1073741824	; 0x40000000
 800ba94:	2000      	movs	r0, #0
 800ba96:	18c2      	adds	r2, r0, r3
 800ba98:	428a      	cmp	r2, r1
 800ba9a:	bf9c      	itt	ls
 800ba9c:	1898      	addls	r0, r3, r2
 800ba9e:	1a89      	subls	r1, r1, r2
 800baa0:	089b      	lsrs	r3, r3, #2
 800baa2:	ea4f 0050 	mov.w	r0, r0, lsr #1
 800baa6:	d1f6      	bne.n	800ba96 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x46>
 800baa8:	e7e9      	b.n	800ba7e <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x2e>

0800baaa <_ZNK8touchgfx20AbstractGraphElement21rectFromQ5CoordinatesENS_7CWRUtil2Q5ES2_S2_S2_>:
 800baaa:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800baac:	9906      	ldr	r1, [sp, #24]
 800baae:	4291      	cmp	r1, r2
 800bab0:	bfbc      	itt	lt
 800bab2:	9206      	strlt	r2, [sp, #24]
 800bab4:	460a      	movlt	r2, r1
 800bab6:	9907      	ldr	r1, [sp, #28]
 800bab8:	428b      	cmp	r3, r1
 800baba:	4606      	mov	r6, r0
 800babc:	461c      	mov	r4, r3
 800babe:	f04f 0020 	mov.w	r0, #32
 800bac2:	bfc8      	it	gt
 800bac4:	460c      	movgt	r4, r1
 800bac6:	fb92 f5f0 	sdiv	r5, r2, r0
 800baca:	fb94 f4f0 	sdiv	r4, r4, r0
 800bace:	a806      	add	r0, sp, #24
 800bad0:	bfc8      	it	gt
 800bad2:	9307      	strgt	r3, [sp, #28]
 800bad4:	f7ff fdf7 	bl	800b6c6 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 800bad8:	4607      	mov	r7, r0
 800bada:	a807      	add	r0, sp, #28
 800badc:	f7ff fdf3 	bl	800b6c6 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 800bae0:	1b7a      	subs	r2, r7, r5
 800bae2:	1b00      	subs	r0, r0, r4
 800bae4:	80f0      	strh	r0, [r6, #6]
 800bae6:	8035      	strh	r5, [r6, #0]
 800bae8:	8074      	strh	r4, [r6, #2]
 800baea:	80b2      	strh	r2, [r6, #4]
 800baec:	4630      	mov	r0, r6
 800baee:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800baf0 <_ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_>:
 800baf0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800baf2:	9c08      	ldr	r4, [sp, #32]
 800baf4:	2602      	movs	r6, #2
 800baf6:	3401      	adds	r4, #1
 800baf8:	fb94 f4f6 	sdiv	r4, r4, r6
 800bafc:	18a6      	adds	r6, r4, r2
 800bafe:	191f      	adds	r7, r3, r4
 800bb00:	e9cd 6700 	strd	r6, r7, [sp]
 800bb04:	1b1b      	subs	r3, r3, r4
 800bb06:	1b12      	subs	r2, r2, r4
 800bb08:	4605      	mov	r5, r0
 800bb0a:	f7ff ffce 	bl	800baaa <_ZNK8touchgfx20AbstractGraphElement21rectFromQ5CoordinatesENS_7CWRUtil2Q5ES2_S2_S2_>
 800bb0e:	4628      	mov	r0, r5
 800bb10:	b003      	add	sp, #12
 800bb12:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800bb14 <_ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs>:
 800bb14:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800bb18:	6943      	ldr	r3, [r0, #20]
 800bb1a:	b087      	sub	sp, #28
 800bb1c:	4606      	mov	r6, r0
 800bb1e:	460d      	mov	r5, r1
 800bb20:	2b00      	cmp	r3, #0
 800bb22:	d072      	beq.n	800bc0a <_ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs+0xf6>
 800bb24:	695c      	ldr	r4, [r3, #20]
 800bb26:	f890 702c 	ldrb.w	r7, [r0, #44]	; 0x2c
 800bb2a:	6823      	ldr	r3, [r4, #0]
 800bb2c:	4620      	mov	r0, r4
 800bb2e:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800bb32:	4798      	blx	r3
 800bb34:	6823      	ldr	r3, [r4, #0]
 800bb36:	4680      	mov	r8, r0
 800bb38:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 800bb3c:	4629      	mov	r1, r5
 800bb3e:	4620      	mov	r0, r4
 800bb40:	4798      	blx	r3
 800bb42:	017f      	lsls	r7, r7, #5
 800bb44:	4603      	mov	r3, r0
 800bb46:	9700      	str	r7, [sp, #0]
 800bb48:	4642      	mov	r2, r8
 800bb4a:	4631      	mov	r1, r6
 800bb4c:	a802      	add	r0, sp, #8
 800bb4e:	f7ff ffcf 	bl	800baf0 <_ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_>
 800bb52:	2d00      	cmp	r5, #0
 800bb54:	dd1b      	ble.n	800bb8e <_ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs+0x7a>
 800bb56:	6823      	ldr	r3, [r4, #0]
 800bb58:	f105 38ff 	add.w	r8, r5, #4294967295
 800bb5c:	fa0f f888 	sxth.w	r8, r8
 800bb60:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800bb64:	4641      	mov	r1, r8
 800bb66:	4620      	mov	r0, r4
 800bb68:	4798      	blx	r3
 800bb6a:	6823      	ldr	r3, [r4, #0]
 800bb6c:	4681      	mov	r9, r0
 800bb6e:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 800bb72:	4641      	mov	r1, r8
 800bb74:	4620      	mov	r0, r4
 800bb76:	4798      	blx	r3
 800bb78:	4631      	mov	r1, r6
 800bb7a:	4603      	mov	r3, r0
 800bb7c:	9700      	str	r7, [sp, #0]
 800bb7e:	a804      	add	r0, sp, #16
 800bb80:	464a      	mov	r2, r9
 800bb82:	f7ff ffb5 	bl	800baf0 <_ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_>
 800bb86:	a904      	add	r1, sp, #16
 800bb88:	a802      	add	r0, sp, #8
 800bb8a:	f7ff fd57 	bl	800b63c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800bb8e:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800bb92:	3b01      	subs	r3, #1
 800bb94:	429d      	cmp	r5, r3
 800bb96:	da19      	bge.n	800bbcc <_ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs+0xb8>
 800bb98:	6823      	ldr	r3, [r4, #0]
 800bb9a:	3501      	adds	r5, #1
 800bb9c:	b22d      	sxth	r5, r5
 800bb9e:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800bba2:	4629      	mov	r1, r5
 800bba4:	4620      	mov	r0, r4
 800bba6:	4798      	blx	r3
 800bba8:	6823      	ldr	r3, [r4, #0]
 800bbaa:	4680      	mov	r8, r0
 800bbac:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 800bbb0:	4629      	mov	r1, r5
 800bbb2:	4620      	mov	r0, r4
 800bbb4:	4798      	blx	r3
 800bbb6:	4631      	mov	r1, r6
 800bbb8:	4603      	mov	r3, r0
 800bbba:	9700      	str	r7, [sp, #0]
 800bbbc:	a804      	add	r0, sp, #16
 800bbbe:	4642      	mov	r2, r8
 800bbc0:	f7ff ff96 	bl	800baf0 <_ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_>
 800bbc4:	a904      	add	r1, sp, #16
 800bbc6:	a802      	add	r0, sp, #8
 800bbc8:	f7ff fd38 	bl	800b63c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800bbcc:	f9b4 1114 	ldrsh.w	r1, [r4, #276]	; 0x114
 800bbd0:	f8b4 311a 	ldrh.w	r3, [r4, #282]	; 0x11a
 800bbd4:	f9b4 0040 	ldrsh.w	r0, [r4, #64]	; 0x40
 800bbd8:	18ca      	adds	r2, r1, r3
 800bbda:	f8b4 3042 	ldrh.w	r3, [r4, #66]	; 0x42
 800bbde:	f8ad 1012 	strh.w	r1, [sp, #18]
 800bbe2:	1a9b      	subs	r3, r3, r2
 800bbe4:	f8ad 0014 	strh.w	r0, [sp, #20]
 800bbe8:	2200      	movs	r2, #0
 800bbea:	a904      	add	r1, sp, #16
 800bbec:	a802      	add	r0, sp, #8
 800bbee:	f8ad 2010 	strh.w	r2, [sp, #16]
 800bbf2:	f8ad 3016 	strh.w	r3, [sp, #22]
 800bbf6:	f7fd ffb9 	bl	8009b6c <_ZN8touchgfx4RectaNERKS0_>
 800bbfa:	6833      	ldr	r3, [r6, #0]
 800bbfc:	a902      	add	r1, sp, #8
 800bbfe:	691b      	ldr	r3, [r3, #16]
 800bc00:	4630      	mov	r0, r6
 800bc02:	4798      	blx	r3
 800bc04:	b007      	add	sp, #28
 800bc06:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800bc0a:	681b      	ldr	r3, [r3, #0]
 800bc0c:	deff      	udf	#255	; 0xff

0800bc0e <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE>:
 800bc0e:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 800bc12:	2b00      	cmp	r3, #0
 800bc14:	da05      	bge.n	800bc22 <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE+0x14>
 800bc16:	880a      	ldrh	r2, [r1, #0]
 800bc18:	b29b      	uxth	r3, r3
 800bc1a:	441a      	add	r2, r3
 800bc1c:	425b      	negs	r3, r3
 800bc1e:	800a      	strh	r2, [r1, #0]
 800bc20:	808b      	strh	r3, [r1, #4]
 800bc22:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 800bc26:	2b00      	cmp	r3, #0
 800bc28:	da05      	bge.n	800bc36 <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE+0x28>
 800bc2a:	884a      	ldrh	r2, [r1, #2]
 800bc2c:	b29b      	uxth	r3, r3
 800bc2e:	441a      	add	r2, r3
 800bc30:	425b      	negs	r3, r3
 800bc32:	804a      	strh	r2, [r1, #2]
 800bc34:	80cb      	strh	r3, [r1, #6]
 800bc36:	4770      	bx	lr

0800bc38 <_ZNK8touchgfx20GraphElementGridBase8drawLineERKNS_4RectEssssh>:
 800bc38:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800bc3a:	4604      	mov	r4, r0
 800bc3c:	460d      	mov	r5, r1
 800bc3e:	6801      	ldr	r1, [r0, #0]
 800bc40:	f9bd 0024 	ldrsh.w	r0, [sp, #36]	; 0x24
 800bc44:	9001      	str	r0, [sp, #4]
 800bc46:	f9bd 0020 	ldrsh.w	r0, [sp, #32]
 800bc4a:	9000      	str	r0, [sp, #0]
 800bc4c:	f8d1 6090 	ldr.w	r6, [r1, #144]	; 0x90
 800bc50:	a802      	add	r0, sp, #8
 800bc52:	4621      	mov	r1, r4
 800bc54:	47b0      	blx	r6
 800bc56:	a902      	add	r1, sp, #8
 800bc58:	4620      	mov	r0, r4
 800bc5a:	f7ff ffd8 	bl	800bc0e <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE>
 800bc5e:	a802      	add	r0, sp, #8
 800bc60:	4629      	mov	r1, r5
 800bc62:	f7fd ff83 	bl	8009b6c <_ZN8touchgfx4RectaNERKS0_>
 800bc66:	a802      	add	r0, sp, #8
 800bc68:	f7fd ffc3 	bl	8009bf2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800bc6c:	b968      	cbnz	r0, 800bc8a <_ZNK8touchgfx20GraphElementGridBase8drawLineERKNS_4RectEssssh+0x52>
 800bc6e:	6823      	ldr	r3, [r4, #0]
 800bc70:	a902      	add	r1, sp, #8
 800bc72:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800bc74:	4620      	mov	r0, r4
 800bc76:	4798      	blx	r3
 800bc78:	f7f6 fb7c 	bl	8002374 <_ZN8touchgfx3HAL3lcdEv>
 800bc7c:	6803      	ldr	r3, [r0, #0]
 800bc7e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800bc80:	6a1d      	ldr	r5, [r3, #32]
 800bc82:	f89d 3028 	ldrb.w	r3, [sp, #40]	; 0x28
 800bc86:	a902      	add	r1, sp, #8
 800bc88:	47a8      	blx	r5
 800bc8a:	b004      	add	sp, #16
 800bc8c:	bd70      	pop	{r4, r5, r6, pc}

0800bc8e <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss>:
 800bc8e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bc92:	b08b      	sub	sp, #44	; 0x2c
 800bc94:	461e      	mov	r6, r3
 800bc96:	f9bd 3050 	ldrsh.w	r3, [sp, #80]	; 0x50
 800bc9a:	9304      	str	r3, [sp, #16]
 800bc9c:	429e      	cmp	r6, r3
 800bc9e:	4689      	mov	r9, r1
 800bca0:	4615      	mov	r5, r2
 800bca2:	d072      	beq.n	800bd8a <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss+0xfc>
 800bca4:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800bca8:	015b      	lsls	r3, r3, #5
 800bcaa:	9303      	str	r3, [sp, #12]
 800bcac:	6813      	ldr	r3, [r2, #0]
 800bcae:	4610      	mov	r0, r2
 800bcb0:	4631      	mov	r1, r6
 800bcb2:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800bcb6:	4798      	blx	r3
 800bcb8:	ab0a      	add	r3, sp, #40	; 0x28
 800bcba:	4634      	mov	r4, r6
 800bcbc:	f843 0d10 	str.w	r0, [r3, #-16]!
 800bcc0:	4618      	mov	r0, r3
 800bcc2:	f7ff fa27 	bl	800b114 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800bcc6:	682b      	ldr	r3, [r5, #0]
 800bcc8:	4631      	mov	r1, r6
 800bcca:	0147      	lsls	r7, r0, #5
 800bccc:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 800bcd0:	4628      	mov	r0, r5
 800bcd2:	4798      	blx	r3
 800bcd4:	ab0a      	add	r3, sp, #40	; 0x28
 800bcd6:	f843 0d0c 	str.w	r0, [r3, #-12]!
 800bcda:	4618      	mov	r0, r3
 800bcdc:	f7ff fa1a 	bl	800b114 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800bce0:	ea4f 1840 	mov.w	r8, r0, lsl #5
 800bce4:	4642      	mov	r2, r8
 800bce6:	4639      	mov	r1, r7
 800bce8:	4648      	mov	r0, r9
 800bcea:	f013 fb73 	bl	801f3d4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 800bcee:	2301      	movs	r3, #1
 800bcf0:	9300      	str	r3, [sp, #0]
 800bcf2:	9b00      	ldr	r3, [sp, #0]
 800bcf4:	441c      	add	r4, r3
 800bcf6:	682b      	ldr	r3, [r5, #0]
 800bcf8:	b224      	sxth	r4, r4
 800bcfa:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800bcfe:	4621      	mov	r1, r4
 800bd00:	4628      	mov	r0, r5
 800bd02:	4798      	blx	r3
 800bd04:	9008      	str	r0, [sp, #32]
 800bd06:	a808      	add	r0, sp, #32
 800bd08:	f7ff fa04 	bl	800b114 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800bd0c:	0143      	lsls	r3, r0, #5
 800bd0e:	9301      	str	r3, [sp, #4]
 800bd10:	682b      	ldr	r3, [r5, #0]
 800bd12:	4621      	mov	r1, r4
 800bd14:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 800bd18:	4628      	mov	r0, r5
 800bd1a:	4798      	blx	r3
 800bd1c:	9009      	str	r0, [sp, #36]	; 0x24
 800bd1e:	a809      	add	r0, sp, #36	; 0x24
 800bd20:	f7ff f9f8 	bl	800b114 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800bd24:	0143      	lsls	r3, r0, #5
 800bd26:	9302      	str	r3, [sp, #8]
 800bd28:	9b01      	ldr	r3, [sp, #4]
 800bd2a:	eba3 0b07 	sub.w	fp, r3, r7
 800bd2e:	9b02      	ldr	r3, [sp, #8]
 800bd30:	eba3 0a08 	sub.w	sl, r3, r8
 800bd34:	4651      	mov	r1, sl
 800bd36:	4658      	mov	r0, fp
 800bd38:	f7ff fe8a 	bl	800ba50 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 800bd3c:	b318      	cbz	r0, 800bd86 <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss+0xf8>
 800bd3e:	4602      	mov	r2, r0
 800bd40:	4651      	mov	r1, sl
 800bd42:	9005      	str	r0, [sp, #20]
 800bd44:	9803      	ldr	r0, [sp, #12]
 800bd46:	f005 f9d3 	bl	80110f0 <_ZN8touchgfx6muldivElll>
 800bd4a:	2302      	movs	r3, #2
 800bd4c:	fb90 faf3 	sdiv	sl, r0, r3
 800bd50:	9b05      	ldr	r3, [sp, #20]
 800bd52:	9803      	ldr	r0, [sp, #12]
 800bd54:	461a      	mov	r2, r3
 800bd56:	4659      	mov	r1, fp
 800bd58:	f005 f9ca 	bl	80110f0 <_ZN8touchgfx6muldivElll>
 800bd5c:	2302      	movs	r3, #2
 800bd5e:	eba7 010a 	sub.w	r1, r7, sl
 800bd62:	fb90 fbf3 	sdiv	fp, r0, r3
 800bd66:	4648      	mov	r0, r9
 800bd68:	eb0b 0208 	add.w	r2, fp, r8
 800bd6c:	f013 fa08 	bl	801f180 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800bd70:	9b02      	ldr	r3, [sp, #8]
 800bd72:	eb03 020b 	add.w	r2, r3, fp
 800bd76:	9b01      	ldr	r3, [sp, #4]
 800bd78:	4648      	mov	r0, r9
 800bd7a:	eba3 010a 	sub.w	r1, r3, sl
 800bd7e:	f013 f9ff 	bl	801f180 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800bd82:	e9dd 7801 	ldrd	r7, r8, [sp, #4]
 800bd86:	42a6      	cmp	r6, r4
 800bd88:	db02      	blt.n	800bd90 <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss+0x102>
 800bd8a:	b00b      	add	sp, #44	; 0x2c
 800bd8c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bd90:	9b00      	ldr	r3, [sp, #0]
 800bd92:	9a04      	ldr	r2, [sp, #16]
 800bd94:	42a2      	cmp	r2, r4
 800bd96:	bf08      	it	eq
 800bd98:	f04f 33ff 	moveq.w	r3, #4294967295
 800bd9c:	e7a8      	b.n	800bcf0 <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss+0x62>
	...

0800bda0 <_ZN8touchgfx6CanvasD1Ev>:
 800bda0:	b510      	push	{r4, lr}
 800bda2:	4b04      	ldr	r3, [pc, #16]	; (800bdb4 <_ZN8touchgfx6CanvasD1Ev+0x14>)
 800bda4:	4604      	mov	r4, r0
 800bda6:	f840 3b20 	str.w	r3, [r0], #32
 800bdaa:	f001 fcfb 	bl	800d7a4 <_ZN8touchgfx7OutlineD1Ev>
 800bdae:	4620      	mov	r0, r4
 800bdb0:	bd10      	pop	{r4, pc}
 800bdb2:	bf00      	nop
 800bdb4:	08022614 	.word	0x08022614

0800bdb8 <_ZN8touchgfx6CanvasD0Ev>:
 800bdb8:	b510      	push	{r4, lr}
 800bdba:	4604      	mov	r4, r0
 800bdbc:	f7ff fff0 	bl	800bda0 <_ZN8touchgfx6CanvasD1Ev>
 800bdc0:	4620      	mov	r0, r4
 800bdc2:	2170      	movs	r1, #112	; 0x70
 800bdc4:	f013 fb77 	bl	801f4b6 <_ZdlPvj>
 800bdc8:	4620      	mov	r0, r4
 800bdca:	bd10      	pop	{r4, pc}

0800bdcc <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE>:
 800bdcc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bdd0:	6943      	ldr	r3, [r0, #20]
 800bdd2:	b0a2      	sub	sp, #136	; 0x88
 800bdd4:	4606      	mov	r6, r0
 800bdd6:	460f      	mov	r7, r1
 800bdd8:	2b00      	cmp	r3, #0
 800bdda:	d06a      	beq.n	800beb2 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xe6>
 800bddc:	695c      	ldr	r4, [r3, #20]
 800bdde:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800bde2:	2b01      	cmp	r3, #1
 800bde4:	dc04      	bgt.n	800bdf0 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0x24>
 800bde6:	2401      	movs	r4, #1
 800bde8:	4620      	mov	r0, r4
 800bdea:	b022      	add	sp, #136	; 0x88
 800bdec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800bdf0:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800bdf4:	ad22      	add	r5, sp, #136	; 0x88
 800bdf6:	011b      	lsls	r3, r3, #4
 800bdf8:	f845 3d70 	str.w	r3, [r5, #-112]!
 800bdfc:	4628      	mov	r0, r5
 800bdfe:	f7ff fc62 	bl	800b6c6 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 800be02:	8839      	ldrh	r1, [r7, #0]
 800be04:	88ba      	ldrh	r2, [r7, #4]
 800be06:	6823      	ldr	r3, [r4, #0]
 800be08:	b280      	uxth	r0, r0
 800be0a:	440a      	add	r2, r1
 800be0c:	4402      	add	r2, r0
 800be0e:	1a09      	subs	r1, r1, r0
 800be10:	f10d 000e 	add.w	r0, sp, #14
 800be14:	9000      	str	r0, [sp, #0]
 800be16:	f8d3 8124 	ldr.w	r8, [r3, #292]	; 0x124
 800be1a:	b212      	sxth	r2, r2
 800be1c:	ab03      	add	r3, sp, #12
 800be1e:	b209      	sxth	r1, r1
 800be20:	4620      	mov	r0, r4
 800be22:	47c0      	blx	r8
 800be24:	2800      	cmp	r0, #0
 800be26:	d0de      	beq.n	800bde6 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0x1a>
 800be28:	f9b4 1114 	ldrsh.w	r1, [r4, #276]	; 0x114
 800be2c:	f8b4 311a 	ldrh.w	r3, [r4, #282]	; 0x11a
 800be30:	f9b4 0040 	ldrsh.w	r0, [r4, #64]	; 0x40
 800be34:	f8ad 1012 	strh.w	r1, [sp, #18]
 800be38:	18ca      	adds	r2, r1, r3
 800be3a:	f8b4 3042 	ldrh.w	r3, [r4, #66]	; 0x42
 800be3e:	f8ad 0014 	strh.w	r0, [sp, #20]
 800be42:	1a9b      	subs	r3, r3, r2
 800be44:	4639      	mov	r1, r7
 800be46:	2200      	movs	r2, #0
 800be48:	a804      	add	r0, sp, #16
 800be4a:	f8ad 3016 	strh.w	r3, [sp, #22]
 800be4e:	f8ad 2010 	strh.w	r2, [sp, #16]
 800be52:	f7fd fe8b 	bl	8009b6c <_ZN8touchgfx4RectaNERKS0_>
 800be56:	aa04      	add	r2, sp, #16
 800be58:	4631      	mov	r1, r6
 800be5a:	4628      	mov	r0, r5
 800be5c:	f013 f8e2 	bl	801f024 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 800be60:	f9b4 7120 	ldrsh.w	r7, [r4, #288]	; 0x120
 800be64:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800be68:	f9bd 200e 	ldrsh.w	r2, [sp, #14]
 800be6c:	2f00      	cmp	r7, #0
 800be6e:	dd03      	ble.n	800be78 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xac>
 800be70:	42bb      	cmp	r3, r7
 800be72:	da01      	bge.n	800be78 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xac>
 800be74:	42ba      	cmp	r2, r7
 800be76:	da0f      	bge.n	800be98 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xcc>
 800be78:	9200      	str	r2, [sp, #0]
 800be7a:	4622      	mov	r2, r4
 800be7c:	4629      	mov	r1, r5
 800be7e:	4630      	mov	r0, r6
 800be80:	f7ff ff05 	bl	800bc8e <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss>
 800be84:	f894 102c 	ldrb.w	r1, [r4, #44]	; 0x2c
 800be88:	4628      	mov	r0, r5
 800be8a:	f013 f9f5 	bl	801f278 <_ZN8touchgfx6Canvas6renderEh>
 800be8e:	4604      	mov	r4, r0
 800be90:	4628      	mov	r0, r5
 800be92:	f7ff ff85 	bl	800bda0 <_ZN8touchgfx6CanvasD1Ev>
 800be96:	e7a7      	b.n	800bde8 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0x1c>
 800be98:	1e7a      	subs	r2, r7, #1
 800be9a:	b212      	sxth	r2, r2
 800be9c:	9200      	str	r2, [sp, #0]
 800be9e:	4629      	mov	r1, r5
 800bea0:	4622      	mov	r2, r4
 800bea2:	4630      	mov	r0, r6
 800bea4:	f7ff fef3 	bl	800bc8e <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss>
 800bea8:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800beac:	9300      	str	r3, [sp, #0]
 800beae:	463b      	mov	r3, r7
 800beb0:	e7e3      	b.n	800be7a <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xae>
 800beb2:	f8b3 311e 	ldrh.w	r3, [r3, #286]	; 0x11e
 800beb6:	deff      	udf	#255	; 0xff

0800beb8 <_ZN8touchgfx15GraphLabelsBase22invalidateGraphPointAtEs>:
 800beb8:	4770      	bx	lr

0800beba <_ZNK8touchgfx15GraphLabelsBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE>:
 800beba:	6c80      	ldr	r0, [r0, #72]	; 0x48
 800bebc:	b118      	cbz	r0, 800bec6 <_ZNK8touchgfx15GraphLabelsBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE+0xc>
 800bebe:	6803      	ldr	r3, [r0, #0]
 800bec0:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800bec4:	4718      	bx	r3
 800bec6:	4770      	bx	lr

0800bec8 <_ZNK8touchgfx12GraphLabelsX22getGraphRangeMinScaledEPKNS_17AbstractDataGraphE>:
 800bec8:	680b      	ldr	r3, [r1, #0]
 800beca:	4608      	mov	r0, r1
 800becc:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
 800bed0:	4718      	bx	r3

0800bed2 <_ZNK8touchgfx12GraphLabelsX22getGraphRangeMaxScaledEPKNS_17AbstractDataGraphE>:
 800bed2:	680b      	ldr	r3, [r1, #0]
 800bed4:	4608      	mov	r0, r1
 800bed6:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 800beda:	4718      	bx	r3

0800bedc <_ZNK8touchgfx12GraphLabelsY22getGraphRangeMinScaledEPKNS_17AbstractDataGraphE>:
 800bedc:	680b      	ldr	r3, [r1, #0]
 800bede:	4608      	mov	r0, r1
 800bee0:	f8d3 30ec 	ldr.w	r3, [r3, #236]	; 0xec
 800bee4:	4718      	bx	r3

0800bee6 <_ZNK8touchgfx12GraphLabelsY22getGraphRangeMaxScaledEPKNS_17AbstractDataGraphE>:
 800bee6:	680b      	ldr	r3, [r1, #0]
 800bee8:	4608      	mov	r0, r1
 800beea:	f8d3 30f8 	ldr.w	r3, [r3, #248]	; 0xf8
 800beee:	4718      	bx	r3

0800bef0 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE>:
 800bef0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bef4:	4a37      	ldr	r2, [pc, #220]	; (800bfd4 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0xe4>)
 800bef6:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 800bef8:	8812      	ldrh	r2, [r2, #0]
 800befa:	429a      	cmp	r2, r3
 800befc:	b087      	sub	sp, #28
 800befe:	4604      	mov	r4, r0
 800bf00:	4689      	mov	r9, r1
 800bf02:	d937      	bls.n	800bf74 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800bf04:	4a34      	ldr	r2, [pc, #208]	; (800bfd8 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0xe8>)
 800bf06:	6812      	ldr	r2, [r2, #0]
 800bf08:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800bf0c:	4b33      	ldr	r3, [pc, #204]	; (800bfdc <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0xec>)
 800bf0e:	681b      	ldr	r3, [r3, #0]
 800bf10:	f853 8022 	ldr.w	r8, [r3, r2, lsl #2]
 800bf14:	f1b8 0f00 	cmp.w	r8, #0
 800bf18:	d02c      	beq.n	800bf74 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800bf1a:	6803      	ldr	r3, [r0, #0]
 800bf1c:	6945      	ldr	r5, [r0, #20]
 800bf1e:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800bf20:	2d00      	cmp	r5, #0
 800bf22:	d052      	beq.n	800bfca <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0xda>
 800bf24:	696f      	ldr	r7, [r5, #20]
 800bf26:	4798      	blx	r3
 800bf28:	f897 502c 	ldrb.w	r5, [r7, #44]	; 0x2c
 800bf2c:	fb15 f000 	smulbb	r0, r5, r0
 800bf30:	b280      	uxth	r0, r0
 800bf32:	1c45      	adds	r5, r0, #1
 800bf34:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 800bf38:	122d      	asrs	r5, r5, #8
 800bf3a:	d01b      	beq.n	800bf74 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800bf3c:	6823      	ldr	r3, [r4, #0]
 800bf3e:	4639      	mov	r1, r7
 800bf40:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800bf44:	4620      	mov	r0, r4
 800bf46:	4798      	blx	r3
 800bf48:	6823      	ldr	r3, [r4, #0]
 800bf4a:	4606      	mov	r6, r0
 800bf4c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800bf50:	4639      	mov	r1, r7
 800bf52:	4620      	mov	r0, r4
 800bf54:	4798      	blx	r3
 800bf56:	b2ed      	uxtb	r5, r5
 800bf58:	4683      	mov	fp, r0
 800bf5a:	b970      	cbnz	r0, 800bf7a <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x8a>
 800bf5c:	b96e      	cbnz	r6, 800bf7a <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x8a>
 800bf5e:	e9cd 6501 	strd	r6, r5, [sp, #4]
 800bf62:	6823      	ldr	r3, [r4, #0]
 800bf64:	9600      	str	r6, [sp, #0]
 800bf66:	f8d3 508c 	ldr.w	r5, [r3, #140]	; 0x8c
 800bf6a:	4642      	mov	r2, r8
 800bf6c:	463b      	mov	r3, r7
 800bf6e:	4649      	mov	r1, r9
 800bf70:	4620      	mov	r0, r4
 800bf72:	47a8      	blx	r5
 800bf74:	b007      	add	sp, #28
 800bf76:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bf7a:	2e00      	cmp	r6, #0
 800bf7c:	ddfa      	ble.n	800bf74 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800bf7e:	6823      	ldr	r3, [r4, #0]
 800bf80:	4639      	mov	r1, r7
 800bf82:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800bf86:	4620      	mov	r0, r4
 800bf88:	4798      	blx	r3
 800bf8a:	6823      	ldr	r3, [r4, #0]
 800bf8c:	4682      	mov	sl, r0
 800bf8e:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 800bf92:	4639      	mov	r1, r7
 800bf94:	4620      	mov	r0, r4
 800bf96:	4798      	blx	r3
 800bf98:	4582      	cmp	sl, r0
 800bf9a:	bfde      	ittt	le
 800bf9c:	4603      	movle	r3, r0
 800bf9e:	4650      	movle	r0, sl
 800bfa0:	469a      	movle	sl, r3
 800bfa2:	ebaa 0300 	sub.w	r3, sl, r0
 800bfa6:	fb93 f3f6 	sdiv	r3, r3, r6
 800bfaa:	2b64      	cmp	r3, #100	; 0x64
 800bfac:	dce2      	bgt.n	800bf74 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800bfae:	e9cd b503 	strd	fp, r5, [sp, #12]
 800bfb2:	e9cd a601 	strd	sl, r6, [sp, #4]
 800bfb6:	6823      	ldr	r3, [r4, #0]
 800bfb8:	9000      	str	r0, [sp, #0]
 800bfba:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 800bfbe:	4642      	mov	r2, r8
 800bfc0:	463b      	mov	r3, r7
 800bfc2:	4649      	mov	r1, r9
 800bfc4:	4620      	mov	r0, r4
 800bfc6:	47a8      	blx	r5
 800bfc8:	e7d4      	b.n	800bf74 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800bfca:	4798      	blx	r3
 800bfcc:	f895 302c 	ldrb.w	r3, [r5, #44]	; 0x2c
 800bfd0:	deff      	udf	#255	; 0xff
 800bfd2:	bf00      	nop
 800bfd4:	200174b4 	.word	0x200174b4
 800bfd8:	200174b0 	.word	0x200174b0
 800bfdc:	200174b8 	.word	0x200174b8

0800bfe0 <_ZN8touchgfx12GraphLabelsYD1Ev>:
 800bfe0:	4770      	bx	lr

0800bfe2 <_ZN8touchgfx12GraphLabelsXD1Ev>:
 800bfe2:	4770      	bx	lr

0800bfe4 <_ZNK8touchgfx12GraphLabelsX31getCorrectlyScaledLabelIntervalEPKNS_17AbstractDataGraphE>:
 800bfe4:	b538      	push	{r3, r4, r5, lr}
 800bfe6:	680a      	ldr	r2, [r1, #0]
 800bfe8:	e9d0 540c 	ldrd	r5, r4, [r0, #48]	; 0x30
 800bfec:	f8d2 208c 	ldr.w	r2, [r2, #140]	; 0x8c
 800bff0:	4608      	mov	r0, r1
 800bff2:	4790      	blx	r2
 800bff4:	4629      	mov	r1, r5
 800bff6:	4602      	mov	r2, r0
 800bff8:	4620      	mov	r0, r4
 800bffa:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800bffe:	f7ff baa7 	b.w	800b550 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>

0800c002 <_ZNK8touchgfx12GraphLabelsY31getCorrectlyScaledLabelIntervalEPKNS_17AbstractDataGraphE>:
 800c002:	b538      	push	{r3, r4, r5, lr}
 800c004:	680a      	ldr	r2, [r1, #0]
 800c006:	e9d0 540c 	ldrd	r5, r4, [r0, #48]	; 0x30
 800c00a:	f8d2 2094 	ldr.w	r2, [r2, #148]	; 0x94
 800c00e:	4608      	mov	r0, r1
 800c010:	4790      	blx	r2
 800c012:	4629      	mov	r1, r5
 800c014:	4602      	mov	r2, r0
 800c016:	4620      	mov	r0, r4
 800c018:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800c01c:	f7ff ba98 	b.w	800b550 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>

0800c020 <_ZN8touchgfx12GraphLabelsYD0Ev>:
 800c020:	b510      	push	{r4, lr}
 800c022:	214c      	movs	r1, #76	; 0x4c
 800c024:	4604      	mov	r4, r0
 800c026:	f013 fa46 	bl	801f4b6 <_ZdlPvj>
 800c02a:	4620      	mov	r0, r4
 800c02c:	bd10      	pop	{r4, pc}

0800c02e <_ZN8touchgfx12GraphLabelsXD0Ev>:
 800c02e:	b510      	push	{r4, lr}
 800c030:	214c      	movs	r1, #76	; 0x4c
 800c032:	4604      	mov	r4, r0
 800c034:	f013 fa3f 	bl	801f4b6 <_ZdlPvj>
 800c038:	4620      	mov	r0, r4
 800c03a:	bd10      	pop	{r4, pc}

0800c03c <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih>:
 800c03c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c040:	b08d      	sub	sp, #52	; 0x34
 800c042:	e9dd 9a18 	ldrd	r9, sl, [sp, #96]	; 0x60
 800c046:	9309      	str	r3, [sp, #36]	; 0x24
 800c048:	f89d 3068 	ldrb.w	r3, [sp, #104]	; 0x68
 800c04c:	930a      	str	r3, [sp, #40]	; 0x28
 800c04e:	4606      	mov	r6, r0
 800c050:	e9cd 1207 	strd	r1, r2, [sp, #28]
 800c054:	e9dd 7816 	ldrd	r7, r8, [sp, #88]	; 0x58
 800c058:	f1b9 0f00 	cmp.w	r9, #0
 800c05c:	d117      	bne.n	800c08e <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x52>
 800c05e:	2f00      	cmp	r7, #0
 800c060:	dc7c      	bgt.n	800c15c <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x120>
 800c062:	f1b8 0f00 	cmp.w	r8, #0
 800c066:	da01      	bge.n	800c06c <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x30>
 800c068:	2f00      	cmp	r7, #0
 800c06a:	d17a      	bne.n	800c162 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x126>
 800c06c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800c06e:	9318      	str	r3, [sp, #96]	; 0x60
 800c070:	2300      	movs	r3, #0
 800c072:	e9cd 3316 	strd	r3, r3, [sp, #88]	; 0x58
 800c076:	6832      	ldr	r2, [r6, #0]
 800c078:	9907      	ldr	r1, [sp, #28]
 800c07a:	f8d2 408c 	ldr.w	r4, [r2, #140]	; 0x8c
 800c07e:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800c082:	4630      	mov	r0, r6
 800c084:	46a4      	mov	ip, r4
 800c086:	b00d      	add	sp, #52	; 0x34
 800c088:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c08c:	4760      	bx	ip
 800c08e:	fb97 f4f9 	sdiv	r4, r7, r9
 800c092:	1e63      	subs	r3, r4, #1
 800c094:	9305      	str	r3, [sp, #20]
 800c096:	f1ba 0f00 	cmp.w	sl, #0
 800c09a:	d122      	bne.n	800c0e2 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xa6>
 800c09c:	fb98 faf9 	sdiv	sl, r8, r9
 800c0a0:	fb03 f509 	mul.w	r5, r3, r9
 800c0a4:	f10a 0a02 	add.w	sl, sl, #2
 800c0a8:	9b05      	ldr	r3, [sp, #20]
 800c0aa:	459a      	cmp	sl, r3
 800c0ac:	d059      	beq.n	800c162 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x126>
 800c0ae:	42af      	cmp	r7, r5
 800c0b0:	dc5a      	bgt.n	800c168 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x12c>
 800c0b2:	45a8      	cmp	r8, r5
 800c0b4:	da01      	bge.n	800c0ba <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x7e>
 800c0b6:	42af      	cmp	r7, r5
 800c0b8:	db0e      	blt.n	800c0d8 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x9c>
 800c0ba:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800c0bc:	9302      	str	r3, [sp, #8]
 800c0be:	9905      	ldr	r1, [sp, #20]
 800c0c0:	6b73      	ldr	r3, [r6, #52]	; 0x34
 800c0c2:	6832      	ldr	r2, [r6, #0]
 800c0c4:	434b      	muls	r3, r1
 800c0c6:	e9cd 5300 	strd	r5, r3, [sp]
 800c0ca:	9907      	ldr	r1, [sp, #28]
 800c0cc:	f8d2 b08c 	ldr.w	fp, [r2, #140]	; 0x8c
 800c0d0:	4630      	mov	r0, r6
 800c0d2:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800c0d6:	47d8      	blx	fp
 800c0d8:	9b05      	ldr	r3, [sp, #20]
 800c0da:	3301      	adds	r3, #1
 800c0dc:	9305      	str	r3, [sp, #20]
 800c0de:	444d      	add	r5, r9
 800c0e0:	e7e2      	b.n	800c0a8 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x6c>
 800c0e2:	fb97 f3fa 	sdiv	r3, r7, sl
 800c0e6:	3b01      	subs	r3, #1
 800c0e8:	9306      	str	r3, [sp, #24]
 800c0ea:	9a06      	ldr	r2, [sp, #24]
 800c0ec:	fb98 f3fa 	sdiv	r3, r8, sl
 800c0f0:	fb02 fb0a 	mul.w	fp, r2, sl
 800c0f4:	9a05      	ldr	r2, [sp, #20]
 800c0f6:	3302      	adds	r3, #2
 800c0f8:	fb02 f509 	mul.w	r5, r2, r9
 800c0fc:	930b      	str	r3, [sp, #44]	; 0x2c
 800c0fe:	45ab      	cmp	fp, r5
 800c100:	dd1d      	ble.n	800c13e <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x102>
 800c102:	42af      	cmp	r7, r5
 800c104:	dc08      	bgt.n	800c118 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xdc>
 800c106:	45a8      	cmp	r8, r5
 800c108:	da08      	bge.n	800c11c <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xe0>
 800c10a:	42af      	cmp	r7, r5
 800c10c:	da06      	bge.n	800c11c <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xe0>
 800c10e:	9b05      	ldr	r3, [sp, #20]
 800c110:	3301      	adds	r3, #1
 800c112:	9305      	str	r3, [sp, #20]
 800c114:	444d      	add	r5, r9
 800c116:	e7f2      	b.n	800c0fe <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xc2>
 800c118:	45a8      	cmp	r8, r5
 800c11a:	dcf8      	bgt.n	800c10e <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xd2>
 800c11c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800c11e:	9302      	str	r3, [sp, #8]
 800c120:	9905      	ldr	r1, [sp, #20]
 800c122:	6b73      	ldr	r3, [r6, #52]	; 0x34
 800c124:	6832      	ldr	r2, [r6, #0]
 800c126:	434b      	muls	r3, r1
 800c128:	e9cd 5300 	strd	r5, r3, [sp]
 800c12c:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 800c130:	9907      	ldr	r1, [sp, #28]
 800c132:	461c      	mov	r4, r3
 800c134:	4630      	mov	r0, r6
 800c136:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800c13a:	47a0      	blx	r4
 800c13c:	e7e7      	b.n	800c10e <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xd2>
 800c13e:	45ab      	cmp	fp, r5
 800c140:	db04      	blt.n	800c14c <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x110>
 800c142:	9b05      	ldr	r3, [sp, #20]
 800c144:	3301      	adds	r3, #1
 800c146:	9305      	str	r3, [sp, #20]
 800c148:	444d      	add	r5, r9
 800c14a:	e7f8      	b.n	800c13e <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x102>
 800c14c:	9b06      	ldr	r3, [sp, #24]
 800c14e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800c150:	3301      	adds	r3, #1
 800c152:	4293      	cmp	r3, r2
 800c154:	9306      	str	r3, [sp, #24]
 800c156:	d004      	beq.n	800c162 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x126>
 800c158:	44d3      	add	fp, sl
 800c15a:	e7d0      	b.n	800c0fe <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xc2>
 800c15c:	f1b8 0f00 	cmp.w	r8, #0
 800c160:	dd84      	ble.n	800c06c <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x30>
 800c162:	b00d      	add	sp, #52	; 0x34
 800c164:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c168:	45a8      	cmp	r8, r5
 800c16a:	dcb5      	bgt.n	800c0d8 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x9c>
 800c16c:	e7a5      	b.n	800c0ba <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x7e>

0800c16e <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih>:
 800c16e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c172:	f9b3 4120 	ldrsh.w	r4, [r3, #288]	; 0x120
 800c176:	b089      	sub	sp, #36	; 0x24
 800c178:	2c00      	cmp	r4, #0
 800c17a:	9007      	str	r0, [sp, #28]
 800c17c:	468a      	mov	sl, r1
 800c17e:	4693      	mov	fp, r2
 800c180:	461d      	mov	r5, r3
 800c182:	e9dd c612 	ldrd	ip, r6, [sp, #72]	; 0x48
 800c186:	e9dd 7814 	ldrd	r7, r8, [sp, #80]	; 0x50
 800c18a:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 800c18e:	dd03      	ble.n	800c198 <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x2a>
 800c190:	4564      	cmp	r4, ip
 800c192:	dd01      	ble.n	800c198 <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x2a>
 800c194:	42b4      	cmp	r4, r6
 800c196:	dd0e      	ble.n	800c1b6 <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x48>
 800c198:	e9cd 8915 	strd	r8, r9, [sp, #84]	; 0x54
 800c19c:	e9cd 6713 	strd	r6, r7, [sp, #76]	; 0x4c
 800c1a0:	f8cd c048 	str.w	ip, [sp, #72]	; 0x48
 800c1a4:	9807      	ldr	r0, [sp, #28]
 800c1a6:	462b      	mov	r3, r5
 800c1a8:	465a      	mov	r2, fp
 800c1aa:	4651      	mov	r1, sl
 800c1ac:	b009      	add	sp, #36	; 0x24
 800c1ae:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c1b2:	f7ff bf43 	b.w	800c03c <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih>
 800c1b6:	f104 3eff 	add.w	lr, r4, #4294967295
 800c1ba:	e9cd 8903 	strd	r8, r9, [sp, #12]
 800c1be:	9702      	str	r7, [sp, #8]
 800c1c0:	e9cd ce00 	strd	ip, lr, [sp]
 800c1c4:	f7ff ff3a 	bl	800c03c <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih>
 800c1c8:	e9cd 8915 	strd	r8, r9, [sp, #84]	; 0x54
 800c1cc:	e9cd 6713 	strd	r6, r7, [sp, #76]	; 0x4c
 800c1d0:	9412      	str	r4, [sp, #72]	; 0x48
 800c1d2:	e7e7      	b.n	800c1a4 <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x36>

0800c1d4 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti>:
 800c1d4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800c1d8:	f1b3 0900 	subs.w	r9, r3, #0
 800c1dc:	460d      	mov	r5, r1
 800c1de:	4690      	mov	r8, r2
 800c1e0:	9f08      	ldr	r7, [sp, #32]
 800c1e2:	f8bd a024 	ldrh.w	sl, [sp, #36]	; 0x24
 800c1e6:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 800c1e8:	da18      	bge.n	800c21c <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x48>
 800c1ea:	2a01      	cmp	r2, #1
 800c1ec:	dd16      	ble.n	800c21c <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x48>
 800c1ee:	232d      	movs	r3, #45	; 0x2d
 800c1f0:	800b      	strh	r3, [r1, #0]
 800c1f2:	f1c9 0900 	rsb	r9, r9, #0
 800c1f6:	2001      	movs	r0, #1
 800c1f8:	2f00      	cmp	r7, #0
 800c1fa:	d111      	bne.n	800c220 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x4c>
 800c1fc:	eba8 0100 	sub.w	r1, r8, r0
 800c200:	2302      	movs	r3, #2
 800c202:	eb05 0040 	add.w	r0, r5, r0, lsl #1
 800c206:	fb96 f3f3 	sdiv	r3, r6, r3
 800c20a:	4a24      	ldr	r2, [pc, #144]	; (800c29c <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc8>)
 800c20c:	444b      	add	r3, r9
 800c20e:	b289      	uxth	r1, r1
 800c210:	fb93 f3f6 	sdiv	r3, r3, r6
 800c214:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800c218:	f006 bdd0 	b.w	8012dbc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 800c21c:	2000      	movs	r0, #0
 800c21e:	e7eb      	b.n	800c1f8 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x24>
 800c220:	dd39      	ble.n	800c296 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc2>
 800c222:	fb99 f4f6 	sdiv	r4, r9, r6
 800c226:	eba8 0100 	sub.w	r1, r8, r0
 800c22a:	4623      	mov	r3, r4
 800c22c:	4a1b      	ldr	r2, [pc, #108]	; (800c29c <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc8>)
 800c22e:	b289      	uxth	r1, r1
 800c230:	eb05 0040 	add.w	r0, r5, r0, lsl #1
 800c234:	f006 fdc2 	bl	8012dbc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 800c238:	4628      	mov	r0, r5
 800c23a:	f006 fa4b 	bl	80126d4 <_ZN8touchgfx7Unicode6strlenEPKt>
 800c23e:	f108 38ff 	add.w	r8, r8, #4294967295
 800c242:	4580      	cmp	r8, r0
 800c244:	dd27      	ble.n	800c296 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc2>
 800c246:	f825 a010 	strh.w	sl, [r5, r0, lsl #1]
 800c24a:	fb06 9314 	mls	r3, r6, r4, r9
 800c24e:	3001      	adds	r0, #1
 800c250:	2200      	movs	r2, #0
 800c252:	f04f 090a 	mov.w	r9, #10
 800c256:	f107 3aff 	add.w	sl, r7, #4294967295
 800c25a:	f04f 0e02 	mov.w	lr, #2
 800c25e:	fb96 fefe 	sdiv	lr, r6, lr
 800c262:	4580      	cmp	r8, r0
 800c264:	4684      	mov	ip, r0
 800c266:	dd13      	ble.n	800c290 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xbc>
 800c268:	fb09 f303 	mul.w	r3, r9, r3
 800c26c:	4592      	cmp	sl, r2
 800c26e:	f102 0201 	add.w	r2, r2, #1
 800c272:	bf08      	it	eq
 800c274:	4473      	addeq	r3, lr
 800c276:	f100 0c01 	add.w	ip, r0, #1
 800c27a:	fb93 f4f6 	sdiv	r4, r3, r6
 800c27e:	4297      	cmp	r7, r2
 800c280:	f104 0130 	add.w	r1, r4, #48	; 0x30
 800c284:	f825 1010 	strh.w	r1, [r5, r0, lsl #1]
 800c288:	fb06 3314 	mls	r3, r6, r4, r3
 800c28c:	4660      	mov	r0, ip
 800c28e:	d1e8      	bne.n	800c262 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x8e>
 800c290:	2300      	movs	r3, #0
 800c292:	f825 301c 	strh.w	r3, [r5, ip, lsl #1]
 800c296:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800c29a:	bf00      	nop
 800c29c:	080220b8 	.word	0x080220b8

0800c2a0 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs>:
 800c2a0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800c2a4:	4a6b      	ldr	r2, [pc, #428]	; (800c454 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1b4>)
 800c2a6:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 800c2a8:	8812      	ldrh	r2, [r2, #0]
 800c2aa:	429a      	cmp	r2, r3
 800c2ac:	b092      	sub	sp, #72	; 0x48
 800c2ae:	4604      	mov	r4, r0
 800c2b0:	460e      	mov	r6, r1
 800c2b2:	d93a      	bls.n	800c32a <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800c2b4:	4a68      	ldr	r2, [pc, #416]	; (800c458 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1b8>)
 800c2b6:	6812      	ldr	r2, [r2, #0]
 800c2b8:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800c2bc:	4b67      	ldr	r3, [pc, #412]	; (800c45c <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1bc>)
 800c2be:	681b      	ldr	r3, [r3, #0]
 800c2c0:	f853 8022 	ldr.w	r8, [r3, r2, lsl #2]
 800c2c4:	f1b8 0f00 	cmp.w	r8, #0
 800c2c8:	d02f      	beq.n	800c32a <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800c2ca:	6803      	ldr	r3, [r0, #0]
 800c2cc:	6945      	ldr	r5, [r0, #20]
 800c2ce:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800c2d0:	2d00      	cmp	r5, #0
 800c2d2:	f000 80ba 	beq.w	800c44a <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1aa>
 800c2d6:	696f      	ldr	r7, [r5, #20]
 800c2d8:	4798      	blx	r3
 800c2da:	f897 302c 	ldrb.w	r3, [r7, #44]	; 0x2c
 800c2de:	fb13 f000 	smulbb	r0, r3, r0
 800c2e2:	b280      	uxth	r0, r0
 800c2e4:	1c43      	adds	r3, r0, #1
 800c2e6:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 800c2ea:	0a03      	lsrs	r3, r0, #8
 800c2ec:	d01d      	beq.n	800c32a <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800c2ee:	6b39      	ldr	r1, [r7, #48]	; 0x30
 800c2f0:	6823      	ldr	r3, [r4, #0]
 800c2f2:	434e      	muls	r6, r1
 800c2f4:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800c2f8:	4639      	mov	r1, r7
 800c2fa:	4620      	mov	r0, r4
 800c2fc:	4798      	blx	r3
 800c2fe:	6823      	ldr	r3, [r4, #0]
 800c300:	4605      	mov	r5, r0
 800c302:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800c306:	4639      	mov	r1, r7
 800c308:	4620      	mov	r0, r4
 800c30a:	4798      	blx	r3
 800c30c:	2d00      	cmp	r5, #0
 800c30e:	dd0f      	ble.n	800c330 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x90>
 800c310:	fb96 f3f5 	sdiv	r3, r6, r5
 800c314:	436b      	muls	r3, r5
 800c316:	1b9a      	subs	r2, r3, r6
 800c318:	4253      	negs	r3, r2
 800c31a:	4153      	adcs	r3, r2
 800c31c:	2800      	cmp	r0, #0
 800c31e:	dd09      	ble.n	800c334 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x94>
 800c320:	fb96 f2f0 	sdiv	r2, r6, r0
 800c324:	4350      	muls	r0, r2
 800c326:	42b0      	cmp	r0, r6
 800c328:	d10e      	bne.n	800c348 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xa8>
 800c32a:	b012      	add	sp, #72	; 0x48
 800c32c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800c330:	2300      	movs	r3, #0
 800c332:	e7f3      	b.n	800c31c <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x7c>
 800c334:	d108      	bne.n	800c348 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xa8>
 800c336:	2d00      	cmp	r5, #0
 800c338:	f040 8084 	bne.w	800c444 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1a4>
 800c33c:	2e00      	cmp	r6, #0
 800c33e:	d055      	beq.n	800c3ec <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x14c>
 800c340:	2b00      	cmp	r3, #0
 800c342:	d0f2      	beq.n	800c32a <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800c344:	462a      	mov	r2, r5
 800c346:	e007      	b.n	800c358 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xb8>
 800c348:	2b00      	cmp	r3, #0
 800c34a:	d0ee      	beq.n	800c32a <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800c34c:	2d00      	cmp	r5, #0
 800c34e:	d0f9      	beq.n	800c344 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xa4>
 800c350:	fb96 f2f5 	sdiv	r2, r6, r5
 800c354:	6b65      	ldr	r5, [r4, #52]	; 0x34
 800c356:	436a      	muls	r2, r5
 800c358:	683b      	ldr	r3, [r7, #0]
 800c35a:	f8df 9104 	ldr.w	r9, [pc, #260]	; 800c460 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1c0>
 800c35e:	f8d3 3110 	ldr.w	r3, [r3, #272]	; 0x110
 800c362:	4631      	mov	r1, r6
 800c364:	4638      	mov	r0, r7
 800c366:	4798      	blx	r3
 800c368:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800c36a:	9302      	str	r3, [sp, #8]
 800c36c:	f8b4 3044 	ldrh.w	r3, [r4, #68]	; 0x44
 800c370:	9301      	str	r3, [sp, #4]
 800c372:	f8b4 3042 	ldrh.w	r3, [r4, #66]	; 0x42
 800c376:	9300      	str	r3, [sp, #0]
 800c378:	a908      	add	r1, sp, #32
 800c37a:	4603      	mov	r3, r0
 800c37c:	2214      	movs	r2, #20
 800c37e:	4620      	mov	r0, r4
 800c380:	f7ff ff28 	bl	800c1d4 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti>
 800c384:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800c388:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800c38a:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800c38e:	f8d8 3000 	ldr.w	r3, [r8]
 800c392:	d12d      	bne.n	800c3f0 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x150>
 800c394:	f8d9 0000 	ldr.w	r0, [r9]
 800c398:	699d      	ldr	r5, [r3, #24]
 800c39a:	f7f7 ffb3 	bl	8004304 <_ZNK8touchgfx5Texts7getTextEt>
 800c39e:	aa08      	add	r2, sp, #32
 800c3a0:	4601      	mov	r1, r0
 800c3a2:	4640      	mov	r0, r8
 800c3a4:	47a8      	blx	r5
 800c3a6:	4605      	mov	r5, r0
 800c3a8:	683b      	ldr	r3, [r7, #0]
 800c3aa:	f8b7 806c 	ldrh.w	r8, [r7, #108]	; 0x6c
 800c3ae:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 800c3b2:	4631      	mov	r1, r6
 800c3b4:	4638      	mov	r0, r7
 800c3b6:	4798      	blx	r3
 800c3b8:	ab12      	add	r3, sp, #72	; 0x48
 800c3ba:	f843 0d34 	str.w	r0, [r3, #-52]!
 800c3be:	4618      	mov	r0, r3
 800c3c0:	f7fe fea8 	bl	800b114 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c3c4:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800c3c8:	f8ad 301e 	strh.w	r3, [sp, #30]
 800c3cc:	4440      	add	r0, r8
 800c3ce:	6823      	ldr	r3, [r4, #0]
 800c3d0:	f8ad 501c 	strh.w	r5, [sp, #28]
 800c3d4:	eba0 0055 	sub.w	r0, r0, r5, lsr #1
 800c3d8:	2200      	movs	r2, #0
 800c3da:	f8ad 0018 	strh.w	r0, [sp, #24]
 800c3de:	f8ad 201a 	strh.w	r2, [sp, #26]
 800c3e2:	691b      	ldr	r3, [r3, #16]
 800c3e4:	a906      	add	r1, sp, #24
 800c3e6:	4620      	mov	r0, r4
 800c3e8:	4798      	blx	r3
 800c3ea:	e79e      	b.n	800c32a <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800c3ec:	4632      	mov	r2, r6
 800c3ee:	e7b3      	b.n	800c358 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xb8>
 800c3f0:	f8d9 0000 	ldr.w	r0, [r9]
 800c3f4:	6a9d      	ldr	r5, [r3, #40]	; 0x28
 800c3f6:	f7f7 ff85 	bl	8004304 <_ZNK8touchgfx5Texts7getTextEt>
 800c3fa:	aa08      	add	r2, sp, #32
 800c3fc:	4601      	mov	r1, r0
 800c3fe:	4640      	mov	r0, r8
 800c400:	47a8      	blx	r5
 800c402:	f8d8 3000 	ldr.w	r3, [r8]
 800c406:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800c408:	f8d3 a040 	ldr.w	sl, [r3, #64]	; 0x40
 800c40c:	4605      	mov	r5, r0
 800c40e:	f8d9 0000 	ldr.w	r0, [r9]
 800c412:	f7f7 ff77 	bl	8004304 <_ZNK8touchgfx5Texts7getTextEt>
 800c416:	aa08      	add	r2, sp, #32
 800c418:	4601      	mov	r1, r0
 800c41a:	4640      	mov	r0, r8
 800c41c:	47d0      	blx	sl
 800c41e:	f8d8 3000 	ldr.w	r3, [r8]
 800c422:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800c424:	f8d3 a024 	ldr.w	sl, [r3, #36]	; 0x24
 800c428:	fb15 f500 	smulbb	r5, r5, r0
 800c42c:	f8d9 0000 	ldr.w	r0, [r9]
 800c430:	f7f7 ff68 	bl	8004304 <_ZNK8touchgfx5Texts7getTextEt>
 800c434:	aa08      	add	r2, sp, #32
 800c436:	4601      	mov	r1, r0
 800c438:	4640      	mov	r0, r8
 800c43a:	47d0      	blx	sl
 800c43c:	b2ad      	uxth	r5, r5
 800c43e:	4405      	add	r5, r0
 800c440:	b2ad      	uxth	r5, r5
 800c442:	e7b1      	b.n	800c3a8 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x108>
 800c444:	2b00      	cmp	r3, #0
 800c446:	d183      	bne.n	800c350 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xb0>
 800c448:	e76f      	b.n	800c32a <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800c44a:	4798      	blx	r3
 800c44c:	f895 302c 	ldrb.w	r3, [r5, #44]	; 0x2c
 800c450:	deff      	udf	#255	; 0xff
 800c452:	bf00      	nop
 800c454:	200174b4 	.word	0x200174b4
 800c458:	200174b0 	.word	0x200174b0
 800c45c:	200174b8 	.word	0x200174b8
 800c460:	200174bc 	.word	0x200174bc

0800c464 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih>:
 800c464:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c468:	461d      	mov	r5, r3
 800c46a:	b099      	sub	sp, #100	; 0x64
 800c46c:	681b      	ldr	r3, [r3, #0]
 800c46e:	4604      	mov	r4, r0
 800c470:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 800c474:	4689      	mov	r9, r1
 800c476:	4628      	mov	r0, r5
 800c478:	9922      	ldr	r1, [sp, #136]	; 0x88
 800c47a:	4690      	mov	r8, r2
 800c47c:	4798      	blx	r3
 800c47e:	af18      	add	r7, sp, #96	; 0x60
 800c480:	f847 0d28 	str.w	r0, [r7, #-40]!
 800c484:	4638      	mov	r0, r7
 800c486:	f7fe fe45 	bl	800b114 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c48a:	f8b5 3116 	ldrh.w	r3, [r5, #278]	; 0x116
 800c48e:	1ac0      	subs	r0, r0, r3
 800c490:	b200      	sxth	r0, r0
 800c492:	2800      	cmp	r0, #0
 800c494:	f2c0 80b0 	blt.w	800c5f8 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x194>
 800c498:	f8b5 2118 	ldrh.w	r2, [r5, #280]	; 0x118
 800c49c:	441a      	add	r2, r3
 800c49e:	f8b5 3040 	ldrh.w	r3, [r5, #64]	; 0x40
 800c4a2:	1a9b      	subs	r3, r3, r2
 800c4a4:	b21b      	sxth	r3, r3
 800c4a6:	4298      	cmp	r0, r3
 800c4a8:	f280 80a6 	bge.w	800c5f8 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x194>
 800c4ac:	682b      	ldr	r3, [r5, #0]
 800c4ae:	e9dd 1222 	ldrd	r1, r2, [sp, #136]	; 0x88
 800c4b2:	f8d3 3110 	ldr.w	r3, [r3, #272]	; 0x110
 800c4b6:	4628      	mov	r0, r5
 800c4b8:	4798      	blx	r3
 800c4ba:	682b      	ldr	r3, [r5, #0]
 800c4bc:	f8b4 a042 	ldrh.w	sl, [r4, #66]	; 0x42
 800c4c0:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800c4c4:	f8b4 b044 	ldrh.w	fp, [r4, #68]	; 0x44
 800c4c8:	4606      	mov	r6, r0
 800c4ca:	4628      	mov	r0, r5
 800c4cc:	4798      	blx	r3
 800c4ce:	f8cd a000 	str.w	sl, [sp]
 800c4d2:	e9cd b001 	strd	fp, r0, [sp, #4]
 800c4d6:	4633      	mov	r3, r6
 800c4d8:	4639      	mov	r1, r7
 800c4da:	2214      	movs	r2, #20
 800c4dc:	4620      	mov	r0, r4
 800c4de:	f7ff fe79 	bl	800c1d4 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti>
 800c4e2:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800c4e6:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800c4e8:	f8df a16c 	ldr.w	sl, [pc, #364]	; 800c658 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1f4>
 800c4ec:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800c4f0:	f8d8 3000 	ldr.w	r3, [r8]
 800c4f4:	f040 8083 	bne.w	800c5fe <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x19a>
 800c4f8:	f8da 0000 	ldr.w	r0, [sl]
 800c4fc:	699e      	ldr	r6, [r3, #24]
 800c4fe:	f7f7 ff01 	bl	8004304 <_ZNK8touchgfx5Texts7getTextEt>
 800c502:	463a      	mov	r2, r7
 800c504:	4601      	mov	r1, r0
 800c506:	4640      	mov	r0, r8
 800c508:	47b0      	blx	r6
 800c50a:	4606      	mov	r6, r0
 800c50c:	682b      	ldr	r3, [r5, #0]
 800c50e:	9922      	ldr	r1, [sp, #136]	; 0x88
 800c510:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 800c514:	f8b5 a06c 	ldrh.w	sl, [r5, #108]	; 0x6c
 800c518:	4628      	mov	r0, r5
 800c51a:	4798      	blx	r3
 800c51c:	f10d 0b60 	add.w	fp, sp, #96	; 0x60
 800c520:	ad05      	add	r5, sp, #20
 800c522:	f84b 0d3c 	str.w	r0, [fp, #-60]!
 800c526:	4658      	mov	r0, fp
 800c528:	f7fe fdf4 	bl	800b114 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c52c:	4450      	add	r0, sl
 800c52e:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800c532:	f8ad 6018 	strh.w	r6, [sp, #24]
 800c536:	eba0 0056 	sub.w	r0, r0, r6, lsr #1
 800c53a:	f04f 0a00 	mov.w	sl, #0
 800c53e:	f8ad 301a 	strh.w	r3, [sp, #26]
 800c542:	f8ad 0014 	strh.w	r0, [sp, #20]
 800c546:	f8ad a016 	strh.w	sl, [sp, #22]
 800c54a:	e895 0003 	ldmia.w	r5, {r0, r1}
 800c54e:	ae07      	add	r6, sp, #28
 800c550:	e886 0003 	stmia.w	r6, {r0, r1}
 800c554:	4649      	mov	r1, r9
 800c556:	4630      	mov	r0, r6
 800c558:	f7fd fb08 	bl	8009b6c <_ZN8touchgfx4RectaNERKS0_>
 800c55c:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 800c560:	4553      	cmp	r3, sl
 800c562:	dd49      	ble.n	800c5f8 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x194>
 800c564:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 800c568:	4553      	cmp	r3, sl
 800c56a:	dd45      	ble.n	800c5f8 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x194>
 800c56c:	f8bd 301c 	ldrh.w	r3, [sp, #28]
 800c570:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800c574:	1a9b      	subs	r3, r3, r2
 800c576:	f8ad 301c 	strh.w	r3, [sp, #28]
 800c57a:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 800c57e:	f8bd 301e 	ldrh.w	r3, [sp, #30]
 800c582:	1a9b      	subs	r3, r3, r2
 800c584:	f8ad 301e 	strh.w	r3, [sp, #30]
 800c588:	6823      	ldr	r3, [r4, #0]
 800c58a:	4620      	mov	r0, r4
 800c58c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800c58e:	4629      	mov	r1, r5
 800c590:	4798      	blx	r3
 800c592:	4b30      	ldr	r3, [pc, #192]	; (800c654 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1f0>)
 800c594:	f8b4 903c 	ldrh.w	r9, [r4, #60]	; 0x3c
 800c598:	681b      	ldr	r3, [r3, #0]
 800c59a:	f894 1040 	ldrb.w	r1, [r4, #64]	; 0x40
 800c59e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800c5a0:	eb03 0349 	add.w	r3, r3, r9, lsl #1
 800c5a4:	785b      	ldrb	r3, [r3, #1]
 800c5a6:	920b      	str	r2, [sp, #44]	; 0x2c
 800c5a8:	f3c3 0001 	ubfx	r0, r3, #0, #2
 800c5ac:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800c5b0:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800c5b4:	f89d 3090 	ldrb.w	r3, [sp, #144]	; 0x90
 800c5b8:	f88d 102a 	strb.w	r1, [sp, #42]	; 0x2a
 800c5bc:	f88d 3032 	strb.w	r3, [sp, #50]	; 0x32
 800c5c0:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 800c5c4:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 800c5c8:	f8ad a030 	strh.w	sl, [sp, #48]	; 0x30
 800c5cc:	f88d a033 	strb.w	sl, [sp, #51]	; 0x33
 800c5d0:	f88d a034 	strb.w	sl, [sp, #52]	; 0x34
 800c5d4:	f7f5 fece 	bl	8002374 <_ZN8touchgfx3HAL3lcdEv>
 800c5d8:	4b1f      	ldr	r3, [pc, #124]	; (800c658 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1f4>)
 800c5da:	4604      	mov	r4, r0
 800c5dc:	4649      	mov	r1, r9
 800c5de:	6818      	ldr	r0, [r3, #0]
 800c5e0:	f7f7 fe90 	bl	8004304 <_ZNK8touchgfx5Texts7getTextEt>
 800c5e4:	e9cd 7a02 	strd	r7, sl, [sp, #8]
 800c5e8:	e9cd b000 	strd	fp, r0, [sp]
 800c5ec:	4633      	mov	r3, r6
 800c5ee:	e895 0006 	ldmia.w	r5, {r1, r2}
 800c5f2:	4620      	mov	r0, r4
 800c5f4:	f7f7 fe38 	bl	8004268 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800c5f8:	b019      	add	sp, #100	; 0x64
 800c5fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c5fe:	f8da 0000 	ldr.w	r0, [sl]
 800c602:	6a9e      	ldr	r6, [r3, #40]	; 0x28
 800c604:	f7f7 fe7e 	bl	8004304 <_ZNK8touchgfx5Texts7getTextEt>
 800c608:	463a      	mov	r2, r7
 800c60a:	4601      	mov	r1, r0
 800c60c:	4640      	mov	r0, r8
 800c60e:	47b0      	blx	r6
 800c610:	f8d8 3000 	ldr.w	r3, [r8]
 800c614:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800c616:	f8d3 b040 	ldr.w	fp, [r3, #64]	; 0x40
 800c61a:	4606      	mov	r6, r0
 800c61c:	f8da 0000 	ldr.w	r0, [sl]
 800c620:	f7f7 fe70 	bl	8004304 <_ZNK8touchgfx5Texts7getTextEt>
 800c624:	463a      	mov	r2, r7
 800c626:	4601      	mov	r1, r0
 800c628:	4640      	mov	r0, r8
 800c62a:	47d8      	blx	fp
 800c62c:	f8d8 3000 	ldr.w	r3, [r8]
 800c630:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800c632:	f8d3 b024 	ldr.w	fp, [r3, #36]	; 0x24
 800c636:	fb16 f600 	smulbb	r6, r6, r0
 800c63a:	f8da 0000 	ldr.w	r0, [sl]
 800c63e:	f7f7 fe61 	bl	8004304 <_ZNK8touchgfx5Texts7getTextEt>
 800c642:	463a      	mov	r2, r7
 800c644:	4601      	mov	r1, r0
 800c646:	4640      	mov	r0, r8
 800c648:	47d8      	blx	fp
 800c64a:	b2b6      	uxth	r6, r6
 800c64c:	4406      	add	r6, r0
 800c64e:	b2b6      	uxth	r6, r6
 800c650:	e75c      	b.n	800c50c <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0xa8>
 800c652:	bf00      	nop
 800c654:	200174b0 	.word	0x200174b0
 800c658:	200174bc 	.word	0x200174bc

0800c65c <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih>:
 800c65c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c660:	4698      	mov	r8, r3
 800c662:	b099      	sub	sp, #100	; 0x64
 800c664:	681b      	ldr	r3, [r3, #0]
 800c666:	4604      	mov	r4, r0
 800c668:	f8d3 3118 	ldr.w	r3, [r3, #280]	; 0x118
 800c66c:	4689      	mov	r9, r1
 800c66e:	4640      	mov	r0, r8
 800c670:	9922      	ldr	r1, [sp, #136]	; 0x88
 800c672:	4617      	mov	r7, r2
 800c674:	4798      	blx	r3
 800c676:	ae18      	add	r6, sp, #96	; 0x60
 800c678:	f846 0d28 	str.w	r0, [r6, #-40]!
 800c67c:	4630      	mov	r0, r6
 800c67e:	f7fe fd49 	bl	800b114 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c682:	f8b8 3114 	ldrh.w	r3, [r8, #276]	; 0x114
 800c686:	1ac0      	subs	r0, r0, r3
 800c688:	b200      	sxth	r0, r0
 800c68a:	2800      	cmp	r0, #0
 800c68c:	f2c0 80c0 	blt.w	800c810 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1b4>
 800c690:	f8b8 211a 	ldrh.w	r2, [r8, #282]	; 0x11a
 800c694:	441a      	add	r2, r3
 800c696:	f8b8 3042 	ldrh.w	r3, [r8, #66]	; 0x42
 800c69a:	1a9b      	subs	r3, r3, r2
 800c69c:	b21b      	sxth	r3, r3
 800c69e:	4298      	cmp	r0, r3
 800c6a0:	f280 80b6 	bge.w	800c810 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1b4>
 800c6a4:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800c6a6:	9302      	str	r3, [sp, #8]
 800c6a8:	f8b4 3044 	ldrh.w	r3, [r4, #68]	; 0x44
 800c6ac:	9301      	str	r3, [sp, #4]
 800c6ae:	f8b4 3042 	ldrh.w	r3, [r4, #66]	; 0x42
 800c6b2:	9300      	str	r3, [sp, #0]
 800c6b4:	4631      	mov	r1, r6
 800c6b6:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800c6b8:	f8df a174 	ldr.w	sl, [pc, #372]	; 800c830 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1d4>
 800c6bc:	2214      	movs	r2, #20
 800c6be:	4620      	mov	r0, r4
 800c6c0:	f7ff fd88 	bl	800c1d4 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti>
 800c6c4:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800c6c8:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800c6ca:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800c6ce:	683b      	ldr	r3, [r7, #0]
 800c6d0:	f040 80a1 	bne.w	800c816 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1ba>
 800c6d4:	f8da 0000 	ldr.w	r0, [sl]
 800c6d8:	6a9d      	ldr	r5, [r3, #40]	; 0x28
 800c6da:	f7f7 fe13 	bl	8004304 <_ZNK8touchgfx5Texts7getTextEt>
 800c6de:	4632      	mov	r2, r6
 800c6e0:	4601      	mov	r1, r0
 800c6e2:	4638      	mov	r0, r7
 800c6e4:	47a8      	blx	r5
 800c6e6:	683b      	ldr	r3, [r7, #0]
 800c6e8:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800c6ea:	f8d3 b040 	ldr.w	fp, [r3, #64]	; 0x40
 800c6ee:	4605      	mov	r5, r0
 800c6f0:	f8da 0000 	ldr.w	r0, [sl]
 800c6f4:	f7f7 fe06 	bl	8004304 <_ZNK8touchgfx5Texts7getTextEt>
 800c6f8:	4632      	mov	r2, r6
 800c6fa:	4601      	mov	r1, r0
 800c6fc:	4638      	mov	r0, r7
 800c6fe:	47d8      	blx	fp
 800c700:	683b      	ldr	r3, [r7, #0]
 800c702:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800c704:	f8d3 b024 	ldr.w	fp, [r3, #36]	; 0x24
 800c708:	fb15 f500 	smulbb	r5, r5, r0
 800c70c:	f8da 0000 	ldr.w	r0, [sl]
 800c710:	f7f7 fdf8 	bl	8004304 <_ZNK8touchgfx5Texts7getTextEt>
 800c714:	4632      	mov	r2, r6
 800c716:	4601      	mov	r1, r0
 800c718:	4638      	mov	r0, r7
 800c71a:	47d8      	blx	fp
 800c71c:	b2ad      	uxth	r5, r5
 800c71e:	4405      	add	r5, r0
 800c720:	b2ad      	uxth	r5, r5
 800c722:	f8d8 3000 	ldr.w	r3, [r8]
 800c726:	9922      	ldr	r1, [sp, #136]	; 0x88
 800c728:	f8d3 3118 	ldr.w	r3, [r3, #280]	; 0x118
 800c72c:	f8b8 a0c6 	ldrh.w	sl, [r8, #198]	; 0xc6
 800c730:	4640      	mov	r0, r8
 800c732:	4798      	blx	r3
 800c734:	f10d 0b60 	add.w	fp, sp, #96	; 0x60
 800c738:	f04f 0800 	mov.w	r8, #0
 800c73c:	f84b 0d3c 	str.w	r0, [fp, #-60]!
 800c740:	4658      	mov	r0, fp
 800c742:	f7fe fce7 	bl	800b114 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c746:	4450      	add	r0, sl
 800c748:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800c74c:	f8ad 3018 	strh.w	r3, [sp, #24]
 800c750:	eba0 0055 	sub.w	r0, r0, r5, lsr #1
 800c754:	f8ad 501a 	strh.w	r5, [sp, #26]
 800c758:	f8ad 8014 	strh.w	r8, [sp, #20]
 800c75c:	f8ad 0016 	strh.w	r0, [sp, #22]
 800c760:	ad05      	add	r5, sp, #20
 800c762:	e895 0003 	ldmia.w	r5, {r0, r1}
 800c766:	f10d 0a1c 	add.w	sl, sp, #28
 800c76a:	e88a 0003 	stmia.w	sl, {r0, r1}
 800c76e:	4649      	mov	r1, r9
 800c770:	4650      	mov	r0, sl
 800c772:	f7fd f9fb 	bl	8009b6c <_ZN8touchgfx4RectaNERKS0_>
 800c776:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 800c77a:	4543      	cmp	r3, r8
 800c77c:	dd48      	ble.n	800c810 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1b4>
 800c77e:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 800c782:	4543      	cmp	r3, r8
 800c784:	dd44      	ble.n	800c810 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1b4>
 800c786:	f8bd 301c 	ldrh.w	r3, [sp, #28]
 800c78a:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800c78e:	1a9b      	subs	r3, r3, r2
 800c790:	f8ad 301c 	strh.w	r3, [sp, #28]
 800c794:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 800c798:	f8bd 301e 	ldrh.w	r3, [sp, #30]
 800c79c:	1a9b      	subs	r3, r3, r2
 800c79e:	f8ad 301e 	strh.w	r3, [sp, #30]
 800c7a2:	6823      	ldr	r3, [r4, #0]
 800c7a4:	4620      	mov	r0, r4
 800c7a6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800c7a8:	4629      	mov	r1, r5
 800c7aa:	4798      	blx	r3
 800c7ac:	4b1f      	ldr	r3, [pc, #124]	; (800c82c <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1d0>)
 800c7ae:	f8b4 903c 	ldrh.w	r9, [r4, #60]	; 0x3c
 800c7b2:	681b      	ldr	r3, [r3, #0]
 800c7b4:	f894 1040 	ldrb.w	r1, [r4, #64]	; 0x40
 800c7b8:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800c7ba:	eb03 0349 	add.w	r3, r3, r9, lsl #1
 800c7be:	785b      	ldrb	r3, [r3, #1]
 800c7c0:	920b      	str	r2, [sp, #44]	; 0x2c
 800c7c2:	f3c3 0001 	ubfx	r0, r3, #0, #2
 800c7c6:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800c7ca:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800c7ce:	f89d 3090 	ldrb.w	r3, [sp, #144]	; 0x90
 800c7d2:	f88d 102a 	strb.w	r1, [sp, #42]	; 0x2a
 800c7d6:	f88d 3032 	strb.w	r3, [sp, #50]	; 0x32
 800c7da:	9709      	str	r7, [sp, #36]	; 0x24
 800c7dc:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 800c7e0:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
 800c7e4:	f88d 8033 	strb.w	r8, [sp, #51]	; 0x33
 800c7e8:	f88d 8034 	strb.w	r8, [sp, #52]	; 0x34
 800c7ec:	f7f5 fdc2 	bl	8002374 <_ZN8touchgfx3HAL3lcdEv>
 800c7f0:	4b0f      	ldr	r3, [pc, #60]	; (800c830 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1d4>)
 800c7f2:	4604      	mov	r4, r0
 800c7f4:	4649      	mov	r1, r9
 800c7f6:	6818      	ldr	r0, [r3, #0]
 800c7f8:	f7f7 fd84 	bl	8004304 <_ZNK8touchgfx5Texts7getTextEt>
 800c7fc:	e9cd 6802 	strd	r6, r8, [sp, #8]
 800c800:	e9cd b000 	strd	fp, r0, [sp]
 800c804:	4653      	mov	r3, sl
 800c806:	e895 0006 	ldmia.w	r5, {r1, r2}
 800c80a:	4620      	mov	r0, r4
 800c80c:	f7f7 fd2c 	bl	8004268 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800c810:	b019      	add	sp, #100	; 0x64
 800c812:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c816:	f8da 0000 	ldr.w	r0, [sl]
 800c81a:	699d      	ldr	r5, [r3, #24]
 800c81c:	f7f7 fd72 	bl	8004304 <_ZNK8touchgfx5Texts7getTextEt>
 800c820:	4632      	mov	r2, r6
 800c822:	4601      	mov	r1, r0
 800c824:	4638      	mov	r0, r7
 800c826:	47a8      	blx	r5
 800c828:	4605      	mov	r5, r0
 800c82a:	e77a      	b.n	800c722 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0xc6>
 800c82c:	200174b0 	.word	0x200174b0
 800c830:	200174bc 	.word	0x200174bc

0800c834 <_ZN8touchgfx15GraphScrollData5clearEv>:
 800c834:	b510      	push	{r4, lr}
 800c836:	4604      	mov	r4, r0
 800c838:	f7fe fb05 	bl	800ae46 <_ZN8touchgfx17AbstractDataGraph5clearEv>
 800c83c:	2300      	movs	r3, #0
 800c83e:	f8a4 314c 	strh.w	r3, [r4, #332]	; 0x14c
 800c842:	bd10      	pop	{r4, pc}

0800c844 <_ZN8touchgfx15GraphScrollData14beforeAddValueEv>:
 800c844:	f9b0 211e 	ldrsh.w	r2, [r0, #286]	; 0x11e
 800c848:	f9b0 311c 	ldrsh.w	r3, [r0, #284]	; 0x11c
 800c84c:	429a      	cmp	r2, r3
 800c84e:	d101      	bne.n	800c854 <_ZN8touchgfx15GraphScrollData14beforeAddValueEv+0x10>
 800c850:	f7fe bd38 	b.w	800b2c4 <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv>
 800c854:	4770      	bx	lr

0800c856 <_ZNK8touchgfx15GraphScrollData18indexToGlobalIndexEs>:
 800c856:	b538      	push	{r3, r4, r5, lr}
 800c858:	f9b0 411c 	ldrsh.w	r4, [r0, #284]	; 0x11c
 800c85c:	f9b0 511e 	ldrsh.w	r5, [r0, #286]	; 0x11e
 800c860:	42a5      	cmp	r5, r4
 800c862:	da04      	bge.n	800c86e <_ZNK8touchgfx15GraphScrollData18indexToGlobalIndexEs+0x18>
 800c864:	6803      	ldr	r3, [r0, #0]
 800c866:	f8d3 3180 	ldr.w	r3, [r3, #384]	; 0x180
 800c86a:	4798      	blx	r3
 800c86c:	bd38      	pop	{r3, r4, r5, pc}
 800c86e:	f8d0 0148 	ldr.w	r0, [r0, #328]	; 0x148
 800c872:	4408      	add	r0, r1
 800c874:	1b00      	subs	r0, r0, r4
 800c876:	e7f9      	b.n	800c86c <_ZNK8touchgfx15GraphScrollData18indexToGlobalIndexEs+0x16>

0800c878 <_ZN8touchgfx15GraphScrollData8addValueEi>:
 800c878:	b570      	push	{r4, r5, r6, lr}
 800c87a:	f9b0 514c 	ldrsh.w	r5, [r0, #332]	; 0x14c
 800c87e:	f9b0 611e 	ldrsh.w	r6, [r0, #286]	; 0x11e
 800c882:	f9b0 211c 	ldrsh.w	r2, [r0, #284]	; 0x11c
 800c886:	4604      	mov	r4, r0
 800c888:	1c6b      	adds	r3, r5, #1
 800c88a:	b21b      	sxth	r3, r3
 800c88c:	42ae      	cmp	r6, r5
 800c88e:	bf08      	it	eq
 800c890:	f8a4 311e 	strheq.w	r3, [r4, #286]	; 0x11e
 800c894:	fb93 f0f2 	sdiv	r0, r3, r2
 800c898:	fb02 3010 	mls	r0, r2, r0, r3
 800c89c:	f8d4 3144 	ldr.w	r3, [r4, #324]	; 0x144
 800c8a0:	f8a4 014c 	strh.w	r0, [r4, #332]	; 0x14c
 800c8a4:	4296      	cmp	r6, r2
 800c8a6:	f843 1025 	str.w	r1, [r3, r5, lsl #2]
 800c8aa:	d108      	bne.n	800c8be <_ZN8touchgfx15GraphScrollData8addValueEi+0x46>
 800c8ac:	f104 0038 	add.w	r0, r4, #56	; 0x38
 800c8b0:	f004 fa5d 	bl	8010d6e <_ZNK8touchgfx8Drawable10invalidateEv>
 800c8b4:	4620      	mov	r0, r4
 800c8b6:	f7fe fd05 	bl	800b2c4 <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv>
 800c8ba:	4628      	mov	r0, r5
 800c8bc:	bd70      	pop	{r4, r5, r6, pc}
 800c8be:	4629      	mov	r1, r5
 800c8c0:	4620      	mov	r0, r4
 800c8c2:	f7fe fcd7 	bl	800b274 <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs>
 800c8c6:	e7f8      	b.n	800c8ba <_ZN8touchgfx15GraphScrollData8addValueEi+0x42>

0800c8c8 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 800c8c8:	2000      	movs	r0, #0
 800c8ca:	4770      	bx	lr

0800c8cc <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 800c8cc:	4b07      	ldr	r3, [pc, #28]	; (800c8ec <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 800c8ce:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800c8d0:	881b      	ldrh	r3, [r3, #0]
 800c8d2:	4293      	cmp	r3, r2
 800c8d4:	bf81      	itttt	hi
 800c8d6:	4b06      	ldrhi	r3, [pc, #24]	; (800c8f0 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 800c8d8:	681b      	ldrhi	r3, [r3, #0]
 800c8da:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 800c8de:	7858      	ldrbhi	r0, [r3, #1]
 800c8e0:	bf8c      	ite	hi
 800c8e2:	f000 0003 	andhi.w	r0, r0, #3
 800c8e6:	2000      	movls	r0, #0
 800c8e8:	4770      	bx	lr
 800c8ea:	bf00      	nop
 800c8ec:	200174b4 	.word	0x200174b4
 800c8f0:	200174b0 	.word	0x200174b0

0800c8f4 <_ZN8touchgfx8TextAreaD1Ev>:
 800c8f4:	4770      	bx	lr
	...

0800c8f8 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 800c8f8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c8fc:	4b10      	ldr	r3, [pc, #64]	; (800c940 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 800c8fe:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800c900:	881b      	ldrh	r3, [r3, #0]
 800c902:	428b      	cmp	r3, r1
 800c904:	4604      	mov	r4, r0
 800c906:	d918      	bls.n	800c93a <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 800c908:	6803      	ldr	r3, [r0, #0]
 800c90a:	6f9d      	ldr	r5, [r3, #120]	; 0x78
 800c90c:	4b0d      	ldr	r3, [pc, #52]	; (800c944 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 800c90e:	6818      	ldr	r0, [r3, #0]
 800c910:	f7f7 fcf8 	bl	8004304 <_ZNK8touchgfx5Texts7getTextEt>
 800c914:	6823      	ldr	r3, [r4, #0]
 800c916:	4606      	mov	r6, r0
 800c918:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800c91a:	4620      	mov	r0, r4
 800c91c:	4798      	blx	r3
 800c91e:	6823      	ldr	r3, [r4, #0]
 800c920:	4607      	mov	r7, r0
 800c922:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800c926:	4620      	mov	r0, r4
 800c928:	4798      	blx	r3
 800c92a:	463a      	mov	r2, r7
 800c92c:	4603      	mov	r3, r0
 800c92e:	4631      	mov	r1, r6
 800c930:	4620      	mov	r0, r4
 800c932:	46ac      	mov	ip, r5
 800c934:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800c938:	4760      	bx	ip
 800c93a:	2000      	movs	r0, #0
 800c93c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c940:	200174b4 	.word	0x200174b4
 800c944:	200174bc 	.word	0x200174bc

0800c948 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 800c948:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800c94c:	4b17      	ldr	r3, [pc, #92]	; (800c9ac <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 800c94e:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800c950:	881b      	ldrh	r3, [r3, #0]
 800c952:	428b      	cmp	r3, r1
 800c954:	4604      	mov	r4, r0
 800c956:	d926      	bls.n	800c9a6 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 800c958:	4b15      	ldr	r3, [pc, #84]	; (800c9b0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 800c95a:	681b      	ldr	r3, [r3, #0]
 800c95c:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 800c960:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 800c964:	4b13      	ldr	r3, [pc, #76]	; (800c9b4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 800c966:	7855      	ldrb	r5, [r2, #1]
 800c968:	681b      	ldr	r3, [r3, #0]
 800c96a:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 800c96e:	6833      	ldr	r3, [r6, #0]
 800c970:	69df      	ldr	r7, [r3, #28]
 800c972:	4b11      	ldr	r3, [pc, #68]	; (800c9b8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 800c974:	6818      	ldr	r0, [r3, #0]
 800c976:	f7f7 fcc5 	bl	8004304 <_ZNK8touchgfx5Texts7getTextEt>
 800c97a:	6823      	ldr	r3, [r4, #0]
 800c97c:	4680      	mov	r8, r0
 800c97e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800c980:	4620      	mov	r0, r4
 800c982:	4798      	blx	r3
 800c984:	6823      	ldr	r3, [r4, #0]
 800c986:	4681      	mov	r9, r0
 800c988:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800c98c:	4620      	mov	r0, r4
 800c98e:	4798      	blx	r3
 800c990:	f3c5 0581 	ubfx	r5, r5, #2, #2
 800c994:	9000      	str	r0, [sp, #0]
 800c996:	464b      	mov	r3, r9
 800c998:	4642      	mov	r2, r8
 800c99a:	4629      	mov	r1, r5
 800c99c:	4630      	mov	r0, r6
 800c99e:	47b8      	blx	r7
 800c9a0:	b003      	add	sp, #12
 800c9a2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800c9a6:	2000      	movs	r0, #0
 800c9a8:	e7fa      	b.n	800c9a0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 800c9aa:	bf00      	nop
 800c9ac:	200174b4 	.word	0x200174b4
 800c9b0:	200174b0 	.word	0x200174b0
 800c9b4:	200174b8 	.word	0x200174b8
 800c9b8:	200174bc 	.word	0x200174bc

0800c9bc <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 800c9bc:	b40e      	push	{r1, r2, r3}
 800c9be:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800c9c2:	4b2f      	ldr	r3, [pc, #188]	; (800ca80 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 800c9c4:	881a      	ldrh	r2, [r3, #0]
 800c9c6:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 800c9c8:	429a      	cmp	r2, r3
 800c9ca:	b09d      	sub	sp, #116	; 0x74
 800c9cc:	4604      	mov	r4, r0
 800c9ce:	d954      	bls.n	800ca7a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 800c9d0:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 800ca84 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 800c9d4:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 800ca88 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 800c9d8:	aa26      	add	r2, sp, #152	; 0x98
 800c9da:	9202      	str	r2, [sp, #8]
 800c9dc:	f8d9 2000 	ldr.w	r2, [r9]
 800c9e0:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800c9e4:	f8d8 3000 	ldr.w	r3, [r8]
 800c9e8:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800c9ec:	682b      	ldr	r3, [r5, #0]
 800c9ee:	4628      	mov	r0, r5
 800c9f0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800c9f2:	4798      	blx	r3
 800c9f4:	b207      	sxth	r7, r0
 800c9f6:	4606      	mov	r6, r0
 800c9f8:	a803      	add	r0, sp, #12
 800c9fa:	f004 ff08 	bl	801180e <_ZN8touchgfx12TextProviderC1Ev>
 800c9fe:	682b      	ldr	r3, [r5, #0]
 800ca00:	4628      	mov	r0, r5
 800ca02:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800ca04:	4798      	blx	r3
 800ca06:	682b      	ldr	r3, [r5, #0]
 800ca08:	4682      	mov	sl, r0
 800ca0a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800ca0c:	4628      	mov	r0, r5
 800ca0e:	4798      	blx	r3
 800ca10:	4653      	mov	r3, sl
 800ca12:	9000      	str	r0, [sp, #0]
 800ca14:	9a02      	ldr	r2, [sp, #8]
 800ca16:	9925      	ldr	r1, [sp, #148]	; 0x94
 800ca18:	a803      	add	r0, sp, #12
 800ca1a:	f004 ff53 	bl	80118c4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800ca1e:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800ca20:	f8d9 3000 	ldr.w	r3, [r9]
 800ca24:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 800ca28:	8925      	ldrh	r5, [r4, #8]
 800ca2a:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 800ca2e:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 800ca32:	eba5 050c 	sub.w	r5, r5, ip
 800ca36:	784a      	ldrb	r2, [r1, #1]
 800ca38:	f8d8 3000 	ldr.w	r3, [r8]
 800ca3c:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 800ca40:	b22d      	sxth	r5, r5
 800ca42:	9500      	str	r5, [sp, #0]
 800ca44:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 800ca48:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800ca4c:	a803      	add	r0, sp, #12
 800ca4e:	f002 fd4d 	bl	800f4ec <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 800ca52:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 800ca56:	18b9      	adds	r1, r7, r2
 800ca58:	2900      	cmp	r1, #0
 800ca5a:	b203      	sxth	r3, r0
 800ca5c:	dd0b      	ble.n	800ca76 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 800ca5e:	3b01      	subs	r3, #1
 800ca60:	fb13 f302 	smulbb	r3, r3, r2
 800ca64:	fb16 3300 	smlabb	r3, r6, r0, r3
 800ca68:	b21f      	sxth	r7, r3
 800ca6a:	4638      	mov	r0, r7
 800ca6c:	b01d      	add	sp, #116	; 0x74
 800ca6e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800ca72:	b003      	add	sp, #12
 800ca74:	4770      	bx	lr
 800ca76:	2b00      	cmp	r3, #0
 800ca78:	dcf7      	bgt.n	800ca6a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 800ca7a:	2700      	movs	r7, #0
 800ca7c:	e7f5      	b.n	800ca6a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 800ca7e:	bf00      	nop
 800ca80:	200174b4 	.word	0x200174b4
 800ca84:	200174b0 	.word	0x200174b0
 800ca88:	200174b8 	.word	0x200174b8

0800ca8c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 800ca8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ca90:	4bbb      	ldr	r3, [pc, #748]	; (800cd80 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f4>)
 800ca92:	460c      	mov	r4, r1
 800ca94:	881b      	ldrh	r3, [r3, #0]
 800ca96:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
 800ca98:	428b      	cmp	r3, r1
 800ca9a:	b0a9      	sub	sp, #164	; 0xa4
 800ca9c:	4681      	mov	r9, r0
 800ca9e:	d809      	bhi.n	800cab4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 800caa0:	2300      	movs	r3, #0
 800caa2:	f04f 32ff 	mov.w	r2, #4294967295
 800caa6:	e9c0 3200 	strd	r3, r2, [r0]
 800caaa:	6083      	str	r3, [r0, #8]
 800caac:	4648      	mov	r0, r9
 800caae:	b029      	add	sp, #164	; 0xa4
 800cab0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cab4:	f8df b2d0 	ldr.w	fp, [pc, #720]	; 800cd88 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 800cab8:	f8df 82d0 	ldr.w	r8, [pc, #720]	; 800cd8c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>
 800cabc:	f8db 3000 	ldr.w	r3, [fp]
 800cac0:	f8d8 0000 	ldr.w	r0, [r8]
 800cac4:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 800cac8:	4bae      	ldr	r3, [pc, #696]	; (800cd84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 800caca:	681b      	ldr	r3, [r3, #0]
 800cacc:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800cad0:	f7f7 fc18 	bl	8004304 <_ZNK8touchgfx5Texts7getTextEt>
 800cad4:	682b      	ldr	r3, [r5, #0]
 800cad6:	4607      	mov	r7, r0
 800cad8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800cada:	4628      	mov	r0, r5
 800cadc:	4798      	blx	r3
 800cade:	8ea6      	ldrh	r6, [r4, #52]	; 0x34
 800cae0:	f8cd 800c 	str.w	r8, [sp, #12]
 800cae4:	4430      	add	r0, r6
 800cae6:	f894 6039 	ldrb.w	r6, [r4, #57]	; 0x39
 800caea:	b283      	uxth	r3, r0
 800caec:	f10d 0a3c 	add.w	sl, sp, #60	; 0x3c
 800caf0:	9302      	str	r3, [sp, #8]
 800caf2:	4650      	mov	r0, sl
 800caf4:	2e00      	cmp	r6, #0
 800caf6:	f040 8091 	bne.w	800cc1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 800cafa:	f004 fe88 	bl	801180e <_ZN8touchgfx12TextProviderC1Ev>
 800cafe:	682b      	ldr	r3, [r5, #0]
 800cb00:	4628      	mov	r0, r5
 800cb02:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800cb04:	4798      	blx	r3
 800cb06:	682b      	ldr	r3, [r5, #0]
 800cb08:	9005      	str	r0, [sp, #20]
 800cb0a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800cb0c:	4628      	mov	r0, r5
 800cb0e:	4798      	blx	r3
 800cb10:	6823      	ldr	r3, [r4, #0]
 800cb12:	4680      	mov	r8, r0
 800cb14:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800cb16:	4620      	mov	r0, r4
 800cb18:	4798      	blx	r3
 800cb1a:	6822      	ldr	r2, [r4, #0]
 800cb1c:	9004      	str	r0, [sp, #16]
 800cb1e:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 800cb22:	4620      	mov	r0, r4
 800cb24:	4790      	blx	r2
 800cb26:	9905      	ldr	r1, [sp, #20]
 800cb28:	9b04      	ldr	r3, [sp, #16]
 800cb2a:	9001      	str	r0, [sp, #4]
 800cb2c:	9300      	str	r3, [sp, #0]
 800cb2e:	460a      	mov	r2, r1
 800cb30:	4643      	mov	r3, r8
 800cb32:	4639      	mov	r1, r7
 800cb34:	4650      	mov	r0, sl
 800cb36:	f004 feda 	bl	80118ee <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800cb3a:	4637      	mov	r7, r6
 800cb3c:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800cb3e:	f8db 3000 	ldr.w	r3, [fp]
 800cb42:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800cb46:	4629      	mov	r1, r5
 800cb48:	785b      	ldrb	r3, [r3, #1]
 800cb4a:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800cb4e:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800cb52:	4650      	mov	r0, sl
 800cb54:	f002 fa1c 	bl	800ef90 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 800cb58:	4287      	cmp	r7, r0
 800cb5a:	bfb8      	it	lt
 800cb5c:	b207      	sxthlt	r7, r0
 800cb5e:	3601      	adds	r6, #1
 800cb60:	4650      	mov	r0, sl
 800cb62:	b2b6      	uxth	r6, r6
 800cb64:	f004 fe7a 	bl	801185c <_ZN8touchgfx12TextProvider11endOfStringEv>
 800cb68:	2800      	cmp	r0, #0
 800cb6a:	d0e7      	beq.n	800cb3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xb0>
 800cb6c:	9b02      	ldr	r3, [sp, #8]
 800cb6e:	f8b4 8034 	ldrh.w	r8, [r4, #52]	; 0x34
 800cb72:	fb13 f606 	smulbb	r6, r3, r6
 800cb76:	eba6 0608 	sub.w	r6, r6, r8
 800cb7a:	b2b6      	uxth	r6, r6
 800cb7c:	fa0f f886 	sxth.w	r8, r6
 800cb80:	f1b8 0f00 	cmp.w	r8, #0
 800cb84:	dd06      	ble.n	800cb94 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x108>
 800cb86:	682b      	ldr	r3, [r5, #0]
 800cb88:	4628      	mov	r0, r5
 800cb8a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800cb8c:	4798      	blx	r3
 800cb8e:	4430      	add	r0, r6
 800cb90:	fa0f f880 	sxth.w	r8, r0
 800cb94:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800cb98:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800cb9c:	6823      	ldr	r3, [r4, #0]
 800cb9e:	bf08      	it	eq
 800cba0:	f9b4 6008 	ldrsheq.w	r6, [r4, #8]
 800cba4:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800cba6:	bf18      	it	ne
 800cba8:	f9b4 600a 	ldrshne.w	r6, [r4, #10]
 800cbac:	4620      	mov	r0, r4
 800cbae:	4798      	blx	r3
 800cbb0:	2801      	cmp	r0, #1
 800cbb2:	b2ba      	uxth	r2, r7
 800cbb4:	f000 80d1 	beq.w	800cd5a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ce>
 800cbb8:	2802      	cmp	r0, #2
 800cbba:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 800cbbe:	f000 80d2 	beq.w	800cd66 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2da>
 800cbc2:	b21e      	sxth	r6, r3
 800cbc4:	7a29      	ldrb	r1, [r5, #8]
 800cbc6:	7a6d      	ldrb	r5, [r5, #9]
 800cbc8:	1a76      	subs	r6, r6, r1
 800cbca:	4429      	add	r1, r5
 800cbcc:	440a      	add	r2, r1
 800cbce:	f894 1038 	ldrb.w	r1, [r4, #56]	; 0x38
 800cbd2:	b2b3      	uxth	r3, r6
 800cbd4:	b292      	uxth	r2, r2
 800cbd6:	2902      	cmp	r1, #2
 800cbd8:	b21f      	sxth	r7, r3
 800cbda:	b216      	sxth	r6, r2
 800cbdc:	f000 80c6 	beq.w	800cd6c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2e0>
 800cbe0:	2903      	cmp	r1, #3
 800cbe2:	f000 80d5 	beq.w	800cd90 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>
 800cbe6:	2901      	cmp	r1, #1
 800cbe8:	f040 80db 	bne.w	800cda2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x316>
 800cbec:	8923      	ldrh	r3, [r4, #8]
 800cbee:	4632      	mov	r2, r6
 800cbf0:	eba3 0308 	sub.w	r3, r3, r8
 800cbf4:	4646      	mov	r6, r8
 800cbf6:	463d      	mov	r5, r7
 800cbf8:	4690      	mov	r8, r2
 800cbfa:	b21f      	sxth	r7, r3
 800cbfc:	9b03      	ldr	r3, [sp, #12]
 800cbfe:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800cc00:	6818      	ldr	r0, [r3, #0]
 800cc02:	f7f7 fb7f 	bl	8004304 <_ZNK8touchgfx5Texts7getTextEt>
 800cc06:	f8a9 7000 	strh.w	r7, [r9]
 800cc0a:	f8a9 5002 	strh.w	r5, [r9, #2]
 800cc0e:	f8a9 6004 	strh.w	r6, [r9, #4]
 800cc12:	f8a9 8006 	strh.w	r8, [r9, #6]
 800cc16:	f8c9 0008 	str.w	r0, [r9, #8]
 800cc1a:	e747      	b.n	800caac <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 800cc1c:	f004 fdf7 	bl	801180e <_ZN8touchgfx12TextProviderC1Ev>
 800cc20:	682b      	ldr	r3, [r5, #0]
 800cc22:	4628      	mov	r0, r5
 800cc24:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800cc26:	4798      	blx	r3
 800cc28:	682b      	ldr	r3, [r5, #0]
 800cc2a:	4606      	mov	r6, r0
 800cc2c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800cc2e:	4628      	mov	r0, r5
 800cc30:	4798      	blx	r3
 800cc32:	6823      	ldr	r3, [r4, #0]
 800cc34:	4680      	mov	r8, r0
 800cc36:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800cc38:	4620      	mov	r0, r4
 800cc3a:	4798      	blx	r3
 800cc3c:	6822      	ldr	r2, [r4, #0]
 800cc3e:	9004      	str	r0, [sp, #16]
 800cc40:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 800cc44:	4620      	mov	r0, r4
 800cc46:	4790      	blx	r2
 800cc48:	9b04      	ldr	r3, [sp, #16]
 800cc4a:	9001      	str	r0, [sp, #4]
 800cc4c:	4632      	mov	r2, r6
 800cc4e:	9300      	str	r3, [sp, #0]
 800cc50:	4639      	mov	r1, r7
 800cc52:	4643      	mov	r3, r8
 800cc54:	4650      	mov	r0, sl
 800cc56:	f004 fe4a 	bl	80118ee <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800cc5a:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800cc5e:	f9b4 8008 	ldrsh.w	r8, [r4, #8]
 800cc62:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800cc64:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
 800cc68:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800cc6c:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800cc70:	bf0a      	itet	eq
 800cc72:	4642      	moveq	r2, r8
 800cc74:	461a      	movne	r2, r3
 800cc76:	4698      	moveq	r8, r3
 800cc78:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 800cc7c:	1ad2      	subs	r2, r2, r3
 800cc7e:	f8db 3000 	ldr.w	r3, [fp]
 800cc82:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 800cc86:	7859      	ldrb	r1, [r3, #1]
 800cc88:	f8cd a020 	str.w	sl, [sp, #32]
 800cc8c:	2300      	movs	r3, #0
 800cc8e:	f3c1 0181 	ubfx	r1, r1, #2, #2
 800cc92:	f8ad 301c 	strh.w	r3, [sp, #28]
 800cc96:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 800cc9a:	f88d 0025 	strb.w	r0, [sp, #37]	; 0x25
 800cc9e:	950a      	str	r5, [sp, #40]	; 0x28
 800cca0:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800cca4:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 800cca8:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 800ccac:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 800ccb0:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 800ccb4:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800ccb8:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 800ccbc:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
 800ccc0:	b350      	cbz	r0, 800cd18 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28c>
 800ccc2:	682b      	ldr	r3, [r5, #0]
 800ccc4:	4628      	mov	r0, r5
 800ccc6:	695b      	ldr	r3, [r3, #20]
 800ccc8:	4798      	blx	r3
 800ccca:	4607      	mov	r7, r0
 800cccc:	b320      	cbz	r0, 800cd18 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28c>
 800ccce:	980a      	ldr	r0, [sp, #40]	; 0x28
 800ccd0:	6803      	ldr	r3, [r0, #0]
 800ccd2:	4639      	mov	r1, r7
 800ccd4:	68db      	ldr	r3, [r3, #12]
 800ccd6:	4798      	blx	r3
 800ccd8:	4606      	mov	r6, r0
 800ccda:	b1e8      	cbz	r0, 800cd18 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28c>
 800ccdc:	7b43      	ldrb	r3, [r0, #13]
 800ccde:	7a82      	ldrb	r2, [r0, #10]
 800cce0:	005b      	lsls	r3, r3, #1
 800cce2:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800cce6:	4313      	orrs	r3, r2
 800cce8:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 800ccec:	f89d 3025 	ldrb.w	r3, [sp, #37]	; 0x25
 800ccf0:	2b04      	cmp	r3, #4
 800ccf2:	d111      	bne.n	800cd18 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28c>
 800ccf4:	980a      	ldr	r0, [sp, #40]	; 0x28
 800ccf6:	6803      	ldr	r3, [r0, #0]
 800ccf8:	4632      	mov	r2, r6
 800ccfa:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800ccfc:	4639      	mov	r1, r7
 800ccfe:	4798      	blx	r3
 800cd00:	7b73      	ldrb	r3, [r6, #13]
 800cd02:	005b      	lsls	r3, r3, #1
 800cd04:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800cd08:	7ab3      	ldrb	r3, [r6, #10]
 800cd0a:	4313      	orrs	r3, r2
 800cd0c:	4418      	add	r0, r3
 800cd0e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800cd12:	4418      	add	r0, r3
 800cd14:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
 800cd18:	f9bd a008 	ldrsh.w	sl, [sp, #8]
 800cd1c:	2600      	movs	r6, #0
 800cd1e:	ea4f 0b4a 	mov.w	fp, sl, lsl #1
 800cd22:	4637      	mov	r7, r6
 800cd24:	45c3      	cmp	fp, r8
 800cd26:	bfd4      	ite	le
 800cd28:	2100      	movle	r1, #0
 800cd2a:	2101      	movgt	r1, #1
 800cd2c:	a807      	add	r0, sp, #28
 800cd2e:	f002 fb0e 	bl	800f34e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800cd32:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 800cd36:	429f      	cmp	r7, r3
 800cd38:	bfb8      	it	lt
 800cd3a:	b21f      	sxthlt	r7, r3
 800cd3c:	9b02      	ldr	r3, [sp, #8]
 800cd3e:	eba8 0803 	sub.w	r8, r8, r3
 800cd42:	f8bd 301c 	ldrh.w	r3, [sp, #28]
 800cd46:	3601      	adds	r6, #1
 800cd48:	b2b6      	uxth	r6, r6
 800cd4a:	fa0f f888 	sxth.w	r8, r8
 800cd4e:	2b00      	cmp	r3, #0
 800cd50:	f43f af0c 	beq.w	800cb6c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xe0>
 800cd54:	45c2      	cmp	sl, r8
 800cd56:	dbe5      	blt.n	800cd24 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x298>
 800cd58:	e708      	b.n	800cb6c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xe0>
 800cd5a:	1bf6      	subs	r6, r6, r7
 800cd5c:	2702      	movs	r7, #2
 800cd5e:	fb96 f6f7 	sdiv	r6, r6, r7
 800cd62:	b236      	sxth	r6, r6
 800cd64:	e72e      	b.n	800cbc4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x138>
 800cd66:	4413      	add	r3, r2
 800cd68:	1af6      	subs	r6, r6, r3
 800cd6a:	e7fa      	b.n	800cd62 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2d6>
 800cd6c:	8925      	ldrh	r5, [r4, #8]
 800cd6e:	1aad      	subs	r5, r5, r2
 800cd70:	1aed      	subs	r5, r5, r3
 800cd72:	b22f      	sxth	r7, r5
 800cd74:	8965      	ldrh	r5, [r4, #10]
 800cd76:	eba5 0508 	sub.w	r5, r5, r8
 800cd7a:	b22d      	sxth	r5, r5
 800cd7c:	e73e      	b.n	800cbfc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x170>
 800cd7e:	bf00      	nop
 800cd80:	200174b4 	.word	0x200174b4
 800cd84:	200174b8 	.word	0x200174b8
 800cd88:	200174b0 	.word	0x200174b0
 800cd8c:	200174bc 	.word	0x200174bc
 800cd90:	8965      	ldrh	r5, [r4, #10]
 800cd92:	1aad      	subs	r5, r5, r2
 800cd94:	1aed      	subs	r5, r5, r3
 800cd96:	4633      	mov	r3, r6
 800cd98:	b22d      	sxth	r5, r5
 800cd9a:	4646      	mov	r6, r8
 800cd9c:	2700      	movs	r7, #0
 800cd9e:	4698      	mov	r8, r3
 800cda0:	e72c      	b.n	800cbfc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x170>
 800cda2:	2500      	movs	r5, #0
 800cda4:	e72a      	b.n	800cbfc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x170>
 800cda6:	bf00      	nop

0800cda8 <_ZN8touchgfx8TextAreaD0Ev>:
 800cda8:	b510      	push	{r4, lr}
 800cdaa:	2148      	movs	r1, #72	; 0x48
 800cdac:	4604      	mov	r4, r0
 800cdae:	f012 fb82 	bl	801f4b6 <_ZdlPvj>
 800cdb2:	4620      	mov	r0, r4
 800cdb4:	bd10      	pop	{r4, pc}
	...

0800cdb8 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 800cdb8:	b513      	push	{r0, r1, r4, lr}
 800cdba:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 800cdbe:	4604      	mov	r4, r0
 800cdc0:	b1fb      	cbz	r3, 800ce02 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800cdc2:	4b16      	ldr	r3, [pc, #88]	; (800ce1c <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 800cdc4:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800cdc6:	881b      	ldrh	r3, [r3, #0]
 800cdc8:	428b      	cmp	r3, r1
 800cdca:	d91a      	bls.n	800ce02 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800cdcc:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800cdd0:	2b00      	cmp	r3, #0
 800cdd2:	dd16      	ble.n	800ce02 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800cdd4:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800cdd8:	2b00      	cmp	r3, #0
 800cdda:	dd12      	ble.n	800ce02 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800cddc:	4b10      	ldr	r3, [pc, #64]	; (800ce20 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 800cdde:	6818      	ldr	r0, [r3, #0]
 800cde0:	f7f7 fa90 	bl	8004304 <_ZNK8touchgfx5Texts7getTextEt>
 800cde4:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 800cde8:	6822      	ldr	r2, [r4, #0]
 800cdea:	2b00      	cmp	r3, #0
 800cdec:	db06      	blt.n	800cdfc <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 800cdee:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 800cdf2:	2b00      	cmp	r3, #0
 800cdf4:	db02      	blt.n	800cdfc <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 800cdf6:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800cdf8:	4298      	cmp	r0, r3
 800cdfa:	d004      	beq.n	800ce06 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 800cdfc:	6953      	ldr	r3, [r2, #20]
 800cdfe:	4620      	mov	r0, r4
 800ce00:	4798      	blx	r3
 800ce02:	b002      	add	sp, #8
 800ce04:	bd10      	pop	{r4, pc}
 800ce06:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 800ce0a:	c903      	ldmia	r1, {r0, r1}
 800ce0c:	466b      	mov	r3, sp
 800ce0e:	e883 0003 	stmia.w	r3, {r0, r1}
 800ce12:	6912      	ldr	r2, [r2, #16]
 800ce14:	4619      	mov	r1, r3
 800ce16:	4620      	mov	r0, r4
 800ce18:	4790      	blx	r2
 800ce1a:	e7f2      	b.n	800ce02 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800ce1c:	200174b4 	.word	0x200174b4
 800ce20:	200174bc 	.word	0x200174bc

0800ce24 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 800ce24:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ce28:	4b44      	ldr	r3, [pc, #272]	; (800cf3c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 800ce2a:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800ce2c:	881b      	ldrh	r3, [r3, #0]
 800ce2e:	4293      	cmp	r3, r2
 800ce30:	b08e      	sub	sp, #56	; 0x38
 800ce32:	4604      	mov	r4, r0
 800ce34:	d97e      	bls.n	800cf34 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800ce36:	6808      	ldr	r0, [r1, #0]
 800ce38:	4d41      	ldr	r5, [pc, #260]	; (800cf40 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 800ce3a:	6849      	ldr	r1, [r1, #4]
 800ce3c:	ab05      	add	r3, sp, #20
 800ce3e:	c303      	stmia	r3!, {r0, r1}
 800ce40:	4611      	mov	r1, r2
 800ce42:	6828      	ldr	r0, [r5, #0]
 800ce44:	f7f7 fa5e 	bl	8004304 <_ZNK8touchgfx5Texts7getTextEt>
 800ce48:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 800ce4c:	2b00      	cmp	r3, #0
 800ce4e:	db11      	blt.n	800ce74 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800ce50:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 800ce54:	2b00      	cmp	r3, #0
 800ce56:	db0d      	blt.n	800ce74 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800ce58:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800ce5a:	4298      	cmp	r0, r3
 800ce5c:	d10a      	bne.n	800ce74 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800ce5e:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 800ce62:	e892 0003 	ldmia.w	r2, {r0, r1}
 800ce66:	ab09      	add	r3, sp, #36	; 0x24
 800ce68:	e883 0003 	stmia.w	r3, {r0, r1}
 800ce6c:	4619      	mov	r1, r3
 800ce6e:	a805      	add	r0, sp, #20
 800ce70:	f7fc fe7c 	bl	8009b6c <_ZN8touchgfx4RectaNERKS0_>
 800ce74:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800ce78:	2b00      	cmp	r3, #0
 800ce7a:	dd5b      	ble.n	800cf34 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800ce7c:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 800ce80:	2b00      	cmp	r3, #0
 800ce82:	dd57      	ble.n	800cf34 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800ce84:	4f2f      	ldr	r7, [pc, #188]	; (800cf44 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 800ce86:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800ce88:	683b      	ldr	r3, [r7, #0]
 800ce8a:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800ce8e:	4b2e      	ldr	r3, [pc, #184]	; (800cf48 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 800ce90:	681b      	ldr	r3, [r3, #0]
 800ce92:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 800ce96:	2e00      	cmp	r6, #0
 800ce98:	d04c      	beq.n	800cf34 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800ce9a:	6823      	ldr	r3, [r4, #0]
 800ce9c:	f894 8036 	ldrb.w	r8, [r4, #54]	; 0x36
 800cea0:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800cea2:	4620      	mov	r0, r4
 800cea4:	4798      	blx	r3
 800cea6:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800cea8:	683b      	ldr	r3, [r7, #0]
 800ceaa:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	; 0x34
 800ceae:	f894 e038 	ldrb.w	lr, [r4, #56]	; 0x38
 800ceb2:	f894 7037 	ldrb.w	r7, [r4, #55]	; 0x37
 800ceb6:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800ceb8:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800cebc:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
 800cec0:	785b      	ldrb	r3, [r3, #1]
 800cec2:	9609      	str	r6, [sp, #36]	; 0x24
 800cec4:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800cec8:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800cecc:	4b1f      	ldr	r3, [pc, #124]	; (800cf4c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 800cece:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 800ced2:	681b      	ldr	r3, [r3, #0]
 800ced4:	f88d e02a 	strb.w	lr, [sp, #42]	; 0x2a
 800ced8:	910b      	str	r1, [sp, #44]	; 0x2c
 800ceda:	f8ad c030 	strh.w	ip, [sp, #48]	; 0x30
 800cede:	f88d 8032 	strb.w	r8, [sp, #50]	; 0x32
 800cee2:	f88d 7033 	strb.w	r7, [sp, #51]	; 0x33
 800cee6:	f88d 2034 	strb.w	r2, [sp, #52]	; 0x34
 800ceea:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800ceee:	b10a      	cbz	r2, 800cef4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 800cef0:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 800cef2:	b906      	cbnz	r6, 800cef6 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 800cef4:	689e      	ldr	r6, [r3, #8]
 800cef6:	af07      	add	r7, sp, #28
 800cef8:	4621      	mov	r1, r4
 800cefa:	4638      	mov	r0, r7
 800cefc:	f003 ffd2 	bl	8010ea4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800cf00:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800cf02:	6828      	ldr	r0, [r5, #0]
 800cf04:	f7f7 f9fe 	bl	8004304 <_ZNK8touchgfx5Texts7getTextEt>
 800cf08:	6823      	ldr	r3, [r4, #0]
 800cf0a:	4605      	mov	r5, r0
 800cf0c:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800cf0e:	4620      	mov	r0, r4
 800cf10:	4798      	blx	r3
 800cf12:	6823      	ldr	r3, [r4, #0]
 800cf14:	4680      	mov	r8, r0
 800cf16:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800cf1a:	4620      	mov	r0, r4
 800cf1c:	4798      	blx	r3
 800cf1e:	e9cd 8002 	strd	r8, r0, [sp, #8]
 800cf22:	ab09      	add	r3, sp, #36	; 0x24
 800cf24:	9300      	str	r3, [sp, #0]
 800cf26:	9501      	str	r5, [sp, #4]
 800cf28:	ab05      	add	r3, sp, #20
 800cf2a:	e897 0006 	ldmia.w	r7, {r1, r2}
 800cf2e:	4630      	mov	r0, r6
 800cf30:	f7f7 f99a 	bl	8004268 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800cf34:	b00e      	add	sp, #56	; 0x38
 800cf36:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800cf3a:	bf00      	nop
 800cf3c:	200174b4 	.word	0x200174b4
 800cf40:	200174bc 	.word	0x200174bc
 800cf44:	200174b0 	.word	0x200174b0
 800cf48:	200174b8 	.word	0x200174b8
 800cf4c:	20017458 	.word	0x20017458

0800cf50 <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 800cf50:	b570      	push	{r4, r5, r6, lr}
 800cf52:	6803      	ldr	r3, [r0, #0]
 800cf54:	4604      	mov	r4, r0
 800cf56:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800cf58:	4615      	mov	r5, r2
 800cf5a:	4798      	blx	r3
 800cf5c:	6823      	ldr	r3, [r4, #0]
 800cf5e:	4629      	mov	r1, r5
 800cf60:	4620      	mov	r0, r4
 800cf62:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800cf64:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800cf68:	4718      	bx	r3
	...

0800cf6c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 800cf6c:	b538      	push	{r3, r4, r5, lr}
 800cf6e:	4b0e      	ldr	r3, [pc, #56]	; (800cfa8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 800cf70:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800cf72:	881b      	ldrh	r3, [r3, #0]
 800cf74:	429a      	cmp	r2, r3
 800cf76:	4604      	mov	r4, r0
 800cf78:	d214      	bcs.n	800cfa4 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 800cf7a:	6803      	ldr	r3, [r0, #0]
 800cf7c:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800cf7e:	4798      	blx	r3
 800cf80:	6823      	ldr	r3, [r4, #0]
 800cf82:	4605      	mov	r5, r0
 800cf84:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800cf86:	4620      	mov	r0, r4
 800cf88:	4798      	blx	r3
 800cf8a:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800cf8e:	b22d      	sxth	r5, r5
 800cf90:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800cf94:	4601      	mov	r1, r0
 800cf96:	bf06      	itte	eq
 800cf98:	4602      	moveq	r2, r0
 800cf9a:	4629      	moveq	r1, r5
 800cf9c:	462a      	movne	r2, r5
 800cf9e:	4620      	mov	r0, r4
 800cfa0:	f7ff ffd6 	bl	800cf50 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800cfa4:	bd38      	pop	{r3, r4, r5, pc}
 800cfa6:	bf00      	nop
 800cfa8:	200174b4 	.word	0x200174b4

0800cfac <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 800cfac:	b530      	push	{r4, r5, lr}
 800cfae:	888b      	ldrh	r3, [r1, #4]
 800cfb0:	8583      	strh	r3, [r0, #44]	; 0x2c
 800cfb2:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800cfb6:	b085      	sub	sp, #20
 800cfb8:	4604      	mov	r4, r0
 800cfba:	b923      	cbnz	r3, 800cfc6 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 800cfbc:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800cfc0:	b90b      	cbnz	r3, 800cfc6 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 800cfc2:	f7ff ffd3 	bl	800cf6c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 800cfc6:	6823      	ldr	r3, [r4, #0]
 800cfc8:	466d      	mov	r5, sp
 800cfca:	4621      	mov	r1, r4
 800cfcc:	4628      	mov	r0, r5
 800cfce:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800cfd2:	4798      	blx	r3
 800cfd4:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800cfd8:	343c      	adds	r4, #60	; 0x3c
 800cfda:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 800cfde:	b005      	add	sp, #20
 800cfe0:	bd30      	pop	{r4, r5, pc}

0800cfe2 <_ZNK8touchgfx3Box12getSolidRectEv>:
 800cfe2:	2300      	movs	r3, #0
 800cfe4:	8083      	strh	r3, [r0, #4]
 800cfe6:	80c3      	strh	r3, [r0, #6]
 800cfe8:	8003      	strh	r3, [r0, #0]
 800cfea:	8043      	strh	r3, [r0, #2]
 800cfec:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 800cff0:	2bff      	cmp	r3, #255	; 0xff
 800cff2:	bf01      	itttt	eq
 800cff4:	890b      	ldrheq	r3, [r1, #8]
 800cff6:	8083      	strheq	r3, [r0, #4]
 800cff8:	894b      	ldrheq	r3, [r1, #10]
 800cffa:	80c3      	strheq	r3, [r0, #6]
 800cffc:	4770      	bx	lr
	...

0800d000 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 800d000:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d002:	4604      	mov	r4, r0
 800d004:	6808      	ldr	r0, [r1, #0]
 800d006:	6849      	ldr	r1, [r1, #4]
 800d008:	466b      	mov	r3, sp
 800d00a:	c303      	stmia	r3!, {r0, r1}
 800d00c:	6823      	ldr	r3, [r4, #0]
 800d00e:	4669      	mov	r1, sp
 800d010:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d012:	4620      	mov	r0, r4
 800d014:	4798      	blx	r3
 800d016:	4b08      	ldr	r3, [pc, #32]	; (800d038 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 800d018:	681b      	ldr	r3, [r3, #0]
 800d01a:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800d01e:	b10a      	cbz	r2, 800d024 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 800d020:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800d022:	b900      	cbnz	r0, 800d026 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 800d024:	6898      	ldr	r0, [r3, #8]
 800d026:	6803      	ldr	r3, [r0, #0]
 800d028:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800d02a:	6a1d      	ldr	r5, [r3, #32]
 800d02c:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800d030:	4669      	mov	r1, sp
 800d032:	47a8      	blx	r5
 800d034:	b003      	add	sp, #12
 800d036:	bd30      	pop	{r4, r5, pc}
 800d038:	20017458 	.word	0x20017458

0800d03c <_ZN8touchgfx3BoxD1Ev>:
 800d03c:	4770      	bx	lr

0800d03e <_ZN8touchgfx3BoxD0Ev>:
 800d03e:	b510      	push	{r4, lr}
 800d040:	212c      	movs	r1, #44	; 0x2c
 800d042:	4604      	mov	r4, r0
 800d044:	f012 fa37 	bl	801f4b6 <_ZdlPvj>
 800d048:	4620      	mov	r0, r4
 800d04a:	bd10      	pop	{r4, pc}

0800d04c <_ZNK8touchgfx3Box17invalidateContentEv>:
 800d04c:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
 800d050:	b12a      	cbz	r2, 800d05e <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800d052:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800d056:	b112      	cbz	r2, 800d05e <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800d058:	6803      	ldr	r3, [r0, #0]
 800d05a:	695b      	ldr	r3, [r3, #20]
 800d05c:	4718      	bx	r3
 800d05e:	4770      	bx	lr

0800d060 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 800d060:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 800d064:	4770      	bx	lr

0800d066 <_ZN8touchgfx6ButtonD1Ev>:
 800d066:	4770      	bx	lr

0800d068 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 800d068:	b570      	push	{r4, r5, r6, lr}
 800d06a:	880b      	ldrh	r3, [r1, #0]
 800d06c:	85c3      	strh	r3, [r0, #46]	; 0x2e
 800d06e:	4605      	mov	r5, r0
 800d070:	8813      	ldrh	r3, [r2, #0]
 800d072:	f825 3f30 	strh.w	r3, [r5, #48]!
 800d076:	4604      	mov	r4, r0
 800d078:	4628      	mov	r0, r5
 800d07a:	f006 f911 	bl	80132a0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800d07e:	4606      	mov	r6, r0
 800d080:	4628      	mov	r0, r5
 800d082:	f006 f941 	bl	8013308 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800d086:	6823      	ldr	r3, [r4, #0]
 800d088:	4605      	mov	r5, r0
 800d08a:	4631      	mov	r1, r6
 800d08c:	4620      	mov	r0, r4
 800d08e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800d090:	4798      	blx	r3
 800d092:	6823      	ldr	r3, [r4, #0]
 800d094:	4629      	mov	r1, r5
 800d096:	4620      	mov	r0, r4
 800d098:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d09a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d09e:	4718      	bx	r3

0800d0a0 <_ZN8touchgfx6ButtonD0Ev>:
 800d0a0:	b510      	push	{r4, lr}
 800d0a2:	2134      	movs	r1, #52	; 0x34
 800d0a4:	4604      	mov	r4, r0
 800d0a6:	f012 fa06 	bl	801f4b6 <_ZdlPvj>
 800d0aa:	4620      	mov	r0, r4
 800d0ac:	bd10      	pop	{r4, pc}

0800d0ae <_ZN8touchgfx14AbstractButton13executeActionEv>:
 800d0ae:	b510      	push	{r4, lr}
 800d0b0:	4604      	mov	r4, r0
 800d0b2:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800d0b4:	b150      	cbz	r0, 800d0cc <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800d0b6:	6803      	ldr	r3, [r0, #0]
 800d0b8:	68db      	ldr	r3, [r3, #12]
 800d0ba:	4798      	blx	r3
 800d0bc:	b130      	cbz	r0, 800d0cc <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800d0be:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800d0c0:	6803      	ldr	r3, [r0, #0]
 800d0c2:	4621      	mov	r1, r4
 800d0c4:	689b      	ldr	r3, [r3, #8]
 800d0c6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d0ca:	4718      	bx	r3
 800d0cc:	bd10      	pop	{r4, pc}

0800d0ce <_ZNK8touchgfx6Button12getSolidRectEv>:
 800d0ce:	b510      	push	{r4, lr}
 800d0d0:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 800d0d4:	2bff      	cmp	r3, #255	; 0xff
 800d0d6:	4604      	mov	r4, r0
 800d0d8:	d006      	beq.n	800d0e8 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 800d0da:	2300      	movs	r3, #0
 800d0dc:	8003      	strh	r3, [r0, #0]
 800d0de:	8043      	strh	r3, [r0, #2]
 800d0e0:	8083      	strh	r3, [r0, #4]
 800d0e2:	80c3      	strh	r3, [r0, #6]
 800d0e4:	4620      	mov	r0, r4
 800d0e6:	bd10      	pop	{r4, pc}
 800d0e8:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 800d0ec:	b11b      	cbz	r3, 800d0f6 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 800d0ee:	3130      	adds	r1, #48	; 0x30
 800d0f0:	f006 f93e 	bl	8013370 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800d0f4:	e7f6      	b.n	800d0e4 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 800d0f6:	312e      	adds	r1, #46	; 0x2e
 800d0f8:	e7fa      	b.n	800d0f0 <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

0800d0fc <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 800d0fc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d100:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800d104:	b08a      	sub	sp, #40	; 0x28
 800d106:	4604      	mov	r4, r0
 800d108:	4688      	mov	r8, r1
 800d10a:	2b00      	cmp	r3, #0
 800d10c:	d066      	beq.n	800d1dc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 800d10e:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800d110:	f8ad 3014 	strh.w	r3, [sp, #20]
 800d114:	a805      	add	r0, sp, #20
 800d116:	f006 f8c3 	bl	80132a0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800d11a:	4607      	mov	r7, r0
 800d11c:	a805      	add	r0, sp, #20
 800d11e:	f006 f8f3 	bl	8013308 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800d122:	f9b8 6000 	ldrsh.w	r6, [r8]
 800d126:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 800d12a:	4432      	add	r2, r6
 800d12c:	b292      	uxth	r2, r2
 800d12e:	2300      	movs	r3, #0
 800d130:	fa0f fc82 	sxth.w	ip, r2
 800d134:	459c      	cmp	ip, r3
 800d136:	9306      	str	r3, [sp, #24]
 800d138:	dd52      	ble.n	800d1e0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800d13a:	42b7      	cmp	r7, r6
 800d13c:	dd50      	ble.n	800d1e0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800d13e:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 800d142:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 800d146:	442b      	add	r3, r5
 800d148:	b29b      	uxth	r3, r3
 800d14a:	b219      	sxth	r1, r3
 800d14c:	2900      	cmp	r1, #0
 800d14e:	dd47      	ble.n	800d1e0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800d150:	42a8      	cmp	r0, r5
 800d152:	dd45      	ble.n	800d1e0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800d154:	4567      	cmp	r7, ip
 800d156:	bfb8      	it	lt
 800d158:	b2ba      	uxthlt	r2, r7
 800d15a:	4288      	cmp	r0, r1
 800d15c:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 800d160:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 800d164:	bfb8      	it	lt
 800d166:	b283      	uxthlt	r3, r0
 800d168:	1b92      	subs	r2, r2, r6
 800d16a:	1b5b      	subs	r3, r3, r5
 800d16c:	f8ad 201c 	strh.w	r2, [sp, #28]
 800d170:	f8ad 301e 	strh.w	r3, [sp, #30]
 800d174:	f8ad 6018 	strh.w	r6, [sp, #24]
 800d178:	f8ad 501a 	strh.w	r5, [sp, #26]
 800d17c:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800d180:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800d184:	429a      	cmp	r2, r3
 800d186:	d026      	beq.n	800d1d6 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800d188:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800d18c:	2b00      	cmp	r3, #0
 800d18e:	dd22      	ble.n	800d1d6 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800d190:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800d194:	2b00      	cmp	r3, #0
 800d196:	dd1e      	ble.n	800d1d6 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800d198:	2300      	movs	r3, #0
 800d19a:	e9cd 3308 	strd	r3, r3, [sp, #32]
 800d19e:	6823      	ldr	r3, [r4, #0]
 800d1a0:	a908      	add	r1, sp, #32
 800d1a2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d1a4:	4620      	mov	r0, r4
 800d1a6:	4798      	blx	r3
 800d1a8:	4b0f      	ldr	r3, [pc, #60]	; (800d1e8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 800d1aa:	681b      	ldr	r3, [r3, #0]
 800d1ac:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800d1b0:	b10a      	cbz	r2, 800d1b6 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 800d1b2:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800d1b4:	b900      	cbnz	r0, 800d1b8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 800d1b6:	6898      	ldr	r0, [r3, #8]
 800d1b8:	6801      	ldr	r1, [r0, #0]
 800d1ba:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 800d1be:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 800d1c2:	2501      	movs	r5, #1
 800d1c4:	9502      	str	r5, [sp, #8]
 800d1c6:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 800d1ca:	9401      	str	r4, [sp, #4]
 800d1cc:	ac06      	add	r4, sp, #24
 800d1ce:	9400      	str	r4, [sp, #0]
 800d1d0:	688c      	ldr	r4, [r1, #8]
 800d1d2:	a905      	add	r1, sp, #20
 800d1d4:	47a0      	blx	r4
 800d1d6:	b00a      	add	sp, #40	; 0x28
 800d1d8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d1dc:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800d1de:	e797      	b.n	800d110 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 800d1e0:	2300      	movs	r3, #0
 800d1e2:	9307      	str	r3, [sp, #28]
 800d1e4:	e7ca      	b.n	800d17c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 800d1e6:	bf00      	nop
 800d1e8:	20017458 	.word	0x20017458

0800d1ec <_ZNK8touchgfx6Button17invalidateContentEv>:
 800d1ec:	f890 2032 	ldrb.w	r2, [r0, #50]	; 0x32
 800d1f0:	b12a      	cbz	r2, 800d1fe <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 800d1f2:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800d1f6:	b112      	cbz	r2, 800d1fe <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 800d1f8:	6803      	ldr	r3, [r0, #0]
 800d1fa:	695b      	ldr	r3, [r3, #20]
 800d1fc:	4718      	bx	r3
 800d1fe:	4770      	bx	lr

0800d200 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 800d200:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800d204:	4b2f      	ldr	r3, [pc, #188]	; (800d2c4 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 800d206:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800d208:	881b      	ldrh	r3, [r3, #0]
 800d20a:	4293      	cmp	r3, r2
 800d20c:	b08d      	sub	sp, #52	; 0x34
 800d20e:	4604      	mov	r4, r0
 800d210:	460f      	mov	r7, r1
 800d212:	d954      	bls.n	800d2be <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 800d214:	4b2c      	ldr	r3, [pc, #176]	; (800d2c8 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 800d216:	6819      	ldr	r1, [r3, #0]
 800d218:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 800d21c:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 800d220:	4a2a      	ldr	r2, [pc, #168]	; (800d2cc <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 800d222:	6812      	ldr	r2, [r2, #0]
 800d224:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 800d228:	2900      	cmp	r1, #0
 800d22a:	d048      	beq.n	800d2be <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 800d22c:	785a      	ldrb	r2, [r3, #1]
 800d22e:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 800d232:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 800d236:	4b26      	ldr	r3, [pc, #152]	; (800d2d0 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 800d238:	f890 5036 	ldrb.w	r5, [r0, #54]	; 0x36
 800d23c:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
 800d240:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
 800d244:	6b26      	ldr	r6, [r4, #48]	; 0x30
 800d246:	f890 0037 	ldrb.w	r0, [r0, #55]	; 0x37
 800d24a:	9107      	str	r1, [sp, #28]
 800d24c:	f3c2 0801 	ubfx	r8, r2, #0, #2
 800d250:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800d254:	f88d 2021 	strb.w	r2, [sp, #33]	; 0x21
 800d258:	681a      	ldr	r2, [r3, #0]
 800d25a:	f88d 8020 	strb.w	r8, [sp, #32]
 800d25e:	f892 3076 	ldrb.w	r3, [r2, #118]	; 0x76
 800d262:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
 800d266:	9609      	str	r6, [sp, #36]	; 0x24
 800d268:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
 800d26c:	f88d 502a 	strb.w	r5, [sp, #42]	; 0x2a
 800d270:	f88d 002b 	strb.w	r0, [sp, #43]	; 0x2b
 800d274:	b10b      	cbz	r3, 800d27a <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 800d276:	6cd5      	ldr	r5, [r2, #76]	; 0x4c
 800d278:	b905      	cbnz	r5, 800d27c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 800d27a:	6895      	ldr	r5, [r2, #8]
 800d27c:	ae05      	add	r6, sp, #20
 800d27e:	4621      	mov	r1, r4
 800d280:	4630      	mov	r0, r6
 800d282:	f003 fe0f 	bl	8010ea4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800d286:	4b13      	ldr	r3, [pc, #76]	; (800d2d4 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 800d288:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800d28a:	6818      	ldr	r0, [r3, #0]
 800d28c:	f7f7 f83a 	bl	8004304 <_ZNK8touchgfx5Texts7getTextEt>
 800d290:	6823      	ldr	r3, [r4, #0]
 800d292:	4680      	mov	r8, r0
 800d294:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800d296:	4620      	mov	r0, r4
 800d298:	4798      	blx	r3
 800d29a:	6823      	ldr	r3, [r4, #0]
 800d29c:	4681      	mov	r9, r0
 800d29e:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800d2a2:	4620      	mov	r0, r4
 800d2a4:	4798      	blx	r3
 800d2a6:	e9cd 9002 	strd	r9, r0, [sp, #8]
 800d2aa:	ab07      	add	r3, sp, #28
 800d2ac:	9300      	str	r3, [sp, #0]
 800d2ae:	f8cd 8004 	str.w	r8, [sp, #4]
 800d2b2:	463b      	mov	r3, r7
 800d2b4:	e896 0006 	ldmia.w	r6, {r1, r2}
 800d2b8:	4628      	mov	r0, r5
 800d2ba:	f7f6 ffd5 	bl	8004268 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800d2be:	b00d      	add	sp, #52	; 0x34
 800d2c0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800d2c4:	200174b4 	.word	0x200174b4
 800d2c8:	200174b0 	.word	0x200174b0
 800d2cc:	200174b8 	.word	0x200174b8
 800d2d0:	20017458 	.word	0x20017458
 800d2d4:	200174bc 	.word	0x200174bc

0800d2d8 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
 800d2d8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d2dc:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 800d2e0:	b0a0      	sub	sp, #128	; 0x80
 800d2e2:	4604      	mov	r4, r0
 800d2e4:	b193      	cbz	r3, 800d30c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 800d2e6:	4b30      	ldr	r3, [pc, #192]	; (800d3a8 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xd0>)
 800d2e8:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800d2ea:	881b      	ldrh	r3, [r3, #0]
 800d2ec:	428b      	cmp	r3, r1
 800d2ee:	d90d      	bls.n	800d30c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 800d2f0:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800d2f4:	2b00      	cmp	r3, #0
 800d2f6:	dd09      	ble.n	800d30c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 800d2f8:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800d2fc:	2b00      	cmp	r3, #0
 800d2fe:	dd05      	ble.n	800d30c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 800d300:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 800d304:	b12b      	cbz	r3, 800d312 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x3a>
 800d306:	6803      	ldr	r3, [r0, #0]
 800d308:	695b      	ldr	r3, [r3, #20]
 800d30a:	4798      	blx	r3
 800d30c:	b020      	add	sp, #128	; 0x80
 800d30e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d312:	4b26      	ldr	r3, [pc, #152]	; (800d3ac <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xd4>)
 800d314:	681b      	ldr	r3, [r3, #0]
 800d316:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 800d31a:	4b25      	ldr	r3, [pc, #148]	; (800d3b0 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xd8>)
 800d31c:	681b      	ldr	r3, [r3, #0]
 800d31e:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800d322:	4b24      	ldr	r3, [pc, #144]	; (800d3b4 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xdc>)
 800d324:	6818      	ldr	r0, [r3, #0]
 800d326:	f7f6 ffed 	bl	8004304 <_ZNK8touchgfx5Texts7getTextEt>
 800d32a:	4606      	mov	r6, r0
 800d32c:	a807      	add	r0, sp, #28
 800d32e:	f004 fa6e 	bl	801180e <_ZN8touchgfx12TextProviderC1Ev>
 800d332:	682b      	ldr	r3, [r5, #0]
 800d334:	4628      	mov	r0, r5
 800d336:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800d338:	4798      	blx	r3
 800d33a:	682b      	ldr	r3, [r5, #0]
 800d33c:	4607      	mov	r7, r0
 800d33e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800d340:	4628      	mov	r0, r5
 800d342:	4798      	blx	r3
 800d344:	6823      	ldr	r3, [r4, #0]
 800d346:	4605      	mov	r5, r0
 800d348:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800d34a:	4620      	mov	r0, r4
 800d34c:	4798      	blx	r3
 800d34e:	6823      	ldr	r3, [r4, #0]
 800d350:	4680      	mov	r8, r0
 800d352:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800d356:	4620      	mov	r0, r4
 800d358:	4798      	blx	r3
 800d35a:	462b      	mov	r3, r5
 800d35c:	e9cd 8000 	strd	r8, r0, [sp]
 800d360:	463a      	mov	r2, r7
 800d362:	a807      	add	r0, sp, #28
 800d364:	4631      	mov	r1, r6
 800d366:	f004 fac2 	bl	80118ee <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800d36a:	a807      	add	r0, sp, #28
 800d36c:	f004 fe7a 	bl	8012064 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800d370:	280a      	cmp	r0, #10
 800d372:	d103      	bne.n	800d37c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xa4>
 800d374:	6823      	ldr	r3, [r4, #0]
 800d376:	4620      	mov	r0, r4
 800d378:	695b      	ldr	r3, [r3, #20]
 800d37a:	e7c6      	b.n	800d30a <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x32>
 800d37c:	a807      	add	r0, sp, #28
 800d37e:	f004 fe71 	bl	8012064 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800d382:	2800      	cmp	r0, #0
 800d384:	d1f4      	bne.n	800d370 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x98>
 800d386:	ad04      	add	r5, sp, #16
 800d388:	4621      	mov	r1, r4
 800d38a:	4628      	mov	r0, r5
 800d38c:	f7ff fb7e 	bl	800ca8c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800d390:	e895 0003 	ldmia.w	r5, {r0, r1}
 800d394:	6822      	ldr	r2, [r4, #0]
 800d396:	ab02      	add	r3, sp, #8
 800d398:	e883 0003 	stmia.w	r3, {r0, r1}
 800d39c:	6912      	ldr	r2, [r2, #16]
 800d39e:	4619      	mov	r1, r3
 800d3a0:	4620      	mov	r0, r4
 800d3a2:	4790      	blx	r2
 800d3a4:	e7b2      	b.n	800d30c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 800d3a6:	bf00      	nop
 800d3a8:	200174b4 	.word	0x200174b4
 800d3ac:	200174b0 	.word	0x200174b0
 800d3b0:	200174b8 	.word	0x200174b8
 800d3b4:	200174bc 	.word	0x200174bc

0800d3b8 <_ZN8touchgfx13BoxWithBorderD1Ev>:
 800d3b8:	4770      	bx	lr

0800d3ba <_ZN8touchgfx13BoxWithBorderD0Ev>:
 800d3ba:	b510      	push	{r4, lr}
 800d3bc:	2134      	movs	r1, #52	; 0x34
 800d3be:	4604      	mov	r4, r0
 800d3c0:	f012 f879 	bl	801f4b6 <_ZdlPvj>
 800d3c4:	4620      	mov	r0, r4
 800d3c6:	bd10      	pop	{r4, pc}

0800d3c8 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE>:
 800d3c8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d3cc:	4604      	mov	r4, r0
 800d3ce:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800d3d0:	8962      	ldrh	r2, [r4, #10]
 800d3d2:	b218      	sxth	r0, r3
 800d3d4:	460e      	mov	r6, r1
 800d3d6:	005b      	lsls	r3, r3, #1
 800d3d8:	8921      	ldrh	r1, [r4, #8]
 800d3da:	b29b      	uxth	r3, r3
 800d3dc:	1ac9      	subs	r1, r1, r3
 800d3de:	b08e      	sub	sp, #56	; 0x38
 800d3e0:	b209      	sxth	r1, r1
 800d3e2:	1ad3      	subs	r3, r2, r3
 800d3e4:	b21b      	sxth	r3, r3
 800d3e6:	2900      	cmp	r1, #0
 800d3e8:	f8ad 0000 	strh.w	r0, [sp]
 800d3ec:	f8ad 0002 	strh.w	r0, [sp, #2]
 800d3f0:	f8ad 1004 	strh.w	r1, [sp, #4]
 800d3f4:	f8ad 3006 	strh.w	r3, [sp, #6]
 800d3f8:	dd5e      	ble.n	800d4b8 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 800d3fa:	2b00      	cmp	r3, #0
 800d3fc:	dd5c      	ble.n	800d4b8 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 800d3fe:	6830      	ldr	r0, [r6, #0]
 800d400:	6871      	ldr	r1, [r6, #4]
 800d402:	ab02      	add	r3, sp, #8
 800d404:	c303      	stmia	r3!, {r0, r1}
 800d406:	4669      	mov	r1, sp
 800d408:	a802      	add	r0, sp, #8
 800d40a:	f7fc fbaf 	bl	8009b6c <_ZN8touchgfx4RectaNERKS0_>
 800d40e:	4620      	mov	r0, r4
 800d410:	a902      	add	r1, sp, #8
 800d412:	f7ff fdf5 	bl	800d000 <_ZNK8touchgfx3Box4drawERKNS_4RectE>
 800d416:	8e20      	ldrh	r0, [r4, #48]	; 0x30
 800d418:	2800      	cmp	r0, #0
 800d41a:	d05f      	beq.n	800d4dc <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 800d41c:	8963      	ldrh	r3, [r4, #10]
 800d41e:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800d422:	f8ad 101c 	strh.w	r1, [sp, #28]
 800d426:	1a1f      	subs	r7, r3, r0
 800d428:	eba3 0340 	sub.w	r3, r3, r0, lsl #1
 800d42c:	b202      	sxth	r2, r0
 800d42e:	2500      	movs	r5, #0
 800d430:	b21b      	sxth	r3, r3
 800d432:	f8ad 1024 	strh.w	r1, [sp, #36]	; 0x24
 800d436:	1a09      	subs	r1, r1, r0
 800d438:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 800d43c:	9506      	str	r5, [sp, #24]
 800d43e:	f8ad 201e 	strh.w	r2, [sp, #30]
 800d442:	f8ad 5020 	strh.w	r5, [sp, #32]
 800d446:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 800d44a:	f8ad 5028 	strh.w	r5, [sp, #40]	; 0x28
 800d44e:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 800d452:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800d456:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 800d45a:	f8ad 1030 	strh.w	r1, [sp, #48]	; 0x30
 800d45e:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 800d462:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 800d466:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800d46a:	af04      	add	r7, sp, #16
 800d46c:	ab06      	add	r3, sp, #24
 800d46e:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800d472:	e893 0003 	ldmia.w	r3, {r0, r1}
 800d476:	e887 0003 	stmia.w	r7, {r0, r1}
 800d47a:	4631      	mov	r1, r6
 800d47c:	4638      	mov	r0, r7
 800d47e:	f7fc fb75 	bl	8009b6c <_ZN8touchgfx4RectaNERKS0_>
 800d482:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 800d486:	2b00      	cmp	r3, #0
 800d488:	dd12      	ble.n	800d4b0 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 800d48a:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800d48e:	2b00      	cmp	r3, #0
 800d490:	dd0e      	ble.n	800d4b0 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 800d492:	6823      	ldr	r3, [r4, #0]
 800d494:	4639      	mov	r1, r7
 800d496:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d498:	4620      	mov	r0, r4
 800d49a:	4798      	blx	r3
 800d49c:	f7f4 ff6a 	bl	8002374 <_ZN8touchgfx3HAL3lcdEv>
 800d4a0:	6803      	ldr	r3, [r0, #0]
 800d4a2:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800d4a4:	f8d3 8020 	ldr.w	r8, [r3, #32]
 800d4a8:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800d4ac:	4639      	mov	r1, r7
 800d4ae:	47c0      	blx	r8
 800d4b0:	3501      	adds	r5, #1
 800d4b2:	2d04      	cmp	r5, #4
 800d4b4:	d1da      	bne.n	800d46c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xa4>
 800d4b6:	e011      	b.n	800d4dc <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 800d4b8:	6830      	ldr	r0, [r6, #0]
 800d4ba:	6871      	ldr	r1, [r6, #4]
 800d4bc:	ab06      	add	r3, sp, #24
 800d4be:	c303      	stmia	r3!, {r0, r1}
 800d4c0:	6823      	ldr	r3, [r4, #0]
 800d4c2:	a906      	add	r1, sp, #24
 800d4c4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d4c6:	4620      	mov	r0, r4
 800d4c8:	4798      	blx	r3
 800d4ca:	f7f4 ff53 	bl	8002374 <_ZN8touchgfx3HAL3lcdEv>
 800d4ce:	6803      	ldr	r3, [r0, #0]
 800d4d0:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800d4d2:	6a1d      	ldr	r5, [r3, #32]
 800d4d4:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800d4d8:	a906      	add	r1, sp, #24
 800d4da:	47a8      	blx	r5
 800d4dc:	b00e      	add	sp, #56	; 0x38
 800d4de:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800d4e2 <_ZN8touchgfx5ImageD1Ev>:
 800d4e2:	4770      	bx	lr

0800d4e4 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 800d4e4:	b570      	push	{r4, r5, r6, lr}
 800d4e6:	880b      	ldrh	r3, [r1, #0]
 800d4e8:	84c3      	strh	r3, [r0, #38]	; 0x26
 800d4ea:	4604      	mov	r4, r0
 800d4ec:	4608      	mov	r0, r1
 800d4ee:	460d      	mov	r5, r1
 800d4f0:	f005 fed6 	bl	80132a0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800d4f4:	4606      	mov	r6, r0
 800d4f6:	4628      	mov	r0, r5
 800d4f8:	f005 ff06 	bl	8013308 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800d4fc:	6823      	ldr	r3, [r4, #0]
 800d4fe:	4605      	mov	r5, r0
 800d500:	4631      	mov	r1, r6
 800d502:	4620      	mov	r0, r4
 800d504:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800d506:	4798      	blx	r3
 800d508:	6823      	ldr	r3, [r4, #0]
 800d50a:	4629      	mov	r1, r5
 800d50c:	4620      	mov	r0, r4
 800d50e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d510:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d514:	4718      	bx	r3

0800d516 <_ZN8touchgfx5ImageD0Ev>:
 800d516:	b510      	push	{r4, lr}
 800d518:	212c      	movs	r1, #44	; 0x2c
 800d51a:	4604      	mov	r4, r0
 800d51c:	f011 ffcb 	bl	801f4b6 <_ZdlPvj>
 800d520:	4620      	mov	r0, r4
 800d522:	bd10      	pop	{r4, pc}

0800d524 <_ZNK8touchgfx5Image12getSolidRectEv>:
 800d524:	b510      	push	{r4, lr}
 800d526:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 800d52a:	2bff      	cmp	r3, #255	; 0xff
 800d52c:	4604      	mov	r4, r0
 800d52e:	d006      	beq.n	800d53e <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 800d530:	2300      	movs	r3, #0
 800d532:	8003      	strh	r3, [r0, #0]
 800d534:	8043      	strh	r3, [r0, #2]
 800d536:	8083      	strh	r3, [r0, #4]
 800d538:	80c3      	strh	r3, [r0, #6]
 800d53a:	4620      	mov	r0, r4
 800d53c:	bd10      	pop	{r4, pc}
 800d53e:	3126      	adds	r1, #38	; 0x26
 800d540:	f005 ff16 	bl	8013370 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800d544:	e7f9      	b.n	800d53a <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

0800d546 <_ZNK8touchgfx5Image17invalidateContentEv>:
 800d546:	f890 2028 	ldrb.w	r2, [r0, #40]	; 0x28
 800d54a:	b12a      	cbz	r2, 800d558 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 800d54c:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800d550:	b112      	cbz	r2, 800d558 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 800d552:	6803      	ldr	r3, [r0, #0]
 800d554:	695b      	ldr	r3, [r3, #20]
 800d556:	4718      	bx	r3
 800d558:	4770      	bx	lr
	...

0800d55c <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 800d55c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d560:	4604      	mov	r4, r0
 800d562:	b088      	sub	sp, #32
 800d564:	f854 3b26 	ldr.w	r3, [r4], #38
 800d568:	2500      	movs	r5, #0
 800d56a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d56c:	460f      	mov	r7, r1
 800d56e:	e9cd 5504 	strd	r5, r5, [sp, #16]
 800d572:	a904      	add	r1, sp, #16
 800d574:	4606      	mov	r6, r0
 800d576:	4798      	blx	r3
 800d578:	4620      	mov	r0, r4
 800d57a:	f005 fe91 	bl	80132a0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800d57e:	4680      	mov	r8, r0
 800d580:	4620      	mov	r0, r4
 800d582:	f005 fec1 	bl	8013308 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800d586:	9506      	str	r5, [sp, #24]
 800d588:	ad06      	add	r5, sp, #24
 800d58a:	f8ad 001e 	strh.w	r0, [sp, #30]
 800d58e:	4639      	mov	r1, r7
 800d590:	4628      	mov	r0, r5
 800d592:	f8ad 801c 	strh.w	r8, [sp, #28]
 800d596:	f7fc fae9 	bl	8009b6c <_ZN8touchgfx4RectaNERKS0_>
 800d59a:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800d59e:	2b00      	cmp	r3, #0
 800d5a0:	dd19      	ble.n	800d5d6 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800d5a2:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800d5a6:	2b00      	cmp	r3, #0
 800d5a8:	dd15      	ble.n	800d5d6 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800d5aa:	4b0c      	ldr	r3, [pc, #48]	; (800d5dc <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 800d5ac:	681b      	ldr	r3, [r3, #0]
 800d5ae:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800d5b2:	b10a      	cbz	r2, 800d5b8 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 800d5b4:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800d5b6:	b900      	cbnz	r0, 800d5ba <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 800d5b8:	6898      	ldr	r0, [r3, #8]
 800d5ba:	6801      	ldr	r1, [r0, #0]
 800d5bc:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 800d5c0:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 800d5c4:	2701      	movs	r7, #1
 800d5c6:	9702      	str	r7, [sp, #8]
 800d5c8:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 800d5cc:	e9cd 5600 	strd	r5, r6, [sp]
 800d5d0:	688d      	ldr	r5, [r1, #8]
 800d5d2:	4621      	mov	r1, r4
 800d5d4:	47a8      	blx	r5
 800d5d6:	b008      	add	sp, #32
 800d5d8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d5dc:	20017458 	.word	0x20017458

0800d5e0 <_ZN8touchgfx15ButtonWithLabelD1Ev>:
 800d5e0:	4770      	bx	lr

0800d5e2 <_ZN8touchgfx15ButtonWithLabelD0Ev>:
 800d5e2:	b510      	push	{r4, lr}
 800d5e4:	2148      	movs	r1, #72	; 0x48
 800d5e6:	4604      	mov	r4, r0
 800d5e8:	f011 ff65 	bl	801f4b6 <_ZdlPvj>
 800d5ec:	4620      	mov	r0, r4
 800d5ee:	bd10      	pop	{r4, pc}

0800d5f0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
 800d5f0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800d5f4:	b08d      	sub	sp, #52	; 0x34
 800d5f6:	4604      	mov	r4, r0
 800d5f8:	4688      	mov	r8, r1
 800d5fa:	f7ff fd7f 	bl	800d0fc <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 800d5fe:	4a4d      	ldr	r2, [pc, #308]	; (800d734 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x144>)
 800d600:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 800d602:	8812      	ldrh	r2, [r2, #0]
 800d604:	429a      	cmp	r2, r3
 800d606:	f240 8081 	bls.w	800d70c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11c>
 800d60a:	4e4b      	ldr	r6, [pc, #300]	; (800d738 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x148>)
 800d60c:	6832      	ldr	r2, [r6, #0]
 800d60e:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800d612:	4b4a      	ldr	r3, [pc, #296]	; (800d73c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x14c>)
 800d614:	681b      	ldr	r3, [r3, #0]
 800d616:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 800d61a:	f894 2045 	ldrb.w	r2, [r4, #69]	; 0x45
 800d61e:	2300      	movs	r3, #0
 800d620:	e9cd 3303 	strd	r3, r3, [sp, #12]
 800d624:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800d628:	2b03      	cmp	r3, #3
 800d62a:	d811      	bhi.n	800d650 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 800d62c:	e8df f003 	tbb	[pc, r3]
 800d630:	71027102 	.word	0x71027102
 800d634:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800d638:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800d63c:	f8ad 1010 	strh.w	r1, [sp, #16]
 800d640:	1a9b      	subs	r3, r3, r2
 800d642:	2002      	movs	r0, #2
 800d644:	f8ad 2012 	strh.w	r2, [sp, #18]
 800d648:	fb93 f3f0 	sdiv	r3, r3, r0
 800d64c:	f8ad 300e 	strh.w	r3, [sp, #14]
 800d650:	ad03      	add	r5, sp, #12
 800d652:	e895 0003 	ldmia.w	r5, {r0, r1}
 800d656:	f10d 0914 	add.w	r9, sp, #20
 800d65a:	e889 0003 	stmia.w	r9, {r0, r1}
 800d65e:	4641      	mov	r1, r8
 800d660:	4648      	mov	r0, r9
 800d662:	f7fc fa83 	bl	8009b6c <_ZN8touchgfx4RectaNERKS0_>
 800d666:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800d66a:	2b00      	cmp	r3, #0
 800d66c:	dd4e      	ble.n	800d70c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11c>
 800d66e:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 800d672:	2b00      	cmp	r3, #0
 800d674:	dd4a      	ble.n	800d70c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11c>
 800d676:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 800d67a:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800d67e:	1a9b      	subs	r3, r3, r2
 800d680:	f8ad 3014 	strh.w	r3, [sp, #20]
 800d684:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 800d688:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800d68c:	1a9b      	subs	r3, r3, r2
 800d68e:	f8ad 3016 	strh.w	r3, [sp, #22]
 800d692:	6823      	ldr	r3, [r4, #0]
 800d694:	4629      	mov	r1, r5
 800d696:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d698:	4620      	mov	r0, r4
 800d69a:	4798      	blx	r3
 800d69c:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 800d6a0:	2b00      	cmp	r3, #0
 800d6a2:	d045      	beq.n	800d730 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x140>
 800d6a4:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800d6a6:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 800d6a8:	6833      	ldr	r3, [r6, #0]
 800d6aa:	f894 0032 	ldrb.w	r0, [r4, #50]	; 0x32
 800d6ae:	f894 4044 	ldrb.w	r4, [r4, #68]	; 0x44
 800d6b2:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 800d6b6:	785b      	ldrb	r3, [r3, #1]
 800d6b8:	9209      	str	r2, [sp, #36]	; 0x24
 800d6ba:	f3c3 0601 	ubfx	r6, r3, #0, #2
 800d6be:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800d6c2:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 800d6c6:	2300      	movs	r3, #0
 800d6c8:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800d6cc:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 800d6d0:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 800d6d4:	4b1a      	ldr	r3, [pc, #104]	; (800d740 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x150>)
 800d6d6:	9707      	str	r7, [sp, #28]
 800d6d8:	681b      	ldr	r3, [r3, #0]
 800d6da:	f88d 6020 	strb.w	r6, [sp, #32]
 800d6de:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800d6e2:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800d6e6:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800d6ea:	b10a      	cbz	r2, 800d6f0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x100>
 800d6ec:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 800d6ee:	b904      	cbnz	r4, 800d6f2 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x102>
 800d6f0:	689c      	ldr	r4, [r3, #8]
 800d6f2:	4b14      	ldr	r3, [pc, #80]	; (800d744 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x154>)
 800d6f4:	6818      	ldr	r0, [r3, #0]
 800d6f6:	f7f6 fe05 	bl	8004304 <_ZNK8touchgfx5Texts7getTextEt>
 800d6fa:	ab07      	add	r3, sp, #28
 800d6fc:	9001      	str	r0, [sp, #4]
 800d6fe:	9300      	str	r3, [sp, #0]
 800d700:	e895 0006 	ldmia.w	r5, {r1, r2}
 800d704:	464b      	mov	r3, r9
 800d706:	4620      	mov	r0, r4
 800d708:	f7f6 fdae 	bl	8004268 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800d70c:	b00d      	add	sp, #52	; 0x34
 800d70e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800d712:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800d716:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 800d71a:	f8ad 2010 	strh.w	r2, [sp, #16]
 800d71e:	1a9b      	subs	r3, r3, r2
 800d720:	2002      	movs	r0, #2
 800d722:	f8ad 1012 	strh.w	r1, [sp, #18]
 800d726:	fb93 f3f0 	sdiv	r3, r3, r0
 800d72a:	f8ad 300c 	strh.w	r3, [sp, #12]
 800d72e:	e78f      	b.n	800d650 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 800d730:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 800d732:	e7b8      	b.n	800d6a6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xb6>
 800d734:	200174b4 	.word	0x200174b4
 800d738:	200174b0 	.word	0x200174b0
 800d73c:	200174b8 	.word	0x200174b8
 800d740:	20017458 	.word	0x20017458
 800d744:	200174bc 	.word	0x200174bc

0800d748 <_ZN8touchgfx15ButtonWithLabelC1Ev>:
 800d748:	b510      	push	{r4, lr}
 800d74a:	2101      	movs	r1, #1
 800d74c:	4c13      	ldr	r4, [pc, #76]	; (800d79c <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
 800d74e:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 800d752:	2200      	movs	r2, #0
 800d754:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 800d758:	6004      	str	r4, [r0, #0]
 800d75a:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800d75e:	4c10      	ldr	r4, [pc, #64]	; (800d7a0 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
 800d760:	8082      	strh	r2, [r0, #4]
 800d762:	80c2      	strh	r2, [r0, #6]
 800d764:	8102      	strh	r2, [r0, #8]
 800d766:	8142      	strh	r2, [r0, #10]
 800d768:	8182      	strh	r2, [r0, #12]
 800d76a:	81c2      	strh	r2, [r0, #14]
 800d76c:	8202      	strh	r2, [r0, #16]
 800d76e:	8242      	strh	r2, [r0, #18]
 800d770:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800d774:	61c2      	str	r2, [r0, #28]
 800d776:	8402      	strh	r2, [r0, #32]
 800d778:	8442      	strh	r2, [r0, #34]	; 0x22
 800d77a:	6282      	str	r2, [r0, #40]	; 0x28
 800d77c:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 800d780:	85c1      	strh	r1, [r0, #46]	; 0x2e
 800d782:	8601      	strh	r1, [r0, #48]	; 0x30
 800d784:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 800d788:	6344      	str	r4, [r0, #52]	; 0x34
 800d78a:	8701      	strh	r1, [r0, #56]	; 0x38
 800d78c:	e9c0 220f 	strd	r2, r2, [r0, #60]	; 0x3c
 800d790:	f880 2044 	strb.w	r2, [r0, #68]	; 0x44
 800d794:	f880 2045 	strb.w	r2, [r0, #69]	; 0x45
 800d798:	bd10      	pop	{r4, pc}
 800d79a:	bf00      	nop
 800d79c:	08022b78 	.word	0x08022b78
 800d7a0:	08020e54 	.word	0x08020e54

0800d7a4 <_ZN8touchgfx7OutlineD1Ev>:
 800d7a4:	4770      	bx	lr

0800d7a6 <_ZN8touchgfx7OutlineD0Ev>:
 800d7a6:	b510      	push	{r4, lr}
 800d7a8:	2130      	movs	r1, #48	; 0x30
 800d7aa:	4604      	mov	r4, r0
 800d7ac:	f011 fe83 	bl	801f4b6 <_ZdlPvj>
 800d7b0:	4620      	mov	r0, r4
 800d7b2:	bd10      	pop	{r4, pc}

0800d7b4 <_ZN8touchgfx7Outline5resetEv>:
 800d7b4:	b510      	push	{r4, lr}
 800d7b6:	4604      	mov	r4, r0
 800d7b8:	f000 fe8c 	bl	800e4d4 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 800d7bc:	60e0      	str	r0, [r4, #12]
 800d7be:	f000 fe8f 	bl	800e4e0 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 800d7c2:	68e3      	ldr	r3, [r4, #12]
 800d7c4:	6123      	str	r3, [r4, #16]
 800d7c6:	08c0      	lsrs	r0, r0, #3
 800d7c8:	2200      	movs	r2, #0
 800d7ca:	f647 71ff 	movw	r1, #32767	; 0x7fff
 800d7ce:	3801      	subs	r0, #1
 800d7d0:	6060      	str	r0, [r4, #4]
 800d7d2:	60a2      	str	r2, [r4, #8]
 800d7d4:	8019      	strh	r1, [r3, #0]
 800d7d6:	8059      	strh	r1, [r3, #2]
 800d7d8:	809a      	strh	r2, [r3, #4]
 800d7da:	80da      	strh	r2, [r3, #6]
 800d7dc:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800d7de:	f023 0301 	bic.w	r3, r3, #1
 800d7e2:	f043 0302 	orr.w	r3, r3, #2
 800d7e6:	6263      	str	r3, [r4, #36]	; 0x24
 800d7e8:	bd10      	pop	{r4, pc}
	...

0800d7ec <_ZN8touchgfx7OutlineC1Ev>:
 800d7ec:	b510      	push	{r4, lr}
 800d7ee:	4b0a      	ldr	r3, [pc, #40]	; (800d818 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
 800d7f0:	6003      	str	r3, [r0, #0]
 800d7f2:	2300      	movs	r3, #0
 800d7f4:	e9c0 3301 	strd	r3, r3, [r0, #4]
 800d7f8:	e9c0 3303 	strd	r3, r3, [r0, #12]
 800d7fc:	e9c0 3305 	strd	r3, r3, [r0, #20]
 800d800:	e9c0 3307 	strd	r3, r3, [r0, #28]
 800d804:	6243      	str	r3, [r0, #36]	; 0x24
 800d806:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 800d80a:	4604      	mov	r4, r0
 800d80c:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
 800d810:	f7ff ffd0 	bl	800d7b4 <_ZN8touchgfx7Outline5resetEv>
 800d814:	4620      	mov	r0, r4
 800d816:	bd10      	pop	{r4, pc}
 800d818:	08022bec 	.word	0x08022bec

0800d81c <_ZN8touchgfx7Outline10renderLineEiiii>:
 800d81c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d820:	b093      	sub	sp, #76	; 0x4c
 800d822:	1156      	asrs	r6, r2, #5
 800d824:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 800d826:	9305      	str	r3, [sp, #20]
 800d828:	f004 051f 	and.w	r5, r4, #31
 800d82c:	1153      	asrs	r3, r2, #5
 800d82e:	9504      	str	r5, [sp, #16]
 800d830:	1165      	asrs	r5, r4, #5
 800d832:	9303      	str	r3, [sp, #12]
 800d834:	42ae      	cmp	r6, r5
 800d836:	ea4f 1364 	mov.w	r3, r4, asr #5
 800d83a:	9306      	str	r3, [sp, #24]
 800d83c:	f002 031f 	and.w	r3, r2, #31
 800d840:	f040 80f8 	bne.w	800da34 <_ZN8touchgfx7Outline10renderLineEiiii+0x218>
 800d844:	9c04      	ldr	r4, [sp, #16]
 800d846:	9a05      	ldr	r2, [sp, #20]
 800d848:	42a3      	cmp	r3, r4
 800d84a:	ea4f 1e62 	mov.w	lr, r2, asr #5
 800d84e:	6902      	ldr	r2, [r0, #16]
 800d850:	d125      	bne.n	800d89e <_ZN8touchgfx7Outline10renderLineEiiii+0x82>
 800d852:	f9b2 3000 	ldrsh.w	r3, [r2]
 800d856:	459e      	cmp	lr, r3
 800d858:	d103      	bne.n	800d862 <_ZN8touchgfx7Outline10renderLineEiiii+0x46>
 800d85a:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 800d85e:	429e      	cmp	r6, r3
 800d860:	d035      	beq.n	800d8ce <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800d862:	88d1      	ldrh	r1, [r2, #6]
 800d864:	8893      	ldrh	r3, [r2, #4]
 800d866:	430b      	orrs	r3, r1
 800d868:	d010      	beq.n	800d88c <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 800d86a:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 800d86e:	2b00      	cmp	r3, #0
 800d870:	db0c      	blt.n	800d88c <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 800d872:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 800d874:	428b      	cmp	r3, r1
 800d876:	da09      	bge.n	800d88c <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 800d878:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 800d87c:	428b      	cmp	r3, r1
 800d87e:	bf38      	it	cc
 800d880:	3208      	addcc	r2, #8
 800d882:	f103 0301 	add.w	r3, r3, #1
 800d886:	bf38      	it	cc
 800d888:	6102      	strcc	r2, [r0, #16]
 800d88a:	6083      	str	r3, [r0, #8]
 800d88c:	6903      	ldr	r3, [r0, #16]
 800d88e:	9a03      	ldr	r2, [sp, #12]
 800d890:	f8a3 e000 	strh.w	lr, [r3]
 800d894:	805a      	strh	r2, [r3, #2]
 800d896:	2200      	movs	r2, #0
 800d898:	809a      	strh	r2, [r3, #4]
 800d89a:	80da      	strh	r2, [r3, #6]
 800d89c:	e017      	b.n	800d8ce <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800d89e:	9c05      	ldr	r4, [sp, #20]
 800d8a0:	f8b2 8004 	ldrh.w	r8, [r2, #4]
 800d8a4:	f8b2 a006 	ldrh.w	sl, [r2, #6]
 800d8a8:	f004 041f 	and.w	r4, r4, #31
 800d8ac:	114e      	asrs	r6, r1, #5
 800d8ae:	9402      	str	r4, [sp, #8]
 800d8b0:	9c04      	ldr	r4, [sp, #16]
 800d8b2:	4576      	cmp	r6, lr
 800d8b4:	f001 0c1f 	and.w	ip, r1, #31
 800d8b8:	eba4 0403 	sub.w	r4, r4, r3
 800d8bc:	d10a      	bne.n	800d8d4 <_ZN8touchgfx7Outline10renderLineEiiii+0xb8>
 800d8be:	9b02      	ldr	r3, [sp, #8]
 800d8c0:	449c      	add	ip, r3
 800d8c2:	44a0      	add	r8, r4
 800d8c4:	fb04 a40c 	mla	r4, r4, ip, sl
 800d8c8:	f8a2 8004 	strh.w	r8, [r2, #4]
 800d8cc:	80d4      	strh	r4, [r2, #6]
 800d8ce:	b013      	add	sp, #76	; 0x4c
 800d8d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d8d4:	9d05      	ldr	r5, [sp, #20]
 800d8d6:	1a69      	subs	r1, r5, r1
 800d8d8:	bf5b      	ittet	pl
 800d8da:	f1cc 0520 	rsbpl	r5, ip, #32
 800d8de:	436c      	mulpl	r4, r5
 800d8e0:	2500      	movmi	r5, #0
 800d8e2:	2520      	movpl	r5, #32
 800d8e4:	bf44      	itt	mi
 800d8e6:	fb04 f40c 	mulmi.w	r4, r4, ip
 800d8ea:	4249      	negmi	r1, r1
 800d8ec:	9501      	str	r5, [sp, #4]
 800d8ee:	9f01      	ldr	r7, [sp, #4]
 800d8f0:	fb94 f5f1 	sdiv	r5, r4, r1
 800d8f4:	fb01 4415 	mls	r4, r1, r5, r4
 800d8f8:	bf54      	ite	pl
 800d8fa:	f04f 0901 	movpl.w	r9, #1
 800d8fe:	f04f 39ff 	movmi.w	r9, #4294967295
 800d902:	2c00      	cmp	r4, #0
 800d904:	bfb8      	it	lt
 800d906:	f105 35ff 	addlt.w	r5, r5, #4294967295
 800d90a:	44bc      	add	ip, r7
 800d90c:	44a8      	add	r8, r5
 800d90e:	fb05 ac0c 	mla	ip, r5, ip, sl
 800d912:	f8a2 8004 	strh.w	r8, [r2, #4]
 800d916:	f8a2 c006 	strh.w	ip, [r2, #6]
 800d91a:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800d91e:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 800d922:	f8bc 2004 	ldrh.w	r2, [ip, #4]
 800d926:	bfb8      	it	lt
 800d928:	1864      	addlt	r4, r4, r1
 800d92a:	ea58 0202 	orrs.w	r2, r8, r2
 800d92e:	444e      	add	r6, r9
 800d930:	d011      	beq.n	800d956 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 800d932:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 800d936:	f1b8 0f00 	cmp.w	r8, #0
 800d93a:	db0c      	blt.n	800d956 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 800d93c:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 800d93e:	4590      	cmp	r8, r2
 800d940:	da09      	bge.n	800d956 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 800d942:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
 800d946:	4590      	cmp	r8, r2
 800d948:	bf3c      	itt	cc
 800d94a:	f10c 0208 	addcc.w	r2, ip, #8
 800d94e:	6102      	strcc	r2, [r0, #16]
 800d950:	f108 0201 	add.w	r2, r8, #1
 800d954:	6082      	str	r2, [r0, #8]
 800d956:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800d95a:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 800d95e:	f8ac 6000 	strh.w	r6, [ip]
 800d962:	2700      	movs	r7, #0
 800d964:	45b6      	cmp	lr, r6
 800d966:	f8ac 2002 	strh.w	r2, [ip, #2]
 800d96a:	f8ac 7004 	strh.w	r7, [ip, #4]
 800d96e:	f8ac 7006 	strh.w	r7, [ip, #6]
 800d972:	442b      	add	r3, r5
 800d974:	d04d      	beq.n	800da12 <_ZN8touchgfx7Outline10renderLineEiiii+0x1f6>
 800d976:	9f04      	ldr	r7, [sp, #16]
 800d978:	1aff      	subs	r7, r7, r3
 800d97a:	443d      	add	r5, r7
 800d97c:	016d      	lsls	r5, r5, #5
 800d97e:	fb95 f8f1 	sdiv	r8, r5, r1
 800d982:	fb01 5518 	mls	r5, r1, r8, r5
 800d986:	2d00      	cmp	r5, #0
 800d988:	bfb8      	it	lt
 800d98a:	f108 38ff 	addlt.w	r8, r8, #4294967295
 800d98e:	f108 0701 	add.w	r7, r8, #1
 800d992:	bfb8      	it	lt
 800d994:	186d      	addlt	r5, r5, r1
 800d996:	1a64      	subs	r4, r4, r1
 800d998:	9703      	str	r7, [sp, #12]
 800d99a:	f04f 0a00 	mov.w	sl, #0
 800d99e:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800d9a2:	1964      	adds	r4, r4, r5
 800d9a4:	bf58      	it	pl
 800d9a6:	9f03      	ldrpl	r7, [sp, #12]
 800d9a8:	f8bc b004 	ldrh.w	fp, [ip, #4]
 800d9ac:	bf48      	it	mi
 800d9ae:	4647      	movmi	r7, r8
 800d9b0:	44bb      	add	fp, r7
 800d9b2:	f8ac b004 	strh.w	fp, [ip, #4]
 800d9b6:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800d9ba:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 800d9be:	f8ac b006 	strh.w	fp, [ip, #6]
 800d9c2:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800d9c6:	443b      	add	r3, r7
 800d9c8:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800d9cc:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800d9d0:	bf58      	it	pl
 800d9d2:	1a64      	subpl	r4, r4, r1
 800d9d4:	ea5b 0707 	orrs.w	r7, fp, r7
 800d9d8:	444e      	add	r6, r9
 800d9da:	d011      	beq.n	800da00 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 800d9dc:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 800d9e0:	f1bb 0f00 	cmp.w	fp, #0
 800d9e4:	db0c      	blt.n	800da00 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 800d9e6:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800d9e8:	45bb      	cmp	fp, r7
 800d9ea:	da09      	bge.n	800da00 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 800d9ec:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 800d9f0:	45bb      	cmp	fp, r7
 800d9f2:	bf3c      	itt	cc
 800d9f4:	f10c 0708 	addcc.w	r7, ip, #8
 800d9f8:	6107      	strcc	r7, [r0, #16]
 800d9fa:	f10b 0701 	add.w	r7, fp, #1
 800d9fe:	6087      	str	r7, [r0, #8]
 800da00:	6907      	ldr	r7, [r0, #16]
 800da02:	45b6      	cmp	lr, r6
 800da04:	803e      	strh	r6, [r7, #0]
 800da06:	807a      	strh	r2, [r7, #2]
 800da08:	f8a7 a004 	strh.w	sl, [r7, #4]
 800da0c:	f8a7 a006 	strh.w	sl, [r7, #6]
 800da10:	d1c5      	bne.n	800d99e <_ZN8touchgfx7Outline10renderLineEiiii+0x182>
 800da12:	9a04      	ldr	r2, [sp, #16]
 800da14:	1ad3      	subs	r3, r2, r3
 800da16:	6902      	ldr	r2, [r0, #16]
 800da18:	8891      	ldrh	r1, [r2, #4]
 800da1a:	88d6      	ldrh	r6, [r2, #6]
 800da1c:	4419      	add	r1, r3
 800da1e:	8091      	strh	r1, [r2, #4]
 800da20:	9902      	ldr	r1, [sp, #8]
 800da22:	f101 0c20 	add.w	ip, r1, #32
 800da26:	9901      	ldr	r1, [sp, #4]
 800da28:	ebac 0c01 	sub.w	ip, ip, r1
 800da2c:	fb03 630c 	mla	r3, r3, ip, r6
 800da30:	80d3      	strh	r3, [r2, #6]
 800da32:	e74c      	b.n	800d8ce <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800da34:	9d05      	ldr	r5, [sp, #20]
 800da36:	1aa2      	subs	r2, r4, r2
 800da38:	eba5 0501 	sub.w	r5, r5, r1
 800da3c:	9508      	str	r5, [sp, #32]
 800da3e:	9202      	str	r2, [sp, #8]
 800da40:	f140 8128 	bpl.w	800dc94 <_ZN8touchgfx7Outline10renderLineEiiii+0x478>
 800da44:	9a03      	ldr	r2, [sp, #12]
 800da46:	2a00      	cmp	r2, #0
 800da48:	f6ff af41 	blt.w	800d8ce <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800da4c:	9a02      	ldr	r2, [sp, #8]
 800da4e:	4252      	negs	r2, r2
 800da50:	9202      	str	r2, [sp, #8]
 800da52:	9a06      	ldr	r2, [sp, #24]
 800da54:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
 800da58:	f04f 34ff 	mov.w	r4, #4294967295
 800da5c:	9206      	str	r2, [sp, #24]
 800da5e:	462a      	mov	r2, r5
 800da60:	940b      	str	r4, [sp, #44]	; 0x2c
 800da62:	435a      	muls	r2, r3
 800da64:	2400      	movs	r4, #0
 800da66:	9d02      	ldr	r5, [sp, #8]
 800da68:	9401      	str	r4, [sp, #4]
 800da6a:	9c02      	ldr	r4, [sp, #8]
 800da6c:	fb92 f4f4 	sdiv	r4, r2, r4
 800da70:	fb05 2214 	mls	r2, r5, r4, r2
 800da74:	2a00      	cmp	r2, #0
 800da76:	9207      	str	r2, [sp, #28]
 800da78:	bfbc      	itt	lt
 800da7a:	1952      	addlt	r2, r2, r5
 800da7c:	9207      	strlt	r2, [sp, #28]
 800da7e:	9a01      	ldr	r2, [sp, #4]
 800da80:	6905      	ldr	r5, [r0, #16]
 800da82:	bfb8      	it	lt
 800da84:	f104 34ff 	addlt.w	r4, r4, #4294967295
 800da88:	eb04 0901 	add.w	r9, r4, r1
 800da8c:	429a      	cmp	r2, r3
 800da8e:	ea4f 1669 	mov.w	r6, r9, asr #5
 800da92:	f040 8112 	bne.w	800dcba <_ZN8touchgfx7Outline10renderLineEiiii+0x49e>
 800da96:	f9b5 3000 	ldrsh.w	r3, [r5]
 800da9a:	429e      	cmp	r6, r3
 800da9c:	d104      	bne.n	800daa8 <_ZN8touchgfx7Outline10renderLineEiiii+0x28c>
 800da9e:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800daa2:	9a03      	ldr	r2, [sp, #12]
 800daa4:	429a      	cmp	r2, r3
 800daa6:	d01b      	beq.n	800dae0 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 800daa8:	88ea      	ldrh	r2, [r5, #6]
 800daaa:	88ab      	ldrh	r3, [r5, #4]
 800daac:	4313      	orrs	r3, r2
 800daae:	d010      	beq.n	800dad2 <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 800dab0:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800dab4:	2a00      	cmp	r2, #0
 800dab6:	db0c      	blt.n	800dad2 <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 800dab8:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800daba:	429a      	cmp	r2, r3
 800dabc:	da09      	bge.n	800dad2 <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 800dabe:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
 800dac2:	429a      	cmp	r2, r3
 800dac4:	bf38      	it	cc
 800dac6:	3508      	addcc	r5, #8
 800dac8:	f102 0201 	add.w	r2, r2, #1
 800dacc:	bf38      	it	cc
 800dace:	6105      	strcc	r5, [r0, #16]
 800dad0:	6082      	str	r2, [r0, #8]
 800dad2:	6903      	ldr	r3, [r0, #16]
 800dad4:	9a03      	ldr	r2, [sp, #12]
 800dad6:	805a      	strh	r2, [r3, #2]
 800dad8:	2200      	movs	r2, #0
 800dada:	801e      	strh	r6, [r3, #0]
 800dadc:	809a      	strh	r2, [r3, #4]
 800dade:	80da      	strh	r2, [r3, #6]
 800dae0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800dae2:	9a03      	ldr	r2, [sp, #12]
 800dae4:	6901      	ldr	r1, [r0, #16]
 800dae6:	441a      	add	r2, r3
 800dae8:	f9b1 3000 	ldrsh.w	r3, [r1]
 800daec:	42b3      	cmp	r3, r6
 800daee:	d103      	bne.n	800daf8 <_ZN8touchgfx7Outline10renderLineEiiii+0x2dc>
 800daf0:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800daf4:	429a      	cmp	r2, r3
 800daf6:	d01a      	beq.n	800db2e <_ZN8touchgfx7Outline10renderLineEiiii+0x312>
 800daf8:	88cc      	ldrh	r4, [r1, #6]
 800dafa:	888b      	ldrh	r3, [r1, #4]
 800dafc:	4323      	orrs	r3, r4
 800dafe:	d010      	beq.n	800db22 <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 800db00:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 800db04:	2c00      	cmp	r4, #0
 800db06:	db0c      	blt.n	800db22 <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 800db08:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800db0a:	429c      	cmp	r4, r3
 800db0c:	da09      	bge.n	800db22 <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 800db0e:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 800db12:	429c      	cmp	r4, r3
 800db14:	bf38      	it	cc
 800db16:	3108      	addcc	r1, #8
 800db18:	f104 0401 	add.w	r4, r4, #1
 800db1c:	bf38      	it	cc
 800db1e:	6101      	strcc	r1, [r0, #16]
 800db20:	6084      	str	r4, [r0, #8]
 800db22:	6903      	ldr	r3, [r0, #16]
 800db24:	2100      	movs	r1, #0
 800db26:	801e      	strh	r6, [r3, #0]
 800db28:	805a      	strh	r2, [r3, #2]
 800db2a:	8099      	strh	r1, [r3, #4]
 800db2c:	80d9      	strh	r1, [r3, #6]
 800db2e:	9b06      	ldr	r3, [sp, #24]
 800db30:	4293      	cmp	r3, r2
 800db32:	f000 8082 	beq.w	800dc3a <_ZN8touchgfx7Outline10renderLineEiiii+0x41e>
 800db36:	9b08      	ldr	r3, [sp, #32]
 800db38:	9c02      	ldr	r4, [sp, #8]
 800db3a:	9902      	ldr	r1, [sp, #8]
 800db3c:	015b      	lsls	r3, r3, #5
 800db3e:	fb93 f1f1 	sdiv	r1, r3, r1
 800db42:	fb04 3311 	mls	r3, r4, r1, r3
 800db46:	2b00      	cmp	r3, #0
 800db48:	9103      	str	r1, [sp, #12]
 800db4a:	9308      	str	r3, [sp, #32]
 800db4c:	da04      	bge.n	800db58 <_ZN8touchgfx7Outline10renderLineEiiii+0x33c>
 800db4e:	1e4b      	subs	r3, r1, #1
 800db50:	9303      	str	r3, [sp, #12]
 800db52:	9b08      	ldr	r3, [sp, #32]
 800db54:	4423      	add	r3, r4
 800db56:	9308      	str	r3, [sp, #32]
 800db58:	9b07      	ldr	r3, [sp, #28]
 800db5a:	9902      	ldr	r1, [sp, #8]
 800db5c:	1a5b      	subs	r3, r3, r1
 800db5e:	9307      	str	r3, [sp, #28]
 800db60:	9b01      	ldr	r3, [sp, #4]
 800db62:	f1c3 0320 	rsb	r3, r3, #32
 800db66:	930e      	str	r3, [sp, #56]	; 0x38
 800db68:	990e      	ldr	r1, [sp, #56]	; 0x38
 800db6a:	9b01      	ldr	r3, [sp, #4]
 800db6c:	1a5b      	subs	r3, r3, r1
 800db6e:	464f      	mov	r7, r9
 800db70:	930a      	str	r3, [sp, #40]	; 0x28
 800db72:	2600      	movs	r6, #0
 800db74:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
 800db78:	185b      	adds	r3, r3, r1
 800db7a:	bf58      	it	pl
 800db7c:	9902      	ldrpl	r1, [sp, #8]
 800db7e:	9307      	str	r3, [sp, #28]
 800db80:	bf5d      	ittte	pl
 800db82:	1a5b      	subpl	r3, r3, r1
 800db84:	9307      	strpl	r3, [sp, #28]
 800db86:	9b03      	ldrpl	r3, [sp, #12]
 800db88:	9903      	ldrmi	r1, [sp, #12]
 800db8a:	bf58      	it	pl
 800db8c:	1c59      	addpl	r1, r3, #1
 800db8e:	4489      	add	r9, r1
 800db90:	2a00      	cmp	r2, #0
 800db92:	ea4f 1a69 	mov.w	sl, r9, asr #5
 800db96:	db2e      	blt.n	800dbf6 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800db98:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800db9a:	4293      	cmp	r3, r2
 800db9c:	dd2b      	ble.n	800dbf6 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800db9e:	9c01      	ldr	r4, [sp, #4]
 800dba0:	6905      	ldr	r5, [r0, #16]
 800dba2:	46a0      	mov	r8, r4
 800dba4:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 800dba6:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
 800dbaa:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
 800dbae:	45a0      	cmp	r8, r4
 800dbb0:	f040 814f 	bne.w	800de52 <_ZN8touchgfx7Outline10renderLineEiiii+0x636>
 800dbb4:	f9b5 1000 	ldrsh.w	r1, [r5]
 800dbb8:	4551      	cmp	r1, sl
 800dbba:	d103      	bne.n	800dbc4 <_ZN8touchgfx7Outline10renderLineEiiii+0x3a8>
 800dbbc:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 800dbc0:	4291      	cmp	r1, r2
 800dbc2:	d018      	beq.n	800dbf6 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800dbc4:	ea5c 010e 	orrs.w	r1, ip, lr
 800dbc8:	d00f      	beq.n	800dbea <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 800dbca:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 800dbce:	2900      	cmp	r1, #0
 800dbd0:	db0b      	blt.n	800dbea <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 800dbd2:	428b      	cmp	r3, r1
 800dbd4:	dd09      	ble.n	800dbea <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 800dbd6:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
 800dbda:	4299      	cmp	r1, r3
 800dbdc:	bf38      	it	cc
 800dbde:	3508      	addcc	r5, #8
 800dbe0:	f101 0101 	add.w	r1, r1, #1
 800dbe4:	bf38      	it	cc
 800dbe6:	6105      	strcc	r5, [r0, #16]
 800dbe8:	6081      	str	r1, [r0, #8]
 800dbea:	6903      	ldr	r3, [r0, #16]
 800dbec:	f8a3 a000 	strh.w	sl, [r3]
 800dbf0:	805a      	strh	r2, [r3, #2]
 800dbf2:	809e      	strh	r6, [r3, #4]
 800dbf4:	80de      	strh	r6, [r3, #6]
 800dbf6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800dbf8:	6901      	ldr	r1, [r0, #16]
 800dbfa:	441a      	add	r2, r3
 800dbfc:	88cc      	ldrh	r4, [r1, #6]
 800dbfe:	888b      	ldrh	r3, [r1, #4]
 800dc00:	4323      	orrs	r3, r4
 800dc02:	d010      	beq.n	800dc26 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 800dc04:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 800dc08:	2c00      	cmp	r4, #0
 800dc0a:	db0c      	blt.n	800dc26 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 800dc0c:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800dc0e:	429c      	cmp	r4, r3
 800dc10:	da09      	bge.n	800dc26 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 800dc12:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 800dc16:	429c      	cmp	r4, r3
 800dc18:	bf38      	it	cc
 800dc1a:	3108      	addcc	r1, #8
 800dc1c:	f104 0401 	add.w	r4, r4, #1
 800dc20:	bf38      	it	cc
 800dc22:	6101      	strcc	r1, [r0, #16]
 800dc24:	6084      	str	r4, [r0, #8]
 800dc26:	6903      	ldr	r3, [r0, #16]
 800dc28:	f8a3 a000 	strh.w	sl, [r3]
 800dc2c:	805a      	strh	r2, [r3, #2]
 800dc2e:	809e      	strh	r6, [r3, #4]
 800dc30:	80de      	strh	r6, [r3, #6]
 800dc32:	9b06      	ldr	r3, [sp, #24]
 800dc34:	4293      	cmp	r3, r2
 800dc36:	464f      	mov	r7, r9
 800dc38:	d19c      	bne.n	800db74 <_ZN8touchgfx7Outline10renderLineEiiii+0x358>
 800dc3a:	9b01      	ldr	r3, [sp, #4]
 800dc3c:	6907      	ldr	r7, [r0, #16]
 800dc3e:	f1c3 0620 	rsb	r6, r3, #32
 800dc42:	9b05      	ldr	r3, [sp, #20]
 800dc44:	ea4f 1e63 	mov.w	lr, r3, asr #5
 800dc48:	9b04      	ldr	r3, [sp, #16]
 800dc4a:	429e      	cmp	r6, r3
 800dc4c:	f040 81cc 	bne.w	800dfe8 <_ZN8touchgfx7Outline10renderLineEiiii+0x7cc>
 800dc50:	f9b7 3000 	ldrsh.w	r3, [r7]
 800dc54:	459e      	cmp	lr, r3
 800dc56:	d104      	bne.n	800dc62 <_ZN8touchgfx7Outline10renderLineEiiii+0x446>
 800dc58:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800dc5c:	429a      	cmp	r2, r3
 800dc5e:	f43f ae36 	beq.w	800d8ce <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800dc62:	88f9      	ldrh	r1, [r7, #6]
 800dc64:	88bb      	ldrh	r3, [r7, #4]
 800dc66:	430b      	orrs	r3, r1
 800dc68:	d010      	beq.n	800dc8c <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 800dc6a:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800dc6e:	2b00      	cmp	r3, #0
 800dc70:	db0c      	blt.n	800dc8c <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 800dc72:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 800dc74:	428b      	cmp	r3, r1
 800dc76:	da09      	bge.n	800dc8c <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 800dc78:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 800dc7c:	428b      	cmp	r3, r1
 800dc7e:	bf38      	it	cc
 800dc80:	3708      	addcc	r7, #8
 800dc82:	f103 0301 	add.w	r3, r3, #1
 800dc86:	bf38      	it	cc
 800dc88:	6107      	strcc	r7, [r0, #16]
 800dc8a:	6083      	str	r3, [r0, #8]
 800dc8c:	6903      	ldr	r3, [r0, #16]
 800dc8e:	f8a3 e000 	strh.w	lr, [r3]
 800dc92:	e5ff      	b.n	800d894 <_ZN8touchgfx7Outline10renderLineEiiii+0x78>
 800dc94:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 800dc96:	9c03      	ldr	r4, [sp, #12]
 800dc98:	42a2      	cmp	r2, r4
 800dc9a:	f6ff ae18 	blt.w	800d8ce <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800dc9e:	9c06      	ldr	r4, [sp, #24]
 800dca0:	42a2      	cmp	r2, r4
 800dca2:	bfb8      	it	lt
 800dca4:	3201      	addlt	r2, #1
 800dca6:	9c08      	ldr	r4, [sp, #32]
 800dca8:	bfb8      	it	lt
 800dcaa:	9206      	strlt	r2, [sp, #24]
 800dcac:	f1c3 0220 	rsb	r2, r3, #32
 800dcb0:	4362      	muls	r2, r4
 800dcb2:	2401      	movs	r4, #1
 800dcb4:	940b      	str	r4, [sp, #44]	; 0x2c
 800dcb6:	2420      	movs	r4, #32
 800dcb8:	e6d5      	b.n	800da66 <_ZN8touchgfx7Outline10renderLineEiiii+0x24a>
 800dcba:	f009 021f 	and.w	r2, r9, #31
 800dcbe:	ea4f 1861 	mov.w	r8, r1, asr #5
 800dcc2:	920c      	str	r2, [sp, #48]	; 0x30
 800dcc4:	9a01      	ldr	r2, [sp, #4]
 800dcc6:	f8b5 e004 	ldrh.w	lr, [r5, #4]
 800dcca:	f8b5 a006 	ldrh.w	sl, [r5, #6]
 800dcce:	45b0      	cmp	r8, r6
 800dcd0:	f001 011f 	and.w	r1, r1, #31
 800dcd4:	eba2 0203 	sub.w	r2, r2, r3
 800dcd8:	d108      	bne.n	800dcec <_ZN8touchgfx7Outline10renderLineEiiii+0x4d0>
 800dcda:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800dcdc:	4419      	add	r1, r3
 800dcde:	4496      	add	lr, r2
 800dce0:	fb02 a101 	mla	r1, r2, r1, sl
 800dce4:	f8a5 e004 	strh.w	lr, [r5, #4]
 800dce8:	80e9      	strh	r1, [r5, #6]
 800dcea:	e6f9      	b.n	800dae0 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 800dcec:	2c00      	cmp	r4, #0
 800dcee:	f2c0 80a9 	blt.w	800de44 <_ZN8touchgfx7Outline10renderLineEiiii+0x628>
 800dcf2:	2701      	movs	r7, #1
 800dcf4:	f1c1 0c20 	rsb	ip, r1, #32
 800dcf8:	970a      	str	r7, [sp, #40]	; 0x28
 800dcfa:	fb02 f20c 	mul.w	r2, r2, ip
 800dcfe:	2720      	movs	r7, #32
 800dd00:	9709      	str	r7, [sp, #36]	; 0x24
 800dd02:	fb92 fcf4 	sdiv	ip, r2, r4
 800dd06:	9f09      	ldr	r7, [sp, #36]	; 0x24
 800dd08:	fb04 221c 	mls	r2, r4, ip, r2
 800dd0c:	2a00      	cmp	r2, #0
 800dd0e:	bfb8      	it	lt
 800dd10:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 800dd14:	4439      	add	r1, r7
 800dd16:	fb0c a101 	mla	r1, ip, r1, sl
 800dd1a:	80e9      	strh	r1, [r5, #6]
 800dd1c:	44e6      	add	lr, ip
 800dd1e:	990a      	ldr	r1, [sp, #40]	; 0x28
 800dd20:	f8a5 e004 	strh.w	lr, [r5, #4]
 800dd24:	eb08 0501 	add.w	r5, r8, r1
 800dd28:	6901      	ldr	r1, [r0, #16]
 800dd2a:	f8b1 8006 	ldrh.w	r8, [r1, #6]
 800dd2e:	f8b1 e004 	ldrh.w	lr, [r1, #4]
 800dd32:	bfb8      	it	lt
 800dd34:	1912      	addlt	r2, r2, r4
 800dd36:	ea58 070e 	orrs.w	r7, r8, lr
 800dd3a:	d010      	beq.n	800dd5e <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 800dd3c:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
 800dd40:	f1be 0f00 	cmp.w	lr, #0
 800dd44:	db0b      	blt.n	800dd5e <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 800dd46:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800dd48:	45be      	cmp	lr, r7
 800dd4a:	da08      	bge.n	800dd5e <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 800dd4c:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 800dd50:	45be      	cmp	lr, r7
 800dd52:	bf3c      	itt	cc
 800dd54:	3108      	addcc	r1, #8
 800dd56:	6101      	strcc	r1, [r0, #16]
 800dd58:	f10e 0101 	add.w	r1, lr, #1
 800dd5c:	6081      	str	r1, [r0, #8]
 800dd5e:	6901      	ldr	r1, [r0, #16]
 800dd60:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 800dd64:	800d      	strh	r5, [r1, #0]
 800dd66:	f04f 0e00 	mov.w	lr, #0
 800dd6a:	42ae      	cmp	r6, r5
 800dd6c:	f8a1 8002 	strh.w	r8, [r1, #2]
 800dd70:	f8a1 e004 	strh.w	lr, [r1, #4]
 800dd74:	f8a1 e006 	strh.w	lr, [r1, #6]
 800dd78:	4463      	add	r3, ip
 800dd7a:	d054      	beq.n	800de26 <_ZN8touchgfx7Outline10renderLineEiiii+0x60a>
 800dd7c:	9901      	ldr	r1, [sp, #4]
 800dd7e:	1ac9      	subs	r1, r1, r3
 800dd80:	4461      	add	r1, ip
 800dd82:	0149      	lsls	r1, r1, #5
 800dd84:	fb91 fef4 	sdiv	lr, r1, r4
 800dd88:	fb04 111e 	mls	r1, r4, lr, r1
 800dd8c:	2900      	cmp	r1, #0
 800dd8e:	bfb8      	it	lt
 800dd90:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 800dd94:	f10e 0701 	add.w	r7, lr, #1
 800dd98:	bfb8      	it	lt
 800dd9a:	1909      	addlt	r1, r1, r4
 800dd9c:	1b12      	subs	r2, r2, r4
 800dd9e:	970d      	str	r7, [sp, #52]	; 0x34
 800dda0:	f8d0 a010 	ldr.w	sl, [r0, #16]
 800dda4:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 800dda6:	f8ba b004 	ldrh.w	fp, [sl, #4]
 800ddaa:	1852      	adds	r2, r2, r1
 800ddac:	bf54      	ite	pl
 800ddae:	f8dd c034 	ldrpl.w	ip, [sp, #52]	; 0x34
 800ddb2:	46f4      	movmi	ip, lr
 800ddb4:	44e3      	add	fp, ip
 800ddb6:	f8aa b004 	strh.w	fp, [sl, #4]
 800ddba:	f8ba b006 	ldrh.w	fp, [sl, #6]
 800ddbe:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
 800ddc2:	f8aa b006 	strh.w	fp, [sl, #6]
 800ddc6:	4463      	add	r3, ip
 800ddc8:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800ddcc:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800ddd0:	f8bc a004 	ldrh.w	sl, [ip, #4]
 800ddd4:	bf58      	it	pl
 800ddd6:	1b12      	subpl	r2, r2, r4
 800ddd8:	443d      	add	r5, r7
 800ddda:	ea5b 070a 	orrs.w	r7, fp, sl
 800ddde:	d014      	beq.n	800de0a <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 800dde0:	f9bc a002 	ldrsh.w	sl, [ip, #2]
 800dde4:	f1ba 0f00 	cmp.w	sl, #0
 800dde8:	db0f      	blt.n	800de0a <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 800ddea:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800ddec:	45ba      	cmp	sl, r7
 800ddee:	da0c      	bge.n	800de0a <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 800ddf0:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
 800ddf4:	45ba      	cmp	sl, r7
 800ddf6:	bf38      	it	cc
 800ddf8:	f10c 0c08 	addcc.w	ip, ip, #8
 800ddfc:	f10a 0a01 	add.w	sl, sl, #1
 800de00:	bf38      	it	cc
 800de02:	f8c0 c010 	strcc.w	ip, [r0, #16]
 800de06:	f8c0 a008 	str.w	sl, [r0, #8]
 800de0a:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800de0e:	f04f 0700 	mov.w	r7, #0
 800de12:	42ae      	cmp	r6, r5
 800de14:	f8ac 5000 	strh.w	r5, [ip]
 800de18:	f8ac 8002 	strh.w	r8, [ip, #2]
 800de1c:	f8ac 7004 	strh.w	r7, [ip, #4]
 800de20:	f8ac 7006 	strh.w	r7, [ip, #6]
 800de24:	d1bc      	bne.n	800dda0 <_ZN8touchgfx7Outline10renderLineEiiii+0x584>
 800de26:	6904      	ldr	r4, [r0, #16]
 800de28:	9a01      	ldr	r2, [sp, #4]
 800de2a:	990c      	ldr	r1, [sp, #48]	; 0x30
 800de2c:	1ad3      	subs	r3, r2, r3
 800de2e:	88a2      	ldrh	r2, [r4, #4]
 800de30:	441a      	add	r2, r3
 800de32:	80a2      	strh	r2, [r4, #4]
 800de34:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800de36:	3120      	adds	r1, #32
 800de38:	1a89      	subs	r1, r1, r2
 800de3a:	88e2      	ldrh	r2, [r4, #6]
 800de3c:	fb03 2301 	mla	r3, r3, r1, r2
 800de40:	80e3      	strh	r3, [r4, #6]
 800de42:	e64d      	b.n	800dae0 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 800de44:	f04f 37ff 	mov.w	r7, #4294967295
 800de48:	970a      	str	r7, [sp, #40]	; 0x28
 800de4a:	434a      	muls	r2, r1
 800de4c:	4264      	negs	r4, r4
 800de4e:	2700      	movs	r7, #0
 800de50:	e756      	b.n	800dd00 <_ZN8touchgfx7Outline10renderLineEiiii+0x4e4>
 800de52:	ea4f 1867 	mov.w	r8, r7, asr #5
 800de56:	f009 031f 	and.w	r3, r9, #31
 800de5a:	45d0      	cmp	r8, sl
 800de5c:	f007 071f 	and.w	r7, r7, #31
 800de60:	930f      	str	r3, [sp, #60]	; 0x3c
 800de62:	fa1f fc8c 	uxth.w	ip, ip
 800de66:	fa1f fe8e 	uxth.w	lr, lr
 800de6a:	d10a      	bne.n	800de82 <_ZN8touchgfx7Outline10renderLineEiiii+0x666>
 800de6c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800de6e:	449c      	add	ip, r3
 800de70:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800de72:	f8a5 c004 	strh.w	ip, [r5, #4]
 800de76:	441f      	add	r7, r3
 800de78:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800de7a:	fb03 e707 	mla	r7, r3, r7, lr
 800de7e:	80ef      	strh	r7, [r5, #6]
 800de80:	e6b9      	b.n	800dbf6 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800de82:	2900      	cmp	r1, #0
 800de84:	f2c0 80a8 	blt.w	800dfd8 <_ZN8touchgfx7Outline10renderLineEiiii+0x7bc>
 800de88:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800de8a:	f1c7 0320 	rsb	r3, r7, #32
 800de8e:	4363      	muls	r3, r4
 800de90:	2401      	movs	r4, #1
 800de92:	940d      	str	r4, [sp, #52]	; 0x34
 800de94:	2420      	movs	r4, #32
 800de96:	940c      	str	r4, [sp, #48]	; 0x30
 800de98:	fb93 f4f1 	sdiv	r4, r3, r1
 800de9c:	fb01 3b14 	mls	fp, r1, r4, r3
 800dea0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800dea2:	f1bb 0f00 	cmp.w	fp, #0
 800dea6:	bfb8      	it	lt
 800dea8:	f104 34ff 	addlt.w	r4, r4, #4294967295
 800deac:	441f      	add	r7, r3
 800deae:	fb04 e707 	mla	r7, r4, r7, lr
 800deb2:	44a4      	add	ip, r4
 800deb4:	f8a5 c004 	strh.w	ip, [r5, #4]
 800deb8:	80ef      	strh	r7, [r5, #6]
 800deba:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800debe:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800dec0:	f8bc e006 	ldrh.w	lr, [ip, #6]
 800dec4:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800dec8:	bfb8      	it	lt
 800deca:	448b      	addlt	fp, r1
 800decc:	eb08 0503 	add.w	r5, r8, r3
 800ded0:	ea5e 0307 	orrs.w	r3, lr, r7
 800ded4:	d011      	beq.n	800defa <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 800ded6:	f9bc e002 	ldrsh.w	lr, [ip, #2]
 800deda:	f1be 0f00 	cmp.w	lr, #0
 800dede:	db0c      	blt.n	800defa <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 800dee0:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800dee2:	45be      	cmp	lr, r7
 800dee4:	da09      	bge.n	800defa <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 800dee6:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 800deea:	45be      	cmp	lr, r7
 800deec:	bf3c      	itt	cc
 800deee:	f10c 0708 	addcc.w	r7, ip, #8
 800def2:	6107      	strcc	r7, [r0, #16]
 800def4:	f10e 0701 	add.w	r7, lr, #1
 800def8:	6087      	str	r7, [r0, #8]
 800defa:	6907      	ldr	r7, [r0, #16]
 800defc:	b213      	sxth	r3, r2
 800defe:	9310      	str	r3, [sp, #64]	; 0x40
 800df00:	807b      	strh	r3, [r7, #2]
 800df02:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800df04:	803d      	strh	r5, [r7, #0]
 800df06:	4555      	cmp	r5, sl
 800df08:	80be      	strh	r6, [r7, #4]
 800df0a:	80fe      	strh	r6, [r7, #6]
 800df0c:	eb04 0c03 	add.w	ip, r4, r3
 800df10:	d051      	beq.n	800dfb6 <_ZN8touchgfx7Outline10renderLineEiiii+0x79a>
 800df12:	9b01      	ldr	r3, [sp, #4]
 800df14:	eba3 070c 	sub.w	r7, r3, ip
 800df18:	443c      	add	r4, r7
 800df1a:	0164      	lsls	r4, r4, #5
 800df1c:	fb94 f8f1 	sdiv	r8, r4, r1
 800df20:	fb01 4418 	mls	r4, r1, r8, r4
 800df24:	2c00      	cmp	r4, #0
 800df26:	bfb8      	it	lt
 800df28:	f108 38ff 	addlt.w	r8, r8, #4294967295
 800df2c:	ebab 0301 	sub.w	r3, fp, r1
 800df30:	f108 0701 	add.w	r7, r8, #1
 800df34:	bfb8      	it	lt
 800df36:	1864      	addlt	r4, r4, r1
 800df38:	9309      	str	r3, [sp, #36]	; 0x24
 800df3a:	9711      	str	r7, [sp, #68]	; 0x44
 800df3c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800df3e:	f8d0 e010 	ldr.w	lr, [r0, #16]
 800df42:	191b      	adds	r3, r3, r4
 800df44:	bf58      	it	pl
 800df46:	9f11      	ldrpl	r7, [sp, #68]	; 0x44
 800df48:	f8be b004 	ldrh.w	fp, [lr, #4]
 800df4c:	9309      	str	r3, [sp, #36]	; 0x24
 800df4e:	bf48      	it	mi
 800df50:	4647      	movmi	r7, r8
 800df52:	44bb      	add	fp, r7
 800df54:	f8ae b004 	strh.w	fp, [lr, #4]
 800df58:	f8be b006 	ldrh.w	fp, [lr, #6]
 800df5c:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 800df60:	f8ae b006 	strh.w	fp, [lr, #6]
 800df64:	f8d0 e010 	ldr.w	lr, [r0, #16]
 800df68:	44bc      	add	ip, r7
 800df6a:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 800df6c:	f8be b006 	ldrh.w	fp, [lr, #6]
 800df70:	443d      	add	r5, r7
 800df72:	f8be 7004 	ldrh.w	r7, [lr, #4]
 800df76:	bf5c      	itt	pl
 800df78:	1a5b      	subpl	r3, r3, r1
 800df7a:	9309      	strpl	r3, [sp, #36]	; 0x24
 800df7c:	ea5b 0307 	orrs.w	r3, fp, r7
 800df80:	d011      	beq.n	800dfa6 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 800df82:	f9be b002 	ldrsh.w	fp, [lr, #2]
 800df86:	f1bb 0f00 	cmp.w	fp, #0
 800df8a:	db0c      	blt.n	800dfa6 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 800df8c:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800df8e:	45bb      	cmp	fp, r7
 800df90:	da09      	bge.n	800dfa6 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 800df92:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 800df96:	45bb      	cmp	fp, r7
 800df98:	bf3c      	itt	cc
 800df9a:	f10e 0708 	addcc.w	r7, lr, #8
 800df9e:	6107      	strcc	r7, [r0, #16]
 800dfa0:	f10b 0701 	add.w	r7, fp, #1
 800dfa4:	6087      	str	r7, [r0, #8]
 800dfa6:	6907      	ldr	r7, [r0, #16]
 800dfa8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800dfaa:	803d      	strh	r5, [r7, #0]
 800dfac:	4555      	cmp	r5, sl
 800dfae:	807b      	strh	r3, [r7, #2]
 800dfb0:	80be      	strh	r6, [r7, #4]
 800dfb2:	80fe      	strh	r6, [r7, #6]
 800dfb4:	d1c2      	bne.n	800df3c <_ZN8touchgfx7Outline10renderLineEiiii+0x720>
 800dfb6:	9b01      	ldr	r3, [sp, #4]
 800dfb8:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 800dfba:	eba3 0c0c 	sub.w	ip, r3, ip
 800dfbe:	6903      	ldr	r3, [r0, #16]
 800dfc0:	8899      	ldrh	r1, [r3, #4]
 800dfc2:	4461      	add	r1, ip
 800dfc4:	8099      	strh	r1, [r3, #4]
 800dfc6:	990c      	ldr	r1, [sp, #48]	; 0x30
 800dfc8:	3720      	adds	r7, #32
 800dfca:	1a7f      	subs	r7, r7, r1
 800dfcc:	88d9      	ldrh	r1, [r3, #6]
 800dfce:	fb0c 1c07 	mla	ip, ip, r7, r1
 800dfd2:	f8a3 c006 	strh.w	ip, [r3, #6]
 800dfd6:	e60e      	b.n	800dbf6 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800dfd8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800dfda:	f04f 34ff 	mov.w	r4, #4294967295
 800dfde:	940d      	str	r4, [sp, #52]	; 0x34
 800dfe0:	437b      	muls	r3, r7
 800dfe2:	4249      	negs	r1, r1
 800dfe4:	2400      	movs	r4, #0
 800dfe6:	e756      	b.n	800de96 <_ZN8touchgfx7Outline10renderLineEiiii+0x67a>
 800dfe8:	9905      	ldr	r1, [sp, #20]
 800dfea:	f8b7 8004 	ldrh.w	r8, [r7, #4]
 800dfee:	f8b7 a006 	ldrh.w	sl, [r7, #6]
 800dff2:	f001 011f 	and.w	r1, r1, #31
 800dff6:	ea4f 1b69 	mov.w	fp, r9, asr #5
 800dffa:	9102      	str	r1, [sp, #8]
 800dffc:	9904      	ldr	r1, [sp, #16]
 800dffe:	45f3      	cmp	fp, lr
 800e000:	f009 0c1f 	and.w	ip, r9, #31
 800e004:	eba1 0406 	sub.w	r4, r1, r6
 800e008:	d108      	bne.n	800e01c <_ZN8touchgfx7Outline10renderLineEiiii+0x800>
 800e00a:	9b02      	ldr	r3, [sp, #8]
 800e00c:	449c      	add	ip, r3
 800e00e:	44a0      	add	r8, r4
 800e010:	fb04 a40c 	mla	r4, r4, ip, sl
 800e014:	f8a7 8004 	strh.w	r8, [r7, #4]
 800e018:	80fc      	strh	r4, [r7, #6]
 800e01a:	e458      	b.n	800d8ce <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800e01c:	9905      	ldr	r1, [sp, #20]
 800e01e:	ebb1 0109 	subs.w	r1, r1, r9
 800e022:	bf5b      	ittet	pl
 800e024:	f1cc 0520 	rsbpl	r5, ip, #32
 800e028:	436c      	mulpl	r4, r5
 800e02a:	2500      	movmi	r5, #0
 800e02c:	2520      	movpl	r5, #32
 800e02e:	bf44      	itt	mi
 800e030:	fb04 f40c 	mulmi.w	r4, r4, ip
 800e034:	4249      	negmi	r1, r1
 800e036:	9501      	str	r5, [sp, #4]
 800e038:	9b01      	ldr	r3, [sp, #4]
 800e03a:	fb94 f5f1 	sdiv	r5, r4, r1
 800e03e:	fb01 4415 	mls	r4, r1, r5, r4
 800e042:	bf54      	ite	pl
 800e044:	f04f 0901 	movpl.w	r9, #1
 800e048:	f04f 39ff 	movmi.w	r9, #4294967295
 800e04c:	2c00      	cmp	r4, #0
 800e04e:	bfb8      	it	lt
 800e050:	f105 35ff 	addlt.w	r5, r5, #4294967295
 800e054:	449c      	add	ip, r3
 800e056:	44a8      	add	r8, r5
 800e058:	fb05 ac0c 	mla	ip, r5, ip, sl
 800e05c:	f8a7 8004 	strh.w	r8, [r7, #4]
 800e060:	f8a7 c006 	strh.w	ip, [r7, #6]
 800e064:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800e068:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 800e06c:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800e070:	bfb8      	it	lt
 800e072:	1864      	addlt	r4, r4, r1
 800e074:	ea58 0707 	orrs.w	r7, r8, r7
 800e078:	eb0b 0309 	add.w	r3, fp, r9
 800e07c:	d011      	beq.n	800e0a2 <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 800e07e:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 800e082:	f1b8 0f00 	cmp.w	r8, #0
 800e086:	db0c      	blt.n	800e0a2 <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 800e088:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800e08a:	45b8      	cmp	r8, r7
 800e08c:	da09      	bge.n	800e0a2 <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 800e08e:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
 800e092:	45b8      	cmp	r8, r7
 800e094:	bf3c      	itt	cc
 800e096:	f10c 0708 	addcc.w	r7, ip, #8
 800e09a:	6107      	strcc	r7, [r0, #16]
 800e09c:	f108 0701 	add.w	r7, r8, #1
 800e0a0:	6087      	str	r7, [r0, #8]
 800e0a2:	6907      	ldr	r7, [r0, #16]
 800e0a4:	f04f 0c00 	mov.w	ip, #0
 800e0a8:	b212      	sxth	r2, r2
 800e0aa:	459e      	cmp	lr, r3
 800e0ac:	803b      	strh	r3, [r7, #0]
 800e0ae:	807a      	strh	r2, [r7, #2]
 800e0b0:	f8a7 c004 	strh.w	ip, [r7, #4]
 800e0b4:	f8a7 c006 	strh.w	ip, [r7, #6]
 800e0b8:	442e      	add	r6, r5
 800e0ba:	d04d      	beq.n	800e158 <_ZN8touchgfx7Outline10renderLineEiiii+0x93c>
 800e0bc:	9f04      	ldr	r7, [sp, #16]
 800e0be:	1bbf      	subs	r7, r7, r6
 800e0c0:	443d      	add	r5, r7
 800e0c2:	016d      	lsls	r5, r5, #5
 800e0c4:	fb95 f8f1 	sdiv	r8, r5, r1
 800e0c8:	fb01 5518 	mls	r5, r1, r8, r5
 800e0cc:	4565      	cmp	r5, ip
 800e0ce:	bfb8      	it	lt
 800e0d0:	f108 38ff 	addlt.w	r8, r8, #4294967295
 800e0d4:	f108 0701 	add.w	r7, r8, #1
 800e0d8:	bfb8      	it	lt
 800e0da:	186d      	addlt	r5, r5, r1
 800e0dc:	1a64      	subs	r4, r4, r1
 800e0de:	9703      	str	r7, [sp, #12]
 800e0e0:	f04f 0a00 	mov.w	sl, #0
 800e0e4:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800e0e8:	1964      	adds	r4, r4, r5
 800e0ea:	bf58      	it	pl
 800e0ec:	9f03      	ldrpl	r7, [sp, #12]
 800e0ee:	f8bc b004 	ldrh.w	fp, [ip, #4]
 800e0f2:	bf48      	it	mi
 800e0f4:	4647      	movmi	r7, r8
 800e0f6:	44bb      	add	fp, r7
 800e0f8:	f8ac b004 	strh.w	fp, [ip, #4]
 800e0fc:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800e100:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 800e104:	f8ac b006 	strh.w	fp, [ip, #6]
 800e108:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800e10c:	443e      	add	r6, r7
 800e10e:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800e112:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800e116:	bf58      	it	pl
 800e118:	1a64      	subpl	r4, r4, r1
 800e11a:	ea5b 0707 	orrs.w	r7, fp, r7
 800e11e:	444b      	add	r3, r9
 800e120:	d011      	beq.n	800e146 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 800e122:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 800e126:	f1bb 0f00 	cmp.w	fp, #0
 800e12a:	db0c      	blt.n	800e146 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 800e12c:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800e12e:	45bb      	cmp	fp, r7
 800e130:	da09      	bge.n	800e146 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 800e132:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 800e136:	45bb      	cmp	fp, r7
 800e138:	bf3c      	itt	cc
 800e13a:	f10c 0708 	addcc.w	r7, ip, #8
 800e13e:	6107      	strcc	r7, [r0, #16]
 800e140:	f10b 0701 	add.w	r7, fp, #1
 800e144:	6087      	str	r7, [r0, #8]
 800e146:	6907      	ldr	r7, [r0, #16]
 800e148:	459e      	cmp	lr, r3
 800e14a:	803b      	strh	r3, [r7, #0]
 800e14c:	807a      	strh	r2, [r7, #2]
 800e14e:	f8a7 a004 	strh.w	sl, [r7, #4]
 800e152:	f8a7 a006 	strh.w	sl, [r7, #6]
 800e156:	d1c5      	bne.n	800e0e4 <_ZN8touchgfx7Outline10renderLineEiiii+0x8c8>
 800e158:	9b04      	ldr	r3, [sp, #16]
 800e15a:	1b9e      	subs	r6, r3, r6
 800e15c:	6903      	ldr	r3, [r0, #16]
 800e15e:	889a      	ldrh	r2, [r3, #4]
 800e160:	4432      	add	r2, r6
 800e162:	809a      	strh	r2, [r3, #4]
 800e164:	9a02      	ldr	r2, [sp, #8]
 800e166:	f102 0c20 	add.w	ip, r2, #32
 800e16a:	9a01      	ldr	r2, [sp, #4]
 800e16c:	ebac 0c02 	sub.w	ip, ip, r2
 800e170:	88da      	ldrh	r2, [r3, #6]
 800e172:	fb06 260c 	mla	r6, r6, ip, r2
 800e176:	80de      	strh	r6, [r3, #6]
 800e178:	f7ff bba9 	b.w	800d8ce <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>

0800e17c <_ZN8touchgfx7Outline6lineToEii>:
 800e17c:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800e17e:	079b      	lsls	r3, r3, #30
 800e180:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800e182:	460e      	mov	r6, r1
 800e184:	4615      	mov	r5, r2
 800e186:	d511      	bpl.n	800e1ac <_ZN8touchgfx7Outline6lineToEii+0x30>
 800e188:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 800e18c:	ea86 0701 	eor.w	r7, r6, r1
 800e190:	ea85 0302 	eor.w	r3, r5, r2
 800e194:	433b      	orrs	r3, r7
 800e196:	d009      	beq.n	800e1ac <_ZN8touchgfx7Outline6lineToEii+0x30>
 800e198:	4633      	mov	r3, r6
 800e19a:	9500      	str	r5, [sp, #0]
 800e19c:	f7ff fb3e 	bl	800d81c <_ZN8touchgfx7Outline10renderLineEiiii>
 800e1a0:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800e1a2:	e9c0 6505 	strd	r6, r5, [r0, #20]
 800e1a6:	f043 0301 	orr.w	r3, r3, #1
 800e1aa:	6243      	str	r3, [r0, #36]	; 0x24
 800e1ac:	b003      	add	sp, #12
 800e1ae:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800e1b0 <_ZN8touchgfx7Outline6moveToEii>:
 800e1b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e1b2:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800e1b4:	4615      	mov	r5, r2
 800e1b6:	079a      	lsls	r2, r3, #30
 800e1b8:	4604      	mov	r4, r0
 800e1ba:	460e      	mov	r6, r1
 800e1bc:	d401      	bmi.n	800e1c2 <_ZN8touchgfx7Outline6moveToEii+0x12>
 800e1be:	f7ff faf9 	bl	800d7b4 <_ZN8touchgfx7Outline5resetEv>
 800e1c2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800e1c4:	07db      	lsls	r3, r3, #31
 800e1c6:	d504      	bpl.n	800e1d2 <_ZN8touchgfx7Outline6moveToEii+0x22>
 800e1c8:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
 800e1cc:	4620      	mov	r0, r4
 800e1ce:	f7ff ffd5 	bl	800e17c <_ZN8touchgfx7Outline6lineToEii>
 800e1d2:	6923      	ldr	r3, [r4, #16]
 800e1d4:	f9b3 2000 	ldrsh.w	r2, [r3]
 800e1d8:	1170      	asrs	r0, r6, #5
 800e1da:	4290      	cmp	r0, r2
 800e1dc:	ea4f 1165 	mov.w	r1, r5, asr #5
 800e1e0:	d103      	bne.n	800e1ea <_ZN8touchgfx7Outline6moveToEii+0x3a>
 800e1e2:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800e1e6:	4291      	cmp	r1, r2
 800e1e8:	d01a      	beq.n	800e220 <_ZN8touchgfx7Outline6moveToEii+0x70>
 800e1ea:	88df      	ldrh	r7, [r3, #6]
 800e1ec:	889a      	ldrh	r2, [r3, #4]
 800e1ee:	433a      	orrs	r2, r7
 800e1f0:	d010      	beq.n	800e214 <_ZN8touchgfx7Outline6moveToEii+0x64>
 800e1f2:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800e1f6:	2a00      	cmp	r2, #0
 800e1f8:	db0c      	blt.n	800e214 <_ZN8touchgfx7Outline6moveToEii+0x64>
 800e1fa:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 800e1fc:	42ba      	cmp	r2, r7
 800e1fe:	da09      	bge.n	800e214 <_ZN8touchgfx7Outline6moveToEii+0x64>
 800e200:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
 800e204:	42ba      	cmp	r2, r7
 800e206:	bf38      	it	cc
 800e208:	3308      	addcc	r3, #8
 800e20a:	f102 0201 	add.w	r2, r2, #1
 800e20e:	bf38      	it	cc
 800e210:	6123      	strcc	r3, [r4, #16]
 800e212:	60a2      	str	r2, [r4, #8]
 800e214:	6923      	ldr	r3, [r4, #16]
 800e216:	2200      	movs	r2, #0
 800e218:	8018      	strh	r0, [r3, #0]
 800e21a:	8059      	strh	r1, [r3, #2]
 800e21c:	809a      	strh	r2, [r3, #4]
 800e21e:	80da      	strh	r2, [r3, #6]
 800e220:	6166      	str	r6, [r4, #20]
 800e222:	e9c4 5606 	strd	r5, r6, [r4, #24]
 800e226:	6225      	str	r5, [r4, #32]
 800e228:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800e22a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 800e22a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800e22e:	b0d0      	sub	sp, #320	; 0x140
 800e230:	466c      	mov	r4, sp
 800e232:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 800e236:	4627      	mov	r7, r4
 800e238:	1a0d      	subs	r5, r1, r0
 800e23a:	2d48      	cmp	r5, #72	; 0x48
 800e23c:	f100 0308 	add.w	r3, r0, #8
 800e240:	f340 80d5 	ble.w	800e3ee <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 800e244:	112d      	asrs	r5, r5, #4
 800e246:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
 800e24a:	f9b0 9000 	ldrsh.w	r9, [r0]
 800e24e:	6816      	ldr	r6, [r2, #0]
 800e250:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
 800e254:	6006      	str	r6, [r0, #0]
 800e256:	6856      	ldr	r6, [r2, #4]
 800e258:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 800e25c:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 800e260:	6046      	str	r6, [r0, #4]
 800e262:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 800e266:	f8a2 8002 	strh.w	r8, [r2, #2]
 800e26a:	f8a2 e004 	strh.w	lr, [r2, #4]
 800e26e:	f8a2 c006 	strh.w	ip, [r2, #6]
 800e272:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 800e276:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
 800e27a:	4565      	cmp	r5, ip
 800e27c:	f1a1 0208 	sub.w	r2, r1, #8
 800e280:	db06      	blt.n	800e290 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
 800e282:	d119      	bne.n	800e2b8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 800e284:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 800e288:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 800e28c:	42ae      	cmp	r6, r5
 800e28e:	dd13      	ble.n	800e2b8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 800e290:	460e      	mov	r6, r1
 800e292:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
 800e296:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 800e29a:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
 800e29e:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
 800e2a2:	601d      	str	r5, [r3, #0]
 800e2a4:	6875      	ldr	r5, [r6, #4]
 800e2a6:	605d      	str	r5, [r3, #4]
 800e2a8:	f821 9c08 	strh.w	r9, [r1, #-8]
 800e2ac:	f821 cc06 	strh.w	ip, [r1, #-6]
 800e2b0:	f821 8c04 	strh.w	r8, [r1, #-4]
 800e2b4:	f821 ec02 	strh.w	lr, [r1, #-2]
 800e2b8:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800e2bc:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
 800e2c0:	42ae      	cmp	r6, r5
 800e2c2:	db06      	blt.n	800e2d2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
 800e2c4:	d116      	bne.n	800e2f4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 800e2c6:	f9b0 c000 	ldrsh.w	ip, [r0]
 800e2ca:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 800e2ce:	45ac      	cmp	ip, r5
 800e2d0:	da10      	bge.n	800e2f4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 800e2d2:	681d      	ldr	r5, [r3, #0]
 800e2d4:	f9b0 8000 	ldrsh.w	r8, [r0]
 800e2d8:	6005      	str	r5, [r0, #0]
 800e2da:	685d      	ldr	r5, [r3, #4]
 800e2dc:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 800e2e0:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 800e2e4:	f8a0 8008 	strh.w	r8, [r0, #8]
 800e2e8:	6045      	str	r5, [r0, #4]
 800e2ea:	8146      	strh	r6, [r0, #10]
 800e2ec:	f8a0 e00c 	strh.w	lr, [r0, #12]
 800e2f0:	f8a0 c00e 	strh.w	ip, [r0, #14]
 800e2f4:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 800e2f8:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 800e2fc:	4565      	cmp	r5, ip
 800e2fe:	db06      	blt.n	800e30e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
 800e300:	d119      	bne.n	800e336 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800e302:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
 800e306:	f9b0 5000 	ldrsh.w	r5, [r0]
 800e30a:	42ae      	cmp	r6, r5
 800e30c:	da13      	bge.n	800e336 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800e30e:	460e      	mov	r6, r1
 800e310:	f9b0 9000 	ldrsh.w	r9, [r0]
 800e314:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 800e318:	6005      	str	r5, [r0, #0]
 800e31a:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 800e31e:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
 800e322:	6875      	ldr	r5, [r6, #4]
 800e324:	6045      	str	r5, [r0, #4]
 800e326:	f821 9c08 	strh.w	r9, [r1, #-8]
 800e32a:	f821 cc06 	strh.w	ip, [r1, #-6]
 800e32e:	f821 8c04 	strh.w	r8, [r1, #-4]
 800e332:	f821 ec02 	strh.w	lr, [r1, #-2]
 800e336:	3308      	adds	r3, #8
 800e338:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 800e33c:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 800e340:	45e6      	cmp	lr, ip
 800e342:	dbf8      	blt.n	800e336 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800e344:	d105      	bne.n	800e352 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 800e346:	f9b3 6000 	ldrsh.w	r6, [r3]
 800e34a:	f9b0 5000 	ldrsh.w	r5, [r0]
 800e34e:	42ae      	cmp	r6, r5
 800e350:	dbf1      	blt.n	800e336 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800e352:	4615      	mov	r5, r2
 800e354:	3a08      	subs	r2, #8
 800e356:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
 800e35a:	45b4      	cmp	ip, r6
 800e35c:	dbf9      	blt.n	800e352 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 800e35e:	d105      	bne.n	800e36c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
 800e360:	f9b0 8000 	ldrsh.w	r8, [r0]
 800e364:	f9b2 6000 	ldrsh.w	r6, [r2]
 800e368:	45b0      	cmp	r8, r6
 800e36a:	dbf2      	blt.n	800e352 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 800e36c:	4293      	cmp	r3, r2
 800e36e:	f1a5 0608 	sub.w	r6, r5, #8
 800e372:	d816      	bhi.n	800e3a2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
 800e374:	f8d6 c000 	ldr.w	ip, [r6]
 800e378:	f9b3 a000 	ldrsh.w	sl, [r3]
 800e37c:	f8c3 c000 	str.w	ip, [r3]
 800e380:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
 800e384:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
 800e388:	f8d6 c004 	ldr.w	ip, [r6, #4]
 800e38c:	f8c3 c004 	str.w	ip, [r3, #4]
 800e390:	f825 ac08 	strh.w	sl, [r5, #-8]
 800e394:	f825 ec06 	strh.w	lr, [r5, #-6]
 800e398:	f825 9c04 	strh.w	r9, [r5, #-4]
 800e39c:	f825 8c02 	strh.w	r8, [r5, #-2]
 800e3a0:	e7c9      	b.n	800e336 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800e3a2:	f8d6 e000 	ldr.w	lr, [r6]
 800e3a6:	f9b0 a000 	ldrsh.w	sl, [r0]
 800e3aa:	f8c0 e000 	str.w	lr, [r0]
 800e3ae:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
 800e3b2:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
 800e3b6:	f8d6 e004 	ldr.w	lr, [r6, #4]
 800e3ba:	f8c0 e004 	str.w	lr, [r0, #4]
 800e3be:	f825 ac08 	strh.w	sl, [r5, #-8]
 800e3c2:	f825 cc06 	strh.w	ip, [r5, #-6]
 800e3c6:	f825 9c04 	strh.w	r9, [r5, #-4]
 800e3ca:	f825 8c02 	strh.w	r8, [r5, #-2]
 800e3ce:	1acd      	subs	r5, r1, r3
 800e3d0:	1a16      	subs	r6, r2, r0
 800e3d2:	10ed      	asrs	r5, r5, #3
 800e3d4:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
 800e3d8:	bfb5      	itete	lt
 800e3da:	e9c4 0200 	strdlt	r0, r2, [r4]
 800e3de:	e9c4 3100 	strdge	r3, r1, [r4]
 800e3e2:	460a      	movlt	r2, r1
 800e3e4:	4603      	movge	r3, r0
 800e3e6:	3408      	adds	r4, #8
 800e3e8:	4618      	mov	r0, r3
 800e3ea:	4611      	mov	r1, r2
 800e3ec:	e724      	b.n	800e238 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 800e3ee:	4299      	cmp	r1, r3
 800e3f0:	d928      	bls.n	800e444 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x21a>
 800e3f2:	f1a3 0210 	sub.w	r2, r3, #16
 800e3f6:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
 800e3fa:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
 800e3fe:	45ac      	cmp	ip, r5
 800e400:	db06      	blt.n	800e410 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
 800e402:	d11d      	bne.n	800e440 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 800e404:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
 800e408:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
 800e40c:	42ae      	cmp	r6, r5
 800e40e:	da17      	bge.n	800e440 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 800e410:	4615      	mov	r5, r2
 800e412:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
 800e416:	f855 6f08 	ldr.w	r6, [r5, #8]!
 800e41a:	6116      	str	r6, [r2, #16]
 800e41c:	686e      	ldr	r6, [r5, #4]
 800e41e:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
 800e422:	f9b2 e016 	ldrsh.w	lr, [r2, #22]
 800e426:	f8a2 9008 	strh.w	r9, [r2, #8]
 800e42a:	42a8      	cmp	r0, r5
 800e42c:	6156      	str	r6, [r2, #20]
 800e42e:	f8a2 c00a 	strh.w	ip, [r2, #10]
 800e432:	f8a2 800c 	strh.w	r8, [r2, #12]
 800e436:	f8a2 e00e 	strh.w	lr, [r2, #14]
 800e43a:	f1a2 0208 	sub.w	r2, r2, #8
 800e43e:	d1da      	bne.n	800e3f6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
 800e440:	3308      	adds	r3, #8
 800e442:	e7d4      	b.n	800e3ee <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 800e444:	42bc      	cmp	r4, r7
 800e446:	d903      	bls.n	800e450 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x226>
 800e448:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 800e44c:	3c08      	subs	r4, #8
 800e44e:	e6f3      	b.n	800e238 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 800e450:	b050      	add	sp, #320	; 0x140
 800e452:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0800e456 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
 800e456:	b510      	push	{r4, lr}
 800e458:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800e45a:	07da      	lsls	r2, r3, #31
 800e45c:	4604      	mov	r4, r0
 800e45e:	d507      	bpl.n	800e470 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
 800e460:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 800e464:	f7ff fe8a 	bl	800e17c <_ZN8touchgfx7Outline6lineToEii>
 800e468:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800e46a:	f023 0301 	bic.w	r3, r3, #1
 800e46e:	6243      	str	r3, [r0, #36]	; 0x24
 800e470:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800e472:	079b      	lsls	r3, r3, #30
 800e474:	d521      	bpl.n	800e4ba <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
 800e476:	6923      	ldr	r3, [r4, #16]
 800e478:	88d9      	ldrh	r1, [r3, #6]
 800e47a:	889a      	ldrh	r2, [r3, #4]
 800e47c:	430a      	orrs	r2, r1
 800e47e:	d010      	beq.n	800e4a2 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 800e480:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800e484:	2a00      	cmp	r2, #0
 800e486:	db0c      	blt.n	800e4a2 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 800e488:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800e48a:	428a      	cmp	r2, r1
 800e48c:	da09      	bge.n	800e4a2 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 800e48e:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 800e492:	4291      	cmp	r1, r2
 800e494:	bf88      	it	hi
 800e496:	3308      	addhi	r3, #8
 800e498:	f102 0201 	add.w	r2, r2, #1
 800e49c:	bf88      	it	hi
 800e49e:	6123      	strhi	r3, [r4, #16]
 800e4a0:	60a2      	str	r2, [r4, #8]
 800e4a2:	68a1      	ldr	r1, [r4, #8]
 800e4a4:	b129      	cbz	r1, 800e4b2 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 800e4a6:	6863      	ldr	r3, [r4, #4]
 800e4a8:	4299      	cmp	r1, r3
 800e4aa:	d802      	bhi.n	800e4b2 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 800e4ac:	68e0      	ldr	r0, [r4, #12]
 800e4ae:	f7ff febc 	bl	800e22a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 800e4b2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800e4b4:	f023 0302 	bic.w	r3, r3, #2
 800e4b8:	6263      	str	r3, [r4, #36]	; 0x24
 800e4ba:	68e0      	ldr	r0, [r4, #12]
 800e4bc:	bd10      	pop	{r4, pc}
	...

0800e4c0 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
 800e4c0:	4b02      	ldr	r3, [pc, #8]	; (800e4cc <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
 800e4c2:	6018      	str	r0, [r3, #0]
 800e4c4:	4b02      	ldr	r3, [pc, #8]	; (800e4d0 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
 800e4c6:	6019      	str	r1, [r3, #0]
 800e4c8:	4770      	bx	lr
 800e4ca:	bf00      	nop
 800e4cc:	20017460 	.word	0x20017460
 800e4d0:	20017464 	.word	0x20017464

0800e4d4 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 800e4d4:	4b01      	ldr	r3, [pc, #4]	; (800e4dc <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 800e4d6:	6818      	ldr	r0, [r3, #0]
 800e4d8:	4770      	bx	lr
 800e4da:	bf00      	nop
 800e4dc:	20017460 	.word	0x20017460

0800e4e0 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 800e4e0:	4b01      	ldr	r3, [pc, #4]	; (800e4e8 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 800e4e2:	6818      	ldr	r0, [r3, #0]
 800e4e4:	4770      	bx	lr
 800e4e6:	bf00      	nop
 800e4e8:	20017464 	.word	0x20017464

0800e4ec <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 800e4ec:	b510      	push	{r4, lr}
 800e4ee:	6803      	ldr	r3, [r0, #0]
 800e4f0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e4f2:	460c      	mov	r4, r1
 800e4f4:	4798      	blx	r3
 800e4f6:	1b03      	subs	r3, r0, r4
 800e4f8:	4258      	negs	r0, r3
 800e4fa:	4158      	adcs	r0, r3
 800e4fc:	bd10      	pop	{r4, pc}
	...

0800e500 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 800e500:	4b01      	ldr	r3, [pc, #4]	; (800e508 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 800e502:	6019      	str	r1, [r3, #0]
 800e504:	4770      	bx	lr
 800e506:	bf00      	nop
 800e508:	20017468 	.word	0x20017468

0800e50c <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800e50c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e510:	4696      	mov	lr, r2
 800e512:	4605      	mov	r5, r0
 800e514:	4614      	mov	r4, r2
 800e516:	460e      	mov	r6, r1
 800e518:	461f      	mov	r7, r3
 800e51a:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800e51e:	b097      	sub	sp, #92	; 0x5c
 800e520:	f10d 0c1c 	add.w	ip, sp, #28
 800e524:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800e528:	f8de 3000 	ldr.w	r3, [lr]
 800e52c:	f8cc 3000 	str.w	r3, [ip]
 800e530:	f104 0e14 	add.w	lr, r4, #20
 800e534:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800e538:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 800e53c:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800e540:	f8de 3000 	ldr.w	r3, [lr]
 800e544:	f8cc 3000 	str.w	r3, [ip]
 800e548:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 800e54c:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800e550:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 800e554:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800e558:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 800e55c:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 800e560:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 800e564:	f8de 3000 	ldr.w	r3, [lr]
 800e568:	f8cc 3000 	str.w	r3, [ip]
 800e56c:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800e56e:	682b      	ldr	r3, [r5, #0]
 800e570:	9201      	str	r2, [sp, #4]
 800e572:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800e576:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800e578:	9200      	str	r2, [sp, #0]
 800e57a:	f8cd 8008 	str.w	r8, [sp, #8]
 800e57e:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
 800e582:	aa07      	add	r2, sp, #28
 800e584:	463b      	mov	r3, r7
 800e586:	4631      	mov	r1, r6
 800e588:	4628      	mov	r0, r5
 800e58a:	47d8      	blx	fp
 800e58c:	46a6      	mov	lr, r4
 800e58e:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800e592:	f10d 0c1c 	add.w	ip, sp, #28
 800e596:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800e59a:	f8de 3000 	ldr.w	r3, [lr]
 800e59e:	f8cc 3000 	str.w	r3, [ip]
 800e5a2:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 800e5a6:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800e5aa:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 800e5ae:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800e5b2:	343c      	adds	r4, #60	; 0x3c
 800e5b4:	f8de 3000 	ldr.w	r3, [lr]
 800e5b8:	f8cc 3000 	str.w	r3, [ip]
 800e5bc:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800e5be:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 800e5c2:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800e5c6:	6823      	ldr	r3, [r4, #0]
 800e5c8:	f8cc 3000 	str.w	r3, [ip]
 800e5cc:	682b      	ldr	r3, [r5, #0]
 800e5ce:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800e5d2:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800e5d4:	9201      	str	r2, [sp, #4]
 800e5d6:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800e5d8:	9200      	str	r2, [sp, #0]
 800e5da:	f8cd 8008 	str.w	r8, [sp, #8]
 800e5de:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 800e5e0:	aa07      	add	r2, sp, #28
 800e5e2:	463b      	mov	r3, r7
 800e5e4:	4631      	mov	r1, r6
 800e5e6:	4628      	mov	r0, r5
 800e5e8:	47a0      	blx	r4
 800e5ea:	b017      	add	sp, #92	; 0x5c
 800e5ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800e5f0 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 800e5f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e5f4:	b08d      	sub	sp, #52	; 0x34
 800e5f6:	4688      	mov	r8, r1
 800e5f8:	9916      	ldr	r1, [sp, #88]	; 0x58
 800e5fa:	f8d3 c000 	ldr.w	ip, [r3]
 800e5fe:	680f      	ldr	r7, [r1, #0]
 800e600:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 800e604:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 800e608:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 800e60c:	edd3 6a07 	vldr	s13, [r3, #28]
 800e610:	9918      	ldr	r1, [sp, #96]	; 0x60
 800e612:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 800e616:	f9b1 9000 	ldrsh.w	r9, [r1]
 800e61a:	f9ba 1000 	ldrsh.w	r1, [sl]
 800e61e:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 800e622:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 800e626:	eba7 070c 	sub.w	r7, r7, ip
 800e62a:	42bc      	cmp	r4, r7
 800e62c:	bfa8      	it	ge
 800e62e:	463c      	movge	r4, r7
 800e630:	ee07 4a90 	vmov	s15, r4
 800e634:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 800e638:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 800e63c:	ee25 4a04 	vmul.f32	s8, s10, s8
 800e640:	ee65 4a24 	vmul.f32	s9, s10, s9
 800e644:	ee25 5a27 	vmul.f32	s10, s10, s15
 800e648:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 800e64c:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800e650:	eb09 0e0c 	add.w	lr, r9, ip
 800e654:	4571      	cmp	r1, lr
 800e656:	ee71 0aa4 	vadd.f32	s1, s3, s9
 800e65a:	ee32 1a05 	vadd.f32	s2, s4, s10
 800e65e:	ee36 0a84 	vadd.f32	s0, s13, s8
 800e662:	ee61 1a87 	vmul.f32	s3, s3, s14
 800e666:	ee22 2a07 	vmul.f32	s4, s4, s14
 800e66a:	f340 808d 	ble.w	800e788 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 800e66e:	eba1 060e 	sub.w	r6, r1, lr
 800e672:	fb96 f5f4 	sdiv	r5, r6, r4
 800e676:	ee07 5a10 	vmov	s14, r5
 800e67a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800e67e:	2d00      	cmp	r5, #0
 800e680:	fb04 6615 	mls	r6, r4, r5, r6
 800e684:	eea7 0a04 	vfma.f32	s0, s14, s8
 800e688:	eee7 0a24 	vfma.f32	s1, s14, s9
 800e68c:	eea7 1a05 	vfma.f32	s2, s14, s10
 800e690:	dd13      	ble.n	800e6ba <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 800e692:	ee70 6a44 	vsub.f32	s13, s0, s8
 800e696:	ee70 1ae4 	vsub.f32	s3, s1, s9
 800e69a:	eef5 6a40 	vcmp.f32	s13, #0.0
 800e69e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e6a2:	bf18      	it	ne
 800e6a4:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 800e6a8:	ee31 2a45 	vsub.f32	s4, s2, s10
 800e6ac:	bf08      	it	eq
 800e6ae:	eeb0 7a67 	vmoveq.f32	s14, s15
 800e6b2:	ee61 1a87 	vmul.f32	s3, s3, s14
 800e6b6:	ee22 2a07 	vmul.f32	s4, s4, s14
 800e6ba:	fb05 f204 	mul.w	r2, r5, r4
 800e6be:	1abf      	subs	r7, r7, r2
 800e6c0:	4494      	add	ip, r2
 800e6c2:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 800e6c6:	4411      	add	r1, r2
 800e6c8:	eb09 020c 	add.w	r2, r9, ip
 800e6cc:	443a      	add	r2, r7
 800e6ce:	b209      	sxth	r1, r1
 800e6d0:	428a      	cmp	r2, r1
 800e6d2:	bfc4      	itt	gt
 800e6d4:	eba1 0209 	subgt.w	r2, r1, r9
 800e6d8:	eba2 070c 	subgt.w	r7, r2, ip
 800e6dc:	2f00      	cmp	r7, #0
 800e6de:	dd50      	ble.n	800e782 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 800e6e0:	fb97 f1f4 	sdiv	r1, r7, r4
 800e6e4:	fb04 7211 	mls	r2, r4, r1, r7
 800e6e8:	b90a      	cbnz	r2, 800e6ee <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 800e6ea:	3901      	subs	r1, #1
 800e6ec:	4622      	mov	r2, r4
 800e6ee:	eec7 3a80 	vdiv.f32	s7, s15, s0
 800e6f2:	6840      	ldr	r0, [r0, #4]
 800e6f4:	900b      	str	r0, [sp, #44]	; 0x2c
 800e6f6:	f8d0 a000 	ldr.w	sl, [r0]
 800e6fa:	9817      	ldr	r0, [sp, #92]	; 0x5c
 800e6fc:	9008      	str	r0, [sp, #32]
 800e6fe:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 800e702:	9818      	ldr	r0, [sp, #96]	; 0x60
 800e704:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 800e708:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 800e70c:	695b      	ldr	r3, [r3, #20]
 800e70e:	980b      	ldr	r0, [sp, #44]	; 0x2c
 800e710:	445b      	add	r3, fp
 800e712:	eef0 6a42 	vmov.f32	s13, s4
 800e716:	ee60 2aa3 	vmul.f32	s5, s1, s7
 800e71a:	ee21 3a23 	vmul.f32	s6, s2, s7
 800e71e:	ee72 7ae1 	vsub.f32	s15, s5, s3
 800e722:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800e726:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800e72a:	9307      	str	r3, [sp, #28]
 800e72c:	ee17 7a90 	vmov	r7, s15
 800e730:	ee73 7a42 	vsub.f32	s15, s6, s4
 800e734:	eeb0 7a61 	vmov.f32	s14, s3
 800e738:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800e73c:	ee16 3a90 	vmov	r3, s13
 800e740:	fb97 f7f4 	sdiv	r7, r7, r4
 800e744:	ee17 ca90 	vmov	ip, s15
 800e748:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 800e74c:	fb9c fcf4 	sdiv	ip, ip, r4
 800e750:	fb0c 3306 	mla	r3, ip, r6, r3
 800e754:	9302      	str	r3, [sp, #8]
 800e756:	ee17 3a10 	vmov	r3, s14
 800e75a:	44b6      	add	lr, r6
 800e75c:	fb04 e505 	mla	r5, r4, r5, lr
 800e760:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 800e764:	fb07 3706 	mla	r7, r7, r6, r3
 800e768:	e9cd 8505 	strd	r8, r5, [sp, #20]
 800e76c:	e9cd 4700 	strd	r4, r7, [sp]
 800e770:	2900      	cmp	r1, #0
 800e772:	bfcc      	ite	gt
 800e774:	46a1      	movgt	r9, r4
 800e776:	4691      	movle	r9, r2
 800e778:	eba9 0306 	sub.w	r3, r9, r6
 800e77c:	f8da 4008 	ldr.w	r4, [sl, #8]
 800e780:	47a0      	blx	r4
 800e782:	b00d      	add	sp, #52	; 0x34
 800e784:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e788:	2500      	movs	r5, #0
 800e78a:	462e      	mov	r6, r5
 800e78c:	e799      	b.n	800e6c2 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

0800e790 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800e790:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e794:	b0db      	sub	sp, #364	; 0x16c
 800e796:	461d      	mov	r5, r3
 800e798:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 800e79c:	930a      	str	r3, [sp, #40]	; 0x28
 800e79e:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 800e7a2:	930b      	str	r3, [sp, #44]	; 0x2c
 800e7a4:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 800e7a8:	9310      	str	r3, [sp, #64]	; 0x40
 800e7aa:	6803      	ldr	r3, [r0, #0]
 800e7ac:	910f      	str	r1, [sp, #60]	; 0x3c
 800e7ae:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 800e7b0:	9009      	str	r0, [sp, #36]	; 0x24
 800e7b2:	4614      	mov	r4, r2
 800e7b4:	4629      	mov	r1, r5
 800e7b6:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 800e7ba:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 800e7be:	47b8      	blx	r7
 800e7c0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800e7c2:	6058      	str	r0, [r3, #4]
 800e7c4:	2800      	cmp	r0, #0
 800e7c6:	f000 83a1 	beq.w	800ef0c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e7ca:	682b      	ldr	r3, [r5, #0]
 800e7cc:	9314      	str	r3, [sp, #80]	; 0x50
 800e7ce:	686b      	ldr	r3, [r5, #4]
 800e7d0:	9315      	str	r3, [sp, #84]	; 0x54
 800e7d2:	4bc4      	ldr	r3, [pc, #784]	; (800eae4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 800e7d4:	ed94 7a02 	vldr	s14, [r4, #8]
 800e7d8:	7819      	ldrb	r1, [r3, #0]
 800e7da:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 800e7de:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 800e7e2:	2900      	cmp	r1, #0
 800e7e4:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800e7e8:	bf16      	itet	ne
 800e7ea:	4619      	movne	r1, r3
 800e7ec:	4611      	moveq	r1, r2
 800e7ee:	4613      	movne	r3, r2
 800e7f0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e7f4:	9116      	str	r1, [sp, #88]	; 0x58
 800e7f6:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 800e7fa:	f240 8387 	bls.w	800ef0c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e7fe:	ed94 7a07 	vldr	s14, [r4, #28]
 800e802:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800e806:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e80a:	f240 837f 	bls.w	800ef0c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e80e:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 800e812:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800e816:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e81a:	f240 8377 	bls.w	800ef0c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e81e:	6822      	ldr	r2, [r4, #0]
 800e820:	4bb1      	ldr	r3, [pc, #708]	; (800eae8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 800e822:	429a      	cmp	r2, r3
 800e824:	f2c0 8372 	blt.w	800ef0c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e828:	49b0      	ldr	r1, [pc, #704]	; (800eaec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 800e82a:	6963      	ldr	r3, [r4, #20]
 800e82c:	428a      	cmp	r2, r1
 800e82e:	f300 836d 	bgt.w	800ef0c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e832:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 800e836:	48ae      	ldr	r0, [pc, #696]	; (800eaf0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 800e838:	33ff      	adds	r3, #255	; 0xff
 800e83a:	4283      	cmp	r3, r0
 800e83c:	f200 8366 	bhi.w	800ef0c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e840:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800e842:	4dac      	ldr	r5, [pc, #688]	; (800eaf4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 800e844:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 800e848:	33ff      	adds	r3, #255	; 0xff
 800e84a:	42ab      	cmp	r3, r5
 800e84c:	f200 835e 	bhi.w	800ef0c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e850:	6862      	ldr	r2, [r4, #4]
 800e852:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 800e856:	33ff      	adds	r3, #255	; 0xff
 800e858:	4283      	cmp	r3, r0
 800e85a:	f200 8357 	bhi.w	800ef0c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e85e:	69a1      	ldr	r1, [r4, #24]
 800e860:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 800e864:	33ff      	adds	r3, #255	; 0xff
 800e866:	4283      	cmp	r3, r0
 800e868:	f200 8350 	bhi.w	800ef0c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e86c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800e86e:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 800e872:	30ff      	adds	r0, #255	; 0xff
 800e874:	42a8      	cmp	r0, r5
 800e876:	f200 8349 	bhi.w	800ef0c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e87a:	428a      	cmp	r2, r1
 800e87c:	f280 8110 	bge.w	800eaa0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 800e880:	429a      	cmp	r2, r3
 800e882:	f300 8119 	bgt.w	800eab8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 800e886:	4299      	cmp	r1, r3
 800e888:	f280 811d 	bge.w	800eac6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 800e88c:	2502      	movs	r5, #2
 800e88e:	2701      	movs	r7, #1
 800e890:	46a9      	mov	r9, r5
 800e892:	46b8      	mov	r8, r7
 800e894:	f04f 0a00 	mov.w	sl, #0
 800e898:	4621      	mov	r1, r4
 800e89a:	a849      	add	r0, sp, #292	; 0x124
 800e89c:	f003 fcfe 	bl	801229c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 800e8a0:	4622      	mov	r2, r4
 800e8a2:	4653      	mov	r3, sl
 800e8a4:	a949      	add	r1, sp, #292	; 0x124
 800e8a6:	f8cd 9000 	str.w	r9, [sp]
 800e8aa:	a819      	add	r0, sp, #100	; 0x64
 800e8ac:	f003 fe26 	bl	80124fc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800e8b0:	4622      	mov	r2, r4
 800e8b2:	4653      	mov	r3, sl
 800e8b4:	a949      	add	r1, sp, #292	; 0x124
 800e8b6:	f8cd 8000 	str.w	r8, [sp]
 800e8ba:	a829      	add	r0, sp, #164	; 0xa4
 800e8bc:	f003 fe1e 	bl	80124fc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800e8c0:	4643      	mov	r3, r8
 800e8c2:	4622      	mov	r2, r4
 800e8c4:	a949      	add	r1, sp, #292	; 0x124
 800e8c6:	f8cd 9000 	str.w	r9, [sp]
 800e8ca:	a839      	add	r0, sp, #228	; 0xe4
 800e8cc:	f003 fe16 	bl	80124fc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800e8d0:	42af      	cmp	r7, r5
 800e8d2:	bfb5      	itete	lt
 800e8d4:	2300      	movlt	r3, #0
 800e8d6:	2301      	movge	r3, #1
 800e8d8:	930e      	strlt	r3, [sp, #56]	; 0x38
 800e8da:	930e      	strge	r3, [sp, #56]	; 0x38
 800e8dc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800e8de:	e893 0003 	ldmia.w	r3, {r0, r1}
 800e8e2:	af12      	add	r7, sp, #72	; 0x48
 800e8e4:	bfb9      	ittee	lt
 800e8e6:	ad29      	addlt	r5, sp, #164	; 0xa4
 800e8e8:	ac19      	addlt	r4, sp, #100	; 0x64
 800e8ea:	ad19      	addge	r5, sp, #100	; 0x64
 800e8ec:	ac29      	addge	r4, sp, #164	; 0xa4
 800e8ee:	e887 0003 	stmia.w	r7, {r0, r1}
 800e8f2:	b928      	cbnz	r0, 800e900 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 800e8f4:	4b80      	ldr	r3, [pc, #512]	; (800eaf8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 800e8f6:	6818      	ldr	r0, [r3, #0]
 800e8f8:	6803      	ldr	r3, [r0, #0]
 800e8fa:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800e8fc:	4798      	blx	r3
 800e8fe:	6038      	str	r0, [r7, #0]
 800e900:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800e902:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800e906:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800e90a:	930c      	str	r3, [sp, #48]	; 0x30
 800e90c:	990c      	ldr	r1, [sp, #48]	; 0x30
 800e90e:	6963      	ldr	r3, [r4, #20]
 800e910:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 800e912:	440b      	add	r3, r1
 800e914:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800e918:	4408      	add	r0, r1
 800e91a:	b200      	sxth	r0, r0
 800e91c:	4283      	cmp	r3, r0
 800e91e:	900d      	str	r0, [sp, #52]	; 0x34
 800e920:	f280 80dd 	bge.w	800eade <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 800e924:	428b      	cmp	r3, r1
 800e926:	da08      	bge.n	800e93a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800e928:	2a00      	cmp	r2, #0
 800e92a:	dd06      	ble.n	800e93a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800e92c:	1acb      	subs	r3, r1, r3
 800e92e:	429a      	cmp	r2, r3
 800e930:	f2c0 80e4 	blt.w	800eafc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 800e934:	2b00      	cmp	r3, #0
 800e936:	f300 80e2 	bgt.w	800eafe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 800e93a:	6967      	ldr	r7, [r4, #20]
 800e93c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800e93e:	443b      	add	r3, r7
 800e940:	461f      	mov	r7, r3
 800e942:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800e944:	1bdf      	subs	r7, r3, r7
 800e946:	4297      	cmp	r7, r2
 800e948:	bfa8      	it	ge
 800e94a:	4617      	movge	r7, r2
 800e94c:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 800e950:	2f00      	cmp	r7, #0
 800e952:	f340 8166 	ble.w	800ec22 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 800e956:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800e958:	6829      	ldr	r1, [r5, #0]
 800e95a:	f9b3 2000 	ldrsh.w	r2, [r3]
 800e95e:	f9bb 3000 	ldrsh.w	r3, [fp]
 800e962:	6820      	ldr	r0, [r4, #0]
 800e964:	4411      	add	r1, r2
 800e966:	4299      	cmp	r1, r3
 800e968:	dd1a      	ble.n	800e9a0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800e96a:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800e96e:	440b      	add	r3, r1
 800e970:	4402      	add	r2, r0
 800e972:	b21b      	sxth	r3, r3
 800e974:	429a      	cmp	r2, r3
 800e976:	dc13      	bgt.n	800e9a0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800e978:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800e97a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800e97c:	681b      	ldr	r3, [r3, #0]
 800e97e:	9206      	str	r2, [sp, #24]
 800e980:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800e982:	9205      	str	r2, [sp, #20]
 800e984:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800e986:	9500      	str	r5, [sp, #0]
 800e988:	e9cd b203 	strd	fp, r2, [sp, #12]
 800e98c:	9a64      	ldr	r2, [sp, #400]	; 0x190
 800e98e:	9809      	ldr	r0, [sp, #36]	; 0x24
 800e990:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800e994:	a912      	add	r1, sp, #72	; 0x48
 800e996:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 800e99a:	aa49      	add	r2, sp, #292	; 0x124
 800e99c:	4623      	mov	r3, r4
 800e99e:	47c8      	blx	r9
 800e9a0:	e9d4 2300 	ldrd	r2, r3, [r4]
 800e9a4:	441a      	add	r2, r3
 800e9a6:	6963      	ldr	r3, [r4, #20]
 800e9a8:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 800e9ac:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 800e9b0:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 800e9b4:	68a1      	ldr	r1, [r4, #8]
 800e9b6:	ed94 6a08 	vldr	s12, [r4, #32]
 800e9ba:	6022      	str	r2, [r4, #0]
 800e9bc:	3301      	adds	r3, #1
 800e9be:	6163      	str	r3, [r4, #20]
 800e9c0:	69a3      	ldr	r3, [r4, #24]
 800e9c2:	ee37 7a27 	vadd.f32	s14, s14, s15
 800e9c6:	3b01      	subs	r3, #1
 800e9c8:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 800e9cc:	61a3      	str	r3, [r4, #24]
 800e9ce:	6923      	ldr	r3, [r4, #16]
 800e9d0:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800e9d4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800e9d8:	edd4 6a07 	vldr	s13, [r4, #28]
 800e9dc:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800e9e0:	440b      	add	r3, r1
 800e9e2:	68e1      	ldr	r1, [r4, #12]
 800e9e4:	6123      	str	r3, [r4, #16]
 800e9e6:	ee76 6a86 	vadd.f32	s13, s13, s12
 800e9ea:	428b      	cmp	r3, r1
 800e9ec:	edc4 6a07 	vstr	s13, [r4, #28]
 800e9f0:	db15      	blt.n	800ea1e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 800e9f2:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 800e9f6:	ee76 6a26 	vadd.f32	s13, s12, s13
 800e9fa:	3201      	adds	r2, #1
 800e9fc:	edc4 6a07 	vstr	s13, [r4, #28]
 800ea00:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 800ea04:	6022      	str	r2, [r4, #0]
 800ea06:	ee36 7a87 	vadd.f32	s14, s13, s14
 800ea0a:	1a5b      	subs	r3, r3, r1
 800ea0c:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800ea10:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 800ea14:	6123      	str	r3, [r4, #16]
 800ea16:	ee77 7a27 	vadd.f32	s15, s14, s15
 800ea1a:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800ea1e:	e9d5 2300 	ldrd	r2, r3, [r5]
 800ea22:	441a      	add	r2, r3
 800ea24:	696b      	ldr	r3, [r5, #20]
 800ea26:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 800ea2a:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 800ea2e:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 800ea32:	68a9      	ldr	r1, [r5, #8]
 800ea34:	ed95 6a08 	vldr	s12, [r5, #32]
 800ea38:	602a      	str	r2, [r5, #0]
 800ea3a:	3301      	adds	r3, #1
 800ea3c:	616b      	str	r3, [r5, #20]
 800ea3e:	69ab      	ldr	r3, [r5, #24]
 800ea40:	ee37 7a27 	vadd.f32	s14, s14, s15
 800ea44:	3b01      	subs	r3, #1
 800ea46:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 800ea4a:	61ab      	str	r3, [r5, #24]
 800ea4c:	692b      	ldr	r3, [r5, #16]
 800ea4e:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800ea52:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800ea56:	edd5 6a07 	vldr	s13, [r5, #28]
 800ea5a:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800ea5e:	440b      	add	r3, r1
 800ea60:	68e9      	ldr	r1, [r5, #12]
 800ea62:	612b      	str	r3, [r5, #16]
 800ea64:	ee76 6a86 	vadd.f32	s13, s13, s12
 800ea68:	428b      	cmp	r3, r1
 800ea6a:	edc5 6a07 	vstr	s13, [r5, #28]
 800ea6e:	db15      	blt.n	800ea9c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 800ea70:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 800ea74:	ee76 6a26 	vadd.f32	s13, s12, s13
 800ea78:	3201      	adds	r2, #1
 800ea7a:	edc5 6a07 	vstr	s13, [r5, #28]
 800ea7e:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 800ea82:	602a      	str	r2, [r5, #0]
 800ea84:	ee36 7a87 	vadd.f32	s14, s13, s14
 800ea88:	1a5b      	subs	r3, r3, r1
 800ea8a:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800ea8e:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 800ea92:	612b      	str	r3, [r5, #16]
 800ea94:	ee77 7a27 	vadd.f32	s15, s14, s15
 800ea98:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800ea9c:	3f01      	subs	r7, #1
 800ea9e:	e757      	b.n	800e950 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 800eaa0:	4299      	cmp	r1, r3
 800eaa2:	dc13      	bgt.n	800eacc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 800eaa4:	429a      	cmp	r2, r3
 800eaa6:	da14      	bge.n	800ead2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 800eaa8:	2502      	movs	r5, #2
 800eaaa:	2703      	movs	r7, #3
 800eaac:	46a9      	mov	r9, r5
 800eaae:	f04f 0800 	mov.w	r8, #0
 800eab2:	f04f 0a01 	mov.w	sl, #1
 800eab6:	e6ef      	b.n	800e898 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800eab8:	2501      	movs	r5, #1
 800eaba:	2700      	movs	r7, #0
 800eabc:	46a9      	mov	r9, r5
 800eabe:	46b8      	mov	r8, r7
 800eac0:	f04f 0a02 	mov.w	sl, #2
 800eac4:	e6e8      	b.n	800e898 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800eac6:	2501      	movs	r5, #1
 800eac8:	2702      	movs	r7, #2
 800eaca:	e6e1      	b.n	800e890 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 800eacc:	2500      	movs	r5, #0
 800eace:	2701      	movs	r7, #1
 800ead0:	e7f4      	b.n	800eabc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 800ead2:	2702      	movs	r7, #2
 800ead4:	2503      	movs	r5, #3
 800ead6:	f04f 0900 	mov.w	r9, #0
 800eada:	46b8      	mov	r8, r7
 800eadc:	e7e9      	b.n	800eab2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 800eade:	4613      	mov	r3, r2
 800eae0:	e728      	b.n	800e934 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 800eae2:	bf00      	nop
 800eae4:	20017450 	.word	0x20017450
 800eae8:	fffd8f01 	.word	0xfffd8f01
 800eaec:	00027100 	.word	0x00027100
 800eaf0:	0004e1ff 	.word	0x0004e1ff
 800eaf4:	0004e1fe 	.word	0x0004e1fe
 800eaf8:	20017458 	.word	0x20017458
 800eafc:	4613      	mov	r3, r2
 800eafe:	992b      	ldr	r1, [sp, #172]	; 0xac
 800eb00:	9111      	str	r1, [sp, #68]	; 0x44
 800eb02:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 800eb06:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 800eb0a:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 800eb0c:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 800eb10:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 800eb14:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 800eb18:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 800eb1c:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 800eb20:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 800eb24:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 800eb28:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 800eb2c:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 800eb30:	469e      	mov	lr, r3
 800eb32:	469c      	mov	ip, r3
 800eb34:	f04f 0900 	mov.w	r9, #0
 800eb38:	f1bc 0f00 	cmp.w	ip, #0
 800eb3c:	d147      	bne.n	800ebce <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 800eb3e:	eb03 0c07 	add.w	ip, r3, r7
 800eb42:	1ad7      	subs	r7, r2, r3
 800eb44:	f1b9 0f00 	cmp.w	r9, #0
 800eb48:	d009      	beq.n	800eb5e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 800eb4a:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 800eb4e:	9029      	str	r0, [sp, #164]	; 0xa4
 800eb50:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 800eb54:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 800eb58:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 800eb5c:	912d      	str	r1, [sp, #180]	; 0xb4
 800eb5e:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800eb60:	9111      	str	r1, [sp, #68]	; 0x44
 800eb62:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 800eb66:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 800eb6a:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 800eb6e:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 800eb72:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 800eb76:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 800eb7a:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 800eb7e:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 800eb82:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 800eb86:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 800eb8a:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 800eb8e:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 800eb92:	f04f 0800 	mov.w	r8, #0
 800eb96:	f1be 0f00 	cmp.w	lr, #0
 800eb9a:	d031      	beq.n	800ec00 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 800eb9c:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800eb9e:	4431      	add	r1, r6
 800eba0:	4549      	cmp	r1, r9
 800eba2:	4450      	add	r0, sl
 800eba4:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800eba8:	ee37 7a04 	vadd.f32	s14, s14, s8
 800ebac:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800ebb0:	db08      	blt.n	800ebc4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 800ebb2:	ee77 7a85 	vadd.f32	s15, s15, s10
 800ebb6:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800ebba:	ee37 7a06 	vadd.f32	s14, s14, s12
 800ebbe:	3001      	adds	r0, #1
 800ebc0:	eba1 0109 	sub.w	r1, r1, r9
 800ebc4:	f10e 3eff 	add.w	lr, lr, #4294967295
 800ebc8:	f04f 0801 	mov.w	r8, #1
 800ebcc:	e7e3      	b.n	800eb96 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 800ebce:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800ebd0:	4431      	add	r1, r6
 800ebd2:	4541      	cmp	r1, r8
 800ebd4:	4450      	add	r0, sl
 800ebd6:	ee37 7a24 	vadd.f32	s14, s14, s9
 800ebda:	ee77 7a84 	vadd.f32	s15, s15, s8
 800ebde:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800ebe2:	db08      	blt.n	800ebf6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 800ebe4:	ee76 6a85 	vadd.f32	s13, s13, s10
 800ebe8:	ee37 7a25 	vadd.f32	s14, s14, s11
 800ebec:	ee77 7a86 	vadd.f32	s15, s15, s12
 800ebf0:	3001      	adds	r0, #1
 800ebf2:	eba1 0108 	sub.w	r1, r1, r8
 800ebf6:	f10c 3cff 	add.w	ip, ip, #4294967295
 800ebfa:	f04f 0901 	mov.w	r9, #1
 800ebfe:	e79b      	b.n	800eb38 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 800ec00:	449c      	add	ip, r3
 800ec02:	1aff      	subs	r7, r7, r3
 800ec04:	f1b8 0f00 	cmp.w	r8, #0
 800ec08:	d009      	beq.n	800ec1e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 800ec0a:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 800ec0e:	9019      	str	r0, [sp, #100]	; 0x64
 800ec10:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 800ec14:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 800ec18:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 800ec1c:	911d      	str	r1, [sp, #116]	; 0x74
 800ec1e:	1ad2      	subs	r2, r2, r3
 800ec20:	e68b      	b.n	800e93a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800ec22:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800ec24:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 800ec26:	2b00      	cmp	r3, #0
 800ec28:	f000 80d1 	beq.w	800edce <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 800ec2c:	ad19      	add	r5, sp, #100	; 0x64
 800ec2e:	ac39      	add	r4, sp, #228	; 0xe4
 800ec30:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800ec32:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800ec36:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800ec3a:	930c      	str	r3, [sp, #48]	; 0x30
 800ec3c:	990c      	ldr	r1, [sp, #48]	; 0x30
 800ec3e:	6963      	ldr	r3, [r4, #20]
 800ec40:	440b      	add	r3, r1
 800ec42:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800ec46:	4408      	add	r0, r1
 800ec48:	b200      	sxth	r0, r0
 800ec4a:	4283      	cmp	r3, r0
 800ec4c:	900d      	str	r0, [sp, #52]	; 0x34
 800ec4e:	f280 80c1 	bge.w	800edd4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 800ec52:	428b      	cmp	r3, r1
 800ec54:	da08      	bge.n	800ec68 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800ec56:	2a00      	cmp	r2, #0
 800ec58:	dd06      	ble.n	800ec68 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800ec5a:	1acb      	subs	r3, r1, r3
 800ec5c:	429a      	cmp	r2, r3
 800ec5e:	f2c0 80bb 	blt.w	800edd8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 800ec62:	2b00      	cmp	r3, #0
 800ec64:	f300 80b9 	bgt.w	800edda <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 800ec68:	6967      	ldr	r7, [r4, #20]
 800ec6a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800ec6c:	443b      	add	r3, r7
 800ec6e:	461f      	mov	r7, r3
 800ec70:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800ec72:	1bdf      	subs	r7, r3, r7
 800ec74:	4297      	cmp	r7, r2
 800ec76:	bfa8      	it	ge
 800ec78:	4617      	movge	r7, r2
 800ec7a:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 800ec7e:	2f00      	cmp	r7, #0
 800ec80:	f340 813c 	ble.w	800eefc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 800ec84:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800ec86:	6829      	ldr	r1, [r5, #0]
 800ec88:	f9b3 2000 	ldrsh.w	r2, [r3]
 800ec8c:	f9bb 3000 	ldrsh.w	r3, [fp]
 800ec90:	6820      	ldr	r0, [r4, #0]
 800ec92:	4411      	add	r1, r2
 800ec94:	4299      	cmp	r1, r3
 800ec96:	dd1a      	ble.n	800ecce <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800ec98:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800ec9c:	440b      	add	r3, r1
 800ec9e:	4402      	add	r2, r0
 800eca0:	b21b      	sxth	r3, r3
 800eca2:	429a      	cmp	r2, r3
 800eca4:	dc13      	bgt.n	800ecce <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800eca6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800eca8:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800ecaa:	681b      	ldr	r3, [r3, #0]
 800ecac:	9206      	str	r2, [sp, #24]
 800ecae:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800ecb0:	9205      	str	r2, [sp, #20]
 800ecb2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800ecb4:	9500      	str	r5, [sp, #0]
 800ecb6:	e9cd b203 	strd	fp, r2, [sp, #12]
 800ecba:	9a64      	ldr	r2, [sp, #400]	; 0x190
 800ecbc:	9809      	ldr	r0, [sp, #36]	; 0x24
 800ecbe:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800ecc2:	a912      	add	r1, sp, #72	; 0x48
 800ecc4:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 800ecc8:	aa49      	add	r2, sp, #292	; 0x124
 800ecca:	4623      	mov	r3, r4
 800eccc:	47c8      	blx	r9
 800ecce:	e9d4 2300 	ldrd	r2, r3, [r4]
 800ecd2:	441a      	add	r2, r3
 800ecd4:	6963      	ldr	r3, [r4, #20]
 800ecd6:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 800ecda:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 800ecde:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 800ece2:	68a1      	ldr	r1, [r4, #8]
 800ece4:	ed94 6a08 	vldr	s12, [r4, #32]
 800ece8:	6022      	str	r2, [r4, #0]
 800ecea:	3301      	adds	r3, #1
 800ecec:	6163      	str	r3, [r4, #20]
 800ecee:	69a3      	ldr	r3, [r4, #24]
 800ecf0:	ee37 7a27 	vadd.f32	s14, s14, s15
 800ecf4:	3b01      	subs	r3, #1
 800ecf6:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 800ecfa:	61a3      	str	r3, [r4, #24]
 800ecfc:	6923      	ldr	r3, [r4, #16]
 800ecfe:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800ed02:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800ed06:	edd4 6a07 	vldr	s13, [r4, #28]
 800ed0a:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800ed0e:	440b      	add	r3, r1
 800ed10:	68e1      	ldr	r1, [r4, #12]
 800ed12:	6123      	str	r3, [r4, #16]
 800ed14:	ee76 6a86 	vadd.f32	s13, s13, s12
 800ed18:	428b      	cmp	r3, r1
 800ed1a:	edc4 6a07 	vstr	s13, [r4, #28]
 800ed1e:	db15      	blt.n	800ed4c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 800ed20:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 800ed24:	ee76 6a26 	vadd.f32	s13, s12, s13
 800ed28:	3201      	adds	r2, #1
 800ed2a:	edc4 6a07 	vstr	s13, [r4, #28]
 800ed2e:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 800ed32:	6022      	str	r2, [r4, #0]
 800ed34:	ee36 7a87 	vadd.f32	s14, s13, s14
 800ed38:	1a5b      	subs	r3, r3, r1
 800ed3a:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800ed3e:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 800ed42:	6123      	str	r3, [r4, #16]
 800ed44:	ee77 7a27 	vadd.f32	s15, s14, s15
 800ed48:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800ed4c:	e9d5 2300 	ldrd	r2, r3, [r5]
 800ed50:	441a      	add	r2, r3
 800ed52:	696b      	ldr	r3, [r5, #20]
 800ed54:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 800ed58:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 800ed5c:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 800ed60:	68a9      	ldr	r1, [r5, #8]
 800ed62:	ed95 6a08 	vldr	s12, [r5, #32]
 800ed66:	602a      	str	r2, [r5, #0]
 800ed68:	3301      	adds	r3, #1
 800ed6a:	616b      	str	r3, [r5, #20]
 800ed6c:	69ab      	ldr	r3, [r5, #24]
 800ed6e:	ee37 7a27 	vadd.f32	s14, s14, s15
 800ed72:	3b01      	subs	r3, #1
 800ed74:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 800ed78:	61ab      	str	r3, [r5, #24]
 800ed7a:	692b      	ldr	r3, [r5, #16]
 800ed7c:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800ed80:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800ed84:	edd5 6a07 	vldr	s13, [r5, #28]
 800ed88:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800ed8c:	440b      	add	r3, r1
 800ed8e:	68e9      	ldr	r1, [r5, #12]
 800ed90:	612b      	str	r3, [r5, #16]
 800ed92:	ee76 6a86 	vadd.f32	s13, s13, s12
 800ed96:	428b      	cmp	r3, r1
 800ed98:	edc5 6a07 	vstr	s13, [r5, #28]
 800ed9c:	db15      	blt.n	800edca <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 800ed9e:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 800eda2:	ee76 6a26 	vadd.f32	s13, s12, s13
 800eda6:	3201      	adds	r2, #1
 800eda8:	edc5 6a07 	vstr	s13, [r5, #28]
 800edac:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 800edb0:	602a      	str	r2, [r5, #0]
 800edb2:	ee36 7a87 	vadd.f32	s14, s13, s14
 800edb6:	1a5b      	subs	r3, r3, r1
 800edb8:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800edbc:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 800edc0:	612b      	str	r3, [r5, #16]
 800edc2:	ee77 7a27 	vadd.f32	s15, s14, s15
 800edc6:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800edca:	3f01      	subs	r7, #1
 800edcc:	e757      	b.n	800ec7e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 800edce:	ad39      	add	r5, sp, #228	; 0xe4
 800edd0:	ac19      	add	r4, sp, #100	; 0x64
 800edd2:	e72d      	b.n	800ec30 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 800edd4:	4613      	mov	r3, r2
 800edd6:	e744      	b.n	800ec62 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 800edd8:	4613      	mov	r3, r2
 800edda:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 800edde:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 800ede0:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 800ede4:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 800ede8:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 800edec:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 800edf0:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 800edf4:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 800edf8:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 800edfc:	993d      	ldr	r1, [sp, #244]	; 0xf4
 800edfe:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 800ee02:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 800ee06:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 800ee0a:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 800ee0e:	960e      	str	r6, [sp, #56]	; 0x38
 800ee10:	469e      	mov	lr, r3
 800ee12:	461f      	mov	r7, r3
 800ee14:	f04f 0900 	mov.w	r9, #0
 800ee18:	2f00      	cmp	r7, #0
 800ee1a:	d146      	bne.n	800eeaa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 800ee1c:	449c      	add	ip, r3
 800ee1e:	1ad7      	subs	r7, r2, r3
 800ee20:	f1b9 0f00 	cmp.w	r9, #0
 800ee24:	d009      	beq.n	800ee3a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 800ee26:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 800ee2a:	9039      	str	r0, [sp, #228]	; 0xe4
 800ee2c:	913d      	str	r1, [sp, #244]	; 0xf4
 800ee2e:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 800ee32:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 800ee36:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 800ee3a:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800ee3c:	910e      	str	r1, [sp, #56]	; 0x38
 800ee3e:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 800ee42:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 800ee46:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 800ee4a:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 800ee4e:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 800ee52:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 800ee56:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 800ee5a:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 800ee5e:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 800ee62:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 800ee66:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 800ee6a:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 800ee6e:	f04f 0800 	mov.w	r8, #0
 800ee72:	f1be 0f00 	cmp.w	lr, #0
 800ee76:	d030      	beq.n	800eeda <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 800ee78:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800ee7a:	4431      	add	r1, r6
 800ee7c:	4549      	cmp	r1, r9
 800ee7e:	4450      	add	r0, sl
 800ee80:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800ee84:	ee37 7a04 	vadd.f32	s14, s14, s8
 800ee88:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800ee8c:	db08      	blt.n	800eea0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 800ee8e:	ee77 7a85 	vadd.f32	s15, s15, s10
 800ee92:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800ee96:	ee37 7a06 	vadd.f32	s14, s14, s12
 800ee9a:	3001      	adds	r0, #1
 800ee9c:	eba1 0109 	sub.w	r1, r1, r9
 800eea0:	f10e 3eff 	add.w	lr, lr, #4294967295
 800eea4:	f04f 0801 	mov.w	r8, #1
 800eea8:	e7e3      	b.n	800ee72 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 800eeaa:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800eeac:	4431      	add	r1, r6
 800eeae:	4541      	cmp	r1, r8
 800eeb0:	4450      	add	r0, sl
 800eeb2:	ee37 7a24 	vadd.f32	s14, s14, s9
 800eeb6:	ee77 7a84 	vadd.f32	s15, s15, s8
 800eeba:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800eebe:	db08      	blt.n	800eed2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 800eec0:	ee76 6a85 	vadd.f32	s13, s13, s10
 800eec4:	ee37 7a25 	vadd.f32	s14, s14, s11
 800eec8:	ee77 7a86 	vadd.f32	s15, s15, s12
 800eecc:	3001      	adds	r0, #1
 800eece:	eba1 0108 	sub.w	r1, r1, r8
 800eed2:	3f01      	subs	r7, #1
 800eed4:	f04f 0901 	mov.w	r9, #1
 800eed8:	e79e      	b.n	800ee18 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 800eeda:	449c      	add	ip, r3
 800eedc:	1aff      	subs	r7, r7, r3
 800eede:	f1b8 0f00 	cmp.w	r8, #0
 800eee2:	d009      	beq.n	800eef8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 800eee4:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 800eee8:	9019      	str	r0, [sp, #100]	; 0x64
 800eeea:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 800eeee:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 800eef2:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 800eef6:	911d      	str	r1, [sp, #116]	; 0x74
 800eef8:	1ad2      	subs	r2, r2, r3
 800eefa:	e6b5      	b.n	800ec68 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800eefc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800eefe:	681b      	ldr	r3, [r3, #0]
 800ef00:	b923      	cbnz	r3, 800ef0c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ef02:	4b04      	ldr	r3, [pc, #16]	; (800ef14 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 800ef04:	6818      	ldr	r0, [r3, #0]
 800ef06:	6803      	ldr	r3, [r0, #0]
 800ef08:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ef0a:	4798      	blx	r3
 800ef0c:	b05b      	add	sp, #364	; 0x16c
 800ef0e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ef12:	bf00      	nop
 800ef14:	20017458 	.word	0x20017458

0800ef18 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>:
 800ef18:	b570      	push	{r4, r5, r6, lr}
 800ef1a:	4604      	mov	r4, r0
 800ef1c:	f89d 6014 	ldrb.w	r6, [sp, #20]
 800ef20:	9804      	ldr	r0, [sp, #16]
 800ef22:	6061      	str	r1, [r4, #4]
 800ef24:	2500      	movs	r5, #0
 800ef26:	8025      	strh	r5, [r4, #0]
 800ef28:	7223      	strb	r3, [r4, #8]
 800ef2a:	7266      	strb	r6, [r4, #9]
 800ef2c:	60e0      	str	r0, [r4, #12]
 800ef2e:	8222      	strh	r2, [r4, #16]
 800ef30:	8265      	strh	r5, [r4, #18]
 800ef32:	82a5      	strh	r5, [r4, #20]
 800ef34:	82e5      	strh	r5, [r4, #22]
 800ef36:	8325      	strh	r5, [r4, #24]
 800ef38:	8365      	strh	r5, [r4, #26]
 800ef3a:	83a5      	strh	r5, [r4, #28]
 800ef3c:	77a5      	strb	r5, [r4, #30]
 800ef3e:	b32e      	cbz	r6, 800ef8c <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 800ef40:	6803      	ldr	r3, [r0, #0]
 800ef42:	695b      	ldr	r3, [r3, #20]
 800ef44:	4798      	blx	r3
 800ef46:	4606      	mov	r6, r0
 800ef48:	b300      	cbz	r0, 800ef8c <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 800ef4a:	68e0      	ldr	r0, [r4, #12]
 800ef4c:	6803      	ldr	r3, [r0, #0]
 800ef4e:	4631      	mov	r1, r6
 800ef50:	68db      	ldr	r3, [r3, #12]
 800ef52:	4798      	blx	r3
 800ef54:	4605      	mov	r5, r0
 800ef56:	b1c8      	cbz	r0, 800ef8c <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 800ef58:	7b43      	ldrb	r3, [r0, #13]
 800ef5a:	7a82      	ldrb	r2, [r0, #10]
 800ef5c:	005b      	lsls	r3, r3, #1
 800ef5e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800ef62:	4313      	orrs	r3, r2
 800ef64:	83a3      	strh	r3, [r4, #28]
 800ef66:	7a63      	ldrb	r3, [r4, #9]
 800ef68:	2b04      	cmp	r3, #4
 800ef6a:	d10f      	bne.n	800ef8c <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 800ef6c:	68e0      	ldr	r0, [r4, #12]
 800ef6e:	6803      	ldr	r3, [r0, #0]
 800ef70:	462a      	mov	r2, r5
 800ef72:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800ef74:	4631      	mov	r1, r6
 800ef76:	4798      	blx	r3
 800ef78:	7b6b      	ldrb	r3, [r5, #13]
 800ef7a:	005b      	lsls	r3, r3, #1
 800ef7c:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800ef80:	7aab      	ldrb	r3, [r5, #10]
 800ef82:	4313      	orrs	r3, r2
 800ef84:	4418      	add	r0, r3
 800ef86:	8ba3      	ldrh	r3, [r4, #28]
 800ef88:	4418      	add	r0, r3
 800ef8a:	83a0      	strh	r0, [r4, #28]
 800ef8c:	4620      	mov	r0, r4
 800ef8e:	bd70      	pop	{r4, r5, r6, pc}

0800ef90 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 800ef90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ef94:	2400      	movs	r4, #0
 800ef96:	b085      	sub	sp, #20
 800ef98:	4681      	mov	r9, r0
 800ef9a:	4688      	mov	r8, r1
 800ef9c:	4692      	mov	sl, r2
 800ef9e:	469b      	mov	fp, r3
 800efa0:	4627      	mov	r7, r4
 800efa2:	4625      	mov	r5, r4
 800efa4:	4626      	mov	r6, r4
 800efa6:	4554      	cmp	r4, sl
 800efa8:	da2a      	bge.n	800f000 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800efaa:	2300      	movs	r3, #0
 800efac:	9303      	str	r3, [sp, #12]
 800efae:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800efb2:	429d      	cmp	r5, r3
 800efb4:	d004      	beq.n	800efc0 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 800efb6:	f242 030b 	movw	r3, #8203	; 0x200b
 800efba:	429d      	cmp	r5, r3
 800efbc:	bf18      	it	ne
 800efbe:	462f      	movne	r7, r5
 800efc0:	ab03      	add	r3, sp, #12
 800efc2:	4642      	mov	r2, r8
 800efc4:	4659      	mov	r1, fp
 800efc6:	4648      	mov	r0, r9
 800efc8:	f002 ff7e 	bl	8011ec8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800efcc:	4605      	mov	r5, r0
 800efce:	b1b8      	cbz	r0, 800f000 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800efd0:	280a      	cmp	r0, #10
 800efd2:	d015      	beq.n	800f000 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800efd4:	9a03      	ldr	r2, [sp, #12]
 800efd6:	b18a      	cbz	r2, 800effc <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 800efd8:	7b50      	ldrb	r0, [r2, #13]
 800efda:	7a93      	ldrb	r3, [r2, #10]
 800efdc:	8895      	ldrh	r5, [r2, #4]
 800efde:	0040      	lsls	r0, r0, #1
 800efe0:	f400 7080 	and.w	r0, r0, #256	; 0x100
 800efe4:	4303      	orrs	r3, r0
 800efe6:	9301      	str	r3, [sp, #4]
 800efe8:	f8d8 3000 	ldr.w	r3, [r8]
 800efec:	4639      	mov	r1, r7
 800efee:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800eff0:	4640      	mov	r0, r8
 800eff2:	4798      	blx	r3
 800eff4:	9b01      	ldr	r3, [sp, #4]
 800eff6:	4418      	add	r0, r3
 800eff8:	4406      	add	r6, r0
 800effa:	b2b6      	uxth	r6, r6
 800effc:	3401      	adds	r4, #1
 800effe:	e7d2      	b.n	800efa6 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 800f000:	4630      	mov	r0, r6
 800f002:	b005      	add	sp, #20
 800f004:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800f008 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 800f008:	2a02      	cmp	r2, #2
 800f00a:	b530      	push	{r4, r5, lr}
 800f00c:	d011      	beq.n	800f032 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 800f00e:	2a03      	cmp	r2, #3
 800f010:	d01c      	beq.n	800f04c <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 800f012:	2a01      	cmp	r2, #1
 800f014:	d10c      	bne.n	800f030 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800f016:	888b      	ldrh	r3, [r1, #4]
 800f018:	8801      	ldrh	r1, [r0, #0]
 800f01a:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 800f01e:	8844      	ldrh	r4, [r0, #2]
 800f020:	8004      	strh	r4, [r0, #0]
 800f022:	1a5b      	subs	r3, r3, r1
 800f024:	1a9b      	subs	r3, r3, r2
 800f026:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800f02a:	8043      	strh	r3, [r0, #2]
 800f02c:	8081      	strh	r1, [r0, #4]
 800f02e:	80c2      	strh	r2, [r0, #6]
 800f030:	bd30      	pop	{r4, r5, pc}
 800f032:	88cb      	ldrh	r3, [r1, #6]
 800f034:	8842      	ldrh	r2, [r0, #2]
 800f036:	1a9b      	subs	r3, r3, r2
 800f038:	88c2      	ldrh	r2, [r0, #6]
 800f03a:	1a9b      	subs	r3, r3, r2
 800f03c:	888a      	ldrh	r2, [r1, #4]
 800f03e:	8801      	ldrh	r1, [r0, #0]
 800f040:	8043      	strh	r3, [r0, #2]
 800f042:	1a52      	subs	r2, r2, r1
 800f044:	8881      	ldrh	r1, [r0, #4]
 800f046:	1a52      	subs	r2, r2, r1
 800f048:	8002      	strh	r2, [r0, #0]
 800f04a:	e7f1      	b.n	800f030 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800f04c:	88cb      	ldrh	r3, [r1, #6]
 800f04e:	8841      	ldrh	r1, [r0, #2]
 800f050:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 800f054:	f9b0 5000 	ldrsh.w	r5, [r0]
 800f058:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 800f05c:	8045      	strh	r5, [r0, #2]
 800f05e:	1a5b      	subs	r3, r3, r1
 800f060:	1a9b      	subs	r3, r3, r2
 800f062:	8003      	strh	r3, [r0, #0]
 800f064:	8082      	strh	r2, [r0, #4]
 800f066:	80c4      	strh	r4, [r0, #6]
 800f068:	e7e2      	b.n	800f030 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

0800f06a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 800f06a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f06e:	b09f      	sub	sp, #124	; 0x7c
 800f070:	9116      	str	r1, [sp, #88]	; 0x58
 800f072:	9317      	str	r3, [sp, #92]	; 0x5c
 800f074:	9929      	ldr	r1, [sp, #164]	; 0xa4
 800f076:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800f078:	8809      	ldrh	r1, [r1, #0]
 800f07a:	889b      	ldrh	r3, [r3, #4]
 800f07c:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 800f080:	9212      	str	r2, [sp, #72]	; 0x48
 800f082:	440b      	add	r3, r1
 800f084:	b21b      	sxth	r3, r3
 800f086:	9310      	str	r3, [sp, #64]	; 0x40
 800f088:	f8d8 3000 	ldr.w	r3, [r8]
 800f08c:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 800f090:	7a59      	ldrb	r1, [r3, #9]
 800f092:	7a1b      	ldrb	r3, [r3, #8]
 800f094:	9011      	str	r0, [sp, #68]	; 0x44
 800f096:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 800f09a:	9114      	str	r1, [sp, #80]	; 0x50
 800f09c:	9315      	str	r3, [sp, #84]	; 0x54
 800f09e:	f9bd 50a0 	ldrsh.w	r5, [sp, #160]	; 0xa0
 800f0a2:	2a00      	cmp	r2, #0
 800f0a4:	d06a      	beq.n	800f17c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 800f0a6:	f898 3010 	ldrb.w	r3, [r8, #16]
 800f0aa:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 800f0ac:	2b04      	cmp	r3, #4
 800f0ae:	bf14      	ite	ne
 800f0b0:	2301      	movne	r3, #1
 800f0b2:	2302      	moveq	r3, #2
 800f0b4:	4413      	add	r3, r2
 800f0b6:	f04f 0900 	mov.w	r9, #0
 800f0ba:	930f      	str	r3, [sp, #60]	; 0x3c
 800f0bc:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 800f0c0:	464c      	mov	r4, r9
 800f0c2:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 800f0c6:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 800f0ca:	4293      	cmp	r3, r2
 800f0cc:	f280 808f 	bge.w	800f1ee <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 800f0d0:	2300      	movs	r3, #0
 800f0d2:	e9cd 331c 	strd	r3, r3, [sp, #112]	; 0x70
 800f0d6:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
 800f0da:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800f0de:	429c      	cmp	r4, r3
 800f0e0:	d006      	beq.n	800f0f0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x86>
 800f0e2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800f0e4:	f242 020b 	movw	r2, #8203	; 0x200b
 800f0e8:	4294      	cmp	r4, r2
 800f0ea:	bf18      	it	ne
 800f0ec:	4623      	movne	r3, r4
 800f0ee:	930d      	str	r3, [sp, #52]	; 0x34
 800f0f0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800f0f2:	992d      	ldr	r1, [sp, #180]	; 0xb4
 800f0f4:	f8d8 2000 	ldr.w	r2, [r8]
 800f0f8:	428b      	cmp	r3, r1
 800f0fa:	db41      	blt.n	800f180 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 800f0fc:	6813      	ldr	r3, [r2, #0]
 800f0fe:	4610      	mov	r0, r2
 800f100:	695b      	ldr	r3, [r3, #20]
 800f102:	4798      	blx	r3
 800f104:	4604      	mov	r4, r0
 800f106:	f8d8 0000 	ldr.w	r0, [r8]
 800f10a:	6803      	ldr	r3, [r0, #0]
 800f10c:	aa1d      	add	r2, sp, #116	; 0x74
 800f10e:	689e      	ldr	r6, [r3, #8]
 800f110:	4621      	mov	r1, r4
 800f112:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 800f116:	47b0      	blx	r6
 800f118:	901c      	str	r0, [sp, #112]	; 0x70
 800f11a:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800f11e:	429c      	cmp	r4, r3
 800f120:	f000 80e9 	beq.w	800f2f6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 800f124:	f242 030b 	movw	r3, #8203	; 0x200b
 800f128:	429c      	cmp	r4, r3
 800f12a:	f000 80e4 	beq.w	800f2f6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 800f12e:	2c00      	cmp	r4, #0
 800f130:	f000 80f6 	beq.w	800f320 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b6>
 800f134:	2c0a      	cmp	r4, #10
 800f136:	d060      	beq.n	800f1fa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 800f138:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800f13a:	b36a      	cbz	r2, 800f198 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 800f13c:	8894      	ldrh	r4, [r2, #4]
 800f13e:	f1bb 0f00 	cmp.w	fp, #0
 800f142:	d03b      	beq.n	800f1bc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 800f144:	f892 900d 	ldrb.w	r9, [r2, #13]
 800f148:	ea4f 0949 	mov.w	r9, r9, lsl #1
 800f14c:	f409 7380 	and.w	r3, r9, #256	; 0x100
 800f150:	f892 900a 	ldrb.w	r9, [r2, #10]
 800f154:	f1bb 0f01 	cmp.w	fp, #1
 800f158:	ea49 0903 	orr.w	r9, r9, r3
 800f15c:	d134      	bne.n	800f1c8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15e>
 800f15e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800f160:	eba5 0509 	sub.w	r5, r5, r9
 800f164:	2b00      	cmp	r3, #0
 800f166:	d14f      	bne.n	800f208 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 800f168:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800f16a:	eb09 0305 	add.w	r3, r9, r5
 800f16e:	4413      	add	r3, r2
 800f170:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 800f172:	f9b2 2000 	ldrsh.w	r2, [r2]
 800f176:	4293      	cmp	r3, r2
 800f178:	da51      	bge.n	800f21e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 800f17a:	e038      	b.n	800f1ee <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 800f17c:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 800f17e:	e79a      	b.n	800f0b6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
 800f180:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 800f184:	9301      	str	r3, [sp, #4]
 800f186:	ab1d      	add	r3, sp, #116	; 0x74
 800f188:	9300      	str	r3, [sp, #0]
 800f18a:	4659      	mov	r1, fp
 800f18c:	ab1c      	add	r3, sp, #112	; 0x70
 800f18e:	982c      	ldr	r0, [sp, #176]	; 0xb0
 800f190:	f002 fee3 	bl	8011f5a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 800f194:	4604      	mov	r4, r0
 800f196:	e7c0      	b.n	800f11a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 800f198:	f8d8 0000 	ldr.w	r0, [r8]
 800f19c:	6803      	ldr	r3, [r0, #0]
 800f19e:	691b      	ldr	r3, [r3, #16]
 800f1a0:	4798      	blx	r3
 800f1a2:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800f1a6:	4298      	cmp	r0, r3
 800f1a8:	f000 80a5 	beq.w	800f2f6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 800f1ac:	f242 030b 	movw	r3, #8203	; 0x200b
 800f1b0:	4298      	cmp	r0, r3
 800f1b2:	f000 80a0 	beq.w	800f2f6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 800f1b6:	f1bb 0f00 	cmp.w	fp, #0
 800f1ba:	d100      	bne.n	800f1be <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
 800f1bc:	444d      	add	r5, r9
 800f1be:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800f1c0:	2a00      	cmp	r2, #0
 800f1c2:	d1bf      	bne.n	800f144 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 800f1c4:	4691      	mov	r9, r2
 800f1c6:	e096      	b.n	800f2f6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 800f1c8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800f1ca:	2b00      	cmp	r3, #0
 800f1cc:	f000 80aa 	beq.w	800f324 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 800f1d0:	f1bb 0f00 	cmp.w	fp, #0
 800f1d4:	d118      	bne.n	800f208 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 800f1d6:	f8d8 0000 	ldr.w	r0, [r8]
 800f1da:	990d      	ldr	r1, [sp, #52]	; 0x34
 800f1dc:	6803      	ldr	r3, [r0, #0]
 800f1de:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800f1e0:	4798      	blx	r3
 800f1e2:	4405      	add	r5, r0
 800f1e4:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800f1e6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800f1e8:	1aeb      	subs	r3, r5, r3
 800f1ea:	4293      	cmp	r3, r2
 800f1ec:	dd17      	ble.n	800f21e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 800f1ee:	2c00      	cmp	r4, #0
 800f1f0:	f000 8096 	beq.w	800f320 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b6>
 800f1f4:	2c0a      	cmp	r4, #10
 800f1f6:	f040 8084 	bne.w	800f302 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
 800f1fa:	240a      	movs	r4, #10
 800f1fc:	fab4 f084 	clz	r0, r4
 800f200:	0940      	lsrs	r0, r0, #5
 800f202:	b01f      	add	sp, #124	; 0x7c
 800f204:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f208:	f8d8 0000 	ldr.w	r0, [r8]
 800f20c:	990d      	ldr	r1, [sp, #52]	; 0x34
 800f20e:	6803      	ldr	r3, [r0, #0]
 800f210:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800f212:	4798      	blx	r3
 800f214:	f1bb 0f01 	cmp.w	fp, #1
 800f218:	eba5 0500 	sub.w	r5, r5, r0
 800f21c:	d0a4      	beq.n	800f168 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 800f21e:	981c      	ldr	r0, [sp, #112]	; 0x70
 800f220:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800f222:	f990 1009 	ldrsb.w	r1, [r0, #9]
 800f226:	f9b3 6000 	ldrsh.w	r6, [r3]
 800f22a:	7b43      	ldrb	r3, [r0, #13]
 800f22c:	015b      	lsls	r3, r3, #5
 800f22e:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800f232:	7983      	ldrb	r3, [r0, #6]
 800f234:	4429      	add	r1, r5
 800f236:	4313      	orrs	r3, r2
 800f238:	440b      	add	r3, r1
 800f23a:	42b3      	cmp	r3, r6
 800f23c:	db5b      	blt.n	800f2f6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 800f23e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f240:	4299      	cmp	r1, r3
 800f242:	da58      	bge.n	800f2f6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 800f244:	f8d8 0000 	ldr.w	r0, [r8]
 800f248:	6803      	ldr	r3, [r0, #0]
 800f24a:	42ae      	cmp	r6, r5
 800f24c:	bfc8      	it	gt
 800f24e:	1b76      	subgt	r6, r6, r5
 800f250:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f252:	bfcc      	ite	gt
 800f254:	b2b6      	uxthgt	r6, r6
 800f256:	2600      	movle	r6, #0
 800f258:	4798      	blx	r3
 800f25a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 800f25c:	7b5a      	ldrb	r2, [r3, #13]
 800f25e:	00d1      	lsls	r1, r2, #3
 800f260:	f401 7780 	and.w	r7, r1, #256	; 0x100
 800f264:	7a19      	ldrb	r1, [r3, #8]
 800f266:	4339      	orrs	r1, r7
 800f268:	0657      	lsls	r7, r2, #25
 800f26a:	9f17      	ldr	r7, [sp, #92]	; 0x5c
 800f26c:	bf44      	itt	mi
 800f26e:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 800f272:	b209      	sxthmi	r1, r1
 800f274:	19c7      	adds	r7, r0, r7
 800f276:	1a7f      	subs	r7, r7, r1
 800f278:	9929      	ldr	r1, [sp, #164]	; 0xa4
 800f27a:	b2bf      	uxth	r7, r7
 800f27c:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 800f280:	fa0f fa87 	sxth.w	sl, r7
 800f284:	4551      	cmp	r1, sl
 800f286:	dd3a      	ble.n	800f2fe <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x294>
 800f288:	0112      	lsls	r2, r2, #4
 800f28a:	79d8      	ldrb	r0, [r3, #7]
 800f28c:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800f290:	4302      	orrs	r2, r0
 800f292:	4492      	add	sl, r2
 800f294:	4551      	cmp	r1, sl
 800f296:	dc2e      	bgt.n	800f2f6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 800f298:	1bcf      	subs	r7, r1, r7
 800f29a:	b2bf      	uxth	r7, r7
 800f29c:	468a      	mov	sl, r1
 800f29e:	9319      	str	r3, [sp, #100]	; 0x64
 800f2a0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800f2a2:	f8d8 0000 	ldr.w	r0, [r8]
 800f2a6:	681a      	ldr	r2, [r3, #0]
 800f2a8:	6801      	ldr	r1, [r0, #0]
 800f2aa:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 800f2ac:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 800f2ae:	9313      	str	r3, [sp, #76]	; 0x4c
 800f2b0:	9218      	str	r2, [sp, #96]	; 0x60
 800f2b2:	6b89      	ldr	r1, [r1, #56]	; 0x38
 800f2b4:	4788      	blx	r1
 800f2b6:	f898 1006 	ldrb.w	r1, [r8, #6]
 800f2ba:	910b      	str	r1, [sp, #44]	; 0x2c
 800f2bc:	f898 100e 	ldrb.w	r1, [r8, #14]
 800f2c0:	910a      	str	r1, [sp, #40]	; 0x28
 800f2c2:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 800f2c6:	9109      	str	r1, [sp, #36]	; 0x24
 800f2c8:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800f2ca:	f8d8 1008 	ldr.w	r1, [r8, #8]
 800f2ce:	9305      	str	r3, [sp, #20]
 800f2d0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800f2d2:	9a18      	ldr	r2, [sp, #96]	; 0x60
 800f2d4:	9206      	str	r2, [sp, #24]
 800f2d6:	e9cd 0107 	strd	r0, r1, [sp, #28]
 800f2da:	e9cd 7303 	strd	r7, r3, [sp, #12]
 800f2de:	e9cd a601 	strd	sl, r6, [sp, #4]
 800f2e2:	442e      	add	r6, r5
 800f2e4:	b236      	sxth	r6, r6
 800f2e6:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800f2e8:	9600      	str	r6, [sp, #0]
 800f2ea:	681a      	ldr	r2, [r3, #0]
 800f2ec:	9916      	ldr	r1, [sp, #88]	; 0x58
 800f2ee:	685b      	ldr	r3, [r3, #4]
 800f2f0:	9811      	ldr	r0, [sp, #68]	; 0x44
 800f2f2:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 800f2f4:	47b0      	blx	r6
 800f2f6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800f2f8:	3301      	adds	r3, #1
 800f2fa:	930e      	str	r3, [sp, #56]	; 0x38
 800f2fc:	e6e3      	b.n	800f0c6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
 800f2fe:	2700      	movs	r7, #0
 800f300:	e7cd      	b.n	800f29e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
 800f302:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 800f304:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 800f306:	3501      	adds	r5, #1
 800f308:	429d      	cmp	r5, r3
 800f30a:	f6bf af77 	bge.w	800f1fc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 800f30e:	4659      	mov	r1, fp
 800f310:	982c      	ldr	r0, [sp, #176]	; 0xb0
 800f312:	f7f4 ff65 	bl	80041e0 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800f316:	4604      	mov	r4, r0
 800f318:	b110      	cbz	r0, 800f320 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b6>
 800f31a:	280a      	cmp	r0, #10
 800f31c:	d1f2      	bne.n	800f304 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29a>
 800f31e:	e76c      	b.n	800f1fa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 800f320:	2400      	movs	r4, #0
 800f322:	e76b      	b.n	800f1fc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 800f324:	f1bb 0f00 	cmp.w	fp, #0
 800f328:	f43f af5c 	beq.w	800f1e4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17a>
 800f32c:	e777      	b.n	800f21e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>

0800f32e <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 800f32e:	b530      	push	{r4, r5, lr}
 800f330:	8a44      	ldrh	r4, [r0, #18]
 800f332:	8ac5      	ldrh	r5, [r0, #22]
 800f334:	82c3      	strh	r3, [r0, #22]
 800f336:	442c      	add	r4, r5
 800f338:	1ae4      	subs	r4, r4, r3
 800f33a:	8244      	strh	r4, [r0, #18]
 800f33c:	8b03      	ldrh	r3, [r0, #24]
 800f33e:	8a84      	ldrh	r4, [r0, #20]
 800f340:	4422      	add	r2, r4
 800f342:	440c      	add	r4, r1
 800f344:	1a59      	subs	r1, r3, r1
 800f346:	8342      	strh	r2, [r0, #26]
 800f348:	8284      	strh	r4, [r0, #20]
 800f34a:	8301      	strh	r1, [r0, #24]
 800f34c:	bd30      	pop	{r4, r5, pc}

0800f34e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>:
 800f34e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f352:	7a43      	ldrb	r3, [r0, #9]
 800f354:	1eda      	subs	r2, r3, #3
 800f356:	b087      	sub	sp, #28
 800f358:	4604      	mov	r4, r0
 800f35a:	b2d2      	uxtb	r2, r2
 800f35c:	460f      	mov	r7, r1
 800f35e:	2900      	cmp	r1, #0
 800f360:	d036      	beq.n	800f3d0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x82>
 800f362:	2a01      	cmp	r2, #1
 800f364:	d932      	bls.n	800f3cc <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x7e>
 800f366:	1e58      	subs	r0, r3, #1
 800f368:	f1d0 0b00 	rsbs	fp, r0, #0
 800f36c:	eb4b 0b00 	adc.w	fp, fp, r0
 800f370:	1e99      	subs	r1, r3, #2
 800f372:	424b      	negs	r3, r1
 800f374:	414b      	adcs	r3, r1
 800f376:	9303      	str	r3, [sp, #12]
 800f378:	2300      	movs	r3, #0
 800f37a:	e9cd 3301 	strd	r3, r3, [sp, #4]
 800f37e:	2500      	movs	r5, #0
 800f380:	8265      	strh	r5, [r4, #18]
 800f382:	82a5      	strh	r5, [r4, #20]
 800f384:	46a9      	mov	r9, r5
 800f386:	f242 0a0b 	movw	sl, #8203	; 0x200b
 800f38a:	2300      	movs	r3, #0
 800f38c:	9305      	str	r3, [sp, #20]
 800f38e:	8823      	ldrh	r3, [r4, #0]
 800f390:	2b20      	cmp	r3, #32
 800f392:	d02b      	beq.n	800f3ec <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x9e>
 800f394:	eba3 020a 	sub.w	r2, r3, sl
 800f398:	4256      	negs	r6, r2
 800f39a:	4156      	adcs	r6, r2
 800f39c:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 800f3a0:	4293      	cmp	r3, r2
 800f3a2:	d004      	beq.n	800f3ae <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 800f3a4:	4553      	cmp	r3, sl
 800f3a6:	bf16      	itet	ne
 800f3a8:	4699      	movne	r9, r3
 800f3aa:	2601      	moveq	r6, #1
 800f3ac:	2600      	movne	r6, #0
 800f3ae:	ab05      	add	r3, sp, #20
 800f3b0:	68e2      	ldr	r2, [r4, #12]
 800f3b2:	7a21      	ldrb	r1, [r4, #8]
 800f3b4:	6860      	ldr	r0, [r4, #4]
 800f3b6:	f002 fd87 	bl	8011ec8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800f3ba:	8020      	strh	r0, [r4, #0]
 800f3bc:	b9c8      	cbnz	r0, 800f3f2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xa4>
 800f3be:	8b22      	ldrh	r2, [r4, #24]
 800f3c0:	2300      	movs	r3, #0
 800f3c2:	4611      	mov	r1, r2
 800f3c4:	4620      	mov	r0, r4
 800f3c6:	f7ff ffb2 	bl	800f32e <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800f3ca:	e066      	b.n	800f49a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 800f3cc:	468b      	mov	fp, r1
 800f3ce:	e7cf      	b.n	800f370 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x22>
 800f3d0:	3b01      	subs	r3, #1
 800f3d2:	2a01      	cmp	r2, #1
 800f3d4:	bf8c      	ite	hi
 800f3d6:	2200      	movhi	r2, #0
 800f3d8:	2201      	movls	r2, #1
 800f3da:	2b01      	cmp	r3, #1
 800f3dc:	bf8c      	ite	hi
 800f3de:	2300      	movhi	r3, #0
 800f3e0:	2301      	movls	r3, #1
 800f3e2:	9202      	str	r2, [sp, #8]
 800f3e4:	9301      	str	r3, [sp, #4]
 800f3e6:	9103      	str	r1, [sp, #12]
 800f3e8:	468b      	mov	fp, r1
 800f3ea:	e7c8      	b.n	800f37e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x30>
 800f3ec:	4699      	mov	r9, r3
 800f3ee:	2601      	movs	r6, #1
 800f3f0:	e7dd      	b.n	800f3ae <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 800f3f2:	8ae3      	ldrh	r3, [r4, #22]
 800f3f4:	280a      	cmp	r0, #10
 800f3f6:	f103 0301 	add.w	r3, r3, #1
 800f3fa:	82e3      	strh	r3, [r4, #22]
 800f3fc:	d0df      	beq.n	800f3be <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x70>
 800f3fe:	9a05      	ldr	r2, [sp, #20]
 800f400:	bb42      	cbnz	r2, 800f454 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x106>
 800f402:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800f406:	4298      	cmp	r0, r3
 800f408:	d001      	beq.n	800f40e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 800f40a:	4550      	cmp	r0, sl
 800f40c:	d1bd      	bne.n	800f38a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800f40e:	8823      	ldrh	r3, [r4, #0]
 800f410:	8b21      	ldrh	r1, [r4, #24]
 800f412:	2b20      	cmp	r3, #32
 800f414:	d001      	beq.n	800f41a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xcc>
 800f416:	4553      	cmp	r3, sl
 800f418:	d131      	bne.n	800f47e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x130>
 800f41a:	2e00      	cmp	r6, #0
 800f41c:	bf0a      	itet	eq
 800f41e:	460d      	moveq	r5, r1
 800f420:	4630      	movne	r0, r6
 800f422:	2001      	moveq	r0, #1
 800f424:	440a      	add	r2, r1
 800f426:	8aa3      	ldrh	r3, [r4, #20]
 800f428:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 800f42c:	b292      	uxth	r2, r2
 800f42e:	8322      	strh	r2, [r4, #24]
 800f430:	4413      	add	r3, r2
 800f432:	2f00      	cmp	r7, #0
 800f434:	d03a      	beq.n	800f4ac <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x15e>
 800f436:	f1bb 0f00 	cmp.w	fp, #0
 800f43a:	d102      	bne.n	800f442 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xf4>
 800f43c:	9903      	ldr	r1, [sp, #12]
 800f43e:	b301      	cbz	r1, 800f482 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 800f440:	b1f8      	cbz	r0, 800f482 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 800f442:	8ba1      	ldrh	r1, [r4, #28]
 800f444:	4419      	add	r1, r3
 800f446:	458c      	cmp	ip, r1
 800f448:	da2a      	bge.n	800f4a0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 800f44a:	8a61      	ldrh	r1, [r4, #18]
 800f44c:	b341      	cbz	r1, 800f4a0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 800f44e:	4563      	cmp	r3, ip
 800f450:	dd9b      	ble.n	800f38a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800f452:	e01c      	b.n	800f48e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x140>
 800f454:	8893      	ldrh	r3, [r2, #4]
 800f456:	8023      	strh	r3, [r4, #0]
 800f458:	f892 800d 	ldrb.w	r8, [r2, #13]
 800f45c:	ea4f 0848 	mov.w	r8, r8, lsl #1
 800f460:	f408 7080 	and.w	r0, r8, #256	; 0x100
 800f464:	f892 800a 	ldrb.w	r8, [r2, #10]
 800f468:	ea48 0800 	orr.w	r8, r8, r0
 800f46c:	68e0      	ldr	r0, [r4, #12]
 800f46e:	6803      	ldr	r3, [r0, #0]
 800f470:	4649      	mov	r1, r9
 800f472:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800f474:	4798      	blx	r3
 800f476:	eb08 0200 	add.w	r2, r8, r0
 800f47a:	b292      	uxth	r2, r2
 800f47c:	e7c7      	b.n	800f40e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 800f47e:	2000      	movs	r0, #0
 800f480:	e7d0      	b.n	800f424 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xd6>
 800f482:	4563      	cmp	r3, ip
 800f484:	dd81      	ble.n	800f38a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800f486:	8a63      	ldrh	r3, [r4, #18]
 800f488:	2b00      	cmp	r3, #0
 800f48a:	f43f af7e 	beq.w	800f38a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800f48e:	2301      	movs	r3, #1
 800f490:	77a3      	strb	r3, [r4, #30]
 800f492:	8ba2      	ldrh	r2, [r4, #28]
 800f494:	8b63      	ldrh	r3, [r4, #26]
 800f496:	4413      	add	r3, r2
 800f498:	8363      	strh	r3, [r4, #26]
 800f49a:	b007      	add	sp, #28
 800f49c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f4a0:	2300      	movs	r3, #0
 800f4a2:	4611      	mov	r1, r2
 800f4a4:	4620      	mov	r0, r4
 800f4a6:	f7ff ff42 	bl	800f32e <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800f4aa:	e76e      	b.n	800f38a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800f4ac:	4563      	cmp	r3, ip
 800f4ae:	dd14      	ble.n	800f4da <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x18c>
 800f4b0:	9b02      	ldr	r3, [sp, #8]
 800f4b2:	b113      	cbz	r3, 800f4ba <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x16c>
 800f4b4:	2301      	movs	r3, #1
 800f4b6:	460a      	mov	r2, r1
 800f4b8:	e783      	b.n	800f3c2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x74>
 800f4ba:	9b01      	ldr	r3, [sp, #4]
 800f4bc:	2b00      	cmp	r3, #0
 800f4be:	f43f af64 	beq.w	800f38a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800f4c2:	2800      	cmp	r0, #0
 800f4c4:	f47f af61 	bne.w	800f38a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800f4c8:	b116      	cbz	r6, 800f4d0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x182>
 800f4ca:	2301      	movs	r3, #1
 800f4cc:	462a      	mov	r2, r5
 800f4ce:	e779      	b.n	800f3c4 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x76>
 800f4d0:	8a63      	ldrh	r3, [r4, #18]
 800f4d2:	2b00      	cmp	r3, #0
 800f4d4:	f43f af59 	beq.w	800f38a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800f4d8:	e7df      	b.n	800f49a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 800f4da:	2800      	cmp	r0, #0
 800f4dc:	f47f af55 	bne.w	800f38a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800f4e0:	2e00      	cmp	r6, #0
 800f4e2:	f43f af52 	beq.w	800f38a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800f4e6:	2301      	movs	r3, #1
 800f4e8:	462a      	mov	r2, r5
 800f4ea:	e7db      	b.n	800f4a4 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x156>

0800f4ec <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 800f4ec:	b530      	push	{r4, r5, lr}
 800f4ee:	4605      	mov	r5, r0
 800f4f0:	b08b      	sub	sp, #44	; 0x2c
 800f4f2:	b191      	cbz	r1, 800f51a <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x2e>
 800f4f4:	e9cd 3100 	strd	r3, r1, [sp]
 800f4f8:	4613      	mov	r3, r2
 800f4fa:	4601      	mov	r1, r0
 800f4fc:	f8bd 2038 	ldrh.w	r2, [sp, #56]	; 0x38
 800f500:	a802      	add	r0, sp, #8
 800f502:	f7ff fd09 	bl	800ef18 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 800f506:	2401      	movs	r4, #1
 800f508:	2100      	movs	r1, #0
 800f50a:	a802      	add	r0, sp, #8
 800f50c:	f7ff ff1f 	bl	800f34e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800f510:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800f514:	b163      	cbz	r3, 800f530 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 800f516:	3401      	adds	r4, #1
 800f518:	e7f6      	b.n	800f508 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x1c>
 800f51a:	f002 fda3 	bl	8012064 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800f51e:	2401      	movs	r4, #1
 800f520:	280a      	cmp	r0, #10
 800f522:	4628      	mov	r0, r5
 800f524:	bf08      	it	eq
 800f526:	3401      	addeq	r4, #1
 800f528:	f002 fd9c 	bl	8012064 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800f52c:	2800      	cmp	r0, #0
 800f52e:	d1f7      	bne.n	800f520 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 800f530:	b2a0      	uxth	r0, r4
 800f532:	b00b      	add	sp, #44	; 0x2c
 800f534:	bd30      	pop	{r4, r5, pc}

0800f536 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 800f536:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f53a:	b0e5      	sub	sp, #404	; 0x194
 800f53c:	4689      	mov	r9, r1
 800f53e:	f8dd a1b8 	ldr.w	sl, [sp, #440]	; 0x1b8
 800f542:	900a      	str	r0, [sp, #40]	; 0x28
 800f544:	461c      	mov	r4, r3
 800f546:	f1ba 0f00 	cmp.w	sl, #0
 800f54a:	f000 80b4 	beq.w	800f6b6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800f54e:	681b      	ldr	r3, [r3, #0]
 800f550:	2b00      	cmp	r3, #0
 800f552:	f000 80b0 	beq.w	800f6b6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800f556:	7ba3      	ldrb	r3, [r4, #14]
 800f558:	2b00      	cmp	r3, #0
 800f55a:	f000 80ac 	beq.w	800f6b6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800f55e:	6810      	ldr	r0, [r2, #0]
 800f560:	6851      	ldr	r1, [r2, #4]
 800f562:	f9b9 2004 	ldrsh.w	r2, [r9, #4]
 800f566:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 800f56a:	f10d 0834 	add.w	r8, sp, #52	; 0x34
 800f56e:	4643      	mov	r3, r8
 800f570:	c303      	stmia	r3!, {r0, r1}
 800f572:	2500      	movs	r5, #0
 800f574:	f9b9 3006 	ldrsh.w	r3, [r9, #6]
 800f578:	79a2      	ldrb	r2, [r4, #6]
 800f57a:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 800f57e:	a90f      	add	r1, sp, #60	; 0x3c
 800f580:	4640      	mov	r0, r8
 800f582:	950f      	str	r5, [sp, #60]	; 0x3c
 800f584:	f7ff fd40 	bl	800f008 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800f588:	a90f      	add	r1, sp, #60	; 0x3c
 800f58a:	4608      	mov	r0, r1
 800f58c:	79a2      	ldrb	r2, [r4, #6]
 800f58e:	af19      	add	r7, sp, #100	; 0x64
 800f590:	f7ff fd3a 	bl	800f008 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800f594:	4638      	mov	r0, r7
 800f596:	f002 f93a 	bl	801180e <_ZN8touchgfx12TextProviderC1Ev>
 800f59a:	6820      	ldr	r0, [r4, #0]
 800f59c:	6803      	ldr	r3, [r0, #0]
 800f59e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800f5a0:	4798      	blx	r3
 800f5a2:	4606      	mov	r6, r0
 800f5a4:	6820      	ldr	r0, [r4, #0]
 800f5a6:	6803      	ldr	r3, [r0, #0]
 800f5a8:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800f5aa:	4798      	blx	r3
 800f5ac:	4633      	mov	r3, r6
 800f5ae:	9000      	str	r0, [sp, #0]
 800f5b0:	9a6f      	ldr	r2, [sp, #444]	; 0x1bc
 800f5b2:	4651      	mov	r1, sl
 800f5b4:	4638      	mov	r0, r7
 800f5b6:	f002 f985 	bl	80118c4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800f5ba:	6820      	ldr	r0, [r4, #0]
 800f5bc:	7923      	ldrb	r3, [r4, #4]
 800f5be:	9308      	str	r3, [sp, #32]
 800f5c0:	6803      	ldr	r3, [r0, #0]
 800f5c2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800f5c4:	4798      	blx	r3
 800f5c6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800f5ca:	181e      	adds	r6, r3, r0
 800f5cc:	42ae      	cmp	r6, r5
 800f5ce:	dd06      	ble.n	800f5de <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xa8>
 800f5d0:	f9b8 2002 	ldrsh.w	r2, [r8, #2]
 800f5d4:	4282      	cmp	r2, r0
 800f5d6:	bfa4      	itt	ge
 800f5d8:	189d      	addge	r5, r3, r2
 800f5da:	fb95 f5f6 	sdivge	r5, r5, r6
 800f5de:	a832      	add	r0, sp, #200	; 0xc8
 800f5e0:	f002 f915 	bl	801180e <_ZN8touchgfx12TextProviderC1Ev>
 800f5e4:	7c23      	ldrb	r3, [r4, #16]
 800f5e6:	b17b      	cbz	r3, 800f608 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xd2>
 800f5e8:	6820      	ldr	r0, [r4, #0]
 800f5ea:	6803      	ldr	r3, [r0, #0]
 800f5ec:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800f5ee:	4798      	blx	r3
 800f5f0:	4683      	mov	fp, r0
 800f5f2:	6820      	ldr	r0, [r4, #0]
 800f5f4:	6803      	ldr	r3, [r0, #0]
 800f5f6:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800f5f8:	4798      	blx	r3
 800f5fa:	465b      	mov	r3, fp
 800f5fc:	9000      	str	r0, [sp, #0]
 800f5fe:	9a6f      	ldr	r2, [sp, #444]	; 0x1bc
 800f600:	4651      	mov	r1, sl
 800f602:	a832      	add	r0, sp, #200	; 0xc8
 800f604:	f002 f95e 	bl	80118c4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800f608:	7be1      	ldrb	r1, [r4, #15]
 800f60a:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 800f60e:	7963      	ldrb	r3, [r4, #5]
 800f610:	1a52      	subs	r2, r2, r1
 800f612:	7c21      	ldrb	r1, [r4, #16]
 800f614:	9101      	str	r1, [sp, #4]
 800f616:	6821      	ldr	r1, [r4, #0]
 800f618:	9100      	str	r1, [sp, #0]
 800f61a:	b292      	uxth	r2, r2
 800f61c:	a932      	add	r1, sp, #200	; 0xc8
 800f61e:	a811      	add	r0, sp, #68	; 0x44
 800f620:	f7ff fc7a 	bl	800ef18 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 800f624:	7c23      	ldrb	r3, [r4, #16]
 800f626:	b9bb      	cbnz	r3, 800f658 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>
 800f628:	fa1f fa86 	uxth.w	sl, r6
 800f62c:	2d00      	cmp	r5, #0
 800f62e:	dd45      	ble.n	800f6bc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x186>
 800f630:	4638      	mov	r0, r7
 800f632:	f002 fd17 	bl	8012064 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800f636:	2800      	cmp	r0, #0
 800f638:	d03d      	beq.n	800f6b6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800f63a:	280a      	cmp	r0, #10
 800f63c:	d1f6      	bne.n	800f62c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf6>
 800f63e:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 800f642:	4453      	add	r3, sl
 800f644:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800f648:	f8bd 3042 	ldrh.w	r3, [sp, #66]	; 0x42
 800f64c:	eba3 030a 	sub.w	r3, r3, sl
 800f650:	3d01      	subs	r5, #1
 800f652:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 800f656:	e7e9      	b.n	800f62c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf6>
 800f658:	0073      	lsls	r3, r6, #1
 800f65a:	9309      	str	r3, [sp, #36]	; 0x24
 800f65c:	f64f 7bff 	movw	fp, #65535	; 0xffff
 800f660:	fa1f fa86 	uxth.w	sl, r6
 800f664:	2d00      	cmp	r5, #0
 800f666:	dd29      	ble.n	800f6bc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x186>
 800f668:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 800f66c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800f66e:	428b      	cmp	r3, r1
 800f670:	bfd4      	ite	le
 800f672:	2100      	movle	r1, #0
 800f674:	2101      	movgt	r1, #1
 800f676:	a811      	add	r0, sp, #68	; 0x44
 800f678:	f7ff fe69 	bl	800f34e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800f67c:	f8bd 3056 	ldrh.w	r3, [sp, #86]	; 0x56
 800f680:	3b01      	subs	r3, #1
 800f682:	b29b      	uxth	r3, r3
 800f684:	455b      	cmp	r3, fp
 800f686:	930b      	str	r3, [sp, #44]	; 0x2c
 800f688:	d005      	beq.n	800f696 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x160>
 800f68a:	7961      	ldrb	r1, [r4, #5]
 800f68c:	4638      	mov	r0, r7
 800f68e:	f7f4 fda7 	bl	80041e0 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800f692:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800f694:	e7f4      	b.n	800f680 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x14a>
 800f696:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 800f69a:	4453      	add	r3, sl
 800f69c:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800f6a0:	f8bd 3042 	ldrh.w	r3, [sp, #66]	; 0x42
 800f6a4:	eba3 030a 	sub.w	r3, r3, sl
 800f6a8:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 800f6ac:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800f6b0:	3d01      	subs	r5, #1
 800f6b2:	2b00      	cmp	r3, #0
 800f6b4:	d1d6      	bne.n	800f664 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x12e>
 800f6b6:	b065      	add	sp, #404	; 0x194
 800f6b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f6bc:	0075      	lsls	r5, r6, #1
 800f6be:	f04f 0a00 	mov.w	sl, #0
 800f6c2:	7c23      	ldrb	r3, [r4, #16]
 800f6c4:	2b00      	cmp	r3, #0
 800f6c6:	d066      	beq.n	800f796 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x260>
 800f6c8:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 800f6cc:	428d      	cmp	r5, r1
 800f6ce:	bfd4      	ite	le
 800f6d0:	2100      	movle	r1, #0
 800f6d2:	2101      	movgt	r1, #1
 800f6d4:	a811      	add	r0, sp, #68	; 0x44
 800f6d6:	f7ff fe3a 	bl	800f34e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800f6da:	9b08      	ldr	r3, [sp, #32]
 800f6dc:	2b00      	cmp	r3, #0
 800f6de:	d055      	beq.n	800f78c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 800f6e0:	f894 b010 	ldrb.w	fp, [r4, #16]
 800f6e4:	2264      	movs	r2, #100	; 0x64
 800f6e6:	4639      	mov	r1, r7
 800f6e8:	a84b      	add	r0, sp, #300	; 0x12c
 800f6ea:	f010 f88b 	bl	801f804 <memcpy>
 800f6ee:	f1bb 0f00 	cmp.w	fp, #0
 800f6f2:	d058      	beq.n	800f7a6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x270>
 800f6f4:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 800f6f8:	7922      	ldrb	r2, [r4, #4]
 800f6fa:	2a01      	cmp	r2, #1
 800f6fc:	d13c      	bne.n	800f778 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x242>
 800f6fe:	f9bd 0040 	ldrsh.w	r0, [sp, #64]	; 0x40
 800f702:	1ac0      	subs	r0, r0, r3
 800f704:	2302      	movs	r3, #2
 800f706:	fb90 f0f3 	sdiv	r0, r0, r3
 800f70a:	b200      	sxth	r0, r0
 800f70c:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 800f710:	4418      	add	r0, r3
 800f712:	7c23      	ldrb	r3, [r4, #16]
 800f714:	b200      	sxth	r0, r0
 800f716:	2b00      	cmp	r3, #0
 800f718:	d03a      	beq.n	800f790 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25a>
 800f71a:	f8bd 2056 	ldrh.w	r2, [sp, #86]	; 0x56
 800f71e:	f89d 1062 	ldrb.w	r1, [sp, #98]	; 0x62
 800f722:	9000      	str	r0, [sp, #0]
 800f724:	e9cd 2105 	strd	r2, r1, [sp, #20]
 800f728:	f9bd 303e 	ldrsh.w	r3, [sp, #62]	; 0x3e
 800f72c:	980a      	ldr	r0, [sp, #40]	; 0x28
 800f72e:	e9cd a703 	strd	sl, r7, [sp, #12]
 800f732:	e9cd 8401 	strd	r8, r4, [sp, #4]
 800f736:	464a      	mov	r2, r9
 800f738:	2100      	movs	r1, #0
 800f73a:	f7ff fc96 	bl	800f06a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 800f73e:	2800      	cmp	r0, #0
 800f740:	d1b9      	bne.n	800f6b6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800f742:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 800f746:	b2b2      	uxth	r2, r6
 800f748:	4611      	mov	r1, r2
 800f74a:	4413      	add	r3, r2
 800f74c:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 800f750:	1a52      	subs	r2, r2, r1
 800f752:	7c21      	ldrb	r1, [r4, #16]
 800f754:	b21b      	sxth	r3, r3
 800f756:	b212      	sxth	r2, r2
 800f758:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800f75c:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 800f760:	b109      	cbz	r1, 800f766 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x230>
 800f762:	42b2      	cmp	r2, r6
 800f764:	dba7      	blt.n	800f6b6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800f766:	f8b8 2006 	ldrh.w	r2, [r8, #6]
 800f76a:	f8b8 1002 	ldrh.w	r1, [r8, #2]
 800f76e:	440a      	add	r2, r1
 800f770:	b212      	sxth	r2, r2
 800f772:	4293      	cmp	r3, r2
 800f774:	dda5      	ble.n	800f6c2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x18c>
 800f776:	e79e      	b.n	800f6b6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800f778:	2a02      	cmp	r2, #2
 800f77a:	d105      	bne.n	800f788 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 800f77c:	7be2      	ldrb	r2, [r4, #15]
 800f77e:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
 800f782:	1a80      	subs	r0, r0, r2
 800f784:	1ac0      	subs	r0, r0, r3
 800f786:	e7c0      	b.n	800f70a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d4>
 800f788:	2000      	movs	r0, #0
 800f78a:	e7bf      	b.n	800f70c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d6>
 800f78c:	7be0      	ldrb	r0, [r4, #15]
 800f78e:	e7bd      	b.n	800f70c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d6>
 800f790:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800f794:	e7c3      	b.n	800f71e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e8>
 800f796:	9b08      	ldr	r3, [sp, #32]
 800f798:	2b00      	cmp	r3, #0
 800f79a:	d0f7      	beq.n	800f78c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 800f79c:	2264      	movs	r2, #100	; 0x64
 800f79e:	4639      	mov	r1, r7
 800f7a0:	a84b      	add	r0, sp, #300	; 0x12c
 800f7a2:	f010 f82f 	bl	801f804 <memcpy>
 800f7a6:	2300      	movs	r3, #0
 800f7a8:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800f7ac:	6821      	ldr	r1, [r4, #0]
 800f7ae:	a84b      	add	r0, sp, #300	; 0x12c
 800f7b0:	f7ff fbee 	bl	800ef90 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 800f7b4:	b203      	sxth	r3, r0
 800f7b6:	e79f      	b.n	800f6f8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c2>

0800f7b8 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 800f7b8:	2b03      	cmp	r3, #3
 800f7ba:	d818      	bhi.n	800f7ee <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 800f7bc:	e8df f003 	tbb	[pc, r3]
 800f7c0:	130d0602 	.word	0x130d0602
 800f7c4:	f9b0 2000 	ldrsh.w	r2, [r0]
 800f7c8:	1850      	adds	r0, r2, r1
 800f7ca:	4770      	bx	lr
 800f7cc:	8803      	ldrh	r3, [r0, #0]
 800f7ce:	8880      	ldrh	r0, [r0, #4]
 800f7d0:	4418      	add	r0, r3
 800f7d2:	b200      	sxth	r0, r0
 800f7d4:	1a80      	subs	r0, r0, r2
 800f7d6:	3801      	subs	r0, #1
 800f7d8:	4770      	bx	lr
 800f7da:	8803      	ldrh	r3, [r0, #0]
 800f7dc:	8880      	ldrh	r0, [r0, #4]
 800f7de:	4418      	add	r0, r3
 800f7e0:	b200      	sxth	r0, r0
 800f7e2:	1a40      	subs	r0, r0, r1
 800f7e4:	e7f7      	b.n	800f7d6 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 800f7e6:	f9b0 0000 	ldrsh.w	r0, [r0]
 800f7ea:	4410      	add	r0, r2
 800f7ec:	4770      	bx	lr
 800f7ee:	2000      	movs	r0, #0
 800f7f0:	4770      	bx	lr

0800f7f2 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 800f7f2:	2b03      	cmp	r3, #3
 800f7f4:	d817      	bhi.n	800f826 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 800f7f6:	e8df f003 	tbb	[pc, r3]
 800f7fa:	0602      	.short	0x0602
 800f7fc:	1009      	.short	0x1009
 800f7fe:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 800f802:	1850      	adds	r0, r2, r1
 800f804:	4770      	bx	lr
 800f806:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800f80a:	e7fa      	b.n	800f802 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 800f80c:	8843      	ldrh	r3, [r0, #2]
 800f80e:	88c0      	ldrh	r0, [r0, #6]
 800f810:	4418      	add	r0, r3
 800f812:	b200      	sxth	r0, r0
 800f814:	1a80      	subs	r0, r0, r2
 800f816:	3801      	subs	r0, #1
 800f818:	4770      	bx	lr
 800f81a:	8843      	ldrh	r3, [r0, #2]
 800f81c:	88c0      	ldrh	r0, [r0, #6]
 800f81e:	4418      	add	r0, r3
 800f820:	b200      	sxth	r0, r0
 800f822:	1a40      	subs	r0, r0, r1
 800f824:	e7f7      	b.n	800f816 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 800f826:	2000      	movs	r0, #0
 800f828:	4770      	bx	lr
	...

0800f82c <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 800f82c:	4b01      	ldr	r3, [pc, #4]	; (800f834 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 800f82e:	2200      	movs	r2, #0
 800f830:	601a      	str	r2, [r3, #0]
 800f832:	4770      	bx	lr
 800f834:	20017468 	.word	0x20017468

0800f838 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 800f838:	4603      	mov	r3, r0
 800f83a:	b1c8      	cbz	r0, 800f870 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 800f83c:	0c02      	lsrs	r2, r0, #16
 800f83e:	0412      	lsls	r2, r2, #16
 800f840:	b9a2      	cbnz	r2, 800f86c <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 800f842:	0403      	lsls	r3, r0, #16
 800f844:	2010      	movs	r0, #16
 800f846:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 800f84a:	bf04      	itt	eq
 800f84c:	021b      	lsleq	r3, r3, #8
 800f84e:	3008      	addeq	r0, #8
 800f850:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 800f854:	bf04      	itt	eq
 800f856:	011b      	lsleq	r3, r3, #4
 800f858:	3004      	addeq	r0, #4
 800f85a:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 800f85e:	bf04      	itt	eq
 800f860:	009b      	lsleq	r3, r3, #2
 800f862:	3002      	addeq	r0, #2
 800f864:	2b00      	cmp	r3, #0
 800f866:	db04      	blt.n	800f872 <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 800f868:	3001      	adds	r0, #1
 800f86a:	4770      	bx	lr
 800f86c:	2000      	movs	r0, #0
 800f86e:	e7ea      	b.n	800f846 <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 800f870:	2020      	movs	r0, #32
 800f872:	4770      	bx	lr

0800f874 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 800f874:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f878:	b087      	sub	sp, #28
 800f87a:	4681      	mov	r9, r0
 800f87c:	4698      	mov	r8, r3
 800f87e:	4610      	mov	r0, r2
 800f880:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 800f884:	460d      	mov	r5, r1
 800f886:	b981      	cbnz	r1, 800f8aa <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x36>
 800f888:	b14b      	cbz	r3, 800f89e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x2a>
 800f88a:	460b      	mov	r3, r1
 800f88c:	e9cd 4700 	strd	r4, r7, [sp]
 800f890:	464a      	mov	r2, r9
 800f892:	4641      	mov	r1, r8
 800f894:	f7ff ffee 	bl	800f874 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800f898:	b007      	add	sp, #28
 800f89a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f89e:	f04f 33ff 	mov.w	r3, #4294967295
 800f8a2:	603b      	str	r3, [r7, #0]
 800f8a4:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 800f8a8:	e7f6      	b.n	800f898 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 800f8aa:	fa32 fa01 	lsrs.w	sl, r2, r1
 800f8ae:	d107      	bne.n	800f8c0 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4c>
 800f8b0:	fb09 f602 	mul.w	r6, r9, r2
 800f8b4:	fbb6 f0f4 	udiv	r0, r6, r4
 800f8b8:	fb04 6610 	mls	r6, r4, r0, r6
 800f8bc:	603e      	str	r6, [r7, #0]
 800f8be:	e7eb      	b.n	800f898 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 800f8c0:	2601      	movs	r6, #1
 800f8c2:	408e      	lsls	r6, r1
 800f8c4:	3e01      	subs	r6, #1
 800f8c6:	4016      	ands	r6, r2
 800f8c8:	fa09 fb01 	lsl.w	fp, r9, r1
 800f8cc:	4630      	mov	r0, r6
 800f8ce:	fbbb f3f4 	udiv	r3, fp, r4
 800f8d2:	9302      	str	r3, [sp, #8]
 800f8d4:	fb0a f303 	mul.w	r3, sl, r3
 800f8d8:	9303      	str	r3, [sp, #12]
 800f8da:	f7ff ffad 	bl	800f838 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800f8de:	464a      	mov	r2, r9
 800f8e0:	460b      	mov	r3, r1
 800f8e2:	e9cd 4700 	strd	r4, r7, [sp]
 800f8e6:	4601      	mov	r1, r0
 800f8e8:	4630      	mov	r0, r6
 800f8ea:	f7ff ffc3 	bl	800f874 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800f8ee:	9b02      	ldr	r3, [sp, #8]
 800f8f0:	fb04 bb13 	mls	fp, r4, r3, fp
 800f8f4:	4606      	mov	r6, r0
 800f8f6:	4658      	mov	r0, fp
 800f8f8:	eb05 0108 	add.w	r1, r5, r8
 800f8fc:	f7ff ff9c 	bl	800f838 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800f900:	ab05      	add	r3, sp, #20
 800f902:	e9cd 4300 	strd	r4, r3, [sp]
 800f906:	465a      	mov	r2, fp
 800f908:	4603      	mov	r3, r0
 800f90a:	4650      	mov	r0, sl
 800f90c:	f7ff ffb2 	bl	800f874 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800f910:	6839      	ldr	r1, [r7, #0]
 800f912:	9a05      	ldr	r2, [sp, #20]
 800f914:	9b03      	ldr	r3, [sp, #12]
 800f916:	4411      	add	r1, r2
 800f918:	fbb1 f2f4 	udiv	r2, r1, r4
 800f91c:	18d3      	adds	r3, r2, r3
 800f91e:	441e      	add	r6, r3
 800f920:	fb04 1412 	mls	r4, r4, r2, r1
 800f924:	4430      	add	r0, r6
 800f926:	603c      	str	r4, [r7, #0]
 800f928:	e7b6      	b.n	800f898 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>

0800f92a <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 800f92a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f92e:	b085      	sub	sp, #20
 800f930:	f1b0 0900 	subs.w	r9, r0, #0
 800f934:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 800f936:	461d      	mov	r5, r3
 800f938:	bfbf      	itttt	lt
 800f93a:	6823      	ldrlt	r3, [r4, #0]
 800f93c:	425b      	neglt	r3, r3
 800f93e:	f1c9 0900 	rsblt	r9, r9, #0
 800f942:	6023      	strlt	r3, [r4, #0]
 800f944:	bfb4      	ite	lt
 800f946:	f04f 36ff 	movlt.w	r6, #4294967295
 800f94a:	2601      	movge	r6, #1
 800f94c:	2a00      	cmp	r2, #0
 800f94e:	4617      	mov	r7, r2
 800f950:	da04      	bge.n	800f95c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 800f952:	6823      	ldr	r3, [r4, #0]
 800f954:	425b      	negs	r3, r3
 800f956:	4257      	negs	r7, r2
 800f958:	4276      	negs	r6, r6
 800f95a:	6023      	str	r3, [r4, #0]
 800f95c:	2d00      	cmp	r5, #0
 800f95e:	4638      	mov	r0, r7
 800f960:	bfba      	itte	lt
 800f962:	426d      	neglt	r5, r5
 800f964:	f04f 38ff 	movlt.w	r8, #4294967295
 800f968:	f04f 0801 	movge.w	r8, #1
 800f96c:	f7ff ff64 	bl	800f838 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800f970:	ab03      	add	r3, sp, #12
 800f972:	e9cd 5300 	strd	r5, r3, [sp]
 800f976:	463a      	mov	r2, r7
 800f978:	4603      	mov	r3, r0
 800f97a:	4648      	mov	r0, r9
 800f97c:	f7ff ff7a 	bl	800f874 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800f980:	6823      	ldr	r3, [r4, #0]
 800f982:	9a03      	ldr	r2, [sp, #12]
 800f984:	4546      	cmp	r6, r8
 800f986:	441a      	add	r2, r3
 800f988:	fb92 f3f5 	sdiv	r3, r2, r5
 800f98c:	4418      	add	r0, r3
 800f98e:	bf18      	it	ne
 800f990:	4240      	negne	r0, r0
 800f992:	fb05 2313 	mls	r3, r5, r3, r2
 800f996:	1c72      	adds	r2, r6, #1
 800f998:	6023      	str	r3, [r4, #0]
 800f99a:	d105      	bne.n	800f9a8 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 800f99c:	2b00      	cmp	r3, #0
 800f99e:	f1c3 0200 	rsb	r2, r3, #0
 800f9a2:	db0b      	blt.n	800f9bc <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 800f9a4:	6022      	str	r2, [r4, #0]
 800f9a6:	e006      	b.n	800f9b6 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800f9a8:	2e01      	cmp	r6, #1
 800f9aa:	d104      	bne.n	800f9b6 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800f9ac:	2b00      	cmp	r3, #0
 800f9ae:	da02      	bge.n	800f9b6 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800f9b0:	442b      	add	r3, r5
 800f9b2:	3801      	subs	r0, #1
 800f9b4:	6023      	str	r3, [r4, #0]
 800f9b6:	b005      	add	sp, #20
 800f9b8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800f9bc:	3801      	subs	r0, #1
 800f9be:	1b52      	subs	r2, r2, r5
 800f9c0:	e7f0      	b.n	800f9a4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>
	...

0800f9c4 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 800f9c4:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800f9c8:	4c1c      	ldr	r4, [pc, #112]	; (800fa3c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 800f9ca:	6807      	ldr	r7, [r0, #0]
 800f9cc:	69a3      	ldr	r3, [r4, #24]
 800f9ce:	4605      	mov	r5, r0
 800f9d0:	b92b      	cbnz	r3, 800f9de <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 800f9d2:	6840      	ldr	r0, [r0, #4]
 800f9d4:	e9c5 7000 	strd	r7, r0, [r5]
 800f9d8:	b004      	add	sp, #16
 800f9da:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f9de:	68a2      	ldr	r2, [r4, #8]
 800f9e0:	6820      	ldr	r0, [r4, #0]
 800f9e2:	ae04      	add	r6, sp, #16
 800f9e4:	f04f 0802 	mov.w	r8, #2
 800f9e8:	fb93 f1f8 	sdiv	r1, r3, r8
 800f9ec:	440a      	add	r2, r1
 800f9ee:	f846 2d04 	str.w	r2, [r6, #-4]!
 800f9f2:	69e1      	ldr	r1, [r4, #28]
 800f9f4:	9600      	str	r6, [sp, #0]
 800f9f6:	463a      	mov	r2, r7
 800f9f8:	f7ff ff97 	bl	800f92a <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800f9fc:	69a3      	ldr	r3, [r4, #24]
 800f9fe:	686a      	ldr	r2, [r5, #4]
 800fa00:	6a21      	ldr	r1, [r4, #32]
 800fa02:	9600      	str	r6, [sp, #0]
 800fa04:	4607      	mov	r7, r0
 800fa06:	6860      	ldr	r0, [r4, #4]
 800fa08:	f7ff ff8f 	bl	800f92a <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800fa0c:	6962      	ldr	r2, [r4, #20]
 800fa0e:	69a3      	ldr	r3, [r4, #24]
 800fa10:	fb93 f8f8 	sdiv	r8, r3, r8
 800fa14:	4442      	add	r2, r8
 800fa16:	9203      	str	r2, [sp, #12]
 800fa18:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800fa1a:	682a      	ldr	r2, [r5, #0]
 800fa1c:	9600      	str	r6, [sp, #0]
 800fa1e:	4407      	add	r7, r0
 800fa20:	68e0      	ldr	r0, [r4, #12]
 800fa22:	f7ff ff82 	bl	800f92a <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800fa26:	9600      	str	r6, [sp, #0]
 800fa28:	4680      	mov	r8, r0
 800fa2a:	69a3      	ldr	r3, [r4, #24]
 800fa2c:	686a      	ldr	r2, [r5, #4]
 800fa2e:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 800fa30:	6920      	ldr	r0, [r4, #16]
 800fa32:	f7ff ff7a 	bl	800f92a <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800fa36:	4440      	add	r0, r8
 800fa38:	e7cc      	b.n	800f9d4 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 800fa3a:	bf00      	nop
 800fa3c:	2001746c 	.word	0x2001746c

0800fa40 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 800fa40:	4b07      	ldr	r3, [pc, #28]	; (800fa60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 800fa42:	781b      	ldrb	r3, [r3, #0]
 800fa44:	2b01      	cmp	r3, #1
 800fa46:	d109      	bne.n	800fa5c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 800fa48:	f9b1 3000 	ldrsh.w	r3, [r1]
 800fa4c:	f9b0 2000 	ldrsh.w	r2, [r0]
 800fa50:	8003      	strh	r3, [r0, #0]
 800fa52:	4b04      	ldr	r3, [pc, #16]	; (800fa64 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 800fa54:	881b      	ldrh	r3, [r3, #0]
 800fa56:	3b01      	subs	r3, #1
 800fa58:	1a9b      	subs	r3, r3, r2
 800fa5a:	800b      	strh	r3, [r1, #0]
 800fa5c:	4770      	bx	lr
 800fa5e:	bf00      	nop
 800fa60:	20017450 	.word	0x20017450
 800fa64:	2001744c 	.word	0x2001744c

0800fa68 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 800fa68:	b510      	push	{r4, lr}
 800fa6a:	4b07      	ldr	r3, [pc, #28]	; (800fa88 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 800fa6c:	781b      	ldrb	r3, [r3, #0]
 800fa6e:	2b01      	cmp	r3, #1
 800fa70:	d108      	bne.n	800fa84 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 800fa72:	4b06      	ldr	r3, [pc, #24]	; (800fa8c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 800fa74:	880c      	ldrh	r4, [r1, #0]
 800fa76:	881b      	ldrh	r3, [r3, #0]
 800fa78:	f9b0 2000 	ldrsh.w	r2, [r0]
 800fa7c:	3b01      	subs	r3, #1
 800fa7e:	1b1b      	subs	r3, r3, r4
 800fa80:	8003      	strh	r3, [r0, #0]
 800fa82:	800a      	strh	r2, [r1, #0]
 800fa84:	bd10      	pop	{r4, pc}
 800fa86:	bf00      	nop
 800fa88:	20017450 	.word	0x20017450
 800fa8c:	2001744c 	.word	0x2001744c

0800fa90 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 800fa90:	b510      	push	{r4, lr}
 800fa92:	4b0a      	ldr	r3, [pc, #40]	; (800fabc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 800fa94:	781b      	ldrb	r3, [r3, #0]
 800fa96:	2b01      	cmp	r3, #1
 800fa98:	d10e      	bne.n	800fab8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 800fa9a:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800fa9e:	8843      	ldrh	r3, [r0, #2]
 800faa0:	f9b0 4000 	ldrsh.w	r4, [r0]
 800faa4:	8044      	strh	r4, [r0, #2]
 800faa6:	18ca      	adds	r2, r1, r3
 800faa8:	4b05      	ldr	r3, [pc, #20]	; (800fac0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 800faaa:	881b      	ldrh	r3, [r3, #0]
 800faac:	1a9b      	subs	r3, r3, r2
 800faae:	8003      	strh	r3, [r0, #0]
 800fab0:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800fab4:	80c3      	strh	r3, [r0, #6]
 800fab6:	8081      	strh	r1, [r0, #4]
 800fab8:	bd10      	pop	{r4, pc}
 800faba:	bf00      	nop
 800fabc:	20017450 	.word	0x20017450
 800fac0:	2001744c 	.word	0x2001744c

0800fac4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 800fac4:	4b08      	ldr	r3, [pc, #32]	; (800fae8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 800fac6:	781b      	ldrb	r3, [r3, #0]
 800fac8:	2b01      	cmp	r3, #1
 800faca:	d10c      	bne.n	800fae6 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 800facc:	8803      	ldrh	r3, [r0, #0]
 800face:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 800fad2:	8842      	ldrh	r2, [r0, #2]
 800fad4:	8002      	strh	r2, [r0, #0]
 800fad6:	185a      	adds	r2, r3, r1
 800fad8:	4b04      	ldr	r3, [pc, #16]	; (800faec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 800fada:	881b      	ldrh	r3, [r3, #0]
 800fadc:	1a9b      	subs	r3, r3, r2
 800fade:	8043      	strh	r3, [r0, #2]
 800fae0:	88c3      	ldrh	r3, [r0, #6]
 800fae2:	8083      	strh	r3, [r0, #4]
 800fae4:	80c1      	strh	r1, [r0, #6]
 800fae6:	4770      	bx	lr
 800fae8:	20017450 	.word	0x20017450
 800faec:	2001744c 	.word	0x2001744c

0800faf0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 800faf0:	b510      	push	{r4, lr}
 800faf2:	4b07      	ldr	r3, [pc, #28]	; (800fb10 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 800faf4:	781b      	ldrb	r3, [r3, #0]
 800faf6:	2b01      	cmp	r3, #1
 800faf8:	d108      	bne.n	800fb0c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 800fafa:	f9b1 3000 	ldrsh.w	r3, [r1]
 800fafe:	f9b0 4000 	ldrsh.w	r4, [r0]
 800fb02:	8003      	strh	r3, [r0, #0]
 800fb04:	8893      	ldrh	r3, [r2, #4]
 800fb06:	3b01      	subs	r3, #1
 800fb08:	1b1b      	subs	r3, r3, r4
 800fb0a:	800b      	strh	r3, [r1, #0]
 800fb0c:	bd10      	pop	{r4, pc}
 800fb0e:	bf00      	nop
 800fb10:	20017450 	.word	0x20017450

0800fb14 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 800fb14:	b510      	push	{r4, lr}
 800fb16:	4b0a      	ldr	r3, [pc, #40]	; (800fb40 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 800fb18:	781b      	ldrb	r3, [r3, #0]
 800fb1a:	2b01      	cmp	r3, #1
 800fb1c:	460a      	mov	r2, r1
 800fb1e:	d10d      	bne.n	800fb3c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 800fb20:	8881      	ldrh	r1, [r0, #4]
 800fb22:	8803      	ldrh	r3, [r0, #0]
 800fb24:	440b      	add	r3, r1
 800fb26:	4601      	mov	r1, r0
 800fb28:	3b01      	subs	r3, #1
 800fb2a:	f821 3b02 	strh.w	r3, [r1], #2
 800fb2e:	f7ff ffdf 	bl	800faf0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 800fb32:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800fb36:	88c2      	ldrh	r2, [r0, #6]
 800fb38:	8082      	strh	r2, [r0, #4]
 800fb3a:	80c3      	strh	r3, [r0, #6]
 800fb3c:	bd10      	pop	{r4, pc}
 800fb3e:	bf00      	nop
 800fb40:	20017450 	.word	0x20017450

0800fb44 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 800fb44:	b570      	push	{r4, r5, r6, lr}
 800fb46:	4c0b      	ldr	r4, [pc, #44]	; (800fb74 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 800fb48:	2300      	movs	r3, #0
 800fb4a:	4605      	mov	r5, r0
 800fb4c:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 800fb50:	6820      	ldr	r0, [r4, #0]
 800fb52:	460e      	mov	r6, r1
 800fb54:	b110      	cbz	r0, 800fb5c <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x18>
 800fb56:	6803      	ldr	r3, [r0, #0]
 800fb58:	695b      	ldr	r3, [r3, #20]
 800fb5a:	4798      	blx	r3
 800fb5c:	6026      	str	r6, [r4, #0]
 800fb5e:	6833      	ldr	r3, [r6, #0]
 800fb60:	4630      	mov	r0, r6
 800fb62:	68db      	ldr	r3, [r3, #12]
 800fb64:	4798      	blx	r3
 800fb66:	682b      	ldr	r3, [r5, #0]
 800fb68:	4628      	mov	r0, r5
 800fb6a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800fb6c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800fb70:	4718      	bx	r3
 800fb72:	bf00      	nop
 800fb74:	2001749c 	.word	0x2001749c

0800fb78 <_ZN8touchgfx11Application13requestRedrawEv>:
 800fb78:	4b06      	ldr	r3, [pc, #24]	; (800fb94 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 800fb7a:	f9b3 2000 	ldrsh.w	r2, [r3]
 800fb7e:	4b06      	ldr	r3, [pc, #24]	; (800fb98 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 800fb80:	f8a0 2130 	strh.w	r2, [r0, #304]	; 0x130
 800fb84:	f9b3 3000 	ldrsh.w	r3, [r3]
 800fb88:	f8a0 3132 	strh.w	r3, [r0, #306]	; 0x132
 800fb8c:	2100      	movs	r1, #0
 800fb8e:	f8c0 112c 	str.w	r1, [r0, #300]	; 0x12c
 800fb92:	4770      	bx	lr
 800fb94:	2001744c 	.word	0x2001744c
 800fb98:	2001744e 	.word	0x2001744e

0800fb9c <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 800fb9c:	4b03      	ldr	r3, [pc, #12]	; (800fbac <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 800fb9e:	6818      	ldr	r0, [r3, #0]
 800fba0:	b110      	cbz	r0, 800fba8 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 800fba2:	6803      	ldr	r3, [r0, #0]
 800fba4:	699b      	ldr	r3, [r3, #24]
 800fba6:	4718      	bx	r3
 800fba8:	4770      	bx	lr
 800fbaa:	bf00      	nop
 800fbac:	2001749c 	.word	0x2001749c

0800fbb0 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 800fbb0:	4770      	bx	lr
	...

0800fbb4 <_ZN8touchgfx11Application4drawEv>:
 800fbb4:	b507      	push	{r0, r1, r2, lr}
 800fbb6:	4b09      	ldr	r3, [pc, #36]	; (800fbdc <_ZN8touchgfx11Application4drawEv+0x28>)
 800fbb8:	f9b3 2000 	ldrsh.w	r2, [r3]
 800fbbc:	4b08      	ldr	r3, [pc, #32]	; (800fbe0 <_ZN8touchgfx11Application4drawEv+0x2c>)
 800fbbe:	f8ad 2004 	strh.w	r2, [sp, #4]
 800fbc2:	f9b3 3000 	ldrsh.w	r3, [r3]
 800fbc6:	f8ad 3006 	strh.w	r3, [sp, #6]
 800fbca:	6803      	ldr	r3, [r0, #0]
 800fbcc:	2100      	movs	r1, #0
 800fbce:	9100      	str	r1, [sp, #0]
 800fbd0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800fbd2:	4669      	mov	r1, sp
 800fbd4:	4798      	blx	r3
 800fbd6:	b003      	add	sp, #12
 800fbd8:	f85d fb04 	ldr.w	pc, [sp], #4
 800fbdc:	2001744c 	.word	0x2001744c
 800fbe0:	2001744e 	.word	0x2001744e

0800fbe4 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 800fbe4:	4b03      	ldr	r3, [pc, #12]	; (800fbf4 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 800fbe6:	6818      	ldr	r0, [r3, #0]
 800fbe8:	b110      	cbz	r0, 800fbf0 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 800fbea:	6803      	ldr	r3, [r0, #0]
 800fbec:	69db      	ldr	r3, [r3, #28]
 800fbee:	4718      	bx	r3
 800fbf0:	4770      	bx	lr
 800fbf2:	bf00      	nop
 800fbf4:	2001749c 	.word	0x2001749c

0800fbf8 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 800fbf8:	4b03      	ldr	r3, [pc, #12]	; (800fc08 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 800fbfa:	6818      	ldr	r0, [r3, #0]
 800fbfc:	b110      	cbz	r0, 800fc04 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 800fbfe:	6803      	ldr	r3, [r0, #0]
 800fc00:	6a1b      	ldr	r3, [r3, #32]
 800fc02:	4718      	bx	r3
 800fc04:	4770      	bx	lr
 800fc06:	bf00      	nop
 800fc08:	2001749c 	.word	0x2001749c

0800fc0c <_ZN8touchgfx11Application16clearCachedAreasEv>:
 800fc0c:	2300      	movs	r3, #0
 800fc0e:	f8a0 30e8 	strh.w	r3, [r0, #232]	; 0xe8
 800fc12:	4770      	bx	lr

0800fc14 <_ZN8touchgfx11Application14handleKeyEventEh>:
 800fc14:	4b03      	ldr	r3, [pc, #12]	; (800fc24 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 800fc16:	6818      	ldr	r0, [r3, #0]
 800fc18:	b110      	cbz	r0, 800fc20 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 800fc1a:	6803      	ldr	r3, [r0, #0]
 800fc1c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800fc1e:	4718      	bx	r3
 800fc20:	4770      	bx	lr
 800fc22:	bf00      	nop
 800fc24:	2001749c 	.word	0x2001749c

0800fc28 <_ZN8touchgfx11Application15handleTickEventEv>:
 800fc28:	b570      	push	{r4, r5, r6, lr}
 800fc2a:	4d32      	ldr	r5, [pc, #200]	; (800fcf4 <_ZN8touchgfx11Application15handleTickEventEv+0xcc>)
 800fc2c:	4604      	mov	r4, r0
 800fc2e:	6828      	ldr	r0, [r5, #0]
 800fc30:	b140      	cbz	r0, 800fc44 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800fc32:	7a03      	ldrb	r3, [r0, #8]
 800fc34:	b933      	cbnz	r3, 800fc44 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800fc36:	f884 3134 	strb.w	r3, [r4, #308]	; 0x134
 800fc3a:	6803      	ldr	r3, [r0, #0]
 800fc3c:	689b      	ldr	r3, [r3, #8]
 800fc3e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800fc42:	4718      	bx	r3
 800fc44:	f894 3134 	ldrb.w	r3, [r4, #308]	; 0x134
 800fc48:	b97b      	cbnz	r3, 800fc6a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800fc4a:	b170      	cbz	r0, 800fc6a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800fc4c:	7a03      	ldrb	r3, [r0, #8]
 800fc4e:	b163      	cbz	r3, 800fc6a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800fc50:	4b29      	ldr	r3, [pc, #164]	; (800fcf8 <_ZN8touchgfx11Application15handleTickEventEv+0xd0>)
 800fc52:	6818      	ldr	r0, [r3, #0]
 800fc54:	b110      	cbz	r0, 800fc5c <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 800fc56:	6803      	ldr	r3, [r0, #0]
 800fc58:	691b      	ldr	r3, [r3, #16]
 800fc5a:	4798      	blx	r3
 800fc5c:	6828      	ldr	r0, [r5, #0]
 800fc5e:	6803      	ldr	r3, [r0, #0]
 800fc60:	68db      	ldr	r3, [r3, #12]
 800fc62:	4798      	blx	r3
 800fc64:	2301      	movs	r3, #1
 800fc66:	f884 3134 	strb.w	r3, [r4, #308]	; 0x134
 800fc6a:	2500      	movs	r5, #0
 800fc6c:	f8b4 0084 	ldrh.w	r0, [r4, #132]	; 0x84
 800fc70:	42a8      	cmp	r0, r5
 800fc72:	dd0c      	ble.n	800fc8e <_ZN8touchgfx11Application15handleTickEventEv+0x66>
 800fc74:	1963      	adds	r3, r4, r5
 800fc76:	f893 2088 	ldrb.w	r2, [r3, #136]	; 0x88
 800fc7a:	b132      	cbz	r2, 800fc8a <_ZN8touchgfx11Application15handleTickEventEv+0x62>
 800fc7c:	eb05 0245 	add.w	r2, r5, r5, lsl #1
 800fc80:	4413      	add	r3, r2
 800fc82:	6858      	ldr	r0, [r3, #4]
 800fc84:	6803      	ldr	r3, [r0, #0]
 800fc86:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800fc88:	4798      	blx	r3
 800fc8a:	3501      	adds	r5, #1
 800fc8c:	e7ee      	b.n	800fc6c <_ZN8touchgfx11Application15handleTickEventEv+0x44>
 800fc8e:	2300      	movs	r3, #0
 800fc90:	461a      	mov	r2, r3
 800fc92:	4298      	cmp	r0, r3
 800fc94:	d015      	beq.n	800fcc2 <_ZN8touchgfx11Application15handleTickEventEv+0x9a>
 800fc96:	18e1      	adds	r1, r4, r3
 800fc98:	f891 5088 	ldrb.w	r5, [r1, #136]	; 0x88
 800fc9c:	b16d      	cbz	r5, 800fcba <_ZN8touchgfx11Application15handleTickEventEv+0x92>
 800fc9e:	429a      	cmp	r2, r3
 800fca0:	d00a      	beq.n	800fcb8 <_ZN8touchgfx11Application15handleTickEventEv+0x90>
 800fca2:	eb03 0643 	add.w	r6, r3, r3, lsl #1
 800fca6:	4431      	add	r1, r6
 800fca8:	684e      	ldr	r6, [r1, #4]
 800fcaa:	b291      	uxth	r1, r2
 800fcac:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 800fcb0:	604e      	str	r6, [r1, #4]
 800fcb2:	18a1      	adds	r1, r4, r2
 800fcb4:	f881 5088 	strb.w	r5, [r1, #136]	; 0x88
 800fcb8:	3201      	adds	r2, #1
 800fcba:	3301      	adds	r3, #1
 800fcbc:	e7e9      	b.n	800fc92 <_ZN8touchgfx11Application15handleTickEventEv+0x6a>
 800fcbe:	f8a4 3084 	strh.w	r3, [r4, #132]	; 0x84
 800fcc2:	f8b4 5084 	ldrh.w	r5, [r4, #132]	; 0x84
 800fcc6:	4295      	cmp	r5, r2
 800fcc8:	dd0d      	ble.n	800fce6 <_ZN8touchgfx11Application15handleTickEventEv+0xbe>
 800fcca:	1e6b      	subs	r3, r5, #1
 800fccc:	b29b      	uxth	r3, r3
 800fcce:	eb04 0183 	add.w	r1, r4, r3, lsl #2
 800fcd2:	4618      	mov	r0, r3
 800fcd4:	3104      	adds	r1, #4
 800fcd6:	4285      	cmp	r5, r0
 800fcd8:	ddf1      	ble.n	800fcbe <_ZN8touchgfx11Application15handleTickEventEv+0x96>
 800fcda:	f851 6f04 	ldr.w	r6, [r1, #4]!
 800fcde:	f841 6c04 	str.w	r6, [r1, #-4]
 800fce2:	3001      	adds	r0, #1
 800fce4:	e7f7      	b.n	800fcd6 <_ZN8touchgfx11Application15handleTickEventEv+0xae>
 800fce6:	4b04      	ldr	r3, [pc, #16]	; (800fcf8 <_ZN8touchgfx11Application15handleTickEventEv+0xd0>)
 800fce8:	6818      	ldr	r0, [r3, #0]
 800fcea:	b110      	cbz	r0, 800fcf2 <_ZN8touchgfx11Application15handleTickEventEv+0xca>
 800fcec:	6803      	ldr	r3, [r0, #0]
 800fcee:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800fcf0:	e7a5      	b.n	800fc3e <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 800fcf2:	bd70      	pop	{r4, r5, r6, pc}
 800fcf4:	200174a0 	.word	0x200174a0
 800fcf8:	2001749c 	.word	0x2001749c

0800fcfc <_ZN8touchgfx11ApplicationD1Ev>:
 800fcfc:	4770      	bx	lr

0800fcfe <_ZN8touchgfx11ApplicationD0Ev>:
 800fcfe:	b510      	push	{r4, lr}
 800fd00:	f44f 719c 	mov.w	r1, #312	; 0x138
 800fd04:	4604      	mov	r4, r0
 800fd06:	f00f fbd6 	bl	801f4b6 <_ZdlPvj>
 800fd0a:	4620      	mov	r0, r4
 800fd0c:	bd10      	pop	{r4, pc}

0800fd0e <_ZNK8touchgfx4Rect9intersectERKS0_>:
 800fd0e:	b510      	push	{r4, lr}
 800fd10:	f9b1 4000 	ldrsh.w	r4, [r1]
 800fd14:	888a      	ldrh	r2, [r1, #4]
 800fd16:	f9b0 3000 	ldrsh.w	r3, [r0]
 800fd1a:	4422      	add	r2, r4
 800fd1c:	b212      	sxth	r2, r2
 800fd1e:	4293      	cmp	r3, r2
 800fd20:	da15      	bge.n	800fd4e <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800fd22:	8882      	ldrh	r2, [r0, #4]
 800fd24:	4413      	add	r3, r2
 800fd26:	b21b      	sxth	r3, r3
 800fd28:	429c      	cmp	r4, r3
 800fd2a:	da10      	bge.n	800fd4e <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800fd2c:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800fd30:	88c9      	ldrh	r1, [r1, #6]
 800fd32:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800fd36:	4419      	add	r1, r3
 800fd38:	b209      	sxth	r1, r1
 800fd3a:	428a      	cmp	r2, r1
 800fd3c:	da07      	bge.n	800fd4e <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800fd3e:	88c0      	ldrh	r0, [r0, #6]
 800fd40:	4410      	add	r0, r2
 800fd42:	b200      	sxth	r0, r0
 800fd44:	4283      	cmp	r3, r0
 800fd46:	bfac      	ite	ge
 800fd48:	2000      	movge	r0, #0
 800fd4a:	2001      	movlt	r0, #1
 800fd4c:	bd10      	pop	{r4, pc}
 800fd4e:	2000      	movs	r0, #0
 800fd50:	e7fc      	b.n	800fd4c <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

0800fd52 <_ZN8touchgfx4Rect10restrictToEss>:
 800fd52:	f9b0 3000 	ldrsh.w	r3, [r0]
 800fd56:	2b00      	cmp	r3, #0
 800fd58:	b510      	push	{r4, lr}
 800fd5a:	da04      	bge.n	800fd66 <_ZN8touchgfx4Rect10restrictToEss+0x14>
 800fd5c:	8884      	ldrh	r4, [r0, #4]
 800fd5e:	4423      	add	r3, r4
 800fd60:	8083      	strh	r3, [r0, #4]
 800fd62:	2300      	movs	r3, #0
 800fd64:	8003      	strh	r3, [r0, #0]
 800fd66:	f9b0 4000 	ldrsh.w	r4, [r0]
 800fd6a:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800fd6e:	1b09      	subs	r1, r1, r4
 800fd70:	428b      	cmp	r3, r1
 800fd72:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800fd76:	bfc8      	it	gt
 800fd78:	8081      	strhgt	r1, [r0, #4]
 800fd7a:	2b00      	cmp	r3, #0
 800fd7c:	da04      	bge.n	800fd88 <_ZN8touchgfx4Rect10restrictToEss+0x36>
 800fd7e:	88c1      	ldrh	r1, [r0, #6]
 800fd80:	440b      	add	r3, r1
 800fd82:	80c3      	strh	r3, [r0, #6]
 800fd84:	2300      	movs	r3, #0
 800fd86:	8043      	strh	r3, [r0, #2]
 800fd88:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 800fd8c:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 800fd90:	1a52      	subs	r2, r2, r1
 800fd92:	4293      	cmp	r3, r2
 800fd94:	bfc8      	it	gt
 800fd96:	80c2      	strhgt	r2, [r0, #6]
 800fd98:	bd10      	pop	{r4, pc}
	...

0800fd9c <_ZN8touchgfx11Application4drawERNS_4RectE>:
 800fd9c:	b510      	push	{r4, lr}
 800fd9e:	4b10      	ldr	r3, [pc, #64]	; (800fde0 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 800fda0:	f9b3 2000 	ldrsh.w	r2, [r3]
 800fda4:	4b0f      	ldr	r3, [pc, #60]	; (800fde4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 800fda6:	460c      	mov	r4, r1
 800fda8:	4620      	mov	r0, r4
 800fdaa:	f9b3 1000 	ldrsh.w	r1, [r3]
 800fdae:	f7ff ffd0 	bl	800fd52 <_ZN8touchgfx4Rect10restrictToEss>
 800fdb2:	4b0d      	ldr	r3, [pc, #52]	; (800fde8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 800fdb4:	6818      	ldr	r0, [r3, #0]
 800fdb6:	b190      	cbz	r0, 800fdde <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 800fdb8:	6803      	ldr	r3, [r0, #0]
 800fdba:	4621      	mov	r1, r4
 800fdbc:	689b      	ldr	r3, [r3, #8]
 800fdbe:	4798      	blx	r3
 800fdc0:	4b0a      	ldr	r3, [pc, #40]	; (800fdec <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 800fdc2:	6818      	ldr	r0, [r3, #0]
 800fdc4:	b118      	cbz	r0, 800fdce <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 800fdc6:	6803      	ldr	r3, [r0, #0]
 800fdc8:	4621      	mov	r1, r4
 800fdca:	689b      	ldr	r3, [r3, #8]
 800fdcc:	4798      	blx	r3
 800fdce:	4b08      	ldr	r3, [pc, #32]	; (800fdf0 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 800fdd0:	6818      	ldr	r0, [r3, #0]
 800fdd2:	6803      	ldr	r3, [r0, #0]
 800fdd4:	4621      	mov	r1, r4
 800fdd6:	69db      	ldr	r3, [r3, #28]
 800fdd8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800fddc:	4718      	bx	r3
 800fdde:	bd10      	pop	{r4, pc}
 800fde0:	2001744e 	.word	0x2001744e
 800fde4:	2001744c 	.word	0x2001744c
 800fde8:	2001749c 	.word	0x2001749c
 800fdec:	20017498 	.word	0x20017498
 800fdf0:	20017458 	.word	0x20017458

0800fdf4 <_ZNK8touchgfx4Rect8includesERKS0_>:
 800fdf4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800fdf6:	4606      	mov	r6, r0
 800fdf8:	4608      	mov	r0, r1
 800fdfa:	460f      	mov	r7, r1
 800fdfc:	f7f9 fef9 	bl	8009bf2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800fe00:	b9e8      	cbnz	r0, 800fe3e <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800fe02:	f9b7 5000 	ldrsh.w	r5, [r7]
 800fe06:	f9b6 4000 	ldrsh.w	r4, [r6]
 800fe0a:	42a5      	cmp	r5, r4
 800fe0c:	db17      	blt.n	800fe3e <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800fe0e:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 800fe12:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 800fe16:	429a      	cmp	r2, r3
 800fe18:	db11      	blt.n	800fe3e <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800fe1a:	88b9      	ldrh	r1, [r7, #4]
 800fe1c:	440d      	add	r5, r1
 800fe1e:	88b1      	ldrh	r1, [r6, #4]
 800fe20:	440c      	add	r4, r1
 800fe22:	b22d      	sxth	r5, r5
 800fe24:	b224      	sxth	r4, r4
 800fe26:	42a5      	cmp	r5, r4
 800fe28:	dc09      	bgt.n	800fe3e <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800fe2a:	88f8      	ldrh	r0, [r7, #6]
 800fe2c:	4410      	add	r0, r2
 800fe2e:	88f2      	ldrh	r2, [r6, #6]
 800fe30:	4413      	add	r3, r2
 800fe32:	b200      	sxth	r0, r0
 800fe34:	b21b      	sxth	r3, r3
 800fe36:	4298      	cmp	r0, r3
 800fe38:	bfcc      	ite	gt
 800fe3a:	2000      	movgt	r0, #0
 800fe3c:	2001      	movle	r0, #1
 800fe3e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800fe40 <_ZN8touchgfx11Application11getInstanceEv>:
 800fe40:	4b01      	ldr	r3, [pc, #4]	; (800fe48 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 800fe42:	6818      	ldr	r0, [r3, #0]
 800fe44:	4770      	bx	lr
 800fe46:	bf00      	nop
 800fe48:	200174ac 	.word	0x200174ac

0800fe4c <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>:
 800fe4c:	2300      	movs	r3, #0
 800fe4e:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 800fe52:	f100 0288 	add.w	r2, r0, #136	; 0x88
 800fe56:	30a8      	adds	r0, #168	; 0xa8
 800fe58:	f802 3b01 	strb.w	r3, [r2], #1
 800fe5c:	4282      	cmp	r2, r0
 800fe5e:	d1fb      	bne.n	800fe58 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv+0xc>
 800fe60:	4770      	bx	lr

0800fe62 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 800fe62:	4603      	mov	r3, r0
 800fe64:	f100 0140 	add.w	r1, r0, #64	; 0x40
 800fe68:	2200      	movs	r2, #0
 800fe6a:	801a      	strh	r2, [r3, #0]
 800fe6c:	805a      	strh	r2, [r3, #2]
 800fe6e:	809a      	strh	r2, [r3, #4]
 800fe70:	80da      	strh	r2, [r3, #6]
 800fe72:	3308      	adds	r3, #8
 800fe74:	428b      	cmp	r3, r1
 800fe76:	d1f8      	bne.n	800fe6a <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 800fe78:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 800fe7c:	4770      	bx	lr
	...

0800fe80 <_ZN8touchgfx11ApplicationC1Ev>:
 800fe80:	b570      	push	{r4, r5, r6, lr}
 800fe82:	4b19      	ldr	r3, [pc, #100]	; (800fee8 <_ZN8touchgfx11ApplicationC1Ev+0x68>)
 800fe84:	6003      	str	r3, [r0, #0]
 800fe86:	2500      	movs	r5, #0
 800fe88:	4604      	mov	r4, r0
 800fe8a:	f8a0 5084 	strh.w	r5, [r0, #132]	; 0x84
 800fe8e:	30a8      	adds	r0, #168	; 0xa8
 800fe90:	f7ff ffe7 	bl	800fe62 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800fe94:	f104 00ea 	add.w	r0, r4, #234	; 0xea
 800fe98:	f7ff ffe3 	bl	800fe62 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800fe9c:	f8a4 512c 	strh.w	r5, [r4, #300]	; 0x12c
 800fea0:	f8a4 512e 	strh.w	r5, [r4, #302]	; 0x12e
 800fea4:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 800fea8:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 800feac:	f884 5134 	strb.w	r5, [r4, #308]	; 0x134
 800feb0:	490e      	ldr	r1, [pc, #56]	; (800feec <_ZN8touchgfx11ApplicationC1Ev+0x6c>)
 800feb2:	480f      	ldr	r0, [pc, #60]	; (800fef0 <_ZN8touchgfx11ApplicationC1Ev+0x70>)
 800feb4:	4e0f      	ldr	r6, [pc, #60]	; (800fef4 <_ZN8touchgfx11ApplicationC1Ev+0x74>)
 800feb6:	f00e fec3 	bl	801ec40 <CRC_Lock>
 800feba:	4b0f      	ldr	r3, [pc, #60]	; (800fef8 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 800febc:	b158      	cbz	r0, 800fed6 <_ZN8touchgfx11ApplicationC1Ev+0x56>
 800febe:	801d      	strh	r5, [r3, #0]
 800fec0:	4a0e      	ldr	r2, [pc, #56]	; (800fefc <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 800fec2:	2300      	movs	r3, #0
 800fec4:	6013      	str	r3, [r2, #0]
 800fec6:	4a0e      	ldr	r2, [pc, #56]	; (800ff00 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 800fec8:	6033      	str	r3, [r6, #0]
 800feca:	4620      	mov	r0, r4
 800fecc:	6013      	str	r3, [r2, #0]
 800fece:	f7ff ffbd 	bl	800fe4c <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
 800fed2:	4620      	mov	r0, r4
 800fed4:	bd70      	pop	{r4, r5, r6, pc}
 800fed6:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800feda:	2002      	movs	r0, #2
 800fedc:	801a      	strh	r2, [r3, #0]
 800fede:	6030      	str	r0, [r6, #0]
 800fee0:	f001 fae8 	bl	80114b4 <_ZN8touchgfx6Screen4drawEv>
 800fee4:	e7ec      	b.n	800fec0 <_ZN8touchgfx11ApplicationC1Ev+0x40>
 800fee6:	bf00      	nop
 800fee8:	08022bfc 	.word	0x08022bfc
 800feec:	b5e8b5cd 	.word	0xb5e8b5cd
 800fef0:	f407a5c2 	.word	0xf407a5c2
 800fef4:	2001749c 	.word	0x2001749c
 800fef8:	2000008c 	.word	0x2000008c
 800fefc:	200174ac 	.word	0x200174ac
 800ff00:	200174a0 	.word	0x200174a0

0800ff04 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 800ff04:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 800ff08:	3b01      	subs	r3, #1
 800ff0a:	b29b      	uxth	r3, r3
 800ff0c:	428b      	cmp	r3, r1
 800ff0e:	b510      	push	{r4, lr}
 800ff10:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 800ff14:	d908      	bls.n	800ff28 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 800ff16:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 800ff1a:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 800ff1e:	681a      	ldr	r2, [r3, #0]
 800ff20:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 800ff24:	685a      	ldr	r2, [r3, #4]
 800ff26:	6062      	str	r2, [r4, #4]
 800ff28:	bd10      	pop	{r4, pc}
	...

0800ff2c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 800ff2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ff30:	4b94      	ldr	r3, [pc, #592]	; (8010184 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>)
 800ff32:	b08f      	sub	sp, #60	; 0x3c
 800ff34:	ac0a      	add	r4, sp, #40	; 0x28
 800ff36:	e884 0006 	stmia.w	r4, {r1, r2}
 800ff3a:	f9b3 2000 	ldrsh.w	r2, [r3]
 800ff3e:	4b92      	ldr	r3, [pc, #584]	; (8010188 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x25c>)
 800ff40:	4683      	mov	fp, r0
 800ff42:	f9b3 1000 	ldrsh.w	r1, [r3]
 800ff46:	4620      	mov	r0, r4
 800ff48:	f7ff ff03 	bl	800fd52 <_ZN8touchgfx4Rect10restrictToEss>
 800ff4c:	4620      	mov	r0, r4
 800ff4e:	f7f9 fe50 	bl	8009bf2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800ff52:	2800      	cmp	r0, #0
 800ff54:	d16a      	bne.n	801002c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800ff56:	9403      	str	r4, [sp, #12]
 800ff58:	f8bb 50e8 	ldrh.w	r5, [fp, #232]	; 0xe8
 800ff5c:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 800ff60:	eb0b 06c5 	add.w	r6, fp, r5, lsl #3
 800ff64:	2400      	movs	r4, #0
 800ff66:	9301      	str	r3, [sp, #4]
 800ff68:	36a0      	adds	r6, #160	; 0xa0
 800ff6a:	42a5      	cmp	r5, r4
 800ff6c:	d00d      	beq.n	800ff8a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5e>
 800ff6e:	eba6 01c4 	sub.w	r1, r6, r4, lsl #3
 800ff72:	9803      	ldr	r0, [sp, #12]
 800ff74:	f7ff ff3e 	bl	800fdf4 <_ZNK8touchgfx4Rect8includesERKS0_>
 800ff78:	b128      	cbz	r0, 800ff86 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a>
 800ff7a:	1e69      	subs	r1, r5, #1
 800ff7c:	1b09      	subs	r1, r1, r4
 800ff7e:	b289      	uxth	r1, r1
 800ff80:	9801      	ldr	r0, [sp, #4]
 800ff82:	f7ff ffbf 	bl	800ff04 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800ff86:	3401      	adds	r4, #1
 800ff88:	e7ef      	b.n	800ff6a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3e>
 800ff8a:	f8bb 70e8 	ldrh.w	r7, [fp, #232]	; 0xe8
 800ff8e:	9704      	str	r7, [sp, #16]
 800ff90:	1e7b      	subs	r3, r7, #1
 800ff92:	9302      	str	r3, [sp, #8]
 800ff94:	eb0b 0ac7 	add.w	sl, fp, r7, lsl #3
 800ff98:	2400      	movs	r4, #0
 800ff9a:	4655      	mov	r5, sl
 800ff9c:	9705      	str	r7, [sp, #20]
 800ff9e:	4626      	mov	r6, r4
 800ffa0:	9b05      	ldr	r3, [sp, #20]
 800ffa2:	2b00      	cmp	r3, #0
 800ffa4:	d078      	beq.n	8010098 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x16c>
 800ffa6:	9903      	ldr	r1, [sp, #12]
 800ffa8:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 800ffac:	f7ff feaf 	bl	800fd0e <_ZNK8touchgfx4Rect9intersectERKS0_>
 800ffb0:	b360      	cbz	r0, 801000c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 800ffb2:	f9bd e028 	ldrsh.w	lr, [sp, #40]	; 0x28
 800ffb6:	f9b5 c0a0 	ldrsh.w	ip, [r5, #160]	; 0xa0
 800ffba:	f9bd 902a 	ldrsh.w	r9, [sp, #42]	; 0x2a
 800ffbe:	f9b5 80a2 	ldrsh.w	r8, [r5, #162]	; 0xa2
 800ffc2:	45e6      	cmp	lr, ip
 800ffc4:	db35      	blt.n	8010032 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 800ffc6:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 800ffca:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 800ffce:	4472      	add	r2, lr
 800ffd0:	4463      	add	r3, ip
 800ffd2:	b212      	sxth	r2, r2
 800ffd4:	b21b      	sxth	r3, r3
 800ffd6:	429a      	cmp	r2, r3
 800ffd8:	dc2b      	bgt.n	8010032 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 800ffda:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 800ffde:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 800ffe2:	fa1f f288 	uxth.w	r2, r8
 800ffe6:	4413      	add	r3, r2
 800ffe8:	b29b      	uxth	r3, r3
 800ffea:	45c1      	cmp	r9, r8
 800ffec:	fa0f fe83 	sxth.w	lr, r3
 800fff0:	fa1f fc89 	uxth.w	ip, r9
 800fff4:	db0f      	blt.n	8010016 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 800fff6:	eba3 030c 	sub.w	r3, r3, ip
 800fffa:	1ac9      	subs	r1, r1, r3
 800fffc:	b209      	sxth	r1, r1
 800fffe:	2900      	cmp	r1, #0
 8010000:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8010004:	dd12      	ble.n	801002c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8010006:	f8ad e02a 	strh.w	lr, [sp, #42]	; 0x2a
 801000a:	4604      	mov	r4, r0
 801000c:	9b05      	ldr	r3, [sp, #20]
 801000e:	3b01      	subs	r3, #1
 8010010:	9305      	str	r3, [sp, #20]
 8010012:	3d08      	subs	r5, #8
 8010014:	e7c4      	b.n	800ffa0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x74>
 8010016:	4461      	add	r1, ip
 8010018:	b209      	sxth	r1, r1
 801001a:	4571      	cmp	r1, lr
 801001c:	dc3a      	bgt.n	8010094 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 801001e:	eba2 020c 	sub.w	r2, r2, ip
 8010022:	b212      	sxth	r2, r2
 8010024:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 8010028:	2a00      	cmp	r2, #0
 801002a:	dcee      	bgt.n	801000a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 801002c:	b00f      	add	sp, #60	; 0x3c
 801002e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010032:	45c1      	cmp	r9, r8
 8010034:	db2e      	blt.n	8010094 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 8010036:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 801003a:	4499      	add	r9, r3
 801003c:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 8010040:	4498      	add	r8, r3
 8010042:	fa0f f989 	sxth.w	r9, r9
 8010046:	fa0f f888 	sxth.w	r8, r8
 801004a:	45c1      	cmp	r9, r8
 801004c:	dc22      	bgt.n	8010094 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 801004e:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 8010052:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8010056:	fa1f f28c 	uxth.w	r2, ip
 801005a:	4413      	add	r3, r2
 801005c:	b29b      	uxth	r3, r3
 801005e:	45e6      	cmp	lr, ip
 8010060:	fa1f f88e 	uxth.w	r8, lr
 8010064:	fa0f f983 	sxth.w	r9, r3
 8010068:	db0a      	blt.n	8010080 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x154>
 801006a:	eba3 0308 	sub.w	r3, r3, r8
 801006e:	1ac9      	subs	r1, r1, r3
 8010070:	b209      	sxth	r1, r1
 8010072:	2900      	cmp	r1, #0
 8010074:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 8010078:	ddd8      	ble.n	801002c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 801007a:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 801007e:	e7c4      	b.n	801000a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8010080:	4441      	add	r1, r8
 8010082:	b209      	sxth	r1, r1
 8010084:	4549      	cmp	r1, r9
 8010086:	dc05      	bgt.n	8010094 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 8010088:	eba2 0208 	sub.w	r2, r2, r8
 801008c:	b212      	sxth	r2, r2
 801008e:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 8010092:	e7c9      	b.n	8010028 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 8010094:	4606      	mov	r6, r0
 8010096:	e7b9      	b.n	801000c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 8010098:	2c00      	cmp	r4, #0
 801009a:	f47f af7d 	bne.w	800ff98 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c>
 801009e:	2e00      	cmp	r6, #0
 80100a0:	f000 81e1 	beq.w	8010466 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53a>
 80100a4:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	; 0x2a
 80100a8:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	; 0x28
 80100ac:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 80100b0:	b2b9      	uxth	r1, r7
 80100b2:	9105      	str	r1, [sp, #20]
 80100b4:	9805      	ldr	r0, [sp, #20]
 80100b6:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 80100ba:	4401      	add	r1, r0
 80100bc:	b2b3      	uxth	r3, r6
 80100be:	b289      	uxth	r1, r1
 80100c0:	441a      	add	r2, r3
 80100c2:	9106      	str	r1, [sp, #24]
 80100c4:	b292      	uxth	r2, r2
 80100c6:	f9bd 9018 	ldrsh.w	r9, [sp, #24]
 80100ca:	fa0f f882 	sxth.w	r8, r2
 80100ce:	4655      	mov	r5, sl
 80100d0:	e9cd 2307 	strd	r2, r3, [sp, #28]
 80100d4:	9b04      	ldr	r3, [sp, #16]
 80100d6:	2b00      	cmp	r3, #0
 80100d8:	d058      	beq.n	801018c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x260>
 80100da:	9903      	ldr	r1, [sp, #12]
 80100dc:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 80100e0:	f7ff fe15 	bl	800fd0e <_ZNK8touchgfx4Rect9intersectERKS0_>
 80100e4:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 80100e8:	b1d8      	cbz	r0, 8010122 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 80100ea:	f9b5 e0a0 	ldrsh.w	lr, [r5, #160]	; 0xa0
 80100ee:	f9b5 10a2 	ldrsh.w	r1, [r5, #162]	; 0xa2
 80100f2:	4576      	cmp	r6, lr
 80100f4:	dc26      	bgt.n	8010144 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x218>
 80100f6:	f8b5 c0a4 	ldrh.w	ip, [r5, #164]	; 0xa4
 80100fa:	44f4      	add	ip, lr
 80100fc:	fa0f fc8c 	sxth.w	ip, ip
 8010100:	45e0      	cmp	r8, ip
 8010102:	db1f      	blt.n	8010144 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x218>
 8010104:	428f      	cmp	r7, r1
 8010106:	fa1f fc81 	uxth.w	ip, r1
 801010a:	f8b5 10a6 	ldrh.w	r1, [r5, #166]	; 0xa6
 801010e:	dc0f      	bgt.n	8010130 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x204>
 8010110:	9806      	ldr	r0, [sp, #24]
 8010112:	f8a5 90a2 	strh.w	r9, [r5, #162]	; 0xa2
 8010116:	eba0 0c0c 	sub.w	ip, r0, ip
 801011a:	eba1 010c 	sub.w	r1, r1, ip
 801011e:	f8a5 10a6 	strh.w	r1, [r5, #166]	; 0xa6
 8010122:	4620      	mov	r0, r4
 8010124:	9904      	ldr	r1, [sp, #16]
 8010126:	3901      	subs	r1, #1
 8010128:	9104      	str	r1, [sp, #16]
 801012a:	3d08      	subs	r5, #8
 801012c:	4604      	mov	r4, r0
 801012e:	e7cf      	b.n	80100d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a4>
 8010130:	4461      	add	r1, ip
 8010132:	b209      	sxth	r1, r1
 8010134:	4549      	cmp	r1, r9
 8010136:	dcf5      	bgt.n	8010124 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 8010138:	9905      	ldr	r1, [sp, #20]
 801013a:	eba1 0c0c 	sub.w	ip, r1, ip
 801013e:	f8a5 c0a6 	strh.w	ip, [r5, #166]	; 0xa6
 8010142:	e7ee      	b.n	8010122 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 8010144:	428f      	cmp	r7, r1
 8010146:	dced      	bgt.n	8010124 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 8010148:	f8b5 c0a6 	ldrh.w	ip, [r5, #166]	; 0xa6
 801014c:	4461      	add	r1, ip
 801014e:	b209      	sxth	r1, r1
 8010150:	4589      	cmp	r9, r1
 8010152:	dbe7      	blt.n	8010124 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 8010154:	4576      	cmp	r6, lr
 8010156:	fa1f fc8e 	uxth.w	ip, lr
 801015a:	f8b5 10a4 	ldrh.w	r1, [r5, #164]	; 0xa4
 801015e:	dc08      	bgt.n	8010172 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x246>
 8010160:	eba2 0c0c 	sub.w	ip, r2, ip
 8010164:	eba1 010c 	sub.w	r1, r1, ip
 8010168:	f8a5 80a0 	strh.w	r8, [r5, #160]	; 0xa0
 801016c:	f8a5 10a4 	strh.w	r1, [r5, #164]	; 0xa4
 8010170:	e7d7      	b.n	8010122 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 8010172:	4461      	add	r1, ip
 8010174:	b209      	sxth	r1, r1
 8010176:	4588      	cmp	r8, r1
 8010178:	dbd4      	blt.n	8010124 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 801017a:	eba3 0c0c 	sub.w	ip, r3, ip
 801017e:	f8a5 c0a4 	strh.w	ip, [r5, #164]	; 0xa4
 8010182:	e7ce      	b.n	8010122 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 8010184:	2001744e 	.word	0x2001744e
 8010188:	2001744c 	.word	0x2001744c
 801018c:	2c00      	cmp	r4, #0
 801018e:	f000 816a 	beq.w	8010466 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53a>
 8010192:	9b02      	ldr	r3, [sp, #8]
 8010194:	3301      	adds	r3, #1
 8010196:	f000 8166 	beq.w	8010466 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53a>
 801019a:	f10a 04a0 	add.w	r4, sl, #160	; 0xa0
 801019e:	4621      	mov	r1, r4
 80101a0:	9803      	ldr	r0, [sp, #12]
 80101a2:	f7ff fe27 	bl	800fdf4 <_ZNK8touchgfx4Rect8includesERKS0_>
 80101a6:	b120      	cbz	r0, 80101b2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x286>
 80101a8:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 80101ac:	9801      	ldr	r0, [sp, #4]
 80101ae:	f7ff fea9 	bl	800ff04 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80101b2:	9903      	ldr	r1, [sp, #12]
 80101b4:	4620      	mov	r0, r4
 80101b6:	f7ff fdaa 	bl	800fd0e <_ZNK8touchgfx4Rect9intersectERKS0_>
 80101ba:	2800      	cmp	r0, #0
 80101bc:	f000 809b 	beq.w	80102f6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ca>
 80101c0:	f9ba 00a0 	ldrsh.w	r0, [sl, #160]	; 0xa0
 80101c4:	f9ba 30a4 	ldrsh.w	r3, [sl, #164]	; 0xa4
 80101c8:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 80101cc:	9309      	str	r3, [sp, #36]	; 0x24
 80101ce:	b281      	uxth	r1, r0
 80101d0:	eb01 0c03 	add.w	ip, r1, r3
 80101d4:	fa1f f98c 	uxth.w	r9, ip
 80101d8:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 80101dc:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	; 0x2a
 80101e0:	f9ba 20a2 	ldrsh.w	r2, [sl, #162]	; 0xa2
 80101e4:	b2ab      	uxth	r3, r5
 80101e6:	eb03 040c 	add.w	r4, r3, ip
 80101ea:	b2a4      	uxth	r4, r4
 80101ec:	9405      	str	r4, [sp, #20]
 80101ee:	f9bd 4014 	ldrsh.w	r4, [sp, #20]
 80101f2:	9404      	str	r4, [sp, #16]
 80101f4:	4285      	cmp	r5, r0
 80101f6:	f8bb 40e8 	ldrh.w	r4, [fp, #232]	; 0xe8
 80101fa:	f340 809a 	ble.w	8010332 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x406>
 80101fe:	1a5b      	subs	r3, r3, r1
 8010200:	b29b      	uxth	r3, r3
 8010202:	4596      	cmp	lr, r2
 8010204:	fa0f f589 	sxth.w	r5, r9
 8010208:	b21e      	sxth	r6, r3
 801020a:	dd2e      	ble.n	801026a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x33e>
 801020c:	9f02      	ldr	r7, [sp, #8]
 801020e:	f8bd 002e 	ldrh.w	r0, [sp, #46]	; 0x2e
 8010212:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 8010216:	9f04      	ldr	r7, [sp, #16]
 8010218:	1b7f      	subs	r7, r7, r5
 801021a:	f8b8 50ae 	ldrh.w	r5, [r8, #174]	; 0xae
 801021e:	fa1f fe8e 	uxth.w	lr, lr
 8010222:	b292      	uxth	r2, r2
 8010224:	ebae 0102 	sub.w	r1, lr, r2
 8010228:	4486      	add	lr, r0
 801022a:	442a      	add	r2, r5
 801022c:	b289      	uxth	r1, r1
 801022e:	fa0f fe8e 	sxth.w	lr, lr
 8010232:	b212      	sxth	r2, r2
 8010234:	b20c      	sxth	r4, r1
 8010236:	ebae 0202 	sub.w	r2, lr, r2
 801023a:	4367      	muls	r7, r4
 801023c:	4372      	muls	r2, r6
 801023e:	4297      	cmp	r7, r2
 8010240:	db09      	blt.n	8010256 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x32a>
 8010242:	f8b8 20a8 	ldrh.w	r2, [r8, #168]	; 0xa8
 8010246:	f8a8 40ae 	strh.w	r4, [r8, #174]	; 0xae
 801024a:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801024e:	449c      	add	ip, r3
 8010250:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8010254:	e680      	b.n	800ff58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8010256:	4401      	add	r1, r0
 8010258:	f8b8 30aa 	ldrh.w	r3, [r8, #170]	; 0xaa
 801025c:	f8a8 60ac 	strh.w	r6, [r8, #172]	; 0xac
 8010260:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8010264:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8010268:	e676      	b.n	800ff58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 801026a:	9f04      	ldr	r7, [sp, #16]
 801026c:	42bd      	cmp	r5, r7
 801026e:	da27      	bge.n	80102c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x394>
 8010270:	9902      	ldr	r1, [sp, #8]
 8010272:	f8bd 402e 	ldrh.w	r4, [sp, #46]	; 0x2e
 8010276:	eb0b 00c1 	add.w	r0, fp, r1, lsl #3
 801027a:	eb04 010e 	add.w	r1, r4, lr
 801027e:	fa1f f881 	uxth.w	r8, r1
 8010282:	f8b0 10ae 	ldrh.w	r1, [r0, #174]	; 0xae
 8010286:	4411      	add	r1, r2
 8010288:	eba1 0108 	sub.w	r1, r1, r8
 801028c:	b289      	uxth	r1, r1
 801028e:	fa0f f988 	sxth.w	r9, r8
 8010292:	eba2 020e 	sub.w	r2, r2, lr
 8010296:	fa0f f881 	sxth.w	r8, r1
 801029a:	1b7f      	subs	r7, r7, r5
 801029c:	4372      	muls	r2, r6
 801029e:	fb08 f707 	mul.w	r7, r8, r7
 80102a2:	42ba      	cmp	r2, r7
 80102a4:	dc06      	bgt.n	80102b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 80102a6:	f8a0 90aa 	strh.w	r9, [r0, #170]	; 0xaa
 80102aa:	f8a0 80ae 	strh.w	r8, [r0, #174]	; 0xae
 80102ae:	f8b0 20a8 	ldrh.w	r2, [r0, #168]	; 0xa8
 80102b2:	e7ca      	b.n	801024a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 80102b4:	f8a0 60ac 	strh.w	r6, [r0, #172]	; 0xac
 80102b8:	4421      	add	r1, r4
 80102ba:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 80102be:	e64b      	b.n	800ff58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80102c0:	9d05      	ldr	r5, [sp, #20]
 80102c2:	eba9 0505 	sub.w	r5, r9, r5
 80102c6:	b2ad      	uxth	r5, r5
 80102c8:	2c06      	cmp	r4, #6
 80102ca:	fa0f fe85 	sxth.w	lr, r5
 80102ce:	d818      	bhi.n	8010302 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3d6>
 80102d0:	9b04      	ldr	r3, [sp, #16]
 80102d2:	f8aa 30a0 	strh.w	r3, [sl, #160]	; 0xa0
 80102d6:	1c63      	adds	r3, r4, #1
 80102d8:	f9ba 10a6 	ldrsh.w	r1, [sl, #166]	; 0xa6
 80102dc:	f8aa e0a4 	strh.w	lr, [sl, #164]	; 0xa4
 80102e0:	f8ab 30e8 	strh.w	r3, [fp, #232]	; 0xe8
 80102e4:	9b01      	ldr	r3, [sp, #4]
 80102e6:	9d01      	ldr	r5, [sp, #4]
 80102e8:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 80102ec:	f825 0034 	strh.w	r0, [r5, r4, lsl #3]
 80102f0:	805a      	strh	r2, [r3, #2]
 80102f2:	809e      	strh	r6, [r3, #4]
 80102f4:	80d9      	strh	r1, [r3, #6]
 80102f6:	9b02      	ldr	r3, [sp, #8]
 80102f8:	3b01      	subs	r3, #1
 80102fa:	9302      	str	r3, [sp, #8]
 80102fc:	f1aa 0a08 	sub.w	sl, sl, #8
 8010300:	e747      	b.n	8010192 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x266>
 8010302:	9a02      	ldr	r2, [sp, #8]
 8010304:	45b6      	cmp	lr, r6
 8010306:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 801030a:	db0d      	blt.n	8010328 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3fc>
 801030c:	449c      	add	ip, r3
 801030e:	fa1f fc8c 	uxth.w	ip, ip
 8010312:	445a      	add	r2, fp
 8010314:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8010318:	448c      	add	ip, r1
 801031a:	f8ad 0028 	strh.w	r0, [sp, #40]	; 0x28
 801031e:	f8a2 c0a8 	strh.w	ip, [r2, #168]	; 0xa8
 8010322:	f8a2 e0ac 	strh.w	lr, [r2, #172]	; 0xac
 8010326:	e617      	b.n	800ff58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8010328:	445a      	add	r2, fp
 801032a:	44ac      	add	ip, r5
 801032c:	f8a2 60ac 	strh.w	r6, [r2, #172]	; 0xac
 8010330:	e78e      	b.n	8010250 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x324>
 8010332:	f8bd 602e 	ldrh.w	r6, [sp, #46]	; 0x2e
 8010336:	fa1f f18e 	uxth.w	r1, lr
 801033a:	eb01 0806 	add.w	r8, r1, r6
 801033e:	b293      	uxth	r3, r2
 8010340:	fa1f f888 	uxth.w	r8, r8
 8010344:	9306      	str	r3, [sp, #24]
 8010346:	fa0f f388 	sxth.w	r3, r8
 801034a:	9307      	str	r3, [sp, #28]
 801034c:	9f06      	ldr	r7, [sp, #24]
 801034e:	f8ba 30a6 	ldrh.w	r3, [sl, #166]	; 0xa6
 8010352:	443b      	add	r3, r7
 8010354:	b29b      	uxth	r3, r3
 8010356:	4596      	cmp	lr, r2
 8010358:	9308      	str	r3, [sp, #32]
 801035a:	da25      	bge.n	80103a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x47c>
 801035c:	9905      	ldr	r1, [sp, #20]
 801035e:	eba3 0308 	sub.w	r3, r3, r8
 8010362:	eba9 0401 	sub.w	r4, r9, r1
 8010366:	b2a4      	uxth	r4, r4
 8010368:	b29b      	uxth	r3, r3
 801036a:	fa0f f984 	sxth.w	r9, r4
 801036e:	b219      	sxth	r1, r3
 8010370:	eba2 020e 	sub.w	r2, r2, lr
 8010374:	1b40      	subs	r0, r0, r5
 8010376:	fb09 f202 	mul.w	r2, r9, r2
 801037a:	4348      	muls	r0, r1
 801037c:	4282      	cmp	r2, r0
 801037e:	9a02      	ldr	r2, [sp, #8]
 8010380:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8010384:	445a      	add	r2, fp
 8010386:	dc06      	bgt.n	8010396 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46a>
 8010388:	9b07      	ldr	r3, [sp, #28]
 801038a:	f8a2 10ae 	strh.w	r1, [r2, #174]	; 0xae
 801038e:	f8a2 30aa 	strh.w	r3, [r2, #170]	; 0xaa
 8010392:	44a4      	add	ip, r4
 8010394:	e75c      	b.n	8010250 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x324>
 8010396:	9904      	ldr	r1, [sp, #16]
 8010398:	f8a2 90ac 	strh.w	r9, [r2, #172]	; 0xac
 801039c:	f8a2 10a8 	strh.w	r1, [r2, #168]	; 0xa8
 80103a0:	4433      	add	r3, r6
 80103a2:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 80103a6:	e5d7      	b.n	800ff58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80103a8:	9f06      	ldr	r7, [sp, #24]
 80103aa:	9b04      	ldr	r3, [sp, #16]
 80103ac:	1bc9      	subs	r1, r1, r7
 80103ae:	fa0f f789 	sxth.w	r7, r9
 80103b2:	b289      	uxth	r1, r1
 80103b4:	429f      	cmp	r7, r3
 80103b6:	fa0f fe81 	sxth.w	lr, r1
 80103ba:	dd22      	ble.n	8010402 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4d6>
 80103bc:	9a05      	ldr	r2, [sp, #20]
 80103be:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 80103c2:	1b40      	subs	r0, r0, r5
 80103c4:	eba9 0202 	sub.w	r2, r9, r2
 80103c8:	9d07      	ldr	r5, [sp, #28]
 80103ca:	b292      	uxth	r2, r2
 80103cc:	eba5 0a03 	sub.w	sl, r5, r3
 80103d0:	b214      	sxth	r4, r2
 80103d2:	9b02      	ldr	r3, [sp, #8]
 80103d4:	fb0e f000 	mul.w	r0, lr, r0
 80103d8:	fb04 fa0a 	mul.w	sl, r4, sl
 80103dc:	00db      	lsls	r3, r3, #3
 80103de:	4550      	cmp	r0, sl
 80103e0:	445b      	add	r3, fp
 80103e2:	db03      	blt.n	80103ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c0>
 80103e4:	f8a3 e0ae 	strh.w	lr, [r3, #174]	; 0xae
 80103e8:	4494      	add	ip, r2
 80103ea:	e731      	b.n	8010250 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x324>
 80103ec:	9a04      	ldr	r2, [sp, #16]
 80103ee:	f8a3 20a8 	strh.w	r2, [r3, #168]	; 0xa8
 80103f2:	f8a3 40ac 	strh.w	r4, [r3, #172]	; 0xac
 80103f6:	f8b3 30aa 	ldrh.w	r3, [r3, #170]	; 0xaa
 80103fa:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 80103fe:	4431      	add	r1, r6
 8010400:	e75b      	b.n	80102ba <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38e>
 8010402:	9b08      	ldr	r3, [sp, #32]
 8010404:	eba3 0308 	sub.w	r3, r3, r8
 8010408:	b29b      	uxth	r3, r3
 801040a:	2c06      	cmp	r4, #6
 801040c:	b21d      	sxth	r5, r3
 801040e:	d813      	bhi.n	8010438 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x50c>
 8010410:	9b07      	ldr	r3, [sp, #28]
 8010412:	f8aa 30a2 	strh.w	r3, [sl, #162]	; 0xa2
 8010416:	1c63      	adds	r3, r4, #1
 8010418:	f8aa 50a6 	strh.w	r5, [sl, #166]	; 0xa6
 801041c:	f8ab 30e8 	strh.w	r3, [fp, #232]	; 0xe8
 8010420:	9b01      	ldr	r3, [sp, #4]
 8010422:	9901      	ldr	r1, [sp, #4]
 8010424:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8010428:	f821 0034 	strh.w	r0, [r1, r4, lsl #3]
 801042c:	805a      	strh	r2, [r3, #2]
 801042e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8010430:	809a      	strh	r2, [r3, #4]
 8010432:	f8a3 e006 	strh.w	lr, [r3, #6]
 8010436:	e75e      	b.n	80102f6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ca>
 8010438:	9802      	ldr	r0, [sp, #8]
 801043a:	4575      	cmp	r5, lr
 801043c:	ea4f 00c0 	mov.w	r0, r0, lsl #3
 8010440:	db0d      	blt.n	801045e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x532>
 8010442:	4431      	add	r1, r6
 8010444:	9b06      	ldr	r3, [sp, #24]
 8010446:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 801044a:	b289      	uxth	r1, r1
 801044c:	4458      	add	r0, fp
 801044e:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8010452:	4419      	add	r1, r3
 8010454:	f8a0 10aa 	strh.w	r1, [r0, #170]	; 0xaa
 8010458:	f8a0 50ae 	strh.w	r5, [r0, #174]	; 0xae
 801045c:	e57c      	b.n	800ff58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 801045e:	4458      	add	r0, fp
 8010460:	f8a0 e0ae 	strh.w	lr, [r0, #174]	; 0xae
 8010464:	e79c      	b.n	80103a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x474>
 8010466:	f8bb 60e8 	ldrh.w	r6, [fp, #232]	; 0xe8
 801046a:	2e07      	cmp	r6, #7
 801046c:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 8010470:	d812      	bhi.n	8010498 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56c>
 8010472:	1c75      	adds	r5, r6, #1
 8010474:	f8ab 50e8 	strh.w	r5, [fp, #232]	; 0xe8
 8010478:	9d01      	ldr	r5, [sp, #4]
 801047a:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 801047e:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 8010482:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8010486:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 801048a:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 801048e:	442c      	add	r4, r5
 8010490:	8061      	strh	r1, [r4, #2]
 8010492:	80a2      	strh	r2, [r4, #4]
 8010494:	80e3      	strh	r3, [r4, #6]
 8010496:	e5c9      	b.n	801002c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8010498:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 801049c:	3e01      	subs	r6, #1
 801049e:	445c      	add	r4, fp
 80104a0:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 80104a4:	f04f 37ff 	mov.w	r7, #4294967295
 80104a8:	2500      	movs	r5, #0
 80104aa:	9305      	str	r3, [sp, #20]
 80104ac:	f9b4 30a4 	ldrsh.w	r3, [r4, #164]	; 0xa4
 80104b0:	9302      	str	r3, [sp, #8]
 80104b2:	1e72      	subs	r2, r6, #1
 80104b4:	f9b4 30a6 	ldrsh.w	r3, [r4, #166]	; 0xa6
 80104b8:	9304      	str	r3, [sp, #16]
 80104ba:	4691      	mov	r9, r2
 80104bc:	f104 03a0 	add.w	r3, r4, #160	; 0xa0
 80104c0:	f1b9 3fff 	cmp.w	r9, #4294967295
 80104c4:	bf14      	ite	ne
 80104c6:	9905      	ldrne	r1, [sp, #20]
 80104c8:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 80104cc:	6818      	ldr	r0, [r3, #0]
 80104ce:	9207      	str	r2, [sp, #28]
 80104d0:	bf18      	it	ne
 80104d2:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 80104d6:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 80104da:	f8be 1006 	ldrh.w	r1, [lr, #6]
 80104de:	f8be 8004 	ldrh.w	r8, [lr, #4]
 80104e2:	9306      	str	r3, [sp, #24]
 80104e4:	fb18 f801 	smulbb	r8, r8, r1
 80104e8:	6859      	ldr	r1, [r3, #4]
 80104ea:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 80104ee:	4671      	mov	r1, lr
 80104f0:	a80c      	add	r0, sp, #48	; 0x30
 80104f2:	f7fb f8a3 	bl	800b63c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 80104f6:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 80104fa:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 80104fe:	9b04      	ldr	r3, [sp, #16]
 8010500:	9a02      	ldr	r2, [sp, #8]
 8010502:	fb10 f001 	smulbb	r0, r0, r1
 8010506:	fb02 8803 	mla	r8, r2, r3, r8
 801050a:	eba0 0108 	sub.w	r1, r0, r8
 801050e:	f04f 0c08 	mov.w	ip, #8
 8010512:	fb90 f0fc 	sdiv	r0, r0, ip
 8010516:	4288      	cmp	r0, r1
 8010518:	dc20      	bgt.n	801055c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x630>
 801051a:	4551      	cmp	r1, sl
 801051c:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 8010520:	da03      	bge.n	801052a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fe>
 8010522:	b1d9      	cbz	r1, 801055c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x630>
 8010524:	468a      	mov	sl, r1
 8010526:	464f      	mov	r7, r9
 8010528:	4635      	mov	r5, r6
 801052a:	f109 39ff 	add.w	r9, r9, #4294967295
 801052e:	f119 0f02 	cmn.w	r9, #2
 8010532:	d1c5      	bne.n	80104c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8010534:	4616      	mov	r6, r2
 8010536:	3201      	adds	r2, #1
 8010538:	f1a4 0408 	sub.w	r4, r4, #8
 801053c:	d1b6      	bne.n	80104ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x580>
 801053e:	9b01      	ldr	r3, [sp, #4]
 8010540:	b2ac      	uxth	r4, r5
 8010542:	00ed      	lsls	r5, r5, #3
 8010544:	1958      	adds	r0, r3, r5
 8010546:	1c7b      	adds	r3, r7, #1
 8010548:	d10b      	bne.n	8010562 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x636>
 801054a:	4601      	mov	r1, r0
 801054c:	9803      	ldr	r0, [sp, #12]
 801054e:	f7fb f875 	bl	800b63c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8010552:	4621      	mov	r1, r4
 8010554:	9801      	ldr	r0, [sp, #4]
 8010556:	f7ff fcd5 	bl	800ff04 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801055a:	e4fd      	b.n	800ff58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 801055c:	464f      	mov	r7, r9
 801055e:	4635      	mov	r5, r6
 8010560:	e7ed      	b.n	801053e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x612>
 8010562:	9b01      	ldr	r3, [sp, #4]
 8010564:	00ff      	lsls	r7, r7, #3
 8010566:	19d9      	adds	r1, r3, r7
 8010568:	f7fb f868 	bl	800b63c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 801056c:	9b03      	ldr	r3, [sp, #12]
 801056e:	cb03      	ldmia	r3!, {r0, r1}
 8010570:	445f      	add	r7, fp
 8010572:	445d      	add	r5, fp
 8010574:	f8c7 00a8 	str.w	r0, [r7, #168]	; 0xa8
 8010578:	f8c7 10ac 	str.w	r1, [r7, #172]	; 0xac
 801057c:	f855 0fa8 	ldr.w	r0, [r5, #168]!
 8010580:	9b03      	ldr	r3, [sp, #12]
 8010582:	6869      	ldr	r1, [r5, #4]
 8010584:	c303      	stmia	r3!, {r0, r1}
 8010586:	e7e4      	b.n	8010552 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x626>

08010588 <_ZN8touchgfx11Application10invalidateEv>:
 8010588:	4b09      	ldr	r3, [pc, #36]	; (80105b0 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 801058a:	f9b3 2000 	ldrsh.w	r2, [r3]
 801058e:	4b09      	ldr	r3, [pc, #36]	; (80105b4 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 8010590:	b082      	sub	sp, #8
 8010592:	f9b3 3000 	ldrsh.w	r3, [r3]
 8010596:	f8ad 3006 	strh.w	r3, [sp, #6]
 801059a:	2100      	movs	r1, #0
 801059c:	9100      	str	r1, [sp, #0]
 801059e:	f8ad 2004 	strh.w	r2, [sp, #4]
 80105a2:	ab02      	add	r3, sp, #8
 80105a4:	e913 0006 	ldmdb	r3, {r1, r2}
 80105a8:	b002      	add	sp, #8
 80105aa:	f7ff bcbf 	b.w	800ff2c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 80105ae:	bf00      	nop
 80105b0:	2001744c 	.word	0x2001744c
 80105b4:	2001744e 	.word	0x2001744e

080105b8 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 80105b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80105bc:	f500 7696 	add.w	r6, r0, #300	; 0x12c
 80105c0:	b09b      	sub	sp, #108	; 0x6c
 80105c2:	4604      	mov	r4, r0
 80105c4:	4630      	mov	r0, r6
 80105c6:	f7f9 fb14 	bl	8009bf2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80105ca:	4605      	mov	r5, r0
 80105cc:	b940      	cbnz	r0, 80105e0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x28>
 80105ce:	e896 0006 	ldmia.w	r6, {r1, r2}
 80105d2:	4620      	mov	r0, r4
 80105d4:	f7ff fcaa 	bl	800ff2c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 80105d8:	f8c4 512c 	str.w	r5, [r4, #300]	; 0x12c
 80105dc:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 80105e0:	4bc9      	ldr	r3, [pc, #804]	; (8010908 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 80105e2:	681b      	ldr	r3, [r3, #0]
 80105e4:	2b00      	cmp	r3, #0
 80105e6:	d03e      	beq.n	8010666 <_ZN8touchgfx11Application15drawCachedAreasEv+0xae>
 80105e8:	4dc8      	ldr	r5, [pc, #800]	; (801090c <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 80105ea:	4628      	mov	r0, r5
 80105ec:	f7f9 fb01 	bl	8009bf2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80105f0:	4606      	mov	r6, r0
 80105f2:	2800      	cmp	r0, #0
 80105f4:	d137      	bne.n	8010666 <_ZN8touchgfx11Application15drawCachedAreasEv+0xae>
 80105f6:	4628      	mov	r0, r5
 80105f8:	f7ff fa4a 	bl	800fa90 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 80105fc:	6829      	ldr	r1, [r5, #0]
 80105fe:	686a      	ldr	r2, [r5, #4]
 8010600:	4620      	mov	r0, r4
 8010602:	f7ff fc93 	bl	800ff2c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 8010606:	802e      	strh	r6, [r5, #0]
 8010608:	806e      	strh	r6, [r5, #2]
 801060a:	80ae      	strh	r6, [r5, #4]
 801060c:	80ee      	strh	r6, [r5, #6]
 801060e:	ae09      	add	r6, sp, #36	; 0x24
 8010610:	4630      	mov	r0, r6
 8010612:	f7ff fc26 	bl	800fe62 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8010616:	4abe      	ldr	r2, [pc, #760]	; (8010910 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 8010618:	f8b4 70e8 	ldrh.w	r7, [r4, #232]	; 0xe8
 801061c:	8815      	ldrh	r5, [r2, #0]
 801061e:	9202      	str	r2, [sp, #8]
 8010620:	462b      	mov	r3, r5
 8010622:	f104 00a8 	add.w	r0, r4, #168	; 0xa8
 8010626:	429f      	cmp	r7, r3
 8010628:	d924      	bls.n	8010674 <_ZN8touchgfx11Application15drawCachedAreasEv+0xbc>
 801062a:	f8bd 1064 	ldrh.w	r1, [sp, #100]	; 0x64
 801062e:	2907      	cmp	r1, #7
 8010630:	d816      	bhi.n	8010660 <_ZN8touchgfx11Application15drawCachedAreasEv+0xa8>
 8010632:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 8010636:	f930 8033 	ldrsh.w	r8, [r0, r3, lsl #3]
 801063a:	f9b2 9002 	ldrsh.w	r9, [r2, #2]
 801063e:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 8010642:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 8010646:	1c4a      	adds	r2, r1, #1
 8010648:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
 801064c:	eb06 02c1 	add.w	r2, r6, r1, lsl #3
 8010650:	f826 8031 	strh.w	r8, [r6, r1, lsl #3]
 8010654:	f8a2 9002 	strh.w	r9, [r2, #2]
 8010658:	f8a2 e004 	strh.w	lr, [r2, #4]
 801065c:	f8a2 c006 	strh.w	ip, [r2, #6]
 8010660:	3301      	adds	r3, #1
 8010662:	b29b      	uxth	r3, r3
 8010664:	e7df      	b.n	8010626 <_ZN8touchgfx11Application15drawCachedAreasEv+0x6e>
 8010666:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 801066a:	2b00      	cmp	r3, #0
 801066c:	d1cf      	bne.n	801060e <_ZN8touchgfx11Application15drawCachedAreasEv+0x56>
 801066e:	b01b      	add	sp, #108	; 0x6c
 8010670:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010674:	462f      	mov	r7, r5
 8010676:	f8b4 312a 	ldrh.w	r3, [r4, #298]	; 0x12a
 801067a:	42bb      	cmp	r3, r7
 801067c:	d90b      	bls.n	8010696 <_ZN8touchgfx11Application15drawCachedAreasEv+0xde>
 801067e:	eb04 03c7 	add.w	r3, r4, r7, lsl #3
 8010682:	4620      	mov	r0, r4
 8010684:	f8d3 10ea 	ldr.w	r1, [r3, #234]	; 0xea
 8010688:	f8d3 20ee 	ldr.w	r2, [r3, #238]	; 0xee
 801068c:	3701      	adds	r7, #1
 801068e:	f7ff fc4d 	bl	800ff2c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 8010692:	b2bf      	uxth	r7, r7
 8010694:	e7ef      	b.n	8010676 <_ZN8touchgfx11Application15drawCachedAreasEv+0xbe>
 8010696:	4a9f      	ldr	r2, [pc, #636]	; (8010914 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 8010698:	6813      	ldr	r3, [r2, #0]
 801069a:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 801069e:	2b01      	cmp	r3, #1
 80106a0:	4690      	mov	r8, r2
 80106a2:	f040 80e6 	bne.w	8010872 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ba>
 80106a6:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
 80106aa:	f8b4 70e8 	ldrh.w	r7, [r4, #232]	; 0xe8
 80106ae:	4629      	mov	r1, r5
 80106b0:	33aa      	adds	r3, #170	; 0xaa
 80106b2:	2500      	movs	r5, #0
 80106b4:	428f      	cmp	r7, r1
 80106b6:	f103 0308 	add.w	r3, r3, #8
 80106ba:	dd0a      	ble.n	80106d2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x11a>
 80106bc:	f833 2c08 	ldrh.w	r2, [r3, #-8]
 80106c0:	f833 0c04 	ldrh.w	r0, [r3, #-4]
 80106c4:	4402      	add	r2, r0
 80106c6:	b212      	sxth	r2, r2
 80106c8:	4295      	cmp	r5, r2
 80106ca:	bfb8      	it	lt
 80106cc:	4615      	movlt	r5, r2
 80106ce:	3101      	adds	r1, #1
 80106d0:	e7f0      	b.n	80106b4 <_ZN8touchgfx11Application15drawCachedAreasEv+0xfc>
 80106d2:	4b91      	ldr	r3, [pc, #580]	; (8010918 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 80106d4:	f8df b23c 	ldr.w	fp, [pc, #572]	; 8010914 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>
 80106d8:	881b      	ldrh	r3, [r3, #0]
 80106da:	2b0f      	cmp	r3, #15
 80106dc:	bf88      	it	hi
 80106de:	ea4f 0ad3 	movhi.w	sl, r3, lsr #3
 80106e2:	f04f 0300 	mov.w	r3, #0
 80106e6:	e9cd 3305 	strd	r3, r3, [sp, #20]
 80106ea:	bf98      	it	ls
 80106ec:	f04f 0a01 	movls.w	sl, #1
 80106f0:	46d8      	mov	r8, fp
 80106f2:	f8bd 701a 	ldrh.w	r7, [sp, #26]
 80106f6:	f8bd 0016 	ldrh.w	r0, [sp, #22]
 80106fa:	4438      	add	r0, r7
 80106fc:	b207      	sxth	r7, r0
 80106fe:	f8db 0000 	ldr.w	r0, [fp]
 8010702:	42bd      	cmp	r5, r7
 8010704:	6803      	ldr	r3, [r0, #0]
 8010706:	f340 8084 	ble.w	8010812 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 801070a:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 801070e:	4798      	blx	r3
 8010710:	eb07 030a 	add.w	r3, r7, sl
 8010714:	4298      	cmp	r0, r3
 8010716:	da07      	bge.n	8010728 <_ZN8touchgfx11Application15drawCachedAreasEv+0x170>
 8010718:	4285      	cmp	r5, r0
 801071a:	dd05      	ble.n	8010728 <_ZN8touchgfx11Application15drawCachedAreasEv+0x170>
 801071c:	4287      	cmp	r7, r0
 801071e:	dd6d      	ble.n	80107fc <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 8010720:	2f00      	cmp	r7, #0
 8010722:	dd6b      	ble.n	80107fc <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 8010724:	4628      	mov	r0, r5
 8010726:	e004      	b.n	8010732 <_ZN8touchgfx11Application15drawCachedAreasEv+0x17a>
 8010728:	4287      	cmp	r7, r0
 801072a:	dcfb      	bgt.n	8010724 <_ZN8touchgfx11Application15drawCachedAreasEv+0x16c>
 801072c:	42a8      	cmp	r0, r5
 801072e:	bfa8      	it	ge
 8010730:	4628      	movge	r0, r5
 8010732:	4b7a      	ldr	r3, [pc, #488]	; (801091c <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>)
 8010734:	f8ad 7016 	strh.w	r7, [sp, #22]
 8010738:	f9b3 3000 	ldrsh.w	r3, [r3]
 801073c:	f8ad 3018 	strh.w	r3, [sp, #24]
 8010740:	9b02      	ldr	r3, [sp, #8]
 8010742:	1bc0      	subs	r0, r0, r7
 8010744:	2200      	movs	r2, #0
 8010746:	881f      	ldrh	r7, [r3, #0]
 8010748:	f8ad 2014 	strh.w	r2, [sp, #20]
 801074c:	f8ad 001a 	strh.w	r0, [sp, #26]
 8010750:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 8010754:	42bb      	cmp	r3, r7
 8010756:	d9cc      	bls.n	80106f2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13a>
 8010758:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 801075c:	ab07      	add	r3, sp, #28
 801075e:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 8010762:	6851      	ldr	r1, [r2, #4]
 8010764:	c303      	stmia	r3!, {r0, r1}
 8010766:	a905      	add	r1, sp, #20
 8010768:	a807      	add	r0, sp, #28
 801076a:	f7ff fad0 	bl	800fd0e <_ZNK8touchgfx4Rect9intersectERKS0_>
 801076e:	2800      	cmp	r0, #0
 8010770:	d04c      	beq.n	801080c <_ZN8touchgfx11Application15drawCachedAreasEv+0x254>
 8010772:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 8010776:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 801077a:	f8bd 9020 	ldrh.w	r9, [sp, #32]
 801077e:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 8010782:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8010786:	9303      	str	r3, [sp, #12]
 8010788:	4686      	mov	lr, r0
 801078a:	4290      	cmp	r0, r2
 801078c:	4448      	add	r0, r9
 801078e:	f8bd 9018 	ldrh.w	r9, [sp, #24]
 8010792:	bfb8      	it	lt
 8010794:	4696      	movlt	lr, r2
 8010796:	444a      	add	r2, r9
 8010798:	4299      	cmp	r1, r3
 801079a:	b280      	uxth	r0, r0
 801079c:	b292      	uxth	r2, r2
 801079e:	468c      	mov	ip, r1
 80107a0:	fa0f f982 	sxth.w	r9, r2
 80107a4:	bfb8      	it	lt
 80107a6:	469c      	movlt	ip, r3
 80107a8:	b203      	sxth	r3, r0
 80107aa:	454b      	cmp	r3, r9
 80107ac:	bfb8      	it	lt
 80107ae:	4602      	movlt	r2, r0
 80107b0:	eba2 020e 	sub.w	r2, r2, lr
 80107b4:	f8ad 2020 	strh.w	r2, [sp, #32]
 80107b8:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 80107bc:	9b03      	ldr	r3, [sp, #12]
 80107be:	f8ad e01c 	strh.w	lr, [sp, #28]
 80107c2:	4411      	add	r1, r2
 80107c4:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 80107c8:	f8ad c01e 	strh.w	ip, [sp, #30]
 80107cc:	4413      	add	r3, r2
 80107ce:	b289      	uxth	r1, r1
 80107d0:	b29b      	uxth	r3, r3
 80107d2:	b208      	sxth	r0, r1
 80107d4:	b21a      	sxth	r2, r3
 80107d6:	4290      	cmp	r0, r2
 80107d8:	bfb8      	it	lt
 80107da:	460b      	movlt	r3, r1
 80107dc:	eba3 030c 	sub.w	r3, r3, ip
 80107e0:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 80107e4:	a807      	add	r0, sp, #28
 80107e6:	f7f9 fa04 	bl	8009bf2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80107ea:	b920      	cbnz	r0, 80107f6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 80107ec:	6823      	ldr	r3, [r4, #0]
 80107ee:	a907      	add	r1, sp, #28
 80107f0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80107f2:	4620      	mov	r0, r4
 80107f4:	4798      	blx	r3
 80107f6:	3701      	adds	r7, #1
 80107f8:	b2bf      	uxth	r7, r7
 80107fa:	e7a9      	b.n	8010750 <_ZN8touchgfx11Application15drawCachedAreasEv+0x198>
 80107fc:	f8d8 0000 	ldr.w	r0, [r8]
 8010800:	6803      	ldr	r3, [r0, #0]
 8010802:	2101      	movs	r1, #1
 8010804:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8010808:	4798      	blx	r3
 801080a:	e772      	b.n	80106f2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13a>
 801080c:	e9cd 0007 	strd	r0, r0, [sp, #28]
 8010810:	e7e8      	b.n	80107e4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
 8010812:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8010814:	4798      	blx	r3
 8010816:	4b42      	ldr	r3, [pc, #264]	; (8010920 <_ZN8touchgfx11Application15drawCachedAreasEv+0x368>)
 8010818:	781b      	ldrb	r3, [r3, #0]
 801081a:	2b00      	cmp	r3, #0
 801081c:	f43f af27 	beq.w	801066e <_ZN8touchgfx11Application15drawCachedAreasEv+0xb6>
 8010820:	2300      	movs	r3, #0
 8010822:	f8a4 312a 	strh.w	r3, [r4, #298]	; 0x12a
 8010826:	9b02      	ldr	r3, [sp, #8]
 8010828:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 801082c:	881b      	ldrh	r3, [r3, #0]
 801082e:	f104 00ea 	add.w	r0, r4, #234	; 0xea
 8010832:	429d      	cmp	r5, r3
 8010834:	f67f af1b 	bls.w	801066e <_ZN8touchgfx11Application15drawCachedAreasEv+0xb6>
 8010838:	f8b4 112a 	ldrh.w	r1, [r4, #298]	; 0x12a
 801083c:	2907      	cmp	r1, #7
 801083e:	d815      	bhi.n	801086c <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b4>
 8010840:	eb06 02c3 	add.w	r2, r6, r3, lsl #3
 8010844:	f936 8033 	ldrsh.w	r8, [r6, r3, lsl #3]
 8010848:	f9b2 e002 	ldrsh.w	lr, [r2, #2]
 801084c:	f9b2 c004 	ldrsh.w	ip, [r2, #4]
 8010850:	f9b2 7006 	ldrsh.w	r7, [r2, #6]
 8010854:	1c4a      	adds	r2, r1, #1
 8010856:	f8a4 212a 	strh.w	r2, [r4, #298]	; 0x12a
 801085a:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 801085e:	f820 8031 	strh.w	r8, [r0, r1, lsl #3]
 8010862:	f8a2 e002 	strh.w	lr, [r2, #2]
 8010866:	f8a2 c004 	strh.w	ip, [r2, #4]
 801086a:	80d7      	strh	r7, [r2, #6]
 801086c:	3301      	adds	r3, #1
 801086e:	b29b      	uxth	r3, r3
 8010870:	e7df      	b.n	8010832 <_ZN8touchgfx11Application15drawCachedAreasEv+0x27a>
 8010872:	2b02      	cmp	r3, #2
 8010874:	f040 8136 	bne.w	8010ae4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x52c>
 8010878:	4b2a      	ldr	r3, [pc, #168]	; (8010924 <_ZN8touchgfx11Application15drawCachedAreasEv+0x36c>)
 801087a:	781b      	ldrb	r3, [r3, #0]
 801087c:	2b01      	cmp	r3, #1
 801087e:	f104 09a8 	add.w	r9, r4, #168	; 0xa8
 8010882:	f000 809c 	beq.w	80109be <_ZN8touchgfx11Application15drawCachedAreasEv+0x406>
 8010886:	9b02      	ldr	r3, [sp, #8]
 8010888:	f8b4 20e8 	ldrh.w	r2, [r4, #232]	; 0xe8
 801088c:	f8b3 b000 	ldrh.w	fp, [r3]
 8010890:	f10b 0b01 	add.w	fp, fp, #1
 8010894:	fa1f fb8b 	uxth.w	fp, fp
 8010898:	2a00      	cmp	r2, #0
 801089a:	d0bc      	beq.n	8010816 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 801089c:	f8b4 50aa 	ldrh.w	r5, [r4, #170]	; 0xaa
 80108a0:	f8b4 30ae 	ldrh.w	r3, [r4, #174]	; 0xae
 80108a4:	441d      	add	r5, r3
 80108a6:	b22d      	sxth	r5, r5
 80108a8:	4659      	mov	r1, fp
 80108aa:	f04f 0800 	mov.w	r8, #0
 80108ae:	b28b      	uxth	r3, r1
 80108b0:	429a      	cmp	r2, r3
 80108b2:	ea4f 07c8 	mov.w	r7, r8, lsl #3
 80108b6:	f240 80c1 	bls.w	8010a3c <_ZN8touchgfx11Application15drawCachedAreasEv+0x484>
 80108ba:	4427      	add	r7, r4
 80108bc:	eb04 0ec1 	add.w	lr, r4, r1, lsl #3
 80108c0:	f9b7 30aa 	ldrsh.w	r3, [r7, #170]	; 0xaa
 80108c4:	f9be c0aa 	ldrsh.w	ip, [lr, #170]	; 0xaa
 80108c8:	4563      	cmp	r3, ip
 80108ca:	4608      	mov	r0, r1
 80108cc:	f340 80a3 	ble.w	8010a16 <_ZN8touchgfx11Application15drawCachedAreasEv+0x45e>
 80108d0:	f8be 50ae 	ldrh.w	r5, [lr, #174]	; 0xae
 80108d4:	4465      	add	r5, ip
 80108d6:	b22d      	sxth	r5, r5
 80108d8:	429d      	cmp	r5, r3
 80108da:	bfa8      	it	ge
 80108dc:	461d      	movge	r5, r3
 80108de:	3101      	adds	r1, #1
 80108e0:	4680      	mov	r8, r0
 80108e2:	e7e4      	b.n	80108ae <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f6>
 80108e4:	d10b      	bne.n	80108fe <_ZN8touchgfx11Application15drawCachedAreasEv+0x346>
 80108e6:	f9b5 c0ae 	ldrsh.w	ip, [r5, #174]	; 0xae
 80108ea:	f9ba 10ae 	ldrsh.w	r1, [sl, #174]	; 0xae
 80108ee:	458c      	cmp	ip, r1
 80108f0:	bfb4      	ite	lt
 80108f2:	469c      	movlt	ip, r3
 80108f4:	46bc      	movge	ip, r7
 80108f6:	4572      	cmp	r2, lr
 80108f8:	bfb8      	it	lt
 80108fa:	4672      	movlt	r2, lr
 80108fc:	e088      	b.n	8010a10 <_ZN8touchgfx11Application15drawCachedAreasEv+0x458>
 80108fe:	428a      	cmp	r2, r1
 8010900:	bfb8      	it	lt
 8010902:	460a      	movlt	r2, r1
 8010904:	46bc      	mov	ip, r7
 8010906:	e083      	b.n	8010a10 <_ZN8touchgfx11Application15drawCachedAreasEv+0x458>
 8010908:	20017498 	.word	0x20017498
 801090c:	200174a4 	.word	0x200174a4
 8010910:	2000008c 	.word	0x2000008c
 8010914:	20017458 	.word	0x20017458
 8010918:	2001744e 	.word	0x2001744e
 801091c:	2001744c 	.word	0x2001744c
 8010920:	20017456 	.word	0x20017456
 8010924:	20017450 	.word	0x20017450
 8010928:	1961      	adds	r1, r4, r5
 801092a:	ab07      	add	r3, sp, #28
 801092c:	f851 0fa8 	ldr.w	r0, [r1, #168]!
 8010930:	6849      	ldr	r1, [r1, #4]
 8010932:	c303      	stmia	r3!, {r0, r1}
 8010934:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8010938:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 801093c:	2b13      	cmp	r3, #19
 801093e:	bfd8      	it	le
 8010940:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 8010944:	f8ad 201c 	strh.w	r2, [sp, #28]
 8010948:	440b      	add	r3, r1
 801094a:	1a9b      	subs	r3, r3, r2
 801094c:	a807      	add	r0, sp, #28
 801094e:	f8ad 3020 	strh.w	r3, [sp, #32]
 8010952:	f7ff f8b7 	bl	800fac4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8010956:	a807      	add	r0, sp, #28
 8010958:	f7f9 f94b 	bl	8009bf2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801095c:	bb78      	cbnz	r0, 80109be <_ZN8touchgfx11Application15drawCachedAreasEv+0x406>
 801095e:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 8010962:	f8d8 0000 	ldr.w	r0, [r8]
 8010966:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 801096a:	f8d0 e000 	ldr.w	lr, [r0]
 801096e:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 8010972:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8010976:	f1bc 0f14 	cmp.w	ip, #20
 801097a:	bfa8      	it	ge
 801097c:	f04f 0c14 	movge.w	ip, #20
 8010980:	fa1f fc8c 	uxth.w	ip, ip
 8010984:	f8cd c000 	str.w	ip, [sp]
 8010988:	f8de a090 	ldr.w	sl, [lr, #144]	; 0x90
 801098c:	47d0      	blx	sl
 801098e:	4682      	mov	sl, r0
 8010990:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8010994:	a807      	add	r0, sp, #28
 8010996:	f7ff f87b 	bl	800fa90 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 801099a:	6823      	ldr	r3, [r4, #0]
 801099c:	4425      	add	r5, r4
 801099e:	4620      	mov	r0, r4
 80109a0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80109a2:	a907      	add	r1, sp, #28
 80109a4:	4798      	blx	r3
 80109a6:	f8b5 00ac 	ldrh.w	r0, [r5, #172]	; 0xac
 80109aa:	eba0 000a 	sub.w	r0, r0, sl
 80109ae:	b200      	sxth	r0, r0
 80109b0:	f8a5 00ac 	strh.w	r0, [r5, #172]	; 0xac
 80109b4:	b918      	cbnz	r0, 80109be <_ZN8touchgfx11Application15drawCachedAreasEv+0x406>
 80109b6:	b2b9      	uxth	r1, r7
 80109b8:	4648      	mov	r0, r9
 80109ba:	f7ff faa3 	bl	800ff04 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80109be:	f8b4 b0e8 	ldrh.w	fp, [r4, #232]	; 0xe8
 80109c2:	f1bb 0f00 	cmp.w	fp, #0
 80109c6:	f43f af26 	beq.w	8010816 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 80109ca:	9b02      	ldr	r3, [sp, #8]
 80109cc:	f9b4 20a8 	ldrsh.w	r2, [r4, #168]	; 0xa8
 80109d0:	881b      	ldrh	r3, [r3, #0]
 80109d2:	3301      	adds	r3, #1
 80109d4:	b29b      	uxth	r3, r3
 80109d6:	2700      	movs	r7, #0
 80109d8:	b299      	uxth	r1, r3
 80109da:	458b      	cmp	fp, r1
 80109dc:	ea4f 05c7 	mov.w	r5, r7, lsl #3
 80109e0:	d9a2      	bls.n	8010928 <_ZN8touchgfx11Application15drawCachedAreasEv+0x370>
 80109e2:	4425      	add	r5, r4
 80109e4:	eb04 0ac3 	add.w	sl, r4, r3, lsl #3
 80109e8:	f8b5 10ac 	ldrh.w	r1, [r5, #172]	; 0xac
 80109ec:	f8b5 00a8 	ldrh.w	r0, [r5, #168]	; 0xa8
 80109f0:	f9ba e0a8 	ldrsh.w	lr, [sl, #168]	; 0xa8
 80109f4:	4408      	add	r0, r1
 80109f6:	f8ba 10ac 	ldrh.w	r1, [sl, #172]	; 0xac
 80109fa:	4471      	add	r1, lr
 80109fc:	b200      	sxth	r0, r0
 80109fe:	b209      	sxth	r1, r1
 8010a00:	4288      	cmp	r0, r1
 8010a02:	469c      	mov	ip, r3
 8010a04:	f6bf af6e 	bge.w	80108e4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x32c>
 8010a08:	4586      	cmp	lr, r0
 8010a0a:	4672      	mov	r2, lr
 8010a0c:	bfb8      	it	lt
 8010a0e:	4602      	movlt	r2, r0
 8010a10:	3301      	adds	r3, #1
 8010a12:	4667      	mov	r7, ip
 8010a14:	e7e0      	b.n	80109d8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x420>
 8010a16:	d10c      	bne.n	8010a32 <_ZN8touchgfx11Application15drawCachedAreasEv+0x47a>
 8010a18:	f9b7 70ac 	ldrsh.w	r7, [r7, #172]	; 0xac
 8010a1c:	f9be 00ac 	ldrsh.w	r0, [lr, #172]	; 0xac
 8010a20:	4287      	cmp	r7, r0
 8010a22:	bfb4      	ite	lt
 8010a24:	4608      	movlt	r0, r1
 8010a26:	4640      	movge	r0, r8
 8010a28:	f8be 70ae 	ldrh.w	r7, [lr, #174]	; 0xae
 8010a2c:	443b      	add	r3, r7
 8010a2e:	b21b      	sxth	r3, r3
 8010a30:	e752      	b.n	80108d8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x320>
 8010a32:	4565      	cmp	r5, ip
 8010a34:	bfa8      	it	ge
 8010a36:	4665      	movge	r5, ip
 8010a38:	4640      	mov	r0, r8
 8010a3a:	e750      	b.n	80108de <_ZN8touchgfx11Application15drawCachedAreasEv+0x326>
 8010a3c:	eb09 0007 	add.w	r0, r9, r7
 8010a40:	4427      	add	r7, r4
 8010a42:	9203      	str	r2, [sp, #12]
 8010a44:	f9b7 a0ae 	ldrsh.w	sl, [r7, #174]	; 0xae
 8010a48:	f1ba 0f13 	cmp.w	sl, #19
 8010a4c:	bfde      	ittt	le
 8010a4e:	f8b7 50aa 	ldrhle.w	r5, [r7, #170]	; 0xaa
 8010a52:	4455      	addle	r5, sl
 8010a54:	b22d      	sxthle	r5, r5
 8010a56:	f7f9 f8cc 	bl	8009bf2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010a5a:	9a03      	ldr	r2, [sp, #12]
 8010a5c:	2800      	cmp	r0, #0
 8010a5e:	f47f af1b 	bne.w	8010898 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2e0>
 8010a62:	f9b7 20aa 	ldrsh.w	r2, [r7, #170]	; 0xaa
 8010a66:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8010a6a:	482a      	ldr	r0, [pc, #168]	; (8010b14 <_ZN8touchgfx11Application15drawCachedAreasEv+0x55c>)
 8010a6c:	f9b7 10a8 	ldrsh.w	r1, [r7, #168]	; 0xa8
 8010a70:	f9b7 30ac 	ldrsh.w	r3, [r7, #172]	; 0xac
 8010a74:	6800      	ldr	r0, [r0, #0]
 8010a76:	f8ad 101c 	strh.w	r1, [sp, #28]
 8010a7a:	1aad      	subs	r5, r5, r2
 8010a7c:	2d14      	cmp	r5, #20
 8010a7e:	f8ad 201e 	strh.w	r2, [sp, #30]
 8010a82:	f8ad 3020 	strh.w	r3, [sp, #32]
 8010a86:	bfa8      	it	ge
 8010a88:	2514      	movge	r5, #20
 8010a8a:	f8d0 c000 	ldr.w	ip, [r0]
 8010a8e:	b2ad      	uxth	r5, r5
 8010a90:	fa1f fa8a 	uxth.w	sl, sl
 8010a94:	4555      	cmp	r5, sl
 8010a96:	bf94      	ite	ls
 8010a98:	9500      	strls	r5, [sp, #0]
 8010a9a:	f8cd a000 	strhi.w	sl, [sp]
 8010a9e:	b292      	uxth	r2, r2
 8010aa0:	f8dc 5090 	ldr.w	r5, [ip, #144]	; 0x90
 8010aa4:	b29b      	uxth	r3, r3
 8010aa6:	b289      	uxth	r1, r1
 8010aa8:	47a8      	blx	r5
 8010aaa:	6823      	ldr	r3, [r4, #0]
 8010aac:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8010ab0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8010ab2:	a907      	add	r1, sp, #28
 8010ab4:	4620      	mov	r0, r4
 8010ab6:	4798      	blx	r3
 8010ab8:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 8010abc:	f8b7 30ae 	ldrh.w	r3, [r7, #174]	; 0xae
 8010ac0:	f8b7 20aa 	ldrh.w	r2, [r7, #170]	; 0xaa
 8010ac4:	1a5b      	subs	r3, r3, r1
 8010ac6:	440a      	add	r2, r1
 8010ac8:	b21b      	sxth	r3, r3
 8010aca:	f8a7 20aa 	strh.w	r2, [r7, #170]	; 0xaa
 8010ace:	f8a7 30ae 	strh.w	r3, [r7, #174]	; 0xae
 8010ad2:	2b00      	cmp	r3, #0
 8010ad4:	f47f aed7 	bne.w	8010886 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ce>
 8010ad8:	fa1f f188 	uxth.w	r1, r8
 8010adc:	4648      	mov	r0, r9
 8010ade:	f7ff fa11 	bl	800ff04 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8010ae2:	e6d0      	b.n	8010886 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ce>
 8010ae4:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 8010ae8:	42ab      	cmp	r3, r5
 8010aea:	f67f ae94 	bls.w	8010816 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8010aee:	eb04 02c5 	add.w	r2, r4, r5, lsl #3
 8010af2:	ab07      	add	r3, sp, #28
 8010af4:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 8010af8:	6851      	ldr	r1, [r2, #4]
 8010afa:	c303      	stmia	r3!, {r0, r1}
 8010afc:	a807      	add	r0, sp, #28
 8010afe:	f7f9 f878 	bl	8009bf2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010b02:	b920      	cbnz	r0, 8010b0e <_ZN8touchgfx11Application15drawCachedAreasEv+0x556>
 8010b04:	6823      	ldr	r3, [r4, #0]
 8010b06:	a907      	add	r1, sp, #28
 8010b08:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8010b0a:	4620      	mov	r0, r4
 8010b0c:	4798      	blx	r3
 8010b0e:	3501      	adds	r5, #1
 8010b10:	b2ad      	uxth	r5, r5
 8010b12:	e7e7      	b.n	8010ae4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x52c>
 8010b14:	20017458 	.word	0x20017458

08010b18 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 8010b18:	4b03      	ldr	r3, [pc, #12]	; (8010b28 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 8010b1a:	2200      	movs	r2, #0
 8010b1c:	801a      	strh	r2, [r3, #0]
 8010b1e:	805a      	strh	r2, [r3, #2]
 8010b20:	809a      	strh	r2, [r3, #4]
 8010b22:	80da      	strh	r2, [r3, #6]
 8010b24:	4770      	bx	lr
 8010b26:	bf00      	nop
 8010b28:	200174a4 	.word	0x200174a4

08010b2c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 8010b2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010b30:	4606      	mov	r6, r0
 8010b32:	b09d      	sub	sp, #116	; 0x74
 8010b34:	a803      	add	r0, sp, #12
 8010b36:	4614      	mov	r4, r2
 8010b38:	468a      	mov	sl, r1
 8010b3a:	461d      	mov	r5, r3
 8010b3c:	f000 fe67 	bl	801180e <_ZN8touchgfx12TextProviderC1Ev>
 8010b40:	6833      	ldr	r3, [r6, #0]
 8010b42:	4630      	mov	r0, r6
 8010b44:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8010b46:	4798      	blx	r3
 8010b48:	6833      	ldr	r3, [r6, #0]
 8010b4a:	4607      	mov	r7, r0
 8010b4c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8010b4e:	4630      	mov	r0, r6
 8010b50:	4798      	blx	r3
 8010b52:	462a      	mov	r2, r5
 8010b54:	9000      	str	r0, [sp, #0]
 8010b56:	4621      	mov	r1, r4
 8010b58:	463b      	mov	r3, r7
 8010b5a:	a803      	add	r0, sp, #12
 8010b5c:	f000 feb2 	bl	80118c4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8010b60:	2500      	movs	r5, #0
 8010b62:	462c      	mov	r4, r5
 8010b64:	46a9      	mov	r9, r5
 8010b66:	46a8      	mov	r8, r5
 8010b68:	f242 0b0b 	movw	fp, #8203	; 0x200b
 8010b6c:	2300      	movs	r3, #0
 8010b6e:	9302      	str	r3, [sp, #8]
 8010b70:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8010b74:	429c      	cmp	r4, r3
 8010b76:	d002      	beq.n	8010b7e <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 8010b78:	455c      	cmp	r4, fp
 8010b7a:	bf18      	it	ne
 8010b7c:	4625      	movne	r5, r4
 8010b7e:	ab02      	add	r3, sp, #8
 8010b80:	4632      	mov	r2, r6
 8010b82:	4651      	mov	r1, sl
 8010b84:	a803      	add	r0, sp, #12
 8010b86:	f001 f99f 	bl	8011ec8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8010b8a:	4604      	mov	r4, r0
 8010b8c:	b108      	cbz	r0, 8010b92 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 8010b8e:	280a      	cmp	r0, #10
 8010b90:	d10a      	bne.n	8010ba8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 8010b92:	45c1      	cmp	r9, r8
 8010b94:	bf38      	it	cc
 8010b96:	46c1      	movcc	r9, r8
 8010b98:	f04f 0800 	mov.w	r8, #0
 8010b9c:	2c00      	cmp	r4, #0
 8010b9e:	d1e5      	bne.n	8010b6c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8010ba0:	4648      	mov	r0, r9
 8010ba2:	b01d      	add	sp, #116	; 0x74
 8010ba4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010ba8:	9a02      	ldr	r2, [sp, #8]
 8010baa:	2a00      	cmp	r2, #0
 8010bac:	d0de      	beq.n	8010b6c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8010bae:	7b57      	ldrb	r7, [r2, #13]
 8010bb0:	6833      	ldr	r3, [r6, #0]
 8010bb2:	8894      	ldrh	r4, [r2, #4]
 8010bb4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8010bb6:	007f      	lsls	r7, r7, #1
 8010bb8:	f407 7080 	and.w	r0, r7, #256	; 0x100
 8010bbc:	7a97      	ldrb	r7, [r2, #10]
 8010bbe:	4629      	mov	r1, r5
 8010bc0:	4307      	orrs	r7, r0
 8010bc2:	4630      	mov	r0, r6
 8010bc4:	4798      	blx	r3
 8010bc6:	4438      	add	r0, r7
 8010bc8:	4480      	add	r8, r0
 8010bca:	fa1f f888 	uxth.w	r8, r8
 8010bce:	e7e5      	b.n	8010b9c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

08010bd0 <_ZNK8touchgfx4Font12getCharWidthEt>:
 8010bd0:	b508      	push	{r3, lr}
 8010bd2:	6803      	ldr	r3, [r0, #0]
 8010bd4:	68db      	ldr	r3, [r3, #12]
 8010bd6:	4798      	blx	r3
 8010bd8:	b128      	cbz	r0, 8010be6 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 8010bda:	7b43      	ldrb	r3, [r0, #13]
 8010bdc:	7a80      	ldrb	r0, [r0, #10]
 8010bde:	005b      	lsls	r3, r3, #1
 8010be0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8010be4:	4318      	orrs	r0, r3
 8010be6:	bd08      	pop	{r3, pc}

08010be8 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 8010be8:	b40e      	push	{r1, r2, r3}
 8010bea:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010bec:	b09e      	sub	sp, #120	; 0x78
 8010bee:	ab23      	add	r3, sp, #140	; 0x8c
 8010bf0:	4605      	mov	r5, r0
 8010bf2:	f853 4b04 	ldr.w	r4, [r3], #4
 8010bf6:	9303      	str	r3, [sp, #12]
 8010bf8:	a805      	add	r0, sp, #20
 8010bfa:	f000 fe08 	bl	801180e <_ZN8touchgfx12TextProviderC1Ev>
 8010bfe:	682b      	ldr	r3, [r5, #0]
 8010c00:	4628      	mov	r0, r5
 8010c02:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8010c04:	4798      	blx	r3
 8010c06:	682b      	ldr	r3, [r5, #0]
 8010c08:	4606      	mov	r6, r0
 8010c0a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8010c0c:	4628      	mov	r0, r5
 8010c0e:	4798      	blx	r3
 8010c10:	4633      	mov	r3, r6
 8010c12:	ae1e      	add	r6, sp, #120	; 0x78
 8010c14:	4621      	mov	r1, r4
 8010c16:	9000      	str	r0, [sp, #0]
 8010c18:	9a03      	ldr	r2, [sp, #12]
 8010c1a:	2400      	movs	r4, #0
 8010c1c:	a805      	add	r0, sp, #20
 8010c1e:	f000 fe51 	bl	80118c4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8010c22:	f846 4d68 	str.w	r4, [r6, #-104]!
 8010c26:	462a      	mov	r2, r5
 8010c28:	4633      	mov	r3, r6
 8010c2a:	4621      	mov	r1, r4
 8010c2c:	a805      	add	r0, sp, #20
 8010c2e:	f001 f94b 	bl	8011ec8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8010c32:	b1f0      	cbz	r0, 8010c72 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 8010c34:	280a      	cmp	r0, #10
 8010c36:	d018      	beq.n	8010c6a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8010c38:	9f04      	ldr	r7, [sp, #16]
 8010c3a:	b1b7      	cbz	r7, 8010c6a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8010c3c:	7b78      	ldrb	r0, [r7, #13]
 8010c3e:	7a3b      	ldrb	r3, [r7, #8]
 8010c40:	88aa      	ldrh	r2, [r5, #4]
 8010c42:	00c1      	lsls	r1, r0, #3
 8010c44:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8010c48:	4319      	orrs	r1, r3
 8010c4a:	0643      	lsls	r3, r0, #25
 8010c4c:	bf44      	itt	mi
 8010c4e:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 8010c52:	b219      	sxthmi	r1, r3
 8010c54:	0100      	lsls	r0, r0, #4
 8010c56:	79fb      	ldrb	r3, [r7, #7]
 8010c58:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8010c5c:	4303      	orrs	r3, r0
 8010c5e:	4413      	add	r3, r2
 8010c60:	1a5b      	subs	r3, r3, r1
 8010c62:	b29b      	uxth	r3, r3
 8010c64:	42a3      	cmp	r3, r4
 8010c66:	bfc8      	it	gt
 8010c68:	b21c      	sxthgt	r4, r3
 8010c6a:	4633      	mov	r3, r6
 8010c6c:	462a      	mov	r2, r5
 8010c6e:	2100      	movs	r1, #0
 8010c70:	e7dc      	b.n	8010c2c <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 8010c72:	b2a0      	uxth	r0, r4
 8010c74:	b01e      	add	sp, #120	; 0x78
 8010c76:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8010c7a:	b003      	add	sp, #12
 8010c7c:	4770      	bx	lr

08010c7e <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 8010c7e:	b40e      	push	{r1, r2, r3}
 8010c80:	b570      	push	{r4, r5, r6, lr}
 8010c82:	b09d      	sub	sp, #116	; 0x74
 8010c84:	ab21      	add	r3, sp, #132	; 0x84
 8010c86:	4604      	mov	r4, r0
 8010c88:	f853 5b04 	ldr.w	r5, [r3], #4
 8010c8c:	9302      	str	r3, [sp, #8]
 8010c8e:	a803      	add	r0, sp, #12
 8010c90:	f000 fdbd 	bl	801180e <_ZN8touchgfx12TextProviderC1Ev>
 8010c94:	6823      	ldr	r3, [r4, #0]
 8010c96:	4620      	mov	r0, r4
 8010c98:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8010c9a:	4798      	blx	r3
 8010c9c:	6823      	ldr	r3, [r4, #0]
 8010c9e:	4606      	mov	r6, r0
 8010ca0:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8010ca2:	4620      	mov	r0, r4
 8010ca4:	4798      	blx	r3
 8010ca6:	4633      	mov	r3, r6
 8010ca8:	9000      	str	r0, [sp, #0]
 8010caa:	9a02      	ldr	r2, [sp, #8]
 8010cac:	4629      	mov	r1, r5
 8010cae:	a803      	add	r0, sp, #12
 8010cb0:	f000 fe08 	bl	80118c4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8010cb4:	a803      	add	r0, sp, #12
 8010cb6:	f001 f9d5 	bl	8012064 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8010cba:	2401      	movs	r4, #1
 8010cbc:	b2a3      	uxth	r3, r4
 8010cbe:	b140      	cbz	r0, 8010cd2 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 8010cc0:	280a      	cmp	r0, #10
 8010cc2:	bf08      	it	eq
 8010cc4:	3301      	addeq	r3, #1
 8010cc6:	a803      	add	r0, sp, #12
 8010cc8:	bf08      	it	eq
 8010cca:	b21c      	sxtheq	r4, r3
 8010ccc:	f001 f9ca 	bl	8012064 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8010cd0:	e7f4      	b.n	8010cbc <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 8010cd2:	4618      	mov	r0, r3
 8010cd4:	b01d      	add	sp, #116	; 0x74
 8010cd6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010cda:	b003      	add	sp, #12
 8010cdc:	4770      	bx	lr

08010cde <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 8010cde:	b40e      	push	{r1, r2, r3}
 8010ce0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010ce2:	b09e      	sub	sp, #120	; 0x78
 8010ce4:	ab23      	add	r3, sp, #140	; 0x8c
 8010ce6:	4604      	mov	r4, r0
 8010ce8:	f853 5b04 	ldr.w	r5, [r3], #4
 8010cec:	9303      	str	r3, [sp, #12]
 8010cee:	a805      	add	r0, sp, #20
 8010cf0:	f000 fd8d 	bl	801180e <_ZN8touchgfx12TextProviderC1Ev>
 8010cf4:	6823      	ldr	r3, [r4, #0]
 8010cf6:	4620      	mov	r0, r4
 8010cf8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8010cfa:	4798      	blx	r3
 8010cfc:	6823      	ldr	r3, [r4, #0]
 8010cfe:	4606      	mov	r6, r0
 8010d00:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8010d02:	4620      	mov	r0, r4
 8010d04:	4798      	blx	r3
 8010d06:	4633      	mov	r3, r6
 8010d08:	4629      	mov	r1, r5
 8010d0a:	9000      	str	r0, [sp, #0]
 8010d0c:	9a03      	ldr	r2, [sp, #12]
 8010d0e:	a805      	add	r0, sp, #20
 8010d10:	ad1e      	add	r5, sp, #120	; 0x78
 8010d12:	f000 fdd7 	bl	80118c4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8010d16:	2100      	movs	r1, #0
 8010d18:	f845 1d68 	str.w	r1, [r5, #-104]!
 8010d1c:	4622      	mov	r2, r4
 8010d1e:	462b      	mov	r3, r5
 8010d20:	a805      	add	r0, sp, #20
 8010d22:	f001 f8d1 	bl	8011ec8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8010d26:	26ff      	movs	r6, #255	; 0xff
 8010d28:	b1d8      	cbz	r0, 8010d62 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x84>
 8010d2a:	280a      	cmp	r0, #10
 8010d2c:	d012      	beq.n	8010d54 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x76>
 8010d2e:	9804      	ldr	r0, [sp, #16]
 8010d30:	b180      	cbz	r0, 8010d54 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x76>
 8010d32:	7b47      	ldrb	r7, [r0, #13]
 8010d34:	7922      	ldrb	r2, [r4, #4]
 8010d36:	00fb      	lsls	r3, r7, #3
 8010d38:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8010d3c:	7a03      	ldrb	r3, [r0, #8]
 8010d3e:	430b      	orrs	r3, r1
 8010d40:	0679      	lsls	r1, r7, #25
 8010d42:	bf44      	itt	mi
 8010d44:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8010d48:	b21b      	sxthmi	r3, r3
 8010d4a:	1ad3      	subs	r3, r2, r3
 8010d4c:	b2db      	uxtb	r3, r3
 8010d4e:	429e      	cmp	r6, r3
 8010d50:	bf28      	it	cs
 8010d52:	461e      	movcs	r6, r3
 8010d54:	462b      	mov	r3, r5
 8010d56:	4622      	mov	r2, r4
 8010d58:	2100      	movs	r1, #0
 8010d5a:	a805      	add	r0, sp, #20
 8010d5c:	f001 f8b4 	bl	8011ec8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8010d60:	e7e2      	b.n	8010d28 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4a>
 8010d62:	4630      	mov	r0, r6
 8010d64:	b01e      	add	sp, #120	; 0x78
 8010d66:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8010d6a:	b003      	add	sp, #12
 8010d6c:	4770      	bx	lr

08010d6e <_ZNK8touchgfx8Drawable10invalidateEv>:
 8010d6e:	b513      	push	{r0, r1, r4, lr}
 8010d70:	6803      	ldr	r3, [r0, #0]
 8010d72:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8010d76:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8010d7a:	f8ad 1004 	strh.w	r1, [sp, #4]
 8010d7e:	2400      	movs	r4, #0
 8010d80:	9400      	str	r4, [sp, #0]
 8010d82:	f8ad 2006 	strh.w	r2, [sp, #6]
 8010d86:	691b      	ldr	r3, [r3, #16]
 8010d88:	4669      	mov	r1, sp
 8010d8a:	4798      	blx	r3
 8010d8c:	b002      	add	sp, #8
 8010d8e:	bd10      	pop	{r4, pc}

08010d90 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 8010d90:	b538      	push	{r3, r4, r5, lr}
 8010d92:	680b      	ldr	r3, [r1, #0]
 8010d94:	460c      	mov	r4, r1
 8010d96:	68db      	ldr	r3, [r3, #12]
 8010d98:	4605      	mov	r5, r0
 8010d9a:	4798      	blx	r3
 8010d9c:	6823      	ldr	r3, [r4, #0]
 8010d9e:	4620      	mov	r0, r4
 8010da0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010da2:	4629      	mov	r1, r5
 8010da4:	4798      	blx	r3
 8010da6:	4628      	mov	r0, r5
 8010da8:	bd38      	pop	{r3, r4, r5, pc}

08010daa <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 8010daa:	b410      	push	{r4}
 8010dac:	880a      	ldrh	r2, [r1, #0]
 8010dae:	8884      	ldrh	r4, [r0, #4]
 8010db0:	4422      	add	r2, r4
 8010db2:	800a      	strh	r2, [r1, #0]
 8010db4:	88c4      	ldrh	r4, [r0, #6]
 8010db6:	884a      	ldrh	r2, [r1, #2]
 8010db8:	4422      	add	r2, r4
 8010dba:	804a      	strh	r2, [r1, #2]
 8010dbc:	6940      	ldr	r0, [r0, #20]
 8010dbe:	b120      	cbz	r0, 8010dca <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 8010dc0:	6803      	ldr	r3, [r0, #0]
 8010dc2:	f85d 4b04 	ldr.w	r4, [sp], #4
 8010dc6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010dc8:	4718      	bx	r3
 8010dca:	f85d 4b04 	ldr.w	r4, [sp], #4
 8010dce:	4770      	bx	lr

08010dd0 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 8010dd0:	b570      	push	{r4, r5, r6, lr}
 8010dd2:	8882      	ldrh	r2, [r0, #4]
 8010dd4:	880b      	ldrh	r3, [r1, #0]
 8010dd6:	4413      	add	r3, r2
 8010dd8:	800b      	strh	r3, [r1, #0]
 8010dda:	88c2      	ldrh	r2, [r0, #6]
 8010ddc:	884b      	ldrh	r3, [r1, #2]
 8010dde:	460c      	mov	r4, r1
 8010de0:	4413      	add	r3, r2
 8010de2:	804b      	strh	r3, [r1, #2]
 8010de4:	4605      	mov	r5, r0
 8010de6:	1d01      	adds	r1, r0, #4
 8010de8:	4620      	mov	r0, r4
 8010dea:	f7f8 febf 	bl	8009b6c <_ZN8touchgfx4RectaNERKS0_>
 8010dee:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8010df2:	2b00      	cmp	r3, #0
 8010df4:	dd0b      	ble.n	8010e0e <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8010df6:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8010dfa:	2b00      	cmp	r3, #0
 8010dfc:	dd07      	ble.n	8010e0e <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8010dfe:	6968      	ldr	r0, [r5, #20]
 8010e00:	b128      	cbz	r0, 8010e0e <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8010e02:	6803      	ldr	r3, [r0, #0]
 8010e04:	4621      	mov	r1, r4
 8010e06:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8010e08:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010e0c:	4718      	bx	r3
 8010e0e:	bd70      	pop	{r4, r5, r6, pc}

08010e10 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 8010e10:	b570      	push	{r4, r5, r6, lr}
 8010e12:	8882      	ldrh	r2, [r0, #4]
 8010e14:	880b      	ldrh	r3, [r1, #0]
 8010e16:	4413      	add	r3, r2
 8010e18:	800b      	strh	r3, [r1, #0]
 8010e1a:	88c2      	ldrh	r2, [r0, #6]
 8010e1c:	884b      	ldrh	r3, [r1, #2]
 8010e1e:	460c      	mov	r4, r1
 8010e20:	4413      	add	r3, r2
 8010e22:	804b      	strh	r3, [r1, #2]
 8010e24:	4605      	mov	r5, r0
 8010e26:	1d01      	adds	r1, r0, #4
 8010e28:	4620      	mov	r0, r4
 8010e2a:	f7f8 fe9f 	bl	8009b6c <_ZN8touchgfx4RectaNERKS0_>
 8010e2e:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8010e32:	2b00      	cmp	r3, #0
 8010e34:	dd18      	ble.n	8010e68 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 8010e36:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8010e3a:	2b00      	cmp	r3, #0
 8010e3c:	dd14      	ble.n	8010e68 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 8010e3e:	6968      	ldr	r0, [r5, #20]
 8010e40:	b128      	cbz	r0, 8010e4e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 8010e42:	6803      	ldr	r3, [r0, #0]
 8010e44:	4621      	mov	r1, r4
 8010e46:	691b      	ldr	r3, [r3, #16]
 8010e48:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010e4c:	4718      	bx	r3
 8010e4e:	4b07      	ldr	r3, [pc, #28]	; (8010e6c <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 8010e50:	681b      	ldr	r3, [r3, #0]
 8010e52:	3304      	adds	r3, #4
 8010e54:	429d      	cmp	r5, r3
 8010e56:	d107      	bne.n	8010e68 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 8010e58:	f7fe fff2 	bl	800fe40 <_ZN8touchgfx11Application11getInstanceEv>
 8010e5c:	6821      	ldr	r1, [r4, #0]
 8010e5e:	6862      	ldr	r2, [r4, #4]
 8010e60:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010e64:	f7ff b862 	b.w	800ff2c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 8010e68:	bd70      	pop	{r4, r5, r6, pc}
 8010e6a:	bf00      	nop
 8010e6c:	2001749c 	.word	0x2001749c

08010e70 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 8010e70:	b570      	push	{r4, r5, r6, lr}
 8010e72:	4604      	mov	r4, r0
 8010e74:	4616      	mov	r6, r2
 8010e76:	460d      	mov	r5, r1
 8010e78:	b901      	cbnz	r1, 8010e7c <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 8010e7a:	b192      	cbz	r2, 8010ea2 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 8010e7c:	6823      	ldr	r3, [r4, #0]
 8010e7e:	4620      	mov	r0, r4
 8010e80:	699b      	ldr	r3, [r3, #24]
 8010e82:	4798      	blx	r3
 8010e84:	88e2      	ldrh	r2, [r4, #6]
 8010e86:	88a1      	ldrh	r1, [r4, #4]
 8010e88:	4432      	add	r2, r6
 8010e8a:	4429      	add	r1, r5
 8010e8c:	4620      	mov	r0, r4
 8010e8e:	b212      	sxth	r2, r2
 8010e90:	b209      	sxth	r1, r1
 8010e92:	f7f1 fe83 	bl	8002b9c <_ZN8touchgfx8Drawable5setXYEss>
 8010e96:	6823      	ldr	r3, [r4, #0]
 8010e98:	4620      	mov	r0, r4
 8010e9a:	699b      	ldr	r3, [r3, #24]
 8010e9c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010ea0:	4718      	bx	r3
 8010ea2:	bd70      	pop	{r4, r5, r6, pc}

08010ea4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 8010ea4:	b510      	push	{r4, lr}
 8010ea6:	4604      	mov	r4, r0
 8010ea8:	4608      	mov	r0, r1
 8010eaa:	2300      	movs	r3, #0
 8010eac:	8023      	strh	r3, [r4, #0]
 8010eae:	8063      	strh	r3, [r4, #2]
 8010eb0:	6803      	ldr	r3, [r0, #0]
 8010eb2:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8010eb6:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 8010eba:	80a1      	strh	r1, [r4, #4]
 8010ebc:	80e2      	strh	r2, [r4, #6]
 8010ebe:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010ec0:	4621      	mov	r1, r4
 8010ec2:	4798      	blx	r3
 8010ec4:	4620      	mov	r0, r4
 8010ec6:	bd10      	pop	{r4, pc}

08010ec8 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>:
 8010ec8:	b530      	push	{r4, r5, lr}
 8010eca:	8083      	strh	r3, [r0, #4]
 8010ecc:	f89d 300c 	ldrb.w	r3, [sp, #12]
 8010ed0:	f89d 5010 	ldrb.w	r5, [sp, #16]
 8010ed4:	7183      	strb	r3, [r0, #6]
 8010ed6:	79c3      	ldrb	r3, [r0, #7]
 8010ed8:	6101      	str	r1, [r0, #16]
 8010eda:	f365 0306 	bfi	r3, r5, #0, #7
 8010ede:	f89d 5014 	ldrb.w	r5, [sp, #20]
 8010ee2:	8282      	strh	r2, [r0, #20]
 8010ee4:	f365 13c7 	bfi	r3, r5, #7, #1
 8010ee8:	71c3      	strb	r3, [r0, #7]
 8010eea:	f89d 3018 	ldrb.w	r3, [sp, #24]
 8010eee:	7203      	strb	r3, [r0, #8]
 8010ef0:	f89d 301c 	ldrb.w	r3, [sp, #28]
 8010ef4:	7243      	strb	r3, [r0, #9]
 8010ef6:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8010efa:	8143      	strh	r3, [r0, #10]
 8010efc:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 8010f00:	8183      	strh	r3, [r0, #12]
 8010f02:	4b01      	ldr	r3, [pc, #4]	; (8010f08 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt+0x40>)
 8010f04:	6003      	str	r3, [r0, #0]
 8010f06:	bd30      	pop	{r4, r5, pc}
 8010f08:	08022c48 	.word	0x08022c48

08010f0c <_ZNK8touchgfx9ConstFont4findEt>:
 8010f0c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010f0e:	6904      	ldr	r4, [r0, #16]
 8010f10:	b3bc      	cbz	r4, 8010f82 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8010f12:	88a3      	ldrh	r3, [r4, #4]
 8010f14:	8a82      	ldrh	r2, [r0, #20]
 8010f16:	1acb      	subs	r3, r1, r3
 8010f18:	f102 32ff 	add.w	r2, r2, #4294967295
 8010f1c:	d431      	bmi.n	8010f82 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8010f1e:	4293      	cmp	r3, r2
 8010f20:	dd0c      	ble.n	8010f3c <_ZNK8touchgfx9ConstFont4findEt+0x30>
 8010f22:	230e      	movs	r3, #14
 8010f24:	fb03 4302 	mla	r3, r3, r2, r4
 8010f28:	889b      	ldrh	r3, [r3, #4]
 8010f2a:	1a5b      	subs	r3, r3, r1
 8010f2c:	1ad3      	subs	r3, r2, r3
 8010f2e:	429a      	cmp	r2, r3
 8010f30:	db27      	blt.n	8010f82 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8010f32:	2b00      	cmp	r3, #0
 8010f34:	bfbc      	itt	lt
 8010f36:	2302      	movlt	r3, #2
 8010f38:	fb92 f3f3 	sdivlt	r3, r2, r3
 8010f3c:	2500      	movs	r5, #0
 8010f3e:	260e      	movs	r6, #14
 8010f40:	4295      	cmp	r5, r2
 8010f42:	dc1e      	bgt.n	8010f82 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8010f44:	fb06 4003 	mla	r0, r6, r3, r4
 8010f48:	8887      	ldrh	r7, [r0, #4]
 8010f4a:	42b9      	cmp	r1, r7
 8010f4c:	d01a      	beq.n	8010f84 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 8010f4e:	d20d      	bcs.n	8010f6c <_ZNK8touchgfx9ConstFont4findEt+0x60>
 8010f50:	1e5a      	subs	r2, r3, #1
 8010f52:	4295      	cmp	r5, r2
 8010f54:	dc15      	bgt.n	8010f82 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8010f56:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 8010f5a:	1a5b      	subs	r3, r3, r1
 8010f5c:	1ad3      	subs	r3, r2, r3
 8010f5e:	429a      	cmp	r2, r3
 8010f60:	db0f      	blt.n	8010f82 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8010f62:	429d      	cmp	r5, r3
 8010f64:	ddec      	ble.n	8010f40 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8010f66:	1953      	adds	r3, r2, r5
 8010f68:	105b      	asrs	r3, r3, #1
 8010f6a:	e7e9      	b.n	8010f40 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8010f6c:	1c5d      	adds	r5, r3, #1
 8010f6e:	42aa      	cmp	r2, r5
 8010f70:	db07      	blt.n	8010f82 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8010f72:	8a43      	ldrh	r3, [r0, #18]
 8010f74:	1acb      	subs	r3, r1, r3
 8010f76:	442b      	add	r3, r5
 8010f78:	429d      	cmp	r5, r3
 8010f7a:	dc02      	bgt.n	8010f82 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8010f7c:	429a      	cmp	r2, r3
 8010f7e:	dadf      	bge.n	8010f40 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8010f80:	e7f1      	b.n	8010f66 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 8010f82:	2000      	movs	r0, #0
 8010f84:	bdf0      	pop	{r4, r5, r6, r7, pc}

08010f86 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 8010f86:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010f88:	4604      	mov	r4, r0
 8010f8a:	4617      	mov	r7, r2
 8010f8c:	461e      	mov	r6, r3
 8010f8e:	b911      	cbnz	r1, 8010f96 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 8010f90:	2500      	movs	r5, #0
 8010f92:	4628      	mov	r0, r5
 8010f94:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8010f96:	290a      	cmp	r1, #10
 8010f98:	d0fa      	beq.n	8010f90 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8010f9a:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 8010f9e:	4291      	cmp	r1, r2
 8010fa0:	d0f6      	beq.n	8010f90 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8010fa2:	f242 020b 	movw	r2, #8203	; 0x200b
 8010fa6:	4291      	cmp	r1, r2
 8010fa8:	d0f2      	beq.n	8010f90 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8010faa:	f7ff ffaf 	bl	8010f0c <_ZNK8touchgfx9ConstFont4findEt>
 8010fae:	4605      	mov	r5, r0
 8010fb0:	b950      	cbnz	r0, 8010fc8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 8010fb2:	6823      	ldr	r3, [r4, #0]
 8010fb4:	4620      	mov	r0, r4
 8010fb6:	691b      	ldr	r3, [r3, #16]
 8010fb8:	4798      	blx	r3
 8010fba:	4601      	mov	r1, r0
 8010fbc:	4620      	mov	r0, r4
 8010fbe:	f7ff ffa5 	bl	8010f0c <_ZNK8touchgfx9ConstFont4findEt>
 8010fc2:	4605      	mov	r5, r0
 8010fc4:	2800      	cmp	r0, #0
 8010fc6:	d0e3      	beq.n	8010f90 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8010fc8:	6823      	ldr	r3, [r4, #0]
 8010fca:	4629      	mov	r1, r5
 8010fcc:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8010fce:	4620      	mov	r0, r4
 8010fd0:	4798      	blx	r3
 8010fd2:	6038      	str	r0, [r7, #0]
 8010fd4:	6823      	ldr	r3, [r4, #0]
 8010fd6:	4620      	mov	r0, r4
 8010fd8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8010fda:	4798      	blx	r3
 8010fdc:	7030      	strb	r0, [r6, #0]
 8010fde:	e7d8      	b.n	8010f92 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

08010fe0 <_ZN8touchgfx4clzuEm>:
 8010fe0:	4603      	mov	r3, r0
 8010fe2:	b1c8      	cbz	r0, 8011018 <_ZN8touchgfx4clzuEm+0x38>
 8010fe4:	0c02      	lsrs	r2, r0, #16
 8010fe6:	0412      	lsls	r2, r2, #16
 8010fe8:	b9a2      	cbnz	r2, 8011014 <_ZN8touchgfx4clzuEm+0x34>
 8010fea:	0403      	lsls	r3, r0, #16
 8010fec:	2010      	movs	r0, #16
 8010fee:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8010ff2:	bf04      	itt	eq
 8010ff4:	021b      	lsleq	r3, r3, #8
 8010ff6:	3008      	addeq	r0, #8
 8010ff8:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8010ffc:	bf04      	itt	eq
 8010ffe:	011b      	lsleq	r3, r3, #4
 8011000:	3004      	addeq	r0, #4
 8011002:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8011006:	bf04      	itt	eq
 8011008:	009b      	lsleq	r3, r3, #2
 801100a:	3002      	addeq	r0, #2
 801100c:	2b00      	cmp	r3, #0
 801100e:	db04      	blt.n	801101a <_ZN8touchgfx4clzuEm+0x3a>
 8011010:	3001      	adds	r0, #1
 8011012:	4770      	bx	lr
 8011014:	2000      	movs	r0, #0
 8011016:	e7ea      	b.n	8010fee <_ZN8touchgfx4clzuEm+0xe>
 8011018:	2020      	movs	r0, #32
 801101a:	4770      	bx	lr

0801101c <_ZN8touchgfx7muldivuEmmmRm>:
 801101c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011020:	4680      	mov	r8, r0
 8011022:	460f      	mov	r7, r1
 8011024:	4615      	mov	r5, r2
 8011026:	461e      	mov	r6, r3
 8011028:	f7ff ffda 	bl	8010fe0 <_ZN8touchgfx4clzuEm>
 801102c:	b998      	cbnz	r0, 8011056 <_ZN8touchgfx7muldivuEmmmRm+0x3a>
 801102e:	4608      	mov	r0, r1
 8011030:	f7ff ffd6 	bl	8010fe0 <_ZN8touchgfx4clzuEm>
 8011034:	2800      	cmp	r0, #0
 8011036:	dd08      	ble.n	801104a <_ZN8touchgfx7muldivuEmmmRm+0x2e>
 8011038:	4633      	mov	r3, r6
 801103a:	462a      	mov	r2, r5
 801103c:	4641      	mov	r1, r8
 801103e:	4638      	mov	r0, r7
 8011040:	f7ff ffec 	bl	801101c <_ZN8touchgfx7muldivuEmmmRm>
 8011044:	b003      	add	sp, #12
 8011046:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801104a:	f04f 33ff 	mov.w	r3, #4294967295
 801104e:	6033      	str	r3, [r6, #0]
 8011050:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8011054:	e7f6      	b.n	8011044 <_ZN8touchgfx7muldivuEmmmRm+0x28>
 8011056:	fa31 f900 	lsrs.w	r9, r1, r0
 801105a:	fb01 f308 	mul.w	r3, r1, r8
 801105e:	d105      	bne.n	801106c <_ZN8touchgfx7muldivuEmmmRm+0x50>
 8011060:	fbb3 f0f5 	udiv	r0, r3, r5
 8011064:	fb05 3510 	mls	r5, r5, r0, r3
 8011068:	6035      	str	r5, [r6, #0]
 801106a:	e7eb      	b.n	8011044 <_ZN8touchgfx7muldivuEmmmRm+0x28>
 801106c:	2301      	movs	r3, #1
 801106e:	fa08 fb00 	lsl.w	fp, r8, r0
 8011072:	fa03 f000 	lsl.w	r0, r3, r0
 8011076:	3801      	subs	r0, #1
 8011078:	462a      	mov	r2, r5
 801107a:	4633      	mov	r3, r6
 801107c:	4641      	mov	r1, r8
 801107e:	4038      	ands	r0, r7
 8011080:	f7ff ffcc 	bl	801101c <_ZN8touchgfx7muldivuEmmmRm>
 8011084:	fbbb faf5 	udiv	sl, fp, r5
 8011088:	462a      	mov	r2, r5
 801108a:	4607      	mov	r7, r0
 801108c:	ab01      	add	r3, sp, #4
 801108e:	fb05 b11a 	mls	r1, r5, sl, fp
 8011092:	4648      	mov	r0, r9
 8011094:	f7ff ffc2 	bl	801101c <_ZN8touchgfx7muldivuEmmmRm>
 8011098:	9b01      	ldr	r3, [sp, #4]
 801109a:	6832      	ldr	r2, [r6, #0]
 801109c:	fb09 f40a 	mul.w	r4, r9, sl
 80110a0:	441a      	add	r2, r3
 80110a2:	fbb2 f3f5 	udiv	r3, r2, r5
 80110a6:	441c      	add	r4, r3
 80110a8:	443c      	add	r4, r7
 80110aa:	4420      	add	r0, r4
 80110ac:	fb05 2513 	mls	r5, r5, r3, r2
 80110b0:	e7da      	b.n	8011068 <_ZN8touchgfx7muldivuEmmmRm+0x4c>

080110b2 <_ZN8touchgfx6muldivElllRl>:
 80110b2:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80110b4:	2800      	cmp	r0, #0
 80110b6:	bfba      	itte	lt
 80110b8:	4240      	neglt	r0, r0
 80110ba:	f04f 34ff 	movlt.w	r4, #4294967295
 80110be:	2401      	movge	r4, #1
 80110c0:	2900      	cmp	r1, #0
 80110c2:	bfbc      	itt	lt
 80110c4:	4249      	neglt	r1, r1
 80110c6:	4264      	neglt	r4, r4
 80110c8:	2a00      	cmp	r2, #0
 80110ca:	bfb6      	itet	lt
 80110cc:	4265      	neglt	r5, r4
 80110ce:	4625      	movge	r5, r4
 80110d0:	4252      	neglt	r2, r2
 80110d2:	4288      	cmp	r0, r1
 80110d4:	461e      	mov	r6, r3
 80110d6:	bfc2      	ittt	gt
 80110d8:	4603      	movgt	r3, r0
 80110da:	4608      	movgt	r0, r1
 80110dc:	4619      	movgt	r1, r3
 80110de:	ab01      	add	r3, sp, #4
 80110e0:	f7ff ff9c 	bl	801101c <_ZN8touchgfx7muldivuEmmmRm>
 80110e4:	9b01      	ldr	r3, [sp, #4]
 80110e6:	4368      	muls	r0, r5
 80110e8:	435c      	muls	r4, r3
 80110ea:	6034      	str	r4, [r6, #0]
 80110ec:	b002      	add	sp, #8
 80110ee:	bd70      	pop	{r4, r5, r6, pc}

080110f0 <_ZN8touchgfx6muldivElll>:
 80110f0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80110f2:	4606      	mov	r6, r0
 80110f4:	ab01      	add	r3, sp, #4
 80110f6:	460d      	mov	r5, r1
 80110f8:	4614      	mov	r4, r2
 80110fa:	f7ff ffda 	bl	80110b2 <_ZN8touchgfx6muldivElllRl>
 80110fe:	2e00      	cmp	r6, #0
 8011100:	db20      	blt.n	8011144 <_ZN8touchgfx6muldivElll+0x54>
 8011102:	bf14      	ite	ne
 8011104:	2301      	movne	r3, #1
 8011106:	2300      	moveq	r3, #0
 8011108:	2d00      	cmp	r5, #0
 801110a:	db1e      	blt.n	801114a <_ZN8touchgfx6muldivElll+0x5a>
 801110c:	bf14      	ite	ne
 801110e:	2201      	movne	r2, #1
 8011110:	2200      	moveq	r2, #0
 8011112:	2c00      	cmp	r4, #0
 8011114:	fb03 f202 	mul.w	r2, r3, r2
 8011118:	db1a      	blt.n	8011150 <_ZN8touchgfx6muldivElll+0x60>
 801111a:	bf14      	ite	ne
 801111c:	2301      	movne	r3, #1
 801111e:	2300      	moveq	r3, #0
 8011120:	4353      	muls	r3, r2
 8011122:	2b01      	cmp	r3, #1
 8011124:	d117      	bne.n	8011156 <_ZN8touchgfx6muldivElll+0x66>
 8011126:	9b01      	ldr	r3, [sp, #4]
 8011128:	2c00      	cmp	r4, #0
 801112a:	bfb8      	it	lt
 801112c:	4264      	neglt	r4, r4
 801112e:	2b00      	cmp	r3, #0
 8011130:	f104 0401 	add.w	r4, r4, #1
 8011134:	bfb8      	it	lt
 8011136:	425b      	neglt	r3, r3
 8011138:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 801113c:	db00      	blt.n	8011140 <_ZN8touchgfx6muldivElll+0x50>
 801113e:	3001      	adds	r0, #1
 8011140:	b002      	add	sp, #8
 8011142:	bd70      	pop	{r4, r5, r6, pc}
 8011144:	f04f 33ff 	mov.w	r3, #4294967295
 8011148:	e7de      	b.n	8011108 <_ZN8touchgfx6muldivElll+0x18>
 801114a:	f04f 32ff 	mov.w	r2, #4294967295
 801114e:	e7e0      	b.n	8011112 <_ZN8touchgfx6muldivElll+0x22>
 8011150:	f04f 33ff 	mov.w	r3, #4294967295
 8011154:	e7e4      	b.n	8011120 <_ZN8touchgfx6muldivElll+0x30>
 8011156:	3301      	adds	r3, #1
 8011158:	d1f2      	bne.n	8011140 <_ZN8touchgfx6muldivElll+0x50>
 801115a:	9b01      	ldr	r3, [sp, #4]
 801115c:	2c00      	cmp	r4, #0
 801115e:	bfb8      	it	lt
 8011160:	4264      	neglt	r4, r4
 8011162:	2b00      	cmp	r3, #0
 8011164:	bfb8      	it	lt
 8011166:	425b      	neglt	r3, r3
 8011168:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 801116c:	bfc8      	it	gt
 801116e:	f100 30ff 	addgt.w	r0, r0, #4294967295
 8011172:	e7e5      	b.n	8011140 <_ZN8touchgfx6muldivElll+0x50>

08011174 <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 8011174:	2000      	movs	r0, #0
 8011176:	4770      	bx	lr

08011178 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 8011178:	2001      	movs	r0, #1
 801117a:	4770      	bx	lr

0801117c <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 801117c:	2002      	movs	r0, #2
 801117e:	4770      	bx	lr

08011180 <_ZN8touchgfx6ScreenD1Ev>:
 8011180:	4770      	bx	lr

08011182 <_ZN8touchgfx12GestureEventD1Ev>:
 8011182:	4770      	bx	lr

08011184 <_ZN8touchgfx9DragEventD1Ev>:
 8011184:	4770      	bx	lr

08011186 <_ZN8touchgfx10ClickEventD1Ev>:
 8011186:	4770      	bx	lr

08011188 <_ZN8touchgfx10ClickEventD0Ev>:
 8011188:	b510      	push	{r4, lr}
 801118a:	210c      	movs	r1, #12
 801118c:	4604      	mov	r4, r0
 801118e:	f00e f992 	bl	801f4b6 <_ZdlPvj>
 8011192:	4620      	mov	r0, r4
 8011194:	bd10      	pop	{r4, pc}

08011196 <_ZN8touchgfx9DragEventD0Ev>:
 8011196:	b510      	push	{r4, lr}
 8011198:	2110      	movs	r1, #16
 801119a:	4604      	mov	r4, r0
 801119c:	f00e f98b 	bl	801f4b6 <_ZdlPvj>
 80111a0:	4620      	mov	r0, r4
 80111a2:	bd10      	pop	{r4, pc}

080111a4 <_ZN8touchgfx12GestureEventD0Ev>:
 80111a4:	b510      	push	{r4, lr}
 80111a6:	210c      	movs	r1, #12
 80111a8:	4604      	mov	r4, r0
 80111aa:	f00e f984 	bl	801f4b6 <_ZdlPvj>
 80111ae:	4620      	mov	r0, r4
 80111b0:	bd10      	pop	{r4, pc}

080111b2 <_ZN8touchgfx6ScreenD0Ev>:
 80111b2:	b510      	push	{r4, lr}
 80111b4:	213c      	movs	r1, #60	; 0x3c
 80111b6:	4604      	mov	r4, r0
 80111b8:	f00e f97d 	bl	801f4b6 <_ZdlPvj>
 80111bc:	4620      	mov	r0, r4
 80111be:	bd10      	pop	{r4, pc}

080111c0 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 80111c0:	b530      	push	{r4, r5, lr}
 80111c2:	460d      	mov	r5, r1
 80111c4:	6b01      	ldr	r1, [r0, #48]	; 0x30
 80111c6:	b087      	sub	sp, #28
 80111c8:	4604      	mov	r4, r0
 80111ca:	b301      	cbz	r1, 801120e <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 80111cc:	a801      	add	r0, sp, #4
 80111ce:	f7ff fe69 	bl	8010ea4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80111d2:	892a      	ldrh	r2, [r5, #8]
 80111d4:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 80111d8:	7928      	ldrb	r0, [r5, #4]
 80111da:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 80111de:	f88d 0010 	strb.w	r0, [sp, #16]
 80111e2:	1ad2      	subs	r2, r2, r3
 80111e4:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 80111e6:	6b20      	ldr	r0, [r4, #48]	; 0x30
 80111e8:	f8ad 1012 	strh.w	r1, [sp, #18]
 80111ec:	441a      	add	r2, r3
 80111ee:	896b      	ldrh	r3, [r5, #10]
 80111f0:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 80111f4:	f8ad 2014 	strh.w	r2, [sp, #20]
 80111f8:	1b5b      	subs	r3, r3, r5
 80111fa:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 80111fc:	442b      	add	r3, r5
 80111fe:	4d05      	ldr	r5, [pc, #20]	; (8011214 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 8011200:	9503      	str	r5, [sp, #12]
 8011202:	f8ad 3016 	strh.w	r3, [sp, #22]
 8011206:	6803      	ldr	r3, [r0, #0]
 8011208:	a903      	add	r1, sp, #12
 801120a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801120c:	4798      	blx	r3
 801120e:	b007      	add	sp, #28
 8011210:	bd30      	pop	{r4, r5, pc}
 8011212:	bf00      	nop
 8011214:	08022cc8 	.word	0x08022cc8

08011218 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 8011218:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801121c:	6b03      	ldr	r3, [r0, #48]	; 0x30
 801121e:	b08a      	sub	sp, #40	; 0x28
 8011220:	4604      	mov	r4, r0
 8011222:	460d      	mov	r5, r1
 8011224:	b113      	cbz	r3, 801122c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 8011226:	790b      	ldrb	r3, [r1, #4]
 8011228:	2b00      	cmp	r3, #0
 801122a:	d044      	beq.n	80112b6 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 801122c:	f104 0804 	add.w	r8, r4, #4
 8011230:	4641      	mov	r1, r8
 8011232:	a803      	add	r0, sp, #12
 8011234:	f7ff fe36 	bl	8010ea4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011238:	792b      	ldrb	r3, [r5, #4]
 801123a:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801123e:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 8011242:	b983      	cbnz	r3, 8011266 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 8011244:	892a      	ldrh	r2, [r5, #8]
 8011246:	88e9      	ldrh	r1, [r5, #6]
 8011248:	f104 0336 	add.w	r3, r4, #54	; 0x36
 801124c:	1b92      	subs	r2, r2, r6
 801124e:	1bc9      	subs	r1, r1, r7
 8011250:	9301      	str	r3, [sp, #4]
 8011252:	f104 0334 	add.w	r3, r4, #52	; 0x34
 8011256:	9300      	str	r3, [sp, #0]
 8011258:	b212      	sxth	r2, r2
 801125a:	f104 0330 	add.w	r3, r4, #48	; 0x30
 801125e:	b209      	sxth	r1, r1
 8011260:	4640      	mov	r0, r8
 8011262:	f7f8 fb9f 	bl	80099a4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 8011266:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8011268:	b329      	cbz	r1, 80112b6 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 801126a:	a805      	add	r0, sp, #20
 801126c:	f7ff fe1a 	bl	8010ea4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011270:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8011274:	792b      	ldrb	r3, [r5, #4]
 8011276:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8011278:	f88d 3020 	strb.w	r3, [sp, #32]
 801127c:	1abf      	subs	r7, r7, r2
 801127e:	88ea      	ldrh	r2, [r5, #6]
 8011280:	4417      	add	r7, r2
 8011282:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 8011284:	4417      	add	r7, r2
 8011286:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 801128a:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 801128e:	1ab6      	subs	r6, r6, r2
 8011290:	892a      	ldrh	r2, [r5, #8]
 8011292:	4416      	add	r6, r2
 8011294:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8011296:	4416      	add	r6, r2
 8011298:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 801129c:	4a07      	ldr	r2, [pc, #28]	; (80112bc <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 801129e:	9207      	str	r2, [sp, #28]
 80112a0:	2600      	movs	r6, #0
 80112a2:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 80112a6:	6803      	ldr	r3, [r0, #0]
 80112a8:	a907      	add	r1, sp, #28
 80112aa:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80112ac:	4798      	blx	r3
 80112ae:	792b      	ldrb	r3, [r5, #4]
 80112b0:	b10b      	cbz	r3, 80112b6 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 80112b2:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 80112b6:	b00a      	add	sp, #40	; 0x28
 80112b8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80112bc:	08022ca0 	.word	0x08022ca0

080112c0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 80112c0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80112c4:	460c      	mov	r4, r1
 80112c6:	6b01      	ldr	r1, [r0, #48]	; 0x30
 80112c8:	b088      	sub	sp, #32
 80112ca:	4605      	mov	r5, r0
 80112cc:	2900      	cmp	r1, #0
 80112ce:	d06d      	beq.n	80113ac <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 80112d0:	4668      	mov	r0, sp
 80112d2:	f7ff fde7 	bl	8010ea4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80112d6:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 80112d8:	88e3      	ldrh	r3, [r4, #6]
 80112da:	f9bd 8000 	ldrsh.w	r8, [sp]
 80112de:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 80112e2:	440b      	add	r3, r1
 80112e4:	b21b      	sxth	r3, r3
 80112e6:	4543      	cmp	r3, r8
 80112e8:	db31      	blt.n	801134e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80112ea:	f8bd c004 	ldrh.w	ip, [sp, #4]
 80112ee:	44c4      	add	ip, r8
 80112f0:	fa0f fc8c 	sxth.w	ip, ip
 80112f4:	4563      	cmp	r3, ip
 80112f6:	da2a      	bge.n	801134e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80112f8:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 80112fa:	8926      	ldrh	r6, [r4, #8]
 80112fc:	4416      	add	r6, r2
 80112fe:	b236      	sxth	r6, r6
 8011300:	42be      	cmp	r6, r7
 8011302:	db24      	blt.n	801134e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8011304:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8011308:	4438      	add	r0, r7
 801130a:	b200      	sxth	r0, r0
 801130c:	4286      	cmp	r6, r0
 801130e:	da1e      	bge.n	801134e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8011310:	8963      	ldrh	r3, [r4, #10]
 8011312:	4419      	add	r1, r3
 8011314:	b209      	sxth	r1, r1
 8011316:	4541      	cmp	r1, r8
 8011318:	db08      	blt.n	801132c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801131a:	4561      	cmp	r1, ip
 801131c:	da06      	bge.n	801132c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801131e:	89a3      	ldrh	r3, [r4, #12]
 8011320:	441a      	add	r2, r3
 8011322:	b212      	sxth	r2, r2
 8011324:	42ba      	cmp	r2, r7
 8011326:	db01      	blt.n	801132c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8011328:	4282      	cmp	r2, r0
 801132a:	db10      	blt.n	801134e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801132c:	4b21      	ldr	r3, [pc, #132]	; (80113b4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 801132e:	9304      	str	r3, [sp, #16]
 8011330:	2302      	movs	r3, #2
 8011332:	f88d 3014 	strb.w	r3, [sp, #20]
 8011336:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8011338:	2300      	movs	r3, #0
 801133a:	f8ad 3016 	strh.w	r3, [sp, #22]
 801133e:	f8ad 3018 	strh.w	r3, [sp, #24]
 8011342:	f8ad 301a 	strh.w	r3, [sp, #26]
 8011346:	6803      	ldr	r3, [r0, #0]
 8011348:	a904      	add	r1, sp, #16
 801134a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801134c:	4798      	blx	r3
 801134e:	1d29      	adds	r1, r5, #4
 8011350:	a802      	add	r0, sp, #8
 8011352:	f7ff fda7 	bl	8010ea4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011356:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801135a:	88e0      	ldrh	r0, [r4, #6]
 801135c:	7921      	ldrb	r1, [r4, #4]
 801135e:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 8011362:	8922      	ldrh	r2, [r4, #8]
 8011364:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 8011366:	f88d 1014 	strb.w	r1, [sp, #20]
 801136a:	eba3 0808 	sub.w	r8, r3, r8
 801136e:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8011372:	1bdf      	subs	r7, r3, r7
 8011374:	b2bb      	uxth	r3, r7
 8011376:	fa1f f888 	uxth.w	r8, r8
 801137a:	8967      	ldrh	r7, [r4, #10]
 801137c:	89a4      	ldrh	r4, [r4, #12]
 801137e:	4440      	add	r0, r8
 8011380:	4460      	add	r0, ip
 8011382:	441a      	add	r2, r3
 8011384:	44b8      	add	r8, r7
 8011386:	4423      	add	r3, r4
 8011388:	f8ad 0016 	strh.w	r0, [sp, #22]
 801138c:	4433      	add	r3, r6
 801138e:	4432      	add	r2, r6
 8011390:	44e0      	add	r8, ip
 8011392:	4c09      	ldr	r4, [pc, #36]	; (80113b8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 8011394:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8011396:	9404      	str	r4, [sp, #16]
 8011398:	f8ad 2018 	strh.w	r2, [sp, #24]
 801139c:	f8ad 801a 	strh.w	r8, [sp, #26]
 80113a0:	f8ad 301c 	strh.w	r3, [sp, #28]
 80113a4:	6803      	ldr	r3, [r0, #0]
 80113a6:	a904      	add	r1, sp, #16
 80113a8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80113aa:	4798      	blx	r3
 80113ac:	b008      	add	sp, #32
 80113ae:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80113b2:	bf00      	nop
 80113b4:	08022ca0 	.word	0x08022ca0
 80113b8:	08022cb4 	.word	0x08022cb4

080113bc <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 80113bc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80113be:	4604      	mov	r4, r0
 80113c0:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 80113c4:	3201      	adds	r2, #1
 80113c6:	d112      	bne.n	80113ee <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 80113c8:	6803      	ldr	r3, [r0, #0]
 80113ca:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 80113ce:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80113d2:	f8ad 1004 	strh.w	r1, [sp, #4]
 80113d6:	2500      	movs	r5, #0
 80113d8:	9500      	str	r5, [sp, #0]
 80113da:	466d      	mov	r5, sp
 80113dc:	4629      	mov	r1, r5
 80113de:	f8ad 2006 	strh.w	r2, [sp, #6]
 80113e2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80113e4:	4798      	blx	r3
 80113e6:	e895 0003 	ldmia.w	r5, {r0, r1}
 80113ea:	e884 0003 	stmia.w	r4, {r0, r1}
 80113ee:	4620      	mov	r0, r4
 80113f0:	b003      	add	sp, #12
 80113f2:	bd30      	pop	{r4, r5, pc}

080113f4 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 80113f4:	b513      	push	{r0, r1, r4, lr}
 80113f6:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 80113fa:	3301      	adds	r3, #1
 80113fc:	4604      	mov	r4, r0
 80113fe:	d109      	bne.n	8011414 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 8011400:	4601      	mov	r1, r0
 8011402:	4668      	mov	r0, sp
 8011404:	f7ff fd4e 	bl	8010ea4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011408:	f8bd 3000 	ldrh.w	r3, [sp]
 801140c:	8423      	strh	r3, [r4, #32]
 801140e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8011412:	8463      	strh	r3, [r4, #34]	; 0x22
 8011414:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 8011418:	b002      	add	sp, #8
 801141a:	bd10      	pop	{r4, pc}

0801141c <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 801141c:	b513      	push	{r0, r1, r4, lr}
 801141e:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 8011422:	3301      	adds	r3, #1
 8011424:	4604      	mov	r4, r0
 8011426:	d109      	bne.n	801143c <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 8011428:	4601      	mov	r1, r0
 801142a:	4668      	mov	r0, sp
 801142c:	f7ff fd3a 	bl	8010ea4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011430:	f8bd 3000 	ldrh.w	r3, [sp]
 8011434:	8423      	strh	r3, [r4, #32]
 8011436:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801143a:	8463      	strh	r3, [r4, #34]	; 0x22
 801143c:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 8011440:	b002      	add	sp, #8
 8011442:	bd10      	pop	{r4, pc}

08011444 <_ZN8touchgfx6ScreenC1Ev>:
 8011444:	b570      	push	{r4, r5, r6, lr}
 8011446:	4605      	mov	r5, r0
 8011448:	4b16      	ldr	r3, [pc, #88]	; (80114a4 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 801144a:	f845 3b04 	str.w	r3, [r5], #4
 801144e:	2300      	movs	r3, #0
 8011450:	8103      	strh	r3, [r0, #8]
 8011452:	8143      	strh	r3, [r0, #10]
 8011454:	8183      	strh	r3, [r0, #12]
 8011456:	81c3      	strh	r3, [r0, #14]
 8011458:	8203      	strh	r3, [r0, #16]
 801145a:	8243      	strh	r3, [r0, #18]
 801145c:	8283      	strh	r3, [r0, #20]
 801145e:	82c3      	strh	r3, [r0, #22]
 8011460:	e9c0 3306 	strd	r3, r3, [r0, #24]
 8011464:	6203      	str	r3, [r0, #32]
 8011466:	8483      	strh	r3, [r0, #36]	; 0x24
 8011468:	84c3      	strh	r3, [r0, #38]	; 0x26
 801146a:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 801146e:	4a0e      	ldr	r2, [pc, #56]	; (80114a8 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 8011470:	6343      	str	r3, [r0, #52]	; 0x34
 8011472:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 8011476:	4b0d      	ldr	r3, [pc, #52]	; (80114ac <_ZN8touchgfx6ScreenC1Ev+0x68>)
 8011478:	6042      	str	r2, [r0, #4]
 801147a:	f9b3 6000 	ldrsh.w	r6, [r3]
 801147e:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8011480:	4a0b      	ldr	r2, [pc, #44]	; (80114b0 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 8011482:	4604      	mov	r4, r0
 8011484:	2101      	movs	r1, #1
 8011486:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 801148a:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 801148e:	f9b2 1000 	ldrsh.w	r1, [r2]
 8011492:	4628      	mov	r0, r5
 8011494:	4798      	blx	r3
 8011496:	6863      	ldr	r3, [r4, #4]
 8011498:	4628      	mov	r0, r5
 801149a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801149c:	4631      	mov	r1, r6
 801149e:	4798      	blx	r3
 80114a0:	4620      	mov	r0, r4
 80114a2:	bd70      	pop	{r4, r5, r6, pc}
 80114a4:	08022cdc 	.word	0x08022cdc
 80114a8:	080221dc 	.word	0x080221dc
 80114ac:	2001744e 	.word	0x2001744e
 80114b0:	2001744c 	.word	0x2001744c

080114b4 <_ZN8touchgfx6Screen4drawEv>:
 80114b4:	b507      	push	{r0, r1, r2, lr}
 80114b6:	4b09      	ldr	r3, [pc, #36]	; (80114dc <_ZN8touchgfx6Screen4drawEv+0x28>)
 80114b8:	f9b3 2000 	ldrsh.w	r2, [r3]
 80114bc:	4b08      	ldr	r3, [pc, #32]	; (80114e0 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 80114be:	f8ad 2004 	strh.w	r2, [sp, #4]
 80114c2:	f9b3 3000 	ldrsh.w	r3, [r3]
 80114c6:	f8ad 3006 	strh.w	r3, [sp, #6]
 80114ca:	6803      	ldr	r3, [r0, #0]
 80114cc:	2100      	movs	r1, #0
 80114ce:	9100      	str	r1, [sp, #0]
 80114d0:	689b      	ldr	r3, [r3, #8]
 80114d2:	4669      	mov	r1, sp
 80114d4:	4798      	blx	r3
 80114d6:	b003      	add	sp, #12
 80114d8:	f85d fb04 	ldr.w	pc, [sp], #4
 80114dc:	2001744c 	.word	0x2001744c
 80114e0:	2001744e 	.word	0x2001744e

080114e4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 80114e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80114e8:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 80114ec:	2b00      	cmp	r3, #0
 80114ee:	b089      	sub	sp, #36	; 0x24
 80114f0:	4680      	mov	r8, r0
 80114f2:	460c      	mov	r4, r1
 80114f4:	4615      	mov	r5, r2
 80114f6:	dd0e      	ble.n	8011516 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80114f8:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 80114fc:	2b00      	cmp	r3, #0
 80114fe:	dd0a      	ble.n	8011516 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8011500:	4628      	mov	r0, r5
 8011502:	f7ff ff5b 	bl	80113bc <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8011506:	4621      	mov	r1, r4
 8011508:	f7fe fc01 	bl	800fd0e <_ZNK8touchgfx4Rect9intersectERKS0_>
 801150c:	69eb      	ldr	r3, [r5, #28]
 801150e:	b928      	cbnz	r0, 801151c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 8011510:	461d      	mov	r5, r3
 8011512:	2b00      	cmp	r3, #0
 8011514:	d1f4      	bne.n	8011500 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 8011516:	b009      	add	sp, #36	; 0x24
 8011518:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801151c:	ae04      	add	r6, sp, #16
 801151e:	2b00      	cmp	r3, #0
 8011520:	f000 80b5 	beq.w	801168e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8011524:	682b      	ldr	r3, [r5, #0]
 8011526:	4629      	mov	r1, r5
 8011528:	68db      	ldr	r3, [r3, #12]
 801152a:	a802      	add	r0, sp, #8
 801152c:	4798      	blx	r3
 801152e:	4628      	mov	r0, r5
 8011530:	f7ff ff60 	bl	80113f4 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8011534:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 8011538:	4407      	add	r7, r0
 801153a:	4628      	mov	r0, r5
 801153c:	f7ff ff6e 	bl	801141c <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8011540:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8011544:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8011548:	f8ad 2014 	strh.w	r2, [sp, #20]
 801154c:	4418      	add	r0, r3
 801154e:	4621      	mov	r1, r4
 8011550:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8011554:	f8ad 0012 	strh.w	r0, [sp, #18]
 8011558:	b23f      	sxth	r7, r7
 801155a:	4630      	mov	r0, r6
 801155c:	f8ad 3016 	strh.w	r3, [sp, #22]
 8011560:	f8ad 7010 	strh.w	r7, [sp, #16]
 8011564:	f7f8 fb02 	bl	8009b6c <_ZN8touchgfx4RectaNERKS0_>
 8011568:	4628      	mov	r0, r5
 801156a:	f7ff ff27 	bl	80113bc <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 801156e:	4602      	mov	r2, r0
 8011570:	e896 0003 	ldmia.w	r6, {r0, r1}
 8011574:	ab06      	add	r3, sp, #24
 8011576:	e883 0003 	stmia.w	r3, {r0, r1}
 801157a:	4611      	mov	r1, r2
 801157c:	4618      	mov	r0, r3
 801157e:	f7f8 faf5 	bl	8009b6c <_ZN8touchgfx4RectaNERKS0_>
 8011582:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8011586:	f9b4 1000 	ldrsh.w	r1, [r4]
 801158a:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 801158e:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 8011592:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 8011596:	4299      	cmp	r1, r3
 8011598:	d10b      	bne.n	80115b2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801159a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801159e:	4552      	cmp	r2, sl
 80115a0:	d107      	bne.n	80115b2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80115a2:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 80115a6:	455a      	cmp	r2, fp
 80115a8:	d103      	bne.n	80115b2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80115aa:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 80115ae:	454a      	cmp	r2, r9
 80115b0:	d06d      	beq.n	801168e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 80115b2:	f1bb 0f00 	cmp.w	fp, #0
 80115b6:	dd65      	ble.n	8011684 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 80115b8:	f1b9 0f00 	cmp.w	r9, #0
 80115bc:	dd62      	ble.n	8011684 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 80115be:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80115c2:	fa1f f08a 	uxth.w	r0, sl
 80115c6:	4552      	cmp	r2, sl
 80115c8:	9000      	str	r0, [sp, #0]
 80115ca:	da12      	bge.n	80115f2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 80115cc:	9301      	str	r3, [sp, #4]
 80115ce:	9b00      	ldr	r3, [sp, #0]
 80115d0:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80115d4:	f8ad 2012 	strh.w	r2, [sp, #18]
 80115d8:	1a9a      	subs	r2, r3, r2
 80115da:	f8ad 1010 	strh.w	r1, [sp, #16]
 80115de:	f8ad 0014 	strh.w	r0, [sp, #20]
 80115e2:	f8ad 2016 	strh.w	r2, [sp, #22]
 80115e6:	69ea      	ldr	r2, [r5, #28]
 80115e8:	4631      	mov	r1, r6
 80115ea:	4640      	mov	r0, r8
 80115ec:	f7ff ff7a 	bl	80114e4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80115f0:	9b01      	ldr	r3, [sp, #4]
 80115f2:	f9b4 2000 	ldrsh.w	r2, [r4]
 80115f6:	429a      	cmp	r2, r3
 80115f8:	b29f      	uxth	r7, r3
 80115fa:	da0d      	bge.n	8011618 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 80115fc:	f8ad 2010 	strh.w	r2, [sp, #16]
 8011600:	1aba      	subs	r2, r7, r2
 8011602:	f8ad a012 	strh.w	sl, [sp, #18]
 8011606:	f8ad 2014 	strh.w	r2, [sp, #20]
 801160a:	f8ad 9016 	strh.w	r9, [sp, #22]
 801160e:	69ea      	ldr	r2, [r5, #28]
 8011610:	4631      	mov	r1, r6
 8011612:	4640      	mov	r0, r8
 8011614:	f7ff ff66 	bl	80114e4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8011618:	8822      	ldrh	r2, [r4, #0]
 801161a:	88a3      	ldrh	r3, [r4, #4]
 801161c:	445f      	add	r7, fp
 801161e:	4413      	add	r3, r2
 8011620:	b29b      	uxth	r3, r3
 8011622:	b2bf      	uxth	r7, r7
 8011624:	b23a      	sxth	r2, r7
 8011626:	b219      	sxth	r1, r3
 8011628:	4291      	cmp	r1, r2
 801162a:	dd0d      	ble.n	8011648 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 801162c:	1bdb      	subs	r3, r3, r7
 801162e:	f8ad 2010 	strh.w	r2, [sp, #16]
 8011632:	f8ad a012 	strh.w	sl, [sp, #18]
 8011636:	f8ad 3014 	strh.w	r3, [sp, #20]
 801163a:	f8ad 9016 	strh.w	r9, [sp, #22]
 801163e:	69ea      	ldr	r2, [r5, #28]
 8011640:	4631      	mov	r1, r6
 8011642:	4640      	mov	r0, r8
 8011644:	f7ff ff4e 	bl	80114e4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8011648:	88e2      	ldrh	r2, [r4, #6]
 801164a:	8863      	ldrh	r3, [r4, #2]
 801164c:	4413      	add	r3, r2
 801164e:	9a00      	ldr	r2, [sp, #0]
 8011650:	444a      	add	r2, r9
 8011652:	b29b      	uxth	r3, r3
 8011654:	fa1f f982 	uxth.w	r9, r2
 8011658:	fa0f f289 	sxth.w	r2, r9
 801165c:	b219      	sxth	r1, r3
 801165e:	428a      	cmp	r2, r1
 8011660:	da15      	bge.n	801168e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8011662:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8011666:	f9b4 0000 	ldrsh.w	r0, [r4]
 801166a:	f8ad 1014 	strh.w	r1, [sp, #20]
 801166e:	eba3 0309 	sub.w	r3, r3, r9
 8011672:	f8ad 0010 	strh.w	r0, [sp, #16]
 8011676:	f8ad 2012 	strh.w	r2, [sp, #18]
 801167a:	f8ad 3016 	strh.w	r3, [sp, #22]
 801167e:	69ea      	ldr	r2, [r5, #28]
 8011680:	4631      	mov	r1, r6
 8011682:	e001      	b.n	8011688 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 8011684:	69ea      	ldr	r2, [r5, #28]
 8011686:	4621      	mov	r1, r4
 8011688:	4640      	mov	r0, r8
 801168a:	f7ff ff2b 	bl	80114e4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801168e:	4628      	mov	r0, r5
 8011690:	f7ff fe94 	bl	80113bc <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8011694:	6861      	ldr	r1, [r4, #4]
 8011696:	4602      	mov	r2, r0
 8011698:	6820      	ldr	r0, [r4, #0]
 801169a:	4633      	mov	r3, r6
 801169c:	c303      	stmia	r3!, {r0, r1}
 801169e:	4611      	mov	r1, r2
 80116a0:	4630      	mov	r0, r6
 80116a2:	f7f8 fa63 	bl	8009b6c <_ZN8touchgfx4RectaNERKS0_>
 80116a6:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 80116aa:	2b00      	cmp	r3, #0
 80116ac:	f77f af33 	ble.w	8011516 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80116b0:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 80116b4:	2b00      	cmp	r3, #0
 80116b6:	f77f af2e 	ble.w	8011516 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80116ba:	4628      	mov	r0, r5
 80116bc:	f7ff fe9a 	bl	80113f4 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 80116c0:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 80116c4:	1a18      	subs	r0, r3, r0
 80116c6:	f8ad 0010 	strh.w	r0, [sp, #16]
 80116ca:	4628      	mov	r0, r5
 80116cc:	f7ff fea6 	bl	801141c <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 80116d0:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 80116d4:	1a18      	subs	r0, r3, r0
 80116d6:	f8ad 0012 	strh.w	r0, [sp, #18]
 80116da:	682b      	ldr	r3, [r5, #0]
 80116dc:	4631      	mov	r1, r6
 80116de:	689b      	ldr	r3, [r3, #8]
 80116e0:	4628      	mov	r0, r5
 80116e2:	4798      	blx	r3
 80116e4:	e717      	b.n	8011516 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

080116e6 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 80116e6:	b570      	push	{r4, r5, r6, lr}
 80116e8:	460c      	mov	r4, r1
 80116ea:	b086      	sub	sp, #24
 80116ec:	1d06      	adds	r6, r0, #4
 80116ee:	2300      	movs	r3, #0
 80116f0:	4631      	mov	r1, r6
 80116f2:	4605      	mov	r5, r0
 80116f4:	a802      	add	r0, sp, #8
 80116f6:	9301      	str	r3, [sp, #4]
 80116f8:	f7ff fbd4 	bl	8010ea4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80116fc:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8011700:	8822      	ldrh	r2, [r4, #0]
 8011702:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 8011706:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801170a:	f8ad 0014 	strh.w	r0, [sp, #20]
 801170e:	1ad2      	subs	r2, r2, r3
 8011710:	8863      	ldrh	r3, [r4, #2]
 8011712:	f8ad 2010 	strh.w	r2, [sp, #16]
 8011716:	1a5b      	subs	r3, r3, r1
 8011718:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 801171c:	f8ad 1016 	strh.w	r1, [sp, #22]
 8011720:	aa01      	add	r2, sp, #4
 8011722:	a904      	add	r1, sp, #16
 8011724:	4630      	mov	r0, r6
 8011726:	f8ad 3012 	strh.w	r3, [sp, #18]
 801172a:	f7f8 faf7 	bl	8009d1c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 801172e:	9a01      	ldr	r2, [sp, #4]
 8011730:	b11a      	cbz	r2, 801173a <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 8011732:	4621      	mov	r1, r4
 8011734:	4628      	mov	r0, r5
 8011736:	f7ff fed5 	bl	80114e4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801173a:	b006      	add	sp, #24
 801173c:	bd70      	pop	{r4, r5, r6, pc}

0801173e <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 801173e:	b530      	push	{r4, r5, lr}
 8011740:	4602      	mov	r2, r0
 8011742:	4604      	mov	r4, r0
 8011744:	f852 0f08 	ldr.w	r0, [r2, #8]!
 8011748:	b085      	sub	sp, #20
 801174a:	460d      	mov	r5, r1
 801174c:	6851      	ldr	r1, [r2, #4]
 801174e:	466b      	mov	r3, sp
 8011750:	c303      	stmia	r3!, {r0, r1}
 8011752:	4629      	mov	r1, r5
 8011754:	4668      	mov	r0, sp
 8011756:	f7f8 fa09 	bl	8009b6c <_ZN8touchgfx4RectaNERKS0_>
 801175a:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 801175e:	b12b      	cbz	r3, 801176c <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 8011760:	4669      	mov	r1, sp
 8011762:	4620      	mov	r0, r4
 8011764:	f7ff ffbf 	bl	80116e6 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 8011768:	b005      	add	sp, #20
 801176a:	bd30      	pop	{r4, r5, pc}
 801176c:	3404      	adds	r4, #4
 801176e:	4621      	mov	r1, r4
 8011770:	a802      	add	r0, sp, #8
 8011772:	f7ff fb97 	bl	8010ea4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011776:	f8bd 3000 	ldrh.w	r3, [sp]
 801177a:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 801177e:	1a9b      	subs	r3, r3, r2
 8011780:	f8ad 3000 	strh.w	r3, [sp]
 8011784:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8011788:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801178c:	4669      	mov	r1, sp
 801178e:	1a9b      	subs	r3, r3, r2
 8011790:	4620      	mov	r0, r4
 8011792:	f8ad 3002 	strh.w	r3, [sp, #2]
 8011796:	f7f8 fa88 	bl	8009caa <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 801179a:	e7e5      	b.n	8011768 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

0801179c <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 801179c:	680a      	ldr	r2, [r1, #0]
 801179e:	460b      	mov	r3, r1
 80117a0:	6992      	ldr	r2, [r2, #24]
 80117a2:	1d01      	adds	r1, r0, #4
 80117a4:	4618      	mov	r0, r3
 80117a6:	4710      	bx	r2

080117a8 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
 80117a8:	4298      	cmp	r0, r3
 80117aa:	d200      	bcs.n	80117ae <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
 80117ac:	b913      	cbnz	r3, 80117b4 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
 80117ae:	440a      	add	r2, r1
 80117b0:	b210      	sxth	r0, r2
 80117b2:	4770      	bx	lr
 80117b4:	ee07 0a90 	vmov	s15, r0
 80117b8:	eef8 6a67 	vcvt.f32.u32	s13, s15
 80117bc:	ee07 3a90 	vmov	s15, r3
 80117c0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80117c4:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 80117c8:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80117cc:	ee37 7a66 	vsub.f32	s14, s14, s13
 80117d0:	ee07 2a90 	vmov	s15, r2
 80117d4:	ee67 5a07 	vmul.f32	s11, s14, s14
 80117d8:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 80117dc:	eee5 6a87 	vfma.f32	s13, s11, s14
 80117e0:	ee07 1a90 	vmov	s15, r1
 80117e4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80117e8:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80117ec:	eee6 7a26 	vfma.f32	s15, s12, s13
 80117f0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80117f4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80117f8:	bfcc      	ite	gt
 80117fa:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 80117fe:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 8011802:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8011806:	ee17 3a90 	vmov	r3, s15
 801180a:	b218      	sxth	r0, r3
 801180c:	4770      	bx	lr

0801180e <_ZN8touchgfx12TextProviderC1Ev>:
 801180e:	b538      	push	{r3, r4, r5, lr}
 8011810:	2500      	movs	r5, #0
 8011812:	2302      	movs	r3, #2
 8011814:	4604      	mov	r4, r0
 8011816:	e9c0 5500 	strd	r5, r5, [r0]
 801181a:	7403      	strb	r3, [r0, #16]
 801181c:	6145      	str	r5, [r0, #20]
 801181e:	7605      	strb	r5, [r0, #24]
 8011820:	83c5      	strh	r5, [r0, #30]
 8011822:	8405      	strh	r5, [r0, #32]
 8011824:	86c5      	strh	r5, [r0, #54]	; 0x36
 8011826:	8705      	strh	r5, [r0, #56]	; 0x38
 8011828:	87c5      	strh	r5, [r0, #62]	; 0x3e
 801182a:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 801182e:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 8011832:	220e      	movs	r2, #14
 8011834:	4629      	mov	r1, r5
 8011836:	304c      	adds	r0, #76	; 0x4c
 8011838:	f00d fff2 	bl	801f820 <memset>
 801183c:	2301      	movs	r3, #1
 801183e:	4620      	mov	r0, r4
 8011840:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 8011844:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8011848:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 801184c:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 8011850:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 8011854:	f7f2 fd06 	bl	8004264 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 8011858:	4620      	mov	r0, r4
 801185a:	bd38      	pop	{r3, r4, r5, pc}

0801185c <_ZN8touchgfx12TextProvider11endOfStringEv>:
 801185c:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 801185e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8011862:	8c40      	ldrh	r0, [r0, #34]	; 0x22
 8011864:	fab0 f080 	clz	r0, r0
 8011868:	0940      	lsrs	r0, r0, #5
 801186a:	4770      	bx	lr

0801186c <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 801186c:	b530      	push	{r4, r5, lr}
 801186e:	2500      	movs	r5, #0
 8011870:	2401      	movs	r4, #1
 8011872:	6843      	ldr	r3, [r0, #4]
 8011874:	b913      	cbnz	r3, 801187c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 8011876:	6803      	ldr	r3, [r0, #0]
 8011878:	b313      	cbz	r3, 80118c0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 801187a:	6043      	str	r3, [r0, #4]
 801187c:	7e03      	ldrb	r3, [r0, #24]
 801187e:	b143      	cbz	r3, 8011892 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 8011880:	6943      	ldr	r3, [r0, #20]
 8011882:	b12b      	cbz	r3, 8011890 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8011884:	881a      	ldrh	r2, [r3, #0]
 8011886:	b11a      	cbz	r2, 8011890 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8011888:	1c9a      	adds	r2, r3, #2
 801188a:	6142      	str	r2, [r0, #20]
 801188c:	8818      	ldrh	r0, [r3, #0]
 801188e:	bd30      	pop	{r4, r5, pc}
 8011890:	7605      	strb	r5, [r0, #24]
 8011892:	6843      	ldr	r3, [r0, #4]
 8011894:	8819      	ldrh	r1, [r3, #0]
 8011896:	b199      	cbz	r1, 80118c0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8011898:	1c9a      	adds	r2, r3, #2
 801189a:	2902      	cmp	r1, #2
 801189c:	6042      	str	r2, [r0, #4]
 801189e:	d1f5      	bne.n	801188c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 80118a0:	7c03      	ldrb	r3, [r0, #16]
 80118a2:	2b01      	cmp	r3, #1
 80118a4:	d8e5      	bhi.n	8011872 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 80118a6:	1c5a      	adds	r2, r3, #1
 80118a8:	3302      	adds	r3, #2
 80118aa:	7402      	strb	r2, [r0, #16]
 80118ac:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 80118b0:	6143      	str	r3, [r0, #20]
 80118b2:	2b00      	cmp	r3, #0
 80118b4:	d0dd      	beq.n	8011872 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 80118b6:	881b      	ldrh	r3, [r3, #0]
 80118b8:	2b00      	cmp	r3, #0
 80118ba:	d0da      	beq.n	8011872 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 80118bc:	7604      	strb	r4, [r0, #24]
 80118be:	e7d8      	b.n	8011872 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 80118c0:	2000      	movs	r0, #0
 80118c2:	e7e4      	b.n	801188e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

080118c4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 80118c4:	b430      	push	{r4, r5}
 80118c6:	6001      	str	r1, [r0, #0]
 80118c8:	2100      	movs	r1, #0
 80118ca:	6041      	str	r1, [r0, #4]
 80118cc:	6815      	ldr	r5, [r2, #0]
 80118ce:	6085      	str	r5, [r0, #8]
 80118d0:	6852      	ldr	r2, [r2, #4]
 80118d2:	6443      	str	r3, [r0, #68]	; 0x44
 80118d4:	9b02      	ldr	r3, [sp, #8]
 80118d6:	60c2      	str	r2, [r0, #12]
 80118d8:	7401      	strb	r1, [r0, #16]
 80118da:	6141      	str	r1, [r0, #20]
 80118dc:	7601      	strb	r1, [r0, #24]
 80118de:	8701      	strh	r1, [r0, #56]	; 0x38
 80118e0:	8401      	strh	r1, [r0, #32]
 80118e2:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 80118e6:	6483      	str	r3, [r0, #72]	; 0x48
 80118e8:	bc30      	pop	{r4, r5}
 80118ea:	f7f2 bcbb 	b.w	8004264 <_ZN8touchgfx12TextProvider18initializeInternalEv>

080118ee <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 80118ee:	b408      	push	{r3}
 80118f0:	b510      	push	{r4, lr}
 80118f2:	b085      	sub	sp, #20
 80118f4:	ac07      	add	r4, sp, #28
 80118f6:	f854 3b04 	ldr.w	r3, [r4], #4
 80118fa:	9300      	str	r3, [sp, #0]
 80118fc:	4613      	mov	r3, r2
 80118fe:	4622      	mov	r2, r4
 8011900:	9403      	str	r4, [sp, #12]
 8011902:	f7ff ffdf 	bl	80118c4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8011906:	b005      	add	sp, #20
 8011908:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801190c:	b001      	add	sp, #4
 801190e:	4770      	bx	lr

08011910 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 8011910:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011912:	4605      	mov	r5, r0
 8011914:	4608      	mov	r0, r1
 8011916:	b1e9      	cbz	r1, 8011954 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 8011918:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 801191c:	460b      	mov	r3, r1
 801191e:	f101 0708 	add.w	r7, r1, #8
 8011922:	4622      	mov	r2, r4
 8011924:	6818      	ldr	r0, [r3, #0]
 8011926:	6859      	ldr	r1, [r3, #4]
 8011928:	4626      	mov	r6, r4
 801192a:	c603      	stmia	r6!, {r0, r1}
 801192c:	3308      	adds	r3, #8
 801192e:	42bb      	cmp	r3, r7
 8011930:	4634      	mov	r4, r6
 8011932:	d1f7      	bne.n	8011924 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 8011934:	6818      	ldr	r0, [r3, #0]
 8011936:	6030      	str	r0, [r6, #0]
 8011938:	889b      	ldrh	r3, [r3, #4]
 801193a:	80b3      	strh	r3, [r6, #4]
 801193c:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 8011940:	015b      	lsls	r3, r3, #5
 8011942:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8011946:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 801194a:	430b      	orrs	r3, r1
 801194c:	425b      	negs	r3, r3
 801194e:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 8011952:	4610      	mov	r0, r2
 8011954:	bdf0      	pop	{r4, r5, r6, r7, pc}

08011956 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 8011956:	b538      	push	{r3, r4, r5, lr}
 8011958:	460c      	mov	r4, r1
 801195a:	6811      	ldr	r1, [r2, #0]
 801195c:	4610      	mov	r0, r2
 801195e:	68cd      	ldr	r5, [r1, #12]
 8011960:	4619      	mov	r1, r3
 8011962:	47a8      	blx	r5
 8011964:	2800      	cmp	r0, #0
 8011966:	bf08      	it	eq
 8011968:	4620      	moveq	r0, r4
 801196a:	bd38      	pop	{r3, r4, r5, pc}

0801196c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 801196c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801196e:	4604      	mov	r4, r0
 8011970:	4615      	mov	r5, r2
 8011972:	4608      	mov	r0, r1
 8011974:	b93a      	cbnz	r2, 8011986 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 8011976:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 801197a:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 801197e:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 8011982:	4628      	mov	r0, r5
 8011984:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8011986:	f892 c00d 	ldrb.w	ip, [r2, #13]
 801198a:	8893      	ldrh	r3, [r2, #4]
 801198c:	ea4f 160c 	mov.w	r6, ip, lsl #4
 8011990:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8011994:	79ee      	ldrb	r6, [r5, #7]
 8011996:	f46f 6763 	mvn.w	r7, #3632	; 0xe30
 801199a:	4316      	orrs	r6, r2
 801199c:	19da      	adds	r2, r3, r7
 801199e:	b291      	uxth	r1, r2
 80119a0:	291d      	cmp	r1, #29
 80119a2:	b2b7      	uxth	r7, r6
 80119a4:	d87a      	bhi.n	8011a9c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 80119a6:	2201      	movs	r2, #1
 80119a8:	408a      	lsls	r2, r1
 80119aa:	4975      	ldr	r1, [pc, #468]	; (8011b80 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
 80119ac:	420a      	tst	r2, r1
 80119ae:	ea4f 06e6 	mov.w	r6, r6, asr #3
 80119b2:	d12d      	bne.n	8011a10 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 80119b4:	f412 7f60 	tst.w	r2, #896	; 0x380
 80119b8:	d070      	beq.n	8011a9c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 80119ba:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 80119be:	462b      	mov	r3, r5
 80119c0:	f105 0e08 	add.w	lr, r5, #8
 80119c4:	4615      	mov	r5, r2
 80119c6:	6818      	ldr	r0, [r3, #0]
 80119c8:	6859      	ldr	r1, [r3, #4]
 80119ca:	4694      	mov	ip, r2
 80119cc:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 80119d0:	3308      	adds	r3, #8
 80119d2:	4573      	cmp	r3, lr
 80119d4:	4662      	mov	r2, ip
 80119d6:	d1f6      	bne.n	80119c6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 80119d8:	6818      	ldr	r0, [r3, #0]
 80119da:	f8cc 0000 	str.w	r0, [ip]
 80119de:	889b      	ldrh	r3, [r3, #4]
 80119e0:	f8ac 3004 	strh.w	r3, [ip, #4]
 80119e4:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 80119e8:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 80119ec:	b2b3      	uxth	r3, r6
 80119ee:	1aca      	subs	r2, r1, r3
 80119f0:	b292      	uxth	r2, r2
 80119f2:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 80119f6:	10d2      	asrs	r2, r2, #3
 80119f8:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 80119fc:	f002 0260 	and.w	r2, r2, #96	; 0x60
 8011a00:	4302      	orrs	r2, r0
 8011a02:	1bcf      	subs	r7, r1, r7
 8011a04:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 8011a08:	1afb      	subs	r3, r7, r3
 8011a0a:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8011a0e:	e7b8      	b.n	8011982 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8011a10:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8011a12:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8011a16:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 8011a18:	f640 6333 	movw	r3, #3635	; 0xe33
 8011a1c:	4299      	cmp	r1, r3
 8011a1e:	d110      	bne.n	8011a42 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
 8011a20:	6803      	ldr	r3, [r0, #0]
 8011a22:	68db      	ldr	r3, [r3, #12]
 8011a24:	4798      	blx	r3
 8011a26:	7b41      	ldrb	r1, [r0, #13]
 8011a28:	00cb      	lsls	r3, r1, #3
 8011a2a:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8011a2e:	7a03      	ldrb	r3, [r0, #8]
 8011a30:	0648      	lsls	r0, r1, #25
 8011a32:	ea43 0302 	orr.w	r3, r3, r2
 8011a36:	bf44      	itt	mi
 8011a38:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8011a3c:	b21b      	sxthmi	r3, r3
 8011a3e:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8011a42:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 8011a46:	443b      	add	r3, r7
 8011a48:	4433      	add	r3, r6
 8011a4a:	b29b      	uxth	r3, r3
 8011a4c:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 8011a50:	462a      	mov	r2, r5
 8011a52:	f105 0c08 	add.w	ip, r5, #8
 8011a56:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8011a5a:	4635      	mov	r5, r6
 8011a5c:	6810      	ldr	r0, [r2, #0]
 8011a5e:	6851      	ldr	r1, [r2, #4]
 8011a60:	4637      	mov	r7, r6
 8011a62:	c703      	stmia	r7!, {r0, r1}
 8011a64:	3208      	adds	r2, #8
 8011a66:	4562      	cmp	r2, ip
 8011a68:	463e      	mov	r6, r7
 8011a6a:	d1f7      	bne.n	8011a5c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
 8011a6c:	6810      	ldr	r0, [r2, #0]
 8011a6e:	6038      	str	r0, [r7, #0]
 8011a70:	8892      	ldrh	r2, [r2, #4]
 8011a72:	80ba      	strh	r2, [r7, #4]
 8011a74:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8011a78:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8011a7c:	10db      	asrs	r3, r3, #3
 8011a7e:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8011a82:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8011a86:	4313      	orrs	r3, r2
 8011a88:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8011a8c:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 8011a90:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 8011a94:	1a9b      	subs	r3, r3, r2
 8011a96:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 8011a9a:	e772      	b.n	8011982 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8011a9c:	f023 0204 	bic.w	r2, r3, #4
 8011aa0:	f640 611b 	movw	r1, #3611	; 0xe1b
 8011aa4:	428a      	cmp	r2, r1
 8011aa6:	d003      	beq.n	8011ab0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x144>
 8011aa8:	f640 621d 	movw	r2, #3613	; 0xe1d
 8011aac:	4293      	cmp	r3, r2
 8011aae:	d120      	bne.n	8011af2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x186>
 8011ab0:	3b01      	subs	r3, #1
 8011ab2:	4602      	mov	r2, r0
 8011ab4:	b29b      	uxth	r3, r3
 8011ab6:	4629      	mov	r1, r5
 8011ab8:	4620      	mov	r0, r4
 8011aba:	f7ff ff4c 	bl	8011956 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8011abe:	7b41      	ldrb	r1, [r0, #13]
 8011ac0:	00cb      	lsls	r3, r1, #3
 8011ac2:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8011ac6:	7a03      	ldrb	r3, [r0, #8]
 8011ac8:	0649      	lsls	r1, r1, #25
 8011aca:	ea43 0302 	orr.w	r3, r3, r2
 8011ace:	bf44      	itt	mi
 8011ad0:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8011ad4:	b21b      	sxthmi	r3, r3
 8011ad6:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8011ada:	7b6b      	ldrb	r3, [r5, #13]
 8011adc:	7aaa      	ldrb	r2, [r5, #10]
 8011ade:	005b      	lsls	r3, r3, #1
 8011ae0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8011ae4:	4313      	orrs	r3, r2
 8011ae6:	115a      	asrs	r2, r3, #5
 8011ae8:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 8011aec:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8011af0:	e036      	b.n	8011b60 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
 8011af2:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 8011af6:	f402 7180 	and.w	r1, r2, #256	; 0x100
 8011afa:	7a2a      	ldrb	r2, [r5, #8]
 8011afc:	f01c 0f40 	tst.w	ip, #64	; 0x40
 8011b00:	ea42 0201 	orr.w	r2, r2, r1
 8011b04:	bf1c      	itt	ne
 8011b06:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 8011b0a:	b212      	sxthne	r2, r2
 8011b0c:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8011b10:	f640 6109 	movw	r1, #3593	; 0xe09
 8011b14:	f023 0210 	bic.w	r2, r3, #16
 8011b18:	428a      	cmp	r2, r1
 8011b1a:	d003      	beq.n	8011b24 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b8>
 8011b1c:	f640 6213 	movw	r2, #3603	; 0xe13
 8011b20:	4293      	cmp	r3, r2
 8011b22:	d12a      	bne.n	8011b7a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
 8011b24:	7b6e      	ldrb	r6, [r5, #13]
 8011b26:	0076      	lsls	r6, r6, #1
 8011b28:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8011b2c:	7aae      	ldrb	r6, [r5, #10]
 8011b2e:	4316      	orrs	r6, r2
 8011b30:	f640 6213 	movw	r2, #3603	; 0xe13
 8011b34:	4293      	cmp	r3, r2
 8011b36:	bf18      	it	ne
 8011b38:	f103 33ff 	addne.w	r3, r3, #4294967295
 8011b3c:	4602      	mov	r2, r0
 8011b3e:	bf14      	ite	ne
 8011b40:	b29b      	uxthne	r3, r3
 8011b42:	f640 630c 	movweq	r3, #3596	; 0xe0c
 8011b46:	4629      	mov	r1, r5
 8011b48:	4620      	mov	r0, r4
 8011b4a:	f7ff ff04 	bl	8011956 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8011b4e:	7b43      	ldrb	r3, [r0, #13]
 8011b50:	7a82      	ldrb	r2, [r0, #10]
 8011b52:	005b      	lsls	r3, r3, #1
 8011b54:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8011b58:	4313      	orrs	r3, r2
 8011b5a:	1af6      	subs	r6, r6, r3
 8011b5c:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 8011b60:	7b69      	ldrb	r1, [r5, #13]
 8011b62:	00cb      	lsls	r3, r1, #3
 8011b64:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8011b68:	7a2b      	ldrb	r3, [r5, #8]
 8011b6a:	4313      	orrs	r3, r2
 8011b6c:	064a      	lsls	r2, r1, #25
 8011b6e:	bf44      	itt	mi
 8011b70:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8011b74:	b21b      	sxthmi	r3, r3
 8011b76:	1bdb      	subs	r3, r3, r7
 8011b78:	e747      	b.n	8011a0a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 8011b7a:	2300      	movs	r3, #0
 8011b7c:	e7b6      	b.n	8011aec <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x180>
 8011b7e:	bf00      	nop
 8011b80:	3fc00079 	.word	0x3fc00079

08011b84 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 8011b84:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8011b88:	4604      	mov	r4, r0
 8011b8a:	b942      	cbnz	r2, 8011b9e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 8011b8c:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8011b90:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 8011b94:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 8011b98:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8011b9c:	e047      	b.n	8011c2e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8011b9e:	7b51      	ldrb	r1, [r2, #13]
 8011ba0:	8893      	ldrh	r3, [r2, #4]
 8011ba2:	010d      	lsls	r5, r1, #4
 8011ba4:	f405 7080 	and.w	r0, r5, #256	; 0x100
 8011ba8:	79d5      	ldrb	r5, [r2, #7]
 8011baa:	4305      	orrs	r5, r0
 8011bac:	2d04      	cmp	r5, #4
 8011bae:	bfcc      	ite	gt
 8011bb0:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 8011bb4:	f04f 0e01 	movle.w	lr, #1
 8011bb8:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 8011bbc:	f200 80ab 	bhi.w	8011d16 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 8011bc0:	f240 60e7 	movw	r0, #1767	; 0x6e7
 8011bc4:	4283      	cmp	r3, r0
 8011bc6:	d216      	bcs.n	8011bf6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011bc8:	f240 605b 	movw	r0, #1627	; 0x65b
 8011bcc:	4283      	cmp	r3, r0
 8011bce:	d859      	bhi.n	8011c84 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 8011bd0:	f240 6057 	movw	r0, #1623	; 0x657
 8011bd4:	4283      	cmp	r3, r0
 8011bd6:	d20e      	bcs.n	8011bf6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011bd8:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8011bdc:	d24a      	bcs.n	8011c74 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 8011bde:	f240 604e 	movw	r0, #1614	; 0x64e
 8011be2:	4283      	cmp	r3, r0
 8011be4:	d207      	bcs.n	8011bf6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011be6:	f240 601a 	movw	r0, #1562	; 0x61a
 8011bea:	4283      	cmp	r3, r0
 8011bec:	d02a      	beq.n	8011c44 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8011bee:	d821      	bhi.n	8011c34 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 8011bf0:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 8011bf4:	d35b      	bcc.n	8011cae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8011bf6:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 8011bfa:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8011bfe:	f040 80d0 	bne.w	8011da2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8011c02:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 8011c06:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8011c0a:	f040 80ca 	bne.w	8011da2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8011c0e:	00cb      	lsls	r3, r1, #3
 8011c10:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8011c14:	7a13      	ldrb	r3, [r2, #8]
 8011c16:	0649      	lsls	r1, r1, #25
 8011c18:	ea43 0300 	orr.w	r3, r3, r0
 8011c1c:	bf44      	itt	mi
 8011c1e:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8011c22:	b21b      	sxthmi	r3, r3
 8011c24:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8011c28:	1b5d      	subs	r5, r3, r5
 8011c2a:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8011c2e:	4610      	mov	r0, r2
 8011c30:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011c34:	f240 604b 	movw	r0, #1611	; 0x64b
 8011c38:	4283      	cmp	r3, r0
 8011c3a:	d338      	bcc.n	8011cae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8011c3c:	f240 604c 	movw	r0, #1612	; 0x64c
 8011c40:	4283      	cmp	r3, r0
 8011c42:	d9d8      	bls.n	8011bf6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011c44:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 8011c48:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 8011c4c:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8011c50:	f040 80f2 	bne.w	8011e38 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8011c54:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8011c58:	f040 80ee 	bne.w	8011e38 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8011c5c:	00cb      	lsls	r3, r1, #3
 8011c5e:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8011c62:	7a13      	ldrb	r3, [r2, #8]
 8011c64:	064e      	lsls	r6, r1, #25
 8011c66:	ea43 0300 	orr.w	r3, r3, r0
 8011c6a:	bf44      	itt	mi
 8011c6c:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8011c70:	b21b      	sxthmi	r3, r3
 8011c72:	e7d9      	b.n	8011c28 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 8011c74:	f240 6054 	movw	r0, #1620	; 0x654
 8011c78:	4283      	cmp	r3, r0
 8011c7a:	d8e3      	bhi.n	8011c44 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8011c7c:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8011c80:	d9e0      	bls.n	8011c44 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8011c82:	e7b8      	b.n	8011bf6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011c84:	f240 6074 	movw	r0, #1652	; 0x674
 8011c88:	4283      	cmp	r3, r0
 8011c8a:	d0b4      	beq.n	8011bf6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011c8c:	d82d      	bhi.n	8011cea <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 8011c8e:	f240 605e 	movw	r0, #1630	; 0x65e
 8011c92:	4283      	cmp	r3, r0
 8011c94:	d804      	bhi.n	8011ca0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 8011c96:	f240 605d 	movw	r0, #1629	; 0x65d
 8011c9a:	4283      	cmp	r3, r0
 8011c9c:	d3d2      	bcc.n	8011c44 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8011c9e:	e7aa      	b.n	8011bf6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011ca0:	f240 605f 	movw	r0, #1631	; 0x65f
 8011ca4:	4283      	cmp	r3, r0
 8011ca6:	d0cd      	beq.n	8011c44 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8011ca8:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 8011cac:	d0a3      	beq.n	8011bf6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011cae:	00cb      	lsls	r3, r1, #3
 8011cb0:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8011cb4:	7a13      	ldrb	r3, [r2, #8]
 8011cb6:	0649      	lsls	r1, r1, #25
 8011cb8:	ea43 0300 	orr.w	r3, r3, r0
 8011cbc:	bf44      	itt	mi
 8011cbe:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8011cc2:	b21b      	sxthmi	r3, r3
 8011cc4:	1b5d      	subs	r5, r3, r5
 8011cc6:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8011cca:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8011cce:	7b53      	ldrb	r3, [r2, #13]
 8011cd0:	015b      	lsls	r3, r3, #5
 8011cd2:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8011cd6:	7993      	ldrb	r3, [r2, #6]
 8011cd8:	430b      	orrs	r3, r1
 8011cda:	005b      	lsls	r3, r3, #1
 8011cdc:	2105      	movs	r1, #5
 8011cde:	fb93 f3f1 	sdiv	r3, r3, r1
 8011ce2:	f992 1009 	ldrsb.w	r1, [r2, #9]
 8011ce6:	440b      	add	r3, r1
 8011ce8:	e756      	b.n	8011b98 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 8011cea:	f240 60e2 	movw	r0, #1762	; 0x6e2
 8011cee:	4283      	cmp	r3, r0
 8011cf0:	d809      	bhi.n	8011d06 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 8011cf2:	f240 60df 	movw	r0, #1759	; 0x6df
 8011cf6:	4283      	cmp	r3, r0
 8011cf8:	f4bf af7d 	bcs.w	8011bf6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011cfc:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 8011d00:	2b05      	cmp	r3, #5
 8011d02:	d8d4      	bhi.n	8011cae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8011d04:	e777      	b.n	8011bf6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011d06:	f240 60e3 	movw	r0, #1763	; 0x6e3
 8011d0a:	4283      	cmp	r3, r0
 8011d0c:	d09a      	beq.n	8011c44 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8011d0e:	f240 60e4 	movw	r0, #1764	; 0x6e4
 8011d12:	4283      	cmp	r3, r0
 8011d14:	e7ca      	b.n	8011cac <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 8011d16:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 8011d1a:	d22b      	bcs.n	8011d74 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 8011d1c:	f640 00ed 	movw	r0, #2285	; 0x8ed
 8011d20:	4283      	cmp	r3, r0
 8011d22:	d28f      	bcs.n	8011c44 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8011d24:	f640 00e5 	movw	r0, #2277	; 0x8e5
 8011d28:	4283      	cmp	r3, r0
 8011d2a:	d816      	bhi.n	8011d5a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 8011d2c:	f640 00e4 	movw	r0, #2276	; 0x8e4
 8011d30:	4283      	cmp	r3, r0
 8011d32:	f4bf af60 	bcs.w	8011bf6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011d36:	f240 60ec 	movw	r0, #1772	; 0x6ec
 8011d3a:	4283      	cmp	r3, r0
 8011d3c:	d80a      	bhi.n	8011d54 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 8011d3e:	f240 60eb 	movw	r0, #1771	; 0x6eb
 8011d42:	4283      	cmp	r3, r0
 8011d44:	f4bf af57 	bcs.w	8011bf6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011d48:	f240 60ea 	movw	r0, #1770	; 0x6ea
 8011d4c:	4283      	cmp	r3, r0
 8011d4e:	f43f af79 	beq.w	8011c44 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8011d52:	e7ac      	b.n	8011cae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8011d54:	f240 60ed 	movw	r0, #1773	; 0x6ed
 8011d58:	e7f8      	b.n	8011d4c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 8011d5a:	f640 00e8 	movw	r0, #2280	; 0x8e8
 8011d5e:	4283      	cmp	r3, r0
 8011d60:	d802      	bhi.n	8011d68 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 8011d62:	f640 00e7 	movw	r0, #2279	; 0x8e7
 8011d66:	e798      	b.n	8011c9a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 8011d68:	f640 00e9 	movw	r0, #2281	; 0x8e9
 8011d6c:	4283      	cmp	r3, r0
 8011d6e:	f47f af42 	bne.w	8011bf6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011d72:	e767      	b.n	8011c44 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8011d74:	f640 00f6 	movw	r0, #2294	; 0x8f6
 8011d78:	4283      	cmp	r3, r0
 8011d7a:	f43f af63 	beq.w	8011c44 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8011d7e:	d802      	bhi.n	8011d86 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 8011d80:	f640 00f2 	movw	r0, #2290	; 0x8f2
 8011d84:	e7f2      	b.n	8011d6c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 8011d86:	f640 00fa 	movw	r0, #2298	; 0x8fa
 8011d8a:	4283      	cmp	r3, r0
 8011d8c:	d805      	bhi.n	8011d9a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 8011d8e:	f640 00f9 	movw	r0, #2297	; 0x8f9
 8011d92:	4283      	cmp	r3, r0
 8011d94:	f4ff af2f 	bcc.w	8011bf6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011d98:	e754      	b.n	8011c44 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8011d9a:	f640 00fe 	movw	r0, #2302	; 0x8fe
 8011d9e:	4283      	cmp	r3, r0
 8011da0:	e7af      	b.n	8011d02 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 8011da2:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 8011da6:	4617      	mov	r7, r2
 8011da8:	f102 0808 	add.w	r8, r2, #8
 8011dac:	4666      	mov	r6, ip
 8011dae:	6838      	ldr	r0, [r7, #0]
 8011db0:	6879      	ldr	r1, [r7, #4]
 8011db2:	46e6      	mov	lr, ip
 8011db4:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8011db8:	3708      	adds	r7, #8
 8011dba:	4547      	cmp	r7, r8
 8011dbc:	46f4      	mov	ip, lr
 8011dbe:	d1f6      	bne.n	8011dae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 8011dc0:	6838      	ldr	r0, [r7, #0]
 8011dc2:	f8ce 0000 	str.w	r0, [lr]
 8011dc6:	88b9      	ldrh	r1, [r7, #4]
 8011dc8:	f8ae 1004 	strh.w	r1, [lr, #4]
 8011dcc:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 8011dd0:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8011dd4:	d009      	beq.n	8011dea <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 8011dd6:	7b51      	ldrb	r1, [r2, #13]
 8011dd8:	7992      	ldrb	r2, [r2, #6]
 8011dda:	0149      	lsls	r1, r1, #5
 8011ddc:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8011de0:	4311      	orrs	r1, r2
 8011de2:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8011de6:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 8011dea:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8011dee:	b2ad      	uxth	r5, r5
 8011df0:	d00d      	beq.n	8011e0e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 8011df2:	442b      	add	r3, r5
 8011df4:	b29b      	uxth	r3, r3
 8011df6:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8011dfa:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8011dfe:	10db      	asrs	r3, r3, #3
 8011e00:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8011e04:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8011e08:	4313      	orrs	r3, r2
 8011e0a:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8011e0e:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 8011e12:	00cb      	lsls	r3, r1, #3
 8011e14:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8011e18:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 8011e1c:	064f      	lsls	r7, r1, #25
 8011e1e:	ea43 0302 	orr.w	r3, r3, r2
 8011e22:	bf44      	itt	mi
 8011e24:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8011e28:	b21b      	sxthmi	r3, r3
 8011e2a:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8011e2e:	1b5b      	subs	r3, r3, r5
 8011e30:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8011e34:	4632      	mov	r2, r6
 8011e36:	e6fa      	b.n	8011c2e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8011e38:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 8011e3c:	4617      	mov	r7, r2
 8011e3e:	f102 0908 	add.w	r9, r2, #8
 8011e42:	4666      	mov	r6, ip
 8011e44:	6838      	ldr	r0, [r7, #0]
 8011e46:	6879      	ldr	r1, [r7, #4]
 8011e48:	46e0      	mov	r8, ip
 8011e4a:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 8011e4e:	3708      	adds	r7, #8
 8011e50:	454f      	cmp	r7, r9
 8011e52:	46c4      	mov	ip, r8
 8011e54:	d1f6      	bne.n	8011e44 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 8011e56:	6838      	ldr	r0, [r7, #0]
 8011e58:	f8c8 0000 	str.w	r0, [r8]
 8011e5c:	88b9      	ldrh	r1, [r7, #4]
 8011e5e:	f8a8 1004 	strh.w	r1, [r8, #4]
 8011e62:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 8011e66:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8011e6a:	d009      	beq.n	8011e80 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 8011e6c:	7b51      	ldrb	r1, [r2, #13]
 8011e6e:	7992      	ldrb	r2, [r2, #6]
 8011e70:	0149      	lsls	r1, r1, #5
 8011e72:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8011e76:	4311      	orrs	r1, r2
 8011e78:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8011e7c:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 8011e80:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8011e84:	d00e      	beq.n	8011ea4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 8011e86:	eba3 030e 	sub.w	r3, r3, lr
 8011e8a:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8011e8e:	b29b      	uxth	r3, r3
 8011e90:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8011e94:	10db      	asrs	r3, r3, #3
 8011e96:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8011e9a:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8011e9e:	4313      	orrs	r3, r2
 8011ea0:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8011ea4:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 8011ea8:	00cb      	lsls	r3, r1, #3
 8011eaa:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8011eae:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 8011eb2:	0648      	lsls	r0, r1, #25
 8011eb4:	ea43 0302 	orr.w	r3, r3, r2
 8011eb8:	bf44      	itt	mi
 8011eba:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8011ebe:	b21b      	sxthmi	r3, r3
 8011ec0:	1b5d      	subs	r5, r3, r5
 8011ec2:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8011ec6:	e7b5      	b.n	8011e34 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

08011ec8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 8011ec8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011ecc:	461e      	mov	r6, r3
 8011ece:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8011ed0:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8011ed4:	4604      	mov	r4, r0
 8011ed6:	4617      	mov	r7, r2
 8011ed8:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8011edc:	f7f2 f980 	bl	80041e0 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8011ee0:	4605      	mov	r5, r0
 8011ee2:	b918      	cbnz	r0, 8011eec <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 8011ee4:	6030      	str	r0, [r6, #0]
 8011ee6:	4628      	mov	r0, r5
 8011ee8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011eec:	683b      	ldr	r3, [r7, #0]
 8011eee:	4601      	mov	r1, r0
 8011ef0:	68db      	ldr	r3, [r3, #12]
 8011ef2:	4638      	mov	r0, r7
 8011ef4:	4798      	blx	r3
 8011ef6:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 8011efa:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8011efe:	4602      	mov	r2, r0
 8011f00:	6030      	str	r0, [r6, #0]
 8011f02:	d213      	bcs.n	8011f2c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 8011f04:	4643      	mov	r3, r8
 8011f06:	4639      	mov	r1, r7
 8011f08:	4620      	mov	r0, r4
 8011f0a:	f7ff fe3b 	bl	8011b84 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8011f0e:	6030      	str	r0, [r6, #0]
 8011f10:	6833      	ldr	r3, [r6, #0]
 8011f12:	b143      	cbz	r3, 8011f26 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 8011f14:	7b5a      	ldrb	r2, [r3, #13]
 8011f16:	7a9b      	ldrb	r3, [r3, #10]
 8011f18:	0052      	lsls	r2, r2, #1
 8011f1a:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8011f1e:	4313      	orrs	r3, r2
 8011f20:	bf0c      	ite	eq
 8011f22:	2301      	moveq	r3, #1
 8011f24:	2300      	movne	r3, #0
 8011f26:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 8011f2a:	e7dc      	b.n	8011ee6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 8011f2c:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8011f30:	b29b      	uxth	r3, r3
 8011f32:	2b7f      	cmp	r3, #127	; 0x7f
 8011f34:	d804      	bhi.n	8011f40 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 8011f36:	4639      	mov	r1, r7
 8011f38:	4620      	mov	r0, r4
 8011f3a:	f7ff fd17 	bl	801196c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8011f3e:	e7e6      	b.n	8011f0e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 8011f40:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8011f44:	2b00      	cmp	r3, #0
 8011f46:	d0e3      	beq.n	8011f10 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8011f48:	f640 1302 	movw	r3, #2306	; 0x902
 8011f4c:	429d      	cmp	r5, r3
 8011f4e:	d1df      	bne.n	8011f10 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8011f50:	4601      	mov	r1, r0
 8011f52:	4620      	mov	r0, r4
 8011f54:	f7ff fcdc 	bl	8011910 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8011f58:	e7d9      	b.n	8011f0e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

08011f5a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 8011f5a:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8011f5e:	461e      	mov	r6, r3
 8011f60:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8011f62:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8011f66:	4604      	mov	r4, r0
 8011f68:	4617      	mov	r7, r2
 8011f6a:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8011f6e:	f7f2 f937 	bl	80041e0 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8011f72:	4605      	mov	r5, r0
 8011f74:	b918      	cbnz	r0, 8011f7e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 8011f76:	6030      	str	r0, [r6, #0]
 8011f78:	4628      	mov	r0, r5
 8011f7a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8011f7e:	683b      	ldr	r3, [r7, #0]
 8011f80:	4601      	mov	r1, r0
 8011f82:	f8d3 9008 	ldr.w	r9, [r3, #8]
 8011f86:	4638      	mov	r0, r7
 8011f88:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8011f8c:	47c8      	blx	r9
 8011f8e:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 8011f92:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8011f96:	4602      	mov	r2, r0
 8011f98:	6030      	str	r0, [r6, #0]
 8011f9a:	d213      	bcs.n	8011fc4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 8011f9c:	4643      	mov	r3, r8
 8011f9e:	4639      	mov	r1, r7
 8011fa0:	4620      	mov	r0, r4
 8011fa2:	f7ff fdef 	bl	8011b84 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8011fa6:	6030      	str	r0, [r6, #0]
 8011fa8:	6833      	ldr	r3, [r6, #0]
 8011faa:	b143      	cbz	r3, 8011fbe <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 8011fac:	7b5a      	ldrb	r2, [r3, #13]
 8011fae:	7a9b      	ldrb	r3, [r3, #10]
 8011fb0:	0052      	lsls	r2, r2, #1
 8011fb2:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8011fb6:	4313      	orrs	r3, r2
 8011fb8:	bf0c      	ite	eq
 8011fba:	2301      	moveq	r3, #1
 8011fbc:	2300      	movne	r3, #0
 8011fbe:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 8011fc2:	e7d9      	b.n	8011f78 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 8011fc4:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8011fc8:	b29b      	uxth	r3, r3
 8011fca:	2b7f      	cmp	r3, #127	; 0x7f
 8011fcc:	d804      	bhi.n	8011fd8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 8011fce:	4639      	mov	r1, r7
 8011fd0:	4620      	mov	r0, r4
 8011fd2:	f7ff fccb 	bl	801196c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8011fd6:	e7e6      	b.n	8011fa6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 8011fd8:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8011fdc:	2b00      	cmp	r3, #0
 8011fde:	d0e3      	beq.n	8011fa8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8011fe0:	f640 1302 	movw	r3, #2306	; 0x902
 8011fe4:	429d      	cmp	r5, r3
 8011fe6:	d1df      	bne.n	8011fa8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8011fe8:	4601      	mov	r1, r0
 8011fea:	4620      	mov	r0, r4
 8011fec:	f7ff fc90 	bl	8011910 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8011ff0:	e7d9      	b.n	8011fa6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

08011ff2 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 8011ff2:	b510      	push	{r4, lr}
 8011ff4:	4604      	mov	r4, r0
 8011ff6:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 8011ffa:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8011ffc:	b1f1      	cbz	r1, 801203c <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 8011ffe:	2b0a      	cmp	r3, #10
 8012000:	d02f      	beq.n	8012062 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 8012002:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 8012004:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 8012008:	3901      	subs	r1, #1
 801200a:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 801200c:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 8012010:	1c51      	adds	r1, r2, #1
 8012012:	b289      	uxth	r1, r1
 8012014:	2901      	cmp	r1, #1
 8012016:	bf84      	itt	hi
 8012018:	f102 32ff 	addhi.w	r2, r2, #4294967295
 801201c:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 801201e:	f103 0201 	add.w	r2, r3, #1
 8012022:	8722      	strh	r2, [r4, #56]	; 0x38
 8012024:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8012026:	bf98      	it	ls
 8012028:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 801202a:	4413      	add	r3, r2
 801202c:	b29b      	uxth	r3, r3
 801202e:	2b09      	cmp	r3, #9
 8012030:	bf88      	it	hi
 8012032:	3b0a      	subhi	r3, #10
 8012034:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8012038:	8458      	strh	r0, [r3, #34]	; 0x22
 801203a:	e7dc      	b.n	8011ff6 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 801203c:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801203e:	2b0a      	cmp	r3, #10
 8012040:	d00f      	beq.n	8012062 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 8012042:	4620      	mov	r0, r4
 8012044:	f7ff fc12 	bl	801186c <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 8012048:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801204a:	1c5a      	adds	r2, r3, #1
 801204c:	8722      	strh	r2, [r4, #56]	; 0x38
 801204e:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8012050:	4413      	add	r3, r2
 8012052:	b29b      	uxth	r3, r3
 8012054:	2b09      	cmp	r3, #9
 8012056:	bf88      	it	hi
 8012058:	3b0a      	subhi	r3, #10
 801205a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801205e:	8458      	strh	r0, [r3, #34]	; 0x22
 8012060:	e7ec      	b.n	801203c <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 8012062:	bd10      	pop	{r4, pc}

08012064 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 8012064:	b538      	push	{r3, r4, r5, lr}
 8012066:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8012068:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 801206c:	4604      	mov	r4, r0
 801206e:	8c55      	ldrh	r5, [r2, #34]	; 0x22
 8012070:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 8012072:	3a01      	subs	r2, #1
 8012074:	8702      	strh	r2, [r0, #56]	; 0x38
 8012076:	1c5a      	adds	r2, r3, #1
 8012078:	b292      	uxth	r2, r2
 801207a:	2a09      	cmp	r2, #9
 801207c:	bf86      	itte	hi
 801207e:	3b09      	subhi	r3, #9
 8012080:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 8012082:	86c2      	strhls	r2, [r0, #54]	; 0x36
 8012084:	f7ff ffb5 	bl	8011ff2 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 8012088:	8c23      	ldrh	r3, [r4, #32]
 801208a:	2b01      	cmp	r3, #1
 801208c:	bf9c      	itt	ls
 801208e:	3301      	addls	r3, #1
 8012090:	8423      	strhls	r3, [r4, #32]
 8012092:	8be3      	ldrh	r3, [r4, #30]
 8012094:	b90b      	cbnz	r3, 801209a <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 8012096:	2302      	movs	r3, #2
 8012098:	83e3      	strh	r3, [r4, #30]
 801209a:	8be3      	ldrh	r3, [r4, #30]
 801209c:	3b01      	subs	r3, #1
 801209e:	b29b      	uxth	r3, r3
 80120a0:	83e3      	strh	r3, [r4, #30]
 80120a2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80120a6:	4628      	mov	r0, r5
 80120a8:	8365      	strh	r5, [r4, #26]
 80120aa:	bd38      	pop	{r3, r4, r5, pc}

080120ac <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 80120ac:	428a      	cmp	r2, r1
 80120ae:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80120b2:	8ec7      	ldrh	r7, [r0, #54]	; 0x36
 80120b4:	d931      	bls.n	801211a <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 80120b6:	8f05      	ldrh	r5, [r0, #56]	; 0x38
 80120b8:	f8b0 8040 	ldrh.w	r8, [r0, #64]	; 0x40
 80120bc:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	; 0x3e
 80120c0:	19ee      	adds	r6, r5, r7
 80120c2:	1a54      	subs	r4, r2, r1
 80120c4:	3e01      	subs	r6, #1
 80120c6:	fa1f fe84 	uxth.w	lr, r4
 80120ca:	b2b4      	uxth	r4, r6
 80120cc:	eba4 090e 	sub.w	r9, r4, lr
 80120d0:	fa1f f989 	uxth.w	r9, r9
 80120d4:	2c09      	cmp	r4, #9
 80120d6:	4626      	mov	r6, r4
 80120d8:	bf88      	it	hi
 80120da:	f1a4 060a 	subhi.w	r6, r4, #10
 80120de:	f1bc 0f00 	cmp.w	ip, #0
 80120e2:	bf08      	it	eq
 80120e4:	f04f 0c02 	moveq.w	ip, #2
 80120e8:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 80120ec:	f10c 3cff 	add.w	ip, ip, #4294967295
 80120f0:	fa1f fc8c 	uxth.w	ip, ip
 80120f4:	3c01      	subs	r4, #1
 80120f6:	f8b6 a022 	ldrh.w	sl, [r6, #34]	; 0x22
 80120fa:	b2a4      	uxth	r4, r4
 80120fc:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 8012100:	454c      	cmp	r4, r9
 8012102:	f8a6 a03a 	strh.w	sl, [r6, #58]	; 0x3a
 8012106:	d1e5      	bne.n	80120d4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 8012108:	eba5 050e 	sub.w	r5, r5, lr
 801210c:	eb0e 0408 	add.w	r4, lr, r8
 8012110:	8705      	strh	r5, [r0, #56]	; 0x38
 8012112:	f8a0 4040 	strh.w	r4, [r0, #64]	; 0x40
 8012116:	f8a0 c03e 	strh.w	ip, [r0, #62]	; 0x3e
 801211a:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 801211c:	1a64      	subs	r4, r4, r1
 801211e:	4439      	add	r1, r7
 8012120:	b289      	uxth	r1, r1
 8012122:	2909      	cmp	r1, #9
 8012124:	bf88      	it	hi
 8012126:	390a      	subhi	r1, #10
 8012128:	8704      	strh	r4, [r0, #56]	; 0x38
 801212a:	86c1      	strh	r1, [r0, #54]	; 0x36
 801212c:	250a      	movs	r5, #10
 801212e:	b18a      	cbz	r2, 8012154 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 8012130:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 8012132:	3a01      	subs	r2, #1
 8012134:	b292      	uxth	r2, r2
 8012136:	3101      	adds	r1, #1
 8012138:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 801213c:	8701      	strh	r1, [r0, #56]	; 0x38
 801213e:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 8012140:	b901      	cbnz	r1, 8012144 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 8012142:	86c5      	strh	r5, [r0, #54]	; 0x36
 8012144:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 8012146:	3901      	subs	r1, #1
 8012148:	b289      	uxth	r1, r1
 801214a:	86c1      	strh	r1, [r0, #54]	; 0x36
 801214c:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 8012150:	844c      	strh	r4, [r1, #34]	; 0x22
 8012152:	e7ec      	b.n	801212e <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 8012154:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012158:	f7ff bf4b 	b.w	8011ff2 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

0801215c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 801215c:	b570      	push	{r4, r5, r6, lr}
 801215e:	2500      	movs	r5, #0
 8012160:	4295      	cmp	r5, r2
 8012162:	d011      	beq.n	8012188 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 8012164:	8bc4      	ldrh	r4, [r0, #30]
 8012166:	f831 6b02 	ldrh.w	r6, [r1], #2
 801216a:	4414      	add	r4, r2
 801216c:	3c01      	subs	r4, #1
 801216e:	1b64      	subs	r4, r4, r5
 8012170:	b2a4      	uxth	r4, r4
 8012172:	2c01      	cmp	r4, #1
 8012174:	bf88      	it	hi
 8012176:	3c02      	subhi	r4, #2
 8012178:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801217c:	8b64      	ldrh	r4, [r4, #26]
 801217e:	42b4      	cmp	r4, r6
 8012180:	d117      	bne.n	80121b2 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 8012182:	3501      	adds	r5, #1
 8012184:	b2ad      	uxth	r5, r5
 8012186:	e7eb      	b.n	8012160 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 8012188:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801218c:	2400      	movs	r4, #0
 801218e:	4413      	add	r3, r2
 8012190:	b2a2      	uxth	r2, r4
 8012192:	429a      	cmp	r2, r3
 8012194:	da0f      	bge.n	80121b6 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 8012196:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 8012198:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 801219c:	4432      	add	r2, r6
 801219e:	b292      	uxth	r2, r2
 80121a0:	2a09      	cmp	r2, #9
 80121a2:	bf88      	it	hi
 80121a4:	3a0a      	subhi	r2, #10
 80121a6:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 80121aa:	3401      	adds	r4, #1
 80121ac:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 80121ae:	42aa      	cmp	r2, r5
 80121b0:	d0ee      	beq.n	8012190 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 80121b2:	2000      	movs	r0, #0
 80121b4:	bd70      	pop	{r4, r5, r6, pc}
 80121b6:	2001      	movs	r0, #1
 80121b8:	e7fc      	b.n	80121b4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

080121ba <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 80121ba:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80121be:	4605      	mov	r5, r0
 80121c0:	4616      	mov	r6, r2
 80121c2:	1c8c      	adds	r4, r1, #2
 80121c4:	8809      	ldrh	r1, [r1, #0]
 80121c6:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 80121ca:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 80121ce:	42b3      	cmp	r3, r6
 80121d0:	d124      	bne.n	801221c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 80121d2:	f3c1 2903 	ubfx	r9, r1, #8, #4
 80121d6:	f3c1 1803 	ubfx	r8, r1, #4, #4
 80121da:	f001 070f 	and.w	r7, r1, #15
 80121de:	f8cd 8000 	str.w	r8, [sp]
 80121e2:	464b      	mov	r3, r9
 80121e4:	4652      	mov	r2, sl
 80121e6:	4621      	mov	r1, r4
 80121e8:	4628      	mov	r0, r5
 80121ea:	f7ff ffb7 	bl	801215c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 80121ee:	4683      	mov	fp, r0
 80121f0:	b168      	cbz	r0, 801220e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 80121f2:	eb0a 0109 	add.w	r1, sl, r9
 80121f6:	4441      	add	r1, r8
 80121f8:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 80121fc:	463a      	mov	r2, r7
 80121fe:	4649      	mov	r1, r9
 8012200:	4628      	mov	r0, r5
 8012202:	f7ff ff53 	bl	80120ac <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 8012206:	4658      	mov	r0, fp
 8012208:	b003      	add	sp, #12
 801220a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801220e:	eb07 010a 	add.w	r1, r7, sl
 8012212:	4449      	add	r1, r9
 8012214:	4441      	add	r1, r8
 8012216:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 801221a:	e7d2      	b.n	80121c2 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 801221c:	f04f 0b00 	mov.w	fp, #0
 8012220:	e7f1      	b.n	8012206 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

08012222 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 8012222:	b570      	push	{r4, r5, r6, lr}
 8012224:	8810      	ldrh	r0, [r2, #0]
 8012226:	4298      	cmp	r0, r3
 8012228:	d817      	bhi.n	801225a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801222a:	1e48      	subs	r0, r1, #1
 801222c:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 8012230:	4298      	cmp	r0, r3
 8012232:	d312      	bcc.n	801225a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8012234:	2400      	movs	r4, #0
 8012236:	428c      	cmp	r4, r1
 8012238:	d20f      	bcs.n	801225a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801223a:	1860      	adds	r0, r4, r1
 801223c:	1040      	asrs	r0, r0, #1
 801223e:	0085      	lsls	r5, r0, #2
 8012240:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 8012244:	42b3      	cmp	r3, r6
 8012246:	d902      	bls.n	801224e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 8012248:	3001      	adds	r0, #1
 801224a:	b284      	uxth	r4, r0
 801224c:	e7f3      	b.n	8012236 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 801224e:	d201      	bcs.n	8012254 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 8012250:	b281      	uxth	r1, r0
 8012252:	e7f0      	b.n	8012236 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8012254:	442a      	add	r2, r5
 8012256:	8850      	ldrh	r0, [r2, #2]
 8012258:	bd70      	pop	{r4, r5, r6, pc}
 801225a:	2000      	movs	r0, #0
 801225c:	e7fc      	b.n	8012258 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

0801225e <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 801225e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012262:	6c45      	ldr	r5, [r0, #68]	; 0x44
 8012264:	886f      	ldrh	r7, [r5, #2]
 8012266:	4604      	mov	r4, r0
 8012268:	087f      	lsrs	r7, r7, #1
 801226a:	260b      	movs	r6, #11
 801226c:	3e01      	subs	r6, #1
 801226e:	d013      	beq.n	8012298 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8012270:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8012272:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8012276:	462a      	mov	r2, r5
 8012278:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 801227c:	4639      	mov	r1, r7
 801227e:	4643      	mov	r3, r8
 8012280:	4620      	mov	r0, r4
 8012282:	f7ff ffce 	bl	8012222 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 8012286:	b138      	cbz	r0, 8012298 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8012288:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 801228c:	4642      	mov	r2, r8
 801228e:	4620      	mov	r0, r4
 8012290:	f7ff ff93 	bl	80121ba <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 8012294:	2800      	cmp	r0, #0
 8012296:	d1e9      	bne.n	801226c <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 8012298:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801229c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 801229c:	b570      	push	{r4, r5, r6, lr}
 801229e:	694a      	ldr	r2, [r1, #20]
 80122a0:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 80122a2:	684b      	ldr	r3, [r1, #4]
 80122a4:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 80122a6:	1b54      	subs	r4, r2, r5
 80122a8:	f000 8106 	beq.w	80124b8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 80122ac:	1b9b      	subs	r3, r3, r6
 80122ae:	d003      	beq.n	80122b8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 80122b0:	4363      	muls	r3, r4
 80122b2:	2210      	movs	r2, #16
 80122b4:	fb93 f3f2 	sdiv	r3, r3, r2
 80122b8:	680c      	ldr	r4, [r1, #0]
 80122ba:	698a      	ldr	r2, [r1, #24]
 80122bc:	1b65      	subs	r5, r4, r5
 80122be:	f000 80fd 	beq.w	80124bc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 80122c2:	1b92      	subs	r2, r2, r6
 80122c4:	d003      	beq.n	80122ce <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 80122c6:	436a      	muls	r2, r5
 80122c8:	2410      	movs	r4, #16
 80122ca:	fb92 f2f4 	sdiv	r2, r2, r4
 80122ce:	1a9b      	subs	r3, r3, r2
 80122d0:	ee07 3a90 	vmov	s15, r3
 80122d4:	ed9f 4a88 	vldr	s8, [pc, #544]	; 80124f8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 80122d8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80122dc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80122e0:	ee67 7a84 	vmul.f32	s15, s15, s8
 80122e4:	460a      	mov	r2, r1
 80122e6:	ee87 3a27 	vdiv.f32	s6, s14, s15
 80122ea:	4603      	mov	r3, r0
 80122ec:	f100 040c 	add.w	r4, r0, #12
 80122f0:	eeb1 6a43 	vneg.f32	s12, s6
 80122f4:	edd2 7a02 	vldr	s15, [r2, #8]
 80122f8:	eec7 6a27 	vdiv.f32	s13, s14, s15
 80122fc:	3214      	adds	r2, #20
 80122fe:	ece3 6a01 	vstmia	r3!, {s13}
 8012302:	ed52 7a02 	vldr	s15, [r2, #-8]
 8012306:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801230a:	429c      	cmp	r4, r3
 801230c:	edc3 7a02 	vstr	s15, [r3, #8]
 8012310:	ed52 7a01 	vldr	s15, [r2, #-4]
 8012314:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8012318:	edc3 7a05 	vstr	s15, [r3, #20]
 801231c:	d1ea      	bne.n	80122f4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 801231e:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8012320:	698b      	ldr	r3, [r1, #24]
 8012322:	edd0 4a02 	vldr	s9, [r0, #8]
 8012326:	edd0 3a00 	vldr	s7, [r0]
 801232a:	edd0 6a01 	vldr	s13, [r0, #4]
 801232e:	ed90 5a05 	vldr	s10, [r0, #20]
 8012332:	ed90 2a03 	vldr	s4, [r0, #12]
 8012336:	edd0 5a04 	vldr	s11, [r0, #16]
 801233a:	ed90 1a07 	vldr	s2, [r0, #28]
 801233e:	edd0 2a06 	vldr	s5, [r0, #24]
 8012342:	1a9b      	subs	r3, r3, r2
 8012344:	ee07 3a90 	vmov	s15, r3
 8012348:	684b      	ldr	r3, [r1, #4]
 801234a:	1a9b      	subs	r3, r3, r2
 801234c:	ee07 3a10 	vmov	s14, r3
 8012350:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012354:	ee76 6ae4 	vsub.f32	s13, s13, s9
 8012358:	ee67 7a84 	vmul.f32	s15, s15, s8
 801235c:	ee73 4ae4 	vsub.f32	s9, s7, s9
 8012360:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012364:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 8012368:	ee27 7a04 	vmul.f32	s14, s14, s8
 801236c:	ee75 5ac5 	vsub.f32	s11, s11, s10
 8012370:	eee6 7a87 	vfma.f32	s15, s13, s14
 8012374:	ee32 5a45 	vsub.f32	s10, s4, s10
 8012378:	ee67 7a83 	vmul.f32	s15, s15, s6
 801237c:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 8012380:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8012382:	694a      	ldr	r2, [r1, #20]
 8012384:	1b13      	subs	r3, r2, r4
 8012386:	ee07 3a10 	vmov	s14, r3
 801238a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801238e:	680b      	ldr	r3, [r1, #0]
 8012390:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012394:	1b1b      	subs	r3, r3, r4
 8012396:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 801239a:	ee07 3a10 	vmov	s14, r3
 801239e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80123a2:	ee27 7a04 	vmul.f32	s14, s14, s8
 80123a6:	eee6 4a87 	vfma.f32	s9, s13, s14
 80123aa:	ee64 4a86 	vmul.f32	s9, s9, s12
 80123ae:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 80123b2:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 80123b4:	698b      	ldr	r3, [r1, #24]
 80123b6:	1a9b      	subs	r3, r3, r2
 80123b8:	ee06 3a90 	vmov	s13, r3
 80123bc:	684b      	ldr	r3, [r1, #4]
 80123be:	1a9b      	subs	r3, r3, r2
 80123c0:	ee07 3a10 	vmov	s14, r3
 80123c4:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 80123c8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80123cc:	ee66 6a84 	vmul.f32	s13, s13, s8
 80123d0:	ee27 7a04 	vmul.f32	s14, s14, s8
 80123d4:	ee65 6a66 	vnmul.f32	s13, s10, s13
 80123d8:	eee5 6a87 	vfma.f32	s13, s11, s14
 80123dc:	ee66 6a83 	vmul.f32	s13, s13, s6
 80123e0:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 80123e4:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 80123e6:	694a      	ldr	r2, [r1, #20]
 80123e8:	1b13      	subs	r3, r2, r4
 80123ea:	ee07 3a10 	vmov	s14, r3
 80123ee:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80123f2:	680b      	ldr	r3, [r1, #0]
 80123f4:	ee27 7a04 	vmul.f32	s14, s14, s8
 80123f8:	1b1b      	subs	r3, r3, r4
 80123fa:	ee25 5a47 	vnmul.f32	s10, s10, s14
 80123fe:	ee07 3a10 	vmov	s14, r3
 8012402:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012406:	ee27 7a04 	vmul.f32	s14, s14, s8
 801240a:	eea5 5a87 	vfma.f32	s10, s11, s14
 801240e:	edd0 5a08 	vldr	s11, [r0, #32]
 8012412:	ee25 5a06 	vmul.f32	s10, s10, s12
 8012416:	ee31 1a65 	vsub.f32	s2, s2, s11
 801241a:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 801241e:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8012420:	698b      	ldr	r3, [r1, #24]
 8012422:	1a9b      	subs	r3, r3, r2
 8012424:	ee07 3a10 	vmov	s14, r3
 8012428:	684b      	ldr	r3, [r1, #4]
 801242a:	1a9b      	subs	r3, r3, r2
 801242c:	ee01 3a90 	vmov	s3, r3
 8012430:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012434:	ee72 5ae5 	vsub.f32	s11, s5, s11
 8012438:	ee27 7a04 	vmul.f32	s14, s14, s8
 801243c:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 8012440:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 8012444:	ee61 1a84 	vmul.f32	s3, s3, s8
 8012448:	eea1 7a21 	vfma.f32	s14, s2, s3
 801244c:	ee27 7a03 	vmul.f32	s14, s14, s6
 8012450:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8012454:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8012456:	694a      	ldr	r2, [r1, #20]
 8012458:	1b13      	subs	r3, r2, r4
 801245a:	ee03 3a10 	vmov	s6, r3
 801245e:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8012462:	680b      	ldr	r3, [r1, #0]
 8012464:	ee23 3a04 	vmul.f32	s6, s6, s8
 8012468:	1b1b      	subs	r3, r3, r4
 801246a:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 801246e:	ee03 3a10 	vmov	s6, r3
 8012472:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8012476:	ee23 4a04 	vmul.f32	s8, s6, s8
 801247a:	eee1 5a04 	vfma.f32	s11, s2, s8
 801247e:	ee25 6a86 	vmul.f32	s12, s11, s12
 8012482:	ee62 5a67 	vnmul.f32	s11, s4, s15
 8012486:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 801248a:	eee3 5aa6 	vfma.f32	s11, s7, s13
 801248e:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8012492:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012496:	dd13      	ble.n	80124c0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 8012498:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 801249c:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 80124a0:	63c3      	str	r3, [r0, #60]	; 0x3c
 80124a2:	eee3 7a87 	vfma.f32	s15, s7, s14
 80124a6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80124aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80124ae:	dd15      	ble.n	80124dc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 80124b0:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80124b4:	6403      	str	r3, [r0, #64]	; 0x40
 80124b6:	bd70      	pop	{r4, r5, r6, pc}
 80124b8:	4623      	mov	r3, r4
 80124ba:	e6fd      	b.n	80122b8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 80124bc:	462a      	mov	r2, r5
 80124be:	e706      	b.n	80122ce <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 80124c0:	d502      	bpl.n	80124c8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 80124c2:	f647 73ff 	movw	r3, #32767	; 0x7fff
 80124c6:	e7e9      	b.n	801249c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 80124c8:	ee22 2a64 	vnmul.f32	s4, s4, s9
 80124cc:	eea3 2a85 	vfma.f32	s4, s7, s10
 80124d0:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 80124d4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80124d8:	dade      	bge.n	8012498 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 80124da:	e7f2      	b.n	80124c2 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 80124dc:	d502      	bpl.n	80124e4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 80124de:	f647 73ff 	movw	r3, #32767	; 0x7fff
 80124e2:	e7e7      	b.n	80124b4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 80124e4:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 80124e8:	eee3 4a86 	vfma.f32	s9, s7, s12
 80124ec:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 80124f0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80124f4:	dadc      	bge.n	80124b0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 80124f6:	e7f2      	b.n	80124de <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 80124f8:	3d800000 	.word	0x3d800000

080124fc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 80124fc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012500:	2714      	movs	r7, #20
 8012502:	435f      	muls	r7, r3
 8012504:	eb02 0c07 	add.w	ip, r2, r7
 8012508:	f8dc 5004 	ldr.w	r5, [ip, #4]
 801250c:	f115 0e0f 	adds.w	lr, r5, #15
 8012510:	f100 80a2 	bmi.w	8012658 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 8012514:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 8012518:	9c08      	ldr	r4, [sp, #32]
 801251a:	f8c0 e014 	str.w	lr, [r0, #20]
 801251e:	2614      	movs	r6, #20
 8012520:	4366      	muls	r6, r4
 8012522:	eb02 0806 	add.w	r8, r2, r6
 8012526:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801252a:	f115 040f 	adds.w	r4, r5, #15
 801252e:	f100 809f 	bmi.w	8012670 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 8012532:	1124      	asrs	r4, r4, #4
 8012534:	eba4 040e 	sub.w	r4, r4, lr
 8012538:	6184      	str	r4, [r0, #24]
 801253a:	2c00      	cmp	r4, #0
 801253c:	f000 808a 	beq.w	8012654 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 8012540:	f8dc 9004 	ldr.w	r9, [ip, #4]
 8012544:	f8d8 4004 	ldr.w	r4, [r8, #4]
 8012548:	5995      	ldr	r5, [r2, r6]
 801254a:	eba4 0809 	sub.w	r8, r4, r9
 801254e:	59d4      	ldr	r4, [r2, r7]
 8012550:	eba5 0a04 	sub.w	sl, r5, r4
 8012554:	ea4f 150a 	mov.w	r5, sl, lsl #4
 8012558:	fb0e fe05 	mul.w	lr, lr, r5
 801255c:	fb0a ee19 	mls	lr, sl, r9, lr
 8012560:	fb08 e404 	mla	r4, r8, r4, lr
 8012564:	ea4f 1608 	mov.w	r6, r8, lsl #4
 8012568:	3c01      	subs	r4, #1
 801256a:	19a4      	adds	r4, r4, r6
 801256c:	f100 808c 	bmi.w	8012688 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 8012570:	fb94 fef6 	sdiv	lr, r4, r6
 8012574:	f8c0 e000 	str.w	lr, [r0]
 8012578:	fb06 441e 	mls	r4, r6, lr, r4
 801257c:	6104      	str	r4, [r0, #16]
 801257e:	2d00      	cmp	r5, #0
 8012580:	f2c0 8095 	blt.w	80126ae <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 8012584:	fb95 f4f6 	sdiv	r4, r5, r6
 8012588:	6044      	str	r4, [r0, #4]
 801258a:	fb06 5514 	mls	r5, r6, r4, r5
 801258e:	6085      	str	r5, [r0, #8]
 8012590:	60c6      	str	r6, [r0, #12]
 8012592:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8012596:	6945      	ldr	r5, [r0, #20]
 8012598:	59d2      	ldr	r2, [r2, r7]
 801259a:	eddf 6a4d 	vldr	s13, [pc, #308]	; 80126d0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 801259e:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 80125a2:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 80125a6:	ee07 4a10 	vmov	s14, r4
 80125aa:	6804      	ldr	r4, [r0, #0]
 80125ac:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 80125b0:	ee07 2a90 	vmov	s15, r2
 80125b4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80125b8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80125bc:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 80125c0:	ee27 7a26 	vmul.f32	s14, s14, s13
 80125c4:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80125c8:	edd3 6a00 	vldr	s13, [r3]
 80125cc:	eee6 6a07 	vfma.f32	s13, s12, s14
 80125d0:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
 80125d4:	eee6 6a27 	vfma.f32	s13, s12, s15
 80125d8:	edc0 6a07 	vstr	s13, [r0, #28]
 80125dc:	edd0 6a01 	vldr	s13, [r0, #4]
 80125e0:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
 80125e4:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 80125e8:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 80125ec:	eea6 6aa5 	vfma.f32	s12, s13, s11
 80125f0:	ed80 6a08 	vstr	s12, [r0, #32]
 80125f4:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 80125f6:	6242      	str	r2, [r0, #36]	; 0x24
 80125f8:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
 80125fc:	ed93 6a03 	vldr	s12, [r3, #12]
 8012600:	eea5 6a87 	vfma.f32	s12, s11, s14
 8012604:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8012608:	eea5 6aa7 	vfma.f32	s12, s11, s15
 801260c:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
 8012610:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8012614:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
 8012618:	eea6 6aa5 	vfma.f32	s12, s13, s11
 801261c:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
 8012620:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8012622:	6302      	str	r2, [r0, #48]	; 0x30
 8012624:	ed93 6a06 	vldr	s12, [r3, #24]
 8012628:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
 801262c:	eea5 6a87 	vfma.f32	s12, s11, s14
 8012630:	eeb0 7a46 	vmov.f32	s14, s12
 8012634:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
 8012638:	eea6 7a27 	vfma.f32	s14, s12, s15
 801263c:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8012640:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
 8012644:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
 8012648:	eee6 7a87 	vfma.f32	s15, s13, s14
 801264c:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
 8012650:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 8012652:	63c3      	str	r3, [r0, #60]	; 0x3c
 8012654:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8012658:	f1c5 0501 	rsb	r5, r5, #1
 801265c:	f015 050f 	ands.w	r5, r5, #15
 8012660:	bf18      	it	ne
 8012662:	2501      	movne	r5, #1
 8012664:	2410      	movs	r4, #16
 8012666:	fb9e fef4 	sdiv	lr, lr, r4
 801266a:	ebae 0e05 	sub.w	lr, lr, r5
 801266e:	e753      	b.n	8012518 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 8012670:	f1c5 0501 	rsb	r5, r5, #1
 8012674:	f015 050f 	ands.w	r5, r5, #15
 8012678:	bf18      	it	ne
 801267a:	2501      	movne	r5, #1
 801267c:	f04f 0910 	mov.w	r9, #16
 8012680:	fb94 f4f9 	sdiv	r4, r4, r9
 8012684:	1b64      	subs	r4, r4, r5
 8012686:	e755      	b.n	8012534 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 8012688:	4264      	negs	r4, r4
 801268a:	fb94 fef6 	sdiv	lr, r4, r6
 801268e:	f1ce 0800 	rsb	r8, lr, #0
 8012692:	fb06 441e 	mls	r4, r6, lr, r4
 8012696:	f8c0 8000 	str.w	r8, [r0]
 801269a:	6104      	str	r4, [r0, #16]
 801269c:	2c00      	cmp	r4, #0
 801269e:	f43f af6e 	beq.w	801257e <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 80126a2:	ea6f 0e0e 	mvn.w	lr, lr
 80126a6:	f8c0 e000 	str.w	lr, [r0]
 80126aa:	1b34      	subs	r4, r6, r4
 80126ac:	e766      	b.n	801257c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 80126ae:	426d      	negs	r5, r5
 80126b0:	fb95 f4f6 	sdiv	r4, r5, r6
 80126b4:	f1c4 0e00 	rsb	lr, r4, #0
 80126b8:	fb06 5514 	mls	r5, r6, r4, r5
 80126bc:	f8c0 e004 	str.w	lr, [r0, #4]
 80126c0:	6085      	str	r5, [r0, #8]
 80126c2:	2d00      	cmp	r5, #0
 80126c4:	f43f af64 	beq.w	8012590 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 80126c8:	43e4      	mvns	r4, r4
 80126ca:	6044      	str	r4, [r0, #4]
 80126cc:	1b75      	subs	r5, r6, r5
 80126ce:	e75e      	b.n	801258e <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 80126d0:	3d800000 	.word	0x3d800000

080126d4 <_ZN8touchgfx7Unicode6strlenEPKt>:
 80126d4:	4602      	mov	r2, r0
 80126d6:	b148      	cbz	r0, 80126ec <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 80126d8:	2300      	movs	r3, #0
 80126da:	b298      	uxth	r0, r3
 80126dc:	3301      	adds	r3, #1
 80126de:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 80126e2:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 80126e6:	2900      	cmp	r1, #0
 80126e8:	d1f7      	bne.n	80126da <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 80126ea:	4770      	bx	lr
 80126ec:	4770      	bx	lr

080126ee <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 80126ee:	b530      	push	{r4, r5, lr}
 80126f0:	4604      	mov	r4, r0
 80126f2:	b159      	cbz	r1, 801270c <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 80126f4:	b148      	cbz	r0, 801270a <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 80126f6:	2300      	movs	r3, #0
 80126f8:	b298      	uxth	r0, r3
 80126fa:	4282      	cmp	r2, r0
 80126fc:	d905      	bls.n	801270a <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 80126fe:	5ccd      	ldrb	r5, [r1, r3]
 8012700:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 8012704:	3301      	adds	r3, #1
 8012706:	2d00      	cmp	r5, #0
 8012708:	d1f6      	bne.n	80126f8 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 801270a:	bd30      	pop	{r4, r5, pc}
 801270c:	4608      	mov	r0, r1
 801270e:	e7fc      	b.n	801270a <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

08012710 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>:
 8012710:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012712:	b08b      	sub	sp, #44	; 0x2c
 8012714:	468c      	mov	ip, r1
 8012716:	2100      	movs	r1, #0
 8012718:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 801271c:	ae01      	add	r6, sp, #4
 801271e:	211f      	movs	r1, #31
 8012720:	fbb0 f7f3 	udiv	r7, r0, r3
 8012724:	fb03 0517 	mls	r5, r3, r7, r0
 8012728:	b2ec      	uxtb	r4, r5
 801272a:	2d09      	cmp	r5, #9
 801272c:	bfd4      	ite	le
 801272e:	3430      	addle	r4, #48	; 0x30
 8012730:	3457      	addgt	r4, #87	; 0x57
 8012732:	b2e4      	uxtb	r4, r4
 8012734:	558c      	strb	r4, [r1, r6]
 8012736:	4638      	mov	r0, r7
 8012738:	1e4c      	subs	r4, r1, #1
 801273a:	b92f      	cbnz	r7, 8012748 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2+0x38>
 801273c:	4431      	add	r1, r6
 801273e:	4660      	mov	r0, ip
 8012740:	f7ff ffd5 	bl	80126ee <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8012744:	b00b      	add	sp, #44	; 0x2c
 8012746:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012748:	4621      	mov	r1, r4
 801274a:	e7e9      	b.n	8012720 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2+0x10>

0801274c <_ZN8touchgfx7Unicode4itoaElPtti>:
 801274c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801274e:	4607      	mov	r7, r0
 8012750:	b08b      	sub	sp, #44	; 0x2c
 8012752:	4608      	mov	r0, r1
 8012754:	b341      	cbz	r1, 80127a8 <_ZN8touchgfx7Unicode4itoaElPtti+0x5c>
 8012756:	1e99      	subs	r1, r3, #2
 8012758:	2922      	cmp	r1, #34	; 0x22
 801275a:	d825      	bhi.n	80127a8 <_ZN8touchgfx7Unicode4itoaElPtti+0x5c>
 801275c:	2100      	movs	r1, #0
 801275e:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 8012762:	463c      	mov	r4, r7
 8012764:	261f      	movs	r6, #31
 8012766:	f10d 0c04 	add.w	ip, sp, #4
 801276a:	fb94 fef3 	sdiv	lr, r4, r3
 801276e:	fb03 441e 	mls	r4, r3, lr, r4
 8012772:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 8012776:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 801277a:	b2ec      	uxtb	r4, r5
 801277c:	2d09      	cmp	r5, #9
 801277e:	bfd4      	ite	le
 8012780:	3430      	addle	r4, #48	; 0x30
 8012782:	3457      	addgt	r4, #87	; 0x57
 8012784:	b2e4      	uxtb	r4, r4
 8012786:	f80c 4006 	strb.w	r4, [ip, r6]
 801278a:	4674      	mov	r4, lr
 801278c:	1e71      	subs	r1, r6, #1
 801278e:	b96c      	cbnz	r4, 80127ac <_ZN8touchgfx7Unicode4itoaElPtti+0x60>
 8012790:	2f00      	cmp	r7, #0
 8012792:	da05      	bge.n	80127a0 <_ZN8touchgfx7Unicode4itoaElPtti+0x54>
 8012794:	ab0a      	add	r3, sp, #40	; 0x28
 8012796:	4419      	add	r1, r3
 8012798:	232d      	movs	r3, #45	; 0x2d
 801279a:	f801 3c24 	strb.w	r3, [r1, #-36]
 801279e:	1eb1      	subs	r1, r6, #2
 80127a0:	3101      	adds	r1, #1
 80127a2:	4461      	add	r1, ip
 80127a4:	f7ff ffa3 	bl	80126ee <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 80127a8:	b00b      	add	sp, #44	; 0x2c
 80127aa:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80127ac:	460e      	mov	r6, r1
 80127ae:	e7dc      	b.n	801276a <_ZN8touchgfx7Unicode4itoaElPtti+0x1e>

080127b0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 80127b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80127b4:	4691      	mov	r9, r2
 80127b6:	b085      	sub	sp, #20
 80127b8:	6802      	ldr	r2, [r0, #0]
 80127ba:	9201      	str	r2, [sp, #4]
 80127bc:	4688      	mov	r8, r1
 80127be:	4683      	mov	fp, r0
 80127c0:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 80127c4:	9103      	str	r1, [sp, #12]
 80127c6:	4610      	mov	r0, r2
 80127c8:	461c      	mov	r4, r3
 80127ca:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 80127ce:	9302      	str	r3, [sp, #8]
 80127d0:	f7ff ff80 	bl	80126d4 <_ZN8touchgfx7Unicode6strlenEPKt>
 80127d4:	f1b8 0f00 	cmp.w	r8, #0
 80127d8:	bf0c      	ite	eq
 80127da:	4684      	moveq	ip, r0
 80127dc:	f100 0c01 	addne.w	ip, r0, #1
 80127e0:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
 80127e4:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 80127e8:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 80127ea:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80127ec:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
 80127f0:	9903      	ldr	r1, [sp, #12]
 80127f2:	fa1f fc8c 	uxth.w	ip, ip
 80127f6:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 80127fa:	d041      	beq.n	8012880 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 80127fc:	d834      	bhi.n	8012868 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 80127fe:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
 8012802:	d059      	beq.n	80128b8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 8012804:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 8012808:	d03a      	beq.n	8012880 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 801280a:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
 801280e:	d034      	beq.n	801287a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8012810:	2400      	movs	r4, #0
 8012812:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 8012816:	3a01      	subs	r2, #1
 8012818:	b169      	cbz	r1, 8012836 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801281a:	9911      	ldr	r1, [sp, #68]	; 0x44
 801281c:	458c      	cmp	ip, r1
 801281e:	da09      	bge.n	8012834 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8012820:	eba1 010c 	sub.w	r1, r1, ip
 8012824:	b289      	uxth	r1, r1
 8012826:	b933      	cbnz	r3, 8012836 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8012828:	2e00      	cmp	r6, #0
 801282a:	d051      	beq.n	80128d0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 801282c:	2800      	cmp	r0, #0
 801282e:	d04f      	beq.n	80128d0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8012830:	440c      	add	r4, r1
 8012832:	b2a4      	uxth	r4, r4
 8012834:	2100      	movs	r1, #0
 8012836:	682b      	ldr	r3, [r5, #0]
 8012838:	4293      	cmp	r3, r2
 801283a:	da07      	bge.n	801284c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 801283c:	f1b8 0f00 	cmp.w	r8, #0
 8012840:	d004      	beq.n	801284c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8012842:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 8012846:	682b      	ldr	r3, [r5, #0]
 8012848:	3301      	adds	r3, #1
 801284a:	602b      	str	r3, [r5, #0]
 801284c:	2730      	movs	r7, #48	; 0x30
 801284e:	2c00      	cmp	r4, #0
 8012850:	d04e      	beq.n	80128f0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8012852:	682e      	ldr	r6, [r5, #0]
 8012854:	3c01      	subs	r4, #1
 8012856:	42b2      	cmp	r2, r6
 8012858:	b2a4      	uxth	r4, r4
 801285a:	dd49      	ble.n	80128f0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 801285c:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8012860:	682b      	ldr	r3, [r5, #0]
 8012862:	3301      	adds	r3, #1
 8012864:	602b      	str	r3, [r5, #0]
 8012866:	e7f2      	b.n	801284e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 8012868:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
 801286c:	d01d      	beq.n	80128aa <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 801286e:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
 8012872:	d002      	beq.n	801287a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8012874:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
 8012878:	e7c9      	b.n	801280e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 801287a:	4684      	mov	ip, r0
 801287c:	f04f 0800 	mov.w	r8, #0
 8012880:	2c00      	cmp	r4, #0
 8012882:	d0c6      	beq.n	8012812 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8012884:	b947      	cbnz	r7, 8012898 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8012886:	2801      	cmp	r0, #1
 8012888:	d106      	bne.n	8012898 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 801288a:	8814      	ldrh	r4, [r2, #0]
 801288c:	2c30      	cmp	r4, #48	; 0x30
 801288e:	bf02      	ittt	eq
 8012890:	3202      	addeq	r2, #2
 8012892:	f8cb 2000 	streq.w	r2, [fp]
 8012896:	4638      	moveq	r0, r7
 8012898:	45bc      	cmp	ip, r7
 801289a:	da14      	bge.n	80128c6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 801289c:	b2bf      	uxth	r7, r7
 801289e:	eba7 040c 	sub.w	r4, r7, ip
 80128a2:	b2a4      	uxth	r4, r4
 80128a4:	46bc      	mov	ip, r7
 80128a6:	2600      	movs	r6, #0
 80128a8:	e7b3      	b.n	8012812 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 80128aa:	4684      	mov	ip, r0
 80128ac:	b16c      	cbz	r4, 80128ca <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 80128ae:	42b8      	cmp	r0, r7
 80128b0:	dd00      	ble.n	80128b4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 80128b2:	b2b8      	uxth	r0, r7
 80128b4:	2400      	movs	r4, #0
 80128b6:	e003      	b.n	80128c0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 80128b8:	f04f 0c01 	mov.w	ip, #1
 80128bc:	2400      	movs	r4, #0
 80128be:	4660      	mov	r0, ip
 80128c0:	4626      	mov	r6, r4
 80128c2:	46a0      	mov	r8, r4
 80128c4:	e7a5      	b.n	8012812 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 80128c6:	2400      	movs	r4, #0
 80128c8:	e7ed      	b.n	80128a6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 80128ca:	4626      	mov	r6, r4
 80128cc:	46a0      	mov	r8, r4
 80128ce:	e7a0      	b.n	8012812 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 80128d0:	2900      	cmp	r1, #0
 80128d2:	d0b0      	beq.n	8012836 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 80128d4:	2720      	movs	r7, #32
 80128d6:	682e      	ldr	r6, [r5, #0]
 80128d8:	2900      	cmp	r1, #0
 80128da:	d0ac      	beq.n	8012836 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 80128dc:	3901      	subs	r1, #1
 80128de:	4296      	cmp	r6, r2
 80128e0:	b289      	uxth	r1, r1
 80128e2:	daa7      	bge.n	8012834 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 80128e4:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 80128e8:	682b      	ldr	r3, [r5, #0]
 80128ea:	3301      	adds	r3, #1
 80128ec:	602b      	str	r3, [r5, #0]
 80128ee:	e7f2      	b.n	80128d6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 80128f0:	b188      	cbz	r0, 8012916 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 80128f2:	682b      	ldr	r3, [r5, #0]
 80128f4:	3801      	subs	r0, #1
 80128f6:	429a      	cmp	r2, r3
 80128f8:	b280      	uxth	r0, r0
 80128fa:	dd0c      	ble.n	8012916 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 80128fc:	f8db 3000 	ldr.w	r3, [fp]
 8012900:	1c9c      	adds	r4, r3, #2
 8012902:	f8cb 4000 	str.w	r4, [fp]
 8012906:	881c      	ldrh	r4, [r3, #0]
 8012908:	682b      	ldr	r3, [r5, #0]
 801290a:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 801290e:	682b      	ldr	r3, [r5, #0]
 8012910:	3301      	adds	r3, #1
 8012912:	602b      	str	r3, [r5, #0]
 8012914:	e7ec      	b.n	80128f0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8012916:	2620      	movs	r6, #32
 8012918:	b151      	cbz	r1, 8012930 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 801291a:	6828      	ldr	r0, [r5, #0]
 801291c:	3901      	subs	r1, #1
 801291e:	4282      	cmp	r2, r0
 8012920:	b289      	uxth	r1, r1
 8012922:	dd05      	ble.n	8012930 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8012924:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 8012928:	682b      	ldr	r3, [r5, #0]
 801292a:	3301      	adds	r3, #1
 801292c:	602b      	str	r3, [r5, #0]
 801292e:	e7f3      	b.n	8012918 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 8012930:	b005      	add	sp, #20
 8012932:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08012936 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 8012936:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801293a:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 801293e:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
 8012942:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
 8012946:	2400      	movs	r4, #0
 8012948:	8014      	strh	r4, [r2, #0]
 801294a:	701c      	strb	r4, [r3, #0]
 801294c:	f888 4000 	strb.w	r4, [r8]
 8012950:	f88c 4000 	strb.w	r4, [ip]
 8012954:	f88e 4000 	strb.w	r4, [lr]
 8012958:	703c      	strb	r4, [r7, #0]
 801295a:	6804      	ldr	r4, [r0, #0]
 801295c:	b1a4      	cbz	r4, 8012988 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 801295e:	8824      	ldrh	r4, [r4, #0]
 8012960:	f04f 0901 	mov.w	r9, #1
 8012964:	b314      	cbz	r4, 80129ac <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8012966:	2c2b      	cmp	r4, #43	; 0x2b
 8012968:	d001      	beq.n	801296e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 801296a:	2c20      	cmp	r4, #32
 801296c:	d110      	bne.n	8012990 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 801296e:	8014      	strh	r4, [r2, #0]
 8012970:	6804      	ldr	r4, [r0, #0]
 8012972:	b10c      	cbz	r4, 8012978 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 8012974:	3402      	adds	r4, #2
 8012976:	6004      	str	r4, [r0, #0]
 8012978:	680c      	ldr	r4, [r1, #0]
 801297a:	b10c      	cbz	r4, 8012980 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 801297c:	3401      	adds	r4, #1
 801297e:	600c      	str	r4, [r1, #0]
 8012980:	6804      	ldr	r4, [r0, #0]
 8012982:	b17c      	cbz	r4, 80129a4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 8012984:	8824      	ldrh	r4, [r4, #0]
 8012986:	e7ed      	b.n	8012964 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8012988:	680c      	ldr	r4, [r1, #0]
 801298a:	b17c      	cbz	r4, 80129ac <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 801298c:	7824      	ldrb	r4, [r4, #0]
 801298e:	e7e7      	b.n	8012960 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 8012990:	2c2d      	cmp	r4, #45	; 0x2d
 8012992:	d102      	bne.n	801299a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 8012994:	f883 9000 	strb.w	r9, [r3]
 8012998:	e7ea      	b.n	8012970 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 801299a:	2c23      	cmp	r4, #35	; 0x23
 801299c:	d107      	bne.n	80129ae <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 801299e:	f888 9000 	strb.w	r9, [r8]
 80129a2:	e7e5      	b.n	8012970 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 80129a4:	680c      	ldr	r4, [r1, #0]
 80129a6:	b10c      	cbz	r4, 80129ac <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 80129a8:	7824      	ldrb	r4, [r4, #0]
 80129aa:	e7db      	b.n	8012964 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 80129ac:	2400      	movs	r4, #0
 80129ae:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 80129b2:	2b09      	cmp	r3, #9
 80129b4:	d901      	bls.n	80129ba <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 80129b6:	2c2a      	cmp	r4, #42	; 0x2a
 80129b8:	d122      	bne.n	8012a00 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 80129ba:	2301      	movs	r3, #1
 80129bc:	2c30      	cmp	r4, #48	; 0x30
 80129be:	f88e 3000 	strb.w	r3, [lr]
 80129c2:	d10d      	bne.n	80129e0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 80129c4:	f88c 3000 	strb.w	r3, [ip]
 80129c8:	6803      	ldr	r3, [r0, #0]
 80129ca:	b10b      	cbz	r3, 80129d0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 80129cc:	3302      	adds	r3, #2
 80129ce:	6003      	str	r3, [r0, #0]
 80129d0:	680b      	ldr	r3, [r1, #0]
 80129d2:	b10b      	cbz	r3, 80129d8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 80129d4:	3301      	adds	r3, #1
 80129d6:	600b      	str	r3, [r1, #0]
 80129d8:	6803      	ldr	r3, [r0, #0]
 80129da:	2b00      	cmp	r3, #0
 80129dc:	d02f      	beq.n	8012a3e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 80129de:	881c      	ldrh	r4, [r3, #0]
 80129e0:	2c2a      	cmp	r4, #42	; 0x2a
 80129e2:	d135      	bne.n	8012a50 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 80129e4:	f04f 33ff 	mov.w	r3, #4294967295
 80129e8:	6033      	str	r3, [r6, #0]
 80129ea:	6803      	ldr	r3, [r0, #0]
 80129ec:	b10b      	cbz	r3, 80129f2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 80129ee:	3302      	adds	r3, #2
 80129f0:	6003      	str	r3, [r0, #0]
 80129f2:	680b      	ldr	r3, [r1, #0]
 80129f4:	b10b      	cbz	r3, 80129fa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 80129f6:	3301      	adds	r3, #1
 80129f8:	600b      	str	r3, [r1, #0]
 80129fa:	6803      	ldr	r3, [r0, #0]
 80129fc:	b31b      	cbz	r3, 8012a46 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 80129fe:	881c      	ldrh	r4, [r3, #0]
 8012a00:	2c2e      	cmp	r4, #46	; 0x2e
 8012a02:	d11a      	bne.n	8012a3a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8012a04:	2301      	movs	r3, #1
 8012a06:	703b      	strb	r3, [r7, #0]
 8012a08:	6803      	ldr	r3, [r0, #0]
 8012a0a:	b10b      	cbz	r3, 8012a10 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 8012a0c:	3302      	adds	r3, #2
 8012a0e:	6003      	str	r3, [r0, #0]
 8012a10:	680b      	ldr	r3, [r1, #0]
 8012a12:	b10b      	cbz	r3, 8012a18 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 8012a14:	3301      	adds	r3, #1
 8012a16:	600b      	str	r3, [r1, #0]
 8012a18:	6803      	ldr	r3, [r0, #0]
 8012a1a:	2b00      	cmp	r3, #0
 8012a1c:	d036      	beq.n	8012a8c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 8012a1e:	881b      	ldrh	r3, [r3, #0]
 8012a20:	2b2a      	cmp	r3, #42	; 0x2a
 8012a22:	d137      	bne.n	8012a94 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8012a24:	f04f 33ff 	mov.w	r3, #4294967295
 8012a28:	602b      	str	r3, [r5, #0]
 8012a2a:	6803      	ldr	r3, [r0, #0]
 8012a2c:	b10b      	cbz	r3, 8012a32 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 8012a2e:	3302      	adds	r3, #2
 8012a30:	6003      	str	r3, [r0, #0]
 8012a32:	680b      	ldr	r3, [r1, #0]
 8012a34:	b10b      	cbz	r3, 8012a3a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8012a36:	3301      	adds	r3, #1
 8012a38:	600b      	str	r3, [r1, #0]
 8012a3a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8012a3e:	680c      	ldr	r4, [r1, #0]
 8012a40:	b134      	cbz	r4, 8012a50 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8012a42:	7824      	ldrb	r4, [r4, #0]
 8012a44:	e7cc      	b.n	80129e0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8012a46:	680b      	ldr	r3, [r1, #0]
 8012a48:	2b00      	cmp	r3, #0
 8012a4a:	d0f6      	beq.n	8012a3a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8012a4c:	781c      	ldrb	r4, [r3, #0]
 8012a4e:	e7d7      	b.n	8012a00 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8012a50:	2300      	movs	r3, #0
 8012a52:	6033      	str	r3, [r6, #0]
 8012a54:	220a      	movs	r2, #10
 8012a56:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 8012a5a:	fa1f f38c 	uxth.w	r3, ip
 8012a5e:	2b09      	cmp	r3, #9
 8012a60:	d8ce      	bhi.n	8012a00 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8012a62:	6833      	ldr	r3, [r6, #0]
 8012a64:	fb02 c303 	mla	r3, r2, r3, ip
 8012a68:	6033      	str	r3, [r6, #0]
 8012a6a:	6803      	ldr	r3, [r0, #0]
 8012a6c:	b10b      	cbz	r3, 8012a72 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 8012a6e:	3302      	adds	r3, #2
 8012a70:	6003      	str	r3, [r0, #0]
 8012a72:	680b      	ldr	r3, [r1, #0]
 8012a74:	b10b      	cbz	r3, 8012a7a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 8012a76:	3301      	adds	r3, #1
 8012a78:	600b      	str	r3, [r1, #0]
 8012a7a:	6803      	ldr	r3, [r0, #0]
 8012a7c:	b10b      	cbz	r3, 8012a82 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 8012a7e:	881c      	ldrh	r4, [r3, #0]
 8012a80:	e7e9      	b.n	8012a56 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8012a82:	680c      	ldr	r4, [r1, #0]
 8012a84:	2c00      	cmp	r4, #0
 8012a86:	d0e6      	beq.n	8012a56 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8012a88:	7824      	ldrb	r4, [r4, #0]
 8012a8a:	e7e4      	b.n	8012a56 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8012a8c:	680b      	ldr	r3, [r1, #0]
 8012a8e:	b10b      	cbz	r3, 8012a94 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8012a90:	781b      	ldrb	r3, [r3, #0]
 8012a92:	e7c5      	b.n	8012a20 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 8012a94:	2200      	movs	r2, #0
 8012a96:	602a      	str	r2, [r5, #0]
 8012a98:	240a      	movs	r4, #10
 8012a9a:	3b30      	subs	r3, #48	; 0x30
 8012a9c:	b29e      	uxth	r6, r3
 8012a9e:	2e09      	cmp	r6, #9
 8012aa0:	682a      	ldr	r2, [r5, #0]
 8012aa2:	d813      	bhi.n	8012acc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 8012aa4:	fb04 3302 	mla	r3, r4, r2, r3
 8012aa8:	602b      	str	r3, [r5, #0]
 8012aaa:	6803      	ldr	r3, [r0, #0]
 8012aac:	b10b      	cbz	r3, 8012ab2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 8012aae:	3302      	adds	r3, #2
 8012ab0:	6003      	str	r3, [r0, #0]
 8012ab2:	680b      	ldr	r3, [r1, #0]
 8012ab4:	b10b      	cbz	r3, 8012aba <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 8012ab6:	3301      	adds	r3, #1
 8012ab8:	600b      	str	r3, [r1, #0]
 8012aba:	6803      	ldr	r3, [r0, #0]
 8012abc:	b10b      	cbz	r3, 8012ac2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 8012abe:	881b      	ldrh	r3, [r3, #0]
 8012ac0:	e7eb      	b.n	8012a9a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8012ac2:	680b      	ldr	r3, [r1, #0]
 8012ac4:	2b00      	cmp	r3, #0
 8012ac6:	d0e8      	beq.n	8012a9a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8012ac8:	781b      	ldrb	r3, [r3, #0]
 8012aca:	e7e6      	b.n	8012a9a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8012acc:	2a06      	cmp	r2, #6
 8012ace:	bfa8      	it	ge
 8012ad0:	2206      	movge	r2, #6
 8012ad2:	602a      	str	r2, [r5, #0]
 8012ad4:	e7b1      	b.n	8012a3a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

08012ad6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 8012ad6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012ada:	b0a3      	sub	sp, #140	; 0x8c
 8012adc:	2600      	movs	r6, #0
 8012ade:	f10d 0944 	add.w	r9, sp, #68	; 0x44
 8012ae2:	4607      	mov	r7, r0
 8012ae4:	4688      	mov	r8, r1
 8012ae6:	e9cd 3208 	strd	r3, r2, [sp, #32]
 8012aea:	4631      	mov	r1, r6
 8012aec:	2242      	movs	r2, #66	; 0x42
 8012aee:	4648      	mov	r0, r9
 8012af0:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 8012af2:	960d      	str	r6, [sp, #52]	; 0x34
 8012af4:	f00c fe94 	bl	801f820 <memset>
 8012af8:	b15f      	cbz	r7, 8012b12 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 8012afa:	f108 3aff 	add.w	sl, r8, #4294967295
 8012afe:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8012b00:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8012b02:	b152      	cbz	r2, 8012b1a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 8012b04:	8812      	ldrh	r2, [r2, #0]
 8012b06:	b10a      	cbz	r2, 8012b0c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8012b08:	459a      	cmp	sl, r3
 8012b0a:	dc2e      	bgt.n	8012b6a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 8012b0c:	2200      	movs	r2, #0
 8012b0e:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8012b12:	4638      	mov	r0, r7
 8012b14:	b023      	add	sp, #140	; 0x8c
 8012b16:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012b1a:	9a08      	ldr	r2, [sp, #32]
 8012b1c:	2a00      	cmp	r2, #0
 8012b1e:	d0f5      	beq.n	8012b0c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8012b20:	7812      	ldrb	r2, [r2, #0]
 8012b22:	e7f0      	b.n	8012b06 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 8012b24:	2d00      	cmp	r5, #0
 8012b26:	d0ea      	beq.n	8012afe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8012b28:	782a      	ldrb	r2, [r5, #0]
 8012b2a:	b142      	cbz	r2, 8012b3e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 8012b2c:	2a25      	cmp	r2, #37	; 0x25
 8012b2e:	d001      	beq.n	8012b34 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 8012b30:	459a      	cmp	sl, r3
 8012b32:	dc08      	bgt.n	8012b46 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 8012b34:	f1bb 0f00 	cmp.w	fp, #0
 8012b38:	d121      	bne.n	8012b7e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 8012b3a:	2d00      	cmp	r5, #0
 8012b3c:	d0df      	beq.n	8012afe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8012b3e:	782a      	ldrb	r2, [r5, #0]
 8012b40:	f04f 0b00 	mov.w	fp, #0
 8012b44:	e01d      	b.n	8012b82 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 8012b46:	f1bb 0f00 	cmp.w	fp, #0
 8012b4a:	d078      	beq.n	8012c3e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 8012b4c:	f8bb 2000 	ldrh.w	r2, [fp]
 8012b50:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8012b54:	f1bb 0f00 	cmp.w	fp, #0
 8012b58:	d002      	beq.n	8012b60 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 8012b5a:	f10b 0202 	add.w	r2, fp, #2
 8012b5e:	9209      	str	r2, [sp, #36]	; 0x24
 8012b60:	b10d      	cbz	r5, 8012b66 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 8012b62:	3501      	adds	r5, #1
 8012b64:	9508      	str	r5, [sp, #32]
 8012b66:	3301      	adds	r3, #1
 8012b68:	930d      	str	r3, [sp, #52]	; 0x34
 8012b6a:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 8012b6e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8012b70:	f1bb 0f00 	cmp.w	fp, #0
 8012b74:	d0d6      	beq.n	8012b24 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 8012b76:	f8bb 2000 	ldrh.w	r2, [fp]
 8012b7a:	2a00      	cmp	r2, #0
 8012b7c:	d1d6      	bne.n	8012b2c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 8012b7e:	f8bb 2000 	ldrh.w	r2, [fp]
 8012b82:	2a00      	cmp	r2, #0
 8012b84:	d0bb      	beq.n	8012afe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8012b86:	459a      	cmp	sl, r3
 8012b88:	ddb9      	ble.n	8012afe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8012b8a:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
 8012b8e:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
 8012b92:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 8012b96:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
 8012b9a:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
 8012b9e:	960e      	str	r6, [sp, #56]	; 0x38
 8012ba0:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
 8012ba4:	960f      	str	r6, [sp, #60]	; 0x3c
 8012ba6:	f1bb 0f00 	cmp.w	fp, #0
 8012baa:	d002      	beq.n	8012bb2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 8012bac:	f10b 0302 	add.w	r3, fp, #2
 8012bb0:	9309      	str	r3, [sp, #36]	; 0x24
 8012bb2:	b10d      	cbz	r5, 8012bb8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 8012bb4:	1c6b      	adds	r3, r5, #1
 8012bb6:	9308      	str	r3, [sp, #32]
 8012bb8:	ab0f      	add	r3, sp, #60	; 0x3c
 8012bba:	9305      	str	r3, [sp, #20]
 8012bbc:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 8012bc0:	9304      	str	r3, [sp, #16]
 8012bc2:	ab0e      	add	r3, sp, #56	; 0x38
 8012bc4:	9303      	str	r3, [sp, #12]
 8012bc6:	ab0c      	add	r3, sp, #48	; 0x30
 8012bc8:	9302      	str	r3, [sp, #8]
 8012bca:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 8012bce:	9301      	str	r3, [sp, #4]
 8012bd0:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 8012bd4:	9300      	str	r3, [sp, #0]
 8012bd6:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 8012bda:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 8012bde:	a908      	add	r1, sp, #32
 8012be0:	a809      	add	r0, sp, #36	; 0x24
 8012be2:	f7ff fea8 	bl	8012936 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 8012be6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8012be8:	2b00      	cmp	r3, #0
 8012bea:	bfbe      	ittt	lt
 8012bec:	6823      	ldrlt	r3, [r4, #0]
 8012bee:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8012bf2:	930e      	strlt	r3, [sp, #56]	; 0x38
 8012bf4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8012bf6:	bfb8      	it	lt
 8012bf8:	3404      	addlt	r4, #4
 8012bfa:	2b00      	cmp	r3, #0
 8012bfc:	bfb8      	it	lt
 8012bfe:	6823      	ldrlt	r3, [r4, #0]
 8012c00:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8012c04:	bfbe      	ittt	lt
 8012c06:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8012c0a:	930f      	strlt	r3, [sp, #60]	; 0x3c
 8012c0c:	3404      	addlt	r4, #4
 8012c0e:	b1d9      	cbz	r1, 8012c48 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 8012c10:	880b      	ldrh	r3, [r1, #0]
 8012c12:	2b69      	cmp	r3, #105	; 0x69
 8012c14:	d01f      	beq.n	8012c56 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8012c16:	d82f      	bhi.n	8012c78 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 8012c18:	2b58      	cmp	r3, #88	; 0x58
 8012c1a:	d01c      	beq.n	8012c56 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8012c1c:	d818      	bhi.n	8012c50 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 8012c1e:	2b25      	cmp	r3, #37	; 0x25
 8012c20:	d034      	beq.n	8012c8c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 8012c22:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 8012c26:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8012c28:	f1bb 0f00 	cmp.w	fp, #0
 8012c2c:	f000 80b8 	beq.w	8012da0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 8012c30:	f8bb 5000 	ldrh.w	r5, [fp]
 8012c34:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 8012c38:	3301      	adds	r3, #1
 8012c3a:	930d      	str	r3, [sp, #52]	; 0x34
 8012c3c:	e029      	b.n	8012c92 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8012c3e:	b10d      	cbz	r5, 8012c44 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 8012c40:	782a      	ldrb	r2, [r5, #0]
 8012c42:	e785      	b.n	8012b50 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8012c44:	462a      	mov	r2, r5
 8012c46:	e783      	b.n	8012b50 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8012c48:	2a00      	cmp	r2, #0
 8012c4a:	d0ea      	beq.n	8012c22 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8012c4c:	7813      	ldrb	r3, [r2, #0]
 8012c4e:	e7e0      	b.n	8012c12 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 8012c50:	3b63      	subs	r3, #99	; 0x63
 8012c52:	2b01      	cmp	r3, #1
 8012c54:	d8e5      	bhi.n	8012c22 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8012c56:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 8012c5a:	b329      	cbz	r1, 8012ca8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 8012c5c:	880b      	ldrh	r3, [r1, #0]
 8012c5e:	2b69      	cmp	r3, #105	; 0x69
 8012c60:	d063      	beq.n	8012d2a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8012c62:	d825      	bhi.n	8012cb0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 8012c64:	2b63      	cmp	r3, #99	; 0x63
 8012c66:	d038      	beq.n	8012cda <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 8012c68:	2b64      	cmp	r3, #100	; 0x64
 8012c6a:	d05e      	beq.n	8012d2a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8012c6c:	2b58      	cmp	r3, #88	; 0x58
 8012c6e:	d07b      	beq.n	8012d68 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 8012c70:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 8012c74:	4625      	mov	r5, r4
 8012c76:	e036      	b.n	8012ce6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8012c78:	2b73      	cmp	r3, #115	; 0x73
 8012c7a:	d0ec      	beq.n	8012c56 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8012c7c:	d802      	bhi.n	8012c84 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 8012c7e:	2b6f      	cmp	r3, #111	; 0x6f
 8012c80:	d1cf      	bne.n	8012c22 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8012c82:	e7e8      	b.n	8012c56 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8012c84:	2b75      	cmp	r3, #117	; 0x75
 8012c86:	d0e6      	beq.n	8012c56 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8012c88:	2b78      	cmp	r3, #120	; 0x78
 8012c8a:	e7f9      	b.n	8012c80 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 8012c8c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8012c8e:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 8012c92:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8012c94:	b10b      	cbz	r3, 8012c9a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 8012c96:	3302      	adds	r3, #2
 8012c98:	9309      	str	r3, [sp, #36]	; 0x24
 8012c9a:	9b08      	ldr	r3, [sp, #32]
 8012c9c:	2b00      	cmp	r3, #0
 8012c9e:	f43f af2e 	beq.w	8012afe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8012ca2:	3301      	adds	r3, #1
 8012ca4:	9308      	str	r3, [sp, #32]
 8012ca6:	e72a      	b.n	8012afe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8012ca8:	2a00      	cmp	r2, #0
 8012caa:	d0e1      	beq.n	8012c70 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8012cac:	7813      	ldrb	r3, [r2, #0]
 8012cae:	e7d6      	b.n	8012c5e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 8012cb0:	2b73      	cmp	r3, #115	; 0x73
 8012cb2:	d036      	beq.n	8012d22 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 8012cb4:	d807      	bhi.n	8012cc6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 8012cb6:	2b6f      	cmp	r3, #111	; 0x6f
 8012cb8:	d1da      	bne.n	8012c70 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8012cba:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8012cbc:	1d25      	adds	r5, r4, #4
 8012cbe:	eba8 0202 	sub.w	r2, r8, r2
 8012cc2:	2308      	movs	r3, #8
 8012cc4:	e04a      	b.n	8012d5c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 8012cc6:	2b75      	cmp	r3, #117	; 0x75
 8012cc8:	d043      	beq.n	8012d52 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 8012cca:	2b78      	cmp	r3, #120	; 0x78
 8012ccc:	d1d0      	bne.n	8012c70 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8012cce:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8012cd0:	1d25      	adds	r5, r4, #4
 8012cd2:	eba8 0202 	sub.w	r2, r8, r2
 8012cd6:	2310      	movs	r3, #16
 8012cd8:	e040      	b.n	8012d5c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 8012cda:	6823      	ldr	r3, [r4, #0]
 8012cdc:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 8012ce0:	1d25      	adds	r5, r4, #4
 8012ce2:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 8012ce6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8012ce8:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 8012cec:	2b00      	cmp	r3, #0
 8012cee:	d052      	beq.n	8012d96 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 8012cf0:	881a      	ldrh	r2, [r3, #0]
 8012cf2:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 8012cf6:	a80d      	add	r0, sp, #52	; 0x34
 8012cf8:	9005      	str	r0, [sp, #20]
 8012cfa:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 8012cfe:	9004      	str	r0, [sp, #16]
 8012d00:	980e      	ldr	r0, [sp, #56]	; 0x38
 8012d02:	9003      	str	r0, [sp, #12]
 8012d04:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 8012d08:	9002      	str	r0, [sp, #8]
 8012d0a:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8012d0c:	9001      	str	r0, [sp, #4]
 8012d0e:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 8012d12:	9000      	str	r0, [sp, #0]
 8012d14:	e9cd 8706 	strd	r8, r7, [sp, #24]
 8012d18:	a810      	add	r0, sp, #64	; 0x40
 8012d1a:	f7ff fd49 	bl	80127b0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 8012d1e:	462c      	mov	r4, r5
 8012d20:	e7b7      	b.n	8012c92 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8012d22:	6823      	ldr	r3, [r4, #0]
 8012d24:	1d25      	adds	r5, r4, #4
 8012d26:	9310      	str	r3, [sp, #64]	; 0x40
 8012d28:	e7dd      	b.n	8012ce6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8012d2a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8012d2c:	6820      	ldr	r0, [r4, #0]
 8012d2e:	eba8 0202 	sub.w	r2, r8, r2
 8012d32:	230a      	movs	r3, #10
 8012d34:	b292      	uxth	r2, r2
 8012d36:	4649      	mov	r1, r9
 8012d38:	f7ff fd08 	bl	801274c <_ZN8touchgfx7Unicode4itoaElPtti>
 8012d3c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8012d40:	2b2d      	cmp	r3, #45	; 0x2d
 8012d42:	f104 0504 	add.w	r5, r4, #4
 8012d46:	d1ce      	bne.n	8012ce6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8012d48:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8012d4c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8012d4e:	3302      	adds	r3, #2
 8012d50:	e7e9      	b.n	8012d26 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 8012d52:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8012d54:	1d25      	adds	r5, r4, #4
 8012d56:	eba8 0202 	sub.w	r2, r8, r2
 8012d5a:	230a      	movs	r3, #10
 8012d5c:	b292      	uxth	r2, r2
 8012d5e:	4649      	mov	r1, r9
 8012d60:	6820      	ldr	r0, [r4, #0]
 8012d62:	f7ff fcd5 	bl	8012710 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>
 8012d66:	e7be      	b.n	8012ce6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8012d68:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8012d6a:	6820      	ldr	r0, [r4, #0]
 8012d6c:	eba8 0202 	sub.w	r2, r8, r2
 8012d70:	b292      	uxth	r2, r2
 8012d72:	2310      	movs	r3, #16
 8012d74:	4649      	mov	r1, r9
 8012d76:	f7ff fccb 	bl	8012710 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>
 8012d7a:	1d25      	adds	r5, r4, #4
 8012d7c:	f10d 0242 	add.w	r2, sp, #66	; 0x42
 8012d80:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 8012d84:	2b00      	cmp	r3, #0
 8012d86:	d0ae      	beq.n	8012ce6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8012d88:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 8012d8c:	2919      	cmp	r1, #25
 8012d8e:	d8f7      	bhi.n	8012d80 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8012d90:	3b20      	subs	r3, #32
 8012d92:	8013      	strh	r3, [r2, #0]
 8012d94:	e7f4      	b.n	8012d80 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8012d96:	9a08      	ldr	r2, [sp, #32]
 8012d98:	2a00      	cmp	r2, #0
 8012d9a:	d0aa      	beq.n	8012cf2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8012d9c:	7812      	ldrb	r2, [r2, #0]
 8012d9e:	e7a8      	b.n	8012cf2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8012da0:	2d00      	cmp	r5, #0
 8012da2:	f43f af47 	beq.w	8012c34 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 8012da6:	782d      	ldrb	r5, [r5, #0]
 8012da8:	e744      	b.n	8012c34 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

08012daa <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 8012daa:	b507      	push	{r0, r1, r2, lr}
 8012dac:	9300      	str	r3, [sp, #0]
 8012dae:	4613      	mov	r3, r2
 8012db0:	2200      	movs	r2, #0
 8012db2:	f7ff fe90 	bl	8012ad6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 8012db6:	b003      	add	sp, #12
 8012db8:	f85d fb04 	ldr.w	pc, [sp], #4

08012dbc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 8012dbc:	b40c      	push	{r2, r3}
 8012dbe:	b507      	push	{r0, r1, r2, lr}
 8012dc0:	ab04      	add	r3, sp, #16
 8012dc2:	f853 2b04 	ldr.w	r2, [r3], #4
 8012dc6:	9301      	str	r3, [sp, #4]
 8012dc8:	f7ff ffef 	bl	8012daa <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 8012dcc:	b003      	add	sp, #12
 8012dce:	f85d eb04 	ldr.w	lr, [sp], #4
 8012dd2:	b002      	add	sp, #8
 8012dd4:	4770      	bx	lr
	...

08012dd8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>:
 8012dd8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012ddc:	b0c3      	sub	sp, #268	; 0x10c
 8012dde:	2600      	movs	r6, #0
 8012de0:	f10d 0840 	add.w	r8, sp, #64	; 0x40
 8012de4:	4607      	mov	r7, r0
 8012de6:	4689      	mov	r9, r1
 8012de8:	e9cd 3208 	strd	r3, r2, [sp, #32]
 8012dec:	4631      	mov	r1, r6
 8012dee:	22c8      	movs	r2, #200	; 0xc8
 8012df0:	4640      	mov	r0, r8
 8012df2:	f8dd a130 	ldr.w	sl, [sp, #304]	; 0x130
 8012df6:	960c      	str	r6, [sp, #48]	; 0x30
 8012df8:	f00c fd12 	bl	801f820 <memset>
 8012dfc:	b17f      	cbz	r7, 8012e1e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x46>
 8012dfe:	eddf 5aa4 	vldr	s11, [pc, #656]	; 8013090 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2b8>
 8012e02:	f8df b298 	ldr.w	fp, [pc, #664]	; 801309c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2c4>
 8012e06:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8012e08:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8012e0a:	b162      	cbz	r2, 8012e26 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x4e>
 8012e0c:	8812      	ldrh	r2, [r2, #0]
 8012e0e:	b11a      	cbz	r2, 8012e18 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x40>
 8012e10:	f109 31ff 	add.w	r1, r9, #4294967295
 8012e14:	4299      	cmp	r1, r3
 8012e16:	dc26      	bgt.n	8012e66 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x8e>
 8012e18:	2200      	movs	r2, #0
 8012e1a:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8012e1e:	4638      	mov	r0, r7
 8012e20:	b043      	add	sp, #268	; 0x10c
 8012e22:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012e26:	9a08      	ldr	r2, [sp, #32]
 8012e28:	2a00      	cmp	r2, #0
 8012e2a:	d0f5      	beq.n	8012e18 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x40>
 8012e2c:	7812      	ldrb	r2, [r2, #0]
 8012e2e:	e7ee      	b.n	8012e0e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36>
 8012e30:	2c00      	cmp	r4, #0
 8012e32:	d0e8      	beq.n	8012e06 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 8012e34:	7822      	ldrb	r2, [r4, #0]
 8012e36:	b132      	cbz	r2, 8012e46 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x6e>
 8012e38:	2a25      	cmp	r2, #37	; 0x25
 8012e3a:	d001      	beq.n	8012e40 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x68>
 8012e3c:	4299      	cmp	r1, r3
 8012e3e:	dc05      	bgt.n	8012e4c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x74>
 8012e40:	b9cd      	cbnz	r5, 8012e76 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x9e>
 8012e42:	2c00      	cmp	r4, #0
 8012e44:	d0df      	beq.n	8012e06 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 8012e46:	7822      	ldrb	r2, [r4, #0]
 8012e48:	2500      	movs	r5, #0
 8012e4a:	e015      	b.n	8012e78 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xa0>
 8012e4c:	2d00      	cmp	r5, #0
 8012e4e:	d073      	beq.n	8012f38 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x160>
 8012e50:	882a      	ldrh	r2, [r5, #0]
 8012e52:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8012e56:	b10d      	cbz	r5, 8012e5c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x84>
 8012e58:	3502      	adds	r5, #2
 8012e5a:	9509      	str	r5, [sp, #36]	; 0x24
 8012e5c:	b10c      	cbz	r4, 8012e62 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x8a>
 8012e5e:	3401      	adds	r4, #1
 8012e60:	9408      	str	r4, [sp, #32]
 8012e62:	3301      	adds	r3, #1
 8012e64:	930c      	str	r3, [sp, #48]	; 0x30
 8012e66:	e9dd 4508 	ldrd	r4, r5, [sp, #32]
 8012e6a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8012e6c:	2d00      	cmp	r5, #0
 8012e6e:	d0df      	beq.n	8012e30 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x58>
 8012e70:	882a      	ldrh	r2, [r5, #0]
 8012e72:	2a00      	cmp	r2, #0
 8012e74:	d1e0      	bne.n	8012e38 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x60>
 8012e76:	882a      	ldrh	r2, [r5, #0]
 8012e78:	2a00      	cmp	r2, #0
 8012e7a:	d0c4      	beq.n	8012e06 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 8012e7c:	4299      	cmp	r1, r3
 8012e7e:	ddc2      	ble.n	8012e06 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 8012e80:	2300      	movs	r3, #0
 8012e82:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8012e86:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8012e8a:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8012e8e:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 8012e92:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 8012e96:	930d      	str	r3, [sp, #52]	; 0x34
 8012e98:	f88d 302d 	strb.w	r3, [sp, #45]	; 0x2d
 8012e9c:	930e      	str	r3, [sp, #56]	; 0x38
 8012e9e:	b10d      	cbz	r5, 8012ea4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xcc>
 8012ea0:	1cab      	adds	r3, r5, #2
 8012ea2:	9309      	str	r3, [sp, #36]	; 0x24
 8012ea4:	b10c      	cbz	r4, 8012eaa <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xd2>
 8012ea6:	1c63      	adds	r3, r4, #1
 8012ea8:	9308      	str	r3, [sp, #32]
 8012eaa:	ab0e      	add	r3, sp, #56	; 0x38
 8012eac:	9305      	str	r3, [sp, #20]
 8012eae:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 8012eb2:	9304      	str	r3, [sp, #16]
 8012eb4:	ab0d      	add	r3, sp, #52	; 0x34
 8012eb6:	9303      	str	r3, [sp, #12]
 8012eb8:	ab0b      	add	r3, sp, #44	; 0x2c
 8012eba:	9302      	str	r3, [sp, #8]
 8012ebc:	f10d 032b 	add.w	r3, sp, #43	; 0x2b
 8012ec0:	9301      	str	r3, [sp, #4]
 8012ec2:	f10d 032a 	add.w	r3, sp, #42	; 0x2a
 8012ec6:	9300      	str	r3, [sp, #0]
 8012ec8:	f10d 022e 	add.w	r2, sp, #46	; 0x2e
 8012ecc:	f10d 0329 	add.w	r3, sp, #41	; 0x29
 8012ed0:	a908      	add	r1, sp, #32
 8012ed2:	a809      	add	r0, sp, #36	; 0x24
 8012ed4:	f7ff fd2f 	bl	8012936 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 8012ed8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8012eda:	2b00      	cmp	r3, #0
 8012edc:	da0b      	bge.n	8012ef6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x11e>
 8012ede:	eb0a 0386 	add.w	r3, sl, r6, lsl #2
 8012ee2:	edd3 7a00 	vldr	s15, [r3]
 8012ee6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8012eea:	3601      	adds	r6, #1
 8012eec:	ee17 3a90 	vmov	r3, s15
 8012ef0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8012ef4:	930d      	str	r3, [sp, #52]	; 0x34
 8012ef6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8012ef8:	2b00      	cmp	r3, #0
 8012efa:	da0b      	bge.n	8012f14 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x13c>
 8012efc:	eb0a 0386 	add.w	r3, sl, r6, lsl #2
 8012f00:	edd3 7a00 	vldr	s15, [r3]
 8012f04:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8012f08:	3601      	adds	r6, #1
 8012f0a:	ee17 3a90 	vmov	r3, s15
 8012f0e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8012f12:	930e      	str	r3, [sp, #56]	; 0x38
 8012f14:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8012f16:	b1a3      	cbz	r3, 8012f42 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x16a>
 8012f18:	881a      	ldrh	r2, [r3, #0]
 8012f1a:	2a25      	cmp	r2, #37	; 0x25
 8012f1c:	d016      	beq.n	8012f4c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x174>
 8012f1e:	2a66      	cmp	r2, #102	; 0x66
 8012f20:	d01a      	beq.n	8012f58 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x180>
 8012f22:	e9cd 4508 	strd	r4, r5, [sp, #32]
 8012f26:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8012f28:	2d00      	cmp	r5, #0
 8012f2a:	f000 80fe 	beq.w	801312a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x352>
 8012f2e:	882c      	ldrh	r4, [r5, #0]
 8012f30:	f827 4013 	strh.w	r4, [r7, r3, lsl #1]
 8012f34:	3301      	adds	r3, #1
 8012f36:	e00d      	b.n	8012f54 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x17c>
 8012f38:	b10c      	cbz	r4, 8012f3e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x166>
 8012f3a:	7822      	ldrb	r2, [r4, #0]
 8012f3c:	e789      	b.n	8012e52 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7a>
 8012f3e:	4622      	mov	r2, r4
 8012f40:	e787      	b.n	8012e52 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7a>
 8012f42:	9b08      	ldr	r3, [sp, #32]
 8012f44:	2b00      	cmp	r3, #0
 8012f46:	d0ec      	beq.n	8012f22 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x14a>
 8012f48:	781a      	ldrb	r2, [r3, #0]
 8012f4a:	e7e6      	b.n	8012f1a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x142>
 8012f4c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8012f4e:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8012f52:	3302      	adds	r3, #2
 8012f54:	930c      	str	r3, [sp, #48]	; 0x30
 8012f56:	e042      	b.n	8012fde <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x206>
 8012f58:	eb0a 0386 	add.w	r3, sl, r6, lsl #2
 8012f5c:	edd3 7a00 	vldr	s15, [r3]
 8012f60:	f89d 302d 	ldrb.w	r3, [sp, #45]	; 0x2d
 8012f64:	f8cd 803c 	str.w	r8, [sp, #60]	; 0x3c
 8012f68:	3601      	adds	r6, #1
 8012f6a:	b923      	cbnz	r3, 8012f76 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x19e>
 8012f6c:	2301      	movs	r3, #1
 8012f6e:	f88d 302d 	strb.w	r3, [sp, #45]	; 0x2d
 8012f72:	2306      	movs	r3, #6
 8012f74:	930e      	str	r3, [sp, #56]	; 0x38
 8012f76:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8012f7a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012f7e:	bf48      	it	mi
 8012f80:	eef1 7a67 	vnegmi.f32	s15, s15
 8012f84:	eeb0 7ae7 	vabs.f32	s14, s15
 8012f88:	bf48      	it	mi
 8012f8a:	232d      	movmi	r3, #45	; 0x2d
 8012f8c:	eeb4 7a65 	vcmp.f32	s14, s11
 8012f90:	bf48      	it	mi
 8012f92:	f8ad 302e 	strhmi.w	r3, [sp, #46]	; 0x2e
 8012f96:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012f9a:	dd2b      	ble.n	8012ff4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x21c>
 8012f9c:	f8cd b040 	str.w	fp, [sp, #64]	; 0x40
 8012fa0:	2366      	movs	r3, #102	; 0x66
 8012fa2:	9311      	str	r3, [sp, #68]	; 0x44
 8012fa4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8012fa6:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8012faa:	2b00      	cmp	r3, #0
 8012fac:	f000 80b7 	beq.w	801311e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x346>
 8012fb0:	881a      	ldrh	r2, [r3, #0]
 8012fb2:	f89d 302d 	ldrb.w	r3, [sp, #45]	; 0x2d
 8012fb6:	a80c      	add	r0, sp, #48	; 0x30
 8012fb8:	9005      	str	r0, [sp, #20]
 8012fba:	f89d 0029 	ldrb.w	r0, [sp, #41]	; 0x29
 8012fbe:	9004      	str	r0, [sp, #16]
 8012fc0:	980d      	ldr	r0, [sp, #52]	; 0x34
 8012fc2:	9003      	str	r0, [sp, #12]
 8012fc4:	f89d 002c 	ldrb.w	r0, [sp, #44]	; 0x2c
 8012fc8:	9002      	str	r0, [sp, #8]
 8012fca:	980e      	ldr	r0, [sp, #56]	; 0x38
 8012fcc:	9001      	str	r0, [sp, #4]
 8012fce:	f89d 002b 	ldrb.w	r0, [sp, #43]	; 0x2b
 8012fd2:	9000      	str	r0, [sp, #0]
 8012fd4:	e9cd 9706 	strd	r9, r7, [sp, #24]
 8012fd8:	a80f      	add	r0, sp, #60	; 0x3c
 8012fda:	f7ff fbe9 	bl	80127b0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 8012fde:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8012fe0:	b10b      	cbz	r3, 8012fe6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x20e>
 8012fe2:	3302      	adds	r3, #2
 8012fe4:	9309      	str	r3, [sp, #36]	; 0x24
 8012fe6:	9b08      	ldr	r3, [sp, #32]
 8012fe8:	2b00      	cmp	r3, #0
 8012fea:	f43f af0c 	beq.w	8012e06 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 8012fee:	3301      	adds	r3, #1
 8012ff0:	9308      	str	r3, [sp, #32]
 8012ff2:	e708      	b.n	8012e06 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 8012ff4:	eef4 7a67 	vcmp.f32	s15, s15
 8012ff8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012ffc:	d60b      	bvs.n	8013016 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x23e>
 8012ffe:	980e      	ldr	r0, [sp, #56]	; 0x38
 8013000:	ed9f 7a24 	vldr	s14, [pc, #144]	; 8013094 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2bc>
 8013004:	2300      	movs	r3, #0
 8013006:	eeb2 6a04 	vmov.f32	s12, #36	; 0x41200000  10.0
 801300a:	4283      	cmp	r3, r0
 801300c:	da07      	bge.n	801301e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x246>
 801300e:	ee87 7a06 	vdiv.f32	s14, s14, s12
 8013012:	3301      	adds	r3, #1
 8013014:	e7f9      	b.n	801300a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x232>
 8013016:	4b20      	ldr	r3, [pc, #128]	; (8013098 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2c0>)
 8013018:	9310      	str	r3, [sp, #64]	; 0x40
 801301a:	236e      	movs	r3, #110	; 0x6e
 801301c:	e7c1      	b.n	8012fa2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1ca>
 801301e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8013022:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8013026:	eeb0 7a67 	vmov.f32	s14, s15
 801302a:	eeb4 7ac6 	vcmpe.f32	s14, s12
 801302e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013032:	da27      	bge.n	8013084 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2ac>
 8013034:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8013036:	2100      	movs	r1, #0
 8013038:	eeb6 5a00 	vmov.f32	s10, #96	; 0x3f000000  0.5
 801303c:	eba9 0202 	sub.w	r2, r9, r2
 8013040:	eef4 6ac5 	vcmpe.f32	s13, s10
 8013044:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013048:	b28c      	uxth	r4, r1
 801304a:	db2a      	blt.n	80130a2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2ca>
 801304c:	1a53      	subs	r3, r2, r1
 801304e:	2b00      	cmp	r3, #0
 8013050:	dd27      	ble.n	80130a2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2ca>
 8013052:	2963      	cmp	r1, #99	; 0x63
 8013054:	d024      	beq.n	80130a0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2c8>
 8013056:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 801305a:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 801305e:	ee17 3a10 	vmov	r3, s14
 8013062:	2b09      	cmp	r3, #9
 8013064:	bfa8      	it	ge
 8013066:	2309      	movge	r3, #9
 8013068:	ee07 3a10 	vmov	s14, r3
 801306c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013070:	f103 0430 	add.w	r4, r3, #48	; 0x30
 8013074:	f828 4011 	strh.w	r4, [r8, r1, lsl #1]
 8013078:	eee7 7a66 	vfms.f32	s15, s14, s13
 801307c:	3101      	adds	r1, #1
 801307e:	eec6 6a86 	vdiv.f32	s13, s13, s12
 8013082:	e7dd      	b.n	8013040 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x268>
 8013084:	ee66 6a86 	vmul.f32	s13, s13, s12
 8013088:	ee87 7a06 	vdiv.f32	s14, s14, s12
 801308c:	e7cd      	b.n	801302a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x252>
 801308e:	bf00      	nop
 8013090:	7f7fffff 	.word	0x7f7fffff
 8013094:	3f000002 	.word	0x3f000002
 8013098:	0061006e 	.word	0x0061006e
 801309c:	006e0069 	.word	0x006e0069
 80130a0:	460c      	mov	r4, r1
 80130a2:	2a63      	cmp	r2, #99	; 0x63
 80130a4:	bfd4      	ite	le
 80130a6:	ebc4 0202 	rsble	r2, r4, r2
 80130aa:	f1c4 0263 	rsbgt	r2, r4, #99	; 0x63
 80130ae:	2a00      	cmp	r2, #0
 80130b0:	dd30      	ble.n	8013114 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x33c>
 80130b2:	4603      	mov	r3, r0
 80130b4:	2501      	movs	r5, #1
 80130b6:	210a      	movs	r1, #10
 80130b8:	2b00      	cmp	r3, #0
 80130ba:	dd0d      	ble.n	80130d8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x300>
 80130bc:	ee67 7a86 	vmul.f32	s15, s15, s12
 80130c0:	3b01      	subs	r3, #1
 80130c2:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80130c6:	ee17 ca10 	vmov	ip, s14
 80130ca:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80130ce:	fb01 c505 	mla	r5, r1, r5, ip
 80130d2:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80130d6:	e7ef      	b.n	80130b8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e0>
 80130d8:	2800      	cmp	r0, #0
 80130da:	f100 33ff 	add.w	r3, r0, #4294967295
 80130de:	bfac      	ite	ge
 80130e0:	1a18      	subge	r0, r3, r0
 80130e2:	4618      	movlt	r0, r3
 80130e4:	0064      	lsls	r4, r4, #1
 80130e6:	900e      	str	r0, [sp, #56]	; 0x38
 80130e8:	230a      	movs	r3, #10
 80130ea:	b292      	uxth	r2, r2
 80130ec:	eb08 0104 	add.w	r1, r8, r4
 80130f0:	4628      	mov	r0, r5
 80130f2:	f7ff fb2b 	bl	801274c <_ZN8touchgfx7Unicode4itoaElPtti>
 80130f6:	2d01      	cmp	r5, #1
 80130f8:	dc0a      	bgt.n	8013110 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x338>
 80130fa:	f89d 302a 	ldrb.w	r3, [sp, #42]	; 0x2a
 80130fe:	2b00      	cmp	r3, #0
 8013100:	bf0c      	ite	eq
 8013102:	2300      	moveq	r3, #0
 8013104:	232e      	movne	r3, #46	; 0x2e
 8013106:	aa42      	add	r2, sp, #264	; 0x108
 8013108:	4414      	add	r4, r2
 801310a:	f824 3cc8 	strh.w	r3, [r4, #-200]
 801310e:	e749      	b.n	8012fa4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1cc>
 8013110:	232e      	movs	r3, #46	; 0x2e
 8013112:	e7f8      	b.n	8013106 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x32e>
 8013114:	ab42      	add	r3, sp, #264	; 0x108
 8013116:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 801311a:	2300      	movs	r3, #0
 801311c:	e7f5      	b.n	801310a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x332>
 801311e:	9a08      	ldr	r2, [sp, #32]
 8013120:	2a00      	cmp	r2, #0
 8013122:	f43f af46 	beq.w	8012fb2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1da>
 8013126:	7812      	ldrb	r2, [r2, #0]
 8013128:	e743      	b.n	8012fb2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1da>
 801312a:	2c00      	cmp	r4, #0
 801312c:	f43f af00 	beq.w	8012f30 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x158>
 8013130:	7824      	ldrb	r4, [r4, #0]
 8013132:	e6fd      	b.n	8012f30 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x158>

08013134 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>:
 8013134:	b507      	push	{r0, r1, r2, lr}
 8013136:	9300      	str	r3, [sp, #0]
 8013138:	4613      	mov	r3, r2
 801313a:	2200      	movs	r2, #0
 801313c:	f7ff fe4c 	bl	8012dd8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>
 8013140:	b003      	add	sp, #12
 8013142:	f85d fb04 	ldr.w	pc, [sp], #4
	...

08013148 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 8013148:	4b01      	ldr	r3, [pc, #4]	; (8013150 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 801314a:	6018      	str	r0, [r3, #0]
 801314c:	4770      	bx	lr
 801314e:	bf00      	nop
 8013150:	200174c0 	.word	0x200174c0

08013154 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 8013154:	4b06      	ldr	r3, [pc, #24]	; (8013170 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 8013156:	881a      	ldrh	r2, [r3, #0]
 8013158:	4282      	cmp	r2, r0
 801315a:	d807      	bhi.n	801316c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 801315c:	4b05      	ldr	r3, [pc, #20]	; (8013174 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 801315e:	881b      	ldrh	r3, [r3, #0]
 8013160:	4413      	add	r3, r2
 8013162:	4298      	cmp	r0, r3
 8013164:	bfac      	ite	ge
 8013166:	2000      	movge	r0, #0
 8013168:	2001      	movlt	r0, #1
 801316a:	4770      	bx	lr
 801316c:	2000      	movs	r0, #0
 801316e:	4770      	bx	lr
 8013170:	200174e0 	.word	0x200174e0
 8013174:	200174e4 	.word	0x200174e4

08013178 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 8013178:	b508      	push	{r3, lr}
 801317a:	4601      	mov	r1, r0
 801317c:	f7ff ffea 	bl	8013154 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 8013180:	b118      	cbz	r0, 801318a <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 8013182:	4b02      	ldr	r3, [pc, #8]	; (801318c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 8013184:	681b      	ldr	r3, [r3, #0]
 8013186:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 801318a:	bd08      	pop	{r3, pc}
 801318c:	200174c4 	.word	0x200174c4

08013190 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 8013190:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013192:	4c24      	ldr	r4, [pc, #144]	; (8013224 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 8013194:	6823      	ldr	r3, [r4, #0]
 8013196:	2b00      	cmp	r3, #0
 8013198:	d042      	beq.n	8013220 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 801319a:	4a23      	ldr	r2, [pc, #140]	; (8013228 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 801319c:	4d23      	ldr	r5, [pc, #140]	; (801322c <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 801319e:	8811      	ldrh	r1, [r2, #0]
 80131a0:	f8b5 c000 	ldrh.w	ip, [r5]
 80131a4:	4822      	ldr	r0, [pc, #136]	; (8013230 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 80131a6:	4461      	add	r1, ip
 80131a8:	1c4a      	adds	r2, r1, #1
 80131aa:	f022 0201 	bic.w	r2, r2, #1
 80131ae:	008f      	lsls	r7, r1, #2
 80131b0:	0412      	lsls	r2, r2, #16
 80131b2:	19de      	adds	r6, r3, r7
 80131b4:	0c12      	lsrs	r2, r2, #16
 80131b6:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 80131ba:	6006      	str	r6, [r0, #0]
 80131bc:	4e1d      	ldr	r6, [pc, #116]	; (8013234 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 80131be:	19da      	adds	r2, r3, r7
 80131c0:	6032      	str	r2, [r6, #0]
 80131c2:	220e      	movs	r2, #14
 80131c4:	fb02 f20c 	mul.w	r2, r2, ip
 80131c8:	3203      	adds	r2, #3
 80131ca:	f022 0203 	bic.w	r2, r2, #3
 80131ce:	443a      	add	r2, r7
 80131d0:	4f19      	ldr	r7, [pc, #100]	; (8013238 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 80131d2:	4413      	add	r3, r2
 80131d4:	603b      	str	r3, [r7, #0]
 80131d6:	4f19      	ldr	r7, [pc, #100]	; (801323c <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 80131d8:	2300      	movs	r3, #0
 80131da:	803b      	strh	r3, [r7, #0]
 80131dc:	4f18      	ldr	r7, [pc, #96]	; (8013240 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 80131de:	683f      	ldr	r7, [r7, #0]
 80131e0:	1aba      	subs	r2, r7, r2
 80131e2:	4f18      	ldr	r7, [pc, #96]	; (8013244 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 80131e4:	603a      	str	r2, [r7, #0]
 80131e6:	4a18      	ldr	r2, [pc, #96]	; (8013248 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 80131e8:	469c      	mov	ip, r3
 80131ea:	8013      	strh	r3, [r2, #0]
 80131ec:	f64f 77ff 	movw	r7, #65535	; 0xffff
 80131f0:	428b      	cmp	r3, r1
 80131f2:	d10d      	bne.n	8013210 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 80131f4:	882d      	ldrh	r5, [r5, #0]
 80131f6:	6830      	ldr	r0, [r6, #0]
 80131f8:	2300      	movs	r3, #0
 80131fa:	240e      	movs	r4, #14
 80131fc:	429d      	cmp	r5, r3
 80131fe:	d90f      	bls.n	8013220 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8013200:	fb04 0203 	mla	r2, r4, r3, r0
 8013204:	3301      	adds	r3, #1
 8013206:	7b11      	ldrb	r1, [r2, #12]
 8013208:	f36f 1145 	bfc	r1, #5, #1
 801320c:	7311      	strb	r1, [r2, #12]
 801320e:	e7f5      	b.n	80131fc <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 8013210:	6822      	ldr	r2, [r4, #0]
 8013212:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 8013216:	6802      	ldr	r2, [r0, #0]
 8013218:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 801321c:	3301      	adds	r3, #1
 801321e:	e7e7      	b.n	80131f0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 8013220:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013222:	bf00      	nop
 8013224:	200174c4 	.word	0x200174c4
 8013228:	200174e0 	.word	0x200174e0
 801322c:	200174e4 	.word	0x200174e4
 8013230:	200174d8 	.word	0x200174d8
 8013234:	200174c8 	.word	0x200174c8
 8013238:	200174d0 	.word	0x200174d0
 801323c:	200174e2 	.word	0x200174e2
 8013240:	200174cc 	.word	0x200174cc
 8013244:	200174dc 	.word	0x200174dc
 8013248:	200174d4 	.word	0x200174d4

0801324c <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 801324c:	4b06      	ldr	r3, [pc, #24]	; (8013268 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 801324e:	681b      	ldr	r3, [r3, #0]
 8013250:	b943      	cbnz	r3, 8013264 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8013252:	b139      	cbz	r1, 8013264 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8013254:	4b05      	ldr	r3, [pc, #20]	; (801326c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 8013256:	801a      	strh	r2, [r3, #0]
 8013258:	4b05      	ldr	r3, [pc, #20]	; (8013270 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 801325a:	6019      	str	r1, [r3, #0]
 801325c:	4b05      	ldr	r3, [pc, #20]	; (8013274 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 801325e:	6018      	str	r0, [r3, #0]
 8013260:	f7ff bf96 	b.w	8013190 <_ZN8touchgfx6Bitmap10clearCacheEv>
 8013264:	4770      	bx	lr
 8013266:	bf00      	nop
 8013268:	200174d0 	.word	0x200174d0
 801326c:	200174e4 	.word	0x200174e4
 8013270:	200174cc 	.word	0x200174cc
 8013274:	200174c4 	.word	0x200174c4

08013278 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 8013278:	b470      	push	{r4, r5, r6}
 801327a:	4c07      	ldr	r4, [pc, #28]	; (8013298 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 801327c:	6826      	ldr	r6, [r4, #0]
 801327e:	4605      	mov	r5, r0
 8013280:	4610      	mov	r0, r2
 8013282:	9a03      	ldr	r2, [sp, #12]
 8013284:	b936      	cbnz	r6, 8013294 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 8013286:	6025      	str	r5, [r4, #0]
 8013288:	4c04      	ldr	r4, [pc, #16]	; (801329c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 801328a:	8021      	strh	r1, [r4, #0]
 801328c:	bc70      	pop	{r4, r5, r6}
 801328e:	4619      	mov	r1, r3
 8013290:	f7ff bfdc 	b.w	801324c <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 8013294:	bc70      	pop	{r4, r5, r6}
 8013296:	4770      	bx	lr
 8013298:	200174e8 	.word	0x200174e8
 801329c:	200174e0 	.word	0x200174e0

080132a0 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 80132a0:	4a12      	ldr	r2, [pc, #72]	; (80132ec <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 80132a2:	8803      	ldrh	r3, [r0, #0]
 80132a4:	8812      	ldrh	r2, [r2, #0]
 80132a6:	4293      	cmp	r3, r2
 80132a8:	d207      	bcs.n	80132ba <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 80132aa:	4a11      	ldr	r2, [pc, #68]	; (80132f0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 80132ac:	6812      	ldr	r2, [r2, #0]
 80132ae:	2114      	movs	r1, #20
 80132b0:	fb01 2303 	mla	r3, r1, r3, r2
 80132b4:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 80132b8:	4770      	bx	lr
 80132ba:	490e      	ldr	r1, [pc, #56]	; (80132f4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 80132bc:	8809      	ldrh	r1, [r1, #0]
 80132be:	4411      	add	r1, r2
 80132c0:	428b      	cmp	r3, r1
 80132c2:	da04      	bge.n	80132ce <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 80132c4:	1a9b      	subs	r3, r3, r2
 80132c6:	4a0c      	ldr	r2, [pc, #48]	; (80132f8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 80132c8:	210e      	movs	r1, #14
 80132ca:	6812      	ldr	r2, [r2, #0]
 80132cc:	e7f0      	b.n	80132b0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 80132ce:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80132d2:	4293      	cmp	r3, r2
 80132d4:	d108      	bne.n	80132e8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 80132d6:	4b09      	ldr	r3, [pc, #36]	; (80132fc <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 80132d8:	781b      	ldrb	r3, [r3, #0]
 80132da:	b91b      	cbnz	r3, 80132e4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 80132dc:	4b08      	ldr	r3, [pc, #32]	; (8013300 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 80132de:	f9b3 0000 	ldrsh.w	r0, [r3]
 80132e2:	4770      	bx	lr
 80132e4:	4b07      	ldr	r3, [pc, #28]	; (8013304 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 80132e6:	e7fa      	b.n	80132de <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 80132e8:	2000      	movs	r0, #0
 80132ea:	4770      	bx	lr
 80132ec:	200174e0 	.word	0x200174e0
 80132f0:	200174e8 	.word	0x200174e8
 80132f4:	200174e4 	.word	0x200174e4
 80132f8:	200174c8 	.word	0x200174c8
 80132fc:	20017450 	.word	0x20017450
 8013300:	20017452 	.word	0x20017452
 8013304:	20017454 	.word	0x20017454

08013308 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 8013308:	4a12      	ldr	r2, [pc, #72]	; (8013354 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 801330a:	8803      	ldrh	r3, [r0, #0]
 801330c:	8812      	ldrh	r2, [r2, #0]
 801330e:	4293      	cmp	r3, r2
 8013310:	d207      	bcs.n	8013322 <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 8013312:	4a11      	ldr	r2, [pc, #68]	; (8013358 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 8013314:	6812      	ldr	r2, [r2, #0]
 8013316:	2114      	movs	r1, #20
 8013318:	fb01 2303 	mla	r3, r1, r3, r2
 801331c:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 8013320:	4770      	bx	lr
 8013322:	490e      	ldr	r1, [pc, #56]	; (801335c <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 8013324:	8809      	ldrh	r1, [r1, #0]
 8013326:	4411      	add	r1, r2
 8013328:	428b      	cmp	r3, r1
 801332a:	da04      	bge.n	8013336 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 801332c:	1a9b      	subs	r3, r3, r2
 801332e:	4a0c      	ldr	r2, [pc, #48]	; (8013360 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 8013330:	210e      	movs	r1, #14
 8013332:	6812      	ldr	r2, [r2, #0]
 8013334:	e7f0      	b.n	8013318 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 8013336:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801333a:	4293      	cmp	r3, r2
 801333c:	d108      	bne.n	8013350 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 801333e:	4b09      	ldr	r3, [pc, #36]	; (8013364 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 8013340:	781b      	ldrb	r3, [r3, #0]
 8013342:	b91b      	cbnz	r3, 801334c <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 8013344:	4b08      	ldr	r3, [pc, #32]	; (8013368 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 8013346:	f9b3 0000 	ldrsh.w	r0, [r3]
 801334a:	4770      	bx	lr
 801334c:	4b07      	ldr	r3, [pc, #28]	; (801336c <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 801334e:	e7fa      	b.n	8013346 <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 8013350:	2000      	movs	r0, #0
 8013352:	4770      	bx	lr
 8013354:	200174e0 	.word	0x200174e0
 8013358:	200174e8 	.word	0x200174e8
 801335c:	200174e4 	.word	0x200174e4
 8013360:	200174c8 	.word	0x200174c8
 8013364:	20017450 	.word	0x20017450
 8013368:	20017454 	.word	0x20017454
 801336c:	20017452 	.word	0x20017452

08013370 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 8013370:	b510      	push	{r4, lr}
 8013372:	4a1f      	ldr	r2, [pc, #124]	; (80133f0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
 8013374:	880b      	ldrh	r3, [r1, #0]
 8013376:	8812      	ldrh	r2, [r2, #0]
 8013378:	4293      	cmp	r3, r2
 801337a:	d213      	bcs.n	80133a4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 801337c:	4a1d      	ldr	r2, [pc, #116]	; (80133f4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
 801337e:	6812      	ldr	r2, [r2, #0]
 8013380:	2114      	movs	r1, #20
 8013382:	fb01 2303 	mla	r3, r1, r3, r2
 8013386:	8a1a      	ldrh	r2, [r3, #16]
 8013388:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 801338c:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 8013390:	8a5b      	ldrh	r3, [r3, #18]
 8013392:	8004      	strh	r4, [r0, #0]
 8013394:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8013398:	f3c3 030c 	ubfx	r3, r3, #0, #13
 801339c:	8041      	strh	r1, [r0, #2]
 801339e:	8082      	strh	r2, [r0, #4]
 80133a0:	80c3      	strh	r3, [r0, #6]
 80133a2:	e00e      	b.n	80133c2 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 80133a4:	4914      	ldr	r1, [pc, #80]	; (80133f8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
 80133a6:	8809      	ldrh	r1, [r1, #0]
 80133a8:	4411      	add	r1, r2
 80133aa:	428b      	cmp	r3, r1
 80133ac:	da0a      	bge.n	80133c4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
 80133ae:	1a9b      	subs	r3, r3, r2
 80133b0:	4a12      	ldr	r2, [pc, #72]	; (80133fc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 80133b2:	6812      	ldr	r2, [r2, #0]
 80133b4:	210e      	movs	r1, #14
 80133b6:	fb01 2303 	mla	r3, r1, r3, r2
 80133ba:	681a      	ldr	r2, [r3, #0]
 80133bc:	6002      	str	r2, [r0, #0]
 80133be:	685a      	ldr	r2, [r3, #4]
 80133c0:	6042      	str	r2, [r0, #4]
 80133c2:	bd10      	pop	{r4, pc}
 80133c4:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80133c8:	4293      	cmp	r3, r2
 80133ca:	d10b      	bne.n	80133e4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
 80133cc:	4b0c      	ldr	r3, [pc, #48]	; (8013400 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 80133ce:	f9b3 1000 	ldrsh.w	r1, [r3]
 80133d2:	4b0c      	ldr	r3, [pc, #48]	; (8013404 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 80133d4:	8081      	strh	r1, [r0, #4]
 80133d6:	f9b3 2000 	ldrsh.w	r2, [r3]
 80133da:	80c2      	strh	r2, [r0, #6]
 80133dc:	2300      	movs	r3, #0
 80133de:	8003      	strh	r3, [r0, #0]
 80133e0:	8043      	strh	r3, [r0, #2]
 80133e2:	e7ee      	b.n	80133c2 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 80133e4:	2300      	movs	r3, #0
 80133e6:	8003      	strh	r3, [r0, #0]
 80133e8:	8043      	strh	r3, [r0, #2]
 80133ea:	8083      	strh	r3, [r0, #4]
 80133ec:	e7d8      	b.n	80133a0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 80133ee:	bf00      	nop
 80133f0:	200174e0 	.word	0x200174e0
 80133f4:	200174e8 	.word	0x200174e8
 80133f8:	200174e4 	.word	0x200174e4
 80133fc:	200174c8 	.word	0x200174c8
 8013400:	2001744c 	.word	0x2001744c
 8013404:	2001744e 	.word	0x2001744e

08013408 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 8013408:	4a17      	ldr	r2, [pc, #92]	; (8013468 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 801340a:	8803      	ldrh	r3, [r0, #0]
 801340c:	8812      	ldrh	r2, [r2, #0]
 801340e:	4293      	cmp	r3, r2
 8013410:	d213      	bcs.n	801343a <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 8013412:	4a16      	ldr	r2, [pc, #88]	; (801346c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 8013414:	6812      	ldr	r2, [r2, #0]
 8013416:	2114      	movs	r1, #20
 8013418:	fb01 2303 	mla	r3, r1, r3, r2
 801341c:	8a1a      	ldrh	r2, [r3, #16]
 801341e:	8919      	ldrh	r1, [r3, #8]
 8013420:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8013424:	428a      	cmp	r2, r1
 8013426:	db1d      	blt.n	8013464 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8013428:	8a58      	ldrh	r0, [r3, #18]
 801342a:	f3c0 000c 	ubfx	r0, r0, #0, #13
 801342e:	895b      	ldrh	r3, [r3, #10]
 8013430:	4298      	cmp	r0, r3
 8013432:	bfac      	ite	ge
 8013434:	2000      	movge	r0, #0
 8013436:	2001      	movlt	r0, #1
 8013438:	4770      	bx	lr
 801343a:	490d      	ldr	r1, [pc, #52]	; (8013470 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 801343c:	8809      	ldrh	r1, [r1, #0]
 801343e:	4411      	add	r1, r2
 8013440:	428b      	cmp	r3, r1
 8013442:	da0d      	bge.n	8013460 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 8013444:	1a9b      	subs	r3, r3, r2
 8013446:	4a0b      	ldr	r2, [pc, #44]	; (8013474 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 8013448:	6812      	ldr	r2, [r2, #0]
 801344a:	210e      	movs	r1, #14
 801344c:	fb01 2303 	mla	r3, r1, r3, r2
 8013450:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 8013454:	891a      	ldrh	r2, [r3, #8]
 8013456:	4291      	cmp	r1, r2
 8013458:	db04      	blt.n	8013464 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 801345a:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 801345e:	e7e6      	b.n	801342e <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 8013460:	2000      	movs	r0, #0
 8013462:	4770      	bx	lr
 8013464:	2001      	movs	r0, #1
 8013466:	4770      	bx	lr
 8013468:	200174e0 	.word	0x200174e0
 801346c:	200174e8 	.word	0x200174e8
 8013470:	200174e4 	.word	0x200174e4
 8013474:	200174c8 	.word	0x200174c8

08013478 <_ZNK8touchgfx6Bitmap7getDataEv>:
 8013478:	4a12      	ldr	r2, [pc, #72]	; (80134c4 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 801347a:	8803      	ldrh	r3, [r0, #0]
 801347c:	8811      	ldrh	r1, [r2, #0]
 801347e:	428b      	cmp	r3, r1
 8013480:	d20b      	bcs.n	801349a <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 8013482:	4a11      	ldr	r2, [pc, #68]	; (80134c8 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8013484:	6812      	ldr	r2, [r2, #0]
 8013486:	b112      	cbz	r2, 801348e <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 8013488:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 801348c:	b9c0      	cbnz	r0, 80134c0 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 801348e:	4a0f      	ldr	r2, [pc, #60]	; (80134cc <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 8013490:	6811      	ldr	r1, [r2, #0]
 8013492:	2214      	movs	r2, #20
 8013494:	4353      	muls	r3, r2
 8013496:	58c8      	ldr	r0, [r1, r3]
 8013498:	4770      	bx	lr
 801349a:	4a0d      	ldr	r2, [pc, #52]	; (80134d0 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 801349c:	8812      	ldrh	r2, [r2, #0]
 801349e:	440a      	add	r2, r1
 80134a0:	4293      	cmp	r3, r2
 80134a2:	da04      	bge.n	80134ae <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 80134a4:	4a08      	ldr	r2, [pc, #32]	; (80134c8 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 80134a6:	6812      	ldr	r2, [r2, #0]
 80134a8:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 80134ac:	4770      	bx	lr
 80134ae:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80134b2:	4293      	cmp	r3, r2
 80134b4:	d103      	bne.n	80134be <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 80134b6:	4b07      	ldr	r3, [pc, #28]	; (80134d4 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 80134b8:	681b      	ldr	r3, [r3, #0]
 80134ba:	6c58      	ldr	r0, [r3, #68]	; 0x44
 80134bc:	4770      	bx	lr
 80134be:	2000      	movs	r0, #0
 80134c0:	4770      	bx	lr
 80134c2:	bf00      	nop
 80134c4:	200174e0 	.word	0x200174e0
 80134c8:	200174c4 	.word	0x200174c4
 80134cc:	200174e8 	.word	0x200174e8
 80134d0:	200174e4 	.word	0x200174e4
 80134d4:	20017458 	.word	0x20017458

080134d8 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 80134d8:	4b24      	ldr	r3, [pc, #144]	; (801356c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 80134da:	8802      	ldrh	r2, [r0, #0]
 80134dc:	8818      	ldrh	r0, [r3, #0]
 80134de:	4282      	cmp	r2, r0
 80134e0:	d221      	bcs.n	8013526 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 80134e2:	4b23      	ldr	r3, [pc, #140]	; (8013570 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 80134e4:	6819      	ldr	r1, [r3, #0]
 80134e6:	2314      	movs	r3, #20
 80134e8:	fb03 1302 	mla	r3, r3, r2, r1
 80134ec:	6858      	ldr	r0, [r3, #4]
 80134ee:	2800      	cmp	r0, #0
 80134f0:	d03a      	beq.n	8013568 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 80134f2:	4920      	ldr	r1, [pc, #128]	; (8013574 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 80134f4:	6809      	ldr	r1, [r1, #0]
 80134f6:	2900      	cmp	r1, #0
 80134f8:	d036      	beq.n	8013568 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 80134fa:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 80134fe:	2900      	cmp	r1, #0
 8013500:	d032      	beq.n	8013568 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8013502:	891a      	ldrh	r2, [r3, #8]
 8013504:	8958      	ldrh	r0, [r3, #10]
 8013506:	4350      	muls	r0, r2
 8013508:	7c5a      	ldrb	r2, [r3, #17]
 801350a:	7cdb      	ldrb	r3, [r3, #19]
 801350c:	0952      	lsrs	r2, r2, #5
 801350e:	f3c3 1342 	ubfx	r3, r3, #5, #3
 8013512:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8013516:	2b0b      	cmp	r3, #11
 8013518:	bf18      	it	ne
 801351a:	0040      	lslne	r0, r0, #1
 801351c:	3003      	adds	r0, #3
 801351e:	f020 0003 	bic.w	r0, r0, #3
 8013522:	4408      	add	r0, r1
 8013524:	4770      	bx	lr
 8013526:	4b14      	ldr	r3, [pc, #80]	; (8013578 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 8013528:	881b      	ldrh	r3, [r3, #0]
 801352a:	4403      	add	r3, r0
 801352c:	429a      	cmp	r2, r3
 801352e:	da1a      	bge.n	8013566 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8013530:	4b12      	ldr	r3, [pc, #72]	; (801357c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 8013532:	681b      	ldr	r3, [r3, #0]
 8013534:	1a10      	subs	r0, r2, r0
 8013536:	210e      	movs	r1, #14
 8013538:	fb01 3000 	mla	r0, r1, r0, r3
 801353c:	7b03      	ldrb	r3, [r0, #12]
 801353e:	f003 031f 	and.w	r3, r3, #31
 8013542:	2b0b      	cmp	r3, #11
 8013544:	d10b      	bne.n	801355e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 8013546:	8903      	ldrh	r3, [r0, #8]
 8013548:	8940      	ldrh	r0, [r0, #10]
 801354a:	4358      	muls	r0, r3
 801354c:	4b09      	ldr	r3, [pc, #36]	; (8013574 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 801354e:	6819      	ldr	r1, [r3, #0]
 8013550:	3003      	adds	r0, #3
 8013552:	f020 0303 	bic.w	r3, r0, #3
 8013556:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 801355a:	4418      	add	r0, r3
 801355c:	4770      	bx	lr
 801355e:	2b0d      	cmp	r3, #13
 8013560:	d101      	bne.n	8013566 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8013562:	300d      	adds	r0, #13
 8013564:	4770      	bx	lr
 8013566:	2000      	movs	r0, #0
 8013568:	4770      	bx	lr
 801356a:	bf00      	nop
 801356c:	200174e0 	.word	0x200174e0
 8013570:	200174e8 	.word	0x200174e8
 8013574:	200174c4 	.word	0x200174c4
 8013578:	200174e4 	.word	0x200174e4
 801357c:	200174c8 	.word	0x200174c8

08013580 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 8013580:	b510      	push	{r4, lr}
 8013582:	4a17      	ldr	r2, [pc, #92]	; (80135e0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 8013584:	8803      	ldrh	r3, [r0, #0]
 8013586:	8812      	ldrh	r2, [r2, #0]
 8013588:	4293      	cmp	r3, r2
 801358a:	d20c      	bcs.n	80135a6 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 801358c:	4a15      	ldr	r2, [pc, #84]	; (80135e4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 801358e:	6812      	ldr	r2, [r2, #0]
 8013590:	2114      	movs	r1, #20
 8013592:	fb01 2303 	mla	r3, r1, r3, r2
 8013596:	7c58      	ldrb	r0, [r3, #17]
 8013598:	0942      	lsrs	r2, r0, #5
 801359a:	7cd8      	ldrb	r0, [r3, #19]
 801359c:	f3c0 1042 	ubfx	r0, r0, #5, #3
 80135a0:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 80135a4:	bd10      	pop	{r4, pc}
 80135a6:	4910      	ldr	r1, [pc, #64]	; (80135e8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 80135a8:	8809      	ldrh	r1, [r1, #0]
 80135aa:	4411      	add	r1, r2
 80135ac:	428b      	cmp	r3, r1
 80135ae:	da09      	bge.n	80135c4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 80135b0:	1a9b      	subs	r3, r3, r2
 80135b2:	4a0e      	ldr	r2, [pc, #56]	; (80135ec <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 80135b4:	6812      	ldr	r2, [r2, #0]
 80135b6:	210e      	movs	r1, #14
 80135b8:	fb01 2303 	mla	r3, r1, r3, r2
 80135bc:	7b18      	ldrb	r0, [r3, #12]
 80135be:	f000 001f 	and.w	r0, r0, #31
 80135c2:	e7ef      	b.n	80135a4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 80135c4:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80135c8:	4293      	cmp	r3, r2
 80135ca:	d106      	bne.n	80135da <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 80135cc:	f7ee fed2 	bl	8002374 <_ZN8touchgfx3HAL3lcdEv>
 80135d0:	6803      	ldr	r3, [r0, #0]
 80135d2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80135d6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80135d8:	4718      	bx	r3
 80135da:	2000      	movs	r0, #0
 80135dc:	e7e2      	b.n	80135a4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 80135de:	bf00      	nop
 80135e0:	200174e0 	.word	0x200174e0
 80135e4:	200174e8 	.word	0x200174e8
 80135e8:	200174e4 	.word	0x200174e4
 80135ec:	200174c8 	.word	0x200174c8

080135f0 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 80135f0:	2010      	movs	r0, #16
 80135f2:	4770      	bx	lr

080135f4 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 80135f4:	2000      	movs	r0, #0
 80135f6:	4770      	bx	lr

080135f8 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 80135f8:	4b02      	ldr	r3, [pc, #8]	; (8013604 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 80135fa:	8818      	ldrh	r0, [r3, #0]
 80135fc:	0040      	lsls	r0, r0, #1
 80135fe:	b280      	uxth	r0, r0
 8013600:	4770      	bx	lr
 8013602:	bf00      	nop
 8013604:	20017452 	.word	0x20017452

08013608 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 8013608:	2bff      	cmp	r3, #255	; 0xff
 801360a:	d050      	beq.n	80136ae <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 801360c:	2a0b      	cmp	r2, #11
 801360e:	d04a      	beq.n	80136a6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8013610:	d80e      	bhi.n	8013630 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 8013612:	2a03      	cmp	r2, #3
 8013614:	d03f      	beq.n	8013696 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 8013616:	d804      	bhi.n	8013622 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 8013618:	2a01      	cmp	r2, #1
 801361a:	d03e      	beq.n	801369a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 801361c:	d93f      	bls.n	801369e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 801361e:	6b80      	ldr	r0, [r0, #56]	; 0x38
 8013620:	4770      	bx	lr
 8013622:	2a09      	cmp	r2, #9
 8013624:	d03f      	beq.n	80136a6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8013626:	d83c      	bhi.n	80136a2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8013628:	2a08      	cmp	r2, #8
 801362a:	d03a      	beq.n	80136a2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 801362c:	2000      	movs	r0, #0
 801362e:	4770      	bx	lr
 8013630:	2a2f      	cmp	r2, #47	; 0x2f
 8013632:	d024      	beq.n	801367e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 8013634:	d80d      	bhi.n	8013652 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 8013636:	2a2d      	cmp	r2, #45	; 0x2d
 8013638:	d014      	beq.n	8013664 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 801363a:	d826      	bhi.n	801368a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 801363c:	2a2c      	cmp	r2, #44	; 0x2c
 801363e:	d1f5      	bne.n	801362c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013640:	684b      	ldr	r3, [r1, #4]
 8013642:	781b      	ldrb	r3, [r3, #0]
 8013644:	2b01      	cmp	r3, #1
 8013646:	d018      	beq.n	801367a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 8013648:	d323      	bcc.n	8013692 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 801364a:	2b02      	cmp	r3, #2
 801364c:	d1ee      	bne.n	801362c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801364e:	6880      	ldr	r0, [r0, #8]
 8013650:	4770      	bx	lr
 8013652:	2a31      	cmp	r2, #49	; 0x31
 8013654:	d004      	beq.n	8013660 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 8013656:	d328      	bcc.n	80136aa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8013658:	2a32      	cmp	r2, #50	; 0x32
 801365a:	d026      	beq.n	80136aa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 801365c:	2a33      	cmp	r2, #51	; 0x33
 801365e:	d1e5      	bne.n	801362c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013660:	6f00      	ldr	r0, [r0, #112]	; 0x70
 8013662:	4770      	bx	lr
 8013664:	684b      	ldr	r3, [r1, #4]
 8013666:	781b      	ldrb	r3, [r3, #0]
 8013668:	2b01      	cmp	r3, #1
 801366a:	d004      	beq.n	8013676 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 801366c:	d30b      	bcc.n	8013686 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801366e:	2b02      	cmp	r3, #2
 8013670:	d1dc      	bne.n	801362c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013672:	6900      	ldr	r0, [r0, #16]
 8013674:	4770      	bx	lr
 8013676:	6a00      	ldr	r0, [r0, #32]
 8013678:	4770      	bx	lr
 801367a:	6980      	ldr	r0, [r0, #24]
 801367c:	4770      	bx	lr
 801367e:	684b      	ldr	r3, [r1, #4]
 8013680:	781b      	ldrb	r3, [r3, #0]
 8013682:	2b00      	cmp	r3, #0
 8013684:	d1d2      	bne.n	801362c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013686:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8013688:	4770      	bx	lr
 801368a:	684b      	ldr	r3, [r1, #4]
 801368c:	781b      	ldrb	r3, [r3, #0]
 801368e:	2b00      	cmp	r3, #0
 8013690:	d1cc      	bne.n	801362c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013692:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8013694:	4770      	bx	lr
 8013696:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8013698:	4770      	bx	lr
 801369a:	6d00      	ldr	r0, [r0, #80]	; 0x50
 801369c:	4770      	bx	lr
 801369e:	6c00      	ldr	r0, [r0, #64]	; 0x40
 80136a0:	4770      	bx	lr
 80136a2:	6d80      	ldr	r0, [r0, #88]	; 0x58
 80136a4:	4770      	bx	lr
 80136a6:	6e00      	ldr	r0, [r0, #96]	; 0x60
 80136a8:	4770      	bx	lr
 80136aa:	6e80      	ldr	r0, [r0, #104]	; 0x68
 80136ac:	4770      	bx	lr
 80136ae:	2a0b      	cmp	r2, #11
 80136b0:	d049      	beq.n	8013746 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 80136b2:	d80e      	bhi.n	80136d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 80136b4:	2a03      	cmp	r2, #3
 80136b6:	d040      	beq.n	801373a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 80136b8:	d804      	bhi.n	80136c4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 80136ba:	2a01      	cmp	r2, #1
 80136bc:	d03f      	beq.n	801373e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 80136be:	d940      	bls.n	8013742 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 80136c0:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 80136c2:	4770      	bx	lr
 80136c4:	2a09      	cmp	r2, #9
 80136c6:	d03e      	beq.n	8013746 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 80136c8:	d801      	bhi.n	80136ce <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 80136ca:	2a08      	cmp	r2, #8
 80136cc:	d1ae      	bne.n	801362c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80136ce:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 80136d0:	4770      	bx	lr
 80136d2:	2a2f      	cmp	r2, #47	; 0x2f
 80136d4:	d024      	beq.n	8013720 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 80136d6:	d80d      	bhi.n	80136f4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 80136d8:	2a2d      	cmp	r2, #45	; 0x2d
 80136da:	d014      	beq.n	8013706 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 80136dc:	d826      	bhi.n	801372c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 80136de:	2a2c      	cmp	r2, #44	; 0x2c
 80136e0:	d1a4      	bne.n	801362c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80136e2:	684b      	ldr	r3, [r1, #4]
 80136e4:	781b      	ldrb	r3, [r3, #0]
 80136e6:	2b01      	cmp	r3, #1
 80136e8:	d018      	beq.n	801371c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 80136ea:	d324      	bcc.n	8013736 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 80136ec:	2b02      	cmp	r3, #2
 80136ee:	d19d      	bne.n	801362c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80136f0:	68c0      	ldr	r0, [r0, #12]
 80136f2:	4770      	bx	lr
 80136f4:	2a31      	cmp	r2, #49	; 0x31
 80136f6:	d004      	beq.n	8013702 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 80136f8:	d327      	bcc.n	801374a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 80136fa:	2a32      	cmp	r2, #50	; 0x32
 80136fc:	d025      	beq.n	801374a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 80136fe:	2a33      	cmp	r2, #51	; 0x33
 8013700:	d194      	bne.n	801362c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013702:	6f40      	ldr	r0, [r0, #116]	; 0x74
 8013704:	4770      	bx	lr
 8013706:	684b      	ldr	r3, [r1, #4]
 8013708:	781b      	ldrb	r3, [r3, #0]
 801370a:	2b01      	cmp	r3, #1
 801370c:	d004      	beq.n	8013718 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 801370e:	d30b      	bcc.n	8013728 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 8013710:	2b02      	cmp	r3, #2
 8013712:	d18b      	bne.n	801362c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013714:	6940      	ldr	r0, [r0, #20]
 8013716:	4770      	bx	lr
 8013718:	6a40      	ldr	r0, [r0, #36]	; 0x24
 801371a:	4770      	bx	lr
 801371c:	69c0      	ldr	r0, [r0, #28]
 801371e:	4770      	bx	lr
 8013720:	684b      	ldr	r3, [r1, #4]
 8013722:	781b      	ldrb	r3, [r3, #0]
 8013724:	2b00      	cmp	r3, #0
 8013726:	d181      	bne.n	801362c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013728:	6b40      	ldr	r0, [r0, #52]	; 0x34
 801372a:	4770      	bx	lr
 801372c:	684b      	ldr	r3, [r1, #4]
 801372e:	781b      	ldrb	r3, [r3, #0]
 8013730:	2b00      	cmp	r3, #0
 8013732:	f47f af7b 	bne.w	801362c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013736:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 8013738:	4770      	bx	lr
 801373a:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 801373c:	4770      	bx	lr
 801373e:	6d40      	ldr	r0, [r0, #84]	; 0x54
 8013740:	4770      	bx	lr
 8013742:	6c40      	ldr	r0, [r0, #68]	; 0x44
 8013744:	4770      	bx	lr
 8013746:	6e40      	ldr	r0, [r0, #100]	; 0x64
 8013748:	4770      	bx	lr
 801374a:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 801374c:	4770      	bx	lr

0801374e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801374e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013752:	b087      	sub	sp, #28
 8013754:	9815      	ldr	r0, [sp, #84]	; 0x54
 8013756:	9205      	str	r2, [sp, #20]
 8013758:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801375c:	9202      	str	r2, [sp, #8]
 801375e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8013762:	9101      	str	r1, [sp, #4]
 8013764:	6841      	ldr	r1, [r0, #4]
 8013766:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 801376a:	fb01 2404 	mla	r4, r1, r4, r2
 801376e:	6802      	ldr	r2, [r0, #0]
 8013770:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8013774:	f8de 2000 	ldr.w	r2, [lr]
 8013778:	9203      	str	r2, [sp, #12]
 801377a:	f8de 2004 	ldr.w	r2, [lr, #4]
 801377e:	3204      	adds	r2, #4
 8013780:	9204      	str	r2, [sp, #16]
 8013782:	9a02      	ldr	r2, [sp, #8]
 8013784:	43d6      	mvns	r6, r2
 8013786:	b2f6      	uxtb	r6, r6
 8013788:	9a01      	ldr	r2, [sp, #4]
 801378a:	2a00      	cmp	r2, #0
 801378c:	dc03      	bgt.n	8013796 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801378e:	9a05      	ldr	r2, [sp, #20]
 8013790:	2a00      	cmp	r2, #0
 8013792:	f340 8129 	ble.w	80139e8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8013796:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8013798:	f9be c008 	ldrsh.w	ip, [lr, #8]
 801379c:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 80137a0:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80137a4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80137a6:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80137aa:	2b00      	cmp	r3, #0
 80137ac:	dd0e      	ble.n	80137cc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80137ae:	1408      	asrs	r0, r1, #16
 80137b0:	d405      	bmi.n	80137be <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80137b2:	4560      	cmp	r0, ip
 80137b4:	da03      	bge.n	80137be <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80137b6:	1410      	asrs	r0, r2, #16
 80137b8:	d401      	bmi.n	80137be <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80137ba:	42b8      	cmp	r0, r7
 80137bc:	db07      	blt.n	80137ce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80137be:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80137c0:	4401      	add	r1, r0
 80137c2:	9814      	ldr	r0, [sp, #80]	; 0x50
 80137c4:	3b01      	subs	r3, #1
 80137c6:	4402      	add	r2, r0
 80137c8:	3402      	adds	r4, #2
 80137ca:	e7ee      	b.n	80137aa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 80137cc:	d071      	beq.n	80138b2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80137ce:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80137d0:	1e58      	subs	r0, r3, #1
 80137d2:	fb05 1500 	mla	r5, r5, r0, r1
 80137d6:	142d      	asrs	r5, r5, #16
 80137d8:	d45f      	bmi.n	801389a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80137da:	4565      	cmp	r5, ip
 80137dc:	da5d      	bge.n	801389a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80137de:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80137e0:	fb05 2000 	mla	r0, r5, r0, r2
 80137e4:	1400      	asrs	r0, r0, #16
 80137e6:	d458      	bmi.n	801389a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80137e8:	42b8      	cmp	r0, r7
 80137ea:	da56      	bge.n	801389a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80137ec:	f8bd b008 	ldrh.w	fp, [sp, #8]
 80137f0:	4699      	mov	r9, r3
 80137f2:	46a2      	mov	sl, r4
 80137f4:	f1b9 0f00 	cmp.w	r9, #0
 80137f8:	dd57      	ble.n	80138aa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 80137fa:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 80137fe:	9803      	ldr	r0, [sp, #12]
 8013800:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8013804:	140d      	asrs	r5, r1, #16
 8013806:	fb07 000c 	mla	r0, r7, ip, r0
 801380a:	f109 39ff 	add.w	r9, r9, #4294967295
 801380e:	5d40      	ldrb	r0, [r0, r5]
 8013810:	9d04      	ldr	r5, [sp, #16]
 8013812:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8013816:	f8ba 5000 	ldrh.w	r5, [sl]
 801381a:	122f      	asrs	r7, r5, #8
 801381c:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8013820:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8013824:	fb17 f706 	smulbb	r7, r7, r6
 8013828:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801382c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8013830:	00ed      	lsls	r5, r5, #3
 8013832:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8013836:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801383a:	10c7      	asrs	r7, r0, #3
 801383c:	b2ed      	uxtb	r5, r5
 801383e:	00c0      	lsls	r0, r0, #3
 8013840:	fb18 f806 	smulbb	r8, r8, r6
 8013844:	fb15 f506 	smulbb	r5, r5, r6
 8013848:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801384c:	b2c0      	uxtb	r0, r0
 801384e:	fa1f fc8c 	uxth.w	ip, ip
 8013852:	fb07 870b 	mla	r7, r7, fp, r8
 8013856:	fb00 500b 	mla	r0, r0, fp, r5
 801385a:	b280      	uxth	r0, r0
 801385c:	b2bf      	uxth	r7, r7
 801385e:	f10c 0501 	add.w	r5, ip, #1
 8013862:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8013866:	f107 0801 	add.w	r8, r7, #1
 801386a:	1c45      	adds	r5, r0, #1
 801386c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8013870:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8013874:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8013876:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801387a:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801387e:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8013882:	ea45 0c0c 	orr.w	ip, r5, ip
 8013886:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801388a:	4401      	add	r1, r0
 801388c:	9814      	ldr	r0, [sp, #80]	; 0x50
 801388e:	ea4c 0c08 	orr.w	ip, ip, r8
 8013892:	f82a cb02 	strh.w	ip, [sl], #2
 8013896:	4402      	add	r2, r0
 8013898:	e7ac      	b.n	80137f4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801389a:	f8bd a008 	ldrh.w	sl, [sp, #8]
 801389e:	f04f 0800 	mov.w	r8, #0
 80138a2:	eb03 0008 	add.w	r0, r3, r8
 80138a6:	2800      	cmp	r0, #0
 80138a8:	dc41      	bgt.n	801392e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 80138aa:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80138ae:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80138b2:	9b01      	ldr	r3, [sp, #4]
 80138b4:	2b00      	cmp	r3, #0
 80138b6:	f340 8097 	ble.w	80139e8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 80138ba:	ee30 0a04 	vadd.f32	s0, s0, s8
 80138be:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80138c2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80138c6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80138c8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80138cc:	ee31 1a05 	vadd.f32	s2, s2, s10
 80138d0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80138d4:	eef0 6a62 	vmov.f32	s13, s5
 80138d8:	ee61 7a27 	vmul.f32	s15, s2, s15
 80138dc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80138e0:	ee77 2a62 	vsub.f32	s5, s14, s5
 80138e4:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 80138e8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80138ec:	eef0 6a43 	vmov.f32	s13, s6
 80138f0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80138f4:	ee12 2a90 	vmov	r2, s5
 80138f8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80138fc:	fb92 f3f3 	sdiv	r3, r2, r3
 8013900:	ee13 2a10 	vmov	r2, s6
 8013904:	9313      	str	r3, [sp, #76]	; 0x4c
 8013906:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013908:	fb92 f3f3 	sdiv	r3, r2, r3
 801390c:	9314      	str	r3, [sp, #80]	; 0x50
 801390e:	9b01      	ldr	r3, [sp, #4]
 8013910:	9a05      	ldr	r2, [sp, #20]
 8013912:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8013916:	3b01      	subs	r3, #1
 8013918:	9301      	str	r3, [sp, #4]
 801391a:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 801391e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013920:	eeb0 3a67 	vmov.f32	s6, s15
 8013924:	bf08      	it	eq
 8013926:	4613      	moveq	r3, r2
 8013928:	eef0 2a47 	vmov.f32	s5, s14
 801392c:	e72c      	b.n	8013788 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801392e:	140f      	asrs	r7, r1, #16
 8013930:	d453      	bmi.n	80139da <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8013932:	f8de 5008 	ldr.w	r5, [lr, #8]
 8013936:	42bd      	cmp	r5, r7
 8013938:	dd4f      	ble.n	80139da <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801393a:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801393e:	d44c      	bmi.n	80139da <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8013940:	f8de 000c 	ldr.w	r0, [lr, #12]
 8013944:	4560      	cmp	r0, ip
 8013946:	dd48      	ble.n	80139da <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8013948:	9803      	ldr	r0, [sp, #12]
 801394a:	b22d      	sxth	r5, r5
 801394c:	fb0c 0505 	mla	r5, ip, r5, r0
 8013950:	5de8      	ldrb	r0, [r5, r7]
 8013952:	9d04      	ldr	r5, [sp, #16]
 8013954:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8013958:	f06f 0501 	mvn.w	r5, #1
 801395c:	fb05 fb08 	mul.w	fp, r5, r8
 8013960:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8013964:	f834 500b 	ldrh.w	r5, [r4, fp]
 8013968:	122f      	asrs	r7, r5, #8
 801396a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801396e:	fb17 f706 	smulbb	r7, r7, r6
 8013972:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8013976:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801397a:	00ed      	lsls	r5, r5, #3
 801397c:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8013980:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8013984:	10c7      	asrs	r7, r0, #3
 8013986:	b2ed      	uxtb	r5, r5
 8013988:	00c0      	lsls	r0, r0, #3
 801398a:	fb19 f906 	smulbb	r9, r9, r6
 801398e:	fb15 f506 	smulbb	r5, r5, r6
 8013992:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8013996:	b2c0      	uxtb	r0, r0
 8013998:	fa1f fc8c 	uxth.w	ip, ip
 801399c:	fb07 970a 	mla	r7, r7, sl, r9
 80139a0:	fb00 500a 	mla	r0, r0, sl, r5
 80139a4:	b2bf      	uxth	r7, r7
 80139a6:	b280      	uxth	r0, r0
 80139a8:	f10c 0501 	add.w	r5, ip, #1
 80139ac:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80139b0:	f107 0901 	add.w	r9, r7, #1
 80139b4:	1c45      	adds	r5, r0, #1
 80139b6:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80139ba:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 80139be:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80139c2:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80139c6:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80139ca:	ea45 0c0c 	orr.w	ip, r5, ip
 80139ce:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80139d2:	ea4c 0c09 	orr.w	ip, ip, r9
 80139d6:	f824 c00b 	strh.w	ip, [r4, fp]
 80139da:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80139dc:	4401      	add	r1, r0
 80139de:	9814      	ldr	r0, [sp, #80]	; 0x50
 80139e0:	f108 38ff 	add.w	r8, r8, #4294967295
 80139e4:	4402      	add	r2, r0
 80139e6:	e75c      	b.n	80138a2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 80139e8:	b007      	add	sp, #28
 80139ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080139ee <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80139ee:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80139f2:	b085      	sub	sp, #20
 80139f4:	4693      	mov	fp, r2
 80139f6:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 80139f8:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80139fa:	6870      	ldr	r0, [r6, #4]
 80139fc:	9100      	str	r1, [sp, #0]
 80139fe:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8013a02:	fb00 2404 	mla	r4, r0, r4, r2
 8013a06:	6832      	ldr	r2, [r6, #0]
 8013a08:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8013a0c:	682a      	ldr	r2, [r5, #0]
 8013a0e:	9201      	str	r2, [sp, #4]
 8013a10:	686a      	ldr	r2, [r5, #4]
 8013a12:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 8013a16:	3204      	adds	r2, #4
 8013a18:	9202      	str	r2, [sp, #8]
 8013a1a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8013a1e:	9a00      	ldr	r2, [sp, #0]
 8013a20:	2a00      	cmp	r2, #0
 8013a22:	dc03      	bgt.n	8013a2c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8013a24:	f1bb 0f00 	cmp.w	fp, #0
 8013a28:	f340 80a0 	ble.w	8013b6c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8013a2c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8013a2e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8013a32:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8013a36:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8013a3a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8013a3c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8013a40:	2b00      	cmp	r3, #0
 8013a42:	dd0c      	ble.n	8013a5e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8013a44:	1406      	asrs	r6, r0, #16
 8013a46:	d405      	bmi.n	8013a54 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8013a48:	454e      	cmp	r6, r9
 8013a4a:	da03      	bge.n	8013a54 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8013a4c:	1416      	asrs	r6, r2, #16
 8013a4e:	d401      	bmi.n	8013a54 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8013a50:	4546      	cmp	r6, r8
 8013a52:	db05      	blt.n	8013a60 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8013a54:	4470      	add	r0, lr
 8013a56:	4462      	add	r2, ip
 8013a58:	3b01      	subs	r3, #1
 8013a5a:	3402      	adds	r4, #2
 8013a5c:	e7f0      	b.n	8013a40 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8013a5e:	d00f      	beq.n	8013a80 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8013a60:	1e5e      	subs	r6, r3, #1
 8013a62:	fb0e 0706 	mla	r7, lr, r6, r0
 8013a66:	143f      	asrs	r7, r7, #16
 8013a68:	d541      	bpl.n	8013aee <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 8013a6a:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8013a6e:	4698      	mov	r8, r3
 8013a70:	9603      	str	r6, [sp, #12]
 8013a72:	f1b8 0f00 	cmp.w	r8, #0
 8013a76:	dc59      	bgt.n	8013b2c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8013a78:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013a7c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8013a80:	9b00      	ldr	r3, [sp, #0]
 8013a82:	2b00      	cmp	r3, #0
 8013a84:	dd72      	ble.n	8013b6c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8013a86:	ee30 0a04 	vadd.f32	s0, s0, s8
 8013a8a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8013a8e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8013a92:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013a94:	ee31 1a05 	vadd.f32	s2, s2, s10
 8013a98:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8013a9c:	eeb0 6a62 	vmov.f32	s12, s5
 8013aa0:	ee61 7a27 	vmul.f32	s15, s2, s15
 8013aa4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013aa8:	ee77 2a62 	vsub.f32	s5, s14, s5
 8013aac:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8013ab0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8013ab4:	eeb0 6a43 	vmov.f32	s12, s6
 8013ab8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8013abc:	ee12 2a90 	vmov	r2, s5
 8013ac0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8013ac4:	fb92 fef3 	sdiv	lr, r2, r3
 8013ac8:	ee13 2a10 	vmov	r2, s6
 8013acc:	fb92 fcf3 	sdiv	ip, r2, r3
 8013ad0:	9b00      	ldr	r3, [sp, #0]
 8013ad2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013ad6:	3b01      	subs	r3, #1
 8013ad8:	9300      	str	r3, [sp, #0]
 8013ada:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8013ade:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013ae0:	eeb0 3a67 	vmov.f32	s6, s15
 8013ae4:	bf08      	it	eq
 8013ae6:	465b      	moveq	r3, fp
 8013ae8:	eef0 2a47 	vmov.f32	s5, s14
 8013aec:	e797      	b.n	8013a1e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8013aee:	454f      	cmp	r7, r9
 8013af0:	dabb      	bge.n	8013a6a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8013af2:	fb0c 2606 	mla	r6, ip, r6, r2
 8013af6:	1436      	asrs	r6, r6, #16
 8013af8:	d4b7      	bmi.n	8013a6a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8013afa:	4546      	cmp	r6, r8
 8013afc:	dab5      	bge.n	8013a6a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8013afe:	461e      	mov	r6, r3
 8013b00:	46a0      	mov	r8, r4
 8013b02:	2e00      	cmp	r6, #0
 8013b04:	ddb8      	ble.n	8013a78 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8013b06:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8013b0a:	9901      	ldr	r1, [sp, #4]
 8013b0c:	1417      	asrs	r7, r2, #16
 8013b0e:	ea4f 4920 	mov.w	r9, r0, asr #16
 8013b12:	fb0a 1707 	mla	r7, sl, r7, r1
 8013b16:	9902      	ldr	r1, [sp, #8]
 8013b18:	f817 7009 	ldrb.w	r7, [r7, r9]
 8013b1c:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8013b20:	f828 7b02 	strh.w	r7, [r8], #2
 8013b24:	4470      	add	r0, lr
 8013b26:	4462      	add	r2, ip
 8013b28:	3e01      	subs	r6, #1
 8013b2a:	e7ea      	b.n	8013b02 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8013b2c:	ea5f 4920 	movs.w	r9, r0, asr #16
 8013b30:	d417      	bmi.n	8013b62 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8013b32:	68ae      	ldr	r6, [r5, #8]
 8013b34:	454e      	cmp	r6, r9
 8013b36:	dd14      	ble.n	8013b62 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8013b38:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8013b3c:	d411      	bmi.n	8013b62 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8013b3e:	68ef      	ldr	r7, [r5, #12]
 8013b40:	4557      	cmp	r7, sl
 8013b42:	dd0e      	ble.n	8013b62 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8013b44:	9f01      	ldr	r7, [sp, #4]
 8013b46:	b236      	sxth	r6, r6
 8013b48:	fb0a 7606 	mla	r6, sl, r6, r7
 8013b4c:	9f02      	ldr	r7, [sp, #8]
 8013b4e:	f816 6009 	ldrb.w	r6, [r6, r9]
 8013b52:	f06f 0101 	mvn.w	r1, #1
 8013b56:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8013b5a:	fb01 f608 	mul.w	r6, r1, r8
 8013b5e:	9903      	ldr	r1, [sp, #12]
 8013b60:	538f      	strh	r7, [r1, r6]
 8013b62:	4470      	add	r0, lr
 8013b64:	4462      	add	r2, ip
 8013b66:	f108 38ff 	add.w	r8, r8, #4294967295
 8013b6a:	e782      	b.n	8013a72 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8013b6c:	b005      	add	sp, #20
 8013b6e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08013b72 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8013b72:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013b76:	b087      	sub	sp, #28
 8013b78:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8013b7a:	9205      	str	r2, [sp, #20]
 8013b7c:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8013b80:	9203      	str	r2, [sp, #12]
 8013b82:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 8013b86:	9102      	str	r1, [sp, #8]
 8013b88:	6861      	ldr	r1, [r4, #4]
 8013b8a:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8013b8e:	fb01 2000 	mla	r0, r1, r0, r2
 8013b92:	6822      	ldr	r2, [r4, #0]
 8013b94:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 8013b98:	9200      	str	r2, [sp, #0]
 8013b9a:	f8dc 2000 	ldr.w	r2, [ip]
 8013b9e:	9204      	str	r2, [sp, #16]
 8013ba0:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8013ba4:	3204      	adds	r2, #4
 8013ba6:	9201      	str	r2, [sp, #4]
 8013ba8:	9a03      	ldr	r2, [sp, #12]
 8013baa:	43d5      	mvns	r5, r2
 8013bac:	b2ed      	uxtb	r5, r5
 8013bae:	9a02      	ldr	r2, [sp, #8]
 8013bb0:	2a00      	cmp	r2, #0
 8013bb2:	dc03      	bgt.n	8013bbc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8013bb4:	9a05      	ldr	r2, [sp, #20]
 8013bb6:	2a00      	cmp	r2, #0
 8013bb8:	f340 812c 	ble.w	8013e14 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8013bbc:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8013bbe:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 8013bc2:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 8013bc6:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8013bca:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8013bcc:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8013bd0:	2b00      	cmp	r3, #0
 8013bd2:	dd10      	ble.n	8013bf6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8013bd4:	140c      	asrs	r4, r1, #16
 8013bd6:	d405      	bmi.n	8013be4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8013bd8:	4574      	cmp	r4, lr
 8013bda:	da03      	bge.n	8013be4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8013bdc:	1414      	asrs	r4, r2, #16
 8013bde:	d401      	bmi.n	8013be4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8013be0:	42bc      	cmp	r4, r7
 8013be2:	db09      	blt.n	8013bf8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8013be4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8013be6:	9800      	ldr	r0, [sp, #0]
 8013be8:	4421      	add	r1, r4
 8013bea:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8013bec:	3002      	adds	r0, #2
 8013bee:	4422      	add	r2, r4
 8013bf0:	3b01      	subs	r3, #1
 8013bf2:	9000      	str	r0, [sp, #0]
 8013bf4:	e7ec      	b.n	8013bd0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8013bf6:	d071      	beq.n	8013cdc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 8013bf8:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8013bfa:	1e5c      	subs	r4, r3, #1
 8013bfc:	fb06 1604 	mla	r6, r6, r4, r1
 8013c00:	1436      	asrs	r6, r6, #16
 8013c02:	d45d      	bmi.n	8013cc0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8013c04:	4576      	cmp	r6, lr
 8013c06:	da5b      	bge.n	8013cc0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8013c08:	9e14      	ldr	r6, [sp, #80]	; 0x50
 8013c0a:	fb06 2404 	mla	r4, r6, r4, r2
 8013c0e:	1424      	asrs	r4, r4, #16
 8013c10:	d456      	bmi.n	8013cc0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8013c12:	42bc      	cmp	r4, r7
 8013c14:	da54      	bge.n	8013cc0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8013c16:	f8dd 9000 	ldr.w	r9, [sp]
 8013c1a:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 8013c1e:	4698      	mov	r8, r3
 8013c20:	f1b8 0f00 	cmp.w	r8, #0
 8013c24:	dd54      	ble.n	8013cd0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8013c26:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8013c2a:	9804      	ldr	r0, [sp, #16]
 8013c2c:	1414      	asrs	r4, r2, #16
 8013c2e:	fb07 0404 	mla	r4, r7, r4, r0
 8013c32:	140e      	asrs	r6, r1, #16
 8013c34:	9801      	ldr	r0, [sp, #4]
 8013c36:	f814 e006 	ldrb.w	lr, [r4, r6]
 8013c3a:	f8b9 4000 	ldrh.w	r4, [r9]
 8013c3e:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8013c42:	eb00 0b0e 	add.w	fp, r0, lr
 8013c46:	1227      	asrs	r7, r4, #8
 8013c48:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8013c4c:	f89b b001 	ldrb.w	fp, [fp, #1]
 8013c50:	f810 e00e 	ldrb.w	lr, [r0, lr]
 8013c54:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8013c56:	fb16 f60a 	smulbb	r6, r6, sl
 8013c5a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8013c5e:	fb07 6705 	mla	r7, r7, r5, r6
 8013c62:	10e6      	asrs	r6, r4, #3
 8013c64:	00e4      	lsls	r4, r4, #3
 8013c66:	b2e4      	uxtb	r4, r4
 8013c68:	fb1b fb0a 	smulbb	fp, fp, sl
 8013c6c:	fb14 f405 	smulbb	r4, r4, r5
 8013c70:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8013c74:	b2bf      	uxth	r7, r7
 8013c76:	fb06 b605 	mla	r6, r6, r5, fp
 8013c7a:	fb0e 4e0a 	mla	lr, lr, sl, r4
 8013c7e:	b2b6      	uxth	r6, r6
 8013c80:	fa1f fe8e 	uxth.w	lr, lr
 8013c84:	1c7c      	adds	r4, r7, #1
 8013c86:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8013c8a:	f106 0b01 	add.w	fp, r6, #1
 8013c8e:	f10e 0401 	add.w	r4, lr, #1
 8013c92:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 8013c96:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8013c9a:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8013c9e:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8013ca2:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8013ca6:	4327      	orrs	r7, r4
 8013ca8:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8013cac:	4401      	add	r1, r0
 8013cae:	9814      	ldr	r0, [sp, #80]	; 0x50
 8013cb0:	ea47 070b 	orr.w	r7, r7, fp
 8013cb4:	f829 7b02 	strh.w	r7, [r9], #2
 8013cb8:	4402      	add	r2, r0
 8013cba:	f108 38ff 	add.w	r8, r8, #4294967295
 8013cbe:	e7af      	b.n	8013c20 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8013cc0:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 8013cc4:	f04f 0e00 	mov.w	lr, #0
 8013cc8:	eb03 040e 	add.w	r4, r3, lr
 8013ccc:	2c00      	cmp	r4, #0
 8013cce:	dc43      	bgt.n	8013d58 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8013cd0:	9a00      	ldr	r2, [sp, #0]
 8013cd2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013cd6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8013cda:	9300      	str	r3, [sp, #0]
 8013cdc:	9b02      	ldr	r3, [sp, #8]
 8013cde:	2b00      	cmp	r3, #0
 8013ce0:	f340 8098 	ble.w	8013e14 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8013ce4:	ee30 0a04 	vadd.f32	s0, s0, s8
 8013ce8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8013cec:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8013cf0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013cf2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8013cf6:	ee31 1a05 	vadd.f32	s2, s2, s10
 8013cfa:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8013cfe:	eef0 6a62 	vmov.f32	s13, s5
 8013d02:	ee61 7a27 	vmul.f32	s15, s2, s15
 8013d06:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8013d0a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8013d0e:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8013d12:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8013d16:	eef0 6a43 	vmov.f32	s13, s6
 8013d1a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8013d1e:	ee12 2a90 	vmov	r2, s5
 8013d22:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8013d26:	fb92 f3f3 	sdiv	r3, r2, r3
 8013d2a:	ee13 2a10 	vmov	r2, s6
 8013d2e:	9313      	str	r3, [sp, #76]	; 0x4c
 8013d30:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013d32:	fb92 f3f3 	sdiv	r3, r2, r3
 8013d36:	9314      	str	r3, [sp, #80]	; 0x50
 8013d38:	9b02      	ldr	r3, [sp, #8]
 8013d3a:	9a05      	ldr	r2, [sp, #20]
 8013d3c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8013d40:	3b01      	subs	r3, #1
 8013d42:	9302      	str	r3, [sp, #8]
 8013d44:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 8013d48:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013d4a:	eeb0 3a67 	vmov.f32	s6, s15
 8013d4e:	bf08      	it	eq
 8013d50:	4613      	moveq	r3, r2
 8013d52:	eef0 2a47 	vmov.f32	s5, s14
 8013d56:	e72a      	b.n	8013bae <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8013d58:	140f      	asrs	r7, r1, #16
 8013d5a:	d454      	bmi.n	8013e06 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8013d5c:	f8dc 6008 	ldr.w	r6, [ip, #8]
 8013d60:	42be      	cmp	r6, r7
 8013d62:	dd50      	ble.n	8013e06 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8013d64:	ea5f 4822 	movs.w	r8, r2, asr #16
 8013d68:	d44d      	bmi.n	8013e06 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8013d6a:	f8dc 400c 	ldr.w	r4, [ip, #12]
 8013d6e:	4544      	cmp	r4, r8
 8013d70:	dd49      	ble.n	8013e06 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8013d72:	9c04      	ldr	r4, [sp, #16]
 8013d74:	b236      	sxth	r6, r6
 8013d76:	fb08 4606 	mla	r6, r8, r6, r4
 8013d7a:	f06f 0001 	mvn.w	r0, #1
 8013d7e:	f816 8007 	ldrb.w	r8, [r6, r7]
 8013d82:	9c01      	ldr	r4, [sp, #4]
 8013d84:	fb00 fa0e 	mul.w	sl, r0, lr
 8013d88:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8013d8c:	9800      	ldr	r0, [sp, #0]
 8013d8e:	eb04 0b08 	add.w	fp, r4, r8
 8013d92:	f830 400a 	ldrh.w	r4, [r0, sl]
 8013d96:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8013d9a:	9801      	ldr	r0, [sp, #4]
 8013d9c:	f89b b001 	ldrb.w	fp, [fp, #1]
 8013da0:	f810 8008 	ldrb.w	r8, [r0, r8]
 8013da4:	9800      	ldr	r0, [sp, #0]
 8013da6:	1227      	asrs	r7, r4, #8
 8013da8:	fb16 f609 	smulbb	r6, r6, r9
 8013dac:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8013db0:	fb07 6705 	mla	r7, r7, r5, r6
 8013db4:	10e6      	asrs	r6, r4, #3
 8013db6:	00e4      	lsls	r4, r4, #3
 8013db8:	b2e4      	uxtb	r4, r4
 8013dba:	fb1b fb09 	smulbb	fp, fp, r9
 8013dbe:	fb14 f405 	smulbb	r4, r4, r5
 8013dc2:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8013dc6:	b2bf      	uxth	r7, r7
 8013dc8:	fb06 b605 	mla	r6, r6, r5, fp
 8013dcc:	fb08 4809 	mla	r8, r8, r9, r4
 8013dd0:	b2b6      	uxth	r6, r6
 8013dd2:	fa1f f888 	uxth.w	r8, r8
 8013dd6:	1c7c      	adds	r4, r7, #1
 8013dd8:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8013ddc:	f106 0b01 	add.w	fp, r6, #1
 8013de0:	f108 0401 	add.w	r4, r8, #1
 8013de4:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 8013de8:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8013dec:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8013df0:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8013df4:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8013df8:	4327      	orrs	r7, r4
 8013dfa:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8013dfe:	ea47 070b 	orr.w	r7, r7, fp
 8013e02:	f820 700a 	strh.w	r7, [r0, sl]
 8013e06:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8013e08:	4401      	add	r1, r0
 8013e0a:	9814      	ldr	r0, [sp, #80]	; 0x50
 8013e0c:	f10e 3eff 	add.w	lr, lr, #4294967295
 8013e10:	4402      	add	r2, r0
 8013e12:	e759      	b.n	8013cc8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8013e14:	b007      	add	sp, #28
 8013e16:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08013e1c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8013e1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013e20:	b085      	sub	sp, #20
 8013e22:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8013e26:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8013e28:	9203      	str	r2, [sp, #12]
 8013e2a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8013e2e:	6870      	ldr	r0, [r6, #4]
 8013e30:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8013e32:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 8013e36:	686f      	ldr	r7, [r5, #4]
 8013e38:	9101      	str	r1, [sp, #4]
 8013e3a:	fb00 2404 	mla	r4, r0, r4, r2
 8013e3e:	6832      	ldr	r2, [r6, #0]
 8013e40:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8013e44:	682a      	ldr	r2, [r5, #0]
 8013e46:	9202      	str	r2, [sp, #8]
 8013e48:	3704      	adds	r7, #4
 8013e4a:	9a01      	ldr	r2, [sp, #4]
 8013e4c:	2a00      	cmp	r2, #0
 8013e4e:	dc03      	bgt.n	8013e58 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8013e50:	9a03      	ldr	r2, [sp, #12]
 8013e52:	2a00      	cmp	r2, #0
 8013e54:	f340 80cc 	ble.w	8013ff0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8013e58:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8013e5a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8013e5e:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8013e62:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8013e66:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8013e68:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8013e6c:	2b00      	cmp	r3, #0
 8013e6e:	dd0d      	ble.n	8013e8c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8013e70:	1406      	asrs	r6, r0, #16
 8013e72:	d405      	bmi.n	8013e80 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8013e74:	454e      	cmp	r6, r9
 8013e76:	da03      	bge.n	8013e80 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8013e78:	1416      	asrs	r6, r2, #16
 8013e7a:	d401      	bmi.n	8013e80 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8013e7c:	4546      	cmp	r6, r8
 8013e7e:	db06      	blt.n	8013e8e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8013e80:	9e12      	ldr	r6, [sp, #72]	; 0x48
 8013e82:	4460      	add	r0, ip
 8013e84:	4432      	add	r2, r6
 8013e86:	3b01      	subs	r3, #1
 8013e88:	3402      	adds	r4, #2
 8013e8a:	e7ef      	b.n	8013e6c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 8013e8c:	d00f      	beq.n	8013eae <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8013e8e:	1e5e      	subs	r6, r3, #1
 8013e90:	fb0c 0e06 	mla	lr, ip, r6, r0
 8013e94:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 8013e98:	d543      	bpl.n	8013f22 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8013e9a:	4698      	mov	r8, r3
 8013e9c:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 8013ea0:	f1b8 0f00 	cmp.w	r8, #0
 8013ea4:	dc71      	bgt.n	8013f8a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 8013ea6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013eaa:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8013eae:	9b01      	ldr	r3, [sp, #4]
 8013eb0:	2b00      	cmp	r3, #0
 8013eb2:	f340 809d 	ble.w	8013ff0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8013eb6:	ee30 0a04 	vadd.f32	s0, s0, s8
 8013eba:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8013ebe:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8013ec2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013ec4:	ee31 1a05 	vadd.f32	s2, s2, s10
 8013ec8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8013ecc:	eeb0 6a62 	vmov.f32	s12, s5
 8013ed0:	ee61 7a27 	vmul.f32	s15, s2, s15
 8013ed4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013ed8:	ee77 2a62 	vsub.f32	s5, s14, s5
 8013edc:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8013ee0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8013ee4:	eeb0 6a43 	vmov.f32	s12, s6
 8013ee8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8013eec:	ee12 2a90 	vmov	r2, s5
 8013ef0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8013ef4:	fb92 fcf3 	sdiv	ip, r2, r3
 8013ef8:	ee13 2a10 	vmov	r2, s6
 8013efc:	fb92 f3f3 	sdiv	r3, r2, r3
 8013f00:	9312      	str	r3, [sp, #72]	; 0x48
 8013f02:	9b01      	ldr	r3, [sp, #4]
 8013f04:	9a03      	ldr	r2, [sp, #12]
 8013f06:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013f0a:	3b01      	subs	r3, #1
 8013f0c:	9301      	str	r3, [sp, #4]
 8013f0e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8013f12:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013f14:	eeb0 3a67 	vmov.f32	s6, s15
 8013f18:	bf08      	it	eq
 8013f1a:	4613      	moveq	r3, r2
 8013f1c:	eef0 2a47 	vmov.f32	s5, s14
 8013f20:	e793      	b.n	8013e4a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8013f22:	45ce      	cmp	lr, r9
 8013f24:	dab9      	bge.n	8013e9a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8013f26:	9912      	ldr	r1, [sp, #72]	; 0x48
 8013f28:	fb01 2606 	mla	r6, r1, r6, r2
 8013f2c:	1436      	asrs	r6, r6, #16
 8013f2e:	d4b4      	bmi.n	8013e9a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8013f30:	4546      	cmp	r6, r8
 8013f32:	dab2      	bge.n	8013e9a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8013f34:	4698      	mov	r8, r3
 8013f36:	46a2      	mov	sl, r4
 8013f38:	f1b8 0f00 	cmp.w	r8, #0
 8013f3c:	ddb3      	ble.n	8013ea6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8013f3e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8013f42:	9902      	ldr	r1, [sp, #8]
 8013f44:	1416      	asrs	r6, r2, #16
 8013f46:	fb09 1606 	mla	r6, r9, r6, r1
 8013f4a:	ea4f 4e20 	mov.w	lr, r0, asr #16
 8013f4e:	492a      	ldr	r1, [pc, #168]	; (8013ff8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 8013f50:	f816 e00e 	ldrb.w	lr, [r6, lr]
 8013f54:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8013f58:	eb07 0b0e 	add.w	fp, r7, lr
 8013f5c:	4460      	add	r0, ip
 8013f5e:	f89b 6001 	ldrb.w	r6, [fp, #1]
 8013f62:	f89b 9002 	ldrb.w	r9, [fp, #2]
 8013f66:	00f6      	lsls	r6, r6, #3
 8013f68:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 8013f6c:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8013f70:	ea49 0606 	orr.w	r6, r9, r6
 8013f74:	f817 900e 	ldrb.w	r9, [r7, lr]
 8013f78:	9912      	ldr	r1, [sp, #72]	; 0x48
 8013f7a:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 8013f7e:	f82a 6b02 	strh.w	r6, [sl], #2
 8013f82:	440a      	add	r2, r1
 8013f84:	f108 38ff 	add.w	r8, r8, #4294967295
 8013f88:	e7d6      	b.n	8013f38 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8013f8a:	ea5f 4920 	movs.w	r9, r0, asr #16
 8013f8e:	d429      	bmi.n	8013fe4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8013f90:	68ae      	ldr	r6, [r5, #8]
 8013f92:	454e      	cmp	r6, r9
 8013f94:	dd26      	ble.n	8013fe4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8013f96:	ea5f 4b22 	movs.w	fp, r2, asr #16
 8013f9a:	d423      	bmi.n	8013fe4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8013f9c:	68e9      	ldr	r1, [r5, #12]
 8013f9e:	4559      	cmp	r1, fp
 8013fa0:	dd20      	ble.n	8013fe4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8013fa2:	9902      	ldr	r1, [sp, #8]
 8013fa4:	fa0f fe86 	sxth.w	lr, r6
 8013fa8:	fb0b 1e0e 	mla	lr, fp, lr, r1
 8013fac:	f06f 0101 	mvn.w	r1, #1
 8013fb0:	f81e e009 	ldrb.w	lr, [lr, r9]
 8013fb4:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8013fb8:	eb07 060e 	add.w	r6, r7, lr
 8013fbc:	fb01 f908 	mul.w	r9, r1, r8
 8013fc0:	f896 b002 	ldrb.w	fp, [r6, #2]
 8013fc4:	7876      	ldrb	r6, [r6, #1]
 8013fc6:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 8013fca:	00f6      	lsls	r6, r6, #3
 8013fcc:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 8013fd0:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8013fd4:	ea4b 0606 	orr.w	r6, fp, r6
 8013fd8:	f817 b00e 	ldrb.w	fp, [r7, lr]
 8013fdc:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 8013fe0:	f82a 6009 	strh.w	r6, [sl, r9]
 8013fe4:	9912      	ldr	r1, [sp, #72]	; 0x48
 8013fe6:	4460      	add	r0, ip
 8013fe8:	440a      	add	r2, r1
 8013fea:	f108 38ff 	add.w	r8, r8, #4294967295
 8013fee:	e757      	b.n	8013ea0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8013ff0:	b005      	add	sp, #20
 8013ff2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013ff6:	bf00      	nop
 8013ff8:	fffff800 	.word	0xfffff800

08013ffc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8013ffc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014000:	b087      	sub	sp, #28
 8014002:	468b      	mov	fp, r1
 8014004:	9815      	ldr	r0, [sp, #84]	; 0x54
 8014006:	9204      	str	r2, [sp, #16]
 8014008:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801400c:	9205      	str	r2, [sp, #20]
 801400e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8014012:	6841      	ldr	r1, [r0, #4]
 8014014:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8014018:	fb01 2404 	mla	r4, r1, r4, r2
 801401c:	6802      	ldr	r2, [r0, #0]
 801401e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8014022:	f8dc 2000 	ldr.w	r2, [ip]
 8014026:	9201      	str	r2, [sp, #4]
 8014028:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801402c:	3204      	adds	r2, #4
 801402e:	9202      	str	r2, [sp, #8]
 8014030:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8014034:	f1bb 0f00 	cmp.w	fp, #0
 8014038:	dc03      	bgt.n	8014042 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801403a:	9a04      	ldr	r2, [sp, #16]
 801403c:	2a00      	cmp	r2, #0
 801403e:	f340 8138 	ble.w	80142b2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8014042:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8014044:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8014048:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 801404c:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8014050:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8014052:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8014056:	2b00      	cmp	r3, #0
 8014058:	dd0e      	ble.n	8014078 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801405a:	1402      	asrs	r2, r0, #16
 801405c:	d405      	bmi.n	801406a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801405e:	42ba      	cmp	r2, r7
 8014060:	da03      	bge.n	801406a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8014062:	140a      	asrs	r2, r1, #16
 8014064:	d401      	bmi.n	801406a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8014066:	42b2      	cmp	r2, r6
 8014068:	db07      	blt.n	801407a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801406a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801406c:	4410      	add	r0, r2
 801406e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8014070:	3b01      	subs	r3, #1
 8014072:	4411      	add	r1, r2
 8014074:	3402      	adds	r4, #2
 8014076:	e7ee      	b.n	8014056 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8014078:	d019      	beq.n	80140ae <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801407a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801407c:	1e5a      	subs	r2, r3, #1
 801407e:	fb05 0502 	mla	r5, r5, r2, r0
 8014082:	142d      	asrs	r5, r5, #16
 8014084:	d409      	bmi.n	801409a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8014086:	42bd      	cmp	r5, r7
 8014088:	da07      	bge.n	801409a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801408a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801408c:	fb05 1202 	mla	r2, r5, r2, r1
 8014090:	1412      	asrs	r2, r2, #16
 8014092:	d402      	bmi.n	801409a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8014094:	42b2      	cmp	r2, r6
 8014096:	f2c0 80ac 	blt.w	80141f2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 801409a:	f04f 0e00 	mov.w	lr, #0
 801409e:	eb03 020e 	add.w	r2, r3, lr
 80140a2:	2a00      	cmp	r2, #0
 80140a4:	dc3e      	bgt.n	8014124 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 80140a6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80140aa:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80140ae:	f1bb 0f00 	cmp.w	fp, #0
 80140b2:	f340 80fe 	ble.w	80142b2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 80140b6:	ee30 0a04 	vadd.f32	s0, s0, s8
 80140ba:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80140be:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80140c2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80140c4:	f1bb 0b01 	subs.w	fp, fp, #1
 80140c8:	ee31 1a05 	vadd.f32	s2, s2, s10
 80140cc:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80140d0:	eeb0 6a62 	vmov.f32	s12, s5
 80140d4:	ee61 7a27 	vmul.f32	s15, s2, s15
 80140d8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80140dc:	ee77 2a62 	vsub.f32	s5, s14, s5
 80140e0:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 80140e4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80140e8:	eeb0 6a43 	vmov.f32	s12, s6
 80140ec:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80140f0:	ee12 2a90 	vmov	r2, s5
 80140f4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80140f8:	fb92 f3f3 	sdiv	r3, r2, r3
 80140fc:	ee13 2a10 	vmov	r2, s6
 8014100:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014104:	9313      	str	r3, [sp, #76]	; 0x4c
 8014106:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014108:	fb92 f3f3 	sdiv	r3, r2, r3
 801410c:	9a04      	ldr	r2, [sp, #16]
 801410e:	9314      	str	r3, [sp, #80]	; 0x50
 8014110:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8014114:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014116:	eeb0 3a67 	vmov.f32	s6, s15
 801411a:	bf08      	it	eq
 801411c:	4613      	moveq	r3, r2
 801411e:	eef0 2a47 	vmov.f32	s5, s14
 8014122:	e787      	b.n	8014034 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8014124:	1406      	asrs	r6, r0, #16
 8014126:	d45d      	bmi.n	80141e4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8014128:	f8dc 5008 	ldr.w	r5, [ip, #8]
 801412c:	42b5      	cmp	r5, r6
 801412e:	dd59      	ble.n	80141e4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8014130:	140f      	asrs	r7, r1, #16
 8014132:	d457      	bmi.n	80141e4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8014134:	f8dc 200c 	ldr.w	r2, [ip, #12]
 8014138:	42ba      	cmp	r2, r7
 801413a:	dd53      	ble.n	80141e4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801413c:	9a01      	ldr	r2, [sp, #4]
 801413e:	b22d      	sxth	r5, r5
 8014140:	fb07 2505 	mla	r5, r7, r5, r2
 8014144:	5daa      	ldrb	r2, [r5, r6]
 8014146:	9d02      	ldr	r5, [sp, #8]
 8014148:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801414c:	0e2e      	lsrs	r6, r5, #24
 801414e:	d049      	beq.n	80141e4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8014150:	f06f 0201 	mvn.w	r2, #1
 8014154:	fb02 f20e 	mul.w	r2, r2, lr
 8014158:	9203      	str	r2, [sp, #12]
 801415a:	f834 8002 	ldrh.w	r8, [r4, r2]
 801415e:	9a05      	ldr	r2, [sp, #20]
 8014160:	4356      	muls	r6, r2
 8014162:	1c72      	adds	r2, r6, #1
 8014164:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8014168:	1212      	asrs	r2, r2, #8
 801416a:	fa1f f982 	uxth.w	r9, r2
 801416e:	ea4f 2728 	mov.w	r7, r8, asr #8
 8014172:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8014176:	43d2      	mvns	r2, r2
 8014178:	b2d2      	uxtb	r2, r2
 801417a:	fb16 f609 	smulbb	r6, r6, r9
 801417e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8014182:	fb07 6702 	mla	r7, r7, r2, r6
 8014186:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801418a:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801418e:	b2ed      	uxtb	r5, r5
 8014190:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8014194:	fa5f f888 	uxtb.w	r8, r8
 8014198:	fb15 f509 	smulbb	r5, r5, r9
 801419c:	fb08 5502 	mla	r5, r8, r2, r5
 80141a0:	b2bf      	uxth	r7, r7
 80141a2:	fb1a fa09 	smulbb	sl, sl, r9
 80141a6:	b2ad      	uxth	r5, r5
 80141a8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80141ac:	fb06 a602 	mla	r6, r6, r2, sl
 80141b0:	1c7a      	adds	r2, r7, #1
 80141b2:	f105 0a01 	add.w	sl, r5, #1
 80141b6:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80141ba:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80141be:	b2b6      	uxth	r6, r6
 80141c0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80141c4:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80141c8:	ea4a 0707 	orr.w	r7, sl, r7
 80141cc:	f106 0a01 	add.w	sl, r6, #1
 80141d0:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80141d4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80141d8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80141dc:	9a03      	ldr	r2, [sp, #12]
 80141de:	ea47 070a 	orr.w	r7, r7, sl
 80141e2:	52a7      	strh	r7, [r4, r2]
 80141e4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80141e6:	4410      	add	r0, r2
 80141e8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80141ea:	f10e 3eff 	add.w	lr, lr, #4294967295
 80141ee:	4411      	add	r1, r2
 80141f0:	e755      	b.n	801409e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80141f2:	f04f 0800 	mov.w	r8, #0
 80141f6:	eba3 0208 	sub.w	r2, r3, r8
 80141fa:	2a00      	cmp	r2, #0
 80141fc:	f77f af53 	ble.w	80140a6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8014200:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 8014204:	9f01      	ldr	r7, [sp, #4]
 8014206:	140a      	asrs	r2, r1, #16
 8014208:	1405      	asrs	r5, r0, #16
 801420a:	fb06 7202 	mla	r2, r6, r2, r7
 801420e:	5d52      	ldrb	r2, [r2, r5]
 8014210:	9d02      	ldr	r5, [sp, #8]
 8014212:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8014216:	0e2e      	lsrs	r6, r5, #24
 8014218:	d044      	beq.n	80142a4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801421a:	9a05      	ldr	r2, [sp, #20]
 801421c:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8014220:	4356      	muls	r6, r2
 8014222:	1c72      	adds	r2, r6, #1
 8014224:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8014228:	1212      	asrs	r2, r2, #8
 801422a:	fa1f f982 	uxth.w	r9, r2
 801422e:	ea4f 272e 	mov.w	r7, lr, asr #8
 8014232:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8014236:	43d2      	mvns	r2, r2
 8014238:	b2d2      	uxtb	r2, r2
 801423a:	fb16 f609 	smulbb	r6, r6, r9
 801423e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8014242:	fb07 6702 	mla	r7, r7, r2, r6
 8014246:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801424a:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801424e:	b2ed      	uxtb	r5, r5
 8014250:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8014254:	fa5f fe8e 	uxtb.w	lr, lr
 8014258:	fb15 f509 	smulbb	r5, r5, r9
 801425c:	fb0e 5502 	mla	r5, lr, r2, r5
 8014260:	b2bf      	uxth	r7, r7
 8014262:	fb1a fa09 	smulbb	sl, sl, r9
 8014266:	b2ad      	uxth	r5, r5
 8014268:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801426c:	fb06 a602 	mla	r6, r6, r2, sl
 8014270:	1c7a      	adds	r2, r7, #1
 8014272:	f105 0a01 	add.w	sl, r5, #1
 8014276:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801427a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801427e:	b2b6      	uxth	r6, r6
 8014280:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8014284:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8014288:	ea4a 0707 	orr.w	r7, sl, r7
 801428c:	f106 0a01 	add.w	sl, r6, #1
 8014290:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8014294:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014298:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801429c:	ea47 070a 	orr.w	r7, r7, sl
 80142a0:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 80142a4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80142a6:	4410      	add	r0, r2
 80142a8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80142aa:	f108 0801 	add.w	r8, r8, #1
 80142ae:	4411      	add	r1, r2
 80142b0:	e7a1      	b.n	80141f6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 80142b2:	b007      	add	sp, #28
 80142b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080142b8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80142b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80142bc:	b085      	sub	sp, #20
 80142be:	468b      	mov	fp, r1
 80142c0:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80142c2:	9203      	str	r2, [sp, #12]
 80142c4:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 80142c8:	6841      	ldr	r1, [r0, #4]
 80142ca:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 80142ce:	fb01 2404 	mla	r4, r1, r4, r2
 80142d2:	6802      	ldr	r2, [r0, #0]
 80142d4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80142d8:	f8de 2000 	ldr.w	r2, [lr]
 80142dc:	9200      	str	r2, [sp, #0]
 80142de:	f8de 2004 	ldr.w	r2, [lr, #4]
 80142e2:	3204      	adds	r2, #4
 80142e4:	9201      	str	r2, [sp, #4]
 80142e6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80142ea:	f1bb 0f00 	cmp.w	fp, #0
 80142ee:	dc03      	bgt.n	80142f8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 80142f0:	9a03      	ldr	r2, [sp, #12]
 80142f2:	2a00      	cmp	r2, #0
 80142f4:	f340 8153 	ble.w	801459e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 80142f8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80142fa:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 80142fe:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8014302:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8014306:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8014308:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801430c:	2b00      	cmp	r3, #0
 801430e:	dd0e      	ble.n	801432e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8014310:	1408      	asrs	r0, r1, #16
 8014312:	d405      	bmi.n	8014320 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8014314:	42b8      	cmp	r0, r7
 8014316:	da03      	bge.n	8014320 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8014318:	1410      	asrs	r0, r2, #16
 801431a:	d401      	bmi.n	8014320 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801431c:	42b0      	cmp	r0, r6
 801431e:	db07      	blt.n	8014330 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8014320:	9811      	ldr	r0, [sp, #68]	; 0x44
 8014322:	4401      	add	r1, r0
 8014324:	9812      	ldr	r0, [sp, #72]	; 0x48
 8014326:	3b01      	subs	r3, #1
 8014328:	4402      	add	r2, r0
 801432a:	3402      	adds	r4, #2
 801432c:	e7ee      	b.n	801430c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801432e:	d017      	beq.n	8014360 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8014330:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8014332:	1e58      	subs	r0, r3, #1
 8014334:	fb05 1500 	mla	r5, r5, r0, r1
 8014338:	142d      	asrs	r5, r5, #16
 801433a:	d409      	bmi.n	8014350 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801433c:	42bd      	cmp	r5, r7
 801433e:	da07      	bge.n	8014350 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8014340:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8014342:	fb05 2000 	mla	r0, r5, r0, r2
 8014346:	1400      	asrs	r0, r0, #16
 8014348:	d402      	bmi.n	8014350 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801434a:	42b0      	cmp	r0, r6
 801434c:	f2c0 80bc 	blt.w	80144c8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 8014350:	2600      	movs	r6, #0
 8014352:	1998      	adds	r0, r3, r6
 8014354:	2800      	cmp	r0, #0
 8014356:	dc3e      	bgt.n	80143d6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 8014358:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801435c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014360:	f1bb 0f00 	cmp.w	fp, #0
 8014364:	f340 811b 	ble.w	801459e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8014368:	ee30 0a04 	vadd.f32	s0, s0, s8
 801436c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014370:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8014374:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014376:	f1bb 0b01 	subs.w	fp, fp, #1
 801437a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801437e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014382:	eeb0 6a62 	vmov.f32	s12, s5
 8014386:	ee61 7a27 	vmul.f32	s15, s2, s15
 801438a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801438e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014392:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8014396:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801439a:	eeb0 6a43 	vmov.f32	s12, s6
 801439e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80143a2:	ee12 2a90 	vmov	r2, s5
 80143a6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80143aa:	fb92 f3f3 	sdiv	r3, r2, r3
 80143ae:	ee13 2a10 	vmov	r2, s6
 80143b2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80143b6:	9311      	str	r3, [sp, #68]	; 0x44
 80143b8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80143ba:	fb92 f3f3 	sdiv	r3, r2, r3
 80143be:	9a03      	ldr	r2, [sp, #12]
 80143c0:	9312      	str	r3, [sp, #72]	; 0x48
 80143c2:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80143c6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80143c8:	eeb0 3a67 	vmov.f32	s6, s15
 80143cc:	bf08      	it	eq
 80143ce:	4613      	moveq	r3, r2
 80143d0:	eef0 2a47 	vmov.f32	s5, s14
 80143d4:	e789      	b.n	80142ea <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 80143d6:	140f      	asrs	r7, r1, #16
 80143d8:	d426      	bmi.n	8014428 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80143da:	f8de 5008 	ldr.w	r5, [lr, #8]
 80143de:	42bd      	cmp	r5, r7
 80143e0:	dd22      	ble.n	8014428 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80143e2:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80143e6:	d41f      	bmi.n	8014428 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80143e8:	f8de 000c 	ldr.w	r0, [lr, #12]
 80143ec:	4560      	cmp	r0, ip
 80143ee:	dd1b      	ble.n	8014428 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80143f0:	9800      	ldr	r0, [sp, #0]
 80143f2:	b22d      	sxth	r5, r5
 80143f4:	fb0c 0505 	mla	r5, ip, r5, r0
 80143f8:	5de8      	ldrb	r0, [r5, r7]
 80143fa:	9d01      	ldr	r5, [sp, #4]
 80143fc:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 8014400:	0e07      	lsrs	r7, r0, #24
 8014402:	2fff      	cmp	r7, #255	; 0xff
 8014404:	d116      	bne.n	8014434 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8014406:	f06f 0501 	mvn.w	r5, #1
 801440a:	fb05 f706 	mul.w	r7, r5, r6
 801440e:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 8014412:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8014416:	0945      	lsrs	r5, r0, #5
 8014418:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801441c:	ea4c 0505 	orr.w	r5, ip, r5
 8014420:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8014424:	4305      	orrs	r5, r0
 8014426:	53e5      	strh	r5, [r4, r7]
 8014428:	9811      	ldr	r0, [sp, #68]	; 0x44
 801442a:	4401      	add	r1, r0
 801442c:	9812      	ldr	r0, [sp, #72]	; 0x48
 801442e:	3e01      	subs	r6, #1
 8014430:	4402      	add	r2, r0
 8014432:	e78e      	b.n	8014352 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8014434:	b2fd      	uxtb	r5, r7
 8014436:	2f00      	cmp	r7, #0
 8014438:	d0f6      	beq.n	8014428 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801443a:	f06f 0701 	mvn.w	r7, #1
 801443e:	4377      	muls	r7, r6
 8014440:	fa1f f985 	uxth.w	r9, r5
 8014444:	f834 8007 	ldrh.w	r8, [r4, r7]
 8014448:	9702      	str	r7, [sp, #8]
 801444a:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801444e:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8014452:	43ed      	mvns	r5, r5
 8014454:	b2ed      	uxtb	r5, r5
 8014456:	fb17 f709 	smulbb	r7, r7, r9
 801445a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801445e:	fb0c 7c05 	mla	ip, ip, r5, r7
 8014462:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8014466:	ea4f 07e8 	mov.w	r7, r8, asr #3
 801446a:	b2c0      	uxtb	r0, r0
 801446c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8014470:	fa5f f888 	uxtb.w	r8, r8
 8014474:	fb10 f009 	smulbb	r0, r0, r9
 8014478:	fb08 0005 	mla	r0, r8, r5, r0
 801447c:	b280      	uxth	r0, r0
 801447e:	fa1f fc8c 	uxth.w	ip, ip
 8014482:	fb1a fa09 	smulbb	sl, sl, r9
 8014486:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801448a:	fb07 a705 	mla	r7, r7, r5, sl
 801448e:	f100 0a01 	add.w	sl, r0, #1
 8014492:	f10c 0501 	add.w	r5, ip, #1
 8014496:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801449a:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801449e:	b2bf      	uxth	r7, r7
 80144a0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80144a4:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80144a8:	ea4a 0c0c 	orr.w	ip, sl, ip
 80144ac:	f107 0a01 	add.w	sl, r7, #1
 80144b0:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 80144b4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80144b8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80144bc:	9802      	ldr	r0, [sp, #8]
 80144be:	ea4c 0c0a 	orr.w	ip, ip, sl
 80144c2:	f824 c000 	strh.w	ip, [r4, r0]
 80144c6:	e7af      	b.n	8014428 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80144c8:	f04f 0800 	mov.w	r8, #0
 80144cc:	eba3 0008 	sub.w	r0, r3, r8
 80144d0:	2800      	cmp	r0, #0
 80144d2:	f77f af41 	ble.w	8014358 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80144d6:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 80144da:	9f00      	ldr	r7, [sp, #0]
 80144dc:	1410      	asrs	r0, r2, #16
 80144de:	140d      	asrs	r5, r1, #16
 80144e0:	fb06 7000 	mla	r0, r6, r0, r7
 80144e4:	5d40      	ldrb	r0, [r0, r5]
 80144e6:	9d01      	ldr	r5, [sp, #4]
 80144e8:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 80144ec:	0e2e      	lsrs	r6, r5, #24
 80144ee:	2eff      	cmp	r6, #255	; 0xff
 80144f0:	d112      	bne.n	8014518 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 80144f2:	482c      	ldr	r0, [pc, #176]	; (80145a4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 80144f4:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 80144f8:	0968      	lsrs	r0, r5, #5
 80144fa:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80144fe:	4330      	orrs	r0, r6
 8014500:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8014504:	4328      	orrs	r0, r5
 8014506:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 801450a:	9811      	ldr	r0, [sp, #68]	; 0x44
 801450c:	4401      	add	r1, r0
 801450e:	9812      	ldr	r0, [sp, #72]	; 0x48
 8014510:	f108 0801 	add.w	r8, r8, #1
 8014514:	4402      	add	r2, r0
 8014516:	e7d9      	b.n	80144cc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8014518:	b2f0      	uxtb	r0, r6
 801451a:	2e00      	cmp	r6, #0
 801451c:	d0f5      	beq.n	801450a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801451e:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 8014522:	fa1f f980 	uxth.w	r9, r0
 8014526:	ea4f 272c 	mov.w	r7, ip, asr #8
 801452a:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801452e:	43c0      	mvns	r0, r0
 8014530:	b2c0      	uxtb	r0, r0
 8014532:	fb16 f609 	smulbb	r6, r6, r9
 8014536:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801453a:	fb07 6700 	mla	r7, r7, r0, r6
 801453e:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8014542:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8014546:	b2ed      	uxtb	r5, r5
 8014548:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801454c:	fa5f fc8c 	uxtb.w	ip, ip
 8014550:	fb15 f509 	smulbb	r5, r5, r9
 8014554:	fb0c 5500 	mla	r5, ip, r0, r5
 8014558:	b2bf      	uxth	r7, r7
 801455a:	fb1a fa09 	smulbb	sl, sl, r9
 801455e:	b2ad      	uxth	r5, r5
 8014560:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8014564:	fb06 a600 	mla	r6, r6, r0, sl
 8014568:	1c78      	adds	r0, r7, #1
 801456a:	f105 0a01 	add.w	sl, r5, #1
 801456e:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8014572:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8014576:	b2b6      	uxth	r6, r6
 8014578:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801457c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8014580:	ea4a 0707 	orr.w	r7, sl, r7
 8014584:	f106 0a01 	add.w	sl, r6, #1
 8014588:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801458c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014590:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8014594:	ea47 070a 	orr.w	r7, r7, sl
 8014598:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801459c:	e7b5      	b.n	801450a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801459e:	b005      	add	sp, #20
 80145a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80145a4:	fffff800 	.word	0xfffff800

080145a8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80145a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80145ac:	b087      	sub	sp, #28
 80145ae:	468b      	mov	fp, r1
 80145b0:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80145b2:	9204      	str	r2, [sp, #16]
 80145b4:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80145b8:	9205      	str	r2, [sp, #20]
 80145ba:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 80145be:	6861      	ldr	r1, [r4, #4]
 80145c0:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 80145c4:	fb01 2000 	mla	r0, r1, r0, r2
 80145c8:	6822      	ldr	r2, [r4, #0]
 80145ca:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 80145ce:	f8de 2000 	ldr.w	r2, [lr]
 80145d2:	9201      	str	r2, [sp, #4]
 80145d4:	f8de 2004 	ldr.w	r2, [lr, #4]
 80145d8:	9202      	str	r2, [sp, #8]
 80145da:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80145de:	f1bb 0f00 	cmp.w	fp, #0
 80145e2:	dc03      	bgt.n	80145ec <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 80145e4:	9a04      	ldr	r2, [sp, #16]
 80145e6:	2a00      	cmp	r2, #0
 80145e8:	f340 8142 	ble.w	8014870 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 80145ec:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80145ee:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 80145f2:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 80145f6:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80145fa:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80145fc:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8014600:	2b00      	cmp	r3, #0
 8014602:	dd0e      	ble.n	8014622 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8014604:	140c      	asrs	r4, r1, #16
 8014606:	d405      	bmi.n	8014614 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8014608:	42bc      	cmp	r4, r7
 801460a:	da03      	bge.n	8014614 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801460c:	1414      	asrs	r4, r2, #16
 801460e:	d401      	bmi.n	8014614 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8014610:	42b4      	cmp	r4, r6
 8014612:	db07      	blt.n	8014624 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8014614:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8014616:	4421      	add	r1, r4
 8014618:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801461a:	3b01      	subs	r3, #1
 801461c:	4422      	add	r2, r4
 801461e:	3002      	adds	r0, #2
 8014620:	e7ee      	b.n	8014600 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8014622:	d019      	beq.n	8014658 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8014624:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8014626:	1e5c      	subs	r4, r3, #1
 8014628:	fb05 1504 	mla	r5, r5, r4, r1
 801462c:	142d      	asrs	r5, r5, #16
 801462e:	d409      	bmi.n	8014644 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8014630:	42bd      	cmp	r5, r7
 8014632:	da07      	bge.n	8014644 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8014634:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8014636:	fb05 2404 	mla	r4, r5, r4, r2
 801463a:	1424      	asrs	r4, r4, #16
 801463c:	d402      	bmi.n	8014644 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801463e:	42b4      	cmp	r4, r6
 8014640:	f2c0 80b1 	blt.w	80147a6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8014644:	f04f 0800 	mov.w	r8, #0
 8014648:	eb03 0408 	add.w	r4, r3, r8
 801464c:	2c00      	cmp	r4, #0
 801464e:	dc3e      	bgt.n	80146ce <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8014650:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014654:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8014658:	f1bb 0f00 	cmp.w	fp, #0
 801465c:	f340 8108 	ble.w	8014870 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8014660:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014664:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014668:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801466c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801466e:	f1bb 0b01 	subs.w	fp, fp, #1
 8014672:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014676:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801467a:	eeb0 6a62 	vmov.f32	s12, s5
 801467e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014682:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014686:	ee77 2a62 	vsub.f32	s5, s14, s5
 801468a:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801468e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014692:	eeb0 6a43 	vmov.f32	s12, s6
 8014696:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801469a:	ee12 2a90 	vmov	r2, s5
 801469e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80146a2:	fb92 f3f3 	sdiv	r3, r2, r3
 80146a6:	ee13 2a10 	vmov	r2, s6
 80146aa:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80146ae:	9313      	str	r3, [sp, #76]	; 0x4c
 80146b0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80146b2:	fb92 f3f3 	sdiv	r3, r2, r3
 80146b6:	9a04      	ldr	r2, [sp, #16]
 80146b8:	9314      	str	r3, [sp, #80]	; 0x50
 80146ba:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 80146be:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80146c0:	eeb0 3a67 	vmov.f32	s6, s15
 80146c4:	bf08      	it	eq
 80146c6:	4613      	moveq	r3, r2
 80146c8:	eef0 2a47 	vmov.f32	s5, s14
 80146cc:	e787      	b.n	80145de <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 80146ce:	140e      	asrs	r6, r1, #16
 80146d0:	d462      	bmi.n	8014798 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80146d2:	f8de 5008 	ldr.w	r5, [lr, #8]
 80146d6:	42b5      	cmp	r5, r6
 80146d8:	dd5e      	ble.n	8014798 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80146da:	1417      	asrs	r7, r2, #16
 80146dc:	d45c      	bmi.n	8014798 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80146de:	f8de 400c 	ldr.w	r4, [lr, #12]
 80146e2:	42bc      	cmp	r4, r7
 80146e4:	dd58      	ble.n	8014798 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80146e6:	b22d      	sxth	r5, r5
 80146e8:	fb07 6505 	mla	r5, r7, r5, r6
 80146ec:	9c02      	ldr	r4, [sp, #8]
 80146ee:	5d66      	ldrb	r6, [r4, r5]
 80146f0:	2e00      	cmp	r6, #0
 80146f2:	d051      	beq.n	8014798 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80146f4:	9c01      	ldr	r4, [sp, #4]
 80146f6:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 80146fa:	f06f 0401 	mvn.w	r4, #1
 80146fe:	fb04 f408 	mul.w	r4, r4, r8
 8014702:	9403      	str	r4, [sp, #12]
 8014704:	5b05      	ldrh	r5, [r0, r4]
 8014706:	9c05      	ldr	r4, [sp, #20]
 8014708:	4366      	muls	r6, r4
 801470a:	1c74      	adds	r4, r6, #1
 801470c:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8014710:	1224      	asrs	r4, r4, #8
 8014712:	b2a7      	uxth	r7, r4
 8014714:	122e      	asrs	r6, r5, #8
 8014716:	43e4      	mvns	r4, r4
 8014718:	b2e4      	uxtb	r4, r4
 801471a:	ea4f 2c29 	mov.w	ip, r9, asr #8
 801471e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8014722:	fb16 f604 	smulbb	r6, r6, r4
 8014726:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801472a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801472e:	00ed      	lsls	r5, r5, #3
 8014730:	fb0c 6c07 	mla	ip, ip, r7, r6
 8014734:	b2ed      	uxtb	r5, r5
 8014736:	ea4f 06e9 	mov.w	r6, r9, asr #3
 801473a:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801473e:	fb15 f504 	smulbb	r5, r5, r4
 8014742:	fa5f f989 	uxtb.w	r9, r9
 8014746:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801474a:	fb09 5507 	mla	r5, r9, r7, r5
 801474e:	fb1a fa04 	smulbb	sl, sl, r4
 8014752:	fa1f fc8c 	uxth.w	ip, ip
 8014756:	b2ad      	uxth	r5, r5
 8014758:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801475c:	fb06 a607 	mla	r6, r6, r7, sl
 8014760:	f10c 0401 	add.w	r4, ip, #1
 8014764:	f105 0a01 	add.w	sl, r5, #1
 8014768:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801476c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8014770:	b2b6      	uxth	r6, r6
 8014772:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8014776:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801477a:	ea4a 0c0c 	orr.w	ip, sl, ip
 801477e:	f106 0a01 	add.w	sl, r6, #1
 8014782:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8014786:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801478a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801478e:	9c03      	ldr	r4, [sp, #12]
 8014790:	ea4c 0c0a 	orr.w	ip, ip, sl
 8014794:	f820 c004 	strh.w	ip, [r0, r4]
 8014798:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801479a:	4421      	add	r1, r4
 801479c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801479e:	f108 38ff 	add.w	r8, r8, #4294967295
 80147a2:	4422      	add	r2, r4
 80147a4:	e750      	b.n	8014648 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80147a6:	f04f 0900 	mov.w	r9, #0
 80147aa:	eba3 0409 	sub.w	r4, r3, r9
 80147ae:	2c00      	cmp	r4, #0
 80147b0:	f77f af4e 	ble.w	8014650 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 80147b4:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 80147b8:	140d      	asrs	r5, r1, #16
 80147ba:	1414      	asrs	r4, r2, #16
 80147bc:	fb06 5404 	mla	r4, r6, r4, r5
 80147c0:	9d02      	ldr	r5, [sp, #8]
 80147c2:	5d2e      	ldrb	r6, [r5, r4]
 80147c4:	2e00      	cmp	r6, #0
 80147c6:	d04c      	beq.n	8014862 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 80147c8:	9d01      	ldr	r5, [sp, #4]
 80147ca:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 80147ce:	9c05      	ldr	r4, [sp, #20]
 80147d0:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 80147d4:	4366      	muls	r6, r4
 80147d6:	1c74      	adds	r4, r6, #1
 80147d8:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 80147dc:	1224      	asrs	r4, r4, #8
 80147de:	b2a7      	uxth	r7, r4
 80147e0:	122e      	asrs	r6, r5, #8
 80147e2:	43e4      	mvns	r4, r4
 80147e4:	b2e4      	uxtb	r4, r4
 80147e6:	ea4f 2c28 	mov.w	ip, r8, asr #8
 80147ea:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80147ee:	fb16 f604 	smulbb	r6, r6, r4
 80147f2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80147f6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80147fa:	00ed      	lsls	r5, r5, #3
 80147fc:	fb0c 6c07 	mla	ip, ip, r7, r6
 8014800:	b2ed      	uxtb	r5, r5
 8014802:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8014806:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801480a:	fb15 f504 	smulbb	r5, r5, r4
 801480e:	fa5f f888 	uxtb.w	r8, r8
 8014812:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8014816:	fb08 5507 	mla	r5, r8, r7, r5
 801481a:	fb1a fa04 	smulbb	sl, sl, r4
 801481e:	fa1f fc8c 	uxth.w	ip, ip
 8014822:	b2ad      	uxth	r5, r5
 8014824:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8014828:	fb06 a607 	mla	r6, r6, r7, sl
 801482c:	f10c 0401 	add.w	r4, ip, #1
 8014830:	f105 0a01 	add.w	sl, r5, #1
 8014834:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8014838:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801483c:	b2b6      	uxth	r6, r6
 801483e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8014842:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8014846:	ea4a 0c0c 	orr.w	ip, sl, ip
 801484a:	f106 0a01 	add.w	sl, r6, #1
 801484e:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8014852:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014856:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801485a:	ea4c 0c0a 	orr.w	ip, ip, sl
 801485e:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8014862:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8014864:	4421      	add	r1, r4
 8014866:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8014868:	f109 0901 	add.w	r9, r9, #1
 801486c:	4422      	add	r2, r4
 801486e:	e79c      	b.n	80147aa <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8014870:	b007      	add	sp, #28
 8014872:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014876 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014876:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801487a:	b085      	sub	sp, #20
 801487c:	468b      	mov	fp, r1
 801487e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8014880:	9203      	str	r2, [sp, #12]
 8014882:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 8014886:	6861      	ldr	r1, [r4, #4]
 8014888:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801488c:	fb01 2000 	mla	r0, r1, r0, r2
 8014890:	6822      	ldr	r2, [r4, #0]
 8014892:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8014896:	f8d8 2000 	ldr.w	r2, [r8]
 801489a:	9200      	str	r2, [sp, #0]
 801489c:	f8d8 2004 	ldr.w	r2, [r8, #4]
 80148a0:	9201      	str	r2, [sp, #4]
 80148a2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80148a6:	f1bb 0f00 	cmp.w	fp, #0
 80148aa:	dc03      	bgt.n	80148b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80148ac:	9a03      	ldr	r2, [sp, #12]
 80148ae:	2a00      	cmp	r2, #0
 80148b0:	f340 8146 	ble.w	8014b40 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 80148b4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80148b6:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 80148ba:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 80148be:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80148c2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80148c4:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80148c8:	2b00      	cmp	r3, #0
 80148ca:	dd0e      	ble.n	80148ea <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80148cc:	140c      	asrs	r4, r1, #16
 80148ce:	d405      	bmi.n	80148dc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80148d0:	42bc      	cmp	r4, r7
 80148d2:	da03      	bge.n	80148dc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80148d4:	1414      	asrs	r4, r2, #16
 80148d6:	d401      	bmi.n	80148dc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80148d8:	42b4      	cmp	r4, r6
 80148da:	db07      	blt.n	80148ec <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80148dc:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80148de:	4421      	add	r1, r4
 80148e0:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80148e2:	3b01      	subs	r3, #1
 80148e4:	4422      	add	r2, r4
 80148e6:	3002      	adds	r0, #2
 80148e8:	e7ee      	b.n	80148c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80148ea:	d017      	beq.n	801491c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 80148ec:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80148ee:	1e5c      	subs	r4, r3, #1
 80148f0:	fb05 1504 	mla	r5, r5, r4, r1
 80148f4:	142d      	asrs	r5, r5, #16
 80148f6:	d409      	bmi.n	801490c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80148f8:	42bd      	cmp	r5, r7
 80148fa:	da07      	bge.n	801490c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80148fc:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80148fe:	fb05 2404 	mla	r4, r5, r4, r2
 8014902:	1424      	asrs	r4, r4, #16
 8014904:	d402      	bmi.n	801490c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8014906:	42b4      	cmp	r4, r6
 8014908:	f2c0 80b3 	blt.w	8014a72 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 801490c:	2600      	movs	r6, #0
 801490e:	199c      	adds	r4, r3, r6
 8014910:	2c00      	cmp	r4, #0
 8014912:	dc3e      	bgt.n	8014992 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8014914:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014918:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801491c:	f1bb 0f00 	cmp.w	fp, #0
 8014920:	f340 810e 	ble.w	8014b40 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8014924:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014928:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801492c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8014930:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014932:	f1bb 0b01 	subs.w	fp, fp, #1
 8014936:	ee31 1a05 	vadd.f32	s2, s2, s10
 801493a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801493e:	eeb0 6a62 	vmov.f32	s12, s5
 8014942:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014946:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801494a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801494e:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8014952:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014956:	eeb0 6a43 	vmov.f32	s12, s6
 801495a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801495e:	ee12 2a90 	vmov	r2, s5
 8014962:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014966:	fb92 f3f3 	sdiv	r3, r2, r3
 801496a:	ee13 2a10 	vmov	r2, s6
 801496e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014972:	9311      	str	r3, [sp, #68]	; 0x44
 8014974:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014976:	fb92 f3f3 	sdiv	r3, r2, r3
 801497a:	9a03      	ldr	r2, [sp, #12]
 801497c:	9312      	str	r3, [sp, #72]	; 0x48
 801497e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8014982:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014984:	eeb0 3a67 	vmov.f32	s6, s15
 8014988:	bf08      	it	eq
 801498a:	4613      	moveq	r3, r2
 801498c:	eef0 2a47 	vmov.f32	s5, s14
 8014990:	e789      	b.n	80148a6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8014992:	140f      	asrs	r7, r1, #16
 8014994:	d418      	bmi.n	80149c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8014996:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801499a:	42bd      	cmp	r5, r7
 801499c:	dd14      	ble.n	80149c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801499e:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80149a2:	d411      	bmi.n	80149c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80149a4:	f8d8 400c 	ldr.w	r4, [r8, #12]
 80149a8:	4564      	cmp	r4, ip
 80149aa:	dd0d      	ble.n	80149c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80149ac:	b22d      	sxth	r5, r5
 80149ae:	fb0c 7505 	mla	r5, ip, r5, r7
 80149b2:	9c01      	ldr	r4, [sp, #4]
 80149b4:	5d64      	ldrb	r4, [r4, r5]
 80149b6:	2cff      	cmp	r4, #255	; 0xff
 80149b8:	d10c      	bne.n	80149d4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 80149ba:	9c00      	ldr	r4, [sp, #0]
 80149bc:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 80149c0:	f06f 0401 	mvn.w	r4, #1
 80149c4:	4374      	muls	r4, r6
 80149c6:	5305      	strh	r5, [r0, r4]
 80149c8:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80149ca:	4421      	add	r1, r4
 80149cc:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80149ce:	3e01      	subs	r6, #1
 80149d0:	4422      	add	r2, r4
 80149d2:	e79c      	b.n	801490e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80149d4:	2c00      	cmp	r4, #0
 80149d6:	d0f7      	beq.n	80149c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80149d8:	9f00      	ldr	r7, [sp, #0]
 80149da:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 80149de:	f06f 0501 	mvn.w	r5, #1
 80149e2:	4375      	muls	r5, r6
 80149e4:	9502      	str	r5, [sp, #8]
 80149e6:	5b45      	ldrh	r5, [r0, r5]
 80149e8:	fa1f fc84 	uxth.w	ip, r4
 80149ec:	122f      	asrs	r7, r5, #8
 80149ee:	43e4      	mvns	r4, r4
 80149f0:	b2e4      	uxtb	r4, r4
 80149f2:	ea4f 2e29 	mov.w	lr, r9, asr #8
 80149f6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80149fa:	fb17 f704 	smulbb	r7, r7, r4
 80149fe:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8014a02:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8014a06:	00ed      	lsls	r5, r5, #3
 8014a08:	fb0e 7e0c 	mla	lr, lr, ip, r7
 8014a0c:	b2ed      	uxtb	r5, r5
 8014a0e:	ea4f 07e9 	mov.w	r7, r9, asr #3
 8014a12:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8014a16:	fb15 f504 	smulbb	r5, r5, r4
 8014a1a:	fa5f f989 	uxtb.w	r9, r9
 8014a1e:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8014a22:	fb09 550c 	mla	r5, r9, ip, r5
 8014a26:	fb1a fa04 	smulbb	sl, sl, r4
 8014a2a:	fa1f fe8e 	uxth.w	lr, lr
 8014a2e:	b2ad      	uxth	r5, r5
 8014a30:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8014a34:	fb07 a70c 	mla	r7, r7, ip, sl
 8014a38:	f10e 0401 	add.w	r4, lr, #1
 8014a3c:	f105 0a01 	add.w	sl, r5, #1
 8014a40:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 8014a44:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8014a48:	b2bf      	uxth	r7, r7
 8014a4a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8014a4e:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8014a52:	ea4a 0e0e 	orr.w	lr, sl, lr
 8014a56:	f107 0a01 	add.w	sl, r7, #1
 8014a5a:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8014a5e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014a62:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8014a66:	9c02      	ldr	r4, [sp, #8]
 8014a68:	ea4e 0e0a 	orr.w	lr, lr, sl
 8014a6c:	f820 e004 	strh.w	lr, [r0, r4]
 8014a70:	e7aa      	b.n	80149c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8014a72:	f04f 0900 	mov.w	r9, #0
 8014a76:	eba3 0409 	sub.w	r4, r3, r9
 8014a7a:	2c00      	cmp	r4, #0
 8014a7c:	f77f af4a 	ble.w	8014914 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8014a80:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8014a84:	1414      	asrs	r4, r2, #16
 8014a86:	140d      	asrs	r5, r1, #16
 8014a88:	fb06 5504 	mla	r5, r6, r4, r5
 8014a8c:	9c01      	ldr	r4, [sp, #4]
 8014a8e:	5d64      	ldrb	r4, [r4, r5]
 8014a90:	2cff      	cmp	r4, #255	; 0xff
 8014a92:	d10b      	bne.n	8014aac <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8014a94:	9c00      	ldr	r4, [sp, #0]
 8014a96:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 8014a9a:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 8014a9e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8014aa0:	4421      	add	r1, r4
 8014aa2:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8014aa4:	f109 0901 	add.w	r9, r9, #1
 8014aa8:	4422      	add	r2, r4
 8014aaa:	e7e4      	b.n	8014a76 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8014aac:	2c00      	cmp	r4, #0
 8014aae:	d0f6      	beq.n	8014a9e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8014ab0:	9e00      	ldr	r6, [sp, #0]
 8014ab2:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 8014ab6:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8014aba:	b2a7      	uxth	r7, r4
 8014abc:	122e      	asrs	r6, r5, #8
 8014abe:	43e4      	mvns	r4, r4
 8014ac0:	b2e4      	uxtb	r4, r4
 8014ac2:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8014ac6:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8014aca:	fb16 f604 	smulbb	r6, r6, r4
 8014ace:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8014ad2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8014ad6:	00ed      	lsls	r5, r5, #3
 8014ad8:	fb0c 6c07 	mla	ip, ip, r7, r6
 8014adc:	b2ed      	uxtb	r5, r5
 8014ade:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8014ae2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8014ae6:	fb15 f504 	smulbb	r5, r5, r4
 8014aea:	fa5f fe8e 	uxtb.w	lr, lr
 8014aee:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8014af2:	fb0e 5507 	mla	r5, lr, r7, r5
 8014af6:	fb1a fa04 	smulbb	sl, sl, r4
 8014afa:	fa1f fc8c 	uxth.w	ip, ip
 8014afe:	b2ad      	uxth	r5, r5
 8014b00:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8014b04:	fb06 a607 	mla	r6, r6, r7, sl
 8014b08:	f10c 0401 	add.w	r4, ip, #1
 8014b0c:	f105 0a01 	add.w	sl, r5, #1
 8014b10:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8014b14:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8014b18:	b2b6      	uxth	r6, r6
 8014b1a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8014b1e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8014b22:	ea4a 0c0c 	orr.w	ip, sl, ip
 8014b26:	f106 0a01 	add.w	sl, r6, #1
 8014b2a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8014b2e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014b32:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8014b36:	ea4c 0c0a 	orr.w	ip, ip, sl
 8014b3a:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8014b3e:	e7ae      	b.n	8014a9e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8014b40:	b005      	add	sp, #20
 8014b42:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014b46 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014b46:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014b4a:	b085      	sub	sp, #20
 8014b4c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8014b4e:	9203      	str	r2, [sp, #12]
 8014b50:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 8014b54:	9201      	str	r2, [sp, #4]
 8014b56:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8014b5a:	9100      	str	r1, [sp, #0]
 8014b5c:	6841      	ldr	r1, [r0, #4]
 8014b5e:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 8014b62:	fb01 2404 	mla	r4, r1, r4, r2
 8014b66:	6802      	ldr	r2, [r0, #0]
 8014b68:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8014b6c:	f8de 2000 	ldr.w	r2, [lr]
 8014b70:	9202      	str	r2, [sp, #8]
 8014b72:	9a01      	ldr	r2, [sp, #4]
 8014b74:	43d6      	mvns	r6, r2
 8014b76:	b2f6      	uxtb	r6, r6
 8014b78:	9a00      	ldr	r2, [sp, #0]
 8014b7a:	2a00      	cmp	r2, #0
 8014b7c:	dc03      	bgt.n	8014b86 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8014b7e:	9a03      	ldr	r2, [sp, #12]
 8014b80:	2a00      	cmp	r2, #0
 8014b82:	f340 8124 	ble.w	8014dce <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8014b86:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8014b88:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8014b8c:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8014b90:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8014b94:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8014b96:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8014b9a:	2b00      	cmp	r3, #0
 8014b9c:	dd0e      	ble.n	8014bbc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8014b9e:	1408      	asrs	r0, r1, #16
 8014ba0:	d405      	bmi.n	8014bae <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8014ba2:	4560      	cmp	r0, ip
 8014ba4:	da03      	bge.n	8014bae <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8014ba6:	1410      	asrs	r0, r2, #16
 8014ba8:	d401      	bmi.n	8014bae <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8014baa:	42b8      	cmp	r0, r7
 8014bac:	db07      	blt.n	8014bbe <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8014bae:	9811      	ldr	r0, [sp, #68]	; 0x44
 8014bb0:	4401      	add	r1, r0
 8014bb2:	9812      	ldr	r0, [sp, #72]	; 0x48
 8014bb4:	3b01      	subs	r3, #1
 8014bb6:	4402      	add	r2, r0
 8014bb8:	3402      	adds	r4, #2
 8014bba:	e7ee      	b.n	8014b9a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8014bbc:	d06e      	beq.n	8014c9c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8014bbe:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8014bc0:	1e58      	subs	r0, r3, #1
 8014bc2:	fb05 1500 	mla	r5, r5, r0, r1
 8014bc6:	142d      	asrs	r5, r5, #16
 8014bc8:	d45c      	bmi.n	8014c84 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8014bca:	4565      	cmp	r5, ip
 8014bcc:	da5a      	bge.n	8014c84 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8014bce:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8014bd0:	fb05 2000 	mla	r0, r5, r0, r2
 8014bd4:	1400      	asrs	r0, r0, #16
 8014bd6:	d455      	bmi.n	8014c84 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8014bd8:	42b8      	cmp	r0, r7
 8014bda:	da53      	bge.n	8014c84 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8014bdc:	f8bd b004 	ldrh.w	fp, [sp, #4]
 8014be0:	4699      	mov	r9, r3
 8014be2:	46a2      	mov	sl, r4
 8014be4:	f1b9 0f00 	cmp.w	r9, #0
 8014be8:	dd54      	ble.n	8014c94 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8014bea:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8014bee:	140d      	asrs	r5, r1, #16
 8014bf0:	1410      	asrs	r0, r2, #16
 8014bf2:	fb07 5000 	mla	r0, r7, r0, r5
 8014bf6:	9d02      	ldr	r5, [sp, #8]
 8014bf8:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8014bfc:	f8ba 5000 	ldrh.w	r5, [sl]
 8014c00:	122f      	asrs	r7, r5, #8
 8014c02:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8014c06:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8014c0a:	fb17 f706 	smulbb	r7, r7, r6
 8014c0e:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8014c12:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8014c16:	00ed      	lsls	r5, r5, #3
 8014c18:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8014c1c:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8014c20:	10c7      	asrs	r7, r0, #3
 8014c22:	b2ed      	uxtb	r5, r5
 8014c24:	00c0      	lsls	r0, r0, #3
 8014c26:	fb18 f806 	smulbb	r8, r8, r6
 8014c2a:	fb15 f506 	smulbb	r5, r5, r6
 8014c2e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8014c32:	b2c0      	uxtb	r0, r0
 8014c34:	fa1f fc8c 	uxth.w	ip, ip
 8014c38:	fb07 870b 	mla	r7, r7, fp, r8
 8014c3c:	fb00 500b 	mla	r0, r0, fp, r5
 8014c40:	b280      	uxth	r0, r0
 8014c42:	b2bf      	uxth	r7, r7
 8014c44:	f10c 0501 	add.w	r5, ip, #1
 8014c48:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8014c4c:	f107 0801 	add.w	r8, r7, #1
 8014c50:	1c45      	adds	r5, r0, #1
 8014c52:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8014c56:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8014c5a:	9811      	ldr	r0, [sp, #68]	; 0x44
 8014c5c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8014c60:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8014c64:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8014c68:	ea45 0c0c 	orr.w	ip, r5, ip
 8014c6c:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8014c70:	4401      	add	r1, r0
 8014c72:	9812      	ldr	r0, [sp, #72]	; 0x48
 8014c74:	ea4c 0c08 	orr.w	ip, ip, r8
 8014c78:	f82a cb02 	strh.w	ip, [sl], #2
 8014c7c:	4402      	add	r2, r0
 8014c7e:	f109 39ff 	add.w	r9, r9, #4294967295
 8014c82:	e7af      	b.n	8014be4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8014c84:	f8bd a004 	ldrh.w	sl, [sp, #4]
 8014c88:	f04f 0800 	mov.w	r8, #0
 8014c8c:	eb03 0008 	add.w	r0, r3, r8
 8014c90:	2800      	cmp	r0, #0
 8014c92:	dc41      	bgt.n	8014d18 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8014c94:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014c98:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014c9c:	9b00      	ldr	r3, [sp, #0]
 8014c9e:	2b00      	cmp	r3, #0
 8014ca0:	f340 8095 	ble.w	8014dce <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8014ca4:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014ca8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8014cac:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8014cb0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014cb2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014cb6:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014cba:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014cbe:	eef0 6a62 	vmov.f32	s13, s5
 8014cc2:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014cc6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014cca:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014cce:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 8014cd2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014cd6:	eef0 6a43 	vmov.f32	s13, s6
 8014cda:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014cde:	ee12 2a90 	vmov	r2, s5
 8014ce2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014ce6:	fb92 f3f3 	sdiv	r3, r2, r3
 8014cea:	ee13 2a10 	vmov	r2, s6
 8014cee:	9311      	str	r3, [sp, #68]	; 0x44
 8014cf0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014cf2:	fb92 f3f3 	sdiv	r3, r2, r3
 8014cf6:	9312      	str	r3, [sp, #72]	; 0x48
 8014cf8:	9b00      	ldr	r3, [sp, #0]
 8014cfa:	9a03      	ldr	r2, [sp, #12]
 8014cfc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014d00:	3b01      	subs	r3, #1
 8014d02:	9300      	str	r3, [sp, #0]
 8014d04:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 8014d08:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014d0a:	eeb0 3a67 	vmov.f32	s6, s15
 8014d0e:	bf08      	it	eq
 8014d10:	4613      	moveq	r3, r2
 8014d12:	eef0 2a47 	vmov.f32	s5, s14
 8014d16:	e72f      	b.n	8014b78 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8014d18:	140f      	asrs	r7, r1, #16
 8014d1a:	d451      	bmi.n	8014dc0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8014d1c:	f8de 5008 	ldr.w	r5, [lr, #8]
 8014d20:	42bd      	cmp	r5, r7
 8014d22:	dd4d      	ble.n	8014dc0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8014d24:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8014d28:	d44a      	bmi.n	8014dc0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8014d2a:	f8de 000c 	ldr.w	r0, [lr, #12]
 8014d2e:	4560      	cmp	r0, ip
 8014d30:	dd46      	ble.n	8014dc0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8014d32:	b22d      	sxth	r5, r5
 8014d34:	fb0c 7505 	mla	r5, ip, r5, r7
 8014d38:	9802      	ldr	r0, [sp, #8]
 8014d3a:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 8014d3e:	f06f 0501 	mvn.w	r5, #1
 8014d42:	fb05 fb08 	mul.w	fp, r5, r8
 8014d46:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8014d4a:	f834 500b 	ldrh.w	r5, [r4, fp]
 8014d4e:	122f      	asrs	r7, r5, #8
 8014d50:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8014d54:	fb17 f706 	smulbb	r7, r7, r6
 8014d58:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8014d5c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8014d60:	00ed      	lsls	r5, r5, #3
 8014d62:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8014d66:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8014d6a:	10c7      	asrs	r7, r0, #3
 8014d6c:	b2ed      	uxtb	r5, r5
 8014d6e:	00c0      	lsls	r0, r0, #3
 8014d70:	fb19 f906 	smulbb	r9, r9, r6
 8014d74:	fb15 f506 	smulbb	r5, r5, r6
 8014d78:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8014d7c:	b2c0      	uxtb	r0, r0
 8014d7e:	fa1f fc8c 	uxth.w	ip, ip
 8014d82:	fb07 970a 	mla	r7, r7, sl, r9
 8014d86:	fb00 500a 	mla	r0, r0, sl, r5
 8014d8a:	b2bf      	uxth	r7, r7
 8014d8c:	b280      	uxth	r0, r0
 8014d8e:	f10c 0501 	add.w	r5, ip, #1
 8014d92:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8014d96:	f107 0901 	add.w	r9, r7, #1
 8014d9a:	1c45      	adds	r5, r0, #1
 8014d9c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8014da0:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8014da4:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8014da8:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8014dac:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8014db0:	ea45 0c0c 	orr.w	ip, r5, ip
 8014db4:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8014db8:	ea4c 0c09 	orr.w	ip, ip, r9
 8014dbc:	f824 c00b 	strh.w	ip, [r4, fp]
 8014dc0:	9811      	ldr	r0, [sp, #68]	; 0x44
 8014dc2:	4401      	add	r1, r0
 8014dc4:	9812      	ldr	r0, [sp, #72]	; 0x48
 8014dc6:	f108 38ff 	add.w	r8, r8, #4294967295
 8014dca:	4402      	add	r2, r0
 8014dcc:	e75e      	b.n	8014c8c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 8014dce:	b005      	add	sp, #20
 8014dd0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014dd4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014dd4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014dd8:	b085      	sub	sp, #20
 8014dda:	4693      	mov	fp, r2
 8014ddc:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8014dde:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8014de0:	6870      	ldr	r0, [r6, #4]
 8014de2:	9101      	str	r1, [sp, #4]
 8014de4:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8014de8:	fb00 2404 	mla	r4, r0, r4, r2
 8014dec:	6832      	ldr	r2, [r6, #0]
 8014dee:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 8014df2:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8014df6:	682a      	ldr	r2, [r5, #0]
 8014df8:	9202      	str	r2, [sp, #8]
 8014dfa:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8014dfe:	9a01      	ldr	r2, [sp, #4]
 8014e00:	2a00      	cmp	r2, #0
 8014e02:	dc03      	bgt.n	8014e0c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8014e04:	f1bb 0f00 	cmp.w	fp, #0
 8014e08:	f340 809a 	ble.w	8014f40 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8014e0c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8014e0e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8014e12:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8014e16:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8014e1a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8014e1c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8014e20:	2b00      	cmp	r3, #0
 8014e22:	dd0c      	ble.n	8014e3e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8014e24:	1406      	asrs	r6, r0, #16
 8014e26:	d405      	bmi.n	8014e34 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8014e28:	454e      	cmp	r6, r9
 8014e2a:	da03      	bge.n	8014e34 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8014e2c:	1416      	asrs	r6, r2, #16
 8014e2e:	d401      	bmi.n	8014e34 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8014e30:	4546      	cmp	r6, r8
 8014e32:	db05      	blt.n	8014e40 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8014e34:	4470      	add	r0, lr
 8014e36:	4462      	add	r2, ip
 8014e38:	3b01      	subs	r3, #1
 8014e3a:	3402      	adds	r4, #2
 8014e3c:	e7f0      	b.n	8014e20 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8014e3e:	d00f      	beq.n	8014e60 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8014e40:	1e5e      	subs	r6, r3, #1
 8014e42:	fb0e 0706 	mla	r7, lr, r6, r0
 8014e46:	143f      	asrs	r7, r7, #16
 8014e48:	d541      	bpl.n	8014ece <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 8014e4a:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8014e4e:	4698      	mov	r8, r3
 8014e50:	9603      	str	r6, [sp, #12]
 8014e52:	f1b8 0f00 	cmp.w	r8, #0
 8014e56:	dc56      	bgt.n	8014f06 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 8014e58:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014e5c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014e60:	9b01      	ldr	r3, [sp, #4]
 8014e62:	2b00      	cmp	r3, #0
 8014e64:	dd6c      	ble.n	8014f40 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8014e66:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014e6a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014e6e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8014e72:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014e74:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014e78:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014e7c:	eeb0 6a62 	vmov.f32	s12, s5
 8014e80:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014e84:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014e88:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014e8c:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8014e90:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014e94:	eeb0 6a43 	vmov.f32	s12, s6
 8014e98:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014e9c:	ee12 2a90 	vmov	r2, s5
 8014ea0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014ea4:	fb92 fef3 	sdiv	lr, r2, r3
 8014ea8:	ee13 2a10 	vmov	r2, s6
 8014eac:	fb92 fcf3 	sdiv	ip, r2, r3
 8014eb0:	9b01      	ldr	r3, [sp, #4]
 8014eb2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014eb6:	3b01      	subs	r3, #1
 8014eb8:	9301      	str	r3, [sp, #4]
 8014eba:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8014ebe:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014ec0:	eeb0 3a67 	vmov.f32	s6, s15
 8014ec4:	bf08      	it	eq
 8014ec6:	465b      	moveq	r3, fp
 8014ec8:	eef0 2a47 	vmov.f32	s5, s14
 8014ecc:	e797      	b.n	8014dfe <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8014ece:	454f      	cmp	r7, r9
 8014ed0:	dabb      	bge.n	8014e4a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8014ed2:	fb0c 2606 	mla	r6, ip, r6, r2
 8014ed6:	1436      	asrs	r6, r6, #16
 8014ed8:	d4b7      	bmi.n	8014e4a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8014eda:	4546      	cmp	r6, r8
 8014edc:	dab5      	bge.n	8014e4a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8014ede:	461e      	mov	r6, r3
 8014ee0:	46a0      	mov	r8, r4
 8014ee2:	2e00      	cmp	r6, #0
 8014ee4:	ddb8      	ble.n	8014e58 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8014ee6:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8014eea:	9902      	ldr	r1, [sp, #8]
 8014eec:	1417      	asrs	r7, r2, #16
 8014eee:	ea4f 4920 	mov.w	r9, r0, asr #16
 8014ef2:	fb0a 9707 	mla	r7, sl, r7, r9
 8014ef6:	4470      	add	r0, lr
 8014ef8:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8014efc:	f828 7b02 	strh.w	r7, [r8], #2
 8014f00:	4462      	add	r2, ip
 8014f02:	3e01      	subs	r6, #1
 8014f04:	e7ed      	b.n	8014ee2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 8014f06:	ea5f 4920 	movs.w	r9, r0, asr #16
 8014f0a:	d414      	bmi.n	8014f36 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8014f0c:	68ae      	ldr	r6, [r5, #8]
 8014f0e:	454e      	cmp	r6, r9
 8014f10:	dd11      	ble.n	8014f36 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8014f12:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8014f16:	d40e      	bmi.n	8014f36 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8014f18:	68ef      	ldr	r7, [r5, #12]
 8014f1a:	4557      	cmp	r7, sl
 8014f1c:	dd0b      	ble.n	8014f36 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8014f1e:	b236      	sxth	r6, r6
 8014f20:	fb0a 9606 	mla	r6, sl, r6, r9
 8014f24:	9f02      	ldr	r7, [sp, #8]
 8014f26:	f06f 0101 	mvn.w	r1, #1
 8014f2a:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8014f2e:	fb01 f608 	mul.w	r6, r1, r8
 8014f32:	9903      	ldr	r1, [sp, #12]
 8014f34:	538f      	strh	r7, [r1, r6]
 8014f36:	4470      	add	r0, lr
 8014f38:	4462      	add	r2, ip
 8014f3a:	f108 38ff 	add.w	r8, r8, #4294967295
 8014f3e:	e788      	b.n	8014e52 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8014f40:	b005      	add	sp, #20
 8014f42:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014f46 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014f46:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014f4a:	b087      	sub	sp, #28
 8014f4c:	468b      	mov	fp, r1
 8014f4e:	9815      	ldr	r0, [sp, #84]	; 0x54
 8014f50:	9203      	str	r2, [sp, #12]
 8014f52:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8014f56:	9204      	str	r2, [sp, #16]
 8014f58:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 8014f5c:	6841      	ldr	r1, [r0, #4]
 8014f5e:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 8014f62:	fb01 2505 	mla	r5, r1, r5, r2
 8014f66:	6802      	ldr	r2, [r0, #0]
 8014f68:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 8014f6c:	f8d9 2000 	ldr.w	r2, [r9]
 8014f70:	9201      	str	r2, [sp, #4]
 8014f72:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8014f76:	f1bb 0f00 	cmp.w	fp, #0
 8014f7a:	dc03      	bgt.n	8014f84 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8014f7c:	9a03      	ldr	r2, [sp, #12]
 8014f7e:	2a00      	cmp	r2, #0
 8014f80:	f340 8159 	ble.w	8015236 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8014f84:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8014f86:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8014f8a:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8014f8e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8014f92:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8014f94:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8014f98:	2b00      	cmp	r3, #0
 8014f9a:	dd0e      	ble.n	8014fba <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8014f9c:	1402      	asrs	r2, r0, #16
 8014f9e:	d405      	bmi.n	8014fac <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8014fa0:	42ba      	cmp	r2, r7
 8014fa2:	da03      	bge.n	8014fac <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8014fa4:	140a      	asrs	r2, r1, #16
 8014fa6:	d401      	bmi.n	8014fac <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8014fa8:	42b2      	cmp	r2, r6
 8014faa:	db07      	blt.n	8014fbc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8014fac:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8014fae:	4410      	add	r0, r2
 8014fb0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8014fb2:	3b01      	subs	r3, #1
 8014fb4:	4411      	add	r1, r2
 8014fb6:	3502      	adds	r5, #2
 8014fb8:	e7ee      	b.n	8014f98 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8014fba:	d017      	beq.n	8014fec <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8014fbc:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8014fbe:	1e5a      	subs	r2, r3, #1
 8014fc0:	fb04 0402 	mla	r4, r4, r2, r0
 8014fc4:	1424      	asrs	r4, r4, #16
 8014fc6:	d409      	bmi.n	8014fdc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8014fc8:	42bc      	cmp	r4, r7
 8014fca:	da07      	bge.n	8014fdc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8014fcc:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8014fce:	fb04 1202 	mla	r2, r4, r2, r1
 8014fd2:	1412      	asrs	r2, r2, #16
 8014fd4:	d402      	bmi.n	8014fdc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8014fd6:	42b2      	cmp	r2, r6
 8014fd8:	f2c0 80bf 	blt.w	801515a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8014fdc:	2700      	movs	r7, #0
 8014fde:	19da      	adds	r2, r3, r7
 8014fe0:	2a00      	cmp	r2, #0
 8014fe2:	dc3e      	bgt.n	8015062 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8014fe4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014fe8:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8014fec:	f1bb 0f00 	cmp.w	fp, #0
 8014ff0:	f340 8121 	ble.w	8015236 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8014ff4:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014ff8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014ffc:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8015000:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015002:	f1bb 0b01 	subs.w	fp, fp, #1
 8015006:	ee31 1a05 	vadd.f32	s2, s2, s10
 801500a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801500e:	eeb0 6a62 	vmov.f32	s12, s5
 8015012:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015016:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801501a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801501e:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8015022:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015026:	eeb0 6a43 	vmov.f32	s12, s6
 801502a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801502e:	ee12 2a90 	vmov	r2, s5
 8015032:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015036:	fb92 f3f3 	sdiv	r3, r2, r3
 801503a:	ee13 2a10 	vmov	r2, s6
 801503e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015042:	9313      	str	r3, [sp, #76]	; 0x4c
 8015044:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015046:	fb92 f3f3 	sdiv	r3, r2, r3
 801504a:	9a03      	ldr	r2, [sp, #12]
 801504c:	9314      	str	r3, [sp, #80]	; 0x50
 801504e:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8015052:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015054:	eeb0 3a67 	vmov.f32	s6, s15
 8015058:	bf08      	it	eq
 801505a:	4613      	moveq	r3, r2
 801505c:	eef0 2a47 	vmov.f32	s5, s14
 8015060:	e789      	b.n	8014f76 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8015062:	1406      	asrs	r6, r0, #16
 8015064:	d42d      	bmi.n	80150c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8015066:	f8d9 4008 	ldr.w	r4, [r9, #8]
 801506a:	42b4      	cmp	r4, r6
 801506c:	dd29      	ble.n	80150c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801506e:	ea5f 4c21 	movs.w	ip, r1, asr #16
 8015072:	d426      	bmi.n	80150c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8015074:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8015078:	4562      	cmp	r2, ip
 801507a:	dd22      	ble.n	80150c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801507c:	b224      	sxth	r4, r4
 801507e:	9a01      	ldr	r2, [sp, #4]
 8015080:	fb0c 6404 	mla	r4, ip, r4, r6
 8015084:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 8015088:	0e22      	lsrs	r2, r4, #24
 801508a:	d01a      	beq.n	80150c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801508c:	9e04      	ldr	r6, [sp, #16]
 801508e:	4372      	muls	r2, r6
 8015090:	1c56      	adds	r6, r2, #1
 8015092:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8015096:	1212      	asrs	r2, r2, #8
 8015098:	0a26      	lsrs	r6, r4, #8
 801509a:	2aff      	cmp	r2, #255	; 0xff
 801509c:	9605      	str	r6, [sp, #20]
 801509e:	d116      	bne.n	80150ce <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 80150a0:	f06f 0201 	mvn.w	r2, #1
 80150a4:	fb02 fc07 	mul.w	ip, r2, r7
 80150a8:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 80150ac:	0962      	lsrs	r2, r4, #5
 80150ae:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80150b2:	f026 0607 	bic.w	r6, r6, #7
 80150b6:	4316      	orrs	r6, r2
 80150b8:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 80150bc:	4326      	orrs	r6, r4
 80150be:	f825 600c 	strh.w	r6, [r5, ip]
 80150c2:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80150c4:	4410      	add	r0, r2
 80150c6:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80150c8:	3f01      	subs	r7, #1
 80150ca:	4411      	add	r1, r2
 80150cc:	e787      	b.n	8014fde <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80150ce:	f06f 0601 	mvn.w	r6, #1
 80150d2:	437e      	muls	r6, r7
 80150d4:	fa1f fa82 	uxth.w	sl, r2
 80150d8:	f835 8006 	ldrh.w	r8, [r5, r6]
 80150dc:	9602      	str	r6, [sp, #8]
 80150de:	ea4f 2e28 	mov.w	lr, r8, asr #8
 80150e2:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 80150e6:	43d2      	mvns	r2, r2
 80150e8:	b2d2      	uxtb	r2, r2
 80150ea:	fb1c fc0a 	smulbb	ip, ip, sl
 80150ee:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 80150f2:	fb0e ce02 	mla	lr, lr, r2, ip
 80150f6:	b2e4      	uxtb	r4, r4
 80150f8:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 80150fc:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8015100:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8015104:	fa5f f888 	uxtb.w	r8, r8
 8015108:	fb14 f40a 	smulbb	r4, r4, sl
 801510c:	fb08 4402 	mla	r4, r8, r2, r4
 8015110:	fa1f fe8e 	uxth.w	lr, lr
 8015114:	fb16 f60a 	smulbb	r6, r6, sl
 8015118:	b2a4      	uxth	r4, r4
 801511a:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801511e:	fb0c 6c02 	mla	ip, ip, r2, r6
 8015122:	f10e 0201 	add.w	r2, lr, #1
 8015126:	1c66      	adds	r6, r4, #1
 8015128:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801512c:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8015130:	fa1f fc8c 	uxth.w	ip, ip
 8015134:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8015138:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801513c:	ea46 0e0e 	orr.w	lr, r6, lr
 8015140:	f10c 0601 	add.w	r6, ip, #1
 8015144:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8015148:	0976      	lsrs	r6, r6, #5
 801514a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801514e:	9a02      	ldr	r2, [sp, #8]
 8015150:	ea4e 0e06 	orr.w	lr, lr, r6
 8015154:	f825 e002 	strh.w	lr, [r5, r2]
 8015158:	e7b3      	b.n	80150c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801515a:	f04f 0800 	mov.w	r8, #0
 801515e:	eba3 0208 	sub.w	r2, r3, r8
 8015162:	2a00      	cmp	r2, #0
 8015164:	f77f af3e 	ble.w	8014fe4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8015168:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 801516c:	1404      	asrs	r4, r0, #16
 801516e:	140a      	asrs	r2, r1, #16
 8015170:	fb06 4202 	mla	r2, r6, r2, r4
 8015174:	9c01      	ldr	r4, [sp, #4]
 8015176:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 801517a:	0e22      	lsrs	r2, r4, #24
 801517c:	d016      	beq.n	80151ac <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801517e:	9e04      	ldr	r6, [sp, #16]
 8015180:	4372      	muls	r2, r6
 8015182:	1c56      	adds	r6, r2, #1
 8015184:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8015188:	1212      	asrs	r2, r2, #8
 801518a:	2aff      	cmp	r2, #255	; 0xff
 801518c:	ea4f 2614 	mov.w	r6, r4, lsr #8
 8015190:	d113      	bne.n	80151ba <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 8015192:	0962      	lsrs	r2, r4, #5
 8015194:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 8015198:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801519c:	f026 0607 	bic.w	r6, r6, #7
 80151a0:	4316      	orrs	r6, r2
 80151a2:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 80151a6:	4326      	orrs	r6, r4
 80151a8:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 80151ac:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80151ae:	4410      	add	r0, r2
 80151b0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80151b2:	f108 0801 	add.w	r8, r8, #1
 80151b6:	4411      	add	r1, r2
 80151b8:	e7d1      	b.n	801515e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 80151ba:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 80151be:	fa1f fa82 	uxth.w	sl, r2
 80151c2:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80151c6:	f3c4 4707 	ubfx	r7, r4, #16, #8
 80151ca:	43d2      	mvns	r2, r2
 80151cc:	b2d2      	uxtb	r2, r2
 80151ce:	fb17 f70a 	smulbb	r7, r7, sl
 80151d2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80151d6:	fb0c 7c02 	mla	ip, ip, r2, r7
 80151da:	b2e4      	uxtb	r4, r4
 80151dc:	ea4f 07ee 	mov.w	r7, lr, asr #3
 80151e0:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80151e4:	fa5f fe8e 	uxtb.w	lr, lr
 80151e8:	fb14 f40a 	smulbb	r4, r4, sl
 80151ec:	fb0e 4402 	mla	r4, lr, r2, r4
 80151f0:	b2f6      	uxtb	r6, r6
 80151f2:	fa1f fc8c 	uxth.w	ip, ip
 80151f6:	fb16 f60a 	smulbb	r6, r6, sl
 80151fa:	b2a4      	uxth	r4, r4
 80151fc:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8015200:	fb07 6702 	mla	r7, r7, r2, r6
 8015204:	f10c 0201 	add.w	r2, ip, #1
 8015208:	1c66      	adds	r6, r4, #1
 801520a:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801520e:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8015212:	b2bf      	uxth	r7, r7
 8015214:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8015218:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801521c:	ea46 0c0c 	orr.w	ip, r6, ip
 8015220:	1c7e      	adds	r6, r7, #1
 8015222:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8015226:	0976      	lsrs	r6, r6, #5
 8015228:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801522c:	ea4c 0c06 	orr.w	ip, ip, r6
 8015230:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 8015234:	e7ba      	b.n	80151ac <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 8015236:	b007      	add	sp, #28
 8015238:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801523c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801523c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015240:	b085      	sub	sp, #20
 8015242:	468b      	mov	fp, r1
 8015244:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8015246:	9203      	str	r2, [sp, #12]
 8015248:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801524c:	6841      	ldr	r1, [r0, #4]
 801524e:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 8015252:	fb01 2404 	mla	r4, r1, r4, r2
 8015256:	6802      	ldr	r2, [r0, #0]
 8015258:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801525c:	f8d8 2000 	ldr.w	r2, [r8]
 8015260:	9201      	str	r2, [sp, #4]
 8015262:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8015266:	f1bb 0f00 	cmp.w	fp, #0
 801526a:	dc03      	bgt.n	8015274 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801526c:	9a03      	ldr	r2, [sp, #12]
 801526e:	2a00      	cmp	r2, #0
 8015270:	f340 814f 	ble.w	8015512 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8015274:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8015276:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801527a:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801527e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8015282:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8015284:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8015288:	2b00      	cmp	r3, #0
 801528a:	dd0e      	ble.n	80152aa <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801528c:	1408      	asrs	r0, r1, #16
 801528e:	d405      	bmi.n	801529c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8015290:	42b8      	cmp	r0, r7
 8015292:	da03      	bge.n	801529c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8015294:	1410      	asrs	r0, r2, #16
 8015296:	d401      	bmi.n	801529c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8015298:	42b0      	cmp	r0, r6
 801529a:	db07      	blt.n	80152ac <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801529c:	9811      	ldr	r0, [sp, #68]	; 0x44
 801529e:	4401      	add	r1, r0
 80152a0:	9812      	ldr	r0, [sp, #72]	; 0x48
 80152a2:	3b01      	subs	r3, #1
 80152a4:	4402      	add	r2, r0
 80152a6:	3402      	adds	r4, #2
 80152a8:	e7ee      	b.n	8015288 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 80152aa:	d017      	beq.n	80152dc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80152ac:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80152ae:	1e58      	subs	r0, r3, #1
 80152b0:	fb05 1500 	mla	r5, r5, r0, r1
 80152b4:	142d      	asrs	r5, r5, #16
 80152b6:	d409      	bmi.n	80152cc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80152b8:	42bd      	cmp	r5, r7
 80152ba:	da07      	bge.n	80152cc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80152bc:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80152be:	fb05 2000 	mla	r0, r5, r0, r2
 80152c2:	1400      	asrs	r0, r0, #16
 80152c4:	d402      	bmi.n	80152cc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80152c6:	42b0      	cmp	r0, r6
 80152c8:	f2c0 80ba 	blt.w	8015440 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80152cc:	2600      	movs	r6, #0
 80152ce:	1998      	adds	r0, r3, r6
 80152d0:	2800      	cmp	r0, #0
 80152d2:	dc3e      	bgt.n	8015352 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80152d4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80152d8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80152dc:	f1bb 0f00 	cmp.w	fp, #0
 80152e0:	f340 8117 	ble.w	8015512 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 80152e4:	ee30 0a04 	vadd.f32	s0, s0, s8
 80152e8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80152ec:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80152f0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80152f2:	f1bb 0b01 	subs.w	fp, fp, #1
 80152f6:	ee31 1a05 	vadd.f32	s2, s2, s10
 80152fa:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80152fe:	eeb0 6a62 	vmov.f32	s12, s5
 8015302:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015306:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801530a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801530e:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8015312:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015316:	eeb0 6a43 	vmov.f32	s12, s6
 801531a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801531e:	ee12 2a90 	vmov	r2, s5
 8015322:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015326:	fb92 f3f3 	sdiv	r3, r2, r3
 801532a:	ee13 2a10 	vmov	r2, s6
 801532e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015332:	9311      	str	r3, [sp, #68]	; 0x44
 8015334:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015336:	fb92 f3f3 	sdiv	r3, r2, r3
 801533a:	9a03      	ldr	r2, [sp, #12]
 801533c:	9312      	str	r3, [sp, #72]	; 0x48
 801533e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8015342:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015344:	eeb0 3a67 	vmov.f32	s6, s15
 8015348:	bf08      	it	eq
 801534a:	4613      	moveq	r3, r2
 801534c:	eef0 2a47 	vmov.f32	s5, s14
 8015350:	e789      	b.n	8015266 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8015352:	140f      	asrs	r7, r1, #16
 8015354:	d424      	bmi.n	80153a0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8015356:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801535a:	42bd      	cmp	r5, r7
 801535c:	dd20      	ble.n	80153a0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801535e:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8015362:	d41d      	bmi.n	80153a0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8015364:	f8d8 000c 	ldr.w	r0, [r8, #12]
 8015368:	4560      	cmp	r0, ip
 801536a:	dd19      	ble.n	80153a0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801536c:	b22d      	sxth	r5, r5
 801536e:	fb0c 7505 	mla	r5, ip, r5, r7
 8015372:	9801      	ldr	r0, [sp, #4]
 8015374:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 8015378:	0e07      	lsrs	r7, r0, #24
 801537a:	2fff      	cmp	r7, #255	; 0xff
 801537c:	d116      	bne.n	80153ac <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801537e:	f06f 0501 	mvn.w	r5, #1
 8015382:	fb05 f706 	mul.w	r7, r5, r6
 8015386:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801538a:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801538e:	0945      	lsrs	r5, r0, #5
 8015390:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8015394:	ea4c 0505 	orr.w	r5, ip, r5
 8015398:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801539c:	4305      	orrs	r5, r0
 801539e:	53e5      	strh	r5, [r4, r7]
 80153a0:	9811      	ldr	r0, [sp, #68]	; 0x44
 80153a2:	4401      	add	r1, r0
 80153a4:	9812      	ldr	r0, [sp, #72]	; 0x48
 80153a6:	3e01      	subs	r6, #1
 80153a8:	4402      	add	r2, r0
 80153aa:	e790      	b.n	80152ce <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80153ac:	b2fd      	uxtb	r5, r7
 80153ae:	2f00      	cmp	r7, #0
 80153b0:	d0f6      	beq.n	80153a0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80153b2:	f06f 0701 	mvn.w	r7, #1
 80153b6:	4377      	muls	r7, r6
 80153b8:	fa1f f985 	uxth.w	r9, r5
 80153bc:	f834 e007 	ldrh.w	lr, [r4, r7]
 80153c0:	9702      	str	r7, [sp, #8]
 80153c2:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80153c6:	f3c0 4707 	ubfx	r7, r0, #16, #8
 80153ca:	43ed      	mvns	r5, r5
 80153cc:	b2ed      	uxtb	r5, r5
 80153ce:	fb17 f709 	smulbb	r7, r7, r9
 80153d2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80153d6:	fb0c 7c05 	mla	ip, ip, r5, r7
 80153da:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 80153de:	ea4f 07ee 	mov.w	r7, lr, asr #3
 80153e2:	b2c0      	uxtb	r0, r0
 80153e4:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80153e8:	fa5f fe8e 	uxtb.w	lr, lr
 80153ec:	fb10 f009 	smulbb	r0, r0, r9
 80153f0:	fb0e 0005 	mla	r0, lr, r5, r0
 80153f4:	b280      	uxth	r0, r0
 80153f6:	fa1f fc8c 	uxth.w	ip, ip
 80153fa:	fb1a fa09 	smulbb	sl, sl, r9
 80153fe:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8015402:	fb07 a705 	mla	r7, r7, r5, sl
 8015406:	f100 0a01 	add.w	sl, r0, #1
 801540a:	f10c 0501 	add.w	r5, ip, #1
 801540e:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8015412:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8015416:	b2bf      	uxth	r7, r7
 8015418:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801541c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8015420:	ea4a 0c0c 	orr.w	ip, sl, ip
 8015424:	f107 0a01 	add.w	sl, r7, #1
 8015428:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801542c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015430:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015434:	9802      	ldr	r0, [sp, #8]
 8015436:	ea4c 0c0a 	orr.w	ip, ip, sl
 801543a:	f824 c000 	strh.w	ip, [r4, r0]
 801543e:	e7af      	b.n	80153a0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8015440:	f04f 0e00 	mov.w	lr, #0
 8015444:	eba3 000e 	sub.w	r0, r3, lr
 8015448:	2800      	cmp	r0, #0
 801544a:	f77f af43 	ble.w	80152d4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801544e:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8015452:	140d      	asrs	r5, r1, #16
 8015454:	1410      	asrs	r0, r2, #16
 8015456:	fb06 5000 	mla	r0, r6, r0, r5
 801545a:	9d01      	ldr	r5, [sp, #4]
 801545c:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8015460:	0e2e      	lsrs	r6, r5, #24
 8015462:	2eff      	cmp	r6, #255	; 0xff
 8015464:	d112      	bne.n	801548c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 8015466:	482c      	ldr	r0, [pc, #176]	; (8015518 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 8015468:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801546c:	0968      	lsrs	r0, r5, #5
 801546e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8015472:	4330      	orrs	r0, r6
 8015474:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8015478:	4328      	orrs	r0, r5
 801547a:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 801547e:	9811      	ldr	r0, [sp, #68]	; 0x44
 8015480:	4401      	add	r1, r0
 8015482:	9812      	ldr	r0, [sp, #72]	; 0x48
 8015484:	f10e 0e01 	add.w	lr, lr, #1
 8015488:	4402      	add	r2, r0
 801548a:	e7db      	b.n	8015444 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 801548c:	b2f0      	uxtb	r0, r6
 801548e:	2e00      	cmp	r6, #0
 8015490:	d0f5      	beq.n	801547e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8015492:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8015496:	fa1f f980 	uxth.w	r9, r0
 801549a:	ea4f 272c 	mov.w	r7, ip, asr #8
 801549e:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80154a2:	43c0      	mvns	r0, r0
 80154a4:	b2c0      	uxtb	r0, r0
 80154a6:	fb16 f609 	smulbb	r6, r6, r9
 80154aa:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80154ae:	fb07 6700 	mla	r7, r7, r0, r6
 80154b2:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80154b6:	ea4f 06ec 	mov.w	r6, ip, asr #3
 80154ba:	b2ed      	uxtb	r5, r5
 80154bc:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80154c0:	fa5f fc8c 	uxtb.w	ip, ip
 80154c4:	fb15 f509 	smulbb	r5, r5, r9
 80154c8:	fb0c 5500 	mla	r5, ip, r0, r5
 80154cc:	b2bf      	uxth	r7, r7
 80154ce:	fb1a fa09 	smulbb	sl, sl, r9
 80154d2:	b2ad      	uxth	r5, r5
 80154d4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80154d8:	fb06 a600 	mla	r6, r6, r0, sl
 80154dc:	1c78      	adds	r0, r7, #1
 80154de:	f105 0a01 	add.w	sl, r5, #1
 80154e2:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 80154e6:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80154ea:	b2b6      	uxth	r6, r6
 80154ec:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80154f0:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80154f4:	ea4a 0707 	orr.w	r7, sl, r7
 80154f8:	f106 0a01 	add.w	sl, r6, #1
 80154fc:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8015500:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015504:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015508:	ea47 070a 	orr.w	r7, r7, sl
 801550c:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 8015510:	e7b5      	b.n	801547e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8015512:	b005      	add	sp, #20
 8015514:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015518:	fffff800 	.word	0xfffff800

0801551c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801551c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015520:	b087      	sub	sp, #28
 8015522:	468b      	mov	fp, r1
 8015524:	9815      	ldr	r0, [sp, #84]	; 0x54
 8015526:	9203      	str	r2, [sp, #12]
 8015528:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801552c:	9204      	str	r2, [sp, #16]
 801552e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8015532:	6841      	ldr	r1, [r0, #4]
 8015534:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 8015538:	fb01 2404 	mla	r4, r1, r4, r2
 801553c:	6802      	ldr	r2, [r0, #0]
 801553e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8015542:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8015546:	3201      	adds	r2, #1
 8015548:	f022 0201 	bic.w	r2, r2, #1
 801554c:	9200      	str	r2, [sp, #0]
 801554e:	f8d9 2000 	ldr.w	r2, [r9]
 8015552:	9201      	str	r2, [sp, #4]
 8015554:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8015558:	f1bb 0f00 	cmp.w	fp, #0
 801555c:	dc03      	bgt.n	8015566 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801555e:	9a03      	ldr	r2, [sp, #12]
 8015560:	2a00      	cmp	r2, #0
 8015562:	f340 8169 	ble.w	8015838 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8015566:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8015568:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801556c:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8015570:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8015574:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8015576:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801557a:	2b00      	cmp	r3, #0
 801557c:	dd0e      	ble.n	801559c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801557e:	1402      	asrs	r2, r0, #16
 8015580:	d405      	bmi.n	801558e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8015582:	42ba      	cmp	r2, r7
 8015584:	da03      	bge.n	801558e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8015586:	140a      	asrs	r2, r1, #16
 8015588:	d401      	bmi.n	801558e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801558a:	42b2      	cmp	r2, r6
 801558c:	db07      	blt.n	801559e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801558e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8015590:	4410      	add	r0, r2
 8015592:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8015594:	3b01      	subs	r3, #1
 8015596:	4411      	add	r1, r2
 8015598:	3402      	adds	r4, #2
 801559a:	e7ee      	b.n	801557a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801559c:	d017      	beq.n	80155ce <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801559e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80155a0:	1e5a      	subs	r2, r3, #1
 80155a2:	fb05 0502 	mla	r5, r5, r2, r0
 80155a6:	142d      	asrs	r5, r5, #16
 80155a8:	d409      	bmi.n	80155be <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80155aa:	42bd      	cmp	r5, r7
 80155ac:	da07      	bge.n	80155be <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80155ae:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80155b0:	fb05 1202 	mla	r2, r5, r2, r1
 80155b4:	1412      	asrs	r2, r2, #16
 80155b6:	d402      	bmi.n	80155be <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80155b8:	42b2      	cmp	r2, r6
 80155ba:	f2c0 80c7 	blt.w	801574c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 80155be:	2700      	movs	r7, #0
 80155c0:	19da      	adds	r2, r3, r7
 80155c2:	2a00      	cmp	r2, #0
 80155c4:	dc3e      	bgt.n	8015644 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 80155c6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80155ca:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80155ce:	f1bb 0f00 	cmp.w	fp, #0
 80155d2:	f340 8131 	ble.w	8015838 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 80155d6:	ee30 0a04 	vadd.f32	s0, s0, s8
 80155da:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80155de:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80155e2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80155e4:	f1bb 0b01 	subs.w	fp, fp, #1
 80155e8:	ee31 1a05 	vadd.f32	s2, s2, s10
 80155ec:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80155f0:	eeb0 6a62 	vmov.f32	s12, s5
 80155f4:	ee61 7a27 	vmul.f32	s15, s2, s15
 80155f8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80155fc:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015600:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8015604:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015608:	eeb0 6a43 	vmov.f32	s12, s6
 801560c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015610:	ee12 2a90 	vmov	r2, s5
 8015614:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015618:	fb92 f3f3 	sdiv	r3, r2, r3
 801561c:	ee13 2a10 	vmov	r2, s6
 8015620:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015624:	9313      	str	r3, [sp, #76]	; 0x4c
 8015626:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015628:	fb92 f3f3 	sdiv	r3, r2, r3
 801562c:	9a03      	ldr	r2, [sp, #12]
 801562e:	9314      	str	r3, [sp, #80]	; 0x50
 8015630:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8015634:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015636:	eeb0 3a67 	vmov.f32	s6, s15
 801563a:	bf08      	it	eq
 801563c:	4613      	moveq	r3, r2
 801563e:	eef0 2a47 	vmov.f32	s5, s14
 8015642:	e789      	b.n	8015558 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8015644:	1405      	asrs	r5, r0, #16
 8015646:	d435      	bmi.n	80156b4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8015648:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801564c:	42aa      	cmp	r2, r5
 801564e:	dd31      	ble.n	80156b4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8015650:	140e      	asrs	r6, r1, #16
 8015652:	d42f      	bmi.n	80156b4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8015654:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8015658:	42b2      	cmp	r2, r6
 801565a:	dd2b      	ble.n	80156b4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801565c:	9a00      	ldr	r2, [sp, #0]
 801565e:	fb06 5502 	mla	r5, r6, r2, r5
 8015662:	086a      	lsrs	r2, r5, #1
 8015664:	9e01      	ldr	r6, [sp, #4]
 8015666:	5cb2      	ldrb	r2, [r6, r2]
 8015668:	07ee      	lsls	r6, r5, #31
 801566a:	bf54      	ite	pl
 801566c:	f002 020f 	andpl.w	r2, r2, #15
 8015670:	1112      	asrmi	r2, r2, #4
 8015672:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8015676:	b2d2      	uxtb	r2, r2
 8015678:	b1e2      	cbz	r2, 80156b4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801567a:	9d04      	ldr	r5, [sp, #16]
 801567c:	436a      	muls	r2, r5
 801567e:	1c55      	adds	r5, r2, #1
 8015680:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8015684:	4d6e      	ldr	r5, [pc, #440]	; (8015840 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 8015686:	682d      	ldr	r5, [r5, #0]
 8015688:	1212      	asrs	r2, r2, #8
 801568a:	0a2e      	lsrs	r6, r5, #8
 801568c:	2aff      	cmp	r2, #255	; 0xff
 801568e:	9605      	str	r6, [sp, #20]
 8015690:	d116      	bne.n	80156c0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8015692:	f06f 0201 	mvn.w	r2, #1
 8015696:	fb02 fc07 	mul.w	ip, r2, r7
 801569a:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801569e:	096a      	lsrs	r2, r5, #5
 80156a0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80156a4:	f026 0607 	bic.w	r6, r6, #7
 80156a8:	4316      	orrs	r6, r2
 80156aa:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 80156ae:	432e      	orrs	r6, r5
 80156b0:	f824 600c 	strh.w	r6, [r4, ip]
 80156b4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80156b6:	4410      	add	r0, r2
 80156b8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80156ba:	3f01      	subs	r7, #1
 80156bc:	4411      	add	r1, r2
 80156be:	e77f      	b.n	80155c0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 80156c0:	f06f 0601 	mvn.w	r6, #1
 80156c4:	437e      	muls	r6, r7
 80156c6:	fa1f fa82 	uxth.w	sl, r2
 80156ca:	f834 8006 	ldrh.w	r8, [r4, r6]
 80156ce:	9602      	str	r6, [sp, #8]
 80156d0:	ea4f 2e28 	mov.w	lr, r8, asr #8
 80156d4:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 80156d8:	43d2      	mvns	r2, r2
 80156da:	b2d2      	uxtb	r2, r2
 80156dc:	fb1c fc0a 	smulbb	ip, ip, sl
 80156e0:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 80156e4:	fb0e ce02 	mla	lr, lr, r2, ip
 80156e8:	b2ed      	uxtb	r5, r5
 80156ea:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 80156ee:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80156f2:	f89d 6014 	ldrb.w	r6, [sp, #20]
 80156f6:	fa5f f888 	uxtb.w	r8, r8
 80156fa:	fb15 f50a 	smulbb	r5, r5, sl
 80156fe:	fb08 5502 	mla	r5, r8, r2, r5
 8015702:	fa1f fe8e 	uxth.w	lr, lr
 8015706:	fb16 f60a 	smulbb	r6, r6, sl
 801570a:	b2ad      	uxth	r5, r5
 801570c:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8015710:	fb0c 6c02 	mla	ip, ip, r2, r6
 8015714:	f10e 0201 	add.w	r2, lr, #1
 8015718:	1c6e      	adds	r6, r5, #1
 801571a:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801571e:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 8015722:	fa1f fc8c 	uxth.w	ip, ip
 8015726:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801572a:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801572e:	ea46 0e0e 	orr.w	lr, r6, lr
 8015732:	f10c 0601 	add.w	r6, ip, #1
 8015736:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801573a:	0976      	lsrs	r6, r6, #5
 801573c:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8015740:	9a02      	ldr	r2, [sp, #8]
 8015742:	ea4e 0e06 	orr.w	lr, lr, r6
 8015746:	f824 e002 	strh.w	lr, [r4, r2]
 801574a:	e7b3      	b.n	80156b4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801574c:	f04f 0800 	mov.w	r8, #0
 8015750:	eba3 0208 	sub.w	r2, r3, r8
 8015754:	2a00      	cmp	r2, #0
 8015756:	f77f af36 	ble.w	80155c6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801575a:	9e00      	ldr	r6, [sp, #0]
 801575c:	1402      	asrs	r2, r0, #16
 801575e:	140d      	asrs	r5, r1, #16
 8015760:	fb06 2505 	mla	r5, r6, r5, r2
 8015764:	086a      	lsrs	r2, r5, #1
 8015766:	9e01      	ldr	r6, [sp, #4]
 8015768:	5cb2      	ldrb	r2, [r6, r2]
 801576a:	07ed      	lsls	r5, r5, #31
 801576c:	bf54      	ite	pl
 801576e:	f002 020f 	andpl.w	r2, r2, #15
 8015772:	1112      	asrmi	r2, r2, #4
 8015774:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8015778:	b2d2      	uxtb	r2, r2
 801577a:	b1c2      	cbz	r2, 80157ae <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801577c:	9d04      	ldr	r5, [sp, #16]
 801577e:	436a      	muls	r2, r5
 8015780:	1c55      	adds	r5, r2, #1
 8015782:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8015786:	4d2e      	ldr	r5, [pc, #184]	; (8015840 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 8015788:	1212      	asrs	r2, r2, #8
 801578a:	682e      	ldr	r6, [r5, #0]
 801578c:	2aff      	cmp	r2, #255	; 0xff
 801578e:	ea4f 2516 	mov.w	r5, r6, lsr #8
 8015792:	d113      	bne.n	80157bc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8015794:	0972      	lsrs	r2, r6, #5
 8015796:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801579a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801579e:	f025 0507 	bic.w	r5, r5, #7
 80157a2:	4315      	orrs	r5, r2
 80157a4:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 80157a8:	4335      	orrs	r5, r6
 80157aa:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 80157ae:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80157b0:	4410      	add	r0, r2
 80157b2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80157b4:	f108 0801 	add.w	r8, r8, #1
 80157b8:	4411      	add	r1, r2
 80157ba:	e7c9      	b.n	8015750 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 80157bc:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 80157c0:	fa1f fa82 	uxth.w	sl, r2
 80157c4:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80157c8:	f3c6 4707 	ubfx	r7, r6, #16, #8
 80157cc:	43d2      	mvns	r2, r2
 80157ce:	b2d2      	uxtb	r2, r2
 80157d0:	fb17 f70a 	smulbb	r7, r7, sl
 80157d4:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80157d8:	fb0c 7c02 	mla	ip, ip, r2, r7
 80157dc:	b2f6      	uxtb	r6, r6
 80157de:	ea4f 07ee 	mov.w	r7, lr, asr #3
 80157e2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80157e6:	fa5f fe8e 	uxtb.w	lr, lr
 80157ea:	fb16 f60a 	smulbb	r6, r6, sl
 80157ee:	fb0e 6602 	mla	r6, lr, r2, r6
 80157f2:	b2ed      	uxtb	r5, r5
 80157f4:	fa1f fc8c 	uxth.w	ip, ip
 80157f8:	fb15 f50a 	smulbb	r5, r5, sl
 80157fc:	b2b6      	uxth	r6, r6
 80157fe:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8015802:	fb07 5702 	mla	r7, r7, r2, r5
 8015806:	f10c 0201 	add.w	r2, ip, #1
 801580a:	1c75      	adds	r5, r6, #1
 801580c:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8015810:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 8015814:	b2bf      	uxth	r7, r7
 8015816:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801581a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801581e:	ea45 0c0c 	orr.w	ip, r5, ip
 8015822:	1c7d      	adds	r5, r7, #1
 8015824:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 8015828:	096d      	lsrs	r5, r5, #5
 801582a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801582e:	ea4c 0c05 	orr.w	ip, ip, r5
 8015832:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 8015836:	e7ba      	b.n	80157ae <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8015838:	b007      	add	sp, #28
 801583a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801583e:	bf00      	nop
 8015840:	20017468 	.word	0x20017468

08015844 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015844:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015848:	b087      	sub	sp, #28
 801584a:	f8df 830c 	ldr.w	r8, [pc, #780]	; 8015b58 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 801584e:	9815      	ldr	r0, [sp, #84]	; 0x54
 8015850:	9205      	str	r2, [sp, #20]
 8015852:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8015856:	9101      	str	r1, [sp, #4]
 8015858:	6841      	ldr	r1, [r0, #4]
 801585a:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 801585e:	fb01 2404 	mla	r4, r1, r4, r2
 8015862:	6802      	ldr	r2, [r0, #0]
 8015864:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8015868:	f8db 2008 	ldr.w	r2, [fp, #8]
 801586c:	3201      	adds	r2, #1
 801586e:	f022 0201 	bic.w	r2, r2, #1
 8015872:	9202      	str	r2, [sp, #8]
 8015874:	f8db 2000 	ldr.w	r2, [fp]
 8015878:	9203      	str	r2, [sp, #12]
 801587a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801587e:	9a01      	ldr	r2, [sp, #4]
 8015880:	2a00      	cmp	r2, #0
 8015882:	dc03      	bgt.n	801588c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8015884:	9a05      	ldr	r2, [sp, #20]
 8015886:	2a00      	cmp	r2, #0
 8015888:	f340 8162 	ble.w	8015b50 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801588c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801588e:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 8015892:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 8015896:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801589a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801589c:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80158a0:	2b00      	cmp	r3, #0
 80158a2:	dd0e      	ble.n	80158c2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80158a4:	1402      	asrs	r2, r0, #16
 80158a6:	d405      	bmi.n	80158b4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80158a8:	42ba      	cmp	r2, r7
 80158aa:	da03      	bge.n	80158b4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80158ac:	140a      	asrs	r2, r1, #16
 80158ae:	d401      	bmi.n	80158b4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80158b0:	42b2      	cmp	r2, r6
 80158b2:	db07      	blt.n	80158c4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80158b4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80158b6:	4410      	add	r0, r2
 80158b8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80158ba:	3b01      	subs	r3, #1
 80158bc:	4411      	add	r1, r2
 80158be:	3402      	adds	r4, #2
 80158c0:	e7ee      	b.n	80158a0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 80158c2:	d017      	beq.n	80158f4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 80158c4:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80158c6:	1e5a      	subs	r2, r3, #1
 80158c8:	fb05 0502 	mla	r5, r5, r2, r0
 80158cc:	142d      	asrs	r5, r5, #16
 80158ce:	d409      	bmi.n	80158e4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80158d0:	42bd      	cmp	r5, r7
 80158d2:	da07      	bge.n	80158e4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80158d4:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80158d6:	fb05 1202 	mla	r2, r5, r2, r1
 80158da:	1412      	asrs	r2, r2, #16
 80158dc:	d402      	bmi.n	80158e4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80158de:	42b2      	cmp	r2, r6
 80158e0:	f2c0 80c3 	blt.w	8015a6a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 80158e4:	2500      	movs	r5, #0
 80158e6:	195a      	adds	r2, r3, r5
 80158e8:	2a00      	cmp	r2, #0
 80158ea:	dc3f      	bgt.n	801596c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 80158ec:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80158f0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80158f4:	9b01      	ldr	r3, [sp, #4]
 80158f6:	2b00      	cmp	r3, #0
 80158f8:	f340 812a 	ble.w	8015b50 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 80158fc:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015900:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015904:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8015908:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801590a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801590e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015912:	eeb0 6a62 	vmov.f32	s12, s5
 8015916:	ee61 7a27 	vmul.f32	s15, s2, s15
 801591a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801591e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015922:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8015926:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801592a:	eeb0 6a43 	vmov.f32	s12, s6
 801592e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015932:	ee12 2a90 	vmov	r2, s5
 8015936:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801593a:	fb92 f3f3 	sdiv	r3, r2, r3
 801593e:	ee13 2a10 	vmov	r2, s6
 8015942:	9313      	str	r3, [sp, #76]	; 0x4c
 8015944:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015946:	fb92 f3f3 	sdiv	r3, r2, r3
 801594a:	9314      	str	r3, [sp, #80]	; 0x50
 801594c:	9b01      	ldr	r3, [sp, #4]
 801594e:	9a05      	ldr	r2, [sp, #20]
 8015950:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015954:	3b01      	subs	r3, #1
 8015956:	9301      	str	r3, [sp, #4]
 8015958:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801595c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801595e:	eeb0 3a67 	vmov.f32	s6, s15
 8015962:	bf08      	it	eq
 8015964:	4613      	moveq	r3, r2
 8015966:	eef0 2a47 	vmov.f32	s5, s14
 801596a:	e788      	b.n	801587e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801596c:	1406      	asrs	r6, r0, #16
 801596e:	d42c      	bmi.n	80159ca <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8015970:	f8db 2008 	ldr.w	r2, [fp, #8]
 8015974:	42b2      	cmp	r2, r6
 8015976:	dd28      	ble.n	80159ca <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8015978:	140f      	asrs	r7, r1, #16
 801597a:	d426      	bmi.n	80159ca <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801597c:	f8db 200c 	ldr.w	r2, [fp, #12]
 8015980:	42ba      	cmp	r2, r7
 8015982:	dd22      	ble.n	80159ca <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8015984:	9a02      	ldr	r2, [sp, #8]
 8015986:	fb07 6602 	mla	r6, r7, r2, r6
 801598a:	0872      	lsrs	r2, r6, #1
 801598c:	9f03      	ldr	r7, [sp, #12]
 801598e:	5cba      	ldrb	r2, [r7, r2]
 8015990:	07f6      	lsls	r6, r6, #31
 8015992:	bf54      	ite	pl
 8015994:	f002 020f 	andpl.w	r2, r2, #15
 8015998:	1112      	asrmi	r2, r2, #4
 801599a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801599e:	b2d2      	uxtb	r2, r2
 80159a0:	2aff      	cmp	r2, #255	; 0xff
 80159a2:	d118      	bne.n	80159d6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 80159a4:	f8d8 2000 	ldr.w	r2, [r8]
 80159a8:	f06f 0601 	mvn.w	r6, #1
 80159ac:	fb06 f705 	mul.w	r7, r6, r5
 80159b0:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
 80159b4:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 80159b8:	0956      	lsrs	r6, r2, #5
 80159ba:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80159be:	ea4c 0606 	orr.w	r6, ip, r6
 80159c2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80159c6:	4316      	orrs	r6, r2
 80159c8:	53e6      	strh	r6, [r4, r7]
 80159ca:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80159cc:	4410      	add	r0, r2
 80159ce:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80159d0:	3d01      	subs	r5, #1
 80159d2:	4411      	add	r1, r2
 80159d4:	e787      	b.n	80158e6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80159d6:	2a00      	cmp	r2, #0
 80159d8:	d0f7      	beq.n	80159ca <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80159da:	f06f 0601 	mvn.w	r6, #1
 80159de:	436e      	muls	r6, r5
 80159e0:	f8d8 c000 	ldr.w	ip, [r8]
 80159e4:	f834 e006 	ldrh.w	lr, [r4, r6]
 80159e8:	9604      	str	r6, [sp, #16]
 80159ea:	fa1f f982 	uxth.w	r9, r2
 80159ee:	ea4f 272e 	mov.w	r7, lr, asr #8
 80159f2:	f3cc 4607 	ubfx	r6, ip, #16, #8
 80159f6:	43d2      	mvns	r2, r2
 80159f8:	b2d2      	uxtb	r2, r2
 80159fa:	fb16 f609 	smulbb	r6, r6, r9
 80159fe:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8015a02:	fb07 6702 	mla	r7, r7, r2, r6
 8015a06:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 8015a0a:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8015a0e:	fa5f fc8c 	uxtb.w	ip, ip
 8015a12:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8015a16:	fa5f fe8e 	uxtb.w	lr, lr
 8015a1a:	fb1c fc09 	smulbb	ip, ip, r9
 8015a1e:	fb0e cc02 	mla	ip, lr, r2, ip
 8015a22:	b2bf      	uxth	r7, r7
 8015a24:	fb1a fa09 	smulbb	sl, sl, r9
 8015a28:	fa1f fc8c 	uxth.w	ip, ip
 8015a2c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8015a30:	fb06 a602 	mla	r6, r6, r2, sl
 8015a34:	1c7a      	adds	r2, r7, #1
 8015a36:	f10c 0a01 	add.w	sl, ip, #1
 8015a3a:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8015a3e:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 8015a42:	b2b6      	uxth	r6, r6
 8015a44:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015a48:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8015a4c:	ea4a 0707 	orr.w	r7, sl, r7
 8015a50:	f106 0a01 	add.w	sl, r6, #1
 8015a54:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8015a58:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015a5c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015a60:	9a04      	ldr	r2, [sp, #16]
 8015a62:	ea47 070a 	orr.w	r7, r7, sl
 8015a66:	52a7      	strh	r7, [r4, r2]
 8015a68:	e7af      	b.n	80159ca <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8015a6a:	f04f 0e00 	mov.w	lr, #0
 8015a6e:	eba3 020e 	sub.w	r2, r3, lr
 8015a72:	2a00      	cmp	r2, #0
 8015a74:	f77f af3a 	ble.w	80158ec <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8015a78:	9e02      	ldr	r6, [sp, #8]
 8015a7a:	1402      	asrs	r2, r0, #16
 8015a7c:	140d      	asrs	r5, r1, #16
 8015a7e:	fb06 2505 	mla	r5, r6, r5, r2
 8015a82:	086a      	lsrs	r2, r5, #1
 8015a84:	9e03      	ldr	r6, [sp, #12]
 8015a86:	5cb2      	ldrb	r2, [r6, r2]
 8015a88:	07ed      	lsls	r5, r5, #31
 8015a8a:	bf54      	ite	pl
 8015a8c:	f002 020f 	andpl.w	r2, r2, #15
 8015a90:	1112      	asrmi	r2, r2, #4
 8015a92:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8015a96:	b2d2      	uxtb	r2, r2
 8015a98:	2aff      	cmp	r2, #255	; 0xff
 8015a9a:	d115      	bne.n	8015ac8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 8015a9c:	f8d8 5000 	ldr.w	r5, [r8]
 8015aa0:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
 8015aa4:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 8015aa8:	096a      	lsrs	r2, r5, #5
 8015aaa:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8015aae:	4332      	orrs	r2, r6
 8015ab0:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8015ab4:	432a      	orrs	r2, r5
 8015ab6:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 8015aba:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8015abc:	4410      	add	r0, r2
 8015abe:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8015ac0:	f10e 0e01 	add.w	lr, lr, #1
 8015ac4:	4411      	add	r1, r2
 8015ac6:	e7d2      	b.n	8015a6e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8015ac8:	2a00      	cmp	r2, #0
 8015aca:	d0f6      	beq.n	8015aba <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8015acc:	f8d8 7000 	ldr.w	r7, [r8]
 8015ad0:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8015ad4:	fa1f f982 	uxth.w	r9, r2
 8015ad8:	ea4f 262c 	mov.w	r6, ip, asr #8
 8015adc:	f3c7 4507 	ubfx	r5, r7, #16, #8
 8015ae0:	43d2      	mvns	r2, r2
 8015ae2:	b2d2      	uxtb	r2, r2
 8015ae4:	fb15 f509 	smulbb	r5, r5, r9
 8015ae8:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8015aec:	fb06 5602 	mla	r6, r6, r2, r5
 8015af0:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 8015af4:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8015af8:	b2ff      	uxtb	r7, r7
 8015afa:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8015afe:	fa5f fc8c 	uxtb.w	ip, ip
 8015b02:	fb17 f709 	smulbb	r7, r7, r9
 8015b06:	fb0c 7702 	mla	r7, ip, r2, r7
 8015b0a:	b2b6      	uxth	r6, r6
 8015b0c:	fb1a fa09 	smulbb	sl, sl, r9
 8015b10:	b2bf      	uxth	r7, r7
 8015b12:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8015b16:	fb05 a502 	mla	r5, r5, r2, sl
 8015b1a:	1c72      	adds	r2, r6, #1
 8015b1c:	f107 0a01 	add.w	sl, r7, #1
 8015b20:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8015b24:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8015b28:	b2ad      	uxth	r5, r5
 8015b2a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015b2e:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8015b32:	ea4a 0606 	orr.w	r6, sl, r6
 8015b36:	f105 0a01 	add.w	sl, r5, #1
 8015b3a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8015b3e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015b42:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015b46:	ea46 060a 	orr.w	r6, r6, sl
 8015b4a:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 8015b4e:	e7b4      	b.n	8015aba <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8015b50:	b007      	add	sp, #28
 8015b52:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015b56:	bf00      	nop
 8015b58:	20017468 	.word	0x20017468

08015b5c <_ZN8touchgfx8LCD16bppD1Ev>:
 8015b5c:	4770      	bx	lr

08015b5e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 8015b5e:	4770      	bx	lr

08015b60 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 8015b60:	4770      	bx	lr

08015b62 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 8015b62:	4770      	bx	lr

08015b64 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 8015b64:	4770      	bx	lr

08015b66 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8015b66:	4770      	bx	lr

08015b68 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8015b68:	4770      	bx	lr

08015b6a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8015b6a:	4770      	bx	lr

08015b6c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8015b6c:	4770      	bx	lr

08015b6e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8015b6e:	4770      	bx	lr

08015b70 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8015b70:	4770      	bx	lr

08015b72 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8015b72:	4770      	bx	lr

08015b74 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8015b74:	4770      	bx	lr

08015b76 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8015b76:	4770      	bx	lr

08015b78 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8015b78:	4770      	bx	lr

08015b7a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8015b7a:	4770      	bx	lr

08015b7c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 8015b7c:	4770      	bx	lr

08015b7e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8015b7e:	4770      	bx	lr

08015b80 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8015b80:	4770      	bx	lr

08015b82 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8015b82:	4770      	bx	lr

08015b84 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8015b84:	4770      	bx	lr

08015b86 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8015b86:	4770      	bx	lr

08015b88 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 8015b88:	4770      	bx	lr

08015b8a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 8015b8a:	4770      	bx	lr

08015b8c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 8015b8c:	4770      	bx	lr

08015b8e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8015b8e:	4770      	bx	lr

08015b90 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8015b90:	4770      	bx	lr

08015b92 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8015b92:	4770      	bx	lr

08015b94 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8015b94:	4770      	bx	lr

08015b96 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 8015b96:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8015b9a:	b088      	sub	sp, #32
 8015b9c:	ac08      	add	r4, sp, #32
 8015b9e:	4606      	mov	r6, r0
 8015ba0:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 8015ba4:	4620      	mov	r0, r4
 8015ba6:	4688      	mov	r8, r1
 8015ba8:	4691      	mov	r9, r2
 8015baa:	f7fd fc65 	bl	8013478 <_ZNK8touchgfx6Bitmap7getDataEv>
 8015bae:	6833      	ldr	r3, [r6, #0]
 8015bb0:	4605      	mov	r5, r0
 8015bb2:	4620      	mov	r0, r4
 8015bb4:	699f      	ldr	r7, [r3, #24]
 8015bb6:	f7fd fb73 	bl	80132a0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8015bba:	4682      	mov	sl, r0
 8015bbc:	4620      	mov	r0, r4
 8015bbe:	f7fd fba3 	bl	8013308 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8015bc2:	9500      	str	r5, [sp, #0]
 8015bc4:	e9cd a001 	strd	sl, r0, [sp, #4]
 8015bc8:	464b      	mov	r3, r9
 8015bca:	a806      	add	r0, sp, #24
 8015bcc:	4642      	mov	r2, r8
 8015bce:	4631      	mov	r1, r6
 8015bd0:	47b8      	blx	r7
 8015bd2:	4628      	mov	r0, r5
 8015bd4:	b008      	add	sp, #32
 8015bd6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

08015bdc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 8015bdc:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8015be0:	2300      	movs	r3, #0
 8015be2:	9300      	str	r3, [sp, #0]
 8015be4:	4b3d      	ldr	r3, [pc, #244]	; (8015cdc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 8015be6:	781b      	ldrb	r3, [r3, #0]
 8015be8:	2b00      	cmp	r3, #0
 8015bea:	d137      	bne.n	8015c5c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 8015bec:	4a3c      	ldr	r2, [pc, #240]	; (8015ce0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8015bee:	f9b2 2000 	ldrsh.w	r2, [r2]
 8015bf2:	f8ad 2004 	strh.w	r2, [sp, #4]
 8015bf6:	2b00      	cmp	r3, #0
 8015bf8:	d132      	bne.n	8015c60 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 8015bfa:	4b3a      	ldr	r3, [pc, #232]	; (8015ce4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 8015bfc:	f9b3 3000 	ldrsh.w	r3, [r3]
 8015c00:	6808      	ldr	r0, [r1, #0]
 8015c02:	6849      	ldr	r1, [r1, #4]
 8015c04:	f8ad 3006 	strh.w	r3, [sp, #6]
 8015c08:	ac02      	add	r4, sp, #8
 8015c0a:	ab02      	add	r3, sp, #8
 8015c0c:	c303      	stmia	r3!, {r0, r1}
 8015c0e:	4669      	mov	r1, sp
 8015c10:	4620      	mov	r0, r4
 8015c12:	f7f9 ff7f 	bl	800fb14 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8015c16:	4668      	mov	r0, sp
 8015c18:	f7f9 ff54 	bl	800fac4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8015c1c:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8015c20:	f8bd 2000 	ldrh.w	r2, [sp]
 8015c24:	4d30      	ldr	r5, [pc, #192]	; (8015ce8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 8015c26:	4413      	add	r3, r2
 8015c28:	f8ad 3008 	strh.w	r3, [sp, #8]
 8015c2c:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8015c30:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8015c34:	6828      	ldr	r0, [r5, #0]
 8015c36:	4413      	add	r3, r2
 8015c38:	f8ad 300a 	strh.w	r3, [sp, #10]
 8015c3c:	6803      	ldr	r3, [r0, #0]
 8015c3e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8015c40:	4798      	blx	r3
 8015c42:	f010 0f01 	tst.w	r0, #1
 8015c46:	462f      	mov	r7, r5
 8015c48:	d00c      	beq.n	8015c64 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 8015c4a:	6828      	ldr	r0, [r5, #0]
 8015c4c:	6803      	ldr	r3, [r0, #0]
 8015c4e:	e894 0006 	ldmia.w	r4, {r1, r2}
 8015c52:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8015c54:	4798      	blx	r3
 8015c56:	b004      	add	sp, #16
 8015c58:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8015c5c:	4a21      	ldr	r2, [pc, #132]	; (8015ce4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 8015c5e:	e7c6      	b.n	8015bee <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 8015c60:	4b1f      	ldr	r3, [pc, #124]	; (8015ce0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8015c62:	e7cb      	b.n	8015bfc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 8015c64:	6838      	ldr	r0, [r7, #0]
 8015c66:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 8015c6a:	6803      	ldr	r3, [r0, #0]
 8015c6c:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 8015c70:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8015c72:	4798      	blx	r3
 8015c74:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 8015c78:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8015c7c:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 8015c80:	fb16 3602 	smlabb	r6, r6, r2, r3
 8015c84:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8015c88:	6838      	ldr	r0, [r7, #0]
 8015c8a:	6803      	ldr	r3, [r0, #0]
 8015c8c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8015c8e:	4798      	blx	r3
 8015c90:	4a13      	ldr	r2, [pc, #76]	; (8015ce0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8015c92:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 8015c96:	8813      	ldrh	r3, [r2, #0]
 8015c98:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8015c9c:	fb03 1404 	mla	r4, r3, r4, r1
 8015ca0:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8015ca4:	435d      	muls	r5, r3
 8015ca6:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8015caa:	ea4f 0848 	mov.w	r8, r8, lsl #1
 8015cae:	4691      	mov	r9, r2
 8015cb0:	6838      	ldr	r0, [r7, #0]
 8015cb2:	42ac      	cmp	r4, r5
 8015cb4:	6803      	ldr	r3, [r0, #0]
 8015cb6:	d20e      	bcs.n	8015cd6 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 8015cb8:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
 8015cbc:	4632      	mov	r2, r6
 8015cbe:	4643      	mov	r3, r8
 8015cc0:	4621      	mov	r1, r4
 8015cc2:	47d0      	blx	sl
 8015cc4:	f8b9 3000 	ldrh.w	r3, [r9]
 8015cc8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015ccc:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8015cd0:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8015cd4:	e7ec      	b.n	8015cb0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 8015cd6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8015cd8:	4798      	blx	r3
 8015cda:	e7bc      	b.n	8015c56 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 8015cdc:	20017450 	.word	0x20017450
 8015ce0:	20017452 	.word	0x20017452
 8015ce4:	20017454 	.word	0x20017454
 8015ce8:	20017458 	.word	0x20017458

08015cec <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 8015cec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015cf0:	b08b      	sub	sp, #44	; 0x2c
 8015cf2:	460f      	mov	r7, r1
 8015cf4:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 8015cf8:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 8015cfc:	4616      	mov	r6, r2
 8015cfe:	f1bb 0f00 	cmp.w	fp, #0
 8015d02:	d049      	beq.n	8015d98 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 8015d04:	6810      	ldr	r0, [r2, #0]
 8015d06:	6851      	ldr	r1, [r2, #4]
 8015d08:	ad06      	add	r5, sp, #24
 8015d0a:	c503      	stmia	r5!, {r0, r1}
 8015d0c:	6818      	ldr	r0, [r3, #0]
 8015d0e:	6859      	ldr	r1, [r3, #4]
 8015d10:	ad08      	add	r5, sp, #32
 8015d12:	c503      	stmia	r5!, {r0, r1}
 8015d14:	a806      	add	r0, sp, #24
 8015d16:	f7f9 fed5 	bl	800fac4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8015d1a:	4631      	mov	r1, r6
 8015d1c:	a808      	add	r0, sp, #32
 8015d1e:	f7f9 fef9 	bl	800fb14 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8015d22:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8015d26:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 8015d2a:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 8015d2e:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 8015d32:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 8015d36:	fb16 2103 	smlabb	r1, r6, r3, r2
 8015d3a:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 8015d3e:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 8015d42:	4f5f      	ldr	r7, [pc, #380]	; (8015ec0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 8015d44:	440a      	add	r2, r1
 8015d46:	f8ad 2020 	strh.w	r2, [sp, #32]
 8015d4a:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8015d4e:	6838      	ldr	r0, [r7, #0]
 8015d50:	4413      	add	r3, r2
 8015d52:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8015d56:	6803      	ldr	r3, [r0, #0]
 8015d58:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8015d5a:	4798      	blx	r3
 8015d5c:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8015d60:	46b9      	mov	r9, r7
 8015d62:	d01c      	beq.n	8015d9e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb2>
 8015d64:	f010 0f04 	tst.w	r0, #4
 8015d68:	d01d      	beq.n	8015da6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 8015d6a:	f8d9 0000 	ldr.w	r0, [r9]
 8015d6e:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 8015d72:	6801      	ldr	r1, [r0, #0]
 8015d74:	f8cd b00c 	str.w	fp, [sp, #12]
 8015d78:	2700      	movs	r7, #0
 8015d7a:	e9cd 4704 	strd	r4, r7, [sp, #16]
 8015d7e:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 8015d82:	9402      	str	r4, [sp, #8]
 8015d84:	b2ad      	uxth	r5, r5
 8015d86:	fa1f f488 	uxth.w	r4, r8
 8015d8a:	9501      	str	r5, [sp, #4]
 8015d8c:	9400      	str	r4, [sp, #0]
 8015d8e:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 8015d90:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8015d94:	4631      	mov	r1, r6
 8015d96:	47a0      	blx	r4
 8015d98:	b00b      	add	sp, #44	; 0x2c
 8015d9a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015d9e:	b914      	cbnz	r4, 8015da6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 8015da0:	f010 0f01 	tst.w	r0, #1
 8015da4:	e7e0      	b.n	8015d68 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7c>
 8015da6:	f8d9 0000 	ldr.w	r0, [r9]
 8015daa:	6803      	ldr	r3, [r0, #0]
 8015dac:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8015dae:	4798      	blx	r3
 8015db0:	4b44      	ldr	r3, [pc, #272]	; (8015ec4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 8015db2:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 8015db6:	881a      	ldrh	r2, [r3, #0]
 8015db8:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 8015dbc:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8015dc0:	fb02 1404 	mla	r4, r2, r4, r1
 8015dc4:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8015dc8:	469a      	mov	sl, r3
 8015dca:	fb05 f502 	mul.w	r5, r5, r2
 8015dce:	ea4f 0748 	mov.w	r7, r8, lsl #1
 8015dd2:	d059      	beq.n	8015e88 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 8015dd4:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 8015dd8:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8015ddc:	fa1f f28b 	uxth.w	r2, fp
 8015de0:	fa1f f989 	uxth.w	r9, r9
 8015de4:	469e      	mov	lr, r3
 8015de6:	42ac      	cmp	r4, r5
 8015de8:	d264      	bcs.n	8015eb4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 8015dea:	eb04 0a07 	add.w	sl, r4, r7
 8015dee:	4554      	cmp	r4, sl
 8015df0:	d23d      	bcs.n	8015e6e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 8015df2:	8821      	ldrh	r1, [r4, #0]
 8015df4:	f836 3b02 	ldrh.w	r3, [r6], #2
 8015df8:	1208      	asrs	r0, r1, #8
 8015dfa:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8015dfe:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8015e02:	fb10 f009 	smulbb	r0, r0, r9
 8015e06:	ea4f 0be1 	mov.w	fp, r1, asr #3
 8015e0a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8015e0e:	00c9      	lsls	r1, r1, #3
 8015e10:	fb0c 0c02 	mla	ip, ip, r2, r0
 8015e14:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8015e18:	10d8      	asrs	r0, r3, #3
 8015e1a:	b2c9      	uxtb	r1, r1
 8015e1c:	00db      	lsls	r3, r3, #3
 8015e1e:	fa1f fc8c 	uxth.w	ip, ip
 8015e22:	fb1b fb09 	smulbb	fp, fp, r9
 8015e26:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8015e2a:	b2db      	uxtb	r3, r3
 8015e2c:	fb11 f109 	smulbb	r1, r1, r9
 8015e30:	fb00 b002 	mla	r0, r0, r2, fp
 8015e34:	fb03 1302 	mla	r3, r3, r2, r1
 8015e38:	f10c 0b01 	add.w	fp, ip, #1
 8015e3c:	b29b      	uxth	r3, r3
 8015e3e:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 8015e42:	b280      	uxth	r0, r0
 8015e44:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 8015e48:	f103 0c01 	add.w	ip, r3, #1
 8015e4c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8015e50:	1c43      	adds	r3, r0, #1
 8015e52:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8015e56:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8015e5a:	0940      	lsrs	r0, r0, #5
 8015e5c:	ea4c 0c0b 	orr.w	ip, ip, fp
 8015e60:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8015e64:	ea4c 0c00 	orr.w	ip, ip, r0
 8015e68:	f824 cb02 	strh.w	ip, [r4], #2
 8015e6c:	e7bf      	b.n	8015dee <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 8015e6e:	f8be 3000 	ldrh.w	r3, [lr]
 8015e72:	eba3 0308 	sub.w	r3, r3, r8
 8015e76:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015e7a:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8015e7e:	eba3 0308 	sub.w	r3, r3, r8
 8015e82:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8015e86:	e7ae      	b.n	8015de6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 8015e88:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8015e8c:	f8d9 0000 	ldr.w	r0, [r9]
 8015e90:	42ac      	cmp	r4, r5
 8015e92:	6803      	ldr	r3, [r0, #0]
 8015e94:	d20e      	bcs.n	8015eb4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 8015e96:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
 8015e9a:	4632      	mov	r2, r6
 8015e9c:	463b      	mov	r3, r7
 8015e9e:	4621      	mov	r1, r4
 8015ea0:	47c0      	blx	r8
 8015ea2:	f8ba 3000 	ldrh.w	r3, [sl]
 8015ea6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015eaa:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8015eae:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8015eb2:	e7eb      	b.n	8015e8c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 8015eb4:	4b02      	ldr	r3, [pc, #8]	; (8015ec0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 8015eb6:	6818      	ldr	r0, [r3, #0]
 8015eb8:	6803      	ldr	r3, [r0, #0]
 8015eba:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8015ebc:	4798      	blx	r3
 8015ebe:	e76b      	b.n	8015d98 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 8015ec0:	20017458 	.word	0x20017458
 8015ec4:	20017452 	.word	0x20017452

08015ec8 <_ZN8touchgfx8LCD16bppD0Ev>:
 8015ec8:	b510      	push	{r4, lr}
 8015eca:	2178      	movs	r1, #120	; 0x78
 8015ecc:	4604      	mov	r4, r0
 8015ece:	f009 faf2 	bl	801f4b6 <_ZdlPvj>
 8015ed2:	4620      	mov	r0, r4
 8015ed4:	bd10      	pop	{r4, pc}

08015ed6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8015ed6:	b510      	push	{r4, lr}
 8015ed8:	2104      	movs	r1, #4
 8015eda:	4604      	mov	r4, r0
 8015edc:	f009 faeb 	bl	801f4b6 <_ZdlPvj>
 8015ee0:	4620      	mov	r0, r4
 8015ee2:	bd10      	pop	{r4, pc}

08015ee4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8015ee4:	b510      	push	{r4, lr}
 8015ee6:	2104      	movs	r1, #4
 8015ee8:	4604      	mov	r4, r0
 8015eea:	f009 fae4 	bl	801f4b6 <_ZdlPvj>
 8015eee:	4620      	mov	r0, r4
 8015ef0:	bd10      	pop	{r4, pc}

08015ef2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8015ef2:	b510      	push	{r4, lr}
 8015ef4:	2104      	movs	r1, #4
 8015ef6:	4604      	mov	r4, r0
 8015ef8:	f009 fadd 	bl	801f4b6 <_ZdlPvj>
 8015efc:	4620      	mov	r0, r4
 8015efe:	bd10      	pop	{r4, pc}

08015f00 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8015f00:	b510      	push	{r4, lr}
 8015f02:	2104      	movs	r1, #4
 8015f04:	4604      	mov	r4, r0
 8015f06:	f009 fad6 	bl	801f4b6 <_ZdlPvj>
 8015f0a:	4620      	mov	r0, r4
 8015f0c:	bd10      	pop	{r4, pc}

08015f0e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8015f0e:	b510      	push	{r4, lr}
 8015f10:	2104      	movs	r1, #4
 8015f12:	4604      	mov	r4, r0
 8015f14:	f009 facf 	bl	801f4b6 <_ZdlPvj>
 8015f18:	4620      	mov	r0, r4
 8015f1a:	bd10      	pop	{r4, pc}

08015f1c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 8015f1c:	b510      	push	{r4, lr}
 8015f1e:	2104      	movs	r1, #4
 8015f20:	4604      	mov	r4, r0
 8015f22:	f009 fac8 	bl	801f4b6 <_ZdlPvj>
 8015f26:	4620      	mov	r0, r4
 8015f28:	bd10      	pop	{r4, pc}

08015f2a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 8015f2a:	b510      	push	{r4, lr}
 8015f2c:	2104      	movs	r1, #4
 8015f2e:	4604      	mov	r4, r0
 8015f30:	f009 fac1 	bl	801f4b6 <_ZdlPvj>
 8015f34:	4620      	mov	r0, r4
 8015f36:	bd10      	pop	{r4, pc}

08015f38 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 8015f38:	b510      	push	{r4, lr}
 8015f3a:	2104      	movs	r1, #4
 8015f3c:	4604      	mov	r4, r0
 8015f3e:	f009 faba 	bl	801f4b6 <_ZdlPvj>
 8015f42:	4620      	mov	r0, r4
 8015f44:	bd10      	pop	{r4, pc}

08015f46 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8015f46:	b510      	push	{r4, lr}
 8015f48:	2104      	movs	r1, #4
 8015f4a:	4604      	mov	r4, r0
 8015f4c:	f009 fab3 	bl	801f4b6 <_ZdlPvj>
 8015f50:	4620      	mov	r0, r4
 8015f52:	bd10      	pop	{r4, pc}

08015f54 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8015f54:	b510      	push	{r4, lr}
 8015f56:	2104      	movs	r1, #4
 8015f58:	4604      	mov	r4, r0
 8015f5a:	f009 faac 	bl	801f4b6 <_ZdlPvj>
 8015f5e:	4620      	mov	r0, r4
 8015f60:	bd10      	pop	{r4, pc}

08015f62 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8015f62:	b510      	push	{r4, lr}
 8015f64:	2104      	movs	r1, #4
 8015f66:	4604      	mov	r4, r0
 8015f68:	f009 faa5 	bl	801f4b6 <_ZdlPvj>
 8015f6c:	4620      	mov	r0, r4
 8015f6e:	bd10      	pop	{r4, pc}

08015f70 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8015f70:	b510      	push	{r4, lr}
 8015f72:	2104      	movs	r1, #4
 8015f74:	4604      	mov	r4, r0
 8015f76:	f009 fa9e 	bl	801f4b6 <_ZdlPvj>
 8015f7a:	4620      	mov	r0, r4
 8015f7c:	bd10      	pop	{r4, pc}

08015f7e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8015f7e:	b510      	push	{r4, lr}
 8015f80:	2104      	movs	r1, #4
 8015f82:	4604      	mov	r4, r0
 8015f84:	f009 fa97 	bl	801f4b6 <_ZdlPvj>
 8015f88:	4620      	mov	r0, r4
 8015f8a:	bd10      	pop	{r4, pc}

08015f8c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8015f8c:	b510      	push	{r4, lr}
 8015f8e:	2104      	movs	r1, #4
 8015f90:	4604      	mov	r4, r0
 8015f92:	f009 fa90 	bl	801f4b6 <_ZdlPvj>
 8015f96:	4620      	mov	r0, r4
 8015f98:	bd10      	pop	{r4, pc}

08015f9a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8015f9a:	b510      	push	{r4, lr}
 8015f9c:	2104      	movs	r1, #4
 8015f9e:	4604      	mov	r4, r0
 8015fa0:	f009 fa89 	bl	801f4b6 <_ZdlPvj>
 8015fa4:	4620      	mov	r0, r4
 8015fa6:	bd10      	pop	{r4, pc}

08015fa8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8015fa8:	b510      	push	{r4, lr}
 8015faa:	2104      	movs	r1, #4
 8015fac:	4604      	mov	r4, r0
 8015fae:	f009 fa82 	bl	801f4b6 <_ZdlPvj>
 8015fb2:	4620      	mov	r0, r4
 8015fb4:	bd10      	pop	{r4, pc}

08015fb6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8015fb6:	b510      	push	{r4, lr}
 8015fb8:	2104      	movs	r1, #4
 8015fba:	4604      	mov	r4, r0
 8015fbc:	f009 fa7b 	bl	801f4b6 <_ZdlPvj>
 8015fc0:	4620      	mov	r0, r4
 8015fc2:	bd10      	pop	{r4, pc}

08015fc4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8015fc4:	b510      	push	{r4, lr}
 8015fc6:	2104      	movs	r1, #4
 8015fc8:	4604      	mov	r4, r0
 8015fca:	f009 fa74 	bl	801f4b6 <_ZdlPvj>
 8015fce:	4620      	mov	r0, r4
 8015fd0:	bd10      	pop	{r4, pc}

08015fd2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8015fd2:	b510      	push	{r4, lr}
 8015fd4:	2104      	movs	r1, #4
 8015fd6:	4604      	mov	r4, r0
 8015fd8:	f009 fa6d 	bl	801f4b6 <_ZdlPvj>
 8015fdc:	4620      	mov	r0, r4
 8015fde:	bd10      	pop	{r4, pc}

08015fe0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 8015fe0:	b510      	push	{r4, lr}
 8015fe2:	2104      	movs	r1, #4
 8015fe4:	4604      	mov	r4, r0
 8015fe6:	f009 fa66 	bl	801f4b6 <_ZdlPvj>
 8015fea:	4620      	mov	r0, r4
 8015fec:	bd10      	pop	{r4, pc}

08015fee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8015fee:	b510      	push	{r4, lr}
 8015ff0:	2104      	movs	r1, #4
 8015ff2:	4604      	mov	r4, r0
 8015ff4:	f009 fa5f 	bl	801f4b6 <_ZdlPvj>
 8015ff8:	4620      	mov	r0, r4
 8015ffa:	bd10      	pop	{r4, pc}

08015ffc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8015ffc:	b510      	push	{r4, lr}
 8015ffe:	2104      	movs	r1, #4
 8016000:	4604      	mov	r4, r0
 8016002:	f009 fa58 	bl	801f4b6 <_ZdlPvj>
 8016006:	4620      	mov	r0, r4
 8016008:	bd10      	pop	{r4, pc}

0801600a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801600a:	b510      	push	{r4, lr}
 801600c:	2104      	movs	r1, #4
 801600e:	4604      	mov	r4, r0
 8016010:	f009 fa51 	bl	801f4b6 <_ZdlPvj>
 8016014:	4620      	mov	r0, r4
 8016016:	bd10      	pop	{r4, pc}

08016018 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8016018:	b510      	push	{r4, lr}
 801601a:	2104      	movs	r1, #4
 801601c:	4604      	mov	r4, r0
 801601e:	f009 fa4a 	bl	801f4b6 <_ZdlPvj>
 8016022:	4620      	mov	r0, r4
 8016024:	bd10      	pop	{r4, pc}

08016026 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 8016026:	b510      	push	{r4, lr}
 8016028:	2104      	movs	r1, #4
 801602a:	4604      	mov	r4, r0
 801602c:	f009 fa43 	bl	801f4b6 <_ZdlPvj>
 8016030:	4620      	mov	r0, r4
 8016032:	bd10      	pop	{r4, pc}

08016034 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 8016034:	b510      	push	{r4, lr}
 8016036:	2104      	movs	r1, #4
 8016038:	4604      	mov	r4, r0
 801603a:	f009 fa3c 	bl	801f4b6 <_ZdlPvj>
 801603e:	4620      	mov	r0, r4
 8016040:	bd10      	pop	{r4, pc}

08016042 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 8016042:	b510      	push	{r4, lr}
 8016044:	2104      	movs	r1, #4
 8016046:	4604      	mov	r4, r0
 8016048:	f009 fa35 	bl	801f4b6 <_ZdlPvj>
 801604c:	4620      	mov	r0, r4
 801604e:	bd10      	pop	{r4, pc}

08016050 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 8016050:	b510      	push	{r4, lr}
 8016052:	2104      	movs	r1, #4
 8016054:	4604      	mov	r4, r0
 8016056:	f009 fa2e 	bl	801f4b6 <_ZdlPvj>
 801605a:	4620      	mov	r0, r4
 801605c:	bd10      	pop	{r4, pc}
	...

08016060 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 8016060:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016064:	b091      	sub	sp, #68	; 0x44
 8016066:	469b      	mov	fp, r3
 8016068:	f10d 0828 	add.w	r8, sp, #40	; 0x28
 801606c:	4616      	mov	r6, r2
 801606e:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	; 0x6c
 8016072:	f9b3 2000 	ldrsh.w	r2, [r3]
 8016076:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801607a:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801607e:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8016082:	4604      	mov	r4, r0
 8016084:	460d      	mov	r5, r1
 8016086:	4640      	mov	r0, r8
 8016088:	4659      	mov	r1, fp
 801608a:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801608e:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 8016092:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
 8016096:	f7f3 fd69 	bl	8009b6c <_ZN8touchgfx4RectaNERKS0_>
 801609a:	4631      	mov	r1, r6
 801609c:	4640      	mov	r0, r8
 801609e:	f7f3 fd65 	bl	8009b6c <_ZN8touchgfx4RectaNERKS0_>
 80160a2:	4b74      	ldr	r3, [pc, #464]	; (8016274 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 80160a4:	8818      	ldrh	r0, [r3, #0]
 80160a6:	4b74      	ldr	r3, [pc, #464]	; (8016278 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 80160a8:	8819      	ldrh	r1, [r3, #0]
 80160aa:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 80160ae:	2b00      	cmp	r3, #0
 80160b0:	b202      	sxth	r2, r0
 80160b2:	b20e      	sxth	r6, r1
 80160b4:	da07      	bge.n	80160c6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 80160b6:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 80160ba:	4463      	add	r3, ip
 80160bc:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80160c0:	2300      	movs	r3, #0
 80160c2:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80160c6:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 80160ca:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 80160ce:	1ad2      	subs	r2, r2, r3
 80160d0:	4594      	cmp	ip, r2
 80160d2:	bfc4      	itt	gt
 80160d4:	1ac2      	subgt	r2, r0, r3
 80160d6:	f8ad 202c 	strhgt.w	r2, [sp, #44]	; 0x2c
 80160da:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 80160de:	2a00      	cmp	r2, #0
 80160e0:	da07      	bge.n	80160f2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 80160e2:	f8bd c02e 	ldrh.w	ip, [sp, #46]	; 0x2e
 80160e6:	4462      	add	r2, ip
 80160e8:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 80160ec:	2200      	movs	r2, #0
 80160ee:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 80160f2:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
 80160f6:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 80160fa:	eba6 060a 	sub.w	r6, r6, sl
 80160fe:	42b2      	cmp	r2, r6
 8016100:	bfc4      	itt	gt
 8016102:	eba1 020a 	subgt.w	r2, r1, sl
 8016106:	f8ad 202e 	strhgt.w	r2, [sp, #46]	; 0x2e
 801610a:	4a5c      	ldr	r2, [pc, #368]	; (801627c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 801610c:	7812      	ldrb	r2, [r2, #0]
 801610e:	b9a2      	cbnz	r2, 801613a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 8016110:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 8016114:	4286      	cmp	r6, r0
 8016116:	4640      	mov	r0, r8
 8016118:	9303      	str	r3, [sp, #12]
 801611a:	bf14      	ite	ne
 801611c:	2600      	movne	r6, #0
 801611e:	2601      	moveq	r6, #1
 8016120:	f7f3 fd67 	bl	8009bf2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8016124:	9b03      	ldr	r3, [sp, #12]
 8016126:	b160      	cbz	r0, 8016142 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 8016128:	2300      	movs	r3, #0
 801612a:	8023      	strh	r3, [r4, #0]
 801612c:	8063      	strh	r3, [r4, #2]
 801612e:	80a3      	strh	r3, [r4, #4]
 8016130:	4620      	mov	r0, r4
 8016132:	80e3      	strh	r3, [r4, #6]
 8016134:	b011      	add	sp, #68	; 0x44
 8016136:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801613a:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801613e:	428e      	cmp	r6, r1
 8016140:	e7e9      	b.n	8016116 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 8016142:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8016146:	9205      	str	r2, [sp, #20]
 8016148:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801614c:	9206      	str	r2, [sp, #24]
 801614e:	f8bb 2000 	ldrh.w	r2, [fp]
 8016152:	900e      	str	r0, [sp, #56]	; 0x38
 8016154:	1a9b      	subs	r3, r3, r2
 8016156:	b21b      	sxth	r3, r3
 8016158:	9303      	str	r3, [sp, #12]
 801615a:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801615e:	f8ad 903c 	strh.w	r9, [sp, #60]	; 0x3c
 8016162:	ebaa 0a03 	sub.w	sl, sl, r3
 8016166:	fa0f f38a 	sxth.w	r3, sl
 801616a:	9304      	str	r3, [sp, #16]
 801616c:	9b03      	ldr	r3, [sp, #12]
 801616e:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8016172:	9b04      	ldr	r3, [sp, #16]
 8016174:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8016178:	9b05      	ldr	r3, [sp, #20]
 801617a:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 801617e:	a90e      	add	r1, sp, #56	; 0x38
 8016180:	9b06      	ldr	r3, [sp, #24]
 8016182:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8016186:	a80c      	add	r0, sp, #48	; 0x30
 8016188:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
 801618c:	f7f9 fcc2 	bl	800fb14 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8016190:	4640      	mov	r0, r8
 8016192:	f7f9 fc97 	bl	800fac4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016196:	a80e      	add	r0, sp, #56	; 0x38
 8016198:	f7f9 fc94 	bl	800fac4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801619c:	4b38      	ldr	r3, [pc, #224]	; (8016280 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 801619e:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
 80161a2:	881b      	ldrh	r3, [r3, #0]
 80161a4:	9307      	str	r3, [sp, #28]
 80161a6:	682b      	ldr	r3, [r5, #0]
 80161a8:	f8df b0d8 	ldr.w	fp, [pc, #216]	; 8016284 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 80161ac:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80161ae:	4628      	mov	r0, r5
 80161b0:	4798      	blx	r3
 80161b2:	f8bd 5032 	ldrh.w	r5, [sp, #50]	; 0x32
 80161b6:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 80161ba:	4681      	mov	r9, r0
 80161bc:	fb1a 3305 	smlabb	r3, sl, r5, r3
 80161c0:	f8db 0000 	ldr.w	r0, [fp]
 80161c4:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 80161c6:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 80161ca:	6803      	ldr	r3, [r0, #0]
 80161cc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80161ce:	4798      	blx	r3
 80161d0:	4607      	mov	r7, r0
 80161d2:	f8db 0000 	ldr.w	r0, [fp]
 80161d6:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 80161da:	6803      	ldr	r3, [r0, #0]
 80161dc:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 80161e0:	9109      	str	r1, [sp, #36]	; 0x24
 80161e2:	9208      	str	r2, [sp, #32]
 80161e4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80161e6:	4798      	blx	r3
 80161e8:	f010 0f01 	tst.w	r0, #1
 80161ec:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 80161f0:	d012      	beq.n	8016218 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 80161f2:	f8db 0000 	ldr.w	r0, [fp]
 80161f6:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 80161fa:	6803      	ldr	r3, [r0, #0]
 80161fc:	9200      	str	r2, [sp, #0]
 80161fe:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 8016200:	e898 0006 	ldmia.w	r8, {r1, r2}
 8016204:	462b      	mov	r3, r5
 8016206:	47b0      	blx	r6
 8016208:	9b03      	ldr	r3, [sp, #12]
 801620a:	8023      	strh	r3, [r4, #0]
 801620c:	9b04      	ldr	r3, [sp, #16]
 801620e:	8063      	strh	r3, [r4, #2]
 8016210:	9b05      	ldr	r3, [sp, #20]
 8016212:	80a3      	strh	r3, [r4, #4]
 8016214:	9b06      	ldr	r3, [sp, #24]
 8016216:	e78b      	b.n	8016130 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 8016218:	fb09 f202 	mul.w	r2, r9, r2
 801621c:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 8016220:	440f      	add	r7, r1
 8016222:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 8016226:	b166      	cbz	r6, 8016242 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 8016228:	9a07      	ldr	r2, [sp, #28]
 801622a:	4592      	cmp	sl, r2
 801622c:	d109      	bne.n	8016242 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801622e:	f8db 0000 	ldr.w	r0, [fp]
 8016232:	6802      	ldr	r2, [r0, #0]
 8016234:	fb09 f303 	mul.w	r3, r9, r3
 8016238:	6b56      	ldr	r6, [r2, #52]	; 0x34
 801623a:	4629      	mov	r1, r5
 801623c:	463a      	mov	r2, r7
 801623e:	47b0      	blx	r6
 8016240:	e7e2      	b.n	8016208 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 8016242:	fb0a f303 	mul.w	r3, sl, r3
 8016246:	f8df b03c 	ldr.w	fp, [pc, #60]	; 8016284 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801624a:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 801624e:	ea4f 064a 	mov.w	r6, sl, lsl #1
 8016252:	4545      	cmp	r5, r8
 8016254:	d2d8      	bcs.n	8016208 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 8016256:	f8db 0000 	ldr.w	r0, [fp]
 801625a:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801625e:	6802      	ldr	r2, [r0, #0]
 8016260:	4629      	mov	r1, r5
 8016262:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
 8016266:	005b      	lsls	r3, r3, #1
 8016268:	463a      	mov	r2, r7
 801626a:	47d0      	blx	sl
 801626c:	444f      	add	r7, r9
 801626e:	4435      	add	r5, r6
 8016270:	e7ef      	b.n	8016252 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 8016272:	bf00      	nop
 8016274:	2001744c 	.word	0x2001744c
 8016278:	2001744e 	.word	0x2001744e
 801627c:	20017450 	.word	0x20017450
 8016280:	20017452 	.word	0x20017452
 8016284:	20017458 	.word	0x20017458

08016288 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 8016288:	b5f0      	push	{r4, r5, r6, r7, lr}
 801628a:	4606      	mov	r6, r0
 801628c:	b087      	sub	sp, #28
 801628e:	460c      	mov	r4, r1
 8016290:	4617      	mov	r7, r2
 8016292:	461d      	mov	r5, r3
 8016294:	b333      	cbz	r3, 80162e4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8016296:	4608      	mov	r0, r1
 8016298:	f7f3 fcab 	bl	8009bf2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801629c:	bb10      	cbnz	r0, 80162e4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801629e:	6820      	ldr	r0, [r4, #0]
 80162a0:	6861      	ldr	r1, [r4, #4]
 80162a2:	4c1c      	ldr	r4, [pc, #112]	; (8016314 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 80162a4:	ab04      	add	r3, sp, #16
 80162a6:	c303      	stmia	r3!, {r0, r1}
 80162a8:	a804      	add	r0, sp, #16
 80162aa:	f7f9 fc0b 	bl	800fac4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80162ae:	6820      	ldr	r0, [r4, #0]
 80162b0:	6803      	ldr	r3, [r0, #0]
 80162b2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80162b4:	4798      	blx	r3
 80162b6:	2dff      	cmp	r5, #255	; 0xff
 80162b8:	d016      	beq.n	80162e8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 80162ba:	f010 0f08 	tst.w	r0, #8
 80162be:	6820      	ldr	r0, [r4, #0]
 80162c0:	d015      	beq.n	80162ee <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 80162c2:	2400      	movs	r4, #0
 80162c4:	6801      	ldr	r1, [r0, #0]
 80162c6:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 80162ca:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80162ce:	e9cd 5402 	strd	r5, r4, [sp, #8]
 80162d2:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 80162d6:	9401      	str	r4, [sp, #4]
 80162d8:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 80162dc:	9400      	str	r4, [sp, #0]
 80162de:	6e0c      	ldr	r4, [r1, #96]	; 0x60
 80162e0:	4639      	mov	r1, r7
 80162e2:	47a0      	blx	r4
 80162e4:	b007      	add	sp, #28
 80162e6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80162e8:	f010 0f02 	tst.w	r0, #2
 80162ec:	e7e7      	b.n	80162be <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 80162ee:	6803      	ldr	r3, [r0, #0]
 80162f0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80162f2:	4798      	blx	r3
 80162f4:	4b08      	ldr	r3, [pc, #32]	; (8016318 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 80162f6:	881a      	ldrh	r2, [r3, #0]
 80162f8:	6833      	ldr	r3, [r6, #0]
 80162fa:	e9cd 7500 	strd	r7, r5, [sp]
 80162fe:	4601      	mov	r1, r0
 8016300:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 8016302:	4630      	mov	r0, r6
 8016304:	ab04      	add	r3, sp, #16
 8016306:	47a8      	blx	r5
 8016308:	6820      	ldr	r0, [r4, #0]
 801630a:	6803      	ldr	r3, [r0, #0]
 801630c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801630e:	4798      	blx	r3
 8016310:	e7e8      	b.n	80162e4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8016312:	bf00      	nop
 8016314:	20017458 	.word	0x20017458
 8016318:	20017452 	.word	0x20017452

0801631c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 801631c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8016320:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 8016324:	9e08      	ldr	r6, [sp, #32]
 8016326:	4688      	mov	r8, r1
 8016328:	4614      	mov	r4, r2
 801632a:	461d      	mov	r5, r3
 801632c:	2f00      	cmp	r7, #0
 801632e:	f000 80a9 	beq.w	8016484 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8016332:	4618      	mov	r0, r3
 8016334:	f7f3 fc5d 	bl	8009bf2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8016338:	2800      	cmp	r0, #0
 801633a:	f040 80a3 	bne.w	8016484 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801633e:	f9b5 1000 	ldrsh.w	r1, [r5]
 8016342:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8016346:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 801634a:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 801634e:	fb04 1303 	mla	r3, r4, r3, r1
 8016352:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 8016356:	4365      	muls	r5, r4
 8016358:	2fff      	cmp	r7, #255	; 0xff
 801635a:	eba4 0200 	sub.w	r2, r4, r0
 801635e:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 8016362:	ea4f 2816 	mov.w	r8, r6, lsr #8
 8016366:	d04a      	beq.n	80163fe <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 8016368:	b2bc      	uxth	r4, r7
 801636a:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 801636e:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 8016372:	fa5f f788 	uxtb.w	r7, r8
 8016376:	b2f3      	uxtb	r3, r6
 8016378:	0040      	lsls	r0, r0, #1
 801637a:	fb0e fe04 	mul.w	lr, lr, r4
 801637e:	4367      	muls	r7, r4
 8016380:	4363      	muls	r3, r4
 8016382:	ea4f 0842 	mov.w	r8, r2, lsl #1
 8016386:	fa1f fc8c 	uxth.w	ip, ip
 801638a:	42a9      	cmp	r1, r5
 801638c:	d27a      	bcs.n	8016484 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801638e:	eb01 0900 	add.w	r9, r1, r0
 8016392:	4549      	cmp	r1, r9
 8016394:	d231      	bcs.n	80163fa <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 8016396:	880a      	ldrh	r2, [r1, #0]
 8016398:	1214      	asrs	r4, r2, #8
 801639a:	10d6      	asrs	r6, r2, #3
 801639c:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 80163a0:	00d2      	lsls	r2, r2, #3
 80163a2:	b2d2      	uxtb	r2, r2
 80163a4:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 80163a8:	fb14 f40c 	smulbb	r4, r4, ip
 80163ac:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 80163b0:	4474      	add	r4, lr
 80163b2:	fb12 f20c 	smulbb	r2, r2, ip
 80163b6:	b2a4      	uxth	r4, r4
 80163b8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80163bc:	441a      	add	r2, r3
 80163be:	b292      	uxth	r2, r2
 80163c0:	f104 0a01 	add.w	sl, r4, #1
 80163c4:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 80163c8:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 80163cc:	fb16 f60c 	smulbb	r6, r6, ip
 80163d0:	f102 0a01 	add.w	sl, r2, #1
 80163d4:	443e      	add	r6, r7
 80163d6:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 80163da:	b2b6      	uxth	r6, r6
 80163dc:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 80163e0:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80163e4:	4322      	orrs	r2, r4
 80163e6:	1c74      	adds	r4, r6, #1
 80163e8:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 80163ec:	0976      	lsrs	r6, r6, #5
 80163ee:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80163f2:	4332      	orrs	r2, r6
 80163f4:	f821 2b02 	strh.w	r2, [r1], #2
 80163f8:	e7cb      	b.n	8016392 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 80163fa:	4441      	add	r1, r8
 80163fc:	e7c5      	b.n	801638a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 80163fe:	4f22      	ldr	r7, [pc, #136]	; (8016488 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 8016400:	0973      	lsrs	r3, r6, #5
 8016402:	ea08 0707 	and.w	r7, r8, r7
 8016406:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801640a:	433b      	orrs	r3, r7
 801640c:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8016410:	4333      	orrs	r3, r6
 8016412:	07e7      	lsls	r7, r4, #31
 8016414:	b29b      	uxth	r3, r3
 8016416:	d50b      	bpl.n	8016430 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 8016418:	0040      	lsls	r0, r0, #1
 801641a:	0052      	lsls	r2, r2, #1
 801641c:	42a9      	cmp	r1, r5
 801641e:	d231      	bcs.n	8016484 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8016420:	180c      	adds	r4, r1, r0
 8016422:	42a1      	cmp	r1, r4
 8016424:	d202      	bcs.n	801642c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 8016426:	f821 3b02 	strh.w	r3, [r1], #2
 801642a:	e7fa      	b.n	8016422 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 801642c:	4411      	add	r1, r2
 801642e:	e7f5      	b.n	801641c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 8016430:	078e      	lsls	r6, r1, #30
 8016432:	d008      	beq.n	8016446 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 8016434:	0066      	lsls	r6, r4, #1
 8016436:	460a      	mov	r2, r1
 8016438:	42aa      	cmp	r2, r5
 801643a:	d202      	bcs.n	8016442 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 801643c:	8013      	strh	r3, [r2, #0]
 801643e:	4432      	add	r2, r6
 8016440:	e7fa      	b.n	8016438 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 8016442:	3102      	adds	r1, #2
 8016444:	3801      	subs	r0, #1
 8016446:	07c2      	lsls	r2, r0, #31
 8016448:	d50b      	bpl.n	8016462 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 801644a:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 801644e:	3a01      	subs	r2, #1
 8016450:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 8016454:	0066      	lsls	r6, r4, #1
 8016456:	42aa      	cmp	r2, r5
 8016458:	d202      	bcs.n	8016460 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 801645a:	8013      	strh	r3, [r2, #0]
 801645c:	4432      	add	r2, r6
 801645e:	e7fa      	b.n	8016456 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 8016460:	3801      	subs	r0, #1
 8016462:	b178      	cbz	r0, 8016484 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8016464:	1040      	asrs	r0, r0, #1
 8016466:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 801646a:	0080      	lsls	r0, r0, #2
 801646c:	0064      	lsls	r4, r4, #1
 801646e:	42a9      	cmp	r1, r5
 8016470:	d208      	bcs.n	8016484 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8016472:	180e      	adds	r6, r1, r0
 8016474:	460a      	mov	r2, r1
 8016476:	42b2      	cmp	r2, r6
 8016478:	d202      	bcs.n	8016480 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 801647a:	f842 3b04 	str.w	r3, [r2], #4
 801647e:	e7fa      	b.n	8016476 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 8016480:	4421      	add	r1, r4
 8016482:	e7f4      	b.n	801646e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 8016484:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8016488:	00fff800 	.word	0x00fff800

0801648c <_ZN8touchgfx8LCD16bppC1Ev>:
 801648c:	2200      	movs	r2, #0
 801648e:	4910      	ldr	r1, [pc, #64]	; (80164d0 <_ZN8touchgfx8LCD16bppC1Ev+0x44>)
 8016490:	6042      	str	r2, [r0, #4]
 8016492:	6001      	str	r1, [r0, #0]
 8016494:	e9c0 2202 	strd	r2, r2, [r0, #8]
 8016498:	e9c0 2204 	strd	r2, r2, [r0, #16]
 801649c:	e9c0 2206 	strd	r2, r2, [r0, #24]
 80164a0:	e9c0 2208 	strd	r2, r2, [r0, #32]
 80164a4:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 80164a8:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 80164ac:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 80164b0:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 80164b4:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 80164b8:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 80164bc:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 80164c0:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 80164c4:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 80164c8:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 80164cc:	4770      	bx	lr
 80164ce:	bf00      	nop
 80164d0:	08022f40 	.word	0x08022f40

080164d4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 80164d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80164d8:	460d      	mov	r5, r1
 80164da:	b08d      	sub	sp, #52	; 0x34
 80164dc:	4604      	mov	r4, r0
 80164de:	6808      	ldr	r0, [r1, #0]
 80164e0:	6849      	ldr	r1, [r1, #4]
 80164e2:	4699      	mov	r9, r3
 80164e4:	ab08      	add	r3, sp, #32
 80164e6:	c303      	stmia	r3!, {r0, r1}
 80164e8:	6810      	ldr	r0, [r2, #0]
 80164ea:	6851      	ldr	r1, [r2, #4]
 80164ec:	ab0a      	add	r3, sp, #40	; 0x28
 80164ee:	c303      	stmia	r3!, {r0, r1}
 80164f0:	a808      	add	r0, sp, #32
 80164f2:	f7f9 fae7 	bl	800fac4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80164f6:	4629      	mov	r1, r5
 80164f8:	a80a      	add	r0, sp, #40	; 0x28
 80164fa:	f7f9 fb0b 	bl	800fb14 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80164fe:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 8016502:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 8016506:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 801650a:	4d63      	ldr	r5, [pc, #396]	; (8016698 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801650c:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 8016510:	6828      	ldr	r0, [r5, #0]
 8016512:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 8016516:	fb11 2103 	smlabb	r1, r1, r3, r2
 801651a:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801651e:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 8016522:	440a      	add	r2, r1
 8016524:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8016528:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 801652c:	4413      	add	r3, r2
 801652e:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8016532:	6803      	ldr	r3, [r0, #0]
 8016534:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8016536:	4798      	blx	r3
 8016538:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801653c:	d119      	bne.n	8016572 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 801653e:	f010 0f20 	tst.w	r0, #32
 8016542:	6828      	ldr	r0, [r5, #0]
 8016544:	d018      	beq.n	8016578 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 8016546:	2500      	movs	r5, #0
 8016548:	6801      	ldr	r1, [r0, #0]
 801654a:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801654e:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 8016552:	e9cd 9503 	strd	r9, r5, [sp, #12]
 8016556:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 801655a:	9502      	str	r5, [sp, #8]
 801655c:	b2b6      	uxth	r6, r6
 801655e:	fa1f f588 	uxth.w	r5, r8
 8016562:	9601      	str	r6, [sp, #4]
 8016564:	9500      	str	r5, [sp, #0]
 8016566:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 8016568:	4621      	mov	r1, r4
 801656a:	47a8      	blx	r5
 801656c:	b00d      	add	sp, #52	; 0x34
 801656e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016572:	f010 0f40 	tst.w	r0, #64	; 0x40
 8016576:	e7e4      	b.n	8016542 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 8016578:	6803      	ldr	r3, [r0, #0]
 801657a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801657c:	4798      	blx	r3
 801657e:	4947      	ldr	r1, [pc, #284]	; (801669c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 8016580:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8016584:	880b      	ldrh	r3, [r1, #0]
 8016586:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 801658a:	fb03 5202 	mla	r2, r3, r2, r5
 801658e:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8016592:	4373      	muls	r3, r6
 8016594:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8016598:	9307      	str	r3, [sp, #28]
 801659a:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801659e:	9306      	str	r3, [sp, #24]
 80165a0:	468a      	mov	sl, r1
 80165a2:	9b07      	ldr	r3, [sp, #28]
 80165a4:	4298      	cmp	r0, r3
 80165a6:	d270      	bcs.n	801668a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 80165a8:	9b06      	ldr	r3, [sp, #24]
 80165aa:	4621      	mov	r1, r4
 80165ac:	eb00 0b03 	add.w	fp, r0, r3
 80165b0:	4558      	cmp	r0, fp
 80165b2:	d25d      	bcs.n	8016670 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 80165b4:	f851 4b04 	ldr.w	r4, [r1], #4
 80165b8:	0e23      	lsrs	r3, r4, #24
 80165ba:	d014      	beq.n	80165e6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 80165bc:	2bff      	cmp	r3, #255	; 0xff
 80165be:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 80165c2:	d112      	bne.n	80165ea <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 80165c4:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80165c8:	d10f      	bne.n	80165ea <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 80165ca:	0963      	lsrs	r3, r4, #5
 80165cc:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 80165d0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80165d4:	f02c 0c07 	bic.w	ip, ip, #7
 80165d8:	ea43 0c0c 	orr.w	ip, r3, ip
 80165dc:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 80165e0:	ea4c 0404 	orr.w	r4, ip, r4
 80165e4:	8004      	strh	r4, [r0, #0]
 80165e6:	3002      	adds	r0, #2
 80165e8:	e7e2      	b.n	80165b0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 80165ea:	fb09 f303 	mul.w	r3, r9, r3
 80165ee:	8807      	ldrh	r7, [r0, #0]
 80165f0:	1c5a      	adds	r2, r3, #1
 80165f2:	eb02 2223 	add.w	r2, r2, r3, asr #8
 80165f6:	1212      	asrs	r2, r2, #8
 80165f8:	123e      	asrs	r6, r7, #8
 80165fa:	b293      	uxth	r3, r2
 80165fc:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 8016600:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8016604:	43d2      	mvns	r2, r2
 8016606:	b2d2      	uxtb	r2, r2
 8016608:	10fd      	asrs	r5, r7, #3
 801660a:	fb1e fe03 	smulbb	lr, lr, r3
 801660e:	00ff      	lsls	r7, r7, #3
 8016610:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8016614:	fb06 e602 	mla	r6, r6, r2, lr
 8016618:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801661c:	b2ff      	uxtb	r7, r7
 801661e:	fa5f fc8c 	uxtb.w	ip, ip
 8016622:	b2e4      	uxtb	r4, r4
 8016624:	b2b6      	uxth	r6, r6
 8016626:	fb1c fc03 	smulbb	ip, ip, r3
 801662a:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801662e:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 8016632:	fb14 f403 	smulbb	r4, r4, r3
 8016636:	fb05 c502 	mla	r5, r5, r2, ip
 801663a:	f106 0e01 	add.w	lr, r6, #1
 801663e:	fb07 4702 	mla	r7, r7, r2, r4
 8016642:	b2ad      	uxth	r5, r5
 8016644:	b2bf      	uxth	r7, r7
 8016646:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 801664a:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
 801664e:	f105 0c01 	add.w	ip, r5, #1
 8016652:	1c7e      	adds	r6, r7, #1
 8016654:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8016658:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801665c:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8016660:	096d      	lsrs	r5, r5, #5
 8016662:	ea46 060e 	orr.w	r6, r6, lr
 8016666:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801666a:	432e      	orrs	r6, r5
 801666c:	8006      	strh	r6, [r0, #0]
 801666e:	e7ba      	b.n	80165e6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8016670:	f8ba 3000 	ldrh.w	r3, [sl]
 8016674:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
 8016678:	eba3 0308 	sub.w	r3, r3, r8
 801667c:	eba4 0408 	sub.w	r4, r4, r8
 8016680:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8016684:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 8016688:	e78b      	b.n	80165a2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 801668a:	4b03      	ldr	r3, [pc, #12]	; (8016698 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801668c:	6818      	ldr	r0, [r3, #0]
 801668e:	6803      	ldr	r3, [r0, #0]
 8016690:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016692:	4798      	blx	r3
 8016694:	e76a      	b.n	801656c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 8016696:	bf00      	nop
 8016698:	20017458 	.word	0x20017458
 801669c:	20017452 	.word	0x20017452

080166a0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 80166a0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80166a4:	460c      	mov	r4, r1
 80166a6:	b085      	sub	sp, #20
 80166a8:	6810      	ldr	r0, [r2, #0]
 80166aa:	6851      	ldr	r1, [r2, #4]
 80166ac:	466d      	mov	r5, sp
 80166ae:	c503      	stmia	r5!, {r0, r1}
 80166b0:	6818      	ldr	r0, [r3, #0]
 80166b2:	6859      	ldr	r1, [r3, #4]
 80166b4:	4616      	mov	r6, r2
 80166b6:	c503      	stmia	r5!, {r0, r1}
 80166b8:	4668      	mov	r0, sp
 80166ba:	f7f9 fa03 	bl	800fac4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80166be:	4631      	mov	r1, r6
 80166c0:	a802      	add	r0, sp, #8
 80166c2:	f7f9 fa27 	bl	800fb14 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80166c6:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 80166ca:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 80166ce:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 80166d2:	4d28      	ldr	r5, [pc, #160]	; (8016774 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 80166d4:	4e28      	ldr	r6, [pc, #160]	; (8016778 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 80166d6:	6828      	ldr	r0, [r5, #0]
 80166d8:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 80166dc:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 80166e0:	fb11 2103 	smlabb	r1, r1, r3, r2
 80166e4:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 80166e8:	f8bd 1000 	ldrh.w	r1, [sp]
 80166ec:	440a      	add	r2, r1
 80166ee:	f8ad 2008 	strh.w	r2, [sp, #8]
 80166f2:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 80166f6:	4413      	add	r3, r2
 80166f8:	f8ad 300a 	strh.w	r3, [sp, #10]
 80166fc:	6803      	ldr	r3, [r0, #0]
 80166fe:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8016700:	4798      	blx	r3
 8016702:	8833      	ldrh	r3, [r6, #0]
 8016704:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 8016708:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801670c:	f8df e06c 	ldr.w	lr, [pc, #108]	; 801677c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 8016710:	fb03 1202 	mla	r2, r3, r2, r1
 8016714:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8016718:	fb08 f303 	mul.w	r3, r8, r3
 801671c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8016720:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 8016724:	4298      	cmp	r0, r3
 8016726:	d21d      	bcs.n	8016764 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 8016728:	eb00 080c 	add.w	r8, r0, ip
 801672c:	4540      	cmp	r0, r8
 801672e:	d20f      	bcs.n	8016750 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 8016730:	f854 1b04 	ldr.w	r1, [r4], #4
 8016734:	ea4f 1951 	mov.w	r9, r1, lsr #5
 8016738:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 801673c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8016740:	ea42 0209 	orr.w	r2, r2, r9
 8016744:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8016748:	430a      	orrs	r2, r1
 801674a:	f820 2b02 	strh.w	r2, [r0], #2
 801674e:	e7ed      	b.n	801672c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 8016750:	8832      	ldrh	r2, [r6, #0]
 8016752:	1bd2      	subs	r2, r2, r7
 8016754:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8016758:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 801675c:	1bd2      	subs	r2, r2, r7
 801675e:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 8016762:	e7df      	b.n	8016724 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 8016764:	6828      	ldr	r0, [r5, #0]
 8016766:	6803      	ldr	r3, [r0, #0]
 8016768:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801676a:	4798      	blx	r3
 801676c:	b005      	add	sp, #20
 801676e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8016772:	bf00      	nop
 8016774:	20017458 	.word	0x20017458
 8016778:	20017452 	.word	0x20017452
 801677c:	fffff800 	.word	0xfffff800

08016780 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 8016780:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8016784:	460e      	mov	r6, r1
 8016786:	b08e      	sub	sp, #56	; 0x38
 8016788:	4604      	mov	r4, r0
 801678a:	6808      	ldr	r0, [r1, #0]
 801678c:	6849      	ldr	r1, [r1, #4]
 801678e:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 8016968 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 8016792:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 801696c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 8016796:	461d      	mov	r5, r3
 8016798:	ab0a      	add	r3, sp, #40	; 0x28
 801679a:	c303      	stmia	r3!, {r0, r1}
 801679c:	6810      	ldr	r0, [r2, #0]
 801679e:	6851      	ldr	r1, [r2, #4]
 80167a0:	ab0c      	add	r3, sp, #48	; 0x30
 80167a2:	c303      	stmia	r3!, {r0, r1}
 80167a4:	a80a      	add	r0, sp, #40	; 0x28
 80167a6:	f7f9 f98d 	bl	800fac4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80167aa:	4631      	mov	r1, r6
 80167ac:	a80c      	add	r0, sp, #48	; 0x30
 80167ae:	f7f9 f9b1 	bl	800fb14 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80167b2:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 80167b6:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 80167ba:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 80167be:	f8d8 0000 	ldr.w	r0, [r8]
 80167c2:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 80167c6:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 80167ca:	fb11 2103 	smlabb	r1, r1, r3, r2
 80167ce:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80167d2:	440c      	add	r4, r1
 80167d4:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 80167d8:	440a      	add	r2, r1
 80167da:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 80167de:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 80167e2:	4413      	add	r3, r2
 80167e4:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 80167e8:	6803      	ldr	r3, [r0, #0]
 80167ea:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80167ec:	4798      	blx	r3
 80167ee:	2dff      	cmp	r5, #255	; 0xff
 80167f0:	d124      	bne.n	801683c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 80167f2:	f010 0f01 	tst.w	r0, #1
 80167f6:	f8d8 0000 	ldr.w	r0, [r8]
 80167fa:	d022      	beq.n	8016842 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 80167fc:	2100      	movs	r1, #0
 80167fe:	f8d0 c000 	ldr.w	ip, [r0]
 8016802:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8016806:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 801680a:	e9cd 1107 	strd	r1, r1, [sp, #28]
 801680e:	f04f 0e01 	mov.w	lr, #1
 8016812:	f8cd e018 	str.w	lr, [sp, #24]
 8016816:	f8b9 e000 	ldrh.w	lr, [r9]
 801681a:	9503      	str	r5, [sp, #12]
 801681c:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 8016820:	b2b6      	uxth	r6, r6
 8016822:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8016826:	9102      	str	r1, [sp, #8]
 8016828:	b2bf      	uxth	r7, r7
 801682a:	9601      	str	r6, [sp, #4]
 801682c:	9700      	str	r7, [sp, #0]
 801682e:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
 8016832:	4621      	mov	r1, r4
 8016834:	47a8      	blx	r5
 8016836:	b00e      	add	sp, #56	; 0x38
 8016838:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801683c:	f010 0f04 	tst.w	r0, #4
 8016840:	e7d9      	b.n	80167f6 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 8016842:	6803      	ldr	r3, [r0, #0]
 8016844:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8016846:	4798      	blx	r3
 8016848:	f8b9 3000 	ldrh.w	r3, [r9]
 801684c:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 8016850:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 8016854:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 8016858:	fb03 1202 	mla	r2, r3, r2, r1
 801685c:	ebac 0c07 	sub.w	ip, ip, r7
 8016860:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8016864:	435e      	muls	r6, r3
 8016866:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 801686a:	2dff      	cmp	r5, #255	; 0xff
 801686c:	eba3 0707 	sub.w	r7, r3, r7
 8016870:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8016874:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8016878:	ea4f 0747 	mov.w	r7, r7, lsl #1
 801687c:	d049      	beq.n	8016912 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 801687e:	43eb      	mvns	r3, r5
 8016880:	fa1f f985 	uxth.w	r9, r5
 8016884:	b2db      	uxtb	r3, r3
 8016886:	42b0      	cmp	r0, r6
 8016888:	d266      	bcs.n	8016958 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801688a:	eb00 0a0e 	add.w	sl, r0, lr
 801688e:	4550      	cmp	r0, sl
 8016890:	4621      	mov	r1, r4
 8016892:	f104 0403 	add.w	r4, r4, #3
 8016896:	d25b      	bcs.n	8016950 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 8016898:	8802      	ldrh	r2, [r0, #0]
 801689a:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801689e:	ea4f 2822 	mov.w	r8, r2, asr #8
 80168a2:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 80168a6:	fb11 f109 	smulbb	r1, r1, r9
 80168aa:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 80168ae:	10d5      	asrs	r5, r2, #3
 80168b0:	fb08 1803 	mla	r8, r8, r3, r1
 80168b4:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 80168b8:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80168bc:	fb11 f109 	smulbb	r1, r1, r9
 80168c0:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 80168c4:	fb05 1503 	mla	r5, r5, r3, r1
 80168c8:	00d2      	lsls	r2, r2, #3
 80168ca:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 80168ce:	b2d2      	uxtb	r2, r2
 80168d0:	fb11 f109 	smulbb	r1, r1, r9
 80168d4:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 80168d8:	fa1f f888 	uxth.w	r8, r8
 80168dc:	fb02 1203 	mla	r2, r2, r3, r1
 80168e0:	b292      	uxth	r2, r2
 80168e2:	f108 0101 	add.w	r1, r8, #1
 80168e6:	b2ad      	uxth	r5, r5
 80168e8:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 80168ec:	1c51      	adds	r1, r2, #1
 80168ee:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80168f2:	1c69      	adds	r1, r5, #1
 80168f4:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 80168f8:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 80168fc:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8016900:	096d      	lsrs	r5, r5, #5
 8016902:	ea42 0208 	orr.w	r2, r2, r8
 8016906:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801690a:	432a      	orrs	r2, r5
 801690c:	f820 2b02 	strh.w	r2, [r0], #2
 8016910:	e7bd      	b.n	801688e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 8016912:	4a14      	ldr	r2, [pc, #80]	; (8016964 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 8016914:	42b0      	cmp	r0, r6
 8016916:	d21f      	bcs.n	8016958 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8016918:	eb00 050e 	add.w	r5, r0, lr
 801691c:	42a8      	cmp	r0, r5
 801691e:	4621      	mov	r1, r4
 8016920:	f104 0403 	add.w	r4, r4, #3
 8016924:	d210      	bcs.n	8016948 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 8016926:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 801692a:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801692e:	00db      	lsls	r3, r3, #3
 8016930:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 8016934:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8016938:	430b      	orrs	r3, r1
 801693a:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801693e:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 8016942:	f820 3b02 	strh.w	r3, [r0], #2
 8016946:	e7e9      	b.n	801691c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 8016948:	4438      	add	r0, r7
 801694a:	eb01 040c 	add.w	r4, r1, ip
 801694e:	e7e1      	b.n	8016914 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 8016950:	4438      	add	r0, r7
 8016952:	eb01 040c 	add.w	r4, r1, ip
 8016956:	e796      	b.n	8016886 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 8016958:	4b03      	ldr	r3, [pc, #12]	; (8016968 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 801695a:	6818      	ldr	r0, [r3, #0]
 801695c:	6803      	ldr	r3, [r0, #0]
 801695e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016960:	4798      	blx	r3
 8016962:	e768      	b.n	8016836 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 8016964:	fffff800 	.word	0xfffff800
 8016968:	20017458 	.word	0x20017458
 801696c:	20017452 	.word	0x20017452

08016970 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 8016970:	b4f0      	push	{r4, r5, r6, r7}
 8016972:	4616      	mov	r6, r2
 8016974:	2e01      	cmp	r6, #1
 8016976:	461c      	mov	r4, r3
 8016978:	460d      	mov	r5, r1
 801697a:	9a04      	ldr	r2, [sp, #16]
 801697c:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8016980:	f89d 7018 	ldrb.w	r7, [sp, #24]
 8016984:	d012      	beq.n	80169ac <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 8016986:	d303      	bcc.n	8016990 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 8016988:	2e02      	cmp	r6, #2
 801698a:	d00a      	beq.n	80169a2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 801698c:	bcf0      	pop	{r4, r5, r6, r7}
 801698e:	4770      	bx	lr
 8016990:	6805      	ldr	r5, [r0, #0]
 8016992:	e9cd 3704 	strd	r3, r7, [sp, #16]
 8016996:	68ed      	ldr	r5, [r5, #12]
 8016998:	4613      	mov	r3, r2
 801699a:	46ac      	mov	ip, r5
 801699c:	4622      	mov	r2, r4
 801699e:	bcf0      	pop	{r4, r5, r6, r7}
 80169a0:	4760      	bx	ip
 80169a2:	4621      	mov	r1, r4
 80169a4:	4628      	mov	r0, r5
 80169a6:	bcf0      	pop	{r4, r5, r6, r7}
 80169a8:	f7ff bd94 	b.w	80164d4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80169ac:	4621      	mov	r1, r4
 80169ae:	4628      	mov	r0, r5
 80169b0:	bcf0      	pop	{r4, r5, r6, r7}
 80169b2:	f7ff bee5 	b.w	8016780 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

080169b8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 80169b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80169bc:	4681      	mov	r9, r0
 80169be:	b093      	sub	sp, #76	; 0x4c
 80169c0:	6810      	ldr	r0, [r2, #0]
 80169c2:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 80169c6:	4f6d      	ldr	r7, [pc, #436]	; (8016b7c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 80169c8:	4688      	mov	r8, r1
 80169ca:	6851      	ldr	r1, [r2, #4]
 80169cc:	ac0e      	add	r4, sp, #56	; 0x38
 80169ce:	c403      	stmia	r4!, {r0, r1}
 80169d0:	6818      	ldr	r0, [r3, #0]
 80169d2:	6859      	ldr	r1, [r3, #4]
 80169d4:	ac10      	add	r4, sp, #64	; 0x40
 80169d6:	4616      	mov	r6, r2
 80169d8:	c403      	stmia	r4!, {r0, r1}
 80169da:	a80e      	add	r0, sp, #56	; 0x38
 80169dc:	f7f9 f872 	bl	800fac4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80169e0:	4631      	mov	r1, r6
 80169e2:	a810      	add	r0, sp, #64	; 0x40
 80169e4:	f7f9 f896 	bl	800fb14 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80169e8:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 80169ec:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 80169f0:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 80169f4:	4e62      	ldr	r6, [pc, #392]	; (8016b80 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 80169f6:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 80169fa:	6830      	ldr	r0, [r6, #0]
 80169fc:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 8016a00:	fb11 2103 	smlabb	r1, r1, r3, r2
 8016a04:	4489      	add	r9, r1
 8016a06:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 8016a0a:	440a      	add	r2, r1
 8016a0c:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 8016a10:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8016a14:	4413      	add	r3, r2
 8016a16:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 8016a1a:	6803      	ldr	r3, [r0, #0]
 8016a1c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8016a1e:	4798      	blx	r3
 8016a20:	f010 0f80 	tst.w	r0, #128	; 0x80
 8016a24:	6830      	ldr	r0, [r6, #0]
 8016a26:	d01d      	beq.n	8016a64 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 8016a28:	2200      	movs	r2, #0
 8016a2a:	6801      	ldr	r1, [r0, #0]
 8016a2c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8016a30:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8016a34:	220b      	movs	r2, #11
 8016a36:	9207      	str	r2, [sp, #28]
 8016a38:	883a      	ldrh	r2, [r7, #0]
 8016a3a:	9206      	str	r2, [sp, #24]
 8016a3c:	2201      	movs	r2, #1
 8016a3e:	e9cd a204 	strd	sl, r2, [sp, #16]
 8016a42:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 8016a46:	9203      	str	r2, [sp, #12]
 8016a48:	b2a4      	uxth	r4, r4
 8016a4a:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 8016a4e:	9200      	str	r2, [sp, #0]
 8016a50:	b2ad      	uxth	r5, r5
 8016a52:	9502      	str	r5, [sp, #8]
 8016a54:	9401      	str	r4, [sp, #4]
 8016a56:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 8016a58:	4642      	mov	r2, r8
 8016a5a:	4649      	mov	r1, r9
 8016a5c:	47a0      	blx	r4
 8016a5e:	b013      	add	sp, #76	; 0x4c
 8016a60:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016a64:	6803      	ldr	r3, [r0, #0]
 8016a66:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8016a68:	4798      	blx	r3
 8016a6a:	883b      	ldrh	r3, [r7, #0]
 8016a6c:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 8016a70:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 8016a74:	fb03 1202 	mla	r2, r3, r2, r1
 8016a78:	435d      	muls	r5, r3
 8016a7a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8016a7e:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 8016a82:	920c      	str	r2, [sp, #48]	; 0x30
 8016a84:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 8016a88:	1b12      	subs	r2, r2, r4
 8016a8a:	920d      	str	r2, [sp, #52]	; 0x34
 8016a8c:	0062      	lsls	r2, r4, #1
 8016a8e:	1b1c      	subs	r4, r3, r4
 8016a90:	0063      	lsls	r3, r4, #1
 8016a92:	920a      	str	r2, [sp, #40]	; 0x28
 8016a94:	930b      	str	r3, [sp, #44]	; 0x2c
 8016a96:	f04f 0e04 	mov.w	lr, #4
 8016a9a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8016a9c:	4298      	cmp	r0, r3
 8016a9e:	d266      	bcs.n	8016b6e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 8016aa0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8016aa2:	eb00 0b03 	add.w	fp, r0, r3
 8016aa6:	4558      	cmp	r0, fp
 8016aa8:	d25c      	bcs.n	8016b64 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 8016aaa:	f819 3b01 	ldrb.w	r3, [r9], #1
 8016aae:	fb1e e303 	smlabb	r3, lr, r3, lr
 8016ab2:	f858 2003 	ldr.w	r2, [r8, r3]
 8016ab6:	0e11      	lsrs	r1, r2, #24
 8016ab8:	d012      	beq.n	8016ae0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8016aba:	29ff      	cmp	r1, #255	; 0xff
 8016abc:	ea4f 2712 	mov.w	r7, r2, lsr #8
 8016ac0:	d110      	bne.n	8016ae4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8016ac2:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8016ac6:	d10d      	bne.n	8016ae4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8016ac8:	0953      	lsrs	r3, r2, #5
 8016aca:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 8016ace:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8016ad2:	f027 0707 	bic.w	r7, r7, #7
 8016ad6:	431f      	orrs	r7, r3
 8016ad8:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8016adc:	433a      	orrs	r2, r7
 8016ade:	8002      	strh	r2, [r0, #0]
 8016ae0:	3002      	adds	r0, #2
 8016ae2:	e7e0      	b.n	8016aa6 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 8016ae4:	fb0a f101 	mul.w	r1, sl, r1
 8016ae8:	8806      	ldrh	r6, [r0, #0]
 8016aea:	1c4b      	adds	r3, r1, #1
 8016aec:	eb03 2321 	add.w	r3, r3, r1, asr #8
 8016af0:	1235      	asrs	r5, r6, #8
 8016af2:	10f4      	asrs	r4, r6, #3
 8016af4:	121b      	asrs	r3, r3, #8
 8016af6:	00f6      	lsls	r6, r6, #3
 8016af8:	b299      	uxth	r1, r3
 8016afa:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 8016afe:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8016b02:	b2f6      	uxtb	r6, r6
 8016b04:	43db      	mvns	r3, r3
 8016b06:	b2d2      	uxtb	r2, r2
 8016b08:	b2db      	uxtb	r3, r3
 8016b0a:	fb1c fc01 	smulbb	ip, ip, r1
 8016b0e:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 8016b12:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8016b16:	fb12 f201 	smulbb	r2, r2, r1
 8016b1a:	fb05 c503 	mla	r5, r5, r3, ip
 8016b1e:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8016b22:	b2ff      	uxtb	r7, r7
 8016b24:	fb06 2203 	mla	r2, r6, r3, r2
 8016b28:	b2ad      	uxth	r5, r5
 8016b2a:	fb17 f701 	smulbb	r7, r7, r1
 8016b2e:	b292      	uxth	r2, r2
 8016b30:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 8016b34:	fb04 7403 	mla	r4, r4, r3, r7
 8016b38:	f105 0c01 	add.w	ip, r5, #1
 8016b3c:	1c57      	adds	r7, r2, #1
 8016b3e:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8016b42:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8016b46:	b2a4      	uxth	r4, r4
 8016b48:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8016b4c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8016b50:	433d      	orrs	r5, r7
 8016b52:	1c67      	adds	r7, r4, #1
 8016b54:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 8016b58:	0964      	lsrs	r4, r4, #5
 8016b5a:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8016b5e:	4325      	orrs	r5, r4
 8016b60:	8005      	strh	r5, [r0, #0]
 8016b62:	e7bd      	b.n	8016ae0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8016b64:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8016b66:	4418      	add	r0, r3
 8016b68:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8016b6a:	4499      	add	r9, r3
 8016b6c:	e795      	b.n	8016a9a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 8016b6e:	4b04      	ldr	r3, [pc, #16]	; (8016b80 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8016b70:	6818      	ldr	r0, [r3, #0]
 8016b72:	6803      	ldr	r3, [r0, #0]
 8016b74:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016b76:	4798      	blx	r3
 8016b78:	e771      	b.n	8016a5e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 8016b7a:	bf00      	nop
 8016b7c:	20017452 	.word	0x20017452
 8016b80:	20017458 	.word	0x20017458

08016b84 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 8016b84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016b88:	b087      	sub	sp, #28
 8016b8a:	4680      	mov	r8, r0
 8016b8c:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 8016b90:	460d      	mov	r5, r1
 8016b92:	4614      	mov	r4, r2
 8016b94:	2e00      	cmp	r6, #0
 8016b96:	f000 80b9 	beq.w	8016d0c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 8016b9a:	6810      	ldr	r0, [r2, #0]
 8016b9c:	6851      	ldr	r1, [r2, #4]
 8016b9e:	af02      	add	r7, sp, #8
 8016ba0:	c703      	stmia	r7!, {r0, r1}
 8016ba2:	6818      	ldr	r0, [r3, #0]
 8016ba4:	6859      	ldr	r1, [r3, #4]
 8016ba6:	af04      	add	r7, sp, #16
 8016ba8:	c703      	stmia	r7!, {r0, r1}
 8016baa:	a802      	add	r0, sp, #8
 8016bac:	f7f8 ff8a 	bl	800fac4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016bb0:	4621      	mov	r1, r4
 8016bb2:	a804      	add	r0, sp, #16
 8016bb4:	f7f8 ffae 	bl	800fb14 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8016bb8:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8016bbc:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8016bc0:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 8016bc4:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 8016bc8:	fb14 2103 	smlabb	r1, r4, r3, r2
 8016bcc:	eb08 0401 	add.w	r4, r8, r1
 8016bd0:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8016bd4:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8016bd8:	440a      	add	r2, r1
 8016bda:	f8ad 2010 	strh.w	r2, [sp, #16]
 8016bde:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8016be2:	4413      	add	r3, r2
 8016be4:	f8ad 3012 	strh.w	r3, [sp, #18]
 8016be8:	4b4a      	ldr	r3, [pc, #296]	; (8016d14 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 8016bea:	6818      	ldr	r0, [r3, #0]
 8016bec:	6803      	ldr	r3, [r0, #0]
 8016bee:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8016bf0:	4798      	blx	r3
 8016bf2:	4b49      	ldr	r3, [pc, #292]	; (8016d18 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 8016bf4:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 8016bf8:	881a      	ldrh	r2, [r3, #0]
 8016bfa:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 8016bfe:	2eff      	cmp	r6, #255	; 0xff
 8016c00:	fb02 c101 	mla	r1, r2, r1, ip
 8016c04:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8016c08:	fb02 f207 	mul.w	r2, r2, r7
 8016c0c:	f105 0104 	add.w	r1, r5, #4
 8016c10:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 8016c14:	461d      	mov	r5, r3
 8016c16:	d05a      	beq.n	8016cce <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 8016c18:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 8016c1c:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8016c20:	b2b6      	uxth	r6, r6
 8016c22:	fa1f fe8e 	uxth.w	lr, lr
 8016c26:	9301      	str	r3, [sp, #4]
 8016c28:	4282      	cmp	r2, r0
 8016c2a:	d96a      	bls.n	8016d02 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 8016c2c:	eb00 0b0a 	add.w	fp, r0, sl
 8016c30:	4583      	cmp	fp, r0
 8016c32:	d940      	bls.n	8016cb6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 8016c34:	f814 3b01 	ldrb.w	r3, [r4], #1
 8016c38:	8805      	ldrh	r5, [r0, #0]
 8016c3a:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8016c3e:	122f      	asrs	r7, r5, #8
 8016c40:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8016c44:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8016c48:	fb17 f70e 	smulbb	r7, r7, lr
 8016c4c:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8016c50:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8016c54:	00ed      	lsls	r5, r5, #3
 8016c56:	fb0c 7c06 	mla	ip, ip, r6, r7
 8016c5a:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8016c5e:	10df      	asrs	r7, r3, #3
 8016c60:	b2ed      	uxtb	r5, r5
 8016c62:	00db      	lsls	r3, r3, #3
 8016c64:	fa1f fc8c 	uxth.w	ip, ip
 8016c68:	fb19 f90e 	smulbb	r9, r9, lr
 8016c6c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8016c70:	b2db      	uxtb	r3, r3
 8016c72:	fb15 f50e 	smulbb	r5, r5, lr
 8016c76:	fb07 9706 	mla	r7, r7, r6, r9
 8016c7a:	fb03 5306 	mla	r3, r3, r6, r5
 8016c7e:	f10c 0901 	add.w	r9, ip, #1
 8016c82:	b29b      	uxth	r3, r3
 8016c84:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 8016c88:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 8016c8c:	f103 0c01 	add.w	ip, r3, #1
 8016c90:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8016c94:	b2bf      	uxth	r7, r7
 8016c96:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8016c9a:	ea4c 0c09 	orr.w	ip, ip, r9
 8016c9e:	f107 0901 	add.w	r9, r7, #1
 8016ca2:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 8016ca6:	097f      	lsrs	r7, r7, #5
 8016ca8:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8016cac:	ea4c 0c07 	orr.w	ip, ip, r7
 8016cb0:	f820 cb02 	strh.w	ip, [r0], #2
 8016cb4:	e7bc      	b.n	8016c30 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 8016cb6:	9b01      	ldr	r3, [sp, #4]
 8016cb8:	881b      	ldrh	r3, [r3, #0]
 8016cba:	eba3 0308 	sub.w	r3, r3, r8
 8016cbe:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8016cc2:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8016cc6:	eba3 0308 	sub.w	r3, r3, r8
 8016cca:	441c      	add	r4, r3
 8016ccc:	e7ac      	b.n	8016c28 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 8016cce:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8016cd2:	4282      	cmp	r2, r0
 8016cd4:	d915      	bls.n	8016d02 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 8016cd6:	eb00 060a 	add.w	r6, r0, sl
 8016cda:	4286      	cmp	r6, r0
 8016cdc:	d906      	bls.n	8016cec <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 8016cde:	f814 3b01 	ldrb.w	r3, [r4], #1
 8016ce2:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8016ce6:	f820 3b02 	strh.w	r3, [r0], #2
 8016cea:	e7f6      	b.n	8016cda <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 8016cec:	882b      	ldrh	r3, [r5, #0]
 8016cee:	eba3 0308 	sub.w	r3, r3, r8
 8016cf2:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8016cf6:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8016cfa:	eba3 0308 	sub.w	r3, r3, r8
 8016cfe:	441c      	add	r4, r3
 8016d00:	e7e7      	b.n	8016cd2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 8016d02:	4b04      	ldr	r3, [pc, #16]	; (8016d14 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 8016d04:	6818      	ldr	r0, [r3, #0]
 8016d06:	6803      	ldr	r3, [r0, #0]
 8016d08:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016d0a:	4798      	blx	r3
 8016d0c:	b007      	add	sp, #28
 8016d0e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016d12:	bf00      	nop
 8016d14:	20017458 	.word	0x20017458
 8016d18:	20017452 	.word	0x20017452

08016d1c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 8016d1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016d20:	b091      	sub	sp, #68	; 0x44
 8016d22:	4680      	mov	r8, r0
 8016d24:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 8016d28:	460f      	mov	r7, r1
 8016d2a:	4614      	mov	r4, r2
 8016d2c:	2d00      	cmp	r5, #0
 8016d2e:	d051      	beq.n	8016dd4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 8016d30:	6810      	ldr	r0, [r2, #0]
 8016d32:	6851      	ldr	r1, [r2, #4]
 8016d34:	f8df 9200 	ldr.w	r9, [pc, #512]	; 8016f38 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 8016d38:	ae0c      	add	r6, sp, #48	; 0x30
 8016d3a:	c603      	stmia	r6!, {r0, r1}
 8016d3c:	6818      	ldr	r0, [r3, #0]
 8016d3e:	6859      	ldr	r1, [r3, #4]
 8016d40:	ae0e      	add	r6, sp, #56	; 0x38
 8016d42:	c603      	stmia	r6!, {r0, r1}
 8016d44:	a80c      	add	r0, sp, #48	; 0x30
 8016d46:	f7f8 febd 	bl	800fac4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016d4a:	4621      	mov	r1, r4
 8016d4c:	a80e      	add	r0, sp, #56	; 0x38
 8016d4e:	f7f8 fee1 	bl	800fb14 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8016d52:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 8016d56:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 8016d5a:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 8016d5e:	f8d9 0000 	ldr.w	r0, [r9]
 8016d62:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 8016d66:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 8016d6a:	fb11 2103 	smlabb	r1, r1, r3, r2
 8016d6e:	eb08 0401 	add.w	r4, r8, r1
 8016d72:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 8016d76:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 8016f3c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 8016d7a:	440a      	add	r2, r1
 8016d7c:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 8016d80:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 8016d84:	4413      	add	r3, r2
 8016d86:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 8016d8a:	6803      	ldr	r3, [r0, #0]
 8016d8c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8016d8e:	4798      	blx	r3
 8016d90:	f010 0f80 	tst.w	r0, #128	; 0x80
 8016d94:	f8d9 0000 	ldr.w	r0, [r9]
 8016d98:	d01f      	beq.n	8016dda <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 8016d9a:	2200      	movs	r2, #0
 8016d9c:	6801      	ldr	r1, [r0, #0]
 8016d9e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8016da2:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8016da6:	220b      	movs	r2, #11
 8016da8:	9207      	str	r2, [sp, #28]
 8016daa:	f8b8 2000 	ldrh.w	r2, [r8]
 8016dae:	9206      	str	r2, [sp, #24]
 8016db0:	2201      	movs	r2, #1
 8016db2:	e9cd 5204 	strd	r5, r2, [sp, #16]
 8016db6:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 8016dba:	9203      	str	r2, [sp, #12]
 8016dbc:	fa1f f28a 	uxth.w	r2, sl
 8016dc0:	9202      	str	r2, [sp, #8]
 8016dc2:	b2b6      	uxth	r6, r6
 8016dc4:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8016dc8:	9200      	str	r2, [sp, #0]
 8016dca:	9601      	str	r6, [sp, #4]
 8016dcc:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 8016dce:	463a      	mov	r2, r7
 8016dd0:	4621      	mov	r1, r4
 8016dd2:	47a8      	blx	r5
 8016dd4:	b011      	add	sp, #68	; 0x44
 8016dd6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016dda:	6803      	ldr	r3, [r0, #0]
 8016ddc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8016dde:	4798      	blx	r3
 8016de0:	f8b8 2000 	ldrh.w	r2, [r8]
 8016de4:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 8016de8:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 8016dec:	2dff      	cmp	r5, #255	; 0xff
 8016dee:	fb02 1303 	mla	r3, r2, r3, r1
 8016df2:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8016df6:	ea4f 0946 	mov.w	r9, r6, lsl #1
 8016dfa:	fb0a fa02 	mul.w	sl, sl, r2
 8016dfe:	d062      	beq.n	8016ec6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 8016e00:	ea6f 0c05 	mvn.w	ip, r5
 8016e04:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 8016e08:	930a      	str	r3, [sp, #40]	; 0x28
 8016e0a:	b2ad      	uxth	r5, r5
 8016e0c:	fa5f fc8c 	uxtb.w	ip, ip
 8016e10:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 8016e14:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8016e16:	4298      	cmp	r0, r3
 8016e18:	f080 8085 	bcs.w	8016f26 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 8016e1c:	eb00 0b09 	add.w	fp, r0, r9
 8016e20:	4558      	cmp	r0, fp
 8016e22:	d246      	bcs.n	8016eb2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 8016e24:	f814 eb01 	ldrb.w	lr, [r4], #1
 8016e28:	2303      	movs	r3, #3
 8016e2a:	2204      	movs	r2, #4
 8016e2c:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 8016e30:	eb07 0a0e 	add.w	sl, r7, lr
 8016e34:	8803      	ldrh	r3, [r0, #0]
 8016e36:	f89a 8002 	ldrb.w	r8, [sl, #2]
 8016e3a:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8016e3e:	1219      	asrs	r1, r3, #8
 8016e40:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8016e44:	fb18 f805 	smulbb	r8, r8, r5
 8016e48:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 8016e4c:	10da      	asrs	r2, r3, #3
 8016e4e:	fb01 810c 	mla	r1, r1, ip, r8
 8016e52:	00db      	lsls	r3, r3, #3
 8016e54:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8016e58:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8016e5c:	b2db      	uxtb	r3, r3
 8016e5e:	fb18 f805 	smulbb	r8, r8, r5
 8016e62:	fb1e fe05 	smulbb	lr, lr, r5
 8016e66:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 8016e6a:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 8016e6e:	b289      	uxth	r1, r1
 8016e70:	fb02 820c 	mla	r2, r2, ip, r8
 8016e74:	fb03 e30c 	mla	r3, r3, ip, lr
 8016e78:	b292      	uxth	r2, r2
 8016e7a:	b29b      	uxth	r3, r3
 8016e7c:	f101 0801 	add.w	r8, r1, #1
 8016e80:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 8016e84:	f103 0e01 	add.w	lr, r3, #1
 8016e88:	f102 0801 	add.w	r8, r2, #1
 8016e8c:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 8016e90:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 8016e94:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8016e98:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8016e9c:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8016ea0:	ea4e 0101 	orr.w	r1, lr, r1
 8016ea4:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8016ea8:	ea41 0108 	orr.w	r1, r1, r8
 8016eac:	f820 1b02 	strh.w	r1, [r0], #2
 8016eb0:	e7b6      	b.n	8016e20 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 8016eb2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8016eb4:	881b      	ldrh	r3, [r3, #0]
 8016eb6:	1b9b      	subs	r3, r3, r6
 8016eb8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8016ebc:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8016ec0:	1b9b      	subs	r3, r3, r6
 8016ec2:	441c      	add	r4, r3
 8016ec4:	e7a6      	b.n	8016e14 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 8016ec6:	491b      	ldr	r1, [pc, #108]	; (8016f34 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 8016ec8:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 8016ecc:	2203      	movs	r2, #3
 8016ece:	2504      	movs	r5, #4
 8016ed0:	4550      	cmp	r0, sl
 8016ed2:	d228      	bcs.n	8016f26 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 8016ed4:	eb00 0c09 	add.w	ip, r0, r9
 8016ed8:	4560      	cmp	r0, ip
 8016eda:	4623      	mov	r3, r4
 8016edc:	d219      	bcs.n	8016f12 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 8016ede:	f893 e000 	ldrb.w	lr, [r3]
 8016ee2:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 8016ee6:	eb07 0b0e 	add.w	fp, r7, lr
 8016eea:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8016eee:	f89b 3002 	ldrb.w	r3, [fp, #2]
 8016ef2:	f89b b001 	ldrb.w	fp, [fp, #1]
 8016ef6:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 8016efa:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 8016efe:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8016f02:	ea43 030b 	orr.w	r3, r3, fp
 8016f06:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 8016f0a:	3401      	adds	r4, #1
 8016f0c:	f820 3b02 	strh.w	r3, [r0], #2
 8016f10:	e7e2      	b.n	8016ed8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 8016f12:	f8b8 3000 	ldrh.w	r3, [r8]
 8016f16:	1b9b      	subs	r3, r3, r6
 8016f18:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8016f1c:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8016f20:	1b9b      	subs	r3, r3, r6
 8016f22:	441c      	add	r4, r3
 8016f24:	e7d4      	b.n	8016ed0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 8016f26:	4b04      	ldr	r3, [pc, #16]	; (8016f38 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 8016f28:	6818      	ldr	r0, [r3, #0]
 8016f2a:	6803      	ldr	r3, [r0, #0]
 8016f2c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016f2e:	4798      	blx	r3
 8016f30:	e750      	b.n	8016dd4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 8016f32:	bf00      	nop
 8016f34:	fffff800 	.word	0xfffff800
 8016f38:	20017458 	.word	0x20017458
 8016f3c:	20017452 	.word	0x20017452

08016f40 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 8016f40:	b430      	push	{r4, r5}
 8016f42:	780d      	ldrb	r5, [r1, #0]
 8016f44:	f89d 4008 	ldrb.w	r4, [sp, #8]
 8016f48:	2d01      	cmp	r5, #1
 8016f4a:	d00a      	beq.n	8016f62 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x22>
 8016f4c:	d305      	bcc.n	8016f5a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1a>
 8016f4e:	2d02      	cmp	r5, #2
 8016f50:	d10b      	bne.n	8016f6a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x2a>
 8016f52:	9402      	str	r4, [sp, #8]
 8016f54:	bc30      	pop	{r4, r5}
 8016f56:	f7ff be15 	b.w	8016b84 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 8016f5a:	9402      	str	r4, [sp, #8]
 8016f5c:	bc30      	pop	{r4, r5}
 8016f5e:	f7ff bd2b 	b.w	80169b8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 8016f62:	9402      	str	r4, [sp, #8]
 8016f64:	bc30      	pop	{r4, r5}
 8016f66:	f7ff bed9 	b.w	8016d1c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 8016f6a:	bc30      	pop	{r4, r5}
 8016f6c:	4770      	bx	lr
	...

08016f70 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 8016f70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016f74:	4604      	mov	r4, r0
 8016f76:	b087      	sub	sp, #28
 8016f78:	6810      	ldr	r0, [r2, #0]
 8016f7a:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 8016f7e:	f8df 9238 	ldr.w	r9, [pc, #568]	; 80171b8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 8016f82:	460e      	mov	r6, r1
 8016f84:	6851      	ldr	r1, [r2, #4]
 8016f86:	ad02      	add	r5, sp, #8
 8016f88:	c503      	stmia	r5!, {r0, r1}
 8016f8a:	6818      	ldr	r0, [r3, #0]
 8016f8c:	6859      	ldr	r1, [r3, #4]
 8016f8e:	ad04      	add	r5, sp, #16
 8016f90:	4617      	mov	r7, r2
 8016f92:	c503      	stmia	r5!, {r0, r1}
 8016f94:	a802      	add	r0, sp, #8
 8016f96:	f7f8 fd95 	bl	800fac4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016f9a:	4639      	mov	r1, r7
 8016f9c:	a804      	add	r0, sp, #16
 8016f9e:	f7f8 fdb9 	bl	800fb14 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8016fa2:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8016fa6:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8016faa:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 8016fae:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8016fb2:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 8016fb6:	fb11 2103 	smlabb	r1, r1, r3, r2
 8016fba:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 8016fbe:	440e      	add	r6, r1
 8016fc0:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8016fc4:	440a      	add	r2, r1
 8016fc6:	f8ad 2010 	strh.w	r2, [sp, #16]
 8016fca:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8016fce:	4413      	add	r3, r2
 8016fd0:	f8ad 3012 	strh.w	r3, [sp, #18]
 8016fd4:	4b77      	ldr	r3, [pc, #476]	; (80171b4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 8016fd6:	6818      	ldr	r0, [r3, #0]
 8016fd8:	6803      	ldr	r3, [r0, #0]
 8016fda:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8016fdc:	4798      	blx	r3
 8016fde:	f8b9 b000 	ldrh.w	fp, [r9]
 8016fe2:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8016fe6:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8016fea:	fb0b 2303 	mla	r3, fp, r3, r2
 8016fee:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8016ff2:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8016ff6:	ea4f 0348 	mov.w	r3, r8, lsl #1
 8016ffa:	fb05 f50b 	mul.w	r5, r5, fp
 8016ffe:	9300      	str	r3, [sp, #0]
 8017000:	d069      	beq.n	80170d6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 8017002:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 8017006:	4558      	cmp	r0, fp
 8017008:	f080 80cc 	bcs.w	80171a4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801700c:	9b00      	ldr	r3, [sp, #0]
 801700e:	18c3      	adds	r3, r0, r3
 8017010:	9301      	str	r3, [sp, #4]
 8017012:	4631      	mov	r1, r6
 8017014:	9b01      	ldr	r3, [sp, #4]
 8017016:	4298      	cmp	r0, r3
 8017018:	d24f      	bcs.n	80170ba <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 801701a:	f811 2b01 	ldrb.w	r2, [r1], #1
 801701e:	2a00      	cmp	r2, #0
 8017020:	d048      	beq.n	80170b4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 8017022:	fb0a f202 	mul.w	r2, sl, r2
 8017026:	1c53      	adds	r3, r2, #1
 8017028:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801702c:	121b      	asrs	r3, r3, #8
 801702e:	d041      	beq.n	80170b4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 8017030:	8802      	ldrh	r2, [r0, #0]
 8017032:	f8b4 c000 	ldrh.w	ip, [r4]
 8017036:	b29e      	uxth	r6, r3
 8017038:	1215      	asrs	r5, r2, #8
 801703a:	43db      	mvns	r3, r3
 801703c:	b2db      	uxtb	r3, r3
 801703e:	ea4f 272c 	mov.w	r7, ip, asr #8
 8017042:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8017046:	fb15 f503 	smulbb	r5, r5, r3
 801704a:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 801704e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8017052:	00d2      	lsls	r2, r2, #3
 8017054:	fb07 5706 	mla	r7, r7, r6, r5
 8017058:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801705c:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8017060:	b2d2      	uxtb	r2, r2
 8017062:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8017066:	b2bf      	uxth	r7, r7
 8017068:	fb1e fe03 	smulbb	lr, lr, r3
 801706c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8017070:	fa5f fc8c 	uxtb.w	ip, ip
 8017074:	fb12 f203 	smulbb	r2, r2, r3
 8017078:	fb05 e506 	mla	r5, r5, r6, lr
 801707c:	fb0c 2c06 	mla	ip, ip, r6, r2
 8017080:	f107 0e01 	add.w	lr, r7, #1
 8017084:	fa1f fc8c 	uxth.w	ip, ip
 8017088:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 801708c:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 8017090:	f10c 0701 	add.w	r7, ip, #1
 8017094:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8017098:	b2ad      	uxth	r5, r5
 801709a:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801709e:	ea47 070e 	orr.w	r7, r7, lr
 80170a2:	f105 0e01 	add.w	lr, r5, #1
 80170a6:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 80170aa:	096d      	lsrs	r5, r5, #5
 80170ac:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80170b0:	432f      	orrs	r7, r5
 80170b2:	8007      	strh	r7, [r0, #0]
 80170b4:	3002      	adds	r0, #2
 80170b6:	3402      	adds	r4, #2
 80170b8:	e7ac      	b.n	8017014 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 80170ba:	f8b9 3000 	ldrh.w	r3, [r9]
 80170be:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 80170c2:	eba3 0308 	sub.w	r3, r3, r8
 80170c6:	eba6 0608 	sub.w	r6, r6, r8
 80170ca:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 80170ce:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80170d2:	440e      	add	r6, r1
 80170d4:	e797      	b.n	8017006 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 80170d6:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 80170da:	42a8      	cmp	r0, r5
 80170dc:	d262      	bcs.n	80171a4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 80170de:	9b00      	ldr	r3, [sp, #0]
 80170e0:	4631      	mov	r1, r6
 80170e2:	eb00 0b03 	add.w	fp, r0, r3
 80170e6:	4558      	cmp	r0, fp
 80170e8:	d24e      	bcs.n	8017188 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 80170ea:	f811 3b01 	ldrb.w	r3, [r1], #1
 80170ee:	b12b      	cbz	r3, 80170fc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 80170f0:	2bff      	cmp	r3, #255	; 0xff
 80170f2:	f8b4 e000 	ldrh.w	lr, [r4]
 80170f6:	d104      	bne.n	8017102 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 80170f8:	f8a0 e000 	strh.w	lr, [r0]
 80170fc:	3002      	adds	r0, #2
 80170fe:	3402      	adds	r4, #2
 8017100:	e7f1      	b.n	80170e6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 8017102:	8802      	ldrh	r2, [r0, #0]
 8017104:	b29f      	uxth	r7, r3
 8017106:	1216      	asrs	r6, r2, #8
 8017108:	43db      	mvns	r3, r3
 801710a:	b2db      	uxtb	r3, r3
 801710c:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8017110:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8017114:	fb16 f603 	smulbb	r6, r6, r3
 8017118:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 801711c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8017120:	00d2      	lsls	r2, r2, #3
 8017122:	fb0c 6c07 	mla	ip, ip, r7, r6
 8017126:	b2d2      	uxtb	r2, r2
 8017128:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801712c:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8017130:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8017134:	fb1a fa03 	smulbb	sl, sl, r3
 8017138:	fa1f fc8c 	uxth.w	ip, ip
 801713c:	fb12 f303 	smulbb	r3, r2, r3
 8017140:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8017144:	fa5f fe8e 	uxtb.w	lr, lr
 8017148:	fb06 a607 	mla	r6, r6, r7, sl
 801714c:	f10c 0201 	add.w	r2, ip, #1
 8017150:	fb0e 3307 	mla	r3, lr, r7, r3
 8017154:	b2b6      	uxth	r6, r6
 8017156:	b29b      	uxth	r3, r3
 8017158:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801715c:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 8017160:	f106 0a01 	add.w	sl, r6, #1
 8017164:	f103 0c01 	add.w	ip, r3, #1
 8017168:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801716c:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 8017170:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8017174:	0976      	lsrs	r6, r6, #5
 8017176:	ea4c 0c02 	orr.w	ip, ip, r2
 801717a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801717e:	ea4c 0c06 	orr.w	ip, ip, r6
 8017182:	f8a0 c000 	strh.w	ip, [r0]
 8017186:	e7b9      	b.n	80170fc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 8017188:	f8b9 3000 	ldrh.w	r3, [r9]
 801718c:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8017190:	eba3 0308 	sub.w	r3, r3, r8
 8017194:	eba6 0608 	sub.w	r6, r6, r8
 8017198:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801719c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80171a0:	440e      	add	r6, r1
 80171a2:	e79a      	b.n	80170da <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 80171a4:	4b03      	ldr	r3, [pc, #12]	; (80171b4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 80171a6:	6818      	ldr	r0, [r3, #0]
 80171a8:	6803      	ldr	r3, [r0, #0]
 80171aa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80171ac:	4798      	blx	r3
 80171ae:	b007      	add	sp, #28
 80171b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80171b4:	20017458 	.word	0x20017458
 80171b8:	20017452 	.word	0x20017452

080171bc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 80171bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80171c0:	b089      	sub	sp, #36	; 0x24
 80171c2:	4682      	mov	sl, r0
 80171c4:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 80171c8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80171ca:	460f      	mov	r7, r1
 80171cc:	4691      	mov	r9, r2
 80171ce:	4698      	mov	r8, r3
 80171d0:	2e00      	cmp	r6, #0
 80171d2:	d036      	beq.n	8017242 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 80171d4:	4608      	mov	r0, r1
 80171d6:	f7fc f863 	bl	80132a0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80171da:	4605      	mov	r5, r0
 80171dc:	4638      	mov	r0, r7
 80171de:	f7fc f893 	bl	8013308 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80171e2:	f8ad 000e 	strh.w	r0, [sp, #14]
 80171e6:	4638      	mov	r0, r7
 80171e8:	f8ad 9008 	strh.w	r9, [sp, #8]
 80171ec:	f8ad 500c 	strh.w	r5, [sp, #12]
 80171f0:	f8ad 800a 	strh.w	r8, [sp, #10]
 80171f4:	f7fc f940 	bl	8013478 <_ZNK8touchgfx6Bitmap7getDataEv>
 80171f8:	4605      	mov	r5, r0
 80171fa:	4638      	mov	r0, r7
 80171fc:	f7fc f96c 	bl	80134d8 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 8017200:	4681      	mov	r9, r0
 8017202:	4638      	mov	r0, r7
 8017204:	f7fc f9bc 	bl	8013580 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8017208:	280b      	cmp	r0, #11
 801720a:	d81a      	bhi.n	8017242 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 801720c:	e8df f000 	tbb	[pc, r0]
 8017210:	1906aebd 	.word	0x1906aebd
 8017214:	19191919 	.word	0x19191919
 8017218:	b5191919 	.word	0xb5191919
 801721c:	4bb0      	ldr	r3, [pc, #704]	; (80174e0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
 801721e:	6818      	ldr	r0, [r3, #0]
 8017220:	6803      	ldr	r3, [r0, #0]
 8017222:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017224:	4798      	blx	r3
 8017226:	2eff      	cmp	r6, #255	; 0xff
 8017228:	d121      	bne.n	801726e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb2>
 801722a:	0683      	lsls	r3, r0, #26
 801722c:	d41f      	bmi.n	801726e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb2>
 801722e:	4638      	mov	r0, r7
 8017230:	f7fc f8ea 	bl	8013408 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8017234:	b940      	cbnz	r0, 8017248 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x8c>
 8017236:	4623      	mov	r3, r4
 8017238:	aa02      	add	r2, sp, #8
 801723a:	4629      	mov	r1, r5
 801723c:	4650      	mov	r0, sl
 801723e:	f7ff fa2f 	bl	80166a0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 8017242:	b009      	add	sp, #36	; 0x24
 8017244:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017248:	f10d 0818 	add.w	r8, sp, #24
 801724c:	4639      	mov	r1, r7
 801724e:	4640      	mov	r0, r8
 8017250:	f7fc f88e 	bl	8013370 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8017254:	e898 0003 	ldmia.w	r8, {r0, r1}
 8017258:	af04      	add	r7, sp, #16
 801725a:	e887 0003 	stmia.w	r7, {r0, r1}
 801725e:	4638      	mov	r0, r7
 8017260:	4621      	mov	r1, r4
 8017262:	f7f2 fc83 	bl	8009b6c <_ZN8touchgfx4RectaNERKS0_>
 8017266:	4638      	mov	r0, r7
 8017268:	f7f2 fcc3 	bl	8009bf2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801726c:	b130      	cbz	r0, 801727c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc0>
 801726e:	4633      	mov	r3, r6
 8017270:	4622      	mov	r2, r4
 8017272:	a902      	add	r1, sp, #8
 8017274:	4628      	mov	r0, r5
 8017276:	f7ff f92d 	bl	80164d4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801727a:	e7e2      	b.n	8017242 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 801727c:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8017280:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8017284:	4293      	cmp	r3, r2
 8017286:	dd12      	ble.n	80172ae <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf2>
 8017288:	1a9b      	subs	r3, r3, r2
 801728a:	f9b4 0000 	ldrsh.w	r0, [r4]
 801728e:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8017292:	f8ad 0018 	strh.w	r0, [sp, #24]
 8017296:	f8ad 201a 	strh.w	r2, [sp, #26]
 801729a:	f8ad 101c 	strh.w	r1, [sp, #28]
 801729e:	f8ad 301e 	strh.w	r3, [sp, #30]
 80172a2:	4642      	mov	r2, r8
 80172a4:	4633      	mov	r3, r6
 80172a6:	a902      	add	r1, sp, #8
 80172a8:	4628      	mov	r0, r5
 80172aa:	f7ff f913 	bl	80164d4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80172ae:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 80172b2:	f9b4 2000 	ldrsh.w	r2, [r4]
 80172b6:	4293      	cmp	r3, r2
 80172b8:	dd12      	ble.n	80172e0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x124>
 80172ba:	1a9b      	subs	r3, r3, r2
 80172bc:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 80172c0:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 80172c4:	f8ad 2018 	strh.w	r2, [sp, #24]
 80172c8:	f8ad 001a 	strh.w	r0, [sp, #26]
 80172cc:	f8ad 301c 	strh.w	r3, [sp, #28]
 80172d0:	f8ad 101e 	strh.w	r1, [sp, #30]
 80172d4:	23ff      	movs	r3, #255	; 0xff
 80172d6:	4642      	mov	r2, r8
 80172d8:	a902      	add	r1, sp, #8
 80172da:	4628      	mov	r0, r5
 80172dc:	f7ff f8fa 	bl	80164d4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80172e0:	463b      	mov	r3, r7
 80172e2:	aa02      	add	r2, sp, #8
 80172e4:	4629      	mov	r1, r5
 80172e6:	4650      	mov	r0, sl
 80172e8:	f7ff f9da 	bl	80166a0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 80172ec:	88a2      	ldrh	r2, [r4, #4]
 80172ee:	8823      	ldrh	r3, [r4, #0]
 80172f0:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 80172f4:	4413      	add	r3, r2
 80172f6:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80172fa:	440a      	add	r2, r1
 80172fc:	b29b      	uxth	r3, r3
 80172fe:	b292      	uxth	r2, r2
 8017300:	b211      	sxth	r1, r2
 8017302:	b218      	sxth	r0, r3
 8017304:	4288      	cmp	r0, r1
 8017306:	dd12      	ble.n	801732e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x172>
 8017308:	1a9b      	subs	r3, r3, r2
 801730a:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801730e:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 8017312:	f8ad 1018 	strh.w	r1, [sp, #24]
 8017316:	f8ad 301c 	strh.w	r3, [sp, #28]
 801731a:	f8ad 001e 	strh.w	r0, [sp, #30]
 801731e:	23ff      	movs	r3, #255	; 0xff
 8017320:	4642      	mov	r2, r8
 8017322:	a902      	add	r1, sp, #8
 8017324:	4628      	mov	r0, r5
 8017326:	f8ad 601a 	strh.w	r6, [sp, #26]
 801732a:	f7ff f8d3 	bl	80164d4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801732e:	88e2      	ldrh	r2, [r4, #6]
 8017330:	8863      	ldrh	r3, [r4, #2]
 8017332:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8017336:	4413      	add	r3, r2
 8017338:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801733c:	440a      	add	r2, r1
 801733e:	b29b      	uxth	r3, r3
 8017340:	b292      	uxth	r2, r2
 8017342:	b211      	sxth	r1, r2
 8017344:	b218      	sxth	r0, r3
 8017346:	4288      	cmp	r0, r1
 8017348:	f77f af7b 	ble.w	8017242 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 801734c:	1a9b      	subs	r3, r3, r2
 801734e:	f9b4 6000 	ldrsh.w	r6, [r4]
 8017352:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8017356:	f8ad 301e 	strh.w	r3, [sp, #30]
 801735a:	f8ad 6018 	strh.w	r6, [sp, #24]
 801735e:	f8ad 101a 	strh.w	r1, [sp, #26]
 8017362:	f8ad 001c 	strh.w	r0, [sp, #28]
 8017366:	23ff      	movs	r3, #255	; 0xff
 8017368:	4642      	mov	r2, r8
 801736a:	e782      	b.n	8017272 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb6>
 801736c:	4633      	mov	r3, r6
 801736e:	4622      	mov	r2, r4
 8017370:	a902      	add	r1, sp, #8
 8017372:	4628      	mov	r0, r5
 8017374:	f7ff fa04 	bl	8016780 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 8017378:	e763      	b.n	8017242 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 801737a:	9600      	str	r6, [sp, #0]
 801737c:	4623      	mov	r3, r4
 801737e:	aa02      	add	r2, sp, #8
 8017380:	4649      	mov	r1, r9
 8017382:	4628      	mov	r0, r5
 8017384:	f7ff fddc 	bl	8016f40 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 8017388:	e75b      	b.n	8017242 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 801738a:	4638      	mov	r0, r7
 801738c:	f7fc f83c 	bl	8013408 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8017390:	b950      	cbnz	r0, 80173a8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ec>
 8017392:	e9cd 6000 	strd	r6, r0, [sp]
 8017396:	f8da 3000 	ldr.w	r3, [sl]
 801739a:	aa02      	add	r2, sp, #8
 801739c:	68de      	ldr	r6, [r3, #12]
 801739e:	4629      	mov	r1, r5
 80173a0:	4623      	mov	r3, r4
 80173a2:	4650      	mov	r0, sl
 80173a4:	47b0      	blx	r6
 80173a6:	e74c      	b.n	8017242 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 80173a8:	f10d 0818 	add.w	r8, sp, #24
 80173ac:	4639      	mov	r1, r7
 80173ae:	4640      	mov	r0, r8
 80173b0:	f7fb ffde 	bl	8013370 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 80173b4:	e898 0003 	ldmia.w	r8, {r0, r1}
 80173b8:	af04      	add	r7, sp, #16
 80173ba:	e887 0003 	stmia.w	r7, {r0, r1}
 80173be:	4638      	mov	r0, r7
 80173c0:	4621      	mov	r1, r4
 80173c2:	f7f2 fbd3 	bl	8009b6c <_ZN8touchgfx4RectaNERKS0_>
 80173c6:	4638      	mov	r0, r7
 80173c8:	f7f2 fc13 	bl	8009bf2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80173cc:	b138      	cbz	r0, 80173de <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x222>
 80173ce:	9600      	str	r6, [sp, #0]
 80173d0:	4623      	mov	r3, r4
 80173d2:	aa02      	add	r2, sp, #8
 80173d4:	4649      	mov	r1, r9
 80173d6:	4628      	mov	r0, r5
 80173d8:	f7ff fdca 	bl	8016f70 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 80173dc:	e731      	b.n	8017242 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 80173de:	e9cd 6000 	strd	r6, r0, [sp]
 80173e2:	f8da 3000 	ldr.w	r3, [sl]
 80173e6:	aa02      	add	r2, sp, #8
 80173e8:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 80173ec:	4629      	mov	r1, r5
 80173ee:	463b      	mov	r3, r7
 80173f0:	4650      	mov	r0, sl
 80173f2:	47d8      	blx	fp
 80173f4:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80173f8:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80173fc:	4293      	cmp	r3, r2
 80173fe:	dd13      	ble.n	8017428 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26c>
 8017400:	f9b4 0000 	ldrsh.w	r0, [r4]
 8017404:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8017408:	f8ad 0018 	strh.w	r0, [sp, #24]
 801740c:	1a9b      	subs	r3, r3, r2
 801740e:	f8ad 201a 	strh.w	r2, [sp, #26]
 8017412:	f8ad 101c 	strh.w	r1, [sp, #28]
 8017416:	f8ad 301e 	strh.w	r3, [sp, #30]
 801741a:	9600      	str	r6, [sp, #0]
 801741c:	4643      	mov	r3, r8
 801741e:	aa02      	add	r2, sp, #8
 8017420:	4649      	mov	r1, r9
 8017422:	4628      	mov	r0, r5
 8017424:	f7ff fda4 	bl	8016f70 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8017428:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801742c:	f9b4 2000 	ldrsh.w	r2, [r4]
 8017430:	4293      	cmp	r3, r2
 8017432:	dd13      	ble.n	801745c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a0>
 8017434:	1a9b      	subs	r3, r3, r2
 8017436:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801743a:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801743e:	f8ad 2018 	strh.w	r2, [sp, #24]
 8017442:	f8ad 001a 	strh.w	r0, [sp, #26]
 8017446:	f8ad 301c 	strh.w	r3, [sp, #28]
 801744a:	f8ad 101e 	strh.w	r1, [sp, #30]
 801744e:	9600      	str	r6, [sp, #0]
 8017450:	4643      	mov	r3, r8
 8017452:	aa02      	add	r2, sp, #8
 8017454:	4649      	mov	r1, r9
 8017456:	4628      	mov	r0, r5
 8017458:	f7ff fd8a 	bl	8016f70 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801745c:	88a2      	ldrh	r2, [r4, #4]
 801745e:	8823      	ldrh	r3, [r4, #0]
 8017460:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8017464:	4413      	add	r3, r2
 8017466:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801746a:	440a      	add	r2, r1
 801746c:	b29b      	uxth	r3, r3
 801746e:	b292      	uxth	r2, r2
 8017470:	b211      	sxth	r1, r2
 8017472:	b218      	sxth	r0, r3
 8017474:	4288      	cmp	r0, r1
 8017476:	dd13      	ble.n	80174a0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e4>
 8017478:	1a9b      	subs	r3, r3, r2
 801747a:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801747e:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 8017482:	f8ad 1018 	strh.w	r1, [sp, #24]
 8017486:	f8ad 301c 	strh.w	r3, [sp, #28]
 801748a:	f8ad 001e 	strh.w	r0, [sp, #30]
 801748e:	9600      	str	r6, [sp, #0]
 8017490:	4643      	mov	r3, r8
 8017492:	aa02      	add	r2, sp, #8
 8017494:	4649      	mov	r1, r9
 8017496:	4628      	mov	r0, r5
 8017498:	f8ad 701a 	strh.w	r7, [sp, #26]
 801749c:	f7ff fd68 	bl	8016f70 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 80174a0:	88e2      	ldrh	r2, [r4, #6]
 80174a2:	8863      	ldrh	r3, [r4, #2]
 80174a4:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 80174a8:	4413      	add	r3, r2
 80174aa:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 80174ae:	440a      	add	r2, r1
 80174b0:	b29b      	uxth	r3, r3
 80174b2:	b292      	uxth	r2, r2
 80174b4:	b211      	sxth	r1, r2
 80174b6:	b218      	sxth	r0, r3
 80174b8:	4288      	cmp	r0, r1
 80174ba:	f77f aec2 	ble.w	8017242 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 80174be:	f9b4 7000 	ldrsh.w	r7, [r4]
 80174c2:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80174c6:	f8ad 7018 	strh.w	r7, [sp, #24]
 80174ca:	1a9b      	subs	r3, r3, r2
 80174cc:	f8ad 301e 	strh.w	r3, [sp, #30]
 80174d0:	f8ad 101a 	strh.w	r1, [sp, #26]
 80174d4:	f8ad 001c 	strh.w	r0, [sp, #28]
 80174d8:	9600      	str	r6, [sp, #0]
 80174da:	4643      	mov	r3, r8
 80174dc:	e779      	b.n	80173d2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x216>
 80174de:	bf00      	nop
 80174e0:	20017458 	.word	0x20017458

080174e4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 80174e4:	b180      	cbz	r0, 8017508 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 80174e6:	2903      	cmp	r1, #3
 80174e8:	d81c      	bhi.n	8017524 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 80174ea:	e8df f001 	tbb	[pc, r1]
 80174ee:	1d02      	.short	0x1d02
 80174f0:	1f08      	.short	0x1f08
 80174f2:	4b10      	ldr	r3, [pc, #64]	; (8017534 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 80174f4:	8818      	ldrh	r0, [r3, #0]
 80174f6:	f3c0 000e 	ubfx	r0, r0, #0, #15
 80174fa:	4240      	negs	r0, r0
 80174fc:	4770      	bx	lr
 80174fe:	4b0d      	ldr	r3, [pc, #52]	; (8017534 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8017500:	8818      	ldrh	r0, [r3, #0]
 8017502:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8017506:	4770      	bx	lr
 8017508:	2903      	cmp	r1, #3
 801750a:	d80b      	bhi.n	8017524 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801750c:	a301      	add	r3, pc, #4	; (adr r3, 8017514 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 801750e:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 8017512:	bf00      	nop
 8017514:	08017529 	.word	0x08017529
 8017518:	080174ff 	.word	0x080174ff
 801751c:	0801752d 	.word	0x0801752d
 8017520:	080174f3 	.word	0x080174f3
 8017524:	2000      	movs	r0, #0
 8017526:	4770      	bx	lr
 8017528:	2001      	movs	r0, #1
 801752a:	4770      	bx	lr
 801752c:	f04f 30ff 	mov.w	r0, #4294967295
 8017530:	4770      	bx	lr
 8017532:	bf00      	nop
 8017534:	20017452 	.word	0x20017452

08017538 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 8017538:	b180      	cbz	r0, 801755c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 801753a:	2903      	cmp	r1, #3
 801753c:	d81c      	bhi.n	8017578 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801753e:	e8df f001 	tbb	[pc, r1]
 8017542:	021d      	.short	0x021d
 8017544:	071f      	.short	0x071f
 8017546:	4b10      	ldr	r3, [pc, #64]	; (8017588 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8017548:	8818      	ldrh	r0, [r3, #0]
 801754a:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801754e:	4770      	bx	lr
 8017550:	4b0d      	ldr	r3, [pc, #52]	; (8017588 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8017552:	8818      	ldrh	r0, [r3, #0]
 8017554:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8017558:	4240      	negs	r0, r0
 801755a:	4770      	bx	lr
 801755c:	2903      	cmp	r1, #3
 801755e:	d80b      	bhi.n	8017578 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 8017560:	a301      	add	r3, pc, #4	; (adr r3, 8017568 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 8017562:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 8017566:	bf00      	nop
 8017568:	08017547 	.word	0x08017547
 801756c:	08017581 	.word	0x08017581
 8017570:	08017551 	.word	0x08017551
 8017574:	0801757d 	.word	0x0801757d
 8017578:	2000      	movs	r0, #0
 801757a:	4770      	bx	lr
 801757c:	2001      	movs	r0, #1
 801757e:	4770      	bx	lr
 8017580:	f04f 30ff 	mov.w	r0, #4294967295
 8017584:	4770      	bx	lr
 8017586:	bf00      	nop
 8017588:	20017452 	.word	0x20017452

0801758c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 801758c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017590:	b099      	sub	sp, #100	; 0x64
 8017592:	910b      	str	r1, [sp, #44]	; 0x2c
 8017594:	a914      	add	r1, sp, #80	; 0x50
 8017596:	e881 000c 	stmia.w	r1, {r2, r3}
 801759a:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 801759e:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 80175a2:	f891 900d 	ldrb.w	r9, [r1, #13]
 80175a6:	9309      	str	r3, [sp, #36]	; 0x24
 80175a8:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 80175ac:	9310      	str	r3, [sp, #64]	; 0x40
 80175ae:	ea4f 1749 	mov.w	r7, r9, lsl #5
 80175b2:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
 80175b6:	930c      	str	r3, [sp, #48]	; 0x30
 80175b8:	f407 7380 	and.w	r3, r7, #256	; 0x100
 80175bc:	798f      	ldrb	r7, [r1, #6]
 80175be:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	; 0x88
 80175c2:	f8bd 5090 	ldrh.w	r5, [sp, #144]	; 0x90
 80175c6:	f8bd 6094 	ldrh.w	r6, [sp, #148]	; 0x94
 80175ca:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 80175ce:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 80175d2:	431f      	orrs	r7, r3
 80175d4:	f000 8195 	beq.w	8017902 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 80175d8:	ea4f 1909 	mov.w	r9, r9, lsl #4
 80175dc:	f409 7380 	and.w	r3, r9, #256	; 0x100
 80175e0:	f891 9007 	ldrb.w	r9, [r1, #7]
 80175e4:	ea59 0903 	orrs.w	r9, r9, r3
 80175e8:	f000 818b 	beq.w	8017902 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 80175ec:	f991 3009 	ldrsb.w	r3, [r1, #9]
 80175f0:	b29b      	uxth	r3, r3
 80175f2:	2d00      	cmp	r5, #0
 80175f4:	f000 812e 	beq.w	8017854 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 80175f8:	1aed      	subs	r5, r5, r3
 80175fa:	b2ad      	uxth	r5, r5
 80175fc:	042b      	lsls	r3, r5, #16
 80175fe:	d502      	bpl.n	8017606 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 8017600:	1b64      	subs	r4, r4, r5
 8017602:	b224      	sxth	r4, r4
 8017604:	2500      	movs	r5, #0
 8017606:	f9b2 1000 	ldrsh.w	r1, [r2]
 801760a:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 801760e:	428c      	cmp	r4, r1
 8017610:	b28b      	uxth	r3, r1
 8017612:	bfbf      	itttt	lt
 8017614:	18ed      	addlt	r5, r5, r3
 8017616:	1b2c      	sublt	r4, r5, r4
 8017618:	b2a5      	uxthlt	r5, r4
 801761a:	460c      	movlt	r4, r1
 801761c:	8891      	ldrh	r1, [r2, #4]
 801761e:	440b      	add	r3, r1
 8017620:	b21b      	sxth	r3, r3
 8017622:	930f      	str	r3, [sp, #60]	; 0x3c
 8017624:	88d3      	ldrh	r3, [r2, #6]
 8017626:	8852      	ldrh	r2, [r2, #2]
 8017628:	4413      	add	r3, r2
 801762a:	b21b      	sxth	r3, r3
 801762c:	930d      	str	r3, [sp, #52]	; 0x34
 801762e:	4bbe      	ldr	r3, [pc, #760]	; (8017928 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 8017630:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8017632:	f893 b000 	ldrb.w	fp, [r3]
 8017636:	f10b 3cff 	add.w	ip, fp, #4294967295
 801763a:	f1dc 0300 	rsbs	r3, ip, #0
 801763e:	eb43 030c 	adc.w	r3, r3, ip
 8017642:	930e      	str	r3, [sp, #56]	; 0x38
 8017644:	4621      	mov	r1, r4
 8017646:	4653      	mov	r3, sl
 8017648:	a814      	add	r0, sp, #80	; 0x50
 801764a:	f7f8 f8b5 	bl	800f7b8 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 801764e:	4621      	mov	r1, r4
 8017650:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 8017654:	4653      	mov	r3, sl
 8017656:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8017658:	a814      	add	r0, sp, #80	; 0x50
 801765a:	f7f8 f8ca 	bl	800f7f2 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 801765e:	a918      	add	r1, sp, #96	; 0x60
 8017660:	f821 0d02 	strh.w	r0, [r1, #-2]!
 8017664:	a817      	add	r0, sp, #92	; 0x5c
 8017666:	f7f8 f9eb 	bl	800fa40 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 801766a:	f1ba 0f00 	cmp.w	sl, #0
 801766e:	f040 80f4 	bne.w	801785a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 8017672:	f1bb 0f01 	cmp.w	fp, #1
 8017676:	f040 80f8 	bne.w	801786a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 801767a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801767c:	2b00      	cmp	r3, #0
 801767e:	f040 8145 	bne.w	801790c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 8017682:	b2ba      	uxth	r2, r7
 8017684:	b905      	cbnz	r5, 8017688 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 8017686:	b16e      	cbz	r6, 80176a4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 8017688:	fb06 5302 	mla	r3, r6, r2, r5
 801768c:	9828      	ldr	r0, [sp, #160]	; 0xa0
 801768e:	fb08 f303 	mul.w	r3, r8, r3
 8017692:	4631      	mov	r1, r6
 8017694:	f003 0607 	and.w	r6, r3, #7
 8017698:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 801769c:	9328      	str	r3, [sp, #160]	; 0xa0
 801769e:	eba9 0301 	sub.w	r3, r9, r1
 80176a2:	930a      	str	r3, [sp, #40]	; 0x28
 80176a4:	4651      	mov	r1, sl
 80176a6:	980e      	ldr	r0, [sp, #56]	; 0x38
 80176a8:	f7ff ff1c 	bl	80174e4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 80176ac:	4681      	mov	r9, r0
 80176ae:	980e      	ldr	r0, [sp, #56]	; 0x38
 80176b0:	f7ff ff42 	bl	8017538 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 80176b4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80176b6:	9909      	ldr	r1, [sp, #36]	; 0x24
 80176b8:	eba3 0a01 	sub.w	sl, r3, r1
 80176bc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80176be:	459a      	cmp	sl, r3
 80176c0:	bfa8      	it	ge
 80176c2:	469a      	movge	sl, r3
 80176c4:	f1ba 0f00 	cmp.w	sl, #0
 80176c8:	4683      	mov	fp, r0
 80176ca:	f340 811a 	ble.w	8017902 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 80176ce:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80176d0:	1b64      	subs	r4, r4, r5
 80176d2:	1b1c      	subs	r4, r3, r4
 80176d4:	42bc      	cmp	r4, r7
 80176d6:	bfd4      	ite	le
 80176d8:	ebc5 0504 	rsble	r5, r5, r4
 80176dc:	ebc5 0507 	rsbgt	r5, r5, r7
 80176e0:	2d00      	cmp	r5, #0
 80176e2:	f340 810e 	ble.w	8017902 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 80176e6:	1b52      	subs	r2, r2, r5
 80176e8:	fb08 f302 	mul.w	r3, r8, r2
 80176ec:	930f      	str	r3, [sp, #60]	; 0x3c
 80176ee:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80176f0:	2b00      	cmp	r3, #0
 80176f2:	f040 8116 	bne.w	8017922 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 80176f6:	4b8d      	ldr	r3, [pc, #564]	; (801792c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 80176f8:	6818      	ldr	r0, [r3, #0]
 80176fa:	6803      	ldr	r3, [r0, #0]
 80176fc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80176fe:	4798      	blx	r3
 8017700:	2301      	movs	r3, #1
 8017702:	fa03 f308 	lsl.w	r3, r3, r8
 8017706:	4a8a      	ldr	r2, [pc, #552]	; (8017930 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 8017708:	3b01      	subs	r3, #1
 801770a:	b2db      	uxtb	r3, r3
 801770c:	8811      	ldrh	r1, [r2, #0]
 801770e:	930e      	str	r3, [sp, #56]	; 0x38
 8017710:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 8017714:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 8017718:	fb01 2303 	mla	r3, r1, r3, r2
 801771c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8017720:	930a      	str	r3, [sp, #40]	; 0x28
 8017722:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8017724:	f3c3 4307 	ubfx	r3, r3, #16, #8
 8017728:	9313      	str	r3, [sp, #76]	; 0x4c
 801772a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801772c:	0a19      	lsrs	r1, r3, #8
 801772e:	b2cb      	uxtb	r3, r1
 8017730:	9312      	str	r3, [sp, #72]	; 0x48
 8017732:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8017734:	b2db      	uxtb	r3, r3
 8017736:	9311      	str	r3, [sp, #68]	; 0x44
 8017738:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801773a:	095a      	lsrs	r2, r3, #5
 801773c:	4b7d      	ldr	r3, [pc, #500]	; (8017934 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 801773e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017742:	400b      	ands	r3, r1
 8017744:	4313      	orrs	r3, r2
 8017746:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8017748:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801774c:	4313      	orrs	r3, r2
 801774e:	b29b      	uxth	r3, r3
 8017750:	9310      	str	r3, [sp, #64]	; 0x40
 8017752:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8017754:	781a      	ldrb	r2, [r3, #0]
 8017756:	ea4f 0349 	mov.w	r3, r9, lsl #1
 801775a:	4132      	asrs	r2, r6
 801775c:	fb05 b919 	mls	r9, r5, r9, fp
 8017760:	fb03 fb05 	mul.w	fp, r3, r5
 8017764:	b2d2      	uxtb	r2, r2
 8017766:	930d      	str	r3, [sp, #52]	; 0x34
 8017768:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 801776c:	f11a 3aff 	adds.w	sl, sl, #4294967295
 8017770:	f0c0 80f5 	bcc.w	801795e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 8017774:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 8017778:	46ae      	mov	lr, r5
 801777a:	f11e 3eff 	adds.w	lr, lr, #4294967295
 801777e:	f0c0 80dd 	bcc.w	801793c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 8017782:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8017784:	4013      	ands	r3, r2
 8017786:	d055      	beq.n	8017834 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 8017788:	20ff      	movs	r0, #255	; 0xff
 801778a:	990e      	ldr	r1, [sp, #56]	; 0x38
 801778c:	fb90 f1f1 	sdiv	r1, r0, r1
 8017790:	434b      	muls	r3, r1
 8017792:	2bfe      	cmp	r3, #254	; 0xfe
 8017794:	dd03      	ble.n	801779e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 8017796:	990c      	ldr	r1, [sp, #48]	; 0x30
 8017798:	4281      	cmp	r1, r0
 801779a:	f000 80cd 	beq.w	8017938 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 801779e:	990c      	ldr	r1, [sp, #48]	; 0x30
 80177a0:	f8bc 4000 	ldrh.w	r4, [ip]
 80177a4:	fb11 f303 	smulbb	r3, r1, r3
 80177a8:	b29b      	uxth	r3, r3
 80177aa:	1c59      	adds	r1, r3, #1
 80177ac:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 80177b0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80177b4:	b29f      	uxth	r7, r3
 80177b6:	43db      	mvns	r3, r3
 80177b8:	b2db      	uxtb	r3, r3
 80177ba:	9309      	str	r3, [sp, #36]	; 0x24
 80177bc:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80177be:	1220      	asrs	r0, r4, #8
 80177c0:	fb13 f907 	smulbb	r9, r3, r7
 80177c4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80177c8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80177ca:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 80177ce:	fb00 9003 	mla	r0, r0, r3, r9
 80177d2:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80177d4:	10e1      	asrs	r1, r4, #3
 80177d6:	fb13 f907 	smulbb	r9, r3, r7
 80177da:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80177de:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80177e0:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 80177e4:	fb01 9103 	mla	r1, r1, r3, r9
 80177e8:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80177ea:	00e4      	lsls	r4, r4, #3
 80177ec:	fb13 f707 	smulbb	r7, r3, r7
 80177f0:	b2e4      	uxtb	r4, r4
 80177f2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80177f4:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 80177f8:	fb04 7403 	mla	r4, r4, r3, r7
 80177fc:	b280      	uxth	r0, r0
 80177fe:	b2a4      	uxth	r4, r4
 8017800:	1c43      	adds	r3, r0, #1
 8017802:	f104 0901 	add.w	r9, r4, #1
 8017806:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801780a:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 801780e:	b289      	uxth	r1, r1
 8017810:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 8017814:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8017818:	ea49 0000 	orr.w	r0, r9, r0
 801781c:	f101 0901 	add.w	r9, r1, #1
 8017820:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 8017824:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8017828:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801782c:	ea40 0009 	orr.w	r0, r0, r9
 8017830:	f8ac 0000 	strh.w	r0, [ip]
 8017834:	4446      	add	r6, r8
 8017836:	b2b6      	uxth	r6, r6
 8017838:	2e07      	cmp	r6, #7
 801783a:	bf81      	itttt	hi
 801783c:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 801783e:	785a      	ldrbhi	r2, [r3, #1]
 8017840:	3301      	addhi	r3, #1
 8017842:	9328      	strhi	r3, [sp, #160]	; 0xa0
 8017844:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017846:	bf9a      	itte	ls
 8017848:	fa42 f208 	asrls.w	r2, r2, r8
 801784c:	b2d2      	uxtbls	r2, r2
 801784e:	2600      	movhi	r6, #0
 8017850:	449c      	add	ip, r3
 8017852:	e792      	b.n	801777a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 8017854:	441c      	add	r4, r3
 8017856:	b224      	sxth	r4, r4
 8017858:	e6d5      	b.n	8017606 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801785a:	f1ba 0f01 	cmp.w	sl, #1
 801785e:	f47f af0c 	bne.w	801767a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8017862:	f1bb 0f01 	cmp.w	fp, #1
 8017866:	f47f af08 	bne.w	801767a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801786a:	f8df b0c0 	ldr.w	fp, [pc, #192]	; 801792c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 801786e:	f8db 0000 	ldr.w	r0, [fp]
 8017872:	6803      	ldr	r3, [r0, #0]
 8017874:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017876:	4798      	blx	r3
 8017878:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 801787c:	465a      	mov	r2, fp
 801787e:	d006      	beq.n	801788e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 8017880:	f1b8 0f04 	cmp.w	r8, #4
 8017884:	d140      	bne.n	8017908 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 8017886:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8017888:	3300      	adds	r3, #0
 801788a:	bf18      	it	ne
 801788c:	2301      	movne	r3, #1
 801788e:	0580      	lsls	r0, r0, #22
 8017890:	d56e      	bpl.n	8017970 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 8017892:	f1b8 0f08 	cmp.w	r8, #8
 8017896:	d16b      	bne.n	8017970 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 8017898:	2b00      	cmp	r3, #0
 801789a:	bf0c      	ite	eq
 801789c:	f44f 7100 	moveq.w	r1, #512	; 0x200
 80178a0:	f44f 7180 	movne.w	r1, #256	; 0x100
 80178a4:	2d00      	cmp	r5, #0
 80178a6:	f47f aee8 	bne.w	801767a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 80178aa:	2e00      	cmp	r6, #0
 80178ac:	f47f aee5 	bne.w	801767a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 80178b0:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80178b2:	19e3      	adds	r3, r4, r7
 80178b4:	4283      	cmp	r3, r0
 80178b6:	f73f aee0 	bgt.w	801767a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 80178ba:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80178bc:	980d      	ldr	r0, [sp, #52]	; 0x34
 80178be:	444b      	add	r3, r9
 80178c0:	4283      	cmp	r3, r0
 80178c2:	f73f aeda 	bgt.w	801767a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 80178c6:	6810      	ldr	r0, [r2, #0]
 80178c8:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 80178cc:	6804      	ldr	r4, [r0, #0]
 80178ce:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 80178d2:	b2bf      	uxth	r7, r7
 80178d4:	f1b8 0f08 	cmp.w	r8, #8
 80178d8:	f04f 0500 	mov.w	r5, #0
 80178dc:	bf18      	it	ne
 80178de:	3701      	addne	r7, #1
 80178e0:	e9cd 1505 	strd	r1, r5, [sp, #20]
 80178e4:	990c      	ldr	r1, [sp, #48]	; 0x30
 80178e6:	9104      	str	r1, [sp, #16]
 80178e8:	bf18      	it	ne
 80178ea:	f027 0701 	bicne.w	r7, r7, #1
 80178ee:	992a      	ldr	r1, [sp, #168]	; 0xa8
 80178f0:	bf18      	it	ne
 80178f2:	b2bf      	uxthne	r7, r7
 80178f4:	e9cd 7102 	strd	r7, r1, [sp, #8]
 80178f8:	e9cd 7900 	strd	r7, r9, [sp]
 80178fc:	9928      	ldr	r1, [sp, #160]	; 0xa0
 80178fe:	6d64      	ldr	r4, [r4, #84]	; 0x54
 8017900:	47a0      	blx	r4
 8017902:	b019      	add	sp, #100	; 0x64
 8017904:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017908:	2300      	movs	r3, #0
 801790a:	e7c0      	b.n	801788e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801790c:	2208      	movs	r2, #8
 801790e:	fb92 f3f8 	sdiv	r3, r2, r8
 8017912:	1e5a      	subs	r2, r3, #1
 8017914:	443a      	add	r2, r7
 8017916:	fb92 f2f3 	sdiv	r2, r2, r3
 801791a:	fb12 f203 	smulbb	r2, r2, r3
 801791e:	b292      	uxth	r2, r2
 8017920:	e6b0      	b.n	8017684 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 8017922:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8017924:	e6ec      	b.n	8017700 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 8017926:	bf00      	nop
 8017928:	20017450 	.word	0x20017450
 801792c:	20017458 	.word	0x20017458
 8017930:	20017452 	.word	0x20017452
 8017934:	00fff800 	.word	0x00fff800
 8017938:	9810      	ldr	r0, [sp, #64]	; 0x40
 801793a:	e779      	b.n	8017830 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 801793c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801793e:	b153      	cbz	r3, 8017956 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 8017940:	441e      	add	r6, r3
 8017942:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8017944:	b2b6      	uxth	r6, r6
 8017946:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 801794a:	f006 0607 	and.w	r6, r6, #7
 801794e:	781a      	ldrb	r2, [r3, #0]
 8017950:	9328      	str	r3, [sp, #160]	; 0xa0
 8017952:	4132      	asrs	r2, r6
 8017954:	b2d2      	uxtb	r2, r2
 8017956:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8017958:	445b      	add	r3, fp
 801795a:	930a      	str	r3, [sp, #40]	; 0x28
 801795c:	e706      	b.n	801776c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 801795e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8017960:	2b00      	cmp	r3, #0
 8017962:	d1ce      	bne.n	8017902 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8017964:	4b05      	ldr	r3, [pc, #20]	; (801797c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 8017966:	6818      	ldr	r0, [r3, #0]
 8017968:	6803      	ldr	r3, [r0, #0]
 801796a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801796c:	4798      	blx	r3
 801796e:	e7c8      	b.n	8017902 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8017970:	2b00      	cmp	r3, #0
 8017972:	f43f ae82 	beq.w	801767a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8017976:	f44f 7180 	mov.w	r1, #256	; 0x100
 801797a:	e793      	b.n	80178a4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 801797c:	20017458 	.word	0x20017458

08017980 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 8017980:	b538      	push	{r3, r4, r5, lr}
 8017982:	4c15      	ldr	r4, [pc, #84]	; (80179d8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 8017984:	7823      	ldrb	r3, [r4, #0]
 8017986:	f3bf 8f5b 	dmb	ish
 801798a:	07da      	lsls	r2, r3, #31
 801798c:	4605      	mov	r5, r0
 801798e:	d40b      	bmi.n	80179a8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8017990:	4620      	mov	r0, r4
 8017992:	f007 fd92 	bl	801f4ba <__cxa_guard_acquire>
 8017996:	b138      	cbz	r0, 80179a8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8017998:	4620      	mov	r0, r4
 801799a:	f007 fd9a 	bl	801f4d2 <__cxa_guard_release>
 801799e:	4a0f      	ldr	r2, [pc, #60]	; (80179dc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 80179a0:	490f      	ldr	r1, [pc, #60]	; (80179e0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 80179a2:	4810      	ldr	r0, [pc, #64]	; (80179e4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 80179a4:	f007 fd82 	bl	801f4ac <__aeabi_atexit>
 80179a8:	4c0f      	ldr	r4, [pc, #60]	; (80179e8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 80179aa:	7823      	ldrb	r3, [r4, #0]
 80179ac:	f3bf 8f5b 	dmb	ish
 80179b0:	07db      	lsls	r3, r3, #31
 80179b2:	d40b      	bmi.n	80179cc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 80179b4:	4620      	mov	r0, r4
 80179b6:	f007 fd80 	bl	801f4ba <__cxa_guard_acquire>
 80179ba:	b138      	cbz	r0, 80179cc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 80179bc:	4620      	mov	r0, r4
 80179be:	f007 fd88 	bl	801f4d2 <__cxa_guard_release>
 80179c2:	4a06      	ldr	r2, [pc, #24]	; (80179dc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 80179c4:	4909      	ldr	r1, [pc, #36]	; (80179ec <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 80179c6:	480a      	ldr	r0, [pc, #40]	; (80179f0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 80179c8:	f007 fd70 	bl	801f4ac <__aeabi_atexit>
 80179cc:	4b05      	ldr	r3, [pc, #20]	; (80179e4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 80179ce:	612b      	str	r3, [r5, #16]
 80179d0:	4b07      	ldr	r3, [pc, #28]	; (80179f0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 80179d2:	616b      	str	r3, [r5, #20]
 80179d4:	bd38      	pop	{r3, r4, r5, pc}
 80179d6:	bf00      	nop
 80179d8:	2001752c 	.word	0x2001752c
 80179dc:	20000000 	.word	0x20000000
 80179e0:	08015b91 	.word	0x08015b91
 80179e4:	200000d0 	.word	0x200000d0
 80179e8:	20017530 	.word	0x20017530
 80179ec:	08015b8f 	.word	0x08015b8f
 80179f0:	200000d4 	.word	0x200000d4

080179f4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 80179f4:	b538      	push	{r3, r4, r5, lr}
 80179f6:	4c15      	ldr	r4, [pc, #84]	; (8017a4c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 80179f8:	7823      	ldrb	r3, [r4, #0]
 80179fa:	f3bf 8f5b 	dmb	ish
 80179fe:	07da      	lsls	r2, r3, #31
 8017a00:	4605      	mov	r5, r0
 8017a02:	d40b      	bmi.n	8017a1c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8017a04:	4620      	mov	r0, r4
 8017a06:	f007 fd58 	bl	801f4ba <__cxa_guard_acquire>
 8017a0a:	b138      	cbz	r0, 8017a1c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8017a0c:	4620      	mov	r0, r4
 8017a0e:	f007 fd60 	bl	801f4d2 <__cxa_guard_release>
 8017a12:	4a0f      	ldr	r2, [pc, #60]	; (8017a50 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8017a14:	490f      	ldr	r1, [pc, #60]	; (8017a54 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 8017a16:	4810      	ldr	r0, [pc, #64]	; (8017a58 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8017a18:	f007 fd48 	bl	801f4ac <__aeabi_atexit>
 8017a1c:	4c0f      	ldr	r4, [pc, #60]	; (8017a5c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 8017a1e:	7823      	ldrb	r3, [r4, #0]
 8017a20:	f3bf 8f5b 	dmb	ish
 8017a24:	07db      	lsls	r3, r3, #31
 8017a26:	d40b      	bmi.n	8017a40 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8017a28:	4620      	mov	r0, r4
 8017a2a:	f007 fd46 	bl	801f4ba <__cxa_guard_acquire>
 8017a2e:	b138      	cbz	r0, 8017a40 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8017a30:	4620      	mov	r0, r4
 8017a32:	f007 fd4e 	bl	801f4d2 <__cxa_guard_release>
 8017a36:	4a06      	ldr	r2, [pc, #24]	; (8017a50 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8017a38:	4909      	ldr	r1, [pc, #36]	; (8017a60 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 8017a3a:	480a      	ldr	r0, [pc, #40]	; (8017a64 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8017a3c:	f007 fd36 	bl	801f4ac <__aeabi_atexit>
 8017a40:	4b05      	ldr	r3, [pc, #20]	; (8017a58 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8017a42:	60ab      	str	r3, [r5, #8]
 8017a44:	4b07      	ldr	r3, [pc, #28]	; (8017a64 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8017a46:	60eb      	str	r3, [r5, #12]
 8017a48:	bd38      	pop	{r3, r4, r5, pc}
 8017a4a:	bf00      	nop
 8017a4c:	20017504 	.word	0x20017504
 8017a50:	20000000 	.word	0x20000000
 8017a54:	08015b95 	.word	0x08015b95
 8017a58:	200000a8 	.word	0x200000a8
 8017a5c:	20017508 	.word	0x20017508
 8017a60:	08015b93 	.word	0x08015b93
 8017a64:	200000ac 	.word	0x200000ac

08017a68 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 8017a68:	b510      	push	{r4, lr}
 8017a6a:	4604      	mov	r4, r0
 8017a6c:	f7ff ff88 	bl	8017980 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 8017a70:	4620      	mov	r0, r4
 8017a72:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8017a76:	f7ff bfbd 	b.w	80179f4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

08017a7c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 8017a7c:	b538      	push	{r3, r4, r5, lr}
 8017a7e:	4c15      	ldr	r4, [pc, #84]	; (8017ad4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 8017a80:	7823      	ldrb	r3, [r4, #0]
 8017a82:	f3bf 8f5b 	dmb	ish
 8017a86:	07da      	lsls	r2, r3, #31
 8017a88:	4605      	mov	r5, r0
 8017a8a:	d40b      	bmi.n	8017aa4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8017a8c:	4620      	mov	r0, r4
 8017a8e:	f007 fd14 	bl	801f4ba <__cxa_guard_acquire>
 8017a92:	b138      	cbz	r0, 8017aa4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8017a94:	4620      	mov	r0, r4
 8017a96:	f007 fd1c 	bl	801f4d2 <__cxa_guard_release>
 8017a9a:	4a0f      	ldr	r2, [pc, #60]	; (8017ad8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8017a9c:	490f      	ldr	r1, [pc, #60]	; (8017adc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 8017a9e:	4810      	ldr	r0, [pc, #64]	; (8017ae0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8017aa0:	f007 fd04 	bl	801f4ac <__aeabi_atexit>
 8017aa4:	4c0f      	ldr	r4, [pc, #60]	; (8017ae4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 8017aa6:	7823      	ldrb	r3, [r4, #0]
 8017aa8:	f3bf 8f5b 	dmb	ish
 8017aac:	07db      	lsls	r3, r3, #31
 8017aae:	d40b      	bmi.n	8017ac8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8017ab0:	4620      	mov	r0, r4
 8017ab2:	f007 fd02 	bl	801f4ba <__cxa_guard_acquire>
 8017ab6:	b138      	cbz	r0, 8017ac8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8017ab8:	4620      	mov	r0, r4
 8017aba:	f007 fd0a 	bl	801f4d2 <__cxa_guard_release>
 8017abe:	4a06      	ldr	r2, [pc, #24]	; (8017ad8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8017ac0:	4909      	ldr	r1, [pc, #36]	; (8017ae8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 8017ac2:	480a      	ldr	r0, [pc, #40]	; (8017aec <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8017ac4:	f007 fcf2 	bl	801f4ac <__aeabi_atexit>
 8017ac8:	4b05      	ldr	r3, [pc, #20]	; (8017ae0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8017aca:	622b      	str	r3, [r5, #32]
 8017acc:	4b07      	ldr	r3, [pc, #28]	; (8017aec <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8017ace:	626b      	str	r3, [r5, #36]	; 0x24
 8017ad0:	bd38      	pop	{r3, r4, r5, pc}
 8017ad2:	bf00      	nop
 8017ad4:	20017534 	.word	0x20017534
 8017ad8:	20000000 	.word	0x20000000
 8017adc:	08015b89 	.word	0x08015b89
 8017ae0:	200000d8 	.word	0x200000d8
 8017ae4:	20017538 	.word	0x20017538
 8017ae8:	08015b87 	.word	0x08015b87
 8017aec:	200000dc 	.word	0x200000dc

08017af0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 8017af0:	b538      	push	{r3, r4, r5, lr}
 8017af2:	4c15      	ldr	r4, [pc, #84]	; (8017b48 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 8017af4:	7823      	ldrb	r3, [r4, #0]
 8017af6:	f3bf 8f5b 	dmb	ish
 8017afa:	07da      	lsls	r2, r3, #31
 8017afc:	4605      	mov	r5, r0
 8017afe:	d40b      	bmi.n	8017b18 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8017b00:	4620      	mov	r0, r4
 8017b02:	f007 fcda 	bl	801f4ba <__cxa_guard_acquire>
 8017b06:	b138      	cbz	r0, 8017b18 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8017b08:	4620      	mov	r0, r4
 8017b0a:	f007 fce2 	bl	801f4d2 <__cxa_guard_release>
 8017b0e:	4a0f      	ldr	r2, [pc, #60]	; (8017b4c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8017b10:	490f      	ldr	r1, [pc, #60]	; (8017b50 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 8017b12:	4810      	ldr	r0, [pc, #64]	; (8017b54 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8017b14:	f007 fcca 	bl	801f4ac <__aeabi_atexit>
 8017b18:	4c0f      	ldr	r4, [pc, #60]	; (8017b58 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 8017b1a:	7823      	ldrb	r3, [r4, #0]
 8017b1c:	f3bf 8f5b 	dmb	ish
 8017b20:	07db      	lsls	r3, r3, #31
 8017b22:	d40b      	bmi.n	8017b3c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8017b24:	4620      	mov	r0, r4
 8017b26:	f007 fcc8 	bl	801f4ba <__cxa_guard_acquire>
 8017b2a:	b138      	cbz	r0, 8017b3c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8017b2c:	4620      	mov	r0, r4
 8017b2e:	f007 fcd0 	bl	801f4d2 <__cxa_guard_release>
 8017b32:	4a06      	ldr	r2, [pc, #24]	; (8017b4c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8017b34:	4909      	ldr	r1, [pc, #36]	; (8017b5c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 8017b36:	480a      	ldr	r0, [pc, #40]	; (8017b60 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8017b38:	f007 fcb8 	bl	801f4ac <__aeabi_atexit>
 8017b3c:	4b05      	ldr	r3, [pc, #20]	; (8017b54 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8017b3e:	61ab      	str	r3, [r5, #24]
 8017b40:	4b07      	ldr	r3, [pc, #28]	; (8017b60 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8017b42:	61eb      	str	r3, [r5, #28]
 8017b44:	bd38      	pop	{r3, r4, r5, pc}
 8017b46:	bf00      	nop
 8017b48:	2001750c 	.word	0x2001750c
 8017b4c:	20000000 	.word	0x20000000
 8017b50:	08015b8d 	.word	0x08015b8d
 8017b54:	200000b0 	.word	0x200000b0
 8017b58:	20017510 	.word	0x20017510
 8017b5c:	08015b8b 	.word	0x08015b8b
 8017b60:	200000b4 	.word	0x200000b4

08017b64 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 8017b64:	b510      	push	{r4, lr}
 8017b66:	4604      	mov	r4, r0
 8017b68:	f7ff ff88 	bl	8017a7c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 8017b6c:	4620      	mov	r0, r4
 8017b6e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8017b72:	f7ff bfbd 	b.w	8017af0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

08017b78 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 8017b78:	b538      	push	{r3, r4, r5, lr}
 8017b7a:	4c15      	ldr	r4, [pc, #84]	; (8017bd0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 8017b7c:	7823      	ldrb	r3, [r4, #0]
 8017b7e:	f3bf 8f5b 	dmb	ish
 8017b82:	07da      	lsls	r2, r3, #31
 8017b84:	4605      	mov	r5, r0
 8017b86:	d40b      	bmi.n	8017ba0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8017b88:	4620      	mov	r0, r4
 8017b8a:	f007 fc96 	bl	801f4ba <__cxa_guard_acquire>
 8017b8e:	b138      	cbz	r0, 8017ba0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8017b90:	4620      	mov	r0, r4
 8017b92:	f007 fc9e 	bl	801f4d2 <__cxa_guard_release>
 8017b96:	4a0f      	ldr	r2, [pc, #60]	; (8017bd4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8017b98:	490f      	ldr	r1, [pc, #60]	; (8017bd8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 8017b9a:	4810      	ldr	r0, [pc, #64]	; (8017bdc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8017b9c:	f007 fc86 	bl	801f4ac <__aeabi_atexit>
 8017ba0:	4c0f      	ldr	r4, [pc, #60]	; (8017be0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 8017ba2:	7823      	ldrb	r3, [r4, #0]
 8017ba4:	f3bf 8f5b 	dmb	ish
 8017ba8:	07db      	lsls	r3, r3, #31
 8017baa:	d40b      	bmi.n	8017bc4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8017bac:	4620      	mov	r0, r4
 8017bae:	f007 fc84 	bl	801f4ba <__cxa_guard_acquire>
 8017bb2:	b138      	cbz	r0, 8017bc4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8017bb4:	4620      	mov	r0, r4
 8017bb6:	f007 fc8c 	bl	801f4d2 <__cxa_guard_release>
 8017bba:	4a06      	ldr	r2, [pc, #24]	; (8017bd4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8017bbc:	4909      	ldr	r1, [pc, #36]	; (8017be4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 8017bbe:	480a      	ldr	r0, [pc, #40]	; (8017be8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8017bc0:	f007 fc74 	bl	801f4ac <__aeabi_atexit>
 8017bc4:	4b05      	ldr	r3, [pc, #20]	; (8017bdc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8017bc6:	632b      	str	r3, [r5, #48]	; 0x30
 8017bc8:	4b07      	ldr	r3, [pc, #28]	; (8017be8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8017bca:	636b      	str	r3, [r5, #52]	; 0x34
 8017bcc:	bd38      	pop	{r3, r4, r5, pc}
 8017bce:	bf00      	nop
 8017bd0:	20017544 	.word	0x20017544
 8017bd4:	20000000 	.word	0x20000000
 8017bd8:	08015b81 	.word	0x08015b81
 8017bdc:	200000e8 	.word	0x200000e8
 8017be0:	20017548 	.word	0x20017548
 8017be4:	08015b7f 	.word	0x08015b7f
 8017be8:	200000ec 	.word	0x200000ec

08017bec <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 8017bec:	b538      	push	{r3, r4, r5, lr}
 8017bee:	4c15      	ldr	r4, [pc, #84]	; (8017c44 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 8017bf0:	7823      	ldrb	r3, [r4, #0]
 8017bf2:	f3bf 8f5b 	dmb	ish
 8017bf6:	07da      	lsls	r2, r3, #31
 8017bf8:	4605      	mov	r5, r0
 8017bfa:	d40b      	bmi.n	8017c14 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8017bfc:	4620      	mov	r0, r4
 8017bfe:	f007 fc5c 	bl	801f4ba <__cxa_guard_acquire>
 8017c02:	b138      	cbz	r0, 8017c14 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8017c04:	4620      	mov	r0, r4
 8017c06:	f007 fc64 	bl	801f4d2 <__cxa_guard_release>
 8017c0a:	4a0f      	ldr	r2, [pc, #60]	; (8017c48 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8017c0c:	490f      	ldr	r1, [pc, #60]	; (8017c4c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 8017c0e:	4810      	ldr	r0, [pc, #64]	; (8017c50 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8017c10:	f007 fc4c 	bl	801f4ac <__aeabi_atexit>
 8017c14:	4c0f      	ldr	r4, [pc, #60]	; (8017c54 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 8017c16:	7823      	ldrb	r3, [r4, #0]
 8017c18:	f3bf 8f5b 	dmb	ish
 8017c1c:	07db      	lsls	r3, r3, #31
 8017c1e:	d40b      	bmi.n	8017c38 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8017c20:	4620      	mov	r0, r4
 8017c22:	f007 fc4a 	bl	801f4ba <__cxa_guard_acquire>
 8017c26:	b138      	cbz	r0, 8017c38 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8017c28:	4620      	mov	r0, r4
 8017c2a:	f007 fc52 	bl	801f4d2 <__cxa_guard_release>
 8017c2e:	4a06      	ldr	r2, [pc, #24]	; (8017c48 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8017c30:	4909      	ldr	r1, [pc, #36]	; (8017c58 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 8017c32:	480a      	ldr	r0, [pc, #40]	; (8017c5c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8017c34:	f007 fc3a 	bl	801f4ac <__aeabi_atexit>
 8017c38:	4b05      	ldr	r3, [pc, #20]	; (8017c50 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8017c3a:	62ab      	str	r3, [r5, #40]	; 0x28
 8017c3c:	4b07      	ldr	r3, [pc, #28]	; (8017c5c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8017c3e:	62eb      	str	r3, [r5, #44]	; 0x2c
 8017c40:	bd38      	pop	{r3, r4, r5, pc}
 8017c42:	bf00      	nop
 8017c44:	20017514 	.word	0x20017514
 8017c48:	20000000 	.word	0x20000000
 8017c4c:	08015b85 	.word	0x08015b85
 8017c50:	200000b8 	.word	0x200000b8
 8017c54:	20017518 	.word	0x20017518
 8017c58:	08015b83 	.word	0x08015b83
 8017c5c:	200000bc 	.word	0x200000bc

08017c60 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 8017c60:	b510      	push	{r4, lr}
 8017c62:	4604      	mov	r4, r0
 8017c64:	f7ff ff88 	bl	8017b78 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 8017c68:	4620      	mov	r0, r4
 8017c6a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8017c6e:	f7ff bfbd 	b.w	8017bec <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

08017c74 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 8017c74:	b538      	push	{r3, r4, r5, lr}
 8017c76:	4c15      	ldr	r4, [pc, #84]	; (8017ccc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 8017c78:	7823      	ldrb	r3, [r4, #0]
 8017c7a:	f3bf 8f5b 	dmb	ish
 8017c7e:	07da      	lsls	r2, r3, #31
 8017c80:	4605      	mov	r5, r0
 8017c82:	d40b      	bmi.n	8017c9c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8017c84:	4620      	mov	r0, r4
 8017c86:	f007 fc18 	bl	801f4ba <__cxa_guard_acquire>
 8017c8a:	b138      	cbz	r0, 8017c9c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8017c8c:	4620      	mov	r0, r4
 8017c8e:	f007 fc20 	bl	801f4d2 <__cxa_guard_release>
 8017c92:	4a0f      	ldr	r2, [pc, #60]	; (8017cd0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8017c94:	490f      	ldr	r1, [pc, #60]	; (8017cd4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 8017c96:	4810      	ldr	r0, [pc, #64]	; (8017cd8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8017c98:	f007 fc08 	bl	801f4ac <__aeabi_atexit>
 8017c9c:	4c0f      	ldr	r4, [pc, #60]	; (8017cdc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 8017c9e:	7823      	ldrb	r3, [r4, #0]
 8017ca0:	f3bf 8f5b 	dmb	ish
 8017ca4:	07db      	lsls	r3, r3, #31
 8017ca6:	d40b      	bmi.n	8017cc0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8017ca8:	4620      	mov	r0, r4
 8017caa:	f007 fc06 	bl	801f4ba <__cxa_guard_acquire>
 8017cae:	b138      	cbz	r0, 8017cc0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8017cb0:	4620      	mov	r0, r4
 8017cb2:	f007 fc0e 	bl	801f4d2 <__cxa_guard_release>
 8017cb6:	4a06      	ldr	r2, [pc, #24]	; (8017cd0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8017cb8:	4909      	ldr	r1, [pc, #36]	; (8017ce0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 8017cba:	480a      	ldr	r0, [pc, #40]	; (8017ce4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8017cbc:	f007 fbf6 	bl	801f4ac <__aeabi_atexit>
 8017cc0:	4b05      	ldr	r3, [pc, #20]	; (8017cd8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8017cc2:	652b      	str	r3, [r5, #80]	; 0x50
 8017cc4:	4b07      	ldr	r3, [pc, #28]	; (8017ce4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8017cc6:	656b      	str	r3, [r5, #84]	; 0x54
 8017cc8:	bd38      	pop	{r3, r4, r5, pc}
 8017cca:	bf00      	nop
 8017ccc:	2001754c 	.word	0x2001754c
 8017cd0:	20000000 	.word	0x20000000
 8017cd4:	08015b71 	.word	0x08015b71
 8017cd8:	200000f0 	.word	0x200000f0
 8017cdc:	20017550 	.word	0x20017550
 8017ce0:	08015b6f 	.word	0x08015b6f
 8017ce4:	200000f4 	.word	0x200000f4

08017ce8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 8017ce8:	b538      	push	{r3, r4, r5, lr}
 8017cea:	4c15      	ldr	r4, [pc, #84]	; (8017d40 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 8017cec:	7823      	ldrb	r3, [r4, #0]
 8017cee:	f3bf 8f5b 	dmb	ish
 8017cf2:	07da      	lsls	r2, r3, #31
 8017cf4:	4605      	mov	r5, r0
 8017cf6:	d40b      	bmi.n	8017d10 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8017cf8:	4620      	mov	r0, r4
 8017cfa:	f007 fbde 	bl	801f4ba <__cxa_guard_acquire>
 8017cfe:	b138      	cbz	r0, 8017d10 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8017d00:	4620      	mov	r0, r4
 8017d02:	f007 fbe6 	bl	801f4d2 <__cxa_guard_release>
 8017d06:	4a0f      	ldr	r2, [pc, #60]	; (8017d44 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8017d08:	490f      	ldr	r1, [pc, #60]	; (8017d48 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 8017d0a:	4810      	ldr	r0, [pc, #64]	; (8017d4c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8017d0c:	f007 fbce 	bl	801f4ac <__aeabi_atexit>
 8017d10:	4c0f      	ldr	r4, [pc, #60]	; (8017d50 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 8017d12:	7823      	ldrb	r3, [r4, #0]
 8017d14:	f3bf 8f5b 	dmb	ish
 8017d18:	07db      	lsls	r3, r3, #31
 8017d1a:	d40b      	bmi.n	8017d34 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8017d1c:	4620      	mov	r0, r4
 8017d1e:	f007 fbcc 	bl	801f4ba <__cxa_guard_acquire>
 8017d22:	b138      	cbz	r0, 8017d34 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8017d24:	4620      	mov	r0, r4
 8017d26:	f007 fbd4 	bl	801f4d2 <__cxa_guard_release>
 8017d2a:	4a06      	ldr	r2, [pc, #24]	; (8017d44 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8017d2c:	4909      	ldr	r1, [pc, #36]	; (8017d54 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 8017d2e:	480a      	ldr	r0, [pc, #40]	; (8017d58 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8017d30:	f007 fbbc 	bl	801f4ac <__aeabi_atexit>
 8017d34:	4b05      	ldr	r3, [pc, #20]	; (8017d4c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8017d36:	64ab      	str	r3, [r5, #72]	; 0x48
 8017d38:	4b07      	ldr	r3, [pc, #28]	; (8017d58 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8017d3a:	64eb      	str	r3, [r5, #76]	; 0x4c
 8017d3c:	bd38      	pop	{r3, r4, r5, pc}
 8017d3e:	bf00      	nop
 8017d40:	20017554 	.word	0x20017554
 8017d44:	20000000 	.word	0x20000000
 8017d48:	08015b75 	.word	0x08015b75
 8017d4c:	200000f8 	.word	0x200000f8
 8017d50:	20017558 	.word	0x20017558
 8017d54:	08015b73 	.word	0x08015b73
 8017d58:	200000fc 	.word	0x200000fc

08017d5c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 8017d5c:	b538      	push	{r3, r4, r5, lr}
 8017d5e:	4c15      	ldr	r4, [pc, #84]	; (8017db4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 8017d60:	7823      	ldrb	r3, [r4, #0]
 8017d62:	f3bf 8f5b 	dmb	ish
 8017d66:	07da      	lsls	r2, r3, #31
 8017d68:	4605      	mov	r5, r0
 8017d6a:	d40b      	bmi.n	8017d84 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8017d6c:	4620      	mov	r0, r4
 8017d6e:	f007 fba4 	bl	801f4ba <__cxa_guard_acquire>
 8017d72:	b138      	cbz	r0, 8017d84 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8017d74:	4620      	mov	r0, r4
 8017d76:	f007 fbac 	bl	801f4d2 <__cxa_guard_release>
 8017d7a:	4a0f      	ldr	r2, [pc, #60]	; (8017db8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8017d7c:	490f      	ldr	r1, [pc, #60]	; (8017dbc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 8017d7e:	4810      	ldr	r0, [pc, #64]	; (8017dc0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8017d80:	f007 fb94 	bl	801f4ac <__aeabi_atexit>
 8017d84:	4c0f      	ldr	r4, [pc, #60]	; (8017dc4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 8017d86:	7823      	ldrb	r3, [r4, #0]
 8017d88:	f3bf 8f5b 	dmb	ish
 8017d8c:	07db      	lsls	r3, r3, #31
 8017d8e:	d40b      	bmi.n	8017da8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8017d90:	4620      	mov	r0, r4
 8017d92:	f007 fb92 	bl	801f4ba <__cxa_guard_acquire>
 8017d96:	b138      	cbz	r0, 8017da8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8017d98:	4620      	mov	r0, r4
 8017d9a:	f007 fb9a 	bl	801f4d2 <__cxa_guard_release>
 8017d9e:	4a06      	ldr	r2, [pc, #24]	; (8017db8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8017da0:	4909      	ldr	r1, [pc, #36]	; (8017dc8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 8017da2:	480a      	ldr	r0, [pc, #40]	; (8017dcc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8017da4:	f007 fb82 	bl	801f4ac <__aeabi_atexit>
 8017da8:	4b05      	ldr	r3, [pc, #20]	; (8017dc0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8017daa:	642b      	str	r3, [r5, #64]	; 0x40
 8017dac:	4b07      	ldr	r3, [pc, #28]	; (8017dcc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8017dae:	646b      	str	r3, [r5, #68]	; 0x44
 8017db0:	bd38      	pop	{r3, r4, r5, pc}
 8017db2:	bf00      	nop
 8017db4:	2001751c 	.word	0x2001751c
 8017db8:	20000000 	.word	0x20000000
 8017dbc:	08015b79 	.word	0x08015b79
 8017dc0:	200000c0 	.word	0x200000c0
 8017dc4:	20017520 	.word	0x20017520
 8017dc8:	08015b77 	.word	0x08015b77
 8017dcc:	200000c4 	.word	0x200000c4

08017dd0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 8017dd0:	b538      	push	{r3, r4, r5, lr}
 8017dd2:	4c15      	ldr	r4, [pc, #84]	; (8017e28 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 8017dd4:	7823      	ldrb	r3, [r4, #0]
 8017dd6:	f3bf 8f5b 	dmb	ish
 8017dda:	07da      	lsls	r2, r3, #31
 8017ddc:	4605      	mov	r5, r0
 8017dde:	d40b      	bmi.n	8017df8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8017de0:	4620      	mov	r0, r4
 8017de2:	f007 fb6a 	bl	801f4ba <__cxa_guard_acquire>
 8017de6:	b138      	cbz	r0, 8017df8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8017de8:	4620      	mov	r0, r4
 8017dea:	f007 fb72 	bl	801f4d2 <__cxa_guard_release>
 8017dee:	4a0f      	ldr	r2, [pc, #60]	; (8017e2c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8017df0:	490f      	ldr	r1, [pc, #60]	; (8017e30 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 8017df2:	4810      	ldr	r0, [pc, #64]	; (8017e34 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8017df4:	f007 fb5a 	bl	801f4ac <__aeabi_atexit>
 8017df8:	4c0f      	ldr	r4, [pc, #60]	; (8017e38 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 8017dfa:	7823      	ldrb	r3, [r4, #0]
 8017dfc:	f3bf 8f5b 	dmb	ish
 8017e00:	07db      	lsls	r3, r3, #31
 8017e02:	d40b      	bmi.n	8017e1c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8017e04:	4620      	mov	r0, r4
 8017e06:	f007 fb58 	bl	801f4ba <__cxa_guard_acquire>
 8017e0a:	b138      	cbz	r0, 8017e1c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8017e0c:	4620      	mov	r0, r4
 8017e0e:	f007 fb60 	bl	801f4d2 <__cxa_guard_release>
 8017e12:	4a06      	ldr	r2, [pc, #24]	; (8017e2c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8017e14:	4909      	ldr	r1, [pc, #36]	; (8017e3c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 8017e16:	480a      	ldr	r0, [pc, #40]	; (8017e40 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8017e18:	f007 fb48 	bl	801f4ac <__aeabi_atexit>
 8017e1c:	4b05      	ldr	r3, [pc, #20]	; (8017e34 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8017e1e:	63ab      	str	r3, [r5, #56]	; 0x38
 8017e20:	4b07      	ldr	r3, [pc, #28]	; (8017e40 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8017e22:	63eb      	str	r3, [r5, #60]	; 0x3c
 8017e24:	bd38      	pop	{r3, r4, r5, pc}
 8017e26:	bf00      	nop
 8017e28:	2001753c 	.word	0x2001753c
 8017e2c:	20000000 	.word	0x20000000
 8017e30:	08015b7d 	.word	0x08015b7d
 8017e34:	200000e0 	.word	0x200000e0
 8017e38:	20017540 	.word	0x20017540
 8017e3c:	08015b7b 	.word	0x08015b7b
 8017e40:	200000e4 	.word	0x200000e4

08017e44 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 8017e44:	b510      	push	{r4, lr}
 8017e46:	4604      	mov	r4, r0
 8017e48:	f7ff ff14 	bl	8017c74 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 8017e4c:	4620      	mov	r0, r4
 8017e4e:	f7ff ff85 	bl	8017d5c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 8017e52:	4620      	mov	r0, r4
 8017e54:	f7ff ff48 	bl	8017ce8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 8017e58:	4620      	mov	r0, r4
 8017e5a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8017e5e:	f7ff bfb7 	b.w	8017dd0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

08017e64 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 8017e64:	b538      	push	{r3, r4, r5, lr}
 8017e66:	4c15      	ldr	r4, [pc, #84]	; (8017ebc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 8017e68:	7823      	ldrb	r3, [r4, #0]
 8017e6a:	f3bf 8f5b 	dmb	ish
 8017e6e:	07da      	lsls	r2, r3, #31
 8017e70:	4605      	mov	r5, r0
 8017e72:	d40b      	bmi.n	8017e8c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8017e74:	4620      	mov	r0, r4
 8017e76:	f007 fb20 	bl	801f4ba <__cxa_guard_acquire>
 8017e7a:	b138      	cbz	r0, 8017e8c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8017e7c:	4620      	mov	r0, r4
 8017e7e:	f007 fb28 	bl	801f4d2 <__cxa_guard_release>
 8017e82:	4a0f      	ldr	r2, [pc, #60]	; (8017ec0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8017e84:	490f      	ldr	r1, [pc, #60]	; (8017ec4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 8017e86:	4810      	ldr	r0, [pc, #64]	; (8017ec8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8017e88:	f007 fb10 	bl	801f4ac <__aeabi_atexit>
 8017e8c:	4c0f      	ldr	r4, [pc, #60]	; (8017ecc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 8017e8e:	7823      	ldrb	r3, [r4, #0]
 8017e90:	f3bf 8f5b 	dmb	ish
 8017e94:	07db      	lsls	r3, r3, #31
 8017e96:	d40b      	bmi.n	8017eb0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8017e98:	4620      	mov	r0, r4
 8017e9a:	f007 fb0e 	bl	801f4ba <__cxa_guard_acquire>
 8017e9e:	b138      	cbz	r0, 8017eb0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8017ea0:	4620      	mov	r0, r4
 8017ea2:	f007 fb16 	bl	801f4d2 <__cxa_guard_release>
 8017ea6:	4a06      	ldr	r2, [pc, #24]	; (8017ec0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8017ea8:	4909      	ldr	r1, [pc, #36]	; (8017ed0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 8017eaa:	480a      	ldr	r0, [pc, #40]	; (8017ed4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8017eac:	f007 fafe 	bl	801f4ac <__aeabi_atexit>
 8017eb0:	4b05      	ldr	r3, [pc, #20]	; (8017ec8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8017eb2:	662b      	str	r3, [r5, #96]	; 0x60
 8017eb4:	4b07      	ldr	r3, [pc, #28]	; (8017ed4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8017eb6:	666b      	str	r3, [r5, #100]	; 0x64
 8017eb8:	bd38      	pop	{r3, r4, r5, pc}
 8017eba:	bf00      	nop
 8017ebc:	20017524 	.word	0x20017524
 8017ec0:	20000000 	.word	0x20000000
 8017ec4:	08015b69 	.word	0x08015b69
 8017ec8:	200000c8 	.word	0x200000c8
 8017ecc:	20017528 	.word	0x20017528
 8017ed0:	08015b67 	.word	0x08015b67
 8017ed4:	200000cc 	.word	0x200000cc

08017ed8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 8017ed8:	b538      	push	{r3, r4, r5, lr}
 8017eda:	4c15      	ldr	r4, [pc, #84]	; (8017f30 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 8017edc:	7823      	ldrb	r3, [r4, #0]
 8017ede:	f3bf 8f5b 	dmb	ish
 8017ee2:	07da      	lsls	r2, r3, #31
 8017ee4:	4605      	mov	r5, r0
 8017ee6:	d40b      	bmi.n	8017f00 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8017ee8:	4620      	mov	r0, r4
 8017eea:	f007 fae6 	bl	801f4ba <__cxa_guard_acquire>
 8017eee:	b138      	cbz	r0, 8017f00 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8017ef0:	4620      	mov	r0, r4
 8017ef2:	f007 faee 	bl	801f4d2 <__cxa_guard_release>
 8017ef6:	4a0f      	ldr	r2, [pc, #60]	; (8017f34 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8017ef8:	490f      	ldr	r1, [pc, #60]	; (8017f38 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 8017efa:	4810      	ldr	r0, [pc, #64]	; (8017f3c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8017efc:	f007 fad6 	bl	801f4ac <__aeabi_atexit>
 8017f00:	4c0f      	ldr	r4, [pc, #60]	; (8017f40 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 8017f02:	7823      	ldrb	r3, [r4, #0]
 8017f04:	f3bf 8f5b 	dmb	ish
 8017f08:	07db      	lsls	r3, r3, #31
 8017f0a:	d40b      	bmi.n	8017f24 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8017f0c:	4620      	mov	r0, r4
 8017f0e:	f007 fad4 	bl	801f4ba <__cxa_guard_acquire>
 8017f12:	b138      	cbz	r0, 8017f24 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8017f14:	4620      	mov	r0, r4
 8017f16:	f007 fadc 	bl	801f4d2 <__cxa_guard_release>
 8017f1a:	4a06      	ldr	r2, [pc, #24]	; (8017f34 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8017f1c:	4909      	ldr	r1, [pc, #36]	; (8017f44 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 8017f1e:	480a      	ldr	r0, [pc, #40]	; (8017f48 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8017f20:	f007 fac4 	bl	801f4ac <__aeabi_atexit>
 8017f24:	4b05      	ldr	r3, [pc, #20]	; (8017f3c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8017f26:	65ab      	str	r3, [r5, #88]	; 0x58
 8017f28:	4b07      	ldr	r3, [pc, #28]	; (8017f48 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8017f2a:	65eb      	str	r3, [r5, #92]	; 0x5c
 8017f2c:	bd38      	pop	{r3, r4, r5, pc}
 8017f2e:	bf00      	nop
 8017f30:	200174fc 	.word	0x200174fc
 8017f34:	20000000 	.word	0x20000000
 8017f38:	08015b6d 	.word	0x08015b6d
 8017f3c:	200000a0 	.word	0x200000a0
 8017f40:	20017500 	.word	0x20017500
 8017f44:	08015b6b 	.word	0x08015b6b
 8017f48:	200000a4 	.word	0x200000a4

08017f4c <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 8017f4c:	b510      	push	{r4, lr}
 8017f4e:	4604      	mov	r4, r0
 8017f50:	f7ff ff88 	bl	8017e64 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 8017f54:	4620      	mov	r0, r4
 8017f56:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8017f5a:	f7ff bfbd 	b.w	8017ed8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

08017f60 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 8017f60:	b538      	push	{r3, r4, r5, lr}
 8017f62:	4c15      	ldr	r4, [pc, #84]	; (8017fb8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 8017f64:	7823      	ldrb	r3, [r4, #0]
 8017f66:	f3bf 8f5b 	dmb	ish
 8017f6a:	07da      	lsls	r2, r3, #31
 8017f6c:	4605      	mov	r5, r0
 8017f6e:	d40b      	bmi.n	8017f88 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8017f70:	4620      	mov	r0, r4
 8017f72:	f007 faa2 	bl	801f4ba <__cxa_guard_acquire>
 8017f76:	b138      	cbz	r0, 8017f88 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8017f78:	4620      	mov	r0, r4
 8017f7a:	f007 faaa 	bl	801f4d2 <__cxa_guard_release>
 8017f7e:	4a0f      	ldr	r2, [pc, #60]	; (8017fbc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8017f80:	490f      	ldr	r1, [pc, #60]	; (8017fc0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 8017f82:	4810      	ldr	r0, [pc, #64]	; (8017fc4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8017f84:	f007 fa92 	bl	801f4ac <__aeabi_atexit>
 8017f88:	4c0f      	ldr	r4, [pc, #60]	; (8017fc8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 8017f8a:	7823      	ldrb	r3, [r4, #0]
 8017f8c:	f3bf 8f5b 	dmb	ish
 8017f90:	07db      	lsls	r3, r3, #31
 8017f92:	d40b      	bmi.n	8017fac <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8017f94:	4620      	mov	r0, r4
 8017f96:	f007 fa90 	bl	801f4ba <__cxa_guard_acquire>
 8017f9a:	b138      	cbz	r0, 8017fac <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8017f9c:	4620      	mov	r0, r4
 8017f9e:	f007 fa98 	bl	801f4d2 <__cxa_guard_release>
 8017fa2:	4a06      	ldr	r2, [pc, #24]	; (8017fbc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8017fa4:	4909      	ldr	r1, [pc, #36]	; (8017fcc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 8017fa6:	480a      	ldr	r0, [pc, #40]	; (8017fd0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8017fa8:	f007 fa80 	bl	801f4ac <__aeabi_atexit>
 8017fac:	4b05      	ldr	r3, [pc, #20]	; (8017fc4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8017fae:	672b      	str	r3, [r5, #112]	; 0x70
 8017fb0:	4b07      	ldr	r3, [pc, #28]	; (8017fd0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8017fb2:	676b      	str	r3, [r5, #116]	; 0x74
 8017fb4:	bd38      	pop	{r3, r4, r5, pc}
 8017fb6:	bf00      	nop
 8017fb8:	200174f4 	.word	0x200174f4
 8017fbc:	20000000 	.word	0x20000000
 8017fc0:	08015b61 	.word	0x08015b61
 8017fc4:	20000098 	.word	0x20000098
 8017fc8:	200174f8 	.word	0x200174f8
 8017fcc:	08015b5f 	.word	0x08015b5f
 8017fd0:	2000009c 	.word	0x2000009c

08017fd4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 8017fd4:	b538      	push	{r3, r4, r5, lr}
 8017fd6:	4c15      	ldr	r4, [pc, #84]	; (801802c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 8017fd8:	7823      	ldrb	r3, [r4, #0]
 8017fda:	f3bf 8f5b 	dmb	ish
 8017fde:	07da      	lsls	r2, r3, #31
 8017fe0:	4605      	mov	r5, r0
 8017fe2:	d40b      	bmi.n	8017ffc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8017fe4:	4620      	mov	r0, r4
 8017fe6:	f007 fa68 	bl	801f4ba <__cxa_guard_acquire>
 8017fea:	b138      	cbz	r0, 8017ffc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8017fec:	4620      	mov	r0, r4
 8017fee:	f007 fa70 	bl	801f4d2 <__cxa_guard_release>
 8017ff2:	4a0f      	ldr	r2, [pc, #60]	; (8018030 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8017ff4:	490f      	ldr	r1, [pc, #60]	; (8018034 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 8017ff6:	4810      	ldr	r0, [pc, #64]	; (8018038 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8017ff8:	f007 fa58 	bl	801f4ac <__aeabi_atexit>
 8017ffc:	4c0f      	ldr	r4, [pc, #60]	; (801803c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 8017ffe:	7823      	ldrb	r3, [r4, #0]
 8018000:	f3bf 8f5b 	dmb	ish
 8018004:	07db      	lsls	r3, r3, #31
 8018006:	d40b      	bmi.n	8018020 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8018008:	4620      	mov	r0, r4
 801800a:	f007 fa56 	bl	801f4ba <__cxa_guard_acquire>
 801800e:	b138      	cbz	r0, 8018020 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8018010:	4620      	mov	r0, r4
 8018012:	f007 fa5e 	bl	801f4d2 <__cxa_guard_release>
 8018016:	4a06      	ldr	r2, [pc, #24]	; (8018030 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8018018:	4909      	ldr	r1, [pc, #36]	; (8018040 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 801801a:	480a      	ldr	r0, [pc, #40]	; (8018044 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801801c:	f007 fa46 	bl	801f4ac <__aeabi_atexit>
 8018020:	4b05      	ldr	r3, [pc, #20]	; (8018038 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8018022:	66ab      	str	r3, [r5, #104]	; 0x68
 8018024:	4b07      	ldr	r3, [pc, #28]	; (8018044 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8018026:	66eb      	str	r3, [r5, #108]	; 0x6c
 8018028:	bd38      	pop	{r3, r4, r5, pc}
 801802a:	bf00      	nop
 801802c:	200174ec 	.word	0x200174ec
 8018030:	20000000 	.word	0x20000000
 8018034:	08015b65 	.word	0x08015b65
 8018038:	20000090 	.word	0x20000090
 801803c:	200174f0 	.word	0x200174f0
 8018040:	08015b63 	.word	0x08015b63
 8018044:	20000094 	.word	0x20000094

08018048 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 8018048:	b510      	push	{r4, lr}
 801804a:	4604      	mov	r4, r0
 801804c:	f7ff ff88 	bl	8017f60 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 8018050:	4620      	mov	r0, r4
 8018052:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8018056:	f7ff bfbd 	b.w	8017fd4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

0801805a <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 801805a:	b510      	push	{r4, lr}
 801805c:	4604      	mov	r4, r0
 801805e:	f7ff fff3 	bl	8018048 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 8018062:	4620      	mov	r0, r4
 8018064:	f7ff ff72 	bl	8017f4c <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 8018068:	4620      	mov	r0, r4
 801806a:	f7ff fdf9 	bl	8017c60 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 801806e:	4620      	mov	r0, r4
 8018070:	f7ff fcfa 	bl	8017a68 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 8018074:	4620      	mov	r0, r4
 8018076:	f7ff fd75 	bl	8017b64 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 801807a:	4620      	mov	r0, r4
 801807c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8018080:	f7ff bee0 	b.w	8017e44 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

08018084 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 8018084:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018088:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	; 0x2c
 801808c:	f9bd e024 	ldrsh.w	lr, [sp, #36]	; 0x24
 8018090:	f9bd b028 	ldrsh.w	fp, [sp, #40]	; 0x28
 8018094:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 8018098:	f89d 7038 	ldrb.w	r7, [sp, #56]	; 0x38
 801809c:	f89d 603c 	ldrb.w	r6, [sp, #60]	; 0x3c
 80180a0:	8808      	ldrh	r0, [r1, #0]
 80180a2:	fb05 4c0e 	mla	ip, r5, lr, r4
 80180a6:	2d00      	cmp	r5, #0
 80180a8:	eb02 0a0c 	add.w	sl, r2, ip
 80180ac:	f2c0 80b0 	blt.w	8018210 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 80180b0:	45ab      	cmp	fp, r5
 80180b2:	f340 80ad 	ble.w	8018210 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 80180b6:	2c00      	cmp	r4, #0
 80180b8:	f2c0 80a8 	blt.w	801820c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 80180bc:	45a6      	cmp	lr, r4
 80180be:	f340 80a5 	ble.w	801820c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 80180c2:	f812 200c 	ldrb.w	r2, [r2, ip]
 80180c6:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 80180ca:	1c62      	adds	r2, r4, #1
 80180cc:	f100 80a3 	bmi.w	8018216 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 80180d0:	4596      	cmp	lr, r2
 80180d2:	f340 80a0 	ble.w	8018216 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 80180d6:	f1b9 0f00 	cmp.w	r9, #0
 80180da:	f000 809c 	beq.w	8018216 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 80180de:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80180e2:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 80180e6:	3501      	adds	r5, #1
 80180e8:	f100 8099 	bmi.w	801821e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 80180ec:	45ab      	cmp	fp, r5
 80180ee:	f340 8096 	ble.w	801821e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 80180f2:	2f00      	cmp	r7, #0
 80180f4:	f000 8093 	beq.w	801821e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 80180f8:	2c00      	cmp	r4, #0
 80180fa:	f2c0 808e 	blt.w	801821a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 80180fe:	45a6      	cmp	lr, r4
 8018100:	f340 808b 	ble.w	801821a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 8018104:	f81a 200e 	ldrb.w	r2, [sl, lr]
 8018108:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 801810c:	3401      	adds	r4, #1
 801810e:	f100 8089 	bmi.w	8018224 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8018112:	45a6      	cmp	lr, r4
 8018114:	f340 8086 	ble.w	8018224 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8018118:	f1b9 0f00 	cmp.w	r9, #0
 801811c:	f000 8082 	beq.w	8018224 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8018120:	44d6      	add	lr, sl
 8018122:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8018126:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 801812a:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801812e:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8018132:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 8018136:	fb19 fe07 	smulbb	lr, r9, r7
 801813a:	ea44 0808 	orr.w	r8, r4, r8
 801813e:	ea4f 440c 	mov.w	r4, ip, lsl #16
 8018142:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 8018146:	f1c7 0210 	rsb	r2, r7, #16
 801814a:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801814e:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8018152:	ea44 0c0c 	orr.w	ip, r4, ip
 8018156:	eba2 0209 	sub.w	r2, r2, r9
 801815a:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801815e:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 8018162:	fb04 f40c 	mul.w	r4, r4, ip
 8018166:	fb02 4808 	mla	r8, r2, r8, r4
 801816a:	041a      	lsls	r2, r3, #16
 801816c:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8018170:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8018174:	4313      	orrs	r3, r2
 8018176:	042a      	lsls	r2, r5, #16
 8018178:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801817c:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8018180:	fb0e 8303 	mla	r3, lr, r3, r8
 8018184:	432a      	orrs	r2, r5
 8018186:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801818a:	fb07 3202 	mla	r2, r7, r2, r3
 801818e:	0d53      	lsrs	r3, r2, #21
 8018190:	0952      	lsrs	r2, r2, #5
 8018192:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018196:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801819a:	431a      	orrs	r2, r3
 801819c:	b293      	uxth	r3, r2
 801819e:	b2b4      	uxth	r4, r6
 80181a0:	1202      	asrs	r2, r0, #8
 80181a2:	43f6      	mvns	r6, r6
 80181a4:	b2f6      	uxtb	r6, r6
 80181a6:	121d      	asrs	r5, r3, #8
 80181a8:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80181ac:	fb12 f206 	smulbb	r2, r2, r6
 80181b0:	10c7      	asrs	r7, r0, #3
 80181b2:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80181b6:	00c0      	lsls	r0, r0, #3
 80181b8:	fb05 2504 	mla	r5, r5, r4, r2
 80181bc:	b2c0      	uxtb	r0, r0
 80181be:	10da      	asrs	r2, r3, #3
 80181c0:	00db      	lsls	r3, r3, #3
 80181c2:	b2db      	uxtb	r3, r3
 80181c4:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80181c8:	fb10 f006 	smulbb	r0, r0, r6
 80181cc:	b2ad      	uxth	r5, r5
 80181ce:	fb03 0004 	mla	r0, r3, r4, r0
 80181d2:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80181d6:	fb17 f706 	smulbb	r7, r7, r6
 80181da:	b280      	uxth	r0, r0
 80181dc:	1c6b      	adds	r3, r5, #1
 80181de:	fb02 7204 	mla	r2, r2, r4, r7
 80181e2:	b292      	uxth	r2, r2
 80181e4:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80181e8:	1c43      	adds	r3, r0, #1
 80181ea:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80181ee:	1c50      	adds	r0, r2, #1
 80181f0:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 80181f4:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80181f8:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80181fc:	0952      	lsrs	r2, r2, #5
 80181fe:	432b      	orrs	r3, r5
 8018200:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018204:	4313      	orrs	r3, r2
 8018206:	800b      	strh	r3, [r1, #0]
 8018208:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801820c:	4680      	mov	r8, r0
 801820e:	e75c      	b.n	80180ca <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 8018210:	4684      	mov	ip, r0
 8018212:	4680      	mov	r8, r0
 8018214:	e767      	b.n	80180e6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 8018216:	4684      	mov	ip, r0
 8018218:	e765      	b.n	80180e6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801821a:	4605      	mov	r5, r0
 801821c:	e776      	b.n	801810c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 801821e:	4603      	mov	r3, r0
 8018220:	4605      	mov	r5, r0
 8018222:	e782      	b.n	801812a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 8018224:	4603      	mov	r3, r0
 8018226:	e780      	b.n	801812a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

08018228 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018228:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801822c:	b099      	sub	sp, #100	; 0x64
 801822e:	e9dd a523 	ldrd	sl, r5, [sp, #140]	; 0x8c
 8018232:	9215      	str	r2, [sp, #84]	; 0x54
 8018234:	9309      	str	r3, [sp, #36]	; 0x24
 8018236:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8018238:	f89d 30ac 	ldrb.w	r3, [sp, #172]	; 0xac
 801823c:	930d      	str	r3, [sp, #52]	; 0x34
 801823e:	910c      	str	r1, [sp, #48]	; 0x30
 8018240:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	; 0xa0
 8018244:	9016      	str	r0, [sp, #88]	; 0x58
 8018246:	6850      	ldr	r0, [r2, #4]
 8018248:	6812      	ldr	r2, [r2, #0]
 801824a:	fb00 1303 	mla	r3, r0, r3, r1
 801824e:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 8018252:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018254:	681b      	ldr	r3, [r3, #0]
 8018256:	930b      	str	r3, [sp, #44]	; 0x2c
 8018258:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801825a:	685e      	ldr	r6, [r3, #4]
 801825c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801825e:	43db      	mvns	r3, r3
 8018260:	b2db      	uxtb	r3, r3
 8018262:	3604      	adds	r6, #4
 8018264:	930a      	str	r3, [sp, #40]	; 0x28
 8018266:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8018268:	2b00      	cmp	r3, #0
 801826a:	dc03      	bgt.n	8018274 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801826c:	9b15      	ldr	r3, [sp, #84]	; 0x54
 801826e:	2b00      	cmp	r3, #0
 8018270:	f340 8225 	ble.w	80186be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 8018274:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018276:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801827a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801827e:	1e48      	subs	r0, r1, #1
 8018280:	1e57      	subs	r7, r2, #1
 8018282:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018284:	2b00      	cmp	r3, #0
 8018286:	f340 80e3 	ble.w	8018450 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801828a:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 801828e:	ea4f 4325 	mov.w	r3, r5, asr #16
 8018292:	d406      	bmi.n	80182a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8018294:	4584      	cmp	ip, r0
 8018296:	da04      	bge.n	80182a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8018298:	2b00      	cmp	r3, #0
 801829a:	db02      	blt.n	80182a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801829c:	42bb      	cmp	r3, r7
 801829e:	f2c0 80d8 	blt.w	8018452 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 80182a2:	f11c 0c01 	adds.w	ip, ip, #1
 80182a6:	f100 80c9 	bmi.w	801843c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80182aa:	4561      	cmp	r1, ip
 80182ac:	f2c0 80c6 	blt.w	801843c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80182b0:	3301      	adds	r3, #1
 80182b2:	f100 80c3 	bmi.w	801843c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80182b6:	429a      	cmp	r2, r3
 80182b8:	f2c0 80c0 	blt.w	801843c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80182bc:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 80182c0:	4647      	mov	r7, r8
 80182c2:	f1bb 0f00 	cmp.w	fp, #0
 80182c6:	f340 80e3 	ble.w	8018490 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 80182ca:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 80182cc:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80182ce:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 80182d2:	689b      	ldr	r3, [r3, #8]
 80182d4:	ea5f 422a 	movs.w	r2, sl, asr #16
 80182d8:	ea4f 4c25 	mov.w	ip, r5, asr #16
 80182dc:	f3ca 3003 	ubfx	r0, sl, #12, #4
 80182e0:	f3c5 3103 	ubfx	r1, r5, #12, #4
 80182e4:	f100 8121 	bmi.w	801852a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 80182e8:	f103 39ff 	add.w	r9, r3, #4294967295
 80182ec:	454a      	cmp	r2, r9
 80182ee:	f280 811c 	bge.w	801852a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 80182f2:	f1bc 0f00 	cmp.w	ip, #0
 80182f6:	f2c0 8118 	blt.w	801852a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 80182fa:	f10e 39ff 	add.w	r9, lr, #4294967295
 80182fe:	45cc      	cmp	ip, r9
 8018300:	f280 8113 	bge.w	801852a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8018304:	b21b      	sxth	r3, r3
 8018306:	fb0c 2203 	mla	r2, ip, r3, r2
 801830a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801830c:	eb04 0902 	add.w	r9, r4, r2
 8018310:	5ca2      	ldrb	r2, [r4, r2]
 8018312:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 8018316:	2800      	cmp	r0, #0
 8018318:	f000 80fe 	beq.w	8018518 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801831c:	f899 2001 	ldrb.w	r2, [r9, #1]
 8018320:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8018324:	9211      	str	r2, [sp, #68]	; 0x44
 8018326:	b151      	cbz	r1, 801833e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8018328:	eb09 0203 	add.w	r2, r9, r3
 801832c:	f819 3003 	ldrb.w	r3, [r9, r3]
 8018330:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8018334:	930f      	str	r3, [sp, #60]	; 0x3c
 8018336:	7853      	ldrb	r3, [r2, #1]
 8018338:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801833c:	9312      	str	r3, [sp, #72]	; 0x48
 801833e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8018340:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8018342:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8018346:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801834a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801834e:	ea4c 0c03 	orr.w	ip, ip, r3
 8018352:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8018354:	041b      	lsls	r3, r3, #16
 8018356:	fb10 f201 	smulbb	r2, r0, r1
 801835a:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801835e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8018362:	10d2      	asrs	r2, r2, #3
 8018364:	4323      	orrs	r3, r4
 8018366:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 801836a:	4353      	muls	r3, r2
 801836c:	fb09 330c 	mla	r3, r9, ip, r3
 8018370:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8018374:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8018378:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801837c:	ea4c 0e0e 	orr.w	lr, ip, lr
 8018380:	f1c1 0c10 	rsb	ip, r1, #16
 8018384:	ebac 0c00 	sub.w	ip, ip, r0
 8018388:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801838c:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8018390:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8018392:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8018394:	0418      	lsls	r0, r3, #16
 8018396:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801839a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801839e:	4318      	orrs	r0, r3
 80183a0:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 80183a4:	fb02 c200 	mla	r2, r2, r0, ip
 80183a8:	0d53      	lsrs	r3, r2, #21
 80183aa:	0952      	lsrs	r2, r2, #5
 80183ac:	8838      	ldrh	r0, [r7, #0]
 80183ae:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80183b2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80183b6:	431a      	orrs	r2, r3
 80183b8:	b292      	uxth	r2, r2
 80183ba:	1201      	asrs	r1, r0, #8
 80183bc:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 80183c0:	ea4f 2c22 	mov.w	ip, r2, asr #8
 80183c4:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80183c8:	fb11 f104 	smulbb	r1, r1, r4
 80183cc:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 80183d0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80183d4:	00c0      	lsls	r0, r0, #3
 80183d6:	fb0c 1c03 	mla	ip, ip, r3, r1
 80183da:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 80183de:	10d1      	asrs	r1, r2, #3
 80183e0:	b2c0      	uxtb	r0, r0
 80183e2:	00d2      	lsls	r2, r2, #3
 80183e4:	b2d2      	uxtb	r2, r2
 80183e6:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80183ea:	fb1e fe04 	smulbb	lr, lr, r4
 80183ee:	fb10 f004 	smulbb	r0, r0, r4
 80183f2:	fa1f fc8c 	uxth.w	ip, ip
 80183f6:	fb01 e103 	mla	r1, r1, r3, lr
 80183fa:	fb02 0303 	mla	r3, r2, r3, r0
 80183fe:	b29a      	uxth	r2, r3
 8018400:	f10c 0301 	add.w	r3, ip, #1
 8018404:	b289      	uxth	r1, r1
 8018406:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801840a:	1c53      	adds	r3, r2, #1
 801840c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8018410:	1c4a      	adds	r2, r1, #1
 8018412:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8018416:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801841a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801841e:	0949      	lsrs	r1, r1, #5
 8018420:	ea43 030c 	orr.w	r3, r3, ip
 8018424:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8018428:	430b      	orrs	r3, r1
 801842a:	803b      	strh	r3, [r7, #0]
 801842c:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801842e:	449a      	add	sl, r3
 8018430:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8018432:	3702      	adds	r7, #2
 8018434:	441d      	add	r5, r3
 8018436:	f10b 3bff 	add.w	fp, fp, #4294967295
 801843a:	e742      	b.n	80182c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801843c:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801843e:	449a      	add	sl, r3
 8018440:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8018442:	441d      	add	r5, r3
 8018444:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018446:	3b01      	subs	r3, #1
 8018448:	9309      	str	r3, [sp, #36]	; 0x24
 801844a:	f108 0802 	add.w	r8, r8, #2
 801844e:	e718      	b.n	8018282 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8018450:	d023      	beq.n	801849a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 8018452:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018454:	9825      	ldr	r0, [sp, #148]	; 0x94
 8018456:	3b01      	subs	r3, #1
 8018458:	fb00 a003 	mla	r0, r0, r3, sl
 801845c:	1400      	asrs	r0, r0, #16
 801845e:	f53f af2d 	bmi.w	80182bc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8018462:	3901      	subs	r1, #1
 8018464:	4288      	cmp	r0, r1
 8018466:	f6bf af29 	bge.w	80182bc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801846a:	9926      	ldr	r1, [sp, #152]	; 0x98
 801846c:	fb01 5303 	mla	r3, r1, r3, r5
 8018470:	141b      	asrs	r3, r3, #16
 8018472:	f53f af23 	bmi.w	80182bc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8018476:	3a01      	subs	r2, #1
 8018478:	4293      	cmp	r3, r2
 801847a:	f6bf af1f 	bge.w	80182bc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801847e:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8018482:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 8018486:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 801848a:	f1be 0f00 	cmp.w	lr, #0
 801848e:	dc6c      	bgt.n	801856a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 8018490:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018492:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8018496:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801849a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801849c:	2b00      	cmp	r3, #0
 801849e:	f340 810e 	ble.w	80186be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 80184a2:	ee30 0a04 	vadd.f32	s0, s0, s8
 80184a6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80184aa:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80184ae:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80184b0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80184b4:	ee31 1a05 	vadd.f32	s2, s2, s10
 80184b8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80184bc:	eef0 6a62 	vmov.f32	s13, s5
 80184c0:	ee61 7a27 	vmul.f32	s15, s2, s15
 80184c4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80184c8:	ee77 2a62 	vsub.f32	s5, s14, s5
 80184cc:	ee16 aa90 	vmov	sl, s13
 80184d0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80184d4:	eef0 6a43 	vmov.f32	s13, s6
 80184d8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80184dc:	ee12 2a90 	vmov	r2, s5
 80184e0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80184e4:	fb92 f3f3 	sdiv	r3, r2, r3
 80184e8:	ee13 2a10 	vmov	r2, s6
 80184ec:	9325      	str	r3, [sp, #148]	; 0x94
 80184ee:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80184f0:	fb92 f3f3 	sdiv	r3, r2, r3
 80184f4:	9326      	str	r3, [sp, #152]	; 0x98
 80184f6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80184f8:	9a15      	ldr	r2, [sp, #84]	; 0x54
 80184fa:	3b01      	subs	r3, #1
 80184fc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018500:	930c      	str	r3, [sp, #48]	; 0x30
 8018502:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8018504:	bf08      	it	eq
 8018506:	4613      	moveq	r3, r2
 8018508:	ee16 5a90 	vmov	r5, s13
 801850c:	9309      	str	r3, [sp, #36]	; 0x24
 801850e:	eeb0 3a67 	vmov.f32	s6, s15
 8018512:	eef0 2a47 	vmov.f32	s5, s14
 8018516:	e6a6      	b.n	8018266 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8018518:	2900      	cmp	r1, #0
 801851a:	f43f af10 	beq.w	801833e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801851e:	f819 3003 	ldrb.w	r3, [r9, r3]
 8018522:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8018526:	930f      	str	r3, [sp, #60]	; 0x3c
 8018528:	e709      	b.n	801833e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801852a:	f112 0901 	adds.w	r9, r2, #1
 801852e:	f53f af7d 	bmi.w	801842c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8018532:	454b      	cmp	r3, r9
 8018534:	f6ff af7a 	blt.w	801842c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8018538:	f11c 0901 	adds.w	r9, ip, #1
 801853c:	f53f af76 	bmi.w	801842c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8018540:	45ce      	cmp	lr, r9
 8018542:	f6ff af73 	blt.w	801842c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8018546:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8018548:	9202      	str	r2, [sp, #8]
 801854a:	b21b      	sxth	r3, r3
 801854c:	fa0f f28e 	sxth.w	r2, lr
 8018550:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8018554:	e9cd c003 	strd	ip, r0, [sp, #12]
 8018558:	9201      	str	r2, [sp, #4]
 801855a:	9300      	str	r3, [sp, #0]
 801855c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801855e:	9816      	ldr	r0, [sp, #88]	; 0x58
 8018560:	4633      	mov	r3, r6
 8018562:	4639      	mov	r1, r7
 8018564:	f7ff fd8e 	bl	8018084 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 8018568:	e760      	b.n	801842c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801856a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801856c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801856e:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8018572:	ea4f 422a 	mov.w	r2, sl, asr #16
 8018576:	1429      	asrs	r1, r5, #16
 8018578:	fb03 2101 	mla	r1, r3, r1, r2
 801857c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801857e:	440a      	add	r2, r1
 8018580:	5c61      	ldrb	r1, [r4, r1]
 8018582:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 8018586:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801858a:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 801858e:	f1bc 0f00 	cmp.w	ip, #0
 8018592:	f000 808c 	beq.w	80186ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 8018596:	7857      	ldrb	r7, [r2, #1]
 8018598:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 801859c:	9413      	str	r4, [sp, #76]	; 0x4c
 801859e:	b140      	cbz	r0, 80185b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 80185a0:	18d7      	adds	r7, r2, r3
 80185a2:	5cd3      	ldrb	r3, [r2, r3]
 80185a4:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80185a8:	9310      	str	r3, [sp, #64]	; 0x40
 80185aa:	787b      	ldrb	r3, [r7, #1]
 80185ac:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80185b0:	9314      	str	r3, [sp, #80]	; 0x50
 80185b2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80185b4:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80185b6:	fb1c f200 	smulbb	r2, ip, r0
 80185ba:	041f      	lsls	r7, r3, #16
 80185bc:	10d2      	asrs	r2, r2, #3
 80185be:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80185c2:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 80185c6:	431f      	orrs	r7, r3
 80185c8:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 80185cc:	9317      	str	r3, [sp, #92]	; 0x5c
 80185ce:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80185d0:	041b      	lsls	r3, r3, #16
 80185d2:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 80185d6:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80185da:	ea43 030b 	orr.w	r3, r3, fp
 80185de:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80185e0:	4353      	muls	r3, r2
 80185e2:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 80185e6:	fb04 3707 	mla	r7, r4, r7, r3
 80185ea:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80185ee:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 80185f2:	ea43 0b01 	orr.w	fp, r3, r1
 80185f6:	f1c0 0110 	rsb	r1, r0, #16
 80185fa:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80185fc:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80185fe:	eba1 0c0c 	sub.w	ip, r1, ip
 8018602:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8018606:	fb0c 770b 	mla	r7, ip, fp, r7
 801860a:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801860e:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 8018612:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8018616:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801861a:	ea4c 0c0b 	orr.w	ip, ip, fp
 801861e:	fb02 770c 	mla	r7, r2, ip, r7
 8018622:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8018624:	0d79      	lsrs	r1, r7, #21
 8018626:	097f      	lsrs	r7, r7, #5
 8018628:	8812      	ldrh	r2, [r2, #0]
 801862a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801862e:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8018632:	430f      	orrs	r7, r1
 8018634:	b2bb      	uxth	r3, r7
 8018636:	1211      	asrs	r1, r2, #8
 8018638:	1218      	asrs	r0, r3, #8
 801863a:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801863e:	fb11 f104 	smulbb	r1, r1, r4
 8018642:	10d7      	asrs	r7, r2, #3
 8018644:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8018648:	00d2      	lsls	r2, r2, #3
 801864a:	fb00 1009 	mla	r0, r0, r9, r1
 801864e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8018652:	10d9      	asrs	r1, r3, #3
 8018654:	b2d2      	uxtb	r2, r2
 8018656:	00db      	lsls	r3, r3, #3
 8018658:	fb17 f704 	smulbb	r7, r7, r4
 801865c:	fb12 f204 	smulbb	r2, r2, r4
 8018660:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8018664:	b2db      	uxtb	r3, r3
 8018666:	b280      	uxth	r0, r0
 8018668:	fb01 7109 	mla	r1, r1, r9, r7
 801866c:	fb03 2309 	mla	r3, r3, r9, r2
 8018670:	b29b      	uxth	r3, r3
 8018672:	b289      	uxth	r1, r1
 8018674:	1c42      	adds	r2, r0, #1
 8018676:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801867a:	1c4f      	adds	r7, r1, #1
 801867c:	1c5a      	adds	r2, r3, #1
 801867e:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8018682:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 8018686:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801868a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801868e:	0949      	lsrs	r1, r1, #5
 8018690:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018692:	4310      	orrs	r0, r2
 8018694:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8018698:	4308      	orrs	r0, r1
 801869a:	f823 0b02 	strh.w	r0, [r3], #2
 801869e:	930e      	str	r3, [sp, #56]	; 0x38
 80186a0:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80186a2:	449a      	add	sl, r3
 80186a4:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80186a6:	f10e 3eff 	add.w	lr, lr, #4294967295
 80186aa:	441d      	add	r5, r3
 80186ac:	e6ed      	b.n	801848a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 80186ae:	2800      	cmp	r0, #0
 80186b0:	f43f af7f 	beq.w	80185b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 80186b4:	5cd3      	ldrb	r3, [r2, r3]
 80186b6:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80186ba:	9310      	str	r3, [sp, #64]	; 0x40
 80186bc:	e779      	b.n	80185b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 80186be:	b019      	add	sp, #100	; 0x64
 80186c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080186c4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 80186c4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80186c8:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	; 0x28
 80186cc:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 80186d0:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
 80186d4:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 80186d8:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 80186dc:	8808      	ldrh	r0, [r1, #0]
 80186de:	fb08 470e 	mla	r7, r8, lr, r4
 80186e2:	f1b8 0f00 	cmp.w	r8, #0
 80186e6:	eb02 0907 	add.w	r9, r2, r7
 80186ea:	db67      	blt.n	80187bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 80186ec:	45c2      	cmp	sl, r8
 80186ee:	dd65      	ble.n	80187bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 80186f0:	2c00      	cmp	r4, #0
 80186f2:	db61      	blt.n	80187b8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 80186f4:	45a6      	cmp	lr, r4
 80186f6:	dd5f      	ble.n	80187b8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 80186f8:	5dd2      	ldrb	r2, [r2, r7]
 80186fa:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 80186fe:	1c62      	adds	r2, r4, #1
 8018700:	d45f      	bmi.n	80187c2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8018702:	4596      	cmp	lr, r2
 8018704:	dd5d      	ble.n	80187c2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8018706:	2d00      	cmp	r5, #0
 8018708:	d05b      	beq.n	80187c2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801870a:	f899 2001 	ldrb.w	r2, [r9, #1]
 801870e:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 8018712:	f118 0801 	adds.w	r8, r8, #1
 8018716:	d458      	bmi.n	80187ca <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8018718:	45c2      	cmp	sl, r8
 801871a:	dd56      	ble.n	80187ca <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801871c:	2e00      	cmp	r6, #0
 801871e:	d054      	beq.n	80187ca <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8018720:	2c00      	cmp	r4, #0
 8018722:	db50      	blt.n	80187c6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8018724:	45a6      	cmp	lr, r4
 8018726:	dd4e      	ble.n	80187c6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8018728:	f819 200e 	ldrb.w	r2, [r9, lr]
 801872c:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 8018730:	3401      	adds	r4, #1
 8018732:	d407      	bmi.n	8018744 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8018734:	45a6      	cmp	lr, r4
 8018736:	dd05      	ble.n	8018744 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8018738:	b125      	cbz	r5, 8018744 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801873a:	44ce      	add	lr, r9
 801873c:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8018740:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8018744:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8018748:	fb15 f406 	smulbb	r4, r5, r6
 801874c:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8018750:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8018754:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8018758:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801875c:	ea43 0c0c 	orr.w	ip, r3, ip
 8018760:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8018764:	f1c6 0310 	rsb	r3, r6, #16
 8018768:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801876c:	1b5b      	subs	r3, r3, r5
 801876e:	ea4e 0707 	orr.w	r7, lr, r7
 8018772:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 8018776:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801877a:	437d      	muls	r5, r7
 801877c:	fb03 5c0c 	mla	ip, r3, ip, r5
 8018780:	0403      	lsls	r3, r0, #16
 8018782:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8018786:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801878a:	4318      	orrs	r0, r3
 801878c:	0413      	lsls	r3, r2, #16
 801878e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8018792:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8018796:	4313      	orrs	r3, r2
 8018798:	fb04 c000 	mla	r0, r4, r0, ip
 801879c:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 80187a0:	fb06 0003 	mla	r0, r6, r3, r0
 80187a4:	0d43      	lsrs	r3, r0, #21
 80187a6:	0940      	lsrs	r0, r0, #5
 80187a8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80187ac:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80187b0:	4318      	orrs	r0, r3
 80187b2:	8008      	strh	r0, [r1, #0]
 80187b4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80187b8:	4684      	mov	ip, r0
 80187ba:	e7a0      	b.n	80186fe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 80187bc:	4607      	mov	r7, r0
 80187be:	4684      	mov	ip, r0
 80187c0:	e7a7      	b.n	8018712 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 80187c2:	4607      	mov	r7, r0
 80187c4:	e7a5      	b.n	8018712 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 80187c6:	4602      	mov	r2, r0
 80187c8:	e7b2      	b.n	8018730 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 80187ca:	4602      	mov	r2, r0
 80187cc:	e7ba      	b.n	8018744 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

080187ce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80187ce:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80187d2:	b093      	sub	sp, #76	; 0x4c
 80187d4:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 80187d8:	920f      	str	r2, [sp, #60]	; 0x3c
 80187da:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80187dc:	9108      	str	r1, [sp, #32]
 80187de:	9306      	str	r3, [sp, #24]
 80187e0:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 80187e4:	9010      	str	r0, [sp, #64]	; 0x40
 80187e6:	6850      	ldr	r0, [r2, #4]
 80187e8:	6812      	ldr	r2, [r2, #0]
 80187ea:	fb00 1303 	mla	r3, r0, r3, r1
 80187ee:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 80187f2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80187f4:	681b      	ldr	r3, [r3, #0]
 80187f6:	9307      	str	r3, [sp, #28]
 80187f8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80187fa:	685f      	ldr	r7, [r3, #4]
 80187fc:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8018800:	3704      	adds	r7, #4
 8018802:	9b08      	ldr	r3, [sp, #32]
 8018804:	2b00      	cmp	r3, #0
 8018806:	dc03      	bgt.n	8018810 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8018808:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801880a:	2b00      	cmp	r3, #0
 801880c:	f340 81b2 	ble.w	8018b74 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8018810:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8018812:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8018816:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801881a:	1e48      	subs	r0, r1, #1
 801881c:	f102 3cff 	add.w	ip, r2, #4294967295
 8018820:	9b06      	ldr	r3, [sp, #24]
 8018822:	2b00      	cmp	r3, #0
 8018824:	f340 80a9 	ble.w	801897a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 8018828:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801882c:	ea4f 4326 	mov.w	r3, r6, asr #16
 8018830:	d406      	bmi.n	8018840 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8018832:	4586      	cmp	lr, r0
 8018834:	da04      	bge.n	8018840 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8018836:	2b00      	cmp	r3, #0
 8018838:	db02      	blt.n	8018840 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801883a:	4563      	cmp	r3, ip
 801883c:	f2c0 809e 	blt.w	801897c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8018840:	f11e 0e01 	adds.w	lr, lr, #1
 8018844:	f100 808f 	bmi.w	8018966 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8018848:	4571      	cmp	r1, lr
 801884a:	f2c0 808c 	blt.w	8018966 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801884e:	3301      	adds	r3, #1
 8018850:	f100 8089 	bmi.w	8018966 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8018854:	429a      	cmp	r2, r3
 8018856:	f2c0 8086 	blt.w	8018966 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801885a:	f8dd b018 	ldr.w	fp, [sp, #24]
 801885e:	46c8      	mov	r8, r9
 8018860:	f1bb 0f00 	cmp.w	fp, #0
 8018864:	f340 80a6 	ble.w	80189b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8018868:	9a24      	ldr	r2, [sp, #144]	; 0x90
 801886a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801886c:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8018870:	689b      	ldr	r3, [r3, #8]
 8018872:	1422      	asrs	r2, r4, #16
 8018874:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8018878:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801887c:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8018880:	f100 80e3 	bmi.w	8018a4a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8018884:	f103 3aff 	add.w	sl, r3, #4294967295
 8018888:	4552      	cmp	r2, sl
 801888a:	f280 80de 	bge.w	8018a4a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801888e:	f1bc 0f00 	cmp.w	ip, #0
 8018892:	f2c0 80da 	blt.w	8018a4a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8018896:	f10e 3aff 	add.w	sl, lr, #4294967295
 801889a:	45d4      	cmp	ip, sl
 801889c:	f280 80d5 	bge.w	8018a4a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 80188a0:	b21b      	sxth	r3, r3
 80188a2:	fb0c 2203 	mla	r2, ip, r3, r2
 80188a6:	9d07      	ldr	r5, [sp, #28]
 80188a8:	eb05 0a02 	add.w	sl, r5, r2
 80188ac:	5caa      	ldrb	r2, [r5, r2]
 80188ae:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 80188b2:	2800      	cmp	r0, #0
 80188b4:	f000 80c0 	beq.w	8018a38 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 80188b8:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80188bc:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 80188c0:	920b      	str	r2, [sp, #44]	; 0x2c
 80188c2:	b151      	cbz	r1, 80188da <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 80188c4:	eb0a 0203 	add.w	r2, sl, r3
 80188c8:	f81a 3003 	ldrb.w	r3, [sl, r3]
 80188cc:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80188d0:	9309      	str	r3, [sp, #36]	; 0x24
 80188d2:	7853      	ldrb	r3, [r2, #1]
 80188d4:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80188d8:	930c      	str	r3, [sp, #48]	; 0x30
 80188da:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80188dc:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80188de:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 80188e2:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80188e6:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80188ea:	ea4c 0c03 	orr.w	ip, ip, r3
 80188ee:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80188f0:	041b      	lsls	r3, r3, #16
 80188f2:	fb10 f201 	smulbb	r2, r0, r1
 80188f6:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80188fa:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 80188fe:	10d2      	asrs	r2, r2, #3
 8018900:	432b      	orrs	r3, r5
 8018902:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 8018906:	4353      	muls	r3, r2
 8018908:	fb0a 330c 	mla	r3, sl, ip, r3
 801890c:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8018910:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8018914:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8018918:	ea4c 0e0e 	orr.w	lr, ip, lr
 801891c:	f1c1 0c10 	rsb	ip, r1, #16
 8018920:	ebac 0c00 	sub.w	ip, ip, r0
 8018924:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8018928:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801892c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801892e:	0418      	lsls	r0, r3, #16
 8018930:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8018934:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8018938:	4318      	orrs	r0, r3
 801893a:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801893e:	fb02 c200 	mla	r2, r2, r0, ip
 8018942:	0d53      	lsrs	r3, r2, #21
 8018944:	0952      	lsrs	r2, r2, #5
 8018946:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801894a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801894e:	431a      	orrs	r2, r3
 8018950:	f8a8 2000 	strh.w	r2, [r8]
 8018954:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8018956:	441c      	add	r4, r3
 8018958:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801895a:	f108 0802 	add.w	r8, r8, #2
 801895e:	441e      	add	r6, r3
 8018960:	f10b 3bff 	add.w	fp, fp, #4294967295
 8018964:	e77c      	b.n	8018860 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8018966:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8018968:	441c      	add	r4, r3
 801896a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801896c:	441e      	add	r6, r3
 801896e:	9b06      	ldr	r3, [sp, #24]
 8018970:	3b01      	subs	r3, #1
 8018972:	9306      	str	r3, [sp, #24]
 8018974:	f109 0902 	add.w	r9, r9, #2
 8018978:	e752      	b.n	8018820 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801897a:	d020      	beq.n	80189be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801897c:	9b06      	ldr	r3, [sp, #24]
 801897e:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8018980:	3b01      	subs	r3, #1
 8018982:	fb00 4003 	mla	r0, r0, r3, r4
 8018986:	1400      	asrs	r0, r0, #16
 8018988:	f53f af67 	bmi.w	801885a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801898c:	3901      	subs	r1, #1
 801898e:	4288      	cmp	r0, r1
 8018990:	f6bf af63 	bge.w	801885a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8018994:	9920      	ldr	r1, [sp, #128]	; 0x80
 8018996:	fb01 6303 	mla	r3, r1, r3, r6
 801899a:	141b      	asrs	r3, r3, #16
 801899c:	f53f af5d 	bmi.w	801885a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 80189a0:	3a01      	subs	r2, #1
 80189a2:	4293      	cmp	r3, r2
 80189a4:	f6bf af59 	bge.w	801885a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 80189a8:	f8dd 8018 	ldr.w	r8, [sp, #24]
 80189ac:	46ca      	mov	sl, r9
 80189ae:	f1b8 0f00 	cmp.w	r8, #0
 80189b2:	dc67      	bgt.n	8018a84 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 80189b4:	9b06      	ldr	r3, [sp, #24]
 80189b6:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80189ba:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 80189be:	9b08      	ldr	r3, [sp, #32]
 80189c0:	2b00      	cmp	r3, #0
 80189c2:	f340 80d7 	ble.w	8018b74 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 80189c6:	ee30 0a04 	vadd.f32	s0, s0, s8
 80189ca:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80189ce:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80189d2:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80189d4:	ee31 1a05 	vadd.f32	s2, s2, s10
 80189d8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80189dc:	eeb0 6a62 	vmov.f32	s12, s5
 80189e0:	ee61 7a27 	vmul.f32	s15, s2, s15
 80189e4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80189e8:	ee77 2a62 	vsub.f32	s5, s14, s5
 80189ec:	ee16 4a10 	vmov	r4, s12
 80189f0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80189f4:	eeb0 6a43 	vmov.f32	s12, s6
 80189f8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80189fc:	ee12 2a90 	vmov	r2, s5
 8018a00:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018a04:	fb92 f3f3 	sdiv	r3, r2, r3
 8018a08:	ee13 2a10 	vmov	r2, s6
 8018a0c:	931f      	str	r3, [sp, #124]	; 0x7c
 8018a0e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8018a10:	fb92 f3f3 	sdiv	r3, r2, r3
 8018a14:	9320      	str	r3, [sp, #128]	; 0x80
 8018a16:	9b08      	ldr	r3, [sp, #32]
 8018a18:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8018a1a:	3b01      	subs	r3, #1
 8018a1c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018a20:	9308      	str	r3, [sp, #32]
 8018a22:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8018a24:	bf08      	it	eq
 8018a26:	4613      	moveq	r3, r2
 8018a28:	ee16 6a10 	vmov	r6, s12
 8018a2c:	9306      	str	r3, [sp, #24]
 8018a2e:	eeb0 3a67 	vmov.f32	s6, s15
 8018a32:	eef0 2a47 	vmov.f32	s5, s14
 8018a36:	e6e4      	b.n	8018802 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8018a38:	2900      	cmp	r1, #0
 8018a3a:	f43f af4e 	beq.w	80188da <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8018a3e:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8018a42:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8018a46:	9309      	str	r3, [sp, #36]	; 0x24
 8018a48:	e747      	b.n	80188da <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8018a4a:	f112 0a01 	adds.w	sl, r2, #1
 8018a4e:	d481      	bmi.n	8018954 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8018a50:	4553      	cmp	r3, sl
 8018a52:	f6ff af7f 	blt.w	8018954 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8018a56:	f11c 0a01 	adds.w	sl, ip, #1
 8018a5a:	f53f af7b 	bmi.w	8018954 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8018a5e:	45d6      	cmp	lr, sl
 8018a60:	f6ff af78 	blt.w	8018954 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8018a64:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 8018a68:	b21b      	sxth	r3, r3
 8018a6a:	fa0f f28e 	sxth.w	r2, lr
 8018a6e:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8018a72:	9201      	str	r2, [sp, #4]
 8018a74:	9300      	str	r3, [sp, #0]
 8018a76:	9a07      	ldr	r2, [sp, #28]
 8018a78:	9810      	ldr	r0, [sp, #64]	; 0x40
 8018a7a:	463b      	mov	r3, r7
 8018a7c:	4641      	mov	r1, r8
 8018a7e:	f7ff fe21 	bl	80186c4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8018a82:	e767      	b.n	8018954 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8018a84:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8018a86:	9d07      	ldr	r5, [sp, #28]
 8018a88:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8018a8c:	1422      	asrs	r2, r4, #16
 8018a8e:	1431      	asrs	r1, r6, #16
 8018a90:	fb03 2101 	mla	r1, r3, r1, r2
 8018a94:	9a07      	ldr	r2, [sp, #28]
 8018a96:	440a      	add	r2, r1
 8018a98:	5c69      	ldrb	r1, [r5, r1]
 8018a9a:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 8018a9e:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8018aa2:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 8018aa6:	f1be 0f00 	cmp.w	lr, #0
 8018aaa:	d05c      	beq.n	8018b66 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 8018aac:	f892 c001 	ldrb.w	ip, [r2, #1]
 8018ab0:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 8018ab4:	950d      	str	r5, [sp, #52]	; 0x34
 8018ab6:	b150      	cbz	r0, 8018ace <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8018ab8:	eb02 0c03 	add.w	ip, r2, r3
 8018abc:	5cd3      	ldrb	r3, [r2, r3]
 8018abe:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8018ac2:	930a      	str	r3, [sp, #40]	; 0x28
 8018ac4:	f89c 3001 	ldrb.w	r3, [ip, #1]
 8018ac8:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8018acc:	930e      	str	r3, [sp, #56]	; 0x38
 8018ace:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018ad0:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8018ad2:	fb1e f200 	smulbb	r2, lr, r0
 8018ad6:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8018ada:	10d2      	asrs	r2, r2, #3
 8018adc:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8018ae0:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8018ae4:	ea4c 0c03 	orr.w	ip, ip, r3
 8018ae8:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 8018aec:	9311      	str	r3, [sp, #68]	; 0x44
 8018aee:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018af0:	041b      	lsls	r3, r3, #16
 8018af2:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 8018af6:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8018afa:	ea43 030b 	orr.w	r3, r3, fp
 8018afe:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8018b00:	4353      	muls	r3, r2
 8018b02:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8018b06:	fb05 3c0c 	mla	ip, r5, ip, r3
 8018b0a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8018b0e:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8018b12:	ea43 0b01 	orr.w	fp, r3, r1
 8018b16:	f1c0 0110 	rsb	r1, r0, #16
 8018b1a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018b1c:	eba1 0e0e 	sub.w	lr, r1, lr
 8018b20:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 8018b24:	fb0e cc0b 	mla	ip, lr, fp, ip
 8018b28:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8018b2c:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 8018b30:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8018b34:	ea4b 0e0e 	orr.w	lr, fp, lr
 8018b38:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8018b3c:	fb02 cc0e 	mla	ip, r2, lr, ip
 8018b40:	ea4f 535c 	mov.w	r3, ip, lsr #21
 8018b44:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8018b48:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018b4c:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8018b50:	ea43 0c0c 	orr.w	ip, r3, ip
 8018b54:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8018b56:	f82a cb02 	strh.w	ip, [sl], #2
 8018b5a:	441c      	add	r4, r3
 8018b5c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8018b5e:	f108 38ff 	add.w	r8, r8, #4294967295
 8018b62:	441e      	add	r6, r3
 8018b64:	e723      	b.n	80189ae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8018b66:	2800      	cmp	r0, #0
 8018b68:	d0b1      	beq.n	8018ace <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8018b6a:	5cd3      	ldrb	r3, [r2, r3]
 8018b6c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8018b70:	930a      	str	r3, [sp, #40]	; 0x28
 8018b72:	e7ac      	b.n	8018ace <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8018b74:	b013      	add	sp, #76	; 0x4c
 8018b76:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018b7a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 8018b7a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018b7e:	880d      	ldrh	r5, [r1, #0]
 8018b80:	b087      	sub	sp, #28
 8018b82:	10ef      	asrs	r7, r5, #3
 8018b84:	ea4f 2a25 	mov.w	sl, r5, asr #8
 8018b88:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8018b8c:	00ed      	lsls	r5, r5, #3
 8018b8e:	9701      	str	r7, [sp, #4]
 8018b90:	b2ed      	uxtb	r5, r5
 8018b92:	9502      	str	r5, [sp, #8]
 8018b94:	9d01      	ldr	r5, [sp, #4]
 8018b96:	9103      	str	r1, [sp, #12]
 8018b98:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
 8018b9c:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	; 0x40
 8018ba0:	9902      	ldr	r1, [sp, #8]
 8018ba2:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 8018ba6:	f89d 4050 	ldrb.w	r4, [sp, #80]	; 0x50
 8018baa:	f89d e054 	ldrb.w	lr, [sp, #84]	; 0x54
 8018bae:	f89d 8058 	ldrb.w	r8, [sp, #88]	; 0x58
 8018bb2:	f00a 0af8 	and.w	sl, sl, #248	; 0xf8
 8018bb6:	022d      	lsls	r5, r5, #8
 8018bb8:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 8018bbc:	fb06 0709 	mla	r7, r6, r9, r0
 8018bc0:	430d      	orrs	r5, r1
 8018bc2:	2e00      	cmp	r6, #0
 8018bc4:	eb02 0c07 	add.w	ip, r2, r7
 8018bc8:	9505      	str	r5, [sp, #20]
 8018bca:	f2c0 80b6 	blt.w	8018d3a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 8018bce:	45b3      	cmp	fp, r6
 8018bd0:	f340 80b3 	ble.w	8018d3a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 8018bd4:	2800      	cmp	r0, #0
 8018bd6:	f2c0 80ae 	blt.w	8018d36 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 8018bda:	4581      	cmp	r9, r0
 8018bdc:	f340 80ab 	ble.w	8018d36 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 8018be0:	5dd7      	ldrb	r7, [r2, r7]
 8018be2:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8018be6:	441f      	add	r7, r3
 8018be8:	1c42      	adds	r2, r0, #1
 8018bea:	f100 80a9 	bmi.w	8018d40 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8018bee:	4591      	cmp	r9, r2
 8018bf0:	f340 80a6 	ble.w	8018d40 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8018bf4:	2c00      	cmp	r4, #0
 8018bf6:	f000 80a3 	beq.w	8018d40 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8018bfa:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8018bfe:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8018c02:	441d      	add	r5, r3
 8018c04:	3601      	adds	r6, #1
 8018c06:	f100 809f 	bmi.w	8018d48 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8018c0a:	45b3      	cmp	fp, r6
 8018c0c:	f340 809c 	ble.w	8018d48 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8018c10:	f1be 0f00 	cmp.w	lr, #0
 8018c14:	f000 8098 	beq.w	8018d48 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8018c18:	2800      	cmp	r0, #0
 8018c1a:	f2c0 8093 	blt.w	8018d44 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 8018c1e:	4581      	cmp	r9, r0
 8018c20:	f340 8090 	ble.w	8018d44 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 8018c24:	f81c 6009 	ldrb.w	r6, [ip, r9]
 8018c28:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8018c2c:	441e      	add	r6, r3
 8018c2e:	3001      	adds	r0, #1
 8018c30:	f100 808d 	bmi.w	8018d4e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8018c34:	4581      	cmp	r9, r0
 8018c36:	f340 808a 	ble.w	8018d4e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8018c3a:	2c00      	cmp	r4, #0
 8018c3c:	f000 8087 	beq.w	8018d4e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8018c40:	44e1      	add	r9, ip
 8018c42:	f899 2001 	ldrb.w	r2, [r9, #1]
 8018c46:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8018c4a:	4413      	add	r3, r2
 8018c4c:	b2a4      	uxth	r4, r4
 8018c4e:	fa1f fe8e 	uxth.w	lr, lr
 8018c52:	fb04 fb0e 	mul.w	fp, r4, lr
 8018c56:	0124      	lsls	r4, r4, #4
 8018c58:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 8018c5c:	f5c4 7980 	rsb	r9, r4, #256	; 0x100
 8018c60:	eba4 040b 	sub.w	r4, r4, fp
 8018c64:	fa1f f08e 	uxth.w	r0, lr
 8018c68:	b2a2      	uxth	r2, r4
 8018c6a:	78ac      	ldrb	r4, [r5, #2]
 8018c6c:	f897 c002 	ldrb.w	ip, [r7, #2]
 8018c70:	9901      	ldr	r1, [sp, #4]
 8018c72:	eba9 0900 	sub.w	r9, r9, r0
 8018c76:	fa1f f989 	uxth.w	r9, r9
 8018c7a:	4354      	muls	r4, r2
 8018c7c:	fb09 440c 	mla	r4, r9, ip, r4
 8018c80:	f896 c002 	ldrb.w	ip, [r6, #2]
 8018c84:	fb00 440c 	mla	r4, r0, ip, r4
 8018c88:	f893 c002 	ldrb.w	ip, [r3, #2]
 8018c8c:	fa1f fe88 	uxth.w	lr, r8
 8018c90:	ea6f 0808 	mvn.w	r8, r8
 8018c94:	fa5f f888 	uxtb.w	r8, r8
 8018c98:	fb0b 4c0c 	mla	ip, fp, ip, r4
 8018c9c:	fb1a fa08 	smulbb	sl, sl, r8
 8018ca0:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8018ca4:	fb0c ac0e 	mla	ip, ip, lr, sl
 8018ca8:	f895 a001 	ldrb.w	sl, [r5, #1]
 8018cac:	787c      	ldrb	r4, [r7, #1]
 8018cae:	782d      	ldrb	r5, [r5, #0]
 8018cb0:	783f      	ldrb	r7, [r7, #0]
 8018cb2:	fb02 fa0a 	mul.w	sl, r2, sl
 8018cb6:	fb09 aa04 	mla	sl, r9, r4, sl
 8018cba:	7874      	ldrb	r4, [r6, #1]
 8018cbc:	436a      	muls	r2, r5
 8018cbe:	7835      	ldrb	r5, [r6, #0]
 8018cc0:	fb00 aa04 	mla	sl, r0, r4, sl
 8018cc4:	fb09 2207 	mla	r2, r9, r7, r2
 8018cc8:	785c      	ldrb	r4, [r3, #1]
 8018cca:	781b      	ldrb	r3, [r3, #0]
 8018ccc:	fb00 2005 	mla	r0, r0, r5, r2
 8018cd0:	fb0b a404 	mla	r4, fp, r4, sl
 8018cd4:	fb0b 0b03 	mla	fp, fp, r3, r0
 8018cd8:	9b02      	ldr	r3, [sp, #8]
 8018cda:	fb11 fa08 	smulbb	sl, r1, r8
 8018cde:	fa1f fc8c 	uxth.w	ip, ip
 8018ce2:	fb13 f808 	smulbb	r8, r3, r8
 8018ce6:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 8018cea:	f3c4 2407 	ubfx	r4, r4, #8, #8
 8018cee:	fb04 a40e 	mla	r4, r4, lr, sl
 8018cf2:	f10c 0301 	add.w	r3, ip, #1
 8018cf6:	fb0b 8e0e 	mla	lr, fp, lr, r8
 8018cfa:	fa1f fe8e 	uxth.w	lr, lr
 8018cfe:	b2a4      	uxth	r4, r4
 8018d00:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8018d04:	f40c 4378 	and.w	r3, ip, #63488	; 0xf800
 8018d08:	f104 0a01 	add.w	sl, r4, #1
 8018d0c:	f10e 0c01 	add.w	ip, lr, #1
 8018d10:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8018d14:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 8018d18:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8018d1c:	0964      	lsrs	r4, r4, #5
 8018d1e:	ea4c 0c03 	orr.w	ip, ip, r3
 8018d22:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8018d26:	9b03      	ldr	r3, [sp, #12]
 8018d28:	ea4c 0c04 	orr.w	ip, ip, r4
 8018d2c:	f8a3 c000 	strh.w	ip, [r3]
 8018d30:	b007      	add	sp, #28
 8018d32:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018d36:	af05      	add	r7, sp, #20
 8018d38:	e756      	b.n	8018be8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 8018d3a:	ad05      	add	r5, sp, #20
 8018d3c:	462f      	mov	r7, r5
 8018d3e:	e761      	b.n	8018c04 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 8018d40:	ad05      	add	r5, sp, #20
 8018d42:	e75f      	b.n	8018c04 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 8018d44:	ae05      	add	r6, sp, #20
 8018d46:	e772      	b.n	8018c2e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 8018d48:	ab05      	add	r3, sp, #20
 8018d4a:	461e      	mov	r6, r3
 8018d4c:	e77e      	b.n	8018c4c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 8018d4e:	ab05      	add	r3, sp, #20
 8018d50:	e77c      	b.n	8018c4c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

08018d52 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018d52:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018d56:	b095      	sub	sp, #84	; 0x54
 8018d58:	9212      	str	r2, [sp, #72]	; 0x48
 8018d5a:	9309      	str	r3, [sp, #36]	; 0x24
 8018d5c:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8018d5e:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 8018d62:	930f      	str	r3, [sp, #60]	; 0x3c
 8018d64:	910e      	str	r1, [sp, #56]	; 0x38
 8018d66:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	; 0x90
 8018d6a:	9013      	str	r0, [sp, #76]	; 0x4c
 8018d6c:	6850      	ldr	r0, [r2, #4]
 8018d6e:	6812      	ldr	r2, [r2, #0]
 8018d70:	fb00 1303 	mla	r3, r0, r3, r1
 8018d74:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8018d78:	930a      	str	r3, [sp, #40]	; 0x28
 8018d7a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8018d7c:	681b      	ldr	r3, [r3, #0]
 8018d7e:	930d      	str	r3, [sp, #52]	; 0x34
 8018d80:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8018d82:	685c      	ldr	r4, [r3, #4]
 8018d84:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8018d86:	43db      	mvns	r3, r3
 8018d88:	b2db      	uxtb	r3, r3
 8018d8a:	3404      	adds	r4, #4
 8018d8c:	930b      	str	r3, [sp, #44]	; 0x2c
 8018d8e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018d90:	2b00      	cmp	r3, #0
 8018d92:	dc03      	bgt.n	8018d9c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8018d94:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8018d96:	2b00      	cmp	r3, #0
 8018d98:	f340 8255 	ble.w	8019246 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 8018d9c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8018d9e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8018da2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8018da6:	1e48      	subs	r0, r1, #1
 8018da8:	1e55      	subs	r5, r2, #1
 8018daa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018dac:	2b00      	cmp	r3, #0
 8018dae:	f340 80f9 	ble.w	8018fa4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8018db2:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 8018db4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8018db6:	1436      	asrs	r6, r6, #16
 8018db8:	ea4f 4323 	mov.w	r3, r3, asr #16
 8018dbc:	d406      	bmi.n	8018dcc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8018dbe:	4286      	cmp	r6, r0
 8018dc0:	da04      	bge.n	8018dcc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8018dc2:	2b00      	cmp	r3, #0
 8018dc4:	db02      	blt.n	8018dcc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8018dc6:	42ab      	cmp	r3, r5
 8018dc8:	f2c0 80ed 	blt.w	8018fa6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 8018dcc:	3601      	adds	r6, #1
 8018dce:	f100 80da 	bmi.w	8018f86 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8018dd2:	42b1      	cmp	r1, r6
 8018dd4:	f2c0 80d7 	blt.w	8018f86 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8018dd8:	3301      	adds	r3, #1
 8018dda:	f100 80d4 	bmi.w	8018f86 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8018dde:	429a      	cmp	r2, r3
 8018de0:	f2c0 80d1 	blt.w	8018f86 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8018de4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018de6:	9311      	str	r3, [sp, #68]	; 0x44
 8018de8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018dea:	930c      	str	r3, [sp, #48]	; 0x30
 8018dec:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8018dee:	2b00      	cmp	r3, #0
 8018df0:	f340 80fa 	ble.w	8018fe8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 8018df4:	9826      	ldr	r0, [sp, #152]	; 0x98
 8018df6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8018df8:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8018dfa:	68c6      	ldr	r6, [r0, #12]
 8018dfc:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8018dfe:	141d      	asrs	r5, r3, #16
 8018e00:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8018e04:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8018e06:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8018e08:	1400      	asrs	r0, r0, #16
 8018e0a:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8018e0e:	6892      	ldr	r2, [r2, #8]
 8018e10:	f100 813e 	bmi.w	8019090 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8018e14:	1e57      	subs	r7, r2, #1
 8018e16:	42b8      	cmp	r0, r7
 8018e18:	f280 813a 	bge.w	8019090 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8018e1c:	2d00      	cmp	r5, #0
 8018e1e:	f2c0 8137 	blt.w	8019090 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8018e22:	1e77      	subs	r7, r6, #1
 8018e24:	42bd      	cmp	r5, r7
 8018e26:	f280 8133 	bge.w	8019090 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8018e2a:	b212      	sxth	r2, r2
 8018e2c:	fb05 0002 	mla	r0, r5, r2, r0
 8018e30:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8018e32:	f815 a000 	ldrb.w	sl, [r5, r0]
 8018e36:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 8018e3a:	182e      	adds	r6, r5, r0
 8018e3c:	eb04 050a 	add.w	r5, r4, sl
 8018e40:	2b00      	cmp	r3, #0
 8018e42:	f000 8117 	beq.w	8019074 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 8018e46:	f896 c001 	ldrb.w	ip, [r6, #1]
 8018e4a:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8018e4e:	44a4      	add	ip, r4
 8018e50:	2900      	cmp	r1, #0
 8018e52:	f000 8117 	beq.w	8019084 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 8018e56:	18b0      	adds	r0, r6, r2
 8018e58:	5cb2      	ldrb	r2, [r6, r2]
 8018e5a:	7840      	ldrb	r0, [r0, #1]
 8018e5c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8018e60:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8018e64:	4422      	add	r2, r4
 8018e66:	4420      	add	r0, r4
 8018e68:	b29b      	uxth	r3, r3
 8018e6a:	b289      	uxth	r1, r1
 8018e6c:	fb03 f901 	mul.w	r9, r3, r1
 8018e70:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8018e74:	011b      	lsls	r3, r3, #4
 8018e76:	b289      	uxth	r1, r1
 8018e78:	f89c 7002 	ldrb.w	r7, [ip, #2]
 8018e7c:	f895 b002 	ldrb.w	fp, [r5, #2]
 8018e80:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8018e82:	f814 a00a 	ldrb.w	sl, [r4, sl]
 8018e86:	f8b6 e000 	ldrh.w	lr, [r6]
 8018e8a:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 8018e8e:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 8018e92:	eba3 0309 	sub.w	r3, r3, r9
 8018e96:	b29b      	uxth	r3, r3
 8018e98:	eba8 0801 	sub.w	r8, r8, r1
 8018e9c:	fa1f f888 	uxth.w	r8, r8
 8018ea0:	435f      	muls	r7, r3
 8018ea2:	fb08 770b 	mla	r7, r8, fp, r7
 8018ea6:	f892 b002 	ldrb.w	fp, [r2, #2]
 8018eaa:	9310      	str	r3, [sp, #64]	; 0x40
 8018eac:	fb01 770b 	mla	r7, r1, fp, r7
 8018eb0:	f890 b002 	ldrb.w	fp, [r0, #2]
 8018eb4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8018eb6:	fb09 770b 	mla	r7, r9, fp, r7
 8018eba:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 8018ebe:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 8018ec2:	fb1b fb03 	smulbb	fp, fp, r3
 8018ec6:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8018eca:	fb07 b706 	mla	r7, r7, r6, fp
 8018ece:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018ed0:	f895 b001 	ldrb.w	fp, [r5, #1]
 8018ed4:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8018ed8:	f89c c000 	ldrb.w	ip, [ip]
 8018edc:	435d      	muls	r5, r3
 8018ede:	fb08 550b 	mla	r5, r8, fp, r5
 8018ee2:	f892 b001 	ldrb.w	fp, [r2, #1]
 8018ee6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8018ee8:	fb01 550b 	mla	r5, r1, fp, r5
 8018eec:	f890 b001 	ldrb.w	fp, [r0, #1]
 8018ef0:	fb09 550b 	mla	r5, r9, fp, r5
 8018ef4:	ea4f 0bee 	mov.w	fp, lr, asr #3
 8018ef8:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8018efc:	fb1b fb03 	smulbb	fp, fp, r3
 8018f00:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018f02:	fb03 f30c 	mul.w	r3, r3, ip
 8018f06:	f892 c000 	ldrb.w	ip, [r2]
 8018f0a:	fb08 330a 	mla	r3, r8, sl, r3
 8018f0e:	fb01 330c 	mla	r3, r1, ip, r3
 8018f12:	f890 c000 	ldrb.w	ip, [r0]
 8018f16:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8018f1a:	fb09 3c0c 	mla	ip, r9, ip, r3
 8018f1e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8018f20:	fa5f fe8e 	uxtb.w	lr, lr
 8018f24:	b2bf      	uxth	r7, r7
 8018f26:	fb1e fe03 	smulbb	lr, lr, r3
 8018f2a:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8018f2e:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8018f32:	fb05 b506 	mla	r5, r5, r6, fp
 8018f36:	1c7b      	adds	r3, r7, #1
 8018f38:	fb0c e606 	mla	r6, ip, r6, lr
 8018f3c:	b2ad      	uxth	r5, r5
 8018f3e:	b2b6      	uxth	r6, r6
 8018f40:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8018f44:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 8018f48:	f105 0b01 	add.w	fp, r5, #1
 8018f4c:	1c77      	adds	r7, r6, #1
 8018f4e:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 8018f52:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8018f56:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8018f5a:	096d      	lsrs	r5, r5, #5
 8018f5c:	431f      	orrs	r7, r3
 8018f5e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8018f62:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8018f64:	433d      	orrs	r5, r7
 8018f66:	801d      	strh	r5, [r3, #0]
 8018f68:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8018f6a:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8018f6c:	3302      	adds	r3, #2
 8018f6e:	930c      	str	r3, [sp, #48]	; 0x30
 8018f70:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8018f72:	4413      	add	r3, r2
 8018f74:	931f      	str	r3, [sp, #124]	; 0x7c
 8018f76:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8018f78:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8018f7a:	4413      	add	r3, r2
 8018f7c:	9320      	str	r3, [sp, #128]	; 0x80
 8018f7e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8018f80:	3b01      	subs	r3, #1
 8018f82:	9311      	str	r3, [sp, #68]	; 0x44
 8018f84:	e732      	b.n	8018dec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8018f86:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8018f88:	9e21      	ldr	r6, [sp, #132]	; 0x84
 8018f8a:	4433      	add	r3, r6
 8018f8c:	931f      	str	r3, [sp, #124]	; 0x7c
 8018f8e:	9e22      	ldr	r6, [sp, #136]	; 0x88
 8018f90:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8018f92:	4433      	add	r3, r6
 8018f94:	9320      	str	r3, [sp, #128]	; 0x80
 8018f96:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018f98:	3b01      	subs	r3, #1
 8018f9a:	9309      	str	r3, [sp, #36]	; 0x24
 8018f9c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018f9e:	3302      	adds	r3, #2
 8018fa0:	930a      	str	r3, [sp, #40]	; 0x28
 8018fa2:	e702      	b.n	8018daa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8018fa4:	d027      	beq.n	8018ff6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 8018fa6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018fa8:	9821      	ldr	r0, [sp, #132]	; 0x84
 8018faa:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 8018fac:	3b01      	subs	r3, #1
 8018fae:	fb00 5003 	mla	r0, r0, r3, r5
 8018fb2:	1400      	asrs	r0, r0, #16
 8018fb4:	f53f af16 	bmi.w	8018de4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8018fb8:	3901      	subs	r1, #1
 8018fba:	4288      	cmp	r0, r1
 8018fbc:	f6bf af12 	bge.w	8018de4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8018fc0:	9922      	ldr	r1, [sp, #136]	; 0x88
 8018fc2:	9820      	ldr	r0, [sp, #128]	; 0x80
 8018fc4:	fb01 0303 	mla	r3, r1, r3, r0
 8018fc8:	141b      	asrs	r3, r3, #16
 8018fca:	f53f af0b 	bmi.w	8018de4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8018fce:	3a01      	subs	r2, #1
 8018fd0:	4293      	cmp	r3, r2
 8018fd2:	f6bf af07 	bge.w	8018de4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8018fd6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018fd8:	9311      	str	r3, [sp, #68]	; 0x44
 8018fda:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 8018fde:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018fe0:	930c      	str	r3, [sp, #48]	; 0x30
 8018fe2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8018fe4:	2b00      	cmp	r3, #0
 8018fe6:	dc70      	bgt.n	80190ca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 8018fe8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018fea:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8018fec:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018ff0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8018ff4:	930a      	str	r3, [sp, #40]	; 0x28
 8018ff6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018ff8:	2b00      	cmp	r3, #0
 8018ffa:	f340 8124 	ble.w	8019246 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 8018ffe:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019002:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8019006:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801900a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801900c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019010:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019014:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019018:	eef0 6a62 	vmov.f32	s13, s5
 801901c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019020:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019024:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019028:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 801902c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019030:	eef0 6a43 	vmov.f32	s13, s6
 8019034:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019038:	ee12 2a90 	vmov	r2, s5
 801903c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019040:	fb92 f3f3 	sdiv	r3, r2, r3
 8019044:	ee13 2a10 	vmov	r2, s6
 8019048:	9321      	str	r3, [sp, #132]	; 0x84
 801904a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801904c:	fb92 f3f3 	sdiv	r3, r2, r3
 8019050:	9322      	str	r3, [sp, #136]	; 0x88
 8019052:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019054:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8019056:	3b01      	subs	r3, #1
 8019058:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801905c:	930e      	str	r3, [sp, #56]	; 0x38
 801905e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8019060:	edcd 6a20 	vstr	s13, [sp, #128]	; 0x80
 8019064:	bf08      	it	eq
 8019066:	4613      	moveq	r3, r2
 8019068:	9309      	str	r3, [sp, #36]	; 0x24
 801906a:	eeb0 3a67 	vmov.f32	s6, s15
 801906e:	eef0 2a47 	vmov.f32	s5, s14
 8019072:	e68c      	b.n	8018d8e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8019074:	b149      	cbz	r1, 801908a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 8019076:	5cb2      	ldrb	r2, [r6, r2]
 8019078:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801907c:	4422      	add	r2, r4
 801907e:	4628      	mov	r0, r5
 8019080:	46ac      	mov	ip, r5
 8019082:	e6f1      	b.n	8018e68 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8019084:	4628      	mov	r0, r5
 8019086:	462a      	mov	r2, r5
 8019088:	e6ee      	b.n	8018e68 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801908a:	4628      	mov	r0, r5
 801908c:	462a      	mov	r2, r5
 801908e:	e7f7      	b.n	8019080 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 8019090:	1c47      	adds	r7, r0, #1
 8019092:	f53f af69 	bmi.w	8018f68 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8019096:	42ba      	cmp	r2, r7
 8019098:	f6ff af66 	blt.w	8018f68 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801909c:	1c6f      	adds	r7, r5, #1
 801909e:	f53f af63 	bmi.w	8018f68 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 80190a2:	42be      	cmp	r6, r7
 80190a4:	f6ff af60 	blt.w	8018f68 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 80190a8:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 80190aa:	9002      	str	r0, [sp, #8]
 80190ac:	b236      	sxth	r6, r6
 80190ae:	b212      	sxth	r2, r2
 80190b0:	e9cd 1705 	strd	r1, r7, [sp, #20]
 80190b4:	e9cd 5303 	strd	r5, r3, [sp, #12]
 80190b8:	9200      	str	r2, [sp, #0]
 80190ba:	9601      	str	r6, [sp, #4]
 80190bc:	4623      	mov	r3, r4
 80190be:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 80190c2:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80190c4:	f7ff fd59 	bl	8018b7a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 80190c8:	e74e      	b.n	8018f68 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 80190ca:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80190cc:	9820      	ldr	r0, [sp, #128]	; 0x80
 80190ce:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 80190d0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80190d2:	f3c2 3103 	ubfx	r1, r2, #12, #4
 80190d6:	9a26      	ldr	r2, [sp, #152]	; 0x98
 80190d8:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 80190dc:	142d      	asrs	r5, r5, #16
 80190de:	1400      	asrs	r0, r0, #16
 80190e0:	fb02 5000 	mla	r0, r2, r0, r5
 80190e4:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80190e6:	f815 9000 	ldrb.w	r9, [r5, r0]
 80190ea:	f3c3 3303 	ubfx	r3, r3, #12, #4
 80190ee:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 80190f2:	182e      	adds	r6, r5, r0
 80190f4:	eb04 0509 	add.w	r5, r4, r9
 80190f8:	2b00      	cmp	r3, #0
 80190fa:	f000 8096 	beq.w	801922a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 80190fe:	7877      	ldrb	r7, [r6, #1]
 8019100:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8019104:	4427      	add	r7, r4
 8019106:	2900      	cmp	r1, #0
 8019108:	f000 8097 	beq.w	801923a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 801910c:	18b0      	adds	r0, r6, r2
 801910e:	5cb2      	ldrb	r2, [r6, r2]
 8019110:	7840      	ldrb	r0, [r0, #1]
 8019112:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8019116:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801911a:	4422      	add	r2, r4
 801911c:	4420      	add	r0, r4
 801911e:	b29b      	uxth	r3, r3
 8019120:	b289      	uxth	r1, r1
 8019122:	fb03 f801 	mul.w	r8, r3, r1
 8019126:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8019128:	f895 b002 	ldrb.w	fp, [r5, #2]
 801912c:	f8b6 c000 	ldrh.w	ip, [r6]
 8019130:	78be      	ldrb	r6, [r7, #2]
 8019132:	f814 9009 	ldrb.w	r9, [r4, r9]
 8019136:	011b      	lsls	r3, r3, #4
 8019138:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 801913c:	b289      	uxth	r1, r1
 801913e:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8019142:	eba3 0308 	sub.w	r3, r3, r8
 8019146:	b29b      	uxth	r3, r3
 8019148:	ebae 0e01 	sub.w	lr, lr, r1
 801914c:	fa1f fe8e 	uxth.w	lr, lr
 8019150:	435e      	muls	r6, r3
 8019152:	fb0e 660b 	mla	r6, lr, fp, r6
 8019156:	f892 b002 	ldrb.w	fp, [r2, #2]
 801915a:	9310      	str	r3, [sp, #64]	; 0x40
 801915c:	fb01 660b 	mla	r6, r1, fp, r6
 8019160:	f890 b002 	ldrb.w	fp, [r0, #2]
 8019164:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8019166:	fb08 660b 	mla	r6, r8, fp, r6
 801916a:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 801916e:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 8019172:	fb1b fb03 	smulbb	fp, fp, r3
 8019176:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801917a:	fb06 b60a 	mla	r6, r6, sl, fp
 801917e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019180:	f895 b001 	ldrb.w	fp, [r5, #1]
 8019184:	787d      	ldrb	r5, [r7, #1]
 8019186:	783f      	ldrb	r7, [r7, #0]
 8019188:	435d      	muls	r5, r3
 801918a:	fb0e 550b 	mla	r5, lr, fp, r5
 801918e:	f892 b001 	ldrb.w	fp, [r2, #1]
 8019192:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8019194:	fb01 550b 	mla	r5, r1, fp, r5
 8019198:	f890 b001 	ldrb.w	fp, [r0, #1]
 801919c:	fb08 550b 	mla	r5, r8, fp, r5
 80191a0:	ea4f 0bec 	mov.w	fp, ip, asr #3
 80191a4:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 80191a8:	fb1b fb03 	smulbb	fp, fp, r3
 80191ac:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80191ae:	437b      	muls	r3, r7
 80191b0:	7817      	ldrb	r7, [r2, #0]
 80191b2:	fb0e 3309 	mla	r3, lr, r9, r3
 80191b6:	fb01 3307 	mla	r3, r1, r7, r3
 80191ba:	7807      	ldrb	r7, [r0, #0]
 80191bc:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80191c0:	fb08 3707 	mla	r7, r8, r7, r3
 80191c4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80191c6:	fa5f fc8c 	uxtb.w	ip, ip
 80191ca:	fb1c fc03 	smulbb	ip, ip, r3
 80191ce:	f3c5 2507 	ubfx	r5, r5, #8, #8
 80191d2:	f3c7 2707 	ubfx	r7, r7, #8, #8
 80191d6:	fb05 b50a 	mla	r5, r5, sl, fp
 80191da:	fb07 c70a 	mla	r7, r7, sl, ip
 80191de:	b2b6      	uxth	r6, r6
 80191e0:	b2ad      	uxth	r5, r5
 80191e2:	b2bf      	uxth	r7, r7
 80191e4:	1c73      	adds	r3, r6, #1
 80191e6:	1c7a      	adds	r2, r7, #1
 80191e8:	f105 0b01 	add.w	fp, r5, #1
 80191ec:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 80191f0:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 80191f4:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 80191f8:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80191fc:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8019200:	096d      	lsrs	r5, r5, #5
 8019202:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8019204:	4316      	orrs	r6, r2
 8019206:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801920a:	432e      	orrs	r6, r5
 801920c:	f823 6b02 	strh.w	r6, [r3], #2
 8019210:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8019212:	930c      	str	r3, [sp, #48]	; 0x30
 8019214:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8019216:	4413      	add	r3, r2
 8019218:	931f      	str	r3, [sp, #124]	; 0x7c
 801921a:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801921c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801921e:	4413      	add	r3, r2
 8019220:	9320      	str	r3, [sp, #128]	; 0x80
 8019222:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8019224:	3b01      	subs	r3, #1
 8019226:	9311      	str	r3, [sp, #68]	; 0x44
 8019228:	e6db      	b.n	8018fe2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 801922a:	b149      	cbz	r1, 8019240 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801922c:	5cb2      	ldrb	r2, [r6, r2]
 801922e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8019232:	4422      	add	r2, r4
 8019234:	4628      	mov	r0, r5
 8019236:	462f      	mov	r7, r5
 8019238:	e771      	b.n	801911e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801923a:	4628      	mov	r0, r5
 801923c:	462a      	mov	r2, r5
 801923e:	e76e      	b.n	801911e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 8019240:	4628      	mov	r0, r5
 8019242:	462a      	mov	r2, r5
 8019244:	e7f7      	b.n	8019236 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8019246:	b015      	add	sp, #84	; 0x54
 8019248:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801924c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 801924c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019250:	880f      	ldrh	r7, [r1, #0]
 8019252:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 8019256:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 801925a:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 801925e:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8019262:	023c      	lsls	r4, r7, #8
 8019264:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	; 0x38
 8019268:	f404 0b78 	and.w	fp, r4, #16252928	; 0xf80000
 801926c:	017c      	lsls	r4, r7, #5
 801926e:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
 8019272:	00ff      	lsls	r7, r7, #3
 8019274:	ea4b 0404 	orr.w	r4, fp, r4
 8019278:	b2ff      	uxtb	r7, r7
 801927a:	fb05 ca0e 	mla	sl, r5, lr, ip
 801927e:	4327      	orrs	r7, r4
 8019280:	2d00      	cmp	r5, #0
 8019282:	eb02 080a 	add.w	r8, r2, sl
 8019286:	9701      	str	r7, [sp, #4]
 8019288:	db7e      	blt.n	8019388 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801928a:	45a9      	cmp	r9, r5
 801928c:	dd7c      	ble.n	8019388 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801928e:	f1bc 0f00 	cmp.w	ip, #0
 8019292:	db77      	blt.n	8019384 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 8019294:	45e6      	cmp	lr, ip
 8019296:	dd75      	ble.n	8019384 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 8019298:	f812 700a 	ldrb.w	r7, [r2, sl]
 801929c:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 80192a0:	441f      	add	r7, r3
 80192a2:	f11c 0201 	adds.w	r2, ip, #1
 80192a6:	d472      	bmi.n	801938e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 80192a8:	4596      	cmp	lr, r2
 80192aa:	dd70      	ble.n	801938e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 80192ac:	2800      	cmp	r0, #0
 80192ae:	d06e      	beq.n	801938e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 80192b0:	f898 4001 	ldrb.w	r4, [r8, #1]
 80192b4:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 80192b8:	441c      	add	r4, r3
 80192ba:	3501      	adds	r5, #1
 80192bc:	d46b      	bmi.n	8019396 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 80192be:	45a9      	cmp	r9, r5
 80192c0:	dd69      	ble.n	8019396 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 80192c2:	2e00      	cmp	r6, #0
 80192c4:	d067      	beq.n	8019396 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 80192c6:	f1bc 0f00 	cmp.w	ip, #0
 80192ca:	db62      	blt.n	8019392 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 80192cc:	45e6      	cmp	lr, ip
 80192ce:	dd60      	ble.n	8019392 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 80192d0:	f818 500e 	ldrb.w	r5, [r8, lr]
 80192d4:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80192d8:	441d      	add	r5, r3
 80192da:	f11c 0201 	adds.w	r2, ip, #1
 80192de:	d45d      	bmi.n	801939c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 80192e0:	4596      	cmp	lr, r2
 80192e2:	dd5b      	ble.n	801939c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 80192e4:	2800      	cmp	r0, #0
 80192e6:	d059      	beq.n	801939c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 80192e8:	44c6      	add	lr, r8
 80192ea:	f89e 2001 	ldrb.w	r2, [lr, #1]
 80192ee:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80192f2:	4413      	add	r3, r2
 80192f4:	b280      	uxth	r0, r0
 80192f6:	b2b2      	uxth	r2, r6
 80192f8:	fb00 f602 	mul.w	r6, r0, r2
 80192fc:	0100      	lsls	r0, r0, #4
 80192fe:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 8019302:	f5c0 7880 	rsb	r8, r0, #256	; 0x100
 8019306:	1b80      	subs	r0, r0, r6
 8019308:	fa1f fc82 	uxth.w	ip, r2
 801930c:	b282      	uxth	r2, r0
 801930e:	78a0      	ldrb	r0, [r4, #2]
 8019310:	f897 e002 	ldrb.w	lr, [r7, #2]
 8019314:	f897 9000 	ldrb.w	r9, [r7]
 8019318:	787f      	ldrb	r7, [r7, #1]
 801931a:	eba8 080c 	sub.w	r8, r8, ip
 801931e:	fa1f f888 	uxth.w	r8, r8
 8019322:	4350      	muls	r0, r2
 8019324:	fb08 0e0e 	mla	lr, r8, lr, r0
 8019328:	78a8      	ldrb	r0, [r5, #2]
 801932a:	fb0c e000 	mla	r0, ip, r0, lr
 801932e:	f893 e002 	ldrb.w	lr, [r3, #2]
 8019332:	fb06 0e0e 	mla	lr, r6, lr, r0
 8019336:	f40e 4078 	and.w	r0, lr, #63488	; 0xf800
 801933a:	f894 e000 	ldrb.w	lr, [r4]
 801933e:	fb02 fe0e 	mul.w	lr, r2, lr
 8019342:	fb08 e909 	mla	r9, r8, r9, lr
 8019346:	f895 e000 	ldrb.w	lr, [r5]
 801934a:	fb0c 990e 	mla	r9, ip, lr, r9
 801934e:	f893 e000 	ldrb.w	lr, [r3]
 8019352:	785b      	ldrb	r3, [r3, #1]
 8019354:	fb06 9e0e 	mla	lr, r6, lr, r9
 8019358:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801935c:	ea4e 0e00 	orr.w	lr, lr, r0
 8019360:	7860      	ldrb	r0, [r4, #1]
 8019362:	4350      	muls	r0, r2
 8019364:	786a      	ldrb	r2, [r5, #1]
 8019366:	fb08 0007 	mla	r0, r8, r7, r0
 801936a:	fb0c 0202 	mla	r2, ip, r2, r0
 801936e:	fb06 2303 	mla	r3, r6, r3, r2
 8019372:	095b      	lsrs	r3, r3, #5
 8019374:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019378:	ea4e 0303 	orr.w	r3, lr, r3
 801937c:	800b      	strh	r3, [r1, #0]
 801937e:	b003      	add	sp, #12
 8019380:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019384:	af01      	add	r7, sp, #4
 8019386:	e78c      	b.n	80192a2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 8019388:	ac01      	add	r4, sp, #4
 801938a:	4627      	mov	r7, r4
 801938c:	e795      	b.n	80192ba <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801938e:	ac01      	add	r4, sp, #4
 8019390:	e793      	b.n	80192ba <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8019392:	ad01      	add	r5, sp, #4
 8019394:	e7a1      	b.n	80192da <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 8019396:	ab01      	add	r3, sp, #4
 8019398:	461d      	mov	r5, r3
 801939a:	e7ab      	b.n	80192f4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 801939c:	ab01      	add	r3, sp, #4
 801939e:	e7a9      	b.n	80192f4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

080193a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80193a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80193a4:	b08f      	sub	sp, #60	; 0x3c
 80193a6:	e9dd b519 	ldrd	fp, r5, [sp, #100]	; 0x64
 80193aa:	920c      	str	r2, [sp, #48]	; 0x30
 80193ac:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 80193ae:	910a      	str	r1, [sp, #40]	; 0x28
 80193b0:	9306      	str	r3, [sp, #24]
 80193b2:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	; 0x78
 80193b6:	900d      	str	r0, [sp, #52]	; 0x34
 80193b8:	6850      	ldr	r0, [r2, #4]
 80193ba:	6812      	ldr	r2, [r2, #0]
 80193bc:	fb00 1303 	mla	r3, r0, r3, r1
 80193c0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80193c4:	9307      	str	r3, [sp, #28]
 80193c6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80193c8:	681b      	ldr	r3, [r3, #0]
 80193ca:	9308      	str	r3, [sp, #32]
 80193cc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80193ce:	685c      	ldr	r4, [r3, #4]
 80193d0:	3404      	adds	r4, #4
 80193d2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80193d4:	2b00      	cmp	r3, #0
 80193d6:	dc03      	bgt.n	80193e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 80193d8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80193da:	2b00      	cmp	r3, #0
 80193dc:	f340 81d6 	ble.w	801978c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 80193e0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80193e2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80193e6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80193ea:	1e48      	subs	r0, r1, #1
 80193ec:	1e56      	subs	r6, r2, #1
 80193ee:	9b06      	ldr	r3, [sp, #24]
 80193f0:	2b00      	cmp	r3, #0
 80193f2:	f340 80b7 	ble.w	8019564 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 80193f6:	ea5f 472b 	movs.w	r7, fp, asr #16
 80193fa:	ea4f 4325 	mov.w	r3, r5, asr #16
 80193fe:	d406      	bmi.n	801940e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8019400:	4287      	cmp	r7, r0
 8019402:	da04      	bge.n	801940e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8019404:	2b00      	cmp	r3, #0
 8019406:	db02      	blt.n	801940e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8019408:	42b3      	cmp	r3, r6
 801940a:	f2c0 80ac 	blt.w	8019566 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801940e:	3701      	adds	r7, #1
 8019410:	f100 809d 	bmi.w	801954e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8019414:	42b9      	cmp	r1, r7
 8019416:	f2c0 809a 	blt.w	801954e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801941a:	3301      	adds	r3, #1
 801941c:	f100 8097 	bmi.w	801954e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8019420:	429a      	cmp	r2, r3
 8019422:	f2c0 8094 	blt.w	801954e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8019426:	9b06      	ldr	r3, [sp, #24]
 8019428:	930b      	str	r3, [sp, #44]	; 0x2c
 801942a:	9b07      	ldr	r3, [sp, #28]
 801942c:	9309      	str	r3, [sp, #36]	; 0x24
 801942e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8019430:	2b00      	cmp	r3, #0
 8019432:	f340 80b5 	ble.w	80195a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8019436:	9820      	ldr	r0, [sp, #128]	; 0x80
 8019438:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801943a:	68c7      	ldr	r7, [r0, #12]
 801943c:	6892      	ldr	r2, [r2, #8]
 801943e:	ea5f 402b 	movs.w	r0, fp, asr #16
 8019442:	ea4f 4625 	mov.w	r6, r5, asr #16
 8019446:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801944a:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801944e:	f100 80fb 	bmi.w	8019648 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8019452:	f102 3cff 	add.w	ip, r2, #4294967295
 8019456:	4560      	cmp	r0, ip
 8019458:	f280 80f6 	bge.w	8019648 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801945c:	2e00      	cmp	r6, #0
 801945e:	f2c0 80f3 	blt.w	8019648 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8019462:	f107 3cff 	add.w	ip, r7, #4294967295
 8019466:	4566      	cmp	r6, ip
 8019468:	f280 80ee 	bge.w	8019648 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801946c:	b212      	sxth	r2, r2
 801946e:	fb06 0002 	mla	r0, r6, r2, r0
 8019472:	9e08      	ldr	r6, [sp, #32]
 8019474:	1837      	adds	r7, r6, r0
 8019476:	5c30      	ldrb	r0, [r6, r0]
 8019478:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 801947c:	eb04 0c08 	add.w	ip, r4, r8
 8019480:	2b00      	cmp	r3, #0
 8019482:	f000 80d3 	beq.w	801962c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8019486:	787e      	ldrb	r6, [r7, #1]
 8019488:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801948c:	4426      	add	r6, r4
 801948e:	2900      	cmp	r1, #0
 8019490:	f000 80d4 	beq.w	801963c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 8019494:	18b8      	adds	r0, r7, r2
 8019496:	5cba      	ldrb	r2, [r7, r2]
 8019498:	7840      	ldrb	r0, [r0, #1]
 801949a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801949e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80194a2:	4422      	add	r2, r4
 80194a4:	4420      	add	r0, r4
 80194a6:	b29b      	uxth	r3, r3
 80194a8:	b289      	uxth	r1, r1
 80194aa:	fb03 f901 	mul.w	r9, r3, r1
 80194ae:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80194b2:	011b      	lsls	r3, r3, #4
 80194b4:	b289      	uxth	r1, r1
 80194b6:	78b7      	ldrb	r7, [r6, #2]
 80194b8:	f89c a002 	ldrb.w	sl, [ip, #2]
 80194bc:	f89c c001 	ldrb.w	ip, [ip, #1]
 80194c0:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 80194c4:	eba3 0309 	sub.w	r3, r3, r9
 80194c8:	b29b      	uxth	r3, r3
 80194ca:	ebae 0e01 	sub.w	lr, lr, r1
 80194ce:	fa1f fe8e 	uxth.w	lr, lr
 80194d2:	435f      	muls	r7, r3
 80194d4:	fb0e 770a 	mla	r7, lr, sl, r7
 80194d8:	f892 a002 	ldrb.w	sl, [r2, #2]
 80194dc:	fb01 770a 	mla	r7, r1, sl, r7
 80194e0:	f890 a002 	ldrb.w	sl, [r0, #2]
 80194e4:	fb09 7a0a 	mla	sl, r9, sl, r7
 80194e8:	f814 7008 	ldrb.w	r7, [r4, r8]
 80194ec:	f896 8000 	ldrb.w	r8, [r6]
 80194f0:	7876      	ldrb	r6, [r6, #1]
 80194f2:	fb03 f808 	mul.w	r8, r3, r8
 80194f6:	fb0e 8807 	mla	r8, lr, r7, r8
 80194fa:	7817      	ldrb	r7, [r2, #0]
 80194fc:	fb01 8807 	mla	r8, r1, r7, r8
 8019500:	7807      	ldrb	r7, [r0, #0]
 8019502:	fb09 8707 	mla	r7, r9, r7, r8
 8019506:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 801950a:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801950e:	ea47 070a 	orr.w	r7, r7, sl
 8019512:	4373      	muls	r3, r6
 8019514:	f892 a001 	ldrb.w	sl, [r2, #1]
 8019518:	fb0e 330c 	mla	r3, lr, ip, r3
 801951c:	fb01 310a 	mla	r1, r1, sl, r3
 8019520:	f890 a001 	ldrb.w	sl, [r0, #1]
 8019524:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019526:	fb09 1a0a 	mla	sl, r9, sl, r1
 801952a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801952e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019532:	ea47 070a 	orr.w	r7, r7, sl
 8019536:	801f      	strh	r7, [r3, #0]
 8019538:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801953a:	3302      	adds	r3, #2
 801953c:	9309      	str	r3, [sp, #36]	; 0x24
 801953e:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8019540:	449b      	add	fp, r3
 8019542:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8019544:	441d      	add	r5, r3
 8019546:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8019548:	3b01      	subs	r3, #1
 801954a:	930b      	str	r3, [sp, #44]	; 0x2c
 801954c:	e76f      	b.n	801942e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801954e:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8019550:	449b      	add	fp, r3
 8019552:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8019554:	441d      	add	r5, r3
 8019556:	9b06      	ldr	r3, [sp, #24]
 8019558:	3b01      	subs	r3, #1
 801955a:	9306      	str	r3, [sp, #24]
 801955c:	9b07      	ldr	r3, [sp, #28]
 801955e:	3302      	adds	r3, #2
 8019560:	9307      	str	r3, [sp, #28]
 8019562:	e744      	b.n	80193ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 8019564:	d023      	beq.n	80195ae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 8019566:	9b06      	ldr	r3, [sp, #24]
 8019568:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801956a:	3b01      	subs	r3, #1
 801956c:	fb00 b003 	mla	r0, r0, r3, fp
 8019570:	1400      	asrs	r0, r0, #16
 8019572:	f53f af58 	bmi.w	8019426 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8019576:	3901      	subs	r1, #1
 8019578:	4288      	cmp	r0, r1
 801957a:	f6bf af54 	bge.w	8019426 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801957e:	991c      	ldr	r1, [sp, #112]	; 0x70
 8019580:	fb01 5303 	mla	r3, r1, r3, r5
 8019584:	141b      	asrs	r3, r3, #16
 8019586:	f53f af4e 	bmi.w	8019426 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801958a:	3a01      	subs	r2, #1
 801958c:	4293      	cmp	r3, r2
 801958e:	f6bf af4a 	bge.w	8019426 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8019592:	9b06      	ldr	r3, [sp, #24]
 8019594:	9309      	str	r3, [sp, #36]	; 0x24
 8019596:	9b07      	ldr	r3, [sp, #28]
 8019598:	930b      	str	r3, [sp, #44]	; 0x2c
 801959a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801959c:	2b00      	cmp	r3, #0
 801959e:	dc70      	bgt.n	8019682 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 80195a0:	9b06      	ldr	r3, [sp, #24]
 80195a2:	9a07      	ldr	r2, [sp, #28]
 80195a4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80195a8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80195ac:	9307      	str	r3, [sp, #28]
 80195ae:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80195b0:	2b00      	cmp	r3, #0
 80195b2:	f340 80eb 	ble.w	801978c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 80195b6:	ee30 0a04 	vadd.f32	s0, s0, s8
 80195ba:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80195be:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80195c2:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80195c4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80195c8:	ee31 1a05 	vadd.f32	s2, s2, s10
 80195cc:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80195d0:	eef0 6a62 	vmov.f32	s13, s5
 80195d4:	ee61 7a27 	vmul.f32	s15, s2, s15
 80195d8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80195dc:	ee77 2a62 	vsub.f32	s5, s14, s5
 80195e0:	ee16 ba90 	vmov	fp, s13
 80195e4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80195e8:	eef0 6a43 	vmov.f32	s13, s6
 80195ec:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80195f0:	ee12 2a90 	vmov	r2, s5
 80195f4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80195f8:	fb92 f3f3 	sdiv	r3, r2, r3
 80195fc:	ee13 2a10 	vmov	r2, s6
 8019600:	931b      	str	r3, [sp, #108]	; 0x6c
 8019602:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8019604:	fb92 f3f3 	sdiv	r3, r2, r3
 8019608:	931c      	str	r3, [sp, #112]	; 0x70
 801960a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801960c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801960e:	3b01      	subs	r3, #1
 8019610:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019614:	930a      	str	r3, [sp, #40]	; 0x28
 8019616:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8019618:	bf08      	it	eq
 801961a:	4613      	moveq	r3, r2
 801961c:	ee16 5a90 	vmov	r5, s13
 8019620:	9306      	str	r3, [sp, #24]
 8019622:	eeb0 3a67 	vmov.f32	s6, s15
 8019626:	eef0 2a47 	vmov.f32	s5, s14
 801962a:	e6d2      	b.n	80193d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801962c:	b149      	cbz	r1, 8019642 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801962e:	5cba      	ldrb	r2, [r7, r2]
 8019630:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8019634:	4422      	add	r2, r4
 8019636:	4660      	mov	r0, ip
 8019638:	4666      	mov	r6, ip
 801963a:	e734      	b.n	80194a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801963c:	4660      	mov	r0, ip
 801963e:	4662      	mov	r2, ip
 8019640:	e731      	b.n	80194a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8019642:	4660      	mov	r0, ip
 8019644:	4662      	mov	r2, ip
 8019646:	e7f7      	b.n	8019638 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 8019648:	f110 0c01 	adds.w	ip, r0, #1
 801964c:	f53f af74 	bmi.w	8019538 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8019650:	4562      	cmp	r2, ip
 8019652:	f6ff af71 	blt.w	8019538 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8019656:	f116 0c01 	adds.w	ip, r6, #1
 801965a:	f53f af6d 	bmi.w	8019538 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801965e:	4567      	cmp	r7, ip
 8019660:	f6ff af6a 	blt.w	8019538 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8019664:	b23f      	sxth	r7, r7
 8019666:	b212      	sxth	r2, r2
 8019668:	e9cd 3104 	strd	r3, r1, [sp, #16]
 801966c:	e9cd 0602 	strd	r0, r6, [sp, #8]
 8019670:	9200      	str	r2, [sp, #0]
 8019672:	9701      	str	r7, [sp, #4]
 8019674:	4623      	mov	r3, r4
 8019676:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801967a:	980d      	ldr	r0, [sp, #52]	; 0x34
 801967c:	f7ff fde6 	bl	801924c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 8019680:	e75a      	b.n	8019538 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8019682:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8019684:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8019688:	ea4f 462b 	mov.w	r6, fp, asr #16
 801968c:	1428      	asrs	r0, r5, #16
 801968e:	fb02 6000 	mla	r0, r2, r0, r6
 8019692:	9e08      	ldr	r6, [sp, #32]
 8019694:	f816 8000 	ldrb.w	r8, [r6, r0]
 8019698:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801969c:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 80196a0:	f3c5 3103 	ubfx	r1, r5, #12, #4
 80196a4:	1837      	adds	r7, r6, r0
 80196a6:	eb04 0c08 	add.w	ip, r4, r8
 80196aa:	2b00      	cmp	r3, #0
 80196ac:	d060      	beq.n	8019770 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 80196ae:	787e      	ldrb	r6, [r7, #1]
 80196b0:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 80196b4:	4426      	add	r6, r4
 80196b6:	2900      	cmp	r1, #0
 80196b8:	d062      	beq.n	8019780 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 80196ba:	18b8      	adds	r0, r7, r2
 80196bc:	5cba      	ldrb	r2, [r7, r2]
 80196be:	7840      	ldrb	r0, [r0, #1]
 80196c0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80196c4:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80196c8:	4422      	add	r2, r4
 80196ca:	4420      	add	r0, r4
 80196cc:	b29b      	uxth	r3, r3
 80196ce:	b289      	uxth	r1, r1
 80196d0:	fb03 f901 	mul.w	r9, r3, r1
 80196d4:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80196d8:	011b      	lsls	r3, r3, #4
 80196da:	b289      	uxth	r1, r1
 80196dc:	78b7      	ldrb	r7, [r6, #2]
 80196de:	f89c a002 	ldrb.w	sl, [ip, #2]
 80196e2:	f89c c001 	ldrb.w	ip, [ip, #1]
 80196e6:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 80196ea:	eba3 0309 	sub.w	r3, r3, r9
 80196ee:	b29b      	uxth	r3, r3
 80196f0:	ebae 0e01 	sub.w	lr, lr, r1
 80196f4:	fa1f fe8e 	uxth.w	lr, lr
 80196f8:	435f      	muls	r7, r3
 80196fa:	fb0e 770a 	mla	r7, lr, sl, r7
 80196fe:	f892 a002 	ldrb.w	sl, [r2, #2]
 8019702:	fb01 770a 	mla	r7, r1, sl, r7
 8019706:	f890 a002 	ldrb.w	sl, [r0, #2]
 801970a:	fb09 7a0a 	mla	sl, r9, sl, r7
 801970e:	f814 7008 	ldrb.w	r7, [r4, r8]
 8019712:	f896 8000 	ldrb.w	r8, [r6]
 8019716:	7876      	ldrb	r6, [r6, #1]
 8019718:	fb03 f808 	mul.w	r8, r3, r8
 801971c:	fb0e 8807 	mla	r8, lr, r7, r8
 8019720:	7817      	ldrb	r7, [r2, #0]
 8019722:	fb01 8807 	mla	r8, r1, r7, r8
 8019726:	7807      	ldrb	r7, [r0, #0]
 8019728:	fb09 8707 	mla	r7, r9, r7, r8
 801972c:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8019730:	4373      	muls	r3, r6
 8019732:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8019736:	7856      	ldrb	r6, [r2, #1]
 8019738:	ea47 070a 	orr.w	r7, r7, sl
 801973c:	fb0e 330c 	mla	r3, lr, ip, r3
 8019740:	f890 a001 	ldrb.w	sl, [r0, #1]
 8019744:	fb01 3306 	mla	r3, r1, r6, r3
 8019748:	fb09 3a0a 	mla	sl, r9, sl, r3
 801974c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019750:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8019752:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019756:	ea47 070a 	orr.w	r7, r7, sl
 801975a:	f823 7b02 	strh.w	r7, [r3], #2
 801975e:	930b      	str	r3, [sp, #44]	; 0x2c
 8019760:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8019762:	449b      	add	fp, r3
 8019764:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8019766:	441d      	add	r5, r3
 8019768:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801976a:	3b01      	subs	r3, #1
 801976c:	9309      	str	r3, [sp, #36]	; 0x24
 801976e:	e714      	b.n	801959a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8019770:	b149      	cbz	r1, 8019786 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8019772:	5cba      	ldrb	r2, [r7, r2]
 8019774:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8019778:	4422      	add	r2, r4
 801977a:	4660      	mov	r0, ip
 801977c:	4666      	mov	r6, ip
 801977e:	e7a5      	b.n	80196cc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 8019780:	4660      	mov	r0, ip
 8019782:	4662      	mov	r2, ip
 8019784:	e7a2      	b.n	80196cc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 8019786:	4660      	mov	r0, ip
 8019788:	4662      	mov	r2, ip
 801978a:	e7f7      	b.n	801977c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 801978c:	b00f      	add	sp, #60	; 0x3c
 801978e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019792 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 8019792:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019796:	b085      	sub	sp, #20
 8019798:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	; 0x40
 801979c:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 80197a0:	9102      	str	r1, [sp, #8]
 80197a2:	2c00      	cmp	r4, #0
 80197a4:	fb04 710c 	mla	r1, r4, ip, r7
 80197a8:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 80197ac:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
 80197b0:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 80197b4:	eb02 0e01 	add.w	lr, r2, r1
 80197b8:	f2c0 8122 	blt.w	8019a00 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 80197bc:	45a0      	cmp	r8, r4
 80197be:	f340 811f 	ble.w	8019a00 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 80197c2:	2f00      	cmp	r7, #0
 80197c4:	f2c0 811a 	blt.w	80199fc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 80197c8:	45bc      	cmp	ip, r7
 80197ca:	f340 8117 	ble.w	80199fc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 80197ce:	5c52      	ldrb	r2, [r2, r1]
 80197d0:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 80197d4:	1c7a      	adds	r2, r7, #1
 80197d6:	f100 8116 	bmi.w	8019a06 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 80197da:	4594      	cmp	ip, r2
 80197dc:	f340 8113 	ble.w	8019a06 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 80197e0:	2e00      	cmp	r6, #0
 80197e2:	f000 8112 	beq.w	8019a0a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 80197e6:	f89e 2001 	ldrb.w	r2, [lr, #1]
 80197ea:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80197ee:	3401      	adds	r4, #1
 80197f0:	f100 810f 	bmi.w	8019a12 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 80197f4:	45a0      	cmp	r8, r4
 80197f6:	f340 810c 	ble.w	8019a12 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 80197fa:	2800      	cmp	r0, #0
 80197fc:	f000 810c 	beq.w	8019a18 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 8019800:	2f00      	cmp	r7, #0
 8019802:	f2c0 8104 	blt.w	8019a0e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 8019806:	45bc      	cmp	ip, r7
 8019808:	f340 8101 	ble.w	8019a0e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801980c:	f81e 200c 	ldrb.w	r2, [lr, ip]
 8019810:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 8019814:	3701      	adds	r7, #1
 8019816:	f100 8102 	bmi.w	8019a1e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801981a:	45bc      	cmp	ip, r7
 801981c:	f340 80ff 	ble.w	8019a1e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 8019820:	2e00      	cmp	r6, #0
 8019822:	f000 80fe 	beq.w	8019a22 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 8019826:	44f4      	add	ip, lr
 8019828:	f89c 2001 	ldrb.w	r2, [ip, #1]
 801982c:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8019830:	b2b6      	uxth	r6, r6
 8019832:	b280      	uxth	r0, r0
 8019834:	fb00 fe06 	mul.w	lr, r0, r6
 8019838:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801983c:	0136      	lsls	r6, r6, #4
 801983e:	eba6 070e 	sub.w	r7, r6, lr
 8019842:	b280      	uxth	r0, r0
 8019844:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 8019848:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801984c:	b2bf      	uxth	r7, r7
 801984e:	1a1b      	subs	r3, r3, r0
 8019850:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8019854:	b29b      	uxth	r3, r3
 8019856:	fb0a f607 	mul.w	r6, sl, r7
 801985a:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801985e:	fb0b 6603 	mla	r6, fp, r3, r6
 8019862:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8019866:	fb00 6609 	mla	r6, r0, r9, r6
 801986a:	fb0e 6608 	mla	r6, lr, r8, r6
 801986e:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8019872:	9600      	str	r6, [sp, #0]
 8019874:	2e00      	cmp	r6, #0
 8019876:	f000 80be 	beq.w	80199f6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 801987a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801987e:	fb0b fc0c 	mul.w	ip, fp, ip
 8019882:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8019886:	fb0b f505 	mul.w	r5, fp, r5
 801988a:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801988e:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8019892:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8019896:	44dc      	add	ip, fp
 8019898:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801989c:	9501      	str	r5, [sp, #4]
 801989e:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 80198a2:	9503      	str	r5, [sp, #12]
 80198a4:	9d01      	ldr	r5, [sp, #4]
 80198a6:	9e02      	ldr	r6, [sp, #8]
 80198a8:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 80198ac:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 80198b0:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 80198b4:	fb0a fc0c 	mul.w	ip, sl, ip
 80198b8:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 80198bc:	ea4f 251c 	mov.w	r5, ip, lsr #8
 80198c0:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80198c4:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80198c8:	4465      	add	r5, ip
 80198ca:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80198ce:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 80198d2:	fb09 fc0c 	mul.w	ip, r9, ip
 80198d6:	fb09 f904 	mul.w	r9, r9, r4
 80198da:	f509 7480 	add.w	r4, r9, #256	; 0x100
 80198de:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 80198e2:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 80198e6:	fb08 f404 	mul.w	r4, r8, r4
 80198ea:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80198ee:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80198f2:	fb08 f802 	mul.w	r8, r8, r2
 80198f6:	fb0a fa01 	mul.w	sl, sl, r1
 80198fa:	0a22      	lsrs	r2, r4, #8
 80198fc:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 8019900:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8019904:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 8019908:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801990c:	4414      	add	r4, r2
 801990e:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8019912:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8019916:	0a2d      	lsrs	r5, r5, #8
 8019918:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801991c:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8019920:	9a03      	ldr	r2, [sp, #12]
 8019922:	8836      	ldrh	r6, [r6, #0]
 8019924:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8019928:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801992c:	437d      	muls	r5, r7
 801992e:	4461      	add	r1, ip
 8019930:	0a24      	lsrs	r4, r4, #8
 8019932:	fb02 5503 	mla	r5, r2, r3, r5
 8019936:	0a09      	lsrs	r1, r1, #8
 8019938:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801993c:	fb04 540e 	mla	r4, r4, lr, r5
 8019940:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8019944:	fb01 4100 	mla	r1, r1, r0, r4
 8019948:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801994c:	0a09      	lsrs	r1, r1, #8
 801994e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8019952:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8019956:	fb07 f70a 	mul.w	r7, r7, sl
 801995a:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801995e:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8019962:	fb03 7101 	mla	r1, r3, r1, r7
 8019966:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801996a:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801996e:	fb0e 1e08 	mla	lr, lr, r8, r1
 8019972:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8019976:	fb00 e101 	mla	r1, r0, r1, lr
 801997a:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 801997e:	9a00      	ldr	r2, [sp, #0]
 8019980:	b287      	uxth	r7, r0
 8019982:	437a      	muls	r2, r7
 8019984:	0a09      	lsrs	r1, r1, #8
 8019986:	1c53      	adds	r3, r2, #1
 8019988:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801998c:	4321      	orrs	r1, r4
 801998e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8019992:	1235      	asrs	r5, r6, #8
 8019994:	0c0a      	lsrs	r2, r1, #16
 8019996:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801999a:	b2db      	uxtb	r3, r3
 801999c:	fb12 f207 	smulbb	r2, r2, r7
 80199a0:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80199a4:	fb05 2503 	mla	r5, r5, r3, r2
 80199a8:	f3c1 2407 	ubfx	r4, r1, #8, #8
 80199ac:	10f2      	asrs	r2, r6, #3
 80199ae:	b2c8      	uxtb	r0, r1
 80199b0:	00f6      	lsls	r6, r6, #3
 80199b2:	fb14 f407 	smulbb	r4, r4, r7
 80199b6:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80199ba:	b2f6      	uxtb	r6, r6
 80199bc:	fb10 f007 	smulbb	r0, r0, r7
 80199c0:	fb02 4203 	mla	r2, r2, r3, r4
 80199c4:	b2ad      	uxth	r5, r5
 80199c6:	fb06 0303 	mla	r3, r6, r3, r0
 80199ca:	b299      	uxth	r1, r3
 80199cc:	b294      	uxth	r4, r2
 80199ce:	1c6b      	adds	r3, r5, #1
 80199d0:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80199d4:	1c62      	adds	r2, r4, #1
 80199d6:	1c4b      	adds	r3, r1, #1
 80199d8:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 80199dc:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 80199e0:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80199e4:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80199e8:	0952      	lsrs	r2, r2, #5
 80199ea:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80199ee:	432b      	orrs	r3, r5
 80199f0:	4313      	orrs	r3, r2
 80199f2:	9a02      	ldr	r2, [sp, #8]
 80199f4:	8013      	strh	r3, [r2, #0]
 80199f6:	b005      	add	sp, #20
 80199f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80199fc:	2500      	movs	r5, #0
 80199fe:	e6e9      	b.n	80197d4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 8019a00:	2100      	movs	r1, #0
 8019a02:	460d      	mov	r5, r1
 8019a04:	e6f3      	b.n	80197ee <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8019a06:	2100      	movs	r1, #0
 8019a08:	e6f1      	b.n	80197ee <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8019a0a:	4631      	mov	r1, r6
 8019a0c:	e6ef      	b.n	80197ee <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8019a0e:	2400      	movs	r4, #0
 8019a10:	e700      	b.n	8019814 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 8019a12:	2200      	movs	r2, #0
 8019a14:	4614      	mov	r4, r2
 8019a16:	e70b      	b.n	8019830 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8019a18:	4602      	mov	r2, r0
 8019a1a:	4604      	mov	r4, r0
 8019a1c:	e708      	b.n	8019830 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8019a1e:	2200      	movs	r2, #0
 8019a20:	e706      	b.n	8019830 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8019a22:	4632      	mov	r2, r6
 8019a24:	e704      	b.n	8019830 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

08019a26 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019a26:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019a2a:	b09f      	sub	sp, #124	; 0x7c
 8019a2c:	921b      	str	r2, [sp, #108]	; 0x6c
 8019a2e:	9309      	str	r3, [sp, #36]	; 0x24
 8019a30:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8019a32:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 8019a36:	931c      	str	r3, [sp, #112]	; 0x70
 8019a38:	9119      	str	r1, [sp, #100]	; 0x64
 8019a3a:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 8019a3e:	901d      	str	r0, [sp, #116]	; 0x74
 8019a40:	6850      	ldr	r0, [r2, #4]
 8019a42:	6812      	ldr	r2, [r2, #0]
 8019a44:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 8019a46:	fb00 1303 	mla	r3, r0, r3, r1
 8019a4a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8019a4e:	930c      	str	r3, [sp, #48]	; 0x30
 8019a50:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8019a52:	681b      	ldr	r3, [r3, #0]
 8019a54:	9312      	str	r3, [sp, #72]	; 0x48
 8019a56:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8019a58:	685e      	ldr	r6, [r3, #4]
 8019a5a:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 8019a5e:	930d      	str	r3, [sp, #52]	; 0x34
 8019a60:	3604      	adds	r6, #4
 8019a62:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8019a64:	2b00      	cmp	r3, #0
 8019a66:	dc03      	bgt.n	8019a70 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8019a68:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8019a6a:	2b00      	cmp	r3, #0
 8019a6c:	f340 8388 	ble.w	801a180 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 8019a70:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8019a72:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019a76:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8019a7a:	1e48      	subs	r0, r1, #1
 8019a7c:	1e57      	subs	r7, r2, #1
 8019a7e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019a80:	2b00      	cmp	r3, #0
 8019a82:	f340 8195 	ble.w	8019db0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8019a86:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8019a88:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8019a8c:	ea4f 4325 	mov.w	r3, r5, asr #16
 8019a90:	d406      	bmi.n	8019aa0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8019a92:	4584      	cmp	ip, r0
 8019a94:	da04      	bge.n	8019aa0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8019a96:	2b00      	cmp	r3, #0
 8019a98:	db02      	blt.n	8019aa0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8019a9a:	42bb      	cmp	r3, r7
 8019a9c:	f2c0 8189 	blt.w	8019db2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 8019aa0:	f11c 0c01 	adds.w	ip, ip, #1
 8019aa4:	f100 8177 	bmi.w	8019d96 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8019aa8:	4561      	cmp	r1, ip
 8019aaa:	f2c0 8174 	blt.w	8019d96 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8019aae:	3301      	adds	r3, #1
 8019ab0:	f100 8171 	bmi.w	8019d96 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8019ab4:	429a      	cmp	r2, r3
 8019ab6:	f2c0 816e 	blt.w	8019d96 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8019aba:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019abc:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 8019abe:	931a      	str	r3, [sp, #104]	; 0x68
 8019ac0:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8019ac2:	2b00      	cmp	r3, #0
 8019ac4:	f340 8193 	ble.w	8019dee <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 8019ac8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8019aca:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8019ace:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8019ad0:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 8019ad4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8019ad6:	141b      	asrs	r3, r3, #16
 8019ad8:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8019adc:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8019ae0:	f100 81d6 	bmi.w	8019e90 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8019ae4:	f100 38ff 	add.w	r8, r0, #4294967295
 8019ae8:	4543      	cmp	r3, r8
 8019aea:	f280 81d1 	bge.w	8019e90 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8019aee:	f1bc 0f00 	cmp.w	ip, #0
 8019af2:	f2c0 81cd 	blt.w	8019e90 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8019af6:	f10e 38ff 	add.w	r8, lr, #4294967295
 8019afa:	45c4      	cmp	ip, r8
 8019afc:	f280 81c8 	bge.w	8019e90 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8019b00:	b200      	sxth	r0, r0
 8019b02:	fb0c 3300 	mla	r3, ip, r0, r3
 8019b06:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8019b08:	eb04 0803 	add.w	r8, r4, r3
 8019b0c:	5ce3      	ldrb	r3, [r4, r3]
 8019b0e:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8019b12:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8019b16:	2a00      	cmp	r2, #0
 8019b18:	f000 81af 	beq.w	8019e7a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8019b1c:	f898 c001 	ldrb.w	ip, [r8, #1]
 8019b20:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8019b24:	940e      	str	r4, [sp, #56]	; 0x38
 8019b26:	0e24      	lsrs	r4, r4, #24
 8019b28:	9415      	str	r4, [sp, #84]	; 0x54
 8019b2a:	b179      	cbz	r1, 8019b4c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8019b2c:	eb08 0c00 	add.w	ip, r8, r0
 8019b30:	f818 0000 	ldrb.w	r0, [r8, r0]
 8019b34:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8019b38:	900a      	str	r0, [sp, #40]	; 0x28
 8019b3a:	0e00      	lsrs	r0, r0, #24
 8019b3c:	9013      	str	r0, [sp, #76]	; 0x4c
 8019b3e:	f89c 0001 	ldrb.w	r0, [ip, #1]
 8019b42:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8019b46:	900f      	str	r0, [sp, #60]	; 0x3c
 8019b48:	0e00      	lsrs	r0, r0, #24
 8019b4a:	9016      	str	r0, [sp, #88]	; 0x58
 8019b4c:	b292      	uxth	r2, r2
 8019b4e:	b289      	uxth	r1, r1
 8019b50:	fb02 f901 	mul.w	r9, r2, r1
 8019b54:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8019b58:	0112      	lsls	r2, r2, #4
 8019b5a:	eba2 0809 	sub.w	r8, r2, r9
 8019b5e:	b289      	uxth	r1, r1
 8019b60:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8019b64:	9815      	ldr	r0, [sp, #84]	; 0x54
 8019b66:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8019b68:	fa1f f888 	uxth.w	r8, r8
 8019b6c:	1a52      	subs	r2, r2, r1
 8019b6e:	b292      	uxth	r2, r2
 8019b70:	fb08 f000 	mul.w	r0, r8, r0
 8019b74:	fb02 000e 	mla	r0, r2, lr, r0
 8019b78:	fb01 0004 	mla	r0, r1, r4, r0
 8019b7c:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8019b7e:	fb09 0004 	mla	r0, r9, r4, r0
 8019b82:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8019b86:	2800      	cmp	r0, #0
 8019b88:	f000 80fa 	beq.w	8019d80 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8019b8c:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8019b90:	d01b      	beq.n	8019bca <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8019b92:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8019b96:	fb0e fa0a 	mul.w	sl, lr, sl
 8019b9a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8019b9e:	fb0e fe03 	mul.w	lr, lr, r3
 8019ba2:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8019ba6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8019baa:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8019bae:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8019bb2:	4453      	add	r3, sl
 8019bb4:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8019bb8:	0a1b      	lsrs	r3, r3, #8
 8019bba:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019bbe:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8019bc2:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8019bc6:	ea43 030c 	orr.w	r3, r3, ip
 8019bca:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8019bcc:	2cff      	cmp	r4, #255	; 0xff
 8019bce:	d021      	beq.n	8019c14 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8019bd0:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8019bd2:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8019bd6:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8019bd8:	fb04 fb0b 	mul.w	fp, r4, fp
 8019bdc:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8019bde:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8019be2:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8019be4:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8019be8:	fb04 fa0a 	mul.w	sl, r4, sl
 8019bec:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019bf0:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8019bf4:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8019bf8:	44de      	add	lr, fp
 8019bfa:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8019bfe:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019c02:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019c06:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019c0a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8019c0e:	ea4e 040a 	orr.w	r4, lr, sl
 8019c12:	940e      	str	r4, [sp, #56]	; 0x38
 8019c14:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8019c16:	2cff      	cmp	r4, #255	; 0xff
 8019c18:	d021      	beq.n	8019c5e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 8019c1a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8019c1c:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8019c20:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8019c22:	fb04 fb0b 	mul.w	fp, r4, fp
 8019c26:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8019c28:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8019c2c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8019c2e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8019c32:	fb04 fa0a 	mul.w	sl, r4, sl
 8019c36:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019c3a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8019c3e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8019c42:	44de      	add	lr, fp
 8019c44:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8019c48:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019c4c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019c50:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019c54:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8019c58:	ea4e 040a 	orr.w	r4, lr, sl
 8019c5c:	940a      	str	r4, [sp, #40]	; 0x28
 8019c5e:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8019c60:	2cff      	cmp	r4, #255	; 0xff
 8019c62:	d021      	beq.n	8019ca8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 8019c64:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8019c66:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8019c6a:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8019c6c:	fb04 fb0b 	mul.w	fp, r4, fp
 8019c70:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8019c72:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8019c76:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8019c78:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8019c7c:	fb04 fa0a 	mul.w	sl, r4, sl
 8019c80:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019c84:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8019c88:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8019c8c:	44de      	add	lr, fp
 8019c8e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8019c92:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019c96:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019c9a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019c9e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8019ca2:	ea4e 040a 	orr.w	r4, lr, sl
 8019ca6:	940f      	str	r4, [sp, #60]	; 0x3c
 8019ca8:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8019caa:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8019cae:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8019cb0:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8019cb4:	fb08 fc0c 	mul.w	ip, r8, ip
 8019cb8:	fb02 cc0e 	mla	ip, r2, lr, ip
 8019cbc:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8019cc0:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8019cc2:	fb01 cc0e 	mla	ip, r1, lr, ip
 8019cc6:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8019cca:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8019ccc:	fb09 cc0e 	mla	ip, r9, lr, ip
 8019cd0:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8019cd4:	fb08 f80e 	mul.w	r8, r8, lr
 8019cd8:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8019cdc:	fb02 8303 	mla	r3, r2, r3, r8
 8019ce0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8019ce2:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8019ce4:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8019ce8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019cea:	fb01 330a 	mla	r3, r1, sl, r3
 8019cee:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 8019cf2:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8019cf4:	fb09 3901 	mla	r9, r9, r1, r3
 8019cf8:	4342      	muls	r2, r0
 8019cfa:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019cfe:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8019d02:	883b      	ldrh	r3, [r7, #0]
 8019d04:	1c50      	adds	r0, r2, #1
 8019d06:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019d0a:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8019d0e:	ea4c 0c09 	orr.w	ip, ip, r9
 8019d12:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8019d16:	1219      	asrs	r1, r3, #8
 8019d18:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8019d1c:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8019d20:	b2c0      	uxtb	r0, r0
 8019d22:	fb12 f204 	smulbb	r2, r2, r4
 8019d26:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8019d2a:	fb01 2100 	mla	r1, r1, r0, r2
 8019d2e:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 8019d32:	10da      	asrs	r2, r3, #3
 8019d34:	fa5f fc8c 	uxtb.w	ip, ip
 8019d38:	00db      	lsls	r3, r3, #3
 8019d3a:	fb1c fc04 	smulbb	ip, ip, r4
 8019d3e:	b2db      	uxtb	r3, r3
 8019d40:	b289      	uxth	r1, r1
 8019d42:	fb03 c300 	mla	r3, r3, r0, ip
 8019d46:	fa1f fc83 	uxth.w	ip, r3
 8019d4a:	1c4b      	adds	r3, r1, #1
 8019d4c:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8019d50:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8019d54:	fb1e fe04 	smulbb	lr, lr, r4
 8019d58:	f10c 0301 	add.w	r3, ip, #1
 8019d5c:	fb02 e200 	mla	r2, r2, r0, lr
 8019d60:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8019d64:	b292      	uxth	r2, r2
 8019d66:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8019d6a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8019d6e:	430b      	orrs	r3, r1
 8019d70:	1c51      	adds	r1, r2, #1
 8019d72:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8019d76:	0952      	lsrs	r2, r2, #5
 8019d78:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019d7c:	4313      	orrs	r3, r2
 8019d7e:	803b      	strh	r3, [r7, #0]
 8019d80:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8019d82:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8019d84:	441a      	add	r2, r3
 8019d86:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8019d88:	9229      	str	r2, [sp, #164]	; 0xa4
 8019d8a:	441d      	add	r5, r3
 8019d8c:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8019d8e:	3b01      	subs	r3, #1
 8019d90:	3702      	adds	r7, #2
 8019d92:	931a      	str	r3, [sp, #104]	; 0x68
 8019d94:	e694      	b.n	8019ac0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8019d96:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8019d98:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8019d9a:	441c      	add	r4, r3
 8019d9c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8019d9e:	9429      	str	r4, [sp, #164]	; 0xa4
 8019da0:	441d      	add	r5, r3
 8019da2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019da4:	3b01      	subs	r3, #1
 8019da6:	9309      	str	r3, [sp, #36]	; 0x24
 8019da8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8019daa:	3302      	adds	r3, #2
 8019dac:	930c      	str	r3, [sp, #48]	; 0x30
 8019dae:	e666      	b.n	8019a7e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8019db0:	d024      	beq.n	8019dfc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 8019db2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019db4:	982b      	ldr	r0, [sp, #172]	; 0xac
 8019db6:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8019db8:	3b01      	subs	r3, #1
 8019dba:	fb00 4003 	mla	r0, r0, r3, r4
 8019dbe:	1400      	asrs	r0, r0, #16
 8019dc0:	f53f ae7b 	bmi.w	8019aba <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8019dc4:	3901      	subs	r1, #1
 8019dc6:	4288      	cmp	r0, r1
 8019dc8:	f6bf ae77 	bge.w	8019aba <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8019dcc:	992c      	ldr	r1, [sp, #176]	; 0xb0
 8019dce:	fb01 5303 	mla	r3, r1, r3, r5
 8019dd2:	141b      	asrs	r3, r3, #16
 8019dd4:	f53f ae71 	bmi.w	8019aba <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8019dd8:	3a01      	subs	r2, #1
 8019dda:	4293      	cmp	r3, r2
 8019ddc:	f6bf ae6d 	bge.w	8019aba <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8019de0:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8019de4:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 8019de8:	f1bb 0f00 	cmp.w	fp, #0
 8019dec:	dc70      	bgt.n	8019ed0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 8019dee:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019df0:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8019df4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8019df6:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8019dfa:	930c      	str	r3, [sp, #48]	; 0x30
 8019dfc:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8019dfe:	2b00      	cmp	r3, #0
 8019e00:	f340 81be 	ble.w	801a180 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 8019e04:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019e08:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8019e0c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8019e10:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8019e12:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019e16:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019e1a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019e1e:	eef0 6a62 	vmov.f32	s13, s5
 8019e22:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019e26:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019e2a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019e2e:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 8019e32:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019e36:	eef0 6a43 	vmov.f32	s13, s6
 8019e3a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019e3e:	ee12 2a90 	vmov	r2, s5
 8019e42:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019e46:	fb92 f3f3 	sdiv	r3, r2, r3
 8019e4a:	ee13 2a10 	vmov	r2, s6
 8019e4e:	932b      	str	r3, [sp, #172]	; 0xac
 8019e50:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8019e52:	fb92 f3f3 	sdiv	r3, r2, r3
 8019e56:	932c      	str	r3, [sp, #176]	; 0xb0
 8019e58:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8019e5a:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8019e5c:	3b01      	subs	r3, #1
 8019e5e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019e62:	9319      	str	r3, [sp, #100]	; 0x64
 8019e64:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8019e66:	bf08      	it	eq
 8019e68:	4613      	moveq	r3, r2
 8019e6a:	ee16 5a90 	vmov	r5, s13
 8019e6e:	9309      	str	r3, [sp, #36]	; 0x24
 8019e70:	eeb0 3a67 	vmov.f32	s6, s15
 8019e74:	eef0 2a47 	vmov.f32	s5, s14
 8019e78:	e5f3      	b.n	8019a62 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8019e7a:	2900      	cmp	r1, #0
 8019e7c:	f43f ae66 	beq.w	8019b4c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8019e80:	f818 0000 	ldrb.w	r0, [r8, r0]
 8019e84:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8019e88:	900a      	str	r0, [sp, #40]	; 0x28
 8019e8a:	0e00      	lsrs	r0, r0, #24
 8019e8c:	9013      	str	r0, [sp, #76]	; 0x4c
 8019e8e:	e65d      	b.n	8019b4c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8019e90:	f113 0801 	adds.w	r8, r3, #1
 8019e94:	f53f af74 	bmi.w	8019d80 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8019e98:	4540      	cmp	r0, r8
 8019e9a:	f6ff af71 	blt.w	8019d80 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8019e9e:	f11c 0801 	adds.w	r8, ip, #1
 8019ea2:	f53f af6d 	bmi.w	8019d80 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8019ea6:	45c6      	cmp	lr, r8
 8019ea8:	f6ff af6a 	blt.w	8019d80 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8019eac:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 8019eae:	9302      	str	r3, [sp, #8]
 8019eb0:	b200      	sxth	r0, r0
 8019eb2:	fa0f f38e 	sxth.w	r3, lr
 8019eb6:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8019eba:	e9cd c203 	strd	ip, r2, [sp, #12]
 8019ebe:	9301      	str	r3, [sp, #4]
 8019ec0:	9000      	str	r0, [sp, #0]
 8019ec2:	4633      	mov	r3, r6
 8019ec4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8019ec6:	981d      	ldr	r0, [sp, #116]	; 0x74
 8019ec8:	4639      	mov	r1, r7
 8019eca:	f7ff fc62 	bl	8019792 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 8019ece:	e757      	b.n	8019d80 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8019ed0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8019ed2:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8019ed4:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8019ed8:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8019eda:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019ede:	1427      	asrs	r7, r4, #16
 8019ee0:	142b      	asrs	r3, r5, #16
 8019ee2:	fb01 7303 	mla	r3, r1, r3, r7
 8019ee6:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8019ee8:	18e7      	adds	r7, r4, r3
 8019eea:	5ce3      	ldrb	r3, [r4, r3]
 8019eec:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8019ef0:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8019ef4:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8019ef8:	2a00      	cmp	r2, #0
 8019efa:	f000 8137 	beq.w	801a16c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8019efe:	f897 e001 	ldrb.w	lr, [r7, #1]
 8019f02:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 8019f06:	9410      	str	r4, [sp, #64]	; 0x40
 8019f08:	0e24      	lsrs	r4, r4, #24
 8019f0a:	9417      	str	r4, [sp, #92]	; 0x5c
 8019f0c:	b170      	cbz	r0, 8019f2c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8019f0e:	eb07 0e01 	add.w	lr, r7, r1
 8019f12:	5c79      	ldrb	r1, [r7, r1]
 8019f14:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8019f18:	910b      	str	r1, [sp, #44]	; 0x2c
 8019f1a:	0e09      	lsrs	r1, r1, #24
 8019f1c:	9114      	str	r1, [sp, #80]	; 0x50
 8019f1e:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8019f22:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8019f26:	9111      	str	r1, [sp, #68]	; 0x44
 8019f28:	0e09      	lsrs	r1, r1, #24
 8019f2a:	9118      	str	r1, [sp, #96]	; 0x60
 8019f2c:	b292      	uxth	r2, r2
 8019f2e:	b280      	uxth	r0, r0
 8019f30:	fb02 f800 	mul.w	r8, r2, r0
 8019f34:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8019f38:	0112      	lsls	r2, r2, #4
 8019f3a:	eba2 0e08 	sub.w	lr, r2, r8
 8019f3e:	b280      	uxth	r0, r0
 8019f40:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8019f44:	9917      	ldr	r1, [sp, #92]	; 0x5c
 8019f46:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8019f48:	fa1f fe8e 	uxth.w	lr, lr
 8019f4c:	1a12      	subs	r2, r2, r0
 8019f4e:	b292      	uxth	r2, r2
 8019f50:	fb0e f101 	mul.w	r1, lr, r1
 8019f54:	fb02 110c 	mla	r1, r2, ip, r1
 8019f58:	fb00 1104 	mla	r1, r0, r4, r1
 8019f5c:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8019f5e:	fb08 1104 	mla	r1, r8, r4, r1
 8019f62:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8019f66:	2900      	cmp	r1, #0
 8019f68:	f000 80f5 	beq.w	801a156 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8019f6c:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8019f70:	d019      	beq.n	8019fa6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 8019f72:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8019f76:	fb0c fa0a 	mul.w	sl, ip, sl
 8019f7a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8019f7e:	fb0c fc03 	mul.w	ip, ip, r3
 8019f82:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8019f86:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8019f8a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8019f8e:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8019f92:	4453      	add	r3, sl
 8019f94:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8019f98:	0a1b      	lsrs	r3, r3, #8
 8019f9a:	0a3f      	lsrs	r7, r7, #8
 8019f9c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8019fa0:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8019fa4:	433b      	orrs	r3, r7
 8019fa6:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8019fa8:	2cff      	cmp	r4, #255	; 0xff
 8019faa:	d020      	beq.n	8019fee <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 8019fac:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8019fae:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8019fb2:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8019fb4:	4367      	muls	r7, r4
 8019fb6:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8019fb8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8019fbc:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8019fbe:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8019fc2:	fb04 fa0a 	mul.w	sl, r4, sl
 8019fc6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8019fca:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019fce:	44bc      	add	ip, r7
 8019fd0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8019fd4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8019fd8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019fdc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019fe0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019fe4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8019fe8:	ea4c 040a 	orr.w	r4, ip, sl
 8019fec:	9410      	str	r4, [sp, #64]	; 0x40
 8019fee:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8019ff0:	2cff      	cmp	r4, #255	; 0xff
 8019ff2:	d020      	beq.n	801a036 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 8019ff4:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8019ff6:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8019ffa:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8019ffc:	4367      	muls	r7, r4
 8019ffe:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801a000:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801a004:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801a006:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801a00a:	fb04 fa0a 	mul.w	sl, r4, sl
 801a00e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801a012:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a016:	44bc      	add	ip, r7
 801a018:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801a01c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801a020:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a024:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a028:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a02c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a030:	ea4c 040a 	orr.w	r4, ip, sl
 801a034:	940b      	str	r4, [sp, #44]	; 0x2c
 801a036:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801a038:	2cff      	cmp	r4, #255	; 0xff
 801a03a:	d020      	beq.n	801a07e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 801a03c:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801a03e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801a042:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801a044:	4367      	muls	r7, r4
 801a046:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801a048:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801a04c:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801a04e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801a052:	fb04 fa0a 	mul.w	sl, r4, sl
 801a056:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801a05a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a05e:	44bc      	add	ip, r7
 801a060:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801a064:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801a068:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a06c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a070:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a074:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a078:	ea4c 040a 	orr.w	r4, ip, sl
 801a07c:	9411      	str	r4, [sp, #68]	; 0x44
 801a07e:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801a080:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801a084:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801a086:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801a08a:	fb0e f707 	mul.w	r7, lr, r7
 801a08e:	fb02 770c 	mla	r7, r2, ip, r7
 801a092:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801a096:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801a098:	fb00 770c 	mla	r7, r0, ip, r7
 801a09c:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801a0a0:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801a0a2:	fb08 770c 	mla	r7, r8, ip, r7
 801a0a6:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 801a0aa:	fb0e fe0c 	mul.w	lr, lr, ip
 801a0ae:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801a0b2:	fb02 e303 	mla	r3, r2, r3, lr
 801a0b6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801a0b8:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801a0ba:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801a0be:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801a0c0:	fb00 330a 	mla	r3, r0, sl, r3
 801a0c4:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 801a0c8:	fb08 3c0c 	mla	ip, r8, ip, r3
 801a0cc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801a0ce:	f8b9 0000 	ldrh.w	r0, [r9]
 801a0d2:	434b      	muls	r3, r1
 801a0d4:	0a3f      	lsrs	r7, r7, #8
 801a0d6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a0da:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801a0de:	1c59      	adds	r1, r3, #1
 801a0e0:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801a0e4:	ea47 070c 	orr.w	r7, r7, ip
 801a0e8:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801a0ec:	1202      	asrs	r2, r0, #8
 801a0ee:	0c3b      	lsrs	r3, r7, #16
 801a0f0:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801a0f4:	b2c9      	uxtb	r1, r1
 801a0f6:	fb13 f304 	smulbb	r3, r3, r4
 801a0fa:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801a0fe:	fb02 3201 	mla	r2, r2, r1, r3
 801a102:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801a106:	10c3      	asrs	r3, r0, #3
 801a108:	b2ff      	uxtb	r7, r7
 801a10a:	00c0      	lsls	r0, r0, #3
 801a10c:	b292      	uxth	r2, r2
 801a10e:	fb1c fc04 	smulbb	ip, ip, r4
 801a112:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801a116:	b2c0      	uxtb	r0, r0
 801a118:	fb17 f704 	smulbb	r7, r7, r4
 801a11c:	fb03 c301 	mla	r3, r3, r1, ip
 801a120:	fb00 7001 	mla	r0, r0, r1, r7
 801a124:	f102 0c01 	add.w	ip, r2, #1
 801a128:	b280      	uxth	r0, r0
 801a12a:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 801a12e:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 801a132:	1c42      	adds	r2, r0, #1
 801a134:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801a138:	b29b      	uxth	r3, r3
 801a13a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801a13e:	ea42 020c 	orr.w	r2, r2, ip
 801a142:	f103 0c01 	add.w	ip, r3, #1
 801a146:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801a14a:	095b      	lsrs	r3, r3, #5
 801a14c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801a150:	431a      	orrs	r2, r3
 801a152:	f8a9 2000 	strh.w	r2, [r9]
 801a156:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801a158:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801a15a:	441a      	add	r2, r3
 801a15c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801a15e:	9229      	str	r2, [sp, #164]	; 0xa4
 801a160:	f109 0902 	add.w	r9, r9, #2
 801a164:	441d      	add	r5, r3
 801a166:	f10b 3bff 	add.w	fp, fp, #4294967295
 801a16a:	e63d      	b.n	8019de8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 801a16c:	2800      	cmp	r0, #0
 801a16e:	f43f aedd 	beq.w	8019f2c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801a172:	5c79      	ldrb	r1, [r7, r1]
 801a174:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801a178:	910b      	str	r1, [sp, #44]	; 0x2c
 801a17a:	0e09      	lsrs	r1, r1, #24
 801a17c:	9114      	str	r1, [sp, #80]	; 0x50
 801a17e:	e6d5      	b.n	8019f2c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801a180:	b01f      	add	sp, #124	; 0x7c
 801a182:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a186 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 801a186:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a18a:	b089      	sub	sp, #36	; 0x24
 801a18c:	9101      	str	r1, [sp, #4]
 801a18e:	9801      	ldr	r0, [sp, #4]
 801a190:	f9bd c048 	ldrsh.w	ip, [sp, #72]	; 0x48
 801a194:	8800      	ldrh	r0, [r0, #0]
 801a196:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	; 0x4c
 801a19a:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 801a19e:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
 801a1a2:	1206      	asrs	r6, r0, #8
 801a1a4:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	; 0x50
 801a1a8:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801a1ac:	9602      	str	r6, [sp, #8]
 801a1ae:	10c6      	asrs	r6, r0, #3
 801a1b0:	00c0      	lsls	r0, r0, #3
 801a1b2:	b2c0      	uxtb	r0, r0
 801a1b4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801a1b8:	9004      	str	r0, [sp, #16]
 801a1ba:	2f00      	cmp	r7, #0
 801a1bc:	fb07 100c 	mla	r0, r7, ip, r1
 801a1c0:	9603      	str	r6, [sp, #12]
 801a1c2:	eb02 0e00 	add.w	lr, r2, r0
 801a1c6:	f2c0 810a 	blt.w	801a3de <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801a1ca:	45b8      	cmp	r8, r7
 801a1cc:	f340 8107 	ble.w	801a3de <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801a1d0:	2900      	cmp	r1, #0
 801a1d2:	f2c0 8102 	blt.w	801a3da <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801a1d6:	458c      	cmp	ip, r1
 801a1d8:	f340 80ff 	ble.w	801a3da <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801a1dc:	5c12      	ldrb	r2, [r2, r0]
 801a1de:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 801a1e2:	1c4a      	adds	r2, r1, #1
 801a1e4:	f100 80fe 	bmi.w	801a3e4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801a1e8:	4594      	cmp	ip, r2
 801a1ea:	f340 80fb 	ble.w	801a3e4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801a1ee:	2d00      	cmp	r5, #0
 801a1f0:	f000 80fa 	beq.w	801a3e8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 801a1f4:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801a1f8:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 801a1fc:	3701      	adds	r7, #1
 801a1fe:	f100 80f7 	bmi.w	801a3f0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801a202:	45b8      	cmp	r8, r7
 801a204:	f340 80f4 	ble.w	801a3f0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801a208:	2c00      	cmp	r4, #0
 801a20a:	f000 80f4 	beq.w	801a3f6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 801a20e:	2900      	cmp	r1, #0
 801a210:	eb0e 020c 	add.w	r2, lr, ip
 801a214:	f2c0 80ea 	blt.w	801a3ec <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801a218:	458c      	cmp	ip, r1
 801a21a:	f340 80e7 	ble.w	801a3ec <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801a21e:	f81e 700c 	ldrb.w	r7, [lr, ip]
 801a222:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 801a226:	3101      	adds	r1, #1
 801a228:	f100 80e8 	bmi.w	801a3fc <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801a22c:	458c      	cmp	ip, r1
 801a22e:	f340 80e5 	ble.w	801a3fc <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801a232:	2d00      	cmp	r5, #0
 801a234:	f000 80e4 	beq.w	801a400 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 801a238:	7852      	ldrb	r2, [r2, #1]
 801a23a:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801a23e:	0e0b      	lsrs	r3, r1, #24
 801a240:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 801a244:	9300      	str	r3, [sp, #0]
 801a246:	b2a4      	uxth	r4, r4
 801a248:	b2ab      	uxth	r3, r5
 801a24a:	f000 15ff 	and.w	r5, r0, #16711935	; 0xff00ff
 801a24e:	fb03 f904 	mul.w	r9, r3, r4
 801a252:	fb0a f505 	mul.w	r5, sl, r5
 801a256:	011b      	lsls	r3, r3, #4
 801a258:	eba3 0e09 	sub.w	lr, r3, r9
 801a25c:	f5c3 7280 	rsb	r2, r3, #256	; 0x100
 801a260:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 801a264:	0a28      	lsrs	r0, r5, #8
 801a266:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801a26a:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
 801a26e:	4405      	add	r5, r0
 801a270:	0a2d      	lsrs	r5, r5, #8
 801a272:	fb0a f303 	mul.w	r3, sl, r3
 801a276:	f005 10ff 	and.w	r0, r5, #16711935	; 0xff00ff
 801a27a:	9005      	str	r0, [sp, #20]
 801a27c:	f503 7080 	add.w	r0, r3, #256	; 0x100
 801a280:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801a284:	0a1b      	lsrs	r3, r3, #8
 801a286:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 801a28a:	9306      	str	r3, [sp, #24]
 801a28c:	f006 13ff 	and.w	r3, r6, #16711935	; 0xff00ff
 801a290:	fb0b f303 	mul.w	r3, fp, r3
 801a294:	0a1d      	lsrs	r5, r3, #8
 801a296:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801a29a:	ea4f 6817 	mov.w	r8, r7, lsr #24
 801a29e:	fb0b f606 	mul.w	r6, fp, r6
 801a2a2:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 801a2a6:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 801a2aa:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801a2ae:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801a2b2:	fb08 f707 	mul.w	r7, r8, r7
 801a2b6:	441d      	add	r5, r3
 801a2b8:	f506 7380 	add.w	r3, r6, #256	; 0x100
 801a2bc:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801a2c0:	f507 7380 	add.w	r3, r7, #256	; 0x100
 801a2c4:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 801a2c8:	fb08 fc0c 	mul.w	ip, r8, ip
 801a2cc:	0a1b      	lsrs	r3, r3, #8
 801a2ce:	9307      	str	r3, [sp, #28]
 801a2d0:	ea4f 201c 	mov.w	r0, ip, lsr #8
 801a2d4:	0e0b      	lsrs	r3, r1, #24
 801a2d6:	f001 17ff 	and.w	r7, r1, #16711935	; 0xff00ff
 801a2da:	435f      	muls	r7, r3
 801a2dc:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801a2e0:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801a2e4:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 801a2e8:	4460      	add	r0, ip
 801a2ea:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801a2ee:	b2a4      	uxth	r4, r4
 801a2f0:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801a2f4:	0a2d      	lsrs	r5, r5, #8
 801a2f6:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801a2fa:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a2fe:	fa1f fe8e 	uxth.w	lr, lr
 801a302:	4359      	muls	r1, r3
 801a304:	1b12      	subs	r2, r2, r4
 801a306:	9b05      	ldr	r3, [sp, #20]
 801a308:	44bc      	add	ip, r7
 801a30a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801a30e:	b292      	uxth	r2, r2
 801a310:	fb05 f50e 	mul.w	r5, r5, lr
 801a314:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a318:	fb03 5502 	mla	r5, r3, r2, r5
 801a31c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a320:	9b06      	ldr	r3, [sp, #24]
 801a322:	f501 7780 	add.w	r7, r1, #256	; 0x100
 801a326:	0a36      	lsrs	r6, r6, #8
 801a328:	0a00      	lsrs	r0, r0, #8
 801a32a:	fb0c 5509 	mla	r5, ip, r9, r5
 801a32e:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801a332:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801a336:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801a33a:	fb00 5504 	mla	r5, r0, r4, r5
 801a33e:	fb0e f606 	mul.w	r6, lr, r6
 801a342:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 801a346:	0a09      	lsrs	r1, r1, #8
 801a348:	9b07      	ldr	r3, [sp, #28]
 801a34a:	fb02 6000 	mla	r0, r2, r0, r6
 801a34e:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801a352:	fb09 0001 	mla	r0, r9, r1, r0
 801a356:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801a35a:	fb0e fe0b 	mul.w	lr, lr, fp
 801a35e:	fb04 0003 	mla	r0, r4, r3, r0
 801a362:	fb02 e20a 	mla	r2, r2, sl, lr
 801a366:	9b00      	ldr	r3, [sp, #0]
 801a368:	fb04 2408 	mla	r4, r4, r8, r2
 801a36c:	fb09 4903 	mla	r9, r9, r3, r4
 801a370:	ea6f 2929 	mvn.w	r9, r9, asr #8
 801a374:	9b02      	ldr	r3, [sp, #8]
 801a376:	9a04      	ldr	r2, [sp, #16]
 801a378:	fa5f f989 	uxtb.w	r9, r9
 801a37c:	fb03 f109 	mul.w	r1, r3, r9
 801a380:	9b03      	ldr	r3, [sp, #12]
 801a382:	0a2d      	lsrs	r5, r5, #8
 801a384:	0a00      	lsrs	r0, r0, #8
 801a386:	fb03 f309 	mul.w	r3, r3, r9
 801a38a:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801a38e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801a392:	4305      	orrs	r5, r0
 801a394:	fb02 f909 	mul.w	r9, r2, r9
 801a398:	1c58      	adds	r0, r3, #1
 801a39a:	1c4a      	adds	r2, r1, #1
 801a39c:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801a3a0:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801a3a4:	0a2b      	lsrs	r3, r5, #8
 801a3a6:	0c2a      	lsrs	r2, r5, #16
 801a3a8:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801a3ac:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 801a3b0:	00db      	lsls	r3, r3, #3
 801a3b2:	0212      	lsls	r2, r2, #8
 801a3b4:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 801a3b8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801a3bc:	4313      	orrs	r3, r2
 801a3be:	f109 0201 	add.w	r2, r9, #1
 801a3c2:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 801a3c6:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 801a3ca:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801a3ce:	431d      	orrs	r5, r3
 801a3d0:	9b01      	ldr	r3, [sp, #4]
 801a3d2:	801d      	strh	r5, [r3, #0]
 801a3d4:	b009      	add	sp, #36	; 0x24
 801a3d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a3da:	2000      	movs	r0, #0
 801a3dc:	e701      	b.n	801a1e2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 801a3de:	2600      	movs	r6, #0
 801a3e0:	4630      	mov	r0, r6
 801a3e2:	e70b      	b.n	801a1fc <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801a3e4:	2600      	movs	r6, #0
 801a3e6:	e709      	b.n	801a1fc <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801a3e8:	462e      	mov	r6, r5
 801a3ea:	e707      	b.n	801a1fc <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801a3ec:	2700      	movs	r7, #0
 801a3ee:	e71a      	b.n	801a226 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 801a3f0:	2100      	movs	r1, #0
 801a3f2:	460f      	mov	r7, r1
 801a3f4:	e723      	b.n	801a23e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801a3f6:	4621      	mov	r1, r4
 801a3f8:	4627      	mov	r7, r4
 801a3fa:	e720      	b.n	801a23e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801a3fc:	2100      	movs	r1, #0
 801a3fe:	e71e      	b.n	801a23e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801a400:	4629      	mov	r1, r5
 801a402:	e71c      	b.n	801a23e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

0801a404 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a404:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a408:	b09b      	sub	sp, #108	; 0x6c
 801a40a:	9218      	str	r2, [sp, #96]	; 0x60
 801a40c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801a40e:	9116      	str	r1, [sp, #88]	; 0x58
 801a410:	9307      	str	r3, [sp, #28]
 801a412:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 801a416:	9019      	str	r0, [sp, #100]	; 0x64
 801a418:	6850      	ldr	r0, [r2, #4]
 801a41a:	6812      	ldr	r2, [r2, #0]
 801a41c:	9d26      	ldr	r5, [sp, #152]	; 0x98
 801a41e:	fb00 1303 	mla	r3, r0, r3, r1
 801a422:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801a426:	930a      	str	r3, [sp, #40]	; 0x28
 801a428:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801a42a:	681b      	ldr	r3, [r3, #0]
 801a42c:	930f      	str	r3, [sp, #60]	; 0x3c
 801a42e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801a430:	685e      	ldr	r6, [r3, #4]
 801a432:	3604      	adds	r6, #4
 801a434:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801a436:	2b00      	cmp	r3, #0
 801a438:	dc03      	bgt.n	801a442 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801a43a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801a43c:	2b00      	cmp	r3, #0
 801a43e:	f340 8373 	ble.w	801ab28 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801a442:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801a444:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a448:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801a44c:	1e48      	subs	r0, r1, #1
 801a44e:	1e57      	subs	r7, r2, #1
 801a450:	9b07      	ldr	r3, [sp, #28]
 801a452:	2b00      	cmp	r3, #0
 801a454:	f340 8190 	ble.w	801a778 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801a458:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801a45a:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801a45e:	ea4f 4325 	mov.w	r3, r5, asr #16
 801a462:	d406      	bmi.n	801a472 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a464:	4584      	cmp	ip, r0
 801a466:	da04      	bge.n	801a472 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a468:	2b00      	cmp	r3, #0
 801a46a:	db02      	blt.n	801a472 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a46c:	42bb      	cmp	r3, r7
 801a46e:	f2c0 8184 	blt.w	801a77a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 801a472:	f11c 0c01 	adds.w	ip, ip, #1
 801a476:	f100 8172 	bmi.w	801a75e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801a47a:	4561      	cmp	r1, ip
 801a47c:	f2c0 816f 	blt.w	801a75e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801a480:	3301      	adds	r3, #1
 801a482:	f100 816c 	bmi.w	801a75e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801a486:	429a      	cmp	r2, r3
 801a488:	f2c0 8169 	blt.w	801a75e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801a48c:	9b07      	ldr	r3, [sp, #28]
 801a48e:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801a490:	9317      	str	r3, [sp, #92]	; 0x5c
 801a492:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801a494:	2b00      	cmp	r3, #0
 801a496:	f340 818e 	ble.w	801a7b6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 801a49a:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801a49c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801a4a0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801a4a2:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 801a4a6:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801a4a8:	141b      	asrs	r3, r3, #16
 801a4aa:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801a4ae:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801a4b2:	f100 81d1 	bmi.w	801a858 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801a4b6:	f101 38ff 	add.w	r8, r1, #4294967295
 801a4ba:	4543      	cmp	r3, r8
 801a4bc:	f280 81cc 	bge.w	801a858 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801a4c0:	f1bc 0f00 	cmp.w	ip, #0
 801a4c4:	f2c0 81c8 	blt.w	801a858 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801a4c8:	f10e 38ff 	add.w	r8, lr, #4294967295
 801a4cc:	45c4      	cmp	ip, r8
 801a4ce:	f280 81c3 	bge.w	801a858 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801a4d2:	b209      	sxth	r1, r1
 801a4d4:	fb0c 3301 	mla	r3, ip, r1, r3
 801a4d8:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801a4da:	eb04 0803 	add.w	r8, r4, r3
 801a4de:	5ce3      	ldrb	r3, [r4, r3]
 801a4e0:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801a4e4:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801a4e8:	2a00      	cmp	r2, #0
 801a4ea:	f000 81aa 	beq.w	801a842 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 801a4ee:	f898 c001 	ldrb.w	ip, [r8, #1]
 801a4f2:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801a4f6:	940b      	str	r4, [sp, #44]	; 0x2c
 801a4f8:	0e24      	lsrs	r4, r4, #24
 801a4fa:	9412      	str	r4, [sp, #72]	; 0x48
 801a4fc:	b178      	cbz	r0, 801a51e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801a4fe:	eb08 0c01 	add.w	ip, r8, r1
 801a502:	f818 1001 	ldrb.w	r1, [r8, r1]
 801a506:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801a50a:	9108      	str	r1, [sp, #32]
 801a50c:	0e09      	lsrs	r1, r1, #24
 801a50e:	9110      	str	r1, [sp, #64]	; 0x40
 801a510:	f89c 1001 	ldrb.w	r1, [ip, #1]
 801a514:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801a518:	910c      	str	r1, [sp, #48]	; 0x30
 801a51a:	0e09      	lsrs	r1, r1, #24
 801a51c:	9113      	str	r1, [sp, #76]	; 0x4c
 801a51e:	b292      	uxth	r2, r2
 801a520:	b280      	uxth	r0, r0
 801a522:	fb02 f900 	mul.w	r9, r2, r0
 801a526:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801a52a:	0112      	lsls	r2, r2, #4
 801a52c:	eba2 0809 	sub.w	r8, r2, r9
 801a530:	b280      	uxth	r0, r0
 801a532:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801a536:	9912      	ldr	r1, [sp, #72]	; 0x48
 801a538:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801a53a:	fa1f f888 	uxth.w	r8, r8
 801a53e:	1a12      	subs	r2, r2, r0
 801a540:	b292      	uxth	r2, r2
 801a542:	fb08 f101 	mul.w	r1, r8, r1
 801a546:	fb02 110e 	mla	r1, r2, lr, r1
 801a54a:	fb00 1104 	mla	r1, r0, r4, r1
 801a54e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801a550:	fb09 1104 	mla	r1, r9, r4, r1
 801a554:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801a558:	2900      	cmp	r1, #0
 801a55a:	f000 80f5 	beq.w	801a748 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801a55e:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801a562:	d01b      	beq.n	801a59c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a564:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801a568:	fb0e fa0a 	mul.w	sl, lr, sl
 801a56c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801a570:	fb0e fe03 	mul.w	lr, lr, r3
 801a574:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801a578:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801a57c:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801a580:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801a584:	4453      	add	r3, sl
 801a586:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801a58a:	0a1b      	lsrs	r3, r3, #8
 801a58c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a590:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801a594:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801a598:	ea43 030c 	orr.w	r3, r3, ip
 801a59c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801a59e:	2cff      	cmp	r4, #255	; 0xff
 801a5a0:	d021      	beq.n	801a5e6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 801a5a2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801a5a4:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801a5a8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801a5aa:	fb04 fb0b 	mul.w	fp, r4, fp
 801a5ae:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801a5b0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801a5b4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801a5b6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801a5ba:	fb04 fa0a 	mul.w	sl, r4, sl
 801a5be:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a5c2:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801a5c6:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801a5ca:	44de      	add	lr, fp
 801a5cc:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801a5d0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801a5d4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a5d8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a5dc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a5e0:	ea4e 040a 	orr.w	r4, lr, sl
 801a5e4:	940b      	str	r4, [sp, #44]	; 0x2c
 801a5e6:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801a5e8:	2cff      	cmp	r4, #255	; 0xff
 801a5ea:	d021      	beq.n	801a630 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 801a5ec:	9c08      	ldr	r4, [sp, #32]
 801a5ee:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801a5f2:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801a5f4:	fb04 fb0b 	mul.w	fp, r4, fp
 801a5f8:	9c08      	ldr	r4, [sp, #32]
 801a5fa:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801a5fe:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801a600:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801a604:	fb04 fa0a 	mul.w	sl, r4, sl
 801a608:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a60c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801a610:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801a614:	44de      	add	lr, fp
 801a616:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801a61a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801a61e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a622:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a626:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a62a:	ea4e 040a 	orr.w	r4, lr, sl
 801a62e:	9408      	str	r4, [sp, #32]
 801a630:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801a632:	2cff      	cmp	r4, #255	; 0xff
 801a634:	d021      	beq.n	801a67a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801a636:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801a638:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801a63c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801a63e:	fb04 fb0b 	mul.w	fp, r4, fp
 801a642:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801a644:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801a648:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801a64a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801a64e:	fb04 fa0a 	mul.w	sl, r4, sl
 801a652:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a656:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801a65a:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801a65e:	44de      	add	lr, fp
 801a660:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801a664:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801a668:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a66c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a670:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a674:	ea4e 040a 	orr.w	r4, lr, sl
 801a678:	940c      	str	r4, [sp, #48]	; 0x30
 801a67a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801a67c:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801a680:	9c08      	ldr	r4, [sp, #32]
 801a682:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 801a686:	fb08 fc0c 	mul.w	ip, r8, ip
 801a68a:	fb02 cc0e 	mla	ip, r2, lr, ip
 801a68e:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801a692:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801a694:	fb00 cc0e 	mla	ip, r0, lr, ip
 801a698:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801a69c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801a69e:	fb09 cc0e 	mla	ip, r9, lr, ip
 801a6a2:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 801a6a6:	fb08 f80e 	mul.w	r8, r8, lr
 801a6aa:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801a6ae:	fb02 8303 	mla	r3, r2, r3, r8
 801a6b2:	9a08      	ldr	r2, [sp, #32]
 801a6b4:	f8b7 8000 	ldrh.w	r8, [r7]
 801a6b8:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801a6bc:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801a6be:	fb00 330a 	mla	r3, r0, sl, r3
 801a6c2:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 801a6c6:	fb09 3900 	mla	r9, r9, r0, r3
 801a6ca:	43c9      	mvns	r1, r1
 801a6cc:	ea4f 2228 	mov.w	r2, r8, asr #8
 801a6d0:	fa5f fe81 	uxtb.w	lr, r1
 801a6d4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a6d8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801a6dc:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801a6e0:	fb02 f20e 	mul.w	r2, r2, lr
 801a6e4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a6e8:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801a6ec:	ea4c 0c09 	orr.w	ip, ip, r9
 801a6f0:	1c53      	adds	r3, r2, #1
 801a6f2:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 801a6f6:	ea4f 00e8 	mov.w	r0, r8, asr #3
 801a6fa:	ea4f 431c 	mov.w	r3, ip, lsr #16
 801a6fe:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801a702:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801a706:	4a63      	ldr	r2, [pc, #396]	; (801a894 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 801a708:	fb00 f00e 	mul.w	r0, r0, lr
 801a70c:	b2db      	uxtb	r3, r3
 801a70e:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 801a712:	1c43      	adds	r3, r0, #1
 801a714:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801a718:	ea4f 231c 	mov.w	r3, ip, lsr #8
 801a71c:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 801a720:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801a724:	b2c9      	uxtb	r1, r1
 801a726:	00db      	lsls	r3, r3, #3
 801a728:	fb01 f10e 	mul.w	r1, r1, lr
 801a72c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801a730:	4313      	orrs	r3, r2
 801a732:	1c4a      	adds	r2, r1, #1
 801a734:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801a738:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801a73c:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801a740:	ea4c 0c03 	orr.w	ip, ip, r3
 801a744:	f8a7 c000 	strh.w	ip, [r7]
 801a748:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801a74a:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801a74c:	441a      	add	r2, r3
 801a74e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801a750:	9225      	str	r2, [sp, #148]	; 0x94
 801a752:	441d      	add	r5, r3
 801a754:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801a756:	3b01      	subs	r3, #1
 801a758:	3702      	adds	r7, #2
 801a75a:	9317      	str	r3, [sp, #92]	; 0x5c
 801a75c:	e699      	b.n	801a492 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801a75e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801a760:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801a762:	441c      	add	r4, r3
 801a764:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801a766:	9425      	str	r4, [sp, #148]	; 0x94
 801a768:	441d      	add	r5, r3
 801a76a:	9b07      	ldr	r3, [sp, #28]
 801a76c:	3b01      	subs	r3, #1
 801a76e:	9307      	str	r3, [sp, #28]
 801a770:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a772:	3302      	adds	r3, #2
 801a774:	930a      	str	r3, [sp, #40]	; 0x28
 801a776:	e66b      	b.n	801a450 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801a778:	d024      	beq.n	801a7c4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 801a77a:	9b07      	ldr	r3, [sp, #28]
 801a77c:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801a77e:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801a780:	3b01      	subs	r3, #1
 801a782:	fb00 4003 	mla	r0, r0, r3, r4
 801a786:	1400      	asrs	r0, r0, #16
 801a788:	f53f ae80 	bmi.w	801a48c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801a78c:	3901      	subs	r1, #1
 801a78e:	4288      	cmp	r0, r1
 801a790:	f6bf ae7c 	bge.w	801a48c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801a794:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801a796:	fb01 5303 	mla	r3, r1, r3, r5
 801a79a:	141b      	asrs	r3, r3, #16
 801a79c:	f53f ae76 	bmi.w	801a48c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801a7a0:	3a01      	subs	r2, #1
 801a7a2:	4293      	cmp	r3, r2
 801a7a4:	f6bf ae72 	bge.w	801a48c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801a7a8:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801a7ac:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 801a7b0:	f1bb 0f00 	cmp.w	fp, #0
 801a7b4:	dc70      	bgt.n	801a898 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801a7b6:	9b07      	ldr	r3, [sp, #28]
 801a7b8:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801a7bc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a7be:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801a7c2:	930a      	str	r3, [sp, #40]	; 0x28
 801a7c4:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801a7c6:	2b00      	cmp	r3, #0
 801a7c8:	f340 81ae 	ble.w	801ab28 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801a7cc:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a7d0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801a7d4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801a7d8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801a7da:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a7de:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a7e2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a7e6:	eef0 6a62 	vmov.f32	s13, s5
 801a7ea:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a7ee:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a7f2:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a7f6:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 801a7fa:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a7fe:	eef0 6a43 	vmov.f32	s13, s6
 801a802:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a806:	ee12 2a90 	vmov	r2, s5
 801a80a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a80e:	fb92 f3f3 	sdiv	r3, r2, r3
 801a812:	ee13 2a10 	vmov	r2, s6
 801a816:	9327      	str	r3, [sp, #156]	; 0x9c
 801a818:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801a81a:	fb92 f3f3 	sdiv	r3, r2, r3
 801a81e:	9328      	str	r3, [sp, #160]	; 0xa0
 801a820:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801a822:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801a824:	3b01      	subs	r3, #1
 801a826:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a82a:	9316      	str	r3, [sp, #88]	; 0x58
 801a82c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801a82e:	bf08      	it	eq
 801a830:	4613      	moveq	r3, r2
 801a832:	ee16 5a90 	vmov	r5, s13
 801a836:	9307      	str	r3, [sp, #28]
 801a838:	eeb0 3a67 	vmov.f32	s6, s15
 801a83c:	eef0 2a47 	vmov.f32	s5, s14
 801a840:	e5f8      	b.n	801a434 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801a842:	2800      	cmp	r0, #0
 801a844:	f43f ae6b 	beq.w	801a51e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801a848:	f818 1001 	ldrb.w	r1, [r8, r1]
 801a84c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801a850:	9108      	str	r1, [sp, #32]
 801a852:	0e09      	lsrs	r1, r1, #24
 801a854:	9110      	str	r1, [sp, #64]	; 0x40
 801a856:	e662      	b.n	801a51e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801a858:	f113 0801 	adds.w	r8, r3, #1
 801a85c:	f53f af74 	bmi.w	801a748 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801a860:	4541      	cmp	r1, r8
 801a862:	f6ff af71 	blt.w	801a748 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801a866:	f11c 0801 	adds.w	r8, ip, #1
 801a86a:	f53f af6d 	bmi.w	801a748 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801a86e:	45c6      	cmp	lr, r8
 801a870:	f6ff af6a 	blt.w	801a748 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801a874:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 801a878:	b209      	sxth	r1, r1
 801a87a:	fa0f f38e 	sxth.w	r3, lr
 801a87e:	e9cd 2004 	strd	r2, r0, [sp, #16]
 801a882:	9301      	str	r3, [sp, #4]
 801a884:	9100      	str	r1, [sp, #0]
 801a886:	4633      	mov	r3, r6
 801a888:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801a88a:	9819      	ldr	r0, [sp, #100]	; 0x64
 801a88c:	4639      	mov	r1, r7
 801a88e:	f7ff fc7a 	bl	801a186 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 801a892:	e759      	b.n	801a748 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801a894:	fffff800 	.word	0xfffff800
 801a898:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801a89a:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801a89c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801a8a0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801a8a2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a8a6:	1427      	asrs	r7, r4, #16
 801a8a8:	142b      	asrs	r3, r5, #16
 801a8aa:	fb01 7303 	mla	r3, r1, r3, r7
 801a8ae:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801a8b0:	18e7      	adds	r7, r4, r3
 801a8b2:	5ce3      	ldrb	r3, [r4, r3]
 801a8b4:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801a8b8:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801a8bc:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801a8c0:	2a00      	cmp	r2, #0
 801a8c2:	f000 8127 	beq.w	801ab14 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801a8c6:	f897 e001 	ldrb.w	lr, [r7, #1]
 801a8ca:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801a8ce:	940d      	str	r4, [sp, #52]	; 0x34
 801a8d0:	0e24      	lsrs	r4, r4, #24
 801a8d2:	9414      	str	r4, [sp, #80]	; 0x50
 801a8d4:	b170      	cbz	r0, 801a8f4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801a8d6:	eb07 0e01 	add.w	lr, r7, r1
 801a8da:	5c79      	ldrb	r1, [r7, r1]
 801a8dc:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801a8e0:	9109      	str	r1, [sp, #36]	; 0x24
 801a8e2:	0e09      	lsrs	r1, r1, #24
 801a8e4:	9111      	str	r1, [sp, #68]	; 0x44
 801a8e6:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801a8ea:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801a8ee:	910e      	str	r1, [sp, #56]	; 0x38
 801a8f0:	0e09      	lsrs	r1, r1, #24
 801a8f2:	9115      	str	r1, [sp, #84]	; 0x54
 801a8f4:	b292      	uxth	r2, r2
 801a8f6:	b280      	uxth	r0, r0
 801a8f8:	fb02 f800 	mul.w	r8, r2, r0
 801a8fc:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801a900:	0112      	lsls	r2, r2, #4
 801a902:	eba2 0e08 	sub.w	lr, r2, r8
 801a906:	b280      	uxth	r0, r0
 801a908:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 801a90c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a90e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801a910:	fa1f fe8e 	uxth.w	lr, lr
 801a914:	1a09      	subs	r1, r1, r0
 801a916:	b289      	uxth	r1, r1
 801a918:	fb0e f202 	mul.w	r2, lr, r2
 801a91c:	fb01 220c 	mla	r2, r1, ip, r2
 801a920:	fb00 2204 	mla	r2, r0, r4, r2
 801a924:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801a926:	fb08 2204 	mla	r2, r8, r4, r2
 801a92a:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801a92e:	2a00      	cmp	r2, #0
 801a930:	f000 80e5 	beq.w	801aafe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 801a934:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801a938:	d019      	beq.n	801a96e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 801a93a:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801a93e:	fb0c fa0a 	mul.w	sl, ip, sl
 801a942:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801a946:	fb0c fc03 	mul.w	ip, ip, r3
 801a94a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801a94e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801a952:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801a956:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801a95a:	4453      	add	r3, sl
 801a95c:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801a960:	0a1b      	lsrs	r3, r3, #8
 801a962:	0a3f      	lsrs	r7, r7, #8
 801a964:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801a968:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801a96c:	433b      	orrs	r3, r7
 801a96e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801a970:	2cff      	cmp	r4, #255	; 0xff
 801a972:	d020      	beq.n	801a9b6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 801a974:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801a976:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801a97a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801a97c:	4367      	muls	r7, r4
 801a97e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801a980:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801a984:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801a986:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801a98a:	fb04 fa0a 	mul.w	sl, r4, sl
 801a98e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801a992:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a996:	44bc      	add	ip, r7
 801a998:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801a99c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801a9a0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a9a4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a9a8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a9ac:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a9b0:	ea4c 040a 	orr.w	r4, ip, sl
 801a9b4:	940d      	str	r4, [sp, #52]	; 0x34
 801a9b6:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801a9b8:	2cff      	cmp	r4, #255	; 0xff
 801a9ba:	d020      	beq.n	801a9fe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 801a9bc:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801a9be:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801a9c2:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801a9c4:	4367      	muls	r7, r4
 801a9c6:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801a9c8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801a9cc:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801a9ce:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801a9d2:	fb04 fa0a 	mul.w	sl, r4, sl
 801a9d6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801a9da:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a9de:	44bc      	add	ip, r7
 801a9e0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801a9e4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801a9e8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a9ec:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a9f0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a9f4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a9f8:	ea4c 040a 	orr.w	r4, ip, sl
 801a9fc:	9409      	str	r4, [sp, #36]	; 0x24
 801a9fe:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801aa00:	2cff      	cmp	r4, #255	; 0xff
 801aa02:	d020      	beq.n	801aa46 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 801aa04:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801aa06:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801aa0a:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801aa0c:	4367      	muls	r7, r4
 801aa0e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801aa10:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801aa14:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801aa16:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801aa1a:	fb04 fa0a 	mul.w	sl, r4, sl
 801aa1e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801aa22:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801aa26:	44bc      	add	ip, r7
 801aa28:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801aa2c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801aa30:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801aa34:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801aa38:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801aa3c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801aa40:	ea4c 040a 	orr.w	r4, ip, sl
 801aa44:	940e      	str	r4, [sp, #56]	; 0x38
 801aa46:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801aa48:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801aa4c:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801aa4e:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801aa52:	fb0e f707 	mul.w	r7, lr, r7
 801aa56:	fb01 770c 	mla	r7, r1, ip, r7
 801aa5a:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801aa5e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801aa60:	fb00 770c 	mla	r7, r0, ip, r7
 801aa64:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801aa68:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801aa6a:	fb08 770c 	mla	r7, r8, ip, r7
 801aa6e:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 801aa72:	fb0e fe0c 	mul.w	lr, lr, ip
 801aa76:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801aa7a:	fb01 e303 	mla	r3, r1, r3, lr
 801aa7e:	9909      	ldr	r1, [sp, #36]	; 0x24
 801aa80:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801aa84:	990e      	ldr	r1, [sp, #56]	; 0x38
 801aa86:	fb00 330a 	mla	r3, r0, sl, r3
 801aa8a:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 801aa8e:	fb08 3c0c 	mla	ip, r8, ip, r3
 801aa92:	f8b9 3000 	ldrh.w	r3, [r9]
 801aa96:	43d2      	mvns	r2, r2
 801aa98:	1218      	asrs	r0, r3, #8
 801aa9a:	b2d2      	uxtb	r2, r2
 801aa9c:	10d9      	asrs	r1, r3, #3
 801aa9e:	0a3f      	lsrs	r7, r7, #8
 801aaa0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801aaa4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801aaa8:	00db      	lsls	r3, r3, #3
 801aaaa:	4350      	muls	r0, r2
 801aaac:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801aab0:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801aab4:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801aab8:	b2db      	uxtb	r3, r3
 801aaba:	ea47 070c 	orr.w	r7, r7, ip
 801aabe:	4351      	muls	r1, r2
 801aac0:	4353      	muls	r3, r2
 801aac2:	1c42      	adds	r2, r0, #1
 801aac4:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801aac8:	0c3a      	lsrs	r2, r7, #16
 801aaca:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801aace:	4a18      	ldr	r2, [pc, #96]	; (801ab30 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 801aad0:	b2c0      	uxtb	r0, r0
 801aad2:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 801aad6:	1c4a      	adds	r2, r1, #1
 801aad8:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801aadc:	0a3a      	lsrs	r2, r7, #8
 801aade:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801aae2:	00c9      	lsls	r1, r1, #3
 801aae4:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801aae8:	4301      	orrs	r1, r0
 801aaea:	1c58      	adds	r0, r3, #1
 801aaec:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801aaf0:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801aaf4:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 801aaf8:	4308      	orrs	r0, r1
 801aafa:	f8a9 0000 	strh.w	r0, [r9]
 801aafe:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801ab00:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801ab02:	441a      	add	r2, r3
 801ab04:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ab06:	9225      	str	r2, [sp, #148]	; 0x94
 801ab08:	f109 0902 	add.w	r9, r9, #2
 801ab0c:	441d      	add	r5, r3
 801ab0e:	f10b 3bff 	add.w	fp, fp, #4294967295
 801ab12:	e64d      	b.n	801a7b0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 801ab14:	2800      	cmp	r0, #0
 801ab16:	f43f aeed 	beq.w	801a8f4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801ab1a:	5c79      	ldrb	r1, [r7, r1]
 801ab1c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801ab20:	9109      	str	r1, [sp, #36]	; 0x24
 801ab22:	0e09      	lsrs	r1, r1, #24
 801ab24:	9111      	str	r1, [sp, #68]	; 0x44
 801ab26:	e6e5      	b.n	801a8f4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801ab28:	b01b      	add	sp, #108	; 0x6c
 801ab2a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ab2e:	bf00      	nop
 801ab30:	fffff800 	.word	0xfffff800

0801ab34 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 801ab34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ab38:	b085      	sub	sp, #20
 801ab3a:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 801ab3e:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 801ab42:	9103      	str	r1, [sp, #12]
 801ab44:	fb00 7406 	mla	r4, r0, r6, r7
 801ab48:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 801ab4c:	2800      	cmp	r0, #0
 801ab4e:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 801ab52:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 801ab56:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 801ab5a:	9501      	str	r5, [sp, #4]
 801ab5c:	eb03 0904 	add.w	r9, r3, r4
 801ab60:	f2c0 8150 	blt.w	801ae04 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801ab64:	4583      	cmp	fp, r0
 801ab66:	f340 814d 	ble.w	801ae04 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801ab6a:	2f00      	cmp	r7, #0
 801ab6c:	f2c0 8146 	blt.w	801adfc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801ab70:	42be      	cmp	r6, r7
 801ab72:	f340 8143 	ble.w	801adfc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801ab76:	f813 c004 	ldrb.w	ip, [r3, r4]
 801ab7a:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 801ab7e:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801ab82:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 801ab86:	4355      	muls	r5, r2
 801ab88:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ab8c:	f64f 041f 	movw	r4, #63519	; 0xf81f
 801ab90:	fb0c f203 	mul.w	r2, ip, r3
 801ab94:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801ab98:	f605 0501 	addw	r5, r5, #2049	; 0x801
 801ab9c:	441d      	add	r5, r3
 801ab9e:	f102 0320 	add.w	r3, r2, #32
 801aba2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801aba6:	0a1b      	lsrs	r3, r3, #8
 801aba8:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801abac:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801abb0:	431c      	orrs	r4, r3
 801abb2:	1c7b      	adds	r3, r7, #1
 801abb4:	f100 812b 	bmi.w	801ae0e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801abb8:	429e      	cmp	r6, r3
 801abba:	f340 8128 	ble.w	801ae0e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801abbe:	2900      	cmp	r1, #0
 801abc0:	f000 8128 	beq.w	801ae14 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 801abc4:	9a01      	ldr	r2, [sp, #4]
 801abc6:	f899 3001 	ldrb.w	r3, [r9, #1]
 801abca:	8855      	ldrh	r5, [r2, #2]
 801abcc:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801abd0:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 801abd4:	fb08 f802 	mul.w	r8, r8, r2
 801abd8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801abdc:	f64f 021f 	movw	r2, #63519	; 0xf81f
 801abe0:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801abe4:	435d      	muls	r5, r3
 801abe6:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801abea:	44d0      	add	r8, sl
 801abec:	f105 0a20 	add.w	sl, r5, #32
 801abf0:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801abf4:	0a2d      	lsrs	r5, r5, #8
 801abf6:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801abfa:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801abfe:	432a      	orrs	r2, r5
 801ac00:	3001      	adds	r0, #1
 801ac02:	f100 810d 	bmi.w	801ae20 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 801ac06:	4583      	cmp	fp, r0
 801ac08:	f340 810a 	ble.w	801ae20 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 801ac0c:	f1be 0f00 	cmp.w	lr, #0
 801ac10:	f000 810b 	beq.w	801ae2a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 801ac14:	2f00      	cmp	r7, #0
 801ac16:	f2c0 8100 	blt.w	801ae1a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 801ac1a:	42be      	cmp	r6, r7
 801ac1c:	f340 80fd 	ble.w	801ae1a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 801ac20:	9801      	ldr	r0, [sp, #4]
 801ac22:	f819 5006 	ldrb.w	r5, [r9, r6]
 801ac26:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801ac2a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801ac2e:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 801ac32:	fb0a fa00 	mul.w	sl, sl, r0
 801ac36:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 801ac3a:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801ac3e:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 801ac42:	fb05 f808 	mul.w	r8, r5, r8
 801ac46:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 801ac4a:	4482      	add	sl, r0
 801ac4c:	f108 0020 	add.w	r0, r8, #32
 801ac50:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801ac54:	0a00      	lsrs	r0, r0, #8
 801ac56:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801ac5a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801ac5e:	ea4b 0b00 	orr.w	fp, fp, r0
 801ac62:	3701      	adds	r7, #1
 801ac64:	f100 80e6 	bmi.w	801ae34 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801ac68:	42be      	cmp	r6, r7
 801ac6a:	f340 80e3 	ble.w	801ae34 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801ac6e:	2900      	cmp	r1, #0
 801ac70:	f000 80e3 	beq.w	801ae3a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 801ac74:	3601      	adds	r6, #1
 801ac76:	9801      	ldr	r0, [sp, #4]
 801ac78:	f819 7006 	ldrb.w	r7, [r9, r6]
 801ac7c:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801ac80:	ea4f 09e7 	mov.w	r9, r7, asr #3
 801ac84:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 801ac88:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801ac8c:	fb09 f906 	mul.w	r9, r9, r6
 801ac90:	fb07 f800 	mul.w	r8, r7, r0
 801ac94:	f64f 001f 	movw	r0, #63519	; 0xf81f
 801ac98:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801ac9c:	f609 0901 	addw	r9, r9, #2049	; 0x801
 801aca0:	44d1      	add	r9, sl
 801aca2:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801aca6:	f108 0020 	add.w	r0, r8, #32
 801acaa:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801acae:	0a00      	lsrs	r0, r0, #8
 801acb0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801acb4:	4330      	orrs	r0, r6
 801acb6:	b28e      	uxth	r6, r1
 801acb8:	fa1f f98e 	uxth.w	r9, lr
 801acbc:	fb06 f809 	mul.w	r8, r6, r9
 801acc0:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 801acc4:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801acc8:	0136      	lsls	r6, r6, #4
 801acca:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801acce:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801acd2:	9601      	str	r6, [sp, #4]
 801acd4:	ea4a 0404 	orr.w	r4, sl, r4
 801acd8:	fa1f f689 	uxth.w	r6, r9
 801acdc:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801ace0:	fb11 f90e 	smulbb	r9, r1, lr
 801ace4:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 801ace8:	9602      	str	r6, [sp, #8]
 801acea:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801acee:	4626      	mov	r6, r4
 801acf0:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801acf4:	f1ce 0410 	rsb	r4, lr, #16
 801acf8:	1a64      	subs	r4, r4, r1
 801acfa:	ea4a 0202 	orr.w	r2, sl, r2
 801acfe:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801ad02:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801ad06:	434a      	muls	r2, r1
 801ad08:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801ad0c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801ad10:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801ad14:	fb04 2406 	mla	r4, r4, r6, r2
 801ad18:	ea4a 0000 	orr.w	r0, sl, r0
 801ad1c:	fb09 4200 	mla	r2, r9, r0, r4
 801ad20:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801ad24:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801ad28:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801ad2c:	ea44 0b0b 	orr.w	fp, r4, fp
 801ad30:	9c01      	ldr	r4, [sp, #4]
 801ad32:	9e02      	ldr	r6, [sp, #8]
 801ad34:	9903      	ldr	r1, [sp, #12]
 801ad36:	f5c4 7480 	rsb	r4, r4, #256	; 0x100
 801ad3a:	1ba4      	subs	r4, r4, r6
 801ad3c:	9e01      	ldr	r6, [sp, #4]
 801ad3e:	8808      	ldrh	r0, [r1, #0]
 801ad40:	f89d 1050 	ldrb.w	r1, [sp, #80]	; 0x50
 801ad44:	eba6 0608 	sub.w	r6, r6, r8
 801ad48:	b2b6      	uxth	r6, r6
 801ad4a:	b2a4      	uxth	r4, r4
 801ad4c:	4373      	muls	r3, r6
 801ad4e:	fb0c 3304 	mla	r3, ip, r4, r3
 801ad52:	9c02      	ldr	r4, [sp, #8]
 801ad54:	fb04 3505 	mla	r5, r4, r5, r3
 801ad58:	fb08 5707 	mla	r7, r8, r7, r5
 801ad5c:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801ad60:	b289      	uxth	r1, r1
 801ad62:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801ad66:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801ad6a:	434f      	muls	r7, r1
 801ad6c:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801ad70:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801ad74:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ad78:	1c7b      	adds	r3, r7, #1
 801ad7a:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801ad7e:	ea42 0e0e 	orr.w	lr, r2, lr
 801ad82:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801ad86:	fa1f f28e 	uxth.w	r2, lr
 801ad8a:	1203      	asrs	r3, r0, #8
 801ad8c:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 801ad90:	b2ff      	uxtb	r7, r7
 801ad92:	1215      	asrs	r5, r2, #8
 801ad94:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801ad98:	fb13 f307 	smulbb	r3, r3, r7
 801ad9c:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801ada0:	fb05 3501 	mla	r5, r5, r1, r3
 801ada4:	10c3      	asrs	r3, r0, #3
 801ada6:	10d4      	asrs	r4, r2, #3
 801ada8:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801adac:	fb13 f307 	smulbb	r3, r3, r7
 801adb0:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 801adb4:	fb04 3401 	mla	r4, r4, r1, r3
 801adb8:	00c3      	lsls	r3, r0, #3
 801adba:	00d2      	lsls	r2, r2, #3
 801adbc:	b2db      	uxtb	r3, r3
 801adbe:	fb13 f307 	smulbb	r3, r3, r7
 801adc2:	b2d2      	uxtb	r2, r2
 801adc4:	fb02 3101 	mla	r1, r2, r1, r3
 801adc8:	b2ad      	uxth	r5, r5
 801adca:	b289      	uxth	r1, r1
 801adcc:	b2a4      	uxth	r4, r4
 801adce:	1c6b      	adds	r3, r5, #1
 801add0:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801add4:	1c62      	adds	r2, r4, #1
 801add6:	1c4b      	adds	r3, r1, #1
 801add8:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801addc:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801ade0:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801ade4:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801ade8:	0964      	lsrs	r4, r4, #5
 801adea:	432b      	orrs	r3, r5
 801adec:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801adf0:	9a03      	ldr	r2, [sp, #12]
 801adf2:	4323      	orrs	r3, r4
 801adf4:	8013      	strh	r3, [r2, #0]
 801adf6:	b005      	add	sp, #20
 801adf8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801adfc:	f04f 0c00 	mov.w	ip, #0
 801ae00:	4664      	mov	r4, ip
 801ae02:	e6d6      	b.n	801abb2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 801ae04:	2300      	movs	r3, #0
 801ae06:	469c      	mov	ip, r3
 801ae08:	461a      	mov	r2, r3
 801ae0a:	461c      	mov	r4, r3
 801ae0c:	e6f8      	b.n	801ac00 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801ae0e:	2300      	movs	r3, #0
 801ae10:	461a      	mov	r2, r3
 801ae12:	e6f5      	b.n	801ac00 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801ae14:	460b      	mov	r3, r1
 801ae16:	460a      	mov	r2, r1
 801ae18:	e6f2      	b.n	801ac00 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801ae1a:	2500      	movs	r5, #0
 801ae1c:	46ab      	mov	fp, r5
 801ae1e:	e720      	b.n	801ac62 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 801ae20:	2700      	movs	r7, #0
 801ae22:	463d      	mov	r5, r7
 801ae24:	4638      	mov	r0, r7
 801ae26:	46bb      	mov	fp, r7
 801ae28:	e745      	b.n	801acb6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801ae2a:	4677      	mov	r7, lr
 801ae2c:	4675      	mov	r5, lr
 801ae2e:	4670      	mov	r0, lr
 801ae30:	46f3      	mov	fp, lr
 801ae32:	e740      	b.n	801acb6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801ae34:	2700      	movs	r7, #0
 801ae36:	4638      	mov	r0, r7
 801ae38:	e73d      	b.n	801acb6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801ae3a:	460f      	mov	r7, r1
 801ae3c:	4608      	mov	r0, r1
 801ae3e:	e73a      	b.n	801acb6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

0801ae40 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ae40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ae44:	b097      	sub	sp, #92	; 0x5c
 801ae46:	9214      	str	r2, [sp, #80]	; 0x50
 801ae48:	9308      	str	r3, [sp, #32]
 801ae4a:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801ae4c:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801ae50:	9312      	str	r3, [sp, #72]	; 0x48
 801ae52:	9111      	str	r1, [sp, #68]	; 0x44
 801ae54:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 801ae58:	9015      	str	r0, [sp, #84]	; 0x54
 801ae5a:	6850      	ldr	r0, [r2, #4]
 801ae5c:	6812      	ldr	r2, [r2, #0]
 801ae5e:	fb00 1303 	mla	r3, r0, r3, r1
 801ae62:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801ae66:	9309      	str	r3, [sp, #36]	; 0x24
 801ae68:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ae6a:	681b      	ldr	r3, [r3, #0]
 801ae6c:	930b      	str	r3, [sp, #44]	; 0x2c
 801ae6e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ae70:	685b      	ldr	r3, [r3, #4]
 801ae72:	930c      	str	r3, [sp, #48]	; 0x30
 801ae74:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 801ae78:	930a      	str	r3, [sp, #40]	; 0x28
 801ae7a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801ae7c:	2b00      	cmp	r3, #0
 801ae7e:	dc03      	bgt.n	801ae88 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801ae80:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801ae82:	2b00      	cmp	r3, #0
 801ae84:	f340 83cb 	ble.w	801b61e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 801ae88:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ae8a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ae8e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801ae92:	1e48      	subs	r0, r1, #1
 801ae94:	1e55      	subs	r5, r2, #1
 801ae96:	9b08      	ldr	r3, [sp, #32]
 801ae98:	2b00      	cmp	r3, #0
 801ae9a:	f340 81a3 	ble.w	801b1e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 801ae9e:	9e21      	ldr	r6, [sp, #132]	; 0x84
 801aea0:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801aea2:	1436      	asrs	r6, r6, #16
 801aea4:	ea4f 4323 	mov.w	r3, r3, asr #16
 801aea8:	d406      	bmi.n	801aeb8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801aeaa:	4286      	cmp	r6, r0
 801aeac:	da04      	bge.n	801aeb8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801aeae:	2b00      	cmp	r3, #0
 801aeb0:	db02      	blt.n	801aeb8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801aeb2:	42ab      	cmp	r3, r5
 801aeb4:	f2c0 8197 	blt.w	801b1e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801aeb8:	3601      	adds	r6, #1
 801aeba:	f100 8184 	bmi.w	801b1c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801aebe:	42b1      	cmp	r1, r6
 801aec0:	f2c0 8181 	blt.w	801b1c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801aec4:	3301      	adds	r3, #1
 801aec6:	f100 817e 	bmi.w	801b1c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801aeca:	429a      	cmp	r2, r3
 801aecc:	f2c0 817b 	blt.w	801b1c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801aed0:	9b08      	ldr	r3, [sp, #32]
 801aed2:	9f09      	ldr	r7, [sp, #36]	; 0x24
 801aed4:	9313      	str	r3, [sp, #76]	; 0x4c
 801aed6:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801aeda:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801aedc:	2b00      	cmp	r3, #0
 801aede:	f340 81a4 	ble.w	801b22a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801aee2:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801aee4:	9d21      	ldr	r5, [sp, #132]	; 0x84
 801aee6:	1418      	asrs	r0, r3, #16
 801aee8:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801aeea:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801aeee:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801aef0:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801aef4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801aef6:	142d      	asrs	r5, r5, #16
 801aef8:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801aefc:	f100 81f8 	bmi.w	801b2f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801af00:	f102 3eff 	add.w	lr, r2, #4294967295
 801af04:	4575      	cmp	r5, lr
 801af06:	f280 81f3 	bge.w	801b2f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801af0a:	2800      	cmp	r0, #0
 801af0c:	f2c0 81f0 	blt.w	801b2f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801af10:	f103 3eff 	add.w	lr, r3, #4294967295
 801af14:	4570      	cmp	r0, lr
 801af16:	f280 81eb 	bge.w	801b2f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801af1a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801af1c:	b212      	sxth	r2, r2
 801af1e:	fb00 5002 	mla	r0, r0, r2, r5
 801af22:	fa1f fe81 	uxth.w	lr, r1
 801af26:	eb03 0a00 	add.w	sl, r3, r0
 801af2a:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801af2e:	f813 9000 	ldrb.w	r9, [r3, r0]
 801af32:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801af36:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 801af3a:	b29b      	uxth	r3, r3
 801af3c:	f1bc 0f00 	cmp.w	ip, #0
 801af40:	f000 81b9 	beq.w	801b2b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 801af44:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801af48:	940d      	str	r4, [sp, #52]	; 0x34
 801af4a:	eb0a 0b02 	add.w	fp, sl, r2
 801af4e:	fa1f fa8c 	uxth.w	sl, ip
 801af52:	fb0a fe0e 	mul.w	lr, sl, lr
 801af56:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801af5a:	fa1f fa8a 	uxth.w	sl, sl
 801af5e:	eba5 050e 	sub.w	r5, r5, lr
 801af62:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801af66:	940e      	str	r4, [sp, #56]	; 0x38
 801af68:	eba3 030a 	sub.w	r3, r3, sl
 801af6c:	b2ad      	uxth	r5, r5
 801af6e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801af70:	b29b      	uxth	r3, r3
 801af72:	fb08 f505 	mul.w	r5, r8, r5
 801af76:	fb09 5303 	mla	r3, r9, r3, r5
 801af7a:	fb0a 3304 	mla	r3, sl, r4, r3
 801af7e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801af80:	fb0e 3304 	mla	r3, lr, r4, r3
 801af84:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801af88:	2b00      	cmp	r3, #0
 801af8a:	f000 810f 	beq.w	801b1ac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801af8e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801af90:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801af94:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801af98:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801af9c:	f000 8190 	beq.w	801b2c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 801afa0:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801afa4:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801afa8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801afac:	fb09 f000 	mul.w	r0, r9, r0
 801afb0:	fb0a fe0e 	mul.w	lr, sl, lr
 801afb4:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801afb8:	f100 0b20 	add.w	fp, r0, #32
 801afbc:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801afc0:	44ce      	add	lr, r9
 801afc2:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801afc6:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801afca:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801afce:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801afd2:	ea4e 0909 	orr.w	r9, lr, r9
 801afd6:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801afda:	8868      	ldrh	r0, [r5, #2]
 801afdc:	d019      	beq.n	801b012 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801afde:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801afe2:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801afe6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801afea:	fb08 f800 	mul.w	r8, r8, r0
 801afee:	fb0a fe0e 	mul.w	lr, sl, lr
 801aff2:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801aff6:	f108 0b20 	add.w	fp, r8, #32
 801affa:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801affe:	4486      	add	lr, r0
 801b000:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801b004:	0a00      	lsrs	r0, r0, #8
 801b006:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801b00a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801b00e:	ea4e 0000 	orr.w	r0, lr, r0
 801b012:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801b016:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801b01a:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801b01e:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801b022:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801b026:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801b02a:	ea4e 0909 	orr.w	r9, lr, r9
 801b02e:	ea4a 0000 	orr.w	r0, sl, r0
 801b032:	f1bc 0f00 	cmp.w	ip, #0
 801b036:	f000 8145 	beq.w	801b2c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 801b03a:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 801b03e:	3a01      	subs	r2, #1
 801b040:	0052      	lsls	r2, r2, #1
 801b042:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801b044:	3202      	adds	r2, #2
 801b046:	2cff      	cmp	r4, #255	; 0xff
 801b048:	eb05 0e02 	add.w	lr, r5, r2
 801b04c:	5aaa      	ldrh	r2, [r5, r2]
 801b04e:	d018      	beq.n	801b082 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801b050:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 801b054:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b058:	fb04 fa02 	mul.w	sl, r4, r2
 801b05c:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801b060:	fb08 f805 	mul.w	r8, r8, r5
 801b064:	f10a 0520 	add.w	r5, sl, #32
 801b068:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801b06c:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801b070:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801b074:	4442      	add	r2, r8
 801b076:	0a2d      	lsrs	r5, r5, #8
 801b078:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801b07c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801b080:	432a      	orrs	r2, r5
 801b082:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801b084:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801b088:	2cff      	cmp	r4, #255	; 0xff
 801b08a:	d01a      	beq.n	801b0c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 801b08c:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 801b090:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801b094:	fb04 fa05 	mul.w	sl, r4, r5
 801b098:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801b09c:	fb08 f80e 	mul.w	r8, r8, lr
 801b0a0:	f10a 0e20 	add.w	lr, sl, #32
 801b0a4:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801b0a8:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801b0ac:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801b0b0:	4445      	add	r5, r8
 801b0b2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b0b6:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801b0ba:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 801b0be:	ea45 050e 	orr.w	r5, r5, lr
 801b0c2:	fb1c fe01 	smulbb	lr, ip, r1
 801b0c6:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801b0ca:	f1cc 0810 	rsb	r8, ip, #16
 801b0ce:	eba8 0801 	sub.w	r8, r8, r1
 801b0d2:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801b0d6:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801b0da:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801b0de:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801b0e2:	4341      	muls	r1, r0
 801b0e4:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801b0e8:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801b0ec:	ea4a 0202 	orr.w	r2, sl, r2
 801b0f0:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801b0f4:	fb09 1108 	mla	r1, r9, r8, r1
 801b0f8:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801b0fc:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801b100:	fb0c 1102 	mla	r1, ip, r2, r1
 801b104:	ea4b 0505 	orr.w	r5, fp, r5
 801b108:	fb0e 1e05 	mla	lr, lr, r5, r1
 801b10c:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801b110:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801b114:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b118:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801b11c:	ea42 0e0e 	orr.w	lr, r2, lr
 801b120:	fa1f f28e 	uxth.w	r2, lr
 801b124:	2bff      	cmp	r3, #255	; 0xff
 801b126:	d103      	bne.n	801b130 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801b128:	9912      	ldr	r1, [sp, #72]	; 0x48
 801b12a:	29ff      	cmp	r1, #255	; 0xff
 801b12c:	f000 80de 	beq.w	801b2ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 801b130:	990a      	ldr	r1, [sp, #40]	; 0x28
 801b132:	8838      	ldrh	r0, [r7, #0]
 801b134:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801b136:	434b      	muls	r3, r1
 801b138:	f103 0c01 	add.w	ip, r3, #1
 801b13c:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 801b140:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801b144:	fa5f fc83 	uxtb.w	ip, r3
 801b148:	1203      	asrs	r3, r0, #8
 801b14a:	1215      	asrs	r5, r2, #8
 801b14c:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801b150:	fb13 f30c 	smulbb	r3, r3, ip
 801b154:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801b158:	fb05 3501 	mla	r5, r5, r1, r3
 801b15c:	10c3      	asrs	r3, r0, #3
 801b15e:	10d1      	asrs	r1, r2, #3
 801b160:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801b164:	fb13 f30c 	smulbb	r3, r3, ip
 801b168:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801b16c:	fb01 3104 	mla	r1, r1, r4, r3
 801b170:	00c3      	lsls	r3, r0, #3
 801b172:	00d2      	lsls	r2, r2, #3
 801b174:	b2db      	uxtb	r3, r3
 801b176:	b2d2      	uxtb	r2, r2
 801b178:	fb13 f30c 	smulbb	r3, r3, ip
 801b17c:	b2ad      	uxth	r5, r5
 801b17e:	fb02 3304 	mla	r3, r2, r4, r3
 801b182:	b29a      	uxth	r2, r3
 801b184:	1c6b      	adds	r3, r5, #1
 801b186:	b289      	uxth	r1, r1
 801b188:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801b18c:	1c53      	adds	r3, r2, #1
 801b18e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801b192:	1c4a      	adds	r2, r1, #1
 801b194:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801b198:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801b19c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801b1a0:	0949      	lsrs	r1, r1, #5
 801b1a2:	432b      	orrs	r3, r5
 801b1a4:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801b1a8:	430b      	orrs	r3, r1
 801b1aa:	803b      	strh	r3, [r7, #0]
 801b1ac:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801b1ae:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 801b1b0:	4413      	add	r3, r2
 801b1b2:	9321      	str	r3, [sp, #132]	; 0x84
 801b1b4:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801b1b6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801b1b8:	441a      	add	r2, r3
 801b1ba:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801b1bc:	9222      	str	r2, [sp, #136]	; 0x88
 801b1be:	3b01      	subs	r3, #1
 801b1c0:	3702      	adds	r7, #2
 801b1c2:	9313      	str	r3, [sp, #76]	; 0x4c
 801b1c4:	e689      	b.n	801aeda <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801b1c6:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801b1c8:	9e23      	ldr	r6, [sp, #140]	; 0x8c
 801b1ca:	9c22      	ldr	r4, [sp, #136]	; 0x88
 801b1cc:	4433      	add	r3, r6
 801b1ce:	9321      	str	r3, [sp, #132]	; 0x84
 801b1d0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801b1d2:	441c      	add	r4, r3
 801b1d4:	9b08      	ldr	r3, [sp, #32]
 801b1d6:	9422      	str	r4, [sp, #136]	; 0x88
 801b1d8:	3b01      	subs	r3, #1
 801b1da:	9308      	str	r3, [sp, #32]
 801b1dc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b1de:	3302      	adds	r3, #2
 801b1e0:	9309      	str	r3, [sp, #36]	; 0x24
 801b1e2:	e658      	b.n	801ae96 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 801b1e4:	d028      	beq.n	801b238 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801b1e6:	9b08      	ldr	r3, [sp, #32]
 801b1e8:	9823      	ldr	r0, [sp, #140]	; 0x8c
 801b1ea:	9d21      	ldr	r5, [sp, #132]	; 0x84
 801b1ec:	3b01      	subs	r3, #1
 801b1ee:	fb00 5003 	mla	r0, r0, r3, r5
 801b1f2:	1400      	asrs	r0, r0, #16
 801b1f4:	f53f ae6c 	bmi.w	801aed0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801b1f8:	3901      	subs	r1, #1
 801b1fa:	4288      	cmp	r0, r1
 801b1fc:	f6bf ae68 	bge.w	801aed0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801b200:	9924      	ldr	r1, [sp, #144]	; 0x90
 801b202:	9822      	ldr	r0, [sp, #136]	; 0x88
 801b204:	fb01 0303 	mla	r3, r1, r3, r0
 801b208:	141b      	asrs	r3, r3, #16
 801b20a:	f53f ae61 	bmi.w	801aed0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801b20e:	3a01      	subs	r2, #1
 801b210:	4293      	cmp	r3, r2
 801b212:	f6bf ae5d 	bge.w	801aed0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801b216:	9b08      	ldr	r3, [sp, #32]
 801b218:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 801b21c:	9313      	str	r3, [sp, #76]	; 0x4c
 801b21e:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801b222:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801b224:	2b00      	cmp	r3, #0
 801b226:	f300 8082 	bgt.w	801b32e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801b22a:	9b08      	ldr	r3, [sp, #32]
 801b22c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801b230:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b232:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801b236:	9309      	str	r3, [sp, #36]	; 0x24
 801b238:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801b23a:	2b00      	cmp	r3, #0
 801b23c:	f340 81ef 	ble.w	801b61e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 801b240:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b244:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801b248:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801b24c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801b24e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b252:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b256:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b25a:	eef0 6a62 	vmov.f32	s13, s5
 801b25e:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b262:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b266:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b26a:	edcd 6a21 	vstr	s13, [sp, #132]	; 0x84
 801b26e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b272:	eef0 6a43 	vmov.f32	s13, s6
 801b276:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b27a:	ee12 2a90 	vmov	r2, s5
 801b27e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b282:	fb92 f3f3 	sdiv	r3, r2, r3
 801b286:	ee13 2a10 	vmov	r2, s6
 801b28a:	9323      	str	r3, [sp, #140]	; 0x8c
 801b28c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801b28e:	fb92 f3f3 	sdiv	r3, r2, r3
 801b292:	9324      	str	r3, [sp, #144]	; 0x90
 801b294:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801b296:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b298:	3b01      	subs	r3, #1
 801b29a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b29e:	9311      	str	r3, [sp, #68]	; 0x44
 801b2a0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801b2a2:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
 801b2a6:	bf08      	it	eq
 801b2a8:	4613      	moveq	r3, r2
 801b2aa:	9308      	str	r3, [sp, #32]
 801b2ac:	eeb0 3a67 	vmov.f32	s6, s15
 801b2b0:	eef0 2a47 	vmov.f32	s5, s14
 801b2b4:	e5e1      	b.n	801ae7a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801b2b6:	fb08 f505 	mul.w	r5, r8, r5
 801b2ba:	fb09 5303 	mla	r3, r9, r3, r5
 801b2be:	e661      	b.n	801af84 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 801b2c0:	4681      	mov	r9, r0
 801b2c2:	e688      	b.n	801afd6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801b2c4:	f1c1 0210 	rsb	r2, r1, #16
 801b2c8:	4341      	muls	r1, r0
 801b2ca:	fb09 1902 	mla	r9, r9, r2, r1
 801b2ce:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801b2d2:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801b2d6:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801b2da:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b2de:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801b2e2:	ea42 0909 	orr.w	r9, r2, r9
 801b2e6:	fa1f f289 	uxth.w	r2, r9
 801b2ea:	e71b      	b.n	801b124 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801b2ec:	803a      	strh	r2, [r7, #0]
 801b2ee:	e75d      	b.n	801b1ac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801b2f0:	f115 0e01 	adds.w	lr, r5, #1
 801b2f4:	f53f af5a 	bmi.w	801b1ac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801b2f8:	4572      	cmp	r2, lr
 801b2fa:	f6ff af57 	blt.w	801b1ac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801b2fe:	f110 0e01 	adds.w	lr, r0, #1
 801b302:	f53f af53 	bmi.w	801b1ac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801b306:	4573      	cmp	r3, lr
 801b308:	f6ff af50 	blt.w	801b1ac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801b30c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801b30e:	9502      	str	r5, [sp, #8]
 801b310:	b21b      	sxth	r3, r3
 801b312:	b212      	sxth	r2, r2
 801b314:	e9cd 0103 	strd	r0, r1, [sp, #12]
 801b318:	9301      	str	r3, [sp, #4]
 801b31a:	9200      	str	r2, [sp, #0]
 801b31c:	e9cd c405 	strd	ip, r4, [sp, #20]
 801b320:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 801b324:	4639      	mov	r1, r7
 801b326:	9815      	ldr	r0, [sp, #84]	; 0x54
 801b328:	f7ff fc04 	bl	801ab34 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 801b32c:	e73e      	b.n	801b1ac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801b32e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801b330:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801b334:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801b336:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801b33a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b33c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b340:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801b342:	141f      	asrs	r7, r3, #16
 801b344:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801b346:	141b      	asrs	r3, r3, #16
 801b348:	fb01 3707 	mla	r7, r1, r7, r3
 801b34c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801b34e:	fa1f fc82 	uxth.w	ip, r2
 801b352:	eb03 0a07 	add.w	sl, r3, r7
 801b356:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801b35a:	f813 9007 	ldrb.w	r9, [r3, r7]
 801b35e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801b362:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801b366:	b29b      	uxth	r3, r3
 801b368:	2d00      	cmp	r5, #0
 801b36a:	f000 813d 	beq.w	801b5e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 801b36e:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801b372:	940f      	str	r4, [sp, #60]	; 0x3c
 801b374:	eb0a 0b01 	add.w	fp, sl, r1
 801b378:	fa1f fa85 	uxth.w	sl, r5
 801b37c:	fb0a fc0c 	mul.w	ip, sl, ip
 801b380:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801b384:	fa1f fa8a 	uxth.w	sl, sl
 801b388:	eba0 000c 	sub.w	r0, r0, ip
 801b38c:	eba3 030a 	sub.w	r3, r3, sl
 801b390:	b280      	uxth	r0, r0
 801b392:	fb08 f000 	mul.w	r0, r8, r0
 801b396:	b29b      	uxth	r3, r3
 801b398:	fb09 0303 	mla	r3, r9, r3, r0
 801b39c:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801b39e:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801b3a2:	9410      	str	r4, [sp, #64]	; 0x40
 801b3a4:	fb0a 3300 	mla	r3, sl, r0, r3
 801b3a8:	fb0c 3304 	mla	r3, ip, r4, r3
 801b3ac:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801b3b0:	2b00      	cmp	r3, #0
 801b3b2:	f000 810b 	beq.w	801b5cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 801b3b6:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801b3b8:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801b3ba:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801b3be:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801b3c2:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801b3c6:	f000 8114 	beq.w	801b5f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 801b3ca:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801b3ce:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801b3d2:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801b3d6:	fb09 f707 	mul.w	r7, r9, r7
 801b3da:	fb0a fc0c 	mul.w	ip, sl, ip
 801b3de:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801b3e2:	f107 0b20 	add.w	fp, r7, #32
 801b3e6:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801b3ea:	44cc      	add	ip, r9
 801b3ec:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801b3f0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801b3f4:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801b3f8:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801b3fc:	ea4c 0909 	orr.w	r9, ip, r9
 801b400:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801b404:	8847      	ldrh	r7, [r0, #2]
 801b406:	d019      	beq.n	801b43c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 801b408:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801b40c:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801b410:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801b414:	fb08 f807 	mul.w	r8, r8, r7
 801b418:	fb0a fc0c 	mul.w	ip, sl, ip
 801b41c:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801b420:	f108 0b20 	add.w	fp, r8, #32
 801b424:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801b428:	44bc      	add	ip, r7
 801b42a:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801b42e:	0a3f      	lsrs	r7, r7, #8
 801b430:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801b434:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801b438:	ea4c 0707 	orr.w	r7, ip, r7
 801b43c:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801b440:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801b444:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801b448:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801b44c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801b450:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801b454:	ea4c 0909 	orr.w	r9, ip, r9
 801b458:	ea4a 0707 	orr.w	r7, sl, r7
 801b45c:	2d00      	cmp	r5, #0
 801b45e:	f000 80ca 	beq.w	801b5f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 801b462:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801b466:	3901      	subs	r1, #1
 801b468:	0049      	lsls	r1, r1, #1
 801b46a:	3102      	adds	r1, #2
 801b46c:	eb00 0c01 	add.w	ip, r0, r1
 801b470:	5a41      	ldrh	r1, [r0, r1]
 801b472:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801b474:	28ff      	cmp	r0, #255	; 0xff
 801b476:	d019      	beq.n	801b4ac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 801b478:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801b47a:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 801b47e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801b482:	fb04 fa01 	mul.w	sl, r4, r1
 801b486:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801b48a:	fb08 f800 	mul.w	r8, r8, r0
 801b48e:	f10a 0020 	add.w	r0, sl, #32
 801b492:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801b496:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801b49a:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801b49e:	4441      	add	r1, r8
 801b4a0:	0a00      	lsrs	r0, r0, #8
 801b4a2:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801b4a6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801b4aa:	4301      	orrs	r1, r0
 801b4ac:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801b4ae:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801b4b2:	2cff      	cmp	r4, #255	; 0xff
 801b4b4:	d01a      	beq.n	801b4ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 801b4b6:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 801b4ba:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801b4be:	fb04 fa00 	mul.w	sl, r4, r0
 801b4c2:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801b4c6:	fb08 f80c 	mul.w	r8, r8, ip
 801b4ca:	f10a 0c20 	add.w	ip, sl, #32
 801b4ce:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801b4d2:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801b4d6:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801b4da:	4440      	add	r0, r8
 801b4dc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b4e0:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801b4e4:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801b4e8:	ea40 000c 	orr.w	r0, r0, ip
 801b4ec:	fb15 fc02 	smulbb	ip, r5, r2
 801b4f0:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801b4f4:	f1c5 0810 	rsb	r8, r5, #16
 801b4f8:	eba8 0802 	sub.w	r8, r8, r2
 801b4fc:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801b500:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801b504:	437a      	muls	r2, r7
 801b506:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801b50a:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801b50e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801b512:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801b516:	fb09 2208 	mla	r2, r9, r8, r2
 801b51a:	ea4a 0101 	orr.w	r1, sl, r1
 801b51e:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801b522:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801b526:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801b52a:	fb05 2201 	mla	r2, r5, r1, r2
 801b52e:	ea4b 0000 	orr.w	r0, fp, r0
 801b532:	fb0c 2200 	mla	r2, ip, r0, r2
 801b536:	0d57      	lsrs	r7, r2, #21
 801b538:	0952      	lsrs	r2, r2, #5
 801b53a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801b53e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801b542:	433a      	orrs	r2, r7
 801b544:	2bff      	cmp	r3, #255	; 0xff
 801b546:	b292      	uxth	r2, r2
 801b548:	d102      	bne.n	801b550 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801b54a:	9912      	ldr	r1, [sp, #72]	; 0x48
 801b54c:	29ff      	cmp	r1, #255	; 0xff
 801b54e:	d063      	beq.n	801b618 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 801b550:	980a      	ldr	r0, [sp, #40]	; 0x28
 801b552:	f8be 1000 	ldrh.w	r1, [lr]
 801b556:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801b558:	4343      	muls	r3, r0
 801b55a:	1c58      	adds	r0, r3, #1
 801b55c:	eb00 2323 	add.w	r3, r0, r3, asr #8
 801b560:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801b564:	1208      	asrs	r0, r1, #8
 801b566:	b2db      	uxtb	r3, r3
 801b568:	1215      	asrs	r5, r2, #8
 801b56a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801b56e:	fb10 f003 	smulbb	r0, r0, r3
 801b572:	10cf      	asrs	r7, r1, #3
 801b574:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801b578:	00c9      	lsls	r1, r1, #3
 801b57a:	fb05 0504 	mla	r5, r5, r4, r0
 801b57e:	b2c9      	uxtb	r1, r1
 801b580:	10d0      	asrs	r0, r2, #3
 801b582:	00d2      	lsls	r2, r2, #3
 801b584:	fb11 f103 	smulbb	r1, r1, r3
 801b588:	b2d2      	uxtb	r2, r2
 801b58a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801b58e:	fb02 1204 	mla	r2, r2, r4, r1
 801b592:	fb17 f703 	smulbb	r7, r7, r3
 801b596:	b2ad      	uxth	r5, r5
 801b598:	b292      	uxth	r2, r2
 801b59a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801b59e:	fb00 7004 	mla	r0, r0, r4, r7
 801b5a2:	1c6b      	adds	r3, r5, #1
 801b5a4:	1c57      	adds	r7, r2, #1
 801b5a6:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801b5aa:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801b5ae:	b280      	uxth	r0, r0
 801b5b0:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801b5b4:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801b5b8:	433d      	orrs	r5, r7
 801b5ba:	1c47      	adds	r7, r0, #1
 801b5bc:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801b5c0:	097f      	lsrs	r7, r7, #5
 801b5c2:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801b5c6:	433d      	orrs	r5, r7
 801b5c8:	f8ae 5000 	strh.w	r5, [lr]
 801b5cc:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801b5ce:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 801b5d0:	4413      	add	r3, r2
 801b5d2:	9321      	str	r3, [sp, #132]	; 0x84
 801b5d4:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801b5d6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801b5d8:	441a      	add	r2, r3
 801b5da:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801b5dc:	9222      	str	r2, [sp, #136]	; 0x88
 801b5de:	3b01      	subs	r3, #1
 801b5e0:	f10e 0e02 	add.w	lr, lr, #2
 801b5e4:	9313      	str	r3, [sp, #76]	; 0x4c
 801b5e6:	e61c      	b.n	801b222 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 801b5e8:	fb08 f000 	mul.w	r0, r8, r0
 801b5ec:	fb09 0303 	mla	r3, r9, r3, r0
 801b5f0:	e6dc      	b.n	801b3ac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 801b5f2:	46b9      	mov	r9, r7
 801b5f4:	e704      	b.n	801b400 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 801b5f6:	f1c2 0110 	rsb	r1, r2, #16
 801b5fa:	437a      	muls	r2, r7
 801b5fc:	fb09 2901 	mla	r9, r9, r1, r2
 801b600:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801b604:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801b608:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801b60c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801b610:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801b614:	4302      	orrs	r2, r0
 801b616:	e795      	b.n	801b544 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 801b618:	f8ae 2000 	strh.w	r2, [lr]
 801b61c:	e7d6      	b.n	801b5cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 801b61e:	b017      	add	sp, #92	; 0x5c
 801b620:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b624 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801b624:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b628:	b085      	sub	sp, #20
 801b62a:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 801b62e:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 801b632:	9103      	str	r1, [sp, #12]
 801b634:	fb00 7406 	mla	r4, r0, r6, r7
 801b638:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 801b63c:	2800      	cmp	r0, #0
 801b63e:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 801b642:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 801b646:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 801b64a:	9501      	str	r5, [sp, #4]
 801b64c:	eb02 0904 	add.w	r9, r2, r4
 801b650:	f2c0 8141 	blt.w	801b8d6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801b654:	4583      	cmp	fp, r0
 801b656:	f340 813e 	ble.w	801b8d6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801b65a:	2f00      	cmp	r7, #0
 801b65c:	f2c0 8137 	blt.w	801b8ce <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801b660:	42be      	cmp	r6, r7
 801b662:	f340 8134 	ble.w	801b8ce <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801b666:	f812 c004 	ldrb.w	ip, [r2, r4]
 801b66a:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 801b66e:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801b672:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 801b676:	4355      	muls	r5, r2
 801b678:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801b67c:	f64f 041f 	movw	r4, #63519	; 0xf81f
 801b680:	fb0c f203 	mul.w	r2, ip, r3
 801b684:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801b688:	f605 0501 	addw	r5, r5, #2049	; 0x801
 801b68c:	441d      	add	r5, r3
 801b68e:	f102 0320 	add.w	r3, r2, #32
 801b692:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801b696:	0a1b      	lsrs	r3, r3, #8
 801b698:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801b69c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801b6a0:	431c      	orrs	r4, r3
 801b6a2:	1c7b      	adds	r3, r7, #1
 801b6a4:	f100 811c 	bmi.w	801b8e0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801b6a8:	429e      	cmp	r6, r3
 801b6aa:	f340 8119 	ble.w	801b8e0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801b6ae:	2900      	cmp	r1, #0
 801b6b0:	f000 8119 	beq.w	801b8e6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 801b6b4:	9a01      	ldr	r2, [sp, #4]
 801b6b6:	f899 3001 	ldrb.w	r3, [r9, #1]
 801b6ba:	8855      	ldrh	r5, [r2, #2]
 801b6bc:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801b6c0:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 801b6c4:	fb08 f802 	mul.w	r8, r8, r2
 801b6c8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801b6cc:	f64f 021f 	movw	r2, #63519	; 0xf81f
 801b6d0:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801b6d4:	435d      	muls	r5, r3
 801b6d6:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801b6da:	44d0      	add	r8, sl
 801b6dc:	f105 0a20 	add.w	sl, r5, #32
 801b6e0:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801b6e4:	0a2d      	lsrs	r5, r5, #8
 801b6e6:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801b6ea:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801b6ee:	432a      	orrs	r2, r5
 801b6f0:	3001      	adds	r0, #1
 801b6f2:	f100 80fe 	bmi.w	801b8f2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801b6f6:	4583      	cmp	fp, r0
 801b6f8:	f340 80fb 	ble.w	801b8f2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801b6fc:	f1be 0f00 	cmp.w	lr, #0
 801b700:	f000 80fc 	beq.w	801b8fc <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 801b704:	2f00      	cmp	r7, #0
 801b706:	f2c0 80f1 	blt.w	801b8ec <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801b70a:	42be      	cmp	r6, r7
 801b70c:	f340 80ee 	ble.w	801b8ec <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801b710:	9801      	ldr	r0, [sp, #4]
 801b712:	f819 5006 	ldrb.w	r5, [r9, r6]
 801b716:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801b71a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801b71e:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 801b722:	fb0a fa00 	mul.w	sl, sl, r0
 801b726:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 801b72a:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801b72e:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 801b732:	fb05 f808 	mul.w	r8, r5, r8
 801b736:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 801b73a:	4482      	add	sl, r0
 801b73c:	f108 0020 	add.w	r0, r8, #32
 801b740:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801b744:	0a00      	lsrs	r0, r0, #8
 801b746:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801b74a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801b74e:	ea4b 0b00 	orr.w	fp, fp, r0
 801b752:	3701      	adds	r7, #1
 801b754:	f100 80d7 	bmi.w	801b906 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801b758:	42be      	cmp	r6, r7
 801b75a:	f340 80d4 	ble.w	801b906 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801b75e:	2900      	cmp	r1, #0
 801b760:	f000 80d4 	beq.w	801b90c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 801b764:	3601      	adds	r6, #1
 801b766:	9801      	ldr	r0, [sp, #4]
 801b768:	f819 7006 	ldrb.w	r7, [r9, r6]
 801b76c:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801b770:	ea4f 09e7 	mov.w	r9, r7, asr #3
 801b774:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 801b778:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801b77c:	fb09 f906 	mul.w	r9, r9, r6
 801b780:	fb07 f800 	mul.w	r8, r7, r0
 801b784:	f64f 001f 	movw	r0, #63519	; 0xf81f
 801b788:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801b78c:	f609 0901 	addw	r9, r9, #2049	; 0x801
 801b790:	44d1      	add	r9, sl
 801b792:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801b796:	f108 0020 	add.w	r0, r8, #32
 801b79a:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801b79e:	0a00      	lsrs	r0, r0, #8
 801b7a0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801b7a4:	4330      	orrs	r0, r6
 801b7a6:	b28e      	uxth	r6, r1
 801b7a8:	fa1f f98e 	uxth.w	r9, lr
 801b7ac:	fb06 f809 	mul.w	r8, r6, r9
 801b7b0:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 801b7b4:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801b7b8:	0136      	lsls	r6, r6, #4
 801b7ba:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801b7be:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801b7c2:	9601      	str	r6, [sp, #4]
 801b7c4:	ea4a 0404 	orr.w	r4, sl, r4
 801b7c8:	fa1f f689 	uxth.w	r6, r9
 801b7cc:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801b7d0:	fb11 f90e 	smulbb	r9, r1, lr
 801b7d4:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 801b7d8:	9602      	str	r6, [sp, #8]
 801b7da:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801b7de:	4626      	mov	r6, r4
 801b7e0:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801b7e4:	f1ce 0410 	rsb	r4, lr, #16
 801b7e8:	1a64      	subs	r4, r4, r1
 801b7ea:	ea4a 0202 	orr.w	r2, sl, r2
 801b7ee:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801b7f2:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801b7f6:	434a      	muls	r2, r1
 801b7f8:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801b7fc:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801b800:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801b804:	fb04 2406 	mla	r4, r4, r6, r2
 801b808:	ea4a 0000 	orr.w	r0, sl, r0
 801b80c:	fb09 4200 	mla	r2, r9, r0, r4
 801b810:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801b814:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801b818:	9801      	ldr	r0, [sp, #4]
 801b81a:	9903      	ldr	r1, [sp, #12]
 801b81c:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801b820:	ea44 0b0b 	orr.w	fp, r4, fp
 801b824:	9c02      	ldr	r4, [sp, #8]
 801b826:	8809      	ldrh	r1, [r1, #0]
 801b828:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 801b82c:	1b00      	subs	r0, r0, r4
 801b82e:	9c01      	ldr	r4, [sp, #4]
 801b830:	eba4 0608 	sub.w	r6, r4, r8
 801b834:	b2b6      	uxth	r6, r6
 801b836:	b280      	uxth	r0, r0
 801b838:	4373      	muls	r3, r6
 801b83a:	fb0c 3300 	mla	r3, ip, r0, r3
 801b83e:	9802      	ldr	r0, [sp, #8]
 801b840:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801b844:	fb00 3505 	mla	r5, r0, r5, r3
 801b848:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801b84c:	fb08 5707 	mla	r7, r8, r7, r5
 801b850:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801b854:	120b      	asrs	r3, r1, #8
 801b856:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801b85a:	ea6f 2727 	mvn.w	r7, r7, asr #8
 801b85e:	b2ff      	uxtb	r7, r7
 801b860:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b864:	10c8      	asrs	r0, r1, #3
 801b866:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801b86a:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801b86e:	00c9      	lsls	r1, r1, #3
 801b870:	437b      	muls	r3, r7
 801b872:	ea42 0e0e 	orr.w	lr, r2, lr
 801b876:	b2c9      	uxtb	r1, r1
 801b878:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801b87c:	fa1f f28e 	uxth.w	r2, lr
 801b880:	4378      	muls	r0, r7
 801b882:	434f      	muls	r7, r1
 801b884:	1c59      	adds	r1, r3, #1
 801b886:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801b88a:	1213      	asrs	r3, r2, #8
 801b88c:	f023 0307 	bic.w	r3, r3, #7
 801b890:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801b894:	1c41      	adds	r1, r0, #1
 801b896:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801b89a:	10d1      	asrs	r1, r2, #3
 801b89c:	f021 0103 	bic.w	r1, r1, #3
 801b8a0:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801b8a4:	021b      	lsls	r3, r3, #8
 801b8a6:	00c9      	lsls	r1, r1, #3
 801b8a8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801b8ac:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801b8b0:	430b      	orrs	r3, r1
 801b8b2:	1c79      	adds	r1, r7, #1
 801b8b4:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 801b8b8:	00d2      	lsls	r2, r2, #3
 801b8ba:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801b8be:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801b8c2:	431a      	orrs	r2, r3
 801b8c4:	9b03      	ldr	r3, [sp, #12]
 801b8c6:	801a      	strh	r2, [r3, #0]
 801b8c8:	b005      	add	sp, #20
 801b8ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b8ce:	f04f 0c00 	mov.w	ip, #0
 801b8d2:	4664      	mov	r4, ip
 801b8d4:	e6e5      	b.n	801b6a2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 801b8d6:	2300      	movs	r3, #0
 801b8d8:	469c      	mov	ip, r3
 801b8da:	461a      	mov	r2, r3
 801b8dc:	461c      	mov	r4, r3
 801b8de:	e707      	b.n	801b6f0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801b8e0:	2300      	movs	r3, #0
 801b8e2:	461a      	mov	r2, r3
 801b8e4:	e704      	b.n	801b6f0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801b8e6:	460b      	mov	r3, r1
 801b8e8:	460a      	mov	r2, r1
 801b8ea:	e701      	b.n	801b6f0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801b8ec:	2500      	movs	r5, #0
 801b8ee:	46ab      	mov	fp, r5
 801b8f0:	e72f      	b.n	801b752 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 801b8f2:	2700      	movs	r7, #0
 801b8f4:	463d      	mov	r5, r7
 801b8f6:	4638      	mov	r0, r7
 801b8f8:	46bb      	mov	fp, r7
 801b8fa:	e754      	b.n	801b7a6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801b8fc:	4677      	mov	r7, lr
 801b8fe:	4675      	mov	r5, lr
 801b900:	4670      	mov	r0, lr
 801b902:	46f3      	mov	fp, lr
 801b904:	e74f      	b.n	801b7a6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801b906:	2700      	movs	r7, #0
 801b908:	4638      	mov	r0, r7
 801b90a:	e74c      	b.n	801b7a6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801b90c:	460f      	mov	r7, r1
 801b90e:	4608      	mov	r0, r1
 801b910:	e749      	b.n	801b7a6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

0801b914 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b914:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b918:	b093      	sub	sp, #76	; 0x4c
 801b91a:	9210      	str	r2, [sp, #64]	; 0x40
 801b91c:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801b91e:	910e      	str	r1, [sp, #56]	; 0x38
 801b920:	9306      	str	r3, [sp, #24]
 801b922:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 801b926:	9011      	str	r0, [sp, #68]	; 0x44
 801b928:	6850      	ldr	r0, [r2, #4]
 801b92a:	6812      	ldr	r2, [r2, #0]
 801b92c:	fb00 1303 	mla	r3, r0, r3, r1
 801b930:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801b934:	9307      	str	r3, [sp, #28]
 801b936:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801b938:	681b      	ldr	r3, [r3, #0]
 801b93a:	9308      	str	r3, [sp, #32]
 801b93c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801b93e:	685b      	ldr	r3, [r3, #4]
 801b940:	9309      	str	r3, [sp, #36]	; 0x24
 801b942:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b944:	2b00      	cmp	r3, #0
 801b946:	dc03      	bgt.n	801b950 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801b948:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b94a:	2b00      	cmp	r3, #0
 801b94c:	f340 83b4 	ble.w	801c0b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 801b950:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801b952:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b956:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801b95a:	1e48      	subs	r0, r1, #1
 801b95c:	1e55      	subs	r5, r2, #1
 801b95e:	9b06      	ldr	r3, [sp, #24]
 801b960:	2b00      	cmp	r3, #0
 801b962:	f340 8163 	ble.w	801bc2c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 801b966:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 801b968:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801b96a:	1436      	asrs	r6, r6, #16
 801b96c:	ea4f 4323 	mov.w	r3, r3, asr #16
 801b970:	d406      	bmi.n	801b980 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801b972:	4286      	cmp	r6, r0
 801b974:	da04      	bge.n	801b980 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801b976:	2b00      	cmp	r3, #0
 801b978:	db02      	blt.n	801b980 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801b97a:	42ab      	cmp	r3, r5
 801b97c:	f2c0 8157 	blt.w	801bc2e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 801b980:	3601      	adds	r6, #1
 801b982:	f100 8144 	bmi.w	801bc0e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801b986:	42b1      	cmp	r1, r6
 801b988:	f2c0 8141 	blt.w	801bc0e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801b98c:	3301      	adds	r3, #1
 801b98e:	f100 813e 	bmi.w	801bc0e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801b992:	429a      	cmp	r2, r3
 801b994:	f2c0 813b 	blt.w	801bc0e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801b998:	9b06      	ldr	r3, [sp, #24]
 801b99a:	9f07      	ldr	r7, [sp, #28]
 801b99c:	930f      	str	r3, [sp, #60]	; 0x3c
 801b99e:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801b9a2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801b9a4:	2b00      	cmp	r3, #0
 801b9a6:	f340 8164 	ble.w	801bc72 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 801b9aa:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801b9ac:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 801b9ae:	1418      	asrs	r0, r3, #16
 801b9b0:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801b9b2:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801b9b6:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801b9b8:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801b9bc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801b9be:	142d      	asrs	r5, r5, #16
 801b9c0:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801b9c4:	f100 81ee 	bmi.w	801bda4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801b9c8:	f102 3eff 	add.w	lr, r2, #4294967295
 801b9cc:	4575      	cmp	r5, lr
 801b9ce:	f280 81e9 	bge.w	801bda4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801b9d2:	2800      	cmp	r0, #0
 801b9d4:	f2c0 81e6 	blt.w	801bda4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801b9d8:	f103 3eff 	add.w	lr, r3, #4294967295
 801b9dc:	4570      	cmp	r0, lr
 801b9de:	f280 81e1 	bge.w	801bda4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801b9e2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b9e4:	b212      	sxth	r2, r2
 801b9e6:	fb00 5002 	mla	r0, r0, r2, r5
 801b9ea:	fa1f fe81 	uxth.w	lr, r1
 801b9ee:	eb03 0a00 	add.w	sl, r3, r0
 801b9f2:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801b9f6:	f813 9000 	ldrb.w	r9, [r3, r0]
 801b9fa:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801b9fe:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 801ba02:	b29b      	uxth	r3, r3
 801ba04:	f1bc 0f00 	cmp.w	ip, #0
 801ba08:	f000 8179 	beq.w	801bcfe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801ba0c:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801ba10:	940a      	str	r4, [sp, #40]	; 0x28
 801ba12:	eb0a 0b02 	add.w	fp, sl, r2
 801ba16:	fa1f fa8c 	uxth.w	sl, ip
 801ba1a:	fb0a fe0e 	mul.w	lr, sl, lr
 801ba1e:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801ba22:	fa1f fa8a 	uxth.w	sl, sl
 801ba26:	eba5 050e 	sub.w	r5, r5, lr
 801ba2a:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801ba2e:	940b      	str	r4, [sp, #44]	; 0x2c
 801ba30:	eba3 030a 	sub.w	r3, r3, sl
 801ba34:	b2ad      	uxth	r5, r5
 801ba36:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801ba38:	b29b      	uxth	r3, r3
 801ba3a:	fb08 f505 	mul.w	r5, r8, r5
 801ba3e:	fb09 5303 	mla	r3, r9, r3, r5
 801ba42:	fb0a 3304 	mla	r3, sl, r4, r3
 801ba46:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801ba48:	fb0e 3304 	mla	r3, lr, r4, r3
 801ba4c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801ba50:	2b00      	cmp	r3, #0
 801ba52:	f000 80cf 	beq.w	801bbf4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801ba56:	9c08      	ldr	r4, [sp, #32]
 801ba58:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801ba5c:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801ba60:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801ba64:	f000 8150 	beq.w	801bd08 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 801ba68:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801ba6c:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801ba70:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801ba74:	fb09 f000 	mul.w	r0, r9, r0
 801ba78:	fb0a fe0e 	mul.w	lr, sl, lr
 801ba7c:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801ba80:	f100 0b20 	add.w	fp, r0, #32
 801ba84:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801ba88:	44ce      	add	lr, r9
 801ba8a:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801ba8e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801ba92:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801ba96:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801ba9a:	ea4e 0909 	orr.w	r9, lr, r9
 801ba9e:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801baa2:	8868      	ldrh	r0, [r5, #2]
 801baa4:	d019      	beq.n	801bada <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801baa6:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801baaa:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801baae:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801bab2:	fb08 f800 	mul.w	r8, r8, r0
 801bab6:	fb0a fe0e 	mul.w	lr, sl, lr
 801baba:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801babe:	f108 0b20 	add.w	fp, r8, #32
 801bac2:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801bac6:	4486      	add	lr, r0
 801bac8:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801bacc:	0a00      	lsrs	r0, r0, #8
 801bace:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801bad2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801bad6:	ea4e 0000 	orr.w	r0, lr, r0
 801bada:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801bade:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801bae2:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801bae6:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801baea:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801baee:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801baf2:	ea4e 0909 	orr.w	r9, lr, r9
 801baf6:	ea4a 0000 	orr.w	r0, sl, r0
 801bafa:	f1bc 0f00 	cmp.w	ip, #0
 801bafe:	f000 8105 	beq.w	801bd0c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801bb02:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 801bb06:	3a01      	subs	r2, #1
 801bb08:	0052      	lsls	r2, r2, #1
 801bb0a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801bb0c:	3202      	adds	r2, #2
 801bb0e:	2cff      	cmp	r4, #255	; 0xff
 801bb10:	eb05 0e02 	add.w	lr, r5, r2
 801bb14:	5aaa      	ldrh	r2, [r5, r2]
 801bb16:	d018      	beq.n	801bb4a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801bb18:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 801bb1c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801bb20:	fb04 fa02 	mul.w	sl, r4, r2
 801bb24:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801bb28:	fb08 f805 	mul.w	r8, r8, r5
 801bb2c:	f10a 0520 	add.w	r5, sl, #32
 801bb30:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801bb34:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801bb38:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801bb3c:	4442      	add	r2, r8
 801bb3e:	0a2d      	lsrs	r5, r5, #8
 801bb40:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801bb44:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801bb48:	432a      	orrs	r2, r5
 801bb4a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801bb4c:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801bb50:	2cff      	cmp	r4, #255	; 0xff
 801bb52:	d01a      	beq.n	801bb8a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801bb54:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 801bb58:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801bb5c:	fb04 fa05 	mul.w	sl, r4, r5
 801bb60:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801bb64:	fb08 f80e 	mul.w	r8, r8, lr
 801bb68:	f10a 0e20 	add.w	lr, sl, #32
 801bb6c:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801bb70:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801bb74:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801bb78:	4445      	add	r5, r8
 801bb7a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801bb7e:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801bb82:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 801bb86:	ea45 050e 	orr.w	r5, r5, lr
 801bb8a:	fb1c fe01 	smulbb	lr, ip, r1
 801bb8e:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801bb92:	f1cc 0810 	rsb	r8, ip, #16
 801bb96:	eba8 0801 	sub.w	r8, r8, r1
 801bb9a:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801bb9e:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801bba2:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801bba6:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801bbaa:	4341      	muls	r1, r0
 801bbac:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801bbb0:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801bbb4:	ea4a 0202 	orr.w	r2, sl, r2
 801bbb8:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801bbbc:	fb09 1108 	mla	r1, r9, r8, r1
 801bbc0:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801bbc4:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801bbc8:	fb0c 1102 	mla	r1, ip, r2, r1
 801bbcc:	ea4b 0505 	orr.w	r5, fp, r5
 801bbd0:	fb0e 1e05 	mla	lr, lr, r5, r1
 801bbd4:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801bbd8:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801bbdc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801bbe0:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801bbe4:	ea42 0e0e 	orr.w	lr, r2, lr
 801bbe8:	fa1f f28e 	uxth.w	r2, lr
 801bbec:	2bff      	cmp	r3, #255	; 0xff
 801bbee:	f040 80a1 	bne.w	801bd34 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 801bbf2:	803a      	strh	r2, [r7, #0]
 801bbf4:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801bbf6:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 801bbf8:	4413      	add	r3, r2
 801bbfa:	931d      	str	r3, [sp, #116]	; 0x74
 801bbfc:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 801bbfe:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801bc00:	441a      	add	r2, r3
 801bc02:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801bc04:	921e      	str	r2, [sp, #120]	; 0x78
 801bc06:	3b01      	subs	r3, #1
 801bc08:	3702      	adds	r7, #2
 801bc0a:	930f      	str	r3, [sp, #60]	; 0x3c
 801bc0c:	e6c9      	b.n	801b9a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801bc0e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801bc10:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 801bc12:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 801bc14:	4433      	add	r3, r6
 801bc16:	931d      	str	r3, [sp, #116]	; 0x74
 801bc18:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801bc1a:	441c      	add	r4, r3
 801bc1c:	9b06      	ldr	r3, [sp, #24]
 801bc1e:	941e      	str	r4, [sp, #120]	; 0x78
 801bc20:	3b01      	subs	r3, #1
 801bc22:	9306      	str	r3, [sp, #24]
 801bc24:	9b07      	ldr	r3, [sp, #28]
 801bc26:	3302      	adds	r3, #2
 801bc28:	9307      	str	r3, [sp, #28]
 801bc2a:	e698      	b.n	801b95e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801bc2c:	d028      	beq.n	801bc80 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801bc2e:	9b06      	ldr	r3, [sp, #24]
 801bc30:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801bc32:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 801bc34:	3b01      	subs	r3, #1
 801bc36:	fb00 5003 	mla	r0, r0, r3, r5
 801bc3a:	1400      	asrs	r0, r0, #16
 801bc3c:	f53f aeac 	bmi.w	801b998 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801bc40:	3901      	subs	r1, #1
 801bc42:	4288      	cmp	r0, r1
 801bc44:	f6bf aea8 	bge.w	801b998 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801bc48:	9920      	ldr	r1, [sp, #128]	; 0x80
 801bc4a:	981e      	ldr	r0, [sp, #120]	; 0x78
 801bc4c:	fb01 0303 	mla	r3, r1, r3, r0
 801bc50:	141b      	asrs	r3, r3, #16
 801bc52:	f53f aea1 	bmi.w	801b998 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801bc56:	3a01      	subs	r2, #1
 801bc58:	4293      	cmp	r3, r2
 801bc5a:	f6bf ae9d 	bge.w	801b998 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801bc5e:	9b06      	ldr	r3, [sp, #24]
 801bc60:	f8dd e01c 	ldr.w	lr, [sp, #28]
 801bc64:	930f      	str	r3, [sp, #60]	; 0x3c
 801bc66:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801bc6a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801bc6c:	2b00      	cmp	r3, #0
 801bc6e:	f300 80b6 	bgt.w	801bdde <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 801bc72:	9b06      	ldr	r3, [sp, #24]
 801bc74:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801bc78:	9b07      	ldr	r3, [sp, #28]
 801bc7a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801bc7e:	9307      	str	r3, [sp, #28]
 801bc80:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801bc82:	2b00      	cmp	r3, #0
 801bc84:	f340 8218 	ble.w	801c0b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 801bc88:	ee30 0a04 	vadd.f32	s0, s0, s8
 801bc8c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801bc90:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801bc94:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801bc96:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801bc9a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801bc9e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801bca2:	eef0 6a62 	vmov.f32	s13, s5
 801bca6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801bcaa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801bcae:	ee77 2a62 	vsub.f32	s5, s14, s5
 801bcb2:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 801bcb6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801bcba:	eef0 6a43 	vmov.f32	s13, s6
 801bcbe:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801bcc2:	ee12 2a90 	vmov	r2, s5
 801bcc6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801bcca:	fb92 f3f3 	sdiv	r3, r2, r3
 801bcce:	ee13 2a10 	vmov	r2, s6
 801bcd2:	931f      	str	r3, [sp, #124]	; 0x7c
 801bcd4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801bcd6:	fb92 f3f3 	sdiv	r3, r2, r3
 801bcda:	9320      	str	r3, [sp, #128]	; 0x80
 801bcdc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801bcde:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801bce0:	3b01      	subs	r3, #1
 801bce2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801bce6:	930e      	str	r3, [sp, #56]	; 0x38
 801bce8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801bcea:	edcd 6a1e 	vstr	s13, [sp, #120]	; 0x78
 801bcee:	bf08      	it	eq
 801bcf0:	4613      	moveq	r3, r2
 801bcf2:	9306      	str	r3, [sp, #24]
 801bcf4:	eeb0 3a67 	vmov.f32	s6, s15
 801bcf8:	eef0 2a47 	vmov.f32	s5, s14
 801bcfc:	e621      	b.n	801b942 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801bcfe:	fb08 f505 	mul.w	r5, r8, r5
 801bd02:	fb09 5303 	mla	r3, r9, r3, r5
 801bd06:	e6a1      	b.n	801ba4c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 801bd08:	4681      	mov	r9, r0
 801bd0a:	e6c8      	b.n	801ba9e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 801bd0c:	f1c1 0210 	rsb	r2, r1, #16
 801bd10:	4341      	muls	r1, r0
 801bd12:	fb09 1902 	mla	r9, r9, r2, r1
 801bd16:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801bd1a:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801bd1e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801bd22:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801bd26:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801bd2a:	ea42 0909 	orr.w	r9, r2, r9
 801bd2e:	fa1f f289 	uxth.w	r2, r9
 801bd32:	e75b      	b.n	801bbec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801bd34:	f8b7 c000 	ldrh.w	ip, [r7]
 801bd38:	43db      	mvns	r3, r3
 801bd3a:	ea4f 202c 	mov.w	r0, ip, asr #8
 801bd3e:	fa5f fe83 	uxtb.w	lr, r3
 801bd42:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801bd46:	fb00 f00e 	mul.w	r0, r0, lr
 801bd4a:	1c41      	adds	r1, r0, #1
 801bd4c:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801bd50:	1211      	asrs	r1, r2, #8
 801bd52:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801bd56:	f021 0107 	bic.w	r1, r1, #7
 801bd5a:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801bd5e:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801bd62:	48d7      	ldr	r0, [pc, #860]	; (801c0c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 801bd64:	fb05 f50e 	mul.w	r5, r5, lr
 801bd68:	b2c9      	uxtb	r1, r1
 801bd6a:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 801bd6e:	1c69      	adds	r1, r5, #1
 801bd70:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801bd74:	10d1      	asrs	r1, r2, #3
 801bd76:	f021 0103 	bic.w	r1, r1, #3
 801bd7a:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 801bd7e:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801bd82:	b2db      	uxtb	r3, r3
 801bd84:	00c9      	lsls	r1, r1, #3
 801bd86:	fb03 f30e 	mul.w	r3, r3, lr
 801bd8a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801bd8e:	4301      	orrs	r1, r0
 801bd90:	1c58      	adds	r0, r3, #1
 801bd92:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801bd96:	00d2      	lsls	r2, r2, #3
 801bd98:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801bd9c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801bda0:	430a      	orrs	r2, r1
 801bda2:	e726      	b.n	801bbf2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 801bda4:	f115 0e01 	adds.w	lr, r5, #1
 801bda8:	f53f af24 	bmi.w	801bbf4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801bdac:	4572      	cmp	r2, lr
 801bdae:	f6ff af21 	blt.w	801bbf4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801bdb2:	f110 0e01 	adds.w	lr, r0, #1
 801bdb6:	f53f af1d 	bmi.w	801bbf4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801bdba:	4573      	cmp	r3, lr
 801bdbc:	f6ff af1a 	blt.w	801bbf4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801bdc0:	b21b      	sxth	r3, r3
 801bdc2:	b212      	sxth	r2, r2
 801bdc4:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 801bdc8:	e9cd 5002 	strd	r5, r0, [sp, #8]
 801bdcc:	9301      	str	r3, [sp, #4]
 801bdce:	9200      	str	r2, [sp, #0]
 801bdd0:	4639      	mov	r1, r7
 801bdd2:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 801bdd6:	9811      	ldr	r0, [sp, #68]	; 0x44
 801bdd8:	f7ff fc24 	bl	801b624 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801bddc:	e70a      	b.n	801bbf4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801bdde:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801bde0:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801bde4:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801bde6:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801bdea:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801bdec:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801bdf0:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801bdf2:	141f      	asrs	r7, r3, #16
 801bdf4:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801bdf6:	141b      	asrs	r3, r3, #16
 801bdf8:	fb01 3707 	mla	r7, r1, r7, r3
 801bdfc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801bdfe:	fa1f fc82 	uxth.w	ip, r2
 801be02:	eb03 0a07 	add.w	sl, r3, r7
 801be06:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801be0a:	f813 9007 	ldrb.w	r9, [r3, r7]
 801be0e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801be12:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801be16:	b29b      	uxth	r3, r3
 801be18:	2d00      	cmp	r5, #0
 801be1a:	f000 80fe 	beq.w	801c01a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 801be1e:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801be22:	940c      	str	r4, [sp, #48]	; 0x30
 801be24:	eb0a 0b01 	add.w	fp, sl, r1
 801be28:	fa1f fa85 	uxth.w	sl, r5
 801be2c:	fb0a fc0c 	mul.w	ip, sl, ip
 801be30:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801be34:	fa1f fa8a 	uxth.w	sl, sl
 801be38:	eba0 000c 	sub.w	r0, r0, ip
 801be3c:	eba3 030a 	sub.w	r3, r3, sl
 801be40:	b280      	uxth	r0, r0
 801be42:	fb08 f000 	mul.w	r0, r8, r0
 801be46:	b29b      	uxth	r3, r3
 801be48:	fb09 0303 	mla	r3, r9, r3, r0
 801be4c:	980c      	ldr	r0, [sp, #48]	; 0x30
 801be4e:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801be52:	940d      	str	r4, [sp, #52]	; 0x34
 801be54:	fb0a 3300 	mla	r3, sl, r0, r3
 801be58:	fb0c 3304 	mla	r3, ip, r4, r3
 801be5c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801be60:	2b00      	cmp	r3, #0
 801be62:	f000 80cc 	beq.w	801bffe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 801be66:	9808      	ldr	r0, [sp, #32]
 801be68:	9c08      	ldr	r4, [sp, #32]
 801be6a:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801be6e:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801be72:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801be76:	f000 80d5 	beq.w	801c024 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801be7a:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801be7e:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801be82:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801be86:	fb09 f707 	mul.w	r7, r9, r7
 801be8a:	fb0a fc0c 	mul.w	ip, sl, ip
 801be8e:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801be92:	f107 0b20 	add.w	fp, r7, #32
 801be96:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801be9a:	44cc      	add	ip, r9
 801be9c:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801bea0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801bea4:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801bea8:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801beac:	ea4c 0909 	orr.w	r9, ip, r9
 801beb0:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801beb4:	8847      	ldrh	r7, [r0, #2]
 801beb6:	d019      	beq.n	801beec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 801beb8:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801bebc:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801bec0:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801bec4:	fb08 f807 	mul.w	r8, r8, r7
 801bec8:	fb0a fc0c 	mul.w	ip, sl, ip
 801becc:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801bed0:	f108 0b20 	add.w	fp, r8, #32
 801bed4:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801bed8:	44bc      	add	ip, r7
 801beda:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801bede:	0a3f      	lsrs	r7, r7, #8
 801bee0:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801bee4:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801bee8:	ea4c 0707 	orr.w	r7, ip, r7
 801beec:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801bef0:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801bef4:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801bef8:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801befc:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801bf00:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801bf04:	ea4c 0909 	orr.w	r9, ip, r9
 801bf08:	ea4a 0707 	orr.w	r7, sl, r7
 801bf0c:	2d00      	cmp	r5, #0
 801bf0e:	f000 808b 	beq.w	801c028 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 801bf12:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801bf16:	3901      	subs	r1, #1
 801bf18:	0049      	lsls	r1, r1, #1
 801bf1a:	3102      	adds	r1, #2
 801bf1c:	eb00 0c01 	add.w	ip, r0, r1
 801bf20:	5a41      	ldrh	r1, [r0, r1]
 801bf22:	980c      	ldr	r0, [sp, #48]	; 0x30
 801bf24:	28ff      	cmp	r0, #255	; 0xff
 801bf26:	d019      	beq.n	801bf5c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 801bf28:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801bf2a:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 801bf2e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801bf32:	fb04 fa01 	mul.w	sl, r4, r1
 801bf36:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801bf3a:	fb08 f800 	mul.w	r8, r8, r0
 801bf3e:	f10a 0020 	add.w	r0, sl, #32
 801bf42:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801bf46:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801bf4a:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801bf4e:	4441      	add	r1, r8
 801bf50:	0a00      	lsrs	r0, r0, #8
 801bf52:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801bf56:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801bf5a:	4301      	orrs	r1, r0
 801bf5c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801bf5e:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801bf62:	2cff      	cmp	r4, #255	; 0xff
 801bf64:	d01a      	beq.n	801bf9c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 801bf66:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 801bf6a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801bf6e:	fb04 fa00 	mul.w	sl, r4, r0
 801bf72:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801bf76:	fb08 f80c 	mul.w	r8, r8, ip
 801bf7a:	f10a 0c20 	add.w	ip, sl, #32
 801bf7e:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801bf82:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801bf86:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801bf8a:	4440      	add	r0, r8
 801bf8c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bf90:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801bf94:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801bf98:	ea40 000c 	orr.w	r0, r0, ip
 801bf9c:	fb15 fc02 	smulbb	ip, r5, r2
 801bfa0:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801bfa4:	f1c5 0810 	rsb	r8, r5, #16
 801bfa8:	eba8 0802 	sub.w	r8, r8, r2
 801bfac:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801bfb0:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801bfb4:	437a      	muls	r2, r7
 801bfb6:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801bfba:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801bfbe:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801bfc2:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801bfc6:	fb09 2208 	mla	r2, r9, r8, r2
 801bfca:	ea4a 0101 	orr.w	r1, sl, r1
 801bfce:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801bfd2:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801bfd6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801bfda:	fb05 2201 	mla	r2, r5, r1, r2
 801bfde:	ea4b 0000 	orr.w	r0, fp, r0
 801bfe2:	fb0c 2200 	mla	r2, ip, r0, r2
 801bfe6:	0d57      	lsrs	r7, r2, #21
 801bfe8:	0952      	lsrs	r2, r2, #5
 801bfea:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801bfee:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801bff2:	433a      	orrs	r2, r7
 801bff4:	2bff      	cmp	r3, #255	; 0xff
 801bff6:	b292      	uxth	r2, r2
 801bff8:	d127      	bne.n	801c04a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 801bffa:	f8ae 2000 	strh.w	r2, [lr]
 801bffe:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801c000:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 801c002:	4413      	add	r3, r2
 801c004:	931d      	str	r3, [sp, #116]	; 0x74
 801c006:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 801c008:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801c00a:	441a      	add	r2, r3
 801c00c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801c00e:	921e      	str	r2, [sp, #120]	; 0x78
 801c010:	3b01      	subs	r3, #1
 801c012:	f10e 0e02 	add.w	lr, lr, #2
 801c016:	930f      	str	r3, [sp, #60]	; 0x3c
 801c018:	e627      	b.n	801bc6a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801c01a:	fb08 f000 	mul.w	r0, r8, r0
 801c01e:	fb09 0303 	mla	r3, r9, r3, r0
 801c022:	e71b      	b.n	801be5c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 801c024:	46b9      	mov	r9, r7
 801c026:	e743      	b.n	801beb0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 801c028:	f1c2 0110 	rsb	r1, r2, #16
 801c02c:	437a      	muls	r2, r7
 801c02e:	fb09 2901 	mla	r9, r9, r1, r2
 801c032:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801c036:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801c03a:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801c03e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c042:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801c046:	4302      	orrs	r2, r0
 801c048:	e7d4      	b.n	801bff4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 801c04a:	f8be 7000 	ldrh.w	r7, [lr]
 801c04e:	4c1c      	ldr	r4, [pc, #112]	; (801c0c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 801c050:	43db      	mvns	r3, r3
 801c052:	1238      	asrs	r0, r7, #8
 801c054:	fa5f fc83 	uxtb.w	ip, r3
 801c058:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801c05c:	10fd      	asrs	r5, r7, #3
 801c05e:	fb00 f00c 	mul.w	r0, r0, ip
 801c062:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801c066:	fb05 f10c 	mul.w	r1, r5, ip
 801c06a:	1c45      	adds	r5, r0, #1
 801c06c:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801c070:	1215      	asrs	r5, r2, #8
 801c072:	f025 0507 	bic.w	r5, r5, #7
 801c076:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801c07a:	1c4d      	adds	r5, r1, #1
 801c07c:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 801c080:	10d1      	asrs	r1, r2, #3
 801c082:	f021 0103 	bic.w	r1, r1, #3
 801c086:	00fb      	lsls	r3, r7, #3
 801c088:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801c08c:	b2db      	uxtb	r3, r3
 801c08e:	b2c0      	uxtb	r0, r0
 801c090:	00c9      	lsls	r1, r1, #3
 801c092:	fb03 f30c 	mul.w	r3, r3, ip
 801c096:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801c09a:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 801c09e:	4308      	orrs	r0, r1
 801c0a0:	1c59      	adds	r1, r3, #1
 801c0a2:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801c0a6:	00d2      	lsls	r2, r2, #3
 801c0a8:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801c0ac:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 801c0b0:	4318      	orrs	r0, r3
 801c0b2:	f8ae 0000 	strh.w	r0, [lr]
 801c0b6:	e7a2      	b.n	801bffe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 801c0b8:	b013      	add	sp, #76	; 0x4c
 801c0ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c0be:	bf00      	nop
 801c0c0:	fffff800 	.word	0xfffff800

0801c0c4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 801c0c4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801c0c8:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	; 0x24
 801c0cc:	fb05 4c03 	mla	ip, r5, r3, r4
 801c0d0:	2d00      	cmp	r5, #0
 801c0d2:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 801c0d6:	f89d 902c 	ldrb.w	r9, [sp, #44]	; 0x2c
 801c0da:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 801c0de:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 801c0e2:	8808      	ldrh	r0, [r1, #0]
 801c0e4:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 801c0e8:	f2c0 80a7 	blt.w	801c23a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 801c0ec:	45aa      	cmp	sl, r5
 801c0ee:	f340 80a4 	ble.w	801c23a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 801c0f2:	2c00      	cmp	r4, #0
 801c0f4:	f2c0 809f 	blt.w	801c236 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 801c0f8:	42a3      	cmp	r3, r4
 801c0fa:	f340 809c 	ble.w	801c236 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 801c0fe:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 801c102:	1c62      	adds	r2, r4, #1
 801c104:	f100 809c 	bmi.w	801c240 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801c108:	4293      	cmp	r3, r2
 801c10a:	f340 8099 	ble.w	801c240 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801c10e:	f1b9 0f00 	cmp.w	r9, #0
 801c112:	f000 8095 	beq.w	801c240 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801c116:	f8be c002 	ldrh.w	ip, [lr, #2]
 801c11a:	3501      	adds	r5, #1
 801c11c:	f100 8094 	bmi.w	801c248 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801c120:	45aa      	cmp	sl, r5
 801c122:	f340 8091 	ble.w	801c248 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801c126:	2f00      	cmp	r7, #0
 801c128:	f000 808e 	beq.w	801c248 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801c12c:	2c00      	cmp	r4, #0
 801c12e:	f2c0 8089 	blt.w	801c244 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 801c132:	42a3      	cmp	r3, r4
 801c134:	f340 8086 	ble.w	801c244 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 801c138:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 801c13c:	3401      	adds	r4, #1
 801c13e:	f100 8086 	bmi.w	801c24e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801c142:	42a3      	cmp	r3, r4
 801c144:	f340 8083 	ble.w	801c24e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801c148:	f1b9 0f00 	cmp.w	r9, #0
 801c14c:	d07f      	beq.n	801c24e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801c14e:	3301      	adds	r3, #1
 801c150:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 801c154:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801c158:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801c15c:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 801c160:	fb19 fe07 	smulbb	lr, r9, r7
 801c164:	ea44 0808 	orr.w	r8, r4, r8
 801c168:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801c16c:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801c170:	f1c7 0210 	rsb	r2, r7, #16
 801c174:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801c178:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801c17c:	ea44 0c0c 	orr.w	ip, r4, ip
 801c180:	eba2 0209 	sub.w	r2, r2, r9
 801c184:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801c188:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801c18c:	fb04 f40c 	mul.w	r4, r4, ip
 801c190:	fb02 4808 	mla	r8, r2, r8, r4
 801c194:	041a      	lsls	r2, r3, #16
 801c196:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801c19a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801c19e:	4313      	orrs	r3, r2
 801c1a0:	042a      	lsls	r2, r5, #16
 801c1a2:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801c1a6:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801c1aa:	fb0e 8303 	mla	r3, lr, r3, r8
 801c1ae:	432a      	orrs	r2, r5
 801c1b0:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801c1b4:	fb07 3202 	mla	r2, r7, r2, r3
 801c1b8:	0d53      	lsrs	r3, r2, #21
 801c1ba:	0952      	lsrs	r2, r2, #5
 801c1bc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801c1c0:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801c1c4:	431a      	orrs	r2, r3
 801c1c6:	b293      	uxth	r3, r2
 801c1c8:	b2b4      	uxth	r4, r6
 801c1ca:	1202      	asrs	r2, r0, #8
 801c1cc:	43f6      	mvns	r6, r6
 801c1ce:	b2f6      	uxtb	r6, r6
 801c1d0:	121d      	asrs	r5, r3, #8
 801c1d2:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801c1d6:	fb12 f206 	smulbb	r2, r2, r6
 801c1da:	10c7      	asrs	r7, r0, #3
 801c1dc:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801c1e0:	00c0      	lsls	r0, r0, #3
 801c1e2:	fb05 2504 	mla	r5, r5, r4, r2
 801c1e6:	b2c0      	uxtb	r0, r0
 801c1e8:	10da      	asrs	r2, r3, #3
 801c1ea:	00db      	lsls	r3, r3, #3
 801c1ec:	b2db      	uxtb	r3, r3
 801c1ee:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801c1f2:	fb10 f006 	smulbb	r0, r0, r6
 801c1f6:	b2ad      	uxth	r5, r5
 801c1f8:	fb03 0004 	mla	r0, r3, r4, r0
 801c1fc:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801c200:	fb17 f706 	smulbb	r7, r7, r6
 801c204:	b280      	uxth	r0, r0
 801c206:	1c6b      	adds	r3, r5, #1
 801c208:	fb02 7204 	mla	r2, r2, r4, r7
 801c20c:	b292      	uxth	r2, r2
 801c20e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801c212:	1c43      	adds	r3, r0, #1
 801c214:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801c218:	1c50      	adds	r0, r2, #1
 801c21a:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801c21e:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801c222:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801c226:	0952      	lsrs	r2, r2, #5
 801c228:	432b      	orrs	r3, r5
 801c22a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c22e:	4313      	orrs	r3, r2
 801c230:	800b      	strh	r3, [r1, #0]
 801c232:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801c236:	4680      	mov	r8, r0
 801c238:	e763      	b.n	801c102 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 801c23a:	4684      	mov	ip, r0
 801c23c:	4680      	mov	r8, r0
 801c23e:	e76c      	b.n	801c11a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 801c240:	4684      	mov	ip, r0
 801c242:	e76a      	b.n	801c11a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 801c244:	4605      	mov	r5, r0
 801c246:	e779      	b.n	801c13c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 801c248:	4603      	mov	r3, r0
 801c24a:	4605      	mov	r5, r0
 801c24c:	e782      	b.n	801c154 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 801c24e:	4603      	mov	r3, r0
 801c250:	e780      	b.n	801c154 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

0801c252 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c252:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c256:	b093      	sub	sp, #76	; 0x4c
 801c258:	461d      	mov	r5, r3
 801c25a:	9210      	str	r2, [sp, #64]	; 0x40
 801c25c:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801c25e:	f89d 2094 	ldrb.w	r2, [sp, #148]	; 0x94
 801c262:	920b      	str	r2, [sp, #44]	; 0x2c
 801c264:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	; 0x88
 801c268:	910a      	str	r1, [sp, #40]	; 0x28
 801c26a:	6859      	ldr	r1, [r3, #4]
 801c26c:	681b      	ldr	r3, [r3, #0]
 801c26e:	9011      	str	r0, [sp, #68]	; 0x44
 801c270:	fb01 2707 	mla	r7, r1, r7, r2
 801c274:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 801c278:	9307      	str	r3, [sp, #28]
 801c27a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c27c:	681b      	ldr	r3, [r3, #0]
 801c27e:	9309      	str	r3, [sp, #36]	; 0x24
 801c280:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801c282:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 801c286:	43db      	mvns	r3, r3
 801c288:	b2db      	uxtb	r3, r3
 801c28a:	9308      	str	r3, [sp, #32]
 801c28c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801c28e:	2b00      	cmp	r3, #0
 801c290:	dc03      	bgt.n	801c29a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801c292:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c294:	2b00      	cmp	r3, #0
 801c296:	f340 8203 	ble.w	801c6a0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801c29a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c29c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c2a0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801c2a4:	1e48      	subs	r0, r1, #1
 801c2a6:	f102 3cff 	add.w	ip, r2, #4294967295
 801c2aa:	2d00      	cmp	r5, #0
 801c2ac:	f340 80da 	ble.w	801c464 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 801c2b0:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801c2b4:	ea4f 4326 	mov.w	r3, r6, asr #16
 801c2b8:	d406      	bmi.n	801c2c8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801c2ba:	4586      	cmp	lr, r0
 801c2bc:	da04      	bge.n	801c2c8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801c2be:	2b00      	cmp	r3, #0
 801c2c0:	db02      	blt.n	801c2c8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801c2c2:	4563      	cmp	r3, ip
 801c2c4:	f2c0 80cf 	blt.w	801c466 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801c2c8:	f11e 0e01 	adds.w	lr, lr, #1
 801c2cc:	f100 80c1 	bmi.w	801c452 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801c2d0:	4571      	cmp	r1, lr
 801c2d2:	f2c0 80be 	blt.w	801c452 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801c2d6:	3301      	adds	r3, #1
 801c2d8:	f100 80bb 	bmi.w	801c452 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801c2dc:	429a      	cmp	r2, r3
 801c2de:	f2c0 80b8 	blt.w	801c452 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801c2e2:	f8dd 801c 	ldr.w	r8, [sp, #28]
 801c2e6:	46a9      	mov	r9, r5
 801c2e8:	f1b9 0f00 	cmp.w	r9, #0
 801c2ec:	f340 80d8 	ble.w	801c4a0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 801c2f0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c2f2:	1421      	asrs	r1, r4, #16
 801c2f4:	ea4f 4026 	mov.w	r0, r6, asr #16
 801c2f8:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801c2fc:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801c300:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801c304:	f100 8111 	bmi.w	801c52a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801c308:	f10e 3aff 	add.w	sl, lr, #4294967295
 801c30c:	4551      	cmp	r1, sl
 801c30e:	f280 810c 	bge.w	801c52a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801c312:	2800      	cmp	r0, #0
 801c314:	f2c0 8109 	blt.w	801c52a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801c318:	f103 3aff 	add.w	sl, r3, #4294967295
 801c31c:	4550      	cmp	r0, sl
 801c31e:	f280 8104 	bge.w	801c52a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801c322:	fa0f f38e 	sxth.w	r3, lr
 801c326:	fb00 1103 	mla	r1, r0, r3, r1
 801c32a:	9809      	ldr	r0, [sp, #36]	; 0x24
 801c32c:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 801c330:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 801c334:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 801c338:	f1bc 0f00 	cmp.w	ip, #0
 801c33c:	d007      	beq.n	801c34e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 801c33e:	005b      	lsls	r3, r3, #1
 801c340:	eb0a 0003 	add.w	r0, sl, r3
 801c344:	f83a 3003 	ldrh.w	r3, [sl, r3]
 801c348:	930c      	str	r3, [sp, #48]	; 0x30
 801c34a:	8843      	ldrh	r3, [r0, #2]
 801c34c:	930d      	str	r3, [sp, #52]	; 0x34
 801c34e:	ea4f 400e 	mov.w	r0, lr, lsl #16
 801c352:	fb12 f30c 	smulbb	r3, r2, ip
 801c356:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801c35a:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801c35e:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801c362:	10db      	asrs	r3, r3, #3
 801c364:	ea40 000e 	orr.w	r0, r0, lr
 801c368:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c36c:	f1cc 0e10 	rsb	lr, ip, #16
 801c370:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801c374:	ebae 0e02 	sub.w	lr, lr, r2
 801c378:	ea4a 0101 	orr.w	r1, sl, r1
 801c37c:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801c380:	4351      	muls	r1, r2
 801c382:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801c384:	9f08      	ldr	r7, [sp, #32]
 801c386:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801c38a:	fb0e 1e00 	mla	lr, lr, r0, r1
 801c38e:	0410      	lsls	r0, r2, #16
 801c390:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801c394:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801c398:	4310      	orrs	r0, r2
 801c39a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801c39c:	990c      	ldr	r1, [sp, #48]	; 0x30
 801c39e:	0412      	lsls	r2, r2, #16
 801c3a0:	fb03 e000 	mla	r0, r3, r0, lr
 801c3a4:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801c3a8:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 801c3ac:	ea42 020e 	orr.w	r2, r2, lr
 801c3b0:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801c3b4:	fb03 0302 	mla	r3, r3, r2, r0
 801c3b8:	0d5a      	lsrs	r2, r3, #21
 801c3ba:	095b      	lsrs	r3, r3, #5
 801c3bc:	f8b8 0000 	ldrh.w	r0, [r8]
 801c3c0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c3c4:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801c3c8:	4313      	orrs	r3, r2
 801c3ca:	b29b      	uxth	r3, r3
 801c3cc:	1201      	asrs	r1, r0, #8
 801c3ce:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 801c3d2:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801c3d6:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801c3da:	fb11 f107 	smulbb	r1, r1, r7
 801c3de:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801c3e2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801c3e6:	00c0      	lsls	r0, r0, #3
 801c3e8:	fb0c 1c02 	mla	ip, ip, r2, r1
 801c3ec:	b2c0      	uxtb	r0, r0
 801c3ee:	10d9      	asrs	r1, r3, #3
 801c3f0:	00db      	lsls	r3, r3, #3
 801c3f2:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801c3f6:	b2db      	uxtb	r3, r3
 801c3f8:	fb10 f007 	smulbb	r0, r0, r7
 801c3fc:	fa1f fc8c 	uxth.w	ip, ip
 801c400:	fb03 0302 	mla	r3, r3, r2, r0
 801c404:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801c408:	fb1e fe07 	smulbb	lr, lr, r7
 801c40c:	fb01 e102 	mla	r1, r1, r2, lr
 801c410:	b29a      	uxth	r2, r3
 801c412:	f10c 0301 	add.w	r3, ip, #1
 801c416:	b289      	uxth	r1, r1
 801c418:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801c41c:	1c53      	adds	r3, r2, #1
 801c41e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801c422:	1c4a      	adds	r2, r1, #1
 801c424:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801c428:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801c42c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801c430:	0949      	lsrs	r1, r1, #5
 801c432:	ea43 030c 	orr.w	r3, r3, ip
 801c436:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801c43a:	430b      	orrs	r3, r1
 801c43c:	f8a8 3000 	strh.w	r3, [r8]
 801c440:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801c442:	441c      	add	r4, r3
 801c444:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801c446:	f108 0802 	add.w	r8, r8, #2
 801c44a:	441e      	add	r6, r3
 801c44c:	f109 39ff 	add.w	r9, r9, #4294967295
 801c450:	e74a      	b.n	801c2e8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801c452:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801c454:	441c      	add	r4, r3
 801c456:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801c458:	441e      	add	r6, r3
 801c45a:	9b07      	ldr	r3, [sp, #28]
 801c45c:	3302      	adds	r3, #2
 801c45e:	3d01      	subs	r5, #1
 801c460:	9307      	str	r3, [sp, #28]
 801c462:	e722      	b.n	801c2aa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801c464:	d022      	beq.n	801c4ac <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 801c466:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801c468:	1e6b      	subs	r3, r5, #1
 801c46a:	fb00 4003 	mla	r0, r0, r3, r4
 801c46e:	1400      	asrs	r0, r0, #16
 801c470:	f53f af37 	bmi.w	801c2e2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801c474:	3901      	subs	r1, #1
 801c476:	4288      	cmp	r0, r1
 801c478:	f6bf af33 	bge.w	801c2e2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801c47c:	9920      	ldr	r1, [sp, #128]	; 0x80
 801c47e:	fb01 6303 	mla	r3, r1, r3, r6
 801c482:	141b      	asrs	r3, r3, #16
 801c484:	f53f af2d 	bmi.w	801c2e2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801c488:	3a01      	subs	r2, #1
 801c48a:	4293      	cmp	r3, r2
 801c48c:	f6bf af29 	bge.w	801c2e2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801c490:	f8dd 901c 	ldr.w	r9, [sp, #28]
 801c494:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 801c498:	46a8      	mov	r8, r5
 801c49a:	f1b8 0f00 	cmp.w	r8, #0
 801c49e:	dc5e      	bgt.n	801c55e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801c4a0:	9b07      	ldr	r3, [sp, #28]
 801c4a2:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801c4a6:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801c4aa:	9307      	str	r3, [sp, #28]
 801c4ac:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801c4ae:	2b00      	cmp	r3, #0
 801c4b0:	f340 80f6 	ble.w	801c6a0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801c4b4:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c4b8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801c4bc:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801c4c0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801c4c2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c4c6:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c4ca:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c4ce:	eef0 6a62 	vmov.f32	s13, s5
 801c4d2:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c4d6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c4da:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c4de:	ee16 4a90 	vmov	r4, s13
 801c4e2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c4e6:	eef0 6a43 	vmov.f32	s13, s6
 801c4ea:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c4ee:	ee12 2a90 	vmov	r2, s5
 801c4f2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c4f6:	fb92 f3f3 	sdiv	r3, r2, r3
 801c4fa:	ee13 2a10 	vmov	r2, s6
 801c4fe:	931f      	str	r3, [sp, #124]	; 0x7c
 801c500:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801c502:	fb92 f3f3 	sdiv	r3, r2, r3
 801c506:	9320      	str	r3, [sp, #128]	; 0x80
 801c508:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801c50a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801c50c:	3b01      	subs	r3, #1
 801c50e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c512:	930a      	str	r3, [sp, #40]	; 0x28
 801c514:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801c516:	ee16 6a90 	vmov	r6, s13
 801c51a:	bf14      	ite	ne
 801c51c:	461d      	movne	r5, r3
 801c51e:	4615      	moveq	r5, r2
 801c520:	eeb0 3a67 	vmov.f32	s6, s15
 801c524:	eef0 2a47 	vmov.f32	s5, s14
 801c528:	e6b0      	b.n	801c28c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801c52a:	f111 0a01 	adds.w	sl, r1, #1
 801c52e:	d487      	bmi.n	801c440 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801c530:	45d6      	cmp	lr, sl
 801c532:	db85      	blt.n	801c440 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801c534:	f110 0a01 	adds.w	sl, r0, #1
 801c538:	d482      	bmi.n	801c440 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801c53a:	4553      	cmp	r3, sl
 801c53c:	db80      	blt.n	801c440 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801c53e:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801c540:	9101      	str	r1, [sp, #4]
 801c542:	b21b      	sxth	r3, r3
 801c544:	e9cd 0202 	strd	r0, r2, [sp, #8]
 801c548:	9300      	str	r3, [sp, #0]
 801c54a:	e9cd c704 	strd	ip, r7, [sp, #16]
 801c54e:	fa0f f38e 	sxth.w	r3, lr
 801c552:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801c554:	9811      	ldr	r0, [sp, #68]	; 0x44
 801c556:	4641      	mov	r1, r8
 801c558:	f7ff fdb4 	bl	801c0c4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 801c55c:	e770      	b.n	801c440 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801c55e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c560:	9f09      	ldr	r7, [sp, #36]	; 0x24
 801c562:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c566:	1430      	asrs	r0, r6, #16
 801c568:	1423      	asrs	r3, r4, #16
 801c56a:	fb01 3000 	mla	r0, r1, r0, r3
 801c56e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c570:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 801c574:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 801c578:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801c57c:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801c580:	8858      	ldrh	r0, [r3, #2]
 801c582:	f1be 0f00 	cmp.w	lr, #0
 801c586:	d00b      	beq.n	801c5a0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 801c588:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801c58c:	3901      	subs	r1, #1
 801c58e:	0049      	lsls	r1, r1, #1
 801c590:	3102      	adds	r1, #2
 801c592:	eb03 0b01 	add.w	fp, r3, r1
 801c596:	5a5b      	ldrh	r3, [r3, r1]
 801c598:	930e      	str	r3, [sp, #56]	; 0x38
 801c59a:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801c59e:	930f      	str	r3, [sp, #60]	; 0x3c
 801c5a0:	ea4f 410c 	mov.w	r1, ip, lsl #16
 801c5a4:	fb12 f30e 	smulbb	r3, r2, lr
 801c5a8:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801c5ac:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801c5b0:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 801c5b4:	10db      	asrs	r3, r3, #3
 801c5b6:	ea41 010c 	orr.w	r1, r1, ip
 801c5ba:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801c5be:	f1ce 0c10 	rsb	ip, lr, #16
 801c5c2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801c5c6:	ebac 0c02 	sub.w	ip, ip, r2
 801c5ca:	ea4b 0000 	orr.w	r0, fp, r0
 801c5ce:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801c5d2:	4350      	muls	r0, r2
 801c5d4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801c5d6:	9f08      	ldr	r7, [sp, #32]
 801c5d8:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801c5dc:	fb0c 0c01 	mla	ip, ip, r1, r0
 801c5e0:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801c5e4:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 801c5e8:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801c5ea:	980e      	ldr	r0, [sp, #56]	; 0x38
 801c5ec:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801c5f0:	0412      	lsls	r2, r2, #16
 801c5f2:	ea4b 0101 	orr.w	r1, fp, r1
 801c5f6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801c5fa:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801c5fe:	fb03 c101 	mla	r1, r3, r1, ip
 801c602:	4302      	orrs	r2, r0
 801c604:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801c608:	fb03 1202 	mla	r2, r3, r2, r1
 801c60c:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 801c610:	0952      	lsrs	r2, r2, #5
 801c612:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 801c616:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801c61a:	f8b9 2000 	ldrh.w	r2, [r9]
 801c61e:	ea4b 0303 	orr.w	r3, fp, r3
 801c622:	b29b      	uxth	r3, r3
 801c624:	1211      	asrs	r1, r2, #8
 801c626:	1218      	asrs	r0, r3, #8
 801c628:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801c62c:	fb11 f107 	smulbb	r1, r1, r7
 801c630:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 801c634:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801c638:	00d2      	lsls	r2, r2, #3
 801c63a:	fb00 100a 	mla	r0, r0, sl, r1
 801c63e:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801c642:	10d9      	asrs	r1, r3, #3
 801c644:	b2d2      	uxtb	r2, r2
 801c646:	00db      	lsls	r3, r3, #3
 801c648:	fb1c fc07 	smulbb	ip, ip, r7
 801c64c:	fb12 f207 	smulbb	r2, r2, r7
 801c650:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801c654:	b2db      	uxtb	r3, r3
 801c656:	b280      	uxth	r0, r0
 801c658:	fb01 c10a 	mla	r1, r1, sl, ip
 801c65c:	fb03 230a 	mla	r3, r3, sl, r2
 801c660:	b29b      	uxth	r3, r3
 801c662:	b289      	uxth	r1, r1
 801c664:	1c42      	adds	r2, r0, #1
 801c666:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801c66a:	f101 0c01 	add.w	ip, r1, #1
 801c66e:	1c5a      	adds	r2, r3, #1
 801c670:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801c674:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801c678:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801c67a:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801c67e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801c682:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801c686:	4310      	orrs	r0, r2
 801c688:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801c68c:	441c      	add	r4, r3
 801c68e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801c690:	ea40 000c 	orr.w	r0, r0, ip
 801c694:	f829 0b02 	strh.w	r0, [r9], #2
 801c698:	441e      	add	r6, r3
 801c69a:	f108 38ff 	add.w	r8, r8, #4294967295
 801c69e:	e6fc      	b.n	801c49a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 801c6a0:	b013      	add	sp, #76	; 0x4c
 801c6a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801c6a6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 801c6a6:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801c6aa:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 801c6ae:	fb0e 4703 	mla	r7, lr, r3, r4
 801c6b2:	f1be 0f00 	cmp.w	lr, #0
 801c6b6:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 801c6ba:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
 801c6be:	f89d 602c 	ldrb.w	r6, [sp, #44]	; 0x2c
 801c6c2:	8808      	ldrh	r0, [r1, #0]
 801c6c4:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 801c6c8:	db60      	blt.n	801c78c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 801c6ca:	45f1      	cmp	r9, lr
 801c6cc:	dd5e      	ble.n	801c78c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 801c6ce:	2c00      	cmp	r4, #0
 801c6d0:	db5a      	blt.n	801c788 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 801c6d2:	42a3      	cmp	r3, r4
 801c6d4:	dd58      	ble.n	801c788 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 801c6d6:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 801c6da:	1c62      	adds	r2, r4, #1
 801c6dc:	d459      	bmi.n	801c792 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801c6de:	4293      	cmp	r3, r2
 801c6e0:	dd57      	ble.n	801c792 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801c6e2:	2d00      	cmp	r5, #0
 801c6e4:	d055      	beq.n	801c792 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801c6e6:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 801c6ea:	f11e 0e01 	adds.w	lr, lr, #1
 801c6ee:	d454      	bmi.n	801c79a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801c6f0:	45f1      	cmp	r9, lr
 801c6f2:	dd52      	ble.n	801c79a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801c6f4:	2e00      	cmp	r6, #0
 801c6f6:	d050      	beq.n	801c79a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801c6f8:	2c00      	cmp	r4, #0
 801c6fa:	db4c      	blt.n	801c796 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 801c6fc:	42a3      	cmp	r3, r4
 801c6fe:	dd4a      	ble.n	801c796 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 801c700:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 801c704:	3401      	adds	r4, #1
 801c706:	d405      	bmi.n	801c714 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801c708:	42a3      	cmp	r3, r4
 801c70a:	dd03      	ble.n	801c714 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801c70c:	b115      	cbz	r5, 801c714 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801c70e:	3301      	adds	r3, #1
 801c710:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 801c714:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801c718:	fb15 f406 	smulbb	r4, r5, r6
 801c71c:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801c720:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801c724:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801c728:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801c72c:	ea43 0c0c 	orr.w	ip, r3, ip
 801c730:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801c734:	f1c6 0310 	rsb	r3, r6, #16
 801c738:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801c73c:	1b5b      	subs	r3, r3, r5
 801c73e:	ea4e 0707 	orr.w	r7, lr, r7
 801c742:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801c746:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801c74a:	437d      	muls	r5, r7
 801c74c:	fb03 5c0c 	mla	ip, r3, ip, r5
 801c750:	0403      	lsls	r3, r0, #16
 801c752:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801c756:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801c75a:	4318      	orrs	r0, r3
 801c75c:	0413      	lsls	r3, r2, #16
 801c75e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801c762:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801c766:	4313      	orrs	r3, r2
 801c768:	fb04 c000 	mla	r0, r4, r0, ip
 801c76c:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801c770:	fb06 0003 	mla	r0, r6, r3, r0
 801c774:	0d43      	lsrs	r3, r0, #21
 801c776:	0940      	lsrs	r0, r0, #5
 801c778:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801c77c:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801c780:	4318      	orrs	r0, r3
 801c782:	8008      	strh	r0, [r1, #0]
 801c784:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801c788:	4684      	mov	ip, r0
 801c78a:	e7a6      	b.n	801c6da <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 801c78c:	4607      	mov	r7, r0
 801c78e:	4684      	mov	ip, r0
 801c790:	e7ab      	b.n	801c6ea <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801c792:	4607      	mov	r7, r0
 801c794:	e7a9      	b.n	801c6ea <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801c796:	4602      	mov	r2, r0
 801c798:	e7b4      	b.n	801c704 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 801c79a:	4602      	mov	r2, r0
 801c79c:	e7ba      	b.n	801c714 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

0801c79e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c79e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c7a2:	b08f      	sub	sp, #60	; 0x3c
 801c7a4:	461d      	mov	r5, r3
 801c7a6:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801c7a8:	920c      	str	r2, [sp, #48]	; 0x30
 801c7aa:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	; 0x78
 801c7ae:	9107      	str	r1, [sp, #28]
 801c7b0:	6859      	ldr	r1, [r3, #4]
 801c7b2:	681b      	ldr	r3, [r3, #0]
 801c7b4:	900d      	str	r0, [sp, #52]	; 0x34
 801c7b6:	fb01 2707 	mla	r7, r1, r7, r2
 801c7ba:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 801c7be:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801c7c0:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	; 0x64
 801c7c4:	f8d3 8000 	ldr.w	r8, [r3]
 801c7c8:	9b07      	ldr	r3, [sp, #28]
 801c7ca:	2b00      	cmp	r3, #0
 801c7cc:	dc03      	bgt.n	801c7d6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801c7ce:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801c7d0:	2b00      	cmp	r3, #0
 801c7d2:	f340 8181 	ble.w	801cad8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 801c7d6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801c7d8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c7dc:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801c7e0:	1e48      	subs	r0, r1, #1
 801c7e2:	f102 3cff 	add.w	ip, r2, #4294967295
 801c7e6:	2d00      	cmp	r5, #0
 801c7e8:	f340 809b 	ble.w	801c922 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 801c7ec:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801c7f0:	ea4f 4326 	mov.w	r3, r6, asr #16
 801c7f4:	d406      	bmi.n	801c804 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801c7f6:	4586      	cmp	lr, r0
 801c7f8:	da04      	bge.n	801c804 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801c7fa:	2b00      	cmp	r3, #0
 801c7fc:	db02      	blt.n	801c804 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801c7fe:	4563      	cmp	r3, ip
 801c800:	f2c0 8090 	blt.w	801c924 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801c804:	f11e 0e01 	adds.w	lr, lr, #1
 801c808:	f100 8084 	bmi.w	801c914 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801c80c:	4571      	cmp	r1, lr
 801c80e:	f2c0 8081 	blt.w	801c914 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801c812:	3301      	adds	r3, #1
 801c814:	d47e      	bmi.n	801c914 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801c816:	429a      	cmp	r2, r3
 801c818:	db7c      	blt.n	801c914 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801c81a:	46aa      	mov	sl, r5
 801c81c:	46b9      	mov	r9, r7
 801c81e:	f1ba 0f00 	cmp.w	sl, #0
 801c822:	f340 8099 	ble.w	801c958 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 801c826:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801c828:	1421      	asrs	r1, r4, #16
 801c82a:	ea4f 4026 	mov.w	r0, r6, asr #16
 801c82e:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801c832:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801c836:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801c83a:	f100 80d0 	bmi.w	801c9de <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801c83e:	f10e 3bff 	add.w	fp, lr, #4294967295
 801c842:	4559      	cmp	r1, fp
 801c844:	f280 80cb 	bge.w	801c9de <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801c848:	2800      	cmp	r0, #0
 801c84a:	f2c0 80c8 	blt.w	801c9de <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801c84e:	f103 3bff 	add.w	fp, r3, #4294967295
 801c852:	4558      	cmp	r0, fp
 801c854:	f280 80c3 	bge.w	801c9de <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801c858:	fa0f fe8e 	sxth.w	lr, lr
 801c85c:	fb00 110e 	mla	r1, r0, lr, r1
 801c860:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801c864:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 801c868:	8841      	ldrh	r1, [r0, #2]
 801c86a:	f1bc 0f00 	cmp.w	ip, #0
 801c86e:	d00b      	beq.n	801c888 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 801c870:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 801c874:	3b01      	subs	r3, #1
 801c876:	005b      	lsls	r3, r3, #1
 801c878:	3302      	adds	r3, #2
 801c87a:	eb00 0e03 	add.w	lr, r0, r3
 801c87e:	5ac3      	ldrh	r3, [r0, r3]
 801c880:	9308      	str	r3, [sp, #32]
 801c882:	f8be 3002 	ldrh.w	r3, [lr, #2]
 801c886:	9309      	str	r3, [sp, #36]	; 0x24
 801c888:	ea4f 400b 	mov.w	r0, fp, lsl #16
 801c88c:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801c890:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801c894:	ea40 000b 	orr.w	r0, r0, fp
 801c898:	fb12 f30c 	smulbb	r3, r2, ip
 801c89c:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801c8a0:	10db      	asrs	r3, r3, #3
 801c8a2:	f1cc 0e10 	rsb	lr, ip, #16
 801c8a6:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801c8aa:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801c8ae:	ebae 0e02 	sub.w	lr, lr, r2
 801c8b2:	ea4b 0101 	orr.w	r1, fp, r1
 801c8b6:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801c8ba:	4351      	muls	r1, r2
 801c8bc:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801c8be:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801c8c2:	fb0e 1e00 	mla	lr, lr, r0, r1
 801c8c6:	0410      	lsls	r0, r2, #16
 801c8c8:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801c8cc:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801c8d0:	4310      	orrs	r0, r2
 801c8d2:	9a08      	ldr	r2, [sp, #32]
 801c8d4:	9908      	ldr	r1, [sp, #32]
 801c8d6:	0412      	lsls	r2, r2, #16
 801c8d8:	fb03 e000 	mla	r0, r3, r0, lr
 801c8dc:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801c8e0:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 801c8e4:	ea42 020e 	orr.w	r2, r2, lr
 801c8e8:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801c8ec:	fb03 0302 	mla	r3, r3, r2, r0
 801c8f0:	0d5a      	lsrs	r2, r3, #21
 801c8f2:	095b      	lsrs	r3, r3, #5
 801c8f4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c8f8:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801c8fc:	4313      	orrs	r3, r2
 801c8fe:	f8a9 3000 	strh.w	r3, [r9]
 801c902:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801c904:	441c      	add	r4, r3
 801c906:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801c908:	f109 0902 	add.w	r9, r9, #2
 801c90c:	441e      	add	r6, r3
 801c90e:	f10a 3aff 	add.w	sl, sl, #4294967295
 801c912:	e784      	b.n	801c81e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801c914:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801c916:	441c      	add	r4, r3
 801c918:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801c91a:	3d01      	subs	r5, #1
 801c91c:	441e      	add	r6, r3
 801c91e:	3702      	adds	r7, #2
 801c920:	e761      	b.n	801c7e6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801c922:	d01d      	beq.n	801c960 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801c924:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801c926:	1e6b      	subs	r3, r5, #1
 801c928:	fb00 4003 	mla	r0, r0, r3, r4
 801c92c:	1400      	asrs	r0, r0, #16
 801c92e:	f53f af74 	bmi.w	801c81a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801c932:	3901      	subs	r1, #1
 801c934:	4288      	cmp	r0, r1
 801c936:	f6bf af70 	bge.w	801c81a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801c93a:	991c      	ldr	r1, [sp, #112]	; 0x70
 801c93c:	fb01 6303 	mla	r3, r1, r3, r6
 801c940:	141b      	asrs	r3, r3, #16
 801c942:	f53f af6a 	bmi.w	801c81a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801c946:	3a01      	subs	r2, #1
 801c948:	4293      	cmp	r3, r2
 801c94a:	f6bf af66 	bge.w	801c81a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801c94e:	46a9      	mov	r9, r5
 801c950:	46ba      	mov	sl, r7
 801c952:	f1b9 0f00 	cmp.w	r9, #0
 801c956:	dc5a      	bgt.n	801ca0e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 801c958:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801c95c:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 801c960:	9b07      	ldr	r3, [sp, #28]
 801c962:	2b00      	cmp	r3, #0
 801c964:	f340 80b8 	ble.w	801cad8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 801c968:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c96c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801c970:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801c974:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801c976:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c97a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c97e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c982:	eef0 6a62 	vmov.f32	s13, s5
 801c986:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c98a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c98e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c992:	ee16 4a90 	vmov	r4, s13
 801c996:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c99a:	eef0 6a43 	vmov.f32	s13, s6
 801c99e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c9a2:	ee12 2a90 	vmov	r2, s5
 801c9a6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c9aa:	fb92 f3f3 	sdiv	r3, r2, r3
 801c9ae:	ee13 2a10 	vmov	r2, s6
 801c9b2:	931b      	str	r3, [sp, #108]	; 0x6c
 801c9b4:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801c9b6:	fb92 f3f3 	sdiv	r3, r2, r3
 801c9ba:	931c      	str	r3, [sp, #112]	; 0x70
 801c9bc:	9b07      	ldr	r3, [sp, #28]
 801c9be:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801c9c0:	3b01      	subs	r3, #1
 801c9c2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c9c6:	9307      	str	r3, [sp, #28]
 801c9c8:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801c9ca:	ee16 6a90 	vmov	r6, s13
 801c9ce:	bf14      	ite	ne
 801c9d0:	461d      	movne	r5, r3
 801c9d2:	4615      	moveq	r5, r2
 801c9d4:	eeb0 3a67 	vmov.f32	s6, s15
 801c9d8:	eef0 2a47 	vmov.f32	s5, s14
 801c9dc:	e6f4      	b.n	801c7c8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801c9de:	f111 0b01 	adds.w	fp, r1, #1
 801c9e2:	d48e      	bmi.n	801c902 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801c9e4:	45de      	cmp	lr, fp
 801c9e6:	db8c      	blt.n	801c902 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801c9e8:	f110 0b01 	adds.w	fp, r0, #1
 801c9ec:	d489      	bmi.n	801c902 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801c9ee:	455b      	cmp	r3, fp
 801c9f0:	db87      	blt.n	801c902 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801c9f2:	b21b      	sxth	r3, r3
 801c9f4:	e9cd 1001 	strd	r1, r0, [sp, #4]
 801c9f8:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 801c9fc:	9300      	str	r3, [sp, #0]
 801c9fe:	4642      	mov	r2, r8
 801ca00:	fa0f f38e 	sxth.w	r3, lr
 801ca04:	4649      	mov	r1, r9
 801ca06:	980d      	ldr	r0, [sp, #52]	; 0x34
 801ca08:	f7ff fe4d 	bl	801c6a6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 801ca0c:	e779      	b.n	801c902 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801ca0e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801ca10:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801ca14:	1420      	asrs	r0, r4, #16
 801ca16:	1431      	asrs	r1, r6, #16
 801ca18:	fb03 0101 	mla	r1, r3, r1, r0
 801ca1c:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801ca20:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801ca24:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 801ca28:	8841      	ldrh	r1, [r0, #2]
 801ca2a:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801ca2e:	f1be 0f00 	cmp.w	lr, #0
 801ca32:	d00b      	beq.n	801ca4c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 801ca34:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 801ca38:	3b01      	subs	r3, #1
 801ca3a:	005b      	lsls	r3, r3, #1
 801ca3c:	3302      	adds	r3, #2
 801ca3e:	eb00 0b03 	add.w	fp, r0, r3
 801ca42:	5ac3      	ldrh	r3, [r0, r3]
 801ca44:	930a      	str	r3, [sp, #40]	; 0x28
 801ca46:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801ca4a:	930b      	str	r3, [sp, #44]	; 0x2c
 801ca4c:	ea4f 400c 	mov.w	r0, ip, lsl #16
 801ca50:	fb12 f30e 	smulbb	r3, r2, lr
 801ca54:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801ca58:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801ca5c:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801ca60:	10db      	asrs	r3, r3, #3
 801ca62:	ea40 000c 	orr.w	r0, r0, ip
 801ca66:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801ca6a:	f1ce 0c10 	rsb	ip, lr, #16
 801ca6e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801ca72:	ebac 0c02 	sub.w	ip, ip, r2
 801ca76:	ea4b 0101 	orr.w	r1, fp, r1
 801ca7a:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801ca7e:	4351      	muls	r1, r2
 801ca80:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801ca82:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801ca86:	fb0c 1c00 	mla	ip, ip, r0, r1
 801ca8a:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801ca8e:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 801ca92:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801ca94:	990a      	ldr	r1, [sp, #40]	; 0x28
 801ca96:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801ca9a:	0412      	lsls	r2, r2, #16
 801ca9c:	ea4b 0000 	orr.w	r0, fp, r0
 801caa0:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801caa4:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 801caa8:	fb03 c000 	mla	r0, r3, r0, ip
 801caac:	ea42 0b0b 	orr.w	fp, r2, fp
 801cab0:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801cab4:	fb03 000b 	mla	r0, r3, fp, r0
 801cab8:	0d43      	lsrs	r3, r0, #21
 801caba:	0940      	lsrs	r0, r0, #5
 801cabc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801cac0:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801cac4:	4318      	orrs	r0, r3
 801cac6:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801cac8:	f82a 0b02 	strh.w	r0, [sl], #2
 801cacc:	441c      	add	r4, r3
 801cace:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801cad0:	f109 39ff 	add.w	r9, r9, #4294967295
 801cad4:	441e      	add	r6, r3
 801cad6:	e73c      	b.n	801c952 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 801cad8:	b00f      	add	sp, #60	; 0x3c
 801cada:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801cade <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 801cade:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cae2:	b085      	sub	sp, #20
 801cae4:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 801cae8:	9102      	str	r1, [sp, #8]
 801caea:	2c00      	cmp	r4, #0
 801caec:	fb04 7103 	mla	r1, r4, r3, r7
 801caf0:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 801caf4:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 801caf8:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 801cafc:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 801cb00:	f2c0 811b 	blt.w	801cd3a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 801cb04:	45a6      	cmp	lr, r4
 801cb06:	f340 8118 	ble.w	801cd3a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 801cb0a:	2f00      	cmp	r7, #0
 801cb0c:	f2c0 8113 	blt.w	801cd36 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 801cb10:	42bb      	cmp	r3, r7
 801cb12:	f340 8110 	ble.w	801cd36 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 801cb16:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 801cb1a:	1c7a      	adds	r2, r7, #1
 801cb1c:	f100 8110 	bmi.w	801cd40 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 801cb20:	4293      	cmp	r3, r2
 801cb22:	f340 810d 	ble.w	801cd40 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 801cb26:	2e00      	cmp	r6, #0
 801cb28:	f000 810c 	beq.w	801cd44 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 801cb2c:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801cb30:	3401      	adds	r4, #1
 801cb32:	f100 810b 	bmi.w	801cd4c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 801cb36:	45a6      	cmp	lr, r4
 801cb38:	f340 8108 	ble.w	801cd4c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 801cb3c:	2800      	cmp	r0, #0
 801cb3e:	f000 8108 	beq.w	801cd52 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 801cb42:	2f00      	cmp	r7, #0
 801cb44:	f2c0 8100 	blt.w	801cd48 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 801cb48:	42bb      	cmp	r3, r7
 801cb4a:	f340 80fd 	ble.w	801cd48 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 801cb4e:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801cb52:	3701      	adds	r7, #1
 801cb54:	f100 8100 	bmi.w	801cd58 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 801cb58:	42bb      	cmp	r3, r7
 801cb5a:	f340 80fd 	ble.w	801cd58 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 801cb5e:	2e00      	cmp	r6, #0
 801cb60:	f000 80fc 	beq.w	801cd5c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 801cb64:	3301      	adds	r3, #1
 801cb66:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 801cb6a:	b2b6      	uxth	r6, r6
 801cb6c:	b280      	uxth	r0, r0
 801cb6e:	fb00 fe06 	mul.w	lr, r0, r6
 801cb72:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801cb76:	0136      	lsls	r6, r6, #4
 801cb78:	eba6 070e 	sub.w	r7, r6, lr
 801cb7c:	b280      	uxth	r0, r0
 801cb7e:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 801cb82:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801cb86:	b2bf      	uxth	r7, r7
 801cb88:	1a1b      	subs	r3, r3, r0
 801cb8a:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801cb8e:	b29b      	uxth	r3, r3
 801cb90:	fb0a f607 	mul.w	r6, sl, r7
 801cb94:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801cb98:	fb0b 6603 	mla	r6, fp, r3, r6
 801cb9c:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801cba0:	fb00 6609 	mla	r6, r0, r9, r6
 801cba4:	fb0e 6608 	mla	r6, lr, r8, r6
 801cba8:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801cbac:	9600      	str	r6, [sp, #0]
 801cbae:	2e00      	cmp	r6, #0
 801cbb0:	f000 80be 	beq.w	801cd30 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 801cbb4:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801cbb8:	fb0b fc0c 	mul.w	ip, fp, ip
 801cbbc:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801cbc0:	fb0b f505 	mul.w	r5, fp, r5
 801cbc4:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801cbc8:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 801cbcc:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801cbd0:	44dc      	add	ip, fp
 801cbd2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801cbd6:	9501      	str	r5, [sp, #4]
 801cbd8:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 801cbdc:	9503      	str	r5, [sp, #12]
 801cbde:	9d01      	ldr	r5, [sp, #4]
 801cbe0:	9e02      	ldr	r6, [sp, #8]
 801cbe2:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 801cbe6:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801cbea:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 801cbee:	fb0a fc0c 	mul.w	ip, sl, ip
 801cbf2:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801cbf6:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801cbfa:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801cbfe:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801cc02:	4465      	add	r5, ip
 801cc04:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801cc08:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801cc0c:	fb09 fc0c 	mul.w	ip, r9, ip
 801cc10:	fb09 f904 	mul.w	r9, r9, r4
 801cc14:	f509 7480 	add.w	r4, r9, #256	; 0x100
 801cc18:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801cc1c:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 801cc20:	fb08 f404 	mul.w	r4, r8, r4
 801cc24:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801cc28:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801cc2c:	fb08 f802 	mul.w	r8, r8, r2
 801cc30:	fb0a fa01 	mul.w	sl, sl, r1
 801cc34:	0a22      	lsrs	r2, r4, #8
 801cc36:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 801cc3a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801cc3e:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 801cc42:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801cc46:	4414      	add	r4, r2
 801cc48:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801cc4c:	f508 7280 	add.w	r2, r8, #256	; 0x100
 801cc50:	0a2d      	lsrs	r5, r5, #8
 801cc52:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801cc56:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801cc5a:	9a03      	ldr	r2, [sp, #12]
 801cc5c:	8836      	ldrh	r6, [r6, #0]
 801cc5e:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801cc62:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801cc66:	437d      	muls	r5, r7
 801cc68:	4461      	add	r1, ip
 801cc6a:	0a24      	lsrs	r4, r4, #8
 801cc6c:	fb02 5503 	mla	r5, r2, r3, r5
 801cc70:	0a09      	lsrs	r1, r1, #8
 801cc72:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801cc76:	fb04 540e 	mla	r4, r4, lr, r5
 801cc7a:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801cc7e:	fb01 4100 	mla	r1, r1, r0, r4
 801cc82:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801cc86:	0a09      	lsrs	r1, r1, #8
 801cc88:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801cc8c:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 801cc90:	fb07 f70a 	mul.w	r7, r7, sl
 801cc94:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801cc98:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 801cc9c:	fb03 7101 	mla	r1, r3, r1, r7
 801cca0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801cca4:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801cca8:	fb0e 1e08 	mla	lr, lr, r8, r1
 801ccac:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 801ccb0:	fb00 e101 	mla	r1, r0, r1, lr
 801ccb4:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 801ccb8:	9a00      	ldr	r2, [sp, #0]
 801ccba:	b287      	uxth	r7, r0
 801ccbc:	437a      	muls	r2, r7
 801ccbe:	0a09      	lsrs	r1, r1, #8
 801ccc0:	1c53      	adds	r3, r2, #1
 801ccc2:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801ccc6:	4321      	orrs	r1, r4
 801ccc8:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801cccc:	1235      	asrs	r5, r6, #8
 801ccce:	0c0a      	lsrs	r2, r1, #16
 801ccd0:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801ccd4:	b2db      	uxtb	r3, r3
 801ccd6:	fb12 f207 	smulbb	r2, r2, r7
 801ccda:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801ccde:	fb05 2503 	mla	r5, r5, r3, r2
 801cce2:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801cce6:	10f2      	asrs	r2, r6, #3
 801cce8:	b2c8      	uxtb	r0, r1
 801ccea:	00f6      	lsls	r6, r6, #3
 801ccec:	fb14 f407 	smulbb	r4, r4, r7
 801ccf0:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801ccf4:	b2f6      	uxtb	r6, r6
 801ccf6:	fb10 f007 	smulbb	r0, r0, r7
 801ccfa:	fb02 4203 	mla	r2, r2, r3, r4
 801ccfe:	b2ad      	uxth	r5, r5
 801cd00:	fb06 0303 	mla	r3, r6, r3, r0
 801cd04:	b299      	uxth	r1, r3
 801cd06:	b294      	uxth	r4, r2
 801cd08:	1c6b      	adds	r3, r5, #1
 801cd0a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801cd0e:	1c62      	adds	r2, r4, #1
 801cd10:	1c4b      	adds	r3, r1, #1
 801cd12:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801cd16:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801cd1a:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801cd1e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801cd22:	0952      	lsrs	r2, r2, #5
 801cd24:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801cd28:	432b      	orrs	r3, r5
 801cd2a:	4313      	orrs	r3, r2
 801cd2c:	9a02      	ldr	r2, [sp, #8]
 801cd2e:	8013      	strh	r3, [r2, #0]
 801cd30:	b005      	add	sp, #20
 801cd32:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cd36:	2500      	movs	r5, #0
 801cd38:	e6ef      	b.n	801cb1a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 801cd3a:	2100      	movs	r1, #0
 801cd3c:	460d      	mov	r5, r1
 801cd3e:	e6f7      	b.n	801cb30 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801cd40:	2100      	movs	r1, #0
 801cd42:	e6f5      	b.n	801cb30 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801cd44:	4631      	mov	r1, r6
 801cd46:	e6f3      	b.n	801cb30 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801cd48:	2400      	movs	r4, #0
 801cd4a:	e702      	b.n	801cb52 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 801cd4c:	2200      	movs	r2, #0
 801cd4e:	4614      	mov	r4, r2
 801cd50:	e70b      	b.n	801cb6a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801cd52:	4602      	mov	r2, r0
 801cd54:	4604      	mov	r4, r0
 801cd56:	e708      	b.n	801cb6a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801cd58:	2200      	movs	r2, #0
 801cd5a:	e706      	b.n	801cb6a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801cd5c:	4632      	mov	r2, r6
 801cd5e:	e704      	b.n	801cb6a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

0801cd60 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801cd60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cd64:	b09d      	sub	sp, #116	; 0x74
 801cd66:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 801cd6a:	9219      	str	r2, [sp, #100]	; 0x64
 801cd6c:	9307      	str	r3, [sp, #28]
 801cd6e:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801cd70:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 801cd74:	931a      	str	r3, [sp, #104]	; 0x68
 801cd76:	9117      	str	r1, [sp, #92]	; 0x5c
 801cd78:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 801cd7c:	901b      	str	r0, [sp, #108]	; 0x6c
 801cd7e:	6850      	ldr	r0, [r2, #4]
 801cd80:	6812      	ldr	r2, [r2, #0]
 801cd82:	fb00 1303 	mla	r3, r0, r3, r1
 801cd86:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801cd8a:	930a      	str	r3, [sp, #40]	; 0x28
 801cd8c:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801cd8e:	681b      	ldr	r3, [r3, #0]
 801cd90:	9310      	str	r3, [sp, #64]	; 0x40
 801cd92:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801cd96:	930b      	str	r3, [sp, #44]	; 0x2c
 801cd98:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801cd9a:	2b00      	cmp	r3, #0
 801cd9c:	dc03      	bgt.n	801cda6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801cd9e:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801cda0:	2b00      	cmp	r3, #0
 801cda2:	f340 8375 	ble.w	801d490 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801cda6:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801cda8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801cdac:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801cdb0:	1e48      	subs	r0, r1, #1
 801cdb2:	1e57      	subs	r7, r2, #1
 801cdb4:	9b07      	ldr	r3, [sp, #28]
 801cdb6:	2b00      	cmp	r3, #0
 801cdb8:	f340 818e 	ble.w	801d0d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801cdbc:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801cdc0:	ea4f 4326 	mov.w	r3, r6, asr #16
 801cdc4:	d406      	bmi.n	801cdd4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801cdc6:	4584      	cmp	ip, r0
 801cdc8:	da04      	bge.n	801cdd4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801cdca:	2b00      	cmp	r3, #0
 801cdcc:	db02      	blt.n	801cdd4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801cdce:	42bb      	cmp	r3, r7
 801cdd0:	f2c0 8183 	blt.w	801d0da <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 801cdd4:	f11c 0c01 	adds.w	ip, ip, #1
 801cdd8:	f100 8173 	bmi.w	801d0c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801cddc:	4561      	cmp	r1, ip
 801cdde:	f2c0 8170 	blt.w	801d0c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801cde2:	3301      	adds	r3, #1
 801cde4:	f100 816d 	bmi.w	801d0c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801cde8:	429a      	cmp	r2, r3
 801cdea:	f2c0 816a 	blt.w	801d0c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801cdee:	9b07      	ldr	r3, [sp, #28]
 801cdf0:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801cdf2:	9318      	str	r3, [sp, #96]	; 0x60
 801cdf4:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801cdf6:	2b00      	cmp	r3, #0
 801cdf8:	f340 818c 	ble.w	801d114 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 801cdfc:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 801cdfe:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801ce00:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801ce04:	689b      	ldr	r3, [r3, #8]
 801ce06:	1422      	asrs	r2, r4, #16
 801ce08:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801ce0c:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801ce10:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801ce14:	f100 81cd 	bmi.w	801d1b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801ce18:	f103 38ff 	add.w	r8, r3, #4294967295
 801ce1c:	4542      	cmp	r2, r8
 801ce1e:	f280 81c8 	bge.w	801d1b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801ce22:	f1bc 0f00 	cmp.w	ip, #0
 801ce26:	f2c0 81c4 	blt.w	801d1b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801ce2a:	f10e 38ff 	add.w	r8, lr, #4294967295
 801ce2e:	45c4      	cmp	ip, r8
 801ce30:	f280 81bf 	bge.w	801d1b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801ce34:	b21b      	sxth	r3, r3
 801ce36:	fb0c 2203 	mla	r2, ip, r3, r2
 801ce3a:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801ce3c:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801ce40:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801ce44:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801ce48:	2800      	cmp	r0, #0
 801ce4a:	f000 81a9 	beq.w	801d1a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 801ce4e:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801ce52:	950c      	str	r5, [sp, #48]	; 0x30
 801ce54:	0e2d      	lsrs	r5, r5, #24
 801ce56:	9513      	str	r5, [sp, #76]	; 0x4c
 801ce58:	b181      	cbz	r1, 801ce7c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801ce5a:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 801ce5e:	3b01      	subs	r3, #1
 801ce60:	009b      	lsls	r3, r3, #2
 801ce62:	3304      	adds	r3, #4
 801ce64:	eb08 0c03 	add.w	ip, r8, r3
 801ce68:	f858 3003 	ldr.w	r3, [r8, r3]
 801ce6c:	9308      	str	r3, [sp, #32]
 801ce6e:	0e1b      	lsrs	r3, r3, #24
 801ce70:	9311      	str	r3, [sp, #68]	; 0x44
 801ce72:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801ce76:	930d      	str	r3, [sp, #52]	; 0x34
 801ce78:	0e1b      	lsrs	r3, r3, #24
 801ce7a:	9314      	str	r3, [sp, #80]	; 0x50
 801ce7c:	b280      	uxth	r0, r0
 801ce7e:	b289      	uxth	r1, r1
 801ce80:	fb00 f901 	mul.w	r9, r0, r1
 801ce84:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801ce88:	0100      	lsls	r0, r0, #4
 801ce8a:	eba0 0809 	sub.w	r8, r0, r9
 801ce8e:	b289      	uxth	r1, r1
 801ce90:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801ce94:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801ce96:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801ce98:	fa1f f888 	uxth.w	r8, r8
 801ce9c:	1a5b      	subs	r3, r3, r1
 801ce9e:	b29b      	uxth	r3, r3
 801cea0:	fb08 f000 	mul.w	r0, r8, r0
 801cea4:	fb03 000e 	mla	r0, r3, lr, r0
 801cea8:	fb01 0005 	mla	r0, r1, r5, r0
 801ceac:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801ceae:	fb09 0005 	mla	r0, r9, r5, r0
 801ceb2:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801ceb6:	2800      	cmp	r0, #0
 801ceb8:	f000 80fa 	beq.w	801d0b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801cebc:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801cec0:	d01b      	beq.n	801cefa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801cec2:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 801cec6:	fb0e fa0a 	mul.w	sl, lr, sl
 801ceca:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801cece:	fb0e fe02 	mul.w	lr, lr, r2
 801ced2:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801ced6:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801ceda:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801cede:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801cee2:	4452      	add	r2, sl
 801cee4:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801cee8:	0a12      	lsrs	r2, r2, #8
 801ceea:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ceee:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801cef2:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801cef6:	ea42 020c 	orr.w	r2, r2, ip
 801cefa:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801cefc:	2dff      	cmp	r5, #255	; 0xff
 801cefe:	d021      	beq.n	801cf44 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801cf00:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801cf02:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801cf06:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801cf08:	fb05 fb0b 	mul.w	fp, r5, fp
 801cf0c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801cf0e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801cf12:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801cf14:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801cf18:	fb05 fa0a 	mul.w	sl, r5, sl
 801cf1c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801cf20:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801cf24:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801cf28:	44de      	add	lr, fp
 801cf2a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801cf2e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801cf32:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801cf36:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801cf3a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801cf3e:	ea4e 050a 	orr.w	r5, lr, sl
 801cf42:	950c      	str	r5, [sp, #48]	; 0x30
 801cf44:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801cf46:	2dff      	cmp	r5, #255	; 0xff
 801cf48:	d021      	beq.n	801cf8e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 801cf4a:	9d08      	ldr	r5, [sp, #32]
 801cf4c:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801cf50:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801cf52:	fb05 fb0b 	mul.w	fp, r5, fp
 801cf56:	9d08      	ldr	r5, [sp, #32]
 801cf58:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801cf5c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801cf5e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801cf62:	fb05 fa0a 	mul.w	sl, r5, sl
 801cf66:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801cf6a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801cf6e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801cf72:	44de      	add	lr, fp
 801cf74:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801cf78:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801cf7c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801cf80:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801cf84:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801cf88:	ea4e 050a 	orr.w	r5, lr, sl
 801cf8c:	9508      	str	r5, [sp, #32]
 801cf8e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801cf90:	2dff      	cmp	r5, #255	; 0xff
 801cf92:	d021      	beq.n	801cfd8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 801cf94:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801cf96:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801cf9a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801cf9c:	fb05 fb0b 	mul.w	fp, r5, fp
 801cfa0:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801cfa2:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801cfa6:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801cfa8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801cfac:	fb05 fa0a 	mul.w	sl, r5, sl
 801cfb0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801cfb4:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801cfb8:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801cfbc:	44de      	add	lr, fp
 801cfbe:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801cfc2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801cfc6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801cfca:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801cfce:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801cfd2:	ea4e 050a 	orr.w	r5, lr, sl
 801cfd6:	950d      	str	r5, [sp, #52]	; 0x34
 801cfd8:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801cfda:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801cfde:	9d08      	ldr	r5, [sp, #32]
 801cfe0:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 801cfe4:	fb08 fc0c 	mul.w	ip, r8, ip
 801cfe8:	fb03 cc0e 	mla	ip, r3, lr, ip
 801cfec:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801cff0:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801cff2:	fb01 cc0e 	mla	ip, r1, lr, ip
 801cff6:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801cffa:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801cffc:	fb09 cc0e 	mla	ip, r9, lr, ip
 801d000:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801d004:	fb08 f80e 	mul.w	r8, r8, lr
 801d008:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801d00c:	fb03 8202 	mla	r2, r3, r2, r8
 801d010:	9b08      	ldr	r3, [sp, #32]
 801d012:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801d014:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 801d018:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d01a:	fb01 220a 	mla	r2, r1, sl, r2
 801d01e:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 801d022:	fb09 2901 	mla	r9, r9, r1, r2
 801d026:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801d028:	883b      	ldrh	r3, [r7, #0]
 801d02a:	4342      	muls	r2, r0
 801d02c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d030:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801d034:	1c50      	adds	r0, r2, #1
 801d036:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801d03a:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801d03e:	ea4c 0c09 	orr.w	ip, ip, r9
 801d042:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801d046:	1219      	asrs	r1, r3, #8
 801d048:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801d04c:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801d050:	b2c0      	uxtb	r0, r0
 801d052:	fb12 f205 	smulbb	r2, r2, r5
 801d056:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801d05a:	fb01 2100 	mla	r1, r1, r0, r2
 801d05e:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801d062:	10da      	asrs	r2, r3, #3
 801d064:	fa5f fc8c 	uxtb.w	ip, ip
 801d068:	00db      	lsls	r3, r3, #3
 801d06a:	fb1c fc05 	smulbb	ip, ip, r5
 801d06e:	b2db      	uxtb	r3, r3
 801d070:	b289      	uxth	r1, r1
 801d072:	fb03 c300 	mla	r3, r3, r0, ip
 801d076:	fa1f fc83 	uxth.w	ip, r3
 801d07a:	1c4b      	adds	r3, r1, #1
 801d07c:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801d080:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801d084:	fb1e fe05 	smulbb	lr, lr, r5
 801d088:	f10c 0301 	add.w	r3, ip, #1
 801d08c:	fb02 e200 	mla	r2, r2, r0, lr
 801d090:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801d094:	b292      	uxth	r2, r2
 801d096:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801d09a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801d09e:	430b      	orrs	r3, r1
 801d0a0:	1c51      	adds	r1, r2, #1
 801d0a2:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801d0a6:	0952      	lsrs	r2, r2, #5
 801d0a8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d0ac:	4313      	orrs	r3, r2
 801d0ae:	803b      	strh	r3, [r7, #0]
 801d0b0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801d0b2:	441c      	add	r4, r3
 801d0b4:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801d0b6:	441e      	add	r6, r3
 801d0b8:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801d0ba:	3b01      	subs	r3, #1
 801d0bc:	3702      	adds	r7, #2
 801d0be:	9318      	str	r3, [sp, #96]	; 0x60
 801d0c0:	e698      	b.n	801cdf4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801d0c2:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801d0c4:	441c      	add	r4, r3
 801d0c6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801d0c8:	441e      	add	r6, r3
 801d0ca:	9b07      	ldr	r3, [sp, #28]
 801d0cc:	3b01      	subs	r3, #1
 801d0ce:	9307      	str	r3, [sp, #28]
 801d0d0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d0d2:	3302      	adds	r3, #2
 801d0d4:	930a      	str	r3, [sp, #40]	; 0x28
 801d0d6:	e66d      	b.n	801cdb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801d0d8:	d023      	beq.n	801d122 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 801d0da:	9b07      	ldr	r3, [sp, #28]
 801d0dc:	9829      	ldr	r0, [sp, #164]	; 0xa4
 801d0de:	3b01      	subs	r3, #1
 801d0e0:	fb00 4003 	mla	r0, r0, r3, r4
 801d0e4:	1400      	asrs	r0, r0, #16
 801d0e6:	f53f ae82 	bmi.w	801cdee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801d0ea:	3901      	subs	r1, #1
 801d0ec:	4288      	cmp	r0, r1
 801d0ee:	f6bf ae7e 	bge.w	801cdee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801d0f2:	992a      	ldr	r1, [sp, #168]	; 0xa8
 801d0f4:	fb01 6303 	mla	r3, r1, r3, r6
 801d0f8:	141b      	asrs	r3, r3, #16
 801d0fa:	f53f ae78 	bmi.w	801cdee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801d0fe:	3a01      	subs	r2, #1
 801d100:	4293      	cmp	r3, r2
 801d102:	f6bf ae74 	bge.w	801cdee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801d106:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801d10a:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 801d10e:	f1bb 0f00 	cmp.w	fp, #0
 801d112:	dc6c      	bgt.n	801d1ee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801d114:	9b07      	ldr	r3, [sp, #28]
 801d116:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801d11a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d11c:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801d120:	930a      	str	r3, [sp, #40]	; 0x28
 801d122:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801d124:	2b00      	cmp	r3, #0
 801d126:	f340 81b3 	ble.w	801d490 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801d12a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d12e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801d132:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801d136:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801d138:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d13c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d140:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d144:	eef0 6a62 	vmov.f32	s13, s5
 801d148:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d14c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d150:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d154:	ee16 4a90 	vmov	r4, s13
 801d158:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d15c:	eef0 6a43 	vmov.f32	s13, s6
 801d160:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d164:	ee12 2a90 	vmov	r2, s5
 801d168:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d16c:	fb92 f3f3 	sdiv	r3, r2, r3
 801d170:	ee13 2a10 	vmov	r2, s6
 801d174:	9329      	str	r3, [sp, #164]	; 0xa4
 801d176:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801d178:	fb92 f3f3 	sdiv	r3, r2, r3
 801d17c:	932a      	str	r3, [sp, #168]	; 0xa8
 801d17e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801d180:	9a19      	ldr	r2, [sp, #100]	; 0x64
 801d182:	3b01      	subs	r3, #1
 801d184:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d188:	9317      	str	r3, [sp, #92]	; 0x5c
 801d18a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801d18c:	bf08      	it	eq
 801d18e:	4613      	moveq	r3, r2
 801d190:	ee16 6a90 	vmov	r6, s13
 801d194:	9307      	str	r3, [sp, #28]
 801d196:	eeb0 3a67 	vmov.f32	s6, s15
 801d19a:	eef0 2a47 	vmov.f32	s5, s14
 801d19e:	e5fb      	b.n	801cd98 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801d1a0:	2900      	cmp	r1, #0
 801d1a2:	f43f ae6b 	beq.w	801ce7c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801d1a6:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801d1aa:	9308      	str	r3, [sp, #32]
 801d1ac:	0e1b      	lsrs	r3, r3, #24
 801d1ae:	9311      	str	r3, [sp, #68]	; 0x44
 801d1b0:	e664      	b.n	801ce7c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801d1b2:	f112 0801 	adds.w	r8, r2, #1
 801d1b6:	f53f af7b 	bmi.w	801d0b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801d1ba:	4543      	cmp	r3, r8
 801d1bc:	f6ff af78 	blt.w	801d0b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801d1c0:	f11c 0801 	adds.w	r8, ip, #1
 801d1c4:	f53f af74 	bmi.w	801d0b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801d1c8:	45c6      	cmp	lr, r8
 801d1ca:	f6ff af71 	blt.w	801d0b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801d1ce:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 801d1d0:	9201      	str	r2, [sp, #4]
 801d1d2:	fa0f f28e 	sxth.w	r2, lr
 801d1d6:	e9cd 1504 	strd	r1, r5, [sp, #16]
 801d1da:	e9cd c002 	strd	ip, r0, [sp, #8]
 801d1de:	9200      	str	r2, [sp, #0]
 801d1e0:	b21b      	sxth	r3, r3
 801d1e2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801d1e4:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801d1e6:	4639      	mov	r1, r7
 801d1e8:	f7ff fc79 	bl	801cade <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 801d1ec:	e760      	b.n	801d0b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801d1ee:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801d1f0:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801d1f2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d1f6:	1427      	asrs	r7, r4, #16
 801d1f8:	1433      	asrs	r3, r6, #16
 801d1fa:	fb01 7303 	mla	r3, r1, r3, r7
 801d1fe:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 801d202:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801d206:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801d20a:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801d20e:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801d212:	2a00      	cmp	r2, #0
 801d214:	f000 8133 	beq.w	801d47e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 801d218:	687d      	ldr	r5, [r7, #4]
 801d21a:	950e      	str	r5, [sp, #56]	; 0x38
 801d21c:	0e2d      	lsrs	r5, r5, #24
 801d21e:	9515      	str	r5, [sp, #84]	; 0x54
 801d220:	b178      	cbz	r0, 801d242 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801d222:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 801d226:	3901      	subs	r1, #1
 801d228:	0089      	lsls	r1, r1, #2
 801d22a:	3104      	adds	r1, #4
 801d22c:	eb07 0e01 	add.w	lr, r7, r1
 801d230:	5879      	ldr	r1, [r7, r1]
 801d232:	9109      	str	r1, [sp, #36]	; 0x24
 801d234:	0e09      	lsrs	r1, r1, #24
 801d236:	9112      	str	r1, [sp, #72]	; 0x48
 801d238:	f8de 1004 	ldr.w	r1, [lr, #4]
 801d23c:	910f      	str	r1, [sp, #60]	; 0x3c
 801d23e:	0e09      	lsrs	r1, r1, #24
 801d240:	9116      	str	r1, [sp, #88]	; 0x58
 801d242:	b292      	uxth	r2, r2
 801d244:	b280      	uxth	r0, r0
 801d246:	fb02 f800 	mul.w	r8, r2, r0
 801d24a:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801d24e:	0112      	lsls	r2, r2, #4
 801d250:	eba2 0e08 	sub.w	lr, r2, r8
 801d254:	b280      	uxth	r0, r0
 801d256:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801d25a:	9915      	ldr	r1, [sp, #84]	; 0x54
 801d25c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801d25e:	fa1f fe8e 	uxth.w	lr, lr
 801d262:	1a12      	subs	r2, r2, r0
 801d264:	b292      	uxth	r2, r2
 801d266:	fb0e f101 	mul.w	r1, lr, r1
 801d26a:	fb02 110c 	mla	r1, r2, ip, r1
 801d26e:	fb00 1105 	mla	r1, r0, r5, r1
 801d272:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801d274:	fb08 1105 	mla	r1, r8, r5, r1
 801d278:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801d27c:	2900      	cmp	r1, #0
 801d27e:	f000 80f5 	beq.w	801d46c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 801d282:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801d286:	d019      	beq.n	801d2bc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 801d288:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801d28c:	fb0c fa0a 	mul.w	sl, ip, sl
 801d290:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801d294:	fb0c fc03 	mul.w	ip, ip, r3
 801d298:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801d29c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801d2a0:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801d2a4:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801d2a8:	4453      	add	r3, sl
 801d2aa:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801d2ae:	0a1b      	lsrs	r3, r3, #8
 801d2b0:	0a3f      	lsrs	r7, r7, #8
 801d2b2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801d2b6:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801d2ba:	433b      	orrs	r3, r7
 801d2bc:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801d2be:	2dff      	cmp	r5, #255	; 0xff
 801d2c0:	d020      	beq.n	801d304 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 801d2c2:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801d2c4:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801d2c8:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801d2ca:	436f      	muls	r7, r5
 801d2cc:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801d2ce:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801d2d2:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801d2d4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801d2d8:	fb05 fa0a 	mul.w	sl, r5, sl
 801d2dc:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801d2e0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801d2e4:	44bc      	add	ip, r7
 801d2e6:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801d2ea:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801d2ee:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d2f2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801d2f6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801d2fa:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801d2fe:	ea4c 050a 	orr.w	r5, ip, sl
 801d302:	950e      	str	r5, [sp, #56]	; 0x38
 801d304:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801d306:	2dff      	cmp	r5, #255	; 0xff
 801d308:	d020      	beq.n	801d34c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 801d30a:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801d30c:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801d310:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801d312:	436f      	muls	r7, r5
 801d314:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801d316:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801d31a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801d31c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801d320:	fb05 fa0a 	mul.w	sl, r5, sl
 801d324:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801d328:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801d32c:	44bc      	add	ip, r7
 801d32e:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801d332:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801d336:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d33a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801d33e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801d342:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801d346:	ea4c 050a 	orr.w	r5, ip, sl
 801d34a:	9509      	str	r5, [sp, #36]	; 0x24
 801d34c:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801d34e:	2dff      	cmp	r5, #255	; 0xff
 801d350:	d020      	beq.n	801d394 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 801d352:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801d354:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801d358:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801d35a:	436f      	muls	r7, r5
 801d35c:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801d35e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801d362:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801d364:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801d368:	fb05 fa0a 	mul.w	sl, r5, sl
 801d36c:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801d370:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801d374:	44bc      	add	ip, r7
 801d376:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801d37a:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801d37e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d382:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801d386:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801d38a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801d38e:	ea4c 050a 	orr.w	r5, ip, sl
 801d392:	950f      	str	r5, [sp, #60]	; 0x3c
 801d394:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801d396:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801d39a:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801d39c:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801d3a0:	fb0e f707 	mul.w	r7, lr, r7
 801d3a4:	fb02 770c 	mla	r7, r2, ip, r7
 801d3a8:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801d3ac:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801d3ae:	fb00 770c 	mla	r7, r0, ip, r7
 801d3b2:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801d3b6:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801d3b8:	fb08 770c 	mla	r7, r8, ip, r7
 801d3bc:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801d3c0:	fb0e fe0c 	mul.w	lr, lr, ip
 801d3c4:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801d3c8:	fb02 e303 	mla	r3, r2, r3, lr
 801d3cc:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801d3ce:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801d3d0:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801d3d4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801d3d6:	fb00 330a 	mla	r3, r0, sl, r3
 801d3da:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 801d3de:	fb08 3c0c 	mla	ip, r8, ip, r3
 801d3e2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801d3e4:	f8b9 0000 	ldrh.w	r0, [r9]
 801d3e8:	4359      	muls	r1, r3
 801d3ea:	0a3f      	lsrs	r7, r7, #8
 801d3ec:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d3f0:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801d3f4:	1c4b      	adds	r3, r1, #1
 801d3f6:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801d3fa:	ea47 070c 	orr.w	r7, r7, ip
 801d3fe:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801d402:	1202      	asrs	r2, r0, #8
 801d404:	0c3b      	lsrs	r3, r7, #16
 801d406:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801d40a:	b2c9      	uxtb	r1, r1
 801d40c:	fb13 f305 	smulbb	r3, r3, r5
 801d410:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801d414:	fb02 3201 	mla	r2, r2, r1, r3
 801d418:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801d41c:	10c3      	asrs	r3, r0, #3
 801d41e:	b2ff      	uxtb	r7, r7
 801d420:	00c0      	lsls	r0, r0, #3
 801d422:	b2c0      	uxtb	r0, r0
 801d424:	fb17 f705 	smulbb	r7, r7, r5
 801d428:	fb00 7001 	mla	r0, r0, r1, r7
 801d42c:	b292      	uxth	r2, r2
 801d42e:	fb1c fc05 	smulbb	ip, ip, r5
 801d432:	b280      	uxth	r0, r0
 801d434:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801d438:	fb03 c301 	mla	r3, r3, r1, ip
 801d43c:	1c51      	adds	r1, r2, #1
 801d43e:	f100 0c01 	add.w	ip, r0, #1
 801d442:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801d446:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 801d44a:	b29b      	uxth	r3, r3
 801d44c:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801d450:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 801d454:	ea4c 0202 	orr.w	r2, ip, r2
 801d458:	f103 0c01 	add.w	ip, r3, #1
 801d45c:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801d460:	095b      	lsrs	r3, r3, #5
 801d462:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801d466:	431a      	orrs	r2, r3
 801d468:	f8a9 2000 	strh.w	r2, [r9]
 801d46c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801d46e:	441c      	add	r4, r3
 801d470:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801d472:	f109 0902 	add.w	r9, r9, #2
 801d476:	441e      	add	r6, r3
 801d478:	f10b 3bff 	add.w	fp, fp, #4294967295
 801d47c:	e647      	b.n	801d10e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 801d47e:	2800      	cmp	r0, #0
 801d480:	f43f aedf 	beq.w	801d242 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801d484:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 801d488:	9109      	str	r1, [sp, #36]	; 0x24
 801d48a:	0e09      	lsrs	r1, r1, #24
 801d48c:	9112      	str	r1, [sp, #72]	; 0x48
 801d48e:	e6d8      	b.n	801d242 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801d490:	b01d      	add	sp, #116	; 0x74
 801d492:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801d496 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 801d496:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d49a:	b085      	sub	sp, #20
 801d49c:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 801d4a0:	9102      	str	r1, [sp, #8]
 801d4a2:	2c00      	cmp	r4, #0
 801d4a4:	fb04 7103 	mla	r1, r4, r3, r7
 801d4a8:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 801d4ac:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 801d4b0:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 801d4b4:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 801d4b8:	f2c0 810c 	blt.w	801d6d4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 801d4bc:	45a6      	cmp	lr, r4
 801d4be:	f340 8109 	ble.w	801d6d4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 801d4c2:	2f00      	cmp	r7, #0
 801d4c4:	f2c0 8104 	blt.w	801d6d0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 801d4c8:	42bb      	cmp	r3, r7
 801d4ca:	f340 8101 	ble.w	801d6d0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 801d4ce:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 801d4d2:	1c7a      	adds	r2, r7, #1
 801d4d4:	f100 8101 	bmi.w	801d6da <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 801d4d8:	4293      	cmp	r3, r2
 801d4da:	f340 80fe 	ble.w	801d6da <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 801d4de:	2e00      	cmp	r6, #0
 801d4e0:	f000 80fd 	beq.w	801d6de <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 801d4e4:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801d4e8:	3401      	adds	r4, #1
 801d4ea:	f100 80fc 	bmi.w	801d6e6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 801d4ee:	45a6      	cmp	lr, r4
 801d4f0:	f340 80f9 	ble.w	801d6e6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 801d4f4:	2800      	cmp	r0, #0
 801d4f6:	f000 80f9 	beq.w	801d6ec <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 801d4fa:	2f00      	cmp	r7, #0
 801d4fc:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 801d500:	f2c0 80ef 	blt.w	801d6e2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 801d504:	42bb      	cmp	r3, r7
 801d506:	f340 80ec 	ble.w	801d6e2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 801d50a:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801d50e:	3701      	adds	r7, #1
 801d510:	f100 80ef 	bmi.w	801d6f2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 801d514:	42bb      	cmp	r3, r7
 801d516:	f340 80ec 	ble.w	801d6f2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 801d51a:	2e00      	cmp	r6, #0
 801d51c:	f000 80eb 	beq.w	801d6f6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 801d520:	6852      	ldr	r2, [r2, #4]
 801d522:	b2b6      	uxth	r6, r6
 801d524:	b280      	uxth	r0, r0
 801d526:	fb00 fe06 	mul.w	lr, r0, r6
 801d52a:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801d52e:	0136      	lsls	r6, r6, #4
 801d530:	eba6 070e 	sub.w	r7, r6, lr
 801d534:	b280      	uxth	r0, r0
 801d536:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 801d53a:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801d53e:	b2bf      	uxth	r7, r7
 801d540:	1a1b      	subs	r3, r3, r0
 801d542:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801d546:	b29b      	uxth	r3, r3
 801d548:	fb07 f60a 	mul.w	r6, r7, sl
 801d54c:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801d550:	fb0b 6603 	mla	r6, fp, r3, r6
 801d554:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801d558:	fb00 6609 	mla	r6, r0, r9, r6
 801d55c:	fb0e 6608 	mla	r6, lr, r8, r6
 801d560:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801d564:	9600      	str	r6, [sp, #0]
 801d566:	2e00      	cmp	r6, #0
 801d568:	f000 80af 	beq.w	801d6ca <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 801d56c:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801d570:	fb0b fc0c 	mul.w	ip, fp, ip
 801d574:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801d578:	fb0b f505 	mul.w	r5, fp, r5
 801d57c:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801d580:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 801d584:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801d588:	44dc      	add	ip, fp
 801d58a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d58e:	9501      	str	r5, [sp, #4]
 801d590:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 801d594:	9503      	str	r5, [sp, #12]
 801d596:	9d01      	ldr	r5, [sp, #4]
 801d598:	9e02      	ldr	r6, [sp, #8]
 801d59a:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 801d59e:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801d5a2:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 801d5a6:	fb0a fc0c 	mul.w	ip, sl, ip
 801d5aa:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801d5ae:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801d5b2:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801d5b6:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801d5ba:	4465      	add	r5, ip
 801d5bc:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801d5c0:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801d5c4:	fb09 fc0c 	mul.w	ip, r9, ip
 801d5c8:	fb09 f904 	mul.w	r9, r9, r4
 801d5cc:	f509 7480 	add.w	r4, r9, #256	; 0x100
 801d5d0:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801d5d4:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 801d5d8:	fb08 f404 	mul.w	r4, r8, r4
 801d5dc:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801d5e0:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801d5e4:	fb08 f802 	mul.w	r8, r8, r2
 801d5e8:	fb0a fa01 	mul.w	sl, sl, r1
 801d5ec:	0a22      	lsrs	r2, r4, #8
 801d5ee:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 801d5f2:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801d5f6:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 801d5fa:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801d5fe:	4414      	add	r4, r2
 801d600:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801d604:	f508 7280 	add.w	r2, r8, #256	; 0x100
 801d608:	0a2d      	lsrs	r5, r5, #8
 801d60a:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801d60e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801d612:	9a03      	ldr	r2, [sp, #12]
 801d614:	8836      	ldrh	r6, [r6, #0]
 801d616:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801d61a:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801d61e:	437d      	muls	r5, r7
 801d620:	4461      	add	r1, ip
 801d622:	0a24      	lsrs	r4, r4, #8
 801d624:	fb02 5503 	mla	r5, r2, r3, r5
 801d628:	0a09      	lsrs	r1, r1, #8
 801d62a:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801d62e:	fb04 540e 	mla	r4, r4, lr, r5
 801d632:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801d636:	fb01 4100 	mla	r1, r1, r0, r4
 801d63a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801d63e:	0a09      	lsrs	r1, r1, #8
 801d640:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801d644:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 801d648:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801d64c:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 801d650:	fb07 f70a 	mul.w	r7, r7, sl
 801d654:	fb03 7101 	mla	r1, r3, r1, r7
 801d658:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801d65c:	9b00      	ldr	r3, [sp, #0]
 801d65e:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801d662:	fb0e 1e08 	mla	lr, lr, r8, r1
 801d666:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 801d66a:	fb00 e101 	mla	r1, r0, r1, lr
 801d66e:	43da      	mvns	r2, r3
 801d670:	1233      	asrs	r3, r6, #8
 801d672:	b2d2      	uxtb	r2, r2
 801d674:	10f0      	asrs	r0, r6, #3
 801d676:	0a09      	lsrs	r1, r1, #8
 801d678:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801d67c:	00f6      	lsls	r6, r6, #3
 801d67e:	4353      	muls	r3, r2
 801d680:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801d684:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801d688:	b2f6      	uxtb	r6, r6
 801d68a:	4321      	orrs	r1, r4
 801d68c:	4350      	muls	r0, r2
 801d68e:	4356      	muls	r6, r2
 801d690:	1c5a      	adds	r2, r3, #1
 801d692:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801d696:	0c0b      	lsrs	r3, r1, #16
 801d698:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801d69c:	1c42      	adds	r2, r0, #1
 801d69e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801d6a2:	0a0a      	lsrs	r2, r1, #8
 801d6a4:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801d6a8:	021b      	lsls	r3, r3, #8
 801d6aa:	00d2      	lsls	r2, r2, #3
 801d6ac:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d6b0:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801d6b4:	4313      	orrs	r3, r2
 801d6b6:	1c72      	adds	r2, r6, #1
 801d6b8:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801d6bc:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 801d6c0:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801d6c4:	4319      	orrs	r1, r3
 801d6c6:	9b02      	ldr	r3, [sp, #8]
 801d6c8:	8019      	strh	r1, [r3, #0]
 801d6ca:	b005      	add	sp, #20
 801d6cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d6d0:	2500      	movs	r5, #0
 801d6d2:	e6fe      	b.n	801d4d2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 801d6d4:	2100      	movs	r1, #0
 801d6d6:	460d      	mov	r5, r1
 801d6d8:	e706      	b.n	801d4e8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801d6da:	2100      	movs	r1, #0
 801d6dc:	e704      	b.n	801d4e8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801d6de:	4631      	mov	r1, r6
 801d6e0:	e702      	b.n	801d4e8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801d6e2:	2400      	movs	r4, #0
 801d6e4:	e713      	b.n	801d50e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 801d6e6:	2200      	movs	r2, #0
 801d6e8:	4614      	mov	r4, r2
 801d6ea:	e71a      	b.n	801d522 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801d6ec:	4602      	mov	r2, r0
 801d6ee:	4604      	mov	r4, r0
 801d6f0:	e717      	b.n	801d522 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801d6f2:	2200      	movs	r2, #0
 801d6f4:	e715      	b.n	801d522 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801d6f6:	4632      	mov	r2, r6
 801d6f8:	e713      	b.n	801d522 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

0801d6fc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d6fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d700:	b09b      	sub	sp, #108	; 0x6c
 801d702:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 801d706:	9218      	str	r2, [sp, #96]	; 0x60
 801d708:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801d70a:	9116      	str	r1, [sp, #88]	; 0x58
 801d70c:	9307      	str	r3, [sp, #28]
 801d70e:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 801d712:	9019      	str	r0, [sp, #100]	; 0x64
 801d714:	6850      	ldr	r0, [r2, #4]
 801d716:	6812      	ldr	r2, [r2, #0]
 801d718:	fb00 1303 	mla	r3, r0, r3, r1
 801d71c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801d720:	930a      	str	r3, [sp, #40]	; 0x28
 801d722:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801d724:	681b      	ldr	r3, [r3, #0]
 801d726:	930f      	str	r3, [sp, #60]	; 0x3c
 801d728:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801d72a:	2b00      	cmp	r3, #0
 801d72c:	dc03      	bgt.n	801d736 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801d72e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801d730:	2b00      	cmp	r3, #0
 801d732:	f340 8386 	ble.w	801de42 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801d736:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801d738:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d73c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801d740:	1e48      	subs	r0, r1, #1
 801d742:	1e57      	subs	r7, r2, #1
 801d744:	9b07      	ldr	r3, [sp, #28]
 801d746:	2b00      	cmp	r3, #0
 801d748:	f340 8166 	ble.w	801da18 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801d74c:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801d750:	ea4f 4326 	mov.w	r3, r6, asr #16
 801d754:	d406      	bmi.n	801d764 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801d756:	4584      	cmp	ip, r0
 801d758:	da04      	bge.n	801d764 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801d75a:	2b00      	cmp	r3, #0
 801d75c:	db02      	blt.n	801d764 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801d75e:	42bb      	cmp	r3, r7
 801d760:	f2c0 815b 	blt.w	801da1a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 801d764:	f11c 0c01 	adds.w	ip, ip, #1
 801d768:	f100 814b 	bmi.w	801da02 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801d76c:	4561      	cmp	r1, ip
 801d76e:	f2c0 8148 	blt.w	801da02 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801d772:	3301      	adds	r3, #1
 801d774:	f100 8145 	bmi.w	801da02 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801d778:	429a      	cmp	r2, r3
 801d77a:	f2c0 8142 	blt.w	801da02 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801d77e:	9b07      	ldr	r3, [sp, #28]
 801d780:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801d782:	9317      	str	r3, [sp, #92]	; 0x5c
 801d784:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801d786:	2b00      	cmp	r3, #0
 801d788:	f340 8165 	ble.w	801da56 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801d78c:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 801d78e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801d790:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801d794:	689b      	ldr	r3, [r3, #8]
 801d796:	1422      	asrs	r2, r4, #16
 801d798:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801d79c:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801d7a0:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801d7a4:	f100 81d5 	bmi.w	801db52 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801d7a8:	f103 38ff 	add.w	r8, r3, #4294967295
 801d7ac:	4542      	cmp	r2, r8
 801d7ae:	f280 81d0 	bge.w	801db52 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801d7b2:	f1bc 0f00 	cmp.w	ip, #0
 801d7b6:	f2c0 81cc 	blt.w	801db52 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801d7ba:	f10e 38ff 	add.w	r8, lr, #4294967295
 801d7be:	45c4      	cmp	ip, r8
 801d7c0:	f280 81c7 	bge.w	801db52 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801d7c4:	b21b      	sxth	r3, r3
 801d7c6:	fb0c 2203 	mla	r2, ip, r3, r2
 801d7ca:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801d7cc:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801d7d0:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801d7d4:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801d7d8:	2900      	cmp	r1, #0
 801d7da:	f000 8182 	beq.w	801dae2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801d7de:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801d7e2:	950b      	str	r5, [sp, #44]	; 0x2c
 801d7e4:	0e2d      	lsrs	r5, r5, #24
 801d7e6:	9512      	str	r5, [sp, #72]	; 0x48
 801d7e8:	b180      	cbz	r0, 801d80c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801d7ea:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 801d7ee:	3b01      	subs	r3, #1
 801d7f0:	009b      	lsls	r3, r3, #2
 801d7f2:	3304      	adds	r3, #4
 801d7f4:	eb08 0c03 	add.w	ip, r8, r3
 801d7f8:	f858 3003 	ldr.w	r3, [r8, r3]
 801d7fc:	9308      	str	r3, [sp, #32]
 801d7fe:	0e1b      	lsrs	r3, r3, #24
 801d800:	9310      	str	r3, [sp, #64]	; 0x40
 801d802:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801d806:	930c      	str	r3, [sp, #48]	; 0x30
 801d808:	0e1b      	lsrs	r3, r3, #24
 801d80a:	9313      	str	r3, [sp, #76]	; 0x4c
 801d80c:	b289      	uxth	r1, r1
 801d80e:	b280      	uxth	r0, r0
 801d810:	fb01 f900 	mul.w	r9, r1, r0
 801d814:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801d818:	0109      	lsls	r1, r1, #4
 801d81a:	eba1 0809 	sub.w	r8, r1, r9
 801d81e:	b280      	uxth	r0, r0
 801d820:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 801d824:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801d826:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801d828:	fa1f f888 	uxth.w	r8, r8
 801d82c:	1a09      	subs	r1, r1, r0
 801d82e:	b289      	uxth	r1, r1
 801d830:	fb08 f303 	mul.w	r3, r8, r3
 801d834:	fb01 330e 	mla	r3, r1, lr, r3
 801d838:	fb00 3305 	mla	r3, r0, r5, r3
 801d83c:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801d83e:	fb09 3305 	mla	r3, r9, r5, r3
 801d842:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801d846:	2b00      	cmp	r3, #0
 801d848:	f000 80d2 	beq.w	801d9f0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801d84c:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801d850:	d01b      	beq.n	801d88a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 801d852:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 801d856:	fb0e fa0a 	mul.w	sl, lr, sl
 801d85a:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801d85e:	fb0e fe02 	mul.w	lr, lr, r2
 801d862:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801d866:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801d86a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801d86e:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801d872:	4452      	add	r2, sl
 801d874:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801d878:	0a12      	lsrs	r2, r2, #8
 801d87a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d87e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801d882:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801d886:	ea42 020c 	orr.w	r2, r2, ip
 801d88a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801d88c:	2dff      	cmp	r5, #255	; 0xff
 801d88e:	d021      	beq.n	801d8d4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 801d890:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801d892:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801d896:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801d898:	fb05 fb0b 	mul.w	fp, r5, fp
 801d89c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801d89e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801d8a2:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801d8a4:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801d8a8:	fb05 fa0a 	mul.w	sl, r5, sl
 801d8ac:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801d8b0:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801d8b4:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801d8b8:	44de      	add	lr, fp
 801d8ba:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801d8be:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801d8c2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801d8c6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801d8ca:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801d8ce:	ea4e 050a 	orr.w	r5, lr, sl
 801d8d2:	950b      	str	r5, [sp, #44]	; 0x2c
 801d8d4:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801d8d6:	2dff      	cmp	r5, #255	; 0xff
 801d8d8:	d021      	beq.n	801d91e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 801d8da:	9d08      	ldr	r5, [sp, #32]
 801d8dc:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801d8e0:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801d8e2:	fb05 fb0b 	mul.w	fp, r5, fp
 801d8e6:	9d08      	ldr	r5, [sp, #32]
 801d8e8:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801d8ec:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801d8ee:	fb05 fa0e 	mul.w	sl, r5, lr
 801d8f2:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801d8f6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801d8fa:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801d8fe:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801d902:	44de      	add	lr, fp
 801d904:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801d908:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801d90c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801d910:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801d914:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801d918:	ea4e 050a 	orr.w	r5, lr, sl
 801d91c:	9508      	str	r5, [sp, #32]
 801d91e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801d920:	2dff      	cmp	r5, #255	; 0xff
 801d922:	d021      	beq.n	801d968 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 801d924:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801d926:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801d92a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801d92c:	fb05 fb0b 	mul.w	fp, r5, fp
 801d930:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801d932:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801d936:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801d938:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801d93c:	fb05 fa0a 	mul.w	sl, r5, sl
 801d940:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801d944:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801d948:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801d94c:	44de      	add	lr, fp
 801d94e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801d952:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801d956:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801d95a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801d95e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801d962:	ea4e 050a 	orr.w	r5, lr, sl
 801d966:	950c      	str	r5, [sp, #48]	; 0x30
 801d968:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801d96a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801d96e:	9d08      	ldr	r5, [sp, #32]
 801d970:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 801d974:	fb08 fc0c 	mul.w	ip, r8, ip
 801d978:	fb01 cc0e 	mla	ip, r1, lr, ip
 801d97c:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801d980:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801d982:	fb00 cc0e 	mla	ip, r0, lr, ip
 801d986:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801d98a:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801d98c:	fb09 cc0e 	mla	ip, r9, lr, ip
 801d990:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801d994:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801d998:	fb08 f80e 	mul.w	r8, r8, lr
 801d99c:	fb01 8202 	mla	r2, r1, r2, r8
 801d9a0:	9908      	ldr	r1, [sp, #32]
 801d9a2:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801d9a6:	990c      	ldr	r1, [sp, #48]	; 0x30
 801d9a8:	fb00 220a 	mla	r2, r0, sl, r2
 801d9ac:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 801d9b0:	fb09 2900 	mla	r9, r9, r0, r2
 801d9b4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d9b8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801d9bc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801d9c0:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801d9c4:	ea4c 0c09 	orr.w	ip, ip, r9
 801d9c8:	2bff      	cmp	r3, #255	; 0xff
 801d9ca:	ea4f 221c 	mov.w	r2, ip, lsr #8
 801d9ce:	f040 8091 	bne.w	801daf4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801d9d2:	ea4f 135c 	mov.w	r3, ip, lsr #5
 801d9d6:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 801d9da:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801d9de:	f022 0207 	bic.w	r2, r2, #7
 801d9e2:	431a      	orrs	r2, r3
 801d9e4:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801d9e8:	ea4c 0c02 	orr.w	ip, ip, r2
 801d9ec:	f8a7 c000 	strh.w	ip, [r7]
 801d9f0:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801d9f2:	441c      	add	r4, r3
 801d9f4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801d9f6:	441e      	add	r6, r3
 801d9f8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801d9fa:	3b01      	subs	r3, #1
 801d9fc:	3702      	adds	r7, #2
 801d9fe:	9317      	str	r3, [sp, #92]	; 0x5c
 801da00:	e6c0      	b.n	801d784 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801da02:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801da04:	441c      	add	r4, r3
 801da06:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801da08:	441e      	add	r6, r3
 801da0a:	9b07      	ldr	r3, [sp, #28]
 801da0c:	3b01      	subs	r3, #1
 801da0e:	9307      	str	r3, [sp, #28]
 801da10:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801da12:	3302      	adds	r3, #2
 801da14:	930a      	str	r3, [sp, #40]	; 0x28
 801da16:	e695      	b.n	801d744 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801da18:	d024      	beq.n	801da64 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 801da1a:	9b07      	ldr	r3, [sp, #28]
 801da1c:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801da1e:	3b01      	subs	r3, #1
 801da20:	fb00 4003 	mla	r0, r0, r3, r4
 801da24:	1400      	asrs	r0, r0, #16
 801da26:	f53f aeaa 	bmi.w	801d77e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801da2a:	3901      	subs	r1, #1
 801da2c:	4288      	cmp	r0, r1
 801da2e:	f6bf aea6 	bge.w	801d77e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801da32:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801da34:	fb01 6303 	mla	r3, r1, r3, r6
 801da38:	141b      	asrs	r3, r3, #16
 801da3a:	f53f aea0 	bmi.w	801d77e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801da3e:	3a01      	subs	r2, #1
 801da40:	4293      	cmp	r3, r2
 801da42:	f6bf ae9c 	bge.w	801d77e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801da46:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801da4a:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 801da4e:	f1bb 0f00 	cmp.w	fp, #0
 801da52:	f300 809a 	bgt.w	801db8a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801da56:	9b07      	ldr	r3, [sp, #28]
 801da58:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801da5c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801da5e:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801da62:	930a      	str	r3, [sp, #40]	; 0x28
 801da64:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801da66:	2b00      	cmp	r3, #0
 801da68:	f340 81eb 	ble.w	801de42 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801da6c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801da70:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801da74:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801da78:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801da7a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801da7e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801da82:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801da86:	eef0 6a62 	vmov.f32	s13, s5
 801da8a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801da8e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801da92:	ee77 2a62 	vsub.f32	s5, s14, s5
 801da96:	ee16 4a90 	vmov	r4, s13
 801da9a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801da9e:	eef0 6a43 	vmov.f32	s13, s6
 801daa2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801daa6:	ee12 2a90 	vmov	r2, s5
 801daaa:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801daae:	fb92 f3f3 	sdiv	r3, r2, r3
 801dab2:	ee13 2a10 	vmov	r2, s6
 801dab6:	9327      	str	r3, [sp, #156]	; 0x9c
 801dab8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801daba:	fb92 f3f3 	sdiv	r3, r2, r3
 801dabe:	9328      	str	r3, [sp, #160]	; 0xa0
 801dac0:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801dac2:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801dac4:	3b01      	subs	r3, #1
 801dac6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801daca:	9316      	str	r3, [sp, #88]	; 0x58
 801dacc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801dace:	bf08      	it	eq
 801dad0:	4613      	moveq	r3, r2
 801dad2:	ee16 6a90 	vmov	r6, s13
 801dad6:	9307      	str	r3, [sp, #28]
 801dad8:	eeb0 3a67 	vmov.f32	s6, s15
 801dadc:	eef0 2a47 	vmov.f32	s5, s14
 801dae0:	e622      	b.n	801d728 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 801dae2:	2800      	cmp	r0, #0
 801dae4:	f43f ae92 	beq.w	801d80c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801dae8:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801daec:	9308      	str	r3, [sp, #32]
 801daee:	0e1b      	lsrs	r3, r3, #24
 801daf0:	9310      	str	r3, [sp, #64]	; 0x40
 801daf2:	e68b      	b.n	801d80c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801daf4:	8839      	ldrh	r1, [r7, #0]
 801daf6:	4dd4      	ldr	r5, [pc, #848]	; (801de48 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 801daf8:	43db      	mvns	r3, r3
 801dafa:	ea4f 2e21 	mov.w	lr, r1, asr #8
 801dafe:	fa5f f883 	uxtb.w	r8, r3
 801db02:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801db06:	fb0e fe08 	mul.w	lr, lr, r8
 801db0a:	10c8      	asrs	r0, r1, #3
 801db0c:	00cb      	lsls	r3, r1, #3
 801db0e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801db12:	f10e 0101 	add.w	r1, lr, #1
 801db16:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 801db1a:	fb00 f008 	mul.w	r0, r0, r8
 801db1e:	ea4f 411c 	mov.w	r1, ip, lsr #16
 801db22:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 801db26:	f100 0e01 	add.w	lr, r0, #1
 801db2a:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 801db2e:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801db32:	b2db      	uxtb	r3, r3
 801db34:	b2c9      	uxtb	r1, r1
 801db36:	00d2      	lsls	r2, r2, #3
 801db38:	fb03 f308 	mul.w	r3, r3, r8
 801db3c:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 801db40:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801db44:	430a      	orrs	r2, r1
 801db46:	1c59      	adds	r1, r3, #1
 801db48:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801db4c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801db50:	e748      	b.n	801d9e4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 801db52:	f112 0801 	adds.w	r8, r2, #1
 801db56:	f53f af4b 	bmi.w	801d9f0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801db5a:	4543      	cmp	r3, r8
 801db5c:	f6ff af48 	blt.w	801d9f0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801db60:	f11c 0801 	adds.w	r8, ip, #1
 801db64:	f53f af44 	bmi.w	801d9f0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801db68:	45c6      	cmp	lr, r8
 801db6a:	f6ff af41 	blt.w	801d9f0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801db6e:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 801db72:	fa0f f28e 	sxth.w	r2, lr
 801db76:	e9cd 1003 	strd	r1, r0, [sp, #12]
 801db7a:	9200      	str	r2, [sp, #0]
 801db7c:	b21b      	sxth	r3, r3
 801db7e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801db80:	9819      	ldr	r0, [sp, #100]	; 0x64
 801db82:	4639      	mov	r1, r7
 801db84:	f7ff fc87 	bl	801d496 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 801db88:	e732      	b.n	801d9f0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801db8a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801db8c:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801db8e:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 801db92:	1421      	asrs	r1, r4, #16
 801db94:	1433      	asrs	r3, r6, #16
 801db96:	fb07 1303 	mla	r3, r7, r3, r1
 801db9a:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801db9c:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 801dba0:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801dba4:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801dba8:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801dbac:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801dbb0:	2a00      	cmp	r2, #0
 801dbb2:	f000 8107 	beq.w	801ddc4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 801dbb6:	684d      	ldr	r5, [r1, #4]
 801dbb8:	950d      	str	r5, [sp, #52]	; 0x34
 801dbba:	0e2d      	lsrs	r5, r5, #24
 801dbbc:	9514      	str	r5, [sp, #80]	; 0x50
 801dbbe:	b178      	cbz	r0, 801dbe0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801dbc0:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 801dbc4:	3f01      	subs	r7, #1
 801dbc6:	00bf      	lsls	r7, r7, #2
 801dbc8:	3704      	adds	r7, #4
 801dbca:	eb01 0e07 	add.w	lr, r1, r7
 801dbce:	59c9      	ldr	r1, [r1, r7]
 801dbd0:	9109      	str	r1, [sp, #36]	; 0x24
 801dbd2:	0e09      	lsrs	r1, r1, #24
 801dbd4:	9111      	str	r1, [sp, #68]	; 0x44
 801dbd6:	f8de 1004 	ldr.w	r1, [lr, #4]
 801dbda:	910e      	str	r1, [sp, #56]	; 0x38
 801dbdc:	0e09      	lsrs	r1, r1, #24
 801dbde:	9115      	str	r1, [sp, #84]	; 0x54
 801dbe0:	b292      	uxth	r2, r2
 801dbe2:	b280      	uxth	r0, r0
 801dbe4:	fb02 f900 	mul.w	r9, r2, r0
 801dbe8:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801dbec:	0112      	lsls	r2, r2, #4
 801dbee:	eba2 0e09 	sub.w	lr, r2, r9
 801dbf2:	b280      	uxth	r0, r0
 801dbf4:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 801dbf8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801dbfa:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801dbfc:	fa1f fe8e 	uxth.w	lr, lr
 801dc00:	1a09      	subs	r1, r1, r0
 801dc02:	b289      	uxth	r1, r1
 801dc04:	fb0e f202 	mul.w	r2, lr, r2
 801dc08:	fb01 220c 	mla	r2, r1, ip, r2
 801dc0c:	fb00 2205 	mla	r2, r0, r5, r2
 801dc10:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801dc12:	fb09 2205 	mla	r2, r9, r5, r2
 801dc16:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801dc1a:	2a00      	cmp	r2, #0
 801dc1c:	f000 80c9 	beq.w	801ddb2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 801dc20:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801dc24:	d019      	beq.n	801dc5a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 801dc26:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801dc2a:	fb0c fa0a 	mul.w	sl, ip, sl
 801dc2e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801dc32:	fb0c fc03 	mul.w	ip, ip, r3
 801dc36:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801dc3a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801dc3e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801dc42:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801dc46:	4453      	add	r3, sl
 801dc48:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801dc4c:	0a1b      	lsrs	r3, r3, #8
 801dc4e:	0a3f      	lsrs	r7, r7, #8
 801dc50:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801dc54:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801dc58:	433b      	orrs	r3, r7
 801dc5a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801dc5c:	2dff      	cmp	r5, #255	; 0xff
 801dc5e:	d020      	beq.n	801dca2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 801dc60:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801dc62:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801dc66:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801dc68:	436f      	muls	r7, r5
 801dc6a:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801dc6c:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801dc70:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801dc72:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801dc76:	fb05 fa0a 	mul.w	sl, r5, sl
 801dc7a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801dc7e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801dc82:	44bc      	add	ip, r7
 801dc84:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801dc88:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801dc8c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801dc90:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801dc94:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801dc98:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801dc9c:	ea4c 050a 	orr.w	r5, ip, sl
 801dca0:	950d      	str	r5, [sp, #52]	; 0x34
 801dca2:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801dca4:	2dff      	cmp	r5, #255	; 0xff
 801dca6:	d020      	beq.n	801dcea <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 801dca8:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801dcaa:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801dcae:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801dcb0:	436f      	muls	r7, r5
 801dcb2:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801dcb4:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801dcb8:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801dcba:	fb05 fa0c 	mul.w	sl, r5, ip
 801dcbe:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801dcc2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801dcc6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801dcca:	44bc      	add	ip, r7
 801dccc:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801dcd0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801dcd4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801dcd8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801dcdc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801dce0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801dce4:	ea4c 050a 	orr.w	r5, ip, sl
 801dce8:	9509      	str	r5, [sp, #36]	; 0x24
 801dcea:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801dcec:	2dff      	cmp	r5, #255	; 0xff
 801dcee:	d020      	beq.n	801dd32 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 801dcf0:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801dcf2:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801dcf6:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801dcf8:	436f      	muls	r7, r5
 801dcfa:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801dcfc:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801dd00:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801dd02:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801dd06:	fb05 fa0a 	mul.w	sl, r5, sl
 801dd0a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801dd0e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801dd12:	44bc      	add	ip, r7
 801dd14:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801dd18:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801dd1c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801dd20:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801dd24:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801dd28:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801dd2c:	ea4c 050a 	orr.w	r5, ip, sl
 801dd30:	950e      	str	r5, [sp, #56]	; 0x38
 801dd32:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801dd34:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801dd38:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801dd3a:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801dd3e:	fb0e f707 	mul.w	r7, lr, r7
 801dd42:	fb01 770c 	mla	r7, r1, ip, r7
 801dd46:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801dd4a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801dd4c:	fb00 770c 	mla	r7, r0, ip, r7
 801dd50:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801dd54:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801dd56:	fb09 770c 	mla	r7, r9, ip, r7
 801dd5a:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801dd5e:	fb0e fe0c 	mul.w	lr, lr, ip
 801dd62:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801dd66:	fb01 e303 	mla	r3, r1, r3, lr
 801dd6a:	9909      	ldr	r1, [sp, #36]	; 0x24
 801dd6c:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801dd70:	990e      	ldr	r1, [sp, #56]	; 0x38
 801dd72:	fb00 330a 	mla	r3, r0, sl, r3
 801dd76:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 801dd7a:	fb09 3c0c 	mla	ip, r9, ip, r3
 801dd7e:	0a3f      	lsrs	r7, r7, #8
 801dd80:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801dd84:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801dd88:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801dd8c:	ea47 070c 	orr.w	r7, r7, ip
 801dd90:	2aff      	cmp	r2, #255	; 0xff
 801dd92:	ea4f 2317 	mov.w	r3, r7, lsr #8
 801dd96:	d11e      	bne.n	801ddd6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 801dd98:	097a      	lsrs	r2, r7, #5
 801dd9a:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 801dd9e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801dda2:	f023 0307 	bic.w	r3, r3, #7
 801dda6:	4313      	orrs	r3, r2
 801dda8:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801ddac:	431f      	orrs	r7, r3
 801ddae:	f8a8 7000 	strh.w	r7, [r8]
 801ddb2:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801ddb4:	441c      	add	r4, r3
 801ddb6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ddb8:	f108 0802 	add.w	r8, r8, #2
 801ddbc:	441e      	add	r6, r3
 801ddbe:	f10b 3bff 	add.w	fp, fp, #4294967295
 801ddc2:	e644      	b.n	801da4e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 801ddc4:	2800      	cmp	r0, #0
 801ddc6:	f43f af0b 	beq.w	801dbe0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801ddca:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 801ddce:	9109      	str	r1, [sp, #36]	; 0x24
 801ddd0:	0e09      	lsrs	r1, r1, #24
 801ddd2:	9111      	str	r1, [sp, #68]	; 0x44
 801ddd4:	e704      	b.n	801dbe0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801ddd6:	f8b8 1000 	ldrh.w	r1, [r8]
 801ddda:	43d2      	mvns	r2, r2
 801dddc:	ea4f 2c21 	mov.w	ip, r1, asr #8
 801dde0:	fa5f fe82 	uxtb.w	lr, r2
 801dde4:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801dde8:	fb0c fc0e 	mul.w	ip, ip, lr
 801ddec:	10c8      	asrs	r0, r1, #3
 801ddee:	00ca      	lsls	r2, r1, #3
 801ddf0:	f10c 0101 	add.w	r1, ip, #1
 801ddf4:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801ddf8:	0c39      	lsrs	r1, r7, #16
 801ddfa:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801ddfe:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801de02:	4911      	ldr	r1, [pc, #68]	; (801de48 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 801de04:	fb00 f00e 	mul.w	r0, r0, lr
 801de08:	fa5f fc8c 	uxtb.w	ip, ip
 801de0c:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 801de10:	b2d2      	uxtb	r2, r2
 801de12:	1c41      	adds	r1, r0, #1
 801de14:	fb02 f20e 	mul.w	r2, r2, lr
 801de18:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801de1c:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801de20:	1c51      	adds	r1, r2, #1
 801de22:	00c0      	lsls	r0, r0, #3
 801de24:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801de28:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801de2c:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801de30:	ea4c 0c00 	orr.w	ip, ip, r0
 801de34:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801de38:	ea47 0c0c 	orr.w	ip, r7, ip
 801de3c:	f8a8 c000 	strh.w	ip, [r8]
 801de40:	e7b7      	b.n	801ddb2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 801de42:	b01b      	add	sp, #108	; 0x6c
 801de44:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801de48:	fffff800 	.word	0xfffff800

0801de4c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 801de4c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801de50:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 801de54:	2d00      	cmp	r5, #0
 801de56:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801de5a:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801de5e:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 801de62:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 801de66:	fb05 0e03 	mla	lr, r5, r3, r0
 801de6a:	f2c0 808c 	blt.w	801df86 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 801de6e:	45a9      	cmp	r9, r5
 801de70:	f340 8089 	ble.w	801df86 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 801de74:	2800      	cmp	r0, #0
 801de76:	f2c0 8084 	blt.w	801df82 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 801de7a:	4580      	cmp	r8, r0
 801de7c:	f340 8081 	ble.w	801df82 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 801de80:	ea4f 045e 	mov.w	r4, lr, lsr #1
 801de84:	f01e 0f01 	tst.w	lr, #1
 801de88:	5d16      	ldrb	r6, [r2, r4]
 801de8a:	bf0c      	ite	eq
 801de8c:	f006 060f 	andeq.w	r6, r6, #15
 801de90:	1136      	asrne	r6, r6, #4
 801de92:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801de96:	b2f6      	uxtb	r6, r6
 801de98:	1c44      	adds	r4, r0, #1
 801de9a:	d477      	bmi.n	801df8c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 801de9c:	45a0      	cmp	r8, r4
 801de9e:	dd75      	ble.n	801df8c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 801dea0:	2f00      	cmp	r7, #0
 801dea2:	d075      	beq.n	801df90 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 801dea4:	f10e 0a01 	add.w	sl, lr, #1
 801dea8:	ea4f 045a 	mov.w	r4, sl, lsr #1
 801deac:	f01a 0f01 	tst.w	sl, #1
 801deb0:	5d14      	ldrb	r4, [r2, r4]
 801deb2:	bf0c      	ite	eq
 801deb4:	f004 040f 	andeq.w	r4, r4, #15
 801deb8:	1124      	asrne	r4, r4, #4
 801deba:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801debe:	b2e4      	uxtb	r4, r4
 801dec0:	3501      	adds	r5, #1
 801dec2:	d469      	bmi.n	801df98 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 801dec4:	45a9      	cmp	r9, r5
 801dec6:	dd67      	ble.n	801df98 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 801dec8:	f1bc 0f00 	cmp.w	ip, #0
 801decc:	d067      	beq.n	801df9e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 801dece:	2800      	cmp	r0, #0
 801ded0:	db60      	blt.n	801df94 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 801ded2:	4580      	cmp	r8, r0
 801ded4:	dd5e      	ble.n	801df94 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 801ded6:	eb03 090e 	add.w	r9, r3, lr
 801deda:	ea4f 0559 	mov.w	r5, r9, lsr #1
 801dede:	f019 0f01 	tst.w	r9, #1
 801dee2:	5d55      	ldrb	r5, [r2, r5]
 801dee4:	bf0c      	ite	eq
 801dee6:	f005 050f 	andeq.w	r5, r5, #15
 801deea:	112d      	asrne	r5, r5, #4
 801deec:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 801def0:	b2ed      	uxtb	r5, r5
 801def2:	3001      	adds	r0, #1
 801def4:	d456      	bmi.n	801dfa4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 801def6:	4580      	cmp	r8, r0
 801def8:	dd54      	ble.n	801dfa4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 801defa:	2f00      	cmp	r7, #0
 801defc:	d054      	beq.n	801dfa8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 801defe:	3301      	adds	r3, #1
 801df00:	449e      	add	lr, r3
 801df02:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801df06:	f01e 0f01 	tst.w	lr, #1
 801df0a:	5cd0      	ldrb	r0, [r2, r3]
 801df0c:	bf0c      	ite	eq
 801df0e:	f000 000f 	andeq.w	r0, r0, #15
 801df12:	1100      	asrne	r0, r0, #4
 801df14:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801df18:	b2c3      	uxtb	r3, r0
 801df1a:	b2ba      	uxth	r2, r7
 801df1c:	fa1f fc8c 	uxth.w	ip, ip
 801df20:	fb02 f00c 	mul.w	r0, r2, ip
 801df24:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 801df28:	0112      	lsls	r2, r2, #4
 801df2a:	fa1f fc8c 	uxth.w	ip, ip
 801df2e:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 801df32:	1a12      	subs	r2, r2, r0
 801df34:	eba7 070c 	sub.w	r7, r7, ip
 801df38:	b292      	uxth	r2, r2
 801df3a:	b2bf      	uxth	r7, r7
 801df3c:	4362      	muls	r2, r4
 801df3e:	fb06 2207 	mla	r2, r6, r7, r2
 801df42:	fb0c 2505 	mla	r5, ip, r5, r2
 801df46:	fb00 5303 	mla	r3, r0, r3, r5
 801df4a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801df4e:	b1b3      	cbz	r3, 801df7e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 801df50:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 801df54:	435a      	muls	r2, r3
 801df56:	1c53      	adds	r3, r2, #1
 801df58:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801df5c:	4a2d      	ldr	r2, [pc, #180]	; (801e014 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 801df5e:	121b      	asrs	r3, r3, #8
 801df60:	6812      	ldr	r2, [r2, #0]
 801df62:	2bff      	cmp	r3, #255	; 0xff
 801df64:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801df68:	d120      	bne.n	801dfac <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 801df6a:	4b2b      	ldr	r3, [pc, #172]	; (801e018 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 801df6c:	0950      	lsrs	r0, r2, #5
 801df6e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801df72:	4033      	ands	r3, r6
 801df74:	4318      	orrs	r0, r3
 801df76:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801df7a:	4302      	orrs	r2, r0
 801df7c:	800a      	strh	r2, [r1, #0]
 801df7e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801df82:	2600      	movs	r6, #0
 801df84:	e788      	b.n	801de98 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 801df86:	2400      	movs	r4, #0
 801df88:	4626      	mov	r6, r4
 801df8a:	e799      	b.n	801dec0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801df8c:	2400      	movs	r4, #0
 801df8e:	e797      	b.n	801dec0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801df90:	463c      	mov	r4, r7
 801df92:	e795      	b.n	801dec0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801df94:	2500      	movs	r5, #0
 801df96:	e7ac      	b.n	801def2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 801df98:	2300      	movs	r3, #0
 801df9a:	461d      	mov	r5, r3
 801df9c:	e7bd      	b.n	801df1a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801df9e:	4663      	mov	r3, ip
 801dfa0:	4665      	mov	r5, ip
 801dfa2:	e7ba      	b.n	801df1a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801dfa4:	2300      	movs	r3, #0
 801dfa6:	e7b8      	b.n	801df1a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801dfa8:	463b      	mov	r3, r7
 801dfaa:	e7b6      	b.n	801df1a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801dfac:	880d      	ldrh	r5, [r1, #0]
 801dfae:	b29f      	uxth	r7, r3
 801dfb0:	122c      	asrs	r4, r5, #8
 801dfb2:	f3c2 4007 	ubfx	r0, r2, #16, #8
 801dfb6:	43db      	mvns	r3, r3
 801dfb8:	b2db      	uxtb	r3, r3
 801dfba:	fb10 f007 	smulbb	r0, r0, r7
 801dfbe:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801dfc2:	fb04 0403 	mla	r4, r4, r3, r0
 801dfc6:	b2f6      	uxtb	r6, r6
 801dfc8:	10e8      	asrs	r0, r5, #3
 801dfca:	b2d2      	uxtb	r2, r2
 801dfcc:	00ed      	lsls	r5, r5, #3
 801dfce:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801dfd2:	fb12 f207 	smulbb	r2, r2, r7
 801dfd6:	fb16 f607 	smulbb	r6, r6, r7
 801dfda:	b2ed      	uxtb	r5, r5
 801dfdc:	b2a4      	uxth	r4, r4
 801dfde:	fb00 6603 	mla	r6, r0, r3, r6
 801dfe2:	fb05 2303 	mla	r3, r5, r3, r2
 801dfe6:	b29a      	uxth	r2, r3
 801dfe8:	1c63      	adds	r3, r4, #1
 801dfea:	b2b0      	uxth	r0, r6
 801dfec:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801dff0:	1c53      	adds	r3, r2, #1
 801dff2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801dff6:	1c42      	adds	r2, r0, #1
 801dff8:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801dffc:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801e000:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801e004:	0940      	lsrs	r0, r0, #5
 801e006:	4323      	orrs	r3, r4
 801e008:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801e00c:	4303      	orrs	r3, r0
 801e00e:	800b      	strh	r3, [r1, #0]
 801e010:	e7b5      	b.n	801df7e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 801e012:	bf00      	nop
 801e014:	20017468 	.word	0x20017468
 801e018:	00fff800 	.word	0x00fff800

0801e01c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e01c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e020:	b097      	sub	sp, #92	; 0x5c
 801e022:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 801e026:	9214      	str	r2, [sp, #80]	; 0x50
 801e028:	9309      	str	r3, [sp, #36]	; 0x24
 801e02a:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801e02c:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801e030:	910d      	str	r1, [sp, #52]	; 0x34
 801e032:	930f      	str	r3, [sp, #60]	; 0x3c
 801e034:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 801e038:	9015      	str	r0, [sp, #84]	; 0x54
 801e03a:	6850      	ldr	r0, [r2, #4]
 801e03c:	6812      	ldr	r2, [r2, #0]
 801e03e:	fb00 1303 	mla	r3, r0, r3, r1
 801e042:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801e046:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801e048:	689b      	ldr	r3, [r3, #8]
 801e04a:	3301      	adds	r3, #1
 801e04c:	f023 0301 	bic.w	r3, r3, #1
 801e050:	930a      	str	r3, [sp, #40]	; 0x28
 801e052:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801e054:	681f      	ldr	r7, [r3, #0]
 801e056:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801e058:	2b00      	cmp	r3, #0
 801e05a:	dc03      	bgt.n	801e064 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801e05c:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801e05e:	2b00      	cmp	r3, #0
 801e060:	f340 8287 	ble.w	801e572 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 801e064:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801e066:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e06a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801e06e:	1e48      	subs	r0, r1, #1
 801e070:	f102 3cff 	add.w	ip, r2, #4294967295
 801e074:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e076:	2b00      	cmp	r3, #0
 801e078:	f340 80c4 	ble.w	801e204 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801e07c:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801e080:	ea4f 4326 	mov.w	r3, r6, asr #16
 801e084:	d406      	bmi.n	801e094 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801e086:	4586      	cmp	lr, r0
 801e088:	da04      	bge.n	801e094 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801e08a:	2b00      	cmp	r3, #0
 801e08c:	db02      	blt.n	801e094 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801e08e:	4563      	cmp	r3, ip
 801e090:	f2c0 80b9 	blt.w	801e206 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 801e094:	f11e 0e01 	adds.w	lr, lr, #1
 801e098:	f100 80aa 	bmi.w	801e1f0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801e09c:	4571      	cmp	r1, lr
 801e09e:	f2c0 80a7 	blt.w	801e1f0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801e0a2:	3301      	adds	r3, #1
 801e0a4:	f100 80a4 	bmi.w	801e1f0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801e0a8:	429a      	cmp	r2, r3
 801e0aa:	f2c0 80a1 	blt.w	801e1f0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801e0ae:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e0b0:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
 801e0b4:	930e      	str	r3, [sp, #56]	; 0x38
 801e0b6:	46c8      	mov	r8, r9
 801e0b8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801e0ba:	2b00      	cmp	r3, #0
 801e0bc:	f340 80c3 	ble.w	801e246 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801e0c0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801e0c2:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801e0c6:	1423      	asrs	r3, r4, #16
 801e0c8:	ea4f 4026 	mov.w	r0, r6, asr #16
 801e0cc:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801e0d0:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801e0d4:	f100 814d 	bmi.w	801e372 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801e0d8:	f10c 3bff 	add.w	fp, ip, #4294967295
 801e0dc:	455b      	cmp	r3, fp
 801e0de:	f280 8148 	bge.w	801e372 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801e0e2:	2800      	cmp	r0, #0
 801e0e4:	f2c0 8145 	blt.w	801e372 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801e0e8:	f10e 3bff 	add.w	fp, lr, #4294967295
 801e0ec:	4558      	cmp	r0, fp
 801e0ee:	f280 8140 	bge.w	801e372 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801e0f2:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801e0f4:	fb00 3305 	mla	r3, r0, r5, r3
 801e0f8:	0858      	lsrs	r0, r3, #1
 801e0fa:	07dd      	lsls	r5, r3, #31
 801e0fc:	f817 c000 	ldrb.w	ip, [r7, r0]
 801e100:	bf54      	ite	pl
 801e102:	f00c 0c0f 	andpl.w	ip, ip, #15
 801e106:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801e10a:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801e10e:	fa5f fc8c 	uxtb.w	ip, ip
 801e112:	2a00      	cmp	r2, #0
 801e114:	f000 80db 	beq.w	801e2ce <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 801e118:	1c58      	adds	r0, r3, #1
 801e11a:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801e11e:	07c0      	lsls	r0, r0, #31
 801e120:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801e124:	bf54      	ite	pl
 801e126:	f00e 0e0f 	andpl.w	lr, lr, #15
 801e12a:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801e12e:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801e132:	fa5f f08e 	uxtb.w	r0, lr
 801e136:	9010      	str	r0, [sp, #64]	; 0x40
 801e138:	b1c9      	cbz	r1, 801e16e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801e13a:	4453      	add	r3, sl
 801e13c:	0858      	lsrs	r0, r3, #1
 801e13e:	07dd      	lsls	r5, r3, #31
 801e140:	5c38      	ldrb	r0, [r7, r0]
 801e142:	bf54      	ite	pl
 801e144:	f000 000f 	andpl.w	r0, r0, #15
 801e148:	1100      	asrmi	r0, r0, #4
 801e14a:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801e14e:	3301      	adds	r3, #1
 801e150:	b2c0      	uxtb	r0, r0
 801e152:	900b      	str	r0, [sp, #44]	; 0x2c
 801e154:	0858      	lsrs	r0, r3, #1
 801e156:	07dd      	lsls	r5, r3, #31
 801e158:	f817 e000 	ldrb.w	lr, [r7, r0]
 801e15c:	bf54      	ite	pl
 801e15e:	f00e 030f 	andpl.w	r3, lr, #15
 801e162:	ea4f 132e 	movmi.w	r3, lr, asr #4
 801e166:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801e16a:	b2db      	uxtb	r3, r3
 801e16c:	9311      	str	r3, [sp, #68]	; 0x44
 801e16e:	b292      	uxth	r2, r2
 801e170:	b289      	uxth	r1, r1
 801e172:	fb02 f301 	mul.w	r3, r2, r1
 801e176:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801e17a:	0112      	lsls	r2, r2, #4
 801e17c:	b289      	uxth	r1, r1
 801e17e:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 801e182:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801e184:	1ad2      	subs	r2, r2, r3
 801e186:	1a40      	subs	r0, r0, r1
 801e188:	b292      	uxth	r2, r2
 801e18a:	436a      	muls	r2, r5
 801e18c:	b280      	uxth	r0, r0
 801e18e:	fb0c 2c00 	mla	ip, ip, r0, r2
 801e192:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801e194:	fb01 c102 	mla	r1, r1, r2, ip
 801e198:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801e19a:	fb03 1302 	mla	r3, r3, r2, r1
 801e19e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801e1a2:	b1db      	cbz	r3, 801e1dc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801e1a4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801e1a6:	4353      	muls	r3, r2
 801e1a8:	1c5a      	adds	r2, r3, #1
 801e1aa:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801e1ae:	4ac6      	ldr	r2, [pc, #792]	; (801e4c8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 801e1b0:	121b      	asrs	r3, r3, #8
 801e1b2:	6812      	ldr	r2, [r2, #0]
 801e1b4:	2bff      	cmp	r3, #255	; 0xff
 801e1b6:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 801e1ba:	f040 8099 	bne.w	801e2f0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 801e1be:	0953      	lsrs	r3, r2, #5
 801e1c0:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801e1c4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801e1c8:	f02c 0c07 	bic.w	ip, ip, #7
 801e1cc:	ea43 0c0c 	orr.w	ip, r3, ip
 801e1d0:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801e1d4:	ea4c 0202 	orr.w	r2, ip, r2
 801e1d8:	f8a8 2000 	strh.w	r2, [r8]
 801e1dc:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801e1de:	441c      	add	r4, r3
 801e1e0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801e1e2:	441e      	add	r6, r3
 801e1e4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801e1e6:	3b01      	subs	r3, #1
 801e1e8:	f108 0802 	add.w	r8, r8, #2
 801e1ec:	930e      	str	r3, [sp, #56]	; 0x38
 801e1ee:	e763      	b.n	801e0b8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801e1f0:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801e1f2:	441c      	add	r4, r3
 801e1f4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801e1f6:	441e      	add	r6, r3
 801e1f8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e1fa:	3b01      	subs	r3, #1
 801e1fc:	9309      	str	r3, [sp, #36]	; 0x24
 801e1fe:	f109 0902 	add.w	r9, r9, #2
 801e202:	e737      	b.n	801e074 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801e204:	d024      	beq.n	801e250 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801e206:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e208:	9823      	ldr	r0, [sp, #140]	; 0x8c
 801e20a:	3b01      	subs	r3, #1
 801e20c:	fb00 4003 	mla	r0, r0, r3, r4
 801e210:	1400      	asrs	r0, r0, #16
 801e212:	f53f af4c 	bmi.w	801e0ae <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801e216:	3901      	subs	r1, #1
 801e218:	4288      	cmp	r0, r1
 801e21a:	f6bf af48 	bge.w	801e0ae <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801e21e:	9924      	ldr	r1, [sp, #144]	; 0x90
 801e220:	fb01 6303 	mla	r3, r1, r3, r6
 801e224:	141b      	asrs	r3, r3, #16
 801e226:	f53f af42 	bmi.w	801e0ae <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801e22a:	3a01      	subs	r2, #1
 801e22c:	4293      	cmp	r3, r2
 801e22e:	f6bf af3e 	bge.w	801e0ae <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801e232:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801e236:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801e23a:	930e      	str	r3, [sp, #56]	; 0x38
 801e23c:	46c8      	mov	r8, r9
 801e23e:	f1bb 0f00 	cmp.w	fp, #0
 801e242:	f300 80b7 	bgt.w	801e3b4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 801e246:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e248:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801e24c:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801e250:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801e252:	2b00      	cmp	r3, #0
 801e254:	f340 818d 	ble.w	801e572 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 801e258:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e25c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801e260:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801e264:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801e266:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e26a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e26e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e272:	eef0 6a62 	vmov.f32	s13, s5
 801e276:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e27a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e27e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e282:	ee16 4a90 	vmov	r4, s13
 801e286:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e28a:	eef0 6a43 	vmov.f32	s13, s6
 801e28e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e292:	ee12 2a90 	vmov	r2, s5
 801e296:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e29a:	fb92 f3f3 	sdiv	r3, r2, r3
 801e29e:	ee13 2a10 	vmov	r2, s6
 801e2a2:	9323      	str	r3, [sp, #140]	; 0x8c
 801e2a4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801e2a6:	fb92 f3f3 	sdiv	r3, r2, r3
 801e2aa:	9324      	str	r3, [sp, #144]	; 0x90
 801e2ac:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801e2ae:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801e2b0:	3b01      	subs	r3, #1
 801e2b2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e2b6:	930d      	str	r3, [sp, #52]	; 0x34
 801e2b8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801e2ba:	bf08      	it	eq
 801e2bc:	4613      	moveq	r3, r2
 801e2be:	ee16 6a90 	vmov	r6, s13
 801e2c2:	9309      	str	r3, [sp, #36]	; 0x24
 801e2c4:	eeb0 3a67 	vmov.f32	s6, s15
 801e2c8:	eef0 2a47 	vmov.f32	s5, s14
 801e2cc:	e6c3      	b.n	801e056 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801e2ce:	2900      	cmp	r1, #0
 801e2d0:	f43f af4d 	beq.w	801e16e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801e2d4:	eb0a 0003 	add.w	r0, sl, r3
 801e2d8:	0843      	lsrs	r3, r0, #1
 801e2da:	07c0      	lsls	r0, r0, #31
 801e2dc:	5cfb      	ldrb	r3, [r7, r3]
 801e2de:	bf54      	ite	pl
 801e2e0:	f003 030f 	andpl.w	r3, r3, #15
 801e2e4:	111b      	asrmi	r3, r3, #4
 801e2e6:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801e2ea:	b2db      	uxtb	r3, r3
 801e2ec:	930b      	str	r3, [sp, #44]	; 0x2c
 801e2ee:	e73e      	b.n	801e16e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801e2f0:	f8b8 e000 	ldrh.w	lr, [r8]
 801e2f4:	fa1f fb83 	uxth.w	fp, r3
 801e2f8:	ea4f 202e 	mov.w	r0, lr, asr #8
 801e2fc:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801e300:	43db      	mvns	r3, r3
 801e302:	b2db      	uxtb	r3, r3
 801e304:	fb11 f10b 	smulbb	r1, r1, fp
 801e308:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801e30c:	fb00 1003 	mla	r0, r0, r3, r1
 801e310:	fa5f fc8c 	uxtb.w	ip, ip
 801e314:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801e318:	b2d2      	uxtb	r2, r2
 801e31a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801e31e:	b280      	uxth	r0, r0
 801e320:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801e324:	fb1c fc0b 	smulbb	ip, ip, fp
 801e328:	fa5f fe8e 	uxtb.w	lr, lr
 801e32c:	fb12 fb0b 	smulbb	fp, r2, fp
 801e330:	fb01 cc03 	mla	ip, r1, r3, ip
 801e334:	fb0e bb03 	mla	fp, lr, r3, fp
 801e338:	1c43      	adds	r3, r0, #1
 801e33a:	fa1f fc8c 	uxth.w	ip, ip
 801e33e:	fa1f fb8b 	uxth.w	fp, fp
 801e342:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801e346:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
 801e34a:	f10c 0101 	add.w	r1, ip, #1
 801e34e:	f10b 0001 	add.w	r0, fp, #1
 801e352:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 801e356:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801e35a:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801e35e:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801e362:	4318      	orrs	r0, r3
 801e364:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801e368:	ea40 000c 	orr.w	r0, r0, ip
 801e36c:	f8a8 0000 	strh.w	r0, [r8]
 801e370:	e734      	b.n	801e1dc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801e372:	f113 0b01 	adds.w	fp, r3, #1
 801e376:	f53f af31 	bmi.w	801e1dc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801e37a:	45dc      	cmp	ip, fp
 801e37c:	f6ff af2e 	blt.w	801e1dc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801e380:	f110 0b01 	adds.w	fp, r0, #1
 801e384:	f53f af2a 	bmi.w	801e1dc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801e388:	45de      	cmp	lr, fp
 801e38a:	f6ff af27 	blt.w	801e1dc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801e38e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801e390:	9302      	str	r3, [sp, #8]
 801e392:	fa0f f38e 	sxth.w	r3, lr
 801e396:	9301      	str	r3, [sp, #4]
 801e398:	fa0f f38c 	sxth.w	r3, ip
 801e39c:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801e3a0:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801e3a4:	9300      	str	r3, [sp, #0]
 801e3a6:	463a      	mov	r2, r7
 801e3a8:	4653      	mov	r3, sl
 801e3aa:	4641      	mov	r1, r8
 801e3ac:	9815      	ldr	r0, [sp, #84]	; 0x54
 801e3ae:	f7ff fd4d 	bl	801de4c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 801e3b2:	e713      	b.n	801e1dc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801e3b4:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801e3b6:	1422      	asrs	r2, r4, #16
 801e3b8:	1433      	asrs	r3, r6, #16
 801e3ba:	fb05 2303 	mla	r3, r5, r3, r2
 801e3be:	085a      	lsrs	r2, r3, #1
 801e3c0:	07dd      	lsls	r5, r3, #31
 801e3c2:	5cba      	ldrb	r2, [r7, r2]
 801e3c4:	bf54      	ite	pl
 801e3c6:	f002 020f 	andpl.w	r2, r2, #15
 801e3ca:	1112      	asrmi	r2, r2, #4
 801e3cc:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801e3d0:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801e3d4:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801e3d8:	b2d2      	uxtb	r2, r2
 801e3da:	2900      	cmp	r1, #0
 801e3dc:	d076      	beq.n	801e4cc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801e3de:	f103 0e01 	add.w	lr, r3, #1
 801e3e2:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 801e3e6:	f01e 0f01 	tst.w	lr, #1
 801e3ea:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801e3ee:	bf0c      	ite	eq
 801e3f0:	f00c 0c0f 	andeq.w	ip, ip, #15
 801e3f4:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 801e3f8:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801e3fc:	fa5f f58c 	uxtb.w	r5, ip
 801e400:	9512      	str	r5, [sp, #72]	; 0x48
 801e402:	b300      	cbz	r0, 801e446 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 801e404:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801e406:	442b      	add	r3, r5
 801e408:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801e40c:	07dd      	lsls	r5, r3, #31
 801e40e:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801e412:	bf54      	ite	pl
 801e414:	f00c 0c0f 	andpl.w	ip, ip, #15
 801e418:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801e41c:	3301      	adds	r3, #1
 801e41e:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801e422:	fa5f f58c 	uxtb.w	r5, ip
 801e426:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801e42a:	950c      	str	r5, [sp, #48]	; 0x30
 801e42c:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801e430:	07dd      	lsls	r5, r3, #31
 801e432:	bf54      	ite	pl
 801e434:	f00c 0c0f 	andpl.w	ip, ip, #15
 801e438:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801e43c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801e440:	fa5f f38c 	uxtb.w	r3, ip
 801e444:	9313      	str	r3, [sp, #76]	; 0x4c
 801e446:	b289      	uxth	r1, r1
 801e448:	b280      	uxth	r0, r0
 801e44a:	fb01 f300 	mul.w	r3, r1, r0
 801e44e:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 801e452:	0109      	lsls	r1, r1, #4
 801e454:	b280      	uxth	r0, r0
 801e456:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 801e45a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801e45c:	1ac9      	subs	r1, r1, r3
 801e45e:	ebac 0c00 	sub.w	ip, ip, r0
 801e462:	b289      	uxth	r1, r1
 801e464:	4369      	muls	r1, r5
 801e466:	fa1f fc8c 	uxth.w	ip, ip
 801e46a:	fb02 120c 	mla	r2, r2, ip, r1
 801e46e:	990c      	ldr	r1, [sp, #48]	; 0x30
 801e470:	fb00 2001 	mla	r0, r0, r1, r2
 801e474:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801e476:	fb03 0302 	mla	r3, r3, r2, r0
 801e47a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801e47e:	b1d3      	cbz	r3, 801e4b6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 801e480:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801e482:	4353      	muls	r3, r2
 801e484:	1c5a      	adds	r2, r3, #1
 801e486:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801e48a:	4a0f      	ldr	r2, [pc, #60]	; (801e4c8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 801e48c:	121b      	asrs	r3, r3, #8
 801e48e:	6812      	ldr	r2, [r2, #0]
 801e490:	2bff      	cmp	r3, #255	; 0xff
 801e492:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 801e496:	d12d      	bne.n	801e4f4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801e498:	0953      	lsrs	r3, r2, #5
 801e49a:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801e49e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801e4a2:	f02c 0c07 	bic.w	ip, ip, #7
 801e4a6:	ea43 0c0c 	orr.w	ip, r3, ip
 801e4aa:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801e4ae:	ea4c 0202 	orr.w	r2, ip, r2
 801e4b2:	f8a8 2000 	strh.w	r2, [r8]
 801e4b6:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801e4b8:	441c      	add	r4, r3
 801e4ba:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801e4bc:	f108 0802 	add.w	r8, r8, #2
 801e4c0:	441e      	add	r6, r3
 801e4c2:	f10b 3bff 	add.w	fp, fp, #4294967295
 801e4c6:	e6ba      	b.n	801e23e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 801e4c8:	20017468 	.word	0x20017468
 801e4cc:	2800      	cmp	r0, #0
 801e4ce:	d0ba      	beq.n	801e446 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 801e4d0:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801e4d2:	442b      	add	r3, r5
 801e4d4:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801e4d8:	07db      	lsls	r3, r3, #31
 801e4da:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801e4de:	bf54      	ite	pl
 801e4e0:	f00c 0c0f 	andpl.w	ip, ip, #15
 801e4e4:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801e4e8:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801e4ec:	fa5f f38c 	uxtb.w	r3, ip
 801e4f0:	930c      	str	r3, [sp, #48]	; 0x30
 801e4f2:	e7a8      	b.n	801e446 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 801e4f4:	f8b8 e000 	ldrh.w	lr, [r8]
 801e4f8:	fa1f fa83 	uxth.w	sl, r3
 801e4fc:	ea4f 202e 	mov.w	r0, lr, asr #8
 801e500:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801e504:	43db      	mvns	r3, r3
 801e506:	b2db      	uxtb	r3, r3
 801e508:	fb11 f10a 	smulbb	r1, r1, sl
 801e50c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801e510:	fb00 1003 	mla	r0, r0, r3, r1
 801e514:	b2d2      	uxtb	r2, r2
 801e516:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801e51a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801e51e:	fa5f fe8e 	uxtb.w	lr, lr
 801e522:	fb12 f20a 	smulbb	r2, r2, sl
 801e526:	fb0e 2203 	mla	r2, lr, r3, r2
 801e52a:	fa5f fc8c 	uxtb.w	ip, ip
 801e52e:	b280      	uxth	r0, r0
 801e530:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801e534:	b292      	uxth	r2, r2
 801e536:	fb1c fc0a 	smulbb	ip, ip, sl
 801e53a:	fb01 cc03 	mla	ip, r1, r3, ip
 801e53e:	1c43      	adds	r3, r0, #1
 801e540:	1c51      	adds	r1, r2, #1
 801e542:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801e546:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 801e54a:	fa1f fc8c 	uxth.w	ip, ip
 801e54e:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801e552:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801e556:	4308      	orrs	r0, r1
 801e558:	f10c 0101 	add.w	r1, ip, #1
 801e55c:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801e560:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801e564:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801e568:	ea40 000c 	orr.w	r0, r0, ip
 801e56c:	f8a8 0000 	strh.w	r0, [r8]
 801e570:	e7a1      	b.n	801e4b6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 801e572:	b017      	add	sp, #92	; 0x5c
 801e574:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801e578 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 801e578:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801e57c:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 801e580:	2d00      	cmp	r5, #0
 801e582:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801e586:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801e58a:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 801e58e:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 801e592:	fb05 0e03 	mla	lr, r5, r3, r0
 801e596:	f2c0 80b0 	blt.w	801e6fa <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 801e59a:	45a9      	cmp	r9, r5
 801e59c:	f340 80ad 	ble.w	801e6fa <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 801e5a0:	2800      	cmp	r0, #0
 801e5a2:	f2c0 80a8 	blt.w	801e6f6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 801e5a6:	4580      	cmp	r8, r0
 801e5a8:	f340 80a5 	ble.w	801e6f6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 801e5ac:	ea4f 045e 	mov.w	r4, lr, lsr #1
 801e5b0:	f01e 0f01 	tst.w	lr, #1
 801e5b4:	5d16      	ldrb	r6, [r2, r4]
 801e5b6:	bf0c      	ite	eq
 801e5b8:	f006 060f 	andeq.w	r6, r6, #15
 801e5bc:	1136      	asrne	r6, r6, #4
 801e5be:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801e5c2:	b2f6      	uxtb	r6, r6
 801e5c4:	1c44      	adds	r4, r0, #1
 801e5c6:	f100 809b 	bmi.w	801e700 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 801e5ca:	45a0      	cmp	r8, r4
 801e5cc:	f340 8098 	ble.w	801e700 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 801e5d0:	2f00      	cmp	r7, #0
 801e5d2:	f000 8097 	beq.w	801e704 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 801e5d6:	f10e 0a01 	add.w	sl, lr, #1
 801e5da:	ea4f 045a 	mov.w	r4, sl, lsr #1
 801e5de:	f01a 0f01 	tst.w	sl, #1
 801e5e2:	5d14      	ldrb	r4, [r2, r4]
 801e5e4:	bf0c      	ite	eq
 801e5e6:	f004 040f 	andeq.w	r4, r4, #15
 801e5ea:	1124      	asrne	r4, r4, #4
 801e5ec:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801e5f0:	b2e4      	uxtb	r4, r4
 801e5f2:	3501      	adds	r5, #1
 801e5f4:	f100 808a 	bmi.w	801e70c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 801e5f8:	45a9      	cmp	r9, r5
 801e5fa:	f340 8087 	ble.w	801e70c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 801e5fe:	f1bc 0f00 	cmp.w	ip, #0
 801e602:	f000 8086 	beq.w	801e712 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 801e606:	2800      	cmp	r0, #0
 801e608:	db7e      	blt.n	801e708 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 801e60a:	4580      	cmp	r8, r0
 801e60c:	dd7c      	ble.n	801e708 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 801e60e:	eb03 090e 	add.w	r9, r3, lr
 801e612:	ea4f 0559 	mov.w	r5, r9, lsr #1
 801e616:	f019 0f01 	tst.w	r9, #1
 801e61a:	5d55      	ldrb	r5, [r2, r5]
 801e61c:	bf0c      	ite	eq
 801e61e:	f005 050f 	andeq.w	r5, r5, #15
 801e622:	112d      	asrne	r5, r5, #4
 801e624:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 801e628:	b2ed      	uxtb	r5, r5
 801e62a:	3001      	adds	r0, #1
 801e62c:	d474      	bmi.n	801e718 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 801e62e:	4580      	cmp	r8, r0
 801e630:	dd72      	ble.n	801e718 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 801e632:	2f00      	cmp	r7, #0
 801e634:	d072      	beq.n	801e71c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 801e636:	3301      	adds	r3, #1
 801e638:	449e      	add	lr, r3
 801e63a:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801e63e:	f01e 0f01 	tst.w	lr, #1
 801e642:	5cd0      	ldrb	r0, [r2, r3]
 801e644:	bf0c      	ite	eq
 801e646:	f000 000f 	andeq.w	r0, r0, #15
 801e64a:	1100      	asrne	r0, r0, #4
 801e64c:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801e650:	b2c3      	uxtb	r3, r0
 801e652:	b2ba      	uxth	r2, r7
 801e654:	fa1f fc8c 	uxth.w	ip, ip
 801e658:	fb02 f00c 	mul.w	r0, r2, ip
 801e65c:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 801e660:	0112      	lsls	r2, r2, #4
 801e662:	fa1f fc8c 	uxth.w	ip, ip
 801e666:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 801e66a:	1a12      	subs	r2, r2, r0
 801e66c:	eba7 070c 	sub.w	r7, r7, ip
 801e670:	b292      	uxth	r2, r2
 801e672:	b2bf      	uxth	r7, r7
 801e674:	4362      	muls	r2, r4
 801e676:	fb06 2207 	mla	r2, r6, r7, r2
 801e67a:	fb0c 2505 	mla	r5, ip, r5, r2
 801e67e:	fb00 5303 	mla	r3, r0, r3, r5
 801e682:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801e686:	b3a3      	cbz	r3, 801e6f2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 801e688:	4a25      	ldr	r2, [pc, #148]	; (801e720 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 801e68a:	880e      	ldrh	r6, [r1, #0]
 801e68c:	6815      	ldr	r5, [r2, #0]
 801e68e:	1234      	asrs	r4, r6, #8
 801e690:	b29a      	uxth	r2, r3
 801e692:	f3c5 4007 	ubfx	r0, r5, #16, #8
 801e696:	43db      	mvns	r3, r3
 801e698:	b2db      	uxtb	r3, r3
 801e69a:	fb10 f002 	smulbb	r0, r0, r2
 801e69e:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801e6a2:	fb04 0403 	mla	r4, r4, r3, r0
 801e6a6:	f3c5 2707 	ubfx	r7, r5, #8, #8
 801e6aa:	10f0      	asrs	r0, r6, #3
 801e6ac:	b2ed      	uxtb	r5, r5
 801e6ae:	00f6      	lsls	r6, r6, #3
 801e6b0:	fb17 f702 	smulbb	r7, r7, r2
 801e6b4:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801e6b8:	fb15 f202 	smulbb	r2, r5, r2
 801e6bc:	b2f6      	uxtb	r6, r6
 801e6be:	b2a4      	uxth	r4, r4
 801e6c0:	fb00 7003 	mla	r0, r0, r3, r7
 801e6c4:	fb06 2303 	mla	r3, r6, r3, r2
 801e6c8:	b29a      	uxth	r2, r3
 801e6ca:	1c63      	adds	r3, r4, #1
 801e6cc:	b280      	uxth	r0, r0
 801e6ce:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801e6d2:	1c53      	adds	r3, r2, #1
 801e6d4:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801e6d8:	1c42      	adds	r2, r0, #1
 801e6da:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801e6de:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801e6e2:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801e6e6:	0940      	lsrs	r0, r0, #5
 801e6e8:	4323      	orrs	r3, r4
 801e6ea:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801e6ee:	4303      	orrs	r3, r0
 801e6f0:	800b      	strh	r3, [r1, #0]
 801e6f2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801e6f6:	2600      	movs	r6, #0
 801e6f8:	e764      	b.n	801e5c4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 801e6fa:	2400      	movs	r4, #0
 801e6fc:	4626      	mov	r6, r4
 801e6fe:	e778      	b.n	801e5f2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801e700:	2400      	movs	r4, #0
 801e702:	e776      	b.n	801e5f2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801e704:	463c      	mov	r4, r7
 801e706:	e774      	b.n	801e5f2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801e708:	2500      	movs	r5, #0
 801e70a:	e78e      	b.n	801e62a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 801e70c:	2300      	movs	r3, #0
 801e70e:	461d      	mov	r5, r3
 801e710:	e79f      	b.n	801e652 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801e712:	4663      	mov	r3, ip
 801e714:	4665      	mov	r5, ip
 801e716:	e79c      	b.n	801e652 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801e718:	2300      	movs	r3, #0
 801e71a:	e79a      	b.n	801e652 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801e71c:	463b      	mov	r3, r7
 801e71e:	e798      	b.n	801e652 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801e720:	20017468 	.word	0x20017468

0801e724 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e724:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e728:	b093      	sub	sp, #76	; 0x4c
 801e72a:	461d      	mov	r5, r3
 801e72c:	920c      	str	r2, [sp, #48]	; 0x30
 801e72e:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801e730:	9107      	str	r1, [sp, #28]
 801e732:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 801e736:	9011      	str	r0, [sp, #68]	; 0x44
 801e738:	6850      	ldr	r0, [r2, #4]
 801e73a:	6812      	ldr	r2, [r2, #0]
 801e73c:	fb00 1303 	mla	r3, r0, r3, r1
 801e740:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801e744:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801e746:	689b      	ldr	r3, [r3, #8]
 801e748:	3301      	adds	r3, #1
 801e74a:	f023 0301 	bic.w	r3, r3, #1
 801e74e:	9306      	str	r3, [sp, #24]
 801e750:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801e752:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 801e756:	681f      	ldr	r7, [r3, #0]
 801e758:	9b07      	ldr	r3, [sp, #28]
 801e75a:	2b00      	cmp	r3, #0
 801e75c:	dc03      	bgt.n	801e766 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 801e75e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801e760:	2b00      	cmp	r3, #0
 801e762:	f340 8267 	ble.w	801ec34 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 801e766:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801e768:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e76c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801e770:	1e48      	subs	r0, r1, #1
 801e772:	f102 3cff 	add.w	ip, r2, #4294967295
 801e776:	2d00      	cmp	r5, #0
 801e778:	f340 80b8 	ble.w	801e8ec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801e77c:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801e780:	ea4f 4326 	mov.w	r3, r6, asr #16
 801e784:	d406      	bmi.n	801e794 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801e786:	4586      	cmp	lr, r0
 801e788:	da04      	bge.n	801e794 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801e78a:	2b00      	cmp	r3, #0
 801e78c:	db02      	blt.n	801e794 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801e78e:	4563      	cmp	r3, ip
 801e790:	f2c0 80ad 	blt.w	801e8ee <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 801e794:	f11e 0e01 	adds.w	lr, lr, #1
 801e798:	f100 80a0 	bmi.w	801e8dc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801e79c:	4571      	cmp	r1, lr
 801e79e:	f2c0 809d 	blt.w	801e8dc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801e7a2:	3301      	adds	r3, #1
 801e7a4:	f100 809a 	bmi.w	801e8dc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801e7a8:	429a      	cmp	r2, r3
 801e7aa:	f2c0 8097 	blt.w	801e8dc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801e7ae:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 801e7b2:	9509      	str	r5, [sp, #36]	; 0x24
 801e7b4:	46c8      	mov	r8, r9
 801e7b6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e7b8:	2b00      	cmp	r3, #0
 801e7ba:	f340 80b6 	ble.w	801e92a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 801e7be:	f3c4 3303 	ubfx	r3, r4, #12, #4
 801e7c2:	9308      	str	r3, [sp, #32]
 801e7c4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801e7c6:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801e7ca:	1423      	asrs	r3, r4, #16
 801e7cc:	ea4f 4026 	mov.w	r0, r6, asr #16
 801e7d0:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801e7d4:	f100 813e 	bmi.w	801ea54 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801e7d8:	f10c 3bff 	add.w	fp, ip, #4294967295
 801e7dc:	455b      	cmp	r3, fp
 801e7de:	f280 8139 	bge.w	801ea54 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801e7e2:	2800      	cmp	r0, #0
 801e7e4:	f2c0 8136 	blt.w	801ea54 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801e7e8:	f10e 3bff 	add.w	fp, lr, #4294967295
 801e7ec:	4558      	cmp	r0, fp
 801e7ee:	f280 8131 	bge.w	801ea54 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801e7f2:	9a06      	ldr	r2, [sp, #24]
 801e7f4:	fb00 3302 	mla	r3, r0, r2, r3
 801e7f8:	0858      	lsrs	r0, r3, #1
 801e7fa:	07da      	lsls	r2, r3, #31
 801e7fc:	f817 c000 	ldrb.w	ip, [r7, r0]
 801e800:	9a08      	ldr	r2, [sp, #32]
 801e802:	bf54      	ite	pl
 801e804:	f00c 0c0f 	andpl.w	ip, ip, #15
 801e808:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801e80c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801e810:	fa5f fc8c 	uxtb.w	ip, ip
 801e814:	2a00      	cmp	r2, #0
 801e816:	f000 80cb 	beq.w	801e9b0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801e81a:	1c58      	adds	r0, r3, #1
 801e81c:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801e820:	07c0      	lsls	r0, r0, #31
 801e822:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801e826:	bf54      	ite	pl
 801e828:	f00e 0e0f 	andpl.w	lr, lr, #15
 801e82c:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801e830:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801e834:	fa5f fe8e 	uxtb.w	lr, lr
 801e838:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 801e83c:	b1b9      	cbz	r1, 801e86e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 801e83e:	4453      	add	r3, sl
 801e840:	0858      	lsrs	r0, r3, #1
 801e842:	07da      	lsls	r2, r3, #31
 801e844:	5c38      	ldrb	r0, [r7, r0]
 801e846:	bf54      	ite	pl
 801e848:	f000 000f 	andpl.w	r0, r0, #15
 801e84c:	1100      	asrmi	r0, r0, #4
 801e84e:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801e852:	b2c0      	uxtb	r0, r0
 801e854:	900a      	str	r0, [sp, #40]	; 0x28
 801e856:	1c58      	adds	r0, r3, #1
 801e858:	0843      	lsrs	r3, r0, #1
 801e85a:	07c2      	lsls	r2, r0, #31
 801e85c:	5cfb      	ldrb	r3, [r7, r3]
 801e85e:	bf54      	ite	pl
 801e860:	f003 030f 	andpl.w	r3, r3, #15
 801e864:	111b      	asrmi	r3, r3, #4
 801e866:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801e86a:	b2db      	uxtb	r3, r3
 801e86c:	930e      	str	r3, [sp, #56]	; 0x38
 801e86e:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801e872:	b289      	uxth	r1, r1
 801e874:	fb02 f301 	mul.w	r3, r2, r1
 801e878:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801e87c:	0112      	lsls	r2, r2, #4
 801e87e:	b289      	uxth	r1, r1
 801e880:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 801e884:	1a40      	subs	r0, r0, r1
 801e886:	fa1f fe80 	uxth.w	lr, r0
 801e88a:	1ad2      	subs	r2, r2, r3
 801e88c:	980d      	ldr	r0, [sp, #52]	; 0x34
 801e88e:	b292      	uxth	r2, r2
 801e890:	4342      	muls	r2, r0
 801e892:	fb0c 2c0e 	mla	ip, ip, lr, r2
 801e896:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801e898:	fb01 c102 	mla	r1, r1, r2, ip
 801e89c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801e89e:	fb03 1302 	mla	r3, r3, r2, r1
 801e8a2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801e8a6:	2bff      	cmp	r3, #255	; 0xff
 801e8a8:	f040 8093 	bne.w	801e9d2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 801e8ac:	4bbe      	ldr	r3, [pc, #760]	; (801eba8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 801e8ae:	681a      	ldr	r2, [r3, #0]
 801e8b0:	4bbe      	ldr	r3, [pc, #760]	; (801ebac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 801e8b2:	0951      	lsrs	r1, r2, #5
 801e8b4:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 801e8b8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801e8bc:	430b      	orrs	r3, r1
 801e8be:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801e8c2:	4313      	orrs	r3, r2
 801e8c4:	f8a8 3000 	strh.w	r3, [r8]
 801e8c8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801e8ca:	441c      	add	r4, r3
 801e8cc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801e8ce:	441e      	add	r6, r3
 801e8d0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e8d2:	3b01      	subs	r3, #1
 801e8d4:	f108 0802 	add.w	r8, r8, #2
 801e8d8:	9309      	str	r3, [sp, #36]	; 0x24
 801e8da:	e76c      	b.n	801e7b6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801e8dc:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801e8de:	441c      	add	r4, r3
 801e8e0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801e8e2:	3d01      	subs	r5, #1
 801e8e4:	441e      	add	r6, r3
 801e8e6:	f109 0902 	add.w	r9, r9, #2
 801e8ea:	e744      	b.n	801e776 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801e8ec:	d021      	beq.n	801e932 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 801e8ee:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801e8f0:	1e6b      	subs	r3, r5, #1
 801e8f2:	fb00 4003 	mla	r0, r0, r3, r4
 801e8f6:	1400      	asrs	r0, r0, #16
 801e8f8:	f53f af59 	bmi.w	801e7ae <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801e8fc:	3901      	subs	r1, #1
 801e8fe:	4288      	cmp	r0, r1
 801e900:	f6bf af55 	bge.w	801e7ae <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801e904:	9920      	ldr	r1, [sp, #128]	; 0x80
 801e906:	fb01 6303 	mla	r3, r1, r3, r6
 801e90a:	141b      	asrs	r3, r3, #16
 801e90c:	f53f af4f 	bmi.w	801e7ae <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801e910:	3a01      	subs	r2, #1
 801e912:	4293      	cmp	r3, r2
 801e914:	f6bf af4b 	bge.w	801e7ae <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801e918:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801e91c:	9308      	str	r3, [sp, #32]
 801e91e:	46a8      	mov	r8, r5
 801e920:	46ce      	mov	lr, r9
 801e922:	f1b8 0f00 	cmp.w	r8, #0
 801e926:	f300 80b5 	bgt.w	801ea94 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801e92a:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801e92e:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801e932:	9b07      	ldr	r3, [sp, #28]
 801e934:	2b00      	cmp	r3, #0
 801e936:	f340 817d 	ble.w	801ec34 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 801e93a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e93e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801e942:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801e946:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801e948:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e94c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e950:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e954:	eef0 6a62 	vmov.f32	s13, s5
 801e958:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e95c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e960:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e964:	ee16 4a90 	vmov	r4, s13
 801e968:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e96c:	eef0 6a43 	vmov.f32	s13, s6
 801e970:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e974:	ee12 2a90 	vmov	r2, s5
 801e978:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e97c:	fb92 f3f3 	sdiv	r3, r2, r3
 801e980:	ee13 2a10 	vmov	r2, s6
 801e984:	931f      	str	r3, [sp, #124]	; 0x7c
 801e986:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801e988:	fb92 f3f3 	sdiv	r3, r2, r3
 801e98c:	9320      	str	r3, [sp, #128]	; 0x80
 801e98e:	9b07      	ldr	r3, [sp, #28]
 801e990:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801e992:	3b01      	subs	r3, #1
 801e994:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e998:	9307      	str	r3, [sp, #28]
 801e99a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801e99c:	ee16 6a90 	vmov	r6, s13
 801e9a0:	bf14      	ite	ne
 801e9a2:	461d      	movne	r5, r3
 801e9a4:	4615      	moveq	r5, r2
 801e9a6:	eeb0 3a67 	vmov.f32	s6, s15
 801e9aa:	eef0 2a47 	vmov.f32	s5, s14
 801e9ae:	e6d3      	b.n	801e758 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 801e9b0:	2900      	cmp	r1, #0
 801e9b2:	f43f af5c 	beq.w	801e86e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 801e9b6:	eb0a 0003 	add.w	r0, sl, r3
 801e9ba:	0843      	lsrs	r3, r0, #1
 801e9bc:	07c0      	lsls	r0, r0, #31
 801e9be:	5cfb      	ldrb	r3, [r7, r3]
 801e9c0:	bf54      	ite	pl
 801e9c2:	f003 030f 	andpl.w	r3, r3, #15
 801e9c6:	111b      	asrmi	r3, r3, #4
 801e9c8:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801e9cc:	b2db      	uxtb	r3, r3
 801e9ce:	930a      	str	r3, [sp, #40]	; 0x28
 801e9d0:	e74d      	b.n	801e86e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 801e9d2:	2b00      	cmp	r3, #0
 801e9d4:	f43f af78 	beq.w	801e8c8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801e9d8:	4a73      	ldr	r2, [pc, #460]	; (801eba8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 801e9da:	f8b8 c000 	ldrh.w	ip, [r8]
 801e9de:	6810      	ldr	r0, [r2, #0]
 801e9e0:	fa1f fe83 	uxth.w	lr, r3
 801e9e4:	ea4f 212c 	mov.w	r1, ip, asr #8
 801e9e8:	f3c0 4207 	ubfx	r2, r0, #16, #8
 801e9ec:	43db      	mvns	r3, r3
 801e9ee:	b2db      	uxtb	r3, r3
 801e9f0:	fb12 f20e 	smulbb	r2, r2, lr
 801e9f4:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801e9f8:	fb01 2103 	mla	r1, r1, r3, r2
 801e9fc:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 801ea00:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801ea04:	b2c0      	uxtb	r0, r0
 801ea06:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801ea0a:	fb1b fb0e 	smulbb	fp, fp, lr
 801ea0e:	b289      	uxth	r1, r1
 801ea10:	fb10 fe0e 	smulbb	lr, r0, lr
 801ea14:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801ea18:	fa5f fc8c 	uxtb.w	ip, ip
 801ea1c:	fb02 b203 	mla	r2, r2, r3, fp
 801ea20:	1c48      	adds	r0, r1, #1
 801ea22:	fb0c e303 	mla	r3, ip, r3, lr
 801ea26:	b292      	uxth	r2, r2
 801ea28:	b29b      	uxth	r3, r3
 801ea2a:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 801ea2e:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 801ea32:	f102 0b01 	add.w	fp, r2, #1
 801ea36:	1c59      	adds	r1, r3, #1
 801ea38:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801ea3c:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 801ea40:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801ea44:	0952      	lsrs	r2, r2, #5
 801ea46:	4301      	orrs	r1, r0
 801ea48:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ea4c:	4311      	orrs	r1, r2
 801ea4e:	f8a8 1000 	strh.w	r1, [r8]
 801ea52:	e739      	b.n	801e8c8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801ea54:	f113 0b01 	adds.w	fp, r3, #1
 801ea58:	f53f af36 	bmi.w	801e8c8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801ea5c:	45dc      	cmp	ip, fp
 801ea5e:	f6ff af33 	blt.w	801e8c8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801ea62:	f110 0b01 	adds.w	fp, r0, #1
 801ea66:	f53f af2f 	bmi.w	801e8c8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801ea6a:	45de      	cmp	lr, fp
 801ea6c:	f6ff af2c 	blt.w	801e8c8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801ea70:	9a08      	ldr	r2, [sp, #32]
 801ea72:	9302      	str	r3, [sp, #8]
 801ea74:	fa0f f38e 	sxth.w	r3, lr
 801ea78:	9301      	str	r3, [sp, #4]
 801ea7a:	fa0f f38c 	sxth.w	r3, ip
 801ea7e:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801ea82:	9105      	str	r1, [sp, #20]
 801ea84:	9300      	str	r3, [sp, #0]
 801ea86:	463a      	mov	r2, r7
 801ea88:	4653      	mov	r3, sl
 801ea8a:	4641      	mov	r1, r8
 801ea8c:	9811      	ldr	r0, [sp, #68]	; 0x44
 801ea8e:	f7ff fd73 	bl	801e578 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 801ea92:	e719      	b.n	801e8c8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801ea94:	9906      	ldr	r1, [sp, #24]
 801ea96:	1422      	asrs	r2, r4, #16
 801ea98:	1433      	asrs	r3, r6, #16
 801ea9a:	fb01 2303 	mla	r3, r1, r3, r2
 801ea9e:	085a      	lsrs	r2, r3, #1
 801eaa0:	07d9      	lsls	r1, r3, #31
 801eaa2:	5cba      	ldrb	r2, [r7, r2]
 801eaa4:	bf54      	ite	pl
 801eaa6:	f002 020f 	andpl.w	r2, r2, #15
 801eaaa:	1112      	asrmi	r2, r2, #4
 801eaac:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801eab0:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801eab4:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801eab8:	b2d2      	uxtb	r2, r2
 801eaba:	2800      	cmp	r0, #0
 801eabc:	d062      	beq.n	801eb84 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 801eabe:	f103 0a01 	add.w	sl, r3, #1
 801eac2:	ea4f 015a 	mov.w	r1, sl, lsr #1
 801eac6:	f01a 0f01 	tst.w	sl, #1
 801eaca:	5c79      	ldrb	r1, [r7, r1]
 801eacc:	bf0c      	ite	eq
 801eace:	f001 010f 	andeq.w	r1, r1, #15
 801ead2:	1109      	asrne	r1, r1, #4
 801ead4:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801ead8:	b2c9      	uxtb	r1, r1
 801eada:	910f      	str	r1, [sp, #60]	; 0x3c
 801eadc:	f1bc 0f00 	cmp.w	ip, #0
 801eae0:	d019      	beq.n	801eb16 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 801eae2:	9908      	ldr	r1, [sp, #32]
 801eae4:	440b      	add	r3, r1
 801eae6:	0859      	lsrs	r1, r3, #1
 801eae8:	f013 0f01 	tst.w	r3, #1
 801eaec:	5c79      	ldrb	r1, [r7, r1]
 801eaee:	bf0c      	ite	eq
 801eaf0:	f001 010f 	andeq.w	r1, r1, #15
 801eaf4:	1109      	asrne	r1, r1, #4
 801eaf6:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801eafa:	b2c9      	uxtb	r1, r1
 801eafc:	3301      	adds	r3, #1
 801eafe:	910b      	str	r1, [sp, #44]	; 0x2c
 801eb00:	0859      	lsrs	r1, r3, #1
 801eb02:	07db      	lsls	r3, r3, #31
 801eb04:	5c79      	ldrb	r1, [r7, r1]
 801eb06:	bf54      	ite	pl
 801eb08:	f001 010f 	andpl.w	r1, r1, #15
 801eb0c:	1109      	asrmi	r1, r1, #4
 801eb0e:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801eb12:	b2c9      	uxtb	r1, r1
 801eb14:	9110      	str	r1, [sp, #64]	; 0x40
 801eb16:	b280      	uxth	r0, r0
 801eb18:	fa1f fc8c 	uxth.w	ip, ip
 801eb1c:	fb00 f30c 	mul.w	r3, r0, ip
 801eb20:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 801eb24:	0100      	lsls	r0, r0, #4
 801eb26:	fa1f fc8c 	uxth.w	ip, ip
 801eb2a:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 801eb2e:	eba1 010c 	sub.w	r1, r1, ip
 801eb32:	fa1f fa81 	uxth.w	sl, r1
 801eb36:	1ac0      	subs	r0, r0, r3
 801eb38:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801eb3a:	b280      	uxth	r0, r0
 801eb3c:	4348      	muls	r0, r1
 801eb3e:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801eb40:	fb02 020a 	mla	r2, r2, sl, r0
 801eb44:	fb0c 2c01 	mla	ip, ip, r1, r2
 801eb48:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801eb4a:	fb03 c302 	mla	r3, r3, r2, ip
 801eb4e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801eb52:	2bff      	cmp	r3, #255	; 0xff
 801eb54:	d12c      	bne.n	801ebb0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 801eb56:	4b14      	ldr	r3, [pc, #80]	; (801eba8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 801eb58:	681a      	ldr	r2, [r3, #0]
 801eb5a:	4b14      	ldr	r3, [pc, #80]	; (801ebac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 801eb5c:	0951      	lsrs	r1, r2, #5
 801eb5e:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 801eb62:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801eb66:	430b      	orrs	r3, r1
 801eb68:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801eb6c:	4313      	orrs	r3, r2
 801eb6e:	f8ae 3000 	strh.w	r3, [lr]
 801eb72:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801eb74:	441c      	add	r4, r3
 801eb76:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801eb78:	f10e 0e02 	add.w	lr, lr, #2
 801eb7c:	441e      	add	r6, r3
 801eb7e:	f108 38ff 	add.w	r8, r8, #4294967295
 801eb82:	e6ce      	b.n	801e922 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 801eb84:	f1bc 0f00 	cmp.w	ip, #0
 801eb88:	d0c5      	beq.n	801eb16 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 801eb8a:	9908      	ldr	r1, [sp, #32]
 801eb8c:	440b      	add	r3, r1
 801eb8e:	0859      	lsrs	r1, r3, #1
 801eb90:	07db      	lsls	r3, r3, #31
 801eb92:	5c79      	ldrb	r1, [r7, r1]
 801eb94:	bf54      	ite	pl
 801eb96:	f001 010f 	andpl.w	r1, r1, #15
 801eb9a:	1109      	asrmi	r1, r1, #4
 801eb9c:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801eba0:	b2c9      	uxtb	r1, r1
 801eba2:	910b      	str	r1, [sp, #44]	; 0x2c
 801eba4:	e7b7      	b.n	801eb16 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 801eba6:	bf00      	nop
 801eba8:	20017468 	.word	0x20017468
 801ebac:	fffff800 	.word	0xfffff800
 801ebb0:	2b00      	cmp	r3, #0
 801ebb2:	d0de      	beq.n	801eb72 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801ebb4:	4a21      	ldr	r2, [pc, #132]	; (801ec3c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 801ebb6:	f8be c000 	ldrh.w	ip, [lr]
 801ebba:	6810      	ldr	r0, [r2, #0]
 801ebbc:	fa1f fa83 	uxth.w	sl, r3
 801ebc0:	ea4f 212c 	mov.w	r1, ip, asr #8
 801ebc4:	f3c0 4207 	ubfx	r2, r0, #16, #8
 801ebc8:	43db      	mvns	r3, r3
 801ebca:	b2db      	uxtb	r3, r3
 801ebcc:	fb12 f20a 	smulbb	r2, r2, sl
 801ebd0:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801ebd4:	fb01 2103 	mla	r1, r1, r3, r2
 801ebd8:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 801ebdc:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801ebe0:	b2c0      	uxtb	r0, r0
 801ebe2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801ebe6:	fa5f fc8c 	uxtb.w	ip, ip
 801ebea:	fb10 f00a 	smulbb	r0, r0, sl
 801ebee:	fb0c 0003 	mla	r0, ip, r3, r0
 801ebf2:	b289      	uxth	r1, r1
 801ebf4:	fb1b fb0a 	smulbb	fp, fp, sl
 801ebf8:	b280      	uxth	r0, r0
 801ebfa:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801ebfe:	fb02 b203 	mla	r2, r2, r3, fp
 801ec02:	1c4b      	adds	r3, r1, #1
 801ec04:	f100 0b01 	add.w	fp, r0, #1
 801ec08:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801ec0c:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 801ec10:	b292      	uxth	r2, r2
 801ec12:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 801ec16:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801ec1a:	ea4b 0101 	orr.w	r1, fp, r1
 801ec1e:	f102 0b01 	add.w	fp, r2, #1
 801ec22:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 801ec26:	0952      	lsrs	r2, r2, #5
 801ec28:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ec2c:	4311      	orrs	r1, r2
 801ec2e:	f8ae 1000 	strh.w	r1, [lr]
 801ec32:	e79e      	b.n	801eb72 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801ec34:	b013      	add	sp, #76	; 0x4c
 801ec36:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ec3a:	bf00      	nop
 801ec3c:	20017468 	.word	0x20017468

0801ec40 <CRC_Lock>:
 801ec40:	b530      	push	{r4, r5, lr}
 801ec42:	4a20      	ldr	r2, [pc, #128]	; (801ecc4 <CRC_Lock+0x84>)
 801ec44:	6813      	ldr	r3, [r2, #0]
 801ec46:	f023 0301 	bic.w	r3, r3, #1
 801ec4a:	6013      	str	r3, [r2, #0]
 801ec4c:	4b1e      	ldr	r3, [pc, #120]	; (801ecc8 <CRC_Lock+0x88>)
 801ec4e:	681a      	ldr	r2, [r3, #0]
 801ec50:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 801ec54:	4022      	ands	r2, r4
 801ec56:	f24c 2540 	movw	r5, #49728	; 0xc240
 801ec5a:	42aa      	cmp	r2, r5
 801ec5c:	d005      	beq.n	801ec6a <CRC_Lock+0x2a>
 801ec5e:	681b      	ldr	r3, [r3, #0]
 801ec60:	f24c 2270 	movw	r2, #49776	; 0xc270
 801ec64:	4023      	ands	r3, r4
 801ec66:	4293      	cmp	r3, r2
 801ec68:	d124      	bne.n	801ecb4 <CRC_Lock+0x74>
 801ec6a:	4b18      	ldr	r3, [pc, #96]	; (801eccc <CRC_Lock+0x8c>)
 801ec6c:	681b      	ldr	r3, [r3, #0]
 801ec6e:	bb0b      	cbnz	r3, 801ecb4 <CRC_Lock+0x74>
 801ec70:	4b17      	ldr	r3, [pc, #92]	; (801ecd0 <CRC_Lock+0x90>)
 801ec72:	681a      	ldr	r2, [r3, #0]
 801ec74:	f3c2 020b 	ubfx	r2, r2, #0, #12
 801ec78:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 801ec7c:	d00d      	beq.n	801ec9a <CRC_Lock+0x5a>
 801ec7e:	681a      	ldr	r2, [r3, #0]
 801ec80:	f240 4483 	movw	r4, #1155	; 0x483
 801ec84:	f3c2 020b 	ubfx	r2, r2, #0, #12
 801ec88:	42a2      	cmp	r2, r4
 801ec8a:	d006      	beq.n	801ec9a <CRC_Lock+0x5a>
 801ec8c:	681b      	ldr	r3, [r3, #0]
 801ec8e:	f240 4285 	movw	r2, #1157	; 0x485
 801ec92:	f3c3 030b 	ubfx	r3, r3, #0, #12
 801ec96:	4293      	cmp	r3, r2
 801ec98:	d10c      	bne.n	801ecb4 <CRC_Lock+0x74>
 801ec9a:	4b0e      	ldr	r3, [pc, #56]	; (801ecd4 <CRC_Lock+0x94>)
 801ec9c:	2201      	movs	r2, #1
 801ec9e:	601a      	str	r2, [r3, #0]
 801eca0:	681a      	ldr	r2, [r3, #0]
 801eca2:	2a00      	cmp	r2, #0
 801eca4:	d1fc      	bne.n	801eca0 <CRC_Lock+0x60>
 801eca6:	4b0c      	ldr	r3, [pc, #48]	; (801ecd8 <CRC_Lock+0x98>)
 801eca8:	6018      	str	r0, [r3, #0]
 801ecaa:	6818      	ldr	r0, [r3, #0]
 801ecac:	1a43      	subs	r3, r0, r1
 801ecae:	4258      	negs	r0, r3
 801ecb0:	4158      	adcs	r0, r3
 801ecb2:	bd30      	pop	{r4, r5, pc}
 801ecb4:	4b09      	ldr	r3, [pc, #36]	; (801ecdc <CRC_Lock+0x9c>)
 801ecb6:	2201      	movs	r2, #1
 801ecb8:	601a      	str	r2, [r3, #0]
 801ecba:	681a      	ldr	r2, [r3, #0]
 801ecbc:	2a00      	cmp	r2, #0
 801ecbe:	d1fc      	bne.n	801ecba <CRC_Lock+0x7a>
 801ecc0:	4b07      	ldr	r3, [pc, #28]	; (801ece0 <CRC_Lock+0xa0>)
 801ecc2:	e7f1      	b.n	801eca8 <CRC_Lock+0x68>
 801ecc4:	e0002000 	.word	0xe0002000
 801ecc8:	e000ed00 	.word	0xe000ed00
 801eccc:	e0042000 	.word	0xe0042000
 801ecd0:	5c001000 	.word	0x5c001000
 801ecd4:	58024c08 	.word	0x58024c08
 801ecd8:	58024c00 	.word	0x58024c00
 801ecdc:	40023008 	.word	0x40023008
 801ece0:	40023000 	.word	0x40023000

0801ece4 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 801ece4:	6101      	str	r1, [r0, #16]
 801ece6:	4770      	bx	lr

0801ece8 <_ZN8touchgfx8Gestures4tickEv>:
 801ece8:	7b83      	ldrb	r3, [r0, #14]
 801ecea:	b14b      	cbz	r3, 801ed00 <_ZN8touchgfx8Gestures4tickEv+0x18>
 801ecec:	8903      	ldrh	r3, [r0, #8]
 801ecee:	3301      	adds	r3, #1
 801ecf0:	b29b      	uxth	r3, r3
 801ecf2:	2b07      	cmp	r3, #7
 801ecf4:	8103      	strh	r3, [r0, #8]
 801ecf6:	bf81      	itttt	hi
 801ecf8:	2300      	movhi	r3, #0
 801ecfa:	8143      	strhhi	r3, [r0, #10]
 801ecfc:	8183      	strhhi	r3, [r0, #12]
 801ecfe:	7383      	strbhi	r3, [r0, #14]
 801ed00:	4770      	bx	lr
	...

0801ed04 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 801ed04:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 801ed08:	4698      	mov	r8, r3
 801ed0a:	8883      	ldrh	r3, [r0, #4]
 801ed0c:	f8ad 3006 	strh.w	r3, [sp, #6]
 801ed10:	eba8 0303 	sub.w	r3, r8, r3
 801ed14:	b21b      	sxth	r3, r3
 801ed16:	4604      	mov	r4, r0
 801ed18:	2b00      	cmp	r3, #0
 801ed1a:	4617      	mov	r7, r2
 801ed1c:	4a18      	ldr	r2, [pc, #96]	; (801ed80 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 801ed1e:	9200      	str	r2, [sp, #0]
 801ed20:	bfb8      	it	lt
 801ed22:	425b      	neglt	r3, r3
 801ed24:	8aa2      	ldrh	r2, [r4, #20]
 801ed26:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 801ed2a:	f8ad 800a 	strh.w	r8, [sp, #10]
 801ed2e:	b21b      	sxth	r3, r3
 801ed30:	460e      	mov	r6, r1
 801ed32:	4293      	cmp	r3, r2
 801ed34:	88c1      	ldrh	r1, [r0, #6]
 801ed36:	f8ad 1008 	strh.w	r1, [sp, #8]
 801ed3a:	f04f 0000 	mov.w	r0, #0
 801ed3e:	f88d 0004 	strb.w	r0, [sp, #4]
 801ed42:	f8ad 500c 	strh.w	r5, [sp, #12]
 801ed46:	dc07      	bgt.n	801ed58 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 801ed48:	1a69      	subs	r1, r5, r1
 801ed4a:	b209      	sxth	r1, r1
 801ed4c:	2900      	cmp	r1, #0
 801ed4e:	bfb8      	it	lt
 801ed50:	4249      	neglt	r1, r1
 801ed52:	b209      	sxth	r1, r1
 801ed54:	428a      	cmp	r2, r1
 801ed56:	da10      	bge.n	801ed7a <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 801ed58:	6920      	ldr	r0, [r4, #16]
 801ed5a:	6803      	ldr	r3, [r0, #0]
 801ed5c:	4669      	mov	r1, sp
 801ed5e:	685b      	ldr	r3, [r3, #4]
 801ed60:	4798      	blx	r3
 801ed62:	eba8 0606 	sub.w	r6, r8, r6
 801ed66:	2300      	movs	r3, #0
 801ed68:	1bef      	subs	r7, r5, r7
 801ed6a:	2001      	movs	r0, #1
 801ed6c:	8123      	strh	r3, [r4, #8]
 801ed6e:	8166      	strh	r6, [r4, #10]
 801ed70:	81a7      	strh	r7, [r4, #12]
 801ed72:	f8a4 8004 	strh.w	r8, [r4, #4]
 801ed76:	80e5      	strh	r5, [r4, #6]
 801ed78:	73a0      	strb	r0, [r4, #14]
 801ed7a:	b004      	add	sp, #16
 801ed7c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801ed80:	08022cb4 	.word	0x08022cb4

0801ed84 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 801ed84:	b5f0      	push	{r4, r5, r6, r7, lr}
 801ed86:	461e      	mov	r6, r3
 801ed88:	1e4b      	subs	r3, r1, #1
 801ed8a:	2b01      	cmp	r3, #1
 801ed8c:	b085      	sub	sp, #20
 801ed8e:	4604      	mov	r4, r0
 801ed90:	460d      	mov	r5, r1
 801ed92:	4617      	mov	r7, r2
 801ed94:	d84b      	bhi.n	801ee2e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 801ed96:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801ed9a:	1cd3      	adds	r3, r2, #3
 801ed9c:	b29b      	uxth	r3, r3
 801ed9e:	2b06      	cmp	r3, #6
 801eda0:	d916      	bls.n	801edd0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 801eda2:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 801ee44 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 801eda6:	f8cd c004 	str.w	ip, [sp, #4]
 801edaa:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801edae:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801edb2:	6900      	ldr	r0, [r0, #16]
 801edb4:	f8ad 100c 	strh.w	r1, [sp, #12]
 801edb8:	f04f 0c00 	mov.w	ip, #0
 801edbc:	f88d c008 	strb.w	ip, [sp, #8]
 801edc0:	f8ad 200a 	strh.w	r2, [sp, #10]
 801edc4:	f8ad 300e 	strh.w	r3, [sp, #14]
 801edc8:	6803      	ldr	r3, [r0, #0]
 801edca:	a901      	add	r1, sp, #4
 801edcc:	689b      	ldr	r3, [r3, #8]
 801edce:	4798      	blx	r3
 801edd0:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801edd4:	1cd3      	adds	r3, r2, #3
 801edd6:	b29b      	uxth	r3, r3
 801edd8:	2b06      	cmp	r3, #6
 801edda:	d916      	bls.n	801ee0a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801eddc:	f8df c064 	ldr.w	ip, [pc, #100]	; 801ee44 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 801ede0:	f8cd c004 	str.w	ip, [sp, #4]
 801ede4:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801ede8:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801edec:	6920      	ldr	r0, [r4, #16]
 801edee:	f8ad 100c 	strh.w	r1, [sp, #12]
 801edf2:	f04f 0c01 	mov.w	ip, #1
 801edf6:	f88d c008 	strb.w	ip, [sp, #8]
 801edfa:	f8ad 200a 	strh.w	r2, [sp, #10]
 801edfe:	f8ad 300e 	strh.w	r3, [sp, #14]
 801ee02:	6803      	ldr	r3, [r0, #0]
 801ee04:	a901      	add	r1, sp, #4
 801ee06:	689b      	ldr	r3, [r3, #8]
 801ee08:	4798      	blx	r3
 801ee0a:	4b0d      	ldr	r3, [pc, #52]	; (801ee40 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 801ee0c:	9301      	str	r3, [sp, #4]
 801ee0e:	6920      	ldr	r0, [r4, #16]
 801ee10:	f88d 5008 	strb.w	r5, [sp, #8]
 801ee14:	2300      	movs	r3, #0
 801ee16:	f8ad 700a 	strh.w	r7, [sp, #10]
 801ee1a:	f8ad 600c 	strh.w	r6, [sp, #12]
 801ee1e:	f8ad 300e 	strh.w	r3, [sp, #14]
 801ee22:	6803      	ldr	r3, [r0, #0]
 801ee24:	a901      	add	r1, sp, #4
 801ee26:	681b      	ldr	r3, [r3, #0]
 801ee28:	4798      	blx	r3
 801ee2a:	b005      	add	sp, #20
 801ee2c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801ee2e:	2900      	cmp	r1, #0
 801ee30:	d1eb      	bne.n	801ee0a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801ee32:	80a2      	strh	r2, [r4, #4]
 801ee34:	80c6      	strh	r6, [r0, #6]
 801ee36:	60a1      	str	r1, [r4, #8]
 801ee38:	81a1      	strh	r1, [r4, #12]
 801ee3a:	73a1      	strb	r1, [r4, #14]
 801ee3c:	e7e5      	b.n	801ee0a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801ee3e:	bf00      	nop
 801ee40:	08022ca0 	.word	0x08022ca0
 801ee44:	08022cc8 	.word	0x08022cc8

0801ee48 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>:
 801ee48:	10c9      	asrs	r1, r1, #3
 801ee4a:	2900      	cmp	r1, #0
 801ee4c:	bfb8      	it	lt
 801ee4e:	4249      	neglt	r1, r1
 801ee50:	2801      	cmp	r0, #1
 801ee52:	d108      	bne.n	801ee66 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 801ee54:	f3c1 0008 	ubfx	r0, r1, #0, #9
 801ee58:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 801ee5c:	4601      	mov	r1, r0
 801ee5e:	dd02      	ble.n	801ee66 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 801ee60:	f5c0 7000 	rsb	r0, r0, #512	; 0x200
 801ee64:	4770      	bx	lr
 801ee66:	29ff      	cmp	r1, #255	; 0xff
 801ee68:	bfa8      	it	ge
 801ee6a:	21ff      	movge	r1, #255	; 0xff
 801ee6c:	4608      	mov	r0, r1
 801ee6e:	4770      	bx	lr

0801ee70 <_ZN8touchgfx10Rasterizer6lineToEii>:
 801ee70:	b410      	push	{r4}
 801ee72:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 801ee76:	429c      	cmp	r4, r3
 801ee78:	d803      	bhi.n	801ee82 <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
 801ee7a:	f85d 4b04 	ldr.w	r4, [sp], #4
 801ee7e:	f7ef b97d 	b.w	800e17c <_ZN8touchgfx7Outline6lineToEii>
 801ee82:	f85d 4b04 	ldr.w	r4, [sp], #4
 801ee86:	4770      	bx	lr

0801ee88 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
 801ee88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ee8c:	b08b      	sub	sp, #44	; 0x2c
 801ee8e:	e9cd 2306 	strd	r2, r3, [sp, #24]
 801ee92:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 801ee96:	9308      	str	r3, [sp, #32]
 801ee98:	4606      	mov	r6, r0
 801ee9a:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 801ee9e:	9309      	str	r3, [sp, #36]	; 0x24
 801eea0:	468a      	mov	sl, r1
 801eea2:	f7ef fad8 	bl	800e456 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
 801eea6:	68b5      	ldr	r5, [r6, #8]
 801eea8:	4604      	mov	r4, r0
 801eeaa:	2d00      	cmp	r5, #0
 801eeac:	d044      	beq.n	801ef38 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 801eeae:	6873      	ldr	r3, [r6, #4]
 801eeb0:	42ab      	cmp	r3, r5
 801eeb2:	d33d      	bcc.n	801ef30 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
 801eeb4:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 801eeb8:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	; 0x34
 801eebc:	eb02 0b03 	add.w	fp, r2, r3
 801eec0:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 801eec4:	fb02 1203 	mla	r2, r2, r3, r1
 801eec8:	9205      	str	r2, [sp, #20]
 801eeca:	1e6a      	subs	r2, r5, #1
 801eecc:	9204      	str	r2, [sp, #16]
 801eece:	f04f 0800 	mov.w	r8, #0
 801eed2:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
 801eed6:	f9b4 7000 	ldrsh.w	r7, [r4]
 801eeda:	454b      	cmp	r3, r9
 801eedc:	463a      	mov	r2, r7
 801eede:	d008      	beq.n	801eef2 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
 801eee0:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	; 0x34
 801eee4:	eb03 0b09 	add.w	fp, r3, r9
 801eee8:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
 801eeec:	fb03 1309 	mla	r3, r3, r9, r1
 801eef0:	9305      	str	r3, [sp, #20]
 801eef2:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 801eef6:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 801eefa:	4498      	add	r8, r3
 801eefc:	9b04      	ldr	r3, [sp, #16]
 801eefe:	3b01      	subs	r3, #1
 801ef00:	9304      	str	r3, [sp, #16]
 801ef02:	9b04      	ldr	r3, [sp, #16]
 801ef04:	3301      	adds	r3, #1
 801ef06:	d015      	beq.n	801ef34 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
 801ef08:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
 801ef0c:	42bb      	cmp	r3, r7
 801ef0e:	d117      	bne.n	801ef40 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
 801ef10:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 801ef14:	9b04      	ldr	r3, [sp, #16]
 801ef16:	4548      	cmp	r0, r9
 801ef18:	f103 33ff 	add.w	r3, r3, #4294967295
 801ef1c:	d17f      	bne.n	801f01e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x196>
 801ef1e:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 801ef22:	4401      	add	r1, r0
 801ef24:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801ef28:	4480      	add	r8, r0
 801ef2a:	e7e9      	b.n	801ef00 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
 801ef2c:	461f      	mov	r7, r3
 801ef2e:	e044      	b.n	801efba <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x132>
 801ef30:	2000      	movs	r0, #0
 801ef32:	e002      	b.n	801ef3a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
 801ef34:	2900      	cmp	r1, #0
 801ef36:	d16f      	bne.n	801f018 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x190>
 801ef38:	2001      	movs	r0, #1
 801ef3a:	b00b      	add	sp, #44	; 0x2c
 801ef3c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ef40:	2900      	cmp	r1, #0
 801ef42:	d030      	beq.n	801efa6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11e>
 801ef44:	2f00      	cmp	r7, #0
 801ef46:	db29      	blt.n	801ef9c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 801ef48:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 801ef4c:	42bb      	cmp	r3, r7
 801ef4e:	dd25      	ble.n	801ef9c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 801ef50:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
 801ef54:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 801ef58:	f7ff ff76 	bl	801ee48 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 801ef5c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ef5e:	fb10 f003 	smulbb	r0, r0, r3
 801ef62:	b280      	uxth	r0, r0
 801ef64:	1c41      	adds	r1, r0, #1
 801ef66:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801ef6a:	1209      	asrs	r1, r1, #8
 801ef6c:	f011 0fff 	tst.w	r1, #255	; 0xff
 801ef70:	d014      	beq.n	801ef9c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 801ef72:	9808      	ldr	r0, [sp, #32]
 801ef74:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 801ef76:	b2c9      	uxtb	r1, r1
 801ef78:	b2ba      	uxth	r2, r7
 801ef7a:	9102      	str	r1, [sp, #8]
 801ef7c:	2101      	movs	r1, #1
 801ef7e:	4413      	add	r3, r2
 801ef80:	9101      	str	r1, [sp, #4]
 801ef82:	4402      	add	r2, r0
 801ef84:	fa0f f18b 	sxth.w	r1, fp
 801ef88:	f8da 0000 	ldr.w	r0, [sl]
 801ef8c:	9100      	str	r1, [sp, #0]
 801ef8e:	6941      	ldr	r1, [r0, #20]
 801ef90:	b21b      	sxth	r3, r3
 801ef92:	460d      	mov	r5, r1
 801ef94:	b212      	sxth	r2, r2
 801ef96:	9905      	ldr	r1, [sp, #20]
 801ef98:	4650      	mov	r0, sl
 801ef9a:	47a8      	blx	r5
 801ef9c:	9b04      	ldr	r3, [sp, #16]
 801ef9e:	3301      	adds	r3, #1
 801efa0:	f107 0201 	add.w	r2, r7, #1
 801efa4:	d0c8      	beq.n	801ef38 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 801efa6:	f9b4 7000 	ldrsh.w	r7, [r4]
 801efaa:	1abb      	subs	r3, r7, r2
 801efac:	2b00      	cmp	r3, #0
 801efae:	dd31      	ble.n	801f014 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 801efb0:	2a00      	cmp	r2, #0
 801efb2:	dabb      	bge.n	801ef2c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
 801efb4:	2f00      	cmp	r7, #0
 801efb6:	dd2d      	ble.n	801f014 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 801efb8:	2200      	movs	r2, #0
 801efba:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 801efbe:	19d1      	adds	r1, r2, r7
 801efc0:	4299      	cmp	r1, r3
 801efc2:	db02      	blt.n	801efca <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x142>
 801efc4:	1a9f      	subs	r7, r3, r2
 801efc6:	2f00      	cmp	r7, #0
 801efc8:	dd24      	ble.n	801f014 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 801efca:	ea4f 1188 	mov.w	r1, r8, lsl #6
 801efce:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 801efd2:	f7ff ff39 	bl	801ee48 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 801efd6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801efd8:	fb10 f003 	smulbb	r0, r0, r3
 801efdc:	b280      	uxth	r0, r0
 801efde:	1c41      	adds	r1, r0, #1
 801efe0:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801efe4:	1209      	asrs	r1, r1, #8
 801efe6:	f011 0fff 	tst.w	r1, #255	; 0xff
 801efea:	d013      	beq.n	801f014 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 801efec:	9808      	ldr	r0, [sp, #32]
 801efee:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 801eff0:	b292      	uxth	r2, r2
 801eff2:	b2c9      	uxtb	r1, r1
 801eff4:	4413      	add	r3, r2
 801eff6:	9102      	str	r1, [sp, #8]
 801eff8:	4402      	add	r2, r0
 801effa:	b23f      	sxth	r7, r7
 801effc:	f8da 0000 	ldr.w	r0, [sl]
 801f000:	9701      	str	r7, [sp, #4]
 801f002:	fa0f f18b 	sxth.w	r1, fp
 801f006:	9100      	str	r1, [sp, #0]
 801f008:	6947      	ldr	r7, [r0, #20]
 801f00a:	9905      	ldr	r1, [sp, #20]
 801f00c:	b21b      	sxth	r3, r3
 801f00e:	b212      	sxth	r2, r2
 801f010:	4650      	mov	r0, sl
 801f012:	47b8      	blx	r7
 801f014:	464b      	mov	r3, r9
 801f016:	e75c      	b.n	801eed2 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
 801f018:	2f00      	cmp	r7, #0
 801f01a:	da95      	bge.n	801ef48 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xc0>
 801f01c:	e78c      	b.n	801ef38 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 801f01e:	2900      	cmp	r1, #0
 801f020:	d0f8      	beq.n	801f014 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 801f022:	e78f      	b.n	801ef44 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbc>

0801f024 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>:
 801f024:	4b4c      	ldr	r3, [pc, #304]	; (801f158 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x134>)
 801f026:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 801f02a:	2500      	movs	r5, #0
 801f02c:	f100 0620 	add.w	r6, r0, #32
 801f030:	4604      	mov	r4, r0
 801f032:	e9c0 3100 	strd	r3, r1, [r0]
 801f036:	e9c0 5502 	strd	r5, r5, [r0, #8]
 801f03a:	e9c0 5504 	strd	r5, r5, [r0, #16]
 801f03e:	e9c0 5506 	strd	r5, r5, [r0, #24]
 801f042:	f100 0718 	add.w	r7, r0, #24
 801f046:	4630      	mov	r0, r6
 801f048:	4690      	mov	r8, r2
 801f04a:	f7ee fbcf 	bl	800d7ec <_ZN8touchgfx7OutlineC1Ev>
 801f04e:	e9c4 5517 	strd	r5, r5, [r4, #92]	; 0x5c
 801f052:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 801f056:	2301      	movs	r3, #1
 801f058:	f884 5050 	strb.w	r5, [r4, #80]	; 0x50
 801f05c:	f8a4 5052 	strh.w	r5, [r4, #82]	; 0x52
 801f060:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
 801f064:	f8a4 5056 	strh.w	r5, [r4, #86]	; 0x56
 801f068:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 801f06c:	f884 5059 	strb.w	r5, [r4, #89]	; 0x59
 801f070:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 801f074:	f9b8 2000 	ldrsh.w	r2, [r8]
 801f078:	f8b8 0004 	ldrh.w	r0, [r8, #4]
 801f07c:	f8d4 c004 	ldr.w	ip, [r4, #4]
 801f080:	9500      	str	r5, [sp, #0]
 801f082:	4410      	add	r0, r2
 801f084:	b280      	uxth	r0, r0
 801f086:	fa0f fa80 	sxth.w	sl, r0
 801f08a:	45aa      	cmp	sl, r5
 801f08c:	f9bc 9008 	ldrsh.w	r9, [ip, #8]
 801f090:	f9bc e00a 	ldrsh.w	lr, [ip, #10]
 801f094:	dd5c      	ble.n	801f150 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12c>
 801f096:	4591      	cmp	r9, r2
 801f098:	dd5a      	ble.n	801f150 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12c>
 801f09a:	f9b8 1002 	ldrsh.w	r1, [r8, #2]
 801f09e:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 801f0a2:	440b      	add	r3, r1
 801f0a4:	b29b      	uxth	r3, r3
 801f0a6:	b21d      	sxth	r5, r3
 801f0a8:	2d00      	cmp	r5, #0
 801f0aa:	dd51      	ble.n	801f150 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12c>
 801f0ac:	458e      	cmp	lr, r1
 801f0ae:	dd4f      	ble.n	801f150 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12c>
 801f0b0:	45d1      	cmp	r9, sl
 801f0b2:	bfb8      	it	lt
 801f0b4:	fa1f f089 	uxthlt.w	r0, r9
 801f0b8:	45ae      	cmp	lr, r5
 801f0ba:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 801f0be:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
 801f0c2:	bfb8      	it	lt
 801f0c4:	fa1f f38e 	uxthlt.w	r3, lr
 801f0c8:	1a80      	subs	r0, r0, r2
 801f0ca:	1a5b      	subs	r3, r3, r1
 801f0cc:	f8ad 0004 	strh.w	r0, [sp, #4]
 801f0d0:	f8ad 3006 	strh.w	r3, [sp, #6]
 801f0d4:	f8ad 2000 	strh.w	r2, [sp]
 801f0d8:	f8ad 1002 	strh.w	r1, [sp, #2]
 801f0dc:	466d      	mov	r5, sp
 801f0de:	e895 0003 	ldmia.w	r5, {r0, r1}
 801f0e2:	e887 0003 	stmia.w	r7, {r0, r1}
 801f0e6:	f8dc 3000 	ldr.w	r3, [ip]
 801f0ea:	4660      	mov	r0, ip
 801f0ec:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801f0ee:	4639      	mov	r1, r7
 801f0f0:	4798      	blx	r3
 801f0f2:	6861      	ldr	r1, [r4, #4]
 801f0f4:	4628      	mov	r0, r5
 801f0f6:	3104      	adds	r1, #4
 801f0f8:	f7f0 fd0c 	bl	800fb14 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801f0fc:	4638      	mov	r0, r7
 801f0fe:	f7f0 fce1 	bl	800fac4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f102:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 801f106:	f8bd 2000 	ldrh.w	r2, [sp]
 801f10a:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 801f10e:	f8a4 3054 	strh.w	r3, [r4, #84]	; 0x54
 801f112:	4630      	mov	r0, r6
 801f114:	f7ee fb4e 	bl	800d7b4 <_ZN8touchgfx7Outline5resetEv>
 801f118:	f9bd 3000 	ldrsh.w	r3, [sp]
 801f11c:	f9b4 201e 	ldrsh.w	r2, [r4, #30]
 801f120:	015b      	lsls	r3, r3, #5
 801f122:	60a3      	str	r3, [r4, #8]
 801f124:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 801f128:	015b      	lsls	r3, r3, #5
 801f12a:	60e3      	str	r3, [r4, #12]
 801f12c:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 801f130:	015b      	lsls	r3, r3, #5
 801f132:	6123      	str	r3, [r4, #16]
 801f134:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 801f138:	015b      	lsls	r3, r3, #5
 801f13a:	6163      	str	r3, [r4, #20]
 801f13c:	f9b4 301c 	ldrsh.w	r3, [r4, #28]
 801f140:	f8a4 3056 	strh.w	r3, [r4, #86]	; 0x56
 801f144:	4620      	mov	r0, r4
 801f146:	e9c4 3212 	strd	r3, r2, [r4, #72]	; 0x48
 801f14a:	b002      	add	sp, #8
 801f14c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801f150:	2300      	movs	r3, #0
 801f152:	9301      	str	r3, [sp, #4]
 801f154:	e7c2      	b.n	801f0dc <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0xb8>
 801f156:	bf00      	nop
 801f158:	08022614 	.word	0x08022614

0801f15c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 801f15c:	b510      	push	{r4, lr}
 801f15e:	4b07      	ldr	r3, [pc, #28]	; (801f17c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x20>)
 801f160:	781b      	ldrb	r3, [r3, #0]
 801f162:	2b01      	cmp	r3, #1
 801f164:	d108      	bne.n	801f178 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>
 801f166:	6843      	ldr	r3, [r0, #4]
 801f168:	6814      	ldr	r4, [r2, #0]
 801f16a:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 801f16e:	680b      	ldr	r3, [r1, #0]
 801f170:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 801f174:	6013      	str	r3, [r2, #0]
 801f176:	600c      	str	r4, [r1, #0]
 801f178:	bd10      	pop	{r4, pc}
 801f17a:	bf00      	nop
 801f17c:	20017450 	.word	0x20017450

0801f180 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 801f180:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801f182:	ab02      	add	r3, sp, #8
 801f184:	4604      	mov	r4, r0
 801f186:	f843 2d08 	str.w	r2, [r3, #-8]!
 801f18a:	9101      	str	r1, [sp, #4]
 801f18c:	461a      	mov	r2, r3
 801f18e:	a901      	add	r1, sp, #4
 801f190:	f7ff ffe4 	bl	801f15c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 801f194:	68a3      	ldr	r3, [r4, #8]
 801f196:	9901      	ldr	r1, [sp, #4]
 801f198:	9a00      	ldr	r2, [sp, #0]
 801f19a:	1ac9      	subs	r1, r1, r3
 801f19c:	68e3      	ldr	r3, [r4, #12]
 801f19e:	9101      	str	r1, [sp, #4]
 801f1a0:	1ad2      	subs	r2, r2, r3
 801f1a2:	2a00      	cmp	r2, #0
 801f1a4:	9200      	str	r2, [sp, #0]
 801f1a6:	db1c      	blt.n	801f1e2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
 801f1a8:	6963      	ldr	r3, [r4, #20]
 801f1aa:	429a      	cmp	r2, r3
 801f1ac:	bfac      	ite	ge
 801f1ae:	2002      	movge	r0, #2
 801f1b0:	2000      	movlt	r0, #0
 801f1b2:	2900      	cmp	r1, #0
 801f1b4:	db17      	blt.n	801f1e6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
 801f1b6:	6923      	ldr	r3, [r4, #16]
 801f1b8:	4299      	cmp	r1, r3
 801f1ba:	bfac      	ite	ge
 801f1bc:	2308      	movge	r3, #8
 801f1be:	2300      	movlt	r3, #0
 801f1c0:	4303      	orrs	r3, r0
 801f1c2:	f894 0064 	ldrb.w	r0, [r4, #100]	; 0x64
 801f1c6:	b2dd      	uxtb	r5, r3
 801f1c8:	b978      	cbnz	r0, 801f1ea <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
 801f1ca:	f104 0020 	add.w	r0, r4, #32
 801f1ce:	f7ff fe4f 	bl	801ee70 <_ZN8touchgfx10Rasterizer6lineToEii>
 801f1d2:	9b01      	ldr	r3, [sp, #4]
 801f1d4:	65e3      	str	r3, [r4, #92]	; 0x5c
 801f1d6:	9b00      	ldr	r3, [sp, #0]
 801f1d8:	6623      	str	r3, [r4, #96]	; 0x60
 801f1da:	f884 5064 	strb.w	r5, [r4, #100]	; 0x64
 801f1de:	b002      	add	sp, #8
 801f1e0:	bd70      	pop	{r4, r5, r6, pc}
 801f1e2:	2001      	movs	r0, #1
 801f1e4:	e7e5      	b.n	801f1b2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
 801f1e6:	2304      	movs	r3, #4
 801f1e8:	e7ea      	b.n	801f1c0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
 801f1ea:	b113      	cbz	r3, 801f1f2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
 801f1ec:	ea10 0305 	ands.w	r3, r0, r5
 801f1f0:	d11d      	bne.n	801f22e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xae>
 801f1f2:	f894 3058 	ldrb.w	r3, [r4, #88]	; 0x58
 801f1f6:	f104 0620 	add.w	r6, r4, #32
 801f1fa:	e9d4 1217 	ldrd	r1, r2, [r4, #92]	; 0x5c
 801f1fe:	b193      	cbz	r3, 801f226 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa6>
 801f200:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 801f204:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 801f208:	4298      	cmp	r0, r3
 801f20a:	d802      	bhi.n	801f212 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
 801f20c:	4630      	mov	r0, r6
 801f20e:	f7ee ffcf 	bl	800e1b0 <_ZN8touchgfx7Outline6moveToEii>
 801f212:	2300      	movs	r3, #0
 801f214:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 801f218:	2301      	movs	r3, #1
 801f21a:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 801f21e:	e9dd 2100 	ldrd	r2, r1, [sp]
 801f222:	4630      	mov	r0, r6
 801f224:	e7d3      	b.n	801f1ce <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
 801f226:	4630      	mov	r0, r6
 801f228:	f7ff fe22 	bl	801ee70 <_ZN8touchgfx10Rasterizer6lineToEii>
 801f22c:	e7f7      	b.n	801f21e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9e>
 801f22e:	461d      	mov	r5, r3
 801f230:	e7cf      	b.n	801f1d2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>

0801f232 <_ZN8touchgfx6Canvas5closeEv>:
 801f232:	b538      	push	{r3, r4, r5, lr}
 801f234:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 801f238:	4604      	mov	r4, r0
 801f23a:	b993      	cbnz	r3, 801f262 <_ZN8touchgfx6Canvas5closeEv+0x30>
 801f23c:	f890 3064 	ldrb.w	r3, [r0, #100]	; 0x64
 801f240:	f890 2065 	ldrb.w	r2, [r0, #101]	; 0x65
 801f244:	4213      	tst	r3, r2
 801f246:	d10c      	bne.n	801f262 <_ZN8touchgfx6Canvas5closeEv+0x30>
 801f248:	f100 0520 	add.w	r5, r0, #32
 801f24c:	b123      	cbz	r3, 801f258 <_ZN8touchgfx6Canvas5closeEv+0x26>
 801f24e:	e9d0 1217 	ldrd	r1, r2, [r0, #92]	; 0x5c
 801f252:	4628      	mov	r0, r5
 801f254:	f7ff fe0c 	bl	801ee70 <_ZN8touchgfx10Rasterizer6lineToEii>
 801f258:	e9d4 121a 	ldrd	r1, r2, [r4, #104]	; 0x68
 801f25c:	4628      	mov	r0, r5
 801f25e:	f7ff fe07 	bl	801ee70 <_ZN8touchgfx10Rasterizer6lineToEii>
 801f262:	2300      	movs	r3, #0
 801f264:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 801f268:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
 801f26c:	4298      	cmp	r0, r3
 801f26e:	bf34      	ite	cc
 801f270:	2000      	movcc	r0, #0
 801f272:	2001      	movcs	r0, #1
 801f274:	bd38      	pop	{r3, r4, r5, pc}
	...

0801f278 <_ZN8touchgfx6Canvas6renderEh>:
 801f278:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 801f27c:	4604      	mov	r4, r0
 801f27e:	6840      	ldr	r0, [r0, #4]
 801f280:	6803      	ldr	r3, [r0, #0]
 801f282:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 801f284:	460d      	mov	r5, r1
 801f286:	4798      	blx	r3
 801f288:	fb10 f105 	smulbb	r1, r0, r5
 801f28c:	b289      	uxth	r1, r1
 801f28e:	1c4d      	adds	r5, r1, #1
 801f290:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 801f294:	122d      	asrs	r5, r5, #8
 801f296:	f000 8098 	beq.w	801f3ca <_ZN8touchgfx6Canvas6renderEh+0x152>
 801f29a:	f894 3059 	ldrb.w	r3, [r4, #89]	; 0x59
 801f29e:	2b00      	cmp	r3, #0
 801f2a0:	f000 8093 	beq.w	801f3ca <_ZN8touchgfx6Canvas6renderEh+0x152>
 801f2a4:	4620      	mov	r0, r4
 801f2a6:	f7ff ffc4 	bl	801f232 <_ZN8touchgfx6Canvas5closeEv>
 801f2aa:	4607      	mov	r7, r0
 801f2ac:	2800      	cmp	r0, #0
 801f2ae:	d043      	beq.n	801f338 <_ZN8touchgfx6Canvas6renderEh+0xc0>
 801f2b0:	6863      	ldr	r3, [r4, #4]
 801f2b2:	4e47      	ldr	r6, [pc, #284]	; (801f3d0 <_ZN8touchgfx6Canvas6renderEh+0x158>)
 801f2b4:	6a98      	ldr	r0, [r3, #40]	; 0x28
 801f2b6:	6837      	ldr	r7, [r6, #0]
 801f2b8:	6803      	ldr	r3, [r0, #0]
 801f2ba:	689b      	ldr	r3, [r3, #8]
 801f2bc:	4798      	blx	r3
 801f2be:	4601      	mov	r1, r0
 801f2c0:	4638      	mov	r0, r7
 801f2c2:	f7eb fb39 	bl	800a938 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
 801f2c6:	4607      	mov	r7, r0
 801f2c8:	f7e3 f854 	bl	8002374 <_ZN8touchgfx3HAL3lcdEv>
 801f2cc:	6803      	ldr	r3, [r0, #0]
 801f2ce:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801f2d0:	4798      	blx	r3
 801f2d2:	4680      	mov	r8, r0
 801f2d4:	f7e3 f84e 	bl	8002374 <_ZN8touchgfx3HAL3lcdEv>
 801f2d8:	6803      	ldr	r3, [r0, #0]
 801f2da:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801f2dc:	4798      	blx	r3
 801f2de:	280b      	cmp	r0, #11
 801f2e0:	d858      	bhi.n	801f394 <_ZN8touchgfx6Canvas6renderEh+0x11c>
 801f2e2:	e8df f000 	tbb	[pc, r0]
 801f2e6:	594e      	.short	0x594e
 801f2e8:	2d570669 	.word	0x2d570669
 801f2ec:	6262623d 	.word	0x6262623d
 801f2f0:	6262      	.short	0x6262
 801f2f2:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 801f2f6:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 801f2fa:	2208      	movs	r2, #8
 801f2fc:	fb91 f2f2 	sdiv	r2, r1, r2
 801f300:	fb08 2303 	mla	r3, r8, r3, r2
 801f304:	441f      	add	r7, r3
 801f306:	424b      	negs	r3, r1
 801f308:	f003 0307 	and.w	r3, r3, #7
 801f30c:	f001 0107 	and.w	r1, r1, #7
 801f310:	bf58      	it	pl
 801f312:	4259      	negpl	r1, r3
 801f314:	b2c9      	uxtb	r1, r1
 801f316:	b2ed      	uxtb	r5, r5
 801f318:	e9cd 1500 	strd	r1, r5, [sp]
 801f31c:	6860      	ldr	r0, [r4, #4]
 801f31e:	fa0f f388 	sxth.w	r3, r8
 801f322:	463a      	mov	r2, r7
 801f324:	6a81      	ldr	r1, [r0, #40]	; 0x28
 801f326:	f104 0020 	add.w	r0, r4, #32
 801f32a:	f7ff fdad 	bl	801ee88 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
 801f32e:	4607      	mov	r7, r0
 801f330:	6830      	ldr	r0, [r6, #0]
 801f332:	6803      	ldr	r3, [r0, #0]
 801f334:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801f336:	4798      	blx	r3
 801f338:	4638      	mov	r0, r7
 801f33a:	b002      	add	sp, #8
 801f33c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801f340:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 801f344:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 801f348:	2204      	movs	r2, #4
 801f34a:	fb91 f2f2 	sdiv	r2, r1, r2
 801f34e:	fb08 2303 	mla	r3, r8, r3, r2
 801f352:	441f      	add	r7, r3
 801f354:	424b      	negs	r3, r1
 801f356:	f003 0303 	and.w	r3, r3, #3
 801f35a:	f001 0103 	and.w	r1, r1, #3
 801f35e:	e7d7      	b.n	801f310 <_ZN8touchgfx6Canvas6renderEh+0x98>
 801f360:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 801f364:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 801f368:	2900      	cmp	r1, #0
 801f36a:	f04f 0202 	mov.w	r2, #2
 801f36e:	fb91 f2f2 	sdiv	r2, r1, r2
 801f372:	f001 0101 	and.w	r1, r1, #1
 801f376:	fb08 2303 	mla	r3, r8, r3, r2
 801f37a:	441f      	add	r7, r3
 801f37c:	bfb8      	it	lt
 801f37e:	4249      	neglt	r1, r1
 801f380:	e7c8      	b.n	801f314 <_ZN8touchgfx6Canvas6renderEh+0x9c>
 801f382:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 801f386:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 801f38a:	fb08 f303 	mul.w	r3, r8, r3
 801f38e:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 801f392:	441f      	add	r7, r3
 801f394:	2100      	movs	r1, #0
 801f396:	e7be      	b.n	801f316 <_ZN8touchgfx6Canvas6renderEh+0x9e>
 801f398:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 801f39c:	fb08 f203 	mul.w	r2, r8, r3
 801f3a0:	8b23      	ldrh	r3, [r4, #24]
 801f3a2:	2103      	movs	r1, #3
 801f3a4:	fb13 2301 	smlabb	r3, r3, r1, r2
 801f3a8:	e7f3      	b.n	801f392 <_ZN8touchgfx6Canvas6renderEh+0x11a>
 801f3aa:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 801f3ae:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 801f3b2:	fb08 2303 	mla	r3, r8, r3, r2
 801f3b6:	e7ec      	b.n	801f392 <_ZN8touchgfx6Canvas6renderEh+0x11a>
 801f3b8:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 801f3bc:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 801f3c0:	fb08 f303 	mul.w	r3, r8, r3
 801f3c4:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 801f3c8:	e7e3      	b.n	801f392 <_ZN8touchgfx6Canvas6renderEh+0x11a>
 801f3ca:	2701      	movs	r7, #1
 801f3cc:	e7b4      	b.n	801f338 <_ZN8touchgfx6Canvas6renderEh+0xc0>
 801f3ce:	bf00      	nop
 801f3d0:	20017458 	.word	0x20017458

0801f3d4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 801f3d4:	b513      	push	{r0, r1, r4, lr}
 801f3d6:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 801f3da:	4604      	mov	r4, r0
 801f3dc:	e9cd 2100 	strd	r2, r1, [sp]
 801f3e0:	b1a3      	cbz	r3, 801f40c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
 801f3e2:	466a      	mov	r2, sp
 801f3e4:	a901      	add	r1, sp, #4
 801f3e6:	4620      	mov	r0, r4
 801f3e8:	f7ff feb8 	bl	801f15c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 801f3ec:	68a3      	ldr	r3, [r4, #8]
 801f3ee:	9901      	ldr	r1, [sp, #4]
 801f3f0:	9a00      	ldr	r2, [sp, #0]
 801f3f2:	1ac9      	subs	r1, r1, r3
 801f3f4:	68e3      	ldr	r3, [r4, #12]
 801f3f6:	9101      	str	r1, [sp, #4]
 801f3f8:	1ad2      	subs	r2, r2, r3
 801f3fa:	2a00      	cmp	r2, #0
 801f3fc:	9200      	str	r2, [sp, #0]
 801f3fe:	da0b      	bge.n	801f418 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
 801f400:	2301      	movs	r3, #1
 801f402:	2900      	cmp	r1, #0
 801f404:	da0e      	bge.n	801f424 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
 801f406:	f043 0304 	orr.w	r3, r3, #4
 801f40a:	e013      	b.n	801f434 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
 801f40c:	f7ff ff11 	bl	801f232 <_ZN8touchgfx6Canvas5closeEv>
 801f410:	2800      	cmp	r0, #0
 801f412:	d1e6      	bne.n	801f3e2 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
 801f414:	b002      	add	sp, #8
 801f416:	bd10      	pop	{r4, pc}
 801f418:	6963      	ldr	r3, [r4, #20]
 801f41a:	429a      	cmp	r2, r3
 801f41c:	bfac      	ite	ge
 801f41e:	2302      	movge	r3, #2
 801f420:	2300      	movlt	r3, #0
 801f422:	e7ee      	b.n	801f402 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
 801f424:	6920      	ldr	r0, [r4, #16]
 801f426:	4281      	cmp	r1, r0
 801f428:	bfac      	ite	ge
 801f42a:	2008      	movge	r0, #8
 801f42c:	2000      	movlt	r0, #0
 801f42e:	4318      	orrs	r0, r3
 801f430:	b2c3      	uxtb	r3, r0
 801f432:	b158      	cbz	r0, 801f44c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
 801f434:	2201      	movs	r2, #1
 801f436:	f884 2058 	strb.w	r2, [r4, #88]	; 0x58
 801f43a:	9901      	ldr	r1, [sp, #4]
 801f43c:	9a00      	ldr	r2, [sp, #0]
 801f43e:	66a1      	str	r1, [r4, #104]	; 0x68
 801f440:	66e2      	str	r2, [r4, #108]	; 0x6c
 801f442:	e9c4 1217 	strd	r1, r2, [r4, #92]	; 0x5c
 801f446:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 801f44a:	e7e3      	b.n	801f414 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
 801f44c:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 801f450:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 801f454:	4298      	cmp	r0, r3
 801f456:	d803      	bhi.n	801f460 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
 801f458:	f104 0020 	add.w	r0, r4, #32
 801f45c:	f7ee fea8 	bl	800e1b0 <_ZN8touchgfx7Outline6moveToEii>
 801f460:	2300      	movs	r3, #0
 801f462:	2201      	movs	r2, #1
 801f464:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 801f468:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 801f46c:	e7e5      	b.n	801f43a <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

0801f46e <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 801f46e:	b570      	push	{r4, r5, r6, lr}
 801f470:	790b      	ldrb	r3, [r1, #4]
 801f472:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 801f476:	2b00      	cmp	r3, #0
 801f478:	bf0c      	ite	eq
 801f47a:	2301      	moveq	r3, #1
 801f47c:	2300      	movne	r3, #0
 801f47e:	4604      	mov	r4, r0
 801f480:	460e      	mov	r6, r1
 801f482:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 801f486:	d109      	bne.n	801f49c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 801f488:	b14d      	cbz	r5, 801f49e <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 801f48a:	7933      	ldrb	r3, [r6, #4]
 801f48c:	2b01      	cmp	r3, #1
 801f48e:	d10c      	bne.n	801f4aa <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 801f490:	6823      	ldr	r3, [r4, #0]
 801f492:	4620      	mov	r0, r4
 801f494:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 801f496:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801f49a:	4718      	bx	r3
 801f49c:	b12d      	cbz	r5, 801f4aa <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 801f49e:	6823      	ldr	r3, [r4, #0]
 801f4a0:	4620      	mov	r0, r4
 801f4a2:	695b      	ldr	r3, [r3, #20]
 801f4a4:	4798      	blx	r3
 801f4a6:	2d00      	cmp	r5, #0
 801f4a8:	d1ef      	bne.n	801f48a <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 801f4aa:	bd70      	pop	{r4, r5, r6, pc}

0801f4ac <__aeabi_atexit>:
 801f4ac:	460b      	mov	r3, r1
 801f4ae:	4601      	mov	r1, r0
 801f4b0:	4618      	mov	r0, r3
 801f4b2:	f000 b853 	b.w	801f55c <__cxa_atexit>

0801f4b6 <_ZdlPvj>:
 801f4b6:	f000 b812 	b.w	801f4de <_ZdlPv>

0801f4ba <__cxa_guard_acquire>:
 801f4ba:	6803      	ldr	r3, [r0, #0]
 801f4bc:	07db      	lsls	r3, r3, #31
 801f4be:	d406      	bmi.n	801f4ce <__cxa_guard_acquire+0x14>
 801f4c0:	7843      	ldrb	r3, [r0, #1]
 801f4c2:	b103      	cbz	r3, 801f4c6 <__cxa_guard_acquire+0xc>
 801f4c4:	deff      	udf	#255	; 0xff
 801f4c6:	2301      	movs	r3, #1
 801f4c8:	7043      	strb	r3, [r0, #1]
 801f4ca:	4618      	mov	r0, r3
 801f4cc:	4770      	bx	lr
 801f4ce:	2000      	movs	r0, #0
 801f4d0:	4770      	bx	lr

0801f4d2 <__cxa_guard_release>:
 801f4d2:	2301      	movs	r3, #1
 801f4d4:	6003      	str	r3, [r0, #0]
 801f4d6:	4770      	bx	lr

0801f4d8 <__cxa_pure_virtual>:
 801f4d8:	b508      	push	{r3, lr}
 801f4da:	f000 f80f 	bl	801f4fc <_ZSt9terminatev>

0801f4de <_ZdlPv>:
 801f4de:	f000 b989 	b.w	801f7f4 <free>

0801f4e2 <_ZN10__cxxabiv111__terminateEPFvvE>:
 801f4e2:	b508      	push	{r3, lr}
 801f4e4:	4780      	blx	r0
 801f4e6:	f000 f80e 	bl	801f506 <abort>
	...

0801f4ec <_ZSt13get_terminatev>:
 801f4ec:	4b02      	ldr	r3, [pc, #8]	; (801f4f8 <_ZSt13get_terminatev+0xc>)
 801f4ee:	6818      	ldr	r0, [r3, #0]
 801f4f0:	f3bf 8f5b 	dmb	ish
 801f4f4:	4770      	bx	lr
 801f4f6:	bf00      	nop
 801f4f8:	20000100 	.word	0x20000100

0801f4fc <_ZSt9terminatev>:
 801f4fc:	b508      	push	{r3, lr}
 801f4fe:	f7ff fff5 	bl	801f4ec <_ZSt13get_terminatev>
 801f502:	f7ff ffee 	bl	801f4e2 <_ZN10__cxxabiv111__terminateEPFvvE>

0801f506 <abort>:
 801f506:	b508      	push	{r3, lr}
 801f508:	2006      	movs	r0, #6
 801f50a:	f000 fe01 	bl	8020110 <raise>
 801f50e:	2001      	movs	r0, #1
 801f510:	f7e2 fd2a 	bl	8001f68 <_exit>

0801f514 <__assert_func>:
 801f514:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801f516:	4614      	mov	r4, r2
 801f518:	461a      	mov	r2, r3
 801f51a:	4b09      	ldr	r3, [pc, #36]	; (801f540 <__assert_func+0x2c>)
 801f51c:	681b      	ldr	r3, [r3, #0]
 801f51e:	4605      	mov	r5, r0
 801f520:	68d8      	ldr	r0, [r3, #12]
 801f522:	b14c      	cbz	r4, 801f538 <__assert_func+0x24>
 801f524:	4b07      	ldr	r3, [pc, #28]	; (801f544 <__assert_func+0x30>)
 801f526:	9100      	str	r1, [sp, #0]
 801f528:	e9cd 3401 	strd	r3, r4, [sp, #4]
 801f52c:	4906      	ldr	r1, [pc, #24]	; (801f548 <__assert_func+0x34>)
 801f52e:	462b      	mov	r3, r5
 801f530:	f000 f8fe 	bl	801f730 <fiprintf>
 801f534:	f7ff ffe7 	bl	801f506 <abort>
 801f538:	4b04      	ldr	r3, [pc, #16]	; (801f54c <__assert_func+0x38>)
 801f53a:	461c      	mov	r4, r3
 801f53c:	e7f3      	b.n	801f526 <__assert_func+0x12>
 801f53e:	bf00      	nop
 801f540:	20000104 	.word	0x20000104
 801f544:	08022f90 	.word	0x08022f90
 801f548:	08022f9d 	.word	0x08022f9d
 801f54c:	08022fcb 	.word	0x08022fcb

0801f550 <atexit>:
 801f550:	2300      	movs	r3, #0
 801f552:	4601      	mov	r1, r0
 801f554:	461a      	mov	r2, r3
 801f556:	4618      	mov	r0, r3
 801f558:	f000 bf0c 	b.w	8020374 <__register_exitproc>

0801f55c <__cxa_atexit>:
 801f55c:	b510      	push	{r4, lr}
 801f55e:	4c05      	ldr	r4, [pc, #20]	; (801f574 <__cxa_atexit+0x18>)
 801f560:	4613      	mov	r3, r2
 801f562:	b12c      	cbz	r4, 801f570 <__cxa_atexit+0x14>
 801f564:	460a      	mov	r2, r1
 801f566:	4601      	mov	r1, r0
 801f568:	2002      	movs	r0, #2
 801f56a:	f000 ff03 	bl	8020374 <__register_exitproc>
 801f56e:	bd10      	pop	{r4, pc}
 801f570:	4620      	mov	r0, r4
 801f572:	e7fc      	b.n	801f56e <__cxa_atexit+0x12>
 801f574:	08020375 	.word	0x08020375

0801f578 <__errno>:
 801f578:	4b01      	ldr	r3, [pc, #4]	; (801f580 <__errno+0x8>)
 801f57a:	6818      	ldr	r0, [r3, #0]
 801f57c:	4770      	bx	lr
 801f57e:	bf00      	nop
 801f580:	20000104 	.word	0x20000104

0801f584 <std>:
 801f584:	2300      	movs	r3, #0
 801f586:	b510      	push	{r4, lr}
 801f588:	4604      	mov	r4, r0
 801f58a:	e9c0 3300 	strd	r3, r3, [r0]
 801f58e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 801f592:	6083      	str	r3, [r0, #8]
 801f594:	8181      	strh	r1, [r0, #12]
 801f596:	6643      	str	r3, [r0, #100]	; 0x64
 801f598:	81c2      	strh	r2, [r0, #14]
 801f59a:	6183      	str	r3, [r0, #24]
 801f59c:	4619      	mov	r1, r3
 801f59e:	2208      	movs	r2, #8
 801f5a0:	305c      	adds	r0, #92	; 0x5c
 801f5a2:	f000 f93d 	bl	801f820 <memset>
 801f5a6:	4b05      	ldr	r3, [pc, #20]	; (801f5bc <std+0x38>)
 801f5a8:	6263      	str	r3, [r4, #36]	; 0x24
 801f5aa:	4b05      	ldr	r3, [pc, #20]	; (801f5c0 <std+0x3c>)
 801f5ac:	62a3      	str	r3, [r4, #40]	; 0x28
 801f5ae:	4b05      	ldr	r3, [pc, #20]	; (801f5c4 <std+0x40>)
 801f5b0:	62e3      	str	r3, [r4, #44]	; 0x2c
 801f5b2:	4b05      	ldr	r3, [pc, #20]	; (801f5c8 <std+0x44>)
 801f5b4:	6224      	str	r4, [r4, #32]
 801f5b6:	6323      	str	r3, [r4, #48]	; 0x30
 801f5b8:	bd10      	pop	{r4, pc}
 801f5ba:	bf00      	nop
 801f5bc:	08020149 	.word	0x08020149
 801f5c0:	0802016b 	.word	0x0802016b
 801f5c4:	080201a3 	.word	0x080201a3
 801f5c8:	080201c7 	.word	0x080201c7

0801f5cc <_cleanup_r>:
 801f5cc:	4901      	ldr	r1, [pc, #4]	; (801f5d4 <_cleanup_r+0x8>)
 801f5ce:	f000 b8c1 	b.w	801f754 <_fwalk_reent>
 801f5d2:	bf00      	nop
 801f5d4:	08020565 	.word	0x08020565

0801f5d8 <__sfmoreglue>:
 801f5d8:	b570      	push	{r4, r5, r6, lr}
 801f5da:	2268      	movs	r2, #104	; 0x68
 801f5dc:	1e4d      	subs	r5, r1, #1
 801f5de:	4355      	muls	r5, r2
 801f5e0:	460e      	mov	r6, r1
 801f5e2:	f105 0174 	add.w	r1, r5, #116	; 0x74
 801f5e6:	f000 f98f 	bl	801f908 <_malloc_r>
 801f5ea:	4604      	mov	r4, r0
 801f5ec:	b140      	cbz	r0, 801f600 <__sfmoreglue+0x28>
 801f5ee:	2100      	movs	r1, #0
 801f5f0:	e9c0 1600 	strd	r1, r6, [r0]
 801f5f4:	300c      	adds	r0, #12
 801f5f6:	60a0      	str	r0, [r4, #8]
 801f5f8:	f105 0268 	add.w	r2, r5, #104	; 0x68
 801f5fc:	f000 f910 	bl	801f820 <memset>
 801f600:	4620      	mov	r0, r4
 801f602:	bd70      	pop	{r4, r5, r6, pc}

0801f604 <__sfp_lock_acquire>:
 801f604:	4801      	ldr	r0, [pc, #4]	; (801f60c <__sfp_lock_acquire+0x8>)
 801f606:	f000 b8ea 	b.w	801f7de <__retarget_lock_acquire_recursive>
 801f60a:	bf00      	nop
 801f60c:	2001755e 	.word	0x2001755e

0801f610 <__sfp_lock_release>:
 801f610:	4801      	ldr	r0, [pc, #4]	; (801f618 <__sfp_lock_release+0x8>)
 801f612:	f000 b8e6 	b.w	801f7e2 <__retarget_lock_release_recursive>
 801f616:	bf00      	nop
 801f618:	2001755e 	.word	0x2001755e

0801f61c <__sinit_lock_acquire>:
 801f61c:	4801      	ldr	r0, [pc, #4]	; (801f624 <__sinit_lock_acquire+0x8>)
 801f61e:	f000 b8de 	b.w	801f7de <__retarget_lock_acquire_recursive>
 801f622:	bf00      	nop
 801f624:	2001755f 	.word	0x2001755f

0801f628 <__sinit_lock_release>:
 801f628:	4801      	ldr	r0, [pc, #4]	; (801f630 <__sinit_lock_release+0x8>)
 801f62a:	f000 b8da 	b.w	801f7e2 <__retarget_lock_release_recursive>
 801f62e:	bf00      	nop
 801f630:	2001755f 	.word	0x2001755f

0801f634 <__sinit>:
 801f634:	b510      	push	{r4, lr}
 801f636:	4604      	mov	r4, r0
 801f638:	f7ff fff0 	bl	801f61c <__sinit_lock_acquire>
 801f63c:	69a3      	ldr	r3, [r4, #24]
 801f63e:	b11b      	cbz	r3, 801f648 <__sinit+0x14>
 801f640:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801f644:	f7ff bff0 	b.w	801f628 <__sinit_lock_release>
 801f648:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 801f64c:	6523      	str	r3, [r4, #80]	; 0x50
 801f64e:	4b13      	ldr	r3, [pc, #76]	; (801f69c <__sinit+0x68>)
 801f650:	4a13      	ldr	r2, [pc, #76]	; (801f6a0 <__sinit+0x6c>)
 801f652:	681b      	ldr	r3, [r3, #0]
 801f654:	62a2      	str	r2, [r4, #40]	; 0x28
 801f656:	42a3      	cmp	r3, r4
 801f658:	bf04      	itt	eq
 801f65a:	2301      	moveq	r3, #1
 801f65c:	61a3      	streq	r3, [r4, #24]
 801f65e:	4620      	mov	r0, r4
 801f660:	f000 f820 	bl	801f6a4 <__sfp>
 801f664:	6060      	str	r0, [r4, #4]
 801f666:	4620      	mov	r0, r4
 801f668:	f000 f81c 	bl	801f6a4 <__sfp>
 801f66c:	60a0      	str	r0, [r4, #8]
 801f66e:	4620      	mov	r0, r4
 801f670:	f000 f818 	bl	801f6a4 <__sfp>
 801f674:	2200      	movs	r2, #0
 801f676:	60e0      	str	r0, [r4, #12]
 801f678:	2104      	movs	r1, #4
 801f67a:	6860      	ldr	r0, [r4, #4]
 801f67c:	f7ff ff82 	bl	801f584 <std>
 801f680:	68a0      	ldr	r0, [r4, #8]
 801f682:	2201      	movs	r2, #1
 801f684:	2109      	movs	r1, #9
 801f686:	f7ff ff7d 	bl	801f584 <std>
 801f68a:	68e0      	ldr	r0, [r4, #12]
 801f68c:	2202      	movs	r2, #2
 801f68e:	2112      	movs	r1, #18
 801f690:	f7ff ff78 	bl	801f584 <std>
 801f694:	2301      	movs	r3, #1
 801f696:	61a3      	str	r3, [r4, #24]
 801f698:	e7d2      	b.n	801f640 <__sinit+0xc>
 801f69a:	bf00      	nop
 801f69c:	0802302c 	.word	0x0802302c
 801f6a0:	0801f5cd 	.word	0x0801f5cd

0801f6a4 <__sfp>:
 801f6a4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801f6a6:	4607      	mov	r7, r0
 801f6a8:	f7ff ffac 	bl	801f604 <__sfp_lock_acquire>
 801f6ac:	4b1e      	ldr	r3, [pc, #120]	; (801f728 <__sfp+0x84>)
 801f6ae:	681e      	ldr	r6, [r3, #0]
 801f6b0:	69b3      	ldr	r3, [r6, #24]
 801f6b2:	b913      	cbnz	r3, 801f6ba <__sfp+0x16>
 801f6b4:	4630      	mov	r0, r6
 801f6b6:	f7ff ffbd 	bl	801f634 <__sinit>
 801f6ba:	3648      	adds	r6, #72	; 0x48
 801f6bc:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 801f6c0:	3b01      	subs	r3, #1
 801f6c2:	d503      	bpl.n	801f6cc <__sfp+0x28>
 801f6c4:	6833      	ldr	r3, [r6, #0]
 801f6c6:	b30b      	cbz	r3, 801f70c <__sfp+0x68>
 801f6c8:	6836      	ldr	r6, [r6, #0]
 801f6ca:	e7f7      	b.n	801f6bc <__sfp+0x18>
 801f6cc:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 801f6d0:	b9d5      	cbnz	r5, 801f708 <__sfp+0x64>
 801f6d2:	4b16      	ldr	r3, [pc, #88]	; (801f72c <__sfp+0x88>)
 801f6d4:	60e3      	str	r3, [r4, #12]
 801f6d6:	f104 0058 	add.w	r0, r4, #88	; 0x58
 801f6da:	6665      	str	r5, [r4, #100]	; 0x64
 801f6dc:	f000 f87e 	bl	801f7dc <__retarget_lock_init_recursive>
 801f6e0:	f7ff ff96 	bl	801f610 <__sfp_lock_release>
 801f6e4:	e9c4 5501 	strd	r5, r5, [r4, #4]
 801f6e8:	e9c4 5504 	strd	r5, r5, [r4, #16]
 801f6ec:	6025      	str	r5, [r4, #0]
 801f6ee:	61a5      	str	r5, [r4, #24]
 801f6f0:	2208      	movs	r2, #8
 801f6f2:	4629      	mov	r1, r5
 801f6f4:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 801f6f8:	f000 f892 	bl	801f820 <memset>
 801f6fc:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 801f700:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 801f704:	4620      	mov	r0, r4
 801f706:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801f708:	3468      	adds	r4, #104	; 0x68
 801f70a:	e7d9      	b.n	801f6c0 <__sfp+0x1c>
 801f70c:	2104      	movs	r1, #4
 801f70e:	4638      	mov	r0, r7
 801f710:	f7ff ff62 	bl	801f5d8 <__sfmoreglue>
 801f714:	4604      	mov	r4, r0
 801f716:	6030      	str	r0, [r6, #0]
 801f718:	2800      	cmp	r0, #0
 801f71a:	d1d5      	bne.n	801f6c8 <__sfp+0x24>
 801f71c:	f7ff ff78 	bl	801f610 <__sfp_lock_release>
 801f720:	230c      	movs	r3, #12
 801f722:	603b      	str	r3, [r7, #0]
 801f724:	e7ee      	b.n	801f704 <__sfp+0x60>
 801f726:	bf00      	nop
 801f728:	0802302c 	.word	0x0802302c
 801f72c:	ffff0001 	.word	0xffff0001

0801f730 <fiprintf>:
 801f730:	b40e      	push	{r1, r2, r3}
 801f732:	b503      	push	{r0, r1, lr}
 801f734:	4601      	mov	r1, r0
 801f736:	ab03      	add	r3, sp, #12
 801f738:	4805      	ldr	r0, [pc, #20]	; (801f750 <fiprintf+0x20>)
 801f73a:	f853 2b04 	ldr.w	r2, [r3], #4
 801f73e:	6800      	ldr	r0, [r0, #0]
 801f740:	9301      	str	r3, [sp, #4]
 801f742:	f000 f97f 	bl	801fa44 <_vfiprintf_r>
 801f746:	b002      	add	sp, #8
 801f748:	f85d eb04 	ldr.w	lr, [sp], #4
 801f74c:	b003      	add	sp, #12
 801f74e:	4770      	bx	lr
 801f750:	20000104 	.word	0x20000104

0801f754 <_fwalk_reent>:
 801f754:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801f758:	4606      	mov	r6, r0
 801f75a:	4688      	mov	r8, r1
 801f75c:	f100 0448 	add.w	r4, r0, #72	; 0x48
 801f760:	2700      	movs	r7, #0
 801f762:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 801f766:	f1b9 0901 	subs.w	r9, r9, #1
 801f76a:	d505      	bpl.n	801f778 <_fwalk_reent+0x24>
 801f76c:	6824      	ldr	r4, [r4, #0]
 801f76e:	2c00      	cmp	r4, #0
 801f770:	d1f7      	bne.n	801f762 <_fwalk_reent+0xe>
 801f772:	4638      	mov	r0, r7
 801f774:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801f778:	89ab      	ldrh	r3, [r5, #12]
 801f77a:	2b01      	cmp	r3, #1
 801f77c:	d907      	bls.n	801f78e <_fwalk_reent+0x3a>
 801f77e:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 801f782:	3301      	adds	r3, #1
 801f784:	d003      	beq.n	801f78e <_fwalk_reent+0x3a>
 801f786:	4629      	mov	r1, r5
 801f788:	4630      	mov	r0, r6
 801f78a:	47c0      	blx	r8
 801f78c:	4307      	orrs	r7, r0
 801f78e:	3568      	adds	r5, #104	; 0x68
 801f790:	e7e9      	b.n	801f766 <_fwalk_reent+0x12>
	...

0801f794 <__libc_init_array>:
 801f794:	b570      	push	{r4, r5, r6, lr}
 801f796:	4d0d      	ldr	r5, [pc, #52]	; (801f7cc <__libc_init_array+0x38>)
 801f798:	4c0d      	ldr	r4, [pc, #52]	; (801f7d0 <__libc_init_array+0x3c>)
 801f79a:	1b64      	subs	r4, r4, r5
 801f79c:	10a4      	asrs	r4, r4, #2
 801f79e:	2600      	movs	r6, #0
 801f7a0:	42a6      	cmp	r6, r4
 801f7a2:	d109      	bne.n	801f7b8 <__libc_init_array+0x24>
 801f7a4:	4d0b      	ldr	r5, [pc, #44]	; (801f7d4 <__libc_init_array+0x40>)
 801f7a6:	4c0c      	ldr	r4, [pc, #48]	; (801f7d8 <__libc_init_array+0x44>)
 801f7a8:	f000 ffd0 	bl	802074c <_init>
 801f7ac:	1b64      	subs	r4, r4, r5
 801f7ae:	10a4      	asrs	r4, r4, #2
 801f7b0:	2600      	movs	r6, #0
 801f7b2:	42a6      	cmp	r6, r4
 801f7b4:	d105      	bne.n	801f7c2 <__libc_init_array+0x2e>
 801f7b6:	bd70      	pop	{r4, r5, r6, pc}
 801f7b8:	f855 3b04 	ldr.w	r3, [r5], #4
 801f7bc:	4798      	blx	r3
 801f7be:	3601      	adds	r6, #1
 801f7c0:	e7ee      	b.n	801f7a0 <__libc_init_array+0xc>
 801f7c2:	f855 3b04 	ldr.w	r3, [r5], #4
 801f7c6:	4798      	blx	r3
 801f7c8:	3601      	adds	r6, #1
 801f7ca:	e7f2      	b.n	801f7b2 <__libc_init_array+0x1e>
 801f7cc:	0806384c 	.word	0x0806384c
 801f7d0:	0806384c 	.word	0x0806384c
 801f7d4:	0806384c 	.word	0x0806384c
 801f7d8:	08063860 	.word	0x08063860

0801f7dc <__retarget_lock_init_recursive>:
 801f7dc:	4770      	bx	lr

0801f7de <__retarget_lock_acquire_recursive>:
 801f7de:	4770      	bx	lr

0801f7e0 <__retarget_lock_release>:
 801f7e0:	4770      	bx	lr

0801f7e2 <__retarget_lock_release_recursive>:
 801f7e2:	4770      	bx	lr

0801f7e4 <malloc>:
 801f7e4:	4b02      	ldr	r3, [pc, #8]	; (801f7f0 <malloc+0xc>)
 801f7e6:	4601      	mov	r1, r0
 801f7e8:	6818      	ldr	r0, [r3, #0]
 801f7ea:	f000 b88d 	b.w	801f908 <_malloc_r>
 801f7ee:	bf00      	nop
 801f7f0:	20000104 	.word	0x20000104

0801f7f4 <free>:
 801f7f4:	4b02      	ldr	r3, [pc, #8]	; (801f800 <free+0xc>)
 801f7f6:	4601      	mov	r1, r0
 801f7f8:	6818      	ldr	r0, [r3, #0]
 801f7fa:	f000 b819 	b.w	801f830 <_free_r>
 801f7fe:	bf00      	nop
 801f800:	20000104 	.word	0x20000104

0801f804 <memcpy>:
 801f804:	440a      	add	r2, r1
 801f806:	4291      	cmp	r1, r2
 801f808:	f100 33ff 	add.w	r3, r0, #4294967295
 801f80c:	d100      	bne.n	801f810 <memcpy+0xc>
 801f80e:	4770      	bx	lr
 801f810:	b510      	push	{r4, lr}
 801f812:	f811 4b01 	ldrb.w	r4, [r1], #1
 801f816:	f803 4f01 	strb.w	r4, [r3, #1]!
 801f81a:	4291      	cmp	r1, r2
 801f81c:	d1f9      	bne.n	801f812 <memcpy+0xe>
 801f81e:	bd10      	pop	{r4, pc}

0801f820 <memset>:
 801f820:	4402      	add	r2, r0
 801f822:	4603      	mov	r3, r0
 801f824:	4293      	cmp	r3, r2
 801f826:	d100      	bne.n	801f82a <memset+0xa>
 801f828:	4770      	bx	lr
 801f82a:	f803 1b01 	strb.w	r1, [r3], #1
 801f82e:	e7f9      	b.n	801f824 <memset+0x4>

0801f830 <_free_r>:
 801f830:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801f832:	2900      	cmp	r1, #0
 801f834:	d044      	beq.n	801f8c0 <_free_r+0x90>
 801f836:	f851 3c04 	ldr.w	r3, [r1, #-4]
 801f83a:	9001      	str	r0, [sp, #4]
 801f83c:	2b00      	cmp	r3, #0
 801f83e:	f1a1 0404 	sub.w	r4, r1, #4
 801f842:	bfb8      	it	lt
 801f844:	18e4      	addlt	r4, r4, r3
 801f846:	f000 ff41 	bl	80206cc <__malloc_lock>
 801f84a:	4a1e      	ldr	r2, [pc, #120]	; (801f8c4 <_free_r+0x94>)
 801f84c:	9801      	ldr	r0, [sp, #4]
 801f84e:	6813      	ldr	r3, [r2, #0]
 801f850:	b933      	cbnz	r3, 801f860 <_free_r+0x30>
 801f852:	6063      	str	r3, [r4, #4]
 801f854:	6014      	str	r4, [r2, #0]
 801f856:	b003      	add	sp, #12
 801f858:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 801f85c:	f000 bf3c 	b.w	80206d8 <__malloc_unlock>
 801f860:	42a3      	cmp	r3, r4
 801f862:	d908      	bls.n	801f876 <_free_r+0x46>
 801f864:	6825      	ldr	r5, [r4, #0]
 801f866:	1961      	adds	r1, r4, r5
 801f868:	428b      	cmp	r3, r1
 801f86a:	bf01      	itttt	eq
 801f86c:	6819      	ldreq	r1, [r3, #0]
 801f86e:	685b      	ldreq	r3, [r3, #4]
 801f870:	1949      	addeq	r1, r1, r5
 801f872:	6021      	streq	r1, [r4, #0]
 801f874:	e7ed      	b.n	801f852 <_free_r+0x22>
 801f876:	461a      	mov	r2, r3
 801f878:	685b      	ldr	r3, [r3, #4]
 801f87a:	b10b      	cbz	r3, 801f880 <_free_r+0x50>
 801f87c:	42a3      	cmp	r3, r4
 801f87e:	d9fa      	bls.n	801f876 <_free_r+0x46>
 801f880:	6811      	ldr	r1, [r2, #0]
 801f882:	1855      	adds	r5, r2, r1
 801f884:	42a5      	cmp	r5, r4
 801f886:	d10b      	bne.n	801f8a0 <_free_r+0x70>
 801f888:	6824      	ldr	r4, [r4, #0]
 801f88a:	4421      	add	r1, r4
 801f88c:	1854      	adds	r4, r2, r1
 801f88e:	42a3      	cmp	r3, r4
 801f890:	6011      	str	r1, [r2, #0]
 801f892:	d1e0      	bne.n	801f856 <_free_r+0x26>
 801f894:	681c      	ldr	r4, [r3, #0]
 801f896:	685b      	ldr	r3, [r3, #4]
 801f898:	6053      	str	r3, [r2, #4]
 801f89a:	4421      	add	r1, r4
 801f89c:	6011      	str	r1, [r2, #0]
 801f89e:	e7da      	b.n	801f856 <_free_r+0x26>
 801f8a0:	d902      	bls.n	801f8a8 <_free_r+0x78>
 801f8a2:	230c      	movs	r3, #12
 801f8a4:	6003      	str	r3, [r0, #0]
 801f8a6:	e7d6      	b.n	801f856 <_free_r+0x26>
 801f8a8:	6825      	ldr	r5, [r4, #0]
 801f8aa:	1961      	adds	r1, r4, r5
 801f8ac:	428b      	cmp	r3, r1
 801f8ae:	bf04      	itt	eq
 801f8b0:	6819      	ldreq	r1, [r3, #0]
 801f8b2:	685b      	ldreq	r3, [r3, #4]
 801f8b4:	6063      	str	r3, [r4, #4]
 801f8b6:	bf04      	itt	eq
 801f8b8:	1949      	addeq	r1, r1, r5
 801f8ba:	6021      	streq	r1, [r4, #0]
 801f8bc:	6054      	str	r4, [r2, #4]
 801f8be:	e7ca      	b.n	801f856 <_free_r+0x26>
 801f8c0:	b003      	add	sp, #12
 801f8c2:	bd30      	pop	{r4, r5, pc}
 801f8c4:	20017560 	.word	0x20017560

0801f8c8 <sbrk_aligned>:
 801f8c8:	b570      	push	{r4, r5, r6, lr}
 801f8ca:	4e0e      	ldr	r6, [pc, #56]	; (801f904 <sbrk_aligned+0x3c>)
 801f8cc:	460c      	mov	r4, r1
 801f8ce:	6831      	ldr	r1, [r6, #0]
 801f8d0:	4605      	mov	r5, r0
 801f8d2:	b911      	cbnz	r1, 801f8da <sbrk_aligned+0x12>
 801f8d4:	f000 fbe4 	bl	80200a0 <_sbrk_r>
 801f8d8:	6030      	str	r0, [r6, #0]
 801f8da:	4621      	mov	r1, r4
 801f8dc:	4628      	mov	r0, r5
 801f8de:	f000 fbdf 	bl	80200a0 <_sbrk_r>
 801f8e2:	1c43      	adds	r3, r0, #1
 801f8e4:	d00a      	beq.n	801f8fc <sbrk_aligned+0x34>
 801f8e6:	1cc4      	adds	r4, r0, #3
 801f8e8:	f024 0403 	bic.w	r4, r4, #3
 801f8ec:	42a0      	cmp	r0, r4
 801f8ee:	d007      	beq.n	801f900 <sbrk_aligned+0x38>
 801f8f0:	1a21      	subs	r1, r4, r0
 801f8f2:	4628      	mov	r0, r5
 801f8f4:	f000 fbd4 	bl	80200a0 <_sbrk_r>
 801f8f8:	3001      	adds	r0, #1
 801f8fa:	d101      	bne.n	801f900 <sbrk_aligned+0x38>
 801f8fc:	f04f 34ff 	mov.w	r4, #4294967295
 801f900:	4620      	mov	r0, r4
 801f902:	bd70      	pop	{r4, r5, r6, pc}
 801f904:	20017564 	.word	0x20017564

0801f908 <_malloc_r>:
 801f908:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801f90c:	1ccd      	adds	r5, r1, #3
 801f90e:	f025 0503 	bic.w	r5, r5, #3
 801f912:	3508      	adds	r5, #8
 801f914:	2d0c      	cmp	r5, #12
 801f916:	bf38      	it	cc
 801f918:	250c      	movcc	r5, #12
 801f91a:	2d00      	cmp	r5, #0
 801f91c:	4607      	mov	r7, r0
 801f91e:	db01      	blt.n	801f924 <_malloc_r+0x1c>
 801f920:	42a9      	cmp	r1, r5
 801f922:	d905      	bls.n	801f930 <_malloc_r+0x28>
 801f924:	230c      	movs	r3, #12
 801f926:	603b      	str	r3, [r7, #0]
 801f928:	2600      	movs	r6, #0
 801f92a:	4630      	mov	r0, r6
 801f92c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801f930:	4e2e      	ldr	r6, [pc, #184]	; (801f9ec <_malloc_r+0xe4>)
 801f932:	f000 fecb 	bl	80206cc <__malloc_lock>
 801f936:	6833      	ldr	r3, [r6, #0]
 801f938:	461c      	mov	r4, r3
 801f93a:	bb34      	cbnz	r4, 801f98a <_malloc_r+0x82>
 801f93c:	4629      	mov	r1, r5
 801f93e:	4638      	mov	r0, r7
 801f940:	f7ff ffc2 	bl	801f8c8 <sbrk_aligned>
 801f944:	1c43      	adds	r3, r0, #1
 801f946:	4604      	mov	r4, r0
 801f948:	d14d      	bne.n	801f9e6 <_malloc_r+0xde>
 801f94a:	6834      	ldr	r4, [r6, #0]
 801f94c:	4626      	mov	r6, r4
 801f94e:	2e00      	cmp	r6, #0
 801f950:	d140      	bne.n	801f9d4 <_malloc_r+0xcc>
 801f952:	6823      	ldr	r3, [r4, #0]
 801f954:	4631      	mov	r1, r6
 801f956:	4638      	mov	r0, r7
 801f958:	eb04 0803 	add.w	r8, r4, r3
 801f95c:	f000 fba0 	bl	80200a0 <_sbrk_r>
 801f960:	4580      	cmp	r8, r0
 801f962:	d13a      	bne.n	801f9da <_malloc_r+0xd2>
 801f964:	6821      	ldr	r1, [r4, #0]
 801f966:	3503      	adds	r5, #3
 801f968:	1a6d      	subs	r5, r5, r1
 801f96a:	f025 0503 	bic.w	r5, r5, #3
 801f96e:	3508      	adds	r5, #8
 801f970:	2d0c      	cmp	r5, #12
 801f972:	bf38      	it	cc
 801f974:	250c      	movcc	r5, #12
 801f976:	4629      	mov	r1, r5
 801f978:	4638      	mov	r0, r7
 801f97a:	f7ff ffa5 	bl	801f8c8 <sbrk_aligned>
 801f97e:	3001      	adds	r0, #1
 801f980:	d02b      	beq.n	801f9da <_malloc_r+0xd2>
 801f982:	6823      	ldr	r3, [r4, #0]
 801f984:	442b      	add	r3, r5
 801f986:	6023      	str	r3, [r4, #0]
 801f988:	e00e      	b.n	801f9a8 <_malloc_r+0xa0>
 801f98a:	6822      	ldr	r2, [r4, #0]
 801f98c:	1b52      	subs	r2, r2, r5
 801f98e:	d41e      	bmi.n	801f9ce <_malloc_r+0xc6>
 801f990:	2a0b      	cmp	r2, #11
 801f992:	d916      	bls.n	801f9c2 <_malloc_r+0xba>
 801f994:	1961      	adds	r1, r4, r5
 801f996:	42a3      	cmp	r3, r4
 801f998:	6025      	str	r5, [r4, #0]
 801f99a:	bf18      	it	ne
 801f99c:	6059      	strne	r1, [r3, #4]
 801f99e:	6863      	ldr	r3, [r4, #4]
 801f9a0:	bf08      	it	eq
 801f9a2:	6031      	streq	r1, [r6, #0]
 801f9a4:	5162      	str	r2, [r4, r5]
 801f9a6:	604b      	str	r3, [r1, #4]
 801f9a8:	4638      	mov	r0, r7
 801f9aa:	f104 060b 	add.w	r6, r4, #11
 801f9ae:	f000 fe93 	bl	80206d8 <__malloc_unlock>
 801f9b2:	f026 0607 	bic.w	r6, r6, #7
 801f9b6:	1d23      	adds	r3, r4, #4
 801f9b8:	1af2      	subs	r2, r6, r3
 801f9ba:	d0b6      	beq.n	801f92a <_malloc_r+0x22>
 801f9bc:	1b9b      	subs	r3, r3, r6
 801f9be:	50a3      	str	r3, [r4, r2]
 801f9c0:	e7b3      	b.n	801f92a <_malloc_r+0x22>
 801f9c2:	6862      	ldr	r2, [r4, #4]
 801f9c4:	42a3      	cmp	r3, r4
 801f9c6:	bf0c      	ite	eq
 801f9c8:	6032      	streq	r2, [r6, #0]
 801f9ca:	605a      	strne	r2, [r3, #4]
 801f9cc:	e7ec      	b.n	801f9a8 <_malloc_r+0xa0>
 801f9ce:	4623      	mov	r3, r4
 801f9d0:	6864      	ldr	r4, [r4, #4]
 801f9d2:	e7b2      	b.n	801f93a <_malloc_r+0x32>
 801f9d4:	4634      	mov	r4, r6
 801f9d6:	6876      	ldr	r6, [r6, #4]
 801f9d8:	e7b9      	b.n	801f94e <_malloc_r+0x46>
 801f9da:	230c      	movs	r3, #12
 801f9dc:	603b      	str	r3, [r7, #0]
 801f9de:	4638      	mov	r0, r7
 801f9e0:	f000 fe7a 	bl	80206d8 <__malloc_unlock>
 801f9e4:	e7a1      	b.n	801f92a <_malloc_r+0x22>
 801f9e6:	6025      	str	r5, [r4, #0]
 801f9e8:	e7de      	b.n	801f9a8 <_malloc_r+0xa0>
 801f9ea:	bf00      	nop
 801f9ec:	20017560 	.word	0x20017560

0801f9f0 <__sfputc_r>:
 801f9f0:	6893      	ldr	r3, [r2, #8]
 801f9f2:	3b01      	subs	r3, #1
 801f9f4:	2b00      	cmp	r3, #0
 801f9f6:	b410      	push	{r4}
 801f9f8:	6093      	str	r3, [r2, #8]
 801f9fa:	da08      	bge.n	801fa0e <__sfputc_r+0x1e>
 801f9fc:	6994      	ldr	r4, [r2, #24]
 801f9fe:	42a3      	cmp	r3, r4
 801fa00:	db01      	blt.n	801fa06 <__sfputc_r+0x16>
 801fa02:	290a      	cmp	r1, #10
 801fa04:	d103      	bne.n	801fa0e <__sfputc_r+0x1e>
 801fa06:	f85d 4b04 	ldr.w	r4, [sp], #4
 801fa0a:	f000 bbe1 	b.w	80201d0 <__swbuf_r>
 801fa0e:	6813      	ldr	r3, [r2, #0]
 801fa10:	1c58      	adds	r0, r3, #1
 801fa12:	6010      	str	r0, [r2, #0]
 801fa14:	7019      	strb	r1, [r3, #0]
 801fa16:	4608      	mov	r0, r1
 801fa18:	f85d 4b04 	ldr.w	r4, [sp], #4
 801fa1c:	4770      	bx	lr

0801fa1e <__sfputs_r>:
 801fa1e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801fa20:	4606      	mov	r6, r0
 801fa22:	460f      	mov	r7, r1
 801fa24:	4614      	mov	r4, r2
 801fa26:	18d5      	adds	r5, r2, r3
 801fa28:	42ac      	cmp	r4, r5
 801fa2a:	d101      	bne.n	801fa30 <__sfputs_r+0x12>
 801fa2c:	2000      	movs	r0, #0
 801fa2e:	e007      	b.n	801fa40 <__sfputs_r+0x22>
 801fa30:	f814 1b01 	ldrb.w	r1, [r4], #1
 801fa34:	463a      	mov	r2, r7
 801fa36:	4630      	mov	r0, r6
 801fa38:	f7ff ffda 	bl	801f9f0 <__sfputc_r>
 801fa3c:	1c43      	adds	r3, r0, #1
 801fa3e:	d1f3      	bne.n	801fa28 <__sfputs_r+0xa>
 801fa40:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0801fa44 <_vfiprintf_r>:
 801fa44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fa48:	460d      	mov	r5, r1
 801fa4a:	b09d      	sub	sp, #116	; 0x74
 801fa4c:	4614      	mov	r4, r2
 801fa4e:	4698      	mov	r8, r3
 801fa50:	4606      	mov	r6, r0
 801fa52:	b118      	cbz	r0, 801fa5c <_vfiprintf_r+0x18>
 801fa54:	6983      	ldr	r3, [r0, #24]
 801fa56:	b90b      	cbnz	r3, 801fa5c <_vfiprintf_r+0x18>
 801fa58:	f7ff fdec 	bl	801f634 <__sinit>
 801fa5c:	4b89      	ldr	r3, [pc, #548]	; (801fc84 <_vfiprintf_r+0x240>)
 801fa5e:	429d      	cmp	r5, r3
 801fa60:	d11b      	bne.n	801fa9a <_vfiprintf_r+0x56>
 801fa62:	6875      	ldr	r5, [r6, #4]
 801fa64:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 801fa66:	07d9      	lsls	r1, r3, #31
 801fa68:	d405      	bmi.n	801fa76 <_vfiprintf_r+0x32>
 801fa6a:	89ab      	ldrh	r3, [r5, #12]
 801fa6c:	059a      	lsls	r2, r3, #22
 801fa6e:	d402      	bmi.n	801fa76 <_vfiprintf_r+0x32>
 801fa70:	6da8      	ldr	r0, [r5, #88]	; 0x58
 801fa72:	f7ff feb4 	bl	801f7de <__retarget_lock_acquire_recursive>
 801fa76:	89ab      	ldrh	r3, [r5, #12]
 801fa78:	071b      	lsls	r3, r3, #28
 801fa7a:	d501      	bpl.n	801fa80 <_vfiprintf_r+0x3c>
 801fa7c:	692b      	ldr	r3, [r5, #16]
 801fa7e:	b9eb      	cbnz	r3, 801fabc <_vfiprintf_r+0x78>
 801fa80:	4629      	mov	r1, r5
 801fa82:	4630      	mov	r0, r6
 801fa84:	f000 fc08 	bl	8020298 <__swsetup_r>
 801fa88:	b1c0      	cbz	r0, 801fabc <_vfiprintf_r+0x78>
 801fa8a:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 801fa8c:	07dc      	lsls	r4, r3, #31
 801fa8e:	d50e      	bpl.n	801faae <_vfiprintf_r+0x6a>
 801fa90:	f04f 30ff 	mov.w	r0, #4294967295
 801fa94:	b01d      	add	sp, #116	; 0x74
 801fa96:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fa9a:	4b7b      	ldr	r3, [pc, #492]	; (801fc88 <_vfiprintf_r+0x244>)
 801fa9c:	429d      	cmp	r5, r3
 801fa9e:	d101      	bne.n	801faa4 <_vfiprintf_r+0x60>
 801faa0:	68b5      	ldr	r5, [r6, #8]
 801faa2:	e7df      	b.n	801fa64 <_vfiprintf_r+0x20>
 801faa4:	4b79      	ldr	r3, [pc, #484]	; (801fc8c <_vfiprintf_r+0x248>)
 801faa6:	429d      	cmp	r5, r3
 801faa8:	bf08      	it	eq
 801faaa:	68f5      	ldreq	r5, [r6, #12]
 801faac:	e7da      	b.n	801fa64 <_vfiprintf_r+0x20>
 801faae:	89ab      	ldrh	r3, [r5, #12]
 801fab0:	0598      	lsls	r0, r3, #22
 801fab2:	d4ed      	bmi.n	801fa90 <_vfiprintf_r+0x4c>
 801fab4:	6da8      	ldr	r0, [r5, #88]	; 0x58
 801fab6:	f7ff fe94 	bl	801f7e2 <__retarget_lock_release_recursive>
 801faba:	e7e9      	b.n	801fa90 <_vfiprintf_r+0x4c>
 801fabc:	2300      	movs	r3, #0
 801fabe:	9309      	str	r3, [sp, #36]	; 0x24
 801fac0:	2320      	movs	r3, #32
 801fac2:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 801fac6:	f8cd 800c 	str.w	r8, [sp, #12]
 801faca:	2330      	movs	r3, #48	; 0x30
 801facc:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 801fc90 <_vfiprintf_r+0x24c>
 801fad0:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 801fad4:	f04f 0901 	mov.w	r9, #1
 801fad8:	4623      	mov	r3, r4
 801fada:	469a      	mov	sl, r3
 801fadc:	f813 2b01 	ldrb.w	r2, [r3], #1
 801fae0:	b10a      	cbz	r2, 801fae6 <_vfiprintf_r+0xa2>
 801fae2:	2a25      	cmp	r2, #37	; 0x25
 801fae4:	d1f9      	bne.n	801fada <_vfiprintf_r+0x96>
 801fae6:	ebba 0b04 	subs.w	fp, sl, r4
 801faea:	d00b      	beq.n	801fb04 <_vfiprintf_r+0xc0>
 801faec:	465b      	mov	r3, fp
 801faee:	4622      	mov	r2, r4
 801faf0:	4629      	mov	r1, r5
 801faf2:	4630      	mov	r0, r6
 801faf4:	f7ff ff93 	bl	801fa1e <__sfputs_r>
 801faf8:	3001      	adds	r0, #1
 801fafa:	f000 80aa 	beq.w	801fc52 <_vfiprintf_r+0x20e>
 801fafe:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801fb00:	445a      	add	r2, fp
 801fb02:	9209      	str	r2, [sp, #36]	; 0x24
 801fb04:	f89a 3000 	ldrb.w	r3, [sl]
 801fb08:	2b00      	cmp	r3, #0
 801fb0a:	f000 80a2 	beq.w	801fc52 <_vfiprintf_r+0x20e>
 801fb0e:	2300      	movs	r3, #0
 801fb10:	f04f 32ff 	mov.w	r2, #4294967295
 801fb14:	e9cd 2305 	strd	r2, r3, [sp, #20]
 801fb18:	f10a 0a01 	add.w	sl, sl, #1
 801fb1c:	9304      	str	r3, [sp, #16]
 801fb1e:	9307      	str	r3, [sp, #28]
 801fb20:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 801fb24:	931a      	str	r3, [sp, #104]	; 0x68
 801fb26:	4654      	mov	r4, sl
 801fb28:	2205      	movs	r2, #5
 801fb2a:	f814 1b01 	ldrb.w	r1, [r4], #1
 801fb2e:	4858      	ldr	r0, [pc, #352]	; (801fc90 <_vfiprintf_r+0x24c>)
 801fb30:	f7e0 fb5e 	bl	80001f0 <memchr>
 801fb34:	9a04      	ldr	r2, [sp, #16]
 801fb36:	b9d8      	cbnz	r0, 801fb70 <_vfiprintf_r+0x12c>
 801fb38:	06d1      	lsls	r1, r2, #27
 801fb3a:	bf44      	itt	mi
 801fb3c:	2320      	movmi	r3, #32
 801fb3e:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 801fb42:	0713      	lsls	r3, r2, #28
 801fb44:	bf44      	itt	mi
 801fb46:	232b      	movmi	r3, #43	; 0x2b
 801fb48:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 801fb4c:	f89a 3000 	ldrb.w	r3, [sl]
 801fb50:	2b2a      	cmp	r3, #42	; 0x2a
 801fb52:	d015      	beq.n	801fb80 <_vfiprintf_r+0x13c>
 801fb54:	9a07      	ldr	r2, [sp, #28]
 801fb56:	4654      	mov	r4, sl
 801fb58:	2000      	movs	r0, #0
 801fb5a:	f04f 0c0a 	mov.w	ip, #10
 801fb5e:	4621      	mov	r1, r4
 801fb60:	f811 3b01 	ldrb.w	r3, [r1], #1
 801fb64:	3b30      	subs	r3, #48	; 0x30
 801fb66:	2b09      	cmp	r3, #9
 801fb68:	d94e      	bls.n	801fc08 <_vfiprintf_r+0x1c4>
 801fb6a:	b1b0      	cbz	r0, 801fb9a <_vfiprintf_r+0x156>
 801fb6c:	9207      	str	r2, [sp, #28]
 801fb6e:	e014      	b.n	801fb9a <_vfiprintf_r+0x156>
 801fb70:	eba0 0308 	sub.w	r3, r0, r8
 801fb74:	fa09 f303 	lsl.w	r3, r9, r3
 801fb78:	4313      	orrs	r3, r2
 801fb7a:	9304      	str	r3, [sp, #16]
 801fb7c:	46a2      	mov	sl, r4
 801fb7e:	e7d2      	b.n	801fb26 <_vfiprintf_r+0xe2>
 801fb80:	9b03      	ldr	r3, [sp, #12]
 801fb82:	1d19      	adds	r1, r3, #4
 801fb84:	681b      	ldr	r3, [r3, #0]
 801fb86:	9103      	str	r1, [sp, #12]
 801fb88:	2b00      	cmp	r3, #0
 801fb8a:	bfbb      	ittet	lt
 801fb8c:	425b      	neglt	r3, r3
 801fb8e:	f042 0202 	orrlt.w	r2, r2, #2
 801fb92:	9307      	strge	r3, [sp, #28]
 801fb94:	9307      	strlt	r3, [sp, #28]
 801fb96:	bfb8      	it	lt
 801fb98:	9204      	strlt	r2, [sp, #16]
 801fb9a:	7823      	ldrb	r3, [r4, #0]
 801fb9c:	2b2e      	cmp	r3, #46	; 0x2e
 801fb9e:	d10c      	bne.n	801fbba <_vfiprintf_r+0x176>
 801fba0:	7863      	ldrb	r3, [r4, #1]
 801fba2:	2b2a      	cmp	r3, #42	; 0x2a
 801fba4:	d135      	bne.n	801fc12 <_vfiprintf_r+0x1ce>
 801fba6:	9b03      	ldr	r3, [sp, #12]
 801fba8:	1d1a      	adds	r2, r3, #4
 801fbaa:	681b      	ldr	r3, [r3, #0]
 801fbac:	9203      	str	r2, [sp, #12]
 801fbae:	2b00      	cmp	r3, #0
 801fbb0:	bfb8      	it	lt
 801fbb2:	f04f 33ff 	movlt.w	r3, #4294967295
 801fbb6:	3402      	adds	r4, #2
 801fbb8:	9305      	str	r3, [sp, #20]
 801fbba:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 801fca0 <_vfiprintf_r+0x25c>
 801fbbe:	7821      	ldrb	r1, [r4, #0]
 801fbc0:	2203      	movs	r2, #3
 801fbc2:	4650      	mov	r0, sl
 801fbc4:	f7e0 fb14 	bl	80001f0 <memchr>
 801fbc8:	b140      	cbz	r0, 801fbdc <_vfiprintf_r+0x198>
 801fbca:	2340      	movs	r3, #64	; 0x40
 801fbcc:	eba0 000a 	sub.w	r0, r0, sl
 801fbd0:	fa03 f000 	lsl.w	r0, r3, r0
 801fbd4:	9b04      	ldr	r3, [sp, #16]
 801fbd6:	4303      	orrs	r3, r0
 801fbd8:	3401      	adds	r4, #1
 801fbda:	9304      	str	r3, [sp, #16]
 801fbdc:	f814 1b01 	ldrb.w	r1, [r4], #1
 801fbe0:	482c      	ldr	r0, [pc, #176]	; (801fc94 <_vfiprintf_r+0x250>)
 801fbe2:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 801fbe6:	2206      	movs	r2, #6
 801fbe8:	f7e0 fb02 	bl	80001f0 <memchr>
 801fbec:	2800      	cmp	r0, #0
 801fbee:	d03f      	beq.n	801fc70 <_vfiprintf_r+0x22c>
 801fbf0:	4b29      	ldr	r3, [pc, #164]	; (801fc98 <_vfiprintf_r+0x254>)
 801fbf2:	bb1b      	cbnz	r3, 801fc3c <_vfiprintf_r+0x1f8>
 801fbf4:	9b03      	ldr	r3, [sp, #12]
 801fbf6:	3307      	adds	r3, #7
 801fbf8:	f023 0307 	bic.w	r3, r3, #7
 801fbfc:	3308      	adds	r3, #8
 801fbfe:	9303      	str	r3, [sp, #12]
 801fc00:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fc02:	443b      	add	r3, r7
 801fc04:	9309      	str	r3, [sp, #36]	; 0x24
 801fc06:	e767      	b.n	801fad8 <_vfiprintf_r+0x94>
 801fc08:	fb0c 3202 	mla	r2, ip, r2, r3
 801fc0c:	460c      	mov	r4, r1
 801fc0e:	2001      	movs	r0, #1
 801fc10:	e7a5      	b.n	801fb5e <_vfiprintf_r+0x11a>
 801fc12:	2300      	movs	r3, #0
 801fc14:	3401      	adds	r4, #1
 801fc16:	9305      	str	r3, [sp, #20]
 801fc18:	4619      	mov	r1, r3
 801fc1a:	f04f 0c0a 	mov.w	ip, #10
 801fc1e:	4620      	mov	r0, r4
 801fc20:	f810 2b01 	ldrb.w	r2, [r0], #1
 801fc24:	3a30      	subs	r2, #48	; 0x30
 801fc26:	2a09      	cmp	r2, #9
 801fc28:	d903      	bls.n	801fc32 <_vfiprintf_r+0x1ee>
 801fc2a:	2b00      	cmp	r3, #0
 801fc2c:	d0c5      	beq.n	801fbba <_vfiprintf_r+0x176>
 801fc2e:	9105      	str	r1, [sp, #20]
 801fc30:	e7c3      	b.n	801fbba <_vfiprintf_r+0x176>
 801fc32:	fb0c 2101 	mla	r1, ip, r1, r2
 801fc36:	4604      	mov	r4, r0
 801fc38:	2301      	movs	r3, #1
 801fc3a:	e7f0      	b.n	801fc1e <_vfiprintf_r+0x1da>
 801fc3c:	ab03      	add	r3, sp, #12
 801fc3e:	9300      	str	r3, [sp, #0]
 801fc40:	462a      	mov	r2, r5
 801fc42:	4b16      	ldr	r3, [pc, #88]	; (801fc9c <_vfiprintf_r+0x258>)
 801fc44:	a904      	add	r1, sp, #16
 801fc46:	4630      	mov	r0, r6
 801fc48:	f3af 8000 	nop.w
 801fc4c:	4607      	mov	r7, r0
 801fc4e:	1c78      	adds	r0, r7, #1
 801fc50:	d1d6      	bne.n	801fc00 <_vfiprintf_r+0x1bc>
 801fc52:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 801fc54:	07d9      	lsls	r1, r3, #31
 801fc56:	d405      	bmi.n	801fc64 <_vfiprintf_r+0x220>
 801fc58:	89ab      	ldrh	r3, [r5, #12]
 801fc5a:	059a      	lsls	r2, r3, #22
 801fc5c:	d402      	bmi.n	801fc64 <_vfiprintf_r+0x220>
 801fc5e:	6da8      	ldr	r0, [r5, #88]	; 0x58
 801fc60:	f7ff fdbf 	bl	801f7e2 <__retarget_lock_release_recursive>
 801fc64:	89ab      	ldrh	r3, [r5, #12]
 801fc66:	065b      	lsls	r3, r3, #25
 801fc68:	f53f af12 	bmi.w	801fa90 <_vfiprintf_r+0x4c>
 801fc6c:	9809      	ldr	r0, [sp, #36]	; 0x24
 801fc6e:	e711      	b.n	801fa94 <_vfiprintf_r+0x50>
 801fc70:	ab03      	add	r3, sp, #12
 801fc72:	9300      	str	r3, [sp, #0]
 801fc74:	462a      	mov	r2, r5
 801fc76:	4b09      	ldr	r3, [pc, #36]	; (801fc9c <_vfiprintf_r+0x258>)
 801fc78:	a904      	add	r1, sp, #16
 801fc7a:	4630      	mov	r0, r6
 801fc7c:	f000 f880 	bl	801fd80 <_printf_i>
 801fc80:	e7e4      	b.n	801fc4c <_vfiprintf_r+0x208>
 801fc82:	bf00      	nop
 801fc84:	08022fec 	.word	0x08022fec
 801fc88:	0802300c 	.word	0x0802300c
 801fc8c:	08022fcc 	.word	0x08022fcc
 801fc90:	08023030 	.word	0x08023030
 801fc94:	0802303a 	.word	0x0802303a
 801fc98:	00000000 	.word	0x00000000
 801fc9c:	0801fa1f 	.word	0x0801fa1f
 801fca0:	08023036 	.word	0x08023036

0801fca4 <_printf_common>:
 801fca4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801fca8:	4616      	mov	r6, r2
 801fcaa:	4699      	mov	r9, r3
 801fcac:	688a      	ldr	r2, [r1, #8]
 801fcae:	690b      	ldr	r3, [r1, #16]
 801fcb0:	f8dd 8020 	ldr.w	r8, [sp, #32]
 801fcb4:	4293      	cmp	r3, r2
 801fcb6:	bfb8      	it	lt
 801fcb8:	4613      	movlt	r3, r2
 801fcba:	6033      	str	r3, [r6, #0]
 801fcbc:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 801fcc0:	4607      	mov	r7, r0
 801fcc2:	460c      	mov	r4, r1
 801fcc4:	b10a      	cbz	r2, 801fcca <_printf_common+0x26>
 801fcc6:	3301      	adds	r3, #1
 801fcc8:	6033      	str	r3, [r6, #0]
 801fcca:	6823      	ldr	r3, [r4, #0]
 801fccc:	0699      	lsls	r1, r3, #26
 801fcce:	bf42      	ittt	mi
 801fcd0:	6833      	ldrmi	r3, [r6, #0]
 801fcd2:	3302      	addmi	r3, #2
 801fcd4:	6033      	strmi	r3, [r6, #0]
 801fcd6:	6825      	ldr	r5, [r4, #0]
 801fcd8:	f015 0506 	ands.w	r5, r5, #6
 801fcdc:	d106      	bne.n	801fcec <_printf_common+0x48>
 801fcde:	f104 0a19 	add.w	sl, r4, #25
 801fce2:	68e3      	ldr	r3, [r4, #12]
 801fce4:	6832      	ldr	r2, [r6, #0]
 801fce6:	1a9b      	subs	r3, r3, r2
 801fce8:	42ab      	cmp	r3, r5
 801fcea:	dc26      	bgt.n	801fd3a <_printf_common+0x96>
 801fcec:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 801fcf0:	1e13      	subs	r3, r2, #0
 801fcf2:	6822      	ldr	r2, [r4, #0]
 801fcf4:	bf18      	it	ne
 801fcf6:	2301      	movne	r3, #1
 801fcf8:	0692      	lsls	r2, r2, #26
 801fcfa:	d42b      	bmi.n	801fd54 <_printf_common+0xb0>
 801fcfc:	f104 0243 	add.w	r2, r4, #67	; 0x43
 801fd00:	4649      	mov	r1, r9
 801fd02:	4638      	mov	r0, r7
 801fd04:	47c0      	blx	r8
 801fd06:	3001      	adds	r0, #1
 801fd08:	d01e      	beq.n	801fd48 <_printf_common+0xa4>
 801fd0a:	6823      	ldr	r3, [r4, #0]
 801fd0c:	68e5      	ldr	r5, [r4, #12]
 801fd0e:	6832      	ldr	r2, [r6, #0]
 801fd10:	f003 0306 	and.w	r3, r3, #6
 801fd14:	2b04      	cmp	r3, #4
 801fd16:	bf08      	it	eq
 801fd18:	1aad      	subeq	r5, r5, r2
 801fd1a:	68a3      	ldr	r3, [r4, #8]
 801fd1c:	6922      	ldr	r2, [r4, #16]
 801fd1e:	bf0c      	ite	eq
 801fd20:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 801fd24:	2500      	movne	r5, #0
 801fd26:	4293      	cmp	r3, r2
 801fd28:	bfc4      	itt	gt
 801fd2a:	1a9b      	subgt	r3, r3, r2
 801fd2c:	18ed      	addgt	r5, r5, r3
 801fd2e:	2600      	movs	r6, #0
 801fd30:	341a      	adds	r4, #26
 801fd32:	42b5      	cmp	r5, r6
 801fd34:	d11a      	bne.n	801fd6c <_printf_common+0xc8>
 801fd36:	2000      	movs	r0, #0
 801fd38:	e008      	b.n	801fd4c <_printf_common+0xa8>
 801fd3a:	2301      	movs	r3, #1
 801fd3c:	4652      	mov	r2, sl
 801fd3e:	4649      	mov	r1, r9
 801fd40:	4638      	mov	r0, r7
 801fd42:	47c0      	blx	r8
 801fd44:	3001      	adds	r0, #1
 801fd46:	d103      	bne.n	801fd50 <_printf_common+0xac>
 801fd48:	f04f 30ff 	mov.w	r0, #4294967295
 801fd4c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801fd50:	3501      	adds	r5, #1
 801fd52:	e7c6      	b.n	801fce2 <_printf_common+0x3e>
 801fd54:	18e1      	adds	r1, r4, r3
 801fd56:	1c5a      	adds	r2, r3, #1
 801fd58:	2030      	movs	r0, #48	; 0x30
 801fd5a:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 801fd5e:	4422      	add	r2, r4
 801fd60:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 801fd64:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 801fd68:	3302      	adds	r3, #2
 801fd6a:	e7c7      	b.n	801fcfc <_printf_common+0x58>
 801fd6c:	2301      	movs	r3, #1
 801fd6e:	4622      	mov	r2, r4
 801fd70:	4649      	mov	r1, r9
 801fd72:	4638      	mov	r0, r7
 801fd74:	47c0      	blx	r8
 801fd76:	3001      	adds	r0, #1
 801fd78:	d0e6      	beq.n	801fd48 <_printf_common+0xa4>
 801fd7a:	3601      	adds	r6, #1
 801fd7c:	e7d9      	b.n	801fd32 <_printf_common+0x8e>
	...

0801fd80 <_printf_i>:
 801fd80:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801fd84:	7e0f      	ldrb	r7, [r1, #24]
 801fd86:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801fd88:	2f78      	cmp	r7, #120	; 0x78
 801fd8a:	4691      	mov	r9, r2
 801fd8c:	4680      	mov	r8, r0
 801fd8e:	460c      	mov	r4, r1
 801fd90:	469a      	mov	sl, r3
 801fd92:	f101 0243 	add.w	r2, r1, #67	; 0x43
 801fd96:	d807      	bhi.n	801fda8 <_printf_i+0x28>
 801fd98:	2f62      	cmp	r7, #98	; 0x62
 801fd9a:	d80a      	bhi.n	801fdb2 <_printf_i+0x32>
 801fd9c:	2f00      	cmp	r7, #0
 801fd9e:	f000 80d8 	beq.w	801ff52 <_printf_i+0x1d2>
 801fda2:	2f58      	cmp	r7, #88	; 0x58
 801fda4:	f000 80a3 	beq.w	801feee <_printf_i+0x16e>
 801fda8:	f104 0542 	add.w	r5, r4, #66	; 0x42
 801fdac:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 801fdb0:	e03a      	b.n	801fe28 <_printf_i+0xa8>
 801fdb2:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 801fdb6:	2b15      	cmp	r3, #21
 801fdb8:	d8f6      	bhi.n	801fda8 <_printf_i+0x28>
 801fdba:	a101      	add	r1, pc, #4	; (adr r1, 801fdc0 <_printf_i+0x40>)
 801fdbc:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 801fdc0:	0801fe19 	.word	0x0801fe19
 801fdc4:	0801fe2d 	.word	0x0801fe2d
 801fdc8:	0801fda9 	.word	0x0801fda9
 801fdcc:	0801fda9 	.word	0x0801fda9
 801fdd0:	0801fda9 	.word	0x0801fda9
 801fdd4:	0801fda9 	.word	0x0801fda9
 801fdd8:	0801fe2d 	.word	0x0801fe2d
 801fddc:	0801fda9 	.word	0x0801fda9
 801fde0:	0801fda9 	.word	0x0801fda9
 801fde4:	0801fda9 	.word	0x0801fda9
 801fde8:	0801fda9 	.word	0x0801fda9
 801fdec:	0801ff39 	.word	0x0801ff39
 801fdf0:	0801fe5d 	.word	0x0801fe5d
 801fdf4:	0801ff1b 	.word	0x0801ff1b
 801fdf8:	0801fda9 	.word	0x0801fda9
 801fdfc:	0801fda9 	.word	0x0801fda9
 801fe00:	0801ff5b 	.word	0x0801ff5b
 801fe04:	0801fda9 	.word	0x0801fda9
 801fe08:	0801fe5d 	.word	0x0801fe5d
 801fe0c:	0801fda9 	.word	0x0801fda9
 801fe10:	0801fda9 	.word	0x0801fda9
 801fe14:	0801ff23 	.word	0x0801ff23
 801fe18:	682b      	ldr	r3, [r5, #0]
 801fe1a:	1d1a      	adds	r2, r3, #4
 801fe1c:	681b      	ldr	r3, [r3, #0]
 801fe1e:	602a      	str	r2, [r5, #0]
 801fe20:	f104 0542 	add.w	r5, r4, #66	; 0x42
 801fe24:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 801fe28:	2301      	movs	r3, #1
 801fe2a:	e0a3      	b.n	801ff74 <_printf_i+0x1f4>
 801fe2c:	6820      	ldr	r0, [r4, #0]
 801fe2e:	6829      	ldr	r1, [r5, #0]
 801fe30:	0606      	lsls	r6, r0, #24
 801fe32:	f101 0304 	add.w	r3, r1, #4
 801fe36:	d50a      	bpl.n	801fe4e <_printf_i+0xce>
 801fe38:	680e      	ldr	r6, [r1, #0]
 801fe3a:	602b      	str	r3, [r5, #0]
 801fe3c:	2e00      	cmp	r6, #0
 801fe3e:	da03      	bge.n	801fe48 <_printf_i+0xc8>
 801fe40:	232d      	movs	r3, #45	; 0x2d
 801fe42:	4276      	negs	r6, r6
 801fe44:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 801fe48:	485e      	ldr	r0, [pc, #376]	; (801ffc4 <_printf_i+0x244>)
 801fe4a:	230a      	movs	r3, #10
 801fe4c:	e019      	b.n	801fe82 <_printf_i+0x102>
 801fe4e:	680e      	ldr	r6, [r1, #0]
 801fe50:	602b      	str	r3, [r5, #0]
 801fe52:	f010 0f40 	tst.w	r0, #64	; 0x40
 801fe56:	bf18      	it	ne
 801fe58:	b236      	sxthne	r6, r6
 801fe5a:	e7ef      	b.n	801fe3c <_printf_i+0xbc>
 801fe5c:	682b      	ldr	r3, [r5, #0]
 801fe5e:	6820      	ldr	r0, [r4, #0]
 801fe60:	1d19      	adds	r1, r3, #4
 801fe62:	6029      	str	r1, [r5, #0]
 801fe64:	0601      	lsls	r1, r0, #24
 801fe66:	d501      	bpl.n	801fe6c <_printf_i+0xec>
 801fe68:	681e      	ldr	r6, [r3, #0]
 801fe6a:	e002      	b.n	801fe72 <_printf_i+0xf2>
 801fe6c:	0646      	lsls	r6, r0, #25
 801fe6e:	d5fb      	bpl.n	801fe68 <_printf_i+0xe8>
 801fe70:	881e      	ldrh	r6, [r3, #0]
 801fe72:	4854      	ldr	r0, [pc, #336]	; (801ffc4 <_printf_i+0x244>)
 801fe74:	2f6f      	cmp	r7, #111	; 0x6f
 801fe76:	bf0c      	ite	eq
 801fe78:	2308      	moveq	r3, #8
 801fe7a:	230a      	movne	r3, #10
 801fe7c:	2100      	movs	r1, #0
 801fe7e:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 801fe82:	6865      	ldr	r5, [r4, #4]
 801fe84:	60a5      	str	r5, [r4, #8]
 801fe86:	2d00      	cmp	r5, #0
 801fe88:	bfa2      	ittt	ge
 801fe8a:	6821      	ldrge	r1, [r4, #0]
 801fe8c:	f021 0104 	bicge.w	r1, r1, #4
 801fe90:	6021      	strge	r1, [r4, #0]
 801fe92:	b90e      	cbnz	r6, 801fe98 <_printf_i+0x118>
 801fe94:	2d00      	cmp	r5, #0
 801fe96:	d04d      	beq.n	801ff34 <_printf_i+0x1b4>
 801fe98:	4615      	mov	r5, r2
 801fe9a:	fbb6 f1f3 	udiv	r1, r6, r3
 801fe9e:	fb03 6711 	mls	r7, r3, r1, r6
 801fea2:	5dc7      	ldrb	r7, [r0, r7]
 801fea4:	f805 7d01 	strb.w	r7, [r5, #-1]!
 801fea8:	4637      	mov	r7, r6
 801feaa:	42bb      	cmp	r3, r7
 801feac:	460e      	mov	r6, r1
 801feae:	d9f4      	bls.n	801fe9a <_printf_i+0x11a>
 801feb0:	2b08      	cmp	r3, #8
 801feb2:	d10b      	bne.n	801fecc <_printf_i+0x14c>
 801feb4:	6823      	ldr	r3, [r4, #0]
 801feb6:	07de      	lsls	r6, r3, #31
 801feb8:	d508      	bpl.n	801fecc <_printf_i+0x14c>
 801feba:	6923      	ldr	r3, [r4, #16]
 801febc:	6861      	ldr	r1, [r4, #4]
 801febe:	4299      	cmp	r1, r3
 801fec0:	bfde      	ittt	le
 801fec2:	2330      	movle	r3, #48	; 0x30
 801fec4:	f805 3c01 	strble.w	r3, [r5, #-1]
 801fec8:	f105 35ff 	addle.w	r5, r5, #4294967295
 801fecc:	1b52      	subs	r2, r2, r5
 801fece:	6122      	str	r2, [r4, #16]
 801fed0:	f8cd a000 	str.w	sl, [sp]
 801fed4:	464b      	mov	r3, r9
 801fed6:	aa03      	add	r2, sp, #12
 801fed8:	4621      	mov	r1, r4
 801feda:	4640      	mov	r0, r8
 801fedc:	f7ff fee2 	bl	801fca4 <_printf_common>
 801fee0:	3001      	adds	r0, #1
 801fee2:	d14c      	bne.n	801ff7e <_printf_i+0x1fe>
 801fee4:	f04f 30ff 	mov.w	r0, #4294967295
 801fee8:	b004      	add	sp, #16
 801feea:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801feee:	4835      	ldr	r0, [pc, #212]	; (801ffc4 <_printf_i+0x244>)
 801fef0:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 801fef4:	6829      	ldr	r1, [r5, #0]
 801fef6:	6823      	ldr	r3, [r4, #0]
 801fef8:	f851 6b04 	ldr.w	r6, [r1], #4
 801fefc:	6029      	str	r1, [r5, #0]
 801fefe:	061d      	lsls	r5, r3, #24
 801ff00:	d514      	bpl.n	801ff2c <_printf_i+0x1ac>
 801ff02:	07df      	lsls	r7, r3, #31
 801ff04:	bf44      	itt	mi
 801ff06:	f043 0320 	orrmi.w	r3, r3, #32
 801ff0a:	6023      	strmi	r3, [r4, #0]
 801ff0c:	b91e      	cbnz	r6, 801ff16 <_printf_i+0x196>
 801ff0e:	6823      	ldr	r3, [r4, #0]
 801ff10:	f023 0320 	bic.w	r3, r3, #32
 801ff14:	6023      	str	r3, [r4, #0]
 801ff16:	2310      	movs	r3, #16
 801ff18:	e7b0      	b.n	801fe7c <_printf_i+0xfc>
 801ff1a:	6823      	ldr	r3, [r4, #0]
 801ff1c:	f043 0320 	orr.w	r3, r3, #32
 801ff20:	6023      	str	r3, [r4, #0]
 801ff22:	2378      	movs	r3, #120	; 0x78
 801ff24:	4828      	ldr	r0, [pc, #160]	; (801ffc8 <_printf_i+0x248>)
 801ff26:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 801ff2a:	e7e3      	b.n	801fef4 <_printf_i+0x174>
 801ff2c:	0659      	lsls	r1, r3, #25
 801ff2e:	bf48      	it	mi
 801ff30:	b2b6      	uxthmi	r6, r6
 801ff32:	e7e6      	b.n	801ff02 <_printf_i+0x182>
 801ff34:	4615      	mov	r5, r2
 801ff36:	e7bb      	b.n	801feb0 <_printf_i+0x130>
 801ff38:	682b      	ldr	r3, [r5, #0]
 801ff3a:	6826      	ldr	r6, [r4, #0]
 801ff3c:	6961      	ldr	r1, [r4, #20]
 801ff3e:	1d18      	adds	r0, r3, #4
 801ff40:	6028      	str	r0, [r5, #0]
 801ff42:	0635      	lsls	r5, r6, #24
 801ff44:	681b      	ldr	r3, [r3, #0]
 801ff46:	d501      	bpl.n	801ff4c <_printf_i+0x1cc>
 801ff48:	6019      	str	r1, [r3, #0]
 801ff4a:	e002      	b.n	801ff52 <_printf_i+0x1d2>
 801ff4c:	0670      	lsls	r0, r6, #25
 801ff4e:	d5fb      	bpl.n	801ff48 <_printf_i+0x1c8>
 801ff50:	8019      	strh	r1, [r3, #0]
 801ff52:	2300      	movs	r3, #0
 801ff54:	6123      	str	r3, [r4, #16]
 801ff56:	4615      	mov	r5, r2
 801ff58:	e7ba      	b.n	801fed0 <_printf_i+0x150>
 801ff5a:	682b      	ldr	r3, [r5, #0]
 801ff5c:	1d1a      	adds	r2, r3, #4
 801ff5e:	602a      	str	r2, [r5, #0]
 801ff60:	681d      	ldr	r5, [r3, #0]
 801ff62:	6862      	ldr	r2, [r4, #4]
 801ff64:	2100      	movs	r1, #0
 801ff66:	4628      	mov	r0, r5
 801ff68:	f7e0 f942 	bl	80001f0 <memchr>
 801ff6c:	b108      	cbz	r0, 801ff72 <_printf_i+0x1f2>
 801ff6e:	1b40      	subs	r0, r0, r5
 801ff70:	6060      	str	r0, [r4, #4]
 801ff72:	6863      	ldr	r3, [r4, #4]
 801ff74:	6123      	str	r3, [r4, #16]
 801ff76:	2300      	movs	r3, #0
 801ff78:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 801ff7c:	e7a8      	b.n	801fed0 <_printf_i+0x150>
 801ff7e:	6923      	ldr	r3, [r4, #16]
 801ff80:	462a      	mov	r2, r5
 801ff82:	4649      	mov	r1, r9
 801ff84:	4640      	mov	r0, r8
 801ff86:	47d0      	blx	sl
 801ff88:	3001      	adds	r0, #1
 801ff8a:	d0ab      	beq.n	801fee4 <_printf_i+0x164>
 801ff8c:	6823      	ldr	r3, [r4, #0]
 801ff8e:	079b      	lsls	r3, r3, #30
 801ff90:	d413      	bmi.n	801ffba <_printf_i+0x23a>
 801ff92:	68e0      	ldr	r0, [r4, #12]
 801ff94:	9b03      	ldr	r3, [sp, #12]
 801ff96:	4298      	cmp	r0, r3
 801ff98:	bfb8      	it	lt
 801ff9a:	4618      	movlt	r0, r3
 801ff9c:	e7a4      	b.n	801fee8 <_printf_i+0x168>
 801ff9e:	2301      	movs	r3, #1
 801ffa0:	4632      	mov	r2, r6
 801ffa2:	4649      	mov	r1, r9
 801ffa4:	4640      	mov	r0, r8
 801ffa6:	47d0      	blx	sl
 801ffa8:	3001      	adds	r0, #1
 801ffaa:	d09b      	beq.n	801fee4 <_printf_i+0x164>
 801ffac:	3501      	adds	r5, #1
 801ffae:	68e3      	ldr	r3, [r4, #12]
 801ffb0:	9903      	ldr	r1, [sp, #12]
 801ffb2:	1a5b      	subs	r3, r3, r1
 801ffb4:	42ab      	cmp	r3, r5
 801ffb6:	dcf2      	bgt.n	801ff9e <_printf_i+0x21e>
 801ffb8:	e7eb      	b.n	801ff92 <_printf_i+0x212>
 801ffba:	2500      	movs	r5, #0
 801ffbc:	f104 0619 	add.w	r6, r4, #25
 801ffc0:	e7f5      	b.n	801ffae <_printf_i+0x22e>
 801ffc2:	bf00      	nop
 801ffc4:	08023041 	.word	0x08023041
 801ffc8:	08023052 	.word	0x08023052

0801ffcc <cleanup_glue>:
 801ffcc:	b538      	push	{r3, r4, r5, lr}
 801ffce:	460c      	mov	r4, r1
 801ffd0:	6809      	ldr	r1, [r1, #0]
 801ffd2:	4605      	mov	r5, r0
 801ffd4:	b109      	cbz	r1, 801ffda <cleanup_glue+0xe>
 801ffd6:	f7ff fff9 	bl	801ffcc <cleanup_glue>
 801ffda:	4621      	mov	r1, r4
 801ffdc:	4628      	mov	r0, r5
 801ffde:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801ffe2:	f7ff bc25 	b.w	801f830 <_free_r>
	...

0801ffe8 <_reclaim_reent>:
 801ffe8:	4b2c      	ldr	r3, [pc, #176]	; (802009c <_reclaim_reent+0xb4>)
 801ffea:	681b      	ldr	r3, [r3, #0]
 801ffec:	4283      	cmp	r3, r0
 801ffee:	b570      	push	{r4, r5, r6, lr}
 801fff0:	4604      	mov	r4, r0
 801fff2:	d051      	beq.n	8020098 <_reclaim_reent+0xb0>
 801fff4:	6a43      	ldr	r3, [r0, #36]	; 0x24
 801fff6:	b143      	cbz	r3, 802000a <_reclaim_reent+0x22>
 801fff8:	68db      	ldr	r3, [r3, #12]
 801fffa:	2b00      	cmp	r3, #0
 801fffc:	d14a      	bne.n	8020094 <_reclaim_reent+0xac>
 801fffe:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8020000:	6819      	ldr	r1, [r3, #0]
 8020002:	b111      	cbz	r1, 802000a <_reclaim_reent+0x22>
 8020004:	4620      	mov	r0, r4
 8020006:	f7ff fc13 	bl	801f830 <_free_r>
 802000a:	6961      	ldr	r1, [r4, #20]
 802000c:	b111      	cbz	r1, 8020014 <_reclaim_reent+0x2c>
 802000e:	4620      	mov	r0, r4
 8020010:	f7ff fc0e 	bl	801f830 <_free_r>
 8020014:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8020016:	b111      	cbz	r1, 802001e <_reclaim_reent+0x36>
 8020018:	4620      	mov	r0, r4
 802001a:	f7ff fc09 	bl	801f830 <_free_r>
 802001e:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8020020:	b111      	cbz	r1, 8020028 <_reclaim_reent+0x40>
 8020022:	4620      	mov	r0, r4
 8020024:	f7ff fc04 	bl	801f830 <_free_r>
 8020028:	6be1      	ldr	r1, [r4, #60]	; 0x3c
 802002a:	b111      	cbz	r1, 8020032 <_reclaim_reent+0x4a>
 802002c:	4620      	mov	r0, r4
 802002e:	f7ff fbff 	bl	801f830 <_free_r>
 8020032:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8020034:	b111      	cbz	r1, 802003c <_reclaim_reent+0x54>
 8020036:	4620      	mov	r0, r4
 8020038:	f7ff fbfa 	bl	801f830 <_free_r>
 802003c:	6de1      	ldr	r1, [r4, #92]	; 0x5c
 802003e:	b111      	cbz	r1, 8020046 <_reclaim_reent+0x5e>
 8020040:	4620      	mov	r0, r4
 8020042:	f7ff fbf5 	bl	801f830 <_free_r>
 8020046:	6da1      	ldr	r1, [r4, #88]	; 0x58
 8020048:	b111      	cbz	r1, 8020050 <_reclaim_reent+0x68>
 802004a:	4620      	mov	r0, r4
 802004c:	f7ff fbf0 	bl	801f830 <_free_r>
 8020050:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8020052:	b111      	cbz	r1, 802005a <_reclaim_reent+0x72>
 8020054:	4620      	mov	r0, r4
 8020056:	f7ff fbeb 	bl	801f830 <_free_r>
 802005a:	69a3      	ldr	r3, [r4, #24]
 802005c:	b1e3      	cbz	r3, 8020098 <_reclaim_reent+0xb0>
 802005e:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8020060:	4620      	mov	r0, r4
 8020062:	4798      	blx	r3
 8020064:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8020066:	b1b9      	cbz	r1, 8020098 <_reclaim_reent+0xb0>
 8020068:	4620      	mov	r0, r4
 802006a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 802006e:	f7ff bfad 	b.w	801ffcc <cleanup_glue>
 8020072:	5949      	ldr	r1, [r1, r5]
 8020074:	b941      	cbnz	r1, 8020088 <_reclaim_reent+0xa0>
 8020076:	3504      	adds	r5, #4
 8020078:	6a63      	ldr	r3, [r4, #36]	; 0x24
 802007a:	2d80      	cmp	r5, #128	; 0x80
 802007c:	68d9      	ldr	r1, [r3, #12]
 802007e:	d1f8      	bne.n	8020072 <_reclaim_reent+0x8a>
 8020080:	4620      	mov	r0, r4
 8020082:	f7ff fbd5 	bl	801f830 <_free_r>
 8020086:	e7ba      	b.n	801fffe <_reclaim_reent+0x16>
 8020088:	680e      	ldr	r6, [r1, #0]
 802008a:	4620      	mov	r0, r4
 802008c:	f7ff fbd0 	bl	801f830 <_free_r>
 8020090:	4631      	mov	r1, r6
 8020092:	e7ef      	b.n	8020074 <_reclaim_reent+0x8c>
 8020094:	2500      	movs	r5, #0
 8020096:	e7ef      	b.n	8020078 <_reclaim_reent+0x90>
 8020098:	bd70      	pop	{r4, r5, r6, pc}
 802009a:	bf00      	nop
 802009c:	20000104 	.word	0x20000104

080200a0 <_sbrk_r>:
 80200a0:	b538      	push	{r3, r4, r5, lr}
 80200a2:	4d06      	ldr	r5, [pc, #24]	; (80200bc <_sbrk_r+0x1c>)
 80200a4:	2300      	movs	r3, #0
 80200a6:	4604      	mov	r4, r0
 80200a8:	4608      	mov	r0, r1
 80200aa:	602b      	str	r3, [r5, #0]
 80200ac:	f7e1 ff8a 	bl	8001fc4 <_sbrk>
 80200b0:	1c43      	adds	r3, r0, #1
 80200b2:	d102      	bne.n	80200ba <_sbrk_r+0x1a>
 80200b4:	682b      	ldr	r3, [r5, #0]
 80200b6:	b103      	cbz	r3, 80200ba <_sbrk_r+0x1a>
 80200b8:	6023      	str	r3, [r4, #0]
 80200ba:	bd38      	pop	{r3, r4, r5, pc}
 80200bc:	20017670 	.word	0x20017670

080200c0 <_raise_r>:
 80200c0:	291f      	cmp	r1, #31
 80200c2:	b538      	push	{r3, r4, r5, lr}
 80200c4:	4604      	mov	r4, r0
 80200c6:	460d      	mov	r5, r1
 80200c8:	d904      	bls.n	80200d4 <_raise_r+0x14>
 80200ca:	2316      	movs	r3, #22
 80200cc:	6003      	str	r3, [r0, #0]
 80200ce:	f04f 30ff 	mov.w	r0, #4294967295
 80200d2:	bd38      	pop	{r3, r4, r5, pc}
 80200d4:	6c42      	ldr	r2, [r0, #68]	; 0x44
 80200d6:	b112      	cbz	r2, 80200de <_raise_r+0x1e>
 80200d8:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 80200dc:	b94b      	cbnz	r3, 80200f2 <_raise_r+0x32>
 80200de:	4620      	mov	r0, r4
 80200e0:	f000 f830 	bl	8020144 <_getpid_r>
 80200e4:	462a      	mov	r2, r5
 80200e6:	4601      	mov	r1, r0
 80200e8:	4620      	mov	r0, r4
 80200ea:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80200ee:	f000 b817 	b.w	8020120 <_kill_r>
 80200f2:	2b01      	cmp	r3, #1
 80200f4:	d00a      	beq.n	802010c <_raise_r+0x4c>
 80200f6:	1c59      	adds	r1, r3, #1
 80200f8:	d103      	bne.n	8020102 <_raise_r+0x42>
 80200fa:	2316      	movs	r3, #22
 80200fc:	6003      	str	r3, [r0, #0]
 80200fe:	2001      	movs	r0, #1
 8020100:	e7e7      	b.n	80200d2 <_raise_r+0x12>
 8020102:	2400      	movs	r4, #0
 8020104:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 8020108:	4628      	mov	r0, r5
 802010a:	4798      	blx	r3
 802010c:	2000      	movs	r0, #0
 802010e:	e7e0      	b.n	80200d2 <_raise_r+0x12>

08020110 <raise>:
 8020110:	4b02      	ldr	r3, [pc, #8]	; (802011c <raise+0xc>)
 8020112:	4601      	mov	r1, r0
 8020114:	6818      	ldr	r0, [r3, #0]
 8020116:	f7ff bfd3 	b.w	80200c0 <_raise_r>
 802011a:	bf00      	nop
 802011c:	20000104 	.word	0x20000104

08020120 <_kill_r>:
 8020120:	b538      	push	{r3, r4, r5, lr}
 8020122:	4d07      	ldr	r5, [pc, #28]	; (8020140 <_kill_r+0x20>)
 8020124:	2300      	movs	r3, #0
 8020126:	4604      	mov	r4, r0
 8020128:	4608      	mov	r0, r1
 802012a:	4611      	mov	r1, r2
 802012c:	602b      	str	r3, [r5, #0]
 802012e:	f7e1 ff13 	bl	8001f58 <_kill>
 8020132:	1c43      	adds	r3, r0, #1
 8020134:	d102      	bne.n	802013c <_kill_r+0x1c>
 8020136:	682b      	ldr	r3, [r5, #0]
 8020138:	b103      	cbz	r3, 802013c <_kill_r+0x1c>
 802013a:	6023      	str	r3, [r4, #0]
 802013c:	bd38      	pop	{r3, r4, r5, pc}
 802013e:	bf00      	nop
 8020140:	20017670 	.word	0x20017670

08020144 <_getpid_r>:
 8020144:	f7e1 bf06 	b.w	8001f54 <_getpid>

08020148 <__sread>:
 8020148:	b510      	push	{r4, lr}
 802014a:	460c      	mov	r4, r1
 802014c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8020150:	f000 fac8 	bl	80206e4 <_read_r>
 8020154:	2800      	cmp	r0, #0
 8020156:	bfab      	itete	ge
 8020158:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 802015a:	89a3      	ldrhlt	r3, [r4, #12]
 802015c:	181b      	addge	r3, r3, r0
 802015e:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8020162:	bfac      	ite	ge
 8020164:	6563      	strge	r3, [r4, #84]	; 0x54
 8020166:	81a3      	strhlt	r3, [r4, #12]
 8020168:	bd10      	pop	{r4, pc}

0802016a <__swrite>:
 802016a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802016e:	461f      	mov	r7, r3
 8020170:	898b      	ldrh	r3, [r1, #12]
 8020172:	05db      	lsls	r3, r3, #23
 8020174:	4605      	mov	r5, r0
 8020176:	460c      	mov	r4, r1
 8020178:	4616      	mov	r6, r2
 802017a:	d505      	bpl.n	8020188 <__swrite+0x1e>
 802017c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8020180:	2302      	movs	r3, #2
 8020182:	2200      	movs	r2, #0
 8020184:	f000 fa2a 	bl	80205dc <_lseek_r>
 8020188:	89a3      	ldrh	r3, [r4, #12]
 802018a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802018e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8020192:	81a3      	strh	r3, [r4, #12]
 8020194:	4632      	mov	r2, r6
 8020196:	463b      	mov	r3, r7
 8020198:	4628      	mov	r0, r5
 802019a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802019e:	f000 b869 	b.w	8020274 <_write_r>

080201a2 <__sseek>:
 80201a2:	b510      	push	{r4, lr}
 80201a4:	460c      	mov	r4, r1
 80201a6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80201aa:	f000 fa17 	bl	80205dc <_lseek_r>
 80201ae:	1c43      	adds	r3, r0, #1
 80201b0:	89a3      	ldrh	r3, [r4, #12]
 80201b2:	bf15      	itete	ne
 80201b4:	6560      	strne	r0, [r4, #84]	; 0x54
 80201b6:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 80201ba:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 80201be:	81a3      	strheq	r3, [r4, #12]
 80201c0:	bf18      	it	ne
 80201c2:	81a3      	strhne	r3, [r4, #12]
 80201c4:	bd10      	pop	{r4, pc}

080201c6 <__sclose>:
 80201c6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80201ca:	f000 b935 	b.w	8020438 <_close_r>
	...

080201d0 <__swbuf_r>:
 80201d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80201d2:	460e      	mov	r6, r1
 80201d4:	4614      	mov	r4, r2
 80201d6:	4605      	mov	r5, r0
 80201d8:	b118      	cbz	r0, 80201e2 <__swbuf_r+0x12>
 80201da:	6983      	ldr	r3, [r0, #24]
 80201dc:	b90b      	cbnz	r3, 80201e2 <__swbuf_r+0x12>
 80201de:	f7ff fa29 	bl	801f634 <__sinit>
 80201e2:	4b21      	ldr	r3, [pc, #132]	; (8020268 <__swbuf_r+0x98>)
 80201e4:	429c      	cmp	r4, r3
 80201e6:	d12b      	bne.n	8020240 <__swbuf_r+0x70>
 80201e8:	686c      	ldr	r4, [r5, #4]
 80201ea:	69a3      	ldr	r3, [r4, #24]
 80201ec:	60a3      	str	r3, [r4, #8]
 80201ee:	89a3      	ldrh	r3, [r4, #12]
 80201f0:	071a      	lsls	r2, r3, #28
 80201f2:	d52f      	bpl.n	8020254 <__swbuf_r+0x84>
 80201f4:	6923      	ldr	r3, [r4, #16]
 80201f6:	b36b      	cbz	r3, 8020254 <__swbuf_r+0x84>
 80201f8:	6923      	ldr	r3, [r4, #16]
 80201fa:	6820      	ldr	r0, [r4, #0]
 80201fc:	1ac0      	subs	r0, r0, r3
 80201fe:	6963      	ldr	r3, [r4, #20]
 8020200:	b2f6      	uxtb	r6, r6
 8020202:	4283      	cmp	r3, r0
 8020204:	4637      	mov	r7, r6
 8020206:	dc04      	bgt.n	8020212 <__swbuf_r+0x42>
 8020208:	4621      	mov	r1, r4
 802020a:	4628      	mov	r0, r5
 802020c:	f000 f9aa 	bl	8020564 <_fflush_r>
 8020210:	bb30      	cbnz	r0, 8020260 <__swbuf_r+0x90>
 8020212:	68a3      	ldr	r3, [r4, #8]
 8020214:	3b01      	subs	r3, #1
 8020216:	60a3      	str	r3, [r4, #8]
 8020218:	6823      	ldr	r3, [r4, #0]
 802021a:	1c5a      	adds	r2, r3, #1
 802021c:	6022      	str	r2, [r4, #0]
 802021e:	701e      	strb	r6, [r3, #0]
 8020220:	6963      	ldr	r3, [r4, #20]
 8020222:	3001      	adds	r0, #1
 8020224:	4283      	cmp	r3, r0
 8020226:	d004      	beq.n	8020232 <__swbuf_r+0x62>
 8020228:	89a3      	ldrh	r3, [r4, #12]
 802022a:	07db      	lsls	r3, r3, #31
 802022c:	d506      	bpl.n	802023c <__swbuf_r+0x6c>
 802022e:	2e0a      	cmp	r6, #10
 8020230:	d104      	bne.n	802023c <__swbuf_r+0x6c>
 8020232:	4621      	mov	r1, r4
 8020234:	4628      	mov	r0, r5
 8020236:	f000 f995 	bl	8020564 <_fflush_r>
 802023a:	b988      	cbnz	r0, 8020260 <__swbuf_r+0x90>
 802023c:	4638      	mov	r0, r7
 802023e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8020240:	4b0a      	ldr	r3, [pc, #40]	; (802026c <__swbuf_r+0x9c>)
 8020242:	429c      	cmp	r4, r3
 8020244:	d101      	bne.n	802024a <__swbuf_r+0x7a>
 8020246:	68ac      	ldr	r4, [r5, #8]
 8020248:	e7cf      	b.n	80201ea <__swbuf_r+0x1a>
 802024a:	4b09      	ldr	r3, [pc, #36]	; (8020270 <__swbuf_r+0xa0>)
 802024c:	429c      	cmp	r4, r3
 802024e:	bf08      	it	eq
 8020250:	68ec      	ldreq	r4, [r5, #12]
 8020252:	e7ca      	b.n	80201ea <__swbuf_r+0x1a>
 8020254:	4621      	mov	r1, r4
 8020256:	4628      	mov	r0, r5
 8020258:	f000 f81e 	bl	8020298 <__swsetup_r>
 802025c:	2800      	cmp	r0, #0
 802025e:	d0cb      	beq.n	80201f8 <__swbuf_r+0x28>
 8020260:	f04f 37ff 	mov.w	r7, #4294967295
 8020264:	e7ea      	b.n	802023c <__swbuf_r+0x6c>
 8020266:	bf00      	nop
 8020268:	08022fec 	.word	0x08022fec
 802026c:	0802300c 	.word	0x0802300c
 8020270:	08022fcc 	.word	0x08022fcc

08020274 <_write_r>:
 8020274:	b538      	push	{r3, r4, r5, lr}
 8020276:	4d07      	ldr	r5, [pc, #28]	; (8020294 <_write_r+0x20>)
 8020278:	4604      	mov	r4, r0
 802027a:	4608      	mov	r0, r1
 802027c:	4611      	mov	r1, r2
 802027e:	2200      	movs	r2, #0
 8020280:	602a      	str	r2, [r5, #0]
 8020282:	461a      	mov	r2, r3
 8020284:	f7e1 fe84 	bl	8001f90 <_write>
 8020288:	1c43      	adds	r3, r0, #1
 802028a:	d102      	bne.n	8020292 <_write_r+0x1e>
 802028c:	682b      	ldr	r3, [r5, #0]
 802028e:	b103      	cbz	r3, 8020292 <_write_r+0x1e>
 8020290:	6023      	str	r3, [r4, #0]
 8020292:	bd38      	pop	{r3, r4, r5, pc}
 8020294:	20017670 	.word	0x20017670

08020298 <__swsetup_r>:
 8020298:	4b32      	ldr	r3, [pc, #200]	; (8020364 <__swsetup_r+0xcc>)
 802029a:	b570      	push	{r4, r5, r6, lr}
 802029c:	681d      	ldr	r5, [r3, #0]
 802029e:	4606      	mov	r6, r0
 80202a0:	460c      	mov	r4, r1
 80202a2:	b125      	cbz	r5, 80202ae <__swsetup_r+0x16>
 80202a4:	69ab      	ldr	r3, [r5, #24]
 80202a6:	b913      	cbnz	r3, 80202ae <__swsetup_r+0x16>
 80202a8:	4628      	mov	r0, r5
 80202aa:	f7ff f9c3 	bl	801f634 <__sinit>
 80202ae:	4b2e      	ldr	r3, [pc, #184]	; (8020368 <__swsetup_r+0xd0>)
 80202b0:	429c      	cmp	r4, r3
 80202b2:	d10f      	bne.n	80202d4 <__swsetup_r+0x3c>
 80202b4:	686c      	ldr	r4, [r5, #4]
 80202b6:	89a3      	ldrh	r3, [r4, #12]
 80202b8:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80202bc:	0719      	lsls	r1, r3, #28
 80202be:	d42c      	bmi.n	802031a <__swsetup_r+0x82>
 80202c0:	06dd      	lsls	r5, r3, #27
 80202c2:	d411      	bmi.n	80202e8 <__swsetup_r+0x50>
 80202c4:	2309      	movs	r3, #9
 80202c6:	6033      	str	r3, [r6, #0]
 80202c8:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 80202cc:	81a3      	strh	r3, [r4, #12]
 80202ce:	f04f 30ff 	mov.w	r0, #4294967295
 80202d2:	e03e      	b.n	8020352 <__swsetup_r+0xba>
 80202d4:	4b25      	ldr	r3, [pc, #148]	; (802036c <__swsetup_r+0xd4>)
 80202d6:	429c      	cmp	r4, r3
 80202d8:	d101      	bne.n	80202de <__swsetup_r+0x46>
 80202da:	68ac      	ldr	r4, [r5, #8]
 80202dc:	e7eb      	b.n	80202b6 <__swsetup_r+0x1e>
 80202de:	4b24      	ldr	r3, [pc, #144]	; (8020370 <__swsetup_r+0xd8>)
 80202e0:	429c      	cmp	r4, r3
 80202e2:	bf08      	it	eq
 80202e4:	68ec      	ldreq	r4, [r5, #12]
 80202e6:	e7e6      	b.n	80202b6 <__swsetup_r+0x1e>
 80202e8:	0758      	lsls	r0, r3, #29
 80202ea:	d512      	bpl.n	8020312 <__swsetup_r+0x7a>
 80202ec:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80202ee:	b141      	cbz	r1, 8020302 <__swsetup_r+0x6a>
 80202f0:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80202f4:	4299      	cmp	r1, r3
 80202f6:	d002      	beq.n	80202fe <__swsetup_r+0x66>
 80202f8:	4630      	mov	r0, r6
 80202fa:	f7ff fa99 	bl	801f830 <_free_r>
 80202fe:	2300      	movs	r3, #0
 8020300:	6363      	str	r3, [r4, #52]	; 0x34
 8020302:	89a3      	ldrh	r3, [r4, #12]
 8020304:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8020308:	81a3      	strh	r3, [r4, #12]
 802030a:	2300      	movs	r3, #0
 802030c:	6063      	str	r3, [r4, #4]
 802030e:	6923      	ldr	r3, [r4, #16]
 8020310:	6023      	str	r3, [r4, #0]
 8020312:	89a3      	ldrh	r3, [r4, #12]
 8020314:	f043 0308 	orr.w	r3, r3, #8
 8020318:	81a3      	strh	r3, [r4, #12]
 802031a:	6923      	ldr	r3, [r4, #16]
 802031c:	b94b      	cbnz	r3, 8020332 <__swsetup_r+0x9a>
 802031e:	89a3      	ldrh	r3, [r4, #12]
 8020320:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8020324:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8020328:	d003      	beq.n	8020332 <__swsetup_r+0x9a>
 802032a:	4621      	mov	r1, r4
 802032c:	4630      	mov	r0, r6
 802032e:	f000 f98d 	bl	802064c <__smakebuf_r>
 8020332:	89a0      	ldrh	r0, [r4, #12]
 8020334:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8020338:	f010 0301 	ands.w	r3, r0, #1
 802033c:	d00a      	beq.n	8020354 <__swsetup_r+0xbc>
 802033e:	2300      	movs	r3, #0
 8020340:	60a3      	str	r3, [r4, #8]
 8020342:	6963      	ldr	r3, [r4, #20]
 8020344:	425b      	negs	r3, r3
 8020346:	61a3      	str	r3, [r4, #24]
 8020348:	6923      	ldr	r3, [r4, #16]
 802034a:	b943      	cbnz	r3, 802035e <__swsetup_r+0xc6>
 802034c:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8020350:	d1ba      	bne.n	80202c8 <__swsetup_r+0x30>
 8020352:	bd70      	pop	{r4, r5, r6, pc}
 8020354:	0781      	lsls	r1, r0, #30
 8020356:	bf58      	it	pl
 8020358:	6963      	ldrpl	r3, [r4, #20]
 802035a:	60a3      	str	r3, [r4, #8]
 802035c:	e7f4      	b.n	8020348 <__swsetup_r+0xb0>
 802035e:	2000      	movs	r0, #0
 8020360:	e7f7      	b.n	8020352 <__swsetup_r+0xba>
 8020362:	bf00      	nop
 8020364:	20000104 	.word	0x20000104
 8020368:	08022fec 	.word	0x08022fec
 802036c:	0802300c 	.word	0x0802300c
 8020370:	08022fcc 	.word	0x08022fcc

08020374 <__register_exitproc>:
 8020374:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8020378:	f8df 80b8 	ldr.w	r8, [pc, #184]	; 8020434 <__register_exitproc+0xc0>
 802037c:	4606      	mov	r6, r0
 802037e:	f8d8 0000 	ldr.w	r0, [r8]
 8020382:	461f      	mov	r7, r3
 8020384:	460d      	mov	r5, r1
 8020386:	4691      	mov	r9, r2
 8020388:	f7ff fa29 	bl	801f7de <__retarget_lock_acquire_recursive>
 802038c:	4b25      	ldr	r3, [pc, #148]	; (8020424 <__register_exitproc+0xb0>)
 802038e:	681c      	ldr	r4, [r3, #0]
 8020390:	b934      	cbnz	r4, 80203a0 <__register_exitproc+0x2c>
 8020392:	4c25      	ldr	r4, [pc, #148]	; (8020428 <__register_exitproc+0xb4>)
 8020394:	601c      	str	r4, [r3, #0]
 8020396:	4b25      	ldr	r3, [pc, #148]	; (802042c <__register_exitproc+0xb8>)
 8020398:	b113      	cbz	r3, 80203a0 <__register_exitproc+0x2c>
 802039a:	681b      	ldr	r3, [r3, #0]
 802039c:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 80203a0:	6863      	ldr	r3, [r4, #4]
 80203a2:	2b1f      	cmp	r3, #31
 80203a4:	dd07      	ble.n	80203b6 <__register_exitproc+0x42>
 80203a6:	f8d8 0000 	ldr.w	r0, [r8]
 80203aa:	f7ff fa1a 	bl	801f7e2 <__retarget_lock_release_recursive>
 80203ae:	f04f 30ff 	mov.w	r0, #4294967295
 80203b2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80203b6:	b34e      	cbz	r6, 802040c <__register_exitproc+0x98>
 80203b8:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 80203bc:	b988      	cbnz	r0, 80203e2 <__register_exitproc+0x6e>
 80203be:	4b1c      	ldr	r3, [pc, #112]	; (8020430 <__register_exitproc+0xbc>)
 80203c0:	b923      	cbnz	r3, 80203cc <__register_exitproc+0x58>
 80203c2:	f8d8 0000 	ldr.w	r0, [r8]
 80203c6:	f7ff fa0b 	bl	801f7e0 <__retarget_lock_release>
 80203ca:	e7f0      	b.n	80203ae <__register_exitproc+0x3a>
 80203cc:	f44f 7084 	mov.w	r0, #264	; 0x108
 80203d0:	f7ff fa08 	bl	801f7e4 <malloc>
 80203d4:	2800      	cmp	r0, #0
 80203d6:	d0f4      	beq.n	80203c2 <__register_exitproc+0x4e>
 80203d8:	2300      	movs	r3, #0
 80203da:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 80203de:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 80203e2:	6863      	ldr	r3, [r4, #4]
 80203e4:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 80203e8:	2201      	movs	r2, #1
 80203ea:	409a      	lsls	r2, r3
 80203ec:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 80203f0:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 80203f4:	4313      	orrs	r3, r2
 80203f6:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 80203fa:	2e02      	cmp	r6, #2
 80203fc:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 8020400:	bf02      	ittt	eq
 8020402:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 8020406:	4313      	orreq	r3, r2
 8020408:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 802040c:	6863      	ldr	r3, [r4, #4]
 802040e:	f8d8 0000 	ldr.w	r0, [r8]
 8020412:	1c5a      	adds	r2, r3, #1
 8020414:	3302      	adds	r3, #2
 8020416:	6062      	str	r2, [r4, #4]
 8020418:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 802041c:	f7ff f9e1 	bl	801f7e2 <__retarget_lock_release_recursive>
 8020420:	2000      	movs	r0, #0
 8020422:	e7c6      	b.n	80203b2 <__register_exitproc+0x3e>
 8020424:	20017700 	.word	0x20017700
 8020428:	20017674 	.word	0x20017674
 802042c:	08023064 	.word	0x08023064
 8020430:	0801f7e5 	.word	0x0801f7e5
 8020434:	20000168 	.word	0x20000168

08020438 <_close_r>:
 8020438:	b538      	push	{r3, r4, r5, lr}
 802043a:	4d06      	ldr	r5, [pc, #24]	; (8020454 <_close_r+0x1c>)
 802043c:	2300      	movs	r3, #0
 802043e:	4604      	mov	r4, r0
 8020440:	4608      	mov	r0, r1
 8020442:	602b      	str	r3, [r5, #0]
 8020444:	f7e1 fdb2 	bl	8001fac <_close>
 8020448:	1c43      	adds	r3, r0, #1
 802044a:	d102      	bne.n	8020452 <_close_r+0x1a>
 802044c:	682b      	ldr	r3, [r5, #0]
 802044e:	b103      	cbz	r3, 8020452 <_close_r+0x1a>
 8020450:	6023      	str	r3, [r4, #0]
 8020452:	bd38      	pop	{r3, r4, r5, pc}
 8020454:	20017670 	.word	0x20017670

08020458 <__sflush_r>:
 8020458:	898a      	ldrh	r2, [r1, #12]
 802045a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802045e:	4605      	mov	r5, r0
 8020460:	0710      	lsls	r0, r2, #28
 8020462:	460c      	mov	r4, r1
 8020464:	d458      	bmi.n	8020518 <__sflush_r+0xc0>
 8020466:	684b      	ldr	r3, [r1, #4]
 8020468:	2b00      	cmp	r3, #0
 802046a:	dc05      	bgt.n	8020478 <__sflush_r+0x20>
 802046c:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 802046e:	2b00      	cmp	r3, #0
 8020470:	dc02      	bgt.n	8020478 <__sflush_r+0x20>
 8020472:	2000      	movs	r0, #0
 8020474:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8020478:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 802047a:	2e00      	cmp	r6, #0
 802047c:	d0f9      	beq.n	8020472 <__sflush_r+0x1a>
 802047e:	2300      	movs	r3, #0
 8020480:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8020484:	682f      	ldr	r7, [r5, #0]
 8020486:	602b      	str	r3, [r5, #0]
 8020488:	d032      	beq.n	80204f0 <__sflush_r+0x98>
 802048a:	6d60      	ldr	r0, [r4, #84]	; 0x54
 802048c:	89a3      	ldrh	r3, [r4, #12]
 802048e:	075a      	lsls	r2, r3, #29
 8020490:	d505      	bpl.n	802049e <__sflush_r+0x46>
 8020492:	6863      	ldr	r3, [r4, #4]
 8020494:	1ac0      	subs	r0, r0, r3
 8020496:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8020498:	b10b      	cbz	r3, 802049e <__sflush_r+0x46>
 802049a:	6c23      	ldr	r3, [r4, #64]	; 0x40
 802049c:	1ac0      	subs	r0, r0, r3
 802049e:	2300      	movs	r3, #0
 80204a0:	4602      	mov	r2, r0
 80204a2:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80204a4:	6a21      	ldr	r1, [r4, #32]
 80204a6:	4628      	mov	r0, r5
 80204a8:	47b0      	blx	r6
 80204aa:	1c43      	adds	r3, r0, #1
 80204ac:	89a3      	ldrh	r3, [r4, #12]
 80204ae:	d106      	bne.n	80204be <__sflush_r+0x66>
 80204b0:	6829      	ldr	r1, [r5, #0]
 80204b2:	291d      	cmp	r1, #29
 80204b4:	d82c      	bhi.n	8020510 <__sflush_r+0xb8>
 80204b6:	4a2a      	ldr	r2, [pc, #168]	; (8020560 <__sflush_r+0x108>)
 80204b8:	40ca      	lsrs	r2, r1
 80204ba:	07d6      	lsls	r6, r2, #31
 80204bc:	d528      	bpl.n	8020510 <__sflush_r+0xb8>
 80204be:	2200      	movs	r2, #0
 80204c0:	6062      	str	r2, [r4, #4]
 80204c2:	04d9      	lsls	r1, r3, #19
 80204c4:	6922      	ldr	r2, [r4, #16]
 80204c6:	6022      	str	r2, [r4, #0]
 80204c8:	d504      	bpl.n	80204d4 <__sflush_r+0x7c>
 80204ca:	1c42      	adds	r2, r0, #1
 80204cc:	d101      	bne.n	80204d2 <__sflush_r+0x7a>
 80204ce:	682b      	ldr	r3, [r5, #0]
 80204d0:	b903      	cbnz	r3, 80204d4 <__sflush_r+0x7c>
 80204d2:	6560      	str	r0, [r4, #84]	; 0x54
 80204d4:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80204d6:	602f      	str	r7, [r5, #0]
 80204d8:	2900      	cmp	r1, #0
 80204da:	d0ca      	beq.n	8020472 <__sflush_r+0x1a>
 80204dc:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80204e0:	4299      	cmp	r1, r3
 80204e2:	d002      	beq.n	80204ea <__sflush_r+0x92>
 80204e4:	4628      	mov	r0, r5
 80204e6:	f7ff f9a3 	bl	801f830 <_free_r>
 80204ea:	2000      	movs	r0, #0
 80204ec:	6360      	str	r0, [r4, #52]	; 0x34
 80204ee:	e7c1      	b.n	8020474 <__sflush_r+0x1c>
 80204f0:	6a21      	ldr	r1, [r4, #32]
 80204f2:	2301      	movs	r3, #1
 80204f4:	4628      	mov	r0, r5
 80204f6:	47b0      	blx	r6
 80204f8:	1c41      	adds	r1, r0, #1
 80204fa:	d1c7      	bne.n	802048c <__sflush_r+0x34>
 80204fc:	682b      	ldr	r3, [r5, #0]
 80204fe:	2b00      	cmp	r3, #0
 8020500:	d0c4      	beq.n	802048c <__sflush_r+0x34>
 8020502:	2b1d      	cmp	r3, #29
 8020504:	d001      	beq.n	802050a <__sflush_r+0xb2>
 8020506:	2b16      	cmp	r3, #22
 8020508:	d101      	bne.n	802050e <__sflush_r+0xb6>
 802050a:	602f      	str	r7, [r5, #0]
 802050c:	e7b1      	b.n	8020472 <__sflush_r+0x1a>
 802050e:	89a3      	ldrh	r3, [r4, #12]
 8020510:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8020514:	81a3      	strh	r3, [r4, #12]
 8020516:	e7ad      	b.n	8020474 <__sflush_r+0x1c>
 8020518:	690f      	ldr	r7, [r1, #16]
 802051a:	2f00      	cmp	r7, #0
 802051c:	d0a9      	beq.n	8020472 <__sflush_r+0x1a>
 802051e:	0793      	lsls	r3, r2, #30
 8020520:	680e      	ldr	r6, [r1, #0]
 8020522:	bf08      	it	eq
 8020524:	694b      	ldreq	r3, [r1, #20]
 8020526:	600f      	str	r7, [r1, #0]
 8020528:	bf18      	it	ne
 802052a:	2300      	movne	r3, #0
 802052c:	eba6 0807 	sub.w	r8, r6, r7
 8020530:	608b      	str	r3, [r1, #8]
 8020532:	f1b8 0f00 	cmp.w	r8, #0
 8020536:	dd9c      	ble.n	8020472 <__sflush_r+0x1a>
 8020538:	6a21      	ldr	r1, [r4, #32]
 802053a:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 802053c:	4643      	mov	r3, r8
 802053e:	463a      	mov	r2, r7
 8020540:	4628      	mov	r0, r5
 8020542:	47b0      	blx	r6
 8020544:	2800      	cmp	r0, #0
 8020546:	dc06      	bgt.n	8020556 <__sflush_r+0xfe>
 8020548:	89a3      	ldrh	r3, [r4, #12]
 802054a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802054e:	81a3      	strh	r3, [r4, #12]
 8020550:	f04f 30ff 	mov.w	r0, #4294967295
 8020554:	e78e      	b.n	8020474 <__sflush_r+0x1c>
 8020556:	4407      	add	r7, r0
 8020558:	eba8 0800 	sub.w	r8, r8, r0
 802055c:	e7e9      	b.n	8020532 <__sflush_r+0xda>
 802055e:	bf00      	nop
 8020560:	20400001 	.word	0x20400001

08020564 <_fflush_r>:
 8020564:	b538      	push	{r3, r4, r5, lr}
 8020566:	690b      	ldr	r3, [r1, #16]
 8020568:	4605      	mov	r5, r0
 802056a:	460c      	mov	r4, r1
 802056c:	b913      	cbnz	r3, 8020574 <_fflush_r+0x10>
 802056e:	2500      	movs	r5, #0
 8020570:	4628      	mov	r0, r5
 8020572:	bd38      	pop	{r3, r4, r5, pc}
 8020574:	b118      	cbz	r0, 802057e <_fflush_r+0x1a>
 8020576:	6983      	ldr	r3, [r0, #24]
 8020578:	b90b      	cbnz	r3, 802057e <_fflush_r+0x1a>
 802057a:	f7ff f85b 	bl	801f634 <__sinit>
 802057e:	4b14      	ldr	r3, [pc, #80]	; (80205d0 <_fflush_r+0x6c>)
 8020580:	429c      	cmp	r4, r3
 8020582:	d11b      	bne.n	80205bc <_fflush_r+0x58>
 8020584:	686c      	ldr	r4, [r5, #4]
 8020586:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802058a:	2b00      	cmp	r3, #0
 802058c:	d0ef      	beq.n	802056e <_fflush_r+0xa>
 802058e:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8020590:	07d0      	lsls	r0, r2, #31
 8020592:	d404      	bmi.n	802059e <_fflush_r+0x3a>
 8020594:	0599      	lsls	r1, r3, #22
 8020596:	d402      	bmi.n	802059e <_fflush_r+0x3a>
 8020598:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802059a:	f7ff f920 	bl	801f7de <__retarget_lock_acquire_recursive>
 802059e:	4628      	mov	r0, r5
 80205a0:	4621      	mov	r1, r4
 80205a2:	f7ff ff59 	bl	8020458 <__sflush_r>
 80205a6:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80205a8:	07da      	lsls	r2, r3, #31
 80205aa:	4605      	mov	r5, r0
 80205ac:	d4e0      	bmi.n	8020570 <_fflush_r+0xc>
 80205ae:	89a3      	ldrh	r3, [r4, #12]
 80205b0:	059b      	lsls	r3, r3, #22
 80205b2:	d4dd      	bmi.n	8020570 <_fflush_r+0xc>
 80205b4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80205b6:	f7ff f914 	bl	801f7e2 <__retarget_lock_release_recursive>
 80205ba:	e7d9      	b.n	8020570 <_fflush_r+0xc>
 80205bc:	4b05      	ldr	r3, [pc, #20]	; (80205d4 <_fflush_r+0x70>)
 80205be:	429c      	cmp	r4, r3
 80205c0:	d101      	bne.n	80205c6 <_fflush_r+0x62>
 80205c2:	68ac      	ldr	r4, [r5, #8]
 80205c4:	e7df      	b.n	8020586 <_fflush_r+0x22>
 80205c6:	4b04      	ldr	r3, [pc, #16]	; (80205d8 <_fflush_r+0x74>)
 80205c8:	429c      	cmp	r4, r3
 80205ca:	bf08      	it	eq
 80205cc:	68ec      	ldreq	r4, [r5, #12]
 80205ce:	e7da      	b.n	8020586 <_fflush_r+0x22>
 80205d0:	08022fec 	.word	0x08022fec
 80205d4:	0802300c 	.word	0x0802300c
 80205d8:	08022fcc 	.word	0x08022fcc

080205dc <_lseek_r>:
 80205dc:	b538      	push	{r3, r4, r5, lr}
 80205de:	4d07      	ldr	r5, [pc, #28]	; (80205fc <_lseek_r+0x20>)
 80205e0:	4604      	mov	r4, r0
 80205e2:	4608      	mov	r0, r1
 80205e4:	4611      	mov	r1, r2
 80205e6:	2200      	movs	r2, #0
 80205e8:	602a      	str	r2, [r5, #0]
 80205ea:	461a      	mov	r2, r3
 80205ec:	f7e1 fce8 	bl	8001fc0 <_lseek>
 80205f0:	1c43      	adds	r3, r0, #1
 80205f2:	d102      	bne.n	80205fa <_lseek_r+0x1e>
 80205f4:	682b      	ldr	r3, [r5, #0]
 80205f6:	b103      	cbz	r3, 80205fa <_lseek_r+0x1e>
 80205f8:	6023      	str	r3, [r4, #0]
 80205fa:	bd38      	pop	{r3, r4, r5, pc}
 80205fc:	20017670 	.word	0x20017670

08020600 <__swhatbuf_r>:
 8020600:	b570      	push	{r4, r5, r6, lr}
 8020602:	460e      	mov	r6, r1
 8020604:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8020608:	2900      	cmp	r1, #0
 802060a:	b096      	sub	sp, #88	; 0x58
 802060c:	4614      	mov	r4, r2
 802060e:	461d      	mov	r5, r3
 8020610:	da08      	bge.n	8020624 <__swhatbuf_r+0x24>
 8020612:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 8020616:	2200      	movs	r2, #0
 8020618:	602a      	str	r2, [r5, #0]
 802061a:	061a      	lsls	r2, r3, #24
 802061c:	d410      	bmi.n	8020640 <__swhatbuf_r+0x40>
 802061e:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8020622:	e00e      	b.n	8020642 <__swhatbuf_r+0x42>
 8020624:	466a      	mov	r2, sp
 8020626:	f000 f86f 	bl	8020708 <_fstat_r>
 802062a:	2800      	cmp	r0, #0
 802062c:	dbf1      	blt.n	8020612 <__swhatbuf_r+0x12>
 802062e:	9a01      	ldr	r2, [sp, #4]
 8020630:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8020634:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8020638:	425a      	negs	r2, r3
 802063a:	415a      	adcs	r2, r3
 802063c:	602a      	str	r2, [r5, #0]
 802063e:	e7ee      	b.n	802061e <__swhatbuf_r+0x1e>
 8020640:	2340      	movs	r3, #64	; 0x40
 8020642:	2000      	movs	r0, #0
 8020644:	6023      	str	r3, [r4, #0]
 8020646:	b016      	add	sp, #88	; 0x58
 8020648:	bd70      	pop	{r4, r5, r6, pc}
	...

0802064c <__smakebuf_r>:
 802064c:	898b      	ldrh	r3, [r1, #12]
 802064e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8020650:	079d      	lsls	r5, r3, #30
 8020652:	4606      	mov	r6, r0
 8020654:	460c      	mov	r4, r1
 8020656:	d507      	bpl.n	8020668 <__smakebuf_r+0x1c>
 8020658:	f104 0347 	add.w	r3, r4, #71	; 0x47
 802065c:	6023      	str	r3, [r4, #0]
 802065e:	6123      	str	r3, [r4, #16]
 8020660:	2301      	movs	r3, #1
 8020662:	6163      	str	r3, [r4, #20]
 8020664:	b002      	add	sp, #8
 8020666:	bd70      	pop	{r4, r5, r6, pc}
 8020668:	ab01      	add	r3, sp, #4
 802066a:	466a      	mov	r2, sp
 802066c:	f7ff ffc8 	bl	8020600 <__swhatbuf_r>
 8020670:	9900      	ldr	r1, [sp, #0]
 8020672:	4605      	mov	r5, r0
 8020674:	4630      	mov	r0, r6
 8020676:	f7ff f947 	bl	801f908 <_malloc_r>
 802067a:	b948      	cbnz	r0, 8020690 <__smakebuf_r+0x44>
 802067c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8020680:	059a      	lsls	r2, r3, #22
 8020682:	d4ef      	bmi.n	8020664 <__smakebuf_r+0x18>
 8020684:	f023 0303 	bic.w	r3, r3, #3
 8020688:	f043 0302 	orr.w	r3, r3, #2
 802068c:	81a3      	strh	r3, [r4, #12]
 802068e:	e7e3      	b.n	8020658 <__smakebuf_r+0xc>
 8020690:	4b0d      	ldr	r3, [pc, #52]	; (80206c8 <__smakebuf_r+0x7c>)
 8020692:	62b3      	str	r3, [r6, #40]	; 0x28
 8020694:	89a3      	ldrh	r3, [r4, #12]
 8020696:	6020      	str	r0, [r4, #0]
 8020698:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 802069c:	81a3      	strh	r3, [r4, #12]
 802069e:	9b00      	ldr	r3, [sp, #0]
 80206a0:	6163      	str	r3, [r4, #20]
 80206a2:	9b01      	ldr	r3, [sp, #4]
 80206a4:	6120      	str	r0, [r4, #16]
 80206a6:	b15b      	cbz	r3, 80206c0 <__smakebuf_r+0x74>
 80206a8:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80206ac:	4630      	mov	r0, r6
 80206ae:	f000 f83d 	bl	802072c <_isatty_r>
 80206b2:	b128      	cbz	r0, 80206c0 <__smakebuf_r+0x74>
 80206b4:	89a3      	ldrh	r3, [r4, #12]
 80206b6:	f023 0303 	bic.w	r3, r3, #3
 80206ba:	f043 0301 	orr.w	r3, r3, #1
 80206be:	81a3      	strh	r3, [r4, #12]
 80206c0:	89a0      	ldrh	r0, [r4, #12]
 80206c2:	4305      	orrs	r5, r0
 80206c4:	81a5      	strh	r5, [r4, #12]
 80206c6:	e7cd      	b.n	8020664 <__smakebuf_r+0x18>
 80206c8:	0801f5cd 	.word	0x0801f5cd

080206cc <__malloc_lock>:
 80206cc:	4801      	ldr	r0, [pc, #4]	; (80206d4 <__malloc_lock+0x8>)
 80206ce:	f7ff b886 	b.w	801f7de <__retarget_lock_acquire_recursive>
 80206d2:	bf00      	nop
 80206d4:	2001755d 	.word	0x2001755d

080206d8 <__malloc_unlock>:
 80206d8:	4801      	ldr	r0, [pc, #4]	; (80206e0 <__malloc_unlock+0x8>)
 80206da:	f7ff b882 	b.w	801f7e2 <__retarget_lock_release_recursive>
 80206de:	bf00      	nop
 80206e0:	2001755d 	.word	0x2001755d

080206e4 <_read_r>:
 80206e4:	b538      	push	{r3, r4, r5, lr}
 80206e6:	4d07      	ldr	r5, [pc, #28]	; (8020704 <_read_r+0x20>)
 80206e8:	4604      	mov	r4, r0
 80206ea:	4608      	mov	r0, r1
 80206ec:	4611      	mov	r1, r2
 80206ee:	2200      	movs	r2, #0
 80206f0:	602a      	str	r2, [r5, #0]
 80206f2:	461a      	mov	r2, r3
 80206f4:	f7e1 fc3e 	bl	8001f74 <_read>
 80206f8:	1c43      	adds	r3, r0, #1
 80206fa:	d102      	bne.n	8020702 <_read_r+0x1e>
 80206fc:	682b      	ldr	r3, [r5, #0]
 80206fe:	b103      	cbz	r3, 8020702 <_read_r+0x1e>
 8020700:	6023      	str	r3, [r4, #0]
 8020702:	bd38      	pop	{r3, r4, r5, pc}
 8020704:	20017670 	.word	0x20017670

08020708 <_fstat_r>:
 8020708:	b538      	push	{r3, r4, r5, lr}
 802070a:	4d07      	ldr	r5, [pc, #28]	; (8020728 <_fstat_r+0x20>)
 802070c:	2300      	movs	r3, #0
 802070e:	4604      	mov	r4, r0
 8020710:	4608      	mov	r0, r1
 8020712:	4611      	mov	r1, r2
 8020714:	602b      	str	r3, [r5, #0]
 8020716:	f7e1 fc4c 	bl	8001fb2 <_fstat>
 802071a:	1c43      	adds	r3, r0, #1
 802071c:	d102      	bne.n	8020724 <_fstat_r+0x1c>
 802071e:	682b      	ldr	r3, [r5, #0]
 8020720:	b103      	cbz	r3, 8020724 <_fstat_r+0x1c>
 8020722:	6023      	str	r3, [r4, #0]
 8020724:	bd38      	pop	{r3, r4, r5, pc}
 8020726:	bf00      	nop
 8020728:	20017670 	.word	0x20017670

0802072c <_isatty_r>:
 802072c:	b538      	push	{r3, r4, r5, lr}
 802072e:	4d06      	ldr	r5, [pc, #24]	; (8020748 <_isatty_r+0x1c>)
 8020730:	2300      	movs	r3, #0
 8020732:	4604      	mov	r4, r0
 8020734:	4608      	mov	r0, r1
 8020736:	602b      	str	r3, [r5, #0]
 8020738:	f7e1 fc40 	bl	8001fbc <_isatty>
 802073c:	1c43      	adds	r3, r0, #1
 802073e:	d102      	bne.n	8020746 <_isatty_r+0x1a>
 8020740:	682b      	ldr	r3, [r5, #0]
 8020742:	b103      	cbz	r3, 8020746 <_isatty_r+0x1a>
 8020744:	6023      	str	r3, [r4, #0]
 8020746:	bd38      	pop	{r3, r4, r5, pc}
 8020748:	20017670 	.word	0x20017670

0802074c <_init>:
 802074c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802074e:	bf00      	nop
 8020750:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8020752:	bc08      	pop	{r3}
 8020754:	469e      	mov	lr, r3
 8020756:	4770      	bx	lr

08020758 <_fini>:
 8020758:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802075a:	bf00      	nop
 802075c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802075e:	bc08      	pop	{r3}
 8020760:	469e      	mov	lr, r3
 8020762:	4770      	bx	lr
